1
00:00:00,000 --> 00:00:01,100
So, we can get good.

2
00:00:02,400 --> 00:00:04,500
Okay, hello everyone, and welcome to handmade hero show.

3
00:00:04,500 --> 00:00:06,500
Where we code a complete game from scratch.

4
00:00:06,600 --> 00:00:08,000
No engine, no libraries.

5
00:00:08,200 --> 00:00:12,400
Just our own like sagacious, little fingers typing away.

6
00:00:13,000 --> 00:00:16,000
And basically, we're doing this so that we can see the complete set of

7
00:00:16,000 --> 00:00:19,000
code and know everything about the complete set of code necessary to

8
00:00:19,000 --> 00:00:21,600
run a game on a modern computer.

9
00:00:22,000 --> 00:00:24,900
And right now, we're at the point where we have decided to start

10
00:00:24,900 --> 00:00:25,800
looking at.

11
00:00:26,300 --> 00:00:29,500
We're in the middle of doing engine architecture work, and we decided

12
00:00:29,500 --> 00:00:31,700
to start looking at how we want to handle.

13
00:00:32,200 --> 00:00:33,000
Concept that.

14
00:00:33,000 --> 00:00:37,100
When two things, Collide meaning, you know, like say, for example, a

15
00:00:37,100 --> 00:00:40,600
sword that has been thrown touches an enemy, we want to start

16
00:00:40,600 --> 00:00:41,800
responding to these sorts of things.

17
00:00:41,800 --> 00:00:46,100
You want to start creating sort of that, that part of the program,

18
00:00:46,100 --> 00:00:50,100
which is where gameplay really starts to take shape, actually, which

19
00:00:50,100 --> 00:00:52,300
is interactions between things.

20
00:00:52,300 --> 00:00:52,600
Right.

21
00:00:52,600 --> 00:00:55,600
Most gameplay is sort of developed as the interaction between things

22
00:00:55,600 --> 00:00:58,500
when this touches this this happens, right?

23
00:00:58,900 --> 00:01:01,900
Or when you know you walk over this kind of thing this happens.

24
00:01:02,400 --> 00:01:05,200
And so now is a good time I think for us to start looking at that and

25
00:01:05,200 --> 00:01:06,800
that is what's on the agenda.

26
00:01:06,800 --> 00:01:11,000
For today also have a little sticky note here because someone on the

27
00:01:11,000 --> 00:01:14,400
forums pointed out that we had a cut-and-paste bug lot of times when

28
00:01:14,400 --> 00:01:17,400
I'm reorganizing code on the stream and I'm trying to talk it through,

29
00:01:17,400 --> 00:01:18,800
it's a little bit difficult for me.

30
00:01:18,800 --> 00:01:22,300
So sometimes things sneak by, and I kind of rely on people who are

31
00:01:22,300 --> 00:01:25,900
watching to catch the cut and paste errors that I would normally be

32
00:01:25,900 --> 00:01:28,600
catching, or at least trying to catch if I were working.

33
00:01:28,600 --> 00:01:31,400
Normally, and so somebody, I greatly appreciate this on the farm.

34
00:01:31,400 --> 00:01:32,000
Someone caught one.

35
00:01:32,200 --> 00:01:34,200
For us and I want to go take care of that as well.

36
00:01:34,200 --> 00:01:38,100
But before we do that, let me just remind everyone that if you did,

37
00:01:38,100 --> 00:01:41,300
pre-order the game on handmade here at the org, you should have gotten

38
00:01:41,400 --> 00:01:45,000
an email that gives you a link where you can download the source code.

39
00:01:45,500 --> 00:01:48,300
And if you would like to follow along with what we're doing today,

40
00:01:48,700 --> 00:01:50,200
today is day 68.

41
00:01:50,300 --> 00:01:53,400
So unzip day, 67 source code into a directory that was yesterday,

42
00:01:53,400 --> 00:01:55,500
source code, and that's where we're at today.

43
00:01:56,000 --> 00:01:58,400
And so if you want to follow along with us, that's that's how you

44
00:01:58,400 --> 00:01:59,000
follow along.

45
00:01:59,100 --> 00:02:02,000
You can just, you'll be exactly at the same place I am right now.

46
00:02:02,100 --> 00:02:02,200
Now.

47
00:02:02,700 --> 00:02:06,800
All right, so first, let's take care of this note.

48
00:02:07,000 --> 00:02:10,500
This type of note so that we make sure that it doesn't stay in there.

49
00:02:10,500 --> 00:02:14,000
And cause problems later on what they said was that when we were

50
00:02:14,000 --> 00:02:19,900
rearranging some things in in the move entity call, which is in our

51
00:02:19,900 --> 00:02:24,100
Sim region, code in the move entity called we did a cut and paste

52
00:02:24,100 --> 00:02:25,900
where we were supposed to be using test entity.

53
00:02:25,900 --> 00:02:27,100
You can see it here, right?

54
00:02:27,300 --> 00:02:30,600
We're supposed to be testing test entities, non-spatial, fly.

55
00:02:30,600 --> 00:02:32,000
We're supposed to be doing this test, right?

56
00:02:32,200 --> 00:02:36,500
Here on the same entity and we basically had a typo there.

57
00:02:36,600 --> 00:02:41,100
Now, one thing that's interesting about that too is we haven't quite

58
00:02:41,100 --> 00:02:43,500
worked out, exactly how these guys are going to work with the collides

59
00:02:43,500 --> 00:02:44,300
versus non spatial.

60
00:02:44,300 --> 00:02:44,800
That sort of thing.

61
00:02:44,800 --> 00:02:47,500
We have a number of different types of flag tests that were probably

62
00:02:47,500 --> 00:02:48,000
going to do.

63
00:02:48,400 --> 00:02:51,300
It's worth noting that at some point we may you know to avoid cut and

64
00:02:51,300 --> 00:02:54,700
paste arrows like this but also to sort of Loft these tests out into

65
00:02:54,700 --> 00:02:59,800
some kind of more composite pragmatic call, that's like a more obvious

66
00:03:00,900 --> 00:03:04,200
We might want to do is start making compound test, so we can say, if

67
00:03:04,200 --> 00:03:07,500
this is the type of entity that should have blah done to it, then do

68
00:03:07,500 --> 00:03:07,900
the thing.

69
00:03:07,900 --> 00:03:11,900
And that would roll up these kinds of tests in a way that might make

70
00:03:11,900 --> 00:03:12,300
it easier.

71
00:03:12,300 --> 00:03:14,700
Now, we don't actually know if that's true yet because we haven't

72
00:03:14,700 --> 00:03:15,500
quite worked this out yet.

73
00:03:15,500 --> 00:03:18,200
So the fact that I'm testing the same sort of thing here and here

74
00:03:18,400 --> 00:03:22,200
isn't necessarily a good indication that we should do that just yet,

75
00:03:22,200 --> 00:03:24,200
but it's just something to be aware of as you're going through.

76
00:03:24,200 --> 00:03:26,100
You know, you want to notice these sorts things go, okay.

77
00:03:26,100 --> 00:03:29,000
I sort of seem like a dream, that maybe that's something that we could

78
00:03:29,000 --> 00:03:29,800
take a look at in the future.

79
00:03:30,000 --> 00:03:32,800
And simplify the code a little bit, reduce the possibility of Errors.

80
00:03:32,800 --> 00:03:34,000
Make it easier to read and so on,

81
00:03:36,700 --> 00:03:38,400
But that was the type of that they called to our attention.

82
00:03:38,400 --> 00:03:39,500
So I'm glad we got that in there.

83
00:03:39,500 --> 00:03:42,300
That keep you know that'll prevent it from having a little lurking

84
00:03:42,300 --> 00:03:43,000
problem for us.

85
00:03:43,900 --> 00:03:44,400
Okay.

86
00:03:45,300 --> 00:03:50,600
So if I remember correctly We Believe put put it to do in here

87
00:03:50,600 --> 00:03:51,100
somewhere.

88
00:03:52,600 --> 00:03:53,500
There was for tomorrow.

89
00:03:53,500 --> 00:03:53,800
Yeah.

90
00:03:54,300 --> 00:03:57,700
So the thing that we were going to start out with was our, our

91
00:03:57,900 --> 00:04:01,800
movement routine as it is, has a bit of a limitation to it that we

92
00:04:01,800 --> 00:04:05,200
wanted to address, which is that right now when things move there is

93
00:04:05,400 --> 00:04:08,200
Notion of how far they are allowed to move.

94
00:04:08,300 --> 00:04:11,700
So basically the equations of motion, we compute them for anything it

95
00:04:11,700 --> 00:04:14,800
basically tells us given an acceleration and velocity how far this

96
00:04:14,800 --> 00:04:15,700
thing should have gone.

97
00:04:15,800 --> 00:04:18,300
We move them there and we do Collision detection along the way to see

98
00:04:18,300 --> 00:04:19,899
if there's anything that they would have run into.

99
00:04:20,000 --> 00:04:25,300
That's all well and good, but excuse me, I'm not very sick.

100
00:04:25,300 --> 00:04:28,100
Now I've sort of recovering but so

101
00:04:29,800 --> 00:04:34,500
yeah, a little off from having been sent to the Pascal knows it

102
00:04:34,500 --> 00:04:35,000
happens.

103
00:04:35,400 --> 00:04:35,800
Anyway,

104
00:04:37,000 --> 00:04:41,100
So, the thing that we don't have, though is the concept that things

105
00:04:41,100 --> 00:04:42,700
only exists for a certain amount of distance.

106
00:04:42,700 --> 00:04:45,600
So, that's the kind of thing that doesn't really happen in the real

107
00:04:45,600 --> 00:04:45,900
world.

108
00:04:45,900 --> 00:04:49,200
Obviously, like there really isn't such a thing as stuff that exists

109
00:04:49,200 --> 00:04:52,400
over a distance in the objects that we see around us.

110
00:04:52,400 --> 00:04:54,000
That's not the concept.

111
00:04:54,000 --> 00:04:56,200
But in a game that is a very real concept.

112
00:04:56,200 --> 00:05:01,400
Obviously anyone who has played any kind of a game where, you know,

113
00:05:01,400 --> 00:05:04,900
the hero throws the sword or shoots the gun thing or does whatever.

114
00:05:04,900 --> 00:05:07,000
And there's a limited range of

115
00:05:07,000 --> 00:05:10,700
Travel on it and when it gets to the end of that range, it is

116
00:05:10,700 --> 00:05:13,700
destroying our disappears or whatever it does.

117
00:05:14,500 --> 00:05:16,700
So, obviously, there's this kind of concept in games, which doesn't

118
00:05:16,700 --> 00:05:18,000
really super exist in the real world.

119
00:05:18,000 --> 00:05:18,500
Maybe.

120
00:05:19,200 --> 00:05:22,700
But it's this concept that that thing's only have this limited range,

121
00:05:22,700 --> 00:05:25,800
and it's not as simple as in the real world, things like falling to

122
00:05:25,800 --> 00:05:27,400
the ground or gravity of that sort of stuff.

123
00:05:27,500 --> 00:05:30,100
It's not just that it lands and stays where you threw.

124
00:05:30,100 --> 00:05:32,500
It, it literally like goes away or something.

125
00:05:32,500 --> 00:05:33,000
Right.

126
00:05:33,700 --> 00:05:36,900
And so what we want to do is even for things, look, we don't want

127
00:05:37,000 --> 00:05:38,500
To say that things have to touch the ground.

128
00:05:38,500 --> 00:05:40,700
Maybe we want them to just travel a straight path.

129
00:05:40,700 --> 00:05:43,000
No gravity, no, nothing right there are magical or something.

130
00:05:43,100 --> 00:05:44,400
We want them to be able to go.

131
00:05:44,500 --> 00:05:47,300
And then when they've used up, as much distance, as we said, they

132
00:05:47,300 --> 00:05:48,600
have, we want them to go away.

133
00:05:49,200 --> 00:05:53,100
Now, what we were doing before, which is kind of a little bit of a

134
00:05:53,100 --> 00:05:53,400
hack.

135
00:05:53,400 --> 00:05:56,900
Was we were just saying, okay, every frame will let the move entity

136
00:05:56,900 --> 00:05:59,400
call, take care of wherever the guys going to go.

137
00:05:59,400 --> 00:05:59,900
We'll look at

138
00:06:00,300 --> 00:06:02,400
We're look at where like the sword was and we'll look at where it is

139
00:06:02,400 --> 00:06:05,500
now and will take that distance and will subtract it from however

140
00:06:05,500 --> 00:06:05,800
much.

141
00:06:05,800 --> 00:06:07,800
We said you were allowed to go.

142
00:06:07,800 --> 00:06:09,800
However, far this this sword thing is allowed to go.

143
00:06:09,800 --> 00:06:11,000
We'll, we'll subtract it.

144
00:06:11,000 --> 00:06:14,600
And when that gets to zero, we will know that it's gone as far as it

145
00:06:14,600 --> 00:06:15,800
can and will get rid of it.

146
00:06:15,900 --> 00:06:16,100
Right?

147
00:06:16,100 --> 00:06:16,800
That's what we'll do.

148
00:06:17,700 --> 00:06:18,600
That's all fine.

149
00:06:20,600 --> 00:06:24,500
But there's kind of a hidden in accuracy in that, right?

150
00:06:25,300 --> 00:06:29,800
And that is that if the sword in that time, step doesn't exactly

151
00:06:29,800 --> 00:06:34,400
travel the distance that would bring it to zero if it travels more

152
00:06:34,400 --> 00:06:35,200
than that distance.

153
00:06:35,400 --> 00:06:39,500
Then technically the sword has gotten this little extra this this

154
00:06:39,500 --> 00:06:41,600
little bit of extra motion, right.

155
00:06:41,800 --> 00:06:43,500
That it wouldn't have that it wasn't.

156
00:06:43,500 --> 00:06:44,100
I supposed to have?

157
00:06:44,100 --> 00:06:46,900
We're supposed to only Go part of the distance that it was allowed to

158
00:06:46,900 --> 00:06:47,500
travel that time.

159
00:06:47,500 --> 00:06:49,200
Step not the whole distance.

160
00:06:50,000 --> 00:06:52,100
That's what we'd like to do is tighten up that accuracy.

161
00:06:52,100 --> 00:06:55,500
That's the kind of thing that I guess it's kind of good for Speed

162
00:06:55,500 --> 00:06:56,500
Runners to exploit.

163
00:06:56,500 --> 00:06:59,500
If they know that they fire it at, just the right time or something.

164
00:06:59,500 --> 00:07:00,800
It travels, this extra amount.

165
00:07:00,800 --> 00:07:01,500
I mean, I don't know.

166
00:07:01,700 --> 00:07:03,900
It's it's the kind of thing that happens in games all the time,

167
00:07:03,900 --> 00:07:06,500
obviously, tons of games have shipped with exactly that kind of an

168
00:07:06,500 --> 00:07:09,600
algorithm running them but I we can do better so we should do better.

169
00:07:11,700 --> 00:07:14,900
So what I'd rather do is have the movement routines themselves.

170
00:07:14,900 --> 00:07:19,600
Understand that there's a concept of a resource essentially and that

171
00:07:19,600 --> 00:07:23,700
resource is distance and when it is moving something, it's not that

172
00:07:23,700 --> 00:07:26,400
expensive for us to go into those movement, routines and say, okay,

173
00:07:26,400 --> 00:07:26,900
look

174
00:07:28,200 --> 00:07:31,300
Make sure that you look at what your resource budget is.

175
00:07:31,300 --> 00:07:35,000
And when you're moving someone, don't move them too far.

176
00:07:35,000 --> 00:07:37,900
If the resource budget would run out during that movement, you stop

177
00:07:37,900 --> 00:07:38,900
them there, right?

178
00:07:39,100 --> 00:07:39,800
And that'll make it.

179
00:07:39,800 --> 00:07:43,100
So that no matter what the update situation is or no matter what the

180
00:07:43,100 --> 00:07:46,400
frame rate, no matter what, whatever you do still do, a good job of

181
00:07:46,400 --> 00:07:49,100
obeying those limits, which is what I would prefer to have happen,

182
00:07:49,100 --> 00:07:53,000
rather than sort of this sort of hand-wavy solution of the other way.

183
00:07:55,300 --> 00:07:57,800
So what I'd like to do is go ahead and introduce that concept.

184
00:07:58,000 --> 00:08:02,000
So inside our move entity called right, we already have kind of set up

185
00:08:02,100 --> 00:08:03,900
in a good way to have this work.

186
00:08:04,500 --> 00:08:07,300
And the reason that I say that is because you'll notice that we

187
00:08:07,300 --> 00:08:10,300
already have what we do at the outset is we take the equations of

188
00:08:10,300 --> 00:08:12,800
motion, the physical equations of motion that govern how real things

189
00:08:12,800 --> 00:08:13,700
move in the real world.

190
00:08:14,100 --> 00:08:17,400
We compute where the players, I'm sorry, where the we still call it

191
00:08:17,400 --> 00:08:19,200
player because we originally wrote it for the player but really it's

192
00:08:19,200 --> 00:08:23,100
any entity now where the entity should be, right?

193
00:08:23,200 --> 00:08:25,800
And then we go ahead and we enter this iteration where we're going to

194
00:08:25,800 --> 00:08:27,800
go through and we're going to see if we can move.

195
00:08:27,900 --> 00:08:30,900
Move them there and we test against things that they're going to

196
00:08:30,900 --> 00:08:31,900
collide with, right?

197
00:08:31,900 --> 00:08:35,100
That was how this work, this Loop worked and if they don't collide

198
00:08:35,100 --> 00:08:36,600
with anything then we put them there.

199
00:08:36,600 --> 00:08:40,000
If they do collide with something, we stop them there and we sort of

200
00:08:40,400 --> 00:08:44,400
remove that whatever the sort of angle was the that the thing was that

201
00:08:44,400 --> 00:08:45,000
they hit.

202
00:08:45,000 --> 00:08:48,500
We allow them to keep traveling along that but we'd get rid of their

203
00:08:48,500 --> 00:08:50,700
ability to move in that other direction.

204
00:08:51,500 --> 00:08:58,600
Now, because we did that, that means we've already introduced into

205
00:08:58,600 --> 00:08:59,000
this routine.

206
00:08:59,000 --> 00:08:59,700
The

207
00:09:00,000 --> 00:09:03,600
Woody from the code to handle the concept of not moving the whole way,

208
00:09:03,600 --> 00:09:04,800
because that's what Collision is.

209
00:09:04,800 --> 00:09:06,600
It's the thing that stops you from moving the whole way.

210
00:09:07,200 --> 00:09:10,300
So the question is, can we just go ahead and add something else in

211
00:09:10,300 --> 00:09:10,500
here?

212
00:09:10,500 --> 00:09:12,200
That's another reason.

213
00:09:12,900 --> 00:09:15,500
Another thing that essentially that will stop you from moving that

214
00:09:15,500 --> 00:09:15,900
whole way.

215
00:09:15,900 --> 00:09:18,500
And in this time that thing would be that movement budget that, you

216
00:09:18,500 --> 00:09:21,200
know how much you would be allowed to move, right?

217
00:09:22,500 --> 00:09:25,600
And so, what I want to do is take this team in, right?

218
00:09:25,700 --> 00:09:29,500
That team in is the the T along the the motion Vector.

219
00:09:30,300 --> 00:09:33,100
What I want to do is take that and say, okay, we've got this team in

220
00:09:33,100 --> 00:09:36,800
the team in thing is how far the that it will actually be allowed to

221
00:09:36,800 --> 00:09:42,500
move and we're going to go ahead and make that team in be set to

222
00:09:42,500 --> 00:09:44,100
something that might be less than 1.

223
00:09:44,100 --> 00:09:46,600
If it doesn't have enough budget to actually get to where it should

224
00:09:46,600 --> 00:09:50,200
go, that would automatically handle this for us at some level, right?

225
00:09:50,400 --> 00:09:51,800
And the hit end of

226
00:09:52,000 --> 00:09:57,800
Our will still control whether Collision happens but regardless

227
00:09:57,900 --> 00:10:01,300
because it's only does team in times player, Delta, when it does that

228
00:10:01,300 --> 00:10:02,100
movement?

229
00:10:02,100 --> 00:10:06,300
That's a pretty trivial way for us to go ahead and make sure that

230
00:10:06,300 --> 00:10:08,500
you're not allowed to just keep using it, right?

231
00:10:09,200 --> 00:10:13,100
So anyway, so this starts to inform one aspect of this that we had

232
00:10:13,100 --> 00:10:13,700
different about.

233
00:10:13,700 --> 00:10:16,800
When we originally wrote this code, it actually suggests that maybe we

234
00:10:16,800 --> 00:10:20,500
want to write it in sort of the other way that what we did, right?

235
00:10:22,700 --> 00:10:26,500
If you remember, when we originally writing this code, I said I'm not

236
00:10:26,500 --> 00:10:27,100
sure.

237
00:10:28,200 --> 00:10:34,500
Whether I want T to be talking about the motion along a vector, where

238
00:10:34,500 --> 00:10:38,300
1.0 make will means moving all the way to the end of the vector, and

239
00:10:38,300 --> 00:10:41,900
zero means the start or whether I want the vector to just be a unit

240
00:10:41,900 --> 00:10:48,200
Vector, have unit length and have the T go from zero to the total

241
00:10:48,200 --> 00:10:50,600
amount of meters covered so.

242
00:10:50,600 --> 00:10:54,100
But he's actually a distance value because we could write it either

243
00:10:54,100 --> 00:10:57,600
way and really all that determines about which way we did.

244
00:10:57,600 --> 00:10:57,800
It is

245
00:10:58,200 --> 00:11:02,800
Whether the player, Delta Vector gets normalized first or not and I'll

246
00:11:02,800 --> 00:11:05,600
go to the Whiteboard, just to kind of give you a little bit of a

247
00:11:05,600 --> 00:11:09,600
refresher on that for people who might be a little hazy about that

248
00:11:09,600 --> 00:11:11,500
aspect of the code originally.

249
00:11:12,000 --> 00:11:15,900
So let's go ahead and start a new place here for our day, 68.

250
00:11:15,900 --> 00:11:17,400
So, here is day 68.

251
00:11:19,100 --> 00:11:21,500
So, there's two ways that we could write the Collision routine and I

252
00:11:21,500 --> 00:11:25,300
talked about them at that time, one way is that the motion Vector?

253
00:11:25,700 --> 00:11:27,800
Right here is the beginning p.

254
00:11:27,800 --> 00:11:28,900
And here's the new P, right?

255
00:11:28,900 --> 00:11:29,500
Here's where we go.

256
00:11:29,500 --> 00:11:33,400
I think we also typically recalling these p and p Prime, for example.

257
00:11:33,500 --> 00:11:34,700
So here's where I am.

258
00:11:34,700 --> 00:11:35,700
Here's where I'm going.

259
00:11:35,900 --> 00:11:39,200
And this director here, this this is our, this Vector here was called

260
00:11:39,200 --> 00:11:41,000
player Delta in our code, right?

261
00:11:41,000 --> 00:11:42,200
That's what we were calling this.

262
00:11:42,400 --> 00:11:44,800
This, this, this Vector right here, right?

263
00:11:45,200 --> 00:11:45,700
This guy,

264
00:11:47,000 --> 00:11:48,600
That's the player, Delta, right?

265
00:11:48,700 --> 00:11:52,100
And that player Delta has a real length and so what we were doing is

266
00:11:52,100 --> 00:11:54,700
we were saying T equals zero meant.

267
00:11:54,700 --> 00:11:58,100
You were here and T equals one meant you were here.

268
00:11:58,100 --> 00:11:59,800
So basically T times the

269
00:12:00,000 --> 00:12:04,700
Delta just tells you how far along this you were but the other way

270
00:12:04,700 --> 00:12:05,900
that we could have done it right.

271
00:12:05,900 --> 00:12:08,900
Is we could have gone and said, all right instead of that Vector, that

272
00:12:08,900 --> 00:12:09,600
goes the whole way.

273
00:12:09,800 --> 00:12:11,300
We're going to normalize this Vector.

274
00:12:11,400 --> 00:12:13,800
Now we don't know what you know, we don't know the time step is so

275
00:12:13,800 --> 00:12:16,200
actually that may have made it longer we don't know, right?

276
00:12:16,200 --> 00:12:18,300
Probably it would make it longer given our time scales here.

277
00:12:18,300 --> 00:12:21,900
But point being we produce a vector that's simply a unit Vector,

278
00:12:22,100 --> 00:12:22,500
right?

279
00:12:22,600 --> 00:12:23,600
It has length one.

280
00:12:24,600 --> 00:12:26,400
That goes in the direction of travel.

281
00:12:26,400 --> 00:12:29,800
So it's pointing towards this this other this, this P Prime.

282
00:12:30,000 --> 00:12:35,400
I'm right and then T equals zero still starts at the the starting

283
00:12:35,400 --> 00:12:35,900
point.

284
00:12:36,300 --> 00:12:41,900
But now we have t equals essentially the length of player Delta, right

285
00:12:42,000 --> 00:12:42,600
whatever.

286
00:12:42,700 --> 00:12:43,200
Whatever.

287
00:12:43,200 --> 00:12:47,200
This vectors length was originally, that is now what T goes to and we

288
00:12:47,200 --> 00:12:49,600
now have sort of this this like normal.

289
00:12:49,600 --> 00:12:54,000
This player, dealt a normal if you will play or Delta normal right

290
00:12:54,000 --> 00:12:54,400
here.

291
00:12:54,400 --> 00:12:59,900
It's unit length that has length 1 and we're moving along that and the

292
00:13:00,000 --> 00:13:03,100
The part of that obviously would be like, okay now T really is a

293
00:13:03,100 --> 00:13:06,500
distance so we can just set the t equal to the movement budget at the

294
00:13:06,500 --> 00:13:09,500
beginning, and that would make it so that we could never get past

295
00:13:09,500 --> 00:13:10,400
their, as we go.

296
00:13:11,000 --> 00:13:13,800
So it's something to keep in mind that we've made a decision between

297
00:13:13,800 --> 00:13:14,400
those two.

298
00:13:14,600 --> 00:13:18,900
And we ended up going with this one, but maybe that was the wrong

299
00:13:18,900 --> 00:13:19,400
idea.

300
00:13:19,400 --> 00:13:19,900
I don't know.

301
00:13:20,300 --> 00:13:23,300
So what we're going to see now is, let's try to go ahead and put in

302
00:13:23,300 --> 00:13:26,400
the movement budget concept to this function.

303
00:13:27,700 --> 00:13:31,500
Using the way that we originally structured it and then we'll see if

304
00:13:31,500 --> 00:13:34,100
it becomes too onerous and will make a judgment call about whether it

305
00:13:34,100 --> 00:13:35,600
would be better to write it the other way.

306
00:13:36,700 --> 00:13:37,900
So hopefully that makes some sense.

307
00:13:46,800 --> 00:13:48,900
Okay, so here we go.

308
00:13:49,900 --> 00:13:53,600
You come in here and what we want to do at the outset because we want

309
00:13:53,600 --> 00:13:56,200
to make sure that our first team in obviously whatever, we're

310
00:13:56,200 --> 00:14:00,700
emotionally setting our movement to that our initial team in would not

311
00:14:00,700 --> 00:14:06,000
go further than our maximum allowed distance, right?

312
00:14:06,000 --> 00:14:08,600
And so what we can do is we can imagine passing it in here.

313
00:14:08,600 --> 00:14:11,200
I suppose we're Basics a maximum

314
00:14:12,300 --> 00:14:16,800
Distance or we could say distance limit, maybe might be one way to say

315
00:14:16,800 --> 00:14:19,200
it so the distance limit comes in here.

316
00:14:19,200 --> 00:14:21,600
And what we want to do is you want to make sure that over the course

317
00:14:21,600 --> 00:14:25,100
of iterations, we don't ever use any more than that.

318
00:14:25,100 --> 00:14:28,900
So we could say is like okay distance left equals distance limit,

319
00:14:29,100 --> 00:14:29,400
right?

320
00:14:29,400 --> 00:14:30,000
Like so

321
00:14:31,400 --> 00:14:34,700
And then each time to this, iteration will remove some from that

322
00:14:34,700 --> 00:14:35,500
distance left.

323
00:14:35,600 --> 00:14:39,200
Okay, I guess I can call it distance remaining to make it so that

324
00:14:39,200 --> 00:14:41,500
we've not confused about left and right.

325
00:14:41,500 --> 00:14:43,700
And you know, that's why I think distance remaining sounds a little

326
00:14:43,700 --> 00:14:44,100
better.

327
00:14:44,600 --> 00:14:45,800
So that's our distance limit.

328
00:14:45,800 --> 00:14:50,400
Now what I could do here is I could basically say yeah, I think what I

329
00:14:50,400 --> 00:14:53,500
want to do is I want to set this team in to be only allowing you to

330
00:14:53,500 --> 00:14:54,100
move that far.

331
00:14:54,100 --> 00:14:56,100
And the reason that I'd like to do that rather than dealing with it

332
00:14:56,100 --> 00:14:59,900
after the fact is because I don't want to process any entity.

333
00:15:00,000 --> 00:15:02,600
That would have happened after the movement budget, right?

334
00:15:02,700 --> 00:15:05,300
Because if you imagine the case of the sword, if the sword was going

335
00:15:05,300 --> 00:15:08,400
to move from one place to another during one frame, and the movement

336
00:15:08,400 --> 00:15:11,000
budget wouldn't have allowed it to get to that final place.

337
00:15:11,200 --> 00:15:14,000
But getting to that final place would cause it to collide with some

338
00:15:14,000 --> 00:15:15,500
entity and caused an event to occur.

339
00:15:15,600 --> 00:15:17,800
I want to make sure that event doesn't happen, right?

340
00:15:17,800 --> 00:15:20,800
I don't want that event to trigger because technically the sword

341
00:15:20,800 --> 00:15:23,200
should not have been able to reach it, right?

342
00:15:23,200 --> 00:15:26,100
So that's that's the reason I want to set the team in because the team

343
00:15:26,100 --> 00:15:29,500
in will cap how far the Collision Vector will even check because our

344
00:15:29,500 --> 00:15:29,800
collisions

345
00:15:30,000 --> 00:15:33,100
Vector, only considers it a hit if the Collision happens before the

346
00:15:33,100 --> 00:15:35,500
team and that was sort of how we were sorting, are closer to the first

347
00:15:35,500 --> 00:15:37,800
place to make sure that the first one happened first.

348
00:15:37,900 --> 00:15:39,400
Right which ever had the minimum team in?

349
00:15:41,800 --> 00:15:42,300
That's why it's called.

350
00:15:42,300 --> 00:15:42,800
Teaming.

351
00:15:43,100 --> 00:15:43,800
The minimum t.

352
00:15:45,300 --> 00:15:47,400
All right, so we've got our player, Delta.

353
00:15:47,700 --> 00:15:51,400
And if I wanted to compute how long that was going to be, right, what

354
00:15:51,400 --> 00:15:53,800
I'd have is my player Delta length.

355
00:15:55,700 --> 00:15:58,100
At this point, we have a function for computing, the length of a

356
00:15:58,100 --> 00:16:01,000
vector, we can plaster pass it in you, right?

357
00:16:01,000 --> 00:16:06,800
So if I go in here, and I take my handmade math.h, right, take a look

358
00:16:06,800 --> 00:16:07,400
at my length.

359
00:16:07,600 --> 00:16:08,400
You can see that I've got it.

360
00:16:08,400 --> 00:16:10,400
Now, it forces some stuff.

361
00:16:10,400 --> 00:16:12,200
It's got, its got a fair bit of maths.

362
00:16:12,300 --> 00:16:16,500
It's two multiplied, it's an ad and then it's a square root right now

363
00:16:16,500 --> 00:16:19,700
in the old days, a square root would have been an absolute nightmare

364
00:16:19,700 --> 00:16:19,900
square.

365
00:16:19,900 --> 00:16:22,300
Roots used to be really, really really, really really, really, really

366
00:16:22,300 --> 00:16:25,400
expensive and you almost never ever ever.

367
00:16:25,500 --> 00:16:27,400
I wanted to call square root if you could avoid it.

368
00:16:29,800 --> 00:16:32,100
In fact, we used to write functions that would approximate the square

369
00:16:32,100 --> 00:16:34,100
root, so that we didn't have to call the actual square root.

370
00:16:34,100 --> 00:16:34,900
That's how bad it was.

371
00:16:35,600 --> 00:16:38,500
But nowadays processors are actually pretty handy about this.

372
00:16:38,500 --> 00:16:41,500
And you can actually get square roots in, not that much time.

373
00:16:42,700 --> 00:16:45,400
So it's entirely possible that this is just fine, right?

374
00:16:45,400 --> 00:16:47,700
And so we'll start with that, and when we actually go to start

375
00:16:47,700 --> 00:16:51,000
Optimizer, closing doctor will see, but chances are even though that's

376
00:16:51,000 --> 00:16:52,800
the sort of thing that would have sent off some alarm bells in my head

377
00:16:52,800 --> 00:16:53,500
a long time ago.

378
00:16:53,500 --> 00:16:57,600
Nowadays, it's like yep, square roots, until fixed it for you, right?

379
00:16:58,100 --> 00:16:59,500
Anyway, there's still a little more.

380
00:16:59,500 --> 00:17:01,700
It's a potentially because I don't know if you have to do refinement

381
00:17:01,700 --> 00:17:03,800
steps on them, I don't know how much accuracy you get on some of the

382
00:17:03,800 --> 00:17:05,900
newer processors versus the old ones and all that sort of thing.

383
00:17:05,900 --> 00:17:09,800
But point being no matter what the circumstance is, no matter how

384
00:17:09,800 --> 00:17:14,099
accurate you need the results, it's still way faster than it used to

385
00:17:14,099 --> 00:17:17,000
be because it used to be pretty expensive anyway.

386
00:17:17,000 --> 00:17:19,900
So we go ahead and get that length.

387
00:17:19,900 --> 00:17:20,800
This is how far.

388
00:17:20,800 --> 00:17:24,599
Now the player Delta thing is, so what I would like to do is say all

389
00:17:24,599 --> 00:17:29,300
right, I want to go ahead and make sure that I cap that to

390
00:17:29,500 --> 00:17:31,800
make sure that it's no longer than distance remaining.

391
00:17:31,800 --> 00:17:37,600
So basically what I'd like to do is say what is the ratio?

392
00:17:37,600 --> 00:17:39,300
In fact, I guess might be what I'd say.

393
00:17:39,300 --> 00:17:41,500
What is the ratio or?

394
00:17:41,500 --> 00:17:46,900
Or how much of this player Delta length, can we afford to use, right?

395
00:17:46,900 --> 00:17:49,800
And so if I take the distance, remaining what I'm going to do is I'm

396
00:17:49,800 --> 00:17:50,700
take the distance remaining.

397
00:17:50,700 --> 00:17:54,400
I'm going to divide it by that player Delta length, right?

398
00:17:54,400 --> 00:17:57,900
And what I can do here, I can also go ahead and make sure that that

399
00:17:57,900 --> 00:17:58,200
player done.

400
00:17:58,200 --> 00:17:59,400
Delta length, actually

401
00:17:59,500 --> 00:17:59,900
Ali.

402
00:18:00,100 --> 00:18:04,100
Is has some amount to it so that we would avoid / 0.

403
00:18:04,100 --> 00:18:04,400
AB c--.

404
00:18:04,400 --> 00:18:04,900
Right.

405
00:18:06,000 --> 00:18:08,300
Well, you know, if do I even need to do the Divide of trying to think

406
00:18:08,300 --> 00:18:08,400
here?

407
00:18:08,400 --> 00:18:09,800
If I need to do this by, I guess I could say.

408
00:18:09,800 --> 00:18:11,000
First is let's do that.

409
00:18:11,000 --> 00:18:11,600
Let's do the simple.

410
00:18:11,600 --> 00:18:14,500
Check if distance remaining right.

411
00:18:15,500 --> 00:18:19,300
If player Delta length is is greater than distance remaining.

412
00:18:19,400 --> 00:18:21,300
Then we have to deal with it, right?

413
00:18:21,300 --> 00:18:23,700
But if it was not then we wouldn't meaning.

414
00:18:23,700 --> 00:18:25,000
If the player Delta length

415
00:18:26,900 --> 00:18:29,200
Isn't more than the amount that we have left, then we don't really

416
00:18:29,200 --> 00:18:30,200
have to do anything, right?

417
00:18:30,200 --> 00:18:32,100
There's nothing that nothing that has to happen.

418
00:18:32,800 --> 00:18:35,900
So the only case that we really care about is what do we have to do to

419
00:18:35,900 --> 00:18:39,500
team in if the player Delta length the amount that we're going to move

420
00:18:39,500 --> 00:18:41,300
is too long, right?

421
00:18:41,600 --> 00:18:44,700
And so I feel like all we really need to do at that point is set the

422
00:18:44,700 --> 00:18:46,800
team in which again is how far along the player.

423
00:18:46,800 --> 00:18:47,900
Delta we're going to go.

424
00:18:48,000 --> 00:18:51,800
We just want to set that team in to be whatever the right ratio is

425
00:18:51,800 --> 00:18:53,500
between these two things, right?

426
00:18:53,600 --> 00:18:56,100
So if we know we have a player Delta and we

427
00:18:56,200 --> 00:19:00,600
To move it only as much as distance remaining would be right, only as

428
00:19:00,600 --> 00:19:01,500
much as it would cover.

429
00:19:01,500 --> 00:19:05,100
The distance remaining I should be able to just take the ratio of

430
00:19:05,100 --> 00:19:08,100
those two things I believe and and make that work out.

431
00:19:08,100 --> 00:19:10,500
Now, let me just double check and I'll sort of draw that out for you

432
00:19:10,500 --> 00:19:10,800
guys.

433
00:19:10,800 --> 00:19:14,700
So sort of show you what it is that I'm trying to say here, there we

434
00:19:14,700 --> 00:19:15,000
go.

435
00:19:16,600 --> 00:19:19,900
So if you imagine, right, I've got this situation.

436
00:19:21,600 --> 00:19:23,900
And here is my player Delta, right?

437
00:19:25,100 --> 00:19:27,300
So this right here is the player Delta length.

438
00:19:29,400 --> 00:19:32,400
Okay, so I'll just call that D for now.

439
00:19:32,600 --> 00:19:33,800
We'll just call that straight up D.

440
00:19:34,800 --> 00:19:37,200
And then what I'm also saying is I've got another thing which is like

441
00:19:37,200 --> 00:19:38,700
a cap, right?

442
00:19:39,100 --> 00:19:40,900
And so this is like the remaining.

443
00:19:40,900 --> 00:19:43,300
This is that player, Delta remaining, so we'll just call that are

444
00:19:43,700 --> 00:19:44,100
okay.

445
00:19:44,500 --> 00:19:47,500
And so, what I want to do is I want to say, I don't want you to go any

446
00:19:47,500 --> 00:19:50,000
further than here along that Vector, right?

447
00:19:50,700 --> 00:19:55,300
So if I know that t, which moves me along this Vector.

448
00:19:55,400 --> 00:19:59,000
If I know that this is 1 point 0 and this is 0, right?

449
00:19:59,400 --> 00:20:02,900
Then really all I need to know is what percentage, right.

450
00:20:02,900 --> 00:20:07,500
That's a percentage 0 to 1 what percentage of the way along here.

451
00:20:07,500 --> 00:20:10,900
Could I actually, you know, could actually go what percentage is our

452
00:20:11,100 --> 00:20:11,700
right?

453
00:20:12,100 --> 00:20:18,100
So I want to know how what percentage, how much of the way our is in D

454
00:20:18,100 --> 00:20:22,900
in, if the total area is D, how much of it is taken up by our and that

455
00:20:22,900 --> 00:20:27,800
should give me the T value that I actually, you know, my team in what

456
00:20:27,800 --> 00:20:29,100
I could actually go to

457
00:20:29,500 --> 00:20:31,300
If the furthest I could go right?

458
00:20:31,300 --> 00:20:34,700
And so that's that's the ratio that I'm Computing there to use the set

459
00:20:34,700 --> 00:20:35,400
that team in.

460
00:20:36,600 --> 00:20:40,400
So the only thing that really has to be true here is that player Delta

461
00:20:40,400 --> 00:20:43,900
length has to be nonzero in order for this to work, right?

462
00:20:44,200 --> 00:20:47,100
And so in order for that to be the case, we have to make sure that

463
00:20:47,100 --> 00:20:51,000
we're never trying to actually do a move when the distance remaining,

464
00:20:51,400 --> 00:20:55,500
I'm sorry when the distance when the player Delta length is going to

465
00:20:55,500 --> 00:20:56,200
be 0.

466
00:20:56,500 --> 00:20:59,300
But if the player like was Zero, we don't need to move the player,

467
00:20:59,500 --> 00:20:59,800
right?

468
00:21:00,200 --> 00:21:03,600
Woohoo, or whatever entity were using, we don't actually need to move

469
00:21:03,600 --> 00:21:04,000
it at all.

470
00:21:04,000 --> 00:21:06,200
If the movements going to be 0, that means it wouldn't go anywhere.

471
00:21:07,000 --> 00:21:10,600
So, technically, what we can do here is actually just make this entire

472
00:21:10,600 --> 00:21:14,300
Loop have to be greater than 0, right?

473
00:21:14,700 --> 00:21:18,400
And we just wouldn't have to actually do anything in the case where it

474
00:21:18,400 --> 00:21:18,900
was 0.

475
00:21:18,900 --> 00:21:22,300
We just, we just wouldn't even do anything at all because it's not

476
00:21:22,300 --> 00:21:25,800
possible for it to, to have any effect on anything.

477
00:21:26,000 --> 00:21:26,200
Right.

478
00:21:26,200 --> 00:21:28,700
It's immediately done in that case.

479
00:21:28,700 --> 00:21:29,800
In fact, what we could do,

480
00:21:30,000 --> 00:21:32,700
Is well, I guess we can't really put it up there because we haven't

481
00:21:32,700 --> 00:21:35,100
completed yet but basically, this is almost a loop condition.

482
00:21:35,400 --> 00:21:37,300
If the player, if the amount that we're going to try to move the

483
00:21:37,300 --> 00:21:40,200
player by isn't greater than 0, then we are not going to move him.

484
00:21:40,200 --> 00:21:42,300
So just stop don't do any more computation.

485
00:21:42,300 --> 00:21:44,900
Don't waste any more time thinking about it's not worth it, right?

486
00:21:45,900 --> 00:21:48,800
So that will, that will totally solve our problem for the first

487
00:21:48,800 --> 00:21:49,700
iteration through the loop.

488
00:21:49,700 --> 00:21:51,700
The problem is this distance.

489
00:21:51,700 --> 00:21:55,000
Remaining actually now needs to get updated by however, far.

490
00:21:55,000 --> 00:21:57,000
We actually did go, right?

491
00:21:57,000 --> 00:21:59,900
So at the end of this, when we're about to move the player, what we

492
00:21:59,900 --> 00:22:03,100
Do here is say well, that distance remaining is going to go down by

493
00:22:03,100 --> 00:22:04,600
some amount right now.

494
00:22:04,600 --> 00:22:07,800
It would go down by the player, Delta length, if we actually took the

495
00:22:07,800 --> 00:22:10,900
whole step, but since we don't know, we might have hit something at

496
00:22:10,900 --> 00:22:12,700
the question is, how far do we actually go?

497
00:22:12,700 --> 00:22:16,000
Well, in this case team in is to the rescue again, right?

498
00:22:16,000 --> 00:22:16,300
Team.

499
00:22:16,300 --> 00:22:19,600
In Saves the Day team in tells us how far along we went.

500
00:22:19,600 --> 00:22:23,400
Which again if we take that as a percentage and we just want to know

501
00:22:23,400 --> 00:22:26,400
how far we traveled, we just go ahead and say well whatever the

502
00:22:26,400 --> 00:22:29,900
percentage was here, if we just multiply it by the total length of

503
00:22:29,900 --> 00:22:33,100
Of that Vector, it'll tell us how far along the vector, we went in

504
00:22:33,100 --> 00:22:34,600
actual M, right?

505
00:22:35,400 --> 00:22:40,700
So all we have to do is say Okay, multiply that length, like so and

506
00:22:40,700 --> 00:22:42,200
off we go right now.

507
00:22:42,200 --> 00:22:45,100
What we might want to do as well as we might want to say, we might

508
00:22:45,100 --> 00:22:48,600
want to make this a more to avoid any kind of floating Point

509
00:22:48,600 --> 00:22:49,100
nastiness.

510
00:22:49,300 --> 00:22:51,500
We might want to make this also an Epsilon, right?

511
00:22:51,500 --> 00:22:53,900
We might want to say that in general, you're not allowed to move

512
00:22:53,900 --> 00:22:57,200
people .00, 01 meters or something like this.

513
00:22:57,500 --> 00:22:59,800
I don't know exactly how we want to deal with stuff like that.

514
00:23:00,800 --> 00:23:02,900
But it's definitely something that when we go through the Collision

515
00:23:02,900 --> 00:23:06,600
detector, could detector is a geometric computation kind of thing.

516
00:23:06,800 --> 00:23:07,500
Often times.

517
00:23:07,500 --> 00:23:10,500
Those involve a lot of floating-point nastiness and since we haven't

518
00:23:10,500 --> 00:23:12,700
thought through a lot of these things and we have a bunch of flooding

519
00:23:12,700 --> 00:23:14,100
pointy things, we need to think about.

520
00:23:14,100 --> 00:23:15,800
I'm not going to really push on that right now.

521
00:23:16,000 --> 00:23:18,500
When we actually go do our final version of clutch injector, will try

522
00:23:18,500 --> 00:23:21,700
to tighten up all of our float honest and try to get rid of as many as

523
00:23:21,700 --> 00:23:22,100
we can.

524
00:23:22,100 --> 00:23:27,000
So for now, I'm just going to say to do, what do we want to do for

525
00:23:27,000 --> 00:23:28,400
epsilon's here?

526
00:23:30,500 --> 00:23:34,200
Think this through for the final Collision code, right?

527
00:23:34,900 --> 00:23:37,800
And so hopefully that's all we really need to do for that.

528
00:23:37,800 --> 00:23:40,900
Now, in order to finish our sword stuff here, right?

529
00:23:41,500 --> 00:23:45,500
What we would like to do is we now like to sort of Loft up this kind

530
00:23:45,500 --> 00:23:46,500
of concept.

531
00:23:48,300 --> 00:23:50,900
Of having a certain amount of movement that you could do.

532
00:23:51,800 --> 00:23:57,200
I'm going to go ahead and put that into basically just put that into

533
00:23:57,200 --> 00:23:59,600
my entity logic if that makes sense.

534
00:24:00,100 --> 00:24:00,900
Oops, that's not the place.

535
00:24:00,900 --> 00:24:01,600
I actually wanted.

536
00:24:03,500 --> 00:24:06,100
So we want to do is we want to say that entity is can have this kind

537
00:24:06,100 --> 00:24:07,500
of cap on them, right?

538
00:24:07,700 --> 00:24:11,100
And what that cap is going to be, I don't know if I want to be a flag

539
00:24:11,100 --> 00:24:11,600
or not.

540
00:24:11,600 --> 00:24:13,100
I'm not sure exactly how I want to do it.

541
00:24:13,400 --> 00:24:17,300
There's there's a couple things I kind of have in my head that we

542
00:24:17,300 --> 00:24:19,500
haven't gotten to yet about how I want to do any of the architectures.

543
00:24:19,500 --> 00:24:20,700
As we're kind of putting that off.

544
00:24:21,500 --> 00:24:22,900
I don't think this really needs to be a flag.

545
00:24:22,900 --> 00:24:25,800
So I think I'm going to do something that doesn't use a flag for now,

546
00:24:25,800 --> 00:24:26,900
even though it might be a little bit gross.

547
00:24:26,900 --> 00:24:29,700
Because I think when we come back around to it and I sort of have,

548
00:24:29,900 --> 00:24:32,300
like I said, I have includes of how I want this stuff structured

549
00:24:32,300 --> 00:24:32,800
eventually.

550
00:24:33,300 --> 00:24:35,500
When we start talking about that for real, I think this will cost

551
00:24:35,500 --> 00:24:36,200
shake out.

552
00:24:36,300 --> 00:24:40,900
But anyway, so we'll have this like basically a distance limit will

553
00:24:40,900 --> 00:24:44,700
just be on there and so any entity can take advantage of the distance

554
00:24:44,700 --> 00:24:45,200
limit.

555
00:24:45,200 --> 00:24:47,400
And the way that will do that for now is, Will basically say that if

556
00:24:47,400 --> 00:24:53,100
the distance limit is just set to zero or maybe some other value like

557
00:24:53,100 --> 00:24:53,600
no distance.

558
00:24:53,600 --> 00:24:54,200
No, but I think mr.

559
00:24:54,200 --> 00:24:57,400
Zero, if it's set to zero then that means you can move as far as you

560
00:24:57,400 --> 00:25:00,800
want, but if it's set to an actual value, then you get capped and it

561
00:25:00,800 --> 00:25:02,600
triggers if you actually get down to 60,

562
00:25:03,300 --> 00:25:03,800
right?

563
00:25:04,300 --> 00:25:08,200
So the way that we'll do that is inside the sword ramp, what we'll do

564
00:25:08,200 --> 00:25:12,900
is we'll say, Okay, instead of entity, we already have distance

565
00:25:12,900 --> 00:25:13,400
remaining.

566
00:25:13,400 --> 00:25:15,000
So, here we go.

567
00:25:16,200 --> 00:25:16,800
What will do inside?

568
00:25:16,800 --> 00:25:19,400
The sword is, will say, all right, we don't have to deal with this

569
00:25:19,700 --> 00:25:22,600
manual anymore, but we do have to deal with whatever that exit

570
00:25:22,600 --> 00:25:23,200
condition is.

571
00:25:23,400 --> 00:25:26,100
What we want to say is that if the distance limit for the sword

572
00:25:26,600 --> 00:25:29,800
becomes equal to 0, then we want to make it non spatial and take it

573
00:25:29,800 --> 00:25:31,000
out of the computation, right?

574
00:25:31,000 --> 00:25:31,500
It's gone.

575
00:25:32,600 --> 00:25:33,100
So all

576
00:25:33,300 --> 00:25:37,300
You to do now is that this is remaining when we set it, we need to set

577
00:25:37,300 --> 00:25:41,000
it so that it's on the distance limit field, right?

578
00:25:41,600 --> 00:25:45,200
And now we just have to actually process that field.

579
00:25:45,200 --> 00:25:47,500
So what I'm going to do is I'm going to say, okay we've got a distance

580
00:25:47,500 --> 00:25:51,100
limit, it's going to be equal to the entities distance limit.

581
00:25:52,500 --> 00:25:55,600
And we'll pass that limit along, but in the case, for the distance

582
00:25:55,600 --> 00:26:00,200
limit actually equals 0, we're just going to assume that that's makes

583
00:26:00,400 --> 00:26:01,500
people allowed to move.

584
00:26:01,500 --> 00:26:02,400
However, far they want.

585
00:26:02,400 --> 00:26:04,200
It's like essentially saying there's no distance limit.

586
00:26:04,400 --> 00:26:08,500
So we'll just basically put on some kind of ridiculous maximum value

587
00:26:08,500 --> 00:26:11,700
here, like something that you could never, possibly, ever do right?

588
00:26:11,800 --> 00:26:12,300
Yeah.

589
00:26:12,900 --> 00:26:14,100
No one's ever allowed to move.

590
00:26:14,100 --> 00:26:15,300
10,000 meters, that's off.

591
00:26:15,300 --> 00:26:16,900
She was obviously, completely ridiculous.

592
00:26:17,300 --> 00:26:18,900
So, we don't have to care about that.

593
00:26:19,100 --> 00:26:20,200
I'll put a little to do here.

594
00:26:20,200 --> 00:26:22,000
Say, do we want to

595
00:26:22,300 --> 00:26:25,600
As this number, but basically just thing that says, essentially No

596
00:26:25,600 --> 00:26:26,500
Limit, right?

597
00:26:27,300 --> 00:26:31,800
So we'll do that and then we'll go ahead and see, I don't actually

598
00:26:31,800 --> 00:26:33,600
know if we actually put code in here to test this.

599
00:26:33,600 --> 00:26:37,500
I think we probably did, but we can actually go and see what the deal

600
00:26:37,500 --> 00:26:37,600
is.

601
00:26:37,700 --> 00:26:39,400
Oh, and we've got one more thing.

602
00:26:39,400 --> 00:26:40,500
We got to do, I forgot.

603
00:26:40,700 --> 00:26:43,800
We have to actually decrement the distance limit.

604
00:26:43,800 --> 00:26:49,000
Now, I suppose also, I don't really need to handle that outside

605
00:26:49,200 --> 00:26:49,600
inside.

606
00:26:49,600 --> 00:26:52,100
Move entity, if it's actually gonna be something that's on the end,

607
00:26:52,200 --> 00:26:52,500
T.

608
00:26:53,100 --> 00:26:55,000
We could probably just handle it directly in there.

609
00:26:55,400 --> 00:26:58,900
So actually, I suppose, we can just go ahead and do this.

610
00:26:59,300 --> 00:26:59,900
This can actually

611
00:27:00,000 --> 00:27:05,400
Move outside of that into here to be honest right?

612
00:27:06,400 --> 00:27:08,500
We can actually just put that in there so that's probably actually

613
00:27:08,500 --> 00:27:09,400
fine for now to.

614
00:27:09,800 --> 00:27:12,000
Yeah that seems better actually not think about it.

615
00:27:12,200 --> 00:27:12,400
Alright.

616
00:27:12,400 --> 00:27:14,200
So basically what we'll do here is we'll say okay

617
00:27:15,600 --> 00:27:20,000
We'll grab that distance remaining like so well, then go ahead and see

618
00:27:20,000 --> 00:27:24,300
what the distance limit actually is on the guy.

619
00:27:24,400 --> 00:27:25,600
Oops, there we go.

620
00:27:26,700 --> 00:27:30,300
And we'll set it and then this will kind of get subtracted off.

621
00:27:30,300 --> 00:27:31,500
I guess what we can do.

622
00:27:31,600 --> 00:27:31,800
Yeah.

623
00:27:31,800 --> 00:27:34,300
And at the end what we can do is we can just go ahead and write it

624
00:27:34,300 --> 00:27:40,400
back at the end will basically say if the entities distance limit was

625
00:27:40,400 --> 00:27:41,400
not equal to 0.

626
00:27:42,700 --> 00:27:46,000
In the first place, we will just write back, whatever the distance

627
00:27:46,000 --> 00:27:47,800
remaining actually was.

628
00:27:48,800 --> 00:27:50,500
And so now that's their new distance limit.

629
00:27:50,500 --> 00:27:54,800
And so that way it will decrement, as we move every time the entity

630
00:27:54,800 --> 00:27:58,600
moves, it will have its distance limit decremented, right?

631
00:27:59,300 --> 00:28:01,900
As long as it wasn't set to zero, if it was set to zero, that's kind

632
00:28:01,900 --> 00:28:02,700
of the case that says.

633
00:28:02,700 --> 00:28:04,900
Alright, just let them move, however they want.

634
00:28:05,000 --> 00:28:05,900
Don't deal with it.

635
00:28:07,000 --> 00:28:09,600
All right, so let's see how that goes if that does any better for us?

636
00:28:09,600 --> 00:28:10,800
That looks pretty good.

637
00:28:11,600 --> 00:28:12,300
No, big problems.

638
00:28:12,700 --> 00:28:15,500
And so now we've got we're doing exactly the same thing we were doing

639
00:28:15,500 --> 00:28:18,200
before where you can basically spin-off an entity, Let It Go in some

640
00:28:18,200 --> 00:28:22,800
direction and make sure that as it gets to the end it's going to end

641
00:28:23,100 --> 00:28:27,400
when it's moved a certain amount so that's good that basically tidies

642
00:28:27,400 --> 00:28:29,300
up that for us nicely and it makes it.

643
00:28:29,300 --> 00:28:31,800
So it's handled in a nice clean way, that doesn't vary based on the

644
00:28:31,800 --> 00:28:33,500
frame rate, which is kind of nice.

645
00:28:33,500 --> 00:28:35,200
I think that's a good way to good thing to shoot for.

646
00:28:35,200 --> 00:28:37,300
You don't want to have a lot of your stuff in your game, be frame rate

647
00:28:37,300 --> 00:28:40,300
dependent, invites a lot of problems when you're trying to ship on

648
00:28:40,300 --> 00:28:42,300
different platforms and it just means that you have a

649
00:28:42,400 --> 00:28:45,900
Lot less flexibility, it means you can't toggle between 60 or 30

650
00:28:45,900 --> 00:28:48,900
Hertz, depending on the platform, you just get all kinds of nastiness,

651
00:28:48,900 --> 00:28:49,400
right?

652
00:28:50,400 --> 00:28:54,200
So, all right, that's about all there was to that, it looks like based

653
00:28:54,200 --> 00:28:57,600
on the clock 835, we've still got a half an hour, so now might be a

654
00:28:57,600 --> 00:29:00,800
good time to start talking about that Collision detection, which is

655
00:29:00,800 --> 00:29:02,200
kind of what brought up this stuff before.

656
00:29:02,200 --> 00:29:04,000
We were sort of going to go to start.

657
00:29:04,000 --> 00:29:05,000
Take a look at that.

658
00:29:05,500 --> 00:29:09,800
So, if we take, you know, just just sort of a cursory check our we've

659
00:29:09,800 --> 00:29:10,400
already done.

660
00:29:10,400 --> 00:29:12,000
Like I said, we've done some of the work.

661
00:29:12,900 --> 00:29:13,200
Sorry.

662
00:29:13,200 --> 00:29:15,200
Got it HEI here.

663
00:29:17,100 --> 00:29:17,400
Yeah.

664
00:29:20,500 --> 00:29:21,800
Sometimes you get an itchy eye.

665
00:29:22,300 --> 00:29:26,800
Sometimes staring at monitors all day in the heat in the in the

666
00:29:26,800 --> 00:29:27,400
winter.

667
00:29:28,500 --> 00:29:29,500
Dry heat.

668
00:29:29,600 --> 00:29:30,800
The eyes get a little itchy.

669
00:29:30,900 --> 00:29:31,300
It's true.

670
00:29:33,300 --> 00:29:34,900
Oh, all right.

671
00:29:35,500 --> 00:29:40,000
So what we want to do now is say okay we've already got our Collision

672
00:29:40,000 --> 00:29:43,300
routine set up we do we plan for this basically like we knew what was

673
00:29:43,300 --> 00:29:44,000
coming down

674
00:29:46,200 --> 00:29:48,100
So when we hit something, we know we kept it.

675
00:29:48,100 --> 00:29:49,700
We've got a hit entity called, right?

676
00:29:50,200 --> 00:29:52,500
I'm sorry, we've got to hit enter the variable set.

677
00:29:52,600 --> 00:29:56,700
So now we know that that the entity that we were on, right?

678
00:29:56,700 --> 00:29:59,400
This entity that we passed in here, this amenity

679
00:30:00,000 --> 00:30:04,000
We know that that entity and this entity hit each other, right?

680
00:30:04,000 --> 00:30:06,800
They've collided, and so what we want to do now is introduce the

681
00:30:06,800 --> 00:30:08,600
concept of some Collision response.

682
00:30:09,100 --> 00:30:12,800
Now, Collision response is kind of a nasty problem for a number of

683
00:30:12,800 --> 00:30:13,400
reasons.

684
00:30:13,500 --> 00:30:16,400
One of, which is not one that we're really concerned about right now

685
00:30:16,400 --> 00:30:19,400
and that is what you want to happen physically with things.

686
00:30:19,400 --> 00:30:21,900
Like when things push each other, like when this thing hits this

687
00:30:21,900 --> 00:30:25,400
thing, it's supposed to push or, you know, do stuff like that.

688
00:30:25,500 --> 00:30:26,400
That's obviously

689
00:30:27,400 --> 00:30:30,700
A physics problem something that we probably will want to get to once.

690
00:30:30,700 --> 00:30:34,100
We actually have some notion of what sorts of things in the game will

691
00:30:34,100 --> 00:30:34,800
do that, right?

692
00:30:34,800 --> 00:30:38,000
When we get to the parts, may be a little further along.

693
00:30:38,000 --> 00:30:39,200
We're going to be pushing things.

694
00:30:39,900 --> 00:30:43,400
That's something that we want to think about and and deal with.

695
00:30:43,700 --> 00:30:46,900
But there's a separate problem which is sort of game logic, right?

696
00:30:46,900 --> 00:30:48,600
It's like this has nothing to do with physics.

697
00:30:48,600 --> 00:30:51,300
It's just when these two things at each other, I have some game like

698
00:30:51,300 --> 00:30:52,000
this supposed to happen.

699
00:30:52,000 --> 00:30:54,100
Like, for example, when a sword hit somebody, it's supposed to do some

700
00:30:54,100 --> 00:30:55,800
damage or something, right?

701
00:30:56,500 --> 00:30:59,400
and so, the problem with

702
00:31:01,000 --> 00:31:04,500
with handling, these sorts of things, the reason that they become

703
00:31:04,500 --> 00:31:08,600
complicated for people, when they work on them is because it's a

704
00:31:08,600 --> 00:31:11,300
problem called double dispatch, right?

705
00:31:13,100 --> 00:31:14,700
This is what it's called typically.

706
00:31:16,600 --> 00:31:20,700
In programming terms, it's a double dispatch problem because

707
00:31:20,700 --> 00:31:24,300
essentially what you have is an operation, that depends on two

708
00:31:24,300 --> 00:31:26,700
independent parameters, right?

709
00:31:26,800 --> 00:31:31,100
You can almost think of it as a matrix like setup, right.

710
00:31:31,100 --> 00:31:34,700
If you've ever used Microsoft Excel you kind of know what I'm talking

711
00:31:34,700 --> 00:31:35,300
about here.

712
00:31:35,400 --> 00:31:38,800
Where you basically, you have almost like a spreadsheet, right where

713
00:31:38,800 --> 00:31:42,800
you have every type of object coming down this way.

714
00:31:43,100 --> 00:31:46,300
And you also have every type of object going this way, right?

715
00:31:47,100 --> 00:31:48,300
So, I don't know what they are.

716
00:31:48,300 --> 00:31:52,400
They're like hero Monster Sword wall.

717
00:31:53,500 --> 00:31:54,700
Almond milk.

718
00:31:54,700 --> 00:31:59,100
Right hero Monster, Sword wall almond milk.

719
00:31:59,100 --> 00:32:00,300
Blah, blah blah, right.

720
00:32:01,500 --> 00:32:04,900
And what you want to do is you want to say, okay, when two things hit

721
00:32:04,900 --> 00:32:05,600
each other.

722
00:32:06,500 --> 00:32:07,900
I want to write my game logic.

723
00:32:07,900 --> 00:32:12,500
That's like, what happens, you know, when a sword hits another sword,

724
00:32:12,500 --> 00:32:13,700
like two swords Collide.

725
00:32:13,700 --> 00:32:15,500
Well, that's this logic, right?

726
00:32:15,500 --> 00:32:19,200
And what happens when a sword hits a monstar right?

727
00:32:19,200 --> 00:32:20,300
Well, this logic happens.

728
00:32:20,400 --> 00:32:21,300
Okay.

729
00:32:21,300 --> 00:32:22,900
Well, is that the same thing happened?

730
00:32:22,900 --> 00:32:24,800
When a monstar hits a sword, right?

731
00:32:24,800 --> 00:32:25,500
Which would be here?

732
00:32:25,500 --> 00:32:28,900
Presumably they're symmetric, I don't know, they wouldn't have to be,

733
00:32:28,900 --> 00:32:32,400
you could sort of make system rules where it's like there's a

734
00:32:32,400 --> 00:32:34,100
precedence to who got out of value.

735
00:32:34,100 --> 00:32:34,700
It, I don't know.

736
00:32:34,700 --> 00:32:36,500
But basically what you can

737
00:32:36,500 --> 00:32:40,500
Can imagine is most of the time, they're going to be symmetric

738
00:32:40,500 --> 00:32:44,100
meaning, you don't really have all of these.

739
00:32:44,100 --> 00:32:47,600
You only have like an upper diagonal or a lower diagonal system in

740
00:32:47,600 --> 00:32:48,900
math terms, right?

741
00:32:49,100 --> 00:32:52,700
Meaning that basically all of the things that happen if you took the

742
00:32:52,700 --> 00:32:54,800
stair, step of the diagonal, right?

743
00:32:55,000 --> 00:32:59,800
All of the things that happen in these cells are actually the same as

744
00:33:00,000 --> 00:33:03,300
What happened reflected along this diagonal, right?

745
00:33:03,300 --> 00:33:07,800
So when Akira and a monstar Collide, we probably wouldn't do something

746
00:33:07,800 --> 00:33:10,600
different than when a monster and a hero.

747
00:33:10,600 --> 00:33:15,800
Collide meaning in this routine, we probably don't care, which one was

748
00:33:15,800 --> 00:33:20,500
passed in and which one was hit right?

749
00:33:20,600 --> 00:33:23,200
Like, who is doing the movement?

750
00:33:23,200 --> 00:33:24,800
We probably don't super care.

751
00:33:24,800 --> 00:33:25,500
Most of the time.

752
00:33:25,900 --> 00:33:29,900
Now that may not necessarily be true, but it's probably true because

753
00:33:30,000 --> 00:33:34,100
Even in circumstances where you do sort of care about who was

754
00:33:34,200 --> 00:33:38,700
initiating the Collision meaning, I'd like just to give a more

755
00:33:38,700 --> 00:33:45,100
concrete example, suppose we have something where there's like a block

756
00:33:45,300 --> 00:33:47,600
that's going around on a path, right?

757
00:33:47,700 --> 00:33:51,900
So we've got this sort of block and it's moving and, you know, over

758
00:33:51,900 --> 00:33:55,900
time it just kind of moves around and we've got the hero and the hero

759
00:33:55,900 --> 00:33:59,800
is here and, you know, he's can run into the block

760
00:34:00,500 --> 00:34:05,600
And maybe we want some logic that says something like, okay, we want

761
00:34:05,600 --> 00:34:09,500
the hero to have to actually run into the block if the hero was just

762
00:34:09,500 --> 00:34:13,600
standing here and the block collided with him, it would just push him.

763
00:34:13,699 --> 00:34:17,199
But it's only if he pushes into the block that something happens like

764
00:34:17,199 --> 00:34:19,600
the block lights up or trigger something, right?

765
00:34:20,100 --> 00:34:24,400
So even in those circumstances, we probably wouldn't implement it by

766
00:34:24,400 --> 00:34:26,800
making this Matrix anti-semitic.

767
00:34:27,000 --> 00:34:27,400
I'm sorry.

768
00:34:27,800 --> 00:34:28,699
Asymmetric?

769
00:34:28,900 --> 00:34:30,100
Right, we probably wouldn't do that.

770
00:34:30,199 --> 00:34:31,900
Or asymmetrical I should say.

771
00:34:33,800 --> 00:34:38,000
Symmetrical asymmetrical.

772
00:34:39,500 --> 00:34:40,699
So a symmetric.

773
00:34:40,699 --> 00:34:45,300
So interestingly enough symmetric was not ever a word.

774
00:34:46,000 --> 00:34:47,600
It was, it was symmetrical.

775
00:34:47,800 --> 00:34:52,000
That was the word and symmetric is some kind of newfangled word that

776
00:34:52,000 --> 00:34:53,300
people introduced recently.

777
00:34:53,600 --> 00:34:55,400
So I'll try to use the old-school.

778
00:34:55,500 --> 00:34:58,800
Let's learn the old school math, word and say symmetrical course.

779
00:34:58,900 --> 00:35:01,400
Asymmetrical didn't exist for a long time, too.

780
00:35:01,500 --> 00:35:03,600
That's a symmetric asymmetric.

781
00:35:03,700 --> 00:35:06,600
And asymmetrical are actually pretty new words as well.

782
00:35:06,600 --> 00:35:08,500
But anyway, point being

783
00:35:09,200 --> 00:35:13,900
We probably wouldn't implement this with an asymmetric dispatch kind

784
00:35:13,900 --> 00:35:14,500
of a scheme.

785
00:35:14,900 --> 00:35:17,800
What would probably do is when this Collision occurred.

786
00:35:17,900 --> 00:35:22,000
We just look at what the velocity of the player was and ask ourselves

787
00:35:22,000 --> 00:35:25,000
whether they were true or acceleration or something whether they were

788
00:35:25,000 --> 00:35:27,700
trying to accelerate into the block or not, right?

789
00:35:27,700 --> 00:35:30,500
Or whether they had a velocity, that was moving them into the block at

790
00:35:30,500 --> 00:35:31,600
the time or not.

791
00:35:31,600 --> 00:35:32,300
Right.

792
00:35:32,400 --> 00:35:35,300
That's probably how we would make those kind of determinations.

793
00:35:35,400 --> 00:35:38,800
Not who happened to be which variable in

794
00:35:38,900 --> 00:35:42,100
A collision detection call because that just doesn't seem like the

795
00:35:42,100 --> 00:35:45,900
sanest way to do it since that's really just an artifact of how we

796
00:35:45,900 --> 00:35:48,300
choose to process our collisions, we may want to process them

797
00:35:48,300 --> 00:35:48,900
simultaneously.

798
00:35:48,900 --> 00:35:51,900
We may want to do all sorts of things and how we actually compute

799
00:35:51,900 --> 00:35:52,500
Collision.

800
00:35:52,800 --> 00:35:57,300
So it's probably not a good idea to bake how our logic Works into that

801
00:35:57,300 --> 00:35:58,400
system, right?

802
00:35:58,700 --> 00:35:59,800
So typically, if you

803
00:36:00,000 --> 00:36:01,600
About what we're doing here.

804
00:36:01,700 --> 00:36:05,100
We're typically only specifying sort of this upper triangular part of

805
00:36:05,100 --> 00:36:09,800
things and we're just going to assume that when we do things we if we

806
00:36:09,800 --> 00:36:12,000
were going to press the Collision that looked like this, we just

807
00:36:12,000 --> 00:36:13,400
instead do it handle it.

808
00:36:13,400 --> 00:36:15,800
Like we would if it was the other way around, right?

809
00:36:15,800 --> 00:36:17,300
Which is a pretty trivial thing for us to do.

810
00:36:18,700 --> 00:36:19,200
so,

811
00:36:20,700 --> 00:36:24,700
Even with that constraint even only filling in half of this Matrix.

812
00:36:24,900 --> 00:36:26,800
We would ask the question, right?

813
00:36:26,800 --> 00:36:31,300
And you should ask the question, how many dispatch routines?

814
00:36:31,300 --> 00:36:33,100
Do you have right?

815
00:36:33,100 --> 00:36:38,700
How many dispatch routines must you, right?

816
00:36:39,700 --> 00:36:43,300
You right, right?

817
00:36:43,800 --> 00:36:47,400
And you should be able to figure out like this is this is some pretty

818
00:36:47,400 --> 00:36:48,600
basic math, right?

819
00:36:49,800 --> 00:36:53,500
How many entity types are there if you wanted to fill in the whole

820
00:36:53,500 --> 00:36:55,000
Matrix, right?

821
00:36:55,100 --> 00:36:58,400
How many entities, how many dispatcher teens would you need?

822
00:36:58,500 --> 00:37:01,700
Well, you would need the number of entity types, right?

823
00:37:01,700 --> 00:37:02,300
Squared?

824
00:37:02,500 --> 00:37:02,700
Right?

825
00:37:02,700 --> 00:37:06,200
Because what's the area of, you know, a square?

826
00:37:06,400 --> 00:37:09,600
It's, you know, the the side times the side, right?

827
00:37:09,600 --> 00:37:12,800
So T times T would tell us how many discs t squared is, how many

828
00:37:12,800 --> 00:37:15,600
dispatch routines we would need, right?

829
00:37:15,800 --> 00:37:18,900
And in this case, we only need to supply half of them because we don't

830
00:37:18,900 --> 00:37:19,400
actually need

831
00:37:19,600 --> 00:37:21,400
Need these ones down here.

832
00:37:21,500 --> 00:37:26,200
So we actually get to remove a fair bit of them, right?

833
00:37:26,200 --> 00:37:31,000
So we only need half of them but not exactly half of them because half

834
00:37:31,000 --> 00:37:34,200
would cut it right down the diagonal, right, but we're not really

835
00:37:34,200 --> 00:37:35,800
cutting these squares in half.

836
00:37:35,900 --> 00:37:39,200
We actually have to fill out the entire square of the diagonal, right?

837
00:37:39,400 --> 00:37:45,000
So we actually need a little more than half of them, right?

838
00:37:45,100 --> 00:37:47,100
But I don't super care too much about that.

839
00:37:47,100 --> 00:37:49,400
We could even say, let's just say it was even tease.

840
00:37:49,500 --> 00:37:50,300
Squared over 2.

841
00:37:50,300 --> 00:37:51,700
We don't really care too much.

842
00:37:51,800 --> 00:37:54,300
The point is the t squared, right?

843
00:37:54,500 --> 00:37:57,200
That's the part that should scare anyone looking at this.

844
00:37:57,800 --> 00:38:01,800
Because if we were to graph that function and we've talked about this

845
00:38:01,800 --> 00:38:05,100
before, this kind of gets back to the concept of order notation,

846
00:38:05,300 --> 00:38:05,800
right?

847
00:38:05,900 --> 00:38:10,400
I don't know if Google can graph these things, I think so much saying

848
00:38:10,400 --> 00:38:11,100
that it could.

849
00:38:11,500 --> 00:38:11,900
Yeah.

850
00:38:14,300 --> 00:38:17,600
So basically, if you look at what happens when you graph something

851
00:38:17,600 --> 00:38:18,500
like this, right?

852
00:38:18,500 --> 00:38:20,900
And let's zoom out just a little bit here so you can kind of see.

853
00:38:21,700 --> 00:38:25,900
So what you can see when you have a squared function is that it

854
00:38:25,900 --> 00:38:29,700
doesn't take very many entities to start getting up into absolutely

855
00:38:29,700 --> 00:38:30,800
intractable numbers.

856
00:38:31,000 --> 00:38:36,100
If we only had 20 entity types, we would already be at 400 dispatcher

857
00:38:36,100 --> 00:38:38,800
teens that even dividing that by two knocks it down to 200.

858
00:38:38,800 --> 00:38:39,500
Who cares?

859
00:38:39,500 --> 00:38:43,900
That's way too many dispatches for only 20 types of entities, right?

860
00:38:44,000 --> 00:38:44,300
Right.

861
00:38:45,200 --> 00:38:49,300
And so typically what I like to point out and and this is sort of

862
00:38:49,300 --> 00:38:51,400
something that gets at the heart of how we're going to be handling

863
00:38:51,400 --> 00:38:55,400
game logic as we go or at least my approach to it, how I tend to look

864
00:38:55,400 --> 00:38:59,300
at it, is these sorts of things are relatively untenable, right?

865
00:38:59,500 --> 00:38:59,800
And so the

866
00:39:00,000 --> 00:39:02,700
Double dispatch problem is a very real problem.

867
00:39:03,000 --> 00:39:04,700
It's very problematic.

868
00:39:04,700 --> 00:39:05,400
It's a t-square.

869
00:39:05,400 --> 00:39:06,000
It sort of a thing.

870
00:39:06,000 --> 00:39:06,900
It's a know.

871
00:39:07,400 --> 00:39:10,000
Typically also of people will write that like this.

872
00:39:10,300 --> 00:39:11,900
Oh, N squared, right?

873
00:39:12,100 --> 00:39:13,700
We haven't really talked about order annotation much.

874
00:39:13,700 --> 00:39:17,100
But basically, when people use this kind of terminology what they're

875
00:39:17,100 --> 00:39:20,800
talking about is, how does the problem that you're dealing with scale

876
00:39:20,800 --> 00:39:23,200
up as you increase the number of elements?

877
00:39:23,200 --> 00:39:27,500
So you can think of n as basically, how many things are involved.

878
00:39:27,500 --> 00:39:29,800
And oh, something with an n in it.

879
00:39:30,200 --> 00:39:32,800
Is telling you what the curve looks like, right?

880
00:39:32,900 --> 00:39:35,700
What that curve looks like as it scales as n increases.

881
00:39:35,800 --> 00:39:40,800
So basically, our order notation for that curve, looks awful.

882
00:39:40,800 --> 00:39:44,100
It looks like this and somewhere around here, it becomes a tractable

883
00:39:44,100 --> 00:39:45,700
so it's not the kind of thing that we want.

884
00:39:46,000 --> 00:39:49,200
And so one thing that you might ask is like, whoa, how did games deal

885
00:39:49,200 --> 00:39:50,100
with this problem?

886
00:39:51,000 --> 00:39:54,400
And the answer is they deal with it in two different ways and we're

887
00:39:54,400 --> 00:39:57,300
going to be taking sort of out of, we're definitely going to be sort

888
00:39:57,300 --> 00:39:59,900
of focusing on the way that I think is a better.

889
00:40:00,000 --> 00:40:04,600
Way basically, some attack it head-on and they say we're just going to

890
00:40:04,600 --> 00:40:07,000
go ahead and do double dispatch and we'll write code for all these

891
00:40:07,000 --> 00:40:07,300
things.

892
00:40:07,400 --> 00:40:10,300
And what that basically means is, you just don't have very many entity

893
00:40:10,300 --> 00:40:11,500
types right.

894
00:40:11,500 --> 00:40:16,100
Either either the entity types and any types are few.

895
00:40:18,800 --> 00:40:21,900
Or the responses are few, right?

896
00:40:21,900 --> 00:40:23,600
Because you can imagine one way we can do this.

897
00:40:23,600 --> 00:40:26,200
Really simply is saying, oh, well when monsters hit monsters, nothing

898
00:40:26,200 --> 00:40:27,700
happens, right?

899
00:40:27,700 --> 00:40:30,400
So lots of our stuff just doesn't have anything in it.

900
00:40:30,500 --> 00:40:33,500
A lot of these are just null and we don't have to do work to handle

901
00:40:33,500 --> 00:40:34,300
null things.

902
00:40:34,500 --> 00:40:38,200
So what we do instead is we say we don't when things most things don't

903
00:40:38,200 --> 00:40:39,200
interact with each other.

904
00:40:39,400 --> 00:40:42,600
So it's not a problem or we say there, just aren't that many things,

905
00:40:42,600 --> 00:40:45,900
so even if they all do interact with each other Weldon, number is 5.

906
00:40:45,900 --> 00:40:48,000
So we wrote 25 dispatch calls, right?

907
00:40:48,200 --> 00:40:51,100
Divided by 2 and write, whatever, right?

908
00:40:51,100 --> 00:40:52,400
So it's not very many dispatch calls.

909
00:40:53,600 --> 00:40:55,400
So that's one way to deal with it, right?

910
00:40:56,300 --> 00:41:00,100
And, you know, you can think about this sort of thing, especially this

911
00:41:00,100 --> 00:41:00,800
one right here.

912
00:41:01,000 --> 00:41:05,600
This is kind of the AAA methodology, right?

913
00:41:05,800 --> 00:41:09,500
The idea is we actually hand author and most of the stuff that

914
00:41:09,500 --> 00:41:10,500
happens, right?

915
00:41:10,500 --> 00:41:13,400
It's like there's a lot of cutscenes and a lot of custom things.

916
00:41:13,400 --> 00:41:16,200
And like, oh, you went and the helicopter exploded on the roof and

917
00:41:16,200 --> 00:41:17,200
blah, blah, blah, right?

918
00:41:17,400 --> 00:41:20,100
And so the response is, there's not very many responses and they're

919
00:41:20,100 --> 00:41:23,200
just hand authored and we just hire a lot of artists to get that.

920
00:41:23,400 --> 00:41:27,000
Ponce number up to enough things and enough game, scripters to just do

921
00:41:27,000 --> 00:41:28,700
that, and it's fine, right?

922
00:41:29,700 --> 00:41:32,800
But on the whole there's just not that much flexibility if you're

923
00:41:32,800 --> 00:41:33,500
playing Call of Duty.

924
00:41:33,500 --> 00:41:37,200
There's just not that many interesting emergent things that can happen

925
00:41:37,200 --> 00:41:40,600
in that world because there just aren't that many.

926
00:41:41,200 --> 00:41:43,200
You can't script all of those different things.

927
00:41:43,200 --> 00:41:46,200
You can't create for a single Call of Duty level, that you might play

928
00:41:46,200 --> 00:41:48,200
three where Kevin Spacey's coming and talking to you.

929
00:41:48,500 --> 00:41:51,000
Well, everything that Kevin Spacey was going to say had to be recorded

930
00:41:51,000 --> 00:41:52,500
by Kevin Spacey, right?

931
00:41:52,600 --> 00:41:53,200
And so,

932
00:41:53,300 --> 00:41:56,000
there just isn't that much that can go on there and so if you're in

933
00:41:56,000 --> 00:41:59,300
that sort of triple, if your, if your game has a lot of triple anus to

934
00:41:59,300 --> 00:41:59,700
it,

935
00:42:00,800 --> 00:42:04,500
If your game is kind of a in a tripling, its kind of a situation,

936
00:42:04,600 --> 00:42:05,200
right?

937
00:42:06,000 --> 00:42:08,600
Then, the double dispatch problem really, isn't that much of a

938
00:42:08,600 --> 00:42:08,900
problem?

939
00:42:08,900 --> 00:42:12,400
Because you know, that you're just going to have that sort of a hand,

940
00:42:12,400 --> 00:42:15,900
authored sort of script, Ed, kind of a thing happening.

941
00:42:15,900 --> 00:42:17,100
It's fine, right?

942
00:42:17,100 --> 00:42:18,700
Think also Adventure game, right?

943
00:42:18,700 --> 00:42:23,300
Look at you, there may be 20 objects in this adventure game right now

944
00:42:23,300 --> 00:42:26,000
and 30 things on which you could use those objects.

945
00:42:26,000 --> 00:42:28,600
But you know what, only one of them Works to solve the puzzle so we

946
00:42:28,600 --> 00:42:29,800
didn't even bother anything for them.

947
00:42:30,000 --> 00:42:32,300
Some, it just says, I don't think that will work here, right?

948
00:42:32,400 --> 00:42:34,700
And so double dispatch problem solved, right?

949
00:42:34,700 --> 00:42:36,900
Because there's only one thing that actually will make the game.

950
00:42:36,900 --> 00:42:40,300
Go forwards and everything else just wasn't handled, right?

951
00:42:40,600 --> 00:42:43,800
So, we'll call this triple anus or will call this adventure style,

952
00:42:44,100 --> 00:42:44,600
right?

953
00:42:46,100 --> 00:42:49,600
Okay, so I don't think those are very interesting because the least

954
00:42:49,600 --> 00:42:52,500
lately, these days, the kinds of games that I am often the most

955
00:42:52,500 --> 00:42:55,300
interested in are ones that have a lot more richness into the way that

956
00:42:55,300 --> 00:42:56,900
they allow things to interact.

957
00:42:56,900 --> 00:43:01,900
And so, what I'd rather do is focus on ways in which you can get this

958
00:43:01,900 --> 00:43:07,000
Matrix filled without actually writing all of the different things,

959
00:43:07,200 --> 00:43:07,900
right?

960
00:43:08,700 --> 00:43:12,900
So, rather than focusing on a double dispatch problem, where we

961
00:43:12,900 --> 00:43:15,500
essentially have a type,

962
00:43:16,000 --> 00:43:17,300
The interact with each other.

963
00:43:17,800 --> 00:43:22,400
What I'm thinking is more along the lines of you know fundamental

964
00:43:22,400 --> 00:43:23,800
qualities, right?

965
00:43:27,000 --> 00:43:31,900
So, rather than thinking of an entity as a monster or a sword or

966
00:43:31,900 --> 00:43:35,000
whatever, what I'd rather do is just think of them as having

967
00:43:35,000 --> 00:43:37,900
fundamental qualities and we write interactions for fundamental

968
00:43:37,900 --> 00:43:38,500
qualities.

969
00:43:38,700 --> 00:43:40,900
So that the fundamental quality, what we're essentially doing is

970
00:43:40,900 --> 00:43:42,400
projecting down a level, right?

971
00:43:42,400 --> 00:43:45,300
Basically, like our entity types, because we know that, if we wanted

972
00:43:45,300 --> 00:43:48,900
lots of very sort of variety in here, we just have it.

973
00:43:48,900 --> 00:43:50,100
Just be an intractable problem.

974
00:43:50,400 --> 00:43:54,100
Could we just boil it down to some set of fundamental qualities?

975
00:43:54,100 --> 00:43:56,700
And then our entities are just compositions of those

976
00:43:56,900 --> 00:43:58,000
Not a qualities, right?

977
00:43:58,300 --> 00:44:01,600
So let's say we could do you know eight fundamental qualities right?

978
00:44:01,600 --> 00:44:05,200
Which is fundamentally somewhere along the lines of, you know, like 40

979
00:44:05,400 --> 00:44:07,900
different interactions between those fundamental qualities.

980
00:44:07,900 --> 00:44:09,800
And those sorts of things or who knows how we want to write that

981
00:44:09,800 --> 00:44:13,500
exactly, you know, that's a manageable number but then our entities

982
00:44:13,500 --> 00:44:15,400
are described in terms of these things, right?

983
00:44:15,400 --> 00:44:20,300
And those fundamental qualities can be sort of component based in ways

984
00:44:20,300 --> 00:44:23,900
that allows us to avoid the double avoid the double dispatch problem.

985
00:44:24,100 --> 00:44:26,300
So instead of thinking of a monstar

986
00:44:28,200 --> 00:44:28,700
Right?

987
00:44:28,700 --> 00:44:32,600
And a hero as two different things, they're just the same thing in our

988
00:44:32,600 --> 00:44:35,300
system and they just have different fundamental qualities or

989
00:44:35,300 --> 00:44:36,200
properties, right?

990
00:44:36,200 --> 00:44:39,600
Like this is, you know, often times called a property system, right?

991
00:44:39,900 --> 00:44:44,200
And so things will be more defined by the properties that they have,

992
00:44:44,400 --> 00:44:47,800
right, rather than by a single type.

993
00:44:48,000 --> 00:44:52,400
And what that lets us do, is it lets us fight and N squared problem

994
00:44:52,600 --> 00:44:55,300
with an N squared solution, right?

995
00:44:55,400 --> 00:44:56,700
If we want to have

996
00:44:56,800 --> 00:44:59,900
Have a lot of entities.

997
00:45:00,000 --> 00:45:00,300
Types.

998
00:45:00,300 --> 00:45:03,300
But we know we can't possibly write the code that is how all of them

999
00:45:03,300 --> 00:45:04,200
interact.

1000
00:45:04,300 --> 00:45:06,200
But we do want to have all them interact.

1001
00:45:06,200 --> 00:45:09,800
What we can do is say, Okay, instead of making that many entities,

1002
00:45:09,800 --> 00:45:13,900
what we'll do is make smaller pieces, just little fractions of an

1003
00:45:13,900 --> 00:45:18,400
entity that you compose together right to build up what the end of the

1004
00:45:18,400 --> 00:45:23,300
actually is and there may be a very small number of those but because

1005
00:45:23,300 --> 00:45:24,800
there are eight of them, right?

1006
00:45:24,800 --> 00:45:27,900
And entity is built out of some number of them.

1007
00:45:27,900 --> 00:45:29,800
Let's say, five average, or

1008
00:45:30,000 --> 00:45:37,800
Something that gives us right, a 1/8, right to the fifth power version

1009
00:45:37,800 --> 00:45:39,200
of of a composition, right?

1010
00:45:39,200 --> 00:45:42,000
Because if the first property for any can be any one of eight things

1011
00:45:42,000 --> 00:45:43,900
in the second property can be any one of eight things in the third,

1012
00:45:43,900 --> 00:45:44,500
probably Community.

1013
00:45:44,500 --> 00:45:45,800
One of eight things, right?

1014
00:45:45,800 --> 00:45:47,900
And I guess it's technically probably eight, seven six.

1015
00:45:48,000 --> 00:45:51,600
So it's probably more of a an 8 factorial kind of a situation, right?

1016
00:45:52,200 --> 00:45:56,200
8 factorial is a massive number, which allows us to put a small and in

1017
00:45:56,200 --> 00:45:59,800
here and get a large number of potential entity types out.

1018
00:46:00,900 --> 00:46:04,600
And so what we're doing here is we're fighting an N squared game

1019
00:46:04,600 --> 00:46:07,900
design problem with an N squared game, design solution and that tends

1020
00:46:07,900 --> 00:46:09,700
to be the more fruitful place to go.

1021
00:46:09,700 --> 00:46:11,200
I think, right?

1022
00:46:11,600 --> 00:46:14,100
And that allows us to talk about things like, you know, let's say we

1023
00:46:14,100 --> 00:46:16,100
have magical Essence, right?

1024
00:46:16,600 --> 00:46:18,300
As one of our things or whatever.

1025
00:46:18,400 --> 00:46:21,500
We just write the rules for Magical Essence and how it interacts.

1026
00:46:21,700 --> 00:46:24,900
And now, anything just has a certain amount of magical Essence to it.

1027
00:46:24,900 --> 00:46:29,300
And that allows us to make very, very many different, every kind of

1028
00:46:29,300 --> 00:46:29,900
monster that we possibly

1029
00:46:30,000 --> 00:46:32,500
We have in the game, we can now have many different types of them.

1030
00:46:32,500 --> 00:46:35,800
There's the kinds that are that, you know, Monster a can show up as

1031
00:46:35,800 --> 00:46:39,600
Monster a not magical monster a, a little bit magical monster, a

1032
00:46:39,700 --> 00:46:41,900
medium, magical monster a very magical, right?

1033
00:46:42,000 --> 00:46:45,600
Just by setting the number of their magical Essence, right?

1034
00:46:46,500 --> 00:46:50,300
And so, that's really kind of the interesting part that I think that I

1035
00:46:50,300 --> 00:46:54,300
want to go for is what are the interesting components that we can

1036
00:46:54,300 --> 00:46:55,000
create.

1037
00:46:55,000 --> 00:46:58,400
Such that putting different combinations together yields interesting

1038
00:46:58,400 --> 00:46:59,500
types of monsters and

1039
00:47:00,000 --> 00:47:02,700
x and then we're out of the business of this.

1040
00:47:02,700 --> 00:47:06,400
So we still do have the double dispatch problem, but we have it on a

1041
00:47:06,400 --> 00:47:12,000
much smaller scale and that allows us to basically get up two more

1042
00:47:12,000 --> 00:47:14,900
sets of possible interactions that the player will witness without

1043
00:47:14,900 --> 00:47:18,700
actually having to drive yourself nuts, right?

1044
00:47:19,600 --> 00:47:21,400
And so that's kind of what I'm aiming towards.

1045
00:47:21,500 --> 00:47:26,400
So for now we will sort of say because we haven't gotten into that

1046
00:47:26,400 --> 00:47:28,400
element of any design yet.

1047
00:47:29,800 --> 00:47:32,800
When we process, these will do it in the sort of old-school, double

1048
00:47:32,800 --> 00:47:35,300
dispatch way where we'll just kind of handle, a few of the things.

1049
00:47:35,300 --> 00:47:37,800
We'll do the triple Enos version, right, where we handle?

1050
00:47:37,800 --> 00:47:42,700
Only a few of the things but the eye towards how that we're going to

1051
00:47:42,700 --> 00:47:46,700
solve this for real, in the future is when we have sort of when we

1052
00:47:46,700 --> 00:47:49,800
actually go and do how we want our enemies to be composed and built.

1053
00:47:50,000 --> 00:47:54,000
What we'll do is at that point say, okay now what we're actually doing

1054
00:47:54,000 --> 00:47:58,000
their pasta Collision is processing the Collision of those properties

1055
00:47:58,200 --> 00:47:59,000
not

1056
00:47:59,200 --> 00:47:59,800
The Entity.

1057
00:48:00,200 --> 00:48:02,700
And so that's where I would like to get to eventually.

1058
00:48:02,700 --> 00:48:04,900
But you know, baby steps one thing at a time.

1059
00:48:05,600 --> 00:48:08,500
So when we come in here, what we want to do is we want to sort of

1060
00:48:08,500 --> 00:48:09,400
handle that.

1061
00:48:10,100 --> 00:48:10,900
So I'm just going to make.

1062
00:48:10,900 --> 00:48:12,700
I'm just going to pull it out of here for now.

1063
00:48:14,600 --> 00:48:17,500
So you can kind of see it a little more clearly and know that we're

1064
00:48:17,500 --> 00:48:20,700
going to replace it with something different in the future, right?

1065
00:48:20,700 --> 00:48:23,000
I'm kind of putting this in as a thing it's like, hey, we know we're

1066
00:48:23,000 --> 00:48:24,900
going to replace it, so I'm just making, I'm going to pull into

1067
00:48:24,900 --> 00:48:27,200
separate function because I know I want to write another version that

1068
00:48:27,200 --> 00:48:29,200
function eventually and be able to do that changeover.

1069
00:48:30,000 --> 00:48:32,900
So, yeah, this is not I'm not making fun process.

1070
00:48:32,900 --> 00:48:35,300
I guess I'm not making a function because anyone else is ever going to

1071
00:48:35,300 --> 00:48:36,200
call this function.

1072
00:48:36,400 --> 00:48:39,300
This is purely me saying, I want to be able to write a second version

1073
00:48:39,300 --> 00:48:41,300
of this function and swap it out eventually.

1074
00:48:41,700 --> 00:48:44,300
So I kind of want that flexibility there.

1075
00:48:45,400 --> 00:48:48,400
All right, so when we have this, what I'm going to do is I'm going to

1076
00:48:48,400 --> 00:48:52,600
say all right I'm going to say handle collision and I'm going to pass

1077
00:48:52,600 --> 00:48:56,200
that handle Collision two entities.

1078
00:48:56,400 --> 00:49:00,300
I'm going to sort the entities by their type so basically I'm going to

1079
00:49:00,300 --> 00:49:05,000
say we've got a Sim entity a in a similarity be and I'm going to start

1080
00:49:05,000 --> 00:49:08,000
out by assuming that the entity that we got called with is entity a

1081
00:49:08,000 --> 00:49:11,300
and assume that the entity that we hit is entity be.

1082
00:49:11,800 --> 00:49:14,600
But then what I'm going to do is I'm going to say if entity a

1083
00:49:15,200 --> 00:49:19,800
If it's type is greater than and two BB's type, right?

1084
00:49:19,800 --> 00:49:22,100
Then I'm going to swap the two, right?

1085
00:49:22,700 --> 00:49:25,200
And I don't know that we ever wrote any swap code.

1086
00:49:25,400 --> 00:49:26,900
I don't think that we did.

1087
00:49:27,100 --> 00:49:29,600
I could be wrong about that, but I'm pretty sure that I didn't

1088
00:49:30,000 --> 00:49:33,600
specifically because yeah, we did not ever write.

1089
00:49:33,600 --> 00:49:34,900
Once that's fine, it doesn't matter.

1090
00:49:35,400 --> 00:49:39,200
We'll just do temp equals a equals B Because temp, something like

1091
00:49:39,200 --> 00:49:39,600
this.

1092
00:49:39,600 --> 00:49:40,200
Right?

1093
00:49:40,300 --> 00:49:43,700
So spot those two guys and basically what I want to do is I just want

1094
00:49:43,700 --> 00:49:44,700
to make sure

1095
00:49:45,000 --> 00:49:45,600
Right.

1096
00:49:46,700 --> 00:49:52,900
That whichever one has the lower entity type value comes first that

1097
00:49:52,900 --> 00:50:01,200
way that is how I am solving temporarily right this triangle.

1098
00:50:01,200 --> 00:50:02,500
Where did I go with that?

1099
00:50:02,600 --> 00:50:03,600
Where is it?

1100
00:50:03,600 --> 00:50:04,100
Where is it?

1101
00:50:04,100 --> 00:50:04,800
There it is.

1102
00:50:05,200 --> 00:50:09,000
That is how I'm preventing us from ever being down here in the lower

1103
00:50:09,000 --> 00:50:10,600
part of the triangle, right?

1104
00:50:10,600 --> 00:50:14,700
I basically, I'm just saying, let's always talk about the lower Value

1105
00:50:14,700 --> 00:50:14,800
First.

1106
00:50:14,900 --> 00:50:15,400
First.

1107
00:50:15,400 --> 00:50:21,900
So if we got past, if we got past S, as the first parameter, and H is

1108
00:50:21,900 --> 00:50:23,900
the second parameter, right?

1109
00:50:25,200 --> 00:50:27,400
I'm sorry if we got past.

1110
00:50:28,800 --> 00:50:29,700
Betty, how you think of this?

1111
00:50:30,000 --> 00:50:32,500
I don't even know which one of these I'm thinking is my row and which

1112
00:50:32,500 --> 00:50:33,000
one is my calm.

1113
00:50:33,000 --> 00:50:37,900
But point being if we got past this Square by swapping them and

1114
00:50:37,900 --> 00:50:40,800
knowing that I always have the lower one in the first entity in the

1115
00:50:40,800 --> 00:50:43,500
higher when the second one, I'll be able to do my right, my

1116
00:50:43,500 --> 00:50:48,900
operations, as if this always got past, you know, as as its flip

1117
00:50:48,900 --> 00:50:50,600
around right as this guy, right?

1118
00:50:50,600 --> 00:50:52,200
So we're just we're just doing that flip.

1119
00:50:52,600 --> 00:50:55,800
So that everything always gets mirrored up into that upper diagonal if

1120
00:50:55,800 --> 00:50:56,200
you will.

1121
00:50:56,800 --> 00:50:58,000
So when we handle a collision, we

1122
00:50:58,100 --> 00:50:59,700
Handle question between A and B.

1123
00:50:59,700 --> 00:50:59,900
Like

1124
00:51:04,300 --> 00:51:06,600
And so that like like I said, there's a number of things that we could

1125
00:51:06,600 --> 00:51:07,000
do here.

1126
00:51:07,000 --> 00:51:08,500
We'll do a really simple one for now.

1127
00:51:09,300 --> 00:51:14,100
I'm just going to go ahead and say all right, internal void, here's my

1128
00:51:14,100 --> 00:51:14,900
handle Collision.

1129
00:51:15,500 --> 00:51:18,000
I've got some entity a, I've got some in a teepee.

1130
00:51:18,000 --> 00:51:21,700
And what I want to do is I'm just going to start saying some stuff

1131
00:51:21,700 --> 00:51:23,600
just totally randomly typing in here.

1132
00:51:24,600 --> 00:51:28,300
Let's say if type A equals something and type B equals, something that

1133
00:51:28,300 --> 00:51:30,400
we're going to do a response, right?

1134
00:51:30,400 --> 00:51:32,600
The simplest possible thing you could think to do here.

1135
00:51:33,400 --> 00:51:38,000
So let's see if the which is the one we wanted, if the entity type

1136
00:51:38,000 --> 00:51:39,900
sword, right?

1137
00:51:40,900 --> 00:51:49,300
That whereas my type let's see there and maybe oh and you know what I

1138
00:51:49,300 --> 00:51:50,700
could do I can make this even better.

1139
00:51:52,100 --> 00:51:59,400
Let's do in line full 32 if types match, right?

1140
00:51:59,900 --> 00:52:02,700
And that will basically say will pass the am to be

1141
00:52:03,500 --> 00:52:05,800
And we'll type pass the types that we want them to be.

1142
00:52:05,800 --> 00:52:09,700
So let's go ahead and look at our Sim region type here.

1143
00:52:10,400 --> 00:52:16,800
So these were entity type A type, A type, any type B type, right.

1144
00:52:17,400 --> 00:52:22,300
And so, what I want to do here is say okay, we'll see whether

1145
00:52:27,600 --> 00:52:27,800
What?

1146
00:52:27,800 --> 00:52:34,000
I don't want to do is I don't want this code tap to know which one of

1147
00:52:34,000 --> 00:52:36,900
these is the lower one, right?

1148
00:52:37,100 --> 00:52:42,100
So what I wanted to do was say, okay, it's going to pass these two in,

1149
00:52:42,200 --> 00:52:45,600
and this guy will swap them around again, potentially for him.

1150
00:52:45,600 --> 00:52:49,000
I'm trying to think of exactly how that would work.

1151
00:52:50,200 --> 00:52:53,200
In fact, I guess, I guess this handle Collision called doesn't even

1152
00:52:53,200 --> 00:52:54,100
have to do it.

1153
00:52:55,500 --> 00:52:59,600
Yeah, so the problem I try to avoid is making you have to presort all

1154
00:52:59,600 --> 00:52:59,900
these.

1155
00:52:59,900 --> 00:53:02,300
We could just do that and maybe I'll just do that for now.

1156
00:53:02,300 --> 00:53:03,500
And we'll talk about tomorrow.

1157
00:53:03,500 --> 00:53:06,900
But basically what I'm worried about here is, if we change the order

1158
00:53:06,900 --> 00:53:10,300
of these identifiers, then these matches won't work properly, right?

1159
00:53:10,300 --> 00:53:14,000
The sword always has to be on be because it comes later than for

1160
00:53:14,000 --> 00:53:15,900
example, the monstar, right?

1161
00:53:16,200 --> 00:53:18,700
So, what I would want to do is potentially write this in a way that

1162
00:53:18,700 --> 00:53:22,900
makes sure that you can always test them and not have to care, but I

1163
00:53:22,900 --> 00:53:23,700
won't deal with that for now.

1164
00:53:23,700 --> 00:53:25,200
Because we only have five minutes left or so.

1165
00:53:25,300 --> 00:53:27,100
Because we started about five minutes late, we only have about five

1166
00:53:27,100 --> 00:53:29,000
minutes, so I won't get into that.

1167
00:53:29,000 --> 00:53:30,200
Now, that's what I was thinking.

1168
00:53:30,300 --> 00:53:32,000
That's what was going on in my head right there.

1169
00:53:32,700 --> 00:53:36,700
So if we have a monstar sword Collision, then maybe what we want to do

1170
00:53:36,700 --> 00:53:39,500
is make the monstars hit points, go down, right?

1171
00:53:39,500 --> 00:53:40,500
Or something like that.

1172
00:53:40,900 --> 00:53:44,200
I don't really remember because we've a long time since we did that,

1173
00:53:44,600 --> 00:53:48,900
what the hit point situation was but I guess what we do is we scan

1174
00:53:48,900 --> 00:53:52,900
through for the last hit point and we would remove some of it, right?

1175
00:53:53,000 --> 00:53:55,100
So we take that filled amount.

1176
00:53:55,300 --> 00:53:57,700
Out and we would sort of make that go down.

1177
00:53:58,000 --> 00:53:58,600
So

1178
00:54:00,100 --> 00:54:02,300
But for now, the other thing I could do is just attracting the hit

1179
00:54:02,300 --> 00:54:03,000
point Max.

1180
00:54:03,400 --> 00:54:05,400
Since again, we're mostly out of time so we could do that.

1181
00:54:05,400 --> 00:54:08,000
But eventually we want to do is actually process the hit points.

1182
00:54:08,700 --> 00:54:10,600
You know, do something kind of useful there.

1183
00:54:11,500 --> 00:54:14,500
So, what we want to do is just say, okay, if the Sword and the monster

1184
00:54:14,500 --> 00:54:16,300
hit, then we'll go ahead and do that.

1185
00:54:16,300 --> 00:54:18,500
And maybe we also just for now, we'll just get rid of the sword as

1186
00:54:18,500 --> 00:54:19,200
well, right?

1187
00:54:19,200 --> 00:54:22,700
So we'll make make entity non-spatial will just say the sword just

1188
00:54:22,700 --> 00:54:23,600
goes away, right?

1189
00:54:23,600 --> 00:54:28,800
It becomes, it goes back to the hilt or wherever swords go, and so

1190
00:54:28,800 --> 00:54:29,800
that should do it for hitting.

1191
00:54:30,000 --> 00:54:30,700
The monster of the store.

1192
00:54:30,700 --> 00:54:33,900
Now unfortunately, I believe this will do nothing when we actually run

1193
00:54:33,900 --> 00:54:34,200
it.

1194
00:54:34,200 --> 00:54:37,700
At least that's my assumption even though it clearly hits the monstar.

1195
00:54:37,700 --> 00:54:40,800
And the reason for that is we have said that the sword does not

1196
00:54:40,800 --> 00:54:42,000
collide with things, right?

1197
00:54:42,000 --> 00:54:44,100
And that's what we wanted.

1198
00:54:44,100 --> 00:54:49,800
We don't want it to stop when it hits things but what we want to do is

1199
00:54:49,800 --> 00:54:51,500
still process collisions.

1200
00:54:51,500 --> 00:54:55,000
So this was the other thing that we want to do was introduce some kind

1201
00:54:55,000 --> 00:54:56,300
of flag that controls.

1202
00:54:56,300 --> 00:54:58,700
Whether you when you run into things you stop

1203
00:55:00,100 --> 00:55:01,400
Whether you Collide at all.

1204
00:55:02,000 --> 00:55:09,100
So, instead of making Clyde's, only mean, essentially that you detect

1205
00:55:09,100 --> 00:55:12,700
collisions or sorry, that you were 10 detect and respond to them.

1206
00:55:12,900 --> 00:55:14,900
What I want to do is make it so there's a way that say that you

1207
00:55:14,900 --> 00:55:18,300
respond to collisions but you don't actually have your movement

1208
00:55:18,300 --> 00:55:19,400
impeded by them.

1209
00:55:19,400 --> 00:55:20,000
Right?

1210
00:55:20,900 --> 00:55:24,900
And so trying to think about how that would work basically if the

1211
00:55:24,900 --> 00:55:28,200
person who is being moved at this time, right?

1212
00:55:28,300 --> 00:55:29,600
What I want to do is say

1213
00:55:29,900 --> 00:55:33,400
Let's let's just say, we don't check that flag, right?

1214
00:55:33,400 --> 00:55:35,300
We don't check the Collide slag here.

1215
00:55:35,500 --> 00:55:41,100
Okay, everybody always does collides in that way, let's say and we'll

1216
00:55:41,100 --> 00:55:41,700
do that processing.

1217
00:55:41,700 --> 00:55:46,300
The only difference is when we come through here, we won't actually

1218
00:55:46,900 --> 00:55:49,800
set that team in lower.

1219
00:55:50,300 --> 00:55:53,600
In the case, where the Collide flag is not set, right?

1220
00:55:53,700 --> 00:55:56,900
So basically what we're going to say is that the movement always

1221
00:55:56,900 --> 00:55:58,300
actually totally works.

1222
00:56:00,100 --> 00:56:01,900
In the case, where the Collide flag isn't set.

1223
00:56:01,900 --> 00:56:08,200
So we basically have a thing which is when the entity sort of stops on

1224
00:56:08,200 --> 00:56:11,500
collision or something, like this is going to be that flag, right?

1225
00:56:11,500 --> 00:56:12,300
If that's that.

1226
00:56:13,500 --> 00:56:17,400
So we'll compute this at the outset will just say stops and collision.

1227
00:56:17,400 --> 00:56:18,900
That's what set you got.

1228
00:56:18,900 --> 00:56:19,900
Some texture in here.

1229
00:56:19,900 --> 00:56:20,700
What's my syntax?

1230
00:56:20,700 --> 00:56:21,300
Are they okay?

1231
00:56:21,600 --> 00:56:26,000
Closing parentheses so we'll say if it stops on collision will find

1232
00:56:26,000 --> 00:56:26,800
that out.

1233
00:56:26,800 --> 00:56:29,400
And then what we'll do is we'll say when we do our little team in

1234
00:56:29,400 --> 00:56:29,700
process,

1235
00:56:29,900 --> 00:56:34,200
Here that will be used to figure out who actually is the first one

1236
00:56:34,200 --> 00:56:34,700
hit.

1237
00:56:35,500 --> 00:56:39,000
But when we actually go through and do our Collision processing, we

1238
00:56:39,000 --> 00:56:40,000
will not actually.

1239
00:56:40,000 --> 00:56:43,300
So we'll move it to the right location will do the the hint Collision,

1240
00:56:43,500 --> 00:56:45,000
but then we'll continue it.

1241
00:56:45,100 --> 00:56:48,600
Allowing it to basically go forwards, right?

1242
00:56:49,700 --> 00:56:53,500
So, what we'll do here is we'll say, let's see player DP.

1243
00:56:53,600 --> 00:56:58,100
So we don't want to actually process any of these things at all right?

1244
00:56:58,100 --> 00:56:59,500
We don't want to change.

1245
00:57:00,000 --> 00:57:03,200
Of this player Delta stuff to start pushing myself to you.

1246
00:57:03,200 --> 00:57:07,000
Well I guess we do want to update it, we just don't want to change its

1247
00:57:07,000 --> 00:57:10,500
direction seems about right to me.

1248
00:57:10,700 --> 00:57:16,200
So we want to do, we don't want to change its velocity like so right

1249
00:57:16,200 --> 00:57:20,000
because this is the velocity change and we don't want to clip its

1250
00:57:20,000 --> 00:57:20,800
movement.

1251
00:57:21,200 --> 00:57:27,600
So it looks like player, Delta is not being used in here, so I think I

1252
00:57:27,600 --> 00:57:29,800
can just do this if stop

1253
00:57:30,000 --> 00:57:31,900
It's on collision, we do that.

1254
00:57:31,900 --> 00:57:34,400
Otherwise we keep going like, so.

1255
00:57:35,900 --> 00:57:39,600
And then we also will have to do a little bit to do.

1256
00:57:42,700 --> 00:57:44,800
In this particular case, when things are supposed to keep going

1257
00:57:44,800 --> 00:57:48,900
through need a, our Collision table here, right?

1258
00:57:48,900 --> 00:57:51,100
Our thing that says, whether you've already collided with someone

1259
00:57:51,100 --> 00:57:53,100
because we talked about doing that, but we haven't done it yet.

1260
00:57:53,800 --> 00:57:55,700
So, let's just see if that works at all.

1261
00:57:56,600 --> 00:57:57,300
So now,

1262
00:58:00,100 --> 00:58:03,400
Well we do have one problem, our Collision thing worked.

1263
00:58:03,400 --> 00:58:03,600
Okay.

1264
00:58:03,600 --> 00:58:06,100
But we have a problem with this guy actually collides.

1265
00:58:06,200 --> 00:58:09,700
With when it actually collides it gets stopped because it keeps

1266
00:58:09,700 --> 00:58:13,100
hitting the thing that's colliding and we need to we're going to need

1267
00:58:13,100 --> 00:58:15,100
the thing that says, don't keep colliding with someone you already

1268
00:58:15,100 --> 00:58:15,900
collided with.

1269
00:58:16,000 --> 00:58:17,500
So we need our Collision of table thing.

1270
00:58:17,700 --> 00:58:19,700
That will be the thing that will deal with tomorrow, so that you can

1271
00:58:19,700 --> 00:58:20,900
Sail on through those things.

1272
00:58:21,600 --> 00:58:25,000
But, all right, I think we're basically right on time 905 now would be

1273
00:58:25,000 --> 00:58:28,000
a good time to start the Q&A.

1274
00:58:28,300 --> 00:58:29,800
If you could, please prefix your questions,

1275
00:58:29,900 --> 00:58:31,300
With Q: so I can see them.

1276
00:58:31,500 --> 00:58:35,300
And if you could keep it to stuff that we've coded on today's stream

1277
00:58:35,300 --> 00:58:38,400
or on previous dreams, if you want to ask off-topic questions or stuff

1278
00:58:38,400 --> 00:58:39,700
about code, we're going to write in the future.

1279
00:58:39,700 --> 00:58:42,000
Please come before the stream.

1280
00:58:42,000 --> 00:58:42,900
Do that in the pre stream?

1281
00:58:42,900 --> 00:58:46,400
Call about 15 minutes before one of our scheduled start times and ask

1282
00:58:46,400 --> 00:58:48,300
the questions there tomorrow morning.

1283
00:58:48,300 --> 00:58:50,800
It's early one tomorrow and Friday.

1284
00:58:50,800 --> 00:58:55,600
So come tomorrow morning and ask those questions and we will talk

1285
00:58:55,600 --> 00:58:58,700
about them but let me see if I can launch the Q&A here.

1286
00:59:00,200 --> 00:59:04,200
Yes, I'm so glad that the handmade he robot listens to me.

1287
00:59:04,200 --> 00:59:07,700
Now I don't know how I gained this privilege, but thank you, too.

1288
00:59:07,700 --> 00:59:08,400
For whoever

1289
00:59:10,500 --> 00:59:12,100
Made the handmade hear about respond to me.

1290
00:59:12,100 --> 00:59:12,900
It's pretty cool.

1291
00:59:14,400 --> 00:59:14,900
Alright.

1292
00:59:16,000 --> 00:59:17,200
Okay, so let's see.

1293
00:59:17,200 --> 00:59:20,900
Questions questions, does anybody have any questions?

1294
00:59:26,300 --> 00:59:29,000
Or did everyone just understand everything and we are good to go.

1295
00:59:29,900 --> 00:59:30,600
It could be true.

1296
00:59:41,800 --> 00:59:44,500
How long in your opinion, does it take to become fluent on emacs?

1297
00:59:44,800 --> 00:59:45,900
I have no idea.

1298
00:59:47,500 --> 00:59:54,900
I started programming in emacs in 1991, so I don't remember when after

1299
00:59:54,900 --> 00:59:57,000
that, I was pretty comfortable that I don't think it took me that

1300
00:59:57,000 --> 00:59:59,100
long, but I don't know.

1301
01:00:10,700 --> 01:00:14,000
Could an entity have multiple fundamental Quality Property things?

1302
01:00:14,700 --> 01:00:18,400
Yes, my idea is that basically, that entities will be composed of, as

1303
01:00:18,400 --> 01:00:20,500
many fundamental properties, as we choose to implement.

1304
01:00:20,500 --> 01:00:24,500
So, like, you know, I don't know how many fundamental properties will

1305
01:00:24,500 --> 01:00:28,000
end up with, but entities will be able to have as many of them kind of

1306
01:00:28,000 --> 01:00:29,500
on them as you want them to have.

1307
01:00:34,700 --> 01:00:36,000
Handmade hear about will listen to you.

1308
01:00:36,000 --> 01:00:39,000
If it feels like, it seems to be agreeable today.

1309
01:00:39,000 --> 01:00:40,700
Oh, so it's at a temperamental.

1310
01:00:40,700 --> 01:00:43,600
Bot the bot on it seem to be working for me, work twice in a row.

1311
01:00:43,600 --> 01:00:47,000
I feel like I did it yesterday to maybe, Anna can't quite remember.

1312
01:00:51,900 --> 01:00:54,300
Do is pee For the Love of Pete.

1313
01:00:54,500 --> 01:00:54,900
Are you sure?

1314
01:00:54,900 --> 01:00:55,500
It's me though?

1315
01:00:55,500 --> 01:00:59,400
A lot of times it's not me but I don't know, like a lot of time.

1316
01:00:59,400 --> 01:01:05,900
So for example groups we don't, I don't want that a lot of times, my

1317
01:01:05,900 --> 01:01:06,800
internet's just fine.

1318
01:01:06,800 --> 01:01:09,500
Like if I go like I actually have full bandwidth.

1319
01:01:09,500 --> 01:01:12,900
It's just I can't get to Twitch, you know?

1320
01:01:14,000 --> 01:01:17,900
So I don't actually know that it's ever that that it's actually the

1321
01:01:17,900 --> 01:01:18,700
ISP.

1322
01:01:22,100 --> 01:01:25,000
I don't actually know how to let me put it this way if anyone knows

1323
01:01:25,000 --> 01:01:26,500
how to even determine.

1324
01:01:26,800 --> 01:01:31,200
If it's my ISP, that would be a very handy thing to know.

1325
01:01:31,300 --> 01:01:34,500
Because I don't know how to figure that out because like I don't seem

1326
01:01:34,500 --> 01:01:38,200
to be having trouble communicating with other sites and when I go to

1327
01:01:38,200 --> 01:01:39,900
try and test it, right?

1328
01:01:41,100 --> 01:01:42,200
I don't find that.

1329
01:01:42,200 --> 01:01:47,200
I'm getting a lot of indication that it's my ISP like, my ISP seems to

1330
01:01:47,200 --> 01:01:51,700
get out just fine and relay traffic just fine from simple.

1331
01:01:51,900 --> 01:01:52,200
Thing.

1332
01:01:52,900 --> 01:01:56,200
So I feel like a lot of this is just twitch and there's not a lot I

1333
01:01:56,200 --> 01:01:57,500
can do about it, but I don't know.

1334
01:01:57,900 --> 01:02:00,700
So if somebody knows how to determine that definitively I'd love.

1335
01:02:02,000 --> 01:02:03,900
I'd love some.

1336
01:02:05,000 --> 01:02:06,600
Some help with that because I don't know.

1337
01:02:06,600 --> 01:02:07,800
I don't know how to figure that out.

1338
01:02:12,200 --> 01:02:13,800
When are you planning to add depth sorting?

1339
01:02:14,300 --> 01:02:15,100
I don't know.

1340
01:02:15,100 --> 01:02:17,800
I I've been feeling kind of like we might want to start the renderer

1341
01:02:17,800 --> 01:02:21,000
sometime relatively soon, but I think we might do animation first.

1342
01:02:21,400 --> 01:02:27,500
So probably will do animation, and then we'll start the renderer and

1343
01:02:27,500 --> 01:02:29,300
just do the depth sorting when we do the renderer

1344
01:02:34,400 --> 01:02:35,100
Will there be enough?

1345
01:02:35,100 --> 01:02:37,200
Entities that some optimization will have to happen?

1346
01:02:37,200 --> 01:02:39,000
How many do you expect to have on a screen?

1347
01:02:39,000 --> 01:02:46,000
Hundreds, I don't know if they'll be hundreds only because screams

1348
01:02:46,000 --> 01:02:47,200
just ain't that big.

1349
01:02:50,200 --> 01:02:53,800
You know, looking at it, our hero is a little too big right now, so

1350
01:02:53,800 --> 01:02:57,200
he'll be scaled down but the trees you know, the trees would be

1351
01:02:57,200 --> 01:02:58,500
roughly that size.

1352
01:02:58,500 --> 01:02:59,800
I don't know how many

1353
01:03:00,000 --> 01:03:06,000
You know 100 entities would probably be typical but hundreds of

1354
01:03:06,000 --> 01:03:09,300
entities maybe not now our Sim region will have hundreds because

1355
01:03:09,300 --> 01:03:12,700
there's 100 on a screen and we're like doing nine screens or so then

1356
01:03:12,700 --> 01:03:17,100
there'd be nine hundred enemies or something like that so they'll be a

1357
01:03:17,100 --> 01:03:20,100
lot but whether we'll have to optimize very aggressively.

1358
01:03:20,100 --> 01:03:20,900
I don't know.

1359
01:03:21,500 --> 01:03:23,500
You have to remember a lot of the entities are things like trees that

1360
01:03:23,500 --> 01:03:24,700
are just sitting there most of the time.

1361
01:03:24,700 --> 01:03:27,900
And so if they're not actually being actively used for something or on

1362
01:03:27,900 --> 01:03:29,700
fire, or who knows what will allow to

1363
01:03:30,000 --> 01:03:34,100
Have happen to trees but you know, it's they don't cost very much to

1364
01:03:34,100 --> 01:03:35,800
simulate if they're just sitting there.

1365
01:03:37,900 --> 01:03:43,200
So I don't know how much optimization will have to do it.

1366
01:03:43,200 --> 01:03:46,900
Really depends on what we see at the time, after we've actually got

1367
01:03:46,900 --> 01:03:49,600
real things in there and the gameplay is roughly what we want and

1368
01:03:49,600 --> 01:03:51,700
we're like yes, this is good.

1369
01:03:53,100 --> 01:03:53,800
What's our performance?

1370
01:03:53,800 --> 01:03:55,000
Like who knows?

1371
01:03:55,000 --> 01:03:57,400
And it might just be fine, it might be bad, I don't know.

1372
01:03:58,900 --> 01:04:03,900
Obviously, we will want to optimize to run large worlds, because

1373
01:04:03,900 --> 01:04:06,000
that's something that we did a lot of time up front, to make sure

1374
01:04:06,000 --> 01:04:08,000
we'll be good to go on.

1375
01:04:08,200 --> 01:04:11,200
So, I suspect maybe that is where the opposition will actually come in

1376
01:04:11,200 --> 01:04:14,200
is when we want to start scaling up to like super huge worlds.

1377
01:04:14,200 --> 01:04:14,900
Just for fun.

1378
01:04:15,600 --> 01:04:18,000
That might be more of the place for that.

1379
01:04:30,000 --> 01:04:33,100
I'm not sure I quite follow your argument for double dispatch table

1380
01:04:33,100 --> 01:04:34,600
versus fundamental qualities.

1381
01:04:34,800 --> 01:04:37,100
Seems to me like you still need to figure out what to do for each

1382
01:04:37,100 --> 01:04:37,800
quality.

1383
01:04:38,000 --> 01:04:39,800
What to do in the presence of others, still leads to a quadratic

1384
01:04:39,800 --> 01:04:40,200
growth.

1385
01:04:40,200 --> 01:04:41,200
I must have missed something.

1386
01:04:41,600 --> 01:04:44,000
No, so that is correct, right?

1387
01:04:44,000 --> 01:04:50,000
The idea is that you can't avoid quadratic growth if you want to have

1388
01:04:50,000 --> 01:04:51,000
Rich interactions.

1389
01:04:51,500 --> 01:04:56,600
So the question is, what is a type

1390
01:04:58,100 --> 01:04:59,100
To the player.

1391
01:05:01,300 --> 01:05:02,000
Right.

1392
01:05:02,100 --> 01:05:08,800
So, what does the player think of as a type if our type in the code,

1393
01:05:08,900 --> 01:05:09,500
right?

1394
01:05:09,600 --> 01:05:12,400
Equals the players type in their brain.

1395
01:05:13,500 --> 01:05:16,000
That is where we have an unknown.

1396
01:05:16,600 --> 01:05:21,300
Sort of what I would consider, an intractable dispatch problem and

1397
01:05:21,300 --> 01:05:21,900
attacked.

1398
01:05:22,800 --> 01:05:26,900
In fact about this batch, because if we want the player to think that

1399
01:05:26,900 --> 01:05:32,700
there are a hundred different monster types then and, and 50 different

1400
01:05:33,200 --> 01:05:34,100
swords, right?

1401
01:05:34,100 --> 01:05:37,200
50 swords and 100 monsters, right?

1402
01:05:37,300 --> 01:05:41,000
Then now we have five thousand different ways that swords can hit

1403
01:05:41,000 --> 01:05:43,000
monsters, and we're in bad shape, right?

1404
01:05:43,200 --> 01:05:44,200
That is no good.

1405
01:05:45,200 --> 01:05:48,300
So, what we want to do, and what games, I think that do these sorts of

1406
01:05:48,300 --> 01:05:51,700
things effectively do is they think of things in terms of their

1407
01:05:51,700 --> 01:05:55,300
properties, rather than by what they actually work, right?

1408
01:05:55,600 --> 01:05:59,400
So, instead of thinking of things as this is, a particular type in the

1409
01:05:59,400 --> 01:05:59,800
system

1410
01:06:00,000 --> 01:06:02,100
You want to think of it as, okay?

1411
01:06:02,100 --> 01:06:06,200
It's actually a composite of several different types of pieces of

1412
01:06:06,200 --> 01:06:10,600
information, such as the fact that it does damage physical damage,

1413
01:06:10,600 --> 01:06:14,000
magic damage, you'll think Dungeons & Dragons, right?

1414
01:06:14,100 --> 01:06:17,200
You've got properties, like, fundamental properties that you broken

1415
01:06:17,200 --> 01:06:17,600
down.

1416
01:06:17,600 --> 01:06:21,900
And yes, you have to do a dispatch problem, but it's on like ten

1417
01:06:21,900 --> 01:06:22,600
stats.

1418
01:06:22,800 --> 01:06:27,300
So you have a hundred things you have to write rather than it's on the

1419
01:06:27,300 --> 01:06:29,700
individual types of that are there, right?

1420
01:06:30,100 --> 01:06:34,200
And so, that's what I'm basically saying is you want to make sure that

1421
01:06:34,200 --> 01:06:35,300
this is not true.

1422
01:06:35,500 --> 01:06:39,000
You don't want your system types to equal your, your player facing

1423
01:06:39,000 --> 01:06:39,500
types.

1424
01:06:40,500 --> 01:06:43,800
And so, it's a very simple concept, it's not new.

1425
01:06:43,800 --> 01:06:47,000
It's like I said, games do this all the time but we've never talked

1426
01:06:47,000 --> 01:06:47,300
about it.

1427
01:06:47,300 --> 01:06:52,300
So, so this is the tact that I will be taking is where our types are.

1428
01:06:52,300 --> 01:06:55,300
Fundamental things that maybe aren't even necessarily exposed to the

1429
01:06:55,300 --> 01:06:55,800
player.

1430
01:06:56,000 --> 01:06:59,000
They're our internal model of how things interact.

1431
01:06:59,000 --> 01:06:59,500
And then with a

1432
01:06:59,900 --> 01:07:04,600
Cease is sort of player facing types which are more fictional and more

1433
01:07:04,600 --> 01:07:07,800
meaningful to them, but that are actually not about the simulation

1434
01:07:07,800 --> 01:07:08,400
directly.

1435
01:07:08,500 --> 01:07:09,500
Write that makes sense.

1436
01:07:10,100 --> 01:07:14,600
And so that basically allows you to have a lower number because you

1437
01:07:14,600 --> 01:07:20,100
get, if you're your types, composed to build the player types, right?

1438
01:07:21,600 --> 01:07:24,700
Then you can have, you know, 100,000 player types.

1439
01:07:25,000 --> 01:07:26,000
How would we do that?

1440
01:07:26,000 --> 01:07:29,700
You'd be like, well, I just have to have enough of my types.

1441
01:07:29,900 --> 01:07:33,400
So that we could build that many player types by composing them and so

1442
01:07:33,400 --> 01:07:33,900
eight.

1443
01:07:33,900 --> 01:07:35,300
Like I said, I picked that number.

1444
01:07:35,300 --> 01:07:38,600
Like, let's say we have eight of our types of things in the system

1445
01:07:38,600 --> 01:07:39,600
that can compose new players.

1446
01:07:40,000 --> 01:07:43,900
Well, if I wanted to build a player type out of this, you know,

1447
01:07:43,900 --> 01:07:45,400
something the player sees.

1448
01:07:45,700 --> 01:07:50,100
Well, if I have eight of things to choose from and I want to compose

1449
01:07:50,100 --> 01:07:53,400
one, let's say I pick from the eight for the first property to sing

1450
01:07:53,400 --> 01:07:53,800
has.

1451
01:07:53,800 --> 01:07:55,900
And then I, you know, I set it to have some value.

1452
01:07:56,100 --> 01:07:58,100
I got times 7 times 6 times 5.

1453
01:07:58,100 --> 01:07:59,700
Let's say so we've got four properties there.

1454
01:07:59,800 --> 01:08:04,700
That alone without even considering what the values of those things

1455
01:08:04,700 --> 01:08:04,900
are.

1456
01:08:04,900 --> 01:08:10,500
Just the fact of which ones I picked right, which in and in which

1457
01:08:10,500 --> 01:08:15,700
order I picked those gives me some pretty powerful numbers to sort of,

1458
01:08:15,700 --> 01:08:17,700
to chew on but it's kind of a weird way.

1459
01:08:17,700 --> 01:08:19,100
It's not really directly that way.

1460
01:08:19,100 --> 01:08:19,700
That's not the way.

1461
01:08:19,700 --> 01:08:22,000
The commentary is actually work out because it's really the fact that

1462
01:08:22,000 --> 01:08:24,800
you can set these things, different values that also makes it

1463
01:08:24,800 --> 01:08:27,500
important because you might not care what order things go in.

1464
01:08:27,500 --> 01:08:27,800
Right?

1465
01:08:27,800 --> 01:08:29,800
The order you, these might not

1466
01:08:29,800 --> 01:08:31,800
Not be order dependent when you build things up.

1467
01:08:33,300 --> 01:08:35,500
So that may not be entirely true.

1468
01:08:35,500 --> 01:08:38,500
But the point is, if these things have different values that actually

1469
01:08:38,500 --> 01:08:42,200
mean stuff, then, as we compose them together setting, the different

1470
01:08:42,200 --> 01:08:46,000
values to different things is what will determine how these monsters

1471
01:08:46,000 --> 01:08:46,899
behave, right?

1472
01:08:47,100 --> 01:08:51,700
And so, the example, there is like, let's say we've got, you know, in

1473
01:08:51,700 --> 01:08:55,500
the case of let's just take just straight movement, so we've got how

1474
01:08:55,500 --> 01:08:57,100
something moves, right?

1475
01:08:57,600 --> 01:08:59,700
We've got a speed property let's say.

1476
01:08:59,899 --> 01:08:59,899
Hey.

1477
01:09:00,500 --> 01:09:05,399
We've got like a, you know, sort of a flying kind of concept may be,

1478
01:09:05,600 --> 01:09:06,300
right?

1479
01:09:06,800 --> 01:09:11,300
We've got like what they can walk on.

1480
01:09:11,300 --> 01:09:16,600
So you know, do they have, you know, can they walk on water?

1481
01:09:16,600 --> 01:09:18,700
Like so we got restrictions right?

1482
01:09:18,800 --> 01:09:21,200
So like, can they walk on water or fire?

1483
01:09:21,200 --> 01:09:22,100
That sort of stuff.

1484
01:09:23,100 --> 01:09:26,200
When you take these things together you can start to produce a lot of

1485
01:09:26,200 --> 01:09:29,700
classes of things that can move because you've got how fast it moves.

1486
01:09:30,000 --> 01:09:31,500
So that gives us a whole range of things.

1487
01:09:31,500 --> 01:09:34,100
Right there might be like four or five or six different classes of

1488
01:09:34,100 --> 01:09:35,399
speed, right?

1489
01:09:35,399 --> 01:09:37,600
So you've got, you know, five things there, you could set, you've got

1490
01:09:37,600 --> 01:09:40,100
flying or not, that's a Boolean and maybe there's Heights of flying.

1491
01:09:40,100 --> 01:09:42,700
There's like low, flying things, and high-flying things, and non

1492
01:09:42,700 --> 01:09:43,399
flying things.

1493
01:09:43,500 --> 01:09:45,200
So that's three different settings there.

1494
01:09:45,300 --> 01:09:47,600
Right, they got restrictions, can it walk on water?

1495
01:09:47,600 --> 01:09:48,500
Can it walk on ice?

1496
01:09:48,500 --> 01:09:49,399
Can it walk on this?

1497
01:09:49,399 --> 01:09:50,700
Can walk on that, right?

1498
01:09:50,899 --> 01:09:53,700
So there's probably, you know, maybe another four different properties

1499
01:09:53,700 --> 01:09:54,300
get out of there.

1500
01:09:54,400 --> 01:09:56,900
So just for the movement of something, if we're thinking of it in

1501
01:09:56,900 --> 01:09:59,900
these terms, we now get five different types of things.

1502
01:10:00,000 --> 01:10:02,400
Times three different types of things times for different types of

1503
01:10:02,400 --> 01:10:04,600
things, and that right there, right?

1504
01:10:04,600 --> 01:10:08,500
Is going to lead us to 60 different types of monster movement,

1505
01:10:09,500 --> 01:10:12,500
And so I feel like that's always the way you want to think of it.

1506
01:10:12,500 --> 01:10:16,700
If you're trying to write a rich, a game that has lots of different

1507
01:10:16,700 --> 01:10:19,700
things, and lots of interactions between those three things, you want

1508
01:10:19,700 --> 01:10:23,300
to always decompose it like that and do your dispatching on the

1509
01:10:23,300 --> 01:10:28,300
decomposed things because that's a lot more manageable and allows you

1510
01:10:28,300 --> 01:10:32,600
to leverage the multiplication to get you up to higher numbers of

1511
01:10:32,600 --> 01:10:33,500
player facing types.

1512
01:10:33,500 --> 01:10:37,100
Whereas, if you accept to implement each player facing type, you don't

1513
01:10:37,100 --> 01:10:38,100
get multiplication.

1514
01:10:38,100 --> 01:10:39,300
You don't get that power of

1515
01:10:39,500 --> 01:10:40,000
Location.

1516
01:10:40,100 --> 01:10:46,000
So you're fighting this problem without the aid of the same kind of

1517
01:10:46,000 --> 01:10:47,300
multiplication on your side.

1518
01:10:47,300 --> 01:10:49,500
That's the only real thing that I was trying to say

1519
01:10:55,100 --> 01:10:57,200
Yesterday you were talking about using callbacks to The Climate

1520
01:10:57,200 --> 01:10:59,300
system, will this new system replace the need for them?

1521
01:10:59,600 --> 01:11:01,600
I thought, where I landed on that when I was, I thought I was just

1522
01:11:01,600 --> 01:11:04,400
saying, callbacks are an example of how you would do that in there.

1523
01:11:04,600 --> 01:11:07,500
And I thought, what I was saying is we don't need to do that because

1524
01:11:07,500 --> 01:11:11,300
we'll just handle them inside this routine as a symmetric, sort of way

1525
01:11:11,300 --> 01:11:12,000
that things are handled.

1526
01:11:12,000 --> 01:11:13,500
I thought that's actually what we said.

1527
01:11:15,500 --> 01:11:17,900
I'm talking about, if not, then that was my bad.

1528
01:11:17,900 --> 01:11:19,400
I didn't mean to imply that we do use.

1529
01:11:19,400 --> 01:11:21,800
Callbacks I thought I was just saying, call back to saying that people

1530
01:11:21,800 --> 01:11:24,700
often do use in this situation, but I don't want to because they have

1531
01:11:24,700 --> 01:11:26,000
flow control problems, right?

1532
01:11:31,700 --> 01:11:34,300
Casey, I asked a question in the Twitch app crashed on.

1533
01:11:34,300 --> 01:11:37,200
IPad, any chance you saw my questions before it did.

1534
01:11:38,500 --> 01:11:43,000
I don't think so because I don't see any of them on here so you may

1535
01:11:43,000 --> 01:11:43,800
have asked them before.

1536
01:11:43,800 --> 01:11:44,900
I started the Q&A

1537
01:11:49,500 --> 01:11:50,800
Traceroute to Twitch.

1538
01:11:55,100 --> 01:11:55,700
Twitch.

1539
01:11:59,000 --> 01:11:59,500
Windows.

1540
01:12:02,800 --> 01:12:05,900
You can see my router will see, will see what this goes to only answer

1541
01:12:05,900 --> 01:12:07,100
questions while it's doing it.

1542
01:12:21,700 --> 01:12:22,400
This is e.e.

1543
01:12:22,400 --> 01:12:23,300
twitches.

1544
01:12:24,300 --> 01:12:27,300
Question, Casey has a casual Observer and occasional troll.

1545
01:12:27,500 --> 01:12:28,300
Where's the game?

1546
01:12:28,300 --> 01:12:29,900
Now, seriously haven't watched for a while.

1547
01:12:29,900 --> 01:12:32,400
And how do you find the energy to do this week nights?

1548
01:12:33,300 --> 01:12:33,700
I don't know.

1549
01:12:33,700 --> 01:12:36,200
It's not that hard to program for an hour on a weeknight, you know?

1550
01:12:36,200 --> 01:12:39,300
I mean, I like programming and I would just be doing something on my

1551
01:12:39,300 --> 01:12:40,000
computer anyway.

1552
01:12:40,000 --> 01:12:45,900
So I feel like that's usually, you know, that's usually how it goes in

1553
01:12:45,900 --> 01:12:46,900
terms of where the game is.

1554
01:12:46,900 --> 01:12:51,900
Now like I said we're on our 68 hour of programming, I think it's

1555
01:12:51,900 --> 01:12:54,000
really more like our 70th, our because we had a couple

1556
01:12:54,600 --> 01:12:58,500
One or two streams where I went and extra hour, just like ones that

1557
01:12:58,500 --> 01:12:59,200
were on Fridays.

1558
01:12:59,200 --> 01:13:01,000
I did a little extra extended session ones.

1559
01:13:01,300 --> 01:13:08,600
So, we've programmed for 70 hours, so we're in another 10 days on day.

1560
01:13:08,600 --> 01:13:12,900
78 will have completed to work weeks worth of code.

1561
01:13:13,600 --> 01:13:17,300
So if you sat down on a Monday, you would have program for a week and

1562
01:13:17,300 --> 01:13:19,800
now we're on our second week and we're not quite there yet.

1563
01:13:19,800 --> 01:13:23,600
In another 10 days will be at the end of that second week in in those

1564
01:13:23,600 --> 01:13:23,900
two weeks.

1565
01:13:24,100 --> 01:13:27,900
Time, I think we've actually, I'm pretty darn happy with where we've

1566
01:13:27,900 --> 01:13:28,400
come.

1567
01:13:29,500 --> 01:13:33,100
We wrote Our Own win32 code startup code and all that stuff.

1568
01:13:33,100 --> 01:13:37,000
We wrote Our Own automatic dll, loading Loop, live coding, all that

1569
01:13:37,000 --> 01:13:37,200
stuff.

1570
01:13:37,200 --> 01:13:38,300
We wrote was good.

1571
01:13:39,100 --> 01:13:41,900
We've got our, you know, sort of primitive sound and video output

1572
01:13:41,900 --> 01:13:43,300
which we needed to get started.

1573
01:13:43,600 --> 01:13:46,500
We wrote Our bitmap learning code, a bitmap building code.

1574
01:13:46,900 --> 01:13:50,300
We've now written a system to handle giant world's so we can have

1575
01:13:50,300 --> 01:13:51,300
absolutely huge rolls.

1576
01:13:51,300 --> 01:13:53,700
Now, if we want to add that we can walk around on.

1577
01:13:53,700 --> 01:13:54,000
We can

1578
01:13:54,200 --> 01:13:57,800
The scroll, or do room based growing because we sort of decided we'll

1579
01:13:57,800 --> 01:13:58,600
do both of those.

1580
01:13:59,900 --> 01:14:03,200
We've got a simulation region thing now this design so that we can

1581
01:14:03,200 --> 01:14:06,800
handle sort of whole world, sort of stuff happening at once.

1582
01:14:06,800 --> 01:14:09,900
So other entities can be doing stuff in the world other than where you

1583
01:14:09,900 --> 01:14:11,800
are and we kind of set things up to try and handle that.

1584
01:14:13,600 --> 01:14:16,900
And we're right now sort of doing our sort of collision detection,

1585
01:14:16,900 --> 01:14:20,200
entity property stuff just a little bit of that before we go into

1586
01:14:20,200 --> 01:14:21,000
animation.

1587
01:14:21,600 --> 01:14:23,600
So I would say we're

1588
01:14:24,100 --> 01:14:26,900
we're probably going to close in at the end of that.

1589
01:14:26,900 --> 01:14:31,000
10 days I would say, at the end of to work weeks, I would say we're

1590
01:14:31,000 --> 01:14:33,000
almost done with engine architecture as well.

1591
01:14:33,100 --> 01:14:35,100
We've got a little bit, I think animation going to take us a little

1592
01:14:35,100 --> 01:14:37,900
while but once animations done.

1593
01:14:38,800 --> 01:14:42,900
So I would say probably somewhere around day.

1594
01:14:42,900 --> 01:14:49,200
Let's say 90 90 to 100, which is not even three full weeks of

1595
01:14:49,200 --> 01:14:49,900
programming.

1596
01:14:51,900 --> 01:14:54,200
So, hardly any time at all programming wise, right?

1597
01:14:55,500 --> 01:14:59,000
We will be at the point where we're totally ready to do the game.

1598
01:14:59,000 --> 01:14:59,600
Proper

1599
01:15:00,000 --> 01:15:03,200
Have a complete like, sort of game framework running with all of the

1600
01:15:03,200 --> 01:15:06,600
pieces in place and we'll just have to go through and then start doing

1601
01:15:06,600 --> 01:15:08,800
some of the heavy lifting will have to write the renderer for real.

1602
01:15:08,800 --> 01:15:14,900
It's gonna take a while, then we'll have to write sort of the some

1603
01:15:14,900 --> 01:15:16,600
sound stuff, which probably won't be too bad.

1604
01:15:16,600 --> 01:15:19,900
Sounds a little easier and then we'll have to write and those will

1605
01:15:19,900 --> 01:15:22,100
leave like the shipping versions of those things shipping, render

1606
01:15:22,100 --> 01:15:23,100
shipping sound code.

1607
01:15:23,800 --> 01:15:25,400
And we'll do after that.

1608
01:15:25,400 --> 01:15:27,700
Then we'll do start on the shipping.

1609
01:15:27,900 --> 01:15:29,300
You know, game basically.

1610
01:15:31,000 --> 01:15:33,300
And honestly, yeah, I couldn't be happier with how it goes.

1611
01:15:33,300 --> 01:15:34,500
I'm nervous about the renderer.

1612
01:15:34,500 --> 01:15:35,200
I know rendering.

1613
01:15:35,200 --> 01:15:39,300
It's kind of a big topic and so I'm a little nervous about that.

1614
01:15:39,300 --> 01:15:40,400
I don't know how long that's going to take.

1615
01:15:40,400 --> 01:15:42,200
That could be something that really derails us.

1616
01:15:44,900 --> 01:15:46,000
But you know what you going to do?

1617
01:15:47,600 --> 01:15:48,500
I don't really know.

1618
01:15:48,800 --> 01:15:52,200
Yeah, I don't really know what to do beyond that.

1619
01:15:54,700 --> 01:15:55,600
We've got a right.

1620
01:15:55,700 --> 01:15:58,100
So I would say I'm delighted with our progress so far.

1621
01:15:58,100 --> 01:16:00,400
I think if you actually map it back to how long it would be if we

1622
01:16:00,400 --> 01:16:06,100
actually sat down and code were in great shape and yeah and if we can

1623
01:16:06,100 --> 01:16:08,200
keep going at this rate, I think we will.

1624
01:16:08,200 --> 01:16:10,800
Actually it'll the project will go great.

1625
01:16:10,800 --> 01:16:14,800
But obviously there's plenty of opportunities for us to stumble and I

1626
01:16:14,800 --> 01:16:18,300
don't know how we'll do because, you know, programming is always

1627
01:16:18,300 --> 01:16:22,000
difficult and unusual and you know, there's only so much you can do

1628
01:16:22,000 --> 01:16:23,800
about that but that's

1629
01:16:24,000 --> 01:16:24,500
To where we're at.

1630
01:16:24,500 --> 01:16:27,300
And I'm I'm really happy with how it's been going.

1631
01:16:35,400 --> 01:16:39,800
I noticed, sometimes you try to determine regions for Collision boxes.

1632
01:16:39,800 --> 01:16:42,700
Why not Implement basic shapes and use those as debug helpers with

1633
01:16:42,700 --> 01:16:43,900
some Alpha percentage?

1634
01:16:44,300 --> 01:16:46,400
Just because I don't really care about that stuff right now.

1635
01:16:47,500 --> 01:16:49,500
By the way, this is kind of bizarre.

1636
01:16:49,500 --> 01:16:51,000
I'm assuming that this is worth.

1637
01:16:51,000 --> 01:16:52,800
People started stopped our traceroute.

1638
01:16:52,900 --> 01:16:54,800
So twitch is probably somewhere in here.

1639
01:16:56,300 --> 01:16:59,500
It looks like this changeover is pretty nasty.

1640
01:16:59,500 --> 01:17:04,200
We went from three millisecond pings to 60 millisecond things but I

1641
01:17:04,200 --> 01:17:04,600
don't know.

1642
01:17:05,300 --> 01:17:10,800
So somewhere, right about here, stuff gets bad, but even so I don't

1643
01:17:10,800 --> 01:17:13,300
know who's dropping packets if anyone is but people who want to see

1644
01:17:13,300 --> 01:17:14,300
the traceroute.

1645
01:17:14,300 --> 01:17:14,900
There it is.

1646
01:17:16,500 --> 01:17:17,300
That's what we got.

1647
01:17:17,900 --> 01:17:18,400
Anyway,

1648
01:17:22,000 --> 01:17:29,000
So, yeah, I would basically say that the Collision box stuff.

1649
01:17:29,300 --> 01:17:32,400
We don't really need debug horses because not really writing any code.

1650
01:17:32,400 --> 01:17:36,200
That's all that interesting in terms of like nailing bugs and that

1651
01:17:36,200 --> 01:17:38,200
sort of stuff, we just want our engine architecture set up.

1652
01:17:38,200 --> 01:17:42,200
So what we're going to do is when we go down to do the rendering side

1653
01:17:42,200 --> 01:17:45,600
of things which will happen in you know a little bit of a little bit

1654
01:17:45,700 --> 01:17:49,000
from now, we will be building out our debug services with the renderer

1655
01:17:49,000 --> 01:17:51,200
because the renderer will give us the first opportunity to start doing

1656
01:17:51,200 --> 01:17:51,700
a lot of debugging.

1657
01:17:51,800 --> 01:17:54,600
Drawing, like debug lines do, but that's our stuff and because we

1658
01:17:54,600 --> 01:17:56,800
haven't needed debug services for anything right now.

1659
01:17:58,000 --> 01:17:59,400
I don't think it's worth spending time.

1660
01:17:59,400 --> 01:17:59,800
Writing some

1661
01:18:00,000 --> 01:18:02,800
He bugs stuff of that, in advance of doing it.

1662
01:18:02,800 --> 01:18:04,600
Kind of all as one system, that's my opinion.

1663
01:18:17,500 --> 01:18:19,500
Do you test for Collision every update interval?

1664
01:18:19,500 --> 01:18:21,100
If your sword overlaps in the entity?

1665
01:18:21,100 --> 01:18:23,700
Could it happen that a moving entity gets missed because both entity

1666
01:18:23,700 --> 01:18:26,700
and Sword move in the same tick above and beyond each other.

1667
01:18:26,700 --> 01:18:30,300
Uh, so not right now because right now we actually don't do

1668
01:18:31,100 --> 01:18:32,400
simultaneous move.

1669
01:18:32,500 --> 01:18:35,300
What we do right now is is in order move, right?

1670
01:18:35,300 --> 01:18:38,100
So basically, if this is a frame right?

1671
01:18:40,500 --> 01:18:42,100
Well actually no that's not true.

1672
01:18:42,600 --> 01:18:45,100
So yeah, I guess what I would say is yes, what you're saying can

1673
01:18:45,100 --> 01:18:46,500
happen because right now, we do

1674
01:18:46,700 --> 01:18:48,000
Actually do, simultaneous move.

1675
01:18:48,000 --> 01:18:54,000
So let's say you have a situation like this, right, where the sword

1676
01:18:54,000 --> 01:18:56,500
was going this way and the plate and the thing that was going to hit

1677
01:18:56,500 --> 01:18:58,900
the story was going this way and it just so happened that there

1678
01:18:58,900 --> 01:19:02,300
velocity was such that they probably should have hit right here.

1679
01:19:03,500 --> 01:19:06,300
We would not detect that because first, it'll move this guy here and

1680
01:19:06,300 --> 01:19:07,300
see that there's nothing, that's way.

1681
01:19:07,300 --> 01:19:09,600
And then it'll move this guy here and see there's nothing in its way.

1682
01:19:10,000 --> 01:19:13,700
Now, in order for that to happen, though, the sizes of these guys

1683
01:19:13,700 --> 01:19:16,400
proportional to their movement, have to be very small.

1684
01:19:16,600 --> 01:19:17,500
Which currently we don't have.

1685
01:19:17,500 --> 01:19:21,100
So in practice I don't think you could ever actually construct this

1686
01:19:21,100 --> 01:19:21,500
case.

1687
01:19:21,500 --> 01:19:26,100
But in theory, if you cranked the size of entities down very, very

1688
01:19:26,100 --> 01:19:26,500
tiny.

1689
01:19:26,500 --> 01:19:30,200
So they were just like points on the screen or you crank the speed of

1690
01:19:30,200 --> 01:19:34,000
entities up very high so that they were moving very fast, then you

1691
01:19:34,000 --> 01:19:39,700
could get this situation and that situation is what would compel if

1692
01:19:39,700 --> 01:19:40,500
you care about this.

1693
01:19:40,500 --> 01:19:43,900
Which when we do our clothes ejector we might decide to care about

1694
01:19:43,900 --> 01:19:46,300
this specifically because it's interesting to think about how to

1695
01:19:46,300 --> 01:19:46,400
solve.

1696
01:19:46,700 --> 01:19:47,300
Right.

1697
01:19:47,400 --> 01:19:49,500
And at least, two more complicated thing to solve it.

1698
01:19:50,900 --> 01:19:54,300
You need to basically do stuff where you kind of consider the motion

1699
01:19:54,300 --> 01:19:59,900
of entities together and say, would these guys have collided if they

1700
01:19:59,900 --> 01:20:01,700
move continuously, right?

1701
01:20:03,200 --> 01:20:03,600
So yeah.

1702
01:20:03,600 --> 01:20:05,500
So so, I guess that's what I would say about that.

1703
01:20:05,500 --> 01:20:09,300
I don't, I don't think can actually happen right now because of the

1704
01:20:09,300 --> 01:20:13,000
size of the entities, but the algorithm doesn't actually handle it.

1705
01:20:13,600 --> 01:20:16,300
And so, technically, you would be able to create things that could do

1706
01:20:16,300 --> 01:20:16,500
it.

1707
01:20:16,500 --> 01:20:19,200
And so, it might be interesting when we do the full question doctor to

1708
01:20:19,800 --> 01:20:20,100
actually,

1709
01:20:20,300 --> 01:20:22,300
For that just to show how to do it.

1710
01:20:28,700 --> 01:20:31,000
To me, it seems as a sort of solution should be influenced by the

1711
01:20:31,000 --> 01:20:32,500
speed of a player movement at the time.

1712
01:20:32,500 --> 01:20:33,900
It was despatched, am I, right?

1713
01:20:34,400 --> 01:20:34,700
Yeah.

1714
01:20:34,700 --> 01:20:37,700
So if you know, we're not actually at the point where we're doing that

1715
01:20:37,700 --> 01:20:42,300
kind of code but when things velocity is always relative, so if I

1716
01:20:42,300 --> 01:20:45,500
throw something and I am running then when I throw it it should have

1717
01:20:45,500 --> 01:20:47,400
my velocity plus however much of velocity.

1718
01:20:47,400 --> 01:20:48,900
I pointed to the throw right?

1719
01:20:49,300 --> 01:20:52,200
That's just kind of you know, basic physics, physical kind of stuff.

1720
01:20:52,900 --> 01:20:55,700
And so if you want to do that, what you do is when you set the sword

1721
01:20:55,700 --> 01:20:56,400
velocity,

1722
01:20:57,700 --> 01:20:59,800
so like, you know,

1723
01:21:00,000 --> 01:21:05,200
Here, when we, when we sort of, when we launched that sword, right?

1724
01:21:05,300 --> 01:21:09,300
When we launched the sword forward, I believe what happens if I

1725
01:21:09,300 --> 01:21:10,200
remember correctly.

1726
01:21:12,800 --> 01:21:15,600
Is it just where does it actually?

1727
01:21:17,200 --> 01:21:17,600
Set it.

1728
01:21:17,600 --> 01:21:18,200
Here it is.

1729
01:21:18,600 --> 01:21:20,500
I'm like we we throw the sword here somewhere.

1730
01:21:21,000 --> 01:21:22,600
So when we actually throw the sword here,

1731
01:21:26,200 --> 01:21:27,000
that's not it at all.

1732
01:21:27,500 --> 01:21:28,700
Until I'm kind of out to lunch today.

1733
01:21:28,800 --> 01:21:31,500
This is where we actually show The Sword so when you actually throw

1734
01:21:31,500 --> 01:21:35,500
the sword when we set that velocity for the sword, right?

1735
01:21:35,600 --> 01:21:36,500
We set it right here.

1736
01:21:37,100 --> 01:21:37,600
What should we do?

1737
01:21:37,600 --> 01:21:40,900
Is you just add in however fast the hero was moving because whatever

1738
01:21:40,900 --> 01:21:43,200
that, but it's not the accelerate, the acceleration doesn't change,

1739
01:21:43,300 --> 01:21:44,900
acceleration is independent of that.

1740
01:21:45,800 --> 01:21:48,700
So what you actually doing is you take the amount of velocity, you

1741
01:21:48,700 --> 01:21:52,800
want the sword to have and you'd add however much velocity, the hero

1742
01:21:52,800 --> 01:21:54,300
had at that time, right?

1743
01:21:54,300 --> 01:21:55,800
So that's, that's this.

1744
01:21:56,800 --> 01:21:58,100
It's like that, right?

1745
01:21:58,700 --> 01:22:03,800
And so that way when you're running things now and of course, we still

1746
01:22:03,800 --> 01:22:06,900
have our problem with the with it colliding.

1747
01:22:06,900 --> 01:22:08,600
I could turn that off for a second so you can see.

1748
01:22:08,700 --> 01:22:11,000
Because we until we Implement that table, it's going to keep getting

1749
01:22:11,000 --> 01:22:12,300
stuck on the hero basic.

1750
01:22:12,300 --> 01:22:16,300
It's like, I can't get out of the hero is actually another way.

1751
01:22:16,300 --> 01:22:18,900
We could choose to handle that but I want to implement the table as

1752
01:22:18,900 --> 01:22:21,100
well, but we've got, we've got so many things we could be doing.

1753
01:22:22,000 --> 01:22:24,100
But anyway, so in the same region,

1754
01:22:25,500 --> 01:22:27,600
If I was to turn this off, right?

1755
01:22:28,000 --> 01:22:32,400
So if I was to say that that collides thing like we were doing before

1756
01:22:33,000 --> 01:22:37,000
where I basically say you know and it stops on collision like we were

1757
01:22:37,000 --> 01:22:37,700
doing before.

1758
01:22:39,200 --> 01:22:42,000
Now when I when I do those things right?

1759
01:22:42,700 --> 01:22:46,900
You can kind of see that if I'm going in this in this that's funny.

1760
01:22:47,100 --> 01:22:47,900
I'm going in this direction.

1761
01:22:47,900 --> 01:22:48,700
It gets a lot more.

1762
01:22:48,700 --> 01:22:51,700
If I fire it in the same direction I'm going it gets a lot more heat

1763
01:22:51,700 --> 01:22:52,600
on it, right?

1764
01:22:52,800 --> 01:22:54,800
But if I fire it in the opposite direction, I'm going.

1765
01:22:54,800 --> 01:22:55,000
So let's say,

1766
01:22:55,300 --> 01:22:57,600
Moving this direction and I fire it backwards.

1767
01:22:58,000 --> 01:23:00,100
It goes a lot slower, right?

1768
01:23:00,200 --> 01:23:02,200
And that's technically how that would work.

1769
01:23:02,400 --> 01:23:04,400
So if that's what you were concerned about, that's the way you would

1770
01:23:04,400 --> 01:23:05,600
want to do it, right?

1771
01:23:06,700 --> 01:23:07,100
So yeah.

1772
01:23:09,800 --> 01:23:11,800
But again we're not really at the point where we're thinking about

1773
01:23:11,800 --> 01:23:14,500
code that's like when we start to do the animation stuff will start

1774
01:23:14,500 --> 01:23:17,500
talking more about like that kind of tuning stuff and those sort of

1775
01:23:17,500 --> 01:23:17,800
things.

1776
01:23:24,900 --> 01:23:28,600
I missed the part on how many entities you are simulating at once and

1777
01:23:28,600 --> 01:23:31,000
where you store them, but won't the dispatch table approach be

1778
01:23:31,000 --> 01:23:32,400
negative for cash performance.

1779
01:23:32,400 --> 01:23:34,400
Could it simulation be deferred?

1780
01:23:34,400 --> 01:23:41,000
So yeah, you know, like it's a little premature to think about stuff

1781
01:23:41,000 --> 01:23:43,900
like that because we first have to see whether that's actually a big

1782
01:23:43,900 --> 01:23:48,100
deal because what you have to remember is that dispatching, only

1783
01:23:48,100 --> 01:23:52,100
happens when two things hit each other, which actually doesn't happen

1784
01:23:52,100 --> 01:23:53,400
that often, right?

1785
01:23:53,400 --> 01:23:54,900
You're only talking about a few of those.

1786
01:23:54,900 --> 01:23:57,300
Those per frame at most probably, right?

1787
01:23:58,600 --> 01:23:59,800
So chances are

1788
01:24:00,200 --> 01:24:02,900
That dispatch is not going to dominate the run time of the Collision

1789
01:24:02,900 --> 01:24:06,800
routines figuring out, who collided with, who is probably going to be

1790
01:24:06,800 --> 01:24:09,800
the cost and the dispatch to handle it is probably not going to be

1791
01:24:09,800 --> 01:24:10,400
that big a deal.

1792
01:24:11,000 --> 01:24:14,200
But that said, I don't know that depending on how we actually want

1793
01:24:14,200 --> 01:24:15,700
thinks, it could be the other way around.

1794
01:24:15,800 --> 01:24:18,600
So it's a little bit too early to think about that because we really

1795
01:24:18,600 --> 01:24:21,600
just don't know and we'll have a better idea later on as we go, what

1796
01:24:21,600 --> 01:24:23,200
needs to be optimized and what doesn't.

1797
01:24:23,200 --> 01:24:26,600
But, at this point, it's definitely not worth worrying about because

1798
01:24:26,600 --> 01:24:29,500
we don't even really know what kind of load is going to be placed on

1799
01:24:29,500 --> 01:24:29,800
that disk.

1800
01:24:30,000 --> 01:24:35,000
Patch in the first place, you know, and whether we even have to

1801
01:24:35,000 --> 01:24:35,800
optimize it at all.

1802
01:24:44,100 --> 01:24:47,700
Don't do traceroute again because everyone got to see you freeze.

1803
01:24:48,600 --> 01:24:50,100
Okay, I don't know what that means.

1804
01:24:51,300 --> 01:24:51,900
But okay.

1805
01:24:58,900 --> 01:25:01,800
It seems logical to make infinity, the default maximum distance on

1806
01:25:01,800 --> 01:25:04,000
entity and they can travel, but that could have performance

1807
01:25:04,000 --> 01:25:04,600
applications.

1808
01:25:04,800 --> 01:25:06,400
Can you say something about that?

1809
01:25:07,400 --> 01:25:11,500
Well, so the reason that I didn't set it to some random floating-point

1810
01:25:11,500 --> 01:25:17,500
number, like infinity or like float, Max was just because you can get

1811
01:25:17,500 --> 01:25:19,300
into troubled situations.

1812
01:25:20,200 --> 01:25:24,700
We're like, if I go in here and I was going to end up doing something

1813
01:25:24,700 --> 01:25:27,500
with the distance remaining, I don't want something that's going to

1814
01:25:27,500 --> 01:25:31,700
create, any sort of exceptional floating-point situation, because

1815
01:25:31,700 --> 01:25:35,200
since the floating Point units, handle things, special numbers like

1816
01:25:35,200 --> 01:25:39,800
infinity or stuff like that or overflowing afloat since they handle

1817
01:25:39,800 --> 01:25:40,500
those things specially.

1818
01:25:40,500 --> 01:25:42,500
I don't want to put it in a situation that would make it

1819
01:25:42,500 --> 01:25:42,700
uncomfortable.

1820
01:25:42,700 --> 01:25:46,500
So I just need a number that's large enough that I know that I'm never

1821
01:25:46,500 --> 01:25:46,900
going to hit it.

1822
01:25:46,900 --> 01:25:49,700
So it's practically infinity and so I find that it's usually better to

1823
01:25:49,700 --> 01:25:50,200
do that than to

1824
01:25:50,300 --> 01:25:53,500
Actually use Infinity because you don't know on what platforms you're

1825
01:25:53,500 --> 01:25:53,800
on.

1826
01:25:53,800 --> 01:25:54,800
What's going to happen.

1827
01:25:54,800 --> 01:25:57,700
If you actually try to do an operation with infinity and I just I

1828
01:25:57,700 --> 01:26:00,800
don't want to bring in that because I never remember all those things

1829
01:26:00,900 --> 01:26:03,200
and I don't want people to have to remember those things to write this

1830
01:26:03,200 --> 01:26:04,300
code because it's not necessary.

1831
01:26:04,900 --> 01:26:07,600
So that's why I just picked a high number instead of using an actual

1832
01:26:07,600 --> 01:26:09,500
floating Point infinity or something like that.

1833
01:26:13,500 --> 01:26:15,500
All right, last couple questions here.

1834
01:26:15,500 --> 01:26:17,100
Could you also do something like that for a I wear?

1835
01:26:17,100 --> 01:26:19,200
For instance you can impose simple behaviors on top of each other

1836
01:26:19,200 --> 01:26:22,100
randomly to make complex and very Behavior instead of doing the more

1837
01:26:22,100 --> 01:26:23,400
common Behavior tree approach.

1838
01:26:23,600 --> 01:26:26,000
Yes, that's actually what I was planning on doing.

1839
01:26:26,600 --> 01:26:27,500
So, we'll see how that goes.

1840
01:26:27,500 --> 01:26:28,300
When I go to do it.

1841
01:26:33,400 --> 01:26:37,400
If you do the triple anus way, can you come back to it later and edit

1842
01:26:37,400 --> 01:26:41,200
or add more details to it like from six to eight etcetera or will that

1843
01:26:41,200 --> 01:26:42,200
cause problems?

1844
01:26:44,500 --> 01:26:45,000
So I'm not sure.

1845
01:26:45,000 --> 01:26:45,900
I understand the question.

1846
01:26:45,900 --> 01:26:46,500
Exactly.

1847
01:26:49,800 --> 01:26:50,900
Alright, I think that's it.

1848
01:26:52,200 --> 01:26:52,800
All right.

1849
01:26:53,800 --> 01:26:55,900
Okay, thank that went relatively.

1850
01:26:55,900 --> 01:26:58,900
Well, except for the problems with me.

1851
01:26:58,900 --> 01:26:59,800
Sending packets to Twitch.

1852
01:27:00,300 --> 01:27:04,300
Unfortunately, which seems to not go as well as I guess I would like

1853
01:27:04,300 --> 01:27:04,700
it to.

1854
01:27:07,500 --> 01:27:08,000
Okay.

1855
01:27:08,600 --> 01:27:10,000
So let's take a look here.

1856
01:27:12,100 --> 01:27:12,700
Go back in.

1857
01:27:12,700 --> 01:27:14,600
I want to see how badly we ended up doing.

1858
01:27:15,400 --> 01:27:17,100
Yeah, we just have we had a horrible.

1859
01:27:17,100 --> 01:27:20,200
This was absolutely horrible tonight and I again I have no idea.

1860
01:27:20,200 --> 01:27:20,700
Why.

1861
01:27:22,200 --> 01:27:24,700
I don't really have any way of figuring out what that actually is.

1862
01:27:24,700 --> 01:27:28,300
If anyone has any ideas, if I could figure out if it's an ISP problem,

1863
01:27:28,300 --> 01:27:31,100
or if it's just twitch and there's nothing I can do, it would be

1864
01:27:31,100 --> 01:27:33,400
pretty great to know because I'd like to get it fixed.

1865
01:27:33,400 --> 01:27:36,800
It doesn't happen that often but every and nights, we get this problem

1866
01:27:36,800 --> 01:27:39,900
where we just can't seem to do anything, so be nice to get that

1867
01:27:39,900 --> 01:27:40,500
resolved.

1868
01:27:40,700 --> 01:27:43,700
Anyway, thank you everyone, for joining me, for another episode of

1869
01:27:43,700 --> 01:27:44,100
handmade here.

1870
01:27:44,100 --> 01:27:45,100
It's been a pleasure working with you.

1871
01:27:45,100 --> 01:27:49,200
As always, if you would like to follow along at home, you can always

1872
01:27:49,200 --> 01:27:51,100
pre-order the game on handmade hero dot org.

1873
01:27:52,000 --> 01:27:52,900
Comes with all the source code.

1874
01:27:52,900 --> 01:27:55,100
So you can follow along at home, you'll get a little Link in your

1875
01:27:55,100 --> 01:27:57,500
email that you can use to download the source code every night.

1876
01:27:58,100 --> 01:27:59,500
And I uploaded after we finish coding.

1877
01:27:59,500 --> 01:28:02,100
Every time, if you want support the video series, we also have a

1878
01:28:02,100 --> 01:28:02,400
patreon.

1879
01:28:02,400 --> 01:28:05,100
You can subscribe to its linked off of handmade hero dot-org.

1880
01:28:05,500 --> 01:28:07,400
We also have a tweetbot the tweets, the schedule.

1881
01:28:07,400 --> 01:28:11,000
So if you want to know when streams are you can always find it there.

1882
01:28:11,500 --> 01:28:13,700
And finally we also have a news in Forum site which I highly recommend

1883
01:28:13,700 --> 01:28:14,000
checking out.

1884
01:28:14,000 --> 01:28:15,100
It's got discussion boards on it.

1885
01:28:15,100 --> 01:28:18,300
You can go to, I answer questions there and so do other programmers.

1886
01:28:18,700 --> 01:28:21,200
It's also got ports of handmade hero to other.

1887
01:28:22,200 --> 01:28:25,400
Languages and other platforms like mac and Linux and so on.

1888
01:28:25,400 --> 01:28:29,000
So if you want to see Community, people have done ports, like that's

1889
01:28:29,000 --> 01:28:29,400
our stuff.

1890
01:28:29,400 --> 01:28:30,500
You want to run on Mac or Linux.

1891
01:28:30,500 --> 01:28:32,400
That's a great place to go to get started on that.

1892
01:28:33,000 --> 01:28:37,800
And also we also have annotated archive and episode archive on there

1893
01:28:37,800 --> 01:28:40,400
that you can go to which helps catch up with old episodes if you're

1894
01:28:40,400 --> 01:28:41,100
new to the series.

1895
01:28:41,200 --> 01:28:42,600
So I highly recommend checking it out.

1896
01:28:43,300 --> 01:28:44,000
That's about it.

1897
01:28:44,000 --> 01:28:45,300
I will be back here tomorrow morning.

1898
01:28:45,300 --> 01:28:46,600
I believe it's 9 a.m.

1899
01:28:46,600 --> 01:28:47,800
Pacific Standard time tomorrow.

1900
01:28:48,000 --> 01:28:50,000
Hope to see you guys there for some breakfast coating.

1901
01:28:50,200 --> 01:28:51,800
If not, I completely understand.

1902
01:28:52,000 --> 01:28:55,000
Happy Thursday anyway and I will see you guys later.

1903
01:28:55,100 --> 01:28:55,600
Take it easy.

