1
00:00:02,300 --> 00:00:06,000
Hello everybody and welcome to handmade here on the show, Rico to

2
00:00:06,000 --> 00:00:08,400
complete game live on stream.

3
00:00:09,400 --> 00:00:14,800
We are doing some sort of I guess I guess I don't know what you want

4
00:00:14,800 --> 00:00:15,400
to call it.

5
00:00:15,500 --> 00:00:18,600
We're doing some improvements to our code.

6
00:00:18,900 --> 00:00:21,300
We've done a bunch of work to kind of Define some good stuff with the

7
00:00:21,300 --> 00:00:22,100
debug system.

8
00:00:22,500 --> 00:00:25,600
And now, I'm in the process of trying, to consolidate it down into

9
00:00:25,600 --> 00:00:29,100
some things that are like, really kind of easy to use, Clear concise,

10
00:00:29,100 --> 00:00:31,600
the code is nice and not too.

11
00:00:32,000 --> 00:00:36,300
Complicated or stringy and we just started doing that and I want to

12
00:00:36,300 --> 00:00:37,700
continue doing that today.

13
00:00:38,300 --> 00:00:41,600
If you are following along at home today is 211.

14
00:00:42,100 --> 00:00:45,700
You want to take day to 10 source code and start with that?

15
00:00:45,700 --> 00:00:49,500
That is the source code that I am starting with here and let's just

16
00:00:49,500 --> 00:00:53,200
dive right into it because like I said we're kind of just doing code

17
00:00:53,200 --> 00:00:56,800
architecture work here and so there isn't anything in particular to

18
00:00:56,800 --> 00:00:57,400
discuss.

19
00:00:58,000 --> 00:01:01,300
We just kind of have to start looking at the code and figuring out the

20
00:01:01,300 --> 00:01:01,600
sorts of

21
00:01:01,700 --> 00:01:05,000
Of things that we want to do with it, right?

22
00:01:05,700 --> 00:01:11,000
So where we left last time is we were sort of cleaning up the code to

23
00:01:11,000 --> 00:01:11,400
choose.

24
00:01:11,400 --> 00:01:13,500
All that sort of all the debug stuff that we were doing.

25
00:01:13,700 --> 00:01:14,600
We did some neat things.

26
00:01:14,600 --> 00:01:18,000
Now you can actually dump debug bitmaps but we still have some more

27
00:01:18,000 --> 00:01:21,800
stuff to do there in terms of getting the all of the debug stuff

28
00:01:21,800 --> 00:01:23,500
working as kind of a unified system.

29
00:01:25,300 --> 00:01:29,700
So I wanted to do something to start out with the debug stuff is kind

30
00:01:29,700 --> 00:01:32,000
of you know, it's fairly verbose in here.

31
00:01:32,000 --> 00:01:34,400
There's a fair bit of it, you can kind of see how much there is.

32
00:01:34,700 --> 00:01:39,900
I kind of want to take this stuff and maybe start breaking it up just

33
00:01:39,900 --> 00:01:40,700
a little bit more.

34
00:01:41,100 --> 00:01:43,300
As far as the debug system is concerned.

35
00:01:43,500 --> 00:01:50,500
I don't feel like any of this stuff in here is really all that, you

36
00:01:50,500 --> 00:01:54,000
know, it's stuff that really gets exposed to the rest of the program.

37
00:01:54,200 --> 00:01:55,900
Any particular way, right?

38
00:01:56,900 --> 00:02:01,400
If you take a look at where we're doing handmade, debug .h trying to

39
00:02:01,400 --> 00:02:04,800
remember exactly where we put that in here.

40
00:02:04,800 --> 00:02:05,800
Let's see.

41
00:02:05,800 --> 00:02:06,900
Where is my handmade?

42
00:02:06,900 --> 00:02:08,000
Debug .h?

43
00:02:11,200 --> 00:02:11,800
All right.

44
00:02:12,300 --> 00:02:12,800
Yes.

45
00:02:12,800 --> 00:02:17,700
So, handmade debug .h, only even appears inside handmade debug dot

46
00:02:17,700 --> 00:02:19,100
CPP, right?

47
00:02:19,400 --> 00:02:23,100
And so what I want to do is is since the system is completely

48
00:02:23,100 --> 00:02:23,900
isolated.

49
00:02:24,100 --> 00:02:29,200
What I want to do is be able to have a header where I pull out all

50
00:02:29,200 --> 00:02:33,300
this stuff for the debug system, and kind of keep that in a sort of

51
00:02:33,300 --> 00:02:37,000
own place that I can look at it a little more carefully, right?

52
00:02:37,800 --> 00:02:39,300
That's something that I would like to do,

53
00:02:41,500 --> 00:02:45,200
As during this process or that is, if I could manage to take a drink

54
00:02:45,200 --> 00:02:48,600
of water without spilling me to swing it all over myself, which is

55
00:02:48,600 --> 00:02:52,100
sort of a separate programming challenge that, you know, apparently, I

56
00:02:52,100 --> 00:02:52,600
failed.

57
00:02:53,100 --> 00:02:58,600
So, what I'd like to do is I feel like handmade debug dot h, since

58
00:02:58,600 --> 00:02:59,800
that's already taken, I guess.

59
00:02:59,800 --> 00:02:59,800
I

60
00:03:00,000 --> 00:03:03,400
Really care what the name of it necessarily is, but maybe I'll just

61
00:03:03,400 --> 00:03:08,900
say handmade debug macros or handmade debug interface or something

62
00:03:08,900 --> 00:03:09,400
like this.

63
00:03:10,800 --> 00:03:11,400
That.

64
00:03:11,600 --> 00:03:14,600
And then, I can sort of take this stuff and I can put it in there,

65
00:03:14,700 --> 00:03:14,900
right?

66
00:03:14,900 --> 00:03:18,500
So all of this stuff that was in there, that's all that sort of debug

67
00:03:18,500 --> 00:03:20,100
annotation things that are happening.

68
00:03:20,300 --> 00:03:22,900
Just going to throw them in there and they needed here.

69
00:03:22,900 --> 00:03:24,000
I'm just going to include it.

70
00:03:26,200 --> 00:03:28,300
And again, this doesn't do anything at all.

71
00:03:28,300 --> 00:03:30,500
It's completely useless thing that I'm doing.

72
00:03:30,500 --> 00:03:31,600
There's nothing to it.

73
00:03:31,600 --> 00:03:32,700
It doesn't change the coding.

74
00:03:32,700 --> 00:03:37,100
Anyway, all I'm doing is breaking these things off into a single file

75
00:03:37,100 --> 00:03:40,100
for my own logical benefit, right?

76
00:03:40,100 --> 00:03:44,200
It's just, so I can see stuff and know that I'm not like looking

77
00:03:44,200 --> 00:03:45,000
through all this going.

78
00:03:45,000 --> 00:03:47,000
Like, okay, there's a bunch of platforms stuff in here.

79
00:03:47,000 --> 00:03:48,900
Oh, there's the debug stuff, right?

80
00:03:50,100 --> 00:03:54,000
So this is the, you know, just this literally all it is is just so I

81
00:03:54,000 --> 00:03:55,800
can kind of have a little better.

82
00:03:56,300 --> 00:03:58,800
And understanding of what's happening there, right?

83
00:03:58,800 --> 00:03:59,700
So again, that changes it.

84
00:03:59,700 --> 00:04:00,500
Not at all.

85
00:04:01,700 --> 00:04:04,700
So let's come back here and I believe at the end of the stream

86
00:04:04,700 --> 00:04:08,200
yesterday, what we had done is sort of try to set us up so that debug

87
00:04:08,200 --> 00:04:11,500
variable no longer actually is a thing anymore, right?

88
00:04:11,900 --> 00:04:15,600
And so if debug variable is no longer a thing anymore, really, if you

89
00:04:15,600 --> 00:04:18,300
take a look at what's going on here, the primary thing that's going on

90
00:04:18,300 --> 00:04:20,800
here is this Karis our name, right?

91
00:04:20,800 --> 00:04:23,500
The caressed are named that

92
00:04:29,000 --> 00:04:32,600
That Kara star name is something that will have to be sort of looked

93
00:04:32,600 --> 00:04:33,700
up differently.

94
00:04:34,200 --> 00:04:37,200
But other than that, there really isn't anything that we still need

95
00:04:37,200 --> 00:04:38,300
the debug variable for.

96
00:04:38,500 --> 00:04:41,300
So I'm going to try, just pulling the, debug are variable out

97
00:04:41,300 --> 00:04:42,100
entirely.

98
00:04:42,600 --> 00:04:45,200
And what I'm going to do here is anywhere that we were previously

99
00:04:45,200 --> 00:04:50,400
doing something with the debug variable, I'm instead going to use the

100
00:04:50,400 --> 00:04:52,500
debug event right now.

101
00:04:52,500 --> 00:04:55,600
So I'm just going to again, this is just me attempting this I don't

102
00:04:55,600 --> 00:04:56,800
know what's going to go on.

103
00:04:57,400 --> 00:05:01,000
Exactly in here, but we're just going to give it a shot and we'll see

104
00:05:01,000 --> 00:05:02,100
what happens.

105
00:05:02,200 --> 00:05:03,700
I want to find everywhere.

106
00:05:03,700 --> 00:05:05,600
We do struct debug variable.

107
00:05:06,700 --> 00:05:08,900
Can't remember how this goes, exactly.

108
00:05:08,900 --> 00:05:10,100
Maybe something like this.

109
00:05:10,100 --> 00:05:11,300
Is that right?

110
00:05:12,400 --> 00:05:18,200
See, no, maybe the dot operator.

111
00:05:18,300 --> 00:05:23,100
No, thought there was some way to get it to actually search for that,

112
00:05:23,100 --> 00:05:23,800
but I don't know.

113
00:05:23,800 --> 00:05:24,700
I guess there isn't.

114
00:05:25,500 --> 00:05:27,200
I thought we looked this up before, to be honest with you,

115
00:05:27,400 --> 00:05:28,500
But maybe not.

116
00:05:28,800 --> 00:05:29,400
Anyway.

117
00:05:31,300 --> 00:05:33,500
I want to get rid of these forward, Declarations of it.

118
00:05:35,200 --> 00:05:38,000
One of the wonders of CNC plus vs.

119
00:05:38,000 --> 00:05:41,000
The fact Jeff, the forward, declare things, which is always kind of

120
00:05:41,000 --> 00:05:41,900
nuts and silly.

121
00:05:42,600 --> 00:05:43,600
But anyway, yeah.

122
00:05:43,600 --> 00:05:46,400
So if we take a look here, we just kind of have this concept that now,

123
00:05:46,400 --> 00:05:49,100
debug variable links just have events that they're backing.

124
00:05:50,000 --> 00:05:52,200
And I feel like

125
00:05:56,800 --> 00:05:59,800
Since a debug variable Link at this point points to it.

126
00:06:00,000 --> 00:06:04,000
And we can sort of start to simplify things down a little bit, right?

127
00:06:05,000 --> 00:06:05,400
Okay.

128
00:06:05,700 --> 00:06:09,100
So debug interactions are now would just be talking about debug

129
00:06:09,100 --> 00:06:10,900
events, I guess, right?

130
00:06:11,700 --> 00:06:13,100
And that's all that.

131
00:06:13,300 --> 00:06:14,400
That would be happening there.

132
00:06:15,400 --> 00:06:18,400
And then in here, whenever we're talking about a debug variable and

133
00:06:18,400 --> 00:06:21,000
we're trying to protect for really talking about converting a debug

134
00:06:21,000 --> 00:06:22,400
event to text, right?

135
00:06:24,700 --> 00:06:28,300
Like so, and like I said, we're going to have to have ways of getting

136
00:06:28,300 --> 00:06:29,300
at those names.

137
00:06:29,600 --> 00:06:32,700
Now, there is one thing we could do right?

138
00:06:32,900 --> 00:06:37,500
Which is we could try to make, we could leave the debug variable thing

139
00:06:37,700 --> 00:06:41,900
and oh, he's like d cash, the name every time, but I'm just going to

140
00:06:41,900 --> 00:06:44,600
see if we can get away without doing that, right?

141
00:06:44,600 --> 00:06:47,100
That's that's what I'm going to try to do and I don't actually know if

142
00:06:47,100 --> 00:06:48,900
I'll be able to do it, but I'm going to try to do that.

143
00:06:49,500 --> 00:06:52,300
So if we look and we see a debug event somewhere,

144
00:06:54,800 --> 00:06:58,200
We should be able to find see here.

145
00:06:59,300 --> 00:07:02,300
We should be able to find how we were getting at those records to

146
00:07:02,300 --> 00:07:03,400
begin with, right?

147
00:07:03,800 --> 00:07:04,700
So, let's see here.

148
00:07:05,900 --> 00:07:11,300
Do do, do, do, do, do, it's actually called Source.

149
00:07:11,300 --> 00:07:17,400
I think so, this right here, you can kind of see how this works if we

150
00:07:17,400 --> 00:07:22,000
want to get sort of the source from something, all we have to do is

151
00:07:22,000 --> 00:07:22,700
kind of look up.

152
00:07:22,800 --> 00:07:23,900
Event translation unit.

153
00:07:23,900 --> 00:07:27,300
And then the debug record index that gives us what we're looking for.

154
00:07:27,300 --> 00:07:30,900
And then that particular thing will give us back like the block name

155
00:07:31,300 --> 00:07:32,400
that we're looking for, right?

156
00:07:32,400 --> 00:07:36,100
Because that's a debug record and the debug record has the string in

157
00:07:36,100 --> 00:07:36,500
it.

158
00:07:36,700 --> 00:07:41,000
So if we wanted to do something like get event name, right?

159
00:07:42,500 --> 00:07:47,200
Or something like that or we could even just call this get name

160
00:07:47,600 --> 00:07:48,900
because we're passing a debug event.

161
00:07:48,900 --> 00:07:50,500
So we know what we're talking about here.

162
00:07:51,500 --> 00:07:54,500
All we need to do is say, okay, the result of that is just whatever

163
00:07:54,500 --> 00:07:57,200
the events block name is, right, and that's it.

164
00:07:59,100 --> 00:08:00,600
So that seems reasonable enough.

165
00:08:02,400 --> 00:08:05,300
And so now anytime we want to know the name of something we can just

166
00:08:05,300 --> 00:08:09,900
say get name and with the debug event and then we've got it.

167
00:08:10,100 --> 00:08:14,100
So everywhere in cure that I was previously doing VAR name, I should

168
00:08:14,100 --> 00:08:17,800
just be able to put the name in and it's everyone's happy and fine and

169
00:08:17,800 --> 00:08:24,100
dancing around like jubilant children but not bratty children,

170
00:08:24,100 --> 00:08:28,600
actually, you know, children who are nice, you know, and reasonable

171
00:08:28,600 --> 00:08:29,100
people.

172
00:08:30,600 --> 00:08:31,800
Oops, that was supposed to be source.

173
00:08:33,600 --> 00:08:38,500
Okay, so yeah, I'm really that's all there is to it.

174
00:08:38,500 --> 00:08:42,000
There's not a lot more than I do here again.

175
00:08:42,000 --> 00:08:42,200
Really.

176
00:08:42,200 --> 00:08:46,100
We can just now basically remove a bunch of the dereferencing light.

177
00:08:46,100 --> 00:08:50,000
You can see that we're starting to flatten out there was just a lot of

178
00:08:50,000 --> 00:08:51,900
that sort of dereferencing going on.

179
00:08:52,300 --> 00:08:55,600
And now again, we're just kind of collapsing that down into a nice,

180
00:08:56,800 --> 00:08:58,800
you know, more straightforward way.

181
00:09:00,000 --> 00:09:02,900
Again, this is just that sort of smooth kind of polishing operation

182
00:09:02,900 --> 00:09:06,600
where you're trying to get things into, you know, a better

183
00:09:06,600 --> 00:09:08,400
circumstance and hopefully we set ourselves up.

184
00:09:08,400 --> 00:09:12,400
You know, hopefully we're not polishing the turd at this point.

185
00:09:12,400 --> 00:09:14,600
Hopefully, we're polishing something that will polish down into a nice

186
00:09:14,600 --> 00:09:16,500
little beautiful gem.

187
00:09:16,500 --> 00:09:17,400
A little beautiful.

188
00:09:17,400 --> 00:09:22,000
You know, you know, I don't even, I don't even know why I'm saying

189
00:09:22,000 --> 00:09:22,400
these things.

190
00:09:22,700 --> 00:09:24,400
This is not teaching anyone programming.

191
00:09:24,400 --> 00:09:28,300
So, yes, don't pay attention to what I'm saying, to pay attention to

192
00:09:28,300 --> 00:09:28,500
what I'm doing.

193
00:09:28,500 --> 00:09:30,000
I'm just

194
00:09:30,000 --> 00:09:30,800
Just trying to make it.

195
00:09:30,800 --> 00:09:33,500
So that, again, we're sort of removing unnecessary and direction,

196
00:09:33,500 --> 00:09:36,300
we're removing unnecessary cruft from things.

197
00:09:36,500 --> 00:09:39,400
And again, that's that's normally not that difficult to do.

198
00:09:39,400 --> 00:09:44,300
But in a lot of places that can be relatively complex, like in this

199
00:09:44,300 --> 00:09:46,800
system, it's very complicated to has a lot of moving parts to it and

200
00:09:46,800 --> 00:09:49,200
so that's why I'm kind of taking like that your approach of like sort

201
00:09:49,200 --> 00:09:51,000
of smoothing it over over time.

202
00:09:51,800 --> 00:09:56,600
So anyway, anyway, you can see again, I'm just continuing to flatten

203
00:09:57,100 --> 00:09:59,900
continuing to flatten these things out and a lot of cases.

204
00:10:00,000 --> 00:10:00,800
It's as simple as just.

205
00:10:00,800 --> 00:10:02,600
In fact I probably could just do this.

206
00:10:02,800 --> 00:10:05,900
Take VAR and replace it with an event would probably be.

207
00:10:05,900 --> 00:10:11,100
Oops would probably be fine as a thing to do.

208
00:10:12,100 --> 00:10:13,000
So, here we go.

209
00:10:13,000 --> 00:10:14,100
There's that event.

210
00:10:15,500 --> 00:10:20,100
You know what, VAR arrow is probably just going to do that

211
00:10:20,100 --> 00:10:21,900
transformation, just about everywhere.

212
00:10:23,300 --> 00:10:27,200
And this case these are all that was our radial menu.

213
00:10:27,400 --> 00:10:29,700
So with that was, we should re-enable that

214
00:10:29,900 --> 00:10:30,500
Time soon.

215
00:10:30,600 --> 00:10:31,800
It'd be nice to have a menu again.

216
00:10:36,400 --> 00:10:39,000
Alright, okay, so we got VAR.

217
00:10:40,900 --> 00:10:43,100
That's actually going to be event.

218
00:10:44,300 --> 00:10:50,100
Passing now and debug variable to text, not found, did I change it to

219
00:10:50,100 --> 00:10:51,700
debug event to text or something?

220
00:10:52,500 --> 00:10:53,600
Debug

221
00:10:54,700 --> 00:10:55,500
Event to text.

222
00:10:55,500 --> 00:11:01,500
I did well shows you what I know I guess I was more proactive about

223
00:11:01,500 --> 00:11:02,600
that than I thought I was going to be

224
00:11:03,700 --> 00:11:06,300
All right, so again, same stuff here.

225
00:11:06,300 --> 00:11:13,200
This is just changing party event and it looks like we don't really

226
00:11:13,200 --> 00:11:15,500
need to change a lot of these things.

227
00:11:17,000 --> 00:11:18,700
So there we go.

228
00:11:20,400 --> 00:11:20,800
Yeah.

229
00:11:21,800 --> 00:11:22,400
All right.

230
00:11:24,600 --> 00:11:31,000
This again is going to be a direct reference so that should be fine.

231
00:11:31,800 --> 00:11:32,600
Nothing else.

232
00:11:33,300 --> 00:11:34,600
Particularly we're going on there.

233
00:11:35,800 --> 00:11:37,000
This is debug event.

234
00:11:39,500 --> 00:11:41,100
This is also a tea party event.

235
00:11:45,400 --> 00:11:50,900
And same thing here again, just flattening that and Direction out.

236
00:11:50,900 --> 00:11:55,000
So now we're just working directly on those events and everything is

237
00:11:55,000 --> 00:11:55,400
fine.

238
00:11:57,000 --> 00:11:59,800
So in here, we are creating these events.

239
00:12:01,900 --> 00:12:04,900
I think that should actually probably be fine.

240
00:12:07,000 --> 00:12:13,200
The VAR type equals type, debug type 2 uh that's all fine again.

241
00:12:15,300 --> 00:12:17,900
VAR name is not a member of debug event.

242
00:12:17,900 --> 00:12:18,700
That is true.

243
00:12:18,900 --> 00:12:22,400
So in this case, this is a little bit wonky, right?

244
00:12:22,400 --> 00:12:25,800
When we're creating variables here, we don't really have the ability

245
00:12:25,800 --> 00:12:29,600
to store an additional name in them in that way.

246
00:12:29,600 --> 00:12:30,200
Right?

247
00:12:30,800 --> 00:12:34,800
But what I can do is I can extend the concept of the debug variable

248
00:12:34,800 --> 00:12:35,700
very trivially.

249
00:12:36,500 --> 00:12:38,600
I tried the debug event, right?

250
00:12:39,700 --> 00:12:44,200
So we got here, debug event, I can extend the concept of debug event.

251
00:12:44,400 --> 00:12:49,200
Easily to support this because since these are variables of any kind

252
00:12:49,200 --> 00:12:53,900
and there's a union if I want something, you know, like that would

253
00:12:53,900 --> 00:12:55,500
have a name associated with it.

254
00:12:55,600 --> 00:12:58,400
I can do that by just creating a variable.

255
00:12:58,400 --> 00:12:59,900
That's a name type, right?

256
00:13:04,500 --> 00:13:08,400
I can also create arbitrarily arbitrary additional debug records in

257
00:13:08,400 --> 00:13:11,000
some kind of special translation unit level or something like that.

258
00:13:11,000 --> 00:13:14,700
Where I push additional ones on and I can do other things like that if

259
00:13:14,700 --> 00:13:15,300
I want to.

260
00:13:15,600 --> 00:13:18,700
So I'm not sure exactly how I want to approach that.

261
00:13:18,700 --> 00:13:20,800
But again, you can kind of see that this is the place where the

262
00:13:20,800 --> 00:13:22,600
collapsing is going to be difficult for us.

263
00:13:22,800 --> 00:13:26,800
Because if we remove the concept that this has a name pointer in it,

264
00:13:26,900 --> 00:13:28,000
things get a little bit harder.

265
00:13:28,000 --> 00:13:32,100
Now, there is something we could do here if we wanted to, that would

266
00:13:32,100 --> 00:13:33,200
make this a little bit.

267
00:13:34,300 --> 00:13:38,000
had more flexible and I don't know if we want to or not, but we could

268
00:13:38,000 --> 00:13:39,900
actually also say that debug events,

269
00:13:41,200 --> 00:13:43,700
You know, eventually we could sort of move away from the concept that

270
00:13:43,700 --> 00:13:46,100
there was a debug record index at all, right?

271
00:13:46,500 --> 00:13:49,000
We could say that the debug event just stores the foreigners directly

272
00:13:49,000 --> 00:13:52,600
in it and the cost is essentially more again, more throughput traffic,

273
00:13:52,600 --> 00:13:52,800
right?

274
00:13:52,800 --> 00:13:55,500
It makes these things a little bit bigger Jimmy.

275
00:13:58,600 --> 00:14:00,000
But we certainly could do that.

276
00:14:02,700 --> 00:14:05,900
So right now we have things like the location in the source code but

277
00:14:05,900 --> 00:14:08,100
maybe we don't care that much about what the location of the source

278
00:14:08,100 --> 00:14:09,900
code is or something like this.

279
00:14:09,900 --> 00:14:12,400
And you can imagine a storing right into the clock.

280
00:14:12,400 --> 00:14:15,800
You can imagine a storing a name directly in here.

281
00:14:18,200 --> 00:14:21,400
And moving away from the debug record index entirely because the debug

282
00:14:21,400 --> 00:14:23,500
record index, at some level has caused us nothing.

283
00:14:23,500 --> 00:14:26,600
But pain is just kind of a pain of a, you know, it's kind of an

284
00:14:26,600 --> 00:14:29,100
annoying thing to have to have dealt with, right?

285
00:14:29,400 --> 00:14:32,500
So we could actually decide to kind of go that route and stop having

286
00:14:32,500 --> 00:14:33,900
the concept of the debugger could index.

287
00:14:34,500 --> 00:14:38,100
If we don't really care about that aspect of it very much anymore,

288
00:14:38,200 --> 00:14:38,500
right?

289
00:14:38,500 --> 00:14:41,600
If that's not something we really care about, that's certainly

290
00:14:41,600 --> 00:14:44,200
something that we could figure out ways around, right?

291
00:14:44,400 --> 00:14:47,300
And so at the cost of increasing the structure size a little bit,

292
00:14:48,100 --> 00:14:49,800
Which at this point we don't really have to worry about it all because

293
00:14:49,800 --> 00:14:50,200
it's piggy.

294
00:14:50,200 --> 00:14:52,600
But assuming that we were actually in the future, going to try to

295
00:14:52,600 --> 00:14:54,700
compress this down a little bit by only storing.

296
00:14:54,700 --> 00:14:57,400
What we actually need the story here which is basically would be a

297
00:14:57,400 --> 00:14:59,800
just a very simple thing that would happen in the actual push.

298
00:15:00,000 --> 00:15:04,300
All we could sort of start to work around that particular part of it

299
00:15:04,300 --> 00:15:04,800
right.

300
00:15:05,600 --> 00:15:07,600
I'm not sure what I want to do about that yet.

301
00:15:07,700 --> 00:15:08,800
I really don't know.

302
00:15:10,000 --> 00:15:13,500
So what I might do for the moment is I might say let's just finish

303
00:15:13,500 --> 00:15:19,400
this phase by sort of getting rid of that notion at the moment, right?

304
00:15:21,500 --> 00:15:25,200
And instead what I'm going to do is I'm going to say, okay, when I

305
00:15:25,200 --> 00:15:27,700
push one of these debug event things on here, right?

306
00:15:27,900 --> 00:15:29,600
Maybe I'll 0 struck that guy.

307
00:15:33,200 --> 00:15:36,100
So I know it's cleared out and I'm not going to deal with the name

308
00:15:36,100 --> 00:15:36,700
thing yet.

309
00:15:37,000 --> 00:15:39,600
That's not just, that's just not going to be something that I actually

310
00:15:39,800 --> 00:15:42,100
deal with that.

311
00:15:43,900 --> 00:15:47,800
Okay, so we'll take a look at that sin because I may want to do that

312
00:15:47,800 --> 00:15:49,500
and we'll see what we want to do there.

313
00:15:50,200 --> 00:15:51,900
Okay, so we have debug variable link.

314
00:15:52,500 --> 00:15:55,600
I've got a thing where I'm talking about the debug variable and I

315
00:15:55,600 --> 00:15:56,600
don't have one of those.

316
00:15:56,600 --> 00:15:59,800
So I'm just going to again, continue to move those over to be events.

317
00:16:00,700 --> 00:16:04,200
So everywhere we're doing that, that all just will work actually, even

318
00:16:04,200 --> 00:16:07,800
though it's still called VAR ago.

319
00:16:08,400 --> 00:16:13,500
Debug events, same thing here, you look at that

320
00:16:13,600 --> 00:16:19,900
And and yeah, coralie, so good.

321
00:16:20,100 --> 00:16:25,300
So again, this is really just me changing this name, but that's mostly

322
00:16:25,300 --> 00:16:27,600
it not much that has to happen there.

323
00:16:29,100 --> 00:16:36,500
Okay, that's again, just the fact that that bar would have to be this

324
00:16:36,500 --> 00:16:37,000
event.

325
00:16:38,500 --> 00:16:39,500
And that's just about it.

326
00:16:45,600 --> 00:16:49,500
Okay so now we're going to have some things that don't have hoops.

327
00:16:49,700 --> 00:16:50,400
That's not good.

328
00:16:51,800 --> 00:16:52,700
Where are we in here?

329
00:16:54,900 --> 00:16:59,300
Oh, well, yeah, so that's actually probably quite reasonable thing to

330
00:16:59,300 --> 00:17:00,000
have happen.

331
00:17:01,200 --> 00:17:05,000
We don't actually support some of those guys, some of those types yet,

332
00:17:05,300 --> 00:17:07,800
so it's entirely possible going to type that we don't recognize.

333
00:17:08,300 --> 00:17:11,099
So let's see what that is Type 2, is that something we should

334
00:17:11,099 --> 00:17:11,700
beginning?

335
00:17:12,900 --> 00:17:16,400
Handmade debug, oops.

336
00:17:16,400 --> 00:17:17,700
Sorry interface.

337
00:17:19,099 --> 00:17:21,099
So type 2 is 0 1, 2.

338
00:17:21,099 --> 00:17:22,099
That's an end block.

339
00:17:22,300 --> 00:17:24,200
Well why would we be getting?

340
00:17:24,500 --> 00:17:26,599
Why would we be calling this on and block though?

341
00:17:26,599 --> 00:17:32,500
That that does seem maybe a little bit odd to me, to be completely

342
00:17:32,500 --> 00:17:32,800
honest.

343
00:17:32,800 --> 00:17:35,400
That seems just just a little strange.

344
00:17:36,000 --> 00:17:37,700
So whatever type we are and here.

345
00:17:37,700 --> 00:17:40,700
Why are we seeing an end block type, right?

346
00:17:42,600 --> 00:17:44,100
I verify that, that's the case.

347
00:17:45,700 --> 00:17:47,000
And bought.

348
00:17:47,800 --> 00:17:48,200
Yes.

349
00:17:49,700 --> 00:17:52,800
So yeah, that just that's looks buggy to me.

350
00:17:53,700 --> 00:17:59,700
I don't know that we should have any of those in our actual hierarchy.

351
00:18:00,100 --> 00:18:00,700
Right?

352
00:18:00,700 --> 00:18:04,800
Like the hierarchy just should not be having anything of that type.

353
00:18:04,800 --> 00:18:05,500
I don't think.

354
00:18:06,200 --> 00:18:10,300
So what I'm going to do here, just just temporarily is I'm going to

355
00:18:10,300 --> 00:18:13,700
take a look and see why I'm going to see if I could figure out why

356
00:18:13,700 --> 00:18:15,100
we're getting that happening.

357
00:18:15,100 --> 00:18:19,000
So in here where we do this, I'm going to assert that when I store

358
00:18:19,000 --> 00:18:21,900
this event here, I'm going to start that there are type is not equal

359
00:18:21,900 --> 00:18:23,300
to debug type en Bloc.

360
00:18:26,600 --> 00:18:30,100
which ensure it should definitely not be and then when we do the push,

361
00:18:30,100 --> 00:18:33,500
when we do the create, debug variable, or sorry collate,

362
00:18:36,100 --> 00:18:37,000
That's not it.

363
00:18:37,500 --> 00:18:37,900
Here it is.

364
00:18:38,600 --> 00:18:41,700
When we do these, when we create these variables and we pass the type

365
00:18:41,700 --> 00:18:45,300
in, I'm also going to start here that the type is not equal to en

366
00:18:45,300 --> 00:18:45,700
Bloc.

367
00:18:47,400 --> 00:18:47,800
Oh

368
00:18:49,600 --> 00:18:49,900
huh.

369
00:18:50,700 --> 00:18:51,800
I know what I've got to do.

370
00:18:51,900 --> 00:18:53,400
I know exactly why that's happening.

371
00:18:53,900 --> 00:18:57,200
It's because when we did this collapse, I never went through and stop

372
00:18:57,200 --> 00:18:57,900
doing this.

373
00:18:58,100 --> 00:19:00,400
So it's actually just a VAR group, right?

374
00:19:00,500 --> 00:19:01,900
We're storing it in a you ate.

375
00:19:02,000 --> 00:19:05,100
So now we don't want to do this thing where we leave the top part

376
00:19:05,100 --> 00:19:06,100
because we're not segregated.

377
00:19:06,100 --> 00:19:07,100
These are all the same type.

378
00:19:07,100 --> 00:19:10,000
Remember, I did this segregation, we're going to you ate now.

379
00:19:10,200 --> 00:19:15,000
So now this stuff can just be part of the regular thing so that's

380
00:19:15,000 --> 00:19:16,000
actually none of that.

381
00:19:16,000 --> 00:19:18,500
Checking code is actually necessary in this will probably be okay.

382
00:19:19,300 --> 00:19:20,500
So, anyway, there we go.

383
00:19:20,700 --> 00:19:21,600
That's all good.

384
00:19:22,400 --> 00:19:25,600
And again, we're just getting a little bit simpler each time, which is

385
00:19:25,600 --> 00:19:27,800
exactly exactly what I want.

386
00:19:28,400 --> 00:19:28,900
Okay.

387
00:19:29,200 --> 00:19:33,200
So now we got to address our name situation and at some point, like I

388
00:19:33,200 --> 00:19:36,100
said, I kind of wanted to start moving away from those debug records

389
00:19:36,300 --> 00:19:39,200
because they actually causes a fair bit of pain, it was an interesting

390
00:19:39,200 --> 00:19:40,900
experiment and I was happy to do it.

391
00:19:42,600 --> 00:19:45,400
Because he was that when we're talking about those counters, you know,

392
00:19:45,400 --> 00:19:48,800
stuff like that, but it seems like they're just ending up being more

393
00:19:49,100 --> 00:19:51,500
trouble than they're worth to me, right?

394
00:19:51,500 --> 00:19:54,000
And if I can't come up with a really good reason to keep them that, I

395
00:19:54,000 --> 00:19:56,400
just don't think we should especially in this phase of the

396
00:19:56,400 --> 00:19:58,800
architecture where we see what the thing is that we need to do and

397
00:19:58,800 --> 00:20:02,800
they're really, I don't know of any reason why we need to do them

398
00:20:02,900 --> 00:20:03,300
right.

399
00:20:03,400 --> 00:20:08,200
I just don't see I'm not feeling any particular, overriding reason why

400
00:20:08,200 --> 00:20:10,900
those things have to be in there they just don't seem to serve a

401
00:20:10,900 --> 00:20:12,300
purpose, right?

402
00:20:13,400 --> 00:20:16,100
So, I think I might want to kind of move away from the little bit, and

403
00:20:16,100 --> 00:20:19,400
let's take a look and see, realistically speaking.

404
00:20:19,600 --> 00:20:23,900
What what I can do along those lines, right, okay.

405
00:20:23,900 --> 00:20:31,100
So, first things first, let me get rid of that and block check there.

406
00:20:31,900 --> 00:20:34,700
So, first things first, let's just see what happens if we just

407
00:20:34,700 --> 00:20:36,100
straight-up, replace it.

408
00:20:36,500 --> 00:20:40,300
Let's see what happens inside the debug platform stuff, right?

409
00:20:40,500 --> 00:20:42,100
Let's see what happens if I just soup.

410
00:20:42,400 --> 00:20:44,200
Mountain platform anymore, I moved into interface.

411
00:20:44,600 --> 00:20:47,000
Let's see if I just straight-up replace that stuff with something

412
00:20:47,000 --> 00:20:48,100
simpler than it was.

413
00:20:48,200 --> 00:20:48,800
Right?

414
00:20:48,900 --> 00:20:51,200
So instead of a debug record index, we're just going straight up have

415
00:20:51,200 --> 00:20:52,500
a car star, which is just a name for.

416
00:20:52,500 --> 00:20:54,100
Now I just that's just what we'll have.

417
00:20:54,500 --> 00:20:55,400
We're just going to have a name.

418
00:20:55,400 --> 00:20:58,300
So we start the clock, we throw the name, we throw the core index TC

419
00:20:59,100 --> 00:20:59,800
and we store the

420
00:21:00,000 --> 00:21:01,700
Elation unit and type right?

421
00:21:02,000 --> 00:21:04,600
Although translation unit can go away now to probably right.

422
00:21:05,100 --> 00:21:06,200
I think that can go away.

423
00:21:06,500 --> 00:21:11,100
So now we literally just have these and then we'd have an extra we're

424
00:21:11,100 --> 00:21:14,100
having some extra stuff here I guess at some level right because this

425
00:21:14,100 --> 00:21:18,800
is this is to you and 16 and then we have a you ate you almost want

426
00:21:18,800 --> 00:21:21,800
this core index to be a uh write something like that.

427
00:21:22,700 --> 00:21:23,200
But yeah.

428
00:21:23,200 --> 00:21:25,800
Or we could just say we don't have more than 256 threads, but

429
00:21:25,900 --> 00:21:28,300
unfortunately we can't really do that because we want to use the

430
00:21:28,300 --> 00:21:29,800
windows thread IDs and sometimes

431
00:21:30,000 --> 00:21:30,600
Those are bigger.

432
00:21:31,600 --> 00:21:36,700
So yeah, that's that's not really what you would want.

433
00:21:36,700 --> 00:21:38,700
I'm going to leave that as a u-32 for now maybe.

434
00:21:38,700 --> 00:21:41,300
Then now I don't know, I kind of want to keep that small and I think I

435
00:21:41,300 --> 00:21:43,800
wanted maybe try to fit these into something smaller just again, so I

436
00:21:43,800 --> 00:21:46,900
can keep that track down a little bit but we'll deal with that a

437
00:21:46,900 --> 00:21:47,600
little bit later.

438
00:21:48,600 --> 00:21:50,500
I'm going to say something here like to do.

439
00:21:52,200 --> 00:21:58,000
Expand this out and pack it better question mark, right?

440
00:21:59,600 --> 00:22:02,900
Okay, debug record index, not a member, you're correct.

441
00:22:02,900 --> 00:22:05,600
So all of these guys are going to now, be upset because we've removed

442
00:22:05,600 --> 00:22:09,100
the debug record index stuff from them, but we don't really care about

443
00:22:09,100 --> 00:22:09,300
that.

444
00:22:09,300 --> 00:22:11,700
And in fact, if you want to just make this, some kind of super fatty

445
00:22:11,700 --> 00:22:14,100
nonsense thing, that's just kind of crazy.

446
00:22:14,100 --> 00:22:16,300
And we just store all the same data for the moment.

447
00:22:16,500 --> 00:22:18,000
We could actually even see what that looks like.

448
00:22:18,000 --> 00:22:20,500
By just saying, you know what, let's just go, let's just get

449
00:22:20,500 --> 00:22:21,400
absolutely piggy.

450
00:22:21,400 --> 00:22:22,600
In fact, you know what here it comes.

451
00:22:26,800 --> 00:22:27,500
Pig hap.

452
00:22:27,600 --> 00:22:29,900
It's pick out time, let's pick it out.

453
00:22:30,000 --> 00:22:30,900
Let's just get piggy.

454
00:22:31,700 --> 00:22:35,200
So instead of what we were doing before, where the debug record had

455
00:22:35,200 --> 00:22:40,000
this stuff just you know, forget about it, forget about it, we're just

456
00:22:40,000 --> 00:22:41,300
going to stuff that right on in there.

457
00:22:41,400 --> 00:22:42,200
Everything's in there.

458
00:22:42,200 --> 00:22:49,500
The whole thing, every thing is in there everything not some of it not

459
00:22:49,500 --> 00:22:50,700
a little bit of it.

460
00:22:50,700 --> 00:22:53,200
The whole thing is their whole thing.

461
00:22:53,200 --> 00:22:55,600
Is there every last bit, it's all there.

462
00:22:55,800 --> 00:22:56,900
That's the point.

463
00:22:57,000 --> 00:22:58,900
So anyway, we do this.

464
00:22:59,700 --> 00:23:03,100
And now, what I'm going to do is every time we do one of these things

465
00:23:03,100 --> 00:23:06,500
where we have the debug record, right?

466
00:23:06,500 --> 00:23:11,200
That sort of concept of this debug record thing, we're just going to

467
00:23:11,200 --> 00:23:12,500
say, that's just not a thing anymore.

468
00:23:12,500 --> 00:23:14,000
We don't care about that, right?

469
00:23:14,400 --> 00:23:14,700
Do you buy?

470
00:23:14,700 --> 00:23:15,300
Records are gone?

471
00:23:15,300 --> 00:23:16,100
They don't exist.

472
00:23:16,100 --> 00:23:18,500
We don't we never heard of them, we don't want them here.

473
00:23:18,500 --> 00:23:20,100
We don't like anything like that.

474
00:23:20,100 --> 00:23:22,900
So we're just going to get rid of those, then they're gone.

475
00:23:23,200 --> 00:23:26,900
Okay, so I'm going to keep pushing through that, oops, that's not

476
00:23:26,900 --> 00:23:28,400
supposed to be a preprocessor command.

477
00:23:28,500 --> 00:23:29,700
So I'm going to

478
00:23:29,700 --> 00:23:30,800
To keep pushing through that.

479
00:23:30,800 --> 00:23:35,100
And I'm just going to remove all notion of debug record from anything

480
00:23:35,100 --> 00:23:36,700
that we do in here, right?

481
00:23:36,800 --> 00:23:39,000
So here is US getting the debug record out of this.

482
00:23:39,800 --> 00:23:40,900
I don't want that anymore.

483
00:23:40,900 --> 00:23:42,700
So I'm going to get rid of all of that.

484
00:23:42,900 --> 00:23:45,300
I'm going to just say, we don't have anybody record anymore.

485
00:23:45,500 --> 00:23:50,200
And now this stuff is just stored directly on the event, right to heck

486
00:23:50,200 --> 00:23:52,600
with that sort of thing that we were doing before it just doesn't

487
00:23:52,600 --> 00:23:53,000
matter.

488
00:23:53,600 --> 00:23:57,700
So when we're doing begin block here, and we do record, debug event up

489
00:23:57,700 --> 00:23:59,600
in here, that's going to actually be the

490
00:23:59,700 --> 00:23:59,800
The.

491
00:24:00,500 --> 00:24:04,100
That we want to record all of all of the this stuff.

492
00:24:04,100 --> 00:24:07,200
So in fact, you know what that can actually just kind of, I think go

493
00:24:07,300 --> 00:24:10,500
right up in here, right, I believe.

494
00:24:10,500 --> 00:24:11,000
Anyway,

495
00:24:13,300 --> 00:24:14,200
Something like that.

496
00:24:14,800 --> 00:24:19,300
And so this needs to take this record, debug event needs to take what

497
00:24:19,300 --> 00:24:20,400
the file, the line.

498
00:24:20,400 --> 00:24:21,800
And the block name actually are.

499
00:24:21,800 --> 00:24:25,100
So every time you record a debug event, you would just pass those

500
00:24:25,100 --> 00:24:25,600
things in.

501
00:24:25,600 --> 00:24:29,900
You would do something like, you know, file name, line number and

502
00:24:29,900 --> 00:24:30,400
block name.

503
00:24:30,400 --> 00:24:35,200
So just be like file line block, something like that and these guys

504
00:24:35,200 --> 00:24:37,900
would just be, you know, file

505
00:24:39,200 --> 00:24:43,200
Lime and block, right?

506
00:24:43,400 --> 00:24:47,700
And so in here, we do record debug event, we would do file

507
00:24:50,400 --> 00:24:53,300
Klein actually no.

508
00:24:53,300 --> 00:24:55,400
I think about you know, and since those are all macros, I could just

509
00:24:55,400 --> 00:24:58,400
even leave them that way I guess for the most part.

510
00:24:58,400 --> 00:25:01,000
So, really, the only thing I have to pass in is the name because that

511
00:25:01,000 --> 00:25:03,900
doesn't actually that doesn't actually change.

512
00:25:03,900 --> 00:25:05,200
But I think these would be fine.

513
00:25:05,400 --> 00:25:08,700
Actually, I think this is actually fine, there's really no reason.

514
00:25:08,700 --> 00:25:10,700
I can't just leave it that way, right?

515
00:25:12,400 --> 00:25:14,300
So, yes, so record, debug event.

516
00:25:14,300 --> 00:25:17,100
Now needs just needs to take that block name, right?

517
00:25:18,100 --> 00:25:19,300
But that's really about it.

518
00:25:19,300 --> 00:25:20,200
So, whatever the block,

519
00:25:20,400 --> 00:25:21,600
Name is block name in it.

520
00:25:21,600 --> 00:25:22,200
There it is.

521
00:25:22,300 --> 00:25:23,500
This stuff goes away.

522
00:25:23,600 --> 00:25:24,400
So goodbye.

523
00:25:24,800 --> 00:25:28,400
So, begin block is just a record, debug event for the begin block

524
00:25:28,400 --> 00:25:29,900
debug event, right?

525
00:25:29,900 --> 00:25:33,900
Really, really straight forward now and let's see.

526
00:25:33,900 --> 00:25:36,700
Anything else that happens here, begin block have to have a counter,

527
00:25:36,700 --> 00:25:38,300
the counter name.

528
00:25:39,500 --> 00:25:43,000
I don't know if we want to touch that just yet, but we might be able

529
00:25:43,000 --> 00:25:45,600
to get rid of some of that stuff too eventually.

530
00:25:46,100 --> 00:25:50,000
So, let's see here, let's start compiling, where we at and block.

531
00:25:50,700 --> 00:25:52,100
Not an official record you like about.

532
00:25:52,200 --> 00:25:53,100
That is true.

533
00:25:53,600 --> 00:25:54,500
That's true.

534
00:25:55,500 --> 00:25:57,100
We did not in end.

535
00:25:57,100 --> 00:25:58,800
Block pass enough stuff.

536
00:25:58,900 --> 00:26:02,500
So end block calls, record, debug event.

537
00:26:02,700 --> 00:26:06,600
We need a name for that block and I don't know what it should be.

538
00:26:07,700 --> 00:26:11,600
Probably just end block for now, but we could pass something more

539
00:26:11,600 --> 00:26:14,100
intelligent there later, if you wanted to, I guess,

540
00:26:15,700 --> 00:26:19,800
All right, so debug record index doesn't need to get stored anymore.

541
00:26:19,800 --> 00:26:22,300
Record index isn't even a thing, right?

542
00:26:22,800 --> 00:26:25,700
And so, in some sense, this part can just go away as well, right?

543
00:26:25,700 --> 00:26:28,000
So record index can be deleted.

544
00:26:28,000 --> 00:26:30,300
Record to begin with, doesn't need to pass a counter.

545
00:26:30,600 --> 00:26:33,300
The counter is now in the longer relevant, right?

546
00:26:33,800 --> 00:26:35,500
So record debug event, right?

547
00:26:35,500 --> 00:26:39,300
It just doesn't need to be in there for any particular purpose, at

548
00:26:39,300 --> 00:26:41,300
least not that I can tell, right?

549
00:26:42,500 --> 00:26:45,300
So yeah, unless we just wanted to put a counter in there.

550
00:26:46,000 --> 00:26:49,100
Which late we might want to do later but not for all debug events.

551
00:26:49,300 --> 00:26:51,800
So I'm going to leave the part that actually gets those out just in

552
00:26:51,800 --> 00:26:55,000
case it becomes an issue, right?

553
00:26:55,500 --> 00:26:58,400
But otherwise we're not going to deal with that, okay?

554
00:26:59,400 --> 00:26:59,500
So

555
00:27:00,000 --> 00:27:08,200
Again, don't need to pass it, begin block, counter counter that stuff,

556
00:27:08,200 --> 00:27:11,600
I think, well, we'll just leave it and get rid of it here.

557
00:27:13,300 --> 00:27:16,800
All right, so translation unit is going to go away as well.

558
00:27:17,000 --> 00:27:21,600
Goodbye translation unit, let's see here.

559
00:27:21,700 --> 00:27:24,600
Cannot convert from direct fight, debug type to Cara star.

560
00:27:27,200 --> 00:27:29,800
Where's my Duo type, debug type, where is that?

561
00:27:30,000 --> 00:27:30,400
Begin.

562
00:27:30,400 --> 00:27:33,900
Debug, begin data, block, debug begin data block.

563
00:27:34,300 --> 00:27:36,300
Yeah, so cure again, we have these counters.

564
00:27:36,300 --> 00:27:40,000
We don't definitely don't care about counters for any of this stuff.

565
00:27:40,300 --> 00:27:44,100
So really this, this sort of thing where we're doing record, debug

566
00:27:44,100 --> 00:27:44,700
event.

567
00:27:44,900 --> 00:27:48,900
This stuff can be simplified pretty dramatically and the block name

568
00:27:48,900 --> 00:27:49,300
again.

569
00:27:49,300 --> 00:27:53,000
Can just be I guess passed in here.

570
00:27:54,300 --> 00:27:57,400
We shouldn't that be a string is version of the value.

571
00:27:59,100 --> 00:27:59,900
Wouldn't that?

572
00:28:00,100 --> 00:28:05,100
Isn't that supposed to be what that it?

573
00:28:05,100 --> 00:28:05,900
Why weren't we?

574
00:28:06,000 --> 00:28:06,400
What?

575
00:28:06,400 --> 00:28:07,900
Why are we doing that before?

576
00:28:09,000 --> 00:28:10,900
I don't understand what was happening there.

577
00:28:11,700 --> 00:28:12,800
That just seems dumb.

578
00:28:16,400 --> 00:28:19,400
That, that seems kind of stupid, right?

579
00:28:19,400 --> 00:28:22,700
I mean, I don't know that seems kind of dumb anyway.

580
00:28:22,700 --> 00:28:25,000
Well, you know, if it's done, it's done.

581
00:28:25,200 --> 00:28:28,100
Sometimes you're dumb and you just gotta live with that.

582
00:28:28,100 --> 00:28:30,200
That's just, you know, that's your little situation.

583
00:28:30,200 --> 00:28:31,000
You got to deal with.

584
00:28:31,800 --> 00:28:32,100
All right.

585
00:28:32,100 --> 00:28:32,700
So, let's see.

586
00:28:32,700 --> 00:28:35,200
We got close data, block, their gourd, debug event, that's going to

587
00:28:35,200 --> 00:28:35,500
pass.

588
00:28:35,500 --> 00:28:36,500
There ain't no value to pass.

589
00:28:36,500 --> 00:28:42,900
So this is just a, you know, and block and data block of thing.

590
00:28:44,000 --> 00:28:46,100
And then this guy here, this is just

591
00:28:46,300 --> 00:28:51,100
Again, that could pass the name and we can get rid of this, right?

592
00:28:51,600 --> 00:28:53,600
We also certainly don't care about that anymore, that doesn't even

593
00:28:53,600 --> 00:28:54,100
exist.

594
00:28:54,900 --> 00:28:59,400
So let's see, get name now, doesn't have to exist either get name is

595
00:28:59,400 --> 00:29:02,600
just the name that the event has, right?

596
00:29:03,300 --> 00:29:07,400
So that's easy, the translation unit stuff, 4 for matching these

597
00:29:07,400 --> 00:29:07,800
things.

598
00:29:07,800 --> 00:29:09,900
All we really have to do is match the thread ID.

599
00:29:09,900 --> 00:29:15,900
Now this, this could, you know, again we could sort of do a to do.

600
00:29:16,200 --> 00:29:16,500
Here.

601
00:29:20,500 --> 00:29:25,100
Have counters for blocks so we could put the counters just in the

602
00:29:25,100 --> 00:29:26,500
blocks for the extra layer of security.

603
00:29:26,500 --> 00:29:28,400
Make sure they match and I might do that.

604
00:29:28,400 --> 00:29:29,900
That seems like a pretty good idea.

605
00:29:30,100 --> 00:29:30,800
We'll see.

606
00:29:31,300 --> 00:29:35,100
So Source now goes away and anything that was coming from Soros can

607
00:29:35,100 --> 00:29:39,400
actually just be retrieved guess we got draw a rectangle.

608
00:29:39,400 --> 00:29:40,700
Check in there and get rid of that.

609
00:29:41,300 --> 00:29:45,500
Anything that we have from Soros can just be changed now to just the

610
00:29:45,500 --> 00:29:46,200
event.

611
00:29:46,300 --> 00:29:48,600
So I guess allocate open debug block, doesn't

612
00:29:48,700 --> 00:29:52,200
Need to take a source anymore like that can go away and anywhere

613
00:29:52,200 --> 00:29:54,200
that's talking about these sources, right?

614
00:29:54,600 --> 00:29:58,400
That's something that doesn't actually ever need to be stored pretty

615
00:29:58,400 --> 00:29:59,800
much at all right.

616
00:30:01,200 --> 00:30:06,500
And yeah, get record from not even a thing anymore for the most part.

617
00:30:06,900 --> 00:30:07,500
So, let's see.

618
00:30:07,500 --> 00:30:11,500
I don't know what that was actually being used for if anything.

619
00:30:12,600 --> 00:30:14,600
So it's just looking to see whether

620
00:30:15,600 --> 00:30:20,400
The matching blocks parent record matches.

621
00:30:20,400 --> 00:30:21,800
The one that's closing.

622
00:30:21,800 --> 00:30:25,600
So again that's just that's just a way of making sure that these

623
00:30:25,600 --> 00:30:27,300
things line up I guess.

624
00:30:41,500 --> 00:30:46,500
So I guess that's I don't know why we're checking that particular one,

625
00:30:46,500 --> 00:30:50,700
I guess, just so we can unique have an idea of what the uniqueness is

626
00:30:50,700 --> 00:30:51,200
of this.

627
00:30:51,500 --> 00:30:55,600
So we probably could just use the name, right?

628
00:30:55,600 --> 00:30:59,800
So we could just say that these two names would have to be the same,

629
00:30:59,900 --> 00:31:00,200
right?

630
00:31:00,200 --> 00:31:01,700
If we wanted to do that.

631
00:31:08,700 --> 00:31:11,100
At least that seems like the most logical thing.

632
00:31:12,200 --> 00:31:14,300
On the scope to record front, right?

633
00:31:14,400 --> 00:31:18,000
Because the name is now a unique string that we can use to identify.

634
00:31:18,700 --> 00:31:22,000
If not that the string is unique is the pointer is unique, right?

635
00:31:22,700 --> 00:31:26,000
So we can just actually use that to determine look what the scope to

636
00:31:26,000 --> 00:31:26,400
record is.

637
00:31:26,400 --> 00:31:30,500
So I'm pretty sure you could just do the scope to record.

638
00:31:31,200 --> 00:31:33,300
Is actually just a caressed are, right?

639
00:31:34,700 --> 00:31:41,800
And so in here we would say is the matching block parent we could say.

640
00:31:42,300 --> 00:31:46,100
I guess we don't know if it's actually true.

641
00:31:46,100 --> 00:31:49,100
So I should say, if the matching block parent

642
00:31:53,000 --> 00:31:54,900
I need to get the name from and I just need to.

643
00:31:54,900 --> 00:32:00,800
I just need some way of saying that you know the name equals 0 or I

644
00:32:00,800 --> 00:32:06,400
should say the match name equals zero and if the match name sorry it's

645
00:32:06,400 --> 00:32:08,000
a matching block parent.

646
00:32:08,900 --> 00:32:12,800
You know, is valid then it's going to be the matching block parent

647
00:32:12,800 --> 00:32:18,100
name, right or whatever but otherwise or event name, whatever it is

648
00:32:18,100 --> 00:32:20,200
that's going to be otherwise is going to be 0.

649
00:32:20,700 --> 00:32:21,300
Right?

650
00:32:21,400 --> 00:32:24,100
And that's the name that I want to check against here.

651
00:32:26,000 --> 00:32:26,700
Right?

652
00:32:26,900 --> 00:32:27,900
So that's tough.

653
00:32:27,900 --> 00:32:30,100
The debug open block stuff, right?

654
00:32:30,800 --> 00:32:36,400
Where we're talking about the the thing to match.

655
00:32:36,400 --> 00:32:40,000
So this is an open d block, and we're talking about the parent there

656
00:32:40,400 --> 00:32:42,500
that opened above apparent in here.

657
00:32:42,500 --> 00:32:43,500
We used to be looking at this.

658
00:32:43,500 --> 00:32:46,500
We're now would be we looking at like the opening event.

659
00:32:47,100 --> 00:32:49,700
And we be talking about that its name.

660
00:32:51,900 --> 00:32:52,400
Right.

661
00:32:53,900 --> 00:32:56,300
So yeah, something like that.

662
00:32:59,100 --> 00:32:59,800
Okay, so

663
00:33:00,000 --> 00:33:06,000
We don't care about any of this, that goes away, we don't need.

664
00:33:06,500 --> 00:33:07,600
That would be block name.

665
00:33:10,200 --> 00:33:12,400
We don't need to record these guys anymore.

666
00:33:12,400 --> 00:33:13,700
That's not relevant.

667
00:33:13,700 --> 00:33:15,400
Like, we don't need that record Source.

668
00:33:15,700 --> 00:33:19,500
We do probably want a typical event though, so this region probably

669
00:33:19,500 --> 00:33:21,700
does want an event to go with.

670
00:33:21,700 --> 00:33:23,000
It would be my guest, right?

671
00:33:23,000 --> 00:33:25,000
That seems like a thing.

672
00:33:25,000 --> 00:33:25,900
We would want to do.

673
00:33:26,800 --> 00:33:31,600
So in these, like, debug regions where ever they ended up, let's see

674
00:33:31,600 --> 00:33:32,300
region.

675
00:33:32,500 --> 00:33:33,000
Yeah.

676
00:33:33,600 --> 00:33:36,500
So, when we're paying pointing to the debug record here, this is

677
00:33:36,500 --> 00:33:39,800
something where we would want to maybe capture out some information.

678
00:33:40,100 --> 00:33:44,000
Now when we talk about the region, those like we talked about copying

679
00:33:44,000 --> 00:33:44,800
these things out.

680
00:33:44,800 --> 00:33:47,300
I don't know if we want to copy the whole thing out or not like we

681
00:33:47,300 --> 00:33:49,200
could just point to a debug event.

682
00:33:49,900 --> 00:33:52,900
It depends if we want to store them as we're kind of doing the

683
00:33:52,900 --> 00:33:56,400
round-robin thing so I could put it to do here that says, like do we

684
00:33:56,400 --> 00:33:59,400
want to copy these out in there?

685
00:33:59,700 --> 00:34:02,000
You know, entirety or not?

686
00:34:02,000 --> 00:34:06,600
And I don't know but I'm just going to store the event here like so.

687
00:34:10,800 --> 00:34:12,699
Although I probably should be the opening event.

688
00:34:17,199 --> 00:34:18,100
That'd be my guess.

689
00:34:26,000 --> 00:34:26,300
Yeah.

690
00:34:27,100 --> 00:34:31,400
So let's see just getting rid of some more of these things here.

691
00:34:31,400 --> 00:34:35,800
So the region this is actually going to be debug event and this would

692
00:34:35,800 --> 00:34:37,500
just be region event, right?

693
00:34:37,500 --> 00:34:38,800
And all that stuff will still work.

694
00:34:39,900 --> 00:34:41,400
Debug record index?

695
00:34:42,199 --> 00:34:48,400
Yeah, that's not something we know anymore so I don't really know what

696
00:34:48,400 --> 00:34:49,800
we want to do there.

697
00:34:50,500 --> 00:34:53,400
Obviously, we could do something where we're just like, okay, the

698
00:34:53,400 --> 00:34:56,900
color index is you know, whatever the pointer is or something like

699
00:34:56,900 --> 00:34:57,300
this.

700
00:34:59,900 --> 00:35:03,600
There's really no, particularly great way to take a look at that, but

701
00:35:03,600 --> 00:35:04,400
I guess we could say.

702
00:35:04,400 --> 00:35:09,300
Yeah, the opening event block named just converted to you.

703
00:35:09,300 --> 00:35:09,500
It's

704
00:35:09,600 --> 00:35:12,100
Dean is going to be the color for now because we just wanted a stable

705
00:35:12,100 --> 00:35:15,300
value for color, basically, something we could use to look stuff up.

706
00:35:15,900 --> 00:35:19,600
So sources are gone so it's going to get rid of them, they're not

707
00:35:19,600 --> 00:35:22,800
relevant all the stuff that was coming from them is now coming from

708
00:35:22,800 --> 00:35:24,000
the event type, right?

709
00:35:25,100 --> 00:35:30,200
And so let's take a look here at debug State scope to record scope.

710
00:35:30,200 --> 00:35:34,500
To record is just going to be what what is the what is the hot record?

711
00:35:35,300 --> 00:35:37,500
What is the hot record?

712
00:35:37,500 --> 00:35:38,800
It's a debug record.

713
00:35:39,100 --> 00:35:39,500
So I

714
00:35:39,600 --> 00:35:41,600
Don't really want a hot record anymore.

715
00:35:41,900 --> 00:35:44,700
What I really want is a hot event, right?

716
00:35:44,800 --> 00:35:50,000
And so wherever hot record is happening which apparently it never gets

717
00:35:50,000 --> 00:35:51,600
set in here, but that's okay.

718
00:35:52,600 --> 00:35:55,700
Then, you know, whatever the hot event is we would set that it to the

719
00:35:55,700 --> 00:35:59,400
hot event block named there that would work.

720
00:36:00,600 --> 00:36:06,300
For our purposes and event but it doesn't look like that.

721
00:36:06,300 --> 00:36:10,000
Ever actually gets set at the moment for all I can tell.

722
00:36:10,800 --> 00:36:12,100
So record counts again.

723
00:36:12,100 --> 00:36:14,400
Don't care about these at all.

724
00:36:14,900 --> 00:36:20,400
So now I believe this stuff doesn't have to happen anymore, which is

725
00:36:20,400 --> 00:36:24,500
pretty great because it was a bunch of janky code that I don't want to

726
00:36:24,500 --> 00:36:25,000
deal with.

727
00:36:25,800 --> 00:36:26,400
All right.

728
00:36:26,600 --> 00:36:30,000
So now in theory again, we're kind of getting

729
00:36:30,400 --> 00:36:32,200
A lot closer to what we want to do here.

730
00:36:32,700 --> 00:36:33,900
I feel like

731
00:36:36,800 --> 00:36:38,700
some degree though.

732
00:36:39,900 --> 00:36:46,300
I do feel like we have a few things that are not still, not totally

733
00:36:46,300 --> 00:36:48,400
ideal in how this is working.

734
00:36:49,300 --> 00:36:52,700
First of all, we made a bunch of concessions to that stuff that I feel

735
00:36:52,700 --> 00:36:55,600
like we can maybe get rid of now, right?

736
00:36:56,200 --> 00:37:00,100
So, let's continue the cleanup because, man, I like cleaning up code.

737
00:37:00,900 --> 00:37:03,800
Let's get rid of translation unit index, because I'm pretty sure we

738
00:37:03,800 --> 00:37:05,800
don't need translation you next time anymore.

739
00:37:06,500 --> 00:37:07,100
It's gone.

740
00:37:10,100 --> 00:37:12,300
So translation unit index.

741
00:37:18,100 --> 00:37:19,100
and,

742
00:37:22,500 --> 00:37:23,400
That's all good.

743
00:37:23,400 --> 00:37:23,700
Right.

744
00:37:23,700 --> 00:37:25,000
So we don't need that anymore.

745
00:37:26,100 --> 00:37:28,800
And now we also could potentially get rid of some of this other stuff

746
00:37:28,800 --> 00:37:31,000
here in interface.

747
00:37:31,100 --> 00:37:31,600
See.

748
00:37:32,500 --> 00:37:35,600
So we just don't need debug records.

749
00:37:35,600 --> 00:37:36,700
Be, they're gone.

750
00:37:37,100 --> 00:37:38,900
So, anything that was referring to those before.

751
00:37:38,900 --> 00:37:40,000
Could can go away.

752
00:37:40,500 --> 00:37:42,300
Don't know how we got get controller.

753
00:37:42,300 --> 00:37:47,800
This this I cut I cut and paste it a little bit too far there and made

754
00:37:47,900 --> 00:37:48,400
debug.

755
00:37:51,900 --> 00:37:54,400
Debug table game, get controller.

756
00:37:54,500 --> 00:37:56,800
There we go, so cat controller.

757
00:37:56,800 --> 00:37:58,600
I think should not be there.

758
00:37:58,600 --> 00:38:01,200
That was a bad place to put that.

759
00:38:01,200 --> 00:38:03,200
That should be where game input.

760
00:38:03,200 --> 00:38:06,300
Is that should be like here, right?

761
00:38:07,100 --> 00:38:12,800
Okay, so anyway, so continuing to move forward here.

762
00:38:14,500 --> 00:38:18,800
I'm trying to see what else I might want to do with what we're doing.

763
00:38:18,800 --> 00:38:21,500
I don't know why we have the concept of a thread ID corinda

764
00:38:22,600 --> 00:38:27,300
Is that just because we wanted the platform code to be able to fill

765
00:38:27,300 --> 00:38:32,100
that out as a unit, it doesn't look like it, right?

766
00:38:34,300 --> 00:38:36,700
So why do we have a thread ID core index?

767
00:38:36,700 --> 00:38:37,200
That's why.

768
00:38:37,200 --> 00:38:38,200
Does that, is it?

769
00:38:38,200 --> 00:38:39,200
Why is that a thing?

770
00:38:39,400 --> 00:38:40,800
Does anyone know why that's a thing?

771
00:38:41,000 --> 00:38:43,200
Like, is there a reason that we don't just do that?

772
00:38:43,900 --> 00:38:44,800
Does anyone know

773
00:38:46,100 --> 00:38:50,200
I am going to do the only way I ever know how to figure that out and

774
00:38:50,200 --> 00:38:51,900
that's to just do it, right?

775
00:38:52,000 --> 00:38:53,100
Why do we have that?

776
00:38:53,500 --> 00:38:54,500
I have no idea.

777
00:39:03,600 --> 00:39:06,700
Sure doesn't look like a very good reason to me, right?

778
00:39:07,200 --> 00:39:11,100
So, that all looks pretty good against Al is working nicely there.

779
00:39:11,100 --> 00:39:12,700
And I am pretty happy with that.

780
00:39:12,700 --> 00:39:13,600
I think that's good.

781
00:39:14,700 --> 00:39:16,000
So we're getting there again.

782
00:39:16,000 --> 00:39:18,600
Continuing down sort of that road.

783
00:39:19,100 --> 00:39:21,300
So we got translation units.

784
00:39:21,300 --> 00:39:24,000
I'm just going to go ahead and grab for translation because I feel

785
00:39:24,000 --> 00:39:26,700
like anywhere that we were doing something with a translation unit now

786
00:39:26,700 --> 00:39:28,900
we should stop doing them right.

787
00:39:29,700 --> 00:39:33,200
And hey there's a to do and just go standard one time hash table.

788
00:39:33,400 --> 00:39:35,100
Complexity seems to be causing problems.

789
00:39:35,100 --> 00:39:35,700
That is true.

790
00:39:35,700 --> 00:39:37,300
It is right.

791
00:39:38,800 --> 00:39:40,200
And so I think

792
00:39:42,000 --> 00:39:48,000
I think this is starting to look a lot better to me.

793
00:39:49,100 --> 00:39:52,400
I would say I'm going to take a look at handmade optimized.

794
00:39:53,400 --> 00:40:00,300
Oops, and made optimized wanted to make sure that nothing in here was

795
00:40:00,300 --> 00:40:01,100
doing anything.

796
00:40:01,100 --> 00:40:03,400
Yeah, so this nonsense can go away.

797
00:40:05,300 --> 00:40:09,100
That's just, you know, not necessary anymore in here.

798
00:40:09,100 --> 00:40:11,000
I believe we got some more nonsense.

799
00:40:11,700 --> 00:40:12,600
It's happening there.

800
00:40:13,600 --> 00:40:14,100
Let's see.

801
00:40:14,100 --> 00:40:17,100
I'm just going to look and see if I can find anything that was

802
00:40:17,100 --> 00:40:18,300
nonsensical there.

803
00:40:19,300 --> 00:40:22,500
So there we go, debug records main count.

804
00:40:22,500 --> 00:40:25,200
So this this is also nonsense, right?

805
00:40:25,600 --> 00:40:26,900
Not necessary at all.

806
00:40:28,000 --> 00:40:30,200
So, I think that's good.

807
00:40:30,800 --> 00:40:33,400
Think that's all fine.

808
00:40:35,000 --> 00:40:38,600
Okay, so again, we got that out of there and that feels really good

809
00:40:38,600 --> 00:40:41,100
because that was just kind of annoying code and just not really that

810
00:40:41,100 --> 00:40:41,600
necessary.

811
00:40:41,600 --> 00:40:46,000
As you saw we were able to pull it out for really not really very much

812
00:40:46,000 --> 00:40:46,500
cost.

813
00:40:47,000 --> 00:40:50,000
So if you take a look at what's going on in here, I feel like we could

814
00:40:50,000 --> 00:40:53,200
probably like I said pack or simplify this a little bit more

815
00:40:53,700 --> 00:40:54,900
unfortunately at the moment.

816
00:40:54,900 --> 00:40:57,700
Like it's like I'm not even sure it's really super worth doing it that

817
00:40:57,700 --> 00:41:00,700
way but it's clear that we don't really need.

818
00:41:01,700 --> 00:41:04,600
You know, if you look at this we've got to

819
00:41:04,900 --> 00:41:05,200
To.

820
00:41:05,200 --> 00:41:12,900
We've got 64, 64, 64, 32 32, and then an eight, you know, one bite,

821
00:41:13,100 --> 00:41:13,700
right?

822
00:41:14,800 --> 00:41:16,300
Which is not, you know.

823
00:41:20,900 --> 00:41:22,100
Not really what we want.

824
00:41:23,300 --> 00:41:25,800
to say the least, but

825
00:41:26,900 --> 00:41:29,000
that's just how that goes now.

826
00:41:30,400 --> 00:41:34,800
When we have the file name, block named thing here really the file

827
00:41:34,800 --> 00:41:35,000
name.

828
00:41:35,000 --> 00:41:41,200
Block name is, is kind of a probably a semi redundant that like we

829
00:41:41,200 --> 00:41:45,200
could use just one pointer to store these two pretty trivially right

830
00:41:46,000 --> 00:41:48,800
by just like concatenating them together or something like that.

831
00:41:48,900 --> 00:41:51,900
So, if we wanted to reduce the size of debug event, we could also do

832
00:41:51,900 --> 00:41:54,700
something like make this file like how file named in an alternator

833
00:41:54,700 --> 00:41:56,300
than blocked in the null Terminator.

834
00:41:57,600 --> 00:41:59,600
And I don't know if that would be reasonable or not, but I'm going to

835
00:41:59,600 --> 00:41:59,800
just

836
00:42:00,000 --> 00:42:00,500
You there.

837
00:42:01,100 --> 00:42:01,600
Nope.

838
00:42:01,800 --> 00:42:08,900
You know, to save space, we could put these two strings back-to-back

839
00:42:09,500 --> 00:42:13,100
with a null Terminator in the middle, right?

840
00:42:15,700 --> 00:42:16,200
All right.

841
00:42:18,300 --> 00:42:24,900
Okay, so now we can go back in here where we were doing collate, debug

842
00:42:24,900 --> 00:42:29,600
records and or Kool-Aid, Group whatever, blah, blah blah previously.

843
00:42:29,600 --> 00:42:33,400
I got rid of this name situation here but now if I want to I can

844
00:42:33,400 --> 00:42:35,600
totally add it back in, right?

845
00:42:35,700 --> 00:42:37,000
If I want to do that.

846
00:42:38,800 --> 00:42:42,900
And now we won't have nulls in that location anymore like you can see.

847
00:42:42,900 --> 00:42:46,700
Now we've got hot entity again which is kind of what I had wanted it

848
00:42:46,700 --> 00:42:47,300
to say.

849
00:42:48,600 --> 00:42:50,400
So that's one way of doing that.

850
00:42:51,100 --> 00:42:53,600
But the other way, the other thing to there is that, you know, we

851
00:42:53,600 --> 00:42:56,000
probably could do, we probably could have made it so that you don't

852
00:42:56,000 --> 00:42:58,000
have to have a custom name for that the event.

853
00:42:58,000 --> 00:43:02,300
For that open block, probably could have been the actual open block

854
00:43:02,300 --> 00:43:05,100
itself and that seems a little bit more enticing to me.

855
00:43:05,400 --> 00:43:06,700
We've got this begin data block thing.

856
00:43:06,700 --> 00:43:08,500
Here, there is the word hot entity.

857
00:43:08,700 --> 00:43:11,200
Why am I copying the string again, right?

858
00:43:11,600 --> 00:43:15,200
If you take a look at when I do that group create right?

859
00:43:15,400 --> 00:43:17,600
So in, in open in this

860
00:43:17,700 --> 00:43:18,700
Walk thing, right?

861
00:43:19,200 --> 00:43:22,600
Not that one in this video, I think what I'm opening this.

862
00:43:22,600 --> 00:43:24,800
Debug block right here is all the stuff I'm doing.

863
00:43:25,100 --> 00:43:28,000
Why, don't, look why am I creating another VAR?

864
00:43:28,000 --> 00:43:30,000
When there's already a VAR there, right?

865
00:43:30,100 --> 00:43:33,800
This is just a holdover kind of from the fact that we needed a

866
00:43:34,500 --> 00:43:35,700
variable when we didn't have them.

867
00:43:35,700 --> 00:43:37,300
But now it's very was an adventure.

868
00:43:37,300 --> 00:43:40,800
The same thing we can just get rid of that entire concept, right?

869
00:43:40,800 --> 00:43:44,500
That can just go away because this vark here that was being passed.

870
00:43:44,500 --> 00:43:46,400
We can just pass the actual one.

871
00:43:46,400 --> 00:43:47,500
We're actually on.

872
00:43:47,900 --> 00:43:48,400
Right.

873
00:43:48,400 --> 00:43:52,000
So we can just do that and now we don't have to allocate one of those

874
00:43:52,000 --> 00:43:52,800
strings ever.

875
00:43:53,000 --> 00:43:55,200
That doesn't ever actually occur, right?

876
00:43:55,200 --> 00:43:56,700
That's not a thing we're ever going to see.

877
00:43:58,100 --> 00:43:58,600
Whatever.

878
00:44:00,000 --> 00:44:01,900
So that it's kind of nice as well.

879
00:44:01,900 --> 00:44:06,100
So when we do that, you know, we're in good shape.

880
00:44:06,100 --> 00:44:08,800
The other thing that's kind of interesting here is if I take a look at

881
00:44:08,800 --> 00:44:13,100
this, we do a collate, create grouped variable now and we copy the

882
00:44:13,100 --> 00:44:14,200
event on to it.

883
00:44:14,300 --> 00:44:16,300
Well, that's just totally stupid.

884
00:44:16,400 --> 00:44:19,800
Why are we allocating another one of these when we already have the

885
00:44:19,800 --> 00:44:23,500
one that has all the stuff in it that we actually wanted, right?

886
00:44:23,600 --> 00:44:26,900
So instead of collate create group variable.

887
00:44:29,100 --> 00:44:33,900
Really all we need to do is do this, that's it, right?

888
00:44:34,000 --> 00:44:37,900
I mean that's that's all we actually needed to do was to take whatever

889
00:44:37,900 --> 00:44:39,600
the debug event was that came in.

890
00:44:39,800 --> 00:44:43,100
We just need to have that to whatever the block group is, right?

891
00:44:43,300 --> 00:44:46,300
And the Block in this case is thread first, open data block.

892
00:44:46,400 --> 00:44:49,100
So it's really just that that's the entirety of what we were actually

893
00:44:49,100 --> 00:44:49,600
doing.

894
00:44:50,400 --> 00:44:52,200
The whole thing, right?

895
00:44:52,600 --> 00:44:53,200
That's it.

896
00:44:56,100 --> 00:44:56,700
Make sense.

897
00:44:58,600 --> 00:44:59,900
So now, you know, in theory,

898
00:45:00,300 --> 00:45:00,700
R.

899
00:45:04,800 --> 00:45:06,500
Of course, that didn't go as planned.

900
00:45:07,300 --> 00:45:09,600
That was not what I wanted to have happen.

901
00:45:10,400 --> 00:45:14,300
Oh, and that's of course, because now, we have this actual group that

902
00:45:14,300 --> 00:45:17,600
were adding here is not labeled of our group, right?

903
00:45:18,800 --> 00:45:22,300
It's labeled an open data block right, but that's just because of the

904
00:45:22,300 --> 00:45:26,100
holdover of the concept that an that an open data block and of our

905
00:45:26,100 --> 00:45:29,900
group or different things, but they're not different things anymore.

906
00:45:29,900 --> 00:45:31,300
Not for us, right there.

907
00:45:31,300 --> 00:45:33,000
Now, the same thing, right?

908
00:45:33,000 --> 00:45:34,400
This VAR group is actually

909
00:45:34,500 --> 00:45:35,700
That open data block.

910
00:45:35,700 --> 00:45:36,600
That's all it is.

911
00:45:36,900 --> 00:45:39,900
So we could say that we just get rid of that VAR group concept

912
00:45:39,900 --> 00:45:43,100
entirely, and every place we were doing that, we could just call it an

913
00:45:43,100 --> 00:45:43,500
open data.

914
00:45:43,500 --> 00:45:45,600
Block, we probably be fine, right?

915
00:45:49,600 --> 00:45:51,600
oops, gotta actually

916
00:45:53,800 --> 00:45:54,800
we run the program.

917
00:45:58,100 --> 00:45:59,200
Not quite.

918
00:46:01,500 --> 00:46:03,000
End block.

919
00:46:04,500 --> 00:46:07,100
And why is an envelope being added?

920
00:46:07,100 --> 00:46:07,900
Did I?

921
00:46:08,500 --> 00:46:13,800
Oh, did I do what I did just moments ago?

922
00:46:13,800 --> 00:46:15,600
Did I do it again?

923
00:46:17,300 --> 00:46:18,700
Let me see if I did it again.

924
00:46:26,800 --> 00:46:28,600
Where are you?

925
00:46:31,700 --> 00:46:34,400
Okay, so, what did I do here?

926
00:46:34,400 --> 00:46:38,900
So we do open data block, why is closed data block getting pushed on

927
00:46:38,900 --> 00:46:39,300
there?

928
00:46:40,400 --> 00:46:43,700
That doesn't make much sense to me, says closed data block, is here

929
00:46:43,700 --> 00:46:45,000
that never gets pushed.

930
00:46:45,200 --> 00:46:48,300
So, why would that be an open data block?

931
00:46:48,500 --> 00:46:50,000
Why would we ever?

932
00:46:50,400 --> 00:46:53,100
Why would that have caused that to occur?

933
00:46:58,000 --> 00:46:58,700
Hmm.

934
00:47:00,900 --> 00:47:07,400
hmm, I say I would like to know why I'm going to find out why by using

935
00:47:07,600 --> 00:47:08,600
the debugger

936
00:47:10,400 --> 00:47:11,600
Always good to use the bugger.

937
00:47:12,300 --> 00:47:14,000
All right, so let's see.

938
00:47:14,000 --> 00:47:18,700
Oh yeah that's not that's not what it.

939
00:47:18,800 --> 00:47:20,700
Yeah, my bad.

940
00:47:23,400 --> 00:47:26,900
Open data block, debug type.

941
00:47:27,100 --> 00:47:29,300
Open code block.

942
00:47:30,900 --> 00:47:33,300
Convert type open block.

943
00:47:37,700 --> 00:47:38,600
Is undefined.

944
00:47:39,000 --> 00:47:40,800
What is the actual one?

945
00:47:40,800 --> 00:47:41,800
We're looking at here?

946
00:47:42,500 --> 00:47:44,100
I got confused.

947
00:47:44,100 --> 00:47:46,900
It was by the fact that I had typed in the wrong thing into the watch

948
00:47:46,900 --> 00:47:47,300
window.

949
00:47:47,800 --> 00:47:52,900
So the event type is one and that in here would mean that it's a begin

950
00:47:52,900 --> 00:47:53,500
block.

951
00:47:54,200 --> 00:47:56,200
So I'm not sure how a begin block.

952
00:47:56,600 --> 00:47:57,800
Got pushed on there.

953
00:48:00,000 --> 00:48:01,000
The begin block.

954
00:48:01,100 --> 00:48:01,600
Ah,

955
00:48:05,600 --> 00:48:07,700
well no, I still don't know how that would get pushed on there.

956
00:48:08,000 --> 00:48:11,400
How does that get pushed on there that's not ever getting added?

957
00:48:11,700 --> 00:48:13,500
So there's that begin block end block.

958
00:48:13,500 --> 00:48:15,100
How does it, how do you get a Depot type of you?

959
00:48:15,100 --> 00:48:16,800
Look, how does that ever get in here?

960
00:48:17,700 --> 00:48:18,700
I don't understand.

961
00:48:19,500 --> 00:48:22,200
I don't understand why is it happening?

962
00:48:22,400 --> 00:48:25,600
Why why why

963
00:48:36,300 --> 00:48:38,300
Very, very suspicious.

964
00:48:39,500 --> 00:48:41,200
Very suspicious to me.

965
00:48:42,100 --> 00:48:44,600
Well, first of all, I'm gonna get rid of this because we don't

966
00:48:44,600 --> 00:48:45,600
actually need that anymore.

967
00:48:48,400 --> 00:48:49,100
And let's see.

968
00:48:49,200 --> 00:48:52,100
Cool, they crave real group and adverbial group these are happening.

969
00:48:52,400 --> 00:48:54,100
I'm gonna do a little assertion here.

970
00:48:54,400 --> 00:48:56,200
I'm going to say, I want to assert that.

971
00:48:56,200 --> 00:49:03,200
The Link Event type is not equal to debug type open block or begin

972
00:49:03,200 --> 00:49:03,700
block.

973
00:49:16,900 --> 00:49:20,400
So it's not getting added there.

974
00:49:22,800 --> 00:49:25,500
Who is actually calling me debug Drive menu.

975
00:49:26,500 --> 00:49:28,700
Yeah, you're just going to call me with that.

976
00:49:28,700 --> 00:49:30,900
Are you just gonna go ahead and call me?

977
00:49:30,900 --> 00:49:32,700
Where are we in the hierarchy here?

978
00:49:33,000 --> 00:49:34,200
What's our stacked look like?

979
00:49:36,200 --> 00:49:39,400
And what's ours actually, I should say what's the stack depth as well.

980
00:49:41,700 --> 00:49:42,900
Sacked at this one.

981
00:49:48,700 --> 00:49:49,700
Let's see here.

982
00:49:51,700 --> 00:49:52,500
Event.

983
00:49:53,300 --> 00:49:56,000
That's actually the Sentinel probably, well know.

984
00:49:57,800 --> 00:49:58,500
Let's see here.

985
00:50:01,300 --> 00:50:02,000
Here to Raider.

986
00:50:08,300 --> 00:50:08,900
Link.

987
00:50:10,300 --> 00:50:11,700
So, our event.

988
00:50:13,000 --> 00:50:14,500
Get rid of interface p.

989
00:50:16,100 --> 00:50:19,900
That's this open block for get render entity basis P.

990
00:50:20,600 --> 00:50:22,800
That definitely should never have been added.

991
00:50:24,800 --> 00:50:25,500
Right?

992
00:50:25,700 --> 00:50:28,300
I mean that should never be added to the.

993
00:50:29,100 --> 00:50:31,000
That should never been added to a data group.

994
00:50:31,800 --> 00:50:33,500
So that's really strange to me.

995
00:50:34,700 --> 00:50:35,800
How did it get in there?

996
00:50:37,200 --> 00:50:38,300
I don't understand.

997
00:50:40,000 --> 00:50:43,500
Add variable to group should be the only way that that actually

998
00:50:43,500 --> 00:50:44,800
happens, right?

999
00:50:45,400 --> 00:50:49,500
And when that is called, I'm asserting that it's never begin data,

1000
00:50:49,500 --> 00:50:52,700
block type, so that's pretty strange.

1001
00:50:52,900 --> 00:50:54,600
I guess it could be the case.

1002
00:50:56,800 --> 00:50:57,400
That.

1003
00:50:59,300 --> 00:50:59,700
Well, no.

1004
00:50:59,700 --> 00:50:59,900
Because

1005
00:51:00,000 --> 00:51:02,800
When those events are wiped out I guess it could be the case that as

1006
00:51:02,800 --> 00:51:07,200
those events are getting written, am I am I not properly.

1007
00:51:07,300 --> 00:51:11,700
Every time we spin around, am I not properly synchronizing the

1008
00:51:11,700 --> 00:51:15,200
flushing of these two things?

1009
00:51:18,400 --> 00:51:19,500
That could actually be.

1010
00:51:24,200 --> 00:51:28,000
That actually seems like something that's probably true, right?

1011
00:51:29,100 --> 00:51:30,600
I could see that being the case.

1012
00:51:31,200 --> 00:51:35,900
Meaning, if I'm currently you know this the sort of one thing that we

1013
00:51:35,900 --> 00:51:36,900
have not addressed yet.

1014
00:51:36,900 --> 00:51:40,200
In our hack Enos is this sort of situation where we're doing the like

1015
00:51:40,200 --> 00:51:41,800
frame count, you know greater than cool.

1016
00:51:41,800 --> 00:51:42,100
Whatever.

1017
00:51:42,100 --> 00:51:44,200
And then we like do the restart collation thing.

1018
00:51:46,900 --> 00:51:51,400
You know that part if I was to do we start collation on every frame?

1019
00:51:51,400 --> 00:51:56,400
I'd be interested to see if that actually change things, right?

1020
00:51:56,900 --> 00:52:01,000
Meaning if I did something where we just did this, for example and we

1021
00:52:01,000 --> 00:52:03,500
collate every time, does that prevent the problem.

1022
00:52:03,500 --> 00:52:03,900
Yeah.

1023
00:52:04,100 --> 00:52:08,000
So that was just an overriding problem was what was happening there.

1024
00:52:09,400 --> 00:52:10,000
So yeah.

1025
00:52:10,400 --> 00:52:13,100
So that's problematic and of course we will.

1026
00:52:13,600 --> 00:52:16,200
Yeah, we'll get to fixing that part.

1027
00:52:16,900 --> 00:52:21,200
In maybe even tomorrow we're getting, we're getting down to it.

1028
00:52:23,300 --> 00:52:24,400
Try to get in good shape here.

1029
00:52:25,600 --> 00:52:27,800
All right, so now at least I know what the bug is.

1030
00:52:27,800 --> 00:52:28,500
Let's do this.

1031
00:52:30,400 --> 00:52:41,000
To do need to unify the display cash or the collation paging out with

1032
00:52:41,000 --> 00:52:48,400
the vents paging out now that they are the same thing, okay?

1033
00:52:50,800 --> 00:52:52,700
All right, so let's go ahead and go to the Q and A in case.

1034
00:52:52,700 --> 00:52:54,800
Anyone has any questions about what we were doing here?

1035
00:53:52,600 --> 00:53:55,600
Not much in the way of questions today.

1036
00:53:55,600 --> 00:53:56,200
Looks like

1037
00:54:00,100 --> 00:54:03,100
H WD 2 are 0.

1038
00:54:03,800 --> 00:54:05,600
Will you get back to game of the Dakota next week?

1039
00:54:05,700 --> 00:54:06,700
I have no idea.

1040
00:54:06,700 --> 00:54:07,300
Probably not.

1041
00:54:07,300 --> 00:54:08,900
No, I wouldn't expect.

1042
00:54:08,900 --> 00:54:09,100
So,

1043
00:54:35,300 --> 00:54:37,500
do you ever wear the piggy hat at work?

1044
00:54:37,800 --> 00:54:40,700
Know it kind of just sits here on the desk for handmade hero.

1045
00:54:57,400 --> 00:54:57,900
K.

1046
00:54:57,900 --> 00:55:00,700
What would be the thing that would impress you on a programmers

1047
00:55:00,700 --> 00:55:01,400
resume?

1048
00:55:02,300 --> 00:55:02,500
I don't know.

1049
00:55:02,500 --> 00:55:04,200
I don't read resumes much.

1050
00:55:05,100 --> 00:55:08,400
I think I like what I would, I like watching people stream their

1051
00:55:08,400 --> 00:55:09,000
programming.

1052
00:55:09,000 --> 00:55:11,900
I can usually tell based on watching that if they're good or not, you

1053
00:55:11,900 --> 00:55:15,400
know, so I probably would want to see a twitch stream and I'd want to

1054
00:55:15,400 --> 00:55:17,100
see how you program on Twitch stream.

1055
00:55:18,000 --> 00:55:21,400
I'd like to see like, you know, 5:00 at which streamed programming,

1056
00:55:21,400 --> 00:55:24,000
that I can just go browse through and see what I think of your coding.

1057
00:55:24,900 --> 00:55:25,300
You know.

1058
00:55:33,300 --> 00:55:36,600
Bit off topic but when will you do the OD e stuff?

1059
00:55:36,700 --> 00:55:38,600
You mean the ordinary differential equation?

1060
00:55:38,600 --> 00:55:42,700
You mean just for drag I think there is only one place that we had OD

1061
00:55:42,700 --> 00:55:47,400
e a need for an OD e so far, which is just, which is basically for

1062
00:55:47,400 --> 00:55:48,500
drag, right?

1063
00:55:51,800 --> 00:55:54,100
it's usually just it, you know, you

1064
00:55:57,300 --> 00:56:00,400
You need to phrase things in terms of e to the X for drag, right?

1065
00:56:00,400 --> 00:56:03,400
So so typically, well, are for any OD stuff.

1066
00:56:03,400 --> 00:56:06,500
So, all the OD stuff is is just

1067
00:56:09,400 --> 00:56:15,700
If you have something that's like you know, you've got F of t or

1068
00:56:15,700 --> 00:56:20,700
something equals e to the T, you know, this is like or there's

1069
00:56:20,700 --> 00:56:22,100
constant like the actual e.

1070
00:56:22,100 --> 00:56:23,600
Not I'm not making up the letter e.

1071
00:56:23,600 --> 00:56:27,500
I mean, the actual e0 in mathy, right?

1072
00:56:28,000 --> 00:56:32,400
Then the derivative of T and my math is so Rusty these days but you

1073
00:56:32,400 --> 00:56:37,100
know is related to its own self, right?

1074
00:56:37,100 --> 00:56:38,600
Meaning the function.

1075
00:56:39,000 --> 00:56:44,000
The ee2 a power, right?

1076
00:56:44,600 --> 00:56:48,600
When you take the derivative of it still retains the same form as it

1077
00:56:48,600 --> 00:56:50,400
had originally, right?

1078
00:56:53,300 --> 00:56:59,800
And so, when you have something like drag where you have, you

1079
00:57:00,000 --> 00:57:05,500
Eat a function, you have a function which has its own derivative in

1080
00:57:05,500 --> 00:57:06,200
the function.

1081
00:57:07,000 --> 00:57:12,300
You need to you know, you need to be able to use this sort of this

1082
00:57:12,300 --> 00:57:17,000
fact about E2 help you solve those equations.

1083
00:57:17,200 --> 00:57:20,900
So that's that's all the OD e stuff that we will do is the fact that

1084
00:57:21,000 --> 00:57:23,100
we have a thing where we've got okay.

1085
00:57:23,100 --> 00:57:29,800
F Prime of T, equals some constant times, F double Prime.

1086
00:57:30,000 --> 00:57:30,700
Of, I'm sorry.

1087
00:57:32,700 --> 00:57:34,400
F double Prime of T.

1088
00:57:34,600 --> 00:57:36,300
Equals some constant times?

1089
00:57:36,300 --> 00:57:37,900
F Prime of T, right?

1090
00:57:38,300 --> 00:57:41,700
We've got the acceleration, which is this term, right?

1091
00:57:41,700 --> 00:57:46,000
The second derivative equals some constant, which is basically the

1092
00:57:46,000 --> 00:57:47,700
drag constant, right?

1093
00:57:47,700 --> 00:57:49,700
In fact, let me just draw this out a little bit better for you.

1094
00:57:50,500 --> 00:57:55,500
So this is like the acceleration of the object, the drag coefficient

1095
00:57:56,900 --> 00:57:57,800
and the velocity.

1096
00:57:59,600 --> 00:58:00,100
Right?

1097
00:58:00,800 --> 00:58:05,800
And so if you want to compute this stabili where you're going to

1098
00:58:05,800 --> 00:58:10,900
compute, what F Prime, and if you want to be able to compute F of T

1099
00:58:11,100 --> 00:58:12,700
and F Prime of T, right?

1100
00:58:12,700 --> 00:58:16,300
If you want to compute these two from this equation, you have

1101
00:58:16,300 --> 00:58:17,200
different ways of doing it.

1102
00:58:17,200 --> 00:58:20,000
One is, you can numerically integrate it where you just like assume

1103
00:58:20,000 --> 00:58:21,400
some actual values for these things.

1104
00:58:21,400 --> 00:58:25,200
And and then just do it numerically, which is not accurate, right?

1105
00:58:25,200 --> 00:58:27,000
It's not going to be exact.

1106
00:58:27,300 --> 00:58:28,900
It's just an approximation to it.

1107
00:58:29,500 --> 00:58:34,400
Or what you can do is actually integrate this up by assuming that that

1108
00:58:34,400 --> 00:58:37,700
means that drag is a function of e because it appears that its own

1109
00:58:37,700 --> 00:58:38,200
derivative.

1110
00:58:38,200 --> 00:58:42,100
So you know that it actually is and drag is such a simple equation,

1111
00:58:43,600 --> 00:58:47,400
you know, that that's that ends up being possible, I hope that makes

1112
00:58:47,400 --> 00:58:48,000
some sense.

1113
00:58:51,300 --> 00:58:54,400
So that's all we that's really that, you know, if you're looking for a

1114
00:58:54,400 --> 00:59:01,300
real, you know, hardcore information on um, a knowing OD, he's

1115
00:59:01,300 --> 00:59:02,900
ordinary differential equations.

1116
00:59:03,900 --> 00:59:05,300
This is not really going to be.

1117
00:59:05,300 --> 00:59:07,400
It's there's not going to be much of it on handmade hero.

1118
00:59:07,400 --> 00:59:10,400
So you probably going to have to take some initiative ongoing learning

1119
00:59:10,400 --> 00:59:10,900
that yourself.

1120
00:59:10,900 --> 00:59:14,000
I'm not really an OD e person so it's like, you know, I'm not really

1121
00:59:14,000 --> 00:59:18,400
the person to give you a lot of information on that anyway, but yeah.

1122
00:59:22,500 --> 00:59:23,300
And yeah, sorry.

1123
00:59:26,000 --> 00:59:27,400
Will you send the stream is correct?

1124
00:59:27,400 --> 00:59:28,600
I wrote that poorly.

1125
00:59:28,600 --> 00:59:30,400
It's it's actually that

1126
00:59:32,700 --> 00:59:35,000
It's been a long time, like I say, my math is really rusty.

1127
00:59:35,200 --> 00:59:36,400
T is obviously the act.

1128
00:59:36,400 --> 00:59:39,300
The dependent variable is that that's actually what your Pat, you

1129
00:59:39,300 --> 00:59:39,400
know.

1130
00:59:39,400 --> 00:59:43,400
That's that's actually the varying variable that it's the variable.

1131
00:59:44,000 --> 00:59:48,000
So it's the constant that's in here that actually moves out, right?

1132
00:59:50,700 --> 00:59:54,400
So, yeah, and you can kind of see, you can see why drag is so easy to

1133
00:59:54,400 --> 00:59:57,100
if you look at these things because if I write this again, without the

1134
00:59:57,100 --> 00:59:58,600
scribbles, on top of it, right?

1135
01:00:01,100 --> 01:00:03,900
I'm going to use C for the constant instead since that's what I was

1136
01:00:03,900 --> 01:00:05,600
using over here for no apparent reason.

1137
01:00:09,300 --> 01:00:09,900
Right.

1138
01:00:10,400 --> 01:00:14,900
You can see that like this form here.

1139
01:00:15,100 --> 01:00:19,600
If you take E2, the some constant times, the dependent variable, if

1140
01:00:19,600 --> 01:00:22,800
you take us derivative you get this right, oops.

1141
01:00:26,900 --> 01:00:29,200
If you, if you have some, it looks like that.

1142
01:00:29,200 --> 01:00:31,700
And then you look at what this looks like, it's the exact same.

1143
01:00:31,700 --> 01:00:33,300
It's this equation down here.

1144
01:00:33,400 --> 01:00:35,000
Exactly, right.

1145
01:00:35,300 --> 01:00:38,200
So you would just replace if this is your coefficient of drag, you

1146
01:00:38,200 --> 01:00:41,300
could just imagine like, okay, I've got my, this is my actual

1147
01:00:41,300 --> 01:00:41,800
function.

1148
01:00:41,900 --> 01:00:44,900
So now I would know what these were right.

1149
01:00:47,700 --> 01:00:50,100
Yeah, like I said I'm the wrong one to teach it.

1150
01:00:50,600 --> 01:00:58,500
I you know I don't know pseudonym 73 here, I don't think today but

1151
01:00:58,500 --> 01:01:02,100
like you really want someone who's more into that side of Matt that

1152
01:01:02,100 --> 01:01:05,300
field than me to teach you OTE.

1153
01:01:05,300 --> 01:01:09,900
So I'll literally just do the bass like the most barest thing to get

1154
01:01:09,900 --> 01:01:10,700
the drug working.

1155
01:01:10,900 --> 01:01:14,500
And that's about all I that's about as far as I can take you.

1156
01:01:14,500 --> 01:01:16,400
Because I just don't, I just don't have the

1157
01:01:16,500 --> 01:01:18,300
Matisse to do a good job.

1158
01:01:33,000 --> 01:01:34,300
Let's see.

1159
01:01:36,900 --> 01:01:37,900
Next, I'd bring her ex.

1160
01:01:37,900 --> 01:01:40,100
I see a lot of branching in your code, aren't you?

1161
01:01:40,100 --> 01:01:43,400
Trashing the caches, and the branch predictor ever thinking about

1162
01:01:43,400 --> 01:01:44,900
running, a Chase through cash grind.

1163
01:01:45,600 --> 01:01:50,100
So first of all, I mean at the risk of stating the obvious

1164
01:01:52,200 --> 01:01:56,100
You know, branching is what makes a game a game, right?

1165
01:01:56,200 --> 01:01:58,200
Like branching is is

1166
01:02:00,500 --> 01:02:04,600
Branching is what creates the actual Behavior, right?

1167
01:02:05,900 --> 01:02:10,600
So you know, you really don't want to be thinking until your game is

1168
01:02:11,200 --> 01:02:14,100
running and does all the things you want to do.

1169
01:02:14,600 --> 01:02:17,600
You definitely don't want to be thinking about whether you're trashing

1170
01:02:17,600 --> 01:02:21,200
a branch predictor or whether the fact that you have branches going to

1171
01:02:21,200 --> 01:02:22,200
cause a cash problem.

1172
01:02:24,300 --> 01:02:30,100
First thing I would say is in general, the caches trashing, the

1173
01:02:30,300 --> 01:02:34,900
Hashes per se, I don't know that the kinds of branching we're doing

1174
01:02:34,900 --> 01:02:39,600
have all that money effect on the cash as they may have problems for

1175
01:02:39,600 --> 01:02:41,200
the cache itself.

1176
01:02:41,800 --> 01:02:42,900
That like the

1177
01:02:46,200 --> 01:02:50,000
sort of the short-term fact of like okay, you know, if the branch is

1178
01:02:50,000 --> 01:02:52,800
mispredicted, May load a little extra memory that it didn't have to

1179
01:02:52,800 --> 01:02:56,200
load or something like this but that's you know,

1180
01:02:57,500 --> 01:02:59,900
That's really not something that you're going to.

1181
01:03:00,000 --> 01:03:02,600
Thinking about 99% of the time, right?

1182
01:03:02,600 --> 01:03:07,100
That is such a small performance Thing by comparison to what you would

1183
01:03:07,100 --> 01:03:09,100
normally probably be dealing with.

1184
01:03:09,100 --> 01:03:13,000
Its, there's very limited types of code that we're going to be doing a

1185
01:03:13,000 --> 01:03:15,100
mirror where you're actually, whatever care about that.

1186
01:03:16,300 --> 01:03:20,400
So, really in terms of the branch predictor side of things, a, you

1187
01:03:20,400 --> 01:03:21,600
know, the branch predictor.

1188
01:03:24,800 --> 01:03:28,900
A is pretty good, but be the thing to remember is where we're doing.

1189
01:03:28,900 --> 01:03:33,400
The branching tends to be in places where the only alternative to

1190
01:03:33,400 --> 01:03:38,000
doing the branching would be for you to bundle these into arrays of

1191
01:03:38,000 --> 01:03:39,500
similar types, right?

1192
01:03:39,500 --> 01:03:41,800
And so you could process like all your three twos together or

1193
01:03:41,800 --> 01:03:42,500
something like that.

1194
01:03:42,600 --> 01:03:47,000
Like, that's not really an option, there's no option, there's nothing

1195
01:03:47,000 --> 01:03:48,900
you could do, right?

1196
01:03:50,800 --> 01:03:54,400
There's nothing you could do in your code that would prevent you from

1197
01:03:54,400 --> 01:03:55,100
having to go.

1198
01:03:55,100 --> 01:03:59,500
I've got a menu filled with things, their head erogenous, like is what

1199
01:03:59,500 --> 01:04:01,300
you're in here, what you're seeing in here, right?

1200
01:04:01,600 --> 01:04:04,600
There's no way you could really do anything that's going to prevent

1201
01:04:04,600 --> 01:04:05,900
some kind of an indirection.

1202
01:04:06,100 --> 01:04:09,600
You could do an indirect jump or you can do a branch but they're both

1203
01:04:10,000 --> 01:04:14,500
going to be something that's a dependent variable operation, right?

1204
01:04:15,100 --> 01:04:18,700
And so what's the alternative, like, what do you think you're going to

1205
01:04:18,700 --> 01:04:20,000
change this code to do?

1206
01:04:21,300 --> 01:04:22,500
To get rid of those branches.

1207
01:04:24,800 --> 01:04:25,300
Right.

1208
01:04:26,500 --> 01:04:27,900
There isn't something.

1209
01:04:28,800 --> 01:04:31,000
You're either going to have a switch statement or you're going to have

1210
01:04:31,000 --> 01:04:34,700
a function call through an indirect through a v table.

1211
01:04:36,000 --> 01:04:39,300
And both of those things are not predictable by the

1212
01:04:41,400 --> 01:04:46,000
By the compiler and certainly not by the processor until it actually

1213
01:04:46,000 --> 01:04:47,000
sees what the value is.

1214
01:04:47,000 --> 01:04:49,100
It's going to actually use, right?

1215
01:04:51,000 --> 01:04:51,400
so,

1216
01:05:16,400 --> 01:05:19,800
And you have been soaking up so much of the stream as a catch-up.

1217
01:05:19,800 --> 01:05:21,900
I realize that I'm writing these of code first nowadays.

1218
01:05:21,900 --> 01:05:24,100
It's really streamlined by implementation brain.

1219
01:05:24,100 --> 01:05:26,200
Just want to say, thanks debate was great too.

1220
01:05:26,700 --> 01:05:27,800
Well, thank you very much.

1221
01:05:27,800 --> 01:05:31,200
I'm very glad you enjoyed them and I'm glad that the use of showed

1222
01:05:31,200 --> 01:05:32,300
first stuff is helping.

1223
01:05:36,100 --> 01:05:38,000
Grand Dragon been learning about x86 assembly.

1224
01:05:38,000 --> 01:05:38,800
And what am I CSS?

1225
01:05:38,800 --> 01:05:41,600
Has, is there any way to force the compiler to use a register for a

1226
01:05:41,600 --> 01:05:44,100
certain variable, instead of a place on the stack?

1227
01:05:44,400 --> 01:05:50,500
Well, yes, and no, you can't actually use the register key word.

1228
01:05:55,200 --> 01:05:59,800
But I don't know if it works in in x64 anymore.

1229
01:06:00,500 --> 01:06:01,400
I don't remember.

1230
01:06:09,300 --> 01:06:12,400
So I guess I just don't know.

1231
01:06:12,400 --> 01:06:14,300
I just don't know if this still works.

1232
01:06:15,700 --> 01:06:17,800
In x64.

1233
01:06:19,600 --> 01:06:24,200
So I mean all I can say is that there is a way to tell the compiler.

1234
01:06:24,200 --> 01:06:25,700
You would like something to be kept in a register.

1235
01:06:25,700 --> 01:06:29,500
I just don't know if it actually obeys that in x64 ever.

1236
01:06:29,500 --> 01:06:33,400
If it might be honest things, it just doesn't use anymore, but you can

1237
01:06:42,400 --> 01:06:47,000
Yeah, so I guess you could give it a try I guess.

1238
01:06:47,000 --> 01:06:47,600
Is what I'm saying.

1239
01:06:48,100 --> 01:06:49,100
Your mileage may vary.

1240
01:07:00,300 --> 01:07:03,300
Culver fly just asking, but is it worth while to put so much effort on

1241
01:07:03,300 --> 01:07:04,500
the debug some of this stage?

1242
01:07:04,500 --> 01:07:07,100
There's a lot of things you're doing right now that I'm not sure how

1243
01:07:07,100 --> 01:07:10,000
it will help in the future maybe just because I've never program games

1244
01:07:10,000 --> 01:07:12,900
before, but if I, as a new beginning prayer were to work on this,

1245
01:07:13,100 --> 01:07:15,800
she's just going as far as you're going right now or proceed on the

1246
01:07:15,800 --> 01:07:19,100
gaming part to see what I need first before doing it.

1247
01:07:23,000 --> 01:07:23,800
Well.

1248
01:07:27,200 --> 01:07:30,900
I guess what I would say about that is like I said, when we started

1249
01:07:30,900 --> 01:07:34,300
the debug stuff, I wanted to take this opportunity to show how to do

1250
01:07:34,300 --> 01:07:35,600
this kind of programming.

1251
01:07:36,000 --> 01:07:39,100
So I'm definitely doing something a little more.

1252
01:07:41,100 --> 01:07:44,600
Elaborate than is necessary, right?

1253
01:07:45,400 --> 01:07:48,200
I mean, if all you care about is the bare minimum thing.

1254
01:07:49,600 --> 01:07:54,600
So I would say that, you know, yeah, if you're a total novice, should

1255
01:07:54,600 --> 01:07:55,900
you be spending a lot of time on this?

1256
01:07:56,700 --> 01:08:00,300
Maybe the answer is no, but the other question is maybe the answer is?

1257
01:08:00,300 --> 01:08:04,400
Yes, because this is something you should know how to do right here

1258
01:08:04,700 --> 01:08:09,100
and it's a very safe way to play around with this and you should be

1259
01:08:09,100 --> 01:08:10,400
able to do this kind of code.

1260
01:08:10,600 --> 01:08:11,400
Right?

1261
01:08:11,400 --> 01:08:12,200
So, I don't know.

1262
01:08:13,200 --> 01:08:14,700
That's a tough question to answer.

1263
01:08:15,300 --> 01:08:16,600
I guess, I would say

1264
01:08:19,899 --> 01:08:24,800
It depends what your goals are, for whatever you happen to be doing at

1265
01:08:24,800 --> 01:08:25,300
the time.

1266
01:08:28,500 --> 01:08:30,500
That's what I would say, right.

1267
01:08:37,800 --> 01:08:38,100
Mr.

1268
01:08:38,100 --> 01:08:38,800
Fourth dimension.

1269
01:08:39,000 --> 01:08:41,399
Well, if you would just replace the branches polymorphism.

1270
01:08:41,500 --> 01:08:44,399
Yeah, good point, because polymorphisms free, the processor.

1271
01:08:44,399 --> 01:08:45,800
Just does it for you, right?

1272
01:08:49,800 --> 01:08:51,200
K what's more impressive?

1273
01:08:51,200 --> 01:08:54,399
Previous products and practical experience versus a college degree?

1274
01:08:57,200 --> 01:08:59,200
Are you asking me personally or in the industry?

1275
01:08:59,200 --> 01:08:59,800
Because I don't know.

1276
01:09:01,000 --> 01:09:02,000
Industrywide.

1277
01:09:02,500 --> 01:09:05,200
You'd have to kind of I don't know, right?

1278
01:09:06,600 --> 01:09:07,399
So

1279
01:09:09,500 --> 01:09:13,399
I guess what I would say is for me, personally, I don't care if you

1280
01:09:13,399 --> 01:09:15,500
went to college, it has absolutely no bearing on anything in my

1281
01:09:15,500 --> 01:09:16,100
opinion.

1282
01:09:17,800 --> 01:09:22,300
So college degree means almost nothing that doesn't mean that.

1283
01:09:22,500 --> 01:09:24,800
It might not be a good idea to get a college because of all the stuff

1284
01:09:24,800 --> 01:09:26,300
you might learn when doing it.

1285
01:09:26,700 --> 01:09:29,899
So maybe the college degree is going to get, but the fact that you

1286
01:09:29,899 --> 01:09:34,000
got, it doesn't actually mean a thing to me, I want to see, I want to

1287
01:09:34,000 --> 01:09:35,000
see the code, right?

1288
01:09:35,000 --> 01:09:37,800
I want to see what you're actually doing and how you're doing it.

1289
01:09:40,500 --> 01:09:42,700
Things would make a Jelly Bean or the register key word.

1290
01:09:42,800 --> 01:09:43,000
Yeah.

1291
01:09:43,000 --> 01:09:45,000
That I mean like I said, that's my assumption.

1292
01:09:46,700 --> 01:09:50,000
I think it kind of used to work like I remember you could do some

1293
01:09:50,000 --> 01:09:53,000
things with it in the old days.

1294
01:09:53,000 --> 01:09:57,700
But just my assumption these days is that you know, the compiler would

1295
01:09:57,700 --> 01:10:00,400
take it as a hint as at best, you know.

1296
01:10:01,500 --> 01:10:02,100
So

1297
01:10:03,800 --> 01:10:06,100
So you know, the sort of what you were suggesting or like maybe you

1298
01:10:06,100 --> 01:10:09,300
know you want to tell the compiler juicing specific and x86 code and

1299
01:10:09,300 --> 01:10:10,500
it has to do it.

1300
01:10:10,500 --> 01:10:12,100
That I don't think you can do.

1301
01:10:12,600 --> 01:10:14,200
I don't know of a way to tell it to do that.

1302
01:10:49,700 --> 01:10:52,200
Looks like we're pretty good with questions.

1303
01:10:55,000 --> 01:10:57,200
Oh, and I didn't answer quite at the final thing.

1304
01:10:57,200 --> 01:10:59,300
About the person asked the branch first thing they were saying, have

1305
01:10:59,300 --> 01:11:02,800
you ever considered running a Chase through cash grind?

1306
01:11:03,000 --> 01:11:05,000
And was why I want to say about that is like

1307
01:11:06,500 --> 01:11:10,600
That now is not a particularly useful time to do that.

1308
01:11:12,200 --> 01:11:16,800
So analyzing cash usage is something that's a very fine-tuned

1309
01:11:16,800 --> 01:11:18,800
optimization process, right?

1310
01:11:19,700 --> 01:11:23,100
So while you do want to kind of have the back of your mind, if you're

1311
01:11:23,100 --> 01:11:27,100
doing something very significant that's going to have serious

1312
01:11:27,100 --> 01:11:30,000
architectural, Implement implications for your program, that will

1313
01:11:30,200 --> 01:11:31,700
force bad cache Behavior.

1314
01:11:31,700 --> 01:11:33,800
Something that maybe is something to think about earlier.

1315
01:11:34,400 --> 01:11:35,600
But in general thinking about

1316
01:11:35,800 --> 01:11:37,100
Cash usage.

1317
01:11:37,500 --> 01:11:40,900
While you're just trying to construct the main portion of your program

1318
01:11:41,100 --> 01:11:44,900
is just usually a complete waste of your time because you go through

1319
01:11:44,900 --> 01:11:48,800
so many iterations of how things are arranged if you then add thinking

1320
01:11:48,800 --> 01:11:54,700
about caches to that process, when 99% of that code will not even take

1321
01:11:54,700 --> 01:11:57,400
enough time to matter at all.

1322
01:11:57,400 --> 01:11:59,800
What it does to the cash, is your falling.

1323
01:12:00,300 --> 01:12:03,000
Pray to the standard canoe thing which is premature opposition through

1324
01:12:03,000 --> 01:12:03,100
it.

1325
01:12:03,100 --> 01:12:05,900
All you know, you're spending tons of mental energy on something that

1326
01:12:05,900 --> 01:12:06,900
is irrelevant.

1327
01:12:07,300 --> 01:12:09,500
So what you want to do in terms of thing about catches, you want to

1328
01:12:09,500 --> 01:12:13,700
delay that till the point where you're ready to go?

1329
01:12:14,000 --> 01:12:16,600
What is my primary data flow through here?

1330
01:12:16,900 --> 01:12:17,300
Okay.

1331
01:12:17,300 --> 01:12:18,300
How do I make that?

1332
01:12:18,300 --> 01:12:24,200
How do I, you know, make that sort of a nice cash current thing and so

1333
01:12:24,200 --> 01:12:26,300
you really don't want to be thinking about that.

1334
01:12:27,100 --> 01:12:30,900
Until you are actually concentrating on performance, which is now

1335
01:12:30,900 --> 01:12:31,700
we're doing at this.

1336
01:12:31,900 --> 01:12:35,100
Especially not going to do it in a debug system, right?

1337
01:12:35,100 --> 01:12:38,200
Like this code doesn't even get run on the end user's machine.

1338
01:12:38,600 --> 01:12:41,700
So thinking about the branches in it is kind of ridiculous, right?

1339
01:13:05,500 --> 01:13:07,800
All right, I think I don't see any more cues.

1340
01:13:07,800 --> 01:13:09,200
I'm going to wind down.

1341
01:13:14,000 --> 01:13:15,900
Save our Mischief Blackboard.

1342
01:13:17,900 --> 01:13:19,200
I know why that's up.

1343
01:13:22,800 --> 01:13:26,300
Okay, thank you, everyone for joining me, for another episode of

1344
01:13:26,300 --> 01:13:26,800
handmade here.

1345
01:13:26,800 --> 01:13:30,700
It's been a pleasure coding with you, as always, if you would like to

1346
01:13:30,700 --> 01:13:34,300
follow along with a handmade hero development at home, you can do so

1347
01:13:34,300 --> 01:13:36,800
by pre-ordering the game on handmade here at org and it comes to the

1348
01:13:36,800 --> 01:13:37,200
source code.

1349
01:13:37,200 --> 01:13:41,100
So you can play around with it and learn from it and do other stuff

1350
01:13:41,100 --> 01:13:42,800
experiment.

1351
01:13:42,800 --> 01:13:45,700
And so on, we also have a patreon page, want to support the video

1352
01:13:45,700 --> 01:13:46,000
series.

1353
01:13:46,000 --> 01:13:48,900
We have a forum site if you want to ask questions or see an

1354
01:13:48,900 --> 01:13:51,700
antidepressant guy maintained by the community, so you can catch up on

1355
01:13:51,700 --> 01:13:52,800
past episodes and original

1356
01:13:52,900 --> 01:13:56,100
Tweet bot that lets, you know, when special events are happening and

1357
01:13:56,100 --> 01:13:58,400
the general schedule for the week, if you want to catch a stream live

1358
01:13:58,400 --> 01:14:01,800
and speaking kind of dream life will be back here next week.

1359
01:14:02,900 --> 01:14:08,500
And we'll be back here on Monday for the last week of handmade hero

1360
01:14:08,500 --> 01:14:13,100
before I will probably be off for two weeks since I will be out of the

1361
01:14:13,100 --> 01:14:16,100
country and unable to stream.

1362
01:14:16,600 --> 01:14:21,000
So next week, will kind of be the last week of work for and then

1363
01:14:21,000 --> 01:14:22,700
before we have a brief break

1364
01:14:23,300 --> 01:14:25,500
So that's the situation.

1365
01:14:25,500 --> 01:14:29,700
Hope to see you back here on Monday, until then have fun coding.

1366
01:14:29,700 --> 01:14:31,800
And I will see you guys on the internet.

1367
01:14:31,800 --> 01:14:32,700
Take it easy, everyone.

