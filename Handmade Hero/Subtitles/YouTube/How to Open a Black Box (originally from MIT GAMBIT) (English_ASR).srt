1
00:00:02,299 --> 00:00:08,910
okay this is a lecture that I originally

2
00:00:05,219 --> 00:00:12,449
gave in I believe it was 2007 so it's a

3
00:00:08,910 --> 00:00:14,160
long long long time ago at this point it

4
00:00:12,449 --> 00:00:17,850
was about seven years before I started

5
00:00:14,160 --> 00:00:21,240
handmade hero I and I guess it's ten

6
00:00:17,850 --> 00:00:23,220
years to today maybe a little little

7
00:00:21,239 --> 00:00:26,159
over ten years so it's I think it's I

8
00:00:23,219 --> 00:00:29,038
think this talk is actually a decade old

9
00:00:26,160 --> 00:00:32,399
I'm not 100% sure about that but I

10
00:00:29,039 --> 00:00:35,520
believe it is and the circumstances

11
00:00:32,399 --> 00:00:38,039
around which I gave this talk was that I

12
00:00:35,520 --> 00:00:41,070
had gone back to Boston Massachusetts

13
00:00:38,039 --> 00:00:42,780
which is it's I didn't grow up in Boston

14
00:00:41,070 --> 00:00:47,189
but I grew up in Massachusetts I had

15
00:00:42,780 --> 00:00:50,070
gone back there and I had gone for

16
00:00:47,189 --> 00:00:54,119
reasons I don't totally remember to a

17
00:00:50,070 --> 00:00:57,119
local sort of game developer group that

18
00:00:54,119 --> 00:01:00,299
they were having there and I had met a

19
00:00:57,119 --> 00:01:02,070
fellow there whose name was Philip Tong

20
00:01:00,299 --> 00:01:03,689
I don't actually know exactly how to

21
00:01:02,070 --> 00:01:05,760
pronounce his last name

22
00:01:03,689 --> 00:01:08,429
I don't think I've ever actually heard

23
00:01:05,760 --> 00:01:09,118
it pronounced but he it might be Tana

24
00:01:08,430 --> 00:01:15,150
might be tan

25
00:01:09,118 --> 00:01:19,650
he ran a group at MIT called gambit it

26
00:01:15,150 --> 00:01:23,009
was G am bi T and it was a group that

27
00:01:19,650 --> 00:01:26,728
was specifically sort of partnered with

28
00:01:23,009 --> 00:01:29,280
the Singaporean government and I don't

29
00:01:26,728 --> 00:01:31,379
know the circumstances under which they

30
00:01:29,280 --> 00:01:34,799
ran this exactly but it had something to

31
00:01:31,379 --> 00:01:37,019
do with the fact that Singapore wanted

32
00:01:34,799 --> 00:01:39,509
to encourage game development to occur

33
00:01:37,019 --> 00:01:40,828
in their country more so than it was

34
00:01:39,509 --> 00:01:43,019
already and I do think at that time

35
00:01:40,828 --> 00:01:44,969
there was also things they were doing to

36
00:01:43,019 --> 00:01:46,709
try it like a favorable tax status or

37
00:01:44,969 --> 00:01:49,379
things like this to try to encourage

38
00:01:46,709 --> 00:01:52,259
game companies to set up shop there

39
00:01:49,379 --> 00:01:53,908
probably because they perceived other

40
00:01:52,259 --> 00:01:55,739
countries to be starting to have good

41
00:01:53,909 --> 00:01:57,450
game development industries and they

42
00:01:55,739 --> 00:01:58,618
maybe didn't have that and thought that

43
00:01:57,450 --> 00:02:00,329
there was stuff that they could do I

44
00:01:58,618 --> 00:02:03,118
remember actually South Korea doing

45
00:02:00,328 --> 00:02:05,188
something similar around that a little

46
00:02:03,118 --> 00:02:06,899
earlier actually but sit very very very

47
00:02:05,188 --> 00:02:08,128
very similar so there are a couple

48
00:02:06,899 --> 00:02:11,550
countries that we're doing this sort of

49
00:02:08,128 --> 00:02:12,799
thing those the two that are aware of

50
00:02:11,550 --> 00:02:14,300
but I think it was kind of a common

51
00:02:12,800 --> 00:02:15,530
around the world as game development

52
00:02:14,300 --> 00:02:18,439
started to become a little more popular

53
00:02:15,530 --> 00:02:20,270
and so what the Singaporean government

54
00:02:18,439 --> 00:02:24,770
had done in this particular case is they

55
00:02:20,270 --> 00:02:27,380
had one of their sort of initiatives was

56
00:02:24,770 --> 00:02:30,560
to work with MIT to create something

57
00:02:27,379 --> 00:02:33,740
which was effectively a program for

58
00:02:30,560 --> 00:02:35,569
students who I don't really know how

59
00:02:33,740 --> 00:02:37,820
those students were selected back in

60
00:02:35,569 --> 00:02:39,519
Singapore but I assume that it was based

61
00:02:37,819 --> 00:02:41,750
on you know attitude for computer

62
00:02:39,520 --> 00:02:43,430
programming or art or other sorts of

63
00:02:41,750 --> 00:02:45,710
things that were you know game

64
00:02:43,430 --> 00:02:48,710
development related these students would

65
00:02:45,710 --> 00:02:52,520
go over and spend time at MIT during the

66
00:02:48,710 --> 00:02:54,469
summer working with various game

67
00:02:52,520 --> 00:02:56,689
development technologies and being sort

68
00:02:54,469 --> 00:02:59,300
of taught how to make games by people

69
00:02:56,689 --> 00:03:01,939
who were set up at this as part of this

70
00:02:59,300 --> 00:03:03,830
program that's about really all I know

71
00:03:01,939 --> 00:03:05,780
about it but I believe it still exists

72
00:03:03,830 --> 00:03:07,550
to this day I could be wrong about that

73
00:03:05,780 --> 00:03:09,530
but it was still going for quite some

74
00:03:07,550 --> 00:03:12,200
time after I gave this lecture anyway I

75
00:03:09,530 --> 00:03:16,099
met the fellow who was in charge of

76
00:03:12,199 --> 00:03:18,259
running that that operation and he asked

77
00:03:16,099 --> 00:03:19,969
if I would come and give a talk to the

78
00:03:18,259 --> 00:03:21,500
students there and there's only you know

79
00:03:19,969 --> 00:03:24,020
a handful o students there it's fifteen

80
00:03:21,500 --> 00:03:26,419
thirty something like this so this was

81
00:03:24,020 --> 00:03:29,360
the talk that I prepared for that

82
00:03:26,419 --> 00:03:31,069
occasion and it's only ever been seen by

83
00:03:29,360 --> 00:03:32,780
those thirty people or however many

84
00:03:31,069 --> 00:03:35,930
people were in the room that day the

85
00:03:32,780 --> 00:03:38,360
just the people for that program but it

86
00:03:35,930 --> 00:03:40,400
was one of my favorite lectures that

87
00:03:38,360 --> 00:03:42,290
I've ever done because it was very

88
00:03:40,400 --> 00:03:43,310
personal and about the topic that I

89
00:03:42,289 --> 00:03:45,319
actually cared about

90
00:03:43,310 --> 00:03:47,479
unlike most lectures that I give which

91
00:03:45,319 --> 00:03:49,669
really aren't there usually on a

92
00:03:47,479 --> 00:03:52,340
technical topic that's not really that's

93
00:03:49,669 --> 00:03:54,259
just kind of abstract and so this topic

94
00:03:52,340 --> 00:03:56,569
was very personal and in fact it was

95
00:03:54,259 --> 00:03:59,209
basically the the mindset that led to

96
00:03:56,569 --> 00:04:01,250
handmade hero was encapsulated in this

97
00:03:59,209 --> 00:04:04,729
talk back in 2007 and the talk was

98
00:04:01,250 --> 00:04:07,039
specifically you could say talking about

99
00:04:04,729 --> 00:04:08,629
the same all the same things that I

100
00:04:07,039 --> 00:04:11,900
tried to get across with handmade hero

101
00:04:08,629 --> 00:04:13,969
are in this talk already and this is

102
00:04:11,900 --> 00:04:15,739
sort of where I was already thinking

103
00:04:13,969 --> 00:04:17,629
about this and having this opinion kind

104
00:04:15,739 --> 00:04:19,280
of at that time and it just wasn't until

105
00:04:17,629 --> 00:04:20,779
seven or eight years later that I

106
00:04:19,279 --> 00:04:26,000
actually started handmade hero but it's

107
00:04:20,779 --> 00:04:28,348
the same basic idea so that's the

108
00:04:26,000 --> 00:04:30,629
that that's the context of the talk to

109
00:04:28,348 --> 00:04:32,788
you well and it's called how to open a

110
00:04:30,629 --> 00:04:35,218
black box so I'm gonna go ahead and give

111
00:04:32,788 --> 00:04:37,378
you the run-through of the talk now as

112
00:04:35,218 --> 00:04:40,139
closest I can do it to how I did it back

113
00:04:37,379 --> 00:04:41,729
then but it's been 10 years so the

114
00:04:40,139 --> 00:04:44,038
chances that I'll remember exactly how

115
00:04:41,728 --> 00:04:45,318
it goes are pretty low but I'll do my

116
00:04:44,038 --> 00:04:49,500
best

117
00:04:45,319 --> 00:04:51,689
alright so in the industry we have a

118
00:04:49,500 --> 00:04:53,788
term called black box and you've

119
00:04:51,689 --> 00:04:55,710
probably heard it if you've ever been in

120
00:04:53,788 --> 00:04:58,829
programming circles essentially what it

121
00:04:55,709 --> 00:05:00,209
means is it really is a little bit wrong

122
00:04:58,829 --> 00:05:02,158
because black box

123
00:05:00,209 --> 00:05:03,628
you know maybe is different from orange

124
00:05:02,158 --> 00:05:04,560
box a different from purple box it

125
00:05:03,629 --> 00:05:06,750
sounds like you're talking about the

126
00:05:04,560 --> 00:05:09,000
color of the box's exterior like how was

127
00:05:06,750 --> 00:05:10,500
it painted but that's not what we mean

128
00:05:09,000 --> 00:05:12,718
we say black box we really mean is

129
00:05:10,500 --> 00:05:15,449
opaque box we mean a box you cannot see

130
00:05:12,718 --> 00:05:17,310
into so the opposite of a black box

131
00:05:15,449 --> 00:05:20,610
would be something that was transparent

132
00:05:17,310 --> 00:05:22,079
box so it's really opaque box versus

133
00:05:20,610 --> 00:05:24,810
transparent box is the important part

134
00:05:22,079 --> 00:05:26,490
and the key to it is that you're talking

135
00:05:24,810 --> 00:05:28,680
about when you use the term black box

136
00:05:26,490 --> 00:05:31,408
something that you don't really know how

137
00:05:28,680 --> 00:05:33,120
it works right and there's two reasons

138
00:05:31,408 --> 00:05:36,449
you might not know how it works one

139
00:05:33,120 --> 00:05:38,759
reason is that you simply can't so for

140
00:05:36,449 --> 00:05:41,819
example a closed source piece of

141
00:05:38,759 --> 00:05:43,860
software that is too complex to really

142
00:05:41,819 --> 00:05:45,629
be reverse engineered by you in a

143
00:05:43,860 --> 00:05:47,610
reasonable amount of time you might say

144
00:05:45,629 --> 00:05:49,408
this as a black box because there's just

145
00:05:47,610 --> 00:05:52,139
no way for you to know what it's

146
00:05:49,408 --> 00:05:54,120
actually doing another reason you might

147
00:05:52,139 --> 00:05:56,310
have a black box is that you simply

148
00:05:54,120 --> 00:05:59,038
haven't taken the time to understand the

149
00:05:56,310 --> 00:06:01,620
system yet but you certainly could right

150
00:05:59,038 --> 00:06:03,000
and those are the two times you might be

151
00:06:01,620 --> 00:06:05,538
talking about something as a black box

152
00:06:03,000 --> 00:06:07,918
in one case something really truly is

153
00:06:05,538 --> 00:06:09,269
completely opaque to you and you will

154
00:06:07,918 --> 00:06:10,799
never be able to really know what's

155
00:06:09,269 --> 00:06:12,810
going on inside specifically because you

156
00:06:10,800 --> 00:06:15,389
simply don't have access on the other

157
00:06:12,810 --> 00:06:17,399
hand you can have a situation where

158
00:06:15,389 --> 00:06:18,538
something easily could be understood by

159
00:06:17,399 --> 00:06:20,448
you and you could investigate it further

160
00:06:18,538 --> 00:06:23,218
but you're choosing not to do so right

161
00:06:20,449 --> 00:06:25,468
so let's talk about what a black box

162
00:06:23,218 --> 00:06:27,899
might be like in the case of a video

163
00:06:25,468 --> 00:06:29,038
game today as so something that I don't

164
00:06:27,899 --> 00:06:31,019
think I mentioned the time because it

165
00:06:29,038 --> 00:06:32,639
really wasn't necessarily something that

166
00:06:31,019 --> 00:06:34,258
would have been in widespread use but

167
00:06:32,639 --> 00:06:35,250
something like a game engine like unity

168
00:06:34,259 --> 00:06:37,110
or unreal

169
00:06:35,250 --> 00:06:38,668
you might think of as a black box

170
00:06:37,110 --> 00:06:38,860
because you maybe don't really know much

171
00:06:38,668 --> 00:06:40,468
of

172
00:06:38,860 --> 00:06:42,759
how it works but you're going to use it

173
00:06:40,468 --> 00:06:44,348
or maybe you're using some kind of a

174
00:06:42,759 --> 00:06:46,810
game development library so something

175
00:06:44,348 --> 00:06:48,339
like a load texture call you may

176
00:06:46,810 --> 00:06:50,769
understand conceptually what a load

177
00:06:48,339 --> 00:06:52,779
texture call does in the engine you know

178
00:06:50,769 --> 00:06:54,279
that it loads a texture off of disk and

179
00:06:52,779 --> 00:06:56,948
maybe brings that texture into memory

180
00:06:54,279 --> 00:06:58,359
and all you really know about this black

181
00:06:56,949 --> 00:07:00,968
box is that when you make this load

182
00:06:58,360 --> 00:07:02,650
texture call you are going to get back

183
00:07:00,968 --> 00:07:04,089
this texture that you store it on the

184
00:07:02,649 --> 00:07:05,318
disk it's going to come into memory and

185
00:07:04,089 --> 00:07:07,810
you can start using it to texture

186
00:07:05,319 --> 00:07:09,639
services the reason we might say this is

187
00:07:07,810 --> 00:07:11,348
a black box again is because you don't

188
00:07:09,639 --> 00:07:12,908
really know how that happened you don't

189
00:07:11,348 --> 00:07:14,378
know how the texture was really stored

190
00:07:12,908 --> 00:07:15,759
you don't know how it might have been

191
00:07:14,379 --> 00:07:17,289
compressed or decompress you don't know

192
00:07:15,759 --> 00:07:18,819
if was transcoded on the fly you don't

193
00:07:17,288 --> 00:07:21,038
know whether it was loaded on demand or

194
00:07:18,819 --> 00:07:22,120
delay loaded or whatever happened you

195
00:07:21,038 --> 00:07:22,839
don't really know much about the

196
00:07:22,120 --> 00:07:25,240
implementation

197
00:07:22,839 --> 00:07:27,668
you just know semantically I said load

198
00:07:25,240 --> 00:07:29,288
texture I got a texture the same would

199
00:07:27,668 --> 00:07:30,758
be true for the play sound call maybe

200
00:07:29,288 --> 00:07:32,079
you hear sound out the speakers you

201
00:07:30,759 --> 00:07:32,528
don't really know much about how that

202
00:07:32,079 --> 00:07:34,149
happened

203
00:07:32,528 --> 00:07:36,009
maybe there's the physics call like

204
00:07:34,149 --> 00:07:37,359
apply force you don't really know how

205
00:07:36,009 --> 00:07:38,800
the physics engine works but you know

206
00:07:37,360 --> 00:07:40,658
that when you apply force the like

207
00:07:38,800 --> 00:07:43,588
bouncing ball starts bouncing around or

208
00:07:40,658 --> 00:07:46,449
whatever right and these are examples of

209
00:07:43,588 --> 00:07:49,269
game code on the left side all of those

210
00:07:46,449 --> 00:07:51,939
things that I said and the game on the

211
00:07:49,269 --> 00:07:54,038
right side and that's how you would

212
00:07:51,939 --> 00:07:56,769
conceptualize these things if you have a

213
00:07:54,038 --> 00:07:59,050
black box as an engine in between you

214
00:07:56,769 --> 00:08:01,689
think of the left side the play sound

215
00:07:59,050 --> 00:08:04,210
the load texture as the code for the

216
00:08:01,689 --> 00:08:06,098
game and you think of the things that

217
00:08:04,209 --> 00:08:08,560
happen the results you saw as the game

218
00:08:06,098 --> 00:08:10,360
and there's a black box sitting in the

219
00:08:08,560 --> 00:08:13,060
middle what is that black box well it's

220
00:08:10,360 --> 00:08:14,949
the game engine and you have no idea how

221
00:08:13,060 --> 00:08:17,348
it works right it's completely opaque to

222
00:08:14,949 --> 00:08:19,210
you you just know semantically you'd do

223
00:08:17,348 --> 00:08:22,079
something and something else happens on

224
00:08:19,209 --> 00:08:25,000
the other end hopefully that makes sense

225
00:08:22,079 --> 00:08:27,668
so that's the second kind of black box

226
00:08:25,000 --> 00:08:30,098
in most circumstances now it certainly

227
00:08:27,668 --> 00:08:31,718
depends on the particular engine you're

228
00:08:30,098 --> 00:08:33,519
talking about there are closed source

229
00:08:31,718 --> 00:08:35,229
engines out there but say take for

230
00:08:33,519 --> 00:08:37,179
example the Unreal Engine my

231
00:08:35,229 --> 00:08:38,050
understanding today is that unless

232
00:08:37,179 --> 00:08:40,208
there's a particularly unusual

233
00:08:38,049 --> 00:08:41,889
circumstance when you are using the

234
00:08:40,208 --> 00:08:44,228
Unreal Engine you actually have the

235
00:08:41,889 --> 00:08:45,819
source code to the engine as well so if

236
00:08:44,229 --> 00:08:47,350
you didn't know how it worked it's not

237
00:08:45,820 --> 00:08:49,000
because you couldn't investigate it's

238
00:08:47,350 --> 00:08:50,620
because you simply haven't investigated

239
00:08:49,000 --> 00:08:52,389
on the other hand there are

240
00:08:50,620 --> 00:08:52,629
circumstances where you don't get access

241
00:08:52,389 --> 00:08:54,490
to

242
00:08:52,629 --> 00:08:55,689
and source code so you may be using an

243
00:08:54,490 --> 00:08:56,769
engine in other cases where you

244
00:08:55,690 --> 00:08:59,230
literally have no way of knowing

245
00:08:56,769 --> 00:09:02,350
outworks the semantics are all you will

246
00:08:59,230 --> 00:09:04,269
ever get but in either case as long as

247
00:09:02,350 --> 00:09:06,009
those two things were true one of those

248
00:09:04,269 --> 00:09:07,600
two things were true you would have one

249
00:09:06,009 --> 00:09:14,470
of these opaque boxes you did not

250
00:09:07,600 --> 00:09:18,879
understand okay so what I'd like to talk

251
00:09:14,470 --> 00:09:21,250
about today is why it might be important

252
00:09:18,879 --> 00:09:25,450
for you to understand what happens

253
00:09:21,250 --> 00:09:27,879
inside that black box and who the types

254
00:09:25,450 --> 00:09:30,270
of people are who probably should learn

255
00:09:27,879 --> 00:09:33,820
what happens inside that black box and

256
00:09:30,269 --> 00:09:38,679
finally give a motivating example to

257
00:09:33,820 --> 00:09:42,070
show what exactly the results are and

258
00:09:38,679 --> 00:09:45,159
why it's a it proves to be very useful

259
00:09:42,070 --> 00:09:48,190
to have a complete understanding of how

260
00:09:45,159 --> 00:09:49,569
game engine code works if you're you

261
00:09:48,190 --> 00:09:51,340
sort of in this category of people who

262
00:09:49,570 --> 00:09:53,200
probably should care right because I

263
00:09:51,340 --> 00:09:55,540
don't argue that everyone should care I

264
00:09:53,200 --> 00:09:58,990
only argue that certain people should

265
00:09:55,539 --> 00:10:00,549
care right so the topic that I want to

266
00:09:58,990 --> 00:10:02,889
talk about that motivates these things

267
00:10:00,549 --> 00:10:04,779
is normal mapping and normal mapping is

268
00:10:02,889 --> 00:10:07,750
hopefully something that most people are

269
00:10:04,779 --> 00:10:09,789
familiar with today in the black box

270
00:10:07,750 --> 00:10:11,919
sense so in the semantic sense it's

271
00:10:09,789 --> 00:10:13,899
something that even an artist someone

272
00:10:11,919 --> 00:10:15,759
who doesn't do programming probably

273
00:10:13,899 --> 00:10:17,919
understands at least semantically now

274
00:10:15,759 --> 00:10:19,600
because it's part of the job so even

275
00:10:17,919 --> 00:10:22,479
though a normal map is a very technical

276
00:10:19,600 --> 00:10:25,810
topic at some level it has become so

277
00:10:22,480 --> 00:10:28,539
commonplace in game development that

278
00:10:25,809 --> 00:10:30,099
even people who don't program must know

279
00:10:28,539 --> 00:10:30,939
what it is and must know how to make one

280
00:10:30,100 --> 00:10:34,629
even if they don't necessarily

281
00:10:30,940 --> 00:10:36,400
understand mathematically what it is now

282
00:10:34,629 --> 00:10:38,860
a normal map for those of you who may

283
00:10:36,399 --> 00:10:41,949
not quite know what one is it's a very

284
00:10:38,860 --> 00:10:43,659
simple concept the idea is that when you

285
00:10:41,950 --> 00:10:46,960
have a three-dimensional object that you

286
00:10:43,659 --> 00:10:50,139
have created it is necessarily built out

287
00:10:46,960 --> 00:10:52,780
of pieces that may not encode all of the

288
00:10:50,139 --> 00:10:55,299
information necessary to say the the

289
00:10:52,779 --> 00:10:58,689
sort of Ferenc of the surface the the

290
00:10:55,299 --> 00:11:01,120
textural aspects of the surface that run

291
00:10:58,690 --> 00:11:05,110
along the surface that relate to how

292
00:11:01,120 --> 00:11:05,440
bumpy is or sort of how it reflects

293
00:11:05,110 --> 00:11:06,220
light

294
00:11:05,440 --> 00:11:09,430
if you

295
00:11:06,220 --> 00:11:11,170
right so there's a lot of information

296
00:11:09,429 --> 00:11:13,359
that we need to encode when we talk

297
00:11:11,169 --> 00:11:15,129
about modeling a 3d object and so we end

298
00:11:13,360 --> 00:11:16,360
up with a series of maps that sit on

299
00:11:15,129 --> 00:11:18,519
that surface and then encode this

300
00:11:16,360 --> 00:11:20,279
information information like how

301
00:11:18,519 --> 00:11:22,960
reflective how shiny something is

302
00:11:20,279 --> 00:11:24,639
information like what the reflected

303
00:11:22,960 --> 00:11:26,590
color is so what colors does it absorb

304
00:11:24,639 --> 00:11:29,199
what colors does it reflect and finally

305
00:11:26,590 --> 00:11:33,430
information like how is is displaced or

306
00:11:29,200 --> 00:11:36,759
how it has like little fine lit levels

307
00:11:33,429 --> 00:11:38,769
of bumps or sort of defects in the

308
00:11:36,759 --> 00:11:41,049
surface that will cause the light to

309
00:11:38,769 --> 00:11:42,879
catch in those areas and that last part

310
00:11:41,049 --> 00:11:45,429
is typically encoded these days with a

311
00:11:42,879 --> 00:11:47,939
normal map a normal map is something

312
00:11:45,429 --> 00:11:50,199
that says I'm gonna pretend that I know

313
00:11:47,940 --> 00:11:51,820
more about this surface than the

314
00:11:50,200 --> 00:11:53,410
information I actually have in the

315
00:11:51,820 --> 00:11:55,000
three-dimensional model I'm gonna

316
00:11:53,409 --> 00:11:56,799
pretend that I know lots of little

317
00:11:55,000 --> 00:11:59,769
microscopic well probably not

318
00:11:56,799 --> 00:12:02,649
microscopic still macroscopic but very

319
00:11:59,769 --> 00:12:04,090
tiny little surface changes little bumps

320
00:12:02,649 --> 00:12:06,279
little little pieces of information

321
00:12:04,090 --> 00:12:09,220
there and what I'm gonna do is I'm going

322
00:12:06,279 --> 00:12:10,629
to use a two-dimensional texture like I

323
00:12:09,220 --> 00:12:12,460
would use for other things and instead

324
00:12:10,629 --> 00:12:14,769
of encoding things like color in it I'm

325
00:12:12,460 --> 00:12:16,930
gonna encode those little fine little

326
00:12:14,769 --> 00:12:19,210
bumps so that way when I have something

327
00:12:16,929 --> 00:12:21,699
like skin or something and I want to

328
00:12:19,210 --> 00:12:23,560
have every little pore of the skin

329
00:12:21,700 --> 00:12:25,120
represented there I don't actually have

330
00:12:23,559 --> 00:12:27,399
to have a three-dimensional model that

331
00:12:25,120 --> 00:12:29,470
has every pore in it actually running at

332
00:12:27,399 --> 00:12:31,929
runtime instead I can just have a map

333
00:12:29,470 --> 00:12:34,120
that captures those pores and I can put

334
00:12:31,929 --> 00:12:38,859
that on the surface as a map and we get

335
00:12:34,120 --> 00:12:42,519
that fine geometry there okay so that's

336
00:12:38,860 --> 00:12:45,639
what a normal map is now why do I want

337
00:12:42,519 --> 00:12:46,960
to talk about this topic well the reason

338
00:12:45,639 --> 00:12:50,649
I want to talk about this topic is

339
00:12:46,960 --> 00:12:53,280
because if you go back to sort of the

340
00:12:50,649 --> 00:12:56,889
the turn of the millennium if you will

341
00:12:53,279 --> 00:12:58,899
we didn't know anything about normal

342
00:12:56,889 --> 00:13:02,439
mapping really in the game industry it

343
00:12:58,899 --> 00:13:04,750
was a pretty new concept and although we

344
00:13:02,440 --> 00:13:06,730
sort of knew about bump mapping because

345
00:13:04,750 --> 00:13:08,769
bump mapping is a topic that's much

346
00:13:06,730 --> 00:13:09,850
older and I'll kind of try to explain

347
00:13:08,769 --> 00:13:12,179
the difference between those two things

348
00:13:09,850 --> 00:13:14,560
a little bit for those who don't know

349
00:13:12,179 --> 00:13:16,929
but although bump mapping was kind of

350
00:13:14,559 --> 00:13:18,909
well understood because I believe it was

351
00:13:16,929 --> 00:13:19,539
Jim Blinn who originally introduced it

352
00:13:18,909 --> 00:13:21,669
introduced

353
00:13:19,539 --> 00:13:23,230
you know in I don't know the early 80s

354
00:13:21,669 --> 00:13:24,909
late 70s something like this

355
00:13:23,230 --> 00:13:27,459
it's bump mapping had been around a long

356
00:13:24,909 --> 00:13:29,139
time and what bump mapping was is it was

357
00:13:27,458 --> 00:13:31,328
sort of a similar concept to normal

358
00:13:29,139 --> 00:13:32,919
mapping it was much earlier and what you

359
00:13:31,328 --> 00:13:34,539
encoded in the texture map was just

360
00:13:32,919 --> 00:13:36,939
height it's like a height field it's

361
00:13:34,539 --> 00:13:41,078
like mapping a height field onto your

362
00:13:36,940 --> 00:13:43,870
object and what the renderer would do

363
00:13:41,078 --> 00:13:46,359
that you would be using in this case is

364
00:13:43,870 --> 00:13:49,269
you would take the information in the

365
00:13:46,360 --> 00:13:49,539
bump map those Heights and at render

366
00:13:49,269 --> 00:13:53,019
time

367
00:13:49,539 --> 00:13:54,939
you would do a sort of differential to

368
00:13:53,019 --> 00:13:57,278
figure out how the normal should Bend

369
00:13:54,940 --> 00:13:59,139
based on the height map now this is a

370
00:13:57,278 --> 00:14:01,059
reasonably good technique and it had a

371
00:13:59,139 --> 00:14:03,639
lot of nice applications back in the day

372
00:14:01,059 --> 00:14:06,189
but it's got drawbacks and specifically

373
00:14:03,639 --> 00:14:08,620
since it's based on a difference there's

374
00:14:06,190 --> 00:14:10,779
only so much bend you can encode because

375
00:14:08,620 --> 00:14:12,669
since you're not encoding directly the

376
00:14:10,778 --> 00:14:13,720
way the surface is pointing like you can

377
00:14:12,669 --> 00:14:15,669
with a normal map as a normal map

378
00:14:13,720 --> 00:14:16,990
actually encodes a normal week or it

379
00:14:15,669 --> 00:14:19,629
encodes the direction the surface is

380
00:14:16,990 --> 00:14:21,818
pointing a bump map can only get you so

381
00:14:19,629 --> 00:14:24,278
far now to give you an analogy of why

382
00:14:21,818 --> 00:14:26,139
this is true imagine a height map right

383
00:14:24,278 --> 00:14:27,879
probably you've played with a height map

384
00:14:26,139 --> 00:14:29,799
before if you've ever done anything with

385
00:14:27,879 --> 00:14:31,870
game development a height map just says

386
00:14:29,799 --> 00:14:34,179
at every point in the world how high is

387
00:14:31,870 --> 00:14:37,509
it well if you want to make a perfectly

388
00:14:34,179 --> 00:14:39,519
sheer cliff you can't do it with a

389
00:14:37,509 --> 00:14:40,539
height map because it has two points

390
00:14:39,519 --> 00:14:42,789
that it's going to interpolate between

391
00:14:40,539 --> 00:14:44,588
right and it knows this one's this high

392
00:14:42,789 --> 00:14:45,939
and this one's this low it doesn't know

393
00:14:44,589 --> 00:14:47,529
it should be perfectly flat so it makes

394
00:14:45,940 --> 00:14:49,600
it still a little bit slanted the same

395
00:14:47,528 --> 00:14:51,370
thing is true of a bump map it only has

396
00:14:49,600 --> 00:14:52,240
those two points to deal with it doesn't

397
00:14:51,370 --> 00:14:54,220
know that they're supposed to be a

398
00:14:52,240 --> 00:14:55,480
perfectly flat peak there it thinks they

399
00:14:54,220 --> 00:14:57,610
just should connect them with a line

400
00:14:55,480 --> 00:14:58,990
just like it would everything else it's

401
00:14:57,610 --> 00:15:01,329
exactly the same thing as a height map

402
00:14:58,990 --> 00:15:03,370
you cant encode it perfectly normal maps

403
00:15:01,328 --> 00:15:05,109
therefore are much better because what

404
00:15:03,370 --> 00:15:06,669
they encode is the actual normal if you

405
00:15:05,110 --> 00:15:08,528
want something to point directly to the

406
00:15:06,669 --> 00:15:10,419
side you just encode at this point it

407
00:15:08,528 --> 00:15:12,009
points directly to the side and so it

408
00:15:10,419 --> 00:15:13,419
gives you a lot more flexibility there

409
00:15:12,009 --> 00:15:15,129
to encode what's actually happening with

410
00:15:13,419 --> 00:15:17,528
a surface you don't need any more

411
00:15:15,129 --> 00:15:18,879
information you don't need to try to

412
00:15:17,528 --> 00:15:20,379
guess what's supposed to happen because

413
00:15:18,879 --> 00:15:22,539
it knows at this point the normal should

414
00:15:20,379 --> 00:15:25,269
be exactly this so it's a way of storing

415
00:15:22,539 --> 00:15:26,649
more directly what's going on and these

416
00:15:25,269 --> 00:15:28,778
sorts of things are starting to slowly

417
00:15:26,649 --> 00:15:29,980
get introduced around this time into

418
00:15:28,778 --> 00:15:31,750
game development because there have been

419
00:15:29,980 --> 00:15:33,310
research papers on the topic and so on

420
00:15:31,750 --> 00:15:35,769
and so forth right

421
00:15:33,309 --> 00:15:38,528
now what I've got on the screen right

422
00:15:35,769 --> 00:15:41,350
now is an example of why normal mapping

423
00:15:38,528 --> 00:15:43,958
is so interesting so if you take a look

424
00:15:41,350 --> 00:15:45,970
at these two meshes they're half of a

425
00:15:43,958 --> 00:15:48,068
face if you take a look at what what

426
00:15:45,970 --> 00:15:49,540
you're seeing there it's it's like you

427
00:15:48,068 --> 00:15:51,789
know how oftentimes really model one

428
00:15:49,539 --> 00:15:54,338
half the face then we mirror it this is

429
00:15:51,789 --> 00:15:56,169
one half of a face and you can see a

430
00:15:54,339 --> 00:15:57,970
little white line that shows the the

431
00:15:56,169 --> 00:16:00,878
white direction that's coming in and

432
00:15:57,970 --> 00:16:03,610
what hopefully you can see here is that

433
00:16:00,879 --> 00:16:05,110
although the left and right sides are

434
00:16:03,610 --> 00:16:06,759
completely different numbers of

435
00:16:05,110 --> 00:16:09,938
triangles so for example on the left

436
00:16:06,759 --> 00:16:12,899
side there's 31,000 triangles in that

437
00:16:09,938 --> 00:16:15,669
mesh and on the right side there's only

438
00:16:12,899 --> 00:16:18,490
894 right a massive difference in the

439
00:16:15,669 --> 00:16:21,308
number of triangles the two meshes when

440
00:16:18,490 --> 00:16:23,528
rendered look almost identical except

441
00:16:21,308 --> 00:16:25,028
for their profile edges and what I mean

442
00:16:23,528 --> 00:16:27,879
by that is if you look at something like

443
00:16:25,028 --> 00:16:31,720
an actual geometric feature the eyebrow

444
00:16:27,879 --> 00:16:36,459
the nose the ear along the profile you

445
00:16:31,720 --> 00:16:40,959
can see how rough the 894 triangle

446
00:16:36,458 --> 00:16:41,888
version is it's very rough right but on

447
00:16:40,958 --> 00:16:44,649
the other hand if you look at the

448
00:16:41,889 --> 00:16:46,808
interior it's still just right it's

449
00:16:44,649 --> 00:16:50,528
perfectly smooth everywhere in here it

450
00:16:46,808 --> 00:16:52,929
doesn't look rough at all and that's

451
00:16:50,528 --> 00:16:54,610
what was so powerful about normal

452
00:16:52,929 --> 00:16:58,028
mapping is it allowed you to encode

453
00:16:54,610 --> 00:16:59,649
these really nice clean normals into

454
00:16:58,028 --> 00:17:02,318
your mesh that made it look like a

455
00:16:59,649 --> 00:17:04,509
really high res model even though you

456
00:17:02,318 --> 00:17:06,759
were rendering almost no triangles and

457
00:17:04,509 --> 00:17:08,828
this was really powerful so the only

458
00:17:06,759 --> 00:17:10,419
problem at this point became how do you

459
00:17:08,828 --> 00:17:11,678
clean up the silhouettes and even if you

460
00:17:10,419 --> 00:17:14,589
didn't clean up the silhouettes it still

461
00:17:11,679 --> 00:17:17,079
just looks great and what you can see if

462
00:17:14,588 --> 00:17:19,779
I move the light around is as I move

463
00:17:17,078 --> 00:17:21,879
that light around you can really see

464
00:17:19,779 --> 00:17:24,879
that it responds just like it should and

465
00:17:21,880 --> 00:17:26,919
again the only errors you see are really

466
00:17:24,880 --> 00:17:29,020
along those silhouette edges they just

467
00:17:26,919 --> 00:17:31,509
are they're just too rough but all of

468
00:17:29,019 --> 00:17:35,079
that lighting is captured beautifully by

469
00:17:31,509 --> 00:17:37,898
the normal map right so that's really

470
00:17:35,079 --> 00:17:41,288
why this was so important right is we

471
00:17:37,898 --> 00:17:44,379
can get so much fidelity into a very low

472
00:17:41,288 --> 00:17:47,470
resolution model by leveraging this

473
00:17:44,380 --> 00:17:50,679
technique now

474
00:17:47,470 --> 00:17:53,620
what I want to try and illustrate here

475
00:17:50,679 --> 00:17:58,120
is that normal mapping is a good example

476
00:17:53,619 --> 00:17:59,589
of something that it didn't even exist

477
00:17:58,119 --> 00:18:05,529
right

478
00:17:59,589 --> 00:18:07,899
this I believe as of 2007 which was when

479
00:18:05,529 --> 00:18:10,509
the lecture was given normal mapping was

480
00:18:07,900 --> 00:18:12,759
completely ubiquitous more or less at

481
00:18:10,509 --> 00:18:15,579
this point right so when I gave this

482
00:18:12,759 --> 00:18:18,339
lecture and also obviously today which

483
00:18:15,579 --> 00:18:20,319
is even later normal mapping is not

484
00:18:18,339 --> 00:18:22,538
something you probably think about at a

485
00:18:20,319 --> 00:18:24,819
low level it's something that you just

486
00:18:22,538 --> 00:18:27,099
take for granted and you treat it

487
00:18:24,819 --> 00:18:29,259
semantically just like the black box

488
00:18:27,099 --> 00:18:31,928
game engine code that I was talking

489
00:18:29,259 --> 00:18:36,908
about back in at the beginning of the

490
00:18:31,929 --> 00:18:42,070
lecture but if you imagine it back in

491
00:18:36,909 --> 00:18:44,830
2002 nobody knew how to do anything with

492
00:18:42,069 --> 00:18:47,678
it it was completely new it wasn't even

493
00:18:44,829 --> 00:18:49,899
in game engines yet nobody had any idea

494
00:18:47,679 --> 00:18:51,700
how to do anything with it we didn't

495
00:18:49,900 --> 00:18:53,890
know how to make them we didn't know how

496
00:18:51,700 --> 00:18:59,140
to initially encode them we didn't know

497
00:18:53,890 --> 00:19:02,320
how to even get the artist him to work

498
00:18:59,140 --> 00:19:04,720
with them right and so what I want to

499
00:19:02,319 --> 00:19:06,939
kind of illustrate is that it by taking

500
00:19:04,720 --> 00:19:08,620
something that now we do take for

501
00:19:06,940 --> 00:19:12,850
granted as being in the game engine if

502
00:19:08,619 --> 00:19:14,709
we go back in time right every single

503
00:19:12,849 --> 00:19:18,209
thing we take for granted now at some

504
00:19:14,710 --> 00:19:21,069
point in time was a new frontier and

505
00:19:18,210 --> 00:19:23,769
people needed to push on that frontier

506
00:19:21,069 --> 00:19:25,329
in order to get it to the point where we

507
00:19:23,769 --> 00:19:28,569
could use it as if it was a black box

508
00:19:25,329 --> 00:19:32,288
and maybe not care as much right all

509
00:19:28,569 --> 00:19:35,490
right so here's what the challenged look

510
00:19:32,288 --> 00:19:37,929
like back at the turn of the millennium

511
00:19:35,490 --> 00:19:38,589
acquisition of normal maps where do they

512
00:19:37,929 --> 00:19:41,169
come from

513
00:19:38,589 --> 00:19:43,058
right projection of normal Maps how do

514
00:19:41,169 --> 00:19:46,330
we get them on to the models that we

515
00:19:43,058 --> 00:19:48,369
need sampling of them so how do we take

516
00:19:46,329 --> 00:19:50,079
the projected version of them and figure

517
00:19:48,369 --> 00:19:52,479
out what goes on what right

518
00:19:50,079 --> 00:19:54,240
there's encoding of them how do we store

519
00:19:52,480 --> 00:19:56,620
them and how do we use them at runtime

520
00:19:54,240 --> 00:19:59,200
there's post-processing how did they get

521
00:19:56,619 --> 00:20:01,269
cleaned up and this is all at the head

522
00:19:59,200 --> 00:20:04,120
end this is when we're making stuff

523
00:20:01,269 --> 00:20:05,920
right and then we've got the back end

524
00:20:04,119 --> 00:20:08,889
part of the process how do we decode

525
00:20:05,920 --> 00:20:10,420
them at runtime how do we shade them you

526
00:20:08,890 --> 00:20:13,930
know how do we write shaders that use

527
00:20:10,420 --> 00:20:15,940
them so in this lecture I'm we talking

528
00:20:13,930 --> 00:20:17,500
about this part and the reason I'm gonna

529
00:20:15,940 --> 00:20:20,289
be talking about this part is because

530
00:20:17,500 --> 00:20:22,089
it's the basic foundational part the

531
00:20:20,289 --> 00:20:25,000
rest of it is actually very interesting

532
00:20:22,089 --> 00:20:26,740
as well and in fact one of the things

533
00:20:25,000 --> 00:20:30,309
that I worked on that I was particularly

534
00:20:26,740 --> 00:20:33,339
proud of in this time is we had in our

535
00:20:30,309 --> 00:20:35,649
code I think arguably the very fastest

536
00:20:33,339 --> 00:20:38,859
by several orders of magnitude normal

537
00:20:35,650 --> 00:20:41,200
mapping capture system that people had

538
00:20:38,859 --> 00:20:43,659
made and so that first part was really

539
00:20:41,200 --> 00:20:46,000
exciting too but in order to get to that

540
00:20:43,660 --> 00:20:48,130
part you have to understand the basic

541
00:20:46,000 --> 00:20:50,319
parts first so we're gonna focus on that

542
00:20:48,130 --> 00:20:51,880
in this lecture maybe I can do another

543
00:20:50,319 --> 00:20:53,049
lecture later that talks about the other

544
00:20:51,880 --> 00:21:00,090
part of it because that part was pretty

545
00:20:53,049 --> 00:21:03,759
exciting as well ok so here we go let's

546
00:21:00,089 --> 00:21:06,159
start by doing a little bit of

547
00:21:03,759 --> 00:21:08,500
mathematical warm-up because one of the

548
00:21:06,160 --> 00:21:09,610
things that certainly and I can this was

549
00:21:08,500 --> 00:21:11,140
not part of the lecture when I

550
00:21:09,609 --> 00:21:12,549
originally gave it because I didn't do

551
00:21:11,140 --> 00:21:14,440
hand made here at the time it was 7

552
00:21:12,549 --> 00:21:17,079
years before I started it or eight years

553
00:21:14,440 --> 00:21:19,269
I'm not sure how many but one of the

554
00:21:17,079 --> 00:21:21,279
things that I get asked all the time all

555
00:21:19,269 --> 00:21:22,720
the time I get emails from tons of

556
00:21:21,279 --> 00:21:25,450
people who asked this I get asked it on

557
00:21:22,720 --> 00:21:29,410
stream all the time it's how important

558
00:21:25,450 --> 00:21:32,140
is math for game development and my

559
00:21:29,410 --> 00:21:35,860
answer is usually gotta be a little bit

560
00:21:32,140 --> 00:21:39,070
equivocal I the answer is not at all or

561
00:21:35,859 --> 00:21:41,319
it's crucial and you must know it and

562
00:21:39,069 --> 00:21:43,839
the the difference depends on what kind

563
00:21:41,319 --> 00:21:46,809
of game programming you're doing it

564
00:21:43,839 --> 00:21:49,539
always always always matters what kind

565
00:21:46,809 --> 00:21:51,220
you're doing if you are dealing with

566
00:21:49,539 --> 00:21:54,220
physics or graphics or any of these

567
00:21:51,220 --> 00:21:56,170
things math is fundamental and you must

568
00:21:54,220 --> 00:21:59,039
know it you must know it very very well

569
00:21:56,170 --> 00:22:01,570
and you can't be scared of it and so

570
00:21:59,039 --> 00:22:03,329
suffice to say when we're talking about

571
00:22:01,569 --> 00:22:05,439
something that's really graphics

572
00:22:03,329 --> 00:22:08,500
specific and in this case we're talking

573
00:22:05,440 --> 00:22:10,750
about pushing a frontier math is

574
00:22:08,500 --> 00:22:12,700
absolutely crucial and you must know it

575
00:22:10,750 --> 00:22:14,359
so what I'm gonna do here is I'm going

576
00:22:12,700 --> 00:22:16,610
to run through some mathematic

577
00:22:14,359 --> 00:22:18,379
maybe those of you out there who are

578
00:22:16,609 --> 00:22:20,119
sort of new to game development aren't

579
00:22:18,380 --> 00:22:23,720
gonna get what I'm talking about and

580
00:22:20,119 --> 00:22:26,629
that is okay I'm trying to give you a

581
00:22:23,720 --> 00:22:28,669
little bit of the flavor of the way that

582
00:22:26,630 --> 00:22:30,860
we think about these things and some of

583
00:22:28,669 --> 00:22:34,190
the basic math that's required of you

584
00:22:30,859 --> 00:22:36,229
when you do get there so don't let this

585
00:22:34,190 --> 00:22:38,149
scare you off the fact that this math

586
00:22:36,230 --> 00:22:41,419
may be a little bit difficult for you to

587
00:22:38,148 --> 00:22:43,699
grasp I'm not expecting you to get it

588
00:22:41,419 --> 00:22:47,690
all I'm expecting you to go oh I see

589
00:22:43,700 --> 00:22:49,819
this is why we say mathematics is

590
00:22:47,690 --> 00:22:52,340
important for game development and this

591
00:22:49,819 --> 00:22:55,339
is why we say it's involved in what

592
00:22:52,339 --> 00:22:57,439
you're doing so what I've written here

593
00:22:55,339 --> 00:22:59,629
is an equation it's a very very simple

594
00:22:57,440 --> 00:23:01,399
equation to a game developer who's used

595
00:22:59,630 --> 00:23:03,289
to working with math but it may be

596
00:23:01,398 --> 00:23:05,388
completely foreign and bizarre to

597
00:23:03,288 --> 00:23:08,048
somebody who has only had high school

598
00:23:05,388 --> 00:23:11,418
math hasn't had linear algebra and so on

599
00:23:08,048 --> 00:23:14,658
what it represents is a spatial

600
00:23:11,419 --> 00:23:18,590
transform it represents taking some

601
00:23:14,659 --> 00:23:20,840
point in some space and moving it or

602
00:23:18,589 --> 00:23:22,428
rotating it scaling it doing something

603
00:23:20,839 --> 00:23:25,398
like this and we would all recognize

604
00:23:22,429 --> 00:23:27,649
this very quickly P is the standard

605
00:23:25,398 --> 00:23:29,388
notation for a point a point in

606
00:23:27,648 --> 00:23:31,099
three-dimensional space for example like

607
00:23:29,388 --> 00:23:33,859
the kind we would care about in game

608
00:23:31,099 --> 00:23:37,009
development P prime which is on the left

609
00:23:33,859 --> 00:23:39,829
side our standard notation for something

610
00:23:37,009 --> 00:23:42,169
that happened to P afterword right so P

611
00:23:39,829 --> 00:23:43,970
prime is is the new point that we're

612
00:23:42,169 --> 00:23:45,889
getting right it's a point that has

613
00:23:43,970 --> 00:23:48,259
moved or transform to scale in some way

614
00:23:45,888 --> 00:23:50,269
and P was the input so think the

615
00:23:48,259 --> 00:23:52,788
right-hand side that just P by itself

616
00:23:50,269 --> 00:23:56,210
that's the input P Prime that's the

617
00:23:52,788 --> 00:23:58,730
output and this big R that R represents

618
00:23:56,210 --> 00:24:01,130
a matrix it represents a matrix that

619
00:23:58,730 --> 00:24:04,159
will move our point rotate our point

620
00:24:01,130 --> 00:24:07,820
scale our point so P prime equals R P is

621
00:24:04,159 --> 00:24:13,419
a way of stating something very simple a

622
00:24:07,819 --> 00:24:17,960
new point P prime comes from equals a

623
00:24:13,419 --> 00:24:23,028
transform our operating on an input

624
00:24:17,960 --> 00:24:25,639
point P P prime equals R P now here's

625
00:24:23,028 --> 00:24:27,700
what it looks like expanded out on the

626
00:24:25,638 --> 00:24:29,138
left you see P prime it

627
00:24:27,700 --> 00:24:30,730
is a vector because this is

628
00:24:29,138 --> 00:24:32,138
three-dimensional if it was

629
00:24:30,730 --> 00:24:33,909
one-dimensional it would only be one

630
00:24:32,138 --> 00:24:36,428
value X but because it's

631
00:24:33,909 --> 00:24:38,559
three-dimensional it has three values XY

632
00:24:36,429 --> 00:24:41,259
and Z you can notice each of them has a

633
00:24:38,558 --> 00:24:43,839
prime because they are new values that

634
00:24:41,259 --> 00:24:46,720
I'm talking about here that are changes

635
00:24:43,839 --> 00:24:48,369
to P so I have concise or to work that

636
00:24:46,720 --> 00:24:50,679
into the notation where the XY and z are

637
00:24:48,369 --> 00:24:53,109
also the primes they're the new values

638
00:24:50,679 --> 00:24:54,700
of x y&amp;z I'm talking about in the middle

639
00:24:53,109 --> 00:24:57,699
I've got the same old equal sign again

640
00:24:54,700 --> 00:24:59,889
mirrors this equation exactly then I've

641
00:24:57,700 --> 00:25:02,110
got my transform our it's a bag of

642
00:24:59,888 --> 00:25:03,969
numbers I have no idea what these

643
00:25:02,109 --> 00:25:05,888
numbers mean yet I'm not even going to

644
00:25:03,970 --> 00:25:07,690
talk about what they mean I just know

645
00:25:05,888 --> 00:25:10,388
they're a big old matrix of numbers a b

646
00:25:07,690 --> 00:25:12,250
c d e f g h i okay and that's

647
00:25:10,388 --> 00:25:14,709
intentional now I am someone who's

648
00:25:12,250 --> 00:25:17,380
worked with graphics way too long so I

649
00:25:14,710 --> 00:25:18,850
have meanings and I have preconceived

650
00:25:17,380 --> 00:25:20,528
notions and all sorts of things that I

651
00:25:18,849 --> 00:25:22,480
apply when I see a three-dimensional

652
00:25:20,528 --> 00:25:24,849
matrix but right now we're not talking

653
00:25:22,480 --> 00:25:26,349
about those we're gonna pretend we just

654
00:25:24,849 --> 00:25:27,579
don't even we're not even thinking about

655
00:25:26,349 --> 00:25:28,599
these like that yet

656
00:25:27,579 --> 00:25:31,359
we just know there's a big bag of

657
00:25:28,599 --> 00:25:32,740
numbers in there and then finally we

658
00:25:31,359 --> 00:25:34,750
have P on the other side that's our

659
00:25:32,740 --> 00:25:36,909
input again three dimensions because the

660
00:25:34,750 --> 00:25:39,130
three dimension point XY and Z it tells

661
00:25:36,909 --> 00:25:41,950
us where in space this point is okay

662
00:25:39,130 --> 00:25:43,659
this is the simplest possible transform

663
00:25:41,950 --> 00:25:46,600
equation it doesn't even involve

664
00:25:43,659 --> 00:25:48,730
movement it only involves scale rotate

665
00:25:46,599 --> 00:25:50,619
shear that's really what this is going

666
00:25:48,730 --> 00:25:51,548
to involve why because the matrix is

667
00:25:50,619 --> 00:25:54,069
three dimensional

668
00:25:51,548 --> 00:25:56,668
for a three-dimensional input and in

669
00:25:54,069 --> 00:25:59,710
order to encompass things like

670
00:25:56,669 --> 00:26:01,149
translation or projection things like

671
00:25:59,710 --> 00:26:02,620
this we would have to have a four by

672
00:26:01,148 --> 00:26:04,119
four matrix that's a topic for another

673
00:26:02,619 --> 00:26:06,219
day you not to concern yourself with

674
00:26:04,119 --> 00:26:07,869
this just suffice to say all we can do

675
00:26:06,220 --> 00:26:10,419
with these equations mathematically is

676
00:26:07,869 --> 00:26:15,058
all we can do is rotate scale share

677
00:26:10,419 --> 00:26:18,059
those sorts of transforms okay all right

678
00:26:15,058 --> 00:26:18,058
so

679
00:26:18,069 --> 00:26:22,279
what I'm going to mention now and again

680
00:26:20,779 --> 00:26:23,599
it's okay if this is a little bit too

681
00:26:22,279 --> 00:26:25,399
much for people who haven't come to the

682
00:26:23,599 --> 00:26:27,139
math right now is to think about what

683
00:26:25,400 --> 00:26:28,670
does this bag of numbers mean because if

684
00:26:27,140 --> 00:26:30,020
you see something like this and you've

685
00:26:28,670 --> 00:26:31,700
never had linear algebra for it you're

686
00:26:30,019 --> 00:26:32,929
gonna be very confused right you gonna

687
00:26:31,700 --> 00:26:34,700
be like I don't know what's going on

688
00:26:32,929 --> 00:26:37,790
here I have no idea what's happening

689
00:26:34,700 --> 00:26:39,920
here right but once you start to learn

690
00:26:37,789 --> 00:26:41,480
more about how matrix multiplication

691
00:26:39,920 --> 00:26:43,070
works how a matrix multiplies a vector

692
00:26:41,480 --> 00:26:46,069
in this case on this side of the

693
00:26:43,069 --> 00:26:48,319
equation here we have a matrix times a

694
00:26:46,069 --> 00:26:50,119
vector what you will learn is that

695
00:26:48,319 --> 00:26:51,649
matrix multiplication is a very rote

696
00:26:50,119 --> 00:26:53,839
process you can learn how to do it it's

697
00:26:51,650 --> 00:26:56,840
very simple we've actually take a times

698
00:26:53,839 --> 00:26:58,819
X B times y C times E and we add them

699
00:26:56,839 --> 00:27:00,439
together then we do x times D it does

700
00:26:58,819 --> 00:27:02,119
right there's a rote process you use

701
00:27:00,440 --> 00:27:04,070
again don't mean to worry about it now

702
00:27:02,119 --> 00:27:06,859
it's not the focus of this lecture at

703
00:27:04,069 --> 00:27:09,109
all people who don't get it it's okay

704
00:27:06,859 --> 00:27:10,399
someday you will if you work on this

705
00:27:09,109 --> 00:27:11,689
kind of programming for a living but for

706
00:27:10,400 --> 00:27:13,610
those of you who get it you know how to

707
00:27:11,690 --> 00:27:15,080
do matrix multiplication you've probably

708
00:27:13,609 --> 00:27:16,039
seen it before you've definitely had it

709
00:27:15,079 --> 00:27:17,629
if you've gone to the knowledge of a

710
00:27:16,039 --> 00:27:19,399
class in college if you've ever worked

711
00:27:17,630 --> 00:27:20,750
on the 3d graphics textbook they've gone

712
00:27:19,400 --> 00:27:23,570
through this so it's something that's

713
00:27:20,750 --> 00:27:25,160
pretty common in 3d graphics however and

714
00:27:23,569 --> 00:27:28,700
here's the part that I kind of want to

715
00:27:25,160 --> 00:27:33,170
get to in this lecture even if you've

716
00:27:28,700 --> 00:27:35,330
had the basics of linear algebra the

717
00:27:33,170 --> 00:27:37,670
basics of 3d graphics programming a lot

718
00:27:35,329 --> 00:27:40,669
of people for whatever reason don't

719
00:27:37,670 --> 00:27:43,670
really understand how a matrix really

720
00:27:40,670 --> 00:27:45,170
works internally and some people don't

721
00:27:43,670 --> 00:27:46,850
know how to interpret the numbers in a

722
00:27:45,170 --> 00:27:47,840
matrix they just think of them as

723
00:27:46,849 --> 00:27:49,459
something that does a particular

724
00:27:47,839 --> 00:27:51,500
transfer may read in a book somehow

725
00:27:49,460 --> 00:27:53,539
somewhere how to make one of these

726
00:27:51,500 --> 00:27:55,970
matrices so they know how to make say a

727
00:27:53,539 --> 00:27:57,678
rotation matrix by using a formula that

728
00:27:55,970 --> 00:27:59,120
they've looked up in a book and they

729
00:27:57,679 --> 00:28:02,740
know that if they multiply the matrices

730
00:27:59,119 --> 00:28:05,569
in this format like I said before that

731
00:28:02,740 --> 00:28:09,019
they get a particular operation that

732
00:28:05,569 --> 00:28:10,939
occurs okay and that's all they know so

733
00:28:09,019 --> 00:28:12,710
what I want to focus on here is a little

734
00:28:10,940 --> 00:28:13,789
bit deeper understanding let's say you

735
00:28:12,710 --> 00:28:15,470
do know how to do that make sure because

736
00:28:13,789 --> 00:28:17,269
we don't really understand why or how

737
00:28:15,470 --> 00:28:20,210
it's working so let's take a look at

738
00:28:17,269 --> 00:28:23,269
this diagram here here is a set of

739
00:28:20,210 --> 00:28:24,620
points defined like the p value that i

740
00:28:23,269 --> 00:28:26,929
was talking about the previous equation

741
00:28:24,619 --> 00:28:28,759
so imagine any one of these points is

742
00:28:26,929 --> 00:28:30,530
just the p value so we're gonna take

743
00:28:28,759 --> 00:28:31,200
every point in the object and we'll do

744
00:28:30,529 --> 00:28:32,700
this transfer

745
00:28:31,200 --> 00:28:35,730
every single one of them to get a new

746
00:28:32,700 --> 00:28:37,049
object right now it goes a lot of times

747
00:28:35,730 --> 00:28:39,299
people are used to thinking left to

748
00:28:37,049 --> 00:28:41,490
right so because that's the way you read

749
00:28:39,299 --> 00:28:43,589
but in math oftentimes we go right to

750
00:28:41,490 --> 00:28:44,880
left more often because we're solving

751
00:28:43,589 --> 00:28:46,949
equations so we want the thing on the

752
00:28:44,880 --> 00:28:49,170
left side to be the one variable we've

753
00:28:46,950 --> 00:28:50,789
solved for right so that's why it looks

754
00:28:49,170 --> 00:28:53,519
like this so we're really reaching it

755
00:28:50,789 --> 00:28:55,649
right to left okay the inputs on this

756
00:28:53,519 --> 00:28:57,599
side and the outputs on this side the

757
00:28:55,650 --> 00:28:58,800
arrow goes that way that's just how it

758
00:28:57,599 --> 00:29:02,909
works in mathematics when you solve

759
00:28:58,799 --> 00:29:05,069
typically by convention so the new point

760
00:29:02,910 --> 00:29:08,040
we're getting here is a rotated object

761
00:29:05,069 --> 00:29:11,129
as you can see here right and the input

762
00:29:08,039 --> 00:29:13,349
is this object now each of the axes I've

763
00:29:11,130 --> 00:29:16,320
highlighted here I've highlighted the

764
00:29:13,349 --> 00:29:18,869
x-axis in red the green is the y axis

765
00:29:16,319 --> 00:29:21,000
and the z is the blue axis and what you

766
00:29:18,869 --> 00:29:23,459
can see over here is we take this input

767
00:29:21,000 --> 00:29:25,500
and it's around the world axis system

768
00:29:23,460 --> 00:29:27,960
it's just the basic axis system they're

769
00:29:25,500 --> 00:29:29,700
aligned when I apply this transform now

770
00:29:27,960 --> 00:29:33,059
I have transform the object you can see

771
00:29:29,700 --> 00:29:36,120
that it is rotated itself away from

772
00:29:33,059 --> 00:29:38,549
those world axes okay and what I've

773
00:29:36,119 --> 00:29:40,799
written here is I've written R sub W

774
00:29:38,549 --> 00:29:42,419
this is just it's free for me in

775
00:29:40,799 --> 00:29:43,950
mathematics to put a little subscript on

776
00:29:42,420 --> 00:29:48,630
something and say I'm just gonna denote

777
00:29:43,950 --> 00:29:51,299
this rotation matrix with R as a world

778
00:29:48,630 --> 00:29:52,470
rotation matrix W and I'm using that

779
00:29:51,299 --> 00:29:54,809
notation to say this is something that

780
00:29:52,470 --> 00:29:57,870
places an object into the world okay so

781
00:29:54,809 --> 00:30:00,029
it takes an object that's at rest and it

782
00:29:57,869 --> 00:30:01,289
puts it at some orientation in the world

783
00:30:00,029 --> 00:30:03,990
you can see that happening by the

784
00:30:01,289 --> 00:30:07,440
diagrams P prime is the new object

785
00:30:03,990 --> 00:30:11,519
that's been placed in the world so now I

786
00:30:07,440 --> 00:30:13,680
ask the question how does that bag of

787
00:30:11,519 --> 00:30:15,240
numbers in a matrix which maybe you've

788
00:30:13,680 --> 00:30:17,670
seen before but haven't thought too much

789
00:30:15,240 --> 00:30:19,680
about and those of you who've already

790
00:30:17,670 --> 00:30:20,940
watched the handmade Hero series should

791
00:30:19,680 --> 00:30:24,180
know the answer because we've gone over

792
00:30:20,940 --> 00:30:27,420
this but maybe you haven't what do those

793
00:30:24,180 --> 00:30:29,850
numbers mean well what I'd like to

794
00:30:27,420 --> 00:30:32,490
emphasize here is that actually there's

795
00:30:29,849 --> 00:30:34,379
a very specific structure to something

796
00:30:32,490 --> 00:30:37,289
like a matrix that rotates an object to

797
00:30:34,380 --> 00:30:39,720
place it into the world and in fact you

798
00:30:37,289 --> 00:30:43,139
can look directly at the numbers of that

799
00:30:39,720 --> 00:30:44,710
matrix and pull out specifically what

800
00:30:43,140 --> 00:30:47,440
the axes of the

801
00:30:44,710 --> 00:30:50,288
new object will be because they're read

802
00:30:47,440 --> 00:30:53,679
straight off the columns the columns of

803
00:30:50,288 --> 00:30:55,859
a matrix are actually the new axes of

804
00:30:53,679 --> 00:30:58,149
the object after it's been rotated

805
00:30:55,859 --> 00:30:59,709
believe it or not some people go through

806
00:30:58,148 --> 00:31:02,048
their whole programming crew not even

807
00:30:59,710 --> 00:31:03,850
knowing that they just learned that this

808
00:31:02,048 --> 00:31:05,619
is how you make a rotation matrix out of

809
00:31:03,849 --> 00:31:07,839
some book they never really thought too

810
00:31:05,619 --> 00:31:10,298
much about it and in fact this was an

811
00:31:07,839 --> 00:31:12,548
interview question I don't mean to

812
00:31:10,298 --> 00:31:14,470
spoiler it I won't even say where the

813
00:31:12,548 --> 00:31:16,690
interview question who actually gave it

814
00:31:14,470 --> 00:31:20,380
but let's just say a valve interview

815
00:31:16,690 --> 00:31:22,659
question actually involved asking the

816
00:31:20,380 --> 00:31:24,549
candidate these questions and you would

817
00:31:22,659 --> 00:31:26,860
be surprised at how many people can't

818
00:31:24,548 --> 00:31:28,960
give a very good answer because it's

819
00:31:26,859 --> 00:31:30,519
common to learn to use something without

820
00:31:28,960 --> 00:31:37,000
really knowing how it works

821
00:31:30,519 --> 00:31:37,778
even in graphics programming ok why why

822
00:31:37,000 --> 00:31:40,210
does that happen

823
00:31:37,778 --> 00:31:43,119
right I've basically just told you that

824
00:31:40,210 --> 00:31:47,380
if I look at a 3d rotation matrix the

825
00:31:43,119 --> 00:31:50,500
three axes right of the XY and Z world

826
00:31:47,380 --> 00:31:53,049
coordinates I've just said that's what

827
00:31:50,500 --> 00:31:56,079
happened like I just said that but why

828
00:31:53,048 --> 00:31:58,298
does it happen that way right why is it

829
00:31:56,079 --> 00:32:01,658
that these three axes appear in this

830
00:31:58,298 --> 00:32:03,778
matrix in this fashion why is it that

831
00:32:01,659 --> 00:32:06,669
that's what that equation does right

832
00:32:03,778 --> 00:32:09,220
well the answer is because I can look at

833
00:32:06,669 --> 00:32:12,788
matrix multiplication as producing a

834
00:32:09,220 --> 00:32:14,890
very specific result here okay so what

835
00:32:12,788 --> 00:32:16,599
I've done again for the benefit of those

836
00:32:14,890 --> 00:32:19,210
of you who maybe haven't done enough

837
00:32:16,599 --> 00:32:20,889
with matrices yet I've written out how

838
00:32:19,210 --> 00:32:24,610
the matrix multiplication works I

839
00:32:20,890 --> 00:32:27,690
alluded to it before I take a B and C of

840
00:32:24,609 --> 00:32:30,459
the matrix here and I multiply it by x

841
00:32:27,690 --> 00:32:33,519
y&amp;z of the input point and I add them

842
00:32:30,460 --> 00:32:36,700
together you can see it right here ax

843
00:32:33,519 --> 00:32:41,139
plus B y plus cz that's how I get my

844
00:32:36,700 --> 00:32:43,690
first row of my resulting point next row

845
00:32:41,140 --> 00:32:45,309
same thing but I move down one I use the

846
00:32:43,690 --> 00:32:47,528
next row of the matrix but the same

847
00:32:45,308 --> 00:32:49,389
input point finally last row of the

848
00:32:47,528 --> 00:32:51,849
matrix same input point and you can see

849
00:32:49,390 --> 00:32:54,490
very easily here how the math works out

850
00:32:51,849 --> 00:32:57,699
anyone who's gone to even a pre-algebra

851
00:32:54,490 --> 00:32:58,659
class can understand this side here so

852
00:32:57,700 --> 00:33:00,669
again

853
00:32:58,659 --> 00:33:03,609
it's very easy to understand these

854
00:33:00,669 --> 00:33:06,070
things it looks intimidating when it's

855
00:33:03,608 --> 00:33:08,949
presented like this or like this because

856
00:33:06,069 --> 00:33:10,839
you aren't familiar with it perhaps but

857
00:33:08,950 --> 00:33:12,970
once I write it out it's very simple

858
00:33:10,839 --> 00:33:14,470
right these are very simple things that

859
00:33:12,970 --> 00:33:16,569
don't involve anything there isn't even

860
00:33:14,470 --> 00:33:18,669
a squared term or a square root or

861
00:33:16,569 --> 00:33:22,689
imaginary numbers none of these things

862
00:33:18,669 --> 00:33:24,159
are involved right very very simple so

863
00:33:22,690 --> 00:33:25,509
let's concentrate on that left side

864
00:33:24,159 --> 00:33:27,519
because everyone can understand that

865
00:33:25,509 --> 00:33:28,720
left side and what you'll notice here is

866
00:33:27,519 --> 00:33:33,788
that if I look there's a very specific

867
00:33:28,720 --> 00:33:38,048
structure ad and G the column of this

868
00:33:33,788 --> 00:33:42,158
matrix always multiplies X be e and H

869
00:33:38,048 --> 00:33:46,058
always multiplies Y C F and I right

870
00:33:42,159 --> 00:33:49,960
always multiply Z if you imagine pulling

871
00:33:46,058 --> 00:33:55,028
those out you can start to see exactly

872
00:33:49,960 --> 00:33:56,950
how this operation works I'm not really

873
00:33:55,028 --> 00:33:58,888
doing a matrix multiplication I mean I

874
00:33:56,950 --> 00:34:01,569
am but I'll have to think of it that way

875
00:33:58,888 --> 00:34:04,959
instead I could think of it as the input

876
00:34:01,569 --> 00:34:07,689
x coordinate multiplied by a new vector

877
00:34:04,960 --> 00:34:10,358
the input y coordinate multiplied by a

878
00:34:07,690 --> 00:34:13,210
new vector the Z coordinate multiplied

879
00:34:10,358 --> 00:34:15,848
by a new vector what's this doing it's

880
00:34:13,210 --> 00:34:20,918
just moving me out along these three

881
00:34:15,849 --> 00:34:23,409
axes right that's all I'm doing you can

882
00:34:20,918 --> 00:34:25,480
see it very clearly here if I reduce the

883
00:34:23,409 --> 00:34:28,210
notation to just talk about axes here's

884
00:34:25,480 --> 00:34:30,940
my x axis in world space y axis in world

885
00:34:28,210 --> 00:34:33,730
space z axis in world space the X input

886
00:34:30,940 --> 00:34:36,668
multiplies the x axis the Y input the y

887
00:34:33,730 --> 00:34:39,369
axis the Z and put the z axis that's why

888
00:34:36,668 --> 00:34:40,960
these are the new axes it's all very

889
00:34:39,369 --> 00:34:45,099
simple if you go look at the scalars

890
00:34:40,960 --> 00:34:47,440
right very very straightforward so you

891
00:34:45,099 --> 00:34:49,359
can understand very easily how these

892
00:34:47,440 --> 00:34:50,619
things are working you don't even need

893
00:34:49,358 --> 00:34:52,480
to think of it in terms of matrices you

894
00:34:50,619 --> 00:34:55,028
can just think of it as multiplying each

895
00:34:52,480 --> 00:34:59,619
vector by how far along I want to go and

896
00:34:55,028 --> 00:35:02,559
that's it so here's a diagram if in case

897
00:34:59,619 --> 00:35:03,760
this is not easy for you to mentally

898
00:35:02,559 --> 00:35:06,700
conceptualize what's happening

899
00:35:03,760 --> 00:35:08,650
geometrically right if I have an X

900
00:35:06,699 --> 00:35:12,469
vector in world space right like I said

901
00:35:08,650 --> 00:35:14,150
I did I want to go X distance along it

902
00:35:12,469 --> 00:35:15,500
that's what my x-coordinate will mean in

903
00:35:14,150 --> 00:35:17,450
the new coordinate system right

904
00:35:15,500 --> 00:35:19,489
same thing with Y along the y axis the

905
00:35:17,449 --> 00:35:21,769
same thing with Z along the z axis so

906
00:35:19,489 --> 00:35:23,868
effectively I'm building my new vector

907
00:35:21,769 --> 00:35:26,059
right I'm building my new vector out

908
00:35:23,869 --> 00:35:28,010
this way I'm building that by just

909
00:35:26,059 --> 00:35:30,559
stepping along each of the new axes and

910
00:35:28,010 --> 00:35:36,190
that's why I can look at this matrix and

911
00:35:30,559 --> 00:35:36,190
say these are the new axes of the object

912
00:35:37,900 --> 00:35:48,680
all right let's do it one more time here

913
00:35:44,989 --> 00:35:54,618
is the matrix it's the exact same matrix

914
00:35:48,679 --> 00:35:55,789
a b c d e f g h i right same packet

915
00:35:54,619 --> 00:35:58,760
numbers even if i want to it could be

916
00:35:55,789 --> 00:36:00,588
the exact same matrix equivalent but

917
00:35:58,760 --> 00:36:02,450
this time we're gonna look at it

918
00:36:00,588 --> 00:36:05,299
differently we're gonna look at it as

919
00:36:02,449 --> 00:36:08,210
doing something different okay another

920
00:36:05,300 --> 00:36:11,660
way to conceptualize it let's suppose

921
00:36:08,210 --> 00:36:15,440
that I wanted to say this was a camera

922
00:36:11,659 --> 00:36:17,809
transform right so I'm handing you a

923
00:36:15,440 --> 00:36:20,960
matrix and I'm saying I'm going to use

924
00:36:17,809 --> 00:36:24,980
this as the transform that map's the

925
00:36:20,960 --> 00:36:28,220
world into a particular camera space so

926
00:36:24,980 --> 00:36:29,719
that I can render it again still the

927
00:36:28,219 --> 00:36:32,568
three dimensional matrix I'm just gonna

928
00:36:29,719 --> 00:36:37,909
use it for a different purpose how can

929
00:36:32,568 --> 00:36:39,949
we interpret what it does now I know

930
00:36:37,909 --> 00:36:41,868
this is foreign concept but remember a

931
00:36:39,949 --> 00:36:44,689
three by three matrix can be used for

932
00:36:41,869 --> 00:36:48,140
all sorts of purposes so how I choose to

933
00:36:44,690 --> 00:36:50,960
use it will determine the questions I

934
00:36:48,139 --> 00:36:53,059
might want to ask and how I get those

935
00:36:50,960 --> 00:36:55,880
answers if I'm using my three

936
00:36:53,059 --> 00:36:58,369
dimensional matrix to place an object in

937
00:36:55,880 --> 00:37:00,769
the world then the numbers in the matrix

938
00:36:58,369 --> 00:37:02,510
are interpreted a specific way not

939
00:37:00,769 --> 00:37:05,088
because the multiplication is done

940
00:37:02,510 --> 00:37:07,520
differently but because how I use the

941
00:37:05,088 --> 00:37:10,460
results determines which numbers are

942
00:37:07,519 --> 00:37:13,009
important and why right in terms of my

943
00:37:10,460 --> 00:37:15,889
understanding the three-dimensional math

944
00:37:13,010 --> 00:37:18,140
will always be the same but the results

945
00:37:15,889 --> 00:37:20,568
that I produce are always based on what

946
00:37:18,139 --> 00:37:22,368
I use those results for and so how I

947
00:37:20,568 --> 00:37:24,559
want to think about the numbers of the

948
00:37:22,369 --> 00:37:25,750
matrix will change based on what that

949
00:37:24,559 --> 00:37:27,369
matrix is doing

950
00:37:25,750 --> 00:37:29,409
and this should be obvious anyone who

951
00:37:27,369 --> 00:37:32,469
thinks about it because matrixes are

952
00:37:29,409 --> 00:37:34,299
just for everything so obviously I can't

953
00:37:32,469 --> 00:37:36,399
always think about a bag of numbers the

954
00:37:34,300 --> 00:37:37,960
same way because that bag of numbers is

955
00:37:36,400 --> 00:37:40,720
going to be used in many many different

956
00:37:37,960 --> 00:37:44,230
contexts so I must learn to think about

957
00:37:40,719 --> 00:37:49,179
the numbers in that matrix based on its

958
00:37:44,230 --> 00:37:52,809
use so same kind of matrix 3x3 still a

959
00:37:49,179 --> 00:37:54,339
rotation no changes in my requirements

960
00:37:52,809 --> 00:37:55,900
for the matrix but now I'm using it for

961
00:37:54,340 --> 00:37:57,430
something different I'm using it as a

962
00:37:55,900 --> 00:37:59,769
transform that will transform the world

963
00:37:57,429 --> 00:38:03,299
into a particular orientation for

964
00:37:59,769 --> 00:38:06,099
rendering how do I interpret the values

965
00:38:03,300 --> 00:38:09,789
well we have to start by saying the

966
00:38:06,099 --> 00:38:11,710
operation is now reversed I'm starting

967
00:38:09,789 --> 00:38:14,079
with an object on the right-hand side

968
00:38:11,710 --> 00:38:18,280
that is somewhere in the world for real

969
00:38:14,079 --> 00:38:21,130
and what I want to do is I want to move

970
00:38:18,280 --> 00:38:24,100
it into a space where it's aligned with

971
00:38:21,130 --> 00:38:25,900
a new set of axes so let's suppose we're

972
00:38:24,099 --> 00:38:28,630
talking about the object that is the

973
00:38:25,900 --> 00:38:31,360
camera this is the object I want to view

974
00:38:28,630 --> 00:38:34,420
the world from well obviously what I

975
00:38:31,360 --> 00:38:38,410
know about this then is that the camera

976
00:38:34,420 --> 00:38:40,329
transfer must set that object aligned

977
00:38:38,409 --> 00:38:42,369
with the world axes because once I

978
00:38:40,329 --> 00:38:43,329
render everything must be aligned with

979
00:38:42,369 --> 00:38:45,549
the world axis because I'm going to

980
00:38:43,329 --> 00:38:48,730
render down the world axis system right

981
00:38:45,550 --> 00:38:52,080
so the act of rendering a camera

982
00:38:48,730 --> 00:38:55,539
transfer must move the world into a

983
00:38:52,079 --> 00:38:57,489
specific space that is the camera space

984
00:38:55,539 --> 00:39:00,130
so that the world axis and the cameras

985
00:38:57,489 --> 00:39:02,500
are now aligned at the start they won't

986
00:39:00,130 --> 00:39:03,970
be aligned and afterward they will be

987
00:39:02,500 --> 00:39:08,889
again right to left reading because

988
00:39:03,969 --> 00:39:12,879
we've solved for the left hand side all

989
00:39:08,889 --> 00:39:15,039
right what do these numbers mean well it

990
00:39:12,880 --> 00:39:18,730
might be confusing and surprising at

991
00:39:15,039 --> 00:39:22,809
first but actually the opposite thing is

992
00:39:18,730 --> 00:39:27,400
true of a camera transform as an object

993
00:39:22,809 --> 00:39:31,869
transform a camera transform is read by

994
00:39:27,400 --> 00:39:34,780
its rows each row gives the axis in

995
00:39:31,869 --> 00:39:37,059
world space of the camera that will

996
00:39:34,780 --> 00:39:39,250
become the aligned camera after the

997
00:39:37,059 --> 00:39:41,440
transform is over so

998
00:39:39,250 --> 00:39:43,659
you can see we've got a read access for

999
00:39:41,440 --> 00:39:45,610
the ex a yellow I'm sorry a green access

1000
00:39:43,659 --> 00:39:47,980
for the Y and a blue access for the Z

1001
00:39:45,610 --> 00:39:50,440
and here you can see where they are

1002
00:39:47,980 --> 00:39:52,659
placed in the matrix just by looking at

1003
00:39:50,440 --> 00:39:54,730
the matrices numbers you know those axes

1004
00:39:52,659 --> 00:39:59,129
straight off if you know this is a

1005
00:39:54,730 --> 00:40:02,710
camera transform those are the axes why

1006
00:39:59,130 --> 00:40:04,809
why is this the case why is it that the

1007
00:40:02,710 --> 00:40:07,000
x axis of the camera goes of the row in

1008
00:40:04,809 --> 00:40:08,170
the top row the Y x2 the camera goes in

1009
00:40:07,000 --> 00:40:12,820
the middle row and the Z acts of the

1010
00:40:08,170 --> 00:40:14,170
camera it goes in the bottom row again

1011
00:40:12,820 --> 00:40:15,910
it's the exact same equation is with the

1012
00:40:14,170 --> 00:40:17,590
worldspace one how is it that the

1013
00:40:15,909 --> 00:40:19,119
meaning can be looked at in these two

1014
00:40:17,590 --> 00:40:20,530
totally different ways just based on

1015
00:40:19,119 --> 00:40:23,799
whether I was using it for one thing or

1016
00:40:20,530 --> 00:40:26,519
using it for another thing right well

1017
00:40:23,800 --> 00:40:29,860
the answer gets back to the exact same

1018
00:40:26,519 --> 00:40:33,400
scalar equation and again it's because

1019
00:40:29,860 --> 00:40:36,070
matrix math only does one thing so if I

1020
00:40:33,400 --> 00:40:37,840
use it for one purpose I have to analyze

1021
00:40:36,070 --> 00:40:39,550
it one way and if I use it for another

1022
00:40:37,840 --> 00:40:42,039
purpose after you analyze it another way

1023
00:40:39,550 --> 00:40:44,410
but the scalar math can't change it's

1024
00:40:42,039 --> 00:40:45,579
still a matrix multiply and it still has

1025
00:40:44,409 --> 00:40:47,649
to produce the exact same results

1026
00:40:45,579 --> 00:40:50,319
because the underlying computation

1027
00:40:47,650 --> 00:40:52,000
doesn't change just because I mentally

1028
00:40:50,320 --> 00:40:55,420
wanted to use a matrix for something

1029
00:40:52,000 --> 00:40:58,960
different so let's take a look at these

1030
00:40:55,420 --> 00:41:02,500
scalars over here how can I get an axis

1031
00:40:58,960 --> 00:41:04,329
out of ABCDE F and G H I and why would

1032
00:41:02,500 --> 00:41:07,809
they mean the camera transform I don't

1033
00:41:04,329 --> 00:41:10,210
understand let's do the same thing we

1034
00:41:07,809 --> 00:41:12,070
did before before we observe that we

1035
00:41:10,210 --> 00:41:14,260
could produce structure out of this

1036
00:41:12,070 --> 00:41:15,880
unstructured set of scalar equations and

1037
00:41:14,260 --> 00:41:16,960
they're not with equations they're

1038
00:41:15,880 --> 00:41:18,099
computations really because we're

1039
00:41:16,960 --> 00:41:22,360
talking about just this side there's no

1040
00:41:18,099 --> 00:41:24,639
equal sign anymore out of these scalar

1041
00:41:22,360 --> 00:41:26,920
expressions how can I produce that

1042
00:41:24,639 --> 00:41:29,079
structure well this time what I'd like

1043
00:41:26,920 --> 00:41:32,980
to do is think of it as a dot product

1044
00:41:29,079 --> 00:41:35,380
instead write a dot product is the thing

1045
00:41:32,980 --> 00:41:40,449
we were actually doing to do the matrix

1046
00:41:35,380 --> 00:41:43,720
math ABC XYZ ax plus B y plus cz the dot

1047
00:41:40,449 --> 00:41:45,059
product is exactly that operation now if

1048
00:41:43,719 --> 00:41:47,889
you've never heard of a dot product or

1049
00:41:45,059 --> 00:41:50,710
I'm sorry to throw the term at you but

1050
00:41:47,889 --> 00:41:52,989
again the math incredibly simple if I

1051
00:41:50,710 --> 00:41:55,630
have one vector X Y Z and another

1052
00:41:52,989 --> 00:41:59,049
vector ABC I'm literally just talking

1053
00:41:55,630 --> 00:42:01,300
about multiplying the X's Y's and Z's of

1054
00:41:59,050 --> 00:42:04,390
each and adding them together that's it

1055
00:42:01,300 --> 00:42:05,850
again so simple it's pre-algebra you

1056
00:42:04,389 --> 00:42:07,690
don't even have to solve an equation

1057
00:42:05,849 --> 00:42:09,309
nothing involved it's just

1058
00:42:07,690 --> 00:42:12,309
multiplication in addition that's it

1059
00:42:09,309 --> 00:42:15,369
that's a dot product well if you take a

1060
00:42:12,309 --> 00:42:18,699
look here you can see that those dot

1061
00:42:15,369 --> 00:42:24,430
products are in each row every row is a

1062
00:42:18,699 --> 00:42:26,409
dot product so let's take a look if we

1063
00:42:24,429 --> 00:42:28,509
were to isolate our dot products what do

1064
00:42:26,409 --> 00:42:33,429
we get these are the three dot products

1065
00:42:28,510 --> 00:42:36,820
we get ABC XYZ d e f dot X Y Z and G H I

1066
00:42:33,429 --> 00:42:39,909
dot X Y Z right those are the dot

1067
00:42:36,820 --> 00:42:44,140
products I get which means effectively

1068
00:42:39,909 --> 00:42:47,889
what I have done is I've taken each row

1069
00:42:44,139 --> 00:42:51,000
of the camera transform and dotted it

1070
00:42:47,889 --> 00:42:54,009
with the input point that produces

1071
00:42:51,000 --> 00:42:58,000
exactly the operation we want for a

1072
00:42:54,010 --> 00:43:03,220
camera the input point measured along

1073
00:42:58,000 --> 00:43:06,340
the x axis of the X row first row of the

1074
00:43:03,219 --> 00:43:09,309
matrix the input point measured along

1075
00:43:06,340 --> 00:43:11,140
the Y row the input point measured along

1076
00:43:09,309 --> 00:43:12,400
the Z row now for those of you

1077
00:43:11,139 --> 00:43:14,379
unfamiliar with the dot product you may

1078
00:43:12,400 --> 00:43:16,090
be like well ok I don't understand what

1079
00:43:14,380 --> 00:43:17,920
you mean by that would even mean by

1080
00:43:16,090 --> 00:43:19,930
measured by err why do I care that I'm

1081
00:43:17,920 --> 00:43:21,970
taking three dot products I believe you

1082
00:43:19,929 --> 00:43:23,710
because I can see that these are three

1083
00:43:21,969 --> 00:43:28,149
of the things that you said it's three

1084
00:43:23,710 --> 00:43:33,220
of these things right but why does that

1085
00:43:28,150 --> 00:43:34,840
produce a camera transform well in order

1086
00:43:33,219 --> 00:43:37,089
to answer that question we have to get a

1087
00:43:34,840 --> 00:43:39,760
little bit deeper into the mathematics

1088
00:43:37,090 --> 00:43:41,530
but let's go ahead and do that I just

1089
00:43:39,760 --> 00:43:45,010
said a dot product is this equation

1090
00:43:41,530 --> 00:43:47,019
right if I have two vectors the X the Y

1091
00:43:45,010 --> 00:43:49,200
and the Z get multiplied and added

1092
00:43:47,019 --> 00:43:52,090
together and we notate it this way a

1093
00:43:49,199 --> 00:43:53,909
transpose B now why do we notate it

1094
00:43:52,090 --> 00:43:57,100
trade transpose B what does that mean

1095
00:43:53,909 --> 00:43:59,559
well transpose in linear algebra means

1096
00:43:57,099 --> 00:44:01,868
to flip something around its diagonal

1097
00:43:59,559 --> 00:44:05,108
okay and you can actually see that here

1098
00:44:01,869 --> 00:44:06,730
this and this are both three-dimensional

1099
00:44:05,108 --> 00:44:09,369
vectors but one has been

1100
00:44:06,730 --> 00:44:12,250
flipped it's been laid on its side right

1101
00:44:09,369 --> 00:44:14,858
so you can think of this as a transpose

1102
00:44:12,250 --> 00:44:18,579
B because this is how we normally write

1103
00:44:14,858 --> 00:44:20,199
a vector vertically X Y Z right and I

1104
00:44:18,579 --> 00:44:21,400
don't want to get too bogged down in the

1105
00:44:20,199 --> 00:44:23,589
linear algebra there are actually

1106
00:44:21,400 --> 00:44:27,160
reasons why we write a three-dimensional

1107
00:44:23,590 --> 00:44:28,990
point or a 3-dimensional vector lined up

1108
00:44:27,159 --> 00:44:30,339
like that and there's some minutia there

1109
00:44:28,989 --> 00:44:31,709
if you wanted to get into it

1110
00:44:30,340 --> 00:44:33,400
it's not relevant to our current

1111
00:44:31,710 --> 00:44:35,800
conversation but let's just say there's

1112
00:44:33,400 --> 00:44:37,809
a reason if you go deeper into the math

1113
00:44:35,800 --> 00:44:40,630
Y summer vertical and summer horizontal

1114
00:44:37,809 --> 00:44:43,179
but if we were to take vectors that we

1115
00:44:40,630 --> 00:44:44,470
all would be considering vertical and we

1116
00:44:43,179 --> 00:44:47,019
lay one down on its side

1117
00:44:44,469 --> 00:44:49,089
that's a transpose operation we're

1118
00:44:47,019 --> 00:44:50,769
taking it and the rows become columns

1119
00:44:49,090 --> 00:44:53,530
and the columns become rows since

1120
00:44:50,769 --> 00:44:55,679
there's only one column it becomes a row

1121
00:44:53,530 --> 00:44:58,510
when we transpose it so we say a

1122
00:44:55,679 --> 00:45:01,779
transpose B for a dot product we say

1123
00:44:58,510 --> 00:45:05,200
that because we're lying this one down

1124
00:45:01,780 --> 00:45:07,960
on its side and this one is still

1125
00:45:05,199 --> 00:45:10,358
vertical all right

1126
00:45:07,960 --> 00:45:12,039
so you can see this operation drawn out

1127
00:45:10,358 --> 00:45:14,409
for you here it's very simple hopefully

1128
00:45:12,039 --> 00:45:16,929
it makes good sense when I take a vector

1129
00:45:14,409 --> 00:45:18,819
a and I transpose it I'm laying it down

1130
00:45:16,929 --> 00:45:20,799
its side column to come rows rows become

1131
00:45:18,820 --> 00:45:23,170
columns and you can do this with a

1132
00:45:20,800 --> 00:45:24,580
matrix to anything that is a

1133
00:45:23,170 --> 00:45:27,940
two-dimensional grid of numbers like

1134
00:45:24,579 --> 00:45:29,108
this you can do it too right and by the

1135
00:45:27,940 --> 00:45:30,159
way there's multi-dimensional versions

1136
00:45:29,108 --> 00:45:31,960
of this but again we don't care about

1137
00:45:30,159 --> 00:45:34,569
that for our purposes we're totally fine

1138
00:45:31,960 --> 00:45:36,730
with just these so here we see a

1139
00:45:34,570 --> 00:45:39,190
transpose B written out you can see that

1140
00:45:36,730 --> 00:45:41,320
a gets transposed to B does not they

1141
00:45:39,190 --> 00:45:43,000
multiplied together just in that very

1142
00:45:41,320 --> 00:45:44,619
straightforward way that all of matrix

1143
00:45:43,000 --> 00:45:45,909
multiplication was working as even if

1144
00:45:44,619 --> 00:45:49,900
you didn't know it you've seen me do it

1145
00:45:45,909 --> 00:45:53,049
a couple times already right now and we

1146
00:45:49,900 --> 00:45:54,820
produce as a result the dot product the

1147
00:45:53,050 --> 00:45:56,740
result that is the dot product it's one

1148
00:45:54,820 --> 00:45:58,660
scalar it's a single value each of these

1149
00:45:56,739 --> 00:46:03,039
multiplied together and give us a single

1150
00:45:58,659 --> 00:46:04,868
value like five right these were more

1151
00:46:03,039 --> 00:46:07,630
compound values they have three values

1152
00:46:04,869 --> 00:46:10,210
in them five seven nine three two one

1153
00:46:07,630 --> 00:46:12,250
whatever but this result here it's one

1154
00:46:10,210 --> 00:46:14,980
value so it the dot product by its

1155
00:46:12,250 --> 00:46:17,289
nature is contractual right it brings

1156
00:46:14,980 --> 00:46:19,780
things together and reduces their

1157
00:46:17,289 --> 00:46:27,789
dimension

1158
00:46:19,780 --> 00:46:30,250
okay so how does this produce a camera

1159
00:46:27,789 --> 00:46:33,130
transform it was very easy to see in

1160
00:46:30,250 --> 00:46:35,679
that walking out along the axis form how

1161
00:46:33,130 --> 00:46:37,660
multiplying vectors by scalars produced

1162
00:46:35,679 --> 00:46:39,699
the worldspace transform hopefully that

1163
00:46:37,659 --> 00:46:41,980
made sense to everybody but the dot

1164
00:46:39,699 --> 00:46:43,599
product is a little harder to grok why

1165
00:46:41,980 --> 00:46:45,820
would that produce a camera transform

1166
00:46:43,599 --> 00:46:47,440
why does that produce the basis well the

1167
00:46:45,820 --> 00:46:50,590
reason is because the dot product

1168
00:46:47,440 --> 00:46:55,420
actually produces a very special version

1169
00:46:50,590 --> 00:46:56,680
of the law of cosines and I will walk

1170
00:46:55,420 --> 00:46:59,230
you through what that is because it's a

1171
00:46:56,679 --> 00:47:01,359
little hard to understand here is a dot

1172
00:46:59,230 --> 00:47:02,740
B at the top hopefully everyone

1173
00:47:01,360 --> 00:47:04,539
understands that this is what we mean by

1174
00:47:02,739 --> 00:47:06,039
that and again that's just the notation

1175
00:47:04,539 --> 00:47:07,840
we use we write it like that to

1176
00:47:06,039 --> 00:47:10,659
represent this scalar multiplication and

1177
00:47:07,840 --> 00:47:12,130
addition okay we write it like this if

1178
00:47:10,659 --> 00:47:13,989
we're gonna be a little fancier cuz

1179
00:47:12,130 --> 00:47:16,210
that's the more matrix like notation

1180
00:47:13,989 --> 00:47:19,479
this is the more informal notation but

1181
00:47:16,210 --> 00:47:21,730
what both of these actually compute and

1182
00:47:19,480 --> 00:47:24,369
I'll show you how they do it what both

1183
00:47:21,730 --> 00:47:28,480
of these actually compute is the length

1184
00:47:24,369 --> 00:47:31,779
of the input vector a the length of the

1185
00:47:28,480 --> 00:47:34,570
input vector B multiplied together times

1186
00:47:31,780 --> 00:47:36,850
the cosine of the angle between the two

1187
00:47:34,570 --> 00:47:40,420
vectors believe it or not that's what

1188
00:47:36,849 --> 00:47:41,860
they produce so this single scalar value

1189
00:47:40,420 --> 00:47:45,159
produced by this scalar equation

1190
00:47:41,860 --> 00:47:46,809
actually has all of this meaning length

1191
00:47:45,159 --> 00:47:50,289
of a times length of B times cosine

1192
00:47:46,809 --> 00:47:57,909
theta all of that meaning is wrapped up

1193
00:47:50,289 --> 00:48:03,190
right in that one operation how how is

1194
00:47:57,909 --> 00:48:04,960
it possible what right well it turns out

1195
00:48:03,190 --> 00:48:08,800
that you can actually see this pretty

1196
00:48:04,960 --> 00:48:12,280
easily if you actually just look at how

1197
00:48:08,800 --> 00:48:14,860
the equation breaks down right it's

1198
00:48:12,280 --> 00:48:17,980
actually not that difficult to see how

1199
00:48:14,860 --> 00:48:20,950
it works right and so what we can do

1200
00:48:17,980 --> 00:48:23,409
here is we can see that if we were to

1201
00:48:20,949 --> 00:48:25,960
take the law of cosines which is this

1202
00:48:23,409 --> 00:48:29,259
equation up here and again I apologize

1203
00:48:25,960 --> 00:48:32,500
for not proving the law of cosines to

1204
00:48:29,260 --> 00:48:33,640
you but unfortunately that would be a

1205
00:48:32,500 --> 00:48:35,710
whole different

1206
00:48:33,639 --> 00:48:37,298
ballgame right proving the law of

1207
00:48:35,710 --> 00:48:38,798
cosines or where that comes from we

1208
00:48:37,298 --> 00:48:41,440
start to get deeper and deeper down the

1209
00:48:38,798 --> 00:48:43,750
rabbit hole of math but anyone who's had

1210
00:48:41,440 --> 00:48:46,929
high school geometry or trigonometry

1211
00:48:43,750 --> 00:48:48,909
sorry will have seen the law of cosines

1212
00:48:46,929 --> 00:48:53,048
already I've written it for you at the

1213
00:48:48,909 --> 00:48:55,358
top it's a minus B so we take two

1214
00:48:53,048 --> 00:48:58,538
vectors we subtract them we take the

1215
00:48:55,358 --> 00:49:00,308
length of a minus B squared and we know

1216
00:48:58,539 --> 00:49:03,278
that the law of cosines says that that

1217
00:49:00,309 --> 00:49:05,829
equals right the length of a squared

1218
00:49:03,278 --> 00:49:07,630
plus the length of B squared minus two

1219
00:49:05,829 --> 00:49:09,190
times the length of a length of B times

1220
00:49:07,630 --> 00:49:12,789
the cosine of theta that's the law of

1221
00:49:09,190 --> 00:49:15,940
cosines right a fundamental property of

1222
00:49:12,789 --> 00:49:18,160
trigonometry well if we just work these

1223
00:49:15,940 --> 00:49:19,720
two equations out so I'm going to move

1224
00:49:18,159 --> 00:49:22,179
this stuff over to the other side I'm

1225
00:49:19,719 --> 00:49:24,368
gonna divide by the two right or the

1226
00:49:22,179 --> 00:49:27,159
negative two in this case look at what I

1227
00:49:24,369 --> 00:49:30,010
get I get length of a plus length of B

1228
00:49:27,159 --> 00:49:32,828
minus the squared length of a minus B

1229
00:49:30,010 --> 00:49:35,460
over two and if I simplify this equation

1230
00:49:32,829 --> 00:49:39,490
I get the dot product on the left side

1231
00:49:35,460 --> 00:49:41,858
what's on the right the exact thing I

1232
00:49:39,489 --> 00:49:43,750
said the dot product produced so just

1233
00:49:41,858 --> 00:49:45,250
using the law of cosines from your high

1234
00:49:43,750 --> 00:49:48,219
school trigonometry class you can see

1235
00:49:45,250 --> 00:49:51,849
exactly what the law of cosine says your

1236
00:49:48,219 --> 00:49:53,108
dot product will give you all right so

1237
00:49:51,849 --> 00:49:54,369
hopefully you believe me there and I

1238
00:49:53,108 --> 00:49:55,750
apologize for not proving the law of

1239
00:49:54,369 --> 00:49:57,849
cosines to you but at some point you got

1240
00:49:55,750 --> 00:49:59,018
to stop math has axioms and eventually

1241
00:49:57,849 --> 00:50:00,970
you're gonna hit a wall somewhere I

1242
00:49:59,018 --> 00:50:02,528
chose to stop it there I would encourage

1243
00:50:00,969 --> 00:50:04,328
anyone who really wants to drill all the

1244
00:50:02,528 --> 00:50:06,460
way down go look up the law of cosines

1245
00:50:04,329 --> 00:50:12,430
it's great extra reading to accompany

1246
00:50:06,460 --> 00:50:14,588
this lecture all right so why does this

1247
00:50:12,429 --> 00:50:15,969
help us with our camera transform well

1248
00:50:14,588 --> 00:50:18,608
the reason this helps us with our camera

1249
00:50:15,969 --> 00:50:21,278
transform is because if you look at what

1250
00:50:18,608 --> 00:50:25,000
this equation does a very special result

1251
00:50:21,278 --> 00:50:29,048
will occur if we know one of our axes is

1252
00:50:25,000 --> 00:50:31,088
unit length okay so what we know about

1253
00:50:29,048 --> 00:50:32,380
world axes is usually we keep them unit

1254
00:50:31,088 --> 00:50:34,630
length if we want to rotate something

1255
00:50:32,380 --> 00:50:36,670
all the axes stay length one right we

1256
00:50:34,630 --> 00:50:38,829
don't scale we don't stretch or shrink

1257
00:50:36,670 --> 00:50:42,608
those axes they all say unit one they

1258
00:50:38,829 --> 00:50:47,160
started out you know an x axis 1 0 0 y

1259
00:50:42,608 --> 00:50:51,009
axis 0 1 0 z axis 0 0 1 right

1260
00:50:47,159 --> 00:50:54,368
so we tend to know that our axes have a

1261
00:50:51,010 --> 00:50:57,040
length of 1 that means the dot product

1262
00:50:54,369 --> 00:51:00,760
with one of the axes whose length is 1

1263
00:50:57,039 --> 00:51:03,570
that length term disappears we get just

1264
00:51:00,760 --> 00:51:05,770
the length of the the first input right

1265
00:51:03,570 --> 00:51:07,450
times the cosine of the angle between

1266
00:51:05,769 --> 00:51:10,358
the two vectors and this is very

1267
00:51:07,449 --> 00:51:11,618
powerful why is it powerful well think

1268
00:51:10,358 --> 00:51:13,980
of what happens when we actually

1269
00:51:11,619 --> 00:51:17,769
construct the geometry of the situation

1270
00:51:13,980 --> 00:51:20,440
here is our B with length 1 this is an

1271
00:51:17,769 --> 00:51:23,829
axis right this is gonna be one of our

1272
00:51:20,440 --> 00:51:27,010
world axis let's say then we have our

1273
00:51:23,829 --> 00:51:28,599
vector a it's any length it wants to be

1274
00:51:27,010 --> 00:51:30,579
it's just an arbitrary point in the

1275
00:51:28,599 --> 00:51:31,559
world or an arbitrary vector whatever we

1276
00:51:30,579 --> 00:51:36,250
want

1277
00:51:31,559 --> 00:51:38,259
well this forms a right triangle here is

1278
00:51:36,250 --> 00:51:40,780
a right triangle right here we can

1279
00:51:38,260 --> 00:51:42,880
choose to drop the perpendicular down

1280
00:51:40,780 --> 00:51:44,680
from this particular point that we've

1281
00:51:42,880 --> 00:51:47,220
stretched out to along the vector a we

1282
00:51:44,679 --> 00:51:51,118
can drop that perpendicular down and

1283
00:51:47,219 --> 00:51:54,818
what we know is that where we would land

1284
00:51:51,119 --> 00:51:58,000
once we have a right triangle we can

1285
00:51:54,818 --> 00:51:59,440
basically compute anything we want just

1286
00:51:58,000 --> 00:52:03,369
using our standard trigonometric

1287
00:51:59,440 --> 00:52:07,088
functions right because we know the

1288
00:52:03,369 --> 00:52:10,300
ratio of this leg of a triangle to the

1289
00:52:07,088 --> 00:52:12,369
hypotenuse is cosine theta we know that

1290
00:52:10,300 --> 00:52:15,430
the ratio of this leg of a triangle to

1291
00:52:12,369 --> 00:52:18,250
the hypotenuse is sine theta basic high

1292
00:52:15,429 --> 00:52:20,559
school trig so if we take the length of

1293
00:52:18,250 --> 00:52:22,300
the hypotenuse which is that vector

1294
00:52:20,559 --> 00:52:26,139
we're inputting length of a and multiply

1295
00:52:22,300 --> 00:52:30,339
it by cosine theta we would get how far

1296
00:52:26,139 --> 00:52:33,489
along this axis we would be and that's

1297
00:52:30,338 --> 00:52:37,420
exactly what we want it's a measurement

1298
00:52:33,489 --> 00:52:40,598
of how long how far along this axis I

1299
00:52:37,420 --> 00:52:43,838
would travel to get to the point where I

1300
00:52:40,599 --> 00:52:46,300
want to be for this coordinate in this

1301
00:52:43,838 --> 00:52:48,279
axis right remember stepping out along

1302
00:52:46,300 --> 00:52:50,318
the axes this is the reverse process

1303
00:52:48,280 --> 00:52:53,859
it's saying let's say I was already here

1304
00:52:50,318 --> 00:52:56,829
how far would I step along B to get to

1305
00:52:53,858 --> 00:52:59,639
the be if coordinate right if B was the

1306
00:52:56,829 --> 00:53:04,440
x axis the x coordinate

1307
00:52:59,639 --> 00:53:07,319
of this input a so that's how we get

1308
00:53:04,440 --> 00:53:09,630
back to understanding the camera

1309
00:53:07,320 --> 00:53:12,870
transform a camera transform is a

1310
00:53:09,630 --> 00:53:16,800
transform that measures points along

1311
00:53:12,869 --> 00:53:18,779
axes so we look instead at the rows of

1312
00:53:16,800 --> 00:53:23,690
the matrix because those are the

1313
00:53:18,780 --> 00:53:23,690
elements that will dot product the input

1314
00:53:25,190 --> 00:53:29,909
again let's do the measurement here is

1315
00:53:28,019 --> 00:53:33,150
that same point but we're doing the

1316
00:53:29,909 --> 00:53:36,960
reverse process now we have three axes

1317
00:53:33,150 --> 00:53:39,030
we want to measure right the Z prime to

1318
00:53:36,960 --> 00:53:42,360
X prime the Y prime we want to measure

1319
00:53:39,030 --> 00:53:45,060
along our camera axes where is this

1320
00:53:42,360 --> 00:53:49,500
point what would its coordinates be in

1321
00:53:45,059 --> 00:53:52,860
this axis system right mm-hm

1322
00:53:49,500 --> 00:53:54,210
and I guess I'd this is one of the

1323
00:53:52,860 --> 00:53:55,800
things that you don't remember after

1324
00:53:54,210 --> 00:53:57,570
giving a lecture for 10 years I guess I

1325
00:53:55,800 --> 00:53:58,230
didn't draw the measurements but point

1326
00:53:57,570 --> 00:54:01,289
being

1327
00:53:58,230 --> 00:54:05,190
each of these dotted lines measures

1328
00:54:01,289 --> 00:54:09,179
right how far I am along this axis and

1329
00:54:05,190 --> 00:54:11,450
gives me those results so that's how I

1330
00:54:09,179 --> 00:54:13,980
do the analysis of the camera transform

1331
00:54:11,449 --> 00:54:18,079
now one of the things I'd like to point

1332
00:54:13,980 --> 00:54:22,079
out is if you look at the two structures

1333
00:54:18,079 --> 00:54:24,929
that I've just told you you can see that

1334
00:54:22,079 --> 00:54:26,969
they're very complementary in the case

1335
00:54:24,929 --> 00:54:30,149
where I want to talk about world

1336
00:54:26,969 --> 00:54:32,459
positioning I'm in columns in the case

1337
00:54:30,150 --> 00:54:34,889
that I want to talk about camera

1338
00:54:32,460 --> 00:54:37,980
transforms which is like undoing a world

1339
00:54:34,889 --> 00:54:39,989
position I'm in rows these are

1340
00:54:37,980 --> 00:54:44,360
complementary these are very

1341
00:54:39,989 --> 00:54:47,789
complementary structures right in fact

1342
00:54:44,360 --> 00:54:50,160
they're the transpose remember I said

1343
00:54:47,789 --> 00:54:51,570
what a transpose was it's taking vectors

1344
00:54:50,159 --> 00:54:52,649
that were standing up and lying them

1345
00:54:51,570 --> 00:54:55,410
down or vice versa

1346
00:54:52,650 --> 00:54:58,769
well if I was to transpose this whole

1347
00:54:55,409 --> 00:55:01,319
matrix right if I was to transpose the

1348
00:54:58,769 --> 00:55:04,619
whole matrix I would do nothing but lie

1349
00:55:01,320 --> 00:55:07,110
down my vertical X into XE lie down my

1350
00:55:04,619 --> 00:55:10,920
vertical Y into a horizontal YC right

1351
00:55:07,110 --> 00:55:12,750
y W becomes Y C lie down my vertical Z W

1352
00:55:10,920 --> 00:55:15,599
into a zc transpose

1353
00:55:12,750 --> 00:55:18,030
in matrix just transpose each individual

1354
00:55:15,599 --> 00:55:20,309
vector Rose becomes columns columns

1355
00:55:18,030 --> 00:55:23,220
become rows right it just flips along

1356
00:55:20,309 --> 00:55:27,650
the diagonal so what you can see is

1357
00:55:23,219 --> 00:55:32,069
actually if I want to talk about

1358
00:55:27,650 --> 00:55:35,700
changing a world placement right a

1359
00:55:32,070 --> 00:55:37,350
camera transform being our see a world

1360
00:55:35,699 --> 00:55:41,480
places being our W if I want to change

1361
00:55:37,349 --> 00:55:44,670
an R W into an RC or an RC into an R W

1362
00:55:41,480 --> 00:55:47,670
in very real terms these are inverse

1363
00:55:44,670 --> 00:55:49,500
operations my our W my world placement

1364
00:55:47,670 --> 00:55:52,550
takes an object and it puts it somewhere

1365
00:55:49,500 --> 00:55:54,719
in the world my RC my camera transform

1366
00:55:52,550 --> 00:55:56,580
pretends I'm looking at the world from

1367
00:55:54,719 --> 00:55:58,980
an object and takes the whole world and

1368
00:55:56,579 --> 00:56:01,789
moves it back so that it aligns with the

1369
00:55:58,980 --> 00:56:04,860
world axes those are inverse operations

1370
00:56:01,789 --> 00:56:07,529
we typically write the inverse of a

1371
00:56:04,860 --> 00:56:08,400
matrix as the matrix negative 1 to the

1372
00:56:07,530 --> 00:56:11,580
negative 1 power

1373
00:56:08,400 --> 00:56:14,880
that's inversion well guess what in this

1374
00:56:11,579 --> 00:56:16,920
case it's just a transpose and this is

1375
00:56:14,880 --> 00:56:20,670
why if you've ever seen some something

1376
00:56:16,920 --> 00:56:22,680
say for an orthogonal matrix its inverse

1377
00:56:20,670 --> 00:56:25,980
is its transpose if you've ever seen

1378
00:56:22,679 --> 00:56:28,919
that statement this is why because if

1379
00:56:25,980 --> 00:56:33,210
your matrices consist of nothing but

1380
00:56:28,920 --> 00:56:35,250
unit axis system then just transposing

1381
00:56:33,210 --> 00:56:38,280
them produces the inverse operation

1382
00:56:35,250 --> 00:56:46,199
there's no mystery to it we just did the

1383
00:56:38,280 --> 00:56:48,600
whole thing so what I would like to

1384
00:56:46,199 --> 00:56:50,579
point out is that if a matrix in the

1385
00:56:48,599 --> 00:56:52,019
past has been more of a black box to you

1386
00:56:50,579 --> 00:56:54,000
and you didn't understand how a rotation

1387
00:56:52,019 --> 00:56:56,039
matrix works or you didn't understand

1388
00:56:54,000 --> 00:56:58,380
why the inverse and the transpose were

1389
00:56:56,039 --> 00:57:02,880
the same a kiss rotation matrix now you

1390
00:56:58,380 --> 00:57:05,700
do it wasn't so hard right it wasn't so

1391
00:57:02,880 --> 00:57:08,490
hard to take the black box of a rotation

1392
00:57:05,699 --> 00:57:10,829
matrix and get inside there and see

1393
00:57:08,489 --> 00:57:12,779
what's really going on now we know and

1394
00:57:10,829 --> 00:57:14,279
there's so many things we can do now

1395
00:57:12,780 --> 00:57:16,140
that we know we can construct those

1396
00:57:14,280 --> 00:57:18,690
matrixes directly right matrices

1397
00:57:16,139 --> 00:57:22,170
directly we can extract pieces from them

1398
00:57:18,690 --> 00:57:23,940
trivially we just know oh someone hands

1399
00:57:22,170 --> 00:57:26,460
you a camera transform I can just grab

1400
00:57:23,940 --> 00:57:26,760
the top row out now I know exactly what

1401
00:57:26,460 --> 00:57:29,099
the

1402
00:57:26,760 --> 00:57:32,580
axises of the camera in world space

1403
00:57:29,099 --> 00:57:34,230
right all of that understanding is now

1404
00:57:32,579 --> 00:57:35,699
just all in our brains and accessible to

1405
00:57:34,230 --> 00:57:38,280
us at any time in the pipeline we can

1406
00:57:35,699 --> 00:57:41,779
just go in there and and know that all

1407
00:57:38,280 --> 00:57:44,070
of this stuff is at our fingertips right

1408
00:57:41,780 --> 00:57:46,290
not to mention how much easier it is to

1409
00:57:44,070 --> 00:57:50,220
debug these matrices once we know what

1410
00:57:46,289 --> 00:57:53,519
they mean all right so that's one black

1411
00:57:50,219 --> 00:57:55,769
box that we just opened and now there's

1412
00:57:53,519 --> 00:57:58,858
no mysteries there there's no mysteries

1413
00:57:55,769 --> 00:58:04,050
anymore we get it right and that's a

1414
00:57:58,858 --> 00:58:06,449
beautiful thing and a powerful thing so

1415
00:58:04,050 --> 00:58:08,340
now let's move on to the second black

1416
00:58:06,449 --> 00:58:09,299
box there's only two in this lecture

1417
00:58:08,340 --> 00:58:12,030
that was the first one this is the

1418
00:58:09,300 --> 00:58:13,170
second one I told you were going to talk

1419
00:58:12,030 --> 00:58:18,390
about normal mapping now we're going to

1420
00:58:13,170 --> 00:58:19,980
talk about normal mapping all right so

1421
00:58:18,389 --> 00:58:21,629
normal Maps like I said there's a huge

1422
00:58:19,980 --> 00:58:23,039
amount of information that you really

1423
00:58:21,630 --> 00:58:24,840
need to understand if you wanted to

1424
00:58:23,039 --> 00:58:27,869
write your entire own normal mapping

1425
00:58:24,840 --> 00:58:29,309
system soup-to-nuts right but we're just

1426
00:58:27,869 --> 00:58:32,369
going to focus on one part of it now and

1427
00:58:29,309 --> 00:58:35,279
that is how do we store them then how do

1428
00:58:32,369 --> 00:58:36,750
we use them right so let's pretend we

1429
00:58:35,280 --> 00:58:38,160
already have some way of getting these

1430
00:58:36,750 --> 00:58:42,079
things how do we store them how do we

1431
00:58:38,159 --> 00:58:42,079
use them all right

1432
00:58:43,579 --> 00:58:48,659
let's start with lighting because the

1433
00:58:47,190 --> 00:58:50,250
only reason we care about normal Maps in

1434
00:58:48,659 --> 00:58:51,719
the first place is so that we can light

1435
00:58:50,250 --> 00:58:53,909
our objects better we want to capture

1436
00:58:51,719 --> 00:58:57,449
the lighting of lots of little bumps

1437
00:58:53,909 --> 00:59:00,000
little very sort of micro detail along

1438
00:58:57,449 --> 00:59:02,969
our surface we want that lighting

1439
00:59:00,000 --> 00:59:04,289
information to be affected by our normal

1440
00:59:02,969 --> 00:59:06,809
map that's what we're trying to do just

1441
00:59:04,289 --> 00:59:09,179
as that's the entire point of having a

1442
00:59:06,809 --> 00:59:12,840
normal map in the first place right and

1443
00:59:09,179 --> 00:59:14,460
what you can see here is a simple this

1444
00:59:12,840 --> 00:59:18,180
is a simple illustration of how lighting

1445
00:59:14,460 --> 00:59:19,619
works in the real world we have some way

1446
00:59:18,179 --> 00:59:21,389
that we're looking at a surface right

1447
00:59:19,619 --> 00:59:23,219
and I've drawn a little eye here and you

1448
00:59:21,389 --> 00:59:25,259
can see that from the surface we have a

1449
00:59:23,219 --> 00:59:27,209
vector that points towards the eye this

1450
00:59:25,260 --> 00:59:29,510
is where the person is who's viewing it

1451
00:59:27,210 --> 00:59:31,679
right it's where the camera is and

1452
00:59:29,510 --> 00:59:34,590
furthermore what you can see is I've got

1453
00:59:31,679 --> 00:59:37,529
a surface normal that's a vector that

1454
00:59:34,590 --> 00:59:39,600
points in the direction of the sort of

1455
00:59:37,530 --> 00:59:42,180
tangent to the surface right so the

1456
00:59:39,599 --> 00:59:45,299
surface is running along here and I've

1457
00:59:42,179 --> 00:59:48,690
got a direction that points out directly

1458
00:59:45,300 --> 00:59:51,210
out of that surface at this one point in

1459
00:59:48,690 --> 00:59:53,070
order to understand the real lighting

1460
00:59:51,210 --> 00:59:56,789
equation at the surface what we must

1461
00:59:53,070 --> 01:00:00,269
understand is that all of the light from

1462
00:59:56,789 --> 01:00:02,400
everywhere is coming in and parts of it

1463
01:00:00,269 --> 01:00:03,869
depending on the exact structure of the

1464
01:00:02,400 --> 01:00:06,119
surface the material everything like

1465
01:00:03,869 --> 01:00:07,619
this even from behind the surface in the

1466
01:00:06,119 --> 01:00:10,440
case of subsurface scattering things

1467
01:00:07,619 --> 01:00:12,269
like this all of the lighting is coming

1468
01:00:10,440 --> 01:00:13,500
into a point and then certain amount of

1469
01:00:12,269 --> 01:00:15,360
it comes out at the point and that's

1470
01:00:13,500 --> 01:00:17,130
what you see and that's our real

1471
01:00:15,360 --> 01:00:19,650
lighting works in the real world for the

1472
01:00:17,130 --> 01:00:21,930
most part if you have a bunch of photons

1473
01:00:19,650 --> 01:00:24,119
that come in they hit a particular point

1474
01:00:21,929 --> 01:00:25,559
and some of them scatter out your eye

1475
01:00:24,119 --> 01:00:26,909
collects the ones that scattered out in

1476
01:00:25,559 --> 01:00:29,250
the direction that comes towards your

1477
01:00:26,909 --> 01:00:30,359
eye and that's what you see now there's

1478
01:00:29,250 --> 01:00:31,710
a little more to it than that your eye

1479
01:00:30,360 --> 01:00:33,990
is actually a lens so it collects

1480
01:00:31,710 --> 01:00:36,360
actually a region of photons it collects

1481
01:00:33,989 --> 01:00:38,789
a a conical region of photons which is

1482
01:00:36,360 --> 01:00:42,829
not the same thing as a single line but

1483
01:00:38,789 --> 01:00:47,369
I can only cover so much in a lecture

1484
01:00:42,829 --> 01:00:49,349
all right so how do we compute this kind

1485
01:00:47,369 --> 01:00:51,690
of lighting well a simple Lamberson

1486
01:00:49,349 --> 01:00:53,940
material as they're called is one that

1487
01:00:51,690 --> 01:00:57,030
assumes that a light that comes in let's

1488
01:00:53,940 --> 01:00:57,329
say from a point is radiated equally in

1489
01:00:57,030 --> 01:00:58,950
all

1490
01:00:57,329 --> 01:01:01,229
directions so when it hits the surface

1491
01:00:58,949 --> 01:01:03,689
it's going to bounce back out it's gonna

1492
01:01:01,228 --> 01:01:06,118
bounce back out at the viewer the same

1493
01:01:03,690 --> 01:01:08,729
no matter where the viewer was right so

1494
01:01:06,119 --> 01:01:10,499
it doesn't matter where I'm looking the

1495
01:01:08,728 --> 01:01:14,009
surface always bounces the same amount

1496
01:01:10,498 --> 01:01:17,038
of light out right but that's not

1497
01:01:14,009 --> 01:01:21,420
entirely the whole story just because of

1498
01:01:17,039 --> 01:01:22,619
some elements of the of how things hit a

1499
01:01:21,420 --> 01:01:26,338
surface I'm going to cover in just one

1500
01:01:22,619 --> 01:01:27,509
second but the important part is as I

1501
01:01:26,338 --> 01:01:29,670
hit the surface I'm going to bounce

1502
01:01:27,509 --> 01:01:31,708
light out at the viewer and I don't have

1503
01:01:29,670 --> 01:01:34,680
any particular equations that talk about

1504
01:01:31,708 --> 01:01:36,419
how this surface might want to prefer to

1505
01:01:34,679 --> 01:01:38,759
bounce light in different directions

1506
01:01:36,420 --> 01:01:40,979
limbering materials are not common in

1507
01:01:38,759 --> 01:01:43,739
the real world most real-world materials

1508
01:01:40,978 --> 01:01:45,328
have very uneven distributions of life

1509
01:01:43,739 --> 01:01:46,949
they will bounce light much more

1510
01:01:45,329 --> 01:01:48,778
favorably in one direction than another

1511
01:01:46,949 --> 01:01:50,038
but again that's a topic for a different

1512
01:01:48,778 --> 01:01:51,978
lecture we're not talking about lighting

1513
01:01:50,039 --> 01:01:53,759
very much here except as it applies to

1514
01:01:51,978 --> 01:01:55,259
normal mapping to kind of give you a

1515
01:01:53,759 --> 01:01:57,478
little bit of the flavor so I'm not

1516
01:01:55,259 --> 01:01:58,829
going to go too much into that right but

1517
01:01:57,478 --> 01:02:00,718
the point is if I were to look at the

1518
01:01:58,829 --> 01:02:03,059
material from up here or look at the

1519
01:02:00,719 --> 01:02:05,338
material from over here I'm not going to

1520
01:02:03,059 --> 01:02:07,259
expect the materials properties itself

1521
01:02:05,338 --> 01:02:11,969
to bias towards shining more brightly

1522
01:02:07,259 --> 01:02:13,139
one place than another okay that's about

1523
01:02:11,969 --> 01:02:15,719
it

1524
01:02:13,139 --> 01:02:18,179
now if the light moves the same thing is

1525
01:02:15,719 --> 01:02:20,039
true right so no matter where I put the

1526
01:02:18,179 --> 01:02:24,028
light I'm still shining out in the same

1527
01:02:20,039 --> 01:02:26,039
direction as well however all of that

1528
01:02:24,028 --> 01:02:29,818
comes with once with very specific

1529
01:02:26,039 --> 01:02:33,239
caveat and that caveat is that the light

1530
01:02:29,818 --> 01:02:37,588
when it bounces off a surface more of

1531
01:02:33,239 --> 01:02:39,958
the light is able to reflect out in

1532
01:02:37,588 --> 01:02:43,440
terms of how it hits the surface based

1533
01:02:39,958 --> 01:02:46,440
on the angle this is just a sort of a

1534
01:02:43,440 --> 01:02:48,509
how should I put this this is a aspect

1535
01:02:46,440 --> 01:02:52,440
simply of the differential geometry of

1536
01:02:48,509 --> 01:02:55,079
the situation so according to Lambert's

1537
01:02:52,440 --> 01:02:56,548
cosine law which is from 1760 so not

1538
01:02:55,079 --> 01:02:57,989
exactly a recent development in the

1539
01:02:56,548 --> 01:03:01,708
field of computer graphics as you might

1540
01:02:57,989 --> 01:03:04,108
imagine it simply says that if I imagine

1541
01:03:01,708 --> 01:03:05,458
a patch of the surface no matter how big

1542
01:03:04,108 --> 01:03:07,318
I choose to make it it can be

1543
01:03:05,458 --> 01:03:09,929
infinitesimally small or just an

1544
01:03:07,318 --> 01:03:10,559
arbitrary size what you can see is the

1545
01:03:09,929 --> 01:03:13,379
shaft

1546
01:03:10,559 --> 01:03:17,279
a light that would fall on that surface

1547
01:03:13,380 --> 01:03:20,430
right from a light source if the light

1548
01:03:17,280 --> 01:03:24,360
source was the same size over here right

1549
01:03:20,429 --> 01:03:27,169
or over here I'm going to get a

1550
01:03:24,360 --> 01:03:30,570
different size of the shaft of light

1551
01:03:27,170 --> 01:03:33,539
depending on the angle as it rotates

1552
01:03:30,570 --> 01:03:35,280
down that same thing that I showed you

1553
01:03:33,539 --> 01:03:37,170
back for when we were talking about how

1554
01:03:35,280 --> 01:03:41,160
to measure the edge of a triangle that

1555
01:03:37,170 --> 01:03:43,710
same thing is true right the right

1556
01:03:41,159 --> 01:03:46,679
triangle that I form right here is gonna

1557
01:03:43,710 --> 01:03:50,699
say that this right here by the law of

1558
01:03:46,679 --> 01:03:53,250
cosines is only going to be proportional

1559
01:03:50,699 --> 01:03:56,719
to the cosine of theta as wide as it

1560
01:03:53,250 --> 01:03:59,849
would be if it was straight on okay and

1561
01:03:56,719 --> 01:04:01,799
you can see I've kind of like created

1562
01:03:59,849 --> 01:04:03,059
that that version of the diagram here

1563
01:04:01,800 --> 01:04:04,560
and you can do it a couple of different

1564
01:04:03,059 --> 01:04:06,659
ways right I put the triangle here you

1565
01:04:04,559 --> 01:04:10,799
could put it off to the side however you

1566
01:04:06,659 --> 01:04:12,509
want to put it right so anyway we get

1567
01:04:10,800 --> 01:04:14,280
back to the exact same thing that I

1568
01:04:12,510 --> 01:04:16,530
showed before right this thing that we

1569
01:04:14,280 --> 01:04:19,260
learn sort of as we went in and examined

1570
01:04:16,530 --> 01:04:21,510
the dot product this is actually already

1571
01:04:19,260 --> 01:04:23,280
a piece of information you would

1572
01:04:21,510 --> 01:04:25,800
encounter when you just start doing your

1573
01:04:23,280 --> 01:04:28,110
lighting right so again one of the

1574
01:04:25,800 --> 01:04:30,420
things that I would emphasize is that

1575
01:04:28,110 --> 01:04:32,760
understanding one black box typically

1576
01:04:30,420 --> 01:04:34,980
applies to another black box because all

1577
01:04:32,760 --> 01:04:37,050
of this stuff is interrelated and you

1578
01:04:34,980 --> 01:04:43,860
see the same things coming up over and

1579
01:04:37,050 --> 01:04:45,300
over and over again right okay so if we

1580
01:04:43,860 --> 01:04:46,800
take a look at what's happening in this

1581
01:04:45,300 --> 01:04:49,470
equation we get the exact same thing

1582
01:04:46,800 --> 01:04:54,269
that we got before and that is

1583
01:04:49,469 --> 01:04:56,789
specifically we want to know in this

1584
01:04:54,269 --> 01:04:58,800
case we want to take the cosine of the

1585
01:04:56,789 --> 01:05:01,349
angle between the two vectors right

1586
01:04:58,800 --> 01:05:02,970
which is this angle right here we want

1587
01:05:01,349 --> 01:05:06,029
to take the the angle between the two

1588
01:05:02,969 --> 01:05:09,480
vectors and we want to find what their

1589
01:05:06,030 --> 01:05:11,970
actual measure is going to be right and

1590
01:05:09,480 --> 01:05:13,260
in order to do this I'll be honest I

1591
01:05:11,969 --> 01:05:14,609
don't like the way I've drawn this here

1592
01:05:13,260 --> 01:05:16,260
at all I'm not sure why I drew it that

1593
01:05:14,610 --> 01:05:18,269
way maybe I wasn't thinking correctly

1594
01:05:16,260 --> 01:05:20,060
when I actually drew it but let's

1595
01:05:18,269 --> 01:05:22,110
pretend we just ignore this diagram here

1596
01:05:20,059 --> 01:05:24,119
ignore this diagram pretend it doesn't

1597
01:05:22,110 --> 01:05:26,940
exist maybe I'll

1598
01:05:24,119 --> 01:05:29,759
to fix this diagram for further video

1599
01:05:26,940 --> 01:05:33,000
but what we want to do is we want to

1600
01:05:29,760 --> 01:05:34,950
compute based on the law of base based

1601
01:05:33,000 --> 01:05:36,599
on again that Lambert's cosine law we

1602
01:05:34,949 --> 01:05:37,739
want to compute how much light should be

1603
01:05:36,599 --> 01:05:38,429
leaving the surface in a particular

1604
01:05:37,739 --> 01:05:40,489
direction

1605
01:05:38,429 --> 01:05:45,329
that direction is based on the normal

1606
01:05:40,489 --> 01:05:47,399
write times the based on the normal

1607
01:05:45,329 --> 01:05:48,750
direction and the light direction if we

1608
01:05:47,400 --> 01:05:52,079
take those two directions and

1609
01:05:48,750 --> 01:05:53,969
dot-product them together right we will

1610
01:05:52,079 --> 01:05:55,619
get that equation that we talked about

1611
01:05:53,969 --> 01:05:58,019
when we were opening our first black box

1612
01:05:55,619 --> 01:05:59,789
length of the first times length of the

1613
01:05:58,019 --> 01:06:03,570
second times the cosine of the angle

1614
01:05:59,789 --> 01:06:05,759
between them now since we know that we

1615
01:06:03,570 --> 01:06:07,620
could for free if we wanted to or maybe

1616
01:06:05,760 --> 01:06:09,120
not free but we know we could condition

1617
01:06:07,619 --> 01:06:12,119
these things properly so that the length

1618
01:06:09,119 --> 01:06:14,339
of our normal vector and the length of

1619
01:06:12,119 --> 01:06:15,449
our light vector we could make those be

1620
01:06:14,340 --> 01:06:18,090
normal if we wanted to we could

1621
01:06:15,449 --> 01:06:20,039
normalize them right certainly if that's

1622
01:06:18,090 --> 01:06:21,960
the case we could use the dot product to

1623
01:06:20,039 --> 01:06:24,599
trivially compute the cosine of the

1624
01:06:21,960 --> 01:06:26,760
angle between them that's exactly what

1625
01:06:24,599 --> 01:06:29,190
we need to compute Lambert's cosine law

1626
01:06:26,760 --> 01:06:30,570
which is a fundamental law of all light

1627
01:06:29,190 --> 01:06:34,760
reflection and we're going to need it to

1628
01:06:30,570 --> 01:06:38,490
produce our lighting equation right so

1629
01:06:34,760 --> 01:06:41,430
if we take a look at going back to the

1630
01:06:38,489 --> 01:06:42,929
1990s right now we're going way back in

1631
01:06:41,429 --> 01:06:46,139
history here we're going back almost 30

1632
01:06:42,929 --> 01:06:47,639
years right if we go back to how

1633
01:06:46,139 --> 01:06:51,299
Hardware shading worked in the late

1634
01:06:47,639 --> 01:06:54,839
1990s it looked like this right there

1635
01:06:51,300 --> 01:06:56,940
was a vertex pipeline and that vertex

1636
01:06:54,840 --> 01:06:58,950
pipeline could be parallelized so we

1637
01:06:56,940 --> 01:07:00,539
maybe had multiple vertex pipelines it's

1638
01:06:58,949 --> 01:07:01,919
hard to say depending on the

1639
01:07:00,539 --> 01:07:04,650
circumstance but basically what you did

1640
01:07:01,920 --> 01:07:06,630
is you issued a bunch of data to the

1641
01:07:04,650 --> 01:07:08,250
vertex pipeline and the vertex pipeline

1642
01:07:06,630 --> 01:07:11,490
would transform your vertices for you

1643
01:07:08,250 --> 01:07:12,690
right some hardware could do this some

1644
01:07:11,489 --> 01:07:15,779
couldn't sometimes we've still done on

1645
01:07:12,690 --> 01:07:17,820
the cpu how does that came a bunch of

1646
01:07:15,780 --> 01:07:19,380
triangles and those went to rasterizer

1647
01:07:17,820 --> 01:07:22,140
engines and how many of these again were

1648
01:07:19,380 --> 01:07:25,920
dependent on the card but those would

1649
01:07:22,139 --> 01:07:29,609
rasterize the triangles into individual

1650
01:07:25,920 --> 01:07:31,500
little pieces right and then each of

1651
01:07:29,610 --> 01:07:34,110
those pieces will get handled by a pixel

1652
01:07:31,500 --> 01:07:35,670
pipeline which would figure out what

1653
01:07:34,110 --> 01:07:37,740
color they should be and that would

1654
01:07:35,670 --> 01:07:39,829
write them to the frame buffer this is

1655
01:07:37,739 --> 01:07:39,829
how

1656
01:07:39,929 --> 01:07:45,149
now if you looked at where this was

1657
01:07:41,460 --> 01:07:47,670
divided most of the time in the mid

1658
01:07:45,150 --> 01:07:50,160
nineties to the late 90s the CPU

1659
01:07:47,670 --> 01:07:52,590
typically did this part and the GPU

1660
01:07:50,159 --> 01:07:55,440
typically did this part this was because

1661
01:07:52,590 --> 01:07:57,510
floating point math being very expensive

1662
01:07:55,440 --> 01:08:00,030
just hadn't really gotten miniaturized

1663
01:07:57,510 --> 01:08:02,370
yet to the point where it could be done

1664
01:08:00,030 --> 01:08:04,350
in sufficient quantities on the on the

1665
01:08:02,369 --> 01:08:06,299
GPUs by the GPU manufacturers it hadn't

1666
01:08:04,349 --> 01:08:08,819
quite gotten to that stage yet so they

1667
01:08:06,300 --> 01:08:11,670
still were only doing the pixel pipeline

1668
01:08:08,820 --> 01:08:12,990
it was usually done with fixed iterators

1669
01:08:11,670 --> 01:08:14,700
and stuff like this so the floating

1670
01:08:12,989 --> 01:08:16,529
point math just wasn't happening yet and

1671
01:08:14,699 --> 01:08:17,849
the vertex of pipeline requires floating

1672
01:08:16,529 --> 01:08:21,389
point math can't really be turned into

1673
01:08:17,850 --> 01:08:24,180
fixed point very effectively all right

1674
01:08:21,390 --> 01:08:25,920
so what this looked like was we

1675
01:08:24,180 --> 01:08:28,289
specified triangles as a series of

1676
01:08:25,920 --> 01:08:31,079
vertices right and here they are here's

1677
01:08:28,289 --> 01:08:32,970
an example those would get passed to a

1678
01:08:31,079 --> 01:08:35,100
rasterizer which produces a set of

1679
01:08:32,970 --> 01:08:37,860
fragment values right which is places

1680
01:08:35,100 --> 01:08:40,590
where on the pixel grid we need to

1681
01:08:37,859 --> 01:08:42,329
process and the pixel pipeline would go

1682
01:08:40,590 --> 01:08:45,150
ahead and figure out what to do with

1683
01:08:42,329 --> 01:08:47,699
them right so in here we've got a

1684
01:08:45,149 --> 01:08:49,920
smaller number of things right 0 1 &amp; 2

1685
01:08:47,699 --> 01:08:53,630
and that changes into a larger number of

1686
01:08:49,920 --> 01:08:59,100
fragments 0 1 2 3 4 5 whatever right

1687
01:08:53,630 --> 01:09:01,020
okay so for a typical goro shaded

1688
01:08:59,100 --> 01:09:02,430
pipeline what's Karoshi shading you may

1689
01:09:01,020 --> 01:09:03,810
not even know what it is anymore it used

1690
01:09:02,430 --> 01:09:05,039
to be a very common terms not so

1691
01:09:03,810 --> 01:09:07,590
counting or cos nobody does it

1692
01:09:05,039 --> 01:09:09,149
goro shading was one where basically if

1693
01:09:07,590 --> 01:09:12,360
you take a look at this there was just a

1694
01:09:09,149 --> 01:09:13,799
color at each of these points right so

1695
01:09:12,359 --> 01:09:15,929
when you specify these vertices you

1696
01:09:13,800 --> 01:09:17,369
could specify a color and then when you

1697
01:09:15,930 --> 01:09:18,780
would interpolate the points it would

1698
01:09:17,369 --> 01:09:20,399
just figure out what the color of each

1699
01:09:18,779 --> 01:09:22,109
of these was by figuring out where it

1700
01:09:20,399 --> 01:09:24,689
was sort of barycentric ly in this

1701
01:09:22,109 --> 01:09:26,309
triangle and it would be all sort of do

1702
01:09:24,689 --> 01:09:27,929
it like an average weighted average of

1703
01:09:26,310 --> 01:09:30,750
how close it was to each of these points

1704
01:09:27,930 --> 01:09:33,050
right very simple interpolation of to

1705
01:09:30,750 --> 01:09:35,550
figure out what the color was okay

1706
01:09:33,050 --> 01:09:37,980
so for agarose shaded pipeline again

1707
01:09:35,550 --> 01:09:40,110
we've got this information here telling

1708
01:09:37,979 --> 01:09:41,789
us how to get to a particular point like

1709
01:09:40,109 --> 01:09:46,500
I showed you with the initial transform

1710
01:09:41,789 --> 01:09:50,100
right we've sort of got this idea that

1711
01:09:46,500 --> 01:09:51,210
if we had for example coordinates of our

1712
01:09:50,100 --> 01:09:51,700
triangle and we were using those

1713
01:09:51,210 --> 01:09:53,800
coordinate

1714
01:09:51,699 --> 01:09:56,409
to produce some kind of a world space

1715
01:09:53,800 --> 01:09:59,350
movement right the same thing might be

1716
01:09:56,409 --> 01:10:02,109
true of the colors inside a triangle so

1717
01:09:59,350 --> 01:10:03,579
we might have coefficients that are Bary

1718
01:10:02,109 --> 01:10:05,409
centric coefficients meaning their

1719
01:10:03,579 --> 01:10:06,909
relative to the triangle we might add

1720
01:10:05,409 --> 01:10:08,680
the same exact thing again this

1721
01:10:06,909 --> 01:10:11,109
structure where I move along each one

1722
01:10:08,680 --> 01:10:12,909
the rasterizer might be doing this to

1723
01:10:11,109 --> 01:10:15,159
compute the colors that it would then

1724
01:10:12,909 --> 01:10:17,829
send to the pixel pipeline okay

1725
01:10:15,159 --> 01:10:20,619
so what you can sort of see here is that

1726
01:10:17,829 --> 01:10:23,470
amusingly enough you actually would end

1727
01:10:20,619 --> 01:10:25,630
up getting into a situation where you'd

1728
01:10:23,470 --> 01:10:28,180
use the exact same things you saw when

1729
01:10:25,630 --> 01:10:29,800
we first opened our black box just our

1730
01:10:28,180 --> 01:10:32,710
very simple black box of how matrix

1731
01:10:29,800 --> 01:10:34,960
transform for rotation works both of the

1732
01:10:32,710 --> 01:10:37,329
things that we talked about there that

1733
01:10:34,960 --> 01:10:39,520
construction of moving along a series of

1734
01:10:37,329 --> 01:10:41,890
axes and the construction of dot prior

1735
01:10:39,520 --> 01:10:44,770
to two things together those actually

1736
01:10:41,890 --> 01:10:48,850
form the basis of how we would start to

1737
01:10:44,770 --> 01:10:51,010
do agarose shading pipeline how we would

1738
01:10:48,850 --> 01:10:52,420
move from agarose shaded pipeline where

1739
01:10:51,010 --> 01:10:54,730
we're just interpolating colors into

1740
01:10:52,420 --> 01:10:58,750
normal mapping first what we would do at

1741
01:10:54,729 --> 01:11:02,049
the vertex stage is pass down some

1742
01:10:58,750 --> 01:11:04,779
information about the normal of the

1743
01:11:02,050 --> 01:11:06,789
surface times the light right in a

1744
01:11:04,779 --> 01:11:09,039
simple crochet 2 pi plane then the

1745
01:11:06,789 --> 01:11:10,680
rasterizer uses the standard movement

1746
01:11:09,039 --> 01:11:12,670
along the barycentric axes to produce

1747
01:11:10,680 --> 01:11:15,640
interpolated colors and then we output a

1748
01:11:12,670 --> 01:11:18,340
pixel this is a non normal mapped

1749
01:11:15,640 --> 01:11:20,800
pipeline right so if you imagine I want

1750
01:11:18,340 --> 01:11:22,840
to produce these colors over here that

1751
01:11:20,800 --> 01:11:26,079
are the lighting values of my surface

1752
01:11:22,840 --> 01:11:27,640
all I have is inputs here what I would

1753
01:11:26,079 --> 01:11:29,979
do in a very simple sense is just have

1754
01:11:27,640 --> 01:11:31,539
normals at my vertices I would do the

1755
01:11:29,979 --> 01:11:33,399
dot product for each of those normals

1756
01:11:31,539 --> 01:11:35,800
the interpolation would take place in

1757
01:11:33,399 --> 01:11:37,599
the rasterizer and the output the pixel

1758
01:11:35,800 --> 01:11:42,070
output would just be the interpolated

1759
01:11:37,600 --> 01:11:44,289
color I mean that's it right so that's a

1760
01:11:42,069 --> 01:11:47,109
very simple it doesn't really do any

1761
01:11:44,289 --> 01:11:52,930
normal mapping right but it does go

1762
01:11:47,109 --> 01:11:55,989
ahead and produce a lit surface that

1763
01:11:52,930 --> 01:11:58,810
just only lights as simple interpolation

1764
01:11:55,989 --> 01:12:00,909
between the vertices so the more dense

1765
01:11:58,810 --> 01:12:02,380
your mesh the more this would capture

1766
01:12:00,909 --> 01:12:04,239
the lighting of the surface but the

1767
01:12:02,380 --> 01:12:05,170
sparse or the mesh the less information

1768
01:12:04,239 --> 01:12:06,460
there would be because

1769
01:12:05,170 --> 01:12:08,260
the less times we would be doing those

1770
01:12:06,460 --> 01:12:11,590
dot products between the normal and the

1771
01:12:08,260 --> 01:12:13,560
lighting right now there's an obvious

1772
01:12:11,590 --> 01:12:16,420
problem with the guro shading pipeline

1773
01:12:13,560 --> 01:12:17,620
and what you would see immediately if

1774
01:12:16,420 --> 01:12:20,399
you start to look into this further is

1775
01:12:17,619 --> 01:12:22,750
that if all we were doing right is

1776
01:12:20,399 --> 01:12:25,359
interpolating the multiplication between

1777
01:12:22,750 --> 01:12:29,738
these two then you get some pretty nasty

1778
01:12:25,359 --> 01:12:32,829
results here right if all we do is

1779
01:12:29,738 --> 01:12:35,919
interpolate the the result of n times L

1780
01:12:32,829 --> 01:12:37,929
then if in the middle right if in this

1781
01:12:35,920 --> 01:12:40,510
case for example we have a situation

1782
01:12:37,929 --> 01:12:43,029
where the light starts on this side and

1783
01:12:40,510 --> 01:12:44,949
ends on this side so we have L 1 is out

1784
01:12:43,029 --> 01:12:46,869
here in l0 is out here so maybe we're

1785
01:12:44,948 --> 01:12:50,678
taking two vertices of our triangle and

1786
01:12:46,869 --> 01:12:52,779
one side of it has one type you know the

1787
01:12:50,679 --> 01:12:54,279
light relative to one vertex is pointing

1788
01:12:52,779 --> 01:12:55,509
this direction but then this vertex is

1789
01:12:54,279 --> 01:12:57,429
on the other side of the light source so

1790
01:12:55,510 --> 01:13:00,190
it's over here the interpolation between

1791
01:12:57,429 --> 01:13:01,779
them is going to pass through a place

1792
01:13:00,189 --> 01:13:03,428
where it should have pointed directly at

1793
01:13:01,779 --> 01:13:05,619
the light we're never going to capture

1794
01:13:03,429 --> 01:13:07,239
that because the dot product of this and

1795
01:13:05,619 --> 01:13:10,539
the dot part of this are basically going

1796
01:13:07,238 --> 01:13:11,559
to be the same potentially and it's not

1797
01:13:10,539 --> 01:13:16,119
going to be able to capture that

1798
01:13:11,560 --> 01:13:21,429
difference right so we get into another

1799
01:13:16,119 --> 01:13:24,039
problem here excuse me but we're going

1800
01:13:21,429 --> 01:13:25,359
to talk about that a little bit later

1801
01:13:24,039 --> 01:13:28,238
right

1802
01:13:25,359 --> 01:13:31,238
I don't again not sure exactly why I

1803
01:13:28,238 --> 01:13:34,750
chose to do this draw this here because

1804
01:13:31,238 --> 01:13:36,579
it's not exactly what we mean but you

1805
01:13:34,750 --> 01:13:37,960
know a ten years ten years you'll forget

1806
01:13:36,579 --> 01:13:39,939
some things about electro spit that way

1807
01:13:37,960 --> 01:13:42,609
so let's ignore that for now and I'll

1808
01:13:39,939 --> 01:13:44,189
come back to in a second so the big

1809
01:13:42,609 --> 01:13:48,339
thing that happened with normal mapping

1810
01:13:44,189 --> 01:13:50,349
and the thing to remember is that what

1811
01:13:48,340 --> 01:13:51,819
we were able to start doing with normal

1812
01:13:50,350 --> 01:13:52,810
mapping and the reason that it was going

1813
01:13:51,819 --> 01:13:56,289
to become such a particularly

1814
01:13:52,810 --> 01:14:00,340
interesting thing is that once the

1815
01:13:56,289 --> 01:14:03,010
hardware was able to move this equation

1816
01:14:00,340 --> 01:14:04,659
again this is the normal dot product

1817
01:14:03,010 --> 01:14:06,369
with the light which is just that thing

1818
01:14:04,659 --> 01:14:12,039
that tells us what lamber shion's cosine

1819
01:14:06,369 --> 01:14:14,170
was right numbers cosine law once that

1820
01:14:12,039 --> 01:14:16,929
didn't happen hat have to happen at the

1821
01:14:14,170 --> 01:14:18,430
vertex stage anymore things started to

1822
01:14:16,929 --> 01:14:19,930
get interesting and

1823
01:14:18,430 --> 01:14:21,880
thing that made this possible was an

1824
01:14:19,930 --> 01:14:23,500
innovation in hardware and the

1825
01:14:21,880 --> 01:14:25,779
innovations probably the wrong term it's

1826
01:14:23,500 --> 01:14:27,460
just more of getting more power because

1827
01:14:25,779 --> 01:14:29,679
you know you want to do this in hardware

1828
01:14:27,460 --> 01:14:32,380
the question is just how right how do

1829
01:14:29,680 --> 01:14:33,700
you make the circuits for it well what

1830
01:14:32,380 --> 01:14:36,039
they did is they introduced something in

1831
01:14:33,699 --> 01:14:37,989
hardware called dot three and what dot

1832
01:14:36,039 --> 01:14:41,050
three was as a blending mode which did

1833
01:14:37,989 --> 01:14:43,029
the dot product per pixel so at every

1834
01:14:41,050 --> 01:14:44,400
pixel on the screen or per fragment if

1835
01:14:43,029 --> 01:14:46,300
you'd rather think of it that way

1836
01:14:44,399 --> 01:14:50,069
fragments and pixels were basically the

1837
01:14:46,300 --> 01:14:52,960
same at that point but per per fragment

1838
01:14:50,069 --> 01:14:55,989
what it could do is it could do this dot

1839
01:14:52,960 --> 01:14:58,539
product at the fragment stage what that

1840
01:14:55,989 --> 01:15:00,489
meant was that now you no longer had to

1841
01:14:58,539 --> 01:15:02,260
just take your lighting equations and

1842
01:15:00,489 --> 01:15:04,149
compute them at the vertices you can

1843
01:15:02,260 --> 01:15:05,739
actually compute sort of part of the

1844
01:15:04,149 --> 01:15:08,409
lighting equation down here per pixel

1845
01:15:05,739 --> 01:15:10,719
and that meant at every pixel you could

1846
01:15:08,409 --> 01:15:12,220
track that light source you didn't have

1847
01:15:10,720 --> 01:15:13,900
to interpolate the results of the

1848
01:15:12,220 --> 01:15:17,680
lighting you could interpolate the

1849
01:15:13,899 --> 01:15:20,859
lighting itself and this was huge the

1850
01:15:17,680 --> 01:15:23,320
reason this was huge is because now at a

1851
01:15:20,859 --> 01:15:25,210
bare minimum you could do functioning

1852
01:15:23,319 --> 01:15:26,739
goro shading is one that just

1853
01:15:25,210 --> 01:15:28,480
interpolates the result of the lighting

1854
01:15:26,739 --> 01:15:30,460
across the triangle Phong shading is one

1855
01:15:28,479 --> 01:15:32,709
that at least captures the fact that a

1856
01:15:30,460 --> 01:15:34,569
high light could occur inside a triangle

1857
01:15:32,710 --> 01:15:36,579
right and that's that thing I was trying

1858
01:15:34,569 --> 01:15:37,599
to say before where if you have this and

1859
01:15:36,579 --> 01:15:39,369
the dot product is the same on either

1860
01:15:37,600 --> 01:15:41,440
side the dot products going to change

1861
01:15:39,369 --> 01:15:43,359
dramatically right here but if those are

1862
01:15:41,439 --> 01:15:44,559
your two vertices and all you have is

1863
01:15:43,359 --> 01:15:46,809
those two points to interpolate between

1864
01:15:44,560 --> 01:15:50,830
you're never gonna catch that that high

1865
01:15:46,810 --> 01:15:53,740
light but now you could if you wanted to

1866
01:15:50,829 --> 01:15:56,710
right because instead what I could do is

1867
01:15:53,739 --> 01:16:00,159
tell the rasterizer to interpolate both

1868
01:15:56,710 --> 01:16:02,140
the normal and the light and then the

1869
01:16:00,159 --> 01:16:08,079
pixel shading pipeline will dot-product

1870
01:16:02,140 --> 01:16:10,360
them together okay all right so now what

1871
01:16:08,079 --> 01:16:13,750
we can do is we can do Lambert's cosine

1872
01:16:10,359 --> 01:16:16,389
law every pixel and this allows some

1873
01:16:13,750 --> 01:16:18,880
tremendous freedom right in terms of

1874
01:16:16,390 --> 01:16:21,760
computing our lighting so now what we

1875
01:16:18,880 --> 01:16:23,980
can do instead of accidentally producing

1876
01:16:21,760 --> 01:16:25,420
the exact same cosine the entire way

1877
01:16:23,979 --> 01:16:27,549
across because we're just interplaying

1878
01:16:25,420 --> 01:16:30,310
this one value that's already been here

1879
01:16:27,550 --> 01:16:32,260
right what we can do is start to look at

1880
01:16:30,310 --> 01:16:35,470
it as actually producing

1881
01:16:32,260 --> 01:16:39,070
new cosine value right that will give us

1882
01:16:35,470 --> 01:16:41,710
more light reflected when we actually

1883
01:16:39,069 --> 01:16:45,090
hit that middle point even if it's

1884
01:16:41,710 --> 01:16:51,279
inside a triangle and this is crucial

1885
01:16:45,090 --> 01:16:53,680
okay so a phone shading pipeline doesn't

1886
01:16:51,279 --> 01:16:55,569
actually require any normal Maps it just

1887
01:16:53,680 --> 01:16:57,579
requires you letting the rasterizer

1888
01:16:55,569 --> 01:17:01,359
interpolate the normal and the light

1889
01:16:57,579 --> 01:17:03,220
source like so again this is being

1890
01:17:01,359 --> 01:17:04,988
interpolated in the barycentric fashion

1891
01:17:03,220 --> 01:17:06,430
which we didn't really cover too much

1892
01:17:04,988 --> 01:17:08,529
deal in this lecture but it's exactly

1893
01:17:06,430 --> 01:17:10,659
the same thing that I showed you

1894
01:17:08,529 --> 01:17:13,359
originally when we were talking about

1895
01:17:10,659 --> 01:17:14,859
that sort of combination of axes to

1896
01:17:13,359 --> 01:17:16,420
produce a point we're just doing that

1897
01:17:14,859 --> 01:17:18,339
and it allows us to interpolate values

1898
01:17:16,420 --> 01:17:21,100
over a triangle so that we know what the

1899
01:17:18,340 --> 01:17:25,840
values of that are at any point in the

1900
01:17:21,100 --> 01:17:27,400
triangle alright so the last piece of

1901
01:17:25,840 --> 01:17:28,960
the equation that we're missing is this

1902
01:17:27,399 --> 01:17:31,029
term down here which is the

1903
01:17:28,960 --> 01:17:32,680
normalization term the reason we have a

1904
01:17:31,029 --> 01:17:34,090
normalization term is because if you

1905
01:17:32,680 --> 01:17:37,030
take a look at how these work

1906
01:17:34,090 --> 01:17:39,250
these don't give us normals back

1907
01:17:37,029 --> 01:17:41,829
necessarily okay

1908
01:17:39,250 --> 01:17:43,659
and that's a problem because we know

1909
01:17:41,829 --> 01:17:45,789
that we said we wanted the the light

1910
01:17:43,659 --> 01:17:48,099
source and the normal to be unit length

1911
01:17:45,789 --> 01:17:49,359
vectors so that our cosine so that we

1912
01:17:48,100 --> 01:17:51,430
could use the dot product compute the

1913
01:17:49,359 --> 01:17:53,319
cosine the angle between them if they're

1914
01:17:51,430 --> 01:17:54,640
not unit length and that equation breaks

1915
01:17:53,319 --> 01:17:56,619
down because remember it's length of a

1916
01:17:54,640 --> 01:17:58,329
length of B cosine theta if we need

1917
01:17:56,619 --> 01:18:00,309
length of a and length of B to be 1 so

1918
01:17:58,329 --> 01:18:01,930
that we just get cosine theta out well

1919
01:18:00,310 --> 01:18:06,400
we don't really have the option of doing

1920
01:18:01,930 --> 01:18:08,110
that anymore so the problem is we need

1921
01:18:06,399 --> 01:18:10,539
an extra term in here we need a term

1922
01:18:08,109 --> 01:18:14,979
that corrects our dot product to produce

1923
01:18:10,539 --> 01:18:18,488
a more normalized result and so what we

1924
01:18:14,979 --> 01:18:20,319
can do here in the case of a pixel

1925
01:18:18,488 --> 01:18:22,149
shader is what we can do is we can

1926
01:18:20,319 --> 01:18:24,340
actually normalize the light source

1927
01:18:22,149 --> 01:18:27,969
right in the pixel shader if we want to

1928
01:18:24,340 --> 01:18:30,610
and that that solves that problem for us

1929
01:18:27,970 --> 01:18:32,860
but what do we do about the normal to

1930
01:18:30,609 --> 01:18:33,309
the surface well we could normalize that

1931
01:18:32,859 --> 01:18:34,719
as well

1932
01:18:33,310 --> 01:18:36,340
so if we wanted to do a functioning

1933
01:18:34,720 --> 01:18:38,230
pipeline we could choose to normalize

1934
01:18:36,340 --> 01:18:40,060
both of them right we can normalize the

1935
01:18:38,229 --> 01:18:44,619
normal and normalize the light source

1936
01:18:40,060 --> 01:18:46,120
and that would be fine but if we want to

1937
01:18:44,619 --> 01:18:48,069
move to a normal map pipeline

1938
01:18:46,119 --> 01:18:50,500
well we don't have to worry about that

1939
01:18:48,069 --> 01:18:54,369
anymore why because the normal is gonna

1940
01:18:50,500 --> 01:18:56,590
come from a texture anyway right so this

1941
01:18:54,369 --> 01:18:58,420
is where we finally get the normal

1942
01:18:56,590 --> 01:19:00,640
mapping pipeline that we sort of

1943
01:18:58,420 --> 01:19:03,460
stumbled upon once dot three texture

1944
01:19:00,640 --> 01:19:05,950
mapping was available and that is that

1945
01:19:03,460 --> 01:19:09,069
if we interpolate with a light Direction

1946
01:19:05,949 --> 01:19:11,500
across a triangle then we can also just

1947
01:19:09,069 --> 01:19:12,969
read the normal from a texture because

1948
01:19:11,500 --> 01:19:14,560
since we can read things from textures

1949
01:19:12,970 --> 01:19:16,390
we might as well read the normal out

1950
01:19:14,560 --> 01:19:18,670
that would allow us to vary the normal

1951
01:19:16,390 --> 01:19:20,610
across the surface as if it had a lot

1952
01:19:18,670 --> 01:19:23,050
more details than the mesh would imply

1953
01:19:20,609 --> 01:19:25,389
so that's what this looks like we have a

1954
01:19:23,050 --> 01:19:28,600
vertex at the vertex we specify where

1955
01:19:25,390 --> 01:19:30,670
the light is that gets interpolate

1956
01:19:28,600 --> 01:19:33,100
across our triangles which are built up

1957
01:19:30,670 --> 01:19:35,470
of vertices we normalize it at every

1958
01:19:33,100 --> 01:19:37,960
pixel because you know it's gonna become

1959
01:19:35,470 --> 01:19:40,090
non normal as it interpolates but then

1960
01:19:37,960 --> 01:19:44,800
we just read the texture to find out

1961
01:19:40,090 --> 01:19:46,960
what our normal is all right so that's

1962
01:19:44,800 --> 01:19:49,180
really all we need to know in terms of

1963
01:19:46,960 --> 01:19:50,399
how shading works so hopefully that

1964
01:19:49,180 --> 01:19:54,030
gives you a little bit of background

1965
01:19:50,399 --> 01:19:58,210
about how a normal map actually gets

1966
01:19:54,029 --> 01:20:00,550
applied at the shading stage we take the

1967
01:19:58,210 --> 01:20:03,130
normals out of textures we specify the

1968
01:20:00,550 --> 01:20:05,529
lights at vertices and then we dot

1969
01:20:03,130 --> 01:20:07,150
product those two things together the

1970
01:20:05,529 --> 01:20:09,309
light getting interpolated across the

1971
01:20:07,149 --> 01:20:11,439
pixels to produce Lambert's cosine law

1972
01:20:09,310 --> 01:20:13,480
now obviously if you wanted to do better

1973
01:20:11,439 --> 01:20:15,819
lighting you could use that information

1974
01:20:13,479 --> 01:20:18,009
to produce more than just Lambert's

1975
01:20:15,819 --> 01:20:20,079
cosine law you could look up into tables

1976
01:20:18,010 --> 01:20:21,640
you could use cube maps you can do all

1977
01:20:20,079 --> 01:20:24,130
sorts of things to produce fancier

1978
01:20:21,640 --> 01:20:26,079
lighting that has more real surface

1979
01:20:24,130 --> 01:20:27,850
properties but again that part doesn't

1980
01:20:26,079 --> 01:20:29,050
really matter I'm just showing the

1981
01:20:27,850 --> 01:20:31,390
simplest possible normal mapping

1982
01:20:29,050 --> 01:20:35,739
pipeline but the lighting equation can

1983
01:20:31,390 --> 01:20:38,829
be extended in in all sorts of ways so

1984
01:20:35,739 --> 01:20:40,829
how do we encode normal maps right how

1985
01:20:38,829 --> 01:20:43,449
are we going to encode these normal maps

1986
01:20:40,829 --> 01:20:45,430
well as you might imagine the simplest

1987
01:20:43,449 --> 01:20:49,210
way to think about this it's just to

1988
01:20:45,430 --> 01:20:52,690
think about in the world right there is

1989
01:20:49,210 --> 01:20:55,390
a triangle that I'm trying to encode and

1990
01:20:52,689 --> 01:20:57,279
it presumably has a lot more information

1991
01:20:55,390 --> 01:20:59,289
along its surface that I'm actually

1992
01:20:57,279 --> 01:20:59,899
gonna coat the vertices if I was to only

1993
01:20:59,289 --> 01:21:02,659
record

1994
01:20:59,899 --> 01:21:05,269
at each of these vertices then inside

1995
01:21:02,659 --> 01:21:07,939
here any perturbation of the surface is

1996
01:21:05,270 --> 01:21:09,980
no longer recorded as flat so the goal

1997
01:21:07,939 --> 01:21:14,149
of the normal map is to say let's take a

1998
01:21:09,979 --> 01:21:16,189
texture map and let's place this

1999
01:21:14,149 --> 01:21:19,369
triangle somewhere in the texture map

2000
01:21:16,189 --> 01:21:22,250
however we want to map it again that's a

2001
01:21:19,369 --> 01:21:24,890
topic for a whole nother black box but

2002
01:21:22,250 --> 01:21:27,619
let's place it somewhere and then inside

2003
01:21:24,890 --> 01:21:29,240
there let's use all of the texels all of

2004
01:21:27,619 --> 01:21:34,430
the information in this texture to

2005
01:21:29,239 --> 01:21:36,559
encode what the normal is so what we

2006
01:21:34,430 --> 01:21:39,409
want to encode here is do we want to

2007
01:21:36,560 --> 01:21:41,690
encode that at a certain UV in this

2008
01:21:39,409 --> 01:21:43,970
texture map we have a certain normal

2009
01:21:41,689 --> 01:21:46,059
that corresponds to some point on our

2010
01:21:43,970 --> 01:21:48,650
mesh okay

2011
01:21:46,060 --> 01:21:49,130
so again looking back here at what we've

2012
01:21:48,649 --> 01:21:52,639
got

2013
01:21:49,130 --> 01:21:54,409
we're just interpolating the normal in a

2014
01:21:52,640 --> 01:21:56,090
way that's going to read it from a

2015
01:21:54,409 --> 01:21:58,670
texture and they're going to be here's

2016
01:21:56,090 --> 01:21:59,869
the Texel zero texture one it's so so

2017
01:21:58,670 --> 01:22:01,880
forth it's going to read from those

2018
01:21:59,869 --> 01:22:03,890
points in the texture map and

2019
01:22:01,880 --> 01:22:06,619
interpolate between those so what we

2020
01:22:03,890 --> 01:22:08,570
will pass down is just UV coordinates

2021
01:22:06,619 --> 01:22:10,609
that say we're in the texture to look

2022
01:22:08,569 --> 01:22:13,130
those will get interpolated here and

2023
01:22:10,609 --> 01:22:18,799
pulled out as a Texel which represents

2024
01:22:13,130 --> 01:22:20,659
our normal okay so now let's put this

2025
01:22:18,800 --> 01:22:22,670
all together imagine we have a surface

2026
01:22:20,659 --> 01:22:25,069
here's like one I'm going to look at

2027
01:22:22,670 --> 01:22:26,569
just a slice of it here's one vertex and

2028
01:22:25,069 --> 01:22:28,579
here is the direction of the light

2029
01:22:26,569 --> 01:22:30,649
source you know if we imagine the vertex

2030
01:22:28,579 --> 01:22:32,239
is here here's the direction of the

2031
01:22:30,649 --> 01:22:33,739
light source if we imagine the vertex is

2032
01:22:32,239 --> 01:22:36,050
here right and of course we're going to

2033
01:22:33,739 --> 01:22:38,179
shade this whole surface so along here

2034
01:22:36,050 --> 01:22:40,369
the light is just gonna point up towards

2035
01:22:38,180 --> 01:22:42,579
the light the whole way right as we

2036
01:22:40,369 --> 01:22:46,340
interpolate between these two vectors

2037
01:22:42,579 --> 01:22:48,710
what you can see here if you Madame

2038
01:22:46,340 --> 01:22:51,350
what's going on here is that the input

2039
01:22:48,710 --> 01:22:54,289
to our vertex again is very simple it's

2040
01:22:51,350 --> 01:22:57,350
just the light in world space - wherever

2041
01:22:54,289 --> 01:23:00,409
the point is right so you can see here

2042
01:22:57,350 --> 01:23:01,760
p0 is at this location if I want to know

2043
01:23:00,409 --> 01:23:03,829
what the lighting vector is I should

2044
01:23:01,760 --> 01:23:05,840
pass well it's very simple it's just

2045
01:23:03,829 --> 01:23:08,180
wherever the light is - wherever the

2046
01:23:05,840 --> 01:23:10,250
point is so our input to the vertex

2047
01:23:08,180 --> 01:23:12,470
stage is very straightforward

2048
01:23:10,250 --> 01:23:13,250
the rasterizer stage we know we're

2049
01:23:12,470 --> 01:23:15,050
passing a texture

2050
01:23:13,250 --> 01:23:16,100
that's very straightforward we know it's

2051
01:23:15,050 --> 01:23:17,600
gonna trip late the lights we passed

2052
01:23:16,100 --> 01:23:18,680
Sears fromthe do anything else and the

2053
01:23:17,600 --> 01:23:20,300
pixel stage is rote

2054
01:23:18,680 --> 01:23:22,520
it's just that dot product right and

2055
01:23:20,300 --> 01:23:23,810
then we have to normalize the light so

2056
01:23:22,520 --> 01:23:28,090
it's very simple to pass the light

2057
01:23:23,810 --> 01:23:32,420
direction in okay and you can see here

2058
01:23:28,090 --> 01:23:34,789
if I were to rotate the surface okay

2059
01:23:32,420 --> 01:23:37,730
it's pretty straightforward what happens

2060
01:23:34,789 --> 01:23:40,729
to all of my values if I was to change

2061
01:23:37,729 --> 01:23:43,099
the orientation of my surface I could

2062
01:23:40,729 --> 01:23:45,169
multiply each point by a rotation matrix

2063
01:23:43,100 --> 01:23:47,110
just like we showed beginning I could

2064
01:23:45,170 --> 01:23:51,310
multiply the normal by that rotation and

2065
01:23:47,109 --> 01:23:55,099
I would rotate everything in the surface

2066
01:23:51,310 --> 01:23:59,720
okay so producing new lighting points is

2067
01:23:55,100 --> 01:24:06,410
very straightforward but let's look at

2068
01:23:59,720 --> 01:24:09,230
this if we have a texture map okay that

2069
01:24:06,409 --> 01:24:12,529
encodes our normals what are we gonna do

2070
01:24:09,229 --> 01:24:13,250
here because this vector is a problem

2071
01:24:12,529 --> 01:24:18,219
for us

2072
01:24:13,250 --> 01:24:21,590
we can't go rotate every value in the

2073
01:24:18,220 --> 01:24:23,210
texture map right because it's a

2074
01:24:21,590 --> 01:24:25,220
statically stored texture map that's

2075
01:24:23,210 --> 01:24:27,529
just sitting on the GPU we made it and

2076
01:24:25,220 --> 01:24:30,050
that's on there we don't want to run

2077
01:24:27,529 --> 01:24:33,199
through every frame and rotate each of

2078
01:24:30,050 --> 01:24:34,640
those normals to properly point in the

2079
01:24:33,199 --> 01:24:37,340
direction they're pointing now that the

2080
01:24:34,640 --> 01:24:40,960
object has rotated so when we want to

2081
01:24:37,340 --> 01:24:47,090
move an object around we got a problem

2082
01:24:40,960 --> 01:24:49,939
right however we can solve this problem

2083
01:24:47,090 --> 01:24:52,550
really easily if we know we can't change

2084
01:24:49,939 --> 01:24:56,629
the texture what if we just changed the

2085
01:24:52,550 --> 01:24:58,550
light to pretend that the light is the

2086
01:24:56,630 --> 01:25:01,460
thing that moved and not the texture

2087
01:24:58,550 --> 01:25:03,170
right because remember as Einstein would

2088
01:25:01,460 --> 01:25:05,739
tell us I don't know if you would really

2089
01:25:03,170 --> 01:25:09,140
tell us this but everything's relative

2090
01:25:05,739 --> 01:25:11,989
instead of rotating my object couldn't I

2091
01:25:09,140 --> 01:25:14,900
just rotate the light in the opposite

2092
01:25:11,989 --> 01:25:16,699
way for example if I was to look at this

2093
01:25:14,899 --> 01:25:18,589
diagram and say well I'm not gonna

2094
01:25:16,699 --> 01:25:20,289
rotate this object like this instead I'm

2095
01:25:18,590 --> 01:25:24,789
just gonna rotate the light over here

2096
01:25:20,289 --> 01:25:24,789
right and leave this the same

2097
01:25:25,090 --> 01:25:32,619
I could do that couldn't I right I could

2098
01:25:28,868 --> 01:25:35,738
do that so if we look at what happens

2099
01:25:32,618 --> 01:25:38,229
instead of trying to bend the normal or

2100
01:25:35,738 --> 01:25:39,669
something like this to accommodate the

2101
01:25:38,229 --> 01:25:41,919
direction the light should be going

2102
01:25:39,670 --> 01:25:45,010
instead what I can do is I can just

2103
01:25:41,920 --> 01:25:46,658
imagine that if my normal has to still

2104
01:25:45,010 --> 01:25:48,429
point in the same direction it used to

2105
01:25:46,658 --> 01:25:51,250
point well let's just move the whole

2106
01:25:48,429 --> 01:25:56,170
world so that the light is just where it

2107
01:25:51,250 --> 01:25:58,118
should be and that's exactly what I can

2108
01:25:56,170 --> 01:26:01,389
do if we take our equation over here

2109
01:25:58,118 --> 01:26:05,079
right and we say I want to do the

2110
01:26:01,389 --> 01:26:07,750
inverse operation on the light location

2111
01:26:05,079 --> 01:26:10,750
where the light would be if I had

2112
01:26:07,750 --> 01:26:13,238
rotated my point by this matrix right so

2113
01:26:10,750 --> 01:26:15,250
I'm applying this rotation if we just

2114
01:26:13,238 --> 01:26:18,459
work the math out we get our inverse

2115
01:26:15,250 --> 01:26:20,319
times the light - just the original

2116
01:26:18,460 --> 01:26:22,539
input point and that's because our

2117
01:26:20,319 --> 01:26:24,460
inverse and itself will cancel right the

2118
01:26:22,539 --> 01:26:27,010
inverse transform times the transform is

2119
01:26:24,460 --> 01:26:28,989
just going to be nothing and I've

2120
01:26:27,010 --> 01:26:30,460
already determined because thanks to

2121
01:26:28,988 --> 01:26:32,169
opening that black box at the beginning

2122
01:26:30,460 --> 01:26:34,960
we know the inverse of just a rotation

2123
01:26:32,170 --> 01:26:38,230
matrix is its transpose we know that if

2124
01:26:34,960 --> 01:26:41,649
I just transpose this matrix times the

2125
01:26:38,229 --> 01:26:46,238
light I will get the operation I'm

2126
01:26:41,649 --> 01:26:49,149
talking about right so if I just perform

2127
01:26:46,238 --> 01:26:53,500
this operation first and then subtract

2128
01:26:49,149 --> 01:26:56,439
the point away I will get the equation

2129
01:26:53,500 --> 01:26:58,689
in that original space right in that

2130
01:26:56,439 --> 01:27:02,529
sort of transform space even though I'm

2131
01:26:58,689 --> 01:27:05,169
no longer multiplying pH times that so

2132
01:27:02,529 --> 01:27:08,198
now I just have a way of producing this

2133
01:27:05,170 --> 01:27:10,449
information my LH becomes my newly

2134
01:27:08,198 --> 01:27:15,609
oriented light source and I just

2135
01:27:10,448 --> 01:27:17,169
subtract my pH from that so again this

2136
01:27:15,609 --> 01:27:19,929
is a really interesting thing if you

2137
01:27:17,170 --> 01:27:21,550
think about it by understanding all the

2138
01:27:19,929 --> 01:27:24,099
stuff we understand about matrices now

2139
01:27:21,550 --> 01:27:26,440
we can trivially solve this actually

2140
01:27:24,099 --> 01:27:27,760
relatively problematic situation we

2141
01:27:26,439 --> 01:27:30,488
would have encountered by death going eh

2142
01:27:27,760 --> 01:27:31,840
I know I don't have to always transfer

2143
01:27:30,488 --> 01:27:33,939
my objects I could just inverse

2144
01:27:31,840 --> 01:27:36,219
transform the light and that's the same

2145
01:27:33,939 --> 01:27:37,569
as transforming my object off we go and

2146
01:27:36,219 --> 01:27:38,619
it's trivial to compute that it's just a

2147
01:27:37,569 --> 01:27:40,420
transpose I don't have to do

2148
01:27:38,619 --> 01:27:44,380
computation is just flipping some

2149
01:27:40,420 --> 01:27:47,500
numbers around right so again we get

2150
01:27:44,380 --> 01:27:49,210
back to understanding these matrices

2151
01:27:47,500 --> 01:27:51,819
leads to all sorts of other

2152
01:27:49,210 --> 01:27:54,010
understanding that we can apply and this

2153
01:27:51,819 --> 01:27:55,299
is where we get to understanding object

2154
01:27:54,010 --> 01:27:57,850
space normal mapping which is what I've

2155
01:27:55,300 --> 01:27:59,890
just described it's normal mapping where

2156
01:27:57,850 --> 01:28:01,510
you take a light source you map it into

2157
01:27:59,890 --> 01:28:03,190
the space of an object and then you read

2158
01:28:01,510 --> 01:28:05,050
out of a normal map the direction the

2159
01:28:03,189 --> 01:28:08,859
normals are going and you multiply them

2160
01:28:05,050 --> 01:28:10,810
together all right so that's a pretty

2161
01:28:08,859 --> 01:28:12,880
easy way to understand basically

2162
01:28:10,810 --> 01:28:15,460
everything that's involved in object

2163
01:28:12,880 --> 01:28:17,170
space normal mapping now let's go to

2164
01:28:15,460 --> 01:28:20,710
something a little bit more complicated

2165
01:28:17,170 --> 01:28:22,829
if we have deformable surfaces right

2166
01:28:20,710 --> 01:28:24,699
which are characters stuff like this

2167
01:28:22,829 --> 01:28:26,649
which you might want to use normal

2168
01:28:24,699 --> 01:28:28,840
mapping on a lobby space normal mapping

2169
01:28:26,649 --> 01:28:30,939
if you just have a say crate flying

2170
01:28:28,840 --> 01:28:32,920
around in the world well you're done

2171
01:28:30,939 --> 01:28:35,229
right obviously a snore mapping takes

2172
01:28:32,920 --> 01:28:36,789
care of it transform the light into the

2173
01:28:35,229 --> 01:28:40,629
space of the object by using the inverse

2174
01:28:36,789 --> 01:28:42,430
of the objects transform encode the

2175
01:28:40,630 --> 01:28:44,560
normals in the normal map as just

2176
01:28:42,430 --> 01:28:45,940
normals in world space all right I

2177
01:28:44,560 --> 01:28:47,230
should say object space in this case

2178
01:28:45,939 --> 01:28:50,469
right whatever the objects rest

2179
01:28:47,229 --> 01:28:52,809
orientation is execute the pipeline as

2180
01:28:50,470 --> 01:28:55,750
written and you're done

2181
01:28:52,810 --> 01:28:57,580
dot three takes care of the rest however

2182
01:28:55,750 --> 01:29:00,899
let's suppose we have a character if

2183
01:28:57,579 --> 01:29:03,460
services are deforming what do we do now

2184
01:29:00,899 --> 01:29:05,589
now we've got problems because

2185
01:29:03,460 --> 01:29:09,010
deformable surfaces cannot include

2186
01:29:05,590 --> 01:29:11,949
normals and have the light bend to meet

2187
01:29:09,010 --> 01:29:14,500
them anymore because the whole surface

2188
01:29:11,949 --> 01:29:18,069
itself is deforming which means that any

2189
01:29:14,500 --> 01:29:19,600
individual piece of the surface now has

2190
01:29:18,069 --> 01:29:22,059
a different opinion of where the light

2191
01:29:19,600 --> 01:29:23,470
was if the normals can't bend right this

2192
01:29:22,060 --> 01:29:26,230
seems to be a pretty tricky problem

2193
01:29:23,470 --> 01:29:28,119
right so if I imagine a deformable

2194
01:29:26,229 --> 01:29:30,269
surface let's say you know a part of a

2195
01:29:28,119 --> 01:29:33,189
character's arms the elbow is bending

2196
01:29:30,270 --> 01:29:34,960
well if it's highly bent then we get a

2197
01:29:33,189 --> 01:29:36,969
surface like this and this is how the

2198
01:29:34,960 --> 01:29:39,039
normals are supposed to read if it's not

2199
01:29:36,970 --> 01:29:40,240
bent much at all that same surface may

2200
01:29:39,039 --> 01:29:42,399
have normals that look more like this

2201
01:29:40,239 --> 01:29:44,170
this becomes a problem for us even

2202
01:29:42,399 --> 01:29:45,879
though these are the same normals

2203
01:29:44,170 --> 01:29:49,569
encoded in the texture map potentially

2204
01:29:45,880 --> 01:29:51,880
we need to know that their orientation

2205
01:29:49,569 --> 01:29:52,059
and world space Bend you know is having

2206
01:29:51,880 --> 01:29:55,779
the

2207
01:29:52,060 --> 01:29:57,970
then applied to it so what are we gonna

2208
01:29:55,779 --> 01:30:00,069
do right how are we gonna solve this

2209
01:29:57,970 --> 01:30:01,840
problem and you can see here if I've

2210
01:30:00,069 --> 01:30:04,509
shown you the normals at the vertices

2211
01:30:01,840 --> 01:30:10,539
here the normals at the vertices change

2212
01:30:04,510 --> 01:30:14,170
right as we Bend all right so the key

2213
01:30:10,539 --> 01:30:17,739
here is to go how do we find a way to

2214
01:30:14,170 --> 01:30:19,869
encode the normal maps in such a way

2215
01:30:17,739 --> 01:30:23,170
that we could still use them even if the

2216
01:30:19,869 --> 01:30:25,599
surface is bending and it seems a little

2217
01:30:23,170 --> 01:30:26,980
bit like a intractable problem at first

2218
01:30:25,600 --> 01:30:29,800
but if you dig a little bit deeper you

2219
01:30:26,979 --> 01:30:31,629
realize actually we can probably do the

2220
01:30:29,800 --> 01:30:34,510
same thing we did for objects that don't

2221
01:30:31,630 --> 01:30:36,670
deform just by treating the transforms

2222
01:30:34,510 --> 01:30:37,869
more locally instead of having an object

2223
01:30:36,670 --> 01:30:39,640
space transformed what if we just

2224
01:30:37,869 --> 01:30:41,470
thought about transforms that existed at

2225
01:30:39,640 --> 01:30:46,030
the vertices because that's what's

2226
01:30:41,470 --> 01:30:47,500
deforming all right so how do i encode

2227
01:30:46,029 --> 01:30:50,920
this normal how do i code that normal

2228
01:30:47,500 --> 01:30:54,310
right there well what if I had a frame

2229
01:30:50,920 --> 01:30:57,750
of reference at each vertex and I

2230
01:30:54,310 --> 01:30:59,890
encoded the normal relative to the

2231
01:30:57,750 --> 01:31:03,520
interpolated frame of reference that's

2232
01:30:59,890 --> 01:31:05,680
in between those two vertices right so I

2233
01:31:03,520 --> 01:31:07,900
have a frame of reference at p0 I have a

2234
01:31:05,680 --> 01:31:08,920
frame of reference of p1 and I know by

2235
01:31:07,899 --> 01:31:11,649
interpolating those two frames of

2236
01:31:08,920 --> 01:31:13,329
reference a1 favourite reference

2237
01:31:11,649 --> 01:31:16,479
specifically for that very point on the

2238
01:31:13,329 --> 01:31:18,640
object and I encode the normal just like

2239
01:31:16,479 --> 01:31:20,799
I use the object space just the just a

2240
01:31:18,640 --> 01:31:22,329
resting object's frame of reference to

2241
01:31:20,800 --> 01:31:25,260
encode the normal in the object space

2242
01:31:22,329 --> 01:31:27,189
sense I'm gonna use this specific

2243
01:31:25,260 --> 01:31:32,770
interpolated frame of reference to

2244
01:31:27,189 --> 01:31:35,079
encode the normal here that's what I

2245
01:31:32,770 --> 01:31:37,000
write into the texture I write into the

2246
01:31:35,079 --> 01:31:38,859
texture whatever the values of the

2247
01:31:37,000 --> 01:31:43,029
normal would be in this interpolated

2248
01:31:38,859 --> 01:31:46,269
frame of reference right well if I did

2249
01:31:43,029 --> 01:31:49,989
that then what I could do is say all

2250
01:31:46,270 --> 01:31:53,500
right at every vertex I'll transform the

2251
01:31:49,989 --> 01:31:58,420
light into the vertices frames of

2252
01:31:53,500 --> 01:32:01,029
reference and then I will know where the

2253
01:31:58,420 --> 01:32:03,940
light is in an interpolated frame of

2254
01:32:01,029 --> 01:32:05,859
reference so that the normal can still

2255
01:32:03,939 --> 01:32:10,419
be in its own space on

2256
01:32:05,859 --> 01:32:14,219
and it can know where the light would be

2257
01:32:10,420 --> 01:32:18,190
relative to its frame of reference right

2258
01:32:14,219 --> 01:32:20,439
so the light here LF is where the light

2259
01:32:18,189 --> 01:32:22,750
is in this frame of reference

2260
01:32:20,439 --> 01:32:26,979
interpolated so the normal would not

2261
01:32:22,750 --> 01:32:30,550
have to bend it's a little bit

2262
01:32:26,979 --> 01:32:32,919
mind-boggling right and I've hand waved

2263
01:32:30,550 --> 01:32:36,159
everything how do we build vertex frames

2264
01:32:32,920 --> 01:32:39,130
of reference right how do you even know

2265
01:32:36,158 --> 01:32:42,519
what that means well the answer is we

2266
01:32:39,130 --> 01:32:45,760
have to develop something that is a

2267
01:32:42,520 --> 01:32:50,409
rigorous way of defining at any given

2268
01:32:45,760 --> 01:32:52,719
point on our mesh some kind of a space

2269
01:32:50,408 --> 01:32:54,399
we can map things into that will

2270
01:32:52,719 --> 01:32:57,429
interpolate properly across the surface

2271
01:32:54,399 --> 01:33:00,969
of the object and that's exactly what we

2272
01:32:57,429 --> 01:33:05,230
did back in the days when normal mapping

2273
01:33:00,969 --> 01:33:07,448
had to be sort of created what we did is

2274
01:33:05,229 --> 01:33:11,859
create something called a tangent space

2275
01:33:07,448 --> 01:33:14,049
and what a tangent space is is it's a

2276
01:33:11,859 --> 01:33:17,649
full three dimensional axis system

2277
01:33:14,050 --> 01:33:19,690
interpolated over the whole object that

2278
01:33:17,649 --> 01:33:22,179
encodes the tangents to the surface the

2279
01:33:19,689 --> 01:33:25,210
normal and a full frame of reference

2280
01:33:22,179 --> 01:33:28,649
around the normal now we know one part

2281
01:33:25,210 --> 01:33:32,590
of it we're going into it pretty

2282
01:33:28,649 --> 01:33:36,789
well-equipped on one axis and that axis

2283
01:33:32,590 --> 01:33:40,210
is the z-axis right we know the normal

2284
01:33:36,789 --> 01:33:43,779
is pointing in a particular direction

2285
01:33:40,210 --> 01:33:46,420
which we've been told every vertex has a

2286
01:33:43,779 --> 01:33:47,079
normal when the mesh was made we know

2287
01:33:46,420 --> 01:33:49,779
that one

2288
01:33:47,079 --> 01:33:53,229
so the question are is what are the

2289
01:33:49,779 --> 01:33:56,289
other two axes so if we look at what we

2290
01:33:53,229 --> 01:33:59,919
have to do we know what we have to do is

2291
01:33:56,289 --> 01:34:02,738
take the light in world space we

2292
01:33:59,920 --> 01:34:05,520
subtract the point that we're given

2293
01:34:02,738 --> 01:34:08,468
whichever point it is right

2294
01:34:05,520 --> 01:34:12,340
that'll give us that vector and then we

2295
01:34:08,469 --> 01:34:15,010
need to map that into a local tangent

2296
01:34:12,340 --> 01:34:17,770
space and to map it into a local tangent

2297
01:34:15,010 --> 01:34:19,329
space we need some kind of a transform

2298
01:34:17,770 --> 01:34:22,360
and we'll use the inverse

2299
01:34:19,329 --> 01:34:25,510
transform right of whatever this vertex

2300
01:34:22,359 --> 01:34:27,819
space is we know one component of as a

2301
01:34:25,510 --> 01:34:34,270
normal we don't know what the other two

2302
01:34:27,819 --> 01:34:37,090
components are all right so what we are

2303
01:34:34,270 --> 01:34:39,610
looking for if we were to take a diagram

2304
01:34:37,090 --> 01:34:42,400
is that at a particular vertex of our

2305
01:34:39,609 --> 01:34:45,279
mesh we want to produce a vector a and a

2306
01:34:42,399 --> 01:34:47,889
vector B such that they form a nice

2307
01:34:45,279 --> 01:34:49,809
little orthogonal well it's not really

2308
01:34:47,890 --> 01:34:52,119
necessarily orthogonal shouldn't quite

2309
01:34:49,810 --> 01:34:54,220
say that yet but a nice little tangent

2310
01:34:52,119 --> 01:34:56,170
space basis here that we can use for

2311
01:34:54,220 --> 01:34:57,699
mapping our light source in so that when

2312
01:34:56,170 --> 01:34:59,440
we want to work with our normals will

2313
01:34:57,699 --> 01:35:03,630
always be in the space the normals were

2314
01:34:59,439 --> 01:35:06,819
encoded even if our surface is deforming

2315
01:35:03,630 --> 01:35:12,310
how're we gonna do right how're we gonna

2316
01:35:06,819 --> 01:35:14,349
start from this and get there well it

2317
01:35:12,310 --> 01:35:17,500
turns out we have more information than

2318
01:35:14,350 --> 01:35:21,070
we think we don't just have the normals

2319
01:35:17,500 --> 01:35:23,470
we know that the normal map itself has

2320
01:35:21,069 --> 01:35:25,119
to be applied to this mesh and in order

2321
01:35:23,470 --> 01:35:28,119
for the normal map to be applied to the

2322
01:35:25,119 --> 01:35:30,699
mesh we also know that the U coordinate

2323
01:35:28,119 --> 01:35:33,699
and the V coordinate of the texture map

2324
01:35:30,699 --> 01:35:37,269
has to be applied at all the vertices so

2325
01:35:33,699 --> 01:35:40,840
we actually know what the frame of

2326
01:35:37,270 --> 01:35:43,540
reference is in the texture right

2327
01:35:40,840 --> 01:35:46,119
because we know the U and V coordinates

2328
01:35:43,539 --> 01:35:49,329
so we have another piece of information

2329
01:35:46,119 --> 01:35:52,000
we can use to form a basis that aligns

2330
01:35:49,329 --> 01:35:54,550
with the way that the surface has been

2331
01:35:52,000 --> 01:35:59,739
mapped by the artists textured over it

2332
01:35:54,550 --> 01:36:03,010
right so what we can use is we can use

2333
01:35:59,739 --> 01:36:06,130
the direction that those u coordinates

2334
01:36:03,010 --> 01:36:08,800
and video coordinates are going in order

2335
01:36:06,130 --> 01:36:11,170
to produce a tangent space for our mesh

2336
01:36:08,800 --> 01:36:11,949
now you see I've notated it here with

2337
01:36:11,170 --> 01:36:14,170
something that's going to be very

2338
01:36:11,949 --> 01:36:18,460
unfamiliar with you and bit outside the

2339
01:36:14,170 --> 01:36:20,680
scope of this lecture not to cover the

2340
01:36:18,460 --> 01:36:23,319
general version of it and that is the

2341
01:36:20,680 --> 01:36:24,970
gradient right this is the gradient

2342
01:36:23,319 --> 01:36:26,409
operator what the gradient operator says

2343
01:36:24,970 --> 01:36:28,270
is it says the direction of change

2344
01:36:26,409 --> 01:36:31,329
basically right the direction that

2345
01:36:28,270 --> 01:36:33,280
you're going and there's a lot of ways

2346
01:36:31,329 --> 01:36:35,559
that you can use this

2347
01:36:33,279 --> 01:36:38,469
very often it's a very very important

2348
01:36:35,560 --> 01:36:40,420
operation to understand we're only going

2349
01:36:38,470 --> 01:36:42,579
to focus on one particular application

2350
01:36:40,420 --> 01:36:44,109
of it in this lecture and again it would

2351
01:36:42,579 --> 01:36:46,479
make for great additional reading if you

2352
01:36:44,109 --> 01:36:47,319
want to go find out more about it but

2353
01:36:46,479 --> 01:36:49,929
for right now we're going to talk about

2354
01:36:47,319 --> 01:36:51,939
one aspect of it and the aspect of it

2355
01:36:49,930 --> 01:36:54,880
that we're going to talk about is very

2356
01:36:51,939 --> 01:36:58,299
specifically figuring out what direction

2357
01:36:54,880 --> 01:37:00,520
u and V go so that we can align our

2358
01:36:58,300 --> 01:37:01,900
coordinate frame with how the texture

2359
01:37:00,520 --> 01:37:04,360
moves across the surface which will

2360
01:37:01,899 --> 01:37:13,379
produce a nice solid basis for

2361
01:37:04,359 --> 01:37:16,479
interpolating our normal map okay so

2362
01:37:13,380 --> 01:37:19,239
even without knowing what this operator

2363
01:37:16,479 --> 01:37:21,159
is and let's just pretend we don't even

2364
01:37:19,239 --> 01:37:24,309
know there is such an operator let's

2365
01:37:21,159 --> 01:37:28,420
pretend we don't even know enough math

2366
01:37:24,310 --> 01:37:30,670
to know that a gradient is a thing we

2367
01:37:28,420 --> 01:37:34,300
have no idea we don't know what that is

2368
01:37:30,670 --> 01:37:37,300
and we don't care we just know what we

2369
01:37:34,300 --> 01:37:44,440
want it to mean what we want it to mean

2370
01:37:37,300 --> 01:37:46,750
is that I say grad U or whatever I'm

2371
01:37:44,439 --> 01:37:50,199
saying here this symbol U means the

2372
01:37:46,750 --> 01:37:53,979
direction in which U is changing right

2373
01:37:50,199 --> 01:37:58,260
or grad V is the direction in which V is

2374
01:37:53,979 --> 01:38:01,509
changing right more specifically let's

2375
01:37:58,260 --> 01:38:04,539
say I imagined I'm standing on the

2376
01:38:01,510 --> 01:38:07,390
surface of my mesh and I'm going to

2377
01:38:04,539 --> 01:38:09,909
increase just the V value I'm not going

2378
01:38:07,390 --> 01:38:14,020
to touch you at all what direction do I

2379
01:38:09,909 --> 01:38:16,420
walk along that to keep you constant but

2380
01:38:14,020 --> 01:38:20,500
V changing or vice versa I'm going to

2381
01:38:16,420 --> 01:38:22,480
change you right where do I move across

2382
01:38:20,500 --> 01:38:26,560
the surface to change you and only you

2383
01:38:22,479 --> 01:38:27,699
and V stays the same so you don't need

2384
01:38:26,560 --> 01:38:32,890
to know what a gradient isn't you don't

2385
01:38:27,699 --> 01:38:34,599
need to care actually right in order to

2386
01:38:32,890 --> 01:38:38,829
look at this particular circumstance

2387
01:38:34,600 --> 01:38:40,270
here all you need to know is that I'm

2388
01:38:38,829 --> 01:38:41,680
gonna define that operator that way

2389
01:38:40,270 --> 01:38:43,690
let's not even use the term gradient

2390
01:38:41,680 --> 01:38:46,150
we'll just say we're gonna use this

2391
01:38:43,689 --> 01:38:47,169
operation here to mean I want the place

2392
01:38:46,149 --> 01:38:48,429
where only this thing

2393
01:38:47,170 --> 01:38:52,899
changes and the other thing doesn't

2394
01:38:48,429 --> 01:38:54,909
change okay so if I take a look at this

2395
01:38:52,899 --> 01:38:57,279
equation what I have written out is a

2396
01:38:54,909 --> 01:39:01,539
statement of exactly what I just said

2397
01:38:57,279 --> 01:39:06,159
for you I am going to say that a some

2398
01:39:01,539 --> 01:39:12,399
scalar times the first UV right whatever

2399
01:39:06,159 --> 01:39:14,109
it is in the in imagining 0 1 0 I should

2400
01:39:12,399 --> 01:39:14,619
define these terms a little more

2401
01:39:14,109 --> 01:39:17,559
carefully here

2402
01:39:14,619 --> 01:39:20,590
so because I drew the diagram we haven't

2403
01:39:17,560 --> 01:39:24,190
so much about it I have p0 right and

2404
01:39:20,590 --> 01:39:29,199
then I have p1 out here and p2 out here

2405
01:39:24,189 --> 01:39:34,928
right I have this if I take the vector

2406
01:39:29,198 --> 01:39:36,729
from P to P 2 or from P to P 1 if I take

2407
01:39:34,929 --> 01:39:39,039
those vectors so I would subtract p2

2408
01:39:36,729 --> 01:39:42,389
from P 1 for this vector I subtract P 1

2409
01:39:39,039 --> 01:39:46,510
from P for this vector I would get a

2410
01:39:42,390 --> 01:39:48,730
change in UV if I subtracted the you

2411
01:39:46,510 --> 01:39:52,380
coordinates I would get a change in X Y

2412
01:39:48,729 --> 01:39:57,009
Z if I track to the x coordinates right

2413
01:39:52,380 --> 01:40:00,400
so if I subtract the UV value at p2 from

2414
01:39:57,010 --> 01:40:04,960
the UV value at p1 I get the change in U

2415
01:40:00,399 --> 01:40:08,259
as I go from from p0 to p1 the same is

2416
01:40:04,960 --> 01:40:11,260
true of 2 so I have two basis vectors if

2417
01:40:08,260 --> 01:40:13,690
you will going from 0 to 1 and 0 to 2

2418
01:40:11,260 --> 01:40:15,130
and I can look at the change in UV

2419
01:40:13,689 --> 01:40:18,698
coordinate and I can make a vector so

2420
01:40:15,130 --> 01:40:20,880
this is in UV space right it's on the

2421
01:40:18,698 --> 01:40:23,559
texture map you can think of it that way

2422
01:40:20,880 --> 01:40:28,449
so if I write this equation some scalar

2423
01:40:23,560 --> 01:40:32,110
times u the UV change from 0 to 1 plus

2424
01:40:28,448 --> 01:40:37,349
some scalar times the change in in you

2425
01:40:32,109 --> 01:40:42,839
from 0 to 2 change in UV from 0 to that

2426
01:40:37,350 --> 01:40:47,070
left hand side represents an arbitrary

2427
01:40:42,840 --> 01:40:49,539
combination of these two vectors right

2428
01:40:47,069 --> 01:40:52,659
so I can take an arbitrary combination

2429
01:40:49,539 --> 01:40:58,090
any scalar I want any scalar I want of

2430
01:40:52,659 --> 01:41:01,069
these two Delta's if you will and I can

2431
01:40:58,090 --> 01:41:03,860
say I want that arbitrary combination

2432
01:41:01,069 --> 01:41:09,349
to come out to be equal to a unit change

2433
01:41:03,859 --> 01:41:11,630
in you and no change in V that's exactly

2434
01:41:09,349 --> 01:41:15,349
the thing I said I wanted the direction

2435
01:41:11,630 --> 01:41:21,199
in which U is changing and where V does

2436
01:41:15,349 --> 01:41:22,849
not change at all okay now why do I want

2437
01:41:21,198 --> 01:41:26,269
that what does that do for me

2438
01:41:22,849 --> 01:41:30,319
well once I know the a and B that

2439
01:41:26,270 --> 01:41:33,290
produce this result I can use the same a

2440
01:41:30,319 --> 01:41:38,359
and B to produce a combination of the X

2441
01:41:33,289 --> 01:41:42,019
Y Z Delta's to get me my gradient new

2442
01:41:38,359 --> 01:41:44,689
direction right because the combination

2443
01:41:42,020 --> 01:41:48,590
of these two vectors that produces a

2444
01:41:44,689 --> 01:41:51,710
unit walk in you I can just look at the

2445
01:41:48,590 --> 01:41:56,000
XYZ and go that's the direction in world

2446
01:41:51,710 --> 01:41:57,980
space where that would occur as well so

2447
01:41:56,000 --> 01:42:01,310
now I'm left with a simple task of

2448
01:41:57,979 --> 01:42:04,209
solving what is a two-dimensional

2449
01:42:01,310 --> 01:42:05,960
equation two unknowns two equations

2450
01:42:04,210 --> 01:42:08,328
here's the scalar

2451
01:42:05,960 --> 01:42:12,739
right all I'm doing is multiplying au 0

2452
01:42:08,328 --> 01:42:16,429
plus B use au 0 1 plus B u 0 2 equals 1

2453
01:42:12,738 --> 01:42:17,149
AV 0 1 plus b v 0 2 equals 0 right here

2454
01:42:16,429 --> 01:42:20,949
it is

2455
01:42:17,149 --> 01:42:24,138
I have two equations in two unknowns

2456
01:42:20,948 --> 01:42:24,589
that's high school algebra everyone can

2457
01:42:24,139 --> 01:42:27,590
do it

2458
01:42:24,590 --> 01:42:31,130
here it goes right there is my solution

2459
01:42:27,590 --> 01:42:33,590
for a solving for a plugging back into

2460
01:42:31,130 --> 01:42:36,529
the other equation solving for B here's

2461
01:42:33,590 --> 01:42:38,869
my B plug back in to solve for a and

2462
01:42:36,529 --> 01:42:39,979
here we go I won't belabor the steps

2463
01:42:38,868 --> 01:42:41,598
because again this is high school

2464
01:42:39,979 --> 01:42:43,129
algebra everyone's had to do this at

2465
01:42:41,599 --> 01:42:49,099
some point if they ever went to high

2466
01:42:43,130 --> 01:42:53,270
school right that's it so now I know

2467
01:42:49,099 --> 01:42:57,380
just from high school algebra I know

2468
01:42:53,270 --> 01:43:00,110
that these two equations are how I

2469
01:42:57,380 --> 01:43:06,529
produce the a and B values that would

2470
01:43:00,109 --> 01:43:10,609
tell me gradient you dumb deal I can

2471
01:43:06,529 --> 01:43:12,920
repeat that process for V right same

2472
01:43:10,609 --> 01:43:15,108
exact thing now I just have a C and a D

2473
01:43:12,920 --> 01:43:19,699
and instead of solving for ones

2474
01:43:15,109 --> 01:43:22,099
I solve for zero one off we go look

2475
01:43:19,698 --> 01:43:24,828
familiar it should it's exactly the same

2476
01:43:22,099 --> 01:43:27,828
right the only difference is the terms

2477
01:43:24,828 --> 01:43:30,378
are swapped because if you start with

2478
01:43:27,828 --> 01:43:33,349
zero one you get different multiply

2479
01:43:30,378 --> 01:43:35,748
through as one zero but it's exactly the

2480
01:43:33,349 --> 01:43:43,939
same process and produces nearly exactly

2481
01:43:35,748 --> 01:43:47,568
the same results right so now all we

2482
01:43:43,939 --> 01:43:50,389
need to do is apply these right

2483
01:43:47,569 --> 01:43:52,760
we just need to apply these through and

2484
01:43:50,389 --> 01:43:54,260
as we go I don't know why I wanted to

2485
01:43:52,760 --> 01:43:55,369
call that out specifically I think I

2486
01:43:54,260 --> 01:43:57,199
just wanted to say that you'll note this

2487
01:43:55,368 --> 01:44:01,308
is on the denominator of all of them

2488
01:43:57,198 --> 01:44:02,868
right oh well you know what I may have

2489
01:44:01,309 --> 01:44:06,048
mentioned in the original lecture that

2490
01:44:02,868 --> 01:44:08,958
that was the determinant of 2x2 matrix

2491
01:44:06,048 --> 01:44:10,578
but you know what that's too much we've

2492
01:44:08,958 --> 01:44:12,078
already covered too much math I'll

2493
01:44:10,578 --> 01:44:16,099
simply say if you want to read about

2494
01:44:12,078 --> 01:44:17,719
determinants this might be a motivation

2495
01:44:16,099 --> 01:44:21,229
for you to do so again additional

2496
01:44:17,719 --> 01:44:24,349
reading related to this particular topic

2497
01:44:21,229 --> 01:44:26,899
alright so that's how we could produce a

2498
01:44:24,349 --> 01:44:28,668
tangent space very easily by doing those

2499
01:44:26,899 --> 01:44:31,010
twos equations we'll get a U and a V

2500
01:44:28,668 --> 01:44:32,838
which we combine with our n to give us

2501
01:44:31,010 --> 01:44:36,048
an idea of how the surface is changing

2502
01:44:32,838 --> 01:44:38,389
in that area that will be stable as long

2503
01:44:36,048 --> 01:44:39,859
as the UV map is stable which we know it

2504
01:44:38,389 --> 01:44:42,109
has to be because the artist had to make

2505
01:44:39,859 --> 01:44:43,760
a continuous UV map along those

2506
01:44:42,109 --> 01:44:48,499
triangles in order to not have seams in

2507
01:44:43,760 --> 01:44:49,998
the texture anyway right so here's I

2508
01:44:48,498 --> 01:44:51,828
believe this again was just the

2509
01:44:49,998 --> 01:44:53,868
determinant part this is the term of the

2510
01:44:51,828 --> 01:44:57,078
matrix so again I believe that for

2511
01:44:53,868 --> 01:44:59,028
additional reading so with this we can

2512
01:44:57,078 --> 01:45:01,938
build our tangent frame here is what it

2513
01:44:59,029 --> 01:45:04,249
would look like right Delta u Delta V

2514
01:45:01,939 --> 01:45:06,829
I'm sorry gradient u gradient V and then

2515
01:45:04,248 --> 01:45:10,698
the N right the normal that we already

2516
01:45:06,828 --> 01:45:13,128
had now oftentimes this space is

2517
01:45:10,698 --> 01:45:15,618
normalized I'm sorry orthogonalize so

2518
01:45:13,128 --> 01:45:17,328
these things will not all necessarily be

2519
01:45:15,618 --> 01:45:20,389
orthogonal to each other they won't

2520
01:45:17,328 --> 01:45:21,528
produce a standard unit frame where

2521
01:45:20,389 --> 01:45:23,538
everything's at right angles to each

2522
01:45:21,529 --> 01:45:24,589
other so sometimes people normalize

2523
01:45:23,538 --> 01:45:27,408
these sometimes they don't there's

2524
01:45:24,588 --> 01:45:28,519
reasons to and not to again not really

2525
01:45:27,408 --> 01:45:29,689
relevant to the electric

2526
01:45:28,520 --> 01:45:30,710
this point but point being this is where

2527
01:45:29,689 --> 01:45:31,969
you start and you can choose to

2528
01:45:30,710 --> 01:45:32,989
normalize the sir choose not to know

2529
01:45:31,970 --> 01:45:36,350
it's depending on what you're trying to

2530
01:45:32,989 --> 01:45:38,510
write but here's our tangent frame we've

2531
01:45:36,350 --> 01:45:42,950
got it again simple math high school

2532
01:45:38,510 --> 01:45:47,180
algebra we can do it alright so now we

2533
01:45:42,949 --> 01:45:48,829
know how to encode we produce those

2534
01:45:47,180 --> 01:45:50,570
tangent frames at each vertex we

2535
01:45:48,829 --> 01:45:52,640
interpolate the tangent frame to the

2536
01:45:50,569 --> 01:45:56,000
point we're trying to encode right again

2537
01:45:52,640 --> 01:45:58,970
just by doing that standard barycentre

2538
01:45:56,000 --> 01:46:00,770
composite and then we map the normal

2539
01:45:58,970 --> 01:46:02,449
into that tangent frame and store it in

2540
01:46:00,770 --> 01:46:06,230
the normal map very very straightforward

2541
01:46:02,449 --> 01:46:09,710
and so now we have to come back here and

2542
01:46:06,229 --> 01:46:12,349
look at what we're doing this was our

2543
01:46:09,710 --> 01:46:13,819
pixel pipeline right and the only change

2544
01:46:12,350 --> 01:46:15,140
we have to make because remember this

2545
01:46:13,819 --> 01:46:17,029
has to stay the same because the

2546
01:46:15,140 --> 01:46:19,100
hardware can't do anything else this is

2547
01:46:17,029 --> 01:46:20,539
all it could do at that time we didn't

2548
01:46:19,100 --> 01:46:22,190
have programmable pixel shaders really

2549
01:46:20,539 --> 01:46:24,289
we just had I mean there was they were

2550
01:46:22,189 --> 01:46:25,819
slightly par they're more like crossbar

2551
01:46:24,289 --> 01:46:27,260
so you could sort of just route things a

2552
01:46:25,819 --> 01:46:29,090
little bit so this is all we could

2553
01:46:27,260 --> 01:46:30,440
really do there wasn't much we could do

2554
01:46:29,090 --> 01:46:31,670
and by the way even this we couldn't

2555
01:46:30,439 --> 01:46:32,809
really do you had to look it up in a

2556
01:46:31,670 --> 01:46:35,060
cube map that's a whole another story

2557
01:46:32,810 --> 01:46:35,750
but basically this is all we can do in

2558
01:46:35,060 --> 01:46:37,670
the picture study we weren't

2559
01:46:35,750 --> 01:46:39,100
programmable shaders like they are today

2560
01:46:37,670 --> 01:46:41,239
where they have lots of flexibility so

2561
01:46:39,100 --> 01:46:44,539
the only thing we can really modify us

2562
01:46:41,239 --> 01:46:47,000
out here good thing we can write so all

2563
01:46:44,539 --> 01:46:48,800
we have to do is we just take that light

2564
01:46:47,000 --> 01:46:50,569
and instead of doing the inverse

2565
01:46:48,800 --> 01:46:52,820
transform by a stationary object

2566
01:46:50,569 --> 01:46:54,409
transform that we were ewing before now

2567
01:46:52,819 --> 01:46:57,259
we just do the tangent frame that's the

2568
01:46:54,409 --> 01:46:59,389
only modification we have to do now it

2569
01:46:57,260 --> 01:47:01,039
costs more on this side why because we

2570
01:46:59,390 --> 01:47:03,110
have to produce those interpolated

2571
01:47:01,039 --> 01:47:05,029
tangent frames interpolated in that

2572
01:47:03,109 --> 01:47:06,799
along the triangle because again we're

2573
01:47:05,029 --> 01:47:08,359
we're not really gonna interpolate the

2574
01:47:06,800 --> 01:47:10,750
tangent frames along the triangle we're

2575
01:47:08,359 --> 01:47:14,210
gonna interpolate the transformed light

2576
01:47:10,750 --> 01:47:16,550
but as we deform our surfaces we have to

2577
01:47:14,210 --> 01:47:17,989
deform our tangent spaces with them so

2578
01:47:16,550 --> 01:47:21,829
there was more work to be done here

2579
01:47:17,989 --> 01:47:26,029
during deformation but other than that

2580
01:47:21,829 --> 01:47:27,229
this was all we had to do right so

2581
01:47:26,029 --> 01:47:30,399
that's tangent space normal mapping

2582
01:47:27,229 --> 01:47:33,500
soup-to-nuts here's what one looks like

2583
01:47:30,399 --> 01:47:35,329
this is a tangent space normal map of

2584
01:47:33,500 --> 01:47:37,970
the head that I showed at the beginning

2585
01:47:35,329 --> 01:47:40,189
the half head right and what you can see

2586
01:47:37,970 --> 01:47:41,750
is when you encode a normal map in here

2587
01:47:40,189 --> 01:47:42,379
you get kind of exactly what you would

2588
01:47:41,750 --> 01:47:45,170
expect

2589
01:47:42,380 --> 01:47:47,239
all of the information that is that you

2590
01:47:45,170 --> 01:47:51,050
see as lighting in here is encoded as

2591
01:47:47,238 --> 01:47:53,959
sort of three-dimensional offsets and

2592
01:47:51,050 --> 01:47:57,619
the convention when encoding a normal

2593
01:47:53,960 --> 01:48:02,198
map is that you encode a normal map as X

2594
01:47:57,619 --> 01:48:05,119
Y Z RGB right the X goes into the x

2595
01:48:02,198 --> 01:48:09,169
coordinates into the are the Y goes into

2596
01:48:05,119 --> 01:48:12,050
the G the Z goes into the B now as we

2597
01:48:09,170 --> 01:48:14,329
got further along and shaders got more

2598
01:48:12,050 --> 01:48:16,940
able to do more work

2599
01:48:14,329 --> 01:48:18,380
it became unnecessary to store all three

2600
01:48:16,939 --> 01:48:19,969
because you could actually just store -

2601
01:48:18,380 --> 01:48:22,489
and generate the third because since

2602
01:48:19,969 --> 01:48:24,408
it's a normal once you get to values you

2603
01:48:22,488 --> 01:48:27,589
can generate the third right it's pretty

2604
01:48:24,408 --> 01:48:28,729
cheap to do that but you know originally

2605
01:48:27,590 --> 01:48:30,920
we didn't have the option so you

2606
01:48:28,729 --> 01:48:32,359
actually destroy all three and so if you

2607
01:48:30,920 --> 01:48:34,489
take a look at what this looks like you

2608
01:48:32,359 --> 01:48:36,589
can see it's overwhelmingly blue because

2609
01:48:34,488 --> 01:48:39,799
most of the time the surface doesn't

2610
01:48:36,590 --> 01:48:42,020
deviate much from just the normal normal

2611
01:48:39,800 --> 01:48:46,119
direction it's a slight deviation you

2612
01:48:42,020 --> 01:48:49,760
can see red where it starts to point in

2613
01:48:46,119 --> 01:48:52,189
in some direction XY z-- right you can

2614
01:48:49,760 --> 01:48:54,380
see green in one where it starts to

2615
01:48:52,189 --> 01:48:56,119
deviate Y wise right so you can sort of

2616
01:48:54,380 --> 01:48:58,600
read as you can see it's a very logical

2617
01:48:56,119 --> 01:49:04,760
thing as it was placed on the surface

2618
01:48:58,600 --> 01:49:07,010
okay so that's how normal Maps how it

2619
01:49:04,760 --> 01:49:08,270
was determined at the time but again

2620
01:49:07,010 --> 01:49:10,639
nobody knew how to do any of this stuff

2621
01:49:08,270 --> 01:49:13,010
people had to work out every last little

2622
01:49:10,639 --> 01:49:14,569
detail right everything from how you

2623
01:49:13,010 --> 01:49:16,850
figure out what tangent spaces are to

2624
01:49:14,569 --> 01:49:19,340
even that you wanted to do that to how

2625
01:49:16,850 --> 01:49:20,210
you did the dot three how I mean the

2626
01:49:19,340 --> 01:49:22,159
hardware people had to figure out the

2627
01:49:20,210 --> 01:49:23,658
dot three was even useful right and put

2628
01:49:22,158 --> 01:49:24,948
it in the hardware I need to figure how

2629
01:49:23,658 --> 01:49:26,119
you were gonna use it and all these

2630
01:49:24,948 --> 01:49:28,460
sorts of things right

2631
01:49:26,119 --> 01:49:33,319
all of this was unknown and now today

2632
01:49:28,460 --> 01:49:34,730
it's all known okay so what I want to

2633
01:49:33,319 --> 01:49:39,469
really emphasize here if you take a look

2634
01:49:34,729 --> 01:49:42,349
at all that stuff you can see how every

2635
01:49:39,469 --> 01:49:44,619
little single black box every little

2636
01:49:42,350 --> 01:49:47,480
piece that you choose to look into

2637
01:49:44,619 --> 01:49:52,429
repeats itself and affects everything

2638
01:49:47,479 --> 01:49:54,198
right a very simple sort of analysis of

2639
01:49:52,429 --> 01:49:56,210
very simple matrix math at the beginning

2640
01:49:54,198 --> 01:49:58,039
it repeated again in

2641
01:49:56,210 --> 01:50:00,380
and again and again and again inside

2642
01:49:58,039 --> 01:50:02,119
that normal mapping stuff and even if

2643
01:50:00,380 --> 01:50:05,869
you didn't understand anything that I

2644
01:50:02,119 --> 01:50:08,090
just said hopefully you could see that

2645
01:50:05,869 --> 01:50:11,689
repetition and those echoes all

2646
01:50:08,090 --> 01:50:14,300
throughout there right because pushing

2647
01:50:11,689 --> 01:50:17,899
forward on one thing and learning how

2648
01:50:14,300 --> 01:50:20,270
that thing works there is almost never a

2649
01:50:17,899 --> 01:50:22,699
time in game engine development where

2650
01:50:20,270 --> 01:50:25,850
everything that you learn and all of

2651
01:50:22,699 --> 01:50:28,130
those aspects that come together to

2652
01:50:25,850 --> 01:50:30,950
teach you how something worked don't

2653
01:50:28,130 --> 01:50:34,550
come back again and again and again and

2654
01:50:30,949 --> 01:50:36,679
if you've done enough of these you will

2655
01:50:34,550 --> 01:50:40,730
have a toolbox capable of pushing beyond

2656
01:50:36,680 --> 01:50:42,920
where we even are today right and that's

2657
01:50:40,729 --> 01:50:48,259
exactly what happened back in those days

2658
01:50:42,920 --> 01:50:51,440
there was no normal mapping people who

2659
01:50:48,260 --> 01:50:53,600
understood how these things worked and

2660
01:50:51,439 --> 01:50:55,699
pushed forward and did experiments and

2661
01:50:53,600 --> 01:50:57,590
apply the knowledge they'd learned by

2662
01:50:55,699 --> 01:51:01,279
digging into things people had already

2663
01:50:57,590 --> 01:51:03,710
figured out created a whole new

2664
01:51:01,279 --> 01:51:06,949
technology which today we take for

2665
01:51:03,710 --> 01:51:09,710
granted that is not the last time that

2666
01:51:06,949 --> 01:51:12,590
will happen it will happen many many

2667
01:51:09,710 --> 01:51:15,770
many more times before game development

2668
01:51:12,590 --> 01:51:17,930
is really understood we are probably

2669
01:51:15,770 --> 01:51:20,900
still at the infancy of what a game

2670
01:51:17,930 --> 01:51:24,289
engine can do and the game engines that

2671
01:51:20,899 --> 01:51:27,769
you can license today or use are a far

2672
01:51:24,289 --> 01:51:31,670
cry from taking advantage of all of what

2673
01:51:27,770 --> 01:51:34,760
the knowledge of math and the world and

2674
01:51:31,670 --> 01:51:36,859
physics and everything have to offer us

2675
01:51:34,760 --> 01:51:39,820
but we just don't know what it is

2676
01:51:36,859 --> 01:51:42,979
because we haven't pushed out there yet

2677
01:51:39,819 --> 01:51:45,199
not to mention a bunch of the new fields

2678
01:51:42,979 --> 01:51:47,389
deep reinforcement learning these sorts

2679
01:51:45,199 --> 01:51:49,369
of things coming to fruition now in

2680
01:51:47,390 --> 01:51:51,440
terms of AI or other stuff what did

2681
01:51:49,369 --> 01:51:56,210
those have in them go take a look tons

2682
01:51:51,439 --> 01:51:58,279
of matrices dot products threshold

2683
01:51:56,210 --> 01:52:01,750
ingredients all of these things they

2684
01:51:58,279 --> 01:52:01,750
come up everywhere

2685
01:52:03,840 --> 01:52:08,469
so what I really want you to take away

2686
01:52:06,609 --> 01:52:10,029
from this lecture is not any of the

2687
01:52:08,469 --> 01:52:12,158
specifics I don't care if you know

2688
01:52:10,029 --> 01:52:16,300
anything about matrices or normal

2689
01:52:12,158 --> 01:52:19,238
mapping after having heard that what I

2690
01:52:16,300 --> 01:52:22,869
care about is you understanding how all

2691
01:52:19,238 --> 01:52:26,678
of this is interrelated and how always

2692
01:52:22,868 --> 01:52:29,589
no matter where you are game development

2693
01:52:26,679 --> 01:52:32,289
is so early right now that there are so

2694
01:52:29,590 --> 01:52:34,840
many black boxes out there to open ones

2695
01:52:32,289 --> 01:52:40,329
we don't even know exist yet that you

2696
01:52:34,840 --> 01:52:44,920
could find and when you open one you see

2697
01:52:40,329 --> 01:52:49,090
a ton more right and we don't understand

2698
01:52:44,920 --> 01:52:52,868
any of these yet and when you open one

2699
01:52:49,090 --> 01:52:54,940
of those you get a ton more and we don't

2700
01:52:52,868 --> 01:52:57,849
know how to do any of these right yet

2701
01:52:54,939 --> 01:53:00,698
and when you open one of those you'll

2702
01:52:57,850 --> 01:53:03,659
get even more and every single one of

2703
01:53:00,698 --> 01:53:06,638
those will teach you something and

2704
01:53:03,658 --> 01:53:08,888
furthermore will lead to questions about

2705
01:53:06,639 --> 01:53:11,139
whether we even know how to do that

2706
01:53:08,889 --> 01:53:12,039
right yet or could it be better could it

2707
01:53:11,139 --> 01:53:15,639
be faster

2708
01:53:12,039 --> 01:53:17,229
could it be higher quality right could

2709
01:53:15,639 --> 01:53:19,539
there be more to do there that would

2710
01:53:17,229 --> 01:53:20,678
lead to more features more flexibility

2711
01:53:19,539 --> 01:53:22,719
things we didn't even know we could do

2712
01:53:20,679 --> 01:53:27,760
yet or that we didn't know we could do

2713
01:53:22,719 --> 01:53:33,969
with this right and the answer is almost

2714
01:53:27,760 --> 01:53:37,539
always the turn is so this is really to

2715
01:53:33,969 --> 01:53:39,609
a large extent probably that is what

2716
01:53:37,539 --> 01:53:43,389
game development looks like right now

2717
01:53:39,609 --> 01:53:45,819
and if the general attitude

2718
01:53:43,389 --> 01:53:48,130
unfortunately goes from the claim that

2719
01:53:45,819 --> 01:53:51,099
it was the 1990s which is every single

2720
01:53:48,130 --> 01:53:55,779
game developer was pretty highly skilled

2721
01:53:51,100 --> 01:53:56,949
in black box stuff if it goes to

2722
01:53:55,779 --> 01:53:58,868
something where game floors don't do

2723
01:53:56,948 --> 01:54:01,238
that anymore and you just take what you

2724
01:53:58,868 --> 01:54:04,029
are given and assume that's the end of

2725
01:54:01,238 --> 01:54:06,609
the universe that can be explored this

2726
01:54:04,029 --> 01:54:08,500
is where we'll end up and I don't really

2727
01:54:06,609 --> 01:54:09,969
think that's a good place to end up I

2728
01:54:08,500 --> 01:54:14,289
think we've only scratched the surface

2729
01:54:09,969 --> 01:54:16,420
in what games can do on any front

2730
01:54:14,289 --> 01:54:17,479
whether it's things like visual quality

2731
01:54:16,420 --> 01:54:20,569
that we've pushed pretty far

2732
01:54:17,479 --> 01:54:21,859
there's plenty further we can go but

2733
01:54:20,569 --> 01:54:24,799
more importantly on things like

2734
01:54:21,859 --> 01:54:28,909
artificial intelligence right how

2735
01:54:24,800 --> 01:54:32,230
stories work in games how a game network

2736
01:54:28,909 --> 01:54:34,519
does networking all of these things are

2737
01:54:32,229 --> 01:54:35,989
incredibly hard technical problems that

2738
01:54:34,520 --> 01:54:38,420
we've only scratched the surface of and

2739
01:54:35,989 --> 01:54:40,369
I'd rather see us keep pushing forwards

2740
01:54:38,420 --> 01:54:43,970
I want to see it look like this before

2741
01:54:40,369 --> 01:54:47,149
I'm dead and I want to feel like when I

2742
01:54:43,970 --> 01:54:49,940
die people are still looking to make it

2743
01:54:47,149 --> 01:54:52,639
look like that and that someday way in

2744
01:54:49,939 --> 01:54:57,619
the future we'll get all the way out

2745
01:54:52,640 --> 01:55:00,500
there right because black boxes are just

2746
01:54:57,619 --> 01:55:03,199
things that are waiting to be

2747
01:55:00,500 --> 01:55:04,819
improvements right and so anytime you

2748
01:55:03,199 --> 01:55:06,229
look at something and say I just use

2749
01:55:04,819 --> 01:55:11,479
this and I don't know how it works

2750
01:55:06,229 --> 01:55:15,289
it's kind of like accepting a limitation

2751
01:55:11,479 --> 01:55:17,269
that we shouldn't accept and accepting a

2752
01:55:15,289 --> 01:55:20,779
small defeat instead of pushing for a

2753
01:55:17,270 --> 01:55:24,080
victory so that's what I wanted to get

2754
01:55:20,779 --> 01:55:28,149
across with this lecture and I hope that

2755
01:55:24,079 --> 01:55:30,800
I've done a little bit of sort of

2756
01:55:28,149 --> 01:55:32,389
opening of one of these or two of these

2757
01:55:30,800 --> 01:55:34,880
in this case black boxes for you so you

2758
01:55:32,390 --> 01:55:36,920
can kind of see how that goes it only

2759
01:55:34,880 --> 01:55:39,199
gets better from there those are simple

2760
01:55:36,920 --> 01:55:41,480
black boxes and pushing through a really

2761
01:55:39,199 --> 01:55:43,760
hard black box is probably one of the

2762
01:55:41,479 --> 01:55:45,649
greatest feelings you can have in

2763
01:55:43,760 --> 01:55:47,060
development where you open something up

2764
01:55:45,649 --> 01:55:49,489
and you really figure out how it works

2765
01:55:47,060 --> 01:55:52,340
and you push the tech forwards there's

2766
01:55:49,489 --> 01:55:54,349
really nothing else like it so if you're

2767
01:55:52,340 --> 01:55:56,300
the kind of person who thinks that sort

2768
01:55:54,350 --> 01:55:57,980
of thing would be exciting or

2769
01:55:56,300 --> 01:55:59,779
interesting and you like knowing how

2770
01:55:57,979 --> 01:56:02,389
things work you don't like accepting

2771
01:55:59,779 --> 01:56:04,250
just use something someone else made or

2772
01:56:02,390 --> 01:56:05,720
just this is how it goes you don't need

2773
01:56:04,250 --> 01:56:07,310
to look into it if you don't like

2774
01:56:05,720 --> 01:56:08,720
accepting those answers you're the kind

2775
01:56:07,310 --> 01:56:10,670
of person who this sort of programming

2776
01:56:08,720 --> 01:56:12,470
is for and I highly recommend you look

2777
01:56:10,670 --> 01:56:13,520
into it there will always be a job for

2778
01:56:12,470 --> 01:56:16,520
you if you're good at this sort of thing

2779
01:56:13,520 --> 01:56:18,830
because so few people have the fortitude

2780
01:56:16,520 --> 01:56:22,310
to do it and spend the time to get good

2781
01:56:18,829 --> 01:56:25,340
at it so that's my lecture how to open a

2782
01:56:22,310 --> 01:56:27,010
black box I hope you enjoyed it and if

2783
01:56:25,340 --> 01:56:30,380
you're interested in this sort of thing

2784
01:56:27,010 --> 01:56:30,949
please look into being a serious game

2785
01:56:30,380 --> 01:56:33,739
engine

2786
01:56:30,948 --> 01:56:36,728
grammar it's a great place to encounter

2787
01:56:33,738 --> 01:56:42,518
a lot of really challenging problems and

2788
01:56:36,729 --> 01:56:42,519
with that I will take some questions

