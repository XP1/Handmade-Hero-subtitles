1
00:00:00,030 --> 00:00:04,470
hello everyone and welcome to handmade

2
00:00:02,279 --> 00:00:07,528
Hero the show Rico to complete game live

3
00:00:04,469 --> 00:00:10,980
on stream we are right in the middle of

4
00:00:07,528 --> 00:00:13,859
doing some light probe coding on the CPU

5
00:00:10,980 --> 00:00:15,509
side we're being a little conservative

6
00:00:13,859 --> 00:00:18,868
with this game we're not trying to do

7
00:00:15,509 --> 00:00:21,089
GPU side lighting primarily because we

8
00:00:18,868 --> 00:00:23,609
would like to maybe run on lower end

9
00:00:21,089 --> 00:00:26,820
systems eventually then that would

10
00:00:23,609 --> 00:00:30,090
necessarily imply so I'm not necessarily

11
00:00:26,820 --> 00:00:32,159
sure we want to go quite that route

12
00:00:30,089 --> 00:00:33,600
mm-hmm so we're trying to something a

13
00:00:32,159 --> 00:00:35,029
little bit simpler than we might do if

14
00:00:33,600 --> 00:00:36,870
we were assuming that you're gonna

15
00:00:35,030 --> 00:00:38,789
everybody who plays handmade here I had

16
00:00:36,869 --> 00:00:42,359
that and have an RT X card plugged in or

17
00:00:38,789 --> 00:00:44,820
something like this but we are right in

18
00:00:42,359 --> 00:00:47,549
the middle of that code trying to update

19
00:00:44,820 --> 00:00:50,820
our system to use light probing instead

20
00:00:47,549 --> 00:00:52,349
of surface like actual surface level

21
00:00:50,820 --> 00:00:53,939
probing because that was just too

22
00:00:52,350 --> 00:00:55,850
inefficient and also didn't really

23
00:00:53,939 --> 00:00:58,019
provide us what we needed for sampling

24
00:00:55,850 --> 00:00:59,399
like things that don't contribute to

25
00:00:58,020 --> 00:01:02,100
lighting so sprites and stuff like that

26
00:00:59,399 --> 00:01:04,198
like on the ground or like like ground

27
00:01:02,100 --> 00:01:05,489
cover grasses and things like that but

28
00:01:04,198 --> 00:01:07,500
we want to be able to sample lighting

29
00:01:05,489 --> 00:01:09,030
from I was a little bit confusing how we

30
00:01:07,500 --> 00:01:14,099
actually wanted to do that we could have

31
00:01:09,030 --> 00:01:15,540
done it but it just it was gonna be a

32
00:01:14,099 --> 00:01:17,009
little bit weird right it couldn't have

33
00:01:15,540 --> 00:01:19,380
been very dynamic and we would have had

34
00:01:17,009 --> 00:01:20,728
to have sort of extra procedures in

35
00:01:19,379 --> 00:01:22,469
place for handling sort of special

36
00:01:20,728 --> 00:01:23,819
education a lot of sort of stuff so

37
00:01:22,469 --> 00:01:25,650
we're just trying light probes as a way

38
00:01:23,819 --> 00:01:27,508
of sort of cleaning that stuff up having

39
00:01:25,650 --> 00:01:29,728
a uniform sampling regime for everything

40
00:01:27,509 --> 00:01:31,140
and giving us a way to understand our

41
00:01:29,728 --> 00:01:32,670
lighting is necessary because again we

42
00:01:31,140 --> 00:01:35,489
don't want to end up with a lighting

43
00:01:32,670 --> 00:01:37,618
system that's so expensive that we can't

44
00:01:35,489 --> 00:01:39,179
run a really crappy version on of it on

45
00:01:37,618 --> 00:01:40,769
low-end machines and still have

46
00:01:39,180 --> 00:01:42,509
something resembling the look of the

47
00:01:40,769 --> 00:01:44,039
game and then crank it up to higher

48
00:01:42,509 --> 00:01:46,078
levels on higher machines or something

49
00:01:44,040 --> 00:01:48,710
like that we want some flexibility there

50
00:01:46,078 --> 00:01:50,699
and we didn't really have it before so

51
00:01:48,709 --> 00:01:53,129
that's mostly what we're looking for

52
00:01:50,700 --> 00:01:54,540
here solving those two problems I'm

53
00:01:53,129 --> 00:01:58,019
going to go ahead and get started

54
00:01:54,540 --> 00:02:00,149
oops and if you remember where we were

55
00:01:58,019 --> 00:02:02,459
at we just finished adapting the ray

56
00:02:00,149 --> 00:02:04,950
caster to return the information

57
00:02:02,459 --> 00:02:08,250
necessary for us to do light probe

58
00:02:04,950 --> 00:02:09,179
sampling during light propagation reason

59
00:02:08,250 --> 00:02:10,889
we're doing that is because the light

60
00:02:09,179 --> 00:02:12,060
probes are what store the information

61
00:02:10,889 --> 00:02:13,899
now they are what will store the

62
00:02:12,060 --> 00:02:15,909
information services them cell

63
00:02:13,900 --> 00:02:17,800
will not store that information and

64
00:02:15,909 --> 00:02:19,900
since surfaces won't store the

65
00:02:17,800 --> 00:02:21,850
information for lighting it means that

66
00:02:19,900 --> 00:02:23,980
we need to be able to get from a

67
00:02:21,849 --> 00:02:25,599
particular surface hit back to a

68
00:02:23,979 --> 00:02:27,189
lighting answer and that requires

69
00:02:25,599 --> 00:02:28,989
querying the light probes with a point

70
00:02:27,189 --> 00:02:33,099
and a normal so that's what we actually

71
00:02:28,990 --> 00:02:35,250
needed to get that means that our hit

72
00:02:33,099 --> 00:02:43,689
result so if we go down there and look

73
00:02:35,250 --> 00:02:45,039
at our ray cast function our hit wants

74
00:02:43,689 --> 00:02:45,849
to have slightly different things and so

75
00:02:45,039 --> 00:02:48,239
that's what we did

76
00:02:45,849 --> 00:02:50,590
we changed to returning a hit normal

77
00:02:48,240 --> 00:02:51,129
which we got pretty efficiently I was

78
00:02:50,590 --> 00:02:52,810
pleased

79
00:02:51,129 --> 00:02:54,669
there's probably slightly more efficient

80
00:02:52,810 --> 00:02:56,920
ways than what we're doing but we did a

81
00:02:54,669 --> 00:02:58,389
pretty good job of that yesterday I was

82
00:02:56,919 --> 00:02:59,739
happy with what we came up with it was

83
00:02:58,389 --> 00:03:04,329
it's not the stupidest thing in the

84
00:02:59,740 --> 00:03:06,070
world and this hit position which is

85
00:03:04,330 --> 00:03:06,969
trivial to get obviously whenever you do

86
00:03:06,069 --> 00:03:09,370
a ray intersection

87
00:03:06,969 --> 00:03:11,199
you know the t-value so all we had to do

88
00:03:09,370 --> 00:03:12,640
was just march forward by the t-value

89
00:03:11,199 --> 00:03:16,030
and you get the hit position so that's

90
00:03:12,639 --> 00:03:19,869
pretty straightforward as well now there

91
00:03:16,030 --> 00:03:22,060
may be easier ways to record that I'm

92
00:03:19,870 --> 00:03:23,830
not exactly sure if we're doing it quite

93
00:03:22,060 --> 00:03:25,180
as efficiently as we could in here it's

94
00:03:23,830 --> 00:03:26,709
possible that we already have the

95
00:03:25,180 --> 00:03:28,780
information necessary to directly we can

96
00:03:26,709 --> 00:03:36,159
start the hit P and we can do other

97
00:03:28,780 --> 00:03:39,159
things like that yeah so you know we'll

98
00:03:36,159 --> 00:03:39,699
see but generally speaking we're in good

99
00:03:39,159 --> 00:03:41,259
shape

100
00:03:39,699 --> 00:03:43,089
we return all the information necessary

101
00:03:41,259 --> 00:03:45,719
so the reference color up side the

102
00:03:43,090 --> 00:03:48,039
reflectance color of a surface the point

103
00:03:45,719 --> 00:03:49,689
that you hit and the normal at that

104
00:03:48,039 --> 00:03:52,509
point that gives us the ability to

105
00:03:49,689 --> 00:03:54,759
propagate that information along the Ray

106
00:03:52,509 --> 00:03:57,009
to whoever was trying to sample it which

107
00:03:54,759 --> 00:03:59,829
brings us to the part of the code we

108
00:03:57,009 --> 00:04:03,219
want to work on today which is where we

109
00:03:59,830 --> 00:04:05,580
actually do that propagation now you can

110
00:04:03,219 --> 00:04:08,139
see how this particular function works

111
00:04:05,580 --> 00:04:11,980
and we're gonna rework it a little bit

112
00:04:08,139 --> 00:04:14,109
this was designed to do light probing in

113
00:04:11,979 --> 00:04:16,629
a very specific way from surface to

114
00:04:14,110 --> 00:04:18,609
surface so it would cast rays from

115
00:04:16,629 --> 00:04:22,560
surfaces to hit other services and

116
00:04:18,608 --> 00:04:22,560
convict the light along those rays

117
00:04:22,918 --> 00:04:27,609
that's effectively all we were doing

118
00:04:25,000 --> 00:04:30,579
because that's all we wanted to do and

119
00:04:27,610 --> 00:04:33,220
this solution is a temporal solution it

120
00:04:30,579 --> 00:04:35,589
goes over time so we didn't consider

121
00:04:33,220 --> 00:04:38,020
multiple bounces in a single propagation

122
00:04:35,589 --> 00:04:40,538
step and the reason for that is because

123
00:04:38,019 --> 00:04:42,878
every frame is the back basically a new

124
00:04:40,538 --> 00:04:44,649
bounce set right so we're counting on

125
00:04:42,879 --> 00:04:46,389
multiple frames to do our multiple

126
00:04:44,649 --> 00:04:48,279
bounces and again that's for efficiency

127
00:04:46,389 --> 00:04:52,120
obviously we could have done multiple

128
00:04:48,279 --> 00:04:54,059
bounces in a single frame but that just

129
00:04:52,120 --> 00:04:56,468
doesn't make sense from a performance

130
00:04:54,060 --> 00:04:58,959
standpoint because you're never gonna be

131
00:04:56,468 --> 00:05:00,250
able to take enough secondary rays to

132
00:04:58,959 --> 00:05:02,138
really make enough of a difference there

133
00:05:00,250 --> 00:05:04,029
with the kind of performance profile

134
00:05:02,139 --> 00:05:07,900
that we're looking at so we want to do

135
00:05:04,029 --> 00:05:10,359
is let that temporal sort of crank do

136
00:05:07,899 --> 00:05:11,948
the secondary bounce propagation for us

137
00:05:10,360 --> 00:05:13,718
and that of course gets us an arbitrary

138
00:05:11,949 --> 00:05:15,759
number of bounces as well because every

139
00:05:13,718 --> 00:05:19,750
frame is a new bounce propagation and

140
00:05:15,759 --> 00:05:21,218
since you can propagate off all after

141
00:05:19,750 --> 00:05:23,829
each frame you're propagating light off

142
00:05:21,218 --> 00:05:25,778
of a new set of bounces it means that

143
00:05:23,829 --> 00:05:27,519
you're effectively getting four five six

144
00:05:25,778 --> 00:05:29,199
seven eight bounces down to the

145
00:05:27,519 --> 00:05:30,878
diminishing point for sure because of

146
00:05:29,199 --> 00:05:33,069
depending on how fast you blend them in

147
00:05:30,879 --> 00:05:34,960
obviously you'll get different levels of

148
00:05:33,069 --> 00:05:37,539
contribution for those secondary

149
00:05:34,959 --> 00:05:39,788
tertiary quaternary bounces but

150
00:05:37,538 --> 00:05:42,399
generally speaking even if you're

151
00:05:39,788 --> 00:05:45,430
assuming a very reflective paint of some

152
00:05:42,399 --> 00:05:48,250
kind 80 percent 90 percent light

153
00:05:45,430 --> 00:05:50,050
transmission you still only need you

154
00:05:48,250 --> 00:05:51,728
know five six bounces or something

155
00:05:50,050 --> 00:05:54,460
before you're kind of getting to a point

156
00:05:51,728 --> 00:05:56,889
of diminishing returns so you definitely

157
00:05:54,459 --> 00:05:58,989
need secondary tertiary bounces for sure

158
00:05:56,889 --> 00:06:00,338
in any realistic scenario those are

159
00:05:58,990 --> 00:06:01,689
gonna contribute actually pretty

160
00:06:00,338 --> 00:06:04,329
important information to your lighting

161
00:06:01,689 --> 00:06:06,759
no question but at some point nine 1011

162
00:06:04,329 --> 00:06:08,228
bounces you're probably done at that

163
00:06:06,759 --> 00:06:10,810
point with anything that that's really

164
00:06:08,228 --> 00:06:12,818
going to be that perceptible as anything

165
00:06:10,810 --> 00:06:15,218
other than a general light boost maybe a

166
00:06:12,819 --> 00:06:18,759
little bit of a of a general light floor

167
00:06:15,218 --> 00:06:20,379
boost and so that's something we can

168
00:06:18,759 --> 00:06:22,330
easily account for by just turning our

169
00:06:20,379 --> 00:06:23,560
lights up a little bit right so it's the

170
00:06:22,329 --> 00:06:25,718
character of the lighting that you're

171
00:06:23,560 --> 00:06:27,310
trying to capture after a couple bounces

172
00:06:25,718 --> 00:06:29,769
you've kind of got the directional stuff

173
00:06:27,310 --> 00:06:31,389
under control and when you get out - you

174
00:06:29,769 --> 00:06:32,859
know bounces above eight let's say

175
00:06:31,389 --> 00:06:34,300
you're kind of in a position where

176
00:06:32,860 --> 00:06:36,550
you're really just talking about adding

177
00:06:34,300 --> 00:06:37,959
an amount of light to the scene and not

178
00:06:36,550 --> 00:06:38,228
really having to care where it's coming

179
00:06:37,959 --> 00:06:39,848
from

180
00:06:38,228 --> 00:06:41,339
and so at that point you can compensate

181
00:06:39,848 --> 00:06:43,379
typically

182
00:06:41,339 --> 00:06:46,500
it's just again the number the more

183
00:06:43,379 --> 00:06:48,449
bounces you're talking about in a

184
00:06:46,500 --> 00:06:51,360
diffuse remember the difference between

185
00:06:48,449 --> 00:06:53,310
a specular and a diffused bounce is that

186
00:06:51,360 --> 00:06:56,220
a diffuse bounce of lighting spreads the

187
00:06:53,310 --> 00:06:58,829
light out right it's it's going fairly

188
00:06:56,220 --> 00:07:00,330
evenly throughout the scene off of the

189
00:06:58,829 --> 00:07:02,279
point that you hit and that's the only

190
00:07:00,329 --> 00:07:04,859
kind of light transmission we're really

191
00:07:02,279 --> 00:07:07,529
simulating here specular bounces which

192
00:07:04,860 --> 00:07:10,910
are those sort of bright highlight

193
00:07:07,529 --> 00:07:13,049
bounces they're almost reflections right

194
00:07:10,910 --> 00:07:15,110
the more specular something is the

195
00:07:13,050 --> 00:07:19,740
closer it is to a mirror effectively

196
00:07:15,110 --> 00:07:21,750
those kinds of transmission they require

197
00:07:19,740 --> 00:07:23,550
if you have a lot of those services

198
00:07:21,750 --> 00:07:25,978
that's where you start to require more

199
00:07:23,550 --> 00:07:27,810
bounces of course those are also more

200
00:07:25,978 --> 00:07:29,789
easy to simulate with ray tracing

201
00:07:27,810 --> 00:07:30,899
because you have less rays because every

202
00:07:29,790 --> 00:07:33,810
time you hit a surface you only have to

203
00:07:30,899 --> 00:07:35,609
cast out a narrow band of rays to find

204
00:07:33,810 --> 00:07:38,939
your answer this is also why like modern

205
00:07:35,610 --> 00:07:40,610
ray tracing in hybrid approaches like in

206
00:07:38,939 --> 00:07:44,069
games where you use hybrid ray tracing

207
00:07:40,610 --> 00:07:47,090
in sort of the modern r-tx optimized

208
00:07:44,069 --> 00:07:49,649
kind of way with with stuff like that

209
00:07:47,089 --> 00:07:53,369
that's what they are using that for

210
00:07:49,649 --> 00:07:55,469
right they use the r-tx to handle the

211
00:07:53,370 --> 00:07:57,870
glossy reflections because those are

212
00:07:55,470 --> 00:08:00,270
easier to Ray trace right the wide

213
00:07:57,870 --> 00:08:02,038
diffuse distribution you typically need

214
00:08:00,269 --> 00:08:04,259
something more like this so that's the

215
00:08:02,038 --> 00:08:06,120
part we're trying to tackle here and

216
00:08:04,259 --> 00:08:10,228
it's also the part that's most important

217
00:08:06,120 --> 00:08:14,819
for our game because we want a soft kind

218
00:08:10,228 --> 00:08:16,709
of warm look to the game we don't want a

219
00:08:14,819 --> 00:08:18,538
lot of specular it's not a it's that's

220
00:08:16,709 --> 00:08:21,478
not much how the art looks supposed to

221
00:08:18,538 --> 00:08:24,959
be kind of a warm diffusely lit kind of

222
00:08:21,478 --> 00:08:26,759
a game anyway and so again we're trying

223
00:08:24,959 --> 00:08:28,288
to design a lighting solution that

224
00:08:26,759 --> 00:08:32,639
simulates the kind of lighting that we

225
00:08:28,288 --> 00:08:36,059
want and specular isn't really part of

226
00:08:32,639 --> 00:08:37,049
that equation for us so you know spot

227
00:08:36,059 --> 00:08:38,848
specular is something that we might want

228
00:08:37,049 --> 00:08:40,978
to put in that's fine that's a render

229
00:08:38,849 --> 00:08:43,200
time thing for light propagation we care

230
00:08:40,979 --> 00:08:46,589
about the diffuse part and so that's

231
00:08:43,200 --> 00:08:48,180
what we're working on here okay so what

232
00:08:46,589 --> 00:08:50,430
we want to do is fundamentally change

233
00:08:48,179 --> 00:08:52,049
this loop a little bit we were talking

234
00:08:50,429 --> 00:08:54,299
about going from sample points which

235
00:08:52,049 --> 00:08:54,870
were all on services before and we were

236
00:08:54,299 --> 00:08:57,179
going

237
00:08:54,870 --> 00:08:58,830
to collect lighting from other sample

238
00:08:57,179 --> 00:09:00,629
points on services so it was from a

239
00:08:58,830 --> 00:09:02,520
point on a surface we'd cast we'd see

240
00:09:00,629 --> 00:09:04,169
what service we'd hit we look at the

241
00:09:02,519 --> 00:09:05,909
sample points on that service and get

242
00:09:04,169 --> 00:09:07,289
the light back from it that's not what

243
00:09:05,909 --> 00:09:10,079
we're doing anymore what we want to do

244
00:09:07,289 --> 00:09:11,459
now is similar instead of looping our

245
00:09:10,080 --> 00:09:12,720
sample points we loop over light probes

246
00:09:11,460 --> 00:09:15,420
but you can consider those to be the

247
00:09:12,720 --> 00:09:16,769
same basic thing right if we just call a

248
00:09:15,419 --> 00:09:19,649
sample point a light probe we just

249
00:09:16,769 --> 00:09:22,049
changed the name then this part is the

250
00:09:19,649 --> 00:09:23,850
same so so conceptually this this part

251
00:09:22,049 --> 00:09:25,639
is changing only the very smallest

252
00:09:23,850 --> 00:09:29,970
amount it's really a naming difference

253
00:09:25,639 --> 00:09:31,289
to that effect and what we actually the

254
00:09:29,970 --> 00:09:32,430
reason we did that again is because we

255
00:09:31,289 --> 00:09:34,049
don't want these sample points that to

256
00:09:32,429 --> 00:09:35,370
be on services so the reason we're

257
00:09:34,049 --> 00:09:37,969
calling them lighting probes and the

258
00:09:35,370 --> 00:09:40,200
only real conceptual difference there is

259
00:09:37,970 --> 00:09:42,570
that now these sample points are

260
00:09:40,200 --> 00:09:44,490
floating out in the world they're not

261
00:09:42,570 --> 00:09:46,320
embedded in objects so that's the only

262
00:09:44,490 --> 00:09:47,759
conceptual change there at all otherwise

263
00:09:46,320 --> 00:09:49,110
exactly the same we're gonna loop over

264
00:09:47,759 --> 00:09:51,600
them we're gonna cast Rays out of them

265
00:09:49,110 --> 00:09:53,580
so exactly the same otherwise however

266
00:09:51,600 --> 00:09:55,620
the next part is the part that really

267
00:09:53,580 --> 00:09:57,360
changes more dramatically when we do our

268
00:09:55,620 --> 00:09:59,220
ray casting we're gonna get out a point

269
00:09:57,360 --> 00:10:00,600
in a normal in the world that point in

270
00:09:59,220 --> 00:10:03,060
the normal in the world and reflection

271
00:10:00,600 --> 00:10:05,040
color as well is the surface we ended up

272
00:10:03,059 --> 00:10:07,769
hitting and here's the big change what

273
00:10:05,039 --> 00:10:10,919
we used to do is for each one of those

274
00:10:07,769 --> 00:10:12,929
hits we would look and say which of

275
00:10:10,919 --> 00:10:15,149
these surface points are around there

276
00:10:12,929 --> 00:10:16,829
gather those service points up average

277
00:10:15,149 --> 00:10:17,549
they're lighting together based on how

278
00:10:16,830 --> 00:10:19,800
close they were

279
00:10:17,549 --> 00:10:20,969
that's our lighting sample we're not

280
00:10:19,799 --> 00:10:22,979
going to do that anymore because now

281
00:10:20,970 --> 00:10:25,320
we're gonna do is go from that point

282
00:10:22,980 --> 00:10:27,870
that we hit and instead of gathering

283
00:10:25,320 --> 00:10:30,300
surface points on that same surface

284
00:10:27,870 --> 00:10:33,480
we're instead gonna go look up what

285
00:10:30,299 --> 00:10:35,519
light probes are nearby and average the

286
00:10:33,480 --> 00:10:37,379
light probe lighting together right so

287
00:10:35,519 --> 00:10:39,208
that's the primary change we're really

288
00:10:37,379 --> 00:10:41,519
gonna be making in this loop here he's

289
00:10:39,208 --> 00:10:43,169
saying let's switch from a system that's

290
00:10:41,519 --> 00:10:44,879
gathering surface points on a surface

291
00:10:43,169 --> 00:10:46,199
for our lighting to gathering lighting

292
00:10:44,879 --> 00:10:47,909
probes that are floating in the world

293
00:10:46,200 --> 00:10:50,009
and averaging them together in sort of a

294
00:10:47,909 --> 00:10:52,439
trial in ear light trial interplant

295
00:10:50,009 --> 00:10:54,870
so that's a fairly big difference but

296
00:10:52,440 --> 00:10:56,870
again conceptually it's not a huge leap

297
00:10:54,870 --> 00:11:00,419
because we're doing almost the same

298
00:10:56,870 --> 00:11:04,049
basic operation we're doing a spatial

299
00:11:00,419 --> 00:11:05,909
gather followed by an averaging weighted

300
00:11:04,049 --> 00:11:08,099
planned really right and so it's the

301
00:11:05,909 --> 00:11:11,309
same basic idea it's just

302
00:11:08,100 --> 00:11:14,028
very different type of gather and blend

303
00:11:11,309 --> 00:11:16,619
that's really what's going on here right

304
00:11:14,028 --> 00:11:19,289
and so now we just need to go do that

305
00:11:16,620 --> 00:11:21,328
it's just plugging away to actually do

306
00:11:19,289 --> 00:11:23,399
exactly what I just said but there's no

307
00:11:21,328 --> 00:11:25,789
mystery to what's going on it's exactly

308
00:11:23,399 --> 00:11:29,220
that so let's step through this loop

309
00:11:25,789 --> 00:11:32,219
step-by-step take the if zeros out get

310
00:11:29,220 --> 00:11:33,990
it compiling and that's pretty much all

311
00:11:32,220 --> 00:11:36,000
we really want to accomplish today again

312
00:11:33,990 --> 00:11:37,948
lighting is slow it's a lot of work a

313
00:11:36,000 --> 00:11:39,448
lot of math has to be optimized so it's

314
00:11:37,948 --> 00:11:42,469
just it's the kind of thing that's

315
00:11:39,448 --> 00:11:45,289
that's not a fast thing to do typically

316
00:11:42,470 --> 00:11:48,120
if you're writing it by hand like this

317
00:11:45,289 --> 00:11:49,620
okay so we know we're going to take a

318
00:11:48,120 --> 00:11:51,328
look at the lighting solution that we

319
00:11:49,620 --> 00:11:53,730
get and we know that this compute light

320
00:11:51,328 --> 00:11:55,528
propagation call as you see here this

321
00:11:53,730 --> 00:11:56,940
compute light propagation call really

322
00:11:55,528 --> 00:11:59,250
really wants to be multi-threaded this

323
00:11:56,940 --> 00:12:02,190
is a situation where we really want to

324
00:11:59,250 --> 00:12:05,100
use all of the resources of our CPU

325
00:12:02,190 --> 00:12:07,199
because if we have eight core 16 cores

326
00:12:05,100 --> 00:12:13,379
or one of these crazy new AMD chips with

327
00:12:07,198 --> 00:12:15,870
64 cores of logical CPU on there or is

328
00:12:13,379 --> 00:12:17,730
it 128 I can't remember where they have

329
00:12:15,870 --> 00:12:19,860
64 actual cores or thirty two actual

330
00:12:17,730 --> 00:12:21,778
cores with hyper-threading I don't know

331
00:12:19,860 --> 00:12:24,060
who knows how many logic goes there but

332
00:12:21,778 --> 00:12:25,500
there's a lot and so if you had some

333
00:12:24,059 --> 00:12:26,729
crazy machine but tons of cores which

334
00:12:25,500 --> 00:12:28,289
are becoming more and more common these

335
00:12:26,730 --> 00:12:31,079
days and AMD is pushing them more and

336
00:12:28,289 --> 00:12:32,818
more we want to use them all because

337
00:12:31,078 --> 00:12:34,138
that'll just we can just crank up our

338
00:12:32,818 --> 00:12:35,129
lighting quality or lighting quality all

339
00:12:34,139 --> 00:12:37,259
just get better and better and better

340
00:12:35,129 --> 00:12:39,688
the more cores you give us that sounds

341
00:12:37,259 --> 00:12:41,399
great to me right so what we want to do

342
00:12:39,688 --> 00:12:43,649
here is just go alright compute light

343
00:12:41,399 --> 00:12:45,389
propagation let's grab that solution out

344
00:12:43,649 --> 00:12:46,708
that comes from the lighting work packet

345
00:12:45,389 --> 00:12:48,839
we've been given and again we expect

346
00:12:46,708 --> 00:12:50,518
this compute like propagation we want to

347
00:12:48,839 --> 00:12:52,050
make sure that it can be called from

348
00:12:50,519 --> 00:12:54,060
many threads at the same time with just

349
00:12:52,049 --> 00:12:55,198
different chunks to work on and so

350
00:12:54,059 --> 00:12:57,299
that's something we want to keep in mind

351
00:12:55,198 --> 00:12:59,068
we don't want to do anything in here

352
00:12:57,299 --> 00:13:01,500
that we think would lock up our system

353
00:12:59,068 --> 00:13:04,620
on doing some kind of a query or

354
00:13:01,500 --> 00:13:07,230
something that would be a problem and so

355
00:13:04,620 --> 00:13:09,839
off we go so here we are we're gonna do

356
00:13:07,230 --> 00:13:12,060
our random series here that we've got

357
00:13:09,839 --> 00:13:14,430
that's going to allow us to pick random

358
00:13:12,059 --> 00:13:16,138
rays that we sample out of or other

359
00:13:14,429 --> 00:13:17,698
things like that so we kind of want to

360
00:13:16,139 --> 00:13:19,799
do a thing here where we we do a

361
00:13:17,698 --> 00:13:21,889
sampling you can see us getting a sample

362
00:13:19,799 --> 00:13:24,379
point entropy

363
00:13:21,889 --> 00:13:27,528
out that's just a single value we're

364
00:13:24,379 --> 00:13:30,588
gonna use I think for when we actually

365
00:13:27,528 --> 00:13:32,769
see you see what that's used for are we

366
00:13:30,589 --> 00:13:34,940
actually still using that yes we are

367
00:13:32,769 --> 00:13:37,490
okay so you can see what that's doing

368
00:13:34,940 --> 00:13:42,860
there the sample point entropy is

369
00:13:37,490 --> 00:13:46,629
basically randomizing in our so if you

370
00:13:42,860 --> 00:13:49,700
remember how we do the our sort of

371
00:13:46,629 --> 00:13:57,919
casting throughout the world our sample

372
00:13:49,700 --> 00:13:59,899
point entropy is given to us as a trans

373
00:13:57,919 --> 00:14:01,699
I can't explain this we don't want to

374
00:13:59,899 --> 00:14:06,259
have to generate Rea directions every

375
00:14:01,700 --> 00:14:09,350
frame for every point because if we did

376
00:14:06,259 --> 00:14:11,028
that generation of the actual random

377
00:14:09,350 --> 00:14:13,759
points would actually dominate our

378
00:14:11,028 --> 00:14:15,470
runtime we can probably raycast about as

379
00:14:13,759 --> 00:14:16,730
fast as we could generate those points

380
00:14:15,470 --> 00:14:19,339
so it would be a really expensive thing

381
00:14:16,730 --> 00:14:22,190
to do so what we already did in previous

382
00:14:19,339 --> 00:14:24,560
episodes if you saw them is we created a

383
00:14:22,190 --> 00:14:27,140
sort of set of points we can use for

384
00:14:24,559 --> 00:14:30,409
sampling that's like a little hemisphere

385
00:14:27,139 --> 00:14:32,208
we can use to cast out from and what our

386
00:14:30,409 --> 00:14:35,600
sample point entropy does is it just

387
00:14:32,208 --> 00:14:38,539
says look let's pick random sets of

388
00:14:35,600 --> 00:14:41,149
those that we're gonna throw out from

389
00:14:38,539 --> 00:14:43,370
our individual sample points right so if

390
00:14:41,149 --> 00:14:45,559
we're doing a block of sample points we

391
00:14:43,370 --> 00:14:47,720
want to make sure that each frame we

392
00:14:45,559 --> 00:14:49,639
pick a different random sample direction

393
00:14:47,720 --> 00:14:51,350
from our set of sample directions we

394
00:14:49,639 --> 00:14:53,059
don't want to just always sample the

395
00:14:51,350 --> 00:14:54,680
same direction because that'll lead to

396
00:14:53,059 --> 00:14:57,049
pretty bad artifacts we want to get some

397
00:14:54,679 --> 00:14:59,509
noise in there so that we can sample a

398
00:14:57,049 --> 00:15:01,609
broader sort of a better coverage of the

399
00:14:59,509 --> 00:15:03,078
things out from it so that's what we're

400
00:15:01,610 --> 00:15:04,699
doing here and we want to keep doing

401
00:15:03,078 --> 00:15:06,379
something roughly like that so that part

402
00:15:04,698 --> 00:15:08,028
of the code probably wants to say the

403
00:15:06,379 --> 00:15:09,379
same the only real difference we

404
00:15:08,028 --> 00:15:10,820
probably want to make here is since our

405
00:15:09,379 --> 00:15:12,919
light probes are points floating in

406
00:15:10,820 --> 00:15:14,720
space now we probably don't want them to

407
00:15:12,919 --> 00:15:16,429
do a hemispherical sampling we probably

408
00:15:14,720 --> 00:15:17,629
want them to do spiracle sampling

409
00:15:16,429 --> 00:15:19,338
there's a couple other things we'd

410
00:15:17,629 --> 00:15:22,909
probably want to do such as remember

411
00:15:19,339 --> 00:15:25,519
which direction roughly speaking which

412
00:15:22,909 --> 00:15:27,469
directional color each ray is designed

413
00:15:25,519 --> 00:15:29,209
to contribute to so that way we don't

414
00:15:27,470 --> 00:15:30,589
have to figure that out either and we'll

415
00:15:29,208 --> 00:15:33,250
see that as we kind of go a little bit

416
00:15:30,589 --> 00:15:35,350
further on in the in the init process

417
00:15:33,250 --> 00:15:36,340
now moon color is something that we want

418
00:15:35,350 --> 00:15:37,870
to sort of make a little bit more

419
00:15:36,340 --> 00:15:54,670
procedural I'll put it to you in here

420
00:15:37,870 --> 00:15:56,679
for that just we remember we generally

421
00:15:54,669 --> 00:15:58,839
speaking don't want to add a sort of

422
00:15:56,679 --> 00:16:02,799
ambient moonlight to things that don't

423
00:15:58,840 --> 00:16:05,560
actually get lit by the moon and so for

424
00:16:02,799 --> 00:16:07,719
example when you go in doors or if you

425
00:16:05,559 --> 00:16:09,250
are in a dungeon area you know we

426
00:16:07,720 --> 00:16:11,740
wouldn't expect moonlight to really be

427
00:16:09,250 --> 00:16:12,750
getting in there or if it was getting in

428
00:16:11,740 --> 00:16:16,269
there it should go through an aperture

429
00:16:12,750 --> 00:16:19,240
so we want some way of controlling that

430
00:16:16,269 --> 00:16:22,120
potentially however we may also just

431
00:16:19,240 --> 00:16:23,500
want to put in like ground patches or

432
00:16:22,120 --> 00:16:24,759
something that would prevent you from

433
00:16:23,500 --> 00:16:26,919
getting to the moonlight I don't know

434
00:16:24,759 --> 00:16:30,189
but the reason that this is important to

435
00:16:26,919 --> 00:16:32,110
understand is we you know you might say

436
00:16:30,190 --> 00:16:33,580
well can't wouldn't you always hit

437
00:16:32,110 --> 00:16:35,889
something if you're underground would

438
00:16:33,580 --> 00:16:39,610
you always hit like the ground when you

439
00:16:35,889 --> 00:16:43,299
cast up the answer is yes you would if

440
00:16:39,610 --> 00:16:45,250
you actually could reach it but remember

441
00:16:43,299 --> 00:16:47,259
when we simulate we only simulate a

442
00:16:45,250 --> 00:16:48,879
local region we don't want to bring in

443
00:16:47,259 --> 00:16:51,370
the entire world for ray casting to be

444
00:16:48,879 --> 00:16:55,779
way too expensive so we may need to have

445
00:16:51,370 --> 00:16:58,779
some idea of a like a basic ground plane

446
00:16:55,779 --> 00:17:01,569
that you can't get out of so that even

447
00:16:58,779 --> 00:17:06,490
when everything's been paged out you

448
00:17:01,570 --> 00:17:08,650
will not get moon light going into your

449
00:17:06,490 --> 00:17:11,078
dungeons simply because the actual

450
00:17:08,650 --> 00:17:14,470
ground was so far above you when you're

451
00:17:11,078 --> 00:17:17,769
like seven eight dungeons deep right you

452
00:17:14,470 --> 00:17:19,959
don't want to have to load up all of the

453
00:17:17,769 --> 00:17:21,430
ground tiles - just so you hit them and

454
00:17:19,959 --> 00:17:23,860
don't get moonlight that's really

455
00:17:21,430 --> 00:17:25,779
inefficient so we probably need some way

456
00:17:23,859 --> 00:17:27,429
of controlling that moon light in a way

457
00:17:25,779 --> 00:17:29,649
that's not going to require us to

458
00:17:27,430 --> 00:17:32,230
actually compute the fact that there was

459
00:17:29,650 --> 00:17:34,180
a ground up there stopping us so you

460
00:17:32,230 --> 00:17:39,220
know something to just be aware that

461
00:17:34,180 --> 00:17:41,230
that's got a workout right okay so and

462
00:17:39,220 --> 00:17:43,360
we could do a really simple cheat for

463
00:17:41,230 --> 00:17:46,120
this even right like you can imagine

464
00:17:43,359 --> 00:17:46,779
cheating this really easily when we

465
00:17:46,119 --> 00:17:49,750
actually go

466
00:17:46,779 --> 00:17:51,309
to put our light probe in there so you

467
00:17:49,750 --> 00:17:53,980
look at this this is our light probe

468
00:17:51,309 --> 00:17:55,690
structure we can pretty easily extend

469
00:17:53,980 --> 00:17:58,029
this structure with a simple flag field

470
00:17:55,690 --> 00:17:59,440
the flags field could say things like

471
00:17:58,029 --> 00:18:01,299
whether there should be an ambient light

472
00:17:59,440 --> 00:18:04,029
in which ambient light it is stuff like

473
00:18:01,299 --> 00:18:05,680
that so we could hack this too when we

474
00:18:04,029 --> 00:18:07,089
place those light probes we know whether

475
00:18:05,680 --> 00:18:09,400
they're replacing them in an interior

476
00:18:07,089 --> 00:18:11,259
and exterior scene so we could cheat

477
00:18:09,400 --> 00:18:14,560
that right that's the thing that's easy

478
00:18:11,259 --> 00:18:16,000
for us to cheat out and so we've got a

479
00:18:14,559 --> 00:18:17,649
lot of options for dealing this it's

480
00:18:16,000 --> 00:18:20,259
just we need to deal with it some way at

481
00:18:17,650 --> 00:18:22,120
some point so let's go in here when we

482
00:18:20,259 --> 00:18:24,339
start looping over sample points what we

483
00:18:22,119 --> 00:18:26,019
really want to do here is change the

484
00:18:24,339 --> 00:18:27,459
nominal HR just to understand what we're

485
00:18:26,019 --> 00:18:29,259
doing but otherwise it's gonna say the

486
00:18:27,460 --> 00:18:31,900
same we're not going looping over sample

487
00:18:29,259 --> 00:18:33,970
points per se we're gonna be looping

488
00:18:31,900 --> 00:18:36,900
over light probes there's a difference

489
00:18:33,970 --> 00:18:40,329
between those two things obviously and

490
00:18:36,900 --> 00:18:42,070
we want an understanding of what's going

491
00:18:40,329 --> 00:18:45,189
on there so we want to actually change

492
00:18:42,069 --> 00:18:46,750
this to a light probe index because

493
00:18:45,190 --> 00:18:48,460
that's what we're actually doing but

494
00:18:46,750 --> 00:18:51,700
otherwise we want to be the same we're

495
00:18:48,460 --> 00:18:53,289
probably gonna want to have us loop over

496
00:18:51,700 --> 00:18:56,019
the specific light probes that we're

497
00:18:53,289 --> 00:19:00,159
doing so this should be like first light

498
00:18:56,019 --> 00:19:02,670
probe index and that should be coming

499
00:19:00,160 --> 00:19:06,400
from our work function here so first

500
00:19:02,670 --> 00:19:09,759
light probe index is gonna come from our

501
00:19:06,400 --> 00:19:12,550
work order and one press last light

502
00:19:09,759 --> 00:19:14,529
probe index same thing right so we just

503
00:19:12,549 --> 00:19:16,240
want to change our nominal Eicher so

504
00:19:14,529 --> 00:19:18,250
that we understand we're looping over

505
00:19:16,240 --> 00:19:22,180
light probes not sample points anymore

506
00:19:18,250 --> 00:19:23,319
they are our sample points but we just

507
00:19:22,180 --> 00:19:24,880
want to change that meaning so that

508
00:19:23,319 --> 00:19:26,349
people understand when they're looking

509
00:19:24,880 --> 00:19:28,300
at this code or I'm reading this code

510
00:19:26,349 --> 00:19:29,740
later when I forgotten how it works it's

511
00:19:28,299 --> 00:19:31,509
clear you're looping over the light

512
00:19:29,740 --> 00:19:32,440
probes those are our sample points off

513
00:19:31,509 --> 00:19:34,750
we go

514
00:19:32,440 --> 00:19:37,000
so now lighting point which is this

515
00:19:34,750 --> 00:19:38,829
thing here is not going to be used

516
00:19:37,000 --> 00:19:40,809
anymore and in fact this stuff is all

517
00:19:38,829 --> 00:19:43,929
gonna go away we're going to want to

518
00:19:40,809 --> 00:19:48,220
delete this and this thing here is gonna

519
00:19:43,930 --> 00:19:50,200
get right and so when we send down our

520
00:19:48,220 --> 00:19:52,329
light data we're gonna be sending down a

521
00:19:50,200 --> 00:19:53,830
very different kind of light data more

522
00:19:52,329 --> 00:19:55,059
like what we experiment with of the

523
00:19:53,829 --> 00:19:58,899
beginning we're gonna be sending down

524
00:19:55,059 --> 00:20:00,069
more of a vox alized piece of lighting

525
00:19:58,900 --> 00:20:01,960
information

526
00:20:00,069 --> 00:20:06,240
and so you know just keep that in mind

527
00:20:01,960 --> 00:20:08,590
all right so here's our lightning point

528
00:20:06,240 --> 00:20:12,160
we want to change this now to be like

529
00:20:08,589 --> 00:20:15,970
probe it's gonna be straightforward

530
00:20:12,160 --> 00:20:18,970
translation so we're just gonna grab

531
00:20:15,970 --> 00:20:21,130
that out in order yeah in the range that

532
00:20:18,970 --> 00:20:23,350
we're given and again that range is in

533
00:20:21,130 --> 00:20:25,960
case you for getting this that range is

534
00:20:23,349 --> 00:20:29,230
effectively the slice that this

535
00:20:25,960 --> 00:20:31,539
particular core in this particular round

536
00:20:29,230 --> 00:20:33,309
is going to operate on so we've sliced

537
00:20:31,539 --> 00:20:34,629
up our set of light probes and we're

538
00:20:33,309 --> 00:20:36,819
handing them out to different cores

539
00:20:34,630 --> 00:20:40,050
effectively right so each core will

540
00:20:36,819 --> 00:20:42,939
operate on a different set of lights

541
00:20:40,049 --> 00:20:45,460
alright so the first thing I would like

542
00:20:42,940 --> 00:20:47,529
to do here is we probably actually want

543
00:20:45,460 --> 00:20:50,230
a little bit of a nasty if statement

544
00:20:47,529 --> 00:20:53,259
here I'm guessing now maybe we don't

545
00:20:50,230 --> 00:20:55,799
maybe we do but we probably want to take

546
00:20:53,259 --> 00:20:57,910
our light probes here and have some way

547
00:20:55,799 --> 00:20:59,409
well no actually you know what we would

548
00:20:57,910 --> 00:21:01,900
do this the head end so no this is fine

549
00:20:59,410 --> 00:21:03,400
we're gonna keep doing this way so we

550
00:21:01,900 --> 00:21:04,780
probably want here to say all right what

551
00:21:03,400 --> 00:21:09,190
are our light probes let's go ahead and

552
00:21:04,779 --> 00:21:11,049
grab those out of this range and then

553
00:21:09,190 --> 00:21:14,110
when we come in here we're going to want

554
00:21:11,049 --> 00:21:18,759
to take the way we were generating our

555
00:21:14,109 --> 00:21:20,709
ray casting before zooming hmm and we're

556
00:21:18,759 --> 00:21:22,329
gonna want to modify it a little bit to

557
00:21:20,710 --> 00:21:25,360
do what we're doing and now you can see

558
00:21:22,329 --> 00:21:26,589
here actually this this wasn't really

559
00:21:25,359 --> 00:21:27,849
something that we talked about before

560
00:21:26,589 --> 00:21:29,589
but if you look at what's about to

561
00:21:27,849 --> 00:21:31,719
happen here we're gonna be able to

562
00:21:29,589 --> 00:21:33,490
simplify this code as well which is

563
00:21:31,720 --> 00:21:35,440
really kind of great so if you look at

564
00:21:33,490 --> 00:21:38,349
what had to happen before our lights

565
00:21:35,440 --> 00:21:39,789
were we're on services that meant that

566
00:21:38,349 --> 00:21:42,069
we only wanted a sample Hemisphere's

567
00:21:39,789 --> 00:21:43,569
around those points because we're only

568
00:21:42,069 --> 00:21:46,419
stamping hemispheres it meant we needed

569
00:21:43,569 --> 00:21:49,240
a basis system like a three-dimensional

570
00:21:46,420 --> 00:21:50,800
structure around those lighting points

571
00:21:49,240 --> 00:21:52,359
so that we knew how to construct our

572
00:21:50,799 --> 00:21:53,859
Hemisphere and that meant that every

573
00:21:52,359 --> 00:21:56,169
time we took a sample point we then had

574
00:21:53,859 --> 00:22:00,569
to do work where we would do a bunch of

575
00:21:56,170 --> 00:22:03,460
F mads here well actually more like a

576
00:22:00,569 --> 00:22:06,279
bunch of well there are ask mats a bunch

577
00:22:03,460 --> 00:22:08,829
of F Mads we would have to do those to

578
00:22:06,279 --> 00:22:11,319
recreate what the hemisphere looked like

579
00:22:08,829 --> 00:22:13,839
when placed into that sort of

580
00:22:11,319 --> 00:22:16,798
hemispherical context for this

581
00:22:13,839 --> 00:22:18,668
servus were on so if you just again to

582
00:22:16,798 --> 00:22:20,200
bring everyone up to speed because I

583
00:22:18,669 --> 00:22:21,970
know some people you know you don't have

584
00:22:20,200 --> 00:22:26,409
chance to watch everything we do here in

585
00:22:21,970 --> 00:22:28,659
handmade hero remember we're creating a

586
00:22:26,409 --> 00:22:30,370
hemisphere of directions that we're

587
00:22:28,659 --> 00:22:32,650
gonna use to sample that hemisphere is

588
00:22:30,369 --> 00:22:38,319
stored as a static set that we use for

589
00:22:32,650 --> 00:22:40,028
our sampling we can't do a hemisphere

590
00:22:38,319 --> 00:22:42,069
just arbitrarily because if we have a

591
00:22:40,028 --> 00:22:44,769
sample point with a direction that's on

592
00:22:42,069 --> 00:22:45,908
a surface we don't want to cast back

593
00:22:44,769 --> 00:22:46,929
into the surface because they're all

594
00:22:45,909 --> 00:22:48,880
it's going to hit that surface and that

595
00:22:46,929 --> 00:22:51,038
goes any information so we needed to

596
00:22:48,880 --> 00:22:53,590
orient our hemisphere so that's pointing

597
00:22:51,038 --> 00:22:54,278
away from the surface right we don't you

598
00:22:53,589 --> 00:22:56,408
do that anymore

599
00:22:54,278 --> 00:22:57,909
we can sample full spheres of lighting

600
00:22:56,409 --> 00:22:59,830
now because we're using points floating

601
00:22:57,909 --> 00:23:02,649
in space another reason why light probes

602
00:22:59,829 --> 00:23:04,000
are a good idea right and they are

603
00:23:02,648 --> 00:23:06,308
explained why I didn't use them at first

604
00:23:04,000 --> 00:23:07,720
is because I had a thing I didn't think

605
00:23:06,308 --> 00:23:09,668
I could do in my head but it actually

606
00:23:07,720 --> 00:23:11,980
turns out you can do it and I was just a

607
00:23:09,669 --> 00:23:13,720
gap in knowledge there so the light

608
00:23:11,980 --> 00:23:15,669
probes can handle that for us which

609
00:23:13,720 --> 00:23:18,038
means that this stuff actually will go

610
00:23:15,669 --> 00:23:20,288
away right we don't actually need that

611
00:23:18,038 --> 00:23:24,879
anymore we can say look let's get rid of

612
00:23:20,288 --> 00:23:26,950
that let's load up the sample point for

613
00:23:24,880 --> 00:23:28,600
our light probe and let's loot it four

614
00:23:26,950 --> 00:23:30,970
times so we're just basically doing a

615
00:23:28,599 --> 00:23:33,519
load in distribute here it's called a

616
00:23:30,970 --> 00:23:34,929
broadcast sometimes I think but we're

617
00:23:33,519 --> 00:23:37,898
basically load that up and we're gonna

618
00:23:34,929 --> 00:23:43,659
load effectively a sim deregister is

619
00:23:37,898 --> 00:23:46,269
filled with the x y&amp;z one Cindi register

620
00:23:43,659 --> 00:23:47,860
each of the x y&amp;z of the light probes

621
00:23:46,269 --> 00:23:49,750
position because that's where all the

622
00:23:47,859 --> 00:23:51,490
Rays are gonna come out of right now

623
00:23:49,750 --> 00:23:53,679
remember we've got some debugging stuff

624
00:23:51,490 --> 00:23:56,740
in here I don't know why this doesn't

625
00:23:53,679 --> 00:23:59,048
say if handmade kernel around it it

626
00:23:56,740 --> 00:24:01,870
should because it's the bug stuff but

627
00:23:59,048 --> 00:24:02,889
you know whatever we want leave that in

628
00:24:01,869 --> 00:24:04,389
there because we're gonna have to debug

629
00:24:02,890 --> 00:24:06,309
this and we might want to lean on some

630
00:24:04,390 --> 00:24:08,288
of this stuff so I'm gonna make sure

631
00:24:06,308 --> 00:24:09,940
that this still works again here's that

632
00:24:08,288 --> 00:24:12,669
light probe point so let's just put that

633
00:24:09,940 --> 00:24:15,220
in there and this was showing us the

634
00:24:12,669 --> 00:24:16,809
coordinate system of this thing we don't

635
00:24:15,220 --> 00:24:18,669
have that coordinate system anymore so

636
00:24:16,808 --> 00:24:21,548
I'm just gonna go ahead and throw in a

637
00:24:18,669 --> 00:24:23,049
generic coordinate system just show cuz

638
00:24:21,548 --> 00:24:25,389
that's what we read back to be using now

639
00:24:23,048 --> 00:24:26,740
cuz we don't change per point but again

640
00:24:25,390 --> 00:24:27,250
just just leaving this so that it's

641
00:24:26,740 --> 00:24:31,089
still

642
00:24:27,250 --> 00:24:32,829
same there we go and so now when we come

643
00:24:31,089 --> 00:24:34,809
in here and we want to take our sample

644
00:24:32,829 --> 00:24:37,569
direction you can see us doing that here

645
00:24:34,809 --> 00:24:39,849
this part here where we recreate the

646
00:24:37,569 --> 00:24:42,849
sample direction by reinterpreting it in

647
00:24:39,849 --> 00:24:44,799
the coordinate system of that sample

648
00:24:42,849 --> 00:24:47,919
point that's the part we don't need to

649
00:24:44,799 --> 00:24:49,629
do anymore right so we can just delete

650
00:24:47,920 --> 00:24:51,130
that whole thing this is the sample

651
00:24:49,630 --> 00:25:12,840
direction right here we're good to go

652
00:24:51,130 --> 00:25:29,080
it's the raider action adventure fantasy

653
00:25:12,839 --> 00:25:32,019
delirium eyes spheres that we can use

654
00:25:29,079 --> 00:25:34,480
we'll deal with that stuff later not

655
00:25:32,019 --> 00:25:36,309
important right now but point being we

656
00:25:34,480 --> 00:25:38,710
just going to assume that this sample

657
00:25:36,309 --> 00:25:41,079
points here will get us a full full

658
00:25:38,710 --> 00:25:43,029
sphere worth of samples when we go and

659
00:25:41,079 --> 00:25:44,859
modify it so then we'll just trust that

660
00:25:43,029 --> 00:25:47,490
this needs to be a whole sphere I'll put

661
00:25:44,859 --> 00:25:47,490
it to you in here

662
00:26:07,160 --> 00:26:12,390
okay so we know we need to do that and

663
00:26:10,500 --> 00:26:16,169
that's fine it won't be hard I don't

664
00:26:12,390 --> 00:26:18,120
think to modify our hemisphere point

665
00:26:16,169 --> 00:26:19,650
sampler generation system to just do a

666
00:26:18,119 --> 00:26:21,389
Hema studio sphere instead of a

667
00:26:19,650 --> 00:26:22,530
hemisphere the reason for that is I'm

668
00:26:21,390 --> 00:26:24,120
pretty sure that the way we did the

669
00:26:22,529 --> 00:26:26,460
hemisphere was just doing a sphere and

670
00:26:24,119 --> 00:26:28,019
chopping it off right um so I think all

671
00:26:26,460 --> 00:26:30,500
we have to do is to remove some code

672
00:26:28,019 --> 00:26:33,089
probably from our hemisphere sampler

673
00:26:30,500 --> 00:26:34,710
where we were just previously saying hey

674
00:26:33,089 --> 00:26:36,178
let's limit this to just the hemisphere

675
00:26:34,710 --> 00:26:39,538
but I don't know we'll go check it out

676
00:26:36,179 --> 00:26:43,440
it shouldn't be hard anyway all right so

677
00:26:39,538 --> 00:26:45,569
here's our ray casting call we have that

678
00:26:43,440 --> 00:26:49,019
here where we call our ray cast and

679
00:26:45,569 --> 00:26:50,668
that's just a little walk this will

680
00:26:49,019 --> 00:26:53,339
probably I would assume when we do an op

681
00:26:50,669 --> 00:26:54,780
x bill if this look it welded in so it

682
00:26:53,339 --> 00:26:56,339
would probably just get inserted here

683
00:26:54,779 --> 00:26:57,569
because the only place is called and

684
00:26:56,339 --> 00:26:58,829
that's the way we want it we want to

685
00:26:57,569 --> 00:27:00,839
just be merged in here because we want

686
00:26:58,829 --> 00:27:04,589
it all to be nice one simple loop no

687
00:27:00,839 --> 00:27:07,168
function call overhead and so on so you

688
00:27:04,589 --> 00:27:09,569
can see here we're creating the reap the

689
00:27:07,169 --> 00:27:11,360
ray p4x structure but we don't need that

690
00:27:09,569 --> 00:27:15,658
because actually this has that in it

691
00:27:11,359 --> 00:27:18,449
that's just gonna be the Ray - P right

692
00:27:15,659 --> 00:27:19,830
so this this right here is this so it's

693
00:27:18,450 --> 00:27:22,500
already been computed by the interior

694
00:27:19,829 --> 00:27:24,298
code that goes away and so then we're

695
00:27:22,500 --> 00:27:31,019
just left with the the part where we

696
00:27:24,298 --> 00:27:33,599
need to actually compute our sort of the

697
00:27:31,019 --> 00:27:35,308
the actual light gather that happens so

698
00:27:33,599 --> 00:27:37,949
we're gonna loop over the number of

699
00:27:35,308 --> 00:27:40,440
Ray's we were asked to rate asked and

700
00:27:37,950 --> 00:27:41,788
we're going to Ray cast them in here

701
00:27:40,440 --> 00:27:43,019
we're going to want this to be a

702
00:27:41,788 --> 00:27:44,700
handmade internal I think we want to

703
00:27:43,019 --> 00:27:49,408
again leave that in there

704
00:27:44,700 --> 00:27:51,659
this has to be light probe index and

705
00:27:49,409 --> 00:27:54,570
this right here should probably be debug

706
00:27:51,659 --> 00:27:56,429
probe index that we should change but

707
00:27:54,569 --> 00:27:58,168
again probably want to leave that in

708
00:27:56,429 --> 00:28:00,600
there because we will have to debug this

709
00:27:58,169 --> 00:28:04,460
code and we want all the help we can get

710
00:28:00,599 --> 00:28:08,009
when that comes to it so there we go and

711
00:28:04,460 --> 00:28:08,909
in here where we've got this part where

712
00:28:08,009 --> 00:28:11,878
we're we're

713
00:28:08,909 --> 00:28:14,429
pushing the debug lines on here looking

714
00:28:11,878 --> 00:28:17,158
at what's happening here again sampled

715
00:28:14,429 --> 00:28:19,548
d4x we still have that's just our way

716
00:28:17,159 --> 00:28:19,549
direction

717
00:28:20,009 --> 00:28:25,048
that all looks fine to me

718
00:28:22,108 --> 00:28:33,710
this part here I think is a little bit

719
00:28:25,048 --> 00:28:39,808
different let me just see what we have

720
00:28:33,710 --> 00:28:41,848
left so we have the hip point so I think

721
00:28:39,808 --> 00:28:43,940
all we really want to do instead of

722
00:28:41,848 --> 00:28:47,058
doing end point instead of doing this

723
00:28:43,940 --> 00:28:51,389
all we really want to do here is

724
00:28:47,058 --> 00:28:53,878
probably do a check to see if the thing

725
00:28:51,388 --> 00:28:56,908
was a hit or not so we probably want to

726
00:28:53,878 --> 00:28:59,608
just do if hit do one thing if not do

727
00:28:56,909 --> 00:29:02,580
another thing we don't have a tear a

728
00:28:59,608 --> 00:29:05,819
anymore so in this what we'd like to do

729
00:29:02,579 --> 00:29:08,428
is say all right if we hit draw the hit

730
00:29:05,819 --> 00:29:10,858
and the way we would draw that hit is

731
00:29:08,429 --> 00:29:15,028
just by saying okay we know that we're

732
00:29:10,858 --> 00:29:17,699
starting from the Ray origin like so

733
00:29:15,028 --> 00:29:19,679
right which is like probe P because we

734
00:29:17,700 --> 00:29:22,528
don't want the full for X version of it

735
00:29:19,679 --> 00:29:26,159
so we're starting at light probe P and

736
00:29:22,528 --> 00:29:28,079
then we want to end at this at this

737
00:29:26,159 --> 00:29:30,450
position right so this that we want to

738
00:29:28,079 --> 00:29:33,778
end at what the lighting system tells us

739
00:29:30,450 --> 00:29:37,048
so we need to be able to extract that in

740
00:29:33,778 --> 00:29:38,940
fact you know what here we only need to

741
00:29:37,048 --> 00:29:40,589
call this once and we only need to do

742
00:29:38,940 --> 00:29:43,499
that we'll just build end point

743
00:29:40,589 --> 00:29:46,168
differently in the two cases right so

744
00:29:43,499 --> 00:29:49,950
what we'll do is we'll say okay we've

745
00:29:46,169 --> 00:29:52,320
got the end point here we can just say

746
00:29:49,950 --> 00:29:54,769
that we'll move a certain amount along

747
00:29:52,319 --> 00:29:57,689
it like that if it didn't hit goop's

748
00:29:54,769 --> 00:30:04,259
like so so that's all we need to do

749
00:29:57,690 --> 00:30:06,629
there I think this is also all we need

750
00:30:04,259 --> 00:30:08,220
for end point then write that get

751
00:30:06,628 --> 00:30:11,278
component calls exactly what we want

752
00:30:08,220 --> 00:30:13,579
it unpacks a Sindhi version into one

753
00:30:11,278 --> 00:30:16,618
slice so it takes one slice of it out

754
00:30:13,579 --> 00:30:19,819
slowly so what we want to do there is

755
00:30:16,618 --> 00:30:23,250
the sack same thing we want to take the

756
00:30:19,819 --> 00:30:26,720
hit position so

757
00:30:23,250 --> 00:30:29,849
oops the hit position which is this eye

758
00:30:26,720 --> 00:30:32,970
and just unpack that into the end point

759
00:30:29,849 --> 00:30:35,429
right and so there is all we really need

760
00:30:32,970 --> 00:30:38,009
for that I could also make this be a

761
00:30:35,430 --> 00:30:41,400
little bit squeakier right it could be

762
00:30:38,009 --> 00:30:56,609
this if we wanted it to be not really a

763
00:30:41,400 --> 00:30:57,540
big deal right something like this so we

764
00:30:56,609 --> 00:30:59,159
can't do something like that I don't

765
00:30:57,539 --> 00:31:00,720
know if that's good or bad doesn't

766
00:30:59,160 --> 00:31:04,290
really matter I'm it's just some debug

767
00:31:00,720 --> 00:31:06,210
code no one cares about it and so that

768
00:31:04,289 --> 00:31:16,369
gives us everything we really need there

769
00:31:06,210 --> 00:31:19,710
and yeah right seems good

770
00:31:16,369 --> 00:31:21,389
off we go so that gives us the ability

771
00:31:19,710 --> 00:31:22,680
to draw one of these things and again I

772
00:31:21,390 --> 00:31:24,360
like I said I think we're gonna need it

773
00:31:22,680 --> 00:31:25,620
because we're just gonna run it it's not

774
00:31:24,359 --> 00:31:28,439
gonna work we're not gonna know why

775
00:31:25,619 --> 00:31:31,769
right we got a we have to debug it step

776
00:31:28,440 --> 00:31:33,180
by step make sure our regeneration is

777
00:31:31,769 --> 00:31:35,039
correctly sure but casting works

778
00:31:33,180 --> 00:31:40,710
properly make sure make sure make sure

779
00:31:35,039 --> 00:31:45,000
make sure right all right Jimmy so now

780
00:31:40,710 --> 00:31:47,640
we get down to the actual transfer this

781
00:31:45,000 --> 00:31:49,710
is the actual expensive part the two

782
00:31:47,640 --> 00:31:53,520
like the two expensive things are the

783
00:31:49,710 --> 00:31:55,890
cast which you saw which is actually

784
00:31:53,519 --> 00:31:57,089
quite fast per primitive but it has to

785
00:31:55,890 --> 00:31:58,860
do things like traverse a little

786
00:31:57,089 --> 00:32:01,649
bounding hierarchy and stuff and that

787
00:31:58,859 --> 00:32:03,569
sort of thing is slow there's just a lot

788
00:32:01,650 --> 00:32:07,350
of tests you know that go on and things

789
00:32:03,569 --> 00:32:08,970
like this so it's all good so you want

790
00:32:07,349 --> 00:32:11,750
to go ahead and do that and the other

791
00:32:08,970 --> 00:32:11,750
thing we want to do

792
00:32:11,880 --> 00:32:15,960
is everyone gonna do that we need to be

793
00:32:14,400 --> 00:32:17,670
aware of that right that's that's one

794
00:32:15,960 --> 00:32:18,809
slow part the other slow part is here

795
00:32:17,670 --> 00:32:20,610
and so that's the part we have to work

796
00:32:18,809 --> 00:32:22,319
on now and that's once we know a

797
00:32:20,609 --> 00:32:26,789
particular hit point we need to actually

798
00:32:22,319 --> 00:32:31,379
get the lighting sampling so I think we

799
00:32:26,789 --> 00:32:34,589
probably want to try to do this wide for

800
00:32:31,380 --> 00:32:36,240
as much as we can but again because the

801
00:32:34,589 --> 00:32:38,990
SSE instruction set is

802
00:32:36,240 --> 00:32:42,839
really not very good it doesn't handle

803
00:32:38,990 --> 00:32:44,429
fetch and so the thing that you always

804
00:32:42,839 --> 00:32:47,819
have to end up doing is as soon as you

805
00:32:44,429 --> 00:32:49,950
want to sample a texture or a spatial

806
00:32:47,819 --> 00:32:53,039
gather or whatever you have to downshift

807
00:32:49,950 --> 00:32:56,100
into scaler it really sucks but that's

808
00:32:53,039 --> 00:32:58,950
just the way it goes and that's exactly

809
00:32:56,099 --> 00:33:00,839
what we're gonna have to do here now we

810
00:32:58,950 --> 00:33:03,029
can still try to write this as fast as

811
00:33:00,839 --> 00:33:04,649
possible and we're gonna want to do that

812
00:33:03,029 --> 00:33:07,109
later because I think it will be an

813
00:33:04,650 --> 00:33:08,880
expensive part of the routine but for

814
00:33:07,109 --> 00:33:10,799
right now what I'm gonna do is I'm just

815
00:33:08,880 --> 00:33:12,750
gonna completely downshift

816
00:33:10,799 --> 00:33:14,940
so the first pass through there's not

817
00:33:12,750 --> 00:33:18,058
gonna be any at all there's not gonna be

818
00:33:14,940 --> 00:33:19,890
any Cindy in this entire path we're just

819
00:33:18,058 --> 00:33:22,769
gonna down sample immediately I start

820
00:33:19,890 --> 00:33:25,620
down shift immediately to scaler and do

821
00:33:22,769 --> 00:33:27,029
everything in scaler again not we

822
00:33:25,619 --> 00:33:37,589
actually want because I think we can

823
00:33:27,029 --> 00:33:39,720
still get some Cindy out of this but for

824
00:33:37,589 --> 00:33:41,428
starters when we're debugging it let's

825
00:33:39,720 --> 00:33:42,690
keep things simple so the way we're

826
00:33:41,429 --> 00:33:44,400
going to do this here is we're gonna do

827
00:33:42,690 --> 00:33:47,190
the down shift we did here secondly if

828
00:33:44,400 --> 00:33:50,040
the Ray P that we get back that Ray

829
00:33:47,190 --> 00:33:51,299
position that rate hit position that's

830
00:33:50,039 --> 00:33:53,428
going to give us the point where we want

831
00:33:51,299 --> 00:33:55,379
to sample our probe we also have the

832
00:33:53,429 --> 00:33:59,160
probe sample normal I'll get that back

833
00:33:55,380 --> 00:34:01,440
for now like so and so we get those two

834
00:33:59,160 --> 00:34:12,990
things I don't know why this is normal

835
00:34:01,440 --> 00:34:14,039
instead of n just because I guess there

836
00:34:12,989 --> 00:34:16,049
we go

837
00:34:14,039 --> 00:34:17,849
so when we get back to P in the end that

838
00:34:16,050 --> 00:34:19,379
gives us what we need a sample and again

839
00:34:17,849 --> 00:34:21,569
we have to downshift here because we've

840
00:34:19,378 --> 00:34:22,679
got a down stuff to do the gather so

841
00:34:21,570 --> 00:34:25,379
what I'm going to do is do the full

842
00:34:22,679 --> 00:34:30,570
downshift get inside the the light

843
00:34:25,378 --> 00:34:44,489
system here I think we have like waves

844
00:34:30,570 --> 00:34:45,990
sampling nowhere so here's that code so

845
00:34:44,489 --> 00:34:49,589
this is effectively what we're looking

846
00:34:45,989 --> 00:34:53,909
for right get probe lighting for

847
00:34:49,590 --> 00:34:57,000
and get light from probe you know I'm

848
00:34:53,909 --> 00:34:58,199
saying so I think if we combine those

849
00:34:57,000 --> 00:35:00,210
two although we mirror you have those

850
00:34:58,199 --> 00:35:03,619
actually have the entire thing we

851
00:35:00,210 --> 00:35:03,619
already wrote the entire thing here

852
00:35:03,650 --> 00:35:17,090
where's wait why doesn't that have a

853
00:35:06,170 --> 00:35:17,090
normal in it what get probe lighting for

854
00:35:17,480 --> 00:35:26,250
it's supposed to take a normal so this

855
00:35:22,320 --> 00:35:33,960
is wrong this was supposed to take it

856
00:35:26,250 --> 00:35:36,659
normal and isn't right I think we've got

857
00:35:33,960 --> 00:35:38,579
a buggy bit of code here just in terms

858
00:35:36,659 --> 00:35:39,989
of what's being passed down here maybe

859
00:35:38,579 --> 00:35:44,219
for one second because I think we should

860
00:35:39,989 --> 00:35:47,039
fix it so in here you can see us calling

861
00:35:44,219 --> 00:35:48,599
get probe lighting for that assembles a

862
00:35:47,039 --> 00:35:50,730
lighting probe based on the cell

863
00:35:48,599 --> 00:35:52,469
position in the UVW you can see that

864
00:35:50,730 --> 00:35:54,780
happening here and returns you a single

865
00:35:52,469 --> 00:35:58,349
probe you can use for your lighting so

866
00:35:54,780 --> 00:36:06,060
in here when you do this that's correct

867
00:35:58,349 --> 00:36:07,889
right get light from probe so maybe we

868
00:36:06,059 --> 00:36:09,000
just never call that so maybe it's not

869
00:36:07,889 --> 00:36:11,730
buggy it just we never know whatever

870
00:36:09,000 --> 00:36:14,760
calls it I guess no one ever calls it

871
00:36:11,730 --> 00:36:19,829
all right never mind um so we just need

872
00:36:14,760 --> 00:36:21,690
two of these to do our sampling and so

873
00:36:19,829 --> 00:36:22,860
let's go ahead and do that I guess so we

874
00:36:21,690 --> 00:36:24,929
can hear where we're going to do our

875
00:36:22,860 --> 00:36:29,070
sampling what we want to do is first say

876
00:36:24,929 --> 00:36:31,799
please give us the sort of composite

877
00:36:29,070 --> 00:36:34,110
light probe that we're going to need to

878
00:36:31,800 --> 00:36:37,010
do this operation so that's this call

879
00:36:34,110 --> 00:36:40,320
here right where we'd say give us back

880
00:36:37,010 --> 00:36:43,890
for this lighting solution and this

881
00:36:40,320 --> 00:36:45,990
spatial index this the light probe

882
00:36:43,889 --> 00:36:48,420
spatial index is something that we're

883
00:36:45,989 --> 00:36:49,919
just expected to have here so I assume

884
00:36:48,420 --> 00:36:52,349
that's something that we need to get

885
00:36:49,920 --> 00:36:53,849
well actually that's actually something

886
00:36:52,349 --> 00:36:55,880
we could just get out of the solution I

887
00:36:53,849 --> 00:36:55,880
think

888
00:37:00,130 --> 00:37:09,019
it's this thing right so we get that

889
00:37:05,809 --> 00:37:10,699
spatial index that's the thing we need

890
00:37:09,019 --> 00:37:12,920
to use to do our querying so we passed

891
00:37:10,699 --> 00:37:16,189
that along and then we know what this is

892
00:37:12,920 --> 00:37:19,190
here it's the probe sample P so that's

893
00:37:16,190 --> 00:37:22,519
what we want to build our let composite

894
00:37:19,190 --> 00:37:24,500
probe out of so that's taking 8 probes

895
00:37:22,519 --> 00:37:26,509
and smoking them down to one probe that

896
00:37:24,500 --> 00:37:29,389
we can use to sample the lighting based

897
00:37:26,510 --> 00:37:31,310
on like a tri linear filter of the 8

898
00:37:29,389 --> 00:37:34,009
surrounding probes from our current

899
00:37:31,309 --> 00:37:36,099
location so then what we need to do here

900
00:37:34,010 --> 00:37:38,450
is we need to actually do the lighting

901
00:37:36,099 --> 00:37:43,670
so we need to find out what the lighting

902
00:37:38,449 --> 00:37:48,109
is that's just a question of saying hey

903
00:37:43,670 --> 00:37:52,880
for this composite probe and this normal

904
00:37:48,110 --> 00:37:54,950
what's the light right and that's it so

905
00:37:52,880 --> 00:37:57,680
once we have that lighting sample we're

906
00:37:54,949 --> 00:37:59,659
ready to do something with it and the

907
00:37:57,679 --> 00:38:02,750
something that we want to be able to do

908
00:37:59,659 --> 00:38:09,139
with it obviously in this case is figure

909
00:38:02,750 --> 00:38:11,389
out how much light in our receptor probe

910
00:38:09,139 --> 00:38:13,429
there's two light probes involved here I

911
00:38:11,389 --> 00:38:15,619
mean technically there's nine

912
00:38:13,429 --> 00:38:17,839
there's a light probe we're sampling and

913
00:38:15,619 --> 00:38:19,549
that's not contributing anything

914
00:38:17,840 --> 00:38:20,660
necessarily I mean it might if it

915
00:38:19,550 --> 00:38:22,910
happens to end up being one of the

916
00:38:20,659 --> 00:38:26,119
gathered ones and then when we actually

917
00:38:22,909 --> 00:38:30,069
cast out and we get a hit we gather the

918
00:38:26,119 --> 00:38:32,929
eight surrounding ones in the voxel

919
00:38:30,070 --> 00:38:35,269
smoosh them together to form one

920
00:38:32,929 --> 00:38:38,389
composite probe based on our position in

921
00:38:35,269 --> 00:38:40,730
that voxel and then we want to figure

922
00:38:38,389 --> 00:38:44,629
out how much light is gonna get sent

923
00:38:40,730 --> 00:38:51,619
back basically to our receptor probe

924
00:38:44,630 --> 00:38:53,840
based on this right so that's it that's

925
00:38:51,619 --> 00:38:59,599
all we're doing so when we do that

926
00:38:53,840 --> 00:39:01,670
sample here Jimmy I that lighting

927
00:38:59,599 --> 00:39:02,989
function is probably garbage right now

928
00:39:01,670 --> 00:39:05,300
and we probably want to go in there and

929
00:39:02,989 --> 00:39:07,039
make it better than it is but we're

930
00:39:05,300 --> 00:39:08,900
gonna trust that it's written properly

931
00:39:07,039 --> 00:39:09,739
so we can improve it later but whatever

932
00:39:08,900 --> 00:39:11,150
it is

933
00:39:09,739 --> 00:39:13,459
something happens here and we get back

934
00:39:11,150 --> 00:39:17,059
the lighting amount that means that this

935
00:39:13,460 --> 00:39:23,050
is the amount of light that we expect to

936
00:39:17,059 --> 00:39:34,610
get along that's for that sample normal

937
00:39:23,050 --> 00:39:36,800
that's how much we expect so you know we

938
00:39:34,610 --> 00:39:44,140
kind of want this to be to take more I

939
00:39:36,800 --> 00:39:44,140
think so this get light from probe I

940
00:39:45,219 --> 00:39:53,089
think what we actually want here is not

941
00:39:49,869 --> 00:39:56,470
it's just not phrased properly I think

942
00:39:53,090 --> 00:39:59,450
we want to do is get light from probe

943
00:39:56,469 --> 00:40:05,919
this should not be in this should be

944
00:39:59,449 --> 00:40:05,919
like indirection or something right

945
00:40:12,880 --> 00:40:20,240
meaning when we get the light from the

946
00:40:16,699 --> 00:40:22,159
probe we want to know what light would

947
00:40:20,239 --> 00:40:28,399
be coming from a particular direction

948
00:40:22,159 --> 00:40:30,469
probably I would think although really

949
00:40:28,400 --> 00:40:32,059
not we kind of just want to ask how much

950
00:40:30,469 --> 00:40:34,480
light is going out in a particular

951
00:40:32,059 --> 00:40:34,480
direction

952
00:40:41,059 --> 00:40:45,929
so I think really what this wants to say

953
00:40:43,800 --> 00:40:49,730
is just like how much light goes out in

954
00:40:45,929 --> 00:40:52,259
that direction generally and the bounce

955
00:40:49,730 --> 00:40:53,880
is just gonna be colored by the surface

956
00:40:52,260 --> 00:40:59,790
normal so I think it may actually be

957
00:40:53,880 --> 00:41:01,619
like this I think that's maybe the best

958
00:40:59,789 --> 00:41:03,059
way to say it so we're gonna query it

959
00:41:01,619 --> 00:41:04,858
for like an emission direction for now

960
00:41:03,059 --> 00:41:06,509
and we may need to change up how this

961
00:41:04,858 --> 00:41:07,409
works because once we decide exactly I

962
00:41:06,510 --> 00:41:09,150
want to store these things we're storing

963
00:41:07,409 --> 00:41:10,469
them kind of in a basic way now we might

964
00:41:09,150 --> 00:41:13,619
try to store them in other ways in the

965
00:41:10,469 --> 00:41:15,118
future so if we're just but just a basic

966
00:41:13,619 --> 00:41:17,550
idea here so we're gonna say in an

967
00:41:15,119 --> 00:41:19,108
emission direction so in terms of the

968
00:41:17,550 --> 00:41:26,130
probe sample normal and now that I think

969
00:41:19,108 --> 00:41:29,309
about it it's unclear to me that we

970
00:41:26,130 --> 00:41:31,680
actually need that all that much I'm

971
00:41:29,309 --> 00:41:33,809
wondering if maybe that was just a waste

972
00:41:31,679 --> 00:41:35,759
of time to actually compute those

973
00:41:33,809 --> 00:41:37,980
normals to begin with like maybe we

974
00:41:35,760 --> 00:41:39,300
don't even really need them we could

975
00:41:37,980 --> 00:41:41,699
just say that look we're just gonna

976
00:41:39,300 --> 00:41:45,050
sample how much light would come back in

977
00:41:41,699 --> 00:41:50,789
the direction we're trying to find right

978
00:41:45,050 --> 00:41:55,619
so I don't know and you know in terms of

979
00:41:50,789 --> 00:41:56,940
the probe yeah like I just can't I don't

980
00:41:55,619 --> 00:42:00,990
I don't know that we ever actually need

981
00:41:56,940 --> 00:42:08,460
that probe normal maybe for filtering

982
00:42:00,989 --> 00:42:10,199
purposes but I mean really all we would

983
00:42:08,460 --> 00:42:15,750
need to do with it is say how much light

984
00:42:10,199 --> 00:42:17,939
was transmitted in this direction but

985
00:42:15,750 --> 00:42:22,050
yeah so I think what we actually want

986
00:42:17,940 --> 00:42:24,329
here is simpler so I think all we're

987
00:42:22,050 --> 00:42:27,660
really gonna say is look the direction

988
00:42:24,329 --> 00:42:31,740
we want a sample in so you know the

989
00:42:27,659 --> 00:42:34,139
emission direction right and when we

990
00:42:31,739 --> 00:42:36,838
look at this here you can see us when we

991
00:42:34,139 --> 00:42:39,118
take the submission direction I think

992
00:42:36,838 --> 00:42:40,199
this doesn't have to be normalized it

993
00:42:39,119 --> 00:42:42,690
doesn't look like it has to be

994
00:42:40,199 --> 00:42:47,939
normalized because we kind of do a

995
00:42:42,690 --> 00:42:49,950
normalization of it here so I think the

996
00:42:47,940 --> 00:42:51,690
emission direction is fine it can just

997
00:42:49,949 --> 00:42:55,559
be arbitrary I don't

998
00:42:51,690 --> 00:42:58,019
no but I think that's okay it plays a

999
00:42:55,559 --> 00:43:00,029
little bit because this is this is not a

1000
00:42:58,019 --> 00:43:02,579
to norm it's a one norm talked about

1001
00:43:00,030 --> 00:43:04,740
that before there may be reasons why you

1002
00:43:02,579 --> 00:43:09,200
need to normalize to the two norm first

1003
00:43:04,739 --> 00:43:09,199
I'm not sure we have to think about that

1004
00:43:28,068 --> 00:43:32,460
so I don't know but anyway the emission

1005
00:43:30,838 --> 00:43:34,049
direction here we pretty much know that

1006
00:43:32,460 --> 00:43:36,599
it's just whatever the probe sample

1007
00:43:34,050 --> 00:43:38,910
point is so basically like where we

1008
00:43:36,599 --> 00:43:40,530
actually are hitting we just want the

1009
00:43:38,909 --> 00:43:42,149
probe sample point and we need to know

1010
00:43:40,530 --> 00:43:50,430
where we started from

1011
00:43:42,150 --> 00:43:52,019
right so the light probe P the light

1012
00:43:50,429 --> 00:43:54,328
probe P is what we're trying to send

1013
00:43:52,019 --> 00:43:56,489
light back to and the probe sample P is

1014
00:43:54,329 --> 00:43:58,318
where we are so the emission direction

1015
00:43:56,489 --> 00:44:02,009
we are Chris we're cuz you know curious

1016
00:43:58,318 --> 00:44:03,269
about is that right so that's the

1017
00:44:02,010 --> 00:44:05,790
emission direction you want to get back

1018
00:44:03,269 --> 00:44:09,088
and we're gonna get back a color now we

1019
00:44:05,789 --> 00:44:16,318
also need to know at this point we we

1020
00:44:09,088 --> 00:44:18,269
kind of want some idea of like how much

1021
00:44:16,318 --> 00:44:20,099
transmission there should be so we kind

1022
00:44:18,269 --> 00:44:23,338
of want a cosine fall-off on that thing

1023
00:44:20,099 --> 00:44:25,500
because a surface that's very oblique to

1024
00:44:23,338 --> 00:44:27,088
us would not be something that would

1025
00:44:25,500 --> 00:44:30,269
send much light back whereas if it's

1026
00:44:27,088 --> 00:44:33,059
right straight bouncing it would so we

1027
00:44:30,269 --> 00:44:35,550
maybe want a cosine term in here if that

1028
00:44:33,059 --> 00:44:36,960
was the case this goes away and maybe

1029
00:44:35,550 --> 00:44:38,599
I'll just get rid of it preemptively and

1030
00:44:36,960 --> 00:44:41,130
we'll just say this is what we'll do so

1031
00:44:38,599 --> 00:44:43,710
this right here we actually want to do a

1032
00:44:41,130 --> 00:44:48,930
normalizer zero on to make sure that

1033
00:44:43,710 --> 00:44:50,789
this thing is normal right and so when

1034
00:44:48,929 --> 00:44:52,799
we do this emission direction this

1035
00:44:50,789 --> 00:44:55,369
really wants to guard for div by zero

1036
00:44:52,800 --> 00:44:55,369
probably

1037
00:45:03,059 --> 00:45:06,869
which will probably be easier to do in

1038
00:45:04,798 --> 00:45:09,958
the symphony version anyway when we do

1039
00:45:06,869 --> 00:45:13,709
the emission direction here and we're

1040
00:45:09,958 --> 00:45:15,389
ready to go we now need to take into

1041
00:45:13,708 --> 00:45:16,438
account that probe normal and here's the

1042
00:45:15,389 --> 00:45:19,078
only place where I think that can really

1043
00:45:16,438 --> 00:45:22,438
be necessary so what we want to do here

1044
00:45:19,079 --> 00:45:24,719
is do the like fall off like the

1045
00:45:22,438 --> 00:45:26,129
reflectivity fall off basically where

1046
00:45:24,719 --> 00:45:28,528
we're going to say take the inner

1047
00:45:26,130 --> 00:45:31,079
product of that probe sample N and the

1048
00:45:28,528 --> 00:45:33,150
emission direction right so we're

1049
00:45:31,079 --> 00:45:35,369
basically saying what we hit the normal

1050
00:45:33,150 --> 00:45:37,349
of that surface versus the direction

1051
00:45:35,369 --> 00:45:38,759
mattress and light back if those are

1052
00:45:37,349 --> 00:45:40,140
right in line with each other we send

1053
00:45:38,759 --> 00:45:42,719
the maximum amount of light back if

1054
00:45:40,139 --> 00:45:45,538
they're 90 degrees apart or more we send

1055
00:45:42,719 --> 00:45:53,429
no light back right that's basically

1056
00:45:45,539 --> 00:45:55,259
what we're doing right so we we

1057
00:45:53,429 --> 00:45:56,969
basically say clamp that sir to one

1058
00:45:55,259 --> 00:45:58,769
can't have negative transmission so if

1059
00:45:56,969 --> 00:46:00,239
you're behind the surface how you ever

1060
00:45:58,768 --> 00:46:02,129
would have gotten behind the service I

1061
00:46:00,239 --> 00:46:04,829
don't know because this is a raycast so

1062
00:46:02,130 --> 00:46:06,419
really that should never happen but in

1063
00:46:04,829 --> 00:46:08,309
Cindy when we send me this it's pretty

1064
00:46:06,418 --> 00:46:11,338
free to clamp to zero so we probably

1065
00:46:08,309 --> 00:46:13,589
just should to avoid any weird edge

1066
00:46:11,338 --> 00:46:15,778
cases anyway once we get the reflective

1067
00:46:13,588 --> 00:46:18,179
fall-off back then what we can do is

1068
00:46:15,778 --> 00:46:20,630
take the actual light sample values so

1069
00:46:18,179 --> 00:46:23,039
here's where we do our light sampling

1070
00:46:20,630 --> 00:46:24,809
that light sample is just going to be

1071
00:46:23,039 --> 00:46:30,469
multiplied by the reflective fall-off

1072
00:46:24,809 --> 00:46:35,039
right and also by the Hadamard product

1073
00:46:30,469 --> 00:46:37,409
of the reflective color so the

1074
00:46:35,039 --> 00:46:42,589
particular thing we hit remember in that

1075
00:46:37,409 --> 00:46:42,588
rate I have to get the ref color here

1076
00:46:47,150 --> 00:46:51,720
whatever we hit that can have its own

1077
00:46:50,190 --> 00:46:54,300
color so that allows us to have like

1078
00:46:51,719 --> 00:46:56,609
walls that themselves change the

1079
00:46:54,300 --> 00:46:58,769
reflected light so that if the wall is

1080
00:46:56,610 --> 00:47:01,289
entirely red it will reflect red light

1081
00:46:58,769 --> 00:47:02,929
instead of reflecting white light when

1082
00:47:01,289 --> 00:47:05,009
white light is showing off it and so on

1083
00:47:02,929 --> 00:47:06,469
so we want to support that because we're

1084
00:47:05,010 --> 00:47:08,340
gonna probably want to use that later

1085
00:47:06,469 --> 00:47:08,759
even though we don't really use it right

1086
00:47:08,340 --> 00:47:10,950
now

1087
00:47:08,760 --> 00:47:12,570
so in here where we do reflective

1088
00:47:10,949 --> 00:47:14,759
fall-off we do the haddem our product of

1089
00:47:12,570 --> 00:47:21,059
that light sample there what we want to

1090
00:47:14,760 --> 00:47:24,560
do is add that ref color in right and so

1091
00:47:21,059 --> 00:47:29,039
that gives us the actual like light

1092
00:47:24,559 --> 00:47:31,889
transmitted value that is how much light

1093
00:47:29,039 --> 00:47:34,769
we should be sending back along that Ray

1094
00:47:31,889 --> 00:47:38,460
to the light probe and it also contains

1095
00:47:34,769 --> 00:47:40,230
what the RGB color oh it was this stuff

1096
00:47:38,460 --> 00:47:43,440
where we get light boxes and this

1097
00:47:40,230 --> 00:47:47,610
garbage here none of this is relevant at

1098
00:47:43,440 --> 00:47:49,650
all anymore this all goes away it's not

1099
00:47:47,610 --> 00:47:51,750
getting as simple as it looks because

1100
00:47:49,650 --> 00:47:54,030
remember all this crap has to happen now

1101
00:47:51,750 --> 00:47:56,250
so it's actually still very complicated

1102
00:47:54,030 --> 00:47:58,200
it's just hidden inside these two

1103
00:47:56,250 --> 00:48:00,800
routines which is where we'll have to

1104
00:47:58,199 --> 00:48:03,359
start bringing more optimization to bear

1105
00:48:00,800 --> 00:48:06,090
in the future because you know it's not

1106
00:48:03,360 --> 00:48:08,010
really going to be sufficient so anyway

1107
00:48:06,090 --> 00:48:10,440
that's all we really need to do there

1108
00:48:08,010 --> 00:48:12,480
and that is what will give us the final

1109
00:48:10,440 --> 00:48:14,940
value we're actually going to use for

1110
00:48:12,480 --> 00:48:16,019
our transfer value and you can see here

1111
00:48:14,940 --> 00:48:21,300
what it looks like we've already got

1112
00:48:16,019 --> 00:48:23,400
that it's called transfer PPS so I think

1113
00:48:21,300 --> 00:48:27,530
actually we just do that and then the

1114
00:48:23,400 --> 00:48:27,530
rest of the routine would work correctly

1115
00:48:28,190 --> 00:48:35,610
looks like here actually the angular

1116
00:48:32,820 --> 00:48:46,019
fall-off was already coming in here sort

1117
00:48:35,610 --> 00:48:51,230
of so alright so I guess I guess this

1118
00:48:46,019 --> 00:48:51,230
stuff just wants to be done regardless

1119
00:48:55,750 --> 00:49:09,530
so it looks like this code just wants to

1120
00:48:58,550 --> 00:49:14,960
be done for everything I guess you can't

1121
00:49:09,530 --> 00:49:16,910
do these though well wait but you can't

1122
00:49:14,960 --> 00:49:23,900
really do that for everything because

1123
00:49:16,909 --> 00:49:25,730
you don't know the normal and yeah I

1124
00:49:23,900 --> 00:49:27,950
don't know all right never mind

1125
00:49:25,730 --> 00:49:29,119
I was confused there that's this can

1126
00:49:27,949 --> 00:49:32,000
only happen in here because you don't

1127
00:49:29,119 --> 00:49:35,210
have a hit point otherwise right so I'm

1128
00:49:32,000 --> 00:49:38,780
not sure what any of this was doing

1129
00:49:35,210 --> 00:49:40,159
there this yeah this this is just

1130
00:49:38,780 --> 00:49:43,190
garbage this doesn't look right at all

1131
00:49:40,159 --> 00:49:46,690
so I'm just going to delete it well all

1132
00:49:43,190 --> 00:49:46,690
of this looks looks wrong to me

1133
00:49:55,099 --> 00:50:04,380
so yeah um the accumulated weight I

1134
00:50:01,460 --> 00:50:09,420
don't know what that would be for now

1135
00:50:04,380 --> 00:50:12,930
because we have pretty much a consistent

1136
00:50:09,420 --> 00:50:15,269
we don't need that anymore because the

1137
00:50:12,929 --> 00:50:19,048
accumulation could just be done

1138
00:50:15,269 --> 00:50:21,000
matter of fact like the light probes can

1139
00:50:19,048 --> 00:50:24,710
just be you can just summit in here you

1140
00:50:21,000 --> 00:50:24,710
don't need a secondary pass at all

1141
00:50:24,798 --> 00:50:29,519
because you know what the wait you know

1142
00:50:27,809 --> 00:50:32,190
that the weight is just however many

1143
00:50:29,519 --> 00:50:34,650
rays we cast for probe period right

1144
00:50:32,190 --> 00:50:36,329
that's what happens so I don't think we

1145
00:50:34,650 --> 00:50:38,789
need this anymore either I think we

1146
00:50:36,329 --> 00:50:41,068
could just do a pre multiply by whatever

1147
00:50:38,789 --> 00:50:43,520
that weight is and be done the

1148
00:50:41,068 --> 00:50:46,318
accumulated weight isn't a thing anymore

1149
00:50:43,519 --> 00:50:51,690
so I think all we really need is the

1150
00:50:46,318 --> 00:50:56,159
accumulated PPS that can just add the

1151
00:50:51,690 --> 00:50:57,450
transfer PPS back in there photons per

1152
00:50:56,159 --> 00:51:02,009
second I think it's what we were sort of

1153
00:50:57,449 --> 00:51:02,939
calling that and the direction is just

1154
00:51:02,010 --> 00:51:06,270
not a thing anymore

1155
00:51:02,940 --> 00:51:09,150
right so I think that's all we really

1156
00:51:06,269 --> 00:51:12,059
need to do now we need an additional

1157
00:51:09,150 --> 00:51:14,670
piece of information here because when

1158
00:51:12,059 --> 00:51:17,220
we do the accumulated PPS for a

1159
00:51:14,670 --> 00:51:20,190
particular sample point because we're

1160
00:51:17,219 --> 00:51:23,608
now doing this as light probes we need

1161
00:51:20,190 --> 00:51:29,220
to actually remember several different

1162
00:51:23,608 --> 00:51:32,009
values right so we need to like when we

1163
00:51:29,219 --> 00:51:34,618
sort of pack that stuff up we have six

1164
00:51:32,010 --> 00:51:43,200
color values here right so like if you

1165
00:51:34,619 --> 00:51:46,260
look where we do our light probes each

1166
00:51:43,199 --> 00:51:48,509
one of them stores six light directions

1167
00:51:46,260 --> 00:51:51,559
at well six light colors one for each

1168
00:51:48,510 --> 00:51:55,079
face of a cube centered around the point

1169
00:51:51,559 --> 00:51:58,859
so we want to have a way of summing that

1170
00:51:55,079 --> 00:52:02,278
right and we're only summing into one of

1171
00:51:58,858 --> 00:52:05,338
those each time we would probably like

1172
00:52:02,278 --> 00:52:08,539
to ensure that we always some one sample

1173
00:52:05,338 --> 00:52:22,278
into all six

1174
00:52:08,539 --> 00:52:28,160
I would assume I can't think of a reason

1175
00:52:22,278 --> 00:52:30,679
really not to and so this system here

1176
00:52:28,159 --> 00:52:32,928
right where it's doing ray counts 16 I

1177
00:52:30,679 --> 00:52:36,798
think what we kind of want to do is make

1178
00:52:32,929 --> 00:52:38,689
that be a multiple of like four right so

1179
00:52:36,798 --> 00:52:39,829
we'd probably want to do like the rate

1180
00:52:38,688 --> 00:52:42,379
count is 12

1181
00:52:39,829 --> 00:52:45,349
each time and it does two samples into

1182
00:52:42,380 --> 00:52:50,630
each of the six you know and I'm saying

1183
00:52:45,349 --> 00:53:01,249
to you and so I think what we'd want to

1184
00:52:50,630 --> 00:53:03,969
do is roughly like this right now we

1185
00:53:01,248 --> 00:53:08,528
don't actually want to do a mod six here

1186
00:53:03,969 --> 00:53:12,168
right we want to actually just do an

1187
00:53:08,528 --> 00:53:15,318
easier way of doing a mod round on this

1188
00:53:12,168 --> 00:53:20,058
guy cuz yeah like you don't want to

1189
00:53:15,318 --> 00:53:21,259
actually have to do a mod six although I

1190
00:53:20,059 --> 00:53:24,229
guess you could kind of work out a way

1191
00:53:21,259 --> 00:53:26,239
to that more simply so what you really

1192
00:53:24,228 --> 00:53:32,149
want to do I guess is when we're doing

1193
00:53:26,239 --> 00:53:34,699
these samples here I think we want the

1194
00:53:32,150 --> 00:53:39,349
sample points array to be able to pull

1195
00:53:34,699 --> 00:53:49,400
out the directions right so we want

1196
00:53:39,349 --> 00:53:51,949
probably this you know i'm santi so

1197
00:53:49,400 --> 00:53:55,309
effectively and here when we pull this

1198
00:53:51,949 --> 00:54:04,719
thing out we could say that the sample

1199
00:53:55,309 --> 00:54:04,719
point Direction index comes from this

1200
00:54:18,219 --> 00:54:22,189
hopefully that makes some sense I guess

1201
00:54:20,539 --> 00:54:24,259
technically since this is the sample

1202
00:54:22,190 --> 00:54:27,019
region I guess now I think about that's

1203
00:54:24,260 --> 00:54:28,760
not actually correct it's actually the

1204
00:54:27,019 --> 00:54:32,300
Ray index that's the thing that you use

1205
00:54:28,760 --> 00:54:35,119
twice so like that and the Ray index

1206
00:54:32,300 --> 00:54:37,880
just tells us for a given sample which

1207
00:54:35,119 --> 00:54:42,079
one it comes from right something like

1208
00:54:37,880 --> 00:54:44,390
this and there'd be 12 of these or 24

1209
00:54:42,079 --> 00:54:49,730
right it depends on how many you want to

1210
00:54:44,389 --> 00:54:52,068
do but or 18 I guess 18 would probably

1211
00:54:49,730 --> 00:54:55,250
be the number closer to what we were

1212
00:54:52,068 --> 00:54:57,079
doing right so I think we want something

1213
00:54:55,250 --> 00:54:59,809
like that so we would effectively say

1214
00:54:57,079 --> 00:55:04,130
like okay we do 18 of these and then the

1215
00:54:59,809 --> 00:55:06,318
thing rolls around as we go if necessary

1216
00:55:04,130 --> 00:55:08,088
but I think that's all we really want

1217
00:55:06,318 --> 00:55:10,460
and this can be beefed up by the number

1218
00:55:08,088 --> 00:55:14,059
right so the sample point dur index

1219
00:55:10,460 --> 00:55:16,280
there yeah cuz that ray index doesn't

1220
00:55:14,059 --> 00:55:18,980
get modded so basically this thing just

1221
00:55:16,280 --> 00:55:22,730
has to be the array count of the work

1222
00:55:18,980 --> 00:55:25,309
sample pointer index right so I think

1223
00:55:22,730 --> 00:55:26,210
that's all we really wanted there and

1224
00:55:25,309 --> 00:55:28,699
that way

1225
00:55:26,210 --> 00:55:30,079
we know that this always gets summed in

1226
00:55:28,699 --> 00:55:32,269
and they get something in predictable

1227
00:55:30,079 --> 00:55:34,250
way that way we don't have to track

1228
00:55:32,269 --> 00:55:35,568
weights anymore cuz I don't really think

1229
00:55:34,250 --> 00:55:37,309
we want to do that we'll just make sure

1230
00:55:35,568 --> 00:55:45,139
we always take one sample in each

1231
00:55:37,309 --> 00:55:47,179
direction every time seems okay if it

1232
00:55:45,139 --> 00:55:49,309
turns out in the future we really want

1233
00:55:47,179 --> 00:55:51,108
to be able to take more samples like

1234
00:55:49,309 --> 00:55:55,190
laterally cuz that because the game

1235
00:55:51,108 --> 00:55:57,500
spreads laterally more or something then

1236
00:55:55,190 --> 00:56:02,869
we would need to change that up but

1237
00:55:57,500 --> 00:56:06,079
otherwise I think it'd be fine there we

1238
00:56:02,869 --> 00:56:11,720
go so what we would then say here is

1239
00:56:06,079 --> 00:56:15,289
like when we look at the ray count we

1240
00:56:11,719 --> 00:56:18,919
would have a waiting here like a ray

1241
00:56:15,289 --> 00:56:21,139
weight and so since we would know

1242
00:56:18,920 --> 00:56:25,099
in eight in the case of 18 right so if

1243
00:56:21,139 --> 00:56:29,420
the rate counts 18 we know that six is

1244
00:56:25,099 --> 00:56:31,869
the number of directions right so we

1245
00:56:29,420 --> 00:56:35,568
know that if we're taking six directions

1246
00:56:31,869 --> 00:56:36,920
we need to divide the Ray count by six

1247
00:56:35,568 --> 00:56:40,670
to figure out what the weight should be

1248
00:56:36,920 --> 00:56:43,750
of each one of those right so once we

1249
00:56:40,670 --> 00:56:45,470
know what that Ray weight should be

1250
00:56:43,750 --> 00:56:47,559
actually I guess it's the other way

1251
00:56:45,469 --> 00:56:47,558
around

1252
00:56:50,150 --> 00:56:56,720
so for example if we take six samples

1253
00:56:53,539 --> 00:56:58,849
each one should get a rate of 1 if we

1254
00:56:56,719 --> 00:57:03,379
take 12 samples each once you get a rate

1255
00:56:58,849 --> 00:57:05,630
of 0.5 right so I think that's what we

1256
00:57:03,380 --> 00:57:08,450
want to do there and then when we sum up

1257
00:57:05,630 --> 00:57:11,950
the transfer PPS we can just multiply by

1258
00:57:08,449 --> 00:57:15,348
the Ray weight and we're good to go

1259
00:57:11,949 --> 00:57:17,298
right so I think that gives us the

1260
00:57:15,349 --> 00:57:21,380
correct accumulated PPS which then we

1261
00:57:17,298 --> 00:57:22,818
can copy back in in terms of this stuff

1262
00:57:21,380 --> 00:57:25,190
here where we're doing like letting

1263
00:57:22,818 --> 00:57:27,409
points with initial PPS and emission

1264
00:57:25,190 --> 00:57:30,740
people yes like that I think that's not

1265
00:57:27,409 --> 00:57:33,348
really necessary anymore so I think all

1266
00:57:30,739 --> 00:57:35,449
that goes away this goes away that goes

1267
00:57:33,349 --> 00:57:37,940
away a lot of this stuff kind of just

1268
00:57:35,449 --> 00:57:41,538
falls away because we've replaced it

1269
00:57:37,940 --> 00:57:45,380
with something else now so we'll be able

1270
00:57:41,539 --> 00:57:48,289
to kind of butcher this up pretty darn

1271
00:57:45,380 --> 00:57:51,019
good in a second here but I think that's

1272
00:57:48,289 --> 00:57:53,359
mostly the sketch like that's basically

1273
00:57:51,018 --> 00:57:58,068
what we're looking at let's go ahead and

1274
00:57:53,358 --> 00:57:59,838
try to make sure that we can compile

1275
00:57:58,068 --> 00:58:03,409
this down so let's let's fix our like

1276
00:57:59,838 --> 00:58:05,239
basic our basic issues here so I'm going

1277
00:58:03,409 --> 00:58:07,639
to take this first sample point index I

1278
00:58:05,239 --> 00:58:09,768
might change this to first light probe

1279
00:58:07,639 --> 00:58:12,409
index because again remember we're not

1280
00:58:09,768 --> 00:58:13,788
going over the samples any sample points

1281
00:58:12,409 --> 00:58:16,578
anymore our sample points will not exist

1282
00:58:13,789 --> 00:58:17,990
shortly the points that we sample that

1283
00:58:16,579 --> 00:58:19,579
are now the actual light probes

1284
00:58:17,989 --> 00:58:20,959
themselves so we're just changing that

1285
00:58:19,579 --> 00:58:23,599
name to reflect the fact that that's

1286
00:58:20,960 --> 00:58:25,659
where we're sampling from one passed

1287
00:58:23,599 --> 00:58:27,140
last light probe index one pass

1288
00:58:25,659 --> 00:58:40,639
[Music]

1289
00:58:27,139 --> 00:58:41,629
like probe index there we go this is how

1290
00:58:40,639 --> 00:58:44,118
many times gonna take we stole that

1291
00:58:41,630 --> 00:58:45,829
right there we go this sample point

1292
00:58:44,119 --> 00:58:47,028
during this that's off of the solution I

1293
00:58:45,829 --> 00:58:50,630
don't know why I type to work there

1294
00:58:47,028 --> 00:58:54,940
that's wrong else we got

1295
00:58:50,630 --> 00:58:54,940
this is like probes not like probe

1296
00:58:55,690 --> 00:59:04,900
sample point index is light probe index

1297
00:59:00,289 --> 00:59:04,900
now same thing here

1298
00:59:15,588 --> 00:59:21,028
so let's see where we're at

1299
00:59:17,699 --> 00:59:23,400
so get probe lighting for needs the

1300
00:59:21,028 --> 00:59:26,548
spatial index which we have the solution

1301
00:59:23,400 --> 00:59:30,088
which we have the probe sample P which I

1302
00:59:26,548 --> 00:59:33,059
think we have let me just make sure I've

1303
00:59:30,088 --> 00:59:34,920
got all that right but probably what we

1304
00:59:33,059 --> 00:59:36,539
have to do just predefined this right so

1305
00:59:34,920 --> 00:59:39,959
yeah I think what we want to do is just

1306
00:59:36,539 --> 00:59:42,028
block this up into here for now actually

1307
00:59:39,958 --> 00:59:43,528
so you know what we may want to do - I

1308
00:59:42,028 --> 00:59:46,650
don't know but we may want to just make

1309
00:59:43,528 --> 00:59:48,778
this in its own file this voxel thing

1310
00:59:46,650 --> 00:59:50,119
maybe I don't know maybe that's just a

1311
00:59:48,778 --> 00:59:52,498
waste of time

1312
00:59:50,119 --> 00:59:54,719
we'll see when we go a little further

1313
00:59:52,498 --> 00:59:56,818
whether we want whether they actually is

1314
00:59:54,719 --> 01:00:00,659
enough code here - making it worth

1315
00:59:56,818 --> 01:00:01,798
splitting out it might not be but we

1316
01:00:00,659 --> 01:00:03,659
need to come be able to call those two

1317
01:00:01,798 --> 01:00:07,438
functions so I just gonna pre de Ferrol

1318
01:00:03,659 --> 01:00:15,568
in there so here we just got a this part

1319
01:00:07,438 --> 01:00:17,129
is just a in the transfer of PPS we want

1320
01:00:15,568 --> 01:00:18,949
to be able to handle that ambient moon

1321
01:00:17,130 --> 01:00:24,920
light potentially as that comes in here

1322
01:00:18,949 --> 01:00:28,798
and so oh wait

1323
01:00:24,920 --> 01:00:30,298
I'm a dingus aren't I so you know that

1324
01:00:28,798 --> 01:00:35,518
thing I said about not needing the

1325
01:00:30,298 --> 01:00:37,768
weights Julie actually no I guess we

1326
01:00:35,518 --> 01:00:40,528
don't cuz we we're always gonna have an

1327
01:00:37,768 --> 01:00:43,258
ambient light or black coming back for

1328
01:00:40,528 --> 01:00:44,670
our samples if we don't hit something so

1329
01:00:43,259 --> 01:00:47,489
no the Ray weight is always correct

1330
01:00:44,670 --> 01:00:49,699
I'm not a big Asst but yeah we do need

1331
01:00:47,489 --> 01:00:51,989
to remember that there's a now there's a

1332
01:00:49,699 --> 01:00:53,278
sample direction that goes with this so

1333
01:00:51,989 --> 01:00:56,458
we're gonna have to figure out how we

1334
01:00:53,278 --> 01:00:58,289
want to handle that in a second but back

1335
01:00:56,458 --> 01:01:03,899
here with our transfer PPS we do this

1336
01:00:58,289 --> 01:01:06,689
operation this part where we look at how

1337
01:01:03,900 --> 01:01:08,249
much you're facing the moon which is I

1338
01:01:06,688 --> 01:01:13,318
guess what this would be about this

1339
01:01:08,248 --> 01:01:16,198
again is gonna be the direction that we

1340
01:01:13,318 --> 01:01:19,728
were going and so that is actually this

1341
01:01:16,199 --> 01:01:19,729
right here

1342
01:01:22,858 --> 01:01:27,670
you notice realized the solving the

1343
01:01:26,289 --> 01:01:30,070
emission direction this way is stupid

1344
01:01:27,670 --> 01:01:33,400
because that's always the raid erection

1345
01:01:30,070 --> 01:01:44,230
so actually all you would have to do is

1346
01:01:33,400 --> 01:01:46,570
just do this right so that was stupid

1347
01:01:44,230 --> 01:01:48,608
don't ask me why I did that because it

1348
01:01:46,570 --> 01:01:49,990
was dumb so you don't actually need to

1349
01:01:48,608 --> 01:01:52,889
do this subtraction there there's no

1350
01:01:49,989 --> 01:02:07,689
reason it's you already know the answer

1351
01:01:52,889 --> 01:02:10,779
so all of this stuff is fine and and I

1352
01:02:07,690 --> 01:02:12,519
think that's all good so all we need to

1353
01:02:10,780 --> 01:02:16,030
do here is say that that emission

1354
01:02:12,519 --> 01:02:17,829
Direction is common in both cases in

1355
01:02:16,030 --> 01:02:20,440
here where we do use that emission

1356
01:02:17,829 --> 01:02:31,420
direction it looks like what we want to

1357
01:02:20,440 --> 01:02:33,460
do is take the Z range of this guy like

1358
01:02:31,420 --> 01:02:35,800
that looks like that clamp was on the

1359
01:02:33,460 --> 01:02:37,269
wrong thing but that's okay but still

1360
01:02:35,800 --> 01:02:40,000
work it just was doing more work that I

1361
01:02:37,269 --> 01:02:41,800
needed to it looks like we just want to

1362
01:02:40,000 --> 01:02:44,079
take that Z direction

1363
01:02:41,800 --> 01:02:46,150
clamp it and multiply the moon color

1364
01:02:44,079 --> 01:02:49,059
that tells us how much moon was coming

1365
01:02:46,150 --> 01:02:54,480
in it means the moon light can't come in

1366
01:02:49,059 --> 01:02:54,480
on an angle which we may want to do

1367
01:03:04,010 --> 01:03:07,710
because it would just take an extra dot

1368
01:03:06,210 --> 01:03:09,449
product to do that and that's a pretty

1369
01:03:07,710 --> 01:03:11,460
cheap operation to do so it seems like

1370
01:03:09,449 --> 01:03:16,679
probably getting a direction for our

1371
01:03:11,460 --> 01:03:18,269
ambient light would probably be smart so

1372
01:03:16,679 --> 01:03:20,339
I don't know that seems like kind of

1373
01:03:18,269 --> 01:03:23,489
just wasteful there but let's take a

1374
01:03:20,340 --> 01:03:25,920
look here yeah so I think we're almost

1375
01:03:23,489 --> 01:03:27,509
done if we look at what's happening here

1376
01:03:25,920 --> 01:03:29,039
where we're distributing up our work

1377
01:03:27,510 --> 01:03:30,500
here we got the points for work and all

1378
01:03:29,039 --> 01:03:32,940
that kind of nonsense happening right

1379
01:03:30,500 --> 01:03:35,039
that's just gonna be the light probe cap

1380
01:03:32,940 --> 01:03:38,670
now so it's really just probes for work

1381
01:03:35,039 --> 01:03:41,460
now and we're slicing those up however

1382
01:03:38,670 --> 01:03:46,610
we want and this is just first light

1383
01:03:41,460 --> 01:03:54,059
probe index and this is probes for work

1384
01:03:46,610 --> 01:04:02,640
right one past last light probe index is

1385
01:03:54,059 --> 01:04:05,730
going to be the same thing and then in

1386
01:04:02,639 --> 01:04:10,619
here we're just looking to clamp this so

1387
01:04:05,730 --> 01:04:16,559
we want to say that if we were going to

1388
01:04:10,619 --> 01:04:17,849
go over the end I don't know that we

1389
01:04:16,559 --> 01:04:24,179
actually have a light probe counting

1390
01:04:17,849 --> 01:04:26,099
here but we're gonna need one right if

1391
01:04:24,179 --> 01:04:29,389
we're going to go over the end then we

1392
01:04:26,099 --> 01:04:29,389
just clamp it off there

1393
01:04:38,619 --> 01:04:44,150
we also don't do any computation for

1394
01:04:41,210 --> 01:04:45,829
light probe zero apparently and that's

1395
01:04:44,150 --> 01:04:50,920
probably just so we can remember the

1396
01:04:45,829 --> 01:04:53,900
fact that there is if we are in a voxel

1397
01:04:50,920 --> 01:04:57,800
that doesn't want to say there's a light

1398
01:04:53,900 --> 01:05:02,559
probe there then it can just be zero but

1399
01:04:57,800 --> 01:05:02,560
I think actually

1400
01:05:09,369 --> 01:05:17,650
I guess what I might say about that is I

1401
01:05:15,300 --> 01:05:19,990
mean I guess it's true that we don't

1402
01:05:17,650 --> 01:05:21,519
need to compute anything for it but it

1403
01:05:19,989 --> 01:05:25,599
would actually be fine if that's a real

1404
01:05:21,519 --> 01:05:26,980
light probe anyway it doesn't matter we

1405
01:05:25,599 --> 01:05:29,019
can leave this in there isn't it's not a

1406
01:05:26,980 --> 01:05:30,429
big deal so I think now we're down to

1407
01:05:29,019 --> 01:05:31,869
just the fact that when we're storing

1408
01:05:30,429 --> 01:05:33,579
the accumulation we don't really have a

1409
01:05:31,869 --> 01:05:36,940
good idea of how we're storing the

1410
01:05:33,579 --> 01:05:42,069
accumulation so if we go back and look

1411
01:05:36,940 --> 01:05:44,260
at the accumulated PBS here uh which is

1412
01:05:42,070 --> 01:05:46,240
somewhere yeah here it is if we go back

1413
01:05:44,260 --> 01:05:48,460
and look at the accumulated PBS right

1414
01:05:46,239 --> 01:05:50,949
we're basically saying these two things

1415
01:05:48,460 --> 01:05:53,199
don't want to be here anymore this thing

1416
01:05:50,949 --> 01:05:58,899
does want to be here anymore

1417
01:05:53,199 --> 01:06:01,239
but we don't want it to store just one

1418
01:05:58,900 --> 01:06:05,380
light sample we actually want it to

1419
01:06:01,239 --> 01:06:06,549
store six light samples and so we can

1420
01:06:05,380 --> 01:06:14,500
you know we kind of need something that

1421
01:06:06,550 --> 01:06:17,890
looks more like this right yeah I'm

1422
01:06:14,500 --> 01:06:20,019
saying to you and we could do it that

1423
01:06:17,889 --> 01:06:21,839
way but I don't really want to because I

1424
01:06:20,019 --> 01:06:25,960
don't like these kinds of constructions

1425
01:06:21,840 --> 01:06:29,079
it's a pointer to three VIII's is just a

1426
01:06:25,960 --> 01:06:31,570
little yeah so what I'd rather do is

1427
01:06:29,079 --> 01:06:35,889
just say look we're gonna allocate this

1428
01:06:31,570 --> 01:06:37,780
as if it had that stride in it I'm sorry

1429
01:06:35,889 --> 01:06:40,629
6vc I think we're about six not three I

1430
01:06:37,780 --> 01:06:41,980
don't know why type six in there uh so I

1431
01:06:40,630 --> 01:06:45,970
think we want something more like that

1432
01:06:41,980 --> 01:06:48,250
right we want to accumulate the six

1433
01:06:45,969 --> 01:06:49,579
samples and I think they probably want

1434
01:06:48,250 --> 01:06:52,650
to be contiguous

1435
01:06:49,579 --> 01:06:52,650
[Music]

1436
01:07:03,489 --> 01:07:09,049
it's pretty hard to say this gets into

1437
01:07:07,280 --> 01:07:10,760
the part we're having I have never

1438
01:07:09,050 --> 01:07:13,610
implemented a light probe system before

1439
01:07:10,760 --> 01:07:15,620
and have had I implemented one before I

1440
01:07:13,610 --> 01:07:17,539
would probably have some opinions about

1441
01:07:15,619 --> 01:07:20,509
how you want to store and manipulate

1442
01:07:17,539 --> 01:07:27,369
these things and the reason I say that

1443
01:07:20,510 --> 01:07:27,370
is just because if you look at how the

1444
01:07:28,780 --> 01:07:33,470
if you look at how this stuff is going

1445
01:07:31,369 --> 01:07:35,809
to get gathered it's unclear that you

1446
01:07:33,469 --> 01:07:38,779
really want to gather it in ways that

1447
01:07:35,809 --> 01:07:41,599
aren't sort of nicely done on a power of

1448
01:07:38,780 --> 01:07:43,940
two boundary I mean maybe you do but it

1449
01:07:41,599 --> 01:07:46,460
would be nice if this thing was more

1450
01:07:43,940 --> 01:07:48,950
power of two ish and if you're talking

1451
01:07:46,460 --> 01:07:52,990
about six light directions then pretty

1452
01:07:48,949 --> 01:07:55,909
much nothing you do because there's a

1453
01:07:52,989 --> 01:07:58,099
three in there right three times two is

1454
01:07:55,909 --> 01:07:59,929
six so you're always gonna have a times

1455
01:07:58,099 --> 01:08:02,179
three in there you're never gonna get a

1456
01:07:59,929 --> 01:08:04,940
power of two so you would much rather

1457
01:08:02,179 --> 01:08:10,059
you know talk about tracking you know

1458
01:08:04,940 --> 01:08:10,059
eight light directions or something

1459
01:08:26,139 --> 01:08:31,960
I mean I guess all I'm saying is you'd

1460
01:08:28,810 --> 01:08:34,239
rather track eight or four values and so

1461
01:08:31,960 --> 01:08:44,230
I don't know what the right answer is

1462
01:08:34,238 --> 01:08:47,048
there I think that's something we're

1463
01:08:44,229 --> 01:08:49,059
just gonna have to play with but so I

1464
01:08:47,048 --> 01:08:50,319
think what I'll say at the moment at the

1465
01:08:49,060 --> 01:08:51,639
immediate moment is I'm just gonna

1466
01:08:50,319 --> 01:08:53,199
cheese this out and then we're gonna

1467
01:08:51,639 --> 01:08:54,719
look at this in more detail because I

1468
01:08:53,198 --> 01:08:57,368
feel like this is something important

1469
01:08:54,719 --> 01:09:00,670
and I just don't know what the answer is

1470
01:08:57,368 --> 01:09:02,948
offhand but I don't love this like I

1471
01:09:00,670 --> 01:09:05,408
don't want to be multiplying this by six

1472
01:09:02,948 --> 01:09:07,868
that's just dumb

1473
01:09:05,408 --> 01:09:12,698
so that's just kind of garbage I feel

1474
01:09:07,868 --> 01:09:16,479
like you want this times eight just my

1475
01:09:12,698 --> 01:09:20,019
two cents so I think that's something

1476
01:09:16,479 --> 01:09:23,169
that's gonna require a little bit of you

1477
01:09:20,020 --> 01:09:25,509
know squeak eNOS there and we'll see so

1478
01:09:23,170 --> 01:09:29,880
on here I'm just gonna say look this is

1479
01:09:25,509 --> 01:09:33,759
just gonna be six times this for now

1480
01:09:29,880 --> 01:09:36,520
we're gonna nip these guys they're not

1481
01:09:33,759 --> 01:09:38,139
gonna happen and then we'll you know

1482
01:09:36,520 --> 01:09:39,639
take it from there

1483
01:09:38,139 --> 01:09:49,329
and this is not gonna happen either

1484
01:09:39,639 --> 01:09:53,440
right and we're gonna get rid of that D

1485
01:09:49,329 --> 01:09:57,158
eventually so that's pretty much all I

1486
01:09:53,439 --> 01:09:58,750
really wanted to do that's that's the

1487
01:09:57,158 --> 01:10:00,670
entire thing I wanted to do today was

1488
01:09:58,750 --> 01:10:03,880
just sketch out that routine and how

1489
01:10:00,670 --> 01:10:05,199
that was going to work and we probably

1490
01:10:03,880 --> 01:10:06,940
should go in now and just start cleaning

1491
01:10:05,198 --> 01:10:10,299
it up a little bit we're not running it

1492
01:10:06,939 --> 01:10:12,609
right now so you know we don't have to

1493
01:10:10,300 --> 01:10:15,279
look at like what it actually looks like

1494
01:10:12,609 --> 01:10:19,210
in practice or anything like that but I

1495
01:10:15,279 --> 01:10:24,639
think I've got about thirty minutes left

1496
01:10:19,210 --> 01:10:28,630
maybe let's say and so I think what I

1497
01:10:24,639 --> 01:10:31,300
might want to do here is just yeah like

1498
01:10:28,630 --> 01:10:34,179
go ahead and finish up any cleanup that

1499
01:10:31,300 --> 01:10:35,440
I might want to do so in I mean just

1500
01:10:34,179 --> 01:10:36,819
just deleting stuff so that when we

1501
01:10:35,439 --> 01:10:37,928
start debugging it there's not just crap

1502
01:10:36,819 --> 01:10:42,399
lying around the

1503
01:10:37,929 --> 01:10:45,730
that don't matter right so let's start

1504
01:10:42,399 --> 01:10:49,809
by saying this stuff has to go we don't

1505
01:10:45,729 --> 01:10:53,049
care about these points anymore those

1506
01:10:49,810 --> 01:10:55,360
are gone the scratch arrays we got to

1507
01:10:53,050 --> 01:10:57,489
take a look at but those points are

1508
01:10:55,359 --> 01:10:59,019
definitely gone so so this is gone and

1509
01:10:57,488 --> 01:11:00,759
what we would replace it with when we're

1510
01:10:59,020 --> 01:11:02,620
dumping the data there is it's the light

1511
01:11:00,760 --> 01:11:04,239
probe count that's actually what we want

1512
01:11:02,619 --> 01:11:06,579
to know how many light probes are you

1513
01:11:04,238 --> 01:11:07,000
pushing down into the system and off you

1514
01:11:06,579 --> 01:11:10,329
go

1515
01:11:07,000 --> 01:11:12,789
so in here where we actually set this

1516
01:11:10,329 --> 01:11:14,260
stuff up the extended point count isn't

1517
01:11:12,789 --> 01:11:17,380
a thing we're not doing hierarchical

1518
01:11:14,260 --> 01:11:20,739
sampling at this point think so we're

1519
01:11:17,380 --> 01:11:23,500
gonna get get rid of that as well that

1520
01:11:20,738 --> 01:11:25,869
should go away the entropy frame count

1521
01:11:23,500 --> 01:11:28,390
and T update all this stuff should

1522
01:11:25,869 --> 01:11:30,399
accumulate these things I think all that

1523
01:11:28,390 --> 01:11:33,429
stuff is fine for now although we may

1524
01:11:30,399 --> 01:11:36,729
need to tweak it a little bit based on

1525
01:11:33,429 --> 01:11:39,699
what we're doing and we can sort of

1526
01:11:36,729 --> 01:11:41,529
reenable this stuff now - maybe that's

1527
01:11:39,698 --> 01:11:43,539
about to you but let's continue with

1528
01:11:41,529 --> 01:11:47,679
just the sort of the trimming if you

1529
01:11:43,539 --> 01:11:49,179
will so where we get this solution point

1530
01:11:47,679 --> 01:11:51,640
count and we get it from the group here

1531
01:11:49,179 --> 01:11:54,630
that sort of stuff as far as pushing

1532
01:11:51,640 --> 01:11:54,630
light probes on

1533
01:12:09,560 --> 01:12:11,620
you

1534
01:12:12,170 --> 01:12:27,020
I don't really know how I want that to

1535
01:12:19,130 --> 01:12:30,890
work but I think it should probably just

1536
01:12:27,020 --> 01:12:34,660
be a free slot scheme and people just

1537
01:12:30,890 --> 01:12:34,660
pack and unpack out of here

1538
01:12:58,739 --> 01:13:07,090
so just to unpack what's going on in my

1539
01:13:02,739 --> 01:13:09,760
head right now we have the entity system

1540
01:13:07,090 --> 01:13:11,949
and it now operates on a caching basis

1541
01:13:09,760 --> 01:13:14,619
and we know exactly when enemies come

1542
01:13:11,949 --> 01:13:18,250
into and out of the working set

1543
01:13:14,619 --> 01:13:21,220
effectively that means that it's pretty

1544
01:13:18,250 --> 01:13:25,840
free it's not 100% free but it's pretty

1545
01:13:21,220 --> 01:13:28,800
free for us to say that light probes

1546
01:13:25,840 --> 01:13:32,650
just live in the lighting system and

1547
01:13:28,800 --> 01:13:36,070
they are allocated out to entities on an

1548
01:13:32,649 --> 01:13:37,689
as-needed basis right and so when an

1549
01:13:36,069 --> 01:13:40,029
entity comes into the working set if

1550
01:13:37,689 --> 01:13:42,579
it's an if it's a light probe it just

1551
01:13:40,029 --> 01:13:47,679
gets a slot in the light probe system

1552
01:13:42,579 --> 01:13:49,930
and when it gets removed it just loses

1553
01:13:47,680 --> 01:13:52,360
that slot and that's kind of the end of

1554
01:13:49,930 --> 01:13:53,920
it the reason that I think that system

1555
01:13:52,359 --> 01:13:55,779
makes a lot more sense than what we were

1556
01:13:53,920 --> 01:13:58,180
doing before is there's a tremendous

1557
01:13:55,779 --> 01:14:00,369
amount of unnecessary work going on

1558
01:13:58,180 --> 01:14:01,840
right now where we're copying these

1559
01:14:00,369 --> 01:14:03,970
lighting informations

1560
01:14:01,840 --> 01:14:06,579
into and out of the system for no reason

1561
01:14:03,970 --> 01:14:11,050
we could do exactly the same thing with

1562
01:14:06,579 --> 01:14:13,029
the light boxes as well right meaning we

1563
01:14:11,050 --> 01:14:17,980
don't really need to do what we're doing

1564
01:14:13,029 --> 01:14:20,139
right now where we are every frame

1565
01:14:17,979 --> 01:14:22,209
pushing down all of the boxes that are

1566
01:14:20,140 --> 01:14:24,850
involved because what we can do instead

1567
01:14:22,210 --> 01:14:26,680
is just anytime something that is a

1568
01:14:24,850 --> 01:14:28,030
reflector comes into the system we put

1569
01:14:26,680 --> 01:14:29,530
it into the lighting system and anytime

1570
01:14:28,029 --> 01:14:31,659
it goes out of the system we take it out

1571
01:14:29,529 --> 01:14:36,550
and nobody needs to copy anything any

1572
01:14:31,659 --> 01:14:39,250
other time right so treating the

1573
01:14:36,550 --> 01:14:41,980
lighting system as another free list

1574
01:14:39,250 --> 01:14:44,489
effectively which is just a thing that

1575
01:14:41,979 --> 01:14:46,479
allocates out lighting resources to

1576
01:14:44,489 --> 01:14:49,989
entities as they come in and out of the

1577
01:14:46,479 --> 01:14:54,129
working set seems to me to be a smarter

1578
01:14:49,989 --> 01:14:56,309
way to do it than what we were doing

1579
01:14:54,130 --> 01:14:56,310
before

1580
01:15:02,229 --> 01:15:09,609
I mean correct me if I'm wrong but that

1581
01:15:07,659 --> 01:15:25,960
just seems like it saves a heck of a lot

1582
01:15:09,609 --> 01:15:28,929
of work that just that just seems like

1583
01:15:25,960 --> 01:15:32,340
such a much better idea to me than what

1584
01:15:28,929 --> 01:15:32,340
we were doing which seems dumb

1585
01:15:47,779 --> 01:15:51,979
I'm not sure I want to start doing that

1586
01:15:50,180 --> 01:15:53,060
right now but I'm definitely I'm gonna

1587
01:15:51,979 --> 01:16:39,139
say go ahead and say that's almost

1588
01:15:53,060 --> 01:16:42,920
definitely what do I do now for for

1589
01:16:39,140 --> 01:16:44,450
light probe probes themselves I could

1590
01:16:42,920 --> 01:16:46,940
see an argument being made for just

1591
01:16:44,449 --> 01:16:50,269
saying look the position of the light

1592
01:16:46,939 --> 01:16:52,009
probes might change every frame I mean

1593
01:16:50,270 --> 01:16:52,550
they can move around who knows what

1594
01:16:52,010 --> 01:16:55,010
they're doing

1595
01:16:52,550 --> 01:16:57,590
we might not want to worry too much

1596
01:16:55,010 --> 01:17:00,820
about that so it's possible that the

1597
01:16:57,590 --> 01:17:04,930
light probe positions and like the Box

1598
01:17:00,819 --> 01:17:08,539
positions it's possible that those

1599
01:17:04,930 --> 01:17:11,869
should themselves be recorded every

1600
01:17:08,539 --> 01:17:14,149
frame right so if you look at you know

1601
01:17:11,869 --> 01:17:17,269
the lighting box here where you've got

1602
01:17:14,149 --> 01:17:19,279
the radius and the reference color of

1603
01:17:17,270 --> 01:17:25,100
the emission and the texture index and

1604
01:17:19,279 --> 01:17:28,729
all this stuff right if all of this

1605
01:17:25,100 --> 01:17:35,870
information that we're looking at here

1606
01:17:28,729 --> 01:17:37,549
is updated every frame then you'd want

1607
01:17:35,869 --> 01:17:39,380
to write rewrite it every frame is it

1608
01:17:37,550 --> 01:17:42,079
wouldn't matter but if a lot of that

1609
01:17:39,380 --> 01:17:44,239
stays the same and it's just the p-value

1610
01:17:42,079 --> 01:17:47,569
the changes you know that's I guess

1611
01:17:44,239 --> 01:17:53,420
where the argument comes in it's really

1612
01:17:47,569 --> 01:17:57,159
hard to say though I don't know that's a

1613
01:17:53,420 --> 01:17:57,159
tough call that's a tough call

1614
01:17:57,390 --> 01:18:03,250
that's DEFCON what I will say is that

1615
01:18:01,149 --> 01:18:04,689
light probes this color value here

1616
01:18:03,250 --> 01:18:06,819
should almost certainly be stored

1617
01:18:04,689 --> 01:18:12,039
stabili and it should be stored probably

1618
01:18:06,819 --> 01:18:13,779
outside in a table in the lighting

1619
01:18:12,039 --> 01:18:15,609
system and then when you allocate light

1620
01:18:13,779 --> 01:18:18,250
probes you allocate their indices off

1621
01:18:15,609 --> 01:18:20,559
and you write their p-values in as part

1622
01:18:18,250 --> 01:18:23,159
of the process so I do think that light

1623
01:18:20,560 --> 01:18:30,240
probes want to be stable assigned boxes

1624
01:18:23,159 --> 01:18:30,239
I'm just not sure i I just don't know

1625
01:18:39,658 --> 01:18:43,920
yeah I just don't know so the other

1626
01:18:42,420 --> 01:18:45,359
thing that I think we need to take into

1627
01:18:43,920 --> 01:18:51,690
account here is we're not using the

1628
01:18:45,359 --> 01:18:55,079
emission value right now and we're

1629
01:18:51,689 --> 01:18:58,948
probably gonna need to so the emission

1630
01:18:55,079 --> 01:19:00,719
value the way that we get lights into

1631
01:18:58,948 --> 01:19:02,669
the system is having a non zero emission

1632
01:19:00,719 --> 01:19:04,230
value on a lighting box and so maybe

1633
01:19:02,670 --> 01:19:06,810
that's another thing I'll do right now

1634
01:19:04,229 --> 01:19:09,979
before before we forget so if you look

1635
01:19:06,810 --> 01:19:13,800
at the way our lighting kit works right

1636
01:19:09,979 --> 01:19:16,049
where's that value here there it is so

1637
01:19:13,800 --> 01:19:18,360
if you look at way this works you've got

1638
01:19:16,050 --> 01:19:21,150
a rough color and that's how stuff is

1639
01:19:18,359 --> 01:19:28,439
reflected off the surface but we also

1640
01:19:21,149 --> 01:19:30,359
probably need here an emission value and

1641
01:19:28,439 --> 01:19:33,059
the reason we need an emission value is

1642
01:19:30,359 --> 01:19:34,679
for actual lights so reflections one

1643
01:19:33,060 --> 01:19:36,179
thing but we need to actually I'll put

1644
01:19:34,679 --> 01:19:40,350
things that emit light into the system

1645
01:19:36,179 --> 01:19:45,329
and so in this equation that we computed

1646
01:19:40,350 --> 01:19:48,300
before for the lighting here mmm where

1647
01:19:45,329 --> 01:19:50,460
are you there you are nope there you are

1648
01:19:48,300 --> 01:19:53,130
so in this equation where we computed

1649
01:19:50,460 --> 01:19:55,109
the lighting here you can see that like

1650
01:19:53,130 --> 01:19:57,300
this code doesn't allow you to ever get

1651
01:19:55,109 --> 01:19:59,399
light into the system the only light

1652
01:19:57,300 --> 01:20:02,279
ever comes from the probes since probes

1653
01:19:59,399 --> 01:20:06,988
themselves don't you MIT light what do

1654
01:20:02,279 --> 01:20:08,819
we do right so in order to emit light

1655
01:20:06,988 --> 01:20:10,109
into the system we do need an emission

1656
01:20:08,819 --> 01:20:13,829
value to come back from our raycast

1657
01:20:10,109 --> 01:20:16,289
results and so when we take this this

1658
01:20:13,829 --> 01:20:18,600
transcript ups here in addition to the

1659
01:20:16,289 --> 01:20:21,269
light that gets reflected we also need

1660
01:20:18,600 --> 01:20:29,909
to add the light that is emitted right

1661
01:20:21,270 --> 01:20:33,270
so we would need here to take that

1662
01:20:29,908 --> 01:20:36,269
emission value and multiply that by the

1663
01:20:33,270 --> 01:20:43,110
sample ref color as an addition to the

1664
01:20:36,270 --> 01:20:45,320
system right hopefully that makes some

1665
01:20:43,109 --> 01:20:45,319
sense

1666
01:20:46,409 --> 01:20:54,599
and if we wanted to I guess you could do

1667
01:20:51,560 --> 01:20:58,350
prior to the Hadamard do the addition on

1668
01:20:54,600 --> 01:21:00,960
the inside now cuz the fall off yeah so

1669
01:20:58,350 --> 01:21:02,550
yeah so I think you probably want to

1670
01:21:00,960 --> 01:21:04,319
look roughly like that right and that's

1671
01:21:02,550 --> 01:21:06,239
how your missive lighting gets added in

1672
01:21:04,319 --> 01:21:09,869
there so that just means that the

1673
01:21:06,239 --> 01:21:12,029
raycast here needs to remember this

1674
01:21:09,869 --> 01:21:16,859
which is annoying because it does add

1675
01:21:12,029 --> 01:21:18,750
one more thing that needs to get

1676
01:21:16,859 --> 01:21:20,880
remembered but it's not the end of the

1677
01:21:18,750 --> 01:21:21,479
world it's a pretty cheap select and

1678
01:21:20,880 --> 01:21:26,250
that's it

1679
01:21:21,479 --> 01:21:41,609
right so the hit omission here just

1680
01:21:26,250 --> 01:21:42,899
looks like this okay so that allows us

1681
01:21:41,609 --> 01:21:52,139
to record that piece of information

1682
01:21:42,899 --> 01:21:55,460
which we definitely do want yeah it's

1683
01:21:52,140 --> 01:21:55,460
not it's not a v3

1684
01:22:08,840 --> 01:22:13,500
so did we not have a way of getting

1685
01:22:11,100 --> 01:22:16,110
components of f3 twos that we must

1686
01:22:13,500 --> 01:22:27,949
so you can see us doing it here I guess

1687
01:22:16,109 --> 01:22:27,949
we were just meant to do this I suppose

1688
01:22:36,699 --> 01:22:43,579
actually sure what we were supposed to

1689
01:22:38,600 --> 01:22:49,670
do here oh it's just the element not a

1690
01:22:43,579 --> 01:22:54,170
great name is scheme there past me so we

1691
01:22:49,670 --> 01:22:55,579
inside the point count thing here we're

1692
01:22:54,170 --> 01:22:58,399
back to where we were just looking at

1693
01:22:55,579 --> 01:23:07,699
these basic changes we needed for output

1694
01:22:58,399 --> 01:23:11,299
lighting points right we just look at if

1695
01:23:07,699 --> 01:23:20,750
this stuff this isn't how we're gonna do

1696
01:23:11,300 --> 01:23:21,890
this stuff anymore we don't want to do

1697
01:23:20,750 --> 01:23:24,649
any of it we don't want to do any of

1698
01:23:21,890 --> 01:23:27,410
this stuff so I'm pretty sure we can

1699
01:23:24,649 --> 01:23:34,519
just kind of nuke this code it's it's

1700
01:23:27,409 --> 01:23:42,649
not what we want at all so I'm gonna go

1701
01:23:34,520 --> 01:23:44,630
ahead and do that because we're gonna

1702
01:23:42,649 --> 01:23:50,569
want to output our voxel and our light

1703
01:23:44,630 --> 01:23:53,800
samples and that sort of stuff let me

1704
01:23:50,569 --> 01:23:53,799
see what else we got here for errors

1705
01:24:01,010 --> 01:24:06,690
so I think I'm just gonna leave it like

1706
01:24:02,969 --> 01:24:08,310
that for now and I'm gonna go ahead and

1707
01:24:06,689 --> 01:24:10,859
go to Q&amp;A cuz I think I don't want to

1708
01:24:08,310 --> 01:24:13,260
start on anything else now I want to

1709
01:24:10,859 --> 01:24:15,329
kind of leave it till next time because

1710
01:24:13,260 --> 01:24:17,310
now we're effectively doing everything

1711
01:24:15,329 --> 01:24:20,219
and we just want to start doing the

1712
01:24:17,310 --> 01:24:25,429
plumbing of moving those points in to

1713
01:24:20,219 --> 01:24:25,429
the system right and going from there

1714
01:24:27,319 --> 01:24:30,408
all right

1715
01:24:44,649 --> 01:24:53,709
I may also pop over now people wanted me

1716
01:24:48,038 --> 01:25:00,179
to fix these problems I added a very

1717
01:24:53,708 --> 01:25:00,179
helpful comment here so the problem is

1718
01:25:04,889 --> 01:25:12,269
type names being reused as field names

1719
01:25:07,479 --> 01:25:12,269
here so I guess in handmade types that H

1720
01:25:13,948 --> 01:25:27,488
I'll just take a look at whether that's

1721
01:25:17,979 --> 01:25:28,929
from 286 I really don't like having to

1722
01:25:27,488 --> 01:25:32,198
do this I think this is an absolutely

1723
01:25:28,929 --> 01:25:34,359
ridiculous thing I would like to

1724
01:25:32,198 --> 01:25:36,908
personally say that I think each and

1725
01:25:34,359 --> 01:25:39,518
every person who approved this changed

1726
01:25:36,908 --> 01:25:46,868
the C++ back should never program our

1727
01:25:39,519 --> 01:25:48,519
program ever again or if they do they

1728
01:25:46,868 --> 01:25:53,828
should not do it in a way that can ever

1729
01:25:48,519 --> 01:25:56,590
affect anyone else's code because they

1730
01:25:53,828 --> 01:26:01,628
just so very clearly have no idea what

1731
01:25:56,590 --> 01:26:04,119
they're doing I mean there should be a

1732
01:26:01,628 --> 01:26:07,118
path to redemption I suppose so if they

1733
01:26:04,118 --> 01:26:09,368
can explain clearly and lucidly why this

1734
01:26:07,118 --> 01:26:11,198
is an incredibly stupid idea that should

1735
01:26:09,368 --> 01:26:15,868
never have been done then they can

1736
01:26:11,198 --> 01:26:15,868
program again but until then you're out

1737
01:26:17,908 --> 01:26:21,268
to that line

1738
01:26:22,750 --> 01:26:50,199
alright so in the tokenizer that was 148

1739
01:26:35,029 --> 01:26:50,199
there now I get to change all of these

1740
01:27:09,000 --> 01:27:16,979
I really can't stress enough how anyone

1741
01:27:15,779 --> 01:27:18,479
who makes a decision like this should

1742
01:27:16,979 --> 01:27:23,339
never be allowed to design a language

1743
01:27:18,479 --> 01:27:25,769
it's nuts it's like such a case of the

1744
01:27:23,340 --> 01:27:32,489
inmates running the asylum right it's

1745
01:27:25,770 --> 01:27:36,300
like it is absolutely absurd it is the

1746
01:27:32,489 --> 01:27:39,779
kind of decision that is so incredibly

1747
01:27:36,300 --> 01:27:41,730
bad that you just have to wonder why

1748
01:27:39,779 --> 01:27:45,179
anyone would ever think it was a good

1749
01:27:41,729 --> 01:27:46,589
idea maybe if you were like only

1750
01:27:45,180 --> 01:27:47,400
programmed for a year or two or

1751
01:27:46,590 --> 01:27:49,110
something right

1752
01:27:47,399 --> 01:27:55,139
because I'm sure I thought all kinds of

1753
01:27:49,109 --> 01:27:56,549
stupid stuff when I was nine right but

1754
01:27:55,140 --> 01:27:58,470
man if you're at the point where you're

1755
01:27:56,550 --> 01:28:04,529
actually deciding how a language works

1756
01:27:58,470 --> 01:28:08,420
this is not acceptable not acceptable at

1757
01:28:04,529 --> 01:28:08,420
all what's the other one in game editor

1758
01:28:09,949 --> 01:28:14,989
somewhere in here a line point at it

1759
01:28:24,408 --> 01:28:52,369
I guess I would classify this decision

1760
01:28:49,939 --> 01:28:54,919
into the category of extreme arrogance

1761
01:28:52,369 --> 01:28:57,859
right so if you're working on a language

1762
01:28:54,920 --> 01:28:59,300
spec and you go you know what here's a

1763
01:28:57,859 --> 01:29:02,479
piece of code that would work just fine

1764
01:28:59,300 --> 01:29:04,699
there's no reason the compiler can't

1765
01:29:02,479 --> 01:29:08,448
generate 100% correct

1766
01:29:04,698 --> 01:29:10,638
unambiguous code for this but you then

1767
01:29:08,448 --> 01:29:14,210
go ahead and disallow it all you're

1768
01:29:10,639 --> 01:29:16,579
doing is saying hi I'm so arrogant that

1769
01:29:14,210 --> 01:29:18,590
only the way that I think programs

1770
01:29:16,579 --> 01:29:20,569
should be written is the Ray that they

1771
01:29:18,590 --> 01:29:23,569
can be written at all in my language

1772
01:29:20,569 --> 01:29:26,149
right and I have no idea how you get to

1773
01:29:23,569 --> 01:29:28,609
that point where you're like this would

1774
01:29:26,149 --> 01:29:31,279
have worked and we went out of our way

1775
01:29:28,609 --> 01:29:33,589
to tell the compiler to not generate the

1776
01:29:31,279 --> 01:29:35,119
working code because heaven forfend

1777
01:29:33,590 --> 01:29:36,920
someone should do something in our

1778
01:29:35,119 --> 01:29:39,800
language that we thought was just a

1779
01:29:36,920 --> 01:29:41,060
little bit weird probably because we

1780
01:29:39,800 --> 01:29:44,329
don't know how to program and so we

1781
01:29:41,060 --> 01:29:48,820
don't actually know what constitutes a

1782
01:29:44,329 --> 01:29:48,819
good one all right

1783
01:30:15,189 --> 01:30:19,780
and though it's not about undefined

1784
01:30:17,168 --> 01:30:21,488
behavior it's about diagnostic error

1785
01:30:19,779 --> 01:30:27,788
messages undefined behavior is also

1786
01:30:21,488 --> 01:30:29,408
completely unacceptable there should

1787
01:30:27,788 --> 01:30:31,418
never be anything in a spec that says

1788
01:30:29,408 --> 01:30:33,339
the behavior is undefined you should

1789
01:30:31,418 --> 01:30:40,149
define the behavior using the

1790
01:30:33,340 --> 01:30:42,840
appropriate bounds right just say the

1791
01:30:40,149 --> 01:30:46,118
compiler should generate the most

1792
01:30:42,840 --> 01:30:48,510
logical reasonable least surprising

1793
01:30:46,118 --> 01:30:51,359
thing that it can on this platform

1794
01:30:48,510 --> 01:30:53,949
that's all you need to say

1795
01:30:51,359 --> 01:30:57,098
just don't say surgery place for

1796
01:30:53,948 --> 01:30:59,649
undefined behavior and say the compiler

1797
01:30:57,099 --> 01:31:02,019
is supposed to do its best to generate

1798
01:30:59,649 --> 01:31:05,738
something like this for the platform

1799
01:31:02,019 --> 01:31:08,579
that in question that's all you need to

1800
01:31:05,738 --> 01:31:11,109
say and then everything works just fine

1801
01:31:08,578 --> 01:31:13,538
never say it's undefined behavior

1802
01:31:11,109 --> 01:31:15,038
because that is ridiculous why would you

1803
01:31:13,538 --> 01:31:18,418
ever want to say that there's no

1804
01:31:15,038 --> 01:31:22,349
constraints on the behavior of the thing

1805
01:31:18,418 --> 01:31:22,349
it's ridiculous

1806
01:31:54,420 --> 01:31:59,760
so now questions it looks like so I

1807
01:31:56,739 --> 01:31:59,760
think we're good to go right

1808
01:32:09,550 --> 01:32:15,340
where's the little where's that little

1809
01:32:11,948 --> 01:32:16,598
twitch window I have always now try to

1810
01:32:15,340 --> 01:32:19,480
check to see if there's anyone we can

1811
01:32:16,599 --> 01:32:23,349
raid after we're done on handmade hero

1812
01:32:19,479 --> 01:32:25,689
and usually the answer is that nobody is

1813
01:32:23,349 --> 01:32:34,809
available to raid of the people that I

1814
01:32:25,689 --> 01:32:50,379
would raid but but it's always worth a

1815
01:32:34,809 --> 01:32:54,300
quick little check right where is the

1816
01:32:50,380 --> 01:32:54,300
thing that you do with the raids

1817
01:33:06,199 --> 01:33:10,069
so is John live

1818
01:33:19,029 --> 01:33:24,539
No

1819
01:33:21,389 --> 01:33:28,618
nobody's nobody's life there's nobody to

1820
01:33:24,539 --> 01:33:34,039
raid so I guess we can trade anyone

1821
01:33:28,618 --> 01:33:34,039
today again again no one to raid

1822
01:33:40,050 --> 01:33:44,769
Chino's 3 says how do you know if you

1823
01:33:42,458 --> 01:33:48,248
wrote undefined behavior code well in

1824
01:33:44,769 --> 01:33:50,170
C++ the answer is you did it's basically

1825
01:33:48,248 --> 01:33:51,488
impossible to write C++ code that does

1826
01:33:50,170 --> 01:33:54,130
anything useful but doesn't have

1827
01:33:51,488 --> 01:33:56,379
undefined behavior somewhere so the

1828
01:33:54,130 --> 01:33:57,849
answer is you did the question is how do

1829
01:33:56,380 --> 01:34:00,368
you know where in your code you're using

1830
01:33:57,849 --> 01:34:01,929
undefined behavior that question is

1831
01:34:00,368 --> 01:34:03,698
harder right because there's so many

1832
01:34:01,929 --> 01:34:06,929
places in the C++ spec where they just

1833
01:34:03,698 --> 01:34:09,879
said it was undefined behavior that I

1834
01:34:06,929 --> 01:34:10,420
mean I don't know how to tell you how to

1835
01:34:09,880 --> 01:34:15,059
find it

1836
01:34:10,420 --> 01:34:16,989
right that's why it's so bad

1837
01:34:15,059 --> 01:34:18,279
compilers don't even warn you when

1838
01:34:16,988 --> 01:34:25,538
there's none behind defined behavior

1839
01:34:18,279 --> 01:34:26,948
which is interesting right and that's

1840
01:34:25,538 --> 01:34:30,038
part of the ridiculousness I mean like

1841
01:34:26,948 --> 01:34:31,178
for example write a typical way that you

1842
01:34:30,038 --> 01:34:33,458
might see something like undefined

1843
01:34:31,179 --> 01:34:38,189
behavior is suppose you have something

1844
01:34:33,458 --> 01:34:42,519
like I don't know the spec says if you

1845
01:34:38,189 --> 01:34:48,010
overflow a signed integer the result is

1846
01:34:42,519 --> 01:34:51,360
undefined right and so the compiler

1847
01:34:48,010 --> 01:34:54,880
can't really issue a warning because

1848
01:34:51,359 --> 01:34:58,268
everywhere you ever operate on a signed

1849
01:34:54,880 --> 01:35:01,689
integer you might overflow it right so

1850
01:34:58,269 --> 01:35:04,510
the undefined behavior only happens in

1851
01:35:01,689 --> 01:35:06,880
the case where you actually do overflow

1852
01:35:04,510 --> 01:35:08,619
the thing so it would warn you about

1853
01:35:06,880 --> 01:35:10,779
like every addition you ever add

1854
01:35:08,618 --> 01:35:14,738
something to you know so it's pretty

1855
01:35:10,779 --> 01:35:16,868
hard but it just depends on yeah like

1856
01:35:14,738 --> 01:35:19,268
which ones you're trying to find it says

1857
01:35:16,868 --> 01:35:22,328
there's a clang UB sanitizer yeah I mean

1858
01:35:19,269 --> 01:35:25,110
I don't know I've never tried it I don't

1859
01:35:22,328 --> 01:35:25,109
know how well that works

1860
01:35:27,479 --> 01:35:33,189
it probably catches some but the other

1861
01:35:31,479 --> 01:35:35,769
problem too is that undefined behavior

1862
01:35:33,189 --> 01:35:38,679
usually there's a lot of things in C++

1863
01:35:35,769 --> 01:35:40,748
they actually you want to use the quote

1864
01:35:38,679 --> 01:35:42,939
unquote undefined behavior because it

1865
01:35:40,748 --> 01:35:45,279
results in better actual CPU code for

1866
01:35:42,939 --> 01:35:46,389
most compilers on most platforms and so

1867
01:35:45,279 --> 01:35:49,420
again that's one of the really big

1868
01:35:46,389 --> 01:35:51,578
problems with undefined behavior it's

1869
01:35:49,420 --> 01:35:52,899
just it's dumb it's there's never have

1870
01:35:51,578 --> 01:35:54,698
been any I mean

1871
01:35:52,899 --> 01:35:58,000
another way to say it would be if you

1872
01:35:54,698 --> 01:36:00,399
can't put bounds on the behavior of your

1873
01:35:58,000 --> 01:36:02,619
program spec you're not done yet

1874
01:36:00,399 --> 01:36:05,279
your your spec isn't complete if there's

1875
01:36:02,619 --> 01:36:11,319
undefined behavior in it it's not a spec

1876
01:36:05,279 --> 01:36:13,090
it's a goal right undefined behavior

1877
01:36:11,319 --> 01:36:16,509
should never appear in a specification

1878
01:36:13,090 --> 01:36:18,550
you should always have a clear statement

1879
01:36:16,510 --> 01:36:22,000
about what the compiler is supposed to

1880
01:36:18,550 --> 01:36:26,590
be trying to do in all cases and if you

1881
01:36:22,000 --> 01:36:29,289
have to leave room meaning hey these

1882
01:36:26,590 --> 01:36:31,090
different platforms like for example you

1883
01:36:29,289 --> 01:36:32,469
know maybe two different platforms have

1884
01:36:31,090 --> 01:36:35,140
two different ways they handle certain

1885
01:36:32,469 --> 01:36:37,270
floating-point conditions you don't want

1886
01:36:35,140 --> 01:36:38,650
to specify things exactly because then

1887
01:36:37,270 --> 01:36:40,390
you can't generate good code on both

1888
01:36:38,649 --> 01:36:42,789
platforms so you need to leave space

1889
01:36:40,390 --> 01:36:46,000
sometimes and that's great but never

1890
01:36:42,789 --> 01:36:48,908
ever ever ever ever say undefined

1891
01:36:46,000 --> 01:36:51,010
that's absurd every single part of your

1892
01:36:48,908 --> 01:36:56,170
spec can be defined it can just be

1893
01:36:51,010 --> 01:36:58,989
defined to accept a range of possible

1894
01:36:56,170 --> 01:37:01,929
results but define the frigging range

1895
01:36:58,988 --> 01:37:05,589
like say what the space of acceptable

1896
01:37:01,929 --> 01:37:07,750
results could be don't just say we don't

1897
01:37:05,590 --> 01:37:10,140
know because that's absurd and you're

1898
01:37:07,750 --> 01:37:10,140
not done yet

1899
01:37:14,520 --> 01:37:21,520
what's the weirdest macro I don't know

1900
01:37:19,359 --> 01:37:24,069
I've I've never made macros that are

1901
01:37:21,520 --> 01:37:25,810
that weird I mean the ones in handmade

1902
01:37:24,069 --> 01:37:30,488
hero for the debug stuff are the

1903
01:37:25,810 --> 01:37:33,610
weirdest kinds of macros I think I ever

1904
01:37:30,488 --> 01:37:36,069
do they're ones where you have to pass

1905
01:37:33,609 --> 01:37:41,189
like the same argument like through

1906
01:37:36,069 --> 01:37:43,929
three different macros to prevent the C

1907
01:37:41,189 --> 01:37:45,639
string izing and pacing operators from

1908
01:37:43,929 --> 01:37:47,408
like stopping each other from working

1909
01:37:45,640 --> 01:37:49,060
you know what I'm talking about right

1910
01:37:47,408 --> 01:37:50,649
where we have to like generate debug

1911
01:37:49,060 --> 01:37:54,550
names by passing like things through

1912
01:37:50,649 --> 01:37:56,859
three times so that they don't use just

1913
01:37:54,550 --> 01:37:58,360
the actual like if you want like the

1914
01:37:56,859 --> 01:37:59,829
underscore underscore line underscore

1915
01:37:58,359 --> 01:38:01,329
underscore to become a string or

1916
01:37:59,829 --> 01:38:04,300
something you got to pass it through you

1917
01:38:01,329 --> 01:38:05,710
like fold what's the full screen purple

1918
01:38:04,300 --> 01:38:06,628
flash that happens in your editor

1919
01:38:05,710 --> 01:38:20,439
sometimes

1920
01:38:06,628 --> 01:38:24,538
ask Alan I don't know it's just a bug in

1921
01:38:20,439 --> 01:38:24,539
for coder I don't know what the bug is

1922
01:38:37,078 --> 01:38:41,009
have you seen a grand ceaseless air

1923
01:38:38,969 --> 01:38:41,849
explosion audition I have someone sent

1924
01:38:41,010 --> 01:38:46,020
it to me yesterday

1925
01:38:41,849 --> 01:38:51,150
in fact on the stream and it's pretty

1926
01:38:46,020 --> 01:38:53,400
great two of them work and see like

1927
01:38:51,149 --> 01:38:54,868
basically because they use includes but

1928
01:38:53,399 --> 01:38:56,969
I don't know that I really count those

1929
01:38:54,868 --> 01:38:57,839
as much because includes are ambiguous

1930
01:38:56,969 --> 01:38:59,849
anyway

1931
01:38:57,840 --> 01:39:05,969
so although the it would be nicer the

1932
01:38:59,849 --> 01:39:08,190
compiler printed out reasonable answers

1933
01:39:05,969 --> 01:39:13,948
for those things those aren't as bad the

1934
01:39:08,189 --> 01:39:16,408
C++ template ones are hilarious have you

1935
01:39:13,948 --> 01:39:19,428
seen the Grand C++ I'm sorry did you

1936
01:39:16,408 --> 01:39:19,429
enjoy it yes I did

1937
01:39:31,890 --> 01:39:41,579
why is there no one to read John blow

1938
01:39:38,130 --> 01:39:41,579
where are you

1939
01:40:08,739 --> 01:40:14,210
did you enjoy John smackin Smith I was

1940
01:40:11,029 --> 01:40:18,259
actually out at a movie and I have not

1941
01:40:14,210 --> 01:40:20,649
had a chance to watch it yet as I didn't

1942
01:40:18,260 --> 01:40:20,650
see it live

1943
01:40:26,889 --> 01:40:32,109
pragma strip imagine a light probe that

1944
01:40:29,779 --> 01:40:34,998
has no direct visibility to a red wall

1945
01:40:32,109 --> 01:40:36,589
but it could reach it by one indirect

1946
01:40:34,998 --> 01:40:38,538
bounce I don't think the light probe

1947
01:40:36,590 --> 01:40:40,998
will ever get any red contribution from

1948
01:40:38,538 --> 01:40:43,038
that wall no matter how long you iterate

1949
01:40:40,998 --> 01:40:47,809
unless you cast secondary rays from

1950
01:40:43,038 --> 01:40:54,288
surfaces no so that is definitely not

1951
01:40:47,809 --> 01:40:56,840
true let me show you the diagram for

1952
01:40:54,288 --> 01:41:03,498
that just to make it clearer what's

1953
01:40:56,840 --> 01:41:09,469
going on there that is if I actually had

1954
01:41:03,498 --> 01:41:11,328
a drawing program open okay so let's

1955
01:41:09,469 --> 01:41:12,498
just construct the case that is exactly

1956
01:41:11,328 --> 01:41:20,179
the case that you were talking about

1957
01:41:12,498 --> 01:41:24,889
there for clarity so let's talk about

1958
01:41:20,179 --> 01:41:27,618
secondary bounces here all right so

1959
01:41:24,889 --> 01:41:29,359
let's draw the 2d case so it's easier

1960
01:41:27,618 --> 01:41:31,518
for me to draw but obviously it doesn't

1961
01:41:29,359 --> 01:41:34,219
matter it works the same in any number

1962
01:41:31,519 --> 01:41:36,439
of dimensions because rays just go along

1963
01:41:34,219 --> 01:41:37,939
their direction and bounce so let's just

1964
01:41:36,439 --> 01:41:41,389
construct a case where there isn't

1965
01:41:37,939 --> 01:41:44,780
direct visibility in 2d and then we'll

1966
01:41:41,389 --> 01:41:49,099
go from there so you say imagine a light

1967
01:41:44,779 --> 01:41:53,389
probe so let's draw the probe this is

1968
01:41:49,099 --> 01:41:57,139
our probe no direct visibility to a red

1969
01:41:53,389 --> 01:41:59,708
wall so in order to create no direct

1970
01:41:57,139 --> 01:42:02,239
visibility

1971
01:41:59,708 --> 01:42:05,328
I'm gonna have to do something like put

1972
01:42:02,238 --> 01:42:14,618
an obstacle in here right so let's do

1973
01:42:05,328 --> 01:42:18,168
maybe our room is shaped like this right

1974
01:42:14,618 --> 01:42:22,429
and so if I want to I can put a wall

1975
01:42:18,168 --> 01:42:27,788
over here that I can't hit right this

1976
01:42:22,429 --> 01:42:27,788
here could be my red wall

1977
01:42:32,869 --> 01:42:44,599
makes sense okay so the argument is what

1978
01:42:40,579 --> 01:42:46,550
you're saying is that this red wall can

1979
01:42:44,600 --> 01:42:51,050
never contribute to the lighting of this

1980
01:42:46,550 --> 01:42:53,449
probe even though we might argue that it

1981
01:42:51,050 --> 01:42:56,449
should and the reason that we would

1982
01:42:53,449 --> 01:42:59,090
think that it should right is because

1983
01:42:56,449 --> 01:43:02,689
any light that hits this red wall could

1984
01:42:59,090 --> 01:43:05,360
legitimately bounce off this wall right

1985
01:43:02,689 --> 01:43:09,979
let's say we've got a white wall here or

1986
01:43:05,359 --> 01:43:12,799
at least a gray wall so it's it's a wall

1987
01:43:09,979 --> 01:43:14,929
that doesn't change the lighting so if

1988
01:43:12,800 --> 01:43:17,659
we have a white wall or a gray wall up

1989
01:43:14,930 --> 01:43:22,340
here what we're saying is we know that

1990
01:43:17,659 --> 01:43:27,460
if we were to simulate n bounces we

1991
01:43:22,340 --> 01:43:27,460
could bounce off of this wall here right

1992
01:43:27,939 --> 01:43:36,409
and hit the light probe on an indirect

1993
01:43:32,390 --> 01:43:37,880
bounce so light comes from some light we

1994
01:43:36,409 --> 01:43:39,109
don't care where that is I mean we can

1995
01:43:37,880 --> 01:43:40,699
put the light anywhere it doesn't matter

1996
01:43:39,109 --> 01:43:43,099
but you know if there's a light here or

1997
01:43:40,699 --> 01:43:45,559
something like this right light hits the

1998
01:43:43,100 --> 01:43:48,560
red wall it bounces off the red wall

1999
01:43:45,560 --> 01:43:50,750
hits the white wall or gray wall bounces

2000
01:43:48,560 --> 01:43:53,539
off that and then hits the probe and

2001
01:43:50,750 --> 01:43:56,149
your argument is our system won't ever

2002
01:43:53,539 --> 01:43:58,729
pick this up and I believe the reason

2003
01:43:56,149 --> 01:44:02,059
you're saying that is because we just we

2004
01:43:58,729 --> 01:44:04,699
only transmit light back like this along

2005
01:44:02,060 --> 01:44:09,110
this ray right it's not a fair statement

2006
01:44:04,699 --> 01:44:12,849
of what you were arguing there this is

2007
01:44:09,109 --> 01:44:12,849
the the transfer

2008
01:44:15,408 --> 01:44:24,168
makes sense okay so the question is is

2009
01:44:20,988 --> 01:44:26,208
that actually true meaning is it the

2010
01:44:24,168 --> 01:44:28,248
case that since we only transfer along

2011
01:44:26,208 --> 01:44:32,868
this ray we can never actually get this

2012
01:44:28,248 --> 01:44:35,448
value back and again my argument is no I

2013
01:44:32,868 --> 01:44:40,188
would say that that's not the case now

2014
01:44:35,448 --> 01:44:42,168
there is one possible way this maybe

2015
01:44:40,189 --> 01:44:44,239
could be the case and that's if you

2016
01:44:42,168 --> 01:44:48,679
don't put enough light probes in your

2017
01:44:44,238 --> 01:44:51,078
system right and then that would be true

2018
01:44:48,679 --> 01:44:52,639
but that's gonna be true of everything

2019
01:44:51,078 --> 01:44:56,179
meaning if you don't put enough light

2020
01:44:52,639 --> 01:44:58,458
probes in the system then your lighting

2021
01:44:56,179 --> 01:45:01,219
is not gonna be accurate period

2022
01:44:58,458 --> 01:45:03,559
right you need a dense enough sprinkling

2023
01:45:01,219 --> 01:45:05,628
of light probes in the system in order

2024
01:45:03,559 --> 01:45:07,099
to capture accurate lighting period so I

2025
01:45:05,628 --> 01:45:09,559
don't really think that's a particularly

2026
01:45:07,099 --> 01:45:11,929
good case get out so let's assume a

2027
01:45:09,559 --> 01:45:14,029
reasonable set of light probes in this

2028
01:45:11,929 --> 01:45:15,618
area right so I don't know how many

2029
01:45:14,029 --> 01:45:17,090
light probes we would have necessarily

2030
01:45:15,618 --> 01:45:19,248
but you know they're probably scattered

2031
01:45:17,090 --> 01:45:23,119
throughout the environment something at

2032
01:45:19,248 --> 01:45:24,918
least like this right so each one of

2033
01:45:23,118 --> 01:45:26,538
these points would be a light probe and

2034
01:45:24,918 --> 01:45:27,738
we probably out even more in 3d right

2035
01:45:26,538 --> 01:45:32,108
because they'd be volume but you've got

2036
01:45:27,738 --> 01:45:36,009
light probes sprinkled around right okay

2037
01:45:32,109 --> 01:45:40,729
so what actually happens in this system

2038
01:45:36,010 --> 01:45:42,859
remember is every frame each of these

2039
01:45:40,729 --> 01:45:44,929
light probes will send out some number

2040
01:45:42,859 --> 01:45:46,669
of rays at the moment the number is 18

2041
01:45:44,929 --> 01:45:48,408
but we can sort of tweak it for

2042
01:45:46,668 --> 01:45:53,238
performance so we're gonna this number

2043
01:45:48,408 --> 01:45:57,948
will typically be as many as we can

2044
01:45:53,238 --> 01:46:00,049
afford right so this number is 18 right

2045
01:45:57,948 --> 01:46:03,378
now it may be it'll only be six maybe

2046
01:46:00,050 --> 01:46:06,378
it'll be twelve it's gonna be set to the

2047
01:46:03,378 --> 01:46:09,618
highest number that we can run and not

2048
01:46:06,378 --> 01:46:11,448
slow down the game right so we don't

2049
01:46:09,618 --> 01:46:14,748
know what this will be but it will be

2050
01:46:11,448 --> 01:46:16,848
something and so each one of these light

2051
01:46:14,748 --> 01:46:19,248
probes will send out that many per frame

2052
01:46:16,849 --> 01:46:22,458
what that means is on the same frame

2053
01:46:19,248 --> 01:46:25,158
that this probe was sending out this

2054
01:46:22,458 --> 01:46:27,469
particular ray here to hit this hit it

2055
01:46:25,158 --> 01:46:29,248
was also sending out several other ones

2056
01:46:27,469 --> 01:46:31,349
right and hitting other places

2057
01:46:29,248 --> 01:46:32,578
but we all agree because the

2058
01:46:31,349 --> 01:46:35,369
construction of your argument

2059
01:46:32,578 --> 01:46:40,368
presupposes it we all agree that it will

2060
01:46:35,368 --> 01:46:42,538
never hit this wall right because I

2061
01:46:40,368 --> 01:46:45,179
specifically placed an obstacle that

2062
01:46:42,538 --> 01:46:47,340
shadows that wall completely so we know

2063
01:46:45,179 --> 01:46:49,979
that it will only be grabbing from

2064
01:46:47,340 --> 01:46:51,748
around here so now the question is can

2065
01:46:49,979 --> 01:46:53,789
it ever actually receive light from the

2066
01:46:51,748 --> 01:46:56,399
red wall well remember on the frame

2067
01:46:53,788 --> 01:46:59,309
where this particular probe sent out all

2068
01:46:56,399 --> 01:47:02,098
of those feelers all of these probes

2069
01:46:59,309 --> 01:47:05,340
also sent out their own set of 18

2070
01:47:02,099 --> 01:47:09,510
feelers right or six or twelve however

2071
01:47:05,340 --> 01:47:13,889
many what that means is this probe this

2072
01:47:09,510 --> 01:47:17,190
probe this probe probably this probe and

2073
01:47:13,889 --> 01:47:20,760
maybe sometimes this probe all hit the

2074
01:47:17,189 --> 01:47:22,768
red wall correct because this one

2075
01:47:20,760 --> 01:47:23,309
probably sent something out in that

2076
01:47:22,769 --> 01:47:25,969
direction

2077
01:47:23,309 --> 01:47:29,340
every so often maybe not every frame

2078
01:47:25,969 --> 01:47:31,380
this one very likely did this one almost

2079
01:47:29,340 --> 01:47:33,239
certainly did because anything in that

2080
01:47:31,380 --> 01:47:35,969
direction will hit it same with this one

2081
01:47:33,238 --> 01:47:42,808
in this one so we know that on any given

2082
01:47:35,969 --> 01:47:50,578
frame probably three probes at least hit

2083
01:47:42,809 --> 01:47:53,248
the red wall right so those three probes

2084
01:47:50,578 --> 01:47:57,658
all picked up light from the red wall on

2085
01:47:53,248 --> 01:47:59,639
that frame make sense and which probes

2086
01:47:57,658 --> 01:48:02,368
were they well they were these two

2087
01:47:59,639 --> 01:48:06,300
probes which probably don't matter in

2088
01:48:02,368 --> 01:48:09,538
our case and these three probes which

2089
01:48:06,300 --> 01:48:11,969
definitely do right this one

2090
01:48:09,538 --> 01:48:16,050
occasionally this one fairly frequently

2091
01:48:11,969 --> 01:48:20,639
this one almost always when this light

2092
01:48:16,050 --> 01:48:24,179
probe hits anywhere on this wall it will

2093
01:48:20,639 --> 01:48:27,239
definitely then sample lighting from

2094
01:48:24,179 --> 01:48:32,429
probes which have hit the red wall on

2095
01:48:27,238 --> 01:48:34,859
the previous frame right it will then

2096
01:48:32,429 --> 01:48:36,840
gather that light from those probes

2097
01:48:34,859 --> 01:48:39,538
which includes the contribution from the

2098
01:48:36,840 --> 01:48:44,119
red wall leading this probe to now have

2099
01:48:39,538 --> 01:48:44,118
some red wall contribution

2100
01:48:44,180 --> 01:48:53,610
makes sense so the answer is in one

2101
01:48:49,920 --> 01:49:02,520
frame can you get light from the red

2102
01:48:53,609 --> 01:49:05,219
wall no in two frames can you yes now in

2103
01:49:02,520 --> 01:49:09,090
our system we average over at least 60

2104
01:49:05,220 --> 01:49:10,470
frames I think so as long as that number

2105
01:49:09,090 --> 01:49:12,300
doesn't drop to two which would be

2106
01:49:10,470 --> 01:49:13,829
ridiculous I mean we may drop it down to

2107
01:49:12,300 --> 01:49:16,770
something more like ten in the future if

2108
01:49:13,829 --> 01:49:18,689
our legs really good but we average over

2109
01:49:16,770 --> 01:49:20,820
at least ten frames and we always use

2110
01:49:18,689 --> 01:49:23,909
the lighting from the previous frame so

2111
01:49:20,819 --> 01:49:25,979
for secondary bounces like this this is

2112
01:49:23,909 --> 01:49:30,000
sufficient but the answer is the number

2113
01:49:25,979 --> 01:49:32,879
of frames you average over is how many

2114
01:49:30,000 --> 01:49:35,039
secondary bounces you get so actually

2115
01:49:32,880 --> 01:49:38,340
over 60 frames we're actually doing what

2116
01:49:35,039 --> 01:49:41,010
amounts to 60 bounce lighting now that

2117
01:49:38,340 --> 01:49:42,810
60th bounce is a fraction of the

2118
01:49:41,010 --> 01:49:44,550
contribution right it's not happening

2119
01:49:42,810 --> 01:49:47,250
very often so it's kind of meaningless

2120
01:49:44,550 --> 01:49:49,350
to say that but certainly within those

2121
01:49:47,250 --> 01:49:51,000
first few frames three frames four

2122
01:49:49,350 --> 01:49:52,950
frames five frames we're definitely

2123
01:49:51,000 --> 01:49:57,390
taking into account all those bounces at

2124
01:49:52,949 --> 01:50:10,319
a relatively high shading rate right uh

2125
01:49:57,390 --> 01:50:11,430
was that convincing or not okay awesome

2126
01:50:10,319 --> 01:50:15,329
sounds like that

2127
01:50:11,430 --> 01:50:19,170
that was that was convincing and yeah

2128
01:50:15,329 --> 01:50:21,119
and again this is by design when you're

2129
01:50:19,170 --> 01:50:23,819
doing real-time lighting you don't

2130
01:50:21,119 --> 01:50:27,510
usually have the kind of computation or

2131
01:50:23,819 --> 01:50:33,590
power necessary to do multi bounce

2132
01:50:27,510 --> 01:50:33,590
diffuse lighting inside one frame right

2133
01:50:36,590 --> 01:50:41,220
it would be nice if you did but you

2134
01:50:39,149 --> 01:50:44,339
typically don't and so what you try to

2135
01:50:41,220 --> 01:50:47,909
do is specular like highly reflective

2136
01:50:44,340 --> 01:50:52,500
surfaces those don't Rose won't require

2137
01:50:47,909 --> 01:50:55,319
spreading of bounces right so what I

2138
01:50:52,500 --> 01:50:57,630
would say is specular lighting you try

2139
01:50:55,319 --> 01:50:59,429
to do within one frame because delayed

2140
01:50:57,630 --> 01:51:00,989
reflections wouldn't look very good so

2141
01:50:59,430 --> 01:51:02,789
you try to do specular inside one frame

2142
01:51:00,989 --> 01:51:04,739
diffuse lighting where things are

2143
01:51:02,789 --> 01:51:06,060
scattered a lot you never try to do

2144
01:51:04,739 --> 01:51:09,510
those all in one frame so typically what

2145
01:51:06,060 --> 01:51:11,460
you want to do is design a solution that

2146
01:51:09,510 --> 01:51:14,460
allows you to propagate that light over

2147
01:51:11,460 --> 01:51:16,560
several frames and because diffuse

2148
01:51:14,460 --> 01:51:20,460
lighting is exactly that it's diffuse

2149
01:51:16,560 --> 01:51:23,370
it's hard to see specific changes

2150
01:51:20,460 --> 01:51:25,260
they're gradual anyway so it tends to

2151
01:51:23,369 --> 01:51:26,970
not be very objectionable in terms of

2152
01:51:25,260 --> 01:51:30,239
artifacts because diffuse lighting can't

2153
01:51:26,970 --> 01:51:33,000
change that rapidly anyway right so the

2154
01:51:30,239 --> 01:51:34,079
worst case for you really is when you're

2155
01:51:33,000 --> 01:51:36,680
doing that kind of frame by frame

2156
01:51:34,079 --> 01:51:39,689
propagation is if you turn off a light

2157
01:51:36,680 --> 01:51:42,300
then the propagation of that light it

2158
01:51:39,689 --> 01:51:44,849
will it will kind of fade out rather

2159
01:51:42,300 --> 01:51:47,039
than instantly going out that's about

2160
01:51:44,850 --> 01:51:48,600
the worst case for diffuse lighting that

2161
01:51:47,039 --> 01:51:51,890
you're gonna see and and that does not

2162
01:51:48,600 --> 01:51:51,890
bother me in the least right

2163
01:52:04,899 --> 01:52:10,599
so but also I mean I should say separate

2164
01:52:07,720 --> 01:52:12,699
than that that's also one good reason

2165
01:52:10,600 --> 01:52:15,550
why the faster you make your lighting

2166
01:52:12,699 --> 01:52:18,699
the better because averaging over you

2167
01:52:15,550 --> 01:52:20,529
know 60 frames or something it does mean

2168
01:52:18,699 --> 01:52:22,239
that you can't do like flashing light

2169
01:52:20,529 --> 01:52:24,969
propagation very well or things like

2170
01:52:22,239 --> 01:52:27,189
that as you get that number down if you

2171
01:52:24,970 --> 01:52:29,409
can get it down to eight frames 16

2172
01:52:27,189 --> 01:52:31,269
frames then a flashing light sort of

2173
01:52:29,409 --> 01:52:34,420
does work a little bit it can't flash

2174
01:52:31,270 --> 01:52:37,720
too fast but it could flash like once a

2175
01:52:34,420 --> 01:52:40,210
second and still look okay but so so you

2176
01:52:37,720 --> 01:52:41,949
do want to kind of it's still worth your

2177
01:52:40,210 --> 01:52:44,380
while to try and get it down as low as

2178
01:52:41,949 --> 01:52:46,000
you can and so denoising and getting

2179
01:52:44,380 --> 01:52:49,840
yourself down to a situation where you

2180
01:52:46,000 --> 01:52:52,060
can do eight frames to blend 16 frames

2181
01:52:49,840 --> 01:52:54,489
to blend something like that not 60

2182
01:52:52,060 --> 01:52:56,590
frames to blend 120 frames or blend it

2183
01:52:54,489 --> 01:52:59,579
does help you it does make the game

2184
01:52:56,590 --> 01:53:06,220
better and more interesting to look at

2185
01:52:59,579 --> 01:53:08,649
to get that speed down but again that's

2186
01:53:06,220 --> 01:53:12,070
really all you're up against for these

2187
01:53:08,649 --> 01:53:14,139
sort of longer bounce sort of things is

2188
01:53:12,069 --> 01:53:16,210
just trying to get it down for like so

2189
01:53:14,140 --> 01:53:17,950
that lighting changes as lights move or

2190
01:53:16,210 --> 01:53:21,090
turn on and off you just trying to get

2191
01:53:17,949 --> 01:53:21,090
some of the lag out of it

2192
01:53:40,149 --> 01:53:57,799
we all done the questions and yeah for

2193
01:53:56,449 --> 01:54:01,309
the folks on the chat that are talking

2194
01:53:57,800 --> 01:54:05,270
about signed overflows so again like

2195
01:54:01,310 --> 01:54:07,550
undefined behavior there's never an

2196
01:54:05,270 --> 01:54:10,700
excuse for it in my opinion ever but

2197
01:54:07,550 --> 01:54:12,860
this is why I was saying nonspecific

2198
01:54:10,699 --> 01:54:14,989
behavior is still okay and the reason

2199
01:54:12,859 --> 01:54:16,819
for that is because you do need the

2200
01:54:14,989 --> 01:54:19,819
compiler to have flexibility sometimes

2201
01:54:16,819 --> 01:54:22,519
to generate good code and so what you

2202
01:54:19,819 --> 01:54:25,340
want to do is you want to define the

2203
01:54:22,520 --> 01:54:26,870
range of possible answers to be the

2204
01:54:25,340 --> 01:54:29,390
range that is necessary for good

2205
01:54:26,869 --> 01:54:32,510
optimization but you don't want it

2206
01:54:29,390 --> 01:54:34,730
broader than that right so if you don't

2207
01:54:32,510 --> 01:54:37,010
want to specifically say what happens

2208
01:54:34,729 --> 01:54:40,519
when a signed number overflows because

2209
01:54:37,010 --> 01:54:44,000
it may cause problems for optimizing

2210
01:54:40,520 --> 01:54:46,610
compilers that's okay what's not okay is

2211
01:54:44,000 --> 01:54:48,710
just saying it's undefined that's

2212
01:54:46,609 --> 01:54:52,189
totally not okay because at that point

2213
01:54:48,710 --> 01:54:53,869
all programs are basically broken all of

2214
01:54:52,189 --> 01:54:59,479
them that ever add two signed numbers

2215
01:54:53,869 --> 01:55:03,439
together right because who knows right I

2216
01:54:59,479 --> 01:55:05,750
mean you may have needed to check for

2217
01:55:03,439 --> 01:55:07,219
those things I do if statements or you

2218
01:55:05,750 --> 01:55:10,069
wanted to know what was gonna happen you

2219
01:55:07,220 --> 01:55:12,680
can't just say it's undefined everywhere

2220
01:55:10,069 --> 01:55:13,159
say what you need to say and nothing

2221
01:55:12,680 --> 01:55:19,670
more

2222
01:55:13,159 --> 01:55:21,529
right if you need to leave ability for

2223
01:55:19,670 --> 01:55:24,680
that go right ahead and furthermore just

2224
01:55:21,529 --> 01:55:27,259
add a keyword if the person wants to

2225
01:55:24,680 --> 01:55:30,980
know that assigned overflow will wrap

2226
01:55:27,260 --> 01:55:33,170
let them specify that right let them put

2227
01:55:30,979 --> 01:55:37,099
it thing in there that says this signed

2228
01:55:33,170 --> 01:55:41,230
type of signed integer has to wrap mr

2229
01:55:37,100 --> 01:55:43,880
compiler right just do it that way

2230
01:55:41,229 --> 01:55:46,219
there's no excuse for undefined behavior

2231
01:55:43,880 --> 01:55:48,319
never I've never seen one and I don't

2232
01:55:46,220 --> 01:55:49,369
think I ever will you can always do a

2233
01:55:48,319 --> 01:55:51,679
better job than that

2234
01:55:49,368 --> 01:55:53,719
and still get all the same benefits it's

2235
01:55:51,679 --> 01:55:56,239
just lazy and it's wrong it shouldn't

2236
01:55:53,719 --> 01:55:57,498
occur in a spec ever there should never

2237
01:55:56,238 --> 01:56:01,069
be something called undefined behavior

2238
01:55:57,498 --> 01:56:03,769
ever for any reason you can define

2239
01:56:01,069 --> 01:56:07,488
boundaries do that or you can add

2240
01:56:03,769 --> 01:56:09,229
control to the programmer do that but

2241
01:56:07,488 --> 01:56:12,428
never ever ever just say something's

2242
01:56:09,229 --> 01:56:12,429
undefined it's just unacceptable

2243
01:56:19,538 --> 01:56:34,488
alright looks like we're done looks like

2244
01:56:24,408 --> 01:56:41,448
we're done with questions we all we had

2245
01:56:34,488 --> 01:56:44,359
there was some other yes this we got to

2246
01:56:41,448 --> 01:56:47,658
go fix this one to at some point that

2247
01:56:44,359 --> 01:56:53,238
was the other Linux compilation bug

2248
01:56:47,658 --> 01:56:54,288
thing all right thank you everyone for

2249
01:56:53,238 --> 01:56:55,339
joining me Phillips with a hand made

2250
01:56:54,288 --> 01:56:58,219
here I throw a puncher cutting with you

2251
01:56:55,340 --> 01:57:00,559
as always we'll be back next weekend to

2252
01:56:58,219 --> 01:57:01,788
start like actually pushing light

2253
01:57:00,559 --> 01:57:04,489
through the light system now that we've

2254
01:57:01,788 --> 01:57:06,768
sketched out all the code that's just

2255
01:57:04,488 --> 01:57:07,998
it's just bookkeeping now but we want to

2256
01:57:06,769 --> 01:57:10,519
get that bookkeeping correct so we'll

2257
01:57:07,998 --> 01:57:11,538
start on the bookkeeping and that's what

2258
01:57:10,519 --> 01:57:13,429
we'll be able to start debugging and

2259
01:57:11,538 --> 01:57:14,868
testing it and getting to the point

2260
01:57:13,429 --> 01:57:17,958
where we think it's actually propagating

2261
01:57:14,868 --> 01:57:19,398
light correctly and that'll be fine once

2262
01:57:17,958 --> 01:57:20,898
we get that done I think maybe next

2263
01:57:19,399 --> 01:57:23,269
weekend we got a shot at getting that

2264
01:57:20,899 --> 01:57:25,159
stuff all working we may we may not

2265
01:57:23,269 --> 01:57:27,019
depends how many bugs we run into if we

2266
01:57:25,158 --> 01:57:29,238
get all that stuff working next weekend

2267
01:57:27,019 --> 01:57:31,550
that would be great because then we're

2268
01:57:29,238 --> 01:57:34,158
just down to like pushing to the GPU for

2269
01:57:31,550 --> 01:57:40,099
our lighting stuff and that's going to

2270
01:57:34,158 --> 01:57:41,208
be pretty pretty cool right in two weeks

2271
01:57:40,099 --> 01:57:43,340
if the scheduled post onto it

2272
01:57:41,208 --> 01:57:46,269
did I not schedule anything for wait is

2273
01:57:43,340 --> 01:57:46,269
the schedule busted

2274
01:58:09,238 --> 01:58:12,199
Oh weird

2275
01:58:13,929 --> 01:58:27,270
it looks like I forgot two days the 24th

2276
01:58:16,929 --> 01:58:27,270
and 25th hold please is that intentional

2277
01:58:28,229 --> 01:58:33,039
am I gone that weekend or something I

2278
01:58:30,789 --> 01:58:42,569
know is that my vacation and just don't

2279
01:58:33,039 --> 01:58:47,880
know nope

2280
01:58:42,569 --> 01:58:51,340
so that was 100% unintentional the 24th

2281
01:58:47,880 --> 01:58:55,310
at least should have been scheduled the

2282
01:58:51,340 --> 01:58:58,369
25th maybe not

2283
01:58:55,310 --> 01:58:58,369
[Music]

2284
01:59:04,659 --> 01:59:09,358
[Music]

2285
01:59:10,969 --> 01:59:16,380
all right hold please everyone

2286
01:59:13,889 --> 01:59:25,679
well we real-time edit the schedule for

2287
01:59:16,380 --> 01:59:30,538
handmade Hiro I should update that

2288
01:59:25,679 --> 01:59:31,949
because I think that's wrong so I don't

2289
01:59:30,538 --> 01:59:33,179
know why I skipped that I think I was

2290
01:59:31,948 --> 01:59:37,948
just putting it a bunch of dates and

2291
01:59:33,179 --> 01:59:50,760
just for god I guess 20 1908 so it

2292
01:59:37,948 --> 01:59:52,469
should be what the 24th so maybe what

2293
01:59:50,760 --> 01:59:55,979
we'll do cuz I guess I made a mistake

2294
01:59:52,469 --> 01:59:59,309
there maybe next weekend what we can do

2295
01:59:55,979 --> 02:00:02,249
is on the 24th because I do have

2296
01:59:59,309 --> 02:00:04,769
something kind of scheduled on the 25th

2297
02:00:02,248 --> 02:00:15,029
a little bit inconveniently there if I'm

2298
02:00:04,769 --> 02:00:18,510
looking at it so I'm not sure how I want

2299
02:00:15,029 --> 02:00:21,059
to do that exactly but what I might say

2300
02:00:18,510 --> 02:00:24,019
is let's just say the 25th is off but

2301
02:00:21,059 --> 02:00:24,019
the 24th is not

2302
02:00:36,939 --> 02:00:49,509
I'll also note this in the schedule does

2303
02:00:46,819 --> 02:00:49,509
that look better now

2304
02:00:50,529 --> 02:00:58,840
let's take a look

2305
02:00:53,170 --> 02:01:02,630
schedule bot what do you say there we go

2306
02:00:58,840 --> 02:01:04,880
alright so in that cases we will

2307
02:01:02,630 --> 02:01:10,369
probably only have one stream that

2308
02:01:04,880 --> 02:01:13,699
weekend we'll have to decide maybe that

2309
02:01:10,369 --> 02:01:16,069
would be a good time to do the two just

2310
02:01:13,699 --> 02:01:20,300
to explain how skinned mesh skinning

2311
02:01:16,069 --> 02:01:21,739
works maybe since we'll only do one that

2312
02:01:20,300 --> 02:01:24,260
weekend so maybe we'll do have a chat

2313
02:01:21,739 --> 02:01:28,849
maybe we won't I don't know we'll see

2314
02:01:24,260 --> 02:01:31,400
but then we'll resume at any rate August

2315
02:01:28,850 --> 02:01:33,980
31st September 1st at least then we will

2316
02:01:31,399 --> 02:01:38,599
resume doing the lighting plumbing if we

2317
02:01:33,979 --> 02:01:39,859
don't do it next weekend alright anyway

2318
02:01:38,600 --> 02:01:41,180
regardless I hope to see you back here

2319
02:01:39,859 --> 02:01:43,099
next Saturday for whatever we end up

2320
02:01:41,180 --> 02:01:44,480
doing on handmade here until then please

2321
02:01:43,100 --> 02:01:46,670
have fun programming I'll see on the

2322
02:01:44,479 --> 02:01:47,659
internet and as always if you want to

2323
02:01:46,670 --> 02:01:49,100
follow along with the source code at

2324
02:01:47,659 --> 02:01:50,539
home you can always preorder the game on

2325
02:01:49,100 --> 02:01:52,550
handmade here it up or gonna come to the

2326
02:01:50,539 --> 02:01:56,989
source code if you want to play around

2327
02:01:52,550 --> 02:01:59,750
with it until we next meet that's it for

2328
02:01:56,989 --> 02:02:02,409
today I will see everyone back here next

2329
02:01:59,750 --> 02:02:02,409
week take it easy everybody

