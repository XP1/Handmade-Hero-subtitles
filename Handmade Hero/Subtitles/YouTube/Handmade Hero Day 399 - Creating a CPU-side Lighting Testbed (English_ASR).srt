1
00:00:02,480 --> 00:00:06,929
hello everyone and welcome to handmade

2
00:00:05,040 --> 00:00:10,199
hero the show where we code a complete

3
00:00:06,929 --> 00:00:12,480
game live on stream today we're going to

4
00:00:10,199 --> 00:00:14,339
be fussing with lighting seeing what we

5
00:00:12,480 --> 00:00:16,710
can do we're trying to sort of push

6
00:00:14,339 --> 00:00:18,210
forwards into getting some lighting into

7
00:00:16,710 --> 00:00:20,490
the game we're just not sure what that

8
00:00:18,210 --> 00:00:21,810
lighting is going to be like because

9
00:00:20,489 --> 00:00:24,448
lighting is very difficult to do

10
00:00:21,809 --> 00:00:25,500
correctly and in our case it's

11
00:00:24,449 --> 00:00:27,900
impossible to do correctly because I

12
00:00:25,500 --> 00:00:30,689
don't even have 3d models because we are

13
00:00:27,899 --> 00:00:32,159
a 2-d game but we are trying to play

14
00:00:30,689 --> 00:00:34,049
around lighting to see what we can do

15
00:00:32,159 --> 00:00:37,199
that will produce an interesting or

16
00:00:34,049 --> 00:00:40,289
useful effect for us one of the things

17
00:00:37,200 --> 00:00:42,540
that we have been doing is writing

18
00:00:40,289 --> 00:00:44,189
shaders lately and one of the things

19
00:00:42,539 --> 00:00:48,570
that that one thing that kind of

20
00:00:44,189 --> 00:00:49,738
confounds us I'm going to load up the

21
00:00:48,570 --> 00:00:53,159
code base series you can see what I'm

22
00:00:49,738 --> 00:00:57,209
talking about is that I didn't really

23
00:00:53,159 --> 00:01:00,000
make any system for loading the shaders

24
00:00:57,210 --> 00:01:02,670
from disk largely because I don't like

25
00:01:00,000 --> 00:01:04,530
shipping extra files of the game so to

26
00:01:02,670 --> 00:01:07,829
be honest I I kind of like them being

27
00:01:04,530 --> 00:01:09,570
embedded in the executable and so if we

28
00:01:07,829 --> 00:01:12,060
were going to do something like loadable

29
00:01:09,569 --> 00:01:15,209
shaders I would probably do it honestly

30
00:01:12,060 --> 00:01:16,890
I probably do it through the hot code

31
00:01:15,209 --> 00:01:18,408
reloading system which is probably

32
00:01:16,890 --> 00:01:20,820
something we should do eventually anyway

33
00:01:18,409 --> 00:01:22,380
since the hots of reloading system kind

34
00:01:20,819 --> 00:01:23,879
of handles this case as well we just

35
00:01:22,379 --> 00:01:30,289
didn't happen to put the renderer in the

36
00:01:23,879 --> 00:01:34,078
hot loaded section we should right but

37
00:01:30,290 --> 00:01:35,700
all that aside one of the things that's

38
00:01:34,078 --> 00:01:37,709
been confounding us since we haven't

39
00:01:35,700 --> 00:01:40,350
really had a much of a need to hot load

40
00:01:37,709 --> 00:01:42,539
the shaders at the moment because the

41
00:01:40,349 --> 00:01:45,328
game boots very quickly so it's not

42
00:01:42,540 --> 00:01:46,829
really that big of a deal but one of the

43
00:01:45,328 --> 00:01:49,139
problems we've been having is because we

44
00:01:46,828 --> 00:01:51,359
just put them in as strings in our

45
00:01:49,140 --> 00:01:53,519
executable is the indentations all

46
00:01:51,359 --> 00:01:56,328
messed up because once we open something

47
00:01:53,519 --> 00:02:03,899
as a string we end up in a position

48
00:01:56,328 --> 00:02:06,478
where the fork odor went looks at what

49
00:02:03,899 --> 00:02:09,868
we've given it thinks that we are

50
00:02:06,478 --> 00:02:11,848
talking about just a giant group of

51
00:02:09,868 --> 00:02:13,709
characters and it's misha's all the

52
00:02:11,848 --> 00:02:16,738
indentation out of our shader

53
00:02:13,709 --> 00:02:18,959
which makes it hard to read simple ones

54
00:02:16,739 --> 00:02:20,188
like this aren't so bad but you know

55
00:02:18,959 --> 00:02:21,959
when you get into ones that are a little

56
00:02:20,188 --> 00:02:24,870
more complicated which we have a couple

57
00:02:21,959 --> 00:02:26,250
now that are somewhat complicated you

58
00:02:24,870 --> 00:02:28,950
know you look at something like this and

59
00:02:26,250 --> 00:02:31,500
it's just it's hard to read it's just

60
00:02:28,949 --> 00:02:35,250
it's difficult to read some of the

61
00:02:31,500 --> 00:02:37,378
slightly more complicated shaders now I

62
00:02:35,250 --> 00:02:39,568
was like well I wish we could fix that

63
00:02:37,378 --> 00:02:42,688
but I can't think of a way how to fix it

64
00:02:39,568 --> 00:02:44,719
I tried a little bit but I couldn't do

65
00:02:42,688 --> 00:02:44,719
it

66
00:02:45,109 --> 00:02:51,629
Martin who many of you already know he

67
00:02:49,979 --> 00:02:56,369
answers all the questions on handmade

68
00:02:51,628 --> 00:02:59,938
Network like all the questions he seems

69
00:02:56,370 --> 00:03:02,819
to know everything figured out a fix for

70
00:02:59,938 --> 00:03:05,128
this that may work so let's try it what

71
00:03:02,818 --> 00:03:08,699
he suggested was since we're using an

72
00:03:05,128 --> 00:03:13,769
arbitrary string opener here apparently

73
00:03:08,699 --> 00:03:16,949
the rules of C++ 11 are that if we open

74
00:03:13,769 --> 00:03:20,789
a string with a one of these sort of

75
00:03:16,949 --> 00:03:22,530
like what's the word I'm looking for

76
00:03:20,789 --> 00:03:24,989
with one of these like arbitrary

77
00:03:22,530 --> 00:03:27,060
modifiers that arbitrary modifier is

78
00:03:24,989 --> 00:03:31,639
allowed to include a closing quote

79
00:03:27,060 --> 00:03:39,530
apparently so we can in theory do this

80
00:03:31,639 --> 00:03:43,680
and then at the end of it we can do that

81
00:03:39,530 --> 00:03:46,709
right so the question was if we did that

82
00:03:43,680 --> 00:03:49,949
would for coder no longer think it was a

83
00:03:46,709 --> 00:03:53,489
long string unfortunately it looks like

84
00:03:49,949 --> 00:03:55,590
here for coder is too smart for us it

85
00:03:53,489 --> 00:03:58,859
looks like poor coder knows about that

86
00:03:55,590 --> 00:04:00,449
string syntax and so as a result here it

87
00:03:58,859 --> 00:04:02,639
looks like there's no way to turn it off

88
00:04:00,449 --> 00:04:05,280
so because like you can see I've got the

89
00:04:02,639 --> 00:04:10,560
closing quote here but unfortunately all

90
00:04:05,280 --> 00:04:14,908
of this remains a string according to

91
00:04:10,560 --> 00:04:17,488
for coder so yeah it looks like for

92
00:04:14,908 --> 00:04:20,718
coder it's just a bit too smart it

93
00:04:17,488 --> 00:04:24,978
understands how to do open and close

94
00:04:20,718 --> 00:04:24,978
strings like that so that's too bad

95
00:04:26,519 --> 00:04:33,000
I guess one thing that would be really

96
00:04:29,009 --> 00:04:40,979
cool for coder did is like if you could

97
00:04:33,000 --> 00:04:44,149
say in here like that as the string

98
00:04:40,978 --> 00:04:46,680
opening closer or something like this

99
00:04:44,149 --> 00:04:51,418
you know like something that would tell

100
00:04:46,680 --> 00:05:00,689
it to indent the string in a normal

101
00:04:51,418 --> 00:05:03,689
fashion like that and so for coder would

102
00:05:00,689 --> 00:05:06,209
know you know if you made a thing like

103
00:05:03,689 --> 00:05:08,668
that to allow indentation inside it

104
00:05:06,209 --> 00:05:10,288
because it was supposed to be C code for

105
00:05:08,668 --> 00:05:15,569
something similar to C code that could

106
00:05:10,288 --> 00:05:18,199
be indented that way correctly so that

107
00:05:15,569 --> 00:05:18,199
would be cool

108
00:05:20,180 --> 00:05:23,509
let me see

109
00:05:31,199 --> 00:05:52,310
of us who see for some reason for coder

110
00:05:44,249 --> 00:06:01,830
has a maximum length here is that is

111
00:05:52,310 --> 00:06:05,418
that also part of C meaning is this not

112
00:06:01,829 --> 00:06:05,418
considered one of those strings anymore

113
00:06:05,569 --> 00:06:23,069
because that would do it oh man for

114
00:06:14,819 --> 00:06:25,680
coder cut for cluttered I know dude nope

115
00:06:23,069 --> 00:06:29,249
so I guess that's just part of C as well

116
00:06:25,680 --> 00:06:33,900
so you can't have longer sequences for

117
00:06:29,249 --> 00:06:39,629
coders just telling you that and parsing

118
00:06:33,899 --> 00:06:48,989
that properly so yeah I don't think

119
00:06:39,629 --> 00:06:50,009
there's any real way around it yeah I

120
00:06:48,990 --> 00:06:51,899
don't think there's any way around it

121
00:06:50,009 --> 00:06:53,430
unfortunately so there you go thank you

122
00:06:51,899 --> 00:06:54,149
Martins for trying that was a really

123
00:06:53,430 --> 00:06:55,829
good idea

124
00:06:54,149 --> 00:06:58,348
unfortunately for cutters a little too

125
00:06:55,829 --> 00:07:03,658
smart for its own good

126
00:06:58,348 --> 00:07:09,838
in this case and so basically we will

127
00:07:03,658 --> 00:07:11,819
just have to ask Allen I think we'll

128
00:07:09,838 --> 00:07:13,259
just have to ask Alan to fix it for us I

129
00:07:11,819 --> 00:07:16,680
don't think there's anything we can do

130
00:07:13,259 --> 00:07:19,919
at this point we've tried pretty much

131
00:07:16,680 --> 00:07:22,978
everything we can think of alright

132
00:07:19,918 --> 00:07:26,128
anyway let's go back to a game

133
00:07:22,978 --> 00:07:31,680
programming here and specifically render

134
00:07:26,129 --> 00:07:35,240
rendering programming now where we last

135
00:07:31,680 --> 00:07:37,829
left off we sort of have the ability to

136
00:07:35,240 --> 00:07:40,038
take a look at several buffers that we

137
00:07:37,829 --> 00:07:44,490
were storing with information in them

138
00:07:40,038 --> 00:07:47,579
regarding the lighting and one of the

139
00:07:44,490 --> 00:07:48,990
weird things that we sort of have here

140
00:07:47,579 --> 00:07:50,399
right look you can see what's going on

141
00:07:48,990 --> 00:07:54,168
here we felt like our subsampled

142
00:07:50,399 --> 00:07:58,338
lighting buffer here and we've got our

143
00:07:54,168 --> 00:08:01,139
normals here and we've got the emission

144
00:07:58,338 --> 00:08:07,949
current emission blur thing happening

145
00:08:01,139 --> 00:08:10,709
here and blah blah blah excusing so one

146
00:08:07,949 --> 00:08:13,408
of the things that I had been doing is

147
00:08:10,709 --> 00:08:15,389
we were sort of playing around with the

148
00:08:13,408 --> 00:08:19,949
lighting in this setup that we've got

149
00:08:15,389 --> 00:08:22,649
here and it occurred to me as we were

150
00:08:19,949 --> 00:08:24,990
doing this and I thought about it this

151
00:08:22,649 --> 00:08:28,408
week I think I kind of realized that

152
00:08:24,990 --> 00:08:30,478
we've been taking a slightly inaccurate

153
00:08:28,408 --> 00:08:34,860
approach or rather a slightly

154
00:08:30,478 --> 00:08:43,198
unproductive approach here and what I

155
00:08:34,860 --> 00:08:47,278
realized was continuing what I realized

156
00:08:43,198 --> 00:08:51,870
was we are sort of making things a lot

157
00:08:47,278 --> 00:08:54,659
harder on ourselves here because what

158
00:08:51,870 --> 00:08:56,600
we're doing is we're trying to develop

159
00:08:54,659 --> 00:08:59,730
the lighting algorithm in like the most

160
00:08:56,600 --> 00:09:02,240
unfavorable circumstances possible we're

161
00:08:59,730 --> 00:09:04,139
trying to develop a new algorithm

162
00:09:02,240 --> 00:09:05,519
because we don't really have any

163
00:09:04,139 --> 00:09:08,610
existing algorithm we're implementing

164
00:09:05,519 --> 00:09:14,659
directly we're trying to implement a new

165
00:09:08,610 --> 00:09:18,028
algorithm in like the GPU directly and

166
00:09:14,659 --> 00:09:20,730
we don't even have the ability to debug

167
00:09:18,028 --> 00:09:22,078
this GPU we can't use like a GPU

168
00:09:20,730 --> 00:09:26,670
debugger on it because it doesn't work

169
00:09:22,078 --> 00:09:29,429
with a GPU that's old and so it occurred

170
00:09:26,669 --> 00:09:30,870
to me it's like how are we ever going to

171
00:09:29,429 --> 00:09:32,909
do how are we ever going to figure it

172
00:09:30,870 --> 00:09:35,188
out right it's like the most

173
00:09:32,909 --> 00:09:37,469
unfavourable way to possibly develop

174
00:09:35,188 --> 00:09:40,230
something we can't even see really

175
00:09:37,470 --> 00:09:41,819
what's going on it's laborious to store

176
00:09:40,230 --> 00:09:44,159
information because we have to create

177
00:09:41,818 --> 00:09:47,250
like new textures to put the data in and

178
00:09:44,159 --> 00:09:50,669
all this other stuff it's just really

179
00:09:47,250 --> 00:09:53,710
inconvenient and bad and so what I

180
00:09:50,669 --> 00:09:57,099
realized is why don't we not

181
00:09:53,710 --> 00:09:59,410
that way instead of doing that why don't

182
00:09:57,100 --> 00:10:02,860
we just write the lighting on the CPU

183
00:09:59,409 --> 00:10:04,829
side right like what if we just wrote

184
00:10:02,860 --> 00:10:07,360
the lighting on the on the CPU side

185
00:10:04,830 --> 00:10:11,850
finished it and then poured you to the

186
00:10:07,360 --> 00:10:14,289
GPU right it seems like a pretty easy

187
00:10:11,850 --> 00:10:16,209
approach to me that would be a lot more

188
00:10:14,289 --> 00:10:17,829
fruitful because what we could do is

189
00:10:16,208 --> 00:10:19,500
like for example if we want to do this

190
00:10:17,830 --> 00:10:21,730
thing with reflectors like I was trying

191
00:10:19,500 --> 00:10:23,320
we can just create a struct for the

192
00:10:21,730 --> 00:10:26,259
reflectors create as many reflectors as

193
00:10:23,320 --> 00:10:28,450
we want run the lighting on the CPU side

194
00:10:26,259 --> 00:10:30,639
and then download the results of the GPU

195
00:10:28,450 --> 00:10:32,890
and draw the lit scene with that and

196
00:10:30,639 --> 00:10:35,139
that way we can even draw those

197
00:10:32,889 --> 00:10:37,990
reflectors so we can actually like send

198
00:10:35,139 --> 00:10:40,838
down reflectors as geometry to see what

199
00:10:37,990 --> 00:10:45,100
their current status is and all that

200
00:10:40,839 --> 00:10:47,200
other sorts of things right so it seems

201
00:10:45,100 --> 00:10:51,159
to me like maybe that's a smarter way to

202
00:10:47,200 --> 00:10:54,430
go because if we did that then we

203
00:10:51,159 --> 00:10:59,319
wouldn't have to worry about all the GPU

204
00:10:54,429 --> 00:11:01,088
side stuff that is endemic in trying to

205
00:10:59,320 --> 00:11:02,800
implement a complex algorithm using

206
00:11:01,089 --> 00:11:04,920
nothing but pixel and fragment shaders

207
00:11:02,799 --> 00:11:06,939
I'm a vertex and fragment shaders

208
00:11:04,919 --> 00:11:10,719
because then it's more like just writing

209
00:11:06,940 --> 00:11:12,550
like a compute shaders a secured out

210
00:11:10,720 --> 00:11:16,269
what we want to do then we can translate

211
00:11:12,549 --> 00:11:20,679
it right down to something that the card

212
00:11:16,269 --> 00:11:22,750
could do so that's that's my thought and

213
00:11:20,679 --> 00:11:24,579
so I was thinking of trying that this

214
00:11:22,750 --> 00:11:27,929
weekend that way we can sort of get out

215
00:11:24,580 --> 00:11:30,790
of the business of trying to do this on

216
00:11:27,929 --> 00:11:37,088
the hardware side of things which to me

217
00:11:30,789 --> 00:11:38,649
seems very difficult all right so I what

218
00:11:37,089 --> 00:11:42,220
I was kind of thinking about there is

219
00:11:38,649 --> 00:11:45,759
just literally trying to do some of the

220
00:11:42,220 --> 00:11:53,649
stuff with the reflectors I like on the

221
00:11:45,759 --> 00:11:55,360
seaside right so inside the insides of

222
00:11:53,649 --> 00:11:59,190
render group right we've got this thing

223
00:11:55,360 --> 00:12:02,680
called render entry textured quads and

224
00:11:59,190 --> 00:12:06,370
render entry textured cloth just outputs

225
00:12:02,679 --> 00:12:07,859
all of the basically Subsidy everything

226
00:12:06,370 --> 00:12:12,789
in our game

227
00:12:07,860 --> 00:12:16,870
it outputs a series of quadrilaterals

228
00:12:12,789 --> 00:12:19,179
each quadrilateral is you know either

229
00:12:16,870 --> 00:12:21,700
going to be a sprite or the side of one

230
00:12:19,179 --> 00:12:24,909
of our like structural cubes that we use

231
00:12:21,700 --> 00:12:28,780
to make up the ground for the look of

232
00:12:24,909 --> 00:12:33,429
the game and if we want to we can easily

233
00:12:28,779 --> 00:12:36,459
grab one of these textured quad elements

234
00:12:33,429 --> 00:12:39,099
and we can loop over all of the quads on

235
00:12:36,460 --> 00:12:40,990
the CPU side so what I was thinking we

236
00:12:39,100 --> 00:12:43,690
could do is just take all of those quads

237
00:12:40,990 --> 00:12:46,779
and generate reflectors for each one on

238
00:12:43,690 --> 00:12:49,360
the CPU side compute lighting between

239
00:12:46,779 --> 00:12:51,250
the reflectors and then render those

240
00:12:49,360 --> 00:12:56,590
reflectors to see what the lighting

241
00:12:51,250 --> 00:12:58,389
actually is right and furthermore we

242
00:12:56,590 --> 00:13:02,080
have a way of doing this in a really

243
00:12:58,389 --> 00:13:05,169
convenient fashion because we can hijack

244
00:13:02,080 --> 00:13:08,050
all of the textures and colors in the

245
00:13:05,169 --> 00:13:15,819
quads at any point in the pipeline what

246
00:13:08,049 --> 00:13:18,429
I can do is just insert effectively a I

247
00:13:15,820 --> 00:13:20,170
could I can sort of insert a piece of

248
00:13:18,429 --> 00:13:21,399
code that just hijacks that does the

249
00:13:20,169 --> 00:13:24,219
lighting and outputs the lighting

250
00:13:21,399 --> 00:13:25,990
directly to the quads and I think that

251
00:13:24,220 --> 00:13:28,720
will pretty much solve our problem for

252
00:13:25,990 --> 00:13:31,810
it I think in terms of development so

253
00:13:28,720 --> 00:13:35,379
let's just take a look at this and see

254
00:13:31,809 --> 00:13:37,449
so here in the appeal composite program

255
00:13:35,379 --> 00:13:39,850
you can see that we've zeroed out the

256
00:13:37,450 --> 00:13:41,410
lighting so there is no lighting going

257
00:13:39,850 --> 00:13:43,960
on anymore and that's why when you run

258
00:13:41,409 --> 00:13:47,709
the game at the moment you can see that

259
00:13:43,960 --> 00:13:50,139
we sort of have a unlit world but

260
00:13:47,710 --> 00:13:54,100
otherwise it's rendering as we normally

261
00:13:50,139 --> 00:13:57,309
would expect it to render now if I want

262
00:13:54,100 --> 00:14:00,820
to insert that hijacking what I can do

263
00:13:57,309 --> 00:14:04,239
is say okay inside world mode there

264
00:14:00,820 --> 00:14:07,870
should be a time when we actually push

265
00:14:04,240 --> 00:14:10,779
the the rendering out here you can see

266
00:14:07,870 --> 00:14:13,899
at the end depth field state of things

267
00:14:10,779 --> 00:14:17,970
for example so what I want to do is is

268
00:14:13,899 --> 00:14:17,970
basically hijack the render group here

269
00:14:18,778 --> 00:14:23,620
so I'm just going to insert a thing

270
00:14:21,759 --> 00:14:27,069
called lighting test skin to render

271
00:14:23,620 --> 00:14:30,070
group what I want to do here is I want

272
00:14:27,070 --> 00:14:32,320
to create something inside the render

273
00:14:30,070 --> 00:14:37,829
group at the end that's a dummy function

274
00:14:32,320 --> 00:14:41,230
well it doesn't have to be in line so

275
00:14:37,828 --> 00:14:44,769
after we have pushed this render element

276
00:14:41,230 --> 00:14:48,039
to end the death field we now know that

277
00:14:44,769 --> 00:14:53,139
right behind our current render element

278
00:14:48,039 --> 00:14:55,679
is the one of these on you know on the

279
00:14:53,139 --> 00:14:59,289
render sack is going to be one of these

280
00:14:55,679 --> 00:15:01,899
texture quad sets so what I can do is

281
00:14:59,289 --> 00:15:05,828
like and now I know that I can just loop

282
00:15:01,899 --> 00:15:08,289
through the in you know the the render

283
00:15:05,828 --> 00:15:13,569
stack looking for these right now

284
00:15:08,289 --> 00:15:17,469
and do lighting on them so what I can do

285
00:15:13,570 --> 00:15:19,230
is grab out of the render group right

286
00:15:17,470 --> 00:15:24,009
because the render group itself

287
00:15:19,230 --> 00:15:27,789
Janee because the render group itself at

288
00:15:24,009 --> 00:15:30,429
least I believe maybe that's not in here

289
00:15:27,789 --> 00:15:37,509
so that's going to actually be here the

290
00:15:30,429 --> 00:15:40,929
rendered group has a current quads one

291
00:15:37,509 --> 00:15:43,240
Oh in fact I suppose we could just do it

292
00:15:40,929 --> 00:15:45,638
that way maybe I want to do this before

293
00:15:43,240 --> 00:15:54,240
then maybe I want to do it on current

294
00:15:45,639 --> 00:15:54,240
quads so maybe I want to say this

295
00:15:55,809 --> 00:16:01,028
so what I want to do here is say let's

296
00:15:58,360 --> 00:16:04,629
do that right before we push in that

297
00:16:01,028 --> 00:16:08,620
case so let's put it here that way the

298
00:16:04,629 --> 00:16:10,060
quads will be correct as written so what

299
00:16:08,620 --> 00:16:16,929
I'm going to do here is I'm going to go

300
00:16:10,059 --> 00:16:24,159
into those textured quads and let's see

301
00:16:16,929 --> 00:16:26,229
here so I don't know I don't know what

302
00:16:24,159 --> 00:16:29,588
the easiest way to get the pointers to

303
00:16:26,230 --> 00:16:31,569
things is going to be I think yeah so

304
00:16:29,589 --> 00:16:33,399
basically we just have quad count in

305
00:16:31,568 --> 00:16:35,198
vertex or a offset so basically what I'm

306
00:16:33,399 --> 00:16:39,100
going to have to do here is it's going

307
00:16:35,198 --> 00:16:41,948
to have to grab out the pointers to

308
00:16:39,100 --> 00:16:44,259
where the information is for the

309
00:16:41,948 --> 00:16:46,778
textured quad but that's not a big deal

310
00:16:44,259 --> 00:16:48,399
right we've done this before but you can

311
00:16:46,778 --> 00:16:49,659
see here on push glob this is how we

312
00:16:48,399 --> 00:16:53,198
were writing to it in the first place

313
00:16:49,659 --> 00:16:54,850
you can see how we get the vertex array

314
00:16:53,198 --> 00:16:57,609
there and you can see how we get the

315
00:16:54,850 --> 00:17:01,569
quad bitmap so I can just kind of come

316
00:16:57,610 --> 00:17:04,240
down here and do that so what I could do

317
00:17:01,568 --> 00:17:18,908
is this I can say here's the quad

318
00:17:04,240 --> 00:17:21,849
bitmaps for vertex array offset and that

319
00:17:18,909 --> 00:17:25,000
should give me pointers into the render

320
00:17:21,849 --> 00:17:28,529
buffers at for the vertices and the

321
00:17:25,000 --> 00:17:28,529
bitmaps in question

322
00:17:29,630 --> 00:17:32,849
[Applause]

323
00:17:35,470 --> 00:17:53,180
so this is really all we need I think so

324
00:17:50,779 --> 00:17:55,279
once I have that I can loop through all

325
00:17:53,180 --> 00:18:00,740
of the quads that there are or I can say

326
00:17:55,279 --> 00:18:13,579
quad index you know goes up to the quad

327
00:18:00,740 --> 00:18:16,640
count and inside this loop I can access

328
00:18:13,579 --> 00:18:19,149
the vertices and the bitmaps what I want

329
00:18:16,640 --> 00:18:21,470
to do is basically nuke out the bitmaps

330
00:18:19,150 --> 00:18:27,650
so what I can do here is say like

331
00:18:21,470 --> 00:18:32,720
bitmaps quad index equals that white

332
00:18:27,650 --> 00:18:35,740
bitmap so now there will be no sprites

333
00:18:32,720 --> 00:18:41,029
there will just be flat

334
00:18:35,740 --> 00:18:43,339
pure white textures right and if I want

335
00:18:41,029 --> 00:18:45,019
to here I can say I can pull that

336
00:18:43,339 --> 00:18:48,169
commands app we're going to need it

337
00:18:45,019 --> 00:18:57,650
they get so grouped commands is that

338
00:18:48,170 --> 00:18:59,690
right yes and let's take a look here

339
00:18:57,650 --> 00:19:04,519
so lighting test which I can't put a

340
00:18:59,690 --> 00:19:05,000
loaded bitmap it's a double star there

341
00:19:04,519 --> 00:19:07,099
we go

342
00:19:05,000 --> 00:19:09,230
and so now all I need to do is call this

343
00:19:07,099 --> 00:19:10,879
before ending the death peel which is

344
00:19:09,230 --> 00:19:12,710
what I was doing that and it should go

345
00:19:10,880 --> 00:19:15,410
through and be able to access all this

346
00:19:12,710 --> 00:19:18,430
information so just to start testing it

347
00:19:15,410 --> 00:19:22,250
like I said this will nuke everything

348
00:19:18,430 --> 00:19:24,460
and just produce white right well not

349
00:19:22,250 --> 00:19:26,779
white whatever the color is of the thing

350
00:19:24,460 --> 00:19:31,880
and you can see that's exactly what it

351
00:19:26,779 --> 00:19:34,099
did right so here's all of our here's

352
00:19:31,880 --> 00:19:37,220
all of our sprites all of our you know

353
00:19:34,099 --> 00:19:39,319
quote-unquote reflectors and and this is

354
00:19:37,220 --> 00:19:42,559
exactly what I wanted right so that's

355
00:19:39,319 --> 00:19:46,159
good and similarly if I want to I can

356
00:19:42,559 --> 00:19:47,029
edit the vertices so I can do something

357
00:19:46,160 --> 00:19:51,890
like

358
00:19:47,029 --> 00:20:10,759
Virts plus equals four I could do this

359
00:19:51,890 --> 00:20:15,830
even so now I know that on every quad

360
00:20:10,759 --> 00:20:18,440
that sort of lined up if you will now if

361
00:20:15,829 --> 00:20:20,629
I want to edit the quad or access the

362
00:20:18,440 --> 00:20:23,450
quad which is exactly what I want to do

363
00:20:20,630 --> 00:20:25,670
I can pull out each individual vertex of

364
00:20:23,450 --> 00:20:28,340
the quad the same way that I did it when

365
00:20:25,670 --> 00:20:32,090
I was pushing them on so I can know

366
00:20:28,339 --> 00:20:34,759
where each of these quads is by again

367
00:20:32,089 --> 00:20:37,839
just doing this sort of a process so if

368
00:20:34,759 --> 00:20:40,730
I want to I can take the textured vertex

369
00:20:37,839 --> 00:20:42,919
pointer here and say all right let's say

370
00:20:40,730 --> 00:20:54,529
that I've got each of these separately

371
00:20:42,920 --> 00:20:57,200
so let's say I do something like this so

372
00:20:54,529 --> 00:20:59,509
I can access each one of the vertices of

373
00:20:57,200 --> 00:21:02,600
this constituent quad through a

374
00:20:59,509 --> 00:21:07,490
convenient named v-0 v1 v2 v3 and

375
00:21:02,599 --> 00:21:12,669
similarly if I go look you know I've got

376
00:21:07,490 --> 00:21:15,589
this struct about the the vertex there

377
00:21:12,670 --> 00:21:18,650
textured vertex and you can see we've

378
00:21:15,589 --> 00:21:20,839
got a position in normal a UV and a

379
00:21:18,650 --> 00:21:24,200
color now we don't really care about the

380
00:21:20,839 --> 00:21:28,159
UV but we do care about the other three

381
00:21:24,200 --> 00:21:31,549
values what I can do here is demonstrate

382
00:21:28,160 --> 00:21:38,360
as well that these are editable by

383
00:21:31,549 --> 00:21:39,950
changing everything to white so now we

384
00:21:38,359 --> 00:21:42,490
should get a completely whitewashed

385
00:21:39,950 --> 00:21:42,490
screen

386
00:21:45,910 --> 00:21:55,279
every day so there's our our completely

387
00:21:50,390 --> 00:21:58,430
edited version all right so that gives

388
00:21:55,279 --> 00:22:00,889
us our sort of information that we

389
00:21:58,430 --> 00:22:04,070
wanted for our lighting test here we now

390
00:22:00,890 --> 00:22:07,009
know an easy way to sort of get into the

391
00:22:04,069 --> 00:22:09,619
CPU all of the information about all of

392
00:22:07,009 --> 00:22:11,000
the reflectors in the scene and where

393
00:22:09,619 --> 00:22:14,689
they are what their color is what their

394
00:22:11,000 --> 00:22:17,930
normal is etc and furthermore we can now

395
00:22:14,690 --> 00:22:20,600
output a lighting solution that we can

396
00:22:17,930 --> 00:22:23,299
look at and debug quickly by just

397
00:22:20,599 --> 00:22:27,500
changing the vertex colors of these

398
00:22:23,299 --> 00:22:31,730
sprite geometry to reflect whatever the

399
00:22:27,500 --> 00:22:37,220
lighting system says right so let's go

400
00:22:31,730 --> 00:22:37,970
ahead and do that let's start down that

401
00:22:37,220 --> 00:22:53,690
path

402
00:22:37,970 --> 00:23:00,710
I need some tissues here allergy ish all

403
00:22:53,690 --> 00:23:03,769
right so the question is how do we want

404
00:23:00,710 --> 00:23:06,590
to create some space for this here not

405
00:23:03,769 --> 00:23:08,809
probably super difficult because we can

406
00:23:06,589 --> 00:23:11,509
just create a dummy buffer that's

407
00:23:08,809 --> 00:23:13,789
however big we needed to be and let that

408
00:23:11,509 --> 00:23:15,859
do its thing so for example we know how

409
00:23:13,789 --> 00:23:17,690
many quads are going to be here because

410
00:23:15,859 --> 00:23:19,939
you know again this is not really

411
00:23:17,690 --> 00:23:21,470
something that we're going to be using

412
00:23:19,940 --> 00:23:23,660
long term so I'm just going to create a

413
00:23:21,470 --> 00:23:27,920
dummy buffer that we can use to do

414
00:23:23,660 --> 00:23:30,230
whatever we want to do and so if I go

415
00:23:27,920 --> 00:23:31,730
take a look in that lighting test

416
00:23:30,230 --> 00:23:33,230
function let me just go ahead and set a

417
00:23:31,730 --> 00:23:37,490
breakpoint there rather than trying to

418
00:23:33,230 --> 00:23:41,289
get to it in the bugger if we actually

419
00:23:37,490 --> 00:23:44,950
just look to see what is going to be

420
00:23:41,289 --> 00:23:44,950
jump through here I

421
00:23:46,839 --> 00:23:53,599
2220 182 commitment so you know if we

422
00:23:50,690 --> 00:23:55,039
created a buffer of 4096 things that's

423
00:23:53,599 --> 00:23:57,799
more things than were ever

424
00:23:55,039 --> 00:23:59,480
going to have during our testing here so

425
00:23:57,799 --> 00:24:04,099
if I want to I can just create a little

426
00:23:59,480 --> 00:24:07,099
thing called you know reflector maybe

427
00:24:04,099 --> 00:24:10,699
I'll call it a lighting element I don't

428
00:24:07,099 --> 00:24:13,909
know who knows but this lighting

429
00:24:10,700 --> 00:24:16,700
elements is going to be something we can

430
00:24:13,910 --> 00:24:18,110
play with and like I said for right now

431
00:24:16,700 --> 00:24:20,750
let's stick with the thing we were doing

432
00:24:18,109 --> 00:24:25,279
before which is let's just say it's got

433
00:24:20,750 --> 00:24:32,750
a position it's got a direction it's got

434
00:24:25,279 --> 00:24:40,190
a color and it has a radius so how you

435
00:24:32,750 --> 00:24:41,930
know big the thing was that and so in

436
00:24:40,190 --> 00:24:44,480
this case we've got sort of these two

437
00:24:41,930 --> 00:24:46,490
notions of color like we typically do

438
00:24:44,480 --> 00:24:48,589
which is always a little bit confusing

439
00:24:46,490 --> 00:24:51,410
right there's there's two kinds of color

440
00:24:48,589 --> 00:24:53,629
there's immediate color like I am

441
00:24:51,410 --> 00:24:55,700
shining color out and there's reflected

442
00:24:53,630 --> 00:25:01,250
color and they're different things so

443
00:24:55,700 --> 00:25:05,090
I'll put those two in here again and

444
00:25:01,250 --> 00:25:07,069
I'll do the front and back like we had

445
00:25:05,089 --> 00:25:09,799
so this is now just what we were

446
00:25:07,069 --> 00:25:13,389
building inside the GPU I'm just

447
00:25:09,799 --> 00:25:16,849
building it outside the GPU now and

448
00:25:13,390 --> 00:25:18,920
again this is because I want a way of

449
00:25:16,849 --> 00:25:20,750
looking at this that doesn't involve so

450
00:25:18,920 --> 00:25:22,430
much laborious work just to try things

451
00:25:20,750 --> 00:25:24,140
because I feel like we're never going to

452
00:25:22,430 --> 00:25:25,490
converge on a solution if we have to try

453
00:25:24,140 --> 00:25:28,730
them in an environment that that's so

454
00:25:25,490 --> 00:25:29,900
slow as what we were working with we did

455
00:25:28,730 --> 00:25:33,769
a bunch of work to get it to the point

456
00:25:29,900 --> 00:25:36,680
where we can do you know a bunch of

457
00:25:33,769 --> 00:25:38,180
stuff with it but just trying to figure

458
00:25:36,680 --> 00:25:39,529
out what the right things to store is

459
00:25:38,180 --> 00:25:42,230
and the right ways to process them just

460
00:25:39,529 --> 00:25:44,000
seemed way too difficult without be able

461
00:25:42,230 --> 00:25:46,610
to debug or draw or do anything really

462
00:25:44,000 --> 00:25:48,710
interesting and so I think this is just

463
00:25:46,609 --> 00:25:50,240
a lot more effective as a way of getting

464
00:25:48,710 --> 00:25:51,769
to a solution and then we just move it

465
00:25:50,240 --> 00:25:54,289
to the GPU and we're done

466
00:25:51,769 --> 00:25:55,400
and you know that part's not so

467
00:25:54,289 --> 00:25:59,359
difficult that point because we're only

468
00:25:55,400 --> 00:26:03,080
trying to do one thing all right

469
00:25:59,359 --> 00:26:07,819
so if you imagine here that we sort of

470
00:26:03,079 --> 00:26:09,319
just have a set of these reflectors that

471
00:26:07,819 --> 00:26:11,769
are going to be generated based on

472
00:26:09,319 --> 00:26:14,269
on the sprites and the quads that we see

473
00:26:11,769 --> 00:26:16,099
I really should not be scratching my eye

474
00:26:14,269 --> 00:26:19,940
like this just you know don't do this at

475
00:26:16,099 --> 00:26:21,259
home folks that's a bad idea you may

476
00:26:19,940 --> 00:26:23,778
have allergies like I do but don't

477
00:26:21,259 --> 00:26:26,470
scratch your eye it only damages the eye

478
00:26:23,778 --> 00:26:28,909
actually I don't know we know that I

479
00:26:26,470 --> 00:26:36,230
think it's currently hypothesized that

480
00:26:28,909 --> 00:26:37,580
it damages the eye anyway moving on I so

481
00:26:36,230 --> 00:26:39,259
what I can do here is have basically

482
00:26:37,579 --> 00:26:42,019
tulips woman extracts into the lighting

483
00:26:39,259 --> 00:26:44,628
elements and one that pushes back into

484
00:26:42,019 --> 00:26:46,339
the lighting elements so what I'll do is

485
00:26:44,628 --> 00:26:51,319
I'll just create a global array first

486
00:26:46,339 --> 00:26:55,119
that's like you know the roots sort of

487
00:26:51,319 --> 00:27:00,678
set of elements and what I'll do is

488
00:26:55,119 --> 00:27:04,299
using make two passes through this is

489
00:27:00,679 --> 00:27:12,839
going to stay sort of as a thing that

490
00:27:04,299 --> 00:27:12,838
[Applause]

491
00:27:12,849 --> 00:27:20,589
copy lighting out and copy lighting in

492
00:27:21,278 --> 00:27:30,230
so first we'll go through and do an

493
00:27:23,929 --> 00:27:31,730
extraction we don't need the bitmaps to

494
00:27:30,230 --> 00:27:33,558
do the extraction we just need the

495
00:27:31,730 --> 00:27:36,378
vertices so we'll ignore the bitmaps for

496
00:27:33,558 --> 00:27:39,740
now and the way that we'll do the

497
00:27:36,378 --> 00:27:43,490
extraction here is well basically we'll

498
00:27:39,740 --> 00:27:46,788
take sort of a span so we'll assume V 0

499
00:27:43,490 --> 00:27:51,109
V 1 V 2 we'll assume that V 0 to V 2 is

500
00:27:46,788 --> 00:27:53,538
the span across the sprite again this is

501
00:27:51,109 --> 00:27:55,428
just approximate for now we can work on

502
00:27:53,538 --> 00:27:59,419
better ones later we but we just need

503
00:27:55,429 --> 00:28:01,278
the basics for now which is to say for

504
00:27:59,419 --> 00:28:04,460
any quadrilateral you know I could

505
00:28:01,278 --> 00:28:08,148
approximate what it's doing by saying

506
00:28:04,460 --> 00:28:10,879
all right if I was to take this then if

507
00:28:08,148 --> 00:28:13,428
I want something that as big as the you

508
00:28:10,878 --> 00:28:17,719
know I can either inscribe something

509
00:28:13,429 --> 00:28:21,470
here or I can you know sort of make it

510
00:28:17,720 --> 00:28:23,389
bigger as big as the whole thing I'm in

511
00:28:21,470 --> 00:28:25,129
a error on the side

512
00:28:23,388 --> 00:28:27,168
making it bigger for now so what I was

513
00:28:25,128 --> 00:28:28,759
thinking is this basically taking V 0 to

514
00:28:27,169 --> 00:28:32,028
V 2 right if we assume that it looks

515
00:28:28,759 --> 00:28:33,739
roughly like this just taking this fan

516
00:28:32,028 --> 00:28:36,469
and saying the midpoint will be the

517
00:28:33,739 --> 00:28:38,659
center and the distance out to one of

518
00:28:36,469 --> 00:28:39,979
the sides or rather the whole thing will

519
00:28:38,659 --> 00:28:44,239
be the diameter of this set of one of

520
00:28:39,979 --> 00:28:47,209
the sides will be the radius right so

521
00:28:44,239 --> 00:28:50,119
when I do this I've got the vertices

522
00:28:47,209 --> 00:28:58,009
coming in here I only need two of them

523
00:28:50,118 --> 00:29:01,578
and what I can do is say V 0 P V 2 P if

524
00:28:58,009 --> 00:29:06,409
I subtract these two from each other 3 V

525
00:29:01,578 --> 00:29:10,548
4 3 3 actually she's talking to you

526
00:29:06,409 --> 00:29:14,299
before I think they're four-dimensional

527
00:29:10,548 --> 00:29:17,808
because they've got that Z bias built in

528
00:29:14,298 --> 00:29:19,368
that would give me the span now I think

529
00:29:17,808 --> 00:29:21,528
about it that Z bias is actually

530
00:29:19,368 --> 00:29:26,288
something we want to take into account

531
00:29:21,528 --> 00:29:29,959
as well we probably want things to be

532
00:29:26,288 --> 00:29:38,298
reflected as if they are standing up the

533
00:29:29,959 --> 00:29:43,129
way that that we faked them to be yes so

534
00:29:38,298 --> 00:29:48,888
maybe we want to do it this way so maybe

535
00:29:43,128 --> 00:29:54,819
we want to create V 0 p as V 0 X Y Z and

536
00:29:48,888 --> 00:30:02,949
then we want V 0 P Z 2 plus equal V 0 W

537
00:29:54,819 --> 00:30:02,950
[Applause]

538
00:30:07,789 --> 00:30:30,869
something like this that's true all true

539
00:30:23,180 --> 00:30:38,310
my friends there we go I cannot convert

540
00:30:30,869 --> 00:30:40,559
again so let's see okay so this right

541
00:30:38,309 --> 00:30:42,750
here would give us the stand so now if I

542
00:30:40,559 --> 00:30:44,129
want to create a lighting element let's

543
00:30:42,750 --> 00:30:49,890
just go ahead and pretend that I have

544
00:30:44,130 --> 00:30:51,330
one here so here's my element and that's

545
00:30:49,890 --> 00:30:53,970
just going to line up with the quads

546
00:30:51,329 --> 00:30:56,129
exactly so as I spin through all these

547
00:30:53,970 --> 00:30:59,850
elements I'm going to add the quad index

548
00:30:56,130 --> 00:31:03,650
here and get the elements out so then

549
00:30:59,849 --> 00:31:09,449
what I'll say is my elements position is

550
00:31:03,650 --> 00:31:13,190
going to be the fan vector here what I

551
00:31:09,450 --> 00:31:17,549
want to do is take my v0p

552
00:31:13,190 --> 00:31:20,430
and add half of span right because that

553
00:31:17,549 --> 00:31:22,710
walks me up to that midpoint which is

554
00:31:20,430 --> 00:31:24,690
the location that I wanted so I can take

555
00:31:22,710 --> 00:31:27,029
that element P and I can go up half the

556
00:31:24,690 --> 00:31:37,110
span and get the location center it

557
00:31:27,029 --> 00:31:41,129
there once I've got that element P what

558
00:31:37,109 --> 00:31:43,319
I can do is I can create the normal from

559
00:31:41,130 --> 00:31:46,290
it by just looking at any one of these

560
00:31:43,319 --> 00:31:47,789
normals so I believe all I have to do

561
00:31:46,289 --> 00:31:50,250
there just grab one of them because

562
00:31:47,789 --> 00:31:51,809
these are all flat so just grabbing one

563
00:31:50,250 --> 00:31:53,009
and have to average them or anything I

564
00:31:51,809 --> 00:31:54,569
can just assume that they all have the

565
00:31:53,009 --> 00:31:56,910
same normal because that's basically how

566
00:31:54,569 --> 00:31:58,200
we've been doing it so far that changed

567
00:31:56,910 --> 00:32:01,410
in the future I need to use something a

568
00:31:58,200 --> 00:32:05,670
little more complicated the emission

569
00:32:01,410 --> 00:32:08,220
part I don't really have any way of

570
00:32:05,670 --> 00:32:10,710
setting any of the emissions at the

571
00:32:08,220 --> 00:32:13,140
moment so we'll go ahead and eliminate

572
00:32:10,710 --> 00:32:15,009
those and then what I'm going to do here

573
00:32:13,140 --> 00:32:17,800
is just look at the reflect

574
00:32:15,009 --> 00:32:21,640
color that reflected color is just going

575
00:32:17,799 --> 00:32:23,049
to be the color of one of the vertices

576
00:32:21,640 --> 00:32:24,759
doesn't matter which one at the moment

577
00:32:23,049 --> 00:32:27,190
cuz again I we don't really vary the

578
00:32:24,759 --> 00:32:28,920
color across the vertices just yet

579
00:32:27,190 --> 00:32:31,539
so we don't worry too much about that

580
00:32:28,920 --> 00:32:35,220
but what I need to do is up convert it

581
00:32:31,539 --> 00:32:39,220
here so I was hoping we had one of these

582
00:32:35,220 --> 00:32:42,450
like an RGB unpack but I don't know if

583
00:32:39,220 --> 00:32:45,759
we do let's the RGB unpack four by eight

584
00:32:42,450 --> 00:32:49,299
so that is going to pull out those are

585
00:32:45,759 --> 00:32:51,700
GPS exactly we want so I'll I'll pull

586
00:32:49,299 --> 00:32:54,279
that out there and that'll give ya the

587
00:32:51,700 --> 00:32:56,980
red the green the blue and the Alpha

588
00:32:54,279 --> 00:33:01,539
correctly so that's what we wanted and

589
00:32:56,980 --> 00:33:05,500
then the radius in this case is going to

590
00:33:01,539 --> 00:33:07,210
be half the span length right so if we

591
00:33:05,500 --> 00:33:09,400
take the length of that span that will

592
00:33:07,210 --> 00:33:11,350
give us the radius well give us the

593
00:33:09,400 --> 00:33:13,509
diameter and then we divide by two and

594
00:33:11,349 --> 00:33:14,980
that will give us the radius and again

595
00:33:13,509 --> 00:33:18,430
that's just a simple construction based

596
00:33:14,980 --> 00:33:21,460
on this we take this fan vector v2 minus

597
00:33:18,430 --> 00:33:23,890
V zero we walk halfway in the middle to

598
00:33:21,460 --> 00:33:26,230
get here and then the radius of course

599
00:33:23,890 --> 00:33:28,030
is just going to be this this is the

600
00:33:26,230 --> 00:33:32,769
diameter so we take the length of that

601
00:33:28,029 --> 00:33:37,509
bat span vector divide it by two and we

602
00:33:32,769 --> 00:33:42,099
get what we wanted all right so just get

603
00:33:37,509 --> 00:33:45,819
ready create a dummy emission there I

604
00:33:42,099 --> 00:33:48,879
don't know why we set this as a v4 it's

605
00:33:45,819 --> 00:33:52,629
not and honestly it's not really a rest

606
00:33:48,880 --> 00:33:53,650
that the recipe is not relevant either

607
00:33:52,630 --> 00:33:55,930
because we're not going to remember

608
00:33:53,650 --> 00:34:01,660
alpha at the moment maybe in the future

609
00:33:55,930 --> 00:34:07,960
we'll take advantage of alpha that would

610
00:34:01,660 --> 00:34:11,760
be like translucency right so yeah maybe

611
00:34:07,960 --> 00:34:11,760
we'll put that in here maybe we'll say

612
00:34:12,030 --> 00:34:29,350
transparency in case we do want it I I'm

613
00:34:27,550 --> 00:34:32,769
going to put this up here and then I'm

614
00:34:29,349 --> 00:34:34,690
going to grab that out from it that way

615
00:34:32,769 --> 00:34:37,030
if we do change their mind about how

616
00:34:34,690 --> 00:34:41,050
that's averaged or anything else we can

617
00:34:37,030 --> 00:34:45,460
change in a central location all right

618
00:34:41,050 --> 00:34:47,800
so let's see here C is not a member of

619
00:34:45,460 --> 00:34:55,449
textured vertex what is it called it's

620
00:34:47,800 --> 00:34:57,700
just called color so that's us getting

621
00:34:55,449 --> 00:34:58,869
our lighting in so now if I run it we

622
00:34:57,699 --> 00:35:01,329
shouldn't see any difference

623
00:34:58,869 --> 00:35:03,400
it's just copying it into that array not

624
00:35:01,329 --> 00:35:05,829
actually modifying at all then we do

625
00:35:03,400 --> 00:35:12,630
copy lighting out you can see here that

626
00:35:05,829 --> 00:35:15,369
we've got our our test stuff running

627
00:35:12,630 --> 00:35:18,640
what I want to do here is have some way

628
00:35:15,369 --> 00:35:20,650
of viewing what we actually created here

629
00:35:18,639 --> 00:35:23,049
because again we could have a bug in

630
00:35:20,650 --> 00:35:25,090
this copy lighting in that would create

631
00:35:23,050 --> 00:35:28,480
reflectors that don't accurately reflect

632
00:35:25,090 --> 00:35:30,789
the world so what I'd rather do rather

633
00:35:28,480 --> 00:35:33,519
than leave everything unadulterated I

634
00:35:30,789 --> 00:35:38,670
would rather go ahead and reconstruct

635
00:35:33,519 --> 00:35:41,860
now the four vertices from our original

636
00:35:38,670 --> 00:35:43,840
lighting data that we created so that

637
00:35:41,860 --> 00:35:47,920
way we can be sure of what we're

638
00:35:43,840 --> 00:35:52,269
actually getting right so let me do here

639
00:35:47,920 --> 00:35:56,200
is recreate these four vertices from the

640
00:35:52,269 --> 00:35:59,230
lighting data so let's take a look here

641
00:35:56,199 --> 00:36:01,359
here is the lighting element which we've

642
00:35:59,230 --> 00:36:02,889
pulled out for this particular quad I'm

643
00:36:01,360 --> 00:36:06,880
going to copy the lighting element data

644
00:36:02,889 --> 00:36:10,359
back into the quad okay so the first

645
00:36:06,880 --> 00:36:13,269
thing we can do is we can say that you

646
00:36:10,360 --> 00:36:18,130
know it's got this the it's got that

647
00:36:13,269 --> 00:36:19,840
reflected color value what's interested

648
00:36:18,130 --> 00:36:22,599
about this what's this thing about this

649
00:36:19,840 --> 00:36:26,470
is like we need some place at this point

650
00:36:22,599 --> 00:36:28,929
to put the lighting so I guess you know

651
00:36:26,469 --> 00:36:30,399
we've got the front emit see the front

652
00:36:28,929 --> 00:36:32,919
emit see is what the light

653
00:36:30,400 --> 00:36:35,108
actually is so I guess for now what we

654
00:36:32,920 --> 00:36:38,798
would say is maybe we'll do like you

655
00:36:35,108 --> 00:36:44,078
know no Casey compute lighting so maybe

656
00:36:38,798 --> 00:36:46,778
in here we actually go through all of

657
00:36:44,079 --> 00:36:51,220
our lighting elements and just copy the

658
00:36:46,778 --> 00:36:54,099
front in the the ref see reflected color

659
00:36:51,219 --> 00:36:56,889
into the front emit see right so this is

660
00:36:54,099 --> 00:36:59,048
as if we were pretending we were doing

661
00:36:56,889 --> 00:37:04,629
some kind of lighting that we're not

662
00:36:59,048 --> 00:37:07,509
really doing right all right so now what

663
00:37:04,630 --> 00:37:08,890
we do our copy lighting out we know that

664
00:37:07,510 --> 00:37:11,740
all of the colors are going to be

665
00:37:08,889 --> 00:37:26,618
whatever the emit color is so those are

666
00:37:11,739 --> 00:37:33,068
all going to be set this way and so

667
00:37:26,619 --> 00:37:38,260
we've got a front emit here that's just

668
00:37:33,068 --> 00:37:42,818
going to be our pack RGB we do have a

669
00:37:38,260 --> 00:37:46,569
pack don't we go to unpack RGB pack

670
00:37:42,818 --> 00:37:50,699
that's what we want so here we'll pack

671
00:37:46,568 --> 00:37:52,528
the front emit from the lighting element

672
00:37:50,699 --> 00:37:55,629
[Applause]

673
00:37:52,528 --> 00:38:00,088
and pack it back in

674
00:37:55,630 --> 00:38:04,150
what is it was a front submit see yeah

675
00:38:00,088 --> 00:38:08,639
and so what we need to reconstruct here

676
00:38:04,150 --> 00:38:08,639
is stuff like the normal in the position

677
00:38:09,329 --> 00:38:13,869
and the UVs we didn't touch so we don't

678
00:38:12,250 --> 00:38:16,119
need to reconstruct those and because

679
00:38:13,869 --> 00:38:17,740
those aren't relevant to lighting so

680
00:38:16,119 --> 00:38:19,900
really what we need to do is use the

681
00:38:17,739 --> 00:38:23,348
element P and the element end here now

682
00:38:19,900 --> 00:38:27,579
the vertices can all take on the element

683
00:38:23,349 --> 00:38:29,318
the normal in this case although one

684
00:38:27,579 --> 00:38:32,349
thing I point out is the normal if we're

685
00:38:29,318 --> 00:38:34,599
computing the lighting we won't be able

686
00:38:32,349 --> 00:38:36,278
to see whether the normal is right or

687
00:38:34,599 --> 00:38:38,680
wrong in any particular way we would

688
00:38:36,278 --> 00:38:40,210
have to draw it so it's really sort of

689
00:38:38,679 --> 00:38:44,058
irrelevant to copy in here so I think

690
00:38:40,210 --> 00:38:46,880
I'll probably skip it although well you

691
00:38:44,059 --> 00:38:49,249
I won't skip it because we can look at

692
00:38:46,880 --> 00:38:51,769
like a normal map in the renderer right

693
00:38:49,248 --> 00:38:54,909
to see if it's roughly correct so maybe

694
00:38:51,768 --> 00:38:58,968
I'll leave it for now

695
00:38:54,909 --> 00:39:00,828
sorry so if you have the the vertex

696
00:38:58,969 --> 00:39:04,219
normals here again they're just copying

697
00:39:00,829 --> 00:39:08,420
out whatever the lighting element had in

698
00:39:04,219 --> 00:39:12,349
it like so and so we've got the colors

699
00:39:08,420 --> 00:39:14,930
here we've got the normal here and all

700
00:39:12,349 --> 00:39:17,989
we really need to do that's any work at

701
00:39:14,929 --> 00:39:23,838
all really is we've got to come up with

702
00:39:17,989 --> 00:39:25,670
the positions so we need to come up with

703
00:39:23,838 --> 00:39:28,578
our three different positions obviously

704
00:39:25,670 --> 00:39:30,289
each of them I'm sorry at 40 positions

705
00:39:28,579 --> 00:39:32,239
each of them is going to be based off

706
00:39:30,289 --> 00:39:35,749
element T which is sort of the center of

707
00:39:32,239 --> 00:39:38,139
this lighting element and we knew we

708
00:39:35,748 --> 00:39:44,958
have a radius so what we can do here is

709
00:39:38,139 --> 00:39:48,400
essentially take our our sprite and the

710
00:39:44,958 --> 00:39:51,038
normal to that and we can go ahead and

711
00:39:48,400 --> 00:39:53,900
blow out you know make it sort of a

712
00:39:51,039 --> 00:40:03,499
diamond shape or something roughly that

713
00:39:53,900 --> 00:40:06,709
size whatever the size that normal is

714
00:40:03,498 --> 00:40:12,198
right so we need two things we need an X

715
00:40:06,708 --> 00:40:14,659
and the y axis in this case and then

716
00:40:12,199 --> 00:40:18,889
when we do V 0 V 1 V 2 V 3 we can sort

717
00:40:14,659 --> 00:40:20,958
of create those by you know doing

718
00:40:18,889 --> 00:40:23,958
something smart here so for example we

719
00:40:20,958 --> 00:40:30,078
can do a plus X or rather let's start

720
00:40:23,958 --> 00:40:32,688
with a minus X now sorts life will start

721
00:40:30,079 --> 00:40:34,579
with a plus X and again what I'm trying

722
00:40:32,688 --> 00:40:36,409
to do here is just draw something out so

723
00:40:34,579 --> 00:40:40,130
let's suppose that we've got the element

724
00:40:36,409 --> 00:40:42,518
P is here right we know that we have a

725
00:40:40,130 --> 00:40:45,588
radius and we know that we have a normal

726
00:40:42,518 --> 00:40:47,808
so what I know about this if I want to

727
00:40:45,588 --> 00:40:49,909
recreate something that sort of shows an

728
00:40:47,809 --> 00:40:52,009
approximate space-filling here with a

729
00:40:49,909 --> 00:40:53,389
quad you know is I'm just going to be

730
00:40:52,009 --> 00:40:56,748
drawing something that looks like this

731
00:40:53,389 --> 00:40:57,559
right inside the the circle what I can

732
00:40:56,748 --> 00:40:59,569
do is say

733
00:40:57,559 --> 00:41:01,699
right I know the radius part which is

734
00:40:59,570 --> 00:41:03,530
how far it is out here so all I really

735
00:41:01,699 --> 00:41:06,829
need to know is what are the x and y

736
00:41:03,530 --> 00:41:09,620
axes of this circle because if I knew

737
00:41:06,829 --> 00:41:13,639
what those were I could just draw a plus

738
00:41:09,619 --> 00:41:17,329
x axis plus y axis minus x axis minus y

739
00:41:13,639 --> 00:41:19,609
axis and get the corners of my sprite

740
00:41:17,329 --> 00:41:22,250
now the reason I can't do that is

741
00:41:19,610 --> 00:41:25,039
because the normal just tells me the

742
00:41:22,250 --> 00:41:26,389
other axis that tells me like the z axis

743
00:41:25,039 --> 00:41:30,079
effectively right if I were to look at

744
00:41:26,389 --> 00:41:33,049
this on a plane sitting in a plane where

745
00:41:30,079 --> 00:41:34,730
I'm saying here's my Y axis here's my x

746
00:41:33,050 --> 00:41:37,550
axis and I'm trying to draw something in

747
00:41:34,730 --> 00:41:39,590
that plane the normal is this right the

748
00:41:37,550 --> 00:41:42,470
normal is the z axis it's the axis we

749
00:41:39,590 --> 00:41:44,750
don't want to draw along so how do I

750
00:41:42,469 --> 00:41:47,299
produce these other two axes well in

751
00:41:44,750 --> 00:41:49,849
this case I can use again the

752
00:41:47,300 --> 00:41:53,900
cross-product to produce some of these

753
00:41:49,849 --> 00:41:56,750
for me since I know that all of the

754
00:41:53,900 --> 00:41:58,430
vectors x and y that I might want and

755
00:41:56,750 --> 00:42:01,250
remember I don't care which I have I

756
00:41:58,429 --> 00:42:03,319
don't just as a circle I don't care what

757
00:42:01,250 --> 00:42:06,639
axes you give me give me any active

758
00:42:03,320 --> 00:42:09,080
doesn't matter as long as they're both

759
00:42:06,639 --> 00:42:10,940
perpendicular to n well we notice the

760
00:42:09,079 --> 00:42:13,009
cross-product like we talked about

761
00:42:10,940 --> 00:42:16,099
before it gives us vectors perpendicular

762
00:42:13,010 --> 00:42:18,620
to other vectors so if we want to if we

763
00:42:16,099 --> 00:42:20,779
just had some other vector we could

764
00:42:18,619 --> 00:42:23,509
cross it with N and we would know that

765
00:42:20,780 --> 00:42:26,810
the result would be perpendicular to n

766
00:42:23,510 --> 00:42:28,430
right we know that that's true so I just

767
00:42:26,809 --> 00:42:30,799
need some other vector if I had any

768
00:42:28,429 --> 00:42:32,809
other vector at all it doesn't matter

769
00:42:30,800 --> 00:42:35,750
what it is I would get one that would be

770
00:42:32,809 --> 00:42:39,980
in this plane and it turns out I could

771
00:42:35,750 --> 00:42:46,010
do this relatively easily right why is

772
00:42:39,980 --> 00:42:48,980
my area so it turns out I can do this

773
00:42:46,010 --> 00:42:51,470
rather easily because actually any since

774
00:42:48,980 --> 00:42:54,619
any vector will do I can just find a

775
00:42:51,469 --> 00:42:57,589
vector that is not pointing too close to

776
00:42:54,619 --> 00:42:59,659
the direction of N cross it and get a

777
00:42:57,590 --> 00:43:03,430
new vector right we'll just call that a

778
00:42:59,659 --> 00:43:06,139
and I know that whatever that vector is

779
00:43:03,429 --> 00:43:10,899
that vector is going to be perpendicular

780
00:43:06,139 --> 00:43:10,900
to n right

781
00:43:11,289 --> 00:43:16,730
that's that's just the definition of the

782
00:43:14,179 --> 00:43:19,429
cross product so once I have a vector

783
00:43:16,730 --> 00:43:22,998
that's perpendicular to to end in that

784
00:43:19,429 --> 00:43:26,778
way I can then say let's just call that

785
00:43:22,998 --> 00:43:29,088
vector the x-axis right so I can say any

786
00:43:26,778 --> 00:43:34,420
vector cross n I could call that the

787
00:43:29,088 --> 00:43:37,909
x-axis I just have to normalize it right

788
00:43:34,420 --> 00:43:41,480
then once I have the x-axis well I know

789
00:43:37,909 --> 00:43:44,298
that if I take the x-axis

790
00:43:41,480 --> 00:43:50,599
cross the z-axis I'll get the negative

791
00:43:44,298 --> 00:43:55,460
y-axis right so negative x cross n is

792
00:43:50,599 --> 00:43:58,369
going to equal to the y-axis right so in

793
00:43:55,460 --> 00:44:03,798
theory if I just do enough cross

794
00:43:58,369 --> 00:44:05,900
products here I will get the thing I

795
00:44:03,798 --> 00:44:10,489
eventually wanted right I could just

796
00:44:05,900 --> 00:44:14,210
keep crossing these vectors until I

797
00:44:10,489 --> 00:44:17,778
generate an active system that's one I

798
00:44:14,210 --> 00:44:19,548
can use right it's pretty

799
00:44:17,778 --> 00:44:22,039
straightforward concept it's just a

800
00:44:19,548 --> 00:44:23,929
little tricky to wrap your head around

801
00:44:22,039 --> 00:44:26,839
when you think about why you can sort of

802
00:44:23,929 --> 00:44:28,759
magically take one vector and turn it

803
00:44:26,838 --> 00:44:31,518
into a full coordinate system just by

804
00:44:28,759 --> 00:44:34,179
repeatedly crossing it over and over and

805
00:44:31,518 --> 00:44:34,179
over again right

806
00:44:40,690 --> 00:44:45,499
but hey that's just how that works

807
00:44:44,179 --> 00:44:51,259
so yes so we should be able to do

808
00:44:45,498 --> 00:44:53,689
something like take a fictitious vector

809
00:44:51,259 --> 00:44:54,798
whatever it is and like I said so we

810
00:44:53,690 --> 00:44:58,699
just need a way of figuring out what

811
00:44:54,798 --> 00:45:00,650
that is so if we have our normal what we

812
00:44:58,699 --> 00:45:02,659
want to avoid like we could just pick

813
00:45:00,650 --> 00:45:06,079
any arbitrary vector we could just say

814
00:45:02,659 --> 00:45:07,639
it's always the z-axis right and then

815
00:45:06,079 --> 00:45:09,109
when we cross it you know I don't know

816
00:45:07,639 --> 00:45:10,489
where the you know maybe the z-axis is

817
00:45:09,108 --> 00:45:12,469
going this direction relative the normal

818
00:45:10,489 --> 00:45:14,778
or something we'd cross it we'd get a

819
00:45:12,469 --> 00:45:17,028
vector out in the plane we'd call that X

820
00:45:14,778 --> 00:45:21,679
we then cross it to get Y and then we'd

821
00:45:17,028 --> 00:45:25,880
be done or whatever right however the

822
00:45:21,679 --> 00:45:28,489
problem with this idea is that what if

823
00:45:25,880 --> 00:45:30,769
the vector that we're trying to start

824
00:45:28,489 --> 00:45:33,739
with the N vector is very close to this

825
00:45:30,768 --> 00:45:35,228
to begin with right if that's the case

826
00:45:33,739 --> 00:45:37,429
then the cross product will degenerate

827
00:45:35,228 --> 00:45:39,139
because since the cross product is

828
00:45:37,429 --> 00:45:41,899
proportional to the sign between the

829
00:45:39,139 --> 00:45:44,028
angles if the angle comes down to zero

830
00:45:41,900 --> 00:45:45,940
the sine goes to zero which means that

831
00:45:44,028 --> 00:45:48,349
we degenerate and lose the ability to

832
00:45:45,940 --> 00:45:50,809
take the cross product at all we get a

833
00:45:48,349 --> 00:45:53,690
zero vector back so what we actually

834
00:45:50,809 --> 00:45:57,410
need to do is take a look at in and see

835
00:45:53,690 --> 00:46:01,759
perhaps whether or not it has a high Z

836
00:45:57,409 --> 00:46:04,338
value right for example what we could do

837
00:46:01,759 --> 00:46:07,519
is say well let's say if the Z value is

838
00:46:04,338 --> 00:46:10,338
higher than point eight in here then

839
00:46:07,518 --> 00:46:13,008
we'll use the y-axis otherwise we'll use

840
00:46:10,338 --> 00:46:15,078
the z axis or maybe we'll just scan for

841
00:46:13,009 --> 00:46:21,498
whichever the lowest one is and we'll

842
00:46:15,079 --> 00:46:23,420
use that one right so what we can do

843
00:46:21,498 --> 00:46:25,218
with there with that is just say look

844
00:46:23,420 --> 00:46:28,789
all right let's take a look at which one

845
00:46:25,219 --> 00:46:33,920
of these would be the best so let's say

846
00:46:28,789 --> 00:46:41,930
that we have if n dot X is less than n

847
00:46:33,920 --> 00:46:42,590
dot Y then if m dot B is less than n dot

848
00:46:41,929 --> 00:46:48,730
X

849
00:46:42,590 --> 00:46:53,150
[Applause]

850
00:46:48,730 --> 00:46:54,559
and in this case we have why so you see

851
00:46:53,150 --> 00:46:56,030
all I'm doing here is just creating a

852
00:46:54,559 --> 00:46:58,610
thing that figures out which one of

853
00:46:56,030 --> 00:47:04,850
these is minimum and so what I'll do is

854
00:46:58,610 --> 00:47:06,829
I'll say min elements and what we'll do

855
00:47:04,849 --> 00:47:10,099
is say alright if n X is less than n Y

856
00:47:06,829 --> 00:47:12,529
then we know that n Y cannot be the

857
00:47:10,099 --> 00:47:14,869
maximum authorized the minimum element

858
00:47:12,530 --> 00:47:17,420
so then we just have to go well is it n

859
00:47:14,869 --> 00:47:20,059
Z if it is then the minimum element is

860
00:47:17,420 --> 00:47:24,320
the second element is the otherwise it's

861
00:47:20,059 --> 00:47:28,400
X right and the same thing would hold

862
00:47:24,320 --> 00:47:35,000
true here either but the only difference

863
00:47:28,400 --> 00:47:37,340
is the minimum element yes the minimum

864
00:47:35,000 --> 00:47:39,590
element would become one instead because

865
00:47:37,340 --> 00:47:41,360
it's Y is the minimum now not X since

866
00:47:39,590 --> 00:47:44,390
we've determined that Y is actually less

867
00:47:41,360 --> 00:47:47,780
right so if we do this we can then say

868
00:47:44,389 --> 00:47:50,779
all right let's take our our base vector

869
00:47:47,780 --> 00:47:54,920
here which is all zeros will then set

870
00:47:50,780 --> 00:47:57,140
the minimum element of whichever one the

871
00:47:54,920 --> 00:47:59,119
normal has a de minimum we'll set that

872
00:47:57,139 --> 00:48:03,159
to one so we're basically picking the

873
00:47:59,119 --> 00:48:06,920
like Cardinal basis that happens to most

874
00:48:03,159 --> 00:48:09,649
be be as far away in terms of magnitude

875
00:48:06,920 --> 00:48:13,280
and I'm sorry in terms of direction from

876
00:48:09,650 --> 00:48:17,260
the normal and then we just start

877
00:48:13,280 --> 00:48:21,769
crossing so first we to get our x-axis

878
00:48:17,260 --> 00:48:23,450
right in this case we want to cross it

879
00:48:21,769 --> 00:48:24,800
doesn't matter which direction we cross

880
00:48:23,449 --> 00:48:26,539
them really because again we don't have

881
00:48:24,800 --> 00:48:28,340
any other definition of this coordinate

882
00:48:26,539 --> 00:48:30,380
system other than it's got to not be and

883
00:48:28,340 --> 00:48:33,559
it's going to not have any component in

884
00:48:30,380 --> 00:48:37,160
N so what I can do is alright let's

885
00:48:33,559 --> 00:48:42,279
cross it first we'll cross the base with

886
00:48:37,159 --> 00:48:49,569
the normal that'll give us our x-axis

887
00:48:42,280 --> 00:48:49,570
then we'll cross the x axis with the

888
00:48:51,489 --> 00:48:57,769
normal again and like I said that's

889
00:48:56,179 --> 00:48:59,569
actually give us some negative why it

890
00:48:57,769 --> 00:49:00,949
doesn't really matter again because for

891
00:48:59,570 --> 00:49:03,530
our purposes we don't care but we just

892
00:49:00,949 --> 00:49:04,819
want to be wound properly so we want to

893
00:49:03,530 --> 00:49:06,470
negate that so that it's going to be the

894
00:49:04,820 --> 00:49:09,760
positive lot and again that's just so

895
00:49:06,469 --> 00:49:12,230
we'll produce a proper winding to them

896
00:49:09,760 --> 00:49:18,020
so once we have these two we basically

897
00:49:12,230 --> 00:49:20,269
want to normalize and we want to

898
00:49:18,019 --> 00:49:22,280
multiply by the radius right whatever

899
00:49:20,269 --> 00:49:25,130
that radius is going to be or we could

900
00:49:22,280 --> 00:49:28,730
do that here right but we might as well

901
00:49:25,130 --> 00:49:33,349
do it bake them into the x and y axis so

902
00:49:28,730 --> 00:49:36,920
we take the element radius and we put

903
00:49:33,349 --> 00:49:40,719
those in here then we've again just got

904
00:49:36,920 --> 00:49:44,139
a pretty straightforward process to

905
00:49:40,719 --> 00:49:55,929
create the diamond and off we go

906
00:49:44,139 --> 00:50:00,049
got to grab that end from somewhere and

907
00:49:55,929 --> 00:50:06,829
oh and these are VIII's so actually we

908
00:50:00,050 --> 00:50:09,140
just want to do yeah so we probably

909
00:50:06,829 --> 00:50:11,239
don't want to change the Z bias in this

910
00:50:09,139 --> 00:50:14,029
case which makes it a little bit tricky

911
00:50:11,239 --> 00:50:15,799
because we factored the Z bias in

912
00:50:14,030 --> 00:50:18,350
already

913
00:50:15,800 --> 00:50:21,260
so the Z bias value is going to be kind

914
00:50:18,349 --> 00:50:22,880
of erroneous which is unfortunate but

915
00:50:21,260 --> 00:50:25,060
that's just the way it is I guess in

916
00:50:22,880 --> 00:50:25,059
this case

917
00:50:25,159 --> 00:50:28,389
[Applause]

918
00:50:30,570 --> 00:50:41,830
so I think what I would like to do here

919
00:50:33,280 --> 00:50:44,170
is just zero out the Z bias so we're

920
00:50:41,829 --> 00:50:46,799
just looking at the actual reflectors

921
00:50:44,170 --> 00:50:46,800
themselves

922
00:50:50,469 --> 00:50:53,689
[Applause]

923
00:51:01,050 --> 00:51:06,249
[Applause]

924
00:51:07,059 --> 00:51:19,219
alright not great not a very auspicious

925
00:51:14,989 --> 00:51:20,619
start for being honest about it but that

926
00:51:19,219 --> 00:51:27,379
basically what we're looking at here

927
00:51:20,619 --> 00:51:35,989
right so let's take a look here let's

928
00:51:27,380 --> 00:51:49,640
first just get rid of the positional

929
00:51:35,989 --> 00:51:52,159
part of things all right so we've got

930
00:51:49,639 --> 00:51:54,079
first a problem with color which is sort

931
00:51:52,159 --> 00:51:56,929
of separate from the positional

932
00:51:54,079 --> 00:51:58,039
debugging the positional creation so in

933
00:51:56,929 --> 00:51:59,839
order to compute the lighting here where

934
00:51:58,039 --> 00:52:01,630
we create the front emit see and take

935
00:51:59,840 --> 00:52:10,400
the ref see for some reason we're not

936
00:52:01,630 --> 00:52:12,140
properly passing through the color which

937
00:52:10,400 --> 00:52:13,430
is odd right because what should be

938
00:52:12,139 --> 00:52:20,679
happening here is right we get the

939
00:52:13,429 --> 00:52:23,569
elements from the clawed index here and

940
00:52:20,679 --> 00:52:25,250
each time we should be passing you know

941
00:52:23,570 --> 00:52:27,610
taking whatever that color when we

942
00:52:25,250 --> 00:52:30,739
unpack the color of the first vertex

943
00:52:27,610 --> 00:52:33,320
which should always be proper something

944
00:52:30,739 --> 00:52:35,479
you know fairly bright we're taking the

945
00:52:33,320 --> 00:52:38,809
RGB of that and we're putting that into

946
00:52:35,480 --> 00:52:40,670
the the reference color we're then

947
00:52:38,809 --> 00:52:42,769
copying the reference color into the

948
00:52:40,670 --> 00:52:44,329
front emit color for each individual

949
00:52:42,769 --> 00:52:46,250
element right we loop over them all and

950
00:52:44,329 --> 00:52:48,259
this is just pretending we actually did

951
00:52:46,250 --> 00:52:49,519
some lighting we didn't we're just

952
00:52:48,260 --> 00:52:50,600
taking the reflected color and

953
00:52:49,519 --> 00:52:53,539
pretending that that's what you actually

954
00:52:50,599 --> 00:52:55,420
see coming off of the surface however

955
00:52:53,539 --> 00:52:59,389
that right that should basically

956
00:52:55,420 --> 00:53:01,039
reconstruct whatever the reflected color

957
00:52:59,389 --> 00:53:03,589
was or this thing that we unpacked from

958
00:53:01,039 --> 00:53:07,579
from vertex zero so then when we go to

959
00:53:03,590 --> 00:53:10,340
copy it back in here where we do our

960
00:53:07,579 --> 00:53:11,000
front emit 32 we set the colors for each

961
00:53:10,340 --> 00:53:14,510
of those two

962
00:53:11,000 --> 00:53:16,130
that when we go to packet we're taking

963
00:53:14,510 --> 00:53:18,440
the front emit color which again we

964
00:53:16,130 --> 00:53:21,710
should have taken and copied vertex

965
00:53:18,440 --> 00:53:23,539
zeros information into their right here

966
00:53:21,710 --> 00:53:26,630
is where that should have happened so

967
00:53:23,539 --> 00:53:29,630
coming back around we should end up with

968
00:53:26,630 --> 00:53:33,980
this being pretty much correct I'm not

969
00:53:29,630 --> 00:53:41,210
sure what's going on there so let's go

970
00:53:33,980 --> 00:53:43,699
ahead and not do that because there are

971
00:53:41,210 --> 00:53:46,099
the actual colors so we're doing

972
00:53:43,699 --> 00:53:49,989
something wrong in terms of the copying

973
00:53:46,099 --> 00:53:53,119
that out so let's first take the element

974
00:53:49,989 --> 00:53:55,069
front emit see and verify that the fact

975
00:53:53,119 --> 00:53:57,019
that we're not setting the front emit

976
00:53:55,070 --> 00:54:00,980
see properly so suppose I set that to

977
00:53:57,019 --> 00:54:02,360
white everything should be white what

978
00:54:00,980 --> 00:54:11,750
does the same terms going to go into

979
00:54:02,360 --> 00:54:15,559
function and ooh whoops okay that's the

980
00:54:11,750 --> 00:54:20,139
mistake I forgot about the fact that

981
00:54:15,559 --> 00:54:20,139
these are actually functions that we use

982
00:54:24,699 --> 00:54:30,250
yeah that's not great I admit that

983
00:54:31,690 --> 00:54:40,309
that's not not my best idea if we're

984
00:54:35,929 --> 00:54:42,500
honest about that not my best idea let

985
00:54:40,309 --> 00:54:45,400
me go ahead and plate replace v-0 with

986
00:54:42,500 --> 00:54:45,400
virzi row here

987
00:54:50,489 --> 00:54:55,769
and then I'll replace V 2 with invert 2

988
00:54:59,969 --> 00:55:06,569
if only the compiler knew what I meant

989
00:55:02,800 --> 00:55:06,570
and not what I said

990
00:55:07,500 --> 00:55:14,170
wouldn't that mean wonders what like the

991
00:55:12,489 --> 00:55:23,049
artificially attentive intelligent

992
00:55:14,170 --> 00:55:25,659
compiler I can't do that days all right

993
00:55:23,050 --> 00:55:28,570
[Applause]

994
00:55:25,659 --> 00:55:30,399
so I'm just verifying here that it's ok

995
00:55:28,570 --> 00:55:34,750
so that's what I want to see so it's not

996
00:55:30,400 --> 00:55:36,970
that it's actually this pack that's

997
00:55:34,750 --> 00:55:39,940
problematic here or the transparency

998
00:55:36,969 --> 00:55:43,959
value right so something about what

999
00:55:39,940 --> 00:55:46,599
we're doing here is bogus or or in here

1000
00:55:43,960 --> 00:55:48,639
or whatever else right so that's good

1001
00:55:46,599 --> 00:55:51,549
because I was trying I was like I don't

1002
00:55:48,639 --> 00:55:53,529
see how this is possibly messing up so

1003
00:55:51,550 --> 00:55:56,289
that's actually quite nice that it's not

1004
00:55:53,530 --> 00:55:59,230
messing up potentially it's actually

1005
00:55:56,289 --> 00:56:01,509
something different happening here so

1006
00:55:59,230 --> 00:56:02,619
let me just go ahead and take a look at

1007
00:56:01,510 --> 00:56:08,350
what's happening there in the debugger

1008
00:56:02,619 --> 00:56:12,329
to see what got messed up oh you know

1009
00:56:08,349 --> 00:56:16,019
what I know what it is RGB pack is

1010
00:56:12,329 --> 00:56:16,019
assumes they're qg5

1011
00:56:23,530 --> 00:56:28,890
yeah

1012
00:56:26,130 --> 00:56:31,710
yep yep so you can see here these are

1013
00:56:28,889 --> 00:56:34,498
just for packing color values that are

1014
00:56:31,710 --> 00:56:39,630
non-normalized we don't have a pack

1015
00:56:34,498 --> 00:56:55,828
unpack that the fix is that I don't

1016
00:56:39,630 --> 00:56:57,720
think yeah so we don't really have one

1017
00:56:55,829 --> 00:57:02,910
of those so basically what happens here

1018
00:56:57,719 --> 00:57:06,868
is when we unpack these colors right

1019
00:57:02,909 --> 00:57:10,409
here this unpack is not going to divide

1020
00:57:06,869 --> 00:57:16,769
the colors by 255 so we need to

1021
00:57:10,409 --> 00:57:20,598
basically do you know this so that we

1022
00:57:16,768 --> 00:57:23,909
will get back proper zero to one colors

1023
00:57:20,599 --> 00:57:25,410
and then when we go to pack them again

1024
00:57:23,909 --> 00:57:27,509
we need to do the opposite of that

1025
00:57:25,409 --> 00:57:33,989
because they're not going to be based

1026
00:57:27,509 --> 00:57:37,199
off the two to five properly furthermore

1027
00:57:33,989 --> 00:57:39,119
here the transparency is not going to be

1028
00:57:37,199 --> 00:57:43,439
correct either so we could say like to

1029
00:57:39,119 --> 00:57:46,380
do casey remove the premultiplied alpha

1030
00:57:43,440 --> 00:57:49,700
dice here if we want to start handling

1031
00:57:46,380 --> 00:57:52,559
transparency in the reflections as well

1032
00:57:49,699 --> 00:57:54,929
so yeah so right here what's going to

1033
00:57:52,559 --> 00:57:56,940
happen is during the front emit this RGB

1034
00:57:54,929 --> 00:57:58,528
pack again this is going to pack down

1035
00:57:56,940 --> 00:58:01,559
things that expect to be in the two to

1036
00:57:58,528 --> 00:58:05,338
five range so it would need to multiply

1037
00:58:01,559 --> 00:58:10,369
that out again in order to get the 0 to

1038
00:58:05,338 --> 00:58:10,369
255 values now since they're clamped

1039
00:58:13,170 --> 00:58:19,318
no they're rounded so that's fine that's

1040
00:58:17,068 --> 00:58:21,619
probably fine for our purposes at least

1041
00:58:19,318 --> 00:58:21,619
at the moment

1042
00:58:28,820 --> 00:58:34,580
all right uh getting a little closer but

1043
00:58:31,219 --> 00:58:38,209
still not there yet so when we let me go

1044
00:58:34,579 --> 00:58:46,239
ahead and again take the front omit C

1045
00:58:38,210 --> 00:58:46,240
out of the equation there and yeah

1046
00:58:48,039 --> 00:58:51,039
perfect

1047
00:58:51,679 --> 00:58:59,239
so looks like this is correct now but it

1048
00:58:56,000 --> 00:59:04,940
looks like this one isn't so when we

1049
00:58:59,239 --> 00:59:06,619
unpack the color should be dry 35 I so I

1050
00:59:04,940 --> 00:59:14,269
assume that that's correct

1051
00:59:06,619 --> 00:59:17,299
please double check that yeah so these

1052
00:59:14,269 --> 00:59:21,019
would these would come out 0 to 255 for

1053
00:59:17,300 --> 00:59:23,539
sure so I feel like that's correct

1054
00:59:21,019 --> 00:59:27,880
let me again take a quick look at that

1055
00:59:23,539 --> 00:59:27,880
code I want to be what I'm getting there

1056
00:59:51,949 --> 00:59:56,608
all right so what I'm gonna do is I'm

1057
00:59:53,849 --> 01:00:00,539
gonna look at vero here and I'm gonna

1058
00:59:56,608 --> 01:00:02,190
look at the color see the color there

1059
01:00:00,539 --> 01:00:04,380
and then I'm going to look at what the

1060
01:00:02,190 --> 01:00:17,490
elements reflected color is computed to

1061
01:00:04,380 --> 01:00:23,780
be um and that looks roughly correct

1062
01:00:17,489 --> 01:00:23,779
right and actually won't stop it anymore

1063
01:00:32,869 --> 01:00:39,750
you see a lot of those are quite

1064
01:00:38,190 --> 01:00:42,240
reasonable they're exactly what we

1065
01:00:39,750 --> 01:00:46,230
respect to see so all that looks pretty

1066
01:00:42,239 --> 01:00:47,459
reasonable to me let's go through here

1067
01:00:46,230 --> 01:00:49,769
and see what starts happening when we

1068
01:00:47,460 --> 01:00:50,670
set these front emission colors I'm

1069
01:00:49,769 --> 01:01:00,239
going to go ahead and look at the

1070
01:00:50,670 --> 01:01:07,858
elements array ah typo there we go and

1071
01:01:00,239 --> 01:01:09,919
now I think we should be good to go all

1072
01:01:07,858 --> 01:01:09,920
right

1073
01:01:13,909 --> 01:01:20,190
all right so now we need to actually get

1074
01:01:17,789 --> 01:01:23,429
the rest of this working with our

1075
01:01:20,190 --> 01:01:25,320
positional information so the next step

1076
01:01:23,429 --> 01:01:27,059
is to fix of that right so you can see

1077
01:01:25,320 --> 01:01:29,430
we don't have our position stuff coming

1078
01:01:27,059 --> 01:01:32,759
in correctly here so let's step through

1079
01:01:29,429 --> 01:01:39,358
this and see what we've got and try to

1080
01:01:32,760 --> 01:01:42,869
make make this part reasonable so I'm

1081
01:01:39,358 --> 01:01:45,389
going to go ahead and step in here just

1082
01:01:42,869 --> 01:01:48,690
to see what sort of values we are ending

1083
01:01:45,389 --> 01:01:51,739
up with just to get a hint of what work

1084
01:01:48,690 --> 01:01:51,740
what we're looking at

1085
01:02:04,880 --> 01:02:14,239
so it looks like that's another type

1086
01:02:08,599 --> 01:02:18,079
though I'm not very awake this morning

1087
01:02:14,239 --> 01:02:23,539
am i there's a lot of typos in here try

1088
01:02:18,079 --> 01:02:26,720
that one more time that's not looking

1089
01:02:23,539 --> 01:02:34,190
great so these should not be zeroed out

1090
01:02:26,719 --> 01:02:40,838
so what's going on with that my base

1091
01:02:34,190 --> 01:02:43,940
vector and my normal this looks like I

1092
01:02:40,838 --> 01:02:45,949
did this totally wrong here so let's

1093
01:02:43,940 --> 01:02:47,720
figure out what's going on here so we've

1094
01:02:45,949 --> 01:02:50,989
got our normal vector our normal vector

1095
01:02:47,719 --> 01:02:55,578
is 0 negative 1 ah

1096
01:02:50,989 --> 01:02:58,190
that's that's my problem I forgot these

1097
01:02:55,579 --> 01:03:01,519
need to be absolute valued right because

1098
01:02:58,190 --> 01:03:04,099
they could still be negative which is

1099
01:03:01,518 --> 01:03:06,048
which is not at all what we want so I

1100
01:03:04,099 --> 01:03:11,028
actually need the magnitude of each of

1101
01:03:06,048 --> 01:03:15,400
these so yeah so what I want to do there

1102
01:03:11,028 --> 01:03:15,400
is I want to have a way of saying

1103
01:03:16,210 --> 01:03:19,409
[Applause]

1104
01:03:23,889 --> 01:03:47,539
probably something like this and that

1105
01:03:42,588 --> 01:03:50,539
way I will know definitively which one

1106
01:03:47,539 --> 01:03:52,599
is the minimum magnitude not minimum

1107
01:03:50,539 --> 01:03:55,599
value because those aren't the same

1108
01:03:52,599 --> 01:03:55,599
right

1109
01:04:01,949 --> 01:04:11,009
okay if so then this can still use the

1110
01:04:07,818 --> 01:04:15,960
the vertex end in that case and I think

1111
01:04:11,010 --> 01:04:20,190
we're all good and now we'll see how

1112
01:04:15,960 --> 01:04:24,480
we're doing on values all right so those

1113
01:04:20,190 --> 01:04:32,400
are looking nice that looks like roughly

1114
01:04:24,480 --> 01:04:38,039
what I would expect let's see how we're

1115
01:04:32,400 --> 01:04:45,480
doing here all right so close but no

1116
01:04:38,039 --> 01:04:50,489
cigar so I guess I don't remember which

1117
01:04:45,480 --> 01:04:53,699
way we decided to make our quads go I

1118
01:04:50,489 --> 01:05:02,389
think it's probably a case that we have

1119
01:04:53,699 --> 01:05:02,389
them let's take a look at push quad here

1120
01:05:03,289 --> 01:05:10,469
yes so with three zero to one so

1121
01:05:06,989 --> 01:05:12,868
basically the way that we've got it here

1122
01:05:10,469 --> 01:05:17,279
is assuming that it's a laund quad but

1123
01:05:12,869 --> 01:05:20,010
that this is a tri stripped basically

1124
01:05:17,280 --> 01:05:21,720
right it's how we're outputting them so

1125
01:05:20,010 --> 01:05:23,339
in order to output those correctly what

1126
01:05:21,719 --> 01:05:27,929
we need to do is we need to do it in

1127
01:05:23,338 --> 01:05:34,048
that order right we need to do three

1128
01:05:27,929 --> 01:05:38,098
zero you know or yeah three zero to 1

1129
01:05:34,048 --> 01:05:40,318
instead of 0 1 2 3 so if we want to do

1130
01:05:38,099 --> 01:05:46,710
it that way that's not such a big deal

1131
01:05:40,318 --> 01:05:47,460
right like here's three here's 0 2

1132
01:05:46,710 --> 01:05:49,920
there's one

1133
01:05:47,460 --> 01:05:54,230
so that's the actual order then I guess

1134
01:05:49,920 --> 01:05:56,490
that it would expect to be shown in and

1135
01:05:54,230 --> 01:05:59,099
there's our little diamond reflectors

1136
01:05:56,489 --> 01:06:04,939
and and they're looking pretty accurate

1137
01:05:59,099 --> 01:06:07,740
to me I guess it's a little hard to say

1138
01:06:04,940 --> 01:06:10,619
in some of these but let's go ahead and

1139
01:06:07,739 --> 01:06:12,649
send the camera around and see what we

1140
01:06:10,619 --> 01:06:12,650
think

1141
01:06:19,969 --> 01:06:29,769
so here's the world ostensibly I don't

1142
01:06:24,079 --> 01:06:29,769
know what those giant pink ones are I

1143
01:06:30,460 --> 01:06:34,670
think those might be the bounding boxes

1144
01:06:33,199 --> 01:06:37,750
which we'll probably have to make sure

1145
01:06:34,670 --> 01:06:37,750
we remove from this

1146
01:06:48,210 --> 01:06:55,960
so it looks like we're not quite correct

1147
01:06:52,659 --> 01:06:59,368
here though because like for example if

1148
01:06:55,960 --> 01:07:01,090
you take a look at these cubes now

1149
01:06:59,369 --> 01:07:08,880
actually know what that does look

1150
01:07:01,090 --> 01:07:18,309
correct because the cubes are not square

1151
01:07:08,880 --> 01:07:21,820
so that part's alright so that does look

1152
01:07:18,309 --> 01:07:25,840
roughly correct to me these giant pink

1153
01:07:21,820 --> 01:07:28,059
reflectors are a problem and we kind of

1154
01:07:25,840 --> 01:07:29,440
need to make sure that those aren't in

1155
01:07:28,059 --> 01:07:40,858
there when we're doing the lighting

1156
01:07:29,440 --> 01:07:43,539
testing right the problem with those is

1157
01:07:40,858 --> 01:07:44,380
you know where those are coming from let

1158
01:07:43,539 --> 01:07:48,130
me just copy

1159
01:07:44,380 --> 01:07:53,829
let me just a nerf out the the copy out

1160
01:07:48,130 --> 01:08:00,640
so we can see what that is so if you

1161
01:07:53,829 --> 01:08:03,358
take a look here I let me zoom out you

1162
01:08:00,639 --> 01:08:06,429
can see that there's that pink sort of

1163
01:08:03,358 --> 01:08:08,500
band that just shows like the simulation

1164
01:08:06,429 --> 01:08:11,799
region bounds it's a debug it's a piece

1165
01:08:08,500 --> 01:08:14,199
of debug information and the same is

1166
01:08:11,800 --> 01:08:18,460
true of the yellow square there so in

1167
01:08:14,199 --> 01:08:20,949
both cases those are going to be long

1168
01:08:18,460 --> 01:08:23,649
thin rectangles that makes it appear

1169
01:08:20,949 --> 01:08:33,789
like they have an extremely large you

1170
01:08:23,649 --> 01:08:36,068
know radius but the radius isn't

1171
01:08:33,789 --> 01:08:37,778
actually that large right it's like we

1172
01:08:36,069 --> 01:08:42,609
wouldn't really want to represent it by

1173
01:08:37,779 --> 01:08:44,770
a giant reflector like that so it's

1174
01:08:42,609 --> 01:08:46,630
unclear exactly how we would handle that

1175
01:08:44,770 --> 01:08:48,790
case we don't really have to because

1176
01:08:46,630 --> 01:08:53,529
it's debug but you know you can see that

1177
01:08:48,789 --> 01:08:55,060
that's a little bit of a of an issue one

1178
01:08:53,529 --> 01:08:56,589
thing that we could do here is we could

1179
01:08:55,060 --> 01:08:59,719
set up a little bit of a guard for that

1180
01:08:56,588 --> 01:09:08,448
we could say all right let's grab

1181
01:08:59,719 --> 01:09:09,980
vertex one out as well and compute it we

1182
01:09:08,448 --> 01:09:13,548
could do say all right let's take a look

1183
01:09:09,979 --> 01:09:20,929
at those two so there's a check span

1184
01:09:13,548 --> 01:09:23,238
here where we take both of these so we

1185
01:09:20,930 --> 01:09:38,690
get that span out let's put the color

1186
01:09:23,238 --> 01:09:40,218
stuff in a different location so when

1187
01:09:38,689 --> 01:09:42,048
we're computing the position and the

1188
01:09:40,219 --> 01:09:45,829
radius here we could do is say alright

1189
01:09:42,048 --> 01:09:48,409
let's look at this check whatever that

1190
01:09:45,829 --> 01:09:53,180
check is and say that whatever the side

1191
01:09:48,409 --> 01:09:55,579
length is as opposed to the diagonal

1192
01:09:53,180 --> 01:09:57,739
maybe we just say that you know you

1193
01:09:55,579 --> 01:10:07,100
can't be more than twice the side length

1194
01:09:57,738 --> 01:10:09,439
or something like this so we would know

1195
01:10:07,100 --> 01:10:11,810
you know going from zero to one is one

1196
01:10:09,439 --> 01:10:13,189
side of the quadrilateral going from

1197
01:10:11,810 --> 01:10:16,370
zero to three would be the other one

1198
01:10:13,189 --> 01:10:17,689
maybe we take those two and average them

1199
01:10:16,369 --> 01:10:19,279
or something like that in fact that

1200
01:10:17,689 --> 01:10:22,069
seems like four take whichever the

1201
01:10:19,279 --> 01:10:24,469
smaller of the two is as the reflector

1202
01:10:22,069 --> 01:10:26,750
or something like that that seems like a

1203
01:10:24,469 --> 01:10:31,399
better plan maybe to avoid the large the

1204
01:10:26,750 --> 01:10:38,960
eccentricity I could do that let's let's

1205
01:10:31,399 --> 01:10:45,679
maybe let's try that so what this would

1206
01:10:38,960 --> 01:10:48,500
be here is I've got you know two

1207
01:10:45,680 --> 01:10:50,989
different versions of the span and what

1208
01:10:48,500 --> 01:10:58,219
I can do there should say look whatever

1209
01:10:50,988 --> 01:11:04,599
the to find the center I'll just go

1210
01:10:58,219 --> 01:11:04,600
halfway on each of them is that is good

1211
01:11:05,770 --> 01:11:11,350
I don't know if that is good is having

1212
01:11:09,789 --> 01:11:26,560
the other one so maybe actually still do

1213
01:11:11,350 --> 01:11:27,910
all of them can't hurt us goes again

1214
01:11:26,560 --> 01:11:30,400
we're not super trying to be efficient

1215
01:11:27,909 --> 01:11:34,210
here we're just trying to play with the

1216
01:11:30,399 --> 01:11:36,069
problems that make sense so yeah I can

1217
01:11:34,210 --> 01:11:37,840
do spam to zero for it but then maybe

1218
01:11:36,069 --> 01:11:40,359
when we actually compute the radius what

1219
01:11:37,840 --> 01:11:46,119
we'll say is we'll take whichever one is

1220
01:11:40,359 --> 01:11:51,399
the minimum of the two sides so we'll

1221
01:11:46,119 --> 01:11:53,769
look at 33 zero and one zero as the two

1222
01:11:51,399 --> 01:11:56,049
sides of the quadrilateral emanating

1223
01:11:53,770 --> 01:11:58,030
from the base vertex and we'll take

1224
01:11:56,050 --> 01:12:02,860
whichever one is the lesser of the two

1225
01:11:58,029 --> 01:12:12,519
gotta put in the copy

1226
01:12:02,859 --> 01:12:14,380
oops so here we go now we're not using

1227
01:12:12,520 --> 01:12:18,100
that span to zero for anything other

1228
01:12:14,380 --> 01:12:20,590
than the policemen of the centre and you

1229
01:12:18,100 --> 01:12:23,050
can kind of see what that amounts to so

1230
01:12:20,590 --> 01:12:29,250
you know there's the trees and the

1231
01:12:23,050 --> 01:12:29,250
ground and and and and all that right

1232
01:12:30,239 --> 01:12:39,429
now for some reason we're still getting

1233
01:12:35,199 --> 01:12:46,720
large and then why we'd be getting such

1234
01:12:39,430 --> 01:12:50,670
large comparisons there because at least

1235
01:12:46,720 --> 01:12:50,670
in theory I feel like

1236
01:12:52,920 --> 01:12:57,359
half of the side lengths if we're taking

1237
01:12:56,010 --> 01:12:59,969
the smallest side length

1238
01:12:57,359 --> 01:13:10,259
there should be no way for the thing to

1239
01:12:59,969 --> 01:13:18,260
be there should be no way for it to be

1240
01:13:10,260 --> 01:13:20,070
that long you know I'm saying to you

1241
01:13:18,260 --> 01:13:21,630
there shouldn't be it you shouldn't be

1242
01:13:20,069 --> 01:13:26,819
able to produce some producing something

1243
01:13:21,630 --> 01:13:30,000
so long as that at least not if this

1244
01:13:26,819 --> 01:13:32,009
radius is to be believed this this

1245
01:13:30,000 --> 01:13:33,448
should never be something quite so huge

1246
01:13:32,010 --> 01:13:37,679
is that I mean that thing looks like you

1247
01:13:33,448 --> 01:13:39,210
know 20 meters or something like this in

1248
01:13:37,679 --> 01:13:41,609
the world which is way more than it

1249
01:13:39,210 --> 01:13:45,810
should be so we if we're looking for the

1250
01:13:41,609 --> 01:13:51,079
minimum of those two of the the three to

1251
01:13:45,810 --> 01:13:56,130
zero and the zero to one I don't see how

1252
01:13:51,079 --> 01:13:58,559
oh this is this is me being stupid again

1253
01:13:56,130 --> 01:14:01,880
it's because the winding order of these

1254
01:13:58,560 --> 01:14:06,449
vertices is not that order

1255
01:14:01,880 --> 01:14:08,880
remember they yeah they go 0 1 2 3 so

1256
01:14:06,448 --> 01:14:12,919
they're in yeah they're in exactly the

1257
01:14:08,880 --> 01:14:17,840
wrong order so they would have to go 0 1

1258
01:14:12,920 --> 01:14:21,109
3 2 is actually how they would be wound

1259
01:14:17,840 --> 01:14:25,590
if we actually wanted to put them in

1260
01:14:21,109 --> 01:14:27,299
correct winding order I don't know how

1261
01:14:25,590 --> 01:14:29,460
much of a difference that would make but

1262
01:14:27,300 --> 01:14:30,869
yeah there we go so that fixes it and so

1263
01:14:29,460 --> 01:14:33,149
then you just get these little tiny

1264
01:14:30,868 --> 01:14:35,009
reflectors into the debug thing which is

1265
01:14:33,149 --> 01:14:37,289
what I would actually want all right

1266
01:14:35,010 --> 01:14:39,150
yeah that whole winding thing is

1267
01:14:37,289 --> 01:14:41,250
annoying and that's just because of the

1268
01:14:39,149 --> 01:14:43,908
way we sort of hacked the the output of

1269
01:14:41,250 --> 01:14:43,908
those but

1270
01:14:48,238 --> 01:14:53,408
alright so there's some interesting

1271
01:14:51,849 --> 01:14:55,269
things about this that you can sort of

1272
01:14:53,408 --> 01:14:56,859
see already which is that you know if

1273
01:14:55,269 --> 01:14:59,050
you imagine these things were actually

1274
01:14:56,859 --> 01:15:02,078
discs which they're not at the moment

1275
01:14:59,050 --> 01:15:04,630
but you can kind of see how that's not

1276
01:15:02,078 --> 01:15:06,248
the greatest approximation for what's

1277
01:15:04,630 --> 01:15:08,889
happening in terms of bouncing the light

1278
01:15:06,248 --> 01:15:10,809
legging around because whenever you have

1279
01:15:08,889 --> 01:15:14,859
looked long and skinny things you sort

1280
01:15:10,809 --> 01:15:18,010
of end up with that problem of not

1281
01:15:14,859 --> 01:15:21,069
really having sufficient coverage right

1282
01:15:18,010 --> 01:15:23,498
but you'd want a bigger lighting element

1283
01:15:21,069 --> 01:15:26,469
there now you know maybe we can

1284
01:15:23,498 --> 01:15:29,979
eventually expand our notion of how

1285
01:15:26,469 --> 01:15:35,590
these things work to be more about quads

1286
01:15:29,979 --> 01:15:37,509
and less about about this but at the

1287
01:15:35,590 --> 01:15:39,998
moment since we were kind of taking a

1288
01:15:37,510 --> 01:15:42,550
look at basing what we were doing a

1289
01:15:39,998 --> 01:15:45,158
little bit off of the old disc lighting

1290
01:15:42,550 --> 01:15:47,199
transfer stuff for now it makes some

1291
01:15:45,158 --> 01:15:49,420
sense for us to do it as disks just to

1292
01:15:47,198 --> 01:15:52,149
see if we can get that working a little

1293
01:15:49,420 --> 01:15:54,819
bit better but again yeah I don't know

1294
01:15:52,149 --> 01:15:59,408
how how plausible that's really going to

1295
01:15:54,819 --> 01:16:01,960
be and we could always make them a

1296
01:15:59,408 --> 01:16:06,879
little bit larger in terms of reflectors

1297
01:16:01,960 --> 01:16:13,359
how big they should be again I don't

1298
01:16:06,880 --> 01:16:15,880
know stretch it all right I don't know

1299
01:16:13,359 --> 01:16:17,799
how much time we got here we end in what

1300
01:16:15,880 --> 01:16:22,059
25 minutes I guess

1301
01:16:17,800 --> 01:16:24,909
like this yeah so from here now what I'd

1302
01:16:22,059 --> 01:16:27,219
like to do is I would like to figure out

1303
01:16:24,908 --> 01:16:31,839
one of these ones we can use as an

1304
01:16:27,219 --> 01:16:33,399
emitter and the test emitter so let's

1305
01:16:31,840 --> 01:16:34,659
randomly try to pick the hero I don't

1306
01:16:33,399 --> 01:16:35,329
know that we are going to be able to do

1307
01:16:34,658 --> 01:16:38,460
that

1308
01:16:35,329 --> 01:16:38,460
[Music]

1309
01:16:40,619 --> 01:16:47,279
I think how we do that we specifying a

1310
01:16:44,460 --> 01:16:49,710
lighting as sort of a constant position

1311
01:16:47,279 --> 01:16:51,960
we don't really have a way of doing that

1312
01:16:49,710 --> 01:16:54,149
here what I guess what I could do is add

1313
01:16:51,960 --> 01:16:58,770
a synthetic lighting element onto the

1314
01:16:54,149 --> 01:17:00,299
end of the lighting element array so one

1315
01:16:58,770 --> 01:17:04,310
way of doing that would be to say

1316
01:17:00,300 --> 01:17:07,770
alright suppose there's an element count

1317
01:17:04,310 --> 01:17:15,090
and the element count is actually going

1318
01:17:07,770 --> 01:17:20,940
to be the the quad count but it's going

1319
01:17:15,090 --> 01:17:24,680
to be the quad count plus one and then

1320
01:17:20,939 --> 01:17:24,679
what we'll do from there is we'll say

1321
01:17:25,729 --> 01:17:32,009
that they'll be a synthetic element that

1322
01:17:30,270 --> 01:17:35,250
will use it'll have that lighting

1323
01:17:32,010 --> 01:17:36,989
information in it so we've got the the

1324
01:17:35,250 --> 01:17:39,199
current quads right we've got the sort

1325
01:17:36,989 --> 01:17:42,210
of the sort of last setup information

1326
01:17:39,199 --> 01:17:45,720
and the render setup has the debug light

1327
01:17:42,210 --> 01:17:47,489
in it this debug light key right here so

1328
01:17:45,720 --> 01:17:49,380
what we could do is use that debug light

1329
01:17:47,489 --> 01:17:51,869
P to create a synthetic one of these

1330
01:17:49,380 --> 01:17:54,930
that's just our light source and we can

1331
01:17:51,869 --> 01:17:58,409
move the light source around so what we

1332
01:17:54,930 --> 01:18:00,380
can do there is say yeah like all of

1333
01:17:58,409 --> 01:18:04,470
these we're not going to do this

1334
01:18:00,380 --> 01:18:07,109
emission thing anymore when I run this

1335
01:18:04,470 --> 01:18:13,770
right you can see that we we don't have

1336
01:18:07,109 --> 01:18:15,119
any of these lit at all and so then what

1337
01:18:13,770 --> 01:18:16,680
we could do is we could say that there's

1338
01:18:15,119 --> 01:18:17,880
less pathetic light source in here I

1339
01:18:16,680 --> 01:18:19,320
guess maybe I don't even have to do it

1340
01:18:17,880 --> 01:18:23,940
that way I could just use the people at

1341
01:18:19,319 --> 01:18:26,069
white P temporarily as some kind of an

1342
01:18:23,939 --> 01:18:27,659
approximation oh you know what I'll do

1343
01:18:26,069 --> 01:18:29,429
here's what I'll do I'll take the

1344
01:18:27,659 --> 01:18:36,630
distance to it so I'll say all right

1345
01:18:29,430 --> 01:18:38,970
your front emit is zero however will

1346
01:18:36,630 --> 01:18:41,840
basically say that if the distance

1347
01:18:38,970 --> 01:18:41,840
between you

1348
01:18:43,239 --> 01:18:50,639
[Applause]

1349
01:18:46,909 --> 01:18:54,750
like what's your position right so the

1350
01:18:50,640 --> 01:19:01,829
this elements position - the debug light

1351
01:18:54,750 --> 01:19:05,310
P if the length of that is less than you

1352
01:19:01,829 --> 01:19:12,630
know one meter then you're going to be

1353
01:19:05,310 --> 01:19:18,180
lit and so all we have to do there is

1354
01:19:12,630 --> 01:19:20,489
use that render setup to get some kind

1355
01:19:18,180 --> 01:19:23,220
of a debug light P in there so I believe

1356
01:19:20,489 --> 01:19:26,399
all we have to do is is just a last set

1357
01:19:23,220 --> 01:19:29,460
up P but like P I think that's all there

1358
01:19:26,399 --> 01:19:36,449
is to it so now in theory we should be

1359
01:19:29,460 --> 01:19:39,000
able to tweak that somehow - to figure

1360
01:19:36,449 --> 01:19:42,349
out how to light some things up while

1361
01:19:39,000 --> 01:19:47,300
keeping other things unlit there we go

1362
01:19:42,350 --> 01:19:51,329
so now we sort of are proceeding those

1363
01:19:47,300 --> 01:19:53,390
emitters right those those particular

1364
01:19:51,329 --> 01:20:00,809
lighting elements that we have are now

1365
01:19:53,390 --> 01:20:04,079
lit right they are artificially pushing

1366
01:20:00,810 --> 01:20:06,660
light out into the world so let's

1367
01:20:04,079 --> 01:20:08,340
suppose we've got these these things

1368
01:20:06,659 --> 01:20:10,170
here and now we're just going to be

1369
01:20:08,340 --> 01:20:13,980
stupid we're just going to be just dumb

1370
01:20:10,170 --> 01:20:15,480
and stupid so if we wanted to do a basic

1371
01:20:13,979 --> 01:20:18,329
lighting calculation to prove that this

1372
01:20:15,479 --> 01:20:22,439
was working at all again we can go ahead

1373
01:20:18,329 --> 01:20:25,340
and do sort of our our basic lighting

1374
01:20:22,439 --> 01:20:27,989
let's turn this into an N squared loop

1375
01:20:25,340 --> 01:20:37,140
because why not

1376
01:20:27,989 --> 01:20:37,139
[Applause]

1377
01:20:40,939 --> 01:20:45,409
so I'm going to have two of these here

1378
01:20:51,779 --> 01:20:57,599
[Applause]

1379
01:20:53,899 --> 01:21:00,420
and then I'm going to and N squared

1380
01:20:57,600 --> 01:21:02,310
propagation of the light which is going

1381
01:21:00,420 --> 01:21:04,850
to be a disaster right but that's okay I

1382
01:21:02,310 --> 01:21:07,010
don't mind it being a disaster at all

1383
01:21:04,850 --> 01:21:11,130
again I'm just playing around with this

1384
01:21:07,010 --> 01:21:13,260
and we can also limit the number of

1385
01:21:11,130 --> 01:21:15,210
Stefan or like reduce the amount of

1386
01:21:13,260 --> 01:21:18,300
stuff that's in the scene to take it

1387
01:21:15,210 --> 01:21:21,079
down from 2008 it into maybe the hundred

1388
01:21:18,300 --> 01:21:24,390
range in fact I could do that right now

1389
01:21:21,079 --> 01:21:25,619
maybe I will and so what we're going to

1390
01:21:24,390 --> 01:21:27,510
do here to say like alright I've got a

1391
01:21:25,619 --> 01:21:29,130
source and destination I'm just going to

1392
01:21:27,510 --> 01:21:31,489
compute the lighting transfer between

1393
01:21:29,130 --> 01:21:38,369
them so I'm going to say something like

1394
01:21:31,489 --> 01:21:42,000
okay so you know the the thing we were

1395
01:21:38,369 --> 01:21:56,880
doing before where we were trying to do

1396
01:21:42,000 --> 01:22:02,789
the light transport here here we go so

1397
01:21:56,880 --> 01:22:04,619
let's see so you know we've got a thing

1398
01:22:02,789 --> 01:22:07,079
that's the direction to the light well

1399
01:22:04,619 --> 01:22:09,359
we know how to get to the light source

1400
01:22:07,079 --> 01:22:11,279
so that would just be the source of

1401
01:22:09,359 --> 01:22:12,920
position minus the destination position

1402
01:22:11,279 --> 01:22:17,009
that's going to go to the light source

1403
01:22:12,920 --> 01:22:23,100
we've got the reflection normal in this

1404
01:22:17,010 --> 01:22:25,739
case is just going to be our our normal

1405
01:22:23,100 --> 01:22:31,230
right so the destiny gives the

1406
01:22:25,739 --> 01:22:33,029
destination is normal the diffuse

1407
01:22:31,229 --> 01:22:35,639
coefficient of specular coefficient we

1408
01:22:33,029 --> 01:22:38,909
don't know yet so let's just assume that

1409
01:22:35,640 --> 01:22:46,140
these services are fully diffused at the

1410
01:22:38,909 --> 01:22:47,489
moment and the specular power is just

1411
01:22:46,140 --> 01:22:54,539
going to be some other things

1412
01:22:47,489 --> 01:22:56,659
here I will take the diffuse inner good

1413
01:22:54,539 --> 01:22:58,880
we have pal

1414
01:22:56,659 --> 01:23:02,909
[Applause]

1415
01:22:58,880 --> 01:23:05,850
we don't have pal yet that's a little

1416
01:23:02,909 --> 01:23:07,409
bit of a problem but all right so the

1417
01:23:05,850 --> 01:23:09,930
diffuse center product is just going to

1418
01:23:07,409 --> 01:23:12,930
be exactly what this says it's going to

1419
01:23:09,930 --> 01:23:16,230
be right so all of this stuff is pretty

1420
01:23:12,930 --> 01:23:23,640
much exactly what you expect the light

1421
01:23:16,229 --> 01:23:32,219
color in this case is just a desk front

1422
01:23:23,640 --> 01:23:36,360
of it yeah and I think that's basically

1423
01:23:32,220 --> 01:23:39,810
it and so whatever the result is here

1424
01:23:36,359 --> 01:23:49,500
that we're going to get in this case we

1425
01:23:39,810 --> 01:23:52,230
have the reflected color times the total

1426
01:23:49,500 --> 01:23:54,539
incoming light is going to be the result

1427
01:23:52,229 --> 01:24:00,929
so we'll just take whatever the

1428
01:23:54,539 --> 01:24:04,019
destinations front of it is and we'll

1429
01:24:00,930 --> 01:24:07,430
add the results so this is just a

1430
01:24:04,020 --> 01:24:07,430
cumulating light into it right

1431
01:24:16,689 --> 01:24:22,639
just in next source index now this is

1432
01:24:21,170 --> 01:24:25,369
not a good loop because it's going to

1433
01:24:22,640 --> 01:24:27,500
over Kitts going to propagate white you

1434
01:24:25,369 --> 01:24:31,489
know yeah we'll talk about that in

1435
01:24:27,500 --> 01:24:32,840
second there's there's issues there so

1436
01:24:31,489 --> 01:25:00,800
in this case we just got a hat AMARG

1437
01:24:32,840 --> 01:25:03,739
product and same is true here but it

1438
01:25:00,800 --> 01:25:14,150
seems unhappy why are you unhappy with

1439
01:25:03,739 --> 01:25:17,529
that we've got diffuse color oh because

1440
01:25:14,149 --> 01:25:17,529
actually you wanted to do that

1441
01:25:26,079 --> 01:25:32,479
and so the vector to the camera that's

1442
01:25:30,920 --> 01:25:35,449
not something we have actually

1443
01:25:32,479 --> 01:25:37,819
determined so we need in our debug setup

1444
01:25:35,448 --> 01:25:39,919
I guess we do have a camera position so

1445
01:25:37,819 --> 01:25:43,219
we should be able to do something like a

1446
01:25:39,920 --> 01:25:47,510
camera P equals group left set up camera

1447
01:25:43,219 --> 01:25:49,340
P we have that yes so when it needs to

1448
01:25:47,510 --> 01:25:52,489
camera we should be able to say where

1449
01:25:49,340 --> 01:25:55,569
the camera is real to this to camera is

1450
01:25:52,488 --> 01:26:13,238
just going to be camera three - desk P

1451
01:25:55,569 --> 01:26:16,759
right so again this is just a complete

1452
01:26:13,238 --> 01:26:23,479
this is completely crappy and it'll be

1453
01:26:16,760 --> 01:26:26,810
extremely slow or it won't stop at all

1454
01:26:23,479 --> 01:26:28,629
some reason I don't know what was going

1455
01:26:26,810 --> 01:26:31,699
on there

1456
01:26:28,630 --> 01:26:31,699
[Music]

1457
01:26:42,880 --> 01:26:52,409
that should be okay they're right why

1458
01:26:49,569 --> 01:26:52,408
are you going so slowly

1459
01:27:09,078 --> 01:27:12,368
did I miss a

1460
01:27:15,698 --> 01:27:23,079
well that's incredibly slow that's much

1461
01:27:21,969 --> 01:27:25,439
slower than I would have expected

1462
01:27:23,079 --> 01:27:25,439
actually

1463
01:27:38,039 --> 01:27:48,420
where's my exercise let's see so you

1464
01:27:43,590 --> 01:27:49,980
have 2182 2182 to be fair that is four

1465
01:27:48,420 --> 01:27:51,869
million elements it has to do and

1466
01:27:49,979 --> 01:27:54,029
there's a lot of instructions here so I

1467
01:27:51,869 --> 01:27:55,349
guess it's not that surprising so what

1468
01:27:54,029 --> 01:27:57,359
I'd like to do is I'd like to cut that

1469
01:27:55,350 --> 01:28:00,020
down to a very small number just so we

1470
01:27:57,359 --> 01:28:02,939
can play with it a little bit better and

1471
01:28:00,020 --> 01:28:05,610
so in order to do that what I'm going to

1472
01:28:02,939 --> 01:28:25,079
do in world mode is going to take the

1473
01:28:05,609 --> 01:28:31,529
particles out and then I'm going to when

1474
01:28:25,079 --> 01:28:35,609
we create our world here I'm going to

1475
01:28:31,529 --> 01:28:40,469
also say when we do screening index I'm

1476
01:28:35,609 --> 01:28:41,869
going to only have one and I'm going to

1477
01:28:40,470 --> 01:28:45,770
see what we can get that number down to

1478
01:28:41,869 --> 01:28:45,769
so it's still quite high

1479
01:28:55,270 --> 01:28:58,399
[Applause]

1480
01:29:04,689 --> 01:29:25,689
I would like to know why we're still

1481
01:29:07,479 --> 01:29:34,209
getting so many things so I would let's

1482
01:29:25,689 --> 01:29:39,639
just I'm just going to go ahead you see

1483
01:29:34,210 --> 01:29:43,899
what I can see here I so here's all of

1484
01:29:39,640 --> 01:29:46,510
the stuff we're sending down now the

1485
01:29:43,899 --> 01:29:47,889
room is much too large I guess is one of

1486
01:29:46,510 --> 01:29:51,780
the things I don't know if maybe I can

1487
01:29:47,890 --> 01:29:59,230
reduce the size of this room somewhat

1488
01:29:51,779 --> 01:30:02,050
when we do as standard room room radius

1489
01:29:59,229 --> 01:30:07,889
X and room radius Y I guess I could

1490
01:30:02,050 --> 01:30:07,890
force the room radius X to be smaller

1491
01:30:21,289 --> 01:30:26,420
but that still seems like yeah I guess

1492
01:30:23,779 --> 01:30:41,509
we could make it even smaller still if I

1493
01:30:26,420 --> 01:30:51,170
wanted to I could say something like

1494
01:30:41,510 --> 01:30:53,659
this and there's like a pretty tiny one

1495
01:30:51,170 --> 01:31:01,699
now I don't know like I said how many of

1496
01:30:53,659 --> 01:31:05,029
these things we're drawing now it still

1497
01:31:01,699 --> 01:31:09,679
seems like an awful lot of quads 500 of

1498
01:31:05,029 --> 01:31:15,829
them like where are they all is that

1499
01:31:09,680 --> 01:31:18,850
really right I mean one two three four

1500
01:31:15,829 --> 01:31:22,250
five six seven eight nine ten eleven

1501
01:31:18,850 --> 01:31:24,350
well I guess I could say there's you

1502
01:31:22,250 --> 01:31:25,960
know there's at least six for each of

1503
01:31:24,350 --> 01:31:34,430
those yes I suppose there's just a lot

1504
01:31:25,960 --> 01:31:36,350
if you've got six for every cube so M

1505
01:31:34,430 --> 01:31:40,909
square is still going to be pretty rough

1506
01:31:36,350 --> 01:31:43,390
on this guy I admit that but we'll see

1507
01:31:40,909 --> 01:31:43,389
what we can do

1508
01:31:46,158 --> 01:31:52,918
so there it's like you know barely

1509
01:31:49,260 --> 01:31:57,739
running but it is running and we could

1510
01:31:52,918 --> 01:32:01,408
if we wanted to also potentially look at

1511
01:31:57,738 --> 01:32:02,968
if the optimizer can make that loop run

1512
01:32:01,408 --> 01:32:05,368
faster because since all the times when

1513
01:32:02,969 --> 01:32:07,639
we've spent in that loop now yeah there

1514
01:32:05,368 --> 01:32:07,639
it goes

1515
01:32:11,930 --> 01:32:14,570
I don't know why I'm getting that

1516
01:32:13,460 --> 01:32:19,760
flickering there are there multiple

1517
01:32:14,569 --> 01:32:24,279
quads stacked on top of each other but

1518
01:32:19,760 --> 01:32:26,239
anyway so if we take a look at this here

1519
01:32:24,279 --> 01:32:27,829
this is probably cheating because it

1520
01:32:26,239 --> 01:32:29,119
probably figured out that this loop can

1521
01:32:27,829 --> 01:32:31,309
go away and that's probably why it's

1522
01:32:29,119 --> 01:32:34,189
fast so let's take that away and make it

1523
01:32:31,310 --> 01:32:37,220
actually do the work and see what it's

1524
01:32:34,189 --> 01:32:39,699
like if it's optimized well that's not

1525
01:32:37,220 --> 01:32:39,699
too bad actually

1526
01:32:41,710 --> 01:32:46,819
all right all right so let's try to get

1527
01:32:45,260 --> 01:32:49,400
this working here too something that

1528
01:32:46,819 --> 01:32:55,159
does some kind of light transport so

1529
01:32:49,399 --> 01:32:57,379
what was it doing it does source P yeah

1530
01:32:55,159 --> 01:33:06,260
the light color is from whatever is that

1531
01:32:57,380 --> 01:33:10,659
now this is wrong we go show that one

1532
01:33:06,260 --> 01:33:17,989
more time all right well that is

1533
01:33:10,659 --> 01:33:19,279
interesting to say the least in this

1534
01:33:17,989 --> 01:33:21,109
case we're going to have to clamp when

1535
01:33:19,279 --> 01:33:22,489
we push this information down otherwise

1536
01:33:21,109 --> 01:33:25,149
we're going to get all kinds of weird

1537
01:33:22,489 --> 01:33:27,979
stuff like that so we do need that

1538
01:33:25,149 --> 01:33:29,689
clamping to come back into play here so

1539
01:33:27,979 --> 01:33:32,839
when we do this summation what we would

1540
01:33:29,689 --> 01:33:36,799
need is back when we do our copy out and

1541
01:33:32,840 --> 01:33:43,579
we do our pack we need to take our front

1542
01:33:36,800 --> 01:33:46,010
emit here and we need to to clamp each

1543
01:33:43,579 --> 01:33:48,140
of the components from zero to one

1544
01:33:46,010 --> 01:33:51,199
because after we've done the lighting

1545
01:33:48,140 --> 01:33:53,720
sort of transmission we got to clamp it

1546
01:33:51,199 --> 01:33:59,569
down so we're going to do something like

1547
01:33:53,720 --> 01:34:01,640
that we need to say okay so clamp zero

1548
01:33:59,569 --> 01:34:06,039
to one

1549
01:34:01,640 --> 01:34:06,039
whatever the elements front emit see is

1550
01:34:08,260 --> 01:34:11,260
its

1551
01:34:14,050 --> 01:34:20,060
and that'll produce the front submit

1552
01:34:18,500 --> 01:34:22,909
that we can then pass through here that

1553
01:34:20,060 --> 01:34:24,560
should be properly clamped so we won't

1554
01:34:22,909 --> 01:34:27,319
get those weird like color wrapping

1555
01:34:24,560 --> 01:34:29,210
artifacts where you go over one and wrap

1556
01:34:27,319 --> 01:34:37,299
back around to zero which is what was

1557
01:34:29,210 --> 01:34:39,529
creating that flickering right so ya

1558
01:34:37,300 --> 01:34:41,329
still have some weirdness here there I

1559
01:34:39,529 --> 01:34:48,529
don't know why we're getting some of the

1560
01:34:41,329 --> 01:34:49,970
things I'm seeing there so like I said

1561
01:34:48,529 --> 01:34:51,109
this looks a little bit weird and the

1562
01:34:49,970 --> 01:34:52,820
reason that this loops a little bit

1563
01:34:51,109 --> 01:34:54,920
weird is because when it computes the

1564
01:34:52,819 --> 01:34:56,599
lighting it's going through all of the

1565
01:34:54,920 --> 01:34:58,690
sources which include sources from

1566
01:34:56,600 --> 01:35:02,360
Baha'i like ones that have already had

1567
01:34:58,689 --> 01:35:09,319
the light transferred so we might want

1568
01:35:02,359 --> 01:35:11,420
to say something like well this yeah not

1569
01:35:09,319 --> 01:35:14,269
sure exactly how we would say that we

1570
01:35:11,420 --> 01:35:21,859
could use a different accumulator so for

1571
01:35:14,270 --> 01:35:24,100
example we could do something like we

1572
01:35:21,859 --> 01:35:27,319
could accumulate into the back admit C

1573
01:35:24,100 --> 01:35:28,970
and then use the back in it C or

1574
01:35:27,319 --> 01:35:31,099
something like this

1575
01:35:28,970 --> 01:35:32,420
or for now just to make things easier on

1576
01:35:31,100 --> 01:35:34,340
ourselves I guess the other thing I

1577
01:35:32,420 --> 01:35:37,310
could do is just use a separate light

1578
01:35:34,340 --> 01:35:40,989
accumulator so basically in here we

1579
01:35:37,310 --> 01:35:44,330
would say here's the lighting element

1580
01:35:40,989 --> 01:35:48,380
there's an accumulated you know light

1581
01:35:44,329 --> 01:35:52,250
field here and what we do is we just

1582
01:35:48,380 --> 01:35:56,930
summon that so when we initialize these

1583
01:35:52,250 --> 01:35:59,390
originally assumed that no lighting has

1584
01:35:56,930 --> 01:36:04,539
been accumulated we accumulate the light

1585
01:35:59,390 --> 01:36:04,539
like this so that we can distinguish it

1586
01:36:07,179 --> 01:36:21,670
um to me why is the why is my little

1587
01:36:18,310 --> 01:36:23,949
head thing dawn my little I don't know

1588
01:36:21,670 --> 01:36:25,000
why if this is where my head is here I

1589
01:36:23,948 --> 01:36:27,069
don't know where the little head thing

1590
01:36:25,000 --> 01:36:28,569
went I think Windows Windows just always

1591
01:36:27,069 --> 01:36:30,340
seems to be very bad at keeping on top

1592
01:36:28,569 --> 01:36:33,819
Windows actually on top unfortunately

1593
01:36:30,340 --> 01:36:37,360
but anyway point being Zen and here I'll

1594
01:36:33,819 --> 01:36:40,029
just use the EQ MC and that way it's not

1595
01:36:37,359 --> 01:36:43,149
doing the problem I was worried about is

1596
01:36:40,029 --> 01:36:46,329
that as we were propagating the light

1597
01:36:43,149 --> 01:36:47,799
around let later people as they loop

1598
01:36:46,329 --> 01:36:52,809
over the source would pick up that

1599
01:36:47,800 --> 01:36:54,760
lighting yeah and there you can see that

1600
01:36:52,810 --> 01:36:58,170
that sort of helped out that problem a

1601
01:36:54,760 --> 01:36:58,170
little bit but it still seems wrong

1602
01:37:02,789 --> 01:37:08,560
still seem somewhat incorrect I'm not

1603
01:37:05,198 --> 01:37:10,719
sure what we're look at seeing there so

1604
01:37:08,560 --> 01:37:13,710
here's the rest of the computations

1605
01:37:10,719 --> 01:37:13,710
let's just take a quick look

1606
01:37:22,449 --> 01:37:28,300
yeah so a couple things about this so

1607
01:37:24,850 --> 01:37:29,890
one this still has the angular element

1608
01:37:28,300 --> 01:37:33,460
to it which we sort of were saying was

1609
01:37:29,890 --> 01:37:34,800
probably problematic however still

1610
01:37:33,460 --> 01:37:36,850
should be okay

1611
01:37:34,800 --> 01:37:38,739
so if we take a look at what's going on

1612
01:37:36,850 --> 01:37:40,720
here we say all right we've got the

1613
01:37:38,739 --> 01:37:42,130
destination one that we're going to be

1614
01:37:40,720 --> 01:37:43,079
signing into and we've got the source

1615
01:37:42,130 --> 01:37:46,170
one that we're going to be coming from

1616
01:37:43,079 --> 01:37:49,420
we grab the light color from the source

1617
01:37:46,170 --> 01:37:52,810
we grab the direction to the light by

1618
01:37:49,420 --> 01:37:57,279
subtracting these two do we need to

1619
01:37:52,810 --> 01:38:00,900
normalize that that's the problem yeah

1620
01:37:57,279 --> 01:38:00,899
this is assuming if this is normalized

1621
01:38:01,560 --> 01:38:15,039
where's the distance to the light so it

1622
01:38:13,779 --> 01:38:24,550
looks like we kind of got rid of a lot

1623
01:38:15,039 --> 01:38:30,399
of important stuff in here all right so

1624
01:38:24,550 --> 01:38:31,590
let's fix that so we've got two light to

1625
01:38:30,399 --> 01:38:36,978
light distance

1626
01:38:31,590 --> 01:38:36,979
[Applause]

1627
01:38:40,699 --> 01:38:51,679
[Applause]

1628
01:38:49,779 --> 01:38:53,569
so let's restore the way this

1629
01:38:51,679 --> 01:38:54,859
computation was working before so let's

1630
01:38:53,569 --> 01:38:56,649
take a look at the light distance we'll

1631
01:38:54,859 --> 01:38:59,420
look to see if it's greater than zero

1632
01:38:56,649 --> 01:39:02,509
and then assuming it is will normalize

1633
01:38:59,420 --> 01:39:10,368
and continue right I guess - camera is

1634
01:39:02,510 --> 01:39:13,670
the same way here so once we have the

1635
01:39:10,368 --> 01:39:15,198
camera information and the lighting

1636
01:39:13,670 --> 01:39:16,670
information normalized then we're in

1637
01:39:15,198 --> 01:39:18,769
better shape however you notice we don't

1638
01:39:16,670 --> 01:39:21,408
seem to have letting fall-off in here

1639
01:39:18,770 --> 01:39:24,260
anywhere for I guess because we were

1640
01:39:21,408 --> 01:39:25,819
just hacking around with it before so we

1641
01:39:24,260 --> 01:39:28,099
need that to be in here as well and it's

1642
01:39:25,819 --> 01:39:29,479
currently not it was just angular

1643
01:39:28,099 --> 01:39:33,619
fall-off was the only thing that we were

1644
01:39:29,479 --> 01:39:36,439
computing which is totally wrong and at

1645
01:39:33,618 --> 01:39:38,630
least now that's normalized which is I

1646
01:39:36,439 --> 01:39:42,979
guess good but again still a little bit

1647
01:39:38,630 --> 01:39:46,880
funky so let's see what we got here so

1648
01:39:42,979 --> 01:39:51,198
we have the two light here the light

1649
01:39:46,880 --> 01:39:52,340
distance to light is then normalized by

1650
01:39:51,198 --> 01:39:55,009
multiplying by one over the distance

1651
01:39:52,340 --> 01:40:00,309
which is good we've got the reflected

1652
01:39:55,010 --> 01:40:03,739
normal which is this one we compute the

1653
01:40:00,309 --> 01:40:09,130
inner product of the light and they're

1654
01:40:03,738 --> 01:40:12,250
reflected normal that seems good as well

1655
01:40:09,130 --> 01:40:14,779
no issues there

1656
01:40:12,250 --> 01:40:18,289
yeah that all seems good it just needs a

1657
01:40:14,779 --> 01:40:25,210
distance baseball so then we've got the

1658
01:40:18,289 --> 01:40:29,090
reflection vector that all seems good

1659
01:40:25,210 --> 01:40:34,578
the inner product of specular that seems

1660
01:40:29,090 --> 01:40:36,650
good as well yeah so that all seems good

1661
01:40:34,578 --> 01:40:38,719
and the specular isn't contributing it

1662
01:40:36,649 --> 01:40:41,319
all right now should be zero so that

1663
01:40:38,719 --> 01:40:41,319
should be fine

1664
01:40:44,510 --> 01:40:48,949
so that all looks good so yeah I'm not

1665
01:40:46,970 --> 01:40:50,570
sure why I still don't understand what

1666
01:40:48,949 --> 01:40:53,590
I'm looking at there don't that doesn't

1667
01:40:50,569 --> 01:40:53,590
look right to me

1668
01:40:54,939 --> 01:41:00,379
like if you look at what's happening

1669
01:40:57,439 --> 01:41:01,849
here you can kind of see that well I

1670
01:41:00,380 --> 01:41:03,529
guess you know that's probably just the

1671
01:41:01,850 --> 01:41:05,180
angular fall-off I guess I could believe

1672
01:41:03,529 --> 01:41:10,729
that since we have no distance fall-off

1673
01:41:05,180 --> 01:41:16,489
at the moment I guess I could maybe sort

1674
01:41:10,729 --> 01:41:18,500
of believe that but not really but

1675
01:41:16,488 --> 01:41:22,099
anyway so if that's the if that's the

1676
01:41:18,500 --> 01:41:23,630
the angular fall-off term even if I

1677
01:41:22,100 --> 01:41:25,880
convince myself that the bats correct

1678
01:41:23,630 --> 01:41:27,949
which I'm not really sure it is let's go

1679
01:41:25,880 --> 01:41:31,539
ahead and put the distance term in there

1680
01:41:27,949 --> 01:41:31,539
as well which is just going to be like

1681
01:41:32,560 --> 01:41:39,020
so that's just going to be again inverse

1682
01:41:35,000 --> 01:41:48,529
square law so that would be one over the

1683
01:41:39,020 --> 01:41:50,120
light distance squared and in here where

1684
01:41:48,529 --> 01:41:51,800
we're actually sort of summing up all

1685
01:41:50,119 --> 01:41:54,909
the rest of these things we just put in

1686
01:41:51,800 --> 01:41:54,909
the distance fall-off there

1687
01:42:00,960 --> 01:42:05,020
so now at least we're getting that

1688
01:42:02,979 --> 01:42:07,089
distance fall-off but I just I feel like

1689
01:42:05,020 --> 01:42:10,660
maybe there's a little bit too much of

1690
01:42:07,090 --> 01:42:12,430
an angular like the amount of angular

1691
01:42:10,659 --> 01:42:19,689
flickering we're getting there is seems

1692
01:42:12,430 --> 01:42:22,619
a little odd to me it just doesn't make

1693
01:42:19,689 --> 01:42:22,619
a whole lot of sense

1694
01:42:27,889 --> 01:42:32,868
I mean it does seem basically correct

1695
01:42:30,889 --> 01:42:36,079
angular wise meaning you know the stuff

1696
01:42:32,868 --> 01:42:37,579
that's down here is getting no light and

1697
01:42:36,079 --> 01:42:39,439
the stuff that's up here is getting

1698
01:42:37,579 --> 01:42:45,559
light and that makes a little bit of

1699
01:42:39,439 --> 01:42:46,819
sense I guess on the other hand part of

1700
01:42:45,560 --> 01:42:48,800
it doesn't really make a whole lot of

1701
01:42:46,819 --> 01:42:50,719
sense because well I guess we're not

1702
01:42:48,800 --> 01:42:54,279
using the light the other lights facing

1703
01:42:50,719 --> 01:42:56,929
direction so I guess that part is okay

1704
01:42:54,279 --> 01:43:01,099
you know I could convince myself that

1705
01:42:56,929 --> 01:43:02,569
that was roughly right all right so you

1706
01:43:01,100 --> 01:43:10,699
can kind of see that this is sort of

1707
01:43:02,569 --> 01:43:11,988
working a little bit right so yeah so

1708
01:43:10,698 --> 01:43:13,189
that's like all right so there's a

1709
01:43:11,988 --> 01:43:14,329
little bit of light transfer tapping

1710
01:43:13,189 --> 01:43:15,559
there I think the agiza crazy crowd

1711
01:43:14,329 --> 01:43:17,238
along tomorrow I'd like to go through

1712
01:43:15,560 --> 01:43:20,570
them and actually start to try to type

1713
01:43:17,238 --> 01:43:21,979
it tighten this down a little bit but

1714
01:43:20,569 --> 01:43:25,880
the other thing we can do here is we

1715
01:43:21,979 --> 01:43:29,388
could say well we could also do this in

1716
01:43:25,880 --> 01:43:30,859
as a multi pass operation now and see

1717
01:43:29,389 --> 01:43:35,319
what happens if we just let the light

1718
01:43:30,859 --> 01:43:35,319
bounce a little bit by doing a loop

1719
01:43:40,238 --> 01:43:44,629
again since we're already very slow and

1720
01:43:42,920 --> 01:43:45,920
this is a problem this is not great but

1721
01:43:44,630 --> 01:43:47,719
you know we're again we're just playing

1722
01:43:45,920 --> 01:43:51,529
around so let's suppose I allow this to

1723
01:43:47,719 --> 01:43:53,779
do three loops and what I did here was I

1724
01:43:51,529 --> 01:43:56,090
just said like all right just propagate

1725
01:43:53,779 --> 01:43:58,880
the light out and each time you

1726
01:43:56,090 --> 01:44:04,429
propagate the light out assume that you

1727
01:43:58,880 --> 01:44:05,719
then take the emission and you take

1728
01:44:04,429 --> 01:44:07,789
however much light you see late and now

1729
01:44:05,719 --> 01:44:11,198
you're going to shine that light back

1730
01:44:07,789 --> 01:44:11,198
out right

1731
01:44:15,180 --> 01:44:19,060
so again just a lot of really weird

1732
01:44:17,739 --> 01:44:24,699
flipping there so I think we've got some

1733
01:44:19,060 --> 01:44:27,510
bugs that we could probably fix without

1734
01:44:24,699 --> 01:44:27,510
too much trouble

1735
01:44:27,960 --> 01:44:32,649
but again we're getting there and this

1736
01:44:30,310 --> 01:44:38,980
is a much saner way for us to do

1737
01:44:32,649 --> 01:44:41,289
experimentation here because at least

1738
01:44:38,979 --> 01:44:43,750
with this system I can see everything

1739
01:44:41,289 --> 01:44:45,579
and we can play with stuff quickly and

1740
01:44:43,750 --> 01:44:47,680
we can do whatever we want and then that

1741
01:44:45,579 --> 01:44:50,409
way we don't waste time with a bunch of

1742
01:44:47,680 --> 01:44:53,980
GPU nonsense when we don't really know

1743
01:44:50,409 --> 01:44:57,130
exactly what we want so yeah I think

1744
01:44:53,979 --> 01:45:03,009
that that definitely helped pull I would

1745
01:44:57,130 --> 01:45:05,250
say so again I'm just not sure I feel

1746
01:45:03,010 --> 01:45:10,619
like we're getting some odd behavior

1747
01:45:05,250 --> 01:45:10,619
here and if I take the distance fall-off

1748
01:45:13,859 --> 01:45:26,699
out of the mix right and we just look at

1749
01:45:18,670 --> 01:45:30,840
one one sort of pass here let me also

1750
01:45:26,699 --> 01:45:30,840
drop the iteration number down

1751
01:45:49,929 --> 01:45:55,449
look I just don't understand why the

1752
01:45:52,090 --> 01:45:57,699
lateral moves are creating so much

1753
01:45:55,448 --> 01:46:01,500
flickering it's like it's passing

1754
01:45:57,698 --> 01:46:01,500
through some sort of the

1755
01:46:15,179 --> 01:46:20,368
it just doesn't seem like the amount of

1756
01:46:17,998 --> 01:46:23,578
motion should be able to create such a

1757
01:46:20,368 --> 01:46:27,089
difference in terms of the angle change

1758
01:46:23,578 --> 01:46:28,948
between so many different things there

1759
01:46:27,090 --> 01:46:30,719
so when I look at this I just think

1760
01:46:28,948 --> 01:46:32,098
we've got a bug in here that you know

1761
01:46:30,719 --> 01:46:33,420
maybe I shouldn't be looking for right

1762
01:46:32,099 --> 01:46:38,599
now because we should wait for tomorrow

1763
01:46:33,420 --> 01:46:44,670
to look for it but otherwise you know

1764
01:46:38,599 --> 01:46:46,050
that's my thinking on anyway and again

1765
01:46:44,670 --> 01:46:47,609
you know there's not a whole lot

1766
01:46:46,050 --> 01:46:50,729
happening here like basically it just

1767
01:46:47,609 --> 01:46:55,319
takes the inner product of the vector

1768
01:46:50,729 --> 01:46:56,699
from the light the vector from the the

1769
01:46:55,319 --> 01:46:59,368
place we're trying to compute lighting

1770
01:46:56,698 --> 01:47:03,178
to a light source and then the normal of

1771
01:46:59,368 --> 01:47:06,420
the surface that's the only thing we're

1772
01:47:03,179 --> 01:47:09,719
taking here we then do the product of

1773
01:47:06,420 --> 01:47:12,269
the diffusive which we've removed the

1774
01:47:09,719 --> 01:47:14,849
diffuse coefficient which is just one so

1775
01:47:12,269 --> 01:47:17,039
those are non terms so it's just the

1776
01:47:14,849 --> 01:47:19,199
cosine of the angle times the light the

1777
01:47:17,038 --> 01:47:26,550
incoming light color right that's all

1778
01:47:19,198 --> 01:47:29,609
we're doing and so somehow that cosine

1779
01:47:26,550 --> 01:47:33,719
angle term is really getting pretty

1780
01:47:29,609 --> 01:47:35,478
jacked in terms of its fluctuation and I

1781
01:47:33,719 --> 01:47:38,819
just don't know where that's coming from

1782
01:47:35,479 --> 01:47:40,469
now it's possible I guess that something

1783
01:47:38,819 --> 01:47:43,288
else is kicking in here but in theory

1784
01:47:40,469 --> 01:47:45,689
the specular coefficient since it's zero

1785
01:47:43,288 --> 01:47:49,078
shouldn't should nuke out anything else

1786
01:47:45,689 --> 01:47:51,420
that we're getting here and so we should

1787
01:47:49,078 --> 01:47:54,748
just be looking at really nothing other

1788
01:47:51,420 --> 01:47:56,519
than just add a few Center product that

1789
01:47:54,748 --> 01:48:00,630
should be smoothly varying like it

1790
01:47:56,519 --> 01:48:04,469
shouldn't be that drastic but maybe it

1791
01:48:00,630 --> 01:48:07,650
is so yeah I guess that's that's all

1792
01:48:04,469 --> 01:48:09,948
there is to that so let's go to the Q&amp;A

1793
01:48:07,649 --> 01:48:09,948
here

1794
01:49:07,569 --> 01:49:14,170
yeah I can't enable the or overlay it

1795
01:49:10,359 --> 01:49:16,359
died the problem with that is that for

1796
01:49:14,170 --> 01:49:19,539
some reason Windows just sometimes

1797
01:49:16,359 --> 01:49:25,019
removes it like as far as I can tell

1798
01:49:19,539 --> 01:49:28,000
nothing is happening weird in C tray it

1799
01:49:25,020 --> 01:49:34,440
just removes my overlay I do not know

1800
01:49:28,000 --> 01:49:37,029
why just windows being Windows I guess I

1801
01:49:34,439 --> 01:49:40,079
should try and figure that out it

1802
01:49:37,029 --> 01:49:40,079
happens every so often

1803
01:50:01,800 --> 01:50:12,180
so is it gone I mean did it get is it

1804
01:50:05,729 --> 01:50:15,799
actually totally gone it's crazy how

1805
01:50:12,180 --> 01:50:15,800
many windows are open

1806
01:50:48,670 --> 01:50:56,000
so what are the styles of this window

1807
01:50:51,800 --> 01:50:57,890
pop-up visible clips siblings so you can

1808
01:50:56,000 --> 01:51:00,350
see this is a topmost window that's

1809
01:50:57,890 --> 01:51:03,200
visible there's a top most visible

1810
01:51:00,350 --> 01:51:09,260
window it's coordinates are exactly the

1811
01:51:03,199 --> 01:51:19,159
bottom corner of the screen right where

1812
01:51:09,260 --> 01:51:21,610
is it like where is it anyone so we want

1813
01:51:19,159 --> 01:51:26,619
to tell me where it is I have no idea

1814
01:51:21,609 --> 01:51:26,619
but it sure does appear to be there

1815
01:51:42,250 --> 01:51:45,579
yeah I don't know

1816
01:52:38,210 --> 01:52:42,630
Martin's mosaic uh says sorry the trick

1817
01:52:41,130 --> 01:52:45,569
didn't work it works the editor I use

1818
01:52:42,630 --> 01:52:46,710
yeah the thing is I suppose for coders a

1819
01:52:45,569 --> 01:52:50,099
little too smart

1820
01:52:46,710 --> 01:52:53,489
is it like it actually parsed the C++ as

1821
01:52:50,100 --> 01:52:55,289
C++ as grammar says to which is in in

1822
01:52:53,488 --> 01:52:58,049
most cases I guess is what you want in

1823
01:52:55,289 --> 01:53:00,060
this case it was too smart for us right

1824
01:52:58,050 --> 01:53:02,820
because we wanted to we were hoping it

1825
01:53:00,060 --> 01:53:07,500
would be dumber about about the string

1826
01:53:02,819 --> 01:53:09,689
but hey Martin says there is an option

1827
01:53:07,500 --> 01:53:12,689
to try to use old non raw string

1828
01:53:09,689 --> 01:53:15,750
literals caressed our shader equals

1829
01:53:12,689 --> 01:53:17,969
stringify parentheses right multi-line

1830
01:53:15,750 --> 01:53:20,310
code here close parentheses where

1831
01:53:17,969 --> 01:53:27,409
signifies the macro with pound

1832
01:53:20,310 --> 01:53:30,090
preprocessor thing compiler will smoosh

1833
01:53:27,409 --> 01:53:31,439
multi-line code into one line string and

1834
01:53:30,090 --> 01:53:33,390
you'll lose line numbers and error

1835
01:53:31,439 --> 01:53:39,960
messages but they don't you musn't

1836
01:53:33,390 --> 01:53:44,340
stream anyway hmm that's interesting

1837
01:53:39,960 --> 01:53:45,810
I've never tried that does that work so

1838
01:53:44,340 --> 01:53:46,880
basically what you're suggesting is to

1839
01:53:45,810 --> 01:53:50,060
do something like this

1840
01:53:46,880 --> 01:53:50,060
[Applause]

1841
01:53:55,159 --> 01:54:02,599
[Applause]

1842
01:53:56,380 --> 01:54:13,039
is this what you mean Martin's so we

1843
01:54:02,600 --> 01:54:15,770
would just say because I would assume

1844
01:54:13,039 --> 01:54:19,939
that that's not going to really work

1845
01:54:15,770 --> 01:54:21,080
because also you can't close you

1846
01:54:19,939 --> 01:54:27,079
wouldn't be able to really close

1847
01:54:21,079 --> 01:54:36,050
parenthesis in there would you I feel

1848
01:54:27,079 --> 01:54:39,019
like I guess the other problem is - I

1849
01:54:36,050 --> 01:54:41,350
feel like that doesn't work because for

1850
01:54:39,020 --> 01:54:44,540
coders again - smart it knows that

1851
01:54:41,350 --> 01:54:46,640
brackets wouldn't couldn't be done in

1852
01:54:44,539 --> 01:54:50,719
here that way I think maybe no maybe

1853
01:54:46,640 --> 01:54:53,539
it's not so yeah that that I guess would

1854
01:54:50,719 --> 01:55:00,319
work but but what about having quotes in

1855
01:54:53,539 --> 01:55:03,340
there I guess is my only question like

1856
01:55:00,319 --> 01:55:03,340
that probably works

1857
01:55:10,470 --> 01:55:16,980
but I'm a little nervous about if

1858
01:55:14,340 --> 01:55:23,520
there's quotes now maybe we don't use

1859
01:55:16,979 --> 01:55:25,789
quotes ever in the shaders so maybe it's

1860
01:55:23,520 --> 01:55:25,790
fine

1861
01:55:26,899 --> 01:55:31,739
in fact I guess they probably wouldn't

1862
01:55:29,460 --> 01:55:53,789
so that is maybe that's the best maybe

1863
01:55:31,739 --> 01:55:55,559
that's the best option so let's see so

1864
01:55:53,789 --> 01:55:57,840
we're as if that doesn't indent properly

1865
01:55:55,560 --> 01:56:02,039
I think that's a sore crater bug maybe

1866
01:55:57,840 --> 01:56:03,989
it's already been fixed but for some

1867
01:56:02,039 --> 01:56:08,250
reason if you block indent something

1868
01:56:03,989 --> 01:56:11,969
like that the first time through when I

1869
01:56:08,250 --> 01:56:13,890
did it here it wouldn't indent but then

1870
01:56:11,970 --> 01:56:16,500
it obviously can't invent it because if

1871
01:56:13,890 --> 01:56:18,420
I go through and reinvent it again it it

1872
01:56:16,500 --> 01:56:20,659
worked so I know what's going on there

1873
01:56:18,420 --> 01:56:20,659
exactly

1874
01:56:28,948 --> 01:56:40,439
um so there's shader code down we go

1875
01:56:41,279 --> 01:56:53,948
doesn't look like it understood the

1876
01:56:44,198 --> 01:56:59,049
ending of this though looks like that's

1877
01:56:53,948 --> 01:57:02,078
a bug in the indent or right because it

1878
01:56:59,050 --> 01:57:08,079
thinks it thinks that that is there for

1879
01:57:02,078 --> 01:57:12,460
some reason it can't handle what's

1880
01:57:08,078 --> 01:57:17,158
happening here in fact it seems even

1881
01:57:12,460 --> 01:57:17,158
more confused I guess maybe because of

1882
01:57:17,760 --> 01:57:26,380
its the second one in it indented it

1883
01:57:20,769 --> 01:57:28,150
further this time so I think we just

1884
01:57:26,380 --> 01:57:32,788
need to ask Allen because even this

1885
01:57:28,149 --> 01:57:32,788
doesn't really seem to work right

1886
01:58:27,960 --> 01:58:32,369
the cryptic mind I do think that it does

1887
01:58:30,960 --> 01:58:33,840
get addressed a little further down I

1888
01:58:32,369 --> 01:58:37,859
think we get rid of the sleep because it

1889
01:58:33,840 --> 01:58:45,029
was too unpredictable on different

1890
01:58:37,859 --> 01:58:46,289
platforms exactly as you discovered did

1891
01:58:45,029 --> 01:58:48,779
the black overlay disappear during the

1892
01:58:46,289 --> 01:58:52,470
stream or during QA during the stream I

1893
01:58:48,779 --> 01:58:54,329
think but I'm not sure from the code if

1894
01:58:52,470 --> 01:58:57,409
target active you could always check the

1895
01:58:54,329 --> 01:59:01,170
video when I posted I suppose we'll see

1896
01:58:57,409 --> 01:59:04,880
if the countdown has finished and

1897
01:59:01,170 --> 01:59:04,880
whatnot then there's not active anymore

1898
01:59:16,229 --> 01:59:20,109
all right well anyway I'm going to wind

1899
01:59:18,369 --> 01:59:22,720
it down here yeah we should try and

1900
01:59:20,109 --> 01:59:26,159
figure out if we can get Alan to maybe

1901
01:59:22,720 --> 01:59:28,780
put something in here that would work

1902
01:59:26,159 --> 01:59:31,649
I'm going to back that change out for

1903
01:59:28,779 --> 01:59:34,659
now because it looks like none of those

1904
01:59:31,649 --> 01:59:39,219
options work and we can just ask him

1905
01:59:34,659 --> 01:59:41,409
like what like what we should do like

1906
01:59:39,220 --> 01:59:45,720
what's the right solution there because

1907
01:59:41,409 --> 01:59:45,720
it's nice to be able to embed code from

1908
01:59:46,590 --> 01:59:50,890
you know into a C file will be nice it

1909
01:59:49,479 --> 02:00:02,049
there is some way to make that

1910
01:59:50,890 --> 02:00:03,579
indentation work okay right Martin says

1911
02:00:02,050 --> 02:00:07,900
you could do caressed our shader gloss

1912
02:00:03,579 --> 02:00:12,189
shader code parentheses return pound

1913
02:00:07,899 --> 02:00:14,829
include shader H return close

1914
02:00:12,189 --> 02:00:16,899
parentheses and then put code in the new

1915
02:00:14,829 --> 02:00:20,859
shader at H file maybe then indentation

1916
02:00:16,899 --> 02:00:22,899
will be fine afterwards we put Martin's

1917
02:00:20,859 --> 02:00:25,239
how would that work because it wouldn't

1918
02:00:22,899 --> 02:00:27,689
that take the pound include and string

1919
02:00:25,239 --> 02:00:27,689
eyes it

1920
02:00:38,090 --> 02:00:41,789
Martin says new that will work

1921
02:00:39,988 --> 02:00:44,039
interesting I didn't know that you could

1922
02:00:41,789 --> 02:00:46,380
do that that's a that's an interesting

1923
02:00:44,039 --> 02:00:54,060
trick Martin's is saying that you could

1924
02:00:46,380 --> 02:00:57,179
actually if you do like what I had

1925
02:00:54,060 --> 02:01:06,570
before if you do that he was saying you

1926
02:00:57,179 --> 02:01:09,960
could actually do this which is crazy

1927
02:01:06,569 --> 02:01:11,819
because I just assumed that the string

1928
02:01:09,960 --> 02:01:13,109
eyes would take precedence over the

1929
02:01:11,819 --> 02:01:15,210
pounding food but I guess the pound

1930
02:01:13,109 --> 02:01:22,380
include comes first if that's the case

1931
02:01:15,210 --> 02:01:24,920
then the pound include would would allow

1932
02:01:22,380 --> 02:01:29,699
us to just put it in a separate file and

1933
02:01:24,920 --> 02:01:32,250
that's probably fine I would assume so

1934
02:01:29,698 --> 02:01:33,960
that might be a reasonable thing to do

1935
02:01:32,250 --> 02:01:36,448
because that would also put the shaders

1936
02:01:33,960 --> 02:01:39,300
in separate files I'm not sure I'm

1937
02:01:36,448 --> 02:01:42,979
necessarily psyched about having quite

1938
02:01:39,300 --> 02:01:46,890
so many files as that would require but

1939
02:01:42,979 --> 02:01:50,779
I'm not adverse to it like so we've got

1940
02:01:46,890 --> 02:01:50,780
a bunch of files that seems okay

1941
02:01:52,698 --> 02:01:56,039
furthermore if we wanted to be weird

1942
02:01:54,630 --> 02:01:58,140
about it in theory we could actually

1943
02:01:56,039 --> 02:02:01,140
just glom all the shader code into one

1944
02:01:58,140 --> 02:02:04,829
file as different functions and then

1945
02:02:01,140 --> 02:02:06,600
just have our actual code here just call

1946
02:02:04,829 --> 02:02:11,519
whichever function it actually wants for

1947
02:02:06,600 --> 02:02:13,140
that particular shader or something

1948
02:02:11,520 --> 02:02:17,090
weird like that but that probably would

1949
02:02:13,140 --> 02:02:17,090
create some problems for the compiler

1950
02:02:18,319 --> 02:02:21,719
all right I'm going to close it down but

1951
02:02:20,488 --> 02:02:23,549
that's an interesting trick Martin's I

1952
02:02:21,719 --> 02:02:29,310
didn't know you could do that that seems

1953
02:02:23,550 --> 02:02:30,270
like it would work all right thank you

1954
02:02:29,310 --> 02:02:31,679
everyone for joining me for another

1955
02:02:30,270 --> 02:02:33,780
episode of handmade carrots and a

1956
02:02:31,679 --> 02:02:34,920
pleasure coding with you as always if

1957
02:02:33,779 --> 02:02:35,880
you'd like to follow along with us at

1958
02:02:34,920 --> 02:02:37,469
home you can always pre-order the game

1959
02:02:35,880 --> 02:02:39,440
on hand made here or to come to the

1960
02:02:37,469 --> 02:02:41,520
source code so you could follow along

1961
02:02:39,439 --> 02:02:42,599
you can also go to our forums if you

1962
02:02:41,520 --> 02:02:44,370
have questions you want to ask our

1963
02:02:42,600 --> 02:02:46,140
patreon page transport the video series

1964
02:02:44,369 --> 02:02:47,698
our schedule bot if you want to know

1965
02:02:46,140 --> 02:02:50,070
when we're going to be live and our

1966
02:02:47,698 --> 02:02:50,629
episode guide if you would like to catch

1967
02:02:50,069 --> 02:02:54,099
up on

1968
02:02:50,630 --> 02:02:56,569
past episodes that's about it for today

1969
02:02:54,100 --> 02:02:57,770
I'll be back tomorrow where we can start

1970
02:02:56,569 --> 02:03:00,948
playing around with that lighting

1971
02:02:57,770 --> 02:03:02,170
transport in CPU sides and see if we

1972
02:03:00,948 --> 02:03:04,488
can't figure out something interesting

1973
02:03:02,170 --> 02:03:05,449
until then have fun programming and I'll

1974
02:03:04,488 --> 02:03:08,229
see you on the Internet

1975
02:03:05,448 --> 02:03:08,229
take use everybody

