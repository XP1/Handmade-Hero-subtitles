1
00:00:01,790 --> 00:00:05,548
hello everybody and welcome to handmade

2
00:00:03,839 --> 00:00:08,429
heroes show Rico to complete game live

3
00:00:05,549 --> 00:00:10,800
on stream we need to test our font

4
00:00:08,429 --> 00:00:13,048
importing today and fix anything that's

5
00:00:10,800 --> 00:00:15,089
broken with it if I remember correctly

6
00:00:13,048 --> 00:00:18,179
there's one thing we didn't quite get to

7
00:00:15,089 --> 00:00:24,149
finish last weekend when we did all this

8
00:00:18,179 --> 00:00:27,448
stuff it was that when you encounter in

9
00:00:24,149 --> 00:00:30,750
the font in sort of the manifest if you

10
00:00:27,449 --> 00:00:34,679
will that says what kinds of information

11
00:00:30,750 --> 00:00:36,630
go with this font we have a routine

12
00:00:34,679 --> 00:00:41,340
that's like stubbed-out currently which

13
00:00:36,630 --> 00:00:43,649
needs to do the import of the PNG for

14
00:00:41,340 --> 00:00:47,039
the font glyph and this is just a rehash

15
00:00:43,649 --> 00:00:51,120
of code we already have to import the

16
00:00:47,039 --> 00:00:53,969
PNG and pack it into the art pack file

17
00:00:51,119 --> 00:00:55,919
but we didn't do the work of actually

18
00:00:53,969 --> 00:00:58,198
like calling out to the correct things

19
00:00:55,920 --> 00:01:00,719
to do that so we need to do a little bit

20
00:00:58,198 --> 00:01:02,339
of like of a code reorganization just

21
00:01:00,719 --> 00:01:04,769
some a little bit to make sure that we

22
00:01:02,340 --> 00:01:07,020
can reuse that same path for both cases

23
00:01:04,769 --> 00:01:09,570
the case where we import a sprite and

24
00:01:07,019 --> 00:01:11,759
the case where we import a font glyph so

25
00:01:09,569 --> 00:01:13,289
we need to do that today and then get

26
00:01:11,760 --> 00:01:15,090
everything debugged which would probably

27
00:01:13,290 --> 00:01:17,490
I'm sure we'll take today and tomorrow

28
00:01:15,090 --> 00:01:19,850
to do because there was a lot of

29
00:01:17,489 --> 00:01:24,629
subtlety in it if I remember correctly

30
00:01:19,849 --> 00:01:26,938
so what we want to do now is just jump

31
00:01:24,629 --> 00:01:29,280
into that particular implementation

32
00:01:26,938 --> 00:01:31,379
detail get that working and then we can

33
00:01:29,280 --> 00:01:33,570
move on to testing everything and

34
00:01:31,379 --> 00:01:36,030
debugging it so I'm gonna load up and

35
00:01:33,569 --> 00:01:38,548
made hero here gonna go ahead and do the

36
00:01:36,030 --> 00:01:40,920
builds and I don't know if this probably

37
00:01:38,549 --> 00:01:44,490
builds okay yeah cuz we had a not

38
00:01:40,920 --> 00:01:45,810
implemented there and so actually we

39
00:01:44,489 --> 00:01:50,569
haven't searched for not implement in a

40
00:01:45,810 --> 00:01:50,570
while how much we got let's take a look

41
00:01:51,290 --> 00:02:02,670
so it looks like we've got a 1 hanging

42
00:01:59,459 --> 00:02:05,309
around here in the in the room generator

43
00:02:02,670 --> 00:02:07,439
stuff which is fine that looks like

44
00:02:05,310 --> 00:02:08,929
that's not even in there anymore there's

45
00:02:07,438 --> 00:02:11,639
the one we're talking about

46
00:02:08,929 --> 00:02:13,349
and then right we have to do the base

47
00:02:11,639 --> 00:02:15,779
name so we've got 2

48
00:02:13,349 --> 00:02:19,019
we want to do today this one's trivial

49
00:02:15,780 --> 00:02:21,750
it's just changing get a create asset

50
00:02:19,020 --> 00:02:23,790
source file to be able to use a non null

51
00:02:21,750 --> 00:02:25,710
terminated string because we just kind

52
00:02:23,789 --> 00:02:27,179
of moved away from those and there's

53
00:02:25,710 --> 00:02:28,890
still a couple old parts of the codebase

54
00:02:27,180 --> 00:02:30,990
that still use them I don't really want

55
00:02:28,889 --> 00:02:32,429
them hanging around and then we have to

56
00:02:30,990 --> 00:02:34,110
do this import glyph so those are the

57
00:02:32,430 --> 00:02:35,040
two things we want to do today let's

58
00:02:34,110 --> 00:02:36,270
start with this one because it's

59
00:02:35,039 --> 00:02:38,519
probably a little bit more

60
00:02:36,270 --> 00:02:41,640
straightforward in the getter create

61
00:02:38,520 --> 00:02:43,650
asset source file the original call was

62
00:02:41,639 --> 00:02:45,779
taking this care start base name here

63
00:02:43,650 --> 00:02:49,020
what I'd like to do is change it to take

64
00:02:45,780 --> 00:02:51,030
the base name as actual string which is

65
00:02:49,020 --> 00:02:52,920
you know a length string as opposed to a

66
00:02:51,030 --> 00:02:54,569
null terminated string and so what I

67
00:02:52,919 --> 00:02:57,929
really want to do here is just to pull

68
00:02:54,569 --> 00:03:00,870
this part out and actually you know

69
00:02:57,930 --> 00:03:03,510
implement the one implement it off of

70
00:03:00,870 --> 00:03:06,120
this kind of a call and then the one

71
00:03:03,509 --> 00:03:08,039
that has the null terminated if we want

72
00:03:06,120 --> 00:03:09,450
to we don't really have to go patch the

73
00:03:08,039 --> 00:03:11,639
rest of the people who were doing this

74
00:03:09,449 --> 00:03:13,739
what we can do instead here is just wrap

75
00:03:11,639 --> 00:03:16,949
it and then pass it along that's not as

76
00:03:13,740 --> 00:03:19,379
efficient but it's totally fine for our

77
00:03:16,949 --> 00:03:21,479
purposes at the moment because again

78
00:03:19,379 --> 00:03:23,669
this is not really a hot code path that

79
00:03:21,479 --> 00:03:24,929
we care about so we don't really care

80
00:03:23,669 --> 00:03:27,030
about the fact that maybe some people

81
00:03:24,930 --> 00:03:28,020
out there who are currently doing worked

82
00:03:27,030 --> 00:03:29,729
and they'll terminate something that

83
00:03:28,020 --> 00:03:31,590
they didn't need to know terminate now

84
00:03:29,729 --> 00:03:33,299
don't have to do that I don't really

85
00:03:31,590 --> 00:03:36,330
care so what I'm going to do instead is

86
00:03:33,300 --> 00:03:38,790
just you know have this thunk through to

87
00:03:36,330 --> 00:03:42,570
the call that uses the string itself

88
00:03:38,789 --> 00:03:44,039
like so and since we really don't use

89
00:03:42,569 --> 00:03:46,709
the string for anything other than

90
00:03:44,039 --> 00:03:49,409
matching and hashing both of which

91
00:03:46,710 --> 00:03:51,840
already work off of strings I think

92
00:03:49,409 --> 00:03:54,180
literally just moving the code into

93
00:03:51,840 --> 00:03:56,610
something where base name is Mark this

94
00:03:54,180 --> 00:03:59,310
type string as opposed to marked as type

95
00:03:56,610 --> 00:04:00,620
care star is probably sufficient but let

96
00:03:59,310 --> 00:04:05,729
me double check there may be one or two

97
00:04:00,620 --> 00:04:08,340
small things we have to do there I just

98
00:04:05,729 --> 00:04:10,919
type oh but yes so that that's it right

99
00:04:08,340 --> 00:04:13,469
so again not really a big deal because

100
00:04:10,919 --> 00:04:15,659
op function overloading took care of

101
00:04:13,469 --> 00:04:17,910
that port for us right we have a strings

102
00:04:15,659 --> 00:04:20,670
are equal in a string hash of for

103
00:04:17,910 --> 00:04:22,650
regular strings so we didn't really even

104
00:04:20,670 --> 00:04:26,730
need to change the code it just kind of

105
00:04:22,649 --> 00:04:29,250
works right so that's it for that

106
00:04:26,730 --> 00:04:31,620
what we need to do now is go back and

107
00:04:29,250 --> 00:04:34,319
deal with the glyphs part of things and

108
00:04:31,620 --> 00:04:36,389
that's a little bit more Squinkie

109
00:04:34,319 --> 00:04:39,629
because we've got we've got more work to

110
00:04:36,389 --> 00:04:42,479
do there right what's happening here is

111
00:04:39,629 --> 00:04:45,060
when we asked to import a glyph with a

112
00:04:42,480 --> 00:04:47,430
particular base name we need to do all

113
00:04:45,060 --> 00:04:48,899
of the things we were doing before for

114
00:04:47,430 --> 00:04:51,030
importing pngs

115
00:04:48,899 --> 00:04:53,729
and so we want to try and figure out how

116
00:04:51,029 --> 00:04:56,399
to share those two code paths so that we

117
00:04:53,730 --> 00:04:59,280
don't have to do them twice and what you

118
00:04:56,399 --> 00:05:01,019
can see here is you know the in the

119
00:04:59,279 --> 00:05:03,479
normal code path it's kind of welded

120
00:05:01,019 --> 00:05:05,370
together so if we take a look in here

121
00:05:03,480 --> 00:05:06,780
and you know this is the branch that

122
00:05:05,370 --> 00:05:08,910
we're talking about when we get to the

123
00:05:06,779 --> 00:05:12,089
end where everything's been parsed for

124
00:05:08,910 --> 00:05:13,350
like our sprites or something what you

125
00:05:12,089 --> 00:05:15,959
can see is that when we get into the

126
00:05:13,350 --> 00:05:18,270
needs will rebuild part of the code

127
00:05:15,959 --> 00:05:21,839
this where we open the file that

128
00:05:18,269 --> 00:05:24,899
contains the PNG builds the checksum

129
00:05:21,839 --> 00:05:27,889
right it goes ahead and makes a stream

130
00:05:24,899 --> 00:05:30,449
for reading the PNG asks it to be parsed

131
00:05:27,889 --> 00:05:32,579
doesn't import types which and then

132
00:05:30,449 --> 00:05:34,920
picks one of the import kinds right and

133
00:05:32,579 --> 00:05:37,859
then comes out here to do the asset

134
00:05:34,920 --> 00:05:41,670
metadata updating that whole series of

135
00:05:37,860 --> 00:05:44,400
things wants to happen here as well and

136
00:05:41,670 --> 00:05:46,439
in addition to that there was already

137
00:05:44,399 --> 00:05:48,870
something up here that it happened that

138
00:05:46,439 --> 00:05:52,439
we also care about which as you can see

139
00:05:48,870 --> 00:05:55,470
we build a location that we want this

140
00:05:52,439 --> 00:05:58,079
thing to come from right so it's got a

141
00:05:55,470 --> 00:06:01,080
art directory associated with it that's

142
00:05:58,079 --> 00:06:03,180
off of the sources path and what we want

143
00:06:01,079 --> 00:06:06,539
to be able to do there is we want to go

144
00:06:03,180 --> 00:06:10,410
off of the sources path find the PNG

145
00:06:06,540 --> 00:06:13,439
file look to see whether or not that PNG

146
00:06:10,410 --> 00:06:17,490
file is newer than the last time we read

147
00:06:13,439 --> 00:06:22,230
it you know and that's what's happening

148
00:06:17,490 --> 00:06:23,910
here and or report if we didn't find it

149
00:06:22,230 --> 00:06:27,480
and then move on from there

150
00:06:23,910 --> 00:06:30,000
right so that's what we're trying to do

151
00:06:27,480 --> 00:06:32,370
here and so I kind of want something

152
00:06:30,000 --> 00:06:35,850
that's going to allow me to reuse some

153
00:06:32,370 --> 00:06:37,590
of this code so that I'm not duplicating

154
00:06:35,850 --> 00:06:40,550
anything that I want to make sure

155
00:06:37,589 --> 00:06:43,609
happens the same way in both cases

156
00:06:40,550 --> 00:06:45,770
um again like I don't really care too

157
00:06:43,610 --> 00:06:49,100
much one eye I'm not a fetishist when it

158
00:06:45,769 --> 00:06:51,769
comes to you know as you know I always

159
00:06:49,100 --> 00:06:54,170
try to emphasize practical programming

160
00:06:51,769 --> 00:06:56,449
so I don't care about abstracting things

161
00:06:54,170 --> 00:06:58,120
for abstraction steak or object-oriented

162
00:06:56,449 --> 00:07:00,800
programming or any of that garbage I

163
00:06:58,120 --> 00:07:03,050
think it's all a waste of time but what

164
00:07:00,800 --> 00:07:04,730
I do care about is not creating extra

165
00:07:03,050 --> 00:07:06,470
work for myself because that's the most

166
00:07:04,730 --> 00:07:09,650
important thing in programming is to not

167
00:07:06,470 --> 00:07:12,020
create extra work and if we just cut and

168
00:07:09,649 --> 00:07:14,179
paste these things together what's gonna

169
00:07:12,019 --> 00:07:16,879
happen is if I need to maintain

170
00:07:14,180 --> 00:07:19,459
something so if I need to change part of

171
00:07:16,879 --> 00:07:21,290
it right I'm gonna have to change it in

172
00:07:19,459 --> 00:07:23,149
multiple places and that becomes a

173
00:07:21,290 --> 00:07:25,100
maintenance headache for me when things

174
00:07:23,149 --> 00:07:28,250
are complicated like they are inside the

175
00:07:25,100 --> 00:07:30,350
asset import system so again the

176
00:07:28,250 --> 00:07:32,029
complexity of the system versus how much

177
00:07:30,350 --> 00:07:34,490
maintenance might be required all these

178
00:07:32,029 --> 00:07:36,409
sorts of things they combine in this

179
00:07:34,490 --> 00:07:39,110
case to make me nervous in a way that I

180
00:07:36,410 --> 00:07:42,080
don't want this code getting spread out

181
00:07:39,110 --> 00:07:45,110
to lots of places where each one is

182
00:07:42,079 --> 00:07:46,819
doing it and then perhaps the way

183
00:07:45,110 --> 00:07:49,879
they're doing it ends up diverging I

184
00:07:46,819 --> 00:07:52,219
don't like that idea so what I want here

185
00:07:49,879 --> 00:07:55,100
is a way of making sure that the parts

186
00:07:52,220 --> 00:07:57,380
that are sensitive are shared so that I

187
00:07:55,100 --> 00:07:59,390
only have to change those parts once if

188
00:07:57,379 --> 00:08:02,449
I need to like update the way that it's

189
00:07:59,389 --> 00:08:04,099
done so again what I'm going to do is

190
00:08:02,449 --> 00:08:06,019
standard compression or in a program

191
00:08:04,100 --> 00:08:09,110
approach here I'm going to do the cut

192
00:08:06,019 --> 00:08:11,120
and paste temporarily I'm going to see

193
00:08:09,110 --> 00:08:13,520
what I write an import glyph and then

194
00:08:11,120 --> 00:08:16,280
I'm going to try and pull out the common

195
00:08:13,519 --> 00:08:18,289
sections to have both code paths call

196
00:08:16,279 --> 00:08:20,679
those common sections and in doing it

197
00:08:18,290 --> 00:08:22,670
that way I'm hoping that I will avoid

198
00:08:20,680 --> 00:08:24,019
abstracting things in a way that

199
00:08:22,670 --> 00:08:25,970
actually makes them cumbersome and

200
00:08:24,019 --> 00:08:27,849
instead focus on only abstracting those

201
00:08:25,970 --> 00:08:32,570
things that can be cleanly done

202
00:08:27,850 --> 00:08:34,340
parametrically all right so here we go

203
00:08:32,570 --> 00:08:35,450
I'm gonna go ahead and copy this part

204
00:08:34,340 --> 00:08:37,759
because I know it will have to happen

205
00:08:35,450 --> 00:08:40,400
right I'm going to need to do a file

206
00:08:37,759 --> 00:08:42,889
name I don't need to parse it because

207
00:08:40,399 --> 00:08:44,389
I'm getting it passed in here so the

208
00:08:42,889 --> 00:08:46,789
part that would normally come from file

209
00:08:44,389 --> 00:08:49,429
name is actually already done the format

210
00:08:46,789 --> 00:08:51,319
string however would be the same and it

211
00:08:49,429 --> 00:08:53,599
would need to use the HHA stem the

212
00:08:51,320 --> 00:08:54,590
subtor in this case is known to always

213
00:08:53,600 --> 00:08:57,200
be font

214
00:08:54,590 --> 00:09:01,519
so we can pretty much hard-code that one

215
00:08:57,200 --> 00:09:02,360
actually you know to this because

216
00:09:01,519 --> 00:09:04,220
they're not allowed to come from

217
00:09:02,360 --> 00:09:06,500
anywhere else at least at the moment and

218
00:09:04,220 --> 00:09:12,710
then we have the bitmap base name coming

219
00:09:06,500 --> 00:09:14,899
in here which is like that and this is

220
00:09:12,710 --> 00:09:16,670
how we produced that source so again you

221
00:09:14,899 --> 00:09:17,720
know looking at that that that looks

222
00:09:16,669 --> 00:09:20,120
like something we'll be able to compress

223
00:09:17,720 --> 00:09:22,370
into a common call because it's very

224
00:09:20,120 --> 00:09:25,070
very structured right very much what we

225
00:09:22,370 --> 00:09:26,570
would expect when we go through here and

226
00:09:25,070 --> 00:09:27,950
do the get file path this stuff all

227
00:09:26,570 --> 00:09:29,720
would be exactly the same way and the

228
00:09:27,950 --> 00:09:31,490
match would would be the same as well

229
00:09:29,720 --> 00:09:33,980
all of these things would be exactly the

230
00:09:31,490 --> 00:09:35,539
same and the needs full rebuild would be

231
00:09:33,980 --> 00:09:37,580
the same as well so you can you can see

232
00:09:35,539 --> 00:09:39,980
why I think that this wants to be shared

233
00:09:37,580 --> 00:09:42,350
because just looking at it a lot of the

234
00:09:39,980 --> 00:09:44,028
things are exactly the same now when we

235
00:09:42,350 --> 00:09:45,769
actually issue the error here we do have

236
00:09:44,028 --> 00:09:47,870
a problem we don't really know where we

237
00:09:45,769 --> 00:09:50,299
would be issuing that error to hopefully

238
00:09:47,870 --> 00:09:52,100
and here the context has that it does so

239
00:09:50,299 --> 00:09:54,349
that makes it easier on us so we should

240
00:09:52,100 --> 00:09:59,180
be able to do something like okay let's

241
00:09:54,350 --> 00:10:01,940
output to this error stream like so and

242
00:09:59,179 --> 00:10:03,588
we can say file not found with this path

243
00:10:01,940 --> 00:10:05,870
that we looked for that should be

244
00:10:03,589 --> 00:10:08,930
sufficient right because we don't really

245
00:10:05,870 --> 00:10:11,450
need to attach a token name to it since

246
00:10:08,929 --> 00:10:13,338
the path should be fairly obvious now if

247
00:10:11,450 --> 00:10:15,680
we did want to attach a token to it we

248
00:10:13,339 --> 00:10:17,839
could do it that way by having import

249
00:10:15,679 --> 00:10:20,179
cliff take an actual token here because

250
00:10:17,839 --> 00:10:23,140
we do have one that comes with and it

251
00:10:20,179 --> 00:10:25,250
could take the tokenizer and the token I

252
00:10:23,139 --> 00:10:27,470
don't know how you guys feel about that

253
00:10:25,250 --> 00:10:29,450
it's it would be Barrett slightly better

254
00:10:27,470 --> 00:10:31,279
err reporting so maybe it is worth it in

255
00:10:29,450 --> 00:10:37,459
other words maybe it's a better idea to

256
00:10:31,279 --> 00:10:39,649
just do something like this and then

257
00:10:37,458 --> 00:10:41,779
what I can do is say alright it's fine

258
00:10:39,649 --> 00:10:46,639
here's the tokenizer and here's the

259
00:10:41,779 --> 00:10:49,279
source token in question it seems okay

260
00:10:46,639 --> 00:10:50,899
and then when we call import glyph when

261
00:10:49,279 --> 00:10:52,909
we're doing this it's pretty easy

262
00:10:50,899 --> 00:10:57,980
because we we would be calling it

263
00:10:52,909 --> 00:11:02,539
directly off of a glyph parse right so

264
00:10:57,980 --> 00:11:06,460
in here where we do glyph

265
00:11:02,539 --> 00:11:06,459
are we even calling you forklift yet

266
00:11:08,679 --> 00:11:16,669
gonna be honest I'm not sure if he ever

267
00:11:10,549 --> 00:11:18,319
did that dude oh yeah we I'm like where

268
00:11:16,669 --> 00:11:20,629
is it I just couldn't see it comes off

269
00:11:18,320 --> 00:11:22,640
the side so in here right we know

270
00:11:20,629 --> 00:11:24,679
exactly where we would call this because

271
00:11:22,639 --> 00:11:26,090
we have the glyph token so yeah I'm just

272
00:11:24,679 --> 00:11:27,859
gonna go ahead and say let's pass that

273
00:11:26,090 --> 00:11:29,480
through because it just would lead to

274
00:11:27,860 --> 00:11:31,190
better error reporting so that when you

275
00:11:29,480 --> 00:11:32,570
get an error the person will get a file

276
00:11:31,190 --> 00:11:34,640
on line number then they can go look at

277
00:11:32,570 --> 00:11:37,190
to know what's wrong in their tags file

278
00:11:34,639 --> 00:11:39,129
that seems like a worthwhile case so

279
00:11:37,190 --> 00:11:47,720
just go ahead and pass it along right

280
00:11:39,129 --> 00:11:52,220
all right um so that's the start that

281
00:11:47,720 --> 00:11:54,529
opens up the source PNG as necessary so

282
00:11:52,220 --> 00:11:57,230
when we get this file we would say all

283
00:11:54,529 --> 00:11:58,939
right you know check to see whether we

284
00:11:57,230 --> 00:12:00,289
already know about this file let's see

285
00:11:58,940 --> 00:12:03,800
whether or not we need to do a full

286
00:12:00,289 --> 00:12:05,480
rebuild so etc and so then the next

287
00:12:03,799 --> 00:12:07,459
thing that we want to do is we want to

288
00:12:05,480 --> 00:12:10,909
copy the part that actually parses the

289
00:12:07,460 --> 00:12:14,480
PNG so let's go through here and do that

290
00:12:10,909 --> 00:12:16,279
here's that full rebuild this is this

291
00:12:14,480 --> 00:12:17,840
desk file index part is also the same

292
00:12:16,279 --> 00:12:20,419
right like all of this stuff is pretty

293
00:12:17,840 --> 00:12:23,269
much the same so all through here what

294
00:12:20,419 --> 00:12:28,099
we would do is copy this entire block

295
00:12:23,269 --> 00:12:30,769
right there it is

296
00:12:28,100 --> 00:12:32,540
and you can see through here we would

297
00:12:30,769 --> 00:12:34,689
just say alright assuming that we were

298
00:12:32,539 --> 00:12:37,250
able to find a file this thing goes with

299
00:12:34,690 --> 00:12:39,530
because you know we if we can't then we

300
00:12:37,250 --> 00:12:43,460
we assume that we air it out in here and

301
00:12:39,529 --> 00:12:44,870
we we don't want to proceed assuming

302
00:12:43,460 --> 00:12:47,030
that it worked out what we're gonna do

303
00:12:44,870 --> 00:12:48,889
is check to make sure that we've labeled

304
00:12:47,029 --> 00:12:50,269
this and if it turns out that it moved

305
00:12:48,889 --> 00:12:52,539
eight days we need to mark a full

306
00:12:50,269 --> 00:12:52,539
rebuild

307
00:12:53,690 --> 00:13:00,560
and many come through here actually just

308
00:12:57,200 --> 00:13:03,470
looking at it I'm wondering if we can

309
00:13:00,559 --> 00:13:04,969
just pull out this entire thing and I

310
00:13:03,470 --> 00:13:06,620
don't really need to cut and paste it if

311
00:13:04,970 --> 00:13:09,980
you look at what happens here it looks

312
00:13:06,620 --> 00:13:12,289
like it's almost entirely reusable just

313
00:13:09,980 --> 00:13:14,899
directly as it is and if we pass the

314
00:13:12,289 --> 00:13:18,289
import grid in here which we could do I

315
00:13:14,899 --> 00:13:19,579
think we would just be done so I'm

316
00:13:18,289 --> 00:13:21,649
actually gonna go ahead and say I'm not

317
00:13:19,580 --> 00:13:25,790
even gonna bother with this one here I'm

318
00:13:21,649 --> 00:13:28,669
just gonna say like this is the update

319
00:13:25,789 --> 00:13:30,230
you know imported asset file or

320
00:13:28,669 --> 00:13:33,829
something like this so there's going to

321
00:13:30,230 --> 00:13:37,399
be a call here called like update

322
00:13:33,830 --> 00:13:44,900
imported asset data from file or

323
00:13:37,399 --> 00:13:47,778
something right and what I'm going to do

324
00:13:44,899 --> 00:13:52,069
is extract this code out as that call

325
00:13:47,778 --> 00:13:54,980
because it's just so obviously clear

326
00:13:52,070 --> 00:13:57,410
that I can there's not a lot of point in

327
00:13:54,980 --> 00:13:58,909
me actually going through and changing

328
00:13:57,409 --> 00:14:02,028
anything because I don't think I would

329
00:13:58,909 --> 00:14:05,990
change anything so in here we're gonna

330
00:14:02,028 --> 00:14:08,028
have update asset data from file that's

331
00:14:05,990 --> 00:14:09,680
gonna take whatever we determine it

332
00:14:08,028 --> 00:14:15,708
actually needs to take in order for us

333
00:14:09,679 --> 00:14:19,159
to get in order in order for us to get

334
00:14:15,708 --> 00:14:20,719
out of it what we want and so when I

335
00:14:19,159 --> 00:14:23,360
call import glyph I'm going to call it

336
00:14:20,720 --> 00:14:26,450
and similarly when you know when were in

337
00:14:23,360 --> 00:14:28,730
here we're gonna call it like so now

338
00:14:26,450 --> 00:14:30,560
there's a little bit of a rub the import

339
00:14:28,730 --> 00:14:33,259
glyph needs to be able to know what the

340
00:14:30,559 --> 00:14:35,449
bitmap was that it imported and so

341
00:14:33,259 --> 00:14:37,909
that's gonna kind of be a separate part

342
00:14:35,450 --> 00:14:39,709
that we need to weld into that update

343
00:14:37,909 --> 00:14:41,299
acid data from file that's the one thing

344
00:14:39,708 --> 00:14:43,609
that's going to require a little bit of

345
00:14:41,299 --> 00:14:45,079
modification in order for it to be used

346
00:14:43,610 --> 00:14:48,100
with import glyph but other than that

347
00:14:45,080 --> 00:14:50,959
everything probably is going to be okay

348
00:14:48,100 --> 00:14:53,690
if we take a look at update acid data

349
00:14:50,958 --> 00:14:55,009
from file now I want to work backwards

350
00:14:53,690 --> 00:14:56,750
from the place where it was originally

351
00:14:55,009 --> 00:14:59,289
done to figure out what it actually

352
00:14:56,750 --> 00:15:01,519
needs to be passed for file information

353
00:14:59,289 --> 00:15:03,799
looking at it it's pretty obvious that

354
00:15:01,519 --> 00:15:05,480
we're gonna need the context so you know

355
00:15:03,799 --> 00:15:05,839
cuz that goes through anything that's

356
00:15:05,480 --> 00:15:07,129
doing

357
00:15:05,840 --> 00:15:09,500
or it means that the information in that

358
00:15:07,129 --> 00:15:14,450
context so it's gonna need that it's

359
00:15:09,500 --> 00:15:16,278
also going to need the assuming the

360
00:15:14,450 --> 00:15:18,230
needs full rebuild flag because maybe

361
00:15:16,278 --> 00:15:20,480
someone wants to force the full rebuild

362
00:15:18,230 --> 00:15:22,759
to happen and so again that needs to

363
00:15:20,480 --> 00:15:26,120
occur there it needs to have that match

364
00:15:22,759 --> 00:15:28,669
file so the this thing here that we were

365
00:15:26,120 --> 00:15:30,560
actually pulling out is what is the the

366
00:15:28,669 --> 00:15:32,838
information about the source file that

367
00:15:30,559 --> 00:15:35,269
we've stored that has to be there as

368
00:15:32,839 --> 00:15:37,790
well because that's been found by the

369
00:15:35,269 --> 00:15:39,588
outer code so we need those and then

370
00:15:37,789 --> 00:15:42,469
when we come through here we can start

371
00:15:39,589 --> 00:15:45,710
to see this temporary nakir actually

372
00:15:42,470 --> 00:15:50,210
comes out of the context I will go ahead

373
00:15:45,710 --> 00:15:52,490
and pull that out just to make it a

374
00:15:50,210 --> 00:15:55,700
little easier you can see that's a thing

375
00:15:52,490 --> 00:15:57,200
we've got here that just makes it so I'd

376
00:15:55,700 --> 00:15:59,270
have to go through and change this this

377
00:15:57,200 --> 00:16:04,970
typing everything else in here looks

378
00:15:59,269 --> 00:16:06,949
okay the file info needs to be passed so

379
00:16:04,970 --> 00:16:08,778
meaning this platform file basically the

380
00:16:06,950 --> 00:16:11,210
things that we're at the top of this you

381
00:16:08,778 --> 00:16:14,409
know those need to be passed in so this

382
00:16:11,210 --> 00:16:20,720
is where the file is coming from uh

383
00:16:14,409 --> 00:16:26,649
maybe that would go here and what else

384
00:16:20,720 --> 00:16:29,149
so all of this stuff is is

385
00:16:26,649 --> 00:16:30,889
self-contained so then when we come

386
00:16:29,149 --> 00:16:33,919
through here we've got stuff like is art

387
00:16:30,889 --> 00:16:39,289
is audio and then we have like the

388
00:16:33,919 --> 00:16:41,299
import type and you know honestly just

389
00:16:39,289 --> 00:16:47,449
looking at that it seems kind of stupid

390
00:16:41,299 --> 00:16:49,699
for it to be done that way we don't so

391
00:16:47,450 --> 00:16:51,500
we don't really need that is audio we

392
00:16:49,700 --> 00:16:53,270
don't we don't really need that stuff

393
00:16:51,500 --> 00:16:55,789
anymore so I think I'm going to go ahead

394
00:16:53,269 --> 00:16:57,559
and simplify that case and then we'll

395
00:16:55,789 --> 00:16:59,329
look at the the next part so for example

396
00:16:57,559 --> 00:17:03,949
in here right we've just got this parse

397
00:16:59,330 --> 00:17:06,439
PNG with the image here I feel like that

398
00:17:03,950 --> 00:17:09,410
is just it's not that much code so I

399
00:17:06,439 --> 00:17:11,209
feel like this is just fine right and in

400
00:17:09,410 --> 00:17:14,029
fact we could just pull these out right

401
00:17:11,209 --> 00:17:18,949
so we've got you know these two here and

402
00:17:14,029 --> 00:17:21,869
then the sound goes in here and these

403
00:17:18,949 --> 00:17:25,640
or like that right and that way you were

404
00:17:21,869 --> 00:17:31,259
only really passing one thing down there

405
00:17:25,640 --> 00:17:32,880
oops I mean do that I meant to do that

406
00:17:31,259 --> 00:17:35,548
so that would be only need to pass one

407
00:17:32,880 --> 00:17:39,090
thing to this this function and that is

408
00:17:35,548 --> 00:17:41,609
which type of content import you were

409
00:17:39,089 --> 00:17:43,439
intending to do and that's the only

410
00:17:41,609 --> 00:17:44,369
thing that you'll have to tell me right

411
00:17:43,440 --> 00:17:47,580
that's the only thing that you have to

412
00:17:44,369 --> 00:17:53,939
tell that code so if I go ahead and grab

413
00:17:47,579 --> 00:17:56,579
import type and put that up here that

414
00:17:53,940 --> 00:17:59,909
should take care of that part looking in

415
00:17:56,579 --> 00:18:01,980
here as at the like is audio is art

416
00:17:59,909 --> 00:18:04,610
stuff III should also look to see

417
00:18:01,980 --> 00:18:10,860
whether anyone actually cares about that

418
00:18:04,609 --> 00:18:13,079
so no one does it looks like the only

419
00:18:10,859 --> 00:18:20,250
thing that actually people care about

420
00:18:13,079 --> 00:18:22,528
here is the is art flag is used to do a

421
00:18:20,250 --> 00:18:25,769
couple things so I think that is all you

422
00:18:22,528 --> 00:18:27,898
can just go away we we just don't need

423
00:18:25,769 --> 00:18:29,788
that and really all we need is the one

424
00:18:27,898 --> 00:18:31,619
thing that says is art is true because

425
00:18:29,788 --> 00:18:34,589
there's some errors and some things we

426
00:18:31,619 --> 00:18:39,178
do that we wouldn't do if it wasn't art

427
00:18:34,589 --> 00:18:41,339
right so that seems pretty easy and so

428
00:18:39,179 --> 00:18:44,759
then in here for something like the is

429
00:18:41,339 --> 00:18:47,490
art side of things and seeing whether or

430
00:18:44,759 --> 00:18:50,369
not we need to make this stuff get

431
00:18:47,490 --> 00:18:53,399
mapped I feel like that's something we

432
00:18:50,369 --> 00:18:57,528
could still do outside I don't know

433
00:18:53,398 --> 00:18:57,528
exactly how I want that to happen

434
00:19:03,900 --> 00:19:11,680
so this might want to not occur here as

435
00:19:09,579 --> 00:19:14,319
I guess what I'm saying

436
00:19:11,680 --> 00:19:15,190
I may want this to be only in the other

437
00:19:14,319 --> 00:19:17,769
code path

438
00:19:15,190 --> 00:19:19,420
I'm let's put it there temporarily and

439
00:19:17,769 --> 00:19:21,460
see what we want to do with the line

440
00:19:19,420 --> 00:19:24,850
points separately so what I'm going to

441
00:19:21,460 --> 00:19:27,880
do is I'm not going to I'm not going to

442
00:19:24,849 --> 00:19:33,699
unify that code path just yet about let

443
00:19:27,880 --> 00:19:44,650
that happen here right and that way it

444
00:19:33,700 --> 00:19:53,980
should be such that this kind of returns

445
00:19:44,650 --> 00:20:01,420
some sort of a result here and assuming

446
00:19:53,980 --> 00:20:03,579
that this thing matches I guess we'll do

447
00:20:01,420 --> 00:20:06,610
something like this so meaning if there

448
00:20:03,579 --> 00:20:09,639
were if it if it thinks it's okay right

449
00:20:06,609 --> 00:20:12,639
then off we would go so then I think

450
00:20:09,640 --> 00:20:13,540
that leaves us mostly just looking at

451
00:20:12,640 --> 00:20:16,180
what's happening here

452
00:20:13,539 --> 00:20:18,759
with just these extra things that need

453
00:20:16,180 --> 00:20:20,289
to get sort of sorted out which is the

454
00:20:18,759 --> 00:20:21,910
fields the template tags and the append

455
00:20:20,289 --> 00:20:23,440
tag so those are the things that need to

456
00:20:21,910 --> 00:20:26,529
happen to make sure that the metadata

457
00:20:23,440 --> 00:20:29,920
for the asset gets updated with the

458
00:20:26,529 --> 00:20:33,789
information that we have and looking at

459
00:20:29,920 --> 00:20:35,230
that I do think this becomes the right

460
00:20:33,789 --> 00:20:41,319
decision and the reason for that is that

461
00:20:35,230 --> 00:20:43,930
fonts don't have updating we get our

462
00:20:41,319 --> 00:20:47,379
kerning information out of the file so

463
00:20:43,930 --> 00:20:50,410
we don't we we can't really edit that in

464
00:20:47,380 --> 00:20:52,930
the game because if we did it wouldn't

465
00:20:50,410 --> 00:20:54,400
it would get overwritten by the HH font

466
00:20:52,930 --> 00:20:57,220
utility if you ever tried to modify the

467
00:20:54,400 --> 00:20:59,650
font anyway so it seems to me like

468
00:20:57,220 --> 00:21:01,750
that's not really something we would

469
00:20:59,650 --> 00:21:03,940
need to have happen so that does suggest

470
00:21:01,750 --> 00:21:07,000
to me that maybe this is what it should

471
00:21:03,940 --> 00:21:08,890
look like now if I go grab how the rest

472
00:21:07,000 --> 00:21:10,750
of this stuff is supposed to work so we

473
00:21:08,890 --> 00:21:13,390
look in here we've got append tags and

474
00:21:10,750 --> 00:21:13,970
template tags and that stuff if we want

475
00:21:13,390 --> 00:21:17,690
to

476
00:21:13,970 --> 00:21:19,490
make that stuff work as something that's

477
00:21:17,690 --> 00:21:21,769
passed in I'm going to have to have a

478
00:21:19,490 --> 00:21:24,349
place where it does get passed in so

479
00:21:21,769 --> 00:21:28,970
we're gonna have to have the append tags

480
00:21:24,349 --> 00:21:49,849
here we're gonna need the template as

481
00:21:28,970 --> 00:21:51,950
well which is here and the fields so I

482
00:21:49,849 --> 00:21:54,769
think that's pretty much it and then in

483
00:21:51,950 --> 00:21:57,049
here we would pass that directly so it

484
00:21:54,769 --> 00:21:59,599
would look something like this and I

485
00:21:57,049 --> 00:22:01,970
think then that pretty much just creates

486
00:21:59,599 --> 00:22:05,899
the the same code path we were doing

487
00:22:01,970 --> 00:22:08,690
before but it has now the ability to be

488
00:22:05,900 --> 00:22:10,640
called from elsewhere now if we actually

489
00:22:08,690 --> 00:22:11,870
want to call this properly and didn't

490
00:22:10,640 --> 00:22:13,340
look like we get in the errors there so

491
00:22:11,869 --> 00:22:16,759
it looks like we're pretty much good to

492
00:22:13,339 --> 00:22:18,379
go if we go ahead and just make sure we

493
00:22:16,759 --> 00:22:20,660
pass all these well they all should

494
00:22:18,380 --> 00:22:25,580
basically just be stuff that we already

495
00:22:20,660 --> 00:22:29,750
hopes that's the wrong thing let's try

496
00:22:25,579 --> 00:22:32,179
that one more time so if we just take

497
00:22:29,750 --> 00:22:34,279
the context the match the file info

498
00:22:32,180 --> 00:22:36,680
passed those down we know the import

499
00:22:34,279 --> 00:22:39,349
type we know the needs full rebuild

500
00:22:36,680 --> 00:22:41,779
we've got the fields and the template

501
00:22:39,349 --> 00:22:46,549
tags and the append tags we've got

502
00:22:41,779 --> 00:22:48,980
everything it needs to do its job so I

503
00:22:46,549 --> 00:22:50,779
think that should create a correct call

504
00:22:48,980 --> 00:22:54,490
and so then we're just down to the fact

505
00:22:50,779 --> 00:23:00,470
that when we want to do an import glyph

506
00:22:54,490 --> 00:23:03,650
scuse me when we want to do an import

507
00:23:00,470 --> 00:23:08,089
glyph we need to be able to call it here

508
00:23:03,650 --> 00:23:11,210
now what I'm sort of seeing as I look at

509
00:23:08,089 --> 00:23:15,109
this is it looks like import clip import

510
00:23:11,210 --> 00:23:20,000
glyph probably won't actually have to be

511
00:23:15,109 --> 00:23:21,979
its own function assuming that we make a

512
00:23:20,000 --> 00:23:23,960
utility that does this because like I

513
00:23:21,980 --> 00:23:25,910
said it's happening in two places that I

514
00:23:23,960 --> 00:23:26,880
want to make sure it happens the same

515
00:23:25,910 --> 00:23:28,470
the

516
00:23:26,880 --> 00:23:30,690
it's really gonna end up being like two

517
00:23:28,470 --> 00:23:34,049
or three calls total inside this import

518
00:23:30,690 --> 00:23:35,490
cliff thing and there's really not it's

519
00:23:34,049 --> 00:23:38,490
just gonna create more work for me to

520
00:23:35,490 --> 00:23:40,140
call it as something separate so I'm not

521
00:23:38,490 --> 00:23:43,680
gonna do that what I'm gonna do instead

522
00:23:40,140 --> 00:23:46,590
is weld it directly into the code that

523
00:23:43,680 --> 00:23:49,890
does the font processing so right here

524
00:23:46,589 --> 00:23:51,839
where we do this import glyph call I'm

525
00:23:49,890 --> 00:23:56,130
actually just gonna say let's knife that

526
00:23:51,839 --> 00:23:58,679
temporarily and let's jam this whole

527
00:23:56,130 --> 00:24:01,230
piece of block of code right in here and

528
00:23:58,680 --> 00:24:02,519
and simplify it down in place and I

529
00:24:01,230 --> 00:24:06,960
think that's gonna be a more effective

530
00:24:02,519 --> 00:24:10,250
way to finish this off all right so we

531
00:24:06,960 --> 00:24:12,930
know that here we're gonna want to do

532
00:24:10,250 --> 00:24:14,910
you know we're gonna want to do this

533
00:24:12,930 --> 00:24:17,970
exact stuff that we were doing so we're

534
00:24:14,910 --> 00:24:19,800
will tackle that in a second and then

535
00:24:17,970 --> 00:24:22,170
finally we want to call update acid data

536
00:24:19,799 --> 00:24:23,460
assets data from file and in order to

537
00:24:22,170 --> 00:24:25,590
call that we need to make sure that we

538
00:24:23,460 --> 00:24:26,940
actually can pass it all of the because

539
00:24:25,589 --> 00:24:29,220
it needs quite a few things to be able

540
00:24:26,940 --> 00:24:31,590
to do that processing right if you just

541
00:24:29,220 --> 00:24:33,299
look at what goes on here so if we need

542
00:24:31,589 --> 00:24:36,209
to pass all of these things the question

543
00:24:33,299 --> 00:24:38,339
is do we actually have them and let's

544
00:24:36,210 --> 00:24:40,079
see so we know we've got the context we

545
00:24:38,339 --> 00:24:42,299
know we're gonna determine the match we

546
00:24:40,079 --> 00:24:44,250
know we can determine the file info for

547
00:24:42,299 --> 00:24:46,619
import type there is only one import

548
00:24:44,250 --> 00:24:49,529
type that we're allowing for a font and

549
00:24:46,619 --> 00:24:53,009
that's gonna be probably import type

550
00:24:49,529 --> 00:24:57,629
single tile meaning it has to be you

551
00:24:53,009 --> 00:25:02,069
know just just one bitmap there right we

552
00:24:57,630 --> 00:25:06,450
could call it a plate I don't really

553
00:25:02,069 --> 00:25:10,339
know hmm okay so if I go to process

554
00:25:06,450 --> 00:25:14,160
plate import versus process single tile

555
00:25:10,339 --> 00:25:16,019
what am I gonna see what's the

556
00:25:14,160 --> 00:25:24,509
difference between those two you know

557
00:25:16,019 --> 00:25:25,829
here they are so in one case so the

558
00:25:24,509 --> 00:25:28,019
really the only difference is that

559
00:25:25,829 --> 00:25:29,039
plates have a higher maximum dimension

560
00:25:28,019 --> 00:25:31,079
that's it

561
00:25:29,039 --> 00:25:32,849
there's no otherwise these are exactly

562
00:25:31,079 --> 00:25:36,299
the same really we should just have one

563
00:25:32,849 --> 00:25:38,159
call and all it does is passed it right

564
00:25:36,299 --> 00:25:41,569
I mean there's nothing else the only

565
00:25:38,160 --> 00:25:48,210
difference between these two is the

566
00:25:41,569 --> 00:25:51,470
right I mean unless I'm missing

567
00:25:48,210 --> 00:25:58,288
something there there is no they are

568
00:25:51,470 --> 00:26:00,720
exact copies I mean check me on this I

569
00:25:58,288 --> 00:26:03,569
don't want to be wrong so I think what

570
00:26:00,720 --> 00:26:07,319
we could say here is that process plate

571
00:26:03,569 --> 00:26:13,558
import if you if all you did was take a

572
00:26:07,319 --> 00:26:19,168
maximum dim value then effectively these

573
00:26:13,558 --> 00:26:22,470
just collapse down to one call so if I

574
00:26:19,169 --> 00:26:24,870
go to the update asset data from file

575
00:26:22,470 --> 00:26:26,819
call here and say well when these are

576
00:26:24,869 --> 00:26:29,879
actually going through their motions if

577
00:26:26,819 --> 00:26:32,009
we want to do a multi tile well then it

578
00:26:29,880 --> 00:26:34,049
does need to do its little like search

579
00:26:32,009 --> 00:26:36,720
function but if we're going to do a

580
00:26:34,048 --> 00:26:39,240
single tile or a plate then really those

581
00:26:36,720 --> 00:26:44,100
can just call process single tile and

582
00:26:39,240 --> 00:26:47,220
then take either the max plate dim or

583
00:26:44,099 --> 00:26:51,658
the max bright dim right so it would

584
00:26:47,220 --> 00:26:55,889
just be this exact same path no

585
00:26:51,659 --> 00:26:59,399
difference and really it's just that

586
00:26:55,888 --> 00:27:01,189
parameter that creates the difference so

587
00:26:59,398 --> 00:27:04,500
that would allow us to get rid of

588
00:27:01,190 --> 00:27:06,149
process plate import and replace it with

589
00:27:04,500 --> 00:27:08,339
something that just takes a maximum

590
00:27:06,148 --> 00:27:12,888
dimension that maximum dimension gets

591
00:27:08,339 --> 00:27:15,148
passed here and here and we're done so

592
00:27:12,888 --> 00:27:18,359
that's kind of a nice collapse as well

593
00:27:15,148 --> 00:27:21,388
anyway point being it for that purpose

594
00:27:18,359 --> 00:27:24,719
now we know if we just pass single tile

595
00:27:21,388 --> 00:27:28,678
that's fine for what we were trying to

596
00:27:24,720 --> 00:27:30,778
do there where's our font wow there's a

597
00:27:28,679 --> 00:27:34,710
lot of things called font that's the one

598
00:27:30,778 --> 00:27:37,829
we're actually looking for so in here

599
00:27:34,710 --> 00:27:39,630
where we do our import when we're

600
00:27:37,829 --> 00:27:41,099
talking about the import type if my head

601
00:27:39,630 --> 00:27:42,720
moves out of the way

602
00:27:41,099 --> 00:27:44,730
we've got single time port the needs

603
00:27:42,720 --> 00:27:46,829
full rebuild we don't really know what

604
00:27:44,730 --> 00:27:48,269
that's gonna be oh wait what we actually

605
00:27:46,829 --> 00:27:49,349
are did to find I was gonna say we need

606
00:27:48,269 --> 00:27:51,028
you know it's gonna be something that

607
00:27:49,349 --> 00:27:53,459
gets set up here but we did do that

608
00:27:51,028 --> 00:27:54,009
array so we've got that we know we've

609
00:27:53,460 --> 00:27:55,299
got the

610
00:27:54,009 --> 00:27:57,009
yields and then so what we're really

611
00:27:55,299 --> 00:28:00,069
talking about is the template tags in

612
00:27:57,009 --> 00:28:02,349
the appendix now I think and maybe I'm

613
00:28:00,069 --> 00:28:05,500
wrong about this but I think that our

614
00:28:02,349 --> 00:28:08,949
template tags are just irrelevant

615
00:28:05,500 --> 00:28:16,569
because there's nothing really we need

616
00:28:08,950 --> 00:28:20,470
to set there let's find out I don't

617
00:28:16,569 --> 00:28:27,189
actually know if that's true so that's

618
00:28:20,470 --> 00:28:29,740
an import grid tags so the asset basic

619
00:28:27,190 --> 00:28:34,509
category is probably something we would

620
00:28:29,740 --> 00:28:38,349
want to set which is to say that the

621
00:28:34,509 --> 00:28:42,400
basic categories we don't really need to

622
00:28:38,349 --> 00:28:48,009
set it but it seems like we might as

623
00:28:42,400 --> 00:28:50,200
well hmm I mean I guess technically it

624
00:28:48,009 --> 00:28:52,000
just doesn't need a basic category

625
00:28:50,200 --> 00:28:54,519
because fog lifts are looked up directly

626
00:28:52,000 --> 00:28:58,450
so I don't know it doesn't so I think we

627
00:28:54,519 --> 00:29:01,500
literally just don't care and I don't

628
00:28:58,450 --> 00:29:04,920
know if that if if the basic category

629
00:29:01,500 --> 00:29:04,920
when you do

630
00:29:11,500 --> 00:29:19,179
I don't know if it correctly checks to

631
00:29:15,308 --> 00:29:23,470
see so when it does asset type equals

632
00:29:19,179 --> 00:29:24,490
zero and then sets it you know it looks

633
00:29:23,470 --> 00:29:26,558
yeah

634
00:29:24,490 --> 00:29:33,819
it looks like it's always gonna chain

635
00:29:26,558 --> 00:29:37,168
these together I kind of want it to just

636
00:29:33,819 --> 00:29:40,538
ignore anything that's type zero though

637
00:29:37,169 --> 00:29:44,020
you know what I'm saying to you so I

638
00:29:40,538 --> 00:29:50,529
kind of feel like I want it to say like

639
00:29:44,019 --> 00:29:52,418
only do this if it's actually valid like

640
00:29:50,529 --> 00:29:56,019
I don't really want to keep chains Eero

641
00:29:52,419 --> 00:30:00,400
stuff because you should never be

642
00:29:56,019 --> 00:30:03,639
looking up on a tag for a chains ero so

643
00:30:00,400 --> 00:30:08,470
I'm kind of gonna say let's just leave

644
00:30:03,640 --> 00:30:10,750
that out for now and maybe that's a bad

645
00:30:08,470 --> 00:30:13,690
idea but I think that's the way I want

646
00:30:10,750 --> 00:30:16,960
it so we'll make that work eventually in

647
00:30:13,690 --> 00:30:23,380
import grid tags here that means that

648
00:30:16,960 --> 00:30:26,980
this is just gonna be nothing and so I

649
00:30:23,380 --> 00:30:30,059
can just sort of have that be you know

650
00:30:26,980 --> 00:30:32,440
something that nobody cares about I

651
00:30:30,058 --> 00:30:36,839
don't actually know if we do that

652
00:30:32,440 --> 00:30:40,900
anywhere else here I don't think we do

653
00:30:36,839 --> 00:30:43,779
so when we do the import I think that

654
00:30:40,900 --> 00:30:48,400
pretty much takes care of it so the

655
00:30:43,779 --> 00:30:50,730
template tags are just garbage and then

656
00:30:48,400 --> 00:30:53,860
that leaves us just with append tags and

657
00:30:50,730 --> 00:30:56,048
append tags again I think can just be

658
00:30:53,859 --> 00:30:58,629
nothing the reason I think that it can

659
00:30:56,048 --> 00:31:01,960
just be nothing is because again these

660
00:30:58,630 --> 00:31:04,750
all of these bitmaps Parden are not they

661
00:31:01,960 --> 00:31:06,519
have no information on them they they

662
00:31:04,750 --> 00:31:09,190
aren't ever looked up outside of the

663
00:31:06,519 --> 00:31:14,079
font itself so I think when we append it

664
00:31:09,190 --> 00:31:15,669
we can just say like no don't stick any

665
00:31:14,079 --> 00:31:18,339
tags on these things they're completely

666
00:31:15,669 --> 00:31:21,100
blank all we need to know is what the

667
00:31:18,339 --> 00:31:23,259
bitmap ID is and that's the end of it

668
00:31:21,099 --> 00:31:26,500
right

669
00:31:23,259 --> 00:31:30,700
okay so the only problem that I think

670
00:31:26,500 --> 00:31:34,230
we're left with here I is that this

671
00:31:30,700 --> 00:31:38,200
piece of code needs still needs to work

672
00:31:34,230 --> 00:31:41,470
so after we do the import we need some

673
00:31:38,200 --> 00:31:46,840
way of saying if we were able to like

674
00:31:41,470 --> 00:31:49,480
actually import this piece this glyph

675
00:31:46,839 --> 00:31:51,629
this piece of the fonts we need some way

676
00:31:49,480 --> 00:31:55,660
of getting back what the bitmap ID

677
00:31:51,630 --> 00:31:57,010
actually was and the problem is we're

678
00:31:55,660 --> 00:32:00,190
not gonna have any way to do that

679
00:31:57,009 --> 00:32:05,740
because update asset data from file may

680
00:32:00,190 --> 00:32:07,720
actually produce lots of bitmaps right

681
00:32:05,740 --> 00:32:10,240
in the case where you've got multi tile

682
00:32:07,720 --> 00:32:13,750
it's gonna just do a whole whole host of

683
00:32:10,240 --> 00:32:17,048
things right so there is a bit of an

684
00:32:13,750 --> 00:32:19,210
issue there but I believe we are saved

685
00:32:17,048 --> 00:32:22,119
by the fact that since we're already

686
00:32:19,210 --> 00:32:24,970
doing backing storage where we say what

687
00:32:22,119 --> 00:32:29,529
came out of what file if we look inside

688
00:32:24,970 --> 00:32:31,630
the asset system itself for those

689
00:32:29,529 --> 00:32:32,980
matches that we're tracking like you

690
00:32:31,630 --> 00:32:35,320
know we're tracking these source files

691
00:32:32,980 --> 00:32:38,110
if you go look at the asset source file

692
00:32:35,319 --> 00:32:41,500
information it just so happens to keep

693
00:32:38,109 --> 00:32:43,149
all of those asset indices already so

694
00:32:41,500 --> 00:32:45,700
what we should be able to do is say look

695
00:32:43,150 --> 00:32:49,210
you don't need to return me that

696
00:32:45,700 --> 00:32:51,490
information I can just say hey after

697
00:32:49,210 --> 00:32:53,950
you're done if it worked then the asset

698
00:32:51,490 --> 00:32:57,009
index you actually used is going to be

699
00:32:53,950 --> 00:32:58,269
sitting in 0 0 of this source file

700
00:32:57,009 --> 00:33:00,970
anyway because that's the only thing

701
00:32:58,269 --> 00:33:04,000
that you're actually allowed to update

702
00:33:00,970 --> 00:33:06,069
in a single tile export so it kind of

703
00:33:04,000 --> 00:33:07,869
does work to return the stuff that we

704
00:33:06,069 --> 00:33:10,808
wanted it to returned so that's pretty

705
00:33:07,869 --> 00:33:21,719
great and I think that just kind of

706
00:33:10,808 --> 00:33:21,720
works moving forward I don't know if I

707
00:33:23,308 --> 00:33:31,418
don't know if there's really anything

708
00:33:26,019 --> 00:33:34,599
else we need to do I think that might

709
00:33:31,419 --> 00:33:37,059
just work so I think we're basically

710
00:33:34,599 --> 00:33:41,528
left with just wanting this

711
00:33:37,058 --> 00:33:53,109
piece of code to not have sort of the

712
00:33:41,528 --> 00:33:56,878
duplication in its yeah like I think we

713
00:33:53,109 --> 00:33:56,878
just don't want that to be duplicated

714
00:33:59,548 --> 00:34:06,940
I'm not do you have I think all of those

715
00:34:03,669 --> 00:34:08,679
things get handled when you close out so

716
00:34:06,940 --> 00:34:11,378
those just get allocated and then closed

717
00:34:08,679 --> 00:34:13,539
out yeah so I think this is all just

718
00:34:11,378 --> 00:34:15,818
fine so really all I want to do is I

719
00:34:13,539 --> 00:34:20,318
just want this piece of code probably to

720
00:34:15,818 --> 00:34:22,029
to be a little bit cleaner I think we

721
00:34:20,318 --> 00:34:24,519
can wrap it all up into just one

722
00:34:22,030 --> 00:34:30,159
function that returns three things these

723
00:34:24,519 --> 00:34:34,568
three things and then that's it and we

724
00:34:30,159 --> 00:34:38,648
can also then probably simplify this to

725
00:34:34,568 --> 00:34:42,398
just take that bundle directly so I

726
00:34:38,648 --> 00:34:45,818
think that's it so what I propose here

727
00:34:42,398 --> 00:34:52,509
is that in here we just have something

728
00:34:45,818 --> 00:34:54,849
along the lines of import file match and

729
00:34:52,510 --> 00:34:57,760
that's just going to take this I mean

730
00:34:54,849 --> 00:34:59,318
that's just gonna bundle this so it will

731
00:34:57,760 --> 00:35:01,300
record whether or not there was a full

732
00:34:59,318 --> 00:35:04,420
rebuild it will have the matching file

733
00:35:01,300 --> 00:35:06,789
and it will have the file info by the

734
00:35:04,420 --> 00:35:10,930
way you know maybe we have a valid flag

735
00:35:06,789 --> 00:35:12,519
on there I don't know just to say

736
00:35:10,929 --> 00:35:15,639
whether everything went okay I don't

737
00:35:12,519 --> 00:35:16,480
know if I really want that or not but

738
00:35:15,639 --> 00:35:19,269
maybe I do

739
00:35:16,480 --> 00:35:21,670
and so in here you know after you do it

740
00:35:19,269 --> 00:35:25,358
we would could just then in here say

741
00:35:21,670 --> 00:35:28,358
look if this import file match that we

742
00:35:25,358 --> 00:35:30,429
do so that the match now is more like

743
00:35:28,358 --> 00:35:33,068
this right

744
00:35:30,429 --> 00:35:35,440
if the file match is valid then I can do

745
00:35:33,068 --> 00:35:38,679
this stuff and by the way maybe I passed

746
00:35:35,440 --> 00:35:40,030
that directly so we don't need to send

747
00:35:38,679 --> 00:35:42,009
this and we don't need to send that

748
00:35:40,030 --> 00:35:44,170
because they're already bundled up in

749
00:35:42,010 --> 00:35:45,549
this thing which just makes it cleaner

750
00:35:44,170 --> 00:35:48,909
so that you're not letting all have all

751
00:35:45,548 --> 00:35:50,710
these things spread around anyway this

752
00:35:48,909 --> 00:35:52,929
whole thing can happen inside

753
00:35:50,710 --> 00:35:56,079
there which means that this all now

754
00:35:52,929 --> 00:36:00,069
becomes import file match match it

755
00:35:56,079 --> 00:36:07,690
equals some call that we do like you

756
00:36:00,070 --> 00:36:13,410
know finds find file for import or

757
00:36:07,690 --> 00:36:17,619
something or match find matching file

758
00:36:13,409 --> 00:36:19,299
for and so in here you know look at this

759
00:36:17,619 --> 00:36:21,730
stuff that path can just be something

760
00:36:19,300 --> 00:36:24,460
that it uses in temporary storage you

761
00:36:21,730 --> 00:36:27,099
know this thing needs the context file

762
00:36:24,460 --> 00:36:28,420
group and that's stuff and it looks like

763
00:36:27,099 --> 00:36:30,869
it could pretty much just operate

764
00:36:28,420 --> 00:36:35,338
entirely if we just give it that context

765
00:36:30,869 --> 00:36:39,160
and so I think all we really need is

766
00:36:35,338 --> 00:36:42,838
sorry is to pass the context the subtor

767
00:36:39,159 --> 00:36:47,319
right so where you wanted to look for it

768
00:36:42,838 --> 00:36:50,769
and then the base name that may be all

769
00:36:47,320 --> 00:36:55,300
you really need and so if we extract

770
00:36:50,769 --> 00:36:56,710
this piece of code out now you can kind

771
00:36:55,300 --> 00:36:57,160
of see how that's getting nice and clean

772
00:36:56,710 --> 00:37:00,670
right

773
00:36:57,159 --> 00:37:04,719
and so we here if I just say look here's

774
00:37:00,670 --> 00:37:14,800
the internal code for that it's gonna

775
00:37:04,719 --> 00:37:17,289
return you an import file match right

776
00:37:14,800 --> 00:37:19,390
this is the entirety it's really really

777
00:37:17,289 --> 00:37:21,338
straightforward right and you can see

778
00:37:19,389 --> 00:37:22,838
again I say this all the time by just it

779
00:37:21,338 --> 00:37:24,730
always bears repeating because it's one

780
00:37:22,838 --> 00:37:28,088
of the most common mistakes that even

781
00:37:24,730 --> 00:37:32,139
like experience burgers make just you

782
00:37:28,088 --> 00:37:36,369
don't need to pre factor or think about

783
00:37:32,139 --> 00:37:38,500
or design your stuff that's wasteful the

784
00:37:36,369 --> 00:37:42,640
the right way to do it is just write it

785
00:37:38,500 --> 00:37:45,309
out messy first and then collapse it up

786
00:37:42,639 --> 00:37:47,829
right because then you get exactly the

787
00:37:45,309 --> 00:37:49,719
routines you need instead of having to

788
00:37:47,829 --> 00:37:51,369
guess which routines you need and then

789
00:37:49,719 --> 00:37:53,709
find out later that you forgot something

790
00:37:51,369 --> 00:37:56,230
right so that just you know I didn't

791
00:37:53,710 --> 00:37:57,789
have to think ahead of time like what

792
00:37:56,230 --> 00:37:59,920
are the pieces of this code that would

793
00:37:57,789 --> 00:38:02,440
assemble to create an asset system it

794
00:37:59,920 --> 00:38:04,369
just like oh I can see now which pieces

795
00:38:02,440 --> 00:38:06,289
are shared by what to the code so just

796
00:38:04,369 --> 00:38:08,539
those and it's like shooting fish in a

797
00:38:06,289 --> 00:38:14,630
barrel as opposed to shooting fish in an

798
00:38:08,539 --> 00:38:16,190
ocean which is very difficult so fine

799
00:38:14,630 --> 00:38:17,720
matching file for it just needs to take

800
00:38:16,190 --> 00:38:19,130
the exact stuff that we already know

801
00:38:17,719 --> 00:38:20,358
that it takes I don't have to guess

802
00:38:19,130 --> 00:38:21,798
about what the parameters are right

803
00:38:20,358 --> 00:38:25,969
because we know exactly what it takes it

804
00:38:21,798 --> 00:38:27,440
takes these three things and then I can

805
00:38:25,969 --> 00:38:29,058
verify that it doesn't need anything

806
00:38:27,440 --> 00:38:29,720
else letting the compiler do that work

807
00:38:29,059 --> 00:38:32,539
for me

808
00:38:29,719 --> 00:38:35,778
right there's that sub dirt the bitmap

809
00:38:32,539 --> 00:38:38,900
base name so now we can just say alright

810
00:38:35,778 --> 00:38:42,259
import file match starts out it's

811
00:38:38,900 --> 00:38:44,480
nothing the subduer is passed and for me

812
00:38:42,259 --> 00:38:47,059
I do one of these format string

813
00:38:44,480 --> 00:38:49,099
nonsenses to get you know out exactly

814
00:38:47,059 --> 00:38:50,869
you know what I expect here this this is

815
00:38:49,099 --> 00:38:52,278
not a bitmap based name anymore because

816
00:38:50,869 --> 00:38:55,039
it could be anything so I'm next called

817
00:38:52,278 --> 00:38:59,528
base name and then you know we're gonna

818
00:38:55,039 --> 00:39:01,579
call the get file by path to load out

819
00:38:59,528 --> 00:39:03,079
something that matches that path if it's

820
00:39:01,579 --> 00:39:06,700
got it we're gonna then look for the

821
00:39:03,079 --> 00:39:06,700
match that's going to go in here

822
00:39:07,969 --> 00:39:16,219
the assert match call is fine still

823
00:39:13,309 --> 00:39:19,009
right because it has to work go ahead

824
00:39:16,219 --> 00:39:22,969
and set that up too and I think we're

825
00:39:19,009 --> 00:39:26,358
okay so as far as the error part is

826
00:39:22,969 --> 00:39:28,759
concerned that part I think I want to

827
00:39:26,358 --> 00:39:31,248
leave to the external code because I

828
00:39:28,759 --> 00:39:34,278
don't know exactly who is calling this

829
00:39:31,248 --> 00:39:36,949
or why so I would like to let them

830
00:39:34,278 --> 00:39:38,989
determine the error especially if in the

831
00:39:36,949 --> 00:39:41,210
future I want it to potentially not

832
00:39:38,989 --> 00:39:43,548
error because maybe it wants to look in

833
00:39:41,210 --> 00:39:45,470
like more than one place so instead

834
00:39:43,548 --> 00:39:48,440
that's where that valid thing comes in

835
00:39:45,469 --> 00:39:52,338
so I'm gonna do this where I set valid

836
00:39:48,440 --> 00:39:54,920
here so that way we know that look I'm

837
00:39:52,338 --> 00:39:57,170
telling you whether it's valid you issue

838
00:39:54,920 --> 00:39:58,940
the error if you want an error and that

839
00:39:57,170 --> 00:40:00,980
also gets me out of the business of

840
00:39:58,940 --> 00:40:02,960
having to pass all of the information

841
00:40:00,980 --> 00:40:04,880
into the function that's necessary for

842
00:40:02,960 --> 00:40:06,858
correctly reporting the error because

843
00:40:04,880 --> 00:40:08,690
maybe some people have some information

844
00:40:06,858 --> 00:40:11,119
and some people have other information I

845
00:40:08,690 --> 00:40:15,200
don't want to have to worry too much

846
00:40:11,119 --> 00:40:17,599
about that right so in this case the

847
00:40:15,199 --> 00:40:18,299
only issue that I get is not knowing

848
00:40:17,599 --> 00:40:20,640
what the

849
00:40:18,300 --> 00:40:22,920
actually is there which is a little bit

850
00:40:20,639 --> 00:40:24,449
less good but I don't know how much I

851
00:40:22,920 --> 00:40:26,159
care about that because you should know

852
00:40:24,449 --> 00:40:35,250
like where what that actually is the

853
00:40:26,159 --> 00:40:36,869
path part here so that part it's kind of

854
00:40:35,250 --> 00:40:38,940
making me change my mind right because

855
00:40:36,869 --> 00:40:40,289
if I have the path here

856
00:40:38,940 --> 00:40:42,900
I want to potentially be able to print

857
00:40:40,289 --> 00:40:44,730
that out I could store the path but I

858
00:40:42,900 --> 00:40:46,920
don't really know why I would want to

859
00:40:44,730 --> 00:40:48,690
because it's really only necessary if

860
00:40:46,920 --> 00:40:51,840
I'm going to print out the error right

861
00:40:48,690 --> 00:40:54,450
so that does now kind of make me go well

862
00:40:51,840 --> 00:40:57,420
alright I take it back it's easier for

863
00:40:54,449 --> 00:41:04,949
me to pass the the the token information

864
00:40:57,420 --> 00:41:06,389
in so maybe I just do that right yeah

865
00:41:04,949 --> 00:41:07,739
and just because I don't really want to

866
00:41:06,389 --> 00:41:11,250
have to store that or keep that around

867
00:41:07,739 --> 00:41:14,689
it's just wasteful it's alright I'm okay

868
00:41:11,250 --> 00:41:18,179
with that I changed my mind very quickly

869
00:41:14,690 --> 00:41:20,400
off we go where did I went past that oh

870
00:41:18,179 --> 00:41:26,730
there's the final two things there right

871
00:41:20,400 --> 00:41:31,170
after the context all right so moving

872
00:41:26,730 --> 00:41:34,980
along if we just need to finish up the

873
00:41:31,170 --> 00:41:37,740
import call there so let's take a look

874
00:41:34,980 --> 00:41:39,900
at that final matching for there it is I

875
00:41:37,739 --> 00:41:41,159
want to go over here to my head stops me

876
00:41:39,900 --> 00:41:43,440
in the way it was it's good it's getting

877
00:41:41,159 --> 00:41:45,899
in the way too often uh so I need to

878
00:41:43,440 --> 00:41:48,240
pass the tokenizer and the glyph token

879
00:41:45,900 --> 00:41:49,950
here not a big deal I wanted to avoid

880
00:41:48,239 --> 00:41:53,039
that but you know didn't work out

881
00:41:49,949 --> 00:41:55,460
that's fine so here's the code that we

882
00:41:53,039 --> 00:41:58,170
need for that and if I then want to

883
00:41:55,460 --> 00:42:00,360
again collapse it down so I'm only using

884
00:41:58,170 --> 00:42:02,400
this in one place again not particularly

885
00:42:00,360 --> 00:42:04,440
difficult all I have to do is say all

886
00:42:02,400 --> 00:42:06,570
right let's change the way we were doing

887
00:42:04,440 --> 00:42:09,690
this so instead of asset source file and

888
00:42:06,570 --> 00:42:11,430
file info being here and the path and

889
00:42:09,690 --> 00:42:12,960
this kind of stuff I don't want any of

890
00:42:11,429 --> 00:42:18,109
that instead I'm just going to do it

891
00:42:12,960 --> 00:42:18,110
like this where we say okay

892
00:42:23,550 --> 00:42:29,050
let's let this call into the other piece

893
00:42:26,588 --> 00:42:31,480
of code and produce that match for us

894
00:42:29,050 --> 00:42:33,310
here and then when we were going to use

895
00:42:31,480 --> 00:42:36,400
the match before we don't actually need

896
00:42:33,309 --> 00:42:38,769
to do an F match valid we can actually

897
00:42:36,400 --> 00:42:40,780
do that somewhere else so everywhere

898
00:42:38,769 --> 00:42:55,530
that we were looking at match valid but

899
00:42:40,780 --> 00:42:58,450
we can do it like this right so here

900
00:42:55,530 --> 00:43:04,960
where we've got match this is actually

901
00:42:58,449 --> 00:43:13,199
going to be source right match dot

902
00:43:04,960 --> 00:43:13,199
source and I want to keep going here

903
00:43:19,530 --> 00:43:34,619
ya can just kind of get rid of code here

904
00:43:37,588 --> 00:43:45,179
so that seems fine

905
00:43:40,059 --> 00:43:53,170
and then I just need to rename this one

906
00:43:45,179 --> 00:43:54,779
so its result that source there and I

907
00:43:53,170 --> 00:43:58,858
think we're good

908
00:43:54,780 --> 00:43:58,859
alright let's clean up any compilers

909
00:44:00,358 --> 00:44:05,519
doesn't know that it doesn't know that

910
00:44:07,170 --> 00:44:16,349
oops

911
00:44:09,510 --> 00:44:16,349
just fix that keep going

912
00:44:17,190 --> 00:44:27,760
there we go uh sooo this file info is

913
00:44:21,909 --> 00:44:37,568
just inside the results and that's also

914
00:44:27,760 --> 00:44:42,280
inside the results so in here we have

915
00:44:37,568 --> 00:44:44,679
what's our air sub der undeclared ah yes

916
00:44:42,280 --> 00:44:47,800
so it's not really sub during this case

917
00:44:44,679 --> 00:44:51,358
its fonts right that's where we're

918
00:44:47,800 --> 00:44:57,990
always looking bitmap base name I

919
00:44:51,358 --> 00:45:00,519
thought we did have that maybe we don't

920
00:44:57,989 --> 00:45:03,118
it's actually file name it looks like

921
00:45:00,519 --> 00:45:03,119
right

922
00:45:04,329 --> 00:45:09,989
yeah and then what

923
00:45:11,340 --> 00:45:17,800
looks like a pen tags already it looks

924
00:45:16,030 --> 00:45:20,380
like template tags and a pen tag so we

925
00:45:17,800 --> 00:45:29,410
already kind of had those nerfed out are

926
00:45:20,380 --> 00:45:33,360
they always ignored yeah so I guess we

927
00:45:29,409 --> 00:45:33,359
don't really need that either

928
00:45:40,320 --> 00:45:52,890
cannot convert argument 5 from token

929
00:45:44,280 --> 00:45:57,380
well that's true function does not take

930
00:45:52,889 --> 00:45:57,379
six parameters is that so

931
00:45:57,829 --> 00:46:03,719
well how many does it take ah yes so I

932
00:46:01,679 --> 00:46:09,149
forgot to update this with the fact that

933
00:46:03,719 --> 00:46:10,980
we now have that import file match so

934
00:46:09,150 --> 00:46:15,480
what I'd like to do there is just say

935
00:46:10,980 --> 00:46:16,889
okay let's pass that file match in and

936
00:46:15,480 --> 00:46:21,389
then we don't have to pass these around

937
00:46:16,889 --> 00:46:22,889
like I said so I think that's better and

938
00:46:21,389 --> 00:46:27,539
then you hear where we're actually using

939
00:46:22,889 --> 00:46:36,809
those we have to do something more like

940
00:46:27,539 --> 00:46:41,779
this it's see where else we've got usage

941
00:46:36,809 --> 00:46:41,779
of that file info so that's

942
00:46:54,309 --> 00:47:02,000
seems reasonable this should tell us

943
00:47:00,530 --> 00:47:19,280
where all the errors are so rather than

944
00:47:02,000 --> 00:47:21,980
me hunt for them so I guess we I guess

945
00:47:19,280 --> 00:47:23,570
maybe we want to do it like this so if

946
00:47:21,980 --> 00:47:26,780
we modify something I don't know if we

947
00:47:23,570 --> 00:47:30,080
want the modify to propagate out we

948
00:47:26,780 --> 00:47:32,269
might so I don't know whether we want to

949
00:47:30,079 --> 00:47:39,170
like you know we could do it more like

950
00:47:32,269 --> 00:47:40,909
this where we pass this in and then when

951
00:47:39,170 --> 00:47:43,519
we change this it doesn't get changed in

952
00:47:40,909 --> 00:47:46,009
the outer code I'm gonna say let's do it

953
00:47:43,519 --> 00:47:48,289
that way for now and the reason I want

954
00:47:46,010 --> 00:47:50,600
to do it that way is because better to

955
00:47:48,289 --> 00:47:53,599
not touch other people's data and then

956
00:47:50,599 --> 00:47:56,118
later change it so that we do as opposed

957
00:47:53,599 --> 00:47:58,339
to touching it when we don't really need

958
00:47:56,119 --> 00:48:01,039
to because then we're creating more

959
00:47:58,340 --> 00:48:02,840
opportunities for like surprise you know

960
00:48:01,039 --> 00:48:05,150
so I would rather be in a situation

961
00:48:02,840 --> 00:48:07,160
where like let's assume we don't touch

962
00:48:05,150 --> 00:48:10,190
the external data you know closer to a

963
00:48:07,159 --> 00:48:12,500
functional program right so there's less

964
00:48:10,190 --> 00:48:15,740
surprise and then if later we determine

965
00:48:12,500 --> 00:48:18,230
that we actually need to do that we can

966
00:48:15,739 --> 00:48:22,099
do it then and that way we don't

967
00:48:18,230 --> 00:48:25,490
introduce like extraneous chances for

968
00:48:22,099 --> 00:48:29,630
failure there that you know we would

969
00:48:25,489 --> 00:48:32,858
just have been better to avoid okay so I

970
00:48:29,630 --> 00:48:32,858
think that's about it

971
00:48:36,920 --> 00:48:42,920
it's like those are all just matched

972
00:48:39,059 --> 00:48:46,230
source calls and then that's it

973
00:48:42,920 --> 00:48:53,519
so that should allow us to import those

974
00:48:46,230 --> 00:49:02,998
bitmaps as glyphs and that's you know

975
00:48:53,518 --> 00:49:08,338
they're probably asset indexes or

976
00:49:02,998 --> 00:49:11,868
something like this let's take a look

977
00:49:08,338 --> 00:49:11,869
actually should just jump right to that

978
00:49:12,980 --> 00:49:26,869
asset indices don't ask me why I called

979
00:49:19,079 --> 00:49:26,869
it that but you know I did there we go

980
00:49:27,980 --> 00:49:34,579
import file match does not have an

981
00:49:30,809 --> 00:49:34,579
overloaded operator that is correct

982
00:49:41,619 --> 00:49:50,358
so okay is that it that's it

983
00:49:46,548 --> 00:49:55,518
so I think we're now we've got the

984
00:49:50,358 --> 00:50:00,608
entire codes sort of like all sketched

985
00:49:55,518 --> 00:50:04,338
out if that makes sense I really want to

986
00:50:00,608 --> 00:50:07,098
take it slow here to try and because you

987
00:50:04,338 --> 00:50:10,058
know we've done just a tremendous amount

988
00:50:07,099 --> 00:50:13,369
of work here on making the asset system

989
00:50:10,059 --> 00:50:15,019
sort of have all of this flexibility to

990
00:50:13,369 --> 00:50:16,160
it you know you can now define tag files

991
00:50:15,018 --> 00:50:17,208
that allow you to import whatever you

992
00:50:16,159 --> 00:50:18,649
want and mark them up with the data that

993
00:50:17,208 --> 00:50:21,078
you want and it's lives you can change

994
00:50:18,650 --> 00:50:22,849
them on the fly and it'll Rhian

995
00:50:21,079 --> 00:50:24,709
edit it in the game and it'll save it

996
00:50:22,849 --> 00:50:25,880
out and there's just a lot of moving

997
00:50:24,708 --> 00:50:28,009
parts there right it's way more

998
00:50:25,880 --> 00:50:30,469
complicated than I would have liked to

999
00:50:28,009 --> 00:50:33,318
support but you know what can you do

1000
00:50:30,469 --> 00:50:38,708
sometimes you just got a games just got

1001
00:50:33,318 --> 00:50:40,849
to have some stuff so I feel like that

1002
00:50:38,708 --> 00:50:43,759
there's probably a lot of bugs lurking

1003
00:50:40,849 --> 00:50:45,019
around in there there'll be some obvious

1004
00:50:43,759 --> 00:50:47,059
ones that we can find right away but I

1005
00:50:45,018 --> 00:50:50,748
want to also kind of maybe take it slow

1006
00:50:47,059 --> 00:50:54,440
as we try to now do some font importing

1007
00:50:50,748 --> 00:50:57,818
and I would like to try and make it so

1008
00:50:54,440 --> 00:51:04,130
that we can step through it carefully

1009
00:50:57,818 --> 00:51:05,538
make sure yeah just make sure we know

1010
00:51:04,130 --> 00:51:10,759
what we're doing this by the way didn't

1011
00:51:05,539 --> 00:51:13,519
end up being a problem so let's do that

1012
00:51:10,759 --> 00:51:17,298
let's just sort of start gently first

1013
00:51:13,518 --> 00:51:21,528
thought things first we can test is to

1014
00:51:17,298 --> 00:51:25,190
just make sure that we didn't break

1015
00:51:21,528 --> 00:51:27,978
anything in the import process I'm a

1016
00:51:25,190 --> 00:51:31,179
load up remedy and I'm gonna go ahead

1017
00:51:27,978 --> 00:51:35,929
and grab win through two handmade here

1018
00:51:31,179 --> 00:51:37,578
I'm gonna run it and you know obviously

1019
00:51:35,929 --> 00:51:40,038
we're in debug mode so this is gonna be

1020
00:51:37,579 --> 00:51:42,979
kind of slower here you know slow

1021
00:51:40,039 --> 00:51:43,999
framerate and skip you sound which is

1022
00:51:42,978 --> 00:51:46,489
totally fine for now

1023
00:51:43,998 --> 00:51:49,578
but I just want to make sure that we

1024
00:51:46,489 --> 00:51:50,240
didn't break anything obvious like you

1025
00:51:49,579 --> 00:51:52,400
know I want

1026
00:51:50,239 --> 00:51:55,579
make sure that if we reinforced ill

1027
00:51:52,400 --> 00:51:59,809
works properly and so I want to test

1028
00:51:55,579 --> 00:52:02,659
that out right so what if I go in now

1029
00:51:59,809 --> 00:52:05,570
and just delete like all the stuff that

1030
00:52:02,659 --> 00:52:09,289
we've got can it rebuild it properly

1031
00:52:05,570 --> 00:52:12,590
right I and so inside the handmade data

1032
00:52:09,289 --> 00:52:15,949
directory we've got these hhas here and

1033
00:52:12,590 --> 00:52:19,519
I want to go ahead and you know kind of

1034
00:52:15,949 --> 00:52:21,739
move those out to a temporary sort of

1035
00:52:19,519 --> 00:52:24,230
holding tank or maybe just delete them

1036
00:52:21,739 --> 00:52:30,919
entirely but you know it's an attempt

1037
00:52:24,230 --> 00:52:34,190
directory yeah so let's suppose I go

1038
00:52:30,920 --> 00:52:37,849
here and I move based game dot HHA or

1039
00:52:34,190 --> 00:52:38,329
dot star to temp and I move into a

1040
00:52:37,849 --> 00:52:43,460
cutscene

1041
00:52:38,329 --> 00:52:47,750
HHA or dot start temp so we've got

1042
00:52:43,460 --> 00:52:49,250
nothing now if I go ahead and rerun and

1043
00:52:47,750 --> 00:52:51,980
this will be very slow because it's in

1044
00:52:49,250 --> 00:52:53,539
it's in debug right it's not in release

1045
00:52:51,980 --> 00:52:55,940
but I want to be able to catch any

1046
00:52:53,539 --> 00:52:58,789
errors so so I'm going to go ahead and

1047
00:52:55,940 --> 00:53:01,309
just run it and we'll go ahead and see

1048
00:52:58,789 --> 00:53:02,170
if it can actually replace everything

1049
00:53:01,309 --> 00:53:05,029
properly

1050
00:53:02,170 --> 00:53:07,490
not counting the fonts so this is just a

1051
00:53:05,030 --> 00:53:10,130
test to see did I break anything right

1052
00:53:07,489 --> 00:53:14,329
and so what we should be able to see

1053
00:53:10,130 --> 00:53:16,820
here is the intro cutscene right this

1054
00:53:14,329 --> 00:53:18,829
should kind of grow as it imports all

1055
00:53:16,820 --> 00:53:22,210
this stuff I wish there's a way to see

1056
00:53:18,829 --> 00:53:25,210
this update in real time doesn't right

1057
00:53:22,210 --> 00:53:25,210
but

1058
00:53:30,039 --> 00:53:36,250
we need some like periodic size checking

1059
00:53:33,559 --> 00:53:39,920
program that you know can let us know

1060
00:53:36,250 --> 00:53:42,318
anyway so I just want it to run do all

1061
00:53:39,920 --> 00:53:49,389
of the intro cutscene import that it's

1062
00:53:42,318 --> 00:53:53,480
going to do and I I think although I

1063
00:53:49,389 --> 00:53:58,190
can't remember but I think we don't

1064
00:53:53,480 --> 00:54:01,369
include the font file in here yet anyway

1065
00:53:58,190 --> 00:54:04,490
so it shouldn't do any font work yet so

1066
00:54:01,369 --> 00:54:06,440
this is will literally unless I'm you

1067
00:54:04,489 --> 00:54:08,118
know mistaken this should all this

1068
00:54:06,440 --> 00:54:11,619
should do is Tessa see if we broke

1069
00:54:08,119 --> 00:54:11,619
anything right

1070
00:54:39,289 --> 00:54:50,179
how's it going over there chat land well

1071
00:54:47,550 --> 00:54:50,180
we've got some time

1072
00:54:58,599 --> 00:55:01,679
almost there

1073
00:55:23,579 --> 00:55:26,809
[Music]

1074
00:55:36,780 --> 00:55:41,619
are you having any issues with the

1075
00:55:38,920 --> 00:55:47,200
debugger or is it okay even if it's an

1076
00:55:41,619 --> 00:55:49,420
early version um yeah I mean it it he's

1077
00:55:47,199 --> 00:55:52,899
definitely been rough around the edges

1078
00:55:49,420 --> 00:55:55,420
because it's brand new and you know it's

1079
00:55:52,900 --> 00:55:59,260
not even a official version it's like

1080
00:55:55,420 --> 00:56:01,450
beta so there's plenty of stuff like

1081
00:55:59,260 --> 00:56:03,640
when I'm working with it I'm constantly

1082
00:56:01,449 --> 00:56:05,199
like making sure I take notes if

1083
00:56:03,639 --> 00:56:07,420
anything doesn't work or something and

1084
00:56:05,199 --> 00:56:08,649
so you know started off a little rough

1085
00:56:07,420 --> 00:56:10,510
there some things didn't work whatever

1086
00:56:08,650 --> 00:56:13,650
but but George has been very responsive

1087
00:56:10,510 --> 00:56:17,079
to bug reports like anything serious

1088
00:56:13,650 --> 00:56:21,190
gets fixed very quickly and so at this

1089
00:56:17,079 --> 00:56:23,140
point you know there's there's features

1090
00:56:21,190 --> 00:56:28,088
I would like that aren't necessarily

1091
00:56:23,139 --> 00:56:30,279
there at the moment but the actual

1092
00:56:28,088 --> 00:56:32,380
stability of the debugger and the

1093
00:56:30,280 --> 00:56:35,559
ability to view information has sort of

1094
00:56:32,380 --> 00:56:38,740
studied out to the point where I don't

1095
00:56:35,559 --> 00:56:47,700
find myself encountering problems with

1096
00:56:38,739 --> 00:56:52,868
it in everyday use much at all I think

1097
00:56:47,699 --> 00:56:54,578
he's probably only a few solid weeks

1098
00:56:52,869 --> 00:56:56,140
which I know it's hard for him because

1099
00:56:54,579 --> 00:56:57,789
he it's a spare time project but you

1100
00:56:56,139 --> 00:56:59,798
know if he spent a few if he spent a

1101
00:56:57,789 --> 00:57:02,980
month or two working on it full-time

1102
00:56:59,798 --> 00:57:05,710
I don't I think it would probably just

1103
00:57:02,980 --> 00:57:09,219
be better than Visual Studio in all ways

1104
00:57:05,710 --> 00:57:12,730
and that would just be it it's not far

1105
00:57:09,219 --> 00:57:14,469
it just needs a few things like you know

1106
00:57:12,730 --> 00:57:16,838
it can't save many dumps I don't think

1107
00:57:14,469 --> 00:57:19,118
it doesn't have data breakpoints or

1108
00:57:16,838 --> 00:57:20,949
conditional breakpoints it doesn't have

1109
00:57:19,119 --> 00:57:26,680
a way to select what you want to step

1110
00:57:20,949 --> 00:57:28,210
into you know there's a handful of

1111
00:57:26,679 --> 00:57:30,098
features that take some work to

1112
00:57:28,210 --> 00:57:33,220
implement so it's not like they're just

1113
00:57:30,099 --> 00:57:36,010
like oh 10 seconds but there's just not

1114
00:57:33,219 --> 00:57:38,230
that many and everything else is like

1115
00:57:36,010 --> 00:57:40,480
light years ahead of Visual Studio like

1116
00:57:38,230 --> 00:57:43,510
it steps instantly in the watch window

1117
00:57:40,480 --> 00:57:44,289
updates instantly Visual Studio takes

1118
00:57:43,510 --> 00:57:45,820
seconds

1119
00:57:44,289 --> 00:57:48,400
to update that watch window sometime

1120
00:57:45,820 --> 00:57:49,990
right it's just it's a disaster and so

1121
00:57:48,400 --> 00:57:53,200
like everything else about it is just

1122
00:57:49,989 --> 00:57:54,669
way better and so I think I would say

1123
00:57:53,199 --> 00:57:56,230
probably by next year of this time I

1124
00:57:54,670 --> 00:57:57,849
think we'll probably be in a state where

1125
00:57:56,230 --> 00:57:59,230
you'd be crazy to ever bother installing

1126
00:57:57,849 --> 00:58:00,639
visual studios at the plugger like that

1127
00:57:59,230 --> 00:58:02,530
that'll probably just be a stupid idea

1128
00:58:00,639 --> 00:58:04,779
right so it's going very well and

1129
00:58:02,530 --> 00:58:06,430
hopefully it will continue um so it

1130
00:58:04,780 --> 00:58:09,790
looks like everything imported properly

1131
00:58:06,429 --> 00:58:11,559
all the alignments look correct and I

1132
00:58:09,789 --> 00:58:13,389
yeah like all the stuff is stacked

1133
00:58:11,559 --> 00:58:15,219
properly so the points look proper all

1134
00:58:13,389 --> 00:58:17,920
that stuff looks good the environment

1135
00:58:15,219 --> 00:58:23,739
looks proper the sound is playing so I

1136
00:58:17,920 --> 00:58:25,300
think we're good let me let me run in

1137
00:58:23,739 --> 00:58:27,429
release mode really quickly just to make

1138
00:58:25,300 --> 00:58:28,450
sure that the sound doesn't have any

1139
00:58:27,429 --> 00:58:31,599
issues with it

1140
00:58:28,449 --> 00:58:33,789
since we we don't really do much to make

1141
00:58:31,599 --> 00:58:37,259
sure that works in low framerate yet so

1142
00:58:33,789 --> 00:58:37,259
it's hard to tell right

1143
00:58:40,440 --> 00:59:03,340
[Music]

1144
00:59:00,130 --> 00:59:06,530
so I think we didn't break anything

1145
00:59:03,340 --> 00:59:08,269
right and the fact that that loaded

1146
00:59:06,530 --> 00:59:11,240
instantaneously also means that it

1147
00:59:08,269 --> 00:59:16,690
correctly knows that there wasn't a

1148
00:59:11,239 --> 00:59:20,179
change right so I think that's good and

1149
00:59:16,690 --> 00:59:22,159
I think what we want to do now is just

1150
00:59:20,179 --> 00:59:24,440
move into the phase of trying to get the

1151
00:59:22,159 --> 00:59:26,449
fonts in there because that's really the

1152
00:59:24,440 --> 00:59:29,900
only thing now that isn't completely

1153
00:59:26,449 --> 00:59:32,949
done through through a dynamically

1154
00:59:29,900 --> 00:59:35,750
updating dynamic packing in game system

1155
00:59:32,949 --> 00:59:37,989
so we'll just finish that up and then I

1156
00:59:35,750 --> 00:59:41,719
think we're we're in pretty good shape

1157
00:59:37,989 --> 00:59:44,239
it probably stand to spend a weekend or

1158
00:59:41,719 --> 00:59:47,329
two screwing with the asset system and

1159
00:59:44,239 --> 00:59:49,669
cleaning it up which we may do because

1160
00:59:47,329 --> 00:59:52,279
it's so there's so much capability in

1161
00:59:49,670 --> 00:59:53,659
there now it's a little bit we put a lot

1162
00:59:52,280 --> 00:59:56,690
of stuff in there and you know sometimes

1163
00:59:53,659 --> 00:59:58,039
you want to kind of go through and do

1164
00:59:56,690 --> 01:00:00,650
some polishing when you've got that much

1165
00:59:58,039 --> 01:00:02,900
stuff going um so okay the first thing

1166
01:00:00,650 --> 01:00:05,570
we need to do here is we changed how we

1167
01:00:02,900 --> 01:00:08,690
wanted to write these things out we

1168
01:00:05,570 --> 01:00:14,269
decided not to do what we were doing

1169
01:00:08,690 --> 01:00:18,769
here so if you look at the code if you

1170
01:00:14,269 --> 01:00:20,989
go look at how we decided we wanted

1171
01:00:18,769 --> 01:00:23,079
these things written out what you can

1172
01:00:20,989 --> 01:00:25,579
see is that there's some information

1173
01:00:23,079 --> 01:00:26,929
missing that needs to get put in the

1174
01:00:25,579 --> 01:00:30,019
font file and then there's some

1175
01:00:26,929 --> 01:00:31,549
information formatted in ways that were

1176
01:00:30,019 --> 01:00:34,849
not the way we actually wanted them

1177
01:00:31,550 --> 01:00:38,240
formatted going forward so I need to go

1178
01:00:34,849 --> 01:00:41,000
now to you know process font block

1179
01:00:38,239 --> 01:00:44,899
basically or what's it called parse font

1180
01:00:41,000 --> 01:00:46,670
block and first this stuff so the glyph

1181
01:00:44,900 --> 01:00:48,950
count the ascender height the descender

1182
01:00:46,670 --> 01:00:51,349
height and the external letting those

1183
01:00:48,949 --> 01:00:52,759
all need to actually get written into

1184
01:00:51,349 --> 01:00:56,319
the file because at the moment they're

1185
01:00:52,760 --> 01:00:56,320
not there okay

1186
01:00:56,750 --> 01:01:04,429
so when we look at this right here we're

1187
01:01:00,530 --> 01:01:09,140
gonna have to put before glyph count

1188
01:01:04,429 --> 01:01:10,599
equals and present you right so that

1189
01:01:09,139 --> 01:01:11,739
needs to be in here

1190
01:01:10,599 --> 01:01:14,619
we need to go find out what the glyph

1191
01:01:11,739 --> 01:01:17,049
county is and then in here we've got

1192
01:01:14,619 --> 01:01:18,219
these other guys they don't have to go

1193
01:01:17,050 --> 01:01:19,720
in a particular order but we might as

1194
01:01:18,219 --> 01:01:22,149
well just put them in the order like it

1195
01:01:19,719 --> 01:01:24,789
you know might as well just do this so

1196
01:01:22,150 --> 01:01:26,410
now we do have some floating-point stuff

1197
01:01:24,789 --> 01:01:29,409
in there we've got the ascender height

1198
01:01:26,409 --> 01:01:31,359
that's a floating-point we've got the

1199
01:01:29,409 --> 01:01:34,899
descender height

1200
01:01:31,360 --> 01:01:39,430
that's a floating-point and then we've

1201
01:01:34,900 --> 01:01:40,840
got the external wedding and other than

1202
01:01:39,429 --> 01:01:42,219
that there aren't any other properties

1203
01:01:40,840 --> 01:01:44,050
of the font that we're storing at the

1204
01:01:42,219 --> 01:01:46,750
moment but if we had other ones that's

1205
01:01:44,050 --> 01:01:48,490
where they would go so it looks like

1206
01:01:46,750 --> 01:01:51,550
these are in here but they're gonna be

1207
01:01:48,489 --> 01:01:53,259
wrong if you look at what's happening so

1208
01:01:51,550 --> 01:01:55,060
if you look at me like a sender height

1209
01:01:53,260 --> 01:01:58,780
and the D Center height external ending

1210
01:01:55,059 --> 01:02:00,759
in stuff like that if you look at how

1211
01:01:58,780 --> 01:02:02,830
that's working like when we get down to

1212
01:02:00,760 --> 01:02:05,640
stuff like the horizontal advance when

1213
01:02:02,829 --> 01:02:07,509
we print that out we've got to scale it

1214
01:02:05,639 --> 01:02:11,679
you know what I mean

1215
01:02:07,510 --> 01:02:15,910
so that scale ratio has to has to come

1216
01:02:11,679 --> 01:02:19,750
into play here and I think probably that

1217
01:02:15,909 --> 01:02:24,429
code was just garbage if you look at it

1218
01:02:19,750 --> 01:02:25,780
the phrase scale yeah I mean when it

1219
01:02:24,429 --> 01:02:27,039
divides this thing by four it's not

1220
01:02:25,780 --> 01:02:30,900
going to be an even number so I feel

1221
01:02:27,039 --> 01:02:30,900
like those horizontally floats

1222
01:02:32,769 --> 01:02:35,889
[Music]

1223
01:02:41,059 --> 01:02:44,089
I don't know if you want to keep

1224
01:02:43,338 --> 01:02:46,429
rounding fine

1225
01:02:44,088 --> 01:02:48,558
I don't really care so anyway if we then

1226
01:02:46,429 --> 01:02:52,778
go to the you know the other stuff here

1227
01:02:48,559 --> 01:02:52,778
you know maybe we want those to be I

1228
01:02:53,858 --> 01:02:59,088
don't know III really I'm sorry I just

1229
01:02:56,630 --> 01:03:01,298
have no idea what we want to do here it

1230
01:02:59,088 --> 01:03:04,009
looks like it we store floats for these

1231
01:03:01,298 --> 01:03:06,259
do we store floats for the horizontally

1232
01:03:04,009 --> 01:03:08,329
store floats for everything here it just

1233
01:03:06,259 --> 01:03:11,958
feels like why why not just put it in by

1234
01:03:08,329 --> 01:03:17,449
not put a percent F I I mean I'm gonna

1235
01:03:11,958 --> 01:03:19,668
do it it may be dumb so I apologize for

1236
01:03:17,449 --> 01:03:22,548
that but I'm just gonna I'm just gonna

1237
01:03:19,668 --> 01:03:25,308
say let's do it no one needs to human

1238
01:03:22,548 --> 01:03:27,829
edit these font files so it's just I

1239
01:03:25,309 --> 01:03:29,989
don't I don't care that it's like you

1240
01:03:27,829 --> 01:03:32,929
know gonna be like spammy and difficult

1241
01:03:29,989 --> 01:03:36,708
to read yeah that's totally fine with me

1242
01:03:32,929 --> 01:03:38,150
uhm so let's clean this stuff up we've

1243
01:03:36,708 --> 01:03:44,078
got the horizontal vans got the glyph

1244
01:03:38,150 --> 01:03:47,179
they're all this stuff looks fine I

1245
01:03:44,079 --> 01:03:48,619
don't know why there's a slash oh

1246
01:03:47,179 --> 01:03:50,289
because that's the output file name not

1247
01:03:48,619 --> 01:03:53,389
stem

1248
01:03:50,289 --> 01:03:53,389
[Music]

1249
01:03:57,929 --> 01:04:09,179
you know looking at this PNG file name

1250
01:04:01,360 --> 01:04:09,180
only where is that coming from

1251
01:04:24,809 --> 01:04:33,299
that doesn't seem like what we would

1252
01:04:29,730 --> 01:04:36,900
want to write it's this is the PNG we're

1253
01:04:33,300 --> 01:04:39,180
trying to report right so did that

1254
01:04:36,900 --> 01:04:40,470
presumably that code is just busted

1255
01:04:39,179 --> 01:04:41,909
because like we never really worked with

1256
01:04:40,469 --> 01:04:43,699
it or something right if I go in here

1257
01:04:41,909 --> 01:04:48,649
and load one of the load up one of these

1258
01:04:43,699 --> 01:04:48,649
is it correct it's correct

1259
01:04:49,550 --> 01:04:53,269
how is it correct

1260
01:05:02,230 --> 01:05:10,210
how is that correct Oh because it just

1261
01:05:07,690 --> 01:05:11,130
sets it no no I'm pretty clever all

1262
01:05:10,210 --> 01:05:13,360
right

1263
01:05:11,130 --> 01:05:15,070
so it just sets it to point into the

1264
01:05:13,360 --> 01:05:19,860
same buffer so as you change the buffer

1265
01:05:15,070 --> 01:05:29,380
it just works that's kind of nuts but

1266
01:05:19,860 --> 01:05:31,539
okay I guess so moving on from that what

1267
01:05:29,380 --> 01:05:33,880
I was trying to say here is all of these

1268
01:05:31,539 --> 01:05:36,820
things have to be scaled so the scale

1269
01:05:33,880 --> 01:05:38,860
ratio needs to multiply like all of this

1270
01:05:36,820 --> 01:05:41,350
stuff when we export it because we're

1271
01:05:38,860 --> 01:05:43,360
exporting the far fought large and then

1272
01:05:41,349 --> 01:05:44,650
we're shrinking it down so when we say

1273
01:05:43,360 --> 01:05:46,030
the ascender high P Center right next

1274
01:05:44,650 --> 01:05:50,590
are in a letting we have to scale down

1275
01:05:46,030 --> 01:05:53,200
by however much that was right when we

1276
01:05:50,590 --> 01:05:56,079
go in here and look at this we want to

1277
01:05:53,199 --> 01:05:58,179
write short values out and in order to

1278
01:05:56,079 --> 01:06:02,500
write those short values we need to look

1279
01:05:58,179 --> 01:06:05,679
at the file formats and include that so

1280
01:06:02,500 --> 01:06:08,320
that we can call for example this stuff

1281
01:06:05,679 --> 01:06:11,739
right I want to be able to do a set a

1282
01:06:08,320 --> 01:06:17,380
line point here where I take a fake

1283
01:06:11,739 --> 01:06:20,229
alignment point that's you know some

1284
01:06:17,380 --> 01:06:22,329
fake thing like this I write in to the

1285
01:06:20,230 --> 01:06:25,300
alignment point with the information

1286
01:06:22,329 --> 01:06:28,329
like the type the parent all that stuff

1287
01:06:25,300 --> 01:06:34,650
so in here I want to say give me the

1288
01:06:28,329 --> 01:06:34,650
default I don't know what this is for

1289
01:06:38,320 --> 01:06:44,260
so I want to go in here and say look

1290
01:06:41,670 --> 01:06:50,349
let's do an alignment point for type

1291
01:06:44,260 --> 01:06:53,830
default right which is this one yes it

1292
01:06:50,349 --> 01:06:57,880
goes to the parent the size and the P

1293
01:06:53,829 --> 01:06:59,889
percent for size were always 1.0 and for

1294
01:06:57,880 --> 01:07:02,740
P percent it's this garbage right here

1295
01:06:59,889 --> 01:07:05,949
right because we've already computed it

1296
01:07:02,739 --> 01:07:12,479
we just need to actually pack it down

1297
01:07:05,949 --> 01:07:12,480
into two u16s so if we do that

1298
01:07:12,510 --> 01:07:17,200
now each of these percent use is

1299
01:07:15,250 --> 01:07:19,239
something that I actually know the first

1300
01:07:17,199 --> 01:07:20,949
one we just never did but we have it

1301
01:07:19,239 --> 01:07:22,899
it's just the code point so I can put

1302
01:07:20,949 --> 01:07:24,549
that in that's like the utf-32 version

1303
01:07:22,900 --> 01:07:26,650
like of what it what the code point

1304
01:07:24,550 --> 01:07:28,570
actually is right and then those two

1305
01:07:26,650 --> 01:07:30,400
percent use are just the P percent

1306
01:07:28,570 --> 01:07:34,050
values that come out of the align point

1307
01:07:30,400 --> 01:07:36,130
that we just packed so if I look at

1308
01:07:34,050 --> 01:07:38,560
these two here right

1309
01:07:36,130 --> 01:07:40,410
I can I can just print those out as

1310
01:07:38,559 --> 01:07:42,820
integers now and off we go

1311
01:07:40,409 --> 01:07:43,750
the only weird thing is like I'm not

1312
01:07:42,820 --> 01:07:45,610
storing any of the other broadline

1313
01:07:43,750 --> 01:07:48,730
points but we don't need them because

1314
01:07:45,610 --> 01:07:51,370
those things are are known like a font

1315
01:07:48,730 --> 01:07:54,909
only ever has these specific alignment

1316
01:07:51,369 --> 01:07:56,980
points so we don't really care and it

1317
01:07:54,909 --> 01:08:00,639
should be fine so I think that will

1318
01:07:56,980 --> 01:08:07,840
correctly give us what we want I need to

1319
01:08:00,639 --> 01:08:09,369
include these here what was that called

1320
01:08:07,840 --> 01:08:21,909
file formats the 3p

1321
01:08:09,369 --> 01:08:27,909
oh nice typo so I need those here and I

1322
01:08:21,909 --> 01:08:32,369
need to make sure just a 5 struct type

1323
01:08:27,909 --> 01:08:32,369
redefinition where was it defined before

1324
01:08:35,210 --> 01:08:40,250
oh we just like I'd copied that in here

1325
01:08:37,909 --> 01:08:47,059
but we don't need that right that can

1326
01:08:40,250 --> 01:08:48,800
just be yeah so now I think we'll be

1327
01:08:47,060 --> 01:08:51,740
writing out font files that match what

1328
01:08:48,800 --> 01:08:54,199
we expect what I don't really remember

1329
01:08:51,739 --> 01:08:56,779
in here so and we may need to fix this

1330
01:08:54,199 --> 01:08:58,159
when we're doing the parsing you can see

1331
01:08:56,779 --> 01:08:59,689
us reading all this information out

1332
01:08:58,159 --> 01:09:03,380
right and there's us reading the glyphs

1333
01:08:59,689 --> 01:09:05,419
and we're calling the stuff out I don't

1334
01:09:03,380 --> 01:09:08,840
think we're setting this a line point

1335
01:09:05,420 --> 01:09:11,869
anywhere like we've got it right and we

1336
01:09:08,840 --> 01:09:14,360
we modified it to be whatever we read

1337
01:09:11,869 --> 01:09:16,460
out of the file and that's great but

1338
01:09:14,359 --> 01:09:23,170
once we actually get this code point

1339
01:09:16,460 --> 01:09:28,210
here that bitmap ID never really gets

1340
01:09:23,170 --> 01:09:32,560
those alignment points attached to it

1341
01:09:28,210 --> 01:09:35,560
and it needs that to have happened right

1342
01:09:32,560 --> 01:09:35,560
so

1343
01:09:53,760 --> 01:10:01,869
so that part is a little bit trickier

1344
01:09:56,800 --> 01:10:03,699
because I don't actually know once we

1345
01:10:01,868 --> 01:10:05,948
update that particular piece of

1346
01:10:03,698 --> 01:10:10,529
information it's a little bit confusing

1347
01:10:05,948 --> 01:10:13,238
as to whether we want it to do a

1348
01:10:10,529 --> 01:10:47,618
reemployed or not I don't think I really

1349
01:10:13,238 --> 01:10:49,268
necessarily care so I don't think I'm

1350
01:10:47,618 --> 01:10:51,098
really gonna worry about that I think

1351
01:10:49,269 --> 01:10:55,150
what I would rather do is just get the

1352
01:10:51,099 --> 01:10:59,139
asset and slam the alignment point into

1353
01:10:55,149 --> 01:11:02,488
it just directly so in here you know if

1354
01:10:59,139 --> 01:11:05,769
we go ahead and get the actual asset I

1355
01:11:02,488 --> 01:11:15,819
mean I guess I could look if I let's see

1356
01:11:05,769 --> 01:11:17,650
asset data from file if I if I look at

1357
01:11:15,819 --> 01:11:19,328
how that's being done elsewhere I mean

1358
01:11:17,649 --> 01:11:22,210
here's where that's being done here

1359
01:11:19,328 --> 01:11:26,109
right we've got these loops that loop

1360
01:11:22,210 --> 01:11:27,849
over the asset grid and then they look

1361
01:11:26,109 --> 01:11:30,549
to see if they can get the asset then

1362
01:11:27,849 --> 01:11:35,019
they write the alignment point into that

1363
01:11:30,550 --> 01:11:38,349
asset and I guess to be honest looking

1364
01:11:35,019 --> 01:11:40,960
at that - you know that probably should

1365
01:11:38,349 --> 01:11:45,239
mark the file here if the thing doesn't

1366
01:11:40,960 --> 01:11:45,239
equal if they're not equal

1367
01:11:55,679 --> 01:12:02,078
so in a way it kind of feels like maybe

1368
01:11:59,139 --> 01:12:07,840
you just want this code to be shared and

1369
01:12:02,078 --> 01:12:20,500
you pass it an alignment point grid in

1370
01:12:07,840 --> 01:12:21,969
so I mean I don't know it seems to me

1371
01:12:20,500 --> 01:12:24,158
like maybe we just want that to happen

1372
01:12:21,969 --> 01:12:25,599
and then it will actually get processed

1373
01:12:24,158 --> 01:12:28,388
properly and I don't need that to do

1374
01:12:25,599 --> 01:12:30,940
because just if you take a look at what

1375
01:12:28,389 --> 01:12:33,219
happens here you know if I word it to go

1376
01:12:30,939 --> 01:12:36,939
full pull and say when you call update

1377
01:12:33,219 --> 01:12:38,649
acid data from file if we actually put

1378
01:12:36,939 --> 01:12:42,058
this in here where you know you have a

1379
01:12:38,649 --> 01:12:42,058
thing where you would pass in

1380
01:12:42,420 --> 01:12:47,649
information about what was going on what

1381
01:12:45,038 --> 01:12:48,969
we could do is say well you know there's

1382
01:12:47,649 --> 01:12:52,509
a parameter at the end of this thing

1383
01:12:48,969 --> 01:12:55,658
which is like if it's is art then we

1384
01:12:52,510 --> 01:12:58,019
pass in you know the what is what's

1385
01:12:55,658 --> 01:13:02,609
what's getting passed here it's like the

1386
01:12:58,019 --> 01:13:06,519
a line point yeah so it's this thing

1387
01:13:02,609 --> 01:13:17,250
right we can pass in in the line point

1388
01:13:06,519 --> 01:13:17,250
grid kind of a thing and if not then not

1389
01:13:19,229 --> 01:13:24,399
you know what I'm saying so we could do

1390
01:13:23,198 --> 01:13:27,219
something like that and if we did that

1391
01:13:24,399 --> 01:13:29,638
then both pieces of code could do the

1392
01:13:27,219 --> 01:13:32,649
same thing right

1393
01:13:29,639 --> 01:13:39,038
both would pass down their line points

1394
01:13:32,649 --> 01:13:42,038
and that would be fine I don't know how

1395
01:13:39,038 --> 01:13:46,509
I feel about it but then all this is is

1396
01:13:42,038 --> 01:13:49,359
something that says look if we got in a

1397
01:13:46,510 --> 01:13:52,349
line points pointer which would be this

1398
01:13:49,359 --> 01:13:52,348
nonsense here

1399
01:13:56,750 --> 01:14:01,170
so in here where we do update a sedated

1400
01:13:59,279 --> 01:14:04,469
from file we would have some that said

1401
01:14:01,170 --> 01:14:08,579
like look I want a pointer to this

1402
01:14:04,469 --> 01:14:12,300
ridiculous array of garbage and you know

1403
01:14:08,579 --> 01:14:15,300
by default maybe it can just be zero if

1404
01:14:12,300 --> 01:14:16,710
you don't care I guess I just force you

1405
01:14:15,300 --> 01:14:18,179
to pass through anyway but you know if

1406
01:14:16,710 --> 01:14:19,829
you pass in one of these then I'll read

1407
01:14:18,179 --> 01:14:25,380
the alignment points out of it how about

1408
01:14:19,829 --> 01:14:27,269
that right and I you know I should

1409
01:14:25,380 --> 01:14:33,420
probably mention here so it gets a

1410
01:14:27,270 --> 01:14:37,020
little C has some weird ways in which

1411
01:14:33,420 --> 01:14:38,789
because it basically relies on artifacts

1412
01:14:37,020 --> 01:14:43,199
of how parsers worked and how parse

1413
01:14:38,789 --> 01:14:45,448
trees are constructed some things about

1414
01:14:43,198 --> 01:14:49,649
it are a little bit weird you would

1415
01:14:45,448 --> 01:14:50,339
probably expect if you were not a C

1416
01:14:49,649 --> 01:14:54,329
programmer

1417
01:14:50,340 --> 01:14:56,730
or if you don't program C a lot or

1418
01:14:54,329 --> 01:14:58,019
haven't ever studied this even you would

1419
01:14:56,729 --> 01:15:02,250
probably expect this to be cleared like

1420
01:14:58,020 --> 01:15:03,690
this meaning if I want a array you okay

1421
01:15:02,250 --> 01:15:08,369
you can see what I want here I want an

1422
01:15:03,689 --> 01:15:10,138
array of alignment points right I want

1423
01:15:08,369 --> 01:15:12,658
to pass one of these in but I don't want

1424
01:15:10,139 --> 01:15:14,159
to pass like the entire array in I want

1425
01:15:12,658 --> 01:15:16,619
to pass like a player to the array right

1426
01:15:14,158 --> 01:15:18,658
and so you might think like oh I want to

1427
01:15:16,619 --> 01:15:20,340
do this but if you did that what it

1428
01:15:18,658 --> 01:15:22,559
would mean is actually that you have an

1429
01:15:20,340 --> 01:15:24,630
array of pointers to alignment points

1430
01:15:22,560 --> 01:15:25,860
and you're still passing the whole array

1431
01:15:24,630 --> 01:15:28,050
you're passing the whole array of

1432
01:15:25,859 --> 01:15:29,569
pointers now instead of a whole array of

1433
01:15:28,050 --> 01:15:32,730
points but that's the only difference

1434
01:15:29,569 --> 01:15:35,698
and so you saw me reflexively do this

1435
01:15:32,729 --> 01:15:38,399
and that was just because I in my head

1436
01:15:35,698 --> 01:15:42,408
was like oh I I need a pointer to this

1437
01:15:38,399 --> 01:15:45,269
big array of alignment points the way C

1438
01:15:42,408 --> 01:15:49,948
treats its parse tree is it works from

1439
01:15:45,270 --> 01:15:52,800
the identifier name outward so it starts

1440
01:15:49,948 --> 01:15:56,789
going outward to the right and then goes

1441
01:15:52,800 --> 01:15:59,489
outward to the left and so if you want

1442
01:15:56,789 --> 01:16:03,119
to make sure that it reads it as a

1443
01:15:59,488 --> 01:16:05,729
pointer to an array you need the

1444
01:16:03,119 --> 01:16:08,789
parentheses the reason is that since it

1445
01:16:05,729 --> 01:16:10,379
starts working outward to the right the

1446
01:16:08,789 --> 01:16:12,269
first thing it will see

1447
01:16:10,380 --> 01:16:15,840
when it goes to figure out what type

1448
01:16:12,270 --> 01:16:18,270
align points is is this array asset

1449
01:16:15,840 --> 01:16:20,190
import grid max then it will look at

1450
01:16:18,270 --> 01:16:22,860
asset report grid max second dimension

1451
01:16:20,189 --> 01:16:26,819
then it will see HH bitmap all point

1452
01:16:22,859 --> 01:16:29,789
count only when it hits the end will it

1453
01:16:26,819 --> 01:16:33,149
ever look to the left so it's reading

1454
01:16:29,789 --> 01:16:36,449
then becomes a line points is a array of

1455
01:16:33,149 --> 01:16:39,929
asset import grid max arrays of accent

1456
01:16:36,449 --> 01:16:46,250
import grid max of a raise of HH bitmap

1457
01:16:39,930 --> 01:16:50,340
a line point count of pointers to

1458
01:16:46,250 --> 01:16:53,510
alignment points right and what I needed

1459
01:16:50,340 --> 01:16:56,430
to do is I needed to see the star first

1460
01:16:53,510 --> 01:16:58,650
you know what I'm saying like I'm trying

1461
01:16:56,430 --> 01:17:03,090
to make sure that it looks at the star

1462
01:16:58,649 --> 01:17:04,649
as the first thing so by wrapping it in

1463
01:17:03,090 --> 01:17:09,390
parentheses all I was trying to do there

1464
01:17:04,649 --> 01:17:12,179
is say hey read what's in the

1465
01:17:09,390 --> 01:17:13,920
parentheses first then keep doing what

1466
01:17:12,180 --> 01:17:15,180
you're going to do so then it tries to

1467
01:17:13,920 --> 01:17:16,350
look to the right and goes well there's

1468
01:17:15,180 --> 01:17:18,090
nothing to the right because I hit a

1469
01:17:16,350 --> 01:17:19,289
parenthesis there so I have to do

1470
01:17:18,090 --> 01:17:21,600
everything the parentheses before I go

1471
01:17:19,289 --> 01:17:24,390
any further so then it looks to the left

1472
01:17:21,600 --> 01:17:28,050
and sees it's a pointer okay so a line

1473
01:17:24,390 --> 01:17:30,000
points is a pointer to what to an array

1474
01:17:28,050 --> 01:17:32,699
of this array of that array of this of

1475
01:17:30,000 --> 01:17:34,800
that right so that's a way of force you

1476
01:17:32,699 --> 01:17:41,220
get to go left one time first and then

1477
01:17:34,800 --> 01:17:43,320
it can go right you know that's all um

1478
01:17:41,220 --> 01:17:44,970
so if I want to point past something

1479
01:17:43,319 --> 01:17:48,779
like that in there then what would

1480
01:17:44,970 --> 01:17:50,670
happen is this whole thing occurs and so

1481
01:17:48,779 --> 01:17:52,139
then I need to dereference this just a

1482
01:17:50,670 --> 01:17:54,210
little bit like that to make sure I can

1483
01:17:52,140 --> 01:17:58,740
still use this rate otherwise it's

1484
01:17:54,210 --> 01:17:59,970
totally fine I don't I don't even really

1485
01:17:58,739 --> 01:18:01,469
know now I think about it whether I need

1486
01:17:59,970 --> 01:18:01,710
to actually do that star but I think I

1487
01:18:01,470 --> 01:18:03,449
do

1488
01:18:01,710 --> 01:18:06,090
because otherwise I would be accessing

1489
01:18:03,449 --> 01:18:09,409
an array of those things so I need to

1490
01:18:06,090 --> 01:18:11,579
like peel off one of those stars first

1491
01:18:09,409 --> 01:18:12,869
it's not super essential to get that

1492
01:18:11,579 --> 01:18:14,550
right because the compiler will generate

1493
01:18:12,869 --> 01:18:17,069
in there for you that lets you know that

1494
01:18:14,550 --> 01:18:20,520
you did that wrong but yeah it's just

1495
01:18:17,069 --> 01:18:22,710
worth noting so if I do that then I can

1496
01:18:20,520 --> 01:18:23,860
just pass this in I also don't need to

1497
01:18:22,710 --> 01:18:27,159
do this anymore

1498
01:18:23,859 --> 01:18:29,529
I think I will keep doing it and what

1499
01:18:27,159 --> 01:18:32,769
that means is that now I can create one

1500
01:18:29,529 --> 01:18:35,380
of those alignment point arrays like so

1501
01:18:32,770 --> 01:18:38,440
and just stuff the data that I need when

1502
01:18:35,380 --> 01:18:40,920
I parse the font block I can just have

1503
01:18:38,439 --> 01:18:44,109
it take care of that for me

1504
01:18:40,920 --> 01:18:46,630
so in here if we create an empty array

1505
01:18:44,109 --> 01:18:48,969
of these things then the align point

1506
01:18:46,630 --> 01:18:51,730
setup that we do here would not go into

1507
01:18:48,970 --> 01:18:54,850
a fake one but rather it would do set a

1508
01:18:51,729 --> 01:18:58,959
line point of the specific a line point

1509
01:18:54,850 --> 01:19:01,600
in question so zero zero zero which is

1510
01:18:58,960 --> 01:19:03,069
the only one we will ever write is the

1511
01:19:01,600 --> 01:19:05,220
one that we're going to set and then in

1512
01:19:03,069 --> 01:19:10,449
here we will pass the align points down

1513
01:19:05,220 --> 01:19:13,360
as something that gets used and apply it

1514
01:19:10,449 --> 01:19:15,519
to pass the address of that giant block

1515
01:19:13,359 --> 01:19:16,089
as well because we are using the address

1516
01:19:15,520 --> 01:19:17,650
of there

1517
01:19:16,090 --> 01:19:20,079
I think again that's one of those things

1518
01:19:17,649 --> 01:19:22,359
that's always hard it is implicitly an

1519
01:19:20,079 --> 01:19:26,050
address so it might be just fine passing

1520
01:19:22,359 --> 01:19:29,920
it but I don't will let the compiler

1521
01:19:26,050 --> 01:19:33,760
tell me the second eye that's all well

1522
01:19:29,920 --> 01:19:36,279
and good and I think then at that point

1523
01:19:33,760 --> 01:19:42,340
we are done right

1524
01:19:36,279 --> 01:19:44,579
big oops making that work okay that's an

1525
01:19:42,340 --> 01:19:44,579
S

1526
01:19:52,920 --> 01:19:56,670
and off we go

1527
01:19:59,310 --> 01:20:15,130
all good okay

1528
01:20:07,270 --> 01:20:18,400
um like I said when we're in this

1529
01:20:15,130 --> 01:20:19,869
particular routine here I don't think

1530
01:20:18,399 --> 01:20:22,599
this was correctly marking these files

1531
01:20:19,869 --> 01:20:24,430
as having been changed so when we come

1532
01:20:22,600 --> 01:20:25,270
through here and write back our

1533
01:20:24,430 --> 01:20:26,770
alignment points

1534
01:20:25,270 --> 01:20:28,480
I feel like this thing should be saying

1535
01:20:26,770 --> 01:20:31,330
if these two alignment points were not

1536
01:20:28,479 --> 01:20:33,309
the same then we need to mark the file

1537
01:20:31,329 --> 01:20:37,869
as needing to be rewritten the h of j

1538
01:20:33,310 --> 01:20:41,710
files like metadata needs to get

1539
01:20:37,869 --> 01:20:43,359
rewritten there I would think right so

1540
01:20:41,710 --> 01:20:45,430
it's a little bit weird that that's not

1541
01:20:43,359 --> 01:20:50,229
actually happening and I don't actually

1542
01:20:45,430 --> 01:20:53,890
know why it's not doing that but that's

1543
01:20:50,229 --> 01:20:55,629
the case so that's a little bit strange

1544
01:20:53,890 --> 01:20:59,520
and I I do wonder so I'm going to move

1545
01:20:55,630 --> 01:20:59,520
the to do down into here

1546
01:21:17,399 --> 01:21:32,679
that part I yeah I just it doesn't seem

1547
01:21:21,029 --> 01:21:33,849
logical to me so I think we wanted to do

1548
01:21:32,679 --> 01:21:36,250
there and we probably want to fix that

1549
01:21:33,849 --> 01:21:37,690
at some point because I'm I wouldn't

1550
01:21:36,250 --> 01:21:40,510
have to go make sure that it's actually

1551
01:21:37,689 --> 01:21:43,689
true but I think we want to always mark

1552
01:21:40,510 --> 01:21:45,520
the art assets as having changed if you

1553
01:21:43,689 --> 01:21:47,589
see a difference in the alignment points

1554
01:21:45,520 --> 01:21:49,329
that are getting passed in I could be

1555
01:21:47,590 --> 01:21:54,880
wrong about that but I think that's what

1556
01:21:49,328 --> 01:21:57,759
we want so yeah I think that's probably

1557
01:21:54,880 --> 01:21:58,900
good but maybe that's not yeah I don't

1558
01:21:57,760 --> 01:22:02,710
know maybe that's not how that should

1559
01:21:58,899 --> 01:22:05,379
happen but we'll see um so now that we

1560
01:22:02,710 --> 01:22:07,630
have this code working properly for

1561
01:22:05,380 --> 01:22:09,849
everything else I just need to make sure

1562
01:22:07,630 --> 01:22:11,920
I guess I should do the rebuild one more

1563
01:22:09,849 --> 01:22:15,069
time I'm gonna do it in O to this time

1564
01:22:11,920 --> 01:22:16,449
so it doesn't take as long I and because

1565
01:22:15,069 --> 01:22:18,519
I just want to double-check that moving

1566
01:22:16,448 --> 01:22:20,259
this in here didn't break anything

1567
01:22:18,520 --> 01:22:22,119
we know that the full rebuild worked

1568
01:22:20,260 --> 01:22:23,559
just before so if it doesn't work now

1569
01:22:22,118 --> 01:22:27,069
then we know that it has something to do

1570
01:22:23,559 --> 01:22:29,079
with that move I'm gonna delete the

1571
01:22:27,069 --> 01:22:33,460
intro cutscene and the base game H at J

1572
01:22:29,078 --> 01:22:35,019
and then I'm gonna run it since we're in

1573
01:22:33,460 --> 01:22:36,760
release mode I think it should work a

1574
01:22:35,020 --> 01:22:38,079
lot more quickly now in fact you can

1575
01:22:36,760 --> 01:22:42,039
actually able to see how much faster

1576
01:22:38,078 --> 01:22:47,189
this thing updates and then when we're

1577
01:22:42,038 --> 01:22:47,189
done I will try a loading fonts

1578
01:23:14,630 --> 01:23:22,590
all right so that seems good

1579
01:23:19,198 --> 01:23:23,868
I got everything seems fine so we'll

1580
01:23:22,590 --> 01:23:27,719
leave it at that

1581
01:23:23,868 --> 01:23:31,408
if I now want to go look at the font

1582
01:23:27,719 --> 01:23:35,520
stuff I think probably all hell's gonna

1583
01:23:31,408 --> 01:23:38,908
break loose so let's take it slow the

1584
01:23:35,520 --> 01:23:42,989
first thing we need to do is we need to

1585
01:23:38,908 --> 01:23:44,519
move our test font stuff out of here so

1586
01:23:42,988 --> 01:23:49,138
we're gonna move that into temp

1587
01:23:44,520 --> 01:23:51,480
and now we like don't have fonts so in

1588
01:23:49,139 --> 01:23:54,449
theory if I ran the game it would just

1589
01:23:51,479 --> 01:24:03,138
break immediately because there are no

1590
01:23:54,448 --> 01:24:03,138
fonts or remedy will crash I am Not sure

1591
01:24:03,500 --> 01:24:11,069
okay if I remember correctly visual

1592
01:24:08,039 --> 01:24:13,829
studio is currently installed as the

1593
01:24:11,069 --> 01:24:16,679
debugger and Visual Studio is broken

1594
01:24:13,829 --> 01:24:17,670
because it like its certificate expired

1595
01:24:16,679 --> 01:24:21,300
or whatever because you know

1596
01:24:17,670 --> 01:24:24,060
certificates are awesome and so I can't

1597
01:24:21,300 --> 01:24:26,940
hit debug and save a mini dump for

1598
01:24:24,060 --> 01:24:29,610
George which I need to do so I think

1599
01:24:26,939 --> 01:24:34,710
what we want to do here is setup windbg

1600
01:24:29,609 --> 01:24:39,389
as our just-in-time editor and although

1601
01:24:34,710 --> 01:24:41,639
it probably requires a reboot crap well

1602
01:24:39,389 --> 01:24:43,880
I'll try it anyway just in case it

1603
01:24:41,639 --> 01:24:43,880
doesn't

1604
01:24:49,060 --> 01:25:12,610
I that's what I wanted that is not what

1605
01:25:10,989 --> 01:25:16,869
I wanted this is what this is what we

1606
01:25:12,609 --> 01:25:25,899
want okay so what happens in Windows is

1607
01:25:16,869 --> 01:25:29,109
when it goes and like this when it

1608
01:25:25,899 --> 01:25:33,099
detects a fault it looks to see whether

1609
01:25:29,109 --> 01:25:35,559
in the registry anyone has registered a

1610
01:25:33,100 --> 01:25:38,380
debugger that's supposed to launch to

1611
01:25:35,560 --> 01:25:41,620
debug the program that keeled over right

1612
01:25:38,380 --> 01:25:46,270
and so you can see here where the

1613
01:25:41,619 --> 01:25:51,819
registry keys are if I go out so this is

1614
01:25:46,270 --> 01:26:03,150
what HQ local machine software

1615
01:25:51,819 --> 01:26:03,149
it looks like Microsoft Windows NT

1616
01:26:19,689 --> 01:26:30,569
currentversion a e debug alright so in

1617
01:26:26,079 --> 01:26:33,609
here this registry key shows you who is

1618
01:26:30,569 --> 01:26:39,069
currently registered as the debugger

1619
01:26:33,609 --> 01:26:42,130
that will handle you know any broken any

1620
01:26:39,069 --> 01:26:46,119
software that that breaks when it's not

1621
01:26:42,130 --> 01:26:48,760
already running under a debugger so if I

1622
01:26:46,119 --> 01:26:52,719
were to change this key to point to win

1623
01:26:48,760 --> 01:26:58,719
debug or something right then I should

1624
01:26:52,719 --> 01:27:03,429
be okay so in if I open up a windbag

1625
01:26:58,719 --> 01:27:06,010
here like window bug preview right let's

1626
01:27:03,429 --> 01:27:10,060
see I don't know how to actually get to

1627
01:27:06,010 --> 01:27:14,560
the place where this is where are you

1628
01:27:10,060 --> 01:27:17,070
win debug preview where do you exist

1629
01:27:14,560 --> 01:27:17,070
right now

1630
01:27:24,760 --> 01:27:36,590
so oh my okay

1631
01:27:29,689 --> 01:27:46,689
is that really is that really where you

1632
01:27:36,590 --> 01:27:46,690
are seriously

1633
01:28:01,020 --> 01:28:09,190
so in case anyone was wondering if you

1634
01:28:05,979 --> 01:28:13,089
baked the version name into the path of

1635
01:28:09,189 --> 01:28:15,069
the debugger when you install it exactly

1636
01:28:13,090 --> 01:28:17,050
what are you supposed to set the

1637
01:28:15,069 --> 01:28:20,679
registry key to for just-in-time

1638
01:28:17,050 --> 01:28:28,210
debugging because when it updates it's

1639
01:28:20,680 --> 01:28:32,890
going to break I don't know what goes on

1640
01:28:28,210 --> 01:28:37,210
at Microsoft anymore it's just what a

1641
01:28:32,890 --> 01:28:39,070
madhouse so here's the debugger this is

1642
01:28:37,210 --> 01:28:40,659
because it has to be installed via the

1643
01:28:39,069 --> 01:28:42,789
Windows Store which of course is a

1644
01:28:40,659 --> 01:28:48,729
gigantic pile of garbage that no one

1645
01:28:42,789 --> 01:28:51,430
should ever use so I'm gonna go ahead

1646
01:28:48,729 --> 01:28:54,819
and not do that I'm gonna cut and paste

1647
01:28:51,430 --> 01:28:56,860
all those files because I can it does

1648
01:28:54,819 --> 01:28:59,199
thank God that it happens to be one of

1649
01:28:56,859 --> 01:29:02,349
the thing only things Microsoft ships

1650
01:28:59,199 --> 01:29:08,470
that does not require you to basically

1651
01:29:02,350 --> 01:29:10,150
have an entire it doesn't require you to

1652
01:29:08,470 --> 01:29:13,900
have like an entire install process to

1653
01:29:10,149 --> 01:29:18,819
use so I think if we just go in here and

1654
01:29:13,899 --> 01:29:21,279
do windbg oh it looks like we already

1655
01:29:18,819 --> 01:29:24,519
have a windy B preview there okay so

1656
01:29:21,279 --> 01:29:27,009
I've already done this once so if I do

1657
01:29:24,520 --> 01:29:30,640
this I should be able to do a paste to

1658
01:29:27,010 --> 01:29:33,760
replace all these files and then in

1659
01:29:30,640 --> 01:29:36,220
theory now I could point it here instead

1660
01:29:33,760 --> 01:29:38,079
of to the store which is an absurd path

1661
01:29:36,220 --> 01:29:45,150
that won't work for more than like 15

1662
01:29:38,079 --> 01:29:49,000
minutes right so if we do this and then

1663
01:29:45,149 --> 01:29:54,339
where's the actual there it is this is

1664
01:29:49,000 --> 01:29:56,649
the program right there it is and cut

1665
01:29:54,340 --> 01:29:58,119
and paste this in there now the path is

1666
01:29:56,649 --> 01:30:00,129
correct but the problem is I don't

1667
01:29:58,119 --> 01:30:03,369
actually know if these parameters are

1668
01:30:00,130 --> 01:30:07,960
the parameters that Windy bug actually

1669
01:30:03,369 --> 01:30:09,039
needs so I want to go look at that real

1670
01:30:07,960 --> 01:30:12,119
quick and make sure

1671
01:30:09,039 --> 01:30:12,119
those are correct as well

1672
01:30:25,998 --> 01:30:42,719
so it looks like maybe it's that so

1673
01:30:38,670 --> 01:30:44,760
we're just gonna guess that it is and

1674
01:30:42,719 --> 01:30:47,279
cross our fingers it looks very similar

1675
01:30:44,760 --> 01:30:51,679
to what was there before so I'm just

1676
01:30:47,279 --> 01:30:54,779
gonna say okay alright so now it's it's

1677
01:30:51,679 --> 01:30:59,809
it's the yeah it's the debug shell there

1678
01:30:54,779 --> 01:31:02,340
I'm also gonna take some quality of life

1679
01:30:59,809 --> 01:31:05,579
take a minor quality of life step here

1680
01:31:02,340 --> 01:31:10,708
as well and say maybe while we're at it

1681
01:31:05,578 --> 01:31:12,208
let's not make f12 be the key to break

1682
01:31:10,708 --> 01:31:25,859
into the debugger because that f12

1683
01:31:12,208 --> 01:31:28,279
drives me nuts right sit debug

1684
01:31:25,859 --> 01:31:28,279
great

1685
01:31:31,109 --> 01:31:36,630
I don't really remember what the

1686
01:31:34,229 --> 01:31:42,479
register it's like user debug key or

1687
01:31:36,630 --> 01:31:48,329
something like that oh is it just

1688
01:31:42,479 --> 01:31:52,019
sitting there actually oh it's user

1689
01:31:48,329 --> 01:31:55,130
that's right there so this needs to be

1690
01:31:52,020 --> 01:32:01,170
of the K code in order for it to not be

1691
01:31:55,130 --> 01:32:02,970
set to f12 and so I in order to do that

1692
01:32:01,170 --> 01:32:11,250
what I would need to do is just look up

1693
01:32:02,970 --> 01:32:17,990
the VK table and see if I can't find

1694
01:32:11,250 --> 01:32:17,989
like let's say we use pause maybe

1695
01:32:21,079 --> 01:32:28,850
so that's oh x3 n-- so hopefully that's

1696
01:32:26,550 --> 01:32:28,850
fine

1697
01:32:36,359 --> 01:32:45,089
and we'll see what happens

1698
01:32:38,550 --> 01:32:56,409
wait what did you just do oh there we go

1699
01:32:45,090 --> 01:32:58,690
so hopefully that's fine and we'll leave

1700
01:32:56,409 --> 01:33:01,239
with that all right so that at least if

1701
01:32:58,689 --> 01:33:03,639
we save this out right our registry is

1702
01:33:01,239 --> 01:33:05,260
now saved in theory we have updated the

1703
01:33:03,640 --> 01:33:07,210
debugger I just think you may have to

1704
01:33:05,260 --> 01:33:08,980
reboot for take effect so when I click

1705
01:33:07,210 --> 01:33:11,199
debug here I'm not sure we'll actually

1706
01:33:08,979 --> 01:33:14,289
get windy bug but I'll reboot the

1707
01:33:11,199 --> 01:33:17,199
machine after the stream and then like

1708
01:33:14,289 --> 01:33:20,729
next time this happens we it should work

1709
01:33:17,199 --> 01:33:20,729
so we'll see

1710
01:33:29,420 --> 01:33:40,940
so that looks like I did set it but not

1711
01:33:32,810 --> 01:33:44,690
correctly is that true I may have just

1712
01:33:40,939 --> 01:34:01,729
made it a little bit wrong let's see

1713
01:33:44,689 --> 01:34:05,118
here oh I so close I'm trying not to

1714
01:34:01,729 --> 01:34:07,879
rage out Microsoft because I just it

1715
01:34:05,118 --> 01:34:10,549
drives me insane all the time you cannot

1716
01:34:07,880 --> 01:34:15,260
map drives you know in a way that works

1717
01:34:10,550 --> 01:34:17,510
across users the drive w is not mapped

1718
01:34:15,260 --> 01:34:20,929
for the administrator which is what will

1719
01:34:17,510 --> 01:34:23,869
probably run the debugger so I need to

1720
01:34:20,929 --> 01:34:26,539
use the unmapped version of the path in

1721
01:34:23,868 --> 01:34:30,099
order to tell it where to find this

1722
01:34:26,539 --> 01:34:34,279
program so it actually needs to be this

1723
01:34:30,100 --> 01:34:37,780
right that may be enough so I think

1724
01:34:34,279 --> 01:34:44,000
maybe it would have worked and I blew it

1725
01:34:37,779 --> 01:34:45,729
so sorry about that oh well so hopefully

1726
01:34:44,000 --> 01:34:48,590
we can get that crash to happen again

1727
01:34:45,729 --> 01:34:54,259
let's test it and see if we got this

1728
01:34:48,590 --> 01:35:02,360
working so so what did I do here I I ran

1729
01:34:54,260 --> 01:35:04,070
it through remedy right there we go so

1730
01:35:02,359 --> 01:35:05,630
running it through remedy is reliably

1731
01:35:04,069 --> 01:35:08,210
crashing which is good so now we can get

1732
01:35:05,630 --> 01:35:14,179
our JIT working so let me go ahead and

1733
01:35:08,210 --> 01:35:19,239
try to get it debugged perfect that's

1734
01:35:14,179 --> 01:35:20,679
what we wanted I think unfortunately

1735
01:35:19,239 --> 01:35:23,179
[Music]

1736
01:35:20,679 --> 01:35:24,440
windy bug is now deciding to download

1737
01:35:23,179 --> 01:35:26,179
the symbols for the entire operating

1738
01:35:24,439 --> 01:35:28,009
system because that's just what it wants

1739
01:35:26,179 --> 01:35:31,010
to do we don't really care about that

1740
01:35:28,010 --> 01:35:32,869
what we care about is capturing a mini

1741
01:35:31,010 --> 01:35:34,369
dump for George because he can't really

1742
01:35:32,868 --> 01:35:36,589
do bug this crash without more

1743
01:35:34,368 --> 01:35:38,238
information you know what I'm saying so

1744
01:35:36,590 --> 01:35:42,139
we need to be able to save the mini dump

1745
01:35:38,238 --> 01:35:43,138
now windbag for some reason never puts

1746
01:35:42,139 --> 01:35:45,868
anything in the actual

1747
01:35:43,139 --> 01:35:47,760
you I so as far as I know like there's

1748
01:35:45,868 --> 01:35:49,589
no I mean maybe there's a way to do it

1749
01:35:47,760 --> 01:35:52,469
up here but I've you know for whatever

1750
01:35:49,590 --> 01:35:56,189
weird reason they never like put

1751
01:35:52,469 --> 01:35:58,800
anything out in the actual there's never

1752
01:35:56,189 --> 01:36:02,099
any actual UI it's just it's like no I

1753
01:35:58,800 --> 01:36:04,739
don't I don't like to have you eyes for

1754
01:36:02,099 --> 01:36:07,559
some reason so you have to go to the

1755
01:36:04,738 --> 01:36:10,138
console which I don't actually know why

1756
01:36:07,559 --> 01:36:14,099
that's not here at the moment but if you

1757
01:36:10,139 --> 01:36:15,868
go to the View menu and get it which is

1758
01:36:14,099 --> 01:36:17,090
this oh no nevermind it is it's just

1759
01:36:15,868 --> 01:36:21,538
here for some reason

1760
01:36:17,090 --> 01:36:25,168
um you can actually do a dump so I

1761
01:36:21,538 --> 01:36:37,648
believe it's dot dump or what's the

1762
01:36:25,168 --> 01:36:39,389
what's the way to get the so I don't

1763
01:36:37,649 --> 01:36:41,399
know how to get help on this I'm sorry I

1764
01:36:39,389 --> 01:36:44,969
just don't use wind bug very often but

1765
01:36:41,399 --> 01:36:46,169
if we do a dot dump we should be able to

1766
01:36:44,969 --> 01:36:49,109
say we want a mini dump

1767
01:36:46,168 --> 01:36:52,439
I believe em - ma means everything

1768
01:36:49,109 --> 01:36:56,279
included and that's saying mini dump

1769
01:36:52,439 --> 01:36:58,380
with all options and then we can say all

1770
01:36:56,279 --> 01:37:02,728
right place that somewhere where we can

1771
01:36:58,380 --> 01:37:09,269
get it so you know see work temp remedy

1772
01:37:02,729 --> 01:37:11,369
crash on starting H H I don't remember

1773
01:37:09,269 --> 01:37:14,269
what it is but it's probably a dot BMP

1774
01:37:11,368 --> 01:37:14,268
file

1775
01:37:19,010 --> 01:37:27,300
dot dump oh that's the command um let's

1776
01:37:23,880 --> 01:37:29,699
see do they have an examples yeah dot

1777
01:37:27,300 --> 01:37:31,140
DMPs I thought so I thought it is let me

1778
01:37:29,699 --> 01:37:32,579
verify my command-line switches while

1779
01:37:31,140 --> 01:37:34,140
I'm at it because I guess I don't really

1780
01:37:32,579 --> 01:37:42,779
remember what they I don't use this that

1781
01:37:34,140 --> 01:37:49,920
often /ma that's what we want yeah

1782
01:37:42,779 --> 01:37:52,349
large and more complete file all

1783
01:37:49,920 --> 01:37:58,350
optional additions yeah okay so I'm

1784
01:37:52,350 --> 01:38:00,630
gonna try that here there we go and so

1785
01:37:58,350 --> 01:38:03,270
now what I'm done today I can send

1786
01:38:00,630 --> 01:38:05,699
George that mini dump file and he should

1787
01:38:03,270 --> 01:38:07,740
be able to figure out what went wrong

1788
01:38:05,699 --> 01:38:09,510
there again this is a really nice thing

1789
01:38:07,739 --> 01:38:11,309
to learn to do if you don't know how to

1790
01:38:09,510 --> 01:38:14,670
save him any dump like that

1791
01:38:11,310 --> 01:38:17,310
I think Visual Studio has a way to save

1792
01:38:14,670 --> 01:38:18,779
a mini dump in the file menu I hope I'm

1793
01:38:17,310 --> 01:38:20,640
saying that right

1794
01:38:18,779 --> 01:38:22,949
but those mini dumps are very valuable

1795
01:38:20,640 --> 01:38:24,539
because then you can go grab this dump

1796
01:38:22,949 --> 01:38:26,699
file here right upload it to like a

1797
01:38:24,539 --> 01:38:28,470
google drivers and they're huge they get

1798
01:38:26,699 --> 01:38:31,710
a lot tinier though if you sip them so

1799
01:38:28,470 --> 01:38:35,610
if you nope nope don't do that if you

1800
01:38:31,710 --> 01:38:37,020
first zip it into a zip file you get a

1801
01:38:35,609 --> 01:38:38,939
lot of compression because it's mostly

1802
01:38:37,020 --> 01:38:41,790
compressed highly compressible memory

1803
01:38:38,939 --> 01:38:44,279
there's some zeros and stuff like that

1804
01:38:41,789 --> 01:38:47,970
or runs of common numbers and stuff like

1805
01:38:44,279 --> 01:38:49,769
this so if you compress it you get a lot

1806
01:38:47,970 --> 01:38:51,240
of compression that probably goes down

1807
01:38:49,770 --> 01:38:54,930
to 30 40 megabytes

1808
01:38:51,239 --> 01:38:57,359
probably yeah so if I just send that now

1809
01:38:54,930 --> 01:39:00,180
to George he can load that on his

1810
01:38:57,359 --> 01:39:01,979
machine in his debugger and see where

1811
01:39:00,180 --> 01:39:03,960
the program crashed and also look at

1812
01:39:01,979 --> 01:39:06,029
some of the variables and the structures

1813
01:39:03,960 --> 01:39:07,500
which is really helpful because that way

1814
01:39:06,029 --> 01:39:10,679
he can maybe get some information about

1815
01:39:07,500 --> 01:39:15,060
like what happened so we're gonna let

1816
01:39:10,680 --> 01:39:17,039
him have a crack at that in the meantime

1817
01:39:15,060 --> 01:39:20,430
I want to take a look at debugging this

1818
01:39:17,039 --> 01:39:23,010
stuff so what I'm gonna do here is I

1819
01:39:20,430 --> 01:39:25,200
don't actually know is it just any

1820
01:39:23,010 --> 01:39:27,930
startup of remedy is dangerous right now

1821
01:39:25,199 --> 01:39:31,800
I'm not actually sure so I'm gonna take

1822
01:39:27,930 --> 01:39:34,710
a look if I open up

1823
01:39:31,800 --> 01:39:37,560
went through hand-made if i @ f 11 do i

1824
01:39:34,710 --> 01:39:40,109
crash I don't so it seems like it was

1825
01:39:37,560 --> 01:39:44,070
something that actually from just

1826
01:39:40,109 --> 01:39:46,319
running free caused it to crash I'm not

1827
01:39:44,069 --> 01:39:48,289
sure but either way I'm gonna see if I

1828
01:39:46,319 --> 01:39:51,659
can just debug the one part I want to

1829
01:39:48,289 --> 01:39:54,269
and we'll let George figure out what's

1830
01:39:51,659 --> 01:39:56,460
going on later and you know we can sort

1831
01:39:54,270 --> 01:39:58,560
of deal with that part separately so I'm

1832
01:39:56,460 --> 01:39:59,939
gonna look at this function cuz that's

1833
01:39:58,560 --> 01:40:01,830
really the only thing that I want to see

1834
01:39:59,939 --> 01:40:04,949
we'll see if I can run it it looks like

1835
01:40:01,829 --> 01:40:07,619
I can so we're fine I don't actually

1836
01:40:04,949 --> 01:40:11,789
know what the crash was um so looking

1837
01:40:07,619 --> 01:40:14,039
through here oh well actually nevermind

1838
01:40:11,789 --> 01:40:15,210
we don't really do this yet cuz well

1839
01:40:14,039 --> 01:40:19,949
this thing is this is not gonna do

1840
01:40:15,210 --> 01:40:22,500
anything right I don't know why those

1841
01:40:19,949 --> 01:40:24,479
files got marked as modified that's

1842
01:40:22,500 --> 01:40:28,909
probably a bad sign

1843
01:40:24,479 --> 01:40:28,909
because they don't need to be actually

1844
01:40:30,529 --> 01:40:34,889
oops uh so we should probably find out

1845
01:40:33,420 --> 01:40:36,149
why that's happening to let me put it to

1846
01:40:34,890 --> 01:40:37,530
do in there for that but was gonna say

1847
01:40:36,149 --> 01:40:40,939
is we need to actually put the font

1848
01:40:37,529 --> 01:40:40,939
information in there first

1849
01:40:55,039 --> 01:41:00,090
so we need to track that down at some

1850
01:40:57,180 --> 01:41:00,869
point all right so we run this thing we

1851
01:41:00,090 --> 01:41:04,350
get to here

1852
01:41:00,869 --> 01:41:06,210
what we need to do is add a new h HT for

1853
01:41:04,350 --> 01:41:07,860
the font so besides the two that it

1854
01:41:06,210 --> 01:41:10,380
parses normally we need like that one

1855
01:41:07,859 --> 01:41:12,179
more in there now for the font so what

1856
01:41:10,380 --> 01:41:14,460
I'm going to do for that is I'm gonna

1857
01:41:12,180 --> 01:41:15,869
actually run our font generator and see

1858
01:41:14,460 --> 01:41:21,390
if we can't get it to produce something

1859
01:41:15,869 --> 01:41:30,269
that looks useable to us so let's go to

1860
01:41:21,390 --> 01:41:34,350
here delete all this and I'm gonna run

1861
01:41:30,270 --> 01:41:39,510
HH font now so I don't actually remember

1862
01:41:34,350 --> 01:41:51,539
which font swing were you thinking um I

1863
01:41:39,510 --> 01:41:56,430
think it was just the console I think it

1864
01:41:51,539 --> 01:41:59,189
was probably just this I don't really

1865
01:41:56,430 --> 01:42:01,530
know so I'm gonna say this is what we

1866
01:41:59,189 --> 01:42:03,659
were using even though I don't know that

1867
01:42:01,529 --> 01:42:07,739
it was what we were using let's suppose

1868
01:42:03,659 --> 01:42:11,670
it was we're gonna use the test care set

1869
01:42:07,739 --> 01:42:17,550
we're gonna use the let's see liberation

1870
01:42:11,670 --> 01:42:24,300
mono hht and then we're gonna write to w

1871
01:42:17,550 --> 01:42:26,220
10 font right so that creates all of our

1872
01:42:24,300 --> 01:42:29,880
glyphs in theory you know here they all

1873
01:42:26,220 --> 01:42:32,670
are know if they're correct and so then

1874
01:42:29,880 --> 01:42:34,650
what we want to do is write this you

1875
01:42:32,670 --> 01:42:39,510
know move this over to our font

1876
01:42:34,649 --> 01:42:42,869
directory or our sources directory so

1877
01:42:39,510 --> 01:42:47,310
that there actually is some place where

1878
01:42:42,869 --> 01:42:50,010
these fonts can live I you know I guess

1879
01:42:47,310 --> 01:42:52,740
I would say

1880
01:42:50,010 --> 01:42:58,680
maybe do we just want like a separate

1881
01:42:52,739 --> 01:43:00,090
fonts HHA or did we want that to just be

1882
01:42:58,680 --> 01:43:02,280
included in bass game

1883
01:43:00,090 --> 01:43:17,640
I don't really know let's say it gets

1884
01:43:02,279 --> 01:43:21,960
included here there we go

1885
01:43:17,640 --> 01:43:25,740
so here's those fonts and then maybe in

1886
01:43:21,960 --> 01:43:27,480
here we say that the hht file because

1887
01:43:25,739 --> 01:43:31,679
we've got the hhe file in here somewhere

1888
01:43:27,479 --> 01:43:35,669
right although actually it doesn't

1889
01:43:31,680 --> 01:43:40,230
appear that we do where did the HSE file

1890
01:43:35,670 --> 01:43:44,340
go W template oh it's back in here so

1891
01:43:40,229 --> 01:43:51,269
that hht file for liberation mono that

1892
01:43:44,340 --> 01:43:56,659
wants to go somewhere and I assume that

1893
01:43:51,270 --> 01:43:56,660
it probably wants to go in the base game

1894
01:43:57,199 --> 01:44:14,369
directory as well or so if we go to

1895
01:44:09,300 --> 01:44:18,890
handmade tags and we've got liberation

1896
01:44:14,369 --> 01:44:18,890
monitor hht you know maybe I'll do this

1897
01:44:23,479 --> 01:44:28,859
this could be really stupid but it's

1898
01:44:26,340 --> 01:44:32,279
just what I'm gonna do for now so this

1899
01:44:28,859 --> 01:44:39,960
base game that hht could now include

1900
01:44:32,279 --> 01:44:43,550
that and if I go into the fonts

1901
01:44:39,960 --> 01:44:43,550
directory and take a look at this I

1902
01:44:44,930 --> 01:44:55,289
looks good right

1903
01:44:48,840 --> 01:44:56,880
I could print out these letters much

1904
01:44:55,289 --> 01:44:58,229
more concisely by looking at them and

1905
01:44:56,880 --> 01:45:00,109
seeing whether they're not they're whole

1906
01:44:58,229 --> 01:45:03,029
numbers like they are here and then not

1907
01:45:00,109 --> 01:45:08,369
including all of the zeros but you know

1908
01:45:03,029 --> 01:45:12,119
what are you doing so let's see I did

1909
01:45:08,369 --> 01:45:18,859
what I just did there and in you know in

1910
01:45:12,119 --> 01:45:25,349
bass game that face came open yet no in

1911
01:45:18,859 --> 01:45:27,710
W handmade tags bass game we have the

1912
01:45:25,350 --> 01:45:30,810
ability to do like a pound include right

1913
01:45:27,710 --> 01:45:41,840
so I'm assuming that here I could do

1914
01:45:30,810 --> 01:45:46,650
like pound include this file right so

1915
01:45:41,840 --> 01:45:48,360
liberation mano de hht in the fonts

1916
01:45:46,649 --> 01:45:50,849
directory because I thought we had

1917
01:45:48,359 --> 01:45:53,639
something like this support for this so

1918
01:45:50,850 --> 01:45:57,210
then it would do this right and you know

1919
01:45:53,640 --> 01:46:00,510
off would go it would be nice to be able

1920
01:45:57,210 --> 01:46:02,579
to place you know and I think I'll go

1921
01:46:00,510 --> 01:46:04,260
ahead and maybe do this when we extract

1922
01:46:02,579 --> 01:46:09,319
the font it would be nice to give it

1923
01:46:04,260 --> 01:46:09,320
like the author and description fields

1924
01:46:09,859 --> 01:46:17,339
as to just having come from h/h font or

1925
01:46:14,039 --> 01:46:20,060
something because otherwise it wouldn't

1926
01:46:17,340 --> 01:46:20,060
have any

1927
01:46:25,689 --> 01:46:31,989
I don't really know so anyway if we do

1928
01:46:30,219 --> 01:46:33,788
the pound include there I don't really

1929
01:46:31,988 --> 01:46:36,399
know where it looks for those files so

1930
01:46:33,788 --> 01:46:39,698
if we go to asset import I just want to

1931
01:46:36,399 --> 01:46:41,408
see when it doesn't include where does

1932
01:46:39,698 --> 01:46:43,478
it actually look and it looks like it

1933
01:46:41,408 --> 01:46:45,998
would work properly because it looks

1934
01:46:43,479 --> 01:46:49,300
always in the tags file directory so I

1935
01:46:45,998 --> 01:46:51,069
think that would just work I'm gonna go

1936
01:46:49,300 --> 01:46:52,329
ahead and compile oh wait I don't need

1937
01:46:51,069 --> 01:46:55,299
to compile I guess weird this we only

1938
01:46:52,328 --> 01:46:57,038
modify the tax file I'm gonna go ahead

1939
01:46:55,300 --> 01:47:02,469
and watch what happens now so when we

1940
01:46:57,038 --> 01:47:05,768
parse that that base game hht I want to

1941
01:47:02,469 --> 01:47:08,078
see what happens now if we get if we can

1942
01:47:05,769 --> 01:47:10,418
parse the font or not and and if so what

1943
01:47:08,078 --> 01:47:13,149
happens when we do so going into the

1944
01:47:10,418 --> 01:47:15,519
parse hht I'm pretty sure that in this

1945
01:47:13,149 --> 01:47:17,609
case the first one is actually the intro

1946
01:47:15,519 --> 01:47:20,590
cutscene which doesn't have an include

1947
01:47:17,609 --> 01:47:22,958
file in it anyway so I'm gonna skip this

1948
01:47:20,590 --> 01:47:25,599
one and we're gonna look at the next one

1949
01:47:22,958 --> 01:47:30,188
so here's this this is the actual hhd

1950
01:47:25,599 --> 01:47:33,369
that we want one of the first things we

1951
01:47:30,189 --> 01:47:35,949
see is after the hht should be that

1952
01:47:33,368 --> 01:47:37,478
include so when we hit this include

1953
01:47:35,948 --> 01:47:40,138
we're gonna say alright like what's the

1954
01:47:37,479 --> 01:47:44,110
file name that we're actually looking at

1955
01:47:40,139 --> 01:47:46,328
and there it is so the text there is

1956
01:47:44,109 --> 01:47:48,848
fonts liberation but that's exactly what

1957
01:47:46,328 --> 01:47:52,448
I expect so we're going to take a look

1958
01:47:48,849 --> 01:47:58,989
at whether or not we you know produce a

1959
01:47:52,448 --> 01:48:00,788
sensible path there just like we do when

1960
01:47:58,988 --> 01:48:02,708
we do included file info we're gonna see

1961
01:48:00,788 --> 01:48:06,389
whether or not we set this up properly

1962
01:48:02,708 --> 01:48:06,389
it looks like we sort of do maybe

1963
01:48:24,279 --> 01:48:30,588
all right so we're in harsh top little

1964
01:48:27,168 --> 01:48:33,019
block which is wrong so right off the

1965
01:48:30,588 --> 01:48:39,189
bat I think the problem here is we never

1966
01:48:33,019 --> 01:48:45,939
put in a font block detection so I think

1967
01:48:39,189 --> 01:48:45,939
here this needs to look for fonts right

1968
01:48:50,708 --> 01:48:55,788
yeah I'm saying so that needs to happen

1969
01:48:54,260 --> 01:48:58,010
and now that at least we know that it

1970
01:48:55,788 --> 01:49:01,398
gets there correctly I should be able to

1971
01:48:58,010 --> 01:49:08,239
go ahead and stop us right here instead

1972
01:49:01,399 --> 01:49:08,569
because hopefully that'll work there we

1973
01:49:08,238 --> 01:49:12,678
go

1974
01:49:08,569 --> 01:49:14,119
so here we are in parse font lock and we

1975
01:49:12,679 --> 01:49:16,279
first look to see whether we get the

1976
01:49:14,118 --> 01:49:22,779
glyph count and so let's find out if we

1977
01:49:16,279 --> 01:49:22,779
do oh sorry

1978
01:49:28,750 --> 01:49:34,159
and it looks like we do it says a

1979
01:49:30,649 --> 01:49:40,119
hundred there's that hundred value so

1980
01:49:34,159 --> 01:49:42,819
when we look okay that didn't work so

1981
01:49:40,119 --> 01:49:45,859
why didn't that work

1982
01:49:42,819 --> 01:49:48,649
glyph count tokens s3 two is definitely

1983
01:49:45,859 --> 01:49:50,719
greater than 100 so we must have missed

1984
01:49:48,649 --> 01:50:02,779
one of the parsing things must have

1985
01:49:50,720 --> 01:50:04,250
aired out so there wasn't error

1986
01:50:02,779 --> 01:50:10,159
we just don't know what that error

1987
01:50:04,250 --> 01:50:13,579
actually was so maybe it was that yeah

1988
01:50:10,159 --> 01:50:18,039
so this is the problem it's not actually

1989
01:50:13,579 --> 01:50:24,439
an identifier in this case it's a string

1990
01:50:18,039 --> 01:50:29,359
like if you look it's a quoted string

1991
01:50:24,439 --> 01:50:31,609
liberation mono that seems like probably

1992
01:50:29,359 --> 01:50:34,699
it should remain that way because if you

1993
01:50:31,609 --> 01:50:41,059
look at what happens everywhere else it

1994
01:50:34,699 --> 01:50:45,710
is you know it's probably should really

1995
01:50:41,060 --> 01:50:50,120
be the t TF so if we're gonna be more

1996
01:50:45,710 --> 01:50:52,489
estranged about this I would say we

1997
01:50:50,119 --> 01:50:57,229
probably want to take the TTF file name

1998
01:50:52,489 --> 01:51:00,849
which is this and actually make that TTF

1999
01:50:57,229 --> 01:51:04,929
file name be the thing that gets placed

2000
01:51:00,850 --> 01:51:04,930
after the font call

2001
01:51:07,529 --> 01:51:15,420
so right here so I don't really know if

2002
01:51:10,859 --> 01:51:18,170
name stem is the right thing that's a

2003
01:51:15,420 --> 01:51:18,170
really tough call

2004
01:51:25,539 --> 01:51:30,939
I'll leave it the way it is but either

2005
01:51:28,390 --> 01:51:34,360
way when this parsing happens for parts

2006
01:51:30,939 --> 01:51:41,229
Mart block that needs to be a string not

2007
01:51:34,359 --> 01:51:43,299
a identifier right so I think that's we

2008
01:51:41,229 --> 01:51:45,429
want to do there and in our tokenizer I

2009
01:51:43,300 --> 01:51:49,829
don't remember if we need to do an

2010
01:51:45,430 --> 01:51:49,829
uncoated string value call

2011
01:52:06,118 --> 01:52:19,058
just looking to see whether the quotes

2012
01:52:08,260 --> 01:52:20,619
are included they're not alright so this

2013
01:52:19,059 --> 01:52:22,119
should work just fine when we get that

2014
01:52:20,618 --> 01:52:26,768
because we're doing a require token on

2015
01:52:22,118 --> 01:52:30,248
that so that needs to be fixed there we

2016
01:52:26,769 --> 01:52:31,989
compile this here and so now when we

2017
01:52:30,248 --> 01:52:33,849
actually get to that block we should be

2018
01:52:31,988 --> 01:52:36,488
able to enter because there shouldn't be

2019
01:52:33,849 --> 01:52:39,639
any errors in it hopefully there we go

2020
01:52:36,488 --> 01:52:41,288
and so now when we look for the font

2021
01:52:39,639 --> 01:52:42,609
name text this should come back with a

2022
01:52:41,288 --> 01:52:43,840
new file right there shouldn't be

2023
01:52:42,609 --> 01:52:46,538
anything in it because we haven't

2024
01:52:43,840 --> 01:52:48,069
processed this before so if I look at

2025
01:52:46,538 --> 01:52:50,018
font source file it should have nothing

2026
01:52:48,069 --> 01:52:53,139
right these should all be you know

2027
01:52:50,019 --> 01:52:56,829
nothing and they are and it should just

2028
01:52:53,139 --> 01:52:58,929
have the base name liberation mono when

2029
01:52:56,828 --> 01:53:00,038
we start moving through here we should

2030
01:52:58,929 --> 01:53:03,340
get the hundred for the glyph count

2031
01:53:00,038 --> 01:53:07,179
right that was the thing that we have

2032
01:53:03,340 --> 01:53:09,670
there we allocate our storage here that

2033
01:53:07,179 --> 01:53:10,179
we're gonna be using for the font data

2034
01:53:09,670 --> 01:53:12,578
itself

2035
01:53:10,179 --> 01:53:13,868
we initialize all this stuff to be zero

2036
01:53:12,578 --> 01:53:16,599
because we're going to be pulling that

2037
01:53:13,868 --> 01:53:18,279
out as we go the first thing we see

2038
01:53:16,599 --> 01:53:20,708
should be the ascender height so we

2039
01:53:18,279 --> 01:53:22,618
should grab that and then the descender

2040
01:53:20,708 --> 01:53:24,670
height and then the external letting

2041
01:53:22,618 --> 01:53:26,380
whether those are all good or not I

2042
01:53:24,670 --> 01:53:29,069
don't know so let's take a look and see

2043
01:53:26,380 --> 01:53:29,069
if they make sense

2044
01:53:36,729 --> 01:53:42,679
the external letting is possibly just

2045
01:53:40,279 --> 01:53:45,319
the value of these two plus so that may

2046
01:53:42,680 --> 01:53:46,940
be correct I don't actually remember

2047
01:53:45,319 --> 01:53:48,829
what that values to be but I think it

2048
01:53:46,939 --> 01:53:53,239
might be the addition of those so

2049
01:53:48,829 --> 01:53:55,010
ignoring that looks fine and then we

2050
01:53:53,239 --> 01:53:57,050
should read a glyph so reading the

2051
01:53:55,010 --> 01:54:00,369
glyphs in here let's see what we get if

2052
01:53:57,050 --> 01:54:04,460
these all make sense which Cliffton

2053
01:54:00,369 --> 01:54:06,559
glyph index

2054
01:54:04,460 --> 01:54:10,029
well cliff index zero is not going to be

2055
01:54:06,560 --> 01:54:10,030
particularly interesting right

2056
01:54:18,960 --> 01:54:25,109
that doesn't make a whole lot of sense

2057
01:54:22,719 --> 01:54:25,109
does it

2058
01:54:30,719 --> 01:54:40,920
because that should be this what do I

2059
01:54:34,409 --> 01:54:45,710
miss a token filename oh what the wrong

2060
01:54:40,920 --> 01:54:45,710
thing it's this value that's correct

2061
01:54:46,310 --> 01:54:52,289
alright so set a line point blah blah

2062
01:54:49,800 --> 01:54:54,480
blah true 1.0 so that all looks like

2063
01:54:52,289 --> 01:54:56,430
it's gonna go well let's let's look at

2064
01:54:54,479 --> 01:54:57,448
what the values that that's that are

2065
01:54:56,430 --> 01:55:00,090
getting pass in hard to make sure

2066
01:54:57,448 --> 01:55:07,649
they're reasonable good point a line X

2067
01:55:00,090 --> 01:55:11,750
the line y 32 and 0 is that actually

2068
01:55:07,649 --> 01:55:15,920
what's in here no

2069
01:55:11,750 --> 01:55:21,479
so that parsing looks kind of broken oh

2070
01:55:15,920 --> 01:55:23,430
and you can see why so we weren't using

2071
01:55:21,479 --> 01:55:28,409
the brackets so this is actually an

2072
01:55:23,430 --> 01:55:32,810
error scenario here and we will end up

2073
01:55:28,409 --> 01:55:32,809
erroring out so let's fix that

2074
01:55:46,819 --> 01:55:53,009
so now we should be grabbing all of that

2075
01:55:49,770 --> 01:55:56,610
correctly we might also I suppose want

2076
01:55:53,010 --> 01:56:00,300
to double-check that by the time we get

2077
01:55:56,609 --> 01:56:03,238
down here the parsing like don't bother

2078
01:56:00,300 --> 01:56:07,590
doing any of this if the parser was not

2079
01:56:03,238 --> 01:56:09,869
working because we might just end up

2080
01:56:07,590 --> 01:56:11,909
loading some garbage file and you know

2081
01:56:09,869 --> 01:56:13,948
making a mess of things

2082
01:56:11,908 --> 01:56:15,269
or crashing unnecessarily so we'll just

2083
01:56:13,948 --> 01:56:19,519
do a check there to make sure that we

2084
01:56:15,270 --> 01:56:22,830
don't like go off on some wild tangent

2085
01:56:19,520 --> 01:56:25,710
all right so if we now jump down into

2086
01:56:22,829 --> 01:56:28,109
there we grab this stuff out I'm hoping

2087
01:56:25,710 --> 01:56:30,359
that I'll see some more sensible

2088
01:56:28,109 --> 01:56:34,349
information here but line-x still looks

2089
01:56:30,359 --> 01:56:37,380
wrong so right that that should not be 0

2090
01:56:34,350 --> 01:56:39,989
so I'm again curious as it should be

2091
01:56:37,380 --> 01:56:44,760
thirty to forty nine five nine forty

2092
01:56:39,988 --> 01:56:47,309
nine five nine right so again not sure

2093
01:56:44,760 --> 01:56:49,739
if that's a parsing bug or if that's the

2094
01:56:47,310 --> 01:56:50,760
tokenize are hitting an error it did so

2095
01:56:49,738 --> 01:56:54,479
we've still got something a little bit

2096
01:56:50,760 --> 01:57:00,650
weird wonky here we parse the glyph

2097
01:56:54,479 --> 01:57:00,649
index which comes in brackets

2098
01:57:00,948 --> 01:57:05,119
we're not parsing the brackets either

2099
01:57:05,359 --> 01:57:10,880
this little thing is kind of just busted

2100
01:57:13,039 --> 01:57:16,039
right

2101
01:57:19,460 --> 01:57:31,230
because these brackets should be around

2102
01:57:25,828 --> 01:57:35,130
the toque the glyph index right then

2103
01:57:31,229 --> 01:57:38,009
there should be in equals yeah I don't

2104
01:57:35,130 --> 01:57:39,868
know what were we doing here we were way

2105
01:57:38,010 --> 01:57:42,690
asleep at the switch then there should

2106
01:57:39,868 --> 01:57:46,649
be an equal sign right then there should

2107
01:57:42,689 --> 01:57:48,839
be the string then a comma then the code

2108
01:57:46,649 --> 01:57:51,899
point then another comma then the brace

2109
01:57:48,840 --> 01:57:53,610
then the numbers and then embrace right

2110
01:57:51,899 --> 01:57:55,920
that's that's what we should have seen

2111
01:57:53,609 --> 01:57:57,598
and somehow that's like not even close

2112
01:57:55,920 --> 01:57:58,859
to what I wrote there so I guess we were

2113
01:57:57,599 --> 01:58:01,529
just kind of not paying attention

2114
01:57:58,859 --> 01:58:04,380
because there's no way I thought that

2115
01:58:01,529 --> 01:58:09,389
other thing was actually rational or

2116
01:58:04,380 --> 01:58:11,639
good right so now we've got no errors

2117
01:58:09,389 --> 01:58:15,118
which is better so now this stuff and it

2118
01:58:11,639 --> 01:58:19,770
does look correct right the glyph index

2119
01:58:15,118 --> 01:58:22,069
of one that is what that is so that

2120
01:58:19,770 --> 01:58:22,070
looks good

2121
01:58:29,619 --> 01:58:34,220
so let's take a look at this we're gonna

2122
01:58:32,569 --> 01:58:35,750
have to look into the Fah structure to

2123
01:58:34,220 --> 01:58:37,190
see if we can find this let's see if

2124
01:58:35,750 --> 01:58:40,609
we're actually loading something that

2125
01:58:37,189 --> 01:58:43,279
makes sense here because I'm not

2126
01:58:40,609 --> 01:58:44,839
actually sure if we are so here's the

2127
01:58:43,279 --> 01:58:50,059
path that we're looking which is based

2128
01:58:44,840 --> 01:58:51,619
game fast liberation mono yeah I that

2129
01:58:50,060 --> 01:58:54,230
does exist and we should be able to load

2130
01:58:51,619 --> 01:58:57,289
it so hopefully this will work it looks

2131
01:58:54,229 --> 01:58:58,939
like it did when we come out here we

2132
01:58:57,289 --> 01:59:01,609
look if the matches valid it is so we

2133
01:58:58,939 --> 01:59:05,689
try to update it using this garbage here

2134
01:59:01,609 --> 01:59:08,119
I when we come through the code to see

2135
01:59:05,689 --> 01:59:10,069
if the age of shape matches it doesn't

2136
01:59:08,119 --> 01:59:12,140
so we need to do a floor evil but we

2137
01:59:10,069 --> 01:59:14,840
already would have done that anyway we

2138
01:59:12,140 --> 01:59:20,000
load the zero file and here we go ahead

2139
01:59:14,840 --> 01:59:25,850
and parse a PNG and looks like we got an

2140
01:59:20,000 --> 01:59:28,970
underflow on this witch so this PNG is

2141
01:59:25,850 --> 01:59:32,860
also invalid externally but I because

2142
01:59:28,970 --> 01:59:32,860
it's zero size it's zero by zero

2143
01:59:40,119 --> 01:59:44,819
however even though that's an illegal

2144
01:59:42,520 --> 01:59:55,020
PNG and we probably shouldn't write one

2145
01:59:44,819 --> 01:59:57,460
I I thought our reader would work and

2146
01:59:55,020 --> 02:00:00,970
the fact that I'm wrong about that makes

2147
01:59:57,460 --> 02:00:02,409
me concerned because that means I don't

2148
02:00:00,970 --> 02:00:04,829
really understand how this thing was

2149
02:00:02,409 --> 02:00:04,829
working

2150
02:00:15,300 --> 02:00:21,960
so maybe it's actually the case that we

2151
02:00:18,479 --> 02:00:24,629
have an incorrect it could be that we

2152
02:00:21,960 --> 02:00:27,630
don't right out be final correctly when

2153
02:00:24,630 --> 02:00:30,090
we do this export that's entirely

2154
02:00:27,630 --> 02:00:32,130
possible so maybe we should look at that

2155
02:00:30,090 --> 02:00:34,590
because I would like it to work even

2156
02:00:32,130 --> 02:00:37,260
though technically so technically there

2157
02:00:34,590 --> 02:00:43,860
is no way to produce a valid PNG with

2158
02:00:37,260 --> 02:00:45,539
zero by zero as the dimensions according

2159
02:00:43,859 --> 02:00:46,699
to the spec you can't you're not allowed

2160
02:00:45,539 --> 02:00:51,779
to do that

2161
02:00:46,699 --> 02:00:53,429
so you know maybe we shouldn't really do

2162
02:00:51,779 --> 02:00:55,349
this we should just not have a file

2163
02:00:53,430 --> 02:00:57,570
there if there's no like don't export

2164
02:00:55,350 --> 02:00:59,280
the code point if there's no information

2165
02:00:57,569 --> 02:01:01,619
but I just want to make sure this works

2166
02:00:59,279 --> 02:01:04,199
so I'm gonna try and make it work first

2167
02:01:01,619 --> 02:01:10,649
and then we can also go in and not

2168
02:01:04,199 --> 02:01:19,199
export it later as a separate pass so if

2169
02:01:10,649 --> 02:01:23,279
you look here you can sort of see what

2170
02:01:19,199 --> 02:01:26,760
would happen if the chunk count just

2171
02:01:23,279 --> 02:01:35,369
ends up zero which is what would happen

2172
02:01:26,760 --> 02:01:38,460
right because the total length is just 0

2173
02:01:35,369 --> 02:01:44,460
plus 1 now 0 times 4 plus 1 times 0

2174
02:01:38,460 --> 02:01:49,039
which is 0 then all the rest of this

2175
02:01:44,460 --> 02:01:49,039
stuff will just zero out right

2176
02:01:52,699 --> 02:01:59,250
so I guess what we have to do here is

2177
02:01:55,229 --> 02:02:05,969
say if chunk count equals zero chunk

2178
02:01:59,250 --> 02:02:10,460
count equals one when we come down

2179
02:02:05,970 --> 02:02:10,460
through this code and we do this loop

2180
02:02:12,140 --> 02:02:18,420
this should just not trigger these

2181
02:02:15,449 --> 02:02:23,789
should all be zero and so that should

2182
02:02:18,420 --> 02:02:27,720
maybe be fine right that's my story for

2183
02:02:23,789 --> 02:02:32,489
now let's go ahead and run the font

2184
02:02:27,720 --> 02:02:34,710
generator thingy and I guess I can just

2185
02:02:32,489 --> 02:02:36,779
make this generate the fonts directly

2186
02:02:34,710 --> 02:02:41,760
into their location so that would be

2187
02:02:36,779 --> 02:02:45,719
handmade sources based game fonts right

2188
02:02:41,760 --> 02:02:48,360
now I don't know like I said in theory I

2189
02:02:45,720 --> 02:02:54,150
think this will still be busted

2190
02:02:48,359 --> 02:03:01,250
meaning 32 also I guess these are by

2191
02:02:54,149 --> 02:03:01,250
code point not by glyph number which I

2192
02:03:01,670 --> 02:03:09,029
guess is the right thing to do anyway

2193
02:03:05,899 --> 02:03:11,369
let's take a look if the if that helps

2194
02:03:09,029 --> 02:03:14,369
at all so I think that works very place

2195
02:03:11,369 --> 02:03:17,220
where Tim W handmade sources based game

2196
02:03:14,369 --> 02:03:18,630
fonts so all I wanted to do was update

2197
02:03:17,220 --> 02:03:21,380
the PNG is there let me just make sure

2198
02:03:18,630 --> 02:03:23,550
that that that actually did do that so

2199
02:03:21,380 --> 02:03:26,760
it was modified one a minute ago that's

2200
02:03:23,550 --> 02:03:29,869
what I want and now let me let me step

2201
02:03:26,760 --> 02:03:29,869
through that code one more time

2202
02:03:43,689 --> 02:03:52,039
so let's try that so now that time we

2203
02:03:48,649 --> 02:03:57,379
can parse the PNG and it should come

2204
02:03:52,039 --> 02:04:00,140
back as a zero by zero and it does we'll

2205
02:03:57,380 --> 02:04:01,250
import it and we'll keep running let's

2206
02:04:00,140 --> 02:04:17,329
see what happens when we get one that

2207
02:04:01,250 --> 02:04:19,130
actually has data in it seems good so

2208
02:04:17,329 --> 02:04:21,649
that will keep on running for a while

2209
02:04:19,130 --> 02:04:25,000
pulling in bitmaps and then at the very

2210
02:04:21,649 --> 02:04:28,219
end we're hoping we get here

2211
02:04:25,000 --> 02:04:30,140
no parse errors that's great

2212
02:04:28,220 --> 02:04:32,090
so that means in theory we also read the

2213
02:04:30,140 --> 02:04:36,110
horizontal advance table properly in

2214
02:04:32,090 --> 02:04:38,510
theory so then we go ahead and say look

2215
02:04:36,109 --> 02:04:42,609
let's get the file that we want to store

2216
02:04:38,510 --> 02:04:46,340
this font itself in make that all look

2217
02:04:42,609 --> 02:04:47,689
reasonable needs full rebuild in this

2218
02:04:46,340 --> 02:04:50,380
case should obviously be true because

2219
02:04:47,689 --> 02:04:55,009
the first time we've ever seen this font

2220
02:04:50,380 --> 02:04:57,760
and it is we set the data for it which

2221
02:04:55,010 --> 02:04:57,760
leads to

2222
02:05:03,689 --> 02:05:10,860
everything looking right we update the

2223
02:05:07,809 --> 02:05:17,650
asset data and write it out for the font

2224
02:05:10,859 --> 02:05:21,819
and then I think we're done right so all

2225
02:05:17,649 --> 02:05:23,498
of that went well but then when we go to

2226
02:05:21,819 --> 02:05:31,658
actually get this font

2227
02:05:23,498 --> 02:05:34,719
it looks like the font isn't a font for

2228
02:05:31,658 --> 02:05:36,368
lack of a better statement um so we have

2229
02:05:34,719 --> 02:05:38,288
to fill out what's going on there

2230
02:05:36,368 --> 02:05:42,668
and that may be because the font

2231
02:05:38,288 --> 02:05:44,188
couldn't be found yeah so when it tried

2232
02:05:42,668 --> 02:05:47,859
to find the font it couldn't find it

2233
02:05:44,189 --> 02:05:51,849
what font is it trying to find start

2234
02:05:47,859 --> 02:05:55,509
with that it's trying to find a font

2235
02:05:51,849 --> 02:05:58,179
type debug we haven't created any

2236
02:05:55,510 --> 02:06:01,840
matches for this yet so that's probably

2237
02:05:58,179 --> 02:06:04,899
the problem um we need to specify a tags

2238
02:06:01,840 --> 02:06:09,340
array probably in there to make the font

2239
02:06:04,899 --> 02:06:10,328
actually get tagged but we also don't

2240
02:06:09,340 --> 02:06:11,739
know for setting everything else

2241
02:06:10,328 --> 02:06:13,359
properly so there's probably some more

2242
02:06:11,738 --> 02:06:14,799
work to do there as well like if you're

2243
02:06:13,359 --> 02:06:16,719
looking here I don't know that we're

2244
02:06:14,800 --> 02:06:20,409
actually over setting the font type to

2245
02:06:16,719 --> 02:06:30,399
font right in fact it doesn't look like

2246
02:06:20,408 --> 02:06:34,268
we do so when you know this stuff here

2247
02:06:30,399 --> 02:06:43,598
should get set and I don't know that we

2248
02:06:34,269 --> 02:06:51,099
ever are so like inside inside the HHA

2249
02:06:43,599 --> 02:06:54,578
itself this HH font exists inside an HHA

2250
02:06:51,099 --> 02:06:57,400
asset that a JK asset is having some of

2251
02:06:54,578 --> 02:06:59,368
its stuff get written like this but I

2252
02:06:57,399 --> 02:07:04,388
don't think we're ever setting the type

2253
02:06:59,368 --> 02:07:05,649
right we're setting the tags here and I

2254
02:07:04,389 --> 02:07:08,650
don't know if we're I'm saying the type

2255
02:07:05,649 --> 02:07:12,009
let me look inside update single asset

2256
02:07:08,649 --> 02:07:16,879
metadata to see if it ever sets the time

2257
02:07:12,010 --> 02:07:22,520
of the asset I mean so looking at

2258
02:07:16,880 --> 02:07:26,050
dot type you know I'll be honest when

2259
02:07:22,520 --> 02:07:26,050
does that ever get set for anybody

2260
02:07:45,760 --> 02:07:53,239
so what am I missing that has to get set

2261
02:07:51,130 --> 02:07:55,279
because if it doesn't get set

2262
02:07:53,238 --> 02:07:58,789
there should be assertions about what

2263
02:07:55,279 --> 02:08:03,618
the piece of data is and right so asset

2264
02:07:58,789 --> 02:08:10,880
the HHA asset information should be set

2265
02:08:03,618 --> 02:08:23,389
there I'm gonna look to see what's going

2266
02:08:10,880 --> 02:08:24,190
on not see anything actually no what I

2267
02:08:23,389 --> 02:08:28,039
could do

2268
02:08:24,189 --> 02:08:34,719
let's see where we use this stuff so if

2269
02:08:28,039 --> 02:08:34,719
I do where's my set types

2270
02:08:50,849 --> 02:08:57,610
so if I just did something like tell me

2271
02:08:53,889 --> 02:09:02,829
every place that I do type equals HHA

2272
02:08:57,609 --> 02:09:04,299
Asset fit map where is it all right so

2273
02:09:02,829 --> 02:09:07,389
here is where we're setting this

2274
02:09:04,300 --> 02:09:09,219
information this is in right image to

2275
02:09:07,389 --> 02:09:12,099
HHA so it's where this stuff gets

2276
02:09:09,219 --> 02:09:14,560
written out I'm assuming that process

2277
02:09:12,099 --> 02:09:18,310
audio import therefore also sets it that

2278
02:09:14,560 --> 02:09:19,900
way yeah there it is so we just needed

2279
02:09:18,310 --> 02:09:24,190
that to happen in the fonts and we never

2280
02:09:19,899 --> 02:09:27,579
did right so that seems pretty obvious

2281
02:09:24,189 --> 02:09:29,319
as a first step and then the other thing

2282
02:09:27,579 --> 02:09:36,309
is we need to actually tag it so I can

2283
02:09:29,319 --> 02:09:37,929
get found in the parse block code what I

2284
02:09:36,310 --> 02:09:43,710
was about to do is what exactly what I

2285
02:09:37,929 --> 02:09:50,289
do want to do right so this bit here

2286
02:09:43,710 --> 02:09:52,270
needs to be asset type so that will at

2287
02:09:50,289 --> 02:09:55,979
least mark the font as the correct type

2288
02:09:52,270 --> 02:09:55,980
which is something that we want

2289
02:10:04,448 --> 02:10:08,079
and that's all well and good but we also

2290
02:10:06,158 --> 02:10:09,638
need to be tagged presumably or it won't

2291
02:10:08,079 --> 02:10:12,639
match although it might just match by

2292
02:10:09,639 --> 02:10:14,980
default even though it's not tagged that

2293
02:10:12,639 --> 02:10:17,139
part I'm not sure about but at least now

2294
02:10:14,979 --> 02:10:19,419
it will get marked properly in theory

2295
02:10:17,139 --> 02:10:21,400
right and so then we need to actually

2296
02:10:19,420 --> 02:10:28,090
tag it with something I do want to look

2297
02:10:21,399 --> 02:10:30,879
and see I don't know well I guess yeah

2298
02:10:28,090 --> 02:10:32,469
that doesn't really matter when you're

2299
02:10:30,880 --> 02:10:33,789
looking for a font I don't know why we

2300
02:10:32,469 --> 02:10:35,198
don't restrict it only to things of the

2301
02:10:33,789 --> 02:10:37,810
font type but doesn't really matter

2302
02:10:35,198 --> 02:10:41,379
anyway so what we need here is we need

2303
02:10:37,810 --> 02:10:46,030
to be able to set the font type this way

2304
02:10:41,380 --> 02:10:50,770
and that should be pretty easy I guess

2305
02:10:46,029 --> 02:10:54,908
in handmade asset age I'm sorry in a

2306
02:10:50,770 --> 02:10:59,290
match of this in liberation mono dot H

2307
02:10:54,908 --> 02:11:02,229
we need this to be tagged with something

2308
02:10:59,289 --> 02:11:14,948
right so we need to say like you know

2309
02:11:02,229 --> 02:11:17,919
tags equals font type so we need

2310
02:11:14,948 --> 02:11:21,750
something like that it's not quite what

2311
02:11:17,920 --> 02:11:21,750
I would want to have happen

2312
02:11:28,920 --> 02:11:38,560
but we'll go with it for now that looks

2313
02:11:35,289 --> 02:11:41,158
like it worked where are we at here so

2314
02:11:38,560 --> 02:11:43,539
string-length who's who's doing this

2315
02:11:41,158 --> 02:11:51,849
it's like we've got an error problem

2316
02:11:43,539 --> 02:11:58,750
here it looks like we're parsing a

2317
02:11:51,850 --> 02:12:01,230
thought block again what is this magical

2318
02:11:58,750 --> 02:12:01,229
font block

2319
02:12:10,220 --> 02:12:29,310
where are we surfer parsing liberation

2320
02:12:16,109 --> 02:12:31,369
mono da HH key directly or when is this

2321
02:12:29,310 --> 02:12:31,370
happening

2322
02:12:36,399 --> 02:12:44,759
no it's part of the include so for some

2323
02:12:42,069 --> 02:12:44,759
reason ah

2324
02:12:49,060 --> 02:12:53,650
so the glyph count is not coming first

2325
02:12:51,909 --> 02:13:00,460
and it needs to it's required to come

2326
02:12:53,649 --> 02:13:05,139
first I forgot about that but why is

2327
02:13:00,460 --> 02:13:08,529
that an why did that create a bad error

2328
02:13:05,140 --> 02:13:12,060
message here what happened

2329
02:13:08,529 --> 02:13:19,500
we've done something bad when we went to

2330
02:13:12,060 --> 02:13:19,500
output like the rest of this information

2331
02:13:31,430 --> 02:13:35,539
well that looks like an issue right

2332
02:13:33,680 --> 02:13:39,039
there potentially oh no no it's not

2333
02:13:35,539 --> 02:13:39,039
there's 29 so that's fine

2334
02:13:46,488 --> 02:13:55,669
hmm all right well let's take a look so

2335
02:13:49,609 --> 02:13:57,049
what's this string string is just a

2336
02:13:55,670 --> 02:13:59,180
garbage pointer of course that may be

2337
02:13:57,050 --> 02:14:02,150
because it advance pass it what were we

2338
02:13:59,180 --> 02:14:10,789
looking for we were looking for this

2339
02:14:02,149 --> 02:14:13,719
temp here that's all just yeah we

2340
02:14:10,789 --> 02:14:25,399
couldn't get the argh out so it's this

2341
02:14:13,719 --> 02:14:27,230
call Oh No so I don't normally get a lot

2342
02:14:25,399 --> 02:14:28,579
of crashes in remedy I guess this latest

2343
02:14:27,229 --> 02:14:31,399
version must have had something weird

2344
02:14:28,579 --> 02:14:33,559
happening in it cuz like I used it all

2345
02:14:31,399 --> 02:14:34,609
week and never had any crashes so I

2346
02:14:33,560 --> 02:14:37,280
don't know I must be doing something

2347
02:14:34,609 --> 02:14:41,049
weird I'm sure George will know what it

2348
02:14:37,279 --> 02:14:43,789
is but let's see let me write this out

2349
02:14:41,050 --> 02:14:46,900
it's probably with something specific in

2350
02:14:43,789 --> 02:14:46,899
our PD B that's bad

2351
02:15:01,850 --> 02:15:10,650
okay so now we've got both dump files we

2352
02:15:05,130 --> 02:15:11,819
should be able to send it to him so I'm

2353
02:15:10,649 --> 02:15:13,979
not really sure what's going on with

2354
02:15:11,819 --> 02:15:16,948
that and I I'm gonna even though I know

2355
02:15:13,979 --> 02:15:19,468
what we want to do is move this I want

2356
02:15:16,948 --> 02:15:21,479
to run again and see if we can't figure

2357
02:15:19,469 --> 02:15:24,569
out what what went wrong there because

2358
02:15:21,479 --> 02:15:27,928
it shouldn't that's that error should be

2359
02:15:24,569 --> 02:15:29,789
allowed and it should print out properly

2360
02:15:27,929 --> 02:15:35,659
it shouldn't crash like that that's so

2361
02:15:29,789 --> 02:15:35,659
something's busted there so if I look at

2362
02:15:36,590 --> 02:15:41,000
what we're passing here

2363
02:15:48,380 --> 02:15:53,659
so will it crash again if I try to

2364
02:15:50,750 --> 02:15:55,430
inspect this format yeah so it's like

2365
02:15:53,659 --> 02:16:05,409
it's like you can't for some reason it

2366
02:15:55,430 --> 02:16:08,890
can't look at that it's super dangerous

2367
02:16:05,409 --> 02:16:08,889
for some reason

2368
02:16:21,929 --> 02:16:32,170
so expected percent s with match looks

2369
02:16:27,039 --> 02:16:35,398
ok right because that's you know it's

2370
02:16:32,170 --> 02:16:38,648
glyph count that's what you would expect

2371
02:16:35,398 --> 02:16:42,968
so that's getting passed down here and

2372
02:16:38,648 --> 02:16:45,579
then it's issuing the error and you know

2373
02:16:42,968 --> 02:16:48,549
presumably so ok so it's just the name

2374
02:16:45,579 --> 02:16:50,289
format doesn't matter with like I don't

2375
02:16:48,549 --> 02:16:54,308
know if it's because formats also a

2376
02:16:50,290 --> 02:16:57,939
function or something I'm not sure but

2377
02:16:54,308 --> 02:17:01,090
it just does not want to inspect that so

2378
02:16:57,939 --> 02:17:07,148
I don't know what would be wrong with

2379
02:17:01,090 --> 02:17:11,110
that because it looks looks right to me

2380
02:17:07,148 --> 02:17:14,459
and I'm not sure what it's having a

2381
02:17:11,110 --> 02:17:14,460
problem with there

2382
02:17:22,709 --> 02:17:28,169
calling a crowd filled with all right so

2383
02:17:25,800 --> 02:17:30,239
the format is like just a percent lower

2384
02:17:28,170 --> 02:17:33,210
case s is what's coming down is format

2385
02:17:30,239 --> 02:17:35,610
and the mashed strings so then when we

2386
02:17:33,209 --> 02:17:39,149
get to here we're getting them at that

2387
02:17:35,610 --> 02:17:42,301
percent s and the arglist for that which

2388
02:17:39,149 --> 02:17:43,591
is one argh list we're then going into

2389
02:17:42,300 --> 02:17:48,300
out FR glist

2390
02:17:43,591 --> 02:17:51,591
and so this format is just a percent s

2391
02:17:48,300 --> 02:17:56,341
for mastering and the arglist is one

2392
02:17:51,591 --> 02:18:04,050
care star right which is exactly I

2393
02:17:56,341 --> 02:18:11,270
didn't mean to do that I think I like

2394
02:18:04,050 --> 02:18:13,619
that better yeah okay so I think that's

2395
02:18:11,270 --> 02:18:14,310
like I don't know why that would be

2396
02:18:13,620 --> 02:18:16,140
weird

2397
02:18:14,309 --> 02:18:19,260
let me double check the format string

2398
02:18:16,139 --> 02:18:25,010
and make sure I'm not crazy I mean it's

2399
02:18:19,260 --> 02:18:25,010
just a percent s and I yeah so

2400
02:18:32,940 --> 02:18:35,899
although

2401
02:18:41,309 --> 02:18:47,340
I see the bug we have had this bug

2402
02:18:44,610 --> 02:18:51,960
before we're kind of fired for having

2403
02:18:47,340 --> 02:18:54,210
the same bug twice so the problem here

2404
02:18:51,959 --> 02:18:56,189
is that it's looking at var glist which

2405
02:18:54,209 --> 02:18:57,269
happens to it it's not actually matching

2406
02:18:56,190 --> 02:18:59,130
the type because it happens to be a

2407
02:18:57,270 --> 02:19:01,500
nonsense like pound defying thing the C

2408
02:18:59,129 --> 02:19:03,119
runtime library does so really we need

2409
02:19:01,500 --> 02:19:04,590
this to be error arglist

2410
02:19:03,120 --> 02:19:05,820
and we need to do this so that it

2411
02:19:04,590 --> 02:19:09,479
because it was picking the wrong

2412
02:19:05,819 --> 02:19:12,809
overloaded function so that's all that

2413
02:19:09,479 --> 02:19:17,010
was happening there right so that was

2414
02:19:12,809 --> 02:19:23,250
just a overloading nonsense we should be

2415
02:19:17,010 --> 02:19:24,149
fine now okay yeah I don't know why but

2416
02:19:23,250 --> 02:19:27,600
we just have to make sure those are

2417
02:19:24,149 --> 02:19:29,609
differentiated okay so this time it

2418
02:19:27,600 --> 02:19:31,470
should actually just run properly but

2419
02:19:29,610 --> 02:19:33,950
produce the errors and then get back to

2420
02:19:31,469 --> 02:19:38,609
our original like we can't find the font

2421
02:19:33,950 --> 02:19:40,860
and so I think I can now safely say that

2422
02:19:38,610 --> 02:19:42,780
since we fixed that thing if I go to

2423
02:19:40,860 --> 02:19:44,790
liberation mind if I add the tags below

2424
02:19:42,780 --> 02:19:48,300
the gift count now that should be

2425
02:19:44,790 --> 02:19:49,440
allowed and so now we should tag them

2426
02:19:48,299 --> 02:19:51,750
but it looks like we're still not

2427
02:19:49,440 --> 02:19:54,060
finding them I know there could be a lot

2428
02:19:51,750 --> 02:19:55,590
of reasons for that and so I probably

2429
02:19:54,060 --> 02:19:58,920
will save that debugging for tomorrow

2430
02:19:55,590 --> 02:20:01,560
but I think we're good to go now in

2431
02:19:58,920 --> 02:20:04,890
basically everything except maybe how

2432
02:20:01,560 --> 02:20:08,129
those tags are getting set up there I

2433
02:20:04,890 --> 02:20:10,170
want to look just real quick though when

2434
02:20:08,129 --> 02:20:21,479
we do do the initialization for the

2435
02:20:10,170 --> 02:20:24,390
fonts I want to look at this call just

2436
02:20:21,479 --> 02:20:27,989
real quick so when we do get best match

2437
02:20:24,390 --> 02:20:30,690
asset with a particular basic category

2438
02:20:27,989 --> 02:20:33,181
I'm guessing the problem is just yeah

2439
02:20:30,690 --> 02:20:36,540
the problem is that basic category never

2440
02:20:33,181 --> 02:20:37,950
got tagged so maybe I won't save all

2441
02:20:36,540 --> 02:20:43,170
that a bug from around me just fix that

2442
02:20:37,950 --> 02:20:45,811
one minor issue first which is that the

2443
02:20:43,170 --> 02:20:48,601
basic category for this thing never got

2444
02:20:45,810 --> 02:20:51,750
set so when we're doing those append

2445
02:20:48,601 --> 02:20:53,000
tags here there's the pen tags thing

2446
02:20:51,750 --> 02:20:57,750
that comes in here

2447
02:20:53,000 --> 02:21:00,719
this thing we actually do need to write

2448
02:20:57,750 --> 02:21:03,510
out the tags it does need to have its

2449
02:21:00,719 --> 02:21:06,239
basic typeset and it's not happening I

2450
02:21:03,510 --> 02:21:08,100
thought this would do it but it's not

2451
02:21:06,239 --> 02:21:11,899
doing it and I'm guessing that the

2452
02:21:08,100 --> 02:21:21,750
reason it's not doing it is because that

2453
02:21:11,899 --> 02:21:34,020
like doesn't this do that I guess it

2454
02:21:21,750 --> 02:21:36,450
doesn't do it it's this right that's not

2455
02:21:34,020 --> 02:21:38,970
happening and also it's not really

2456
02:21:36,450 --> 02:21:41,909
getting set properly so so we do need to

2457
02:21:38,969 --> 02:21:45,899
do that in here before we export this

2458
02:21:41,909 --> 02:21:48,180
thing we want to use one of these so I'm

2459
02:21:45,899 --> 02:21:54,989
gonna pull this down the append tags and

2460
02:21:48,180 --> 02:21:57,090
say that this because this thing where

2461
02:21:54,989 --> 02:21:59,280
we're we're we're importing the bitmap

2462
02:21:57,090 --> 02:22:00,989
we never want to have tags but this

2463
02:21:59,280 --> 02:22:06,409
asset we do actually want to have tags

2464
02:22:00,989 --> 02:22:10,969
so here we want to do like begin tag

2465
02:22:06,409 --> 02:22:10,969
builder nonsense this thing

2466
02:22:17,640 --> 02:22:29,459
so we want this thing to build the grid

2467
02:22:23,049 --> 02:22:29,459
tag in question for our append acts and

2468
02:22:34,079 --> 02:22:39,640
this tag array here with the first and

2469
02:22:37,329 --> 02:22:41,739
last thing I don't know what import grid

2470
02:22:39,640 --> 02:22:44,079
tag really has to do with it it's just

2471
02:22:41,739 --> 02:22:47,110
oh it's that right so we just want this

2472
02:22:44,079 --> 02:22:51,390
to happen and then we want our appendage

2473
02:22:47,110 --> 02:22:53,829
to be combined tags tags like that right

2474
02:22:51,390 --> 02:22:56,350
so this will give it the tag that says

2475
02:22:53,829 --> 02:23:02,560
what it's what's base type is then

2476
02:22:56,351 --> 02:23:03,159
what's just what it needs to be found we

2477
02:23:02,560 --> 02:23:15,129
know

2478
02:23:03,159 --> 02:23:24,069
oh and that also ok so that also needs

2479
02:23:15,129 --> 02:23:26,739
to be there hmm so I guess I really want

2480
02:23:24,069 --> 02:23:32,739
it both ways right I want this thing to

2481
02:23:26,739 --> 02:23:35,319
have null tags and I do want to track

2482
02:23:32,739 --> 02:23:39,060
the append tags because the parser wants

2483
02:23:35,319 --> 02:23:46,360
to add things to that right so I do want

2484
02:23:39,060 --> 02:23:49,289
this and then the template tags I guess

2485
02:23:46,360 --> 02:23:52,290
is the place that I want this to go

2486
02:23:49,290 --> 02:23:52,290
right

2487
02:23:58,909 --> 02:24:19,880
so I think I really want that as weird

2488
02:24:02,251 --> 02:24:19,880
as it sounds um import tag array fact

2489
02:24:20,780 --> 02:24:28,801
it's just that so I think that's what I

2490
02:24:25,050 --> 02:24:30,689
want because that weight properly gets

2491
02:24:28,800 --> 02:24:35,699
marked as a font which is what I

2492
02:24:30,690 --> 02:24:37,681
actually want I think but we'll find out

2493
02:24:35,700 --> 02:24:38,280
this code could stand for some nice

2494
02:24:37,681 --> 02:24:39,961
clean up

2495
02:24:38,280 --> 02:24:44,641
there's too many moving pieces that

2496
02:24:39,960 --> 02:24:48,210
don't really need to be there no it

2497
02:24:44,640 --> 02:24:50,581
still didn't quite work so I'm gonna

2498
02:24:48,210 --> 02:24:52,859
save that debugging for tomorrow because

2499
02:24:50,581 --> 02:24:56,729
this is the part now that needs to get

2500
02:24:52,860 --> 02:24:58,771
set up properly and when this update

2501
02:24:56,729 --> 02:25:03,029
single asset metadata call gets called

2502
02:24:58,771 --> 02:25:05,251
right that should call set data type

2503
02:25:03,030 --> 02:25:08,360
there so the import grid tags tags here

2504
02:25:05,251 --> 02:25:08,360
that get that are getting passed

2505
02:25:13,930 --> 02:25:18,190
it looks like extra tags for the import

2506
02:25:16,659 --> 02:25:25,239
grid tag is actually where I wanted that

2507
02:25:18,190 --> 02:25:26,860
even so too much tags I think part of

2508
02:25:25,239 --> 02:25:28,899
the problem is these tags just turn out

2509
02:25:26,860 --> 02:25:31,329
of control we need to like make a

2510
02:25:28,899 --> 02:25:35,109
cleaner way of handling tags and writing

2511
02:25:31,329 --> 02:25:39,430
them right which wouldn't be hard okay

2512
02:25:35,110 --> 02:25:43,780
so let's see if that got it mashed

2513
02:25:39,430 --> 02:25:45,239
properly no so now but something like

2514
02:25:43,780 --> 02:25:48,851
that should be that should be working

2515
02:25:45,239 --> 02:25:50,351
and and we should get it I'm sorry I'm

2516
02:25:48,851 --> 02:25:53,079
obsessing here I said I was going to

2517
02:25:50,351 --> 02:25:58,950
wait till tomorrow but I keep not doing

2518
02:25:53,079 --> 02:25:58,950
that if I do parse our font block here

2519
02:26:08,829 --> 02:26:29,129
yes so that's the problem is that's

2520
02:26:10,809 --> 02:26:29,129
actually not getting entered so why not

2521
02:26:43,879 --> 02:26:49,219
so there is an error

2522
02:26:46,049 --> 02:26:49,219
what's the air

2523
02:27:06,170 --> 02:27:10,988
so that file as we expect

2524
02:27:11,228 --> 02:27:29,898
unrecognized tagname unsurprising here

2525
02:27:26,478 --> 02:27:34,728
we go and so now we are creating that

2526
02:27:29,898 --> 02:27:39,619
font tag this should now actually add

2527
02:27:34,728 --> 02:27:41,059
that font type so hopefully yeah there

2528
02:27:39,620 --> 02:27:47,449
we go

2529
02:27:41,059 --> 02:27:49,579
hopefully we now have a font so whether

2530
02:27:47,449 --> 02:27:51,439
the font works or not it doesn't look

2531
02:27:49,579 --> 02:27:56,420
like it does because we should be seeing

2532
02:27:51,439 --> 02:28:00,829
some something up here right and so it

2533
02:27:56,420 --> 02:28:03,228
looks like we're not it looks like we're

2534
02:28:00,829 --> 02:28:04,969
not properly getting that font but at

2535
02:28:03,228 --> 02:28:07,519
least we're closer than we were before

2536
02:28:04,969 --> 02:28:09,408
right and it looks like here right

2537
02:28:07,520 --> 02:28:12,020
because the the font this is probably

2538
02:28:09,408 --> 02:28:13,728
the font code right and it's getting

2539
02:28:12,020 --> 02:28:16,579
like you know probably garbage IDs or

2540
02:28:13,728 --> 02:28:24,228
something yeah it's probably getting

2541
02:28:16,579 --> 02:28:28,459
like weird yeah it's getting like out of

2542
02:28:24,228 --> 02:28:35,209
range IDs so it's just it's just a

2543
02:28:28,459 --> 02:28:38,688
little bit forked looking at yeah we're

2544
02:28:35,209 --> 02:28:43,039
probably like putting the wrong data

2545
02:28:38,689 --> 02:28:47,300
into like the you know the the glyph map

2546
02:28:43,040 --> 02:28:50,689
or whatever so like for example inside

2547
02:28:47,299 --> 02:28:55,728
the parse font block if you look at

2548
02:28:50,689 --> 02:28:58,309
what's going on in here like this right

2549
02:28:55,728 --> 02:29:02,260
a set data is probably like writing

2550
02:28:58,309 --> 02:29:05,209
stuff out incorrectly you can give me

2551
02:29:02,260 --> 02:29:08,050
like and maybe we're setting this stuff

2552
02:29:05,209 --> 02:29:08,049
wrong who knows

2553
02:29:10,430 --> 02:29:14,500
it's code points Oh

2554
02:29:20,290 --> 02:29:26,960
is this okay so this is getting set here

2555
02:29:24,430 --> 02:29:29,720
so yeah the unicode code point gets set

2556
02:29:26,959 --> 02:29:39,289
and then the bitmap ID ostensively gets

2557
02:29:29,719 --> 02:29:46,489
set ah actually that though needs to

2558
02:29:39,290 --> 02:29:53,930
happen regardless so meaning this has to

2559
02:29:46,489 --> 02:29:58,750
happen always because even if you don't

2560
02:29:53,930 --> 02:29:58,750
import the thing you still need to set

2561
02:29:58,989 --> 02:30:05,389
the bitmap ID for the font in case it

2562
02:30:01,879 --> 02:30:07,489
gets written out right so that actually

2563
02:30:05,389 --> 02:30:09,049
does always need to be there and it

2564
02:30:07,489 --> 02:30:20,209
needs to be an error if for some reason

2565
02:30:09,049 --> 02:30:22,819
you can't find a font with and hopefully

2566
02:30:20,209 --> 02:30:24,500
that already would have been an error so

2567
02:30:22,819 --> 02:30:26,149
you know we it's really a duplicate

2568
02:30:24,500 --> 02:30:32,540
error but just in case you know we

2569
02:30:26,149 --> 02:30:38,359
double market that seems better possibly

2570
02:30:32,540 --> 02:30:39,980
maybe and I don't know like that's a

2571
02:30:38,360 --> 02:30:42,739
change to the code which we don't really

2572
02:30:39,979 --> 02:30:43,909
support right now in terms of diffing so

2573
02:30:42,739 --> 02:30:45,199
we are at a bit of a disadvantage

2574
02:30:43,909 --> 02:30:46,879
because I don't know if that will

2575
02:30:45,200 --> 02:30:48,110
actually ever I don't know if that will

2576
02:30:46,879 --> 02:30:49,969
actually update our font

2577
02:30:48,110 --> 02:30:52,521
it probably won't right so we're gonna

2578
02:30:49,969 --> 02:30:56,619
hit this either way so let me go ahead

2579
02:30:52,521 --> 02:30:59,271
and set a breakpoint in parse from block

2580
02:30:56,620 --> 02:31:03,590
because I don't think it will actually

2581
02:30:59,271 --> 02:31:06,311
properly come back down here we'll see

2582
02:31:03,590 --> 02:31:06,310
so

2583
02:31:10,148 --> 02:31:18,760
Oh interesting I wonder why that is

2584
02:31:16,290 --> 02:31:20,170
so that seems like a bug - I really have

2585
02:31:18,760 --> 02:31:22,630
to stop debugging sorry you know how I

2586
02:31:20,170 --> 02:31:25,059
am when I start I just like want to fix

2587
02:31:22,629 --> 02:31:27,009
the problems so it's a little bit

2588
02:31:25,059 --> 02:31:31,539
difficult but so you know this right

2589
02:31:27,010 --> 02:31:34,329
here why are we not getting our font is

2590
02:31:31,540 --> 02:31:48,780
how what does this stuff look like look

2591
02:31:34,329 --> 02:31:48,780
valid looks pretty good

2592
02:31:56,129 --> 02:32:07,738
5:08 that seems like right where it

2593
02:31:59,590 --> 02:32:07,738
should be see what the last one says

2594
02:32:16,840 --> 02:32:32,750
5:02 looks really find me a chit shade

2595
02:32:28,489 --> 02:32:38,329
that data upset because we did a reserve

2596
02:32:32,750 --> 02:32:45,969
on it with the data size that seems

2597
02:32:38,329 --> 02:32:45,969
right does it not

2598
02:32:49,280 --> 02:32:59,050
I don't know it seems pretty good what's

2599
02:32:53,899 --> 02:32:59,049
the code point size 800

2600
02:33:03,068 --> 02:33:06,510
that's exactly what I would expect

2601
02:33:10,689 --> 02:33:15,680
well in for a penny in for a pound what

2602
02:33:14,120 --> 02:33:21,770
happens when we actually asked to load

2603
02:33:15,680 --> 02:33:25,040
this font right so here's the font asset

2604
02:33:21,770 --> 02:33:26,630
number 507 you know here we go trying to

2605
02:33:25,040 --> 02:33:33,880
figure out how big we're supposed to

2606
02:33:26,629 --> 02:33:44,599
loaded up it's 800 just like we thought

2607
02:33:33,879 --> 02:33:48,589
so off we go it read it okay so what's

2608
02:33:44,600 --> 02:33:51,439
the deal if we actually look at font

2609
02:33:48,590 --> 02:33:59,770
glyphs do we get the same stuff we were

2610
02:33:51,439 --> 02:33:59,770
just looking at sure it looks like it

2611
02:34:10,010 --> 02:34:13,790
so what's the problem

2612
02:34:15,228 --> 02:34:26,069
alright so I guess we fixed it now we

2613
02:34:20,610 --> 02:34:35,460
didn't so what's the problem how are we

2614
02:34:26,069 --> 02:34:40,709
getting this this weird garbage how are

2615
02:34:35,459 --> 02:34:44,909
we getting like six six to six back for

2616
02:34:40,709 --> 02:34:45,929
this thing but that doesn't really make

2617
02:34:44,909 --> 02:34:49,439
a lot of sense does it

2618
02:34:45,930 --> 02:34:53,760
we've got the font and we know what code

2619
02:34:49,439 --> 02:34:56,340
point we're looking for so if I open up

2620
02:34:53,760 --> 02:34:59,520
the font table and I look at the unicode

2621
02:34:56,340 --> 02:35:05,250
mapping right I should be able to do

2622
02:34:59,520 --> 02:35:11,270
like font Unicode map and then look at

2623
02:35:05,250 --> 02:35:21,270
code point 85 so it says to look at 54

2624
02:35:11,270 --> 02:35:26,760
so we'll look at 54 it says bitmap ID

2625
02:35:21,270 --> 02:35:29,659
for 57 so how did it return

2626
02:35:26,760 --> 02:35:29,659
626

2627
02:35:35,250 --> 02:35:42,819
there's something I don't understand I

2628
02:35:39,840 --> 02:35:46,180
probably forgot up that we did about the

2629
02:35:42,819 --> 02:35:54,729
fonts and now it came back to bite me so

2630
02:35:46,180 --> 02:35:58,870
let's find out what is happening get

2631
02:35:54,729 --> 02:36:02,889
glyph from code-point this is exactly

2632
02:35:58,870 --> 02:36:04,540
what I just did right I mean that that

2633
02:36:02,889 --> 02:36:07,629
is what I did for Coke by the way what

2634
02:36:04,540 --> 02:36:10,750
code point are we looking for 85 hey

2635
02:36:07,629 --> 02:36:17,369
great so looking at the Unicode map it

2636
02:36:10,750 --> 02:36:20,469
should return me the value 54 right yes

2637
02:36:17,370 --> 02:36:24,900
then when we do get bitmap for glyph I

2638
02:36:20,469 --> 02:36:24,899
should say okay

2639
02:36:40,129 --> 02:36:47,769
I see

2640
02:37:01,059 --> 02:37:10,299
I will now explain what's happening and

2641
02:37:07,049 --> 02:37:18,789
I guess it's actually quite easy for us

2642
02:37:10,299 --> 02:37:21,939
to fix and I guess it's all fine because

2643
02:37:18,790 --> 02:37:25,180
we use a side IDs at runtime that are

2644
02:37:21,940 --> 02:37:29,110
merged meaning there is only one index

2645
02:37:25,180 --> 02:37:31,329
that is used to access an asset and so

2646
02:37:29,110 --> 02:37:34,620
even if there were many HHA files that

2647
02:37:31,329 --> 02:37:37,659
were all loaded into the game at launch

2648
02:37:34,620 --> 02:37:40,660
you can still just use one integer to

2649
02:37:37,659 --> 02:37:41,619
refer to an asset there's only two ways

2650
02:37:40,659 --> 02:37:42,219
you can really make a system like that

2651
02:37:41,620 --> 02:37:44,950
work

2652
02:37:42,219 --> 02:37:46,319
one is to pre allocate all of your asset

2653
02:37:44,950 --> 02:37:49,300
ID is to make sure they don't conflict

2654
02:37:46,319 --> 02:37:52,989
such as what we did on the witness for

2655
02:37:49,299 --> 02:37:54,849
example but another way which the way we

2656
02:37:52,989 --> 02:37:57,069
use here is that at runtime when you

2657
02:37:54,850 --> 02:37:59,260
load you have a rebasing value that

2658
02:37:57,069 --> 02:38:02,909
anyone who needs to refer to something

2659
02:37:59,260 --> 02:38:07,479
by an ID offset actually knows to use

2660
02:38:02,909 --> 02:38:09,729
the part in the when you loaded this HHA

2661
02:38:07,479 --> 02:38:11,079
how far did it have to get moved up to

2662
02:38:09,729 --> 02:38:14,139
sure that didn't conflic with any other

2663
02:38:11,079 --> 02:38:15,819
hhas then you use that offset since we

2664
02:38:14,139 --> 02:38:17,409
don't really ever do that other than

2665
02:38:15,819 --> 02:38:19,149
with fonts because of the only things

2666
02:38:17,409 --> 02:38:25,059
that are actual assets that refer to

2667
02:38:19,149 --> 02:38:29,020
other assets we forgot to actually apply

2668
02:38:25,059 --> 02:38:33,129
that difference so in here where we set

2669
02:38:29,020 --> 02:38:37,500
this bitmap ID the actual source index

2670
02:38:33,129 --> 02:38:42,639
in question here that says which asset

2671
02:38:37,500 --> 02:38:45,610
we used when we imported this thing that

2672
02:38:42,639 --> 02:38:48,549
needs to be slid back by whatever this

2673
02:38:45,610 --> 02:38:51,069
asset source file actually had its base

2674
02:38:48,549 --> 02:38:53,199
value be because that value is going to

2675
02:38:51,069 --> 02:38:56,350
get added back to it when we go to

2676
02:38:53,200 --> 02:38:57,820
expand the font right because the font

2677
02:38:56,350 --> 02:39:01,569
when it looks the bibbity it's gonna

2678
02:38:57,819 --> 02:39:07,379
rebase that value by however much get

2679
02:39:01,569 --> 02:39:07,379
thought the file was slid up so in that

2680
02:39:08,629 --> 02:39:18,060
in that asset here this asset based

2681
02:39:14,549 --> 02:39:21,929
value needs to be subtracted away right

2682
02:39:18,060 --> 02:39:27,029
so we need to use this asset file the

2683
02:39:21,930 --> 02:39:29,370
actual destination asset file which we

2684
02:39:27,030 --> 02:39:32,100
know but we need to actually know use

2685
02:39:29,370 --> 02:39:35,730
that to subtract off the value here

2686
02:39:32,100 --> 02:39:38,250
right and so what I'd like to do is say

2687
02:39:35,729 --> 02:39:39,959
okay wherever we were going to write

2688
02:39:38,250 --> 02:39:42,840
this thing and you know what I might do

2689
02:39:39,959 --> 02:39:45,659
to I might say we could do this as a

2690
02:39:42,840 --> 02:39:48,989
separate pass because I think that might

2691
02:39:45,659 --> 02:39:51,180
be a little bit safer so once we get

2692
02:39:48,989 --> 02:39:52,680
down in here and we say look what are we

2693
02:39:51,180 --> 02:39:55,229
writing to you we've got this desk file

2694
02:39:52,680 --> 02:40:08,639
index right so now I should be able to

2695
02:39:55,229 --> 02:40:22,170
go and say get or asset file no it's not

2696
02:40:08,639 --> 02:40:23,939
that it is there it is so what I need to

2697
02:40:22,170 --> 02:40:25,771
be able to do here is say look give me

2698
02:40:23,940 --> 02:40:27,540
the asset file back oh and it looks like

2699
02:40:25,771 --> 02:40:29,820
I'm already doing that right so here we

2700
02:40:27,540 --> 02:40:33,570
have the asset file and then I need to

2701
02:40:29,819 --> 02:40:37,949
run over my array here and rebase these

2702
02:40:33,569 --> 02:40:42,270
things so the asset base needs to get

2703
02:40:37,950 --> 02:40:46,040
subtracted from that glyph that code

2704
02:40:42,271 --> 02:40:46,040
point bitmap in index right

2705
02:40:52,100 --> 02:41:01,168
so when we actually do when we actually

2706
02:40:57,088 --> 02:41:05,158
do this right I need to make that value

2707
02:41:01,168 --> 02:41:16,588
get get subtracted away so for each code

2708
02:41:05,158 --> 02:41:20,248
point right before I save it out I need

2709
02:41:16,588 --> 02:41:22,199
to to go through and rebase it so that

2710
02:41:20,248 --> 02:41:29,189
they're all in the right position what

2711
02:41:22,199 --> 02:41:39,869
is this code points I think so let's

2712
02:41:29,189 --> 02:41:41,850
just double check that right so you can

2713
02:41:39,869 --> 02:41:44,719
see this happening here where this asset

2714
02:41:41,850 --> 02:41:44,719
base needs to be adjusted

2715
02:41:54,819 --> 02:42:02,209
perfect Hey look our fox importing works

2716
02:41:58,550 --> 02:42:05,149
now or sort of works at least who knows

2717
02:42:02,209 --> 02:42:06,979
um it looks like the spacing is a little

2718
02:42:05,149 --> 02:42:08,529
tight or something I don't know that

2719
02:42:06,979 --> 02:42:11,060
could be correct I'm not entirely sure

2720
02:42:08,530 --> 02:42:13,011
but it looks a little off so I think

2721
02:42:11,060 --> 02:42:14,989
maybe there's a there's still some bugs

2722
02:42:13,011 --> 02:42:17,560
in there I wouldn't call that done yet

2723
02:42:14,989 --> 02:42:19,489
but it's pretty close right

2724
02:42:17,560 --> 02:42:21,229
all right let's double check that

2725
02:42:19,489 --> 02:42:24,079
everything in there is working and then

2726
02:42:21,229 --> 02:42:25,220
we'll call it a day so tomorrow we'll

2727
02:42:24,079 --> 02:42:26,750
just at the debug why some of those

2728
02:42:25,220 --> 02:42:28,761
don't look quite right to me

2729
02:42:26,750 --> 02:42:34,959
or at least I don't know they don't seem

2730
02:42:28,761 --> 02:42:34,960
to so if I change - OH - here

2731
02:42:43,579 --> 02:42:52,750
[Music]

2732
02:42:50,379 --> 02:42:55,189
so this all seems to be working properly

2733
02:42:52,750 --> 02:42:57,049
I'm just not sure about the font

2734
02:42:55,190 --> 02:43:01,010
alignment necessarily I'm not sure if

2735
02:42:57,049 --> 02:43:04,489
it's quite right but I'll see any

2736
02:43:01,010 --> 02:43:07,540
thought like obvious font bugs so I

2737
02:43:04,489 --> 02:43:07,539
think we're pretty close

2738
02:43:10,459 --> 02:43:15,569
you

2739
02:43:12,469 --> 02:43:15,569
[Music]

2740
02:43:18,040 --> 02:43:27,010
alright okay we'll go to a brief Q&amp;A but

2741
02:43:21,559 --> 02:43:27,010
I think we're done so let's go ahead and

2742
02:44:04,680 --> 02:44:10,000
if you had to support ligatures for

2743
02:44:07,359 --> 02:44:11,500
instance FFI cannot request a lift when

2744
02:44:10,000 --> 02:44:12,850
using some fonts how would you store

2745
02:44:11,500 --> 02:44:14,590
that information in an asset file

2746
02:44:12,850 --> 02:44:16,210
I think Arabic works in a similar way

2747
02:44:14,590 --> 02:44:17,978
what about substitutions like in some

2748
02:44:16,209 --> 02:44:19,750
fonts uppercase Q can have a longer tail

2749
02:44:17,978 --> 02:44:21,158
went in front of a you at like inquest

2750
02:44:19,750 --> 02:44:28,988
um

2751
02:44:21,158 --> 02:44:30,969
so typically speaking that is not stored

2752
02:44:28,988 --> 02:44:33,368
in the asset file because you don't need

2753
02:44:30,969 --> 02:44:36,459
to write a ligature is its own code

2754
02:44:33,369 --> 02:44:39,149
point just to give you some perspective

2755
02:44:36,459 --> 02:44:39,148
on that right

2756
02:44:46,360 --> 02:44:51,650
so languages that have ligatures

2757
02:44:49,521 --> 02:44:53,659
typically get their own code points so

2758
02:44:51,649 --> 02:44:59,359
all you would do is say that you wanted

2759
02:44:53,659 --> 02:45:03,709
the FFI code point in your actual well

2760
02:44:59,360 --> 02:45:04,730
you know what if you want we could just

2761
02:45:03,709 --> 02:45:06,849
do it

2762
02:45:04,729 --> 02:45:10,309
basically but all you would do is say

2763
02:45:06,850 --> 02:45:12,290
include this in the font set so remember

2764
02:45:10,309 --> 02:45:14,420
how I said we want to be able to have

2765
02:45:12,290 --> 02:45:19,370
lots of different types of character

2766
02:45:14,420 --> 02:45:21,950
Maps this is why so in here we included

2767
02:45:19,370 --> 02:45:23,750
the kanji owl right and the reason we

2768
02:45:21,950 --> 02:45:27,890
included the kanji owl is because we

2769
02:45:23,750 --> 02:45:30,799
wanted to be able to put these like text

2770
02:45:27,889 --> 02:45:34,609
characters in there if you remember our

2771
02:45:30,799 --> 02:45:39,529
text up it has some kind of nonsense for

2772
02:45:34,610 --> 02:45:43,521
code points I think yeah so if you do a

2773
02:45:39,530 --> 02:45:44,870
backslash and then for hex digits it'll

2774
02:45:43,521 --> 02:45:48,260
just put in that thing

2775
02:45:44,870 --> 02:45:52,130
so I mean we can just do it if we want

2776
02:45:48,260 --> 02:45:54,139
to I might as well demo this right so

2777
02:45:52,129 --> 02:45:56,779
for example if we wanted the kanji owl

2778
02:45:54,139 --> 02:45:58,939
in there if I went to the editor and for

2779
02:45:56,780 --> 02:46:01,340
no good reason

2780
02:45:58,940 --> 02:46:08,450
you know in the camera section or

2781
02:46:01,340 --> 02:46:19,840
something let me let me go write like we

2782
02:46:08,450 --> 02:46:23,180
could just do that and once we run that

2783
02:46:19,840 --> 02:46:25,340
when we output our strings when it looks

2784
02:46:23,180 --> 02:46:28,790
at a string if it sees a code point

2785
02:46:25,340 --> 02:46:32,199
specified directly it will look up that

2786
02:46:28,790 --> 02:46:38,260
in the font as a code point number right

2787
02:46:32,199 --> 02:46:43,290
or maybe not did I know did I read that

2788
02:46:38,260 --> 02:46:43,290
wrong it was a back slash wasn't it

2789
02:46:51,879 --> 02:47:05,019
right this is the its backslash X are we

2790
02:47:01,869 --> 02:47:09,909
not calling text up we must be calling

2791
02:47:05,020 --> 02:47:21,369
text up right what is what is button and

2792
02:47:09,908 --> 02:47:23,439
stuff call yeah it's calling text up so

2793
02:47:21,369 --> 02:47:26,050
I'm not sure why that isn't because like

2794
02:47:23,439 --> 02:47:29,949
this is the code that gets that I should

2795
02:47:26,049 --> 02:47:32,559
guess I should look at is hex oh okay

2796
02:47:29,949 --> 02:47:35,619
so for whatever reason we decided it had

2797
02:47:32,559 --> 02:47:43,079
to be our format was it had to be

2798
02:47:35,619 --> 02:47:43,079
uppercase why I'm gonna say no to that

2799
02:47:52,261 --> 02:47:57,329
I I don't know why we wouldn't want our

2800
02:47:54,390 --> 02:47:58,140
is hex to allow lower case so I'm just

2801
02:47:57,329 --> 02:48:01,079
gonna change that

2802
02:47:58,140 --> 02:48:02,579
alright let's try that again alright so

2803
02:48:01,079 --> 02:48:03,720
when we do this it should parse that

2804
02:48:02,579 --> 02:48:05,521
code point and we should we'll see it

2805
02:48:03,720 --> 02:48:07,500
I'm not sure it looks like it couldn't

2806
02:48:05,521 --> 02:48:09,380
find that particular code point but I

2807
02:48:07,500 --> 02:48:16,899
thought I used one that we would have

2808
02:48:09,379 --> 02:48:28,449
although this may be broken as well yep

2809
02:48:16,899 --> 02:48:28,449
[Music]

2810
02:48:29,998 --> 02:48:34,898
there it is

2811
02:48:32,318 --> 02:48:36,189
so although we weren't certain lowercase

2812
02:48:34,898 --> 02:48:38,799
characters from reason so that was a

2813
02:48:36,189 --> 02:48:40,180
longer excursion than I'd hoped but you

2814
02:48:38,799 --> 02:48:43,148
can see that it just inserts whatever

2815
02:48:40,180 --> 02:48:44,498
the code point is there so if we wanted

2816
02:48:43,148 --> 02:48:48,908
to do the ligature thing that you were

2817
02:48:44,498 --> 02:48:53,859
talking about what we would want to do

2818
02:48:48,908 --> 02:49:03,309
there is and you'll have to forgive me I

2819
02:48:53,859 --> 02:49:07,510
don't remember what is okay fc5 COF so

2820
02:49:03,309 --> 02:49:11,590
let's see for some reason we wanted to

2821
02:49:07,510 --> 02:49:16,510
say like that there was a ligature in

2822
02:49:11,590 --> 02:49:22,020
here right like that and so you know we

2823
02:49:16,510 --> 02:49:22,020
run it and we get

2824
02:49:27,671 --> 02:49:34,149
this and you know you want it to have

2825
02:49:31,001 --> 02:49:38,261
the actual look real ligature across to

2826
02:49:34,149 --> 02:49:40,869
the eye let's just say right then what

2827
02:49:38,261 --> 02:49:49,780
you would do is inside HH font you would

2828
02:49:40,870 --> 02:49:54,660
say hey let's get the ligatures and in

2829
02:49:49,780 --> 02:49:54,659
here we would you know put those in here

2830
02:49:57,630 --> 02:50:06,970
while we're at it we should just look up

2831
02:50:04,511 --> 02:50:11,319
all the ones that you know you might

2832
02:50:06,970 --> 02:50:13,899
want here you go

2833
02:50:11,319 --> 02:50:16,149
so in English which is the only thing

2834
02:50:13,899 --> 02:50:18,069
we're currently doing and when you

2835
02:50:16,149 --> 02:50:20,229
expand to other languages we would want

2836
02:50:18,069 --> 02:50:22,119
to go X you know expand this out I think

2837
02:50:20,229 --> 02:50:29,409
these are the only ones that I normally

2838
02:50:22,120 --> 02:50:31,931
see right FFT and these so what we'd

2839
02:50:29,409 --> 02:50:36,040
want to do is support all that right so

2840
02:50:31,931 --> 02:50:40,591
we'd say like okay basically FB 0

2841
02:50:36,040 --> 02:50:40,590
through F beef 5

2842
02:50:47,399 --> 02:50:57,399
so we'd include all of those ligatures

2843
02:50:50,680 --> 02:50:59,110
in our actual font export and again

2844
02:50:57,399 --> 02:51:00,579
that's just a test set so you know

2845
02:50:59,110 --> 02:51:02,620
eventually we'd make one of these for

2846
02:51:00,579 --> 02:51:03,969
English and one for you know French or

2847
02:51:02,620 --> 02:51:06,670
whatever you know the languages that you

2848
02:51:03,969 --> 02:51:09,069
wanted to support as you like build out

2849
02:51:06,670 --> 02:51:11,500
your localization plan or whatever you

2850
02:51:09,069 --> 02:51:15,819
wanted to do there right and then when

2851
02:51:11,500 --> 02:51:18,040
we run HH fonts and have it dump the

2852
02:51:15,819 --> 02:51:20,760
thing out now there's going to be some

2853
02:51:18,040 --> 02:51:25,810
more glyphs than there were originally

2854
02:51:20,760 --> 02:51:27,939
so if we go to liberation mono to hht i

2855
02:51:25,809 --> 02:51:30,789
this is the only part that we're adding

2856
02:51:27,939 --> 02:51:38,620
in so everything else should be fine so

2857
02:51:30,790 --> 02:51:43,920
all I would say is like let's just copy

2858
02:51:38,620 --> 02:51:43,920
that okay

2859
02:51:51,110 --> 02:51:56,090
and now when we loaded it should have

2860
02:51:53,209 --> 02:51:57,979
more stuff and you can see that it does

2861
02:51:56,090 --> 02:52:00,260
right let me put that tags in there I

2862
02:51:57,979 --> 02:52:02,569
want a way to inject these tags I don't

2863
02:52:00,260 --> 02:52:03,771
really want to edit this file so that's

2864
02:52:02,569 --> 02:52:07,879
something that it would be nice to be

2865
02:52:03,771 --> 02:52:12,409
able to do so now if we saved it in

2866
02:52:07,879 --> 02:52:17,209
theory we should be able to use that

2867
02:52:12,409 --> 02:52:19,879
actual ligature instead of the other

2868
02:52:17,209 --> 02:52:23,209
thigh so in here we've got that FFI I

2869
02:52:19,879 --> 02:52:26,689
want to typeset with ligatures so what I

2870
02:52:23,209 --> 02:52:30,949
actually do here instead is I specified

2871
02:52:26,690 --> 02:52:36,851
the actual ligature for FFI which I

2872
02:52:30,950 --> 02:52:36,851
don't remember which one that is FB 0 3

2873
02:52:49,690 --> 02:52:55,149
so if this font had that ligature which

2874
02:52:53,229 --> 02:52:57,129
I don't think it does we would see an

2875
02:52:55,149 --> 02:52:59,289
actual thing there instead we just see

2876
02:52:57,129 --> 02:53:01,329
that little missing symbol which I

2877
02:52:59,290 --> 02:53:03,400
assume is what that is although maybe we

2878
02:53:01,329 --> 02:53:07,750
picked we got the I don't know maybe I

2879
02:53:03,399 --> 02:53:12,959
got the glyph point wrong but who knows

2880
02:53:07,750 --> 02:53:16,750
right but that's all you would do I

2881
02:53:12,959 --> 02:53:19,679
don't really know how to determine

2882
02:53:16,750 --> 02:53:32,829
whether we got that right or wrong I

2883
02:53:19,680 --> 02:53:41,770
guess we would have to look so I don't

2884
02:53:32,829 --> 02:53:47,110
really know how to do this in a test so

2885
02:53:41,770 --> 02:53:55,170
if I select liberation mono and I do an

2886
02:53:47,110 --> 02:53:55,170
insert special character you can

2887
02:54:02,059 --> 02:54:05,649
that did not work at all

2888
02:54:15,180 --> 02:54:18,800
so a reason it doesn't know

2889
02:54:27,829 --> 02:54:30,459
so

2890
02:54:31,829 --> 02:54:36,079
is it because this is clipping me out

2891
02:54:43,899 --> 02:54:52,930
I just I want to know I I don't really

2892
02:54:48,010 --> 02:54:55,870
know how I can go about testing the font

2893
02:54:52,930 --> 02:54:57,670
to see if it has this ligature they

2894
02:54:55,870 --> 02:55:00,150
don't have like a font editor installed

2895
02:54:57,670 --> 02:55:00,149
in this machine

2896
02:55:12,149 --> 02:55:22,739
so I'm assuming that likes ago would

2897
02:55:18,149 --> 02:55:25,579
have liked all of them because it's like

2898
02:55:22,739 --> 02:55:28,649
a Microsoft standard UI font

2899
02:55:25,579 --> 02:55:42,299
so let me see if this lets me insert

2900
02:55:28,649 --> 02:55:46,260
that special character so there it is

2901
02:55:42,299 --> 02:55:49,199
right and so I suspect the problem we

2902
02:55:46,260 --> 02:55:53,550
are having is that that like liberation

2903
02:55:49,200 --> 02:55:57,930
mono just doesn't have it so that's why

2904
02:55:53,549 --> 02:56:02,579
we couldn't extract it so if I go here

2905
02:55:57,930 --> 02:56:05,760
and do liberation mono it's looks like

2906
02:56:02,579 --> 02:56:08,299
it's still ariel right like it can't

2907
02:56:05,760 --> 02:56:08,300
change it

2908
02:56:12,989 --> 02:56:21,209
I'm sorry yeah it can't oh well no wait

2909
02:56:17,560 --> 02:56:24,430
but well but that's not liberation mono

2910
02:56:21,209 --> 02:56:25,449
is it cuz it's not mono space so I don't

2911
02:56:24,430 --> 02:56:28,479
know it must be doing a font

2912
02:56:25,450 --> 02:56:31,300
substitution there it's probably doing a

2913
02:56:28,479 --> 02:56:38,350
font substitution so yeah cuz that's not

2914
02:56:31,299 --> 02:56:39,759
VF you know so don't know I don't know

2915
02:56:38,351 --> 02:56:42,909
how to determine what just happened

2916
02:56:39,760 --> 02:56:45,610
there I I wish I knew how to look at a

2917
02:56:42,909 --> 02:56:48,789
font more specifically

2918
02:56:45,610 --> 02:56:54,280
so what we could do is change which font

2919
02:56:48,790 --> 02:57:12,910
we're loading just real quick so like

2920
02:56:54,280 --> 02:57:14,230
for example I couldn't here say I don't

2921
02:57:12,909 --> 02:57:17,101
actually know where that font file is

2922
02:57:14,229 --> 02:57:17,100
but we can find out

2923
02:57:28,530 --> 02:57:53,600
so like Segoe UI regular and I'll just

2924
02:57:50,639 --> 02:57:53,599
do like

2925
02:58:01,510 --> 02:58:11,270
and so in theory that will have those

2926
02:58:07,129 --> 02:58:18,099
ligatures included with it and if I move

2927
02:58:11,270 --> 02:58:18,100
Segoe UI or copy I should say Segoe UI

2928
02:58:21,159 --> 02:58:37,039
to here then theory I can include that

2929
02:58:31,909 --> 02:58:42,489
instead and see if that allows us to

2930
02:58:37,040 --> 02:58:50,330
pull the ligature or not if I went into

2931
02:58:42,489 --> 02:58:58,728
the Segoe UI file and throw the same tag

2932
02:58:50,329 --> 02:59:00,500
in there oops so that it can be picked

2933
02:58:58,728 --> 02:59:07,579
as a debug font then if I went to base

2934
02:59:00,500 --> 02:59:14,120
game DHT in here I could do like pound

2935
02:59:07,579 --> 02:59:17,739
include fonts Segoe UI to hht and that

2936
02:59:14,120 --> 02:59:22,399
would pull that in as another font I

2937
02:59:17,739 --> 02:59:27,969
don't think we support like deleting the

2938
02:59:22,398 --> 02:59:30,590
font from the hht really at the moment

2939
02:59:27,969 --> 02:59:36,129
so I'm not sure this is actually going

2940
02:59:30,590 --> 02:59:36,130
to work but we can try it

2941
02:59:38,569 --> 02:59:42,750
at the very least I can probably just

2942
02:59:41,129 --> 02:59:49,109
delete everything and restart the

2943
02:59:42,750 --> 03:00:00,659
packing yes so that's still the old one

2944
02:59:49,110 --> 03:00:02,880
so let me do we don't really have a way

2945
03:00:00,659 --> 03:00:07,229
of saying I didn't see this thing so

2946
03:00:02,879 --> 03:00:09,000
delete the asset right I think the only

2947
03:00:07,229 --> 03:00:13,350
thing we have for that is just like you

2948
03:00:09,000 --> 03:00:14,851
got a repack which isn't great but it's

2949
03:00:13,351 --> 03:00:22,521
not the end of the world

2950
03:00:14,851 --> 03:00:26,720
I don't do we have anything tips up that

2951
03:00:22,521 --> 03:00:26,720
remedies remedies really acting up today

2952
03:00:38,029 --> 03:00:41,988
it looks like anytime handmade hero was

2953
03:00:41,000 --> 03:00:44,930
going to crash

2954
03:00:41,988 --> 03:00:46,818
it looks like remedy couldn't handle it

2955
03:00:44,930 --> 03:00:49,100
for some reason like it got into like

2956
03:00:46,818 --> 03:00:51,309
some kind of a bad state you know what I

2957
03:00:49,100 --> 03:00:51,309
mean

2958
03:00:51,370 --> 03:00:57,350
yeah did I spell that wrong or something

2959
03:00:55,728 --> 03:00:59,148
it's it's just having the problem of not

2960
03:00:57,350 --> 03:01:00,260
finding a font which we probably should

2961
03:00:59,148 --> 03:01:02,539
make not crash like we should probably

2962
03:01:00,260 --> 03:01:04,520
just have that work okay because it's

2963
03:01:02,540 --> 03:01:08,899
not it wouldn't normally crash it's an

2964
03:01:04,520 --> 03:01:10,430
assertion so you know if we just

2965
03:01:08,898 --> 03:01:12,769
compiled in release mode it wouldn't

2966
03:01:10,430 --> 03:01:16,068
crash it would just run so it seems bad

2967
03:01:12,770 --> 03:01:19,279
to like box ourselves that way but it's

2968
03:01:16,068 --> 03:01:28,488
oh is that actually the correct name for

2969
03:01:19,279 --> 03:01:33,159
that s e-g Oh II you i dot h HT that

2970
03:01:28,488 --> 03:01:33,159
seems right it's got the tags in there

2971
03:01:38,248 --> 03:01:41,878
what was the problem

2972
03:01:51,180 --> 03:01:56,059
files look good I think

2973
03:01:58,860 --> 03:02:02,640
yeah I don't know

2974
03:02:08,140 --> 03:02:22,770
hmm well I'm just gonna see what happens

2975
03:02:11,649 --> 03:02:22,770
here if we can step in oops

2976
03:02:31,620 --> 03:02:37,810
so Wow no I guess it just can't do it

2977
03:02:36,161 --> 03:02:42,251
all right well we'll do what we'll deal

2978
03:02:37,810 --> 03:02:46,529
with this tomorrow I guess and maybe we

2979
03:02:42,251 --> 03:02:48,851
can see if there's a patch for for

2980
03:02:46,530 --> 03:02:50,261
remedy because I'm not sure I have not

2981
03:02:48,851 --> 03:02:53,739
had that problem it seems like something

2982
03:02:50,261 --> 03:02:56,229
in the latest build maybe but I'm not

2983
03:02:53,739 --> 03:02:57,761
sure the problem is but anyway if we use

2984
03:02:56,229 --> 03:02:59,921
a font where the ligature actually

2985
03:02:57,761 --> 03:03:04,091
exists presumably we can get it if I

2986
03:02:59,921 --> 03:03:06,610
look in here too and just look at this

2987
03:03:04,091 --> 03:03:09,161
ago we should be able to see if the

2988
03:03:06,610 --> 03:03:19,181
ligature actually got exported it looks

2989
03:03:09,161 --> 03:03:21,540
like it did right so so that was the

2990
03:03:19,181 --> 03:03:24,371
reason we weren't getting it before I

2991
03:03:21,540 --> 03:03:26,680
assumed that for the other one

2992
03:03:24,370 --> 03:03:30,310
liberation mono there was no yeah

2993
03:03:26,681 --> 03:03:34,239
there's no ligature so it looks like F I

2994
03:03:30,310 --> 03:03:35,681
and F L got exported sort of right I

2995
03:03:34,239 --> 03:03:39,280
mean they don't they're not actual

2996
03:03:35,681 --> 03:03:40,899
ligatures but they did get exported but

2997
03:03:39,280 --> 03:03:43,030
for some reason some of these other ones

2998
03:03:40,899 --> 03:03:44,921
just didn't and I don't know what

2999
03:03:43,030 --> 03:03:47,681
Windows fought why windows fought mapper

3000
03:03:44,921 --> 03:03:50,530
in particular has an issue with that but

3001
03:03:47,681 --> 03:03:56,860
that's all you would do for ligatures is

3002
03:03:50,530 --> 03:03:59,711
that and I wouldn't recommend doing it

3003
03:03:56,860 --> 03:04:02,621
really any other way you want to be able

3004
03:03:59,710 --> 03:04:04,420
to mint like it might be tempting to say

3005
03:04:02,620 --> 03:04:07,239
well let me just every time i output

3006
03:04:04,421 --> 03:04:10,121
strings look for FF I and replace it

3007
03:04:07,239 --> 03:04:14,530
with the ligature that's not a great

3008
03:04:10,120 --> 03:04:16,930
idea typically because you usually want

3009
03:04:14,530 --> 03:04:19,211
control over whether the ligature is

3010
03:04:16,931 --> 03:04:21,610
used or not used in any given context

3011
03:04:19,210 --> 03:04:23,649
and so it's usually better even if you

3012
03:04:21,610 --> 03:04:26,471
do do an automated system like that do

3013
03:04:23,649 --> 03:04:29,560
it at creation time so you can hand tune

3014
03:04:26,470 --> 03:04:32,109
it as necessary don't do it like on the

3015
03:04:29,560 --> 03:04:34,540
fly because then sometimes the rule may

3016
03:04:32,110 --> 03:04:36,931
be wrong and you don't and it's bad

3017
03:04:34,540 --> 03:04:36,930
right

3018
03:04:39,049 --> 03:04:45,949
so you know that's something to keep in

3019
03:04:43,920 --> 03:04:45,950
mind

3020
03:05:04,180 --> 03:05:11,739
it it's not there's not one kanji for

3021
03:05:07,180 --> 03:05:14,710
owl right it was a string it was a bunch

3022
03:05:11,739 --> 03:05:19,569
of them I thought we did we did four of

3023
03:05:14,709 --> 03:05:22,239
them so I'm not sure which it was it was

3024
03:05:19,569 --> 03:05:26,789
these four or maybe they were just other

3025
03:05:22,239 --> 03:05:26,789
test ones but it was

3026
03:05:44,790 --> 03:05:48,970
because I remember we looked it up and

3027
03:05:46,988 --> 03:05:50,318
it was like a specific kind of owl to or

3028
03:05:48,969 --> 03:05:52,209
something I don't remember exactly what

3029
03:05:50,318 --> 03:06:02,680
we did we have to go back to the video

3030
03:05:52,209 --> 03:06:09,158
but it was specifically all of these put

3031
03:06:02,680 --> 03:06:12,880
together that we used and I don't

3032
03:06:09,158 --> 03:06:17,859
remember why why we didn't just use this

3033
03:06:12,879 --> 03:06:20,139
I don't know but there was some kind of

3034
03:06:17,859 --> 03:06:23,309
nonsense like that

3035
03:06:20,139 --> 03:06:23,309
[Music]

3036
03:06:34,101 --> 03:06:38,659
it does anyone remember why it was it

3037
03:06:36,470 --> 03:06:41,590
was a it was a big block of text we use

3038
03:06:38,659 --> 03:06:41,590
and I don't remember why

3039
03:06:48,290 --> 03:06:51,520
maybe we did this

3040
03:07:00,829 --> 03:07:11,500
well we didn't use that so yeah I don't

3041
03:07:05,898 --> 03:07:11,500
know why we I don't know you got me man

3042
03:07:17,620 --> 03:07:30,579
we should go back and look because we

3043
03:07:19,870 --> 03:07:32,771
went yes I I know that that means small

3044
03:07:30,579 --> 03:07:36,790
but I don't remember what the other

3045
03:07:32,771 --> 03:07:38,471
characters mean at all although one of

3046
03:07:36,790 --> 03:07:44,050
them was like day or something wasn't it

3047
03:07:38,470 --> 03:07:45,189
or moon or since I can't I don't

3048
03:07:44,050 --> 03:07:48,300
remember where they what they were it

3049
03:07:45,190 --> 03:07:48,301
was it was like the three

3050
03:07:57,920 --> 03:08:11,670
that one's would write the one the tree

3051
03:08:05,129 --> 03:08:13,709
one so anyway I don't know where we got

3052
03:08:11,670 --> 03:08:15,750
the kanji for owl it would have been

3053
03:08:13,709 --> 03:08:17,010
nice if you just use this that but I

3054
03:08:15,750 --> 03:08:19,370
don't think for some reason we didn't

3055
03:08:17,011 --> 03:08:19,370
find that

3056
03:08:43,148 --> 03:08:46,628
I noticed you to clear the platform

3057
03:08:44,709 --> 03:08:48,549
struct with all the function pointers as

3058
03:08:46,629 --> 03:08:50,588
externa and handmade platform that age

3059
03:08:48,549 --> 03:08:51,819
how does the linker resolve that isn't

3060
03:08:50,588 --> 03:08:54,279
the platform a different excute Abul

3061
03:08:51,818 --> 03:08:56,078
well the reason that that's declared is

3062
03:08:54,279 --> 03:08:58,238
X turn in platform that age I think

3063
03:08:56,078 --> 03:09:00,818
though is has nothing to do with what

3064
03:08:58,238 --> 03:09:06,779
executables in I think that was done

3065
03:09:00,818 --> 03:09:09,398
because we wanted to be able to build

3066
03:09:06,779 --> 03:09:11,229
two-part executables there was there was

3067
03:09:09,398 --> 03:09:15,309
a reason why we did that it was like oh

3068
03:09:11,228 --> 03:09:17,738
we want the ping loader to be able to

3069
03:09:15,309 --> 03:09:20,168
create a platform context and stuff like

3070
03:09:17,738 --> 03:09:26,078
that so I don't think it had anything to

3071
03:09:20,168 --> 03:09:28,388
do with it wasn't because we were

3072
03:09:26,078 --> 03:09:30,248
separating them across the DLL

3073
03:09:28,388 --> 03:09:36,009
boundaries or anything like that because

3074
03:09:30,248 --> 03:09:37,270
we pass it into the game how did we

3075
03:09:36,009 --> 03:09:38,318
render text and you have any thoughts of

3076
03:09:37,270 --> 03:09:40,389
dealing with large number of glyphs such

3077
03:09:38,318 --> 03:09:42,939
as in Chinese we already deal with that

3078
03:09:40,388 --> 03:09:44,948
just fine we allow you to use any

3079
03:09:42,939 --> 03:09:46,959
Unicode code points you want and we just

3080
03:09:44,949 --> 03:09:49,179
fill up the glyphs tables as necessary

3081
03:09:46,959 --> 03:09:51,279
if you want to pile 3,000 characters in

3082
03:09:49,179 --> 03:09:53,679
there go right ahead since all of our

3083
03:09:51,279 --> 03:10:01,449
art is paged on demand it will just load

3084
03:09:53,679 --> 03:10:03,338
the symbols that are necessary right one

3085
03:10:01,449 --> 03:10:06,069
thing I would like to do is have a

3086
03:10:03,338 --> 03:10:08,259
smaller bitmaps table like right now we

3087
03:10:06,068 --> 03:10:11,408
use 512 512 for everything which is way

3088
03:10:08,259 --> 03:10:17,918
too big for glyphs we probably want a 64

3089
03:10:11,408 --> 03:10:20,048
64 like glyph table as well to small

3090
03:10:17,918 --> 03:10:21,968
store small things like small font info

3091
03:10:20,049 --> 03:10:26,669
but that's sort of a that's an

3092
03:10:21,968 --> 03:10:29,908
optimization for saving memory sort of a

3093
03:10:26,668 --> 03:10:29,908
another thing

3094
03:10:35,148 --> 03:10:40,458
do you think most the optimizations use

3095
03:10:38,299 --> 03:10:42,020
are domain-specific I game development

3096
03:10:40,459 --> 03:10:43,338
related and if so do you think it's

3097
03:10:42,020 --> 03:10:47,149
possibly a couple optimizations and

3098
03:10:43,338 --> 03:10:48,619
algorithms in the context of games I'm

3099
03:10:47,148 --> 03:10:50,809
not sure I understand the question I

3100
03:10:48,619 --> 03:10:52,789
don't really think of optimizations as

3101
03:10:50,809 --> 03:11:00,048
being domain-specific typically

3102
03:10:52,789 --> 03:11:03,529
optimizations are about like how you map

3103
03:11:00,049 --> 03:11:05,569
an algorithm to the CPU which doesn't

3104
03:11:03,529 --> 03:11:09,020
tend to depend on whether you're using

3105
03:11:05,568 --> 03:11:10,968
it in a game or elsewhere it is true

3106
03:11:09,020 --> 03:11:13,939
that sometimes you optimize things in

3107
03:11:10,968 --> 03:11:24,019
games that don't ever occur elsewhere so

3108
03:11:13,939 --> 03:11:31,429
like I mean you you know oh I'm doing

3109
03:11:24,020 --> 03:11:35,149
something with inner products that can

3110
03:11:31,429 --> 03:11:36,408
be pretty approximated here whereas it

3111
03:11:35,148 --> 03:11:37,668
couldn't be approximated elsewhere so

3112
03:11:36,408 --> 03:11:38,988
I'm I don't know I'm trying to make

3113
03:11:37,668 --> 03:11:42,009
something up I'm not sure I'm really

3114
03:11:38,988 --> 03:11:42,009
coming up with much to be honest

3115
03:11:46,369 --> 03:11:50,969
what was your experience with Cygnus ed

3116
03:11:48,808 --> 03:11:56,068
on the Amiga how do you compare it to

3117
03:11:50,968 --> 03:11:57,868
Emacs I would say that Cygnus ed doesn't

3118
03:11:56,068 --> 03:12:00,418
really have very many text editing

3119
03:11:57,869 --> 03:12:03,709
features as compared to Emacs so it's

3120
03:12:00,418 --> 03:12:05,818
pretty underpowered because it's

3121
03:12:03,709 --> 03:12:09,270
obviously hasn't had the billions of

3122
03:12:05,818 --> 03:12:12,538
hours of time making weird extensions

3123
03:12:09,270 --> 03:12:16,049
and stuff that Emacs has had but man the

3124
03:12:12,539 --> 03:12:23,088
speed like Cygnus ed is so much faster

3125
03:12:16,049 --> 03:12:26,759
than Emacs so Cygnus said on the Amiga

3126
03:12:23,088 --> 03:12:32,908
has a like much much higher frame rate

3127
03:12:26,759 --> 03:12:34,918
than Emacs on today's machine like no

3128
03:12:32,908 --> 03:12:40,048
joke Cigna said with 60 frames a second

3129
03:12:34,918 --> 03:12:43,020
always Emacs has never heard of 60

3130
03:12:40,049 --> 03:12:44,849
frames a second that they don't like 60

3131
03:12:43,020 --> 03:12:47,039
frames a second is like some mythical

3132
03:12:44,849 --> 03:12:50,418
thing that Richard Stallman doesn't

3133
03:12:47,039 --> 03:12:50,418
believe exists or something right

3134
03:12:57,011 --> 03:13:04,461
it looks like midlow has located where

3135
03:12:59,960 --> 03:13:10,069
we found the owl thing so did anyone

3136
03:13:04,460 --> 03:13:13,899
manage to figure out what the heck where

3137
03:13:10,069 --> 03:13:13,899
we found those characters or why

3138
03:13:50,931 --> 03:13:56,690
I mean it's weird because like here's a

3139
03:13:53,959 --> 03:14:00,850
ton of different types of owls none of

3140
03:13:56,690 --> 03:14:00,851
which are the symbols we ended up with

3141
03:14:16,940 --> 03:14:24,771
so I don't know where we got that from

3142
03:14:20,030 --> 03:14:26,510
we should probably fix it this seems

3143
03:14:24,771 --> 03:14:29,120
like a pretty definitive page I mean if

3144
03:14:26,510 --> 03:14:31,819
you're telling how to translate a Shrike

3145
03:14:29,120 --> 03:14:33,760
and agreed you probably know what you're

3146
03:14:31,819 --> 03:14:39,219
doing because those are some pretty

3147
03:14:33,760 --> 03:14:39,219
arbitrarily weird bird names right that

3148
03:15:01,899 --> 03:15:14,329
this is starting to look because that

3149
03:15:05,860 --> 03:15:17,739
that looks like what we got so maybe it

3150
03:15:14,329 --> 03:15:17,739
was like a small eared owl

3151
03:15:24,860 --> 03:15:27,819
yeah I'm saying

3152
03:15:34,549 --> 03:15:41,988
so that you know I that sounds vaguely

3153
03:15:39,379 --> 03:15:43,429
plausible would you agree with that that

3154
03:15:41,988 --> 03:15:47,709
maybe we were trying to say like small

3155
03:15:43,430 --> 03:15:47,710
ear owl small eared owl

3156
03:15:55,799 --> 03:15:59,489
because I think this is what we had and

3157
03:15:57,329 --> 03:16:05,129
then we just had small we had this we

3158
03:15:59,489 --> 03:16:16,430
had we also had small I don't see small

3159
03:16:05,129 --> 03:16:16,429
eared owl here but yeah but it seems

3160
03:16:25,079 --> 03:16:27,771
seems

3161
03:16:40,200 --> 03:16:45,120
okay short-eared owls okay yeah all

3162
03:16:42,990 --> 03:16:47,431
right so we we didn't write it totally

3163
03:16:45,120 --> 03:16:49,439
wrong but we did pick at various was

3164
03:16:47,431 --> 03:17:01,261
their kind of owl it seems which is fine

3165
03:16:49,440 --> 03:17:03,990
with me all right I'm gonna wrap it up

3166
03:17:01,261 --> 03:17:05,611
thank you for for joining me for another

3167
03:17:03,990 --> 03:17:07,081
episode of handmade hero it's been a

3168
03:17:05,611 --> 03:17:08,131
pleasure coding with you as always if

3169
03:17:07,081 --> 03:17:09,479
you want to follow along series at home

3170
03:17:08,130 --> 03:17:11,010
you can always pre-order the game at

3171
03:17:09,479 --> 03:17:12,689
hand made here org and it comes to the

3172
03:17:11,011 --> 03:17:13,251
source code so that you can play around

3173
03:17:12,690 --> 03:17:16,411
with it

3174
03:17:13,251 --> 03:17:19,831
I'll be back tomorrow I'd like to see

3175
03:17:16,411 --> 03:17:21,661
why we're not loading segoe properly and

3176
03:17:19,831 --> 03:17:24,871
then like I said I think we probably

3177
03:17:21,661 --> 03:17:27,150
want to just like turn a little bit on

3178
03:17:24,870 --> 03:17:29,479
this system maybe just do some

3179
03:17:27,150 --> 03:17:32,431
refinement now that everything works

3180
03:17:29,479 --> 03:17:33,841
some of its looking at janky and we

3181
03:17:32,431 --> 03:17:35,551
don't really want to fight it like we

3182
03:17:33,841 --> 03:17:37,861
want it to kind of be nice and smooth so

3183
03:17:35,550 --> 03:17:41,850
it now might be a good time to just kind

3184
03:17:37,861 --> 03:17:46,471
of like clean this stuff up and make

3185
03:17:41,851 --> 03:17:49,230
sure that everything works okay so hope

3186
03:17:46,470 --> 03:17:50,550
to see you back here for that until then

3187
03:17:49,229 --> 03:17:52,770
have fun programming and I'll see

3188
03:17:50,550 --> 03:17:54,890
everyone on the Internet take it easy

3189
03:17:52,771 --> 03:17:54,891
everybody

