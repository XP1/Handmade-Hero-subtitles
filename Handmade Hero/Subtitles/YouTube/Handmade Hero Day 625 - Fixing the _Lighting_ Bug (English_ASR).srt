1
00:00:00,480 --> 00:00:04,480
hello everyone and welcome to handmade

2
00:00:02,638 --> 00:00:07,919
hero sure we code a complete game

3
00:00:04,480 --> 00:00:11,599
live on stream uh folks actually

4
00:00:07,918 --> 00:00:11,599
found a bug for us um

5
00:00:12,080 --> 00:00:15,919
i'll be completely honest with you i

6
00:00:13,039 --> 00:00:18,160
don't know that we are logged in in fact

7
00:00:15,919 --> 00:00:20,480
we aren't logged into github here but

8
00:00:18,160 --> 00:00:20,480
um

9
00:00:21,199 --> 00:00:25,679
suffice to say if you are on the

10
00:00:23,039 --> 00:00:27,279
handmade hero private github

11
00:00:25,679 --> 00:00:29,358
then you may have seen there is an issue

12
00:00:27,278 --> 00:00:32,079
that someone had found

13
00:00:29,359 --> 00:00:34,320
a bug in math code it's a mistake i've

14
00:00:32,079 --> 00:00:37,679
made twice i can't seem to get it

15
00:00:34,320 --> 00:00:40,238
through uh my my thick skull

16
00:00:37,679 --> 00:00:40,719
on this particular issue i don't know

17
00:00:40,238 --> 00:00:42,718
why

18
00:00:40,719 --> 00:00:44,079
i have it in my head that a particular

19
00:00:42,719 --> 00:00:45,359
command works a particular way and it

20
00:00:44,079 --> 00:00:47,600
doesn't work that way

21
00:00:45,359 --> 00:00:50,320
and i've literally made this mistake two

22
00:00:47,600 --> 00:00:53,359
times on exactly the same thing

23
00:00:50,320 --> 00:00:53,840
right uh and let me show you uh where it

24
00:00:53,359 --> 00:00:56,079
is

25
00:00:53,840 --> 00:00:58,000
first of all thank you for the folks who

26
00:00:56,079 --> 00:01:01,600
who tracked this bug down it saves us

27
00:00:58,000 --> 00:01:02,799
a lot of of headaches of ever finding it

28
00:01:01,600 --> 00:01:03,920
which we probably would have had to do

29
00:01:02,799 --> 00:01:05,679
eventually but we probably would have

30
00:01:03,920 --> 00:01:08,799
had no idea where it was

31
00:01:05,680 --> 00:01:10,240
uh and it would have been bad but

32
00:01:08,799 --> 00:01:12,159
um like we probably only would have

33
00:01:10,239 --> 00:01:14,079
found it when it comes time to like

34
00:01:12,159 --> 00:01:15,759
do like specific testing on the math

35
00:01:14,079 --> 00:01:16,158
library or something like that which you

36
00:01:15,759 --> 00:01:18,000
know

37
00:01:16,159 --> 00:01:19,680
is the only time we probably ever ever

38
00:01:18,000 --> 00:01:22,159
would have even found it

39
00:01:19,680 --> 00:01:23,280
but anyway uh so if you take a look at

40
00:01:22,159 --> 00:01:26,640
our

41
00:01:23,280 --> 00:01:30,400
intrinsics i believe is where they are

42
00:01:26,640 --> 00:01:34,000
um so we have a sign of function

43
00:01:30,400 --> 00:01:36,159
that we were using for f32s

44
00:01:34,000 --> 00:01:38,560
and you can see here that we have a

45
00:01:36,159 --> 00:01:42,960
blend vps

46
00:01:38,560 --> 00:01:46,000
right um and so

47
00:01:42,959 --> 00:01:49,280
in my mind for some reason

48
00:01:46,000 --> 00:01:52,879
blend v works by doing

49
00:01:49,280 --> 00:01:53,759
a bit-wise combine of the source and the

50
00:01:52,879 --> 00:01:56,158
input

51
00:01:53,759 --> 00:01:57,439
using the mask so it goes through the

52
00:01:56,159 --> 00:02:01,600
bits of

53
00:01:57,438 --> 00:02:03,519
the uh source and the two sources

54
00:02:01,599 --> 00:02:05,199
it goes through the bits the two sources

55
00:02:03,519 --> 00:02:08,159
and it just uses the mask

56
00:02:05,200 --> 00:02:10,000
bit in that location to pick which one

57
00:02:08,159 --> 00:02:13,680
which bit it's going to pull

58
00:02:10,000 --> 00:02:16,000
so in my mind it's like an or

59
00:02:13,680 --> 00:02:17,520
between an and of the mask and an and

60
00:02:16,000 --> 00:02:19,680
not of the mask

61
00:02:17,520 --> 00:02:23,680
of the two inputs right that's in my

62
00:02:19,680 --> 00:02:25,599
mind what it does in actuality that is

63
00:02:23,680 --> 00:02:29,439
not what it does so if you look at the

64
00:02:25,598 --> 00:02:33,679
intra intrinsics guide for example

65
00:02:29,439 --> 00:02:37,120
uh which i think we can

66
00:02:33,680 --> 00:02:39,760
and then blend vps yeah

67
00:02:37,120 --> 00:02:40,480
um so if you actually look at what this

68
00:02:39,759 --> 00:02:44,079
does

69
00:02:40,479 --> 00:02:47,280
you can see that it actually doesn't

70
00:02:44,080 --> 00:02:51,840
do it per bit right it

71
00:02:47,280 --> 00:02:51,840
only does it per lane

72
00:02:52,159 --> 00:03:07,519
see what i'm saying

73
00:03:04,239 --> 00:03:11,759
i do not i do not know

74
00:03:07,519 --> 00:03:14,719
why this fails to

75
00:03:11,759 --> 00:03:15,598
be in my head like this is not what the

76
00:03:14,719 --> 00:03:18,959
function does

77
00:03:15,598 --> 00:03:21,119
in my head and i'm gonna have to re

78
00:03:18,959 --> 00:03:22,080
i'm gonna keep making mistakes about it

79
00:03:21,120 --> 00:03:23,519
uh until i

80
00:03:22,080 --> 00:03:25,280
internalize this i've literally made

81
00:03:23,519 --> 00:03:27,840
exactly this mistake before

82
00:03:25,280 --> 00:03:29,439
at least one other case i can remember

83
00:03:27,840 --> 00:03:32,878
and so

84
00:03:29,439 --> 00:03:35,840
this doesn't work for sine of

85
00:03:32,878 --> 00:03:38,239
right so we can look and we can see

86
00:03:35,840 --> 00:03:41,598
where our blend v

87
00:03:38,239 --> 00:03:42,878
ps is at uh and oops i should probably

88
00:03:41,598 --> 00:03:46,000
search the whole project

89
00:03:42,878 --> 00:03:49,439
mm blendvps

90
00:03:46,000 --> 00:03:51,360
so we can look here at where this uh

91
00:03:49,439 --> 00:03:52,719
value actually is and you can see we've

92
00:03:51,360 --> 00:03:55,920
got one in cmd

93
00:03:52,719 --> 00:03:56,719
here where we do sine of there and we've

94
00:03:55,919 --> 00:03:59,359
got one

95
00:03:56,719 --> 00:04:00,000
um in 70 here where we do it's the same

96
00:03:59,360 --> 00:04:04,239
function

97
00:04:00,000 --> 00:04:05,438
right uh just one for scalar and one for

98
00:04:04,239 --> 00:04:09,120
four wide

99
00:04:05,438 --> 00:04:12,000
and they're both the same wrong

100
00:04:09,120 --> 00:04:12,480
now i don't actually know where we use

101
00:04:12,000 --> 00:04:15,199
this

102
00:04:12,479 --> 00:04:16,879
if we search probably not in a lot of

103
00:04:15,199 --> 00:04:17,599
places because we would have seen this

104
00:04:16,879 --> 00:04:20,798
bug

105
00:04:17,600 --> 00:04:23,919
uh show up more often if you know

106
00:04:20,798 --> 00:04:24,319
uh if we'd used it a lot so you can see

107
00:04:23,918 --> 00:04:26,478
here

108
00:04:24,319 --> 00:04:29,439
inside the lighting code where we're

109
00:04:26,478 --> 00:04:32,879
doing our like actual probe stuff here

110
00:04:29,439 --> 00:04:36,079
you can see that we do a sign of there

111
00:04:32,879 --> 00:04:37,839
um and that's gonna be wrong so so this

112
00:04:36,079 --> 00:04:40,719
is probably wrong

113
00:04:37,839 --> 00:04:43,359
uh then we've got inside the other the

114
00:04:40,720 --> 00:04:45,360
octahedral like from unit vector stuff

115
00:04:43,360 --> 00:04:46,639
i don't really know who's still calling

116
00:04:45,360 --> 00:04:48,319
that because i think we may have like in

117
00:04:46,639 --> 00:04:50,560
line most of that but

118
00:04:48,319 --> 00:04:52,079
um and then that's not real these are

119
00:04:50,560 --> 00:04:54,240
these are uh

120
00:04:52,079 --> 00:04:55,279
from the shaders so those are those are

121
00:04:54,240 --> 00:04:57,199
different uh

122
00:04:55,279 --> 00:05:00,079
they are using the shaders version not

123
00:04:57,199 --> 00:05:00,079
ours right

124
00:05:00,240 --> 00:05:03,199
so at least i think that's true let me

125
00:05:01,839 --> 00:05:04,478
just verify but it wouldn't matter

126
00:05:03,199 --> 00:05:06,560
because this wouldn't use a blend b

127
00:05:04,478 --> 00:05:09,439
anyway right there in shaders

128
00:05:06,560 --> 00:05:10,000
so you can see like this will be

129
00:05:09,439 --> 00:05:11,680
adversely

130
00:05:10,000 --> 00:05:13,519
affecting our lighting i don't know that

131
00:05:11,680 --> 00:05:16,560
it has anything to do with the lighting

132
00:05:13,519 --> 00:05:18,240
bug that we had but you know because i

133
00:05:16,560 --> 00:05:20,319
can't think of any

134
00:05:18,240 --> 00:05:21,280
i can't think of a lot of ways that that

135
00:05:20,319 --> 00:05:25,839
would actually

136
00:05:21,279 --> 00:05:25,839
be the case um

137
00:05:28,639 --> 00:05:32,319
i i i can't think of of a lot of ways

138
00:05:30,800 --> 00:05:35,439
that that would be

139
00:05:32,319 --> 00:05:35,439
the the case

140
00:05:37,839 --> 00:05:41,679
yeah i don't know um i also don't know

141
00:05:40,720 --> 00:05:45,199
if this would have

142
00:05:41,680 --> 00:05:48,560
uh if this would have affected our

143
00:05:45,199 --> 00:05:49,680
octahedral lighting pattern right uh

144
00:05:48,560 --> 00:05:52,000
because if you look at generate

145
00:05:49,680 --> 00:05:54,160
octahedral lighting pattern

146
00:05:52,000 --> 00:05:55,759
uh i don't know if this direction from

147
00:05:54,160 --> 00:05:58,639
txty

148
00:05:55,759 --> 00:06:00,639
right that's the direction from txty and

149
00:05:58,639 --> 00:06:03,280
get octahedral offset

150
00:06:00,639 --> 00:06:04,800
uh those could be implicated with this

151
00:06:03,279 --> 00:06:06,959
as well in which case we'd have to rerun

152
00:06:04,800 --> 00:06:10,079
the generator so you can see

153
00:06:06,959 --> 00:06:13,120
uh yeah in fact they are right

154
00:06:10,079 --> 00:06:16,000
so we've got in both cases we've got

155
00:06:13,120 --> 00:06:17,199
uh we just have this sign problem here

156
00:06:16,000 --> 00:06:19,839
and so what i want to do

157
00:06:17,199 --> 00:06:21,840
is go ahead and fix that code just so we

158
00:06:19,839 --> 00:06:23,519
don't have this issue

159
00:06:21,839 --> 00:06:25,758
it might also be nice at some point to

160
00:06:23,519 --> 00:06:27,758
merge these two like it would be nice if

161
00:06:25,759 --> 00:06:28,400
we didn't have two sino functions

162
00:06:27,759 --> 00:06:30,240
because

163
00:06:28,399 --> 00:06:31,679
you know we probably could get away with

164
00:06:30,240 --> 00:06:33,439
one

165
00:06:31,680 --> 00:06:36,079
there are some issues because you kind

166
00:06:33,439 --> 00:06:39,759
of want to do ps versus ss

167
00:06:36,079 --> 00:06:41,359
in these cases um and so i don't know to

168
00:06:39,759 --> 00:06:44,080
what extent we want to

169
00:06:41,360 --> 00:06:45,680
you know try and go down that route but

170
00:06:44,079 --> 00:06:49,680
um

171
00:06:45,680 --> 00:06:51,280
like this should really be an ss uh

172
00:06:49,680 --> 00:06:52,639
if unless they don't have one of those

173
00:06:51,279 --> 00:06:54,399
do we not have one of those is that why

174
00:06:52,639 --> 00:06:56,960
that's doing that yeah okay

175
00:06:54,399 --> 00:06:59,279
um but the and and stuff and the or

176
00:06:56,959 --> 00:07:02,478
would do that

177
00:06:59,279 --> 00:07:04,079
so anyway this is what we need to do we

178
00:07:02,478 --> 00:07:05,519
would like to take the sign of this

179
00:07:04,079 --> 00:07:08,159
value and

180
00:07:05,519 --> 00:07:08,719
what we want to do here is we want to

181
00:07:08,160 --> 00:07:12,080
basically

182
00:07:08,720 --> 00:07:14,920
keep the uh entirety

183
00:07:12,079 --> 00:07:17,439
of the input but we want to

184
00:07:14,920 --> 00:07:21,120
[Music]

185
00:07:17,439 --> 00:07:23,360
we want to just replace the top bit

186
00:07:21,120 --> 00:07:26,560
right that's all we wanted to do so

187
00:07:23,360 --> 00:07:29,280
we're trying to take this mask u32 here

188
00:07:26,560 --> 00:07:30,560
and we're trying to basically do an mm

189
00:07:29,279 --> 00:07:33,839
like and

190
00:07:30,560 --> 00:07:36,000
uh and not probably right so we're gonna

191
00:07:33,839 --> 00:07:37,359
try and take do an and not to clear it

192
00:07:36,000 --> 00:07:41,279
out and then we're gonna do

193
00:07:37,360 --> 00:07:45,840
an mm or right to knock it back in

194
00:07:41,279 --> 00:07:45,839
so we want to to

195
00:07:53,279 --> 00:07:57,758
we want to just knock that into a value

196
00:07:56,639 --> 00:07:59,680
that's all ones

197
00:07:57,759 --> 00:08:00,879
which we already have and so this

198
00:07:59,680 --> 00:08:04,000
doesn't need to get

199
00:08:00,879 --> 00:08:06,800
masked out right so we can take

200
00:08:04,000 --> 00:08:07,360
the value that's all ones and then we

201
00:08:06,800 --> 00:08:09,360
can

202
00:08:07,360 --> 00:08:12,639
make something called sign only right

203
00:08:09,360 --> 00:08:16,400
that we produce here

204
00:08:12,639 --> 00:08:18,800
that that only has the sign bit and when

205
00:08:16,399 --> 00:08:21,519
we or the sign bit into the ones

206
00:08:18,800 --> 00:08:22,478
it will flip their sign as necessary

207
00:08:21,519 --> 00:08:24,799
right

208
00:08:22,478 --> 00:08:27,439
so that's all we really needed to do and

209
00:08:24,800 --> 00:08:30,400
so what we need to do here is just

210
00:08:27,439 --> 00:08:31,199
uh pull out the the sine value and so we

211
00:08:30,399 --> 00:08:34,319
have to look up

212
00:08:31,199 --> 00:08:35,120
i never remember who gets knotted in the

213
00:08:34,320 --> 00:08:36,800
and not

214
00:08:35,120 --> 00:08:38,959
i don't remember if it's the second

215
00:08:36,799 --> 00:08:41,199
parameter or the first parameter

216
00:08:38,958 --> 00:08:43,278
right so so somebody gets nodded and i

217
00:08:41,200 --> 00:08:54,959
don't remember

218
00:08:43,278 --> 00:08:57,439
who it is but we can take a look

219
00:08:54,958 --> 00:09:00,079
yes you can see the and not here

220
00:08:57,440 --> 00:09:00,080
actually that's

221
00:09:06,839 --> 00:09:11,839
huh

222
00:09:09,440 --> 00:09:11,839
so

223
00:09:14,879 --> 00:09:22,240
i i'm a little confused

224
00:09:18,879 --> 00:09:26,320
is there a reason why lake

225
00:09:22,240 --> 00:09:28,879
is no longer listed on here

226
00:09:26,320 --> 00:09:28,879
it's there

227
00:09:30,000 --> 00:09:34,799
did they just never update these for

228
00:09:31,839 --> 00:09:37,440
skylake i guess i've never looked

229
00:09:34,799 --> 00:09:39,120
anyway i'm assuming that it's 0.33 on

230
00:09:37,440 --> 00:09:41,680
skylake although maybe not because this

231
00:09:39,120 --> 00:09:46,480
is 1-1-1 for throughput

232
00:09:41,679 --> 00:09:51,359
so so actually based on that

233
00:09:46,480 --> 00:09:52,800
this looks maybe like a bad idea um

234
00:09:51,360 --> 00:09:54,159
oh no that's right never mind we don't

235
00:09:52,799 --> 00:09:55,199
need to end not that that's the correct

236
00:09:54,159 --> 00:09:59,039
thing

237
00:09:55,200 --> 00:10:00,000
right i take it back we only need to and

238
00:09:59,039 --> 00:10:03,439
it out

239
00:10:00,000 --> 00:10:06,000
correct because if we and this out

240
00:10:03,440 --> 00:10:07,200
uh then it will just be the sign bit so

241
00:10:06,000 --> 00:10:08,879
we don't need to and not it because we

242
00:10:07,200 --> 00:10:11,680
don't have to process this

243
00:10:08,879 --> 00:10:11,919
uh at all otherwise so if we load that

244
00:10:11,679 --> 00:10:14,159
in

245
00:10:11,919 --> 00:10:16,319
and we we mask off just the high bit and

246
00:10:14,159 --> 00:10:17,919
then we merge it in

247
00:10:16,320 --> 00:10:21,278
we should be good to go in fact we can

248
00:10:17,919 --> 00:10:21,278
just do this right

249
00:10:22,000 --> 00:10:28,559
uh so that seems that seems good

250
00:10:26,159 --> 00:10:28,559
um

251
00:10:30,720 --> 00:10:34,800
that all seems good to me uh and so

252
00:10:33,519 --> 00:10:37,519
let's just go ahead

253
00:10:34,799 --> 00:10:38,559
and finish this off we need to extract

254
00:10:37,519 --> 00:10:42,000
the result

255
00:10:38,559 --> 00:10:42,719
obviously so there we go um i might make

256
00:10:42,000 --> 00:10:44,958
this

257
00:10:42,720 --> 00:10:45,839
be a two-step process because that line

258
00:10:44,958 --> 00:10:48,799
is getting a little long

259
00:10:45,839 --> 00:10:48,800
in the tooth so

260
00:10:50,399 --> 00:11:04,639
maybe i'll just grab this out there

261
00:11:01,120 --> 00:11:06,959
and we could do this just to make it a

262
00:11:04,639 --> 00:11:09,199
little easier to read

263
00:11:06,958 --> 00:11:09,199
right

264
00:11:12,320 --> 00:11:15,839
just helping helping peeps out

265
00:11:16,559 --> 00:11:20,159
so if we look at what this does now we

266
00:11:18,958 --> 00:11:22,319
basically say we need

267
00:11:20,159 --> 00:11:23,759
one because we're trying to get a sign

268
00:11:22,320 --> 00:11:26,160
here this is not

269
00:11:23,759 --> 00:11:27,838
sign or zero which i thought we needed

270
00:11:26,159 --> 00:11:28,639
so now i'm a little weirded out because

271
00:11:27,839 --> 00:11:32,320
i don't know

272
00:11:28,639 --> 00:11:32,319
where that went um

273
00:11:32,958 --> 00:11:43,599
because we had that didn't we like what

274
00:11:35,919 --> 00:11:45,439
happened to signer zero

275
00:11:43,600 --> 00:11:47,440
i'm kind of weirded out about that

276
00:11:45,440 --> 00:11:51,200
because i thought

277
00:11:47,440 --> 00:11:54,000
for sure that you needed to have

278
00:11:51,200 --> 00:11:55,920
the sign for that octahedral where you

279
00:11:54,000 --> 00:12:10,000
did a sine or zero

280
00:11:55,919 --> 00:12:12,799
and maybe we like reorganized the code

281
00:12:10,000 --> 00:12:12,799
did did we

282
00:12:21,440 --> 00:12:25,360
like did we do something else here

283
00:12:23,679 --> 00:12:28,000
because i really just don't

284
00:12:25,360 --> 00:12:28,000
remember

285
00:12:29,120 --> 00:12:33,360
i guess is what we did just say that

286
00:12:31,120 --> 00:12:35,120
sign of is always signer zero

287
00:12:33,360 --> 00:12:36,800
like meaning this just always produces

288
00:12:35,120 --> 00:12:39,200
sine or zero

289
00:12:36,799 --> 00:12:41,278
or something because if that's the case

290
00:12:39,200 --> 00:12:43,278
then this is also wrong

291
00:12:41,278 --> 00:12:44,720
so i'm just i'm just a little confused

292
00:12:43,278 --> 00:12:48,399
like i don't i thought i

293
00:12:44,720 --> 00:12:51,519
i recall the sign of having to be

294
00:12:48,399 --> 00:12:54,480
uh negative one positive one or

295
00:12:51,519 --> 00:12:56,480
zero if the input was actually zero and

296
00:12:54,480 --> 00:13:00,320
i thought that was a requirement

297
00:12:56,480 --> 00:13:04,000
for the octahedral stuff

298
00:13:00,320 --> 00:13:06,800
but maybe i'm misremembering that right

299
00:13:04,000 --> 00:13:08,799
um but but i seem to recall that that

300
00:13:06,799 --> 00:13:12,000
was a thing that happened

301
00:13:08,799 --> 00:13:12,000
right uh

302
00:13:12,559 --> 00:13:19,119
so i i don't i don't love that right um

303
00:13:16,159 --> 00:13:20,000
i i i don't really know what's going on

304
00:13:19,120 --> 00:13:23,440
there

305
00:13:20,000 --> 00:13:25,919
so it would be nice to know uh what was

306
00:13:23,440 --> 00:13:25,920
happening

307
00:13:29,120 --> 00:13:32,320
that's one to go back to the episode

308
00:13:30,799 --> 00:13:33,359
because i know we like we should go back

309
00:13:32,320 --> 00:13:35,760
and watch the video

310
00:13:33,360 --> 00:13:37,839
because i know that that was something

311
00:13:35,759 --> 00:13:40,159
uh that was an issue

312
00:13:37,839 --> 00:13:40,160
and

313
00:13:40,879 --> 00:13:44,480
i just don't really remember

314
00:13:46,159 --> 00:13:49,838
does anyone chat remember

315
00:14:20,320 --> 00:14:24,560
yeah probably no one remembers that's

316
00:14:22,320 --> 00:14:26,160
all right so so this part is weird

317
00:14:24,559 --> 00:14:28,239
and i think we kind of need to take a

318
00:14:26,159 --> 00:14:30,000
look at that so i'm just going to put a

319
00:14:28,240 --> 00:14:34,240
to-do in here which says to

320
00:14:30,000 --> 00:14:37,919
do look

321
00:14:34,240 --> 00:14:41,278
at octahedral code and figure out

322
00:14:37,919 --> 00:14:45,120
if we're actually using sine or

323
00:14:41,278 --> 00:14:49,120
zero uh or sine

324
00:14:45,120 --> 00:14:52,720
of four sine or zero in places

325
00:14:49,120 --> 00:14:56,839
because i don't see a sine or zero and i

326
00:14:52,720 --> 00:14:59,360
feel like i feel like there should be

327
00:14:56,839 --> 00:15:01,820
one um

328
00:14:59,360 --> 00:15:03,360
so yeah

329
00:15:01,820 --> 00:15:07,360
[Music]

330
00:15:03,360 --> 00:15:07,360
what else do we need to do okay so

331
00:15:07,440 --> 00:15:13,839
it looks like these are only in ps land

332
00:15:16,159 --> 00:15:21,600
okay so in this case we've now

333
00:15:19,759 --> 00:15:23,439
got a sign of that should probably be

334
00:15:21,600 --> 00:15:24,959
more correct let's take a look at it

335
00:15:23,440 --> 00:15:26,720
really carefully to make sure

336
00:15:24,958 --> 00:15:28,638
and we can also step through it to see

337
00:15:26,720 --> 00:15:30,480
if we've got it uh working a little bit

338
00:15:28,639 --> 00:15:33,600
better than it was before

339
00:15:30,480 --> 00:15:36,399
so in here we have the mask which

340
00:15:33,600 --> 00:15:36,720
is just this like mask u32 with the high

341
00:15:36,399 --> 00:15:39,360
bit

342
00:15:36,720 --> 00:15:40,320
set right we then have a one that we

343
00:15:39,360 --> 00:15:43,519
load

344
00:15:40,320 --> 00:15:46,959
we and the mask with

345
00:15:43,519 --> 00:15:48,799
the value that you pass in which the

346
00:15:46,958 --> 00:15:50,399
mask is all zeros except for the sign

347
00:15:48,799 --> 00:15:51,679
bit so that should leave us with just

348
00:15:50,399 --> 00:15:54,159
the sign bit

349
00:15:51,679 --> 00:15:55,838
that was passed in right so just the

350
00:15:54,159 --> 00:15:58,958
sign bit of whatever this is

351
00:15:55,839 --> 00:15:59,519
we then combine that by oring it in to

352
00:15:58,958 --> 00:16:01,278
the one

353
00:15:59,519 --> 00:16:03,360
so we flip the signs of the one

354
00:16:01,278 --> 00:16:04,078
basically based on where they were

355
00:16:03,360 --> 00:16:05,839
flipped

356
00:16:04,078 --> 00:16:07,198
in here and of course we're only doing

357
00:16:05,839 --> 00:16:08,560
this for one lane right now but we're

358
00:16:07,198 --> 00:16:09,679
going to have it for the four lanes as

359
00:16:08,559 --> 00:16:11,439
well

360
00:16:09,679 --> 00:16:15,679
and then we like extract the value back

361
00:16:11,440 --> 00:16:23,839
out now there's another sign of function

362
00:16:15,679 --> 00:16:23,838
there's one uh

363
00:16:25,198 --> 00:16:36,078
uh it would be nice if these showed the

364
00:16:29,519 --> 00:16:39,679
where they are in the files

365
00:16:36,078 --> 00:16:42,559
yeah um so here's the same function

366
00:16:39,679 --> 00:16:43,198
right and so we can if we want to uh

367
00:16:42,559 --> 00:16:45,838
just

368
00:16:43,198 --> 00:16:46,799
change this one to basically be the

369
00:16:45,839 --> 00:16:50,079
exact same thing

370
00:16:46,799 --> 00:16:53,439
only instead of ever there being a ss

371
00:16:50,078 --> 00:16:57,278
it's just a ps everywhere um

372
00:16:53,440 --> 00:16:57,279
and i think

373
00:16:59,120 --> 00:17:05,838
that is the whole of it i think

374
00:17:11,038 --> 00:17:18,078
sign bit and ps and i'm set ss

375
00:17:15,038 --> 00:17:20,798
value dot p

376
00:17:18,078 --> 00:17:22,159
um what is the problem cannot convert

377
00:17:20,798 --> 00:17:25,759
argument 1

378
00:17:22,160 --> 00:17:25,759
from mn128 to float

379
00:17:30,160 --> 00:17:34,960
there we go so

380
00:17:33,200 --> 00:17:37,400
i think this should be the equivalent

381
00:17:34,960 --> 00:17:38,798
for it in four wide for our little

382
00:17:37,400 --> 00:17:41,840
f32s4x

383
00:17:38,798 --> 00:17:46,000
there so this will do the the

384
00:17:41,839 --> 00:17:49,279
correct sign i believe um

385
00:17:46,000 --> 00:17:52,480
and here's sign bit from

386
00:17:49,279 --> 00:17:54,639
i don't know why synov isn't just using

387
00:17:52,480 --> 00:17:59,759
those those were written correctly

388
00:17:54,640 --> 00:17:59,759
um as you can see here so

389
00:18:04,000 --> 00:18:07,599
anyway so we could just have this call

390
00:18:06,798 --> 00:18:10,480
sign bit from

391
00:18:07,599 --> 00:18:12,399
in fact maybe that's more sensible right

392
00:18:10,480 --> 00:18:14,880
like right here we could just say

393
00:18:12,400 --> 00:18:15,840
well we just need the sign bit so we

394
00:18:14,880 --> 00:18:20,799
just say

395
00:18:15,839 --> 00:18:22,399
sign bit from like so

396
00:18:20,798 --> 00:18:24,160
and that gives us the sign bit so we

397
00:18:22,400 --> 00:18:27,200
just order the sign bit

398
00:18:24,160 --> 00:18:27,200
with one

399
00:18:27,519 --> 00:18:29,839
right

400
00:18:32,558 --> 00:18:35,678
and that's the result

401
00:18:38,480 --> 00:18:43,919
probably i also don't know

402
00:18:41,599 --> 00:18:46,399
like do we just have an operator or

403
00:18:43,919 --> 00:18:46,400
anyway

404
00:18:49,919 --> 00:18:54,880
we do so really you could just write

405
00:18:53,119 --> 00:18:57,439
this

406
00:18:54,880 --> 00:18:58,640
just directly so the other thing we

407
00:18:57,440 --> 00:19:04,080
could do is just say

408
00:18:58,640 --> 00:19:04,080
oh like actually the result is just

409
00:19:08,839 --> 00:19:11,839
this

410
00:19:18,960 --> 00:19:23,360
and i don't know what we have for set

411
00:19:21,440 --> 00:19:27,919
calls in this particular world

412
00:19:23,359 --> 00:19:31,519
but um yeah so it's just this right

413
00:19:27,919 --> 00:19:34,240
oops so we could just

414
00:19:31,519 --> 00:19:35,038
do that um where we load a one and then

415
00:19:34,240 --> 00:19:39,038
we or

416
00:19:35,038 --> 00:19:42,960
the sign bit um

417
00:19:39,038 --> 00:19:44,879
oops i gotta work on the

418
00:19:42,960 --> 00:19:46,640
the new four coder thing doesn't do

419
00:19:44,880 --> 00:19:48,799
tokens the way i expect

420
00:19:46,640 --> 00:19:51,280
i have to go figure out how to fix that

421
00:19:48,798 --> 00:19:54,319
not sure how

422
00:19:51,279 --> 00:19:55,359
anyway um so i think that would

423
00:19:54,319 --> 00:19:57,678
basically do it

424
00:19:55,359 --> 00:19:58,719
and in theory if we run this now we

425
00:19:57,679 --> 00:20:01,440
presumably

426
00:19:58,720 --> 00:20:02,079
won't really get because since we

427
00:20:01,440 --> 00:20:04,000
weren't

428
00:20:02,079 --> 00:20:07,038
super able to perceive that error to

429
00:20:04,000 --> 00:20:08,319
begin with um running it or not running

430
00:20:07,038 --> 00:20:11,519
it is not really going to tell us

431
00:20:08,319 --> 00:20:15,439
anything um anyway

432
00:20:11,519 --> 00:20:17,440
uh but you know we can at least verify

433
00:20:15,440 --> 00:20:18,159
that things didn't completely destroy

434
00:20:17,440 --> 00:20:21,840
themselves

435
00:20:18,159 --> 00:20:21,840
right um

436
00:20:22,159 --> 00:20:26,960
so that all seems fine

437
00:20:25,200 --> 00:20:28,798
right this looks like it's running the

438
00:20:26,960 --> 00:20:32,159
way that it was before

439
00:20:28,798 --> 00:20:36,879
um unfortunately we don't really

440
00:20:32,159 --> 00:20:38,400
have a way of looking at this code

441
00:20:36,880 --> 00:20:41,440
you know we don't have a way of like

442
00:20:38,400 --> 00:20:43,759
reproducing our our release lighting bug

443
00:20:41,440 --> 00:20:46,159
so um there was some question as to

444
00:20:43,759 --> 00:20:49,440
whether fixing the sign

445
00:20:46,159 --> 00:20:51,919
bit error would actually fix the

446
00:20:49,440 --> 00:20:53,360
lighting bug that we were encountering

447
00:20:51,919 --> 00:20:55,679
and the answer to that

448
00:20:53,359 --> 00:20:57,759
is that we just don't know right i mean

449
00:20:55,679 --> 00:20:58,320
we hadn't tracked down that bug yet so

450
00:20:57,759 --> 00:21:00,839
we don't

451
00:20:58,319 --> 00:21:02,399
actually know um we don't have any

452
00:21:00,839 --> 00:21:05,359
expectation of

453
00:21:02,400 --> 00:21:07,120
whether or not that would fix it uh so

454
00:21:05,359 --> 00:21:10,000
so i'm sorry unfortunately i can't

455
00:21:07,119 --> 00:21:11,119
there's no real way to reliably provoke

456
00:21:10,000 --> 00:21:14,159
that bug

457
00:21:11,119 --> 00:21:15,279
um it's entirely possible that it was

458
00:21:14,159 --> 00:21:16,480
because of that

459
00:21:15,279 --> 00:21:18,399
like there was something that was

460
00:21:16,480 --> 00:21:19,679
writing garbage in somewhere or who

461
00:21:18,400 --> 00:21:21,759
knows what

462
00:21:19,679 --> 00:21:23,840
um as a result of that code being

463
00:21:21,759 --> 00:21:25,839
totally uh wrong

464
00:21:23,839 --> 00:21:27,439
but uh we don't have a way of

465
00:21:25,839 --> 00:21:28,158
specifically provoking that bug at the

466
00:21:27,440 --> 00:21:30,558
moment

467
00:21:28,159 --> 00:21:31,840
so unfortunately we can't release we we

468
00:21:30,558 --> 00:21:36,158
just don't know

469
00:21:31,839 --> 00:21:39,359
so we're gonna have to still look at um

470
00:21:36,159 --> 00:21:41,679
uh at that and see uh

471
00:21:39,359 --> 00:21:42,479
but you know that's just yeah that's

472
00:21:41,679 --> 00:21:46,080
just where we're at

473
00:21:42,480 --> 00:21:48,558
at the moment uh so yeah thank you for

474
00:21:46,079 --> 00:21:50,319
reporting that in i'm going to go take a

475
00:21:48,558 --> 00:21:51,440
quick second to just look through that

476
00:21:50,319 --> 00:21:52,960
code

477
00:21:51,440 --> 00:21:54,720
and make sure that it's now doing

478
00:21:52,960 --> 00:21:56,079
something sensible because we know that

479
00:21:54,720 --> 00:21:58,079
it was wrong

480
00:21:56,079 --> 00:22:00,000
and we just kind of slapped in a fix for

481
00:21:58,079 --> 00:22:02,879
it so i'd like to just make sure

482
00:22:00,000 --> 00:22:03,359
uh that it's actually correct uh at some

483
00:22:02,880 --> 00:22:05,039
point

484
00:22:03,359 --> 00:22:06,719
or at least like step through it at

485
00:22:05,038 --> 00:22:07,679
least once to give myself a little bit

486
00:22:06,720 --> 00:22:10,880
more

487
00:22:07,679 --> 00:22:14,080
uh confidence that we actually fixed it

488
00:22:10,880 --> 00:22:15,919
and yeah so the lighting the retail

489
00:22:14,079 --> 00:22:17,119
lighting bug that we were having before

490
00:22:15,919 --> 00:22:21,520
is not

491
00:22:17,119 --> 00:22:21,519
there at the moment um let me look

492
00:22:23,359 --> 00:22:26,639
so the spec valid diffuse valve thing

493
00:22:25,279 --> 00:22:28,558
though still

494
00:22:26,640 --> 00:22:29,679
is a bit weird it looks like that was

495
00:22:28,558 --> 00:22:33,440
still set to

496
00:22:29,679 --> 00:22:36,080
um bogus values there

497
00:22:33,440 --> 00:22:37,360
see there there's like spec valid

498
00:22:36,079 --> 00:22:39,918
diffuse valid

499
00:22:37,359 --> 00:22:41,439
are both zero and they both knock on to

500
00:22:39,919 --> 00:22:43,919
one as we move

501
00:22:41,440 --> 00:22:44,640
so i think there's probably still issues

502
00:22:43,919 --> 00:22:48,080
there

503
00:22:44,640 --> 00:22:50,480
um like there may be a situation

504
00:22:48,079 --> 00:22:51,918
for example where we're i think we have

505
00:22:50,480 --> 00:22:53,360
a situation where we're not like

506
00:22:51,919 --> 00:22:54,480
clearing the lighting because remember

507
00:22:53,359 --> 00:22:56,319
we're trying to be

508
00:22:54,480 --> 00:22:58,319
pretty minimal here there's not a lot of

509
00:22:56,319 --> 00:23:00,879
safeguards in the lighting code because

510
00:22:58,319 --> 00:23:02,639
it's trying to be performance oriented

511
00:23:00,880 --> 00:23:04,000
and so we don't have the luxury of doing

512
00:23:02,640 --> 00:23:05,280
a lot of like clearing or

513
00:23:04,000 --> 00:23:06,798
you know things where we're spending

514
00:23:05,279 --> 00:23:08,079
extra cpu time to make sure we don't

515
00:23:06,798 --> 00:23:09,440
have stupid errors

516
00:23:08,079 --> 00:23:10,639
we don't really have the luxury of doing

517
00:23:09,440 --> 00:23:12,480
that right everything's got to be kind

518
00:23:10,640 --> 00:23:15,759
of a little bit bare bones

519
00:23:12,480 --> 00:23:18,880
um so given that given that uh

520
00:23:15,759 --> 00:23:20,319
fact uh i i still

521
00:23:18,880 --> 00:23:22,000
i still yeah there we go i'm like i

522
00:23:20,319 --> 00:23:23,918
still suspect the bug is there we just

523
00:23:22,000 --> 00:23:24,960
can't provoke it uh and so there you go

524
00:23:23,919 --> 00:23:27,280
right

525
00:23:24,960 --> 00:23:28,079
and so i think that we still should keep

526
00:23:27,279 --> 00:23:30,639
looking for that

527
00:23:28,079 --> 00:23:32,558
error uh and i think there's uh there's

528
00:23:30,640 --> 00:23:35,600
some issues there right

529
00:23:32,558 --> 00:23:38,480
now we may and i don't know

530
00:23:35,599 --> 00:23:39,119
but we may have gotten a quality

531
00:23:38,480 --> 00:23:43,440
improvement

532
00:23:39,119 --> 00:23:44,879
as well uh oh check that out

533
00:23:43,440 --> 00:23:47,200
look at there's the bug in like a

534
00:23:44,880 --> 00:23:48,960
localized way right

535
00:23:47,200 --> 00:23:50,640
um we may have gotten a quality

536
00:23:48,960 --> 00:23:51,038
improvement from fixing that sign bug

537
00:23:50,640 --> 00:23:54,320
like

538
00:23:51,038 --> 00:23:56,240
probably what happened like we could go

539
00:23:54,319 --> 00:23:57,678
back and compare by like flipping the

540
00:23:56,240 --> 00:24:01,120
sign thing back to

541
00:23:57,679 --> 00:24:04,400
to being wrong but uh

542
00:24:01,119 --> 00:24:05,038
we probably got better like more uniform

543
00:24:04,400 --> 00:24:06,559
lighting

544
00:24:05,038 --> 00:24:08,798
or something you can see that they're

545
00:24:06,558 --> 00:24:10,158
still kind of it kind of feels a little

546
00:24:08,798 --> 00:24:11,359
bit like there might still be some bugs

547
00:24:10,159 --> 00:24:12,880
in there we haven't really done a

548
00:24:11,359 --> 00:24:15,439
careful pass on lighting

549
00:24:12,880 --> 00:24:16,960
but we probably had some asymmetry that

550
00:24:15,440 --> 00:24:18,080
was getting introduced by that sign

551
00:24:16,960 --> 00:24:20,558
being wrong

552
00:24:18,079 --> 00:24:21,119
and by fixing it we presumably got a

553
00:24:20,558 --> 00:24:24,240
more

554
00:24:21,119 --> 00:24:26,558
correct distribution of the light right

555
00:24:24,240 --> 00:24:27,278
so that presumably happened but you know

556
00:24:26,558 --> 00:24:28,720
we

557
00:24:27,278 --> 00:24:30,480
uh like i said we were just trying to

558
00:24:28,720 --> 00:24:32,000
fix that but we weren't really trying to

559
00:24:30,480 --> 00:24:33,519
improve the lighting quality that

560
00:24:32,000 --> 00:24:34,798
may have just been a byproduct that

561
00:24:33,519 --> 00:24:36,319
happened because that bug would have

562
00:24:34,798 --> 00:24:37,519
been making things worse

563
00:24:36,319 --> 00:24:47,839
right would have been making the

564
00:24:37,519 --> 00:24:47,839
lighting look worse um

565
00:24:52,640 --> 00:24:56,000
similarly like we have very boxy

566
00:24:54,798 --> 00:24:56,558
interpolation of the lighting right now

567
00:24:56,000 --> 00:24:58,079
which i

568
00:24:56,558 --> 00:24:59,599
wanted to fix for a while uh but that

569
00:24:58,079 --> 00:25:00,000
sort of separates you i don't know where

570
00:24:59,599 --> 00:25:02,000
it's coming

571
00:25:00,000 --> 00:25:04,159
from is the problem like obviously it's

572
00:25:02,000 --> 00:25:07,200
coming from the fact that we interpolate

573
00:25:04,159 --> 00:25:10,240
uh the lighting based on uh

574
00:25:07,200 --> 00:25:14,080
the like cube boundaries there but

575
00:25:10,240 --> 00:25:16,480
it it probably shouldn't quite look like

576
00:25:14,079 --> 00:25:17,918
that right um and so that's kind of

577
00:25:16,480 --> 00:25:18,319
another thing but that's separate so

578
00:25:17,919 --> 00:25:19,440
we'd

579
00:25:18,319 --> 00:25:21,038
have plenty of lighting quality things

580
00:25:19,440 --> 00:25:21,519
to do for right now i want to look at

581
00:25:21,038 --> 00:25:23,759
that

582
00:25:21,519 --> 00:25:25,038
right you can see you get these weird

583
00:25:23,759 --> 00:25:26,480
artifacts that come in

584
00:25:25,038 --> 00:25:28,158
and we just have no idea where they're

585
00:25:26,480 --> 00:25:31,278
coming from

586
00:25:28,159 --> 00:25:32,799
so what i'd like to do is get a uh just

587
00:25:31,278 --> 00:25:34,558
spend the rest of the day seeing if we

588
00:25:32,798 --> 00:25:38,319
can get a better

589
00:25:34,558 --> 00:25:40,960
uh way of looking at

590
00:25:38,319 --> 00:25:42,558
the state of the light map so that we

591
00:25:40,960 --> 00:25:43,519
can figure out where those values are

592
00:25:42,558 --> 00:25:45,038
coming from

593
00:25:43,519 --> 00:25:46,720
right just just some idea of where

594
00:25:45,038 --> 00:25:48,879
they're coming from and i

595
00:25:46,720 --> 00:25:51,440
think that it only happens in release

596
00:25:48,880 --> 00:25:54,559
mode so

597
00:25:51,440 --> 00:25:55,038
for whatever reason um if this is set to

598
00:25:54,558 --> 00:25:57,759
od

599
00:25:55,038 --> 00:25:58,720
we we don't really see it happen as much

600
00:25:57,759 --> 00:26:01,038
but

601
00:25:58,720 --> 00:26:01,919
uh to be fair that may just be because

602
00:26:01,038 --> 00:26:04,480
we don't run

603
00:26:01,919 --> 00:26:05,520
enough frame like you know the debug

604
00:26:04,480 --> 00:26:07,440
mode is very slow

605
00:26:05,519 --> 00:26:10,480
because the lighting is slow in debug

606
00:26:07,440 --> 00:26:13,200
mode um and so it may just be

607
00:26:10,480 --> 00:26:13,599
like that you it's hard to provoke

608
00:26:13,200 --> 00:26:16,640
because

609
00:26:13,599 --> 00:26:18,480
you need it to run you know fast to run

610
00:26:16,640 --> 00:26:22,400
enough frames to hit the bug

611
00:26:18,480 --> 00:26:26,159
because it's periodic right so

612
00:26:22,400 --> 00:26:28,480
i think that's kind of you know

613
00:26:26,159 --> 00:26:30,720
uh i don't want to put too much stock in

614
00:26:28,480 --> 00:26:30,720
that

615
00:26:36,839 --> 00:26:39,839
uh

616
00:26:45,679 --> 00:26:49,278
i mean you know it's because it looks

617
00:26:48,159 --> 00:26:51,760
like the lighting

618
00:26:49,278 --> 00:26:53,519
basically looks the same in both modes i

619
00:26:51,759 --> 00:26:54,319
i don't see like a lot of difference

620
00:26:53,519 --> 00:26:58,960
between them

621
00:26:54,319 --> 00:26:58,960
which is why i'm not really sure

622
00:27:03,359 --> 00:27:06,639
is the spec valid diffuse valid does

623
00:27:05,440 --> 00:27:09,440
that happen in

624
00:27:06,640 --> 00:27:21,840
in debug mode the same way as well would

625
00:27:09,440 --> 00:27:21,840
be another question

626
00:27:27,519 --> 00:27:30,879
you can see those like spec valid

627
00:27:29,119 --> 00:27:35,918
diffuse valid values

628
00:27:30,880 --> 00:27:35,919
are not wrong um

629
00:27:38,159 --> 00:27:42,399
and like it sure so that it's a bit

630
00:27:41,359 --> 00:27:46,158
troubling because

631
00:27:42,398 --> 00:27:49,599
you know if i if i set it to o2

632
00:27:46,159 --> 00:27:51,760
like yes the the bug uh

633
00:27:49,599 --> 00:27:53,038
isn't immediate like like we don't see

634
00:27:51,759 --> 00:27:57,440
the bug immediately

635
00:27:53,038 --> 00:27:57,440
but like those values start out at zero

636
00:28:00,839 --> 00:28:03,839
right

637
00:28:11,919 --> 00:28:15,919
so i would like to know what's going on

638
00:28:13,839 --> 00:28:17,599
there uh and so i want to take a look

639
00:28:15,919 --> 00:28:19,520
and see like is there something weird

640
00:28:17,599 --> 00:28:20,398
going on that is not what i would expect

641
00:28:19,519 --> 00:28:22,158
to have happen

642
00:28:20,398 --> 00:28:24,239
like how are those how are we getting

643
00:28:22,159 --> 00:28:27,760
those values um

644
00:28:24,240 --> 00:28:27,759
written in their wrong and so

645
00:28:29,200 --> 00:28:32,798
i want to go ahead and look at the light

646
00:28:30,880 --> 00:28:35,919
atlas like here's the code

647
00:28:32,798 --> 00:28:38,960
um in validate atlas

648
00:28:35,919 --> 00:28:40,880
that that tells us when a texel is is

649
00:28:38,960 --> 00:28:44,240
wrong or whatever right

650
00:28:40,880 --> 00:28:47,360
and so what i'd probably like to do here

651
00:28:44,240 --> 00:28:49,440
is just have the validate like like

652
00:28:47,359 --> 00:28:50,719
i'd like to have a thing that validates

653
00:28:49,440 --> 00:28:52,000
texels

654
00:28:50,720 --> 00:28:53,839
this is just checking to see if they're

655
00:28:52,000 --> 00:28:55,919
negative right um

656
00:28:53,839 --> 00:28:57,038
and they really never should be so i'm

657
00:28:55,919 --> 00:29:02,240
just gonna do here

658
00:28:57,038 --> 00:29:02,240
a validate pexel

659
00:29:02,960 --> 00:29:07,038
and i'm going to have a texel that you

660
00:29:05,839 --> 00:29:10,079
pass in here

661
00:29:07,038 --> 00:29:13,839
and i'm going to put this code as

662
00:29:10,079 --> 00:29:13,839
validate texel

663
00:29:14,159 --> 00:29:16,480
um

664
00:29:19,679 --> 00:29:27,440
like so and i'm going to put that

665
00:29:24,640 --> 00:29:28,399
in a way that we can call it on a single

666
00:29:27,440 --> 00:29:33,759
texel

667
00:29:28,398 --> 00:29:33,759
uh elsewhere in the code actually let's

668
00:29:34,398 --> 00:29:38,158
do this why does it do that so the

669
00:29:37,278 --> 00:29:41,359
indentation

670
00:29:38,159 --> 00:29:43,039
in yeah uh i want that may have been

671
00:29:41,359 --> 00:29:44,398
fixed i have to update the four coder as

672
00:29:43,038 --> 00:29:46,079
well i i should i should do that like

673
00:29:44,398 --> 00:29:47,038
after stream today we should like update

674
00:29:46,079 --> 00:29:48,960
our for coder

675
00:29:47,038 --> 00:29:50,480
and the new four quarter flurry and then

676
00:29:48,960 --> 00:29:51,200
send the things that are still not

677
00:29:50,480 --> 00:29:52,960
working to

678
00:29:51,200 --> 00:29:54,880
ryan and alan just to see what the

679
00:29:52,960 --> 00:29:58,798
status is um

680
00:29:54,880 --> 00:29:58,799
on that uh yeah

681
00:29:59,440 --> 00:30:06,558
okay um so let's go ahead and do this

682
00:30:03,278 --> 00:30:09,839
and see what happens here

683
00:30:06,558 --> 00:30:09,839
this is oops

684
00:30:11,679 --> 00:30:18,399
this is more correctly written as suchly

685
00:30:15,919 --> 00:30:20,720
so what i now need to do is this

686
00:30:18,398 --> 00:30:22,639
validate texel call here i want to be

687
00:30:20,720 --> 00:30:26,720
able to do that any time that we're like

688
00:30:22,640 --> 00:30:29,120
writing new texels so like for example

689
00:30:26,720 --> 00:30:31,839
in here you can see this block copy

690
00:30:29,119 --> 00:30:34,558
thing where we do like copy tile or zero

691
00:30:31,839 --> 00:30:34,558
tile right

692
00:30:34,839 --> 00:30:41,278
um we could

693
00:30:37,119 --> 00:30:43,759
put in a stopper here for example uh

694
00:30:41,278 --> 00:30:44,720
in fact that seems like a good idea uh

695
00:30:43,759 --> 00:30:46,480
now that i think about it

696
00:30:44,720 --> 00:30:48,079
so we've got this validate atlas thing

697
00:30:46,480 --> 00:30:51,278
maybe one thing we'll do here

698
00:30:48,079 --> 00:30:54,798
is like i'll put in a uh

699
00:30:51,278 --> 00:30:59,278
some assertions so like when we do

700
00:30:54,798 --> 00:31:05,839
block copy atlas i will do like a

701
00:30:59,278 --> 00:31:05,839
um assert

702
00:31:06,480 --> 00:31:10,480
so this is just going to be an assertion

703
00:31:08,798 --> 00:31:13,038
like in and out

704
00:31:10,480 --> 00:31:14,720
so what this will tell me is just does

705
00:31:13,038 --> 00:31:19,839
the block copy

706
00:31:14,720 --> 00:31:22,960
ever like screw up the atlas

707
00:31:19,839 --> 00:31:24,798
um and so what we can see here is that

708
00:31:22,960 --> 00:31:26,640
like i put one at the top and one at the

709
00:31:24,798 --> 00:31:26,960
bottom and the reason for that was to

710
00:31:26,640 --> 00:31:29,360
see

711
00:31:26,960 --> 00:31:30,000
if it ever screwed up the atlas and what

712
00:31:29,359 --> 00:31:32,079
you can see

713
00:31:30,000 --> 00:31:34,079
is that we're hitting the top one which

714
00:31:32,079 --> 00:31:36,158
means that block copy atlas

715
00:31:34,079 --> 00:31:38,240
was not implicated this time around

716
00:31:36,159 --> 00:31:40,240
somebody else

717
00:31:38,240 --> 00:31:42,240
was the reason why like somebody's

718
00:31:40,240 --> 00:31:46,000
passing it in

719
00:31:42,240 --> 00:31:50,558
uh it had already been mucked up

720
00:31:46,000 --> 00:31:52,398
right block copy atlas didn't muck it up

721
00:31:50,558 --> 00:31:54,000
and if we run this multiple times it's

722
00:31:52,398 --> 00:31:55,038
actually kind of nice because we can see

723
00:31:54,000 --> 00:31:57,599
that it just happens

724
00:31:55,038 --> 00:32:00,720
every time right or well not i guess not

725
00:31:57,599 --> 00:32:03,918
quite every time

726
00:32:00,720 --> 00:32:07,120
it happens often right

727
00:32:03,919 --> 00:32:10,799
so often when we run through there uh

728
00:32:07,119 --> 00:32:13,439
we we will hit that validation fail

729
00:32:10,798 --> 00:32:15,119
that means i can more or less leave this

730
00:32:13,440 --> 00:32:17,278
routine out for now

731
00:32:15,119 --> 00:32:18,879
uh meaning i don't have to worry like if

732
00:32:17,278 --> 00:32:20,640
this thing is

733
00:32:18,880 --> 00:32:22,320
like what's corrupting it because we now

734
00:32:20,640 --> 00:32:25,120
know it's happening

735
00:32:22,319 --> 00:32:25,599
uh before it ever does the block copy

736
00:32:25,119 --> 00:32:28,479
atlas

737
00:32:25,599 --> 00:32:28,959
for whatever frame the first frame is

738
00:32:28,480 --> 00:32:32,079
that

739
00:32:28,960 --> 00:32:32,798
that gets borked we never saw one where

740
00:32:32,079 --> 00:32:36,639
it came in

741
00:32:32,798 --> 00:32:38,639
okay and then left borked right

742
00:32:36,640 --> 00:32:40,159
so that's helpful because it lets me go

743
00:32:38,640 --> 00:32:43,200
all right let's focus on

744
00:32:40,159 --> 00:32:43,760
somebody else then and uh let's see who

745
00:32:43,200 --> 00:32:46,720
else is

746
00:32:43,759 --> 00:32:48,398
is writing to these right um so when we

747
00:32:46,720 --> 00:32:51,200
make the atlas as well

748
00:32:48,398 --> 00:32:53,119
like you can see here where we do make

749
00:32:51,200 --> 00:32:56,319
light atlas

750
00:32:53,119 --> 00:32:59,199
that doesn't actually set the

751
00:32:56,319 --> 00:33:00,639
uh atlas texels when we actually go to

752
00:32:59,200 --> 00:33:03,919
set the light access

753
00:33:00,640 --> 00:33:06,399
texels we could validate the atlas there

754
00:33:03,919 --> 00:33:07,360
um and that is just something we might

755
00:33:06,398 --> 00:33:09,839
as well do

756
00:33:07,359 --> 00:33:11,678
um for you know just to make sure that

757
00:33:09,839 --> 00:33:13,918
it's set to zeros to begin with and you

758
00:33:11,679 --> 00:33:16,880
can see that like that just does not

759
00:33:13,919 --> 00:33:18,640
trigger any problems right so we're

760
00:33:16,880 --> 00:33:20,720
pretty sure we're starting up with valid

761
00:33:18,640 --> 00:33:25,840
we could leave that one in there in fact

762
00:33:20,720 --> 00:33:25,839
if we want to

763
00:33:30,558 --> 00:33:33,759
all right uh and what's going on with

764
00:33:32,079 --> 00:33:35,918
our light atlas assert right now

765
00:33:33,759 --> 00:33:37,919
so the light atlas start is even defined

766
00:33:35,919 --> 00:33:39,360
in in fact i could just go ahead and put

767
00:33:37,919 --> 00:33:42,000
these in there

768
00:33:39,359 --> 00:33:43,359
and then we could define it out right we

769
00:33:42,000 --> 00:33:44,880
have to remember to actually do that so

770
00:33:43,359 --> 00:33:47,759
our light atlas actually has a bunch of

771
00:33:44,880 --> 00:33:51,440
assertions it shouldn't have

772
00:33:47,759 --> 00:33:54,720
all right so we can put in some of these

773
00:33:51,440 --> 00:33:57,120
like we can put in these calls uh

774
00:33:54,720 --> 00:33:58,798
like to just do light atlas asserts that

775
00:33:57,119 --> 00:34:02,319
we'll then turn off

776
00:33:58,798 --> 00:34:03,599
at the end right so here's us doing a

777
00:34:02,319 --> 00:34:05,439
bunch of validation

778
00:34:03,599 --> 00:34:06,959
and we think we should basically

779
00:34:05,440 --> 00:34:08,878
determine you know

780
00:34:06,960 --> 00:34:11,440
from that that the light atlas code

781
00:34:08,878 --> 00:34:15,440
itself is not causing the problem here

782
00:34:11,440 --> 00:34:21,838
and that when we do cause the problem uh

783
00:34:15,440 --> 00:34:21,838
wait how did that not happen

784
00:34:26,320 --> 00:34:29,440
like is this not working or something

785
00:34:28,480 --> 00:34:35,838
that should have

786
00:34:29,440 --> 00:34:35,838
triggered right we just saw it happen

787
00:34:41,119 --> 00:34:49,838
what's going on

788
00:34:52,639 --> 00:34:56,170
okay

789
00:34:53,039 --> 00:34:56,170
[Music]

790
00:35:00,320 --> 00:35:04,320
that should be the exact same code right

791
00:35:09,519 --> 00:35:12,800
very scared right now

792
00:35:15,599 --> 00:35:23,760
okay so it was just the fact that

793
00:35:19,358 --> 00:35:26,319
it just didn't happen to do it that okay

794
00:35:23,760 --> 00:35:27,200
whoo i thought for i'm like what is

795
00:35:26,320 --> 00:35:29,519
going on

796
00:35:27,199 --> 00:35:30,799
okay so in theory that should be fine

797
00:35:29,519 --> 00:35:33,920
now

798
00:35:30,800 --> 00:35:40,000
so now what i want to do is try

799
00:35:33,920 --> 00:35:40,000
to find a uh a i want to try and like

800
00:35:40,159 --> 00:35:43,358
when i look at problems like this where

801
00:35:42,000 --> 00:35:44,079
i just don't have any idea what's going

802
00:35:43,358 --> 00:35:48,239
on right so

803
00:35:44,079 --> 00:35:51,519
so so if i'm approaching a bug

804
00:35:48,239 --> 00:35:53,598
and i don't have a theory like

805
00:35:51,519 --> 00:35:54,639
i'm not testing there's no hypothesis

806
00:35:53,599 --> 00:35:56,320
it's just a bug

807
00:35:54,639 --> 00:35:58,078
i don't know where it comes from i just

808
00:35:56,320 --> 00:36:00,800
know that there's a bogus

809
00:35:58,079 --> 00:36:02,400
value getting in here somehow and i have

810
00:36:00,800 --> 00:36:05,200
no idea how right

811
00:36:02,400 --> 00:36:06,800
it could be a correctly written equation

812
00:36:05,199 --> 00:36:08,319
that was just ill-conceived that

813
00:36:06,800 --> 00:36:11,200
produces bad results

814
00:36:08,320 --> 00:36:11,519
it could be typos in the code it could

815
00:36:11,199 --> 00:36:13,118
be

816
00:36:11,519 --> 00:36:14,480
something like the sign bug where i

817
00:36:13,119 --> 00:36:16,000
thought an instruction did something it

818
00:36:14,480 --> 00:36:16,960
didn't right it could be literally

819
00:36:16,000 --> 00:36:18,800
anything

820
00:36:16,960 --> 00:36:20,559
all i know is that there's a bad value

821
00:36:18,800 --> 00:36:22,480
but i can sort of detect the bad values

822
00:36:20,559 --> 00:36:24,559
by just saying like look

823
00:36:22,480 --> 00:36:26,000
into intuitively speaking i should not

824
00:36:24,559 --> 00:36:29,119
be able to get

825
00:36:26,000 --> 00:36:32,159
negative values into this

826
00:36:29,119 --> 00:36:33,680
uh light atlas but they they clearly are

827
00:36:32,159 --> 00:36:35,519
why don't i just go hunt for negative

828
00:36:33,679 --> 00:36:38,239
values then what i'm doing here is i'm

829
00:36:35,519 --> 00:36:40,880
just thinking of like a set of pincers

830
00:36:38,239 --> 00:36:41,598
basically right and what i'm going to

831
00:36:40,880 --> 00:36:45,039
try and do

832
00:36:41,599 --> 00:36:47,920
is just keep narrowing down the places

833
00:36:45,039 --> 00:36:49,199
where the bug can be by validating the

834
00:36:47,920 --> 00:36:52,240
atlas

835
00:36:49,199 --> 00:36:54,960
in like sections of the code until

836
00:36:52,239 --> 00:36:55,439
i find a place where when i enter the

837
00:36:54,960 --> 00:36:57,838
code

838
00:36:55,440 --> 00:36:59,039
it validates and when i exit the code it

839
00:36:57,838 --> 00:37:00,639
doesn't validate

840
00:36:59,039 --> 00:37:02,559
and i'm going to keep closing those

841
00:37:00,639 --> 00:37:04,559
pincers in until i zero

842
00:37:02,559 --> 00:37:05,759
in on the block of code that actually is

843
00:37:04,559 --> 00:37:08,960
causing the problem

844
00:37:05,760 --> 00:37:12,000
right and so by doing that

845
00:37:08,960 --> 00:37:14,240
i'm hoping that we will be able to

846
00:37:12,000 --> 00:37:15,280
narrow down our search before we start

847
00:37:14,239 --> 00:37:17,519
looking at code

848
00:37:15,280 --> 00:37:18,480
because otherwise it's just like it

849
00:37:17,519 --> 00:37:21,920
completely

850
00:37:18,480 --> 00:37:23,519
like i have no real way of pinpointing

851
00:37:21,920 --> 00:37:24,000
anything in the code because any of the

852
00:37:23,519 --> 00:37:25,759
code

853
00:37:24,000 --> 00:37:28,159
in the entire lighting update could be

854
00:37:25,760 --> 00:37:29,920
wrong and so i want to keep trying to

855
00:37:28,159 --> 00:37:32,000
refine that down as

856
00:37:29,920 --> 00:37:34,079
as small as i can get it because the

857
00:37:32,000 --> 00:37:34,639
smaller i can get those pincers to start

858
00:37:34,079 --> 00:37:37,200
with

859
00:37:34,639 --> 00:37:38,719
the easier time i'll have like debugging

860
00:37:37,199 --> 00:37:41,919
the code

861
00:37:38,719 --> 00:37:43,838
so that's what i'm doing okay so we now

862
00:37:41,920 --> 00:37:45,599
know that if we validate the atlas

863
00:37:43,838 --> 00:37:46,960
we know that we're coming into the block

864
00:37:45,599 --> 00:37:49,119
copy wrong so

865
00:37:46,960 --> 00:37:51,039
we're we're assuming that that means

866
00:37:49,119 --> 00:37:53,200
that like the lighting update itself is

867
00:37:51,039 --> 00:37:54,800
what's writing in the negative values

868
00:37:53,199 --> 00:37:56,719
um and so we can start to look at the

869
00:37:54,800 --> 00:37:58,720
code that actually writes in these

870
00:37:56,719 --> 00:37:59,919
things and you can see here that i

871
00:37:58,719 --> 00:38:02,399
believe

872
00:37:59,920 --> 00:38:04,639
there's only really two places where we

873
00:38:02,400 --> 00:38:04,639
ever

874
00:38:05,119 --> 00:38:08,480
update these things and i can validate

875
00:38:07,119 --> 00:38:11,119
both of them and see

876
00:38:08,480 --> 00:38:12,159
if i get a clean like enter clean exit

877
00:38:11,119 --> 00:38:15,760
dirty

878
00:38:12,159 --> 00:38:18,719
um out of out of those so one of them

879
00:38:15,760 --> 00:38:20,640
is where we update the spec texels right

880
00:38:18,719 --> 00:38:23,519
and the spectexel atlas

881
00:38:20,639 --> 00:38:25,358
uh gets updated in here and i think i

882
00:38:23,519 --> 00:38:27,280
think this is the only place

883
00:38:25,358 --> 00:38:28,799
right so so i think that the only place

884
00:38:27,280 --> 00:38:29,680
the spec atlas gets written to is in

885
00:38:28,800 --> 00:38:30,960
grid rake i mean

886
00:38:29,679 --> 00:38:33,838
other than the block copy we already

887
00:38:30,960 --> 00:38:36,880
looked at the grid raycast

888
00:38:33,838 --> 00:38:38,000
will update the spec texels so every

889
00:38:36,880 --> 00:38:41,519
time we enter

890
00:38:38,000 --> 00:38:44,559
a light atlas texel for spec texel there

891
00:38:41,519 --> 00:38:47,358
so here right

892
00:38:44,559 --> 00:38:48,400
you can see it writing in it loads out

893
00:38:47,358 --> 00:38:51,199
the texel here

894
00:38:48,400 --> 00:38:53,440
and writes the texel here so we should

895
00:38:51,199 --> 00:38:56,879
be able to validate the texel

896
00:38:53,440 --> 00:38:58,639
right there and see very clearly

897
00:38:56,880 --> 00:39:01,358
whether or not the spec texel gets

898
00:38:58,639 --> 00:39:05,358
updated to negative values there

899
00:39:01,358 --> 00:39:08,559
and then even if so we can see if that

900
00:39:05,358 --> 00:39:11,358
enters clean exit sturdy

901
00:39:08,559 --> 00:39:11,679
then we can also look because eve if

902
00:39:11,358 --> 00:39:13,440
that

903
00:39:11,679 --> 00:39:15,598
actually happens there's another thing

904
00:39:13,440 --> 00:39:16,960
we could do is we could validate

905
00:39:15,599 --> 00:39:18,800
the thing we're actually blending

906
00:39:16,960 --> 00:39:20,880
towards right

907
00:39:18,800 --> 00:39:22,240
because it could be that the spectexel

908
00:39:20,880 --> 00:39:25,519
uh that this

909
00:39:22,239 --> 00:39:26,719
the spectexel itself uh is is just

910
00:39:25,519 --> 00:39:28,000
getting blended with like a negative

911
00:39:26,719 --> 00:39:29,039
value and going towards zero

912
00:39:28,000 --> 00:39:32,079
which would mean that it's really just

913
00:39:29,039 --> 00:39:34,159
this code up here that screwed up right

914
00:39:32,079 --> 00:39:35,760
and so on and so forth so we should be

915
00:39:34,159 --> 00:39:36,078
able to validate this code very heavily

916
00:39:35,760 --> 00:39:39,839
now

917
00:39:36,079 --> 00:39:42,720
in addition to that code we also have

918
00:39:39,838 --> 00:39:44,639
um all this other code like here that

919
00:39:42,719 --> 00:39:45,759
does stuff with texels like filling in

920
00:39:44,639 --> 00:39:50,400
the borders of

921
00:39:45,760 --> 00:39:53,839
of places um on the octahedral map

922
00:39:50,400 --> 00:39:57,358
and the thing that takes and blurs out

923
00:39:53,838 --> 00:39:59,119
right the it takes the spec and blurs it

924
00:39:57,358 --> 00:40:01,519
out to produce a diffuse map

925
00:39:59,119 --> 00:40:03,440
so the thing that that basically takes

926
00:40:01,519 --> 00:40:04,800
the spec map and produces a diffuse map

927
00:40:03,440 --> 00:40:08,880
from the spec map

928
00:40:04,800 --> 00:40:11,359
that also uh can be busted

929
00:40:08,880 --> 00:40:13,599
so those are all of our points and we

930
00:40:11,358 --> 00:40:15,199
can really start to narrow this down so

931
00:40:13,599 --> 00:40:18,880
the first thing i'm going to do

932
00:40:15,199 --> 00:40:21,838
is just put in assertions here um

933
00:40:18,880 --> 00:40:26,240
where we're going to do a validate atlas

934
00:40:21,838 --> 00:40:26,239
on the spec atlas and the diffuse atlas

935
00:40:30,000 --> 00:40:34,000
uh and what we should be able to do here

936
00:40:32,079 --> 00:40:37,519
is where we

937
00:40:34,000 --> 00:40:38,880
uh validate these on like the full cast

938
00:40:37,519 --> 00:40:40,639
right this is going to make this code

939
00:40:38,880 --> 00:40:43,039
run very slowly because we keep

940
00:40:40,639 --> 00:40:43,920
uh validating the atlases all the time i

941
00:40:43,039 --> 00:40:45,440
don't care

942
00:40:43,920 --> 00:40:48,318
uh we're just going to validate these

943
00:40:45,440 --> 00:40:49,440
atlases uh multiple times inside here i

944
00:40:48,318 --> 00:40:50,800
should probably also turn off

945
00:40:49,440 --> 00:40:52,559
multithreading to make this a little bit

946
00:40:50,800 --> 00:40:54,079
easier on us

947
00:40:52,559 --> 00:40:56,159
so we'll we'll do that in a second as

948
00:40:54,079 --> 00:40:57,519
well but we'll go ahead and do the full

949
00:40:56,159 --> 00:41:00,480
cast here

950
00:40:57,519 --> 00:41:01,199
and then we'll we'll uh do the blur

951
00:41:00,480 --> 00:41:04,079
update

952
00:41:01,199 --> 00:41:05,199
and uh we'll validate again and then

953
00:41:04,079 --> 00:41:07,599
we'll validate again

954
00:41:05,199 --> 00:41:09,598
right so now we're just validating we're

955
00:41:07,599 --> 00:41:13,760
we're having a validation party

956
00:41:09,599 --> 00:41:15,920
right um konichiwa

957
00:41:13,760 --> 00:41:18,839
validation party sorry i've been

958
00:41:15,920 --> 00:41:21,838
watching a lot of mr yabatan lately

959
00:41:18,838 --> 00:41:21,838
uh

960
00:41:23,920 --> 00:41:28,159
let's see uh so now we're just doing

961
00:41:26,960 --> 00:41:30,000
some stuff

962
00:41:28,159 --> 00:41:31,440
right we're just validating we're

963
00:41:30,000 --> 00:41:34,159
validating a lot

964
00:41:31,440 --> 00:41:34,639
uh and so oh and we're in release mode

965
00:41:34,159 --> 00:41:36,799
right because

966
00:41:34,639 --> 00:41:38,078
we want to be yeah um so we're

967
00:41:36,800 --> 00:41:38,800
validating a lot we're just hoping we

968
00:41:38,079 --> 00:41:41,440
crash somewhere

969
00:41:38,800 --> 00:41:42,960
uh and we do so here you can see us

970
00:41:41,440 --> 00:41:45,039
entering the validation

971
00:41:42,960 --> 00:41:46,318
doing the full cast exiting the

972
00:41:45,039 --> 00:41:47,759
validation

973
00:41:46,318 --> 00:41:49,838
assuming that i didn't screw anything up

974
00:41:47,760 --> 00:41:51,200
here it means that we don't really have

975
00:41:49,838 --> 00:41:54,799
to think about this code

976
00:41:51,199 --> 00:41:57,838
right because we validated the atlas

977
00:41:54,800 --> 00:42:01,039
uh after each of these right

978
00:41:57,838 --> 00:42:04,159
and we know that we entered clean

979
00:42:01,039 --> 00:42:07,920
to full cast and exited dirty

980
00:42:04,159 --> 00:42:09,920
right um so

981
00:42:07,920 --> 00:42:13,039
enter clean exit dirty full cast means

982
00:42:09,920 --> 00:42:15,920
that now i'm just going to assume

983
00:42:13,039 --> 00:42:16,880
for sake of argument that we don't have

984
00:42:15,920 --> 00:42:19,440
to think about

985
00:42:16,880 --> 00:42:20,480
the rest of this code here we can just

986
00:42:19,440 --> 00:42:23,679
focus

987
00:42:20,480 --> 00:42:26,880
on full cast itself and start to look at

988
00:42:23,679 --> 00:42:29,838
problems with that so inside

989
00:42:26,880 --> 00:42:30,400
full cast what i might do since i know

990
00:42:29,838 --> 00:42:32,559
that that

991
00:42:30,400 --> 00:42:33,680
is the case i might just go to full cast

992
00:42:32,559 --> 00:42:36,719
itself

993
00:42:33,679 --> 00:42:37,199
uh full cast is working on a specific

994
00:42:36,719 --> 00:42:41,598
set

995
00:42:37,199 --> 00:42:45,679
of tiles right uh is how this is working

996
00:42:41,599 --> 00:42:48,160
you can see it here as it goes

997
00:42:45,679 --> 00:42:50,399
we assume that since the diffuse atlas

998
00:42:48,159 --> 00:42:53,279
is validated

999
00:42:50,400 --> 00:42:54,639
that it cannot be the source of

1000
00:42:53,280 --> 00:42:57,519
incorrect values

1001
00:42:54,639 --> 00:42:58,239
our reading from it could be broken so

1002
00:42:57,519 --> 00:43:00,239
we could

1003
00:42:58,239 --> 00:43:01,759
end up with incorrect values that we're

1004
00:43:00,239 --> 00:43:04,639
getting because we screw

1005
00:43:01,760 --> 00:43:06,640
up the lookup into the diffuse atlas but

1006
00:43:04,639 --> 00:43:09,679
we've validated the atlas itself

1007
00:43:06,639 --> 00:43:11,759
so it should not actually be producing

1008
00:43:09,679 --> 00:43:12,078
negative values itself it would have to

1009
00:43:11,760 --> 00:43:15,040
be

1010
00:43:12,079 --> 00:43:16,318
our reading from it that was broken but

1011
00:43:15,039 --> 00:43:17,920
let's take a look now at

1012
00:43:16,318 --> 00:43:22,239
every place where these atlases are

1013
00:43:17,920 --> 00:43:25,200
actually used and go from there

1014
00:43:22,239 --> 00:43:26,078
also i don't know why we're passing in

1015
00:43:25,199 --> 00:43:29,279
the tile

1016
00:43:26,079 --> 00:43:31,359
when we also pass in both atlases

1017
00:43:29,280 --> 00:43:34,400
but you know that's just i guess the way

1018
00:43:31,358 --> 00:43:34,400
we wrote this routine

1019
00:43:38,838 --> 00:43:41,838
oops

1020
00:43:43,519 --> 00:43:46,559
i don't know what's going on here

1021
00:43:48,239 --> 00:43:54,399
okay um so what i want to do

1022
00:43:52,079 --> 00:43:55,200
is try to validate now on a texel by

1023
00:43:54,400 --> 00:43:57,920
texa level

1024
00:43:55,199 --> 00:43:59,519
so we can catch specifically what piece

1025
00:43:57,920 --> 00:44:00,880
of code is causing the problem like we

1026
00:43:59,519 --> 00:44:02,880
valid we know that now

1027
00:44:00,880 --> 00:44:04,800
or at least we think we know that inside

1028
00:44:02,880 --> 00:44:08,240
the full cast someone is producing

1029
00:44:04,800 --> 00:44:08,720
negative values right and what we want

1030
00:44:08,239 --> 00:44:11,838
to do

1031
00:44:08,719 --> 00:44:13,679
is we want to take those uh the the

1032
00:44:11,838 --> 00:44:16,559
individual steps as best we can

1033
00:44:13,679 --> 00:44:18,078
and start to see like who's producing uh

1034
00:44:16,559 --> 00:44:19,920
the garbage

1035
00:44:18,079 --> 00:44:21,280
now if we take a look at here you can

1036
00:44:19,920 --> 00:44:23,519
see us doing some stuff

1037
00:44:21,280 --> 00:44:24,640
like looping through these spatial grids

1038
00:44:23,519 --> 00:44:25,838
and so on

1039
00:44:24,639 --> 00:44:27,440
none of this stuff should really be

1040
00:44:25,838 --> 00:44:28,159
implicated because no matter what it

1041
00:44:27,440 --> 00:44:30,159
does

1042
00:44:28,159 --> 00:44:31,759
uh it's it it's just going to produce

1043
00:44:30,159 --> 00:44:34,318
like ray intersections or something

1044
00:44:31,760 --> 00:44:35,760
right so in theory we shouldn't really

1045
00:44:34,318 --> 00:44:37,199
care what's happening here because even

1046
00:44:35,760 --> 00:44:38,000
if this code is completely broken and

1047
00:44:37,199 --> 00:44:41,199
just produces

1048
00:44:38,000 --> 00:44:42,800
totally incorrect uh intersection points

1049
00:44:41,199 --> 00:44:44,318
the lookup code is still supposed to

1050
00:44:42,800 --> 00:44:45,680
work like if you just pass

1051
00:44:44,318 --> 00:44:46,719
a 3d position that you're like what's

1052
00:44:45,679 --> 00:44:48,318
the lighting at this point it's still

1053
00:44:46,719 --> 00:44:48,959
supposed to work no matter what garbage

1054
00:44:48,318 --> 00:44:50,639
you did

1055
00:44:48,960 --> 00:44:52,159
to generate it so we should be able to

1056
00:44:50,639 --> 00:44:55,679
find um

1057
00:44:52,159 --> 00:44:59,440
something i'm looking at what is go chat

1058
00:44:55,679 --> 00:44:59,440
does nobody on the chat speak japanese

1059
00:45:02,838 --> 00:45:05,838
seriously

1060
00:45:06,159 --> 00:45:10,799
nobody on the chat speech job we don't

1061
00:45:07,440 --> 00:45:10,800
have a single japanese viewer

1062
00:45:12,480 --> 00:45:17,199
somebody does somebody does somebody

1063
00:45:15,199 --> 00:45:19,838
said

1064
00:45:17,199 --> 00:45:19,838
right there

1065
00:45:20,559 --> 00:45:26,480
yes excellent

1066
00:45:23,760 --> 00:45:28,720
so those of you who are replying right

1067
00:45:26,480 --> 00:45:28,719
now

1068
00:45:28,800 --> 00:45:33,599
uh who do speak japanese it's 5 30 a.m

1069
00:45:32,400 --> 00:45:35,039
okay good point but there would be

1070
00:45:33,599 --> 00:45:36,800
there'd be japanese people who don't

1071
00:45:35,039 --> 00:45:37,440
necessarily live in japan like or people

1072
00:45:36,800 --> 00:45:41,599
who

1073
00:45:37,440 --> 00:45:44,960
aren't japanese but speak japanese right

1074
00:45:41,599 --> 00:45:48,559
and if you watch mr yabaton you know

1075
00:45:44,960 --> 00:45:51,039
what hontoni bikurista means

1076
00:45:48,559 --> 00:45:52,078
because he says it like in every single

1077
00:45:51,039 --> 00:45:55,199
video

1078
00:45:52,079 --> 00:45:57,839
somebody post a link to mr yabatan

1079
00:45:55,199 --> 00:46:00,318
how good is my japanese is terrible

1080
00:45:57,838 --> 00:46:01,279
absolutely terrible as you could

1081
00:46:00,318 --> 00:46:04,079
probably tell from my

1082
00:46:01,280 --> 00:46:05,040
pronunciation of hanto nibikirishta

1083
00:46:04,079 --> 00:46:08,720
which is probably

1084
00:46:05,039 --> 00:46:11,838
very poorly pronounced um

1085
00:46:08,719 --> 00:46:13,919
somebody post a link to mr yabaton

1086
00:46:11,838 --> 00:46:15,838
like maybe post if someone can while i'm

1087
00:46:13,920 --> 00:46:16,880
typing here post a link to the mr

1088
00:46:15,838 --> 00:46:20,318
yabaton

1089
00:46:16,880 --> 00:46:23,599
where he does a uh he he

1090
00:46:20,318 --> 00:46:27,199
he does like a um hot pot

1091
00:46:23,599 --> 00:46:29,838
with his dad on the phone

1092
00:46:27,199 --> 00:46:29,838
uh

1093
00:46:30,800 --> 00:46:33,920
did you know what i'm talking about

1094
00:46:37,599 --> 00:46:41,599
if someone could post that link mr

1095
00:46:40,719 --> 00:46:43,039
yabaton

1096
00:46:41,599 --> 00:46:44,240
if you don't know who mr yabatan is

1097
00:46:43,039 --> 00:46:46,000
we'll take care of it after the stream

1098
00:46:44,239 --> 00:46:49,039
all right anyway

1099
00:46:46,000 --> 00:46:52,239
uh mr yabatan is great

1100
00:46:49,039 --> 00:46:56,079
um he's like from norway i think

1101
00:46:52,239 --> 00:47:01,358
but he does like japanese videos um

1102
00:46:56,079 --> 00:47:01,359
and and like he makes fun of

1103
00:47:01,679 --> 00:47:04,719
people trying to speak japanese and

1104
00:47:02,960 --> 00:47:08,240
failing actually sometimes i mean

1105
00:47:04,719 --> 00:47:09,519
you'll see it's fine um yeah foreigner

1106
00:47:08,239 --> 00:47:12,159
meets ramen is great

1107
00:47:09,519 --> 00:47:12,960
he in forner meets ramen he actually

1108
00:47:12,159 --> 00:47:16,318
does

1109
00:47:12,960 --> 00:47:18,559
he says he pretends to have like an

1110
00:47:16,318 --> 00:47:19,199
australian accent and does like what it

1111
00:47:18,559 --> 00:47:21,279
sounds like

1112
00:47:19,199 --> 00:47:22,719
when a person with an australian accent

1113
00:47:21,280 --> 00:47:24,800
is speaking japanese

1114
00:47:22,719 --> 00:47:26,399
which is pretty funny that's not how mr

1115
00:47:24,800 --> 00:47:26,880
yabutan actually sounds mr yabadon

1116
00:47:26,400 --> 00:47:28,400
actually has

1117
00:47:26,880 --> 00:47:29,920
very good japanese pronunciation from

1118
00:47:28,400 --> 00:47:31,358
what i can hear not that i'm a great

1119
00:47:29,920 --> 00:47:34,960
judge of that but

1120
00:47:31,358 --> 00:47:36,880
um him and dogen who's another streamer

1121
00:47:34,960 --> 00:47:39,280
who does that stuff they they sound like

1122
00:47:36,880 --> 00:47:40,160
really good uh compared to like what a

1123
00:47:39,280 --> 00:47:41,119
foreigner normally

1124
00:47:40,159 --> 00:47:42,558
seems to sound like to me when they

1125
00:47:41,119 --> 00:47:43,440
speak japanese where i can i can really

1126
00:47:42,559 --> 00:47:44,559
tell

1127
00:47:43,440 --> 00:47:45,920
even though i'm not very good at

1128
00:47:44,559 --> 00:47:47,680
japanese you can hear the difference

1129
00:47:45,920 --> 00:47:49,920
between a native japanese speaker

1130
00:47:47,679 --> 00:47:51,440
and the average like foreign youtuber

1131
00:47:49,920 --> 00:47:54,480
who also speaks japanese

1132
00:47:51,440 --> 00:47:57,519
they sound totally different um

1133
00:47:54,480 --> 00:48:00,800
but like mr yabatan and dogen

1134
00:47:57,519 --> 00:48:03,039
sound like really good uh by comparison

1135
00:48:00,800 --> 00:48:04,000
you know i'm sure so sure they probably

1136
00:48:03,039 --> 00:48:04,880
still have an accent

1137
00:48:04,000 --> 00:48:07,280
because you know it's probably not

1138
00:48:04,880 --> 00:48:09,519
possible to be like 100 fluent

1139
00:48:07,280 --> 00:48:10,640
um but like it's pretty impressive how

1140
00:48:09,519 --> 00:48:12,559
much better they are than a lot of the

1141
00:48:10,639 --> 00:48:13,598
people oh yeah nabe party not a party

1142
00:48:12,559 --> 00:48:16,240
with my dad

1143
00:48:13,599 --> 00:48:16,240
that's the one

1144
00:48:18,719 --> 00:48:23,199
uh anyway mr yabaton's catchphrase is

1145
00:48:21,358 --> 00:48:24,558
haunto nibikrista which means i'm very

1146
00:48:23,199 --> 00:48:27,679
surprised

1147
00:48:24,559 --> 00:48:28,880
uh or like or like

1148
00:48:27,679 --> 00:48:30,000
that's surprising and i mean i don't

1149
00:48:28,880 --> 00:48:31,440
know how you want to translate it but

1150
00:48:30,000 --> 00:48:34,639
like that's what

1151
00:48:31,440 --> 00:48:36,639
uh he says all the time so uh

1152
00:48:34,639 --> 00:48:37,759
i feel like i feel like that's you know

1153
00:48:36,639 --> 00:48:40,078
when we find this bug

1154
00:48:37,760 --> 00:48:42,319
hontoni bikrishta we're very surprised

1155
00:48:40,079 --> 00:48:44,240
we'll be very surprised at what it is

1156
00:48:42,318 --> 00:48:45,679
okay so we know that we're inside full

1157
00:48:44,239 --> 00:48:47,679
cast we've got issues

1158
00:48:45,679 --> 00:48:49,118
uh and so let's try to narrow it down

1159
00:48:47,679 --> 00:48:51,598
here we like

1160
00:48:49,119 --> 00:48:53,280
i i really don't think that the spatial

1161
00:48:51,599 --> 00:48:54,640
partition walk is implicated that seems

1162
00:48:53,280 --> 00:48:56,800
unlikely

1163
00:48:54,639 --> 00:48:58,000
um so when we go through here and we're

1164
00:48:56,800 --> 00:49:01,440
doing like uh

1165
00:48:58,000 --> 00:49:04,239
raycasting you can see here

1166
00:49:01,440 --> 00:49:05,838
where we uh where we don't care what

1167
00:49:04,239 --> 00:49:07,358
happens in here i guess handle lurking

1168
00:49:05,838 --> 00:49:10,880
towards zero in case where we

1169
00:49:07,358 --> 00:49:15,039
ever have moving occluders

1170
00:49:10,880 --> 00:49:18,240
um so what happens in that case actually

1171
00:49:15,039 --> 00:49:18,239
uh what do we produce

1172
00:49:19,358 --> 00:49:24,318
so nothing okay so we actually like just

1173
00:49:22,239 --> 00:49:27,838
don't we just don't do an update

1174
00:49:24,318 --> 00:49:32,159
uh in this case so in this case i think

1175
00:49:27,838 --> 00:49:32,159
we're fine right like we shouldn't have

1176
00:49:33,519 --> 00:49:37,119
we shouldn't really have any problems

1177
00:49:35,519 --> 00:49:39,519
there so so maybe

1178
00:49:37,119 --> 00:49:41,838
uh let's do this just to make sure that

1179
00:49:39,519 --> 00:49:45,838
the problem is actually in this case

1180
00:49:41,838 --> 00:49:45,838
uh because it should be now right

1181
00:49:52,159 --> 00:49:59,838
okay here we go

1182
00:50:03,358 --> 00:50:06,639
and this is just validating around that

1183
00:50:04,880 --> 00:50:08,160
block yeah

1184
00:50:06,639 --> 00:50:11,039
so again that's what we want to see

1185
00:50:08,159 --> 00:50:12,799
remember pincers we're just pincing down

1186
00:50:11,039 --> 00:50:14,400
and what we want to see is we want to

1187
00:50:12,800 --> 00:50:17,200
see enter clean

1188
00:50:14,400 --> 00:50:18,720
exit dirty right now before i go any

1189
00:50:17,199 --> 00:50:19,919
further with the pincers i want to turn

1190
00:50:18,719 --> 00:50:20,959
off multi-threading

1191
00:50:19,920 --> 00:50:23,519
the reason i want to turn off

1192
00:50:20,960 --> 00:50:26,159
multi-threading is just because

1193
00:50:23,519 --> 00:50:27,920
if we if we don't there's a possibility

1194
00:50:26,159 --> 00:50:29,598
that like some piece of code

1195
00:50:27,920 --> 00:50:31,200
in some other place is doing it that

1196
00:50:29,599 --> 00:50:32,559
hasn't entered yet and we're picking

1197
00:50:31,199 --> 00:50:34,239
that up on the exit

1198
00:50:32,559 --> 00:50:35,839
so i just want to go ahead and nerf the

1199
00:50:34,239 --> 00:50:39,838
multi-threading real quick

1200
00:50:35,838 --> 00:50:40,159
just to make sure uh that we don't have

1201
00:50:39,838 --> 00:50:43,679
uh

1202
00:50:40,159 --> 00:50:45,598
that that particular pathology happening

1203
00:50:43,679 --> 00:50:47,519
uh it's not that likely obviously but

1204
00:50:45,599 --> 00:50:50,079
you know it certainly could

1205
00:50:47,519 --> 00:50:52,239
so what i want to do is where it does

1206
00:50:50,079 --> 00:50:54,640
the internal lighting core which is here

1207
00:50:52,239 --> 00:50:55,279
um and it passes in uh the lighting

1208
00:50:54,639 --> 00:50:58,400
queue

1209
00:50:55,280 --> 00:51:01,280
i want to just pass in uh zero there so

1210
00:50:58,400 --> 00:51:01,838
maybe we'll do a thing that's like uh

1211
00:51:01,280 --> 00:51:05,359
you know

1212
00:51:01,838 --> 00:51:09,838
dis disable oh i don't i don't know

1213
00:51:05,358 --> 00:51:09,838
maybe i shouldn't do that uh

1214
00:51:11,519 --> 00:51:15,199
i was thinking of maybe making a switch

1215
00:51:13,280 --> 00:51:18,319
for this right

1216
00:51:15,199 --> 00:51:22,318
um so one way to do this would be like

1217
00:51:18,318 --> 00:51:26,239
global b32 uh light uh

1218
00:51:22,318 --> 00:51:29,279
multi like light disable

1219
00:51:26,239 --> 00:51:31,279
threading so there's a thing here that

1220
00:51:29,280 --> 00:51:34,400
we could just turn

1221
00:51:31,280 --> 00:51:36,240
uh so we can basically like look oops

1222
00:51:34,400 --> 00:51:37,599
uh if we disable the threading then you

1223
00:51:36,239 --> 00:51:41,279
don't get a lighting queue

1224
00:51:37,599 --> 00:51:44,800
uh and and you won't um multithread

1225
00:51:41,280 --> 00:51:48,000
and so uh in theory like right if i

1226
00:51:44,800 --> 00:51:49,280
set this to true now um then it will

1227
00:51:48,000 --> 00:51:54,480
pass a zero there

1228
00:51:49,280 --> 00:51:54,480
and and we won't get uh we won't get any

1229
00:52:02,838 --> 00:52:05,838
threading

1230
00:52:11,920 --> 00:52:15,838
and mind mark 42 yeah i mean that's what

1231
00:52:14,000 --> 00:52:17,440
i remember i remember it using assign

1232
00:52:15,838 --> 00:52:20,480
not zero

1233
00:52:17,440 --> 00:52:21,920
and so i was wondering we have to go

1234
00:52:20,480 --> 00:52:22,480
back and see because i know we dealt

1235
00:52:21,920 --> 00:52:25,119
with that

1236
00:52:22,480 --> 00:52:26,559
on stream when we were doing it so

1237
00:52:25,119 --> 00:52:28,800
something's weird about the fact that

1238
00:52:26,559 --> 00:52:32,240
we're not doing a sign or zero there

1239
00:52:28,800 --> 00:52:34,480
and so i would like to know why

1240
00:52:32,239 --> 00:52:35,759
uh and so i want to go back and see why

1241
00:52:34,480 --> 00:52:39,039
we didn't

1242
00:52:35,760 --> 00:52:42,319
do that uh maybe we had a good reason

1243
00:52:39,039 --> 00:52:45,599
but but that seems weird so i don't know

1244
00:52:42,318 --> 00:52:46,480
all right anyway remove multi-threading

1245
00:52:45,599 --> 00:52:49,359
we've got that

1246
00:52:46,480 --> 00:52:50,159
uh busted assertion now and so uh i'm

1247
00:52:49,358 --> 00:52:53,279
gonna go ahead

1248
00:52:50,159 --> 00:52:55,118
and take that validate atlas stuff uh

1249
00:52:53,280 --> 00:52:57,119
that we dropped into the full cast so

1250
00:52:55,119 --> 00:52:59,200
here if i go up to full cast

1251
00:52:57,119 --> 00:53:01,440
and what i wanna do is now just validate

1252
00:52:59,199 --> 00:53:03,759
the actual parts i care about

1253
00:53:01,440 --> 00:53:05,440
so you can see here if we go down we've

1254
00:53:03,760 --> 00:53:08,400
got like sample direction

1255
00:53:05,440 --> 00:53:10,318
reading we run the grid raycast here

1256
00:53:08,400 --> 00:53:12,639
right a bunch of times

1257
00:53:10,318 --> 00:53:14,400
and then we come back and this is just

1258
00:53:12,639 --> 00:53:16,000
debug code so really

1259
00:53:14,400 --> 00:53:17,440
you know really we're talking about just

1260
00:53:16,000 --> 00:53:20,559
this code um

1261
00:53:17,440 --> 00:53:23,838
in grid raycast so uh

1262
00:53:20,559 --> 00:53:28,400
like right here is what we think is

1263
00:53:23,838 --> 00:53:32,078
the the bug right um

1264
00:53:28,400 --> 00:53:35,280
so in theory if we just uh if we just

1265
00:53:32,079 --> 00:53:39,200
validate just the texel so

1266
00:53:35,280 --> 00:53:42,319
i'm going to get rid of these right

1267
00:53:39,199 --> 00:53:44,719
and i want to take just the spec texel

1268
00:53:42,318 --> 00:53:44,719
and

1269
00:53:51,039 --> 00:53:57,838
if we look at grid raycast

1270
00:54:01,760 --> 00:54:08,079
so grid raycast loads one two

1271
00:54:04,880 --> 00:54:11,838
three four five six

1272
00:54:08,079 --> 00:54:11,839
right um

1273
00:54:32,239 --> 00:54:36,399
so i'll be completely honest with you my

1274
00:54:35,358 --> 00:54:40,400
memory of how this

1275
00:54:36,400 --> 00:54:43,680
is running has completely paged out of

1276
00:54:40,400 --> 00:54:43,680
my head

1277
00:54:43,920 --> 00:54:50,400
uh and so

1278
00:54:47,039 --> 00:54:54,539
i actually don't know

1279
00:54:50,400 --> 00:54:57,900
why that would be okay

1280
00:54:54,539 --> 00:54:57,900
[Music]

1281
00:55:04,838 --> 00:55:07,838
so

1282
00:55:16,880 --> 00:55:24,480
so oh well okay so it's we run

1283
00:55:20,000 --> 00:55:24,480
through eight rays at a time

1284
00:55:26,559 --> 00:55:30,240
six times four is 24 okay so we just do

1285
00:55:28,960 --> 00:55:33,519
eight rays at a time

1286
00:55:30,239 --> 00:55:37,039
and so that we can write out 24

1287
00:55:33,519 --> 00:55:40,798
things at a time so that's fine

1288
00:55:37,039 --> 00:55:42,960
so that's looks like all that is right

1289
00:55:40,798 --> 00:55:44,960
um so that seems fine and that just

1290
00:55:42,960 --> 00:55:50,639
means that we have to

1291
00:55:44,960 --> 00:55:53,838
uh we're we're writing one row

1292
00:55:50,639 --> 00:55:54,558
right so so we're writing the eight

1293
00:55:53,838 --> 00:55:57,838
texels

1294
00:55:54,559 --> 00:56:02,960
of one row of this thing oh

1295
00:55:57,838 --> 00:56:03,519
um don't let chat do not let me forget

1296
00:56:02,960 --> 00:56:06,400
to

1297
00:56:03,519 --> 00:56:09,599
re-run the sphere generator because our

1298
00:56:06,400 --> 00:56:13,039
sphere generator is also wrong

1299
00:56:09,599 --> 00:56:14,720
right um

1300
00:56:13,039 --> 00:56:16,480
probably has nothing to do with this bug

1301
00:56:14,719 --> 00:56:19,199
but again we want to do that because it

1302
00:56:16,480 --> 00:56:21,838
means that our casting is probably wrong

1303
00:56:19,199 --> 00:56:21,838
separate issue

1304
00:56:22,639 --> 00:56:26,798
okay so when we're doing this casting

1305
00:56:25,920 --> 00:56:28,720
what i want to do

1306
00:56:26,798 --> 00:56:30,719
is i want to validate all of these

1307
00:56:28,719 --> 00:56:33,598
texels so in here

1308
00:56:30,719 --> 00:56:34,000
i want to do a validate texel for each

1309
00:56:33,599 --> 00:56:37,280
of

1310
00:56:34,000 --> 00:56:40,559
these so when we do

1311
00:56:37,280 --> 00:56:43,519
um these texels

1312
00:56:40,559 --> 00:56:44,480
i think if i look at light atlas texel

1313
00:56:43,519 --> 00:56:47,519
it should just be

1314
00:56:44,480 --> 00:56:48,079
the row uh in question you can see it

1315
00:56:47,519 --> 00:56:51,119
here

1316
00:56:48,079 --> 00:56:52,079
right where we have uh the value is just

1317
00:56:51,119 --> 00:56:54,160
a pointer

1318
00:56:52,079 --> 00:56:56,640
so i should be able to do like validate

1319
00:56:54,159 --> 00:56:56,639
texel

1320
00:56:57,679 --> 00:57:02,480
like this um and we should be able to

1321
00:57:01,838 --> 00:57:06,078
validate

1322
00:57:02,480 --> 00:57:10,480
all of the tech the taxels in this row

1323
00:57:06,079 --> 00:57:13,519
um on entry and exit so basically that

1324
00:57:10,480 --> 00:57:16,318
is the validator right

1325
00:57:13,519 --> 00:57:17,519
so that should validate everything and

1326
00:57:16,318 --> 00:57:19,759
in theory

1327
00:57:17,519 --> 00:57:21,280
we should be able to catch the actual

1328
00:57:19,760 --> 00:57:25,839
like specific

1329
00:57:21,280 --> 00:57:28,160
uh validation like the thing that failed

1330
00:57:25,838 --> 00:57:28,159
um

1331
00:57:29,199 --> 00:57:33,118
and and that should that should just

1332
00:57:30,960 --> 00:57:36,000
work i think

1333
00:57:33,119 --> 00:57:38,838
now again don't actually don't quote me

1334
00:57:36,000 --> 00:57:41,679
on that because

1335
00:57:38,838 --> 00:57:43,920
i i don't 100

1336
00:57:41,679 --> 00:57:43,919
know

1337
00:57:53,440 --> 00:57:56,639
i mean i think that should be the case

1338
00:57:55,280 --> 00:57:59,920
so i'm gonna try and run it in debug

1339
00:57:56,639 --> 00:57:59,920
mode and just see if we can get it

1340
00:58:06,838 --> 00:58:09,838
um

1341
00:58:10,239 --> 00:58:14,479
or if it only happens in release mode

1342
00:58:11,920 --> 00:58:14,480
which it might

1343
00:58:17,199 --> 00:58:23,838
which really sucks

1344
00:58:25,199 --> 00:58:28,239
because i i you know i don't really know

1345
00:58:27,920 --> 00:58:29,920
like

1346
00:58:28,239 --> 00:58:31,519
why we would only be getting release

1347
00:58:29,920 --> 00:58:34,000
mode here if it has to do with some kind

1348
00:58:31,519 --> 00:58:37,358
of optimization that's happening

1349
00:58:34,000 --> 00:58:38,559
um like i just don't know you know what

1350
00:58:37,358 --> 00:58:40,880
would be

1351
00:58:38,559 --> 00:58:42,559
what would be causing this but you can

1352
00:58:40,880 --> 00:58:44,640
see pretty clearly like we're not

1353
00:58:42,559 --> 00:58:51,839
getting anything there

1354
00:58:44,639 --> 00:58:51,838
um but then when i do an o2

1355
00:58:54,639 --> 00:58:58,400
oh okay

1356
00:59:02,838 --> 00:59:05,838
what

1357
00:59:06,960 --> 00:59:09,920
such a weird bug

1358
00:59:11,199 --> 00:59:15,358
so we were having a validation fail

1359
00:59:14,000 --> 00:59:18,400
right away

1360
00:59:15,358 --> 00:59:19,199
and now magically it like it wasn't

1361
00:59:18,400 --> 00:59:21,119
happening

1362
00:59:19,199 --> 00:59:22,239
so we really have no idea what the

1363
00:59:21,119 --> 00:59:25,358
heck's going on here

1364
00:59:22,239 --> 00:59:28,558
if we believe this code

1365
00:59:25,358 --> 00:59:32,199
um where we're validating the tax holes

1366
00:59:28,559 --> 00:59:33,519
um you can see here that like it seems

1367
00:59:32,199 --> 00:59:36,558
incontrovertible

1368
00:59:33,519 --> 00:59:38,000
at this point that this is blending

1369
00:59:36,559 --> 00:59:40,240
towards a zero value

1370
00:59:38,000 --> 00:59:43,039
meaning that transfer pps had to be

1371
00:59:40,239 --> 00:59:44,879
negative the only reason i say that

1372
00:59:43,039 --> 00:59:46,639
is because if you look at the validate

1373
00:59:44,880 --> 00:59:49,039
textile calls

1374
00:59:46,639 --> 00:59:50,400
even if this is validating garbage

1375
00:59:49,039 --> 00:59:52,719
meaning even if this is like

1376
00:59:50,400 --> 00:59:53,760
off the end of the array or something

1377
00:59:52,719 --> 00:59:56,399
right

1378
00:59:53,760 --> 00:59:58,839
it validated here and it didn't validate

1379
00:59:56,400 --> 01:00:02,400
here it's the same value

1380
00:59:58,838 --> 01:00:02,400
right so

1381
01:00:08,798 --> 01:00:12,400
i mean i don't know how else to look at

1382
01:00:11,599 --> 01:00:16,400
that

1383
01:00:12,400 --> 01:00:18,318
now this is an f32 for x here

1384
01:00:16,400 --> 01:00:20,240
so there's something a little wonky if

1385
01:00:18,318 --> 01:00:23,440
we're writing 24 values

1386
01:00:20,239 --> 01:00:23,439
uh this is too many

1387
01:00:24,079 --> 01:00:31,760
right uh is that right no

1388
01:00:28,400 --> 01:00:35,760
no that's right so five times yeah so

1389
01:00:31,760 --> 01:00:38,799
in theory uh that just means that this

1390
01:00:35,760 --> 01:00:39,760
wrote out the last three values of this

1391
01:00:38,798 --> 01:00:42,559
f30

1392
01:00:39,760 --> 01:00:43,040
f324x the last three values the last rgb

1393
01:00:42,559 --> 01:00:46,720
set

1394
01:00:43,039 --> 01:00:50,000
that was written out there um

1395
01:00:46,719 --> 01:00:50,719
was just is just plain wrong it was

1396
01:00:50,000 --> 01:00:53,519
negative

1397
01:00:50,719 --> 01:00:54,399
somehow and if you take a look at this

1398
01:00:53,519 --> 01:00:57,280
code here

1399
01:00:54,400 --> 01:00:58,318
all it's doing is doing a one minus uh

1400
01:00:57,280 --> 01:01:02,000
blend value

1401
01:00:58,318 --> 01:01:04,000
right from s0 to t0

1402
01:01:02,000 --> 01:01:05,280
so the next thing i feel like that we

1403
01:01:04,000 --> 01:01:07,280
would want to

1404
01:01:05,280 --> 01:01:10,160
validate is that there are no negative

1405
01:01:07,280 --> 01:01:12,400
values in transfer pps now transfer bps

1406
01:01:10,159 --> 01:01:14,558
may be directly inspectable by us still

1407
01:01:12,400 --> 01:01:18,240
at this point i don't actually know

1408
01:01:14,559 --> 01:01:21,200
um or it could be complete hogwash so

1409
01:01:18,239 --> 01:01:23,439
uh i don't know you know this this is

1410
01:01:21,199 --> 01:01:24,318
what it's telling me transfer pps is but

1411
01:01:23,440 --> 01:01:27,599
don't know

1412
01:01:24,318 --> 01:01:30,079
if it actually is that or not right if i

1413
01:01:27,599 --> 01:01:34,480
go up and look at what transfer bps is

1414
01:01:30,079 --> 01:01:37,119
uh it's uninitialized right so

1415
01:01:34,480 --> 01:01:38,000
like uh one thing i don't know is is it

1416
01:01:37,119 --> 01:01:40,960
always

1417
01:01:38,000 --> 01:01:41,599
actually processed somehow um because

1418
01:01:40,960 --> 01:01:43,760
that

1419
01:01:41,599 --> 01:01:45,920
if it wasn't right like if if there's a

1420
01:01:43,760 --> 01:01:48,480
way to get out of this routine

1421
01:01:45,920 --> 01:01:50,000
without setting transfer pps that would

1422
01:01:48,480 --> 01:01:52,400
be a real doozy

1423
01:01:50,000 --> 01:01:53,920
right that that would that would do it

1424
01:01:52,400 --> 01:01:57,119
presumably

1425
01:01:53,920 --> 01:01:58,960
um now there's only really reason

1426
01:01:57,119 --> 01:02:00,960
ah there's one real easy way to test

1427
01:01:58,960 --> 01:02:02,639
that quickly um which is i could just

1428
01:02:00,960 --> 01:02:04,639
initialize transfer pps

1429
01:02:02,639 --> 01:02:06,159
right i could just say yeah yeah yeah

1430
01:02:04,639 --> 01:02:09,358
it's it's zero now

1431
01:02:06,159 --> 01:02:11,279
right um and then we

1432
01:02:09,358 --> 01:02:12,558
you know we can just see like does does

1433
01:02:11,280 --> 01:02:15,760
it have anything to do with that

1434
01:02:12,559 --> 01:02:18,640
uh and and off we go so so no right

1435
01:02:15,760 --> 01:02:21,039
so i mean it could that could still be a

1436
01:02:18,639 --> 01:02:22,239
separate bug but we know we can produce

1437
01:02:21,039 --> 01:02:25,359
it

1438
01:02:22,239 --> 01:02:26,639
excuse me regardless of whether that's

1439
01:02:25,358 --> 01:02:28,960
initialized or not

1440
01:02:26,639 --> 01:02:32,239
now if we look in here and we see where

1441
01:02:28,960 --> 01:02:34,000
transfer pps actually gets set

1442
01:02:32,239 --> 01:02:35,439
you can see we do a bunch of work here

1443
01:02:34,000 --> 01:02:37,199
to produce these values

1444
01:02:35,440 --> 01:02:38,480
uh which is i think that's us doing like

1445
01:02:37,199 --> 01:02:40,239
blending and such

1446
01:02:38,480 --> 01:02:42,480
and we produce down here the transfer

1447
01:02:40,239 --> 01:02:44,239
pps for the array index value by

1448
01:02:42,480 --> 01:02:46,240
reading out the transmission level of

1449
01:02:44,239 --> 01:02:48,078
these things um

1450
01:02:46,239 --> 01:02:50,318
and you can see us you know it's a

1451
01:02:48,079 --> 01:03:03,839
combination of a bunch of stuff

1452
01:02:50,318 --> 01:03:03,838
right now

1453
01:03:07,519 --> 01:03:11,920
i mean one of the things that's kind of

1454
01:03:09,039 --> 01:03:15,680
weird is how low these values are

1455
01:03:11,920 --> 01:03:19,358
um they're all very small

1456
01:03:15,679 --> 01:03:22,399
numbers which is a little bit weird

1457
01:03:19,358 --> 01:03:25,358
but uh what you can see

1458
01:03:22,400 --> 01:03:28,079
is that if like if we pretend

1459
01:03:25,358 --> 01:03:28,078
temporarily

1460
01:03:29,519 --> 01:03:34,639
that this is actually real like what

1461
01:03:32,480 --> 01:03:39,119
we're looking at here is not

1462
01:03:34,639 --> 01:03:42,000
fake uh that is just nuts

1463
01:03:39,119 --> 01:03:45,760
right like like i have no idea how that

1464
01:03:42,000 --> 01:03:47,358
value gets produced it's complete lunacy

1465
01:03:45,760 --> 01:03:49,599
the rest of these values are just very

1466
01:03:47,358 --> 01:03:51,119
small positive values which in theory

1467
01:03:49,599 --> 01:03:54,720
could be correct

1468
01:03:51,119 --> 01:03:58,318
right if you're kind of fairly distant

1469
01:03:54,719 --> 01:04:00,639
you know what i mean

1470
01:03:58,318 --> 01:04:00,639
uh

1471
01:04:05,679 --> 01:04:09,679
so i don't know what to make of that uh

1472
01:04:08,318 --> 01:04:13,038
i really don't

1473
01:04:09,679 --> 01:04:13,838
and we should probably just now try to

1474
01:04:13,039 --> 01:04:16,160
track that down

1475
01:04:13,838 --> 01:04:17,119
and we know furthermore even more

1476
01:04:16,159 --> 01:04:18,879
troubling

1477
01:04:17,119 --> 01:04:20,798
we know that this doesn't happen in

1478
01:04:18,880 --> 01:04:24,798
debug mode that we can

1479
01:04:20,798 --> 01:04:28,639
find um so like

1480
01:04:24,798 --> 01:04:28,639
whatever is happening there

1481
01:04:29,760 --> 01:04:37,119
is like is bad mojo on a code gen front

1482
01:04:33,838 --> 01:04:41,119
right so this code is like busted

1483
01:04:37,119 --> 01:04:44,160
somehow uh and and we don't know

1484
01:04:41,119 --> 01:04:46,480
we don't know how uh but it's

1485
01:04:44,159 --> 01:04:48,558
uh you know somewhere along the lines

1486
01:04:46,480 --> 01:04:50,318
it's broken

1487
01:04:48,559 --> 01:04:52,000
that suggests to me that we probably

1488
01:04:50,318 --> 01:04:54,400
need to start pincing

1489
01:04:52,000 --> 01:04:56,079
more because we don't know where in this

1490
01:04:54,400 --> 01:04:58,639
code we're at

1491
01:04:56,079 --> 01:04:59,519
so let's continue to pinch and let's

1492
01:04:58,639 --> 01:05:04,239
just say

1493
01:04:59,519 --> 01:05:07,119
look transfer pps should not be negative

1494
01:05:04,239 --> 01:05:09,838
so let's go ahead and make sure that

1495
01:05:07,119 --> 01:05:09,838
it's not

1496
01:05:22,400 --> 01:05:28,720
and now i'm just trying to move this bug

1497
01:05:26,000 --> 01:05:30,000
one up this this the spec the stack

1498
01:05:28,719 --> 01:05:32,318
basically right

1499
01:05:30,000 --> 01:05:33,838
and find a place where we trigger this

1500
01:05:32,318 --> 01:05:35,199
before we trigger this and it looks like

1501
01:05:33,838 --> 01:05:38,558
that's exactly what happened

1502
01:05:35,199 --> 01:05:39,199
right so if transfer pps is actually

1503
01:05:38,559 --> 01:05:41,920
negative

1504
01:05:39,199 --> 01:05:42,399
that again helps us narrow down the code

1505
01:05:41,920 --> 01:05:45,440
here

1506
01:05:42,400 --> 01:05:48,160
because it means that we're not like it

1507
01:05:45,440 --> 01:05:50,559
means that we kind of now know

1508
01:05:48,159 --> 01:05:53,118
uh that the actual culprit is the

1509
01:05:50,559 --> 01:05:57,039
computation of the transfer value

1510
01:05:53,119 --> 01:06:00,318
not the blend at the end so in theory

1511
01:05:57,039 --> 01:06:01,920
right we can now get rid of these

1512
01:06:00,318 --> 01:06:04,558
um although well you know i won't get

1513
01:06:01,920 --> 01:06:07,039
rid of them yet i suppose

1514
01:06:04,559 --> 01:06:07,680
but it means i can push up this transfer

1515
01:06:07,039 --> 01:06:09,839
here

1516
01:06:07,679 --> 01:06:11,118
and start looking at the transfer values

1517
01:06:09,838 --> 01:06:14,480
as they are retired

1518
01:06:11,119 --> 01:06:16,400
individually right so i'm going to

1519
01:06:14,480 --> 01:06:17,679
validate the transfers at the end i'm

1520
01:06:16,400 --> 01:06:20,079
also going to validate the

1521
01:06:17,679 --> 01:06:21,038
individual transfer values as they are

1522
01:06:20,079 --> 01:06:24,318
computed

1523
01:06:21,039 --> 01:06:25,280
right and i i expect that now i can hit

1524
01:06:24,318 --> 01:06:27,838
this

1525
01:06:25,280 --> 01:06:27,839
right away

1526
01:06:28,318 --> 01:06:33,920
oops transfer pps there we go

1527
01:06:32,318 --> 01:06:35,519
that i can hit that before hitting the

1528
01:06:33,920 --> 01:06:36,720
bottom

1529
01:06:35,519 --> 01:06:38,880
right meaning that the actual

1530
01:06:36,719 --> 01:06:39,279
computation of transfer pps inside the

1531
01:06:38,880 --> 01:06:47,680
loop

1532
01:06:39,280 --> 01:06:50,000
is what the heck uh

1533
01:06:47,679 --> 01:06:50,000
what

1534
01:06:58,719 --> 01:07:04,480
i am very confused about

1535
01:07:02,159 --> 01:07:04,480
that

1536
01:07:07,838 --> 01:07:11,199
what the heck happened there there was

1537
01:07:10,079 --> 01:07:15,839
no assertion

1538
01:07:11,199 --> 01:07:15,838
it was just incorrect lighting

1539
01:07:16,719 --> 01:07:20,078
this is the weirdest thing

1540
01:07:26,960 --> 01:07:35,039
that's so weird all right

1541
01:07:31,280 --> 01:07:36,720
so we're now uh able to at least

1542
01:07:35,039 --> 01:07:37,839
get at some times this to produce

1543
01:07:36,719 --> 01:07:39,358
negative values which we know it

1544
01:07:37,838 --> 01:07:40,838
shouldn't do so we can at least narrow

1545
01:07:39,358 --> 01:07:43,598
down

1546
01:07:40,838 --> 01:07:46,960
that if we look at what's going on here

1547
01:07:43,599 --> 01:07:48,720
this is a multiplication uh and so

1548
01:07:46,960 --> 01:07:50,798
really all we're doing is multiplying

1549
01:07:48,719 --> 01:07:54,000
the transmission by the hit ref

1550
01:07:50,798 --> 01:07:57,119
right so what we would expect to see

1551
01:07:54,000 --> 01:08:00,639
is that one of those two things

1552
01:07:57,119 --> 01:08:01,440
uh is like like if we take a look here

1553
01:08:00,639 --> 01:08:05,199
at what these

1554
01:08:01,440 --> 01:08:06,960
actually do um

1555
01:08:05,199 --> 01:08:08,558
we're taking the reflection level and

1556
01:08:06,960 --> 01:08:10,240
the emission level we're taking a max of

1557
01:08:08,559 --> 01:08:10,880
those two to produce the transmission

1558
01:08:10,239 --> 01:08:13,519
level

1559
01:08:10,880 --> 01:08:14,720
and we're extracting the values out of

1560
01:08:13,519 --> 01:08:17,838
it right for the r

1561
01:08:14,719 --> 01:08:21,119
the g and the b um

1562
01:08:17,838 --> 01:08:25,600
why we're doing that i

1563
01:08:21,119 --> 01:08:25,599
don't no

1564
01:08:26,238 --> 01:08:29,809
um

1565
01:08:26,699 --> 01:08:29,809
[Music]

1566
01:08:34,399 --> 01:08:39,838
what the heck

1567
01:08:49,198 --> 01:08:53,119
so we maybe just stopped because we were

1568
01:08:52,479 --> 01:08:54,879
like oh

1569
01:08:53,119 --> 01:08:56,960
we're not gonna finish optimizing this

1570
01:08:54,880 --> 01:08:57,679
or something right now and that's why

1571
01:08:56,960 --> 01:09:00,960
this thing

1572
01:08:57,679 --> 01:09:04,319
does a rgb back out because like

1573
01:09:00,960 --> 01:09:04,319
it could just do it direct

1574
01:09:05,039 --> 01:09:08,719
right um

1575
01:09:09,279 --> 01:09:13,600
so that that's i don't know what that's

1576
01:09:12,880 --> 01:09:15,920
doing

1577
01:09:13,600 --> 01:09:15,920
um

1578
01:09:17,920 --> 01:09:20,960
now that you know what it's doing i know

1579
01:09:19,520 --> 01:09:21,679
what it's doing i don't know why it's

1580
01:09:20,960 --> 01:09:24,399
doing it

1581
01:09:21,679 --> 01:09:25,920
right um so that that just seems weird

1582
01:09:24,399 --> 01:09:28,399
because you would you would

1583
01:09:25,920 --> 01:09:29,920
probably not do that um you'd probably

1584
01:09:28,399 --> 01:09:31,519
just do the shuffle then the multiply

1585
01:09:29,920 --> 01:09:34,480
wide and leave it

1586
01:09:31,520 --> 01:09:35,839
right uh so i think that's just

1587
01:09:34,479 --> 01:09:38,879
something we didn't want to

1588
01:09:35,838 --> 01:09:49,198
deal with at the moment so uh let's just

1589
01:09:38,880 --> 01:09:51,920
change that so we can switch to doing

1590
01:09:49,198 --> 01:09:54,399
transfer pbs wide which would be better

1591
01:09:51,920 --> 01:09:55,520
um and i think that's probably not very

1592
01:09:54,399 --> 01:09:58,879
hard for us to do

1593
01:09:55,520 --> 01:10:02,159
uh but you know um whatever

1594
01:09:58,880 --> 01:10:04,000
doesn't matter so here

1595
01:10:02,158 --> 01:10:05,599
when we're taking these out what i want

1596
01:10:04,000 --> 01:10:08,079
to do is say up here

1597
01:10:05,600 --> 01:10:10,000
we should be able to validate uh this

1598
01:10:08,079 --> 01:10:12,000
stuff right the transmission level

1599
01:10:10,000 --> 01:10:14,079
and the hit ref color uh we should be

1600
01:10:12,000 --> 01:10:15,439
able to to validate

1601
01:10:14,079 --> 01:10:17,439
because in theory i don't think they

1602
01:10:15,439 --> 01:10:20,399
should ever be negative anyway

1603
01:10:17,439 --> 01:10:22,079
right um like i'm not sure why these

1604
01:10:20,399 --> 01:10:22,719
would ever be negative so i just want to

1605
01:10:22,079 --> 01:10:26,000
see who

1606
01:10:22,719 --> 01:10:31,840
which one of them is right um

1607
01:10:26,000 --> 01:10:31,840
in those cases

1608
01:10:32,319 --> 01:10:39,119
uh because they shouldn't be they should

1609
01:10:35,600 --> 01:10:41,199
just be zero or valid values i think

1610
01:10:39,119 --> 01:10:42,479
but i could be wrong about that so i

1611
01:10:41,198 --> 01:10:44,799
guess we'll find out

1612
01:10:42,479 --> 01:10:46,079
in a second so let's see oh well we

1613
01:10:44,800 --> 01:10:47,560
don't have a validator for

1614
01:10:46,079 --> 01:10:50,399
those we don't have a validator for

1615
01:10:47,560 --> 01:10:52,239
f324xs so i'm gonna have to make one

1616
01:10:50,399 --> 01:10:54,000
but let's take a look uh at this a

1617
01:10:52,238 --> 01:10:56,399
little bit more carefully here anyway so

1618
01:10:54,000 --> 01:10:57,198
transmission level is a max from reflect

1619
01:10:56,399 --> 01:11:00,158
from reflect

1620
01:10:57,198 --> 01:11:01,119
level and emission level um those are

1621
01:11:00,158 --> 01:11:03,439
samples

1622
01:11:01,119 --> 01:11:04,158
right so this is a sample from the tile

1623
01:11:03,439 --> 01:11:06,799
set

1624
01:11:04,158 --> 01:11:07,359
uh as you can see here where we just do

1625
01:11:06,800 --> 01:11:11,039
a

1626
01:11:07,359 --> 01:11:14,880
um a

1627
01:11:11,039 --> 01:11:17,920
trilinear blend of all of the

1628
01:11:14,880 --> 01:11:17,920
uh pieces

1629
01:11:18,960 --> 01:11:21,840
that should obviously never be negative

1630
01:11:20,319 --> 01:11:22,559
because it's supposed to be a convex

1631
01:11:21,840 --> 01:11:24,239
blend

1632
01:11:22,560 --> 01:11:27,199
over things that are themselves not

1633
01:11:24,238 --> 01:11:28,079
negative so nothing in reflect level

1634
01:11:27,198 --> 01:11:31,119
should should be

1635
01:11:28,079 --> 01:11:35,039
negative uh ever right

1636
01:11:31,119 --> 01:11:37,840
um and then we've got the emission level

1637
01:11:35,039 --> 01:11:39,198
which is the thing that we produce from

1638
01:11:37,840 --> 01:11:43,679
the actual like

1639
01:11:39,198 --> 01:11:47,279
hit uh that's how much light is emitted

1640
01:11:43,679 --> 01:11:48,480
from the thing that we hit uh so we're

1641
01:11:47,279 --> 01:11:52,079
basically taking the two

1642
01:11:48,479 --> 01:11:54,158
and and we're taking the max so again

1643
01:11:52,079 --> 01:11:56,000
if reflect level should never be

1644
01:11:54,158 --> 01:11:57,839
negative and we're taking the max then

1645
01:11:56,000 --> 01:11:59,760
we know that transmission level itself

1646
01:11:57,840 --> 01:12:04,560
should also never be negative

1647
01:11:59,760 --> 01:12:04,560
right um

1648
01:12:06,079 --> 01:12:09,600
so i'm gonna make i'm gonna i'm gonna

1649
01:12:08,158 --> 01:12:12,799
actually just write this

1650
01:12:09,600 --> 01:12:16,079
for f32x in that actual code so

1651
01:12:12,800 --> 01:12:19,279
i'm gonna go to validate xl and

1652
01:12:16,079 --> 01:12:22,319
i'm gonna do exactly the same thing

1653
01:12:19,279 --> 01:12:25,840
uh so we're gonna have a call

1654
01:12:22,319 --> 01:12:29,039
like so but it'll take an f32 for x

1655
01:12:25,840 --> 01:12:36,480
and validate it as as if it was a texel

1656
01:12:29,039 --> 01:12:39,760
right so i believe

1657
01:12:36,479 --> 01:12:42,718
uh that if we just pass the four values

1658
01:12:39,760 --> 01:12:42,719
that are in

1659
01:12:47,920 --> 01:12:52,000
uh the f32x in question that should

1660
01:12:50,719 --> 01:12:54,640
validate those

1661
01:12:52,000 --> 01:12:55,840
uh and and then we should be okay now

1662
01:12:54,640 --> 01:12:57,119
hit ref color

1663
01:12:55,840 --> 01:12:58,960
i don't actually know what that is

1664
01:12:57,119 --> 01:13:01,519
because we haven't looked at that yet

1665
01:12:58,960 --> 01:13:02,800
um so let's try to find that hit ref

1666
01:13:01,520 --> 01:13:06,159
color

1667
01:13:02,800 --> 01:13:07,920
is where is hit ref color um hit ref

1668
01:13:06,158 --> 01:13:10,399
color

1669
01:13:07,920 --> 01:13:11,520
so hit ref color is actually a v3 so

1670
01:13:10,399 --> 01:13:15,519
it's got

1671
01:13:11,520 --> 01:13:18,800
like actually like multiple components

1672
01:13:15,520 --> 01:13:20,960
right um and

1673
01:13:18,800 --> 01:13:23,360
so hit ref color we would have to

1674
01:13:20,960 --> 01:13:27,279
validate the individual pieces

1675
01:13:23,359 --> 01:13:27,279
thereof uh

1676
01:13:29,679 --> 01:13:33,840
but that's pretty easy to do

1677
01:13:36,560 --> 01:13:43,600
so now like maybe um if we're lucky

1678
01:13:40,399 --> 01:13:45,198
we'll be able to see who like which one

1679
01:13:43,600 --> 01:13:46,239
of these things is creating the

1680
01:13:45,198 --> 01:13:49,919
bogusness

1681
01:13:46,238 --> 01:13:51,519
right um and

1682
01:13:49,920 --> 01:13:54,319
i just want to make sure because i don't

1683
01:13:51,520 --> 01:13:54,320
really trust this

1684
01:13:56,399 --> 01:14:01,839
i just want to make sure what i'm seeing

1685
01:13:59,359 --> 01:14:01,839
here

1686
01:14:09,840 --> 01:14:17,760
yeah so our hit ref color looks like

1687
01:14:13,439 --> 01:14:20,799
the culprit here so hit ref color is not

1688
01:14:17,760 --> 01:14:22,800
producing the correct thing um

1689
01:14:20,800 --> 01:14:24,159
so that seems like it means that our

1690
01:14:22,800 --> 01:14:29,440
tile blending

1691
01:14:24,158 --> 01:14:29,769
is not really uh implicated there

1692
01:14:29,439 --> 01:14:32,948
and

1693
01:14:29,770 --> 01:14:32,949
[Music]

1694
01:14:34,000 --> 01:14:40,560
our hit ref color is just busted

1695
01:14:37,198 --> 01:14:42,238
somehow now we don't actually

1696
01:14:40,560 --> 01:14:44,000
know much about that we haven't looked

1697
01:14:42,238 --> 01:14:46,959
at that yet so

1698
01:14:44,000 --> 01:14:48,158
hit ref color is like being selected in

1699
01:14:46,960 --> 01:14:51,520
here

1700
01:14:48,158 --> 01:14:53,039
right and so the question is just like

1701
01:14:51,520 --> 01:14:54,880
is something weird happening with hit

1702
01:14:53,039 --> 01:14:57,198
ref color that we don't understand

1703
01:14:54,880 --> 01:14:58,800
i don't know you can see that here

1704
01:14:57,198 --> 01:15:02,399
hitreff color is supposed to be

1705
01:14:58,800 --> 01:15:05,039
initialized to all ones right

1706
01:15:02,399 --> 01:15:05,839
and then when we come through and we do

1707
01:15:05,039 --> 01:15:08,640
uh

1708
01:15:05,840 --> 01:15:10,880
let's just step through the places where

1709
01:15:08,640 --> 01:15:13,920
it's actually used

1710
01:15:10,880 --> 01:15:16,640
so there's the first one it should be

1711
01:15:13,920 --> 01:15:20,079
set to all ones

1712
01:15:16,640 --> 01:15:20,079
uh we then get to

1713
01:15:23,760 --> 01:15:28,079
the heck does that mean

1714
01:15:36,880 --> 01:15:39,840
so

1715
01:15:44,319 --> 01:15:46,960
wait a second

1716
01:15:50,479 --> 01:15:54,879
so if you pass three values okay so

1717
01:15:52,479 --> 01:15:58,559
that's just initializing it crosswise

1718
01:15:54,880 --> 01:16:00,560
so it just assumes that you pass in

1719
01:15:58,560 --> 01:16:03,360
wait no that's not the that's the v3

1720
01:16:00,560 --> 01:16:03,360
version so

1721
01:16:05,439 --> 01:16:08,479
so that just assumes that each of these

1722
01:16:07,198 --> 01:16:11,599
gets set to the same

1723
01:16:08,479 --> 01:16:12,158
four wide value all right so this is

1724
01:16:11,600 --> 01:16:13,920
just

1725
01:16:12,158 --> 01:16:15,039
a three by four matrix or a four by

1726
01:16:13,920 --> 01:16:15,760
three matrix depending how you want to

1727
01:16:15,039 --> 01:16:20,880
think of it

1728
01:16:15,760 --> 01:16:24,159
of all ones right

1729
01:16:20,880 --> 01:16:25,679
so that's fine uh and if we validate the

1730
01:16:24,158 --> 01:16:27,599
texel here

1731
01:16:25,679 --> 01:16:29,359
one would assume that that should never

1732
01:16:27,600 --> 01:16:30,800
trigger right because it's like we set

1733
01:16:29,359 --> 01:16:33,679
the values

1734
01:16:30,800 --> 01:16:34,719
they should all be right um so it should

1735
01:16:33,679 --> 01:16:38,719
only be

1736
01:16:34,719 --> 01:16:41,039
like uh

1737
01:16:38,719 --> 01:16:41,039
what

1738
01:16:46,560 --> 01:16:53,360
so now transfer pps is

1739
01:16:50,079 --> 01:16:56,719
wrong but it wasn't before

1740
01:16:53,359 --> 01:17:03,839
or is that just because wait but i took

1741
01:16:56,719 --> 01:17:03,840
but uh i didn't mean to take these out

1742
01:17:04,079 --> 01:17:07,600
right right sorry these just got removed

1743
01:17:06,158 --> 01:17:10,000
i didn't really mean to do that i wanted

1744
01:17:07,600 --> 01:17:13,120
to leave those in sorry

1745
01:17:10,000 --> 01:17:13,119
so those should hit first

1746
01:17:14,840 --> 01:17:17,840
and

1747
01:17:19,760 --> 01:17:23,679
uh there we go so when we get the bug

1748
01:17:22,399 --> 01:17:24,399
those hit first which is what we'd

1749
01:17:23,679 --> 01:17:26,960
expect

1750
01:17:24,399 --> 01:17:27,920
so now we have to go find out why that

1751
01:17:26,960 --> 01:17:30,000
hit ref color

1752
01:17:27,920 --> 01:17:32,079
isn't getting initialized i mean i isn't

1753
01:17:30,000 --> 01:17:34,560
getting exercise is getting corrupted

1754
01:17:32,079 --> 01:17:36,158
somewhere in here so during this hit ref

1755
01:17:34,560 --> 01:17:39,760
color select

1756
01:17:36,158 --> 01:17:41,279
um so it's literally just this

1757
01:17:39,760 --> 01:17:42,880
like this is what's this is the only

1758
01:17:41,279 --> 01:17:46,319
thing that's happening

1759
01:17:42,880 --> 01:17:48,560
so the leaf ref color

1760
01:17:46,319 --> 01:17:48,559
um

1761
01:17:51,359 --> 01:17:55,198
there's only two things that can be

1762
01:17:52,800 --> 01:17:59,199
happening here one is that our select

1763
01:17:55,198 --> 01:18:02,479
code is broken so that's possible

1764
01:17:59,198 --> 01:18:03,119
uh the other is that our our leaf ref

1765
01:18:02,479 --> 01:18:06,319
colors

1766
01:18:03,119 --> 01:18:09,039
are broken right

1767
01:18:06,319 --> 01:18:09,679
now if we take a look at one of these uh

1768
01:18:09,039 --> 01:18:11,039
leafs

1769
01:18:09,679 --> 01:18:12,800
what you can see is that it's just

1770
01:18:11,039 --> 01:18:16,880
another v3 here

1771
01:18:12,800 --> 01:18:20,640
of another v3 4x so what i could do here

1772
01:18:16,880 --> 01:18:21,199
is just do a validation on the leaf ref

1773
01:18:20,640 --> 01:18:24,480
color

1774
01:18:21,198 --> 01:18:27,439
is like is one of these things uh

1775
01:18:24,479 --> 01:18:28,238
garbage town right because if we hit

1776
01:18:27,439 --> 01:18:32,479
that

1777
01:18:28,238 --> 01:18:41,839
then that is that would tell us exactly

1778
01:18:32,479 --> 01:18:41,839
what what's happening there right

1779
01:18:44,158 --> 01:18:50,238
so so that's good in a sense

1780
01:18:47,600 --> 01:18:50,719
uh it means that the ref colors that are

1781
01:18:50,238 --> 01:18:53,919
coming

1782
01:18:50,719 --> 01:18:54,560
in off of the leafs in the actual tree

1783
01:18:53,920 --> 01:18:57,920
we built

1784
01:18:54,560 --> 01:19:00,480
are wrong um

1785
01:18:57,920 --> 01:19:01,359
and and furthermore they're wrong in in

1786
01:19:00,479 --> 01:19:06,319
an interesting

1787
01:19:01,359 --> 01:19:06,319
way um let's just check something here

1788
01:19:06,640 --> 01:19:12,880
what the heck how is that possible

1789
01:19:11,279 --> 01:19:14,800
oh well that's just if it's a large

1790
01:19:12,880 --> 01:19:16,480
value so never mind no no

1791
01:19:14,800 --> 01:19:18,320
we would expect that to be true because

1792
01:19:16,479 --> 01:19:19,519
we're not checking for large values so

1793
01:19:18,319 --> 01:19:22,960
that's okay

1794
01:19:19,520 --> 01:19:26,320
yeah that's okay um so let me see what

1795
01:19:22,960 --> 01:19:29,600
leaf ref color looks like right now um

1796
01:19:26,319 --> 01:19:33,279
if i can so here's the pointer

1797
01:19:29,600 --> 01:19:36,320
here's the ref color uh and and

1798
01:19:33,279 --> 01:19:37,920
this is just nuts like what even is

1799
01:19:36,319 --> 01:19:43,198
going on here

1800
01:19:37,920 --> 01:19:47,600
right uh like like i have no idea

1801
01:19:43,198 --> 01:19:47,599
uh what that's supposed to be um

1802
01:19:48,640 --> 01:19:53,039
that's just it's just nuts right

1803
01:20:00,079 --> 01:20:05,840
isn't there some way to do this

1804
01:20:24,479 --> 01:20:31,759
yeah anyway uh so

1805
01:20:28,079 --> 01:20:32,399
if we take a look at this uh p oh comma

1806
01:20:31,760 --> 01:20:33,760
ps

1807
01:20:32,399 --> 01:20:35,839
that's what i wanted that's what i

1808
01:20:33,760 --> 01:20:38,719
wanted

1809
01:20:35,840 --> 01:20:39,039
i suppose i can't do it here probably um

1810
01:20:38,719 --> 01:20:42,079
but

1811
01:20:39,039 --> 01:20:47,119
can i do it like

1812
01:20:42,079 --> 01:20:49,198
that yeah okay thank you george

1813
01:20:47,119 --> 01:20:51,519
so yeah like there's this nice thing

1814
01:20:49,198 --> 01:20:56,000
that remedy does where you can see

1815
01:20:51,520 --> 01:20:58,719
your um cimd registers

1816
01:20:56,000 --> 01:20:59,439
will not register simply data types as

1817
01:20:58,719 --> 01:21:02,480
actual

1818
01:20:59,439 --> 01:21:05,119
like as what you would actually expect

1819
01:21:02,479 --> 01:21:07,119
right uh which is really nice so you can

1820
01:21:05,119 --> 01:21:11,599
see this garbage here

1821
01:21:07,119 --> 01:21:14,319
um is like very garbagey

1822
01:21:11,600 --> 01:21:15,360
and it's the very first one in the ref

1823
01:21:14,319 --> 01:21:18,559
color

1824
01:21:15,359 --> 01:21:21,279
uh leaf here although i guess i don't

1825
01:21:18,560 --> 01:21:24,560
know which leaf index we're on

1826
01:21:21,279 --> 01:21:26,840
so that's i guess a separate issue but

1827
01:21:24,560 --> 01:21:28,480
that just is not good for obvious

1828
01:21:26,840 --> 01:21:32,000
reasons

1829
01:21:28,479 --> 01:21:35,039
so maybe and i don't know

1830
01:21:32,000 --> 01:21:38,479
but maybe our lighting routine

1831
01:21:35,039 --> 01:21:40,319
is actually not the problem here maybe

1832
01:21:38,479 --> 01:21:42,079
it's really just the thing that builds

1833
01:21:40,319 --> 01:21:46,799
the spatial index that's

1834
01:21:42,079 --> 01:21:49,439
busted uh could be

1835
01:21:46,800 --> 01:21:49,440
we don't know

1836
01:21:50,158 --> 01:21:53,198
so here's grid build spatial partition

1837
01:21:52,560 --> 01:21:56,960
um

1838
01:21:53,198 --> 01:21:59,039
and if you know if that theory were true

1839
01:21:56,960 --> 01:22:00,560
then it would mean that this is the code

1840
01:21:59,039 --> 01:22:05,519
that's busted

1841
01:22:00,560 --> 01:22:07,920
right so a couple things we can do here

1842
01:22:05,520 --> 01:22:09,520
you can see us doing some stuff where we

1843
01:22:07,920 --> 01:22:12,239
set the ref color

1844
01:22:09,520 --> 01:22:13,520
right to the box refsey and all that

1845
01:22:12,238 --> 01:22:15,359
sort of stuff

1846
01:22:13,520 --> 01:22:17,040
and you can see that this is a sliced

1847
01:22:15,359 --> 01:22:20,158
writing routine

1848
01:22:17,039 --> 01:22:23,359
so it's entirely possible

1849
01:22:20,158 --> 01:22:26,638
like entirely possible

1850
01:22:23,359 --> 01:22:30,238
that that this code is is crap

1851
01:22:26,639 --> 01:22:30,239
right um

1852
01:22:30,719 --> 01:22:39,840
100 possible

1853
01:22:58,079 --> 01:23:07,039
and that seems plausible actually all

1854
01:23:06,000 --> 01:23:10,079
right

1855
01:23:07,039 --> 01:23:12,238
um so what we're going to try to do here

1856
01:23:10,079 --> 01:23:13,119
is we're going to move the validation

1857
01:23:12,238 --> 01:23:14,238
into

1858
01:23:13,119 --> 01:23:17,119
the well we're not going to move it i

1859
01:23:14,238 --> 01:23:20,319
guess we're just going to copy it

1860
01:23:17,119 --> 01:23:23,599
so we're going to move the validation

1861
01:23:20,319 --> 01:23:26,799
into this box code here and see

1862
01:23:23,600 --> 01:23:27,440
if we can catch anybody uh doing

1863
01:23:26,800 --> 01:23:30,800
something

1864
01:23:27,439 --> 01:23:32,799
scrimpus in here right

1865
01:23:30,800 --> 01:23:34,079
so you can see when we get down here to

1866
01:23:32,800 --> 01:23:36,639
this cell count thing

1867
01:23:34,079 --> 01:23:38,319
and we go through all the cells and for

1868
01:23:36,639 --> 01:23:40,159
each node in the spatial grid

1869
01:23:38,319 --> 01:23:42,559
we try to figure out what all the leaves

1870
01:23:40,158 --> 01:23:46,319
are like you can see that happening here

1871
01:23:42,560 --> 01:23:49,360
for example um any time

1872
01:23:46,319 --> 01:23:50,399
we don't have this we should be able to

1873
01:23:49,359 --> 01:23:53,519
validate

1874
01:23:50,399 --> 01:23:57,599
the run so if we look at like

1875
01:23:53,520 --> 01:24:00,880
this so we've got a node here and we say

1876
01:23:57,600 --> 01:24:01,440
look if if it's not a bug i'm sorry if

1877
01:24:00,880 --> 01:24:03,760
it's not

1878
01:24:01,439 --> 01:24:05,439
a terminator node so it's not a thing

1879
01:24:03,760 --> 01:24:09,760
that we stop on

1880
01:24:05,439 --> 01:24:09,759
we should be able to run through uh

1881
01:24:10,000 --> 01:24:13,600
the entire set that we just set up so

1882
01:24:12,079 --> 01:24:15,279
this thing right here

1883
01:24:13,600 --> 01:24:16,800
we should be able to load out all of

1884
01:24:15,279 --> 01:24:18,000
those and validate them

1885
01:24:16,800 --> 01:24:19,279
and if we can't validate them

1886
01:24:18,000 --> 01:24:20,639
something's wrong or i'm

1887
01:24:19,279 --> 01:24:22,399
misunderstanding how this is supposed to

1888
01:24:20,639 --> 01:24:23,840
work like maybe you're supposed to mask

1889
01:24:22,399 --> 01:24:25,439
out part of it or something

1890
01:24:23,840 --> 01:24:28,400
we'll have to look and see if there's

1891
01:24:25,439 --> 01:24:28,399
something weird like that

1892
01:24:28,840 --> 01:24:31,840
but

1893
01:24:32,079 --> 01:24:35,519
assuming that we load in these leaves

1894
01:24:34,000 --> 01:24:38,158
that are specified here

1895
01:24:35,520 --> 01:24:40,400
and we look at each individual leaf now

1896
01:24:38,158 --> 01:24:44,719
the leaves are packed

1897
01:24:40,399 --> 01:24:48,079
for long right

1898
01:24:44,719 --> 01:24:52,000
so is it possible that the entire

1899
01:24:48,079 --> 01:24:52,000
problem here is we just don't clear them

1900
01:24:52,719 --> 01:25:01,840
so we just have garbage left in there

1901
01:24:58,719 --> 01:25:01,840
i think that may be it

1902
01:25:03,520 --> 01:25:06,560
um it could just be that we need to

1903
01:25:05,840 --> 01:25:09,119
clear those

1904
01:25:06,560 --> 01:25:10,840
out because there's garbage left at the

1905
01:25:09,119 --> 01:25:14,238
end

1906
01:25:10,840 --> 01:25:16,880
and and we we can't like that's not

1907
01:25:14,238 --> 01:25:16,879
valid right

1908
01:25:18,479 --> 01:25:21,678
so we don't fill the whole thing

1909
01:25:22,158 --> 01:25:29,439
yeah so what i would suggest

1910
01:25:26,000 --> 01:25:41,840
here is just maybe all we have to do

1911
01:25:29,439 --> 01:25:41,839
is like zero this thing

1912
01:25:54,960 --> 01:26:00,719
um and if we clear this out first that

1913
01:25:57,279 --> 01:26:00,719
may be the entirety of the problem

1914
01:26:02,719 --> 01:26:09,840
evidently not um

1915
01:26:16,560 --> 01:26:19,840
i just want to make sure i do this right

1916
01:26:20,840 --> 01:26:23,840
sorry

1917
01:26:27,279 --> 01:26:32,800
that should have a parenthesis around it

1918
01:26:29,600 --> 01:26:32,800
and doesn't for some reason

1919
01:26:34,840 --> 01:26:39,039
um

1920
01:26:36,560 --> 01:26:40,000
okay so that should clear the entire

1921
01:26:39,039 --> 01:26:43,439
thing

1922
01:26:40,000 --> 01:26:45,520
um and so we should be starting off with

1923
01:26:43,439 --> 01:26:48,638
clean values

1924
01:26:45,520 --> 01:26:52,080
so when we come through here

1925
01:26:48,639 --> 01:26:54,319
uh and we write stuff in

1926
01:26:52,079 --> 01:26:57,840
let me just validate so this this

1927
01:26:54,319 --> 01:26:57,840
validation here that we're doing

1928
01:27:02,840 --> 01:27:05,840
um

1929
01:27:09,279 --> 01:27:14,238
we should now be able to verify that

1930
01:27:11,198 --> 01:27:17,519
it's clean at the outset

1931
01:27:14,238 --> 01:27:20,638
and bogus in here

1932
01:27:17,520 --> 01:27:25,280
right we should also be able to assert

1933
01:27:20,639 --> 01:27:25,279
that nobody read past the end

1934
01:27:27,039 --> 01:27:31,760
right oops

1935
01:27:30,158 --> 01:27:33,359
so nobody should be able to read past

1936
01:27:31,760 --> 01:27:35,840
the end of it so let's

1937
01:27:33,359 --> 01:27:38,559
let's just make sure that's true before

1938
01:27:35,840 --> 01:27:38,560
we go any further

1939
01:27:39,920 --> 01:27:49,119
good um and then let's try to validate

1940
01:27:44,000 --> 01:27:52,800
all of the leaves before we start right

1941
01:27:49,119 --> 01:27:52,800
so we start here

1942
01:27:53,119 --> 01:28:01,840
we go here

1943
01:28:04,238 --> 01:28:11,359
oh actually so no

1944
01:28:08,000 --> 01:28:11,359
this is not quite right

1945
01:28:12,719 --> 01:28:20,000
is it no no it is okay

1946
01:28:17,439 --> 01:28:20,879
um so we're going through all of them

1947
01:28:20,000 --> 01:28:23,679
here

1948
01:28:20,880 --> 01:28:25,520
and they should all validate because

1949
01:28:23,679 --> 01:28:29,600
none of them should have anything in it

1950
01:28:25,520 --> 01:28:32,960
they should all be zero

1951
01:28:29,600 --> 01:28:35,199
and looks like that's okay and so now i

1952
01:28:32,960 --> 01:28:39,119
should be able to verify in theory

1953
01:28:35,198 --> 01:28:44,158
that this will now trigger

1954
01:28:39,119 --> 01:28:44,158
so when we validate after the fill-in

1955
01:28:46,399 --> 01:28:52,399
perfect um and so in

1956
01:28:49,600 --> 01:28:53,280
here we are actually writing bogus

1957
01:28:52,399 --> 01:28:57,599
values

1958
01:28:53,279 --> 01:29:01,119
uh in to this um

1959
01:28:57,600 --> 01:29:05,760
like this box refc stuff is

1960
01:29:01,119 --> 01:29:09,359
is bogus and we don't actually know why

1961
01:29:05,760 --> 01:29:10,159
uh it could be that the input values are

1962
01:29:09,359 --> 01:29:11,920
wrong

1963
01:29:10,158 --> 01:29:14,879
it could be that the compiler is getting

1964
01:29:11,920 --> 01:29:18,639
confused on this lane index right

1965
01:29:14,880 --> 01:29:20,880
um but refcolor.x.e is like the only

1966
01:29:18,639 --> 01:29:20,880
thing

1967
01:29:20,960 --> 01:29:25,600
like there's not a lot else that can be

1968
01:29:23,600 --> 01:29:27,310
happening there

1969
01:29:25,600 --> 01:29:30,079
right um

1970
01:29:27,310 --> 01:29:34,080
[Music]

1971
01:29:30,079 --> 01:29:34,079
like if we look uh

1972
01:29:34,639 --> 01:29:43,600
we're assuming that this is cabined

1973
01:29:38,399 --> 01:29:43,599
yeah uh like this should be

1974
01:29:50,158 --> 01:29:53,359
uh this should this should be able to

1975
01:29:52,158 --> 01:29:56,638
trigger right

1976
01:29:53,359 --> 01:29:59,759
in the right around that actual

1977
01:29:56,639 --> 01:29:59,760
code yeah

1978
01:30:01,039 --> 01:30:07,840
so we should be able to crash it right

1979
01:30:03,760 --> 01:30:11,760
in there

1980
01:30:07,840 --> 01:30:11,760
uh and you can you can see it happening

1981
01:30:12,800 --> 01:30:17,520
unfortunately box is not available for

1982
01:30:15,119 --> 01:30:20,238
us uh

1983
01:30:17,520 --> 01:30:21,520
box is the thing that we're actually

1984
01:30:20,238 --> 01:30:23,279
getting the data from

1985
01:30:21,520 --> 01:30:25,040
so it's like for some reason we can't

1986
01:30:23,279 --> 01:30:29,119
get that input boxes

1987
01:30:25,039 --> 01:30:29,119
is what can we see that

1988
01:30:32,840 --> 01:30:35,840
and

1989
01:30:36,479 --> 01:30:38,718
well

1990
01:30:44,158 --> 01:30:49,839
i mean that's not reassuring

1991
01:30:52,399 --> 01:31:00,879
so it looks like possibly um

1992
01:30:57,119 --> 01:31:03,359
we're literally just getting bogus input

1993
01:31:00,880 --> 01:31:04,159
if that's the case that means the bug

1994
01:31:03,359 --> 01:31:06,799
isn't even

1995
01:31:04,158 --> 01:31:07,679
in the lighting code it's in the input

1996
01:31:06,800 --> 01:31:10,800
code

1997
01:31:07,679 --> 01:31:15,199
right so if we go here and say

1998
01:31:10,800 --> 01:31:18,320
all right mr grimbleton

1999
01:31:15,198 --> 01:31:20,719
like tell me about your input

2000
01:31:18,319 --> 01:31:22,319
code like tell me about tell me about

2001
01:31:20,719 --> 01:31:25,439
the actual thing that feeds in

2002
01:31:22,319 --> 01:31:26,960
to this routine for box colors what does

2003
01:31:25,439 --> 01:31:30,479
that have to say

2004
01:31:26,960 --> 01:31:31,840
for itself all right so that is

2005
01:31:30,479 --> 01:31:34,959
supremely messed up

2006
01:31:31,840 --> 01:31:36,960
that means according to this and this

2007
01:31:34,960 --> 01:31:39,279
could still not be the case but

2008
01:31:36,960 --> 01:31:41,439
according to our pincing we have

2009
01:31:39,279 --> 01:31:45,840
completely exonerated the entire

2010
01:31:41,439 --> 01:31:45,839
lighting pipeline

2011
01:31:48,800 --> 01:31:56,960
i mean that's what it says right

2012
01:31:52,800 --> 01:32:00,400
as far as i can tell that's

2013
01:31:56,960 --> 01:32:04,480
that's what happened right um

2014
01:32:00,399 --> 01:32:07,599
and i i don't know like it does not look

2015
01:32:04,479 --> 01:32:12,959
like that code is implicated here

2016
01:32:07,600 --> 01:32:16,639
i so

2017
01:32:12,960 --> 01:32:16,639
so there we have it um

2018
01:32:20,079 --> 01:32:24,399
so i don't know i i i guess i will

2019
01:32:22,880 --> 01:32:25,199
literally just move on to looking

2020
01:32:24,399 --> 01:32:28,479
outside

2021
01:32:25,198 --> 01:32:30,638
at the actual like place where we push

2022
01:32:28,479 --> 01:32:33,119
this stuff down

2023
01:32:30,639 --> 01:32:34,960
we will just validate that these color

2024
01:32:33,119 --> 01:32:36,800
values are actually correct when they're

2025
01:32:34,960 --> 01:32:38,960
getting pushed in here because i don't

2026
01:32:36,800 --> 01:32:38,960
know

2027
01:32:39,119 --> 01:32:42,479
there's nothing else that i can see here

2028
01:32:42,079 --> 01:32:46,800
that

2029
01:32:42,479 --> 01:32:48,158
appear to be uh that that

2030
01:32:46,800 --> 01:32:50,079
like i don't know where else to track

2031
01:32:48,158 --> 01:32:52,158
this bug down to like that that was it

2032
01:32:50,079 --> 01:32:54,639
that was all the lighting code did so

2033
01:32:52,158 --> 01:32:56,000
like if the renderer is handing it

2034
01:32:54,639 --> 01:32:58,960
negative values for real

2035
01:32:56,000 --> 01:33:00,399
then that's where they're coming from

2036
01:32:58,960 --> 01:33:04,319
right

2037
01:33:00,399 --> 01:33:05,439
uh so you know the bugs are coming from

2038
01:33:04,319 --> 01:33:08,639
inside

2039
01:33:05,439 --> 01:33:11,359
the house at this point um

2040
01:33:08,639 --> 01:33:12,000
so i'm going to validate uh those those

2041
01:33:11,359 --> 01:33:13,759
texels

2042
01:33:12,000 --> 01:33:15,520
all right four coders decided that it

2043
01:33:13,760 --> 01:33:23,520
doesn't want to build anymore

2044
01:33:15,520 --> 01:33:26,320
and i don't know why

2045
01:33:23,520 --> 01:33:26,320
wait uh

2046
01:33:29,359 --> 01:33:37,679
why does it not want to build sometimes

2047
01:33:31,920 --> 01:33:40,719
i don't understand

2048
01:33:37,679 --> 01:33:41,279
there we go um all right let me go back

2049
01:33:40,719 --> 01:33:43,279
to

2050
01:33:41,279 --> 01:33:45,119
what i was doing before uh so looking at

2051
01:33:43,279 --> 01:33:48,840
these refc lines we've got the lighting

2052
01:33:45,119 --> 01:33:51,840
refse lines we've got these refse lines

2053
01:33:48,840 --> 01:33:51,840
here

2054
01:33:52,639 --> 01:33:56,319
um and uh

2055
01:34:02,880 --> 01:34:06,079
and these validate texl functions i'm

2056
01:34:04,639 --> 01:34:08,239
just going to pull

2057
01:34:06,079 --> 01:34:10,960
i'm going to pull them out so everyone

2058
01:34:08,238 --> 01:34:10,959
can call them

2059
01:34:13,039 --> 01:34:17,359
if it's the kind of thing you would like

2060
01:34:14,479 --> 01:34:20,238
to do with your time

2061
01:34:17,359 --> 01:34:20,238
you can call them

2062
01:34:21,039 --> 01:34:24,158
i guess not that one because that's not

2063
01:34:22,719 --> 01:34:27,679
defined

2064
01:34:24,158 --> 01:34:28,238
uh and i also want to look for there was

2065
01:34:27,679 --> 01:34:33,840
one more

2066
01:34:28,238 --> 01:34:38,319
right is it here

2067
01:34:33,840 --> 01:34:41,840
there's one more in here somewhere so

2068
01:34:38,319 --> 01:34:47,840
we've got here

2069
01:34:41,840 --> 01:34:47,840
here here

2070
01:34:49,198 --> 01:35:01,839
um oops

2071
01:35:02,158 --> 01:35:07,439
validate texel v3 declared but not

2072
01:35:04,800 --> 01:35:07,440
defined

2073
01:35:12,840 --> 01:35:15,840
really

2074
01:35:16,238 --> 01:35:21,519
uh but it's right

2075
01:35:26,840 --> 01:35:29,840
there

2076
01:35:34,319 --> 01:35:43,198
someone tell me what they mean by

2077
01:35:35,600 --> 01:35:48,320
declared and not defined in that case

2078
01:35:43,198 --> 01:35:48,319
tell you what since i'm feeling generous

2079
01:35:50,639 --> 01:35:57,840
there you go

2080
01:36:01,439 --> 01:36:05,839
okay so now we're getting into voodoo

2081
01:36:04,719 --> 01:36:08,960
land

2082
01:36:05,840 --> 01:36:10,079
because i don't know where else we're

2083
01:36:08,960 --> 01:36:12,960
getting these boxes

2084
01:36:10,079 --> 01:36:14,639
from i guess we'll find out but i'm just

2085
01:36:12,960 --> 01:36:19,920
going to go ahead and check

2086
01:36:14,639 --> 01:36:24,480
to see uh if we validate the texels

2087
01:36:19,920 --> 01:36:39,199
um at all times

2088
01:36:24,479 --> 01:36:42,479
just to make sure

2089
01:36:39,198 --> 01:36:42,479
that's in handmade array

2090
01:36:43,359 --> 01:36:48,238
surely a bug in handmade ray can not be

2091
01:36:45,600 --> 01:36:48,239
affecting us

2092
01:36:50,840 --> 01:36:53,840
here

2093
01:37:04,880 --> 01:37:10,319
so i literally can't figure out where

2094
01:37:08,880 --> 01:37:13,440
that's coming from now

2095
01:37:10,319 --> 01:37:16,559
so we're going to have to do this

2096
01:37:13,439 --> 01:37:18,158
like we've pushed back to the place

2097
01:37:16,560 --> 01:37:20,400
where we think it has to happen

2098
01:37:18,158 --> 01:37:21,279
and it turns out that like we don't see

2099
01:37:20,399 --> 01:37:24,000
it happening

2100
01:37:21,279 --> 01:37:24,000
there at all

2101
01:37:24,319 --> 01:37:28,000
um so now we have to figure out how are

2102
01:37:27,359 --> 01:37:31,279
we getting

2103
01:37:28,000 --> 01:37:35,279
in here right

2104
01:37:31,279 --> 01:37:40,238
um how have we managed to get to this

2105
01:37:35,279 --> 01:37:40,238
point in the code uh

2106
01:37:44,800 --> 01:37:49,119
with a ref c that's bogus but we can't

2107
01:37:47,198 --> 01:37:52,879
figure out who put it there

2108
01:37:49,118 --> 01:37:54,639
right is someone mucking with the memory

2109
01:37:52,880 --> 01:37:56,400
uh do we have like an out of bounds

2110
01:37:54,639 --> 01:37:58,400
right bug because again this is in the

2111
01:37:56,399 --> 01:38:00,000
performance oriented side of the code

2112
01:37:58,399 --> 01:38:01,439
so we don't have a lot of safety net

2113
01:38:00,000 --> 01:38:04,800
here right

2114
01:38:01,439 --> 01:38:08,238
um you know we're kind of in the place

2115
01:38:04,800 --> 01:38:08,239
where things are kind of fast and loose

2116
01:38:15,520 --> 01:38:24,239
so we have to look at this

2117
01:38:21,198 --> 01:38:25,039
maybe the count is wrong maybe the input

2118
01:38:24,238 --> 01:38:28,638
boxes

2119
01:38:25,039 --> 01:38:30,960
pointer is off i have no idea

2120
01:38:28,639 --> 01:38:32,480
but we now have to kind of look and see

2121
01:38:30,960 --> 01:38:35,039
how are we getting this

2122
01:38:32,479 --> 01:38:35,599
and what might be happening that would

2123
01:38:35,039 --> 01:38:38,560
cause it

2124
01:38:35,600 --> 01:38:40,639
to be busted so i'm going to look for

2125
01:38:38,560 --> 01:38:42,560
the grid build spatial partition call

2126
01:38:40,639 --> 01:38:45,118
point

2127
01:38:42,560 --> 01:38:46,159
which is here you can see the input

2128
01:38:45,118 --> 01:38:48,079
boxes

2129
01:38:46,158 --> 01:38:50,479
uh they just get passed to internal

2130
01:38:48,079 --> 01:38:51,679
lighting internal lighting core because

2131
01:38:50,479 --> 01:38:53,279
in in theory

2132
01:38:51,679 --> 01:38:54,960
these are just going to be passed down

2133
01:38:53,279 --> 01:38:56,000
directly so here's internal lighting

2134
01:38:54,960 --> 01:38:58,079
core

2135
01:38:56,000 --> 01:38:59,840
uh you can see here that it just passes

2136
01:38:58,079 --> 01:39:02,158
the occluder count and the occluders

2137
01:38:59,840 --> 01:39:03,679
right which is a thing that comes from

2138
01:39:02,158 --> 01:39:06,158
the renderer and should just

2139
01:39:03,679 --> 01:39:06,800
generally be untouched like i feel like

2140
01:39:06,158 --> 01:39:10,960
it's just

2141
01:39:06,800 --> 01:39:13,119
it should just be the same right uh

2142
01:39:10,960 --> 01:39:14,239
you know and it's it's really not ever

2143
01:39:13,118 --> 01:39:17,039
edited so

2144
01:39:14,238 --> 01:39:18,559
it the lighting code doesn't care about

2145
01:39:17,039 --> 01:39:21,519
this at all

2146
01:39:18,560 --> 01:39:22,639
uh and it looks like we're talking about

2147
01:39:21,520 --> 01:39:25,440
whoever's calling

2148
01:39:22,639 --> 01:39:25,440
update lighting

2149
01:39:25,679 --> 01:39:31,118
you know who knows so if we go look at

2150
01:39:29,279 --> 01:39:32,559
at the world mode code here right you

2151
01:39:31,118 --> 01:39:34,079
can see that it's it's reading it from

2152
01:39:32,560 --> 01:39:35,920
the command buffer

2153
01:39:34,079 --> 01:39:38,000
um it's doing a safe truncate which

2154
01:39:35,920 --> 01:39:40,239
means that this is never allowed to be

2155
01:39:38,000 --> 01:39:42,800
greater than 16 bits

2156
01:39:40,238 --> 01:39:44,238
uh and we can try and verify that but

2157
01:39:42,800 --> 01:39:47,039
this will assert that

2158
01:39:44,238 --> 01:39:49,198
to make sure that's true and so the

2159
01:39:47,039 --> 01:39:51,840
light occluders array

2160
01:39:49,198 --> 01:39:52,559
uh is just coming directly from the

2161
01:39:51,840 --> 01:39:56,880
command

2162
01:39:52,560 --> 01:40:09,840
structure right um

2163
01:39:56,880 --> 01:40:09,840
so let's take a look

2164
01:40:10,000 --> 01:40:15,520
so if we look at who's writing to or

2165
01:40:13,118 --> 01:40:16,319
setting up or doing stuff with this

2166
01:40:15,520 --> 01:40:20,639
particular

2167
01:40:16,319 --> 01:40:23,679
array uh you can see that there's like a

2168
01:40:20,639 --> 01:40:24,719
you know an array in here you know are

2169
01:40:23,679 --> 01:40:29,118
we checking to see

2170
01:40:24,719 --> 01:40:32,319
for overwrites there um would be

2171
01:40:29,118 --> 01:40:34,238
would be one thing uh like maybe we're

2172
01:40:32,319 --> 01:40:35,920
like overwriting the boundary of it

2173
01:40:34,238 --> 01:40:38,399
you know like there's more than like

2174
01:40:35,920 --> 01:40:42,399
we're writing more than the max

2175
01:40:38,399 --> 01:40:45,599
um and you can see a check there

2176
01:40:42,399 --> 01:40:47,359
um and a check there the only two things

2177
01:40:45,600 --> 01:40:50,480
are occluders and lights that's the only

2178
01:40:47,359 --> 01:40:53,519
two things that can write in there

2179
01:40:50,479 --> 01:40:56,079
the checks seem to be valid the check's

2180
01:40:53,520 --> 01:40:56,080
in the mail

2181
01:41:02,840 --> 01:41:08,000
um so

2182
01:41:04,238 --> 01:41:11,919
that doesn't seem super likely

2183
01:41:08,000 --> 01:41:11,920
right i mean that

2184
01:41:14,479 --> 01:41:21,599
that looks about right um

2185
01:41:19,600 --> 01:41:23,039
so i guess i'm gonna go ahead and say

2186
01:41:21,600 --> 01:41:25,039
i'm gonna actually just put in a

2187
01:41:23,039 --> 01:41:26,800
validator for the light occluder set

2188
01:41:25,039 --> 01:41:29,760
and we're gonna have to do the same

2189
01:41:26,800 --> 01:41:32,960
exact pincing process that we just did

2190
01:41:29,760 --> 01:41:36,639
right um we'll have to

2191
01:41:32,960 --> 01:41:38,880
you know we will have to do it

2192
01:41:36,639 --> 01:41:38,880
uh

2193
01:41:41,920 --> 01:41:45,279
oh missing a certain around the validate

2194
01:41:43,118 --> 01:41:49,279
texture ah okay

2195
01:41:45,279 --> 01:41:52,000
thank you chat um speaking of that

2196
01:41:49,279 --> 01:41:53,118
i would like to change that slightly uh

2197
01:41:52,000 --> 01:41:55,359
while we're doing that

2198
01:41:53,118 --> 01:41:57,279
um although i guess i'll do it this way

2199
01:41:55,359 --> 01:41:58,719
for now but i would like to change these

2200
01:41:57,279 --> 01:42:00,319
so that this is a

2201
01:41:58,719 --> 01:42:02,239
like so that we can leave these in i'd

2202
01:42:00,319 --> 01:42:06,079
like to make this a macro

2203
01:42:02,238 --> 01:42:06,079
um do you know what i'm saying

2204
01:42:10,319 --> 01:42:13,840
so that we just do validate texel as a

2205
01:42:12,960 --> 01:42:15,198
like uppercase

2206
01:42:13,840 --> 01:42:16,480
and that way i don't have to pull these

2207
01:42:15,198 --> 01:42:18,319
out because i'd like to leave these in

2208
01:42:16,479 --> 01:42:22,399
this could happen again

2209
01:42:18,319 --> 01:42:24,799
right um and if this happens again

2210
01:42:22,399 --> 01:42:26,238
we would want to be able to turn it on

2211
01:42:24,800 --> 01:42:29,679
again

2212
01:42:26,238 --> 01:42:35,919
uh so we'll see whoa uh

2213
01:42:29,679 --> 01:42:35,920
all right not what we were expecting

2214
01:42:38,319 --> 01:42:43,840
this is a really strange bug

2215
01:42:51,039 --> 01:42:55,039
so in this case we we actually now can

2216
01:42:53,359 --> 01:42:57,759
hit it because we added that assert

2217
01:42:55,039 --> 01:42:58,319
so the color of the occluder in this

2218
01:42:57,760 --> 01:43:01,360
case

2219
01:42:58,319 --> 01:43:04,559
where we're reading out the cube here uh

2220
01:43:01,359 --> 01:43:06,799
is in fact weird

2221
01:43:04,560 --> 01:43:08,159
now i don't know that we can actually

2222
01:43:06,800 --> 01:43:08,480
look at it unfortunately because we're

2223
01:43:08,158 --> 01:43:12,000
in

2224
01:43:08,479 --> 01:43:14,959
release mode so we don't know what

2225
01:43:12,000 --> 01:43:16,479
we don't know why that would be right

2226
01:43:14,960 --> 01:43:19,359
it's just complete garbage

2227
01:43:16,479 --> 01:43:21,919
unfortunately as it often is in release

2228
01:43:19,359 --> 01:43:24,639
mode so we don't really get to see

2229
01:43:21,920 --> 01:43:25,679
what's happening here now why we can't

2230
01:43:24,639 --> 01:43:27,690
look at these

2231
01:43:25,679 --> 01:43:30,760
i don't know um

2232
01:43:27,689 --> 01:43:30,759
[Music]

2233
01:43:30,800 --> 01:43:39,600
that is probably the value maybe

2234
01:43:34,960 --> 01:43:41,679
um it's hard to say right

2235
01:43:39,600 --> 01:43:44,239
but if we take a look at the pieces here

2236
01:43:41,679 --> 01:43:46,960
there's supposedly three pieces

2237
01:43:44,238 --> 01:43:48,959
here's the first one here's the second

2238
01:43:46,960 --> 01:43:52,719
one

2239
01:43:48,960 --> 01:43:55,439
and here's the third one yeah

2240
01:43:52,719 --> 01:43:56,239
um and if we take a look at at what

2241
01:43:55,439 --> 01:43:59,279
these

2242
01:43:56,238 --> 01:44:00,399
pieces actually uh refer to we've got

2243
01:43:59,279 --> 01:44:03,759
flags

2244
01:44:00,399 --> 01:44:06,879
set on these so it's 4 16 16.

2245
01:44:03,760 --> 01:44:08,960
uh that's only one flag set for each one

2246
01:44:06,880 --> 01:44:10,719
uh and we can take a look at what the

2247
01:44:08,960 --> 01:44:14,880
flags actually

2248
01:44:10,719 --> 01:44:17,520
reference in here so there's the pieces

2249
01:44:14,880 --> 01:44:18,840
and they have the flags set up for them

2250
01:44:17,520 --> 01:44:23,280
which is

2251
01:44:18,840 --> 01:44:23,279
like um

2252
01:44:23,760 --> 01:44:28,560
not it's not that it's this

2253
01:44:29,520 --> 01:44:35,520
right and so

2254
01:44:33,198 --> 01:44:36,319
this one would say what it was you can

2255
01:44:35,520 --> 01:44:39,840
see here

2256
01:44:36,319 --> 01:44:42,559
that so occluder is 16 so so these

2257
01:44:39,840 --> 01:44:43,360
two are both occluders uh and then the

2258
01:44:42,560 --> 01:44:46,400
the

2259
01:44:43,359 --> 01:44:48,880
four is a cube so it's like cube uh

2260
01:44:46,399 --> 01:44:51,679
occluder occluder

2261
01:44:48,880 --> 01:44:54,079
and neither are lights so they're

2262
01:44:51,679 --> 01:44:59,760
occluders specifically

2263
01:44:54,079 --> 01:45:03,840
and the color on these two

2264
01:44:59,760 --> 01:45:06,079
um is correct in both cases

2265
01:45:03,840 --> 01:45:06,079
right

2266
01:45:07,840 --> 01:45:13,440
so when we get back to

2267
01:45:10,960 --> 01:45:15,198
the code that we're actually looking at

2268
01:45:13,439 --> 01:45:17,198
here like if i actually go

2269
01:45:15,198 --> 01:45:18,638
down to the push occluder call that's

2270
01:45:17,198 --> 01:45:22,079
here

2271
01:45:18,639 --> 01:45:31,840
um it's pushing on color right

2272
01:45:22,079 --> 01:45:31,840
uh what was that so here is color

2273
01:45:37,679 --> 01:45:45,840
i mean i suppose that could be a bug

2274
01:45:42,840 --> 01:45:45,840
there

2275
01:45:46,158 --> 01:45:48,559
um

2276
01:45:57,198 --> 01:46:00,799
i'm assuming i can't actually look at

2277
01:45:58,479 --> 01:46:02,079
this value right go look at the assembly

2278
01:46:00,800 --> 01:46:03,279
and see

2279
01:46:02,079 --> 01:46:06,399
we don't know if that i mean that could

2280
01:46:03,279 --> 01:46:08,639
be anything in debug mode

2281
01:46:06,399 --> 01:46:08,638
um

2282
01:46:10,479 --> 01:46:13,839
so match vector

2283
01:46:17,600 --> 01:46:21,840
what the heck is tag that just looks

2284
01:46:22,800 --> 01:46:27,199
yeah that's just wrong so that's that's

2285
01:46:25,198 --> 01:46:30,799
a bug i don't know if it's the bug

2286
01:46:27,198 --> 01:46:34,319
uh but that's that's a bug for sure

2287
01:46:30,800 --> 01:46:35,840
um so here are the things that you're

2288
01:46:34,319 --> 01:46:38,079
allowed to look up into match vector

2289
01:46:35,840 --> 01:46:40,079
tag ghost is literally just complete

2290
01:46:38,079 --> 01:46:42,319
nonsense so so this right here is

2291
01:46:40,079 --> 01:46:46,479
looking up into complete la la land

2292
01:46:42,319 --> 01:46:46,479
right um

2293
01:46:46,880 --> 01:46:55,199
thanks for no warning on that compiler

2294
01:46:50,800 --> 01:46:56,400
like what so this is a this is a fixed

2295
01:46:55,198 --> 01:46:59,519
length array

2296
01:46:56,399 --> 01:47:02,960
and i'm looking up into it with a with a

2297
01:46:59,520 --> 01:47:05,760
constant value right i'm just reading

2298
01:47:02,960 --> 01:47:06,639
right the heck off that array this is an

2299
01:47:05,760 --> 01:47:08,800
example where

2300
01:47:06,639 --> 01:47:09,920
the compiler could easily just tell you

2301
01:47:08,800 --> 01:47:13,279
that you were off

2302
01:47:09,920 --> 01:47:13,279
and it doesn't

2303
01:47:14,479 --> 01:47:18,559
i mean it's my fault because it was dumb

2304
01:47:17,198 --> 01:47:23,359
but

2305
01:47:18,560 --> 01:47:24,000
you know uh that that's not a case of

2306
01:47:23,359 --> 01:47:25,920
like c

2307
01:47:24,000 --> 01:47:27,359
not having the information to tell you

2308
01:47:25,920 --> 01:47:31,679
that you made a mistake

2309
01:47:27,359 --> 01:47:36,319
right uh that's an easy to catch one

2310
01:47:31,679 --> 01:47:36,319
so not a huge fan of that

2311
01:47:41,279 --> 01:47:51,840
but okay

2312
01:47:52,158 --> 01:48:05,839
so this piece of code here uh

2313
01:47:55,198 --> 01:48:05,839
is just not allowed

2314
01:48:10,079 --> 01:48:14,319
and i guess i don't know why that would

2315
01:48:12,719 --> 01:48:15,359
not produce an out of bounds array

2316
01:48:14,319 --> 01:48:21,359
access warning

2317
01:48:15,359 --> 01:48:24,559
um i i do not know why that would be

2318
01:48:21,359 --> 01:48:25,599
uh because that that is a puzzler for

2319
01:48:24,560 --> 01:48:29,199
sure

2320
01:48:25,600 --> 01:48:29,199
right that is a puzzler

2321
01:48:29,520 --> 01:48:35,440
um all right so now we're kind of in a

2322
01:48:32,960 --> 01:48:37,760
bad state because we don't have a way to

2323
01:48:35,439 --> 01:48:42,238
reproduce this reliably

2324
01:48:37,760 --> 01:48:42,239
uh you know what i'm saying

2325
01:48:44,840 --> 01:48:49,279
um

2326
01:48:46,560 --> 01:48:49,600
since we couldn't we didn't have a way

2327
01:48:49,279 --> 01:48:53,118
of

2328
01:48:49,600 --> 01:48:57,440
of of like 100 certain

2329
01:48:53,118 --> 01:48:57,439
reproduce this this error um

2330
01:48:59,359 --> 01:49:05,679
i i'm i'm not quite sure how to

2331
01:49:02,560 --> 01:49:07,600
to get it to happen uh uh to to

2332
01:49:05,679 --> 01:49:09,520
to validate that that actually fixed it

2333
01:49:07,600 --> 01:49:12,960
right um

2334
01:49:09,520 --> 01:49:15,280
because it it doesn't 100 repro

2335
01:49:12,960 --> 01:49:16,239
and we also know that that i guess that

2336
01:49:15,279 --> 01:49:20,479
means that

2337
01:49:16,238 --> 01:49:20,479
somebody in here actually um

2338
01:49:22,079 --> 01:49:25,118
well yeah i mean i guess we really just

2339
01:49:23,599 --> 01:49:29,840
don't know how we would how we would

2340
01:49:25,118 --> 01:49:29,839
validate that

2341
01:49:32,399 --> 01:49:43,839
i mean how we've we can prove we fixed

2342
01:49:34,399 --> 01:49:43,839
it right

2343
01:49:51,840 --> 01:49:56,639
um but that may be it um that may be the

2344
01:49:54,719 --> 01:49:59,118
whole thing i don't know

2345
01:49:56,639 --> 01:50:00,239
uh so i'm gonna do some extra stuff just

2346
01:49:59,118 --> 01:50:02,719
really quick before

2347
01:50:00,238 --> 01:50:04,479
we finish up here uh and then we'll just

2348
01:50:02,719 --> 01:50:06,000
see if we get this bug

2349
01:50:04,479 --> 01:50:08,158
back again because there's really no way

2350
01:50:06,000 --> 01:50:10,399
to prove that that was it

2351
01:50:08,158 --> 01:50:11,759
um it because there could be other

2352
01:50:10,399 --> 01:50:13,679
reasons why it was happening that we

2353
01:50:11,760 --> 01:50:14,960
don't know about so so we don't really

2354
01:50:13,679 --> 01:50:17,599
have a way to say that that was

2355
01:50:14,960 --> 01:50:21,039
definitively the only problem

2356
01:50:17,599 --> 01:50:25,119
um so what i'm gonna do is i'm gonna go

2357
01:50:21,039 --> 01:50:28,560
to validate texel

2358
01:50:25,118 --> 01:50:30,079
here uh and what i'm going to do is say

2359
01:50:28,560 --> 01:50:32,480
that this is going to become like a

2360
01:50:30,079 --> 01:50:34,880
validate text

2361
01:50:32,479 --> 01:50:37,519
underscore kind of a thing right and

2362
01:50:34,880 --> 01:50:43,118
then i'm going to pound to find validate

2363
01:50:37,520 --> 01:50:43,119
texel to be validate texel

2364
01:50:44,960 --> 01:50:51,279
like so and then we

2365
01:50:48,319 --> 01:50:52,399
are going to change that to an

2366
01:50:51,279 --> 01:50:55,840
underscore

2367
01:50:52,399 --> 01:50:58,158
and uh

2368
01:50:55,840 --> 01:50:58,159
run

2369
01:50:59,920 --> 01:51:03,760
uh and then what i would like to do here

2370
01:51:02,719 --> 01:51:06,960
is just say

2371
01:51:03,760 --> 01:51:09,039
okay so

2372
01:51:06,960 --> 01:51:10,239
so this is okay because that's not

2373
01:51:09,039 --> 01:51:12,560
supposed to be an assertion so that's

2374
01:51:10,238 --> 01:51:14,638
going to call the underscore version

2375
01:51:12,560 --> 01:51:16,400
these are all going to change to

2376
01:51:14,639 --> 01:51:22,319
validate texel

2377
01:51:16,399 --> 01:51:22,319
like so um

2378
01:51:28,560 --> 01:51:34,000
uh these i i don't really know if we

2379
01:51:32,719 --> 01:51:36,000
should leave these in or not

2380
01:51:34,000 --> 01:51:37,679
because none of this code was actually

2381
01:51:36,000 --> 01:51:40,000
implicated at all

2382
01:51:37,679 --> 01:51:41,520
so i think i may just pull those out

2383
01:51:40,000 --> 01:51:44,960
because

2384
01:51:41,520 --> 01:51:44,960
they really don't need to be there

2385
01:51:46,079 --> 01:51:51,760
like this code was just fine so

2386
01:51:49,279 --> 01:52:03,840
i don't think that has to remain for any

2387
01:51:51,760 --> 01:52:03,840
particular reason

2388
01:52:13,599 --> 01:52:19,840
so then that also begs the question does

2389
01:52:15,920 --> 01:52:19,840
that mean this didn't have to be cleared

2390
01:52:24,560 --> 01:52:28,840
i think it does still i think that was a

2391
01:52:26,960 --> 01:52:31,840
bug

2392
01:52:28,840 --> 01:52:31,840
right

2393
01:52:50,719 --> 01:52:55,118
i think the only way that's not a bug is

2394
01:52:52,960 --> 01:52:58,639
if you clear it

2395
01:52:55,118 --> 01:53:00,880
somewhere else as well or something

2396
01:52:58,639 --> 01:53:00,880
right

2397
01:53:08,639 --> 01:53:13,840
i'm going to leave that assertion in

2398
01:53:20,319 --> 01:53:24,639
um okay and

2399
01:53:25,760 --> 01:53:28,800
everything seems good

2400
01:53:29,520 --> 01:53:33,520
i'm going to re-enable multi-threading

2401
01:53:34,719 --> 01:53:38,960
which i guess i could have done live but

2402
01:53:36,560 --> 01:53:38,960
i didn't

2403
01:53:39,198 --> 01:53:55,839
um and then i'm gonna see if we notice

2404
01:53:42,479 --> 01:53:55,839
anything strange happening

2405
01:54:34,840 --> 01:54:37,840
um

2406
01:54:57,520 --> 01:55:05,840
so it seems pretty good um

2407
01:55:17,840 --> 01:55:19,920
it

2408
01:56:10,000 --> 01:56:17,279
all right so looks

2409
01:56:13,198 --> 01:56:20,879
like we're okay um

2410
01:56:17,279 --> 01:56:24,158
i'm gonna call that fixed for now

2411
01:56:20,880 --> 01:56:27,840
what a hilarious bug very interesting

2412
01:56:24,158 --> 01:56:30,319
um i guess i don't have very much to say

2413
01:56:27,840 --> 01:56:30,319
about that

2414
01:56:30,560 --> 01:56:33,760
uh other than yeah pincers that's why i

2415
01:56:32,639 --> 01:56:36,480
use them because

2416
01:56:33,760 --> 01:56:38,159
a lot of times you're totally wrong like

2417
01:56:36,479 --> 01:56:40,399
or not even totally wrong but

2418
01:56:38,158 --> 01:56:42,399
when you have no idea where the code

2419
01:56:40,399 --> 01:56:43,759
what part of the code is causing the bug

2420
01:56:42,399 --> 01:56:46,479
oftentimes it turns out to be a

2421
01:56:43,760 --> 01:56:49,199
surprising part of the code right

2422
01:56:46,479 --> 01:56:50,479
so it behooves you to just figure out a

2423
01:56:49,198 --> 01:56:53,279
way to like

2424
01:56:50,479 --> 01:56:55,359
branch you know basically like split

2425
01:56:53,279 --> 01:56:57,279
where the code could be going wrong

2426
01:56:55,359 --> 01:56:59,279
and you just keep pushing that until you

2427
01:56:57,279 --> 01:57:02,880
can find like a definitive answer

2428
01:56:59,279 --> 01:57:06,639
right um

2429
01:57:02,880 --> 01:57:10,800
so yeah i guess i would say that that is

2430
01:57:06,639 --> 01:57:13,279
yeah that is that is an effective

2431
01:57:10,800 --> 01:57:14,719
very effective debugging technique i

2432
01:57:13,279 --> 01:57:17,039
highly recommend it

2433
01:57:14,719 --> 01:57:17,039
um

2434
01:57:18,639 --> 01:57:25,840
i highly recommend it

2435
01:57:26,399 --> 01:57:30,719
so in terms of validating the atlas

2436
01:57:29,270 --> 01:57:33,040
[Music]

2437
01:57:30,719 --> 01:57:33,039
you know

2438
01:57:37,198 --> 01:57:42,079
we probably don't want to have that be

2439
01:57:50,840 --> 01:57:53,599
um

2440
01:57:52,238 --> 01:57:55,359
we probably want to do something like

2441
01:57:53,599 --> 01:57:56,880
this so that we have the light atlas

2442
01:57:55,359 --> 01:58:01,118
assert here

2443
01:57:56,880 --> 01:58:04,880
and we have ways of of making this stuff

2444
01:58:01,118 --> 01:58:06,479
uh all work off of that

2445
01:58:04,880 --> 01:58:08,639
so if we define this to be an assert

2446
01:58:06,479 --> 01:58:09,759
then it is we can put this a validate

2447
01:58:08,639 --> 01:58:13,118
texel

2448
01:58:09,760 --> 01:58:15,360
atlas and that'll do basically the same

2449
01:58:13,118 --> 01:58:15,359
thing

2450
01:58:18,840 --> 01:58:21,840
right

2451
01:58:22,479 --> 01:58:26,000
so that way we can do assertions of the

2452
01:58:24,800 --> 01:58:29,119
text of the

2453
01:58:26,000 --> 01:58:32,238
um of the

2454
01:58:29,118 --> 01:58:35,839
texture atlas like anywhere we want in

2455
01:58:32,238 --> 01:58:35,839
the code

2456
01:58:43,198 --> 01:58:45,678
like this

2457
01:58:46,719 --> 01:58:50,480
so what i wanted to be able to do is do

2458
01:58:47,920 --> 01:58:53,840
validate texl atlas like that

2459
01:58:50,479 --> 01:58:55,118
uh and be able to just put those

2460
01:58:53,840 --> 01:58:59,119
anywhere where i feel like

2461
01:58:55,118 --> 01:58:59,118
i want them to happen

2462
01:59:00,880 --> 01:59:05,520
uh and that way like if we experience

2463
01:59:03,279 --> 01:59:07,198
weird lighting artifacts at some point

2464
01:59:05,520 --> 01:59:10,960
and we think the atlas might be

2465
01:59:07,198 --> 01:59:14,319
implicated i can just turn these back on

2466
01:59:10,960 --> 01:59:17,599
and i don't have to uh

2467
01:59:14,319 --> 01:59:20,639
think too hard about it right so

2468
01:59:17,599 --> 01:59:20,639
i'm just gonna do this

2469
01:59:24,639 --> 01:59:34,960
um and get rid of these

2470
01:59:31,760 --> 01:59:44,480
okay um so then

2471
01:59:34,960 --> 01:59:47,760
i i can run it

2472
01:59:44,479 --> 01:59:51,279
uh and there's you know it running

2473
01:59:47,760 --> 01:59:54,320
and i can also then now go in and

2474
01:59:51,279 --> 01:59:57,439
change this around so

2475
01:59:54,319 --> 02:00:00,719
we just don't have any validation

2476
01:59:57,439 --> 02:00:02,879
of anything in the in the atlas

2477
02:00:00,719 --> 02:00:05,198
and run it again and we should be good

2478
02:00:02,880 --> 02:00:05,199
to go

2479
02:00:10,840 --> 02:00:16,159
yeah uh so i think that's good

2480
02:00:13,760 --> 02:00:16,159
oops

2481
02:00:19,198 --> 02:00:23,279
um and so i think you know with the

2482
02:00:21,359 --> 02:00:25,839
lighting now

2483
02:00:23,279 --> 02:00:27,599
that seems much more stable and i think

2484
02:00:25,840 --> 02:00:29,840
mostly the only real thing we

2485
02:00:27,599 --> 02:00:31,679
want to do now is probably just like

2486
02:00:29,840 --> 02:00:35,039
improve the filtering on it

2487
02:00:31,679 --> 02:00:36,489
right so that it's smoother and less

2488
02:00:35,039 --> 02:00:39,279
flickery

2489
02:00:36,489 --> 02:00:41,279
[Music]

2490
02:00:39,279 --> 02:00:42,880
i'd say that's probably about all we

2491
02:00:41,279 --> 02:00:45,198
really need to do

2492
02:00:42,880 --> 02:00:45,199
um

2493
02:00:48,479 --> 02:00:51,839
i wonder at what level it's not

2494
02:00:50,800 --> 02:00:55,039
flickering now

2495
02:00:51,840 --> 02:00:57,920
because i don't really know um like like

2496
02:00:55,039 --> 02:00:57,920
how much blending

2497
02:00:58,158 --> 02:01:03,118
uh makes it not flickery at the moment

2498
02:01:00,560 --> 02:01:06,480
but oh and we need to rerun the sphere

2499
02:01:03,118 --> 02:01:09,839
so we should do that as well uh

2500
02:01:06,479 --> 02:01:09,839
so the hh sphere

2501
02:01:10,960 --> 02:01:13,760
we need to build

2502
02:01:16,560 --> 02:01:23,840
so um

2503
02:01:27,520 --> 02:01:30,800
our h8 sphere now

2504
02:01:32,800 --> 02:01:41,119
uh we

2505
02:01:37,359 --> 02:01:44,479
we have to run this to generate the new

2506
02:01:41,118 --> 02:01:47,519
inl that we use

2507
02:01:44,479 --> 02:01:51,839
for you know for

2508
02:01:47,520 --> 02:01:51,840
all of our light sampling and

2509
02:01:54,238 --> 02:01:59,519
i'm not sure what we were passing as

2510
02:01:57,599 --> 02:02:03,119
parameters there to be completely honest

2511
02:01:59,520 --> 02:02:05,840
but if we look at the inl itself

2512
02:02:03,118 --> 02:02:08,639
which is this uh then these should be

2513
02:02:05,840 --> 02:02:12,319
the ones right so

2514
02:02:08,639 --> 02:02:16,319
assuming that octahedron count is 16

2515
02:02:12,319 --> 02:02:19,519
and octahedron dim is eight

2516
02:02:16,319 --> 02:02:22,719
uh i'm assuming we can just pass

2517
02:02:19,520 --> 02:02:25,760
16 8 here and get the same thing out

2518
02:02:22,719 --> 02:02:26,239
so let's see if that's true so i'm going

2519
02:02:25,760 --> 02:02:30,400
to say

2520
02:02:26,238 --> 02:02:30,399
16 8 and then i'm going to say

2521
02:02:30,479 --> 02:02:35,598
um handmade code uh handmade sampling

2522
02:02:34,238 --> 02:02:39,919
spheres

2523
02:02:35,599 --> 02:02:43,360
like this um and i'm going to

2524
02:02:39,920 --> 02:02:47,118
just see if that thing can converge on

2525
02:02:43,359 --> 02:02:49,598
a reasonable set of of outputs here

2526
02:02:47,118 --> 02:02:50,799
and when it does or if it does then we

2527
02:02:49,599 --> 02:02:54,159
will

2528
02:02:50,800 --> 02:03:01,840
use those and hopefully that will

2529
02:02:54,158 --> 02:03:01,839
provide a improvement right um

2530
02:03:03,599 --> 02:03:10,000
okay so in theory now

2531
02:03:06,880 --> 02:03:13,118
if i reload this buffer

2532
02:03:10,000 --> 02:03:13,118
which i guess i can't do

2533
02:03:13,359 --> 02:03:17,759
so let me try and reload that buffer

2534
02:03:17,920 --> 02:03:21,920
uh yeah so it's still 8 and 16. so in

2535
02:03:20,560 --> 02:03:24,719
theory now if i rebuild

2536
02:03:21,920 --> 02:03:26,079
we should have and we don't really know

2537
02:03:24,719 --> 02:03:29,760
but we should have

2538
02:03:26,079 --> 02:03:32,079
uh fixed like the sign bug in theory was

2539
02:03:29,760 --> 02:03:33,679
making that routine worse as well right

2540
02:03:32,079 --> 02:03:35,679
we don't know that that's true

2541
02:03:33,679 --> 02:03:36,800
and and i don't see any particular

2542
02:03:35,679 --> 02:03:39,920
improvement

2543
02:03:36,800 --> 02:03:41,679
um in the lighting here uh to be honest

2544
02:03:39,920 --> 02:03:43,760
so i don't know that there's really

2545
02:03:41,679 --> 02:03:44,880
anything that that did that we care

2546
02:03:43,760 --> 02:03:47,840
about

2547
02:03:44,880 --> 02:03:48,480
but because it may have been a problem

2548
02:03:47,840 --> 02:03:52,078
um

2549
02:03:48,479 --> 02:03:55,118
we might as well right and and so

2550
02:03:52,078 --> 02:03:56,399
just just trying to do the the due

2551
02:03:55,118 --> 02:03:57,759
diligence there to make sure we don't

2552
02:03:56,399 --> 02:04:01,839
leave that in the code

2553
02:03:57,760 --> 02:04:01,840
and and and leave it in wrong right

2554
02:04:05,840 --> 02:04:09,119
all right so what i wanted to say last

2555
02:04:07,679 --> 02:04:11,279
was just like hey

2556
02:04:09,118 --> 02:04:13,118
what is the t blend value that doesn't

2557
02:04:11,279 --> 02:04:16,399
produce the problem

2558
02:04:13,118 --> 02:04:18,960
um so in the uh lighting code

2559
02:04:16,399 --> 02:04:19,759
when it produces what the t blend value

2560
02:04:18,960 --> 02:04:24,149
is

2561
02:04:19,760 --> 02:04:27,520
uh which would be like in here

2562
02:04:24,149 --> 02:04:27,519
[Music]

2563
02:04:36,840 --> 02:04:40,078
um

2564
02:04:38,479 --> 02:04:43,759
i'm assuming we can set this to anything

2565
02:04:40,078 --> 02:04:43,759
we want so if we set this down

2566
02:04:50,840 --> 02:04:54,319
significantly

2567
02:04:52,399 --> 02:04:56,399
yeah so you can see like you can get

2568
02:04:54,319 --> 02:04:58,880
smoother lighting that just updates more

2569
02:04:56,399 --> 02:04:58,879
slowly

2570
02:05:04,840 --> 02:05:08,000
um

2571
02:05:06,238 --> 02:05:11,198
and you still get a little flickering at

2572
02:05:08,000 --> 02:05:14,078
the at the limit right

2573
02:05:11,198 --> 02:05:14,479
um which suggests to me that yeah like

2574
02:05:14,078 --> 02:05:16,479
just

2575
02:05:14,479 --> 02:05:18,078
just if we just do some more sampling

2576
02:05:16,479 --> 02:05:19,839
theory in there we should be able to

2577
02:05:18,078 --> 02:05:22,880
improve

2578
02:05:19,840 --> 02:05:26,159
upon that um you know

2579
02:05:22,880 --> 02:05:28,719
i don't know for sure right uh

2580
02:05:26,158 --> 02:05:29,439
so i don't want to say that's definitely

2581
02:05:28,719 --> 02:05:33,359
the case

2582
02:05:29,439 --> 02:05:38,319
but suffice to say

2583
02:05:33,359 --> 02:05:41,039
that you know it's

2584
02:05:38,319 --> 02:05:41,039
it's not far

2585
02:05:43,039 --> 02:05:47,519
it's not far off uh but it should it

2586
02:05:46,479 --> 02:05:51,519
should be

2587
02:05:47,520 --> 02:05:52,960
um it should be improved and then the

2588
02:05:51,520 --> 02:05:54,960
interpolation is really the other thing

2589
02:05:52,960 --> 02:05:57,840
that really needs to be improved

2590
02:05:54,960 --> 02:05:59,760
uh and also just looks wrong like you

2591
02:05:57,840 --> 02:06:02,239
can see it's kind of weirdly

2592
02:05:59,760 --> 02:06:03,599
like dark in one direction and not in

2593
02:06:02,238 --> 02:06:05,039
the other like there's just

2594
02:06:03,599 --> 02:06:06,719
i think there's just other things we've

2595
02:06:05,039 --> 02:06:08,479
got going on here right that

2596
02:06:06,719 --> 02:06:09,840
are just a case of like lighting like

2597
02:06:08,479 --> 02:06:11,198
quality issues so

2598
02:06:09,840 --> 02:06:13,039
i think we've got a bunch of stuff we're

2599
02:06:11,198 --> 02:06:14,479
going to have to do uh when we want to

2600
02:06:13,039 --> 02:06:16,399
really improve the quality but i don't

2601
02:06:14,479 --> 02:06:19,678
care about that particularly right now

2602
02:06:16,399 --> 02:06:23,519
it's fine for our current purposes

2603
02:06:19,679 --> 02:06:31,840
so yeah all right

2604
02:06:23,520 --> 02:06:31,840
let's wrap it up any quick questions

2605
02:06:37,039 --> 02:06:42,719
no i agree that the lighting does seem

2606
02:06:39,039 --> 02:06:42,719
brighter with the blend ps fix

2607
02:06:43,118 --> 02:06:48,238
and i mean that was just writing into

2608
02:06:46,479 --> 02:06:51,439
the octahedral maps wrong

2609
02:06:48,238 --> 02:06:53,198
so you know there's tons of reasons why

2610
02:06:51,439 --> 02:06:56,638
it might be the case that that would

2611
02:06:53,198 --> 02:06:56,638
would make things appear brighter but

2612
02:06:56,840 --> 02:06:59,840
yeah

2613
02:07:34,078 --> 02:07:39,198
ah is there a way to test my glsl shader

2614
02:07:37,198 --> 02:07:42,319
compilation success failure on

2615
02:07:39,198 --> 02:07:45,839
other gpus without actually having to

2616
02:07:42,319 --> 02:07:45,840
buy a bunch of gpus

2617
02:07:46,960 --> 02:07:54,719
that's a very good question um

2618
02:07:50,719 --> 02:07:56,719
gosh no i i don't think so um

2619
02:07:54,719 --> 02:07:58,078
one of the things that would be kind of

2620
02:07:56,719 --> 02:08:01,279
amazing

2621
02:07:58,078 --> 02:08:04,559
uh is if there was a

2622
02:08:01,279 --> 02:08:07,679
thing that allowed you to upload

2623
02:08:04,560 --> 02:08:10,880
shaders like shader

2624
02:08:07,679 --> 02:08:12,639
uh but it ran on a farm and it like ran

2625
02:08:10,880 --> 02:08:13,679
them there was one of every graphics

2626
02:08:12,639 --> 02:08:15,760
card in that farm

2627
02:08:13,679 --> 02:08:17,359
and it could tell you like oh it failed

2628
02:08:15,760 --> 02:08:18,480
like here's the image that got produced

2629
02:08:17,359 --> 02:08:21,359
from each of these

2630
02:08:18,479 --> 02:08:23,279
right and then you could just see like

2631
02:08:21,359 --> 02:08:27,039
did it work

2632
02:08:23,279 --> 02:08:28,880
right so like god bolt yeah like god

2633
02:08:27,039 --> 02:08:31,118
bolt for shaders would be amazing

2634
02:08:28,880 --> 02:08:32,800
unfortunately i don't think anyone's

2635
02:08:31,118 --> 02:08:36,559
built that and you can tell why

2636
02:08:32,800 --> 02:08:38,320
god bolt can just run on a single uh

2637
02:08:36,560 --> 02:08:40,159
like it can just install all the

2638
02:08:38,319 --> 02:08:42,078
compilers and then just run on that one

2639
02:08:40,158 --> 02:08:44,078
machine it doesn't need

2640
02:08:42,078 --> 02:08:46,000
hardware whereas the problem with the

2641
02:08:44,078 --> 02:08:47,118
idea of god bolt for shaders is you'd

2642
02:08:46,000 --> 02:08:49,118
actually have to have

2643
02:08:47,118 --> 02:08:51,039
one machine with every single graphics

2644
02:08:49,118 --> 02:08:52,399
card in it which is like literally like

2645
02:08:51,039 --> 02:09:05,439
thousands like there'd be like a

2646
02:08:52,399 --> 02:09:09,039
thousand machines or something right so

2647
02:09:05,439 --> 02:09:11,759
i mean so no

2648
02:09:09,039 --> 02:09:12,319
you certainly could try renting some

2649
02:09:11,760 --> 02:09:15,760
time

2650
02:09:12,319 --> 02:09:19,519
on some machines that exist in the cloud

2651
02:09:15,760 --> 02:09:21,440
that have known gpus to try other gpus

2652
02:09:19,520 --> 02:09:23,520
but you're still only going to get a

2653
02:09:21,439 --> 02:09:26,799
small cross-section because

2654
02:09:23,520 --> 02:09:28,639
most server farms

2655
02:09:26,800 --> 02:09:33,840
have a very narrow range of gpus

2656
02:09:28,639 --> 02:09:33,840
installed in them

2657
02:09:41,439 --> 02:09:45,598
it sounds like martin's is saying that

2658
02:09:43,198 --> 02:09:49,118
there's a thing called shader playground

2659
02:09:45,599 --> 02:09:53,440
that at least uses shader

2660
02:09:49,118 --> 02:09:55,118
libraries to do some validation

2661
02:09:53,439 --> 02:09:56,638
which probably doesn't really help what

2662
02:09:55,118 --> 02:10:01,839
you're saying but it might be worth

2663
02:09:56,639 --> 02:10:01,840
checking out anyway

2664
02:10:09,039 --> 02:10:13,519
i like the thing that just said hello mr

2665
02:10:11,198 --> 02:10:16,319
teapot i am here to view your channel as

2666
02:10:13,520 --> 02:10:18,880
was previously discussed

2667
02:10:16,319 --> 02:10:20,719
who why is there a viewbot that came on

2668
02:10:18,880 --> 02:10:23,760
this channel and said hello mr

2669
02:10:20,719 --> 02:10:29,840
teapot there is no mr teapot here

2670
02:10:23,760 --> 02:10:29,840
is there

2671
02:10:33,118 --> 02:10:37,920
stretch all right well good work folks

2672
02:10:36,078 --> 02:10:40,399
we were able to fix that bug

2673
02:10:37,920 --> 02:10:41,199
um and that was really the only nasty

2674
02:10:40,399 --> 02:10:42,399
bug we had

2675
02:10:41,198 --> 02:10:44,319
the lighting still needs a bunch of

2676
02:10:42,399 --> 02:10:46,960
improvement to it which is really just

2677
02:10:44,319 --> 02:10:47,439
like going through and changing some of

2678
02:10:46,960 --> 02:10:50,800
the

2679
02:10:47,439 --> 02:10:54,000
the math to be better right um

2680
02:10:50,800 --> 02:10:55,920
and i think that's probably a good idea

2681
02:10:54,000 --> 02:10:57,118
so at some point we should do that but

2682
02:10:55,920 --> 02:10:58,239
i'm probably not going to do that right

2683
02:10:57,118 --> 02:10:59,839
now because the lighting is good enough

2684
02:10:58,238 --> 02:11:00,718
at the moment that i can do most of the

2685
02:10:59,840 --> 02:11:03,039
stuff we're going to do

2686
02:11:00,719 --> 02:11:04,078
i don't really need it to be better just

2687
02:11:03,039 --> 02:11:07,198
for development

2688
02:11:04,078 --> 02:11:07,679
um so we can sort of take a look at that

2689
02:11:07,198 --> 02:11:10,559
at some

2690
02:11:07,679 --> 02:11:12,560
later date also now that we've got all

2691
02:11:10,560 --> 02:11:14,800
of the ray tracing and stuff working

2692
02:11:12,560 --> 02:11:16,079
you know we may by the time we call

2693
02:11:14,800 --> 02:11:18,159
handmade hero done

2694
02:11:16,078 --> 02:11:19,359
we may just be move all that ray tracing

2695
02:11:18,158 --> 02:11:21,839
the gpu because

2696
02:11:19,359 --> 02:11:24,479
that may just be the thing that happens

2697
02:11:21,840 --> 02:11:25,760
and we know that it all works so then we

2698
02:11:24,479 --> 02:11:28,319
could just have

2699
02:11:25,760 --> 02:11:29,599
uh much much much much much much much

2700
02:11:28,319 --> 02:11:30,880
faster array tracing

2701
02:11:29,599 --> 02:11:32,510
at which point you don't have to really

2702
02:11:30,880 --> 02:11:33,760
get better at sampling like if we

2703
02:11:32,510 --> 02:11:35,679
[Music]

2704
02:11:33,760 --> 02:11:36,880
could send out you know 10 times as many

2705
02:11:35,679 --> 02:11:40,800
rays

2706
02:11:36,880 --> 02:11:43,039
then we would just be done right

2707
02:11:40,800 --> 02:11:43,039
so

2708
02:11:46,719 --> 02:11:50,960
so star code galaxy i'm going as fast as

2709
02:11:49,359 --> 02:11:53,920
i can i don't have

2710
02:11:50,960 --> 02:11:55,920
anything to share i will post an update

2711
02:11:53,920 --> 02:11:58,960
as soon as i do

2712
02:11:55,920 --> 02:12:00,880
um but basically like

2713
02:11:58,960 --> 02:12:04,840
if you sign up for the mailing list you

2714
02:12:00,880 --> 02:12:06,960
will get notified so if you go to

2715
02:12:04,840 --> 02:12:08,480
starcodegalaxy.com and you put your name

2716
02:12:06,960 --> 02:12:09,920
in here and hit subscribe

2717
02:12:08,479 --> 02:12:11,759
you will get notified as soon as there

2718
02:12:09,920 --> 02:12:14,239
is anything to hear about star code

2719
02:12:11,760 --> 02:12:18,840
galaxy but at the moment no

2720
02:12:14,238 --> 02:12:21,839
i don't have anything to announce about

2721
02:12:18,840 --> 02:12:21,840
that

2722
02:12:25,198 --> 02:12:29,359
and yes i am in the tent i'm in the tent

2723
02:12:28,000 --> 02:12:30,000
that i use for recording star code

2724
02:12:29,359 --> 02:12:32,399
galaxy

2725
02:12:30,000 --> 02:12:34,078
it just improves the audio quality once

2726
02:12:32,399 --> 02:12:38,078
i'm done with recordings for star code

2727
02:12:34,078 --> 02:12:38,078
galaxy i will remove the tent

2728
02:12:38,399 --> 02:12:45,359
this is just microsoft edge um it's not

2729
02:12:42,560 --> 02:12:46,960
any it's not anything it's just the

2730
02:12:45,359 --> 02:12:49,679
browser that's installed by default on

2731
02:12:46,960 --> 02:12:51,840
windows machines

2732
02:12:49,679 --> 02:12:51,840
so

2733
02:12:54,880 --> 02:13:00,400
alrighty folks thank you for joining me

2734
02:12:58,078 --> 02:13:02,479
for another episode of handmade hero it

2735
02:13:00,399 --> 02:13:05,920
has been a pleasure coding with you

2736
02:13:02,479 --> 02:13:07,439
as always if you do want to follow along

2737
02:13:05,920 --> 02:13:09,158
with handmade hero at home

2738
02:13:07,439 --> 02:13:10,879
you can always pre-order the game on

2739
02:13:09,158 --> 02:13:11,920
handmadehero.org and it comes with a

2740
02:13:10,880 --> 02:13:13,840
source code

2741
02:13:11,920 --> 02:13:15,599
so you can follow along with it and do

2742
02:13:13,840 --> 02:13:17,360
your own experiments

2743
02:13:15,599 --> 02:13:18,639
um i think we're done with lighting for

2744
02:13:17,359 --> 02:13:19,839
a while uh

2745
02:13:18,639 --> 02:13:22,159
and we're just gonna put in a bunch of

2746
02:13:19,840 --> 02:13:22,880
game stuff now and so that we can test

2747
02:13:22,158 --> 02:13:26,479
it

2748
02:13:22,880 --> 02:13:28,159
out uh and clean up stuff in the engine

2749
02:13:26,479 --> 02:13:30,799
so that we can kind of call it like you

2750
02:13:28,158 --> 02:13:32,799
know like here's the game it's done

2751
02:13:30,800 --> 02:13:34,000
uh and then we can spend time just like

2752
02:13:32,800 --> 02:13:35,199
cleaning stuff up and

2753
02:13:34,000 --> 02:13:36,880
and then like really looking at the

2754
02:13:35,198 --> 02:13:39,118
lighting and going like okay what's the

2755
02:13:36,880 --> 02:13:40,880
shippable quality version of this thing

2756
02:13:39,118 --> 02:13:42,639
uh but it's mostly working now so i'm

2757
02:13:40,880 --> 02:13:44,480
actually fine with it where it's at i

2758
02:13:42,639 --> 02:13:46,159
don't think it needs to be changed much

2759
02:13:44,479 --> 02:13:47,919
because it gives us the information that

2760
02:13:46,158 --> 02:13:50,559
we actually need

2761
02:13:47,920 --> 02:13:51,199
um but if you want to keep on improving

2762
02:13:50,560 --> 02:13:52,800
the lighting

2763
02:13:51,198 --> 02:13:54,799
now would be a good time to go work on

2764
02:13:52,800 --> 02:13:57,760
just the quality of it

2765
02:13:54,800 --> 02:13:59,840
uh and you can go see like to what

2766
02:13:57,760 --> 02:14:01,599
extent you can improve the quality

2767
02:13:59,840 --> 02:14:03,119
with like the same number of raised cast

2768
02:14:01,599 --> 02:14:04,560
there's probably ways

2769
02:14:03,118 --> 02:14:06,319
to improve the quality that you're

2770
02:14:04,560 --> 02:14:08,639
getting back from the lighting there may

2771
02:14:06,319 --> 02:14:09,599
also be more bugs like the ones we fixed

2772
02:14:08,639 --> 02:14:11,760
today

2773
02:14:09,599 --> 02:14:12,960
where if you fix those bugs the lighting

2774
02:14:11,760 --> 02:14:14,880
will improve

2775
02:14:12,960 --> 02:14:17,840
and so only by actually going through

2776
02:14:14,880 --> 02:14:20,239
and putting in like specific test cases

2777
02:14:17,840 --> 02:14:21,760
where we where we construct scenes we

2778
02:14:20,238 --> 02:14:23,439
think we know like what it should look

2779
02:14:21,760 --> 02:14:25,360
like or whatever

2780
02:14:23,439 --> 02:14:26,960
without doing that we're never going to

2781
02:14:25,359 --> 02:14:27,920
get to the point where we really know

2782
02:14:26,960 --> 02:14:30,719
how good the lighting

2783
02:14:27,920 --> 02:14:31,760
can be so that's just kind of a separate

2784
02:14:30,719 --> 02:14:34,158
thing that has to happen

2785
02:14:31,760 --> 02:14:35,840
we'll do that at some point when we want

2786
02:14:34,158 --> 02:14:38,238
to like

2787
02:14:35,840 --> 02:14:39,599
sort of turn the screw on it that's it

2788
02:14:38,238 --> 02:14:40,959
for this week i'll be back next week for

2789
02:14:39,599 --> 02:14:43,520
more handmade hero until then have

2790
02:14:40,960 --> 02:14:44,399
fun program everyone and i'll see you on

2791
02:14:43,520 --> 02:14:49,599
the internet

2792
02:14:44,399 --> 02:14:49,598
take it easy everybody

