1
00:00:00,060 --> 00:00:03,448
hello everyone and welcome to hand made

2
00:00:02,399 --> 00:00:07,259
here oh sure we could a complete-game

3
00:00:03,448 --> 00:00:09,149
live on stream again just to get people

4
00:00:07,259 --> 00:00:10,919
up to speed because there's been some

5
00:00:09,150 --> 00:00:12,870
changes lately

6
00:00:10,919 --> 00:00:14,759
handmade hero now has a discord server

7
00:00:12,869 --> 00:00:16,710
you can go to use for chat it's a lot

8
00:00:14,759 --> 00:00:18,179
better than the twitch chat and we do

9
00:00:16,710 --> 00:00:21,179
take questions from there there's a

10
00:00:18,179 --> 00:00:23,219
pound live channel that I read in during

11
00:00:21,179 --> 00:00:25,649
the Q&amp;A and there's also other stuff on

12
00:00:23,219 --> 00:00:26,640
there case you're interested there's a

13
00:00:25,649 --> 00:00:28,140
bunch of people chatting in there it's

14
00:00:26,640 --> 00:00:29,849
been pretty good so I'd highly recommend

15
00:00:28,140 --> 00:00:32,099
checking that out all you have to do is

16
00:00:29,849 --> 00:00:34,079
just click this button the discord

17
00:00:32,098 --> 00:00:36,569
button there and it will bring you to

18
00:00:34,079 --> 00:00:39,570
this page which allows you to join

19
00:00:36,570 --> 00:00:45,570
that's about all you have to do and then

20
00:00:39,570 --> 00:00:47,820
you are off and running now if you are

21
00:00:45,570 --> 00:00:49,980
using the watch page well we've got you

22
00:00:47,820 --> 00:00:52,649
covered there as well there's that

23
00:00:49,979 --> 00:00:54,898
discord button right there and that

24
00:00:52,649 --> 00:00:56,939
should do it looks like we need to

25
00:00:54,899 --> 00:01:02,009
update this page again because it looks

26
00:00:56,939 --> 00:01:04,319
like it's having trouble I think I hate

27
00:01:02,009 --> 00:01:05,609
to say it but I want to say twit sent

28
00:01:04,319 --> 00:01:08,339
out a notice that they changed their API

29
00:01:05,609 --> 00:01:11,188
I think I'm gonna have to go update our

30
00:01:08,340 --> 00:01:13,350
server code because I think they

31
00:01:11,188 --> 00:01:15,149
probably changed it I don't actually

32
00:01:13,349 --> 00:01:16,589
know but I think they did so we're

33
00:01:15,150 --> 00:01:18,540
probably gonna have to fix that I'm not

34
00:01:16,590 --> 00:01:21,359
looking forward to it but point being if

35
00:01:18,540 --> 00:01:23,310
you're using the watch page there's a

36
00:01:21,359 --> 00:01:25,709
discord on here as well most people

37
00:01:23,310 --> 00:01:27,420
don't use the watch page obviously they

38
00:01:25,709 --> 00:01:30,269
just use the episode guide or they go to

39
00:01:27,420 --> 00:01:32,430
twitch but well I mean they use the

40
00:01:30,269 --> 00:01:33,750
watch page to get the episode guide but

41
00:01:32,430 --> 00:01:35,909
they don't necessarily use this thing

42
00:01:33,750 --> 00:01:40,319
because you know it's oh this is just a

43
00:01:35,909 --> 00:01:41,790
twitch bubble but anyway maybe we'll

44
00:01:40,319 --> 00:01:43,618
change this to two just click on the

45
00:01:41,790 --> 00:01:45,180
button I don't know as then then they'll

46
00:01:43,618 --> 00:01:46,680
go to twitch or something like this I'm

47
00:01:45,180 --> 00:01:47,850
not sure but I'll have to update that

48
00:01:46,680 --> 00:01:49,320
because I think twitch changed your API

49
00:01:47,849 --> 00:01:54,239
and probably broke our code but we'll

50
00:01:49,319 --> 00:01:56,459
see anyway moving on now that we've got

51
00:01:54,239 --> 00:01:57,718
that out of the way and you have two

52
00:01:56,459 --> 00:01:59,129
options to push a button that says

53
00:01:57,718 --> 00:02:00,718
discord and go to the Hammett hero

54
00:01:59,129 --> 00:02:02,640
discord that's actually the Mali rocket

55
00:02:00,718 --> 00:02:07,500
discord but obviously that covers

56
00:02:02,640 --> 00:02:09,449
handmade here we will get down to

57
00:02:07,500 --> 00:02:11,008
programming which if you remember

58
00:02:09,449 --> 00:02:12,750
correctly we had just finished doing a

59
00:02:11,008 --> 00:02:14,279
bunch of sort of optimization work on

60
00:02:12,750 --> 00:02:16,699
our crafts pipeline

61
00:02:14,280 --> 00:02:19,530
just light stuff - to get us running

62
00:02:16,699 --> 00:02:21,419
fairly efficiently without a lot of fuss

63
00:02:19,530 --> 00:02:23,939
it was surprising how much of an

64
00:02:21,419 --> 00:02:25,349
improvement we got by being a little bit

65
00:02:23,939 --> 00:02:27,840
careful with how we did our multi sample

66
00:02:25,349 --> 00:02:30,150
resolves and then we also improved the

67
00:02:27,840 --> 00:02:32,909
speed of our transmission for

68
00:02:30,150 --> 00:02:34,140
transmitting dynamic vertices down in

69
00:02:32,909 --> 00:02:35,609
the case of things like ground cover

70
00:02:34,139 --> 00:02:37,619
where we have a lot of them and what you

71
00:02:35,610 --> 00:02:40,680
get seen now is when we actually look at

72
00:02:37,620 --> 00:02:44,310
the profile we're actually doing really

73
00:02:40,680 --> 00:02:47,010
well we're running at about 120 frames a

74
00:02:44,310 --> 00:02:49,920
second not quite which is quite well our

75
00:02:47,009 --> 00:02:52,469
target is only 60 so we're like well in

76
00:02:49,919 --> 00:02:55,589
advance of that now and that's good

77
00:02:52,469 --> 00:02:59,159
because if you look at what we've got to

78
00:02:55,590 --> 00:03:02,189
work with in terms of you know 3d stuff

79
00:02:59,159 --> 00:03:03,209
how we're gonna be you know how we're

80
00:03:02,189 --> 00:03:06,479
gonna be starting to stress this

81
00:03:03,209 --> 00:03:09,030
pipeline more we're gonna have to move

82
00:03:06,479 --> 00:03:11,639
into the land of lightning now and

83
00:03:09,030 --> 00:03:13,740
lighting is gonna cost us so that's

84
00:03:11,639 --> 00:03:17,909
really why I want to do this I wanted to

85
00:03:13,740 --> 00:03:22,469
make sure we had a pretty good graphics

86
00:03:17,909 --> 00:03:23,789
submission pipeline at at first and you

87
00:03:22,469 --> 00:03:26,550
know I think we've got that pretty well

88
00:03:23,789 --> 00:03:29,129
taken care of so what I want to do today

89
00:03:26,550 --> 00:03:31,430
is start to actually send down lighting

90
00:03:29,129 --> 00:03:35,879
information for these probes you can see

91
00:03:31,430 --> 00:03:39,030
the purple color is there's little cubes

92
00:03:35,879 --> 00:03:43,169
those cubes are everywhere that there is

93
00:03:39,030 --> 00:03:45,390
a light probe placed currently and as

94
00:03:43,169 --> 00:03:49,439
you can see right now there's two light

95
00:03:45,389 --> 00:03:52,018
probes per tile we don't actually know

96
00:03:49,439 --> 00:03:54,299
if that's what we're going to do in the

97
00:03:52,019 --> 00:03:57,509
final game it's just sort of an

98
00:03:54,299 --> 00:03:59,250
approximation and it's just the first

99
00:03:57,509 --> 00:04:00,780
guess of like how we might want to do it

100
00:03:59,250 --> 00:04:03,569
but that's how we're doing it at the

101
00:04:00,780 --> 00:04:05,009
moment and so what we want to do now is

102
00:04:03,569 --> 00:04:07,530
figure out how we're gonna actually

103
00:04:05,009 --> 00:04:09,389
query these light probes in the shader

104
00:04:07,530 --> 00:04:11,640
so what you can see right now is

105
00:04:09,389 --> 00:04:13,349
lighting is effectively turned off it's

106
00:04:11,639 --> 00:04:15,329
turned off because we have not

107
00:04:13,349 --> 00:04:18,060
implemented anything that samples these

108
00:04:15,330 --> 00:04:19,830
light probes and we have not actually

109
00:04:18,060 --> 00:04:21,509
produced working code on the other side

110
00:04:19,829 --> 00:04:23,788
for computing the lighting and the light

111
00:04:21,509 --> 00:04:25,529
probes either so we now have to work on

112
00:04:23,788 --> 00:04:27,990
both of those things and have them meet

113
00:04:25,529 --> 00:04:29,909
in the middle what I want to do first

114
00:04:27,990 --> 00:04:33,079
is I want to get the light sampling

115
00:04:29,910 --> 00:04:35,580
working without actually doing any light

116
00:04:33,079 --> 00:04:37,620
computation the reason for that is I'd

117
00:04:35,579 --> 00:04:39,359
like to take light computation which is

118
00:04:37,620 --> 00:04:41,639
going to be much harder to optimize out

119
00:04:39,360 --> 00:04:43,080
of the equation first because it's the

120
00:04:41,639 --> 00:04:44,550
slower of the two things and it's the

121
00:04:43,079 --> 00:04:47,339
one that we probably want to do on the

122
00:04:44,550 --> 00:04:49,319
CPU right now to avoid stressing the GPU

123
00:04:47,339 --> 00:04:51,000
too much on lower-end of machines

124
00:04:49,319 --> 00:04:52,199
obviously on our TX machines we could

125
00:04:51,000 --> 00:04:54,418
just dump all the ray-tracing

126
00:04:52,199 --> 00:04:56,848
directly to the card and call it a day

127
00:04:54,418 --> 00:05:01,139
but for our purposes here we probably

128
00:04:56,848 --> 00:05:03,418
want to do CPU tracing for most low-end

129
00:05:01,139 --> 00:05:05,848
platforms and on our TX cards and so on

130
00:05:03,418 --> 00:05:06,779
and so what I'd like to do now is say

131
00:05:05,848 --> 00:05:08,579
let's take that out of the equation

132
00:05:06,779 --> 00:05:11,309
let's pretend we've actually got

133
00:05:08,579 --> 00:05:15,379
lighting already computed and so what I

134
00:05:11,310 --> 00:05:19,168
want to do is first spam out lighting

135
00:05:15,379 --> 00:05:21,180
that we just like pre-specified so it's

136
00:05:19,168 --> 00:05:24,329
not gonna be dynamically computed I'm

137
00:05:21,180 --> 00:05:27,150
just going to hard-code some answer to

138
00:05:24,329 --> 00:05:29,399
the lighting question into the game that

139
00:05:27,149 --> 00:05:31,198
we run every frame that just dumps some

140
00:05:29,399 --> 00:05:33,689
fake lighting out into these lighting

141
00:05:31,199 --> 00:05:36,689
probes we are then going to sample that

142
00:05:33,689 --> 00:05:38,728
lighting in the pixel shader and see how

143
00:05:36,689 --> 00:05:40,500
slow it is to sample lighting that

144
00:05:38,728 --> 00:05:43,348
doesn't really cost anything for us to

145
00:05:40,500 --> 00:05:45,389
produce that will give us a estimate of

146
00:05:43,348 --> 00:05:47,968
how much work we're going to have to do

147
00:05:45,389 --> 00:05:50,129
to do lighting this way in the final

148
00:05:47,968 --> 00:05:52,288
analysis right so basically when we

149
00:05:50,129 --> 00:05:54,269
actually ship the game that is how much

150
00:05:52,288 --> 00:05:56,069
it will cost in the shaders to actually

151
00:05:54,269 --> 00:05:58,859
run our lighting scheme and this is

152
00:05:56,069 --> 00:06:00,839
important to me because I need some way

153
00:05:58,860 --> 00:06:03,509
of knowing how expensive this lighting

154
00:06:00,839 --> 00:06:06,478
actually is and then we can trim down

155
00:06:03,509 --> 00:06:08,400
that expense before actually producing

156
00:06:06,478 --> 00:06:10,680
the code that outputs lighting to this

157
00:06:08,399 --> 00:06:12,989
format that to me seems like a saner

158
00:06:10,680 --> 00:06:15,900
idea because if we find that it's too

159
00:06:12,990 --> 00:06:18,090
expensive to sample lighting as a voxel

160
00:06:15,899 --> 00:06:20,370
grid of probes we probably want to

161
00:06:18,089 --> 00:06:22,288
change that scheme first before

162
00:06:20,370 --> 00:06:23,968
outputting you know before actually

163
00:06:22,288 --> 00:06:27,029
spending time working on an algorithm

164
00:06:23,968 --> 00:06:29,149
that outputs it right so that's what

165
00:06:27,029 --> 00:06:31,948
we're going to do now is get that

166
00:06:29,149 --> 00:06:33,810
performance question answered and that

167
00:06:31,949 --> 00:06:36,689
way we won't really have to worry as

168
00:06:33,810 --> 00:06:38,519
much going into the next stage of things

169
00:06:36,689 --> 00:06:40,860
because we'll already have the answer

170
00:06:38,519 --> 00:06:41,829
that the format that we've chosen will

171
00:06:40,860 --> 00:06:43,360
work

172
00:06:41,829 --> 00:06:51,478
our runtime so that's what we're gonna

173
00:06:43,360 --> 00:06:51,479
do now okay

174
00:06:51,779 --> 00:06:56,469
so in order to do this we're going to

175
00:06:54,038 --> 00:06:58,060
need several different things and to

176
00:06:56,470 --> 00:07:01,810
start with today the thing that I'm

177
00:06:58,060 --> 00:07:04,060
going to focus on he is spamming out

178
00:07:01,810 --> 00:07:06,220
some prefab lighting somehow that the

179
00:07:04,060 --> 00:07:08,139
graphics can actually see it and we need

180
00:07:06,220 --> 00:07:10,240
two things for that the first thing that

181
00:07:08,139 --> 00:07:12,639
we need for that is a way to produce

182
00:07:10,240 --> 00:07:14,978
some kind of lighting that can actually

183
00:07:12,639 --> 00:07:17,769
tell us that we're sampling it correctly

184
00:07:14,978 --> 00:07:19,360
and then we so it's gonna it's not gonna

185
00:07:17,769 --> 00:07:20,829
that's what it look like real lighting

186
00:07:19,360 --> 00:07:22,658
right cuz that wouldn't help because

187
00:07:20,829 --> 00:07:24,430
real lighting is very subtle and we

188
00:07:22,658 --> 00:07:26,079
wouldn't be able to see subtle bugs we'd

189
00:07:24,430 --> 00:07:28,030
know if we had something totally wrong

190
00:07:26,079 --> 00:07:30,639
like the whole screen just comes out

191
00:07:28,029 --> 00:07:32,228
black or too bright or something weird

192
00:07:30,639 --> 00:07:34,750
so we'd have some idea if it was working

193
00:07:32,228 --> 00:07:36,908
but we wouldn't really know if we were

194
00:07:34,750 --> 00:07:38,860
getting it correct so what I'd rather do

195
00:07:36,908 --> 00:07:41,408
what I want to do here is I want to

196
00:07:38,860 --> 00:07:43,870
produce something that has some clear

197
00:07:41,408 --> 00:07:46,060
answers to it basically structured art

198
00:07:43,870 --> 00:07:49,139
so I know whether or not we're getting

199
00:07:46,060 --> 00:07:51,610
an accurate or an inaccurate lighting

200
00:07:49,139 --> 00:07:53,590
sample coming out and so what I'd like

201
00:07:51,610 --> 00:07:57,879
to do is say look we know we're putting

202
00:07:53,589 --> 00:08:01,060
in two lighting probes per tile what if

203
00:07:57,879 --> 00:08:05,199
we did something like each lighting

204
00:08:01,060 --> 00:08:08,860
probe had a specific color you know top

205
00:08:05,199 --> 00:08:11,199
bottom left right forward back and we

206
00:08:08,860 --> 00:08:14,199
pick different of those colors for each

207
00:08:11,199 --> 00:08:16,598
lighting probe bright colors so when

208
00:08:14,199 --> 00:08:18,370
somebody hops onto a square we can look

209
00:08:16,598 --> 00:08:20,829
at the two probes say what is the color

210
00:08:18,370 --> 00:08:22,629
that we're actually seeing there for

211
00:08:20,829 --> 00:08:24,519
each of those probes and then when we

212
00:08:22,629 --> 00:08:26,949
sample the lighting we can figure out

213
00:08:24,519 --> 00:08:29,649
are we seeing the lighting correctly

214
00:08:26,949 --> 00:08:31,750
correspond like as we get further up to

215
00:08:29,649 --> 00:08:33,458
the top of the sprite are we properly

216
00:08:31,750 --> 00:08:35,259
sampling the lighting from like the

217
00:08:33,458 --> 00:08:37,088
front face of the top lighting probe

218
00:08:35,259 --> 00:08:38,679
which maybe is bright red and when we

219
00:08:37,089 --> 00:08:42,159
get down to the bottom of the sprite are

220
00:08:38,679 --> 00:08:44,078
we maybe sampling the correct lighting

221
00:08:42,158 --> 00:08:46,149
from the front face of the bottom probe

222
00:08:44,078 --> 00:08:50,409
which maybe is bright blue right and

223
00:08:46,149 --> 00:08:53,350
that can help us sort of that can help

224
00:08:50,409 --> 00:08:55,120
us see whether our lighting samples are

225
00:08:53,350 --> 00:08:58,269
producing blends that

226
00:08:55,120 --> 00:09:00,429
make sense much more easily than we can

227
00:08:58,269 --> 00:09:01,990
if we literally just said let's put some

228
00:09:00,429 --> 00:09:04,989
real lighting in there where it's like I

229
00:09:01,990 --> 00:09:06,430
don't know it looks kind of I guess it's

230
00:09:04,990 --> 00:09:08,528
very easy to have subtle bugs and

231
00:09:06,429 --> 00:09:10,419
lighting we've already had them we know

232
00:09:08,528 --> 00:09:12,129
we'll have them again so try to

233
00:09:10,419 --> 00:09:14,949
eliminate the cases where that would

234
00:09:12,129 --> 00:09:17,259
happen and so what we need to do is

235
00:09:14,950 --> 00:09:21,278
start down that road so the first thing

236
00:09:17,259 --> 00:09:23,379
I want to do is say let's go ahead and

237
00:09:21,278 --> 00:09:29,490
try to make a way of rendering these

238
00:09:23,379 --> 00:09:29,490
light probes maybe that produces answers

239
00:09:29,730 --> 00:09:34,480
that we can visualize so let me just

240
00:09:32,889 --> 00:09:36,309
give you some perspective on that if I

241
00:09:34,480 --> 00:09:38,230
go into handmade hero and I look at

242
00:09:36,309 --> 00:09:39,639
where those light probes are being

243
00:09:38,230 --> 00:09:41,350
rendered currently they're being

244
00:09:39,639 --> 00:09:44,500
rendered as that sort of purple thing

245
00:09:41,350 --> 00:09:46,389
right if I go into the entity output

246
00:09:44,500 --> 00:09:47,679
that's where this is happening I'm gonna

247
00:09:46,389 --> 00:09:52,990
do a search for the lighting probe

248
00:09:47,679 --> 00:09:56,559
output you can see here where we do show

249
00:09:52,990 --> 00:09:58,930
probes that's right here and that's

250
00:09:56,559 --> 00:10:01,299
controlled I believe by a constant in

251
00:09:58,929 --> 00:10:03,849
here right yeah you can see that

252
00:10:01,299 --> 00:10:05,859
lighting probes right there right

253
00:10:03,850 --> 00:10:07,750
and so right now we're saying show

254
00:10:05,860 --> 00:10:10,000
probes is true so we're rendering these

255
00:10:07,750 --> 00:10:12,370
push cubes we're giving them this purple

256
00:10:10,000 --> 00:10:15,278
color I'm gonna change that now again to

257
00:10:12,370 --> 00:10:18,720
just one one one one and so what we're

258
00:10:15,278 --> 00:10:21,879
gonna see now is pure white probes right

259
00:10:18,720 --> 00:10:24,220
as you can see there now what I want to

260
00:10:21,879 --> 00:10:25,778
do I want them to be pure white why do I

261
00:10:24,220 --> 00:10:27,879
want to be pure white because I want

262
00:10:25,778 --> 00:10:30,458
them to actually sample the lighting now

263
00:10:27,879 --> 00:10:32,289
and so what I can do is since they're

264
00:10:30,458 --> 00:10:35,379
being pushed down in here I believe

265
00:10:32,289 --> 00:10:36,490
lighting is still enabled for most of

266
00:10:35,379 --> 00:10:38,708
these things I guess I don't actually

267
00:10:36,490 --> 00:10:41,440
know that let me see how that is

268
00:10:38,708 --> 00:10:47,109
actually working here so if we look at

269
00:10:41,440 --> 00:10:49,089
push cube in here you can see emissions

270
00:10:47,110 --> 00:10:51,129
Z by us are set to zero the usually lay

271
00:10:49,089 --> 00:10:56,800
out stuff is in here it looks like

272
00:10:51,129 --> 00:10:59,200
lighting enabled is just it's it's just

273
00:10:56,799 --> 00:11:01,929
plain global to the to the render group

274
00:10:59,200 --> 00:11:04,780
so I believe that those will just get

275
00:11:01,929 --> 00:11:08,449
lit if we were lighting right so they

276
00:11:04,779 --> 00:11:11,629
will flow through the lighting pipeline

277
00:11:08,450 --> 00:11:14,750
so what that means is now I am

278
00:11:11,629 --> 00:11:17,720
outputting a purely reflective cube to

279
00:11:14,750 --> 00:11:19,850
the lighting and I'm I'm looking to see

280
00:11:17,720 --> 00:11:22,399
what oops why do I have two of these I

281
00:11:19,850 --> 00:11:31,278
don't know and I'm looking to see why

282
00:11:22,399 --> 00:11:33,289
what I actually get when I run so I'm

283
00:11:31,278 --> 00:11:34,850
gonna turn on lighting for these and

284
00:11:33,289 --> 00:11:38,539
then we're gonna work on getting those

285
00:11:34,850 --> 00:11:40,550
to show what's actually being what we're

286
00:11:38,539 --> 00:11:44,179
actually sampling in that area then I'm

287
00:11:40,549 --> 00:11:46,159
going to feed in lighting that is prefab

288
00:11:44,179 --> 00:11:48,349
specific colors at each of these and

289
00:11:46,159 --> 00:11:51,139
verify that they get sampled exactly

290
00:11:48,350 --> 00:11:54,350
right so that's my first test is if I

291
00:11:51,139 --> 00:11:57,289
place a white cube directly on the probe

292
00:11:54,350 --> 00:11:59,060
what do I see as the incoming light at

293
00:11:57,289 --> 00:12:01,819
each of these phases and it should be

294
00:11:59,059 --> 00:12:04,309
exactly what I said the incoming light

295
00:12:01,820 --> 00:12:05,949
is when I sent the probe down because I

296
00:12:04,309 --> 00:12:09,528
am literally reflecting the light

297
00:12:05,948 --> 00:12:14,870
exactly it is a pure white tube with a

298
00:12:09,528 --> 00:12:16,669
normal facing directly in the the in the

299
00:12:14,870 --> 00:12:18,740
direction of the incoming light that's

300
00:12:16,669 --> 00:12:21,679
measured at that light probe we should

301
00:12:18,740 --> 00:12:24,560
have no alteration of it whatsoever

302
00:12:21,679 --> 00:12:26,689
right there's no cosine fall-off there's

303
00:12:24,559 --> 00:12:32,119
no displacement

304
00:12:26,690 --> 00:12:37,820
there's no blending it should be 100%

305
00:12:32,120 --> 00:12:39,440
correct so now what we have to do is

306
00:12:37,820 --> 00:12:41,600
actually start sending down this

307
00:12:39,440 --> 00:12:43,699
lighting information and so when we

308
00:12:41,600 --> 00:12:45,199
think about that we need to send down if

309
00:12:43,698 --> 00:12:49,969
we look at what our lighting information

310
00:12:45,198 --> 00:12:51,409
actually is if we take a look at what

311
00:12:49,970 --> 00:12:52,940
we're sending down you can see here that

312
00:12:51,409 --> 00:12:54,679
we have this notion of lighting textures

313
00:12:52,940 --> 00:12:56,449
and you can see here we have all this

314
00:12:54,679 --> 00:12:58,939
light data and it's basically like a

315
00:12:56,448 --> 00:13:02,448
bunch of information that has to do with

316
00:12:58,940 --> 00:13:04,519
points that we were sampling this is all

317
00:13:02,448 --> 00:13:06,588
wrong now right because we switched to

318
00:13:04,519 --> 00:13:09,740
doing your lighting probe based solution

319
00:13:06,589 --> 00:13:11,660
and so we don't actually want this it's

320
00:13:09,740 --> 00:13:15,470
not actually the information we would

321
00:13:11,659 --> 00:13:17,750
need to do our light probe data and so

322
00:13:15,470 --> 00:13:21,050
if we actually look at what information

323
00:13:17,750 --> 00:13:23,769
we will need it looks a lot more like

324
00:13:21,049 --> 00:13:23,769
something like this

325
00:13:31,308 --> 00:13:36,499
right because what we actually want here

326
00:13:34,068 --> 00:13:38,719
is to say look we've got lighting probes

327
00:13:36,499 --> 00:13:41,269
and each lighting probe is going to

328
00:13:38,720 --> 00:13:43,610
encode probably in some compressed

329
00:13:41,269 --> 00:13:46,068
format and right now we could certainly

330
00:13:43,610 --> 00:13:47,629
do it this way and basically say look

331
00:13:46,068 --> 00:13:49,818
we'll pass it down a slope to begin with

332
00:13:47,629 --> 00:14:03,139
but later on we're gonna switch it to

333
00:13:49,818 --> 00:14:05,360
more encoding I could say this but what

334
00:14:03,139 --> 00:14:07,549
we know is fundamentally speaking we are

335
00:14:05,360 --> 00:14:10,100
going to pass down a series of light

336
00:14:07,549 --> 00:14:14,389
probes those light probes are going to

337
00:14:10,100 --> 00:14:17,180
have because until we actually like you

338
00:14:14,389 --> 00:14:19,100
know adjust this for performance or any

339
00:14:17,179 --> 00:14:20,388
other things that we might want these

340
00:14:19,100 --> 00:14:22,220
light probes are going to have

341
00:14:20,389 --> 00:14:24,980
effectively six incoming light

342
00:14:22,220 --> 00:14:27,410
directions one for each face of the cube

343
00:14:24,980 --> 00:14:31,699
and each of those six light directions

344
00:14:27,409 --> 00:14:35,838
is going to store some RGB incoming

345
00:14:31,698 --> 00:14:38,389
light value now three floats encodes how

346
00:14:35,839 --> 00:14:43,459
much red how much green how much blue

347
00:14:38,389 --> 00:14:45,409
light is coming in across that face but

348
00:14:43,458 --> 00:14:48,469
what you have to remember is that's

349
00:14:45,409 --> 00:14:50,269
super piggy we don't really want that we

350
00:14:48,470 --> 00:14:52,519
could compress that down quite a bit

351
00:14:50,269 --> 00:14:55,159
more we don't need a full 32-bit value

352
00:14:52,519 --> 00:14:58,610
per ton all we really would need is like

353
00:14:55,159 --> 00:15:01,249
you know an RGB an 8-bit RGB for how

354
00:14:58,610 --> 00:15:04,039
much light was coming in on our G and B

355
00:15:01,249 --> 00:15:05,629
as a percentage and then one emission

356
00:15:04,039 --> 00:15:08,178
value that's like how strong the light

357
00:15:05,629 --> 00:15:10,459
is and that would allow us probably a

358
00:15:08,178 --> 00:15:13,278
lot more flexibility than if we just did

359
00:15:10,458 --> 00:15:14,719
three u eights because then we'd have an

360
00:15:13,278 --> 00:15:17,448
extra sort of power for like really

361
00:15:14,720 --> 00:15:19,428
bright lights or something but it

362
00:15:17,448 --> 00:15:22,578
doesn't use up the huge so it face like

363
00:15:19,428 --> 00:15:24,799
an HDR encoding right it wouldn't be the

364
00:15:22,578 --> 00:15:27,019
ridiculous amount of wasted space of

365
00:15:24,799 --> 00:15:30,229
literally a full floating-point value

366
00:15:27,019 --> 00:15:32,870
per color channel which I know we don't

367
00:15:30,230 --> 00:15:34,789
need that's way more specificity than we

368
00:15:32,870 --> 00:15:36,350
could possibly need for our lighting I

369
00:15:34,789 --> 00:15:39,620
think our lighting just

370
00:15:36,350 --> 00:15:41,990
that's you know precise right so I don't

371
00:15:39,620 --> 00:15:43,730
think we need that but we do need

372
00:15:41,990 --> 00:15:50,330
something like this and so we know that

373
00:15:43,730 --> 00:15:53,930
we would have like I believe its

374
00:15:50,330 --> 00:15:56,509
irradiance is the correct term in this

375
00:15:53,929 --> 00:15:59,269
case which is basically like how much is

376
00:15:56,509 --> 00:16:01,819
coming in it's it's how much is received

377
00:15:59,269 --> 00:16:04,189
by that surface now it's a little bit

378
00:16:01,820 --> 00:16:06,020
cheaty to use the actual term irradiance

379
00:16:04,190 --> 00:16:09,350
because we're not measuring this in any

380
00:16:06,019 --> 00:16:12,169
particular units but actually we could

381
00:16:09,350 --> 00:16:14,810
right so I'm okay calling this light

382
00:16:12,169 --> 00:16:17,719
prober radiance because actually the

383
00:16:14,809 --> 00:16:19,759
code that is on either side of it could

384
00:16:17,720 --> 00:16:21,740
be upgraded eventually to be physically

385
00:16:19,759 --> 00:16:24,110
accurate and use an actual measure of

386
00:16:21,740 --> 00:16:26,029
irradiance so really we are sort of

387
00:16:24,110 --> 00:16:26,990
talking about irradiance we're talking

388
00:16:26,029 --> 00:16:28,429
about a value that's related to

389
00:16:26,990 --> 00:16:30,139
irradiance but maybe we're a little too

390
00:16:28,429 --> 00:16:32,479
sloppy when we do our computations to

391
00:16:30,139 --> 00:16:35,330
really put the certified stamp of flux

392
00:16:32,480 --> 00:16:38,570
on this thing a flux per unit area but

393
00:16:35,330 --> 00:16:40,480
that's basically what it is and we could

394
00:16:38,570 --> 00:16:42,650
make it be that eventually if we

395
00:16:40,480 --> 00:16:45,550
tightened up the code on either side

396
00:16:42,649 --> 00:16:48,289
right so I'm okay with calling of that

397
00:16:45,549 --> 00:16:50,240
if we store our light probe irradiance

398
00:16:48,289 --> 00:16:51,709
what we would do is say look the maximum

399
00:16:50,240 --> 00:16:54,649
number of light probes that we possibly

400
00:16:51,710 --> 00:16:56,629
can have going here that's how many we

401
00:16:54,649 --> 00:16:58,699
get right the light data width would go

402
00:16:56,629 --> 00:17:01,189
in here I'm going to change this to call

403
00:16:58,700 --> 00:17:02,570
to call it something else I don't even

404
00:17:01,190 --> 00:17:05,180
know what like chunk count and some of

405
00:17:02,570 --> 00:17:06,949
these things actually are here so we're

406
00:17:05,180 --> 00:17:09,078
gonna have to start pulling out some of

407
00:17:06,949 --> 00:17:10,610
the old code and actually having it be a

408
00:17:09,078 --> 00:17:13,789
little bit more specific here but point

409
00:17:10,609 --> 00:17:15,438
being light probe irradiance is what we

410
00:17:13,789 --> 00:17:17,659
need to send down for each probe and

411
00:17:15,439 --> 00:17:20,209
then we need some lookup structure that

412
00:17:17,660 --> 00:17:21,560
gets us to these probes faster and what

413
00:17:20,209 --> 00:17:23,660
we we need there is we're going to need

414
00:17:21,559 --> 00:17:25,519
a voxel that has an actual lookup in it

415
00:17:23,660 --> 00:17:27,800
now I don't think we want more than

416
00:17:25,519 --> 00:17:29,599
65,000 probes active at a time so I

417
00:17:27,799 --> 00:17:32,180
believe this voxel would only really be

418
00:17:29,599 --> 00:17:34,519
storing 16 bits worth of data if we had

419
00:17:32,180 --> 00:17:36,200
to actually simulate 65,000 light probes

420
00:17:34,519 --> 00:17:37,700
I don't really think that we're gonna be

421
00:17:36,200 --> 00:17:42,950
able to do that now I'm today's machines

422
00:17:37,700 --> 00:17:44,690
and with what we're working on maybe on

423
00:17:42,950 --> 00:17:46,279
an Archie X card that's fine but I think

424
00:17:44,690 --> 00:17:48,380
we want to target things that may be a

425
00:17:46,279 --> 00:17:49,940
little bit further back other than that

426
00:17:48,380 --> 00:17:52,070
I'm not sure that by the time here maybe

427
00:17:49,940 --> 00:17:53,779
chips even if it takes us to three more

428
00:17:52,069 --> 00:17:56,419
years to do it I'm not sure everyone's

429
00:17:53,779 --> 00:17:59,660
gonna have such a beef daddy platform

430
00:17:56,420 --> 00:17:59,960
you know maybe maybe they do maybe they

431
00:17:59,660 --> 00:18:02,330
don't

432
00:17:59,960 --> 00:18:03,590
but I just I don't want to make that bet

433
00:18:02,329 --> 00:18:05,269
I just don't know what's gonna happen

434
00:18:03,589 --> 00:18:07,789
there I I don't have a crystal ball

435
00:18:05,269 --> 00:18:10,250
right so I don't want to say that we're

436
00:18:07,789 --> 00:18:12,109
gonna have like you know 16 million

437
00:18:10,250 --> 00:18:14,420
light probes act at the same time I just

438
00:18:12,109 --> 00:18:17,119
I don't think that's like very likely

439
00:18:14,420 --> 00:18:19,009
so probably 65,000 is a much more

440
00:18:17,119 --> 00:18:20,509
reasonable upper bound for the kind of

441
00:18:19,009 --> 00:18:23,089
thing that we're targeting here so I

442
00:18:20,509 --> 00:18:26,089
would say I'm more important thing to do

443
00:18:23,089 --> 00:18:27,919
minimize that voxel footprint cuz that's

444
00:18:26,089 --> 00:18:30,769
a lot of memory voxels of three

445
00:18:27,920 --> 00:18:33,140
dimensional they grow quickly we really

446
00:18:30,769 --> 00:18:35,240
don't want to spam out something too

447
00:18:33,140 --> 00:18:37,580
much there and so if we take a look at

448
00:18:35,240 --> 00:18:40,700
speed calc and we just say look let's

449
00:18:37,579 --> 00:18:44,649
try to define a voxel of reasonable

450
00:18:40,700 --> 00:18:50,600
dimension here maybe we say tivity six

451
00:18:44,650 --> 00:18:53,180
by 256 by 256 times two how big would

452
00:18:50,599 --> 00:18:54,500
that be so if we literally had a two

453
00:18:53,180 --> 00:18:57,740
Beauty six by traces by tree or six

454
00:18:54,500 --> 00:19:00,619
voxel it's only 32 megabytes only 30

455
00:18:57,740 --> 00:19:03,589
meters which is pretty good we could

456
00:19:00,619 --> 00:19:05,719
also probably tone that down quite a bit

457
00:19:03,589 --> 00:19:07,250
that's probably overkill for what we

458
00:19:05,720 --> 00:19:11,089
need if you think about what's going on

459
00:19:07,250 --> 00:19:12,890
I mean if we flip back to what we're

460
00:19:11,089 --> 00:19:13,399
looking at on the screen here I mean

461
00:19:12,890 --> 00:19:16,070
come on

462
00:19:13,400 --> 00:19:18,860
do we really need to be that specific

463
00:19:16,069 --> 00:19:21,439
you can see even when we zoom out quite

464
00:19:18,859 --> 00:19:22,639
a bit I mean you tell me how many of

465
00:19:21,440 --> 00:19:24,620
those light probes are on the screen

466
00:19:22,640 --> 00:19:28,040
right now it's not that many

467
00:19:24,619 --> 00:19:29,659
so 2d6 I think is overkill when we're

468
00:19:28,039 --> 00:19:32,480
looking at how many are across how many

469
00:19:29,660 --> 00:19:33,980
are up and down honestly 64 by 64 would

470
00:19:32,480 --> 00:19:36,160
probably sufficient I'm gonna go a

471
00:19:33,980 --> 00:19:40,970
little higher I'm gonna say 128 by 128

472
00:19:36,160 --> 00:19:43,490
but I'm thinking that this is totally

473
00:19:40,970 --> 00:19:45,380
sufficient that's a 4 Meg download not

474
00:19:43,490 --> 00:19:48,170
too bad per frame even if we aren't

475
00:19:45,380 --> 00:19:51,830
updating it judiciously 128 by 128 by

476
00:19:48,170 --> 00:19:55,690
128 screen aligned voxel seems like it

477
00:19:51,829 --> 00:19:55,689
would be fine with me

478
00:20:01,210 --> 00:20:08,299
that's what I would think and so what

479
00:20:04,789 --> 00:20:11,089
I'd like to do is maybe look at that as

480
00:20:08,299 --> 00:20:14,240
sort of more where we're going right so

481
00:20:11,089 --> 00:20:16,099
125 120 voxel will try to Center it

482
00:20:14,240 --> 00:20:17,769
around where the viewer is looking that

483
00:20:16,099 --> 00:20:20,449
should give us enough granularity

484
00:20:17,769 --> 00:20:23,539
certainly in Z I think it's enough in

485
00:20:20,450 --> 00:20:25,279
X&amp;Y it should also be enough but we can

486
00:20:23,539 --> 00:20:26,779
see we can always adjust it later but

487
00:20:25,279 --> 00:20:33,039
that I think is a more reasonable bound

488
00:20:26,779 --> 00:20:35,930
64 64 64 maybe a little bit too tight so

489
00:20:33,039 --> 00:20:37,700
I don't know or loose I guess I should

490
00:20:35,930 --> 00:20:40,279
say to course probably that's the right

491
00:20:37,700 --> 00:20:42,590
way to say it so I don't know that we

492
00:20:40,279 --> 00:20:46,279
want to go that far but you know so I'm

493
00:20:42,589 --> 00:20:49,429
gonna go ahead and say light voxel dim

494
00:20:46,279 --> 00:20:52,160
that's gonna be 2028 we can drop to 64

495
00:20:49,430 --> 00:20:54,170
and see maybe that's fine we want the

496
00:20:52,160 --> 00:20:59,290
lowest we can get away with and so here

497
00:20:54,170 --> 00:21:03,550
we want to say light index voxel and

498
00:20:59,289 --> 00:21:03,549
that's gonna be a light box little dim

499
00:21:03,819 --> 00:21:11,649
here I'm gonna call it a cube for now

500
00:21:08,900 --> 00:21:13,730
and that may be a mistake I don't know

501
00:21:11,650 --> 00:21:16,130
but I'm going to call it a cube for now

502
00:21:13,730 --> 00:21:17,599
and we're not going to subdivide our

503
00:21:16,130 --> 00:21:19,340
dimensions differently we're just going

504
00:21:17,599 --> 00:21:21,769
to put it as a cube just keep things

505
00:21:19,339 --> 00:21:23,689
simple and not bias the lighting in any

506
00:21:21,769 --> 00:21:25,730
particular direction so we're just gonna

507
00:21:23,690 --> 00:21:27,920
leave it that way so we're gonna have a

508
00:21:25,730 --> 00:21:29,630
light index voxel the indices will look

509
00:21:27,920 --> 00:21:31,640
up into here the light data width

510
00:21:29,630 --> 00:21:34,730
therefore we kind of know what it is

511
00:21:31,640 --> 00:21:36,620
it's going to be 6 5 5 3 6 is going to

512
00:21:34,730 --> 00:21:40,610
be the maximum so I'm gonna say max

513
00:21:36,619 --> 00:21:47,750
light probe count goes in here and

514
00:21:40,609 --> 00:21:49,399
that's just going to be this and this

515
00:21:47,750 --> 00:21:52,400
light chunk count I don't really know

516
00:21:49,400 --> 00:21:54,320
who is using that right now but we're

517
00:21:52,400 --> 00:21:55,970
gonna probably find out pretty soon

518
00:21:54,319 --> 00:21:58,129
because I'm probably gonna get rid of it

519
00:21:55,970 --> 00:22:00,350
so if we actually look at how much

520
00:21:58,130 --> 00:22:03,580
memories taken up by that light probe

521
00:22:00,349 --> 00:22:07,099
irradiance that's gonna be 6 times 65536

522
00:22:03,579 --> 00:22:09,740
as the base number which as you can see

523
00:22:07,099 --> 00:22:11,029
is totally reasonably sized beats number

524
00:22:09,740 --> 00:22:12,069
gonna be particularly worried about but

525
00:22:11,029 --> 00:22:14,528
it's gonna get mold

526
00:22:12,069 --> 00:22:16,418
by three times four because this is v3

527
00:22:14,528 --> 00:22:18,159
right now that gets up to four Meg's

528
00:22:16,419 --> 00:22:20,139
I'm not too worried about that again

529
00:22:18,159 --> 00:22:22,899
because that will shrink I think by a

530
00:22:20,138 --> 00:22:24,788
factor of three we'll be looking more

531
00:22:22,898 --> 00:22:26,528
like that so our total download

532
00:22:24,788 --> 00:22:28,538
bandwidth for all the lighting only

533
00:22:26,528 --> 00:22:30,278
around six megabytes a frame if I'm

534
00:22:28,538 --> 00:22:33,700
doing that math right I'm not sure that

535
00:22:30,278 --> 00:22:36,159
I am but again nothing really to get too

536
00:22:33,700 --> 00:22:37,720
concerned about on the kinds of

537
00:22:36,159 --> 00:22:40,629
platforms that can run real time

538
00:22:37,720 --> 00:22:42,940
lighting anyway so I think real-time

539
00:22:40,628 --> 00:22:43,569
lighting kept in those bounds probably

540
00:22:42,940 --> 00:22:45,519
fine

541
00:22:43,569 --> 00:22:47,739
again don't quote me on that because if

542
00:22:45,519 --> 00:22:49,419
we then run in it totally sucks

543
00:22:47,739 --> 00:22:51,220
you're gonna come back and say well you

544
00:22:49,419 --> 00:22:53,440
said it was totally fine I just saying I

545
00:22:51,220 --> 00:22:54,999
think it will be to leave on but it

546
00:22:53,440 --> 00:22:57,669
might not and at that point we'll have

547
00:22:54,999 --> 00:23:00,339
to adjust so now if we start to compile

548
00:22:57,669 --> 00:23:01,749
I don't know if we've left all that

549
00:23:00,339 --> 00:23:06,009
stuff out we may or may not have you can

550
00:23:01,749 --> 00:23:07,509
see it here okay so here you can see the

551
00:23:06,009 --> 00:23:09,489
one place we're actually still using it

552
00:23:07,509 --> 00:23:10,839
that's in the transfer we want to

553
00:23:09,489 --> 00:23:13,840
basically have this push lighting

554
00:23:10,839 --> 00:23:15,759
working the way that it is working we

555
00:23:13,839 --> 00:23:17,648
want that so when we actually go through

556
00:23:15,759 --> 00:23:19,960
and do our push lighting we do actually

557
00:23:17,648 --> 00:23:21,608
want to stay here in our transfer when

558
00:23:19,960 --> 00:23:23,679
we push this render element on we do

559
00:23:21,608 --> 00:23:25,749
want to say here is the the light data

560
00:23:23,679 --> 00:23:30,159
that we want to submit so we do actually

561
00:23:25,749 --> 00:23:33,368
want that coming down the pipeline now

562
00:23:30,159 --> 00:23:35,409
one of the things that we probably want

563
00:23:33,368 --> 00:23:38,470
to start thinking about though is that

564
00:23:35,409 --> 00:23:41,049
again this is a little bit ugly because

565
00:23:38,470 --> 00:23:42,548
it's a push forward scheme we don't

566
00:23:41,048 --> 00:23:44,200
really want to be pushed forward in this

567
00:23:42,548 --> 00:23:47,499
way the reason we don't want to be

568
00:23:44,200 --> 00:23:49,210
pushed forward is because remember we're

569
00:23:47,499 --> 00:23:51,009
now trying to actually do a reasonable

570
00:23:49,210 --> 00:23:52,239
job with our graphs output we don't

571
00:23:51,009 --> 00:23:54,098
really want to be copying this memory

572
00:23:52,239 --> 00:23:56,288
around all the time so probably what we

573
00:23:54,098 --> 00:23:59,648
would rather do is have this buffer be

574
00:23:56,288 --> 00:24:01,479
something that is submitted to the

575
00:23:59,648 --> 00:24:03,488
graphics card at least somewhat

576
00:24:01,479 --> 00:24:08,048
plausible so if we go back to the way

577
00:24:03,489 --> 00:24:10,960
our platform oops if we go back to the

578
00:24:08,048 --> 00:24:14,918
way our platform output for graphics is

579
00:24:10,960 --> 00:24:18,399
working what we can see when we look at

580
00:24:14,919 --> 00:24:19,659
the actually is this in the I think this

581
00:24:18,398 --> 00:24:21,250
is actually in the renderer now though

582
00:24:19,659 --> 00:24:30,730
isn't it

583
00:24:21,250 --> 00:24:34,359
I think it actually is yeah so if we

584
00:24:30,730 --> 00:24:37,808
take a look at where this stuff is

585
00:24:34,359 --> 00:24:40,449
actually going to get output right you

586
00:24:37,808 --> 00:24:42,399
can see that when we do our game render

587
00:24:40,450 --> 00:24:44,500
right here is the actual primary

588
00:24:42,400 --> 00:24:46,960
structure that we use to send everything

589
00:24:44,500 --> 00:24:51,038
down and what you can see is we actually

590
00:24:46,960 --> 00:24:53,409
have a specific thing that we give to

591
00:24:51,038 --> 00:24:55,839
the game and we say this is where the

592
00:24:53,409 --> 00:24:58,000
vertices go and then we say this is

593
00:24:55,839 --> 00:24:59,678
where the indices go now why don't we do

594
00:24:58,000 --> 00:25:02,558
it that way well the reason we do it

595
00:24:59,679 --> 00:25:05,798
that way is because we actually want the

596
00:25:02,558 --> 00:25:08,349
graphics card specifically or rather I

597
00:25:05,798 --> 00:25:10,450
should say the graphics driver to tell

598
00:25:08,349 --> 00:25:13,480
us what memory to put these things in

599
00:25:10,450 --> 00:25:15,220
the reason we want the graphics card to

600
00:25:13,480 --> 00:25:16,960
tell us where to put them is the grab

601
00:25:15,220 --> 00:25:18,659
this card may be able to allocate those

602
00:25:16,960 --> 00:25:22,120
things in such a way as to eliminate

603
00:25:18,659 --> 00:25:23,919
extra work done by the CPU to put them

604
00:25:22,119 --> 00:25:26,109
in a place where the graphics card can

605
00:25:23,919 --> 00:25:28,600
actually get them and so we don't

606
00:25:26,109 --> 00:25:31,599
typically want to just surprise the

607
00:25:28,599 --> 00:25:34,629
graphics driver and say hey grab a

608
00:25:31,599 --> 00:25:36,788
thriver guess what here's a place that

609
00:25:34,630 --> 00:25:38,530
has all the lighting data in it it is

610
00:25:36,788 --> 00:25:41,019
usually I say to us I really wish you'd

611
00:25:38,529 --> 00:25:43,029
asked me first because I would have told

612
00:25:41,019 --> 00:25:46,690
you to put it over here not over there

613
00:25:43,029 --> 00:25:49,149
right and so probably what we want to do

614
00:25:46,690 --> 00:25:51,548
is change this render end at the

615
00:25:49,150 --> 00:25:54,309
tree-lighting transfer a bit and say

616
00:25:51,548 --> 00:25:55,929
let's do a little more work there let's

617
00:25:54,308 --> 00:25:58,450
be a little bit more specific and say

618
00:25:55,929 --> 00:26:02,559
alright let's put this in here where we

619
00:25:58,450 --> 00:26:07,779
say max light probe count and then we

620
00:26:02,558 --> 00:26:11,288
say max light probe I'm sorry light

621
00:26:07,779 --> 00:26:13,119
probe count and in here let's put the

622
00:26:11,288 --> 00:26:15,279
actual lighting data where it belongs

623
00:26:13,119 --> 00:26:16,719
unlike what we were doing before so

624
00:26:15,279 --> 00:26:20,408
instead of having this render entry

625
00:26:16,720 --> 00:26:22,058
entry lighting transfer operation or any

626
00:26:20,409 --> 00:26:24,250
of that stuff we're just going to nuke

627
00:26:22,058 --> 00:26:26,440
this lighting textures that's going to

628
00:26:24,250 --> 00:26:28,929
go away what we're gonna say gonna do is

629
00:26:26,440 --> 00:26:32,350
just output it directly where it belongs

630
00:26:28,929 --> 00:26:34,960
so these things will go in here and this

631
00:26:32,349 --> 00:26:36,849
information will

632
00:26:34,960 --> 00:26:40,480
actually probably be something that we

633
00:26:36,849 --> 00:26:46,629
just specify in in this right so maybe

634
00:26:40,480 --> 00:26:50,788
here we say light voxel dim like that

635
00:26:46,630 --> 00:26:53,020
right so light voxel dim we get rid of

636
00:26:50,788 --> 00:26:55,058
that's that's not going to be a thing

637
00:26:53,019 --> 00:26:57,369
maxilla that's not gonna think they'll

638
00:26:55,058 --> 00:26:59,648
actually come through in here as run x

639
00:26:57,369 --> 00:27:01,148
values and the lighting textures will

640
00:26:59,648 --> 00:27:02,678
just disappear it's not going to be used

641
00:27:01,148 --> 00:27:05,319
anymore and will output our stuff

642
00:27:02,679 --> 00:27:19,298
directly into something that we actually

643
00:27:05,319 --> 00:27:32,288
want like this and that will look like

644
00:27:19,298 --> 00:27:33,398
that and you can sort of see here so

645
00:27:32,288 --> 00:27:34,898
we've got light box will dim my light

646
00:27:33,398 --> 00:27:42,129
box in my life lots of the Damned here

647
00:27:34,898 --> 00:27:49,089
we have light probably should make this

648
00:27:42,130 --> 00:27:50,799
actually right so here you can just see

649
00:27:49,089 --> 00:27:52,298
me notating like this is what these are

650
00:27:50,798 --> 00:27:54,579
going to be so it's basically like

651
00:27:52,298 --> 00:27:56,829
whatever the MaxLite probe count is by

652
00:27:54,579 --> 00:27:58,928
six right that goes in here and the

653
00:27:56,829 --> 00:28:01,928
light index voxel is just gonna be the

654
00:27:58,929 --> 00:28:08,890
you know three times that that dimension

655
00:28:01,929 --> 00:28:10,480
right and so later we can make those

656
00:28:08,890 --> 00:28:11,590
settings if we want to right now I'm

657
00:28:10,480 --> 00:28:13,079
just gonna hard code them into the

658
00:28:11,589 --> 00:28:15,398
render and say this is just what you get

659
00:28:13,079 --> 00:28:17,470
and we can make those be settings in the

660
00:28:15,398 --> 00:28:18,639
future if we want to try and make it be

661
00:28:17,470 --> 00:28:20,110
more flexible but I'm not particularly

662
00:28:18,640 --> 00:28:22,390
motivated that cuz I don't really see

663
00:28:20,109 --> 00:28:23,798
any point to it the lighting fidelity

664
00:28:22,390 --> 00:28:26,380
will just be what the lighting fidelity

665
00:28:23,798 --> 00:28:30,398
is and that'll be the end of it right so

666
00:28:26,380 --> 00:28:31,870
pretty straightforward okay so if I

667
00:28:30,398 --> 00:28:33,339
compile this now we should get some

668
00:28:31,869 --> 00:28:36,369
powers because I've gotten rid of the

669
00:28:33,339 --> 00:28:38,619
lighting submission stage altogether

670
00:28:36,369 --> 00:28:40,898
right so if we take a look in here and

671
00:28:38,619 --> 00:28:42,759
we see push lighting like I don't even

672
00:28:40,898 --> 00:28:45,129
want to talk about push lighting anymore

673
00:28:42,759 --> 00:28:47,230
like I don't really want that to be

674
00:28:45,130 --> 00:28:48,350
something that you ever even do because

675
00:28:47,230 --> 00:28:50,599
again push

676
00:28:48,349 --> 00:28:52,279
lighting is it's just not gonna it's not

677
00:28:50,599 --> 00:28:54,740
gonna work the same way so we're gonna

678
00:28:52,279 --> 00:28:56,119
kind of get rid of that notion all

679
00:28:54,740 --> 00:28:58,669
together

680
00:28:56,119 --> 00:29:00,558
that's not how lighting will work in our

681
00:28:58,669 --> 00:29:08,270
system right so now what we need to do

682
00:29:00,558 --> 00:29:09,529
is kind of hoops I guess we need to to

683
00:29:08,269 --> 00:29:17,058
get rid of that a little bit more

684
00:29:09,529 --> 00:29:19,399
stiffly there so here we do like output

685
00:29:17,058 --> 00:29:21,889
lighting points right that is no longer

686
00:29:19,400 --> 00:29:23,570
gonna work this way instead what that's

687
00:29:21,890 --> 00:29:26,509
going to do is it's gonna output

688
00:29:23,569 --> 00:29:29,808
directly into the function in question

689
00:29:26,509 --> 00:29:31,819
and so when you do output lighting

690
00:29:29,808 --> 00:29:34,038
points and output line tech textures

691
00:29:31,819 --> 00:29:35,980
whatever I'm gonna go ahead and say like

692
00:29:34,038 --> 00:29:38,089
we're gonna nuke some of these things

693
00:29:35,980 --> 00:29:42,140
completely so here where we do this

694
00:29:38,089 --> 00:29:47,538
where we say output loading textures I'm

695
00:29:42,140 --> 00:29:49,520
just gonna do that right that's the only

696
00:29:47,538 --> 00:29:51,109
one we're actually gonna have here and

697
00:29:49,519 --> 00:29:53,569
then this code will be adjusted too

698
00:29:51,109 --> 00:29:56,389
right into the render group directly

699
00:29:53,569 --> 00:29:57,889
that's what we want to do and so here

700
00:29:56,390 --> 00:29:59,600
when we come back and we look at the

701
00:29:57,890 --> 00:30:01,340
loading textures and we do this push

702
00:29:59,599 --> 00:30:04,069
lighting here I don't really want to do

703
00:30:01,339 --> 00:30:06,740
any of this stuff the way that's being

704
00:30:04,069 --> 00:30:08,569
done at all so we're not gonna do it

705
00:30:06,740 --> 00:30:10,609
this way right that's not what's gonna

706
00:30:08,569 --> 00:30:14,269
happen so when we do a push lighting

707
00:30:10,609 --> 00:30:16,668
there you can see oh sorry

708
00:30:14,269 --> 00:30:18,288
this was actually using that old code I

709
00:30:16,669 --> 00:30:19,460
just deleted we don't want to do it

710
00:30:18,288 --> 00:30:21,500
anymore we're just gonna assume that the

711
00:30:19,460 --> 00:30:23,600
lighting gets written into the render

712
00:30:21,500 --> 00:30:24,980
buffer and people who are using lighting

713
00:30:23,599 --> 00:30:28,428
use the lighting and that's it

714
00:30:24,980 --> 00:30:30,130
right there's nothing else to it all

715
00:30:28,429 --> 00:30:32,179
right so let's go ahead and delete this

716
00:30:30,130 --> 00:30:33,470
for the letting texture as part of

717
00:30:32,179 --> 00:30:35,870
things I don't think we actually need

718
00:30:33,470 --> 00:30:38,960
that on here at all so I'm gonna go

719
00:30:35,869 --> 00:30:40,729
ahead and keep hunting for compile

720
00:30:38,960 --> 00:30:43,640
errors and just try to clean this up a

721
00:30:40,730 --> 00:30:45,440
little bit so now we see okay are we

722
00:30:43,640 --> 00:30:46,880
gonna do update lighting we are gonna

723
00:30:45,440 --> 00:30:48,980
call our lighting test here that

724
00:30:46,880 --> 00:30:50,419
actually does the lighting and then you

725
00:30:48,980 --> 00:30:51,679
can see us doing some stuff here where

726
00:30:50,419 --> 00:30:53,480
we're doing like you know do we want to

727
00:30:51,679 --> 00:30:55,220
show the letting or not and output the

728
00:30:53,480 --> 00:30:56,419
lighting points and whatever we can't

729
00:30:55,220 --> 00:30:58,069
really do this anymore so I'm going to

730
00:30:56,419 --> 00:30:59,900
leave this for now we may reenable it

731
00:30:58,069 --> 00:31:01,559
later if we actually have some way of

732
00:30:59,900 --> 00:31:03,030
debugging the lighting separately the

733
00:31:01,559 --> 00:31:04,349
want to use we can always rename all

734
00:31:03,029 --> 00:31:04,740
that before now I just want to focus on

735
00:31:04,349 --> 00:31:07,319
this

736
00:31:04,740 --> 00:31:08,519
if update update lighting is enabled

737
00:31:07,319 --> 00:31:10,079
then we're gonna run this lighting test

738
00:31:08,519 --> 00:31:13,769
here that's gonna do it like that

739
00:31:10,079 --> 00:31:15,750
and then if we want to actually put the

740
00:31:13,769 --> 00:31:19,769
lighting out to the graphics card what

741
00:31:15,750 --> 00:31:21,690
we're gonna do is we are going to I'm

742
00:31:19,769 --> 00:31:23,819
not sure what that's actually trying to

743
00:31:21,690 --> 00:31:25,500
say there so that's probably not correct

744
00:31:23,819 --> 00:31:27,480
anymore but we'll leave the if in place

745
00:31:25,500 --> 00:31:29,700
anyway when we do output lighting

746
00:31:27,480 --> 00:31:32,130
textures that's actually a real thing

747
00:31:29,700 --> 00:31:34,080
still we just don't pass it anything

748
00:31:32,130 --> 00:31:37,290
right so it's actually gonna output the

749
00:31:34,079 --> 00:31:40,139
lighting textures on into that render

750
00:31:37,289 --> 00:31:42,240
group it will be doing that it's just

751
00:31:40,140 --> 00:31:45,410
not gonna do it this way right it's just

752
00:31:42,240 --> 00:31:45,410
not gonna do it by a texture call

753
00:31:46,670 --> 00:31:52,410
alright um so now when we run I I don't

754
00:31:50,970 --> 00:31:54,240
know we may have to go clean up some

755
00:31:52,410 --> 00:31:56,490
other stuff we may get a crash or you

756
00:31:54,240 --> 00:31:58,230
can kind of see so when we're actually

757
00:31:56,490 --> 00:32:01,470
doing stuff if we don't call that

758
00:31:58,230 --> 00:32:02,730
lighting push and I'll probably switch

759
00:32:01,470 --> 00:32:03,480
now that we're gonna kind of get into

760
00:32:02,730 --> 00:32:04,769
some more serious stuff here I'll

761
00:32:03,480 --> 00:32:07,440
probably switch to a debug build so we

762
00:32:04,769 --> 00:32:09,389
can inspect our code better as we work

763
00:32:07,440 --> 00:32:11,610
through like what happens when we pull

764
00:32:09,390 --> 00:32:13,950
that stuff out but what I'd like to do

765
00:32:11,609 --> 00:32:16,199
now is when we actually do our lighting

766
00:32:13,950 --> 00:32:17,819
test here I'm I want to make the

767
00:32:16,200 --> 00:32:22,019
lighting test call just be something

768
00:32:17,819 --> 00:32:25,799
that it gets past the light probe

769
00:32:22,019 --> 00:32:28,049
information that we actually need and it

770
00:32:25,799 --> 00:32:31,200
does it kind of all in one call now if I

771
00:32:28,049 --> 00:32:34,230
bounce back to where we were talking

772
00:32:31,200 --> 00:32:36,600
about the lighting I don't really care

773
00:32:34,230 --> 00:32:39,329
about most of this crap to be honest

774
00:32:36,599 --> 00:32:40,469
this lighting point recurse I'm gonna

775
00:32:39,329 --> 00:32:41,849
leave it in there case we need it later

776
00:32:40,470 --> 00:32:45,269
but but honestly a lot of this stuff

777
00:32:41,849 --> 00:32:46,949
should just go but alright so coming

778
00:32:45,269 --> 00:32:49,259
back here and you see what happens

779
00:32:46,950 --> 00:32:52,309
during the lighting test you can see

780
00:32:49,259 --> 00:32:55,109
first of all we do some nonsense with

781
00:32:52,309 --> 00:32:56,069
yeah with sampling and so this all has

782
00:32:55,109 --> 00:32:57,389
to get fixed me actually the lighting

783
00:32:56,069 --> 00:32:59,519
because we've rebuilt our sampling table

784
00:32:57,390 --> 00:33:02,430
now we can actually use it but forget

785
00:32:59,519 --> 00:33:04,470
about that stuff for now when we

786
00:33:02,430 --> 00:33:06,299
actually come through here and we build

787
00:33:04,470 --> 00:33:08,339
our spatial partition what you'll notice

788
00:33:06,299 --> 00:33:13,319
is we expected to kind of have something

789
00:33:08,339 --> 00:33:15,029
here that recorded which light boxes

790
00:33:13,319 --> 00:33:17,429
were actually involved right

791
00:33:15,029 --> 00:33:19,200
and you can see here we actually do grab

792
00:33:17,430 --> 00:33:21,990
that out of the render group here's the

793
00:33:19,200 --> 00:33:24,090
light boxes here but what we saw before

794
00:33:21,990 --> 00:33:26,339
was that I think without calling that

795
00:33:24,089 --> 00:33:28,049
push letting call we didn't set some of

796
00:33:26,339 --> 00:33:30,659
the state that we actually needed so we

797
00:33:28,049 --> 00:33:32,240
need that state to be set here and so

798
00:33:30,660 --> 00:33:35,790
this should crash right at that point

799
00:33:32,240 --> 00:33:37,980
hopefully you can see it here and what

800
00:33:35,789 --> 00:33:41,730
you can see is we're trying to get this

801
00:33:37,980 --> 00:33:47,400
root box set up the reason we can't get

802
00:33:41,730 --> 00:33:49,740
the root box set up is because when you

803
00:33:47,400 --> 00:33:52,290
called that push lighting call initially

804
00:33:49,740 --> 00:33:55,109
what it did is it output a box that we

805
00:33:52,289 --> 00:33:56,789
use for our route lighting box right and

806
00:33:55,109 --> 00:33:58,949
you can see that happening here where we

807
00:33:56,789 --> 00:34:03,450
sort of said look here's the root box

808
00:33:58,950 --> 00:34:06,360
it's box zero and so we kind of we're

809
00:34:03,450 --> 00:34:10,070
expecting to always have that be built

810
00:34:06,359 --> 00:34:12,148
into the system right but it wasn't

811
00:34:10,070 --> 00:34:16,200
properly built into the system because

812
00:34:12,148 --> 00:34:18,690
there was no box zero reserved so like

813
00:34:16,199 --> 00:34:20,339
right here where we do this if the if

814
00:34:18,690 --> 00:34:22,950
nobody outputted any lighting at all

815
00:34:20,340 --> 00:34:24,840
right or something like that then there

816
00:34:22,949 --> 00:34:27,089
would be literally no boxes so when we

817
00:34:24,840 --> 00:34:28,019
ask for that root box we would actually

818
00:34:27,090 --> 00:34:31,320
get nothing there would have been

819
00:34:28,019 --> 00:34:32,639
nothing there right so we definitely

820
00:34:31,320 --> 00:34:34,440
have a bunch of work we're gonna have to

821
00:34:32,639 --> 00:34:35,909
do here to sort of make this stuff work

822
00:34:34,440 --> 00:34:37,110
a little more cleany but this is work we

823
00:34:35,909 --> 00:34:38,849
want to do anyway because our lighting

824
00:34:37,110 --> 00:34:41,190
was not really getting sent down in a

825
00:34:38,849 --> 00:34:44,009
particularly good fashion before anyway

826
00:34:41,190 --> 00:34:47,429
right so let's take a look at how that

827
00:34:44,010 --> 00:34:48,929
actually worked out if I go I mean one

828
00:34:47,429 --> 00:34:51,599
thing you could ask is why is that even

829
00:34:48,929 --> 00:34:53,490
happening to begin with to be honest

830
00:34:51,599 --> 00:34:55,168
when we look at the root because root

831
00:34:53,489 --> 00:34:57,359
box it's not even zero so I'm not sure

832
00:34:55,168 --> 00:34:58,859
that made us because we're not setting

833
00:34:57,360 --> 00:35:00,059
that array or something let's take a

834
00:34:58,860 --> 00:35:04,680
look at what happens there I'm gonna

835
00:35:00,059 --> 00:35:07,369
take a break point into lighting test to

836
00:35:04,679 --> 00:35:07,369
see what happens sir

837
00:35:10,059 --> 00:35:13,369
so here we are in lighting test

838
00:35:11,989 --> 00:35:14,779
obviously you don't care about this part

839
00:35:13,369 --> 00:35:17,299
this is actually about the lighting

840
00:35:14,780 --> 00:35:19,670
sample so here you can see us starting

841
00:35:17,300 --> 00:35:21,680
up looking at what we're getting and you

842
00:35:19,670 --> 00:35:23,269
can see here this is the render group

843
00:35:21,679 --> 00:35:25,039
that we're asked to do the lighting on

844
00:35:23,269 --> 00:35:28,269
and you can see that it actually has no

845
00:35:25,039 --> 00:35:30,789
light boxes allocated whatsoever right

846
00:35:28,269 --> 00:35:33,289
there's nothing in that light box array

847
00:35:30,789 --> 00:35:34,519
and so that's our first problem because

848
00:35:33,289 --> 00:35:36,469
that's what we actually needed to do the

849
00:35:34,519 --> 00:35:38,059
lighting on so the person responsible

850
00:35:36,469 --> 00:35:40,369
for actually allocating those light

851
00:35:38,059 --> 00:35:42,529
boxes didn't actually allocate the light

852
00:35:40,369 --> 00:35:44,929
boxes right that's the problem

853
00:35:42,530 --> 00:35:46,430
and so you know that push lighting call

854
00:35:44,929 --> 00:35:47,629
was really doing it so we kind of do

855
00:35:46,429 --> 00:35:50,629
need something that's gonna allocate

856
00:35:47,630 --> 00:35:53,119
light boxes but my question is why are

857
00:35:50,630 --> 00:35:55,190
we doing that that way anyway the light

858
00:35:53,119 --> 00:35:57,139
boxes really should just be a static

859
00:35:55,190 --> 00:35:59,780
thing that's inside the letting to begin

860
00:35:57,139 --> 00:36:01,819
with and you don't transfer it right so

861
00:35:59,780 --> 00:36:03,950
what we would rather do I think is when

862
00:36:01,820 --> 00:36:06,890
we actually do an init lighting you do

863
00:36:03,949 --> 00:36:09,589
the light boxes here right this is where

864
00:36:06,889 --> 00:36:11,719
we actually want that to happen and we

865
00:36:09,590 --> 00:36:20,660
want that to happen in such a way as to

866
00:36:11,719 --> 00:36:21,939
always be correct right so when we look

867
00:36:20,659 --> 00:36:26,149
at what's actually happening when we

868
00:36:21,940 --> 00:36:28,519
allocate that the the light box is what

869
00:36:26,150 --> 00:36:30,920
we want to do is figure out okay we're

870
00:36:28,519 --> 00:36:32,780
gonna start pushing light boxes onto

871
00:36:30,920 --> 00:36:36,760
this system what we want to do is

872
00:36:32,780 --> 00:36:40,160
actually have those just be allocated

873
00:36:36,760 --> 00:36:42,020
and you reused right I mean that's

874
00:36:40,159 --> 00:36:43,730
really what we would like to do so I

875
00:36:42,019 --> 00:36:45,199
think they should stay inside the

876
00:36:43,730 --> 00:36:46,760
lighting system and then instead of

877
00:36:45,199 --> 00:36:48,859
calling something like push lighting

878
00:36:46,760 --> 00:36:51,560
what we should actually do is call

879
00:36:48,860 --> 00:36:54,190
something like here is the light target

880
00:36:51,559 --> 00:36:54,190
right

881
00:36:59,610 --> 00:37:04,269
yeah so I think what we want to do is

882
00:37:02,349 --> 00:37:06,039
more like this when we go in to update

883
00:37:04,269 --> 00:37:07,150
and render world when we create the

884
00:37:06,039 --> 00:37:09,460
render group that we're going to be

885
00:37:07,150 --> 00:37:11,079
using for our actual assets here what I

886
00:37:09,460 --> 00:37:12,429
want to do is say look that render group

887
00:37:11,079 --> 00:37:14,739
that you're going to feed all this stuff

888
00:37:12,429 --> 00:37:21,909
through let's go ahead and set the

889
00:37:14,739 --> 00:37:24,009
lighting so we want to say something

890
00:37:21,909 --> 00:37:29,409
like this let's set the lighting output

891
00:37:24,010 --> 00:37:35,320
equal to whatever our lighting box array

892
00:37:29,409 --> 00:37:38,710
is right and then that's where we'll

893
00:37:35,320 --> 00:37:40,330
output that information now again just

894
00:37:38,710 --> 00:37:42,699
trying to think about what that actually

895
00:37:40,329 --> 00:37:44,619
means we have sort of two separate sets

896
00:37:42,699 --> 00:37:46,509
of information here so again I want to

897
00:37:44,619 --> 00:37:47,559
kind of try to think this through a

898
00:37:46,510 --> 00:37:50,230
little bit better than we were thinking

899
00:37:47,559 --> 00:37:52,210
it through before we want to have inner

900
00:37:50,230 --> 00:37:55,059
lighting two different things probably

901
00:37:52,210 --> 00:37:57,610
we want both lighting probe information

902
00:37:55,059 --> 00:37:59,529
and we want light box information and

903
00:37:57,610 --> 00:38:02,769
the light probe information kind of

904
00:37:59,530 --> 00:38:04,510
needs to stay over time as well right so

905
00:38:02,769 --> 00:38:06,849
if something is a light probe we want to

906
00:38:04,510 --> 00:38:08,980
store the light probe data and we want

907
00:38:06,849 --> 00:38:10,929
to update that light probe data and so

908
00:38:08,980 --> 00:38:13,719
probably what we want to do here is

909
00:38:10,929 --> 00:38:16,480
actually because we want this to be more

910
00:38:13,719 --> 00:38:21,879
efficient long term we probably want to

911
00:38:16,480 --> 00:38:24,280
sort of contemplate a few more

912
00:38:21,880 --> 00:38:31,090
complicated things happening so I think

913
00:38:24,280 --> 00:38:41,370
we may want to do this something like

914
00:38:31,090 --> 00:38:43,660
this or like that so we kind of mark

915
00:38:41,369 --> 00:38:46,150
where we again the lighting computation

916
00:38:43,659 --> 00:38:49,059
and then I think we mark where we end

917
00:38:46,150 --> 00:38:51,250
the letting computation right and so

918
00:38:49,059 --> 00:38:53,049
when we get down to the place where we

919
00:38:51,250 --> 00:38:55,570
actually do the lighting test in here I

920
00:38:53,050 --> 00:38:57,910
think we would do and lighting

921
00:38:55,570 --> 00:39:00,100
computation and maybe what we say here

922
00:38:57,909 --> 00:39:01,359
is just like did you actually want to do

923
00:39:00,099 --> 00:39:05,860
lighting or did you just want to like

924
00:39:01,360 --> 00:39:09,940
throw away what was asked of you and so

925
00:39:05,860 --> 00:39:11,130
on right and so I think we probably want

926
00:39:09,940 --> 00:39:14,190
to do that

927
00:39:11,130 --> 00:39:16,349
this and we want to get rid of all of

928
00:39:14,190 --> 00:39:19,289
this and then maybe there is a thing

929
00:39:16,349 --> 00:39:21,119
here which says like output lighting

930
00:39:19,289 --> 00:39:23,009
textures in the case where you want to

931
00:39:21,119 --> 00:39:25,410
show it or not but I think what I'd

932
00:39:23,009 --> 00:39:27,210
rather do is just weld that in here so

933
00:39:25,409 --> 00:39:30,629
we'd say like update the lighting

934
00:39:27,210 --> 00:39:32,460
computation this way and then maybe this

935
00:39:30,630 --> 00:39:35,369
flag we just get rid of for now so I

936
00:39:32,460 --> 00:39:37,588
basically just look for if I if I go

937
00:39:35,369 --> 00:39:39,180
look in the world mode we've got this

938
00:39:37,588 --> 00:39:41,278
weird show lighting thing that's on here

939
00:39:39,179 --> 00:39:43,649
so I'm just gonna say like that actually

940
00:39:41,278 --> 00:39:46,108
goes away you you know you you don't get

941
00:39:43,650 --> 00:39:48,539
to do that and then this output lighting

942
00:39:46,108 --> 00:39:53,788
texture is part of things when we go

943
00:39:48,539 --> 00:39:56,099
look at that actual call this output

944
00:39:53,789 --> 00:39:58,710
lighting textures is actually not going

945
00:39:56,099 --> 00:40:01,798
to be in here at all that's actually

946
00:39:58,710 --> 00:40:02,909
just part of the sort of finishing of

947
00:40:01,798 --> 00:40:05,248
the lighting routine and it's just

948
00:40:02,909 --> 00:40:07,828
assumed that that will happen so the

949
00:40:05,248 --> 00:40:10,738
test lighting call this right here this

950
00:40:07,829 --> 00:40:13,349
test lighting that's actually gonna be

951
00:40:10,739 --> 00:40:14,880
where that actually happens if we do it

952
00:40:13,349 --> 00:40:17,818
at all there which I don't know that we

953
00:40:14,880 --> 00:40:19,890
necessarily will but we're going to need

954
00:40:17,818 --> 00:40:22,108
to do that at some point and so that

955
00:40:19,889 --> 00:40:25,710
means that this is actually like the end

956
00:40:22,108 --> 00:40:27,778
lighting computation call you pass in

957
00:40:25,710 --> 00:40:30,449
here like the lighting solution that you

958
00:40:27,778 --> 00:40:32,489
wanted to use you pass the render group

959
00:40:30,449 --> 00:40:34,798
you pass the high priority queue and

960
00:40:32,489 --> 00:40:39,210
then you pass a bull which is like you

961
00:40:34,798 --> 00:40:40,528
know lighting enabled that's whether or

962
00:40:39,210 --> 00:40:42,838
not we're actually gonna do the lighting

963
00:40:40,528 --> 00:40:45,380
or not and then we've got a called

964
00:40:42,838 --> 00:40:55,139
brackets it and that's the begin right

965
00:40:45,380 --> 00:40:56,818
and that's this and that's responsible

966
00:40:55,139 --> 00:41:00,690
for setting up anything that actually

967
00:40:56,818 --> 00:41:02,969
needs to happen with respect to the

968
00:41:00,690 --> 00:41:04,469
lighting right so again just working

969
00:41:02,969 --> 00:41:06,389
this through trying to clean it up a

970
00:41:04,469 --> 00:41:08,429
little bit obviously you know our

971
00:41:06,389 --> 00:41:10,318
renderer keeps improving over time and

972
00:41:08,429 --> 00:41:12,659
it keeps converging towards something

973
00:41:10,318 --> 00:41:14,670
that's more like a real renderer which

974
00:41:12,659 --> 00:41:16,588
is exactly what we want but that

975
00:41:14,670 --> 00:41:18,599
requires sort of these phases of like

976
00:41:16,588 --> 00:41:21,858
okay let's clean this up let's make like

977
00:41:18,599 --> 00:41:21,859
now that we see what it looks like

978
00:41:22,079 --> 00:41:28,559
let's make this stuff work a little

979
00:41:24,809 --> 00:41:33,480
better and I also of course I'm eyeing

980
00:41:28,559 --> 00:41:36,269
this as soups sorry as I'm doing it I'm

981
00:41:33,480 --> 00:41:38,550
also trying to kind of imagine well I

982
00:41:36,269 --> 00:41:41,940
don't want this to be too far away from

983
00:41:38,550 --> 00:41:44,130
a hardware solution so that if someone

984
00:41:41,940 --> 00:41:45,539
does want to implement in our TX version

985
00:41:44,130 --> 00:41:47,519
of this thing that does all the ray

986
00:41:45,539 --> 00:41:49,590
tracing really quickly on the GPU side

987
00:41:47,519 --> 00:41:51,570
of thing and maybe like improves the

988
00:41:49,590 --> 00:41:54,240
quality too right because if you have if

989
00:41:51,570 --> 00:41:56,010
you can get more speed out of it by like

990
00:41:54,239 --> 00:41:58,829
using an RT X card or something like

991
00:41:56,010 --> 00:42:01,530
that then what you could do is crank up

992
00:41:58,829 --> 00:42:03,840
the number of rays per probe and crank

993
00:42:01,530 --> 00:42:05,670
down the smoothing that gives you more

994
00:42:03,840 --> 00:42:07,860
responsive lighting but with the same

995
00:42:05,670 --> 00:42:10,430
quality right so basically what you

996
00:42:07,860 --> 00:42:12,780
could do there with our lighting

997
00:42:10,429 --> 00:42:14,339
certainly as machines get better and as

998
00:42:12,780 --> 00:42:17,790
ray tracing becomes more prevalent

999
00:42:14,340 --> 00:42:19,500
assuming that is what happens we'll also

1000
00:42:17,789 --> 00:42:21,659
kind of want to be in a position where

1001
00:42:19,500 --> 00:42:23,210
we can choose to have a driver that

1002
00:42:21,659 --> 00:42:26,879
actually does this on the graphics card

1003
00:42:23,210 --> 00:42:28,260
over time we can transfer that work over

1004
00:42:26,880 --> 00:42:29,760
there as those parts become more

1005
00:42:28,260 --> 00:42:32,970
powerful and have special-purpose things

1006
00:42:29,760 --> 00:42:37,770
just for doing it so there's how we

1007
00:42:32,969 --> 00:42:38,429
would do sort of that setup so let's

1008
00:42:37,769 --> 00:42:41,159
keep going

1009
00:42:38,429 --> 00:42:42,839
we've got our lighting solution here and

1010
00:42:41,159 --> 00:42:45,179
what we need to do is do that initial

1011
00:42:42,840 --> 00:42:46,890
setup and so what we want to do is take

1012
00:42:45,179 --> 00:42:49,349
our lighting solution and probably we

1013
00:42:46,889 --> 00:42:51,659
want to allocate space for the lighting

1014
00:42:49,349 --> 00:42:53,690
boxes right in here for now and again

1015
00:42:51,659 --> 00:42:56,159
this stuff is going to improve over time

1016
00:42:53,690 --> 00:42:58,769
but we kind of want to make sure that at

1017
00:42:56,159 --> 00:43:01,649
least is running nominally so we don't

1018
00:42:58,769 --> 00:43:03,630
get too far from a working program as we

1019
00:43:01,650 --> 00:43:04,829
focus on each individual part so this is

1020
00:43:03,630 --> 00:43:07,110
not really relevant to us right now

1021
00:43:04,829 --> 00:43:08,969
since the light boxes are occluders and

1022
00:43:07,110 --> 00:43:11,070
we don't really care about occluders

1023
00:43:08,969 --> 00:43:12,809
right now right but we kind of need to

1024
00:43:11,070 --> 00:43:14,640
keep them in the mix because we are

1025
00:43:12,809 --> 00:43:17,190
gonna have to work on them eventually so

1026
00:43:14,639 --> 00:43:20,009
we're gonna push an array on here we're

1027
00:43:17,190 --> 00:43:22,860
going to have some kind of a maximum

1028
00:43:20,010 --> 00:43:27,420
light box count that we want to enforce

1029
00:43:22,860 --> 00:43:29,220
that will go in here and so on now the

1030
00:43:27,420 --> 00:43:30,659
thing is we may actually know I'm

1031
00:43:29,219 --> 00:43:32,909
thinking about that again we may want to

1032
00:43:30,659 --> 00:43:35,369
do the same thing we did before if I go

1033
00:43:32,909 --> 00:43:37,619
back to that

1034
00:43:35,369 --> 00:43:39,299
renderer platform information like we're

1035
00:43:37,619 --> 00:43:40,859
doing here one could argue that the

1036
00:43:39,300 --> 00:43:42,750
light box is actually should go in here

1037
00:43:40,860 --> 00:43:45,450
because again they might want to go down

1038
00:43:42,750 --> 00:43:50,730
to the graphics card so I may want to do

1039
00:43:45,449 --> 00:43:53,639
this something like this and we've got

1040
00:43:50,730 --> 00:43:54,300
this notion of a light box that thing is

1041
00:43:53,639 --> 00:43:56,039
going to change

1042
00:43:54,300 --> 00:43:58,860
we don't it's it's really just an

1043
00:43:56,039 --> 00:44:02,789
occluder now it's just a it's just a box

1044
00:43:58,860 --> 00:44:05,280
shaped occluder right and so I think

1045
00:44:02,789 --> 00:44:07,380
what we want to do here is stop talking

1046
00:44:05,280 --> 00:44:14,780
about any of this stuff light boxes

1047
00:44:07,380 --> 00:44:14,780
really I don't know where they went

1048
00:44:15,139 --> 00:44:20,159
lighting box sorry so if we look at this

1049
00:44:18,420 --> 00:44:21,750
lighting box right this is just not

1050
00:44:20,159 --> 00:44:24,449
something we care about anymore really

1051
00:44:21,750 --> 00:44:26,550
in terms of the emission texture index

1052
00:44:24,449 --> 00:44:28,169
stuff like that some stuff this is just

1053
00:44:26,550 --> 00:44:30,300
not relevant anymore because lighting

1054
00:44:28,170 --> 00:44:33,030
boxes are just occluders now that's all

1055
00:44:30,300 --> 00:44:42,630
they do and so we're gonna kind of keep

1056
00:44:33,030 --> 00:44:44,910
it this way but that's really what those

1057
00:44:42,630 --> 00:44:48,539
are going to become they are no longer

1058
00:44:44,909 --> 00:44:50,149
things that we actually use to

1059
00:44:48,539 --> 00:44:52,829
[Music]

1060
00:44:50,150 --> 00:44:54,269
specifically like remove I'm sorry

1061
00:44:52,829 --> 00:44:57,239
they're no longer things that we use to

1062
00:44:54,269 --> 00:44:59,550
collect light as well as block it there

1063
00:44:57,239 --> 00:45:01,500
are things we use strictly for blocking

1064
00:44:59,550 --> 00:45:04,500
light so there are only includes now and

1065
00:45:01,500 --> 00:45:07,500
the things that actually capture the

1066
00:45:04,500 --> 00:45:09,960
light are the the light irradiance

1067
00:45:07,500 --> 00:45:14,219
probes that are placed throughout the

1068
00:45:09,960 --> 00:45:16,230
environment okay so I think that's more

1069
00:45:14,219 --> 00:45:17,939
what we actually want to do and so when

1070
00:45:16,230 --> 00:45:21,539
we're out putting lighting it's gonna go

1071
00:45:17,940 --> 00:45:23,610
more into something like this and so

1072
00:45:21,539 --> 00:45:27,269
let's move towards that a little bit

1073
00:45:23,610 --> 00:45:29,490
more as we go when we go to the renderer

1074
00:45:27,269 --> 00:45:32,219
itself and we look at what's happening

1075
00:45:29,489 --> 00:45:36,569
in there what you can see is that our

1076
00:45:32,219 --> 00:45:38,489
render group you know if we just take a

1077
00:45:36,570 --> 00:45:40,950
look at how this is being output here if

1078
00:45:38,489 --> 00:45:44,129
we look at our render group these are

1079
00:45:40,949 --> 00:45:45,779
the things that we want to output there

1080
00:45:44,130 --> 00:45:47,550
and normally we get them through game

1081
00:45:45,780 --> 00:45:48,610
render commands you can see that the

1082
00:45:47,550 --> 00:45:50,230
lighting has

1083
00:45:48,610 --> 00:45:52,660
that stuff kind of as a separate

1084
00:45:50,230 --> 00:45:55,750
sideband and so what we really want to

1085
00:45:52,659 --> 00:45:57,879
do is now get rid of that right we want

1086
00:45:55,750 --> 00:46:01,090
to get rid of the light boxes we want to

1087
00:45:57,880 --> 00:46:03,220
get rid of the light box count all we

1088
00:46:01,090 --> 00:46:06,130
really want is something like this light

1089
00:46:03,219 --> 00:46:08,230
point index not necessary so we pretty

1090
00:46:06,130 --> 00:46:14,619
much pretty much want to remove all of

1091
00:46:08,230 --> 00:46:16,119
those things if we can right I also

1092
00:46:14,619 --> 00:46:17,259
don't know to what extent we need light

1093
00:46:16,119 --> 00:46:19,989
pounds in there but we'll talk about

1094
00:46:17,260 --> 00:46:22,540
that later so I'm going to nuke all of

1095
00:46:19,989 --> 00:46:24,789
that light box count is gone like boxes

1096
00:46:22,539 --> 00:46:26,529
are gone and like point index is going

1097
00:46:24,789 --> 00:46:30,130
we're just going to talk about light in

1098
00:46:26,530 --> 00:46:32,019
abled now and then when I compile I

1099
00:46:30,130 --> 00:46:33,849
should have a bunch of problems because

1100
00:46:32,019 --> 00:46:37,780
the code that was still using that stuff

1101
00:46:33,849 --> 00:46:43,329
is going to be in a bit of a bind right

1102
00:46:37,780 --> 00:46:44,410
so here we go we want to you know take a

1103
00:46:43,329 --> 00:46:48,670
look at this stuff where the lighting

1104
00:46:44,409 --> 00:46:50,949
boxes work with the entity cache over

1105
00:46:48,670 --> 00:46:53,559
time that we may want to do is only

1106
00:46:50,949 --> 00:46:55,539
right out occluders when they come into

1107
00:46:53,559 --> 00:46:57,639
and out of the active set right that's a

1108
00:46:55,539 --> 00:46:59,400
pretty easy stuff thing for us to do so

1109
00:46:57,639 --> 00:47:03,460
we probably want to keep that in here

1110
00:46:59,400 --> 00:47:04,840
probably I don't actually know I'm gonna

1111
00:47:03,460 --> 00:47:07,090
say at the moment since everything is

1112
00:47:04,840 --> 00:47:09,670
dynamic we're not probably I'll do that

1113
00:47:07,090 --> 00:47:11,470
because it's just really just a position

1114
00:47:09,670 --> 00:47:13,750
anyway and that position can change

1115
00:47:11,469 --> 00:47:15,159
every frame to a certain extent so I

1116
00:47:13,750 --> 00:47:16,960
don't know how much we really want to

1117
00:47:15,159 --> 00:47:19,420
compress that so I'm probably gonna get

1118
00:47:16,960 --> 00:47:21,309
rid of that for now but anyway so what

1119
00:47:19,420 --> 00:47:22,599
we're gonna look at here is we're gonna

1120
00:47:21,309 --> 00:47:23,650
still look at the lighting enable call

1121
00:47:22,599 --> 00:47:26,049
in the group because some things don't

1122
00:47:23,650 --> 00:47:27,670
want lighting and other things do when

1123
00:47:26,050 --> 00:47:29,350
we actually do a push cube we do need to

1124
00:47:27,670 --> 00:47:32,800
put an occluder on there because you

1125
00:47:29,349 --> 00:47:35,170
know these are occlusion cubes they

1126
00:47:32,800 --> 00:47:37,660
block light that comes through but we're

1127
00:47:35,170 --> 00:47:39,250
not gonna do it this way the commands is

1128
00:47:37,659 --> 00:47:40,480
where we will get this stuff now so what

1129
00:47:39,250 --> 00:47:46,150
we'll do here is we'll look at the

1130
00:47:40,480 --> 00:47:49,119
commands light occluder count and we'll

1131
00:47:46,150 --> 00:47:53,920
see if that's less than the maximum

1132
00:47:49,119 --> 00:47:55,509
we're allowed to do right assuming it is

1133
00:47:53,920 --> 00:47:57,760
will still output the light box the same

1134
00:47:55,510 --> 00:48:00,220
way we used to and that's to say that we

1135
00:47:57,760 --> 00:48:02,010
will grab out of the commands our light

1136
00:48:00,219 --> 00:48:05,548
boxes in this case

1137
00:48:02,010 --> 00:48:08,430
or I should say light occluders and we

1138
00:48:05,548 --> 00:48:10,500
will implement increment our light a

1139
00:48:08,429 --> 00:48:12,629
clear account to account for the one

1140
00:48:10,500 --> 00:48:15,028
that we actually used will then write it

1141
00:48:12,630 --> 00:48:19,670
out the same way we used to but of

1142
00:48:15,028 --> 00:48:19,670
course the texture information now is

1143
00:48:19,818 --> 00:48:29,250
well actually guess we do want that we

1144
00:48:27,358 --> 00:48:30,659
need to sort of fix this stuff because

1145
00:48:29,250 --> 00:48:32,250
what we actually wanna do here is write

1146
00:48:30,659 --> 00:48:46,588
the average value for this texture in

1147
00:48:32,250 --> 00:48:47,548
here we'll have to see what we want to

1148
00:48:46,588 --> 00:48:48,750
be there I don't really know what we

1149
00:48:47,548 --> 00:48:49,440
want to do there that's a really good

1150
00:48:48,750 --> 00:48:51,690
question

1151
00:48:49,440 --> 00:48:53,460
if we were super Squinkie we'd probably

1152
00:48:51,690 --> 00:48:55,798
actually keep backing sources the

1153
00:48:53,460 --> 00:48:57,389
textures at least at a low resolution

1154
00:48:55,798 --> 00:48:58,650
and actually sample them when we were

1155
00:48:57,389 --> 00:49:00,420
doing our lighting but man that's

1156
00:48:58,650 --> 00:49:06,180
getting a little bit far afield on the

1157
00:49:00,420 --> 00:49:11,039
GPU that is what we would do but you

1158
00:49:06,179 --> 00:49:12,358
know so moving on from there we take a

1159
00:49:11,039 --> 00:49:13,950
look here and we say if it's enable

1160
00:49:12,358 --> 00:49:15,509
we're gonna write out that box otherwise

1161
00:49:13,949 --> 00:49:16,679
there's really not much else to do here

1162
00:49:15,510 --> 00:49:19,140
for lighting you can see us going

1163
00:49:16,679 --> 00:49:21,210
through there and we then pretty much

1164
00:49:19,139 --> 00:49:23,219
just go through and output the cube as

1165
00:49:21,210 --> 00:49:25,199
quads as necessary you can see that

1166
00:49:23,219 --> 00:49:27,088
happening here probably optimize that

1167
00:49:25,199 --> 00:49:29,939
path now that we have optimized quad

1168
00:49:27,088 --> 00:49:33,389
output but hey that's a story for

1169
00:49:29,940 --> 00:49:35,490
another day if we go in here and we push

1170
00:49:33,389 --> 00:49:38,009
look at what the push Claude has on it

1171
00:49:35,489 --> 00:49:40,199
you can see that we no longer really do

1172
00:49:38,010 --> 00:49:42,359
anything with lighting information in

1173
00:49:40,199 --> 00:49:44,308
here as far as I can tell that is by

1174
00:49:42,358 --> 00:49:46,679
design because now that shouldn't really

1175
00:49:44,309 --> 00:49:48,839
be involved in here so that's great that

1176
00:49:46,679 --> 00:49:49,798
all looks good and so now really all we

1177
00:49:48,838 --> 00:49:51,509
need to do is make sure that we're

1178
00:49:49,798 --> 00:49:53,460
pushing lighting probes on here in some

1179
00:49:51,510 --> 00:49:54,900
way because at the moment we actually

1180
00:49:53,460 --> 00:49:57,269
aren't doing any of that at all so now

1181
00:49:54,900 --> 00:49:59,220
if we compile what we should get is

1182
00:49:57,269 --> 00:50:03,329
during lighting passes when lighting is

1183
00:49:59,219 --> 00:50:05,759
enabled we should actually get basically

1184
00:50:03,329 --> 00:50:07,650
a memory access error because people are

1185
00:50:05,760 --> 00:50:09,510
going to try and write to an array we

1186
00:50:07,650 --> 00:50:11,369
haven't initialized which is this light

1187
00:50:09,510 --> 00:50:13,528
occluder cheryan we're gonna do that in

1188
00:50:11,369 --> 00:50:15,150
a second let's finish up our compile

1189
00:50:13,528 --> 00:50:17,880
errors first you

1190
00:50:15,150 --> 00:50:19,380
you see I forgot to change that to

1191
00:50:17,880 --> 00:50:21,809
commands remember it's not coming out of

1192
00:50:19,380 --> 00:50:23,550
the group anymore so that was a bit of a

1193
00:50:21,809 --> 00:50:24,809
screw up I think we had another compiler

1194
00:50:23,550 --> 00:50:25,980
in there though let's take a look at

1195
00:50:24,809 --> 00:50:28,679
what it was

1196
00:50:25,980 --> 00:50:30,570
here's us at when we actually go to do

1197
00:50:28,679 --> 00:50:35,369
our and letting computation you can see

1198
00:50:30,570 --> 00:50:37,740
us trying to work with this stuff our

1199
00:50:35,369 --> 00:50:40,380
box count in our boxes what we want to

1200
00:50:37,739 --> 00:50:43,769
do there is try to make this thing work

1201
00:50:40,380 --> 00:50:45,720
out a little bit better like I said not

1202
00:50:43,769 --> 00:50:47,940
using the group that shouldn't be too

1203
00:50:45,719 --> 00:50:49,980
hard because when we hit and letting

1204
00:50:47,940 --> 00:50:53,070
computation here all we should really

1205
00:50:49,980 --> 00:50:55,650
have to do is get this stuff out of the

1206
00:50:53,070 --> 00:50:57,030
game commands themselves right so I

1207
00:50:55,650 --> 00:50:59,039
think all we really need is something

1208
00:50:57,030 --> 00:51:01,650
like that I don't think we really need

1209
00:50:59,039 --> 00:51:02,099
anything more fancy right that should do

1210
00:51:01,650 --> 00:51:05,910
it

1211
00:51:02,099 --> 00:51:09,839
it's like a computer can of course and

1212
00:51:05,909 --> 00:51:11,460
then when we actually go to access the

1213
00:51:09,840 --> 00:51:16,350
light boxes themselves it's going to be

1214
00:51:11,460 --> 00:51:18,539
the same thing but other than that I

1215
00:51:16,349 --> 00:51:20,579
think we're good and again that's just

1216
00:51:18,539 --> 00:51:22,110
memory that we're going to be expecting

1217
00:51:20,579 --> 00:51:24,569
to have provided to us by the platform

1218
00:51:22,110 --> 00:51:27,030
layer because the graphics card may be

1219
00:51:24,570 --> 00:51:28,680
the thing that wants to do it itself now

1220
00:51:27,030 --> 00:51:30,150
lighting is not actually the right thing

1221
00:51:28,679 --> 00:51:32,609
here it's think it's world mode lighting

1222
00:51:30,150 --> 00:51:37,590
if I remember correctly test lighting

1223
00:51:32,610 --> 00:51:39,960
sorry but other than that it's exactly

1224
00:51:37,590 --> 00:51:44,340
what we could call bear nothing

1225
00:51:39,960 --> 00:51:46,380
particularly weird and now we have what

1226
00:51:44,340 --> 00:51:49,260
I think is a more sane pipeline for that

1227
00:51:46,380 --> 00:51:50,369
stuff to flow through and it's shortly

1228
00:51:49,260 --> 00:51:51,570
gonna become something that we don't

1229
00:51:50,369 --> 00:51:52,859
really call tests letting anymore it's

1230
00:51:51,570 --> 00:51:54,750
actually gonna be fairly reasonable

1231
00:51:52,860 --> 00:51:56,700
lighting now we get to the part where I

1232
00:51:54,750 --> 00:51:58,800
said we should get a crasher because

1233
00:51:56,699 --> 00:52:02,009
we're gonna try the light render

1234
00:51:58,800 --> 00:52:03,870
we're going to try to write to an array

1235
00:52:02,010 --> 00:52:06,030
that doesn't have anything in it or in

1236
00:52:03,869 --> 00:52:08,369
this case read from an array that

1237
00:52:06,030 --> 00:52:11,100
doesn't have anything in it because the

1238
00:52:08,369 --> 00:52:14,429
solution boxes themselves don't actually

1239
00:52:11,099 --> 00:52:17,039
have anything there so if we look at

1240
00:52:14,429 --> 00:52:18,719
what that pointer is that pointer should

1241
00:52:17,039 --> 00:52:20,759
be 0 because it came from something that

1242
00:52:18,719 --> 00:52:21,119
was uninitialized just like it was

1243
00:52:20,760 --> 00:52:23,490
before

1244
00:52:21,119 --> 00:52:25,679
and so we expected that to happen and it

1245
00:52:23,489 --> 00:52:28,750
did here is that box as this point here

1246
00:52:25,679 --> 00:52:32,009
is 0 so what I want to do now

1247
00:52:28,750 --> 00:52:33,730
is bounced back to the platform layer

1248
00:52:32,010 --> 00:52:36,340
where this is actually getting

1249
00:52:33,730 --> 00:52:39,280
initialized and actually I guess that

1250
00:52:36,340 --> 00:52:42,220
would be in win32 hand meet up in jail

1251
00:52:39,280 --> 00:52:47,650
or is it actually in handmade or or or

1252
00:52:42,219 --> 00:52:50,049
the jail I'm not sure let's take a look

1253
00:52:47,650 --> 00:52:52,329
at that I don't actually know so when we

1254
00:52:50,050 --> 00:52:54,700
actually allocate those pieces of memory

1255
00:52:52,329 --> 00:52:58,929
right we're looking at what we're trying

1256
00:52:54,699 --> 00:53:01,419
to do here is when we go to start our

1257
00:52:58,929 --> 00:53:04,539
you know start our process we allocate

1258
00:53:01,420 --> 00:53:06,280
memory where this stuff gets put and so

1259
00:53:04,539 --> 00:53:07,509
if you look let's just go ahead and

1260
00:53:06,280 --> 00:53:09,760
search for because I'm not sure where it

1261
00:53:07,510 --> 00:53:13,360
isn't here actually if you take a look

1262
00:53:09,760 --> 00:53:15,040
at that renderer layout we've got things

1263
00:53:13,360 --> 00:53:17,019
like the vertex array and we're trying

1264
00:53:15,039 --> 00:53:18,579
to you know map those right so let's

1265
00:53:17,019 --> 00:53:20,619
take a look at where we put those you

1266
00:53:18,579 --> 00:53:23,739
can see we've got here like we're

1267
00:53:20,619 --> 00:53:26,170
creating these buffers right that stuff

1268
00:53:23,739 --> 00:53:28,750
here what we want to do eventually

1269
00:53:26,170 --> 00:53:33,490
probably is do these things exactly

1270
00:53:28,750 --> 00:53:35,110
analogously again alig ously so that we

1271
00:53:33,489 --> 00:53:36,519
can transfer them quickly we want to

1272
00:53:35,110 --> 00:53:37,809
have the driver be aware of them and

1273
00:53:36,519 --> 00:53:39,369
tell us where we want to put this stuff

1274
00:53:37,809 --> 00:53:43,000
but for right now we're doing basically

1275
00:53:39,369 --> 00:53:44,650
everything ourselves with the lighting

1276
00:53:43,000 --> 00:53:46,449
and we're not contemplating doing it on

1277
00:53:44,650 --> 00:53:48,849
the card at all so what we want to do is

1278
00:53:46,449 --> 00:53:50,799
just allocate this as normal so this is

1279
00:53:48,849 --> 00:53:52,269
inside the opengl and Nick call now

1280
00:53:50,800 --> 00:53:55,600
remember we also want to free these

1281
00:53:52,269 --> 00:53:58,570
things when we go to change the settings

1282
00:53:55,599 --> 00:54:00,279
I guess well I actually know we s we

1283
00:53:58,570 --> 00:54:02,289
don't do those we don't actually free

1284
00:54:00,280 --> 00:54:03,580
those we just keep those the same and so

1285
00:54:02,289 --> 00:54:05,800
what we should be able to do here is

1286
00:54:03,579 --> 00:54:08,319
just say alright when we're in OpenGL in

1287
00:54:05,800 --> 00:54:11,440
it and we're creating our initial stuff

1288
00:54:08,320 --> 00:54:14,530
we can just allocate those and and use

1289
00:54:11,440 --> 00:54:16,539
them as is right so what I'm gonna do

1290
00:54:14,530 --> 00:54:18,340
here is exactly what we did with the

1291
00:54:16,539 --> 00:54:21,610
other things I'm gonna say that we're

1292
00:54:18,340 --> 00:54:23,769
going to want the light occluders and

1293
00:54:21,610 --> 00:54:27,160
we're gonna allocate those I'm gonna say

1294
00:54:23,769 --> 00:54:29,650
that we want our light probe irradiance

1295
00:54:27,159 --> 00:54:32,559
and I'm gonna say that we want our light

1296
00:54:29,650 --> 00:54:35,950
index voxel and then what I'm going to

1297
00:54:32,559 --> 00:54:39,549
do is when we actually go to transfer

1298
00:54:35,949 --> 00:54:40,929
those so when we look at what happens

1299
00:54:39,550 --> 00:54:43,329
with vertex array

1300
00:54:40,929 --> 00:54:45,068
and when you begin a frame right and you

1301
00:54:43,329 --> 00:54:46,780
initialize all this stuff I'm gonna

1302
00:54:45,068 --> 00:54:49,088
initialize all that stuff here as well

1303
00:54:46,780 --> 00:54:51,190
so in here we're gonna allocate this

1304
00:54:49,088 --> 00:54:53,170
stuff so places where we actually need

1305
00:54:51,190 --> 00:54:58,300
some memory for it and what you can see

1306
00:54:53,170 --> 00:55:00,490
here is there's pretty much no action

1307
00:54:58,300 --> 00:55:02,140
there's there's no actual memory getting

1308
00:55:00,489 --> 00:55:04,779
allocated here that I can see right it

1309
00:55:02,139 --> 00:55:08,618
doesn't actually seem to be doing any

1310
00:55:04,780 --> 00:55:15,819
Alex just kind of a bummer for us right

1311
00:55:08,619 --> 00:55:17,260
yeah it doesn't actually do any Alex

1312
00:55:15,818 --> 00:55:20,108
here so I need some way of allocating

1313
00:55:17,260 --> 00:55:22,960
some memory that we're going to use here

1314
00:55:20,108 --> 00:55:25,480
in the handmade OpenGL driver I don't

1315
00:55:22,960 --> 00:55:28,630
know if we've actually got that anywhere

1316
00:55:25,480 --> 00:55:32,710
unfortunately I would like it if we had

1317
00:55:28,630 --> 00:55:34,809
some allocation somewhere but I'm not

1318
00:55:32,710 --> 00:55:36,068
seeing it because I'd like because

1319
00:55:34,809 --> 00:55:38,290
remember I want to keep this fairly

1320
00:55:36,068 --> 00:55:39,989
isolated I don't really want to tie this

1321
00:55:38,289 --> 00:55:43,108
in us we have all those sources in our

1322
00:55:39,989 --> 00:55:47,348
game normally but I just don't really

1323
00:55:43,108 --> 00:55:49,469
want to have the renderer tie-in to

1324
00:55:47,349 --> 00:55:51,519
anything that it shouldn't be tying into

1325
00:55:49,469 --> 00:55:54,539
and I so I'm just trying to figure out

1326
00:55:51,519 --> 00:55:56,949
if we have anything in here for

1327
00:55:54,539 --> 00:55:59,199
allocation that isn't GPU side

1328
00:55:56,949 --> 00:56:03,159
allocation so far everything we do here

1329
00:55:59,199 --> 00:56:04,838
is GPU side allocation right I mean you

1330
00:56:03,159 --> 00:56:06,940
just looking there's tons of allocation

1331
00:56:04,838 --> 00:56:11,039
going on in here it's all stuff we ask

1332
00:56:06,940 --> 00:56:12,450
the GPU for right nothing in here is

1333
00:56:11,039 --> 00:56:16,230
[Music]

1334
00:56:12,449 --> 00:56:16,230
yeah it's not

1335
00:56:29,349 --> 00:56:36,789
so I'm interested in that light buffer

1336
00:56:32,358 --> 00:56:36,789
cap variable what's happening there

1337
00:56:44,300 --> 00:56:48,320
yeah sadly it just doesn't look like it

1338
00:56:46,789 --> 00:56:50,090
so I don't know what we would do there

1339
00:56:48,320 --> 00:56:51,950
because we don't have we haven't ever

1340
00:56:50,090 --> 00:56:55,579
contemplated needing separate memory

1341
00:56:51,949 --> 00:56:58,069
here and that's kind of a bummer but I

1342
00:56:55,579 --> 00:56:59,569
guess it can't really be helped because

1343
00:56:58,070 --> 00:57:01,430
we just decided we didn't want to do

1344
00:56:59,570 --> 00:57:03,200
that there's other ways I can do it then

1345
00:57:01,429 --> 00:57:05,599
so I guess I'm not that worried about it

1346
00:57:03,199 --> 00:57:07,669
I could just not allocate the memory at

1347
00:57:05,599 --> 00:57:10,339
all I could say instead what we do is

1348
00:57:07,670 --> 00:57:23,869
these things are actually just placed

1349
00:57:10,340 --> 00:57:26,120
directly on to the struct here and we'll

1350
00:57:23,869 --> 00:57:28,849
just say all right fine if that's the

1351
00:57:26,119 --> 00:57:30,859
way you want it that's the way we'll do

1352
00:57:28,849 --> 00:57:33,500
it there's going to be a light index

1353
00:57:30,860 --> 00:57:36,950
voxel the light index voxel is going to

1354
00:57:33,500 --> 00:57:42,219
be just 128 x 128 x 128 or something

1355
00:57:36,949 --> 00:57:42,219
like that right and we'll define that

1356
00:57:48,880 --> 00:57:54,019
so that array is just exactly what you

1357
00:57:51,800 --> 00:57:56,840
would expect we will then have the light

1358
00:57:54,019 --> 00:57:59,960
probe irradiance values and those are

1359
00:57:56,840 --> 00:58:04,180
just going to be six times light probe

1360
00:57:59,960 --> 00:58:04,179
count or whatever it is right so

1361
00:58:05,139 --> 00:58:08,440
something like that

1362
00:58:09,309 --> 00:58:14,930
and that you know we'll just say is it's

1363
00:58:12,829 --> 00:58:17,690
this maybe I'll be a little bit more I

1364
00:58:14,929 --> 00:58:19,578
mean maybe that's too much right I don't

1365
00:58:17,690 --> 00:58:22,039
really know what we want that value to

1366
00:58:19,579 --> 00:58:24,349
be so we'll think about that but these

1367
00:58:22,039 --> 00:58:31,309
are going to be our open jail values

1368
00:58:24,349 --> 00:58:39,289
here and then we'll say that that light

1369
00:58:31,309 --> 00:58:47,539
occluder array is something as well who

1370
00:58:39,289 --> 00:58:51,200
knows right and then we don't have to

1371
00:58:47,539 --> 00:58:53,150
contemplate allocating memory it's just

1372
00:58:51,199 --> 00:58:55,038
part of the one allocation that we do

1373
00:58:53,150 --> 00:59:00,108
that stores everything the OpenGL driver

1374
00:58:55,039 --> 00:59:02,059
needs right pretty straightforward okay

1375
00:59:00,108 --> 00:59:03,768
so if we then go in here and we say okay

1376
00:59:02,059 --> 00:59:06,829
how are these things going to get

1377
00:59:03,768 --> 00:59:12,288
distributed well now we know we've got

1378
00:59:06,829 --> 00:59:19,548
the light probe irradiance we've got the

1379
00:59:12,289 --> 00:59:23,390
light index voxel we've got the light

1380
00:59:19,548 --> 00:59:26,119
occluders and that's the setup right

1381
00:59:23,389 --> 00:59:28,368
it's all good and so that's really all

1382
00:59:26,119 --> 00:59:32,119
we need to do now and up here we don't

1383
00:59:28,369 --> 00:59:33,500
actually need the OpenGL allocations

1384
00:59:32,119 --> 00:59:35,088
that I was contemplating because they're

1385
00:59:33,500 --> 00:59:38,289
just part of the array now so if we

1386
00:59:35,088 --> 00:59:38,288
actually look at like you know

1387
00:59:43,159 --> 00:59:49,079
this stuff just doesn't happen so that's

1388
00:59:46,800 --> 00:59:51,119
really all we we need to do and then in

1389
00:59:49,079 --> 00:59:52,590
here every time we restart a frame we

1390
00:59:51,119 --> 00:59:54,869
want to do the same stuff we were doing

1391
00:59:52,590 --> 00:59:58,350
before so if we look at what's happening

1392
00:59:54,869 --> 01:00:00,329
in the renderer when we initialize that

1393
00:59:58,349 --> 01:00:01,259
sort of setting down we want to make

1394
01:00:00,329 --> 01:00:03,329
sure that these things are all

1395
01:00:01,260 --> 01:00:05,610
initialized properly as well so if we

1396
01:00:03,329 --> 01:00:09,090
look at the MaxLite probe count right we

1397
01:00:05,610 --> 01:00:13,980
want to do opengl max light probe count

1398
01:00:09,090 --> 01:00:15,930
if we look at the light probe count

1399
01:00:13,980 --> 01:00:19,050
initial value that just start at zero

1400
01:00:15,929 --> 01:00:28,199
certainly then we've got the light voxel

1401
01:00:19,050 --> 01:00:30,180
dim OpenGL light index box with name

1402
01:00:28,199 --> 01:00:31,980
just separating inside a little bit

1403
01:00:30,179 --> 01:00:33,989
better maybe I'll do that right so you

1404
01:00:31,980 --> 01:00:36,050
can see like okay max eyebrow light poop

1405
01:00:33,989 --> 01:00:38,639
count here's the light probe irradiance

1406
01:00:36,050 --> 01:00:43,010
then we've got the voxel dim and the

1407
01:00:38,639 --> 01:00:43,009
light index voxel right so those get set

1408
01:00:44,090 --> 01:00:49,500
like so and then finally we have the max

1409
01:00:47,429 --> 01:00:58,679
light occluder counts which is going to

1410
01:00:49,500 --> 01:01:01,289
be oops it's gonna be that I don't know

1411
01:00:58,679 --> 01:01:04,379
why I called it the occluders I don't

1412
01:01:01,289 --> 01:01:06,329
normally do that and so then we have the

1413
01:01:04,380 --> 01:01:08,070
light occluder count which will start at

1414
01:01:06,329 --> 01:01:10,230
zero for every frame as well and the

1415
01:01:08,070 --> 01:01:13,320
light occluders so that all seems fine

1416
01:01:10,230 --> 01:01:21,179
to me and then we just need to actually

1417
01:01:13,320 --> 01:01:24,510
do this and create that value with what

1418
01:01:21,179 --> 01:01:27,179
I said instead of what I did so those

1419
01:01:24,510 --> 01:01:30,030
are our OpenGL maxes there and I need to

1420
01:01:27,179 --> 01:01:32,608
put those somewhere right so if we take

1421
01:01:30,030 --> 01:01:34,440
a look at where we've got those pound

1422
01:01:32,608 --> 01:01:36,929
defines in other places you know like

1423
01:01:34,440 --> 01:01:38,909
depth component type is one of the

1424
01:01:36,929 --> 01:01:44,849
Defiance looks like actually we don't

1425
01:01:38,909 --> 01:01:46,529
really have any honestly so I guess I

1426
01:01:44,849 --> 01:01:48,029
don't know but you know I think probably

1427
01:01:46,530 --> 01:01:49,440
they should go in here right they should

1428
01:01:48,030 --> 01:01:52,680
be things that are at the top of the

1429
01:01:49,440 --> 01:01:53,650
OpenGL header probably just so they're

1430
01:01:52,679 --> 01:01:56,778
kind of visible

1431
01:01:53,650 --> 01:01:58,220
all right and so then finally that line

1432
01:01:56,778 --> 01:02:01,068
index voxel dam is just something I

1433
01:01:58,219 --> 01:02:02,298
changed the name of it right because I

1434
01:02:01,068 --> 01:02:05,119
wanted that to be something that was

1435
01:02:02,298 --> 01:02:07,730
specified with the same name as the as

1436
01:02:05,119 --> 01:02:09,410
the member that it actually had so if I

1437
01:02:07,730 --> 01:02:12,170
go ahead and look actually and render a

1438
01:02:09,409 --> 01:02:14,328
dot age this right here should just be

1439
01:02:12,170 --> 01:02:16,009
changed so now I think we're filling all

1440
01:02:14,329 --> 01:02:17,690
those things out more properly so we

1441
01:02:16,009 --> 01:02:19,519
actually have the ability to send down

1442
01:02:17,690 --> 01:02:21,230
lighting information kind of the new way

1443
01:02:19,518 --> 01:02:23,389
that we want so let's go ahead and debug

1444
01:02:21,230 --> 01:02:27,469
that and find out what we've done wrong

1445
01:02:23,389 --> 01:02:29,629
there looks like no crash just doesn't

1446
01:02:27,469 --> 01:02:31,129
really mean much munch that's good it

1447
01:02:29,630 --> 01:02:32,358
doesn't really mean much because we're

1448
01:02:31,130 --> 01:02:34,640
not really doing anything right now

1449
01:02:32,358 --> 01:02:35,900
and also we haven't actually enabled the

1450
01:02:34,639 --> 01:02:38,358
lighting of so we're gonna have to sort

1451
01:02:35,900 --> 01:02:41,358
of do that and get that contemplated as

1452
01:02:38,358 --> 01:02:42,798
well so let's actually try to find out

1453
01:02:41,358 --> 01:02:44,929
where light enabled was actually

1454
01:02:42,798 --> 01:02:51,548
happening here so I'm gonna go to do a

1455
01:02:44,929 --> 01:02:51,548
search for that it's lighting enabled

1456
01:02:51,579 --> 01:02:55,548
and what he can see here is we've got to

1457
01:02:54,349 --> 01:02:59,059
check on it

1458
01:02:55,548 --> 01:03:03,559
here we've got an actual enable call

1459
01:02:59,059 --> 01:03:05,150
here and that's pretty much it so what

1460
01:03:03,559 --> 01:03:07,069
we're looking for is a call to enable

1461
01:03:05,150 --> 01:03:08,749
lighting we don't know who's calling

1462
01:03:07,068 --> 01:03:14,538
that right now or if anyone ever is and

1463
01:03:08,748 --> 01:03:16,730
it looks like no one actually is so what

1464
01:03:14,539 --> 01:03:18,528
we need to do is actually enable the

1465
01:03:16,730 --> 01:03:21,619
lighting somewhere no one's actually

1466
01:03:18,528 --> 01:03:23,088
ever turning that on and so what we need

1467
01:03:21,619 --> 01:03:24,920
to do if we want to start contemplating

1468
01:03:23,088 --> 01:03:27,349
lighting at all is we're gonna have to

1469
01:03:24,920 --> 01:03:30,019
actually enable it so Cana here where we

1470
01:03:27,349 --> 01:03:31,999
do a begin lighting computation we

1471
01:03:30,018 --> 01:03:34,248
actually need to enable the lighting on

1472
01:03:31,998 --> 01:03:37,129
this render group as well right and

1473
01:03:34,248 --> 01:03:39,108
maybe what we should do the way that

1474
01:03:37,130 --> 01:03:41,059
render group is working maybe that

1475
01:03:39,108 --> 01:03:42,588
should actually be how we enable it so

1476
01:03:41,059 --> 01:03:47,480
maybe we want to do something more like

1477
01:03:42,588 --> 01:03:49,788
this oops I don't know where that

1478
01:03:47,480 --> 01:03:51,889
lighting bounds actually was being

1479
01:03:49,789 --> 01:03:55,339
computed we'll have to take a look and

1480
01:03:51,889 --> 01:03:58,759
see it looks like in here you can see

1481
01:03:55,338 --> 01:04:01,068
light bounce being computed here so

1482
01:03:58,759 --> 01:04:03,528
actually it looks more like this stuff

1483
01:04:01,068 --> 01:04:05,028
wants to occur a little lower down so

1484
01:04:03,528 --> 01:04:06,498
once we actually compute where the

1485
01:04:05,028 --> 01:04:07,130
lighting bands are going to be we would

1486
01:04:06,498 --> 01:04:08,809
do it here

1487
01:04:07,130 --> 01:04:10,880
we would say here's the light bounds

1488
01:04:08,809 --> 01:04:13,340
right and we're gonna enable lighting on

1489
01:04:10,880 --> 01:04:15,380
this on this group now what I don't like

1490
01:04:13,340 --> 01:04:17,539
about that is you can see that it's kind

1491
01:04:15,380 --> 01:04:19,340
of like two calls but you'd have to make

1492
01:04:17,539 --> 01:04:21,679
both that doesn't seem very good to me

1493
01:04:19,340 --> 01:04:23,539
and so when we do begin a lighting

1494
01:04:21,679 --> 01:04:27,139
computation I think I might want that to

1495
01:04:23,539 --> 01:04:29,809
sort of be where that happens so I might

1496
01:04:27,139 --> 01:04:31,940
want to do something more like this

1497
01:04:29,809 --> 01:04:36,289
oops it's not what I actually meant to

1498
01:04:31,940 --> 01:04:38,780
do I might want to do something more

1499
01:04:36,289 --> 01:04:41,000
like this where you say okay you say big

1500
01:04:38,780 --> 01:04:43,070
in lending computation that actually

1501
01:04:41,000 --> 01:04:44,420
happens on here maybe in the future

1502
01:04:43,070 --> 01:04:46,250
these things weld together

1503
01:04:44,420 --> 01:04:48,380
but either or we've got one of our

1504
01:04:46,250 --> 01:04:51,409
rectangle 3s that's the light bounce you

1505
01:04:48,380 --> 01:04:54,140
pass that here and that's where it

1506
01:04:51,409 --> 01:04:56,599
actually occurs and then in here we pass

1507
01:04:54,139 --> 01:04:58,789
the light bounce down like this we then

1508
01:04:56,599 --> 01:05:01,460
say that this is the thing that gets

1509
01:04:58,789 --> 01:05:06,559
whether or not lighting is enabled not

1510
01:05:01,460 --> 01:05:09,349
the ending call so in here where you're

1511
01:05:06,559 --> 01:05:17,029
passing that maybe we actually pass that

1512
01:05:09,349 --> 01:05:18,650
up here for now something like that I'm

1513
01:05:17,030 --> 01:05:25,760
not sure how we actually do it but

1514
01:05:18,650 --> 01:05:27,079
something like that like so and then

1515
01:05:25,760 --> 01:05:32,450
this can actually do a thing that says

1516
01:05:27,079 --> 01:05:33,829
well we enable lighting or we don't

1517
01:05:32,449 --> 01:05:38,449
based on that

1518
01:05:33,829 --> 01:05:42,559
right so then in here this could

1519
01:05:38,449 --> 01:05:45,289
actually do the lighting or not based

1520
01:05:42,559 --> 01:05:47,509
instead on whether or not anyone

1521
01:05:45,289 --> 01:05:49,250
actually enabled the lighting right so

1522
01:05:47,510 --> 01:05:57,240
if this was passed as false then it just

1523
01:05:49,250 --> 01:06:00,068
won't do it right okay

1524
01:05:57,239 --> 01:06:01,838
so we're getting closer again it's

1525
01:06:00,068 --> 01:06:04,268
getting better it's not perfect yet but

1526
01:06:01,838 --> 01:06:06,338
it's not horrible and then what we can

1527
01:06:04,268 --> 01:06:08,199
do is run it and see if that makes any

1528
01:06:06,338 --> 01:06:11,768
sense to anyone in the lighting code and

1529
01:06:08,199 --> 01:06:13,629
we don't really know right so now we're

1530
01:06:11,768 --> 01:06:14,858
actually running slower and that's a

1531
01:06:13,630 --> 01:06:17,349
great sign because it means we're

1532
01:06:14,858 --> 01:06:19,690
actually doing something if you take a

1533
01:06:17,349 --> 01:06:22,900
look at the profile you can see that

1534
01:06:19,690 --> 01:06:25,000
actually we're spending time in our and

1535
01:06:22,900 --> 01:06:26,740
lighting computation and that's what we

1536
01:06:25,000 --> 01:06:28,298
want right we want to actually spend

1537
01:06:26,739 --> 01:06:31,389
some time in there because we're now

1538
01:06:28,298 --> 01:06:34,778
pushing down some actual stuff so that's

1539
01:06:31,389 --> 01:06:36,699
all good and now we want to do is start

1540
01:06:34,778 --> 01:06:38,528
to actually use these things that we

1541
01:06:36,699 --> 01:06:44,078
have provided space for it provided a

1542
01:06:38,528 --> 01:06:46,088
place for them to exist all right so

1543
01:06:44,079 --> 01:06:47,769
what I want to start with is we now have

1544
01:06:46,088 --> 01:06:49,630
a place where we're outputting the

1545
01:06:47,768 --> 01:06:52,149
lighting coherently every frame we're

1546
01:06:49,630 --> 01:06:53,769
actually filling out these things we're

1547
01:06:52,150 --> 01:06:56,200
not actually filling out our lighting

1548
01:06:53,768 --> 01:06:58,298
probes so we don't actually say anywhere

1549
01:06:56,199 --> 01:06:59,889
where these lighting probes are actually

1550
01:06:58,298 --> 01:07:01,869
getting specified and so we want to do

1551
01:06:59,889 --> 01:07:03,759
now is actually put that information

1552
01:07:01,869 --> 01:07:09,130
into letting put in the license because

1553
01:07:03,759 --> 01:07:13,690
we know that we do know it right hmm and

1554
01:07:09,130 --> 01:07:16,690
so in here where we do our RM the output

1555
01:07:13,690 --> 01:07:22,420
so in the entity in the end of the

1556
01:07:16,690 --> 01:07:24,250
output call what do you see is we you

1557
01:07:22,420 --> 01:07:26,259
know we sort of have we've got some

1558
01:07:24,250 --> 01:07:28,588
stuff we maybe need to streamline

1559
01:07:26,259 --> 01:07:32,380
already you know we could think about

1560
01:07:28,588 --> 01:07:33,969
trying to make this again keep in

1561
01:07:32,380 --> 01:07:35,349
keeping with the idea of trying to make

1562
01:07:33,969 --> 01:07:36,759
this a minimal to a hardware

1563
01:07:35,349 --> 01:07:38,528
implementation eventually there are some

1564
01:07:36,759 --> 01:07:40,059
things we might want to do to make

1565
01:07:38,528 --> 01:07:41,710
things easier on ourselves but I'll kind

1566
01:07:40,059 --> 01:07:42,940
of talk about those in a second but

1567
01:07:41,710 --> 01:07:44,949
we're we're outputting this stuff right

1568
01:07:42,940 --> 01:07:47,470
now we do know when we hit a Lennie

1569
01:07:44,949 --> 01:07:51,969
probe right because you can see right

1570
01:07:47,469 --> 01:07:54,429
here we have in is light probe call that

1571
01:07:51,969 --> 01:07:57,308
asks exactly that question and then we

1572
01:07:54,429 --> 01:07:59,618
push a cube on here to draw it so we

1573
01:07:57,309 --> 01:08:01,450
clearly know we could draw a lighting

1574
01:07:59,619 --> 01:08:03,608
probe I also don't know what we're doing

1575
01:08:01,449 --> 01:08:06,098
with this light probe count anything I

1576
01:08:03,608 --> 01:08:08,960
guess we're just specifying that

1577
01:08:06,099 --> 01:08:10,039
somewhere oh if I'd you can see it here

1578
01:08:08,960 --> 01:08:17,989
but we really don't need that right

1579
01:08:10,039 --> 01:08:19,850
because now we can do this this render

1580
01:08:17,988 --> 01:08:23,059
group here we can just output that

1581
01:08:19,850 --> 01:08:27,548
number right so here instead of light

1582
01:08:23,060 --> 01:08:27,548
probe count we can actually just do this

1583
01:08:27,699 --> 01:08:34,548
and if I'm sorry that will just tell us

1584
01:08:33,259 --> 01:08:37,039
what the light probe county is directly

1585
01:08:34,548 --> 01:08:39,798
right so if you look at the render

1586
01:08:37,039 --> 01:08:46,100
commands and what the light probe count

1587
01:08:39,798 --> 01:08:48,528
was on those in here you can see when we

1588
01:08:46,100 --> 01:08:50,180
look at everything that we've done we

1589
01:08:48,529 --> 01:08:51,080
actually know what the light probe count

1590
01:08:50,180 --> 01:08:52,969
is because that's actually something

1591
01:08:51,079 --> 01:08:54,318
that we now have to track so we don't

1592
01:08:52,969 --> 01:08:55,969
actually need to track that separately

1593
01:08:54,319 --> 01:08:57,560
that was just lonely we were playing

1594
01:08:55,969 --> 01:08:59,270
around with as something we you know

1595
01:08:57,560 --> 01:09:03,140
wanted to kind of know off the top of

1596
01:08:59,270 --> 01:09:05,540
our head so that's totally fine if we

1597
01:09:03,140 --> 01:09:08,440
move move move that's good if we move

1598
01:09:05,539 --> 01:09:11,119
down here now and we take a look at oh

1599
01:09:08,439 --> 01:09:12,949
you know what I forgot our draw cover is

1600
01:09:11,119 --> 01:09:15,108
not happening in line anymore right

1601
01:09:12,949 --> 01:09:17,389
draw ground cover is now happening sort

1602
01:09:15,109 --> 01:09:22,338
of as a separate pass that we were

1603
01:09:17,390 --> 01:09:24,920
timing right I think yeah that doesn't

1604
01:09:22,338 --> 01:09:28,609
really have to happen anymore right and

1605
01:09:24,920 --> 01:09:30,259
so that's probably just sort of a waste

1606
01:09:28,609 --> 01:09:32,029
so I probably want to get rid of that

1607
01:09:30,259 --> 01:09:34,939
too right we probably want that to go

1608
01:09:32,029 --> 01:09:43,130
away and that probably wants to come up

1609
01:09:34,939 --> 01:09:45,139
and be we enabled inline there there

1610
01:09:43,130 --> 01:09:48,920
there was no need for us to do that the

1611
01:09:45,140 --> 01:09:51,859
way we're doing okay so anyway moving on

1612
01:09:48,920 --> 01:09:53,390
so when we output this now and we do is

1613
01:09:51,859 --> 01:09:55,280
light probe what we really want to do is

1614
01:09:53,390 --> 01:09:57,650
just send down the actual light probe

1615
01:09:55,279 --> 01:10:00,319
right so we want to do this because

1616
01:09:57,649 --> 01:10:02,238
that's like a debug feature but we also

1617
01:10:00,319 --> 01:10:04,880
want to do a thing where we actually

1618
01:10:02,238 --> 01:10:06,139
push a light probe on to the light probe

1619
01:10:04,880 --> 01:10:07,550
stack because we're actually going to

1620
01:10:06,140 --> 01:10:09,920
want to use those now like we want to

1621
01:10:07,550 --> 01:10:12,850
actually know what's going on and if we

1622
01:10:09,920 --> 01:10:12,850
look at our entity

1623
01:10:16,130 --> 01:10:20,550
mmm-hmm when we look at what's going on

1624
01:10:19,020 --> 01:10:23,430
here you can see we're not really

1625
01:10:20,550 --> 01:10:27,600
storing the light probe information yet

1626
01:10:23,430 --> 01:10:31,980
right and this is where I've sort of

1627
01:10:27,600 --> 01:10:33,570
gotten to the point where I don't

1628
01:10:31,979 --> 01:10:35,009
actually know if we want to stream these

1629
01:10:33,569 --> 01:10:38,939
out right this is what I was saying

1630
01:10:35,010 --> 01:10:41,510
before the light probe position is

1631
01:10:38,939 --> 01:10:44,279
something that we do need to stream out

1632
01:10:41,510 --> 01:10:45,960
because it may move every frame we don't

1633
01:10:44,279 --> 01:10:48,689
know where the lighting probe positions

1634
01:10:45,960 --> 01:10:50,909
are actually going to be but we do need

1635
01:10:48,689 --> 01:10:54,569
to save like the color of the light

1636
01:10:50,909 --> 01:10:59,130
probes and so what will happen and what

1637
01:10:54,569 --> 01:11:01,979
I want to just keep an eye on is we kind

1638
01:10:59,130 --> 01:11:04,230
of want those things to persist on the

1639
01:11:01,979 --> 01:11:08,149
graphics card if we ever choose to make

1640
01:11:04,229 --> 01:11:08,149
them be graphics card related right

1641
01:11:16,560 --> 01:11:22,480
and so what I think we'd find here is

1642
01:11:19,810 --> 01:11:24,430
that the light probes that we have in

1643
01:11:22,479 --> 01:11:26,109
the system kind of need to have stable

1644
01:11:24,430 --> 01:11:29,619
indices and those stable indices maybe

1645
01:11:26,109 --> 01:11:34,210
need to go along with a stable backing

1646
01:11:29,619 --> 01:11:35,649
buffer right and so again I think we

1647
01:11:34,210 --> 01:11:37,630
need to be careful how we do this so

1648
01:11:35,649 --> 01:11:40,539
when I'm looking at the commands there

1649
01:11:37,630 --> 01:11:43,119
right maybe I was a little bit hasty on

1650
01:11:40,539 --> 01:11:46,060
just that one thing light probe count

1651
01:11:43,119 --> 01:11:47,949
may just not be a thing right what we

1652
01:11:46,060 --> 01:11:50,080
may actually need to do is take a look

1653
01:11:47,949 --> 01:11:52,239
at the world itself and look at the way

1654
01:11:50,079 --> 01:11:54,729
that the caching system works right and

1655
01:11:52,239 --> 01:11:56,949
say how many entities are cached at any

1656
01:11:54,729 --> 01:11:59,949
given time right so we look in here we

1657
01:11:56,949 --> 01:12:02,170
say max unpacked entity count and what

1658
01:11:59,949 --> 01:12:03,760
we do there is we're actually taking I

1659
01:12:02,170 --> 01:12:12,640
think of this value and using that in

1660
01:12:03,760 --> 01:12:14,590
some way right yeah so what you can see

1661
01:12:12,640 --> 01:12:19,300
here is we have a max unpacked entity

1662
01:12:14,590 --> 01:12:22,510
count and I believe right now our light

1663
01:12:19,300 --> 01:12:25,420
our entities are where the light probe

1664
01:12:22,510 --> 01:12:27,909
data comes from right like we'd place

1665
01:12:25,420 --> 01:12:33,970
entities in the world that are our the

1666
01:12:27,909 --> 01:12:37,239
our that are our light probes that's

1667
01:12:33,970 --> 01:12:40,570
what we're doing so when we actually

1668
01:12:37,239 --> 01:12:45,239
create this unpacked any count here

1669
01:12:40,569 --> 01:12:47,590
right we sort of have a problem where we

1670
01:12:45,239 --> 01:12:52,809
don't have a problem I guess we have an

1671
01:12:47,590 --> 01:12:57,340
opportunity to say we could just use the

1672
01:12:52,810 --> 01:13:00,670
indices that we give to each entity

1673
01:12:57,340 --> 01:13:03,789
transit orally while it's in the active

1674
01:13:00,670 --> 01:13:07,500
set as what that lighting information as

1675
01:13:03,789 --> 01:13:07,500
where that letting information goes

1676
01:13:08,100 --> 01:13:12,000
there's there's

1677
01:13:20,029 --> 01:13:30,988
there's a few things that I don't know

1678
01:13:24,270 --> 01:13:36,780
if I like about that I'm sorry for not

1679
01:13:30,988 --> 01:13:38,399
being particularly lucid here it's just

1680
01:13:36,779 --> 01:13:45,630
a little bit touching and I'm trying to

1681
01:13:38,399 --> 01:13:49,409
think it through I guess what I would

1682
01:13:45,630 --> 01:13:51,210
say is while occluders probably want to

1683
01:13:49,409 --> 01:13:54,179
be streamed out every time because they

1684
01:13:51,210 --> 01:13:57,140
have no state they're just crap in the

1685
01:13:54,179 --> 01:14:01,050
world that needs to intersect lights

1686
01:13:57,140 --> 01:14:03,869
light probes want to be averaged over

1687
01:14:01,050 --> 01:14:06,449
time and in order to average them over

1688
01:14:03,869 --> 01:14:09,988
time I need to know from one frame to

1689
01:14:06,448 --> 01:14:12,000
the next which light probes are which I

1690
01:14:09,988 --> 01:14:14,069
can't just have an unorganized

1691
01:14:12,000 --> 01:14:19,909
collection of light probe information

1692
01:14:14,069 --> 01:14:19,909
because I won't know who to blend so

1693
01:14:20,869 --> 01:14:26,219
what I would like to do is assign an

1694
01:14:23,488 --> 01:14:28,829
index to each light probe rather than it

1695
01:14:26,219 --> 01:14:30,539
being where it came in the order of draw

1696
01:14:28,829 --> 01:14:33,210
output for this frame which is not

1697
01:14:30,539 --> 01:14:35,369
stable I'd like it to be based on

1698
01:14:33,210 --> 01:14:40,399
something that from frame to frame is

1699
01:14:35,369 --> 01:14:42,689
always going to be identical and I think

1700
01:14:40,399 --> 01:14:45,439
the best way to do that would be to say

1701
01:14:42,689 --> 01:14:48,599
every entity when it gets unpacked

1702
01:14:45,439 --> 01:14:51,439
already has to be unpacked in such a way

1703
01:14:48,600 --> 01:14:53,969
as to have a unique identifier that

1704
01:14:51,439 --> 01:14:56,210
identifier will be unique to that entity

1705
01:14:53,969 --> 01:14:59,579
until it goes out of the active set and

1706
01:14:56,210 --> 01:15:03,029
so what I probably should do is when we

1707
01:14:59,579 --> 01:15:05,969
unpack an entity give it a spot in the

1708
01:15:03,029 --> 01:15:08,219
light probe based on that index now

1709
01:15:05,969 --> 01:15:11,039
that's piggy that's the main problem

1710
01:15:08,219 --> 01:15:12,510
with it it's piggy we don't actually

1711
01:15:11,039 --> 01:15:14,850
need that mini because there aren't that

1712
01:15:12,510 --> 01:15:16,350
many light probes the number of light

1713
01:15:14,850 --> 01:15:21,179
probes is drastically less than the

1714
01:15:16,350 --> 01:15:23,250
number of entities right and so the only

1715
01:15:21,179 --> 01:15:26,609
thing that's a little bit hairy there is

1716
01:15:23,250 --> 01:15:28,819
not wanting to have the indices do that

1717
01:15:26,609 --> 01:15:33,229
but

1718
01:15:28,819 --> 01:15:35,179
if we are saying that we're just gonna

1719
01:15:33,229 --> 01:15:38,689
incrementally update the light probes

1720
01:15:35,180 --> 01:15:41,900
anyway then I guess maybe the answer is

1721
01:15:38,689 --> 01:15:44,089
we incrementally update that array by

1722
01:15:41,899 --> 01:15:46,309
writing into it like a sparse texture

1723
01:15:44,090 --> 01:15:49,630
anyway in which case we don't care if

1724
01:15:46,310 --> 01:15:49,630
big blocks of it aren't used

1725
01:15:59,529 --> 01:16:06,719
I'm gonna go with this for now because I

1726
01:16:02,890 --> 01:16:06,720
can't really think of a reason not to

1727
01:16:25,279 --> 01:16:32,788
so here is an alternative proposal and

1728
01:16:28,698 --> 01:16:38,219
it does seem better if instead of doing

1729
01:16:32,788 --> 01:16:41,309
that we kept a separate list and that

1730
01:16:38,219 --> 01:16:44,998
list was just for allocating light probe

1731
01:16:41,309 --> 01:16:47,189
indexes so when we unpack an entity if

1732
01:16:44,998 --> 01:16:49,260
it's a light probe we assign it a light

1733
01:16:47,189 --> 01:16:52,590
probe index if it is not a light probe

1734
01:16:49,260 --> 01:16:56,130
we don't that would definitely be better

1735
01:16:52,590 --> 01:16:59,489
right because that would mean that if we

1736
01:16:56,130 --> 01:17:02,550
said there's only ever 10,000 light

1737
01:16:59,488 --> 01:17:04,498
probes active at any given time then

1738
01:17:02,550 --> 01:17:07,650
even though there can be way more than

1739
01:17:04,498 --> 01:17:11,309
10,000 entities in the uncashed set I'm

1740
01:17:07,649 --> 01:17:13,288
starting the cash set we wouldn't

1741
01:17:11,309 --> 01:17:16,529
actually need the light probe backing

1742
01:17:13,288 --> 01:17:18,509
store to be that big now it may be that

1743
01:17:16,529 --> 01:17:25,349
that extra bookkeeping just isn't worth

1744
01:17:18,510 --> 01:17:26,939
it because we don't have to because

1745
01:17:25,349 --> 01:17:29,969
maybe it's fine to sparsely update that

1746
01:17:26,939 --> 01:17:31,050
array on the graphics card or with the

1747
01:17:29,969 --> 01:17:39,748
lighting system and stuff like that

1748
01:17:31,050 --> 01:17:41,729
right but I'm like unconvinced right

1749
01:17:39,748 --> 01:17:50,538
like I feel like we may want to keep

1750
01:17:41,729 --> 01:17:50,539
that that set fairly tight

1751
01:18:12,448 --> 01:18:20,939
I really think we're gonna want that I

1752
01:18:15,119 --> 01:18:23,340
guess that's all I can say um so I don't

1753
01:18:20,939 --> 01:18:24,960
really know I'm really kind of

1754
01:18:23,340 --> 01:18:28,829
conflicted about that and I don't have a

1755
01:18:24,960 --> 01:18:33,390
particularly good idea about what's

1756
01:18:28,829 --> 01:18:35,039
going on there but you know if I

1757
01:18:33,390 --> 01:18:38,130
actually look at what goes on in the

1758
01:18:35,039 --> 01:18:39,779
world set and if we look at what's

1759
01:18:38,130 --> 01:18:43,279
actually going on you know you can see

1760
01:18:39,779 --> 01:18:46,729
here we've got like a used chunk space

1761
01:18:43,279 --> 01:18:49,319
add to freely sort of thing you can see

1762
01:18:46,729 --> 01:18:51,238
we've got a free list for that and then

1763
01:18:49,319 --> 01:18:54,439
an entities we've got a free list for

1764
01:18:51,238 --> 01:18:54,439
that as well right

1765
01:18:55,409 --> 01:18:59,579
right here where we unpacked our

1766
01:18:58,140 --> 01:19:03,079
entities this is where we actually

1767
01:18:59,579 --> 01:19:06,988
assign those entities to something

1768
01:19:03,079 --> 01:19:08,609
register entity where we're actually

1769
01:19:06,988 --> 01:19:10,589
going through and like packing and

1770
01:19:08,609 --> 01:19:16,529
unpacking them right like we say look if

1771
01:19:10,590 --> 01:19:18,960
this is if this is an entity we need we

1772
01:19:16,529 --> 01:19:21,929
just call this acquire unpacked slot

1773
01:19:18,960 --> 01:19:25,319
right and that just says let's grab the

1774
01:19:21,929 --> 01:19:28,219
entity the next unused entity out of

1775
01:19:25,319 --> 01:19:28,219
that slot right

1776
01:19:31,219 --> 01:19:41,890
and I guess we just do at the head end

1777
01:19:33,710 --> 01:19:41,890
recycle them around

1778
01:19:47,590 --> 01:19:51,279
so looks like we don't even really do a

1779
01:19:49,449 --> 01:19:58,989
free list we just keep it a compact

1780
01:19:51,279 --> 01:20:02,309
array yeah so I'm gonna go ahead and say

1781
01:19:58,989 --> 01:20:02,309
we probably just want a free list there

1782
01:20:03,630 --> 01:20:08,170
so all right it was a tough decision I'm

1783
01:20:06,670 --> 01:20:10,569
not sure if I'm making the right one but

1784
01:20:08,170 --> 01:20:12,430
I think this is what we want I think in

1785
01:20:10,569 --> 01:20:13,719
here what we want to say is look there's

1786
01:20:12,430 --> 01:20:16,500
a certain number of light probes that

1787
01:20:13,720 --> 01:20:18,789
can be active at in a given time and

1788
01:20:16,500 --> 01:20:22,720
that's just a limitation of the graphics

1789
01:20:18,789 --> 01:20:23,260
subsystem and it's gonna tell us what

1790
01:20:22,720 --> 01:20:26,530
that is

1791
01:20:23,260 --> 01:20:27,699
right or we're gonna you know come to

1792
01:20:26,529 --> 01:20:29,829
some agreement with the graphic system

1793
01:20:27,699 --> 01:20:33,639
about what that is and so what we're

1794
01:20:29,829 --> 01:20:36,789
gonna do is we're gonna say okay in here

1795
01:20:33,640 --> 01:20:40,600
we're going to assign some kind of a

1796
01:20:36,789 --> 01:20:49,269
lighting index set we're gonna say like

1797
01:20:40,600 --> 01:20:53,710
light probe slots and light probe slot

1798
01:20:49,270 --> 01:20:55,090
count something like this right and

1799
01:20:53,710 --> 01:20:56,770
maybe the way we'll do this is just

1800
01:20:55,090 --> 01:20:59,409
always the free list so we might

1801
01:20:56,770 --> 01:21:01,570
actually say something where this is

1802
01:20:59,409 --> 01:21:05,349
just initialized your value and then

1803
01:21:01,569 --> 01:21:11,909
this is the set and then we'll say first

1804
01:21:05,350 --> 01:21:11,910
free light probe slot right

1805
01:21:13,078 --> 01:21:19,658
um so yeah what I would say is we'll

1806
01:21:16,958 --> 01:21:22,719
just do it where when we pack stuff up

1807
01:21:19,658 --> 01:21:25,658
we basically free a light probe slot and

1808
01:21:22,719 --> 01:21:28,389
when we unpack stuff we'll use a light

1809
01:21:25,658 --> 01:21:31,238
probe slot and then the light probes are

1810
01:21:28,389 --> 01:21:33,998
really not streamed out so much as

1811
01:21:31,238 --> 01:21:38,198
they're just placed into the system

1812
01:21:33,998 --> 01:21:40,630
period right and when they're placed

1813
01:21:38,198 --> 01:21:42,428
into the system we just set the count to

1814
01:21:40,630 --> 01:21:46,150
the highest count that's actually been

1815
01:21:42,429 --> 01:21:47,109
used and I think that's probably all

1816
01:21:46,149 --> 01:21:49,649
there is to it

1817
01:21:47,109 --> 01:21:49,649
really

1818
01:22:02,179 --> 01:22:09,140
I think that's the best I can do and we

1819
01:22:06,649 --> 01:22:12,019
are going to have to think kind of hard

1820
01:22:09,140 --> 01:22:15,710
about how we want those light probe

1821
01:22:12,020 --> 01:22:17,989
indices to be assigned because we don't

1822
01:22:15,710 --> 01:22:20,869
want only things within the view frustum

1823
01:22:17,988 --> 01:22:23,119
to get a light probe index but we also

1824
01:22:20,869 --> 01:22:25,069
don't want everything outside of it to

1825
01:22:23,119 --> 01:22:28,698
get a light probe index automatically we

1826
01:22:25,069 --> 01:22:30,019
want to have a sort of region bounded

1827
01:22:28,698 --> 01:22:32,899
region which I guess will be our light

1828
01:22:30,020 --> 01:22:35,390
bounds and we'll probably want to pack

1829
01:22:32,899 --> 01:22:39,170
and unpack based on that more so or a

1830
01:22:35,390 --> 01:22:41,000
sign and on the sign based on that so my

1831
01:22:39,170 --> 01:22:42,560
assumption is that it's probably going

1832
01:22:41,000 --> 01:22:44,090
to be something we do on the pass

1833
01:22:42,560 --> 01:22:45,620
through the entities we're probably

1834
01:22:44,090 --> 01:22:47,480
going to assign the light probe indices

1835
01:22:45,619 --> 01:22:50,779
sort of based on that a little bit more

1836
01:22:47,479 --> 01:22:52,189
and we're gonna have our work cut out

1837
01:22:50,779 --> 01:22:53,809
for us here a little bit because we're

1838
01:22:52,189 --> 01:22:56,359
also gonna have to basically stream

1839
01:22:53,810 --> 01:22:59,420
light probe updates that have to do with

1840
01:22:56,359 --> 01:23:03,279
you know here's the here's what we want

1841
01:22:59,420 --> 01:23:05,989
to write out to the updated color values

1842
01:23:03,279 --> 01:23:12,079
for each of these light probe indices

1843
01:23:05,988 --> 01:23:13,729
right so this is gonna be nasty like

1844
01:23:12,079 --> 01:23:14,929
this is gonna be tricky there's there's

1845
01:23:13,729 --> 01:23:16,218
a lot of bookkeeping here and there's a

1846
01:23:14,929 --> 01:23:17,480
lot of things that could go wrong but I

1847
01:23:16,219 --> 01:23:19,520
think we kind of need to do something

1848
01:23:17,479 --> 01:23:21,500
like that because again we need these

1849
01:23:19,520 --> 01:23:24,230
things to be stable over time because if

1850
01:23:21,500 --> 01:23:25,908
we don't keep them stable over time then

1851
01:23:24,229 --> 01:23:27,589
we won't ever be able to do a hardware

1852
01:23:25,908 --> 01:23:28,729
implementation and obviously for a ray

1853
01:23:27,590 --> 01:23:30,319
tracer you would definitely want a

1854
01:23:28,729 --> 01:23:33,049
hardware implementation for higher end

1855
01:23:30,319 --> 01:23:36,139
graphics cards because they're they've

1856
01:23:33,050 --> 01:23:40,820
got silicon sitting around designed

1857
01:23:36,140 --> 01:23:43,929
specifically for this right and probably

1858
01:23:40,819 --> 01:23:47,269
will do that increasingly more so right

1859
01:23:43,929 --> 01:23:50,569
um so all right let's take a look at how

1860
01:23:47,270 --> 01:23:54,170
that would work taking this into account

1861
01:23:50,569 --> 01:23:57,408
so what we need to do now is say in here

1862
01:23:54,170 --> 01:23:59,239
where we've got the discard set we kind

1863
01:23:57,408 --> 01:24:04,819
of want to say in here that you get

1864
01:23:59,238 --> 01:24:07,069
assigned a light probe index this value

1865
01:24:04,819 --> 01:24:09,590
will be meaningless if this thing isn't

1866
01:24:07,069 --> 01:24:12,130
a light probe but if it is a light probe

1867
01:24:09,590 --> 01:24:14,929
it will get a valid light probe index

1868
01:24:12,130 --> 01:24:15,979
when it gets unpacked and it will get it

1869
01:24:14,929 --> 01:24:18,408
through this

1870
01:24:15,979 --> 01:24:23,119
so if we look at how the world's assigns

1871
01:24:18,408 --> 01:24:28,339
things what it needs to do here is when

1872
01:24:23,118 --> 01:24:30,529
we actually create the world so where is

1873
01:24:28,340 --> 01:24:32,748
that there it is in the create worlds

1874
01:24:30,529 --> 01:24:39,340
call we're going to need to do a thing

1875
01:24:32,748 --> 01:24:44,809
where we say the light probe slots and

1876
01:24:39,340 --> 01:24:47,150
light probe slot counts these have to be

1877
01:24:44,809 --> 01:24:50,630
assigned however we wish to assign them

1878
01:24:47,149 --> 01:24:53,268
and we need to put an upper bound on how

1879
01:24:50,630 --> 01:24:55,190
many of them we will ever choose to

1880
01:24:53,269 --> 01:24:57,019
assign and in order to do that we

1881
01:24:55,189 --> 01:25:00,649
probably need someone to tell us

1882
01:24:57,019 --> 01:25:04,039
honestly how many of these they want

1883
01:25:00,649 --> 01:25:06,698
so during create worlds what we probably

1884
01:25:04,038 --> 01:25:14,899
want to do here is say look you tell us

1885
01:25:06,698 --> 01:25:20,049
what's the max light probe count we then

1886
01:25:14,899 --> 01:25:20,049
create enough room to store all of that

1887
01:25:21,069 --> 01:25:30,889
and then we initialize the free list to

1888
01:25:27,288 --> 01:25:33,920
just be that everything is free right

1889
01:25:30,889 --> 01:25:39,219
there's nothing taken up yet so what we

1890
01:25:33,920 --> 01:25:39,219
say there is hmm all right

1891
01:25:42,560 --> 01:25:46,970
we're gonna make each of these things

1892
01:25:44,569 --> 01:25:52,309
free so we're going to loop over every

1893
01:25:46,970 --> 01:25:59,199
light probe slot we have and we're going

1894
01:25:52,310 --> 01:26:02,270
to say that the light probe in that slot

1895
01:25:59,199 --> 01:26:07,939
points to like its predecessor let's say

1896
01:26:02,270 --> 01:26:11,660
if we wanted to start by occupying light

1897
01:26:07,939 --> 01:26:15,500
probes lot 0 what I might say is that 0

1898
01:26:11,659 --> 01:26:17,059
should probably be an unused slot so it

1899
01:26:15,500 --> 01:26:22,039
should probably be the case that no one

1900
01:26:17,060 --> 01:26:25,520
can ever fill that slot up right so what

1901
01:26:22,039 --> 01:26:31,579
I would probably say is you know light

1902
01:26:25,520 --> 01:26:34,700
probe slot 0 is gonna be stuffed at 0

1903
01:26:31,579 --> 01:26:37,550
and we're never gonna let that do

1904
01:26:34,699 --> 01:26:40,519
anything else we're gonna say that the

1905
01:26:37,550 --> 01:26:42,970
first free light probes slot is going to

1906
01:26:40,520 --> 01:26:46,250
be 1 so we'll start filling it out there

1907
01:26:42,970 --> 01:26:52,550
and then here what we'll say is well

1908
01:26:46,250 --> 01:26:55,550
let's just go to the end right and let's

1909
01:26:52,550 --> 01:26:58,730
say actually you know what I could do

1910
01:26:55,550 --> 01:27:03,890
well no let's just go in and let's just

1911
01:26:58,729 --> 01:27:06,649
say that each time through here we're

1912
01:27:03,890 --> 01:27:08,210
gonna set it to be equal to whatever the

1913
01:27:06,649 --> 01:27:11,809
next one is so it's just a daisy chain

1914
01:27:08,210 --> 01:27:13,369
so the first 3 1 is 1 and then 1 says an

1915
01:27:11,810 --> 01:27:16,070
extra 1 is 2 and then 2 says next and

1916
01:27:13,369 --> 01:27:17,869
you know so on and so forth we then want

1917
01:27:16,069 --> 01:27:24,109
to get to the end of this and say look

1918
01:27:17,869 --> 01:27:26,449
at the actual end we get to a point

1919
01:27:24,109 --> 01:27:32,059
where there know like you don't get any

1920
01:27:26,449 --> 01:27:34,039
more right you've run out of light

1921
01:27:32,060 --> 01:27:37,190
probes lots to assign so so you know

1922
01:27:34,039 --> 01:27:40,489
game over so I think that's pretty much

1923
01:27:37,189 --> 01:27:45,799
what we want to do there and now we can

1924
01:27:40,489 --> 01:27:47,449
properly assign these as we go now what

1925
01:27:45,800 --> 01:27:50,150
I don't actually know is should this

1926
01:27:47,449 --> 01:27:51,409
live in here or not because one of the

1927
01:27:50,149 --> 01:27:55,449
things that we could contemplate is

1928
01:27:51,409 --> 01:27:55,449
since it doesn't actually matter

1929
01:27:55,520 --> 01:28:00,650
you know maybe we want that to be saying

1930
01:27:58,340 --> 01:28:02,000
that's actually external if you look at

1931
01:28:00,649 --> 01:28:06,039
what happens here you can see that phil

1932
01:28:02,000 --> 01:28:09,500
unpacked entity if we look we call out

1933
01:28:06,039 --> 01:28:14,140
to the game to say a we're gonna use one

1934
01:28:09,500 --> 01:28:17,060
now and similarly in here we kind of

1935
01:28:14,140 --> 01:28:19,369
when we're gonna pack an entity up we

1936
01:28:17,060 --> 01:28:23,390
could have called out there as well so

1937
01:28:19,369 --> 01:28:25,939
when we do fill unpacked entity we could

1938
01:28:23,390 --> 01:28:33,560
alternatively if we wanted to make a

1939
01:28:25,939 --> 01:28:36,529
call out to two external code that maybe

1940
01:28:33,560 --> 01:28:39,140
keeps the lighting information updated

1941
01:28:36,529 --> 01:28:40,670
separately right so I don't know the

1942
01:28:39,140 --> 01:28:42,739
answer to that question but I might say

1943
01:28:40,670 --> 01:28:44,750
that you know just looking at it it kind

1944
01:28:42,738 --> 01:28:48,769
of feels like maybe that is what we want

1945
01:28:44,750 --> 01:28:52,460
to do right and so maybe we just move

1946
01:28:48,770 --> 01:28:53,210
this over to world mode and say well

1947
01:28:52,460 --> 01:28:57,050
yeah

1948
01:28:53,210 --> 01:29:01,279
yeah in that voice

1949
01:28:57,050 --> 01:29:05,079
maybe that stuff goes in here right and

1950
01:29:01,279 --> 01:29:08,599
maybe what actually happens is you know

1951
01:29:05,079 --> 01:29:13,640
when we when we do this sort of fill

1952
01:29:08,600 --> 01:29:15,110
here maybe when we call those things

1953
01:29:13,640 --> 01:29:17,000
that's response to the world mode now

1954
01:29:15,109 --> 01:29:20,420
looking at it the only reason that that

1955
01:29:17,000 --> 01:29:22,010
looks hard to do is because you can kind

1956
01:29:20,420 --> 01:29:23,869
of see that we're not really getting

1957
01:29:22,010 --> 01:29:26,180
that information through here very

1958
01:29:23,869 --> 01:29:29,238
easily so if we look at the simulation

1959
01:29:26,180 --> 01:29:31,940
region you know it knows about the world

1960
01:29:29,238 --> 01:29:37,699
but it doesn't really know anything else

1961
01:29:31,939 --> 01:29:42,199
so it doesn't know like how to get to a

1962
01:29:37,699 --> 01:29:42,738
world mode and we may want to keep it

1963
01:29:42,199 --> 01:29:44,899
that way

1964
01:29:42,738 --> 01:29:48,829
right so maybe I answered my own

1965
01:29:44,899 --> 01:29:52,129
question there you know maybe it's just

1966
01:29:48,829 --> 01:29:56,029
it's not worth the extra complication to

1967
01:29:52,130 --> 01:30:00,560
change for those live so if we were to

1968
01:29:56,029 --> 01:30:02,059
go ahead and implement that in here how

1969
01:30:00,560 --> 01:30:03,800
would we actually make sure that these

1970
01:30:02,060 --> 01:30:07,090
got assigned properly

1971
01:30:03,800 --> 01:30:10,409
and what you can sort of see is

1972
01:30:07,090 --> 01:30:13,690
when we do a choir unpacked entity slot

1973
01:30:10,409 --> 01:30:17,559
you can see it assigning a new element

1974
01:30:13,689 --> 01:30:21,460
here right and so it probably has to

1975
01:30:17,560 --> 01:30:25,350
happen is after you fill the unpacked

1976
01:30:21,460 --> 01:30:29,109
entity like in here and we do register

1977
01:30:25,350 --> 01:30:32,920
that's probably where we would need it

1978
01:30:29,109 --> 01:30:35,289
to show up so when we add the entity in

1979
01:30:32,920 --> 01:30:38,560
the sim region right it's at that point

1980
01:30:35,289 --> 01:30:44,680
is where we would need it to have its

1981
01:30:38,560 --> 01:30:48,180
lighting index assigned as necessary so

1982
01:30:44,680 --> 01:30:51,430
in here we would need to like assign

1983
01:30:48,180 --> 01:30:52,869
indices or something like that and

1984
01:30:51,430 --> 01:30:55,030
that'd be something that we would just

1985
01:30:52,869 --> 01:30:58,149
say all right there's the world there's

1986
01:30:55,029 --> 01:31:03,479
the desk assign the indices please

1987
01:30:58,149 --> 01:31:03,479
and then like where we actually

1988
01:31:09,819 --> 01:31:13,380
where we actually put it away

1989
01:31:20,960 --> 01:31:24,159
I think that's what it would look like

1990
01:31:24,310 --> 01:31:31,850
right so when this thing comes into the

1991
01:31:28,010 --> 01:31:34,579
working set which is down here we would

1992
01:31:31,850 --> 01:31:36,110
assign indices to it when this thing

1993
01:31:34,579 --> 01:31:39,500
goes out of the working set they would

1994
01:31:36,109 --> 01:31:41,569
get removed and the problem I guess we

1995
01:31:39,500 --> 01:31:54,350
would have there is when you add an

1996
01:31:41,569 --> 01:31:58,639
entity so so here's where you create an

1997
01:31:54,350 --> 01:32:00,530
entity right when you created entity if

1998
01:31:58,640 --> 01:32:02,810
it's a light probe it will not get that

1999
01:32:00,529 --> 01:32:04,789
value assigned you know what I mean I

2000
01:32:02,810 --> 01:32:06,800
don't know that we actually care about

2001
01:32:04,789 --> 01:32:08,090
that though because when you create an

2002
01:32:06,800 --> 01:32:10,550
entity you're doing that at world

2003
01:32:08,090 --> 01:32:12,079
creation time and so you don't really

2004
01:32:10,550 --> 01:32:14,360
want to create light probe indices

2005
01:32:12,079 --> 01:32:15,949
anyway light Prebys these are things

2006
01:32:14,359 --> 01:32:22,729
that you really only want to assign as

2007
01:32:15,949 --> 01:32:27,349
necessary and we'll probably want that

2008
01:32:22,729 --> 01:32:28,669
to be a more tightly controlled process

2009
01:32:27,350 --> 01:32:32,060
that doesn't just happen when you create

2010
01:32:28,670 --> 01:32:34,520
an empty anyway may be my guess so if we

2011
01:32:32,060 --> 01:32:39,289
take a look at assign indices here and

2012
01:32:34,520 --> 01:32:41,030
we pass what we need to pass in here we

2013
01:32:39,289 --> 01:32:45,800
would say all right the light probe

2014
01:32:41,029 --> 01:32:47,960
index equals something now in here we

2015
01:32:45,800 --> 01:32:51,170
want to check to see if it is a light

2016
01:32:47,960 --> 01:32:54,579
probe in the first place right otherwise

2017
01:32:51,170 --> 01:32:59,899
we're not going to do it and similarly

2018
01:32:54,579 --> 01:33:02,510
when we remove the indices we're gonna

2019
01:32:59,899 --> 01:33:04,429
Lahti the same thing if it's not a light

2020
01:33:02,510 --> 01:33:06,110
probe then it doesn't participate in

2021
01:33:04,430 --> 01:33:09,950
this process at all and that's the whole

2022
01:33:06,109 --> 01:33:12,880
point of having the separate chain well

2023
01:33:09,949 --> 01:33:12,880
and also to be stable

2024
01:33:13,600 --> 01:33:18,289
so what we want to do here is assign the

2025
01:33:16,279 --> 01:33:20,210
light probe we want an assert that we

2026
01:33:18,289 --> 01:33:23,210
never blow out our limit so we want to

2027
01:33:20,210 --> 01:33:27,380
say here that the first free light probe

2028
01:33:23,210 --> 01:33:29,060
slot is not equal to zero right but then

2029
01:33:27,380 --> 01:33:30,949
assuming that that's okay we can just go

2030
01:33:29,060 --> 01:33:34,450
ahead and actually assign it and then we

2031
01:33:30,949 --> 01:33:38,000
say that the first free light probe slot

2032
01:33:34,449 --> 01:33:51,199
is going to be equal to whatever was in

2033
01:33:38,000 --> 01:33:52,550
that slot so you can see that popping

2034
01:33:51,199 --> 01:33:56,329
that off the free list there so it's

2035
01:33:52,550 --> 01:33:58,340
saying slot 17 right is the next one we

2036
01:33:56,329 --> 01:34:00,260
can use so we're gonna make this one be

2037
01:33:58,340 --> 01:34:03,560
slot 17 and then we're gonna go ahead

2038
01:34:00,260 --> 01:34:05,270
and pull whatever is in slot 17 into the

2039
01:34:03,560 --> 01:34:07,100
new one because it's a free list right

2040
01:34:05,270 --> 01:34:09,530
and then we just want to assert that we

2041
01:34:07,100 --> 01:34:11,450
never ran out our free list because

2042
01:34:09,529 --> 01:34:12,979
we're trying to make sure that we we

2043
01:34:11,449 --> 01:34:15,349
don't ever really want that to happen

2044
01:34:12,979 --> 01:34:17,239
right we want to make sure we never have

2045
01:34:15,350 --> 01:34:18,320
so many light probes it's not possible

2046
01:34:17,239 --> 01:34:20,929
to create a rule with so many light

2047
01:34:18,319 --> 01:34:27,079
probes in the active area that it blows

2048
01:34:20,930 --> 01:34:28,490
out our actual backing storm right well

2049
01:34:27,079 --> 01:34:29,869
I just got a notification from somebody

2050
01:34:28,489 --> 01:34:34,250
says you might want to ban the person

2051
01:34:29,869 --> 01:34:37,449
spamming twitch twitch chat sure I can

2052
01:34:34,250 --> 01:34:37,449
do that let me take a look

2053
01:35:09,130 --> 01:35:14,460
not sure what actually happens there

2054
01:35:16,020 --> 01:35:20,530
what I would say is I'd encourage people

2055
01:35:18,310 --> 01:35:25,840
not to use the twitch chat specifically

2056
01:35:20,529 --> 01:35:28,149
for this reason basically like it's it's

2057
01:35:25,840 --> 01:35:31,779
hot like there's not a lot of account

2058
01:35:28,149 --> 01:35:34,299
validation there and on the discord at

2059
01:35:31,779 --> 01:35:35,829
least I have the ability to set things

2060
01:35:34,300 --> 01:35:37,570
like this person has to have been a

2061
01:35:35,829 --> 01:35:42,579
discord member for a while and things

2062
01:35:37,569 --> 01:35:47,170
like that if that makes sense and so

2063
01:35:42,579 --> 01:35:49,779
like you know that this person who is

2064
01:35:47,170 --> 01:35:51,310
just like totally sucks and is spamming

2065
01:35:49,779 --> 01:35:53,880
our twitch chat which almost never

2066
01:35:51,310 --> 01:36:00,960
happens I have no idea why that happened

2067
01:35:53,880 --> 01:36:04,270
but like I guess what I would say is

2068
01:36:00,960 --> 01:36:05,590
yeah I have very limited ability to deal

2069
01:36:04,270 --> 01:36:07,810
with that sort of stuff on the twitch

2070
01:36:05,590 --> 01:36:12,690
chat because anybody they don't really

2071
01:36:07,810 --> 01:36:17,770
try very hard if that makes sense but

2072
01:36:12,689 --> 01:36:20,379
hopefully that person just looking at it

2073
01:36:17,770 --> 01:36:22,990
like they've violated the twitch Terms

2074
01:36:20,380 --> 01:36:24,369
of Service like multiple times right so

2075
01:36:22,989 --> 01:36:26,019
that person should have just been banned

2076
01:36:24,369 --> 01:36:28,859
from twitch that's really nothing to do

2077
01:36:26,020 --> 01:36:28,860
with our twitch chat

2078
01:36:36,779 --> 01:36:41,279
it's just interesting that people like

2079
01:36:38,369 --> 01:36:43,649
that exist in the world right human

2080
01:36:41,279 --> 01:36:48,869
beings they explore all random possible

2081
01:36:43,649 --> 01:36:50,699
things yeah and the other thing I would

2082
01:36:48,869 --> 01:36:52,019
say is there's four discord we can also

2083
01:36:50,699 --> 01:36:53,609
have a subscribers there is a

2084
01:36:52,020 --> 01:36:56,280
subscribers only just section already

2085
01:36:53,609 --> 01:36:57,659
and if we found that we were getting to

2086
01:36:56,279 --> 01:36:59,069
the point where we needed to be like

2087
01:36:57,659 --> 01:37:04,590
locked down or something we could do

2088
01:36:59,069 --> 01:37:06,119
that too right so anyway looks like you

2089
01:37:04,590 --> 01:37:08,819
guys took care of it though before I got

2090
01:37:06,119 --> 01:37:11,099
there anyway back to what I was doing

2091
01:37:08,819 --> 01:37:13,170
before we had idiots in the twitch chat

2092
01:37:11,100 --> 01:37:15,570
or idiot singular I guess been a while

2093
01:37:13,170 --> 01:37:20,760
since we've had one like a year or more

2094
01:37:15,569 --> 01:37:22,710
I think if we go in here and take a look

2095
01:37:20,760 --> 01:37:25,020
at what we're doing with our indices

2096
01:37:22,710 --> 01:37:29,100
when we assign indices here you can see

2097
01:37:25,020 --> 01:37:31,050
us doing and taking the it off the free

2098
01:37:29,100 --> 01:37:32,579
sort store when we remove indices

2099
01:37:31,050 --> 01:37:35,150
meaning to the opposite process right so

2100
01:37:32,579 --> 01:37:37,319
we need to be able to reclaim this value

2101
01:37:35,149 --> 01:37:40,409
and so what we would do there is say

2102
01:37:37,319 --> 01:37:42,599
alright let's assert that this is not

2103
01:37:40,409 --> 01:37:44,670
equal to zero right so we basically want

2104
01:37:42,600 --> 01:37:46,440
to say that if it was a light probe it

2105
01:37:44,670 --> 01:37:51,260
should have had a lighting value and so

2106
01:37:46,439 --> 01:37:53,549
now we need to remove those indices mmm

2107
01:37:51,260 --> 01:37:56,489
that's not true if was created it would

2108
01:37:53,550 --> 01:37:58,560
have had a zero value there that's not

2109
01:37:56,489 --> 01:38:00,149
actually true so we want to do is say if

2110
01:37:58,560 --> 01:38:05,789
it has a light probe index then we want

2111
01:38:00,149 --> 01:38:09,059
to deal with it right so what we want to

2112
01:38:05,789 --> 01:38:14,640
do there say yeah okay the light probe

2113
01:38:09,060 --> 01:38:16,500
index when we actually go and and see

2114
01:38:14,640 --> 01:38:18,450
that it has something vali assigned to

2115
01:38:16,500 --> 01:38:20,699
it we want to give that back to the

2116
01:38:18,449 --> 01:38:23,909
FreeStore in that case so we want to say

2117
01:38:20,699 --> 01:38:27,539
that whatever the first free light probe

2118
01:38:23,909 --> 01:38:30,750
slot currently is we want to take the

2119
01:38:27,539 --> 01:38:32,850
light probe slots themselves go to the

2120
01:38:30,750 --> 01:38:36,449
place where this light probe index was

2121
01:38:32,850 --> 01:38:39,480
right and set that equal to this one

2122
01:38:36,449 --> 01:38:43,409
so basically chaining on like we would a

2123
01:38:39,479 --> 01:38:45,629
linked list and then we say okay now we

2124
01:38:43,409 --> 01:38:49,380
are the next available one to use the

2125
01:38:45,630 --> 01:38:54,219
one that we just got rid of makes sense

2126
01:38:49,380 --> 01:38:57,789
now unfortunately for us we kind of do

2127
01:38:54,219 --> 01:39:01,350
have another nasty problem here and what

2128
01:38:57,789 --> 01:39:04,000
that is is we don't really have a way of

2129
01:39:01,350 --> 01:39:05,710
telling the graphics card or the

2130
01:39:04,000 --> 01:39:10,448
lighting system that we switched out

2131
01:39:05,710 --> 01:39:15,810
these indices right and that's the part

2132
01:39:10,448 --> 01:39:19,889
that's really kind of a little bit rough

2133
01:39:15,810 --> 01:39:21,910
and we kind of need that to happen and

2134
01:39:19,890 --> 01:39:24,789
what I would say is we don't really want

2135
01:39:21,909 --> 01:39:26,889
it to happen here where we wanted to

2136
01:39:24,789 --> 01:39:29,198
actually happen is for example infill

2137
01:39:26,890 --> 01:39:32,140
impacts entity right you can see this

2138
01:39:29,198 --> 01:39:33,969
code here we would probably want it to

2139
01:39:32,140 --> 01:39:35,770
happen more like in here so when we

2140
01:39:33,969 --> 01:39:38,020
actually fill in unpacked entity and we

2141
01:39:35,770 --> 01:39:39,489
say all right if this thing was a light

2142
01:39:38,020 --> 01:39:41,469
probe we probably want to send down

2143
01:39:39,488 --> 01:39:46,479
something that says hey this light probe

2144
01:39:41,469 --> 01:39:49,930
just got initialized like don't use old

2145
01:39:46,479 --> 01:39:51,429
values for this light probe and the

2146
01:39:49,930 --> 01:39:54,010
natural way to do that would we push

2147
01:39:51,430 --> 01:39:55,119
something into the lighting solution but

2148
01:39:54,010 --> 01:39:58,510
what you can see is we don't actually

2149
01:39:55,119 --> 01:40:00,969
have that here and that makes things

2150
01:39:58,510 --> 01:40:03,640
pretty tricky for us but what we can do

2151
01:40:00,969 --> 01:40:07,060
is do something a little bit crappy for

2152
01:40:03,640 --> 01:40:09,850
now and just say that our MD has some

2153
01:40:07,060 --> 01:40:11,500
information in it right that says in

2154
01:40:09,850 --> 01:40:13,739
additional light probe index that will

2155
01:40:11,500 --> 01:40:17,020
also just for now do a light probe clear

2156
01:40:13,738 --> 01:40:18,849
okay and so what we can do here is say

2157
01:40:17,020 --> 01:40:20,890
when we fill an unpacked entity what we

2158
01:40:18,850 --> 01:40:26,800
can also do is say there's a light probe

2159
01:40:20,890 --> 01:40:31,210
clear if this entities like probe index

2160
01:40:26,800 --> 01:40:33,789
is set right and then that would allow

2161
01:40:31,210 --> 01:40:38,380
us to clear this one when we actually

2162
01:40:33,789 --> 01:40:40,630
see it when we come up to actually do

2163
01:40:38,380 --> 01:40:44,190
whatever it is we're going to do here we

2164
01:40:40,630 --> 01:40:44,190
can also say like

2165
01:40:54,149 --> 01:40:59,349
right um and so what we can do here is

2166
01:40:57,550 --> 01:41:03,480
just make sure that this stuff is fairly

2167
01:40:59,350 --> 01:41:06,579
rigorous and we can just also say that

2168
01:41:03,479 --> 01:41:22,869
when we see a light probe index if we

2169
01:41:06,579 --> 01:41:24,069
also saw a light probe clear and what

2170
01:41:22,869 --> 01:41:26,050
we're trying to do here is say look

2171
01:41:24,069 --> 01:41:28,449
we're storing all of the lighting

2172
01:41:26,050 --> 01:41:31,960
information in a table you know I'm

2173
01:41:28,449 --> 01:41:34,389
saying basically what we want to do is

2174
01:41:31,960 --> 01:41:36,899
we want to make sure that the lighting

2175
01:41:34,390 --> 01:41:41,380
information that's in the table doesn't

2176
01:41:36,899 --> 01:41:43,479
pull some index and say okay there's a

2177
01:41:41,380 --> 01:41:46,180
light probe it went out of the active

2178
01:41:43,479 --> 01:41:47,529
set it had a bright light there like it

2179
01:41:46,180 --> 01:41:50,020
was recording a bunch of light that

2180
01:41:47,529 --> 01:41:52,989
really was there it goes out of the

2181
01:41:50,020 --> 01:41:55,810
active set so we reclaim its index now a

2182
01:41:52,989 --> 01:41:58,239
new light comes into the system and it

2183
01:41:55,810 --> 01:42:00,820
gets assigned that same index we don't

2184
01:41:58,239 --> 01:42:02,829
want it to think that they'll there was

2185
01:42:00,819 --> 01:42:04,929
that bright lighting there right it's a

2186
01:42:02,829 --> 01:42:06,819
bug to move the lighting from one place

2187
01:42:04,930 --> 01:42:08,590
to another just because we reused an

2188
01:42:06,819 --> 01:42:09,819
index so what we're gonna want to do

2189
01:42:08,590 --> 01:42:11,890
eventually is have a thing that we

2190
01:42:09,819 --> 01:42:14,500
allows us to say clear the lighting in

2191
01:42:11,890 --> 01:42:16,510
that slot like I know we've got old

2192
01:42:14,500 --> 01:42:18,819
information from the previous frame that

2193
01:42:16,510 --> 01:42:21,190
we blend in don't do it it's like a mask

2194
01:42:18,819 --> 01:42:22,479
to the blend that that knocks it out

2195
01:42:21,189 --> 01:42:25,239
right and so that's just a little

2196
01:42:22,479 --> 01:42:29,739
something we need to do a little bit

2197
01:42:25,239 --> 01:42:35,639
later okay so off we go

2198
01:42:29,739 --> 01:42:35,639
right and and and so on

2199
01:42:48,649 --> 01:42:59,739
I love how people are like spamming our

2200
01:42:52,430 --> 01:42:59,740
discord now unbelievable

2201
01:43:12,890 --> 01:43:16,750
wait how did someone fix that that

2202
01:43:15,199 --> 01:43:19,750
wasn't me

2203
01:43:16,750 --> 01:43:19,750
Wow

2204
01:43:21,810 --> 01:43:24,830
I don't know

2205
01:43:49,609 --> 01:43:56,359
that is super annoying so we may

2206
01:43:51,708 --> 01:43:58,188
actually require if that kind of thing

2207
01:43:56,359 --> 01:44:03,139
keeps up then we may actually require

2208
01:43:58,189 --> 01:44:05,679
people to to do some kind of a

2209
01:44:03,139 --> 01:44:07,909
registration right like I could do that

2210
01:44:05,679 --> 01:44:11,588
it's just very annoying like I'm trying

2211
01:44:07,908 --> 01:44:13,878
to program and people are spamming right

2212
01:44:11,588 --> 01:44:15,260
we almost never have that happening I'm

2213
01:44:13,878 --> 01:44:20,988
not sure why we had it happen today it's

2214
01:44:15,260 --> 01:44:22,998
a good question just pathological stuff

2215
01:44:20,988 --> 01:44:24,558
I suppose fortunately it's pretty easy

2216
01:44:22,998 --> 01:44:26,838
for me to see like with the discard

2217
01:44:24,559 --> 01:44:30,949
discord over on the side like it

2218
01:44:26,838 --> 01:44:33,378
actually works pretty well basically

2219
01:44:30,948 --> 01:44:35,598
like if discord is getting spammed I see

2220
01:44:33,378 --> 01:44:37,038
a little red number going up it's harder

2221
01:44:35,599 --> 01:44:43,029
for me to see if the twitch chat is

2222
01:44:37,038 --> 01:44:49,118
being spamed if that makes sense so

2223
01:44:43,029 --> 01:44:49,118
we'll see but yeah it's pretty hard -

2224
01:44:50,979 --> 01:44:55,458
yeah it's pretty hard pretty hard - to

2225
01:44:54,229 --> 01:44:57,229
deal with the twitch chat I'm not sure I

2226
01:44:55,458 --> 01:44:59,238
super care because twitch doesn't really

2227
01:44:57,229 --> 01:45:03,679
care themselves like twitch could fix

2228
01:44:59,238 --> 01:45:05,478
that pretty easily I mean just to give a

2229
01:45:03,679 --> 01:45:07,429
very simple example like that person

2230
01:45:05,479 --> 01:45:09,530
literally like typed the N word into our

2231
01:45:07,429 --> 01:45:12,800
our chat it would have been pretty

2232
01:45:09,529 --> 01:45:19,158
obvious for twitch you know this stream

2233
01:45:12,800 --> 01:45:22,159
is marked all ages so like if twitch had

2234
01:45:19,158 --> 01:45:25,069
any clue as soon as someone typed in a

2235
01:45:22,158 --> 01:45:28,819
word that was obviously not acceptable

2236
01:45:25,069 --> 01:45:32,958
for all ages um that person would just

2237
01:45:28,819 --> 01:45:35,328
be Auto banned right and I don't really

2238
01:45:32,958 --> 01:45:37,010
know why they don't do stuff like that

2239
01:45:35,328 --> 01:45:39,679
if you have a stream that's marked

2240
01:45:37,010 --> 01:45:42,949
adults and you want to allow free speech

2241
01:45:39,679 --> 01:45:44,449
on it that makes perfect sense so yeah I

2242
01:45:42,948 --> 01:45:46,308
mean at that point you have to have a

2243
01:45:44,448 --> 01:45:50,268
human who knows whether or not something

2244
01:45:46,309 --> 01:45:52,429
was allowed but I don't understand why

2245
01:45:50,269 --> 01:45:54,918
twitch still has situations where people

2246
01:45:52,429 --> 01:45:58,010
are typing words that are obviously not

2247
01:45:54,918 --> 01:46:02,359
like no one would think that that was

2248
01:45:58,010 --> 01:46:05,690
okay on a on a stream nah

2249
01:46:02,359 --> 01:46:07,069
marked for adults right I'm not sure why

2250
01:46:05,689 --> 01:46:09,559
you can still have those kind of

2251
01:46:07,069 --> 01:46:14,238
problems in a twitch chat it kind of

2252
01:46:09,560 --> 01:46:16,940
boggles my mind because it's if you like

2253
01:46:14,238 --> 01:46:20,209
if you can't air it if you can't air it

2254
01:46:16,939 --> 01:46:22,849
on prime-time television then it's not

2255
01:46:20,210 --> 01:46:25,310
okay for you know a twitch channel

2256
01:46:22,850 --> 01:46:27,590
marked all ages so that should be simple

2257
01:46:25,310 --> 01:46:29,300
I agree that it's more complicated if

2258
01:46:27,590 --> 01:46:30,920
you want to talk about what adults can

2259
01:46:29,300 --> 01:46:32,690
say because adults can kind of say

2260
01:46:30,920 --> 01:46:35,480
anything they want to that sort of have

2261
01:46:32,689 --> 01:46:38,599
free speech works but this stream isn't

2262
01:46:35,479 --> 01:46:41,899
marked adults I don't say those words on

2263
01:46:38,600 --> 01:46:45,050
the stream its marked adult right so I

2264
01:46:41,899 --> 01:46:48,379
don't understand why a stream for all

2265
01:46:45,050 --> 01:46:51,139
ages can't have the basic baseline that

2266
01:46:48,380 --> 01:46:53,650
anyone who types in a word on the stream

2267
01:46:51,139 --> 01:46:58,250
but you couldn't broadcast over a

2268
01:46:53,649 --> 01:47:01,698
typical government allowed air wave

2269
01:46:58,250 --> 01:47:03,289
would be allowed here right it just it

2270
01:47:01,698 --> 01:47:05,569
doesn't make a lot of sense it's

2271
01:47:03,289 --> 01:47:08,810
supposed to be a family friendly chat

2272
01:47:05,569 --> 01:47:10,219
that's different fan and all ages chat

2273
01:47:08,810 --> 01:47:10,940
where you can say whatever you want

2274
01:47:10,219 --> 01:47:16,880
right

2275
01:47:10,939 --> 01:47:24,849
I don't know twitch you sure don't make

2276
01:47:16,880 --> 01:47:24,850
it easy on streamers anyway moving on

2277
01:47:24,908 --> 01:47:30,500
like if we actually go back to what I

2278
01:47:27,859 --> 01:47:34,639
was trying to do before you know twitch

2279
01:47:30,500 --> 01:47:38,840
interceded if we take a look at how

2280
01:47:34,639 --> 01:47:41,539
we're using like how we're using our

2281
01:47:38,840 --> 01:47:43,610
light probe assignments what we can see

2282
01:47:41,539 --> 01:47:44,810
here is his light probe wasn't actually

2283
01:47:43,609 --> 01:47:46,849
something that was callable from the

2284
01:47:44,810 --> 01:47:49,159
side here so we're gonna have to just

2285
01:47:46,850 --> 01:47:53,060
define that as a thing that you know

2286
01:47:49,158 --> 01:47:55,399
operates a little bit broader and that's

2287
01:47:53,060 --> 01:47:56,780
fine because you know I'm lighting is a

2288
01:47:55,399 --> 01:47:58,189
very integral process it requires

2289
01:47:56,779 --> 01:48:00,769
observations I don't mind those things

2290
01:47:58,189 --> 01:48:04,039
being coupled a little bit more tightly

2291
01:48:00,770 --> 01:48:06,469
together so that's actually flying as

2292
01:48:04,039 --> 01:48:08,750
far as I'm concerned now when we're

2293
01:48:06,469 --> 01:48:10,550
actually setting up this stuff here and

2294
01:48:08,750 --> 01:48:13,448
we do a create world I don't know how

2295
01:48:10,550 --> 01:48:15,710
many lighting indices I want to signed

2296
01:48:13,448 --> 01:48:15,979
and so what I want to do is I want to

2297
01:48:15,710 --> 01:48:21,560
try

2298
01:48:15,979 --> 01:48:22,699
make that be like related to how many

2299
01:48:21,560 --> 01:48:24,950
things we have in the actual game

2300
01:48:22,699 --> 01:48:28,760
commands so if we take a look at our

2301
01:48:24,949 --> 01:48:31,279
game state right inside here we need

2302
01:48:28,760 --> 01:48:33,739
some way of figuring out when we begin

2303
01:48:31,279 --> 01:48:36,199
like a render frame or whatever that's

2304
01:48:33,738 --> 01:48:38,419
gonna tell us how many lighting things

2305
01:48:36,199 --> 01:48:40,760
we actually can use I need that

2306
01:48:38,420 --> 01:48:42,409
information to sort of be provided to me

2307
01:48:40,760 --> 01:48:44,239
in some way that's convenient

2308
01:48:42,409 --> 01:48:46,880
right because I need those things to be

2309
01:48:44,238 --> 01:48:49,429
stable and I need to pass it down here I

2310
01:48:46,880 --> 01:48:54,260
need to like say how many indices I want

2311
01:48:49,430 --> 01:48:57,500
this thing to work with right and so in

2312
01:48:54,260 --> 01:49:02,090
order to do that what I would need to do

2313
01:48:57,500 --> 01:49:04,189
is get that information out sooner like

2314
01:49:02,090 --> 01:49:05,810
I can't wait just until I've created a

2315
01:49:04,189 --> 01:49:08,929
render group I need that information to

2316
01:49:05,810 --> 01:49:10,730
actually be put in sumer and so if

2317
01:49:08,930 --> 01:49:12,829
you're looking here where we do begin to

2318
01:49:10,729 --> 01:49:14,209
render group we can do you see the the

2319
01:49:12,829 --> 01:49:16,880
red are commands kind of get passed in

2320
01:49:14,210 --> 01:49:19,789
right so if we look at how we're passing

2321
01:49:16,880 --> 01:49:26,090
those in more broadly and I look at

2322
01:49:19,789 --> 01:49:34,220
let's say the world mode right or at

2323
01:49:26,090 --> 01:49:35,539
least I tried to wrong there we go what

2324
01:49:34,220 --> 01:49:37,820
you can see is the render commands get

2325
01:49:35,539 --> 01:49:40,279
passed through here as part of update

2326
01:49:37,819 --> 01:49:49,039
and render world right so if we look at

2327
01:49:40,279 --> 01:49:50,420
where that happens there it is we're

2328
01:49:49,039 --> 01:49:52,640
getting these render commands sent down

2329
01:49:50,420 --> 01:49:54,890
to us as part of the sort of overall

2330
01:49:52,640 --> 01:49:58,100
process here they're getting sent down

2331
01:49:54,890 --> 01:49:59,270
in game update and render and if we look

2332
01:49:58,100 --> 01:50:04,340
at where the render commands actually

2333
01:49:59,270 --> 01:50:06,440
come from you can see that they're

2334
01:50:04,340 --> 01:50:09,470
actually passed in line to this routine

2335
01:50:06,439 --> 01:50:11,479
right and so we should be able to do in

2336
01:50:09,470 --> 01:50:16,760
here where we actually contemplate

2337
01:50:11,479 --> 01:50:17,929
creating the world which actually

2338
01:50:16,760 --> 01:50:22,760
doesn't happen in here right it happens

2339
01:50:17,930 --> 01:50:24,800
in world mode there it is

2340
01:50:22,760 --> 01:50:27,140
when we actually kind of plate creating

2341
01:50:24,800 --> 01:50:28,909
the world that flee world call right

2342
01:50:27,140 --> 01:50:31,100
that's something that we actually have

2343
01:50:28,909 --> 01:50:44,139
to track down and pass something to so I

2344
01:50:31,100 --> 01:50:44,140
wanna bubble it up like so

2345
01:50:53,760 --> 01:50:58,630
and I'm just gonna let the compiler like

2346
01:50:56,500 --> 01:50:59,949
figure out how what the call chain is

2347
01:50:58,630 --> 01:51:04,150
that we actually need to pass this down

2348
01:50:59,949 --> 01:51:05,710
through right so here is the this check

2349
01:51:04,149 --> 01:51:07,299
for meta input right this is the thing

2350
01:51:05,710 --> 01:51:10,090
that allows to actually start playing

2351
01:51:07,300 --> 01:51:12,130
the game here and we need to pass that

2352
01:51:10,090 --> 01:51:17,380
down here this is a piece of information

2353
01:51:12,130 --> 01:51:19,239
that this actually needs right and so I

2354
01:51:17,380 --> 01:51:21,640
guess I could look at this two different

2355
01:51:19,239 --> 01:51:23,050
ways when we look at check for a meta

2356
01:51:21,640 --> 01:51:24,700
input it actually does get it passed

2357
01:51:23,050 --> 01:51:27,039
here so I'm gonna actually just say

2358
01:51:24,699 --> 01:51:34,649
alright render commands gets passed in

2359
01:51:27,039 --> 01:51:34,649
here and then we just get it out of here

2360
01:51:39,779 --> 01:51:47,529
and now we're actually passing it from

2361
01:51:43,149 --> 01:51:56,710
the graphic system so we know that it

2362
01:51:47,529 --> 01:52:00,609
will at least be somewhat correct all

2363
01:51:56,710 --> 01:52:03,520
right so now I think we're good and what

2364
01:52:00,609 --> 01:52:06,189
we would like to do is we'd like to

2365
01:52:03,520 --> 01:52:08,260
actually go ahead and verify that

2366
01:52:06,189 --> 01:52:10,029
you know we're assigning these things

2367
01:52:08,260 --> 01:52:12,250
reasonably what you see here is it looks

2368
01:52:10,029 --> 01:52:14,079
like we've got a slight issue here maybe

2369
01:52:12,250 --> 01:52:18,119
with something where we didn't clear

2370
01:52:14,079 --> 01:52:18,119
something for example let's take a look

2371
01:52:19,470 --> 01:52:24,490
so if we look here what we can see is

2372
01:52:21,819 --> 01:52:26,019
the brain slot type right is what would

2373
01:52:24,489 --> 01:52:27,699
tell us this if we look at what's going

2374
01:52:26,020 --> 01:52:29,860
on to brain ID you can see that there's

2375
01:52:27,699 --> 01:52:30,939
no brain ID assigned this thing and you

2376
01:52:29,859 --> 01:52:33,369
know at the same time it's got a light

2377
01:52:30,939 --> 01:52:35,019
products of 1511 right and that doesn't

2378
01:52:33,369 --> 01:52:36,099
seem right so now we kind of have to

2379
01:52:35,020 --> 01:52:42,840
figure out okay what did we screw up

2380
01:52:36,100 --> 01:52:45,910
right so let's find out if we go into

2381
01:52:42,840 --> 01:52:48,039
the handmade world code and we look at

2382
01:52:45,909 --> 01:52:50,710
what's going on here what you can see is

2383
01:52:48,039 --> 01:52:53,109
we ask if it's a light probe in both

2384
01:52:50,710 --> 01:52:54,730
cases so in theory we should never

2385
01:52:53,109 --> 01:52:57,009
really be assigning that light probe

2386
01:52:54,729 --> 01:52:59,079
index in a case where we didn't actually

2387
01:52:57,010 --> 01:53:01,420
know that it was correct

2388
01:52:59,079 --> 01:53:02,409
and so I'm not sure exactly where that

2389
01:53:01,420 --> 01:53:04,390
information is

2390
01:53:02,409 --> 01:53:05,859
from but it could be possible that we're

2391
01:53:04,390 --> 01:53:08,110
doing this at the wrong time or

2392
01:53:05,859 --> 01:53:09,639
something else is happening right what I

2393
01:53:08,109 --> 01:53:12,929
would like to do is make sure that PAC

2394
01:53:09,640 --> 01:53:24,940
entity doesn't happen anywhere else

2395
01:53:12,930 --> 01:53:28,420
looks like it does I'm not sure so

2396
01:53:24,939 --> 01:53:29,949
looking at that that makes me wonder if

2397
01:53:28,420 --> 01:53:33,640
I should have really put this into PAC

2398
01:53:29,949 --> 01:53:39,639
entity where else does packing to be

2399
01:53:33,640 --> 01:53:42,210
occur yes so maybe that should just

2400
01:53:39,640 --> 01:53:50,550
happen there so maybe removing disease

2401
01:53:42,210 --> 01:53:56,680
should just be inside PAC entity and

2402
01:53:50,550 --> 01:53:59,199
then assign indices is a kind of

2403
01:53:56,680 --> 01:54:01,060
trickier one right but I think it only

2404
01:53:59,199 --> 01:54:07,449
wants to happen just where fill impact

2405
01:54:01,060 --> 01:54:09,670
entity happens and so we could do is

2406
01:54:07,449 --> 01:54:11,710
just do it in there and pass the world

2407
01:54:09,670 --> 01:54:15,010
in I don't know if that's the right idea

2408
01:54:11,710 --> 01:54:19,329
but I'm getting sort of a inkling that

2409
01:54:15,010 --> 01:54:20,590
maybe it is so maybe that it's something

2410
01:54:19,329 --> 01:54:23,680
that actually only happens there I'm not

2411
01:54:20,590 --> 01:54:25,390
sure but let's go ahead for now and just

2412
01:54:23,680 --> 01:54:27,400
do it like this not sure this would

2413
01:54:25,390 --> 01:54:29,590
really matter so I'm suspecting it

2414
01:54:27,399 --> 01:54:30,699
actually won't but what I'd like to do

2415
01:54:29,590 --> 01:54:32,829
is just start there

2416
01:54:30,699 --> 01:54:35,319
right and then we'll start debugging

2417
01:54:32,829 --> 01:54:36,880
that way I know whenever I pack identity

2418
01:54:35,319 --> 01:54:38,859
it's actually going through the same

2419
01:54:36,880 --> 01:54:40,900
code path and it can't go through two

2420
01:54:38,859 --> 01:54:42,579
different code paths but what we're

2421
01:54:40,899 --> 01:54:43,629
seeing here is when we get into one of

2422
01:54:42,579 --> 01:54:45,579
these things that actually had a light

2423
01:54:43,630 --> 01:54:47,970
probe index assigned for some reason the

2424
01:54:45,579 --> 01:54:50,470
thing is not saying that it's the entity

2425
01:54:47,970 --> 01:54:51,760
that's light probe and so that's a

2426
01:54:50,470 --> 01:54:53,860
little bit confusing and so I'd like to

2427
01:54:51,760 --> 01:54:55,539
do is find out why that happened and

2428
01:54:53,859 --> 01:54:57,759
more specifically I'd like to find out

2429
01:54:55,539 --> 01:55:01,029
if it happens all the time so like when

2430
01:54:57,760 --> 01:55:04,239
we come through here is this like the

2431
01:55:01,029 --> 01:55:07,929
first time we see this that it happens

2432
01:55:04,239 --> 01:55:11,199
no so actually we are assigning light

2433
01:55:07,930 --> 01:55:13,090
probes somewhat correctly right but then

2434
01:55:11,199 --> 01:55:15,550
what happens is at some point we get a

2435
01:55:13,090 --> 01:55:16,000
bug and somebody ends up with one that

2436
01:55:15,550 --> 01:55:17,409
you

2437
01:55:16,000 --> 01:55:20,560
maybe shouldn't have had one or

2438
01:55:17,409 --> 01:55:21,880
something like this right alright so we

2439
01:55:20,560 --> 01:55:23,590
have to figure out what's going on there

2440
01:55:21,880 --> 01:55:25,750
we don't really know first question I

2441
01:55:23,590 --> 01:55:29,289
have is are these things cleared right I

2442
01:55:25,750 --> 01:55:32,170
don't remember what our rule was for how

2443
01:55:29,289 --> 01:55:34,449
entities start out so when we create the

2444
01:55:32,170 --> 01:55:35,380
world do we clear that buffer and I

2445
01:55:34,449 --> 01:55:37,779
don't actually know

2446
01:55:35,380 --> 01:55:42,960
I suspect it's true looks like it's true

2447
01:55:37,779 --> 01:55:44,949
so when we're actually looking Jimmy

2448
01:55:42,960 --> 01:55:46,600
when we're actually looking there at

2449
01:55:44,949 --> 01:55:48,399
unpacked entities it looks like that

2450
01:55:46,600 --> 01:55:51,940
should roughly be working properly so

2451
01:55:48,399 --> 01:55:55,869
I'm not 100% sure why would we ever get

2452
01:55:51,939 --> 01:55:58,210
a case where the light probe index was

2453
01:55:55,869 --> 01:56:00,220
assigned to something but it wasn't a

2454
01:55:58,210 --> 01:56:02,500
light probe because it means that

2455
01:56:00,220 --> 01:56:04,119
someone had to have moved around or done

2456
01:56:02,500 --> 01:56:06,609
something or I don't really know they

2457
01:56:04,119 --> 01:56:11,769
had to do something Squinkie because in

2458
01:56:06,609 --> 01:56:13,869
general we only ever enter things that

2459
01:56:11,770 --> 01:56:17,710
that have to do with the light probe

2460
01:56:13,869 --> 01:56:19,689
index we only ever do anything with

2461
01:56:17,710 --> 01:56:21,609
those when we already have determined

2462
01:56:19,689 --> 01:56:25,210
that this thing is in fact a light probe

2463
01:56:21,609 --> 01:56:27,670
so in pack entity we only actually look

2464
01:56:25,210 --> 01:56:29,050
at that value and clear it to zero if

2465
01:56:27,670 --> 01:56:31,449
it's a light probe what I could do here

2466
01:56:29,050 --> 01:56:33,460
is say you know what a search in this

2467
01:56:31,449 --> 01:56:35,319
case that's the light probe in digital 0

2468
01:56:33,460 --> 01:56:39,060
that gives us one more layer of checking

2469
01:56:35,319 --> 01:56:39,059
in one more place that might catch bugs

2470
01:56:39,420 --> 01:56:44,079
but then in the other case where we're

2471
01:56:41,680 --> 01:56:46,300
actually doing our fill unpacked entity

2472
01:56:44,079 --> 01:56:48,850
here and we then go to do assigned

2473
01:56:46,300 --> 01:56:51,640
indices in that case right the assign

2474
01:56:48,850 --> 01:56:54,370
indices call also only does it here

2475
01:56:51,640 --> 01:56:56,170
right and we should always assert no

2476
01:56:54,369 --> 01:57:00,189
matter what that the entity that we're

2477
01:56:56,170 --> 01:57:04,390
getting should have a light probe index

2478
01:57:00,189 --> 01:57:06,009
of zero at that time and so I think

2479
01:57:04,390 --> 01:57:07,990
that's all good in fact this assertion

2480
01:57:06,010 --> 01:57:10,060
should just happen here meaning by the

2481
01:57:07,989 --> 01:57:11,409
time you're out of this case no matter

2482
01:57:10,060 --> 01:57:13,270
what happens the light probe index

2483
01:57:11,409 --> 01:57:16,119
should be zero right that should just be

2484
01:57:13,270 --> 01:57:17,440
a given so there's a few more asserts I

2485
01:57:16,119 --> 01:57:18,849
don't think those will help I think

2486
01:57:17,439 --> 01:57:21,069
we've got some other but oh no they did

2487
01:57:18,850 --> 01:57:22,480
that's great so here you can see us

2488
01:57:21,069 --> 01:57:23,889
assigning in the Knicks to somebody but

2489
01:57:22,479 --> 01:57:25,989
for some reason the light probe in X is

2490
01:57:23,890 --> 01:57:27,289
already nonzero and that should never

2491
01:57:25,989 --> 01:57:28,789
actually

2492
01:57:27,289 --> 01:57:30,710
and so that creates an interesting

2493
01:57:28,789 --> 01:57:34,840
question of why is that happening like

2494
01:57:30,710 --> 01:57:37,069
how did we get into that position right

2495
01:57:34,840 --> 01:57:38,650
so let's think about that let's think

2496
01:57:37,069 --> 01:57:41,179
about why that's actually happening

2497
01:57:38,649 --> 01:57:43,609
because we should have had a call to

2498
01:57:41,180 --> 01:57:45,350
pack entity there or something that

2499
01:57:43,609 --> 01:57:48,380
should have actually removed this entity

2500
01:57:45,350 --> 01:57:49,820
from the system right and if we do clear

2501
01:57:48,380 --> 01:57:56,930
uncollected entity cash I don't know if

2502
01:57:49,819 --> 01:57:59,719
that ever gets called okay that that

2503
01:57:56,930 --> 01:58:03,560
gets called when we finish the world

2504
01:57:59,720 --> 01:58:05,690
entirely right but when we call it clear

2505
01:58:03,560 --> 01:58:08,210
impact enemy cash we go through every

2506
01:58:05,689 --> 01:58:10,219
entity that exists in the system and we

2507
01:58:08,210 --> 01:58:12,319
pack them all so at the end of that

2508
01:58:10,220 --> 01:58:15,650
every single entity in the entire system

2509
01:58:12,319 --> 01:58:18,109
all of them right should have impact and

2510
01:58:15,649 --> 01:58:20,989
therefore should have had their

2511
01:58:18,109 --> 01:58:22,939
information cleared right that should

2512
01:58:20,989 --> 01:58:31,059
have happened so if I do an assertion

2513
01:58:22,939 --> 01:58:31,059
here and say light probe index well zero

2514
01:58:34,239 --> 01:58:39,409
now if I run I should end up in a

2515
01:58:37,010 --> 01:58:42,470
situation where I know that everything

2516
01:58:39,409 --> 01:58:43,789
started out that way at least right so

2517
01:58:42,470 --> 01:58:45,770
if we take a look at what's happening to

2518
01:58:43,789 --> 01:58:47,300
this entity now and I see like well what

2519
01:58:45,770 --> 01:58:49,130
light probe index does this thing have

2520
01:58:47,300 --> 01:58:52,190
apparently and it's got light probe

2521
01:58:49,130 --> 01:58:54,650
clear set to one as well so what's going

2522
01:58:52,189 --> 01:58:55,609
on here are we why are we assigning in

2523
01:58:54,649 --> 01:58:58,699
the next thing that looks like it

2524
01:58:55,609 --> 01:59:00,710
already had a mix assigned are we

2525
01:58:58,699 --> 01:59:03,979
calling assign indices too frequently

2526
01:59:00,710 --> 01:59:05,930
you know I guess I don't really know

2527
01:59:03,979 --> 01:59:08,659
right but if I look through here and I

2528
01:59:05,930 --> 01:59:11,420
go and I'm saying we were unpacking a

2529
01:59:08,659 --> 01:59:15,979
world chunk in here i acquire a new slot

2530
01:59:11,420 --> 01:59:18,560
and I copy in the entity data right the

2531
01:59:15,979 --> 01:59:21,019
packed entity data that shouldn't touch

2532
01:59:18,560 --> 01:59:23,270
those later values I then do a fill and

2533
01:59:21,020 --> 01:59:27,530
assign indices and I register the entity

2534
01:59:23,270 --> 01:59:28,970
that should be it right so I'm not

2535
01:59:27,529 --> 01:59:31,759
really sure what's going on with that

2536
01:59:28,970 --> 01:59:33,050
particular bug I'm tempted to end it

2537
01:59:31,760 --> 01:59:34,610
there because this debugging could take

2538
01:59:33,050 --> 01:59:40,130
a while this is a bookkeeping sort of

2539
01:59:34,609 --> 01:59:44,929
thing right and I don't really

2540
01:59:40,130 --> 01:59:46,869
know exactly where my bookie bug is so

2541
01:59:44,929 --> 01:59:48,289
we may want to just call it a day and

2542
01:59:46,869 --> 01:59:52,789
start tomorrow

2543
01:59:48,289 --> 01:59:56,350
on this particular bug right if I can

2544
01:59:52,789 --> 01:59:56,350
think of one other place I want to check

2545
02:00:03,158 --> 02:00:21,138
so one question would be deleted if an

2546
02:00:14,719 --> 02:00:22,550
entity gets deleted that's a good

2547
02:00:21,139 --> 02:00:23,810
argument for why it can't be and pack

2548
02:00:22,550 --> 02:00:27,070
entity right because there's two

2549
02:00:23,810 --> 02:00:27,070
separate paths that happened there

2550
02:00:39,579 --> 02:00:59,350
so in here we really do need this part

2551
02:00:59,500 --> 02:01:07,609
and these both do actually want to be

2552
02:01:04,850 --> 02:01:11,780
called very discreetly look very like

2553
02:01:07,609 --> 02:01:13,609
delicately right and so what we want to

2554
02:01:11,779 --> 02:01:15,259
do here is say inside pack entity if

2555
02:01:13,609 --> 02:01:17,059
we're gonna pack vanity then we know we

2556
02:01:15,260 --> 02:01:21,199
need to remove the indices that's

2557
02:01:17,060 --> 02:01:23,860
definitely true right so when we come in

2558
02:01:21,199 --> 02:01:30,679
here we just have to say all right

2559
02:01:23,859 --> 02:01:31,880
remove the indices from the sanity but

2560
02:01:30,680 --> 02:01:36,260
in the case where somebody got deleted

2561
02:01:31,880 --> 02:01:38,480
we also want to do that right and so

2562
02:01:36,260 --> 02:01:40,789
it's gonna do this path but not this

2563
02:01:38,479 --> 02:01:43,219
path in here so we do need two places

2564
02:01:40,789 --> 02:01:46,130
where a sign indices happen sort of or

2565
02:01:43,220 --> 02:01:49,220
rather one place where a sign indices

2566
02:01:46,130 --> 02:01:51,529
happen and two places we're removing two

2567
02:01:49,220 --> 02:01:53,119
C's happen really three because packing

2568
02:01:51,529 --> 02:01:56,210
this entity gets called in two places

2569
02:01:53,119 --> 02:01:57,199
that's fairly complicated right I don't

2570
02:01:56,210 --> 02:01:59,270
think that's actually gonna solve the

2571
02:01:57,199 --> 02:02:00,829
problem necessarily but it was a problem

2572
02:01:59,270 --> 02:02:01,940
so at least we got that one out of the

2573
02:02:00,829 --> 02:02:03,710
way all right

2574
02:02:01,939 --> 02:02:04,909
um because I don't think we're deleting

2575
02:02:03,710 --> 02:02:07,390
any entities right now so I don't think

2576
02:02:04,909 --> 02:02:09,649
that's really relevant so that's the

2577
02:02:07,390 --> 02:02:11,780
situation if we look at what kind of a

2578
02:02:09,649 --> 02:02:14,299
brain slot type this thing had here it's

2579
02:02:11,779 --> 02:02:17,960
just a zero entity so I'm not sure again

2580
02:02:14,300 --> 02:02:19,310
like why it was getting this assignment

2581
02:02:17,960 --> 02:02:22,340
is happening

2582
02:02:19,310 --> 02:02:25,940
I should double check if I set a

2583
02:02:22,340 --> 02:02:31,220
breakpoint there how often does this get

2584
02:02:25,939 --> 02:02:32,629
called so it gets called on every entity

2585
02:02:31,220 --> 02:02:37,180
when it gets unpacked as I would expect

2586
02:02:32,630 --> 02:02:37,180
right in here

2587
02:02:54,350 --> 02:02:58,730
it's kind of interesting that that's

2588
02:02:55,640 --> 02:02:59,150
going backwards down the ID stream but

2589
02:02:58,729 --> 02:03:02,029
there you go

2590
02:02:59,149 --> 02:03:09,439
I guess that's what you'd expect this is

2591
02:03:02,029 --> 02:03:12,189
in the clear probably right oh no it's

2592
02:03:09,439 --> 02:03:12,189
just removing them

2593
02:03:18,270 --> 02:03:26,730
here we are assigning new indices again

2594
02:03:24,039 --> 02:03:26,729
during the unpack

2595
02:03:32,210 --> 02:03:41,930
so we've actually done quite a bit of

2596
02:03:35,800 --> 02:03:44,470
reassignment here right for things that

2597
02:03:41,930 --> 02:03:44,470
are approved

2598
02:04:01,908 --> 02:04:06,879
see I couldn't tell you I'm not sure why

2599
02:04:04,670 --> 02:04:06,880
that's

2600
02:04:13,970 --> 02:04:19,880
there must be something subtle about the

2601
02:04:16,380 --> 02:04:19,880
way that this code was working

2602
02:04:34,260 --> 02:04:37,710
I'm not sure so I think it's gonna take

2603
02:04:36,510 --> 02:04:40,970
a while to debug so I'm gonna go ahead

2604
02:04:37,710 --> 02:04:42,960
and say let's just take care of that

2605
02:04:40,970 --> 02:04:44,760
kind of a little bit further down the

2606
02:04:42,960 --> 02:04:48,689
road so I'm gonna save that as a thing

2607
02:04:44,760 --> 02:04:56,070
for next time for now let me go ahead

2608
02:04:48,689 --> 02:04:57,869
and see what we've got for questions and

2609
02:04:56,069 --> 02:05:06,710
again you can go ahead and use hashtag

2610
02:04:57,869 --> 02:05:06,710
live on the discord

2611
02:05:59,130 --> 02:06:08,079
any questions other than why our

2612
02:06:05,800 --> 02:06:11,100
internet company is so bad at preventing

2613
02:06:08,079 --> 02:06:11,100
tons of spamming

2614
02:06:43,800 --> 02:06:47,360
alright looks like no questions

2615
02:06:48,439 --> 02:06:52,579
that keeps it simple all right we will

2616
02:06:50,960 --> 02:06:54,230
debug that tomorrow and then we will

2617
02:06:52,579 --> 02:06:56,238
move on to actually drawing the lighting

2618
02:06:54,229 --> 02:07:02,059
because then we will have stuff to

2619
02:06:56,238 --> 02:07:04,039
submit and that'll be our first that

2620
02:07:02,060 --> 02:07:07,420
will be our sort of first foray into the

2621
02:07:04,039 --> 02:07:12,109
lighting off topic how do you paralyze

2622
02:07:07,420 --> 02:07:14,869
hash functions you use a Merkel tree I

2623
02:07:12,109 --> 02:07:18,439
mean you can't you can't parallel eyes

2624
02:07:14,869 --> 02:07:19,969
the hash function right the point of a

2625
02:07:18,439 --> 02:07:23,629
hash function is that it is not

2626
02:07:19,969 --> 02:07:29,590
parallelizable and so what you have to

2627
02:07:23,630 --> 02:07:33,079
do is you have to hash your hashes and

2628
02:07:29,590 --> 02:07:41,770
you know usually a Merkel trees that's

2629
02:07:33,079 --> 02:07:45,738
done just so if you take a look here

2630
02:07:41,770 --> 02:07:48,230
this is just the basic idea you want to

2631
02:07:45,738 --> 02:07:51,289
hash all this and you need to paralyze

2632
02:07:48,229 --> 02:07:53,988
it you can't get a hash of all the data

2633
02:07:51,289 --> 02:07:56,329
because the whole point of a hash is

2634
02:07:53,988 --> 02:07:58,908
that the hash depends on all of the data

2635
02:07:56,329 --> 02:08:02,630
and the order in which the data came and

2636
02:07:58,908 --> 02:08:05,420
so you can't really run the same hash

2637
02:08:02,630 --> 02:08:07,909
function parallel because it needs to

2638
02:08:05,420 --> 02:08:09,800
update its state always so what you do

2639
02:08:07,908 --> 02:08:12,439
instead is you break it into blocks you

2640
02:08:09,800 --> 02:08:14,449
hash the blocks and then once you have

2641
02:08:12,439 --> 02:08:17,599
the hash of blocks you hash those

2642
02:08:14,448 --> 02:08:19,879
together right and you can imagine doing

2643
02:08:17,600 --> 02:08:22,130
this in a hierarchical fashion so that

2644
02:08:19,880 --> 02:08:23,779
each time when you hash things you then

2645
02:08:22,130 --> 02:08:25,069
hash the hashes and hash the hashes of

2646
02:08:23,779 --> 02:08:27,889
the hashes and the hashes of the hash of

2647
02:08:25,069 --> 02:08:30,948
the hashes right and if your hash

2648
02:08:27,889 --> 02:08:34,250
function itself is good and has certain

2649
02:08:30,948 --> 02:08:36,198
properties that you would want then you

2650
02:08:34,250 --> 02:08:38,689
know cryptographer people have done the

2651
02:08:36,198 --> 02:08:43,009
work to prove that the Merkel tree can

2652
02:08:38,689 --> 02:08:46,609
only be so bad on top of that meaning

2653
02:08:43,010 --> 02:08:48,710
the amount of hash quality that you lose

2654
02:08:46,609 --> 02:08:52,539
from employing a Merkel tree is not

2655
02:08:48,710 --> 02:08:59,510
arbitrary it's basically something that

2656
02:08:52,539 --> 02:09:01,069
actually you know we know um it's also

2657
02:08:59,510 --> 02:09:02,239
worth noting that it was patented in

2658
02:09:01,069 --> 02:09:03,710
1979 which

2659
02:09:02,238 --> 02:09:07,428
means that if you use a Merkel tree you

2660
02:09:03,710 --> 02:09:08,538
have the nice benefit of not being able

2661
02:09:07,429 --> 02:09:15,319
to be suited for patent infringement

2662
02:09:08,538 --> 02:09:16,488
because the patent has expired right so

2663
02:09:15,319 --> 02:09:17,569
if someone comes to you like you're

2664
02:09:16,488 --> 02:09:19,819
violating this cryptographers you're

2665
02:09:17,569 --> 02:09:21,768
like no I'm not I'm using the 1979

2666
02:09:19,819 --> 02:09:23,448
algorithm by Ralph miracle which is in

2667
02:09:21,769 --> 02:09:27,920
this patent which is expired thank you

2668
02:09:23,448 --> 02:09:30,109
right so that helps some cryptography

2669
02:09:27,920 --> 02:09:32,118
things are still like patent unsure

2670
02:09:30,109 --> 02:09:34,848
right and so sometimes it's nice to have

2671
02:09:32,118 --> 02:09:36,288
something in the old days that was that

2672
02:09:34,849 --> 02:09:37,969
indeed because then you can just go back

2673
02:09:36,288 --> 02:09:40,130
and go well that's the algorithm and so

2674
02:09:37,969 --> 02:09:44,179
I can't be liable because I'm using it

2675
02:09:40,130 --> 02:09:47,719
and it's fired there we go um so anyway

2676
02:09:44,179 --> 02:09:50,389
that's what you normally do a miracle

2677
02:09:47,719 --> 02:09:53,899
tree is how you would normally

2678
02:09:50,389 --> 02:09:55,010
parallelize the hash there's other

2679
02:09:53,899 --> 02:09:59,089
things maybe you might want to know

2680
02:09:55,010 --> 02:10:01,329
about but that was the most common thing

2681
02:09:59,090 --> 02:10:01,328
right

2682
02:10:06,658 --> 02:10:10,208
all right two more questions how does

2683
02:10:08,738 --> 02:10:12,218
the house function like the meow hashish

2684
02:10:10,208 --> 02:10:15,188
mccain development the way we typically

2685
02:10:12,219 --> 02:10:17,918
use it is for asset tracking so the way

2686
02:10:15,189 --> 02:10:21,069
that meow hash is employed typically or

2687
02:10:17,918 --> 02:10:24,729
other functions like it is that you want

2688
02:10:21,069 --> 02:10:28,030
to know when like files or intermediate

2689
02:10:24,729 --> 02:10:30,280
outputs are the same so you've got like

2690
02:10:28,029 --> 02:10:31,988
terabytes and terabytes of assets for

2691
02:10:30,279 --> 02:10:34,029
your game right in a big triple a game

2692
02:10:31,988 --> 02:10:37,178
or something and you're trying to do

2693
02:10:34,029 --> 02:10:38,858
stuff like fingerprint those assets and

2694
02:10:37,179 --> 02:10:40,989
also intermediate versions of those

2695
02:10:38,859 --> 02:10:43,088
assets so you know when they need to be

2696
02:10:40,988 --> 02:10:45,998
rebuilt or when they have changed right

2697
02:10:43,088 --> 02:10:50,139
so they're used for signatures on things

2698
02:10:45,998 --> 02:10:51,458
like assets typically piston miner asks

2699
02:10:50,139 --> 02:10:53,019
this is sort of off topic so beyond the

2700
02:10:51,458 --> 02:10:55,300
guys relative feel regard with remember

2701
02:10:53,019 --> 02:10:57,069
functions their namespace based on the

2702
02:10:55,300 --> 02:10:58,659
type whereas the free functions are all

2703
02:10:57,069 --> 02:11:00,999
in the same namespace unless you specify

2704
02:10:58,658 --> 02:11:02,768
a namespace of course with the compiler

2705
02:11:00,998 --> 02:11:04,269
generates is identical since you don't

2706
02:11:02,769 --> 02:11:06,010
use accessor see those names faces first

2707
02:11:04,269 --> 02:11:08,409
I know do you think this is a problem

2708
02:11:06,010 --> 02:11:11,219
and if so how do you work around it no I

2709
02:11:08,408 --> 02:11:14,918
don't think it's a problem and you can I

2710
02:11:11,219 --> 02:11:15,969
mean handmade hero we've I don't even

2711
02:11:14,918 --> 02:11:17,349
want to know how many functions we have

2712
02:11:15,969 --> 02:11:19,149
but we've got a lot of them and we've

2713
02:11:17,349 --> 02:11:22,139
never had a problem with it so it's just

2714
02:11:19,149 --> 02:11:22,139
not a problem

2715
02:11:26,359 --> 02:11:30,439
okay see I've missed the most of the

2716
02:11:27,859 --> 02:11:33,469
last few streams could you run the

2717
02:11:30,439 --> 02:11:35,049
quickest see where we're at we we run it

2718
02:11:33,470 --> 02:11:37,250
today just take a look back at the vaad

2719
02:11:35,050 --> 02:11:40,869
we've run a bunch today we ran is

2720
02:11:37,250 --> 02:11:40,869
beginning of today's vaad in fact

2721
02:11:52,850 --> 02:11:58,310
regarding the chat in the discord the

2722
02:11:55,729 --> 02:12:02,299
reason we don't have a subscriber only

2723
02:11:58,310 --> 02:12:03,650
chat is because yeah like people don't

2724
02:12:02,300 --> 02:12:06,860
necessarily subscribe on twitch

2725
02:12:03,649 --> 02:12:08,179
sometimes they buy the game and I don't

2726
02:12:06,859 --> 02:12:09,979
necessarily want to encourage people

2727
02:12:08,179 --> 02:12:16,250
specifically to subscribe on twitch

2728
02:12:09,979 --> 02:12:19,039
right in terms of followers only chat

2729
02:12:16,250 --> 02:12:21,738
hey I don't know if twitch has such a

2730
02:12:19,039 --> 02:12:24,408
thing as a followers only chat but even

2731
02:12:21,738 --> 02:12:26,689
if they did I'm not sure what that would

2732
02:12:24,408 --> 02:12:29,359
do because anyone can just follow you

2733
02:12:26,689 --> 02:12:30,738
for free and then unfollow you so if

2734
02:12:29,359 --> 02:12:32,569
they wanted to spam they just follow

2735
02:12:30,738 --> 02:12:34,459
spam you a bunch and then unfollow right

2736
02:12:32,569 --> 02:12:39,559
so I don't think that would actually

2737
02:12:34,460 --> 02:12:41,270
help cut down on the spam it might be

2738
02:12:39,560 --> 02:12:45,170
good for people who want to boost their

2739
02:12:41,270 --> 02:12:46,550
follower numbers right because hey then

2740
02:12:45,170 --> 02:12:48,050
that would force anyone who ever wanted

2741
02:12:46,550 --> 02:12:50,000
type of the chat to follow a stream or

2742
02:12:48,050 --> 02:12:51,529
something but I don't know that would

2743
02:12:50,000 --> 02:12:52,819
actually help you with spammers because

2744
02:12:51,529 --> 02:12:54,559
why wouldn't spammer just follow your

2745
02:12:52,819 --> 02:12:58,369
channel and spam you right they don't

2746
02:12:54,560 --> 02:13:02,330
care so I don't think that really would

2747
02:12:58,369 --> 02:13:05,059
help subscriber only would definitely

2748
02:13:02,329 --> 02:13:07,519
help cut down on spam but then again

2749
02:13:05,060 --> 02:13:09,590
yeah like that might be too restrictive

2750
02:13:07,520 --> 02:13:12,050
because a lot of people probably don't

2751
02:13:09,590 --> 02:13:13,610
subscribe on twitch I could force the

2752
02:13:12,050 --> 02:13:17,139
mr. scribe on twitch but you know I

2753
02:13:13,609 --> 02:13:17,139
don't know that that's really that

2754
02:13:17,710 --> 02:13:24,800
necessary and you know twitch doesn't

2755
02:13:22,399 --> 02:13:28,099
give us that much money like I'd much

2756
02:13:24,800 --> 02:13:29,929
rather you bought the game than

2757
02:13:28,100 --> 02:13:33,020
subscribed on twitch because Switzerland

2758
02:13:29,929 --> 02:13:35,179
gives us like half of the subscriber

2759
02:13:33,020 --> 02:13:38,120
value whereas the game we get the whole

2760
02:13:35,179 --> 02:13:40,460
thing right so it's like not even in our

2761
02:13:38,119 --> 02:13:42,679
best interest to try to convince you to

2762
02:13:40,460 --> 02:13:43,908
subscribe I put it on there mostly just

2763
02:13:42,679 --> 02:13:46,039
because then we get all that extra

2764
02:13:43,908 --> 02:13:48,460
benefits from twitch like if you have a

2765
02:13:46,039 --> 02:13:53,500
stream that that is a partner channel

2766
02:13:48,460 --> 02:13:53,500
you get a bunch of better services right

2767
02:14:00,988 --> 02:14:05,909
but yeah I just which even allows a

2768
02:14:03,529 --> 02:14:09,199
follower only chat I know they allow

2769
02:14:05,909 --> 02:14:09,199
subscriber only chat

2770
02:14:43,019 --> 02:14:46,409
since we're going off-topic I was

2771
02:14:44,819 --> 02:14:48,029
looking at dpi where UI and rendering it

2772
02:14:46,408 --> 02:14:49,558
seems annoying and win32 I'm usually

2773
02:14:48,029 --> 02:14:50,670
many metres behind trends so it's high

2774
02:14:49,559 --> 02:14:52,019
DPI render good thing to worry about

2775
02:14:50,670 --> 02:14:54,239
these days yes it's definitely thing to

2776
02:14:52,019 --> 02:14:58,889
worry about and no Windows never fix it

2777
02:14:54,238 --> 02:15:00,658
I don't know what goes on over there at

2778
02:14:58,889 --> 02:15:02,248
Microsoft these days I kind of get the

2779
02:15:00,658 --> 02:15:05,308
impression it's like a bunch of like

2780
02:15:02,248 --> 02:15:07,319
babies running around a ball pit at like

2781
02:15:05,309 --> 02:15:07,800
you know a McDonald's playground or

2782
02:15:07,319 --> 02:15:15,328
something

2783
02:15:07,800 --> 02:15:17,279
so they've like updated the high DPI API

2784
02:15:15,328 --> 02:15:19,018
calls like multiple times and they're

2785
02:15:17,279 --> 02:15:21,658
wrong every time they've gone through

2786
02:15:19,019 --> 02:15:24,570
like six in the span of like five years

2787
02:15:21,658 --> 02:15:28,759
and they're all wrong still totally

2788
02:15:24,569 --> 02:15:30,448
busted and so I just don't even know

2789
02:15:28,760 --> 02:15:33,360
what to say about it

2790
02:15:30,448 --> 02:15:34,828
it's a disaster I mean anything that's

2791
02:15:33,359 --> 02:15:36,389
modern is kind of a disaster because

2792
02:15:34,828 --> 02:15:38,340
Microsoft just doesn't even know how to

2793
02:15:36,389 --> 02:15:41,099
make functional api's at all anymore

2794
02:15:38,340 --> 02:15:42,900
it's just it's completely over and so

2795
02:15:41,099 --> 02:15:46,458
it's just it's a disaster it's an

2796
02:15:42,899 --> 02:15:46,458
absolute unmitigated disaster

2797
02:15:52,649 --> 02:15:58,359
all right um on that depressing note I'm

2798
02:15:56,529 --> 02:15:59,979
gonna go ahead and close things down

2799
02:15:58,359 --> 02:16:01,179
thank you for joining me for those sort

2800
02:15:59,979 --> 02:16:02,828
of handmade here uh sometimes recording

2801
02:16:01,179 --> 02:16:05,170
with you as always if you would like to

2802
02:16:02,828 --> 02:16:06,939
follow up stories at home you can always

2803
02:16:05,170 --> 02:16:08,260
go to handmade here at work and

2804
02:16:06,939 --> 02:16:09,519
pre-order the game it comes with a

2805
02:16:08,260 --> 02:16:11,260
source code so you can play around with

2806
02:16:09,520 --> 02:16:12,639
it at home and build it yourself maybe

2807
02:16:11,260 --> 02:16:14,679
you can go find out what that bug was

2808
02:16:12,639 --> 02:16:16,270
today before I have a chance to come

2809
02:16:14,679 --> 02:16:20,349
back and debug it tomorrow that'd be a

2810
02:16:16,270 --> 02:16:23,139
good exercise right I will be back here

2811
02:16:20,349 --> 02:16:25,659
tomorrow same time same place and we

2812
02:16:23,139 --> 02:16:27,460
will fix that bug I hope see you back

2813
02:16:25,658 --> 02:16:29,259
here for that until then have fun

2814
02:16:27,460 --> 02:16:32,459
programming everyone and I will see you

2815
02:16:29,260 --> 02:16:32,460
on the Internet take it easy everybody

