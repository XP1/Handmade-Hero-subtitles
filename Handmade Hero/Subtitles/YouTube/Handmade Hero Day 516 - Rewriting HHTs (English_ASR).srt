1
00:00:01,970 --> 00:00:05,878
hello everyone and welcome to hand made

2
00:00:04,500 --> 00:00:09,289
here oh sure we code a complete game

3
00:00:05,878 --> 00:00:11,910
live on stream we are actually just

4
00:00:09,289 --> 00:00:14,009
yesterday we kind of got everything

5
00:00:11,910 --> 00:00:16,679
working for packing

6
00:00:14,009 --> 00:00:19,380
hij files from hht files so basically we

7
00:00:16,679 --> 00:00:21,929
can build descriptions of all the stuff

8
00:00:19,379 --> 00:00:24,509
that we want to produce in terms of

9
00:00:21,929 --> 00:00:28,500
packed art files and then the game will

10
00:00:24,510 --> 00:00:30,390
just build them for us now we were in

11
00:00:28,500 --> 00:00:32,488
the process of debugging that and what

12
00:00:30,390 --> 00:00:34,558
we found was for some reason all of the

13
00:00:32,488 --> 00:00:37,229
things that we packed weren't coming out

14
00:00:34,558 --> 00:00:38,640
in the actual game and so you know I was

15
00:00:37,229 --> 00:00:42,148
like well maybe they're just not getting

16
00:00:38,640 --> 00:00:43,799
packed properly but we dumped the HHA in

17
00:00:42,149 --> 00:00:45,299
two different ways we actually made a

18
00:00:43,799 --> 00:00:50,099
little thing to extract bitmaps from it

19
00:00:45,299 --> 00:00:53,849
even and what we saw was actually that

20
00:00:50,100 --> 00:00:57,510
it looks all correct or roughly correct

21
00:00:53,850 --> 00:01:00,859
and so we've got a harder to bugging job

22
00:00:57,509 --> 00:01:05,099
today we've got to find out what strange

23
00:01:00,859 --> 00:01:07,500
subtle thing are we missing that's

24
00:01:05,099 --> 00:01:11,368
causing us not to get any results

25
00:01:07,500 --> 00:01:14,250
because unlike an obvious bug where you

26
00:01:11,368 --> 00:01:17,879
just get no images in the HHA or there's

27
00:01:14,250 --> 00:01:20,909
no tags in it or anything like that

28
00:01:17,879 --> 00:01:24,298
we're not having that problem we're

29
00:01:20,909 --> 00:01:27,570
getting actual what look to be correct

30
00:01:24,299 --> 00:01:29,360
results in the HHA file but then we're

31
00:01:27,569 --> 00:01:32,429
just not seeing the graphics on screen

32
00:01:29,359 --> 00:01:34,469
when we try to use those HHA files in

33
00:01:32,430 --> 00:01:38,340
place of the ones that we built using

34
00:01:34,469 --> 00:01:40,769
the previous process and so today we've

35
00:01:38,340 --> 00:01:45,930
got to look in and see what's going on

36
00:01:40,769 --> 00:01:48,449
there and I don't know so just blind

37
00:01:45,930 --> 00:01:51,479
bugging start us out we're going to need

38
00:01:48,450 --> 00:01:54,299
to pick up some clues and then zero in

39
00:01:51,478 --> 00:01:56,609
on the answer now just so everyone

40
00:01:54,299 --> 00:01:58,560
remembers what we did we've got this

41
00:01:56,609 --> 00:02:01,170
idea that you know there's a tags

42
00:01:58,560 --> 00:02:04,019
directory and in here we've got these

43
00:02:01,170 --> 00:02:06,930
tags files that we made called hht or

44
00:02:04,019 --> 00:02:08,159
handmade hero tag and they're just text

45
00:02:06,930 --> 00:02:10,259
files that list everything that should

46
00:02:08,159 --> 00:02:12,598
go into our art packs you can actually

47
00:02:10,258 --> 00:02:13,649
make multiple art packs in a single hht

48
00:02:12,598 --> 00:02:15,268
- I chose not

49
00:02:13,650 --> 00:02:16,980
do that here just so we could test

50
00:02:15,269 --> 00:02:18,719
multiple hht s but you can actually make

51
00:02:16,979 --> 00:02:20,188
a single entity that targets multiple h8

52
00:02:18,719 --> 00:02:23,340
J's and says build all these art files

53
00:02:20,188 --> 00:02:24,930
and it will in any way the point is it

54
00:02:23,340 --> 00:02:27,299
will build stuff into this data

55
00:02:24,930 --> 00:02:29,189
directory and it will build things that

56
00:02:27,299 --> 00:02:31,709
based on the names you tell it so we

57
00:02:29,188 --> 00:02:33,209
said we want a base game that HHA and it

58
00:02:31,709 --> 00:02:34,950
should have everything that this has in

59
00:02:33,209 --> 00:02:37,019
it and gosh they look really similar

60
00:02:34,949 --> 00:02:38,938
sized right so it seems like it kind of

61
00:02:37,019 --> 00:02:40,890
did and then we also have an intro

62
00:02:38,938 --> 00:02:42,780
cutscene one and that puts all of like

63
00:02:40,889 --> 00:02:45,958
sort of those cutscene graphics and the

64
00:02:42,780 --> 00:02:47,370
title screen and so on in there really

65
00:02:45,959 --> 00:02:50,939
kind of looks like it's being built

66
00:02:47,370 --> 00:02:52,530
fairly accurately we made a thing in HHA

67
00:02:50,939 --> 00:02:54,060
edit which is our little command-line

68
00:02:52,530 --> 00:02:56,818
utility we made for inspecting these

69
00:02:54,060 --> 00:02:59,969
files called extract which will take a

70
00:02:56,818 --> 00:03:03,479
file and dump all the contents we tried

71
00:02:59,969 --> 00:03:05,699
that with our with our intro cutscene

72
00:03:03,479 --> 00:03:09,209
and lo and behold everything looks

73
00:03:05,699 --> 00:03:11,250
pretty darn good and so you know we're

74
00:03:09,209 --> 00:03:14,750
kind of a little confused at this point

75
00:03:11,250 --> 00:03:17,549
as to what's going on because again

76
00:03:14,750 --> 00:03:20,400
really looks like the images at least

77
00:03:17,549 --> 00:03:23,819
got through fairly accurately you know

78
00:03:20,400 --> 00:03:25,139
they're not all black or something what

79
00:03:23,818 --> 00:03:27,208
they could be and we could check right

80
00:03:25,139 --> 00:03:29,189
now is it could be that the Alpha is

81
00:03:27,209 --> 00:03:30,569
wrong that's a little bit harder to

82
00:03:29,189 --> 00:03:32,818
check I don't know how well bitmaps

83
00:03:30,568 --> 00:03:34,500
actually save alpha out so but we can

84
00:03:32,818 --> 00:03:37,918
generate separate alpha images if we

85
00:03:34,500 --> 00:03:40,650
need to so let's take a look and see if

86
00:03:37,919 --> 00:03:42,419
maybe the Alpha was screwed up or at

87
00:03:40,650 --> 00:03:45,150
least just make sure that the Alpha is

88
00:03:42,419 --> 00:03:47,340
doing what it should be doing to a

89
00:03:45,150 --> 00:03:51,750
certain extent so you can see here if I

90
00:03:47,340 --> 00:03:54,900
load this in I'm not getting an alpha

91
00:03:51,750 --> 00:03:56,848
channel here and so we don't really know

92
00:03:54,900 --> 00:03:57,569
what that means like let me load this

93
00:03:56,848 --> 00:03:58,738
one as well

94
00:03:57,568 --> 00:04:00,539
like we know that this should have an

95
00:03:58,739 --> 00:04:04,680
alpha channel and you can sort of see as

96
00:04:00,539 --> 00:04:06,209
I loaded up into it into the jimp that

97
00:04:04,680 --> 00:04:09,449
you know I'm not getting that alpha

98
00:04:06,209 --> 00:04:11,009
Channel so the first thing I might

99
00:04:09,449 --> 00:04:14,000
suggest we look at because we don't have

100
00:04:11,009 --> 00:04:17,098
a lot of other ideas and just to again

101
00:04:14,000 --> 00:04:21,418
just to refresh your memory if I do go

102
00:04:17,098 --> 00:04:25,379
back and I you know use tab view here to

103
00:04:21,418 --> 00:04:27,870
open up the dump of the intro art file

104
00:04:25,379 --> 00:04:29,699
because again it could just be that the

105
00:04:27,870 --> 00:04:31,350
the images are getting packed okay but

106
00:04:29,699 --> 00:04:33,209
there's no luck metadata associated with

107
00:04:31,350 --> 00:04:36,960
those images and so it's entirely

108
00:04:33,209 --> 00:04:39,049
incorrect right well if I actually go in

109
00:04:36,959 --> 00:04:42,149
and look at the intro cutscene text file

110
00:04:39,050 --> 00:04:43,829
we looked at this yesterday as well we

111
00:04:42,149 --> 00:04:45,209
can dump all of that stuff out and look

112
00:04:43,829 --> 00:04:47,699
at the individual assets and when we

113
00:04:45,209 --> 00:04:51,000
look at them they actually appear to be

114
00:04:47,699 --> 00:04:53,310
totally good right the basic category is

115
00:04:51,000 --> 00:04:55,230
25 the shadow mixes 1 the layer index is

116
00:04:53,310 --> 00:04:58,019
5 now it's possible that the basic

117
00:04:55,230 --> 00:05:00,180
category of 25 is somehow wrong we

118
00:04:58,019 --> 00:05:03,569
didn't actually go verify what that

119
00:05:00,180 --> 00:05:06,600
should in fact be so if I take a quick

120
00:05:03,569 --> 00:05:10,519
up story if I take a quick look at

121
00:05:06,600 --> 00:05:12,870
handmade he wrote here at the tags file

122
00:05:10,519 --> 00:05:17,609
that lists all those tags here it is

123
00:05:12,870 --> 00:05:19,500
right I can count them out 1 2 3 4 5 6 7

124
00:05:17,610 --> 00:05:21,360
8

125
00:05:19,500 --> 00:05:24,740
oh wait no that's just that's the actual

126
00:05:21,360 --> 00:05:31,710
tag I need the asset version here sorry

127
00:05:24,740 --> 00:05:38,840
so we've got 0 1 2 3 4 5 6 7 8 9 10 11

128
00:05:31,709 --> 00:05:45,359
12 13 14 15 16 17 18 19 21 22 23 24 25

129
00:05:38,839 --> 00:05:48,179
so unfortunately for us again that all

130
00:05:45,360 --> 00:05:52,170
looks correct even the alignment point

131
00:05:48,180 --> 00:05:54,329
looks good which I don't even think is

132
00:05:52,170 --> 00:05:56,970
being used in the cutscenes I can't

133
00:05:54,329 --> 00:06:01,919
remember it well the default one

134
00:05:56,970 --> 00:06:03,840
probably is for the hot spot so just

135
00:06:01,920 --> 00:06:08,370
looking at this right there's literally

136
00:06:03,839 --> 00:06:11,939
nothing I can see that a miss we don't

137
00:06:08,370 --> 00:06:13,620
know about this number because this is

138
00:06:11,939 --> 00:06:16,379
the number that says we're in the file

139
00:06:13,620 --> 00:06:18,449
the bitmap is we don't technically know

140
00:06:16,379 --> 00:06:22,079
if that's correct I mean I suppose it

141
00:06:18,449 --> 00:06:24,089
could be wrong in two ways but when we

142
00:06:22,079 --> 00:06:26,579
made the thing that extracted all of the

143
00:06:24,089 --> 00:06:29,359
files they all came out exactly right so

144
00:06:26,579 --> 00:06:32,879
that number sure does seem to be correct

145
00:06:29,360 --> 00:06:34,410
because when we actually dump the images

146
00:06:32,879 --> 00:06:39,149
that's where we're getting them from and

147
00:06:34,410 --> 00:06:41,100
out they came so it seems like looking

148
00:06:39,149 --> 00:06:43,589
at this I

149
00:06:41,100 --> 00:06:46,620
tell what might be wrong with it now

150
00:06:43,589 --> 00:06:48,839
there's one thing I can do really

151
00:06:46,620 --> 00:06:50,670
quickly just to increase our confidence

152
00:06:48,839 --> 00:06:53,519
level but then like I said I want to

153
00:06:50,670 --> 00:06:54,810
start debugging by looking at the Alpha

154
00:06:53,519 --> 00:06:57,120
because that's the only thing I can

155
00:06:54,810 --> 00:06:59,519
really think of to focus on first and

156
00:06:57,120 --> 00:07:02,819
we'll just have to go from there

157
00:06:59,519 --> 00:07:06,449
if I do an HHS edit dump of the intro

158
00:07:02,819 --> 00:07:09,540
art v2 this is the one that does work so

159
00:07:06,449 --> 00:07:14,360
I just create a text file that says you

160
00:07:09,540 --> 00:07:14,360
know what's in that if I tell view that

161
00:07:17,540 --> 00:07:23,640
what I can do is look at the assets in

162
00:07:20,730 --> 00:07:27,870
there and just see are those any more

163
00:07:23,639 --> 00:07:30,209
likely to be good right like do those

164
00:07:27,870 --> 00:07:30,689
have anything in them that I'm not

165
00:07:30,209 --> 00:07:33,060
seeing

166
00:07:30,689 --> 00:07:35,939
okay so there's something we learned

167
00:07:33,060 --> 00:07:39,329
right right now the basic category for

168
00:07:35,939 --> 00:07:41,370
the East was 19 before and it's 25 that

169
00:07:39,329 --> 00:07:44,370
would have prevented us from finding

170
00:07:41,370 --> 00:07:47,759
them so it could be that that's the only

171
00:07:44,370 --> 00:07:51,590
problem that we've marked these wrong so

172
00:07:47,759 --> 00:07:55,110
if the basic category was originally 19

173
00:07:51,589 --> 00:08:03,199
that would mean that this was 24 23 22

174
00:07:55,110 --> 00:08:03,199
21 20 opening cutscene so there we go

175
00:08:08,980 --> 00:08:17,480
so maybe just maybe the only thing we

176
00:08:14,180 --> 00:08:19,910
did wrong is we didn't label those

177
00:08:17,480 --> 00:08:22,550
things asset opening cutscene and should

178
00:08:19,910 --> 00:08:23,570
have now I don't really want to use this

179
00:08:22,550 --> 00:08:25,160
anymore

180
00:08:23,569 --> 00:08:28,610
I would rather these just be called

181
00:08:25,160 --> 00:08:30,380
plates because that's what they are and

182
00:08:28,610 --> 00:08:32,120
I don't really want to have to label

183
00:08:30,379 --> 00:08:34,789
them as opening cutscene or something

184
00:08:32,120 --> 00:08:36,860
like that so I think what I would prefer

185
00:08:34,789 --> 00:08:38,599
is if I actually just go into cutscene

186
00:08:36,860 --> 00:08:41,930
and I take a look in fact what I could

187
00:08:38,600 --> 00:08:44,240
do is just search for asset opening

188
00:08:41,929 --> 00:08:47,659
cutscene and I just don't want that

189
00:08:44,240 --> 00:08:53,019
anywhere so really this part right here

190
00:08:47,659 --> 00:08:53,019
I just want to be changed to wait right

191
00:08:53,710 --> 00:09:00,740
and that's all I really want to see so

192
00:08:56,779 --> 00:09:02,620
if I take a look back here I see that

193
00:09:00,740 --> 00:09:05,960
it's compiled let me try running that

194
00:09:02,620 --> 00:09:08,060
and let's see if that makes any

195
00:09:05,960 --> 00:09:10,519
difference so I'm gonna go here to

196
00:09:08,059 --> 00:09:14,479
winter to your handmade gonna run the

197
00:09:10,519 --> 00:09:15,889
game and then we're a debug mode here it

198
00:09:14,480 --> 00:09:18,800
looks like and then I'm gonna switch to

199
00:09:15,889 --> 00:09:22,100
the opening cutscene and I'm just gonna

200
00:09:18,799 --> 00:09:24,829
see if we see anything this time and

201
00:09:22,100 --> 00:09:30,080
again we might not but we'll find out a

202
00:09:24,830 --> 00:09:31,730
second okay so it looks like that was

203
00:09:30,080 --> 00:09:34,220
the only problem for our opening

204
00:09:31,730 --> 00:09:36,590
cutscene right you know looking at that

205
00:09:34,220 --> 00:09:37,759
it looks totally accurate the only thing

206
00:09:36,590 --> 00:09:40,269
that looks different from the old one is

207
00:09:37,759 --> 00:09:43,009
it's lower resolution that's intentional

208
00:09:40,269 --> 00:09:44,929
we have a thing now that tries to like

209
00:09:43,009 --> 00:09:47,149
size things down so they're more

210
00:09:44,929 --> 00:09:50,839
appropriate to 1920 by 1080 instead of

211
00:09:47,149 --> 00:09:53,269
being ultra high res again that's just

212
00:09:50,840 --> 00:09:54,769
part of our packing process the nice

213
00:09:53,269 --> 00:09:57,169
part about that is if we ever want to do

214
00:09:54,769 --> 00:09:58,669
like an HD 4k remaster of the game or

215
00:09:57,169 --> 00:10:00,649
something we can always turn those

216
00:09:58,669 --> 00:10:06,469
numbers down so that it doesn't

217
00:10:00,649 --> 00:10:07,850
decompose or doesn't shrink them and

218
00:10:06,470 --> 00:10:10,250
that's intentional right you want your

219
00:10:07,850 --> 00:10:12,050
source art to be fairly high res and

220
00:10:10,250 --> 00:10:14,059
then you want your game pack to scale

221
00:10:12,049 --> 00:10:15,979
those things down as necessary so that

222
00:10:14,059 --> 00:10:19,369
later on if you want to do higher res

223
00:10:15,980 --> 00:10:22,879
versions for some purpose you

224
00:10:19,370 --> 00:10:24,860
right so this all looks fine now and it

225
00:10:22,879 --> 00:10:26,929
looks like our asset Packer is totally

226
00:10:24,860 --> 00:10:30,110
fine for the intro cutscene like that's

227
00:10:26,929 --> 00:10:31,879
what it looks like to me anyway I'm not

228
00:10:30,110 --> 00:10:34,159
seeing any errors here this is all

229
00:10:31,879 --> 00:10:36,200
exactly like what it should be as far as

230
00:10:34,159 --> 00:10:42,829
I can tell anyway right I don't see any

231
00:10:36,200 --> 00:10:50,570
I don't see any issues there looking

232
00:10:42,830 --> 00:10:53,450
good yeah so I mean so I think you know

233
00:10:50,570 --> 00:10:55,730
I don't know but I think we can call

234
00:10:53,450 --> 00:10:58,460
that a success like that seems to have

235
00:10:55,730 --> 00:11:01,670
everything in it that we want to have in

236
00:10:58,460 --> 00:11:04,220
it and furthermore you know in theory

237
00:11:01,669 --> 00:11:06,379
anyway now we also have the fact that

238
00:11:04,220 --> 00:11:11,149
you know that title screen if you

239
00:11:06,379 --> 00:11:13,700
remember we've got in the cutscene thing

240
00:11:11,149 --> 00:11:16,970
there's like a time when well I mean

241
00:11:13,700 --> 00:11:18,920
I'll just show you right right here

242
00:11:16,970 --> 00:11:21,589
there's nothing it's just a blank

243
00:11:18,919 --> 00:11:23,329
because we didn't have a title and at

244
00:11:21,589 --> 00:11:26,120
the moment we could even make a really

245
00:11:23,330 --> 00:11:29,720
simple thing that was that was that

246
00:11:26,120 --> 00:11:33,470
right and so we've got this cutscene ID

247
00:11:29,720 --> 00:11:38,660
thing right and the cutscene ID is just

248
00:11:33,470 --> 00:11:40,160
a thing that goes in here and it says

249
00:11:38,659 --> 00:11:42,980
which one of these scenes were doing and

250
00:11:40,159 --> 00:11:45,289
when you look and you see update and

251
00:11:42,980 --> 00:11:47,720
render title screen it looks like well

252
00:11:45,289 --> 00:11:50,899
actually it looks like we just know that

253
00:11:47,720 --> 00:11:52,339
that's the case because we've set a game

254
00:11:50,899 --> 00:11:53,870
mode differently so I guess we don't

255
00:11:52,339 --> 00:11:55,279
even need to add one of those but anyway

256
00:11:53,870 --> 00:11:57,440
when we do update and render a title

257
00:11:55,278 --> 00:11:59,269
screen you can see here that we do a

258
00:11:57,440 --> 00:12:01,010
begin render group and an end render

259
00:11:59,269 --> 00:12:06,110
group and then a begin render group and

260
00:12:01,009 --> 00:12:09,169
render group right and we don't actually

261
00:12:06,110 --> 00:12:13,700
render anything into here as far as I

262
00:12:09,169 --> 00:12:16,069
can tell right so we don't actually draw

263
00:12:13,700 --> 00:12:18,350
anything other than we clear to this

264
00:12:16,070 --> 00:12:24,709
background color but we don't actually

265
00:12:18,350 --> 00:12:28,190
put anything on to the screen so there

266
00:12:24,708 --> 00:12:30,319
you go I'm not 100% sure why we

267
00:12:28,190 --> 00:12:32,360
beginning and the first render group

268
00:12:30,320 --> 00:12:33,020
like that I think it's because we don't

269
00:12:32,360 --> 00:12:36,860
have any

270
00:12:33,019 --> 00:12:38,750
'we like these are def peeled and these

271
00:12:36,860 --> 00:12:41,899
are maybe not

272
00:12:38,750 --> 00:12:43,460
and so i think this we I think our

273
00:12:41,899 --> 00:12:45,289
render is a little borked and that it

274
00:12:43,460 --> 00:12:47,120
needs to have that past so we kind of

275
00:12:45,289 --> 00:12:48,980
worked around that eventually it would

276
00:12:47,120 --> 00:12:50,360
be nice if we do a final pass in the

277
00:12:48,980 --> 00:12:51,950
render or Sunday to just like clean

278
00:12:50,360 --> 00:12:54,050
everything it'd be nice and not have to

279
00:12:51,950 --> 00:12:55,370
do that because right now that it's a

280
00:12:54,049 --> 00:12:58,219
little bit jank if I believe that's all

281
00:12:55,370 --> 00:12:59,720
it was going on but we don't really have

282
00:12:58,220 --> 00:13:02,540
to care about that at the moment because

283
00:12:59,720 --> 00:13:06,800
really all we need to know is look in

284
00:13:02,539 --> 00:13:08,209
here we just want to say if we're not

285
00:13:06,799 --> 00:13:10,609
gonna switch the intro cutscene because

286
00:13:08,210 --> 00:13:12,830
our time is elapsed let's render one of

287
00:13:10,610 --> 00:13:14,300
these plates right let's render

288
00:13:12,830 --> 00:13:16,790
something for our title screen because

289
00:13:14,299 --> 00:13:18,589
we have one now and so if you're looking

290
00:13:16,789 --> 00:13:20,569
here you can see the way this works

291
00:13:18,590 --> 00:13:22,970
we've got sort of the rendered layered

292
00:13:20,570 --> 00:13:25,690
scene call it does a set camera

293
00:13:22,970 --> 00:13:29,389
transform here to just create you know a

294
00:13:25,690 --> 00:13:31,070
basic camera that can be used draw the

295
00:13:29,389 --> 00:13:32,720
stuff and we probably want to do

296
00:13:31,070 --> 00:13:36,110
something similar although maybe not

297
00:13:32,720 --> 00:13:37,820
exactly this for our own purposes here

298
00:13:36,110 --> 00:13:42,200
so I'm kind of gonna take a look and

299
00:13:37,820 --> 00:13:45,200
just copy that in I think and then you

300
00:13:42,200 --> 00:13:48,710
know when we look in in here we see the

301
00:13:45,200 --> 00:13:51,170
rough way we do our rendering we can we

302
00:13:48,710 --> 00:13:54,620
can replicate that so I'm just gonna go

303
00:13:51,169 --> 00:13:57,649
ahead and into this part of the code I'm

304
00:13:54,620 --> 00:14:00,590
just gonna put some really basic stuff

305
00:13:57,649 --> 00:14:03,590
to handle that right so I'm just gonna

306
00:14:00,590 --> 00:14:06,680
say like alright I don't want that so

307
00:14:03,590 --> 00:14:08,750
for camera start and end I don't really

308
00:14:06,679 --> 00:14:10,129
care about that part either because

309
00:14:08,750 --> 00:14:14,600
we're not really moving the camera

310
00:14:10,129 --> 00:14:16,370
around much so I can kind of just make

311
00:14:14,600 --> 00:14:20,029
the camera placed wherever I want it to

312
00:14:16,370 --> 00:14:23,389
be so for the camera offset here I'm

313
00:14:20,029 --> 00:14:25,789
just gonna say look let's make the

314
00:14:23,389 --> 00:14:28,909
camera just be back a little bit in Z

315
00:14:25,789 --> 00:14:30,349
and we'll just call it a day

316
00:14:28,909 --> 00:14:32,629
right so something like this where we

317
00:14:30,350 --> 00:14:35,629
just move the camera back and you can

318
00:14:32,629 --> 00:14:38,809
see in here like when we have where the

319
00:14:35,629 --> 00:14:42,870
camera should be I believe that stuff is

320
00:14:38,809 --> 00:14:45,659
just all set you can see

321
00:14:42,870 --> 00:14:50,139
in here I believe this is the camera

322
00:14:45,659 --> 00:14:52,149
placement information I think is all

323
00:14:50,139 --> 00:14:54,399
this stuff is so I think we should be

324
00:14:52,149 --> 00:14:56,079
able to just say look let's set the

325
00:14:54,399 --> 00:15:00,370
camera at this fixed location and

326
00:14:56,080 --> 00:15:01,540
that'll be fine we will I guess I don't

327
00:15:00,370 --> 00:15:03,190
know why was a check for render group

328
00:15:01,539 --> 00:15:05,469
because there's a render group always

329
00:15:03,190 --> 00:15:08,830
there so that should be fine

330
00:15:05,470 --> 00:15:11,500
and that's the types of update so right

331
00:15:08,830 --> 00:15:13,690
here we could just say look let's set

332
00:15:11,500 --> 00:15:16,750
the camera offset to what we know it's

333
00:15:13,690 --> 00:15:18,550
gonna be and the camera focal length

334
00:15:16,750 --> 00:15:21,309
will be that looks like we weren't

335
00:15:18,549 --> 00:15:25,120
setting a camera offset directly here I

336
00:15:21,309 --> 00:15:28,359
don't know why so we can just bake that

337
00:15:25,120 --> 00:15:30,340
in here there's that so it looks like

338
00:15:28,360 --> 00:15:32,289
that was probably again that cutscene

339
00:15:30,340 --> 00:15:34,420
stuff done way before our render hat out

340
00:15:32,289 --> 00:15:37,329
much stuff in it so it's probably mostly

341
00:15:34,419 --> 00:15:39,759
that will keep this focal length for now

342
00:15:37,330 --> 00:15:41,650
not a lot of reason not to but anyway

343
00:15:39,759 --> 00:15:44,439
once we set that camera transform we

344
00:15:41,649 --> 00:15:46,870
should now be able to just render like

345
00:15:44,440 --> 00:15:49,480
any bitmap we want into here so we

346
00:15:46,870 --> 00:15:52,600
should be able to say like look let's do

347
00:15:49,480 --> 00:15:56,769
a push bitmap on this and call it a day

348
00:15:52,600 --> 00:15:58,779
right alright so I want to do that I

349
00:15:56,769 --> 00:16:01,629
wanted to call push bitmap so I've got

350
00:15:58,779 --> 00:16:03,069
my render group here and again these

351
00:16:01,629 --> 00:16:05,439
render groups have to probably have an

352
00:16:03,070 --> 00:16:07,720
address pass because they're actually

353
00:16:05,440 --> 00:16:10,570
declared directly in this store in this

354
00:16:07,720 --> 00:16:12,700
function so anyway we need to do a get

355
00:16:10,570 --> 00:16:14,950
bitmap info on this thing we need to

356
00:16:12,700 --> 00:16:17,259
find which image we're going to do the

357
00:16:14,950 --> 00:16:19,330
alignment stuff I don't think we really

358
00:16:17,259 --> 00:16:25,000
care about here because I think that

359
00:16:19,330 --> 00:16:26,050
that should just work do we actually

360
00:16:25,000 --> 00:16:28,600
need to do that

361
00:16:26,049 --> 00:16:32,109
well maybe we do yeah it looks like we

362
00:16:28,600 --> 00:16:33,430
probably do that's hard to say so if we

363
00:16:32,110 --> 00:16:34,990
use that alignment point there we'll

364
00:16:33,429 --> 00:16:36,370
just assume that we need to use that we

365
00:16:34,990 --> 00:16:38,710
don't care about any of this offset P

366
00:16:36,370 --> 00:16:41,019
stuff so I'm just gonna render it at the

367
00:16:38,710 --> 00:16:42,460
origin because we're looking we or at

368
00:16:41,019 --> 00:16:45,189
least I tried to set the camera to just

369
00:16:42,460 --> 00:16:47,560
look at the origin so for now we're just

370
00:16:45,190 --> 00:16:49,150
gonna leave it there as far as the

371
00:16:47,559 --> 00:16:50,409
height concern I have no idea what that

372
00:16:49,149 --> 00:16:54,220
should be we'll play with that a little

373
00:16:50,409 --> 00:16:55,058
bit later but anyway all we really need

374
00:16:54,220 --> 00:17:01,379
to know now

375
00:16:55,058 --> 00:17:04,088
is what should we do in terms of this

376
00:17:01,379 --> 00:17:05,620
layer image how do we find the image

377
00:17:04,088 --> 00:17:09,009
that we want right because we need some

378
00:17:05,619 --> 00:17:10,359
way of grabbing the correct one and so

379
00:17:09,009 --> 00:17:12,610
the way we were doing that back here

380
00:17:10,359 --> 00:17:14,740
right is we create one of these matching

381
00:17:12,609 --> 00:17:18,998
vectors again that system something we

382
00:17:14,740 --> 00:17:21,308
kind of wanted to improve on so we'll

383
00:17:18,999 --> 00:17:23,558
have to you know this code will get

384
00:17:21,308 --> 00:17:25,898
simplified when we make a slightly

385
00:17:23,558 --> 00:17:28,538
better matching system which we've

386
00:17:25,898 --> 00:17:31,209
wanted to do but we just don't quite

387
00:17:28,538 --> 00:17:33,490
know exactly how we're sort of hoping

388
00:17:31,210 --> 00:17:35,288
that now that we've got our Batory tag

389
00:17:33,490 --> 00:17:38,888
files and stuff like that it will become

390
00:17:35,288 --> 00:17:41,200
a little clearer how you want to access

391
00:17:38,888 --> 00:17:43,269
these things but I don't actually know

392
00:17:41,200 --> 00:17:43,960
that that's true so you know we'll find

393
00:17:43,269 --> 00:17:46,899
out as we go

394
00:17:43,960 --> 00:17:48,610
so anyway inside here what we need to do

395
00:17:46,898 --> 00:17:50,739
is when we're getting that bitmap info

396
00:17:48,609 --> 00:17:53,558
we just need a way to access it and you

397
00:17:50,740 --> 00:17:56,259
know this is really all we need to do so

398
00:17:53,558 --> 00:17:59,048
we can say look here's the shot index we

399
00:17:56,259 --> 00:18:08,048
want here's the layer index we want to

400
00:17:59,048 --> 00:18:11,019
do it that way oops and so inside here

401
00:18:08,048 --> 00:18:13,388
under the match vector the shot index

402
00:18:11,019 --> 00:18:16,829
and the layer index can just be set to

403
00:18:13,388 --> 00:18:19,868
the two things that we know are our

404
00:18:16,829 --> 00:18:24,628
title screen actually is so inside the

405
00:18:19,868 --> 00:18:24,628
intro cutscene tags file right in here

406
00:18:25,618 --> 00:18:32,470
we know it's shot index 12 layer index 1

407
00:18:30,028 --> 00:18:36,220
so we can just say look grab that one

408
00:18:32,470 --> 00:18:38,610
for us that's what we want we can then

409
00:18:36,220 --> 00:18:41,490
say well we know it's an asset type

410
00:18:38,609 --> 00:18:45,428
plate right I'm sorry

411
00:18:41,490 --> 00:18:47,950
asset plate and that's all we should

412
00:18:45,429 --> 00:18:49,360
need so the reason I say it's a little

413
00:18:47,950 --> 00:18:50,830
more complicated it should be is you can

414
00:18:49,359 --> 00:18:52,569
kind of see that this should just be

415
00:18:50,829 --> 00:18:54,849
like we'd like this to just be easier to

416
00:18:52,569 --> 00:18:58,210
find stuff it's just a little too much

417
00:18:54,849 --> 00:18:59,558
work it's not bad like you know 10 lines

418
00:18:58,210 --> 00:19:01,569
of code for rendering the title screen

419
00:18:59,558 --> 00:19:02,950
out it's fine because this stuff is

420
00:19:01,569 --> 00:19:05,678
stuff you do anyway you'd have to do

421
00:19:02,950 --> 00:19:07,690
this you know and that need to wrap

422
00:19:05,679 --> 00:19:08,390
around the rendering calls I'm ok with

423
00:19:07,690 --> 00:19:10,340
those

424
00:19:08,390 --> 00:19:11,809
but it says a little it's too verbose

425
00:19:10,339 --> 00:19:13,909
you know it's like I want to get this

426
00:19:11,808 --> 00:19:16,490
thing and so we need to like think we

427
00:19:13,910 --> 00:19:18,529
need to get a little better at how we do

428
00:19:16,490 --> 00:19:22,029
that look those lookups they're just not

429
00:19:18,529 --> 00:19:24,019
they're not the what they should be and

430
00:19:22,029 --> 00:19:26,329
well I don't necessarily know exactly

431
00:19:24,019 --> 00:19:28,460
what will be better I know we we will be

432
00:19:26,329 --> 00:19:30,439
able to do something better once we

433
00:19:28,460 --> 00:19:32,298
really you know set our mind to it and

434
00:19:30,440 --> 00:19:37,700
and focus on that is the next problem to

435
00:19:32,298 --> 00:19:39,980
solve so that's coming let's see what

436
00:19:37,700 --> 00:19:41,870
are we doing now just cleaning up bugs

437
00:19:39,980 --> 00:19:45,200
looks like that's the only one we've got

438
00:19:41,869 --> 00:19:48,769
at the moment so that might be it and

439
00:19:45,200 --> 00:19:52,039
then we should test and see so if I you

440
00:19:48,769 --> 00:19:53,629
know I'm here and I split back so

441
00:19:52,039 --> 00:19:57,109
there's so that worked exactly the way

442
00:19:53,630 --> 00:20:00,380
we'd hoped to small obviously let's see

443
00:19:57,109 --> 00:20:01,939
about making it bigger I don't know how

444
00:20:00,380 --> 00:20:06,049
big it should be let me just change that

445
00:20:01,940 --> 00:20:11,650
to a 5 maybe oops

446
00:20:06,048 --> 00:20:17,569
crap of course the 10 seconds elapsed

447
00:20:11,650 --> 00:20:24,169
there we go um so maybe twice as big as

448
00:20:17,569 --> 00:20:26,119
that I guess I'm not sure maybe you like

449
00:20:24,169 --> 00:20:30,410
that and if this probably needs to be

450
00:20:26,119 --> 00:20:31,129
pushed like up a little bit don't know

451
00:20:30,410 --> 00:20:33,500
how much either

452
00:20:31,130 --> 00:20:35,059
and again oh you know what I'll do you

453
00:20:33,500 --> 00:20:37,569
know I'll do here's what I'll do

454
00:20:35,058 --> 00:20:40,279
let's just comment out the title screen

455
00:20:37,569 --> 00:20:44,659
time update because then I can just run

456
00:20:40,279 --> 00:20:48,019
the game like you know like this where I

457
00:20:44,660 --> 00:20:50,509
just say toggle fullscreen and we'll get

458
00:20:48,019 --> 00:20:52,519
a little for coder window here and then

459
00:20:50,509 --> 00:20:55,429
I guess edit those values directly and

460
00:20:52,519 --> 00:20:58,730
not have to constantly recompile I mean

461
00:20:55,429 --> 00:21:01,460
we relaunch the game so if I if I set

462
00:20:58,730 --> 00:21:03,200
the time step to never update then we

463
00:21:01,460 --> 00:21:04,460
shouldn't it shouldn't ever come off of

464
00:21:03,200 --> 00:21:07,700
the title screen right the title screen

465
00:21:04,460 --> 00:21:10,960
should just stay up always and so then

466
00:21:07,700 --> 00:21:15,230
if I just kind of put my window you know

467
00:21:10,960 --> 00:21:16,970
down here I should now be able to to

468
00:21:15,230 --> 00:21:20,450
look at these values and get them

469
00:21:16,970 --> 00:21:22,069
correct so if I like make it a little

470
00:21:20,450 --> 00:21:25,460
bit larger

471
00:21:22,069 --> 00:21:26,980
and then maybe push it up a little

472
00:21:25,460 --> 00:21:34,579
higher

473
00:21:26,980 --> 00:21:38,029
let's see that's too high that seems

474
00:21:34,579 --> 00:21:41,480
reasonable right now we don't really

475
00:21:38,029 --> 00:21:44,839
know what the background would be here

476
00:21:41,480 --> 00:21:48,440
exactly so I you know at the moment

477
00:21:44,839 --> 00:21:51,649
anyway we probably are just gonna have

478
00:21:48,440 --> 00:21:53,960
to stick with that and so I can at least

479
00:21:51,650 --> 00:21:58,460
though change it so that we're not doing

480
00:21:53,960 --> 00:22:02,360
this nonsense here like I can make a

481
00:21:58,460 --> 00:22:04,670
black background for now so it's like a

482
00:22:02,359 --> 00:22:06,289
little bit more appropriate so this is

483
00:22:04,670 --> 00:22:07,460
kind of our bare title screen and that's

484
00:22:06,289 --> 00:22:10,190
fine

485
00:22:07,460 --> 00:22:12,769
all right so success really happy with

486
00:22:10,190 --> 00:22:15,559
where we're at here so now we can move

487
00:22:12,769 --> 00:22:17,839
on to the next step because now we know

488
00:22:15,559 --> 00:22:19,730
also that our alpha is correct because

489
00:22:17,839 --> 00:22:22,549
you saw the background shining through

490
00:22:19,730 --> 00:22:25,700
there right when I had changed it when

491
00:22:22,549 --> 00:22:28,720
it was orange so we know that that's

492
00:22:25,700 --> 00:22:33,410
correct and so now the question is if I

493
00:22:28,720 --> 00:22:34,970
do put this back time step in if I put

494
00:22:33,410 --> 00:22:37,250
this back in we've got all of that

495
00:22:34,970 --> 00:22:40,490
working okay and so the only thing that

496
00:22:37,250 --> 00:22:43,910
now we don't know if is that correct at

497
00:22:40,490 --> 00:22:45,319
all is the gameplay pack so the stuff

498
00:22:43,910 --> 00:22:47,960
that has the things for the in-game

499
00:22:45,319 --> 00:22:50,029
rendering let's move on to getting that

500
00:22:47,960 --> 00:22:53,509
working I'm gonna go ahead and move

501
00:22:50,029 --> 00:22:57,920
local HHA into the v2 directory so it's

502
00:22:53,509 --> 00:23:01,190
out and so now we only have base game

503
00:22:57,920 --> 00:23:03,500
and intro cutscene I'm gonna delete the

504
00:23:01,190 --> 00:23:06,350
intro cutscene text file because we

505
00:23:03,500 --> 00:23:08,359
don't really need it anymore and we're

506
00:23:06,349 --> 00:23:11,629
gonna take a look at the base game HHA

507
00:23:08,359 --> 00:23:13,669
and see if we can get that working now I

508
00:23:11,630 --> 00:23:15,980
might as well go ahead and dump the base

509
00:23:13,670 --> 00:23:18,470
game HHA as well make sure that the

510
00:23:15,980 --> 00:23:21,860
stuff in there looks kosher so if I do

511
00:23:18,470 --> 00:23:25,490
an HIV edit - dump for the base game HHA

512
00:23:21,859 --> 00:23:33,859
and I say look put it in dump slash base

513
00:23:25,490 --> 00:23:35,519
game to mean thump I meant extract if we

514
00:23:33,859 --> 00:23:37,769
now look into there

515
00:23:35,519 --> 00:23:39,690
what I should see is like yeah like all

516
00:23:37,769 --> 00:23:42,000
the pieces like our cats and our

517
00:23:39,690 --> 00:23:43,170
characters whose names I don't remember

518
00:23:42,000 --> 00:23:49,950
because I named them all really

519
00:23:43,170 --> 00:23:51,779
arbitrarily I know this one's the baby

520
00:23:49,950 --> 00:23:55,319
but the rest of their names one of them

521
00:23:51,779 --> 00:23:59,750
was named Laird I remember that I think

522
00:23:55,319 --> 00:24:02,490
I think her name might have been sunny I

523
00:23:59,750 --> 00:24:04,650
remember most of their names

524
00:24:02,490 --> 00:24:06,960
we'll look them up you know we gave them

525
00:24:04,650 --> 00:24:10,980
names they have names I just don't

526
00:24:06,960 --> 00:24:15,269
remember what they are all right so what

527
00:24:10,980 --> 00:24:17,759
we now have is a verification that those

528
00:24:15,269 --> 00:24:20,789
things got packed in there correctly and

529
00:24:17,759 --> 00:24:23,640
of course we have the same problem you

530
00:24:20,789 --> 00:24:25,379
had before which is I don't necessarily

531
00:24:23,640 --> 00:24:27,630
know if they've got the right tags on

532
00:24:25,380 --> 00:24:29,429
them it turned out our intro did not

533
00:24:27,630 --> 00:24:30,300
have the right tags on it and that was

534
00:24:29,429 --> 00:24:35,759
the problem

535
00:24:30,299 --> 00:24:41,490
oops sorry and so what I would like to

536
00:24:35,759 --> 00:24:44,609
do is just verify that that's the case I

537
00:24:41,490 --> 00:24:48,420
would like to say hey like did the

538
00:24:44,609 --> 00:24:52,969
taggers make sense we're not I don't

539
00:24:48,420 --> 00:24:52,970
know I've got too many tabs open here

540
00:24:53,869 --> 00:25:00,509
you know do these things have tags that

541
00:24:56,880 --> 00:25:05,240
make sense I don't have any idea so we

542
00:25:00,509 --> 00:25:10,049
got a facing Direction dobbs left orphan

543
00:25:05,240 --> 00:25:18,120
and here oh it's weird that dodge left

544
00:25:10,049 --> 00:25:20,210
is the what we called that tag would it

545
00:25:18,119 --> 00:25:23,489
be dodged it be like negative one to one

546
00:25:20,210 --> 00:25:25,529
that's kind of strange so we should

547
00:25:23,490 --> 00:25:28,230
probably change those tags but you know

548
00:25:25,529 --> 00:25:31,710
whatever um so the basic category here

549
00:25:28,230 --> 00:25:34,200
is ten it's an orphan it's the hero I

550
00:25:31,710 --> 00:25:38,429
don't know what category ten is but if

551
00:25:34,200 --> 00:25:40,490
we look back at our file formats

552
00:25:38,429 --> 00:25:43,340
it looks like category ten is there

553
00:25:40,490 --> 00:25:49,309
one two three four five six seven eight

554
00:25:43,339 --> 00:25:51,879
nine ten its body which seems right so I

555
00:25:49,309 --> 00:25:54,759
feel like we are now at the point where

556
00:25:51,880 --> 00:25:58,070
again this should probably be working

557
00:25:54,759 --> 00:25:59,990
not sure what the problem would be based

558
00:25:58,069 --> 00:26:04,039
on looking at this and you can see those

559
00:25:59,990 --> 00:26:07,009
alignment points there the default one

560
00:26:04,039 --> 00:26:08,119
just got added by like it should so I

561
00:26:07,009 --> 00:26:17,240
don't know

562
00:26:08,119 --> 00:26:20,149
so let's progress okay if I go into the

563
00:26:17,240 --> 00:26:22,519
player code so basically the code that

564
00:26:20,150 --> 00:26:26,480
creates a new player right it's like ad

565
00:26:22,519 --> 00:26:28,759
player or something like this I when you

566
00:26:26,480 --> 00:26:32,420
look at how its rendered you can see

567
00:26:28,759 --> 00:26:35,359
what sort of information it was given

568
00:26:32,420 --> 00:26:37,850
here in terms of what should be like

569
00:26:35,359 --> 00:26:40,609
what the tag should be so you can see

570
00:26:37,849 --> 00:26:42,859
that the tag orphan tag spring tag Viva

571
00:26:40,609 --> 00:26:44,029
tag glove tech fingers right those are

572
00:26:42,859 --> 00:26:47,750
the things that were like put on there

573
00:26:44,029 --> 00:26:51,259
to say who this was um so the body I'm

574
00:26:47,750 --> 00:26:52,970
just gonna do hero in hero so when you

575
00:26:51,259 --> 00:26:55,640
add a player it's always a hero at the

576
00:26:52,970 --> 00:26:56,630
moment which probably won't be the case

577
00:26:55,640 --> 00:26:58,430
going forwards because you're probably

578
00:26:56,630 --> 00:27:00,740
able to play is you know a couple

579
00:26:58,430 --> 00:27:02,240
different people are something but for

580
00:27:00,740 --> 00:27:03,680
the moment we're just gonna say like if

581
00:27:02,240 --> 00:27:06,500
it's a player character it's gonna be

582
00:27:03,680 --> 00:27:09,519
the hero I'm gonna go ahead and compile

583
00:27:06,500 --> 00:27:12,259
that and see if we get anything at all

584
00:27:09,519 --> 00:27:16,220
when we actually run the game so here

585
00:27:12,259 --> 00:27:20,420
I'm gonna go run the game and so

586
00:27:16,220 --> 00:27:22,460
honestly it looks like it looks pretty

587
00:27:20,420 --> 00:27:28,210
good and in fact if I if I go ahead and

588
00:27:22,460 --> 00:27:28,210
change this to a release build in fact

589
00:27:28,539 --> 00:27:37,549
so that it's fast I should be able to

590
00:27:34,119 --> 00:27:41,209
just play the game normally and see

591
00:27:37,549 --> 00:27:45,159
everything so it looks pretty good and

592
00:27:41,210 --> 00:27:48,920
what it looks like is the head of

593
00:27:45,160 --> 00:27:51,529
everybody is wrong so if I had to guess

594
00:27:48,920 --> 00:27:53,810
I would say that most of our import

595
00:27:51,529 --> 00:27:58,700
tagging and everything is working

596
00:27:53,809 --> 00:28:01,849
correctly except for heads and heads are

597
00:27:58,700 --> 00:28:04,910
broken right because everything else

598
00:28:01,849 --> 00:28:06,889
seems to work here and you know the

599
00:28:04,910 --> 00:28:08,509
alignment points all got reset which is

600
00:28:06,890 --> 00:28:13,220
exactly what we'd expect because they're

601
00:28:08,509 --> 00:28:15,670
now just they got recreated from this

602
00:28:13,220 --> 00:28:19,069
the hht file which didn't have any set

603
00:28:15,670 --> 00:28:21,920
so again all this stuff looks nice and

604
00:28:19,069 --> 00:28:25,069
clean now whole game is you know

605
00:28:21,920 --> 00:28:28,039
explorable and playable and whatever and

606
00:28:25,069 --> 00:28:30,769
so it just looks like heads are gone so

607
00:28:28,039 --> 00:28:31,940
let's just say that that's probably

608
00:28:30,769 --> 00:28:34,819
what's going on

609
00:28:31,940 --> 00:28:37,940
and focus our debugging there is there

610
00:28:34,819 --> 00:28:43,700
something wrong with specifically the

611
00:28:37,940 --> 00:28:45,470
head import path you know and of course

612
00:28:43,700 --> 00:28:47,660
the fact that that dude's head is

613
00:28:45,470 --> 00:28:53,180
correct doesn't fill me with confidence

614
00:28:47,660 --> 00:28:56,420
because that kind of ruined my theory

615
00:28:53,180 --> 00:28:58,039
thanks dude you ruined my theory we're

616
00:28:56,420 --> 00:28:59,660
gonna have to add combat quickly so I

617
00:28:58,039 --> 00:29:07,250
could punch this dude for ruining my

618
00:28:59,660 --> 00:29:09,050
theory alright so I if I try to figure

619
00:29:07,250 --> 00:29:10,759
out what's going on there what I would

620
00:29:09,049 --> 00:29:14,359
say is you know we've got these pieces

621
00:29:10,759 --> 00:29:17,720
and what we did is we said let's connect

622
00:29:14,359 --> 00:29:22,939
the base of neck to the default here

623
00:29:17,720 --> 00:29:25,309
with this head piece thing I'm gonna go

624
00:29:22,940 --> 00:29:28,070
ahead and say that maybe what happens is

625
00:29:25,309 --> 00:29:30,649
that if you dist don't have an alignment

626
00:29:28,069 --> 00:29:43,639
point set that you need set then you are

627
00:29:30,650 --> 00:29:45,259
just permanently missing right so maybe

628
00:29:43,640 --> 00:29:53,680
what's happening is it's just because

629
00:29:45,259 --> 00:29:53,680
base of neck is wrong that's the problem

630
00:29:57,660 --> 00:30:17,920
so suppose I did this that would say

631
00:30:14,829 --> 00:30:20,109
let's say that the head is just

632
00:30:17,920 --> 00:30:21,400
connected directly to the world exact

633
00:30:20,109 --> 00:30:24,750
like it's just moving around with the

634
00:30:21,400 --> 00:30:27,610
world position of this character and

635
00:30:24,750 --> 00:30:31,419
there's the head okay so I think we

636
00:30:27,609 --> 00:30:33,548
actually don't have any problems now we

637
00:30:31,419 --> 00:30:35,830
just didn't add alignment points and I

638
00:30:33,548 --> 00:30:38,048
had forgotten and/or just never realized

639
00:30:35,829 --> 00:30:39,789
that in our system now that we've

640
00:30:38,048 --> 00:30:43,000
created the snap to the other thing if

641
00:30:39,789 --> 00:30:47,500
you literally can't find the snap point

642
00:30:43,000 --> 00:30:49,779
you just don't appear right so that's

643
00:30:47,500 --> 00:30:53,589
actually fine because I can solve that

644
00:30:49,779 --> 00:30:55,839
problem trivially right we've got the

645
00:30:53,589 --> 00:30:59,798
editor for that all we do is say look

646
00:30:55,839 --> 00:31:04,480
here's the curia body we know we've got

647
00:30:59,798 --> 00:31:07,960
a alignment point thing I need to add

648
00:31:04,480 --> 00:31:09,579
one for the base of neck and then I need

649
00:31:07,960 --> 00:31:11,798
to just put it in the right place right

650
00:31:09,579 --> 00:31:14,379
so I just kind of adjust that to the

651
00:31:11,798 --> 00:31:16,029
right place similarly while I'm at it I

652
00:31:14,380 --> 00:31:18,160
might as well adjust the standing point

653
00:31:16,029 --> 00:31:20,139
to be in the right place too

654
00:31:18,160 --> 00:31:23,558
and by the way since the head is there

655
00:31:20,140 --> 00:31:26,590
now which is this right here I can also

656
00:31:23,558 --> 00:31:30,039
adjust its default alignment point to be

657
00:31:26,589 --> 00:31:33,579
in the right place - right so that's

658
00:31:30,039 --> 00:31:36,039
pretty easy to do and so now we've got

659
00:31:33,579 --> 00:31:37,839
that created of course we have to do it

660
00:31:36,039 --> 00:31:39,849
for all of our sprites right like we

661
00:31:37,839 --> 00:31:41,319
have to actually align all of these

662
00:31:39,849 --> 00:31:43,469
things because we haven't done any of

663
00:31:41,319 --> 00:31:43,470
that yet

664
00:31:43,720 --> 00:31:46,630
and I don't really want to do that yet

665
00:31:45,579 --> 00:31:47,918
and the reason I don't want to do that

666
00:31:46,630 --> 00:31:50,110
yet is because we haven't finished the

667
00:31:47,919 --> 00:31:52,960
thing that lets us save these oops I

668
00:31:50,109 --> 00:31:55,689
need to select a new one here right you

669
00:31:52,960 --> 00:31:57,429
can also see we're picking wrong on one

670
00:31:55,690 --> 00:31:59,590
of these things and that's because we

671
00:31:57,429 --> 00:32:04,750
are not setting the dodge value on this

672
00:31:59,589 --> 00:32:08,589
guy which we should so if I go into the

673
00:32:04,750 --> 00:32:10,589
code for picking you know we've got

674
00:32:08,589 --> 00:32:14,389
these tags

675
00:32:10,589 --> 00:32:17,129
that we set here oops and file formats

676
00:32:14,390 --> 00:32:19,470
we got these tags that we set and one of

677
00:32:17,130 --> 00:32:21,150
them was for dodging I don't know why

678
00:32:19,470 --> 00:32:22,950
it's called dodge left and dodge right

679
00:32:21,150 --> 00:32:26,070
that's just dumb

680
00:32:22,950 --> 00:32:29,759
I'm really surprised we did that that

681
00:32:26,069 --> 00:32:32,279
kind of just seems like a it's just a

682
00:32:29,759 --> 00:32:33,960
really stupid thing that I did so I

683
00:32:32,279 --> 00:32:37,109
don't know why that's happening

684
00:32:33,960 --> 00:32:39,660
I'm gonna go ahead and and nerf one of

685
00:32:37,109 --> 00:32:44,609
these I'm gonna call this one

686
00:32:39,660 --> 00:32:50,759
dodge and I'm gonna say that this one

687
00:32:44,609 --> 00:32:53,369
which is you know a different property

688
00:32:50,759 --> 00:32:57,720
index I'm gonna say that that one is

689
00:32:53,369 --> 00:33:00,589
actually gone so that's goodbye I also

690
00:32:57,720 --> 00:33:03,120
don't really know why these are

691
00:33:00,589 --> 00:33:05,609
capitalized or not capitalized if you

692
00:33:03,119 --> 00:33:08,250
look at what all of these are here like

693
00:33:05,609 --> 00:33:11,309
some of them are caps and some of them

694
00:33:08,250 --> 00:33:13,259
are not caps and I don't really know why

695
00:33:11,309 --> 00:33:15,869
that's happening either

696
00:33:13,259 --> 00:33:19,140
so that just seems a little bit weird

697
00:33:15,869 --> 00:33:19,349
like are we capitalizing these or aren't

698
00:33:19,140 --> 00:33:24,000
we

699
00:33:19,349 --> 00:33:26,339
and I don't actually know so if I look I

700
00:33:24,000 --> 00:33:28,859
want to know do we do a strings are

701
00:33:26,339 --> 00:33:32,039
equal lowercase and it looks like we

702
00:33:28,859 --> 00:33:34,229
don't so it looks like we do as strings

703
00:33:32,039 --> 00:33:37,859
are equal and so if I go into the base

704
00:33:34,230 --> 00:33:39,569
game tag file which is here and it looks

705
00:33:37,859 --> 00:33:41,459
like all of these things are lowercase

706
00:33:39,569 --> 00:33:43,319
and then I come back into the intro

707
00:33:41,460 --> 00:33:45,809
cutscene and like these are like the

708
00:33:43,319 --> 00:33:48,659
opposite thing of that

709
00:33:45,809 --> 00:33:51,210
that just seems bad like all this stuff

710
00:33:48,660 --> 00:33:54,269
just seems wrong I feel like all these

711
00:33:51,210 --> 00:33:57,960
things should have been capitalized and

712
00:33:54,269 --> 00:34:00,720
so on right so I'm not sure why we did

713
00:33:57,960 --> 00:34:02,039
it that way because it's not really part

714
00:34:00,720 --> 00:34:05,789
of the naming convention the way we do

715
00:34:02,039 --> 00:34:08,550
it if I look and see in our strings are

716
00:34:05,789 --> 00:34:11,159
equal we don't have a strings or equal

717
00:34:08,550 --> 00:34:12,930
lowercase but we certainly could add one

718
00:34:11,159 --> 00:34:16,019
of those right that wouldn't be

719
00:34:12,929 --> 00:34:18,059
particularly difficult and so I think

720
00:34:16,019 --> 00:34:19,769
what I'd like to do is just say look the

721
00:34:18,059 --> 00:34:21,480
default here is actually going to be

722
00:34:19,769 --> 00:34:22,840
that everything's capitalized so that's

723
00:34:21,480 --> 00:34:25,809
the same as it is

724
00:34:22,840 --> 00:34:30,250
of the game right and you can see that

725
00:34:25,809 --> 00:34:32,829
sort of happening here so that you know

726
00:34:30,250 --> 00:34:35,050
tag underscore the thing is just the

727
00:34:32,829 --> 00:34:51,159
name right so they're basically unified

728
00:34:35,050 --> 00:35:05,460
in that way and once we've gotten that

729
00:34:51,159 --> 00:35:05,460
set what I'd like to do is say well I

730
00:35:06,960 --> 00:35:11,380
don't know that I want to go through

731
00:35:09,309 --> 00:35:13,299
here and have to update everything to be

732
00:35:11,380 --> 00:35:16,269
capitalized so and since we don't really

733
00:35:13,300 --> 00:35:18,580
have care I think I'm gonna say that in

734
00:35:16,269 --> 00:35:22,119
in here where we do like a line point

735
00:35:18,579 --> 00:35:27,880
from name and so on I'm gonna say that

736
00:35:22,119 --> 00:35:32,099
these can just be case insensitive so

737
00:35:27,880 --> 00:35:32,099
that way we just don't have to care

738
00:35:32,190 --> 00:35:41,380
hopefully that make some sense

739
00:35:34,800 --> 00:35:44,830
okay so let's figure that out if I go

740
00:35:41,380 --> 00:35:48,070
back to strings are equal where we have

741
00:35:44,829 --> 00:35:50,170
these various ways of calling these when

742
00:35:48,070 --> 00:35:53,080
I do the strings are equal in here what

743
00:35:50,170 --> 00:35:58,659
you can see is that it's a string versus

744
00:35:53,079 --> 00:36:03,549
a string so it's always two strings to

745
00:35:58,659 --> 00:36:06,460
you know it's always to actual bound

746
00:36:03,550 --> 00:36:09,400
strings with sizes and so what I want to

747
00:36:06,460 --> 00:36:12,789
do there is just say this one here where

748
00:36:09,400 --> 00:36:15,820
we do strings are equal I'm gonna go

749
00:36:12,789 --> 00:36:19,059
ahead and and make one of those that

750
00:36:15,820 --> 00:36:21,820
just works with lowercase letters so I'm

751
00:36:19,059 --> 00:36:26,079
gonna copy this and say we've also got a

752
00:36:21,820 --> 00:36:28,630
strings are equal lowercase and all

753
00:36:26,079 --> 00:36:30,909
that's gonna do is say like convert to

754
00:36:28,630 --> 00:36:32,950
lowercase I don't know if we've got

755
00:36:30,909 --> 00:36:36,509
anything like that it's really easy to

756
00:36:32,949 --> 00:36:36,509
write so okay to lowercase

757
00:36:39,559 --> 00:36:43,460
and that way we can do case-sensitive

758
00:36:41,090 --> 00:36:45,019
comparisons and I know that this is the

759
00:36:43,460 --> 00:36:47,150
one that I actually want to do for it

760
00:36:45,019 --> 00:36:49,849
because we're doing string to string so

761
00:36:47,150 --> 00:36:52,039
I'm just gonna copy that one in and just

762
00:36:49,849 --> 00:36:55,519
call it like this and so now we've got a

763
00:36:52,039 --> 00:36:59,630
case insensitive version and hopefully

764
00:36:55,519 --> 00:37:02,719
that's a groups I'm in lower case so

765
00:36:59,630 --> 00:37:06,440
hopefully that'll work now and what we

766
00:37:02,719 --> 00:37:09,439
need to do to finish this off is I got

767
00:37:06,440 --> 00:37:12,769
rid of that dodge tag right and I can

768
00:37:09,440 --> 00:37:15,170
actually do this now and rebuild

769
00:37:12,769 --> 00:37:18,320
everything if I want to which is kind of

770
00:37:15,170 --> 00:37:21,139
Awesome so I can actually you know these

771
00:37:18,320 --> 00:37:26,240
are hard-coded integers now so they're

772
00:37:21,139 --> 00:37:27,949
baked into data files but they're only

773
00:37:26,239 --> 00:37:30,189
baked into the shipping data files

774
00:37:27,949 --> 00:37:33,439
they're only baked into the hhas

775
00:37:30,190 --> 00:37:37,130
everything else is matched by name which

776
00:37:33,440 --> 00:37:41,539
means if I just rebuild my hhas

777
00:37:37,130 --> 00:37:43,519
which we can do trivially now I should

778
00:37:41,539 --> 00:37:47,449
be fine and all of those indices will

779
00:37:43,519 --> 00:37:55,610
update right so if I go ahead and do a

780
00:37:47,449 --> 00:37:58,759
delete base game HHA and rebuild it it

781
00:37:55,610 --> 00:38:01,340
should actually have those things set

782
00:37:58,760 --> 00:38:04,220
properly now because dodge left and

783
00:38:01,340 --> 00:38:06,769
dodge right were actually used in here I

784
00:38:04,219 --> 00:38:08,419
have to fix that but what I'll do is

785
00:38:06,769 --> 00:38:09,739
I'll just say look Dodge left is

786
00:38:08,420 --> 00:38:12,619
negative one

787
00:38:09,739 --> 00:38:17,179
Dodge right is one and now we're done

788
00:38:12,619 --> 00:38:19,309
right everyone's happy so now Dodge is

789
00:38:17,179 --> 00:38:22,789
in there and that will prefer a Dodge of

790
00:38:19,309 --> 00:38:24,440
zero if I then set it so let's first

791
00:38:22,789 --> 00:38:27,079
double-check that I didn't break

792
00:38:24,440 --> 00:38:29,990
anything else we'll rebuild again this

793
00:38:27,079 --> 00:38:31,849
this should just running the game should

794
00:38:29,989 --> 00:38:35,329
automatically rebuild at the beginning

795
00:38:31,849 --> 00:38:39,110
here that that base game file so you can

796
00:38:35,329 --> 00:38:42,199
see it getting built right here so as we

797
00:38:39,110 --> 00:38:43,400
build that once that's done of course

798
00:38:42,199 --> 00:38:46,539
you can't really see it getting built

799
00:38:43,400 --> 00:38:48,280
because it more shows up right here

800
00:38:46,539 --> 00:38:51,429
right

801
00:38:48,280 --> 00:38:53,200
there it is and now it's done and so now

802
00:38:51,429 --> 00:38:54,969
everything should be fine and what you

803
00:38:53,199 --> 00:38:56,769
can see again is right the thing that I

804
00:38:54,969 --> 00:38:58,480
was complaining about is that Dodge is

805
00:38:56,769 --> 00:38:59,739
getting picked the reason is getting

806
00:38:58,480 --> 00:39:02,199
picked us because we haven't told the

807
00:38:59,739 --> 00:39:05,189
game to prefer one or the other it just

808
00:39:02,199 --> 00:39:07,389
says hey I don't care which one you use

809
00:39:05,190 --> 00:39:09,220
so what I want to do is I want to make

810
00:39:07,389 --> 00:39:11,759
something in here which says I want to

811
00:39:09,219 --> 00:39:15,279
prefer the zero version of this thing

812
00:39:11,760 --> 00:39:17,380
specifically right so in the asset match

813
00:39:15,280 --> 00:39:19,019
vector in here since we don't really

814
00:39:17,380 --> 00:39:21,849
have the concept of dodging quite yet

815
00:39:19,019 --> 00:39:28,329
what we're based gonna say is look we

816
00:39:21,849 --> 00:39:30,099
want to match the Dodge as well right

817
00:39:28,329 --> 00:39:33,519
that should be matched as much as it can

818
00:39:30,099 --> 00:39:34,989
be and you know maybe it's not as

819
00:39:33,519 --> 00:39:36,400
important as facing direction but if

820
00:39:34,989 --> 00:39:41,319
you've got to to pick from you still

821
00:39:36,400 --> 00:39:44,440
want to pick right and so now at least I

822
00:39:41,320 --> 00:39:46,120
hope we should pick non dodge although

823
00:39:44,440 --> 00:39:50,079
the fact that I'm not actually seeing is

824
00:39:46,119 --> 00:39:51,460
picking on Dodge is not reassuring that

825
00:39:50,079 --> 00:39:57,069
should have done it right because tagged

826
00:39:51,460 --> 00:40:03,179
dodge is 0.5 so it should be preferring

827
00:39:57,070 --> 00:40:03,180
to match the 0 to the 0 I think

828
00:40:20,280 --> 00:40:36,670
why is that not working we may have to

829
00:40:30,280 --> 00:40:38,980
step in there and see so if I make it

830
00:40:36,670 --> 00:40:42,159
extremely heavily weighted to match

831
00:40:38,980 --> 00:40:47,289
Dodge you know this could be because the

832
00:40:42,159 --> 00:40:49,769
way we do the matches is broken not

833
00:40:47,289 --> 00:40:49,769
entirely sure

834
00:40:56,889 --> 00:41:04,920
I don't have a lot of ideas there

835
00:41:02,309 --> 00:41:07,900
because we're specifically saying look

836
00:41:04,920 --> 00:41:09,838
you got a match dodge very strongly and

837
00:41:07,900 --> 00:41:12,999
we're setting dodge equal to zero right

838
00:41:09,838 --> 00:41:14,739
so I'm not sure why we would ever it

839
00:41:12,998 --> 00:41:16,568
would ever prefer one of those now of

840
00:41:14,739 --> 00:41:20,048
course like I said the matching stuff is

841
00:41:16,568 --> 00:41:22,989
kind of broken right now so it could be

842
00:41:20,048 --> 00:41:27,338
that it's just kind of busted and I just

843
00:41:22,989 --> 00:41:29,139
you know don't really know the internals

844
00:41:27,338 --> 00:41:30,278
of the routine and so I'm making some

845
00:41:29,139 --> 00:41:34,690
kind of assumption about what would

846
00:41:30,278 --> 00:41:37,929
happen when I did this not sure but if I

847
00:41:34,690 --> 00:41:42,190
go look so let's suppose I come in here

848
00:41:37,929 --> 00:41:44,169
to the matching routine and we well I

849
00:41:42,190 --> 00:41:48,099
guess I can just jump right to it get

850
00:41:44,170 --> 00:41:50,739
the best match so if we look at the best

851
00:41:48,099 --> 00:41:57,849
match bitmap here or I could get the

852
00:41:50,739 --> 00:41:59,858
best match asset what you can do is you

853
00:41:57,849 --> 00:42:03,548
can look and see how it's working and

854
00:41:59,858 --> 00:42:07,179
again my my assumption seems to hold

855
00:42:03,548 --> 00:42:09,788
here right it's looking at each asset it

856
00:42:07,179 --> 00:42:12,699
says take a look at what the two values

857
00:42:09,789 --> 00:42:16,680
are so in this case they would be 0 and

858
00:42:12,699 --> 00:42:19,538
1.0 or 0 negative 1.0 on those dodges it

859
00:42:16,679 --> 00:42:25,419
takes a look at what the difference is

860
00:42:19,539 --> 00:42:32,109
between the two values the tag range I

861
00:42:25,420 --> 00:42:38,349
don't really know I don't know how the

862
00:42:32,108 --> 00:42:40,568
tag range thing really works the tag

863
00:42:38,349 --> 00:42:45,099
range is just so we can match facing

864
00:42:40,568 --> 00:42:48,509
directions better for periodic things

865
00:42:45,099 --> 00:42:48,509
that's what that's doing

866
00:42:49,768 --> 00:42:55,868
but anyway whichever the minimum diss

867
00:42:52,809 --> 00:42:57,940
whichever the minimum distance is we

868
00:42:55,869 --> 00:43:00,579
look at the yeah the weighted Delta

869
00:42:57,940 --> 00:43:04,809
between that and it gets higher as it

870
00:43:00,579 --> 00:43:09,160
gets closer to 1.0 right so it seems

871
00:43:04,809 --> 00:43:10,680
that seems like it should say prefer if

872
00:43:09,159 --> 00:43:14,230
the dodge 4-0

873
00:43:10,679 --> 00:43:16,809
and since you have to you should have

874
00:43:14,230 --> 00:43:18,789
two pieces that are exactly the same and

875
00:43:16,809 --> 00:43:22,090
the only difference is the dodge value

876
00:43:18,789 --> 00:43:23,409
is not zero in one of them you should

877
00:43:22,090 --> 00:43:26,980
have been preferring the one where it

878
00:43:23,409 --> 00:43:32,429
was zero so something is weird about

879
00:43:26,980 --> 00:43:32,429
this but I have no idea what it is

880
00:43:45,159 --> 00:43:48,369
so there's I mean I'm just thinking in

881
00:43:46,869 --> 00:43:51,159
my head so there's three things that

882
00:43:48,369 --> 00:43:53,769
could be wrong one is our import process

883
00:43:51,159 --> 00:43:55,599
is incorrectly setting the tags so that

884
00:43:53,769 --> 00:43:57,159
things that are supposed to be just the

885
00:43:55,599 --> 00:43:59,199
regular standstill are getting the dodge

886
00:43:57,159 --> 00:44:10,799
tag and the things that aren't aren't or

887
00:43:59,199 --> 00:44:13,029
something right the next problem is

888
00:44:10,800 --> 00:44:15,130
there is something wrong with the

889
00:44:13,030 --> 00:44:16,750
matching so that the thing I think is

890
00:44:15,130 --> 00:44:17,950
happening in the computation isn't even

891
00:44:16,750 --> 00:44:19,630
though I just looked at it I'm just

892
00:44:17,949 --> 00:44:22,989
wrong and the way I'm following it

893
00:44:19,630 --> 00:44:26,400
through and the third one is that

894
00:44:22,989 --> 00:44:30,519
somehow we're getting an actual

895
00:44:26,400 --> 00:44:33,450
preference for dodging because it's

896
00:44:30,519 --> 00:44:36,039
actually getting set somewhere

897
00:44:33,449 --> 00:44:38,500
accidentally like it's the entity does

898
00:44:36,039 --> 00:44:40,809
have a dodge tag getting set on it which

899
00:44:38,500 --> 00:44:44,230
I can't imagine because I don't think

900
00:44:40,809 --> 00:44:48,340
we've literally never done that so that

901
00:44:44,230 --> 00:44:51,210
seems really unlikely wait Matt Richter

902
00:44:48,340 --> 00:44:54,550
comes first weight vector second that's

903
00:44:51,210 --> 00:44:58,210
what we expect weight vector here is

904
00:44:54,550 --> 00:45:09,730
multiplied the tag range I should look

905
00:44:58,210 --> 00:45:15,449
and see how are we setting those so it

906
00:45:09,730 --> 00:45:15,449
looks like yeah the tag that looks fine

907
00:45:21,398 --> 00:45:26,328
that all looks fine to me

908
00:45:24,259 --> 00:45:28,188
so the tag range is just whatever for

909
00:45:26,329 --> 00:45:31,369
everything else but then for facing

910
00:45:28,188 --> 00:45:38,838
direction it's a it's a wrapped circular

911
00:45:31,369 --> 00:45:40,999
valium I got nothing I have nothing I

912
00:45:38,838 --> 00:45:43,699
have no idea why that's not picking

913
00:45:40,998 --> 00:45:45,458
correctly so I guess we still do have I

914
00:45:43,699 --> 00:45:48,798
thought we were almost debug free

915
00:45:45,458 --> 00:45:50,989
meaning we'd gotten to the end of it but

916
00:45:48,798 --> 00:45:56,688
we're not quite we still just have an

917
00:45:50,989 --> 00:45:58,458
issue with with the the cutscene I mean

918
00:45:56,688 --> 00:46:00,908
of the the base game which is that the

919
00:45:58,458 --> 00:46:04,129
dodge seems to be getting preferred now

920
00:46:00,909 --> 00:46:05,329
that's not necessarily have any that bug

921
00:46:04,130 --> 00:46:07,759
it necessarily has anything to do with

922
00:46:05,329 --> 00:46:11,269
our new code because we were never

923
00:46:07,759 --> 00:46:13,248
trying the hero out before so we don't

924
00:46:11,268 --> 00:46:14,538
know like it could have just been a bug

925
00:46:13,248 --> 00:46:16,068
that's been in there forever so it's not

926
00:46:14,539 --> 00:46:17,689
a silly a bug in our new code it's just

927
00:46:16,068 --> 00:46:19,188
but it is a bug before we can call it

928
00:46:17,688 --> 00:46:21,139
done so I want to get to the bottom

929
00:46:19,188 --> 00:46:22,908
right other thing I'd like to do I'd

930
00:46:21,139 --> 00:46:24,379
like to delete these files cuz I don't

931
00:46:22,909 --> 00:46:27,409
think they have anything to do with

932
00:46:24,380 --> 00:46:31,608
anything anymore so I'm just gonna move

933
00:46:27,409 --> 00:46:35,329
these out and we can just go with test

934
00:46:31,608 --> 00:46:37,369
fonts v2 for now as the only residual

935
00:46:35,329 --> 00:46:39,769
file and I think we're okay at that

936
00:46:37,369 --> 00:46:42,969
point meaning if I run the game now I

937
00:46:39,768 --> 00:46:47,538
think our only problem as far as I know

938
00:46:42,969 --> 00:46:54,168
yeah is is that we don't have that dodge

939
00:46:47,539 --> 00:46:56,179
pick working correctly so yeah so if I

940
00:46:54,168 --> 00:46:57,798
just take a look at at what's going on I

941
00:46:56,179 --> 00:46:59,539
think it's just the dogs it's wrong

942
00:46:57,798 --> 00:47:02,568
everything else is fine we can now

943
00:46:59,539 --> 00:47:05,059
rebuild everything from the HHA hhd

944
00:47:02,568 --> 00:47:07,068
files which is awesome except for our

945
00:47:05,059 --> 00:47:10,399
fonts the fonts is something we will

946
00:47:07,068 --> 00:47:12,349
have to do as a separate thing and we'll

947
00:47:10,398 --> 00:47:16,880
get to that right we'll definitely get

948
00:47:12,349 --> 00:47:19,719
to that okay so everything's good I'm

949
00:47:16,880 --> 00:47:19,719
happy with all that

950
00:47:24,389 --> 00:47:36,089
I also think I know how I want to do for

951
00:47:26,369 --> 00:47:38,759
the fonts I will dress that later but

952
00:47:36,090 --> 00:47:41,280
anyway so right now I just need to

953
00:47:38,760 --> 00:47:42,810
figure out what's going wrong with that

954
00:47:41,280 --> 00:47:45,570
matching and then I think we can call it

955
00:47:42,809 --> 00:47:47,340
a day because I think we're just good at

956
00:47:45,570 --> 00:47:49,019
that point and I can move on to like

957
00:47:47,340 --> 00:47:50,400
doing the rewrite stuff which I don't

958
00:47:49,019 --> 00:47:51,420
guess we don't have time for a day

959
00:47:50,400 --> 00:47:53,130
because of this I would have liked to

960
00:47:51,420 --> 00:47:54,090
start it on it today but you know this

961
00:47:53,130 --> 00:47:55,890
is probably gonna take me the rest of

962
00:47:54,090 --> 00:48:00,630
the day to well rest of the day the rest

963
00:47:55,889 --> 00:48:03,960
of the two-hour block - to nail down so

964
00:48:00,630 --> 00:48:07,230
alright so I guess what I want to do is

965
00:48:03,960 --> 00:48:10,079
take a look at that match and find out

966
00:48:07,230 --> 00:48:13,559
why it's not producing the result that I

967
00:48:10,079 --> 00:48:15,179
think it should right so there's a

968
00:48:13,559 --> 00:48:27,000
couple things I can do there first of

969
00:48:15,179 --> 00:48:30,179
all if I go into if I go into the HST

970
00:48:27,000 --> 00:48:33,090
file right I can verify you know body

971
00:48:30,179 --> 00:48:35,489
here oh right always gets an orphan tag

972
00:48:33,090 --> 00:48:38,730
always gets a hero tag those tags appear

973
00:48:35,489 --> 00:48:39,959
to be working properly if I go into the

974
00:48:38,730 --> 00:48:41,820
import side of things

975
00:48:39,960 --> 00:48:44,220
and I look at what's going on you can

976
00:48:41,820 --> 00:48:47,850
see that these are the X indices

977
00:48:44,219 --> 00:48:51,059
marching along idol dodge dodge move hit

978
00:48:47,849 --> 00:48:54,690
attack attack and as far as I know we're

979
00:48:51,059 --> 00:48:56,099
always just setting tag idle so we

980
00:48:54,690 --> 00:48:58,619
should just be getting that now maybe

981
00:48:56,099 --> 00:49:00,299
we're not you know that's the other

982
00:48:58,619 --> 00:49:03,000
thing maybe maybe we just aren't giving

983
00:49:00,300 --> 00:49:03,660
it anything to work with I guess I

984
00:49:03,000 --> 00:49:05,670
hadn't thought of that

985
00:49:03,659 --> 00:49:08,159
so inside the entity are we are

986
00:49:05,670 --> 00:49:12,690
resetting tag idle anywhere is anyone

987
00:49:08,159 --> 00:49:17,009
setting that let me see when we do add

988
00:49:12,690 --> 00:49:18,900
player do we set tag idle okay we don't

989
00:49:17,010 --> 00:49:21,300
so that actually now I think about it

990
00:49:18,900 --> 00:49:23,070
could have just been the problem the

991
00:49:21,300 --> 00:49:26,850
problem is yeah we could say try to

992
00:49:23,070 --> 00:49:29,850
match dodge exactly but if it doesn't

993
00:49:26,849 --> 00:49:32,279
have a dodge tag on it at all I'm not

994
00:49:29,849 --> 00:49:34,380
sure what that would do so

995
00:49:32,280 --> 00:49:35,410
like again because our matching is kind

996
00:49:34,380 --> 00:49:37,630
of screwed up

997
00:49:35,409 --> 00:49:42,429
that could be the problem so if I do a

998
00:49:37,630 --> 00:49:47,048
match vector tag Idol and I say I want

999
00:49:42,429 --> 00:49:48,788
to match that does that just work

1000
00:49:47,048 --> 00:49:50,288
because again I don't need to belabor

1001
00:49:48,789 --> 00:49:52,569
this point because the matching is not

1002
00:49:50,289 --> 00:49:54,789
what I want it to be anyway so we're

1003
00:49:52,568 --> 00:49:57,460
gonna spend more time improving that as

1004
00:49:54,789 --> 00:49:59,230
we go okay so that fixes it so it was

1005
00:49:57,460 --> 00:50:00,789
we're just not giving it a positive

1006
00:49:59,230 --> 00:50:03,838
thing to look for like hey you need to

1007
00:50:00,789 --> 00:50:07,750
match Idol it's telling it not to match

1008
00:50:03,838 --> 00:50:10,210
telling it not to match Dodge doesn't

1009
00:50:07,750 --> 00:50:12,250
help because these didn't have dodge

1010
00:50:10,210 --> 00:50:13,869
tags on them is probably the problem we

1011
00:50:12,250 --> 00:50:17,048
had like the rest of the things didn't

1012
00:50:13,869 --> 00:50:19,509
right okay so now we're down to just the

1013
00:50:17,048 --> 00:50:20,920
alignment point issue which is exactly

1014
00:50:19,509 --> 00:50:23,380
where we wanted to be because that

1015
00:50:20,920 --> 00:50:24,849
brings up our next piece of code we had

1016
00:50:23,380 --> 00:50:27,849
to write which is something that

1017
00:50:24,849 --> 00:50:29,769
rewrites the hht while including edits

1018
00:50:27,849 --> 00:50:33,460
that have occurred inside the game as

1019
00:50:29,768 --> 00:50:35,169
necessary right so that's the thing that

1020
00:50:33,460 --> 00:50:39,730
we want to get to next something that

1021
00:50:35,170 --> 00:50:43,690
reproduces the hht properly and so what

1022
00:50:39,730 --> 00:50:47,559
you'll see here right is if I I can

1023
00:50:43,690 --> 00:50:51,130
actually I think do this already if I go

1024
00:50:47,559 --> 00:50:54,430
in here and I say look I need you to

1025
00:50:51,130 --> 00:50:57,278
take this thing let's use the

1026
00:50:54,429 --> 00:51:00,460
forward-facing lens so we know if I go

1027
00:50:57,278 --> 00:51:04,480
in here and say okay I want to do the

1028
00:51:00,460 --> 00:51:06,670
alignment points on this thing and so

1029
00:51:04,480 --> 00:51:08,880
I'm gonna set the default alignment

1030
00:51:06,670 --> 00:51:11,829
point oops

1031
00:51:08,880 --> 00:51:14,440
let's get that here so I'm going to set

1032
00:51:11,829 --> 00:51:19,119
the default alignment point like so and

1033
00:51:14,440 --> 00:51:23,740
I want to set the the base of neck

1034
00:51:19,119 --> 00:51:25,930
alignment point like so and then you

1035
00:51:23,739 --> 00:51:30,758
know I'm gonna grab the head and I'll

1036
00:51:25,929 --> 00:51:35,199
set that alignment point as well right

1037
00:51:30,759 --> 00:51:37,480
and so now the hero is all set up right

1038
00:51:35,199 --> 00:51:38,980
it's all good

1039
00:51:37,480 --> 00:51:40,298
let me just make sure this alignment

1040
00:51:38,980 --> 00:51:42,000
point is what I think it should be

1041
00:51:40,298 --> 00:51:45,838
should be like that

1042
00:51:42,000 --> 00:51:45,838
and this should be

1043
00:51:47,780 --> 00:51:57,359
we're how come I can't see this point so

1044
00:51:51,929 --> 00:51:58,828
that's the red point oh right because

1045
00:51:57,358 --> 00:52:01,759
I'm on the wrong one this is the one I

1046
00:51:58,829 --> 00:52:05,400
actually wanted to edit there we go

1047
00:52:01,760 --> 00:52:11,270
should be like right there and then this

1048
00:52:05,400 --> 00:52:14,250
should be like right there let's say

1049
00:52:11,269 --> 00:52:15,780
alright so if we're in that and I should

1050
00:52:14,250 --> 00:52:16,650
really improve this interface a little

1051
00:52:15,780 --> 00:52:18,450
there's a couple things we could do to

1052
00:52:16,650 --> 00:52:22,019
make this a lot nicer very quickly as

1053
00:52:18,449 --> 00:52:23,699
well if I hit the Save button right we

1054
00:52:22,019 --> 00:52:27,088
have written the modifications back to

1055
00:52:23,699 --> 00:52:29,399
the HHA and so now if I close the game

1056
00:52:27,088 --> 00:52:32,009
and reopen the game it should actually

1057
00:52:29,400 --> 00:52:34,798
still be there so as you can see the one

1058
00:52:32,010 --> 00:52:36,210
we made is you know it was saved and I

1059
00:52:34,798 --> 00:52:38,280
want to go do that for everybody so that

1060
00:52:36,210 --> 00:52:41,579
now all of our art will just work right

1061
00:52:38,280 --> 00:52:45,720
but the problem is if I now go and

1062
00:52:41,579 --> 00:52:47,940
rebuild the base game HHA just to

1063
00:52:45,719 --> 00:52:50,129
illustrate the problem here it's had

1064
00:52:47,940 --> 00:52:56,068
that alignment point written back into

1065
00:52:50,130 --> 00:52:58,318
it but if I delete it right and now I'll

1066
00:52:56,068 --> 00:53:02,159
run the game and it triggers the rebuild

1067
00:52:58,318 --> 00:53:04,889
it will wipe it out right because it

1068
00:53:02,159 --> 00:53:07,170
doesn't know I just deleted the only

1069
00:53:04,889 --> 00:53:11,670
place that stored that piece of

1070
00:53:07,170 --> 00:53:13,230
information right so it's going through

1071
00:53:11,670 --> 00:53:14,940
rebuilding the base game it's a it's

1072
00:53:13,230 --> 00:53:17,039
importing all those art assets that were

1073
00:53:14,940 --> 00:53:18,809
it for the gameplay resizing them

1074
00:53:17,039 --> 00:53:20,880
placing them in there right and they're

1075
00:53:18,809 --> 00:53:23,400
all correct except for if the alignment

1076
00:53:20,880 --> 00:53:25,920
points are gone right so that's the

1077
00:53:23,400 --> 00:53:29,369
thing we really want to fix and that's

1078
00:53:25,920 --> 00:53:31,680
where the rewrite comes in so in order

1079
00:53:29,369 --> 00:53:33,930
to do that rewrite we just need to make

1080
00:53:31,679 --> 00:53:36,960
some way of when you're saying save the

1081
00:53:33,929 --> 00:53:41,519
game you need to read the H HTS and copy

1082
00:53:36,960 --> 00:53:44,250
them over to new h HTS right so

1083
00:53:41,519 --> 00:53:47,400
basically we need to update one of our

1084
00:53:44,250 --> 00:53:49,048
ideas about what's going on here you

1085
00:53:47,400 --> 00:53:51,690
know and sort of change the way that

1086
00:53:49,048 --> 00:53:54,989
it's actually working so if I go over to

1087
00:53:51,690 --> 00:53:57,780
the in-game editor it sort of has some

1088
00:53:54,989 --> 00:54:00,058
stuff in here that's now no longer

1089
00:53:57,780 --> 00:54:02,609
correct

1090
00:54:00,059 --> 00:54:05,699
it has a thing called modified you can

1091
00:54:02,608 --> 00:54:10,409
see here in save all changes right save

1092
00:54:05,699 --> 00:54:11,009
all changes is not gonna be this isn't a

1093
00:54:10,409 --> 00:54:13,828
thing anymore

1094
00:54:11,009 --> 00:54:17,278
right so that's fine clean edit list

1095
00:54:13,829 --> 00:54:21,479
like that whole thing it's that's just

1096
00:54:17,278 --> 00:54:23,400
not and get asset for edit like we don't

1097
00:54:21,478 --> 00:54:26,548
really need any of this anymore because

1098
00:54:23,400 --> 00:54:31,410
we can't use it it's not helpful I and

1099
00:54:26,548 --> 00:54:33,809
so you know the the clean edit pointer

1100
00:54:31,409 --> 00:54:35,399
it just doesn't matter so we can

1101
00:54:33,809 --> 00:54:41,969
probably simplify the editor by getting

1102
00:54:35,400 --> 00:54:45,499
rid of that actually if I look around to

1103
00:54:41,969 --> 00:54:45,499
see where that's actually getting used

1104
00:54:48,199 --> 00:55:01,099
so it looks like that's actually just

1105
00:54:55,349 --> 00:55:01,099
used for undo redo anyway

1106
00:55:06,789 --> 00:55:10,139
I guess

1107
00:55:27,190 --> 00:55:32,539
so it looks like that's just used for

1108
00:55:29,300 --> 00:55:33,890
tracking and you in a video which I'm

1109
00:55:32,539 --> 00:55:37,909
not even sure we really needed to do

1110
00:55:33,889 --> 00:55:40,819
that way but oh well uh so if I take a

1111
00:55:37,909 --> 00:55:42,379
look at these and I just say look what's

1112
00:55:40,820 --> 00:55:45,470
actually going on here in save all

1113
00:55:42,380 --> 00:55:46,190
changes we really just don't need any of

1114
00:55:45,469 --> 00:55:49,099
this anymore

1115
00:55:46,190 --> 00:55:54,079
so it does look like we need you know

1116
00:55:49,099 --> 00:55:55,460
this but right all HHA modifications is

1117
00:55:54,079 --> 00:55:56,329
not really a thing that we're ever gonna

1118
00:55:55,460 --> 00:55:59,449
do anymore

1119
00:55:56,329 --> 00:56:05,029
because in order to do it we really need

1120
00:55:59,449 --> 00:56:07,368
to do the full walk of our text tag of

1121
00:56:05,030 --> 00:56:08,990
all of our text tags because only things

1122
00:56:07,369 --> 00:56:14,150
we have those text tags for can we

1123
00:56:08,989 --> 00:56:15,529
really properly save data for right so

1124
00:56:14,150 --> 00:56:19,369
really what we've got here is right

1125
00:56:15,530 --> 00:56:21,140
modifications to all hhas and right all

1126
00:56:19,369 --> 00:56:24,230
HHA modifications apparently we have

1127
00:56:21,139 --> 00:56:27,109
both of these like all HHA modifications

1128
00:56:24,230 --> 00:56:31,070
where is that hey look we already had

1129
00:56:27,110 --> 00:56:37,730
that function whoops so I'm gonna bring

1130
00:56:31,070 --> 00:56:42,200
that over here there it is um it's like

1131
00:56:37,730 --> 00:56:44,030
almost exactly it's like the only thing

1132
00:56:42,199 --> 00:56:45,858
we did is we cleared the temporary no

1133
00:56:44,030 --> 00:56:49,700
more aggresively there which is probably

1134
00:56:45,858 --> 00:56:53,509
better right um so right all HHA

1135
00:56:49,699 --> 00:56:56,449
modifications again not really what we

1136
00:56:53,510 --> 00:56:58,609
the way we wanted that to be because

1137
00:56:56,449 --> 00:57:01,129
this is should not ever be callable

1138
00:56:58,608 --> 00:57:04,759
separately so what's gonna happen here

1139
00:57:01,130 --> 00:57:07,550
is actually this these things have to

1140
00:57:04,760 --> 00:57:09,950
happen together you have to do this

1141
00:57:07,550 --> 00:57:14,720
process and then this process otherwise

1142
00:57:09,949 --> 00:57:17,779
it's simply not a safe edit because you

1143
00:57:14,719 --> 00:57:19,699
will write changes to one place and not

1144
00:57:17,780 --> 00:57:22,340
the other which is simply not allowed

1145
00:57:19,699 --> 00:57:24,439
because then you just end up in a

1146
00:57:22,340 --> 00:57:26,720
situation where those changes only exist

1147
00:57:24,440 --> 00:57:28,280
in the runtime data files and that's bad

1148
00:57:26,719 --> 00:57:29,809
because that means if you ever want to

1149
00:57:28,280 --> 00:57:33,430
rebuild the files that data will be

1150
00:57:29,809 --> 00:57:33,429
eliminated which we never want

1151
00:57:36,909 --> 00:57:46,129
all right um yes so just looking at

1152
00:57:43,519 --> 00:57:48,739
these two as well I think I might just

1153
00:57:46,130 --> 00:57:52,309
do something more like this where we

1154
00:57:48,739 --> 00:57:55,459
actually do a temporary memory thing and

1155
00:57:52,309 --> 00:58:00,739
here I just say begin temporary memory

1156
00:57:55,460 --> 00:58:05,900
on the temporary nough and I do n

1157
00:58:00,739 --> 00:58:07,250
temporary memory here so we don't really

1158
00:58:05,900 --> 00:58:09,110
need to create a new arena every time we

1159
00:58:07,250 --> 00:58:11,210
can just cycle through it this way when

1160
00:58:09,110 --> 00:58:15,650
we do our modification rights like so

1161
00:58:11,210 --> 00:58:17,539
and so import changed assets now is

1162
00:58:15,650 --> 00:58:24,550
gonna be a different name it's just

1163
00:58:17,539 --> 00:58:27,860
going to be like you know synchronize

1164
00:58:24,550 --> 00:58:30,800
asset file changes and that's the only

1165
00:58:27,860 --> 00:58:33,289
thing we've got right so that's just

1166
00:58:30,800 --> 00:58:35,720
that's just what you do there's a thing

1167
00:58:33,289 --> 00:58:37,969
that you call it synchronizes everything

1168
00:58:35,719 --> 00:58:40,519
and it's the only operation you get you

1169
00:58:37,969 --> 00:58:45,459
don't get to do anything else

1170
00:58:40,519 --> 00:58:48,679
happy birthday right so here's that one

1171
00:58:45,460 --> 00:58:57,409
and maybe we do do this on startup

1172
00:58:48,679 --> 00:58:59,149
generally speaking right I and I don't

1173
00:58:57,409 --> 00:59:01,759
know but you know that's just what we're

1174
00:58:59,150 --> 00:59:03,769
gonna say that we do and and then in

1175
00:59:01,760 --> 00:59:07,370
here where we've got the editor the

1176
00:59:03,769 --> 00:59:11,239
editor has to do that synchronization as

1177
00:59:07,369 --> 00:59:15,250
well so when you actually say I want to

1178
00:59:11,239 --> 00:59:15,250
save changes that's what will happen

1179
00:59:19,650 --> 00:59:40,559
and there's really not two of these it's

1180
00:59:26,639 --> 00:59:43,019
just this right so you just get one

1181
00:59:40,559 --> 00:59:45,719
button the button is synchronized that's

1182
00:59:43,019 --> 00:59:47,849
the only thing that it can do and it has

1183
00:59:45,719 --> 00:59:51,089
to call synchronized asset file changes

1184
00:59:47,849 --> 00:59:53,969
like so now we could make it more

1185
00:59:51,090 --> 00:59:56,430
granular if we wanted to so if we wanted

1186
00:59:53,969 --> 00:59:57,839
to have an import and save or just

1187
00:59:56,429 --> 01:00:02,309
another one we could actually do a

1188
00:59:57,840 --> 01:00:03,600
little bit back the reason that might be

1189
01:00:02,309 --> 01:00:05,940
interesting is we might want to have a

1190
01:00:03,599 --> 01:00:09,599
way to just do an import that does a

1191
01:00:05,940 --> 01:00:12,119
strict revert as well I just don't know

1192
01:00:09,599 --> 01:00:13,589
how we want to do that so we'll wait you

1193
01:00:12,119 --> 01:00:16,440
know if you if you look at synchronized

1194
01:00:13,590 --> 01:00:18,240
asset file changes there's ones that

1195
01:00:16,440 --> 01:00:20,039
just do the read and there's ones that

1196
01:00:18,239 --> 01:00:23,399
do the read and the write you know what

1197
01:00:20,039 --> 01:00:26,909
I mean so we can do a strict import that

1198
01:00:23,400 --> 01:00:29,820
only brings things in and never writes

1199
01:00:26,909 --> 01:00:33,119
things out and I just don't know whether

1200
01:00:29,820 --> 01:00:35,220
we want to do that or not and you know

1201
01:00:33,119 --> 01:00:40,710
what I get here's the thing we had it in

1202
01:00:35,219 --> 01:00:42,659
there we can have it in there still the

1203
01:00:40,710 --> 01:00:45,869
difference would just be there's import

1204
01:00:42,659 --> 01:00:48,750
and there's important save and that's

1205
01:00:45,869 --> 01:00:50,969
what you get right you don't get

1206
01:00:48,750 --> 01:00:54,659
anything else so import doesn't rewrite

1207
01:00:50,969 --> 01:00:58,529
the file import and save does so we can

1208
01:00:54,659 --> 01:01:01,409
have those two things right and that's

1209
01:00:58,530 --> 01:01:05,820
fine so the way that that would work is

1210
01:01:01,409 --> 01:01:07,139
again inside save all changes which I

1211
01:01:05,820 --> 01:01:09,300
believe these are the two places that's

1212
01:01:07,139 --> 01:01:11,099
actually called from inside save all

1213
01:01:09,300 --> 01:01:13,560
changes right it would just need to pass

1214
01:01:11,099 --> 01:01:14,989
through what was happening here with the

1215
01:01:13,559 --> 01:01:17,670
synchronize

1216
01:01:14,989 --> 01:01:20,039
that's the file change thing however I

1217
01:01:17,670 --> 01:01:21,869
believe that's not quite right because

1218
01:01:20,039 --> 01:01:24,509
if you're gonna do save all changes then

1219
01:01:21,869 --> 01:01:26,639
the only thing you can do is that so

1220
01:01:24,510 --> 01:01:28,170
really the way this would work is this

1221
01:01:26,639 --> 01:01:29,909
would call synchronize asset file

1222
01:01:28,170 --> 01:01:32,099
changes directly if you were just doing

1223
01:01:29,909 --> 01:01:33,099
an import it would not called save all

1224
01:01:32,099 --> 01:01:35,559
changes

1225
01:01:33,099 --> 01:01:37,329
at all so that's what that looks like

1226
01:01:35,559 --> 01:01:44,440
and that's what this looks like

1227
01:01:37,329 --> 01:01:46,509
I think right so I think that's how that

1228
01:01:44,440 --> 01:01:48,789
would play out which then means that

1229
01:01:46,510 --> 01:01:56,080
inside import we need a bool here that's

1230
01:01:48,789 --> 01:02:00,610
like Save Changes or something that

1231
01:01:56,079 --> 01:02:05,259
writes back to the H HTS like so on or

1232
01:02:00,610 --> 01:02:06,849
rewrite H HTS would be a thing I'm gonna

1233
01:02:05,260 --> 01:02:09,430
call it Save Changes H safeties though

1234
01:02:06,849 --> 01:02:11,319
only because we probably want to

1235
01:02:09,429 --> 01:02:14,279
implement it in such a way that if an h

1236
01:02:11,320 --> 01:02:16,930
HT has not changed at all meaning

1237
01:02:14,280 --> 01:02:18,820
there's no difference between the one

1238
01:02:16,929 --> 01:02:23,169
that we created and the one that is

1239
01:02:18,820 --> 01:02:26,289
gonna go out to the world then we just

1240
01:02:23,170 --> 01:02:34,750
don't need to bother right so that seems

1241
01:02:26,289 --> 01:02:37,800
like a fair plan to me pretty

1242
01:02:34,750 --> 01:02:37,800
straightforward right

1243
01:02:38,230 --> 01:02:45,760
okay so we've got the synchronized asset

1244
01:02:43,630 --> 01:02:47,260
file changes now we have it all

1245
01:02:45,760 --> 01:02:49,540
structured so that things are gonna go

1246
01:02:47,260 --> 01:02:52,000
the way we want and really I think so

1247
01:02:49,539 --> 01:02:54,130
what we need to do here is say hey in

1248
01:02:52,000 --> 01:02:59,559
here we've got this hht rewrite where

1249
01:02:54,130 --> 01:03:01,269
we're creating a new you know a new

1250
01:02:59,559 --> 01:03:02,889
version of the HH tees that we're

1251
01:03:01,269 --> 01:03:05,440
reading and we want to make sure that

1252
01:03:02,889 --> 01:03:07,059
those things get mirrored properly how

1253
01:03:05,440 --> 01:03:08,889
do we do that

1254
01:03:07,059 --> 01:03:11,019
and so what I think we want to do here

1255
01:03:08,889 --> 01:03:13,719
is say all right NHD concepts let's

1256
01:03:11,019 --> 01:03:15,159
forget this hht rewrite nonsense doesn't

1257
01:03:13,719 --> 01:03:17,529
really make much sense to have that as a

1258
01:03:15,159 --> 01:03:19,779
boolean let's instead make that a stream

1259
01:03:17,530 --> 01:03:21,970
that says look if we're rewriting the

1260
01:03:19,780 --> 01:03:25,060
hht here's a stream that we're gonna

1261
01:03:21,969 --> 01:03:27,338
dump it the the new data - and if we're

1262
01:03:25,059 --> 01:03:29,139
not then we don't have that stream so

1263
01:03:27,338 --> 01:03:30,820
looking at the stream stuff that we've

1264
01:03:29,139 --> 01:03:32,348
got right we've we've already got this

1265
01:03:30,820 --> 01:03:34,088
idea that we can set up a stream that's

1266
01:03:32,349 --> 01:03:36,820
got memory and an output we can do a

1267
01:03:34,088 --> 01:03:38,320
test to it this is set up exactly for

1268
01:03:36,820 --> 01:03:40,059
what we want to do so I feel like we

1269
01:03:38,320 --> 01:03:43,630
just want to do all right create an

1270
01:03:40,059 --> 01:03:45,279
on-demand memory stream for each hht

1271
01:03:43,630 --> 01:03:47,349
we'll dump the stuff in there if we're

1272
01:03:45,280 --> 01:03:49,569
going to dump it and we won't if we

1273
01:03:47,349 --> 01:03:54,609
won't and so this I think is what we

1274
01:03:49,568 --> 01:03:56,858
really want this hht out stream right

1275
01:03:54,608 --> 01:03:58,420
and we just say all right put that in

1276
01:03:56,858 --> 01:03:59,588
the temporary 'no we know that's all

1277
01:03:58,420 --> 01:04:02,200
gonna get cleared and that's all we

1278
01:03:59,588 --> 01:04:04,088
really want it to do anyway we'll dump

1279
01:04:02,199 --> 01:04:06,309
it in there we don't really care about

1280
01:04:04,088 --> 01:04:07,568
the errors at the moment but when we do

1281
01:04:06,309 --> 01:04:10,809
actually care about the errors we can

1282
01:04:07,568 --> 01:04:13,869
also hook that up to something right so

1283
01:04:10,809 --> 01:04:15,699
that's kind of nice and then we're done

1284
01:04:13,869 --> 01:04:17,619
right I think that's all we really need

1285
01:04:15,699 --> 01:04:20,710
to do so at the end here after we've

1286
01:04:17,619 --> 01:04:23,318
produced our on-demand stream we can use

1287
01:04:20,710 --> 01:04:27,699
the stream calls that we've got to

1288
01:04:23,318 --> 01:04:29,710
produce the necessary output right so

1289
01:04:27,699 --> 01:04:33,509
what we can do there is say alright give

1290
01:04:29,710 --> 01:04:33,510
me the total size of the stream

1291
01:04:37,480 --> 01:04:47,079
like so right and really you know when

1292
01:04:43,849 --> 01:04:49,940
I'm looking at this I'm thinking to like

1293
01:04:47,079 --> 01:04:52,970
the hht that gets loaded maybe should

1294
01:04:49,940 --> 01:04:55,970
get loaded outside here so this can do

1295
01:04:52,969 --> 01:04:57,679
that that check I'm not sure how exactly

1296
01:04:55,969 --> 01:04:59,659
our structure we'll see in a second but

1297
01:04:57,679 --> 01:05:02,058
when I get the total size I'm thinking

1298
01:04:59,659 --> 01:05:04,068
there's probably also a way to output

1299
01:05:02,059 --> 01:05:06,349
one of these to memory right or there

1300
01:05:04,068 --> 01:05:10,250
should be a way that just runs through

1301
01:05:06,349 --> 01:05:11,510
it and and stamps it out so I want to

1302
01:05:10,250 --> 01:05:14,510
think here that I guess we don't have

1303
01:05:11,510 --> 01:05:17,540
yet which is just like okay we've gotten

1304
01:05:14,510 --> 01:05:21,349
the total size of the thing I want to

1305
01:05:17,539 --> 01:05:24,858
see if I need to rewrite the hht and

1306
01:05:21,349 --> 01:05:32,150
produce like a new one and so what I'm

1307
01:05:24,858 --> 01:05:34,659
going to do is yeah there's there's more

1308
01:05:32,150 --> 01:05:38,800
than one way I could do this as well

1309
01:05:34,659 --> 01:05:38,799
since this is under source code control

1310
01:05:47,079 --> 01:05:51,099
I'm not sure how long do this

1311
01:06:02,079 --> 01:06:05,440
there's number of different ways you can

1312
01:06:03,829 --> 01:06:07,610
do this they're all subtly different

1313
01:06:05,440 --> 01:06:09,889
I'll do the first part is the same in

1314
01:06:07,610 --> 01:06:12,079
all of them so what I need to do here is

1315
01:06:09,889 --> 01:06:13,339
aim to create a block of memory I need

1316
01:06:12,079 --> 01:06:16,190
to just say look I'm gonna write this

1317
01:06:13,340 --> 01:06:19,400
somewhere and I can just do a you know

1318
01:06:16,190 --> 01:06:20,809
give me some memory here's how big the

1319
01:06:19,400 --> 01:06:23,570
thing is the block that I need to write

1320
01:06:20,809 --> 01:06:24,710
so why don't you just create the whole

1321
01:06:23,570 --> 01:06:29,119
thing for me

1322
01:06:24,710 --> 01:06:32,539
right so this is the hht out put hht

1323
01:06:29,119 --> 01:06:35,150
contents I guess you could say you know

1324
01:06:32,539 --> 01:06:38,769
we know it's this big and I suppose I

1325
01:06:35,150 --> 01:06:48,500
could just do we have like a push string

1326
01:06:38,769 --> 01:06:50,900
size push or something what is pushed

1327
01:06:48,500 --> 01:06:52,909
buffer results no that's not what I want

1328
01:06:50,900 --> 01:06:59,210
not push I don't want that

1329
01:06:52,909 --> 01:07:05,809
push size space space so I guess we

1330
01:06:59,210 --> 01:07:08,858
don't have so unfortunately we don't

1331
01:07:05,809 --> 01:07:13,460
have one that just pushes on the room

1332
01:07:08,858 --> 01:07:16,940
that you would use for a string which is

1333
01:07:13,460 --> 01:07:20,449
all I really wanted right so I guess I

1334
01:07:16,940 --> 01:07:25,510
got a make one which is fine with me

1335
01:07:20,449 --> 01:07:28,399
so yeah do we have struck buffer we do

1336
01:07:25,510 --> 01:07:30,410
so buffers and strings are the same here

1337
01:07:28,400 --> 01:07:33,230
right so I'm just gonna call this in

1338
01:07:30,409 --> 01:07:37,549
here I'm gonna say look there's gonna be

1339
01:07:33,230 --> 01:07:41,690
one of these things it's gonna be called

1340
01:07:37,550 --> 01:07:44,660
like push space maybe or like push

1341
01:07:41,690 --> 01:07:46,700
buffer maybe I think we already have a

1342
01:07:44,659 --> 01:07:49,089
call called push buffer right which is

1343
01:07:46,699 --> 01:07:52,239
what I'm worried about

1344
01:07:49,090 --> 01:07:52,239
[Music]

1345
01:07:53,650 --> 01:07:56,769
it's not a render group so I think we're

1346
01:07:55,630 --> 01:07:58,960
okay I'm just going to call it push

1347
01:07:56,769 --> 01:08:00,759
buffer I'm gonna go from there so if we

1348
01:07:58,960 --> 01:08:04,900
call push buffer you're gonna pass a

1349
01:08:00,760 --> 01:08:06,340
size and it's gonna return you a buffer

1350
01:08:04,900 --> 01:08:09,639
which is the same as a string so either

1351
01:08:06,340 --> 01:08:13,240
one works right and in here we're just

1352
01:08:09,639 --> 01:08:17,139
gonna say look the size of this thing is

1353
01:08:13,239 --> 01:08:21,369
that and the push size call will give us

1354
01:08:17,140 --> 01:08:24,220
back what we want for this so we're done

1355
01:08:21,369 --> 01:08:26,890
right so that way in here I can say

1356
01:08:24,220 --> 01:08:32,800
alright I'm gonna create a buffer for

1357
01:08:26,890 --> 01:08:36,520
this thing so here's the hht contents

1358
01:08:32,800 --> 01:08:38,949
right and I'm gonna do push buffer on

1359
01:08:36,520 --> 01:08:41,260
the temporary nough with that size that

1360
01:08:38,949 --> 01:08:44,349
I said that I needed right here's the

1361
01:08:41,260 --> 01:08:47,260
get total size on whatever that stream

1362
01:08:44,350 --> 01:08:50,079
was so that hhc out stream so that's how

1363
01:08:47,260 --> 01:08:53,829
much we need to like put the whole thing

1364
01:08:50,079 --> 01:08:55,659
into a contiguous piece of memory once

1365
01:08:53,829 --> 01:08:57,100
I've got that I just want to output the

1366
01:08:55,659 --> 01:08:59,649
thing into a buffer so I just want to do

1367
01:08:57,100 --> 01:09:01,570
like copy stream to buffer and I want to

1368
01:08:59,649 --> 01:09:02,979
say take the entire stream which is in

1369
01:09:01,569 --> 01:09:06,939
lots of little tiny chunks they're all

1370
01:09:02,979 --> 01:09:09,729
like strung together right and take that

1371
01:09:06,939 --> 01:09:12,099
stream and put it into here so now I've

1372
01:09:09,729 --> 01:09:13,899
just got one contiguous chunk and then

1373
01:09:12,100 --> 01:09:15,940
finally what I want to do is just save

1374
01:09:13,899 --> 01:09:18,960
that to a file right I just want to open

1375
01:09:15,939 --> 01:09:27,029
a file and write the whole thing out

1376
01:09:18,960 --> 01:09:27,029
into it but first I want to compare it I

1377
01:09:28,680 --> 01:09:40,500
don't know if we've got a mem comp think

1378
01:09:38,199 --> 01:09:40,500
we do

1379
01:09:44,338 --> 01:09:52,778
we do uh God gotta love that search

1380
01:09:49,149 --> 01:09:58,179
thing I added to for coder for functions

1381
01:09:52,779 --> 01:10:01,360
and stuff um save so much time anyway so

1382
01:09:58,180 --> 01:10:04,360
if I go in here and say look now that

1383
01:10:01,359 --> 01:10:08,199
I've got two versions of this thing I

1384
01:10:04,359 --> 01:10:11,500
can see if they're the same right so now

1385
01:10:08,199 --> 01:10:17,159
what I should be able to do is diff the

1386
01:10:11,500 --> 01:10:20,529
hht contents with the contents from the

1387
01:10:17,159 --> 01:10:22,869
that I originally read in right and if

1388
01:10:20,529 --> 01:10:24,779
they're equal I don't need to rewrite if

1389
01:10:22,869 --> 01:10:27,819
they're not equal than I do

1390
01:10:24,779 --> 01:10:31,000
okay so that should be a pretty

1391
01:10:27,819 --> 01:10:35,170
straightforward way to to make this work

1392
01:10:31,000 --> 01:10:36,520
you know I'm saying now I'm gonna do

1393
01:10:35,170 --> 01:10:39,130
something a little controversial here

1394
01:10:36,520 --> 01:10:40,480
but I just think you know like I said

1395
01:10:39,130 --> 01:10:42,250
you know that was my pause for second

1396
01:10:40,479 --> 01:10:43,569
I'm like that has a bunch Royces I know

1397
01:10:42,250 --> 01:10:45,159
I think which way I want to do it which

1398
01:10:43,569 --> 01:10:46,449
is I do want this to be in the platform

1399
01:10:45,159 --> 01:10:48,340
layer and what I want is I want

1400
01:10:46,449 --> 01:10:50,439
basically an atomic file replace

1401
01:10:48,340 --> 01:10:55,539
operation why do I want that

1402
01:10:50,439 --> 01:10:59,710
well file operations can fail we know

1403
01:10:55,539 --> 01:11:01,779
that's true so I want a way of on at the

1404
01:10:59,710 --> 01:11:07,869
platform level saying write this entire

1405
01:11:01,779 --> 01:11:10,090
file out first make sure it works and if

1406
01:11:07,869 --> 01:11:14,859
it doesn't work that I don't want you to

1407
01:11:10,090 --> 01:11:17,860
replace the file you know I'm saying so

1408
01:11:14,859 --> 01:11:21,960
I would like to do something here that's

1409
01:11:17,859 --> 01:11:21,960
like platform replace

1410
01:11:27,559 --> 01:11:33,288
like this where I can say I want to

1411
01:11:31,219 --> 01:11:39,349
replace castas file but don't do it

1412
01:11:33,288 --> 01:11:41,059
unless it works right don't do it unless

1413
01:11:39,349 --> 01:11:42,619
it works so don't just start writing to

1414
01:11:41,059 --> 01:11:44,989
the file then if you fail be like uh

1415
01:11:42,618 --> 01:11:48,229
whoops right all the comments after the

1416
01:11:44,988 --> 01:11:49,879
drive first then atomically swap that in

1417
01:11:48,229 --> 01:11:52,578
place of the old file using like a

1418
01:11:49,880 --> 01:11:54,679
rename so that you never end up in a

1419
01:11:52,578 --> 01:12:01,939
situation where you just don't actually

1420
01:11:54,679 --> 01:12:04,969
have any of the file left I don't really

1421
01:12:01,939 --> 01:12:06,558
need to do that but I just thought it'd

1422
01:12:04,969 --> 01:12:08,569
be like kind of an extra level of safety

1423
01:12:06,559 --> 01:12:10,010
there where it's like look the hhk file

1424
01:12:08,569 --> 01:12:11,529
something we're editing and we don't

1425
01:12:10,010 --> 01:12:14,239
want to lose all our edits for a day for

1426
01:12:11,529 --> 01:12:16,368
because some weird like right bug

1427
01:12:14,238 --> 01:12:18,259
happened or something so maybe we just

1428
01:12:16,368 --> 01:12:20,118
have this atomic replaced all contents

1429
01:12:18,260 --> 01:12:21,349
call and at the platform layer that will

1430
01:12:20,118 --> 01:12:23,058
like do the right thing you know like

1431
01:12:21,349 --> 01:12:27,078
write it to a temp file swap the temp

1432
01:12:23,059 --> 01:12:37,279
file in in place of the old file or

1433
01:12:27,078 --> 01:12:40,689
something like this right all right so

1434
01:12:37,279 --> 01:12:40,689
again not really sure we need to do that

1435
01:12:40,809 --> 01:12:46,820
but I don't know so what we want to do

1436
01:12:44,420 --> 01:12:48,649
now is is back out I think a little bit

1437
01:12:46,819 --> 01:12:52,729
of what we were doing here in the parse

1438
01:12:48,649 --> 01:12:56,328
hht I'm gonna pull this code this code

1439
01:12:52,729 --> 01:12:59,388
right here I'm gonna pull that out a

1440
01:12:56,328 --> 01:13:00,889
little bit because well I mean yeah I

1441
01:12:59,389 --> 01:13:03,109
guess the other thing I could do is I

1442
01:13:00,889 --> 01:13:05,000
could do it inside there so maybe what

1443
01:13:03,109 --> 01:13:07,788
I'll do is I'll just push that one level

1444
01:13:05,000 --> 01:13:09,408
down maybe that is will do it I just

1445
01:13:07,788 --> 01:13:12,469
can't decide I'm not sure how I want to

1446
01:13:09,408 --> 01:13:17,000
do it but you know let's say we do it

1447
01:13:12,469 --> 01:13:19,908
this way because that's just how it

1448
01:13:17,000 --> 01:13:23,389
happens we set up right now it would

1449
01:13:19,908 --> 01:13:27,078
look like this right and so what we do

1450
01:13:23,389 --> 01:13:32,599
is say okay let's use that context

1451
01:13:27,078 --> 01:13:35,960
temporary nough right and we'll create

1452
01:13:32,599 --> 01:13:39,349
an hht out in that case we're gonna pass

1453
01:13:35,960 --> 01:13:41,029
this down and so we know whether we're

1454
01:13:39,349 --> 01:13:42,469
saving changes or not

1455
01:13:41,029 --> 01:13:44,448
so when we come through here we're just

1456
01:13:42,469 --> 01:13:46,969
gonna say look if we're saving changes

1457
01:13:44,448 --> 01:13:48,859
to H h T's then create the HS d out

1458
01:13:46,969 --> 01:13:52,760
stream otherwise it will remain

1459
01:13:48,859 --> 01:13:56,448
uninitialized and unused we do the load

1460
01:13:52,760 --> 01:13:57,860
here so we've got the file buffer it's

1461
01:13:56,448 --> 01:13:59,269
gonna go through and tokenize it and

1462
01:13:57,859 --> 01:14:02,359
have a little party when we get to the

1463
01:13:59,270 --> 01:14:04,520
end we'll look again and say are we

1464
01:14:02,359 --> 01:14:08,719
supposed to be seeing changes if we are

1465
01:14:04,520 --> 01:14:12,110
we will reproduce the entire h HT in as

1466
01:14:08,719 --> 01:14:14,029
a single block will diff the file buffer

1467
01:14:12,109 --> 01:14:17,000
with the h HT contents to see whether it

1468
01:14:14,029 --> 01:14:18,889
needs to get replaced and if it does we

1469
01:14:17,000 --> 01:14:24,050
will replace it now we've got the file

1470
01:14:18,889 --> 01:14:27,440
info here so we can just pass that along

1471
01:14:24,050 --> 01:14:30,139
and then I think we're good so now we

1472
01:14:27,439 --> 01:14:32,689
have the ability to do everything we

1473
01:14:30,139 --> 01:14:35,179
wanted to do we just need to fill in a

1474
01:14:32,689 --> 01:14:37,669
few pieces because at the moment we're

1475
01:14:35,179 --> 01:14:39,980
still not actually doing any of the

1476
01:14:37,670 --> 01:14:44,179
stream copy stuff that we said we were

1477
01:14:39,979 --> 01:14:47,750
going to do right so now we need copy up

1478
01:14:44,179 --> 01:14:50,960
to and including we need that call to

1479
01:14:47,750 --> 01:14:54,439
work and at the moment we don't have a

1480
01:14:50,960 --> 01:14:56,510
way of making that call work so that's

1481
01:14:54,439 --> 01:15:02,058
the next step that we have to go in here

1482
01:14:56,510 --> 01:15:04,099
and do so what I'm not sure about is all

1483
01:15:02,059 --> 01:15:06,079
the stuff that we were doing in here

1484
01:15:04,099 --> 01:15:09,739
right where we do parse top level block

1485
01:15:06,078 --> 01:15:13,759
and we do like copy all up to and

1486
01:15:09,738 --> 01:15:15,888
including so when we do that stuff and

1487
01:15:13,760 --> 01:15:19,429
we come through here and then we do like

1488
01:15:15,889 --> 01:15:21,559
the alignment points right we need some

1489
01:15:19,429 --> 01:15:24,230
way of skipping over the alignment point

1490
01:15:21,559 --> 01:15:27,020
stuff because that sort of gets

1491
01:15:24,229 --> 01:15:30,979
rewritten because that's the part that

1492
01:15:27,020 --> 01:15:32,480
we edit you know in a way so we have to

1493
01:15:30,979 --> 01:15:34,069
kind of figure out what should be

1494
01:15:32,479 --> 01:15:36,589
happening there there's a couple

1495
01:15:34,069 --> 01:15:37,609
different ways we could do that but we

1496
01:15:36,590 --> 01:15:40,010
need to figure out what's going on there

1497
01:15:37,609 --> 01:15:41,569
so when we do copy all up to and

1498
01:15:40,010 --> 01:15:44,829
including there we need like a way to

1499
01:15:41,569 --> 01:15:44,828
say in here

1500
01:15:47,569 --> 01:16:00,929
this is not right this actually has to

1501
01:15:51,779 --> 01:16:02,998
be so that semicolon we need to copy up

1502
01:16:00,929 --> 01:16:04,828
to and include the semicolon but what we

1503
01:16:02,998 --> 01:16:08,010
need to do is make sure we skip anything

1504
01:16:04,828 --> 01:16:09,779
that we actually didn't want to save if

1505
01:16:08,010 --> 01:16:13,619
that makes sense and in fact if we

1506
01:16:09,779 --> 01:16:15,670
wanted to I guess we could not copy all

1507
01:16:13,618 --> 01:16:18,759
up to and including

1508
01:16:15,670 --> 01:16:18,760
[Music]

1509
01:16:33,449 --> 01:16:38,289
so again all I'm really trying to figure

1510
01:16:36,369 --> 01:16:39,819
out is in the alignment there it's like

1511
01:16:38,289 --> 01:16:41,470
well I want to make sure I copy

1512
01:16:39,819 --> 01:16:46,239
everything but for like the alignment

1513
01:16:41,470 --> 01:16:51,220
stuff I need to make sure that I copy as

1514
01:16:46,239 --> 01:16:53,649
much as goes on in there like this may

1515
01:16:51,220 --> 01:16:55,030
have to get rewritten if this and like

1516
01:16:53,649 --> 01:16:57,909
what if that align appoint got like

1517
01:16:55,029 --> 01:17:03,369
deleted is the thing I'm thinking then

1518
01:16:57,909 --> 01:17:06,099
there wouldn't be a semicolon so we

1519
01:17:03,369 --> 01:17:10,630
would have to advance to the semicolon

1520
01:17:06,100 --> 01:17:14,950
which is harder to do I think so this is

1521
01:17:10,630 --> 01:17:17,350
a little Squinkie I'm not sure how I

1522
01:17:14,949 --> 01:17:22,019
feel about it but I guess we'll cross

1523
01:17:17,350 --> 01:17:22,020
that bridge when we come to it

1524
01:17:25,529 --> 01:17:33,550
yeah I guess uh to begin out here to

1525
01:17:30,310 --> 01:17:37,900
like all this stuff should be fine I

1526
01:17:33,550 --> 01:17:42,039
think the include directive we've never

1527
01:17:37,899 --> 01:17:43,269
used and we would have to do some

1528
01:17:42,039 --> 01:17:45,489
special handling to make sure that it

1529
01:17:43,270 --> 01:17:47,530
recopy the hht is properly I think

1530
01:17:45,489 --> 01:17:50,380
although I guess not because it looks

1531
01:17:47,529 --> 01:17:51,969
like that would just work so in here we

1532
01:17:50,380 --> 01:17:56,980
just need to make sure that we save the

1533
01:17:51,970 --> 01:17:59,199
hht context and then restore it so I

1534
01:17:56,979 --> 01:18:03,789
think all we have to do there is say

1535
01:17:59,199 --> 01:18:07,409
look the hhd context stuff in here we're

1536
01:18:03,789 --> 01:18:12,119
gonna have a stream for hht out and

1537
01:18:07,409 --> 01:18:16,359
we're going to have a token position so

1538
01:18:12,119 --> 01:18:18,159
if you look inside the tokenizer at

1539
01:18:16,359 --> 01:18:24,729
where these things are being recorded

1540
01:18:18,159 --> 01:18:26,500
you can see that it's got a an input

1541
01:18:24,729 --> 01:18:30,699
string so it would have a care pointer

1542
01:18:26,500 --> 01:18:33,189
so it would have a like hht copy point

1543
01:18:30,699 --> 01:18:38,529
or something I think that's all we would

1544
01:18:33,189 --> 01:18:41,099
really need to save so if we just get

1545
01:18:38,529 --> 01:18:41,099
rid of this

1546
01:18:55,060 --> 01:19:01,610
that would just tell us look these two

1547
01:18:57,649 --> 01:19:04,609
things are you know all we're using to

1548
01:19:01,609 --> 01:19:07,849
handle that we're you know we're we're

1549
01:19:04,609 --> 01:19:09,679
sort of moving that along so all we

1550
01:19:07,850 --> 01:19:13,670
really shouldn't have to do here is with

1551
01:19:09,680 --> 01:19:16,840
the hht out in the HD copy point those

1552
01:19:13,670 --> 01:19:22,010
just needs to get saved and restored now

1553
01:19:16,840 --> 01:19:23,390
the problem that I would see is I don't

1554
01:19:22,010 --> 01:19:27,289
know what happens if you include the

1555
01:19:23,390 --> 01:19:29,810
same hht multiple times because the

1556
01:19:27,289 --> 01:19:34,010
rewrites would like conflict with each

1557
01:19:29,810 --> 01:19:36,710
other so but I'm just gonna say look

1558
01:19:34,010 --> 01:19:37,789
that's your problem if you use this

1559
01:19:36,710 --> 01:19:40,399
feature you better know what you're

1560
01:19:37,789 --> 01:19:49,819
doing um so all I really need to do here

1561
01:19:40,399 --> 01:19:54,589
is say look this stuff's just getting

1562
01:19:49,819 --> 01:19:59,619
saved and restored my dude so that's

1563
01:19:54,590 --> 01:19:59,619
what's just what's happening I and so

1564
01:20:01,420 --> 01:20:12,859
done and then we'll just clear them and

1565
01:20:09,310 --> 01:20:16,690
go so this would just allow us to sort

1566
01:20:12,859 --> 01:20:19,039
of bracket an hht inclusion by saying

1567
01:20:16,689 --> 01:20:22,009
look we're gonna have to do a new stream

1568
01:20:19,039 --> 01:20:25,310
for this because the different hht so

1569
01:20:22,010 --> 01:20:29,780
you know act accordingly everything else

1570
01:20:25,310 --> 01:20:33,170
should just work I think and then at the

1571
01:20:29,779 --> 01:20:37,840
end we just need a copy all input up to

1572
01:20:33,170 --> 01:20:40,699
and including to finish things off right

1573
01:20:37,840 --> 01:20:43,579
now the problem is if we encountered a

1574
01:20:40,699 --> 01:20:46,670
parse error we probably don't want to do

1575
01:20:43,579 --> 01:20:49,600
anything so we probably want to do

1576
01:20:46,670 --> 01:20:49,600
something like this

1577
01:20:51,760 --> 01:20:59,000
meaning you know if something in here

1578
01:20:56,840 --> 01:21:00,619
triggering an error don't save the

1579
01:20:59,000 --> 01:21:03,289
changes back to agencies because we just

1580
01:21:00,618 --> 01:21:04,939
don't know what we would actually be

1581
01:21:03,289 --> 01:21:06,979
creating in that case but it would

1582
01:21:04,939 --> 01:21:09,799
probably be erroneous and we'd just be

1583
01:21:06,979 --> 01:21:13,388
corrupting the file so if the file did

1584
01:21:09,800 --> 01:21:18,199
not parse completely correctly then

1585
01:21:13,389 --> 01:21:23,539
don't write the changes back that we

1586
01:21:18,198 --> 01:21:27,558
encountered right so I think that's all

1587
01:21:23,539 --> 01:21:30,618
we really need to do there and similarly

1588
01:21:27,559 --> 01:21:33,770
this doesn't really need to happen if

1589
01:21:30,618 --> 01:21:37,009
we're not yeah this only occurs in this

1590
01:21:33,770 --> 01:21:39,440
one case as well um so I think that's

1591
01:21:37,010 --> 01:21:41,539
what we want to do and we would just say

1592
01:21:39,439 --> 01:21:43,609
that last token I mean I could even do

1593
01:21:41,539 --> 01:21:47,149
that here I guess because we have like

1594
01:21:43,609 --> 01:21:49,549
whatever token we actually saw last so

1595
01:21:47,149 --> 01:21:55,698
basically we would say at the very end

1596
01:21:49,550 --> 01:21:59,650
make sure you copy that token and then I

1597
01:21:55,698 --> 01:21:59,649
think we're good I think

1598
01:22:07,229 --> 01:22:11,759
so the only thing that I'm not sure

1599
01:22:08,880 --> 01:22:14,460
about is I feel like maybe right here we

1600
01:22:11,760 --> 01:22:16,940
would have to do it as well so when we

1601
01:22:14,460 --> 01:22:21,569
come down into here and we're ready to

1602
01:22:16,939 --> 01:22:22,799
basically token as a separate thing we

1603
01:22:21,569 --> 01:22:25,738
might have to no I guess you wouldn't

1604
01:22:22,800 --> 01:22:29,610
have to because we will just restore our

1605
01:22:25,738 --> 01:22:31,408
state and continue on so it's a little

1606
01:22:29,609 --> 01:22:33,359
squeaky I've never really done code that

1607
01:22:31,408 --> 01:22:34,649
does this rewrite thing before so you

1608
01:22:33,359 --> 01:22:37,920
know I'm still kind of learning as I go

1609
01:22:34,649 --> 01:22:40,559
in terms of how I what I like in this

1610
01:22:37,920 --> 01:22:43,590
case but I think that should basically

1611
01:22:40,560 --> 01:22:46,320
do it so at that point we're really just

1612
01:22:43,590 --> 01:22:48,569
down to this function and what we want

1613
01:22:46,319 --> 01:22:52,408
to do is we want to copy everything that

1614
01:22:48,569 --> 01:22:53,849
we see exactly as it says so in here I'm

1615
01:22:52,408 --> 01:22:58,738
just gonna do a check

1616
01:22:53,849 --> 01:23:04,828
does the hht out exists right I just

1617
01:22:58,738 --> 01:23:10,738
want to see excuse me please stuffy

1618
01:23:04,828 --> 01:23:12,719
today if the HST out exists I'm going to

1619
01:23:10,738 --> 01:23:18,169
copy into it so I'm just gonna basically

1620
01:23:12,719 --> 01:23:18,170
like loop over everything that I've got

1621
01:23:19,969 --> 01:23:29,368
and just plunk it in if I'm not mistaken

1622
01:23:25,069 --> 01:23:35,059
then inside the stream you can just push

1623
01:23:29,368 --> 01:23:39,149
junk onto it right so this append chunk

1624
01:23:35,060 --> 01:23:42,920
is all I really need to do what I want

1625
01:23:39,149 --> 01:23:50,339
to do right so you say look put this

1626
01:23:42,920 --> 01:23:51,929
chunk on there and call it a day since I

1627
01:23:50,340 --> 01:23:54,210
know that all of this memory stays

1628
01:23:51,929 --> 01:23:56,699
around I don't even have to copy it

1629
01:23:54,210 --> 01:23:58,260
right so it's very efficient all I'm

1630
01:23:56,698 --> 01:24:01,158
doing is saying look append to this

1631
01:23:58,260 --> 01:24:01,159
chunk to the stream

1632
01:24:05,989 --> 01:24:15,559
wear whatever the token pointer is it's

1633
01:24:11,659 --> 01:24:18,739
gonna be apologies for not remembering

1634
01:24:15,560 --> 01:24:19,580
what the token struck look like text

1635
01:24:18,739 --> 01:24:22,699
there you go

1636
01:24:19,579 --> 01:24:26,300
so token text it's basically just gonna

1637
01:24:22,699 --> 01:24:28,909
be whatever the token text data pointer

1638
01:24:26,300 --> 01:24:32,710
is plus the count pointer that's where

1639
01:24:28,909 --> 01:24:35,479
we end and in fact I could I can do this

1640
01:24:32,710 --> 01:24:37,670
as an intermediate computation because

1641
01:24:35,479 --> 01:24:40,369
I'm gonna want to do a check so I'm

1642
01:24:37,670 --> 01:24:44,630
gonna take the end and say that's where

1643
01:24:40,369 --> 01:24:50,390
we're at I'm going to say that the start

1644
01:24:44,630 --> 01:24:52,699
is just context hht copy point and so I

1645
01:24:50,390 --> 01:24:55,869
want to copy between these two but I'd

1646
01:24:52,699 --> 01:24:59,840
like to check to make sure before I do

1647
01:24:55,869 --> 01:25:04,010
that the start is less than the ends

1648
01:24:59,840 --> 01:25:13,220
right assuming that it actually is then

1649
01:25:04,010 --> 01:25:16,039
I'm going to do the work and when I do

1650
01:25:13,220 --> 01:25:18,230
the work I'm going to say the end - to

1651
01:25:16,039 --> 01:25:20,539
start is the size and the start is the

1652
01:25:18,229 --> 01:25:22,129
pointer and you can see this is really

1653
01:25:20,539 --> 01:25:24,220
kind of elegant the way this ends up

1654
01:25:22,130 --> 01:25:28,190
working we've loaded a file into memory

1655
01:25:24,220 --> 01:25:32,180
we're effectively just making a chunk

1656
01:25:28,189 --> 01:25:35,089
list that says grab these blocks and

1657
01:25:32,180 --> 01:25:36,440
copy them in but later so I'm not even

1658
01:25:35,090 --> 01:25:38,150
doing it yeah I'm just building up that

1659
01:25:36,439 --> 01:25:40,069
list as I parse through and then I've

1660
01:25:38,149 --> 01:25:41,989
got some insertions that I'm gonna do

1661
01:25:40,069 --> 01:25:45,769
where I'm gonna add blocks that never

1662
01:25:41,989 --> 01:25:49,939
existed in there right to represent my

1663
01:25:45,770 --> 01:25:53,000
new data and that's the entirety of the

1664
01:25:49,939 --> 01:25:54,589
of the process right and we don't ever

1665
01:25:53,000 --> 01:26:00,109
have to do any dipping of it ourselves

1666
01:25:54,590 --> 01:26:01,940
because we know that the diff that we do

1667
01:26:00,109 --> 01:26:08,809
at the end will completely take care of

1668
01:26:01,939 --> 01:26:11,589
that right so it's pretty nice seems

1669
01:26:08,810 --> 01:26:11,590
pretty good

1670
01:26:11,788 --> 01:26:15,939
and I feel like it's actually a lot

1671
01:26:14,679 --> 01:26:17,469
better than the way we're rewriting our

1672
01:26:15,939 --> 01:26:18,638
hhas right now I almost feel like we

1673
01:26:17,469 --> 01:26:22,090
should probably do something similar to

1674
01:26:18,639 --> 01:26:25,239
that for the hhas in the future where

1675
01:26:22,090 --> 01:26:27,038
instead of having the track like do

1676
01:26:25,238 --> 01:26:29,618
these tag arrays match or whatever we

1677
01:26:27,038 --> 01:26:32,920
just take the block that's the entire

1678
01:26:29,618 --> 01:26:34,868
back side of the HHA that we would have

1679
01:26:32,920 --> 01:26:37,029
written and we say does it differ from

1680
01:26:34,868 --> 01:26:39,189
the one that's in there right now and if

1681
01:26:37,029 --> 01:26:41,319
it doesn't we don't rewrite it that's

1682
01:26:39,189 --> 01:26:44,498
like way better because it's a lot more

1683
01:26:41,319 --> 01:26:46,328
foolproof and off we go

1684
01:26:44,498 --> 01:26:48,639
so I think that's the thing that we

1685
01:26:46,328 --> 01:26:51,099
really want to do here and I should

1686
01:26:48,639 --> 01:26:57,309
probably make that change I'm gonna

1687
01:26:51,099 --> 01:27:00,119
actually write it in here because this

1688
01:26:57,309 --> 01:27:00,119
is where that should go

1689
01:27:55,539 --> 01:28:00,170
all right

1690
01:27:57,500 --> 01:28:01,640
because yeah like we just if any change

1691
01:28:00,170 --> 01:28:03,890
occurred at all then we want to rewrite

1692
01:28:01,640 --> 01:28:11,210
the whole thing we don't rewrite only

1693
01:28:03,890 --> 01:28:15,050
portions of the header so as far as I

1694
01:28:11,210 --> 01:28:18,920
can think I feel like all we really have

1695
01:28:15,050 --> 01:28:21,829
to do is make sure nobody reorganizes

1696
01:28:18,920 --> 01:28:23,750
things in the asset list if you haven't

1697
01:28:21,829 --> 01:28:25,159
edited anything which if you haven't

1698
01:28:23,750 --> 01:28:27,380
added anything then no one should have

1699
01:28:25,159 --> 01:28:30,500
done anything to them so I feel like it

1700
01:28:27,380 --> 01:28:32,270
should just work in that case so I don't

1701
01:28:30,500 --> 01:28:34,600
know like we can play with that a little

1702
01:28:32,270 --> 01:28:36,980
bit later on as we fine-tune the system

1703
01:28:34,600 --> 01:28:38,990
for now we don't care

1704
01:28:36,979 --> 01:28:43,159
that's that of a different problem for a

1705
01:28:38,989 --> 01:28:48,139
different day all right so if I now go

1706
01:28:43,159 --> 01:28:50,210
ahead and run this thing of course we've

1707
01:28:48,140 --> 01:28:53,240
got a few things to fill out here this

1708
01:28:50,210 --> 01:28:57,260
is a false this does not rewrite changes

1709
01:28:53,239 --> 01:29:01,069
obviously so all I really want to do

1710
01:28:57,260 --> 01:29:03,440
here is get to the point where we are

1711
01:29:01,069 --> 01:29:09,229
oops that's a care star I didn't mean

1712
01:29:03,439 --> 01:29:10,609
for that to be a care star I just have a

1713
01:29:09,229 --> 01:29:12,889
few things I still got to implement that

1714
01:29:10,609 --> 01:29:18,519
we didn't put in here yet so let me go

1715
01:29:12,890 --> 01:29:18,520
ahead and skip those going all right

1716
01:29:20,060 --> 01:29:27,220
is passed directly so it's not an arrow

1717
01:29:23,739 --> 01:29:27,219
what else we got

1718
01:29:28,869 --> 01:29:44,920
hht out spelled wrong well capitalized

1719
01:29:34,279 --> 01:29:48,170
wrong ah yeah okay so this is the

1720
01:29:44,920 --> 01:29:50,060
alignment point part this so we aren't

1721
01:29:48,170 --> 01:29:52,909
really doing this yet but this is what

1722
01:29:50,060 --> 01:29:56,300
you would be checking so I can leave

1723
01:29:52,909 --> 01:29:58,939
that in there when you do a price hht

1724
01:29:56,300 --> 01:30:02,560
you've got a pass now whether you're

1725
01:29:58,939 --> 01:30:02,559
saving changes so that's fine

1726
01:30:03,409 --> 01:30:09,949
this needs to take the context right and

1727
01:30:07,460 --> 01:30:15,800
it I don't remember if it takes anything

1728
01:30:09,949 --> 01:30:19,369
else nope so it's just the context and

1729
01:30:15,800 --> 01:30:21,920
the token and then down here we've got a

1730
01:30:19,369 --> 01:30:25,430
few things to deal with the temporary

1731
01:30:21,920 --> 01:30:27,560
nough is actually here right and then

1732
01:30:25,430 --> 01:30:30,530
we've got copy stream to buffer we have

1733
01:30:27,560 --> 01:30:32,720
not implemented and memory is equal

1734
01:30:30,529 --> 01:30:34,609
between two buffers we actually have

1735
01:30:32,720 --> 01:30:38,360
implemented sort of but we just need the

1736
01:30:34,609 --> 01:30:40,729
cracking call for it so if I go over to

1737
01:30:38,359 --> 01:30:43,189
memory is equal like all we need to do

1738
01:30:40,729 --> 01:30:45,079
is just add the call that basically says

1739
01:30:43,189 --> 01:30:47,479
here's how you unpack those into

1740
01:30:45,079 --> 01:30:50,869
something that this can use so if we do

1741
01:30:47,479 --> 01:30:54,289
like past two buffers then the result is

1742
01:30:50,869 --> 01:30:58,760
just the same exact call memory is equal

1743
01:30:54,289 --> 01:31:03,409
file buffer count file buffer data HIV

1744
01:30:58,760 --> 01:31:06,079
contents data right and the only thing

1745
01:31:03,409 --> 01:31:09,170
we have to do is check first before we

1746
01:31:06,079 --> 01:31:10,819
do that that they're the same so we do

1747
01:31:09,170 --> 01:31:13,579
file buffer count equals of the same

1748
01:31:10,819 --> 01:31:17,389
size so we do file buffer count equals

1749
01:31:13,579 --> 01:31:19,819
HSE contents count that says look don't

1750
01:31:17,390 --> 01:31:20,630
do the next part if these buffers aren't

1751
01:31:19,819 --> 01:31:22,519
the same size

1752
01:31:20,630 --> 01:31:23,840
if they are the same size check to see

1753
01:31:22,520 --> 01:31:25,190
whether their contents are the same and

1754
01:31:23,840 --> 01:31:30,350
then we're done

1755
01:31:25,189 --> 01:31:32,949
so that should all be fine let's see hht

1756
01:31:30,350 --> 01:31:42,789
out must have an arrow and you're

1757
01:31:32,949 --> 01:31:45,399
right it does not sure what it's

1758
01:31:42,789 --> 01:31:51,760
complaining about here that's just a

1759
01:31:45,399 --> 01:31:55,599
regular pointer already so is that copy

1760
01:31:51,760 --> 01:31:58,119
stream to buffer isn't implemented yet

1761
01:31:55,600 --> 01:31:58,870
nor is that so I think we're now just

1762
01:31:58,119 --> 01:32:02,559
down to the things we haven't

1763
01:31:58,869 --> 01:32:04,359
implemented inside stream copy stream to

1764
01:32:02,560 --> 01:32:08,890
buffer should be pretty straightforward

1765
01:32:04,359 --> 01:32:11,799
right the only thing we really need to

1766
01:32:08,890 --> 01:32:14,170
do here is copy I believe we have a like

1767
01:32:11,800 --> 01:32:19,840
right stream or something like this

1768
01:32:14,170 --> 01:32:22,449
stream dump stream to CRT that's

1769
01:32:19,840 --> 01:32:25,900
basically the same thing right Asset

1770
01:32:22,449 --> 01:32:27,970
stream basically the same thing so you

1771
01:32:25,899 --> 01:32:32,319
know this is all we're doing so it's

1772
01:32:27,970 --> 01:32:40,510
really very very simple so you can see

1773
01:32:32,319 --> 01:32:44,469
here look we just have a data offset all

1774
01:32:40,510 --> 01:32:53,320
we need to do is start at zero stream

1775
01:32:44,470 --> 01:32:58,690
through all the chunks so we basically

1776
01:32:53,319 --> 01:33:03,489
say the source in this case we loop over

1777
01:32:58,689 --> 01:33:06,279
every chunk that's in the source we want

1778
01:33:03,489 --> 01:33:12,250
to copy the contents of that chunk so we

1779
01:33:06,279 --> 01:33:14,649
want to say look copy this thing into

1780
01:33:12,250 --> 01:33:19,000
the correct portion of the buffer so we

1781
01:33:14,649 --> 01:33:24,369
just say it's the destination plus

1782
01:33:19,000 --> 01:33:26,140
however far are we going and then we

1783
01:33:24,369 --> 01:33:28,720
just advance so we're just looping

1784
01:33:26,140 --> 01:33:32,980
through each chunk doing the copy just

1785
01:33:28,720 --> 01:33:34,780
like right and like I said we've done

1786
01:33:32,979 --> 01:33:36,909
this in a fairly elegant way because in

1787
01:33:34,779 --> 01:33:39,189
some sense we have avoided ever having

1788
01:33:36,909 --> 01:33:41,050
to do intermediate copies we're just

1789
01:33:39,189 --> 01:33:43,329
doing the final copy into one big buffer

1790
01:33:41,050 --> 01:33:45,730
we never did copy into smaller buffers

1791
01:33:43,329 --> 01:33:46,840
because these chunks just point directly

1792
01:33:45,729 --> 01:33:48,519
into the source

1793
01:33:46,840 --> 01:33:52,329
so it's just reassembling the source

1794
01:33:48,520 --> 01:33:55,270
buffer right um so what we want to do

1795
01:33:52,329 --> 01:33:57,850
here also is assert that we wouldn't

1796
01:33:55,270 --> 01:33:59,680
overflow so when we come in here we want

1797
01:33:57,850 --> 01:34:04,690
to say you know make sure the total size

1798
01:33:59,680 --> 01:34:08,920
of the source is less than or equal to

1799
01:34:04,689 --> 01:34:13,059
the size of the buffer right and so we

1800
01:34:08,920 --> 01:34:14,829
would just say you know don't don't let

1801
01:34:13,060 --> 01:34:15,880
you know if we're about to like romp

1802
01:34:14,829 --> 01:34:17,289
over this thing

1803
01:34:15,880 --> 01:34:21,310
let the programmer know they screwed it

1804
01:34:17,289 --> 01:34:22,840
up right and I'm not gonna have it clamp

1805
01:34:21,310 --> 01:34:24,489
you know we could have had it clamp here

1806
01:34:22,840 --> 01:34:26,829
where I say look just copy as much as

1807
01:34:24,488 --> 01:34:28,389
you can I'm not gonna do that because I

1808
01:34:26,829 --> 01:34:29,769
don't have a use case for that yet so I

1809
01:34:28,390 --> 01:34:31,450
don't want to introduce I just want to

1810
01:34:29,770 --> 01:34:32,980
make it a hard error like if you ever

1811
01:34:31,449 --> 01:34:35,019
call this thing and you didn't give it

1812
01:34:32,979 --> 01:34:38,769
enough memory it's just a hard air and

1813
01:34:35,020 --> 01:34:40,270
you screwed up right because there's no

1814
01:34:38,770 --> 01:34:43,420
case I can think of where that's gonna

1815
01:34:40,270 --> 01:34:52,320
be a situation I don't know is this this

1816
01:34:43,420 --> 01:34:52,319
count yeah sorry it's count all right um

1817
01:34:52,619 --> 01:34:59,819
can I convert just hmm

1818
01:35:03,359 --> 01:35:08,130
okay that's fine

1819
01:35:21,838 --> 01:35:26,498
fine

1820
01:35:23,078 --> 01:35:28,588
everyone's happy now hopefully and then

1821
01:35:26,498 --> 01:35:31,898
when they come through here we can just

1822
01:35:28,588 --> 01:35:33,849
yeah well actually I guess there's

1823
01:35:31,899 --> 01:35:34,359
really nothing that you have to do it's

1824
01:35:33,849 --> 01:35:37,599
just done

1825
01:35:34,359 --> 01:35:39,849
I would like however when we get out of

1826
01:35:37,599 --> 01:35:41,979
here I would like to reset these so like

1827
01:35:39,849 --> 01:35:46,059
when we get to here I would like to set

1828
01:35:41,979 --> 01:35:47,949
this to zero just to make sure like

1829
01:35:46,059 --> 01:35:49,689
basically that we will crash immediately

1830
01:35:47,948 --> 01:35:51,668
if someone was trying to write to this

1831
01:35:49,689 --> 01:35:54,189
outside of the valid region which is

1832
01:35:51,668 --> 01:35:55,779
only inside this function so I really

1833
01:35:54,189 --> 01:35:57,548
don't want to leave those as pointers

1834
01:35:55,779 --> 01:35:59,288
hanging around into memory because that

1835
01:35:57,548 --> 01:36:00,668
memory will actually still be valid and

1836
01:35:59,288 --> 01:36:02,438
people could be writing into it and I

1837
01:36:00,668 --> 01:36:03,998
would never know so that could have like

1838
01:36:02,439 --> 01:36:05,289
a subtle bug there that Disney wouldn't

1839
01:36:03,998 --> 01:36:08,260
crash it wouldn't do anything it would

1840
01:36:05,288 --> 01:36:09,958
just kind of like silently fail which is

1841
01:36:08,260 --> 01:36:12,998
not a great like you really don't want

1842
01:36:09,958 --> 01:36:16,238
to have silent failures that's not a

1843
01:36:12,998 --> 01:36:18,068
very good position to be in so I want to

1844
01:36:16,238 --> 01:36:21,279
make sure that that does not happen to

1845
01:36:18,069 --> 01:36:25,079
the extent that I can so let's go ahead

1846
01:36:21,279 --> 01:36:29,048
and yeah and make that make that work

1847
01:36:25,078 --> 01:36:31,418
all right so where else are we at cannot

1848
01:36:29,048 --> 01:36:39,458
convert from you eight to care that's

1849
01:36:31,418 --> 01:36:41,878
totally fine that would also have been

1850
01:36:39,458 --> 01:36:41,878
fixed

1851
01:36:44,038 --> 01:36:53,408
push buffer it's not supposed to take

1852
01:36:47,198 --> 01:36:55,958
one argument what's why is it saying

1853
01:36:53,408 --> 01:36:58,469
that let's take a look at what push

1854
01:36:55,958 --> 01:36:58,469
buffer does

1855
01:37:04,210 --> 01:37:16,329
it's still like a macro for push why

1856
01:37:11,560 --> 01:37:22,239
does that think is it the is there an

1857
01:37:16,329 --> 01:37:24,069
error before it no so it just says no

1858
01:37:22,238 --> 01:37:25,539
reloaded function takes one arguments

1859
01:37:24,069 --> 01:37:27,609
atomic replace file contest on the movie

1860
01:37:25,539 --> 01:37:30,069
so why does it think there's only one

1861
01:37:27,609 --> 01:37:33,189
argument to push buffer when there's two

1862
01:37:30,069 --> 01:37:33,759
arguments to push buffer and I missing

1863
01:37:33,189 --> 01:37:36,309
something

1864
01:37:33,760 --> 01:37:37,659
oh wait so there wasn't in there error

1865
01:37:36,310 --> 01:37:41,830
there why did it look like there weren't

1866
01:37:37,658 --> 01:37:43,929
two I was like I that the error was

1867
01:37:41,829 --> 01:37:46,029
exactly what I just fixed or something

1868
01:37:43,929 --> 01:37:48,130
like it but never even have it so the

1869
01:37:46,029 --> 01:37:54,219
only thing we're missing is atomic

1870
01:37:48,130 --> 01:37:57,219
replace file contents so yeah I just

1871
01:37:54,219 --> 01:38:02,020
need to go in there to the win32 side of

1872
01:37:57,219 --> 01:38:04,329
things and add that in so let's take a

1873
01:38:02,020 --> 01:38:10,469
look at how we might do that so at the

1874
01:38:04,329 --> 01:38:10,469
moment we've got our where is it

1875
01:38:17,529 --> 01:38:25,029
here's our write data to file and so we

1876
01:38:20,710 --> 01:38:26,498
more or less want this but instead of

1877
01:38:25,029 --> 01:38:32,018
write data to file what we've got here

1878
01:38:26,498 --> 01:38:35,710
is like platform atomic replace file

1879
01:38:32,019 --> 01:38:40,360
contents and that's going to take one of

1880
01:38:35,710 --> 01:38:49,029
these platform file info trucks and it's

1881
01:38:40,359 --> 01:38:50,498
gonna take buffer well let's unpack it

1882
01:38:49,029 --> 01:38:53,408
for now

1883
01:38:50,498 --> 01:38:59,050
and that's going to be called platform

1884
01:38:53,408 --> 01:39:01,210
atomic replace file contents right and

1885
01:38:59,050 --> 01:39:03,579
so here we get HD contents I'm just

1886
01:39:01,210 --> 01:39:08,368
going to say give it the count give it

1887
01:39:03,578 --> 01:39:11,099
the data and then that's all done the

1888
01:39:08,368 --> 01:39:16,389
platform layer we'll have to have it so

1889
01:39:11,099 --> 01:39:21,969
right that's gonna go there and the

1890
01:39:16,389 --> 01:39:29,409
win32 side of things in went through to

1891
01:39:21,969 --> 01:39:32,760
hand-made when we actually fill this

1892
01:39:29,408 --> 01:39:32,759
stuff out like you can see here

1893
01:39:38,179 --> 01:39:47,010
we're gonna have to have one

1894
01:39:41,279 --> 01:39:53,329
so in win32 right data to file which is

1895
01:39:47,010 --> 01:39:53,329
here I'm gonna just copy that

1896
01:39:58,939 --> 01:40:07,079
and now we've got the setup for it but

1897
01:40:04,649 --> 01:40:10,439
we haven't actually done anything that's

1898
01:40:07,079 --> 01:40:12,329
actually fine I'm just gonna have a not

1899
01:40:10,439 --> 01:40:18,988
implemented throating here and then

1900
01:40:12,329 --> 01:40:23,119
we're gonna call it a day so looking at

1901
01:40:18,988 --> 01:40:26,339
this it says too few arguments for call

1902
01:40:23,119 --> 01:40:28,859
is that actually true

1903
01:40:26,340 --> 01:40:30,960
did I accidentally leave an extra

1904
01:40:28,859 --> 01:40:34,189
argument in there when I copied it

1905
01:40:30,960 --> 01:40:44,429
oops there's the problem right there

1906
01:40:34,189 --> 01:40:46,738
that up what's good um so now I think

1907
01:40:44,429 --> 01:40:49,619
we're pretty good to go I think

1908
01:40:46,738 --> 01:40:54,839
everything should be fine so if I run

1909
01:40:49,619 --> 01:40:57,899
the game now I have no idea why there

1910
01:40:54,840 --> 01:40:59,940
was a breakpoint there if I run the game

1911
01:40:57,899 --> 01:41:02,250
now in theory you know if I come out

1912
01:40:59,939 --> 01:41:05,609
here and we've got the import and the

1913
01:41:02,250 --> 01:41:07,800
import and save these are not lit the

1914
01:41:05,609 --> 01:41:10,380
way that they should be so we should

1915
01:41:07,800 --> 01:41:12,750
probably fix those but we'll do that

1916
01:41:10,380 --> 01:41:14,400
later when I actually click on the

1917
01:41:12,750 --> 01:41:16,050
import and save you know we should have

1918
01:41:14,399 --> 01:41:18,689
gotten here and we did which is pretty

1919
01:41:16,050 --> 01:41:20,760
cool but of course you know we're at a

1920
01:41:18,689 --> 01:41:22,649
place where we didn't actually write

1921
01:41:20,760 --> 01:41:23,880
anything we just produced the thing we

1922
01:41:22,649 --> 01:41:25,799
would have written to the file but then

1923
01:41:23,880 --> 01:41:28,679
we call it a platform layer function it

1924
01:41:25,800 --> 01:41:30,029
doesn't actually exist if I try to look

1925
01:41:28,679 --> 01:41:32,609
at what's going on there I could

1926
01:41:30,029 --> 01:41:38,488
probably do that in debug mode a little

1927
01:41:32,609 --> 01:41:41,069
easier than in release mode but really

1928
01:41:38,488 --> 01:41:43,559
all I want to see here is what is the

1929
01:41:41,069 --> 01:41:46,139
you know what what are what is the thing

1930
01:41:43,560 --> 01:41:48,810
we actually produced when we called copy

1931
01:41:46,140 --> 01:41:49,890
stream to buffer so I think I can

1932
01:41:48,810 --> 01:42:02,430
actually

1933
01:41:49,890 --> 01:42:07,470
this right and say in here oh okay did I

1934
01:42:02,430 --> 01:42:09,270
not set the breakpoint I can't find it

1935
01:42:07,470 --> 01:42:11,039
so probably what happened is it got

1936
01:42:09,270 --> 01:42:23,340
optimized out in a way that it couldn't

1937
01:42:11,039 --> 01:42:25,010
find yeah so it probably just it

1938
01:42:23,340 --> 01:42:27,329
probably just eliminated this

1939
01:42:25,010 --> 01:42:28,980
unfortunately I mean not eliminated it

1940
01:42:27,329 --> 01:42:32,939
but just inlined it in a way that it

1941
01:42:28,979 --> 01:42:35,639
can't set the breakpoint anymore which

1942
01:42:32,939 --> 01:42:36,989
makes it less fun fine I will run it in

1943
01:42:35,640 --> 01:42:40,800
debug mode as much as a pain in the butt

1944
01:42:36,989 --> 01:42:47,159
as that is that's just where we're at

1945
01:42:40,800 --> 01:42:55,650
alright so off we go I'll run it and now

1946
01:42:47,159 --> 01:42:58,680
I will ask it to resave the file so and

1947
01:42:55,649 --> 01:43:07,949
now hopefully a wait I should have set

1948
01:42:58,680 --> 01:43:14,670
the breakpoint first try it one more

1949
01:43:07,949 --> 01:43:17,609
time so now I should hopefully you get a

1950
01:43:14,670 --> 01:43:19,949
breakpoint there and I do so when we pop

1951
01:43:17,609 --> 01:43:22,649
out of that routine I should now be able

1952
01:43:19,949 --> 01:43:24,300
to look at the hhd contents and see

1953
01:43:22,649 --> 01:43:25,739
what's in them and if they're at all

1954
01:43:24,300 --> 01:43:28,739
correct because you know maybe they're

1955
01:43:25,739 --> 01:43:32,069
completely borked so gonna go ahead and

1956
01:43:28,739 --> 01:43:37,739
say probably not not a good sign does

1957
01:43:32,069 --> 01:43:39,420
not look at all like what I wanted by

1958
01:43:37,739 --> 01:43:42,029
any stretch of the imagination and I

1959
01:43:39,420 --> 01:43:47,270
have no idea why that would look like it

1960
01:43:42,029 --> 01:43:52,109
does or why the count would be 3 right

1961
01:43:47,270 --> 01:43:54,200
so we did something really dumb but I

1962
01:43:52,109 --> 01:44:01,229
have no idea what it was

1963
01:43:54,199 --> 01:44:03,979
let's take a oh I do actually know

1964
01:44:01,229 --> 01:44:03,979
exactly what it was

1965
01:44:04,578 --> 01:44:09,840
so when we initialize the HST copy point

1966
01:44:07,828 --> 01:44:11,759
we can't initialize it to zero that's

1967
01:44:09,840 --> 01:44:13,889
just stupid and I don't know why I

1968
01:44:11,760 --> 01:44:15,570
thought we could what you actually need

1969
01:44:13,889 --> 01:44:20,909
to do is initialize it to the beginning

1970
01:44:15,569 --> 01:44:22,828
of your stream right so basically after

1971
01:44:20,908 --> 01:44:24,929
you load the file and initialize the

1972
01:44:22,828 --> 01:44:27,689
tokenizer that's when you can actually

1973
01:44:24,929 --> 01:44:35,130
look at the hhd copy point it's the

1974
01:44:27,689 --> 01:44:37,888
tokenizer first token right so whatever

1975
01:44:35,130 --> 01:44:40,500
would have come in as peak token raw as

1976
01:44:37,889 --> 01:44:43,288
the you know first thing that you would

1977
01:44:40,500 --> 01:44:47,760
have looked at that's actually the only

1978
01:44:43,288 --> 01:44:51,328
thing that we can use to start with and

1979
01:44:47,760 --> 01:44:53,820
if we didn't we are invalid right so we

1980
01:44:51,328 --> 01:44:58,799
need to actually grab that as our H as

1981
01:44:53,819 --> 01:45:00,750
our hht copy point otherwise we totally

1982
01:44:58,800 --> 01:45:04,070
don't work because we yeah I don't know

1983
01:45:00,750 --> 01:45:04,069
how we didn't just crash

1984
01:45:16,760 --> 01:45:22,390
does anyone have any idea how we didn't

1985
01:45:19,069 --> 01:45:28,309
just crash I mean how did that not crash

1986
01:45:22,390 --> 01:45:29,720
the that we must have more bugs because

1987
01:45:28,310 --> 01:45:35,120
if you look at what would have happened

1988
01:45:29,720 --> 01:45:37,310
here this would have been zero which

1989
01:45:35,119 --> 01:45:38,599
would have always been less than end we

1990
01:45:37,310 --> 01:45:41,510
would have appended a chunk that was

1991
01:45:38,600 --> 01:45:44,989
totally bogus and then from then on we

1992
01:45:41,510 --> 01:45:56,289
would have done some stuff but like how

1993
01:45:44,988 --> 01:45:56,289
did that not I I I'm at a loss there I

1994
01:45:58,090 --> 01:46:05,420
mean that would have been zero how did

1995
01:46:01,819 --> 01:46:10,579
we not end up with a totally bogus copy

1996
01:46:05,420 --> 01:46:12,230
I guess we'll find out next weekend

1997
01:46:10,579 --> 01:46:14,059
that's gonna take some device like that

1998
01:46:12,229 --> 01:46:15,979
should not have happened the way it

1999
01:46:14,060 --> 01:46:18,620
happened at all that's just totally

2000
01:46:15,979 --> 01:46:21,969
broken so the fact that that didn't

2001
01:46:18,619 --> 01:46:24,470
crash is super weird and I don't I'm

2002
01:46:21,970 --> 01:46:26,480
doing something that I didn't think I

2003
01:46:24,470 --> 01:46:33,590
was doing because there's no way that

2004
01:46:26,479 --> 01:46:36,609
should have worked right that's just

2005
01:46:33,590 --> 01:46:36,610
really really strange

2006
01:46:38,519 --> 01:46:44,050
gosh now I just I just don't know that's

2007
01:46:41,918 --> 01:46:49,198
that's really weird how is that how did

2008
01:46:44,050 --> 01:46:49,199
that work gonna have to go look into it

2009
01:46:52,979 --> 01:46:57,550
yeah so it's producing exactly the same

2010
01:46:55,988 --> 01:47:00,759
thing even without that so it's just

2011
01:46:57,550 --> 01:47:02,320
it's just it's really strange right

2012
01:47:00,760 --> 01:47:13,329
it's like it never called this or

2013
01:47:02,319 --> 01:47:14,558
something is that what happened now it's

2014
01:47:13,328 --> 01:47:22,359
calling this just fine

2015
01:47:14,559 --> 01:47:28,899
oh but hht out is not initialized all

2016
01:47:22,359 --> 01:47:31,018
right so let's right now no it's calling

2017
01:47:28,899 --> 01:47:31,019
it

2018
01:47:33,569 --> 01:47:38,069
and it's appending the chunks

2019
01:48:02,219 --> 01:48:05,219
okay

2020
01:48:08,229 --> 01:48:11,169
I'm gonna look at this sorry I know I'm

2021
01:48:10,090 --> 01:48:13,000
supposed to be done with the stream at

2022
01:48:11,170 --> 01:48:16,420
the moment but I'm really kind of

2023
01:48:13,000 --> 01:48:23,409
weirded out right now I'm mildly freaked

2024
01:48:16,420 --> 01:48:24,219
so hht out now has what on it right that

2025
01:48:23,409 --> 01:48:28,809
makes sense

2026
01:48:24,219 --> 01:48:30,850
next next that looks exactly like it

2027
01:48:28,810 --> 01:48:33,270
should I must have just a bug in the

2028
01:48:30,850 --> 01:48:33,270
copier

2029
01:48:52,130 --> 01:48:58,159
so I'm going to go ahead and assume that

2030
01:48:53,989 --> 01:49:01,699
the bug is here because let's see what

2031
01:48:58,159 --> 01:49:13,149
the total size of hehd contents is so

2032
01:49:01,699 --> 01:49:13,149
get total size is 3 how is that possible

2033
01:49:16,859 --> 01:49:27,630
yeah oh it really did get completely

2034
01:49:19,829 --> 01:49:31,470
overwritten so how did that happen we

2035
01:49:27,630 --> 01:49:36,960
never hit this case right I mean we've

2036
01:49:31,470 --> 01:49:41,190
never we've never called include so the

2037
01:49:36,960 --> 01:49:45,239
only thing that like how could that have

2038
01:49:41,189 --> 01:49:48,059
happened when did that happen that the

2039
01:49:45,239 --> 01:49:55,460
total size could have had such a

2040
01:49:48,060 --> 01:49:55,460
dramatic change to it

2041
01:50:03,059 --> 01:50:05,090
ah

2042
01:50:15,000 --> 01:50:18,920
that's the only problem right there

2043
01:50:21,729 --> 01:50:28,239
so interesting very very interesting

2044
01:50:40,130 --> 01:50:45,109
hmm so anyway inside part of a block you

2045
01:50:43,789 --> 01:50:51,198
can see what's happening here we're just

2046
01:50:45,109 --> 01:50:53,000
like cleaning up our memory that we were

2047
01:50:51,198 --> 01:50:55,029
using for the stream which we could just

2048
01:50:53,000 --> 01:50:56,719
use a different one for the screen but I

2049
01:50:55,029 --> 01:50:59,539
don't know that there's really any

2050
01:50:56,719 --> 01:51:04,340
reason to do that because we can just do

2051
01:50:59,539 --> 01:51:17,510
it in here so I think that's fine but I

2052
01:51:04,340 --> 01:51:19,340
can't think of any reason not to I do

2053
01:51:17,510 --> 01:51:22,360
want to know what we do with errors

2054
01:51:19,340 --> 01:51:26,719
I guess those just end up on the file

2055
01:51:22,359 --> 01:51:29,299
which is also fine but that's the

2056
01:51:26,719 --> 01:51:31,789
problem right there right we could also

2057
01:51:29,300 --> 01:51:35,119
just not free any of this temp memory if

2058
01:51:31,789 --> 01:51:37,039
we wanted to because we clean it all up

2059
01:51:35,119 --> 01:51:40,689
at the end but that looks like the

2060
01:51:37,039 --> 01:51:40,689
entirety of the problem there right

2061
01:51:45,599 --> 01:51:51,020
that's funny like a bug a memory bug

2062
01:51:49,439 --> 01:51:55,649
prevented us from having a memory bug

2063
01:51:51,020 --> 01:51:57,329
I'm just pretty odd all right so if I go

2064
01:51:55,649 --> 01:52:00,328
in here and just look at the copy stream

2065
01:51:57,328 --> 01:52:02,880
to buffer hopefully now we actually get

2066
01:52:00,328 --> 01:52:06,059
a real sighs and it looks like we sort

2067
01:52:02,880 --> 01:52:07,819
of do at least a little bit so if I then

2068
01:52:06,060 --> 01:52:09,750
look at the contents of this thing

2069
01:52:07,819 --> 01:52:13,349
hopefully they look somewhat like the

2070
01:52:09,750 --> 01:52:17,670
file and it does seem to look somewhat

2071
01:52:13,349 --> 01:52:20,610
like the file right in fact so much like

2072
01:52:17,670 --> 01:52:22,010
the file that it matched perfect so it

2073
01:52:20,609 --> 01:52:24,859
didn't think it needed to replace it

2074
01:52:22,010 --> 01:52:28,469
let's look at the base game same thing

2075
01:52:24,859 --> 01:52:31,769
so we're actually totally good perfect

2076
01:52:28,469 --> 01:52:34,710
we nailed it so I'll go to a quick Q&amp;A

2077
01:52:31,770 --> 01:52:36,810
now and then next week what we'll do is

2078
01:52:34,710 --> 01:52:40,230
we'll just go add the thing in that does

2079
01:52:36,810 --> 01:52:42,829
the rewrite of alignment points and I

2080
01:52:40,229 --> 01:52:42,828
think we're good to go

2081
01:53:10,069 --> 01:53:14,840
there are no questions complete silence

2082
01:53:24,039 --> 01:53:29,409
wow that's impressive ly few questions

2083
01:54:02,369 --> 01:54:05,519
do you ever write unit tests for testing

2084
01:54:04,289 --> 01:54:11,640
little functions instead of running

2085
01:54:05,520 --> 01:54:14,610
through the game when you are going to

2086
01:54:11,640 --> 01:54:18,780
be a little closer to shipping things

2087
01:54:14,609 --> 01:54:23,189
like when you're like kind of done if

2088
01:54:18,779 --> 01:54:26,759
this makes sense like if you're just

2089
01:54:23,189 --> 01:54:29,159
like I'm really sure that everything is

2090
01:54:26,760 --> 01:54:33,659
architected the way I want and I'm gonna

2091
01:54:29,159 --> 01:54:36,809
like say that this is reusable final

2092
01:54:33,659 --> 01:54:40,380
code that is what I want does does what

2093
01:54:36,810 --> 01:54:42,660
I want it doesn't how I want it then you

2094
01:54:40,380 --> 01:54:44,550
can start to pull apart a few things

2095
01:54:42,659 --> 01:54:48,180
that you think might benefit from unit

2096
01:54:44,550 --> 01:54:50,159
testing and do the unit testing I do do

2097
01:54:48,180 --> 01:54:57,270
that

2098
01:54:50,159 --> 01:54:59,460
but you know there's I guess what I

2099
01:54:57,270 --> 01:55:01,470
would say is while that is a nice thing

2100
01:54:59,460 --> 01:55:03,480
to do for code that's gonna get library

2101
01:55:01,470 --> 01:55:06,900
eyes and so you can kind of pick it

2102
01:55:03,479 --> 01:55:08,250
apart and do that - unit testing you

2103
01:55:06,899 --> 01:55:11,039
can't really rely on I've said this many

2104
01:55:08,250 --> 01:55:12,180
times if you rely on unit testing for as

2105
01:55:11,039 --> 01:55:14,039
part of your developing process you

2106
01:55:12,180 --> 01:55:18,840
probably just never be able to write a

2107
01:55:14,039 --> 01:55:20,970
game it games don't really that the hard

2108
01:55:18,840 --> 01:55:24,690
bugs that you will get in games are not

2109
01:55:20,970 --> 01:55:28,619
unit testable the easy bugs are and so

2110
01:55:24,689 --> 01:55:30,210
that's usually the problem so like while

2111
01:55:28,619 --> 01:55:32,670
it's nice to do some unit testing on

2112
01:55:30,210 --> 01:55:34,859
things that when you have some low-level

2113
01:55:32,670 --> 01:55:36,329
library stuff like our memory allocator

2114
01:55:34,859 --> 01:55:37,829
when we're totally done with it and say

2115
01:55:36,329 --> 01:55:39,510
this is f how this we could test it out

2116
01:55:37,829 --> 01:55:41,899
make sure it doesn't have any weird leak

2117
01:55:39,510 --> 01:55:45,360
cases or edge cases and things like that

2118
01:55:41,899 --> 01:55:49,079
that's just an extra layer of nice sort

2119
01:55:45,359 --> 01:55:51,239
of certainty over the top your debugging

2120
01:55:49,079 --> 01:55:53,460
skills have to be way better than the

2121
01:55:51,239 --> 01:55:54,949
kind that just say hey I'm gonna use

2122
01:55:53,460 --> 01:55:57,480
unit tests to find my bugs

2123
01:55:54,949 --> 01:55:59,460
games are way too complicated and unit

2124
01:55:57,479 --> 01:56:01,319
tests just don't work they won't find

2125
01:55:59,460 --> 01:56:03,569
the majority of the bugs in the game and

2126
01:56:01,319 --> 01:56:05,639
more importantly they won't find the

2127
01:56:03,569 --> 01:56:09,029
majority of the hard bugs in the game

2128
01:56:05,640 --> 01:56:10,829
and so you really need to be better at

2129
01:56:09,029 --> 01:56:16,170
debugging than unit testing if you're

2130
01:56:10,829 --> 01:56:18,420
gonna make a game engine you just do

2131
01:56:16,170 --> 01:56:19,679
so what I would say is they it's not

2132
01:56:18,420 --> 01:56:22,350
that unit tests aren't useful sometimes

2133
01:56:19,679 --> 01:56:24,569
they are it's more just that they're

2134
01:56:22,350 --> 01:56:32,850
they're insufficient they're not good

2135
01:56:24,569 --> 01:56:34,319
enough for a game engine now that you're

2136
01:56:32,850 --> 01:56:36,420
gonna sleep the schema industry as you

2137
01:56:34,319 --> 01:56:38,039
play I do a see game engine series this

2138
01:56:36,420 --> 01:56:40,109
basically is a C game engine series

2139
01:56:38,039 --> 01:56:41,550
there's almost no C++ in it at all if

2140
01:56:40,109 --> 01:56:44,369
you wanted to compile it entirely and

2141
01:56:41,550 --> 01:56:46,320
see there's almost nothing you'd have to

2142
01:56:44,369 --> 01:56:50,488
change it's kind of just a mechanical

2143
01:56:46,319 --> 01:56:52,259
weeks worth of work sort of cleaning

2144
01:56:50,488 --> 01:56:54,619
things but it's it is a seeing game

2145
01:56:52,260 --> 01:56:54,619
engine

2146
01:56:55,130 --> 01:57:00,449
any thoughts our hopes for C to Xcode

2147
01:56:57,600 --> 01:57:03,020
over 2022 yes my hope is that I will no

2148
01:57:00,448 --> 01:57:07,289
longer be programming in C++ by 2022

2149
01:57:03,020 --> 01:57:09,239
those are my thoughts and hopes advant

2150
01:57:07,289 --> 01:57:11,429
home when you transfer a mesh to do that

2151
01:57:09,238 --> 01:57:13,019
on the GPU if so do you load it back if

2152
01:57:11,429 --> 01:57:21,359
you for example want to recast against

2153
01:57:13,020 --> 01:57:23,160
it so the answer is yes and no the the

2154
01:57:21,359 --> 01:57:26,339
answer is to where your transfer mesh is

2155
01:57:23,159 --> 01:57:28,139
pretty much always on the GPU because

2156
01:57:26,340 --> 01:57:30,630
it's a massively parallel liza bôla' per

2157
01:57:28,140 --> 01:57:33,060
a ssin and GPUs are way better at

2158
01:57:30,630 --> 01:57:36,750
parallel operations than CPU so are

2159
01:57:33,060 --> 01:57:40,140
currently they're just much wider and

2160
01:57:36,750 --> 01:57:42,719
they have better thread management for

2161
01:57:40,140 --> 01:57:44,969
those kinds of things so you definitely

2162
01:57:42,719 --> 01:57:46,380
always transfer them around the GPU and

2163
01:57:44,969 --> 01:57:47,819
when you say do you load it back if

2164
01:57:46,380 --> 01:57:51,359
you've never got to recast against it

2165
01:57:47,819 --> 01:57:54,899
the answer is that you usually try not

2166
01:57:51,359 --> 01:57:56,880
to raycast against the mesh you try to

2167
01:57:54,899 --> 01:57:59,429
recast against something else that

2168
01:57:56,880 --> 01:58:00,929
approximates the mesh and you try to do

2169
01:57:59,429 --> 01:58:02,789
that with things that themselves don't

2170
01:58:00,929 --> 01:58:05,730
deform terribly much does that make

2171
01:58:02,789 --> 01:58:08,670
sense so typically you have hip boxes

2172
01:58:05,729 --> 01:58:10,619
right and those hip boxes don't

2173
01:58:08,670 --> 01:58:14,520
necessarily mean boxes sometimes they're

2174
01:58:10,619 --> 01:58:17,789
like actual they have shape they're

2175
01:58:14,520 --> 01:58:20,130
usually convex solids and you raycast

2176
01:58:17,789 --> 01:58:21,929
against the convex solids by just using

2177
01:58:20,130 --> 01:58:24,569
the bone transforms and the convex

2178
01:58:21,929 --> 01:58:27,630
solids on the CPU side that's typically

2179
01:58:24,569 --> 01:58:29,549
what happens if you really really really

2180
01:58:27,630 --> 01:58:32,730
need 100%

2181
01:58:29,550 --> 01:58:36,810
it's pixel accurate raycasting for

2182
01:58:32,729 --> 01:58:40,589
something uh I don't really know what

2183
01:58:36,810 --> 01:58:43,200
people would do these days it's a good

2184
01:58:40,590 --> 01:58:44,940
question uh you wouldn't read it back

2185
01:58:43,199 --> 01:58:46,500
because by the time you got it back the

2186
01:58:44,939 --> 01:58:55,169
results would be meaningless because

2187
01:58:46,500 --> 01:58:58,800
you're like three frames late or so so I

2188
01:58:55,170 --> 01:59:03,890
don't really know what you would do what

2189
01:58:58,800 --> 01:59:08,010
I would probably do because I did do

2190
01:59:03,890 --> 01:59:10,170
100% mesh accurate hit detection in

2191
01:59:08,010 --> 01:59:13,409
granny I'm in rad game tools character

2192
01:59:10,170 --> 01:59:14,609
animation library I did do that what I

2193
01:59:13,409 --> 01:59:17,369
would probably do is not that different

2194
01:59:14,609 --> 01:59:20,039
today as to what I did then which is you

2195
01:59:17,369 --> 01:59:22,050
would hit test the boat the those

2196
01:59:20,039 --> 01:59:26,939
collision boxes like I just said which

2197
01:59:22,050 --> 01:59:29,220
is a simplified model and you would make

2198
01:59:26,939 --> 01:59:31,589
sure that they were conservative so you

2199
01:59:29,220 --> 01:59:34,140
make sure that you use bounding boxes or

2200
01:59:31,590 --> 01:59:37,619
volumes that enclose the entirety of the

2201
01:59:34,140 --> 01:59:41,010
mesh no matter how it was deformed which

2202
01:59:37,619 --> 01:59:42,539
you can do because deformation is a

2203
01:59:41,010 --> 01:59:45,150
known process that you can make sure

2204
01:59:42,539 --> 01:59:47,399
that you can be conservative about and

2205
01:59:45,149 --> 01:59:50,219
then based on which one you would hit

2206
01:59:47,399 --> 01:59:54,779
you would just on the CPU side transform

2207
01:59:50,220 --> 01:59:56,820
just those triangles that are near that

2208
01:59:54,779 --> 02:00:00,509
collision volume and then rake ass

2209
01:59:56,819 --> 02:00:02,880
against those that's what I did on on

2210
02:00:00,510 --> 02:00:05,449
granny and I probably just do it again

2211
02:00:02,880 --> 02:00:05,449
that way today

2212
02:00:10,439 --> 02:00:14,559
how do you toggle between debug and

2213
02:00:12,729 --> 02:00:16,899
release builds modify the build up batch

2214
02:00:14,560 --> 02:00:19,539
each time yeah I just changed the OD to

2215
02:00:16,899 --> 02:00:21,009
a no - how do you conceptualize and

2216
02:00:19,539 --> 02:00:22,479
tackle large Frederickson prevent from

2217
02:00:21,010 --> 02:00:25,060
getting overwhelmed and lost in the

2218
02:00:22,479 --> 02:00:29,439
weeds of my new details I tend to suffer

2219
02:00:25,060 --> 02:00:31,300
from analysis paralysis um well I mean

2220
02:00:29,439 --> 02:00:33,819
you see what I do and handmade hero it's

2221
02:00:31,300 --> 02:00:38,260
really all I do I just try to improve

2222
02:00:33,819 --> 02:00:39,699
areas as I go there's no magic formula

2223
02:00:38,260 --> 02:00:42,220
for it most people can't do large

2224
02:00:39,699 --> 02:00:43,840
products at all and it kind of requires

2225
02:00:42,220 --> 02:00:45,720
a team to do if you're doing one by

2226
02:00:43,840 --> 02:00:49,090
yourself yeah you just I mean that's

2227
02:00:45,720 --> 02:00:51,010
it's difficult you really just have to

2228
02:00:49,090 --> 02:00:53,920
be willing to write code and experiment

2229
02:00:51,010 --> 02:00:56,500
and let things come together try not to

2230
02:00:53,920 --> 02:00:57,550
do too much analysis like try not to sit

2231
02:00:56,500 --> 02:01:00,100
around doing something where you're not

2232
02:00:57,550 --> 02:01:07,270
programming is I guess the only thing I

2233
02:01:00,100 --> 02:01:09,310
could really offer let's say in Tripoli

2234
02:01:07,270 --> 02:01:11,530
studio book quite a bit into obscure any

2235
02:01:09,310 --> 02:01:13,300
programming any steps in to show that

2236
02:01:11,529 --> 02:01:15,460
that's not the answer easiest way to go

2237
02:01:13,300 --> 02:01:17,050
forward to have a code base that works

2238
02:01:15,460 --> 02:01:18,760
but changing everything is pain it's

2239
02:01:17,050 --> 02:01:21,070
hard to make them see that this is one

2240
02:01:18,760 --> 02:01:23,430
of the big problems any advice it's our

2241
02:01:21,069 --> 02:01:31,599
friends um

2242
02:01:23,430 --> 02:01:32,710
don't work there go somewhere else you

2243
02:01:31,600 --> 02:01:36,579
can't argue with programmers they're

2244
02:01:32,710 --> 02:01:39,189
very pigheaded so I don't try they're

2245
02:01:36,579 --> 02:01:42,430
mostly religious they aren't motivated

2246
02:01:39,189 --> 02:01:44,829
by data most the time so you know you

2247
02:01:42,430 --> 02:01:46,750
can ask someone to please demonstrate to

2248
02:01:44,829 --> 02:01:49,930
you why they selected this way of coding

2249
02:01:46,750 --> 02:01:51,489
and they have like no answer not just a

2250
02:01:49,930 --> 02:01:53,710
bad answer but literally none like I'm

2251
02:01:51,489 --> 02:01:55,960
just like what what did you actually do

2252
02:01:53,710 --> 02:01:57,880
to determine this was a good programming

2253
02:01:55,960 --> 02:02:01,390
paradigm and it's like they've never

2254
02:01:57,880 --> 02:02:03,760
done that that's like 90% of programmers

2255
02:02:01,390 --> 02:02:05,140
have literally never done any

2256
02:02:03,760 --> 02:02:07,449
experimentation to determine whether

2257
02:02:05,140 --> 02:02:10,720
things that they do actually have any

2258
02:02:07,449 --> 02:02:11,889
practical benefits so how do you I mean

2259
02:02:10,720 --> 02:02:13,840
how do you convince someone like that

2260
02:02:11,890 --> 02:02:17,190
you can't write that's just it's

2261
02:02:13,840 --> 02:02:17,190
fundamentally a broken

2262
02:02:18,279 --> 02:02:24,039
it's a fundamentally broken mental model

2263
02:02:20,948 --> 02:02:26,738
so hey if you happen to have someone at

2264
02:02:24,039 --> 02:02:29,710
the studio who is results-oriented and

2265
02:02:26,738 --> 02:02:32,250
is willing to think about things then

2266
02:02:29,710 --> 02:02:36,250
that may be a person to talk about right

2267
02:02:32,250 --> 02:02:37,899
to talk to and be like hey so here's all

2268
02:02:36,250 --> 02:02:39,819
the practices that we're currently like

2269
02:02:37,899 --> 02:02:41,289
enforcing in this code base has anyone

2270
02:02:39,819 --> 02:02:44,529
actually checked to see if any of these

2271
02:02:41,289 --> 02:02:50,050
are actually working and what did they

2272
02:02:44,529 --> 02:02:51,399
do to do that right if someone's

2273
02:02:50,050 --> 02:02:52,690
actually receptive to that line of

2274
02:02:51,399 --> 02:02:53,979
questioning awesome but most people

2275
02:02:52,689 --> 02:02:55,299
aren't they like to start talking about

2276
02:02:53,979 --> 02:02:57,729
all kinds of nonsense like well it's

2277
02:02:55,300 --> 02:03:00,610
modern C++ it's like those are not

2278
02:02:57,729 --> 02:03:01,869
that's not science like that is not an

2279
02:03:00,609 --> 02:03:03,880
experiment where you have measured

2280
02:03:01,869 --> 02:03:07,149
whether or not this thing is actually

2281
02:03:03,880 --> 02:03:09,429
improving a code base right and so you

2282
02:03:07,149 --> 02:03:10,479
just can't have a discussion if people

2283
02:03:09,429 --> 02:03:12,429
are thinking that way there's no

2284
02:03:10,479 --> 02:03:14,439
discussion to be had it's just it's game

2285
02:03:12,429 --> 02:03:16,390
over and unfortunately like that's just

2286
02:03:14,439 --> 02:03:18,009
you know so so I just don't I just don't

2287
02:03:16,390 --> 02:03:20,469
try it's it's worthless I don't know

2288
02:03:18,010 --> 02:03:27,190
there's nothing you can do you know how

2289
02:03:20,469 --> 02:03:29,859
do you how do you it's it's similar to

2290
02:03:27,189 --> 02:03:31,269
saying like how do you convince a Jewish

2291
02:03:29,859 --> 02:03:36,698
person to believe in Jesus or a

2292
02:03:31,270 --> 02:03:38,800
Christian to not write it it's like

2293
02:03:36,698 --> 02:03:40,839
they've crossed some threshold where

2294
02:03:38,800 --> 02:03:43,960
they just believe things and I have no I

2295
02:03:40,840 --> 02:03:46,060
don't know I don't know you you because

2296
02:03:43,960 --> 02:03:47,739
if you don't come from an engineering

2297
02:03:46,060 --> 02:03:49,719
perspective when you're talking about

2298
02:03:47,738 --> 02:03:51,369
what you're working on then I just don't

2299
02:03:49,719 --> 02:03:53,050
know and if you do come from an

2300
02:03:51,369 --> 02:03:54,750
engineering perspective you're not using

2301
02:03:53,050 --> 02:03:58,239
a brain to programming

2302
02:03:54,750 --> 02:03:58,600
pretty much so so I don't know I got

2303
02:03:58,238 --> 02:04:06,250
nothing

2304
02:03:58,600 --> 02:04:07,840
it's just it's a lost cause sorry what's

2305
02:04:06,250 --> 02:04:09,609
your talk about lines of code problem

2306
02:04:07,840 --> 02:04:15,760
have you ever seen anything from Ian

2307
02:04:09,609 --> 02:04:18,238
Pugh Marta no I don't think I've heard

2308
02:04:15,760 --> 02:04:18,239
of that name

2309
02:04:22,579 --> 02:04:28,079
to twitch subs count towards source code

2310
02:04:25,289 --> 02:04:29,460
access no we twitch subs are just

2311
02:04:28,079 --> 02:04:31,500
something that happened because we're a

2312
02:04:29,460 --> 02:04:33,960
partner now so you can subscribe

2313
02:04:31,500 --> 02:04:35,550
but it's only it's just a twitch thing

2314
02:04:33,960 --> 02:04:40,199
that's all it is

2315
02:04:35,550 --> 02:04:42,090
it's just it's just twitches thing so I

2316
02:04:40,199 --> 02:04:44,159
think it turns off ads gives you access

2317
02:04:42,090 --> 02:04:48,539
to emoticons and access to archives

2318
02:04:44,159 --> 02:04:49,939
that's that's it so it's there for

2319
02:04:48,539 --> 02:04:54,239
people who don't want ads and stuff

2320
02:04:49,939 --> 02:05:00,659
right but that's that's really all

2321
02:04:54,239 --> 02:05:00,899
that's really all it does yeah that's

2322
02:05:00,659 --> 02:05:01,979
nothing

2323
02:05:00,899 --> 02:05:03,389
it does nothing to do with source code

2324
02:05:01,979 --> 02:05:05,669
Ice Arena that's that's our product

2325
02:05:03,390 --> 02:05:10,440
that's that's the thing that we have

2326
02:05:05,670 --> 02:05:11,789
right and so yeah like it's just for ad

2327
02:05:10,439 --> 02:05:13,500
for viewing it's the same as like

2328
02:05:11,789 --> 02:05:15,869
YouTube read right like if you want to

2329
02:05:13,500 --> 02:05:18,390
watch the videos on YouTube the hami do

2330
02:05:15,869 --> 02:05:22,590
videos on YouTube if your YouTube red

2331
02:05:18,390 --> 02:05:26,180
subscribers there's no ads right so but

2332
02:05:22,590 --> 02:05:26,180
but that's it that's that's all it is

2333
02:05:45,449 --> 02:05:54,119
to use new graphics libraries know what

2334
02:05:53,159 --> 02:05:55,769
are your thought something you Sasebo

2335
02:05:54,119 --> 02:05:57,210
this lambda function seems like one of

2336
02:05:55,770 --> 02:06:02,870
the better dishes to see the suspect and

2337
02:05:57,210 --> 02:06:07,199
doesn't break procedural style I mean I

2338
02:06:02,869 --> 02:06:11,689
don't know C++ features are kind of just

2339
02:06:07,199 --> 02:06:14,239
an exercise in is this a thing that you

2340
02:06:11,689 --> 02:06:17,069
[Music]

2341
02:06:14,239 --> 02:06:18,599
is this a feature you can make some

2342
02:06:17,069 --> 02:06:22,259
productive use out of that doesn't

2343
02:06:18,600 --> 02:06:23,850
really ruin things for you and I kind of

2344
02:06:22,260 --> 02:06:25,199
stopped bothering to evaluate so you

2345
02:06:23,850 --> 02:06:27,600
must less things because almost every

2346
02:06:25,199 --> 02:06:29,729
time the answer was no but there

2347
02:06:27,600 --> 02:06:33,210
probably are some so like maybe C++

2348
02:06:29,729 --> 02:06:35,429
lambda functions more or less can be

2349
02:06:33,210 --> 02:06:38,789
useful without ruining things for you I

2350
02:06:35,430 --> 02:06:40,350
don't know my guess is if I did really

2351
02:06:38,789 --> 02:06:43,439
try to make serious use of them I would

2352
02:06:40,350 --> 02:06:45,090
probably just get annoyed and stop the

2353
02:06:43,439 --> 02:06:49,169
problem that they're trying to solve is

2354
02:06:45,090 --> 02:06:50,220
one that should be solved so I would say

2355
02:06:49,170 --> 02:06:54,539
that that is good

2356
02:06:50,220 --> 02:06:57,000
meaning the C++ lambda is trying to do

2357
02:06:54,539 --> 02:06:58,949
something that should be supported by

2358
02:06:57,000 --> 02:07:00,149
the language but my guess is if I

2359
02:06:58,949 --> 02:07:02,429
actually went looked at it I would have

2360
02:07:00,149 --> 02:07:03,869
a laundry list of complaints about the

2361
02:07:02,430 --> 02:07:06,180
way they chose to implement it because

2362
02:07:03,869 --> 02:07:08,489
every time I ever try to do something in

2363
02:07:06,180 --> 02:07:11,010
C++ that is what happens I'm like well

2364
02:07:08,489 --> 02:07:12,899
you tried to solve problem X the correct

2365
02:07:11,010 --> 02:07:15,840
sup solution to problem X has all of

2366
02:07:12,899 --> 02:07:18,329
these elements to it you got one of

2367
02:07:15,840 --> 02:07:19,829
those and ruin 12 things that's what

2368
02:07:18,329 --> 02:07:21,420
happens every time I look at a C++

2369
02:07:19,829 --> 02:07:23,460
feature it's it's always like a giant

2370
02:07:21,420 --> 02:07:24,739
train wreck and so eventually to stop

2371
02:07:23,460 --> 02:07:27,420
I'm like it's just not worth my time

2372
02:07:24,739 --> 02:07:29,219
once in a while I might find one right

2373
02:07:27,420 --> 02:07:31,319
but just the number of times that it

2374
02:07:29,220 --> 02:07:35,100
just wastes my time and I end up going

2375
02:07:31,319 --> 02:07:37,109
this is garbage you know it's just too

2376
02:07:35,100 --> 02:07:39,000
high so it's just it's just it's just a

2377
02:07:37,109 --> 02:07:40,259
trade-off now like reading a C++ spec

2378
02:07:39,000 --> 02:07:42,420
it's just a waste of time now you're

2379
02:07:40,260 --> 02:07:44,070
you're wasting time you could have

2380
02:07:42,420 --> 02:07:45,930
written the code the other way already

2381
02:07:44,069 --> 02:07:47,340
and been done by the time you figure out

2382
02:07:45,930 --> 02:07:50,210
whether this feature is even useful and

2383
02:07:47,340 --> 02:07:50,210
most the time it turns out it's not

2384
02:07:56,050 --> 02:08:09,279
alright I'm gonna go ahead and wrap it

2385
02:07:58,729 --> 02:08:09,279
up close this down close this down

2386
02:08:11,199 --> 02:08:14,599
alright thank you everyone for joining

2387
02:08:13,069 --> 02:08:15,920
us for another soda handmade here it's

2388
02:08:14,600 --> 02:08:17,390
been a pleasure coding with you as

2389
02:08:15,920 --> 02:08:20,239
always if you want to follow along the

2390
02:08:17,390 --> 02:08:21,619
series at home you always can you can

2391
02:08:20,238 --> 02:08:23,750
pre-order the game at handmade hero org

2392
02:08:21,619 --> 02:08:25,699
comes with a source code so you can play

2393
02:08:23,750 --> 02:08:30,079
around with it compile it yourself and

2394
02:08:25,699 --> 02:08:32,689
pretty soon even rebuild all the art

2395
02:08:30,079 --> 02:08:34,250
assets every time yourself which is what

2396
02:08:32,689 --> 02:08:35,779
we've been working on here to make sure

2397
02:08:34,250 --> 02:08:37,850
that they don't have to come from us so

2398
02:08:35,779 --> 02:08:41,479
that means you can kind of mess around

2399
02:08:37,850 --> 02:08:43,700
with changing how the art packs are

2400
02:08:41,479 --> 02:08:46,699
built or add your own art assets or

2401
02:08:43,699 --> 02:08:49,670
remove them do that kind of thing which

2402
02:08:46,699 --> 02:08:51,309
should be pretty nice right so looking

2403
02:08:49,670 --> 02:08:54,800
forward to that also wanted to mention

2404
02:08:51,310 --> 02:08:56,930
we are comic came out last Monday those

2405
02:08:54,800 --> 02:08:58,250
of you who don't know it's called meow

2406
02:08:56,930 --> 02:08:59,840
the infinite you can always get to all

2407
02:08:58,250 --> 02:09:01,069
of our projects by just clicking on on

2408
02:08:59,840 --> 02:09:04,550
any one of our websites you can always

2409
02:09:01,069 --> 02:09:06,799
click on the little site icon but meow

2410
02:09:04,550 --> 02:09:08,360
the infinite meow the infinite comm is

2411
02:09:06,800 --> 02:09:10,520
up now you can read the first issue

2412
02:09:08,359 --> 02:09:13,639
online it's pretty cool if you let cats

2413
02:09:10,520 --> 02:09:14,390
in space which I hope everyone does you

2414
02:09:13,640 --> 02:09:16,010
should check it out

2415
02:09:14,390 --> 02:09:17,660
you can go directly there again just use

2416
02:09:16,010 --> 02:09:21,050
the little linker which links you to

2417
02:09:17,659 --> 02:09:22,729
everywhere on our site my blog handmade

2418
02:09:21,050 --> 02:09:25,430
hero meow the infinite the main page

2419
02:09:22,729 --> 02:09:28,909
Anna's illustration blog and of course

2420
02:09:25,430 --> 02:09:30,909
1935 so anyway give that a check if

2421
02:09:28,909 --> 02:09:34,939
you're looking for something to read

2422
02:09:30,909 --> 02:09:36,680
until next week which I think now that

2423
02:09:34,939 --> 02:09:38,659
everything is kind of working I guess

2424
02:09:36,680 --> 02:09:41,180
we're just in the feature edition

2425
02:09:38,659 --> 02:09:44,029
territory so next week I think what I'd

2426
02:09:41,180 --> 02:09:46,460
like to do is get the alignment point

2427
02:09:44,029 --> 02:09:48,500
rewriting done so that we can mark up

2428
02:09:46,460 --> 02:09:52,069
all of our art assets and then I'd like

2429
02:09:48,500 --> 02:09:53,750
to go ahead and maybe add sound import

2430
02:09:52,069 --> 02:09:56,389
in there because we've already got the

2431
02:09:53,750 --> 02:09:58,130
code for it so it would just be putting

2432
02:09:56,390 --> 02:09:59,270
it into the tag like so that we can have

2433
02:09:58,130 --> 02:10:05,300
tags that were like this is a sound

2434
02:09:59,270 --> 02:10:06,419
right so we would like to do the sound

2435
02:10:05,300 --> 02:10:07,739
importing

2436
02:10:06,418 --> 02:10:09,779
maybe let's get the fonts importing in

2437
02:10:07,738 --> 02:10:12,538
there and then we've got the full like

2438
02:10:09,779 --> 02:10:13,139
you can just build full game assets into

2439
02:10:12,538 --> 02:10:18,029
hhas

2440
02:10:13,139 --> 02:10:19,679
and that's kind of then it in a way that

2441
02:10:18,029 --> 02:10:21,148
will then become kind of a universal

2442
02:10:19,679 --> 02:10:23,429
build sort of thing so you could just

2443
02:10:21,149 --> 02:10:25,709
build hhas and use them wherever right

2444
02:10:23,429 --> 02:10:28,078
like they are just like now easy

2445
02:10:25,708 --> 02:10:32,219
package' baletta datum are cup kinds of

2446
02:10:28,078 --> 02:10:34,198
files that just work so that's kind of

2447
02:10:32,219 --> 02:10:35,458
cool and the only thing that we would

2448
02:10:34,198 --> 02:10:37,888
have to do to really make it fully

2449
02:10:35,458 --> 02:10:42,389
generic is to define the tags somewhere

2450
02:10:37,889 --> 02:10:45,449
outside the game so that you can that

2451
02:10:42,389 --> 02:10:47,130
the parser could know like what those

2452
02:10:45,448 --> 02:10:48,719
were right that's the only thing we

2453
02:10:47,130 --> 02:10:51,779
don't really have at the moment is a way

2454
02:10:48,719 --> 02:10:53,429
to build an HHH HHH a file without some

2455
02:10:51,779 --> 02:10:56,509
knowledge of what the tags actually are

2456
02:10:53,429 --> 02:10:58,979
right so that one's a little bit

2457
02:10:56,510 --> 02:11:01,039
trickier but you know we could actually

2458
02:10:58,979 --> 02:11:02,610
do that too which would be pretty neat

2459
02:11:01,038 --> 02:11:06,118
so that's it

2460
02:11:02,609 --> 02:11:08,248
see back here next weekend for that

2461
02:11:06,118 --> 02:11:09,509
until then have fun programming and I

2462
02:11:08,248 --> 02:11:11,779
will see everyone on the Internet take

2463
02:11:09,510 --> 02:11:11,780
it easy everybody

