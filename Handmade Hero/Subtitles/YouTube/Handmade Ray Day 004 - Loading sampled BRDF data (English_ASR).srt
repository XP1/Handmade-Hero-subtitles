1
00:00:00,199 --> 00:00:06,899
hello everyone and welcome to what would

2
00:00:03,299 --> 00:00:08,638
have been a episode of handmade hero but

3
00:00:06,899 --> 00:00:09,750
Linux ruined it so instead we're

4
00:00:08,638 --> 00:00:11,308
probably just gonna have really short

5
00:00:09,750 --> 00:00:12,419
stream today and maybe I'll boot up

6
00:00:11,308 --> 00:00:14,759
handmade ray and play around with that a

7
00:00:12,419 --> 00:00:17,250
little bit because I'm not sure what

8
00:00:14,759 --> 00:00:18,629
else we could do since we've wasted

9
00:00:17,250 --> 00:00:20,399
basically all of our time trying to get

10
00:00:18,629 --> 00:00:22,469
Linux to capture audio and mostly

11
00:00:20,399 --> 00:00:25,049
failing although I guess maybe we

12
00:00:22,469 --> 00:00:27,448
slightly succeeded a little very little

13
00:00:25,050 --> 00:00:30,899
bit I don't remember where we left off

14
00:00:27,449 --> 00:00:32,969
on our ray tracer so you know it's it's

15
00:00:30,899 --> 00:00:34,649
a pretty straightforward little simple

16
00:00:32,969 --> 00:00:38,219
program that we wrote as a stream test

17
00:00:34,649 --> 00:00:39,899
one time and you can kind of see there's

18
00:00:38,219 --> 00:00:41,730
very little in it right we just sort of

19
00:00:39,899 --> 00:00:43,378
have a ray tracer and then we have a

20
00:00:41,729 --> 00:00:44,939
couple support functions that are just

21
00:00:43,378 --> 00:00:48,149
like some math functions and stuff that

22
00:00:44,939 --> 00:00:51,030
we needed and then we have like some

23
00:00:48,149 --> 00:00:53,698
Lane based stuff here so you can see

24
00:00:51,030 --> 00:00:56,420
we've got a you know a thing for sim D

25
00:00:53,698 --> 00:00:58,979
where we can be like 8x wide or 4x wide

26
00:00:56,420 --> 00:01:01,020
and what we do inside here is we can

27
00:00:58,979 --> 00:01:04,408
actually sort of pick which one that we

28
00:01:01,020 --> 00:01:08,520
want in the actual build I believe we

29
00:01:04,409 --> 00:01:10,170
had a way of specifying what width we

30
00:01:08,519 --> 00:01:11,429
were using I don't actually remember if

31
00:01:10,170 --> 00:01:13,590
it was in the build maybe it's not in

32
00:01:11,430 --> 00:01:16,830
the build I don't remember but basically

33
00:01:13,590 --> 00:01:19,200
we just pick between them so that we can

34
00:01:16,829 --> 00:01:21,750
sort of say do we want to use avx2 or do

35
00:01:19,200 --> 00:01:23,939
we want to just use sim D and again I

36
00:01:21,750 --> 00:01:25,879
really just don't remember how we were

37
00:01:23,938 --> 00:01:28,349
picking that let me take a look and see

38
00:01:25,879 --> 00:01:30,868
so it looks like it's just this pound of

39
00:01:28,349 --> 00:01:32,009
fine here this Lane width so I guess we

40
00:01:30,868 --> 00:01:35,239
could pick it in the de bill in the

41
00:01:32,009 --> 00:01:37,709
build if we wanted to we could do this

42
00:01:35,239 --> 00:01:39,810
right and if I just make that predicated

43
00:01:37,709 --> 00:01:41,309
now we could define Lane within the

44
00:01:39,810 --> 00:01:43,460
build and if we don't define Lane within

45
00:01:41,310 --> 00:01:48,000
the bill that'll just default to doing 8

46
00:01:43,459 --> 00:01:49,828
for now right but if if I go take a look

47
00:01:48,000 --> 00:01:52,799
at where we were at with the ray tracer

48
00:01:49,828 --> 00:01:55,589
because I don't really remember in terms

49
00:01:52,799 --> 00:01:57,990
of running it I believe what we did is

50
00:01:55,590 --> 00:02:00,920
inside this directory here what we would

51
00:01:57,989 --> 00:02:02,908
do we yeah we actually had sort of a

52
00:02:00,920 --> 00:02:04,739
procedure we would do where we would

53
00:02:02,909 --> 00:02:06,630
list like how we were doing on every day

54
00:02:04,739 --> 00:02:08,969
right back and we did it I mean there's

55
00:02:06,629 --> 00:02:11,340
only four days but so if you take a look

56
00:02:08,969 --> 00:02:13,109
here you can see we would like record

57
00:02:11,340 --> 00:02:13,930
how long it took to do the ray tracing

58
00:02:13,110 --> 00:02:15,969
and

59
00:02:13,930 --> 00:02:18,099
like what the quality level was for each

60
00:02:15,968 --> 00:02:19,598
of these and how many total bounces

61
00:02:18,098 --> 00:02:22,449
there were and what the performance was

62
00:02:19,598 --> 00:02:24,548
and all this stuff right so we kind of

63
00:02:22,449 --> 00:02:26,048
had a pretty good setup here just in

64
00:02:24,549 --> 00:02:28,390
terms of like you know starting to

65
00:02:26,049 --> 00:02:30,370
structure the raytracer and here was I

66
00:02:28,389 --> 00:02:38,589
don't know why that's I know what that's

67
00:02:30,370 --> 00:02:40,750
doing there hello there we go so you can

68
00:02:38,590 --> 00:02:42,430
see like these are some of the tests we

69
00:02:40,750 --> 00:02:44,680
did on our ray tracer they're just you

70
00:02:42,430 --> 00:02:46,750
know some basic spheres that we put in

71
00:02:44,680 --> 00:02:48,280
here and it produces pretty reasonable

72
00:02:46,750 --> 00:02:50,139
output but there's no lighting function

73
00:02:48,280 --> 00:02:51,669
in it so it's really like we didn't

74
00:02:50,139 --> 00:02:53,500
really have anything that actually tried

75
00:02:51,669 --> 00:02:55,090
to do any kind of real lighting you can

76
00:02:53,500 --> 00:02:58,419
see here we've got like sort of glassy

77
00:02:55,090 --> 00:03:00,280
reflections by just controlling how at

78
00:02:58,419 --> 00:03:02,169
versus regular reflections right by

79
00:03:00,280 --> 00:03:04,359
controlling how spread out it was but we

80
00:03:02,169 --> 00:03:05,769
really don't have much in the way of of

81
00:03:04,359 --> 00:03:07,709
any real lighting in there so I think

82
00:03:05,769 --> 00:03:12,218
the thing that we kind of stopped on was

83
00:03:07,709 --> 00:03:15,370
we never actually produced any real you

84
00:03:12,218 --> 00:03:16,598
know when we actually cast out Ray's we

85
00:03:15,370 --> 00:03:18,009
just did the part where we see whether

86
00:03:16,598 --> 00:03:20,378
we hit things and then if we hit things

87
00:03:18,009 --> 00:03:24,340
we you know bounce but we never actually

88
00:03:20,378 --> 00:03:26,500
did anything that tried to be more you

89
00:03:24,340 --> 00:03:28,658
know did any important sampling or

90
00:03:26,500 --> 00:03:30,310
computed any material properties or any

91
00:03:28,658 --> 00:03:31,989
of this sort of stuff other than I think

92
00:03:30,310 --> 00:03:35,319
just a parameter for like how glassy it

93
00:03:31,989 --> 00:03:36,400
was or something like that right and so

94
00:03:35,318 --> 00:03:38,048
probably what we would need to play

95
00:03:36,400 --> 00:03:40,209
around with next is we we'd probably

96
00:03:38,049 --> 00:03:41,829
have to play around with the part where

97
00:03:40,209 --> 00:03:48,609
we actually you know figure out how to

98
00:03:41,829 --> 00:03:50,500
do some kind of a of you know some some

99
00:03:48,609 --> 00:03:52,930
kind of a reasonable argument for

100
00:03:50,500 --> 00:03:54,280
lighting and you can see that the way

101
00:03:52,930 --> 00:03:56,560
that we broke things up here is we just

102
00:03:54,280 --> 00:03:58,509
have here's a tile thing right we would

103
00:03:56,560 --> 00:04:00,848
say look let's get let's aim at a

104
00:03:58,508 --> 00:04:03,969
particular pixel let's cast something

105
00:04:00,848 --> 00:04:05,828
out in a direction using this cast

106
00:04:03,969 --> 00:04:09,158
sample rays and then we'll just write

107
00:04:05,829 --> 00:04:10,780
the the thing back right so if we want

108
00:04:09,158 --> 00:04:12,400
to try and go a little further with this

109
00:04:10,780 --> 00:04:15,340
we would probably start editing this

110
00:04:12,400 --> 00:04:20,139
function which is you know great

111
00:04:15,340 --> 00:04:22,329
oops I can't cast sample rays oh it

112
00:04:20,139 --> 00:04:23,590
keeps having simple this is the function

113
00:04:22,329 --> 00:04:25,629
that we'd really be looking at here and

114
00:04:23,589 --> 00:04:27,250
we could you know we could start to work

115
00:04:25,629 --> 00:04:29,230
that out

116
00:04:27,250 --> 00:04:31,540
so let me go ahead and try getting the

117
00:04:29,230 --> 00:04:34,300
basis of basics of this running again

118
00:04:31,540 --> 00:04:36,250
and I don't know if we actually made a

119
00:04:34,300 --> 00:04:38,800
batch file that would run it or not it

120
00:04:36,250 --> 00:04:40,689
looks like maybe we didn't and so we

121
00:04:38,800 --> 00:04:41,470
probably want to make a batch file that

122
00:04:40,689 --> 00:04:42,730
runs it

123
00:04:41,470 --> 00:04:44,350
probably in the derated directory I

124
00:04:42,730 --> 00:04:45,700
don't know let me go ahead and see what

125
00:04:44,350 --> 00:04:46,990
happens when I actually run this thing

126
00:04:45,699 --> 00:04:50,379
because I don't remember what we

127
00:04:46,990 --> 00:04:52,840
programmed it to do either so it looks

128
00:04:50,379 --> 00:04:54,819
like that just kind of does some ray

129
00:04:52,839 --> 00:04:57,879
casting which is good and there it goes

130
00:04:54,819 --> 00:05:02,560
and then it's done and you know there's

131
00:04:57,879 --> 00:05:04,449
the there's the output that all looks

132
00:05:02,560 --> 00:05:05,949
pretty straightforward let me see if it

133
00:05:04,449 --> 00:05:08,469
generated a reasonable bitmap I guess

134
00:05:05,949 --> 00:05:09,909
it's just that test up it map yeah so I

135
00:05:08,470 --> 00:05:11,890
think it's pretty reasonable we can run

136
00:05:09,910 --> 00:05:14,020
it we get some output and off we go

137
00:05:11,889 --> 00:05:15,550
and I'm presumably we can crank down

138
00:05:14,019 --> 00:05:18,490
that sampling level as well if we want

139
00:05:15,550 --> 00:05:20,470
to so meaning we could change it so that

140
00:05:18,490 --> 00:05:22,600
it out put it in image more quickly but

141
00:05:20,470 --> 00:05:24,190
maybe had like less anti-aliasing cuz if

142
00:05:22,600 --> 00:05:26,169
you look in you know if you look and

143
00:05:24,189 --> 00:05:28,509
zoom in here you can see we're casting

144
00:05:26,168 --> 00:05:30,339
like a lot of rays even just you can see

145
00:05:28,509 --> 00:05:33,099
the level of anti-aliasing we're getting

146
00:05:30,339 --> 00:05:35,289
there that's coming entirely from you

147
00:05:33,100 --> 00:05:39,669
know just jittering the the ray cast

148
00:05:35,290 --> 00:05:41,860
when we cast the Ray out at the initial

149
00:05:39,668 --> 00:05:43,180
setup we aren't using blue noise right

150
00:05:41,860 --> 00:05:47,500
now I think we're just using white noise

151
00:05:43,180 --> 00:05:48,459
so that that sampling is not great but

152
00:05:47,500 --> 00:05:49,720
you can still see that we're just

153
00:05:48,459 --> 00:05:51,279
casting it a heck of a lot of rays and

154
00:05:49,720 --> 00:05:55,600
everything comes out pretty smooth here

155
00:05:51,279 --> 00:05:56,949
right so so I think we're certainly well

156
00:05:55,600 --> 00:06:01,000
above where we would need to be sampling

157
00:05:56,949 --> 00:06:03,668
level wise all right so moving on let's

158
00:06:01,000 --> 00:06:06,668
take a look here at what we can do so

159
00:06:03,668 --> 00:06:09,339
you can see in the cast the sampler a

160
00:06:06,668 --> 00:06:11,168
caster here you can see we have array

161
00:06:09,339 --> 00:06:14,289
index and we're just going over how many

162
00:06:11,168 --> 00:06:16,120
Ray's we want to cast and you can see

163
00:06:14,290 --> 00:06:17,819
that we're calling a random bilateral

164
00:06:16,120 --> 00:06:19,930
function here soap mm-hmm

165
00:06:17,819 --> 00:06:21,819
if you take a look at how the random

166
00:06:19,930 --> 00:06:24,610
bilateral is looking at working you can

167
00:06:21,819 --> 00:06:26,740
see us doing our are sort of how were

168
00:06:24,610 --> 00:06:28,750
you know how we're generating our random

169
00:06:26,740 --> 00:06:32,918
numbers you can see that it's sort of

170
00:06:28,750 --> 00:06:35,439
like three dependent X ORS right and I'm

171
00:06:32,918 --> 00:06:39,339
guessing that that's probably pretty

172
00:06:35,439 --> 00:06:40,779
good I mean it we're probably going to

173
00:06:39,339 --> 00:06:41,888
be able to stick with that for a while

174
00:06:40,779 --> 00:06:43,599
I don't know that we're gonna need

175
00:06:41,889 --> 00:06:45,220
better source of entropy we could do a

176
00:06:43,600 --> 00:06:48,040
little work on that but like I said I

177
00:06:45,220 --> 00:06:49,360
think that's probably fine and probably

178
00:06:48,040 --> 00:06:53,110
all we really need to do is work on our

179
00:06:49,360 --> 00:06:56,169
bouncing so if you see here we do a

180
00:06:53,110 --> 00:06:59,379
bunch of plain equations and we test all

181
00:06:56,168 --> 00:07:04,659
of the planes in the system to see to

182
00:06:59,379 --> 00:07:06,459
what extent they are hit by the by the

183
00:07:04,660 --> 00:07:08,110
rates that we're casting and then we go

184
00:07:06,459 --> 00:07:10,359
through our spheres and we ready cast

185
00:07:08,110 --> 00:07:12,160
the spheres to see if they're hit and

186
00:07:10,360 --> 00:07:15,310
then when we're done with that all we do

187
00:07:12,160 --> 00:07:16,810
is say well now that we're done you know

188
00:07:15,310 --> 00:07:18,939
now that we've figured out where we're

189
00:07:16,810 --> 00:07:20,740
gonna hit we just load up whatever the

190
00:07:18,939 --> 00:07:22,870
material property is at that hit which

191
00:07:20,740 --> 00:07:27,250
we've saved you can see hit matte index

192
00:07:22,870 --> 00:07:28,899
here and once we know that then we are I

193
00:07:27,250 --> 00:07:30,610
think good to go for doing our light

194
00:07:28,899 --> 00:07:32,319
calculation so you can see the light

195
00:07:30,610 --> 00:07:34,389
calculation actually just happens and

196
00:07:32,319 --> 00:07:36,069
here you can see there's a cosine

197
00:07:34,389 --> 00:07:38,259
attenuation term which is just there

198
00:07:36,069 --> 00:07:40,649
because of the you know the light shaft

199
00:07:38,259 --> 00:07:43,029
the the incidence of the light shaft

200
00:07:40,649 --> 00:07:45,639
against the geometry is gonna have a

201
00:07:43,029 --> 00:07:47,469
cosine fall-off and then you can see us

202
00:07:45,639 --> 00:07:50,139
just multiplying whatever that

203
00:07:47,470 --> 00:07:52,630
reflective color is there and then what

204
00:07:50,139 --> 00:07:54,699
we do as I think is we just change the

205
00:07:52,629 --> 00:07:58,000
raid direction right so you can see it

206
00:07:54,699 --> 00:08:00,069
here we do essentially a interpolation

207
00:07:58,000 --> 00:08:03,100
between what a pure bounce would be and

208
00:08:00,069 --> 00:08:06,250
what a random bounce would be and we use

209
00:08:03,100 --> 00:08:09,189
a basically whatever that glossy

210
00:08:06,250 --> 00:08:10,839
coefficient is there to determine how

211
00:08:09,189 --> 00:08:16,389
pure of a bounce versus how random

212
00:08:10,839 --> 00:08:18,009
abouts we want right and you know again

213
00:08:16,389 --> 00:08:20,918
the reason we say these are not accurate

214
00:08:18,009 --> 00:08:23,379
permutations I assume is just because

215
00:08:20,918 --> 00:08:25,689
this this part here this is just a

216
00:08:23,379 --> 00:08:28,569
generic 3d offset right that's being

217
00:08:25,689 --> 00:08:30,100
applied it's not really guaranteed to

218
00:08:28,569 --> 00:08:31,209
have any particular distribution over

219
00:08:30,100 --> 00:08:33,580
the Hemisphere we haven't really looked

220
00:08:31,209 --> 00:08:35,019
at that in fact we're not really even

221
00:08:33,580 --> 00:08:37,810
looking at what the hemisphere even is

222
00:08:35,019 --> 00:08:39,370
right at this point and so this part

223
00:08:37,809 --> 00:08:41,079
right here is also pretty inaccurate

224
00:08:39,370 --> 00:08:43,089
just in terms of that but it's probably

225
00:08:41,080 --> 00:08:46,379
also again not really the weakest part

226
00:08:43,089 --> 00:08:48,570
of the system anyway so then we go and

227
00:08:46,379 --> 00:08:50,610
we

228
00:08:48,570 --> 00:08:52,379
we're gonna loop basically so that you

229
00:08:50,610 --> 00:08:56,639
can see this thing here it just goes

230
00:08:52,379 --> 00:08:59,490
until the max bounce count and I believe

231
00:08:56,639 --> 00:09:01,740
it will just stop if it doesn't hit

232
00:08:59,490 --> 00:09:04,049
something so like it'll bounce as many

233
00:09:01,740 --> 00:09:06,720
times as it can and then you know it'll

234
00:09:04,049 --> 00:09:08,189
it'll end after that so it's trying to

235
00:09:06,720 --> 00:09:09,600
hit a light source at some point or at

236
00:09:08,190 --> 00:09:13,260
least it's hoping it hits a light source

237
00:09:09,600 --> 00:09:14,610
at some point right and if it does it

238
00:09:13,259 --> 00:09:16,230
gets a color if it doesn't then it's

239
00:09:14,610 --> 00:09:19,350
just a useless ray that will contribute

240
00:09:16,230 --> 00:09:20,519
nothing right in the sense it

241
00:09:19,350 --> 00:09:21,750
contributes something which is to say

242
00:09:20,519 --> 00:09:23,939
that no lights coming from that

243
00:09:21,750 --> 00:09:27,120
particular set of bounces so that's

244
00:09:23,940 --> 00:09:29,100
something but again not you know not

245
00:09:27,120 --> 00:09:31,350
particularly interesting to a certain

246
00:09:29,100 --> 00:09:32,670
extent so the other thing that we don't

247
00:09:31,350 --> 00:09:34,500
do here is we don't do any light source

248
00:09:32,669 --> 00:09:39,419
targeting so you can see we don't ever

249
00:09:34,500 --> 00:09:41,100
try on purpose to like hit anything

250
00:09:39,419 --> 00:09:44,490
either and so that's a that's a little

251
00:09:41,100 --> 00:09:46,350
bit of a problem too because if we

252
00:09:44,490 --> 00:09:47,909
wanted to start having some hard shadows

253
00:09:46,350 --> 00:09:50,279
right so if we wanted something that was

254
00:09:47,909 --> 00:09:51,629
sort of like a sunlight or a specific

255
00:09:50,279 --> 00:09:53,250
light source and you can see we have a

256
00:09:51,629 --> 00:09:56,279
light source here this red light source

257
00:09:53,250 --> 00:09:59,279
for example we're not really doing

258
00:09:56,279 --> 00:10:02,490
anything in particular to try and make

259
00:09:59,279 --> 00:10:05,129
sure that we look at those light sources

260
00:10:02,490 --> 00:10:07,830
particularly well either so there's that

261
00:10:05,129 --> 00:10:09,750
too so I don't know what the first thing

262
00:10:07,830 --> 00:10:11,310
we probably want to do is I think one

263
00:10:09,750 --> 00:10:13,019
thing we may need is some exposure

264
00:10:11,309 --> 00:10:16,349
control so one of the things that again

265
00:10:13,019 --> 00:10:18,329
also that we're not doing here is we're

266
00:10:16,350 --> 00:10:20,250
not actually taking into account the

267
00:10:18,330 --> 00:10:21,990
fact that we probably want to compute

268
00:10:20,250 --> 00:10:24,750
light values like how much light we

269
00:10:21,990 --> 00:10:26,580
actually have and then we need to expose

270
00:10:24,750 --> 00:10:28,320
the image right we need to basically

271
00:10:26,580 --> 00:10:31,139
take those light files and map them into

272
00:10:28,320 --> 00:10:32,670
the visual space somehow probably using

273
00:10:31,139 --> 00:10:34,199
some kind of a nonlinear mapping right

274
00:10:32,669 --> 00:10:37,199
and right now we're not really doing

275
00:10:34,200 --> 00:10:38,940
that either we do do an sRGB in code but

276
00:10:37,200 --> 00:10:40,650
that's not the same thing that's just

277
00:10:38,940 --> 00:10:43,380
taking a set of light fires and encoding

278
00:10:40,649 --> 00:10:45,449
them in so I'm not sure for example what

279
00:10:43,379 --> 00:10:47,669
we set the light value of that red light

280
00:10:45,450 --> 00:10:48,180
to be I'm gonna look at where we create

281
00:10:47,669 --> 00:10:50,819
the world

282
00:10:48,179 --> 00:10:53,009
I guess that's here you can see the

283
00:10:50,820 --> 00:10:55,050
materials that we've set up and if I

284
00:10:53,009 --> 00:10:57,120
look at the material structure you can

285
00:10:55,049 --> 00:10:59,189
see in here we've got an emit color and

286
00:10:57,120 --> 00:11:00,450
so you can see here we're emitting some

287
00:10:59,190 --> 00:11:03,340
stuff

288
00:11:00,450 --> 00:11:05,530
this zero is probably the sky right

289
00:11:03,340 --> 00:11:09,009
that's that background emission and

290
00:11:05,529 --> 00:11:11,740
here's like that that red sphere and so

291
00:11:09,009 --> 00:11:14,110
you know it's set to four which is like

292
00:11:11,740 --> 00:11:15,610
you know somewhat bright light but we

293
00:11:14,110 --> 00:11:17,680
don't really know what these units are

294
00:11:15,610 --> 00:11:20,440
we haven't specified them you know if I

295
00:11:17,679 --> 00:11:23,349
set that light up to 20 I have no idea

296
00:11:20,440 --> 00:11:27,070
what would happen right but I can go

297
00:11:23,350 --> 00:11:28,509
ahead and run it here and see right but

298
00:11:27,070 --> 00:11:30,280
again like because we don't really have

299
00:11:28,509 --> 00:11:31,689
any idea what those units are or how we

300
00:11:30,279 --> 00:11:34,149
don't really even have any idea of how

301
00:11:31,690 --> 00:11:37,690
we think they should behave it's pretty

302
00:11:34,149 --> 00:11:39,549
difficult to really say right so let me

303
00:11:37,690 --> 00:11:41,530
take a look I assume I don't have this

304
00:11:39,549 --> 00:11:45,009
opener I don't let me take a look at

305
00:11:41,529 --> 00:11:47,049
what difference that creates so you can

306
00:11:45,009 --> 00:11:49,419
see here like if I was to turn that up

307
00:11:47,049 --> 00:11:52,000
you get more you can see that there's

308
00:11:49,419 --> 00:11:56,439
more light coming in to the sort of

309
00:11:52,000 --> 00:11:58,480
parts that bounce and hit that but again

310
00:11:56,440 --> 00:12:00,820
like you know if we looked at what was

311
00:11:58,480 --> 00:12:02,370
happening here I would say - and you can

312
00:12:00,820 --> 00:12:04,210
see it's brighter in there as well but

313
00:12:02,370 --> 00:12:07,810
one of the interesting things about it

314
00:12:04,210 --> 00:12:09,910
is you do see not that much light coming

315
00:12:07,809 --> 00:12:11,799
into these services here which honestly

316
00:12:09,909 --> 00:12:13,899
you know probably it should have and and

317
00:12:11,799 --> 00:12:15,250
one of the things that I think is you

318
00:12:13,899 --> 00:12:17,379
know possibly a problem there right is

319
00:12:15,250 --> 00:12:19,600
if we don't really know much about that

320
00:12:17,379 --> 00:12:22,899
sampling so if we don't really have much

321
00:12:19,600 --> 00:12:25,779
of a way to have that sampling take

322
00:12:22,899 --> 00:12:27,459
effect I don't know you know I don't

323
00:12:25,779 --> 00:12:28,750
know if really we it feels like we

324
00:12:27,460 --> 00:12:30,430
should probably see more red in there

325
00:12:28,750 --> 00:12:31,809
but to a certain extent we may not

326
00:12:30,429 --> 00:12:33,609
because we just since we're just

327
00:12:31,809 --> 00:12:35,289
completely randomized bounces it doesn't

328
00:12:33,610 --> 00:12:37,570
really know that it needs to look at

329
00:12:35,289 --> 00:12:39,610
that light source particularly much now

330
00:12:37,570 --> 00:12:41,730
on the other hand that part does seem to

331
00:12:39,610 --> 00:12:46,149
be catching a fair amount of the light

332
00:12:41,730 --> 00:12:47,769
coming in so you know I don't know again

333
00:12:46,149 --> 00:12:49,480
just playing around with it a little bit

334
00:12:47,769 --> 00:12:53,289
to see where we're at in terms of what

335
00:12:49,480 --> 00:12:54,490
what we're doing here let me run this

336
00:12:53,289 --> 00:12:58,149
one more time I'm going to take a look

337
00:12:54,490 --> 00:13:00,190
at what's happening here with the width

338
00:12:58,149 --> 00:13:03,279
if I just keep cranking that that up

339
00:13:00,190 --> 00:13:06,070
more and more and again you can sort of

340
00:13:03,279 --> 00:13:09,399
see like all right so in here still you

341
00:13:06,070 --> 00:13:12,220
get very very little of that red in here

342
00:13:09,399 --> 00:13:13,600
you get a lot of it but it feels like I

343
00:13:12,220 --> 00:13:14,019
don't really know to what extent that

344
00:13:13,600 --> 00:13:15,580
that does

345
00:13:14,019 --> 00:13:18,338
feels super accurate to mean and maybe

346
00:13:15,580 --> 00:13:19,720
it is you know I don't know but it

347
00:13:18,339 --> 00:13:21,940
doesn't feel super accurate to me it

348
00:13:19,720 --> 00:13:23,379
feels like maybe it's it's again under

349
00:13:21,940 --> 00:13:25,990
weighting sort of the light that's

350
00:13:23,379 --> 00:13:27,970
coming from there and I don't know it

351
00:13:25,990 --> 00:13:29,440
could be possibly to because I don't

352
00:13:27,970 --> 00:13:33,040
really know very much about this surface

353
00:13:29,440 --> 00:13:34,600
I didn't I don't know if that what

354
00:13:33,039 --> 00:13:36,549
that's actually set to we could take a

355
00:13:34,600 --> 00:13:38,170
look and see what the plane is set to so

356
00:13:36,549 --> 00:13:40,269
it looks like that has a material index

357
00:13:38,169 --> 00:13:41,500
of one which is this and again that so

358
00:13:40,269 --> 00:13:44,009
that just makes me suspicious right

359
00:13:41,500 --> 00:13:46,929
because if it's a perfectly diffuse

360
00:13:44,009 --> 00:13:48,970
surface and it has a perfectly gray

361
00:13:46,929 --> 00:13:51,849
reflectance you would again you would

362
00:13:48,970 --> 00:13:54,220
think you would see more of that light

363
00:13:51,850 --> 00:13:56,050
being shone kind of in here and again

364
00:13:54,220 --> 00:13:57,700
maybe that's not true one of the things

365
00:13:56,049 --> 00:14:00,699
you would do if you were actually you

366
00:13:57,700 --> 00:14:02,740
know developing a ray tracer like this I

367
00:14:00,700 --> 00:14:05,379
think is you would want to try and get

368
00:14:02,740 --> 00:14:08,379
some references right so you'd maybe try

369
00:14:05,379 --> 00:14:10,600
and use an established ray tracer to

370
00:14:08,379 --> 00:14:12,189
render a trace the same scene or you do

371
00:14:10,600 --> 00:14:16,680
maybe the Cornell box or something like

372
00:14:12,190 --> 00:14:18,670
that right and so you know there's that

373
00:14:16,679 --> 00:14:20,379
I'm kind of interested to see what

374
00:14:18,669 --> 00:14:22,929
happens if I introduce some more planes

375
00:14:20,379 --> 00:14:25,480
as well so for example here's you know

376
00:14:22,929 --> 00:14:28,328
one plane equation that we were using if

377
00:14:25,480 --> 00:14:29,709
I introduced another identical plane and

378
00:14:28,328 --> 00:14:31,509
you can see here what the plane

379
00:14:29,708 --> 00:14:33,939
structure looks like it's just the

380
00:14:31,509 --> 00:14:36,458
normal the D value and the material

381
00:14:33,940 --> 00:14:38,529
index so if I created another one that

382
00:14:36,458 --> 00:14:41,500
lets say pointed down positive X and

383
00:14:38,528 --> 00:14:44,708
then I move that backwards so you know

384
00:14:41,500 --> 00:14:46,000
it was kind of maybe a little I don't

385
00:14:44,708 --> 00:14:47,889
really know what our units are here so

386
00:14:46,000 --> 00:14:50,528
I'm not again not sure it's been a while

387
00:14:47,889 --> 00:14:53,049
since we've worked on this but if I just

388
00:14:50,528 --> 00:14:55,419
place a plane somewhere which is what

389
00:14:53,049 --> 00:14:57,879
I'm gonna do here and take a look at

390
00:14:55,419 --> 00:15:03,009
what happens in you know in the case

391
00:14:57,879 --> 00:15:04,059
where I get you can see it slowed down

392
00:15:03,009 --> 00:15:05,230
by the way and the reason for that is

393
00:15:04,059 --> 00:15:08,078
because now a lot more things will be

394
00:15:05,230 --> 00:15:10,810
hitting that plane all right so there's

395
00:15:08,078 --> 00:15:12,370
the plane and it you know it cuts

396
00:15:10,809 --> 00:15:15,309
through here and you know everything

397
00:15:12,370 --> 00:15:16,899
bounces kind of off of it I will say it

398
00:15:15,309 --> 00:15:18,458
doesn't make a lot of sense to me

399
00:15:16,899 --> 00:15:21,039
exactly how that plane looks it looks

400
00:15:18,458 --> 00:15:24,129
like I do we have a really weirdly

401
00:15:21,039 --> 00:15:26,429
eccentric sort of projection value

402
00:15:24,129 --> 00:15:28,559
because you would think that if it was

403
00:15:26,429 --> 00:15:29,849
maybe it's really far away I guess but

404
00:15:28,559 --> 00:15:33,089
it doesn't really feel like it should

405
00:15:29,850 --> 00:15:35,399
have been quite so angled right because

406
00:15:33,090 --> 00:15:38,280
this is directly onto the x-axis I don't

407
00:15:35,399 --> 00:15:42,769
know where our camera is though so

408
00:15:38,279 --> 00:15:45,659
that's so it looks like our camera is

409
00:15:42,769 --> 00:15:47,220
it's supposed to be at 0 in X right I

410
00:15:45,659 --> 00:15:48,659
mean that's that's what that suggests to

411
00:15:47,220 --> 00:15:51,330
me so I wonder if we're just very

412
00:15:48,659 --> 00:15:52,980
eccentric here because that doesn't feel

413
00:15:51,330 --> 00:15:55,350
quite right to me now maybe it's because

414
00:15:52,980 --> 00:15:57,389
our units are you know maybe that plane

415
00:15:55,350 --> 00:16:00,240
is actually very far away so let me try

416
00:15:57,389 --> 00:16:05,549
and let me just see what happens if I

417
00:16:00,240 --> 00:16:07,500
just move that less away I also wonder

418
00:16:05,549 --> 00:16:08,789
do we have a thing for input inputting

419
00:16:07,500 --> 00:16:11,159
the Rays per pixel so we can take

420
00:16:08,789 --> 00:16:13,230
quicker snapshots that might be a good

421
00:16:11,159 --> 00:16:16,079
thing to add while we're at it so like

422
00:16:13,230 --> 00:16:17,879
in here do we actually you know do this

423
00:16:16,080 --> 00:16:19,980
art count at all it doesn't look like we

424
00:16:17,879 --> 00:16:21,929
do in fact raise 4 pixel is just hard

425
00:16:19,980 --> 00:16:25,139
coded so we might want to do is take it

426
00:16:21,929 --> 00:16:27,120
have some way of inputting the max or

427
00:16:25,139 --> 00:16:29,250
sorry the Rays per pixel just so this

428
00:16:27,120 --> 00:16:30,570
would go faster in those cases okay so

429
00:16:29,250 --> 00:16:32,460
that looks a lot better to me so I guess

430
00:16:30,570 --> 00:16:34,890
I just it's probably because that we're

431
00:16:32,460 --> 00:16:36,720
in meters or something roughly so you

432
00:16:34,889 --> 00:16:39,000
can see that that makes a little more

433
00:16:36,720 --> 00:16:40,200
sense to me not sure what's going on in

434
00:16:39,000 --> 00:16:43,320
here

435
00:16:40,200 --> 00:16:46,680
I guess that's just where we intersect

436
00:16:43,320 --> 00:16:49,680
so this is that plane right and you can

437
00:16:46,679 --> 00:16:51,059
see it doing a reflection of what it

438
00:16:49,679 --> 00:16:52,709
sees right let me say this is that

439
00:16:51,059 --> 00:16:56,699
sphere I mean and this is where the

440
00:16:52,710 --> 00:16:59,490
sphere like intersects with it right so

441
00:16:56,700 --> 00:17:02,490
that's just you know I guess sort of

442
00:16:59,490 --> 00:17:04,588
what you would expect at least I believe

443
00:17:02,490 --> 00:17:06,029
that's what's going on there right that

444
00:17:04,588 --> 00:17:07,500
would be where that that's the sphere

445
00:17:06,029 --> 00:17:12,000
line right there so it intersects like

446
00:17:07,500 --> 00:17:15,269
right about there right um all right so

447
00:17:12,000 --> 00:17:16,619
let's try to improve how we're doing the

448
00:17:15,269 --> 00:17:21,299
lighting here and the first thing I'd

449
00:17:16,619 --> 00:17:23,099
like to do is maybe start to have the

450
00:17:21,299 --> 00:17:25,950
light very based a little bit on

451
00:17:23,099 --> 00:17:27,719
direction and again I think we're gonna

452
00:17:25,950 --> 00:17:29,069
have to start putting in in order to

453
00:17:27,720 --> 00:17:30,839
decrease the noise we're gonna have to

454
00:17:29,069 --> 00:17:34,169
start putting in some important sampling

455
00:17:30,839 --> 00:17:36,269
just to figure out like where light

456
00:17:34,170 --> 00:17:38,450
sources tend to be coming from and to

457
00:17:36,269 --> 00:17:40,349
try to sample those a little bit more

458
00:17:38,450 --> 00:17:42,029
specifically

459
00:17:40,349 --> 00:17:46,769
then then we were sampling the other

460
00:17:42,029 --> 00:17:48,690
ones right I also think if we don't have

461
00:17:46,769 --> 00:17:50,038
pure red light which is you know you're

462
00:17:48,690 --> 00:17:51,450
never really gonna have a pure red light

463
00:17:50,038 --> 00:17:53,429
I'm curious what this would do to the

464
00:17:51,450 --> 00:17:55,500
scene as well let's go ahead and add

465
00:17:53,429 --> 00:17:57,720
that so I can I can make this raise per

466
00:17:55,500 --> 00:18:00,000
pixel be something that we can configure

467
00:17:57,720 --> 00:18:01,380
on the command line as well so I'm gonna

468
00:18:00,000 --> 00:18:07,970
go ahead and do this I'm gonna say like

469
00:18:01,380 --> 00:18:13,890
if our count equals two rays for pixel

470
00:18:07,970 --> 00:18:15,929
equals atoi on that args one so that'll

471
00:18:13,890 --> 00:18:18,330
just allow us to very quickly you know

472
00:18:15,929 --> 00:18:21,390
at the command line if I do this will

473
00:18:18,329 --> 00:18:25,710
get 1024 if I want to I can say Oh

474
00:18:21,390 --> 00:18:27,360
actually just use 256 right or some

475
00:18:25,710 --> 00:18:29,069
other small number and that just allows

476
00:18:27,359 --> 00:18:35,339
us to take a sample much quicker and

477
00:18:29,069 --> 00:18:36,869
it'll just be noisier right so again it

478
00:18:35,339 --> 00:18:39,509
makes reasonable sense and like as you

479
00:18:36,869 --> 00:18:41,908
can see it's even with how crappy it is

480
00:18:39,509 --> 00:18:43,650
it still looks okay right

481
00:18:41,909 --> 00:18:45,630
like in other words it does seem to be

482
00:18:43,650 --> 00:18:48,090
doing a good job of producing lighting

483
00:18:45,630 --> 00:18:48,780
that you know it's at least somewhat

484
00:18:48,089 --> 00:18:51,058
plausible

485
00:18:48,779 --> 00:18:53,579
I just don't know to what extent I

486
00:18:51,058 --> 00:18:55,740
really believe that that it feels like

487
00:18:53,579 --> 00:18:57,480
it's under counting the lighting in some

488
00:18:55,740 --> 00:18:59,730
places here I don't know that's just

489
00:18:57,480 --> 00:19:01,200
that's just a my intuition I feel like

490
00:18:59,730 --> 00:19:06,089
there's a little bit of weirdness going

491
00:19:01,200 --> 00:19:12,080
on there so let's go ahead and see what

492
00:19:06,089 --> 00:19:15,658
we want to do yeah going forward here so

493
00:19:12,079 --> 00:19:18,480
assuming that we want to improve the

494
00:19:15,659 --> 00:19:19,740
lighting quality a little bit when we

495
00:19:18,480 --> 00:19:22,440
take a look at how we're doing our

496
00:19:19,740 --> 00:19:24,919
bounces here I guess what we'd like to

497
00:19:22,440 --> 00:19:28,470
do is have some way to of in here

498
00:19:24,919 --> 00:19:30,210
specifying some kind of reflectance

499
00:19:28,470 --> 00:19:33,990
function that actually makes some sense

500
00:19:30,210 --> 00:19:35,579
right and I don't know if there's these

501
00:19:33,990 --> 00:19:39,569
days I feel like there's some pretty

502
00:19:35,579 --> 00:19:41,038
standardized brdf functions floating

503
00:19:39,569 --> 00:19:42,569
around out there and so maybe what we'll

504
00:19:41,038 --> 00:19:45,079
do I guess this is actually official so

505
00:19:42,569 --> 00:19:47,279
I'll I'll keep it in the search history

506
00:19:45,079 --> 00:19:49,529
maybe what we'd like to do is look for a

507
00:19:47,279 --> 00:19:52,609
standardized brdf I think Disney

508
00:19:49,529 --> 00:19:52,609
standardized on one

509
00:19:55,410 --> 00:20:10,200
and I don't really remember exactly what

510
00:20:05,190 --> 00:20:12,630
they were but I was thinking you know we

511
00:20:10,200 --> 00:20:20,210
could we could just see if what what

512
00:20:12,630 --> 00:20:20,210
that what that would be

513
00:20:26,960 --> 00:20:30,890
because I thought there was a

514
00:20:28,160 --> 00:20:32,779
simplification when they did and I

515
00:20:30,890 --> 00:20:34,640
figured if we could tie into a standard

516
00:20:32,779 --> 00:20:36,500
one then that would make it easier to

517
00:20:34,640 --> 00:20:40,160
put in like I figured like they probably

518
00:20:36,500 --> 00:20:42,470
have yeah so I think this is the thing I

519
00:20:40,160 --> 00:20:44,000
was thinking of right so we could

520
00:20:42,470 --> 00:20:45,950
probably do something where we could

521
00:20:44,000 --> 00:20:48,259
sort of tie into something that someone

522
00:20:45,950 --> 00:20:51,680
had already standardized and then just

523
00:20:48,259 --> 00:20:54,529
use that right so you can see here like

524
00:20:51,680 --> 00:20:57,289
they've got kind of a set of parameters

525
00:20:54,529 --> 00:21:00,139
that they decided you know to use for

526
00:20:57,289 --> 00:21:01,250
their films which I don't know if maybe

527
00:21:00,140 --> 00:21:04,850
that makes everything look like a

528
00:21:01,250 --> 00:21:07,519
plastic Pixar movie but you know prop

529
00:21:04,849 --> 00:21:08,809
presumably not presume ibly they tuned

530
00:21:07,519 --> 00:21:11,779
it that way because they like it that

531
00:21:08,809 --> 00:21:13,369
way right but I don't know so I'm just

532
00:21:11,779 --> 00:21:15,139
kind of looking to see do they have a

533
00:21:13,369 --> 00:21:18,409
simplified like yeah like it looks like

534
00:21:15,140 --> 00:21:22,520
that right um but I wonder if they have

535
00:21:18,410 --> 00:21:25,279
one of these that is simplified down and

536
00:21:22,519 --> 00:21:28,240
they say like look here's a material

537
00:21:25,279 --> 00:21:30,259
library for it or whatever right and

538
00:21:28,240 --> 00:21:40,789
looks like they don't summarize this

539
00:21:30,259 --> 00:21:51,740
very well but our base diffuse model is

540
00:21:40,789 --> 00:21:54,558
this so they basically say one plus

541
00:21:51,740 --> 00:21:58,279
fd9 t minus 1 1 minus cosine theta to

542
00:21:54,558 --> 00:22:00,369
the 5th power ok 1 plus FD 90 minus 1 1

543
00:21:58,279 --> 00:22:06,639
minus cosine to the fifth power as well

544
00:22:00,369 --> 00:22:12,049
over the bait the base color over PI so

545
00:22:06,640 --> 00:22:13,610
I'm assuming it looks like none of this

546
00:22:12,049 --> 00:22:14,990
it looks like they really only just have

547
00:22:13,609 --> 00:22:18,678
that one roughness parameter and then

548
00:22:14,990 --> 00:22:21,170
the base color parameter so this would

549
00:22:18,679 --> 00:22:28,100
be pretty easy right for us to put in

550
00:22:21,170 --> 00:22:30,320
there just looking at it and so the base

551
00:22:28,099 --> 00:22:32,629
color is I was just the color the

552
00:22:30,319 --> 00:22:37,819
roughness value is this one and you can

553
00:22:32,630 --> 00:22:41,929
see right it goes from here to there I'm

554
00:22:37,819 --> 00:22:44,450
not 100% sure where's the rest of the

555
00:22:41,929 --> 00:22:51,110
stuff for a specular and do they

556
00:22:44,450 --> 00:23:01,220
actually talk about that specular D so

557
00:22:51,109 --> 00:23:02,899
here's their specular stuff and I'm

558
00:23:01,220 --> 00:23:04,610
assuming then we combine all these terms

559
00:23:02,900 --> 00:23:06,110
they're combining all these terms in the

560
00:23:04,609 --> 00:23:12,709
standard way which I believe they listed

561
00:23:06,109 --> 00:23:15,109
up here right I'm guessing now that's

562
00:23:12,710 --> 00:23:25,960
just the general that's just the general

563
00:23:15,109 --> 00:23:25,959
micro facet do

564
00:23:27,970 --> 00:23:31,279
so do they break that down again or do

565
00:23:30,319 --> 00:23:34,659
they just use it that way it's always

566
00:23:31,279 --> 00:23:34,660
hard to read papers on stream

567
00:23:53,130 --> 00:23:57,299
so I don't know I'm gonna say let's

568
00:23:54,990 --> 00:23:59,929
let's see if we can go for this maybe

569
00:23:57,298 --> 00:23:59,929
this is a bad idea

570
00:24:01,250 --> 00:24:09,919
you know here's the Disney principle

571
00:24:12,230 --> 00:24:22,759
here's the Disney principled brdf in a

572
00:24:15,419 --> 00:24:29,730
shader toy right so yeah like if we look

573
00:24:22,759 --> 00:24:31,200
here it is right if we look this looks

574
00:24:29,730 --> 00:24:39,089
like exactly what it says in the paper

575
00:24:31,200 --> 00:24:41,850
right and see here this is basically the

576
00:24:39,089 --> 00:24:43,529
exactly what we want to do just gonna

577
00:24:41,849 --> 00:24:46,579
make sure that it actually looks like

578
00:24:43,529 --> 00:24:46,579
what I think it would look like

579
00:24:55,419 --> 00:25:02,528
so I mean it looks like they are

580
00:24:56,679 --> 00:25:05,399
literally just doing that alright so

581
00:25:02,528 --> 00:25:09,038
let's try this and and we'll just try to

582
00:25:05,398 --> 00:25:11,828
you know redo these parameters ourselves

583
00:25:09,038 --> 00:25:15,128
right so let's do the Disney let me see

584
00:25:11,828 --> 00:25:19,628
what the best summary one is I can find

585
00:25:15,128 --> 00:25:23,168
of it it may just be this paper but

586
00:25:19,628 --> 00:25:26,949
maybe there's another place that we can

587
00:25:23,169 --> 00:25:33,190
look we'll just grab some of these

588
00:25:26,950 --> 00:25:35,409
things here what's this so here's some

589
00:25:33,190 --> 00:25:38,409
reference code to looks like this code

590
00:25:35,409 --> 00:25:43,149
is the actual Disney one like this is

591
00:25:38,409 --> 00:25:45,219
copyright Disney right so the this

592
00:25:43,148 --> 00:25:49,268
presumably is what they actually think

593
00:25:45,219 --> 00:25:51,249
the code should look like right now this

594
00:25:49,269 --> 00:25:52,719
is a little bit obfuscated right because

595
00:25:51,249 --> 00:25:56,798
we don't know exactly how they worked

596
00:25:52,719 --> 00:25:58,028
these out so you know we may have to go

597
00:25:56,798 --> 00:26:00,158
back and kind of work it through

598
00:25:58,028 --> 00:26:01,269
ourselves to make sure that we know what

599
00:26:00,159 --> 00:26:04,179
we're actually doing in each of these

600
00:26:01,269 --> 00:26:06,368
cases cuz if we were to just like use

601
00:26:04,179 --> 00:26:08,379
this code directly we wouldn't really

602
00:26:06,368 --> 00:26:10,509
know what we were doing right because

603
00:26:08,378 --> 00:26:12,519
it's just like all rolled into one

604
00:26:10,509 --> 00:26:17,069
but we can at least use that as a

605
00:26:12,519 --> 00:26:25,749
reference I suppose separately right

606
00:26:17,069 --> 00:26:29,458
let's take a look here I assume this is

607
00:26:25,749 --> 00:26:29,459
the same PDF we were looking at

608
00:26:45,869 --> 00:26:55,199
because this is just the same thing

609
00:26:47,099 --> 00:26:58,369
right yeah alright um so I think we have

610
00:26:55,200 --> 00:27:01,140
enough information here to just kind of

611
00:26:58,369 --> 00:27:03,239
yeah I don't know that doesn't look

612
00:27:01,140 --> 00:27:05,400
pretty good I'm hoping this is a good

613
00:27:03,240 --> 00:27:08,069
good idea maybe this is a stupid idea

614
00:27:05,400 --> 00:27:11,820
I don't know I'm hoping this is a good

615
00:27:08,069 --> 00:27:16,798
idea but but I don't know you can also

616
00:27:11,819 --> 00:27:18,990
see here like here's like here's another

617
00:27:16,798 --> 00:27:22,079
reference to implementation that

618
00:27:18,990 --> 00:27:23,909
somebody else did and this is an Arnold

619
00:27:22,079 --> 00:27:26,849
right so that's the standard I think

620
00:27:23,909 --> 00:27:28,320
this is an Arnold is that right so this

621
00:27:26,849 --> 00:27:31,639
is that's the standard ray tracer that

622
00:27:28,319 --> 00:27:34,678
like most people use in like film right

623
00:27:31,640 --> 00:27:36,630
you see that a render man so I think

624
00:27:34,679 --> 00:27:39,840
we're all right we can kind of proceed

625
00:27:36,630 --> 00:27:42,510
from here so let's take a look at what's

626
00:27:39,839 --> 00:27:44,720
going on so this right here they're

627
00:27:42,509 --> 00:27:46,919
listing the standard micro facet model a

628
00:27:44,720 --> 00:27:47,490
micro facet model for those of you don't

629
00:27:46,919 --> 00:27:50,009
know what that is

630
00:27:47,490 --> 00:27:52,259
it's basically saying look what really

631
00:27:50,009 --> 00:27:54,419
happens with light is you know you've

632
00:27:52,259 --> 00:27:56,730
got photons and they hit a surface and

633
00:27:54,419 --> 00:27:59,460
the surface we think of as flat is

634
00:27:56,730 --> 00:28:01,409
actually made up of a lot of little fine

635
00:27:59,460 --> 00:28:04,019
surface detail where all the atoms are

636
00:28:01,409 --> 00:28:05,850
arranged in particular ways and so what

637
00:28:04,019 --> 00:28:10,288
we want to do is talk about the actual

638
00:28:05,849 --> 00:28:12,599
like small surface geometry and how that

639
00:28:10,288 --> 00:28:14,398
reflects photons that will tell us how

640
00:28:12,599 --> 00:28:17,038
to actually compute you know a lighting

641
00:28:14,398 --> 00:28:20,250
function and as you can see here it's

642
00:28:17,038 --> 00:28:21,629
like well there's some diffuse term you

643
00:28:20,250 --> 00:28:23,099
know what I mean that we don't know what

644
00:28:21,630 --> 00:28:27,480
it is you can see here it's like of

645
00:28:23,099 --> 00:28:29,699
unknown form right and then you've got

646
00:28:27,480 --> 00:28:33,240
this term here which actually tells you

647
00:28:29,700 --> 00:28:34,620
something about the way the lighting

648
00:28:33,240 --> 00:28:36,149
comes in and you've got a bunch of

649
00:28:34,619 --> 00:28:37,439
Thetas in there and the reason that you

650
00:28:36,148 --> 00:28:39,209
have a bunch of Thetas in there is

651
00:28:37,440 --> 00:28:41,130
because of course you have the direction

652
00:28:39,210 --> 00:28:42,778
that the lights coming in and the

653
00:28:41,130 --> 00:28:45,929
direction that the lights going out

654
00:28:42,778 --> 00:28:46,980
right and you can see here that they've

655
00:28:45,929 --> 00:28:48,990
kind of defined how they're going to

656
00:28:46,980 --> 00:28:50,490
talk about it they say if a surface

657
00:28:48,990 --> 00:28:56,099
friction can occur between a given light

658
00:28:50,490 --> 00:28:57,569
vector L so L is the incoming ray you

659
00:28:56,099 --> 00:28:59,038
know that's gonna bounce out view

660
00:28:57,569 --> 00:29:00,450
vectors V so that's the direction we're

661
00:28:59,038 --> 00:29:02,700
sampling you don't have to think of

662
00:29:00,450 --> 00:29:03,840
these as light and view you don't ever

663
00:29:02,700 --> 00:29:05,669
think of them as like the light source

664
00:29:03,839 --> 00:29:07,709
and the camera you can think of them as

665
00:29:05,669 --> 00:29:09,299
sent instead of just like what direction

666
00:29:07,710 --> 00:29:11,100
are we trying to figure out how much

667
00:29:09,298 --> 00:29:13,109
light is going out and what direction

668
00:29:11,099 --> 00:29:14,969
are we looking in to see how much light

669
00:29:13,109 --> 00:29:19,500
is coming in right so you can think of

670
00:29:14,970 --> 00:29:20,730
them more that way right so anyway there

671
00:29:19,500 --> 00:29:22,288
must exist some portion of surface our

672
00:29:20,730 --> 00:29:24,360
micro facet with a normal aligned

673
00:29:22,288 --> 00:29:27,359
halfway between l and V because that's

674
00:29:24,359 --> 00:29:29,428
what's going to reflect right and so

675
00:29:27,359 --> 00:29:33,418
here's how they create that vector using

676
00:29:29,429 --> 00:29:36,240
H and then they say all right here's the

677
00:29:33,419 --> 00:29:37,500
general form for it we have a D function

678
00:29:36,240 --> 00:29:40,109
that's going to be based on the half

679
00:29:37,500 --> 00:29:43,009
vector and F function that's going to be

680
00:29:40,109 --> 00:29:47,579
based on something that they did not

681
00:29:43,009 --> 00:29:50,148
define why did they not define D I'm

682
00:29:47,579 --> 00:29:50,148
missing something

683
00:29:55,259 --> 00:30:01,650
yeah great they totally left it out it

684
00:29:59,039 --> 00:30:06,178
put up here anyway L&amp;V which we just

685
00:30:01,650 --> 00:30:08,700
talked about so I I don't know what why

686
00:30:06,179 --> 00:30:10,410
do they not define D they I mean we can

687
00:30:08,700 --> 00:30:12,269
go back to here and look at what it is

688
00:30:10,410 --> 00:30:13,970
but that's really weird don't you think

689
00:30:12,269 --> 00:30:17,579
oh there it is here it is here it is

690
00:30:13,970 --> 00:30:21,058
theta D is the difference between L and

691
00:30:17,579 --> 00:30:25,619
the half vector so basically that we can

692
00:30:21,058 --> 00:30:26,819
just compute right all right so most

693
00:30:25,619 --> 00:30:28,409
physically plausible models are not

694
00:30:26,819 --> 00:30:29,339
subscribed to microphones forum and can

695
00:30:28,410 --> 00:30:30,808
still be interpreted as microphone

696
00:30:29,339 --> 00:30:32,548
models and they have a distribution

697
00:30:30,808 --> 00:30:33,808
function if Rennell factor and some

698
00:30:32,548 --> 00:30:35,819
additional factor they could consider

699
00:30:33,808 --> 00:30:37,678
geometric shadowing factor geometric

700
00:30:35,819 --> 00:30:39,839
shadowing factor just means like how

701
00:30:37,679 --> 00:30:41,280
much the micro geometry actually like

702
00:30:39,839 --> 00:30:44,220
prevents photons from hitting other

703
00:30:41,279 --> 00:30:45,359
parts of the micro geometry right the

704
00:30:44,220 --> 00:30:46,740
only real difference Cree micro facet

705
00:30:45,359 --> 00:30:49,109
models and other models is whether they

706
00:30:46,740 --> 00:30:51,750
include the explicit one over term right

707
00:30:49,109 --> 00:30:53,369
which is this right here for models that

708
00:30:51,750 --> 00:30:54,720
don't include that factor an implied

709
00:30:53,369 --> 00:30:56,579
shadowing factor can be determined by

710
00:30:54,720 --> 00:30:58,380
multiplying the model by this after

711
00:30:56,579 --> 00:31:00,058
factoring out so okay

712
00:30:58,380 --> 00:31:02,640
that all makes reasonable sense right I

713
00:31:00,058 --> 00:31:04,589
mean it doesn't tell us anything because

714
00:31:02,640 --> 00:31:07,110
it hasn't told us anything about what

715
00:31:04,589 --> 00:31:08,699
these functions actually are but at

716
00:31:07,109 --> 00:31:10,469
least we know the structure of it now

717
00:31:08,700 --> 00:31:11,759
right like that's not so mysterious now

718
00:31:10,470 --> 00:31:14,370
because we broke it down into what these

719
00:31:11,759 --> 00:31:15,660
things actually mean for those of you

720
00:31:14,369 --> 00:31:20,579
always ask like how do you read papers

721
00:31:15,660 --> 00:31:24,360
like slowly is the answer right so

722
00:31:20,579 --> 00:31:26,579
anyway here's them showing a bunch of I

723
00:31:24,359 --> 00:31:28,349
think the I'm guessing Morrell 100 is

724
00:31:26,579 --> 00:31:30,569
because I probably knew at some point

725
00:31:28,349 --> 00:31:32,250
but it's probably just a giant capture

726
00:31:30,569 --> 00:31:36,589
set where they took actual materials and

727
00:31:32,250 --> 00:31:36,589
put them under like gonio reflectometer

728
00:31:39,980 --> 00:31:44,829
so it's this thing right

729
00:31:42,909 --> 00:31:46,899
I and what you can do with a goniometer

730
00:31:44,829 --> 00:31:49,210
is basically you can put something into

731
00:31:46,898 --> 00:31:51,898
it and what its gonna do is it's gonna

732
00:31:49,210 --> 00:31:55,659
have like a very accurate like photo

733
00:31:51,898 --> 00:31:58,418
detector right and a very accurate

734
00:31:55,659 --> 00:32:01,809
photon emitter and it's going to try and

735
00:31:58,419 --> 00:32:04,450
like shoot photons at the surface from a

736
00:32:01,808 --> 00:32:06,428
very specific angle and collect how many

737
00:32:04,450 --> 00:32:09,009
photons come out at a very specific

738
00:32:06,429 --> 00:32:11,259
angle and so it can build basically a

739
00:32:09,009 --> 00:32:15,368
complete model of how a particular

740
00:32:11,259 --> 00:32:17,079
surface reflects light right and you can

741
00:32:15,368 --> 00:32:18,428
do this in different ways right you can

742
00:32:17,079 --> 00:32:21,460
collect at multiple places at the same

743
00:32:18,429 --> 00:32:23,200
time you can build like basically like a

744
00:32:21,460 --> 00:32:24,548
poor man's gonna reflectometer by

745
00:32:23,200 --> 00:32:25,899
basically just putting cameras and light

746
00:32:24,548 --> 00:32:29,618
sources in various places and seeing

747
00:32:25,898 --> 00:32:33,398
what happens but basically like that's

748
00:32:29,618 --> 00:32:35,138
what happens right and for our purposes

749
00:32:33,398 --> 00:32:38,918
because we're just trying to do like

750
00:32:35,138 --> 00:32:40,569
computer graphics not actual simulation

751
00:32:38,919 --> 00:32:42,690
like we're not trying to do physics here

752
00:32:40,569 --> 00:32:45,819
we're trying to do like pretty pictures

753
00:32:42,690 --> 00:32:49,298
we don't really need like a real go neo

754
00:32:45,819 --> 00:32:50,678
flecked reflectometer or a real brdf and

755
00:32:49,298 --> 00:32:51,788
that's exactly what disney's talking

756
00:32:50,679 --> 00:32:54,009
about here they're basically saying look

757
00:32:51,788 --> 00:32:56,679
let's start with the real world and now

758
00:32:54,009 --> 00:32:58,239
the real world looks and then what we're

759
00:32:56,679 --> 00:33:00,129
gonna do is we're gonna try and figure

760
00:32:58,239 --> 00:33:03,069
out what setup parameters we can give

761
00:33:00,128 --> 00:33:04,748
artists to make them give them the

762
00:33:03,069 --> 00:33:07,210
ability to create services that appear

763
00:33:04,749 --> 00:33:08,798
like they work and exist in a real world

764
00:33:07,210 --> 00:33:10,509
like the one we're used to but so that

765
00:33:08,798 --> 00:33:11,769
they can be more artistic about it and

766
00:33:10,509 --> 00:33:13,538
not actually have to worry about whether

767
00:33:11,769 --> 00:33:17,528
it's really simulating light or what

768
00:33:13,538 --> 00:33:20,819
material is really on you know Woody's

769
00:33:17,528 --> 00:33:24,159
shoe in Toy Story or something right

770
00:33:20,819 --> 00:33:26,229
so Merle is a set of samples that are

771
00:33:24,159 --> 00:33:29,019
captured right so you can see here they

772
00:33:26,229 --> 00:33:30,759
were taking paints woods metals fabrics

773
00:33:29,019 --> 00:33:32,829
stones rubber plastic right all kinds of

774
00:33:30,759 --> 00:33:35,169
things and apparently you can just get

775
00:33:32,829 --> 00:33:39,009
this right and you can you know use it

776
00:33:35,169 --> 00:33:41,109
if we actually looked at that here right

777
00:33:39,009 --> 00:33:43,929
you can see the Merle database you can

778
00:33:41,108 --> 00:33:45,848
you can see the actual results here I

779
00:33:43,929 --> 00:33:48,038
guess you could probably just download

780
00:33:45,848 --> 00:33:51,069
these right so if you look here here's a

781
00:33:48,038 --> 00:33:52,690
binary of each of these things and you

782
00:33:51,069 --> 00:33:55,210
know honestly if we wanted to we could

783
00:33:52,690 --> 00:33:56,620
just go that route it's kind of

784
00:33:55,210 --> 00:33:58,240
interesting maybe we should

785
00:33:56,619 --> 00:34:00,699
I don't know what the format is here we

786
00:33:58,240 --> 00:34:04,120
could take a look at like the readme and

787
00:34:00,700 --> 00:34:09,280
see if it says see here here's the

788
00:34:04,119 --> 00:34:10,779
reader right so you know maybe we go

789
00:34:09,280 --> 00:34:14,139
that route here's here's an example

790
00:34:10,780 --> 00:34:17,649
right you can see it doing the read here

791
00:34:14,139 --> 00:34:19,659
so it calls read brdf read brdf

792
00:34:17,648 --> 00:34:22,750
basically says like alright you know f

793
00:34:19,659 --> 00:34:26,050
read this thing in and you can see like

794
00:34:22,750 --> 00:34:33,898
there's a theta a so there's two angles

795
00:34:26,050 --> 00:34:40,419
right and then it says yeah why does it

796
00:34:33,898 --> 00:34:42,309
how many is it reading here dims so it's

797
00:34:40,418 --> 00:34:44,469
just reading the dimensions of it oh I

798
00:34:42,309 --> 00:34:46,869
see nevermind sorry it's just reading in

799
00:34:44,469 --> 00:34:48,189
first counter that says how many of them

800
00:34:46,869 --> 00:34:51,010
there are and then it reads the whole

801
00:34:48,190 --> 00:34:53,139
thing right so you know what this seems

802
00:34:51,010 --> 00:34:54,879
a little more fun to me right because we

803
00:34:53,139 --> 00:34:56,649
don't have any artists right now and so

804
00:34:54,878 --> 00:34:59,319
we can't do anything so maybe we just do

805
00:34:56,648 --> 00:35:02,980
this this seems a lot better so what if

806
00:34:59,320 --> 00:35:10,660
we just downloaded this let's see what

807
00:35:02,980 --> 00:35:12,039
the license is on it let's see here into

808
00:35:10,659 --> 00:35:13,569
a commercial product so we're not making

809
00:35:12,039 --> 00:35:16,358
a commercial product so I think we're

810
00:35:13,570 --> 00:35:18,220
okay there right and presumably we can

811
00:35:16,358 --> 00:35:19,480
just download these and use them now

812
00:35:18,219 --> 00:35:21,489
maybe there's one that's more permissive

813
00:35:19,480 --> 00:35:24,490
that would let people use it in a

814
00:35:21,489 --> 00:35:27,118
commercial product I don't actually know

815
00:35:24,489 --> 00:35:27,118
let me take a look

816
00:35:36,909 --> 00:35:44,329
um doesn't look like it I don't know if

817
00:35:42,889 --> 00:35:48,858
anyone can think of one maybe we can use

818
00:35:44,329 --> 00:35:50,809
that but you know I'm assuming that they

819
00:35:48,858 --> 00:35:52,519
would be okay with this as an

820
00:35:50,809 --> 00:35:53,809
educational use since this is literally

821
00:35:52,519 --> 00:35:56,960
what we would be using it for is

822
00:35:53,809 --> 00:35:58,338
educational purposes so I'm assuming

823
00:35:56,960 --> 00:36:00,769
that they're ok with that and we can

824
00:35:58,338 --> 00:36:02,599
include the copyright notice in there as

825
00:36:00,769 --> 00:36:04,969
well and actually I don't have to

826
00:36:02,599 --> 00:36:06,980
distribute it in fact that's even better

827
00:36:04,969 --> 00:36:08,779
I just won't include it will just

828
00:36:06,980 --> 00:36:11,000
download it and put it in a separate

829
00:36:08,780 --> 00:36:12,740
directory and then anyone who wants to

830
00:36:11,000 --> 00:36:14,690
can use it and that way it won't get

831
00:36:12,739 --> 00:36:16,489
distributed with anything we do so even

832
00:36:14,690 --> 00:36:18,800
if they don't like the fact that fact

833
00:36:16,489 --> 00:36:20,929
it's okay so well we won't be distribute

834
00:36:18,800 --> 00:36:23,740
well just show how to load it if you

835
00:36:20,929 --> 00:36:25,819
wanted to so let's go in here and

836
00:36:23,739 --> 00:36:27,019
download some of these things I don't

837
00:36:25,820 --> 00:36:28,849
know if you have to literally download

838
00:36:27,019 --> 00:36:30,199
them all manually that seems like a real

839
00:36:28,849 --> 00:36:33,700
pain in the ass

840
00:36:30,199 --> 00:36:35,989
pain in the butt not supposed to swear

841
00:36:33,699 --> 00:36:37,399
but I don't know it doesn't look like

842
00:36:35,989 --> 00:36:40,039
there's any way to download it as more

843
00:36:37,400 --> 00:36:43,130
of a group so I'm gonna go ahead and

844
00:36:40,039 --> 00:36:45,679
just download some of these here so in

845
00:36:43,130 --> 00:36:47,690
fact let me take a look and see if is

846
00:36:45,679 --> 00:36:49,219
there one that's particularly good I

847
00:36:47,690 --> 00:36:50,659
don't actually know it doesn't look like

848
00:36:49,219 --> 00:36:53,209
there's any way to see which ones are

849
00:36:50,659 --> 00:36:54,889
which on here so let me go ahead and

850
00:36:53,210 --> 00:36:56,240
download some of these so let's download

851
00:36:54,889 --> 00:36:58,789
some of these here

852
00:36:56,239 --> 00:37:02,529
let's take brass for example since it's

853
00:36:58,789 --> 00:37:07,369
something we might have an idea about

854
00:37:02,530 --> 00:37:17,510
let's take something it's like light red

855
00:37:07,369 --> 00:37:28,550
paint um red fabric silver metallic

856
00:37:17,510 --> 00:37:38,089
paint I don't know to layer gold to

857
00:37:28,550 --> 00:37:39,380
layer silver if there's anything else we

858
00:37:38,088 --> 00:37:49,659
want here grape

859
00:37:39,380 --> 00:37:51,890
stick sounds good chrome alluminium

860
00:37:49,659 --> 00:37:57,849
probably want some less exciting things

861
00:37:51,889 --> 00:37:57,849
to green fabric light brown fabric

862
00:37:58,269 --> 00:38:14,239
neoprene rubber seems okay now we've got

863
00:38:10,699 --> 00:38:16,009
some right and then I don't see anything

864
00:38:14,239 --> 00:38:17,809
here that says what the structure of it

865
00:38:16,010 --> 00:38:19,640
is but since there's a brdf reader

866
00:38:17,809 --> 00:38:22,849
involved here I'm assuming that we can

867
00:38:19,639 --> 00:38:24,920
just go ahead and load this in it looks

868
00:38:22,849 --> 00:38:29,599
like they have you know three parameters

869
00:38:24,920 --> 00:38:33,800
here theta H theta D and 5 D I'm not

870
00:38:29,599 --> 00:38:34,909
sure why you would have a three

871
00:38:33,800 --> 00:38:38,900
parameter model but I guess that's

872
00:38:34,909 --> 00:38:40,399
because you don't really need the

873
00:38:38,900 --> 00:38:41,960
additional one I'm not sure but so we

874
00:38:40,400 --> 00:38:43,610
probably want to look and see how these

875
00:38:41,960 --> 00:38:45,559
are encoded because I'm not sure exactly

876
00:38:43,610 --> 00:38:50,329
I guess we could try and reverse

877
00:38:45,559 --> 00:38:52,039
engineer it from the code but it would

878
00:38:50,329 --> 00:38:54,349
be nice if I could find some Doc's I

879
00:38:52,039 --> 00:39:00,019
would rather be able to read about it

880
00:38:54,349 --> 00:39:02,679
right like please reference the

881
00:39:00,019 --> 00:39:02,679
following paper

882
00:39:03,889 --> 00:39:10,569
a date of different reflectance model

883
00:39:06,940 --> 00:39:10,570
let's take a look at that

884
00:39:21,300 --> 00:39:26,710
all right so here is ah good good good

885
00:39:26,349 --> 00:39:28,299
good

886
00:39:26,710 --> 00:39:31,300
this is what we need we just needed

887
00:39:28,300 --> 00:39:33,280
something right that would tell us what

888
00:39:31,300 --> 00:39:36,400
we were supposed to interpret these

889
00:39:33,280 --> 00:39:38,470
values as and so you can see here n is

890
00:39:36,400 --> 00:39:40,240
clearly the surface normal of the thing

891
00:39:38,469 --> 00:39:42,639
that we're reflecting off of so that

892
00:39:40,239 --> 00:39:44,889
helps teal it looks like a tangent

893
00:39:42,639 --> 00:39:49,079
vector to the surface so those are

894
00:39:44,889 --> 00:39:52,449
pretty easy for us to understand and

895
00:39:49,079 --> 00:39:55,329
yeah I don't know which ones they're

896
00:39:52,449 --> 00:40:05,609
using okay so looks like this so they're

897
00:39:55,329 --> 00:40:09,730
using F D and Phi D plus PI like I think

898
00:40:05,610 --> 00:40:17,070
yeah so in here we're basically saying

899
00:40:09,730 --> 00:40:28,179
all right 90 bins for H and D so H and D

900
00:40:17,070 --> 00:40:30,910
looking here so there's H right Phi H

901
00:40:28,179 --> 00:40:35,710
sorry there's H and there's Phi D theta

902
00:40:30,909 --> 00:40:40,629
D so theta H theta D right it's a little

903
00:40:35,710 --> 00:40:41,920
hard to read that diagram honestly not

904
00:40:40,630 --> 00:40:43,329
sure where that ankles being measured

905
00:40:41,920 --> 00:40:47,349
off of is I think it's being measured

906
00:40:43,329 --> 00:40:51,670
off the half angle so I think theta D is

907
00:40:47,349 --> 00:40:54,099
the is the drop down of Omega I here or

908
00:40:51,670 --> 00:40:57,900
wait that's not a mega what is that

909
00:40:54,099 --> 00:40:57,900
waita I don't know what that is

910
00:41:11,789 --> 00:41:18,440
what letter is that it is Omega oh never

911
00:41:16,349 --> 00:41:18,440
mind

912
00:41:19,159 --> 00:41:22,618
it's like I don't know if there's a way

913
00:41:21,269 --> 00:41:24,659
to I know there's way to digital but I'm

914
00:41:22,619 --> 00:41:27,358
like I don't remember there being @w and

915
00:41:24,659 --> 00:41:29,429
I was right it was Omega nevermind

916
00:41:27,358 --> 00:41:30,690
shouldn't doubt myself I usually doubt

917
00:41:29,429 --> 00:41:32,429
myself when it comes to math things I

918
00:41:30,690 --> 00:41:35,909
just don't do it very often so it falls

919
00:41:32,429 --> 00:41:37,710
out of the brain quickly they should use

920
00:41:35,909 --> 00:41:39,179
this as the way to digital logo and just

921
00:41:37,710 --> 00:41:42,449
say it's a new Greek letter called way

922
00:41:39,179 --> 00:41:44,250
to alright anyway so Amiga I hear in

923
00:41:42,449 --> 00:41:45,719
this case I think that's what theta D is

924
00:41:44,250 --> 00:41:49,559
measuring and say to a just measuring

925
00:41:45,719 --> 00:41:53,849
here and so let's see so they're

926
00:41:49,559 --> 00:41:57,929
basically saying they they restrict this

927
00:41:53,849 --> 00:42:01,259
by saying we're only going to sample for

928
00:41:57,929 --> 00:42:04,379
four theta D right we're only going to

929
00:42:01,260 --> 00:42:09,060
sample instead of allowing this to very

930
00:42:04,380 --> 00:42:13,070
arbitrarily or I guess I should say this

931
00:42:09,059 --> 00:42:13,070
Phi D here where they had

932
00:42:13,380 --> 00:42:17,809
I don't know where that was

933
00:42:19,849 --> 00:42:24,839
they don't actually show an original Phi

934
00:42:22,710 --> 00:42:26,460
D it looks like but instead of allowing

935
00:42:24,840 --> 00:42:28,740
it to very arbitrarily they're basically

936
00:42:26,460 --> 00:42:33,449
saying alright we're going to pretend

937
00:42:28,739 --> 00:42:37,979
that we always do 90 I'm sorry a PI

938
00:42:33,449 --> 00:42:39,929
which would be a 180 right off of it so

939
00:42:37,980 --> 00:42:41,670
I'd like them to show another diagram

940
00:42:39,929 --> 00:42:43,529
there cuz I'm not sure exactly what they

941
00:42:41,670 --> 00:42:47,909
mean by that they didn't actually show

942
00:42:43,530 --> 00:42:50,070
it in the thing let's take a look let's

943
00:42:47,909 --> 00:42:51,480
see found that specular Peaks were

944
00:42:50,070 --> 00:42:54,120
difficult trip sent using the natural

945
00:42:51,480 --> 00:42:59,280
coordinate system theta in theta out and

946
00:42:54,119 --> 00:43:02,699
v diff and Phi diff again not really

947
00:42:59,280 --> 00:43:04,350
talked about here I guess we have to go

948
00:43:02,699 --> 00:43:06,299
read the reference paper for that which

949
00:43:04,349 --> 00:43:10,139
would be unfortunate rather they just

950
00:43:06,300 --> 00:43:11,280
said exactly what it was because again

951
00:43:10,139 --> 00:43:13,049
I'm just having trouble with this last

952
00:43:11,280 --> 00:43:15,210
term these two are obvious because they

953
00:43:13,050 --> 00:43:17,490
actually drew them right

954
00:43:15,210 --> 00:43:19,800
well even that's a little bit not great

955
00:43:17,489 --> 00:43:24,209
but that's the angle from the normal to

956
00:43:19,800 --> 00:43:26,100
the half vector right and that's the

957
00:43:24,210 --> 00:43:32,460
angle from the half vector to the

958
00:43:26,099 --> 00:43:37,110
outgoing but what is that maybe that's

959
00:43:32,460 --> 00:43:38,789
just a really bad Phi well maybe that's

960
00:43:37,110 --> 00:43:42,480
all it is maybe that's just a really bad

961
00:43:38,789 --> 00:43:44,159
Phi oh yeah it is so never mind it's

962
00:43:42,480 --> 00:43:46,500
just because they used a really weird

963
00:43:44,159 --> 00:43:48,989
Phi here so never mind okay so we've got

964
00:43:46,500 --> 00:43:54,380
it so basically what they're saying here

965
00:43:48,989 --> 00:43:58,019
is like okay so Phi D in this case I

966
00:43:54,380 --> 00:44:04,349
guess they're trying to measure the

967
00:43:58,019 --> 00:44:07,679
angle of gosh it's kind of hard to read

968
00:44:04,349 --> 00:44:10,230
that right you can see why I'm having

969
00:44:07,679 --> 00:44:15,109
trouble with this diagram this angles

970
00:44:10,230 --> 00:44:22,320
coming off we're saying Phi D is like

971
00:44:15,110 --> 00:44:24,990
the angle around the like the rotation

972
00:44:22,320 --> 00:44:27,180
angle around and then theta D is the

973
00:44:24,989 --> 00:44:29,429
rotation this way so the

974
00:44:27,179 --> 00:44:33,449
so basically like if you imagined this

975
00:44:29,429 --> 00:44:36,539
was drawn as a plane we basically have

976
00:44:33,449 --> 00:44:38,909
the rotation in the plane is Phi and

977
00:44:36,539 --> 00:44:40,949
then the rotation like kind of in the

978
00:44:38,909 --> 00:44:44,940
perpendicular like to bend it downward

979
00:44:40,949 --> 00:44:48,539
is Theta D right I mean it looks like

980
00:44:44,940 --> 00:44:50,070
that to me so if we were to look at what

981
00:44:48,539 --> 00:44:55,349
this is showing here they're basically

982
00:44:50,070 --> 00:45:00,660
saying like okay we are doing a plus Phi

983
00:44:55,349 --> 00:45:04,980
I'm sorry or plus PI rotation here we're

984
00:45:00,659 --> 00:45:08,099
saying that if we were to rotate this

985
00:45:04,980 --> 00:45:11,369
thing 180 degrees meaning if we were

986
00:45:08,099 --> 00:45:13,230
gonna you know basically like flip it

987
00:45:11,369 --> 00:45:15,659
around here they're saying that we

988
00:45:13,230 --> 00:45:22,079
believe the function will be the same so

989
00:45:15,659 --> 00:45:26,429
we're not going to sample it with with

990
00:45:22,079 --> 00:45:29,099
the flip I guess right so normally they

991
00:45:26,429 --> 00:45:33,179
would have done 360 bins and now they're

992
00:45:29,099 --> 00:45:34,529
doing 180 bins I guess I mean that's

993
00:45:33,179 --> 00:45:36,029
that's how I read that I don't know how

994
00:45:34,530 --> 00:45:41,010
you folks read that that's how I read

995
00:45:36,030 --> 00:45:44,190
that so then we get our samples and off

996
00:45:41,010 --> 00:45:46,580
we go and so then at that point what we

997
00:45:44,190 --> 00:45:48,869
really just need to do is create

998
00:45:46,579 --> 00:45:50,730
whatever these values would be right we

999
00:45:48,869 --> 00:45:54,299
need to actually figure out what these

1000
00:45:50,730 --> 00:45:57,929
values are to feed into our function

1001
00:45:54,300 --> 00:46:00,900
here and then we can look them up right

1002
00:45:57,929 --> 00:46:02,819
so that's the that's the goal and we can

1003
00:46:00,900 --> 00:46:05,130
look them up in the actual table and

1004
00:46:02,820 --> 00:46:06,720
then have our reflectance which is going

1005
00:46:05,130 --> 00:46:09,590
to be very costly and probably slow

1006
00:46:06,719 --> 00:46:11,969
which is why I say we probably need to

1007
00:46:09,590 --> 00:46:13,320
you know use a simplified thing

1008
00:46:11,969 --> 00:46:15,209
eventually but I'd like to try using

1009
00:46:13,320 --> 00:46:16,530
this as our first thing so that we can

1010
00:46:15,210 --> 00:46:19,409
actually use real measured materials and

1011
00:46:16,530 --> 00:46:21,720
see what they look like so if we go

1012
00:46:19,409 --> 00:46:23,940
ahead and take this model and try to

1013
00:46:21,719 --> 00:46:26,549
implement it right what we're

1014
00:46:23,940 --> 00:46:29,940
effectively going to need is a 3d lookup

1015
00:46:26,550 --> 00:46:31,260
of this of this thing and we're gonna

1016
00:46:29,940 --> 00:46:32,849
need to do that we're gonna need to

1017
00:46:31,260 --> 00:46:34,920
construct what those parameters are

1018
00:46:32,849 --> 00:46:38,549
based on the reflectance that we end up

1019
00:46:34,920 --> 00:46:40,970
seeing so let's go back to the source

1020
00:46:38,550 --> 00:46:46,039
code here and and see

1021
00:46:40,969 --> 00:46:47,838
oops no no no no wait where's the wait

1022
00:46:46,039 --> 00:46:49,358
how come you can't undo closed tab

1023
00:46:47,838 --> 00:47:00,349
anymore

1024
00:46:49,358 --> 00:47:04,068
what happened that yes that did it

1025
00:47:00,349 --> 00:47:07,760
alright so taking a look at the the

1026
00:47:04,068 --> 00:47:09,889
source code here and brdf read so what

1027
00:47:07,760 --> 00:47:12,020
it looks like they have is just three

1028
00:47:09,889 --> 00:47:15,108
dimension values which tell us how many

1029
00:47:12,019 --> 00:47:18,289
of each thing there are and then there's

1030
00:47:15,108 --> 00:47:20,269
just exactly them and they've pre said

1031
00:47:18,289 --> 00:47:23,210
basically that they have to be this

1032
00:47:20,269 --> 00:47:24,858
exact resolution so I guess that makes

1033
00:47:23,210 --> 00:47:26,780
our job a little easier

1034
00:47:24,858 --> 00:47:32,299
because these values will actually just

1035
00:47:26,780 --> 00:47:35,380
be exactly correct right now I don't

1036
00:47:32,300 --> 00:47:38,300
know if we care about that part so much

1037
00:47:35,380 --> 00:47:40,490
but maybe for lookups it's good to have

1038
00:47:38,300 --> 00:47:44,000
it be that way

1039
00:47:40,489 --> 00:47:46,129
I doubt it matters that much but so for

1040
00:47:44,000 --> 00:47:47,989
the moment I think we will forego that

1041
00:47:46,130 --> 00:47:52,338
and and we'll we'll try to make it be a

1042
00:47:47,989 --> 00:47:53,659
little bit more arbitrary alright so

1043
00:47:52,338 --> 00:47:57,679
what I'm going to do here is take

1044
00:47:53,659 --> 00:48:01,429
material and I'm gonna have like a brdf

1045
00:47:57,679 --> 00:48:04,250
table and brdf table is just going to

1046
00:48:01,429 --> 00:48:07,299
have like account for these three things

1047
00:48:04,250 --> 00:48:09,710
and then it's going to have a values

1048
00:48:07,300 --> 00:48:12,230
pointer and we're just going to look

1049
00:48:09,710 --> 00:48:14,269
them up in here this table is just gonna

1050
00:48:12,230 --> 00:48:16,880
be very simple and each one of these

1051
00:48:14,269 --> 00:48:21,409
materials is going to be able to have a

1052
00:48:16,880 --> 00:48:24,950
brdf table pointer in it I guess like

1053
00:48:21,409 --> 00:48:27,710
this and so if we want to we can now

1054
00:48:24,949 --> 00:48:30,739
have each one of our materials have some

1055
00:48:27,710 --> 00:48:32,329
kind of a brdf with it in fact I guess

1056
00:48:30,739 --> 00:48:34,549
we don't really have to do it quite that

1057
00:48:32,329 --> 00:48:36,260
way what we could do is just put the

1058
00:48:34,550 --> 00:48:39,680
weld the actual table directly in there

1059
00:48:36,260 --> 00:48:42,290
right so we could have the brdf table

1060
00:48:39,679 --> 00:48:43,759
just exist like this and so we could do

1061
00:48:42,289 --> 00:48:44,809
is have it like so that we know where

1062
00:48:43,760 --> 00:48:47,000
there are not things or a light source

1063
00:48:44,809 --> 00:48:49,309
or not based on the admittance I guess

1064
00:48:47,000 --> 00:48:50,960
or I guess we could make the brdf table

1065
00:48:49,309 --> 00:48:53,719
itself have those emission values in

1066
00:48:50,960 --> 00:48:55,280
there I'm not sure how we

1067
00:48:53,719 --> 00:48:58,579
actually exactly do that I guess we

1068
00:48:55,280 --> 00:49:00,349
would have maybe some kind of a

1069
00:48:58,579 --> 00:49:01,789
information in here about how much light

1070
00:49:00,349 --> 00:49:04,250
is coming off versus how much light is

1071
00:49:01,789 --> 00:49:07,639
being reflected or something like that

1072
00:49:04,250 --> 00:49:09,679
but anyway I think that's all we would

1073
00:49:07,639 --> 00:49:12,170
really have to do so here we would we

1074
00:49:09,679 --> 00:49:13,969
know we're 90 90 360 in this case but

1075
00:49:12,170 --> 00:49:15,920
again I'm not going to hard-code that in

1076
00:49:13,969 --> 00:49:18,319
so I'm just gonna make a quick function

1077
00:49:15,920 --> 00:49:21,260
here that will load the brdf table into

1078
00:49:18,320 --> 00:49:23,840
memory and so if we want to load these

1079
00:49:21,260 --> 00:49:26,090
brdf tables we just can so here there's

1080
00:49:23,840 --> 00:49:29,210
going to be a like a load brdf like that

1081
00:49:26,090 --> 00:49:31,820
I believe we have internal right yes we

1082
00:49:29,210 --> 00:49:34,280
do so what I want to do is load this in

1083
00:49:31,820 --> 00:49:36,650
the RF 32s right or at least can be

1084
00:49:34,280 --> 00:49:41,840
represented as f 32s are they doubles in

1085
00:49:36,650 --> 00:49:44,000
this this world what are they so it

1086
00:49:41,840 --> 00:49:46,130
looks like they're doubles we don't

1087
00:49:44,000 --> 00:49:50,840
actually need doubles so I will probably

1088
00:49:46,130 --> 00:49:53,630
elect to convert them rather than yeah

1089
00:49:50,840 --> 00:49:54,829
rather than than not but what do I do

1090
00:49:53,630 --> 00:49:57,950
here is just say okay there's a load

1091
00:49:54,829 --> 00:50:00,259
brdf and and maybe we'll say load

1092
00:49:57,949 --> 00:50:01,939
Murrell because different people could

1093
00:50:00,260 --> 00:50:03,589
have different brdf formats so we'll say

1094
00:50:01,940 --> 00:50:07,579
this is a Murrell file since we know

1095
00:50:03,588 --> 00:50:10,009
that it's a Merl binary that comes from

1096
00:50:07,579 --> 00:50:12,199
them right so I'm gonna say that here's

1097
00:50:10,010 --> 00:50:14,960
the file name here's the file I'm gonna

1098
00:50:12,199 --> 00:50:16,368
do an F open on it and we want to read

1099
00:50:14,960 --> 00:50:20,210
it as a binary file so when to pass on

1100
00:50:16,369 --> 00:50:28,769
our B they're gonna go ahead and make

1101
00:50:20,210 --> 00:50:30,630
sure we put out errors and here I'm

1102
00:50:28,769 --> 00:50:32,429
print out if we can't open the file just

1103
00:50:30,630 --> 00:50:33,930
so the user knows you know you're in the

1104
00:50:32,429 --> 00:50:37,049
wrong directory or we didn't provide the

1105
00:50:33,929 --> 00:50:38,730
right files or who knows what so if I

1106
00:50:37,050 --> 00:50:43,310
open the actual file I'm gonna do an F

1107
00:50:38,730 --> 00:50:46,289
read to get the so the the actual

1108
00:50:43,309 --> 00:50:48,029
dimensions in there and again I'm gonna

1109
00:50:46,289 --> 00:50:50,519
want to give this a target like where do

1110
00:50:48,030 --> 00:50:52,980
you actually read this thing so I'll

1111
00:50:50,519 --> 00:50:54,599
call that the destination so in order to

1112
00:50:52,980 --> 00:50:56,579
do the F read you can see here there

1113
00:50:54,599 --> 00:50:58,079
it's just three integers apparently so

1114
00:50:56,579 --> 00:51:00,259
they literally just wrote like three

1115
00:50:58,079 --> 00:51:03,329
integers in a row out at the beginning

1116
00:51:00,260 --> 00:51:05,940
so all I should have to do is basically

1117
00:51:03,329 --> 00:51:08,489
read those into our intz here directly

1118
00:51:05,940 --> 00:51:10,829
presumably so we can just say like

1119
00:51:08,489 --> 00:51:14,819
there's the counts we're gonna do an F

1120
00:51:10,829 --> 00:51:16,349
read and the F read needs to take the

1121
00:51:14,820 --> 00:51:18,539
file pointer and the the in size but

1122
00:51:16,349 --> 00:51:20,759
otherwise it doesn't I don't think well

1123
00:51:18,539 --> 00:51:24,960
I'll do this the way they did it they

1124
00:51:20,760 --> 00:51:27,240
were saying look here here's the

1125
00:51:24,960 --> 00:51:29,340
destination that'll be the same we're

1126
00:51:27,239 --> 00:51:31,739
doing three intz I'm just gonna multiply

1127
00:51:29,340 --> 00:51:35,269
it out myself so I'm just gonna say look

1128
00:51:31,739 --> 00:51:37,969
it's gonna be the size of this thing

1129
00:51:35,269 --> 00:51:43,880
here and I'm gonna read one of them and

1130
00:51:37,969 --> 00:51:43,879
that's it it's the same exact thing oh

1131
00:51:44,869 --> 00:51:48,509
that was correct it's the same exact

1132
00:51:47,099 --> 00:51:49,799
thing they were doing but I just instead

1133
00:51:48,510 --> 00:51:52,170
of doing the multiply there I'm gonna

1134
00:51:49,800 --> 00:51:53,850
let C do the multiplication for me so

1135
00:51:52,170 --> 00:51:58,889
going to read those in then I'm going to

1136
00:51:53,849 --> 00:52:02,190
allocate the the amount of space I'm

1137
00:51:58,889 --> 00:52:08,819
going to need here so I know I need to

1138
00:52:02,190 --> 00:52:11,429
load the number of F 32 s that would be

1139
00:52:08,820 --> 00:52:14,670
implied by that basically three wide

1140
00:52:11,429 --> 00:52:18,529
three dimensional table so it's gonna be

1141
00:52:14,670 --> 00:52:22,920
desk count 0 times desk out 1 x desc

1142
00:52:18,530 --> 00:52:25,140
count 2 that's the entire thing what I'd

1143
00:52:22,920 --> 00:52:26,400
like to do here is say well we kind of

1144
00:52:25,139 --> 00:52:29,129
know we're gonna have to read this right

1145
00:52:26,400 --> 00:52:32,820
after we allocate it and we also know we

1146
00:52:29,130 --> 00:52:35,760
need to load in it as doubles actually

1147
00:52:32,820 --> 00:52:38,100
so we're gonna need two things here so

1148
00:52:35,760 --> 00:52:41,250
what I'm gonna do is say there's a total

1149
00:52:38,099 --> 00:52:43,920
count right so we have like a total

1150
00:52:41,250 --> 00:52:45,480
count value that would be

1151
00:52:43,920 --> 00:52:46,800
also I don't know that I want these in

1152
00:52:45,480 --> 00:52:48,900
so I think I'm gonna use these as you

1153
00:52:46,800 --> 00:52:52,680
32s instead so let's say there's a total

1154
00:52:48,900 --> 00:52:54,539
count here and then there'll be a couple

1155
00:52:52,679 --> 00:52:58,859
different total sizes so there's going

1156
00:52:54,539 --> 00:53:00,329
to be a total read size and that total

1157
00:52:58,860 --> 00:53:03,360
read size is just gonna be the total

1158
00:53:00,329 --> 00:53:08,789
count times size of a double right since

1159
00:53:03,360 --> 00:53:10,620
the next 64 like so and then there's a

1160
00:53:08,789 --> 00:53:17,039
total table size and that's going to be

1161
00:53:10,619 --> 00:53:19,109
a total count times a float so then what

1162
00:53:17,039 --> 00:53:32,239
we can do is allocate the total read

1163
00:53:19,110 --> 00:53:36,809
size and the total table size like so

1164
00:53:32,239 --> 00:53:38,939
and then I need to read and convert so

1165
00:53:36,809 --> 00:53:43,250
I'm going to do an F read into my temp

1166
00:53:38,940 --> 00:53:47,570
table of the total read size like this

1167
00:53:43,250 --> 00:53:47,570
and then I'm going to do a conversion

1168
00:53:53,360 --> 00:53:57,840
and so you can see here I'm just trying

1169
00:53:56,280 --> 00:54:06,060
to make this as simple as possible for

1170
00:53:57,840 --> 00:54:07,440
myself and that's just converting down

1171
00:54:06,059 --> 00:54:09,809
converting from a double which is way

1172
00:54:07,440 --> 00:54:13,019
more precision than we need into

1173
00:54:09,809 --> 00:54:14,880
something much simpler right so that

1174
00:54:13,019 --> 00:54:19,289
would presumably do it I'm gonna close

1175
00:54:14,880 --> 00:54:20,369
the file off here and I'm gonna free the

1176
00:54:19,289 --> 00:54:22,349
temp memory because we won't need it

1177
00:54:20,369 --> 00:54:28,199
anymore but that's about it

1178
00:54:22,349 --> 00:54:30,960
right um oops all right I think that's

1179
00:54:28,199 --> 00:54:32,730
all we really needed and so now we have

1180
00:54:30,960 --> 00:54:35,220
the ability to load these Merl binaries

1181
00:54:32,730 --> 00:54:36,780
I need to actually put them somewhere so

1182
00:54:35,219 --> 00:54:39,259
I don't actually know where that

1183
00:54:36,780 --> 00:54:46,660
downloaded to probably the desktop yep

1184
00:54:39,260 --> 00:54:50,290
I'm gonna grab all of these like so

1185
00:54:46,659 --> 00:54:56,639
and then I'm gonna go over to our W here

1186
00:54:50,289 --> 00:54:56,639
and I'm gonna go ahead and make in here

1187
00:54:59,039 --> 00:55:06,550
wanted a new folder I want a new folder

1188
00:55:04,030 --> 00:55:10,180
thank you I'm gonna make a moral

1189
00:55:06,550 --> 00:55:13,530
directory and I'm gonna go ahead and

1190
00:55:10,179 --> 00:55:18,250
paste this in there so now we've got our

1191
00:55:13,530 --> 00:55:22,690
Merle stuff here and I'm gonna go ahead

1192
00:55:18,250 --> 00:55:25,358
and try and load some of these up right

1193
00:55:22,690 --> 00:55:29,679
and just we'll go into the debugger and

1194
00:55:25,358 --> 00:55:32,348
and see if it works so when I go to OD

1195
00:55:29,679 --> 00:55:34,269
which will put us into debug mode I'm

1196
00:55:32,349 --> 00:55:37,809
gonna try and load some little Merle

1197
00:55:34,269 --> 00:55:39,969
binaries in for these things here so for

1198
00:55:37,809 --> 00:55:43,539
each of our materials I'm gonna try and

1199
00:55:39,969 --> 00:55:46,480
load in a Merle binary and and put it in

1200
00:55:43,539 --> 00:55:52,179
here we don't really know what these are

1201
00:55:46,480 --> 00:55:54,849
supposed to be and you know what no I

1202
00:55:52,179 --> 00:55:55,598
think about it wait I missed some I must

1203
00:55:54,849 --> 00:56:00,910
have missed something

1204
00:55:55,599 --> 00:56:02,470
oh yeah

1205
00:56:00,909 --> 00:56:04,149
so they I was gonna say they should be

1206
00:56:02,469 --> 00:56:05,618
red green and blue and there are so

1207
00:56:04,150 --> 00:56:09,910
there's three each

1208
00:56:05,619 --> 00:56:12,220
so it's RGB right so it is a little bit

1209
00:56:09,909 --> 00:56:14,799
different let me go ahead and fix that

1210
00:56:12,219 --> 00:56:16,659
first before we do any of this but we're

1211
00:56:14,800 --> 00:56:19,839
gonna go ahead and do Merle binary here

1212
00:56:16,659 --> 00:56:23,259
load Merle binary and I'm going to go

1213
00:56:19,838 --> 00:56:27,460
ahead and take these materials what I

1214
00:56:23,260 --> 00:56:29,740
might do is at first I might say let's

1215
00:56:27,460 --> 00:56:31,780
take some of the planes out here

1216
00:56:29,739 --> 00:56:34,689
I'm sorry take some of the spheres out

1217
00:56:31,780 --> 00:56:37,780
so we have a much simpler scene this way

1218
00:56:34,690 --> 00:56:40,059
we only have like one plane and one

1219
00:56:37,780 --> 00:56:42,819
sphere and that way we can just use

1220
00:56:40,059 --> 00:56:47,190
materials zero one and two and then

1221
00:56:42,818 --> 00:56:47,190
we'll load binary Zinn to each of those

1222
00:56:47,519 --> 00:56:53,909
don't ask me why I did that I meant this

1223
00:56:56,500 --> 00:57:02,139
and so this way I can target each of

1224
00:56:59,469 --> 00:57:05,469
these and just see if this works at all

1225
00:57:02,139 --> 00:57:10,719
so we can load materials into each of

1226
00:57:05,469 --> 00:57:16,529
these they're going to be like whichever

1227
00:57:10,719 --> 00:57:16,529
ones we want so maybe like grey plastic

1228
00:57:16,590 --> 00:57:24,160
can be sort of our base one here this

1229
00:57:21,849 --> 00:57:27,550
material zero I guess doesn't need one

1230
00:57:24,159 --> 00:57:33,009
right because it's not reflective it's

1231
00:57:27,550 --> 00:57:37,119
just the sky or whatever right load

1232
00:57:33,010 --> 00:57:40,359
Merle binary for this last guy here gray

1233
00:57:37,119 --> 00:57:42,250
plastic we'll use something more

1234
00:57:40,358 --> 00:57:48,190
reflective or interesting like Chrome

1235
00:57:42,250 --> 00:57:49,059
right and we'll just see if we can get

1236
00:57:48,190 --> 00:57:53,409
this working at all

1237
00:57:49,059 --> 00:57:55,779
so if we do that like I said we got to

1238
00:57:53,409 --> 00:57:57,519
expand this to be by threes and that

1239
00:57:55,780 --> 00:57:59,260
also means that the material should be

1240
00:57:57,519 --> 00:58:04,989
by threes as well so it should be like

1241
00:57:59,260 --> 00:58:07,690
this right and so then in here when I do

1242
00:58:04,989 --> 00:58:09,909
this malloc what I actually want is this

1243
00:58:07,690 --> 00:58:14,349
should be size of v3 and this should be

1244
00:58:09,909 --> 00:58:18,899
size of s 64 times three then when we do

1245
00:58:14,349 --> 00:58:23,019
the total count and we go through here I

1246
00:58:18,900 --> 00:58:25,059
guess we don't really have a V 64 but

1247
00:58:23,019 --> 00:58:27,489
that's okay and so when we go through

1248
00:58:25,059 --> 00:58:30,509
total count what we would want to do

1249
00:58:27,489 --> 00:58:34,649
here is actually step this like that and

1250
00:58:30,510 --> 00:58:34,650
we'd want to do something like this

1251
00:58:40,659 --> 00:58:46,819
so we'd want to do is do like alright 3

1252
00:58:43,429 --> 00:58:48,919
x value index + 0 3 + 1 3 2 right and

1253
00:58:46,820 --> 00:58:51,050
convert those all to float and then

1254
00:58:48,920 --> 00:58:53,030
bundle them into a V 3 and then we have

1255
00:58:51,050 --> 00:58:56,840
like successfully like compacted that

1256
00:58:53,030 --> 00:58:58,960
information right so I think that's what

1257
00:58:56,840 --> 00:58:58,960
we need

1258
00:59:00,849 --> 00:59:10,549
why are you complaining Lane V 3 wait

1259
00:59:06,590 --> 00:59:13,519
Lane V 3 o is V 3 o YZ Elaine V 3

1260
00:59:10,550 --> 00:59:25,580
currently do we not have any way to talk

1261
00:59:13,519 --> 00:59:29,659
about Elaine V 3 V 3 normally oh so we

1262
00:59:25,579 --> 00:59:31,400
just made that B Lane V 3 always alright

1263
00:59:29,659 --> 00:59:34,460
well I don't really care about that

1264
00:59:31,400 --> 00:59:37,190
that's fine and we may need to change

1265
00:59:34,460 --> 00:59:39,440
the format of these anyway because we

1266
00:59:37,190 --> 00:59:42,200
don't really know how what the best way

1267
00:59:39,440 --> 00:59:43,730
to load these is gonna be although I

1268
00:59:42,199 --> 00:59:44,960
would imagine we won't have much of a

1269
00:59:43,730 --> 00:59:50,059
choice because it's gonna be different

1270
00:59:44,960 --> 00:59:53,000
for each lane so there is that so we'll

1271
00:59:50,059 --> 00:59:55,610
try to load up these Merl binaries here

1272
00:59:53,000 --> 00:59:57,769
the problem that we're gonna have is you

1273
00:59:55,610 --> 00:59:59,260
know when we are actually looking at

1274
00:59:57,769 --> 01:00:01,849
sort of the input of the output here

1275
00:59:59,260 --> 01:00:03,890
we're gonna have a pathing problem right

1276
01:00:01,849 --> 01:00:06,860
so we need this that we need to know

1277
01:00:03,889 --> 01:00:09,589
where these materials would actually be

1278
01:00:06,860 --> 01:00:11,240
because we don't know right so we need

1279
01:00:09,590 --> 01:00:13,250
some way of supplying like a material

1280
01:00:11,239 --> 01:00:14,929
path for the moment all hard-coded but

1281
01:00:13,250 --> 01:00:20,389
we're gonna need something better than

1282
01:00:14,929 --> 01:00:24,730
that eventually right so let's suppose

1283
01:00:20,389 --> 01:00:33,230
we did that let's see if I go into

1284
01:00:24,730 --> 01:00:34,940
remedy what happens I'm gonna change my

1285
01:00:33,230 --> 01:00:42,190
working directory to be the data

1286
01:00:34,940 --> 01:00:42,190
directory here yeah oops

1287
01:00:44,610 --> 01:00:50,019
[Music]

1288
01:00:46,139 --> 01:00:53,679
so that all seems good and then I'll run

1289
01:00:50,019 --> 01:01:06,610
it that doesn't look good

1290
01:00:53,679 --> 01:01:10,869
let me take a loop in there so looping

1291
01:01:06,610 --> 01:01:12,250
over this see what the total count is

1292
01:01:10,869 --> 01:01:20,079
and I just want to see what the rest of

1293
01:01:12,250 --> 01:01:29,409
stuff is ninety eighty that I'll just do

1294
01:01:20,079 --> 01:01:32,409
all the conversions free it alright

1295
01:01:29,409 --> 01:01:35,679
so that seems to work why are we not

1296
01:01:32,409 --> 01:01:37,889
getting any print out here though did I

1297
01:01:35,679 --> 01:01:37,889
break something

1298
01:01:53,869 --> 01:01:56,319
sure

1299
01:02:01,150 --> 01:02:15,338
what I must have a read error what did I

1300
01:02:05,798 --> 01:02:27,460
do wrong there read that in total read

1301
01:02:15,338 --> 01:02:36,190
sighs that seems right that looks

1302
01:02:27,460 --> 01:02:43,300
correct to me we are reading

1303
01:02:36,190 --> 01:02:46,030
number things out of temp that all seems

1304
01:02:43,300 --> 01:02:49,980
reasonable why am I getting a am I

1305
01:02:46,030 --> 01:02:51,940
getting a bug there what am I missing

1306
01:02:49,980 --> 01:02:53,980
probably just being stupid

1307
01:02:51,940 --> 01:02:58,170
it was a bad stream day-to-day as you

1308
01:02:53,980 --> 01:02:58,170
know Linux totally ruined my life

1309
01:03:01,108 --> 01:03:08,828
the total table size looks good that all

1310
01:03:07,358 --> 01:03:20,980
looks that it looks good what's what's

1311
01:03:08,829 --> 01:03:23,940
wrong why don't you like that please

1312
01:03:20,980 --> 01:03:23,940
please crash again

1313
01:03:29,429 --> 01:03:39,929
let's set it down to a very low number

1314
01:03:31,829 --> 01:03:48,029
of rays as well so maybe it's just very

1315
01:03:39,929 --> 01:03:56,789
slow and let me take a look at what what

1316
01:03:48,030 --> 01:04:01,200
it output is well there's our test

1317
01:03:56,789 --> 01:04:04,320
bitmap all right so that's okay for

1318
01:04:01,199 --> 01:04:06,989
starters for our test fit map so what

1319
01:04:04,320 --> 01:04:08,760
I'm going to do now is since I don't I

1320
01:04:06,989 --> 01:04:10,339
don't know why that hit a crash there

1321
01:04:08,760 --> 01:04:14,340
that's really kind of weird and

1322
01:04:10,340 --> 01:04:16,100
disconcerting but anyway what I want to

1323
01:04:14,340 --> 01:04:19,950
do now is actually sample this this

1324
01:04:16,099 --> 01:04:21,900
value so when we hit something here and

1325
01:04:19,949 --> 01:04:24,000
we want to figure out what the

1326
01:04:21,900 --> 01:04:27,660
reflection is so you can kind of see

1327
01:04:24,000 --> 01:04:29,039
here we have like a bunch of terms and

1328
01:04:27,659 --> 01:04:31,559
what we want to do is actually just use

1329
01:04:29,039 --> 01:04:33,480
the values that we get in now there's

1330
01:04:31,559 --> 01:04:36,299
some weird stuff that we probably need

1331
01:04:33,480 --> 01:04:37,740
to start taking account of now which is

1332
01:04:36,300 --> 01:04:40,830
you can kind of see there's some weird

1333
01:04:37,739 --> 01:04:45,029
like I don't know why there are these

1334
01:04:40,829 --> 01:04:49,199
scaling values in here right and so I

1335
01:04:45,030 --> 01:04:51,530
kind of want to see if they explain what

1336
01:04:49,199 --> 01:04:51,529
those are

1337
01:05:21,800 --> 01:05:26,789
so I don't see a lot of explanation here

1338
01:05:24,869 --> 01:05:28,679
about what the scaling values are

1339
01:05:26,789 --> 01:05:30,929
actually therefore because since they're

1340
01:05:28,679 --> 01:05:33,269
storing floating-point values I'm not

1341
01:05:30,929 --> 01:05:34,799
sure why you would scale anything

1342
01:05:33,269 --> 01:05:38,400
because you wouldn't you have just baked

1343
01:05:34,800 --> 01:05:40,190
the scale into the actual file so I'm

1344
01:05:38,400 --> 01:05:53,599
not sure what those are meant to

1345
01:05:40,190 --> 01:05:53,599
represent right you see them saying I

1346
01:05:55,789 --> 01:06:00,429
and those values show up in here too

1347
01:05:58,130 --> 01:06:00,430
right

1348
01:06:04,179 --> 01:06:11,719
so yeah so here's look-up brdf value

1349
01:06:07,789 --> 01:06:14,900
right and here's like they're saying if

1350
01:06:11,719 --> 01:06:18,459
this is the this is the input theta you

1351
01:06:14,900 --> 01:06:21,349
know this is this is the input angles

1352
01:06:18,460 --> 01:06:24,289
you can see here that they say give me

1353
01:06:21,349 --> 01:06:28,909
the results and the results they give

1354
01:06:24,289 --> 01:06:34,009
you are scaled by these values but I

1355
01:06:28,909 --> 01:06:41,559
don't know why like why wouldn't you

1356
01:06:34,010 --> 01:06:41,560
just scale the values in the file right

1357
01:06:55,440 --> 01:07:04,380
I mean I'll I'll go one further and just

1358
01:06:58,380 --> 01:07:07,289
say I also don't really understand why

1359
01:07:04,380 --> 01:07:07,890
aren't they using the actual offset

1360
01:07:07,289 --> 01:07:11,910
lookups

1361
01:07:07,889 --> 01:07:15,420
like here's the double table for brdf

1362
01:07:11,909 --> 01:07:22,259
and they do basically like ind which is

1363
01:07:15,420 --> 01:07:29,369
where you are in the file right and then

1364
01:07:22,260 --> 01:07:32,190
they do the stride over to for the green

1365
01:07:29,369 --> 01:07:37,170
and over nothing for the blue that's a

1366
01:07:32,190 --> 01:07:43,650
really weird way to look that up is it

1367
01:07:37,170 --> 01:07:44,849
not just like like do you understand

1368
01:07:43,650 --> 01:07:46,559
what I'm saying why is this so

1369
01:07:44,849 --> 01:07:49,349
complicated like why isn't it just three

1370
01:07:46,559 --> 01:07:51,809
times index plus one or something

1371
01:07:49,349 --> 01:08:03,390
do they did they write these out in a

1372
01:07:51,809 --> 01:08:12,140
really like idiosyncratic way theta diff

1373
01:08:03,389 --> 01:08:12,139
index times B READY appear as Phi over 2

1374
01:08:13,099 --> 01:08:23,489
times theta D it looks like they wrote

1375
01:08:19,020 --> 01:08:26,969
them out like blocked like maybe the RG

1376
01:08:23,488 --> 01:08:29,939
and bees go strided but I can't really

1377
01:08:26,969 --> 01:08:32,159
tell right I mean that's what it looks

1378
01:08:29,939 --> 01:08:34,710
like they did here which is nuts I have

1379
01:08:32,159 --> 01:08:42,750
no idea why you would do that why don't

1380
01:08:34,710 --> 01:08:46,079
just do RGB RGB RGB RGB I mean right so

1381
01:08:42,750 --> 01:08:50,670
really what that means is this is not

1382
01:08:46,079 --> 01:08:53,729
correct right so actually what goes on

1383
01:08:50,670 --> 01:08:54,390
here apparently is this is the red

1384
01:08:53,729 --> 01:08:58,649
Channel

1385
01:08:54,390 --> 01:09:04,739
I guess meaning if we look at what the

1386
01:08:58,649 --> 01:09:07,528
dimensions are of this thing you can see

1387
01:09:04,738 --> 01:09:09,058
here okay so we've got you're in a

1388
01:09:07,529 --> 01:09:15,000
sampling res data

1389
01:09:09,059 --> 01:09:16,889
Sam permits a 2d feed the fees over two

1390
01:09:15,000 --> 01:09:19,349
is you know what they're saying they're

1391
01:09:16,889 --> 01:09:21,538
doing because they have they they did

1392
01:09:19,349 --> 01:09:24,298
that plus PI mirror that's the plus PI

1393
01:09:21,538 --> 01:09:29,908
mirror getting folded in their sewing I

1394
01:09:24,298 --> 01:09:35,849
have half the resolution so in here we

1395
01:09:29,908 --> 01:09:39,210
would basically say like okay if we if

1396
01:09:35,849 --> 01:09:42,298
we assume that this is how that looks

1397
01:09:39,210 --> 01:09:45,838
then this look up here the read all

1398
01:09:42,298 --> 01:09:50,670
comes first so the first full tote full

1399
01:09:45,838 --> 01:09:56,340
count of values are the Reds the greens

1400
01:09:50,670 --> 01:10:00,658
are after one of the third dimensions

1401
01:09:56,340 --> 01:10:06,809
worth of things and they're looking that

1402
01:10:00,658 --> 01:10:11,879
up oh sorry no they're mine the greens

1403
01:10:06,809 --> 01:10:17,670
are after H times D times two so that's

1404
01:10:11,880 --> 01:10:21,139
the greens are one read next and then

1405
01:10:17,670 --> 01:10:25,469
this is two Reds next okay so it's green

1406
01:10:21,139 --> 01:10:31,279
it's then like however many there are in

1407
01:10:25,469 --> 01:10:31,279
one total count

1408
01:10:41,189 --> 01:10:48,029
so wanna say that's what it's doing so

1409
01:10:43,770 --> 01:10:51,960
it's reds greens blues in this way right

1410
01:10:48,029 --> 01:10:53,219
so it's RGB that was really hard to

1411
01:10:51,960 --> 01:10:55,199
untangle but that's all they're really

1412
01:10:53,220 --> 01:10:57,449
doing here they just don't have a stride

1413
01:10:55,199 --> 01:11:00,659
this just happens to be the stride and

1414
01:10:57,449 --> 01:11:04,460
this just happens to be twice the stride

1415
01:11:00,659 --> 01:11:09,869
because Phi D is normally divided by 2

1416
01:11:04,460 --> 01:11:11,310
right that's fine

1417
01:11:09,869 --> 01:11:12,899
so then what we want to do is be able to

1418
01:11:11,310 --> 01:11:15,300
construct we want to be able to look up

1419
01:11:12,899 --> 01:11:17,069
into this table so what we need to be

1420
01:11:15,300 --> 01:11:19,310
able to do is when we actually go to

1421
01:11:17,069 --> 01:11:25,229
compute this bounce so in here right

1422
01:11:19,310 --> 01:11:28,380
well what we want to be able to do is

1423
01:11:25,229 --> 01:11:34,949
create the raid erection here and get

1424
01:11:28,380 --> 01:11:37,260
the attenuation factor right see here

1425
01:11:34,949 --> 01:11:40,319
apply the correct attenuation factor and

1426
01:11:37,260 --> 01:11:43,170
so all of this stuff is still the same

1427
01:11:40,319 --> 01:11:45,329
right but in order to get this

1428
01:11:43,170 --> 01:11:48,119
attenuation factor what we need to do

1429
01:11:45,329 --> 01:11:51,059
now is base it on more than just the

1430
01:11:48,119 --> 01:11:53,510
cosine right so what we want to do is

1431
01:11:51,060 --> 01:11:56,730
move the attenuation computation down

1432
01:11:53,510 --> 01:11:59,489
right so we want to do this and then

1433
01:11:56,729 --> 01:12:01,529
based on this Ray direction and we don't

1434
01:11:59,489 --> 01:12:04,050
really need cosine of 10 anymore like

1435
01:12:01,529 --> 01:12:07,500
that is going to be rolled into the brdf

1436
01:12:04,050 --> 01:12:08,820
now because we've got sampled data so

1437
01:12:07,500 --> 01:12:13,800
what we need to be able to do is say

1438
01:12:08,819 --> 01:12:17,399
alright we have the normal of the

1439
01:12:13,800 --> 01:12:19,199
surface that we hit I guess right and we

1440
01:12:17,399 --> 01:12:20,189
need to do the attenuation here for

1441
01:12:19,199 --> 01:12:23,010
whatever the thing is that we're

1442
01:12:20,189 --> 01:12:26,039
bouncing off of and so we have the raid

1443
01:12:23,010 --> 01:12:27,659
erection that we're outgoing and we have

1444
01:12:26,039 --> 01:12:30,359
the raid erection that we were coming

1445
01:12:27,659 --> 01:12:33,420
from which is this and we need to store

1446
01:12:30,359 --> 01:12:36,839
that so this is going to be like the

1447
01:12:33,420 --> 01:12:40,440
next raid direction right and then after

1448
01:12:36,840 --> 01:12:44,430
we do our computation we would we would

1449
01:12:40,439 --> 01:12:46,439
compute it like we would assign it in so

1450
01:12:44,430 --> 01:12:48,090
based on the Raider X and the next raid

1451
01:12:46,439 --> 01:12:51,149
direction so those two things combined

1452
01:12:48,090 --> 01:12:54,449
we need to be able to do our sample so

1453
01:12:51,149 --> 01:12:55,710
somehow out of those two we end

1454
01:12:54,449 --> 01:12:57,750
than normal that we're actually using

1455
01:12:55,710 --> 01:12:59,130
the next normal there I also don't know

1456
01:12:57,750 --> 01:13:02,399
when does that get assigned is that get

1457
01:12:59,130 --> 01:13:13,319
assigned up here somewhere where does

1458
01:13:02,399 --> 01:13:16,199
next normal so it's not really next

1459
01:13:13,319 --> 01:13:19,079
normal it's really just normal right we

1460
01:13:16,199 --> 01:13:20,729
don't actually keep that value so it's

1461
01:13:19,079 --> 01:13:22,199
the normal that we hit it's just called

1462
01:13:20,729 --> 01:13:27,329
next normal for no really good reason

1463
01:13:22,199 --> 01:13:31,260
here alright so what we need is here we

1464
01:13:27,329 --> 01:13:34,710
need our reflectance right so here we

1465
01:13:31,260 --> 01:13:36,360
need our like our FC value and what

1466
01:13:34,710 --> 01:13:38,670
we're gonna do here is we're going to

1467
01:13:36,359 --> 01:13:41,909
take our ref C value and we're gonna

1468
01:13:38,670 --> 01:13:45,960
apply it and so our ref C has to come

1469
01:13:41,909 --> 01:13:48,119
from a brdf look up and the brdf look up

1470
01:13:45,960 --> 01:13:51,539
is going to be whatever the material is

1471
01:13:48,119 --> 01:13:54,149
in this particular case and presumably

1472
01:13:51,539 --> 01:14:00,090
we did do the material look up at some

1473
01:13:54,149 --> 01:14:04,649
point here so you can see we did a

1474
01:14:00,090 --> 01:14:06,180
gather right here for for that matte

1475
01:14:04,649 --> 01:14:08,849
look up because remember this is wide

1476
01:14:06,180 --> 01:14:12,720
now so basically what we need to do here

1477
01:14:08,850 --> 01:14:19,980
is this I guess this is a lane v3 right

1478
01:14:12,720 --> 01:14:24,510
yeah so what we need to do here is say

1479
01:14:19,979 --> 01:14:26,699
alright when we do this ref C we need to

1480
01:14:24,510 --> 01:14:29,010
do a wide lookup and we're going to be

1481
01:14:26,699 --> 01:14:32,300
providing to our brdf lookup function

1482
01:14:29,010 --> 01:14:34,050
which is going to have to do a gather

1483
01:14:32,300 --> 01:14:36,119
we're going to have to provide that

1484
01:14:34,050 --> 01:14:39,329
information now what I don't know is the

1485
01:14:36,119 --> 01:14:42,329
emit color here right when that does the

1486
01:14:39,329 --> 01:14:53,368
load I don't know where Matt emit color

1487
01:14:42,329 --> 01:14:55,229
was getting used you find that out so

1488
01:14:53,368 --> 01:14:57,238
the mission just always gets added in

1489
01:14:55,229 --> 01:14:59,820
immediately so that's fine so we need to

1490
01:14:57,238 --> 01:15:01,888
edit that part at all right so all we

1491
01:14:59,819 --> 01:15:03,958
need to do now is is implement a brdf

1492
01:15:01,889 --> 01:15:11,909
lookup function and we know what the

1493
01:15:03,958 --> 01:15:14,188
material hits were and we know what are

1494
01:15:11,908 --> 01:15:17,549
all of our information is here so in

1495
01:15:14,189 --> 01:15:21,510
terms of the two vectors it's negative

1496
01:15:17,550 --> 01:15:24,479
ray direction it's the next normal and

1497
01:15:21,510 --> 01:15:27,869
then it's the Ray direction next ray

1498
01:15:24,479 --> 01:15:30,389
direction right and with that in mind we

1499
01:15:27,868 --> 01:15:34,908
can build our brdf lookup function which

1500
01:15:30,389 --> 01:15:34,909
is going to be slow but that's fine

1501
01:15:39,599 --> 01:15:50,639
and so in here we've got world materials

1502
01:15:41,729 --> 01:15:52,829
this is our material array and we've got

1503
01:15:50,639 --> 01:15:59,609
the mat index which is going to be

1504
01:15:52,828 --> 01:16:02,609
two-lane u-32 we've got our raid

1505
01:15:59,609 --> 01:16:04,708
erection here that's pointing off

1506
01:16:02,609 --> 01:16:07,458
towards that's like the direction we're

1507
01:16:04,708 --> 01:16:15,599
sampling so that's basically like our

1508
01:16:07,458 --> 01:16:20,898
sample direction we have the normal now

1509
01:16:15,599 --> 01:16:30,149
X let's call it normal and then we have

1510
01:16:20,899 --> 01:16:30,840
here this is our I guess that's that's

1511
01:16:30,149 --> 01:16:32,820
incorrect

1512
01:16:30,840 --> 01:16:34,739
so this is our what are they because

1513
01:16:32,819 --> 01:16:37,948
this is the view der and this is the

1514
01:16:34,738 --> 01:16:39,328
light direction right so that's that's

1515
01:16:37,948 --> 01:16:41,188
sort of what their nominal Eicher was

1516
01:16:39,328 --> 01:16:46,788
like where the lights coming from where

1517
01:16:41,189 --> 01:16:49,679
the view is and so if we go back now and

1518
01:16:46,788 --> 01:16:53,429
look at how this is coming in we need to

1519
01:16:49,679 --> 01:16:58,260
know these values so we need to know

1520
01:16:53,429 --> 01:17:01,649
theta in and Phi in and theta out and

1521
01:16:58,260 --> 01:17:05,609
Phi out and then this does sort of the

1522
01:17:01,649 --> 01:17:06,510
conversion to their sampling so we're

1523
01:17:05,609 --> 01:17:09,570
going to have to reproduce

1524
01:17:06,510 --> 01:17:13,650
that to look it up in their table but

1525
01:17:09,569 --> 01:17:16,618
first we have to produce those angles at

1526
01:17:13,649 --> 01:17:20,219
all right and so this is why I say this

1527
01:17:16,618 --> 01:17:21,868
is gonna be very expensive and bad like

1528
01:17:20,219 --> 01:17:24,210
really terrible and we're probably gonna

1529
01:17:21,868 --> 01:17:29,098
have to like do our own implementation

1530
01:17:24,210 --> 01:17:31,769
of a costs or something here right but

1531
01:17:29,099 --> 01:17:36,989
if we go look at how where was the

1532
01:17:31,769 --> 01:17:40,530
diagram here it is so if we look at what

1533
01:17:36,988 --> 01:17:46,919
this is giving us for parameters what we

1534
01:17:40,529 --> 01:17:54,750
have here is there's like there's the

1535
01:17:46,920 --> 01:17:57,389
normal vs. so so if we look at look at

1536
01:17:54,750 --> 01:18:00,000
this diagram basically right and this is

1537
01:17:57,389 --> 01:18:02,368
the standard coordinate frame so if we

1538
01:18:00,000 --> 01:18:04,590
look at you know and I guess I don't

1539
01:18:02,368 --> 01:18:07,198
know which way we want to do this but if

1540
01:18:04,590 --> 01:18:10,500
we look at these two pieces of code

1541
01:18:07,198 --> 01:18:15,509
side-by-side so if we look at this this

1542
01:18:10,500 --> 01:18:18,658
is taking in the theta in Phi in oops so

1543
01:18:15,510 --> 01:18:21,179
this is Theta in and Phi in so those

1544
01:18:18,658 --> 01:18:23,460
those two are very simple for us to

1545
01:18:21,179 --> 01:18:26,099
understand because that they don't

1546
01:18:23,460 --> 01:18:29,279
encode anything right and then we've got

1547
01:18:26,099 --> 01:18:30,659
here theta out in a Phi out and again

1548
01:18:29,279 --> 01:18:32,279
very simple to understand because

1549
01:18:30,658 --> 01:18:36,799
they're just the polar coordinates of

1550
01:18:32,279 --> 01:18:40,018
these two values if you look over here

1551
01:18:36,800 --> 01:18:44,519
in terms of what those are these are

1552
01:18:40,019 --> 01:18:51,719
versus the half angle right and the half

1553
01:18:44,519 --> 01:18:53,940
angle I guess is is I assume it's it's

1554
01:18:51,719 --> 01:18:58,319
defined as being well you know what I

1555
01:18:53,939 --> 01:19:02,698
can't really tell what is what is the

1556
01:18:58,319 --> 01:19:06,538
half angle actually half of let me take

1557
01:19:02,698 --> 01:19:08,578
a look prove it especially we vary age

1558
01:19:06,538 --> 01:19:12,139
the angle between the normal and the

1559
01:19:08,578 --> 01:19:12,139
half vector right

1560
01:19:17,060 --> 01:19:22,640
just double-check what they think the

1561
01:19:18,739 --> 01:19:24,079
half vector is of course doesn't look

1562
01:19:22,640 --> 01:19:26,289
like anyone says what the half vector is

1563
01:19:24,079 --> 01:19:26,289
here

1564
01:19:34,720 --> 01:19:44,539
sorry half - vector the angles respect

1565
01:19:42,949 --> 01:19:47,979
to the half angle half factor between

1566
01:19:44,539 --> 01:19:50,119
incoming and outgoing directions okay

1567
01:19:47,979 --> 01:19:53,209
that's pretty easy for us to produce

1568
01:19:50,119 --> 01:19:55,130
right so looking at this it's unclear

1569
01:19:53,210 --> 01:19:56,989
like we may just want to produce this

1570
01:19:55,130 --> 01:19:59,060
directly cuz it doesn't look like I mean

1571
01:19:56,989 --> 01:20:01,279
this isn't any easier to produce than

1572
01:19:59,060 --> 01:20:03,530
this if all you have is the vectors

1573
01:20:01,279 --> 01:20:05,840
really it feels like we should kind of

1574
01:20:03,529 --> 01:20:07,489
just go directly to this right like we

1575
01:20:05,840 --> 01:20:11,180
should just we should just compute these

1576
01:20:07,489 --> 01:20:13,130
direct these directly in my opinion so

1577
01:20:11,180 --> 01:20:15,380
in order to do that we would just first

1578
01:20:13,130 --> 01:20:18,109
do the half vector right this thing they

1579
01:20:15,380 --> 01:20:19,819
call the half vector and the incoming

1580
01:20:18,109 --> 01:20:20,960
and outcoming we would just do viewed er

1581
01:20:19,819 --> 01:20:23,869
+ leichter

1582
01:20:20,960 --> 01:20:27,140
multiplied by 0.5 right I mean that's

1583
01:20:23,869 --> 01:20:29,420
all we would really need to do and that

1584
01:20:27,140 --> 01:20:32,510
produces the half vector so that's the H

1585
01:20:29,420 --> 01:20:34,069
here right and then if we wanted to

1586
01:20:32,510 --> 01:20:35,960
start figuring out what the angles are

1587
01:20:34,069 --> 01:20:38,389
between these two things well one of our

1588
01:20:35,960 --> 01:20:41,869
problems is these two are normalized but

1589
01:20:38,390 --> 01:20:42,770
this is not normalized right so we're

1590
01:20:41,869 --> 01:20:44,269
gonna have to think about that a little

1591
01:20:42,770 --> 01:20:45,920
bit but if we take a look at what's

1592
01:20:44,270 --> 01:20:49,520
going on here and we just say like

1593
01:20:45,920 --> 01:20:52,489
alright so the angles we need are theta

1594
01:20:49,520 --> 01:20:55,750
H theta D Phi D and Phi H do those

1595
01:20:52,489 --> 01:20:59,329
correspond to something in here and

1596
01:20:55,750 --> 01:21:02,449
looking it looks like feted if theta

1597
01:20:59,329 --> 01:21:10,189
half so standard chords - half diffe

1598
01:21:02,449 --> 01:21:13,789
chords theta 1/2 phi half theta half phi

1599
01:21:10,189 --> 01:21:15,769
half and then diff yeah so it looks like

1600
01:21:13,789 --> 01:21:19,600
once we know those we can look this up

1601
01:21:15,770 --> 01:21:21,710
directly and you can see that here we

1602
01:21:19,600 --> 01:21:23,630
have to look at kind of see if what

1603
01:21:21,710 --> 01:21:26,960
they're doing with with these five

1604
01:21:23,630 --> 01:21:29,510
different decks and theta diff index so

1605
01:21:26,960 --> 01:21:31,640
theta diff index looks like it's it's

1606
01:21:29,510 --> 01:21:37,039
looks to me like mostly just clamping

1607
01:21:31,640 --> 01:21:39,050
right and and mapping the angle out to

1608
01:21:37,039 --> 01:21:43,430
the resolution resolution of the table

1609
01:21:39,050 --> 01:21:45,980
so those seem fairly straightforward and

1610
01:21:43,430 --> 01:21:48,039
easy to reproduce like that there's not

1611
01:21:45,979 --> 01:21:50,709
anything mysterious going on there

1612
01:21:48,038 --> 01:21:55,029
so really it seems like all we have to

1613
01:21:50,710 --> 01:21:56,800
do is focus on producing these right and

1614
01:21:55,029 --> 01:22:00,219
so let's just try to predict reproduce

1615
01:21:56,800 --> 01:22:03,960
those so in order to reproduce those

1616
01:22:00,219 --> 01:22:11,559
what we need is we need feita 1/2 and

1617
01:22:03,960 --> 01:22:14,109
phi 1/2 and then we need sated if and 5

1618
01:22:11,559 --> 01:22:17,590
if that's how they want us to produce

1619
01:22:14,109 --> 01:22:20,259
the encoding right and then from those

1620
01:22:17,590 --> 01:22:25,538
we need to do this mapping on each of

1621
01:22:20,260 --> 01:22:28,739
them and and off we would go right then

1622
01:22:25,538 --> 01:22:28,738
we can actually look up in the table

1623
01:22:28,859 --> 01:22:34,479
all right so in order to produce these

1624
01:22:31,599 --> 01:22:37,750
what we're looking for here is just the

1625
01:22:34,479 --> 01:22:41,049
a cost basically of this thing in this

1626
01:22:37,750 --> 01:22:42,460
reference frame and one of the problems

1627
01:22:41,050 --> 01:22:44,860
that we're gonna have here is we don't

1628
01:22:42,460 --> 01:22:48,309
really know what the tangent actually is

1629
01:22:44,859 --> 01:22:51,538
and the problem is that we do kind of

1630
01:22:48,309 --> 01:22:54,699
need to know that because in order to

1631
01:22:51,538 --> 01:22:57,759
properly like orient these things there

1632
01:22:54,698 --> 01:22:59,828
has to be a direction of the surface

1633
01:22:57,760 --> 01:23:01,719
right the reason for that is because

1634
01:22:59,828 --> 01:23:03,609
surfaces that are well services that are

1635
01:23:01,719 --> 01:23:06,698
isotropic meaning they reflect light the

1636
01:23:03,609 --> 01:23:08,288
same regardless of rotation don't care

1637
01:23:06,698 --> 01:23:09,698
like they wouldn't care what this is

1638
01:23:08,288 --> 01:23:12,130
because the function that we're looking

1639
01:23:09,698 --> 01:23:15,609
up would be symmetric - no you wouldn't

1640
01:23:12,130 --> 01:23:17,288
matter how you spun the surface but for

1641
01:23:15,609 --> 01:23:19,238
a nice tropic services they reflect

1642
01:23:17,288 --> 01:23:22,750
light differently depending on the

1643
01:23:19,238 --> 01:23:24,729
orientation of the surface right and so

1644
01:23:22,750 --> 01:23:27,488
we would need a tangent frame here as

1645
01:23:24,729 --> 01:23:33,698
well in order to measure things like Phi

1646
01:23:27,488 --> 01:23:37,118
H because that's in this plane so things

1647
01:23:33,698 --> 01:23:39,009
like theta H like theta H here we don't

1648
01:23:37,118 --> 01:23:41,589
care what you know it doesn't matter

1649
01:23:39,010 --> 01:23:48,090
right what the orientation of the

1650
01:23:41,590 --> 01:23:48,090
surface is for theta H I and for theta D

1651
01:23:48,538 --> 01:23:53,590
robably the same thing but for the two

1652
01:23:52,599 --> 01:23:57,069
Phi's

1653
01:23:53,590 --> 01:23:58,929
right it feels like those are going to

1654
01:23:57,069 --> 01:24:02,130
be ones that in order to measure them

1655
01:23:58,929 --> 01:24:05,399
properly we would need to

1656
01:24:02,130 --> 01:24:06,989
to have the tangent frame right as far

1657
01:24:05,399 --> 01:24:10,889
as I can tell that that'd be the only

1658
01:24:06,989 --> 01:24:18,479
way you could actually do it right and

1659
01:24:10,890 --> 01:24:26,730
and looking at this right what is this

1660
01:24:18,479 --> 01:24:32,669
stuff for so you can see them actually

1661
01:24:26,729 --> 01:24:33,649
doing it here right which is kind of

1662
01:24:32,670 --> 01:24:36,210
weird

1663
01:24:33,649 --> 01:24:38,159
so it's interesting the way they were

1664
01:24:36,210 --> 01:24:39,689
actually doing the lookup here is they

1665
01:24:38,159 --> 01:24:41,399
were saying well you didn't give us

1666
01:24:39,689 --> 01:24:43,379
vectors you gave us the original angles

1667
01:24:41,399 --> 01:24:44,939
which you probably had to do a bunch of

1668
01:24:43,380 --> 01:24:46,319
work to measure and then what we're

1669
01:24:44,939 --> 01:24:48,689
gonna do is we're gonna immediately turn

1670
01:24:46,319 --> 01:24:51,299
them back into vectors right cuz we need

1671
01:24:48,689 --> 01:24:53,399
to take the half angle which they did

1672
01:24:51,300 --> 01:24:54,869
and for some reason they normalized both

1673
01:24:53,399 --> 01:24:56,460
of these even though they didn't need to

1674
01:24:54,869 --> 01:24:58,710
because they were gonna normalize this I

1675
01:24:56,460 --> 01:24:58,890
don't know why but that's just what they

1676
01:24:58,710 --> 01:25:03,149
did

1677
01:24:58,890 --> 01:25:05,310
right and then once they took these you

1678
01:25:03,149 --> 01:25:07,619
can see like exactly like I said they

1679
01:25:05,310 --> 01:25:12,090
basically take an a COS of the half

1680
01:25:07,619 --> 01:25:21,149
angle vector and 1/8 tan four of the

1681
01:25:12,090 --> 01:25:24,300
other two parts of it to produce right

1682
01:25:21,149 --> 01:25:25,559
to produce the the values they want and

1683
01:25:24,300 --> 01:25:27,750
this assumes that you've already mapped

1684
01:25:25,560 --> 01:25:28,920
it into the tangent space right because

1685
01:25:27,750 --> 01:25:32,550
these are already relative to the

1686
01:25:28,920 --> 01:25:34,319
tangent space so yeah so it seems like

1687
01:25:32,550 --> 01:25:36,180
mostly what we need to be able to do

1688
01:25:34,319 --> 01:25:38,369
here and what we don't we don't really

1689
01:25:36,180 --> 01:25:41,730
have is we need to be able to provide a

1690
01:25:38,369 --> 01:25:44,939
tangent space which I'm honestly not

1691
01:25:41,729 --> 01:25:46,879
sure how we would do for pretty much

1692
01:25:44,939 --> 01:25:50,429
what we'd have to do is when we do our

1693
01:25:46,880 --> 01:25:54,150
collision and we produce the normal so

1694
01:25:50,430 --> 01:25:57,030
like if you if we look down here when we

1695
01:25:54,149 --> 01:26:00,839
produce the normal we're gonna also have

1696
01:25:57,029 --> 01:26:03,059
to produce a tangent right and what we

1697
01:26:00,840 --> 01:26:06,060
could do is change the name here normal

1698
01:26:03,060 --> 01:26:10,070
and tangent like so so when we go in

1699
01:26:06,060 --> 01:26:10,070
over to the normals here

1700
01:26:14,300 --> 01:26:23,690
just do a search in replace so we'll

1701
01:26:20,600 --> 01:26:26,530
just call that normal like so and then

1702
01:26:23,689 --> 01:26:29,179
we also have tangent and so tangent will

1703
01:26:26,529 --> 01:26:30,649
give us the ability to do that mapping

1704
01:26:29,180 --> 01:26:34,520
right if we have the normal and the

1705
01:26:30,649 --> 01:26:36,439
tangent we can do the mapping now since

1706
01:26:34,520 --> 01:26:39,950
we generally are going to also we're

1707
01:26:36,439 --> 01:26:42,619
gonna know more than that as well like

1708
01:26:39,949 --> 01:26:45,079
we can probably also know the normal the

1709
01:26:42,619 --> 01:26:47,119
tangent and the the by tangent like the

1710
01:26:45,079 --> 01:26:48,649
thing that completes that coordinate

1711
01:26:47,119 --> 01:26:53,930
frame and makes this an actual like

1712
01:26:48,649 --> 01:26:55,939
basis right I'm trying to think if we

1713
01:26:53,930 --> 01:26:57,350
need that I think we do because we're

1714
01:26:55,939 --> 01:27:02,210
you know we're probably gonna want to do

1715
01:26:57,350 --> 01:27:04,600
this right and that way when we come

1716
01:27:02,210 --> 01:27:07,369
through here and we say okay like let's

1717
01:27:04,600 --> 01:27:17,060
conditionally assign these two normal

1718
01:27:07,369 --> 01:27:24,689
tangent by tangent like this and same

1719
01:27:17,060 --> 01:27:27,239
thing on the sphere so the norm

1720
01:27:24,689 --> 01:27:30,779
here's fear relative ray origin yeah you

1721
01:27:27,238 --> 01:27:32,218
can see so that produces the the hit for

1722
01:27:30,779 --> 01:27:34,170
the sphere the thing that's gonna be

1723
01:27:32,219 --> 01:27:46,050
tough for us right is producing the

1724
01:27:34,170 --> 01:27:47,909
normal yeah so right loading up the

1725
01:27:46,050 --> 01:27:50,430
plane normal it becomes pretty easy

1726
01:27:47,909 --> 01:27:53,219
because the plane itself can just store

1727
01:27:50,430 --> 01:27:56,520
the other parts that it needs so in the

1728
01:27:53,219 --> 01:27:59,939
plane right when we define our planes we

1729
01:27:56,520 --> 01:28:03,120
can just also store like three things

1730
01:27:59,939 --> 01:28:08,698
the tangent and the buy vector right the

1731
01:28:03,119 --> 01:28:13,738
by tangent I could name these a little

1732
01:28:08,698 --> 01:28:16,529
bit more explicitly here so if we said

1733
01:28:13,738 --> 01:28:19,500
normal then in this case we could also

1734
01:28:16,529 --> 01:28:21,869
just if we actually hit these then we

1735
01:28:19,500 --> 01:28:24,738
could just load the other ones in maybe

1736
01:28:21,869 --> 01:28:24,738
I'll load them all

1737
01:28:33,020 --> 01:28:38,570
right so we load those in and I do my

1738
01:28:35,840 --> 01:28:40,369
conditional assignment then I would have

1739
01:28:38,569 --> 01:28:44,479
everything I would need to do the full

1740
01:28:40,369 --> 01:28:46,279
mapping and in the case where I have a

1741
01:28:44,479 --> 01:28:48,709
sphere it's a much harder problem

1742
01:28:46,279 --> 01:28:50,869
because we don't really know how to

1743
01:28:48,710 --> 01:28:55,609
produce the other values and if we go

1744
01:28:50,869 --> 01:28:58,149
over to let me just grab my sketch pad

1745
01:28:55,609 --> 01:28:58,149
here

1746
01:29:16,609 --> 01:29:25,259
so if we're looking at a sphere the

1747
01:29:23,550 --> 01:29:26,820
problem we're gonna have is okay so we

1748
01:29:25,260 --> 01:29:29,400
know we hit this point on the sphere we

1749
01:29:26,819 --> 01:29:31,198
know the normal is just the vector from

1750
01:29:29,399 --> 01:29:33,149
the center of the sphere to the outside

1751
01:29:31,198 --> 01:29:35,458
of the sphere because that's you know

1752
01:29:33,149 --> 01:29:37,558
the surface normal at that point so that

1753
01:29:35,458 --> 01:29:39,059
gives us a situation where we sort of

1754
01:29:37,559 --> 01:29:41,099
have you know you imagine this is the

1755
01:29:39,059 --> 01:29:43,650
surface of the sphere up close at that

1756
01:29:41,099 --> 01:29:45,989
point that gives a situation where we

1757
01:29:43,649 --> 01:29:48,899
know the normal but what we need is

1758
01:29:45,988 --> 01:29:50,728
another basis right something that's

1759
01:29:48,899 --> 01:29:52,948
going to give us like you know something

1760
01:29:50,729 --> 01:29:55,110
like this then we can actually use as

1761
01:29:52,948 --> 01:29:59,848
like this is the coordinate system of

1762
01:29:55,109 --> 01:30:01,198
the sphere and so you can see why I'm

1763
01:29:59,849 --> 01:30:04,260
like I don't really know exactly how to

1764
01:30:01,198 --> 01:30:07,649
do that especially because spheres by

1765
01:30:04,260 --> 01:30:09,989
definition can't have one right like a

1766
01:30:07,649 --> 01:30:10,948
sphere cannot have a coordinate system a

1767
01:30:09,988 --> 01:30:14,069
two dimensional coordinate system

1768
01:30:10,948 --> 01:30:18,899
assigned to them it's mathematically

1769
01:30:14,069 --> 01:30:21,988
impossible to do you by definition will

1770
01:30:18,899 --> 01:30:23,698
have a pole somewhere right

1771
01:30:21,988 --> 01:30:25,728
the phrase you might hear sometimes is

1772
01:30:23,698 --> 01:30:29,458
you cannot comb the hair on a cue ball

1773
01:30:25,729 --> 01:30:31,939
you cannot pet a spherical cat might be

1774
01:30:29,458 --> 01:30:31,938
another one

1775
01:30:38,699 --> 01:30:41,510
Circle cow

1776
01:30:45,600 --> 01:30:49,600
[Laughter]

1777
01:30:52,369 --> 01:30:55,869
[Music]

1778
01:31:02,520 --> 01:31:07,950
that is not what I meant but that is

1779
01:31:05,770 --> 01:31:07,950
great

1780
01:31:08,069 --> 01:31:15,389
that's alright so this is the one I

1781
01:31:11,649 --> 01:31:15,389
actually wanted the hairy ball theorem

1782
01:31:18,960 --> 01:31:27,250
the hairy ball theorem the point of the

1783
01:31:24,760 --> 01:31:31,960
hairy ball theorem is just yeah it's

1784
01:31:27,250 --> 01:31:35,640
it's the example so a torus right on a

1785
01:31:31,960 --> 01:31:39,039
torus you can assign a field you know a

1786
01:31:35,640 --> 01:31:39,670
two-dimensional grid and it works

1787
01:31:39,039 --> 01:31:42,189
properly

1788
01:31:39,670 --> 01:31:46,480
there's no anomalies anywhere no

1789
01:31:42,189 --> 01:31:48,669
singularities you can see if you try to

1790
01:31:46,479 --> 01:31:51,909
do it on a sphere you always end up with

1791
01:31:48,670 --> 01:31:54,970
some problems right where you're gonna

1792
01:31:51,909 --> 01:31:57,279
have at least one Pole right I like that

1793
01:31:54,970 --> 01:32:03,789
there's actually a human head in the

1794
01:31:57,279 --> 01:32:08,170
Wikipedia page yeah this is this is like

1795
01:32:03,789 --> 01:32:09,449
what I was trying to say so the problem

1796
01:32:08,170 --> 01:32:15,489
that we have

1797
01:32:09,449 --> 01:32:18,399
due to the hairy ball theorem is that we

1798
01:32:15,489 --> 01:32:21,460
don't have a way of assigning some thing

1799
01:32:18,399 --> 01:32:22,929
uniform now that's ok we don't mind if

1800
01:32:21,460 --> 01:32:26,439
we have some singularities right this is

1801
01:32:22,930 --> 01:32:27,369
just an example raytracer so you know

1802
01:32:26,439 --> 01:32:30,399
what we need to do is come up with

1803
01:32:27,369 --> 01:32:34,659
something that will give us a coordinate

1804
01:32:30,399 --> 01:32:36,939
system we can actually use sorry to bump

1805
01:32:34,659 --> 01:32:40,269
the microphone there and so what we

1806
01:32:36,939 --> 01:32:43,599
might do is say well ok you know maybe

1807
01:32:40,270 --> 01:32:45,820
we just use whatever would be the

1808
01:32:43,600 --> 01:32:47,680
lateral like whatever would be the cross

1809
01:32:45,819 --> 01:32:51,849
product of that and like the up Vector

1810
01:32:47,680 --> 01:32:53,289
right and in the case where we actually

1811
01:32:51,850 --> 01:32:55,180
are looking directly at the up Vector

1812
01:32:53,289 --> 01:32:58,689
we'll just get that will be our pole and

1813
01:32:55,180 --> 01:33:01,510
that'll be degenerate right I mean

1814
01:32:58,689 --> 01:33:03,489
that's one thing we can do another thing

1815
01:33:01,510 --> 01:33:05,889
we could do is try to just generate an

1816
01:33:03,489 --> 01:33:09,130
ortho north Agata basis using

1817
01:33:05,889 --> 01:33:12,578
some other scheme I'm not sure what it

1818
01:33:09,130 --> 01:33:15,609
should be but you know we can certainly

1819
01:33:12,578 --> 01:33:17,380
work it out so I'm going to just say all

1820
01:33:15,609 --> 01:33:22,808
right let's suppose that we're just

1821
01:33:17,380 --> 01:33:24,939
going to do some kind of a of a you know

1822
01:33:22,809 --> 01:33:28,059
generation of a basis here that's just

1823
01:33:24,939 --> 01:33:30,309
kind of garbage but we'll just produce

1824
01:33:28,059 --> 01:33:31,809
it either way so I'm going to go ahead

1825
01:33:30,309 --> 01:33:36,309
and say that we're going to do a cross

1826
01:33:31,809 --> 01:33:38,199
product of our normal to produce our

1827
01:33:36,309 --> 01:33:56,409
tangent and then we're going to do a

1828
01:33:38,198 --> 01:33:58,598
conditional assign like this and so I'm

1829
01:33:56,408 --> 01:34:05,589
going to cross the normal with I don't

1830
01:33:58,599 --> 01:34:08,260
know just the up Vector to generate one

1831
01:34:05,590 --> 01:34:11,019
and then I'm going to take the cross

1832
01:34:08,260 --> 01:34:13,239
product again so basically like whatever

1833
01:34:11,019 --> 01:34:14,979
the normal is in the up Vector I'm gonna

1834
01:34:13,238 --> 01:34:16,958
cross those two I really should cross

1835
01:34:14,979 --> 01:34:19,090
them the other order probably right hand

1836
01:34:16,958 --> 01:34:24,998
rule wise I probably want to cross the

1837
01:34:19,090 --> 01:34:28,288
up Vector with the normal like so right

1838
01:34:24,998 --> 01:34:31,599
because the normal Z and this would be

1839
01:34:28,288 --> 01:34:33,309
why I guess the normal would be X this

1840
01:34:31,599 --> 01:34:35,860
would be Y what do we want the normal to

1841
01:34:33,309 --> 01:34:41,949
be I guess technically the normal is Z

1842
01:34:35,859 --> 01:34:44,319
actually so I want my X my Y and my Z so

1843
01:34:41,948 --> 01:34:46,898
if my Y was sort of the up vector at

1844
01:34:44,319 --> 01:34:49,688
this point I would want what yeah to get

1845
01:34:46,899 --> 01:34:53,530
the X so the tangent vector would be X

1846
01:34:49,689 --> 01:34:56,439
the by tangent vector would be Y in this

1847
01:34:53,529 --> 01:34:59,768
case okay so if I get my tangent vector

1848
01:34:56,439 --> 01:35:03,369
out then what I want to do is cross from

1849
01:34:59,769 --> 01:35:06,998
the normal back to the sphere tangent to

1850
01:35:03,368 --> 01:35:10,768
get my other basis and then these just

1851
01:35:06,998 --> 01:35:10,769
need to be normalized right

1852
01:35:19,909 --> 01:35:30,519
right do we need to do anything else to

1853
01:35:28,399 --> 01:35:30,519
that

1854
01:35:39,300 --> 01:35:43,619
I think that should be sufficient so

1855
01:35:42,328 --> 01:35:45,238
that will give me a tangent in a by

1856
01:35:43,618 --> 01:35:47,339
tangent what that means is that now I

1857
01:35:45,238 --> 01:35:52,229
can map these things into the space of

1858
01:35:47,340 --> 01:35:53,819
the actual reflection completely so you

1859
01:35:52,229 --> 01:35:56,158
know when these things get passed in

1860
01:35:53,819 --> 01:35:58,380
here I can do that mapping so what I'm

1861
01:35:56,158 --> 01:36:00,029
going to do is is say I'm gonna pass the

1862
01:35:58,380 --> 01:36:02,670
full coordinate system here so I'm going

1863
01:36:00,029 --> 01:36:04,979
to do normal tangent Phi tangent and

1864
01:36:02,670 --> 01:36:10,849
then the brdf lookup I'm gonna go ahead

1865
01:36:04,979 --> 01:36:15,658
and pass those in so normal tangent oops

1866
01:36:10,849 --> 01:36:18,090
by tangent so and then what I need to do

1867
01:36:15,658 --> 01:36:21,388
is actually do this mapping so in order

1868
01:36:18,090 --> 01:36:23,369
to produce these two vectors map in I

1869
01:36:21,389 --> 01:36:26,998
need to do basically a transform on them

1870
01:36:23,368 --> 01:36:30,719
using three vectors that I have you know

1871
01:36:26,998 --> 01:36:33,090
the normal tangent by tangent I want to

1872
01:36:30,719 --> 01:36:34,710
map into that space which is you know

1873
01:36:33,090 --> 01:36:37,380
just taking the inner product with each

1874
01:36:34,710 --> 01:36:39,599
of them to put them into that space so

1875
01:36:37,380 --> 01:36:43,288
if I want to now I can I can basically

1876
01:36:39,599 --> 01:36:47,449
do that that transform so that would

1877
01:36:43,288 --> 01:36:52,139
just look like alright my you know my

1878
01:36:47,448 --> 01:36:55,589
view durand my elder vectors right which

1879
01:36:52,139 --> 01:36:58,380
I'll just call V and L here oh you know

1880
01:36:55,590 --> 01:37:00,449
what I guess I can take the half vector

1881
01:36:58,380 --> 01:37:03,059
first and just map the half vector in if

1882
01:37:00,448 --> 01:37:05,308
I want to as well

1883
01:37:03,059 --> 01:37:07,650
not sure which order you would do those

1884
01:37:05,309 --> 01:37:09,059
in necessarily right we need to produce

1885
01:37:07,649 --> 01:37:10,558
the half vector and then we could map

1886
01:37:09,059 --> 01:37:14,159
the half vector and if we want to I

1887
01:37:10,559 --> 01:37:16,498
guess and hot wait so what do we what do

1888
01:37:14,158 --> 01:37:21,698
we actually need here just want to make

1889
01:37:16,498 --> 01:37:32,210
sure so

1890
01:37:21,698 --> 01:37:40,908
yeah so to compute the diff factor

1891
01:37:32,210 --> 01:37:43,489
they're doing a rotation what are they

1892
01:37:40,908 --> 01:37:47,779
doing for that they look back at what

1893
01:37:43,488 --> 01:37:49,368
they're actually trying to grab there so

1894
01:37:47,779 --> 01:37:52,460
looking at this they want to do the

1895
01:37:49,368 --> 01:37:59,479
difference the diff I don't know what

1896
01:37:52,460 --> 01:38:06,439
they want to do so they want to do the

1897
01:37:59,479 --> 01:38:09,529
theta D between H and and Omega here and

1898
01:38:06,439 --> 01:38:12,888
they want to do the Phi D which I assume

1899
01:38:09,529 --> 01:38:16,009
is just the thing I'm not sure about is

1900
01:38:12,889 --> 01:38:17,929
this diagram sucks like this part right

1901
01:38:16,010 --> 01:38:20,000
here I have no idea what they're trying

1902
01:38:17,929 --> 01:38:24,679
to measure I guess they're trying to

1903
01:38:20,000 --> 01:38:29,060
measure if I had a vector that was that

1904
01:38:24,679 --> 01:38:32,329
was perpendicular here to H I would be

1905
01:38:29,060 --> 01:38:37,310
measuring the rotation of that to point

1906
01:38:32,329 --> 01:38:39,559
towards this vector I guess like I

1907
01:38:37,310 --> 01:38:42,530
really just do not know what this is

1908
01:38:39,560 --> 01:38:46,599
supposed to measure it's pretty

1909
01:38:42,529 --> 01:38:48,198
confusing right this one is not

1910
01:38:46,599 --> 01:38:50,779
confusing to me

1911
01:38:48,198 --> 01:38:53,500
so these are just the polar coordinates

1912
01:38:50,779 --> 01:38:56,899
of age and that's really easy to

1913
01:38:53,500 --> 01:39:03,289
understand but what this is I don't I

1914
01:38:56,899 --> 01:39:06,399
don't quite get right and I guess maybe

1915
01:39:03,289 --> 01:39:06,399
I should be looking this up

1916
01:39:11,250 --> 01:39:15,840
right because maybe that that's

1917
01:39:13,350 --> 01:39:17,400
explained in more detail there but

1918
01:39:15,840 --> 01:39:20,699
that's the only part I don't really get

1919
01:39:17,399 --> 01:39:23,250
is like what what that one measurement

1920
01:39:20,699 --> 01:39:29,429
supposed to be but either way we can

1921
01:39:23,250 --> 01:39:32,159
start so theta 1/2 and Phi 1/2 those are

1922
01:39:29,430 --> 01:39:38,039
pretty easy right ones in a cose and

1923
01:39:32,159 --> 01:39:39,869
ones in a tan too right and in order to

1924
01:39:38,039 --> 01:39:42,989
figure these out we just need the x and

1925
01:39:39,869 --> 01:39:45,510
y so 8 and 2 is like YX usually right

1926
01:39:42,989 --> 01:39:48,389
and so we would we will know what those

1927
01:39:45,510 --> 01:39:51,780
two are once we actually map the half

1928
01:39:48,390 --> 01:39:53,789
vector in right so if I map the half

1929
01:39:51,779 --> 01:39:57,029
vector into that space and it's the out

1930
01:39:53,789 --> 01:39:58,409
grinder size we need L&amp;H right so once

1931
01:39:57,029 --> 01:40:00,899
we map the half factor into that space

1932
01:39:58,409 --> 01:40:03,239
this would must be H dot Y and this

1933
01:40:00,899 --> 01:40:06,149
would be H dot X right and this would be

1934
01:40:03,239 --> 01:40:08,309
the a coast of Hz right so those are the

1935
01:40:06,149 --> 01:40:12,569
ways that we would measure we would sort

1936
01:40:08,310 --> 01:40:15,750
of map those out right now we don't

1937
01:40:12,569 --> 01:40:16,949
really want to have to take 4 rather

1938
01:40:15,750 --> 01:40:20,250
obvious reasons

1939
01:40:16,949 --> 01:40:22,019
a kosis and a tans in this way

1940
01:40:20,250 --> 01:40:24,720
like we would rather not have to do that

1941
01:40:22,020 --> 01:40:25,920
obviously but at the moment we're kind

1942
01:40:24,720 --> 01:40:27,360
of stuck with that so we'll have to

1943
01:40:25,920 --> 01:40:29,130
figure out what we want to do with that

1944
01:40:27,359 --> 01:40:30,359
a little bit later and probably what

1945
01:40:29,130 --> 01:40:31,739
we'll need to do there is downshift

1946
01:40:30,359 --> 01:40:38,689
right we'll probably have to do this for

1947
01:40:31,739 --> 01:40:52,639
now I don't know where the

1948
01:40:38,689 --> 01:40:55,069
gather functions are they our area so

1949
01:40:52,640 --> 01:40:58,070
yeah so for like the gather functions

1950
01:40:55,069 --> 01:40:59,479
here in order to extract this stuff we

1951
01:40:58,069 --> 01:41:07,069
need some way of pulling out the

1952
01:40:59,479 --> 01:41:09,019
individual values so like we need to do

1953
01:41:07,069 --> 01:41:11,119
something like this right and then we

1954
01:41:09,020 --> 01:41:15,740
need to like extract the values out so

1955
01:41:11,119 --> 01:41:20,470
we need to do like this right

1956
01:41:15,739 --> 01:41:22,639
extract zero is we really want extract n

1957
01:41:20,470 --> 01:41:25,630
right so we want something that's going

1958
01:41:22,640 --> 01:41:25,630
to do like this

1959
01:41:39,909 --> 01:41:45,170
and then we're probably fine but anyway

1960
01:41:42,739 --> 01:41:47,719
so over here we've got our LW and rhw

1961
01:41:45,170 --> 01:41:49,850
right and those are our wide versions of

1962
01:41:47,720 --> 01:41:52,060
these vectors so the first things that

1963
01:41:49,850 --> 01:41:58,100
we need to do there are we need to take

1964
01:41:52,060 --> 01:42:00,590
the LW and the HW are just going to be

1965
01:41:58,100 --> 01:42:02,360
mappings into this space space of the

1966
01:42:00,590 --> 01:42:04,940
vectors so to map the half vector in

1967
01:42:02,359 --> 01:42:08,089
it's really pretty easy right it's just

1968
01:42:04,939 --> 01:42:13,000
an inner product in this case I assume

1969
01:42:08,090 --> 01:42:16,520
so if I do a v3 oops how do I load a v3

1970
01:42:13,000 --> 01:42:18,020
with actual results I don't actually

1971
01:42:16,520 --> 01:42:25,100
know oh well you know what I can do it

1972
01:42:18,020 --> 01:42:32,390
this way think assuming this actually is

1973
01:42:25,100 --> 01:42:33,860
the way I think it is yeah so it's just

1974
01:42:32,390 --> 01:42:35,570
three are three twos so I just do it

1975
01:42:33,859 --> 01:42:43,420
this way so I can just produce the inner

1976
01:42:35,569 --> 01:42:46,729
product right of the light direction

1977
01:42:43,420 --> 01:42:50,270
with each of the the pieces so we know

1978
01:42:46,729 --> 01:42:53,599
that the tangent is our X the by tangent

1979
01:42:50,270 --> 01:42:55,490
is our Y and the normal is our Z so this

1980
01:42:53,600 --> 01:42:56,780
makes a little coordinate frame and by

1981
01:42:55,489 --> 01:42:58,309
taking the inner product of the light

1982
01:42:56,779 --> 01:43:00,829
direction with each of the pieces of our

1983
01:42:58,310 --> 01:43:02,870
coordinate frame I end up with the

1984
01:43:00,829 --> 01:43:05,420
transformed vector and the same would be

1985
01:43:02,869 --> 01:43:07,159
true of this right and so this is just

1986
01:43:05,420 --> 01:43:08,560
really doing a matrix transform on it

1987
01:43:07,159 --> 01:43:10,699
right mm-hmm

1988
01:43:08,560 --> 01:43:14,620
without bothering to ever build an

1989
01:43:10,699 --> 01:43:14,619
actual matrix because why bother

1990
01:43:19,840 --> 01:43:25,760
so this maps them into the space giving

1991
01:43:22,939 --> 01:43:27,349
the tangent space of the reflection and

1992
01:43:25,760 --> 01:43:29,090
then this produces the values we

1993
01:43:27,350 --> 01:43:31,220
actually need the theta 1/2 is the a

1994
01:43:29,090 --> 01:43:36,170
cost of whatever the Z value would be

1995
01:43:31,220 --> 01:43:37,699
and the atan2 in this case right and so

1996
01:43:36,170 --> 01:43:39,050
then the only question is how the heck

1997
01:43:37,699 --> 01:43:42,649
do we compute these things because I

1998
01:43:39,050 --> 01:43:44,449
have no idea what they are right now one

1999
01:43:42,649 --> 01:43:47,000
of them I'm pretty sure I know what it

2000
01:43:44,449 --> 01:43:49,849
is and I can compute that one pretty

2001
01:43:47,000 --> 01:43:52,470
easily again I'm sort of just guessing

2002
01:43:49,850 --> 01:43:54,270
but where's that there it is

2003
01:43:52,470 --> 01:43:56,430
um so if you take a look at the what

2004
01:43:54,270 --> 01:43:59,250
this looks like here I'm pretty sure

2005
01:43:56,430 --> 01:44:01,380
that theta D is just gonna is just the

2006
01:43:59,250 --> 01:44:03,869
separation between these two right so

2007
01:44:01,380 --> 01:44:06,359
it's the angle of separation between the

2008
01:44:03,869 --> 01:44:08,909
two vectors that looks like what they

2009
01:44:06,359 --> 01:44:12,929
drew right I don't know but it looks

2010
01:44:08,909 --> 01:44:15,180
like what they drew and so if that's the

2011
01:44:12,930 --> 01:44:17,820
actual case then that's a really easy

2012
01:44:15,180 --> 01:44:20,280
one to do because again it's just an a

2013
01:44:17,819 --> 01:44:24,750
Coast but it's the a Coast of the inner

2014
01:44:20,279 --> 01:44:34,050
product of the two vectors right so for

2015
01:44:24,750 --> 01:44:38,880
example here's the inner product of the

2016
01:44:34,050 --> 01:44:43,409
half vector with the light direction

2017
01:44:38,880 --> 01:44:45,060
right or is that's what's with the

2018
01:44:43,409 --> 01:44:48,869
outgoing direction that's the incoming

2019
01:44:45,060 --> 01:44:53,490
direction right so if we take it with

2020
01:44:48,869 --> 01:44:59,489
the incoming direction there why would

2021
01:44:53,489 --> 01:45:02,010
this well I don't care um so yeah if we

2022
01:44:59,489 --> 01:45:07,319
just take it with the income the the LW

2023
01:45:02,010 --> 01:45:11,190
here that we've produced I guess it's

2024
01:45:07,319 --> 01:45:12,179
technically these two right although it

2025
01:45:11,189 --> 01:45:14,219
doesn't matter I could have done it

2026
01:45:12,180 --> 01:45:18,480
beforehand so actually I don't even know

2027
01:45:14,220 --> 01:45:21,030
why we would need I guess I don't even

2028
01:45:18,479 --> 01:45:22,109
know why we would really need to do this

2029
01:45:21,029 --> 01:45:24,599
transfer but we'll take a look at that

2030
01:45:22,109 --> 01:45:26,429
later I guess so the diff the inner

2031
01:45:24,600 --> 01:45:28,740
product difference here right those two

2032
01:45:26,430 --> 01:45:32,579
that is specifically what we would take

2033
01:45:28,739 --> 01:45:35,869
the a coasts of right and so if I want

2034
01:45:32,579 --> 01:45:35,869
to do an extract on that

2035
01:45:43,738 --> 01:45:48,089
that would be the theta that we need for

2036
01:45:46,050 --> 01:45:50,969
that lookup and then the Phi that we

2037
01:45:48,090 --> 01:45:52,440
would need right in this case that's the

2038
01:45:50,969 --> 01:45:54,420
one I just don't know what it is I don't

2039
01:45:52,439 --> 01:45:57,599
know what that's supposed to be telling

2040
01:45:54,420 --> 01:46:00,149
me right and their implementation is

2041
01:45:57,600 --> 01:46:03,810
pretty confusing they're doing a

2042
01:46:00,149 --> 01:46:09,049
complete like huge set of of things here

2043
01:46:03,810 --> 01:46:11,130
to solve it and again I don't really

2044
01:46:09,050 --> 01:46:16,409
know what they're trying to produce

2045
01:46:11,130 --> 01:46:20,819
there so they are taking a rotation of a

2046
01:46:16,409 --> 01:46:24,630
vector the in direction and the normal

2047
01:46:20,819 --> 01:46:25,710
and why would they be using the oh right

2048
01:46:24,630 --> 01:46:26,880
because the in Direction is we're

2049
01:46:25,710 --> 01:46:32,670
talking about that's the light vector

2050
01:46:26,880 --> 01:46:37,590
and the normal minus Phi half so that's

2051
01:46:32,670 --> 01:46:40,230
the input here right they're rotating

2052
01:46:37,590 --> 01:46:44,630
the opposite direction into a temp

2053
01:46:40,229 --> 01:46:49,259
vector then they're rotating that vector

2054
01:46:44,630 --> 01:47:03,590
by the by normal by theta half into the

2055
01:46:49,260 --> 01:47:21,289
diff vector and then producing that okay

2056
01:47:03,590 --> 01:47:25,179
I sort of get it maybe so I think what

2057
01:47:21,288 --> 01:47:25,179
they're sort of trying to do

2058
01:47:26,319 --> 01:47:30,558
yikes

2059
01:47:28,538 --> 01:47:32,840
just trying to figure out if this is

2060
01:47:30,559 --> 01:47:39,440
just really this is tear this is like a

2061
01:47:32,840 --> 01:47:48,369
horrible diagram I should also look to

2062
01:47:39,439 --> 01:47:48,368
see what is the 1998 sinkovitz

2063
01:48:08,550 --> 01:48:14,369
so here's the same incredibly terrible

2064
01:48:10,890 --> 01:48:17,270
diagram right but at least the Flies are

2065
01:48:14,369 --> 01:48:17,269
easy to read now

2066
01:48:33,448 --> 01:48:36,629
changing variables because some features

2067
01:48:35,250 --> 01:48:38,159
of common beer distill lie alone new

2068
01:48:36,630 --> 01:48:40,140
coordinate is proposed for attribution

2069
01:48:38,159 --> 01:48:41,519
in terms of the halfway vector and a

2070
01:48:40,140 --> 01:48:43,320
difference vector which is just the

2071
01:48:41,520 --> 01:48:45,420
incident ray in a frame of reference

2072
01:48:43,319 --> 01:48:47,579
which to have a vector is at the North

2073
01:48:45,420 --> 01:48:52,590
Pole okay so that is exactly what I

2074
01:48:47,579 --> 01:48:55,590
thought but I'm not sure the the problem

2075
01:48:52,590 --> 01:48:58,170
is that's under specified right because

2076
01:48:55,590 --> 01:49:00,390
there's any amount of rotation you know

2077
01:48:58,170 --> 01:49:04,100
you could have any amount of rotation

2078
01:49:00,390 --> 01:49:04,100
you wanted there right that makes sense

2079
01:49:13,969 --> 01:49:20,368
surface normal surface tangent surface

2080
01:49:17,849 --> 01:49:22,019
by normal should probably call the by

2081
01:49:20,368 --> 01:49:24,948
normals of the by tangent if that's the

2082
01:49:22,019 --> 01:49:24,949
phrase were using

2083
01:50:14,698 --> 01:50:27,210
all right mr. problem here oh these are

2084
01:50:18,210 --> 01:50:28,590
not RGB anywhere yeah um so yes so

2085
01:50:27,210 --> 01:50:30,420
figuring this out it's gonna be a little

2086
01:50:28,590 --> 01:50:33,860
bit weird so how would I

2087
01:50:30,420 --> 01:50:37,050
normally do this trying to think

2088
01:50:33,859 --> 01:50:37,049
[Music]

2089
01:50:51,289 --> 01:50:58,229
trying to think of how I would produce

2090
01:50:56,609 --> 01:51:01,079
that efficiently I don't think the way

2091
01:50:58,229 --> 01:51:02,429
they're doing it is particularly good I

2092
01:51:01,079 --> 01:51:03,659
mean I think a lot of this is not

2093
01:51:02,430 --> 01:51:04,890
particularly good and not how I would

2094
01:51:03,659 --> 01:51:07,369
necessarily do it but that's sort of

2095
01:51:04,890 --> 01:51:07,369
beside the point

2096
01:51:33,260 --> 01:51:37,400
so let's look at the diagram

2097
01:51:44,359 --> 01:51:53,279
so essentially here's what we're trying

2098
01:51:46,619 --> 01:51:57,289
to do we have a coordinate frame right

2099
01:51:53,279 --> 01:51:57,289
and the coordinate frame looks like this

2100
01:52:06,859 --> 01:52:12,019
right so we essentially have a

2101
01:52:10,100 --> 01:52:13,910
coordinate frame that's the normal

2102
01:52:12,020 --> 01:52:15,560
vector to the surface the tangent vector

2103
01:52:13,909 --> 01:52:19,699
to the surface and the bind normal and

2104
01:52:15,560 --> 01:52:21,289
these form are x y and z respectively

2105
01:52:19,699 --> 01:52:23,210
you know if we think of this as a

2106
01:52:21,289 --> 01:52:24,920
standard coordinate frame and this is on

2107
01:52:23,210 --> 01:52:28,880
the surface of something like on the

2108
01:52:24,920 --> 01:52:35,239
surface of the sphere right what we have

2109
01:52:28,880 --> 01:52:36,859
is a 1/2 vector that we've produced and

2110
01:52:35,239 --> 01:52:38,479
we've mapped it into this frame so it's

2111
01:52:36,859 --> 01:52:40,639
just sitting in here right and that's

2112
01:52:38,479 --> 01:52:42,949
our 1/2 vector and then we have another

2113
01:52:40,640 --> 01:52:47,510
vector which is like our light vector

2114
01:52:42,949 --> 01:52:49,579
right and what we want to do is we want

2115
01:52:47,510 --> 01:52:52,130
to say what would the coordinates of

2116
01:52:49,579 --> 01:52:55,449
this thing be in polar coordinates if

2117
01:52:52,130 --> 01:52:59,750
this were actually the new Z vector

2118
01:52:55,449 --> 01:53:02,989
right so if we rotated this up to here

2119
01:52:59,750 --> 01:53:05,329
you know I'm saying what would this be

2120
01:53:02,989 --> 01:53:07,099
at that point what would what would we

2121
01:53:05,329 --> 01:53:11,119
consider this to be at that once we got

2122
01:53:07,100 --> 01:53:12,770
there right so this whole thing we're

2123
01:53:11,119 --> 01:53:15,140
kind of shifted up and this became the

2124
01:53:12,770 --> 01:53:17,450
new bottom right and so if we looked at

2125
01:53:15,140 --> 01:53:19,010
this in 2d instead like to make it a

2126
01:53:17,449 --> 01:53:21,699
little bit easier to understand for

2127
01:53:19,010 --> 01:53:21,699
those of you watching

2128
01:53:30,578 --> 01:53:34,149
if we did something like this we're here

2129
01:53:32,649 --> 01:53:36,460
as a normal here's the half vector

2130
01:53:34,149 --> 01:53:39,759
here's the light vector right so here's

2131
01:53:36,460 --> 01:53:42,368
the tangent down here what we're looking

2132
01:53:39,760 --> 01:53:45,940
to do is say let's pretend this were

2133
01:53:42,368 --> 01:53:48,549
actually the coordinate system right so

2134
01:53:45,939 --> 01:53:52,118
now everything is relative to this

2135
01:53:48,550 --> 01:53:54,159
we're like rotating it into place and in

2136
01:53:52,118 --> 01:53:55,598
2d this would just work because we

2137
01:53:54,158 --> 01:53:57,250
wouldn't really have to care because we

2138
01:53:55,599 --> 01:53:59,199
could just measure it directly but in 3d

2139
01:53:57,250 --> 01:54:01,059
we actually do care because we need to

2140
01:53:59,198 --> 01:54:02,558
be able to do this on the actual

2141
01:54:01,059 --> 01:54:04,239
hemisphere so the whole thing has to

2142
01:54:02,559 --> 01:54:05,619
come up and we need to know like what

2143
01:54:04,238 --> 01:54:07,558
the displacement what the polar

2144
01:54:05,618 --> 01:54:09,578
coordinates think of this thing are

2145
01:54:07,559 --> 01:54:11,860
that's why I say we can just take the

2146
01:54:09,578 --> 01:54:15,670
inner product to quickly get one of them

2147
01:54:11,859 --> 01:54:20,170
right which is the opre which is the

2148
01:54:15,670 --> 01:54:23,649
theta diff right that we can just get

2149
01:54:20,170 --> 01:54:26,828
directly by taking the arc cosine of the

2150
01:54:23,649 --> 01:54:32,979
inner product that's trivial the thing

2151
01:54:26,828 --> 01:54:35,349
we can't really do is quickly take the

2152
01:54:32,979 --> 01:54:38,589
other part of it and the reason for that

2153
01:54:35,349 --> 01:54:41,619
is because that part of it requires

2154
01:54:38,590 --> 01:54:42,699
actual other basis vectors the question

2155
01:54:41,618 --> 01:54:53,189
is is there some way we could easily

2156
01:54:42,698 --> 01:55:00,308
generate those basis vectors right and

2157
01:54:53,189 --> 01:55:03,808
that part I don't know since we don't

2158
01:55:00,309 --> 01:55:09,880
know how the half angle vector actually

2159
01:55:03,809 --> 01:55:20,170
well so we know the actual half angle

2160
01:55:09,880 --> 01:55:23,130
vector angles and that's why they're

2161
01:55:20,170 --> 01:55:23,130
doing that rotation

2162
01:55:47,078 --> 01:55:54,609
I'm just not sure yeah so you can see

2163
01:55:49,988 --> 01:55:59,109
the way that they're trying to do it if

2164
01:55:54,609 --> 01:56:00,339
we go back to their source code right so

2165
01:55:59,109 --> 01:56:03,460
the way that they're doing is saying

2166
01:56:00,340 --> 01:56:06,670
well alright I know I do have the half

2167
01:56:03,460 --> 01:56:09,429
angle vector that I actually computed

2168
01:56:06,670 --> 01:56:11,770
right so this is the winding this this

2169
01:56:09,429 --> 01:56:14,559
is the rotation of it in the plane of

2170
01:56:11,770 --> 01:56:17,650
the tangent like so that's this right

2171
01:56:14,559 --> 01:56:20,110
here this Phi half that's the winding in

2172
01:56:17,649 --> 01:56:22,479
this space of the half angle vectors so

2173
01:56:20,109 --> 01:56:24,460
if you map the half angle vector down to

2174
01:56:22,479 --> 01:56:26,948
like here I guess let's pretend it's in

2175
01:56:24,460 --> 01:56:29,649
the positive side so here's the plane

2176
01:56:26,948 --> 01:56:32,408
that it's in right we met we map that

2177
01:56:29,649 --> 01:56:34,118
down to like here and we just say look

2178
01:56:32,408 --> 01:56:37,388
we've already measured this part that's

2179
01:56:34,118 --> 01:56:43,539
the theta half what's this part right

2180
01:56:37,389 --> 01:56:46,239
this part here that gives us the the Phi

2181
01:56:43,539 --> 01:56:50,078
half right so what they're saying is

2182
01:56:46,238 --> 01:56:52,899
let's spin this vector back around let's

2183
01:56:50,078 --> 01:56:55,808
spin it right so that it lines up

2184
01:56:52,899 --> 01:56:58,210
exactly here right so we're going to

2185
01:56:55,809 --> 01:57:01,260
move it back to like there right and

2186
01:56:58,210 --> 01:57:09,069
then what they're gonna do is take that

2187
01:57:01,260 --> 01:57:12,340
vector at that point right and rotate it

2188
01:57:09,069 --> 01:57:13,840
around the by normal so around this and

2189
01:57:12,340 --> 01:57:15,699
you can see why because they rotated it

2190
01:57:13,840 --> 01:57:16,989
into this plane so now they're gonna try

2191
01:57:15,698 --> 01:57:20,678
to rotate it this way they're gonna

2192
01:57:16,988 --> 01:57:24,459
rotate it up there right if that makes

2193
01:57:20,679 --> 01:57:27,000
sense and so what they're effectively

2194
01:57:24,460 --> 01:57:30,130
doing is they're taking this vector

2195
01:57:27,000 --> 01:57:32,319
they're performing the rotation on this

2196
01:57:30,130 --> 01:57:34,599
vector that would rotate it such that

2197
01:57:32,319 --> 01:57:36,849
the H would now have been pointing

2198
01:57:34,599 --> 01:57:39,328
directly up so this makes perfect sense

2199
01:57:36,849 --> 01:57:44,949
now it's just man is that expensive

2200
01:57:39,328 --> 01:57:45,829
right like producing that is kind of

2201
01:57:44,948 --> 01:57:48,969
nuts

2202
01:57:45,829 --> 01:57:48,970
[Music]

2203
01:57:53,670 --> 01:58:01,489
can crap here for a second there's gotta

2204
01:57:57,988 --> 01:58:01,488
be a better way to do that

2205
01:58:14,929 --> 01:58:20,100
so the first thing we know is that if we

2206
01:58:17,189 --> 01:58:23,339
were going to rotate that thing just

2207
01:58:20,100 --> 01:58:25,650
once to put it into position we could

2208
01:58:23,340 --> 01:58:27,239
have done that and they didn't do that

2209
01:58:25,649 --> 01:58:35,460
and I'm wondering if that's because it

2210
01:58:27,238 --> 01:58:37,529
won't produce the correct the correct

2211
01:58:35,460 --> 01:58:39,689
actual transform because there's you

2212
01:58:37,529 --> 01:58:42,509
know just bear with me for a second here

2213
01:58:39,689 --> 01:58:44,729
so let's suppose that we have the

2214
01:58:42,510 --> 01:58:49,469
surface normal here we've got the half

2215
01:58:44,729 --> 01:58:52,198
angle I'm sorry the half vector here and

2216
01:58:49,469 --> 01:58:55,319
then we've got you know tangent and by

2217
01:58:52,198 --> 01:58:58,619
tangent and I say look I just want to

2218
01:58:55,319 --> 01:59:02,698
rotate this up into place well I already

2219
01:58:58,619 --> 01:59:06,210
know this angle right I know what that

2220
01:59:02,698 --> 01:59:08,250
angle actually is because that's my my

2221
01:59:06,210 --> 01:59:12,119
theta half right I mean isn't that what

2222
01:59:08,250 --> 01:59:12,658
that was we double-check that I'm not

2223
01:59:12,119 --> 01:59:14,609
making that up

2224
01:59:12,658 --> 01:59:15,899
I mean we could find it trivially even

2225
01:59:14,609 --> 01:59:17,579
if it's not but I just want to make sure

2226
01:59:15,899 --> 01:59:23,429
I remember what we're actually measuring

2227
01:59:17,579 --> 01:59:25,859
here yeah so we know that angle right

2228
01:59:23,429 --> 01:59:27,929
and so the question is what is the

2229
01:59:25,859 --> 01:59:29,519
rotation if I just want to do one single

2230
01:59:27,929 --> 01:59:32,340
rotation to put this back into place

2231
01:59:29,520 --> 01:59:34,739
what would it be well theta half would

2232
01:59:32,340 --> 01:59:38,909
just be you know the cross product of N

2233
01:59:34,738 --> 01:59:41,099
and H right n cross H gives me this

2234
01:59:38,908 --> 01:59:43,138
vector right and then if I rotate by

2235
01:59:41,100 --> 01:59:48,210
this much it would put it into place in

2236
01:59:43,139 --> 01:59:52,020
one rotation not two right so if I did

2237
01:59:48,210 --> 01:59:54,119
want to rotate L into place I could just

2238
01:59:52,020 --> 01:59:55,889
do that one rotation and that would have

2239
01:59:54,119 --> 02:00:00,000
put L into the place that it should

2240
01:59:55,889 --> 02:00:06,539
should actually be right I mean that's

2241
02:00:00,000 --> 02:00:09,569
just kind of by definition the question

2242
02:00:06,539 --> 02:00:11,609
is are they trying to take something

2243
02:00:09,569 --> 02:00:13,469
that's not are they intentionally not

2244
02:00:11,609 --> 02:00:15,238
taking the shortest path are they

2245
02:00:13,469 --> 02:00:17,069
intentionally doing those two rotations

2246
02:00:15,238 --> 02:00:19,829
for some other reason because they want

2247
02:00:17,069 --> 02:00:22,590
the winding they want the spin in this

2248
02:00:19,829 --> 02:00:24,859
place to have some specific measurement

2249
02:00:22,590 --> 02:00:24,860
right

2250
02:00:30,119 --> 02:00:35,220
and that's a part that I'm

2251
02:00:33,449 --> 02:00:36,269
meet rub a little bit of a hard time

2252
02:00:35,220 --> 02:00:38,940
figuring out because the way that

2253
02:00:36,270 --> 02:00:42,350
they're applying the rotation is rather

2254
02:00:38,939 --> 02:00:45,149
than this rotate directly they are first

2255
02:00:42,350 --> 02:00:47,010
rotating into the plane of the tangent

2256
02:00:45,149 --> 02:00:49,859
so their first rotating here and then

2257
02:00:47,010 --> 02:00:52,680
rotating there and I don't know that

2258
02:00:49,859 --> 02:00:58,349
that that probably would produce a

2259
02:00:52,680 --> 02:00:59,940
slightly different spin so that as you

2260
02:00:58,350 --> 02:01:04,829
were going up here you were actually

2261
02:00:59,939 --> 02:01:08,609
spinning a little as well right because

2262
02:01:04,829 --> 02:01:12,000
remember the route that you take to move

2263
02:01:08,609 --> 02:01:15,799
H into n so the route along the sphere

2264
02:01:12,000 --> 02:01:22,199
will produce different spin this way

2265
02:01:15,800 --> 02:01:23,850
right around the normal and it looks

2266
02:01:22,199 --> 02:01:26,069
like they are doing a different one I

2267
02:01:23,850 --> 02:01:29,490
don't know why they're doing that one it

2268
02:01:26,069 --> 02:01:30,989
seems dumb to do that because it

2269
02:01:29,489 --> 02:01:32,819
wouldn't matter which way you've encoded

2270
02:01:30,989 --> 02:01:35,460
this would it I mean since the

2271
02:01:32,819 --> 02:01:37,380
anisotropic of the surface is the thing

2272
02:01:35,460 --> 02:01:39,029
that you're actually measuring it seems

2273
02:01:37,380 --> 02:01:41,130
crazy to do this coordinate system

2274
02:01:39,029 --> 02:01:43,979
because this coordinate system is just

2275
02:01:41,130 --> 02:01:46,170
more operations instead of just doing a

2276
02:01:43,979 --> 02:01:50,989
single rotation now you have to do two

2277
02:01:46,170 --> 02:01:50,989
and that seems really stupid

2278
02:01:59,880 --> 02:02:09,239
I mean am I wrong I don't suppose rose

2279
02:02:06,960 --> 02:02:11,189
Inca which is watching the stream right

2280
02:02:09,239 --> 02:02:13,139
now and can tell me whether whether I'm

2281
02:02:11,189 --> 02:02:14,759
wrong about his coordinate system being

2282
02:02:13,140 --> 02:02:20,220
less efficient than it should be

2283
02:02:14,760 --> 02:02:23,220
right but that seems that seems busted

2284
02:02:20,220 --> 02:02:24,930
if we assumed temporarily that we could

2285
02:02:23,220 --> 02:02:30,420
use that we could do this direct

2286
02:02:24,930 --> 02:02:33,600
rotation then what we would say is well

2287
02:02:30,420 --> 02:02:36,149
okay so if we now need to measure the

2288
02:02:33,600 --> 02:02:37,710
spin relative to this vector of the L

2289
02:02:36,149 --> 02:02:42,299
vector which is sitting somewhere in

2290
02:02:37,710 --> 02:02:44,279
this space right what we want to know is

2291
02:02:42,300 --> 02:02:46,440
the inner product of that on this

2292
02:02:44,279 --> 02:02:49,289
coordinate system because we don't

2293
02:02:46,439 --> 02:02:51,179
actually need to rotate the vector if we

2294
02:02:49,289 --> 02:02:54,689
can just get these vectors directly

2295
02:02:51,180 --> 02:02:56,820
right and of course we can get these

2296
02:02:54,689 --> 02:02:59,279
vectors directly because these vectors

2297
02:02:56,819 --> 02:03:01,309
are just the half angle cross-product ad

2298
02:02:59,279 --> 02:03:04,710
with the normal which gives us this one

2299
02:03:01,310 --> 02:03:06,600
right and then we would just do the

2300
02:03:04,710 --> 02:03:08,310
cross-product again with the H and that

2301
02:03:06,600 --> 02:03:09,930
vector to give us this one the inner

2302
02:03:08,310 --> 02:03:12,870
product on each of those gives us the

2303
02:03:09,930 --> 02:03:20,730
result that means no transcendentals

2304
02:03:12,869 --> 02:03:29,369
right yeah it's too hard to say let's

2305
02:03:20,729 --> 02:03:32,099
say no sine cosine right so I feel like

2306
02:03:29,369 --> 02:03:34,340
that's actually better anyway I'm just

2307
02:03:32,100 --> 02:03:42,390
gonna say that's what we should do and

2308
02:03:34,340 --> 02:03:44,400
if we want to Oh actually oh yeah you

2309
02:03:42,390 --> 02:03:46,410
know what we could even do this the way

2310
02:03:44,399 --> 02:03:49,609
they're doing it because if you were

2311
02:03:46,409 --> 02:03:53,099
going to first rotate into this plane

2312
02:03:49,609 --> 02:03:56,549
then rotate into this flame you can

2313
02:03:53,100 --> 02:03:59,579
probably still do that can't you because

2314
02:03:56,550 --> 02:04:03,630
you would just go versus the tangent

2315
02:03:59,579 --> 02:04:09,059
first so you'd do H cross T which would

2316
02:04:03,630 --> 02:04:14,170
get you which would get you this vector

2317
02:04:09,060 --> 02:04:18,469
and then you would cross the two

2318
02:04:14,170 --> 02:04:20,960
to get the other one so I think you can

2319
02:04:18,469 --> 02:04:23,539
actually do that if you want t to be the

2320
02:04:20,960 --> 02:04:25,369
prevailing thing that you'd rotate it to

2321
02:04:23,539 --> 02:04:38,689
first I think you could just cross those

2322
02:04:25,369 --> 02:04:40,460
two so I think we could do that I think

2323
02:04:38,689 --> 02:04:41,569
we just do H cross T and I think we can

2324
02:04:40,460 --> 02:04:43,219
just do this in a way that's way better

2325
02:04:41,569 --> 02:04:46,399
than what they were doing like way

2326
02:04:43,219 --> 02:04:47,390
better not like a little bit I really

2327
02:04:46,399 --> 02:04:48,920
want to be able to draw this out

2328
02:04:47,390 --> 02:04:52,130
unfortunately I don't have any like

2329
02:04:48,920 --> 02:04:54,020
diagramming stuff in here but like I

2330
02:04:52,130 --> 02:04:56,719
mean I want to be able to like draw this

2331
02:04:54,020 --> 02:04:58,429
like you know in the editor of the

2332
02:04:56,719 --> 02:05:01,100
future you'll be able to just like see

2333
02:04:58,429 --> 02:05:02,750
the things on the side so as you change

2334
02:05:01,100 --> 02:05:06,920
the formula in here it would just draw

2335
02:05:02,750 --> 02:05:10,300
it you know but you know that's not ask

2336
02:05:06,920 --> 02:05:12,560
for miracles folks so anyway if you

2337
02:05:10,300 --> 02:05:14,239
wanted to in here right I could just go

2338
02:05:12,560 --> 02:05:15,620
alright let's create that coordinate

2339
02:05:14,238 --> 02:05:17,000
system as well and just produce it and

2340
02:05:15,619 --> 02:05:19,609
we can produce it wide we don't have to

2341
02:05:17,000 --> 02:05:20,719
downshift for that which is great

2342
02:05:19,609 --> 02:05:23,569
so what I'm going to do is I'm going to

2343
02:05:20,719 --> 02:05:25,480
produce those those other basis vectors

2344
02:05:23,569 --> 02:05:31,639
here so I'm going to call that like

2345
02:05:25,479 --> 02:05:32,629
defects and diff why I guess then these

2346
02:05:31,640 --> 02:05:36,530
are the things that we would measure

2347
02:05:32,630 --> 02:05:39,949
those against and then when I want to

2348
02:05:36,529 --> 02:05:42,109
produce the actual results it's much

2349
02:05:39,948 --> 02:05:48,738
easier right I can just do the a costs

2350
02:05:42,109 --> 02:05:58,439
on this X this x and y inner right so

2351
02:05:48,738 --> 02:06:02,849
it'd just be this right so we do the

2352
02:05:58,439 --> 02:06:04,979
the half vector with the LW and then we

2353
02:06:02,850 --> 02:06:10,260
would just do the the you know the diff

2354
02:06:04,979 --> 02:06:12,449
X and the diff Y with the half act with

2355
02:06:10,260 --> 02:06:14,250
the light vector and I think that

2356
02:06:12,449 --> 02:06:16,529
produces everything we need and these

2357
02:06:14,250 --> 02:06:17,239
again are just cross products it's not

2358
02:06:16,529 --> 02:06:25,199
complicated

2359
02:06:17,239 --> 02:06:28,139
right so the diff X is just going to be

2360
02:06:25,199 --> 02:06:31,050
let's take that's gonna be take the half

2361
02:06:28,140 --> 02:06:33,600
vector and I just need to get the

2362
02:06:31,050 --> 02:06:36,449
winding right here so where's my diagram

2363
02:06:33,600 --> 02:06:40,380
yeah so take the half vector and the

2364
02:06:36,449 --> 02:06:41,489
tangent I want to produce a standard

2365
02:06:40,380 --> 02:06:45,920
coordinate frame where this is gonna be

2366
02:06:41,489 --> 02:06:48,269
the N and so in order to produce the X

2367
02:06:45,920 --> 02:06:49,170
what would I want to do well I'm

2368
02:06:48,270 --> 02:06:51,500
actually gonna round up reasoning the

2369
02:06:49,170 --> 02:06:56,750
why cuz it's historia so I would just do

2370
02:06:51,500 --> 02:07:01,560
the cross rect of H down T like this

2371
02:06:56,750 --> 02:07:04,189
right and then after I've produced the H

2372
02:07:01,560 --> 02:07:10,590
down to T version then I just need to do

2373
02:07:04,189 --> 02:07:13,979
you mean the recross of that and so the

2374
02:07:10,590 --> 02:07:26,520
H down at e-version then I would do the

2375
02:07:13,979 --> 02:07:32,658
that up to H to get the T back right and

2376
02:07:26,520 --> 02:07:34,679
these are backwards now right

2377
02:07:32,658 --> 02:07:39,328
so think that gives me everything I need

2378
02:07:34,679 --> 02:07:45,050
if I then do my extraction here this is

2379
02:07:39,328 --> 02:07:50,958
all now I think all sort of done

2380
02:07:45,050 --> 02:07:50,958
properly those are all measured the

2381
02:07:51,260 --> 02:08:03,110
inner products are all taken trying to

2382
02:07:59,578 --> 02:08:03,109
think of why this one this isn't exactly

2383
02:08:03,618 --> 02:08:08,118
like I don't really need these to be I

2384
02:08:16,698 --> 02:08:20,879
guess it doesn't really

2385
02:08:18,479 --> 02:08:24,000
which which one I'm doing this but the

2386
02:08:20,880 --> 02:08:25,710
half vector here is HW they don't really

2387
02:08:24,000 --> 02:08:28,350
need to be mapped into that coordinate

2388
02:08:25,710 --> 02:08:33,630
space though right it that wouldn't

2389
02:08:28,350 --> 02:08:35,489
really matter I don't think because it's

2390
02:08:33,630 --> 02:08:39,170
you know it is the space that it is so

2391
02:08:35,488 --> 02:08:41,549
that why I mm-hmm

2392
02:08:39,170 --> 02:08:44,310
it doesn't matter that it's in this

2393
02:08:41,550 --> 02:08:46,170
coordinate space I think that's kind of

2394
02:08:44,310 --> 02:08:47,640
dumb that I do that but we can work out

2395
02:08:46,170 --> 02:08:56,369
simplifications like that a little bit

2396
02:08:47,640 --> 02:08:59,010
later anyway let's see so if Y here HW

2397
02:08:56,369 --> 02:09:00,930
here and then in here where we do this

2398
02:08:59,010 --> 02:09:04,020
now we just this is an a cost and this

2399
02:09:00,930 --> 02:09:07,289
is an eight and two and in this case

2400
02:09:04,020 --> 02:09:10,710
it's just the extract of that defects in

2401
02:09:07,289 --> 02:09:21,930
ER so it's just like extract defects in

2402
02:09:10,710 --> 02:09:24,920
ER sub-index extract defects in air

2403
02:09:21,930 --> 02:09:30,590
seven X so this would just be Y over X

2404
02:09:24,920 --> 02:09:32,369
this is extract just the inner like so

2405
02:09:30,590 --> 02:09:35,220
I'm trying to think if there's anything

2406
02:09:32,369 --> 02:09:39,809
weird happening here so this part here

2407
02:09:35,220 --> 02:09:41,400
the HC h YH x again I don't think since

2408
02:09:39,810 --> 02:09:44,100
those are just this this doesn't

2409
02:09:41,399 --> 02:09:48,019
actually have to happen this way either

2410
02:09:44,100 --> 02:09:56,450
so the theta half we can just do extract

2411
02:09:48,020 --> 02:09:59,940
sub-index extract sub-index extract

2412
02:09:56,449 --> 02:10:07,260
sub-index and these are just going to be

2413
02:09:59,939 --> 02:10:11,219
the half vector right so I think that's

2414
02:10:07,260 --> 02:10:15,170
everything we need from there and then

2415
02:10:11,220 --> 02:10:17,310
we just need that one extract function

2416
02:10:15,170 --> 02:10:20,909
so if I actually look at what the

2417
02:10:17,310 --> 02:10:24,020
extract zero what we actually need here

2418
02:10:20,909 --> 02:10:24,019
is just something that'll do this

2419
02:10:34,868 --> 02:10:39,618
right and I think this probably needs to

2420
02:10:38,538 --> 02:10:41,538
be a pound too fine because that's going

2421
02:10:39,618 --> 02:10:43,818
to be an actual immediate I would

2422
02:10:41,538 --> 02:10:57,318
suspect so it probably needs to be like

2423
02:10:43,819 --> 02:11:00,919
this right and then we're gonna have to

2424
02:10:57,319 --> 02:11:02,179
have like an M convert like one of those

2425
02:11:00,918 --> 02:11:03,378
things where you extract the actual

2426
02:11:02,179 --> 02:11:06,048
value there

2427
02:11:03,378 --> 02:11:09,679
I don't remember what they are because I

2428
02:11:06,048 --> 02:11:15,458
never remember the Intel intrinsics are

2429
02:11:09,679 --> 02:11:25,819
so crazy the naming scheme is just nuts

2430
02:11:15,458 --> 02:11:29,599
but this so basically we just passed

2431
02:11:25,819 --> 02:11:31,429
which one of these we want so I believe

2432
02:11:29,599 --> 02:11:33,859
we can just do that the problem is again

2433
02:11:31,429 --> 02:11:36,588
it's not a variable right it has to be a

2434
02:11:33,859 --> 02:11:41,569
constant and so it's kind of a pain in

2435
02:11:36,588 --> 02:11:44,269
the butt because we want this we want

2436
02:11:41,569 --> 02:11:49,819
this to be able to give us something

2437
02:11:44,269 --> 02:11:55,998
that we don't have to produce a loop for

2438
02:11:49,819 --> 02:12:00,649
you know ideally so that part's kind of

2439
02:11:55,998 --> 02:12:04,698
annoying because I'd have to wrap this

2440
02:12:00,649 --> 02:12:06,739
into macro or something and it's just

2441
02:12:04,698 --> 02:12:09,828
because we don't have implementations of

2442
02:12:06,738 --> 02:12:12,618
a coast and atan2 yet we need those to

2443
02:12:09,828 --> 02:12:14,469
be wide and so the downshifting here is

2444
02:12:12,618 --> 02:12:17,418
you know it's obviously like really bad

2445
02:12:14,469 --> 02:12:19,189
and not at all what we want but I'm not

2446
02:12:17,418 --> 02:12:20,898
really sure how to get around that

2447
02:12:19,189 --> 02:12:26,809
without implementing these two which

2448
02:12:20,899 --> 02:12:28,479
would take many days of work right so we

2449
02:12:26,809 --> 02:12:30,979
don't have much of a choice of that oh

2450
02:12:28,479 --> 02:12:35,119
and I seen many days of work I mean many

2451
02:12:30,979 --> 02:12:36,469
streams of work uh so anyway that's a

2452
02:12:35,118 --> 02:12:39,219
bit of a problem and I'm not sure how to

2453
02:12:36,469 --> 02:12:41,279
really get around that we could try

2454
02:12:39,219 --> 02:12:43,770
using in

2455
02:12:41,279 --> 02:12:46,469
one that we actually extract based on a

2456
02:12:43,770 --> 02:12:52,200
variable but those are much harder to

2457
02:12:46,470 --> 02:12:54,900
come by so maybe we'll just do something

2458
02:12:52,199 --> 02:12:57,929
really crappy right now for the time

2459
02:12:54,899 --> 02:13:01,369
being and actually just access off of

2460
02:12:57,930 --> 02:13:01,369
the you know

2461
02:13:14,010 --> 02:13:19,360
off of it this way

2462
02:13:15,849 --> 02:13:23,199
right which is again not not good and

2463
02:13:19,359 --> 02:13:24,279
not really what we want to do but it's I

2464
02:13:23,198 --> 02:13:26,348
think it's the best we're gonna be able

2465
02:13:24,279 --> 02:13:31,000
to get since we're already probably

2466
02:13:26,349 --> 02:13:38,980
should right wind up pretty soon here we

2467
02:13:31,000 --> 02:13:40,029
go um so let's see this right here is

2468
02:13:38,979 --> 02:13:41,888
just gonna return a double because

2469
02:13:40,029 --> 02:13:43,269
that's how oh well you know what no they

2470
02:13:41,889 --> 02:13:49,020
have--they afloat versions in the sea

2471
02:13:43,270 --> 02:13:52,090
runtime library right don't they yeah

2472
02:13:49,020 --> 02:13:53,920
all right so let's just finish it up so

2473
02:13:52,090 --> 02:13:55,480
we can close up for the day for each of

2474
02:13:53,920 --> 02:13:58,289
these we're gonna have to do the lookup

2475
02:13:55,479 --> 02:14:01,178
again slowly and then we're gonna have

2476
02:13:58,289 --> 02:14:04,029
the return value which is going to be

2477
02:14:01,179 --> 02:14:05,828
what we actually get out of the brdf

2478
02:14:04,029 --> 02:14:08,559
when we combine it so there's like a

2479
02:14:05,828 --> 02:14:10,809
result here right and that's what we're

2480
02:14:08,560 --> 02:14:12,159
going to return and so what we want to

2481
02:14:10,810 --> 02:14:15,340
do there is we need to be able to like

2482
02:14:12,158 --> 02:14:19,328
pack stuff into this thing so basically

2483
02:14:15,340 --> 02:14:21,150
like when we when we do the gather here

2484
02:14:19,328 --> 02:14:24,069
we're gonna have to do like our results

2485
02:14:21,149 --> 02:14:25,448
you know the X is going to be this the Y

2486
02:14:24,069 --> 02:14:27,519
is going to be this the Z is going to be

2487
02:14:25,448 --> 02:14:29,678
this kind of thing right so we're gonna

2488
02:14:27,520 --> 02:14:32,440
have like a color value that we actually

2489
02:14:29,679 --> 02:14:35,020
look up here and then we're gonna have

2490
02:14:32,439 --> 02:14:38,710
we're gonna have to put that back in

2491
02:14:35,020 --> 02:14:40,929
somehow right and presumably we'll have

2492
02:14:38,710 --> 02:14:46,909
to do it like I don't know there's an

2493
02:14:40,929 --> 02:14:54,449
insert here gather f/32

2494
02:14:46,909 --> 02:15:04,819
yeah they're at 32 again nope it's not

2495
02:14:54,449 --> 02:15:04,819
what I wanted yeah

2496
02:15:17,279 --> 02:15:24,078
so wait a minute how is that working

2497
02:15:25,969 --> 02:15:34,729
index time stride Laney 32 index plus

2498
02:15:31,260 --> 02:15:34,729
base pointer what

2499
02:15:35,899 --> 02:15:46,529
how can you multiply a wide index by a

2500
02:15:42,269 --> 02:15:54,239
stride and load an f32 off of it

2501
02:15:46,529 --> 02:16:05,029
what how is this even compiling anyone

2502
02:15:54,238 --> 02:16:07,069
care to tell me that makes like no sense

2503
02:16:05,029 --> 02:16:15,658
to me

2504
02:16:07,069 --> 02:16:17,969
so like the lean operator to star I do I

2505
02:16:15,658 --> 02:16:22,189
do not know how that's even remotely

2506
02:16:17,969 --> 02:16:28,489
legal right this is supposed to be wide

2507
02:16:22,189 --> 02:16:28,488
isn't it oh oh

2508
02:16:32,569 --> 02:16:37,129
I see what we're saying never mind

2509
02:16:34,520 --> 02:16:44,329
that's the part we did we did a version

2510
02:16:37,129 --> 02:16:47,359
for non-wide so never mind not that's

2511
02:16:44,329 --> 02:16:52,610
not as scary there we go that's what I

2512
02:16:47,360 --> 02:17:00,650
wanted to see all right totally fine no

2513
02:16:52,610 --> 02:17:02,719
worries everything's fine right okay so

2514
02:17:00,649 --> 02:17:04,520
anyway if I wanted to do this here again

2515
02:17:02,718 --> 02:17:05,598
this is really crappy and we don't

2516
02:17:04,520 --> 02:17:07,370
really want to do it this way what we

2517
02:17:05,599 --> 02:17:09,110
want to do is just do this wide so that

2518
02:17:07,370 --> 02:17:11,630
the whole thing is just you know these

2519
02:17:09,110 --> 02:17:13,610
these we want to have wide versions of

2520
02:17:11,629 --> 02:17:16,420
these and then we only want to have to

2521
02:17:13,610 --> 02:17:20,059
do the lookup just just that part

2522
02:17:16,420 --> 02:17:21,860
obviously we can't quite do correctly

2523
02:17:20,058 --> 02:17:25,699
but I guess you know what I can do - is

2524
02:17:21,860 --> 02:17:33,739
this Lane v3 here what I could do is use

2525
02:17:25,700 --> 02:17:36,260
this gather and and and you know do it

2526
02:17:33,739 --> 02:17:43,308
this way right so I could do something

2527
02:17:36,260 --> 02:17:47,210
like this where we do a gather f/32 on

2528
02:17:43,308 --> 02:17:50,479
each of these and then the result is

2529
02:17:47,209 --> 02:17:53,558
just that right I mean another way to

2530
02:17:50,479 --> 02:17:53,558
look at it would be I could just do this

2531
02:18:06,519 --> 02:18:12,370
and this way if we do a base pointer

2532
02:18:08,769 --> 02:18:13,750
plus astride with the indices like this

2533
02:18:12,370 --> 02:18:15,670
what we could do is then we'll just

2534
02:18:13,750 --> 02:18:19,450
build you know whatever these indices

2535
02:18:15,670 --> 02:18:22,739
are we can build those and then let this

2536
02:18:19,450 --> 02:18:24,790
gather for us that's one way to do it

2537
02:18:22,739 --> 02:18:26,349
the problem is we're still gonna have to

2538
02:18:24,790 --> 02:18:31,899
pack the indices so I guess I don't

2539
02:18:26,349 --> 02:18:35,260
really know that that saves us much and

2540
02:18:31,898 --> 02:18:37,260
you know kind of six of one half dozen

2541
02:18:35,260 --> 02:18:40,148
of the other

2542
02:18:37,260 --> 02:18:44,978
so I don't know this is the old this is

2543
02:18:40,148 --> 02:18:46,629
the problem with pre a vx5 1270 intel

2544
02:18:44,978 --> 02:18:49,978
never bothered to give you a way to load

2545
02:18:46,629 --> 02:18:53,829
anything so it was you know kind of a

2546
02:18:49,978 --> 02:18:55,929
kind of a lost cause but anyway so if we

2547
02:18:53,829 --> 02:18:57,849
want to load like table lookup right

2548
02:18:55,929 --> 02:19:00,939
they didn't implement table lookup for

2549
02:18:57,849 --> 02:19:02,380
some reason so anyway inside here if we

2550
02:19:00,939 --> 02:19:05,219
actually assume like okay load we'll

2551
02:19:02,379 --> 02:19:07,629
just make this work the other way around

2552
02:19:05,218 --> 02:19:10,388
then what we can do is say well alright

2553
02:19:07,629 --> 02:19:13,388
result dot X what we'll have to do is

2554
02:19:10,388 --> 02:19:18,699
like address off of that right like this

2555
02:19:13,388 --> 02:19:22,779
and place these values in there using

2556
02:19:18,700 --> 02:19:25,439
each individual sub line right so this

2557
02:19:22,780 --> 02:19:25,439
would look like this

2558
02:19:31,239 --> 02:19:37,058
and then we would just assign them like

2559
02:19:33,099 --> 02:19:38,679
that so that way we can assign the

2560
02:19:37,058 --> 02:19:41,108
colors in here and that way this thing

2561
02:19:38,679 --> 02:19:44,648
can look up just regular so in the brdf

2562
02:19:41,109 --> 02:19:49,390
table for whatever material we're

2563
02:19:44,648 --> 02:19:50,648
talking about select materials and I

2564
02:19:49,389 --> 02:19:52,059
don't know how these are being extracted

2565
02:19:50,648 --> 02:19:54,608
here I guess they just get extracted

2566
02:19:52,059 --> 02:19:58,409
that way yeah a lot of this is just so

2567
02:19:54,609 --> 02:19:58,409
so ugly you know

2568
02:20:05,780 --> 02:20:12,620
so anyway if we go ahead and grab this

2569
02:20:08,530 --> 02:20:23,570
particular material index out and get

2570
02:20:12,620 --> 02:20:29,630
the brdf table hmm maybe I'll do it this

2571
02:20:23,569 --> 02:20:39,770
way then what we need to do is take a

2572
02:20:29,629 --> 02:20:41,420
look at those values here and then this

2573
02:20:39,770 --> 02:20:43,610
is gonna give me the value that I

2574
02:20:41,420 --> 02:20:45,290
actually want so if I look it up in the

2575
02:20:43,610 --> 02:20:48,530
table here the question is what's the

2576
02:20:45,290 --> 02:20:49,910
actual index right so I know that the

2577
02:20:48,530 --> 02:20:51,470
index is going to be proportional to

2578
02:20:49,909 --> 02:20:54,709
these things when we get these values

2579
02:20:51,469 --> 02:20:57,559
out but I know I need to map them in so

2580
02:20:54,709 --> 02:20:58,728
I've got an index here and what we need

2581
02:20:57,559 --> 02:21:01,670
to do we probably want to do an

2582
02:20:58,728 --> 02:21:03,309
assertion right that says I don't know

2583
02:21:01,670 --> 02:21:06,139
if we've been asserting anywhere in here

2584
02:21:03,309 --> 02:21:07,430
yeah so we probably want to do an

2585
02:21:06,139 --> 02:21:09,680
assertion that makes sure that we're not

2586
02:21:07,430 --> 02:21:11,960
out of bounds right so that just so we

2587
02:21:09,680 --> 02:21:14,450
have some idea of whether or not this

2588
02:21:11,959 --> 02:21:16,429
thing is is you know totally nuts or

2589
02:21:14,450 --> 02:21:19,700
something but so like right here I can

2590
02:21:16,430 --> 02:21:24,139
assert that whatever index value we want

2591
02:21:19,700 --> 02:21:33,350
let's just assert that it's within the

2592
02:21:24,139 --> 02:21:37,029
the bounds of this thing so that'll just

2593
02:21:33,350 --> 02:21:37,030
make sure we know oops

2594
02:21:40,170 --> 02:21:43,260
we're not gonna fetch outside the table

2595
02:21:41,790 --> 02:21:45,930
and then what we need to do is actually

2596
02:21:43,260 --> 02:21:47,460
figure out what our indexing table

2597
02:21:45,930 --> 02:21:49,530
actually is and this is the last step to

2598
02:21:47,459 --> 02:21:51,119
the process so we've got all of our

2599
02:21:49,530 --> 02:21:53,250
angles here this is everything they

2600
02:21:51,120 --> 02:21:57,870
wanted from us right in order to

2601
02:21:53,250 --> 02:21:59,790
actually use one of these brdf files and

2602
02:21:57,870 --> 02:22:02,400
then you know they've got the way that

2603
02:21:59,790 --> 02:22:05,490
they're mapping it in here and you can

2604
02:22:02,399 --> 02:22:08,340
see that right in here so you can see

2605
02:22:05,489 --> 02:22:12,449
the way they've mapped it in they want

2606
02:22:08,340 --> 02:22:15,719
to clamp it so that if the theta is less

2607
02:22:12,450 --> 02:22:17,670
than zero that means it's more than 90

2608
02:22:15,719 --> 02:22:19,379
degrees so they're just saying look if

2609
02:22:17,670 --> 02:22:23,370
it's more than 90 degrees we don't do it

2610
02:22:19,379 --> 02:22:27,149
right and that seems fine so we can do

2611
02:22:23,370 --> 02:22:31,229
like theta 1/2 less than 0 theta 1/2

2612
02:22:27,149 --> 02:22:32,670
equals zero right totally fine then

2613
02:22:31,228 --> 02:22:35,399
they're doing like alright what's the

2614
02:22:32,670 --> 02:22:38,819
half degree so they basically try to

2615
02:22:35,399 --> 02:22:42,180
take they divide by PI over 2 right

2616
02:22:38,819 --> 02:22:44,219
which is 90 degrees so they're dividing

2617
02:22:42,180 --> 02:22:46,110
by 90 degrees and then multiplying by

2618
02:22:44,219 --> 02:23:05,688
whatever the sampling resolution

2619
02:22:46,110 --> 02:23:08,790
actually is right that seems fine

2620
02:23:05,689 --> 02:23:12,450
they're literally just mapping the range

2621
02:23:08,790 --> 02:23:18,650
of 0 to PI over 2 to the arrange of the

2622
02:23:12,450 --> 02:23:22,800
array right so what I might propose is

2623
02:23:18,649 --> 02:23:25,799
like saying something like this

2624
02:23:22,799 --> 02:23:31,590
like let's call that eyes ear oh let's

2625
02:23:25,799 --> 02:23:36,688
take theta 1/2 and divide by PI 32 half

2626
02:23:31,590 --> 02:23:40,228
PI 32 right so we've we've converted it

2627
02:23:36,689 --> 02:23:44,130
this way and then let's just clamp 0 1

2628
02:23:40,228 --> 02:23:49,739
that because now that's given us our

2629
02:23:44,129 --> 02:23:53,479
exact range right of lookups and then

2630
02:23:49,739 --> 02:23:56,539
what we can do is just map that into the

2631
02:23:53,479 --> 02:23:59,959
sampling resolution to get our index

2632
02:23:56,540 --> 02:24:03,800
right so maybe the right way to do it

2633
02:23:59,959 --> 02:24:07,009
would be this way right so do the

2634
02:24:03,799 --> 02:24:08,629
rounding take that dimension multiply it

2635
02:24:07,010 --> 02:24:10,909
in although I guess you don't really

2636
02:24:08,629 --> 02:24:15,560
want to round right we want truncate

2637
02:24:10,909 --> 02:24:18,890
actually so we really just want this so

2638
02:24:15,560 --> 02:24:22,250
we want to take our table and that first

2639
02:24:18,890 --> 02:24:25,250
count we want to multiply like so and

2640
02:24:22,250 --> 02:24:28,909
that might over fetch if we literally

2641
02:24:25,250 --> 02:24:31,760
got right up to 90 so what we may want

2642
02:24:28,909 --> 02:24:33,771
to do is say all right maybe we do it

2643
02:24:31,760 --> 02:24:35,780
this way where we I don't know what the

2644
02:24:33,771 --> 02:24:37,280
mapping should actually be if you look

2645
02:24:35,780 --> 02:24:40,970
at how they're doing the mapping here

2646
02:24:37,280 --> 02:24:45,380
it's a little bit Squinkie like it seems

2647
02:24:40,969 --> 02:24:48,379
like theta 1/2 degree there it looks

2648
02:24:45,379 --> 02:24:52,250
like it looks like they clamp after the

2649
02:24:48,379 --> 02:24:54,140
fact right and I'm not sure if that

2650
02:24:52,250 --> 02:24:58,851
really makes sense

2651
02:24:54,140 --> 02:25:01,390
I suspect suspect it might not you know

2652
02:24:58,851 --> 02:25:01,391
I'm saying to you

2653
02:25:02,530 --> 02:25:08,630
mmhmm yeah I'm not sure so I think what

2654
02:25:07,431 --> 02:25:10,159
we might want to do is say all right if

2655
02:25:08,629 --> 02:25:12,529
we did it this way and then do it around

2656
02:25:10,159 --> 02:25:14,329
so we did that I think that's probably

2657
02:25:12,530 --> 02:25:18,739
the right way to do that mapping I'm

2658
02:25:14,329 --> 02:25:22,069
guessing don't quote me on that but

2659
02:25:18,739 --> 02:25:23,390
probably something like that right we

2660
02:25:22,069 --> 02:25:24,649
then need to do another one because

2661
02:25:23,390 --> 02:25:28,520
again we've got so many of these

2662
02:25:24,649 --> 02:25:28,789
parameters coming in here so that's that

2663
02:25:28,521 --> 02:25:29,840
vector

2664
02:25:28,790 --> 02:25:32,391
oh and you can see here they're doing

2665
02:25:29,840 --> 02:25:33,890
some other things here right then

2666
02:25:32,390 --> 02:25:36,199
they're saying well okay whatever that

2667
02:25:33,890 --> 02:25:45,170
half degree is we're gonna multiply it

2668
02:25:36,200 --> 02:25:49,090
by the rest what so they then square it

2669
02:25:45,170 --> 02:25:49,090
and then square root what

2670
02:25:56,310 --> 02:26:19,709
why anybody know what is that about

2671
02:26:09,040 --> 02:26:19,710
I have no idea what that's about

2672
02:26:22,709 --> 02:26:28,629
divided by 90 degrees multiplied by the

2673
02:26:27,729 --> 02:26:30,239
resolution

2674
02:26:28,629 --> 02:26:33,579
so now you've mapped it all the way out

2675
02:26:30,239 --> 02:26:39,431
multiplied by the resolution again then

2676
02:26:33,579 --> 02:26:42,851
square root it are they just trying to

2677
02:26:39,431 --> 02:26:51,810
get more resolution in a particular part

2678
02:26:42,851 --> 02:26:55,560
of the sampling range yeah they are

2679
02:26:51,810 --> 02:26:55,560
that's exactly what they're doing

2680
02:27:03,091 --> 02:27:09,360
but that's not correct if you wanted to

2681
02:27:07,681 --> 02:27:17,640
do that you would have to have squared

2682
02:27:09,360 --> 02:27:19,560
it beforehand right that doesn't

2683
02:27:17,640 --> 02:27:20,300
distribute this this can't be right can

2684
02:27:19,560 --> 02:27:24,001
it

2685
02:27:20,300 --> 02:27:28,069
am i nuts there I mean if you look at

2686
02:27:24,001 --> 02:27:30,960
this this seems totally wrong because

2687
02:27:28,069 --> 02:27:32,909
you've taken theta half which is the

2688
02:27:30,960 --> 02:27:35,520
thing you wanted to map nonlinearly and

2689
02:27:32,909 --> 02:27:37,739
you've multiplied it by the actual table

2690
02:27:35,521 --> 02:27:39,511
size then you're multiplying by the

2691
02:27:37,739 --> 02:27:49,171
table size again and then square rooting

2692
02:27:39,511 --> 02:27:52,171
this thing that only square roots half

2693
02:27:49,171 --> 02:27:58,711
of the part I don't think this is right

2694
02:27:52,171 --> 02:28:00,360
is there a bug in this code because you

2695
02:27:58,710 --> 02:28:05,251
know I mean just just think of it this

2696
02:28:00,360 --> 02:28:09,141
way right this is the value that we want

2697
02:28:05,251 --> 02:28:13,681
to map nonlinearly right it's this and

2698
02:28:09,140 --> 02:28:16,079
we want to square root that right but

2699
02:28:13,681 --> 02:28:17,909
the problem is they've done that after

2700
02:28:16,079 --> 02:28:21,450
already multiplying it by the table

2701
02:28:17,909 --> 02:28:25,079
count and you can't distribute that that

2702
02:28:21,450 --> 02:28:28,079
doesn't work right I mean just do the

2703
02:28:25,079 --> 02:28:34,649
multiplication I mean here if you don't

2704
02:28:28,079 --> 02:28:37,440
believe me maybe I'm just not here so

2705
02:28:34,649 --> 02:28:39,979
let's suppose that we take this at face

2706
02:28:37,440 --> 02:28:42,870
value so we've got theta half over M PI

2707
02:28:39,979 --> 02:28:44,130
over 2 right so what that's going to do

2708
02:28:42,870 --> 02:28:46,740
is that's going to produce a value from

2709
02:28:44,130 --> 02:28:48,359
0 to 1 right because we've got something

2710
02:28:46,739 --> 02:28:50,970
that can only go up to 9 degrees

2711
02:28:48,360 --> 02:28:52,471
we're going to divide it by 90 degrees

2712
02:28:50,970 --> 02:28:54,569
and then we're going to get a value from

2713
02:28:52,470 --> 02:28:56,909
0 to 1 that we're gonna use to range map

2714
02:28:54,569 --> 02:29:00,360
into this thing right so we're going to

2715
02:28:56,909 --> 02:29:02,700
call that our T value basically right if

2716
02:29:00,360 --> 02:29:05,700
we then say T times the sampling res

2717
02:29:02,700 --> 02:29:08,521
data age right so now we've got T times

2718
02:29:05,700 --> 02:29:13,041
the resolution we assign that to theta

2719
02:29:08,521 --> 02:29:16,439
1/2 theta half dead right and then we do

2720
02:29:13,040 --> 02:29:20,278
temp equals theta have to egg times that

2721
02:29:16,439 --> 02:29:23,369
right so that's this value again so that

2722
02:29:20,279 --> 02:29:25,828
makes this T times R squared right I

2723
02:29:23,369 --> 02:29:28,979
mean that's what that would do we then

2724
02:29:25,828 --> 02:29:30,840
square root that so we're square rooting

2725
02:29:28,978 --> 02:29:35,188
and this is the actual index value we

2726
02:29:30,840 --> 02:29:37,408
then use so we're square rooting T times

2727
02:29:35,189 --> 02:29:42,658
R squared right

2728
02:29:37,408 --> 02:29:51,208
that gives us I equals R times root T

2729
02:29:42,658 --> 02:29:54,020
right is that right

2730
02:29:51,209 --> 02:29:56,459
all right well nevermind I take it back

2731
02:29:54,020 --> 02:29:58,109
that's actually fine it's just very

2732
02:29:56,459 --> 02:30:02,550
convoluted because you didn't need to do

2733
02:29:58,109 --> 02:30:06,539
it so the math does check out it's just

2734
02:30:02,549 --> 02:30:09,090
again very inefficient I guess because

2735
02:30:06,539 --> 02:30:10,560
you didn't need to do any of that you

2736
02:30:09,090 --> 02:30:15,478
could have just Square rooted this and

2737
02:30:10,559 --> 02:30:17,038
then multiplied it right so I guess the

2738
02:30:15,478 --> 02:30:20,068
math does check out now that I've worked

2739
02:30:17,039 --> 02:30:26,310
it through but why would you do it might

2740
02:30:20,068 --> 02:30:30,778
be the better way to say it yeah because

2741
02:30:26,309 --> 02:30:39,988
it's just this right I don't know where

2742
02:30:30,779 --> 02:30:45,709
our square root is that's right there so

2743
02:30:39,988 --> 02:30:49,109
that's all you really need to do like so

2744
02:30:45,709 --> 02:30:50,909
so this is our f 0 and then we just need

2745
02:30:49,109 --> 02:30:54,090
to basically multiply up like that and

2746
02:30:50,908 --> 02:30:56,100
then you know off we go so it's just

2747
02:30:54,090 --> 02:30:58,408
they did an extra multiply and I just

2748
02:30:56,100 --> 02:31:01,109
don't know why again it doesn't really

2749
02:30:58,408 --> 02:31:02,368
make sense but it wasn't really they

2750
02:31:01,109 --> 02:31:04,199
weren't really trying to be efficient in

2751
02:31:02,369 --> 02:31:05,489
that code probably so they really just

2752
02:31:04,199 --> 02:31:07,920
didn't care but just seems like a really

2753
02:31:05,488 --> 02:31:09,118
convoluted way to do it so anyway they

2754
02:31:07,920 --> 02:31:11,609
want this to be a nonlinear mapping

2755
02:31:09,119 --> 02:31:13,020
mm-hmm that's fine

2756
02:31:11,609 --> 02:31:16,318
we can make it a nonlinear wrapping

2757
02:31:13,020 --> 02:31:18,720
however at that point why did we take

2758
02:31:16,318 --> 02:31:21,090
the Eiko's if we wanted a nonlinear

2759
02:31:18,719 --> 02:31:23,728
mapping just don't take the eCos just

2760
02:31:21,090 --> 02:31:25,109
use the inner product right and then we

2761
02:31:23,728 --> 02:31:28,948
would have had the nonlinear mapping I

2762
02:31:25,109 --> 02:31:30,390
think so that's also pretty weird right

2763
02:31:28,949 --> 02:31:34,970
like I feel like this is

2764
02:31:30,389 --> 02:31:34,969
just undoing what the a cosine did

2765
02:31:48,379 --> 02:31:53,448
so again pretty weird not really sure

2766
02:31:50,750 --> 02:31:59,689
what's going on there if you look at

2767
02:31:53,449 --> 02:32:00,710
what's going on now just trying to

2768
02:31:59,689 --> 02:32:02,479
figure out where we're getting here so

2769
02:32:00,709 --> 02:32:06,679
we have our theta half index as you can

2770
02:32:02,478 --> 02:32:09,379
see it's right here right that we're

2771
02:32:06,680 --> 02:32:14,979
using for our index we've got our five

2772
02:32:09,379 --> 02:32:14,978
DIF index and our theta diff index right

2773
02:32:21,068 --> 02:32:26,539
so looking at this we don't really need

2774
02:32:23,270 --> 02:32:30,920
the Phi half we just need five DIF and

2775
02:32:26,540 --> 02:32:36,770
then these two right so this is actually

2776
02:32:30,920 --> 02:32:39,158
unnecessary we only need the hwz that

2777
02:32:36,770 --> 02:32:39,158
makes sense

2778
02:32:40,119 --> 02:32:49,069
yeah so anyway then we come in here and

2779
02:32:44,270 --> 02:32:52,460
we do theta half index is the one we've

2780
02:32:49,068 --> 02:32:55,340
got theta diff index is theta diff and

2781
02:32:52,459 --> 02:33:02,589
Phi different Nexus 5 diff so we got to

2782
02:32:55,340 --> 02:33:02,590
look at those so theta diff index is not

2783
02:33:02,680 --> 02:33:08,029
nonlinear so that's literally just

2784
02:33:05,329 --> 02:33:12,079
mapping it directly into the resolution

2785
02:33:08,029 --> 02:33:14,500
so dividing by 90 and going and then

2786
02:33:12,079 --> 02:33:18,879
it's clamped to the table size right and

2787
02:33:14,500 --> 02:33:21,859
if we look at how they've defined that

2788
02:33:18,879 --> 02:33:24,108
theta def is the same so it's also a

2789
02:33:21,859 --> 02:33:25,670
half angle so basically it's the exact

2790
02:33:24,109 --> 02:33:28,729
same code just without the nonlinear

2791
02:33:25,670 --> 02:33:36,318
mapping right so if we want to we can do

2792
02:33:28,728 --> 02:33:39,250
this exactly the same way we did it we

2793
02:33:36,318 --> 02:33:39,250
just don't square root it

2794
02:33:44,889 --> 02:33:49,340
so again pretty easy and so then the

2795
02:33:48,079 --> 02:33:51,709
final one is the only one that's

2796
02:33:49,340 --> 02:33:54,850
probably more complicated gonna ask me

2797
02:33:51,709 --> 02:33:54,849
why I didn't change that to a one

2798
02:34:02,880 --> 02:34:07,501
and I also have to look at how those are

2799
02:34:04,979 --> 02:34:09,479
stride it out but so if we look here at

2800
02:34:07,501 --> 02:34:15,110
fide if index dated if index at a half

2801
02:34:09,479 --> 02:34:17,761
index it looks like this Phi defend x1

2802
02:34:15,110 --> 02:34:19,409
here's the reciprocity so this is just

2803
02:34:17,761 --> 02:34:23,341
basically saying look we're gonna make

2804
02:34:19,409 --> 02:34:26,931
it be symmetric about pi right so

2805
02:34:23,341 --> 02:34:30,091
basically they're just doing you know a

2806
02:34:26,931 --> 02:34:33,001
bump up so when we look in here and we

2807
02:34:30,091 --> 02:34:35,280
look at the five DIF and we're you know

2808
02:34:33,001 --> 02:34:43,591
we did the eight and two here we're

2809
02:34:35,280 --> 02:34:46,530
gonna say if five diff is less than zero

2810
02:34:43,591 --> 02:34:49,681
if I diff plus Z equals PI thirty-two

2811
02:34:46,530 --> 02:34:51,511
right and that's all that's doing so

2812
02:34:49,681 --> 02:34:54,331
then here it looks like we multiply out

2813
02:34:51,511 --> 02:34:58,101
by the sampling again and off we go

2814
02:34:54,331 --> 02:35:05,581
and I guess this resolution value is

2815
02:34:58,101 --> 02:35:12,331
actually sort of garbage that's a 1 by

2816
02:35:05,581 --> 02:35:15,601
the way right date a half day to D and

2817
02:35:12,331 --> 02:35:17,280
so Phi D is here so we want half of this

2818
02:35:15,601 --> 02:35:19,440
value but that's what we're actually

2819
02:35:17,280 --> 02:35:21,331
going to get in the count right because

2820
02:35:19,440 --> 02:35:27,810
according to this they stored that in

2821
02:35:21,331 --> 02:35:34,501
the file but halved right so the dims to

2822
02:35:27,810 --> 02:35:37,470
value is presumably halved right so that

2823
02:35:34,501 --> 02:35:40,081
means it's already been halved for us so

2824
02:35:37,470 --> 02:35:47,310
if we do this we should just multiply

2825
02:35:40,081 --> 02:35:49,890
out to the correct thing if we want this

2826
02:35:47,310 --> 02:35:52,020
to map zero to one we just multiplied by

2827
02:35:49,890 --> 02:35:57,140
I've been divided by PI right so that's

2828
02:35:52,021 --> 02:35:57,141
0 to 180 which is what we would expect

2829
02:36:01,761 --> 02:36:06,578
so those are in

2830
02:36:03,549 --> 02:36:09,849
and presumably we just roll them out so

2831
02:36:06,578 --> 02:36:11,469
we just be like all right in terms of

2832
02:36:09,850 --> 02:36:13,510
how these things are started we don't

2833
02:36:11,469 --> 02:36:17,618
even know we're going to look here so

2834
02:36:13,510 --> 02:36:21,100
the FIDE if index is the part that is

2835
02:36:17,619 --> 02:36:24,520
not strided at all so that's the

2836
02:36:21,100 --> 02:36:28,539
increment by one so the i2 gets nothing

2837
02:36:24,520 --> 02:36:33,279
the i1 is multiplied presumably by the

2838
02:36:28,539 --> 02:36:35,619
count of one let's see

2839
02:36:33,279 --> 02:36:37,810
sampling res Phi over 2 okay so that's

2840
02:36:35,619 --> 02:36:39,760
count 2 right

2841
02:36:37,809 --> 02:36:43,868
and then the I write is that right

2842
02:36:39,760 --> 02:36:49,119
that's thetad if they to DIF and then

2843
02:36:43,869 --> 02:36:58,199
theta half is the full stride so theta

2844
02:36:49,119 --> 02:36:58,199
1/2 which is this one is count one

2845
02:36:58,949 --> 02:37:09,399
perhaps count two right there's like

2846
02:37:06,789 --> 02:37:12,640
zero chance that this will work there's

2847
02:37:09,398 --> 02:37:18,959
way too much stuff in it but that's what

2848
02:37:12,639 --> 02:37:24,959
it says right so we've done something

2849
02:37:18,959 --> 02:37:30,328
and we can maybe call it a day um I

2850
02:37:24,959 --> 02:37:32,648
don't know that's gonna say I don't know

2851
02:37:30,328 --> 02:37:37,408
what's going on here but we can we can

2852
02:37:32,648 --> 02:37:37,408
check we why can't I see my source code

2853
02:37:40,139 --> 02:37:46,408
do we not have debug info for this guy

2854
02:37:42,760 --> 02:37:46,408
so no what happened

2855
02:37:52,988 --> 02:37:58,128
not sure why but it's not letting me

2856
02:37:55,369 --> 02:38:02,659
actually view the source

2857
02:37:58,129 --> 02:38:06,319
oh it's cuz we're deep down in the

2858
02:38:02,658 --> 02:38:08,179
visual see guts alright so you can see

2859
02:38:06,318 --> 02:38:12,738
we did actually get outside the table

2860
02:38:08,179 --> 02:38:14,509
here not exactly sure why that would be

2861
02:38:12,738 --> 02:38:17,599
maybe because we're indexing these

2862
02:38:14,509 --> 02:38:19,879
slightly wrong I mean let me double

2863
02:38:17,599 --> 02:38:21,619
check that f2 part of things but let's

2864
02:38:19,879 --> 02:38:23,509
take a quick look at where we're at

2865
02:38:21,619 --> 02:38:26,149
and just get that part fixed cuz that

2866
02:38:23,509 --> 02:38:29,859
part we should be able to fix although

2867
02:38:26,148 --> 02:38:37,488
this doesn't have any values here so

2868
02:38:29,859 --> 02:38:43,429
wait a minute what table is this what

2869
02:38:37,488 --> 02:38:45,558
table is this I guess so one of the

2870
02:38:43,429 --> 02:38:49,459
problems that we would have here is just

2871
02:38:45,558 --> 02:38:54,648
that everybody would need to be

2872
02:38:49,459 --> 02:38:58,099
initialized to a table that just had

2873
02:38:54,648 --> 02:38:59,478
like one normal reflectance in it

2874
02:38:58,099 --> 02:39:01,609
because we need to be able to load these

2875
02:38:59,478 --> 02:39:05,179
wide so you're going to have people with

2876
02:39:01,609 --> 02:39:07,639
zeros yeah and think of that so we need

2877
02:39:05,179 --> 02:39:10,578
to do kind of like a null version of the

2878
02:39:07,638 --> 02:39:12,498
brdf load you know what I mean

2879
02:39:10,578 --> 02:39:14,628
or we can do like an if 0 on it I

2880
02:39:12,498 --> 02:39:17,418
suppose but it seems better to just fill

2881
02:39:14,629 --> 02:39:20,799
them in with actual values I would think

2882
02:39:17,418 --> 02:39:26,408
so we probably want is something like

2883
02:39:20,799 --> 02:39:29,599
null brdf or something like that and

2884
02:39:26,408 --> 02:39:40,548
what null brdf would do is it would just

2885
02:39:29,599 --> 02:39:44,299
initialize the the destination so when

2886
02:39:40,549 --> 02:39:49,659
you actually do a sample there you you

2887
02:39:44,299 --> 02:39:49,659
won't get a bogus value

2888
02:39:58,060 --> 02:40:03,670
so this is just initialize it to a table

2889
02:40:00,220 --> 02:40:07,989
of 1 we can just do like okay there's an

2890
02:40:03,670 --> 02:40:11,021
f32 that's like the like or a v3 -

2891
02:40:07,989 --> 02:40:14,140
that's like the you know the null brdf

2892
02:40:11,021 --> 02:40:16,750
value or whatever right and it's just

2893
02:40:14,140 --> 02:40:21,100
like or maybe it's like no reflectance

2894
02:40:16,750 --> 02:40:26,851
or something right it's just zero and so

2895
02:40:21,101 --> 02:40:29,440
values will just point to that right

2896
02:40:26,851 --> 02:40:32,771
let's try that again so we can get an

2897
02:40:29,440 --> 02:40:35,050
actual run here okay so the thing runs

2898
02:40:32,771 --> 02:40:36,971
which is surprising to me because we

2899
02:40:35,049 --> 02:40:39,430
sort of threw so much stuff in there I

2900
02:40:36,970 --> 02:40:41,949
wasn't really expecting it to but I'm

2901
02:40:39,431 --> 02:40:44,290
guessing we will get garbage for output

2902
02:40:41,950 --> 02:40:46,630
more or less and we sort of do sort of

2903
02:40:44,290 --> 02:40:51,670
don't that's not as bad as I was

2904
02:40:46,629 --> 02:40:55,810
actually expecting so kind of surprising

2905
02:40:51,670 --> 02:41:01,360
but you know so I'm happy to call it

2906
02:40:55,810 --> 02:41:04,390
there and we'll just we'll pick that up

2907
02:41:01,360 --> 02:41:08,860
on the next time we do our handmade

2908
02:41:04,390 --> 02:41:12,029
right I'm gonna go to a brief QA I'm not

2909
02:41:08,860 --> 02:41:12,030
going to take many questions probably

2910
02:41:15,690 --> 02:41:19,380
assuming the stream worked at all

2911
02:41:31,610 --> 02:41:34,030
all right

2912
02:41:48,149 --> 02:41:52,989
when computing the sphere by tangent

2913
02:41:50,530 --> 02:41:54,460
could you just nas the tangent before

2914
02:41:52,989 --> 02:41:56,199
competing to buy a tangent so you don't

2915
02:41:54,459 --> 02:42:00,760
have to NAS the by tangent afterwards

2916
02:41:56,200 --> 02:42:03,250
probably numerically I guess I don't

2917
02:42:00,761 --> 02:42:08,710
really know in our case we don't have to

2918
02:42:03,250 --> 02:42:13,379
be 100% precise probably so probably yes

2919
02:42:08,709 --> 02:42:13,379
I mean let me go grab that part

2920
02:42:21,680 --> 02:42:27,540
yeah I mean I assumed you could do it so

2921
02:42:24,780 --> 02:42:28,620
since you know that these two are normal

2922
02:42:27,540 --> 02:42:30,330
you know that they're gonna produce

2923
02:42:28,620 --> 02:42:31,560
something that's just the angle the

2924
02:42:30,329 --> 02:42:33,271
difference is going to be the sine of

2925
02:42:31,559 --> 02:42:35,250
the angle between them you will have to

2926
02:42:33,271 --> 02:42:37,140
normalize that one and then you assume

2927
02:42:35,250 --> 02:42:40,409
that these are at right angles to each

2928
02:42:37,139 --> 02:42:43,949
other now so DIF y + HW have to be

2929
02:42:40,409 --> 02:42:47,039
orthogonal so you could eliminate that

2930
02:42:43,950 --> 02:42:50,300
one and you should also be able to

2931
02:42:47,040 --> 02:42:57,180
eliminate the one we did down here

2932
02:42:50,299 --> 02:43:03,479
somewhere where was that yeah so here

2933
02:42:57,180 --> 02:43:06,380
you could do it this way right and then

2934
02:43:03,479 --> 02:43:08,279
that should those should be fine right I

2935
02:43:06,379 --> 02:43:13,020
usually don't do that till I'm actually

2936
02:43:08,280 --> 02:43:15,320
like getting the code more specifically

2937
02:43:13,021 --> 02:43:15,320
a bit

2938
02:43:27,529 --> 02:43:31,010
talking about rayon linux and more

2939
02:43:29,420 --> 02:43:33,309
beautiful code there is still a github

2940
02:43:31,010 --> 02:43:36,680
issue about memory loading and sim D

2941
02:43:33,309 --> 02:43:41,090
yeah I mean I'm again probably not gonna

2942
02:43:36,680 --> 02:43:42,800
look at that the moment is the B RDS

2943
02:43:41,090 --> 02:43:44,590
essentially a function that tells us

2944
02:43:42,799 --> 02:43:54,949
which raise within the hemisphere to use

2945
02:43:44,590 --> 02:43:57,020
do you mean brdf do you get uncanny

2946
02:43:54,950 --> 02:43:58,670
valley impression sometimes when looking

2947
02:43:57,020 --> 02:44:00,859
at Ray traced images if so what

2948
02:43:58,670 --> 02:44:03,079
strategies might you have to mitigate

2949
02:44:00,859 --> 02:44:05,090
that I'm not sure what you mean by

2950
02:44:03,079 --> 02:44:07,609
uncanny valley not in this kind of a

2951
02:44:05,090 --> 02:44:10,068
situation because I mean at least for us

2952
02:44:07,609 --> 02:44:12,409
we're just talking broadly here about

2953
02:44:10,068 --> 02:44:13,909
you know things that are spheres and

2954
02:44:12,409 --> 02:44:15,350
planes so you're never gonna get an

2955
02:44:13,909 --> 02:44:16,549
uncanny valley looking at spheres and

2956
02:44:15,350 --> 02:44:29,659
planes they don't exist in the real

2957
02:44:16,549 --> 02:44:31,699
world right oops brdf sorry typo yes so

2958
02:44:29,659 --> 02:44:33,680
the BR d a-- function no it's not

2959
02:44:31,700 --> 02:44:35,630
telling us which rays within the

2960
02:44:33,680 --> 02:44:39,590
hemisphere to use what it's doing is

2961
02:44:35,629 --> 02:44:41,629
it's telling us for any given rays in

2962
02:44:39,590 --> 02:44:43,609
the hemisphere so one incoming and one

2963
02:44:41,629 --> 02:44:51,079
outgoing it tells us how much the

2964
02:44:43,609 --> 02:44:54,290
surface reflects that's it right so

2965
02:44:51,079 --> 02:44:56,539
basically we choose before we ask it we

2966
02:44:54,290 --> 02:44:58,430
choose where are we trying to figure out

2967
02:44:56,540 --> 02:45:00,260
where the lights going and where are we

2968
02:44:58,430 --> 02:45:02,329
trying to ask about the light incoming

2969
02:45:00,260 --> 02:45:04,279
and we give it those two things plus the

2970
02:45:02,329 --> 02:45:06,260
surface geometry so the normal the

2971
02:45:04,279 --> 02:45:09,529
tangent the by tangent and then we say

2972
02:45:06,260 --> 02:45:11,420
hey brdf how much light should get

2973
02:45:09,529 --> 02:45:16,540
transmitted from this direction to this

2974
02:45:11,420 --> 02:45:16,540
direction that's it

2975
02:45:20,819 --> 02:45:24,850
well I finish this tomorrow probably not

2976
02:45:23,228 --> 02:45:26,079
handmade rageous what we use when

2977
02:45:24,850 --> 02:45:31,540
something goes wrong in the streamer

2978
02:45:26,079 --> 02:45:34,840
when we're trying to test stuff my

2979
02:45:31,540 --> 02:45:35,439
camera framerate seems low um yeah

2980
02:45:34,840 --> 02:45:37,228
probably

2981
02:45:35,439 --> 02:45:40,689
I mean it's being captured by Linux

2982
02:45:37,228 --> 02:45:43,829
right which can never do anything so

2983
02:45:40,689 --> 02:45:47,649
it's probably just not capturing the

2984
02:45:43,829 --> 02:45:52,329
webcam because it's too terrible to do

2985
02:45:47,649 --> 02:45:54,579
it I'm glad the sound was fine though

2986
02:45:52,329 --> 02:45:56,500
have you thought about implementing ggx

2987
02:45:54,579 --> 02:46:03,450
for handmade ray I don't even know what

2988
02:45:56,500 --> 02:46:03,450
that is so the answer is no I haven't

2989
02:46:14,909 --> 02:46:22,209
let's just assume that this is what you

2990
02:46:17,229 --> 02:46:33,090
actually meant no I haven't thought of

2991
02:46:22,209 --> 02:46:33,089
it um shockingly

2992
02:46:51,959 --> 02:46:59,909
how much of modern skinned mesh

2993
02:46:54,209 --> 02:47:03,988
animation did you contribute to I don't

2994
02:46:59,909 --> 02:47:06,170
know I guess that depends on what you

2995
02:47:03,988 --> 02:47:06,170
mean

2996
02:47:23,970 --> 02:47:29,140
haha this is what I'm talking about a

2997
02:47:26,229 --> 02:47:42,100
Cornell that edu okay sorry I'll go

2998
02:47:29,140 --> 02:47:51,329
ahead look at that up so SRM pube

2999
02:47:42,101 --> 02:47:51,329
locations SRO 7b t DF PDA nope nope

3000
02:48:15,601 --> 02:48:23,380
so I mean I guess the problem here is

3001
02:48:18,250 --> 02:48:25,840
like yeah this is just another like we

3002
02:48:23,379 --> 02:48:27,689
wouldn't if there's a database of these

3003
02:48:25,840 --> 02:48:30,690
that we could load then we could do it

3004
02:48:27,690 --> 02:48:30,690
right

3005
02:48:46,440 --> 02:48:58,500
provide one I mean the only reason we

3006
02:48:56,130 --> 02:49:09,421
did this particular thing is because we

3007
02:48:58,500 --> 02:49:10,530
could load a database right and and

3008
02:49:09,421 --> 02:49:12,511
maybe there is a day if there's a

3009
02:49:10,530 --> 02:49:15,681
database of these then we could

3010
02:49:12,511 --> 02:49:15,681
certainly load them right but

3011
02:49:25,559 --> 02:49:29,618
well obviously all right but what

3012
02:49:27,908 --> 02:49:31,238
function choose the outgoing rays to use

3013
02:49:29,619 --> 02:49:32,649
because it will affect the outcome of

3014
02:49:31,238 --> 02:49:36,968
the picture it gets fuzzier if they're

3015
02:49:32,648 --> 02:49:39,430
raised red and more directions no so so

3016
02:49:36,968 --> 02:49:41,288
that's kind of the point let me

3017
02:49:39,430 --> 02:49:43,328
illustrate this for you because this is

3018
02:49:41,289 --> 02:49:44,739
important to understand I mean to the

3019
02:49:43,328 --> 02:49:46,059
extent that anything in handmade array

3020
02:49:44,738 --> 02:49:47,350
is important to understand because it's

3021
02:49:46,059 --> 02:49:51,968
kind of just a side thing that we do

3022
02:49:47,350 --> 02:49:53,949
sometimes but all right

3023
02:49:51,968 --> 02:49:56,318
so if you actually look at the way we

3024
02:49:53,949 --> 02:49:57,609
started doing handmade array when we

3025
02:49:56,318 --> 02:49:59,378
were just building the Ray casting part

3026
02:49:57,609 --> 02:50:03,039
and we weren't actually trying to do

3027
02:49:59,379 --> 02:50:05,259
anything with light transfer then what

3028
02:50:03,039 --> 02:50:07,329
you said is sort of correct meaning when

3029
02:50:05,259 --> 02:50:08,770
we have a surface and we want to know

3030
02:50:07,328 --> 02:50:11,918
how much light is coming out in this

3031
02:50:08,770 --> 02:50:14,229
direction then if we only cast array or

3032
02:50:11,918 --> 02:50:16,838
rays in this direction or in a tight

3033
02:50:14,228 --> 02:50:18,158
cone in that direction then what we will

3034
02:50:16,838 --> 02:50:22,148
get is something that looks like a

3035
02:50:18,158 --> 02:50:24,728
mirror roughly right and if we cast rays

3036
02:50:22,148 --> 02:50:25,898
in all the directions uniformly then

3037
02:50:24,728 --> 02:50:29,198
we'll get something that looks kind of

3038
02:50:25,898 --> 02:50:32,588
like chalky right or very diffuse right

3039
02:50:29,199 --> 02:50:36,969
and we call this mirror version specular

3040
02:50:32,588 --> 02:50:38,859
right but all the only reason for that

3041
02:50:36,968 --> 02:50:41,978
the only reason that's what's happening

3042
02:50:38,859 --> 02:50:46,168
is because we have no light transfer

3043
02:50:41,978 --> 02:50:49,269
function so we were all equally weighted

3044
02:50:46,168 --> 02:50:50,668
right we were taking all these rays and

3045
02:50:49,270 --> 02:50:52,899
we were adding them together and just

3046
02:50:50,668 --> 02:50:56,588
averaging right we're just an average of

3047
02:50:52,898 --> 02:50:59,108
all the samples so obviously the more

3048
02:50:56,588 --> 02:51:00,728
you take samples in one direction the

3049
02:50:59,109 --> 02:51:02,588
more the color will look like what's

3050
02:51:00,728 --> 02:51:04,238
coming from that direction and the more

3051
02:51:02,588 --> 02:51:05,559
you just take samples in all directions

3052
02:51:04,238 --> 02:51:09,279
the more it will just look like the

3053
02:51:05,559 --> 02:51:12,728
uniform light so it appeared because we

3054
02:51:09,279 --> 02:51:15,729
were not waiting our samples at all it

3055
02:51:12,728 --> 02:51:17,769
appeared as if just what directions we

3056
02:51:15,728 --> 02:51:19,208
chose to send our arrays was what

3057
02:51:17,770 --> 02:51:21,850
determined what the surface looks like

3058
02:51:19,209 --> 02:51:24,729
but that's only true if they're equally

3059
02:51:21,850 --> 02:51:29,289
weighted what the brdf gives you is the

3060
02:51:24,728 --> 02:51:32,648
weighting right and so what it does is

3061
02:51:29,289 --> 02:51:35,079
it says oh well for a mirrored surface

3062
02:51:32,648 --> 02:51:39,039
when you happen to ask me for things in

3063
02:51:35,078 --> 02:51:40,840
this direction I give very high weights

3064
02:51:39,040 --> 02:51:42,850
and when you ask for things in any other

3065
02:51:40,840 --> 02:51:46,420
direction I give you very low weights

3066
02:51:42,850 --> 02:51:48,610
and so it produces a mirror by waiting

3067
02:51:46,420 --> 02:51:50,559
all of the mirror Direction samples

3068
02:51:48,610 --> 02:51:56,290
highly in all of the off mirror

3069
02:51:50,559 --> 02:51:58,629
directions very low right however it

3070
02:51:56,290 --> 02:52:01,000
also lets you do all other types of

3071
02:51:58,629 --> 02:52:03,459
surfaces because it can do things like

3072
02:52:01,000 --> 02:52:05,709
having like certain fall offs or weird

3073
02:52:03,459 --> 02:52:08,049
bumps or weird shifts and stuff right

3074
02:52:05,709 --> 02:52:10,239
and so with the weighting that what this

3075
02:52:08,049 --> 02:52:12,340
does is allow you to have any kind of

3076
02:52:10,239 --> 02:52:15,069
surface not just ones that do only

3077
02:52:12,340 --> 02:52:17,170
mirror or only diffuse or some blend

3078
02:52:15,069 --> 02:52:19,420
between the two this lets you actually

3079
02:52:17,170 --> 02:52:22,559
do any kind of incoming light

3080
02:52:19,420 --> 02:52:22,559
distribution that you want

3081
02:52:33,729 --> 02:52:38,859
and by the way we can reverse this

3082
02:52:36,909 --> 02:52:40,931
process as well eventually for

3083
02:52:38,860 --> 02:52:44,200
optimization purposes and say if we

3084
02:52:40,931 --> 02:52:47,050
notice certain places where the brdf has

3085
02:52:44,200 --> 02:52:48,790
a lot of information and other places

3086
02:52:47,049 --> 02:52:51,069
where it's weighted very low we can like

3087
02:52:48,790 --> 02:52:54,460
only take samples in directions that are

3088
02:52:51,069 --> 02:52:56,619
pretty high right so we can reconstruct

3089
02:52:54,459 --> 02:52:59,500
this exact behavior from a perfect

3090
02:52:56,620 --> 02:53:02,141
mirror BDF by sampling along the PDF but

3091
02:52:59,500 --> 02:53:04,989
again if we take the brdf and figure out

3092
02:53:02,140 --> 02:53:06,431
how to sample it properly rather than

3093
02:53:04,989 --> 02:53:07,510
just assuming that it's either a mirror

3094
02:53:06,431 --> 02:53:09,640
or either diffused or somewhere in

3095
02:53:07,510 --> 02:53:12,069
between what we can do is then produce

3096
02:53:09,640 --> 02:53:13,629
any reflectance and sample it properly

3097
02:53:12,069 --> 02:53:22,181
rather than just only having one

3098
02:53:13,629 --> 02:53:23,949
sampling strategy right did shader

3099
02:53:22,181 --> 02:53:26,860
weighted skin mesh animation exist

3100
02:53:23,950 --> 02:53:29,260
before you started meddling with it sure

3101
02:53:26,860 --> 02:53:34,060
how did it evolve and do you see any

3102
02:53:29,260 --> 02:53:38,050
future improvements possible in it yeah

3103
02:53:34,060 --> 02:53:42,879
I mean again not really sure what you

3104
02:53:38,049 --> 02:53:44,319
mean my work on shader weighted skin

3105
02:53:42,879 --> 02:53:46,629
mastery animation stuff first of all

3106
02:53:44,319 --> 02:53:49,539
started before shaders could produce

3107
02:53:46,629 --> 02:53:55,500
skin mesh animation it started when the

3108
02:53:49,540 --> 02:53:58,870
CPU had to do the skin deformation and

3109
02:53:55,500 --> 02:54:01,450
yeah it was very poorly understood at

3110
02:53:58,870 --> 02:54:02,740
the time it's true most the people who

3111
02:54:01,450 --> 02:54:06,760
were doing anything like that weren't

3112
02:54:02,739 --> 02:54:08,829
doing it real-time and it was a few

3113
02:54:06,760 --> 02:54:11,440
people were doing it there were a couple

3114
02:54:08,829 --> 02:54:15,780
a couple different places doing it we

3115
02:54:11,440 --> 02:54:23,790
were one of them valve was one of them

3116
02:54:15,780 --> 02:54:23,790
and what was the other name of

3117
02:54:32,290 --> 02:54:36,590
there was another one and then there

3118
02:54:34,190 --> 02:54:39,649
were some weird techniques like there

3119
02:54:36,590 --> 02:54:42,920
was a really strange one that was this

3120
02:54:39,649 --> 02:54:46,369
sort of weird hybrid like render

3121
02:54:42,920 --> 02:54:52,700
software rendered version by the people

3122
02:54:46,370 --> 02:54:56,570
who made if I sacked Sachs Pearson was

3123
02:54:52,700 --> 02:54:57,920
the guy who did it it was this weird

3124
02:54:56,569 --> 02:54:59,869
game where you played like this little

3125
02:54:57,920 --> 02:55:02,989
baby who ran around and like possessed

3126
02:54:59,870 --> 02:55:05,561
people or something I can't remember the

3127
02:55:02,989 --> 02:55:05,560
name of the game

3128
02:55:10,360 --> 02:55:17,560
I can't remember the name of the game

3129
02:55:13,950 --> 02:55:19,270
but yeah I mean essentially what we were

3130
02:55:17,559 --> 02:55:20,859
doing is just working out how we would

3131
02:55:19,270 --> 02:55:23,260
do these things in real time the the

3132
02:55:20,860 --> 02:55:25,870
cinema world like Pixar and a couple

3133
02:55:23,260 --> 02:55:27,880
other places that did this sort of thing

3134
02:55:25,870 --> 02:55:30,010
did it slightly differently usually than

3135
02:55:27,879 --> 02:55:31,689
we did because they had a lot more

3136
02:55:30,010 --> 02:55:33,700
controls they were layering on top of

3137
02:55:31,690 --> 02:55:35,350
each other so they didn't really think

3138
02:55:33,700 --> 02:55:38,409
of skin meshes quite the same way that

3139
02:55:35,350 --> 02:55:40,659
we do whereas now games in film pretty

3140
02:55:38,409 --> 02:55:43,989
much used the same more or less way of

3141
02:55:40,659 --> 02:55:49,829
looking at things usually then it was a

3142
02:55:43,989 --> 02:55:49,829
little bit different but no I you know I

3143
02:55:50,069 --> 02:55:54,309
don't really think there's much to say I

3144
02:55:52,780 --> 02:55:55,900
mean one of the main things that I

3145
02:55:54,309 --> 02:55:57,519
contributed if to the scent that I

3146
02:55:55,899 --> 02:55:58,750
contributed original research in this

3147
02:55:57,520 --> 02:56:01,030
area as opposed to just like

3148
02:55:58,750 --> 02:56:02,200
implementations people were using would

3149
02:56:01,030 --> 02:56:04,300
have just been the fact that you can

3150
02:56:02,200 --> 02:56:07,240
linearly blend quaternions that was a

3151
02:56:04,299 --> 02:56:09,729
big change that's not really necessarily

3152
02:56:07,239 --> 02:56:12,879
specific to skin to mesh animation it's

3153
02:56:09,729 --> 02:56:15,699
just animation more broadly but nobody

3154
02:56:12,879 --> 02:56:17,349
had analyzed that before I did and then

3155
02:56:15,700 --> 02:56:20,070
once I did then now everyone does that

3156
02:56:17,350 --> 02:56:20,069
far as I know

3157
02:56:36,159 --> 02:56:41,689
yet toxin 16 so what I would say is like

3158
02:56:39,318 --> 02:56:43,760
I would be totally fine implementing

3159
02:56:41,689 --> 02:56:45,260
other stuff too like I just wanted to

3160
02:56:43,760 --> 02:56:47,420
implement a couple lighting functions in

3161
02:56:45,260 --> 02:56:48,949
here we could totally implement a GD X

3162
02:56:47,420 --> 02:56:53,478
function the question is what we need

3163
02:56:48,949 --> 02:56:54,770
something to load right and we now have

3164
02:56:53,478 --> 02:56:56,000
to load it like we could just have

3165
02:56:54,770 --> 02:56:57,710
measured parents we build into the a

3166
02:56:56,000 --> 02:56:59,478
person we just need some date a date of

3167
02:56:57,709 --> 02:57:01,549
some materials so we can like load up

3168
02:56:59,478 --> 02:57:04,488
velvet and see that it looks sort of

3169
02:57:01,549 --> 02:57:07,549
like velvet least as just a poor man's

3170
02:57:04,488 --> 02:57:09,109
test like I just need something so I can

3171
02:57:07,549 --> 02:57:09,648
load up something and see if it looks at

3172
02:57:09,109 --> 02:57:17,809
all right

3173
02:57:09,648 --> 02:57:21,549
you know Messiah yes yes Messiah correct

3174
02:57:17,809 --> 02:57:21,549
that's the game Thank You Ryan

3175
02:57:22,719 --> 02:57:27,129
they were doing something totally

3176
02:57:24,859 --> 02:57:27,130
different

3177
02:57:35,181 --> 02:57:37,989
yeah yeah

3178
02:57:47,351 --> 02:57:50,681
so it's a little hard to see I think

3179
02:57:49,090 --> 02:57:52,931
also because I'm pretty sure this stuff

3180
02:57:50,681 --> 02:57:54,940
was software rendered so the character

3181
02:57:52,931 --> 02:58:00,250
had to be fairly small on the screen

3182
02:57:54,940 --> 02:58:02,530
right but you can kind of see like it's

3183
02:58:00,250 --> 02:58:04,720
a really weird like rendering idea but

3184
02:58:02,530 --> 02:58:07,540
it was it was allowed them to get much

3185
02:58:04,720 --> 02:58:09,220
higher polygon count characters because

3186
02:58:07,540 --> 02:58:12,721
it's sort it's almost like a voxel II

3187
02:58:09,220 --> 02:58:15,129
kind of render if I remember correctly I

3188
02:58:12,720 --> 02:58:28,989
think it was software rendered I don't

3189
02:58:15,129 --> 02:58:31,589
really know but anyway all right I'm go

3190
02:58:28,989 --> 02:58:31,590
ahead and wrap it up

3191
02:58:37,818 --> 02:58:45,318
close this down close this down thank

3192
02:58:43,370 --> 02:58:46,310
you everyone for joining me for what

3193
02:58:45,318 --> 02:58:48,109
would have been another episode of

3194
02:58:46,309 --> 02:58:51,528
handmade hero if Linux hadn't ruined

3195
02:58:48,109 --> 02:58:53,239
everything as it always does I will be

3196
02:58:51,529 --> 02:58:55,550
back here tomorrow when since hopefully

3197
02:58:53,239 --> 02:58:57,739
the sound is sort of more or less maybe

3198
02:58:55,549 --> 02:58:59,179
kind of working slightly I'll go listen

3199
02:58:57,739 --> 02:59:05,299
to the recordings to see if I think it's

3200
02:58:59,180 --> 02:59:06,710
okay but basically yeah I'll be back

3201
02:59:05,299 --> 02:59:09,250
here tomorrow to try and do some actual

3202
02:59:06,709 --> 02:59:12,079
programming if Linux is okay with that

3203
02:59:09,250 --> 02:59:14,270
and if it's not we will just throw the

3204
02:59:12,079 --> 02:59:15,950
machine out the window and maybe

3205
02:59:14,270 --> 02:59:19,370
hopefully have a camera down at the

3206
02:59:15,950 --> 02:59:21,920
bottom we can get a good slow-motion

3207
02:59:19,370 --> 02:59:25,189
video of a computer breaking apart into

3208
02:59:21,920 --> 02:59:27,829
pieces as usual if you do want to follow

3209
02:59:25,189 --> 02:59:29,750
along the series at home you always

3210
02:59:27,829 --> 02:59:32,029
upload the code every night so if you

3211
02:59:29,750 --> 02:59:36,020
preorder the Hammad hero game on our

3212
02:59:32,029 --> 02:59:38,180
website you can download the code and

3213
02:59:36,020 --> 02:59:39,950
follow along at home with what I'm doing

3214
02:59:38,180 --> 02:59:42,318
and I do include the handmade Rey code

3215
02:59:39,950 --> 02:59:45,189
in there in case you want to try playing

3216
02:59:42,318 --> 02:59:47,689
around with that yourself at some point

3217
02:59:45,189 --> 02:59:48,710
I will be back here tomorrow to try and

3218
02:59:47,689 --> 02:59:50,090
do some programming hopefully see you

3219
02:59:48,709 --> 02:59:52,099
back here tomorrow and hopefully it'll

3220
02:59:50,090 --> 02:59:54,139
go smoother than it did today until then

3221
02:59:52,100 --> 02:59:55,130
have fun program everyone and I'll see

3222
02:59:54,139 --> 02:59:57,309
you all on the Internet take it easy

3223
02:59:55,129 --> 02:59:57,309
everybody

