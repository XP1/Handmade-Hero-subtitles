1
00:00:02,720 --> 00:00:07,048
hello everyone and welcome to handmade

2
00:00:05,969 --> 00:00:09,150
here are the show we could a

3
00:00:07,049 --> 00:00:12,509
complete-game live on stream and I

4
00:00:09,150 --> 00:00:14,638
wanted to I would I guess clarify the

5
00:00:12,509 --> 00:00:16,048
wrong word but rather I wanted to fill

6
00:00:14,638 --> 00:00:17,640
in something that I failed to mention

7
00:00:16,048 --> 00:00:19,829
when we were talking about on this the

8
00:00:17,640 --> 00:00:21,810
sparse energy system I like made the

9
00:00:19,829 --> 00:00:26,729
whole analogy but I never came out and

10
00:00:21,809 --> 00:00:29,159
said it and Chris Hecker emailed me this

11
00:00:26,730 --> 00:00:31,618
morning I think mentioning that he had

12
00:00:29,160 --> 00:00:33,420
watched it and I never said the thing

13
00:00:31,618 --> 00:00:34,859
that I should have said about it and I

14
00:00:33,420 --> 00:00:38,640
went back and looked and he's totally

15
00:00:34,859 --> 00:00:39,988
right I never said it I I basically like

16
00:00:38,640 --> 00:00:42,989
I drew a diagram

17
00:00:39,988 --> 00:00:44,849
I made an analogy and then never

18
00:00:42,988 --> 00:00:47,820
actually said what the analogy was

19
00:00:44,850 --> 00:00:50,939
actually about which is not very useful

20
00:00:47,820 --> 00:00:53,159
to anybody so let me go ahead and finish

21
00:00:50,939 --> 00:00:54,780
this off here if you remember when we

22
00:00:53,159 --> 00:00:57,119
were talking about entity systems I

23
00:00:54,780 --> 00:00:59,010
mentioned this one here called act react

24
00:00:57,119 --> 00:01:00,390
by Looking Glass which is the first time

25
00:00:59,009 --> 00:01:03,659
I'd ever heard of anyone doing a system

26
00:01:00,390 --> 00:01:05,359
of this form and what I was explaining

27
00:01:03,659 --> 00:01:07,859
about that was that it was equivalent

28
00:01:05,359 --> 00:01:10,379
we're not really equivalent but it was

29
00:01:07,859 --> 00:01:11,640
analogous to sort of the way we had been

30
00:01:10,379 --> 00:01:13,170
thinking about Cindy before where

31
00:01:11,640 --> 00:01:14,549
there's an array of structures method of

32
00:01:13,170 --> 00:01:16,049
thinking about entities and there's a

33
00:01:14,549 --> 00:01:19,259
structure of arrays method of thinking

34
00:01:16,049 --> 00:01:20,700
about entities and previously mostly

35
00:01:19,259 --> 00:01:22,650
people were thinking about array of

36
00:01:20,700 --> 00:01:24,478
structure style ways of working

37
00:01:22,650 --> 00:01:27,359
identities and they had sort of changed

38
00:01:24,478 --> 00:01:28,950
it into SOA by doing this and what I

39
00:01:27,359 --> 00:01:30,959
never actually mentioned is why you

40
00:01:28,950 --> 00:01:32,460
would want to do that I pointed out the

41
00:01:30,959 --> 00:01:34,078
drawback to it one of the things that I

42
00:01:32,459 --> 00:01:36,780
don't like about it which is that

43
00:01:34,078 --> 00:01:39,359
anytime I want to do something that that

44
00:01:36,780 --> 00:01:41,040
talks about multiple aspects of an

45
00:01:39,359 --> 00:01:42,328
entity I have to go grab that

46
00:01:41,040 --> 00:01:44,189
information from lots of different

47
00:01:42,328 --> 00:01:47,449
tables right and you can see why that

48
00:01:44,188 --> 00:01:50,609
might be a concern but that is not

49
00:01:47,450 --> 00:01:51,868
actually the reason why you do it

50
00:01:50,609 --> 00:01:53,459
obviously that's that's strictly a

51
00:01:51,868 --> 00:01:55,530
downside so if that was the only thing

52
00:01:53,459 --> 00:01:57,839
you wouldn't ever do this the reason you

53
00:01:55,530 --> 00:02:00,750
do this is because you can get a win

54
00:01:57,840 --> 00:02:03,180
from grouping all of the properties

55
00:02:00,750 --> 00:02:04,828
together just the same as you do when

56
00:02:03,180 --> 00:02:06,600
you're talking about

57
00:02:04,828 --> 00:02:09,389
you know structure of arrays rest of

58
00:02:06,599 --> 00:02:11,430
array of structures right so the form

59
00:02:09,389 --> 00:02:12,719
that this takes is let's say using the

60
00:02:11,430 --> 00:02:13,560
example that was here where I've got

61
00:02:12,719 --> 00:02:15,930
burnable

62
00:02:13,560 --> 00:02:17,459
if I've just got this the burning State

63
00:02:15,930 --> 00:02:20,069
you know what the what the amount of

64
00:02:17,459 --> 00:02:23,099
fire is on the sky if I've got that set

65
00:02:20,068 --> 00:02:25,739
on each individual entity well now if my

66
00:02:23,099 --> 00:02:27,780
fire system has a propagation pattern to

67
00:02:25,740 --> 00:02:29,790
it like when I have fire and I propagate

68
00:02:27,780 --> 00:02:31,860
those two things that are nearby me or

69
00:02:29,789 --> 00:02:34,530
something like this that may be a very

70
00:02:31,860 --> 00:02:36,630
specific simulation algorithm that wants

71
00:02:34,530 --> 00:02:38,430
to store like things in a finite mesh

72
00:02:36,629 --> 00:02:40,049
grid thing to like speed up how it's

73
00:02:38,430 --> 00:02:42,420
computed and maybe it's got all this

74
00:02:40,050 --> 00:02:45,239
stuff what you might want to do is have

75
00:02:42,419 --> 00:02:47,219
that be its own separate sim where

76
00:02:45,239 --> 00:02:51,659
everything is organized for optimally

77
00:02:47,219 --> 00:02:54,989
processing fight right and that way you

78
00:02:51,659 --> 00:02:57,000
can sort of optimize that path and make

79
00:02:54,989 --> 00:02:58,920
it very fast without having to have this

80
00:02:57,000 --> 00:03:02,759
whole gather step where you bring in all

81
00:02:58,919 --> 00:03:05,518
of those things right and so what you

82
00:03:02,759 --> 00:03:07,289
kind of get here is this idea of well

83
00:03:05,519 --> 00:03:08,969
sometimes maybe it's faster than

84
00:03:07,289 --> 00:03:10,620
everything's with the entity sometimes

85
00:03:08,969 --> 00:03:14,609
maybe it's faster that everything's with

86
00:03:10,620 --> 00:03:17,159
the property right and if that's not I

87
00:03:14,610 --> 00:03:18,930
don't really think that's a super useful

88
00:03:17,159 --> 00:03:22,729
way to break things down to be honest

89
00:03:18,930 --> 00:03:27,239
but then again you know I'm not a game

90
00:03:22,729 --> 00:03:28,979
play coder kind of person so you know my

91
00:03:27,239 --> 00:03:30,030
opinion on it is not super relevant I

92
00:03:28,979 --> 00:03:32,849
don't think you know there might be

93
00:03:30,030 --> 00:03:34,590
really good reasons to do it but it's

94
00:03:32,849 --> 00:03:35,939
not probably how I would approach the

95
00:03:34,590 --> 00:03:38,969
problem because I don't see that as

96
00:03:35,939 --> 00:03:41,430
being the most common case for how you

97
00:03:38,969 --> 00:03:43,199
would want to optimize things because it

98
00:03:41,430 --> 00:03:46,349
just seems like it's not gonna come up

99
00:03:43,199 --> 00:03:47,969
that often but that may not be true at

100
00:03:46,349 --> 00:03:49,829
the very least what I can say about it

101
00:03:47,969 --> 00:03:51,900
is that if you find yourself in that

102
00:03:49,829 --> 00:03:53,280
scenario where you've got a certain set

103
00:03:51,900 --> 00:03:56,760
of properties that want very specific

104
00:03:53,280 --> 00:03:58,319
optimized patterns to them then you can

105
00:03:56,759 --> 00:04:01,469
kind of clearly open you can clearly see

106
00:03:58,319 --> 00:04:03,060
why this might be a useful way of doing

107
00:04:01,469 --> 00:04:04,560
that and you don't have to do it for

108
00:04:03,060 --> 00:04:06,359
everything you could still have some

109
00:04:04,560 --> 00:04:08,789
things that are AOS right you can still

110
00:04:06,359 --> 00:04:10,739
have entity struts or classes or

111
00:04:08,789 --> 00:04:12,269
whatever else you want and then you can

112
00:04:10,739 --> 00:04:15,150
just have this side thing that's like

113
00:04:12,269 --> 00:04:17,280
okay because fire or water or something

114
00:04:15,150 --> 00:04:18,780
is this special property that's much

115
00:04:17,279 --> 00:04:20,129
more difficult to simulate and we need

116
00:04:18,779 --> 00:04:22,018
this sort of separate system for it we

117
00:04:20,129 --> 00:04:23,908
keep that out in its own thing that's

118
00:04:22,019 --> 00:04:25,680
optimized very specifically and we do

119
00:04:23,908 --> 00:04:27,490
lookups into it on the occasions when

120
00:04:25,680 --> 00:04:29,168
the entities themselves need to like

121
00:04:27,490 --> 00:04:31,478
a particular thing out of it but

122
00:04:29,168 --> 00:04:33,430
otherwise it's always kind of its own

123
00:04:31,478 --> 00:04:35,469
thing you know you can see why having

124
00:04:33,430 --> 00:04:38,560
that architectural option might be a

125
00:04:35,470 --> 00:04:40,870
valid way to you know might be a viable

126
00:04:38,560 --> 00:04:42,699
thing for you to want to do so hopefully

127
00:04:40,870 --> 00:04:45,759
that gives a little bit better because I

128
00:04:42,699 --> 00:04:47,288
basically skipped that part and yeah I

129
00:04:45,759 --> 00:04:49,780
drew this out but then I never really

130
00:04:47,288 --> 00:04:54,038
said what it was so hopefully that's a

131
00:04:49,779 --> 00:04:55,929
little more clear all right that was all

132
00:04:54,038 --> 00:04:58,000
I want to mention we are right in the

133
00:04:55,930 --> 00:04:59,650
middle of changing the entity system

134
00:04:58,000 --> 00:05:01,329
over so there's not much to talk about

135
00:04:59,649 --> 00:05:03,329
right now we're just finishing what we

136
00:05:01,329 --> 00:05:07,359
said we were going to do yesterday and

137
00:05:03,329 --> 00:05:08,918
did a lot of but not all of right so we

138
00:05:07,360 --> 00:05:11,020
did you know as much as we could in an

139
00:05:08,918 --> 00:05:13,180
hour but we still have more to go to

140
00:05:11,019 --> 00:05:14,649
finish converting everything over and so

141
00:05:13,180 --> 00:05:16,990
if you ran the game right now you would

142
00:05:14,649 --> 00:05:21,459
be in a very sorry state because it

143
00:05:16,990 --> 00:05:22,840
doesn't actually have a way to well

144
00:05:21,459 --> 00:05:24,728
actually I guess I don't know if that's

145
00:05:22,839 --> 00:05:26,019
true or not I don't remember exactly

146
00:05:24,728 --> 00:05:27,879
where we got to because we did actually

147
00:05:26,019 --> 00:05:29,379
move her thing over to us I think what

148
00:05:27,879 --> 00:05:33,069
would probably happen right now

149
00:05:29,379 --> 00:05:35,620
is that when you when you call an entity

150
00:05:33,069 --> 00:05:38,408
it doesn't ever actually go pack that

151
00:05:35,620 --> 00:05:39,970
entity into an a chunk anywhere so

152
00:05:38,408 --> 00:05:40,959
basically what happens is we're building

153
00:05:39,970 --> 00:05:42,430
these entities and then just they just

154
00:05:40,959 --> 00:05:45,218
would get thrown away they wouldn't

155
00:05:42,430 --> 00:05:47,228
actually happen so what we need to do is

156
00:05:45,218 --> 00:05:49,269
actually go finish all that work we need

157
00:05:47,228 --> 00:05:52,959
to do that in entity and we also need to

158
00:05:49,269 --> 00:05:54,728
do that in the the code for sim region

159
00:05:52,959 --> 00:05:57,069
so those two code paths want to kind of

160
00:05:54,728 --> 00:05:59,468
coalesce and that's exactly what I think

161
00:05:57,069 --> 00:06:01,000
we will be doing today in order to get

162
00:05:59,468 --> 00:06:05,800
things back to working State with the

163
00:06:01,000 --> 00:06:07,569
new design today is day 279 so if you're

164
00:06:05,800 --> 00:06:13,139
following along the source code go ahead

165
00:06:07,569 --> 00:06:13,139
and load 278 and here we go

166
00:06:16,870 --> 00:06:21,769
alright so the part that I was talking

167
00:06:19,970 --> 00:06:23,210
about just now when I said you know it

168
00:06:21,769 --> 00:06:24,529
would it would get to the point where it

169
00:06:23,209 --> 00:06:26,180
created the enemy and throw it away

170
00:06:24,529 --> 00:06:27,769
that's this code right here and you can

171
00:06:26,180 --> 00:06:29,540
see that I've got a not implementing it

172
00:06:27,769 --> 00:06:31,099
so what's going to happen is we're going

173
00:06:29,540 --> 00:06:32,600
to do this begin low entity the entity

174
00:06:31,100 --> 00:06:33,950
will get built out and this is just that

175
00:06:32,600 --> 00:06:36,020
creation time it's like world creation

176
00:06:33,949 --> 00:06:37,490
time we build a little entity we set all

177
00:06:36,019 --> 00:06:39,259
the parameters for it but then we

178
00:06:37,490 --> 00:06:40,759
immediately just throw it away right and

179
00:06:39,259 --> 00:06:42,050
what do I mean by throw it away well

180
00:06:40,759 --> 00:06:43,670
what I mean by throw it away is we're

181
00:06:42,050 --> 00:06:46,009
constructing it into a temporary buffer

182
00:06:43,670 --> 00:06:47,480
here this right here we're constructing

183
00:06:46,009 --> 00:06:48,620
into that buffer and what we need to do

184
00:06:47,480 --> 00:06:51,410
if we actually wanna save it is now is

185
00:06:48,620 --> 00:06:52,850
to move it over into permanent storage

186
00:06:51,410 --> 00:06:56,570
somewhere into the world where it's

187
00:06:52,850 --> 00:06:59,510
getting tracked ok and by the exact same

188
00:06:56,569 --> 00:07:01,550
token if we go back to our handmade sim

189
00:06:59,509 --> 00:07:04,909
region that same process we have not

190
00:07:01,550 --> 00:07:06,620
implemented over here either right so if

191
00:07:04,910 --> 00:07:09,710
we come back over to this piece of code

192
00:07:06,620 --> 00:07:15,050
where we've got to not move entity where

193
00:07:09,709 --> 00:07:16,729
is n sim and and CIN here it is when we

194
00:07:15,050 --> 00:07:19,699
go back over here I've seared it out but

195
00:07:16,730 --> 00:07:21,800
this is the exact same code this enzyme

196
00:07:19,699 --> 00:07:23,509
has to track what's happening here as

197
00:07:21,800 --> 00:07:24,980
well now what I think I'm gonna do

198
00:07:23,509 --> 00:07:27,620
because it's a fresh day and a fresh

199
00:07:24,980 --> 00:07:30,290
start and you know it's like the coding

200
00:07:27,620 --> 00:07:32,600
has been rolling all day and is ready to

201
00:07:30,290 --> 00:07:34,460
keep on rolling I'm just gonna say let's

202
00:07:32,600 --> 00:07:36,620
go for gust oh let's just keep let's

203
00:07:34,459 --> 00:07:38,870
just forget it let's not even do baby

204
00:07:36,620 --> 00:07:40,310
steps here let's just get the sim stuff

205
00:07:38,870 --> 00:07:42,649
working the way that it should actually

206
00:07:40,310 --> 00:07:44,420
work and so what's gonna happen here if

207
00:07:42,649 --> 00:07:46,849
you look at the way this code is

208
00:07:44,420 --> 00:07:48,379
structured inside the begins sim when

209
00:07:46,850 --> 00:07:49,610
I'm pulling this data out of the chunk

210
00:07:48,379 --> 00:07:52,819
so you can kind of see how I'm doing

211
00:07:49,610 --> 00:07:55,430
that here right I loop over the chunks

212
00:07:52,819 --> 00:07:58,069
that are like whatever the sort of block

213
00:07:55,430 --> 00:07:59,959
of chunks that would be related to the

214
00:07:58,069 --> 00:08:01,879
place that I want to sim and I'm calling

215
00:07:59,959 --> 00:08:04,009
get world chunk on them and then I'm

216
00:08:01,879 --> 00:08:07,219
loading in all of the entities that that

217
00:08:04,009 --> 00:08:10,159
pertains to right now what I want to do

218
00:08:07,220 --> 00:08:12,590
here is again this sim is meant to be an

219
00:08:10,160 --> 00:08:14,450
a stream in stream out system so the

220
00:08:12,589 --> 00:08:16,969
goal here is to pull everything out of

221
00:08:14,449 --> 00:08:18,709
the world and I'm not actually even

222
00:08:16,970 --> 00:08:20,690
going to leave it in there meaning it's

223
00:08:18,709 --> 00:08:23,120
not like I leave the backing store in

224
00:08:20,689 --> 00:08:25,219
place I'm gonna obliterate the Blackie's

225
00:08:23,120 --> 00:08:27,069
back in store so I like pull that stuff

226
00:08:25,220 --> 00:08:30,430
out and it's gone

227
00:08:27,069 --> 00:08:32,649
and then I sin it right and then I put

228
00:08:30,430 --> 00:08:34,960
it back in that's the current way that

229
00:08:32,649 --> 00:08:38,529
I'm conceptualizing this working again I

230
00:08:34,960 --> 00:08:41,379
said it's a crazy system I don't pretend

231
00:08:38,529 --> 00:08:44,259
that it's not on the on the fringe it is

232
00:08:41,379 --> 00:08:46,629
but that's the way we roll here at

233
00:08:44,259 --> 00:08:50,470
handmade hero so just you know you best

234
00:08:46,629 --> 00:08:53,379
not step to it Pro or something

235
00:08:50,470 --> 00:08:55,300
so anyway point being in here we have

236
00:08:53,379 --> 00:08:56,950
the handmade world code and we sort of

237
00:08:55,299 --> 00:08:58,509
made a slight concession to this where

238
00:08:56,950 --> 00:09:01,000
we change the world chunk to a world

239
00:08:58,509 --> 00:09:02,950
chunk star here in the chunk cash and

240
00:09:01,000 --> 00:09:04,840
then we basically put in these things

241
00:09:02,950 --> 00:09:10,420
where we had like first block and

242
00:09:04,840 --> 00:09:14,530
whatever and it occurs to me that this

243
00:09:10,419 --> 00:09:16,750
may actually be again one of those

244
00:09:14,529 --> 00:09:19,750
things where it's it's I'm not certain

245
00:09:16,750 --> 00:09:23,019
that we really I'm not certain we nailed

246
00:09:19,750 --> 00:09:25,539
it I guess is my is my concern what I

247
00:09:23,019 --> 00:09:27,370
think might be more appropriate is we

248
00:09:25,539 --> 00:09:30,339
might want to change where the pointer

249
00:09:27,370 --> 00:09:32,049
is I think that may be a better place

250
00:09:30,340 --> 00:09:35,530
for the pointer if that makes sense

251
00:09:32,049 --> 00:09:37,240
and this I'm sorry that may be a bad

252
00:09:35,529 --> 00:09:38,919
place is where and this may be a better

253
00:09:37,240 --> 00:09:42,070
place to the pointer and the reason that

254
00:09:38,919 --> 00:09:44,229
I say that is because uh well actually

255
00:09:42,070 --> 00:09:46,030
you know let me before I even say that

256
00:09:44,230 --> 00:09:47,649
because that may not be true let me tell

257
00:09:46,029 --> 00:09:49,179
you what the problem is instead of

258
00:09:47,649 --> 00:09:51,909
jumping to a solution which may not even

259
00:09:49,179 --> 00:09:54,579
work the problem is we're gonna go in

260
00:09:51,909 --> 00:09:56,110
here to the chunk hash and the way this

261
00:09:54,580 --> 00:09:59,139
is going to work is we're gonna pull out

262
00:09:56,110 --> 00:10:00,820
all of the world entity blocks and

263
00:09:59,139 --> 00:10:02,949
they're gonna disappear right so they're

264
00:10:00,820 --> 00:10:06,040
just gone and then we're gonna put them

265
00:10:02,950 --> 00:10:07,810
back in later so what we kind of want to

266
00:10:06,039 --> 00:10:09,639
do is pull things out of the hash

267
00:10:07,809 --> 00:10:13,229
entirely to a certain extent I suppose

268
00:10:09,639 --> 00:10:17,710
and then put them back in entirely right

269
00:10:13,230 --> 00:10:19,450
so I don't know maybe this is still fine

270
00:10:17,710 --> 00:10:21,190
because I guess we want to pull things

271
00:10:19,450 --> 00:10:22,840
out of the hash entirely and the hash

272
00:10:21,190 --> 00:10:24,100
does have to have this and then it's got

273
00:10:22,840 --> 00:10:28,030
to have an exporter so I don't know

274
00:10:24,100 --> 00:10:30,340
maybe that makes sense I'm not sure so

275
00:10:28,029 --> 00:10:33,069
let's just pretend that it does for a

276
00:10:30,340 --> 00:10:35,139
moment and we'll go from there okay

277
00:10:33,070 --> 00:10:36,520
so what if I was gonna actually do it

278
00:10:35,139 --> 00:10:37,720
and leave it instead of me saying that

279
00:10:36,519 --> 00:10:38,860
was gonna be better when I don't really

280
00:10:37,720 --> 00:10:40,399
know it would be let's just do it the

281
00:10:38,860 --> 00:10:42,440
way that it was and leave it that way

282
00:10:40,399 --> 00:10:44,059
okay so what I want to do here is I want

283
00:10:42,440 --> 00:10:46,670
to excise the world chunk that I'm

284
00:10:44,059 --> 00:10:48,799
talking about so instead of me looking

285
00:10:46,669 --> 00:10:51,529
through these and saying get the world

286
00:10:48,799 --> 00:10:55,939
chunk like I want you to give me back

287
00:10:51,529 --> 00:10:57,169
the world chunk and and like what's the

288
00:10:55,940 --> 00:11:01,370
right I'm looking for like I want you to

289
00:10:57,169 --> 00:11:02,659
give me back the world chunk and keep it

290
00:11:01,370 --> 00:11:04,399
where it is and I'm just iterating over

291
00:11:02,659 --> 00:11:06,829
it I want to actually pull it out so

292
00:11:04,399 --> 00:11:08,149
it's gone so it's not there anymore and

293
00:11:06,830 --> 00:11:09,830
now that I'm thinking about this too as

294
00:11:08,149 --> 00:11:11,179
I'm saying it again I'm leaning more

295
00:11:09,830 --> 00:11:14,330
towards a solution that I'm talking

296
00:11:11,179 --> 00:11:17,209
about before so here is another sort of

297
00:11:14,330 --> 00:11:18,950
example of where this is kind you know

298
00:11:17,210 --> 00:11:22,610
where there's another thing that we

299
00:11:18,950 --> 00:11:25,670
might want to consider right and that is

300
00:11:22,610 --> 00:11:30,639
if I want to leave the world chunk in

301
00:11:25,669 --> 00:11:33,559
place as a marker that I then go and

302
00:11:30,639 --> 00:11:35,929
vaporize only later and let me tell you

303
00:11:33,559 --> 00:11:38,269
a little bit about why I might want to

304
00:11:35,929 --> 00:11:39,889
do this now I don't suspect that I do

305
00:11:38,269 --> 00:11:42,110
but I'm just gonna I'm just gonna tell

306
00:11:39,889 --> 00:11:45,049
you what is sort of in the back of my

307
00:11:42,110 --> 00:11:52,180
head with respect to that here on day

308
00:11:45,049 --> 00:11:52,179
279 right oops

309
00:11:53,690 --> 00:11:59,100
okay so what I'm thinking is I was sort

310
00:11:57,809 --> 00:12:07,049
of thinking about the concept of

311
00:11:59,100 --> 00:12:08,700
transactional memory here and what

312
00:12:07,049 --> 00:12:11,129
transactional memory is is it's a very

313
00:12:08,700 --> 00:12:13,860
very simple concept that is dressed up

314
00:12:11,129 --> 00:12:16,350
by a very fancy term and all it really

315
00:12:13,860 --> 00:12:19,110
means is if I want to do something

316
00:12:16,350 --> 00:12:20,430
multi-threaded and I have a chunk of

317
00:12:19,110 --> 00:12:23,820
memory that I know that I'm going to

318
00:12:20,429 --> 00:12:25,109
operate on right so I've kind of got

319
00:12:23,820 --> 00:12:27,570
this thing where you know I don't know

320
00:12:25,110 --> 00:12:28,830
what this is but this is like my target

321
00:12:27,570 --> 00:12:32,790
this is the thing that I'm actually

322
00:12:28,830 --> 00:12:34,230
operating on okay then the standard

323
00:12:32,789 --> 00:12:36,899
multi-threading problem that I run into

324
00:12:34,230 --> 00:12:38,279
you know if we didn't ever have to worry

325
00:12:36,899 --> 00:12:39,449
about threads colliding with each other

326
00:12:38,279 --> 00:12:40,829
then we just run all the threads at the

327
00:12:39,450 --> 00:12:42,090
same time and we don't care nothing

328
00:12:40,830 --> 00:12:45,270
doesn't matter right you just everything

329
00:12:42,090 --> 00:12:46,680
works it's great but we obviously when

330
00:12:45,269 --> 00:12:48,090
we talk about multi-threading we always

331
00:12:46,679 --> 00:12:51,049
talk about these problems that we get

332
00:12:48,090 --> 00:12:53,160
we're you know we've got thread a here

333
00:12:51,049 --> 00:12:54,959
that's coming in to do something and

334
00:12:53,159 --> 00:12:57,929
we've got thread B here that's coming in

335
00:12:54,960 --> 00:13:00,030
to do something as well right and so

336
00:12:57,929 --> 00:13:02,549
what we end up with is a situation where

337
00:13:00,029 --> 00:13:05,039
we do something like oh okay

338
00:13:02,549 --> 00:13:07,250
you know I'm gonna come in here and I'm

339
00:13:05,039 --> 00:13:09,329
gonna do something to this target right

340
00:13:07,250 --> 00:13:12,000
my thread is gonna do something to this

341
00:13:09,330 --> 00:13:13,440
target and then later thread B is gonna

342
00:13:12,000 --> 00:13:14,700
come in here and and they're gonna try

343
00:13:13,440 --> 00:13:16,410
to sell you this target as well at a

344
00:13:14,700 --> 00:13:21,420
separate time if this is T right here

345
00:13:16,409 --> 00:13:24,750
right and a is not gonna finish until

346
00:13:21,419 --> 00:13:28,139
after B starts right so if we just allow

347
00:13:24,750 --> 00:13:29,879
these two threads to just run then what

348
00:13:28,139 --> 00:13:32,819
we would get is some kind of probably

349
00:13:29,879 --> 00:13:35,220
corrupted State because B is reading a

350
00:13:32,820 --> 00:13:37,920
partial update of a like whatever got

351
00:13:35,220 --> 00:13:40,170
finished up to here making some changes

352
00:13:37,919 --> 00:13:42,149
and then a is completing not knowing

353
00:13:40,169 --> 00:13:44,009
that B read that data and then B what

354
00:13:42,149 --> 00:13:46,110
it's actually writing stuff out is gonna

355
00:13:44,009 --> 00:13:48,480
write out using part of what a updated

356
00:13:46,110 --> 00:13:50,190
and right and you got this nasty kind of

357
00:13:48,480 --> 00:13:51,629
partial visibility it could be even

358
00:13:50,190 --> 00:13:53,700
worse if they're doing reads and writes

359
00:13:51,629 --> 00:13:55,439
at the same time B gets some of the A's

360
00:13:53,700 --> 00:14:00,150
data against some of these data you know

361
00:13:55,440 --> 00:14:02,160
it's just it's just bad right and so one

362
00:14:00,149 --> 00:14:04,079
thing that I was thinking about in terms

363
00:14:02,159 --> 00:14:06,299
of the streaming system was like well

364
00:14:04,080 --> 00:14:09,389
what we could do

365
00:14:06,299 --> 00:14:11,429
is have some sort of system where when

366
00:14:09,389 --> 00:14:14,490
you get something out of the world

367
00:14:11,429 --> 00:14:16,889
storage you actually just mark it as to

368
00:14:14,490 --> 00:14:18,810
whether or not you were going to edit it

369
00:14:16,889 --> 00:14:22,769
or not right and if you're not editing

370
00:14:18,809 --> 00:14:26,069
it you leave it in place as marked as

371
00:14:22,769 --> 00:14:28,350
something that you read from and you

372
00:14:26,070 --> 00:14:30,990
know that anyone who's coming in who

373
00:14:28,350 --> 00:14:34,139
just also wants to read from it doesn't

374
00:14:30,990 --> 00:14:35,399
collide right and so the reason I think

375
00:14:34,139 --> 00:14:38,250
about transactional memory is the way

376
00:14:35,399 --> 00:14:41,879
transactional memory works is all you do

377
00:14:38,250 --> 00:14:45,000
is you do the update right exactly as

378
00:14:41,879 --> 00:14:46,470
you would have on a peon whatever you

379
00:14:45,000 --> 00:14:48,000
basically do the thread as if you were

380
00:14:46,470 --> 00:14:50,610
going to do the thread normally and

381
00:14:48,000 --> 00:14:52,379
everyone just operates as if they can

382
00:14:50,610 --> 00:14:54,690
write as if there is nothing stopping

383
00:14:52,379 --> 00:14:56,879
them and then when they go to actually

384
00:14:54,690 --> 00:14:58,830
commit their changes all the changes are

385
00:14:56,879 --> 00:15:01,289
gonna make get buffered till the end and

386
00:14:58,830 --> 00:15:03,090
then get written out and what happens is

387
00:15:01,289 --> 00:15:05,129
it's only those rights that are checked

388
00:15:03,090 --> 00:15:06,600
and when that right is about to happen

389
00:15:05,129 --> 00:15:10,110
when that block writes about to happen

390
00:15:06,600 --> 00:15:12,540
it checks to see like some value in here

391
00:15:10,110 --> 00:15:14,850
right that you use as a key value that

392
00:15:12,539 --> 00:15:16,319
says you know it's basically just a you

393
00:15:14,850 --> 00:15:18,509
know an incrementing integer or whatever

394
00:15:16,320 --> 00:15:21,090
you want that basically says has anyone

395
00:15:18,509 --> 00:15:22,919
touched this since I read it so when a

396
00:15:21,090 --> 00:15:24,990
comes in here and grabs this value out

397
00:15:22,919 --> 00:15:28,079
you know and this value is set to 1 or

398
00:15:24,990 --> 00:15:29,730
something right becomes in here and it

399
00:15:28,080 --> 00:15:32,610
grabs this value it's still set to 1

400
00:15:29,730 --> 00:15:35,580
right a then commits its changes which

401
00:15:32,610 --> 00:15:37,740
sets this value to 2 B then goes and

402
00:15:35,580 --> 00:15:40,350
says oh I need to commit my changes what

403
00:15:37,740 --> 00:15:43,289
is the change value oh it's two i F

404
00:15:40,350 --> 00:15:46,370
stale data it just restarts itself right

405
00:15:43,289 --> 00:15:48,509
it just goes all right let me start over

406
00:15:46,370 --> 00:15:50,340
and so transactional memory is just

407
00:15:48,509 --> 00:15:52,250
something that allows everybody to run

408
00:15:50,340 --> 00:15:55,920
at the normal speed they're gonna run at

409
00:15:52,250 --> 00:15:57,210
and all they do is they just if they

410
00:15:55,919 --> 00:15:59,459
find that when they go to commit their

411
00:15:57,210 --> 00:16:02,460
changes somebody has come in and changed

412
00:15:59,460 --> 00:16:05,070
stuff before they were able to write out

413
00:16:02,460 --> 00:16:06,840
their changes they just restart and so I

414
00:16:05,070 --> 00:16:08,790
was thinking a little bit about that in

415
00:16:06,840 --> 00:16:10,889
terms of our system because if we want

416
00:16:08,789 --> 00:16:12,779
to have multiple threads running that

417
00:16:10,889 --> 00:16:15,929
all update different parts of the world

418
00:16:12,779 --> 00:16:17,339
at the same time I feel like probably

419
00:16:15,929 --> 00:16:18,849
what we're gonna do is try to make them

420
00:16:17,340 --> 00:16:21,038
not overlap but

421
00:16:18,850 --> 00:16:22,509
easier said than done sometimes so one

422
00:16:21,038 --> 00:16:25,989
thing that I was thinking about is well

423
00:16:22,509 --> 00:16:28,178
if we have a system you know and the

424
00:16:25,989 --> 00:16:30,069
system is is updating to people and like

425
00:16:28,178 --> 00:16:31,869
one of them's updating here and one of

426
00:16:30,068 --> 00:16:34,118
them's updating here so they both have

427
00:16:31,869 --> 00:16:39,459
like an apron that looks like this you

428
00:16:34,119 --> 00:16:41,889
know I was wondering about potentially

429
00:16:39,458 --> 00:16:45,399
supporting the case where even though a

430
00:16:41,889 --> 00:16:46,869
is only updating this region and B is

431
00:16:45,399 --> 00:16:49,749
only updating this region their each

432
00:16:46,869 --> 00:16:52,209
reading out of regions that are being

433
00:16:49,749 --> 00:16:54,609
updated by somebody else and if we

434
00:16:52,208 --> 00:16:57,099
wanted to support the case where where

435
00:16:54,609 --> 00:17:00,009
there's no locking we don't prevent this

436
00:16:57,100 --> 00:17:02,288
case we just let it happen right but

437
00:17:00,009 --> 00:17:04,389
what we do is when we go to commit the

438
00:17:02,288 --> 00:17:07,599
sim region changes out we check to see

439
00:17:04,388 --> 00:17:10,269
whether any of the chunks that we read

440
00:17:07,599 --> 00:17:13,269
have been updated since then and if they

441
00:17:10,269 --> 00:17:19,149
are we abort and restart the the sim

442
00:17:13,269 --> 00:17:22,298
right that if we did that would argue

443
00:17:19,148 --> 00:17:25,000
strongly for leaving the chunks in place

444
00:17:22,298 --> 00:17:27,298
right because if we don't leave the

445
00:17:25,000 --> 00:17:30,038
chunks in place we can never do this

446
00:17:27,298 --> 00:17:32,740
because when this went to update would

447
00:17:30,038 --> 00:17:34,839
find nothing was here there was actually

448
00:17:32,740 --> 00:17:37,359
it all the data is gone because be

449
00:17:34,839 --> 00:17:38,288
sucked it all in and and you know what

450
00:17:37,359 --> 00:17:42,459
you don't even know it's there

451
00:17:38,288 --> 00:17:45,278
so if we don't have a higher level

452
00:17:42,460 --> 00:17:47,350
scheme somewhere that thinks about who

453
00:17:45,278 --> 00:17:49,298
is updating what where and make sure

454
00:17:47,349 --> 00:17:51,269
that they don't overlap we would have

455
00:17:49,298 --> 00:17:55,179
this problem and I don't really know

456
00:17:51,269 --> 00:17:57,159
what our best approach is for solving

457
00:17:55,179 --> 00:17:59,048
that right so it's something to think

458
00:17:57,159 --> 00:18:00,700
about I suppose we could start with the

459
00:17:59,048 --> 00:18:06,099
simplest thing first and not really

460
00:18:00,700 --> 00:18:07,389
worry about this too much but I just

461
00:18:06,099 --> 00:18:08,528
wanted to kind of give you what was in

462
00:18:07,388 --> 00:18:11,619
the back of my head and why I'm not

463
00:18:08,528 --> 00:18:14,648
really sure exactly how I want this

464
00:18:11,619 --> 00:18:16,508
process to occur thankfully because it's

465
00:18:14,648 --> 00:18:18,518
a stream in stream out system it means

466
00:18:16,509 --> 00:18:20,679
that all of the entity code we write is

467
00:18:18,519 --> 00:18:22,120
isolated to the simulation part of

468
00:18:20,679 --> 00:18:23,620
things which I really like that's the

469
00:18:22,119 --> 00:18:26,168
part I think is cool about this system

470
00:18:23,619 --> 00:18:29,199
and so that means we can change the

471
00:18:26,169 --> 00:18:31,770
decompress compress step a lot without

472
00:18:29,200 --> 00:18:33,870
having to really change any code anymore

473
00:18:31,769 --> 00:18:35,490
like those two pieces are now completely

474
00:18:33,869 --> 00:18:38,869
separate from all the entity code and I

475
00:18:35,490 --> 00:18:38,870
love that I think that's really great

476
00:18:39,920 --> 00:18:45,870
but we still are gonna have to figure

477
00:18:42,599 --> 00:18:47,459
out how they work eventually so for

478
00:18:45,869 --> 00:18:49,379
right now I guess I won't think about it

479
00:18:47,460 --> 00:18:51,360
too much because like I said I'm not

480
00:18:49,380 --> 00:18:53,730
sure what to do and it's not something

481
00:18:51,359 --> 00:18:55,619
that is going to affect dramatically all

482
00:18:53,730 --> 00:18:57,660
of this other code we're gonna write so

483
00:18:55,619 --> 00:18:59,549
I think that's okay because this will be

484
00:18:57,660 --> 00:19:01,980
a fairly isolated piece that we can play

485
00:18:59,549 --> 00:19:04,230
with over time so when we go and drop in

486
00:19:01,980 --> 00:19:06,000
that multi-threading I can I can change

487
00:19:04,230 --> 00:19:07,980
it then and that's a good thing right I

488
00:19:06,000 --> 00:19:09,569
think that's what we want because until

489
00:19:07,980 --> 00:19:11,720
we actually try doing multi-threaded

490
00:19:09,569 --> 00:19:14,339
entity updating we won't really know

491
00:19:11,720 --> 00:19:16,230
probably what the exact right format

492
00:19:14,339 --> 00:19:19,169
should be for what we're going to do and

493
00:19:16,230 --> 00:19:21,360
so I'm thinking that probably we want to

494
00:19:19,170 --> 00:19:23,550
keep that as a thing that we do when we

495
00:19:21,359 --> 00:19:25,259
try to multi thread it so I'm gonna go

496
00:19:23,549 --> 00:19:28,139
in here and say when we do get world

497
00:19:25,259 --> 00:19:31,589
chunk I'm gonna say like you know

498
00:19:28,140 --> 00:19:33,990
something like remove world chunk and

499
00:19:31,589 --> 00:19:35,939
then when we do this iteration we do all

500
00:19:33,990 --> 00:19:38,430
the loading as we normally would

501
00:19:35,940 --> 00:19:40,230
and then what we're gonna do is we're

502
00:19:38,430 --> 00:19:41,519
gonna take that world chunk and we're

503
00:19:40,230 --> 00:19:43,799
gonna put it on the free list

504
00:19:41,519 --> 00:19:48,029
essentially so we're gonna say like add

505
00:19:43,799 --> 00:19:50,220
chunk to free list and and that's going

506
00:19:48,029 --> 00:19:52,559
to presumably be on the world so we'll

507
00:19:50,220 --> 00:19:54,569
just put those chunks back we grab them

508
00:19:52,559 --> 00:19:58,230
off and we'll we throw them back to be

509
00:19:54,569 --> 00:19:59,549
used at some later date basically and

510
00:19:58,230 --> 00:20:02,610
then in here where we have the blocks

511
00:19:59,549 --> 00:20:04,889
exact same thing so instead of doing it

512
00:20:02,609 --> 00:20:05,939
this way I'm gonna pull those blocks off

513
00:20:04,890 --> 00:20:08,460
one by one

514
00:20:05,940 --> 00:20:11,009
and return those to the free store as

515
00:20:08,460 --> 00:20:12,480
well right and this is why I say that

516
00:20:11,009 --> 00:20:14,220
pointer is kind of inconvenient cuz it

517
00:20:12,480 --> 00:20:16,289
makes this code harder to write if this

518
00:20:14,220 --> 00:20:18,500
block was just a pointer it's easy to

519
00:20:16,289 --> 00:20:21,180
just pull things off the block as we go

520
00:20:18,500 --> 00:20:22,829
but if we don't you know if we if we

521
00:20:21,180 --> 00:20:25,890
instead do it a slightly different way

522
00:20:22,829 --> 00:20:28,470
where we've got this sort of the block

523
00:20:25,890 --> 00:20:30,030
is the first block in there then it's

524
00:20:28,470 --> 00:20:30,960
kind of this annoying thing where I have

525
00:20:30,029 --> 00:20:32,399
to write that code a little bit

526
00:20:30,960 --> 00:20:34,980
differently and that's why I wanted this

527
00:20:32,400 --> 00:20:37,230
to potentially have it that'd be a

528
00:20:34,980 --> 00:20:39,809
pointer but let's see I'll see how

529
00:20:37,230 --> 00:20:41,970
annoying it is to actually do that it's

530
00:20:39,809 --> 00:20:43,609
probably not too bad so in here we've

531
00:20:41,970 --> 00:20:46,190
got this block

532
00:20:43,609 --> 00:20:47,839
here we go iterating over it and pulling

533
00:20:46,190 --> 00:20:50,299
all the entities out and so what I could

534
00:20:47,839 --> 00:20:56,959
do is just say well alright if we start

535
00:20:50,299 --> 00:21:01,460
with the first one like so and we do a

536
00:20:56,960 --> 00:21:02,929
while loop over it then what I can do is

537
00:21:01,460 --> 00:21:07,640
say well okay

538
00:21:02,929 --> 00:21:10,070
you know we're gonna snap a copy of

539
00:21:07,640 --> 00:21:11,540
whatever the next block is right I guess

540
00:21:10,069 --> 00:21:12,529
we're not threaded here so I guess I

541
00:21:11,539 --> 00:21:14,839
don't even have to do that

542
00:21:12,529 --> 00:21:16,730
to be honest with you what I can do here

543
00:21:14,839 --> 00:21:20,869
is just say like alright flock equals

544
00:21:16,730 --> 00:21:26,299
block next block as we were doing before

545
00:21:20,869 --> 00:21:27,919
oops and what I want to do here is right

546
00:21:26,299 --> 00:21:31,279
before I do that I want to put this

547
00:21:27,920 --> 00:21:32,779
block on the free list right so well I

548
00:21:31,279 --> 00:21:34,670
guess I still so I still do need to do

549
00:21:32,779 --> 00:21:37,899
this actually now think about it because

550
00:21:34,670 --> 00:21:37,900
this will probably get overwritten right

551
00:21:45,130 --> 00:21:48,770
all right

552
00:21:47,150 --> 00:21:49,880
so essentially you could see why I'm

553
00:21:48,769 --> 00:21:51,349
doing that right because this this

554
00:21:49,880 --> 00:21:52,429
adding block the free list will probably

555
00:21:51,349 --> 00:21:54,139
overwrite the next pointer and I won't

556
00:21:52,429 --> 00:21:55,730
be able to use it so when we call add

557
00:21:54,140 --> 00:21:56,960
block to free list all I would have to

558
00:21:55,730 --> 00:21:58,819
do to support the way we've got things

559
00:21:56,960 --> 00:22:01,579
written currently is do a quick check to

560
00:21:58,819 --> 00:22:05,960
see is the lock we're talking about the

561
00:22:01,579 --> 00:22:07,789
same I should say is not the same as the

562
00:22:05,960 --> 00:22:09,289
chunk that we start on and if it's not

563
00:22:07,789 --> 00:22:11,210
we don't add it to the free list cuz hey

564
00:22:09,289 --> 00:22:15,920
it's just that you know that block is

565
00:22:11,210 --> 00:22:18,019
sitting there right so that's that's

566
00:22:15,920 --> 00:22:20,179
basically all we're talking about and so

567
00:22:18,019 --> 00:22:23,329
all that would require here is us

568
00:22:20,179 --> 00:22:31,490
expanding the notion of world chunks to

569
00:22:23,329 --> 00:22:33,119
have like first free chunk and a first

570
00:22:31,490 --> 00:22:36,420
feed block

571
00:22:33,119 --> 00:22:40,859
that's really all that matters so when

572
00:22:36,420 --> 00:22:41,970
we come into this code in Ansem let's

573
00:22:40,859 --> 00:22:45,419
take a look at what that's got to look

574
00:22:41,970 --> 00:22:48,089
like so in this code what we want to do

575
00:22:45,420 --> 00:22:50,279
here and we can probably make this more

576
00:22:48,089 --> 00:22:53,490
efficient by bidding things more

577
00:22:50,279 --> 00:22:55,829
intelligently potentially but really all

578
00:22:53,490 --> 00:22:58,410
we want to do is when we come through

579
00:22:55,829 --> 00:23:00,720
here instead of having this concept of

580
00:22:58,410 --> 00:23:03,390
change entity location we're never going

581
00:23:00,720 --> 00:23:04,950
to do that anymore instead what we're

582
00:23:03,390 --> 00:23:07,920
going to do is just the enemy is going

583
00:23:04,950 --> 00:23:13,410
to get packed right and that packing is

584
00:23:07,920 --> 00:23:14,940
going to be the thing that that moves

585
00:23:13,410 --> 00:23:16,470
the Edit e essentially into a new chunk

586
00:23:14,940 --> 00:23:18,000
it's gonna find the chunk to pack it

587
00:23:16,470 --> 00:23:19,650
into and it's going to pack it and like

588
00:23:18,000 --> 00:23:22,289
I said this will lead to probably more

589
00:23:19,650 --> 00:23:25,050
hash lookups then we really need it to

590
00:23:22,289 --> 00:23:28,139
do and so we probably will want to do

591
00:23:25,049 --> 00:23:29,940
something like in the sim entity it's in

592
00:23:28,140 --> 00:23:32,820
the sim region itself what we'll

593
00:23:29,940 --> 00:23:36,180
probably do is keep the world chunks

594
00:23:32,819 --> 00:23:36,720
around as a spatial partition of some

595
00:23:36,180 --> 00:23:39,990
kind

596
00:23:36,720 --> 00:23:42,750
probably I'm just guessing or something

597
00:23:39,990 --> 00:23:45,690
like this and then when we actually do

598
00:23:42,750 --> 00:23:47,849
move entity we'll see if you exited your

599
00:23:45,690 --> 00:23:49,410
boundary and if you are will update you

600
00:23:47,849 --> 00:23:51,149
and that way you can stream everyone out

601
00:23:49,410 --> 00:23:52,500
in those chunks really quickly without

602
00:23:51,150 --> 00:23:54,300
having to constantly hit the hash

603
00:23:52,500 --> 00:23:56,069
because I'm guessing that'll become a

604
00:23:54,299 --> 00:23:58,470
problem for us eventually if we have an

605
00:23:56,069 --> 00:24:01,589
affinities maybe it never does and if

606
00:23:58,470 --> 00:24:03,990
that's true great but if it does then

607
00:24:01,589 --> 00:24:05,129
that's where I think that approach you

608
00:24:03,990 --> 00:24:09,240
know that's where I think we would hit

609
00:24:05,130 --> 00:24:12,690
that approach all right so here we go

610
00:24:09,240 --> 00:24:13,950
with with that code you can see from

611
00:24:12,690 --> 00:24:15,539
cure where we kind of have the change on

612
00:24:13,950 --> 00:24:17,009
a new location what I want to do now is

613
00:24:15,539 --> 00:24:19,139
say well ok I don't care about any of

614
00:24:17,009 --> 00:24:21,720
this stuff at the very end what I want

615
00:24:19,140 --> 00:24:23,460
to do is pack the entity down so what I

616
00:24:21,720 --> 00:24:30,480
want to do here is call something like

617
00:24:23,460 --> 00:24:32,700
packed entity into chunk right and are I

618
00:24:30,480 --> 00:24:36,000
probably just should just say into world

619
00:24:32,700 --> 00:24:37,380
and that will be the call that actually

620
00:24:36,000 --> 00:24:39,869
goes in finds

621
00:24:37,380 --> 00:24:41,850
what chunk it should be in and puts it

622
00:24:39,869 --> 00:24:43,619
in there as opposed to there might be an

623
00:24:41,849 --> 00:24:45,119
actual pack entity into truck call which

624
00:24:43,619 --> 00:24:47,158
is once you have the chunk then it packs

625
00:24:45,119 --> 00:24:49,469
it in there right

626
00:24:47,159 --> 00:24:51,390
so so and that would be the one we'd

627
00:24:49,470 --> 00:24:52,620
call as an in an accelerated case where

628
00:24:51,390 --> 00:24:55,590
we knew which chunk we were talking

629
00:24:52,619 --> 00:24:57,149
about a priori so again that's probably

630
00:24:55,589 --> 00:24:58,918
going to take the world that's true it's

631
00:24:57,150 --> 00:25:01,169
not gonna have to dereference the entity

632
00:24:58,919 --> 00:25:02,940
storage it is going to need that stored

633
00:25:01,169 --> 00:25:07,890
entity which that's the actual entity

634
00:25:02,940 --> 00:25:11,278
that we kept is wait is that true no so

635
00:25:07,890 --> 00:25:14,809
we don't want any of this stored stuff

636
00:25:11,278 --> 00:25:20,849
anymore at all right what is that doing

637
00:25:14,808 --> 00:25:24,538
stored sim we don't want this no no no

638
00:25:20,849 --> 00:25:27,449
no no no no no no I mean we can keep

639
00:25:24,538 --> 00:25:32,429
these assertions I guess entity Flags

640
00:25:27,450 --> 00:25:34,558
simming I don't think we need any of

641
00:25:32,429 --> 00:25:37,710
that anymore since an entity now can

642
00:25:34,558 --> 00:25:40,798
only be edited by pulling it into the

643
00:25:37,710 --> 00:25:43,169
database the flag seaming on entity is

644
00:25:40,798 --> 00:25:47,308
completely redundant you can never have

645
00:25:43,169 --> 00:25:49,259
an entity by itself be siming and in DB

646
00:25:47,308 --> 00:25:51,240
comes symbol when it's whole chunk gets

647
00:25:49,259 --> 00:25:52,589
moved in so if we were ever gonna flag

648
00:25:51,240 --> 00:25:54,298
something it wouldn't be an entity

649
00:25:52,589 --> 00:25:55,558
because you know if you can look at the

650
00:25:54,298 --> 00:25:57,240
ending struct at all it's being

651
00:25:55,558 --> 00:26:00,240
simulated because otherwise it's packed

652
00:25:57,240 --> 00:26:01,409
and you can't see anything right so we

653
00:26:00,240 --> 00:26:03,419
would only need to set that if you were

654
00:26:01,409 --> 00:26:06,720
saying that on world things so this is

655
00:26:03,419 --> 00:26:12,840
is just gone right this is not a thing

656
00:26:06,720 --> 00:26:14,759
anymore at all so that's good goodbye so

657
00:26:12,839 --> 00:26:18,178
these are all going to be on the

658
00:26:14,759 --> 00:26:19,859
entities themselves right and that

659
00:26:18,179 --> 00:26:21,390
stored concept just goes away so

660
00:26:19,859 --> 00:26:23,668
anywhere that we were seeing a story

661
00:26:21,390 --> 00:26:25,890
before don't need to do that anymore so

662
00:26:23,669 --> 00:26:30,270
what we're actually going to pack here

663
00:26:25,890 --> 00:26:32,520
is the entity we can see the the is set

664
00:26:30,269 --> 00:26:34,589
non-spatial stuff again that non-spatial

665
00:26:32,519 --> 00:26:35,970
stuff I don't know that we ever want

666
00:26:34,589 --> 00:26:38,579
anymore really I think we're probably

667
00:26:35,970 --> 00:26:40,769
always gonna want the spatial stuff now

668
00:26:38,579 --> 00:26:42,599
because it even if you're non facial you

669
00:26:40,769 --> 00:26:44,278
will move around with somebody whoever

670
00:26:42,599 --> 00:26:46,319
the person who's carrying you or whose

671
00:26:44,278 --> 00:26:48,869
property you belong to you will be with

672
00:26:46,319 --> 00:26:50,369
them and you will move with them and so

673
00:26:48,869 --> 00:26:52,589
that is probably not a thing any more

674
00:26:50,369 --> 00:26:54,839
than non spatial so I don't think we'll

675
00:26:52,589 --> 00:26:58,288
need that either and when we do this map

676
00:26:54,839 --> 00:26:59,750
into chunk space here that is this new P

677
00:26:58,288 --> 00:27:02,559
we can leave that for now

678
00:26:59,750 --> 00:27:04,700
we probably don't really need to do that

679
00:27:02,559 --> 00:27:11,569
manually because that could probably be

680
00:27:04,700 --> 00:27:15,380
something that is done in in this pack

681
00:27:11,569 --> 00:27:15,889
entity into world right so if that makes

682
00:27:15,380 --> 00:27:24,170
sense

683
00:27:15,890 --> 00:27:27,140
map in the chunk space there we go so

684
00:27:24,170 --> 00:27:29,090
that's really what that is about and

685
00:27:27,140 --> 00:27:31,490
once I know that that's happening right

686
00:27:29,089 --> 00:27:33,109
now that I have that that's a complete

687
00:27:31,490 --> 00:27:35,930
streaming system right from start to

688
00:27:33,109 --> 00:27:39,129
finish you can see it here and so what I

689
00:27:35,930 --> 00:27:44,299
really need now is I just need some way

690
00:27:39,130 --> 00:27:45,920
of calling that externally here and I

691
00:27:44,299 --> 00:27:47,269
think we've pretty much set ourselves up

692
00:27:45,920 --> 00:27:49,310
to do exactly that

693
00:27:47,269 --> 00:27:51,470
so when we call pack entity into chunk

694
00:27:49,309 --> 00:27:53,899
here which is the bad name for it oh

695
00:27:51,470 --> 00:27:55,160
wait no this is fine

696
00:27:53,900 --> 00:27:57,620
this is that what I wanted that was that

697
00:27:55,160 --> 00:28:00,380
was some placeholder for just what we

698
00:27:57,619 --> 00:28:02,599
were yeah when we were just sort of

699
00:28:00,380 --> 00:28:04,880
sketching that in so what I want to do

700
00:28:02,599 --> 00:28:08,089
here is I want to call this right I want

701
00:28:04,880 --> 00:28:10,220
to call pack entity into world and so

702
00:28:08,089 --> 00:28:13,669
the way I can do that is this world

703
00:28:10,220 --> 00:28:16,160
position P right is sitting there on the

704
00:28:13,670 --> 00:28:19,340
entity lo which we're still actually

705
00:28:16,160 --> 00:28:21,500
tracking for no apparent reason I think

706
00:28:19,339 --> 00:28:23,599
what we want to do is collapse that down

707
00:28:21,500 --> 00:28:25,609
because again we don't really need the

708
00:28:23,599 --> 00:28:27,049
low entity thing anymore and we don't

709
00:28:25,609 --> 00:28:29,000
even really need to we don't need to

710
00:28:27,049 --> 00:28:30,769
distinguish mean any of these things so

711
00:28:29,000 --> 00:28:32,809
what I can do is I can stop having that

712
00:28:30,769 --> 00:28:40,519
concept of the low entity which where

713
00:28:32,809 --> 00:28:43,700
was that in sim region no so it's in the

714
00:28:40,519 --> 00:28:46,250
world node so in low entity we were

715
00:28:43,700 --> 00:28:48,740
keeping this I'm just gonna for now grab

716
00:28:46,250 --> 00:28:53,750
that that out and I'm gonna put that

717
00:28:48,740 --> 00:28:55,730
into the actual entity struct itself in

718
00:28:53,750 --> 00:28:58,339
preparation for getting rid of that

719
00:28:55,730 --> 00:29:01,009
entirely so this is going to be called

720
00:28:58,339 --> 00:29:02,059
like you know chunk P or something and

721
00:29:01,009 --> 00:29:03,170
we're just moving everything over in

722
00:29:02,059 --> 00:29:06,349
here and then we're gonna collapse us

723
00:29:03,170 --> 00:29:08,539
down so that's kind of the plan right so

724
00:29:06,349 --> 00:29:10,730
this is gonna look like that now and

725
00:29:08,539 --> 00:29:13,309
that means that when we do pack entity

726
00:29:10,730 --> 00:29:13,639
into chunk we should be able to just do

727
00:29:13,309 --> 00:29:16,759
something

728
00:29:13,638 --> 00:29:19,338
like this where when we call that we

729
00:29:16,759 --> 00:29:21,308
pass well and I guess we don't even have

730
00:29:19,338 --> 00:29:24,519
to worry about that we can just pass

731
00:29:21,308 --> 00:29:25,729
whatever the entity low sim is there

732
00:29:24,519 --> 00:29:27,378
right

733
00:29:25,729 --> 00:29:29,629
so you just pass the same entity and

734
00:29:27,378 --> 00:29:35,988
that can get the P out of it because the

735
00:29:29,628 --> 00:29:38,208
P is right there right and that's what I

736
00:29:35,989 --> 00:29:39,769
want so this is gonna be called pack

737
00:29:38,209 --> 00:29:42,109
entity into world because that's the one

738
00:29:39,769 --> 00:29:44,450
that packs into the world and similarly

739
00:29:42,108 --> 00:29:46,398
inside sim region now what I want to do

740
00:29:44,450 --> 00:29:48,649
is make that symmetric so instead of

741
00:29:46,398 --> 00:29:50,718
passing the new P here I don't actually

742
00:29:48,648 --> 00:29:52,098
want to pass the new P and furthermore I

743
00:29:50,719 --> 00:29:53,929
don't need to pass the World Arena can

744
00:29:52,098 --> 00:29:55,968
get it itself obviously so what I want

745
00:29:53,929 --> 00:29:59,379
to do here is I want to take this map of

746
00:29:55,969 --> 00:30:06,588
the trunk space thing and I'll take that

747
00:29:59,378 --> 00:30:09,259
operation and do it here to me so I'll

748
00:30:06,588 --> 00:30:11,450
take that chunk P and I'll generate it

749
00:30:09,259 --> 00:30:14,528
by doing the mapping back right so

750
00:30:11,450 --> 00:30:14,528
that's that's what we're doing there

751
00:30:15,969 --> 00:30:22,249
okay now and eventually all this stuff

752
00:30:20,659 --> 00:30:24,469
can continue to go away like I said this

753
00:30:22,249 --> 00:30:25,848
stuff this stuff is all like we're gonna

754
00:30:24,469 --> 00:30:27,379
be able to sort of clean and clean and

755
00:30:25,848 --> 00:30:28,218
clean and clean I think and then and

756
00:30:27,378 --> 00:30:33,888
then we'll be good to go

757
00:30:28,219 --> 00:30:35,719
all right so and and you know I'll

758
00:30:33,888 --> 00:30:37,189
probably lock that P out again in a

759
00:30:35,719 --> 00:30:38,808
second here but that's that's a separate

760
00:30:37,190 --> 00:30:40,338
issue so we don't care about any of

761
00:30:38,808 --> 00:30:43,128
stuff anymore change in a new location

762
00:30:40,338 --> 00:30:45,200
really not relevant in any way and does

763
00:30:43,128 --> 00:30:49,578
not matter to us at all anymore so this

764
00:30:45,200 --> 00:30:53,479
is just gone and goodbye right then we

765
00:30:49,578 --> 00:30:56,509
come up here and we say get sim space P

766
00:30:53,479 --> 00:30:59,959
right anyone who was looking for that

767
00:30:56,509 --> 00:31:03,078
before can get it if you want you can

768
00:30:59,959 --> 00:31:05,269
just do the reference the sim off of the

769
00:31:03,078 --> 00:31:06,769
stored entity if you want to but you

770
00:31:05,269 --> 00:31:08,778
shouldn't have to really even do that

771
00:31:06,769 --> 00:31:11,358
anymore because pretty soon that that

772
00:31:08,778 --> 00:31:14,690
won't be a thing anyway what is the

773
00:31:11,358 --> 00:31:18,108
complaint here world position oh sorry

774
00:31:14,690 --> 00:31:21,469
I'm a chumpy not Chuck P that sounds

775
00:31:18,108 --> 00:31:24,378
like some kind of a sneaker all right so

776
00:31:21,469 --> 00:31:25,909
remove world chunk is something we need

777
00:31:24,378 --> 00:31:27,319
to implement add block to face that

778
00:31:25,909 --> 00:31:29,750
Chuck play us both are as

779
00:31:27,319 --> 00:31:32,599
well let's take a look at this year

780
00:31:29,750 --> 00:31:36,140
entity storage index this is the thing

781
00:31:32,599 --> 00:31:37,879
that we had before about tracking values

782
00:31:36,140 --> 00:31:39,800
obviously those are going to get cleaned

783
00:31:37,880 --> 00:31:41,840
up as well too in a separate pass but

784
00:31:39,799 --> 00:31:45,559
I'm not gonna do too much with those at

785
00:31:41,839 --> 00:31:50,109
the moment what did I do here so this is

786
00:31:45,559 --> 00:31:52,909
also a value there we go I curious the

787
00:31:50,109 --> 00:31:54,319
stored value we don't want that anymore

788
00:31:52,910 --> 00:31:57,680
so what we really want is just the

789
00:31:54,319 --> 00:32:00,439
entity chunk P here which we've already

790
00:31:57,680 --> 00:32:06,140
computed so that's fine and the same

791
00:32:00,440 --> 00:32:08,120
thing is true of this right so that's

792
00:32:06,140 --> 00:32:09,500
all good and when we do pack entity in

793
00:32:08,119 --> 00:32:12,889
the world like I said you know I think I

794
00:32:09,500 --> 00:32:14,930
will for now continue to pass that

795
00:32:12,890 --> 00:32:16,580
through and the reason for that is

796
00:32:14,930 --> 00:32:19,970
because eventually we can get rid of it

797
00:32:16,579 --> 00:32:21,529
all together and eventually we can just

798
00:32:19,970 --> 00:32:23,450
make this be something that gets passed

799
00:32:21,529 --> 00:32:26,420
and in fact I guess well you know no

800
00:32:23,450 --> 00:32:36,830
time like the present so here's our

801
00:32:26,420 --> 00:32:39,769
world see here H here is our world

802
00:32:36,829 --> 00:32:43,210
position so we'll just go ahead and

803
00:32:39,769 --> 00:32:46,639
generate that and I'll pass that through

804
00:32:43,210 --> 00:32:48,319
here and so that when we call pac----

805
00:32:46,640 --> 00:32:49,700
entity the world you pass that chunk P

806
00:32:48,319 --> 00:32:51,619
and there you go

807
00:32:49,700 --> 00:32:54,019
and I think and like I said it's gonna

808
00:32:51,619 --> 00:32:56,899
take a flying leap out of here I think I

809
00:32:54,019 --> 00:32:58,910
can actually get rid of that then

810
00:32:56,900 --> 00:33:01,850
entirely and the reason that I think

811
00:32:58,910 --> 00:33:04,670
that is because inside world mode if I

812
00:33:01,849 --> 00:33:07,039
just changed from when I do begin low

813
00:33:04,670 --> 00:33:10,640
entity if I just move the world position

814
00:33:07,039 --> 00:33:12,259
P down to end entity right then I could

815
00:33:10,640 --> 00:33:13,850
just pass it here for free and I

816
00:33:12,259 --> 00:33:14,990
wouldn't have to store it anywhere so it

817
00:33:13,849 --> 00:33:16,639
wouldn't have to live here

818
00:33:14,990 --> 00:33:18,349
we know the sim doesn't need it so

819
00:33:16,640 --> 00:33:20,750
creation time shouldn't need it either

820
00:33:18,349 --> 00:33:24,049
so let's just make that happen

821
00:33:20,750 --> 00:33:25,970
right if that makes sense so we'll get

822
00:33:24,049 --> 00:33:28,220
rid of these world positions on creation

823
00:33:25,970 --> 00:33:29,660
and pass them on end and I'm just going

824
00:33:28,220 --> 00:33:32,079
to go ahead and see if that works

825
00:33:29,660 --> 00:33:32,080
right

826
00:33:33,900 --> 00:33:40,080
now ma'am so here and begin grounded

827
00:33:38,430 --> 00:33:41,279
entity we're passing the P so really

828
00:33:40,079 --> 00:33:42,569
again like I said this should be really

829
00:33:41,279 --> 00:33:44,970
straightforward all I have to do is move

830
00:33:42,569 --> 00:33:45,750
it from the beginning to the end same

831
00:33:44,970 --> 00:33:47,420
thing here

832
00:33:45,750 --> 00:33:51,569
right I just move it from the beginning

833
00:33:47,420 --> 00:33:55,440
to the end keep on going here it is same

834
00:33:51,569 --> 00:33:57,750
exact pattern so I say that's where I

835
00:33:55,440 --> 00:33:59,250
want it to be placed right and I'm just

836
00:33:57,750 --> 00:34:04,109
sort of saying like place the entity

837
00:33:59,250 --> 00:34:07,740
here let's see there's another begin get

838
00:34:04,109 --> 00:34:10,199
that going and these are both placed at

839
00:34:07,740 --> 00:34:12,829
the same place so I actually can just do

840
00:34:10,199 --> 00:34:28,759
both of them goodbye

841
00:34:12,829 --> 00:34:32,969
and see here code modification someday

842
00:34:28,760 --> 00:34:34,950
if Alan Webster does like actually

843
00:34:32,969 --> 00:34:38,009
complete his code intelligence editing

844
00:34:34,949 --> 00:34:40,859
thing as he suggested I wonder if this

845
00:34:38,010 --> 00:34:42,300
is the kind of editor if this kind of

846
00:34:40,860 --> 00:34:43,950
thing that for ED will do automatically

847
00:34:42,300 --> 00:34:47,039
which would be kind of ridiculously

848
00:34:43,949 --> 00:34:48,148
awesome if it was I haven't thought it

849
00:34:47,039 --> 00:34:51,090
through if that's something it could

850
00:34:48,148 --> 00:34:52,769
have done like hey I had this pair of

851
00:34:51,090 --> 00:34:54,809
things and I wanted to move a parameter

852
00:34:52,769 --> 00:34:57,090
from one to the other it's within the

853
00:34:54,809 --> 00:34:58,500
realm of possibility right I mean you

854
00:34:57,090 --> 00:35:05,789
could see the editor going like oh yeah

855
00:34:58,500 --> 00:35:07,920
okay I'll do that for you no problem so

856
00:35:05,789 --> 00:35:11,250
I don't know I guess only Allen can tell

857
00:35:07,920 --> 00:35:13,800
us what does this key do well that's a

858
00:35:11,250 --> 00:35:15,719
key that deletes my buffers I forgot

859
00:35:13,800 --> 00:35:18,030
that's zero oh I have my num lock on

860
00:35:15,719 --> 00:35:20,339
that's why all right well I don't want

861
00:35:18,030 --> 00:35:23,360
that on so I'm gonna reboot I'm gonna

862
00:35:20,340 --> 00:35:23,360
reboot hold on a second

863
00:35:24,170 --> 00:35:31,200
sorry zero is my key for a kill buffer

864
00:35:27,000 --> 00:35:33,030
and I had mem lock on yeah I'm not used

865
00:35:31,199 --> 00:35:34,679
to even having in them a numeric keypad

866
00:35:33,030 --> 00:35:36,990
but all my other keyboards now don't

867
00:35:34,679 --> 00:35:39,269
have that on there anymore so anyway so

868
00:35:36,989 --> 00:35:42,299
that's I think it for the structural

869
00:35:39,269 --> 00:35:43,769
changes there and what we can do now if

870
00:35:42,300 --> 00:35:45,150
we wanted to and we might as well

871
00:35:43,769 --> 00:35:46,989
because like I said we're just going

872
00:35:45,150 --> 00:35:49,380
nuts here we're just having a little

873
00:35:46,989 --> 00:35:53,649
a little piss already as they would say

874
00:35:49,380 --> 00:35:57,250
you know on the streets so basically

875
00:35:53,650 --> 00:36:00,789
what I want to do is just get rid of the

876
00:35:57,250 --> 00:36:03,639
whole that whole double notion because

877
00:36:00,789 --> 00:36:05,829
now we know we never need low entity so

878
00:36:03,639 --> 00:36:07,828
we only have cemento tea right and so

879
00:36:05,829 --> 00:36:10,298
what I can do here is I can just replace

880
00:36:07,829 --> 00:36:13,780
anywhere that we were using low entity I

881
00:36:10,298 --> 00:36:17,730
can replace it with just entity right if

882
00:36:13,780 --> 00:36:19,859
that makes sense though entity Kennedy

883
00:36:17,730 --> 00:36:22,358
oops

884
00:36:19,858 --> 00:36:23,230
what did I do I've done something

885
00:36:22,358 --> 00:36:25,779
horribly wrong

886
00:36:23,230 --> 00:36:30,539
I don't know what Oh entity with entity

887
00:36:25,780 --> 00:36:33,910
okay yes yes yes yes these are all yes

888
00:36:30,539 --> 00:36:35,650
okay so if I replace entity with low

889
00:36:33,909 --> 00:36:38,348
entity and then I go into some region

890
00:36:35,650 --> 00:36:39,940
dot H I should now be able to say all

891
00:36:38,349 --> 00:36:42,068
right instead of a simonetti there's

892
00:36:39,940 --> 00:36:43,869
just an entity and now we only have one

893
00:36:42,068 --> 00:36:46,420
in any type and we still have all the

894
00:36:43,869 --> 00:36:48,160
benefits of having to edit e types but

895
00:36:46,420 --> 00:36:50,260
we don't actually have to deal with it

896
00:36:48,159 --> 00:36:53,048
right which is great it's double plus

897
00:36:50,260 --> 00:37:01,289
awesome in a special awesome sauce with

898
00:36:53,048 --> 00:37:03,639
awesome on top all right dude do do

899
00:37:01,289 --> 00:37:09,160
there's just a lot of things called sim

900
00:37:03,639 --> 00:37:14,818
entity as it turns out sin entity oh and

901
00:37:09,159 --> 00:37:14,818
that's not good sin entity entity

902
00:37:16,619 --> 00:37:36,400
love that scroll one more time so now

903
00:37:34,239 --> 00:37:37,899
we've got some low entities here and I'm

904
00:37:36,400 --> 00:37:41,400
just gonna take low entity and change

905
00:37:37,900 --> 00:37:45,360
that to entity as well so there it goes

906
00:37:41,400 --> 00:37:48,099
right and what else we got

907
00:37:45,360 --> 00:37:50,769
so we've got this kind of stored sim

908
00:37:48,099 --> 00:37:53,529
thing here and stored sim is no longer

909
00:37:50,769 --> 00:37:55,599
necessary so really those can all be

910
00:37:53,530 --> 00:37:58,810
changed I guess if there's anywhere that

911
00:37:55,599 --> 00:38:02,650
has the pattern of stored sim that can

912
00:37:58,809 --> 00:38:09,009
be changed to just stored now which was

913
00:38:02,650 --> 00:38:11,500
not very many all right so that still

914
00:38:09,010 --> 00:38:20,110
wants to be arrow that just needs to be

915
00:38:11,500 --> 00:38:22,449
that right let's see so source see start

916
00:38:20,110 --> 00:38:24,070
entity equals source what is source what

917
00:38:22,449 --> 00:38:26,259
was that again oh right so I've just got

918
00:38:24,070 --> 00:38:28,269
to do a star source source is just a

919
00:38:26,260 --> 00:38:33,220
pointer to the entity that it's coming

920
00:38:28,269 --> 00:38:34,599
from and this is just gonna be all yeah

921
00:38:33,219 --> 00:38:41,199
this is definitely the sort of thing

922
00:38:34,599 --> 00:38:42,250
that wait and that's right this is

923
00:38:41,199 --> 00:38:45,159
definitely a sort of thing that for

924
00:38:42,250 --> 00:38:48,460
coder could do eventually I think based

925
00:38:45,159 --> 00:38:50,469
on what Allen was talking about anyway

926
00:38:48,460 --> 00:38:57,820
so let's see we will remove world chunk

927
00:38:50,469 --> 00:39:00,059
now the thing lo let's keep going

928
00:38:57,820 --> 00:39:11,010
and in the overlaps rectangle low

929
00:39:00,059 --> 00:39:11,009
collision low storage index and

930
00:39:12,480 --> 00:39:21,369
see people on going no don't care so

931
00:39:19,539 --> 00:39:24,970
here I guess we could probably do this

932
00:39:21,369 --> 00:39:28,420
where we have entity lo eros in dot it

933
00:39:24,969 --> 00:39:29,879
could just be entity lo arrow right and

934
00:39:28,420 --> 00:39:32,798
that's probably just gonna be true

935
00:39:29,880 --> 00:39:39,010
basically everywhere that that was

936
00:39:32,798 --> 00:39:40,480
happening why did that not know why that

937
00:39:39,010 --> 00:39:49,690
didn't that didn't seem to get them

938
00:39:40,480 --> 00:39:58,358
although I wrong about that there we go

939
00:39:49,690 --> 00:39:59,318
maybe I did it wrong entity lo oh it's

940
00:39:58,358 --> 00:40:01,150
because some of them were in the lilo

941
00:39:59,318 --> 00:40:03,929
not guys see what it was all right well

942
00:40:01,150 --> 00:40:03,930
anyway point being

943
00:40:04,588 --> 00:40:10,000
all right so similarly so this I can

944
00:40:07,449 --> 00:40:15,068
just replaces well I think humanity with

945
00:40:10,000 --> 00:40:19,268
Kennedy is now good to do and we're

946
00:40:15,068 --> 00:40:23,380
almost there let's see entity sim for

947
00:40:19,268 --> 00:40:29,548
add wall that's just gonna be gonna add

948
00:40:23,380 --> 00:40:29,548
Flags call let's see same thing here

949
00:40:30,639 --> 00:40:38,639
let's take a look for add Flags I think

950
00:40:34,480 --> 00:40:38,639
those can all be done same way

951
00:40:41,518 --> 00:41:07,538
yeah and almost there okay so now that

952
00:41:04,119 --> 00:41:09,969
all that's done I think we're basically

953
00:41:07,539 --> 00:41:12,640
at the point where all of the structural

954
00:41:09,969 --> 00:41:15,009
changes have occurred and so really all

955
00:41:12,639 --> 00:41:19,778
we have to do is implement those couple

956
00:41:15,009 --> 00:41:23,949
of functions that we don't have yet and

957
00:41:19,778 --> 00:41:26,170
those are on the world right so the way

958
00:41:23,949 --> 00:41:28,719
I want to do that and I'm trying to look

959
00:41:26,170 --> 00:41:30,759
here to see change in any location raw

960
00:41:28,719 --> 00:41:32,588
like I just don't even think we need any

961
00:41:30,759 --> 00:41:35,440
of this stuff anymore right that just

962
00:41:32,588 --> 00:41:37,478
does not matter pulling the thing out of

963
00:41:35,440 --> 00:41:40,358
the chunk does none of this all of this

964
00:41:37,478 --> 00:41:42,728
janky code can just go away like goodbye

965
00:41:40,358 --> 00:41:46,598
not relevant it doesn't matter

966
00:41:42,728 --> 00:41:49,509
not important right because no one's

967
00:41:46,599 --> 00:41:53,559
going to call it so all we have to do

968
00:41:49,509 --> 00:41:57,039
now is we just have to pull it out of

969
00:41:53,559 --> 00:42:04,599
the hash completely and then you know

970
00:41:57,039 --> 00:42:07,299
put it back in so I'm going to start

971
00:42:04,599 --> 00:42:10,088
with the easy case first the easy case

972
00:42:07,298 --> 00:42:10,690
is packed entity into world that's very

973
00:42:10,088 --> 00:42:13,298
simple

974
00:42:10,690 --> 00:42:15,729
because we already have get world chunk

975
00:42:13,298 --> 00:42:19,869
which does exactly what we want in this

976
00:42:15,728 --> 00:42:21,759
case it returns to us specifically the

977
00:42:19,869 --> 00:42:24,548
world chunk that we would write this

978
00:42:21,759 --> 00:42:26,588
thing into right and that's exactly what

979
00:42:24,548 --> 00:42:28,798
we need so what I'm going to do is going

980
00:42:26,588 --> 00:42:32,588
to start with PAC entity into world

981
00:42:28,798 --> 00:42:34,509
internal void PAC entity into world that

982
00:42:32,588 --> 00:42:38,969
takes of course the world and it takes

983
00:42:34,509 --> 00:42:38,969
the entity and it takes the location

984
00:42:40,179 --> 00:42:45,879
right and then what we're gonna do is

985
00:42:42,789 --> 00:42:49,028
we're gonna get that world chunk out and

986
00:42:45,880 --> 00:42:51,099
we're gonna get that world chunk out in

987
00:42:49,028 --> 00:42:59,219
a way that tells that underlying routine

988
00:42:51,099 --> 00:43:03,220
hey by the way I would like you to loops

989
00:42:59,219 --> 00:43:05,199
I would like you to create a world chunk

990
00:43:03,219 --> 00:43:08,618
in this location if there isn't one

991
00:43:05,199 --> 00:43:14,288
already right so I'm gonna give it the

992
00:43:08,619 --> 00:43:16,539
arena pointer here like so so I'm gonna

993
00:43:14,289 --> 00:43:20,410
say all right let's have get world chunk

994
00:43:16,539 --> 00:43:21,640
operate and and give us back a world

995
00:43:20,409 --> 00:43:23,739
chuck we know we can pack this thing

996
00:43:21,639 --> 00:43:25,808
into so then all the only thing that I

997
00:43:23,739 --> 00:43:28,298
need to do is figure out will it fit in

998
00:43:25,809 --> 00:43:30,760
the current place in the chunk or won't

999
00:43:28,298 --> 00:43:33,460
it and the way that I can do that I say

1000
00:43:30,760 --> 00:43:35,559
well right now our pack function is

1001
00:43:33,460 --> 00:43:37,329
completely neutered it's just a copy

1002
00:43:35,559 --> 00:43:38,859
right we haven't gotten to the point

1003
00:43:37,329 --> 00:43:40,390
where we actually do the logic of

1004
00:43:38,858 --> 00:43:42,449
packing some compacting something down

1005
00:43:40,389 --> 00:43:44,710
to only the part that's necessary right

1006
00:43:42,449 --> 00:43:46,298
so instead what we're gonna do here is

1007
00:43:44,710 --> 00:43:48,159
we're just gonna do a copy but that

1008
00:43:46,298 --> 00:43:50,588
means that we know the total size we

1009
00:43:48,159 --> 00:43:53,048
need to pack right and the total pack

1010
00:43:50,588 --> 00:43:55,929
size is just whatever the entity size is

1011
00:43:53,048 --> 00:43:59,519
so if the entity is how we're big that's

1012
00:43:55,929 --> 00:44:02,949
how much room we need so we need to see

1013
00:43:59,519 --> 00:44:05,079
if the chunk and you remember how this

1014
00:44:02,949 --> 00:44:09,189
is stored here right

1015
00:44:05,079 --> 00:44:11,950
if the chunk entity data size is at a

1016
00:44:09,190 --> 00:44:14,528
point where we could add to it and not

1017
00:44:11,949 --> 00:44:17,219
overflow so if the entity data size plus

1018
00:44:14,528 --> 00:44:24,099
our pack size is less than or equal to

1019
00:44:17,219 --> 00:44:27,639
however big the Jimmy however big the

1020
00:44:24,099 --> 00:44:29,940
entity data is right that's all we need

1021
00:44:27,639 --> 00:44:29,940
to know

1022
00:44:34,039 --> 00:44:38,940
right so we can come in here and say all

1023
00:44:36,748 --> 00:44:40,858
right that's our pack size we can see if

1024
00:44:38,940 --> 00:44:43,019
it's less or equal to that means we can

1025
00:44:40,858 --> 00:44:44,998
pack it right now what we want to know

1026
00:44:43,018 --> 00:44:47,218
actually though because we always try to

1027
00:44:44,998 --> 00:44:49,679
succeed in packing we actually want to

1028
00:44:47,219 --> 00:44:51,749
know if we exceeded right and if we

1029
00:44:49,679 --> 00:44:55,108
exceeded we need to make a new chunk

1030
00:44:51,748 --> 00:44:58,768
okay so impact entity into world we

1031
00:44:55,108 --> 00:45:03,478
would need to do a push struct right of

1032
00:44:58,768 --> 00:45:04,828
a world chunk in here now since we're

1033
00:45:03,478 --> 00:45:08,458
you know we're gonna have a free list

1034
00:45:04,829 --> 00:45:11,160
what I could say is well okay if that's

1035
00:45:08,458 --> 00:45:15,419
the case I'm sorry I'm sorry the block

1036
00:45:11,159 --> 00:45:18,629
now volts on I mean a world block what I

1037
00:45:15,420 --> 00:45:22,440
could say is okay world entity block new

1038
00:45:18,630 --> 00:45:27,989
block I'm gonna first DQ off of the free

1039
00:45:22,440 --> 00:45:30,420
list right so I'll say the the the new

1040
00:45:27,989 --> 00:45:32,849
block equals whatever the world's first

1041
00:45:30,420 --> 00:45:38,519
free block is now I've got one if it's

1042
00:45:32,849 --> 00:45:43,890
there if new block actually worked then

1043
00:45:38,518 --> 00:45:46,018
I will say the first free block becomes

1044
00:45:43,889 --> 00:45:50,159
the next block otherwise I'll do a push

1045
00:45:46,018 --> 00:45:53,578
truck to get myself a new one so the

1046
00:45:50,159 --> 00:45:55,409
world's oops you know what I could do

1047
00:45:53,579 --> 00:45:57,509
that's actually a lot smarter than that

1048
00:45:55,409 --> 00:46:06,838
now think about it I could just do if

1049
00:45:57,509 --> 00:46:09,088
not world first feed block world first

1050
00:46:06,838 --> 00:46:10,828
food block equals push truck that's a

1051
00:46:09,088 --> 00:46:15,208
little bit better because then this is

1052
00:46:10,829 --> 00:46:17,099
just that right it's a it's it's more

1053
00:46:15,208 --> 00:46:19,018
it's a better way of writing that code I

1054
00:46:17,099 --> 00:46:20,400
in fact I don't know do I normally write

1055
00:46:19,018 --> 00:46:22,498
it that way I feel like that's better

1056
00:46:20,400 --> 00:46:24,568
than the way that I normally write it I

1057
00:46:22,498 --> 00:46:26,838
probably should be running it this way

1058
00:46:24,568 --> 00:46:30,358
am I missing something here

1059
00:46:26,838 --> 00:46:32,308
oops arena so if you look it's like if

1060
00:46:30,358 --> 00:46:36,679
we don't have a free block we put one on

1061
00:46:32,309 --> 00:46:36,680
there right and otherwise we

1062
00:46:39,449 --> 00:46:49,839
right otherwise we grab it questions the

1063
00:46:46,239 --> 00:46:51,839
otherwise then we always grab it that

1064
00:46:49,840 --> 00:46:58,329
seems right to me

1065
00:46:51,840 --> 00:47:01,000
probably anyway there you go mm-hmm so

1066
00:46:58,329 --> 00:47:03,279
we dq1 here and then we need to do the

1067
00:47:01,000 --> 00:47:06,849
initialize I don't remember what it's

1068
00:47:03,280 --> 00:47:09,640
called here it's like a clear world

1069
00:47:06,849 --> 00:47:11,529
entity block so we want to do a clear

1070
00:47:09,639 --> 00:47:13,449
world entity block on this new block

1071
00:47:11,530 --> 00:47:15,220
because it just has garbage whatever was

1072
00:47:13,449 --> 00:47:18,039
in there when we threw it away before

1073
00:47:15,219 --> 00:47:20,259
right so we want to clear that block and

1074
00:47:18,039 --> 00:47:24,009
then we want to pack into the block

1075
00:47:20,260 --> 00:47:26,200
right so this is what we do if we need

1076
00:47:24,010 --> 00:47:28,630
more space if we don't need more space

1077
00:47:26,199 --> 00:47:29,919
then we go ahead and continue now what

1078
00:47:28,630 --> 00:47:32,470
we could do is we can throw an assertion

1079
00:47:29,920 --> 00:47:34,240
in here we could say like hey after all

1080
00:47:32,469 --> 00:47:37,259
that funny business let's at least

1081
00:47:34,239 --> 00:47:39,819
verify that whatever we were about to do

1082
00:47:37,260 --> 00:47:41,950
does work now like we actually did get

1083
00:47:39,820 --> 00:47:44,410
the size the space we needed if we

1084
00:47:41,949 --> 00:47:47,649
needed space okay

1085
00:47:44,409 --> 00:47:49,599
so now I need to do my pack so here's my

1086
00:47:47,650 --> 00:47:51,849
destination pointer my destination

1087
00:47:49,599 --> 00:47:54,460
pointer is just the entity data plus

1088
00:47:51,849 --> 00:47:57,099
whatever the current size is so there we

1089
00:47:54,460 --> 00:47:58,599
go and I can kind of cast that right to

1090
00:47:57,099 --> 00:48:00,489
it to the entity I can say that's where

1091
00:47:58,599 --> 00:48:03,059
I'm going to store it then what I can do

1092
00:48:00,489 --> 00:48:05,829
is say well the chunk entity data size

1093
00:48:03,059 --> 00:48:07,750
I'm going to add however much I packed

1094
00:48:05,829 --> 00:48:09,219
on there right so I've advanced it's

1095
00:48:07,750 --> 00:48:12,190
like an arena I just kind of push on to

1096
00:48:09,219 --> 00:48:14,319
it right I did that push and now I'm

1097
00:48:12,190 --> 00:48:16,030
done all I need to do is my actual copy

1098
00:48:14,320 --> 00:48:17,289
so I could do my copy because we're not

1099
00:48:16,030 --> 00:48:19,359
actually packing normally this would be

1100
00:48:17,289 --> 00:48:21,009
the step right actually pack but here

1101
00:48:19,358 --> 00:48:24,190
instead because I'm just copying the

1102
00:48:21,010 --> 00:48:25,510
enemy directly in off you go right and

1103
00:48:24,190 --> 00:48:27,340
we could make this even a little closer

1104
00:48:25,510 --> 00:48:31,119
to what we're really expecting something

1105
00:48:27,340 --> 00:48:32,730
more like this right and then it's only

1106
00:48:31,119 --> 00:48:35,200
here where we actually do the cast

1107
00:48:32,730 --> 00:48:37,119
because later we'll just be packing so

1108
00:48:35,199 --> 00:48:38,589
we won't it won't be an entity struct

1109
00:48:37,119 --> 00:48:40,329
it'll just be partially an instructor

1110
00:48:38,590 --> 00:48:43,750
when we get to that phase of things

1111
00:48:40,329 --> 00:48:46,569
right so that's how can entity into

1112
00:48:43,750 --> 00:48:49,449
world would work and similarly what we

1113
00:48:46,570 --> 00:48:51,930
can do in here is if we want to avoid

1114
00:48:49,449 --> 00:48:56,519
the the lookup pack entity

1115
00:48:51,929 --> 00:48:58,259
into chunk like I was saying this can be

1116
00:48:56,519 --> 00:48:59,699
two phases because you can see where we

1117
00:48:58,260 --> 00:49:01,710
looked up the chunk and then we packed

1118
00:48:59,699 --> 00:49:03,838
into the chunk so what I can do is make

1119
00:49:01,710 --> 00:49:05,010
this a separate phase here and that way

1120
00:49:03,838 --> 00:49:06,568
in the future if people want to

1121
00:49:05,010 --> 00:49:08,670
accelerate that process and not hit the

1122
00:49:06,568 --> 00:49:10,619
hash all the time they can do that very

1123
00:49:08,670 --> 00:49:12,599
simply by bypassing it if they already

1124
00:49:10,619 --> 00:49:14,369
know what the chunk is and so that's

1125
00:49:12,599 --> 00:49:18,630
kind of nice so I'll call PAC entity

1126
00:49:14,369 --> 00:49:20,039
into chunk here passing the world the

1127
00:49:18,630 --> 00:49:21,778
same entity and then instead of the

1128
00:49:20,039 --> 00:49:23,069
position at you just pass the chunk

1129
00:49:21,778 --> 00:49:29,699
you're like this is the chunk I wanted

1130
00:49:23,068 --> 00:49:31,949
to pack to write okay so this takes the

1131
00:49:29,699 --> 00:49:40,409
world the entity and you and I might

1132
00:49:31,949 --> 00:49:41,788
call this source instead of entity so

1133
00:49:40,409 --> 00:49:43,288
that it's clear what's the source and

1134
00:49:41,789 --> 00:49:46,589
what's the destination of the packing

1135
00:49:43,289 --> 00:49:48,270
process right because they're both

1136
00:49:46,588 --> 00:49:50,429
representations in anyone's a pact and

1137
00:49:48,269 --> 00:49:52,440
anyone's a unpacked entity and so right

1138
00:49:50,429 --> 00:49:54,419
you know it seems reasonable all right

1139
00:49:52,440 --> 00:49:58,139
so PAC entity into world that's what we

1140
00:49:54,420 --> 00:49:59,670
need in tubes and it just passes the

1141
00:49:58,139 --> 00:50:03,088
chunk in and then once we have the chunk

1142
00:49:59,670 --> 00:50:05,130
and here we know that we can execute

1143
00:50:03,088 --> 00:50:07,078
without having to hit the hash we just

1144
00:50:05,130 --> 00:50:10,039
pack on to that first chunk and if we

1145
00:50:07,079 --> 00:50:12,269
need to we can push it down again right

1146
00:50:10,039 --> 00:50:18,470
in fact you know what I was just

1147
00:50:12,269 --> 00:50:23,849
realizing though that's not quite enough

1148
00:50:18,469 --> 00:50:29,578
because this I I didn't actually do the

1149
00:50:23,849 --> 00:50:32,130
I didn't actually do this part I missed

1150
00:50:29,579 --> 00:50:33,390
one layer so what I actually need to do

1151
00:50:32,130 --> 00:50:35,130
when we get the chunk here this is

1152
00:50:33,389 --> 00:50:38,848
actually supposed to be this is actually

1153
00:50:35,130 --> 00:50:40,318
supposed to be on the block oops so what

1154
00:50:38,849 --> 00:50:43,010
I actually meant to do was grab the

1155
00:50:40,318 --> 00:50:43,009
block out here

1156
00:50:48,778 --> 00:50:55,380
and oh okay so we finally gotten to a

1157
00:50:53,130 --> 00:50:57,690
place where I care about the Pointer so

1158
00:50:55,380 --> 00:51:00,088
if I want to constantly do push down

1159
00:50:57,690 --> 00:51:02,309
right if I want to basically fill it up

1160
00:51:00,088 --> 00:51:04,170
and then move it out I can't do that

1161
00:51:02,309 --> 00:51:06,298
unless this is a pointer I will have to

1162
00:51:04,170 --> 00:51:09,778
keep a second pointer here that tells me

1163
00:51:06,298 --> 00:51:12,059
where the last one was right so I think

1164
00:51:09,778 --> 00:51:15,358
that finally answers the question for me

1165
00:51:12,059 --> 00:51:17,880
of what I actually want to do and I

1166
00:51:15,358 --> 00:51:24,088
think the answer is I want first block

1167
00:51:17,880 --> 00:51:28,950
to to be a pointer right I think that's

1168
00:51:24,088 --> 00:51:32,690
I think that's clear right you want that

1169
00:51:28,949 --> 00:51:35,639
to look like this if that makes sense

1170
00:51:32,690 --> 00:51:37,528
because otherwise what am I gonna do I

1171
00:51:35,639 --> 00:51:39,598
don't want to chase that pointer every

1172
00:51:37,528 --> 00:51:42,329
time I don't want have to walk it to the

1173
00:51:39,599 --> 00:51:44,970
end so it does seem to me that that's

1174
00:51:42,329 --> 00:51:46,890
just better even though it's wfq we're

1175
00:51:44,969 --> 00:51:48,598
gonna have to dereference anyway as that

1176
00:51:46,889 --> 00:51:51,838
thing fills up I think that's probably

1177
00:51:48,599 --> 00:51:53,700
what you want the other thing to do is

1178
00:51:51,838 --> 00:51:56,068
somehow try to mix this with the hash

1179
00:51:53,699 --> 00:51:57,929
and I don't know what I think about that

1180
00:51:56,068 --> 00:52:00,389
but you could imagine doing it that way

1181
00:51:57,929 --> 00:52:02,098
right like what we could do instead is

1182
00:52:00,389 --> 00:52:04,288
actually just say anything in this

1183
00:52:02,099 --> 00:52:06,890
bucket that matches the hash and you

1184
00:52:04,289 --> 00:52:10,489
walk through and you pull those out I

1185
00:52:06,889 --> 00:52:10,489
don't know what to think about that

1186
00:52:12,139 --> 00:52:18,319
doesn't seem great to me

1187
00:52:15,409 --> 00:52:19,759
I guess is what I'd say so I think that

1188
00:52:18,320 --> 00:52:22,700
is actually the way that I would prefer

1189
00:52:19,760 --> 00:52:25,430
it if that if that makes sense

1190
00:52:22,699 --> 00:52:29,599
so what I'll say here is you know we're

1191
00:52:25,429 --> 00:52:31,399
gonna pull this block out we'll take a

1192
00:52:29,599 --> 00:52:32,900
look at the first block I haven't got

1193
00:52:31,400 --> 00:52:36,650
much time left in about five minutes or

1194
00:52:32,900 --> 00:52:40,610
so so we'll pull that block out and then

1195
00:52:36,650 --> 00:52:45,950
I'll say hey if we don't if there is no

1196
00:52:40,610 --> 00:52:50,480
block right or I can't fit right this

1197
00:52:45,949 --> 00:52:52,849
thing doesn't actually fit then I need

1198
00:52:50,480 --> 00:52:54,949
to do I got to do the action right then

1199
00:52:52,849 --> 00:53:03,710
I got to say all right let's grab this

1200
00:52:54,949 --> 00:53:05,269
block out here and and then what I need

1201
00:53:03,710 --> 00:53:08,840
to do is I need to push it onto the

1202
00:53:05,269 --> 00:53:10,670
stack basically right and I could sort

1203
00:53:08,840 --> 00:53:12,559
of even make this be a little bit more

1204
00:53:10,670 --> 00:53:13,730
explicit by just using chunk first block

1205
00:53:12,559 --> 00:53:16,130
and not actually having block as a

1206
00:53:13,730 --> 00:53:19,490
pointer at all if I want to write I

1207
00:53:16,130 --> 00:53:23,720
could say if not you know chop that

1208
00:53:19,489 --> 00:53:29,119
chunk first block and you know what I

1209
00:53:23,719 --> 00:53:34,250
could do here has write a bool 32 of has

1210
00:53:29,119 --> 00:53:40,519
room for which would take a world entity

1211
00:53:34,250 --> 00:53:44,929
block and a size and figure out whether

1212
00:53:40,519 --> 00:53:47,000
or not it could fit right and that would

1213
00:53:44,929 --> 00:53:48,649
just be this and the reason that I like

1214
00:53:47,000 --> 00:53:50,300
that as well is because it's easier to

1215
00:53:48,650 --> 00:53:52,280
see what's going on and I can call it

1216
00:53:50,300 --> 00:53:58,010
the same for the assertion right so I

1217
00:53:52,280 --> 00:54:03,110
can say has room for pack size and here

1218
00:53:58,010 --> 00:54:05,000
is my block chunk first block and then

1219
00:54:03,110 --> 00:54:07,070
when we start will always just say okay

1220
00:54:05,000 --> 00:54:12,699
what we're packing into here is always

1221
00:54:07,070 --> 00:54:12,700
the chunk first block okay

1222
00:54:12,960 --> 00:54:17,829
so that's good all right so let's push

1223
00:54:15,579 --> 00:54:19,690
forward on that a little bit so here is

1224
00:54:17,829 --> 00:54:22,389
the results the result of this function

1225
00:54:19,690 --> 00:54:23,110
is going to be if whatever the block you

1226
00:54:22,389 --> 00:54:24,549
pass me

1227
00:54:23,110 --> 00:54:25,900
well it's the same thing that we were

1228
00:54:24,550 --> 00:54:28,360
doing before right it's the exact same

1229
00:54:25,900 --> 00:54:30,730
thing and so all I'm gonna do is say if

1230
00:54:28,360 --> 00:54:32,380
it has room for is gonna be phrased that

1231
00:54:30,730 --> 00:54:34,960
way so it has to be less than or equal

1232
00:54:32,380 --> 00:54:38,050
to right and then I'm going to return it

1233
00:54:34,960 --> 00:54:40,000
so in here we're gonna say if if there's

1234
00:54:38,050 --> 00:54:42,130
no first block or if the first block

1235
00:54:40,000 --> 00:54:43,929
doesn't have room then what we're gonna

1236
00:54:42,130 --> 00:54:46,210
do is we're gonna pack and we're gonna

1237
00:54:43,929 --> 00:54:47,019
do that like this by first I'm sorry

1238
00:54:46,210 --> 00:54:48,340
then what we're gonna do is we're gonna

1239
00:54:47,019 --> 00:54:50,110
make a new one we're gonna do that by

1240
00:54:48,340 --> 00:54:51,640
either getting one out of the arena or

1241
00:54:50,110 --> 00:54:55,570
grabbing it from the FreeStore whichever

1242
00:54:51,639 --> 00:54:57,519
one will actually satisfy us in the case

1243
00:54:55,570 --> 00:54:59,950
the arena's like the secondary fallback

1244
00:54:57,519 --> 00:55:02,019
right so then we grab out whatever the

1245
00:54:59,949 --> 00:55:07,210
first block actually is we come in here

1246
00:55:02,019 --> 00:55:10,389
to these sort of pack size things this I

1247
00:55:07,210 --> 00:55:12,699
can now replace with the has room for of

1248
00:55:10,389 --> 00:55:14,889
the block and I can text it with the

1249
00:55:12,699 --> 00:55:16,629
pack size to verify that that works then

1250
00:55:14,889 --> 00:55:17,319
we go ahead and say if we can pack it

1251
00:55:16,630 --> 00:55:18,700
into this block

1252
00:55:17,320 --> 00:55:20,050
well actually guess we know we can pack

1253
00:55:18,699 --> 00:55:23,679
into this block so let's find the

1254
00:55:20,050 --> 00:55:25,150
location and then do the actual pack and

1255
00:55:23,679 --> 00:55:30,849
this this records the fact that we use

1256
00:55:25,150 --> 00:55:32,619
that much space to me so that's it and

1257
00:55:30,849 --> 00:55:34,179
that all seems pretty good now we're

1258
00:55:32,619 --> 00:55:38,170
gonna have to modify our get world chunk

1259
00:55:34,179 --> 00:55:41,500
a little bit here excuse me because our

1260
00:55:38,170 --> 00:55:47,170
get world chunk now has to have this

1261
00:55:41,500 --> 00:55:49,329
notion that there is a first three block

1262
00:55:47,170 --> 00:55:51,130
pointer now I don't actually think

1263
00:55:49,329 --> 00:55:54,250
that's necessary to do pretty much

1264
00:55:51,130 --> 00:55:57,070
anything other than setting its pointer

1265
00:55:54,250 --> 00:55:58,840
to zero on an it in here I think that's

1266
00:55:57,070 --> 00:56:00,220
all that actually has to happen so it's

1267
00:55:58,840 --> 00:56:02,500
really really simple not very much

1268
00:56:00,219 --> 00:56:05,589
difficulty whether we want to now switch

1269
00:56:02,500 --> 00:56:07,329
it so that the world chunk is like

1270
00:56:05,590 --> 00:56:09,490
whether we want to now get rid of this

1271
00:56:07,329 --> 00:56:11,619
pointer I don't know

1272
00:56:09,489 --> 00:56:14,919
right we may want to we may not want to

1273
00:56:11,619 --> 00:56:16,190
I'm I'm just not sure which we want to

1274
00:56:14,920 --> 00:56:19,579
do there I

1275
00:56:16,190 --> 00:56:20,720
it's hard to say I suspect we'll just

1276
00:56:19,579 --> 00:56:21,949
leave it as a pointer for now and we'll

1277
00:56:20,719 --> 00:56:23,480
see if whether we have performance

1278
00:56:21,949 --> 00:56:24,409
issues in the future and only change it

1279
00:56:23,480 --> 00:56:27,230
then because the point is gonna be

1280
00:56:24,409 --> 00:56:29,089
easier to work with all right so I think

1281
00:56:27,230 --> 00:56:33,820
that's everything four pack entity into

1282
00:56:29,090 --> 00:56:33,820
chunk let's take a look

1283
00:56:34,670 --> 00:56:40,059
block equals first free block actually

1284
00:56:38,090 --> 00:56:43,340
so what I'm doing is chunk first block

1285
00:56:40,059 --> 00:56:53,389
equals world first free block there we

1286
00:56:43,340 --> 00:56:56,809
go there we go okay the entity here in

1287
00:56:53,389 --> 00:56:59,509
this case is source not entity and so

1288
00:56:56,809 --> 00:57:01,730
now let's see initializing reinterpret

1289
00:56:59,510 --> 00:57:04,730
cast a buck fears okay so it looks like

1290
00:57:01,730 --> 00:57:06,920
mostly now we are in good shape because

1291
00:57:04,730 --> 00:57:09,440
now all we have to do is implement the

1292
00:57:06,920 --> 00:57:11,950
part where we pull the things out right

1293
00:57:09,440 --> 00:57:15,619
and that's again not super difficult

1294
00:57:11,949 --> 00:57:18,109
inside world here we have to have things

1295
00:57:15,619 --> 00:57:20,119
for adding we need these two functions

1296
00:57:18,110 --> 00:57:25,820
basically right we need add block to

1297
00:57:20,119 --> 00:57:34,609
free list and look at all the pretty

1298
00:57:25,820 --> 00:57:37,670
colors and adjunct free list so in this

1299
00:57:34,610 --> 00:57:42,579
case here is internal void add buck to

1300
00:57:37,670 --> 00:57:48,260
this internal void chunk to free list so

1301
00:57:42,579 --> 00:57:51,110
so we've got our world this is honestly

1302
00:57:48,260 --> 00:57:52,780
an inline because this is really really

1303
00:57:51,110 --> 00:57:56,800
straightforward

1304
00:57:52,780 --> 00:57:56,800
so we have our world pointer

1305
00:57:57,780 --> 00:58:06,240
and we now have this world entity block

1306
00:58:03,230 --> 00:58:08,099
that's like some old thing we want to to

1307
00:58:06,239 --> 00:58:11,069
free and so all we have to do there say

1308
00:58:08,099 --> 00:58:14,190
well the old next just equals same thing

1309
00:58:11,070 --> 00:58:18,870
we do all the time equals the first free

1310
00:58:14,190 --> 00:58:23,610
block and and then the world first free

1311
00:58:18,869 --> 00:58:25,190
block equals the old right same old same

1312
00:58:23,610 --> 00:58:27,150
old

1313
00:58:25,190 --> 00:58:28,650
really boring like I said if you've got

1314
00:58:27,150 --> 00:58:31,769
any meta programming in the language

1315
00:58:28,650 --> 00:58:35,820
you're using you can trivially you can

1316
00:58:31,769 --> 00:58:38,280
metaphor met a program of a free list

1317
00:58:35,820 --> 00:58:40,830
style allocator it's so so simple right

1318
00:58:38,280 --> 00:58:43,170
you can kind of see how that works but

1319
00:58:40,829 --> 00:58:47,429
anyway so four world chunks same thing

1320
00:58:43,170 --> 00:58:48,990
for each chunk and the reason you view

1321
00:58:47,429 --> 00:58:50,129
that is just because it's not like it's

1322
00:58:48,989 --> 00:58:51,809
hard to type this but I might make a

1323
00:58:50,130 --> 00:58:53,280
mistake right like anytime I type that

1324
00:58:51,809 --> 00:58:55,289
in I might make a mistake on how the

1325
00:58:53,280 --> 00:58:56,400
free this works so that's the reason you

1326
00:58:55,289 --> 00:58:57,389
met a partner to us like it's only two

1327
00:58:56,400 --> 00:58:59,610
lines of code so you're not really

1328
00:58:57,389 --> 00:59:02,069
you're certainly not saving any effort

1329
00:58:59,610 --> 00:59:03,450
but it's that mistake if that error

1330
00:59:02,070 --> 00:59:05,700
prone it's like oh did I mess up the

1331
00:59:03,449 --> 00:59:07,559
free list right that's that's why you

1332
00:59:05,699 --> 00:59:10,949
better program those things so that you

1333
00:59:07,559 --> 00:59:13,320
can reuse them that way anyway so in

1334
00:59:10,949 --> 00:59:15,719
remove world chunk we haven't touched

1335
00:59:13,320 --> 00:59:18,900
that one yet this one where we do world

1336
00:59:15,719 --> 00:59:21,000
that ID block for this first block thing

1337
00:59:18,900 --> 00:59:22,740
for this one now we can do this the way

1338
00:59:21,000 --> 00:59:25,019
that I had said that I wanted to do it

1339
00:59:22,739 --> 00:59:32,849
before so instead what I can do now is

1340
00:59:25,019 --> 00:59:35,369
say all right let's do a let's just DQ

1341
00:59:32,849 --> 00:59:36,750
it directly here and I guess I don't

1342
00:59:35,369 --> 00:59:37,650
have to do anything else that that is

1343
00:59:36,750 --> 00:59:40,110
what it is

1344
00:59:37,650 --> 00:59:43,559
I can just make this more

1345
00:59:40,110 --> 00:59:46,110
straightforward and be done right so

1346
00:59:43,559 --> 00:59:48,480
that's good all right so all we need now

1347
00:59:46,110 --> 00:59:50,309
is a remove world chunk so hey you know

1348
00:59:48,480 --> 00:59:51,510
I'll take I'll go a little over time and

1349
00:59:50,309 --> 00:59:53,039
we're basically we are out of time

1350
00:59:51,510 --> 00:59:54,420
technically at the moment we'll go a

1351
00:59:53,039 --> 00:59:56,789
little more time just so I can type it

1352
00:59:54,420 --> 00:59:58,619
in and then that way next week we can

1353
00:59:56,789 --> 01:00:00,889
start with all of our changes having

1354
00:59:58,619 --> 01:00:02,789
been made and then we can just focus on

1355
01:00:00,889 --> 01:00:04,379
actually like getting everything to work

1356
01:00:02,789 --> 01:00:07,529
right doing the debugging and that sort

1357
01:00:04,380 --> 01:00:09,840
of stuff and that'll be nice so here we

1358
01:00:07,530 --> 01:00:11,790
go here's my remove world shock now

1359
01:00:09,840 --> 01:00:15,420
remove world chunk is basically this

1360
01:00:11,789 --> 01:00:17,849
code for all intents and purposes as the

1361
01:00:15,420 --> 01:00:21,360
get world shop code right so this code

1362
01:00:17,849 --> 01:00:22,829
right here so what we need to do is we

1363
01:00:21,360 --> 01:00:26,130
need to just make it work slightly

1364
01:00:22,829 --> 01:00:27,659
differently when it the the reason we

1365
01:00:26,130 --> 01:00:28,800
can't just call it directly and the

1366
01:00:27,659 --> 01:00:33,899
reason we're gonna have to modify these

1367
01:00:28,800 --> 01:00:38,840
a little bit is removing the world chunk

1368
01:00:33,900 --> 01:00:43,139
requires knowing the in pointer right

1369
01:00:38,840 --> 01:00:45,120
and I'll show you why so let's say I was

1370
01:00:43,139 --> 01:00:46,619
to call get world chunk right here

1371
01:00:45,119 --> 01:00:48,779
because I want to remove the world chunk

1372
01:00:46,619 --> 01:00:51,989
so hey I know I can reuse this code I

1373
01:00:48,780 --> 01:00:53,970
can say hey world chunk you know chunk

1374
01:00:51,989 --> 01:00:56,309
equals get world chunk and I can just

1375
01:00:53,969 --> 01:01:00,109
pass I've got all of the exact data that

1376
01:00:56,309 --> 01:01:00,110
I would have needed right it's all here

1377
01:01:00,199 --> 01:01:07,589
so that'll work right but the problem is

1378
01:01:03,659 --> 01:01:12,059
now how do I actually get it out of the

1379
01:01:07,590 --> 01:01:13,440
hash chain right I can't I can't

1380
01:01:12,059 --> 01:01:15,929
actually get it out of the hash chain

1381
01:01:13,440 --> 01:01:18,300
because the person who's pointing to it

1382
01:01:15,929 --> 01:01:20,969
is before it I don't have a previous

1383
01:01:18,300 --> 01:01:22,500
pointer but I would have had the

1384
01:01:20,969 --> 01:01:26,009
previous pointer if I implemented this

1385
01:01:22,500 --> 01:01:30,329
loop myself so really all I have to do

1386
01:01:26,010 --> 01:01:34,650
is say okay get world chunk as it stands

1387
01:01:30,329 --> 01:01:42,139
before right let's grab out this part of

1388
01:01:34,650 --> 01:01:50,539
the code and instead let's actually call

1389
01:01:42,139 --> 01:01:55,670
get world chunk internal or something

1390
01:01:50,539 --> 01:01:58,219
now when I've got that code and what I'm

1391
01:01:55,670 --> 01:01:59,960
going to do is I'm going to modify what

1392
01:01:58,219 --> 01:02:03,619
it returns so that I do have the in

1393
01:01:59,960 --> 01:02:05,750
pointer right so here we go let me just

1394
01:02:03,619 --> 01:02:08,719
show you what I'm talking about so in

1395
01:02:05,750 --> 01:02:09,920
here I'm gonna I'm gonna make this my

1396
01:02:08,719 --> 01:02:11,779
new get world chunk that every one the

1397
01:02:09,920 --> 01:02:12,920
outside calls this is a very standard

1398
01:02:11,780 --> 01:02:14,630
technique right you've got some people

1399
01:02:12,920 --> 01:02:16,130
flowing into an entrance point and I'm

1400
01:02:14,630 --> 01:02:18,170
just pushing the actual internals of

1401
01:02:16,130 --> 01:02:20,420
that down one layer so I can have two

1402
01:02:18,170 --> 01:02:23,090
entry points that both use its logic but

1403
01:02:20,420 --> 01:02:26,119
do different things on the outside so

1404
01:02:23,090 --> 01:02:28,329
this is get world chunk and so now in

1405
01:02:26,119 --> 01:02:32,809
order to get the chunk I need to call

1406
01:02:28,329 --> 01:02:36,940
right get world chunk eternal and I'm

1407
01:02:32,809 --> 01:02:36,940
passing the same parameters saans arena

1408
01:02:38,710 --> 01:02:45,019
right and the problem is now you can see

1409
01:02:42,889 --> 01:02:47,420
all of the the same issues that occur

1410
01:02:45,019 --> 01:02:49,550
here I can do all the work right up into

1411
01:02:47,420 --> 01:02:52,340
the point where I needed to know what

1412
01:02:49,550 --> 01:02:54,050
was my end pointer right so all I'm

1413
01:02:52,340 --> 01:02:56,300
gonna do is say from now on instead of

1414
01:02:54,050 --> 01:02:59,870
returning the actual pointer to the

1415
01:02:56,300 --> 01:03:02,800
chunk I'm going to return a pointer to

1416
01:02:59,869 --> 01:03:07,489
where it's pointer would have been right

1417
01:03:02,800 --> 01:03:09,140
so I'm going to say hey let's find the

1418
01:03:07,489 --> 01:03:10,519
person who would have pointed to the

1419
01:03:09,139 --> 01:03:15,400
correct chunk which tells you both

1420
01:03:10,519 --> 01:03:18,619
things you needed to know so here's my

1421
01:03:15,400 --> 01:03:23,000
here's my iterator right over the chunks

1422
01:03:18,619 --> 01:03:26,389
and here's my result

1423
01:03:23,000 --> 01:03:28,639
so instead same exact loop all I'm gonna

1424
01:03:26,389 --> 01:03:31,369
do now is instead I'm gonna use the

1425
01:03:28,639 --> 01:03:33,289
ampersand for those pointers and I'm

1426
01:03:31,369 --> 01:03:38,199
going to look at the dereferenced

1427
01:03:33,289 --> 01:03:41,929
version right that's it

1428
01:03:38,199 --> 01:03:44,899
so now it's always using a pointer to

1429
01:03:41,929 --> 01:03:49,639
the pointer to find it and then when it

1430
01:03:44,900 --> 01:03:51,519
returns it gives it back right actually

1431
01:03:49,639 --> 01:03:55,879
that's that's all we need there

1432
01:03:51,519 --> 01:03:56,420
makes sense so now in here when we come

1433
01:03:55,880 --> 01:04:00,470
back

1434
01:03:56,420 --> 01:04:05,329
I've got chunk pointer right and I can

1435
01:04:00,469 --> 01:04:08,048
dereference it and what I can say is

1436
01:04:05,329 --> 01:04:11,030
well well in fact I can just say result

1437
01:04:08,048 --> 01:04:14,509
what I can say is okay if results isn't

1438
01:04:11,030 --> 01:04:16,819
valid I do all the same things I doing

1439
01:04:14,510 --> 01:04:18,500
before but now I have the actual

1440
01:04:16,818 --> 01:04:22,599
information that I actually wanted here

1441
01:04:18,500 --> 01:04:25,969
I want to know what was in the slot that

1442
01:04:22,599 --> 01:04:28,940
was my in pointer what was it

1443
01:04:25,969 --> 01:04:31,879
right and I want I want to know what was

1444
01:04:28,940 --> 01:04:36,318
there so I just dereference what was in

1445
01:04:31,880 --> 01:04:43,670
that pointer right if that makes sense

1446
01:04:36,318 --> 01:04:45,409
and try to think about this this is

1447
01:04:43,670 --> 01:04:46,760
slightly different in the way that it

1448
01:04:45,409 --> 01:04:48,139
worked and that this adds to the end

1449
01:04:46,760 --> 01:04:51,530
instead of the beginning now but I don't

1450
01:04:48,139 --> 01:04:55,000
think we care right in fact I don't know

1451
01:04:51,530 --> 01:04:57,500
why we would care we don't care right

1452
01:04:55,000 --> 01:04:59,298
and similarly I'm just going to go ahead

1453
01:04:57,500 --> 01:05:01,730
and put the tail on here I can just say

1454
01:04:59,298 --> 01:05:04,400
well whatever that was in that slot

1455
01:05:01,730 --> 01:05:05,780
before I'm gonna make that point to me

1456
01:05:04,400 --> 01:05:07,250
now so it's exactly the same thing

1457
01:05:05,780 --> 01:05:10,579
because now we have the information to

1458
01:05:07,250 --> 01:05:13,809
do it for remove world chunk same exact

1459
01:05:10,579 --> 01:05:17,089
thing I now have a pointer to a pointer

1460
01:05:13,809 --> 01:05:23,089
so what I want to do is save what was

1461
01:05:17,088 --> 01:05:30,048
there as my result because that's what

1462
01:05:23,088 --> 01:05:33,759
the person needs to know right but now

1463
01:05:30,048 --> 01:05:36,769
that actual pointer wants to be modified

1464
01:05:33,760 --> 01:05:40,160
so I wanted then take what was in that

1465
01:05:36,769 --> 01:05:43,219
slot and I want to leapfrog it over the

1466
01:05:40,159 --> 01:05:49,039
one I actually grabbed removing it from

1467
01:05:43,219 --> 01:05:51,489
the list does that make sense hopefully

1468
01:05:49,039 --> 01:05:51,489
it does

1469
01:05:54,750 --> 01:06:08,949
okay and got a return my results so I

1470
01:06:07,239 --> 01:06:10,719
know that's a little complicated and

1471
01:06:08,949 --> 01:06:13,179
like I said we're done now so let's run

1472
01:06:10,719 --> 01:06:19,869
it and let it crash and burn because it

1473
01:06:13,179 --> 01:06:21,039
will and then we will go and and the

1474
01:06:19,869 --> 01:06:24,130
Baron well I guess this one's probably

1475
01:06:21,039 --> 01:06:29,650
simple to bug the my always I always

1476
01:06:24,130 --> 01:06:32,380
like can't help but debug right so right

1477
01:06:29,650 --> 01:06:34,869
that makes perfect sense I no longer

1478
01:06:32,380 --> 01:06:37,570
want to ever return zero in this case

1479
01:06:34,869 --> 01:06:40,679
right I always want to return whatever

1480
01:06:37,570 --> 01:06:43,240
the world chunk is so this is really I

1481
01:06:40,679 --> 01:06:45,219
always want to return that in pointer

1482
01:06:43,239 --> 01:06:47,609
because there's always a valid in

1483
01:06:45,219 --> 01:06:47,609
pointer

1484
01:06:58,719 --> 01:07:01,439
voila

1485
01:07:03,369 --> 01:07:21,010
in fact I guess this is now not even

1486
01:07:07,199 --> 01:07:23,379
right this is actually this poops this

1487
01:07:21,010 --> 01:07:26,220
is just saying hey while there's a chunk

1488
01:07:23,380 --> 01:07:36,010
and it's not the chunk we're looking for

1489
01:07:26,219 --> 01:07:43,858
indentation read Vance do we have the

1490
01:07:36,010 --> 01:07:46,450
right number of parentheses no all right

1491
01:07:43,858 --> 01:07:48,429
so sorry now we can let it crash and

1492
01:07:46,449 --> 01:07:52,689
burn there we go that's what we actually

1493
01:07:48,429 --> 01:07:54,098
wanted to see happen and hey that caught

1494
01:07:52,690 --> 01:07:59,769
a buck did that catch a bug creation

1495
01:07:54,099 --> 01:08:01,690
buffer locked ad player yeah we tried to

1496
01:07:59,769 --> 01:08:04,269
create two entities at the same time

1497
01:08:01,690 --> 01:08:07,869
which we don't support see caught a bug

1498
01:08:04,269 --> 01:08:09,849
how good is that how good is that I

1499
01:08:07,869 --> 01:08:16,869
could fix that one too while we're at it

1500
01:08:09,849 --> 01:08:20,980
I suppose ad player but because these

1501
01:08:16,869 --> 01:08:24,159
both these are to begin about these

1502
01:08:20,979 --> 01:08:26,829
things so I mean I feel like I just want

1503
01:08:24,159 --> 01:08:32,738
to support that kind of to be honest so

1504
01:08:26,829 --> 01:08:35,019
I don't know like you know maybe I want

1505
01:08:32,738 --> 01:08:38,579
to support creating multiple of these

1506
01:08:35,020 --> 01:08:38,580
entities at the same time you know

1507
01:08:44,219 --> 01:08:50,399
could imagine something like this right

1508
01:08:47,329 --> 01:08:52,229
where I like let you use a couple there

1509
01:08:50,399 --> 01:08:53,638
on in off you go

1510
01:08:52,229 --> 01:08:56,009
now you could just do it with temporary

1511
01:08:53,639 --> 01:08:58,650
memory - now I think about it why did I

1512
01:08:56,009 --> 01:09:00,238
even do that why did I even do it that

1513
01:08:58,649 --> 01:09:03,349
way you could just push it on the

1514
01:09:00,238 --> 01:09:03,349
transient arena and go

1515
01:09:04,158 --> 01:09:15,539
so that's arguably perhaps a little bit

1516
01:09:06,600 --> 01:09:20,969
stupid just in general but yeah yeah

1517
01:09:15,539 --> 01:09:22,560
that's that's uh that's questionable but

1518
01:09:20,969 --> 01:09:32,880
I could totally do it this way right I

1519
01:09:22,560 --> 01:09:38,190
can just do something like this begin

1520
01:09:32,880 --> 01:09:40,409
low entity just does assert rolled mode

1521
01:09:38,189 --> 01:09:46,158
operation buffer index is less than a

1522
01:09:40,408 --> 01:09:53,088
read count world mode creation buffer

1523
01:09:46,158 --> 01:09:53,088
and then I just say world mode

1524
01:10:01,680 --> 01:10:10,329
right and then in here when we do and

1525
01:10:07,840 --> 01:10:16,350
entity we just go like okay the creation

1526
01:10:10,329 --> 01:10:19,090
buffer gets docked and we can also

1527
01:10:16,350 --> 01:10:30,900
assert that once it gets docked that you

1528
01:10:19,090 --> 01:10:42,699
are pointing to the correct one okay

1529
01:10:30,899 --> 01:10:45,250
lovely all right okay so I think yeah

1530
01:10:42,699 --> 01:10:48,189
okay so I think in that case I'm sorry

1531
01:10:45,250 --> 01:10:49,899
I'm kind of just obsessing over like

1532
01:10:48,189 --> 01:10:52,179
since I did all that code I usually like

1533
01:10:49,899 --> 01:10:53,889
to leave it in a good state like I said

1534
01:10:52,180 --> 01:10:55,420
the whole I have to end an hour thing

1535
01:10:53,890 --> 01:10:57,539
you know it's always a little bit of a

1536
01:10:55,420 --> 01:10:59,590
struggle for me because it's if you're

1537
01:10:57,539 --> 01:11:01,720
obsessive programmer you don't like to

1538
01:10:59,590 --> 01:11:03,190
leave something you want to like finish

1539
01:11:01,720 --> 01:11:05,590
it it's just how it is

1540
01:11:03,189 --> 01:11:06,969
you can't I don't know that's just how

1541
01:11:05,590 --> 01:11:10,539
that's just life

1542
01:11:06,970 --> 01:11:11,949
so anyway what I was gonna say is that's

1543
01:11:10,539 --> 01:11:14,079
an easy one to write it's like we

1544
01:11:11,949 --> 01:11:16,238
occasionally don't remove any chunks so

1545
01:11:14,079 --> 01:11:18,760
I was I didn't bother to check to see if

1546
01:11:16,238 --> 01:11:20,500
there were any chunks in there so in

1547
01:11:18,760 --> 01:11:22,180
removed world chunk when we get back our

1548
01:11:20,500 --> 01:11:25,000
chunk pointer what we want to do is say

1549
01:11:22,180 --> 01:11:26,829
hey don't if we're not gonna remove

1550
01:11:25,000 --> 01:11:28,390
anything then don't try to write don't

1551
01:11:26,829 --> 01:11:33,000
try to leapfrog over something that's

1552
01:11:28,390 --> 01:11:36,640
not there right so that's easy as well

1553
01:11:33,000 --> 01:11:39,539
all right so we're good now we're we're

1554
01:11:36,640 --> 01:11:41,710
on a thing where we've got to actually

1555
01:11:39,539 --> 01:11:43,359
we have to actually figure out if there

1556
01:11:41,710 --> 01:11:44,619
are running heroes and all that kind of

1557
01:11:43,359 --> 01:11:45,909
stuff and have the camera like we got it

1558
01:11:44,619 --> 01:11:47,319
we got a bunch of new stuff to do but

1559
01:11:45,909 --> 01:11:50,319
we're running now so we can at least

1560
01:11:47,319 --> 01:11:53,579
leave it in an OK spot and so that's

1561
01:11:50,319 --> 01:11:56,769
good so I'll go ahead to the Q&amp;A and

1562
01:11:53,579 --> 01:11:58,899
while I'm waiting for the Q&amp;A to Q&amp;A

1563
01:11:56,770 --> 01:12:02,950
itself up

1564
01:11:58,899 --> 01:12:06,069
I will also why am i see Mira torii -

1565
01:12:02,949 --> 01:12:10,179
can we talk about why it insists on

1566
01:12:06,069 --> 01:12:13,109
logging me in as see Mira Tori - I don't

1567
01:12:10,180 --> 01:12:13,110
know how to change my name

1568
01:12:14,679 --> 01:12:19,059
why am i see Mira Tori to

1569
01:12:40,319 --> 01:12:53,849
there we go okay okay so what I'm gonna

1570
01:12:49,060 --> 01:12:53,850
say is while I'm waiting for some cues I

1571
01:12:59,100 --> 01:13:07,480
am going to mention what happened with

1572
01:13:03,640 --> 01:13:10,750
that list situation so here is how this

1573
01:13:07,479 --> 01:13:16,959
worked okay well let me show you exactly

1574
01:13:10,750 --> 01:13:20,529
what happened so here's the world right

1575
01:13:16,960 --> 01:13:24,100
and it's got a hash table in it right

1576
01:13:20,529 --> 01:13:26,170
so in here inside it if we were to talk

1577
01:13:24,100 --> 01:13:28,660
about this one part portion here I'm

1578
01:13:26,170 --> 01:13:32,319
going to blow that out here's the hash

1579
01:13:28,659 --> 01:13:35,949
and the hash is a series of pointers so

1580
01:13:32,319 --> 01:13:39,340
each one of these is a pointer right so

1581
01:13:35,949 --> 01:13:41,139
in one of these hash entries there's

1582
01:13:39,340 --> 01:13:47,980
just a pointer and it points out to a

1583
01:13:41,140 --> 01:13:52,500
chunk so here's a chunk and inside this

1584
01:13:47,979 --> 01:13:52,500
chunk we have another pointer to a block

1585
01:13:54,359 --> 01:13:59,019
right now we don't care about this part

1586
01:13:57,430 --> 01:14:02,500
for this so I'm just going to leave it

1587
01:13:59,020 --> 01:14:08,940
out in addition to that we also chained

1588
01:14:02,500 --> 01:14:08,939
these so the chunks keep going

1589
01:14:15,090 --> 01:14:21,670
okay so what I had was a function that

1590
01:14:19,899 --> 01:14:24,129
does the hash lookup and finds the right

1591
01:14:21,670 --> 01:14:26,050
chunk in the chain right because in the

1592
01:14:24,130 --> 01:14:27,940
hash bucket there may be multiple chunks

1593
01:14:26,050 --> 01:14:29,289
that are not the same that are different

1594
01:14:27,939 --> 01:14:31,329
right places in the world and we got to

1595
01:14:29,289 --> 01:14:32,710
find the match so we have a function

1596
01:14:31,329 --> 01:14:34,118
that finds the hash bucket and then it

1597
01:14:32,710 --> 01:14:38,079
looks for the right match in the in the

1598
01:14:34,118 --> 01:14:40,719
external chained hash right now what I

1599
01:14:38,079 --> 01:14:42,908
had was a problem where I was returning

1600
01:14:40,719 --> 01:14:44,529
the actual pointer to the chunk so let's

1601
01:14:42,908 --> 01:14:46,658
say this was the matching chunk I found

1602
01:14:44,529 --> 01:14:49,509
it right well that's just great for

1603
01:14:46,658 --> 01:14:51,279
anyone who wants to use that chunk but

1604
01:14:49,510 --> 01:14:54,550
if what the person wants to do is

1605
01:14:51,279 --> 01:14:55,988
actually remove the chunk they can't

1606
01:14:54,550 --> 01:14:57,909
because the piece of information they

1607
01:14:55,988 --> 01:15:00,009
need to edit is right here and they have

1608
01:14:57,908 --> 01:15:01,598
no pointer that goes back to it so

1609
01:15:00,010 --> 01:15:02,980
instead what I did is I said okay

1610
01:15:01,599 --> 01:15:05,230
instead of giving them back a pointer to

1611
01:15:02,979 --> 01:15:07,899
the chunk I'll give them back a pointer

1612
01:15:05,229 --> 01:15:10,329
to the pointer of the chunk so what I

1613
01:15:07,899 --> 01:15:12,819
did is I start the loop pointing at this

1614
01:15:10,329 --> 01:15:15,429
location so now anyone who wants to know

1615
01:15:12,819 --> 01:15:17,229
if I if the iteration stopped there so I

1616
01:15:15,429 --> 01:15:18,730
check this chunk because right I look at

1617
01:15:17,229 --> 01:15:20,468
what's pointed to and what that's

1618
01:15:18,729 --> 01:15:23,289
pointing to and I look at that chunk and

1619
01:15:20,469 --> 01:15:26,889
if that chunk matches then this is what

1620
01:15:23,289 --> 01:15:28,689
I return is this pointer to here so now

1621
01:15:26,889 --> 01:15:31,118
if the person wants to edit it they have

1622
01:15:28,689 --> 01:15:32,678
that position if I need to advance this

1623
01:15:31,118 --> 01:15:34,839
so this is not the chunk I need to look

1624
01:15:32,679 --> 01:15:38,560
at the next one I make my pointer point

1625
01:15:34,840 --> 01:15:40,599
here so when I return this chunk I

1626
01:15:38,560 --> 01:15:42,699
actually return this location of this

1627
01:15:40,599 --> 01:15:44,500
pointer so that I can both get to the

1628
01:15:42,698 --> 01:15:47,488
chunk by doing referencing it or edit

1629
01:15:44,500 --> 01:15:50,380
what's pointing there by overwriting it

1630
01:15:47,488 --> 01:15:54,388
right so that's why the pointer to the

1631
01:15:50,380 --> 01:15:54,389
pointer hopefully that makes sense

1632
01:16:16,579 --> 01:16:21,449
no even how are you finding Milton I

1633
01:16:19,289 --> 01:16:27,390
didn't catch the start of the stream

1634
01:16:21,449 --> 01:16:29,279
sorry so basically I think the only

1635
01:16:27,390 --> 01:16:32,550
problem with Milton is currently the

1636
01:16:29,279 --> 01:16:34,380
brush tracking it's just not good enough

1637
01:16:32,550 --> 01:16:36,210
yet like the I think it needs like some

1638
01:16:34,380 --> 01:16:37,590
tapering at the end on the pressure it

1639
01:16:36,210 --> 01:16:39,930
needs like a little pressure taper just

1640
01:16:37,590 --> 01:16:41,760
a bit maybe more than it is and it needs

1641
01:16:39,930 --> 01:16:43,829
a higher sampling rate or less lag it's

1642
01:16:41,760 --> 01:16:45,360
just basically the brush handling is the

1643
01:16:43,829 --> 01:16:48,329
only thing that's a problem other than

1644
01:16:45,359 --> 01:16:49,619
that it's way better actually because

1645
01:16:48,329 --> 01:16:54,390
the interface gets out of my way

1646
01:16:49,619 --> 01:16:59,729
trivially which is nice oh that's

1647
01:16:54,390 --> 01:17:01,440
interesting that's interesting tab when

1648
01:16:59,729 --> 01:17:03,449
I when the interface comes back switches

1649
01:17:01,439 --> 01:17:05,429
to tabbing between those two I feel like

1650
01:17:03,449 --> 01:17:07,710
that's probably a bug I should right and

1651
01:17:05,430 --> 01:17:09,450
forth that anyway the interface gets out

1652
01:17:07,710 --> 01:17:11,130
of my way which I like and it handles

1653
01:17:09,449 --> 01:17:13,470
auto savings so I never have to save it

1654
01:17:11,130 --> 01:17:16,770
and wait that big long spinny cursor

1655
01:17:13,470 --> 01:17:19,140
thing so I would say if if Sergio can

1656
01:17:16,770 --> 01:17:21,990
fix the brush handling I would say it's

1657
01:17:19,140 --> 01:17:23,730
a straight win across the board and it's

1658
01:17:21,989 --> 01:17:27,149
it's basically like just straight up

1659
01:17:23,729 --> 01:17:28,229
better than mischief period as for now

1660
01:17:27,149 --> 01:17:29,729
it's a bit of a trade-off because the

1661
01:17:28,229 --> 01:17:32,899
brush handling is not as good that's

1662
01:17:29,729 --> 01:17:32,899
where I'm at so far

1663
01:17:38,109 --> 01:17:42,439
pulse-ox how do you pronounce your name

1664
01:17:40,100 --> 01:17:44,470
Casey Mira Tori is how I pronounce my

1665
01:17:42,439 --> 01:17:44,469
name

1666
01:18:09,929 --> 01:18:14,199
Elvin is the sparsity system the same as

1667
01:18:12,429 --> 01:18:16,510
mix-ins that you mentioned before if not

1668
01:18:14,198 --> 01:18:17,919
are we ever going to use or talk about

1669
01:18:16,510 --> 01:18:21,730
mix-ins I'm really curious as to what

1670
01:18:17,920 --> 01:18:26,739
they are yes so mix-ins it is not a

1671
01:18:21,729 --> 01:18:34,658
technique it's a ability if you will

1672
01:18:26,738 --> 01:18:36,369
like the concept of a mixin is just what

1673
01:18:34,658 --> 01:18:38,138
it kind of sounds like it's like I want

1674
01:18:36,369 --> 01:18:40,420
to be able to combine a bunch of these

1675
01:18:38,139 --> 01:18:43,539
things together arbitrarily at runtime

1676
01:18:40,420 --> 01:18:44,829
right it's exactly what C++ can't do

1677
01:18:43,539 --> 01:18:47,619
right

1678
01:18:44,829 --> 01:18:49,119
C++ at runtime can't say I want this and

1679
01:18:47,619 --> 01:18:51,880
this to be combined or any that sort of

1680
01:18:49,119 --> 01:19:01,599
stuff now you could say that multiple

1681
01:18:51,880 --> 01:19:07,600
inheritance in C++ right is compile time

1682
01:19:01,600 --> 01:19:09,579
mixin which is basically saying at

1683
01:19:07,600 --> 01:19:10,539
compile time I can compose multiple

1684
01:19:09,579 --> 01:19:12,219
things together using modes one here

1685
01:19:10,539 --> 01:19:14,738
it's you of those seamless US has no

1686
01:19:12,219 --> 01:19:16,539
runtime mixing ability that's why we

1687
01:19:14,738 --> 01:19:18,279
implemented ourselves using as for our

1688
01:19:16,539 --> 01:19:21,279
sanity system is my way that I'm going

1689
01:19:18,279 --> 01:19:22,569
to do that there's other ways right like

1690
01:19:21,279 --> 01:19:25,090
I I went over those when I talked about

1691
01:19:22,569 --> 01:19:33,819
the annex parse a system I said hey here

1692
01:19:25,090 --> 01:19:35,679
is you know how you know here is like

1693
01:19:33,819 --> 01:19:37,420
you could keep a list of properties and

1694
01:19:35,679 --> 01:19:40,500
you add and remove them at runtime that

1695
01:19:37,420 --> 01:19:40,500
sort of thing that make sense

1696
01:19:44,269 --> 01:19:53,039
do friend classes count as mix-ins no

1697
01:19:48,109 --> 01:19:54,629
four well first of all a mixin to be

1698
01:19:53,038 --> 01:19:57,328
clear there's there's two things right

1699
01:19:54,628 --> 01:19:58,738
there's compile-time and run-time Frank

1700
01:19:57,328 --> 01:20:00,118
classes and unions obviously are

1701
01:19:58,738 --> 01:20:02,279
compile-time so they don't have anything

1702
01:20:00,118 --> 01:20:03,598
to do with with with a run-time mixin

1703
01:20:02,279 --> 01:20:05,998
which is what we actually want

1704
01:20:03,599 --> 01:20:08,159
we need runtime mixin like we need to be

1705
01:20:05,998 --> 01:20:12,658
able to do runtime combination arbitrary

1706
01:20:08,158 --> 01:20:14,698
combinations of types right so no

1707
01:20:12,658 --> 01:20:16,768
features of C++ help you they are all

1708
01:20:14,698 --> 01:20:18,509
compiled time so they can't do this

1709
01:20:16,769 --> 01:20:21,239
right so you have to implement it

1710
01:20:18,510 --> 01:20:23,010
yourself using you know things that are

1711
01:20:21,238 --> 01:20:24,748
in C++ you need to implement it using

1712
01:20:23,010 --> 01:20:28,099
those you can't use some feature of the

1713
01:20:24,748 --> 01:20:28,099
language if that makes sense

1714
01:20:31,368 --> 01:20:35,668
pulse excavate having to compress the

1715
01:20:34,109 --> 01:20:36,929
entities if you use some unions in the

1716
01:20:35,668 --> 01:20:38,639
enemy No

1717
01:20:36,929 --> 01:20:40,408
and the reason for that is that as soon

1718
01:20:38,639 --> 01:20:42,659
as you use unions you lose the ability

1719
01:20:40,408 --> 01:20:46,679
to mix in the two things being Union

1720
01:20:42,658 --> 01:20:49,738
right so whatever I made a union out of

1721
01:20:46,679 --> 01:20:51,658
I now can't have both of those things

1722
01:20:49,738 --> 01:20:56,569
happening at once on this entity which

1723
01:20:51,658 --> 01:20:58,948
may be you know in a in a real rare case

1724
01:20:56,569 --> 01:21:00,509
we might do that when we know there's

1725
01:20:58,948 --> 01:21:03,268
literally no way these two things could

1726
01:21:00,510 --> 01:21:04,679
happen right but that's almost never

1727
01:21:03,269 --> 01:21:06,418
what we want in this game we want to

1728
01:21:04,679 --> 01:21:09,139
always have every possible combination

1729
01:21:06,418 --> 01:21:09,139
is allowed

1730
01:21:19,020 --> 01:21:23,020
Elvan how are you finding for kotas so

1731
01:21:21,189 --> 01:21:24,658
far any features you find missing is it

1732
01:21:23,020 --> 01:21:27,159
worth getting into coming from Emacs

1733
01:21:24,658 --> 01:21:29,170
yeah I like it way better than Emacs

1734
01:21:27,158 --> 01:21:34,448
there's a few Emacs features that aren't

1735
01:21:29,170 --> 01:21:37,630
in there yet but you know they're coming

1736
01:21:34,448 --> 01:21:39,189
and also some of them are just because I

1737
01:21:37,630 --> 01:21:41,590
haven't gone and made my for code

1738
01:21:39,189 --> 01:21:44,319
accustomed have them yet so some of them

1739
01:21:41,590 --> 01:21:45,940
are waiting on me not Allen but

1740
01:21:44,319 --> 01:21:47,529
basically like the indentation is a

1741
01:21:45,939 --> 01:21:52,419
little buggy that's the biggest problem

1742
01:21:47,529 --> 01:21:54,719
right now this problems no macros

1743
01:21:52,420 --> 01:21:58,118
indentation is a little buggy and

1744
01:21:54,719 --> 01:22:00,939
autocomplete doesn't use nearby to pick

1745
01:21:58,118 --> 01:22:03,279
the the matches in that order that's

1746
01:22:00,939 --> 01:22:04,750
mostly all I'm missing everything else I

1747
01:22:03,279 --> 01:22:08,198
could do in custom code for code across

1748
01:22:04,750 --> 01:22:10,238
to myself and for modal which is the way

1749
01:22:08,198 --> 01:22:11,769
I'm editing now it's way better than a

1750
01:22:10,238 --> 01:22:15,428
mess is Emacs with super buggy and modal

1751
01:22:11,770 --> 01:22:16,989
like them just crazy buggy which is why

1752
01:22:15,429 --> 01:22:18,250
I switched in the first place cuz it's

1753
01:22:16,988 --> 01:22:19,899
you know like it's pretty early in

1754
01:22:18,250 --> 01:22:21,819
development for for coders so I mean I

1755
01:22:19,899 --> 01:22:24,629
may not have switched this early but but

1756
01:22:21,819 --> 01:22:24,630
Emacs was killing me

1757
01:22:34,779 --> 01:22:38,739
what do you think of the other more data

1758
01:22:37,029 --> 01:22:42,039
oriented entity system implementations

1759
01:22:38,739 --> 01:22:51,909
online like a knacks entity X etc I

1760
01:22:42,039 --> 01:22:53,500
don't know I've never looked at them it

1761
01:22:51,909 --> 01:23:00,130
would probably be something I can't just

1762
01:22:53,500 --> 01:23:02,550
search and read quickly I'm guessing but

1763
01:23:00,130 --> 01:23:02,550
let's see

1764
01:23:13,930 --> 01:23:19,390
I mean the fact that like the number of

1765
01:23:16,750 --> 01:23:21,699
semicolons per line appears to approach

1766
01:23:19,390 --> 01:23:23,440
eight fairly frequently means there's no

1767
01:23:21,699 --> 01:23:27,069
way I would ever even touch this code

1768
01:23:23,439 --> 01:23:28,719
with a 12-foot Pole but that doesn't

1769
01:23:27,069 --> 01:23:30,939
mean it's necessarily designed poorly or

1770
01:23:28,720 --> 01:23:32,530
anything it means it just uses the kinds

1771
01:23:30,939 --> 01:23:36,219
of stuff that I find very superfluous

1772
01:23:32,529 --> 01:23:37,659
and too much typing necessarily but who

1773
01:23:36,220 --> 01:23:39,730
knows maybe it's designed well I'd have

1774
01:23:37,659 --> 01:23:43,109
to actually go look at the design and

1775
01:23:39,729 --> 01:23:43,109
see right

1776
01:23:54,470 --> 01:23:58,800
all right I'm going to wrap it up let's

1777
01:23:57,600 --> 01:24:04,110
see here

1778
01:23:58,800 --> 01:24:06,810
doo doo doo doo doo doo where is it

1779
01:24:04,109 --> 01:24:07,949
there we go thank you everybody for

1780
01:24:06,810 --> 01:24:09,510
joining me for an episode another

1781
01:24:07,949 --> 01:24:10,829
episode of handmade hero it's what a

1782
01:24:09,510 --> 01:24:12,119
pleasure coated with you as always if

1783
01:24:10,829 --> 01:24:14,699
you would like to follow along at home

1784
01:24:12,119 --> 01:24:16,319
you can always do so if you peer out of

1785
01:24:14,699 --> 01:24:17,489
the game on handmade hero or gate comes

1786
01:24:16,319 --> 01:24:19,559
the source code so you can follow along

1787
01:24:17,489 --> 01:24:21,300
also a forum site you can go to through

1788
01:24:19,560 --> 01:24:23,010
- questions a patreon page if you want

1789
01:24:21,300 --> 01:24:24,350
support the video series a schedule

1790
01:24:23,010 --> 01:24:27,420
about the tweets the schedule at you and

1791
01:24:24,350 --> 01:24:31,380
a FSO guide if you're trying to catch up

1792
01:24:27,420 --> 01:24:33,060
on old episodes that is it for today I

1793
01:24:31,380 --> 01:24:35,359
will be back here next week check the

1794
01:24:33,060 --> 01:24:38,160
schedule bot if you want to know when

1795
01:24:35,359 --> 01:24:39,869
until then have fun programming and I

1796
01:24:38,159 --> 01:24:42,349
will see you on the Internet take it

1797
01:24:39,869 --> 01:24:42,349
easy everyone

