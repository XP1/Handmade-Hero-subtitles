1
00:00:00,380 --> 00:00:04,439
hello everyone welcome to handmade here

2
00:00:02,638 --> 00:00:07,560
I'll show Rico to complete game live on

3
00:00:04,440 --> 00:00:09,179
stream today well we got 2 things to do

4
00:00:07,559 --> 00:00:11,039
when we got some debugging to do and

5
00:00:09,179 --> 00:00:13,888
then we've got to start playing around

6
00:00:11,039 --> 00:00:15,570
with our system and figure out our big

7
00:00:13,888 --> 00:00:19,559
goal next is to figure out how we want

8
00:00:15,570 --> 00:00:23,368
to work these tags into our system we

9
00:00:19,559 --> 00:00:24,538
just I'm pretty sure that we don't

10
00:00:23,368 --> 00:00:26,219
really need to keep doing what we're

11
00:00:24,539 --> 00:00:28,320
doing the tags because we just have a

12
00:00:26,219 --> 00:00:30,118
simplified process now based on what we

13
00:00:28,320 --> 00:00:32,730
actually got as art assets we can make

14
00:00:30,118 --> 00:00:34,200
things simpler on ourselves we don't so

15
00:00:32,729 --> 00:00:35,308
you need to we could decide to keep it

16
00:00:34,200 --> 00:00:36,840
the way it is but I just think we're

17
00:00:35,308 --> 00:00:39,179
gonna pay performance penalties for the

18
00:00:36,840 --> 00:00:40,770
tags away they are now or have to do a

19
00:00:39,179 --> 00:00:42,509
bunch of work to accelerate it when

20
00:00:40,770 --> 00:00:44,489
really now that we kind of know what our

21
00:00:42,509 --> 00:00:46,009
tag layouts gonna have to be it might be

22
00:00:44,488 --> 00:00:48,899
something we can just kind of fork oh

23
00:00:46,009 --> 00:00:51,269
but yeah before we go that we got some

24
00:00:48,899 --> 00:00:53,520
bugs to work out and some some missing

25
00:00:51,270 --> 00:00:55,949
things that we got to kind of fill in

26
00:00:53,520 --> 00:00:58,829
from the last time when we got the PNG

27
00:00:55,948 --> 00:01:00,628
exporter importer thing working and

28
00:00:58,829 --> 00:01:02,759
that's really what I want to focus on

29
00:01:00,628 --> 00:01:05,219
today now I realized after we ended the

30
00:01:02,759 --> 00:01:06,629
stream last week I don't remember I was

31
00:01:05,219 --> 00:01:07,650
doing I think it would might've been the

32
00:01:06,629 --> 00:01:10,140
next day when I was just hanging around

33
00:01:07,650 --> 00:01:11,909
or something I remembered I think I

34
00:01:10,140 --> 00:01:13,439
thought of why we had a problem with the

35
00:01:11,909 --> 00:01:14,340
thing we were doing we just had finished

36
00:01:13,438 --> 00:01:16,258
rain we didn't have a chance to look

37
00:01:14,340 --> 00:01:17,549
into it at all so it's probably

38
00:01:16,259 --> 00:01:19,530
something simple but anyway I thought I

39
00:01:17,549 --> 00:01:21,299
thought in my head I was like oh you

40
00:01:19,530 --> 00:01:22,500
know it's probably because we're having

41
00:01:21,299 --> 00:01:25,830
an off by one problem because that weird

42
00:01:22,500 --> 00:01:29,700
requirement that you skip the first

43
00:01:25,829 --> 00:01:31,469
asset in in any case right so when we're

44
00:01:29,700 --> 00:01:34,469
actually filing things away we have to

45
00:01:31,469 --> 00:01:42,750
be careful to honor the fact that we

46
00:01:34,469 --> 00:01:44,450
leave slots open right and I just don't

47
00:01:42,750 --> 00:01:47,219
remember if that's what we were doing

48
00:01:44,450 --> 00:01:48,750
but that would cause us a problem so

49
00:01:47,219 --> 00:01:50,728
anyway if you remember correctly and

50
00:01:48,750 --> 00:01:52,259
I'll go ahead and try to refresh your

51
00:01:50,728 --> 00:01:55,170
memory here for the folks who didn't

52
00:01:52,259 --> 00:01:56,670
catch last week's stream or people who

53
00:01:55,170 --> 00:01:58,799
forgotten where we were since last week

54
00:01:56,670 --> 00:02:02,490
if we take a look at the handmade data

55
00:01:58,799 --> 00:02:06,149
directory we've got sort of a set of

56
00:02:02,489 --> 00:02:08,340
things here where these are the these

57
00:02:06,149 --> 00:02:12,800
are the h @ JS that we already had right

58
00:02:08,340 --> 00:02:15,879
we had intro art

59
00:02:12,800 --> 00:02:19,130
test 1 test 2 and test 3 ehh ehh and

60
00:02:15,879 --> 00:02:21,319
then what happened was when we run the

61
00:02:19,129 --> 00:02:22,579
game and if I run the game now nothing

62
00:02:21,319 --> 00:02:27,469
will happen because there isn't one

63
00:02:22,580 --> 00:02:30,380
there if I run the game what we get is a

64
00:02:27,469 --> 00:02:34,550
check at startup to see whether or not

65
00:02:30,379 --> 00:02:36,019
there's a specifically named file and if

66
00:02:34,550 --> 00:02:38,200
that specifically named files there it

67
00:02:36,020 --> 00:02:40,400
will use it as a place to write

68
00:02:38,199 --> 00:02:45,189
dynamically imported art assets that

69
00:02:40,400 --> 00:02:48,020
come from PNG s in the art directory so

70
00:02:45,189 --> 00:02:50,389
what I need to do if I want to trigger

71
00:02:48,020 --> 00:02:51,860
the updater right is I have to actually

72
00:02:50,389 --> 00:02:56,299
have that in there and you can see that

73
00:02:51,860 --> 00:02:58,820
code up in here where we actually load

74
00:02:56,300 --> 00:03:01,250
in the hhas you can see here that if

75
00:02:58,819 --> 00:03:02,870
there's a test to see if the thing is

76
00:03:01,250 --> 00:03:05,319
called local then it assumes that that

77
00:03:02,870 --> 00:03:07,759
was something you can use for writing

78
00:03:05,319 --> 00:03:09,949
now what we did is we made a little

79
00:03:07,759 --> 00:03:12,229
program called HHA edit that will add

80
00:03:09,949 --> 00:03:14,329
two in the future to make more stuff as

81
00:03:12,229 --> 00:03:17,530
we want to be able to work with HHA

82
00:03:14,330 --> 00:03:21,530
files for example we can just say create

83
00:03:17,530 --> 00:03:23,419
oops local HHA and when it makes one of

84
00:03:21,530 --> 00:03:25,759
those it just sticks in a blank one that

85
00:03:23,419 --> 00:03:28,549
doesn't have anything in it yet so now

86
00:03:25,759 --> 00:03:30,859
what happens is when I run now it can

87
00:03:28,550 --> 00:03:33,080
process a PNG import and it does it

88
00:03:30,860 --> 00:03:34,459
processed one of the hand files which

89
00:03:33,080 --> 00:03:35,900
was just this little thing it was just a

90
00:03:34,459 --> 00:03:37,879
test to see if it worked

91
00:03:35,900 --> 00:03:40,489
and we found already that we had one bug

92
00:03:37,879 --> 00:03:43,039
which is that we don't reverse the RGB

93
00:03:40,489 --> 00:03:45,980
channels so that's something to keep in

94
00:03:43,039 --> 00:03:47,900
mind there right so we've got some work

95
00:03:45,979 --> 00:03:50,060
to do there that's really simple though

96
00:03:47,900 --> 00:03:51,590
the more concerning part and the thing

97
00:03:50,060 --> 00:03:54,560
that was the bug that I actually want to

98
00:03:51,590 --> 00:03:57,409
focus on right now was just that once we

99
00:03:54,560 --> 00:03:59,629
exit what we've done is when that gets

100
00:03:57,409 --> 00:04:01,579
loaded in we actually update that HHA

101
00:03:59,629 --> 00:04:03,139
file so if I go back and look at the HSA

102
00:04:01,580 --> 00:04:04,580
file you can see that it imported all

103
00:04:03,139 --> 00:04:06,349
the hand bitmaps it's actually got

104
00:04:04,580 --> 00:04:08,209
report of them all not just that one

105
00:04:06,349 --> 00:04:10,519
that we were looking for it imported all

106
00:04:08,209 --> 00:04:12,949
the hand bitmaps and stored them in that

107
00:04:10,519 --> 00:04:15,349
local HHA and now what we'd like to see

108
00:04:12,949 --> 00:04:18,409
is if I run this again we'd like to see

109
00:04:15,349 --> 00:04:21,769
it show up again but what we see instead

110
00:04:18,410 --> 00:04:24,820
is that we get a an incorrect asset load

111
00:04:21,769 --> 00:04:24,819
occurring right

112
00:04:25,529 --> 00:04:30,559
I should set it to debug build so we can

113
00:04:27,990 --> 00:04:33,210
inspect these values a little bit better

114
00:04:30,560 --> 00:04:36,629
it looks like assets is undefined for

115
00:04:33,209 --> 00:04:40,918
reasons I'm not entirely sure why that

116
00:04:36,629 --> 00:04:43,879
would be but oh I see because the local

117
00:04:40,918 --> 00:04:47,879
function of course it is anyway

118
00:04:43,879 --> 00:04:50,310
that's right local variable anyway we

119
00:04:47,879 --> 00:04:52,800
get a load error here and so our first

120
00:04:50,310 --> 00:04:54,959
order of business is to actually step

121
00:04:52,800 --> 00:04:56,819
through and debug that HHA header

122
00:04:54,959 --> 00:04:58,589
updating code because obviously we've

123
00:04:56,819 --> 00:05:00,779
got some problems because our restart

124
00:04:58,589 --> 00:05:03,359
doesn't work properly so our import

125
00:05:00,779 --> 00:05:06,449
works ok as far as importing into memory

126
00:05:03,360 --> 00:05:08,939
is concerned but our import in terms of

127
00:05:06,449 --> 00:05:11,069
updating the actual backing store is not

128
00:05:08,939 --> 00:05:13,430
correct so that's the first bug I want

129
00:05:11,069 --> 00:05:17,728
to address then we'll address the RGB

130
00:05:13,430 --> 00:05:19,259
flip problem and then finally once we're

131
00:05:17,728 --> 00:05:21,449
done with that then we're pretty much

132
00:05:19,259 --> 00:05:27,240
progressing into the tag into land of

133
00:05:21,449 --> 00:05:31,139
tags and yeah that's just how that's

134
00:05:27,240 --> 00:05:33,120
gonna go ok so let's take a look here I

135
00:05:31,139 --> 00:05:37,409
just want to refresh my memory about the

136
00:05:33,120 --> 00:05:39,120
code and see whether or not the problem

137
00:05:37,410 --> 00:05:41,520
I was saying about leaving a slot open I

138
00:05:39,120 --> 00:05:43,949
just wanted to see whether or not that

139
00:05:41,519 --> 00:05:45,750
was actually true whether we were

140
00:05:43,949 --> 00:05:47,668
looking at that correctly or not so the

141
00:05:45,750 --> 00:05:51,029
way that this works remember is we ask

142
00:05:47,668 --> 00:05:53,099
for an asset index here if we don't have

143
00:05:51,029 --> 00:05:54,929
one so we come through and if we're

144
00:05:53,100 --> 00:05:56,850
updating an asset that we already know

145
00:05:54,930 --> 00:05:58,860
about one that we've already placed

146
00:05:56,850 --> 00:06:01,260
somewhere and we're like this PNG we

147
00:05:58,860 --> 00:06:04,819
placed its asset here or something like

148
00:06:01,259 --> 00:06:08,159
that then what we end up with here is a

149
00:06:04,819 --> 00:06:11,250
new asset index allocation right so we

150
00:06:08,160 --> 00:06:14,370
try to allocate a new asset index to

151
00:06:11,250 --> 00:06:17,100
place that asset into our asset store

152
00:06:14,370 --> 00:06:20,250
somewhere and so when we do that the

153
00:06:17,100 --> 00:06:22,289
reserve asset call what this is going to

154
00:06:20,250 --> 00:06:24,810
do is I think it just gives us an asset

155
00:06:22,288 --> 00:06:28,139
in the global space right let me just

156
00:06:24,810 --> 00:06:29,970
make sure that's true yeah so that gives

157
00:06:28,139 --> 00:06:32,490
us an asset in the global space and

158
00:06:29,970 --> 00:06:35,849
that's all it does so it doesn't

159
00:06:32,490 --> 00:06:38,930
actually put that asset into the asset

160
00:06:35,848 --> 00:06:40,668
storage of a particular HHA file

161
00:06:38,930 --> 00:06:43,160
the first time we really deal with that

162
00:06:40,668 --> 00:06:45,680
is here so you can see here we have

163
00:06:43,160 --> 00:06:48,050
right modifications to HHA that's this

164
00:06:45,680 --> 00:06:49,970
is the first place that we act start to

165
00:06:48,050 --> 00:06:51,889
deal with assets so we come through here

166
00:06:49,970 --> 00:06:53,419
and we look at asset counts you can see

167
00:06:51,889 --> 00:06:56,629
us taking a look at we get we saw the

168
00:06:53,418 --> 00:06:59,000
tags that each one uses and we look at

169
00:06:56,629 --> 00:07:01,879
how many assets were expecting to have

170
00:06:59,000 --> 00:07:03,829
in this particular HHA file right just

171
00:07:01,879 --> 00:07:05,449
the one that we're looking at here so

172
00:07:03,829 --> 00:07:08,240
when we sum that up we get a particular

173
00:07:05,449 --> 00:07:11,449
number you'll notice we start that at

174
00:07:08,240 --> 00:07:14,120
zero and we never add the additional one

175
00:07:11,449 --> 00:07:16,848
to it right you see what the problem is

176
00:07:14,120 --> 00:07:18,949
there so when we actually start writing

177
00:07:16,848 --> 00:07:22,219
out asset indices here we're not

178
00:07:18,949 --> 00:07:25,129
skipping that first one and we really

179
00:07:22,220 --> 00:07:27,500
have to I believe we need to do that

180
00:07:25,129 --> 00:07:29,509
because the way the loader works so in

181
00:07:27,500 --> 00:07:32,240
terms of the asset count we really want

182
00:07:29,509 --> 00:07:34,910
to do it that way so that we know how

183
00:07:32,240 --> 00:07:37,370
many of those we actually have there and

184
00:07:34,910 --> 00:07:39,050
and then when we actually put these in

185
00:07:37,370 --> 00:07:42,759
we can put in zeros now I don't know if

186
00:07:39,050 --> 00:07:45,259
asset types are a size perhaps can be I

187
00:07:42,759 --> 00:07:48,620
don't I don't know how that one works I

188
00:07:45,259 --> 00:07:51,408
don't think that one has a null entry in

189
00:07:48,620 --> 00:07:52,699
it so in some sense we I don't know how

190
00:07:51,408 --> 00:07:55,969
we want to do this if we want to do it

191
00:07:52,699 --> 00:07:58,598
like that sum it up and then do an asset

192
00:07:55,970 --> 00:07:58,599
count you know

193
00:08:08,410 --> 00:08:16,000
like this so I'm not sure how exactly we

194
00:08:14,259 --> 00:08:17,829
want to do that but you know if you take

195
00:08:16,000 --> 00:08:19,569
a look at how this would work we have to

196
00:08:17,829 --> 00:08:23,379
do the same thing that we were doing for

197
00:08:19,569 --> 00:08:26,740
like when we do our desk type we grab

198
00:08:23,379 --> 00:08:28,509
this one when we do our asset like we're

199
00:08:26,740 --> 00:08:32,139
doing here in this desta right we

200
00:08:28,509 --> 00:08:35,349
actually want to do plus one right so

201
00:08:32,139 --> 00:08:39,639
this actually has to look like that if

202
00:08:35,349 --> 00:08:42,190
that makes sense and off we go so I

203
00:08:39,639 --> 00:08:45,460
again I'm not really sure exactly how we

204
00:08:42,190 --> 00:08:48,400
want that to work do you think but I

205
00:08:45,460 --> 00:08:49,420
believe that's that's you know more

206
00:08:48,399 --> 00:08:51,519
correct than the thing that we were

207
00:08:49,419 --> 00:08:52,959
doing before I don't love the way that

208
00:08:51,519 --> 00:08:54,309
those things kind of move around but you

209
00:08:52,960 --> 00:08:56,500
know what do you do

210
00:08:54,309 --> 00:08:58,419
and we also should take here in these

211
00:08:56,500 --> 00:09:00,549
push arrays where we're zeroing these

212
00:08:58,419 --> 00:09:03,250
these are actually cleared automatically

213
00:09:00,549 --> 00:09:05,199
by push array if I'm not mistaken so I

214
00:09:03,250 --> 00:09:07,389
don't believe this zeroing actually has

215
00:09:05,200 --> 00:09:09,730
to happen here I'm not sure why that's

216
00:09:07,389 --> 00:09:12,419
still there get rid of it but anyway I

217
00:09:09,730 --> 00:09:14,830
think that's the more correct updating

218
00:09:12,419 --> 00:09:17,799
so if I go ahead and delete that local

219
00:09:14,830 --> 00:09:19,389
hij and then create a new one so that we

220
00:09:17,799 --> 00:09:21,219
can see if the import process goes a

221
00:09:19,389 --> 00:09:23,559
little bit smoother this time

222
00:09:21,220 --> 00:09:25,930
now when we write out that file in

223
00:09:23,559 --> 00:09:28,629
theory anyway let me just make sure the

224
00:09:25,929 --> 00:09:30,849
import still work properly now at least

225
00:09:28,629 --> 00:09:34,539
it leaves that extra hole and we could

226
00:09:30,850 --> 00:09:39,220
go test again and see now what are our

227
00:09:34,539 --> 00:09:40,179
errors are here oh and we double check

228
00:09:39,220 --> 00:09:44,019
here where we set this

229
00:09:40,179 --> 00:09:46,089
oh so this asset type count also so this

230
00:09:44,019 --> 00:09:48,970
is wrong here like I said it's a little

231
00:09:46,090 --> 00:09:50,920
squirrely the way these work I wish they

232
00:09:48,970 --> 00:09:54,759
were a little cleaner I think maybe the

233
00:09:50,919 --> 00:09:56,409
best way to do it would be to just act

234
00:09:54,759 --> 00:09:58,090
I'm trying to think of what the right

235
00:09:56,409 --> 00:10:00,730
way to do it here's I think maybe we

236
00:09:58,090 --> 00:10:04,740
want you know asset type count to just

237
00:10:00,730 --> 00:10:04,740
be a different thing I guess

238
00:10:13,750 --> 00:10:26,779
something like this but I just don't

239
00:10:25,370 --> 00:10:28,310
like having those two there because I

240
00:10:26,779 --> 00:10:30,889
like I say that was another mistake and

241
00:10:28,309 --> 00:10:32,449
it just kind of piles up so anyway if we

242
00:10:30,889 --> 00:10:33,949
have the asset type count and we use

243
00:10:32,450 --> 00:10:35,540
that a little bit more specifically so

244
00:10:33,950 --> 00:10:37,550
we say that the asset types are used as

245
00:10:35,539 --> 00:10:39,139
a type count the asset array size uses

246
00:10:37,549 --> 00:10:41,839
the asset count now the asset count can

247
00:10:39,139 --> 00:10:44,000
have more in it there so that we could

248
00:10:41,840 --> 00:10:46,340
say asset type count here and then these

249
00:10:44,000 --> 00:10:48,490
are still all correct as they are but

250
00:10:46,340 --> 00:10:50,540
this one again would be asset type count

251
00:10:48,490 --> 00:10:51,740
and then when we go through here the

252
00:10:50,539 --> 00:10:53,629
tagging X and file in the asset news

253
00:10:51,740 --> 00:10:56,899
file both can start at one so they skip

254
00:10:53,629 --> 00:10:59,029
their first entry right and and off we

255
00:10:56,899 --> 00:11:01,340
go we chain through here we write out

256
00:10:59,029 --> 00:11:03,620
the different ones that we expect to see

257
00:11:01,340 --> 00:11:05,060
we could add some assertions in here we

258
00:11:03,620 --> 00:11:07,700
don't have any right now and that's

259
00:11:05,059 --> 00:11:09,349
probably a bad thing it it would make

260
00:11:07,700 --> 00:11:11,660
more sense to have some assertions in

261
00:11:09,350 --> 00:11:14,269
here like for example we should probably

262
00:11:11,659 --> 00:11:15,799
assert that the number of each thing

263
00:11:14,269 --> 00:11:18,079
that we wrote is the number that we

264
00:11:15,799 --> 00:11:22,639
thought we were going to write so we

265
00:11:18,080 --> 00:11:27,020
should say something like yeah like tag

266
00:11:22,639 --> 00:11:31,340
index in file should be equal to the tag

267
00:11:27,019 --> 00:11:34,069
count right and asset index in file

268
00:11:31,340 --> 00:11:38,230
should be equal to the asset count and

269
00:11:34,070 --> 00:11:42,620
then the the desk type just gets Inc

270
00:11:38,230 --> 00:11:48,350
updated by movement I believe let me see

271
00:11:42,620 --> 00:11:49,669
here is it just me or Oh or is it just

272
00:11:48,350 --> 00:11:50,810
me or we not updating that at all so

273
00:11:49,669 --> 00:11:54,079
that's what that would be another bug

274
00:11:50,809 --> 00:11:55,549
right just type which is this fellow

275
00:11:54,080 --> 00:11:58,129
right here

276
00:11:55,549 --> 00:12:02,870
death type has to be advanced and I'm

277
00:11:58,129 --> 00:12:07,909
not seeing that happen right so actually

278
00:12:02,870 --> 00:12:10,279
this should also care like that right so

279
00:12:07,909 --> 00:12:14,839
we want to assert that desk type equals

280
00:12:10,279 --> 00:12:16,939
asset types plus asset type count and I

281
00:12:14,840 --> 00:12:19,430
think that's just a little bit more

282
00:12:16,940 --> 00:12:20,870
secure now so now like at least if we

283
00:12:19,429 --> 00:12:23,149
don't if we say we're

284
00:12:20,870 --> 00:12:25,720
right out a certain number and then we

285
00:12:23,149 --> 00:12:29,000
don't write out that number then I will

286
00:12:25,720 --> 00:12:30,740
assert early on so that we don't waste

287
00:12:29,000 --> 00:12:32,028
our time thinking that it's going to be

288
00:12:30,740 --> 00:12:34,850
okay

289
00:12:32,028 --> 00:12:36,528
and hopefully that'll help us so let's

290
00:12:34,850 --> 00:12:39,350
now take a look at where we crash out

291
00:12:36,528 --> 00:12:41,480
here same place so I'm gonna switch to

292
00:12:39,350 --> 00:12:44,480
debug build now and now I want to look

293
00:12:41,480 --> 00:12:51,680
at what we're actually so I least now

294
00:12:44,480 --> 00:12:55,129
have some sort of some opinion or idea

295
00:12:51,679 --> 00:12:58,219
here that we're probably going to have

296
00:12:55,129 --> 00:13:06,320
the right number of things written all

297
00:12:58,220 --> 00:13:12,500
so this uses the high watermark right

298
00:13:06,320 --> 00:13:14,540
yes that looks like um so once we yeah

299
00:13:12,500 --> 00:13:16,309
so so at this point I'm pretty sure that

300
00:13:14,539 --> 00:13:18,169
we've wrote the right number of things

301
00:13:16,309 --> 00:13:20,149
out so now what I want to do is set the

302
00:13:18,169 --> 00:13:22,849
bill to debug and watch that import and

303
00:13:20,149 --> 00:13:26,000
I just like to see what's going on there

304
00:13:22,850 --> 00:13:29,170
and one thing I could do is well so if I

305
00:13:26,000 --> 00:13:32,389
go through and set this to debug like so

306
00:13:29,169 --> 00:13:34,610
just to get that going what I can do

307
00:13:32,389 --> 00:13:38,778
here is if we look at what these other

308
00:13:34,610 --> 00:13:40,789
hhas are I can do something like this

309
00:13:38,778 --> 00:13:46,070
like make a debug directory move the

310
00:13:40,789 --> 00:13:48,528
local HHA into the debug directory so

311
00:13:46,070 --> 00:13:53,150
it's the only one in there and then when

312
00:13:48,528 --> 00:13:56,000
I could do is I can set the execution

313
00:13:53,149 --> 00:14:05,778
directory here to actually point

314
00:13:56,000 --> 00:14:07,909
directly to that directory well I guess

315
00:14:05,778 --> 00:14:10,039
it's not quite that simple I have to

316
00:14:07,909 --> 00:14:12,799
actually make also a data inside there

317
00:14:10,039 --> 00:14:15,230
but that's okay so what I could do here

318
00:14:12,799 --> 00:14:18,259
let's do it this way so we have our data

319
00:14:15,230 --> 00:14:21,110
directory let's make a debug directory

320
00:14:18,259 --> 00:14:24,289
here so here's our actual data here's

321
00:14:21,110 --> 00:14:26,899
our debug right and inside here I'll

322
00:14:24,289 --> 00:14:28,278
just make a different one of these with

323
00:14:26,899 --> 00:14:32,569
that local hij in it

324
00:14:28,278 --> 00:14:34,490
right so that way now I can if I want to

325
00:14:32,570 --> 00:14:38,150
set this to be

326
00:14:34,490 --> 00:14:41,600
debug and will only load just that one

327
00:14:38,149 --> 00:14:45,429
right so now looking at when we step

328
00:14:41,600 --> 00:14:47,629
through here we can actually figure out

329
00:14:45,429 --> 00:14:50,029
what's going on much more quickly

330
00:14:47,629 --> 00:14:51,740
because we'll only have to look at the

331
00:14:50,029 --> 00:14:53,870
bad file we weren't the waste our time

332
00:14:51,740 --> 00:14:56,870
stepping through the good files that we

333
00:14:53,870 --> 00:14:59,060
already know work um so what we should

334
00:14:56,870 --> 00:15:01,909
see here is we should see only one file

335
00:14:59,059 --> 00:15:04,299
loaded so that's what I'm gonna check

336
00:15:01,909 --> 00:15:06,740
for first right and that file should be

337
00:15:04,299 --> 00:15:11,809
that the file in question should be the

338
00:15:06,740 --> 00:15:15,080
local one right there it is so you can

339
00:15:11,809 --> 00:15:16,989
see here we've got the information for

340
00:15:15,080 --> 00:15:20,750
this file that we're about to load in

341
00:15:16,990 --> 00:15:23,210
here it is it says it's got 13 tags 12

342
00:15:20,750 --> 00:15:25,250
asset types 13 assets that's the correct

343
00:15:23,210 --> 00:15:27,800
number the number we expect to see those

344
00:15:25,250 --> 00:15:31,309
look reasonable those are arrays placed

345
00:15:27,799 --> 00:15:32,359
up above the data limit the magic value

346
00:15:31,309 --> 00:15:34,849
I assume is correct

347
00:15:32,360 --> 00:15:37,700
let's take a look six six six one six

348
00:15:34,850 --> 00:15:46,009
eight six eight I don't actually know if

349
00:15:37,700 --> 00:15:55,820
that's correct but let's find out it's

350
00:15:46,009 --> 00:15:57,919
not what I wanted hij F yep I so that

351
00:15:55,820 --> 00:16:00,460
all looks reasonable everything's fine

352
00:15:57,919 --> 00:16:02,479
there so the asset type of race eyes

353
00:16:00,460 --> 00:16:05,600
computation and stuff should be right

354
00:16:02,480 --> 00:16:09,889
this this should all be fine let's take

355
00:16:05,600 --> 00:16:12,519
a look at that asset type array yeah

356
00:16:09,889 --> 00:16:12,519
it's right there

357
00:16:17,809 --> 00:16:26,128
yeah type ID twenty-first acid index 1-1

358
00:16:22,649 --> 00:16:27,600
past is this just a pointer to a single

359
00:16:26,129 --> 00:16:29,550
one of these I assume so we should be

360
00:16:27,600 --> 00:16:32,999
able to look at all 12 like this I'm

361
00:16:29,549 --> 00:16:37,528
guessing so it just basically says hey

362
00:16:32,999 --> 00:16:40,100
there's a bunch of type ID 20s so these

363
00:16:37,528 --> 00:16:40,100
are wrong

364
00:16:40,669 --> 00:16:46,128
so that's bug number one from our

365
00:16:44,370 --> 00:16:50,730
debugging

366
00:16:46,129 --> 00:16:54,499
we should see there be space there

367
00:16:50,730 --> 00:17:01,860
should be one there right so when we

368
00:16:54,499 --> 00:17:07,679
update the HHA here where is that here

369
00:17:01,860 --> 00:17:12,779
it is no this is not where it is I lied

370
00:17:07,679 --> 00:17:14,909
I just lied where is my update it's not

371
00:17:12,779 --> 00:17:15,959
here it's not there it is right

372
00:17:14,909 --> 00:17:18,000
modification stage which I gotta

373
00:17:15,959 --> 00:17:21,328
remember that name so when we write this

374
00:17:18,000 --> 00:17:23,548
out you can see here this was supposed

375
00:17:21,328 --> 00:17:25,769
to have a plus one in it and didn't so

376
00:17:23,548 --> 00:17:28,259
it was saying there were no assets in

377
00:17:25,769 --> 00:17:33,538
the asset range so that's obviously

378
00:17:28,259 --> 00:17:35,250
wrong and that was probably the majority

379
00:17:33,538 --> 00:17:37,890
of our problem too because what that

380
00:17:35,250 --> 00:17:39,929
means is when it comes through here it's

381
00:17:37,890 --> 00:17:41,788
never gonna find any right it's just

382
00:17:39,929 --> 00:17:45,509
it's not gonna get any it's gonna think

383
00:17:41,788 --> 00:17:51,029
it has none of those things to add so

384
00:17:45,509 --> 00:17:53,879
you know that's yeah oops so if I go

385
00:17:51,029 --> 00:17:58,740
back now and see let me make a new one

386
00:17:53,880 --> 00:18:00,390
of these files hsj to create local HHA

387
00:17:58,740 --> 00:18:03,599
by the way in case you don't already

388
00:18:00,390 --> 00:18:13,200
know if you hit f8 on the Windows

389
00:18:03,599 --> 00:18:15,240
command line it will recall the most

390
00:18:13,200 --> 00:18:17,220
recent command that started with what

391
00:18:15,240 --> 00:18:19,950
you've typed so if you type like a

392
00:18:17,220 --> 00:18:22,798
beginning of a command and then f8 you

393
00:18:19,950 --> 00:18:25,169
get the command that matches that thing

394
00:18:22,798 --> 00:18:26,680
right the Windows command line is pretty

395
00:18:25,169 --> 00:18:28,180
crappy

396
00:18:26,680 --> 00:18:31,000
but at least it has a couple of little

397
00:18:28,180 --> 00:18:34,000
shortcuts in there and that one's kind

398
00:18:31,000 --> 00:18:36,369
of useful so anyway if I create one of

399
00:18:34,000 --> 00:18:39,160
those and now I set us back and said

400
00:18:36,369 --> 00:18:43,739
instead of using that debug directory if

401
00:18:39,160 --> 00:18:46,720
I go ahead and set us back to handmade

402
00:18:43,740 --> 00:18:48,789
this should run the import again and

403
00:18:46,720 --> 00:18:51,819
this time when we run the import

404
00:18:48,789 --> 00:18:54,639
hopefully now it will set that stuff up

405
00:18:51,819 --> 00:18:55,869
properly and we should be okay now we're

406
00:18:54,640 --> 00:18:57,400
still running in debug mode so we're

407
00:18:55,869 --> 00:19:00,639
gonna be much lower frame rate rise

408
00:18:57,400 --> 00:19:02,380
that's fine and so if I close that down

409
00:19:00,640 --> 00:19:07,120
and now run it again we can see we

410
00:19:02,380 --> 00:19:12,130
should have a different occurrence here

411
00:19:07,119 --> 00:19:14,379
now we didn't crash we loaded but it's

412
00:19:12,130 --> 00:19:21,100
worth noting that we don't really still

413
00:19:14,380 --> 00:19:22,900
know we we don't know if we worked

414
00:19:21,099 --> 00:19:25,119
correctly now you may say well I see the

415
00:19:22,900 --> 00:19:26,500
little like mini sprite thing there it

416
00:19:25,119 --> 00:19:29,019
doesn't that mean we're correctly it

417
00:19:26,500 --> 00:19:31,119
doesn't actually the reason that we

418
00:19:29,019 --> 00:19:34,420
don't know if that means that we worked

419
00:19:31,119 --> 00:19:38,559
correctly is specifically because when

420
00:19:34,420 --> 00:19:40,300
we run the game again because we haven't

421
00:19:38,559 --> 00:19:43,059
saved out this is the other thing that I

422
00:19:40,299 --> 00:19:45,730
said we were gonna have to do because we

423
00:19:43,059 --> 00:19:48,579
haven't saved out the metadata for the

424
00:19:45,730 --> 00:19:53,230
stuff that we imported we therefore

425
00:19:48,579 --> 00:19:56,109
don't actually know whether or not a PNG

426
00:19:53,230 --> 00:19:59,650
has already been loaded so what ends up

427
00:19:56,109 --> 00:20:02,139
happening is we can't tell if that could

428
00:19:59,650 --> 00:20:04,390
have just been the re-imported sprite so

429
00:20:02,140 --> 00:20:05,830
to run a real test before we've done you

430
00:20:04,390 --> 00:20:08,110
see it doubled the size because it just

431
00:20:05,829 --> 00:20:09,879
imported everything again so in order to

432
00:20:08,109 --> 00:20:12,909
run a test before we write out the

433
00:20:09,880 --> 00:20:15,730
metadata we actually can run the test

434
00:20:12,910 --> 00:20:18,850
first by creating one of the local HHA

435
00:20:15,730 --> 00:20:23,110
files run the import once here it is

436
00:20:18,849 --> 00:20:25,149
running right when it's done we verify

437
00:20:23,109 --> 00:20:29,069
that we have the thing we do we close

438
00:20:25,150 --> 00:20:31,960
now we can do is move local HHA to test

439
00:20:29,069 --> 00:20:36,429
you know for dot HHA or something like

440
00:20:31,960 --> 00:20:38,650
this or import test dot ehh ehh now it's

441
00:20:36,430 --> 00:20:39,140
not marked as important so that means

442
00:20:38,650 --> 00:20:42,860
there's

443
00:20:39,140 --> 00:20:45,200
no import destination which means that

444
00:20:42,859 --> 00:20:48,529
it won't run an import so now we can run

445
00:20:45,200 --> 00:20:51,799
it again and we can check to see what

446
00:20:48,529 --> 00:20:53,869
we've got and so now we see is mmm you

447
00:20:51,799 --> 00:20:56,269
know we did actually get an import but

448
00:20:53,869 --> 00:20:59,750
it's a different hand from the previous

449
00:20:56,269 --> 00:21:01,879
kind that we imported right is that mean

450
00:20:59,750 --> 00:21:04,339
we did it wrong no probably not

451
00:21:01,880 --> 00:21:07,550
because remember we tagged all of those

452
00:21:04,339 --> 00:21:11,000
hands exactly the same way so what that

453
00:21:07,549 --> 00:21:13,279
means is it's free to pick any one it

454
00:21:11,000 --> 00:21:15,170
wants and we probably just changed the

455
00:21:13,279 --> 00:21:17,690
order in which they appeared because of

456
00:21:15,170 --> 00:21:19,430
the way we imported them so still seems

457
00:21:17,690 --> 00:21:20,809
like we're all good we'll have to double

458
00:21:19,430 --> 00:21:22,519
check to make sure a little later but

459
00:21:20,809 --> 00:21:23,929
again our tag system doesn't

460
00:21:22,519 --> 00:21:25,700
differentiate between two things that

461
00:21:23,930 --> 00:21:27,019
exactly the same tags it's free to pick

462
00:21:25,700 --> 00:21:30,110
either when it wants and that's probably

463
00:21:27,019 --> 00:21:32,119
just what it did here right so it looks

464
00:21:30,109 --> 00:21:36,189
good looks like we're in good shape uh

465
00:21:32,119 --> 00:21:38,929
and so if and if I restore us back to

466
00:21:36,190 --> 00:21:40,970
the standard optimize bills we should be

467
00:21:38,930 --> 00:21:44,710
in a situation where we will run at full

468
00:21:40,970 --> 00:21:48,289
speed as well I at least I would assume

469
00:21:44,710 --> 00:21:51,980
yeah and there we go

470
00:21:48,289 --> 00:21:55,339
so from there really what we want to do

471
00:21:51,980 --> 00:21:57,200
now is write out that metadata and I

472
00:21:55,339 --> 00:22:02,000
think we probably want to I don't know

473
00:21:57,200 --> 00:22:03,980
I'm thinking that I probably I'm

474
00:22:02,000 --> 00:22:07,359
thinking that I probably want to sort of

475
00:22:03,980 --> 00:22:10,579
do these two things together right like

476
00:22:07,359 --> 00:22:12,500
writing out the metadata and figuring

477
00:22:10,579 --> 00:22:15,109
out what to do with our tags a little

478
00:22:12,500 --> 00:22:19,220
better than we have been I think those

479
00:22:15,109 --> 00:22:20,629
two things are maybe related and one of

480
00:22:19,220 --> 00:22:23,980
the things that I kind of want to

481
00:22:20,630 --> 00:22:23,980
emphasize is that now

482
00:22:28,599 --> 00:22:36,349
we have the we wrote a little utility

483
00:22:32,019 --> 00:22:37,519
that HHA edit utility and one of the

484
00:22:36,349 --> 00:22:39,889
things that I think is really

485
00:22:37,519 --> 00:22:45,548
interesting about that utility is now if

486
00:22:39,890 --> 00:22:48,710
we want to we should be able to make a

487
00:22:45,548 --> 00:22:50,509
we should be able to edit right like we

488
00:22:48,710 --> 00:22:54,558
should be able to make a way that use

489
00:22:50,509 --> 00:23:01,099
that utility to update import or change

490
00:22:54,558 --> 00:23:05,119
HHA files so if we want to we can

491
00:23:01,099 --> 00:23:06,769
upgrade our HHA file format and we don't

492
00:23:05,119 --> 00:23:08,298
have to really worry about backwards

493
00:23:06,769 --> 00:23:09,589
compatibility because we could just

494
00:23:08,298 --> 00:23:12,048
build a thing into that

495
00:23:09,589 --> 00:23:15,278
HHA edit that just takes old versions

496
00:23:12,048 --> 00:23:20,509
and updates them to new versions right

497
00:23:15,278 --> 00:23:22,038
so we have a lot of options there and we

498
00:23:20,509 --> 00:23:24,048
could choose to use them if we want to

499
00:23:22,038 --> 00:23:26,929
now we don't have to but we could choose

500
00:23:24,048 --> 00:23:28,579
to and so if we find ourselves a little

501
00:23:26,929 --> 00:23:32,929
bit cramped when we're making these

502
00:23:28,579 --> 00:23:37,579
changes we can go that route because we

503
00:23:32,929 --> 00:23:40,309
now have the ability to do so similarly

504
00:23:37,579 --> 00:23:41,839
if we wanted to that HHA edit utility

505
00:23:40,308 --> 00:23:43,908
like that's probably where we'll go

506
00:23:41,839 --> 00:23:46,308
ahead and put something like a merge so

507
00:23:43,909 --> 00:23:49,429
you could say HHA edit - merge and then

508
00:23:46,308 --> 00:23:52,569
type a bunch of files in and have it

509
00:23:49,429 --> 00:23:55,610
combine all of those files into one file

510
00:23:52,569 --> 00:23:57,168
and so stuff like that again makes it

511
00:23:55,609 --> 00:23:59,778
easier for us to work with these files

512
00:23:57,169 --> 00:24:01,580
it allows us to do things that we might

513
00:23:59,778 --> 00:24:03,169
want to do come ship time like binding

514
00:24:01,579 --> 00:24:06,288
all of Rho J's together instead of

515
00:24:03,169 --> 00:24:09,528
shipping multiple h8 J's right so anyway

516
00:24:06,288 --> 00:24:14,359
I think that's all good and I'm pretty

517
00:24:09,528 --> 00:24:16,759
pretty happy about that so I think now

518
00:24:14,359 --> 00:24:20,389
that that we're there I think now is the

519
00:24:16,759 --> 00:24:23,839
time to start thinking about how we want

520
00:24:20,390 --> 00:24:25,669
to address the tag situation now the

521
00:24:23,839 --> 00:24:27,648
reason that I want to address the track

522
00:24:25,669 --> 00:24:29,149
situation a little bit more carefully

523
00:24:27,648 --> 00:24:30,648
than we have been doing it in the past

524
00:24:29,148 --> 00:24:32,509
I'll go ahead and delete this now we

525
00:24:30,648 --> 00:24:36,619
don't need that we could use that trick

526
00:24:32,509 --> 00:24:38,359
again later the reason that I want to

527
00:24:36,619 --> 00:24:40,699
kind of take a look at this is because

528
00:24:38,359 --> 00:24:41,538
if I go in here and look at the art

529
00:24:40,700 --> 00:24:44,538
directory

530
00:24:41,538 --> 00:24:48,888
hmm what we're doing now is we sort of

531
00:24:44,538 --> 00:24:52,878
have this notion of house right sheets

532
00:24:48,888 --> 00:24:55,579
come in and those sprite sheets have a

533
00:24:52,878 --> 00:24:57,769
fixed shape that the artist is telling

534
00:24:55,579 --> 00:25:00,439
us they're going to use that means we

535
00:24:57,769 --> 00:25:02,868
don't really need to store individual

536
00:25:00,440 --> 00:25:05,869
tags for these assets we only need to

537
00:25:02,868 --> 00:25:07,579
store tags for this sheet and what I

538
00:25:05,868 --> 00:25:08,988
mean about that is like if you look at

539
00:25:07,579 --> 00:25:16,428
the character template here I'll go

540
00:25:08,989 --> 00:25:17,899
ahead and load it in if we look here at

541
00:25:16,429 --> 00:25:20,869
what one of these templates looks like

542
00:25:17,898 --> 00:25:26,209
all of the characters will have the same

543
00:25:20,868 --> 00:25:29,618
template right so all we really need to

544
00:25:26,210 --> 00:25:35,298
know what kind of an asset something is

545
00:25:29,618 --> 00:25:39,589
underneath that is just its index right

546
00:25:35,298 --> 00:25:42,679
it's 0 through 64 or you know X comma Y

547
00:25:39,589 --> 00:25:46,220
depending on how you want to think about

548
00:25:42,679 --> 00:25:50,090
it but it's really just a simple 6 bit

549
00:25:46,220 --> 00:25:53,479
value that tells you where you were in

550
00:25:50,089 --> 00:25:55,038
this grid and so anything in the system

551
00:25:53,479 --> 00:25:57,950
that wants to look up something like

552
00:25:55,038 --> 00:26:01,249
this knows that all it needs to do is

553
00:25:57,950 --> 00:26:08,840
feed that 6 bit value into here and it

554
00:26:01,249 --> 00:26:10,929
doesn't need to do matching it can look

555
00:26:08,839 --> 00:26:19,488
it up directly it's my point

556
00:26:10,929 --> 00:26:21,679
so we now sort of have we now sort of

557
00:26:19,489 --> 00:26:25,548
have guidance about how that would go

558
00:26:21,679 --> 00:26:26,330
and we may just want to take advantage

559
00:26:25,548 --> 00:26:28,759
of it

560
00:26:26,329 --> 00:26:33,378
similarly if we look at how these things

561
00:26:28,759 --> 00:26:36,048
are laid out we know some type

562
00:26:33,378 --> 00:26:37,608
information like we know that we've got

563
00:26:36,048 --> 00:26:42,440
like blocks which were sort of things

564
00:26:37,608 --> 00:26:47,509
you could use you know to to build sort

565
00:26:42,440 --> 00:26:50,028
of places in the world so we'll probably

566
00:26:47,509 --> 00:26:52,940
have a ton of those we have characters

567
00:26:50,028 --> 00:26:54,409
probably have less of those but you know

568
00:26:52,940 --> 00:26:55,350
maybe we'll have more who knows a lot of

569
00:26:54,409 --> 00:26:57,210
characters like moms

570
00:26:55,349 --> 00:26:58,349
their characters technically right so

571
00:26:57,210 --> 00:27:00,200
maybe we will have a lot of those and I

572
00:26:58,349 --> 00:27:07,909
think about it

573
00:27:00,200 --> 00:27:10,440
hands items and you know obstacles etc

574
00:27:07,910 --> 00:27:13,048
we know we have these different things

575
00:27:10,440 --> 00:27:15,660
those themselves would be essentially

576
00:27:13,048 --> 00:27:18,150
the main line types right like are you

577
00:27:15,660 --> 00:27:22,529
talking about a character or cover hand

578
00:27:18,150 --> 00:27:28,140
item obstacle or just like a something

579
00:27:22,529 --> 00:27:32,369
else like a other basically right so

580
00:27:28,140 --> 00:27:34,799
again I don't really know how we want to

581
00:27:32,369 --> 00:27:37,769
do this but let me lay out some things I

582
00:27:34,798 --> 00:27:40,259
was sort of thinking about in a little

583
00:27:37,769 --> 00:27:42,089
bit more broadly in terms of changing

584
00:27:40,259 --> 00:27:47,460
the line about where things are actually

585
00:27:42,089 --> 00:27:49,139
specified so if for example in code we

586
00:27:47,460 --> 00:27:51,960
want to talk about things more

587
00:27:49,140 --> 00:27:59,970
specifically what we could do is always

588
00:27:51,960 --> 00:28:01,798
talk about things in terms of we could

589
00:27:59,970 --> 00:28:04,079
always talk about things in terms of

590
00:28:01,798 --> 00:28:05,970
hard ideas that allow you to look up art

591
00:28:04,079 --> 00:28:07,678
assets directly and we could still

592
00:28:05,970 --> 00:28:09,690
retain some of the tag matching stuff

593
00:28:07,679 --> 00:28:11,400
that we wanted by moving the tag

594
00:28:09,690 --> 00:28:13,470
matching to be something that you just

595
00:28:11,400 --> 00:28:17,909
used to get an ID if you don't know

596
00:28:13,470 --> 00:28:20,640
which ID you actually want right and so

597
00:28:17,909 --> 00:28:22,559
the tags could therefore be something

598
00:28:20,640 --> 00:28:26,809
that's more defined in code or

599
00:28:22,558 --> 00:28:29,038
extraneous to the art files themselves

600
00:28:26,808 --> 00:28:33,418
it's just a thought and again I don't

601
00:28:29,038 --> 00:28:36,450
really know it's really hard for me to

602
00:28:33,419 --> 00:28:38,370
guess how the right way to do these and

603
00:28:36,450 --> 00:28:40,980
that's just because I haven't done many

604
00:28:38,369 --> 00:28:43,829
things like this specific thing if I'd

605
00:28:40,980 --> 00:28:45,779
done like lots of games is art tagging

606
00:28:43,829 --> 00:28:47,579
systems for lack of a better term I

607
00:28:45,779 --> 00:28:49,190
would probably have a pretty strong

608
00:28:47,579 --> 00:28:51,119
opinion about how this stuff has to go

609
00:28:49,190 --> 00:28:52,919
because I would have seen a lot of

610
00:28:51,119 --> 00:28:53,279
examples of what works and what doesn't

611
00:28:52,919 --> 00:28:55,530
work

612
00:28:53,279 --> 00:28:58,139
but that's just not a part of a pipeline

613
00:28:55,529 --> 00:29:00,269
I've ever really done much with so it's

614
00:28:58,140 --> 00:29:02,280
very much sort of a wait-and-see kind of

615
00:29:00,269 --> 00:29:04,109
thing with me the whole time I've never

616
00:29:02,279 --> 00:29:06,869
really been like it needs to be this way

617
00:29:04,109 --> 00:29:08,548
because again same thing needs to be a

618
00:29:06,869 --> 00:29:09,158
certain way or having a very specific

619
00:29:08,548 --> 00:29:11,558
app in

620
00:29:09,159 --> 00:29:13,659
about it should be done this way really

621
00:29:11,558 --> 00:29:15,489
only comes from experience it doesn't

622
00:29:13,659 --> 00:29:17,679
come from just like smarts and thinking

623
00:29:15,489 --> 00:29:20,108
about something because you usually

624
00:29:17,679 --> 00:29:22,659
can't guess all of the things that

625
00:29:20,108 --> 00:29:24,220
you're going to hit and that's just

626
00:29:22,659 --> 00:29:25,659
generally true like that's why I also on

627
00:29:24,220 --> 00:29:27,429
handmade hero sometimes I do stuff and

628
00:29:25,659 --> 00:29:28,599
I'm just like look trust me he we do it

629
00:29:27,429 --> 00:29:30,489
exactly this way and here are some

630
00:29:28,598 --> 00:29:32,378
reasons why that's cuz I've done that

631
00:29:30,489 --> 00:29:34,690
kind of code so many times that I'm like

632
00:29:32,378 --> 00:29:36,189
believe me this is always the way that

633
00:29:34,690 --> 00:29:38,109
works out best for these reasons or

634
00:29:36,190 --> 00:29:39,519
something other parts of code that I

635
00:29:38,108 --> 00:29:40,928
don't have much experience with are

636
00:29:39,519 --> 00:29:43,690
usually ones where I'm like I don't know

637
00:29:40,929 --> 00:29:45,609
we'll have to see and that is how that

638
00:29:43,690 --> 00:29:48,460
goes right everyone has some explore

639
00:29:45,608 --> 00:29:52,839
experience in some places than in others

640
00:29:48,460 --> 00:29:55,720
and so it's important to know this is

641
00:29:52,839 --> 00:29:58,749
something that that you also want to

642
00:29:55,720 --> 00:30:01,569
become familiar with yourself and for

643
00:29:58,749 --> 00:30:02,769
your programmer time you don't want to

644
00:30:01,569 --> 00:30:05,618
be too dogmatic

645
00:30:02,769 --> 00:30:08,319
or sure about how you're programming

646
00:30:05,618 --> 00:30:10,269
something that you haven't had enough

647
00:30:08,319 --> 00:30:12,788
experience with right you want to be

648
00:30:10,269 --> 00:30:16,239
open to new ideas and new thought

649
00:30:12,788 --> 00:30:19,239
processes in lines where you're not sure

650
00:30:16,239 --> 00:30:22,298
of of really solid reasons why things

651
00:30:19,239 --> 00:30:25,090
were kind of particular way because if

652
00:30:22,298 --> 00:30:26,200
you close yourself off too early along a

653
00:30:25,089 --> 00:30:28,538
line that you don't have enough

654
00:30:26,200 --> 00:30:31,509
experience with and you haven't tried

655
00:30:28,538 --> 00:30:36,190
enough things then you may be missing

656
00:30:31,509 --> 00:30:37,479
the best ways to do it right and so I've

657
00:30:36,190 --> 00:30:39,220
never I don't know if I've ever said

658
00:30:37,479 --> 00:30:41,558
that explicitly but that's why you'll

659
00:30:39,220 --> 00:30:44,108
often hear me say things in two

660
00:30:41,558 --> 00:30:45,579
different ways sometimes I'm telling you

661
00:30:44,108 --> 00:30:46,418
that here are all the reasons why you

662
00:30:45,579 --> 00:30:48,398
should do something this way otherwise

663
00:30:46,419 --> 00:30:52,090
I'm like we want to wait and see that's

664
00:30:48,398 --> 00:30:55,329
usually why it's like I have a good most

665
00:30:52,089 --> 00:30:57,548
of the time internal barometer for I

666
00:30:55,329 --> 00:30:59,138
know how this should go because I'm

667
00:30:57,548 --> 00:31:01,898
pretty sure it will ship this way and be

668
00:30:59,138 --> 00:31:03,098
good versus I haven't had enough

669
00:31:01,898 --> 00:31:05,918
experience with this thing to say for

670
00:31:03,098 --> 00:31:08,348
sure let's try some things right and I

671
00:31:05,919 --> 00:31:10,899
think on any given project you want to

672
00:31:08,348 --> 00:31:14,888
know that you want to have that

673
00:31:10,898 --> 00:31:17,348
barometer because assuming you want to

674
00:31:14,888 --> 00:31:19,569
continually get better at how you're

675
00:31:17,348 --> 00:31:21,759
coding things you want to be aware of

676
00:31:19,569 --> 00:31:22,450
the places where more experimentation

677
00:31:21,759 --> 00:31:25,450
could be

678
00:31:22,450 --> 00:31:28,330
to you and educate you as to how to do

679
00:31:25,450 --> 00:31:30,870
something in the future right so that's

680
00:31:28,329 --> 00:31:34,359
just something to think about so

681
00:31:30,869 --> 00:31:36,039
long-winded way of saying I don't have a

682
00:31:34,359 --> 00:31:39,549
super strong opinion about how this

683
00:31:36,039 --> 00:31:41,710
should go the tag system was okay

684
00:31:39,549 --> 00:31:44,049
I just think that looking at the asses

685
00:31:41,710 --> 00:31:46,559
we're getting back it doesn't seem like

686
00:31:44,049 --> 00:31:49,990
it's gonna do very much for us right

687
00:31:46,559 --> 00:31:52,750
because the practical situation is just

688
00:31:49,990 --> 00:31:55,569
that the artist thinks about making a

689
00:31:52,750 --> 00:31:58,269
specific thing this particular orphan

690
00:31:55,569 --> 00:32:00,789
that particular monster that's how they

691
00:31:58,269 --> 00:32:04,480
think about them and so at the first

692
00:32:00,789 --> 00:32:09,700
line of import it seems like you just

693
00:32:04,480 --> 00:32:11,319
want to reflect that fact right let's

694
00:32:09,700 --> 00:32:13,779
import all the things the artist made

695
00:32:11,319 --> 00:32:17,799
and name them specifically what they

696
00:32:13,779 --> 00:32:20,680
named them then on top of that we could

697
00:32:17,799 --> 00:32:22,930
add tag matching if we have some times

698
00:32:20,680 --> 00:32:25,810
where the game just wants to say look I

699
00:32:22,930 --> 00:32:29,980
don't know what I want here I just want

700
00:32:25,809 --> 00:32:33,279
something that lives like blah right now

701
00:32:29,980 --> 00:32:35,589
the reason not to do it entirely that

702
00:32:33,279 --> 00:32:37,869
way is that if people want to add more

703
00:32:35,589 --> 00:32:40,959
stuff to the game then they want to be

704
00:32:37,869 --> 00:32:43,599
able to add an asset that maybe fills in

705
00:32:40,960 --> 00:32:46,360
a niche that you didn't have before and

706
00:32:43,599 --> 00:32:51,219
in talking about this maybe it might be

707
00:32:46,359 --> 00:32:54,129
helpful to sort of draw a diagram about

708
00:32:51,220 --> 00:32:58,140
what I mean here so let's go ahead here

709
00:32:54,130 --> 00:32:58,140
on day 465

710
00:33:04,130 --> 00:33:10,110
Artspace it sounds like some you

711
00:33:08,160 --> 00:33:13,529
toidy gallery and like you know

712
00:33:10,109 --> 00:33:15,839
Manhattan or something anyway art space

713
00:33:13,529 --> 00:33:20,269
so let's suppose we wanted to do

714
00:33:15,839 --> 00:33:23,490
something where the generator generates

715
00:33:20,269 --> 00:33:25,410
monsters and it gives those monsters to

716
00:33:23,490 --> 00:33:27,210
parameters let's say because that'll be

717
00:33:25,410 --> 00:33:30,690
easy for us to draw here that's the only

718
00:33:27,210 --> 00:33:34,529
reason I'm saying to let's say that it

719
00:33:30,690 --> 00:33:37,500
has HP so like the number of hit points

720
00:33:34,529 --> 00:33:40,319
that this thing could take maybe certain

721
00:33:37,500 --> 00:33:42,420
particularly armored monsters take eight

722
00:33:40,319 --> 00:33:45,240
hit points to kill and certain other

723
00:33:42,420 --> 00:33:48,000
monsters that are not particularly well

724
00:33:45,240 --> 00:33:49,589
armored can be killed in one kit for

725
00:33:48,000 --> 00:33:51,450
whatever definition of hit is in this

726
00:33:49,589 --> 00:33:53,579
game again not only to hand meat here

727
00:33:51,450 --> 00:33:54,840
I'm talking about in the abstract

728
00:33:53,579 --> 00:33:56,099
obviously it applies handmade hero

729
00:33:54,839 --> 00:33:57,809
because we will have stuff like hit

730
00:33:56,099 --> 00:33:58,859
points but I'm not trying to say saying

731
00:33:57,809 --> 00:34:01,319
straight hammer here I'm just trying to

732
00:33:58,859 --> 00:34:02,699
say this in the abstract so we have a

733
00:34:01,319 --> 00:34:04,769
generator that's going to generate

734
00:34:02,700 --> 00:34:06,840
something for the number of hit points

735
00:34:04,769 --> 00:34:09,659
and then it will also generate something

736
00:34:06,839 --> 00:34:11,489
for the attack power right so we'll also

737
00:34:09,659 --> 00:34:14,730
say something like well or or let's say

738
00:34:11,489 --> 00:34:16,769
speed speed speed so yeah one is a

739
00:34:14,730 --> 00:34:17,969
particularly slow right and this is

740
00:34:16,769 --> 00:34:21,630
particularly weak

741
00:34:17,969 --> 00:34:26,250
whereas this particularly armored and

742
00:34:21,630 --> 00:34:28,559
this is particularly fast right so we've

743
00:34:26,250 --> 00:34:30,659
got something here slow that's a one and

744
00:34:28,559 --> 00:34:33,929
a fast is it eight as well so let's just

745
00:34:30,659 --> 00:34:36,380
say we've got those two parameters so

746
00:34:33,929 --> 00:34:40,079
any particular monster in our system now

747
00:34:36,380 --> 00:34:44,490
can be described by a tuple two values

748
00:34:40,079 --> 00:34:47,549
its HP and its speed and that's just our

749
00:34:44,489 --> 00:34:49,500
thing right again not specific here this

750
00:34:47,550 --> 00:34:51,120
is not how we're going to do it which is

751
00:34:49,500 --> 00:34:52,619
an example of something that might come

752
00:34:51,119 --> 00:34:55,679
up during when we're creating a

753
00:34:52,619 --> 00:34:58,139
generator if every monster is defined by

754
00:34:55,679 --> 00:35:03,119
an HP in a speed tuple then we need to

755
00:34:58,139 --> 00:35:05,759
now pick the body of the monster from a

756
00:35:03,119 --> 00:35:10,739
set of monster bodies that are available

757
00:35:05,760 --> 00:35:13,650
and I guess what I'm trying to say is we

758
00:35:10,739 --> 00:35:16,919
probably won't have 64 different monster

759
00:35:13,650 --> 00:35:18,900
bodies just for this one purpose right

760
00:35:16,920 --> 00:35:20,068
because remember when we actually go

761
00:35:18,900 --> 00:35:21,720
further down this road there will be

762
00:35:20,068 --> 00:35:24,150
more than just the HP in the speed

763
00:35:21,719 --> 00:35:26,399
there'll be the HP the speed what type

764
00:35:24,150 --> 00:35:29,278
of AI it's running you know like is it

765
00:35:26,400 --> 00:35:31,200
skittish or aggressive is it holding a

766
00:35:29,278 --> 00:35:33,179
bunch of coins doesn't have this is that

767
00:35:31,199 --> 00:35:35,159
that right so there's a number of things

768
00:35:33,179 --> 00:35:39,358
that we're going to be specifying here

769
00:35:35,159 --> 00:35:42,239
it will get worse and worse in that

770
00:35:39,358 --> 00:35:44,699
respect so what I want to emphasize is

771
00:35:42,239 --> 00:35:46,169
that like 64 even if that might be a

772
00:35:44,699 --> 00:35:48,179
reasonable number of monsters to have

773
00:35:46,170 --> 00:35:49,650
well it quickly becomes intractable even

774
00:35:48,179 --> 00:35:52,318
if you had one more and we're probably

775
00:35:49,650 --> 00:35:55,619
not going to want to spend all 64 of our

776
00:35:52,318 --> 00:35:59,518
character sprite monster designs on just

777
00:35:55,619 --> 00:36:02,068
this one grid but looking back at it

778
00:35:59,518 --> 00:36:04,348
let's suppose we go well okay so maybe

779
00:36:02,068 --> 00:36:06,599
monsters in this area are one way in

780
00:36:04,349 --> 00:36:08,579
this area or one way and this area one

781
00:36:06,599 --> 00:36:14,130
way in whatever so maybe we have one

782
00:36:08,579 --> 00:36:17,960
monster body here's a b c d e f g h i so

783
00:36:14,130 --> 00:36:21,358
we actually use like nine bodies right

784
00:36:17,960 --> 00:36:26,400
to represent 64 different possible

785
00:36:21,358 --> 00:36:28,980
discrete combinations of HP and speed

786
00:36:26,400 --> 00:36:31,829
and what we do is we look to see where

787
00:36:28,980 --> 00:36:33,329
in this graph you fall and that's how we

788
00:36:31,829 --> 00:36:37,400
figure out which body you are so

789
00:36:33,329 --> 00:36:40,528
anywhere in between like one and two on

790
00:36:37,400 --> 00:36:42,450
speed and one and two on HP will fall

791
00:36:40,528 --> 00:36:44,940
into the a category and we'll pick body

792
00:36:42,449 --> 00:36:48,268
shape hey anything that was like eight

793
00:36:44,940 --> 00:36:53,759
eight will be body shape i and you know

794
00:36:48,268 --> 00:36:55,409
various places in between what I was

795
00:36:53,759 --> 00:36:58,108
sort of suggesting is that if an artist

796
00:36:55,409 --> 00:37:01,440
wanted to come along and place one of

797
00:36:58,108 --> 00:37:03,268
these things into location that was not

798
00:37:01,440 --> 00:37:05,759
previously specified so let's say they

799
00:37:03,268 --> 00:37:09,538
want to create a new area here where

800
00:37:05,759 --> 00:37:11,400
they create body shape J that's

801
00:37:09,539 --> 00:37:14,910
specifically for things that are sort of

802
00:37:11,400 --> 00:37:18,450
like six three right like they're three

803
00:37:14,909 --> 00:37:21,088
speed six armor and that will take a

804
00:37:18,449 --> 00:37:24,358
bunch of things that used to fall either

805
00:37:21,088 --> 00:37:26,250
in CDE or B and it will now make them

806
00:37:24,358 --> 00:37:29,130
body shape J and that's just a way of

807
00:37:26,250 --> 00:37:30,449
clarifying to the player to provide a

808
00:37:29,130 --> 00:37:33,059
little bit more specific

809
00:37:30,449 --> 00:37:35,210
to the body shape to represent the

810
00:37:33,059 --> 00:37:39,509
underlying statistics to them visually

811
00:37:35,210 --> 00:37:41,730
more directly right so let's suppose we

812
00:37:39,510 --> 00:37:44,099
want to do that well if we want to do

813
00:37:41,730 --> 00:37:46,800
that purely with art assets then that

814
00:37:44,099 --> 00:37:50,369
kind of suggests that right the tagging

815
00:37:46,800 --> 00:37:51,810
wants to be in the HHA itself because

816
00:37:50,369 --> 00:37:54,300
you don't want to have to modify the

817
00:37:51,809 --> 00:37:57,239
code you just want to import a new file

818
00:37:54,300 --> 00:37:58,769
in there right but the reason that I

819
00:37:57,239 --> 00:38:02,219
don't find that a particularly

820
00:37:58,769 --> 00:38:05,130
compelling argument at the moment is

821
00:38:02,219 --> 00:38:08,069
more specifically because look the

822
00:38:05,130 --> 00:38:10,530
artist can't set that anyway the artist

823
00:38:08,070 --> 00:38:12,838
is not in a position to specifying those

824
00:38:10,530 --> 00:38:16,050
things because the artist doesn't have

825
00:38:12,838 --> 00:38:18,960
the ability to really put any of that

826
00:38:16,050 --> 00:38:21,539
information into this file it's a PNG it

827
00:38:18,960 --> 00:38:23,579
doesn't have a way in Photoshop to

828
00:38:21,539 --> 00:38:25,199
cleanly edit those things because the

829
00:38:23,579 --> 00:38:27,119
artist would have to learn some like way

830
00:38:25,199 --> 00:38:30,210
of marking up code in a text file or

831
00:38:27,119 --> 00:38:32,820
something so what that suggests to me

832
00:38:30,210 --> 00:38:35,338
again is just that we probably want that

833
00:38:32,820 --> 00:38:37,050
data to be a side band it's something

834
00:38:35,338 --> 00:38:39,179
that gets specified you know if we have

835
00:38:37,050 --> 00:38:42,150
to put it in a separate text file fine

836
00:38:39,179 --> 00:38:46,649
but maybe that's how we do that we don't

837
00:38:42,150 --> 00:38:50,550
do it by pushing all that stuff into the

838
00:38:46,650 --> 00:38:54,750
PNG so what I'm kind of arguing for

839
00:38:50,550 --> 00:38:58,560
there is just the ability to say let's

840
00:38:54,750 --> 00:39:01,889
have all of our art assets come in with

841
00:38:58,559 --> 00:39:04,799
hard-coded well not hard coded but

842
00:39:01,889 --> 00:39:08,578
integer based IDs and then if you want

843
00:39:04,800 --> 00:39:10,619
to associate those IDs in some way with

844
00:39:08,579 --> 00:39:13,680
picking then we'll do that right so

845
00:39:10,619 --> 00:39:18,300
that's one one sort of way we can talk

846
00:39:13,679 --> 00:39:20,098
about how that might go now again

847
00:39:18,300 --> 00:39:21,750
another problem that we would have with

848
00:39:20,099 --> 00:39:24,510
that is it doesn't necessarily merge as

849
00:39:21,750 --> 00:39:26,010
well so as I'm sort of talking about it

850
00:39:24,510 --> 00:39:28,290
I may be talking myself out of it a

851
00:39:26,010 --> 00:39:30,660
little bit what I basically mean to say

852
00:39:28,289 --> 00:39:32,670
is let's suppose that two people on two

853
00:39:30,659 --> 00:39:34,409
separate machines decide to modify here

854
00:39:32,670 --> 00:39:37,680
and main hero by adding a new one of

855
00:39:34,409 --> 00:39:41,549
these things if they just mark them up

856
00:39:37,679 --> 00:39:43,649
by tags they merge properly if they mark

857
00:39:41,550 --> 00:39:43,890
them up using some kind of fixed ID then

858
00:39:43,650 --> 00:39:46,410
you

859
00:39:43,889 --> 00:39:49,460
to worry about well how does that ID get

860
00:39:46,409 --> 00:39:49,460
set right

861
00:39:56,929 --> 00:40:01,279
so it kind of suggests for me that we

862
00:39:59,449 --> 00:40:03,500
really do want to maintain the tag

863
00:40:01,280 --> 00:40:06,260
system almost exactly the way it is now

864
00:40:03,500 --> 00:40:08,420
and the only modification we really want

865
00:40:06,260 --> 00:40:11,540
to make is that maybe those tags are

866
00:40:08,420 --> 00:40:14,269
only relevant for picking things at the

867
00:40:11,539 --> 00:40:16,340
higher level but even that maybe that's

868
00:40:14,269 --> 00:40:18,650
not the right thing I mean in some sense

869
00:40:16,340 --> 00:40:21,640
I I guess you maybe just use

870
00:40:18,650 --> 00:40:21,639
hierarchical tags

871
00:40:26,318 --> 00:40:32,858
I mean it sort of seems like maybe as

872
00:40:30,909 --> 00:40:34,268
much as I thought that we would want to

873
00:40:32,858 --> 00:40:36,038
do something different it seems like

874
00:40:34,268 --> 00:40:38,889
maybe all we really need to do is just

875
00:40:36,039 --> 00:40:41,140
split our tag system into two stage tag

876
00:40:38,889 --> 00:40:42,699
lookup the first tag lookup looks up

877
00:40:41,139 --> 00:40:44,679
what kind of a sprite sheet you're

878
00:40:42,699 --> 00:40:51,519
talking about the second tag looks up

879
00:40:44,679 --> 00:40:54,598
inside the sprite sheet what actual what

880
00:40:51,518 --> 00:40:54,598
actual glyph you wanted

881
00:41:08,809 --> 00:41:22,940
I mean I guess that just it I guess I

882
00:41:13,099 --> 00:41:36,710
don't see any reason not to do it so so

883
00:41:22,940 --> 00:41:39,530
I I think if I'm not mistaken I think

884
00:41:36,710 --> 00:41:41,510
the tag stuff just is probably still the

885
00:41:39,530 --> 00:41:43,220
best way to go and maybe we just want

886
00:41:41,510 --> 00:41:44,660
them to be hierarchical a little bit so

887
00:41:43,219 --> 00:41:47,959
we want it we kind of want to split the

888
00:41:44,659 --> 00:41:51,679
tag search up a little bit but that may

889
00:41:47,960 --> 00:41:57,170
be the only real thing we need to do

890
00:41:51,679 --> 00:41:58,669
there just to make it more efficient and

891
00:41:57,170 --> 00:42:00,950
a little more logical than what it is

892
00:41:58,670 --> 00:42:02,510
but it seems like that always merges

893
00:42:00,949 --> 00:42:05,750
properly and that's a nice boat

894
00:42:02,510 --> 00:42:07,100
especially for a community style project

895
00:42:05,750 --> 00:42:08,900
like handmade hero where kind of the

896
00:42:07,099 --> 00:42:12,529
point is for people to go in and modify

897
00:42:08,900 --> 00:42:15,970
it and mess with it seems like something

898
00:42:12,530 --> 00:42:21,830
that would allow people to share pngs

899
00:42:15,969 --> 00:42:24,888
or hhas rather is pretty valuable

900
00:42:21,829 --> 00:42:24,889
[Music]

901
00:42:30,480 --> 00:42:36,358
so I feel like I'm gonna go with that so

902
00:42:33,179 --> 00:42:39,629
I guess what I would say is the only

903
00:42:36,358 --> 00:42:43,019
real thing that I might want to add now

904
00:42:39,630 --> 00:42:45,838
is I feel like the problem with our HHA

905
00:42:43,019 --> 00:42:48,858
files is there's nothing in the HHA file

906
00:42:45,838 --> 00:42:51,960
at the moment that helps you understand

907
00:42:48,858 --> 00:42:54,509
where the data from that HHA came from

908
00:42:51,960 --> 00:42:56,338
and because it's basically just a

909
00:42:54,510 --> 00:42:58,380
runtime format it's the kind of format

910
00:42:56,338 --> 00:43:01,529
that I would use if I was shipping

911
00:42:58,380 --> 00:43:04,019
gained myself and again since this is

912
00:43:01,530 --> 00:43:05,490
not exactly that kind of a project it's

913
00:43:04,019 --> 00:43:09,000
not the same as the kind that I would

914
00:43:05,489 --> 00:43:11,729
ship myself it makes me think that we

915
00:43:09,000 --> 00:43:14,250
want some annotation in there so I think

916
00:43:11,730 --> 00:43:16,079
really all I want to do after all that

917
00:43:14,250 --> 00:43:17,550
consideration I really don't think I

918
00:43:16,079 --> 00:43:19,140
want to modify it that much it seems

919
00:43:17,550 --> 00:43:20,880
like we made actually some pretty good

920
00:43:19,139 --> 00:43:22,920
decisions even though we didn't have a

921
00:43:20,880 --> 00:43:24,358
lot of information and go on I think

922
00:43:22,920 --> 00:43:26,608
we're in pretty good shape I think

923
00:43:24,358 --> 00:43:29,159
mainly what I would want to do is

924
00:43:26,608 --> 00:43:32,130
looking at the file formats here I think

925
00:43:29,159 --> 00:43:35,789
what I would want to add is when we're

926
00:43:32,130 --> 00:43:38,519
discussing these I think I kind of want

927
00:43:35,789 --> 00:43:41,940
to change the asset types array I just

928
00:43:38,519 --> 00:43:43,920
want to get rid of it and have the

929
00:43:41,940 --> 00:43:46,079
assets themselves store what type they

930
00:43:43,920 --> 00:43:47,760
were and again the reason for that is

931
00:43:46,079 --> 00:43:55,950
because now we're talking about more of

932
00:43:47,760 --> 00:43:58,920
a we're talking about more of a editable

933
00:43:55,949 --> 00:44:02,848
file format here and because we merge

934
00:43:58,920 --> 00:44:07,950
assets together anyway we now know very

935
00:44:02,849 --> 00:44:10,200
specifically that those assets are going

936
00:44:07,949 --> 00:44:12,149
to be loaded into different slots anyway

937
00:44:10,199 --> 00:44:15,269
so we don't care about keeping them

938
00:44:12,150 --> 00:44:19,530
contiguous very much at all in the way

939
00:44:15,269 --> 00:44:21,780
that we perhaps used to and so it seems

940
00:44:19,530 --> 00:44:23,940
like it's it's just would be easier for

941
00:44:21,780 --> 00:44:26,190
these to just be arrays of assets and so

942
00:44:23,940 --> 00:44:28,409
what I would want to do is have the

943
00:44:26,190 --> 00:44:32,400
array of assets and then also have some

944
00:44:28,409 --> 00:44:36,899
markup for the assets so for example

945
00:44:32,400 --> 00:44:39,869
something that stores the PNG file that

946
00:44:36,900 --> 00:44:42,210
these assets came from so that when

947
00:44:39,869 --> 00:44:44,100
someone is looking at an HHA file that

948
00:44:42,210 --> 00:44:46,199
maybe they've received

949
00:44:44,099 --> 00:44:47,849
maybe they got an HHA file from somebody

950
00:44:46,199 --> 00:44:50,869
else and they're trying to figure out

951
00:44:47,849 --> 00:44:58,409
what's in it just a little bit of markup

952
00:44:50,869 --> 00:45:00,000
ability there so that they can gain a

953
00:44:58,409 --> 00:45:02,789
little bit of insight into what it is

954
00:45:00,000 --> 00:45:04,769
they're actually looking at so for

955
00:45:02,789 --> 00:45:07,190
example let's let's just let's just go

956
00:45:04,769 --> 00:45:10,530
down that road let's just let's just go

957
00:45:07,190 --> 00:45:13,260
down that road specifically and see

958
00:45:10,530 --> 00:45:16,680
where it leads us and I think that

959
00:45:13,260 --> 00:45:18,360
that's a little bit more it's feeling a

960
00:45:16,679 --> 00:45:20,309
bit better to me

961
00:45:18,360 --> 00:45:23,340
what's going on there so let's suppose

962
00:45:20,309 --> 00:45:29,250
at this HHA header file here let's

963
00:45:23,340 --> 00:45:32,519
suppose that what happens is this

964
00:45:29,250 --> 00:45:36,090
version gets incremented from HD version

965
00:45:32,519 --> 00:45:39,659
0 to H J 1 and what it does we now

966
00:45:36,090 --> 00:45:43,140
expect that the asset information is

967
00:45:39,659 --> 00:45:46,440
going to be completely different than it

968
00:45:43,139 --> 00:45:50,039
was before and so in addition you know

969
00:45:46,440 --> 00:45:52,650
to the asset types like the asset types

970
00:45:50,039 --> 00:45:54,989
used to be there it's going to not be

971
00:45:52,650 --> 00:45:58,590
there anymore it'll just be assets and a

972
00:45:54,989 --> 00:46:01,169
JJ asset some cells now get larger right

973
00:45:58,590 --> 00:46:04,350
so the HHA asset will have in it maybe

974
00:46:01,170 --> 00:46:09,030
in addition to its tag indices it'll

975
00:46:04,349 --> 00:46:10,500
also have some markup information or the

976
00:46:09,030 --> 00:46:14,700
other thing we could do is change this

977
00:46:10,500 --> 00:46:17,400
to be an asset markup thing which is the

978
00:46:14,699 --> 00:46:21,059
thing that would tell us about what that

979
00:46:17,400 --> 00:46:23,820
asset was so you know it it's was asset

980
00:46:21,059 --> 00:46:26,719
types before later it's it's different

981
00:46:23,820 --> 00:46:29,100
than that so you know let's suppose that

982
00:46:26,719 --> 00:46:32,029
you know it used to be this maybe it

983
00:46:29,099 --> 00:46:32,029
becomes something like this

984
00:46:36,889 --> 00:46:46,940
I think yeah we use Deus 54 for file

985
00:46:44,000 --> 00:46:50,539
offsets right so there's some annotation

986
00:46:46,940 --> 00:46:53,240
in there and maybe that annotation is

987
00:46:50,539 --> 00:46:56,119
just like a glob of text you can put in

988
00:46:53,239 --> 00:46:58,729
there like stuff in a description or you

989
00:46:56,119 --> 00:47:02,659
know whatever else you wanted so there's

990
00:46:58,730 --> 00:47:05,329
basically like information that you can

991
00:47:02,659 --> 00:47:07,849
use to understand what it is that you're

992
00:47:05,329 --> 00:47:16,849
actually seeing that seems pretty good

993
00:47:07,849 --> 00:47:18,289
to me and so you know if we change the

994
00:47:16,849 --> 00:47:22,279
version we'd get rid of this and we just

995
00:47:18,289 --> 00:47:25,389
have the markup from now on right that

996
00:47:22,280 --> 00:47:25,390
seems pretty good

997
00:47:35,820 --> 00:47:40,519
I don't see a lot of downsides to that

998
00:47:44,300 --> 00:47:50,930
but we would recount of rearrange things

999
00:47:46,650 --> 00:47:59,519
a little so let me see what's in here

1000
00:47:50,929 --> 00:48:01,500
these are ways of removing assets yeah

1001
00:47:59,519 --> 00:48:05,670
I'm coming up these primacy number

1002
00:48:01,500 --> 00:48:07,710
things this tries to remove so this was

1003
00:48:05,670 --> 00:48:10,079
sort of saying hey look if you created a

1004
00:48:07,710 --> 00:48:12,090
grid for these eight days you could then

1005
00:48:10,079 --> 00:48:16,650
say oh I want to override a particular

1006
00:48:12,090 --> 00:48:19,289
asset that part we haven't really

1007
00:48:16,650 --> 00:48:21,210
figured out much about and it's probably

1008
00:48:19,289 --> 00:48:27,389
worth saying whether we would want to do

1009
00:48:21,210 --> 00:48:31,260
that now or not so when you load in an

1010
00:48:27,389 --> 00:48:34,949
HHA one thing we don't have the ability

1011
00:48:31,260 --> 00:48:37,800
to do right now is have HHS say that

1012
00:48:34,949 --> 00:48:39,569
other HHA stuff should not be used so

1013
00:48:37,800 --> 00:48:41,880
for example let's suppose that you want

1014
00:48:39,570 --> 00:48:43,230
to replace the version of the hero with

1015
00:48:41,880 --> 00:48:45,840
a different version of the hero by

1016
00:48:43,230 --> 00:48:47,789
putting an HJ file in there it does seem

1017
00:48:45,840 --> 00:48:50,039
to me like hey there's no way to really

1018
00:48:47,789 --> 00:48:53,099
do it because the tags if the tags match

1019
00:48:50,039 --> 00:48:54,779
it can just use either one of those and

1020
00:48:53,099 --> 00:48:56,279
so there's no way to specifically say

1021
00:48:54,780 --> 00:48:58,820
which one that you would actually prefer

1022
00:48:56,280 --> 00:48:58,820
right

1023
00:49:07,150 --> 00:49:17,380
so I'm guessing but I but I guess what

1024
00:49:14,469 --> 00:49:21,549
we could do there is we don't really

1025
00:49:17,380 --> 00:49:24,190
need that because if you look at the way

1026
00:49:21,550 --> 00:49:29,039
that our tags work you could just have a

1027
00:49:24,190 --> 00:49:29,039
primacy tag right you could just do this

1028
00:49:43,530 --> 00:49:49,269
we could just add one every time you

1029
00:49:47,079 --> 00:49:51,989
want to replace one to the whatever it

1030
00:49:49,269 --> 00:49:55,900
is that you were trying to replace right

1031
00:49:51,989 --> 00:49:57,969
so the tag primacy value is just a thing

1032
00:49:55,900 --> 00:50:08,769
that we then match on we always take the

1033
00:49:57,969 --> 00:50:15,819
highest one right I think that just

1034
00:50:08,769 --> 00:50:23,920
works so we really don't need we really

1035
00:50:15,820 --> 00:50:26,080
don't need this at all I don't think and

1036
00:50:23,920 --> 00:50:27,250
that's nice because that gets us out of

1037
00:50:26,079 --> 00:50:29,829
the business of ever trying to identify

1038
00:50:27,250 --> 00:50:31,239
HHA files at all which we don't I don't

1039
00:50:29,829 --> 00:50:36,429
think we really want to do like we don't

1040
00:50:31,239 --> 00:50:38,019
want to have to try and identify them so

1041
00:50:36,429 --> 00:50:40,389
anyway let's just go ahead and kind of

1042
00:50:38,019 --> 00:50:41,949
move move forward with this so what do

1043
00:50:40,389 --> 00:50:45,250
you do here is we're going to take a

1044
00:50:41,949 --> 00:50:47,710
little bit of tact that I often will do

1045
00:50:45,250 --> 00:50:49,539
I'm gonna go ahead and call this HHA

1046
00:50:47,710 --> 00:50:51,340
header one and then I'm going to go

1047
00:50:49,539 --> 00:50:54,460
ahead and make another one called HHA

1048
00:50:51,340 --> 00:50:58,000
header two right and this is just an

1049
00:50:54,460 --> 00:51:05,079
updated version and so I'm gonna pull

1050
00:50:58,000 --> 00:51:07,449
these out like so and here's the

1051
00:51:05,079 --> 00:51:08,769
secondary version of the file and so

1052
00:51:07,449 --> 00:51:11,980
what I was kind of suggesting as well

1053
00:51:08,769 --> 00:51:16,179
all right so we've got tags and then

1054
00:51:11,980 --> 00:51:18,639
we've got assets right and we'll leave

1055
00:51:16,179 --> 00:51:20,789
those two in there and maybe we'll

1056
00:51:18,639 --> 00:51:24,480
change the assets truck to have

1057
00:51:20,789 --> 00:51:36,690
that information but will also have an

1058
00:51:24,480 --> 00:51:38,820
annotation here right so in addition to

1059
00:51:36,690 --> 00:51:41,340
the tags array and the assets array will

1060
00:51:38,820 --> 00:51:44,070
now have annotations array I'm gonna

1061
00:51:41,340 --> 00:51:46,370
move the annotations array down like so

1062
00:51:44,070 --> 00:51:49,470
because it's kind of an extraneous thing

1063
00:51:46,369 --> 00:51:50,579
and I think because we're sort of

1064
00:51:49,469 --> 00:51:53,219
playing around with this a little bit

1065
00:51:50,579 --> 00:51:56,460
more and doing a little bit more with it

1066
00:51:53,219 --> 00:51:58,619
I think I might actually make this

1067
00:51:56,460 --> 00:52:01,349
header file a little bit more extensible

1068
00:51:58,619 --> 00:52:03,299
slightly just because we don't know what

1069
00:52:01,349 --> 00:52:08,670
we're gonna need I'm gonna go ahead and

1070
00:52:03,300 --> 00:52:10,470
say this so now we've kind of got a

1071
00:52:08,670 --> 00:52:12,840
block in fact I guess we'll do 12 so

1072
00:52:10,469 --> 00:52:18,000
we'll make this an even number here and

1073
00:52:12,840 --> 00:52:19,890
then I'll go ahead and put in another

1074
00:52:18,000 --> 00:52:23,219
set of reserved here for other race

1075
00:52:19,889 --> 00:52:25,710
stuff like that so in here we got those

1076
00:52:23,219 --> 00:52:30,149
three arrays there I'm gonna go ahead

1077
00:52:25,710 --> 00:52:34,769
and say that this reserved 64 is gonna

1078
00:52:30,150 --> 00:52:36,840
be what 1 plus I guess if I want maybe 8

1079
00:52:34,769 --> 00:52:41,369
more of that I want 8 total or something

1080
00:52:36,840 --> 00:52:43,620
like that then I would do 5 right so

1081
00:52:41,369 --> 00:52:45,089
these just leave us some zeros we can

1082
00:52:43,619 --> 00:52:46,949
play with if we want to add things

1083
00:52:45,090 --> 00:52:48,960
without change that or just if optional

1084
00:52:46,949 --> 00:52:53,369
additions so that's something we could

1085
00:52:48,960 --> 00:52:55,380
play with later if we want to and so the

1086
00:52:53,369 --> 00:52:57,599
annotation count here is always going to

1087
00:52:55,380 --> 00:53:01,910
be the same as the asset count that's

1088
00:52:57,599 --> 00:53:08,460
just the rule and then we would have an

1089
00:53:01,909 --> 00:53:15,230
HHA annotation and anafi would go now

1090
00:53:08,460 --> 00:53:15,230
since the assets now need a type ID I

1091
00:53:15,349 --> 00:53:21,329
think every where we actually see one of

1092
00:53:18,599 --> 00:53:24,360
these HHA assets we would need to

1093
00:53:21,329 --> 00:53:27,690
specify what its type was so we would

1094
00:53:24,360 --> 00:53:33,289
have to have a secondary version of an

1095
00:53:27,690 --> 00:53:33,289
HHA asset and you know

1096
00:53:33,838 --> 00:53:49,228
I mean I could still put the type in

1097
00:53:42,719 --> 00:53:51,739
there I suppose I'm just not sure how I

1098
00:53:49,228 --> 00:53:51,739
want to do that

1099
00:53:59,610 --> 00:54:02,610
hmm

1100
00:54:11,530 --> 00:54:15,760
so there's a couple of things about that

1101
00:54:30,480 --> 00:54:40,360
so I'm kind of torn here the other thing

1102
00:54:38,469 --> 00:54:49,389
that I'm not entirely sure about again

1103
00:54:40,360 --> 00:54:51,789
is for the tags stuff I guess I'm

1104
00:54:49,389 --> 00:54:55,440
wondering whether we actually need type

1105
00:54:51,789 --> 00:54:55,440
IDs on our assets at all

1106
00:55:11,889 --> 00:55:15,429
so the asset ID is just a quick way of

1107
00:55:14,259 --> 00:55:20,829
saying that you're looking for something

1108
00:55:15,429 --> 00:55:24,190
specific a body piece instead of a head

1109
00:55:20,829 --> 00:55:26,470
piece right but another way to do that

1110
00:55:24,190 --> 00:55:29,019
would have just been to have tags for

1111
00:55:26,469 --> 00:55:31,419
those things that you then match against

1112
00:55:29,018 --> 00:55:33,129
preferentially and so I'm wondering if

1113
00:55:31,420 --> 00:55:35,139
that's really we should just go all in

1114
00:55:33,130 --> 00:55:36,880
on the tag system and just the one thing

1115
00:55:35,139 --> 00:55:39,068
we should do to change it is actually

1116
00:55:36,880 --> 00:55:47,818
remove the concept that there is a type

1117
00:55:39,068 --> 00:55:47,818
ID for an asset at all right

1118
00:56:10,269 --> 00:56:21,130
and that kind of seems like a good idea

1119
00:56:12,579 --> 00:56:22,900
the one aspect of types that I think so

1120
00:56:21,130 --> 00:56:28,090
the only thing that I'm sort of thinking

1121
00:56:22,900 --> 00:56:30,880
about in my head it's related to that is

1122
00:56:28,090 --> 00:56:33,850
the fact that that's also what we were

1123
00:56:30,880 --> 00:56:36,700
doing to say which kind of acid it was

1124
00:56:33,849 --> 00:56:50,349
at all so whether it was a sound or a

1125
00:56:36,699 --> 00:56:53,019
bitmap or a font right so it seems like

1126
00:56:50,349 --> 00:56:57,940
we still want like asset sprite asset

1127
00:56:53,019 --> 00:57:02,980
font asset font glyph assets sound is

1128
00:56:57,940 --> 00:57:05,230
still something we want because you

1129
00:57:02,980 --> 00:57:08,650
don't ever want to match those external

1130
00:57:05,230 --> 00:57:10,780
to each other now maybe you just I mean

1131
00:57:08,650 --> 00:57:12,910
it's just weird to think that that would

1132
00:57:10,780 --> 00:57:15,070
be a tag - it seems like a waste of time

1133
00:57:12,909 --> 00:57:17,019
but maybe it's better to have that be a

1134
00:57:15,070 --> 00:57:18,519
tag as well that way everything just

1135
00:57:17,019 --> 00:57:22,840
goes through the tag system and you're

1136
00:57:18,519 --> 00:57:25,059
kind of done right and when you load

1137
00:57:22,840 --> 00:57:28,900
things then you can use those tags to

1138
00:57:25,059 --> 00:57:32,219
sort of partition things in a way that

1139
00:57:28,900 --> 00:57:32,220
that you want

1140
00:57:48,989 --> 00:57:56,139
I'm tempted I will tell you I am tempted

1141
00:57:53,579 --> 00:57:57,640
so it's just kind of generic right and

1142
00:57:56,139 --> 00:57:59,788
that way you only have one thing and

1143
00:57:57,639 --> 00:58:03,730
when you pull in the assets you parse

1144
00:57:59,789 --> 00:58:05,589
them out by those things so you know in

1145
00:58:03,730 --> 00:58:16,150
here you've got tagged primacy and

1146
00:58:05,588 --> 00:58:19,690
you've got tagged datatype right and

1147
00:58:16,150 --> 00:58:31,119
then you'd say like oh okay you know

1148
00:58:19,690 --> 00:58:37,599
we've got a thing that's like something

1149
00:58:31,119 --> 00:58:41,608
like this and then in here you would

1150
00:58:37,599 --> 00:58:41,609
just say like okay there's you know

1151
00:58:50,730 --> 00:59:07,289
what's the like that and so you'd set

1152
00:59:04,980 --> 00:59:10,949
those just in the tags and so the tags

1153
00:59:07,289 --> 00:59:13,170
is it's always tags right

1154
00:59:10,949 --> 00:59:18,559
everything is always tags and and the

1155
00:59:13,170 --> 00:59:21,838
the degree to which we want those things

1156
00:59:18,559 --> 00:59:26,869
separate it out we do at parse time not

1157
00:59:21,838 --> 00:59:26,869
in the file you know

1158
01:00:01,280 --> 01:00:09,980
I think I like that much time I got here

1159
01:00:04,550 --> 01:00:15,560
got like an hour so if I if I let myself

1160
01:00:09,980 --> 01:00:16,519
go long there so I don't know I want to

1161
01:00:15,559 --> 01:00:18,019
play around with it because like I said

1162
01:00:16,519 --> 01:00:20,449
I really just don't know but it seems

1163
01:00:18,019 --> 01:00:21,769
kind of like the right thing to do so

1164
01:00:20,449 --> 01:00:27,319
I'm gonna go ahead and say handmade file

1165
01:00:21,769 --> 01:00:29,329
formats v1 dot H and this is just a way

1166
01:00:27,320 --> 01:00:30,019
I like to keep the files a little bit

1167
01:00:29,329 --> 01:00:35,559
neater

1168
01:00:30,019 --> 01:00:38,300
by removing things that get kind of like

1169
01:00:35,559 --> 01:00:42,049
deprecated from a file format as it

1170
01:00:38,300 --> 01:00:45,170
evolves over time so if I wanted to keep

1171
01:00:42,050 --> 01:00:49,310
these around right I can say asset type

1172
01:00:45,170 --> 01:00:51,710
ID this is an asset type ID from v1 that

1173
01:00:49,309 --> 01:00:52,820
we don't use anymore but we might want

1174
01:00:51,710 --> 01:00:54,440
to keep around if we're trying to learn

1175
01:00:52,820 --> 01:00:59,890
no old file or something like that

1176
01:00:54,440 --> 01:01:01,940
similar we've got like an HS a header v1

1177
01:00:59,889 --> 01:01:05,980
you know that's what that used to look

1178
01:01:01,940 --> 01:01:05,980
like right we've got this

1179
01:01:09,699 --> 01:01:16,189
and so then these things are the v2

1180
01:01:13,460 --> 01:01:18,289
versions and similarly you know the HSA

1181
01:01:16,190 --> 01:01:20,450
asset if it does have it if it did have

1182
01:01:18,289 --> 01:01:24,440
a type we would duplicate it as well but

1183
01:01:20,449 --> 01:01:28,129
said I think I'm just not gonna do that

1184
01:01:24,440 --> 01:01:33,200
so you know we're left with just this is

1185
01:01:28,130 --> 01:01:36,470
what we're looking at and yeah I mean

1186
01:01:33,199 --> 01:01:42,469
that's that's basically it so then when

1187
01:01:36,469 --> 01:01:47,959
you've got these excuse me when you've

1188
01:01:42,469 --> 01:01:50,919
got these sort of two different file

1189
01:01:47,960 --> 01:01:54,259
formats defined like I do it the

1190
01:01:50,920 --> 01:01:56,838
currently what I can do is I can go now

1191
01:01:54,259 --> 01:01:59,719
to our agency edit and I can include the

1192
01:01:56,838 --> 01:02:04,909
old file format right as well as the new

1193
01:01:59,719 --> 01:02:07,219
one in here and so now what I can do if

1194
01:02:04,909 --> 01:02:10,598
I include the new file format in here is

1195
01:02:07,219 --> 01:02:13,818
I can make something that for example

1196
01:02:10,599 --> 01:02:15,259
duplicates a file format a file and

1197
01:02:13,818 --> 01:02:20,139
updates the header or something like

1198
01:02:15,259 --> 01:02:20,139
that right something that you know can

1199
01:02:20,469 --> 01:02:27,200
something that can upgrade file formats

1200
01:02:24,619 --> 01:02:28,759
and change you know a v1 file into a v2

1201
01:02:27,199 --> 01:02:31,308
file or something like that right which

1202
01:02:28,759 --> 01:02:32,748
is what I want to be able to do so for

1203
01:02:31,309 --> 01:02:35,528
example if I have a thing in here that

1204
01:02:32,748 --> 01:02:41,988
allows me to read one of these in right

1205
01:02:35,528 --> 01:02:47,048
so I'm like okay you know we've got an

1206
01:02:41,989 --> 01:02:47,048
HHA read here

1207
01:02:50,190 --> 01:02:58,710
and maybe I've got something like this

1208
01:02:55,429 --> 01:03:01,079
if I want to go ahead and and look at

1209
01:02:58,710 --> 01:03:05,070
what would be in here right I know that

1210
01:03:01,079 --> 01:03:09,299
I've got like an HSA tag with the tags

1211
01:03:05,070 --> 01:03:11,910
an HSA asset okay assets and now we'd

1212
01:03:09,300 --> 01:03:14,880
have hij annotations with the

1213
01:03:11,909 --> 01:03:16,379
annotations right so I know that these

1214
01:03:14,880 --> 01:03:20,190
are the things that I would want to have

1215
01:03:16,380 --> 01:03:22,260
in my loaded HHA when I would load it in

1216
01:03:20,190 --> 01:03:29,269
and so I could have a thing here that

1217
01:03:22,260 --> 01:03:40,680
was like okay yeah here's the read HHA

1218
01:03:29,269 --> 01:03:49,949
and here's the like right HHA and so you

1219
01:03:40,679 --> 01:03:53,250
know could read and write we could read

1220
01:03:49,949 --> 01:04:00,599
and write HHA so for example if I wanted

1221
01:03:53,250 --> 01:04:02,519
to do something like this we don't

1222
01:04:00,599 --> 01:04:04,139
really have a good command parser here

1223
01:04:02,519 --> 01:04:06,409
I'm not going to really deal with that

1224
01:04:04,139 --> 01:04:06,409
right now

1225
01:04:18,199 --> 01:04:24,809
what I can do here is just the same

1226
01:04:20,670 --> 01:04:26,730
basic thing that we did before so we

1227
01:04:24,809 --> 01:04:31,049
take a look here and we say all right if

1228
01:04:26,730 --> 01:04:34,050
we're going to like do a rewrite or

1229
01:04:31,050 --> 01:04:36,210
something like that then what we can do

1230
01:04:34,050 --> 01:04:40,410
is have like a source file name and a

1231
01:04:36,210 --> 01:04:46,679
desk file name loaded that way we can

1232
01:04:40,409 --> 01:04:56,279
load in the desk file suppose what I

1233
01:04:46,679 --> 01:05:07,819
could do here too is like well I might

1234
01:04:56,280 --> 01:05:07,820
do it this way maybe like that

1235
01:05:08,010 --> 01:05:12,450
so yeah we got the source file and desk

1236
01:05:10,469 --> 01:05:18,480
file there so what I'm going to do is

1237
01:05:12,449 --> 01:05:21,179
say ok for the destination file and the

1238
01:05:18,480 --> 01:05:25,199
source file I'm going to open those two

1239
01:05:21,179 --> 01:05:32,539
up so I'm gonna open this one up our B

1240
01:05:25,199 --> 01:05:32,539
and a my on this one up with WB and I

1241
01:05:34,190 --> 01:05:42,990
guess what I want to do is actually have

1242
01:05:36,989 --> 01:05:45,029
a and exists here so you know we kind of

1243
01:05:42,989 --> 01:05:47,779
did that I want to make a thing that

1244
01:05:45,030 --> 01:05:47,780
actually does that

1245
01:05:53,280 --> 01:05:58,550
so you can give it a filename and it'll

1246
01:05:55,170 --> 01:05:58,550
tell you if that file exists or not

1247
01:06:00,199 --> 01:06:06,659
so what we'll do is we'll say file star

1248
01:06:02,969 --> 01:06:08,609
test and we'll do an F open for read

1249
01:06:06,659 --> 01:06:13,349
just to see if exist there there is

1250
01:06:08,610 --> 01:06:18,329
there an actual in the C runtime library

1251
01:06:13,349 --> 01:06:21,809
it's so limiting but C runtime library

1252
01:06:18,329 --> 01:06:39,239
file exists is there a way we can test

1253
01:06:21,809 --> 01:06:41,519
that that's not what we want we want

1254
01:06:39,239 --> 01:06:44,819
stat is basically what we want but

1255
01:06:41,519 --> 01:06:46,019
that's not really the C runtime why only

1256
01:06:44,820 --> 01:06:49,519
since I have underscores in front of

1257
01:06:46,019 --> 01:06:53,340
them is that something they do now

1258
01:06:49,519 --> 01:06:59,429
because like F stat is not a C runtime

1259
01:06:53,340 --> 01:07:05,420
function right I mean that's POSIX I

1260
01:06:59,429 --> 01:07:05,419
think unless they added it

1261
01:07:16,219 --> 01:07:24,139
I don't think they did hmm because the

1262
01:07:21,949 --> 01:07:26,989
problem with F opening something for

1263
01:07:24,139 --> 01:07:30,019
Reid is if somebody already has it open

1264
01:07:26,989 --> 01:07:33,679
in exclusive access mode then your it'll

1265
01:07:30,019 --> 01:07:36,170
fail but that it's it is there right so

1266
01:07:33,679 --> 01:07:41,089
what you want to know is just does this

1267
01:07:36,170 --> 01:07:42,950
file exist you know and I really I

1268
01:07:41,090 --> 01:07:44,720
always just write this in in the actual

1269
01:07:42,949 --> 01:07:50,299
platform layer where it's it's almost

1270
01:07:44,719 --> 01:07:51,829
always there's a function that will

1271
01:07:50,300 --> 01:07:55,310
literally tell you exactly this

1272
01:07:51,829 --> 01:07:57,170
information to get file info and

1273
01:07:55,309 --> 01:07:58,789
unfortunately I'd really don't know that

1274
01:07:57,170 --> 01:08:01,630
there is a particular way it looks like

1275
01:07:58,789 --> 01:08:07,009
standard file system colon colon exists

1276
01:08:01,630 --> 01:08:08,059
is maybe one of those like this it

1277
01:08:07,010 --> 01:08:09,290
doesn't look like I'm not seeing

1278
01:08:08,059 --> 01:08:12,099
anything from a standard library

1279
01:08:09,289 --> 01:08:12,099
reference here

1280
01:08:28,350 --> 01:08:35,370
just take a quick look I don't

1281
01:08:33,750 --> 01:08:36,930
understand why these are all underscored

1282
01:08:35,369 --> 01:08:39,659
I guess that underscore ones are just

1283
01:08:36,930 --> 01:08:41,789
the UNIX ones or something like ones

1284
01:08:39,659 --> 01:08:51,809
that aren't technically in the C runtime

1285
01:08:41,789 --> 01:08:56,930
library just weird that most of them be

1286
01:08:51,810 --> 01:08:56,930
underscored I'm saying

1287
01:09:01,939 --> 01:09:12,689
yeah I don't really see you know I feel

1288
01:09:11,369 --> 01:09:13,439
so we'll just keep doing this way but

1289
01:09:12,689 --> 01:09:15,299
it's not great

1290
01:09:13,439 --> 01:09:16,589
you know normally you'd do this with an

1291
01:09:15,300 --> 01:09:54,329
operating system call if it's actually

1292
01:09:16,590 --> 01:09:57,210
good if you cared so oh well so we'll go

1293
01:09:54,329 --> 01:10:00,140
ahead and say that is how we know that

1294
01:09:57,210 --> 01:10:03,980
the file exists if we can open it and

1295
01:10:00,140 --> 01:10:07,800
we'll go from there so we can also say

1296
01:10:03,979 --> 01:10:13,559
now down here where we do file or it

1297
01:10:07,800 --> 01:10:19,140
exists for our create one we can just do

1298
01:10:13,560 --> 01:10:23,750
it early if file exists I'll name in

1299
01:10:19,140 --> 01:10:23,750
this case we want it to not exist right

1300
01:10:29,920 --> 01:10:34,010
so here we just go okay if it doesn't

1301
01:10:32,599 --> 01:10:36,050
exist go and do this otherwise it

1302
01:10:34,010 --> 01:10:39,829
already exists and it's bad and that's

1303
01:10:36,050 --> 01:10:42,980
fine here we can basically say you know

1304
01:10:39,829 --> 01:10:48,260
if file exists source file source file

1305
01:10:42,979 --> 01:10:51,138
name and file exists just file name and

1306
01:10:48,260 --> 01:10:54,320
we want to not that one then we go ahead

1307
01:10:51,139 --> 01:11:18,529
and do our shenanigans so here we can

1308
01:10:54,319 --> 01:11:19,880
say so something like that just to let

1309
01:11:18,529 --> 01:11:23,408
the person know that they can't

1310
01:11:19,880 --> 01:11:23,409
overwrite a file with it or whatever

1311
01:11:32,500 --> 01:11:38,380
something like this so that's a little

1312
01:11:36,229 --> 01:11:41,299
bit clearer just what's going on there

1313
01:11:38,380 --> 01:11:43,400
so if we get into a situation where we

1314
01:11:41,300 --> 01:11:45,889
can't actually where we can actually do

1315
01:11:43,399 --> 01:11:51,488
it we load one for reading and one for

1316
01:11:45,889 --> 01:11:51,489
writing and then off we go

1317
01:11:57,670 --> 01:12:15,730
I won't be specific with the error

1318
01:12:00,100 --> 01:12:18,850
message here I don't know if you're

1319
01:12:15,729 --> 01:12:21,669
allowed to f close I don't think you are

1320
01:12:18,850 --> 01:12:24,429
actually so this is a good example of

1321
01:12:21,670 --> 01:12:25,510
kind of something stupid so this is the

1322
01:12:24,429 --> 01:12:26,829
way you would want to write that code

1323
01:12:25,510 --> 01:12:28,000
right so you because you don't really

1324
01:12:26,829 --> 01:12:29,890
want to have lots of different error

1325
01:12:28,000 --> 01:12:42,659
handling paths so you want to be able to

1326
01:12:29,890 --> 01:12:42,660
open both source and destination files

1327
01:12:47,760 --> 01:12:50,819
[Music]

1328
01:13:01,880 --> 01:13:12,109
which I guess is not nothing there we go

1329
01:13:08,170 --> 01:13:13,190
so if we couldn't open the source then

1330
01:13:12,109 --> 01:13:14,779
we Perenara so you couldn't with the

1331
01:13:13,189 --> 01:13:16,609
desks we open a versus assuming we could

1332
01:13:14,779 --> 01:13:25,729
open either of those we you know we

1333
01:13:16,609 --> 01:13:28,158
close them alright so now what we want

1334
01:13:25,729 --> 01:13:30,319
to do is we want like this path to do

1335
01:13:28,158 --> 01:13:32,929
like read HHA and this path to do right

1336
01:13:30,319 --> 01:13:37,039
HHA so you know read from this right to

1337
01:13:32,929 --> 01:13:48,618
that and in this case we'll have one of

1338
01:13:37,039 --> 01:13:51,310
these loaded hhas that comes back so you

1339
01:13:48,618 --> 01:13:51,309
know off we go

1340
01:13:54,158 --> 01:14:01,279
you know I'm not going to do that we'll

1341
01:13:56,270 --> 01:14:03,020
do this either way so that is you know

1342
01:14:01,279 --> 01:14:05,649
how that routine would work pretty

1343
01:14:03,020 --> 01:14:05,650
straightforward right

1344
01:14:13,859 --> 01:14:18,179
that doesn't want to be there at all

1345
01:14:19,409 --> 01:14:28,479
all right um so yeah in this case we

1346
01:14:24,399 --> 01:14:42,069
want to make a v2 header right and I'll

1347
01:14:28,479 --> 01:14:43,719
see what go let's call it B - yeah and

1348
01:14:42,069 --> 01:14:45,880
technically since we don't really we

1349
01:14:43,720 --> 01:14:47,560
don't need to label our most recent

1350
01:14:45,880 --> 01:14:50,590
version we can just call it an HH a

1351
01:14:47,560 --> 01:14:53,740
header right and then we'll get that

1352
01:14:50,590 --> 01:14:56,949
here and I guess technically that was a

1353
01:14:53,739 --> 01:14:59,349
v-0 and now this is a v1 so maybe this

1354
01:14:56,949 --> 01:15:01,630
should actually be called v-0 to line up

1355
01:14:59,350 --> 01:15:03,340
with the actual version number that's in

1356
01:15:01,630 --> 01:15:07,029
the file so I think I'll actually call

1357
01:15:03,340 --> 01:15:11,020
it that let me go ahead and rename that

1358
01:15:07,029 --> 01:15:13,569
file as well to a different file name so

1359
01:15:11,020 --> 01:15:18,280
it should instead of being v1 it should

1360
01:15:13,569 --> 01:15:20,469
be v-0 so now we can do is yeah this guy

1361
01:15:18,279 --> 01:15:24,519
will work properly it will write a file

1362
01:15:20,470 --> 01:15:27,699
of a particular version this will

1363
01:15:24,520 --> 01:15:33,790
rewrite one that we get let me make sure

1364
01:15:27,699 --> 01:15:43,029
we can compile this now something useful

1365
01:15:33,789 --> 01:15:47,019
there we go so now we've got the ability

1366
01:15:43,029 --> 01:15:49,479
to you know use this to rewrite a file

1367
01:15:47,020 --> 01:15:50,950
if we implement these functions before I

1368
01:15:49,479 --> 01:15:54,809
do that I want to add one more thing

1369
01:15:50,949 --> 01:15:54,809
here which is I just want like a

1370
01:15:57,119 --> 01:16:06,430
something like this or info let's say

1371
01:16:03,479 --> 01:16:08,829
and what info I want info to just give

1372
01:16:06,430 --> 01:16:12,840
me like information about the file that

1373
01:16:08,829 --> 01:16:12,840
I provide right

1374
01:16:23,889 --> 01:16:31,599
and so this one I suppose doesn't need

1375
01:16:29,498 --> 01:16:33,908
to check for existence because it's not

1376
01:16:31,599 --> 01:16:41,498
overriding anything so we can just do it

1377
01:16:33,908 --> 01:16:43,448
this way so we load in you know the file

1378
01:16:41,498 --> 01:16:45,099
name we would want to open it for

1379
01:16:43,448 --> 01:16:47,018
reading like so

1380
01:16:45,099 --> 01:16:51,788
and then what we do is we just say like

1381
01:16:47,019 --> 01:17:02,109
okay give me back the loaded HHA for

1382
01:16:51,788 --> 01:17:09,429
this thing and then inside here what I

1383
01:17:02,109 --> 01:17:11,139
want I would want to do is print out the

1384
01:17:09,429 --> 01:17:13,658
info from it so I think what I would

1385
01:17:11,139 --> 01:17:16,359
want to do here is inside the loaded HHA

1386
01:17:13,658 --> 01:17:19,418
I think I might want to store some of

1387
01:17:16,359 --> 01:17:20,889
the stuff that's in there for example I

1388
01:17:19,418 --> 01:17:24,248
could sort of the magic value and the

1389
01:17:20,889 --> 01:17:25,809
version number and I'd want like the tag

1390
01:17:24,248 --> 01:17:40,868
counts and that stuff I need that anyway

1391
01:17:25,809 --> 01:17:42,699
right so I need that stuff here and yes

1392
01:17:40,868 --> 01:17:45,639
so I think if the aunt again if the

1393
01:17:42,698 --> 01:17:48,748
annotations the annotations wouldn't

1394
01:17:45,639 --> 01:17:55,378
look like this right so it's the source

1395
01:17:48,748 --> 01:17:55,378
file name like that

1396
01:18:02,310 --> 01:18:12,810
it's just a bunch of text here and these

1397
01:18:07,600 --> 01:18:12,810
want to be kind of strings right so

1398
01:18:12,899 --> 01:18:16,619
probably want something like this

1399
01:18:17,039 --> 01:18:22,479
problem is that doesn't stack very well

1400
01:18:19,899 --> 01:18:41,649
so you know I might actually just go

1401
01:18:22,479 --> 01:18:43,809
ahead and say looks like this something

1402
01:18:41,649 --> 01:18:46,239
like this and I suppose in here we could

1403
01:18:43,810 --> 01:18:56,020
need to stick an author in there maybe

1404
01:18:46,239 --> 01:18:59,349
it would be something so you kind of

1405
01:18:56,020 --> 01:19:01,930
know where it came from and the

1406
01:18:59,350 --> 01:19:03,310
annotations I think that's reasonable we

1407
01:19:01,930 --> 01:19:04,600
could add another array if we wanted

1408
01:19:03,310 --> 01:19:05,620
other kinds of annotations that I don't

1409
01:19:04,600 --> 01:19:08,829
think we needed expandability

1410
01:19:05,619 --> 01:19:10,569
necessarily in there so that would give

1411
01:19:08,829 --> 01:19:16,809
us what we wanted there and we could

1412
01:19:10,569 --> 01:19:18,609
have the version the source version in

1413
01:19:16,810 --> 01:19:21,789
here which is like which version it came

1414
01:19:18,609 --> 01:19:24,729
from and that would let us know I could

1415
01:19:21,789 --> 01:19:29,579
also say that annotations 0 gives us

1416
01:19:24,729 --> 01:19:29,579
some basic information about the file

1417
01:19:29,680 --> 01:19:33,070
I don't really know we want to do that

1418
01:19:31,869 --> 01:19:34,779
because then when you merge two of them

1419
01:19:33,069 --> 01:19:39,489
I'm not sure how you would resolve that

1420
01:19:34,779 --> 01:19:42,489
so probably not but that's yeah so if I

1421
01:19:39,489 --> 01:19:44,769
go ahead and implement the load HHA bit

1422
01:19:42,489 --> 01:19:48,609
here then what I could do is I can the

1423
01:19:44,770 --> 01:19:51,970
very least take a look at what's in the

1424
01:19:48,609 --> 01:19:58,149
header so if I do a header an HS a

1425
01:19:51,970 --> 01:20:00,130
header V 0 I can go ahead and do a read

1426
01:19:58,149 --> 01:20:03,359
of that I suppose what I can do is I can

1427
01:20:00,130 --> 01:20:07,859
actually look at this as two different

1428
01:20:03,359 --> 01:20:11,769
header versions here and just peek at

1429
01:20:07,859 --> 01:20:14,259
the initial values right

1430
01:20:11,770 --> 01:20:18,990
so what I could do is say alright let's

1431
01:20:14,260 --> 01:20:22,570
take a you three to four the magic value

1432
01:20:18,989 --> 01:20:24,369
and a you thirty-two for the version I'm

1433
01:20:22,569 --> 01:20:28,769
gonna go ahead and and f read those in

1434
01:20:24,369 --> 01:20:28,769
here right maybe I even do it this way

1435
01:20:33,359 --> 01:20:51,099
so I say look load in here from the

1436
01:20:42,130 --> 01:21:03,279
source file and then maybe we have

1437
01:20:51,100 --> 01:21:05,230
errors here so this will tell us what's

1438
01:21:03,279 --> 01:21:10,750
actually in the file when we do this F

1439
01:21:05,229 --> 01:21:18,750
raid and we can compare that here so if

1440
01:21:10,750 --> 01:21:18,750
I D pair 0 equals H I J magic value

1441
01:21:32,760 --> 01:21:44,500
and in here we can look at ID pair one

1442
01:21:37,810 --> 01:21:54,730
and see if it's HHA if it's zero this

1443
01:21:44,500 --> 01:22:00,488
tells us the versions and off we would

1444
01:21:54,729 --> 01:22:05,289
go right so here we've got a load read

1445
01:22:00,488 --> 01:22:22,539
HHA be zero and here we've got to read

1446
01:22:05,289 --> 01:22:37,539
HH a v1 so I think that supports both of

1447
01:22:22,539 --> 01:22:39,550
those to be honest I'm not sure we

1448
01:22:37,539 --> 01:22:51,149
really want to do it that way I might

1449
01:22:39,550 --> 01:22:55,029
want to do it this way we call it that I

1450
01:22:51,149 --> 01:23:06,279
think that's probably just better I did

1451
01:22:55,029 --> 01:23:08,189
do that so that it sets it up here just

1452
01:23:06,279 --> 01:23:10,050
seems smarter

1453
01:23:08,189 --> 01:23:13,979
don't know if I've got a way to allocate

1454
01:23:10,050 --> 01:23:18,360
why if the ability to use memory here I

1455
01:23:13,979 --> 01:23:31,439
don't think I do so what I want to do

1456
01:23:18,359 --> 01:23:33,630
here I guess is just a malloc so we can

1457
01:23:31,439 --> 01:23:39,299
have one of those and I want to be able

1458
01:23:33,630 --> 01:23:43,409
to zero it as well we want like a the

1459
01:23:39,300 --> 01:23:44,820
basic arena stuff there so again it

1460
01:23:43,408 --> 01:23:51,329
would be nice if we have that we don't

1461
01:23:44,819 --> 01:23:53,939
at the moment let's see here I guess we

1462
01:23:51,329 --> 01:23:56,429
can play with that in a minute so if I

1463
01:23:53,939 --> 01:23:57,899
just return a 0 add one of those from

1464
01:23:56,429 --> 01:23:59,489
then I should be able to actually run

1465
01:23:57,899 --> 01:24:04,638
this okay

1466
01:23:59,488 --> 01:24:04,638
this passes the results in here like so

1467
01:24:09,198 --> 01:24:17,658
happen okay so load HHA and then fire

1468
01:24:16,109 --> 01:24:21,509
not found

1469
01:24:17,658 --> 01:24:23,879
it's supposed to be read HHA and when we

1470
01:24:21,510 --> 01:24:26,400
dump the info now we should it's not

1471
01:24:23,880 --> 01:24:31,199
what I wanted when we dump the info now

1472
01:24:26,399 --> 01:24:34,710
we should be able to take and dump stuff

1473
01:24:31,198 --> 01:24:38,549
like the magic value or the version from

1474
01:24:34,710 --> 01:24:40,469
the loaded HHA so in here we can dump

1475
01:24:38,550 --> 01:24:42,659
the source version we know the magic

1476
01:24:40,469 --> 01:24:43,859
value was the magic value I guess

1477
01:24:42,658 --> 01:24:45,509
although now that I think about it we

1478
01:24:43,859 --> 01:24:51,750
could just save whatever the magic value

1479
01:24:45,510 --> 01:24:54,300
actually was and and put that in there I

1480
01:24:51,750 --> 01:24:57,529
suppose now that I think about it so we

1481
01:24:54,300 --> 01:24:57,529
could just say something like this

1482
01:25:03,960 --> 01:25:09,659
so that those are actually known yeah

1483
01:25:08,100 --> 01:25:10,470
that seems reasonable so if we do an

1484
01:25:09,659 --> 01:25:12,960
info dump

1485
01:25:10,470 --> 01:25:21,600
we rode one of these in we could then

1486
01:25:12,960 --> 01:25:25,319
actually printf here suppose this really

1487
01:25:21,600 --> 01:25:27,750
wants to be that it wants to be printed

1488
01:25:25,319 --> 01:25:29,519
as characters because that's at least

1489
01:25:27,750 --> 01:25:32,880
nominally how the magic value supposed

1490
01:25:29,520 --> 01:25:37,280
to go I guess so we know it's for long

1491
01:25:32,880 --> 01:25:51,989
and we know it's the magic value here

1492
01:25:37,279 --> 01:25:55,109
right so in theory that's all we really

1493
01:25:51,989 --> 01:26:00,239
need there I thought it was read HHA

1494
01:25:55,109 --> 01:26:05,279
isn't it create you know what an H HD is

1495
01:26:00,239 --> 01:26:11,579
that's new I thought we had version your

1496
01:26:05,279 --> 01:26:13,500
source version sorry and so that gives

1497
01:26:11,579 --> 01:26:15,840
us I think everything we need to get

1498
01:26:13,500 --> 01:26:20,880
started playing with this so if I do HHA

1499
01:26:15,840 --> 01:26:23,390
edit now oh I should put in description

1500
01:26:20,880 --> 01:26:23,390
of that there

1501
01:26:38,930 --> 01:26:45,170
so now if I do info and I print one of

1502
01:26:43,130 --> 01:26:47,720
these out then I should be a look and

1503
01:26:45,170 --> 01:26:54,079
just see you know these various files

1504
01:26:47,720 --> 01:26:57,079
that we have our version zero and that's

1505
01:26:54,079 --> 01:26:59,269
really all I wanted to do with that so

1506
01:26:57,079 --> 01:27:02,149
you could then see that one was first a

1507
01:26:59,270 --> 01:27:04,010
zero or one was whatever so if I was to

1508
01:27:02,149 --> 01:27:08,029
create one now so like let's say I

1509
01:27:04,010 --> 01:27:10,909
created one of the you know dummy HHA or

1510
01:27:08,029 --> 01:27:12,829
something right then if I do an info on

1511
01:27:10,909 --> 01:27:14,689
that's I'm hoping that that would give

1512
01:27:12,829 --> 01:27:17,079
me a version one right so now we have

1513
01:27:14,689 --> 01:27:20,389
two different versions of the file here

1514
01:27:17,079 --> 01:27:24,140
don't really want that one anymore but

1515
01:27:20,390 --> 01:27:26,030
that's the idea right so then for

1516
01:27:24,140 --> 01:27:28,640
loading we just need to write a little

1517
01:27:26,029 --> 01:27:33,859
loader and a little saver and then we

1518
01:27:28,640 --> 01:27:36,260
can have R to R then we could have not

1519
01:27:33,859 --> 01:27:37,519
only a way to dump the information if we

1520
01:27:36,260 --> 01:27:40,630
wanted to look at it a little more

1521
01:27:37,520 --> 01:27:48,530
carefully but we'd also have a way of

1522
01:27:40,630 --> 01:27:52,100
updating files that were with a previous

1523
01:27:48,529 --> 01:27:53,509
version right so let's take a look at

1524
01:27:52,100 --> 01:27:56,060
how we would do that so let's suppose

1525
01:27:53,510 --> 01:27:58,460
that what we want to do was read an HHA

1526
01:27:56,060 --> 01:28:02,989
what I want to do here too is F seek to

1527
01:27:58,460 --> 01:28:05,000
the beginning so I would like the source

1528
01:28:02,988 --> 01:28:07,279
file in this case to come back to the

1529
01:28:05,000 --> 01:28:08,810
beginning one of the problems that we're

1530
01:28:07,279 --> 01:28:10,969
gonna have here and I don't know how to

1531
01:28:08,810 --> 01:28:12,950
get around this little exactly is I

1532
01:28:10,970 --> 01:28:14,930
don't know if FC CAC chily supports

1533
01:28:12,949 --> 01:28:26,630
64-bit I hope it does I think we looked

1534
01:28:14,930 --> 01:28:28,909
it does now support that mmm well I'm

1535
01:28:26,630 --> 01:28:35,539
not sure what long int actually now

1536
01:28:28,909 --> 01:28:37,609
refers to I guess we'll find out

1537
01:28:35,539 --> 01:28:39,529
but anyway so hopefully we could still

1538
01:28:37,609 --> 01:28:41,389
do 64-bit seeks on this I don't know if

1539
01:28:39,529 --> 01:28:42,829
we actually can if we can't this is

1540
01:28:41,390 --> 01:28:45,800
gonna be unfortunate

1541
01:28:42,829 --> 01:28:47,989
I luckily for us we don't currently have

1542
01:28:45,800 --> 01:28:49,159
any files that are over 4 gigabytes but

1543
01:28:47,989 --> 01:28:51,789
since we're storing our bitmaps

1544
01:28:49,159 --> 01:28:56,000
currently uncompressed we easily could

1545
01:28:51,789 --> 01:28:59,269
so well but anyway inside here where

1546
01:28:56,000 --> 01:29:05,680
we've got our read HHA version 1 version

1547
01:28:59,270 --> 01:29:05,680
2 I'm gonna go ahead and FC cuss back

1548
01:29:05,770 --> 01:29:11,660
pretty sure that's how that works

1549
01:29:09,250 --> 01:29:14,300
set it back to the beginning so in here

1550
01:29:11,659 --> 01:29:18,199
we can load in the new information so

1551
01:29:14,300 --> 01:29:27,590
here we'd have an HH a header v-0

1552
01:29:18,199 --> 01:29:33,979
I'm sorry 0 v-0 whatever it is header we

1553
01:29:27,590 --> 01:29:37,010
do an f-18 of that and I guess one of

1554
01:29:33,979 --> 01:29:37,579
the things it's a little bit Squinkie

1555
01:29:37,010 --> 01:29:40,900
here

1556
01:29:37,579 --> 01:29:45,729
I suppose we need to keep the data store

1557
01:29:40,899 --> 01:29:49,939
somewhere so it probably would need like

1558
01:29:45,729 --> 01:29:53,089
that and so we kind of we really just

1559
01:29:49,939 --> 01:29:54,710
want to read the entire file probably in

1560
01:29:53,090 --> 01:29:58,900
fact that probably is the easier way to

1561
01:29:54,710 --> 01:30:01,899
do this I think we have that in our test

1562
01:29:58,899 --> 01:30:01,899
PNG

1563
01:30:08,260 --> 01:30:21,079
so if we want to we can do that here and

1564
01:30:15,469 --> 01:30:23,300
maybe that can just be a an operation

1565
01:30:21,078 --> 01:30:39,349
that also returns the size I don't know

1566
01:30:23,300 --> 01:30:51,860
to what extent we care about that but if

1567
01:30:39,349 --> 01:30:53,328
we did this we would now have the

1568
01:30:51,859 --> 01:30:59,538
ability to just read the entire thing in

1569
01:30:53,328 --> 01:31:02,359
the memory like so so if we just read

1570
01:30:59,538 --> 01:31:04,550
the entire file in like that then that's

1571
01:31:02,359 --> 01:31:07,939
the data store so that's the entirety of

1572
01:31:04,550 --> 01:31:10,099
that file we don't actually want to do

1573
01:31:07,939 --> 01:31:15,578
the F open here so we could just do it

1574
01:31:10,099 --> 01:31:15,578
with a handle like so I and do this

1575
01:31:16,210 --> 01:31:26,420
right so if for example we do to read we

1576
01:31:23,269 --> 01:31:29,210
do the read entire file on that then

1577
01:31:26,420 --> 01:31:31,340
what we would do here is just say result

1578
01:31:29,210 --> 01:31:34,248
datastore or equals read entire file

1579
01:31:31,340 --> 01:31:37,190
source file and then this stuff doesn't

1580
01:31:34,248 --> 01:31:43,569
actually need to do that F read it can

1581
01:31:37,189 --> 01:31:46,098
just try here to get the information out

1582
01:31:43,569 --> 01:31:48,618
so the only question is do we care about

1583
01:31:46,099 --> 01:31:50,569
crash prevention here like if we didn't

1584
01:31:48,618 --> 01:31:52,058
read anything in and I don't really

1585
01:31:50,569 --> 01:31:55,819
think we do for any particular reason

1586
01:31:52,059 --> 01:32:01,010
can't think of why we would but so if we

1587
01:31:55,819 --> 01:32:03,908
actually said look look this is a this

1588
01:32:01,010 --> 01:32:03,909
is a you 32

1589
01:32:09,560 --> 01:32:26,550
same with this then what we can do is

1590
01:32:15,020 --> 01:32:28,080
just test these and I think that's all

1591
01:32:26,550 --> 01:32:31,529
we really need to do there in order to

1592
01:32:28,079 --> 01:32:46,670
make the read happen let me just double

1593
01:32:31,529 --> 01:32:50,399
check that that actually worked I think

1594
01:32:46,670 --> 01:32:52,579
that should have been an arrow all of

1595
01:32:50,399 --> 01:32:52,579
these

1596
01:33:03,448 --> 01:33:11,819
all right so looking through here I

1597
01:33:11,908 --> 01:33:18,879
should be able to now do the same thing

1598
01:33:14,590 --> 01:33:22,659
that's doing before and it should give

1599
01:33:18,880 --> 01:33:26,828
me those back which does and so now I

1600
01:33:22,658 --> 01:33:36,670
know that I can do an HH a header v-0

1601
01:33:26,828 --> 01:33:39,038
here and I can look at the data store so

1602
01:33:36,670 --> 01:33:42,639
what that allows me to do is now I want

1603
01:33:39,038 --> 01:33:46,889
to start making this translation here I

1604
01:33:42,639 --> 01:33:49,748
want to make an H I J edit dot H file

1605
01:33:46,889 --> 01:33:59,260
because I would like to move this up

1606
01:33:49,748 --> 01:34:04,269
there right because just to keep it so I

1607
01:33:59,260 --> 01:34:12,998
can view those two at the same time we

1608
01:34:04,269 --> 01:34:14,559
go so looking at that we can see that

1609
01:34:12,998 --> 01:34:17,769
what we need to load is a tag count the

1610
01:34:14,559 --> 01:34:19,179
asset and the asset count is worth of

1611
01:34:17,769 --> 01:34:22,030
stuff from these two things and that

1612
01:34:19,179 --> 01:34:23,828
shouldn't be too hard for us to do if

1613
01:34:22,029 --> 01:34:28,779
we're loading in a v-0 file we have to

1614
01:34:23,828 --> 01:34:35,558
do the sort of up the what so we're

1615
01:34:28,779 --> 01:34:40,478
looking for it we have to do the we have

1616
01:34:35,559 --> 01:34:42,579
to do the version upgrade the the we

1617
01:34:40,479 --> 01:34:45,729
have to change it from v-0 to v1 I don't

1618
01:34:42,578 --> 01:34:48,969
know what you want to call that update

1619
01:34:45,729 --> 01:34:51,969
of the data format and if we're reading

1620
01:34:48,969 --> 01:34:55,208
v1 than we don't right so if we want to

1621
01:34:51,969 --> 01:34:57,069
read HHA v-0 then once we get the data

1622
01:34:55,208 --> 01:34:59,859
store out of there what we could see is

1623
01:34:57,069 --> 01:35:03,880
in I mean we know exactly we're going to

1624
01:34:59,859 --> 01:35:06,458
do this right we're gonna say the HHA

1625
01:35:03,880 --> 01:35:09,940
tag count equals something and then the

1626
01:35:06,458 --> 01:35:12,840
HHA tags is going to be a malik of that

1627
01:35:09,939 --> 01:35:12,839
right

1628
01:35:22,029 --> 01:35:26,719
so this is just going to be an

1629
01:35:24,500 --> 01:35:31,100
allocation of those things the same is

1630
01:35:26,719 --> 01:35:35,149
true of the assets array and the

1631
01:35:31,100 --> 01:35:37,489
annotations array so we're gonna go

1632
01:35:35,149 --> 01:35:41,109
through and figure out what the tag

1633
01:35:37,488 --> 01:35:41,109
count is and what the asset count is

1634
01:35:52,840 --> 01:36:06,520
oops alright so we know we want to do

1635
01:36:04,760 --> 01:36:11,750
assets and we know we want to do

1636
01:36:06,520 --> 01:36:14,120
annotations and we want the same number

1637
01:36:11,750 --> 01:36:16,640
of both of these so there's a notation

1638
01:36:14,119 --> 01:36:18,500
for every asset and the data store has

1639
01:36:16,640 --> 01:36:20,780
already been done for us - that part is

1640
01:36:18,500 --> 01:36:21,890
not something we actually have to do and

1641
01:36:20,779 --> 01:36:25,849
then what we have to do is just a loop

1642
01:36:21,890 --> 01:36:27,860
over the assets and process them into

1643
01:36:25,850 --> 01:36:30,140
these and off we go

1644
01:36:27,859 --> 01:36:32,569
so the important thing to remember here

1645
01:36:30,140 --> 01:36:34,940
is that when we go to actually do the

1646
01:36:32,569 --> 01:36:37,519
tags we're gonna have additional tags

1647
01:36:34,939 --> 01:36:39,559
for every asset specifically if we want

1648
01:36:37,520 --> 01:36:42,560
to do what I was suggesting about having

1649
01:36:39,560 --> 01:36:45,170
the tags themselves now specify all the

1650
01:36:42,560 --> 01:36:47,449
information then the data type tag is

1651
01:36:45,170 --> 01:36:49,430
gonna be added to every asset so it's

1652
01:36:47,448 --> 01:36:51,649
actually inside the tag count it's

1653
01:36:49,430 --> 01:36:54,170
actually gonna be the tag Cal plus the

1654
01:36:51,649 --> 01:36:59,719
asset count because for every asset we

1655
01:36:54,170 --> 01:37:01,760
need to add a data type tag right we

1656
01:36:59,719 --> 01:37:04,789
also know that we've got an additional

1657
01:37:01,760 --> 01:37:10,610
sort of like blank that's left in there

1658
01:37:04,789 --> 01:37:11,869
the zero tag it doesn't get loaded which

1659
01:37:10,609 --> 01:37:13,309
is super annoying is it cause me all

1660
01:37:11,869 --> 01:37:16,130
those problems so I'm not sure we really

1661
01:37:13,310 --> 01:37:18,260
want to do that but you know I don't I

1662
01:37:16,130 --> 01:37:20,270
don't know how to make it necessarily

1663
01:37:18,260 --> 01:37:22,190
any cleaner than it is because if you

1664
01:37:20,270 --> 01:37:24,110
didn't add it then that also means that

1665
01:37:22,189 --> 01:37:25,789
when you go to translate where all of

1666
01:37:24,109 --> 01:37:26,920
your things are you've gotten off by one

1667
01:37:25,789 --> 01:37:29,859
there because now every

1668
01:37:26,920 --> 01:37:31,420
when it's saying I use asset twelve but

1669
01:37:29,859 --> 01:37:32,649
they really mean they use asset thirteen

1670
01:37:31,420 --> 01:37:34,270
and they're just not talking about the

1671
01:37:32,649 --> 01:37:35,619
zero right and all these things like

1672
01:37:34,270 --> 01:37:36,880
this I'm sorry

1673
01:37:35,619 --> 01:37:37,779
they say they used s at twelve but

1674
01:37:36,880 --> 01:37:39,460
they're really talking about asset

1675
01:37:37,779 --> 01:37:42,729
eleven in the file because there is no

1676
01:37:39,460 --> 01:37:44,350
asset zero so you push you're off by one

1677
01:37:42,729 --> 01:37:46,509
errors to one place or the other and I'm

1678
01:37:44,350 --> 01:37:48,010
not sure we pick the best one but I

1679
01:37:46,510 --> 01:37:49,420
don't know that there's one that doesn't

1680
01:37:48,010 --> 01:37:52,539
have any of these problems because if

1681
01:37:49,420 --> 01:37:56,260
you want your zero to be an on tag you

1682
01:37:52,539 --> 01:37:58,300
got to do something about it anyway so

1683
01:37:56,260 --> 01:38:02,500
taking a look at these that's how this

1684
01:37:58,300 --> 01:38:05,010
would look and the only difference here

1685
01:38:02,500 --> 01:38:07,720
is that if this asset count includes the

1686
01:38:05,010 --> 01:38:10,360
null asset that asset obviously it's not

1687
01:38:07,720 --> 01:38:13,510
gonna get a datatype so it would be a

1688
01:38:10,359 --> 01:38:16,389
minus one there so that's what that

1689
01:38:13,510 --> 01:38:18,730
looks like and now we just have to kind

1690
01:38:16,390 --> 01:38:24,240
of look at what we actually are gonna

1691
01:38:18,729 --> 01:38:26,409
have tags wise so looking at the tags

1692
01:38:24,239 --> 01:38:29,199
just trying to think it through here

1693
01:38:26,409 --> 01:38:31,930
what we probably want to do is say well

1694
01:38:29,199 --> 01:38:37,899
if we're looking at a v1 file I'm sorry

1695
01:38:31,930 --> 01:38:39,970
to v-0 file we know that the tag count

1696
01:38:37,899 --> 01:38:41,409
is specified directly the asset type

1697
01:38:39,970 --> 01:38:44,740
count we don't care about in the asset

1698
01:38:41,409 --> 01:38:47,409
count is also correct so we can just I

1699
01:38:44,739 --> 01:38:48,969
think load these directly we should be

1700
01:38:47,409 --> 01:38:53,590
able to say like okay the header tag

1701
01:38:48,970 --> 01:38:56,110
count is the tag count the header asset

1702
01:38:53,590 --> 01:38:58,210
count is the asset count I think that's

1703
01:38:56,109 --> 01:38:59,679
just correct I don't think there's

1704
01:38:58,210 --> 01:39:01,600
anything else weird that we would have

1705
01:38:59,680 --> 01:39:04,659
to do there when we load out the v-0

1706
01:39:01,600 --> 01:39:07,000
header it should just work then what we

1707
01:39:04,659 --> 01:39:12,279
have to do is we've got to go through

1708
01:39:07,000 --> 01:39:14,859
and go read by asset types because

1709
01:39:12,279 --> 01:39:16,509
that's how these files were structured

1710
01:39:14,859 --> 01:39:18,549
so we're gonna have to use those and

1711
01:39:16,510 --> 01:39:22,720
unpack the assets into the asset array

1712
01:39:18,550 --> 01:39:23,980
that way now the annotations for our

1713
01:39:22,720 --> 01:39:26,289
purpose is going to have to be filled in

1714
01:39:23,979 --> 01:39:29,229
with default annotations in this case

1715
01:39:26,289 --> 01:39:30,670
and that's okay we can do that what we

1716
01:39:29,229 --> 01:39:35,799
need to do there to say okay there's the

1717
01:39:30,670 --> 01:39:37,890
default annotation of some kind and that

1718
01:39:35,800 --> 01:39:40,869
default annotation should probably have

1719
01:39:37,890 --> 01:39:42,490
just like a D validations one that

1720
01:39:40,869 --> 01:39:44,979
we didn't have any annotation so we have

1721
01:39:42,489 --> 01:39:47,199
to tag it with one now and so what that

1722
01:39:44,979 --> 01:39:50,069
would be is something like looking at

1723
01:39:47,199 --> 01:39:52,389
this annotation where we've got these

1724
01:39:50,069 --> 01:39:54,489
various strings in here what we need to

1725
01:39:52,390 --> 01:39:57,940
do is is do something that will write an

1726
01:39:54,489 --> 01:39:59,529
annotation out to the file and give us

1727
01:39:57,939 --> 01:40:01,539
back its result so we would probably

1728
01:39:59,529 --> 01:40:03,909
want something like a right annotation

1729
01:40:01,539 --> 01:40:06,550
here and it would take the source file

1730
01:40:03,909 --> 01:40:08,739
base name that's gonna be whatever the

1731
01:40:06,550 --> 01:40:14,260
source file name was here and again that

1732
01:40:08,739 --> 01:40:15,340
we probably should know what that is we

1733
01:40:14,260 --> 01:40:20,860
should probably have a way of specifying

1734
01:40:15,340 --> 01:40:23,380
that is something like that we'll take a

1735
01:40:20,859 --> 01:40:26,380
look at that a second we have an asset

1736
01:40:23,380 --> 01:40:28,390
name the asset name is not known so it'd

1737
01:40:26,380 --> 01:40:33,039
probably be something like just an

1738
01:40:28,390 --> 01:40:36,160
unknown fill in there the asset

1739
01:40:33,039 --> 01:40:41,609
description would be none or would be

1740
01:40:36,159 --> 01:40:47,609
like imported by read a chat jv0 right

1741
01:40:41,609 --> 01:40:51,029
and the author would just be HHA edit

1742
01:40:47,609 --> 01:40:51,029
that eggsy

1743
01:40:54,750 --> 01:41:05,130
and so maybe abs dispense friends just

1744
01:41:01,750 --> 01:41:05,130
friends for the parentheses parentheses

1745
01:41:05,850 --> 01:41:11,440
so like normally what we'll do is we'll

1746
01:41:09,670 --> 01:41:13,390
have a way of putting some annotations

1747
01:41:11,439 --> 01:41:15,069
in there for new files so that will kind

1748
01:41:13,390 --> 01:41:18,460
of have something that carries along

1749
01:41:15,069 --> 01:41:20,949
with the data as it goes forward but for

1750
01:41:18,460 --> 01:41:23,020
the moment like all of our old files if

1751
01:41:20,949 --> 01:41:25,899
you ever imported a v-0 file using this

1752
01:41:23,020 --> 01:41:27,220
utility it just marks it as like we

1753
01:41:25,899 --> 01:41:30,099
don't know where this came from like

1754
01:41:27,220 --> 01:41:31,900
it's who knows really imported it from

1755
01:41:30,100 --> 01:41:33,490
another file and the file didn't have

1756
01:41:31,899 --> 01:41:36,069
annotation data so as far as we know

1757
01:41:33,489 --> 01:41:39,039
they came from the ether and that's what

1758
01:41:36,069 --> 01:41:40,509
we're trying to tell you right so what

1759
01:41:39,039 --> 01:41:42,539
we'll do here when we load all these

1760
01:41:40,510 --> 01:41:49,300
things is literally every single

1761
01:41:42,539 --> 01:41:52,779
annotation in question will get this

1762
01:41:49,300 --> 01:41:54,119
stamped on it so every single asset will

1763
01:41:52,779 --> 01:41:58,268
just get the same

1764
01:41:54,118 --> 01:41:59,018
annotation stamped on it period and off

1765
01:41:58,269 --> 01:42:03,849
you go

1766
01:41:59,019 --> 01:42:06,849
right so the assets themselves on the

1767
01:42:03,849 --> 01:42:09,309
other hand those will be the same we

1768
01:42:06,849 --> 01:42:12,729
didn't update that file at all

1769
01:42:09,309 --> 01:42:15,519
so each asset index that we load in in

1770
01:42:12,729 --> 01:42:26,349
this case is going to be exactly the

1771
01:42:15,519 --> 01:42:28,510
same as the asset that we had and the

1772
01:42:26,349 --> 01:42:29,979
only thing that we're probably gonna now

1773
01:42:28,510 --> 01:42:31,780
think about what we will have to update

1774
01:42:29,979 --> 01:42:34,059
though is the tag array so it's not

1775
01:42:31,779 --> 01:42:36,639
exactly true the first tag index

1776
01:42:34,059 --> 01:42:38,769
one-pass let last tag index is going to

1777
01:42:36,639 --> 01:42:40,868
have to get modified so we probably want

1778
01:42:38,769 --> 01:42:45,059
to do think here where we do just ask

1779
01:42:40,868 --> 01:42:53,078
that and we create dest asset from here

1780
01:42:45,059 --> 01:42:56,979
like so so we'll copy that in but then

1781
01:42:53,078 --> 01:42:59,498
we need to do a first tag index one past

1782
01:42:56,979 --> 01:43:02,949
list tag index this kind of has to be

1783
01:42:59,498 --> 01:43:04,179
updated right the annotation doesn't

1784
01:43:02,948 --> 01:43:06,009
have to be updated because the

1785
01:43:04,179 --> 01:43:07,538
annotation always just gets set the same

1786
01:43:06,010 --> 01:43:09,219
way no matter which asset index we're

1787
01:43:07,538 --> 01:43:11,158
actually on so that part's fairly

1788
01:43:09,219 --> 01:43:13,658
straightforward and won't eat anything

1789
01:43:11,158 --> 01:43:16,388
and so this is going to end up being a

1790
01:43:13,658 --> 01:43:18,788
double indexed year this is going to

1791
01:43:16,389 --> 01:43:22,479
index first over I shouldn't say index

1792
01:43:18,788 --> 01:43:29,018
this is going to iterate over each of

1793
01:43:22,479 --> 01:43:30,760
the the okay asset type arrays and for

1794
01:43:29,019 --> 01:43:32,739
each asset type array we'll go through

1795
01:43:30,760 --> 01:43:35,109
all the assets refer to that type array

1796
01:43:32,738 --> 01:43:36,578
and that way they'll know what type idea

1797
01:43:35,109 --> 01:43:38,889
is again that's the thing that's we've

1798
01:43:36,578 --> 01:43:42,518
removed so it's just gonna use that

1799
01:43:38,889 --> 01:43:44,859
first to sort of place some information

1800
01:43:42,519 --> 01:43:49,449
back into the file that we can use later

1801
01:43:44,859 --> 01:43:52,629
now what I don't actually know how we

1802
01:43:49,448 --> 01:43:54,908
want to do exactly again is what the

1803
01:43:52,628 --> 01:43:56,408
tags will actually be for these things

1804
01:43:54,908 --> 01:43:59,318
that we're looking at here like head

1805
01:43:56,408 --> 01:44:02,438
Cape torso grass Tufts tone rocks or

1806
01:43:59,319 --> 01:44:05,199
tree shadow font and font cliff that

1807
01:44:02,439 --> 01:44:07,250
sort of stuff I don't know exactly how

1808
01:44:05,198 --> 01:44:11,359
we want to specify the

1809
01:44:07,250 --> 01:44:13,670
asset types out separately there are a

1810
01:44:11,359 --> 01:44:16,158
few ways we could do it one way is we

1811
01:44:13,670 --> 01:44:18,289
could just define an asset type V one of

1812
01:44:16,158 --> 01:44:20,329
these zero thing and we just copy them

1813
01:44:18,289 --> 01:44:21,529
over directly and figure these assets or

1814
01:44:20,329 --> 01:44:24,019
assets that are going to go away

1815
01:44:21,529 --> 01:44:26,119
eventually one way or the other and so

1816
01:44:24,020 --> 01:44:28,850
either you're looking either you set

1817
01:44:26,119 --> 01:44:32,840
that to you know a new version or you

1818
01:44:28,850 --> 01:44:34,400
use the old version I'm not sure like I

1819
01:44:32,840 --> 01:44:35,539
said how I really want to do that we

1820
01:44:34,399 --> 01:44:39,349
should probably think about it a little

1821
01:44:35,539 --> 01:44:40,908
bit more carefully and maybe we won't

1822
01:44:39,350 --> 01:44:41,929
touch that part of it till next time

1823
01:44:40,908 --> 01:44:44,359
we'll have to think about it a little

1824
01:44:41,929 --> 01:44:47,658
bit but for now let's proceed with the

1825
01:44:44,359 --> 01:44:49,939
straightforward translation of the asset

1826
01:44:47,658 --> 01:44:55,039
types arrays so in here what I want to

1827
01:44:49,939 --> 01:44:56,839
do is loop over asset type index and for

1828
01:44:55,039 --> 01:45:02,539
every asset type index here that should

1829
01:44:56,840 --> 01:45:04,429
be in the asset types array I think

1830
01:45:02,539 --> 01:45:07,869
that's a thing that's actually in here

1831
01:45:04,429 --> 01:45:07,869
oops I met header

1832
01:45:19,149 --> 01:45:24,888
so it's this for a man I'm actually

1833
01:45:21,439 --> 01:45:26,988
looking for yeah

1834
01:45:24,889 --> 01:45:31,279
and so for each of those I want to look

1835
01:45:26,988 --> 01:45:35,750
at the source asset types of asset type

1836
01:45:31,279 --> 01:45:42,948
index and that'll give me an HSA asset

1837
01:45:35,750 --> 01:45:48,590
type v-0 right from there I want to do a

1838
01:45:42,948 --> 01:45:50,988
loop over the source asset index I and

1839
01:45:48,590 --> 01:45:53,239
that's not the same as the asset index

1840
01:45:50,988 --> 01:45:56,448
right in this case or I should say this

1841
01:45:53,238 --> 01:46:01,698
is the you know asset type asset index

1842
01:45:56,448 --> 01:46:04,578
however you want to look at it that no

1843
01:46:01,698 --> 01:46:08,388
actually it is a source it is a source

1844
01:46:04,578 --> 01:46:10,549
asset index because it's stored in the

1845
01:46:08,389 --> 01:46:13,190
asset type absolutely right its first

1846
01:46:10,550 --> 01:46:16,219
asset index it's actually correct right

1847
01:46:13,189 --> 01:46:19,609
so it's like that's the thing

1848
01:46:16,219 --> 01:46:22,368
one-pass last asset index plus source

1849
01:46:19,609 --> 01:46:23,569
right so that's actually gonna loop give

1850
01:46:22,368 --> 01:46:26,149
us the that's going to give us the

1851
01:46:23,569 --> 01:46:31,009
source F asset index that we're talking

1852
01:46:26,149 --> 01:46:33,259
about like so and so for each one of

1853
01:46:31,010 --> 01:46:37,179
those we will just put it into place

1854
01:46:33,260 --> 01:46:37,179
with the best asset index this way

1855
01:46:44,010 --> 01:46:48,159
so that seems pretty straightforward

1856
01:46:46,300 --> 01:46:49,510
that allows us to unpack these the way

1857
01:46:48,158 --> 01:46:51,038
that we want to so the really the only

1858
01:46:49,510 --> 01:46:55,149
thing we have to do is modify the tag

1859
01:46:51,038 --> 01:46:58,898
array there in order to make this work

1860
01:46:55,149 --> 01:47:07,209
properly we should also zero out so we

1861
01:46:58,899 --> 01:47:18,519
should take the HHA annotation and the

1862
01:47:07,208 --> 01:47:21,969
HHA asset and also the HHA tag and we

1863
01:47:18,519 --> 01:47:24,849
should set this so the HHA assets zero

1864
01:47:21,969 --> 01:47:30,630
should be the null asset the HHA tags

1865
01:47:24,849 --> 01:47:30,630
zero should be the null tag and the HHA

1866
01:47:31,439 --> 01:47:37,119
annotations zero should be the notation

1867
01:47:34,359 --> 01:47:39,130
and by the way a reason I'm doing it

1868
01:47:37,118 --> 01:47:44,288
that way is because technically you can

1869
01:47:39,130 --> 01:47:46,229
do this now I think you can but not all

1870
01:47:44,288 --> 01:47:49,779
compilers support that like for example

1871
01:47:46,229 --> 01:47:51,999
Visual Studio even I want to say maybe

1872
01:47:49,779 --> 01:47:55,630
even 2013 to this word it 2012

1873
01:47:51,998 --> 01:47:57,398
definitely didn't support it so in the

1874
01:47:55,630 --> 01:48:00,880
interest of supporting compilers a

1875
01:47:57,399 --> 01:48:04,479
little bit further back I still write it

1876
01:48:00,880 --> 01:48:06,668
this way even though modern wise you

1877
01:48:04,479 --> 01:48:08,380
wouldn't have to do that right you could

1878
01:48:06,668 --> 01:48:11,859
just use open closed bracket right on it

1879
01:48:08,380 --> 01:48:14,050
which is much more convenient but not

1880
01:48:11,859 --> 01:48:16,328
actually supported everywhere quite yet

1881
01:48:14,050 --> 01:48:18,149
so maybe in five years you can just

1882
01:48:16,328 --> 01:48:23,139
forget about that but not quite yet

1883
01:48:18,149 --> 01:48:25,149
anyway so the tag count here needs to

1884
01:48:23,139 --> 01:48:27,159
actually use the asset count from the

1885
01:48:25,149 --> 01:48:32,409
source asset count that makes sense so

1886
01:48:27,158 --> 01:48:35,109
this is actually header asset count we

1887
01:48:32,408 --> 01:48:37,719
go and so source file name this is

1888
01:48:35,109 --> 01:48:39,788
interesting so source file name in this

1889
01:48:37,719 --> 01:48:44,010
case I think I want to pack that into

1890
01:48:39,788 --> 01:48:47,009
the HHA like I'd like to put that here

1891
01:48:44,010 --> 01:48:47,010
probably

1892
01:48:50,550 --> 01:48:55,060
and this kind of argues that what I

1893
01:48:53,170 --> 01:48:57,730
really probably will need to do is

1894
01:48:55,060 --> 01:49:02,830
actually make it so that the file is

1895
01:48:57,729 --> 01:49:04,809
loaded inside here it sort of resisted

1896
01:49:02,829 --> 01:49:06,250
doing that a little bit but it looks

1897
01:49:04,810 --> 01:49:07,660
like that would be better anyway because

1898
01:49:06,250 --> 01:49:09,369
if the error checking happened in there

1899
01:49:07,659 --> 01:49:11,920
maybe that's just cleaner because then

1900
01:49:09,369 --> 01:49:14,140
you don't the check in the air twice you

1901
01:49:11,920 --> 01:49:16,149
know to check it once here and and once

1902
01:49:14,140 --> 01:49:21,340
here so I could just make it so that

1903
01:49:16,149 --> 01:49:27,129
this actually works outside seems okay

1904
01:49:21,340 --> 01:49:28,750
to me it's just this right so in here I

1905
01:49:27,130 --> 01:49:37,230
would just say like okay if you want to

1906
01:49:28,750 --> 01:49:50,260
load one of these you try to like so and

1907
01:49:37,229 --> 01:49:51,639
get an error here if you can't so if we

1908
01:49:50,260 --> 01:49:58,960
did it that way then this right here

1909
01:49:51,640 --> 01:49:59,440
becomes source file and source file name

1910
01:49:58,960 --> 01:50:01,449
oops

1911
01:49:59,439 --> 01:50:08,859
source file name is the actual thing

1912
01:50:01,449 --> 01:50:17,369
that you would be passing in and the

1913
01:50:08,859 --> 01:50:17,369
loaded HHA in this case is the result

1914
01:50:17,399 --> 01:50:24,189
right so the other thing I might do is I

1915
01:50:21,729 --> 01:50:26,619
might actually just let this continue to

1916
01:50:24,189 --> 01:50:28,329
work this way so maybe you always get

1917
01:50:26,619 --> 01:50:34,359
one back but maybe it doesn't have

1918
01:50:28,329 --> 01:50:40,149
anything in it right so I don't know I

1919
01:50:34,359 --> 01:50:42,069
don't know I feel about that yeah I mean

1920
01:50:40,149 --> 01:50:44,849
I think I might want to do that that way

1921
01:50:42,069 --> 01:50:49,539
so maybe what I'll do here is put a

1922
01:50:44,850 --> 01:50:52,210
valid flag in here and so you know only

1923
01:50:49,539 --> 01:50:55,529
once you've actually vetted in does it

1924
01:50:52,210 --> 01:50:55,529
consider it to be valid

1925
01:50:58,609 --> 01:51:03,859
and otherwise it doesn't otherwise it's

1926
01:51:01,069 --> 01:51:06,529
considered to have been a failed read

1927
01:51:03,859 --> 01:51:11,689
and that way in here we could say well

1928
01:51:06,529 --> 01:51:13,550
alright if the loaded HHA is not valid

1929
01:51:11,689 --> 01:51:17,419
that we're not gonna write it you know

1930
01:51:13,550 --> 01:51:19,940
I'm saying and that maybe seems a little

1931
01:51:17,420 --> 01:51:25,158
bit saner so I'll come through here and

1932
01:51:19,939 --> 01:51:29,289
just say all right that's you know and

1933
01:51:25,158 --> 01:51:33,069
this is if not file exists just filename

1934
01:51:29,289 --> 01:51:33,069
blah blah blah blah

1935
01:51:37,789 --> 01:51:42,469
and again like just that felt a little

1936
01:51:40,099 --> 01:51:46,210
bit better to me I don't have a strong

1937
01:51:42,469 --> 01:51:46,210
reason why it just felt a little better

1938
01:51:46,840 --> 01:51:52,659
guess that can go right here and off you

1939
01:51:50,599 --> 01:51:52,659
go

1940
01:51:56,618 --> 01:52:04,519
so that seems fair and then these get a

1941
01:51:59,599 --> 01:52:06,889
little simpler right these we can just

1942
01:52:04,520 --> 01:52:12,849
make they don't have to look like this

1943
01:52:06,889 --> 01:52:12,849
at all anymore just like this

1944
01:52:25,179 --> 01:52:30,380
and that is nicer I mean I think that's

1945
01:52:27,770 --> 01:52:32,060
just easier like it's nicer for people

1946
01:52:30,380 --> 01:52:35,420
who are trying to make things with this

1947
01:52:32,060 --> 01:52:39,010
utility so that does seem like it

1948
01:52:35,420 --> 01:52:39,010
probably that was an improvement and

1949
01:52:43,238 --> 01:52:48,379
well this one I guess I don't know what

1950
01:52:45,859 --> 01:52:50,689
I want to do with quite yet probably I

1951
01:52:48,380 --> 01:52:52,550
want a thing that just creates a null

1952
01:52:50,689 --> 01:52:56,439
header and will change over to using

1953
01:52:52,550 --> 01:52:56,440
that later but for now this seems fine

1954
01:53:03,729 --> 01:53:08,198
so we okay here

1955
01:53:24,909 --> 01:53:47,000
I think that's all good and so here we

1956
01:53:30,439 --> 01:53:48,500
would you know write the file at this

1957
01:53:47,000 --> 01:53:51,500
point once we get it

1958
01:53:48,500 --> 01:53:54,619
so here's us reading it in you know and

1959
01:53:51,500 --> 01:53:57,948
and there is us writing it out so now if

1960
01:53:54,619 --> 01:54:01,250
we go to start compiling and we see the

1961
01:53:57,948 --> 01:54:02,839
right annotation here that's something

1962
01:54:01,250 --> 01:54:06,560
that we haven't actually implemented yet

1963
01:54:02,840 --> 01:54:07,489
we'll get to that in a second see what

1964
01:54:06,560 --> 01:54:10,070
else we've got

1965
01:54:07,488 --> 01:54:12,500
source s at types and source assets we

1966
01:54:10,069 --> 01:54:13,789
haven't read from the file yet well we

1967
01:54:12,500 --> 01:54:16,159
read them for values to haven't pointed

1968
01:54:13,789 --> 01:54:20,420
to them yet so we want to do that so for

1969
01:54:16,159 --> 01:54:21,920
example in here right we want to do and

1970
01:54:20,420 --> 01:54:22,810
I guess actually we could just do it

1971
01:54:21,920 --> 01:54:27,560
right here

1972
01:54:22,810 --> 01:54:32,090
hh8 asset source assets that's just

1973
01:54:27,560 --> 01:54:34,820
going to be HHA asset cast of the

1974
01:54:32,090 --> 01:54:38,510
datastore plus what the datastore says

1975
01:54:34,819 --> 01:54:41,829
the assets array location is the same is

1976
01:54:38,510 --> 01:54:41,829
true for the types

1977
01:54:50,069 --> 01:55:00,149
and thus a mysterious the tags so that

1978
01:54:58,739 --> 01:55:02,219
just basically gives us all of our

1979
01:55:00,149 --> 01:55:06,659
source like all the stuff we want to

1980
01:55:02,220 --> 01:55:10,250
read from oops that's supposed to be

1981
01:55:06,659 --> 01:55:13,710
zero because that's not around anymore

1982
01:55:10,250 --> 01:55:17,159
so at that point we just need to do our

1983
01:55:13,710 --> 01:55:21,510
tag rewriting and is there anything else

1984
01:55:17,159 --> 01:55:37,760
we did not do yet file exists needs to

1985
01:55:21,510 --> 01:55:42,630
move up in the world so and that's it so

1986
01:55:37,760 --> 01:55:47,670
so I think now that's supposed to be

1987
01:55:42,630 --> 01:55:51,420
annotations yeah so I think that's all

1988
01:55:47,670 --> 01:55:55,050
good at the moment but again so what we

1989
01:55:51,420 --> 01:55:57,930
need to do here also is when we go to

1990
01:55:55,050 --> 01:55:59,550
actually write annotations so what we're

1991
01:55:57,930 --> 01:56:04,680
gonna need is we're gonna need the

1992
01:55:59,550 --> 01:56:06,930
ability to we're gonna need the ability

1993
01:56:04,680 --> 01:56:08,579
to talk about data that's not in the

1994
01:56:06,930 --> 01:56:11,579
data store the current as it currently

1995
01:56:08,579 --> 01:56:14,189
exists right so like we have to be able

1996
01:56:11,579 --> 01:56:18,659
to copy we have to be able to copy data

1997
01:56:14,189 --> 01:56:20,609
that's in the data store or forward and

1998
01:56:18,659 --> 01:56:22,069
that's a little harder like that part's

1999
01:56:20,609 --> 01:56:24,449
gonna be a little bit trickier right

2000
01:56:22,069 --> 01:56:26,399
because the data stuff that's in the

2001
01:56:24,449 --> 01:56:27,869
data store varies depending on how it

2002
01:56:26,399 --> 01:56:31,039
works this way I think so the data

2003
01:56:27,869 --> 01:56:33,380
offsets there but we don't have the size

2004
01:56:31,039 --> 01:56:36,869
right

2005
01:56:33,380 --> 01:56:40,140
the size is implied by whatever the type

2006
01:56:36,869 --> 01:56:42,420
is so it's a little more work for us we

2007
01:56:40,140 --> 01:56:46,650
have to look to see which kind which

2008
01:56:42,420 --> 01:56:50,279
type this was and then we have to move

2009
01:56:46,649 --> 01:56:54,210
it over and that to me also that kind of

2010
01:56:50,279 --> 01:56:58,829
suggests again that maybe we want to

2011
01:56:54,210 --> 01:57:00,328
actually just include something that

2012
01:56:58,829 --> 01:57:07,828
lets us

2013
01:57:00,328 --> 01:57:11,069
ah we just want to include that

2014
01:57:07,828 --> 01:57:14,578
information directly right so we want to

2015
01:57:11,069 --> 01:57:16,500
have like an actual we don't want to

2016
01:57:14,578 --> 01:57:18,149
have to jump in here and figure out what

2017
01:57:16,500 --> 01:57:19,649
the actual size of the thing was to copy

2018
01:57:18,149 --> 01:57:24,118
every time we might want to just write

2019
01:57:19,649 --> 01:57:26,219
it you know I'm not sure like I couldn't

2020
01:57:24,118 --> 01:57:28,319
say for sure like maybe it's better to

2021
01:57:26,219 --> 01:57:30,029
just always actually compute it they're

2022
01:57:28,319 --> 01:57:34,710
pretty easy to compute least for these

2023
01:57:30,029 --> 01:57:40,078
two and HHA fonts a little harder it's

2024
01:57:34,710 --> 01:57:44,309
two arrays but you know these are much

2025
01:57:40,078 --> 01:57:46,920
more direct so it's it's hard to say

2026
01:57:44,309 --> 01:57:49,800
which one of those you would want to do

2027
01:57:46,920 --> 01:57:51,658
whether it's worth it to actually have a

2028
01:57:49,800 --> 01:57:53,639
size field for something that you

2029
01:57:51,658 --> 01:57:55,348
wouldn't have to do but when you go

2030
01:57:53,639 --> 01:57:57,000
through here you do you would have to

2031
01:57:55,349 --> 01:57:58,619
know like you have to know which type it

2032
01:57:57,000 --> 01:58:02,750
is to move it because you need to know

2033
01:57:58,618 --> 01:58:15,448
how big the data is that you're moving

2034
01:58:02,750 --> 01:58:19,828
so so yeah so wiring all this stuff up

2035
01:58:15,448 --> 01:58:30,000
at that point should be fairly

2036
01:58:19,828 --> 01:58:35,039
straightforward though the only weird

2037
01:58:30,000 --> 01:58:40,529
thing here again is that the annotations

2038
01:58:35,039 --> 01:58:44,130
because the annotations are missing I

2039
01:58:40,529 --> 01:58:46,649
think I might want to basically have

2040
01:58:44,130 --> 01:58:49,710
those be unpacked so I feel like I might

2041
01:58:46,649 --> 01:58:52,679
want to do this as loaded HHA annotation

2042
01:58:49,710 --> 01:58:56,809
I might want to just have that so that

2043
01:58:52,679 --> 01:58:56,809
this is actually done this way

2044
01:59:15,279 --> 01:59:39,849
trying to think if there's a smarter way

2045
01:59:17,170 --> 01:59:41,019
to do this there might well be so we

2046
01:59:39,849 --> 01:59:44,019
might want to do it this way where we

2047
01:59:41,019 --> 01:59:50,349
just say look these things are you know

2048
01:59:44,019 --> 01:59:54,460
just stuff that you having a loaded sea

2049
01:59:50,349 --> 01:59:58,800
version and you know other things may

2050
01:59:54,460 --> 02:00:06,248
want to be that way eventually as well

2051
01:59:58,800 --> 02:00:07,059
hard to say but let's just claim that

2052
02:00:06,248 --> 02:00:09,519
that's the case

2053
02:00:07,059 --> 02:00:18,099
so I mean here when I go to create that

2054
02:00:09,519 --> 02:00:19,929
array I had actually do this and then

2055
02:00:18,099 --> 02:00:30,069
what I can do is say well the default

2056
02:00:19,929 --> 02:00:30,969
annotation is actually this and then off

2057
02:00:30,069 --> 02:00:33,238
we go

2058
02:00:30,969 --> 02:00:33,239
right

2059
02:00:43,350 --> 02:00:46,560
there we go

2060
02:00:46,720 --> 02:00:52,480
so now we're down to just the tagging

2061
02:00:49,720 --> 02:01:01,690
and again that's yeah that's sort of the

2062
02:00:52,479 --> 02:01:03,159
thing that we don't really know how you

2063
02:01:01,689 --> 02:01:07,719
want to do so I may stop there and pick

2064
02:01:03,159 --> 02:01:09,909
that up next week other than that we

2065
02:01:07,720 --> 02:01:12,610
have the things loaded so if for example

2066
02:01:09,909 --> 02:01:17,079
I undid those two lines that we should

2067
02:01:12,609 --> 02:01:19,329
have our H shape we can also continue

2068
02:01:17,079 --> 02:01:28,449
having the other things compiled if we

2069
02:01:19,329 --> 02:01:30,579
want to buy inside the asset inside

2070
02:01:28,449 --> 02:01:36,579
handmade ith where we include the asset

2071
02:01:30,579 --> 02:01:39,699
the file format so that's in that's

2072
02:01:36,579 --> 02:01:42,250
right here right after that's included

2073
02:01:39,699 --> 02:01:47,309
we can if we want to use a pound to find

2074
02:01:42,250 --> 02:01:56,619
to change things back so for example in

2075
02:01:47,310 --> 02:01:59,770
the in file formats V 0 here we can

2076
02:01:56,619 --> 02:02:04,859
shuffle these around so like for example

2077
02:01:59,770 --> 02:02:10,540
if we just include handmade file formats

2078
02:02:04,859 --> 02:02:12,969
B 0 this is a temporary thing if we

2079
02:02:10,539 --> 02:02:17,800
include that we can define HHA header to

2080
02:02:12,970 --> 02:02:23,949
be HHA header v 0 and we can define HHA

2081
02:02:17,800 --> 02:02:30,119
asset type to be HHA asset type 0 and

2082
02:02:23,949 --> 02:02:30,119
that will like use

2083
02:02:36,600 --> 02:02:47,050
acet type ID step type by the zero so

2084
02:02:44,920 --> 02:02:49,989
that would solve our problem there right

2085
02:02:47,050 --> 02:02:52,690
and the only thing I guess that I have

2086
02:02:49,989 --> 02:02:58,059
to do here is in file formats this part

2087
02:02:52,689 --> 02:03:03,489
here you know if we decide to go this

2088
02:02:58,060 --> 02:03:05,740
route so that allows us to keep

2089
02:03:03,489 --> 02:03:07,420
compiling and keep running properly even

2090
02:03:05,739 --> 02:03:10,389
though we kind of have a split version

2091
02:03:07,420 --> 02:03:13,949
now so in theory this should still work

2092
02:03:10,390 --> 02:03:18,579
I assume although that turns out to not

2093
02:03:13,949 --> 02:03:21,179
Y be the case which asset file are we

2094
02:03:18,579 --> 02:03:21,180
looking at here

2095
02:03:31,868 --> 02:03:41,679
did I not have keep everything the same

2096
02:03:35,139 --> 02:03:48,069
shape let me just double-check what I've

2097
02:03:41,679 --> 02:03:51,399
got in here we've got header asset type

2098
02:03:48,069 --> 02:04:04,408
and ID those all should have been the

2099
02:03:51,399 --> 02:04:06,670
same and you didn't mess with the tags

2100
02:04:04,408 --> 02:04:10,089
we have annotations but they should not

2101
02:04:06,670 --> 02:04:19,090
be in the file so all this stuff should

2102
02:04:10,090 --> 02:04:25,210
be fine and and the header should be

2103
02:04:19,090 --> 02:04:28,449
fine too yeah and we don't have any hhas

2104
02:04:25,210 --> 02:04:31,060
that aren't the old h @ JS right so

2105
02:04:28,448 --> 02:04:32,948
everybody's fine there yes so we should

2106
02:04:31,060 --> 02:04:34,449
be able to just to leave this compiling

2107
02:04:32,948 --> 02:04:37,448
which is the only thing I was actually

2108
02:04:34,448 --> 02:04:38,859
going to try and do we should be able to

2109
02:04:37,448 --> 02:04:42,789
make it so that we can use the old

2110
02:04:38,859 --> 02:04:45,130
versions by just pound to finding the

2111
02:04:42,789 --> 02:04:48,579
new versions to be the old versions and

2112
02:04:45,130 --> 02:04:52,359
that way everyone in the asset system

2113
02:04:48,579 --> 02:04:55,809
still uses those older versions right so

2114
02:04:52,359 --> 02:04:57,759
they'd still use all of this stuff but

2115
02:04:55,810 --> 02:05:00,250
it didn't look like that worked properly

2116
02:04:57,760 --> 02:05:02,739
so I want to take a quick look and see

2117
02:05:00,250 --> 02:05:06,069
why because we should be able to still

2118
02:05:02,738 --> 02:05:10,299
compile with the old asset loading right

2119
02:05:06,069 --> 02:05:12,809
and that should in theory be the case so

2120
02:05:10,300 --> 02:05:12,810
let's take a look

2121
02:05:21,350 --> 02:05:26,710
take a look at the file here has version

2122
02:05:25,100 --> 02:05:30,230
zero which is what we would expect

2123
02:05:26,710 --> 02:05:35,600
there's not much else going on there

2124
02:05:30,229 --> 02:05:36,949
quite yet we just look at the handle

2125
02:05:35,600 --> 02:05:41,030
there's no errors yet

2126
02:05:36,949 --> 02:05:43,340
it's got all the stuff set that we

2127
02:05:41,029 --> 02:05:49,639
expect to have set so that's good too

2128
02:05:43,340 --> 02:05:58,940
it's got the asset types hmm no so this

2129
02:05:49,640 --> 02:06:06,880
is wrong so it isn't using the it's it's

2130
02:05:58,939 --> 02:06:14,509
using the wrong size for that fellow oh

2131
02:06:06,880 --> 02:06:16,369
this is outside of the pragma which is

2132
02:06:14,510 --> 02:06:21,260
not good you know what I should just put

2133
02:06:16,369 --> 02:06:25,220
this in here because these have to be

2134
02:06:21,260 --> 02:06:26,600
inside the pragma well I guess what I

2135
02:06:25,220 --> 02:06:31,550
could do is I'll just put the fragment

2136
02:06:26,600 --> 02:06:34,670
both places right we yeah it's supposed

2137
02:06:31,550 --> 02:06:36,920
to know it has to know specifically how

2138
02:06:34,670 --> 02:06:39,130
things are aligned there right it can't

2139
02:06:36,920 --> 02:06:41,690
leave gaps and it can't do other stuff

2140
02:06:39,130 --> 02:06:46,159
like that so these have to be inside the

2141
02:06:41,689 --> 02:06:49,279
pragma where we define everything we

2142
02:06:46,159 --> 02:06:50,960
also need to this version I need to

2143
02:06:49,279 --> 02:06:52,939
redefine the version number which I

2144
02:06:50,960 --> 02:06:57,020
guess I forgot to do that as well so

2145
02:06:52,939 --> 02:07:01,569
inside here we need to do a pound to

2146
02:06:57,020 --> 02:07:07,040
find HHA version zero so we'll just on

2147
02:07:01,569 --> 02:07:09,920
define it and define it I knew okay so

2148
02:07:07,039 --> 02:07:10,220
let's try that one more time so there we

2149
02:07:09,920 --> 02:07:11,960
go

2150
02:07:10,220 --> 02:07:14,000
so now we're just loading correctly so

2151
02:07:11,960 --> 02:07:16,310
I'm gonna leave it like that and then

2152
02:07:14,000 --> 02:07:19,250
next weekend what we'll do is we'll pick

2153
02:07:16,310 --> 02:07:20,330
up where we left off on here so we'll

2154
02:07:19,250 --> 02:07:22,189
just make a thing that allows us to

2155
02:07:20,329 --> 02:07:24,619
import our old files and change the file

2156
02:07:22,189 --> 02:07:27,109
format over you know add annotations in

2157
02:07:24,619 --> 02:07:30,199
so that we can then from now on when we

2158
02:07:27,109 --> 02:07:32,659
import stuff we can keep those

2159
02:07:30,199 --> 02:07:34,760
annotations we should probably put in to

2160
02:07:32,659 --> 02:07:38,809
the file as well what the ANA

2161
02:07:34,760 --> 02:07:39,710
tation what the source location was so

2162
02:07:38,809 --> 02:07:47,029
you know what the other thing we should

2163
02:07:39,710 --> 02:07:51,288
do is in here we should get rid of this

2164
02:07:47,029 --> 02:07:53,840
thing the asset indices thing what we

2165
02:07:51,288 --> 02:07:57,738
should do instead is well we can get rid

2166
02:07:53,840 --> 02:08:03,110
of it we should put in the that source

2167
02:07:57,738 --> 02:08:07,038
information into the annotations here so

2168
02:08:03,109 --> 02:08:13,460
basically this annotation would also

2169
02:08:07,038 --> 02:08:16,069
have a sprite sheet X sprite sheet Y so

2170
02:08:13,460 --> 02:08:24,139
it like tells you where it was in the

2171
02:08:16,069 --> 02:08:25,788
source file know if there's anything

2172
02:08:24,139 --> 02:08:38,078
else we want there but I was padded out

2173
02:08:25,788 --> 02:08:38,078
so that it's even sighs yeah and I guess

2174
02:08:39,368 --> 02:08:44,328
you know if we wanted to we could store

2175
02:08:42,109 --> 02:08:45,439
the file date even in there too I

2176
02:08:44,328 --> 02:08:47,299
suppose

2177
02:08:45,439 --> 02:08:50,808
I mean while we're at it right if you

2178
02:08:47,300 --> 02:08:55,239
just put everything in there so maybe

2179
02:08:50,809 --> 02:08:55,239
that is what we should do just do that

2180
02:09:00,460 --> 02:09:05,779
so maybe yeah maybe we'll do that stuff

2181
02:09:03,380 --> 02:09:07,460
and that way we can have all those

2182
02:09:05,779 --> 02:09:08,989
annotations in there they can always be

2183
02:09:07,460 --> 02:09:10,909
stripped out when you stripped it when

2184
02:09:08,989 --> 02:09:12,469
you ship the game if you needed the

2185
02:09:10,909 --> 02:09:13,489
space that's why I put them in a

2186
02:09:12,470 --> 02:09:16,820
separate array because they're not

2187
02:09:13,489 --> 02:09:18,439
actually necessary for anything but I

2188
02:09:16,819 --> 02:09:19,699
feel like again since this is a game

2189
02:09:18,439 --> 02:09:21,439
that you want to encourage people to

2190
02:09:19,699 --> 02:09:23,149
play around with leaving the annotations

2191
02:09:21,439 --> 02:09:25,399
in is how we will probably end up

2192
02:09:23,149 --> 02:09:27,319
shipping it but I put them in a place

2193
02:09:25,399 --> 02:09:29,389
where you could strip them out because

2194
02:09:27,319 --> 02:09:31,539
that's probably what you would want to

2195
02:09:29,390 --> 02:09:33,320
do when you actually ship to the game

2196
02:09:31,539 --> 02:09:35,239
normally you wouldn't want to waste a

2197
02:09:33,319 --> 02:09:36,649
bunch of space with metadata that you

2198
02:09:35,239 --> 02:09:41,529
didn't actually use when you're running

2199
02:09:36,649 --> 02:09:41,529
it alright let's go to the Q&amp;A here

2200
02:09:55,460 --> 02:10:00,420
so instead of tags why not relegate the

2201
02:09:57,960 --> 02:10:02,460
logic of picking a range of or ran a

2202
02:10:00,420 --> 02:10:04,619
bunch of specific assets to the part

2203
02:10:02,460 --> 02:10:07,649
that pulls assets in eg when making a

2204
02:10:04,619 --> 02:10:10,199
new entity or what have you have a way

2205
02:10:07,649 --> 02:10:12,239
to specify hey pick one of from these

2206
02:10:10,199 --> 02:10:13,529
specific assets here by path name or

2207
02:10:12,239 --> 02:10:15,449
some other identifier obviously comes

2208
02:10:13,529 --> 02:10:18,059
with its own issues might not be what

2209
02:10:15,449 --> 02:10:20,699
you want and all but is it I be retained

2210
02:10:18,060 --> 02:10:25,020
um so we got two problems one is first

2211
02:10:20,699 --> 02:10:27,720
of all well I should say first of all

2212
02:10:25,020 --> 02:10:30,050
before I say anything else that is sort

2213
02:10:27,720 --> 02:10:33,840
of what I was suggesting right meaning

2214
02:10:30,050 --> 02:10:36,600
you would have ways of segregating tags

2215
02:10:33,840 --> 02:10:38,279
out into two sets one set that's when

2216
02:10:36,600 --> 02:10:39,870
you create an entity you use to pick

2217
02:10:38,279 --> 02:10:42,359
from the tags that way and then another

2218
02:10:39,869 --> 02:10:44,729
one that's inside there when you're

2219
02:10:42,359 --> 02:10:46,529
actually using that entity that helps

2220
02:10:44,729 --> 02:10:50,189
you pick stuff like facing direction and

2221
02:10:46,529 --> 02:10:52,139
things like that right so I was counting

2222
02:10:50,189 --> 02:10:55,559
in that but there's some problems so the

2223
02:10:52,140 --> 02:10:57,300
first problem is if for hot loading if

2224
02:10:55,560 --> 02:11:00,860
you want to be able to support like

2225
02:10:57,300 --> 02:11:05,520
loading this new PNG that maybe the PNG

2226
02:11:00,859 --> 02:11:09,179
specifies a new set of information that

2227
02:11:05,520 --> 02:11:11,550
would change the thing you would have

2228
02:11:09,180 --> 02:11:13,860
picked in the entity creation thing that

2229
02:11:11,550 --> 02:11:17,600
entity won't change on the screen but it

2230
02:11:13,859 --> 02:11:20,279
should have right so picking every frame

2231
02:11:17,600 --> 02:11:22,350
is not a particularly good idea from

2232
02:11:20,279 --> 02:11:25,050
efficiency but we may have to at least

2233
02:11:22,350 --> 02:11:27,690
have a way to make sure that that does

2234
02:11:25,050 --> 02:11:31,050
happen look we want to we want to be

2235
02:11:27,689 --> 02:11:34,589
able to reap ich when we know that our

2236
02:11:31,050 --> 02:11:36,590
our assets have updated right so we need

2237
02:11:34,590 --> 02:11:40,739
to kind of have a way at least of

2238
02:11:36,590 --> 02:11:44,750
repacking to support heart hot loading

2239
02:11:40,739 --> 02:11:48,559
but yes beyond that it would be okay to

2240
02:11:44,750 --> 02:11:52,319
pick at least part of the tags first

2241
02:11:48,560 --> 02:11:55,610
other tags like facing direction those

2242
02:11:52,319 --> 02:11:59,210
vary over frames so they can't be

2243
02:11:55,609 --> 02:11:59,210
handled in the same way

2244
02:12:24,119 --> 02:12:27,529
we will not be getting scripting

2245
02:12:35,219 --> 02:12:46,500
we're going to use type def for the

2246
02:12:37,439 --> 02:12:48,479
enums no what do you mean type def for

2247
02:12:46,500 --> 02:12:52,500
the enums I'm not sure what you mean by

2248
02:12:48,479 --> 02:12:56,129
that exactly we're just using enums as

2249
02:12:52,500 --> 02:12:58,890
items also is an unnamed Union inside a

2250
02:12:56,130 --> 02:13:02,390
struct legal in terms of an CC I don't

2251
02:12:58,890 --> 02:13:08,060
think so

2252
02:13:02,390 --> 02:13:08,060
unnamed unions and unnamed strux inside

2253
02:13:09,859 --> 02:13:17,269
so unnamed unions and unnamed strux

2254
02:13:13,409 --> 02:13:20,819
in general nested inside each other I

2255
02:13:17,270 --> 02:13:24,660
don't think is supported by ANSI C or

2256
02:13:20,819 --> 02:13:27,409
ANSI C++ but I could be wrong about that

2257
02:13:24,659 --> 02:13:31,099
it's far too useful not to use and

2258
02:13:27,409 --> 02:13:33,210
should be part of the spec like for sure

2259
02:13:31,100 --> 02:13:36,900
since all the compilers we care about

2260
02:13:33,210 --> 02:13:39,239
support it we use it whether or not it's

2261
02:13:36,899 --> 02:13:41,389
in a spec samar though I couldn't tell

2262
02:13:39,238 --> 02:13:41,389
you

2263
02:13:47,729 --> 02:13:52,238
we'll hhe contain hashes check sums for

2264
02:13:50,770 --> 02:13:54,190
regional input files this might allow a

2265
02:13:52,238 --> 02:14:00,629
nice way to only update the changed

2266
02:13:54,189 --> 02:14:00,629
assets even if file timestamps are off I

2267
02:14:01,859 --> 02:14:07,948
didn't really want to implement a

2268
02:14:04,359 --> 02:14:07,948
checksum but we could

2269
02:14:41,369 --> 02:15:06,819
so there's our offsets there's our

2270
02:14:43,840 --> 02:15:09,220
Dayton checksum 1 2 3 4 5 6 7 8 don't

2271
02:15:06,819 --> 02:15:16,929
ask me why I padded those up to 8 I just

2272
02:15:09,220 --> 02:15:18,699
did if the entity holds a reference into

2273
02:15:16,930 --> 02:15:21,190
a table that looks up the asset and that

2274
02:15:18,699 --> 02:15:23,109
would work with hot loading no it would

2275
02:15:21,189 --> 02:15:27,759
not because it's the selection that's

2276
02:15:23,109 --> 02:15:29,319
the problem right so for example let's

2277
02:15:27,760 --> 02:15:34,239
suppose we go back to that diagram

2278
02:15:29,319 --> 02:15:36,130
remember remember this so we go back to

2279
02:15:34,239 --> 02:15:37,779
that diagram if you had a table of

2280
02:15:36,130 --> 02:15:40,210
indirection all it would do was allow

2281
02:15:37,779 --> 02:15:42,039
you to replace a with something else but

2282
02:15:40,210 --> 02:15:44,590
it wouldn't allow you to subdivide a

2283
02:15:42,039 --> 02:15:47,350
into new quadrants that each meant

2284
02:15:44,590 --> 02:15:49,569
something different right so that's what

2285
02:15:47,350 --> 02:15:51,970
I was talking about also what I meant

2286
02:15:49,569 --> 02:15:53,799
was go away with the specific code side

2287
02:15:51,970 --> 02:15:55,780
to find tags and leave picking down to

2288
02:15:53,800 --> 02:15:57,850
reference specifically by path or asset

2289
02:15:55,779 --> 02:16:00,609
name that's based on the source asset

2290
02:15:57,850 --> 02:16:02,410
file um I don't really want anything to

2291
02:16:00,609 --> 02:16:10,539
be based on the source asset file at the

2292
02:16:02,409 --> 02:16:11,710
moment though I implemented animations

2293
02:16:10,539 --> 02:16:13,029
as the base intertext and where every

2294
02:16:11,710 --> 02:16:15,130
animation frame is tagged with a number

2295
02:16:13,029 --> 02:16:16,809
between 0 and tau and as the t-value

2296
02:16:15,130 --> 02:16:18,730
loop goes up it says hey go to the next

2297
02:16:16,810 --> 02:16:20,440
sprite but not for this a good idea you

2298
02:16:18,729 --> 02:16:23,229
seen any problems with this and/or how

2299
02:16:20,439 --> 02:16:29,529
to do 2d animations normally know which

2300
02:16:23,229 --> 02:16:32,829
sprite to grab no I don't see any

2301
02:16:29,529 --> 02:16:36,399
problem with that the only thing I would

2302
02:16:32,829 --> 02:16:41,100
mention is that the efficiency of the

2303
02:16:36,399 --> 02:16:41,100
query may be kind of in question

2304
02:16:43,519 --> 02:16:49,370
so I would say always keep your tags

2305
02:16:46,149 --> 02:16:53,029
sprites sorted in a way that's easy to

2306
02:16:49,370 --> 02:16:54,740
look them up by that T value to

2307
02:16:53,030 --> 02:16:57,170
accelerate the fact that that's such a

2308
02:16:54,739 --> 02:16:58,670
common case so that's really the thing

2309
02:16:57,170 --> 02:17:02,450
that I would think you would need to

2310
02:16:58,670 --> 02:17:03,710
know but no it's it's a totally

2311
02:17:02,450 --> 02:17:05,360
reasonable way to do it because that's

2312
02:17:03,709 --> 02:17:08,419
sort of what you do normally with T

2313
02:17:05,360 --> 02:17:10,040
lookups a lot of times animations have

2314
02:17:08,420 --> 02:17:11,808
fixed frame rates at which point you

2315
02:17:10,040 --> 02:17:14,540
don't need to store the T you can just

2316
02:17:11,808 --> 02:17:16,459
look it up as an array right so you may

2317
02:17:14,540 --> 02:17:18,710
want to look into hey am I always

2318
02:17:16,459 --> 02:17:21,799
storing is the T always going up by a

2319
02:17:18,709 --> 02:17:23,539
fixed amount anyway and if so then just

2320
02:17:21,799 --> 02:17:26,388
store them and have a more compact

2321
02:17:23,540 --> 02:17:29,269
format for storing those kinds of tag

2322
02:17:26,388 --> 02:17:33,009
sets but yeah I mean it's not no it's

2323
02:17:29,269 --> 02:17:33,010
not the craziest thing I've ever heard

2324
02:18:11,888 --> 02:18:20,179
mmm any more on topics questions any

2325
02:18:16,429 --> 02:18:29,529
more on to other questions not looking

2326
02:18:20,179 --> 02:18:29,529
likely all right

2327
02:18:34,000 --> 02:18:38,959
miss clothes down here actually did we

2328
02:18:36,200 --> 02:18:48,069
but I made those changes we should make

2329
02:18:38,959 --> 02:18:48,068
sure we still build yeah all right

2330
02:18:48,189 --> 02:18:57,439
close this down no close that okay thank

2331
02:18:56,269 --> 02:18:58,429
you for joining us for the episode of

2332
02:18:57,439 --> 02:19:01,099
hand made here oh it's been a pleasure

2333
02:18:58,429 --> 02:19:02,148
coding with you as always if you want to

2334
02:19:01,099 --> 02:19:03,950
follow us series at home you can always

2335
02:19:02,148 --> 02:19:05,510
peer to the game on handmade hero org

2336
02:19:03,950 --> 02:19:08,960
and it comes to the source code so that

2337
02:19:05,510 --> 02:19:11,000
you can play around fit yourself we also

2338
02:19:08,959 --> 02:19:14,119
have a whole bunch of website stuff

2339
02:19:11,000 --> 02:19:15,679
there if you are interested in exploring

2340
02:19:14,120 --> 02:19:18,290
a little more we've got a watch page

2341
02:19:15,679 --> 02:19:21,200
that where you can do really good like

2342
02:19:18,290 --> 02:19:22,309
lookups to old episodes or have a thing

2343
02:19:21,200 --> 02:19:23,870
that tells you when the streams going to

2344
02:19:22,308 --> 02:19:25,728
be live and all kinds of stuff so check

2345
02:19:23,870 --> 02:19:27,290
that out so it's a really easy way to

2346
02:19:25,728 --> 02:19:30,170
watch the series whether it's new

2347
02:19:27,290 --> 02:19:31,490
episodes or old episodes we have an FAQ

2348
02:19:30,170 --> 02:19:33,019
for a frequently asked questions I've

2349
02:19:31,489 --> 02:19:34,638
seen those or anyone's watching the

2350
02:19:33,019 --> 02:19:37,189
series by now priority knows those but I

2351
02:19:34,638 --> 02:19:38,568
also have a handmade fund contribution

2352
02:19:37,189 --> 02:19:41,300
page where you can help support things

2353
02:19:38,568 --> 02:19:42,978
like the handmade network and the

2354
02:19:41,299 --> 02:19:45,920
annotated episode guide to handmade hero

2355
02:19:42,978 --> 02:19:48,528
that community people do that we try to

2356
02:19:45,920 --> 02:19:49,818
help pay them for and of course you can

2357
02:19:48,529 --> 02:19:51,590
always click on the handmade hero head

2358
02:19:49,818 --> 02:19:53,239
if you want to go to other our other

2359
02:19:51,590 --> 02:19:55,159
Molly Rocket websites like the game that

2360
02:19:53,239 --> 02:19:58,398
I work on during the day or upcoming

2361
02:19:55,159 --> 02:20:01,369
comic book or Anna nice blogs that sort

2362
02:19:58,398 --> 02:20:02,840
of stuff hmmm that's about it for today

2363
02:20:01,370 --> 02:20:04,100
I'll be back here next week don't forget

2364
02:20:02,840 --> 02:20:05,960
to check that watch page for the

2365
02:20:04,100 --> 02:20:07,700
schedule it'll be updated pretty soon

2366
02:20:05,959 --> 02:20:09,858
with when the next handmade hero

2367
02:20:07,700 --> 02:20:11,450
broadcast dates are until then have fun

2368
02:20:09,859 --> 02:20:12,050
programming everyone and I'll see you on

2369
02:20:11,450 --> 02:20:14,740
the Internet

2370
02:20:12,049 --> 02:20:14,739
take use everybody

