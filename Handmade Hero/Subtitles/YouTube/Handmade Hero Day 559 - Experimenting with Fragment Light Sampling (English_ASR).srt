1
00:00:00,030 --> 00:00:04,589
hello everyone and welcome to handmade

2
00:00:02,669 --> 00:00:06,899
Hero the show Rico to complete game live

3
00:00:04,589 --> 00:00:09,150
on stream a couple things for I get

4
00:00:06,899 --> 00:00:12,210
started today obviously we have a

5
00:00:09,150 --> 00:00:14,759
discord now there is a button for it if

6
00:00:12,210 --> 00:00:16,949
you would like to chat offline as well

7
00:00:14,759 --> 00:00:19,528
as online you can always go over there

8
00:00:16,949 --> 00:00:22,230
it's discord for all Molly rocket things

9
00:00:19,528 --> 00:00:23,640
including handmade hero and there's

10
00:00:22,230 --> 00:00:25,289
pretty much people chatting at all hours

11
00:00:23,640 --> 00:00:27,028
of the day on there so head over there

12
00:00:25,289 --> 00:00:28,349
there's a technical area to ask tech

13
00:00:27,028 --> 00:00:31,829
questions or talk about tech stuff

14
00:00:28,349 --> 00:00:33,539
there's also a general place there's an

15
00:00:31,829 --> 00:00:35,039
art place there there's even a place for

16
00:00:33,539 --> 00:00:37,500
food people have been doing so much

17
00:00:35,039 --> 00:00:40,019
handmade cooking there's like a food

18
00:00:37,500 --> 00:00:42,119
channel on there now so head over there

19
00:00:40,020 --> 00:00:43,649
if you want to check that out I also

20
00:00:42,119 --> 00:00:46,079
have a public service announcement the

21
00:00:43,649 --> 00:00:47,189
watch page is broken a parent I

22
00:00:46,079 --> 00:00:48,509
mentioned this the other day I

23
00:00:47,189 --> 00:00:50,250
double-checked it

24
00:00:48,509 --> 00:00:52,439
twitch went ahead and changed their API

25
00:00:50,250 --> 00:00:54,719
out from under everyone as they love to

26
00:00:52,439 --> 00:00:57,780
do and so I'm gonna have to go like

27
00:00:54,719 --> 00:00:59,730
reimplemented asks twitch whether the

28
00:00:57,780 --> 00:01:01,259
stream is live because of course you

29
00:00:59,729 --> 00:01:02,878
know it was too much to ask for them to

30
00:01:01,259 --> 00:01:03,960
have the question about the stream being

31
00:01:02,878 --> 00:01:05,548
live be something that they could

32
00:01:03,960 --> 00:01:08,810
support in multiple versions that was

33
00:01:05,549 --> 00:01:10,830
just way beyond anyone's technical

34
00:01:08,810 --> 00:01:12,299
capabilities twitch they just couldn't

35
00:01:10,829 --> 00:01:15,509
imagine how that something like that

36
00:01:12,299 --> 00:01:17,909
would occur and so you know I get to go

37
00:01:15,509 --> 00:01:19,590
rewrite that part of the code and so

38
00:01:17,909 --> 00:01:22,080
that'll be a lot of fun thanks twitch

39
00:01:19,590 --> 00:01:25,439
for that moving on

40
00:01:22,079 --> 00:01:27,450
today we've got some debugging to do we

41
00:01:25,438 --> 00:01:30,750
left yesterday we had done a bunch of

42
00:01:27,450 --> 00:01:34,020
work to set ourselves up for doing like

43
00:01:30,750 --> 00:01:36,209
prep calculations and sampling from my

44
00:01:34,019 --> 00:01:38,728
probes inside the actual game proper I'd

45
00:01:36,209 --> 00:01:42,539
like to get to that but before we do we

46
00:01:38,728 --> 00:01:44,250
have a bug that we want to solve which

47
00:01:42,540 --> 00:01:46,979
is that I mean I guess we don't really

48
00:01:44,250 --> 00:01:49,200
know it's a bug but my assertions that I

49
00:01:46,978 --> 00:01:51,149
put in the code are triggering and so

50
00:01:49,200 --> 00:01:52,890
unless those assertions themselves are

51
00:01:51,149 --> 00:01:54,090
somehow wrong which I don't think they

52
00:01:52,890 --> 00:01:57,030
are but I don't know we'll have to

53
00:01:54,090 --> 00:01:58,950
double track unless those assertions

54
00:01:57,030 --> 00:02:03,049
themselves are somehow wrong we have a

55
00:01:58,950 --> 00:02:03,049
bug in the system that assigns

56
00:02:03,228 --> 00:02:09,598
light probe IDs to light probe entities

57
00:02:07,468 --> 00:02:11,219
and the reason that we have this at all

58
00:02:09,598 --> 00:02:13,239
because you know you might be like

59
00:02:11,219 --> 00:02:15,250
asking why do we care

60
00:02:13,240 --> 00:02:18,250
it's a legitimate question the reason we

61
00:02:15,250 --> 00:02:21,960
care is because in lighting we do not

62
00:02:18,250 --> 00:02:24,610
have the luxury of largesse basically

63
00:02:21,960 --> 00:02:27,240
when we are processing lighting it is

64
00:02:24,610 --> 00:02:30,930
going to be very difficult and

65
00:02:27,240 --> 00:02:33,730
performance critical it's going to be

66
00:02:30,930 --> 00:02:35,650
hard for us to optimize it to a speed

67
00:02:33,729 --> 00:02:37,829
that we are going to be happy with

68
00:02:35,650 --> 00:02:40,150
because lighting is just very expensive

69
00:02:37,830 --> 00:02:43,090
so why they're shipping graphics cards

70
00:02:40,150 --> 00:02:44,980
that specially accelerate ray tracing

71
00:02:43,090 --> 00:02:46,539
right lighting is hard lighting is the

72
00:02:44,979 --> 00:02:48,489
hardest thing you can possibly do in

73
00:02:46,539 --> 00:02:55,209
computer graphics

74
00:02:48,490 --> 00:02:57,490
well alright maybe it's not the hardest

75
00:02:55,210 --> 00:02:59,379
thing you can do you know maybe we could

76
00:02:57,490 --> 00:03:00,580
argue that motion blur is actually the

77
00:02:59,379 --> 00:03:03,099
hardest thing you can do if you want to

78
00:03:00,580 --> 00:03:05,740
get it right but you know let's just say

79
00:03:03,099 --> 00:03:07,509
that short of accurate motion blur

80
00:03:05,740 --> 00:03:09,580
lighting is like the hardest thing and

81
00:03:07,509 --> 00:03:11,259
let's be frank if you were going to have

82
00:03:09,580 --> 00:03:13,480
to do accurate motion blur you would

83
00:03:11,259 --> 00:03:15,609
need to light the motion blur accurately

84
00:03:13,479 --> 00:03:17,319
and then we're back to lighting anyway

85
00:03:15,610 --> 00:03:20,710
it's one of the hardest things you can

86
00:03:17,319 --> 00:03:23,889
possibly do let's say that and so we

87
00:03:20,710 --> 00:03:27,040
don't want to have large numbers of

88
00:03:23,889 --> 00:03:29,139
extra light probes sitting around in the

89
00:03:27,039 --> 00:03:32,859
light probe system getting calculated

90
00:03:29,139 --> 00:03:34,419
wasting CPU cycles we don't really want

91
00:03:32,860 --> 00:03:38,050
to have that we want a nice tight

92
00:03:34,419 --> 00:03:39,939
compact array of only light probes we

93
00:03:38,050 --> 00:03:41,320
actually are going to work with in the

94
00:03:39,939 --> 00:03:43,569
minimal amount of space so that says

95
00:03:41,319 --> 00:03:44,709
cash friendly as possible taking up the

96
00:03:43,569 --> 00:03:46,359
least amount of bandwidth to the

97
00:03:44,710 --> 00:03:48,939
graphics card bla bla bla bla bla

98
00:03:46,360 --> 00:03:51,400
we basically want everything to be set

99
00:03:48,939 --> 00:03:53,199
up as well as possible to make our lives

100
00:03:51,400 --> 00:03:54,490
as easy as possible because we kind of

101
00:03:53,199 --> 00:03:55,449
know it's not one of those things that

102
00:03:54,490 --> 00:03:59,490
we're just going to wait for it to be

103
00:03:55,449 --> 00:04:01,959
slow we know it slow we know it will be

104
00:03:59,490 --> 00:04:03,219
this is one where you don't have to

105
00:04:01,960 --> 00:04:06,159
wonder whether you're doing premature

106
00:04:03,219 --> 00:04:08,379
optimization because guess what it's

107
00:04:06,159 --> 00:04:09,699
slow no matter what you do and so you

108
00:04:08,379 --> 00:04:11,889
have to kind of go into it with the

109
00:04:09,699 --> 00:04:14,409
mentality of making sure you set

110
00:04:11,889 --> 00:04:16,779
yourself up for success and in this

111
00:04:14,409 --> 00:04:19,540
particular case we are trying to assign

112
00:04:16,779 --> 00:04:21,579
lighting values so that we can put any

113
00:04:19,540 --> 00:04:25,540
kind of pre-filter we want at the head

114
00:04:21,579 --> 00:04:26,379
end and assign lighting values based on

115
00:04:25,540 --> 00:04:29,110
you

116
00:04:26,379 --> 00:04:31,750
a separate criteria that maybe doesn't

117
00:04:29,110 --> 00:04:33,310
have anything to do with whether or not

118
00:04:31,750 --> 00:04:34,779
the enemy's active it might be more

119
00:04:33,310 --> 00:04:37,300
about whether the entity is like within

120
00:04:34,779 --> 00:04:39,429
a certain region specific to lighting

121
00:04:37,300 --> 00:04:42,189
that we even enabled or who knows right

122
00:04:39,430 --> 00:04:45,819
and so what we need to do now is we need

123
00:04:42,189 --> 00:04:48,610
to go ahead and make sure that that

124
00:04:45,819 --> 00:04:53,980
assignment scheme is relatively safe and

125
00:04:48,610 --> 00:04:57,460
robust we implemented one version of the

126
00:04:53,980 --> 00:04:59,680
scheme and it doesn't work and then we

127
00:04:57,459 --> 00:05:02,379
were out of time and so what we need to

128
00:04:59,680 --> 00:05:05,439
do today is go look at that code and

129
00:05:02,379 --> 00:05:08,230
find out why so today is a debugging day

130
00:05:05,439 --> 00:05:11,019
that's what we're going to do and if I

131
00:05:08,230 --> 00:05:17,500
run the application as it stands you can

132
00:05:11,019 --> 00:05:21,779
see us hitting the case here and like I

133
00:05:17,500 --> 00:05:24,430
said we we don't observe any bugs per se

134
00:05:21,779 --> 00:05:27,819
we're not really at the point yet where

135
00:05:24,430 --> 00:05:29,860
we would observe an actual bug because

136
00:05:27,819 --> 00:05:31,629
these lighting probe indices aren't used

137
00:05:29,860 --> 00:05:33,550
we were about to use them in the

138
00:05:31,629 --> 00:05:35,439
lighting system to figure out how to

139
00:05:33,550 --> 00:05:37,090
send down light information to the

140
00:05:35,439 --> 00:05:41,230
graphics card which we now created room

141
00:05:37,089 --> 00:05:43,119
for but we do have assertions in here

142
00:05:41,230 --> 00:05:45,520
that tell us whether we think things are

143
00:05:43,120 --> 00:05:49,329
working properly and the place where we

144
00:05:45,519 --> 00:05:51,909
actually hit the assertion is in our

145
00:05:49,329 --> 00:05:54,219
call which is supposed to be taking an

146
00:05:51,910 --> 00:05:58,900
entity that has no light probe index

147
00:05:54,220 --> 00:06:01,030
assigned and it's going to assign one

148
00:05:58,899 --> 00:06:04,179
potentially if it's a light probe it

149
00:06:01,029 --> 00:06:08,259
will assign a light probe index to that

150
00:06:04,180 --> 00:06:11,680
empty what we're seeing is that for some

151
00:06:08,259 --> 00:06:14,560
reason the entity already has a light

152
00:06:11,680 --> 00:06:17,530
probe index assigned so you can see if I

153
00:06:14,560 --> 00:06:19,569
open up the entity structure here we're

154
00:06:17,529 --> 00:06:21,219
in assigned indices which means it's

155
00:06:19,569 --> 00:06:22,689
supposed to check to see if it's light

156
00:06:21,220 --> 00:06:25,090
probe and then assign it index if it is

157
00:06:22,689 --> 00:06:28,029
what we're seeing is that it already has

158
00:06:25,089 --> 00:06:29,379
a light probe index and we have no idea

159
00:06:28,029 --> 00:06:32,469
where that came from

160
00:06:29,379 --> 00:06:35,800
right now we know which leg probe index

161
00:06:32,470 --> 00:06:37,180
it is it's 101 and that brings up an

162
00:06:35,800 --> 00:06:40,150
interesting question which is like okay

163
00:06:37,180 --> 00:06:42,819
if I run the game again

164
00:06:40,149 --> 00:06:45,819
is it still number 101 it would be great

165
00:06:42,819 --> 00:06:47,829
if it was and it is so what that tells

166
00:06:45,819 --> 00:06:51,759
me is perhaps the way to start looking

167
00:06:47,829 --> 00:06:54,039
at this problem is to find out why light

168
00:06:51,759 --> 00:06:55,959
probe index 101 got assigned in the

169
00:06:54,040 --> 00:06:58,750
first place and why it never got

170
00:06:55,959 --> 00:07:01,839
unassigned right how are we calling this

171
00:06:58,750 --> 00:07:04,149
thing multiple times so one thing we can

172
00:07:01,839 --> 00:07:07,149
see is where is it calling it from right

173
00:07:04,149 --> 00:07:09,669
you can see in here that ensure region

174
00:07:07,149 --> 00:07:11,889
is unpacked what we're doing is we're

175
00:07:09,670 --> 00:07:13,300
unpacking a world chunk so we're taking

176
00:07:11,889 --> 00:07:15,969
this world chunk we're removing it from

177
00:07:13,300 --> 00:07:17,770
the system we're unpacking the entities

178
00:07:15,970 --> 00:07:19,600
and then we're adding it to the free or

179
00:07:17,769 --> 00:07:22,599
list right so it can go deal with that

180
00:07:19,600 --> 00:07:26,320
right that's how we're actually working

181
00:07:22,600 --> 00:07:30,100
with this system now the problem is when

182
00:07:26,319 --> 00:07:33,659
we actually unpack an entity right we're

183
00:07:30,100 --> 00:07:37,270
unpacking it into a region you can see

184
00:07:33,660 --> 00:07:39,250
right here we're unpacking that aquire

185
00:07:37,269 --> 00:07:42,219
you know that unquiet unpacked entity

186
00:07:39,250 --> 00:07:45,100
slot right this right here we're getting

187
00:07:42,220 --> 00:07:47,410
back what should be empty entity data as

188
00:07:45,100 --> 00:07:49,629
far as the light probe index is

189
00:07:47,410 --> 00:07:53,050
concerned why do I say that because

190
00:07:49,629 --> 00:07:56,680
everywhere we were giving up a slot in

191
00:07:53,050 --> 00:08:00,460
the past which I believe is only here

192
00:07:56,680 --> 00:08:03,759
right so anytime we were doing remove

193
00:08:00,459 --> 00:08:06,370
from unpacked we thought and obviously

194
00:08:03,759 --> 00:08:10,899
we're wrong we thought we were getting

195
00:08:06,370 --> 00:08:12,970
rid of the of the light probe index

196
00:08:10,899 --> 00:08:15,189
attached to that entity so we're giving

197
00:08:12,970 --> 00:08:17,560
up slots here and you can see when we

198
00:08:15,189 --> 00:08:19,209
get to this where we say like is deleted

199
00:08:17,560 --> 00:08:20,980
remove entities whatever you can see it

200
00:08:19,209 --> 00:08:23,439
says removed from unpacked here and

201
00:08:20,980 --> 00:08:26,050
remove from unpacked here these are the

202
00:08:23,439 --> 00:08:27,819
only two places as far as we know that

203
00:08:26,050 --> 00:08:32,740
we can remove entities during the normal

204
00:08:27,819 --> 00:08:35,980
game loop and pack entity as well as

205
00:08:32,740 --> 00:08:35,980
[Music]

206
00:08:36,720 --> 00:08:42,310
remove indices will both remove the

207
00:08:39,490 --> 00:08:45,940
indices so pack entity calls remove

208
00:08:42,309 --> 00:08:48,369
indices on the entity right and you can

209
00:08:45,940 --> 00:08:50,080
see remove ennis remove indices getting

210
00:08:48,370 --> 00:08:52,389
called explicitly in the case where the

211
00:08:50,080 --> 00:08:53,870
entity is just getting thrown away so in

212
00:08:52,389 --> 00:08:57,110
both cases

213
00:08:53,870 --> 00:09:01,159
it should be the case that the indices

214
00:08:57,110 --> 00:09:03,050
got removed from the entity right now

215
00:09:01,159 --> 00:09:04,699
the only other place we know of where we

216
00:09:03,049 --> 00:09:06,500
can actually get rid of an enmity is

217
00:09:04,700 --> 00:09:08,570
where we clear the entire thing and

218
00:09:06,500 --> 00:09:11,299
there again we're calling pac entity

219
00:09:08,570 --> 00:09:14,060
which we'll call remove indices so I'm

220
00:09:11,299 --> 00:09:19,879
just not sure is there some other place

221
00:09:14,059 --> 00:09:22,099
right where this is happening is did we

222
00:09:19,879 --> 00:09:23,419
miss a case it's a very complicated

223
00:09:22,100 --> 00:09:25,040
piece of coach one of the most

224
00:09:23,419 --> 00:09:28,339
complicated parts we have in the system

225
00:09:25,039 --> 00:09:31,669
certainly so okay like I can understand

226
00:09:28,340 --> 00:09:34,730
that there might be bugs in it it's it's

227
00:09:31,669 --> 00:09:38,509
intricate and it has a lot of complexity

228
00:09:34,730 --> 00:09:41,360
to it but I just can't think of at the

229
00:09:38,509 --> 00:09:45,799
moment where we would be having that

230
00:09:41,360 --> 00:09:48,889
problem come from right so what I'd like

231
00:09:45,799 --> 00:09:51,289
to do to start is since I have a little

232
00:09:48,889 --> 00:09:54,529
bit of a clue here right I know

233
00:09:51,289 --> 00:09:58,629
something I'm not completely blind about

234
00:09:54,529 --> 00:10:01,149
the problem since I know that 101 is the

235
00:09:58,629 --> 00:10:04,009
specific index that's getting assigned

236
00:10:01,149 --> 00:10:07,519
what I would like to do is I'd like to

237
00:10:04,009 --> 00:10:09,080
see when that first gets assigned so

238
00:10:07,519 --> 00:10:13,699
what I would like to do here is

239
00:10:09,080 --> 00:10:17,180
basically take and be able to set a

240
00:10:13,700 --> 00:10:20,390
breakpoint on this line of code when we

241
00:10:17,179 --> 00:10:22,189
have the MD light probe index come back

242
00:10:20,389 --> 00:10:25,189
as 101 right

243
00:10:22,190 --> 00:10:27,620
and similarly I'd like to do that here

244
00:10:25,190 --> 00:10:31,430
as well I'd like to be able to know if

245
00:10:27,620 --> 00:10:35,570
we ever undo that one just so I can kind

246
00:10:31,429 --> 00:10:37,729
of see what's happening right and one

247
00:10:35,570 --> 00:10:40,730
answer could be you know and I don't

248
00:10:37,730 --> 00:10:43,460
know but one answer could be that is

249
00:10:40,730 --> 00:10:47,090
light probe for all I know if we were

250
00:10:43,460 --> 00:10:49,040
calling remove and indices at some time

251
00:10:47,090 --> 00:10:52,490
when the entity had been otherwise

252
00:10:49,039 --> 00:10:55,490
- destroyed so for example if we were

253
00:10:52,490 --> 00:10:57,710
calling it like let's say that here I

254
00:10:55,490 --> 00:11:00,230
don't know if we ever set if we even

255
00:10:57,710 --> 00:11:04,280
have any time when things get deleted at

256
00:11:00,230 --> 00:11:07,820
the moment looks like here is the only

257
00:11:04,279 --> 00:11:09,829
place right so in delete entity

258
00:11:07,820 --> 00:11:12,020
that's the only place so someone has to

259
00:11:09,830 --> 00:11:13,730
call delete entity and I don't know to

260
00:11:12,019 --> 00:11:15,889
what extent that's happening let's take

261
00:11:13,730 --> 00:11:19,009
a look so here we delete these two

262
00:11:15,889 --> 00:11:23,769
entities right these are getting okay

263
00:11:19,009 --> 00:11:26,870
well that would probably do it right but

264
00:11:23,769 --> 00:11:29,449
these aren't light probes right there's

265
00:11:26,870 --> 00:11:31,100
no light probes on these so the fact

266
00:11:29,450 --> 00:11:32,810
that these are getting deleted and then

267
00:11:31,100 --> 00:11:34,340
having their brain ID value set to zero

268
00:11:32,809 --> 00:11:36,319
shouldn't really change anything because

269
00:11:34,340 --> 00:11:39,250
again they're not actually ever gonna

270
00:11:36,320 --> 00:11:42,290
probe lighting far as I know right

271
00:11:39,250 --> 00:11:43,399
um but yeah so delete entity maybe

272
00:11:42,289 --> 00:11:45,549
should be the thing that removes the

273
00:11:43,399 --> 00:11:53,149
indices I don't know that's hard to say

274
00:11:45,549 --> 00:11:53,829
but you know it certainly could hard to

275
00:11:53,149 --> 00:11:56,360
say

276
00:11:53,830 --> 00:11:57,889
anyway looking at that it just doesn't

277
00:11:56,360 --> 00:11:59,870
seem likely it doesn't seem like that's

278
00:11:57,889 --> 00:12:02,750
the source of the bug so anyway moving

279
00:11:59,870 --> 00:12:04,789
back here what I'd like to do is set a

280
00:12:02,750 --> 00:12:12,049
breakpoint assigned indices temporarily

281
00:12:04,789 --> 00:12:13,849
here I just want to go in and in here I

282
00:12:12,049 --> 00:12:16,099
want to set a breakpoint on this line

283
00:12:13,850 --> 00:12:17,930
and I want to set a breakpoint on this

284
00:12:16,100 --> 00:12:20,649
line so I just want to see what happens

285
00:12:17,929 --> 00:12:23,329
when light probe index 101 is assigned

286
00:12:20,649 --> 00:12:25,939
and so if we look at this entity here

287
00:12:23,330 --> 00:12:27,440
what I would expect to see is type 6

288
00:12:25,940 --> 00:12:28,640
should be a light probe I don't actually

289
00:12:27,440 --> 00:12:31,430
know if it is or not so we should

290
00:12:28,639 --> 00:12:36,230
probably take that and look and see if

291
00:12:31,429 --> 00:12:39,620
it really is this would be 0 1 2 3 4 or

292
00:12:36,230 --> 00:12:42,440
5 6 so it does look like that's actually

293
00:12:39,620 --> 00:12:47,240
true meaning that that brain light probe

294
00:12:42,440 --> 00:12:50,510
does seem to actually be correctly set

295
00:12:47,240 --> 00:12:52,970
on this so it does suggest that would

296
00:12:50,509 --> 00:12:57,230
have gone into this routine actually

297
00:12:52,970 --> 00:13:00,230
assigned 101 to it and now we have an an

298
00:12:57,230 --> 00:13:03,620
entity that is you know the entity in

299
00:13:00,230 --> 00:13:06,710
question I can look at value 8 11 that's

300
00:13:03,620 --> 00:13:08,240
kind of interesting to probably I should

301
00:13:06,710 --> 00:13:10,090
look and see if that's consistent as

302
00:13:08,240 --> 00:13:12,919
well but we'll move on from there

303
00:13:10,090 --> 00:13:15,710
all right so what you can see is

304
00:13:12,919 --> 00:13:19,039
actually this is probably a pretty good

305
00:13:15,710 --> 00:13:20,700
sign so the first time light probe index

306
00:13:19,039 --> 00:13:25,949
101 gets assigned

307
00:13:20,700 --> 00:13:29,370
entity eight eleven when that happens we

308
00:13:25,950 --> 00:13:31,890
never call remove indices on it right so

309
00:13:29,370 --> 00:13:34,980
you saw it like it was obvious right I

310
00:13:31,889 --> 00:13:37,049
come through here I assign 101 is it

311
00:13:34,980 --> 00:13:39,180
still in eighteen eighty 11 let's see so

312
00:13:37,049 --> 00:13:43,949
that's a stable value as well so we

313
00:13:39,179 --> 00:13:47,189
assign that index and we assigned it as

314
00:13:43,950 --> 00:13:49,230
normal during the unpack right and then

315
00:13:47,190 --> 00:13:49,920
the question is just like okay what

316
00:13:49,230 --> 00:13:53,250
happened

317
00:13:49,919 --> 00:13:55,740
right how did we then end up assigning

318
00:13:53,250 --> 00:13:58,710
it again do we exit this successfully

319
00:13:55,740 --> 00:14:00,570
yes we do so we unpacked everybody and

320
00:13:58,710 --> 00:14:03,629
then we're apparently happy about that

321
00:14:00,570 --> 00:14:06,150
and where are we on here so this is

322
00:14:03,629 --> 00:14:08,189
during editing it looks like right so

323
00:14:06,149 --> 00:14:13,340
you know we're kind of doing our edits

324
00:14:08,190 --> 00:14:16,230
here and whatever right so at some point

325
00:14:13,340 --> 00:14:20,820
as we kind of come out of here let's see

326
00:14:16,230 --> 00:14:27,050
we we would expect right at some point I

327
00:14:20,820 --> 00:14:27,050
mean can we just let me see if I can I

328
00:14:28,639 --> 00:14:33,090
want to see if we get to this point so

329
00:14:31,320 --> 00:14:34,830
when we go to clear unpacked nd cache

330
00:14:33,090 --> 00:14:37,170
I'm gonna set a breakpoint there do we

331
00:14:34,830 --> 00:14:38,820
get there so we don't so we're getting

332
00:14:37,169 --> 00:14:41,309
more and more and more information here

333
00:14:38,820 --> 00:14:44,310
right what that suggests to me is when

334
00:14:41,309 --> 00:14:48,000
we go back out here so this bug is

335
00:14:44,309 --> 00:14:50,729
happening entirely inside the world

336
00:14:48,000 --> 00:15:00,779
generation so we're never even getting

337
00:14:50,730 --> 00:15:01,860
to the part where we would we're never

338
00:15:00,779 --> 00:15:05,519
even getting to the part where we would

339
00:15:01,860 --> 00:15:07,350
run the game again that's actually

340
00:15:05,519 --> 00:15:09,870
encouraging that means that in less

341
00:15:07,350 --> 00:15:12,420
cases to debug because now we're just

342
00:15:09,870 --> 00:15:13,919
talking about the edit pass so we're

343
00:15:12,419 --> 00:15:16,679
starting to narrow it down a little bit

344
00:15:13,919 --> 00:15:18,959
and that makes me happy right I don't

345
00:15:16,679 --> 00:15:20,609
want to see this sprawling thing where

346
00:15:18,960 --> 00:15:22,560
we have to get 30 frames into the game

347
00:15:20,610 --> 00:15:26,759
before the bug appears right because it

348
00:15:22,559 --> 00:15:28,649
every time you add latency in a bug it

349
00:15:26,759 --> 00:15:32,069
becomes harder to debug the less stuff

350
00:15:28,649 --> 00:15:33,829
that's going on to create the bug the

351
00:15:32,070 --> 00:15:35,450
better because I just have any

352
00:15:33,830 --> 00:15:39,320
time tracking it down it's that simple

353
00:15:35,450 --> 00:15:42,290
right so that was good I'm encouraged by

354
00:15:39,320 --> 00:15:44,570
the fact that we saw that but again I'm

355
00:15:42,289 --> 00:15:46,819
not sure how that's happening right I

356
00:15:44,570 --> 00:15:48,590
don't quite understand how we're ending

357
00:15:46,820 --> 00:15:51,200
up with something getting called in

358
00:15:48,590 --> 00:15:53,120
assign indices twice and I think it was

359
00:15:51,200 --> 00:15:55,759
getting a call in assign indices twice

360
00:15:53,120 --> 00:15:57,230
in the same place as well I'm not 100%

361
00:15:55,759 --> 00:15:59,750
sure about that but I think that's

362
00:15:57,230 --> 00:16:01,519
actually true and so one thing I have to

363
00:15:59,750 --> 00:16:03,409
start thinking about is well what are

364
00:16:01,519 --> 00:16:05,840
the ways in which these entities can

365
00:16:03,409 --> 00:16:10,100
really be touched in that sense and also

366
00:16:05,840 --> 00:16:12,500
maybe I need to start looking at just

367
00:16:10,100 --> 00:16:14,779
figuring out like am I am I like

368
00:16:12,500 --> 00:16:17,690
reducing the size of this array ever in

369
00:16:14,779 --> 00:16:26,240
in some sense you know I do this packing

370
00:16:17,690 --> 00:16:27,770
we're never calling this by the time the

371
00:16:26,240 --> 00:16:31,480
bug hits so I don't know

372
00:16:27,769 --> 00:16:35,029
so it's something in this loop I guess

373
00:16:31,480 --> 00:16:37,580
but again it's pretty hard to say when

374
00:16:35,029 --> 00:16:39,919
you look at what's going on here when we

375
00:16:37,580 --> 00:16:46,450
decide that we're going to remove an

376
00:16:39,919 --> 00:16:46,449
entity you can see us packing here we

377
00:16:51,190 --> 00:17:02,649
we romp the entire entity and that does

378
00:16:59,679 --> 00:17:04,240
seem fine I'm gonna let's see here so we

379
00:17:02,649 --> 00:17:08,380
have only a couple places where we romp

380
00:17:04,240 --> 00:17:11,318
entities I'm just gonna say look when

381
00:17:08,380 --> 00:17:12,990
you romp this entity because you're

382
00:17:11,318 --> 00:17:15,188
about to overwrite it

383
00:17:12,990 --> 00:17:18,279
let me just assert that the light probe

384
00:17:15,189 --> 00:17:20,380
index is zero there and I assume that

385
00:17:18,279 --> 00:17:22,328
should fire but I guess I don't know and

386
00:17:20,380 --> 00:17:25,000
I'm interested to know if it does or if

387
00:17:22,328 --> 00:17:27,578
it doesn't right and I have no idea so

388
00:17:25,000 --> 00:17:32,220
here's us assigning light probe index

389
00:17:27,578 --> 00:17:34,950
101 to entity 8 11 and here we are back

390
00:17:32,220 --> 00:17:38,890
getting assigned indices called again on

391
00:17:34,950 --> 00:17:42,220
a different entity which is 15 and again

392
00:17:38,890 --> 00:17:45,220
it's got light primp index 101 on it

393
00:17:42,220 --> 00:17:49,200
right and what you can see here like if

394
00:17:45,220 --> 00:17:53,169
we do this again twice we're assigning

395
00:17:49,200 --> 00:17:55,690
this one five one nine oh seven eight

396
00:17:53,169 --> 00:17:59,200
and so can I write that pointer value if

397
00:17:55,690 --> 00:18:01,630
I am to copy that pointer value and just

398
00:17:59,200 --> 00:18:05,740
kind of paste it in here right so we've

399
00:18:01,630 --> 00:18:07,570
got the entity in question when I hit

400
00:18:05,740 --> 00:18:12,519
the bug you'll notice it's the same

401
00:18:07,569 --> 00:18:15,908
pointer right so it is 100% a case of

402
00:18:12,519 --> 00:18:20,259
reusing a slot without ever calling this

403
00:18:15,909 --> 00:18:22,840
part of the function right and so we are

404
00:18:20,259 --> 00:18:24,658
at least the manifestation of the bug is

405
00:18:22,839 --> 00:18:27,548
exactly what we think is happening

406
00:18:24,659 --> 00:18:29,890
meaning we've got an entity slot it gets

407
00:18:27,548 --> 00:18:31,720
reused without ever calling remove

408
00:18:29,890 --> 00:18:35,140
indices so we're literally just looking

409
00:18:31,720 --> 00:18:36,370
for how that slots getting reused and so

410
00:18:35,140 --> 00:18:39,460
the other thing that I would like to

411
00:18:36,369 --> 00:18:44,558
know is how are we doing like our create

412
00:18:39,460 --> 00:18:46,360
NV call right and if I look when we do

413
00:18:44,558 --> 00:18:50,109
create entity like we're calling a choir

414
00:18:46,359 --> 00:18:53,649
unpacked entity slot right and when we

415
00:18:50,109 --> 00:18:56,408
do a choir unpacked entity slot that's

416
00:18:53,650 --> 00:18:57,788
another place like in here when I get

417
00:18:56,409 --> 00:19:00,039
one of these entities that's another

418
00:18:57,788 --> 00:19:02,558
place I could assert right and as you

419
00:19:00,038 --> 00:19:05,069
can see all I'm really doing is I'm just

420
00:19:02,558 --> 00:19:08,139
trying to move the bug backward

421
00:19:05,069 --> 00:19:09,669
until I can find it right so I'm just

422
00:19:08,140 --> 00:19:11,560
trying to look for where these things

423
00:19:09,670 --> 00:19:15,759
that where these things might be

424
00:19:11,559 --> 00:19:19,559
happening so I can try to fix it and

425
00:19:15,759 --> 00:19:19,559
you'll see me keep doing that as we go

426
00:19:20,190 --> 00:19:28,960
it's not leave this result and so all

427
00:19:27,190 --> 00:19:31,269
I'm doing right is bubbling that

428
00:19:28,960 --> 00:19:34,720
bubbling the problem up to try and get

429
00:19:31,269 --> 00:19:37,480
closer to the source of the error and so

430
00:19:34,720 --> 00:19:42,100
we changed lines so these have to kind

431
00:19:37,480 --> 00:19:45,640
of get reset there we go so here we are

432
00:19:42,099 --> 00:19:50,139
again on nd should be 8:11 yeah and it

433
00:19:45,640 --> 00:19:52,600
is 101 it is and now I want to see if we

434
00:19:50,140 --> 00:19:55,210
get it and we do right so now we can see

435
00:19:52,599 --> 00:19:57,369
clearly like we're acquiring an unpacked

436
00:19:55,210 --> 00:19:59,019
entity slot here and the way that we do

437
00:19:57,369 --> 00:20:02,079
that is always the same we take the

438
00:19:59,019 --> 00:20:05,289
unpacked entity count and we take

439
00:20:02,079 --> 00:20:07,720
whatever that last entity was right so

440
00:20:05,289 --> 00:20:10,269
we're taking that and we're going

441
00:20:07,720 --> 00:20:12,700
forwards with it right so it's exactly

442
00:20:10,269 --> 00:20:14,470
what we thought and we're we're doing

443
00:20:12,700 --> 00:20:17,230
this acquire unpacked entity slot here

444
00:20:14,470 --> 00:20:18,819
you can see that we're going to do it

445
00:20:17,230 --> 00:20:20,589
and we're about to go into the part

446
00:20:18,819 --> 00:20:25,240
where you fill it out you can see that

447
00:20:20,589 --> 00:20:28,929
somehow we ended up with a slot that

448
00:20:25,240 --> 00:20:31,990
even though we think right we think that

449
00:20:28,930 --> 00:20:34,060
every time we put one back it had the

450
00:20:31,990 --> 00:20:43,660
light probe index equal to 0 if that's

451
00:20:34,059 --> 00:20:47,289
what we thought right got it all right

452
00:20:43,660 --> 00:20:49,210
so I think we've found the bug and what

453
00:20:47,289 --> 00:20:53,129
you can see happening here is the bug

454
00:20:49,210 --> 00:20:57,970
these don't get swapped that's the bug

455
00:20:53,130 --> 00:21:01,450
right so what's happening here is in

456
00:20:57,970 --> 00:21:04,750
fact kind of a wider bug and in fact we

457
00:21:01,450 --> 00:21:07,799
probably want to just fix this more

458
00:21:04,750 --> 00:21:07,799
dramatically I think

459
00:21:11,308 --> 00:21:15,878
yeah I think we do so if you look at

460
00:21:14,409 --> 00:21:17,409
what's happening here when we acquire

461
00:21:15,878 --> 00:21:19,028
unpacked entity slot we're taking

462
00:21:17,409 --> 00:21:21,159
whatever the end of the array is and

463
00:21:19,028 --> 00:21:25,089
we're using that but what we did not do

464
00:21:21,159 --> 00:21:27,190
right is when we actually copy this guy

465
00:21:25,089 --> 00:21:29,319
back we don't clear whatever is in that

466
00:21:27,190 --> 00:21:31,840
slot so the old entity is just sitting

467
00:21:29,319 --> 00:21:33,608
there still the whole thing now that's

468
00:21:31,839 --> 00:21:36,278
actually fine when we do our unpack

469
00:21:33,608 --> 00:21:38,978
because we're op over the data with what

470
00:21:36,278 --> 00:21:40,118
we actually decompress as the entity but

471
00:21:38,979 --> 00:21:44,409
the problem with that is it doesn't

472
00:21:40,118 --> 00:21:46,598
actually help us clear out the space for

473
00:21:44,409 --> 00:21:49,539
the part that we actually need anew if

474
00:21:46,598 --> 00:21:51,460
we go to create entity and we look at

475
00:21:49,538 --> 00:21:52,929
what happens there you can see us

476
00:21:51,460 --> 00:21:54,970
zeroing out the struct because we're

477
00:21:52,929 --> 00:21:56,979
creating a new one that zeros out the

478
00:21:54,970 --> 00:22:00,220
entire struct which is exactly what we

479
00:21:56,979 --> 00:22:03,278
want however when we unpack an entity it

480
00:22:00,220 --> 00:22:06,399
is insufficient to simply copy just that

481
00:22:03,278 --> 00:22:09,038
part in we also need to zero the end of

482
00:22:06,398 --> 00:22:12,069
it which is the part that was not saved

483
00:22:09,038 --> 00:22:15,548
right so when we go to fill unpacked

484
00:22:12,069 --> 00:22:17,888
entity right here that needs to have it

485
00:22:15,548 --> 00:22:21,819
taken care of so what we actually need

486
00:22:17,888 --> 00:22:25,538
to do is something more like this right

487
00:22:21,819 --> 00:22:28,598
take the destination pointer add the

488
00:22:25,538 --> 00:22:34,388
packed entity size to it right and we

489
00:22:28,598 --> 00:22:37,509
want to clear the entire entity -

490
00:22:34,388 --> 00:22:39,008
whatever the pack size is that we you

491
00:22:37,509 --> 00:22:42,190
know actually put in there we want to

492
00:22:39,009 --> 00:22:45,278
clear that overhang right and so that

493
00:22:42,190 --> 00:22:47,830
will finally get us back to 0 where we

494
00:22:45,278 --> 00:22:50,919
know that we've we haven't had left

495
00:22:47,829 --> 00:22:57,249
stuff lying around in that other portion

496
00:22:50,919 --> 00:22:59,979
right so I believe that was probably the

497
00:22:57,249 --> 00:23:03,159
bug now I don't know but that was

498
00:22:59,979 --> 00:23:04,778
probably it looks like I'm wrong oh well

499
00:23:03,159 --> 00:23:07,210
I'm not wrong because that zero happens

500
00:23:04,778 --> 00:23:09,548
after it so that aquire unpacked mb slot

501
00:23:07,210 --> 00:23:12,759
actually can't do that so let's go ahead

502
00:23:09,548 --> 00:23:15,220
over here wire unpack any slot so in

503
00:23:12,759 --> 00:23:17,169
here we can't do that just yet because

504
00:23:15,220 --> 00:23:19,118
we haven't actually cleared it yet and

505
00:23:17,169 --> 00:23:20,169
we don't necessarily want to because two

506
00:23:19,118 --> 00:23:21,638
different people want to clear two

507
00:23:20,169 --> 00:23:23,559
different amounts of things creating an

508
00:23:21,638 --> 00:23:25,928
entity wants to clear the whole thing

509
00:23:23,558 --> 00:23:32,109
whereas you know just the regular wants

510
00:23:25,929 --> 00:23:33,820
to clear just the end right okay so now

511
00:23:32,109 --> 00:23:35,619
we've solved that bug which was kind of

512
00:23:33,819 --> 00:23:37,298
tricky right we were thinking of

513
00:23:35,619 --> 00:23:39,369
entities as permanent things they aren't

514
00:23:37,298 --> 00:23:41,408
they're kind of recycled in a way there

515
00:23:39,369 --> 00:23:43,449
and so you can kind of see that we're

516
00:23:41,409 --> 00:23:44,980
now back to where we wanted to be which

517
00:23:43,450 --> 00:23:47,980
is we've got light probes they're

518
00:23:44,980 --> 00:23:50,349
getting assigned numbers and yeah I

519
00:23:47,980 --> 00:23:52,839
think we're all good now what I can do

520
00:23:50,349 --> 00:23:55,389
as well is I can play around this little

521
00:23:52,839 --> 00:23:58,298
bit just to make sure that what we're

522
00:23:55,390 --> 00:24:02,049
seeing makes sense we have a get debug

523
00:23:58,298 --> 00:24:04,240
color call you know here it is and what

524
00:24:02,048 --> 00:24:06,308
I'd like to do is I'd like to go ahead

525
00:24:04,240 --> 00:24:08,890
and take the part of the code that

526
00:24:06,308 --> 00:24:11,619
renders the entities where it renders

527
00:24:08,890 --> 00:24:13,720
the light probe index where it renders

528
00:24:11,619 --> 00:24:15,879
the light probe sorry and instead of

529
00:24:13,720 --> 00:24:19,058
doing a V 4 V 4 V 4 I'm actually gonna

530
00:24:15,880 --> 00:24:20,740
do a thing here where we do color equals

531
00:24:19,058 --> 00:24:22,658
this that's what we're actually gonna do

532
00:24:20,740 --> 00:24:26,370
normally but I'm gonna do one of these

533
00:24:22,659 --> 00:24:30,039
here I'm gonna use the light probe index

534
00:24:26,369 --> 00:24:32,649
and then I'm gonna delete this so this

535
00:24:30,038 --> 00:24:34,629
way now we can see that each one of

536
00:24:32,650 --> 00:24:37,538
these things is assigned a color I'm

537
00:24:34,630 --> 00:24:39,940
assigning two index and we can also see

538
00:24:37,538 --> 00:24:42,759
if it's stable right we could we could

539
00:24:39,940 --> 00:24:44,350
get some sense of whether it is a stable

540
00:24:42,759 --> 00:24:47,099
value by whether or not these things are

541
00:24:44,349 --> 00:24:50,589
flashing and what we should see is

542
00:24:47,099 --> 00:24:52,058
although if we went away from something

543
00:24:50,589 --> 00:24:52,658
and came back the color should have

544
00:24:52,058 --> 00:24:55,720
changed

545
00:24:52,659 --> 00:24:58,600
we should never see the colors flash so

546
00:24:55,720 --> 00:25:01,509
while we are looking at a light probe it

547
00:24:58,599 --> 00:25:03,849
should never lose its index right and

548
00:25:01,509 --> 00:25:06,900
that is what I'm seeing so that's a good

549
00:25:03,849 --> 00:25:10,658
sign like I'm not getting any indication

550
00:25:06,900 --> 00:25:12,490
at all really anywhere in here that

551
00:25:10,659 --> 00:25:14,169
we're losing the stability of these

552
00:25:12,490 --> 00:25:16,569
indices so that's good because that

553
00:25:14,169 --> 00:25:19,450
means these are stable indexes that's

554
00:25:16,569 --> 00:25:22,950
what I want and now what I need to do is

555
00:25:19,450 --> 00:25:26,308
I need to go and actually start

556
00:25:22,950 --> 00:25:30,190
performing some lighting computations

557
00:25:26,308 --> 00:25:34,148
with these indices with these light

558
00:25:30,190 --> 00:25:36,298
probes as we go right so that's where

559
00:25:34,148 --> 00:25:36,298
we're at

560
00:25:38,429 --> 00:25:45,160
all right so that's all good let's go

561
00:25:41,859 --> 00:25:46,419
ahead and take a look now at how I would

562
00:25:45,160 --> 00:25:49,090
how I'm gonna actually go about doing

563
00:25:46,420 --> 00:25:50,740
that we have some things we need to

564
00:25:49,089 --> 00:26:05,109
address such as the light probe clearing

565
00:25:50,740 --> 00:26:12,400
and things like that all right so here's

566
00:26:05,109 --> 00:26:13,509
our situation we now want to I guess you

567
00:26:12,400 --> 00:26:15,509
just gonna see here where I'm pushing

568
00:26:13,509 --> 00:26:17,859
this cube on right

569
00:26:15,509 --> 00:26:20,950
we know while these light probes are in

570
00:26:17,859 --> 00:26:23,159
specific locations and we need some way

571
00:26:20,950 --> 00:26:26,380
of articulating to the lighting system

572
00:26:23,160 --> 00:26:29,380
just what locations those are right

573
00:26:26,380 --> 00:26:31,870
somebody needs to do that and we set

574
00:26:29,380 --> 00:26:35,380
ourselves up for success for some

575
00:26:31,869 --> 00:26:37,959
definition of success in the renderer by

576
00:26:35,380 --> 00:26:40,240
having when we output everything a

577
00:26:37,960 --> 00:26:42,900
location where we can record the

578
00:26:40,240 --> 00:26:45,069
information about the light probes right

579
00:26:42,900 --> 00:26:46,660
so you can see in here we've got a max

580
00:26:45,069 --> 00:26:49,539
light prep count a light probe count a

581
00:26:46,660 --> 00:26:52,419
light primer radians right and the

582
00:26:49,539 --> 00:26:55,690
problem that we have here is that this

583
00:26:52,419 --> 00:26:58,240
is sort of designed as you can see as

584
00:26:55,690 --> 00:27:01,000
some kind of a sort of streaming system

585
00:26:58,240 --> 00:27:03,250
or something like that and it's not

586
00:27:01,000 --> 00:27:05,679
quite right there's some issues with it

587
00:27:03,250 --> 00:27:09,039
blah blah blah so what we would rather

588
00:27:05,679 --> 00:27:13,509
do here is we would rather have

589
00:27:09,039 --> 00:27:18,928
something where we can store information

590
00:27:13,509 --> 00:27:24,220
about the lighting that's going on by

591
00:27:18,929 --> 00:27:28,269
just recording actual position values

592
00:27:24,220 --> 00:27:31,298
into the lighting position array right

593
00:27:28,269 --> 00:27:33,639
and so unlike other things that want to

594
00:27:31,298 --> 00:27:35,558
be cleared every time this kind of wants

595
00:27:33,640 --> 00:27:38,320
to be something that is stationary right

596
00:27:35,558 --> 00:27:40,899
it wants to be something that just gets

597
00:27:38,319 --> 00:27:44,439
updated incrementally and doesn't really

598
00:27:40,900 --> 00:27:46,540
have that same sort of streaming quality

599
00:27:44,440 --> 00:27:49,149
that these that the vertex rate index

600
00:27:46,539 --> 00:27:51,519
ray do so rather than like a count

601
00:27:49,148 --> 00:27:53,348
that gets reset every time we kind of

602
00:27:51,519 --> 00:27:55,690
want this to be something more like

603
00:27:53,348 --> 00:28:00,608
we're just shifting values in and out

604
00:27:55,690 --> 00:28:04,869
and telling you about things that go in

605
00:28:00,608 --> 00:28:06,699
and out of the working set right so what

606
00:28:04,868 --> 00:28:08,408
I'd like to do is kind of change the way

607
00:28:06,700 --> 00:28:10,629
this works a bit I do need to add an

608
00:28:08,409 --> 00:28:13,778
additional array here which is light

609
00:28:10,628 --> 00:28:17,168
probe position and the light probe

610
00:28:13,778 --> 00:28:22,118
position is just one for every light

611
00:28:17,169 --> 00:28:23,889
probe right but that's all we really

612
00:28:22,118 --> 00:28:26,978
need and then I need ways of setting

613
00:28:23,888 --> 00:28:30,189
these up right so what I need to do here

614
00:28:26,979 --> 00:28:32,469
is I need a call that operates on the

615
00:28:30,190 --> 00:28:36,129
render set that basically announces a

616
00:28:32,469 --> 00:28:36,788
light probe that it is active and which

617
00:28:36,128 --> 00:28:39,638
one it was

618
00:28:36,788 --> 00:28:47,528
so in here we need to say something such

619
00:28:39,638 --> 00:28:50,319
as that I would pass the render group

620
00:28:47,528 --> 00:28:54,460
and then I would say the position of

621
00:28:50,319 --> 00:28:56,979
this light probe is this and that's it

622
00:28:54,460 --> 00:28:58,749
right I'm not going to tell you what the

623
00:28:56,979 --> 00:29:01,149
irradiance is because I'm gonna assume

624
00:28:58,749 --> 00:29:02,858
that you cache that and I'm going to

625
00:29:01,148 --> 00:29:05,798
tell you what the position is because

626
00:29:02,858 --> 00:29:09,069
I'm going to hope that you will allow it

627
00:29:05,798 --> 00:29:13,749
to move right and I'm just promising

628
00:29:09,069 --> 00:29:16,450
that I'm not going to move it without

629
00:29:13,749 --> 00:29:18,999
clearing it very much so if there was a

630
00:29:16,450 --> 00:29:20,979
slow moving probe we maybe wouldn't

631
00:29:18,999 --> 00:29:23,348
clear it we allow it to a ver egde if it

632
00:29:20,979 --> 00:29:25,598
teleports it would be my responsibility

633
00:29:23,348 --> 00:29:28,358
to tell you what that means is we also

634
00:29:25,598 --> 00:29:31,569
have a place to put this value which is

635
00:29:28,358 --> 00:29:33,598
here and we can now undo the lighting

636
00:29:31,569 --> 00:29:36,700
probe clearer so we can say all right

637
00:29:33,598 --> 00:29:38,378
here's the light probe information I'm

638
00:29:36,700 --> 00:29:41,288
telling you if you need to clear the

639
00:29:38,378 --> 00:29:45,509
irradiance cache to zero I'm also

640
00:29:41,288 --> 00:29:45,509
telling you if you need to

641
00:29:49,630 --> 00:29:56,539
move it somewhere else and all that will

642
00:29:54,079 --> 00:29:58,129
be in one nice little simple function

643
00:29:56,538 --> 00:30:00,970
that should allow you to do everything

644
00:29:58,130 --> 00:30:03,679
you need to do render wise right at once

645
00:30:00,970 --> 00:30:07,460
the light probe clear only has to happen

646
00:30:03,679 --> 00:30:09,200
when the thing moves and so yeah I mean

647
00:30:07,460 --> 00:30:11,509
you know what now that I think about it

648
00:30:09,200 --> 00:30:23,509
we could just use a distance metric for

649
00:30:11,509 --> 00:30:25,369
this I'm gonna go ahead and say that we

650
00:30:23,509 --> 00:30:27,279
probably don't need that light probe

651
00:30:25,369 --> 00:30:30,019
clear now that I'm thinking about it

652
00:30:27,279 --> 00:30:32,658
because the only reason that a light

653
00:30:30,019 --> 00:30:36,950
probe can be wrong is if the light probe

654
00:30:32,659 --> 00:30:40,159
moved right so the position of it would

655
00:30:36,950 --> 00:30:44,269
tell us what we need to know right you

656
00:30:40,159 --> 00:30:46,370
know what no I take that back so because

657
00:30:44,269 --> 00:30:48,259
we do everything centered around a local

658
00:30:46,369 --> 00:30:50,599
coordinate system that's not necessarily

659
00:30:48,259 --> 00:30:51,980
true so I'm gonna go ahead and say we're

660
00:30:50,599 --> 00:30:53,899
gonna leave the light probe clear in

661
00:30:51,980 --> 00:30:56,798
there and I'm gonna put a note to that

662
00:30:53,900 --> 00:30:56,798
effect so we don't forget

663
00:31:43,750 --> 00:31:47,529
so I'm just putting that in there is a

664
00:31:45,920 --> 00:31:51,440
little note because it's pretty subtle

665
00:31:47,529 --> 00:31:52,549
and if you didn't know that you might

666
00:31:51,440 --> 00:31:53,570
think that this would have been

667
00:31:52,549 --> 00:31:55,669
sufficient to know whether you should

668
00:31:53,569 --> 00:31:58,039
clear it I don't think it really is

669
00:31:55,670 --> 00:32:00,470
sufficient and so I think that we need

670
00:31:58,039 --> 00:32:03,019
the light probe clear now it's true that

671
00:32:00,470 --> 00:32:07,150
we could optimize this by doing a

672
00:32:03,019 --> 00:32:10,039
positional Delta or rather by using

673
00:32:07,150 --> 00:32:14,269
positional value so we could look at the

674
00:32:10,039 --> 00:32:16,039
entity position that's well know yes we

675
00:32:14,269 --> 00:32:17,480
couldn't so I you know what I'm just

676
00:32:16,039 --> 00:32:19,369
gonna stop talking about that I think

677
00:32:17,480 --> 00:32:20,960
it's right let's just leave it at that

678
00:32:19,369 --> 00:32:22,639
so I think we're doing that right I

679
00:32:20,960 --> 00:32:25,400
think we do what we need to do there and

680
00:32:22,640 --> 00:32:27,290
I don't want to overthink it because you

681
00:32:25,400 --> 00:32:28,700
know I think there's it's I was kind of

682
00:32:27,289 --> 00:32:31,069
try and convince myself of something but

683
00:32:28,700 --> 00:32:32,930
it just wasn't the case so now what I

684
00:32:31,069 --> 00:32:35,389
want to do is in here I would like to

685
00:32:32,930 --> 00:32:38,900
put something that allows us to to

686
00:32:35,390 --> 00:32:41,030
provide information about these light

687
00:32:38,900 --> 00:32:42,259
probes down to the renderer so we know

688
00:32:41,029 --> 00:32:43,849
what it should look like because we

689
00:32:42,259 --> 00:32:46,549
wrote the usage code you happen to know

690
00:32:43,849 --> 00:32:48,409
exactly what we want which is great

691
00:32:46,549 --> 00:32:50,659
and then we can have our clear in here

692
00:32:48,410 --> 00:32:52,550
as well so if you look at what has to

693
00:32:50,660 --> 00:32:55,700
happen now we're gonna be getting the

694
00:32:52,549 --> 00:32:57,409
commands here and what we want to do is

695
00:32:55,700 --> 00:33:00,350
we want to take a look at the commands

696
00:32:57,410 --> 00:33:02,390
that we've got and first of all oh you

697
00:33:00,349 --> 00:33:04,189
know what we forgot one thing though I'm

698
00:33:02,390 --> 00:33:06,860
wanting to send down the light probe

699
00:33:04,190 --> 00:33:11,330
index that was the whole point there we

700
00:33:06,859 --> 00:33:15,109
go so we need that index as this is how

701
00:33:11,329 --> 00:33:17,179
we know where it should go so what I

702
00:33:15,109 --> 00:33:25,689
want to do here is I want to say look if

703
00:33:17,180 --> 00:33:25,690
the commands MaxLite probe count

704
00:33:26,450 --> 00:33:38,370
get the light prep index is less than

705
00:33:28,980 --> 00:33:40,259
that right if it's not we want to

706
00:33:38,369 --> 00:33:40,709
probably assert that because that would

707
00:33:40,259 --> 00:33:43,200
be bad

708
00:33:40,710 --> 00:33:45,360
assuming we can fit it in here what we

709
00:33:43,200 --> 00:33:47,940
want to do is say if the light probe

710
00:33:45,359 --> 00:33:54,929
index is greater than the commands light

711
00:33:47,940 --> 00:33:56,730
probe count hello there we go

712
00:33:54,930 --> 00:33:58,500
or a meanie the right way to write this

713
00:33:56,730 --> 00:34:15,179
just so it's a little clearer is if it's

714
00:33:58,500 --> 00:34:17,159
less right so basically what we want to

715
00:34:15,179 --> 00:34:19,409
do here is say look if the light probe

716
00:34:17,159 --> 00:34:21,149
index is less I'm sorry if the light

717
00:34:19,409 --> 00:34:24,899
probe count is less than a light probe

718
00:34:21,150 --> 00:34:28,349
index plus one right because it's the

719
00:34:24,900 --> 00:34:30,389
count not an index then we want to set

720
00:34:28,349 --> 00:34:32,730
it equal to that right that's like the

721
00:34:30,389 --> 00:34:34,679
new maximum and the reason for that is

722
00:34:32,730 --> 00:34:36,840
as we insert things here we just want to

723
00:34:34,679 --> 00:34:38,339
make sure we have the upper bound of

724
00:34:36,840 --> 00:34:39,870
indices so we know when we go to do our

725
00:34:38,340 --> 00:34:41,789
lighting we do it over all the ones that

726
00:34:39,869 --> 00:34:43,319
we actually got told about and we won't

727
00:34:41,789 --> 00:34:47,309
do it over any ones that have kind of

728
00:34:43,320 --> 00:34:49,140
been shooed out of the set right then

729
00:34:47,309 --> 00:34:53,610
what we need to do is into the light

730
00:34:49,139 --> 00:34:55,500
probe position array we now know that

731
00:34:53,610 --> 00:34:58,349
we're writing into this specific

732
00:34:55,500 --> 00:35:01,349
location we need to put our p value and

733
00:34:58,349 --> 00:35:04,079
then if it turns out that we were

734
00:35:01,349 --> 00:35:07,679
supposed to clear it right we also want

735
00:35:04,079 --> 00:35:09,750
the light probe irradiance to be set to

736
00:35:07,679 --> 00:35:15,899
two nothing right so we want to actually

737
00:35:09,750 --> 00:35:17,639
clear this this light information we

738
00:35:15,900 --> 00:35:20,760
want to clear the light information if

739
00:35:17,639 --> 00:35:22,739
you said that the old cached values are

740
00:35:20,760 --> 00:35:24,540
now stale because this doesn't represent

741
00:35:22,739 --> 00:35:26,609
the same light probe anymore

742
00:35:24,539 --> 00:35:29,190
for whatever reason either you assigned

743
00:35:26,610 --> 00:35:30,599
a new entity to the same index or maybe

744
00:35:29,190 --> 00:35:32,159
in the future we have teleporting

745
00:35:30,599 --> 00:35:33,690
entities and so if you teleport in a

746
00:35:32,159 --> 00:35:34,889
light probe which you know I don't know

747
00:35:33,690 --> 00:35:36,750
if that's I'm really gonna happen but if

748
00:35:34,889 --> 00:35:37,849
it did you would tell us to clear it cuz

749
00:35:36,750 --> 00:35:39,590
it's like hey it's letting

750
00:35:37,849 --> 00:35:41,210
no longer valid even though it's the

751
00:35:39,590 --> 00:35:43,250
same light probe we put it somewhere

752
00:35:41,210 --> 00:35:47,389
else the all bets are off

753
00:35:43,250 --> 00:35:49,130
right so that will announce all of our

754
00:35:47,389 --> 00:35:51,949
light probes to the system and as you

755
00:35:49,130 --> 00:35:54,710
can see if we go back here that's really

756
00:35:51,949 --> 00:35:56,659
all the information we needed right the

757
00:35:54,710 --> 00:35:58,670
lighting system is gonna be responsible

758
00:35:56,659 --> 00:36:01,819
for calculating this and it will

759
00:35:58,670 --> 00:36:03,920
preserve it here and the voxel is

760
00:36:01,820 --> 00:36:05,539
created every time right we're gonna

761
00:36:03,920 --> 00:36:09,260
recreate that voxel every time by

762
00:36:05,539 --> 00:36:12,320
rasterizing our light sources I'm sorry

763
00:36:09,260 --> 00:36:16,040
light probes into it right and so we

764
00:36:12,320 --> 00:36:25,390
pretty much don't really need anything

765
00:36:16,039 --> 00:36:25,389
other than that I don't think right okay

766
00:36:27,039 --> 00:36:31,759
the light occluder streaming already

767
00:36:29,719 --> 00:36:33,649
pretty much done and so pretty much I

768
00:36:31,760 --> 00:36:35,990
think all we need to do now is just

769
00:36:33,650 --> 00:36:37,970
focus on getting this part working and

770
00:36:35,989 --> 00:36:40,129
then when we actually have all of this

771
00:36:37,969 --> 00:36:41,839
working we can pop back to the occluders

772
00:36:40,130 --> 00:36:43,460
side of things and start to do our ray

773
00:36:41,840 --> 00:36:44,990
tracing again which we have most of the

774
00:36:43,460 --> 00:36:47,480
code for but we need to kind of clean it

775
00:36:44,989 --> 00:36:51,109
up and make it work with the new light

776
00:36:47,480 --> 00:36:52,490
probe system all right so I'm pretty

777
00:36:51,110 --> 00:36:54,440
sure that's all we really needed to do

778
00:36:52,489 --> 00:36:57,769
to get those light probes into the

779
00:36:54,440 --> 00:36:59,510
system and so now we should be good as

780
00:36:57,769 --> 00:37:10,730
far as that's concerned what is this

781
00:36:59,510 --> 00:37:14,030
problem here 2 V 3 star ah that's right

782
00:37:10,730 --> 00:37:17,289
this is actually like a 6 wide version

783
00:37:14,030 --> 00:37:17,290
of that isn't it

784
00:37:19,300 --> 00:37:26,660
so this clear actually has to clear all

785
00:37:22,489 --> 00:37:30,279
6 of the light purple radiances so this

786
00:37:26,659 --> 00:37:30,279
is actually more of this

787
00:37:35,869 --> 00:37:42,599
right and that's just because that light

788
00:37:40,318 --> 00:37:44,400
probe irradiance is actually for every

789
00:37:42,599 --> 00:37:45,989
face of the cube so when you put down a

790
00:37:44,400 --> 00:37:48,269
light probe you're putting down a light

791
00:37:45,989 --> 00:37:50,809
probe that actually has six different

792
00:37:48,268 --> 00:37:50,808
faces

793
00:37:59,329 --> 00:38:05,449
you know when I think about that I also

794
00:38:01,679 --> 00:38:11,359
do kind of wonder just a little bit

795
00:38:05,449 --> 00:38:11,359
about how that lighting recombination

796
00:38:12,019 --> 00:38:16,619
there are some things I wonder like you

797
00:38:14,730 --> 00:38:19,889
know I wonder if it's kind of dumb that

798
00:38:16,619 --> 00:38:21,509
we treat the light probes as cubes

799
00:38:19,889 --> 00:38:24,409
instead of just like points and

800
00:38:21,510 --> 00:38:26,670
directions like we were doing before

801
00:38:24,409 --> 00:38:29,789
because I don't actually know that we

802
00:38:26,670 --> 00:38:35,880
couldn't have just done that and then

803
00:38:29,789 --> 00:38:37,110
had them just go in a row I guess it

804
00:38:35,880 --> 00:38:39,750
doesn't really matter I don't know we'll

805
00:38:37,110 --> 00:38:43,170
have to think about that anyway the

806
00:38:39,750 --> 00:38:45,900
light probe will get cleared here in in

807
00:38:43,170 --> 00:38:47,820
you know kind of an obvious way and we

808
00:38:45,900 --> 00:38:49,500
may want to make this be something a

809
00:38:47,820 --> 00:38:51,750
little bit more structured you know like

810
00:38:49,500 --> 00:38:54,179
we could make this be a pointer to a

811
00:38:51,750 --> 00:38:59,670
struct of III s the way we would do that

812
00:38:54,179 --> 00:39:02,929
would be something more like this and

813
00:38:59,670 --> 00:39:02,930
maybe this is just a better idea

814
00:39:09,440 --> 00:39:15,300
something like that and then we could

815
00:39:13,829 --> 00:39:19,590
just say well you know what this is a

816
00:39:15,300 --> 00:39:22,230
light probe a radiance array and it's it

817
00:39:19,590 --> 00:39:23,579
just looks like that right and that does

818
00:39:22,230 --> 00:39:24,840
seem good because then at that point

819
00:39:23,579 --> 00:39:26,849
you're not doing any kind of funny

820
00:39:24,840 --> 00:39:30,600
business you can just say hey let's

821
00:39:26,849 --> 00:39:33,119
clear that out and off we go and that

822
00:39:30,599 --> 00:39:35,219
does seem compelling right I like that

823
00:39:33,119 --> 00:39:37,710
better and here where we're actually

824
00:39:35,219 --> 00:39:39,599
initializing it then you know the OpenGL

825
00:39:37,710 --> 00:39:42,900
layers if we want to change that we just

826
00:39:39,599 --> 00:39:45,779
could and because now where we would be

827
00:39:42,900 --> 00:39:47,990
putting that information where where is

828
00:39:45,780 --> 00:39:47,990
that

829
00:39:49,849 --> 00:39:56,279
yeah win32 up and Jill there no it's

830
00:39:55,289 --> 00:39:57,779
right here

831
00:39:56,280 --> 00:39:59,700
so here we're we're doing like proper

832
00:39:57,780 --> 00:40:03,300
radiance instead of the six times we

833
00:39:59,699 --> 00:40:03,960
just do light probe irradiance and call

834
00:40:03,300 --> 00:40:07,769
it a day

835
00:40:03,960 --> 00:40:09,869
right so that does seem like a better

836
00:40:07,769 --> 00:40:12,730
idea

837
00:40:09,869 --> 00:40:14,289
certainly if we go over to the lighting

838
00:40:12,730 --> 00:40:16,179
system now we can also take a look and

839
00:40:14,289 --> 00:40:19,630
see does this lineup particularly well

840
00:40:16,179 --> 00:40:23,259
if you take a look at the spatial probe

841
00:40:19,630 --> 00:40:26,800
sure you give either the spatial probe

842
00:40:23,260 --> 00:40:28,540
in question which is this right here you

843
00:40:26,800 --> 00:40:31,990
can see that it's just an array of light

844
00:40:28,539 --> 00:40:35,019
indices and it's got the SEL dims right

845
00:40:31,989 --> 00:40:37,629
and the dim Pao - that's just the same

846
00:40:35,019 --> 00:40:41,710
stuff so we should now be able to

847
00:40:37,630 --> 00:40:46,300
convert this over right - instead of

848
00:40:41,710 --> 00:40:50,079
light index being a thing that we

849
00:40:46,300 --> 00:40:53,760
allocate for our like for the lighting

850
00:40:50,079 --> 00:40:57,579
system we can actually just use the

851
00:40:53,760 --> 00:41:00,490
voxel that's actually present now right

852
00:40:57,579 --> 00:41:02,469
so we can make these things work right

853
00:41:00,489 --> 00:41:05,759
on top of each other in exactly the way

854
00:41:02,469 --> 00:41:09,429
that we want and be done with it right

855
00:41:05,760 --> 00:41:11,740
so I think we're in good shape here to

856
00:41:09,429 --> 00:41:14,230
collapse these things down but you know

857
00:41:11,739 --> 00:41:15,609
one thing at a time all right so now if

858
00:41:14,230 --> 00:41:18,940
we run this we shouldn't get any

859
00:41:15,610 --> 00:41:23,320
surprises hopefully all we're doing is

860
00:41:18,940 --> 00:41:31,150
sending that array down now and oh and

861
00:41:23,320 --> 00:41:32,710
I'm wrong oh no not wrong we I literally

862
00:41:31,150 --> 00:41:35,050
said we have to add that to the OpenGL

863
00:41:32,710 --> 00:41:38,170
and then didn't do it so I guess I can't

864
00:41:35,050 --> 00:41:40,750
call that a surprise when I said that we

865
00:41:38,170 --> 00:41:44,789
had to do it and then didn't do it so

866
00:41:40,750 --> 00:41:47,559
the light probe P just has to go in here

867
00:41:44,789 --> 00:41:49,059
and you can see that I'm using parallel

868
00:41:47,559 --> 00:41:50,739
arrays for this and that's just because

869
00:41:49,059 --> 00:41:52,269
I suspect in the future I will need to

870
00:41:50,739 --> 00:41:53,529
do graphics card transmission and I

871
00:41:52,269 --> 00:41:55,090
don't want these things intermixed

872
00:41:53,530 --> 00:41:57,370
because only some of them will get

873
00:41:55,090 --> 00:41:59,530
transmitted light probe P won't like

874
00:41:57,369 --> 00:41:59,949
probe irradiance will or something there

875
00:41:59,530 --> 00:42:02,769
abouts

876
00:41:59,949 --> 00:42:04,659
right so the light probe P that happens

877
00:42:02,769 --> 00:42:06,670
here all we're doing is just assigning

878
00:42:04,659 --> 00:42:08,889
that over so where the light probe

879
00:42:06,670 --> 00:42:11,680
irradiance previously was getting

880
00:42:08,889 --> 00:42:13,210
assigned which is down in here Oh in

881
00:42:11,679 --> 00:42:16,869
fact we're already there we're right on

882
00:42:13,210 --> 00:42:18,490
it right here this code when it sets the

883
00:42:16,869 --> 00:42:20,170
light perm irradiance just has to set

884
00:42:18,489 --> 00:42:21,969
the light for a position array so that

885
00:42:20,170 --> 00:42:28,480
there's actually some place to put those

886
00:42:21,969 --> 00:42:30,669
right and then we should not get any

887
00:42:28,480 --> 00:42:31,269
surprises or shall I say if we get

888
00:42:30,670 --> 00:42:38,619
anything else

889
00:42:31,269 --> 00:42:40,780
it will be a surprise and then we need

890
00:42:38,619 --> 00:42:43,059
to do something we've done all the

891
00:42:40,780 --> 00:42:46,269
plumbing work now we actually have to do

892
00:42:43,059 --> 00:42:50,409
something with it right so that's what

893
00:42:46,269 --> 00:42:52,929
our next step is okay so taking a look

894
00:42:50,409 --> 00:42:54,940
at all of these you can kind of see you

895
00:42:52,929 --> 00:42:58,568
know we've got their colors in there and

896
00:42:54,940 --> 00:42:59,889
and that's all good so what we want to

897
00:42:58,568 --> 00:43:02,650
do now is we need to start actually

898
00:42:59,889 --> 00:43:05,170
sampling from these things somehow we

899
00:43:02,650 --> 00:43:08,349
need to try and figure out a way of

900
00:43:05,170 --> 00:43:12,068
getting the light probes down to the

901
00:43:08,349 --> 00:43:13,809
graphics card and picking out ones that

902
00:43:12,068 --> 00:43:15,068
are close to the pixels that we need and

903
00:43:13,809 --> 00:43:17,920
the way we were going to do that was

904
00:43:15,068 --> 00:43:21,818
with a voxel right we wanted to have

905
00:43:17,920 --> 00:43:26,068
sort of a fairly dense voxel that would

906
00:43:21,818 --> 00:43:30,219
allow specify how we would pull out our

907
00:43:26,068 --> 00:43:37,358
light information and go from there now

908
00:43:30,219 --> 00:43:39,639
when I think about it actually I suppose

909
00:43:37,358 --> 00:43:44,078
we do sort of need to transmit light

910
00:43:39,639 --> 00:43:46,059
probe position sort of but it's not

911
00:43:44,079 --> 00:43:48,760
immediately obvious to me how we're

912
00:43:46,059 --> 00:43:49,009
gonna do that we probably need to send

913
00:43:48,760 --> 00:43:52,099
down

914
00:43:49,010 --> 00:43:52,099
[Music]

915
00:44:05,838 --> 00:44:11,568
I mean just thinking this through right

916
00:44:08,739 --> 00:44:15,978
it would obviously much more efficient

917
00:44:11,568 --> 00:44:19,159
and easy for us if our light probes were

918
00:44:15,978 --> 00:44:21,468
just voxel centered right like the best

919
00:44:19,159 --> 00:44:23,358
possible case for us is light probes

920
00:44:21,469 --> 00:44:28,539
just occur in the middle of the raxil

921
00:44:23,358 --> 00:44:28,538
and that's the end of it and you know

922
00:44:32,858 --> 00:44:39,588
that makes it easier to do the filtering

923
00:44:36,278 --> 00:44:45,170
it makes it easier to do the

924
00:44:39,588 --> 00:44:46,880
transmission source less data but

925
00:44:45,170 --> 00:44:48,798
completely honest I'm not sure how that

926
00:44:46,880 --> 00:44:51,489
would work with a flexible world layout

927
00:44:48,798 --> 00:44:51,489
like ours

928
00:45:02,300 --> 00:45:06,660
so I'm not really sure happy you know we

929
00:45:05,429 --> 00:45:09,419
would be able to get away with something

930
00:45:06,659 --> 00:45:12,179
like that we can pretty trivially use

931
00:45:09,420 --> 00:45:18,360
the voxels to pick what we are going to

932
00:45:12,179 --> 00:45:23,429
bilinear between or trilinear between if

933
00:45:18,360 --> 00:45:25,740
we use all eight cubes of the voxel that

934
00:45:23,429 --> 00:45:30,349
surrounds the player or up the lighting

935
00:45:25,739 --> 00:45:30,349
point but

936
00:45:38,670 --> 00:45:48,720
I just can't quite figure out if I did

937
00:45:46,108 --> 00:45:51,528
that I feel like we just need to store

938
00:45:48,719 --> 00:45:51,528
the position still

939
00:46:05,650 --> 00:46:10,490
so I guess I would say I don't really

940
00:46:08,000 --> 00:46:12,980
have any ideas here this is this is kind

941
00:46:10,489 --> 00:46:16,279
of the ugliest part I'm not really sure

942
00:46:12,980 --> 00:46:19,369
what to do about it we could choose to

943
00:46:16,280 --> 00:46:22,250
use the lookup that didn't quite do it

944
00:46:19,369 --> 00:46:25,299
this way meaning a non voxel but I just

945
00:46:22,250 --> 00:46:25,300
don't know

946
00:46:32,489 --> 00:46:38,059
I don't really see that as being

947
00:46:34,710 --> 00:46:38,059
something that's gonna be any better

948
00:46:43,639 --> 00:46:47,848
yeah I don't I don't really have any

949
00:46:45,838 --> 00:46:50,519
good ideas here I mean basically the

950
00:46:47,849 --> 00:46:52,619
problem is very simple we want to light

951
00:46:50,519 --> 00:46:54,358
with the lighting probe it would be very

952
00:46:52,619 --> 00:46:56,700
easy for us to light with just one

953
00:46:54,358 --> 00:46:59,250
lighting probe finding the closest probe

954
00:46:56,699 --> 00:47:01,769
would be a pretty simple voxel lookup

955
00:46:59,250 --> 00:47:04,550
and we would just light with it and

956
00:47:01,769 --> 00:47:06,929
that's not too bad right

957
00:47:04,550 --> 00:47:09,329
but the problem we're gonna have is that

958
00:47:06,929 --> 00:47:11,848
if we only lit with just the closest

959
00:47:09,329 --> 00:47:13,260
lighting probe then we end up with a

960
00:47:11,849 --> 00:47:15,599
situation where we will see some

961
00:47:13,260 --> 00:47:17,339
lighting pops because where we change

962
00:47:15,599 --> 00:47:19,410
from one probe to another probe you

963
00:47:17,338 --> 00:47:21,960
would see the discontinuous lighting

964
00:47:19,409 --> 00:47:23,308
change as you move between them so the

965
00:47:21,960 --> 00:47:25,289
reason that you typically by linear

966
00:47:23,309 --> 00:47:28,410
blend between lighting probes in at

967
00:47:25,289 --> 00:47:30,509
least some fashion or at least linearly

968
00:47:28,409 --> 00:47:32,219
blend between at least two is because

969
00:47:30,510 --> 00:47:34,920
you're trying to prevent that pop from

970
00:47:32,219 --> 00:47:36,750
occurring and I'm trying to think if

971
00:47:34,920 --> 00:47:40,139
there is some way of blending these

972
00:47:36,750 --> 00:47:44,489
together in such a fashion that would it

973
00:47:40,139 --> 00:47:47,098
would not require you know eight

974
00:47:44,489 --> 00:47:54,868
lighting probes to actually be loaded

975
00:47:47,099 --> 00:47:57,809
and then blended per pixel right I mean

976
00:47:54,869 --> 00:47:59,990
that just seems brutal you know what I

977
00:47:57,809 --> 00:47:59,990
mean

978
00:48:13,570 --> 00:48:20,050
and furthermore after you load those

979
00:48:16,780 --> 00:48:23,560
eight you still don't really know what's

980
00:48:20,050 --> 00:48:26,410
going on because the lighting probes

981
00:48:23,559 --> 00:48:31,329
have different locations so you would

982
00:48:26,409 --> 00:48:37,509
still have to use you know you'd still

983
00:48:31,329 --> 00:48:40,590
have to use basically like some kind of

984
00:48:37,510 --> 00:48:40,590
positional blend

985
00:48:45,849 --> 00:48:50,359
yeah I don't know I don't know this

986
00:48:48,650 --> 00:48:52,630
parts this parts a little troubling and

987
00:48:50,358 --> 00:48:56,358
I don't have a lot of good ideas for it

988
00:48:52,630 --> 00:48:58,760
it's a spatial query to find the light

989
00:48:56,358 --> 00:49:01,429
probes and I'm not sure I have a good

990
00:48:58,760 --> 00:49:04,190
idea about what to do using it voxels

991
00:49:01,429 --> 00:49:06,529
one way to look things up it would work

992
00:49:04,190 --> 00:49:08,510
pretty easily although maybe would be

993
00:49:06,530 --> 00:49:10,310
time-consuming because of all the

994
00:49:08,510 --> 00:49:12,380
texture lookups to just look up the

995
00:49:10,309 --> 00:49:13,670
eight voxels that bound where the

996
00:49:12,380 --> 00:49:17,140
location the pixel is that you're

997
00:49:13,670 --> 00:49:21,619
lighting and then do trilinear to find

998
00:49:17,139 --> 00:49:23,779
what the actual inbound light is you

999
00:49:21,619 --> 00:49:26,990
could certainly do that but the problem

1000
00:49:23,780 --> 00:49:29,450
there that I see is how do you do

1001
00:49:26,989 --> 00:49:32,598
the trilinear between things with with

1002
00:49:29,449 --> 00:49:42,710
arbitrary positions it would actually be

1003
00:49:32,599 --> 00:49:45,710
a little bit it would actually be a

1004
00:49:42,710 --> 00:49:48,108
little bit difficult to figure out how

1005
00:49:45,710 --> 00:49:51,949
you would do that and and maybe so okay

1006
00:49:48,108 --> 00:49:54,139
so I guess one answer is even though the

1007
00:49:51,949 --> 00:49:57,079
lights are not at the Centers of the

1008
00:49:54,139 --> 00:49:59,838
voxel you could just pretend that they

1009
00:49:57,079 --> 00:50:02,420
were meaning you don't really care where

1010
00:49:59,838 --> 00:50:03,710
a light probe is it's just at the center

1011
00:50:02,420 --> 00:50:05,599
of oxalá for all intents and purposes

1012
00:50:03,710 --> 00:50:08,269
you could do that the problem with that

1013
00:50:05,599 --> 00:50:10,519
is if the light probes move then you end

1014
00:50:08,269 --> 00:50:17,239
up in a situation where the movement of

1015
00:50:10,519 --> 00:50:19,579
the light probes creates its own set of

1016
00:50:17,239 --> 00:50:21,769
discontinuities now maybe the answer is

1017
00:50:19,579 --> 00:50:24,469
just don't move light probes light

1018
00:50:21,769 --> 00:50:27,460
probes have to stay where they are and

1019
00:50:24,469 --> 00:50:27,459
that's probably fine

1020
00:50:32,090 --> 00:50:35,960
so maybe the answer is light perhaps

1021
00:50:34,619 --> 00:50:38,639
have to stay where they are

1022
00:50:35,960 --> 00:50:40,769
we don't really end up caring where

1023
00:50:38,639 --> 00:50:43,009
light probe is we treat the light probe

1024
00:50:40,769 --> 00:50:46,250
as if it's at the center of the voxel

1025
00:50:43,010 --> 00:50:50,250
and that's how we do our blending and

1026
00:50:46,250 --> 00:50:51,510
that's pretty much it and we try to make

1027
00:50:50,250 --> 00:50:52,139
those two things line up as much as

1028
00:50:51,510 --> 00:50:55,440
possible

1029
00:50:52,139 --> 00:50:58,369
but when they don't we don't care that

1030
00:50:55,440 --> 00:51:02,159
way we can sort of just do one divide

1031
00:50:58,369 --> 00:51:04,199
well it's not a device to multiply we

1032
00:51:02,159 --> 00:51:06,000
can do one multiplied two and then get

1033
00:51:04,199 --> 00:51:08,039
take a fractional value which ends up

1034
00:51:06,000 --> 00:51:13,349
being the correct amount to blend by

1035
00:51:08,039 --> 00:51:18,360
right in terms of T values for the

1036
00:51:13,349 --> 00:51:21,599
trilinear blend and I mean I guess we

1037
00:51:18,360 --> 00:51:24,059
just try that first it sounds crazy to

1038
00:51:21,599 --> 00:51:33,719
me but then again GPUs are incredibly

1039
00:51:24,059 --> 00:51:36,299
fast these days so I don't know yeah I

1040
00:51:33,719 --> 00:51:37,859
don't know so if you imagine what this

1041
00:51:36,300 --> 00:51:40,100
would look like I mean let's just write

1042
00:51:37,860 --> 00:51:40,099
it out

1043
00:51:47,659 --> 00:51:56,989
so if we take a look super at the Z bias

1044
00:51:51,719 --> 00:51:58,889
program what you can see here is that

1045
00:51:56,989 --> 00:52:01,229
well we're not we're not gonna have to

1046
00:51:58,889 --> 00:52:03,389
change the fragment shader obviously I'm

1047
00:52:01,230 --> 00:52:03,750
sorry at the vertex shader that can be

1048
00:52:03,389 --> 00:52:05,429
fine

1049
00:52:03,750 --> 00:52:09,630
also at this point I think we may have

1050
00:52:05,429 --> 00:52:10,859
eliminated the Z bias as well so at some

1051
00:52:09,630 --> 00:52:14,220
point we may be able to get rid of that

1052
00:52:10,860 --> 00:52:16,289
I don't know but if we didn't look at

1053
00:52:14,219 --> 00:52:18,929
the fret the fragment code as we're

1054
00:52:16,289 --> 00:52:22,590
doing it right now what you can see is

1055
00:52:18,929 --> 00:52:26,429
there's affection some like light thing

1056
00:52:22,590 --> 00:52:27,120
happening right and then we've got like

1057
00:52:26,429 --> 00:52:30,119
this

1058
00:52:27,119 --> 00:52:31,829
sunlight thing happening and and all the

1059
00:52:30,119 --> 00:52:33,769
stuff we commented those out because

1060
00:52:31,829 --> 00:52:35,969
they're not actually happening anymore

1061
00:52:33,769 --> 00:52:40,230
but we need to start putting those back

1062
00:52:35,969 --> 00:52:42,719
in you know I'm saying so basically this

1063
00:52:40,230 --> 00:52:45,650
right here where we produce a value that

1064
00:52:42,719 --> 00:52:50,039
we multiply our surface reflectance by

1065
00:52:45,650 --> 00:52:52,740
that needs to reappear and if we want

1066
00:52:50,039 --> 00:52:54,869
that to reappear we've got this lighting

1067
00:52:52,739 --> 00:52:57,149
disabled thing we just have to on

1068
00:52:54,869 --> 00:53:02,429
lighting disabled and it will come back

1069
00:52:57,150 --> 00:53:05,519
in right so we would delete that so

1070
00:53:02,429 --> 00:53:10,529
lighting is no longer disabled and then

1071
00:53:05,519 --> 00:53:14,309
what we would do is in here we have to

1072
00:53:10,530 --> 00:53:17,880
replace this lighting some code with

1073
00:53:14,309 --> 00:53:21,690
code that actually does the lighting

1074
00:53:17,880 --> 00:53:25,849
fetching that we need it to do so if you

1075
00:53:21,690 --> 00:53:30,929
imagine what has to happen per probe is

1076
00:53:25,849 --> 00:53:34,559
we would need to fetch a probe and the

1077
00:53:30,929 --> 00:53:39,569
irradiance there from which is six

1078
00:53:34,559 --> 00:53:41,190
irradiance values which you know this is

1079
00:53:39,570 --> 00:53:42,990
why I say we really want these things to

1080
00:53:41,190 --> 00:53:45,900
be you thirty twos because we don't want

1081
00:53:42,989 --> 00:53:51,109
them to be that big but so we

1082
00:53:45,900 --> 00:53:53,130
effectively need to fetch this is um

1083
00:53:51,110 --> 00:53:54,619
this is you can see why I'm nervous

1084
00:53:53,130 --> 00:53:59,059
about this right

1085
00:53:54,619 --> 00:54:04,880
so if we have six radiance values that

1086
00:53:59,059 --> 00:54:09,019
means if we fetch eight probes times 6

1087
00:54:04,880 --> 00:54:12,910
or radiance values per probe times once

1088
00:54:09,018 --> 00:54:12,909
they're compressed down that's 4 bytes

1089
00:54:12,969 --> 00:54:30,950
we have to fetch 192 bytes of lighting

1090
00:54:16,670 --> 00:54:33,969
data for every pixel which is not my

1091
00:54:30,949 --> 00:54:33,968
favorite thing in the world

1092
00:54:40,869 --> 00:54:45,219
but I think that's just where we're at

1093
00:54:42,748 --> 00:54:47,588
so I think we just start with that

1094
00:54:45,219 --> 00:54:49,298
and we then will try to figure out how

1095
00:54:47,588 --> 00:54:52,058
to optimize it and maybe we go read some

1096
00:54:49,298 --> 00:54:55,349
research papers to see what kind of

1097
00:54:52,059 --> 00:54:56,619
solutions people have come up with here

1098
00:54:55,349 --> 00:54:59,410
because I

1099
00:54:56,619 --> 00:55:02,769
yeah I don't know like what exactly we

1100
00:54:59,409 --> 00:55:06,068
would do maybe that's not that much

1101
00:55:02,768 --> 00:55:08,018
anymore these days I don't know but if

1102
00:55:06,068 --> 00:55:11,558
we were to compute the bandwidth there

1103
00:55:08,018 --> 00:55:15,728
look at 1980 at 19 that's good

1104
00:55:11,559 --> 00:55:17,079
1920 by 1080 which is the number of

1105
00:55:15,728 --> 00:55:19,659
pixels we're gonna have to do at a

1106
00:55:17,079 --> 00:55:21,579
minimum but we did some work that kind

1107
00:55:19,659 --> 00:55:27,699
of gets it down to like you know not too

1108
00:55:21,579 --> 00:55:30,818
much above that times 192 that's just

1109
00:55:27,699 --> 00:55:35,348
like kind of ugly

1110
00:55:30,818 --> 00:55:43,719
that's 398 megabytes of texture

1111
00:55:35,349 --> 00:55:45,369
throughput per frame right and so you

1112
00:55:43,719 --> 00:55:47,829
know how much text in addition any

1113
00:55:45,369 --> 00:55:50,380
texture band if we happen to be using if

1114
00:55:47,829 --> 00:55:52,749
we assume the game is trying to run at

1115
00:55:50,380 --> 00:55:55,778
60 frames a second we end up with 23

1116
00:55:52,748 --> 00:55:59,228
gigabytes of texture bandwidth being

1117
00:55:55,778 --> 00:56:01,179
consumed for lighting now granted we

1118
00:55:59,228 --> 00:56:05,498
don't consume that much texture

1119
00:56:01,179 --> 00:56:10,139
bandwidth for any other textures but you

1120
00:56:05,498 --> 00:56:10,139
know if we were to look at

1121
00:56:15,139 --> 00:56:22,019
what the texture bandwidth tends to be

1122
00:56:18,780 --> 00:56:24,990
which you know it's hard to estimate

1123
00:56:22,019 --> 00:56:29,099
because it depends how often it hits the

1124
00:56:24,989 --> 00:56:31,589
cache if I was to go to like a you know

1125
00:56:29,099 --> 00:56:33,869
modern 1080 or something which is like a

1126
00:56:31,590 --> 00:56:37,820
high-end one and we look at what the

1127
00:56:33,869 --> 00:56:42,809
gigabyte per second bandwidth this right

1128
00:56:37,820 --> 00:56:44,340
so like here's some high-end bandwidth

1129
00:56:42,809 --> 00:56:49,039
would be thread and 20 gigabytes per

1130
00:56:44,340 --> 00:56:54,240
second in terms of like peak theoretical

1131
00:56:49,039 --> 00:56:56,429
and like yeah I mean it's not horrible

1132
00:56:54,239 --> 00:56:59,909
but you know go down there and look at

1133
00:56:56,429 --> 00:57:02,669
an crappy card and you're like using the

1134
00:56:59,909 --> 00:57:05,429
whole thing right so it's basically

1135
00:57:02,670 --> 00:57:07,170
using like all of the bandwidth of the

1136
00:57:05,429 --> 00:57:14,309
graphics card just to load the lighting

1137
00:57:07,170 --> 00:57:17,610
data at that at that bandwidth now again

1138
00:57:14,309 --> 00:57:19,590
maybe it's not as dire as I am making it

1139
00:57:17,610 --> 00:57:22,980
sound because maybe you hit the cache

1140
00:57:19,590 --> 00:57:26,010
just so much because if you think about

1141
00:57:22,980 --> 00:57:27,780
what happens all of the pixels in a

1142
00:57:26,010 --> 00:57:30,480
given area are gonna be loading like the

1143
00:57:27,780 --> 00:57:32,580
same lighting information right so it

1144
00:57:30,480 --> 00:57:34,829
could be that just you hit the cache so

1145
00:57:32,579 --> 00:57:38,489
much that you just don't actually take

1146
00:57:34,829 --> 00:57:40,739
that much bandwidth so I'm willing to

1147
00:57:38,489 --> 00:57:44,219
believe that we should just proceed down

1148
00:57:40,739 --> 00:57:50,579
this road and see how bad it actually is

1149
00:57:44,219 --> 00:57:53,009
and then once we are satisfied that it

1150
00:57:50,579 --> 00:57:56,309
is actually super slow and bad then then

1151
00:57:53,010 --> 00:57:58,950
worried about it right cuz I don't know

1152
00:57:56,309 --> 00:58:02,400
I can't predict how the graphics card

1153
00:57:58,949 --> 00:58:03,359
will respond to having to do those those

1154
00:58:02,400 --> 00:58:06,030
texture loads

1155
00:58:03,360 --> 00:58:07,620
I just don't know and so the fact that

1156
00:58:06,030 --> 00:58:10,160
they'll hit the cache all the time

1157
00:58:07,619 --> 00:58:15,449
which I guess they really probably would

1158
00:58:10,159 --> 00:58:19,230
I just don't have any insight into

1159
00:58:15,449 --> 00:58:22,439
whether that means anything you know I

1160
00:58:19,230 --> 00:58:24,030
don't know so I'm gonna go ahead with it

1161
00:58:22,440 --> 00:58:25,079
for now

1162
00:58:24,030 --> 00:58:27,720
and

1163
00:58:25,079 --> 00:58:29,639
[Music]

1164
00:58:27,719 --> 00:58:31,889
you know if I if I think of something

1165
00:58:29,639 --> 00:58:34,679
magically smart that's better than this

1166
00:58:31,889 --> 00:58:38,879
we can we can put it in there afterward

1167
00:58:34,679 --> 00:58:40,980
right but this is something we may we

1168
00:58:38,880 --> 00:58:43,079
may struggle with because I don't have a

1169
00:58:40,980 --> 00:58:48,769
particularly good idea of how that would

1170
00:58:43,079 --> 00:58:52,079
work all right so if we move along here

1171
00:58:48,769 --> 00:58:55,500
what we would need to do is pretty

1172
00:58:52,079 --> 00:58:57,568
similar like this fetching some thing is

1173
00:58:55,500 --> 00:59:01,019
it's pretty similar to what we need to

1174
00:58:57,568 --> 00:59:04,259
do so beforehand where we were doing

1175
00:59:01,019 --> 00:59:07,130
this like running something when we do

1176
00:59:04,260 --> 00:59:10,079
the fetch and some what we need to do is

1177
00:59:07,130 --> 00:59:12,329
be able to pass the difference here is

1178
00:59:10,079 --> 00:59:15,539
before we were doing like a positional

1179
00:59:12,329 --> 00:59:18,329
contribution distance sort of thing and

1180
00:59:15,539 --> 00:59:20,539
we could still do that right like if we

1181
00:59:18,329 --> 00:59:25,589
wanted to we could totally still do that

1182
00:59:20,539 --> 00:59:37,369
and all that like the difference there

1183
00:59:25,588 --> 00:59:41,309
would so I just realized I'm wrong

1184
00:59:37,369 --> 00:59:43,640
actually we don't have to do what I just

1185
00:59:41,309 --> 00:59:43,639
said

1186
00:59:51,289 --> 01:00:00,869
so what I said was erroneous for any

1187
00:59:57,000 --> 01:00:03,869
given pixel because we are only looking

1188
01:00:00,869 --> 01:00:07,200
in one direction so that pixel has a

1189
01:00:03,869 --> 01:00:10,230
normal and the normal is the direction

1190
01:00:07,199 --> 01:00:12,960
in which you look at the lighting all we

1191
01:00:10,230 --> 01:00:17,659
would actually have to do is look at

1192
01:00:12,960 --> 01:00:24,329
which face of the light probe that is

1193
01:00:17,659 --> 01:00:27,899
implied by that normal so actually is

1194
01:00:24,329 --> 01:00:31,920
not true we don't have to fetch six

1195
01:00:27,900 --> 01:00:35,420
lighting values per probe we only have

1196
01:00:31,920 --> 01:00:38,730
to fetch one so actually it's only eight

1197
01:00:35,420 --> 01:00:43,530
pieces of lighting data that's much

1198
01:00:38,730 --> 01:00:47,849
better it's not 8 times 6 times 4 it's 8

1199
01:00:43,530 --> 01:00:57,780
times 4 I'm sorry it's yeah it's 8 times

1200
01:00:47,849 --> 01:01:02,639
4 times 1920 x 1080 right and that's a

1201
01:00:57,780 --> 01:01:04,320
lot more meager 4 gigabytes a second if

1202
01:01:02,639 --> 01:01:07,469
total bandwidth if you literally miss

1203
01:01:04,320 --> 01:01:09,210
the cache every time suddenly not as

1204
01:01:07,469 --> 01:01:11,039
scary is a number and especially because

1205
01:01:09,210 --> 01:01:16,079
I do think we will hit the cache a lot

1206
01:01:11,039 --> 01:01:18,570
of the time so maybe I'm more optimistic

1207
01:01:16,079 --> 01:01:20,880
about this than I that I was previously

1208
01:01:18,570 --> 01:01:22,950
maybe now that I'm thinking about it

1209
01:01:20,880 --> 01:01:24,809
it's not as fat because if you assume

1210
01:01:22,949 --> 01:01:26,219
that you're only looking at the part of

1211
01:01:24,809 --> 01:01:30,108
the light probe that you actually need

1212
01:01:26,219 --> 01:01:30,108
which I'm not sure why you wouldn't

1213
01:01:33,230 --> 01:01:38,570
suddenly uh that just doesn't seem so

1214
01:01:36,300 --> 01:01:38,570
bad

1215
01:01:45,539 --> 01:01:51,599
okay now one thing that I don't actually

1216
01:01:48,688 --> 01:01:53,608
know it may be the case that we want to

1217
01:01:51,599 --> 01:01:56,459
separate this out into more samplers

1218
01:01:53,608 --> 01:01:59,699
than we have it may be that we want one

1219
01:01:56,458 --> 01:02:01,078
light sampler per direction so I don't

1220
01:01:59,699 --> 01:02:04,079
know whether the light probe irradiance

1221
01:02:01,079 --> 01:02:06,209
is best stored as six separate textures

1222
01:02:04,079 --> 01:02:09,630
or if it's best stored as one texture

1223
01:02:06,208 --> 01:02:11,038
and we just stride idli access it the

1224
01:02:09,630 --> 01:02:13,349
reason I don't know that is because

1225
01:02:11,039 --> 01:02:15,539
again since I'm not a GPU person I don't

1226
01:02:13,349 --> 01:02:18,749
know if the GPU is particularly good at

1227
01:02:15,539 --> 01:02:23,639
doing things like six times an index

1228
01:02:18,748 --> 01:02:26,038
plus two right Intel chips make Swiss

1229
01:02:23,639 --> 01:02:28,019
cheese of things like this because you

1230
01:02:26,039 --> 01:02:32,278
can do little tricks and they have lots

1231
01:02:28,018 --> 01:02:34,528
of ways of making you know easy array

1232
01:02:32,278 --> 01:02:36,599
indices and stuff like that I don't know

1233
01:02:34,528 --> 01:02:39,719
to what extent GPUs like that sort of

1234
01:02:36,599 --> 01:02:40,979
thing so what I might suggest and you

1235
01:02:39,719 --> 01:02:43,159
know I'm just gonna I'm just going out

1236
01:02:40,978 --> 01:02:47,759
on a limb here but what I might suggest

1237
01:02:43,159 --> 01:02:49,858
is that we we will actually sort of

1238
01:02:47,759 --> 01:02:56,608
stride we will so we will actually have

1239
01:02:49,858 --> 01:02:59,028
a sampler per perlite I guess per per

1240
01:02:56,608 --> 01:02:59,028
direction

1241
01:03:06,170 --> 01:03:10,940
even that I'm not sure like I wish I

1242
01:03:08,480 --> 01:03:13,039
knew more about GPUs internals which I

1243
01:03:10,940 --> 01:03:14,659
you know it's just not my thing because

1244
01:03:13,039 --> 01:03:16,640
I'm just not sure this is this is simply

1245
01:03:14,659 --> 01:03:19,038
a case of knowing how GPUs tend to like

1246
01:03:16,639 --> 01:03:21,588
things all I really want to know is

1247
01:03:19,039 --> 01:03:23,720
what's the most efficient way to sample

1248
01:03:21,588 --> 01:03:25,460
this stuff and you know what meat you

1249
01:03:23,719 --> 01:03:27,379
actually you know what maybe is the best

1250
01:03:25,460 --> 01:03:29,119
way to sample this stuff the best way to

1251
01:03:27,380 --> 01:03:34,608
sample this stuff might actually just be

1252
01:03:29,119 --> 01:03:36,740
as a 2d texture where one dimension is

1253
01:03:34,608 --> 01:03:44,409
the number of light probes and the other

1254
01:03:36,739 --> 01:03:47,719
dimension is the direction that seems

1255
01:03:44,409 --> 01:03:54,500
pretty good right

1256
01:03:47,719 --> 01:03:57,618
I mean yet another way to do it would be

1257
01:03:54,500 --> 01:04:03,369
to do it as a cube map right like we

1258
01:03:57,619 --> 01:04:06,048
actually have a cube map and we

1259
01:04:03,369 --> 01:04:09,890
literally let the graphics cards cube

1260
01:04:06,048 --> 01:04:12,798
mapping take the normal and do that work

1261
01:04:09,889 --> 01:04:16,578
for us right so that's another thing we

1262
01:04:12,798 --> 01:04:20,929
could do and I guess I don't know maybe

1263
01:04:16,579 --> 01:04:22,309
that makes some sense as well right the

1264
01:04:20,929 --> 01:04:25,190
reason that makes some sense is because

1265
01:04:22,309 --> 01:04:27,769
then it's you know on what might be a

1266
01:04:25,190 --> 01:04:30,019
faster path because if the graphics card

1267
01:04:27,768 --> 01:04:34,548
understands that what we're doing is a

1268
01:04:30,018 --> 01:04:39,489
cube map sample it may be more inclined

1269
01:04:34,548 --> 01:04:43,449
to give us something optimal you know

1270
01:04:39,489 --> 01:04:43,449
let me just take a look here

1271
01:04:51,489 --> 01:05:03,739
yes you can see here we could just send

1272
01:04:57,349 --> 01:05:05,779
these down as cube maps right and we

1273
01:05:03,739 --> 01:05:12,049
would have a special binding for the

1274
01:05:05,780 --> 01:05:14,530
cube map then we just need GLSL and here

1275
01:05:12,050 --> 01:05:21,110
for cube map samplers let me take a look

1276
01:05:14,530 --> 01:05:24,140
where that happens so you can see G

1277
01:05:21,110 --> 01:05:26,180
sample cube here for cube map textures I

1278
01:05:24,139 --> 01:05:28,789
don't know where they I'm not actually

1279
01:05:26,179 --> 01:05:35,659
seeing where they actually specify what

1280
01:05:28,789 --> 01:05:41,000
the G OSL format is for sampling from

1281
01:05:35,659 --> 01:05:49,279
that cube map obviously let's see no no

1282
01:05:41,000 --> 01:05:58,489
no here we go oh no that's just regular

1283
01:05:49,280 --> 01:06:01,450
projective textures nevermind let's just

1284
01:05:58,489 --> 01:06:01,449
see if you look it up this way

1285
01:06:02,130 --> 01:06:07,170
here's the quick reference card enjoy so

1286
01:06:05,099 --> 01:06:10,349
here's the texture samplers so you can

1287
01:06:07,170 --> 01:06:15,119
see them on here and if we're gonna ask

1288
01:06:10,349 --> 01:06:19,889
it to do a cube map for us then you can

1289
01:06:15,119 --> 01:06:23,489
see here like there's a special sampler

1290
01:06:19,889 --> 01:06:26,909
for this one for cube and one for shadow

1291
01:06:23,489 --> 01:06:31,259
map cube I guess but anyway

1292
01:06:26,909 --> 01:06:37,589
so if we take a look at the cube sampler

1293
01:06:31,260 --> 01:06:43,620
and we do the p-value here that should I

1294
01:06:37,590 --> 01:06:44,940
think automate the lookup into which one

1295
01:06:43,619 --> 01:06:53,400
of the sides we're actually talking

1296
01:06:44,940 --> 01:06:55,619
about I don't really know if we want to

1297
01:06:53,400 --> 01:06:58,190
do it this way it could be one texel

1298
01:06:55,619 --> 01:06:58,190
large

1299
01:07:04,239 --> 01:07:09,429
but I'm just thinking about it and you

1300
01:07:06,800 --> 01:07:16,880
know my head I'm thinking well gosh if

1301
01:07:09,429 --> 01:07:18,739
we used a cube map yeah I mean I think

1302
01:07:16,880 --> 01:07:20,119
we probably don't I mean it's almost

1303
01:07:18,739 --> 01:07:22,879
like you think about it you must want to

1304
01:07:20,119 --> 01:07:24,349
use a texture array for this so that you

1305
01:07:22,880 --> 01:07:26,930
can basically pass the last parameter

1306
01:07:24,349 --> 01:07:29,599
and then you more want to use when

1307
01:07:26,929 --> 01:07:31,699
you're fetching in there you would more

1308
01:07:29,599 --> 01:07:34,400
just want to use like a positional value

1309
01:07:31,699 --> 01:07:38,269
that you computed so yeah I'm thinking

1310
01:07:34,400 --> 01:07:41,960
that maybe not I do think a texture

1311
01:07:38,269 --> 01:07:44,630
array would make a lot of sense but I

1312
01:07:41,960 --> 01:07:47,838
think maybe this makes not so much sense

1313
01:07:44,630 --> 01:07:49,250
right and so if you look at what's

1314
01:07:47,838 --> 01:07:51,099
happening here right where we do a

1315
01:07:49,250 --> 01:07:53,838
textile fetch into one of these samplers

1316
01:07:51,099 --> 01:07:56,150
if we were assuming that actually what

1317
01:07:53,838 --> 01:08:00,230
we're doing is we're sending down a

1318
01:07:56,150 --> 01:08:02,000
texture array or a 2d texture or

1319
01:08:00,230 --> 01:08:03,619
anything like that that just seems like

1320
01:08:02,000 --> 01:08:06,019
it makes more sense because then we just

1321
01:08:03,619 --> 01:08:11,990
compute the fetch value we use it and

1322
01:08:06,019 --> 01:08:14,059
we're done so I think maybe maybe we

1323
01:08:11,989 --> 01:08:16,460
want something more like that where we

1324
01:08:14,059 --> 01:08:17,930
have a rectangular texture maybe that we

1325
01:08:16,460 --> 01:08:18,649
sample from and we're just pulling data

1326
01:08:17,930 --> 01:08:22,039
out of it

1327
01:08:18,649 --> 01:08:24,318
when we want to do an actual fetch we

1328
01:08:22,039 --> 01:08:28,689
just do a thing that's like light

1329
01:08:24,319 --> 01:08:31,969
sampler we say that the light sampler

1330
01:08:28,689 --> 01:08:35,719
for our textual fetch is going to be

1331
01:08:31,969 --> 01:08:40,100
like the light index and the side index

1332
01:08:35,719 --> 01:08:42,319
right something like this so we

1333
01:08:40,100 --> 01:08:44,630
basically passed down which light probe

1334
01:08:42,319 --> 01:08:46,370
we were asking for and which side of the

1335
01:08:44,630 --> 01:08:50,539
light probe we were asking for that

1336
01:08:46,369 --> 01:08:52,969
gives us back the exact value the rest

1337
01:08:50,539 --> 01:08:55,670
of this stuff we don't care right so

1338
01:08:52,969 --> 01:08:58,880
fetching some now kind of becomes a

1339
01:08:55,670 --> 01:09:02,000
non-issue and if we wanted to look at

1340
01:08:58,880 --> 01:09:03,940
what sunlight would look like I think we

1341
01:09:02,000 --> 01:09:08,088
can kind of just get rid of all this

1342
01:09:03,939 --> 01:09:14,318
right and do something more like this

1343
01:09:08,088 --> 01:09:14,318
so if we imagined this sort of thing

1344
01:09:21,060 --> 01:09:30,759
well I guess we do need a v4 because

1345
01:09:29,560 --> 01:09:35,289
eventually we will use that for

1346
01:09:30,759 --> 01:09:40,960
intensity but basically we'd end up

1347
01:09:35,289 --> 01:09:45,399
doing eight Texel fetches from our

1348
01:09:40,960 --> 01:09:48,039
indices right and the tough thing there

1349
01:09:45,399 --> 01:09:50,048
is that these each index also requires

1350
01:09:48,039 --> 01:09:53,408
so it'd be sixteen Texel fetches total

1351
01:09:50,048 --> 01:09:55,479
which isn't great right but thankfully

1352
01:09:53,408 --> 01:09:56,859
sixteen is a lot less than one I thought

1353
01:09:55,479 --> 01:10:01,988
we were going to need because I thought

1354
01:09:56,859 --> 01:10:04,750
we were gonna need more like eight plus

1355
01:10:01,988 --> 01:10:21,009
eight times six which is so more

1356
01:10:04,750 --> 01:10:22,179
than sixteen right uhm so yeah so I

1357
01:10:21,010 --> 01:10:25,239
think we're looking at something like

1358
01:10:22,179 --> 01:10:27,100
this again it's not great you know I

1359
01:10:25,238 --> 01:10:31,869
can't pretend that I'm thinking this is

1360
01:10:27,100 --> 01:10:41,199
fantastic here but maybe it's the best

1361
01:10:31,869 --> 01:10:47,289
we can do you know I mean so if we were

1362
01:10:41,198 --> 01:10:50,589
to fetch our voxel stuff here right and

1363
01:10:47,289 --> 01:10:52,238
I don't know that may not be I have to

1364
01:10:50,590 --> 01:10:55,150
go look at how we should how we should

1365
01:10:52,238 --> 01:10:57,459
fetch into our voxel but if we were to

1366
01:10:55,149 --> 01:11:02,408
come up with these values so if we were

1367
01:10:57,460 --> 01:11:04,600
to have a way of getting these indices

1368
01:11:02,408 --> 01:11:05,670
out of the voxel which we know we can do

1369
01:11:04,600 --> 01:11:08,590
we've done it before

1370
01:11:05,670 --> 01:11:13,929
then we fetch based off of them and we

1371
01:11:08,590 --> 01:11:15,819
get all of the light data right then

1372
01:11:13,929 --> 01:11:18,609
it's a simple matter of doing the

1373
01:11:15,819 --> 01:11:20,859
trilinear blend and that's actually not

1374
01:11:18,609 --> 01:11:24,339
so expensive there isn't a whole lot to

1375
01:11:20,859 --> 01:11:27,309
it right so we know that we would have

1376
01:11:24,340 --> 01:11:28,480
three fractional blending values and all

1377
01:11:27,310 --> 01:11:30,370
we really have to do

1378
01:11:28,479 --> 01:11:34,149
is pick an order of how we want to blend

1379
01:11:30,369 --> 01:11:37,238
and blend right so what I would say is

1380
01:11:34,149 --> 01:11:41,379
maybe we do lips this way so we would

1381
01:11:37,238 --> 01:11:45,839
combine these two values right we would

1382
01:11:41,380 --> 01:11:47,470
combine we would combined the Z first

1383
01:11:45,840 --> 01:11:49,810
you know I'm saying

1384
01:11:47,470 --> 01:11:53,020
so we collapse a lot or you know maybe

1385
01:11:49,810 --> 01:11:54,160
that's X first I don't care how we want

1386
01:11:53,020 --> 01:11:56,710
a number of these it's completely

1387
01:11:54,159 --> 01:11:59,619
irrelevant as long as we make sure that

1388
01:11:56,710 --> 01:12:01,720
the the T values line up so maybe that's

1389
01:11:59,619 --> 01:12:04,329
X so we're gonna collapse the x value

1390
01:12:01,720 --> 01:12:08,530
first or the z value first or who cares

1391
01:12:04,329 --> 01:12:11,350
and just get that out of it right

1392
01:12:08,529 --> 01:12:18,219
so we collapse these down there's the

1393
01:12:11,350 --> 01:12:20,560
zero one and you know there might is

1394
01:12:18,220 --> 01:12:22,989
there a try am I being stupid is there

1395
01:12:20,560 --> 01:12:25,150
already just a try learn your blend here

1396
01:12:22,988 --> 01:12:26,259
take these values and expand that to a

1397
01:12:25,149 --> 01:12:28,420
trial in your mind I actually think

1398
01:12:26,260 --> 01:12:50,220
there is but you know what let's take a

1399
01:12:28,420 --> 01:12:50,220
look looks like only just the one

1400
01:12:55,329 --> 01:13:07,130
you can do it vector wide but we don't

1401
01:12:59,869 --> 01:13:08,630
really want to I don't think because

1402
01:13:07,130 --> 01:13:12,319
we're not really loading him strided so

1403
01:13:08,630 --> 01:13:16,970
I think I think we're pretty much we get

1404
01:13:12,319 --> 01:13:26,269
what we get but anyway you know if we

1405
01:13:16,970 --> 01:13:30,170
mix this is always the this is going to

1406
01:13:26,270 --> 01:13:33,740
be the T like you know we've got three

1407
01:13:30,170 --> 01:13:36,170
places we'll call it the TX value maybe

1408
01:13:33,739 --> 01:13:41,359
for now so first we're gonna mix along

1409
01:13:36,170 --> 01:13:45,289
the X and that's just producing all four

1410
01:13:41,359 --> 01:13:49,009
mixes along the you know the the X lines

1411
01:13:45,289 --> 01:13:52,310
of the cube that leaves us with for

1412
01:13:49,010 --> 01:13:54,350
residual like remaining values we're

1413
01:13:52,310 --> 01:14:01,010
gonna do the same thing again to produce

1414
01:13:54,350 --> 01:14:07,450
two values right so now we're blending

1415
01:14:01,010 --> 01:14:07,449
along Y oops

1416
01:14:07,810 --> 01:14:16,580
like so and then finally we just do the

1417
01:14:14,420 --> 01:14:19,940
last blend can you hit the light data

1418
01:14:16,579 --> 01:14:23,119
that's actually pushed all together and

1419
01:14:19,939 --> 01:14:26,449
that just blends this year on the one by

1420
01:14:23,119 --> 01:14:30,819
a dizzy so again not complicated that

1421
01:14:26,449 --> 01:14:32,960
part it's really simple so the mixing

1422
01:14:30,819 --> 01:14:34,519
yeah I'm feeling better about this as

1423
01:14:32,960 --> 01:14:37,760
I'm actually writing it because when I

1424
01:14:34,520 --> 01:14:39,980
look at it now that we see how much is

1425
01:14:37,760 --> 01:14:44,030
involved here really the sixteen Texel

1426
01:14:39,979 --> 01:14:46,339
fetches aren't great by any stretch of

1427
01:14:44,029 --> 01:14:50,869
the imagination but the actual work we

1428
01:14:46,340 --> 01:14:55,819
then do to light is pretty simple right

1429
01:14:50,869 --> 01:14:58,069
so you know this fetching to get smooth

1430
01:14:55,819 --> 01:15:03,229
blending in three dimensions that's bad

1431
01:14:58,069 --> 01:15:06,809
and you know ouch certainly but at least

1432
01:15:03,229 --> 01:15:09,869
it's pretty straightforward at

1433
01:15:06,810 --> 01:15:15,560
the end of the day to use it so I'm not

1434
01:15:09,869 --> 01:15:15,559
particularly worried at that point about

1435
01:15:17,180 --> 01:15:32,840
about what's gonna happen after the fact

1436
01:15:19,579 --> 01:15:37,350
right so yeah so something like this is

1437
01:15:32,840 --> 01:15:41,279
all we really need and if we go down to

1438
01:15:37,350 --> 01:15:42,750
the lighting code here you can see where

1439
01:15:41,279 --> 01:15:43,500
we're doing this we don't need to do

1440
01:15:42,750 --> 01:15:46,770
this anymore

1441
01:15:43,500 --> 01:15:50,340
so that's kind of gone really all we

1442
01:15:46,770 --> 01:15:52,470
need to do is when we are in here we

1443
01:15:50,340 --> 01:15:57,300
need to have actually compiled this

1444
01:15:52,470 --> 01:16:00,869
shader with or without lighting right

1445
01:15:57,300 --> 01:16:02,340
and I mean I guess now I think about it

1446
01:16:00,869 --> 01:16:12,420
if we always kind of have the lighting

1447
01:16:02,340 --> 01:16:13,949
setup so I think you I think we probably

1448
01:16:12,420 --> 01:16:15,930
want to compile this with and without

1449
01:16:13,949 --> 01:16:18,029
lighting and then we just want to know

1450
01:16:15,930 --> 01:16:19,380
if the lighting is enabled we use the

1451
01:16:18,029 --> 01:16:21,090
one with lighting and a filling sonmez

1452
01:16:19,380 --> 01:16:27,810
what we don't right so I think we want

1453
01:16:21,090 --> 01:16:32,069
to deal with that later so that's what

1454
01:16:27,810 --> 01:16:35,789
we do in here we call the sunlight

1455
01:16:32,069 --> 01:16:38,549
function and we multiply the surface

1456
01:16:35,789 --> 01:16:42,569
reflectance by whatever that is that we

1457
01:16:38,550 --> 01:16:45,090
get out I think that's all we need and

1458
01:16:42,569 --> 01:16:47,309
then we're pretty much done so really

1459
01:16:45,090 --> 01:16:51,029
the only thing so it's a it's a but

1460
01:16:47,310 --> 01:16:53,190
simple shader so really the hard parts

1461
01:16:51,029 --> 01:16:54,869
are just first coming up with which

1462
01:16:53,189 --> 01:16:57,059
direction we're supposed to look in

1463
01:16:54,869 --> 01:16:59,699
order to do that we need the normal

1464
01:16:57,060 --> 01:17:01,050
obviously we have the normal because

1465
01:16:59,699 --> 01:17:05,760
that was something that we're going to

1466
01:17:01,050 --> 01:17:08,789
be provided so world normal right and

1467
01:17:05,760 --> 01:17:10,829
world P we have both of these things and

1468
01:17:08,789 --> 01:17:15,479
it's pretty easy for us to figure out

1469
01:17:10,829 --> 01:17:17,909
what they should be so what we now need

1470
01:17:15,479 --> 01:17:20,379
to do is compute those values and then

1471
01:17:17,909 --> 01:17:24,099
sample out of the voxel be

1472
01:17:20,380 --> 01:17:26,440
on that piece of information so in here

1473
01:17:24,100 --> 01:17:31,270
somewhere we need like a light sample

1474
01:17:26,439 --> 01:17:35,138
sampler and we need a light index

1475
01:17:31,270 --> 01:17:37,420
sampler and this textile fetch here is

1476
01:17:35,139 --> 01:17:43,179
going to be something that uses the

1477
01:17:37,420 --> 01:17:45,190
light index sampler to me so we're gonna

1478
01:17:43,179 --> 01:17:48,940
say like fetch the light index sampler

1479
01:17:45,189 --> 01:17:52,388
at the light index and this is gonna be

1480
01:17:48,939 --> 01:17:54,849
it's like a base index and this is going

1481
01:17:52,389 --> 01:18:00,609
to be something where it's got like an X

1482
01:17:54,850 --> 01:18:04,270
or Y to Z offset right so I guess I

1483
01:18:00,609 --> 01:18:06,880
don't know how Tex will fetch likes to

1484
01:18:04,270 --> 01:18:08,409
work let me look at how it wants to

1485
01:18:06,880 --> 01:18:10,539
because I want to pass integers there

1486
01:18:08,408 --> 01:18:14,198
and I don't know if I can bundle

1487
01:18:10,539 --> 01:18:17,529
integers together in GLSL it's you know

1488
01:18:14,198 --> 01:18:19,619
it's GLSL who who the heck knows so if I

1489
01:18:17,529 --> 01:18:24,609
go look at Texel fetch

1490
01:18:19,619 --> 01:18:29,079
it's got like int avec so i Veck would

1491
01:18:24,609 --> 01:18:34,059
be what we would use so i do think we

1492
01:18:29,079 --> 01:18:38,579
could write i do think we could we we

1493
01:18:34,060 --> 01:18:38,580
could use an Isaac here so I could say

1494
01:18:40,649 --> 01:18:48,879
what is this hi Vic 3 I could say I Vic

1495
01:18:45,189 --> 01:18:56,138
3 and I could say that I want it to be

1496
01:18:48,880 --> 01:19:01,719
like you know voxel X voxel why voxel Z

1497
01:18:56,139 --> 01:19:03,279
or something like this right and then I

1498
01:19:01,719 --> 01:19:04,329
just passed that same log value because

1499
01:19:03,279 --> 01:19:07,090
we you know we don't have multiple

1500
01:19:04,329 --> 01:19:08,979
levels of detail so in theory I can do

1501
01:19:07,090 --> 01:19:12,550
something like this and then I can get

1502
01:19:08,979 --> 01:19:17,589
all of the all of the values out of the

1503
01:19:12,550 --> 01:19:19,750
voxel that I need for blending now of

1504
01:19:17,590 --> 01:19:21,190
course like I said in the voxel I don't

1505
01:19:19,750 --> 01:19:23,439
know like the way that we're actually

1506
01:19:21,189 --> 01:19:26,738
doing this these are probably encoded

1507
01:19:23,439 --> 01:19:30,129
backwards ways you know XY and z so it

1508
01:19:26,738 --> 01:19:32,109
probably would look like this but again

1509
01:19:30,130 --> 01:19:34,090
this is just I don't even know I don't

1510
01:19:32,109 --> 01:19:37,779
have any basis not

1511
01:19:34,090 --> 01:19:43,289
a GPU person I have no idea what the

1512
01:19:37,779 --> 01:19:43,289
more reasonable thing would be here oops

1513
01:19:48,659 --> 01:19:52,199
what happened here

1514
01:20:04,550 --> 01:20:08,719
what did we how did I mess this up so

1515
01:20:07,319 --> 01:20:11,988
badly

1516
01:20:08,719 --> 01:20:13,550
we've got like an extra two in there

1517
01:20:11,988 --> 01:20:21,899
that was weird

1518
01:20:13,550 --> 01:20:23,699
all right anyway so I don't know that

1519
01:20:21,899 --> 01:20:27,138
would be what it would be if we actually

1520
01:20:23,698 --> 01:20:29,039
had the voxel going this way around

1521
01:20:27,139 --> 01:20:31,500
because of course the indices are

1522
01:20:29,039 --> 01:20:32,698
usually switched inverted from how its

1523
01:20:31,500 --> 01:20:33,060
section stored in memory don't ask me

1524
01:20:32,698 --> 01:20:34,829
why

1525
01:20:33,060 --> 01:20:37,920
well I guess I know why because usually

1526
01:20:34,829 --> 01:20:39,300
in bitmaps you go in X runs in the old

1527
01:20:37,920 --> 01:20:42,658
days so that's why that convention

1528
01:20:39,300 --> 01:20:44,159
developed but so if we were to do a

1529
01:20:42,658 --> 01:20:50,329
textile fetch here we would know what we

1530
01:20:44,158 --> 01:20:55,379
need we need a Vox X a Vox Y and a Vox Z

1531
01:20:50,329 --> 01:20:57,988
and we also need to compute which side

1532
01:20:55,380 --> 01:21:00,000
we're looking out on so basically we're

1533
01:20:57,988 --> 01:21:03,269
computing where we are in the voxel from

1534
01:21:00,000 --> 01:21:10,279
P and which side of the light we want

1535
01:21:03,270 --> 01:21:10,280
with via N and it's pretty easy to know

1536
01:21:14,000 --> 01:21:19,198
which side we want based on the world

1537
01:21:17,010 --> 01:21:21,420
end but the tricky thing is I don't know

1538
01:21:19,198 --> 01:21:26,698
what the most efficient way to do that

1539
01:21:21,420 --> 01:21:29,539
is in OpenGL and what we want to do is

1540
01:21:26,698 --> 01:21:32,519
take whatever the maximum component is

1541
01:21:29,539 --> 01:21:35,868
and then whether or not it was positive

1542
01:21:32,520 --> 01:21:40,949
or negative right and so I don't know

1543
01:21:35,868 --> 01:21:42,719
what they've got in here like you know

1544
01:21:40,948 --> 01:21:45,210
you can see some things they have that

1545
01:21:42,719 --> 01:21:47,670
would be relevant there for doing this

1546
01:21:45,210 --> 01:21:51,118
especially because this is a kind of

1547
01:21:47,670 --> 01:21:55,529
thing that they need for doing cube map

1548
01:21:51,118 --> 01:21:56,460
lookups as well right and so I don't

1549
01:21:55,529 --> 01:21:58,800
know if there's anything in here that

1550
01:21:56,460 --> 01:22:00,179
can help us with that I'm not seeing

1551
01:21:58,800 --> 01:22:02,429
anything so we may have to just do it

1552
01:22:00,179 --> 01:22:05,550
completely manually which is too bad

1553
01:22:02,429 --> 01:22:08,039
right because it's it takes a while to

1554
01:22:05,550 --> 01:22:10,139
it takes us several instructions to do

1555
01:22:08,039 --> 01:22:11,579
and so I don't actually know if there's

1556
01:22:10,139 --> 01:22:13,400
maybe something that they had in here

1557
01:22:11,579 --> 01:22:16,529
that would have been an easier way of

1558
01:22:13,399 --> 01:22:17,299
producing that integer but I don't see

1559
01:22:16,529 --> 01:22:19,158
it right

1560
01:22:17,300 --> 01:22:21,170
like I'm just all I see is normal

1561
01:22:19,158 --> 01:22:22,939
function normal like regular functions

1562
01:22:21,170 --> 01:22:25,279
shouldn't say normal that's a little

1563
01:22:22,939 --> 01:22:30,549
confusing all I see is regular functions

1564
01:22:25,279 --> 01:22:30,550
in here I don't really see anything

1565
01:22:43,579 --> 01:22:49,729
yeah so I don't see anything there so I

1566
01:22:48,170 --> 01:22:52,279
might just be missing it and someone in

1567
01:22:49,729 --> 01:22:53,869
the chat if there's a GPU person on the

1568
01:22:52,279 --> 01:22:56,779
chat maybe they can fill us in if there

1569
01:22:53,869 --> 01:22:59,210
is a better way to do that but basically

1570
01:22:56,779 --> 01:23:00,920
what we need to do here is compare a

1571
01:22:59,210 --> 01:23:04,550
bunch of values and pick out which one

1572
01:23:00,920 --> 01:23:06,500
is the highest value and I'm not again

1573
01:23:04,550 --> 01:23:09,890
like that's why I say I'm not sure what

1574
01:23:06,500 --> 01:23:14,300
the best way to have it I'm not sure

1575
01:23:09,890 --> 01:23:15,770
what the right way is to to get the

1576
01:23:14,300 --> 01:23:21,940
graphs card to do that series of

1577
01:23:15,770 --> 01:23:21,940
operations but basically it's like okay

1578
01:23:25,060 --> 01:23:33,200
we just want to know whether or not we

1579
01:23:29,109 --> 01:23:37,130
want the sign to be positive or negative

1580
01:23:33,199 --> 01:23:40,639
and whether or not we were larger on X Y

1581
01:23:37,130 --> 01:23:43,489
or Z so the first thing we could do is

1582
01:23:40,640 --> 01:23:50,360
say well alright the result is going to

1583
01:23:43,489 --> 01:23:53,659
be the sign of the X component right and

1584
01:23:50,359 --> 01:23:56,149
so when we can or I guess it's even

1585
01:23:53,659 --> 01:23:58,220
easier than that it's just the

1586
01:23:56,149 --> 01:23:58,879
comparison of whether or not it's less

1587
01:23:58,220 --> 01:24:02,600
than zero

1588
01:23:58,880 --> 01:24:13,310
I think sign yeah I don't actually want

1589
01:24:02,600 --> 01:24:17,210
that so we just want like this we just

1590
01:24:13,310 --> 01:24:18,380
want something like this right and I

1591
01:24:17,210 --> 01:24:20,000
don't know to what extent I can even

1592
01:24:18,380 --> 01:24:22,069
write question mark syntax they might

1593
01:24:20,000 --> 01:24:27,159
not like that let me see if they have a

1594
01:24:22,069 --> 01:24:27,159
ternary operator in here yeah they do

1595
01:24:28,899 --> 01:24:32,689
because I think that's what well I don't

1596
01:24:32,029 --> 01:24:35,920
know if that's what they're actually

1597
01:24:32,689 --> 01:24:35,919
trying to say with that but

1598
01:24:41,399 --> 01:24:48,769
particular geocell integer from normal

1599
01:24:46,170 --> 01:24:48,770
direction

1600
01:25:00,729 --> 01:25:06,019
yeah I'm not sure I'm not sure anyway so

1601
01:25:05,118 --> 01:25:07,098
if we take a look at what's going on

1602
01:25:06,019 --> 01:25:09,260
here I'm gonna write it out really

1603
01:25:07,099 --> 01:25:12,319
poorly first and then we'll try to work

1604
01:25:09,260 --> 01:25:14,179
on it from there so then what I would

1605
01:25:12,319 --> 01:25:15,259
need to do is in fact maybe I just do

1606
01:25:14,179 --> 01:25:16,819
with if so that we don't have any

1607
01:25:15,260 --> 01:25:18,229
surprises here it doesn't really matter

1608
01:25:16,819 --> 01:25:20,478
it's not gonna be faster one way or the

1609
01:25:18,229 --> 01:25:24,649
other so basically what we would do is

1610
01:25:20,479 --> 01:25:28,280
say look it's zero and we'll just assume

1611
01:25:24,649 --> 01:25:31,729
it's zero if world and X oh and also I

1612
01:25:28,279 --> 01:25:35,389
should just use this convention that we

1613
01:25:31,729 --> 01:25:40,099
introduced already west east south north

1614
01:25:35,389 --> 01:25:43,038
up down right so here are the ways that

1615
01:25:40,099 --> 01:25:45,260
we want to do this it's zero positive I

1616
01:25:43,038 --> 01:25:48,288
start zero negative zero positive so

1617
01:25:45,260 --> 01:25:51,889
that's like X negative x positive so

1618
01:25:48,288 --> 01:25:54,198
basically I'd say like look we're going

1619
01:25:51,889 --> 01:25:57,618
to assume that's X negative if X is

1620
01:25:54,198 --> 01:26:01,488
greater than zero then we'll assume that

1621
01:25:57,618 --> 01:26:06,319
it's X positive right then we'll do look

1622
01:26:01,488 --> 01:26:09,018
if the Y component is greater than the X

1623
01:26:06,319 --> 01:26:13,398
component then it's actually pointing

1624
01:26:09,019 --> 01:26:16,699
more in that direction right so then

1625
01:26:13,399 --> 01:26:19,128
what we want to do is say okay then we

1626
01:26:16,698 --> 01:26:23,438
would say if we'll then I guess we

1627
01:26:19,128 --> 01:26:26,198
should say if the absolute value right I

1628
01:26:23,439 --> 01:26:36,229
have to say F ABS in G us all by the way

1629
01:26:26,198 --> 01:26:40,518
and actually no nope so then we would

1630
01:26:36,229 --> 01:26:42,590
say look if the magnitude of the normal

1631
01:26:40,519 --> 01:26:43,998
and y direction is bigger than the X

1632
01:26:42,590 --> 01:26:48,679
then actually we're going to look into

1633
01:26:43,998 --> 01:26:52,248
that cube instead so then we just need

1634
01:26:48,679 --> 01:26:53,899
to know which direction is you know what

1635
01:26:52,248 --> 01:26:56,738
I could do to I could probably make this

1636
01:26:53,899 --> 01:27:03,499
a little bit easier on myself by just

1637
01:26:56,738 --> 01:27:05,718
that I don't bother so if the world n is

1638
01:27:03,498 --> 01:27:07,908
greater than zero

1639
01:27:05,719 --> 01:27:10,219
you know I will I will oh my good this

1640
01:27:07,908 --> 01:27:12,078
way so I'm going to also track in

1641
01:27:10,219 --> 01:27:13,170
addition to my side i I'm also going to

1642
01:27:12,078 --> 01:27:16,939
attract a float

1643
01:27:13,170 --> 01:27:23,279
which is the max magnitude right or

1644
01:27:16,939 --> 01:27:24,928
largest component and so what I'm gonna

1645
01:27:23,279 --> 01:27:32,130
do here is say all right the maximum

1646
01:27:24,929 --> 01:27:44,819
component is X right and then what I can

1647
01:27:32,130 --> 01:27:49,920
do is just say well if the max component

1648
01:27:44,819 --> 01:27:54,389
is less than Y then I'm going to set the

1649
01:27:49,920 --> 01:27:58,859
max component to be equal to Y and set

1650
01:27:54,389 --> 01:28:00,659
the side-eye equal to 2 right then I'm

1651
01:27:58,859 --> 01:28:04,769
gonna say if the absolute value of the

1652
01:28:00,658 --> 01:28:10,879
mass component is less than Z then I'm

1653
01:28:04,770 --> 01:28:10,880
going to set the max impotant to Z and

1654
01:28:11,000 --> 01:28:18,479
set the side-eye equal to 4 right at

1655
01:28:16,050 --> 01:28:20,579
that point I now know that the max

1656
01:28:18,479 --> 01:28:22,888
component is equal to whatever value was

1657
01:28:20,579 --> 01:28:25,260
largest and I also know that the

1658
01:28:22,889 --> 01:28:27,840
side-eye is set to 0 2 or 4 to tell me

1659
01:28:25,260 --> 01:28:31,380
which axis is actually the larger one so

1660
01:28:27,840 --> 01:28:38,969
then I can just do if the max component

1661
01:28:31,380 --> 01:28:43,949
is greater than 0 then add 1 to it now I

1662
01:28:38,969 --> 01:28:50,158
have a way to distribute that value that

1663
01:28:43,948 --> 01:28:51,539
side value very quickly right and so if

1664
01:28:50,158 --> 01:28:53,960
I write this a little more compactly

1665
01:28:51,539 --> 01:28:59,189
here just so you can kind of see right

1666
01:28:53,960 --> 01:29:01,439
what's going on it's really just not

1667
01:28:59,189 --> 01:29:05,448
that many operations and these will just

1668
01:29:01,439 --> 01:29:05,448
be selection operations right

1669
01:29:07,170 --> 01:29:13,449
so it's not that bad to select a side I

1670
01:29:10,560 --> 01:29:16,300
that's not too bad and that will allow

1671
01:29:13,448 --> 01:29:18,158
us to look up into our texture so then

1672
01:29:16,300 --> 01:29:20,199
we just get down to the world position

1673
01:29:18,158 --> 01:29:22,299
here and the problem we're gonna have

1674
01:29:20,198 --> 01:29:29,529
here is we need to pass down a bunch of

1675
01:29:22,300 --> 01:29:32,380
crap we we don't really have a choice we

1676
01:29:29,529 --> 01:29:35,229
need to have a quick way of mapping our

1677
01:29:32,380 --> 01:29:37,539
world P into our voxel so we're going to

1678
01:29:35,229 --> 01:29:41,169
have to specify some constants here that

1679
01:29:37,539 --> 01:29:44,050
have to do with the voxel right and what

1680
01:29:41,170 --> 01:29:46,899
we want to do there is say okay the way

1681
01:29:44,050 --> 01:29:50,560
that the voxel is going to work is that

1682
01:29:46,899 --> 01:29:55,029
our world P we're going to subtract like

1683
01:29:50,560 --> 01:29:59,850
the voxel mid-corner right and this is

1684
01:29:55,029 --> 01:30:04,539
gonna be like voxel relative P right

1685
01:29:59,850 --> 01:30:07,929
once we have the voxel relative P we

1686
01:30:04,539 --> 01:30:13,029
then need to scale it so that it ends up

1687
01:30:07,929 --> 01:30:20,100
being integer values along the voxel

1688
01:30:13,029 --> 01:30:25,029
right so we then do a box index P right

1689
01:30:20,100 --> 01:30:28,360
that's gonna be the Vox rail P times the

1690
01:30:25,029 --> 01:30:31,000
in seldom write the the inverse voxel

1691
01:30:28,359 --> 01:30:33,279
Cell dimension that scales us to the

1692
01:30:31,000 --> 01:30:36,399
size of the voxel integers are steps of

1693
01:30:33,279 --> 01:30:39,429
one voxel along and then we can finally

1694
01:30:36,399 --> 01:30:47,879
extract all the values we actually need

1695
01:30:39,429 --> 01:30:53,069
so we do need floats for T X py and PZ

1696
01:30:47,880 --> 01:30:55,690
and we then you know we also need

1697
01:30:53,069 --> 01:31:01,329
integer values to be floored out from

1698
01:30:55,689 --> 01:31:05,138
those indices right now I don't know how

1699
01:31:01,329 --> 01:31:07,420
to get an IV out of a float that's like

1700
01:31:05,139 --> 01:31:09,929
a cast operation basically and OpenGL is

1701
01:31:07,420 --> 01:31:12,219
always a pain in the butt for casting so

1702
01:31:09,929 --> 01:31:14,829
while I would normally like a function

1703
01:31:12,219 --> 01:31:18,550
that's like floor - you know floor to an

1704
01:31:14,829 --> 01:31:20,189
integer right it doesn't actually have

1705
01:31:18,550 --> 01:31:23,970
that so we have two floor

1706
01:31:20,189 --> 01:31:26,369
and then convert right so what we're

1707
01:31:23,970 --> 01:31:28,800
gonna do here is we have the floor and

1708
01:31:26,369 --> 01:31:31,050
then I think that's the only syntax I

1709
01:31:28,800 --> 01:31:33,300
think I don't remember how you do

1710
01:31:31,050 --> 01:31:36,000
casting syntax in OpenGL but whatever it

1711
01:31:33,300 --> 01:31:39,810
was it was stupid so I think it has to

1712
01:31:36,000 --> 01:31:41,880
look like that and so what I want to do

1713
01:31:39,810 --> 01:31:47,520
now is just say look extract these

1714
01:31:41,880 --> 01:31:49,770
values out as integers and while you're

1715
01:31:47,520 --> 01:31:53,820
at it I also need the fractional value

1716
01:31:49,770 --> 01:31:57,510
right so I need I need this right I also

1717
01:31:53,819 --> 01:32:00,119
need the fractional value because I need

1718
01:31:57,510 --> 01:32:00,480
to use that for blending you know what I

1719
01:32:00,119 --> 01:32:05,760
mean

1720
01:32:00,479 --> 01:32:07,379
so once we compute this I once we

1721
01:32:05,760 --> 01:32:11,159
compute the lookup for the textures I

1722
01:32:07,380 --> 01:32:12,779
also need you to compute the fractional

1723
01:32:11,159 --> 01:32:14,000
blend values because those are the

1724
01:32:12,779 --> 01:32:15,210
things that I'm going to use down here

1725
01:32:14,000 --> 01:32:19,859
right

1726
01:32:15,210 --> 01:32:23,819
I think that's literally the entire

1727
01:32:19,859 --> 01:32:27,329
thing right that produces the entire

1728
01:32:23,819 --> 01:32:30,179
lighting lookup now at the end we

1729
01:32:27,329 --> 01:32:34,729
probably still want to do some work on

1730
01:32:30,180 --> 01:32:40,170
the actual lighting itself right

1731
01:32:34,729 --> 01:32:41,399
possibly I don't actually know but if

1732
01:32:40,170 --> 01:32:43,310
you look at what has to happen there

1733
01:32:41,399 --> 01:32:46,489
that's that's basically what we're doing

1734
01:32:43,310 --> 01:32:49,740
now the thing that's kind of nasty is

1735
01:32:46,489 --> 01:32:51,719
you know I don't know if we want to have

1736
01:32:49,739 --> 01:32:53,849
to do a three-way blend here to

1737
01:32:51,720 --> 01:32:56,030
reconstruct as the normal kind of spins

1738
01:32:53,850 --> 01:32:56,030
around

1739
01:32:58,069 --> 01:33:04,159
that's if we want things that are like

1740
01:33:00,390 --> 01:33:06,030
kind of rounded and whatnot

1741
01:33:04,159 --> 01:33:07,800
but I don't know if we ever actually

1742
01:33:06,029 --> 01:33:10,109
need that right we only have flat

1743
01:33:07,800 --> 01:33:13,230
sprites we don't have normal maps for

1744
01:33:10,109 --> 01:33:16,380
them maybe we do want that rounded value

1745
01:33:13,229 --> 01:33:19,500
you know or maybe we just don't care and

1746
01:33:16,380 --> 01:33:22,230
it's hard to say but if you look at what

1747
01:33:19,500 --> 01:33:26,220
would have to happen if we were going to

1748
01:33:22,229 --> 01:33:33,778
get a rounded value then again we end up

1749
01:33:26,220 --> 01:33:38,429
with we we end up with more issues

1750
01:33:33,779 --> 01:33:39,839
right so what I might do is say we

1751
01:33:38,429 --> 01:33:43,439
probably want to be able to try stuff

1752
01:33:39,838 --> 01:33:52,618
like that so I suspect what I will want

1753
01:33:43,439 --> 01:33:56,039
to do here is something like this if I

1754
01:33:52,618 --> 01:34:01,889
go in and I have a fetch you know call

1755
01:33:56,038 --> 01:34:13,679
and I can basically do the blend to get

1756
01:34:01,889 --> 01:34:16,349
the light data out so here so I can make

1757
01:34:13,679 --> 01:34:22,399
a fetch call the fetch call just takes

1758
01:34:16,349 --> 01:34:22,399
you know what you were trying to fetch

1759
01:34:23,719 --> 01:34:29,698
that would allow us at any time to do

1760
01:34:27,748 --> 01:34:34,378
the textile fetch of the actually you

1761
01:34:29,698 --> 01:34:40,348
know what this can actually be reused to

1762
01:34:34,378 --> 01:34:41,788
write it's only actually that be nice if

1763
01:34:40,349 --> 01:34:43,048
there's a way to bundle that together

1764
01:34:41,788 --> 01:34:46,108
but I don't know if I want to go to that

1765
01:34:43,048 --> 01:34:47,488
far so actually I take it back we

1766
01:34:46,109 --> 01:34:50,119
probably want saying that looks more

1767
01:34:47,488 --> 01:34:50,118
like this

1768
01:34:55,349 --> 01:34:59,550
and what you want to do here is be able

1769
01:34:57,238 --> 01:35:01,198
to pass all of these indices which is

1770
01:34:59,550 --> 01:35:03,239
kind of a pain in the butt right but you

1771
01:35:01,198 --> 01:35:06,118
want to reuse them because you don't

1772
01:35:03,238 --> 01:35:08,848
actually want to do the fetching again

1773
01:35:06,118 --> 01:35:15,029
to look up what all the lights actually

1774
01:35:08,849 --> 01:35:16,770
are here I mean and so yeah at that

1775
01:35:15,029 --> 01:35:20,158
point it's kind of a bit of a nasty

1776
01:35:16,770 --> 01:35:21,560
situation I don't know if maybe yeah I

1777
01:35:20,158 --> 01:35:24,089
don't have a lot of opinions about that

1778
01:35:21,560 --> 01:35:27,380
so at that point you want to be able to

1779
01:35:24,090 --> 01:35:30,328
fetch more than one side value from your

1780
01:35:27,380 --> 01:35:33,029
you know from your text from your

1781
01:35:30,328 --> 01:35:35,340
textile fetches and the problem is you

1782
01:35:33,029 --> 01:35:39,078
kind of need all of these right so you

1783
01:35:35,340 --> 01:35:39,078
need you need to be able to be like this

1784
01:35:50,899 --> 01:36:11,759
and actually maybe you just want to do

1785
01:35:54,899 --> 01:36:14,670
this you know I'm saying so I don't

1786
01:36:11,760 --> 01:36:16,829
actually know at that point you know how

1787
01:36:14,670 --> 01:36:19,889
ugly this becomes you can see why I

1788
01:36:16,828 --> 01:36:25,679
really would prefer to not have to fetch

1789
01:36:19,889 --> 01:36:30,510
a lot of information and I also don't

1790
01:36:25,679 --> 01:36:32,880
know if the cube map this is again where

1791
01:36:30,510 --> 01:36:35,090
the cube map stuff comes in if you

1792
01:36:32,880 --> 01:36:38,069
imagine something like a cube map array

1793
01:36:35,090 --> 01:36:41,219
so you said we have an array of cube

1794
01:36:38,069 --> 01:36:43,319
maps and we're going to sample the cube

1795
01:36:41,219 --> 01:36:45,599
map using this normal and here's the

1796
01:36:43,319 --> 01:36:48,630
array index that's exactly what we're

1797
01:36:45,599 --> 01:36:50,940
trying to do so if there's accelerated

1798
01:36:48,630 --> 01:36:52,920
Hardware anywhere to do that we would

1799
01:36:50,939 --> 01:36:57,089
want to take advantage of it and that's

1800
01:36:52,920 --> 01:37:01,310
why I'm a little hazy because I just

1801
01:36:57,090 --> 01:37:01,310
don't know to what extent that exists

1802
01:37:27,849 --> 01:37:31,319
it sounds great doesn't it

1803
01:37:35,788 --> 01:37:41,368
ah man that's just slightly different

1804
01:37:39,510 --> 01:37:43,980
from what we picked we picked negative

1805
01:37:41,368 --> 01:37:46,618
than positive and they pick positive and

1806
01:37:43,979 --> 01:37:50,268
negative we should probably switch to

1807
01:37:46,618 --> 01:37:50,268
using that same scheme but

1808
01:38:09,408 --> 01:38:17,469
so I'm gonna go ahead and say you know

1809
01:38:12,010 --> 01:38:17,469
honestly maybe we just should use this

1810
01:38:18,579 --> 01:38:25,448
who supports this let's find out let's

1811
01:38:25,630 --> 01:38:46,579
see who can do this magic magic thing

1812
01:38:39,979 --> 01:38:48,859
tell me it's just me like where are the

1813
01:38:46,579 --> 01:38:53,439
ads you know how Google used to have a

1814
01:38:48,859 --> 01:38:56,119
lot of ads on here where do the ads go

1815
01:38:53,439 --> 01:38:58,059
I'm getting nervous because if I don't

1816
01:38:56,119 --> 01:39:00,050
see ads I'm wondering what's happening

1817
01:38:58,060 --> 01:39:01,460
because I know that's how they make

1818
01:39:00,050 --> 01:39:02,989
money and if they're not showing it to

1819
01:39:01,460 --> 01:39:07,039
me I think they must be doing something

1820
01:39:02,988 --> 01:39:14,439
else bad like like my level of trust is

1821
01:39:07,039 --> 01:39:14,439
low but how bad is this somebody tell me

1822
01:39:20,609 --> 01:39:23,750
[Music]

1823
01:39:33,609 --> 01:39:40,869
I mean it seems pretty safe

1824
01:39:37,029 --> 01:39:45,448
I mean if Intel HD graphics is doing it

1825
01:39:40,868 --> 01:39:45,448
can't be that crazy you know I'm saying

1826
01:39:45,599 --> 01:39:49,288
76% pretty high

1827
01:39:58,920 --> 01:40:04,020
I mean we're already you know

1828
01:40:01,380 --> 01:40:06,029
multisample is kind of just assumed to

1829
01:40:04,020 --> 01:40:08,430
be possible on anything you were gonna

1830
01:40:06,029 --> 01:40:15,269
run a game on and that's only at 78%

1831
01:40:08,430 --> 01:40:18,840
right so you know it seems like we're in

1832
01:40:15,270 --> 01:40:21,240
pretty good shape there

1833
01:40:18,840 --> 01:40:23,810
let's see let's what's something else

1834
01:40:21,239 --> 01:40:23,809
that's really

1835
01:40:23,960 --> 01:40:35,909
dirigir at this point yeah so you know

1836
01:40:28,949 --> 01:40:39,779
if if sRGB is running at 83% that seems

1837
01:40:35,909 --> 01:40:49,409
pretty straightforward that you know the

1838
01:40:39,779 --> 01:40:50,789
cubemap array is just kind of there so

1839
01:40:49,409 --> 01:40:53,909
it kind of feels like maybe that's what

1840
01:40:50,789 --> 01:41:00,449
we want it would be lot simpler and then

1841
01:40:53,909 --> 01:41:02,309
we get the the sampling so I don't know

1842
01:41:00,449 --> 01:41:05,579
if it's if it would blend at that point

1843
01:41:02,310 --> 01:41:08,940
though but we could make it blend by

1844
01:41:05,579 --> 01:41:15,390
copying the values into so you know if

1845
01:41:08,939 --> 01:41:18,059
you imagine we actually make a 3x3 sort

1846
01:41:15,390 --> 01:41:21,780
of so we make the size of the texture 3

1847
01:41:18,060 --> 01:41:29,430
by 3 and then we stuff the values for

1848
01:41:21,779 --> 01:41:32,329
each face of the cube in there maybe

1849
01:41:29,430 --> 01:41:32,329
that's the best idea

1850
01:41:40,590 --> 01:41:45,690
I mean I want to say that's just what we

1851
01:41:43,829 --> 01:41:47,970
should do because then we're on the

1852
01:41:45,689 --> 01:41:56,989
faster path for sampling cube Maps I

1853
01:41:47,970 --> 01:41:56,990
think I hope

1854
01:41:59,939 --> 01:42:04,948
and all of the graphics cards will know

1855
01:42:02,159 --> 01:42:08,639
what we're doing you know if I slam this

1856
01:42:04,948 --> 01:42:11,899
crap down there it's gonna have no idea

1857
01:42:08,640 --> 01:42:11,900
what's going on right

1858
01:42:19,510 --> 01:42:27,530
so I don't know so that seems like maybe

1859
01:42:25,039 --> 01:42:31,420
something I do want to look into maybe I

1860
01:42:27,529 --> 01:42:35,439
want to do something like this where we

1861
01:42:31,420 --> 01:42:38,029
look up what the light indices are right

1862
01:42:35,439 --> 01:42:41,389
and then when we actually go get the

1863
01:42:38,029 --> 01:42:43,699
lighting values that's just gonna be one

1864
01:42:41,390 --> 01:42:45,200
thing and we're gonna bake the blend in

1865
01:42:43,699 --> 01:42:49,069
there

1866
01:42:45,199 --> 01:42:54,970
and that seems like possibly the right

1867
01:42:49,069 --> 01:42:58,639
solution I'm gonna say that that's

1868
01:42:54,970 --> 01:43:00,560
probably good because again I'm pretty

1869
01:42:58,640 --> 01:43:02,960
worried about the expense of all this

1870
01:43:00,560 --> 01:43:06,380
and I don't really want to be doing

1871
01:43:02,960 --> 01:43:08,239
something super weird so if I can

1872
01:43:06,380 --> 01:43:10,550
structure this as a thing that just

1873
01:43:08,239 --> 01:43:12,159
samples cube maps then that seems like

1874
01:43:10,550 --> 01:43:14,840
we're not really doing anything weird

1875
01:43:12,159 --> 01:43:17,809
and we'll be in good shape

1876
01:43:14,840 --> 01:43:20,329
so that means side-eye doesn't actually

1877
01:43:17,810 --> 01:43:21,650
have to be computed right so this can go

1878
01:43:20,329 --> 01:43:23,510
away

1879
01:43:21,649 --> 01:43:27,199
and what we would really be doing is

1880
01:43:23,510 --> 01:43:35,270
rather than calling Texel fetch we would

1881
01:43:27,199 --> 01:43:40,579
call there it is

1882
01:43:35,270 --> 01:43:43,620
we would call a sampler cube or a we

1883
01:43:40,579 --> 01:43:46,859
would call that and we just call I think

1884
01:43:43,619 --> 01:43:48,539
the texture function right and then we

1885
01:43:46,859 --> 01:43:51,389
would pass the correct set of values

1886
01:43:48,539 --> 01:43:56,909
there so then you know it's this right

1887
01:43:51,390 --> 01:44:03,960
and so when we call the it would be G

1888
01:43:56,909 --> 01:44:07,519
sampler Q well it'd be sampler we would

1889
01:44:03,960 --> 01:44:07,520
want simper cube array right

1890
01:44:15,279 --> 01:44:19,229
is that only in four

1891
01:44:33,800 --> 01:44:39,739
let's take a look at the floor Wow it's

1892
01:44:36,659 --> 01:44:39,739
a bigger car didn't it

1893
01:44:56,689 --> 01:45:01,789
so it clearly says cube array in here

1894
01:44:59,239 --> 01:45:06,859
for just a regular texture call right

1895
01:45:01,789 --> 01:45:08,449
and so I'm because I'm guessing that

1896
01:45:06,859 --> 01:45:11,089
basically like we just wouldn't be

1897
01:45:08,449 --> 01:45:17,569
allowed to do it here because there

1898
01:45:11,090 --> 01:45:21,860
isn't a 3d cube array version at least

1899
01:45:17,569 --> 01:45:23,989
not that I'm seeing so I'm guessing that

1900
01:45:21,859 --> 01:45:29,630
this was something that got added after

1901
01:45:23,989 --> 01:45:32,840
three after up in go3 which is mildly

1902
01:45:29,630 --> 01:45:37,850
annoying but if you look like I don't

1903
01:45:32,840 --> 01:45:44,779
really see any indication that you're

1904
01:45:37,850 --> 01:45:46,280
allowed to do it in actual GL 3 I don't

1905
01:45:44,779 --> 01:45:50,239
know how to tell it we want that

1906
01:45:46,279 --> 01:45:51,889
extension right I'm not sure how to

1907
01:45:50,239 --> 01:45:55,069
actually convince it that that extension

1908
01:45:51,890 --> 01:46:01,610
would be a good idea and that we just

1909
01:45:55,069 --> 01:46:03,949
wanted if it's there right yeah I mean

1910
01:46:01,609 --> 01:46:05,659
you can see it's just not contemplated

1911
01:46:03,949 --> 01:46:07,970
in here right you can have a cube

1912
01:46:05,659 --> 01:46:11,869
sampler but you can't have a cube array

1913
01:46:07,970 --> 01:46:14,260
sampler and that's sort of what we would

1914
01:46:11,869 --> 01:46:14,260
need

1915
01:46:17,539 --> 01:46:24,039
try to think if there's anything other

1916
01:46:19,609 --> 01:46:24,039
anything else fancy

1917
01:46:59,670 --> 01:47:14,310
so I suppose there is another way to

1918
01:47:02,439 --> 01:47:14,309
look at this problem entirely

1919
01:47:19,899 --> 01:47:25,960
and I suppose that maybe we would want

1920
01:47:23,500 --> 01:47:27,550
to and the way that I'm thinking we

1921
01:47:25,960 --> 01:47:28,840
could look at this instead is if we

1922
01:47:27,550 --> 01:47:31,300
thought of the lighting more as a

1923
01:47:28,840 --> 01:47:34,420
texture Atlas where we were actually

1924
01:47:31,300 --> 01:47:37,480
just gonna provide a 2d texture and then

1925
01:47:34,420 --> 01:47:40,239
the value that we pass into the sampler

1926
01:47:37,479 --> 01:47:44,979
just does a bilinear sample on that

1927
01:47:40,239 --> 01:47:47,979
Atlas that actually seems more sane to

1928
01:47:44,979 --> 01:47:49,419
me so bear with me for a second here

1929
01:47:47,979 --> 01:47:51,689
while I explain what I mean by this

1930
01:47:49,420 --> 01:47:54,690
because I realize that's a little bit

1931
01:47:51,689 --> 01:47:54,689
weird

1932
01:48:01,079 --> 01:48:06,689
I really need to get a Milton that has

1933
01:48:03,659 --> 01:48:08,130
this bug fixed that the the the strokes

1934
01:48:06,689 --> 01:48:12,960
look terrible does anyone know what the

1935
01:48:08,130 --> 01:48:14,880
status is of that there was like a

1936
01:48:12,960 --> 01:48:16,050
really bad regression in Milton that

1937
01:48:14,880 --> 01:48:20,909
makes it so that the strokes the

1938
01:48:16,050 --> 01:48:25,579
horrible and I don't know how to undo

1939
01:48:20,909 --> 01:48:25,579
that anyway

1940
01:48:35,199 --> 01:48:42,439
here's all I'm thinking what if we just

1941
01:48:37,850 --> 01:48:51,730
have a giant 2d texture the 2d texture

1942
01:48:42,439 --> 01:48:54,049
is laid out like this it is five high

1943
01:48:51,729 --> 01:48:55,939
it's five texels I mean look at that

1944
01:48:54,050 --> 01:48:58,730
it's horrible now Milton just got

1945
01:48:55,939 --> 01:49:02,179
totally Milton's just totally messed up

1946
01:48:58,729 --> 01:49:04,039
now I should probably try to revert back

1947
01:49:02,180 --> 01:49:10,100
to the old version but it's like really

1948
01:49:04,039 --> 01:49:23,800
bad so it's five high and then it's

1949
01:49:10,100 --> 01:49:27,410
light probe count times three long and

1950
01:49:23,800 --> 01:49:34,600
how its set up is little chunks of three

1951
01:49:27,409 --> 01:49:34,599
by fives right each three by five oh

1952
01:49:37,060 --> 01:49:40,630
wait I can do this

1953
01:49:43,719 --> 01:49:47,219
so each three by five

1954
01:49:55,210 --> 01:50:15,550
is a unwrapped cube now that's a three

1955
01:50:02,810 --> 01:50:25,900
by six alright so if you imagined a cube

1956
01:50:15,550 --> 01:50:29,510
like so and we unwrapped it such that it

1957
01:50:25,899 --> 01:50:30,920
basically unwrapped these four faces

1958
01:50:29,510 --> 01:50:33,199
here I guess now I think about it I

1959
01:50:30,920 --> 01:50:36,949
probably gonna need to be a little bit

1960
01:50:33,199 --> 01:50:39,260
wider than three but so I've got you

1961
01:50:36,949 --> 01:50:41,269
know here here here here so if I twitch

1962
01:50:39,260 --> 01:50:44,510
nobody's face like eh eh you know that's

1963
01:50:41,270 --> 01:50:48,020
B that's C that's D on there then like

1964
01:50:44,510 --> 01:50:52,630
you know E and s or whatever right then

1965
01:50:48,020 --> 01:50:58,640
down here would just be like a right B C

1966
01:50:52,630 --> 01:51:00,980
D and then a again yeah I'm saying and

1967
01:50:58,640 --> 01:51:02,660
maybe this is a little conservative so

1968
01:51:00,979 --> 01:51:11,569
maybe it needs to be more than what I

1969
01:51:02,659 --> 01:51:16,849
said maybe it needs to be like six by

1970
01:51:11,569 --> 01:51:19,189
five might be the right way to do it but

1971
01:51:16,850 --> 01:51:22,100
you get the idea right so it's something

1972
01:51:19,189 --> 01:51:23,929
like this and if you look at where each

1973
01:51:22,100 --> 01:51:26,090
of these faces is then the face is on

1974
01:51:23,930 --> 01:51:28,869
either side of a in this case or like F

1975
01:51:26,090 --> 01:51:28,869
and E right

1976
01:51:29,720 --> 01:51:35,409
and then for B right it's the same it's

1977
01:51:32,869 --> 01:51:35,409
F and E

1978
01:51:41,868 --> 01:51:48,118
and so you can imagine something where

1979
01:51:45,059 --> 01:51:52,019
we can just pick a point and get the

1980
01:51:48,118 --> 01:51:54,328
blend of any face of the cube just by

1981
01:51:52,019 --> 01:51:57,090
doing figuring out where we would need

1982
01:51:54,328 --> 01:51:59,819
to put the point in here

1983
01:51:57,090 --> 01:52:04,010
to properly sample it you know I'm

1984
01:51:59,819 --> 01:52:07,768
saying I think that would actually work

1985
01:52:04,010 --> 01:52:10,769
because no matter where you are in this

1986
01:52:07,769 --> 01:52:12,389
on here you should be able to produce

1987
01:52:10,769 --> 01:52:16,139
the correct blend here

1988
01:52:12,389 --> 01:52:17,940
right and since F and E can't touch each

1989
01:52:16,139 --> 01:52:21,359
other if they don't ever need to blend

1990
01:52:17,939 --> 01:52:23,908
right and every other pair

1991
01:52:21,359 --> 01:52:27,448
I'm sorry every other triple of blending

1992
01:52:23,908 --> 01:52:30,268
it should then should be related if they

1993
01:52:27,448 --> 01:52:33,118
touch each other right so like for

1994
01:52:30,269 --> 01:52:42,030
example I know that if I was to take my

1995
01:52:33,118 --> 01:52:50,788
cube well draw this a little bit better

1996
01:52:42,029 --> 01:52:53,309
here if I was to take my cube and think

1997
01:52:50,788 --> 01:52:58,819
about all of the places I could be on it

1998
01:52:53,309 --> 01:52:58,820
right it basically amounts to this

1999
01:53:05,158 --> 01:53:14,339
it's essentially a the entire cube has

2000
01:53:12,029 --> 01:53:17,188
eight quadrants right they mapped to the

2001
01:53:14,340 --> 01:53:23,639
sr8 octants they mapped to each vertex

2002
01:53:17,189 --> 01:53:27,329
so each of the whatever normal direction

2003
01:53:23,639 --> 01:53:31,199
you're pointing you only really have to

2004
01:53:27,328 --> 01:53:38,518
map between the outbound values of three

2005
01:53:31,198 --> 01:53:41,848
of the faces right and if you look at

2006
01:53:38,519 --> 01:53:44,070
what each of these are right it's going

2007
01:53:41,849 --> 01:53:45,418
to in and if I number them the same way

2008
01:53:44,069 --> 01:53:46,858
that I numbered them they're right so

2009
01:53:45,418 --> 01:53:49,738
we're just looking at the vertices

2010
01:53:46,859 --> 01:53:53,099
there's only eight places I can be on

2011
01:53:49,738 --> 01:53:55,768
the cube right and those eight places

2012
01:53:53,099 --> 01:53:59,998
tell me what my blends are so let's just

2013
01:53:55,769 --> 01:54:02,579
walk around them right so there's a EB

2014
01:53:59,998 --> 01:54:06,858
as one of them and in fact I'll just

2015
01:54:02,578 --> 01:54:23,058
write them over here there's a a B is 1

2016
01:54:06,859 --> 01:54:36,959
AE D is another Dec that's DCF that's

2017
01:54:23,059 --> 01:54:42,359
BFC that's be a F that is DFA and that

2018
01:54:36,958 --> 01:54:44,849
is BCE and that's all the blends that I

2019
01:54:42,359 --> 01:54:48,510
could possibly want to do so can I get

2020
01:54:44,849 --> 01:54:51,168
an AE B yes it's right there

2021
01:54:48,510 --> 01:54:55,949
right so that's fine can I get an AED

2022
01:54:51,168 --> 01:54:59,368
out of it yes that's right there can I

2023
01:54:55,948 --> 01:55:04,078
get a Dec out of it yes that's right

2024
01:54:59,368 --> 01:55:07,198
there can I get a DCF out of it yes

2025
01:55:04,078 --> 01:55:08,208
that's right there kind of get a BFC out

2026
01:55:07,198 --> 01:55:11,848
of it

2027
01:55:08,208 --> 01:55:16,618
yes that's right there can I get a baf

2028
01:55:11,849 --> 01:55:19,819
out of it that's right there can I get a

2029
01:55:16,618 --> 01:55:19,819
DFA out of it

2030
01:55:22,399 --> 01:55:30,649
that's right there can I get a BCE out

2031
01:55:26,130 --> 01:55:35,220
of it yeah that's right there right so

2032
01:55:30,649 --> 01:55:38,909
it does seem possible to do a blend that

2033
01:55:35,220 --> 01:55:41,100
would create what we want here and if

2034
01:55:38,909 --> 01:55:43,170
you always made sure you were inside the

2035
01:55:41,100 --> 01:55:47,490
triangles you would get the right blends

2036
01:55:43,170 --> 01:55:49,470
out now I don't really know how possible

2037
01:55:47,489 --> 01:55:51,689
that is because if you think about what

2038
01:55:49,470 --> 01:55:55,800
should have happened when you were up in

2039
01:55:51,689 --> 01:56:00,139
here right when you're in like you know

2040
01:55:55,800 --> 01:56:00,140
one of these sections of this cube

2041
01:56:00,260 --> 01:56:06,810
you're trying to smoothly blend between

2042
01:56:03,449 --> 01:56:08,369
the lighting that's coming in at eff the

2043
01:56:06,810 --> 01:56:12,240
lighting that's coming in at D and the

2044
01:56:08,369 --> 01:56:14,159
lighting that's coming in at a and it's

2045
01:56:12,239 --> 01:56:17,099
like not I'm trying to think of what

2046
01:56:14,159 --> 01:56:21,170
kind of blend that really is right it's

2047
01:56:17,100 --> 01:56:25,789
like a triangulated blend but I don't I

2048
01:56:21,170 --> 01:56:28,680
don't have a handle on exactly how right

2049
01:56:25,789 --> 01:56:33,510
but it's an interesting thing so if you

2050
01:56:28,680 --> 01:56:35,190
were to imagine I'm creating this kind

2051
01:56:33,510 --> 01:56:38,340
of a layout then what you could do is

2052
01:56:35,189 --> 01:56:40,229
take your input Q values translate them

2053
01:56:38,340 --> 01:56:42,000
into a UV look up into just this one

2054
01:56:40,229 --> 01:56:45,509
texture do the texture look up and

2055
01:56:42,000 --> 01:56:50,520
that's the lighting right that's the

2056
01:56:45,510 --> 01:56:53,030
lighting period so you only do that just

2057
01:56:50,520 --> 01:56:53,030
one time

2058
01:56:58,680 --> 01:57:03,539
so that would get the blend

2059
01:57:01,109 --> 01:57:05,799
automatically the directional blend

2060
01:57:03,539 --> 01:57:11,829
automatically if we wanted to do that I

2061
01:57:05,800 --> 01:57:13,239
just don't know I have to think that

2062
01:57:11,829 --> 01:57:14,859
through but we're out of time for today

2063
01:57:13,239 --> 01:57:16,659
so that's okay

2064
01:57:14,859 --> 01:57:19,210
I'm gonna go ahead and just keep

2065
01:57:16,659 --> 01:57:32,710
lighting disabled for now then so we

2066
01:57:19,210 --> 01:57:34,750
didn't finish yet and yeah we will pick

2067
01:57:32,710 --> 01:57:36,340
this back up next weekend or whenever

2068
01:57:34,750 --> 01:57:37,810
the next schedule I haven't posted the

2069
01:57:36,340 --> 01:57:39,970
schedule yet so whenever the next

2070
01:57:37,810 --> 01:57:42,039
scheduled stream is but I'll leave it in

2071
01:57:39,970 --> 01:57:45,329
a compiling state so we can get back to

2072
01:57:42,039 --> 01:57:45,329
it alright quick questions

2073
01:58:13,488 --> 01:58:17,329
would you want to do a debug Milt in a

2074
01:58:15,289 --> 01:58:19,310
stream not particularly man never looked

2075
01:58:17,329 --> 01:58:21,738
at that codebase before so I feel like

2076
01:58:19,310 --> 01:58:24,410
it's pretty obvious what's going on bug

2077
01:58:21,738 --> 01:58:26,750
wise like because they had an old

2078
01:58:24,409 --> 01:58:28,069
working version and they updated it now

2079
01:58:26,750 --> 01:58:34,250
it's broken so it shouldn't be that hard

2080
01:58:28,069 --> 01:58:37,189
to vent what the bug is right so I'm

2081
01:58:34,250 --> 01:58:39,699
assuming it's pretty simple maybe I'm

2082
01:58:37,189 --> 01:58:39,699
wrong about that

2083
01:59:11,329 --> 01:59:14,409
no questions

2084
01:59:30,158 --> 01:59:43,388
chirp circuit does this still work on XP

2085
01:59:34,139 --> 01:59:44,920
so if you compiled in 32-bit mode we

2086
01:59:43,389 --> 01:59:47,079
might be able to still get it to run on

2087
01:59:44,920 --> 01:59:48,670
XP the problem is we haven't done that

2088
01:59:47,079 --> 01:59:50,559
in a while so there's probably parts of

2089
01:59:48,670 --> 01:59:53,980
the code right now that we'd have like

2090
01:59:50,560 --> 01:59:55,719
casting errors and stuff like that so I

2091
01:59:53,979 --> 01:59:58,089
think you would if you wanted to run it

2092
01:59:55,719 --> 02:00:00,670
on XP you'd have to go clean some stuff

2093
01:59:58,090 --> 02:00:04,770
up first but it probably wouldn't be

2094
02:00:00,670 --> 02:00:04,770
impossible if you wanted it to run on XP

2095
02:00:05,550 --> 02:00:14,310
because remember Windows XP didn't

2096
02:00:09,670 --> 02:00:19,389
really ship a like true 64-bit version

2097
02:00:14,310 --> 02:00:22,090
you know what I mean there was a 64-bit

2098
02:00:19,389 --> 02:00:25,090
version of XP but it's not really quite

2099
02:00:22,090 --> 02:00:28,179
it's not the same as it's not really a

2100
02:00:25,090 --> 02:00:30,010
full 64-bit operating system it's more

2101
02:00:28,179 --> 02:00:34,719
like a 32-bit operating system with

2102
02:00:30,010 --> 02:00:36,070
64-bit extensions you can use and so you

2103
02:00:34,719 --> 02:00:40,270
wouldn't be able to run this on XP

2104
02:00:36,069 --> 02:00:43,569
without first read without first doing

2105
02:00:40,270 --> 02:00:45,840
some 32-bit compiles which requires to

2106
02:00:43,569 --> 02:00:45,840
clean up

2107
02:00:55,770 --> 02:01:03,020
[Music]

2108
02:01:00,488 --> 02:01:06,198
if you had to draw text in Arabic

2109
02:01:03,020 --> 02:01:13,690
Chinese Korean etc in a game how would

2110
02:01:06,198 --> 02:01:20,169
you do text shaping um I don't know so I

2111
02:01:13,689 --> 02:01:23,738
have not done any work with Arabic

2112
02:01:20,170 --> 02:01:29,380
Chinese in in particular I don't think

2113
02:01:23,738 --> 02:01:31,549
really requires a whole lot of special I

2114
02:01:29,380 --> 02:01:33,409
don't get the sense like Chinese

2115
02:01:31,550 --> 02:01:37,130
characters kind of could just be typeset

2116
02:01:33,409 --> 02:01:43,909
normally I think Arabic would be the one

2117
02:01:37,130 --> 02:01:46,190
that would I would think would be more

2118
02:01:43,909 --> 02:01:49,639
interesting in terms of like complexity

2119
02:01:46,189 --> 02:01:52,669
but I could be wrong anyway I have not

2120
02:01:49,640 --> 02:01:57,500
worked on that myself so I don't have

2121
02:01:52,670 --> 02:02:01,789
any strong opinions about it I I would

2122
02:01:57,500 --> 02:02:05,770
want to at least ship one game in Arabic

2123
02:02:01,789 --> 02:02:05,769
first before I had an opinion about it

2124
02:02:12,159 --> 02:02:18,019
actually six the big Fox says would it

2125
02:02:14,569 --> 02:02:21,920
make sense to store the whole cube the

2126
02:02:18,020 --> 02:02:24,980
whole cube of voxels as six 3d textures

2127
02:02:21,920 --> 02:02:31,760
one for each direction and then use

2128
02:02:24,979 --> 02:02:34,909
Hardware trilinear filtering so the

2129
02:02:31,760 --> 02:02:37,100
reason I'm not doing that is because

2130
02:02:34,909 --> 02:02:45,619
we're not actually storing color values

2131
02:02:37,100 --> 02:02:50,239
in the voxel we could and maybe we

2132
02:02:45,619 --> 02:02:52,369
should right but right now what we're

2133
02:02:50,238 --> 02:02:55,129
actually doing is storing indexes to

2134
02:02:52,369 --> 02:02:57,859
light probes the reason for that is so

2135
02:02:55,130 --> 02:03:01,850
the light probes are kind of large right

2136
02:02:57,859 --> 02:03:04,339
and so I don't know here's the

2137
02:03:01,850 --> 02:03:06,860
difference in practice and we can talk

2138
02:03:04,340 --> 02:03:09,170
about I mean you know it's because again

2139
02:03:06,859 --> 02:03:10,759
storing lights in a voxel maybe what we

2140
02:03:09,170 --> 02:03:14,149
want to do and I mentioned that before

2141
02:03:10,760 --> 02:03:16,699
so you know I'm not ruling that out by

2142
02:03:14,149 --> 02:03:20,359
any stretch of the imagination but if

2143
02:03:16,698 --> 02:03:22,759
you imagine having a 128 by 128 by 2

2144
02:03:20,359 --> 02:03:25,009
which is what we have right now you're

2145
02:03:22,760 --> 02:03:30,550
talking about going from that to

2146
02:03:25,010 --> 02:03:34,130
something that's at least that right um

2147
02:03:30,550 --> 02:03:36,560
and it's not that bad right it's not

2148
02:03:34,130 --> 02:03:38,150
that bad so I'm totally willing to

2149
02:03:36,560 --> 02:03:41,360
believe that we should just do that and

2150
02:03:38,149 --> 02:03:43,969
then primarily what we would do I guess

2151
02:03:41,359 --> 02:03:46,159
I mean I'm not sure but I think what we

2152
02:03:43,969 --> 02:03:48,800
would probably want to do is we would

2153
02:03:46,159 --> 02:03:51,680
basically have the voxel Pass be

2154
02:03:48,800 --> 02:03:54,829
something where we first render into the

2155
02:03:51,680 --> 02:03:57,350
voxel the lighting so you know we we

2156
02:03:54,829 --> 02:04:01,250
actually have a like lighting

2157
02:03:57,350 --> 02:04:03,020
replacement scheme that we render the

2158
02:04:01,250 --> 02:04:06,260
lighting information that we've computed

2159
02:04:03,020 --> 02:04:12,170
into the voxels that spams it out and

2160
02:04:06,260 --> 02:04:14,600
then we do the Texel fetches right and

2161
02:04:12,170 --> 02:04:16,069
maybe that's better right like I don't

2162
02:04:14,600 --> 02:04:17,480
know there's just a lot of complexity

2163
02:04:16,069 --> 02:04:20,198
here I don't know which ones better we

2164
02:04:17,479 --> 02:04:20,198
could certainly try it

2165
02:04:20,619 --> 02:04:24,000
we could certainly try it

2166
02:04:31,869 --> 02:04:41,380
would you overestimate sight FM the cube

2167
02:04:34,149 --> 02:04:43,779
map again really hard to say it depends

2168
02:04:41,380 --> 02:04:48,489
a lot on how we want to try and do that

2169
02:04:43,779 --> 02:04:51,369
blending and again so like let's say so

2170
02:04:48,489 --> 02:04:54,309
for example let's say we do want to go

2171
02:04:51,369 --> 02:04:57,250
ahead and use we want to instead of in

2172
02:04:54,310 --> 02:04:59,140
directing the cube map that's right in

2173
02:04:57,250 --> 02:05:02,560
directing the voxel we want to just put

2174
02:04:59,140 --> 02:05:04,840
the lights in the voxel right if we just

2175
02:05:02,560 --> 02:05:06,220
put the lights in the voxel then we

2176
02:05:04,840 --> 02:05:10,869
still have the problem of after we

2177
02:05:06,220 --> 02:05:13,000
sample we need to figure out what we do

2178
02:05:10,869 --> 02:05:14,859
with those samples and so we would still

2179
02:05:13,000 --> 02:05:17,619
be back to that problem as well it's

2180
02:05:14,859 --> 02:05:21,719
it's sort of a separate problem right is

2181
02:05:17,619 --> 02:05:21,720
how do you blend the directions together

2182
02:05:27,619 --> 02:05:31,340
alright I'm gonna light it down

2183
02:05:40,838 --> 02:05:43,819
thank you everyone for joining me for

2184
02:05:42,679 --> 02:05:45,378
enough so the hand made here us what a

2185
02:05:43,819 --> 02:05:46,549
pleasure coding with you as always if

2186
02:05:45,378 --> 02:05:47,809
you would like to follow series at home

2187
02:05:46,550 --> 02:05:49,219
you could always peer to the game at

2188
02:05:47,809 --> 02:05:50,748
hand made here org it comes to the

2189
02:05:49,219 --> 02:05:51,078
source code so you can play around with

2190
02:05:50,748 --> 02:05:53,300
it

2191
02:05:51,078 --> 02:05:55,488
we also have a discord if you'd like to

2192
02:05:53,300 --> 02:05:56,599
chat about the series offline or while

2193
02:05:55,488 --> 02:05:59,509
we're online there's a pound live

2194
02:05:56,599 --> 02:06:02,059
channel as well check that out it's

2195
02:05:59,510 --> 02:06:03,260
opening right at the moment so get in

2196
02:06:02,059 --> 02:06:06,498
while you can

2197
02:06:03,260 --> 02:06:08,628
and we'll see you there I will be back

2198
02:06:06,498 --> 02:06:10,188
here at some point we haven't posted

2199
02:06:08,628 --> 02:06:12,649
schedule for next week and the coming

2200
02:06:10,189 --> 02:06:15,349
weeks yet but we'll post it as soon as I

2201
02:06:12,649 --> 02:06:17,679
get a chance so check the schedule on

2202
02:06:15,349 --> 02:06:20,989
the watch page I check this right here

2203
02:06:17,679 --> 02:06:23,719
we'll be updating that soon that's it

2204
02:06:20,988 --> 02:06:25,038
for today until next time have fun

2205
02:06:23,719 --> 02:06:28,208
programming LC ever around the internet

2206
02:06:25,038 --> 02:06:28,208
take use everybody

