1
00:00:00,000 --> 00:00:04,080
hello everyone and welcome to handmade

2
00:00:01,620 --> 00:00:06,960
Hero show recode a complete-game live on

3
00:00:04,080 --> 00:00:07,490
stream we have some implementation to do

4
00:00:06,960 --> 00:00:10,800
today

5
00:00:07,490 --> 00:00:14,039
we want to make a little UI for fussing

6
00:00:10,800 --> 00:00:15,630
with stuff we actually kind of know what

7
00:00:14,039 --> 00:00:18,509
we want to do because we sketch it out

8
00:00:15,630 --> 00:00:20,039
yesterday just determining what actually

9
00:00:18,510 --> 00:00:22,350
we wanted you know what cut what we

10
00:00:20,039 --> 00:00:24,868
actually wanted the code to do and how

11
00:00:22,350 --> 00:00:27,269
we wanted it to do it we sort of have an

12
00:00:24,868 --> 00:00:28,859
idea of that now and so really what we

13
00:00:27,268 --> 00:00:31,108
want to do today is if I clean that up a

14
00:00:28,859 --> 00:00:33,359
little bit in terms of just making sure

15
00:00:31,109 --> 00:00:35,010
it actually is what we wanted

16
00:00:33,359 --> 00:00:37,950
and then figure out a way to get it on

17
00:00:35,009 --> 00:00:40,679
the screen we sort of have the code for

18
00:00:37,950 --> 00:00:42,180
this already in the debug library and so

19
00:00:40,679 --> 00:00:44,219
really what we're talking about here is

20
00:00:42,179 --> 00:00:46,079
we added some keys that allow us to let

21
00:00:44,219 --> 00:00:47,910
go into a debug mode here and like you

22
00:00:46,079 --> 00:00:50,370
know we can select some things and stuff

23
00:00:47,909 --> 00:00:52,738
like that and what we want to do is if

24
00:00:50,369 --> 00:00:54,058
we pick different things and again we're

25
00:00:52,738 --> 00:00:55,589
not really sure about a lot of this

26
00:00:54,058 --> 00:00:57,058
stuff we're just sort of hacking it in

27
00:00:55,590 --> 00:01:00,329
there and then we're gonna see like what

28
00:00:57,058 --> 00:01:01,649
do we actually do when we've got it and

29
00:01:00,329 --> 00:01:04,409
we can tune it a little bit to be more

30
00:01:01,649 --> 00:01:05,879
like what we want but when we pick

31
00:01:04,409 --> 00:01:07,680
something in here we want to be able to

32
00:01:05,879 --> 00:01:09,179
do is get access to like a property

33
00:01:07,680 --> 00:01:11,880
sheet over here that allows us to edit

34
00:01:09,180 --> 00:01:13,439
some properties and so in order to do

35
00:01:11,879 --> 00:01:16,949
something like that we just need some UI

36
00:01:13,438 --> 00:01:20,250
now we have some UI right we've got like

37
00:01:16,950 --> 00:01:21,810
this stuff here that we did and it does

38
00:01:20,250 --> 00:01:23,849
allow us to do some of this stuff like

39
00:01:21,810 --> 00:01:27,030
we can toggle things and and stuff like

40
00:01:23,849 --> 00:01:30,259
that right so we actually have some

41
00:01:27,030 --> 00:01:33,329
things that allow us to do what we want

42
00:01:30,259 --> 00:01:36,390
already written we just you know we

43
00:01:33,328 --> 00:01:38,279
don't really have them integrated in to

44
00:01:36,390 --> 00:01:40,590
the game side of things they're just in

45
00:01:38,280 --> 00:01:43,829
the debug library and we kind of want

46
00:01:40,590 --> 00:01:45,420
this to be even if you compile the debug

47
00:01:43,828 --> 00:01:47,879
stuff out of the game we may want this

48
00:01:45,420 --> 00:01:51,769
in there we we really don't know what we

49
00:01:47,879 --> 00:01:54,959
want to do with that stuff long term we

50
00:01:51,769 --> 00:01:56,759
kind of have to decide on that as we go

51
00:01:54,959 --> 00:01:59,938
and and I don't have a strong opinion on

52
00:01:56,759 --> 00:02:02,790
it but what we do know is that an artist

53
00:01:59,938 --> 00:02:05,279
for example is gonna need access to

54
00:02:02,790 --> 00:02:07,770
these tools and that says to me that

55
00:02:05,280 --> 00:02:09,840
like the full thing that has like all

56
00:02:07,769 --> 00:02:11,400
this stuff we don't want that exposed

57
00:02:09,840 --> 00:02:13,120
like an artist doesn't want to see this

58
00:02:11,400 --> 00:02:15,099
they don't know what this means

59
00:02:13,120 --> 00:02:16,509
and we don't want them to have to know

60
00:02:15,098 --> 00:02:19,030
what this means that's a bunch of

61
00:02:16,509 --> 00:02:20,859
cognitive overhead for them that is

62
00:02:19,030 --> 00:02:22,539
meaningless to their job but nothing in

63
00:02:20,860 --> 00:02:24,940
here is gonna help an artist get their

64
00:02:22,539 --> 00:02:26,408
job done so all we're doing is throwing

65
00:02:24,939 --> 00:02:28,509
a bunch of new stuff at them they have

66
00:02:26,408 --> 00:02:31,359
to understand that literally is

67
00:02:28,509 --> 00:02:32,828
worthless to them right and so typically

68
00:02:31,360 --> 00:02:34,390
for if we're talking about something

69
00:02:32,829 --> 00:02:36,430
that an artist needs to be able to use

70
00:02:34,389 --> 00:02:37,988
we want to keep it to things that they

71
00:02:36,430 --> 00:02:40,319
actually care about because otherwise

72
00:02:37,989 --> 00:02:43,450
we're literally just wasting their time

73
00:02:40,318 --> 00:02:46,179
their their job and the thing that they

74
00:02:43,449 --> 00:02:48,310
presumably enjoy is drawing they don't

75
00:02:46,180 --> 00:02:50,170
care at all about how many milliseconds

76
00:02:48,310 --> 00:02:52,750
a particular thing in the game takes

77
00:02:50,169 --> 00:02:54,750
that's the programmers job and the

78
00:02:52,750 --> 00:02:58,090
artist should never have to care right

79
00:02:54,750 --> 00:02:59,378
and so what we want to do is we want to

80
00:02:58,090 --> 00:03:01,209
make something that an artist can use

81
00:02:59,378 --> 00:03:03,189
here and think about how that's going to

82
00:03:01,209 --> 00:03:05,370
work and so it should be able to be

83
00:03:03,189 --> 00:03:07,479
something that with minimal amount of

84
00:03:05,370 --> 00:03:09,759
instruction and artists can just

85
00:03:07,479 --> 00:03:10,929
remember how to do and do and they don't

86
00:03:09,759 --> 00:03:12,818
have to learn a bunch of programming

87
00:03:10,930 --> 00:03:16,060
nonsense or things about the internal

88
00:03:12,818 --> 00:03:16,988
structure of our code we don't want them

89
00:03:16,060 --> 00:03:20,319
to have to think about those things

90
00:03:16,989 --> 00:03:22,209
because again it's just it's just gonna

91
00:03:20,318 --> 00:03:25,449
waste their time and it's gonna get less

92
00:03:22,209 --> 00:03:28,120
art done for no reason so what we want

93
00:03:25,449 --> 00:03:30,098
is something that's going to be art

94
00:03:28,120 --> 00:03:32,859
friendly and that will be in the game

95
00:03:30,098 --> 00:03:36,608
whether or not there is this debug

96
00:03:32,859 --> 00:03:38,260
system on at all so let's think about

97
00:03:36,609 --> 00:03:41,590
that as we're kind of going forward with

98
00:03:38,259 --> 00:03:43,388
it but because we do have that debug

99
00:03:41,590 --> 00:03:45,400
code available it does mean that we

100
00:03:43,389 --> 00:03:48,069
probably want to leverage the fact that

101
00:03:45,400 --> 00:03:49,629
we have that debug code because since we

102
00:03:48,068 --> 00:03:51,219
have the debug code it doesn't really

103
00:03:49,628 --> 00:03:52,840
make a lot of sense for us to rewrite

104
00:03:51,219 --> 00:03:55,299
everything when it's already basically

105
00:03:52,840 --> 00:03:57,159
doing what we want so the question in me

106
00:03:55,299 --> 00:04:00,189
is more like can we just take what we

107
00:03:57,159 --> 00:04:02,918
did here turn it into sort of a more

108
00:04:00,189 --> 00:04:04,090
generic version that doesn't really care

109
00:04:02,919 --> 00:04:06,969
whether they're client from the debug

110
00:04:04,090 --> 00:04:08,829
system or not and then use it in both

111
00:04:06,969 --> 00:04:11,199
cases because it is basically the same

112
00:04:08,829 --> 00:04:13,599
sort of code it's just whether or not it

113
00:04:11,199 --> 00:04:16,569
gets compiled in or not is more

114
00:04:13,598 --> 00:04:17,858
dependent on who's doing the calling and

115
00:04:16,569 --> 00:04:20,738
so that's really what we want to focus

116
00:04:17,858 --> 00:04:23,019
on so we create a thing yesterday that

117
00:04:20,738 --> 00:04:24,728
was a little editor system here that's

118
00:04:23,019 --> 00:04:26,750
the sort of bare-bones version of what

119
00:04:24,728 --> 00:04:28,129
we want and what we sort of did is we

120
00:04:26,750 --> 00:04:30,529
sketched in what we imagined it might

121
00:04:28,129 --> 00:04:32,029
look like to call this thing and so

122
00:04:30,529 --> 00:04:34,309
here's an example of what that would be

123
00:04:32,029 --> 00:04:36,229
and what we sort of did is we said we

124
00:04:34,310 --> 00:04:38,120
imagined we could sort of make these

125
00:04:36,230 --> 00:04:40,129
sets of calls here specifically so you

126
00:04:38,120 --> 00:04:42,530
know I pick an asset here's an asset

127
00:04:40,129 --> 00:04:44,689
that I've selected it looks at what type

128
00:04:42,529 --> 00:04:46,519
the asset is and right now we don't have

129
00:04:44,689 --> 00:04:47,810
any sound or font editing because we

130
00:04:46,519 --> 00:04:49,279
don't really know what that means

131
00:04:47,810 --> 00:04:50,720
you know maybe it never means anything

132
00:04:49,279 --> 00:04:52,969
because maybe there's nothing really to

133
00:04:50,720 --> 00:04:53,990
edit on those we don't know but if there

134
00:04:52,970 --> 00:04:55,670
was something that it we could add it

135
00:04:53,990 --> 00:04:58,069
here so really we're talking about just

136
00:04:55,670 --> 00:05:00,919
a one thing we wanted to edit which was

137
00:04:58,069 --> 00:05:02,120
the bitmap type and the only thing we

138
00:05:00,918 --> 00:05:04,339
really wanted to edit in there at least

139
00:05:02,120 --> 00:05:06,560
at the moment are these alignment points

140
00:05:04,339 --> 00:05:08,209
and what we wanted to do is this set of

141
00:05:06,560 --> 00:05:10,370
operations we want to be able to say

142
00:05:08,209 --> 00:05:12,289
let's list an alignment point let's say

143
00:05:10,370 --> 00:05:14,000
which number it is in the file right

144
00:05:12,290 --> 00:05:14,629
because there's eight of them or 16 of

145
00:05:14,000 --> 00:05:16,939
them or something

146
00:05:14,629 --> 00:05:18,800
I remember how many line of points there

147
00:05:16,939 --> 00:05:24,050
were how many Lyman points were there

148
00:05:18,800 --> 00:05:30,949
twelve something like that anyone

149
00:05:24,050 --> 00:05:32,569
remember twelve so there are twelve

150
00:05:30,949 --> 00:05:33,680
alignment points in the file right so

151
00:05:32,569 --> 00:05:34,909
you could just specify any of those so

152
00:05:33,680 --> 00:05:37,310
we're gonna list all twelve alignment

153
00:05:34,910 --> 00:05:39,290
points if an alignment point is empty

154
00:05:37,310 --> 00:05:41,389
you can click on it and it will

155
00:05:39,290 --> 00:05:44,689
initialize it to a new one that's not

156
00:05:41,389 --> 00:05:46,430
actually set to anything specific and

157
00:05:44,689 --> 00:05:49,040
then you can set it to whatever you want

158
00:05:46,430 --> 00:05:51,439
and then in here if we have one already

159
00:05:49,040 --> 00:05:54,140
it will say this the specification of it

160
00:05:51,439 --> 00:05:57,050
and allow you to remove that alignment

161
00:05:54,139 --> 00:05:59,539
point if you so it we're so inclined and

162
00:05:57,050 --> 00:06:01,300
that's really all we needed to do with

163
00:05:59,540 --> 00:06:04,250
alignment points for now that was that's

164
00:06:01,300 --> 00:06:06,500
literally everything there is for us to

165
00:06:04,250 --> 00:06:07,850
do there's a little bit more business

166
00:06:06,500 --> 00:06:09,168
involved in here that we're gonna want

167
00:06:07,850 --> 00:06:10,669
to add a little bit later it doesn't

168
00:06:09,168 --> 00:06:13,159
really have anything do with the UI but

169
00:06:10,668 --> 00:06:14,779
what we would want to do here is because

170
00:06:13,160 --> 00:06:18,590
we know whether or not our alignment

171
00:06:14,779 --> 00:06:19,879
points like we know when we add one we

172
00:06:18,589 --> 00:06:22,668
know when we change the settings and we

173
00:06:19,879 --> 00:06:25,490
know when we delete one we may want that

174
00:06:22,668 --> 00:06:27,649
to be something that is saved on an undo

175
00:06:25,490 --> 00:06:29,840
redo stack and we definitely want it to

176
00:06:27,649 --> 00:06:31,370
be able to flush to a file so we're

177
00:06:29,839 --> 00:06:33,889
going to have a few more operations that

178
00:06:31,370 --> 00:06:36,560
we need to implement those operations

179
00:06:33,889 --> 00:06:38,930
aren't really operations that relate to

180
00:06:36,560 --> 00:06:39,230
the UI because those are things that you

181
00:06:38,930 --> 00:06:41,240
know

182
00:06:39,230 --> 00:06:43,300
would either rebound to a hot key or are

183
00:06:41,240 --> 00:06:45,139
just gonna use this button feature again

184
00:06:43,300 --> 00:06:47,329
because they're just things that trigger

185
00:06:45,139 --> 00:06:49,129
like save to disk or whatever so they

186
00:06:47,329 --> 00:06:51,829
don't really affect our design of this

187
00:06:49,129 --> 00:06:52,909
too terribly much so I think we don't

188
00:06:51,829 --> 00:06:54,649
need to worry about them at the

189
00:06:52,910 --> 00:06:58,850
immediate moment although we could if we

190
00:06:54,649 --> 00:07:01,310
wanted to sketch them in for example you

191
00:06:58,850 --> 00:07:02,570
could imagine something like this this

192
00:07:01,310 --> 00:07:04,459
is not a particularly good way to do

193
00:07:02,569 --> 00:07:06,319
this necessarily but we could just

194
00:07:04,459 --> 00:07:07,669
imagine well and you know we could even

195
00:07:06,319 --> 00:07:09,980
make it a fairly good way to do this I

196
00:07:07,670 --> 00:07:11,600
suppose we want to it depends on how

197
00:07:09,980 --> 00:07:13,580
we're feeling whether we're feeling

198
00:07:11,600 --> 00:07:18,080
saucy or not but we could have something

199
00:07:13,579 --> 00:07:19,579
like an in-game edit here right and you

200
00:07:18,079 --> 00:07:26,719
could imagine something that allowed us

201
00:07:19,579 --> 00:07:28,490
to build a little linked list of edits

202
00:07:26,720 --> 00:07:29,990
somehow you know what I mean

203
00:07:28,490 --> 00:07:33,079
and right now maybe we don't know

204
00:07:29,990 --> 00:07:34,910
exactly what those are but we keep a

205
00:07:33,079 --> 00:07:44,240
list of them in fact we could just do it

206
00:07:34,910 --> 00:07:47,810
this way so you can imagine us keeping

207
00:07:44,240 --> 00:07:50,389
like two lists here where we've

208
00:07:47,810 --> 00:07:53,899
basically got lists of in-game edits

209
00:07:50,389 --> 00:07:56,479
that we want to be able to track so as

210
00:07:53,899 --> 00:08:00,439
we edit things you know we would save

211
00:07:56,480 --> 00:08:04,100
them as in-game edits that could be done

212
00:08:00,439 --> 00:08:07,189
or you know undone or redone or you know

213
00:08:04,100 --> 00:08:09,500
whatever we want and at the moment we

214
00:08:07,189 --> 00:08:11,540
really only have one kind the only thing

215
00:08:09,500 --> 00:08:13,370
you can edit are these points and then

216
00:08:11,540 --> 00:08:15,770
you can imagine us adding an undo and a

217
00:08:13,370 --> 00:08:18,199
redoing here what that means is at that

218
00:08:15,769 --> 00:08:21,379
point once you've you know committed to

219
00:08:18,199 --> 00:08:23,209
having something fairly real there which

220
00:08:21,379 --> 00:08:25,550
we can do pretty easily then we can

221
00:08:23,209 --> 00:08:26,209
imagine what this other section might

222
00:08:25,550 --> 00:08:29,600
look like

223
00:08:26,209 --> 00:08:31,609
so when you are in the editor proper

224
00:08:29,600 --> 00:08:33,769
then when you come in to update and

225
00:08:31,610 --> 00:08:36,830
render editor if you're actually in any

226
00:08:33,769 --> 00:08:39,168
mode that involves editing at all then

227
00:08:36,830 --> 00:08:42,530
what you could hypothesize is we would

228
00:08:39,168 --> 00:08:45,620
do something like say you know if you

229
00:08:42,529 --> 00:08:47,480
know files are dirty or something like

230
00:08:45,620 --> 00:08:49,190
this you know something here that we

231
00:08:47,480 --> 00:08:51,920
look and we see whether the files are

232
00:08:49,190 --> 00:08:52,850
dirty then we add a button that allows

233
00:08:51,919 --> 00:08:57,409
us to say

234
00:08:52,850 --> 00:08:59,659
you know what I mean and this would do

235
00:08:57,409 --> 00:09:02,539
the save here and then we could also

236
00:08:59,659 --> 00:09:06,740
furthermore imagine you know some things

237
00:09:02,539 --> 00:09:09,259
about the Sentinels here the undoing the

238
00:09:06,740 --> 00:09:11,360
redo so in that case we would want

239
00:09:09,259 --> 00:09:16,639
something like if button

240
00:09:11,360 --> 00:09:19,550
you know undo and if button redo right

241
00:09:16,639 --> 00:09:22,730
and these things here would probably

242
00:09:19,549 --> 00:09:24,078
have something to do well you know these

243
00:09:22,730 --> 00:09:26,449
are the sorts of things that you want

244
00:09:24,078 --> 00:09:28,669
maybe muscle memory for perhaps possibly

245
00:09:26,448 --> 00:09:29,990
I don't know and so you might even say

246
00:09:28,669 --> 00:09:31,549
that these should be things that allow

247
00:09:29,990 --> 00:09:33,169
us to say whether something is enabled

248
00:09:31,549 --> 00:09:39,229
or disabled so maybe it's more like that

249
00:09:33,169 --> 00:09:44,360
right and then we just say like undo

250
00:09:39,230 --> 00:09:53,930
only is there if the the list is is not

251
00:09:44,360 --> 00:09:56,300
empty right so if there is something to

252
00:09:53,929 --> 00:09:58,789
undo or redo then these buttons would be

253
00:09:56,299 --> 00:10:04,359
available and if there is something to

254
00:09:58,789 --> 00:10:07,730
save then this would be available and I

255
00:10:04,360 --> 00:10:10,579
think that would be mostly it what I

256
00:10:07,730 --> 00:10:12,289
would imagine is that if you look at

257
00:10:10,578 --> 00:10:13,969
what's going on with these we could

258
00:10:12,289 --> 00:10:22,610
probably do something where we would say

259
00:10:13,970 --> 00:10:26,750
look you know the whatever the undo

260
00:10:22,610 --> 00:10:29,930
Sentinel is pointing to as its next

261
00:10:26,750 --> 00:10:31,818
pointer I think tells you whether you've

262
00:10:29,929 --> 00:10:36,309
saved so like yeah I think it would be

263
00:10:31,818 --> 00:10:36,309
this you would say

264
00:10:49,580 --> 00:10:54,930
basically what we could do is say look

265
00:10:51,659 --> 00:10:57,149
whenever you save whatever the undo

266
00:10:54,929 --> 00:11:01,819
Sentinel is pointing to as its next

267
00:10:57,149 --> 00:11:05,909
operation that would tell you

268
00:11:01,820 --> 00:11:10,020
specifically whether you need to save or

269
00:11:05,909 --> 00:11:14,159
not right because if you undo back to

270
00:11:10,019 --> 00:11:16,289
the same place that it was at the time

271
00:11:14,159 --> 00:11:18,809
when you saved then you don't need to

272
00:11:16,289 --> 00:11:21,899
save again I think that's true I'm

273
00:11:18,809 --> 00:11:30,000
making that up but I think that's true

274
00:11:21,899 --> 00:11:32,909
so you could do like like that we could

275
00:11:30,000 --> 00:11:40,919
also make these things be you know sort

276
00:11:32,909 --> 00:11:47,339
of more we could we could make these

277
00:11:40,919 --> 00:11:49,949
things be a little bit more systemic

278
00:11:47,340 --> 00:11:54,629
here too just so that it's clearer

279
00:11:49,950 --> 00:12:01,860
what's going on because other people

280
00:11:54,629 --> 00:12:06,149
might want to call those and really this

281
00:12:01,860 --> 00:12:08,629
is you know totally totally basic it's

282
00:12:06,149 --> 00:12:08,629
just this

283
00:12:11,269 --> 00:12:20,449
and so you know each thing here would

284
00:12:16,460 --> 00:12:26,600
would be just a really really simple way

285
00:12:20,450 --> 00:12:28,790
of checking which ones of these had

286
00:12:26,600 --> 00:12:32,029
anything in it so here's one do

287
00:12:28,789 --> 00:12:34,699
available here's redo available and is

288
00:12:32,029 --> 00:12:37,490
empty is also similarly super basic

289
00:12:34,700 --> 00:12:43,670
right it's just saying look I've got

290
00:12:37,490 --> 00:12:45,950
some edit that I'm pointing to here and

291
00:12:43,669 --> 00:12:49,699
I can say if it's if it's an empty ring

292
00:12:45,950 --> 00:12:52,490
by basically just saying if if the next

293
00:12:49,700 --> 00:12:55,550
pointer points to me right so I can just

294
00:12:52,490 --> 00:12:58,370
say look the result is if the Edit next

295
00:12:55,549 --> 00:13:00,169
pointer equals the edit then it's a it's

296
00:12:58,370 --> 00:13:03,169
just a single link sitting there by

297
00:13:00,169 --> 00:13:04,459
itself so it's not a real list right and

298
00:13:03,169 --> 00:13:05,779
that's just a quick way of checking to

299
00:13:04,460 --> 00:13:07,610
see whether a doubly linked list is

300
00:13:05,779 --> 00:13:09,049
empty or not right that's that's all I'm

301
00:13:07,610 --> 00:13:11,629
talking about there nothing nothing

302
00:13:09,049 --> 00:13:16,370
fancy we could also assert in that case

303
00:13:11,629 --> 00:13:21,799
that either the result is not true or

304
00:13:16,370 --> 00:13:25,580
the Edit previous pointer also equals

305
00:13:21,799 --> 00:13:27,139
edit because it would be illegal for the

306
00:13:25,580 --> 00:13:28,759
next pointer to point back to me in the

307
00:13:27,139 --> 00:13:30,620
previous pointer not to that's just a

308
00:13:28,759 --> 00:13:32,870
bug and so we probably want to also

309
00:13:30,620 --> 00:13:36,110
check that when we look and see if the

310
00:13:32,870 --> 00:13:38,419
Edit pointer if the edits if whatever

311
00:13:36,110 --> 00:13:40,250
the list is that we're looking at in

312
00:13:38,419 --> 00:13:41,389
fact you know let me bet it's not a very

313
00:13:40,250 --> 00:13:42,830
good name for that I'm going to call

314
00:13:41,389 --> 00:13:44,569
that list for now just so it's a little

315
00:13:42,830 --> 00:13:46,850
clearer what we're looking at there so

316
00:13:44,570 --> 00:13:49,670
if the lists next pointer equals the

317
00:13:46,850 --> 00:13:55,190
list then the you know so basically this

318
00:13:49,669 --> 00:13:58,459
thing here equals true then if that was

319
00:13:55,190 --> 00:14:02,000
false meaning this thing didn't point to

320
00:13:58,460 --> 00:14:04,910
it then that's okay but if it's true

321
00:14:02,000 --> 00:14:06,620
then we need this to be true right I'm

322
00:14:04,909 --> 00:14:09,019
not I think I'm not phrasing that

323
00:14:06,620 --> 00:14:12,740
exactly right here for this check what I

324
00:14:09,019 --> 00:14:18,649
want to do is say like either the better

325
00:14:12,740 --> 00:14:19,820
way to say it because and also because I

326
00:14:18,649 --> 00:14:21,860
actually want to check two conditions

327
00:14:19,820 --> 00:14:25,278
here I want to say either the result is

328
00:14:21,860 --> 00:14:31,120
true and like this result is true

329
00:14:25,278 --> 00:14:34,669
this is true you know or not results and

330
00:14:31,120 --> 00:14:38,659
not lists right I want one of the other

331
00:14:34,669 --> 00:14:43,338
of these two things so either I have to

332
00:14:38,659 --> 00:14:45,139
have list next you know equal to the

333
00:14:43,339 --> 00:14:47,870
list itself in which case the previous

334
00:14:45,139 --> 00:14:50,629
also has to equal this itself or in the

335
00:14:47,870 --> 00:14:53,058
other case if I didn't have that then

336
00:14:50,629 --> 00:14:54,769
then then the other pointer sorry then

337
00:14:53,058 --> 00:14:57,289
the previous pointer also had better not

338
00:14:54,769 --> 00:14:59,480
be because it's either empty or it's not

339
00:14:57,289 --> 00:15:01,159
in both directions it can't be empty in

340
00:14:59,480 --> 00:15:03,409
one direction and not in the other

341
00:15:01,159 --> 00:15:06,799
because that's just a linked list bug in

342
00:15:03,409 --> 00:15:09,438
our code and we don't want that right so

343
00:15:06,799 --> 00:15:17,389
if we have something like this then we

344
00:15:09,438 --> 00:15:20,649
can have we could have some kind of you

345
00:15:17,389 --> 00:15:20,649
would probably want something like this

346
00:15:27,549 --> 00:15:33,109
this is probably what we're looking for

347
00:15:29,839 --> 00:15:40,220
here and I'm not sure exactly how we

348
00:15:33,110 --> 00:15:47,959
want to I'm not sure exactly how we want

349
00:15:40,220 --> 00:15:55,550
these to be specified the thing that I'm

350
00:15:47,958 --> 00:16:01,518
worried about is like I can do the

351
00:15:55,549 --> 00:16:04,429
basics that would look something like

352
00:16:01,519 --> 00:16:06,679
this but the problem with that is that

353
00:16:04,429 --> 00:16:08,899
all of these buttons would be really

354
00:16:06,679 --> 00:16:12,588
near each other and some of them are

355
00:16:08,899 --> 00:16:18,049
really dangerous like save overwrite the

356
00:16:12,589 --> 00:16:20,509
file and revert would be like undo all

357
00:16:18,049 --> 00:16:23,389
of your changes that you've done since

358
00:16:20,509 --> 00:16:26,449
the last save and those are pretty

359
00:16:23,389 --> 00:16:28,639
dangerous things and you don't really

360
00:16:26,448 --> 00:16:30,828
want them close to the undo redo buttons

361
00:16:28,639 --> 00:16:31,188
necessarily you know what I'm saying to

362
00:16:30,828 --> 00:16:33,109
you

363
00:16:31,188 --> 00:16:35,769
so we need to think a little harder

364
00:16:33,110 --> 00:16:35,769
about that

365
00:16:37,360 --> 00:16:50,019
I don't know what the right answer is

366
00:16:48,700 --> 00:16:52,629
there but we'll have to think about that

367
00:16:50,019 --> 00:16:57,909
a little bit more anyway this is what

368
00:16:52,629 --> 00:16:59,950
we're basically looking at here right so

369
00:16:57,909 --> 00:17:02,019
if we then look at what's going on in

370
00:16:59,950 --> 00:17:03,579
the endgame edit you know tracking the

371
00:17:02,019 --> 00:17:06,759
undo and redo is really pretty basic

372
00:17:03,578 --> 00:17:09,129
it's it's really just saying look at

373
00:17:06,759 --> 00:17:11,078
what do we have for edits at the moment

374
00:17:09,130 --> 00:17:13,480
you know we've got I guess really only

375
00:17:11,078 --> 00:17:20,500
one kind of edit which is and what are

376
00:17:13,480 --> 00:17:23,048
they called a line point edit yeah and

377
00:17:20,500 --> 00:17:24,609
in a line point edit is really basic

378
00:17:23,048 --> 00:17:28,328
it's just saying look here's the asset

379
00:17:24,609 --> 00:17:32,969
index here's the align point index and

380
00:17:28,328 --> 00:17:32,970
then and then just what's the data right

381
00:17:33,240 --> 00:17:44,470
and it was like changed from value

382
00:17:38,919 --> 00:17:47,080
change to value right and so you know

383
00:17:44,470 --> 00:17:50,589
each thing we put in the stack can

384
00:17:47,079 --> 00:17:54,808
basically encapsulate everything into

385
00:17:50,589 --> 00:17:54,808
one of these edits that we have right

386
00:18:01,710 --> 00:18:12,970
yeah I'll call it that yeah yeah I'll

387
00:18:07,179 --> 00:18:15,519
call it that yeah so you know in here we

388
00:18:12,970 --> 00:18:18,400
sort of got the various things that we

389
00:18:15,519 --> 00:18:20,139
want to edit here and one of the things

390
00:18:18,400 --> 00:18:21,429
you can do in these situations to make

391
00:18:20,140 --> 00:18:25,000
things easier ourselves in case you ever

392
00:18:21,429 --> 00:18:28,240
want a macro is you can just name the

393
00:18:25,000 --> 00:18:29,380
member the same as the type right and

394
00:18:28,240 --> 00:18:31,298
that means that people would only have

395
00:18:29,380 --> 00:18:32,530
to pass one thing as a parameter and

396
00:18:31,298 --> 00:18:34,298
they don't need to pass the second thing

397
00:18:32,529 --> 00:18:37,029
because the the type is the name in that

398
00:18:34,298 --> 00:18:38,319
case and it can be handy so we don't

399
00:18:37,029 --> 00:18:39,940
really need a type field here at the

400
00:18:38,319 --> 00:18:41,798
moment but presumably someday we would

401
00:18:39,940 --> 00:18:45,730
we don't know that we actually would but

402
00:18:41,798 --> 00:18:46,500
someday right and so there would be

403
00:18:45,730 --> 00:18:50,769
presumably

404
00:18:46,500 --> 00:18:51,309
an in-game edit type and that type would

405
00:18:50,769 --> 00:18:55,000
just say

406
00:18:51,309 --> 00:18:57,369
what was supposed to happen right so you

407
00:18:55,000 --> 00:18:59,980
know it would be like an edit a line

408
00:18:57,369 --> 00:19:03,069
point would be the only thing in there I

409
00:18:59,980 --> 00:19:06,460
guess there's an edit none something

410
00:19:03,069 --> 00:19:11,259
like this we can also just do it this

411
00:19:06,460 --> 00:19:13,900
way so that again everything matches

412
00:19:11,259 --> 00:19:16,859
right and I'll kind of show you what I

413
00:19:13,900 --> 00:19:16,860
mean by that in a second

414
00:19:18,029 --> 00:19:22,809
so this lets us store this information

415
00:19:20,619 --> 00:19:24,579
what's also nice about this is if we do

416
00:19:22,809 --> 00:19:26,049
it by index instead of by pointer it

417
00:19:24,579 --> 00:19:27,909
means if you really wanted to and you

418
00:19:26,049 --> 00:19:29,470
were you were trying to be like crazy

419
00:19:27,910 --> 00:19:32,769
complete about this editor

420
00:19:29,470 --> 00:19:34,809
you could save the stacks out as well so

421
00:19:32,769 --> 00:19:36,279
like when you saved in HHA you could

422
00:19:34,809 --> 00:19:38,589
have a section that was like here's the

423
00:19:36,279 --> 00:19:41,879
edit stack too so if people wanted to

424
00:19:38,589 --> 00:19:44,289
keep their undo stacks around it could

425
00:19:41,880 --> 00:19:46,630
cause this stuff is fairly stable

426
00:19:44,289 --> 00:19:49,029
meaning it doesn't change based on where

427
00:19:46,630 --> 00:19:52,630
you loaded the thing in memory you know

428
00:19:49,029 --> 00:19:55,029
which is kind of nice so that's fairly

429
00:19:52,630 --> 00:19:57,760
complete right and what that means is in

430
00:19:55,029 --> 00:20:01,450
here what we could do is we can have a

431
00:19:57,759 --> 00:20:05,349
way to edit these things we could have a

432
00:20:01,450 --> 00:20:09,160
thing for align points in this case I

433
00:20:05,349 --> 00:20:11,289
would say because it's so simple

434
00:20:09,160 --> 00:20:14,080
I think the thing you want to do is just

435
00:20:11,289 --> 00:20:16,059
make this be virtualized knocked the

436
00:20:14,079 --> 00:20:17,980
Seaway but I mean just like and that's

437
00:20:16,059 --> 00:20:21,519
virtualized so what would the word be

438
00:20:17,980 --> 00:20:23,740
wrapped so in here we would just do like

439
00:20:21,519 --> 00:20:26,650
edit the line point instead of set and

440
00:20:23,740 --> 00:20:30,099
all we would have to do there is instead

441
00:20:26,650 --> 00:20:35,140
of passing the align point like this we

442
00:20:30,099 --> 00:20:37,539
would instead pass the base the basic

443
00:20:35,140 --> 00:20:39,400
indices used to get at it so we'd pass

444
00:20:37,539 --> 00:20:41,529
the asset index and the point index

445
00:20:39,400 --> 00:20:43,540
instead and then the rest of the stuff

446
00:20:41,529 --> 00:20:46,000
would be the same as the align point

447
00:20:43,539 --> 00:20:48,909
setting function and so in there we

448
00:20:46,000 --> 00:20:51,700
would say okay let's go ahead and grab

449
00:20:48,910 --> 00:20:56,790
out what those things were that were

450
00:20:51,700 --> 00:20:59,410
passed to set a line point like so right

451
00:20:56,789 --> 00:21:03,069
and all this function is going to do is

452
00:20:59,410 --> 00:21:04,240
just thunk through to that same call we

453
00:21:03,069 --> 00:21:09,289
don't

454
00:21:04,240 --> 00:21:13,759
with all of this stuff right but it's

455
00:21:09,289 --> 00:21:16,129
also going to it's also going to do the

456
00:21:13,759 --> 00:21:18,799
work of capturing the for and after

457
00:21:16,130 --> 00:21:25,580
state right so it's gonna say something

458
00:21:18,799 --> 00:21:28,450
like hey here's a new edit that we're

459
00:21:25,579 --> 00:21:49,939
going to use so give me one of those

460
00:21:28,450 --> 00:21:51,920
maybe I don't know I'm not sure so in

461
00:21:49,940 --> 00:21:54,529
here we would basically say hey I want

462
00:21:51,920 --> 00:21:58,039
to capture one of these edits maybe this

463
00:21:54,529 --> 00:22:02,559
thing actually is a little bit Squinkie

464
00:21:58,039 --> 00:22:02,559
and we actually do something like this

465
00:22:04,690 --> 00:22:08,420
and then what we do is we say all right

466
00:22:06,980 --> 00:22:10,309
we're gonna allocate one of these things

467
00:22:08,420 --> 00:22:12,620
so this should come back with one of

468
00:22:10,309 --> 00:22:16,549
these we want to capture the state of

469
00:22:12,619 --> 00:22:22,219
the align point first so the change from

470
00:22:16,549 --> 00:22:25,490
value is going to be whatever the the

471
00:22:22,220 --> 00:22:29,029
align point actually is at the time then

472
00:22:25,490 --> 00:22:30,950
we're gonna set it right then we're

473
00:22:29,029 --> 00:22:33,980
gonna say the change to value is

474
00:22:30,950 --> 00:22:35,930
whatever it is afterwards right so this

475
00:22:33,980 --> 00:22:37,940
allows us to create and edit that we'll

476
00:22:35,930 --> 00:22:40,250
remember what's going on we capture the

477
00:22:37,940 --> 00:22:43,430
state of the thing before the Edit we

478
00:22:40,250 --> 00:22:45,019
set it we then capture it back right

479
00:22:43,430 --> 00:22:47,930
whatever it's gonna be so we know what

480
00:22:45,019 --> 00:22:49,430
both of them are and getting the HHA

481
00:22:47,930 --> 00:22:51,680
line point is pretty straightforward

482
00:22:49,430 --> 00:22:55,549
right it's just a thing that gets the

483
00:22:51,680 --> 00:22:58,250
asset first like this via this asset

484
00:22:55,549 --> 00:23:00,859
index and then it gets the point index

485
00:22:58,250 --> 00:23:04,839
now when we do this we want to capture

486
00:23:00,859 --> 00:23:04,839
those two pieces of information as well

487
00:23:09,388 --> 00:23:15,898
right we want to get those things

488
00:23:12,450 --> 00:23:19,838
captured so we can have them you know

489
00:23:15,898 --> 00:23:21,638
remembered and then these will capture

490
00:23:19,838 --> 00:23:24,249
the actual data that's important right

491
00:23:21,638 --> 00:23:25,808
here and there so we want to be able to

492
00:23:24,249 --> 00:23:28,088
access this what's interesting about

493
00:23:25,808 --> 00:23:29,678
this is when we do this edit align point

494
00:23:28,088 --> 00:23:32,858
you can see kind of what's going to go

495
00:23:29,679 --> 00:23:36,249
on here we really would like is this to

496
00:23:32,858 --> 00:23:40,269
be a little bit more captured as well we

497
00:23:36,249 --> 00:23:52,450
want to do a like apply edit thing in

498
00:23:40,269 --> 00:23:53,858
here well I'm gonna hold off on master

499
00:23:52,450 --> 00:23:55,899
for a second

500
00:23:53,858 --> 00:23:58,210
all I really want to do I think at this

501
00:23:55,898 --> 00:24:00,338
point is I want a way of this being a

502
00:23:58,210 --> 00:24:02,288
little more systemic so what I'd like to

503
00:24:00,338 --> 00:24:14,798
do here is I'd like to have a way of

504
00:24:02,288 --> 00:24:17,259
getting that HHA line point so what I'd

505
00:24:14,798 --> 00:24:20,168
like to do is I'd like to pass in to

506
00:24:17,259 --> 00:24:22,569
this like the stuff that you need and

507
00:24:20,169 --> 00:24:26,710
I'd like to be able to get that thing

508
00:24:22,569 --> 00:24:29,288
out so if I pass in an asset index and a

509
00:24:26,710 --> 00:24:32,979
point index I'd like to make this stuff

510
00:24:29,288 --> 00:24:34,960
be known so I don't have to do it every

511
00:24:32,979 --> 00:24:38,469
time right I just know I can get an

512
00:24:34,960 --> 00:24:44,278
asset and then I know I can get an hij a

513
00:24:38,469 --> 00:24:44,278
line point from the asset using this

514
00:24:50,118 --> 00:25:06,730
and then what I'm gonna do is I'm gonna

515
00:24:51,710 --> 00:25:06,730
say these all use that that make sense

516
00:25:07,239 --> 00:25:14,869
so that's pretty much how that would go

517
00:25:11,329 --> 00:25:16,999
and then all of these folks now if we

518
00:25:14,868 --> 00:25:19,428
wanted to do undo and redo on them it'd

519
00:25:16,999 --> 00:25:25,489
be pretty basic that's the entirety of

520
00:25:19,429 --> 00:25:27,679
the change right and that's pretty nice

521
00:25:25,489 --> 00:25:30,409
because that means that if we actually

522
00:25:27,679 --> 00:25:34,249
want to do undo redo then all we have to

523
00:25:30,409 --> 00:25:40,460
do to implement that is we just have to

524
00:25:34,249 --> 00:25:47,288
have a in fact we can make this even a

525
00:25:40,460 --> 00:25:50,899
little bit more ridiculous by doing this

526
00:25:47,288 --> 00:25:56,808
so if we want to we can do this which is

527
00:25:50,898 --> 00:25:59,048
in game change type right an in game

528
00:25:56,808 --> 00:26:10,190
change type just have two things like

529
00:25:59,048 --> 00:26:15,499
change from and change to and so from is

530
00:26:10,190 --> 00:26:18,830
the zero entry to is match will be

531
00:26:15,499 --> 00:26:20,600
complete here is the one entry and so we

532
00:26:18,829 --> 00:26:23,599
know how many we need there right make

533
00:26:20,599 --> 00:26:25,939
sense and so what we can do there is we

534
00:26:23,599 --> 00:26:27,558
can be even more ridiculous and make a

535
00:26:25,940 --> 00:26:33,830
single function that implements both

536
00:26:27,558 --> 00:26:35,928
undo and redo pretty easily right so

537
00:26:33,829 --> 00:26:38,989
what we would do there is first we need

538
00:26:35,929 --> 00:26:41,690
something that's like apply edit you

539
00:26:38,989 --> 00:26:44,028
know what I mean or apply it at change

540
00:26:41,690 --> 00:26:48,519
and what that would do is it would take

541
00:26:44,028 --> 00:26:51,759
the ingame edit in question and

542
00:26:48,519 --> 00:26:55,089
whichever one of these you wanted to do

543
00:26:51,759 --> 00:26:57,889
right so if you wanted to apply the from

544
00:26:55,089 --> 00:27:01,779
you would pass from if you wanted to

545
00:26:57,888 --> 00:27:04,000
apply the two you'd pass to make sense

546
00:27:01,779 --> 00:27:06,039
so at that point all you have to do is

547
00:27:04,000 --> 00:27:09,839
pass the edit and that thing and it will

548
00:27:06,039 --> 00:27:12,460
pull it out of the change and apply that

549
00:27:09,839 --> 00:27:22,119
so it'll switch on the type of edit

550
00:27:12,460 --> 00:27:24,700
whatever edit it is it'll grab a line

551
00:27:22,119 --> 00:27:27,750
point is really the only thing I think

552
00:27:24,700 --> 00:27:31,390
we do we have a legal default case yeah

553
00:27:27,750 --> 00:27:33,190
so in here when we're doing our edit for

554
00:27:31,390 --> 00:27:34,480
a line points then that means really all

555
00:27:33,190 --> 00:27:45,220
we need to do is just take this thing

556
00:27:34,480 --> 00:27:48,579
and get that out once we've got that

557
00:27:45,220 --> 00:28:07,900
then we can just apply the change using

558
00:27:48,579 --> 00:28:09,819
this stuff so we're gonna need to pass

559
00:28:07,900 --> 00:28:12,130
the game assets here presumably we want

560
00:28:09,819 --> 00:28:15,279
that well I don't know if we even want

561
00:28:12,130 --> 00:28:16,330
the editor maybe not but we least need

562
00:28:15,279 --> 00:28:18,220
the assets because we need to be able to

563
00:28:16,329 --> 00:28:19,298
get access the assets out of there I

564
00:28:18,220 --> 00:28:22,000
don't know if we need to pass the editor

565
00:28:19,298 --> 00:28:23,349
maybe we will maybe we won't but you can

566
00:28:22,000 --> 00:28:25,089
see here we just say look look give me

567
00:28:23,349 --> 00:28:28,240
the thing that I'm gonna edit and I do

568
00:28:25,089 --> 00:28:29,918
it and then once I have that out all I

569
00:28:28,240 --> 00:28:32,289
need to do is just assign whichever one

570
00:28:29,919 --> 00:28:37,900
they wanted me to assign right so in a

571
00:28:32,289 --> 00:28:39,879
line at it I can just say whatever this

572
00:28:37,900 --> 00:28:42,309
edit changes here we could actually

573
00:28:39,880 --> 00:28:43,360
propagate these out words as well I

574
00:28:42,308 --> 00:28:44,918
don't know that I really want to do that

575
00:28:43,359 --> 00:28:47,048
because I'm not sure how that's gonna

576
00:28:44,919 --> 00:28:48,669
shake out in the future but all I'm

577
00:28:47,048 --> 00:28:51,359
gonna do here say alright whatever the

578
00:28:48,669 --> 00:28:56,259
type is that's what we're gonna apply

579
00:28:51,359 --> 00:28:58,719
right so that's it and once I have that

580
00:28:56,259 --> 00:29:00,970
I can actually implement my undo and

581
00:28:58,720 --> 00:29:03,700
redo kind of fairly trivially your and

582
00:29:00,970 --> 00:29:05,798
I'm saying so if I end up in here what

583
00:29:03,700 --> 00:29:07,360
I'm gonna say is alright when I do this

584
00:29:05,798 --> 00:29:09,339
apply edit change I need to pass the

585
00:29:07,359 --> 00:29:10,629
assets I need to pass which in-game edit

586
00:29:09,339 --> 00:29:13,000
I'm talking about and they need to pass

587
00:29:10,630 --> 00:29:15,430
which one of these I'm doing now if I'm

588
00:29:13,000 --> 00:29:17,950
doing an undo then I want to go

589
00:29:15,430 --> 00:29:20,019
backwards so I'm trying to apply an edit

590
00:29:17,950 --> 00:29:22,299
change from right I'm trying to like

591
00:29:20,019 --> 00:29:24,160
apply what the Edit was before the thing

592
00:29:22,299 --> 00:29:25,720
that I'm talking about and if I want to

593
00:29:24,160 --> 00:29:27,220
do a redo that I'm gonna do the two

594
00:29:25,720 --> 00:29:29,350
because I'm trying to plot put it to

595
00:29:27,220 --> 00:29:31,120
what it was after the Edit because the

596
00:29:29,349 --> 00:29:32,169
redo is saying that was undone and now

597
00:29:31,119 --> 00:29:35,109
needs to be redone

598
00:29:32,170 --> 00:29:37,779
you know what I mean so what I want to

599
00:29:35,109 --> 00:29:40,899
do here is say alright for the undo redo

600
00:29:37,779 --> 00:29:42,309
sentinels all I need to do now is say

601
00:29:40,900 --> 00:29:44,880
okay

602
00:29:42,309 --> 00:29:51,369
let me go ahead and take an in-game edit

603
00:29:44,880 --> 00:29:55,210
right and I want to pop the first thing

604
00:29:51,369 --> 00:29:58,689
off of the undo stack so whatever the

605
00:29:55,210 --> 00:30:00,490
editor Senate Sentinel is I'm gonna pop

606
00:29:58,690 --> 00:30:02,799
the first thing off of that stack and

607
00:30:00,490 --> 00:30:09,990
I'm gonna apply it and then I want to

608
00:30:02,799 --> 00:30:09,990
push it as the first thing to redo right

609
00:30:10,920 --> 00:30:17,200
so I'm just moving it from one list to

610
00:30:13,900 --> 00:30:20,380
another and applying its change in that

611
00:30:17,200 --> 00:30:22,029
direction similarly I should check here

612
00:30:20,380 --> 00:30:25,420
because just in case the list was empty

613
00:30:22,029 --> 00:30:27,940
I know it's weird to say that the list

614
00:30:25,420 --> 00:30:29,620
would be empty because in this case

615
00:30:27,940 --> 00:30:32,460
we're saying that you can only press

616
00:30:29,619 --> 00:30:35,469
this button if this was available so

617
00:30:32,460 --> 00:30:37,390
maybe another way to do that might just

618
00:30:35,470 --> 00:30:39,880
be let's make sure our system actually

619
00:30:37,390 --> 00:30:43,570
works cleanly an assert that it came

620
00:30:39,880 --> 00:30:44,680
back okay although this would crash

621
00:30:43,569 --> 00:30:46,029
right away so I'm not sure that the

622
00:30:44,680 --> 00:30:47,710
assert is really going to do anything

623
00:30:46,029 --> 00:30:50,379
that it wouldn't have done otherwise

624
00:30:47,710 --> 00:30:52,059
because it will just stop probably but

625
00:30:50,380 --> 00:30:55,830
you know either way

626
00:30:52,059 --> 00:30:55,829
so anyway same thing here

627
00:30:59,059 --> 00:31:03,500
so if we want to redo we'd pop this one

628
00:31:01,250 --> 00:31:06,019
and then we apply the to change and then

629
00:31:03,500 --> 00:31:10,730
we push it on right so that's the

630
00:31:06,019 --> 00:31:12,680
entirety of like undo redo and where's

631
00:31:10,730 --> 00:31:14,839
my is dirty did I we didn't implement

632
00:31:12,680 --> 00:31:16,460
his dirty so let me just kind of

633
00:31:14,839 --> 00:31:24,409
implement that real quick because it's

634
00:31:16,460 --> 00:31:31,430
really also very simple so if I want to

635
00:31:24,410 --> 00:31:32,810
check to see if it is dirty case all I'm

636
00:31:31,430 --> 00:31:36,440
gonna check here to say look if the

637
00:31:32,809 --> 00:31:43,519
Editors undo sentinel has a next field

638
00:31:36,440 --> 00:31:47,360
that equals the clean undo sentinel then

639
00:31:43,519 --> 00:31:51,650
it's clean so i am asking if it's dirty

640
00:31:47,359 --> 00:31:55,459
so it's just a not of that right i so i

641
00:31:51,650 --> 00:31:57,200
mean more concisely if the next winner

642
00:31:55,460 --> 00:32:02,029
is not equal to the clean undo central

643
00:31:57,200 --> 00:32:03,049
next then it's not right so that's how

644
00:32:02,029 --> 00:32:06,500
we would determine whether or not it's

645
00:32:03,049 --> 00:32:09,259
dirty anytime you hit save we're gonna

646
00:32:06,500 --> 00:32:10,549
save the thing here we don't really know

647
00:32:09,259 --> 00:32:12,730
what that's gonna look like yet so we're

648
00:32:10,549 --> 00:32:16,190
gonna kind of leave that for the moment

649
00:32:12,730 --> 00:32:18,019
but what we would like to do is say when

650
00:32:16,190 --> 00:32:19,670
we do save we do know that the clean

651
00:32:18,019 --> 00:32:31,450
undo sentinel next at the end of

652
00:32:19,670 --> 00:32:34,009
everything we do want that to be saved

653
00:32:31,450 --> 00:32:37,309
so whatever the undo sentinel was

654
00:32:34,009 --> 00:32:40,069
pointing to at the time right when we

655
00:32:37,309 --> 00:32:42,440
saved we want to save that as our clean

656
00:32:40,069 --> 00:32:47,149
marker because we know that that is the

657
00:32:42,440 --> 00:32:49,190
thing that means we don't have safe

658
00:32:47,150 --> 00:32:52,130
right so in either of these two cases

659
00:32:49,190 --> 00:32:53,779
that's gonna be the case and that's we

660
00:32:52,130 --> 00:32:57,500
just don't know what those features

661
00:32:53,779 --> 00:32:59,569
actually look like yet you know so and

662
00:32:57,500 --> 00:33:00,950
who knows maybe we won't even have a

663
00:32:59,569 --> 00:33:02,210
revert maybe you just have to restart

664
00:33:00,950 --> 00:33:05,960
the game if you want to revert I don't

665
00:33:02,210 --> 00:33:08,350
know we'll see we could probably put it

666
00:33:05,960 --> 00:33:08,350
in there anyway

667
00:33:14,249 --> 00:33:25,569
well actually I suppose technically

668
00:33:17,078 --> 00:33:37,989
revert is just this so if I was to say

669
00:33:25,569 --> 00:33:43,479
if I just made these to be calls that

670
00:33:37,989 --> 00:34:14,760
you could make I guess what I could say

671
00:33:43,479 --> 00:34:18,639
is if that's undo and that's redo so uh

672
00:34:14,760 --> 00:34:20,619
oops don't know why I just did that I

673
00:34:18,639 --> 00:34:23,048
was my head was thinking about the

674
00:34:20,619 --> 00:34:26,679
revert feature so if that's undo and

675
00:34:23,048 --> 00:34:28,628
that's redo then in theory if you wanted

676
00:34:26,679 --> 00:34:33,148
to revert I guess really all you're

677
00:34:28,628 --> 00:34:33,148
going to do is this

678
00:34:46,500 --> 00:34:58,358
right I mean is revert just keep undoing

679
00:34:55,389 --> 00:35:03,119
changes until you get back to the place

680
00:34:58,358 --> 00:35:03,119
where the file was before you saved it I

681
00:35:04,559 --> 00:35:10,829
mean immediately after you last saved it

682
00:35:06,969 --> 00:35:10,828
or loaded it if it's brand-new

683
00:35:41,230 --> 00:35:53,309
I mean I think that's actually all there

684
00:35:51,039 --> 00:35:53,309
is

685
00:36:00,699 --> 00:36:05,980
I don't know so there's a couple things

686
00:36:04,599 --> 00:36:09,599
here that we would want to do

687
00:36:05,980 --> 00:36:09,599
potentially I'll just point them out

688
00:36:10,588 --> 00:36:15,279
that we could implement a little bit

689
00:36:12,789 --> 00:36:18,190
later and all to stick it to do in there

690
00:36:15,280 --> 00:36:22,470
so that you can see it it's basically a

691
00:36:18,190 --> 00:36:27,639
thing that says to do we may want to

692
00:36:22,469 --> 00:36:34,179
group and it's together so that undo can

693
00:36:27,639 --> 00:36:41,909
undo more than one change at a time this

694
00:36:34,179 --> 00:36:48,879
facilitates undoing edit operations as

695
00:36:41,909 --> 00:36:52,088
the user perceives them rather than how

696
00:36:48,880 --> 00:36:55,720
they're implemented internally in the

697
00:36:52,088 --> 00:37:00,400
case of edits that edit multiple things

698
00:36:55,719 --> 00:37:03,338
at once and so you know like imagine we

699
00:37:00,400 --> 00:37:07,930
have a feature that's like clear that

700
00:37:03,338 --> 00:37:11,078
clears all the alignment points if we or

701
00:37:07,929 --> 00:37:13,568
like if we wanted revert to undo to undo

702
00:37:11,079 --> 00:37:17,260
a revert undoes the whole revert at once

703
00:37:13,568 --> 00:37:20,798
you know what I mean then you can

704
00:37:17,260 --> 00:37:22,720
imagine wanting to create a bulk undo

705
00:37:20,798 --> 00:37:23,920
that's just like here's all these

706
00:37:22,719 --> 00:37:25,629
in-game edits that are just you can just

707
00:37:23,920 --> 00:37:29,530
chain them together you know if you want

708
00:37:25,630 --> 00:37:31,059
to right so it'd be really easy for us

709
00:37:29,530 --> 00:37:32,650
to implement that and maybe we will but

710
00:37:31,059 --> 00:37:34,298
I just want to sketch that out for you

711
00:37:32,650 --> 00:37:36,670
really everything else is pretty

712
00:37:34,298 --> 00:37:37,889
straightforward but there you go so

713
00:37:36,670 --> 00:37:45,639
that's actually completely

714
00:37:37,889 --> 00:37:47,139
implementation of everything except for

715
00:37:45,639 --> 00:37:49,750
save which kind of needs to go through

716
00:37:47,139 --> 00:37:52,230
the asset system we have the ability to

717
00:37:49,750 --> 00:37:54,400
write changes back but we haven't really

718
00:37:52,230 --> 00:37:57,490
figured out how we want to do that yeah

719
00:37:54,400 --> 00:38:00,970
and so that's something that we're gonna

720
00:37:57,489 --> 00:38:02,469
have to look at right so save we'll have

721
00:38:00,969 --> 00:38:04,480
to implement but everything else here is

722
00:38:02,469 --> 00:38:07,239
pretty much sketched out now so this

723
00:38:04,480 --> 00:38:10,599
does all the editing it keeps undo

724
00:38:07,239 --> 00:38:11,618
changes everything looks good so really

725
00:38:10,599 --> 00:38:13,980
I think the only thing we're talking

726
00:38:11,619 --> 00:38:20,430
about now is we need some way

727
00:38:13,980 --> 00:38:22,769
sketching in this this UI so what I want

728
00:38:20,429 --> 00:38:26,460
to do here is again I don't really want

729
00:38:22,769 --> 00:38:31,679
to talk about UI as UI and the reason is

730
00:38:26,460 --> 00:38:33,780
because I don't really want the I don't

731
00:38:31,679 --> 00:38:35,279
want to confuse the user interface of

732
00:38:33,780 --> 00:38:37,560
the game with the user interface of the

733
00:38:35,280 --> 00:38:39,780
editor or the debug system so what I

734
00:38:37,559 --> 00:38:43,500
want to do is have like handmade dev UI

735
00:38:39,780 --> 00:38:47,060
h might be the right word for it you

736
00:38:43,500 --> 00:38:50,550
know I'm saying and handmade WI dot H

737
00:38:47,059 --> 00:38:52,980
will probably look something like this

738
00:38:50,550 --> 00:38:56,640
right and so what I want to do is start

739
00:38:52,980 --> 00:39:15,659
gathering up the dev UI stuff that I

740
00:38:56,639 --> 00:39:18,629
think you know like something like this

741
00:39:15,659 --> 00:39:21,629
you know what I mean where things that

742
00:39:18,630 --> 00:39:24,000
are clearly that I want in both systems

743
00:39:21,630 --> 00:39:26,789
unless I start pulling them out of here

744
00:39:24,000 --> 00:39:29,550
and putting them into here right and

745
00:39:26,789 --> 00:39:34,259
then I'll force the debug system to go

746
00:39:29,550 --> 00:39:40,440
through this stuff and that's how we

747
00:39:34,260 --> 00:39:44,820
will that's how we will begin to use the

748
00:39:40,440 --> 00:39:48,210
same code in both places right so I'm

749
00:39:44,820 --> 00:39:51,300
just gonna start only with the text

750
00:39:48,210 --> 00:39:55,260
output function so this function here is

751
00:39:51,300 --> 00:39:58,980
obviously very useful and I want to be

752
00:39:55,260 --> 00:40:04,380
able to do it I keep forgetting I don't

753
00:39:58,980 --> 00:40:06,420
have my I need to update my for coder I

754
00:40:04,380 --> 00:40:07,769
haven't copied like this is still an

755
00:40:06,420 --> 00:40:12,599
older version of our code or I haven't

756
00:40:07,769 --> 00:40:15,869
updated my for coder to the new one so I

757
00:40:12,599 --> 00:40:18,599
forget that I can't see to open the new

758
00:40:15,869 --> 00:40:22,140
file automatically I can do that on the

759
00:40:18,599 --> 00:40:27,598
new one so anyway I want this text off

760
00:40:22,139 --> 00:40:30,389
here to be shared and so what happens

761
00:40:27,599 --> 00:40:34,829
is the things that can't be shared are

762
00:40:30,389 --> 00:40:36,748
like the debug state stuff and the debug

763
00:40:34,829 --> 00:40:40,440
state stuff is necessary in a couple

764
00:40:36,748 --> 00:40:42,118
places for a couple things right so if I

765
00:40:40,440 --> 00:40:47,099
was to pull out all the things that I

766
00:40:42,119 --> 00:40:50,430
needed it would look like this right and

767
00:40:47,099 --> 00:40:53,309
so in here we would just say look is

768
00:40:50,429 --> 00:40:57,798
there font instead of all the rest of

769
00:40:53,309 --> 00:40:57,798
that stuff we would need a font scale

770
00:40:58,400 --> 00:41:02,999
and we don't know where we're gonna get

771
00:41:01,259 --> 00:41:08,759
that exactly I guess we're gonna get it

772
00:41:02,998 --> 00:41:10,738
here for the time being so we got the

773
00:41:08,759 --> 00:41:13,139
font scale pulled out what else we got

774
00:41:10,739 --> 00:41:16,249
for debug state and then we've got like

775
00:41:13,139 --> 00:41:22,440
a shadow transform and a text transform

776
00:41:16,248 --> 00:41:25,588
and those were just two things that were

777
00:41:22,440 --> 00:41:28,048
designed to put because our stuff was

778
00:41:25,588 --> 00:41:30,989
being sorted that was designed to put

779
00:41:28,048 --> 00:41:33,018
things in front of or behind right so

780
00:41:30,989 --> 00:41:37,469
like you know things got sorted into

781
00:41:33,018 --> 00:41:40,008
buckets where the shadows went behind

782
00:41:37,469 --> 00:41:42,119
the things that were in front of them I

783
00:41:40,009 --> 00:41:44,278
don't know that we really want them

784
00:41:42,119 --> 00:41:46,528
anymore we forced ourselves to do that

785
00:41:44,278 --> 00:41:49,920
because our render previously sorted

786
00:41:46,528 --> 00:41:52,079
everything our renderer no longer has to

787
00:41:49,920 --> 00:41:54,960
do that it can just not sort like you

788
00:41:52,079 --> 00:41:57,059
can just call it without the depth sort

789
00:41:54,960 --> 00:42:01,650
stuff on and it will just render things

790
00:41:57,059 --> 00:42:03,359
in the order in which they come so I

791
00:42:01,650 --> 00:42:06,028
don't really know that we want those two

792
00:42:03,358 --> 00:42:08,429
things but I'm gonna say that we still

793
00:42:06,028 --> 00:42:10,259
have them anyway I think that's what

794
00:42:08,429 --> 00:42:12,199
called a render object transform or an

795
00:42:10,259 --> 00:42:18,329
object transform or something like that

796
00:42:12,199 --> 00:42:22,679
yeah so we have a shadow transform and a

797
00:42:18,329 --> 00:42:28,880
text transform I think right and those

798
00:42:22,679 --> 00:42:28,879
things were coming from here

799
00:42:30,079 --> 00:42:43,530
and if we had some way of getting all of

800
00:42:33,449 --> 00:42:45,239
those then I think see if we had some

801
00:42:43,530 --> 00:42:48,990
way of getting all of these things then

802
00:42:45,239 --> 00:42:52,259
I think we are good to go right because

803
00:42:48,989 --> 00:42:53,909
the rest of this stuff is self-contained

804
00:42:52,260 --> 00:42:57,200
it looks up all of the rest of the

805
00:42:53,909 --> 00:43:00,779
things it needs using the asset system

806
00:42:57,199 --> 00:43:02,279
and so it really needs this is the set

807
00:43:00,780 --> 00:43:07,970
of information that it needs in addition

808
00:43:02,280 --> 00:43:12,089
to just the basics for for you know

809
00:43:07,969 --> 00:43:14,250
printing out stuff so I think I also

810
00:43:12,088 --> 00:43:16,409
don't know if font scale actually does

811
00:43:14,250 --> 00:43:20,909
anything ever we could potentially

812
00:43:16,409 --> 00:43:23,399
remove that but you know so the natural

813
00:43:20,909 --> 00:43:26,909
thing to do here I would argue is just

814
00:43:23,400 --> 00:43:29,910
say like make a struck that has exactly

815
00:43:26,909 --> 00:43:33,690
things in it that we want I mean that's

816
00:43:29,909 --> 00:43:35,460
what we wanted right and you can imagine

817
00:43:33,690 --> 00:43:37,440
the version of this that gets made for

818
00:43:35,460 --> 00:43:45,179
the debug system it would just look like

819
00:43:37,440 --> 00:43:48,780
a thing that copies those over right but

820
00:43:45,179 --> 00:43:50,789
this is what you would need and we could

821
00:43:48,780 --> 00:43:59,339
make that look like this in which case

822
00:43:50,789 --> 00:44:03,630
it would just be that sorry but assuming

823
00:43:59,338 --> 00:44:05,068
that we filled all of this out I also

824
00:44:03,630 --> 00:44:06,480
don't know why the spots ago wouldn't be

825
00:44:05,068 --> 00:44:08,969
baked into these but maybe that's not I

826
00:44:06,480 --> 00:44:11,548
don't know doesn't matter point being if

827
00:44:08,969 --> 00:44:13,588
we have all of these passed through this

828
00:44:11,548 --> 00:44:19,730
is basically like what we need to know

829
00:44:13,588 --> 00:44:19,730
for our like dev UI

830
00:44:23,969 --> 00:44:27,159
Debu I context I don't know what you

831
00:44:26,230 --> 00:44:29,740
want to call it but it's the thing that

832
00:44:27,159 --> 00:44:33,098
allows us to to draw and do stuff right

833
00:44:29,739 --> 00:44:37,750
so if we just change this to saying we

834
00:44:33,099 --> 00:44:39,460
have a context pointer right and the

835
00:44:37,750 --> 00:44:48,400
context pointer is the thing that would

836
00:44:39,460 --> 00:44:52,659
get us all of these things then we can

837
00:44:48,400 --> 00:44:54,250
certainly pass we can certainly pass

838
00:44:52,659 --> 00:44:55,750
that out here I don't know that render

839
00:44:54,250 --> 00:44:58,929
group I don't know if that wants to

840
00:44:55,750 --> 00:45:00,909
actually be a pointer there and not it

841
00:44:58,929 --> 00:45:02,558
may want to just be one of these but I'm

842
00:45:00,909 --> 00:45:04,659
not sure so for the moment we'll leave

843
00:45:02,559 --> 00:45:06,460
it as a pointer it's fine so we're gonna

844
00:45:04,659 --> 00:45:08,379
do this and then once we grab all those

845
00:45:06,460 --> 00:45:10,358
things out we're good to go

846
00:45:08,380 --> 00:45:11,588
that means that it went in our startup

847
00:45:10,358 --> 00:45:21,219
we would need something that basically

848
00:45:11,588 --> 00:45:22,568
does this for the debug system you know

849
00:45:21,219 --> 00:45:32,980
what I'm saying so something that would

850
00:45:22,568 --> 00:45:38,108
prep one of these you know how we want

851
00:45:32,980 --> 00:45:41,010
to I kind of like that as a word but I

852
00:45:38,108 --> 00:45:41,009
do do e

853
00:45:42,000 --> 00:45:45,760
but I'm going to actually capitalize it

854
00:45:44,769 --> 00:45:48,219
because camelcase

855
00:45:45,760 --> 00:45:53,140
if you're you're in for the camelcase

856
00:45:48,219 --> 00:45:56,409
you might as well keep it going so we

857
00:45:53,139 --> 00:46:02,048
would want to do Oh what did I do that

858
00:45:56,409 --> 00:46:04,269
was totally not what I wanted I got

859
00:46:02,048 --> 00:46:05,009
carried away there with the word de veau

860
00:46:04,269 --> 00:46:10,239
e

861
00:46:05,010 --> 00:46:12,869
there we go that's what I actually

862
00:46:10,239 --> 00:46:12,868
wanted to do

863
00:46:14,869 --> 00:46:22,429
um so we could do that I don't know if

864
00:46:19,730 --> 00:46:31,130
we want instead to do this I mean that's

865
00:46:22,429 --> 00:46:39,079
another option right maybe that makes

866
00:46:31,130 --> 00:46:41,030
more sense but the reason that I'm not

867
00:46:39,079 --> 00:46:43,670
as interested in that the reason I don't

868
00:46:41,030 --> 00:46:45,530
love that is because I could see dev UI

869
00:46:43,670 --> 00:46:47,990
being its own thing that stores like

870
00:46:45,530 --> 00:46:50,000
State and stuff so the WI context is

871
00:46:47,989 --> 00:46:52,069
more the thing that's like a drawing

872
00:46:50,000 --> 00:47:00,409
pass you know it could be alternatively

873
00:46:52,070 --> 00:47:07,220
called WI pass you know what I mean so I

874
00:47:00,409 --> 00:47:11,420
don't know so if I were to go that route

875
00:47:07,219 --> 00:47:15,379
with it then inside the debug system and

876
00:47:11,420 --> 00:47:18,920
anywhere that previously someone was so

877
00:47:15,380 --> 00:47:24,880
like you know inside just go grab like

878
00:47:18,920 --> 00:47:24,880
inside the debug you know startup stuff

879
00:47:25,389 --> 00:47:30,230
then what we're gonna do is in both of

880
00:47:27,650 --> 00:47:33,889
these places like in the debug system

881
00:47:30,230 --> 00:47:37,369
where they're no longer necessary are

882
00:47:33,889 --> 00:47:40,750
they really yeah

883
00:47:37,369 --> 00:47:40,750
is that actually true

884
00:47:50,300 --> 00:47:56,269
I mean they're getting used are we sure

885
00:47:52,849 --> 00:47:58,789
they're not necessary all right um look

886
00:47:56,269 --> 00:48:00,739
at that later anyway so in here we know

887
00:47:58,789 --> 00:48:02,570
that we need one of these things and we

888
00:48:00,739 --> 00:48:08,569
you know so we know we we need one of

889
00:48:02,570 --> 00:48:10,519
these WI contexts and we know that we

890
00:48:08,570 --> 00:48:12,620
want to initialize that so when we do

891
00:48:10,519 --> 00:48:15,380
our luck debug startup stuff right so

892
00:48:12,619 --> 00:48:18,079
everything gets initialized once we have

893
00:48:15,380 --> 00:48:20,210
everything ready to go here I want to

894
00:48:18,079 --> 00:48:24,409
create one of these things so I want to

895
00:48:20,210 --> 00:48:30,949
say like dev UI context you know does

896
00:48:24,409 --> 00:48:40,460
that prep probably wants to be that so

897
00:48:30,949 --> 00:48:42,409
if I've got one of those once I grab it

898
00:48:40,460 --> 00:48:45,860
then I want to be able to fill it out

899
00:48:42,409 --> 00:48:47,379
here I've already done that that's what

900
00:48:45,860 --> 00:48:50,809
it is

901
00:48:47,380 --> 00:48:55,039
right and so that allows me now to call

902
00:48:50,809 --> 00:48:58,099
this call anytime I want to let me go

903
00:48:55,039 --> 00:49:00,590
ahead and pull this out here and then

904
00:48:58,099 --> 00:49:06,799
the text op is just the same thing but

905
00:49:00,590 --> 00:49:07,550
it's you know the WI stuff and that's

906
00:49:06,800 --> 00:49:13,360
about it

907
00:49:07,550 --> 00:49:13,360
so there's WI techstop thing

908
00:49:17,489 --> 00:49:25,429
and any here we would have to do this

909
00:49:33,619 --> 00:49:38,640
and so now we need to do is actually

910
00:49:36,239 --> 00:49:41,098
provide those things to the system

911
00:49:38,639 --> 00:49:51,269
because obviously you know the debug

912
00:49:41,099 --> 00:49:53,280
system here we go so in the debug system

913
00:49:51,269 --> 00:50:03,780
these things need to be included

914
00:49:53,280 --> 00:50:06,589
somewhere want to see where those

915
00:50:03,780 --> 00:50:06,589
actually get included

916
00:50:11,130 --> 00:50:18,479
all right so I guess inside handmade H

917
00:50:15,420 --> 00:50:21,119
we can just put those in here I'm not

918
00:50:18,478 --> 00:50:30,389
sure where they should go at the moment

919
00:50:21,119 --> 00:50:33,650
I'll put them in here for the moment and

920
00:50:30,389 --> 00:50:33,650
we'll sort of push them there oops

921
00:50:34,728 --> 00:50:50,998
what's going on so I can just free to

922
00:50:48,929 --> 00:50:52,469
find that because that'll get to find a

923
00:50:50,998 --> 00:50:54,889
little bit later I don't know what else

924
00:50:52,469 --> 00:50:54,889
isn't there

925
00:51:04,239 --> 00:51:08,669
did we end up with this in the wrong

926
00:51:06,309 --> 00:51:08,670
place

927
00:51:15,170 --> 00:51:23,180
so we've got WI not H and WI dot CPP so

928
00:51:19,769 --> 00:51:23,179
I must have just had a typo

929
00:51:38,460 --> 00:51:55,269
okay um looking at these this should

930
00:51:49,599 --> 00:52:02,889
probably be called font info so let's

931
00:51:55,269 --> 00:52:05,860
keep going from there this is actually

932
00:52:02,889 --> 00:52:09,219
the get asset stuff and okay so we have

933
00:52:05,860 --> 00:52:11,349
this is actually all in the other code

934
00:52:09,219 --> 00:52:13,299
which I don't really want to deal with

935
00:52:11,349 --> 00:52:19,420
right now so I think probably what I'll

936
00:52:13,300 --> 00:52:30,570
do here to me is I'm just gonna nuke all

937
00:52:19,420 --> 00:52:33,960
of this stuff while I just verify that

938
00:52:30,570 --> 00:52:33,960
we didn't break anything

939
00:52:34,590 --> 00:52:39,100
sorry that's behind my head there I

940
00:52:36,880 --> 00:52:40,480
don't I can't see it either

941
00:52:39,099 --> 00:52:45,579
but I don't need to because I'm just

942
00:52:40,480 --> 00:52:46,750
making it a dummy function and so all

943
00:52:45,579 --> 00:52:48,219
I'm gonna do is just nuke that because I

944
00:52:46,750 --> 00:52:50,619
don't want to look at those areas yet I

945
00:52:48,219 --> 00:52:52,209
want to look at these areas first so

946
00:52:50,619 --> 00:52:54,819
what I want to do is make sure that the

947
00:52:52,210 --> 00:53:02,170
debug system still works and can use

948
00:52:54,820 --> 00:53:04,720
that can use that same system like can

949
00:53:02,170 --> 00:53:06,990
can use that thing we pulled out and and

950
00:53:04,719 --> 00:53:09,849
draw properly because that's what I want

951
00:53:06,989 --> 00:53:17,159
to focus on first make sure all that's

952
00:53:09,849 --> 00:53:17,159
working that part of it

953
00:53:20,210 --> 00:53:34,780
that's actually fun info what is this we

954
00:53:29,358 --> 00:53:34,779
must have accidentally deleted that

955
00:53:45,070 --> 00:54:08,440
and this is just because we need to do

956
00:53:48,190 --> 00:54:12,849
this right so I think that's good and so

957
00:54:08,440 --> 00:54:14,260
now we can call the text out thing from

958
00:54:12,849 --> 00:54:17,259
anywhere and you can see that it's still

959
00:54:14,260 --> 00:54:19,710
working just fine so that's good and

960
00:54:17,260 --> 00:54:22,540
what we would like to do probably is

961
00:54:19,710 --> 00:54:25,389
move some of the other font stuff out

962
00:54:22,539 --> 00:54:27,400
into there like you know the tooltips

963
00:54:25,389 --> 00:54:32,679
and stuff too so I think we want to like

964
00:54:27,400 --> 00:54:36,220
we want like the tooltip buffer to be to

965
00:54:32,679 --> 00:54:39,009
be there too would be my guess um so we

966
00:54:36,219 --> 00:54:40,869
can see what we want to do about that in

967
00:54:39,010 --> 00:54:44,500
a second we'll think about that a little

968
00:54:40,869 --> 00:54:46,869
bit more later all right so now let's

969
00:54:44,500 --> 00:54:48,420
take a look back to the in-game editor

970
00:54:46,869 --> 00:54:51,579
cuz now that I pulled that function out

971
00:54:48,420 --> 00:54:54,789
now I want to debug this thing by

972
00:54:51,579 --> 00:54:57,489
stubbing out these other pieces and and

973
00:54:54,789 --> 00:54:59,019
kind of going from there so let's start

974
00:54:57,489 --> 00:55:00,369
by getting all of this stuff compiling

975
00:54:59,019 --> 00:55:04,179
and stubbing out the functions that we

976
00:55:00,369 --> 00:55:09,190
don't have yet so here this get asset

977
00:55:04,179 --> 00:55:14,289
call that looks like it returns a memory

978
00:55:09,190 --> 00:55:17,860
header I'm not sure why it does that I'm

979
00:55:14,289 --> 00:55:21,429
not sure why it it returns a memory

980
00:55:17,860 --> 00:55:30,010
header so I'm gonna look just so I can

981
00:55:21,429 --> 00:55:32,969
find out why right so it returns a

982
00:55:30,010 --> 00:55:32,970
memory header

983
00:55:36,179 --> 00:55:51,669
because it affects which one was the

984
00:55:38,949 --> 00:55:57,189
most recently used so this really isn't

985
00:55:51,670 --> 00:55:59,700
yet asset per se it's really good asset

986
00:55:57,190 --> 00:55:59,700
memory header

987
00:56:08,690 --> 00:56:31,650
which I may update it to reflect this is

988
00:56:26,460 --> 00:56:36,679
the action will get asset call why these

989
00:56:31,650 --> 00:56:36,680
are in line I have no idea they just are

990
00:56:36,739 --> 00:56:40,649
so that's actually what we wanted for

991
00:56:39,090 --> 00:56:43,200
good asset and this is good asset memory

992
00:56:40,650 --> 00:56:45,389
header they're definitely different and

993
00:56:43,199 --> 00:56:57,629
so these calls here really should be get

994
00:56:45,389 --> 00:56:59,848
a Sat memory header in here we need the

995
00:56:57,630 --> 00:57:01,920
actual bitmap so here we should do an

996
00:56:59,849 --> 00:57:04,099
assertion that this asset is in fact a

997
00:57:01,920 --> 00:57:04,099
bitmap

998
00:57:21,750 --> 00:57:28,449
that's actually correct so we want the

999
00:57:25,420 --> 00:57:37,960
HHA inside we want the actual file

1000
00:57:28,449 --> 00:57:43,089
information so we want that let's see

1001
00:57:37,960 --> 00:57:47,829
what else a line point edit so we need

1002
00:57:43,090 --> 00:57:50,530
this to exist so what we want to do here

1003
00:57:47,829 --> 00:57:54,190
is we want to have a way of having the

1004
00:57:50,530 --> 00:57:55,269
in-game editor allocate change lists and

1005
00:57:54,190 --> 00:57:56,889
they never go away

1006
00:57:55,269 --> 00:58:00,780
so those things basically these are

1007
00:57:56,889 --> 00:58:00,779
allocations that are never freed ever

1008
00:58:03,150 --> 00:58:09,070
you just want to pile them up for

1009
00:58:05,769 --> 00:58:11,259
eternity we could try to recycle them if

1010
00:58:09,070 --> 00:58:12,550
we get too many of them but hopefully we

1011
00:58:11,260 --> 00:58:14,680
would never get too many of them cuz you

1012
00:58:12,550 --> 00:58:17,140
really don't ever want your undo list to

1013
00:58:14,679 --> 00:58:19,210
go away so you want to just keep piling

1014
00:58:17,139 --> 00:58:22,569
them up until virtual memory hits right

1015
00:58:19,210 --> 00:58:27,130
which is a lot of edits so the in-game

1016
00:58:22,570 --> 00:58:28,870
editor here when we do an allocation we

1017
00:58:27,130 --> 00:58:30,760
want to allocate by type so what we

1018
00:58:28,869 --> 00:58:34,480
really want to do here is say we need

1019
00:58:30,760 --> 00:58:37,800
two things we need the type of change

1020
00:58:34,480 --> 00:58:39,909
we're doing right to edit you were doing

1021
00:58:37,800 --> 00:58:46,150
so this is the type and then we also

1022
00:58:39,909 --> 00:58:47,259
need the well I guess that is the only

1023
00:58:46,150 --> 00:58:49,780
thing we need because the size doesn't

1024
00:58:47,260 --> 00:58:52,000
change to see Union so we've got a

1025
00:58:49,780 --> 00:58:57,280
result here the assault result is just

1026
00:58:52,000 --> 00:59:00,090
going to be a push struct the second say

1027
00:58:57,280 --> 00:59:00,090
it's an in-game edit

1028
00:59:06,670 --> 00:59:10,150
you know what no I don't wanna do that

1029
00:59:08,559 --> 00:59:12,549
I'm gonna do it as a you wait we'll see

1030
00:59:10,150 --> 00:59:16,900
why I'm second so if I take the ingame

1031
00:59:12,550 --> 00:59:18,160
edit here and I just say well even that

1032
00:59:16,900 --> 00:59:21,340
I don't have to do yeah it really is

1033
00:59:18,159 --> 00:59:25,299
just a void star anyway so if I take the

1034
00:59:21,340 --> 00:59:32,289
in-game edit here and I just say look I

1035
00:59:25,300 --> 00:59:35,800
want to take the I want to make one of

1036
00:59:32,289 --> 00:59:41,230
these I need some like undo memory here

1037
00:59:35,800 --> 00:59:46,420
right like this is the undo memory we're

1038
00:59:41,230 --> 00:59:48,639
gonna use so I want some undo memory I

1039
00:59:46,420 --> 00:59:50,139
know that it's gonna be this type so I'm

1040
00:59:48,639 --> 00:59:57,039
gonna push one of these in game and it's

1041
00:59:50,139 --> 01:00:01,329
trucks on you know I changed my mind I'm

1042
00:59:57,039 --> 01:00:03,009
gonna do this so we're gonna do one of

1043
01:00:01,329 --> 01:00:04,750
these in game instructs when we get the

1044
01:00:03,010 --> 01:00:09,360
result back we're gonna set the type

1045
01:00:04,750 --> 01:00:13,409
equal to the type that we're told and

1046
01:00:09,360 --> 01:00:17,440
we're we don't want it to actually have

1047
01:00:13,409 --> 01:00:19,269
any membership yeah it's just kind of

1048
01:00:17,440 --> 01:00:20,679
hanging out as its own list so it's next

1049
01:00:19,269 --> 01:00:24,489
in previous pointers just point to

1050
01:00:20,679 --> 01:00:27,549
itself and that's all that happens so

1051
01:00:24,489 --> 01:00:32,500
then we can return it and it's good to

1052
01:00:27,550 --> 01:00:34,480
go I think that's everything and so then

1053
01:00:32,500 --> 01:00:36,369
I just need a pound to find cure that'll

1054
01:00:34,480 --> 01:00:38,800
do the thing that I wanted to do with

1055
01:00:36,369 --> 01:00:40,750
the type so what I want to do is say

1056
01:00:38,800 --> 01:00:42,789
whatever the type is that you're trying

1057
01:00:40,750 --> 01:00:50,889
to push on here

1058
01:00:42,789 --> 01:00:53,590
I want to allocate one of those by

1059
01:00:50,889 --> 01:00:58,449
passing the type here with this prefixed

1060
01:00:53,590 --> 01:01:00,430
to it and then I'm going to also cast

1061
01:00:58,449 --> 01:01:02,980
that type so you can see why I wanted

1062
01:01:00,429 --> 01:01:08,829
this to be that thing oh not cast sorry

1063
01:01:02,980 --> 01:01:15,730
I want to reference that type so like

1064
01:01:08,829 --> 01:01:18,719
this right so I'm going to basically get

1065
01:01:15,730 --> 01:01:21,219
you the address of that sub field and

1066
01:01:18,719 --> 01:01:23,109
I'm also gonna use that to pass type so

1067
01:01:21,219 --> 01:01:24,730
that's why I named it the same because

1068
01:01:23,110 --> 01:01:26,230
then you could just pass one thing to

1069
01:01:24,730 --> 01:01:28,659
the allocate editor at it and you get

1070
01:01:26,230 --> 01:01:33,070
the right member and the right type

1071
01:01:28,659 --> 01:01:36,219
field to find for free right that's just

1072
01:01:33,070 --> 01:01:38,800
a little convenience there that helps

1073
01:01:36,219 --> 01:01:44,099
keep things simpler for everyone who's

1074
01:01:38,800 --> 01:01:49,600
calling you so we need some undo memory

1075
01:01:44,099 --> 01:01:51,429
what else do we need point index you're

1076
01:01:49,599 --> 01:02:12,909
telling me that's not a thing it's a

1077
01:01:51,429 --> 01:02:17,009
line point index all right this is and

1078
01:02:12,909 --> 01:02:17,009
this is edit changed

1079
01:02:36,480 --> 01:02:47,219
what else we got should just put this

1080
01:02:44,039 --> 01:02:55,019
undo memory in there so if I want some

1081
01:02:47,219 --> 01:02:58,649
memory for this sort of thing I should

1082
01:02:55,019 --> 01:03:01,380
be able to create one of these memory

1083
01:02:58,650 --> 01:03:05,460
arenas just from whole cloth

1084
01:03:01,380 --> 01:03:08,849
if the in-game editor is gonna be here I

1085
01:03:05,460 --> 01:03:12,809
should be able to say that there's

1086
01:03:08,849 --> 01:03:18,230
in-game memory or I should say undo

1087
01:03:12,809 --> 01:03:26,369
memory here and that undo memory should

1088
01:03:18,230 --> 01:03:29,750
probably be clear to zero bull I want to

1089
01:03:26,369 --> 01:03:33,840
say I I don't know

1090
01:03:29,750 --> 01:03:36,480
we'll find out so we also want to be non

1091
01:03:33,840 --> 01:03:38,160
restored memory so I would like to

1092
01:03:36,480 --> 01:03:39,809
initialize that because I would like it

1093
01:03:38,159 --> 01:03:42,799
to be non restoring memory if possible

1094
01:03:39,809 --> 01:03:42,799
here what I mean

1095
01:03:53,039 --> 01:04:01,889
so I want the allocation parameters for

1096
01:03:57,429 --> 01:04:05,139
it to be platform memory non restored I

1097
01:04:01,889 --> 01:04:08,858
don't think there's anything else that

1098
01:04:05,139 --> 01:04:10,960
you really need there so you know we

1099
01:04:08,858 --> 01:04:22,569
could just have it so that the memory

1100
01:04:10,960 --> 01:04:29,108
arenas allocation flags are just set to

1101
01:04:22,570 --> 01:04:38,700
that so I think I think when we call in

1102
01:04:29,108 --> 01:04:38,699
and the editor actually does anything I

1103
01:04:42,059 --> 01:04:46,139
mean we should be able to do this

1104
01:05:01,500 --> 01:05:05,400
so we can create an it call that'll do

1105
01:05:03,940 --> 01:05:11,200
it

1106
01:05:05,400 --> 01:05:19,269
at some point in here this all looks

1107
01:05:11,199 --> 01:05:21,358
fine just like I was pulling off the

1108
01:05:19,268 --> 01:05:28,538
wrong struct in a bunch of these cases

1109
01:05:21,358 --> 01:05:36,369
other than that so now we sort of have a

1110
01:05:28,539 --> 01:05:49,170
couple just like it wants an actual

1111
01:05:36,369 --> 01:05:52,318
point on these so that I like bit amp

1112
01:05:49,170 --> 01:05:56,619
bit amp sounds like some kind of a like

1113
01:05:52,318 --> 01:05:57,849
chiptunes editor so it looks like now

1114
01:05:56,619 --> 01:06:01,318
we're down to just unimplemented

1115
01:05:57,849 --> 01:06:05,400
functions right

1116
01:06:01,318 --> 01:06:05,400
which is where we want to be

1117
01:06:16,469 --> 01:06:21,639
so I think that's everything that we

1118
01:06:19,179 --> 01:06:24,839
wanted there I'm gonna pop over to dev

1119
01:06:21,639 --> 01:06:28,179
you eye and I'm gonna stub those

1120
01:06:24,840 --> 01:06:30,039
functions out real quick and then we're

1121
01:06:28,179 --> 01:07:03,279
going to have to start working on the

1122
01:06:30,039 --> 01:07:11,279
merge which will take a while that's

1123
01:07:03,280 --> 01:07:11,280
label there's an enabled flag

1124
01:07:27,929 --> 01:07:49,029
there's the stuff that allows us to kind

1125
01:07:30,849 --> 01:07:51,839
of pick those pieces apart there here's

1126
01:07:49,030 --> 01:07:55,510
our editable x' so these are things that

1127
01:07:51,840 --> 01:07:58,360
we would pass addresses to because the

1128
01:07:55,510 --> 01:08:02,220
person who's calling them needs to be

1129
01:07:58,360 --> 01:08:02,220
able to change them so

1130
01:08:21,680 --> 01:08:43,500
and we also had it at pxy and this one

1131
01:08:39,390 --> 01:08:46,940
took pounds so you kind of knew what the

1132
01:08:43,500 --> 01:08:46,939
range was that you could move it in

1133
01:08:51,199 --> 01:09:00,079
alright so did I miss begin section I

1134
01:09:00,979 --> 01:09:25,259
did all right so I think that's all the

1135
01:09:23,729 --> 01:09:26,309
functions were calling at the moment let

1136
01:09:25,260 --> 01:09:27,570
me see if that's true there might be a

1137
01:09:26,310 --> 01:09:30,089
couple of it there's actually there's a

1138
01:09:27,569 --> 01:09:32,239
couple in the other thing that where

1139
01:09:30,088 --> 01:09:34,439
that's not true

1140
01:09:32,239 --> 01:09:36,239
this is all the UI functions we're

1141
01:09:34,439 --> 01:09:40,189
calling but we have to implement one or

1142
01:09:36,239 --> 01:09:40,189
two functions in the actual

1143
01:09:56,189 --> 01:10:01,689
section needs a I see but anyway sorry I

1144
01:09:59,288 --> 01:10:05,738
got distracted there there's a couple

1145
01:10:01,689 --> 01:10:07,000
things in the actual non the the adding

1146
01:10:05,738 --> 01:10:08,500
things and removing things from the list

1147
01:10:07,000 --> 01:10:10,029
stuff like that that we didn't implement

1148
01:10:08,500 --> 01:10:12,550
over there actually so technically

1149
01:10:10,029 --> 01:10:14,559
that's not there are a couple of other

1150
01:10:12,550 --> 01:10:15,788
functions that we need to define but I

1151
01:10:14,559 --> 01:10:19,599
was talking about I think we got all the

1152
01:10:15,788 --> 01:10:23,519
UI functions me to define I'm not sure

1153
01:10:19,599 --> 01:10:23,520
what the problem is with begins section

1154
01:10:25,078 --> 01:10:29,558
where is layout

1155
01:10:26,920 --> 01:10:45,969
I guess layout doesn't exist is the

1156
01:10:29,559 --> 01:10:47,860
problem so I'm gonna make it exist we

1157
01:10:45,969 --> 01:10:53,828
need button to have a default parameter

1158
01:10:47,859 --> 01:10:59,460
so if you don't specify false or true

1159
01:10:53,828 --> 01:10:59,460
it's just always assumed to be true

1160
01:11:02,729 --> 01:11:07,419
that's true so edit a line point

1161
01:11:05,380 --> 01:11:12,550
actually needs to take the asset index

1162
01:11:07,420 --> 01:11:15,750
and the point index and that will have

1163
01:11:12,550 --> 01:11:15,750
to take the assets as well

1164
01:11:30,929 --> 01:11:40,170
so how many arguments does it take then

1165
01:11:34,998 --> 01:11:43,349
so it takes the editor but we don't know

1166
01:11:40,170 --> 01:11:48,029
why oh yes because it needs to allocate

1167
01:11:43,349 --> 01:11:49,679
something that's why we probably should

1168
01:11:48,029 --> 01:11:51,719
just have the assets attached to the

1169
01:11:49,679 --> 01:11:53,399
editor because we're having to pass them

1170
01:11:51,719 --> 01:11:55,380
around everywhere here and it's not

1171
01:11:53,399 --> 01:11:57,538
something that changes so we should

1172
01:11:55,380 --> 01:12:00,538
probably just nuke that and have that be

1173
01:11:57,538 --> 01:12:05,658
accessible from the editor itself seems

1174
01:12:00,538 --> 01:12:05,658
like a sort of more sensible thing to do

1175
01:12:06,050 --> 01:12:09,320
so yeah

1176
01:12:18,559 --> 01:12:23,909
so now we get down to some of these

1177
01:12:20,639 --> 01:12:24,900
things here pop first push first those

1178
01:12:23,908 --> 01:12:28,589
are things that should be pretty

1179
01:12:24,899 --> 01:12:52,348
straightforward to do so let's go ahead

1180
01:12:28,590 --> 01:12:53,940
and put them in there so what we want to

1181
01:12:52,349 --> 01:12:55,770
do is we want to have a pop first call

1182
01:12:53,939 --> 01:12:57,210
that takes whatever the link is that

1183
01:12:55,770 --> 01:13:00,409
you're looking at previously it takes

1184
01:12:57,210 --> 01:13:06,710
its next pointer and pops that off and

1185
01:13:00,408 --> 01:13:06,710
so what that's gonna do is first of all

1186
01:13:08,840 --> 01:13:15,719
assume that there isn't something it'll

1187
01:13:11,939 --> 01:13:18,000
check to see that it's not circular so

1188
01:13:15,719 --> 01:13:20,429
it's not like a little art I should say

1189
01:13:18,000 --> 01:13:22,649
dub like just one thing and assuming

1190
01:13:20,429 --> 01:13:27,149
it's not then it will actually like

1191
01:13:22,649 --> 01:13:31,879
unlink whatever that one is that's after

1192
01:13:27,149 --> 01:13:35,129
it so it'll unlink previous/next right

1193
01:13:31,880 --> 01:13:39,389
and return that so it'll just unlink

1194
01:13:35,130 --> 01:13:42,538
this one and it'll it'll return that one

1195
01:13:39,389 --> 01:13:44,429
as the result from the pop first the

1196
01:13:42,538 --> 01:13:45,750
push first doesn't really need to check

1197
01:13:44,429 --> 01:13:50,429
anything because it knows it's gonna

1198
01:13:45,750 --> 01:13:54,658
actually do like that sort of thing so

1199
01:13:50,429 --> 01:13:56,429
we want to just do the link like so and

1200
01:13:54,658 --> 01:14:01,879
so on here we'll just have our two basic

1201
01:13:56,429 --> 01:14:01,880
link list functions link and unlink

1202
01:14:09,560 --> 01:14:15,170
not something like this so if we want to

1203
01:14:12,930 --> 01:14:17,340
unlink something we only need that thing

1204
01:14:15,170 --> 01:14:20,219
and if we want to link something we need

1205
01:14:17,340 --> 01:14:22,739
to know where to link it in so if we

1206
01:14:20,219 --> 01:14:26,399
want to do the unlink operation all we

1207
01:14:22,738 --> 01:14:28,529
need to do is say whatever the thing was

1208
01:14:26,399 --> 01:14:30,769
that was before us is now going to jump

1209
01:14:28,529 --> 01:14:33,630
and point to the thing that was after us

1210
01:14:30,770 --> 01:14:38,210
and similarly what we're gonna do in the

1211
01:14:33,630 --> 01:14:40,469
reverse case right is is similar right

1212
01:14:38,210 --> 01:14:42,180
so you want to take the previous thing

1213
01:14:40,469 --> 01:14:43,350
and make its next pointer point after us

1214
01:14:42,180 --> 01:14:44,789
we're gonna take the next thing and make

1215
01:14:43,350 --> 01:14:47,539
its previous thing to that point behind

1216
01:14:44,789 --> 01:14:51,840
us and then we're done

1217
01:14:47,539 --> 01:14:55,590
then we just want to sort of get us

1218
01:14:51,840 --> 01:14:57,029
linked up to ourselves right if you want

1219
01:14:55,590 --> 01:15:01,739
to link something in then we need the

1220
01:14:57,029 --> 01:15:03,210
previous next pointer to point to us we

1221
01:15:01,738 --> 01:15:05,218
can do this a little bit more cleanly

1222
01:15:03,210 --> 01:15:06,689
though in a second so we'll do that a

1223
01:15:05,219 --> 01:15:08,520
little later what we want to do first is

1224
01:15:06,689 --> 01:15:12,089
to our previous pointer to our previous

1225
01:15:08,520 --> 01:15:14,460
we want to set our next pointer to its

1226
01:15:12,090 --> 01:15:17,819
next pointer and then we just need to

1227
01:15:14,460 --> 01:15:20,430
say our previous next points to us and

1228
01:15:17,819 --> 01:15:22,679
our next previous points to us and then

1229
01:15:20,430 --> 01:15:25,110
we're done right so we just say look

1230
01:15:22,680 --> 01:15:28,500
we've got one thing we want the thing

1231
01:15:25,109 --> 01:15:29,969
that points to the thing behind us well

1232
01:15:28,500 --> 01:15:31,560
we know what the thing this is doing is

1233
01:15:29,969 --> 01:15:33,000
supposed to be behind us the thing

1234
01:15:31,560 --> 01:15:34,260
that's in front of us is whatever was in

1235
01:15:33,000 --> 01:15:35,880
front of the person who was behind us

1236
01:15:34,260 --> 01:15:37,260
right because we're going in between him

1237
01:15:35,880 --> 01:15:39,539
and the thing that was after him so

1238
01:15:37,260 --> 01:15:41,190
that's what we do and then what we want

1239
01:15:39,539 --> 01:15:43,289
to do is say all right take the

1240
01:15:41,189 --> 01:15:44,849
previous/next point it to us take the

1241
01:15:43,289 --> 01:15:47,340
next previous point to us and now we're

1242
01:15:44,850 --> 01:15:49,860
fully linked so once we've got all of

1243
01:15:47,340 --> 01:15:53,880
those operations in there we're good to

1244
01:15:49,859 --> 01:15:56,309
go we a couple little things clean up

1245
01:15:53,880 --> 01:15:58,260
there push first here needs to take the

1246
01:15:56,310 --> 01:16:00,960
actual thing to push we for some reason

1247
01:15:58,260 --> 01:16:03,739
did it so in both cases it's got to take

1248
01:16:00,960 --> 01:16:11,579
the Edit that we were trying to push on

1249
01:16:03,738 --> 01:16:14,629
we for some reason don't have their

1250
01:16:11,579 --> 01:16:14,630
begin line

1251
01:16:18,880 --> 01:16:27,710
begin line takes a wi-lai out why does

1252
01:16:24,649 --> 01:16:30,170
that not work oh because we don't have

1253
01:16:27,710 --> 01:16:34,010
one to find yet so in here we need to do

1254
01:16:30,170 --> 01:16:35,840
a WI layout layout we don't actually

1255
01:16:34,010 --> 01:16:37,430
have one yet so nothing's going to

1256
01:16:35,840 --> 01:16:40,640
happen but we need to have one to start

1257
01:16:37,430 --> 01:16:42,289
with we need to get editable type

1258
01:16:40,640 --> 01:16:44,329
working we'll do that in a second but

1259
01:16:42,289 --> 01:16:49,960
and then the layout itself has to get

1260
01:16:44,329 --> 01:16:49,960
passed down in here and we'll do that

1261
01:16:51,189 --> 01:16:57,469
and the problem there is that the

1262
01:16:53,720 --> 01:17:00,050
address here is some enum and we need

1263
01:16:57,470 --> 01:17:02,659
that enum to be compatible so it can be

1264
01:17:00,050 --> 01:17:06,100
edited so it kind of needs to be like a

1265
01:17:02,659 --> 01:17:09,680
u-32 there right that it can change and

1266
01:17:06,100 --> 01:17:11,860
that's not super safe but I don't really

1267
01:17:09,680 --> 01:17:11,860
care

1268
01:17:29,760 --> 01:17:33,820
all right so the only thing I really

1269
01:17:32,109 --> 01:17:35,589
wanted to change before we start

1270
01:17:33,819 --> 01:17:42,248
integrating that in is I do want to have

1271
01:17:35,590 --> 01:17:45,130
a WI edit block here and I do want that

1272
01:17:42,248 --> 01:17:52,238
to come back like this and I want you to

1273
01:17:45,130 --> 01:17:53,380
have to do that we'll see why in a

1274
01:17:52,238 --> 01:17:55,029
second but basically I want to reserve

1275
01:17:53,380 --> 01:17:57,368
stack space so that I can keep the

1276
01:17:55,029 --> 01:17:59,498
change stack and have nested edit blocks

1277
01:17:57,368 --> 01:18:03,549
if I want to so I want you to have to do

1278
01:17:59,498 --> 01:18:06,668
a block for that and so when you do

1279
01:18:03,550 --> 01:18:08,320
begin an init block I want you to in

1280
01:18:06,668 --> 01:18:11,649
here right

1281
01:18:08,319 --> 01:18:20,198
begin edit block I want a dev you I edit

1282
01:18:11,649 --> 01:18:23,288
block I want to basically have you have

1283
01:18:20,198 --> 01:18:25,388
to do that I could also actually have

1284
01:18:23,288 --> 01:18:26,738
you do that because then you don't have

1285
01:18:25,389 --> 01:18:27,958
to use the ampersand that's probably

1286
01:18:26,738 --> 01:18:30,668
better so you know something like that

1287
01:18:27,958 --> 01:18:39,698
so I did want a legal change there but

1288
01:18:30,668 --> 01:18:41,288
otherwise we're okay and we'll see like

1289
01:18:39,698 --> 01:18:44,879
I said kind of why I want to do that

1290
01:18:41,288 --> 01:18:49,090
when we actually go to implement that

1291
01:18:44,880 --> 01:18:50,618
all right so I think now we should be

1292
01:18:49,090 --> 01:18:52,840
running the Zack same as we were before

1293
01:18:50,618 --> 01:18:56,380
we have all of our editor functions

1294
01:18:52,840 --> 01:18:57,849
implemented for effectively and in

1295
01:18:56,380 --> 01:19:00,719
theory we could actually start even

1296
01:18:57,849 --> 01:19:04,599
editing our points if only we now had

1297
01:19:00,719 --> 01:19:06,429
the stub functions wired up to these

1298
01:19:04,599 --> 01:19:09,880
functions that we already have and we

1299
01:19:06,429 --> 01:19:13,288
sort of got part of the way there by

1300
01:19:09,880 --> 01:19:16,029
pulling out into the WI we pulled out

1301
01:19:13,288 --> 01:19:18,219
the text function so we can draw text

1302
01:19:16,029 --> 01:19:20,319
now but what we don't have is any of

1303
01:19:18,219 --> 01:19:23,889
those other features so if we look back

1304
01:19:20,319 --> 01:19:25,748
for example at the debug UI we don't

1305
01:19:23,889 --> 01:19:28,029
have any of the interaction features and

1306
01:19:25,748 --> 01:19:31,059
we had layout features here you can see

1307
01:19:28,029 --> 01:19:33,398
them right like that we're trying to do

1308
01:19:31,059 --> 01:19:36,270
layout functions and we just we don't

1309
01:19:33,399 --> 01:19:41,320
have any

1310
01:19:36,270 --> 01:19:43,870
merger of those two things yet and the

1311
01:19:41,319 --> 01:19:46,059
question is how much of these do we want

1312
01:19:43,869 --> 01:19:47,619
to merge I'm not sure my suspicion is we

1313
01:19:46,060 --> 01:19:50,410
more or less want to merge them

1314
01:19:47,619 --> 01:19:54,579
completely in other words if debug UI

1315
01:19:50,409 --> 01:19:56,380
dot CPP kind of goes away eventually

1316
01:19:54,579 --> 01:19:58,569
that would I think probably be a good

1317
01:19:56,380 --> 01:20:01,000
thing because if you just look at what's

1318
01:19:58,569 --> 01:20:04,869
in there it's mostly all stuff that is

1319
01:20:01,000 --> 01:20:07,029
valid in both places right like there's

1320
01:20:04,869 --> 01:20:09,309
a couple things here that are sort of

1321
01:20:07,029 --> 01:20:13,420
not really maybe exactly what you would

1322
01:20:09,310 --> 01:20:16,180
want but to a large extent it's pretty

1323
01:20:13,420 --> 01:20:18,039
darn close to being the same so we

1324
01:20:16,180 --> 01:20:19,590
should be able to merge these in a way

1325
01:20:18,039 --> 01:20:22,689
that isn't too ownerís

1326
01:20:19,590 --> 01:20:25,210
and and a lot of you know like almost

1327
01:20:22,689 --> 01:20:27,189
everything here is the same right like

1328
01:20:25,210 --> 01:20:30,550
almost everything here is what you would

1329
01:20:27,189 --> 01:20:32,009
want as you're sort of making these

1330
01:20:30,550 --> 01:20:37,930
things happen

1331
01:20:32,010 --> 01:20:41,409
so you know I I would assume that for

1332
01:20:37,930 --> 01:20:45,310
the most part we want this stuff to kind

1333
01:20:41,409 --> 01:20:49,029
of merge up right and you know I'm

1334
01:20:45,310 --> 01:20:55,030
looking at this stuff so we're when we

1335
01:20:49,029 --> 01:20:57,969
actually do layout elements they exist

1336
01:20:55,029 --> 01:21:01,079
really only on the stack

1337
01:20:57,970 --> 01:21:01,079
it looks like too

1338
01:21:10,800 --> 01:21:18,670
so again you know I think a lot of this

1339
01:21:13,779 --> 01:21:20,259
stuff really can be you know I don't

1340
01:21:18,670 --> 01:21:23,289
think much of this stuff really has to

1341
01:21:20,260 --> 01:21:28,380
be modified what what are the things in

1342
01:21:23,289 --> 01:21:33,819
here do we actually have Vitter like

1343
01:21:28,380 --> 01:21:36,210
look we can't even I feel like the tear

1344
01:21:33,819 --> 01:21:38,289
off features and stuff that we have I

1345
01:21:36,210 --> 01:21:40,829
don't really know that we're even doing

1346
01:21:38,289 --> 01:21:40,829
those anymore

1347
01:21:41,939 --> 01:21:52,299
yeah not sure but looking at these right

1348
01:21:47,859 --> 01:21:58,239
we've got we've got all these things

1349
01:21:52,300 --> 01:22:08,199
that that look a lot like stuff we would

1350
01:21:58,239 --> 01:22:13,349
just keep you know I mean it really just

1351
01:22:08,199 --> 01:22:13,349
looks pretty much the same

1352
01:22:26,319 --> 01:22:34,500
I mean it looks the same to me anyway so

1353
01:22:31,238 --> 01:22:38,979
I feel like most of that stuff is pretty

1354
01:22:34,500 --> 01:22:41,020
pretty much okay so looking at this

1355
01:22:38,979 --> 01:22:42,328
stuff here you know debug interaction

1356
01:22:41,020 --> 01:22:44,409
[Music]

1357
01:22:42,328 --> 01:22:48,099
looks pretty good

1358
01:22:44,408 --> 01:22:50,229
the I'm kind of interested to know so

1359
01:22:48,099 --> 01:22:53,279
let's suppose we started plucking away

1360
01:22:50,229 --> 01:22:56,109
at this thing I just want to know like

1361
01:22:53,279 --> 01:22:58,179
what extent you know what are these

1362
01:22:56,109 --> 01:22:59,408
things used for cuz I don't really know

1363
01:22:58,179 --> 01:23:00,300
anymore right we haven't met him a long

1364
01:22:59,408 --> 01:23:08,948
time ago

1365
01:23:00,300 --> 01:23:20,610
I'm not for sure's right so who sets

1366
01:23:08,948 --> 01:23:20,609
that thing does anyone set that thing

1367
01:23:30,698 --> 01:23:35,978
okay so obviously that was not necessary

1368
01:23:36,670 --> 01:23:41,559
and can be removed

1369
01:23:51,349 --> 01:23:56,300
so it looks like that must have been for

1370
01:23:54,109 --> 01:23:57,739
something that we were using before and

1371
01:23:56,300 --> 01:24:00,649
that we're not using now I'm not

1372
01:23:57,738 --> 01:24:04,128
entirely certain but apparently that's

1373
01:24:00,649 --> 01:24:05,719
the case so let's take a look at some of

1374
01:24:04,128 --> 01:24:06,918
these other ones here presumably at

1375
01:24:05,719 --> 01:24:12,458
least one of these guys is actually

1376
01:24:06,918 --> 01:24:22,179
getting use by somebody somewhere or not

1377
01:24:12,458 --> 01:24:22,179
debug variable link then maybe

1378
01:24:30,359 --> 01:24:38,009
so it looks like tare value is the thing

1379
01:24:34,949 --> 01:24:39,269
that was using that and so if we just

1380
01:24:38,010 --> 01:24:42,090
say that we're not going to use the

1381
01:24:39,270 --> 01:24:48,210
value tear off stuff at the moment we

1382
01:24:42,090 --> 01:24:50,730
would not need that either and I don't

1383
01:24:48,210 --> 01:24:53,100
we've like never used it I think we

1384
01:24:50,729 --> 01:24:55,589
experimented with it a bit and we've

1385
01:24:53,100 --> 01:25:05,370
just never really cared because we don't

1386
01:24:55,590 --> 01:25:22,319
save that stuff so so if we just get rid

1387
01:25:05,369 --> 01:25:26,849
of that what happens so it should have

1388
01:25:22,319 --> 01:25:32,549
worked with alt UI but I tried that and

1389
01:25:26,850 --> 01:25:35,190
it didn't actually work what's the deal

1390
01:25:32,550 --> 01:25:37,289
with that I'm gonna see what happened

1391
01:25:35,189 --> 01:25:40,259
why why couldn't I do that tear

1392
01:25:37,289 --> 01:25:44,789
operation it was supposed to work with

1393
01:25:40,260 --> 01:25:47,039
alt but I don't it did not work with alt

1394
01:25:44,789 --> 01:25:51,149
and I don't know why and I would like to

1395
01:25:47,039 --> 01:25:57,420
know why so if I run this here I'm gonna

1396
01:25:51,149 --> 01:26:00,199
run this and I say alt you know that it

1397
01:25:57,420 --> 01:26:00,199
doesn't do anything

1398
01:26:08,300 --> 01:26:14,980
you know I'm saying so what's up with

1399
01:26:14,210 --> 01:26:18,260
that

1400
01:26:14,979 --> 01:26:18,259
[Music]

1401
01:26:33,369 --> 01:26:40,579
so alt UI is not actually the Alt key

1402
01:26:36,979 --> 01:26:48,259
it's some other thing is there a reason

1403
01:26:40,579 --> 01:27:01,550
it's not the Alt key let's just make it

1404
01:26:48,260 --> 01:27:07,610
be alt down right maybe we didn't have

1405
01:27:01,550 --> 01:27:11,800
alt that time all right so now if I have

1406
01:27:07,609 --> 01:27:11,799
alt down okay

1407
01:27:22,270 --> 01:27:26,490
all right so I'll leave that in I mean

1408
01:27:24,159 --> 01:27:26,489
it works

1409
01:27:36,630 --> 01:27:41,730
so we'll leave that in there that was

1410
01:27:40,408 --> 01:27:43,888
just a case of us not wiring up the

1411
01:27:41,729 --> 01:27:45,119
input I guess because maybe we didn't

1412
01:27:43,889 --> 01:27:47,789
have alt at that time and so it's just

1413
01:27:45,119 --> 01:27:50,309
confusing said we had to keep the ended

1414
01:27:47,789 --> 01:27:51,600
down but ended down so we had to hold

1415
01:27:50,310 --> 01:27:53,670
down the right button and then click the

1416
01:27:51,600 --> 01:27:55,380
left button or something I don't know

1417
01:27:53,670 --> 01:27:57,239
it doesn't matter point being it's fixed

1418
01:27:55,380 --> 01:28:02,969
now so I'll leave that in there because

1419
01:27:57,238 --> 01:28:05,669
that seems reasonable to me to keep if

1420
01:28:02,969 --> 01:28:07,739
it's working a debug element I think is

1421
01:28:05,670 --> 01:28:09,449
the main thing we use so I'm pretty sure

1422
01:28:07,738 --> 01:28:13,279
this is used everywhere right because

1423
01:28:09,448 --> 01:28:13,279
that's the thing you use for most often

1424
01:28:16,310 --> 01:28:39,179
yeah so that's good let's see so that

1425
01:28:34,439 --> 01:28:41,849
all seems okay and you know those things

1426
01:28:39,179 --> 01:28:44,819
are pointers so they don't have to be

1427
01:28:41,850 --> 01:28:48,030
too even compiled in the if these types

1428
01:28:44,819 --> 01:28:50,099
were undefined it wouldn't matter so we

1429
01:28:48,029 --> 01:28:54,599
can basically look at everything except

1430
01:28:50,100 --> 01:28:58,949
for the debug ID and the debug ID is

1431
01:28:54,600 --> 01:29:03,780
just a blind value so really this thing

1432
01:28:58,948 --> 01:29:07,259
could be also lofted up as like a dev ID

1433
01:29:03,779 --> 01:29:08,880
or something right and so if I look for

1434
01:29:07,260 --> 01:29:10,980
everywhere the debug ID is used if we

1435
01:29:08,880 --> 01:29:12,900
change debug ID everywhere to just be

1436
01:29:10,979 --> 01:29:16,738
dev ID and it's a thing that you're

1437
01:29:12,899 --> 01:29:19,170
always allowed to use that seems totally

1438
01:29:16,738 --> 01:29:21,359
plausible so I think that's maybe what

1439
01:29:19,170 --> 01:29:22,710
we'll do as our change now I don't have

1440
01:29:21,359 --> 01:29:24,479
a lot of time left so I'm gonna make

1441
01:29:22,710 --> 01:29:28,198
that change and then we'll probably stop

1442
01:29:24,479 --> 01:29:29,459
for the day and next weekend we'll unify

1443
01:29:28,198 --> 01:29:30,629
these two because I don't really want to

1444
01:29:29,460 --> 01:29:33,480
get started on that because it's not

1445
01:29:30,630 --> 01:29:35,159
gonna finish in time so I'm gonna go

1446
01:29:33,479 --> 01:29:42,289
ahead and put that into the platform

1447
01:29:35,158 --> 01:29:42,289
we're in handmade types probably

1448
01:29:44,859 --> 01:29:52,908
yeah so we'll throw that in here that's

1449
01:29:50,179 --> 01:29:54,590
going to be a dev ID and then everywhere

1450
01:29:52,908 --> 01:29:58,479
that we were going to use the dev ID I'm

1451
01:29:54,590 --> 01:29:58,480
a debug ID we're going to use a dev ID

1452
01:30:48,619 --> 01:30:50,649
ah

1453
01:31:01,738 --> 01:31:10,569
looks like we're good to go so now we're

1454
01:31:06,880 --> 01:31:12,670
almost there I feel like we could take

1455
01:31:10,569 --> 01:31:14,109
this time to pretty up some of our debug

1456
01:31:12,670 --> 01:31:15,819
output to because that's we're unifying

1457
01:31:14,109 --> 01:31:17,710
these two things we could kind of clean

1458
01:31:15,819 --> 01:31:23,609
up a bunch of this stuff if we wanted to

1459
01:31:17,710 --> 01:31:30,639
as well I think so that might be nice

1460
01:31:23,609 --> 01:31:32,229
and why is our library slides wrong have

1461
01:31:30,639 --> 01:31:34,630
you noticed that like why what's going

1462
01:31:32,229 --> 01:31:36,399
on there I feel like our baselines are

1463
01:31:34,630 --> 01:31:38,559
wrong I don't know where that's why

1464
01:31:36,399 --> 01:31:44,049
that's happening but our baselines are

1465
01:31:38,559 --> 01:31:48,579
messed up for fonts and I think you just

1466
01:31:44,050 --> 01:31:49,809
can't tell cuz a lot of these things you

1467
01:31:48,578 --> 01:31:51,670
wouldn't necessarily know but it looks

1468
01:31:49,809 --> 01:31:53,110
like we've got some bugs there as well

1469
01:31:51,670 --> 01:31:54,309
that's probably something you're gonna

1470
01:31:53,109 --> 01:31:56,319
have to take a look at at some point

1471
01:31:54,309 --> 01:31:59,099
right can see the dashes there floored

1472
01:31:56,319 --> 01:32:02,099
down there so I don't I don't know why

1473
01:31:59,099 --> 01:32:02,099
right

1474
01:32:10,619 --> 01:32:16,569
so think that's good for today I'm gonna

1475
01:32:13,750 --> 01:32:19,899
leave it there and we know exactly what

1476
01:32:16,569 --> 01:32:22,539
we're doing now so WI I mean I can start

1477
01:32:19,899 --> 01:32:24,129
pulling some of these things out where I

1478
01:32:22,539 --> 01:32:27,279
got five more minutes left so I could

1479
01:32:24,130 --> 01:32:51,460
you know I could do this type just for

1480
01:32:27,279 --> 01:33:04,349
now put this into WI dot H and just make

1481
01:32:51,460 --> 01:33:04,350
this be an interaction type that is now

1482
01:33:10,020 --> 01:33:13,520
unified into the system

1483
01:33:36,909 --> 01:33:40,579
and that should only take five minutes I

1484
01:33:39,260 --> 01:33:44,170
don't think it'll take us to it longer

1485
01:33:40,579 --> 01:33:44,170
I'm really just searching and replacing

1486
01:33:47,470 --> 01:33:52,090
guess I might as well do those both the

1487
01:33:49,520 --> 01:33:52,090
same time actually

1488
01:34:15,989 --> 01:34:23,579
and sorry for the boredom here but this

1489
01:34:19,300 --> 01:34:23,579
is just basically searching replace

1490
01:34:28,079 --> 01:34:32,529
looking forward to adding I've been

1491
01:34:30,489 --> 01:34:35,349
waiting a while to do more for coder

1492
01:34:32,529 --> 01:34:36,789
stuff because there's been some changes

1493
01:34:35,350 --> 01:34:38,650
that I'm kind of waiting for to do my

1494
01:34:36,789 --> 01:34:41,260
next big update but one of the big

1495
01:34:38,649 --> 01:34:43,149
things I want is remembering the search

1496
01:34:41,260 --> 01:34:47,010
and replaces that I do so that I can

1497
01:34:43,149 --> 01:34:47,009
just repeat them you know what I mean

1498
01:35:13,510 --> 01:35:24,320
so I think that's all good now so I

1499
01:35:22,250 --> 01:35:31,029
think we're we're pretty much set to pop

1500
01:35:24,319 --> 01:35:31,029
here and I'll call it a caught there

1501
01:35:46,779 --> 01:35:53,979
I also would like to know at some point

1502
01:35:51,789 --> 01:35:56,319
why our positioning is messed up we

1503
01:35:53,979 --> 01:35:57,849
probably should fix that I'm not sure we

1504
01:35:56,319 --> 01:36:00,069
must have done some positioning stuff

1505
01:35:57,850 --> 01:36:01,930
that was we used to probably have it be

1506
01:36:00,069 --> 01:36:04,389
positioned relative and now it's

1507
01:36:01,930 --> 01:36:08,130
positioned absolute which doesn't

1508
01:36:04,390 --> 01:36:08,130
correctly account for expansion

1509
01:36:44,279 --> 01:36:49,119
oh and ginger bill you had the question

1510
01:36:47,859 --> 01:36:50,170
for after the stream do you want the

1511
01:36:49,119 --> 01:36:53,170
viewer to be able to edit things are

1512
01:36:50,170 --> 01:36:56,140
just few things um my answer is that I

1513
01:36:53,170 --> 01:36:58,690
don't think you necessarily want to get

1514
01:36:56,140 --> 01:37:01,480
too far down the rabbit hole so I would

1515
01:36:58,689 --> 01:37:07,149
say don't editing is not a thing it's

1516
01:37:01,479 --> 01:37:11,019
just viewing uh and I guess the reason I

1517
01:37:07,149 --> 01:37:12,399
would say that is because if you go down

1518
01:37:11,020 --> 01:37:15,430
the route of I need to be able to edit

1519
01:37:12,399 --> 01:37:17,319
things then the data file format that

1520
01:37:15,430 --> 01:37:19,240
you're gonna specify has to be a lot

1521
01:37:17,319 --> 01:37:21,130
more complicated potentially because

1522
01:37:19,239 --> 01:37:24,969
you're basically saying it has to be

1523
01:37:21,130 --> 01:37:27,220
something usable and but as like an

1524
01:37:24,970 --> 01:37:30,640
input a permanent storage format

1525
01:37:27,220 --> 01:37:34,000
basically and that just opens up a huge

1526
01:37:30,640 --> 01:37:36,310
can of worms so while I do think it

1527
01:37:34,000 --> 01:37:38,970
might be eventually useful to say okay

1528
01:37:36,310 --> 01:37:41,680
once you make a really great viewer and

1529
01:37:38,970 --> 01:37:47,320
it's awesome and it does everything we

1530
01:37:41,680 --> 01:37:48,670
want you know then version 2 is we

1531
01:37:47,319 --> 01:37:50,229
figure out how to update that to

1532
01:37:48,670 --> 01:37:52,869
something that's usable in an edit sense

1533
01:37:50,229 --> 01:37:54,819
as well great but I wouldn't do that

1534
01:37:52,869 --> 01:37:56,590
first because I feel like it would get

1535
01:37:54,819 --> 01:37:59,019
in the way and over complicate things

1536
01:37:56,590 --> 01:38:02,260
and it might result in a in a poorer

1537
01:37:59,020 --> 01:38:04,900
viewer at first because it just it

1538
01:38:02,260 --> 01:38:10,600
broadens the scope out in a really

1539
01:38:04,899 --> 01:38:13,839
uncomfortable way and so I wouldn't

1540
01:38:10,600 --> 01:38:17,170
focus on that right because it just it

1541
01:38:13,840 --> 01:38:19,529
brings in so many other issues with if

1542
01:38:17,170 --> 01:38:22,000
so many other competing concerns as

1543
01:38:19,529 --> 01:38:25,300
opposed to just a like app here's how I

1544
01:38:22,000 --> 01:38:27,609
dump a log of data which is like very

1545
01:38:25,300 --> 01:38:31,470
well-defined like what's the easiest way

1546
01:38:27,609 --> 01:38:33,579
to just specify a stream of data right

1547
01:38:31,470 --> 01:38:34,960
whereas once you get into all these

1548
01:38:33,579 --> 01:38:36,159
other things like editable it's like oh

1549
01:38:34,960 --> 01:38:37,779
well how does it link up with other

1550
01:38:36,159 --> 01:38:39,729
things how do I put IDs in there that

1551
01:38:37,779 --> 01:38:41,739
tell me that this thing is maps this

1552
01:38:39,729 --> 01:38:43,359
other thing in my program and like how

1553
01:38:41,739 --> 01:38:44,889
do i specify how many there should be or

1554
01:38:43,359 --> 01:38:47,409
how many could add or what the possible

1555
01:38:44,890 --> 01:38:48,910
values of this thing are like all of

1556
01:38:47,409 --> 01:38:50,590
those things now become important and

1557
01:38:48,909 --> 01:38:52,989
before they really weren't so I feel

1558
01:38:50,590 --> 01:38:54,579
like it's just it just while it's a good

1559
01:38:52,989 --> 01:38:57,279
thing to do someday maybe

1560
01:38:54,579 --> 01:38:59,140
it's not a good v1 because I think you

1561
01:38:57,279 --> 01:39:01,420
should scope it down for v1 get it done

1562
01:38:59,140 --> 01:39:03,520
and good and then you can always broaden

1563
01:39:01,420 --> 01:39:05,590
it out later right there's nothing to

1564
01:39:03,520 --> 01:39:08,430
stop you from adding on and making that

1565
01:39:05,590 --> 01:39:08,430
a later thing

1566
01:40:05,488 --> 01:40:13,419
- any advice or resources to read on

1567
01:40:08,908 --> 01:40:18,549
shadow mapping implementations I don't

1568
01:40:13,420 --> 01:40:22,658
I've never implemented shadow maps I

1569
01:40:18,550 --> 01:40:30,099
don't like them I feel like they always

1570
01:40:22,658 --> 01:40:32,138
look bad you have to do a tremendous

1571
01:40:30,099 --> 01:40:39,969
amount of work to make shadow Maps not

1572
01:40:32,139 --> 01:40:42,039
look bad outdoors in the Sun sometimes

1573
01:40:39,969 --> 01:40:43,480
it's ok even then I see a lot of really

1574
01:40:42,039 --> 01:40:45,368
bad implementations there's a lot of

1575
01:40:43,479 --> 01:40:48,419
speckling along curved surfaces and

1576
01:40:45,368 --> 01:40:48,420
stuff and you have to be really careful

1577
01:40:49,710 --> 01:40:57,429
so I would say yeah in terms of reading

1578
01:40:54,279 --> 01:40:59,948
up about it there I don't even know what

1579
01:40:57,429 --> 01:41:01,389
the latest games are I think I can't

1580
01:40:59,948 --> 01:41:04,299
remember which one got using the witness

1581
01:41:01,389 --> 01:41:07,569
it might have been Cascades base shadow

1582
01:41:04,300 --> 01:41:11,619
maps but I can't remember they're all

1583
01:41:07,569 --> 01:41:13,299
bad I don't like shadow mapping it's

1584
01:41:11,618 --> 01:41:15,039
especially bad because for direct

1585
01:41:13,300 --> 01:41:17,650
shadowing like Ray casting is exactly

1586
01:41:15,039 --> 01:41:22,149
what you want because it only takes one

1587
01:41:17,649 --> 01:41:24,250
ray per pixel to determine the shadow of

1588
01:41:22,149 --> 01:41:28,569
a light source you know it's it's not

1589
01:41:24,250 --> 01:41:30,130
the same sort of thing as diffuse

1590
01:41:28,569 --> 01:41:36,609
lighting where it's very hard to compute

1591
01:41:30,130 --> 01:41:39,429
ray tracing lines so I feel like I feel

1592
01:41:36,609 --> 01:41:41,198
like the push towards ray tracing if it

1593
01:41:39,429 --> 01:41:42,789
does nothing else will make it so that

1594
01:41:41,198 --> 01:41:44,979
we never have to use shadow Maps again

1595
01:41:42,789 --> 01:41:48,488
and that day cannot come too soon I can

1596
01:41:44,979 --> 01:41:50,348
tell you that right now so hopefully

1597
01:41:48,488 --> 01:41:52,509
that would work and then we won't have

1598
01:41:50,349 --> 01:41:54,520
to care about shadow maps anymore but uh

1599
01:41:52,510 --> 01:41:56,800
who knows maybe not there's also

1600
01:41:54,520 --> 01:41:58,630
problems with like you know I don't know

1601
01:41:56,800 --> 01:42:01,750
maybe you're trying to use tricks to get

1602
01:41:58,630 --> 01:42:04,060
softer shadows by using like the shadow

1603
01:42:01,750 --> 01:42:06,368
map in a convolution and stuff like that

1604
01:42:04,060 --> 01:42:12,869
right so and that doesn't necessarily

1605
01:42:06,368 --> 01:42:12,868
work for if you're doing ray tracing I

1606
01:42:13,439 --> 01:42:17,289
mean I don't know it probably does still

1607
01:42:16,060 --> 01:42:21,420
work for ray tracing and

1608
01:42:17,289 --> 01:42:26,739
since because I mean you could just I

1609
01:42:21,420 --> 01:42:34,480
mean you could just still record every

1610
01:42:26,739 --> 01:42:35,380
ray that you trace back to the every ray

1611
01:42:34,479 --> 01:42:37,539
you trace back to the light source

1612
01:42:35,380 --> 01:42:39,460
recorded into a bitmap and then blur the

1613
01:42:37,539 --> 01:42:41,439
bitmap or something and then use that as

1614
01:42:39,460 --> 01:42:53,890
a secondary lookup so I mean maybe you

1615
01:42:41,439 --> 01:42:55,119
still could do it I don't know are you

1616
01:42:53,890 --> 01:42:57,640
still playing I'm removing the CRT and

1617
01:42:55,119 --> 01:42:59,680
the game layer yes actually

1618
01:42:57,640 --> 01:43:00,760
I don't know why we haven't done that

1619
01:42:59,680 --> 01:43:05,760
yeah I think because I haven't gotten

1620
01:43:00,760 --> 01:43:12,039
around to putting in a cosine function I

1621
01:43:05,760 --> 01:43:13,600
would like to do that though I knew to

1622
01:43:12,039 --> 01:43:15,430
the CRT and my project and it reduced

1623
01:43:13,600 --> 01:43:17,050
its size from a hundred fifty K to 35 K

1624
01:43:15,430 --> 01:43:19,510
I did not think it insert as much cred

1625
01:43:17,050 --> 01:43:22,289
it inserts a tremendous amount of crap

1626
01:43:19,510 --> 01:43:25,360
into your code tremendous tremendous

1627
01:43:22,289 --> 01:43:28,630
even if you don't use anything it seems

1628
01:43:25,359 --> 01:43:33,880
like just the startup code for the CRT

1629
01:43:28,630 --> 01:43:35,859
in Windows just dumps a truckload of

1630
01:43:33,880 --> 01:43:37,600
code into your thing and I you know to

1631
01:43:35,859 --> 01:43:39,909
be honest I've never gone through and

1632
01:43:37,600 --> 01:43:43,600
actually looked at what it all is all I

1633
01:43:39,909 --> 01:43:44,829
know is you don't need any of it so it's

1634
01:43:43,600 --> 01:43:46,660
pretty much good to just get rid of it

1635
01:43:44,829 --> 01:43:53,880
because it's at all of it's useless like

1636
01:43:46,659 --> 01:43:53,880
100% of it so yeah I mean I I don't know

1637
01:43:56,880 --> 01:44:00,029
do you think premiering books are worth

1638
01:43:58,380 --> 01:44:04,920
the effort to read or is there a better

1639
01:44:00,029 --> 01:44:10,609
way to learn I mean like anything else

1640
01:44:04,920 --> 01:44:12,569
it depends on the book you know you know

1641
01:44:10,609 --> 01:44:13,619
there's probably some books that are

1642
01:44:12,569 --> 01:44:15,420
worth reading and then there's books

1643
01:44:13,619 --> 01:44:17,698
that aren't so I don't think it's about

1644
01:44:15,420 --> 01:44:22,050
whether it's a book or not I think it's

1645
01:44:17,698 --> 01:44:23,369
whether the books good are we still

1646
01:44:22,050 --> 01:44:24,900
thinking to port to Linux and bare-metal

1647
01:44:23,369 --> 01:44:25,948
raspberry pie yeah I would like to it

1648
01:44:24,899 --> 01:44:30,210
someday but I mean we're talking about

1649
01:44:25,948 --> 01:44:31,379
after we're done honey so would it be to

1650
01:44:30,210 --> 01:44:33,300
get additional performance information

1651
01:44:31,380 --> 01:44:34,739
for the cpu I know until provide some

1652
01:44:33,300 --> 01:44:36,179
stuff for things like branch prediction

1653
01:44:34,738 --> 01:44:38,218
and cache misses um it can be very

1654
01:44:36,179 --> 01:44:39,539
useful in a game like handmade here it's

1655
01:44:38,219 --> 01:44:40,948
not particularly useful because we just

1656
01:44:39,539 --> 01:44:42,539
don't have that kind of performance

1657
01:44:40,948 --> 01:44:46,198
concern really at least not at the

1658
01:44:42,539 --> 01:44:51,569
moment but it's definitely the kind of

1659
01:44:46,198 --> 01:44:53,549
thing that it's definitely the kind of

1660
01:44:51,569 --> 01:44:55,529
thing that if you're doing serious

1661
01:44:53,550 --> 01:44:56,850
performance work and you're running up

1662
01:44:55,529 --> 01:44:58,649
against barriers that you don't

1663
01:44:56,850 --> 01:44:59,880
understand and when I say don't

1664
01:44:58,649 --> 01:45:02,509
understand I don't mean because you're

1665
01:44:59,880 --> 01:45:02,510
like not

1666
01:45:02,869 --> 01:45:07,079
experienced in everything that I mean to

1667
01:45:04,679 --> 01:45:09,210
understand as in no matter who you are

1668
01:45:07,079 --> 01:45:10,649
if you try to program a CPU to the

1669
01:45:09,210 --> 01:45:12,179
limits you will hit things that you

1670
01:45:10,649 --> 01:45:17,369
don't understand if you can't have

1671
01:45:12,179 --> 01:45:19,710
analysis right and so those cpu counters

1672
01:45:17,369 --> 01:45:20,908
are really good for figuring out things

1673
01:45:19,710 --> 01:45:22,739
you don't understand why they're

1674
01:45:20,908 --> 01:45:24,839
happening cuz you'll get into situations

1675
01:45:22,738 --> 01:45:26,669
where you're like why isn't this thing

1676
01:45:24,840 --> 01:45:30,000
getting the throughput that I think it

1677
01:45:26,670 --> 01:45:31,980
should based on my calculations and the

1678
01:45:30,000 --> 01:45:34,289
answer just becomes oh because of this

1679
01:45:31,979 --> 01:45:36,269
other thing you didn't think of and so

1680
01:45:34,289 --> 01:45:37,170
sometimes those performance counters can

1681
01:45:36,270 --> 01:45:39,480
help you with that

1682
01:45:37,170 --> 01:45:41,190
in hand-made hero most of things that we

1683
01:45:39,479 --> 01:45:43,229
have that might be performance targets

1684
01:45:41,189 --> 01:45:48,089
like lighting they're not really at that

1685
01:45:43,229 --> 01:45:50,039
point we are usually an algorithmic

1686
01:45:48,090 --> 01:45:52,920
optimization territory right now and so

1687
01:45:50,039 --> 01:45:54,869
having performance counters like the

1688
01:45:52,920 --> 01:45:59,460
ones on the CPU are not really gonna

1689
01:45:54,869 --> 01:46:02,579
help us so we wouldn't care about that

1690
01:45:59,460 --> 01:46:05,579
for our stuff but they're depending on

1691
01:46:02,579 --> 01:46:07,649
what you're doing you can definitely get

1692
01:46:05,579 --> 01:46:09,630
valuable information from that stuff for

1693
01:46:07,649 --> 01:46:11,789
sure

1694
01:46:09,630 --> 01:46:13,739
we'll be avoiding the CRT on Linux in

1695
01:46:11,789 --> 01:46:15,510
the future probably not because we won't

1696
01:46:13,739 --> 01:46:18,529
spend very much time at Aleks port linux

1697
01:46:15,510 --> 01:46:20,730
is not really a platform for gaming

1698
01:46:18,529 --> 01:46:24,859
currently like it's not a place where

1699
01:46:20,729 --> 01:46:27,659
games get purchased almost ever and so

1700
01:46:24,859 --> 01:46:30,449
it's not really a focus of game

1701
01:46:27,659 --> 01:46:32,010
programmers perhaps sadly it might be

1702
01:46:30,449 --> 01:46:35,099
nice if tons of people bought games on

1703
01:46:32,010 --> 01:46:36,480
linux they just don't and so we probably

1704
01:46:35,100 --> 01:46:37,680
won't spend much time with linux version

1705
01:46:36,479 --> 01:46:39,089
you know we'll probably just do like an

1706
01:46:37,680 --> 01:46:39,960
SD l port or something and be done with

1707
01:46:39,090 --> 01:46:42,090
it

1708
01:46:39,960 --> 01:46:43,020
because it's not a primary platform you

1709
01:46:42,090 --> 01:46:45,869
don't really want to spend a ton of time

1710
01:46:43,020 --> 01:46:46,380
on non primary platforms set maybe the

1711
01:46:45,869 --> 01:46:48,329
Raspberry Pi

1712
01:46:46,380 --> 01:46:49,980
because we do it might be fun to do one

1713
01:46:48,329 --> 01:46:53,460
bare metal platform and do that really

1714
01:46:49,979 --> 01:46:58,229
cleanly so you know but Linux isn't that

1715
01:46:53,460 --> 01:46:59,670
Linux isn't a bare metal platform how

1716
01:46:58,229 --> 01:47:03,529
can you turn the validity of a book and

1717
01:46:59,670 --> 01:47:05,909
its usefulness I don't know you have to

1718
01:47:03,529 --> 01:47:07,679
people who you trust who have read it

1719
01:47:05,909 --> 01:47:10,670
other than that I'm not sure you really

1720
01:47:07,680 --> 01:47:10,670
can you know

1721
01:48:01,020 --> 01:48:05,980
0lp p.m. it's close enough supporter

1722
01:48:03,819 --> 01:48:08,289
don't think of supporter as being

1723
01:48:05,979 --> 01:48:11,109
spelled wrong think of it as you were

1724
01:48:08,289 --> 01:48:13,149
spelling it like a internet startup

1725
01:48:11,109 --> 01:48:17,710
company would because everyone knows

1726
01:48:13,149 --> 01:48:20,319
that supporter su PP o r te r is not

1727
01:48:17,710 --> 01:48:22,840
worth several million dollars of venture

1728
01:48:20,319 --> 01:48:29,619
capital Series A funding but supporter

1729
01:48:22,840 --> 01:48:34,590
su PP o RT R on the other hand better

1730
01:48:29,619 --> 01:48:37,949
yet su PP r te ly might be even better

1731
01:48:34,590 --> 01:48:37,949
think about it

1732
01:48:38,189 --> 01:48:42,339
what's the empty space in the thread

1733
01:48:40,390 --> 01:48:43,930
debug view which empty space are you

1734
01:48:42,340 --> 01:48:48,279
talking about

1735
01:48:43,930 --> 01:48:49,990
did you just mean like out here I guess

1736
01:48:48,279 --> 01:48:50,949
I'll explain about this space is in the

1737
01:48:49,989 --> 01:48:52,329
hopes that that's the thing that you're

1738
01:48:50,949 --> 01:48:59,619
talking about so let me pause and I'll

1739
01:48:52,329 --> 01:49:04,689
show you so at the moment we in on

1740
01:48:59,619 --> 01:49:08,229
handmade hero we have so if you take a

1741
01:49:04,689 --> 01:49:15,659
look at each of these things here we

1742
01:49:08,229 --> 01:49:19,239
have on this CPU eight like cores right

1743
01:49:15,659 --> 01:49:23,319
and so in here we've got like one two

1744
01:49:19,239 --> 01:49:25,179
three four five six seven eight nine I

1745
01:49:23,319 --> 01:49:26,979
guess I'm not sure how many there

1746
01:49:25,180 --> 01:49:28,420
actually are because these two lanes are

1747
01:49:26,979 --> 01:49:33,579
empty

1748
01:49:28,420 --> 01:49:37,000
we've got nine slots if you will for

1749
01:49:33,579 --> 01:49:39,729
doing work and they show up as two bars

1750
01:49:37,000 --> 01:49:41,590
each because like one bar is the

1751
01:49:39,729 --> 01:49:43,719
subfield like this is do lighting work

1752
01:49:41,590 --> 01:49:45,369
and it's inside compute light

1753
01:49:43,720 --> 01:49:48,100
propagation right

1754
01:49:45,369 --> 01:49:49,960
so I don't know why we chose to draw

1755
01:49:48,100 --> 01:49:52,539
them that way exactly it probably could

1756
01:49:49,960 --> 01:49:55,149
be drawn better than this but each of

1757
01:49:52,539 --> 01:49:56,529
these is actually one channel should

1758
01:49:55,149 --> 01:50:00,159
probably like stripe them so you can see

1759
01:49:56,529 --> 01:50:03,369
the channel so at startup what we do is

1760
01:50:00,159 --> 01:50:06,670
we look at at the number of cores I

1761
01:50:03,369 --> 01:50:08,050
believe if I remember correctly maybe we

1762
01:50:06,670 --> 01:50:12,340
don't maybe it's just fixed I can't

1763
01:50:08,050 --> 01:50:13,630
remember but we create basically queues

1764
01:50:12,340 --> 01:50:17,069
for doing work

1765
01:50:13,630 --> 01:50:21,190
and they're separated out into a certain

1766
01:50:17,069 --> 01:50:23,439
segmentation so there's one main thread

1767
01:50:21,189 --> 01:50:26,138
that runs all the time and that just has

1768
01:50:23,439 --> 01:50:27,899
most of the game on it right like stuff

1769
01:50:26,139 --> 01:50:30,340
that's not performance critical

1770
01:50:27,899 --> 01:50:32,979
generally speaking just all runs in here

1771
01:50:30,340 --> 01:50:34,150
so this is the one main thread then for

1772
01:50:32,979 --> 01:50:36,908
parts of the game that are super

1773
01:50:34,149 --> 01:50:39,099
performance critical here are a set of

1774
01:50:36,908 --> 01:50:40,960
threads and this one's included because

1775
01:50:39,100 --> 01:50:43,570
it will do work as well but here are a

1776
01:50:40,960 --> 01:50:45,969
set of threads these lanes are just idle

1777
01:50:43,569 --> 01:50:48,219
they're not doing anything until there's

1778
01:50:45,969 --> 01:50:49,899
work available so when there's

1779
01:50:48,219 --> 01:50:51,310
performance critical work like solving

1780
01:50:49,899 --> 01:50:53,138
the lighting is the main thing we have

1781
01:50:51,310 --> 01:50:54,580
right now we don't really have any other

1782
01:50:53,139 --> 01:50:57,909
performance critical stuff that's just a

1783
01:50:54,579 --> 01:50:59,649
huge batch of work to do it goes onto a

1784
01:50:57,908 --> 01:51:02,319
cue that each of these threads will take

1785
01:50:59,649 --> 01:51:04,238
work from so they're all working on the

1786
01:51:02,319 --> 01:51:06,189
lighting and that's why you see them

1787
01:51:04,238 --> 01:51:10,509
show up here once the lighting is done

1788
01:51:06,189 --> 01:51:11,859
there's no more work to do right so they

1789
01:51:10,510 --> 01:51:15,389
don't have to do anything for the rest

1790
01:51:11,859 --> 01:51:17,979
of the time these slots here are

1791
01:51:15,389 --> 01:51:19,779
actually slots for things that are

1792
01:51:17,979 --> 01:51:21,638
basically waiting in the operating

1793
01:51:19,779 --> 01:51:23,619
system so when we need to load an asset

1794
01:51:21,639 --> 01:51:26,440
so we're gonna request some asset from

1795
01:51:23,619 --> 01:51:29,198
the operating system file load wait and

1796
01:51:26,439 --> 01:51:31,899
process it they go in here so they

1797
01:51:29,198 --> 01:51:33,879
almost never do anything and that's also

1798
01:51:31,899 --> 01:51:36,908
why this is oversubscribed that's why

1799
01:51:33,880 --> 01:51:40,600
there's you know threads for work one

1800
01:51:36,908 --> 01:51:44,229
two three four five six seven there's

1801
01:51:40,600 --> 01:51:46,300
actually as many of those as you would

1802
01:51:44,229 --> 01:51:47,649
really have cores except for maybe one

1803
01:51:46,300 --> 01:51:50,219
that's available for like keeping this

1804
01:51:47,649 --> 01:51:53,019
from from getting stalled or something

1805
01:51:50,219 --> 01:51:54,489
and there's two of these that just sit

1806
01:51:53,020 --> 01:51:55,840
around doing nothing most of the time

1807
01:51:54,488 --> 01:51:58,419
except when there's load work to do

1808
01:51:55,840 --> 01:52:00,429
right so we kind of tried to like scale

1809
01:51:58,420 --> 01:52:01,719
it that way so that we would not have

1810
01:52:00,429 --> 01:52:04,750
too much oversubscription

1811
01:52:01,719 --> 01:52:06,279
if you're wondering why we don't have

1812
01:52:04,750 --> 01:52:08,260
anything out here well the reason for

1813
01:52:06,279 --> 01:52:10,960
that is that this right here is actually

1814
01:52:08,260 --> 01:52:12,610
the end of our work right so the end of

1815
01:52:10,960 --> 01:52:15,880
the game's actual work happens right

1816
01:52:12,609 --> 01:52:18,670
about here this is the debug system here

1817
01:52:15,880 --> 01:52:22,389
right and this is us waiting for the GPU

1818
01:52:18,670 --> 01:52:24,130
to finish so really nothing goes in here

1819
01:52:22,389 --> 01:52:26,500
ever no matter what because there's

1820
01:52:24,130 --> 01:52:27,279
nothing once we've done all the work we

1821
01:52:26,500 --> 01:52:29,288
can do

1822
01:52:27,279 --> 01:52:30,609
we're stalled on the GPU waiting for it

1823
01:52:29,288 --> 01:52:33,009
to finish the previous frame so we can

1824
01:52:30,609 --> 01:52:35,348
start feeding in a new frame so that

1825
01:52:33,010 --> 01:52:37,329
empty space is never going away this

1826
01:52:35,349 --> 01:52:39,578
empty space might get filled up this

1827
01:52:37,328 --> 01:52:42,939
part down here might get filled up more

1828
01:52:39,578 --> 01:52:46,299
as we push if we end up with more heavy

1829
01:52:42,939 --> 01:52:48,279
work to do it'll get filled up more but

1830
01:52:46,300 --> 01:52:50,679
otherwise it will also stay roughly the

1831
01:52:48,279 --> 01:52:52,630
way it is right now am I already testing

1832
01:52:50,679 --> 01:52:55,078
J I know I don't have a build of J at

1833
01:52:52,630 --> 01:52:55,078
the moment

1834
01:53:08,219 --> 01:53:11,859
when updating the anchor points does

1835
01:53:10,329 --> 01:53:14,529
this mean the HSA files to be recompiled

1836
01:53:11,859 --> 01:53:17,439
each time that happens uh no because the

1837
01:53:14,529 --> 01:53:19,868
AJ file itself just has slots for that

1838
01:53:17,439 --> 01:53:22,988
so it'll just get written into the hij

1839
01:53:19,868 --> 01:53:25,529
file it'll just be a write exactly as we

1840
01:53:22,988 --> 01:53:27,638
do it now when we import an asset

1841
01:53:25,529 --> 01:53:29,050
how would you change the work scheme for

1842
01:53:27,639 --> 01:53:30,940
a mobile platform where we're concerned

1843
01:53:29,050 --> 01:53:34,380
about battery usage

1844
01:53:30,939 --> 01:53:36,488
well I wouldn't because basically like

1845
01:53:34,380 --> 01:53:38,800
there is no such thing as being

1846
01:53:36,488 --> 01:53:41,129
concerned about battery usage when

1847
01:53:38,800 --> 01:53:44,020
you're making a game in the sense of

1848
01:53:41,130 --> 01:53:46,989
work distribution the reason I say that

1849
01:53:44,020 --> 01:53:49,150
is because you either have to do the

1850
01:53:46,988 --> 01:53:51,609
work or you don't so the only thing you

1851
01:53:49,149 --> 01:53:54,368
can really do in a game if you're

1852
01:53:51,609 --> 01:53:57,880
concerned about battery usage is do less

1853
01:53:54,368 --> 01:53:59,920
right there's nothing else you can do so

1854
01:53:57,880 --> 01:54:01,480
what you would have to do is say look we

1855
01:53:59,920 --> 01:54:03,219
just turn the lighting off if the

1856
01:54:01,479 --> 01:54:04,329
battery if we're worried about battery

1857
01:54:03,219 --> 01:54:05,770
usage or something I mean there's

1858
01:54:04,329 --> 01:54:06,908
nothing else you can do because if you

1859
01:54:05,770 --> 01:54:09,400
have to do the lighting you have to do

1860
01:54:06,908 --> 01:54:11,138
the lighting you can't do it in it if

1861
01:54:09,399 --> 01:54:12,698
you could do it in a way that took less

1862
01:54:11,139 --> 01:54:14,079
power you would have done that

1863
01:54:12,698 --> 01:54:17,519
originally cuz that's just gonna be

1864
01:54:14,079 --> 01:54:20,380
faster and better anyway right so it

1865
01:54:17,520 --> 01:54:22,510
that's none nonsensical question in a

1866
01:54:20,380 --> 01:54:24,730
lot of ways you can't change the work

1867
01:54:22,510 --> 01:54:27,130
scheme for a mobile platform for battery

1868
01:54:24,729 --> 01:54:29,319
usage you have to change the game design

1869
01:54:27,130 --> 01:54:31,359
right you have to change it so that you

1870
01:54:29,319 --> 01:54:32,738
don't have to do that work because if

1871
01:54:31,359 --> 01:54:34,960
you have to do the work you have to do

1872
01:54:32,738 --> 01:54:36,848
it this way which is max score is all

1873
01:54:34,960 --> 01:54:38,618
doing as much as work as you can because

1874
01:54:36,849 --> 01:54:40,300
that's the only way to get the legend

1875
01:54:38,618 --> 01:54:42,158
done on time if you could have done it

1876
01:54:40,300 --> 01:54:46,239
with less you would have and should have

1877
01:54:42,158 --> 01:54:48,219
right and so if you're in a situation

1878
01:54:46,238 --> 01:54:50,888
where you're like this is too much work

1879
01:54:48,219 --> 01:54:52,389
to do for a mobile game because it uses

1880
01:54:50,889 --> 01:54:54,460
too much battery or something like this

1881
01:54:52,389 --> 01:54:55,840
then you just have to change the design

1882
01:54:54,460 --> 01:54:58,210
of the game to make it so that those

1883
01:54:55,840 --> 01:55:01,630
things are not required right those

1884
01:54:58,210 --> 01:55:02,679
things have to not be critical that's

1885
01:55:01,630 --> 01:55:04,980
really the only thing you can do at that

1886
01:55:02,679 --> 01:55:04,980
point

1887
01:55:10,069 --> 01:55:14,788
Arif can new lighting propagation be

1888
01:55:12,448 --> 01:55:18,118
computed while dirty while doing GPU

1889
01:55:14,788 --> 01:55:20,038
during evenings oh so no and the reason

1890
01:55:18,118 --> 01:55:22,380
for that is because this was all the

1891
01:55:20,038 --> 01:55:28,759
lighting that we had to do so it's just

1892
01:55:22,380 --> 01:55:30,929
it's fast enough on the CPU if we if we

1893
01:55:28,760 --> 01:55:33,420
needed more time to do light propagation

1894
01:55:30,929 --> 01:55:34,739
this bar just moves down the reason

1895
01:55:33,420 --> 01:55:35,368
we're waiting for the GPU is cuz we were

1896
01:55:34,738 --> 01:55:38,879
done quick

1897
01:55:35,368 --> 01:55:40,589
we finished fast we don't have we don't

1898
01:55:38,880 --> 01:55:42,659
have any more lightning to compute so we

1899
01:55:40,590 --> 01:55:47,699
could crank up the lighting samples and

1900
01:55:42,658 --> 01:55:50,368
take more time but you know that that's

1901
01:55:47,698 --> 01:55:50,908
just adding work for no reason that

1902
01:55:50,368 --> 01:55:54,769
makes sense

1903
01:55:50,908 --> 01:55:54,769
which doesn't seem like a good plan

1904
01:56:03,010 --> 01:56:05,900
something happens where I can't move

1905
01:56:05,090 --> 01:56:17,349
what did I do

1906
01:56:05,899 --> 01:56:17,348
I don't know what I did

1907
01:56:24,300 --> 01:56:27,599
it's gonna be nice to have our

1908
01:56:25,979 --> 01:56:31,289
characters in here without all the weird

1909
01:56:27,599 --> 01:56:32,670
like giant cat dismembered cat things so

1910
01:56:31,289 --> 01:56:35,578
I'm gonna be happy when we finish that

1911
01:56:32,670 --> 01:56:37,760
little debug UI or editing you I should

1912
01:56:35,578 --> 01:56:37,759
say

1913
01:57:08,609 --> 01:57:12,210
uplink could or we can only start to

1914
01:57:10,920 --> 01:57:15,389
render if the letting is done

1915
01:57:12,210 --> 01:57:18,658
no actually so that's not true so the

1916
01:57:15,389 --> 01:57:21,630
GPU is an asynchronous processor and so

1917
01:57:18,658 --> 01:57:24,448
what actually happens is the GPU is busy

1918
01:57:21,630 --> 01:57:26,159
computing the frame from the previous

1919
01:57:24,448 --> 01:57:28,769
submission well we're doing the lighting

1920
01:57:26,158 --> 01:57:35,219
for the next submission right so

1921
01:57:28,770 --> 01:57:38,639
remember this profile doesn't show us

1922
01:57:35,219 --> 01:57:43,500
any profiling for the GPU so when we

1923
01:57:38,639 --> 01:57:48,359
look at one of these things what we're

1924
01:57:43,500 --> 01:57:50,579
seeing here is the CPUs perspective so

1925
01:57:48,359 --> 01:57:52,349
it knows it did this work and then it

1926
01:57:50,579 --> 01:57:55,439
knows it's at around waiting for the GPU

1927
01:57:52,350 --> 01:57:58,760
to finish right what that means is the

1928
01:57:55,439 --> 01:58:02,129
GPU was actually working the entire time

1929
01:57:58,760 --> 01:58:04,020
because during some part of this it was

1930
01:58:02,130 --> 01:58:05,460
working on the last frame and during

1931
01:58:04,020 --> 01:58:07,710
some part of this it's working on this

1932
01:58:05,460 --> 01:58:10,889
frame right but what we know is it's

1933
01:58:07,710 --> 01:58:13,408
taking a full like sixtieth of a second

1934
01:58:10,889 --> 01:58:16,440
to do stuff now that's not really true

1935
01:58:13,408 --> 01:58:18,479
either because since we're in vsync we

1936
01:58:16,439 --> 01:58:20,928
know that everyone could have finished

1937
01:58:18,479 --> 01:58:24,509
early and might just be waiting around

1938
01:58:20,929 --> 01:58:27,270
right so the GPU is probably waiting on

1939
01:58:24,510 --> 01:58:29,219
the vsync here too and it's not bad to

1940
01:58:27,270 --> 01:58:30,690
be waiting for have everyone waiting

1941
01:58:29,219 --> 01:58:32,789
around it means everyone was fast enough

1942
01:58:30,689 --> 01:58:34,769
everyone went fast enough to finish and

1943
01:58:32,789 --> 01:58:37,050
now they're just waiting but if we

1944
01:58:34,770 --> 01:58:38,429
weren't if we're actually if this is

1945
01:58:37,050 --> 01:58:40,020
actually the amount of time the GPU is

1946
01:58:38,429 --> 01:58:41,639
actually taking then there's still

1947
01:58:40,020 --> 01:58:43,530
nothing else we could do because we

1948
01:58:41,639 --> 01:58:45,750
finished all of our work we can't

1949
01:58:43,529 --> 01:58:47,279
overlap with the GPU anymore because we

1950
01:58:45,750 --> 01:58:48,899
are completely overlapped with the GPU

1951
01:58:47,279 --> 01:58:51,118
right the GPU is cruising along

1952
01:58:48,899 --> 01:58:53,189
rendering the last frame while we're

1953
01:58:51,118 --> 01:58:55,170
doing this stuff we submitted the frame

1954
01:58:53,189 --> 01:58:59,368
here this is where we submitted the

1955
01:58:55,170 --> 01:58:59,880
frame right or maybe back in here

1956
01:58:59,368 --> 01:59:01,589
somewheres

1957
01:58:59,880 --> 01:59:03,868
a little bit more accurate about where

1958
01:59:01,590 --> 01:59:06,600
we submitted the frame technically we

1959
01:59:03,868 --> 01:59:08,339
told it what the frame was here but it's

1960
01:59:06,600 --> 01:59:09,960
probably been working on it somewhere

1961
01:59:08,340 --> 01:59:13,199
here and then it took it and who knows

1962
01:59:09,960 --> 01:59:16,698
right I mean but we gave it all the

1963
01:59:13,198 --> 01:59:16,698
information it needed at this point

1964
01:59:18,149 --> 01:59:23,460
and who knows when it started we don't

1965
01:59:20,340 --> 01:59:28,469
know probably right in the middle but

1966
01:59:23,460 --> 01:59:30,630
hard to say depends on how long it takes

1967
01:59:28,469 --> 01:59:33,300
to process the frame on the GPU we we

1968
01:59:30,630 --> 01:59:35,850
could go look at like an insight would

1969
01:59:33,300 --> 01:59:38,239
probably be able to show us how long it

1970
01:59:35,850 --> 01:59:38,239
was taking

1971
01:59:52,338 --> 01:59:55,639
I read your article on the manipulation

1972
01:59:54,260 --> 01:59:57,260
to work you did on the witness and it

1973
01:59:55,639 --> 01:59:59,149
helped me to bug my problems do you have

1974
01:59:57,260 --> 02:00:01,969
a good way to manipulate rotation is it

1975
01:59:59,149 --> 02:00:03,889
to R a test on a sphere and then take

1976
02:00:01,969 --> 02:00:08,208
the DMS hit and see how long the Delta

1977
02:00:03,889 --> 02:00:09,979
Ark is in the sukkah axis usually for

1978
02:00:08,208 --> 02:00:13,158
rotation the way I like to do it is I

1979
02:00:09,979 --> 02:00:16,609
like to take whatever the plane is

1980
02:00:13,158 --> 02:00:18,888
that's tangent to the rotation axis do

1981
02:00:16,609 --> 02:00:24,499
the hit on there and then project to see

1982
02:00:18,889 --> 02:00:27,409
where I would be on the ring that's how

1983
02:00:24,498 --> 02:00:29,269
I like to do it and you need two cases

1984
02:00:27,408 --> 02:00:31,429
you need one where the plane is facing

1985
02:00:29,269 --> 02:00:34,639
you and one where the plane collapses to

1986
02:00:31,429 --> 02:00:37,399
a line and then I use a band basically a

1987
02:00:34,639 --> 02:00:39,769
box and I use where you are along that

1988
02:00:37,399 --> 02:00:41,599
line because once the plane collapses

1989
02:00:39,769 --> 02:00:46,539
then you don't want to use a ring base

1990
02:00:41,599 --> 02:00:46,538
manipulator anymore does that make sense

1991
02:00:47,498 --> 02:00:50,738
all right

1992
02:00:52,208 --> 02:00:56,148
could you get insight to work into

1993
02:00:53,988 --> 02:00:59,029
double thing yes we have insight working

1994
02:00:56,149 --> 02:01:04,760
now and it works quite well they gave us

1995
02:00:59,029 --> 02:01:05,088
an updated version and it works no I'm

1996
02:01:04,760 --> 02:01:06,289
sorry

1997
02:01:05,088 --> 02:01:08,448
that wasn't why it worked it worked

1998
02:01:06,288 --> 02:01:10,068
because we had to completely uninstall

1999
02:01:08,448 --> 02:01:11,568
and reinstall that's what they told us

2000
02:01:10,069 --> 02:01:13,819
to do and that worked so there was some

2001
02:01:11,569 --> 02:01:15,619
kind of weird like you can't install an

2002
02:01:13,819 --> 02:01:17,419
insight on top of the existing driver

2003
02:01:15,618 --> 02:01:19,458
you have to uninstall all the drivers

2004
02:01:17,418 --> 02:01:21,078
and all event sites and then reinstall

2005
02:01:19,458 --> 02:01:23,208
or something it was some weird like

2006
02:01:21,078 --> 02:01:25,878
installation problem so we did that and

2007
02:01:23,208 --> 02:01:27,229
then it worked and now we've used it

2008
02:01:25,878 --> 02:01:28,519
multiple times the stream and it seems

2009
02:01:27,229 --> 02:01:30,679
to work really well like we've been able

2010
02:01:28,519 --> 02:01:32,269
to like go in and look at textures and

2011
02:01:30,679 --> 02:01:33,918
figure out that we weren't downloading

2012
02:01:32,269 --> 02:01:40,668
something or whatever so like it's been

2013
02:01:33,918 --> 02:01:42,139
good it's it's been good all right

2014
02:01:40,668 --> 02:01:43,068
thank your for joining me for hand mate

2015
02:01:42,139 --> 02:01:44,538
here oh it's been a pleasure coming with

2016
02:01:43,069 --> 02:01:45,859
you as always if you would like to

2017
02:01:44,538 --> 02:01:48,078
following series at home you can always

2018
02:01:45,859 --> 02:01:50,479
go to handmade hero org and pier to the

2019
02:01:48,078 --> 02:01:53,719
game it comes with the source code so

2020
02:01:50,479 --> 02:01:56,300
you can follow along at home I'd like to

2021
02:01:53,719 --> 02:01:59,260
finish up that edit UI next weekend

2022
02:01:56,300 --> 02:02:01,309
hopefully so that we can

2023
02:01:59,260 --> 02:02:03,439
Snapple our stuff together and start

2024
02:02:01,309 --> 02:02:05,300
putting a bunch of stuff into the game

2025
02:02:03,439 --> 02:02:07,280
it's really the main thing I think

2026
02:02:05,300 --> 02:02:10,389
that's keeping us from giving a thumbs

2027
02:02:07,279 --> 02:02:12,408
up to the like asset import pipeline

2028
02:02:10,389 --> 02:02:14,269
because it seems like everything else is

2029
02:02:12,408 --> 02:02:14,988
working we'll see when we get there and

2030
02:02:14,269 --> 02:02:16,969
maybe there's some things we're

2031
02:02:14,988 --> 02:02:18,738
forgetting but that's the the big one is

2032
02:02:16,969 --> 02:02:20,239
just that annotation part we just didn't

2033
02:02:18,738 --> 02:02:21,948
have it and so now we're working on

2034
02:02:20,238 --> 02:02:24,259
getting how do we put those those things

2035
02:02:21,948 --> 02:02:25,638
in there so we have a little more to do

2036
02:02:24,260 --> 02:02:27,079
we got to get that UI working and then

2037
02:02:25,639 --> 02:02:28,578
we may need one more weekend because we

2038
02:02:27,078 --> 02:02:29,898
want to have a permanent storage format

2039
02:02:28,578 --> 02:02:32,359
for it some kind of text file we can

2040
02:02:29,899 --> 02:02:34,039
read and write that gets stored off of

2041
02:02:32,359 --> 02:02:36,018
the PNG so we can rebuild everything

2042
02:02:34,038 --> 02:02:38,029
from scratch anytime we want to in case

2043
02:02:36,019 --> 02:02:39,469
we want to change hij format we don't

2044
02:02:38,029 --> 02:02:41,090
really want the HSA for necessarily to

2045
02:02:39,469 --> 02:02:43,939
be our permit storage format that that

2046
02:02:41,090 --> 02:02:45,349
maybe not be a good idea so having a way

2047
02:02:43,939 --> 02:02:47,510
to put a backing store on there is

2048
02:02:45,349 --> 02:02:48,828
probably something we wanted to but it's

2049
02:02:47,510 --> 02:02:50,510
pretty good looks like we're coming up

2050
02:02:48,828 --> 02:02:52,938
on Christmas here

2051
02:02:50,510 --> 02:02:54,949
which of course is also in the game

2052
02:02:52,939 --> 02:02:59,059
handmade hero because Krampus of course

2053
02:02:54,948 --> 02:03:00,469
visits around the Christmas times and so

2054
02:02:59,059 --> 02:03:02,418
that's a good time to be finishing up

2055
02:03:00,469 --> 02:03:04,698
that and then maybe we can basically say

2056
02:03:02,418 --> 02:03:07,429
that we're starting off the new year

2057
02:03:04,698 --> 02:03:08,958
with weird game stuff implementation

2058
02:03:07,429 --> 02:03:10,219
stuff that we want to do and that's you

2059
02:03:08,958 --> 02:03:13,788
know oh it's kind of a good breaking

2060
02:03:10,219 --> 02:03:15,918
point is around the holidays around the

2061
02:03:13,788 --> 02:03:17,359
new year so anyway that's it for today

2062
02:03:15,918 --> 02:03:18,859
hope see you back here next week until

2063
02:03:17,359 --> 02:03:20,359
then have fun programming everyone and

2064
02:03:18,859 --> 02:03:22,748
I'll see you on the Internet take it

2065
02:03:20,359 --> 02:03:22,748
easy everybody

