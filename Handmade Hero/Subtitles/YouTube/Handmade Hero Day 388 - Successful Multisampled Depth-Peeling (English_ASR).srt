1
00:00:00,770 --> 00:00:06,330
start recording okay hello everyone and

2
00:00:04,919 --> 00:00:08,370
welcome to handmade year the show where

3
00:00:06,330 --> 00:00:12,480
we code a complete game live on stream

4
00:00:08,369 --> 00:00:15,689
yeah some new stuff today

5
00:00:12,480 --> 00:00:17,789
first things first Sergio I totally

6
00:00:15,689 --> 00:00:21,600
solved our Milton problems from

7
00:00:17,789 --> 00:00:24,260
yesterday so we now have a super good

8
00:00:21,600 --> 00:00:27,779
super full functioning Milton it's

9
00:00:24,260 --> 00:00:29,310
really zippy it's perfect I'm pretty

10
00:00:27,778 --> 00:00:33,619
excited about this actually this is the

11
00:00:29,309 --> 00:00:37,530
best drawing we've had on handmade hero

12
00:00:33,619 --> 00:00:39,449
this feels like really good I think it's

13
00:00:37,530 --> 00:00:41,250
going to be much nicer to work on the

14
00:00:39,450 --> 00:00:45,059
blackboard now so thank you very much

15
00:00:41,250 --> 00:00:46,799
Sergio for fixing that for us it feels

16
00:00:45,058 --> 00:00:48,329
really great now even on the super old

17
00:00:46,799 --> 00:00:51,299
machines it's you know pretty much

18
00:00:48,329 --> 00:00:53,448
perfect the other thing we had is

19
00:00:51,299 --> 00:00:58,049
someone was suggesting on the pre stream

20
00:00:53,448 --> 00:00:59,519
that we maybe try code excels for grabs

21
00:00:58,049 --> 00:01:01,619
debugging because as you know the

22
00:00:59,520 --> 00:01:03,750
graphics card is really old so stuff

23
00:01:01,619 --> 00:01:07,228
like render dock which we tried before I

24
00:01:03,750 --> 00:01:09,719
just don't work and so they were saying

25
00:01:07,228 --> 00:01:12,239
maybe try the old version of code excel

26
00:01:09,719 --> 00:01:14,280
because you know it had to run on these

27
00:01:12,239 --> 00:01:15,569
old cards it's a legacy piece of

28
00:01:14,280 --> 00:01:18,629
software that was for from that time

29
00:01:15,569 --> 00:01:21,899
period so we downloaded node version and

30
00:01:18,629 --> 00:01:23,519
we're going to try it so I'm just going

31
00:01:21,900 --> 00:01:25,650
to go ahead and try it here's we're

32
00:01:23,519 --> 00:01:27,329
going to try on say three days for 88

33
00:01:25,650 --> 00:01:30,450
today so day three t7 source code is

34
00:01:27,329 --> 00:01:32,548
what's sitting on my drive right now so

35
00:01:30,450 --> 00:01:34,079
I'm going to just go ahead and see I've

36
00:01:32,549 --> 00:01:37,170
never used this piece of software before

37
00:01:34,078 --> 00:01:41,548
I assume this is this used to be Grem

38
00:01:37,170 --> 00:01:47,609
ADIZ program right like AMD bought like

39
00:01:41,549 --> 00:01:49,799
remedy or something or bought the gr

40
00:01:47,609 --> 00:01:51,390
debugger from them or whatever something

41
00:01:49,799 --> 00:01:53,130
like that I don't really remember but I

42
00:01:51,390 --> 00:01:56,489
feel like that's what code excel is is

43
00:01:53,129 --> 00:01:59,039
like the the was the latest incantation

44
00:01:56,489 --> 00:02:01,709
at the time of crema DS thing but I

45
00:01:59,040 --> 00:02:04,320
could be really wrong about that I don't

46
00:02:01,709 --> 00:02:06,569
remember that's just my hunch I so we've

47
00:02:04,319 --> 00:02:09,359
got this debug here and I'm just going

48
00:02:06,569 --> 00:02:12,949
to try doing what it says so I've got

49
00:02:09,360 --> 00:02:12,950
create a new product for debugging

50
00:02:12,960 --> 00:02:19,050
and so I'll just say you know handmade

51
00:02:15,150 --> 00:02:21,300
hero it's a local host it's a desktop

52
00:02:19,050 --> 00:02:27,000
application so I'll go and pick one of

53
00:02:21,300 --> 00:02:29,790
those we've got that on here it's not a

54
00:02:27,000 --> 00:02:31,949
mayor to build so we just want win32

55
00:02:29,789 --> 00:02:34,259
handmade and then our working directory

56
00:02:31,949 --> 00:02:39,839
is is not filled with data

57
00:02:34,259 --> 00:02:41,459
I believe so we can load our stuff and

58
00:02:39,840 --> 00:02:43,110
we don't pass any command-line arguments

59
00:02:41,460 --> 00:02:45,930
at the moment so I think that's really

60
00:02:43,110 --> 00:02:49,500
all we need the source file thing I

61
00:02:45,930 --> 00:02:50,939
don't know if they need that or not if

62
00:02:49,500 --> 00:02:52,680
they can get it out of a PDB or what's

63
00:02:50,939 --> 00:02:54,090
going on but you know it just so happens

64
00:02:52,680 --> 00:02:57,360
that all of our code is in this

65
00:02:54,090 --> 00:03:01,770
directory so I'll just give it that in

66
00:02:57,360 --> 00:03:05,100
case that helps I don't know what this

67
00:03:01,770 --> 00:03:06,960
is about really looks just like Oh how

68
00:03:05,099 --> 00:03:09,299
do we determine where a frame is or

69
00:03:06,960 --> 00:03:11,520
isn't swap buffers would be fine for us

70
00:03:09,300 --> 00:03:14,340
we don't have any OpenCL we're only open

71
00:03:11,520 --> 00:03:17,640
GL so that is the area would be fine I

72
00:03:14,340 --> 00:03:20,069
don't know that we really need much in

73
00:03:17,639 --> 00:03:21,599
the way of CPU profiling right now we're

74
00:03:20,069 --> 00:03:23,219
mostly doing debugging so I could

75
00:03:21,599 --> 00:03:25,109
probably turn that off but so I don't

76
00:03:23,219 --> 00:03:27,150
know how to use this tool yet I'm just

77
00:03:25,110 --> 00:03:28,530
going to leave it on defaults on

78
00:03:27,150 --> 00:03:31,650
anything that I don't obviously know

79
00:03:28,530 --> 00:03:34,439
should be changed and so all of that

80
00:03:31,650 --> 00:03:37,289
looks fine so I'm just going to say ok

81
00:03:34,439 --> 00:03:40,949
and and then I'm going to see what

82
00:03:37,289 --> 00:03:43,709
happens if I run this I assume that just

83
00:03:40,949 --> 00:03:45,299
clicking on this this local arrow here

84
00:03:43,710 --> 00:03:49,110
will do the trick

85
00:03:45,300 --> 00:03:51,300
I don't know if I need to say so there's

86
00:03:49,110 --> 00:03:53,070
places to put the logs I'm going to have

87
00:03:51,300 --> 00:03:59,990
it put the logs in our temp directory

88
00:03:53,069 --> 00:04:04,019
here just because why not and and then I

89
00:03:59,990 --> 00:04:06,900
guess I can just leave all of this stuff

90
00:04:04,020 --> 00:04:08,210
basically the same for now so I'm going

91
00:04:06,900 --> 00:04:10,830
to hit the Run button

92
00:04:08,210 --> 00:04:13,800
there's our you know there's handmade

93
00:04:10,830 --> 00:04:17,129
hero running and then I'm going to just

94
00:04:13,800 --> 00:04:18,900
close it see if it did anything I don't

95
00:04:17,129 --> 00:04:21,480
know if I needed to tell it to start

96
00:04:18,899 --> 00:04:23,310
maybe I didn't do that I'm not sure or

97
00:04:21,480 --> 00:04:24,629
maybe that was enough it's a little bit

98
00:04:23,310 --> 00:04:26,610
behind my head here so it's going to put

99
00:04:24,629 --> 00:04:35,909
it in here

100
00:04:26,610 --> 00:04:37,949
so let's see this just looks like basic

101
00:04:35,910 --> 00:04:40,350
stuff like when a context was created in

102
00:04:37,949 --> 00:04:42,449
things like this so I'm guessing that I

103
00:04:40,350 --> 00:04:45,990
probably have to do something to tell it

104
00:04:42,449 --> 00:04:49,168
how to capture a frame or something like

105
00:04:45,990 --> 00:04:52,189
maybe I have to put push one of these

106
00:04:49,168 --> 00:04:52,189
buttons you know

107
00:05:02,860 --> 00:05:09,040
hello what are you what is this output

108
00:05:06,579 --> 00:05:13,560
properties click so sort of functional

109
00:05:09,040 --> 00:05:13,560
history call set locals watch

110
00:05:24,500 --> 00:05:33,529
so it looks like I mean one thing I can

111
00:05:31,139 --> 00:05:38,579
do here is set a breakpoint on something

112
00:05:33,529 --> 00:05:43,439
I'm not sure that that's really what we

113
00:05:38,579 --> 00:05:45,389
want but you know I let's just try

114
00:05:43,439 --> 00:05:47,579
something basic here because we're just

115
00:05:45,389 --> 00:05:52,710
trying to get our feet wet so here we

116
00:05:47,579 --> 00:05:54,240
run the program it's a little weird that

117
00:05:52,709 --> 00:05:55,799
we saw anything on the screen before

118
00:05:54,240 --> 00:05:57,329
calling swap buffers but that might have

119
00:05:55,800 --> 00:05:58,770
been from the last run of the game like

120
00:05:57,329 --> 00:06:02,879
maybe that's just junk that was in the

121
00:05:58,769 --> 00:06:04,228
buffer or something or hard to say but

122
00:06:02,879 --> 00:06:08,850
it did what we asked which is it did

123
00:06:04,228 --> 00:06:11,279
break on swap buffers and so I I guess

124
00:06:08,850 --> 00:06:14,820
I'm just going to kind of walk this back

125
00:06:11,279 --> 00:06:16,559
here so here's a complete history of

126
00:06:14,819 --> 00:06:21,019
what happened so it looks like that

127
00:06:16,560 --> 00:06:26,220
worked pretty well which is kind of nice

128
00:06:21,019 --> 00:06:29,639
so this does look to me like this looks

129
00:06:26,220 --> 00:06:32,370
right I mean you could imagine us using

130
00:06:29,639 --> 00:06:35,250
this to find bugs right this is this is

131
00:06:32,370 --> 00:06:36,389
a pretty nice like just if we were to do

132
00:06:35,250 --> 00:06:38,009
this ourselves you would have had to

133
00:06:36,389 --> 00:06:39,810
write something that logs all of our

134
00:06:38,009 --> 00:06:41,430
OpenGL calls and here is just a thing

135
00:06:39,810 --> 00:06:44,910
that will do that for us so even that is

136
00:06:41,430 --> 00:06:46,288
probably worth it right and again now we

137
00:06:44,910 --> 00:06:47,430
can even see like this is what I was

138
00:06:46,288 --> 00:06:49,319
talking about you can see if we have to

139
00:06:47,430 --> 00:06:53,060
issue a draw call for every triangle

140
00:06:49,319 --> 00:06:56,219
because we have to change textures right

141
00:06:53,060 --> 00:06:57,990
so although I am a little bit confused

142
00:06:56,220 --> 00:07:04,800
as to why it's always saying buying

143
00:06:57,990 --> 00:07:08,939
texture - oh right because that's the

144
00:07:04,800 --> 00:07:11,639
white the white texture that's for the

145
00:07:08,939 --> 00:07:13,889
just the cubes I bet but shouldn't we be

146
00:07:11,639 --> 00:07:16,340
seeing other there should be a bunch of

147
00:07:13,889 --> 00:07:18,870
times when we bind something else

148
00:07:16,339 --> 00:07:20,728
probably now in the first frame though

149
00:07:18,870 --> 00:07:24,598
because we haven't loaded anything yet

150
00:07:20,728 --> 00:07:27,029
we haven't loaded any bitmaps yet so it

151
00:07:24,598 --> 00:07:33,889
probably just skipped those can we go

152
00:07:27,029 --> 00:07:33,889
again to the next frame and not great

153
00:07:35,600 --> 00:07:42,180
I'm guessing I don't need to send that

154
00:07:37,829 --> 00:07:48,000
probably because they're not updating

155
00:07:42,180 --> 00:07:51,540
this version of software anymore so yeah

156
00:07:48,000 --> 00:08:00,990
it's a little iffy right but it did run

157
00:07:51,540 --> 00:08:02,340
once so let's try that one more time and

158
00:08:00,990 --> 00:08:03,750
see if I can run it twice or if it's

159
00:08:02,339 --> 00:08:08,839
going to crash every time we try to run

160
00:08:03,750 --> 00:08:08,839
it twice so basically it can't run twice

161
00:08:09,920 --> 00:08:27,330
let's just hit debug know how to detach

162
00:08:21,600 --> 00:08:29,850
this doesn't look like they have it

163
00:08:27,329 --> 00:08:31,529
attached see I would like to see where

164
00:08:29,850 --> 00:08:34,350
we broken barcodes you know maybe we've

165
00:08:31,529 --> 00:08:36,509
got a bug that's you know causing the

166
00:08:34,350 --> 00:08:38,519
crash that we could fix and then it

167
00:08:36,509 --> 00:08:40,200
wouldn't be a problem but it's hard to

168
00:08:38,519 --> 00:08:45,319
know because it's not going to tell us

169
00:08:40,200 --> 00:08:47,940
where we were getting that crash right

170
00:08:45,320 --> 00:08:55,830
so that's unfortunate so I don't know

171
00:08:47,940 --> 00:08:57,990
that would be helpful it might just not

172
00:08:55,830 --> 00:09:01,500
be because it might be too unstable but

173
00:08:57,990 --> 00:09:03,090
it's a little early to tell right so

174
00:09:01,500 --> 00:09:06,379
let's take a look at the breakpoint

175
00:09:03,090 --> 00:09:10,620
window here I'm going to delete this

176
00:09:06,379 --> 00:09:12,750
let's say we were running so it can run

177
00:09:10,620 --> 00:09:17,460
multiple frames is fine and then I were

178
00:09:12,750 --> 00:09:21,840
to break yeah so that really just looks

179
00:09:17,460 --> 00:09:27,710
like a problem with code Excel and not

180
00:09:21,840 --> 00:09:27,710
us unfortunately right I mean

181
00:09:29,980 --> 00:09:32,980
yeah

182
00:09:35,250 --> 00:09:50,320
not not great so I don't know I couldn't

183
00:09:43,450 --> 00:09:53,379
help maybe uh it's just looking a little

184
00:09:50,320 --> 00:09:56,620
iffy there though is all I think what

185
00:09:53,379 --> 00:10:02,470
probably I should do is at some point I

186
00:09:56,620 --> 00:10:04,389
should update this machine probably just

187
00:10:02,470 --> 00:10:06,070
put it get a new machine honestly the

188
00:10:04,389 --> 00:10:09,208
whole machine is so old it's it's you've

189
00:10:06,070 --> 00:10:13,330
decade old at this point more or less

190
00:10:09,208 --> 00:10:15,699
mister graphics card is so I should

191
00:10:13,330 --> 00:10:19,899
probably you know just update to a new

192
00:10:15,700 --> 00:10:21,640
machine maybe we can find some company

193
00:10:19,899 --> 00:10:24,458
interested in donating machine for us to

194
00:10:21,639 --> 00:10:30,278
run on handmade hero I don't know

195
00:10:24,458 --> 00:10:35,458
but yeah anyway I'm going to go ahead

196
00:10:30,278 --> 00:10:39,850
and switch over to working on the code

197
00:10:35,458 --> 00:10:43,439
regular and we do want to before moving

198
00:10:39,850 --> 00:10:46,389
on we do have the sort of bug report

199
00:10:43,440 --> 00:10:53,130
that came in on the pre stream it's also

200
00:10:46,389 --> 00:10:53,129
on handmade network I'll pull it up now

201
00:10:53,159 --> 00:10:58,949
that folks found which which might help

202
00:10:55,809 --> 00:11:01,719
us out we don't know yet but it could

203
00:10:58,950 --> 00:11:03,180
with what we were playing around with so

204
00:11:01,720 --> 00:11:06,190
we're going to widen this a little bit

205
00:11:03,179 --> 00:11:14,139
so let's go ahead and take a look at

206
00:11:06,190 --> 00:11:16,480
that here so here we go so the problem

207
00:11:14,139 --> 00:11:23,549
here is that when we do resolves

208
00:11:16,480 --> 00:11:26,440
multisample depth test is disabled so

209
00:11:23,549 --> 00:11:28,809
basically the thing is that it's the

210
00:11:26,440 --> 00:11:32,290
assumption is that the disable depth

211
00:11:28,809 --> 00:11:34,449
test is creating other bugs for us and

212
00:11:32,289 --> 00:11:37,179
that's the problem so I'll read this

213
00:11:34,450 --> 00:11:41,459
whole thing out and then we can go take

214
00:11:37,179 --> 00:11:41,458
a look and see what happened

215
00:11:56,899 --> 00:12:05,519
all right so Moxie is high and I believe

216
00:12:00,210 --> 00:12:07,980
it locks is MTX knocks right on the yeah

217
00:12:05,519 --> 00:12:10,259
I think MTS mocks you are mocks on the

218
00:12:07,980 --> 00:12:18,420
forums which are MTS mocks on the chat

219
00:12:10,259 --> 00:12:19,860
right MTS mocks is here I think anyway

220
00:12:18,419 --> 00:12:22,589
I'll let you guys figure that out but I

221
00:12:19,860 --> 00:12:24,240
believe MTS Knox and mock so the same

222
00:12:22,590 --> 00:12:26,310
person

223
00:12:24,240 --> 00:12:28,680
I believe me to probably attempt to do

224
00:12:26,309 --> 00:12:30,719
handli resolve if the desk buffer is

225
00:12:28,679 --> 00:12:38,789
disabled with GL disabled GL depth test

226
00:12:30,720 --> 00:12:43,050
which is true because we we do switch

227
00:12:38,789 --> 00:12:44,399
that off right but this also disables

228
00:12:43,049 --> 00:12:46,139
the depth right and therefore messes up

229
00:12:44,399 --> 00:12:47,699
all the following peels before using the

230
00:12:46,139 --> 00:12:49,919
handmade resolve the blip frame buffer

231
00:12:47,700 --> 00:12:52,110
would fill the depth buffer but now this

232
00:12:49,919 --> 00:12:53,669
should be done manually a good way to

233
00:12:52,110 --> 00:12:55,800
demonstrate the bug is to only appeal

234
00:12:53,669 --> 00:12:58,379
1/4 file sheffster not so anything so a

235
00:12:55,799 --> 00:12:59,549
better way is this I found that that

236
00:12:58,379 --> 00:13:01,049
with trying to improve the manual is off

237
00:12:59,549 --> 00:13:02,339
fader I believe the deaths in max range

238
00:13:01,049 --> 00:13:03,599
would give good results but ran through

239
00:13:02,340 --> 00:13:05,639
the definition while debugging ask the

240
00:13:03,600 --> 00:13:07,170
dustbin max worked okay if I used used

241
00:13:05,639 --> 00:13:08,639
sample count sample can help fraction to

242
00:13:07,169 --> 00:13:10,500
set the Alpha value of the combined

243
00:13:08,639 --> 00:13:13,289
color and a pound to find depth

244
00:13:10,500 --> 00:13:14,820
threshold of and that remember we try to

245
00:13:13,289 --> 00:13:15,719
set that it wasn't working so we kind of

246
00:13:14,820 --> 00:13:20,040
knew something was wrong we couldn't

247
00:13:15,720 --> 00:13:23,550
figure out what this is a good good find

248
00:13:20,039 --> 00:13:24,659
thank you mocks after bit more fidgeting

249
00:13:23,549 --> 00:13:26,129
and actually watching the rest the

250
00:13:24,659 --> 00:13:28,139
episode I saw that you were also using

251
00:13:26,129 --> 00:13:30,210
centroid to get better death result Ixil

252
00:13:28,139 --> 00:13:31,860
with the center I still used some edges

253
00:13:30,210 --> 00:13:33,870
won't get smooth the connection of a

254
00:13:31,860 --> 00:13:35,519
lower block against a higher block but

255
00:13:33,870 --> 00:13:37,169
a-sailing essentially gives weird

256
00:13:35,519 --> 00:13:39,059
results along other edges so I tried

257
00:13:37,169 --> 00:13:41,189
collecting all the samples without

258
00:13:39,059 --> 00:13:42,750
respect for the depth they have and only

259
00:13:41,190 --> 00:13:44,910
setting the GL frog depth to the depth

260
00:13:42,750 --> 00:13:47,279
max of the tested range by commenting

261
00:13:44,909 --> 00:13:49,409
line 31 table the range test I think

262
00:13:47,279 --> 00:13:51,209
this emulates the normal resolve as far

263
00:13:49,409 --> 00:13:52,379
as selecting colors the best but still

264
00:13:51,210 --> 00:13:54,300
the upside of clearly the depth buffer

265
00:13:52,379 --> 00:13:56,610
output that combined with sailing centre

266
00:13:54,299 --> 00:14:01,469
a deficit to get the best result a bit a

267
00:13:56,610 --> 00:14:03,300
key but seems to give nice results so I

268
00:14:01,470 --> 00:14:04,769
guess what I would say is everything

269
00:14:03,299 --> 00:14:07,049
there sounds really good

270
00:14:04,769 --> 00:14:08,490
I totally agree that the GL disabled F

271
00:14:07,049 --> 00:14:10,199
tests I hadn't thought about that

272
00:14:08,490 --> 00:14:13,500
but it is true that they

273
00:14:10,200 --> 00:14:15,750
basically when GL depth test the way

274
00:14:13,500 --> 00:14:17,820
that they do the depth testing thing is

275
00:14:15,750 --> 00:14:19,889
a little weird so GL disables depth test

276
00:14:17,820 --> 00:14:23,340
is really more like saying GL disable

277
00:14:19,889 --> 00:14:25,919
the depth pipeline and if you want depth

278
00:14:23,340 --> 00:14:27,870
right to occur but not depth test you

279
00:14:25,919 --> 00:14:30,029
don't GL disabled GL depth test what you

280
00:14:27,870 --> 00:14:33,029
do is you enable zeal depth test let's

281
00:14:30,029 --> 00:14:35,909
set the depth function to effectively

282
00:14:33,029 --> 00:14:39,480
not test so it's really just more of a

283
00:14:35,909 --> 00:14:43,009
misnomer but it's it's really GL disable

284
00:14:39,480 --> 00:14:47,250
deal depth processing in a sense and so

285
00:14:43,009 --> 00:14:49,919
mocks is completely correct here that GL

286
00:14:47,250 --> 00:14:51,899
depth bunk GL always is the right way to

287
00:14:49,919 --> 00:14:54,269
disable that if we want to

288
00:14:51,899 --> 00:14:56,129
I don't remember thinking about this I

289
00:14:54,269 --> 00:14:57,929
suspect that really what happened is it

290
00:14:56,129 --> 00:15:00,659
just totally flipped my mind as many

291
00:14:57,929 --> 00:15:02,000
open GL state things do it's one of the

292
00:15:00,659 --> 00:15:04,049
problems with the programming with GPU

293
00:15:02,000 --> 00:15:06,870
especially is that because you're not

294
00:15:04,049 --> 00:15:08,669
stepping through the code yourself it's

295
00:15:06,870 --> 00:15:12,659
really hard to remember what you're not

296
00:15:08,669 --> 00:15:14,669
thinking of right because normally when

297
00:15:12,659 --> 00:15:16,019
you write code you can you wrote all the

298
00:15:14,669 --> 00:15:18,149
code in there so you know what he did

299
00:15:16,019 --> 00:15:20,370
and you're not going to be stupid enough

300
00:15:18,149 --> 00:15:21,809
not to write a depth value in somewhere

301
00:15:20,370 --> 00:15:24,120
if you thought you were supposed to

302
00:15:21,809 --> 00:15:25,799
write and you would see it very clear as

303
00:15:24,120 --> 00:15:27,539
you didn't but with GPU code that's not

304
00:15:25,799 --> 00:15:28,740
the case there's all the stuff that's

305
00:15:27,539 --> 00:15:30,599
configured and you're just flipping

306
00:15:28,740 --> 00:15:32,940
switches and if you forget to flip one

307
00:15:30,600 --> 00:15:34,170
of the switches well some whole set of

308
00:15:32,940 --> 00:15:36,540
things might be happening or not

309
00:15:34,169 --> 00:15:37,769
happening that you just assumed were

310
00:15:36,539 --> 00:15:39,569
happening because in your mind that's

311
00:15:37,769 --> 00:15:41,850
what you were trying to do and you never

312
00:15:39,570 --> 00:15:43,500
explicitly write the code for it so you

313
00:15:41,850 --> 00:15:45,269
just have to remember which switches you

314
00:15:43,500 --> 00:15:47,179
have set and which ones you tell in this

315
00:15:45,269 --> 00:15:48,809
case I think that's just completely

316
00:15:47,179 --> 00:15:51,289
flipped my mind

317
00:15:48,809 --> 00:15:54,239
entirely I didn't think I thought about

318
00:15:51,289 --> 00:15:56,309
death rights I think I was only thinking

319
00:15:54,240 --> 00:15:58,440
about depth testing and I never

320
00:15:56,309 --> 00:16:01,829
remembered like oh wait if I turn off

321
00:15:58,440 --> 00:16:04,380
depth testing depth writing will also

322
00:16:01,830 --> 00:16:09,120
turn off and we need to write to the

323
00:16:04,379 --> 00:16:10,559
depth buffer so anyway if nothing else

324
00:16:09,120 --> 00:16:12,330
even if it doesn't work thank you very

325
00:16:10,559 --> 00:16:15,059
much mock's for looking into that I

326
00:16:12,330 --> 00:16:17,750
probably would have just moved on and

327
00:16:15,059 --> 00:16:21,000
never really gone back and revisited it

328
00:16:17,750 --> 00:16:23,440
but now we we will and maybe we can find

329
00:16:21,000 --> 00:16:25,629
something that works in the end

330
00:16:23,440 --> 00:16:26,890
because it would be nice it would be

331
00:16:25,629 --> 00:16:28,870
nice to know that there what if there

332
00:16:26,889 --> 00:16:31,960
was something here that we could work

333
00:16:28,870 --> 00:16:33,639
with I so let's take a look at where we

334
00:16:31,960 --> 00:16:35,259
left this because I we were kinda

335
00:16:33,639 --> 00:16:38,319
messing around with a I only remember

336
00:16:35,259 --> 00:16:39,789
exactly what we were doing at the time

337
00:16:38,320 --> 00:16:41,379
so first of all this def threshold

338
00:16:39,789 --> 00:16:42,669
should be much too high probably

339
00:16:41,379 --> 00:16:46,200
although we probably want to look at

340
00:16:42,669 --> 00:16:48,759
setting this in a different way so

341
00:16:46,200 --> 00:16:51,879
because remember is this the depth range

342
00:16:48,759 --> 00:17:02,470
is nonlinear so probably what we want to

343
00:16:51,879 --> 00:17:04,449
do you know we might want to try to come

344
00:17:02,470 --> 00:17:06,699
up with a way of analyzing our depth

345
00:17:04,449 --> 00:17:09,310
separations in a way that's not going to

346
00:17:06,699 --> 00:17:12,400
vary tremendously as we progress outward

347
00:17:09,309 --> 00:17:15,639
from the camera because things that are

348
00:17:12,400 --> 00:17:17,350
small changes close to the camera and

349
00:17:15,640 --> 00:17:17,949
things that are small changes far from

350
00:17:17,349 --> 00:17:20,230
the camera

351
00:17:17,949 --> 00:17:21,699
could have different meaning in terms of

352
00:17:20,230 --> 00:17:23,769
whether we think they're close enough to

353
00:17:21,699 --> 00:17:25,990
weren't peeling or not peeling and stuff

354
00:17:23,769 --> 00:17:28,119
like that so we don't really know the

355
00:17:25,990 --> 00:17:29,470
behavior of that but we might want to

356
00:17:28,119 --> 00:17:31,299
look into that or at least we want to

357
00:17:29,470 --> 00:17:32,589
mark it so that it's somewhere far in

358
00:17:31,299 --> 00:17:34,779
the future people are looking at this

359
00:17:32,589 --> 00:17:37,629
code and trying to improve it they can

360
00:17:34,779 --> 00:17:39,399
get it you know maybe get a leg up on

361
00:17:37,630 --> 00:17:41,020
the fact that that was something that

362
00:17:39,400 --> 00:17:45,550
never really got investigated you know

363
00:17:41,019 --> 00:17:48,579
that sort of thing okay so in theory

364
00:17:45,549 --> 00:17:49,809
this looks pretty good with there's some

365
00:17:48,579 --> 00:17:51,429
stuff that I would like to do to it

366
00:17:49,809 --> 00:17:53,950
certainly but it looks like it's still

367
00:17:51,430 --> 00:17:57,549
doing roughly what it should be doing

368
00:17:53,950 --> 00:18:00,730
which is combining the colors and and

369
00:17:57,549 --> 00:18:03,250
then setting the depth value it sounded

370
00:18:00,730 --> 00:18:05,380
to me like emptiest max was suggesting

371
00:18:03,250 --> 00:18:08,890
that in playing around with it he found

372
00:18:05,380 --> 00:18:13,060
it was better to just actually sum all

373
00:18:08,890 --> 00:18:16,570
the colors together so you don't you

374
00:18:13,059 --> 00:18:18,250
don't want to only some the ones in the

375
00:18:16,569 --> 00:18:20,619
depth range that's what it sort of

376
00:18:18,250 --> 00:18:23,440
sounded like he was saying is what he

377
00:18:20,619 --> 00:18:25,389
found for the best results so we're

378
00:18:23,440 --> 00:18:27,039
going to start by leaving this the way

379
00:18:25,390 --> 00:18:32,970
it is but then we'll come back here and

380
00:18:27,039 --> 00:18:35,839
and try taking it just boxes advice I -

381
00:18:32,970 --> 00:18:38,360
you know just see whether

382
00:18:35,839 --> 00:18:40,759
returning that to a general sum for the

383
00:18:38,359 --> 00:18:43,309
color side of things and only using the

384
00:18:40,759 --> 00:18:45,410
picking range to pick the depth is

385
00:18:43,309 --> 00:18:50,539
actually an improvement visual quality

386
00:18:45,410 --> 00:18:52,640
wise because it might be so okay so

387
00:18:50,539 --> 00:18:53,569
let's take a look here the reason that I

388
00:18:52,640 --> 00:18:55,430
was assuming that wouldn't be the case

389
00:18:53,569 --> 00:18:56,899
because look that would over contribute

390
00:18:55,430 --> 00:18:58,340
things that were underneath because

391
00:18:56,900 --> 00:19:02,269
they'll get contributed on both depth

392
00:18:58,339 --> 00:19:05,269
peels but you know it's hard to say

393
00:19:02,269 --> 00:19:06,859
right multi sampling is a bit of a hack

394
00:19:05,269 --> 00:19:08,839
with depth feeling right when we're

395
00:19:06,859 --> 00:19:11,689
putting them together like this so it's

396
00:19:08,839 --> 00:19:13,849
not unusual to expect that happy-happy

397
00:19:11,690 --> 00:19:15,049
versions of the resolve might also be

398
00:19:13,849 --> 00:19:16,129
better because we're kind of doing

399
00:19:15,049 --> 00:19:20,599
something a little aqui in the first

400
00:19:16,130 --> 00:19:27,050
place right alright so let's take a look

401
00:19:20,599 --> 00:19:34,369
at that result code that's the compiled

402
00:19:27,049 --> 00:19:36,200
not what I want none of this is what I

403
00:19:34,369 --> 00:19:36,609
want where is my actual result there it

404
00:19:36,200 --> 00:19:39,230
is

405
00:19:36,609 --> 00:19:41,029
so here's resolved multi sample you can

406
00:19:39,230 --> 00:19:43,370
see the disabled death test here and the

407
00:19:41,029 --> 00:19:45,079
reenable in the death tuck here and what

408
00:19:43,369 --> 00:19:47,929
we're basically saying now is that well

409
00:19:45,079 --> 00:19:49,699
we want the depth test on all the time

410
00:19:47,930 --> 00:19:52,549
because it really means that pipeline

411
00:19:49,700 --> 00:19:54,940
what we don't want to do is we don't

412
00:19:52,549 --> 00:19:59,960
want to test against the depth buffer

413
00:19:54,940 --> 00:20:02,029
because we just want to write to it and

414
00:19:59,960 --> 00:20:03,259
so we could clear it here or something

415
00:20:02,029 --> 00:20:05,690
like that potentially but that's just

416
00:20:03,259 --> 00:20:07,549
wasting time since we know we're going

417
00:20:05,690 --> 00:20:10,549
to write to every pixel we just want to

418
00:20:07,549 --> 00:20:14,000
say don't test it right and so if we

419
00:20:10,549 --> 00:20:15,619
just set our GL depth bunk here which I

420
00:20:14,000 --> 00:20:18,950
believe we were setting here you can see

421
00:20:15,619 --> 00:20:21,559
it to Gio less than or equal to what we

422
00:20:18,950 --> 00:20:24,200
can do is just say oh let's just set it

423
00:20:21,559 --> 00:20:27,259
to deal always so it never does an

424
00:20:24,200 --> 00:20:29,150
actual test against it and then when

425
00:20:27,259 --> 00:20:31,099
we're done we'll set it back to less

426
00:20:29,150 --> 00:20:34,100
than or equal to so this is effectively

427
00:20:31,099 --> 00:20:38,509
turning off depth testing but it's going

428
00:20:34,099 --> 00:20:40,429
to leave depth writes on right because

429
00:20:38,509 --> 00:20:42,230
remember depth map controls depth right

430
00:20:40,430 --> 00:20:45,590
and that's that's a true and we're not

431
00:20:42,230 --> 00:20:47,180
touching it here so that was just a dumb

432
00:20:45,589 --> 00:20:48,289
thing on my part again I was kind of

433
00:20:47,180 --> 00:20:48,769
thinking oh I'll just turn off death

434
00:20:48,289 --> 00:20:50,149
testing but

435
00:20:48,769 --> 00:20:51,079
that's not what I was actually doing I

436
00:20:50,150 --> 00:20:53,810
was actually turning off the whole

437
00:20:51,079 --> 00:20:57,559
dipped pipeline which I didn't actually

438
00:20:53,809 --> 00:20:59,750
want right so I believe that was all

439
00:20:57,559 --> 00:21:03,529
that MCS MOX was talking about in the

440
00:20:59,750 --> 00:21:09,319
initial set I'll just verify here that

441
00:21:03,529 --> 00:21:11,450
I'm doing similar thing so that's the

442
00:21:09,319 --> 00:21:13,309
same Jill different always less equal so

443
00:21:11,450 --> 00:21:14,690
that's exactly the same that's all he's

444
00:21:13,309 --> 00:21:17,720
got in the coast of it so I'm assuming

445
00:21:14,690 --> 00:21:20,840
right I'm just assuming that that is

446
00:21:17,720 --> 00:21:23,329
exactly what he tried and he was saying

447
00:21:20,839 --> 00:21:28,609
that was reasonable so then here is his

448
00:21:23,329 --> 00:21:32,689
shader which let's leave this let's live

449
00:21:28,609 --> 00:21:35,629
this alone for a second so that we could

450
00:21:32,690 --> 00:21:37,190
run what we have before messing with the

451
00:21:35,630 --> 00:21:39,500
result shader which we may have to now

452
00:21:37,190 --> 00:21:40,820
do because remember we didn't we were

453
00:21:39,500 --> 00:21:42,680
just trying to play around that we never

454
00:21:40,819 --> 00:21:44,750
really got anywhere probably because our

455
00:21:42,680 --> 00:21:50,269
depth rights are just completely wrong

456
00:21:44,750 --> 00:21:52,329
on the load visual studio or try to and

457
00:21:50,269 --> 00:21:55,509
that's going to take a good long while

458
00:21:52,329 --> 00:21:58,009
probably because now we installed the

459
00:21:55,509 --> 00:22:02,450
stupid code Excel Visual Studio

460
00:21:58,009 --> 00:22:08,690
extension which is probably now ruining

461
00:22:02,450 --> 00:22:11,769
my life yep there it is

462
00:22:08,690 --> 00:22:15,820
so here that is hopefully that doesn't

463
00:22:11,769 --> 00:22:15,819
is that do that every time

464
00:22:17,650 --> 00:22:26,840
no that's not too bad is there like an

465
00:22:22,579 --> 00:22:30,609
auto update feature because if there is

466
00:22:26,839 --> 00:22:30,609
I need to turn that off right away

467
00:22:40,809 --> 00:22:45,568
[Music]

468
00:22:52,099 --> 00:22:59,558
so like a extensions add-in manager nope

469
00:22:56,659 --> 00:23:01,220
what is code Excel if it's not an add-in

470
00:22:59,558 --> 00:23:13,278
extensions and updates'

471
00:23:01,220 --> 00:23:15,919
uh so in a balloon

472
00:23:13,278 --> 00:23:22,579
Persis man and now I'm in meow meow all

473
00:23:15,919 --> 00:23:24,169
right I don't know I'm just going to

474
00:23:22,579 --> 00:23:27,710
assume that I don't care about this so

475
00:23:24,169 --> 00:23:29,179
we'll just pretend this is fine I don't

476
00:23:27,710 --> 00:23:32,119
know if it's fine or not but we'll

477
00:23:29,179 --> 00:23:36,349
pretend that it's fine so the first

478
00:23:32,118 --> 00:23:39,319
thing I'll say is that that is actually

479
00:23:36,348 --> 00:23:40,759
looking much better right because or

480
00:23:39,319 --> 00:23:42,408
wait we don't know you know what we want

481
00:23:40,759 --> 00:23:43,729
the multi sample hint on yet okay we got

482
00:23:42,409 --> 00:23:51,129
rid of those things but it's not on yet

483
00:23:43,729 --> 00:23:51,129
is it yeah I declared victory too early

484
00:23:52,190 --> 00:23:57,440
all right so let's go turn on the multi

485
00:23:55,729 --> 00:24:06,139
sampling by default I'm going to clear

486
00:23:57,440 --> 00:24:09,739
this guy out here God code Excel codec

487
00:24:06,138 --> 00:24:13,748
so why do I install that extension

488
00:24:09,739 --> 00:24:19,129
why did I do it you know why did I do it

489
00:24:13,749 --> 00:24:22,700
how do I disable disabled disabled stop

490
00:24:19,128 --> 00:24:25,878
bad no incorrect

491
00:24:22,700 --> 00:24:28,330
so I uninstall it can I not just just

492
00:24:25,878 --> 00:24:28,329
say no

493
00:24:32,878 --> 00:24:39,579
bad dog bad dog

494
00:24:36,069 --> 00:24:41,999
no let me see if I can get rid of some

495
00:24:39,579 --> 00:24:41,999
of this crap

496
00:24:46,200 --> 00:24:52,649
so that's back to normal so maybe we're

497
00:24:49,179 --> 00:24:58,179
okay there alright so I'm going to go

498
00:24:52,648 --> 00:25:04,209
into win32 handmade I'm going to try a

499
00:24:58,179 --> 00:25:05,798
couple things here much to do a couple

500
00:25:04,210 --> 00:25:11,369
things to put us into a position to

501
00:25:05,798 --> 00:25:15,128
better explore this resolve and just see

502
00:25:11,368 --> 00:25:16,658
what we can do here so the first thing

503
00:25:15,128 --> 00:25:20,798
I'm going to do is I'm going to switch

504
00:25:16,659 --> 00:25:24,789
to half res right so I'm going to switch

505
00:25:20,798 --> 00:25:27,608
to this mode which is 960 by 540 I'm

506
00:25:24,788 --> 00:25:34,658
going to turn on the multi sampling tint

507
00:25:27,608 --> 00:25:38,949
by default and I think is the pixelation

508
00:25:34,659 --> 00:25:42,460
hint I'm just going to look to see where

509
00:25:38,950 --> 00:25:46,538
the pixelation hint gets done here

510
00:25:42,460 --> 00:25:50,489
OpenGL frame buffer filtered on the

511
00:25:46,538 --> 00:25:50,489
results flags

512
00:25:52,890 --> 00:26:02,780
so I think I'm not don't quote me on

513
00:25:57,240 --> 00:26:05,960
this but I think if I set this to true I

514
00:26:02,779 --> 00:26:05,960
[Applause]

515
00:26:08,269 --> 00:26:15,539
should get one-to-one pixels now I hope

516
00:26:12,259 --> 00:26:21,000
I'm not 100% certain of that but that

517
00:26:15,539 --> 00:26:25,798
was my hope so I think you know now I

518
00:26:21,000 --> 00:26:28,859
can actually look and see if I take a

519
00:26:25,798 --> 00:26:30,298
look at the print screen of this I think

520
00:26:28,859 --> 00:26:32,639
I can see one two one

521
00:26:30,298 --> 00:26:34,379
well it's not one to one it's one to two

522
00:26:32,640 --> 00:26:36,600
right

523
00:26:34,380 --> 00:26:40,620
pixels so I just want to see if that's

524
00:26:36,599 --> 00:26:43,619
true one two three four yeah so this is

525
00:26:40,619 --> 00:26:46,199
good so now I'm in a mode where we can

526
00:26:43,619 --> 00:26:47,579
where we can run at full speed right

527
00:26:46,200 --> 00:26:50,910
because the Scribus card does not like

528
00:26:47,579 --> 00:26:53,548
running with multisample at 1920 by 1080

529
00:26:50,910 --> 00:26:59,009
we know that so I can run it in half res

530
00:26:53,548 --> 00:27:01,918
but I can still see every pixel is now

531
00:26:59,009 --> 00:27:04,379
four pixels so I don't introduce any

532
00:27:01,919 --> 00:27:06,270
other blurring because which is what I

533
00:27:04,380 --> 00:27:11,309
don't want right I don't want to

534
00:27:06,269 --> 00:27:15,690
introduce linear smear there which would

535
00:27:11,308 --> 00:27:19,619
make it harder for us to debug on the

536
00:27:15,690 --> 00:27:25,100
other 2x up sample which is what it

537
00:27:19,619 --> 00:27:25,099
would normally do all right

538
00:27:26,150 --> 00:27:31,880
so if I come through here and run this

539
00:27:28,130 --> 00:27:34,100
right like now we pretty much you know

540
00:27:31,880 --> 00:27:36,230
to be honest a lot of this is actually

541
00:27:34,099 --> 00:27:38,538
looking okay but it's clear that our

542
00:27:36,230 --> 00:27:40,490
resolves like it's just it the edges are

543
00:27:38,538 --> 00:27:44,298
so crispy in some places although not in

544
00:27:40,490 --> 00:27:46,220
others which is a little bit odd but we

545
00:27:44,298 --> 00:27:48,168
also get these lines down the middle so

546
00:27:46,220 --> 00:27:49,910
we're still having that problem however

547
00:27:48,169 --> 00:27:53,240
all our artifacts from the peeling are

548
00:27:49,910 --> 00:27:55,429
gone at least most of them are maybe

549
00:27:53,240 --> 00:27:57,710
there's one like right there

550
00:27:55,429 --> 00:27:59,150
so that's actually a big improvement to

551
00:27:57,710 --> 00:28:01,038
again thank you very much too empty as

552
00:27:59,150 --> 00:28:04,480
much for giving us the opportunity to

553
00:28:01,038 --> 00:28:06,288
work on this again by finding that bug

554
00:28:04,480 --> 00:28:08,298
bugs like that a real hard to find

555
00:28:06,288 --> 00:28:11,000
without a debugger that without an

556
00:28:08,298 --> 00:28:12,650
OpenGL debugger obviously you got to

557
00:28:11,000 --> 00:28:14,900
really look for him I probably should

558
00:28:12,650 --> 00:28:16,250
have had some mode where we draw all of

559
00:28:14,900 --> 00:28:18,740
our death buffers because then we would

560
00:28:16,250 --> 00:28:19,759
have seen that it was wrong that's one

561
00:28:18,740 --> 00:28:24,169
thing I can think of it would have

562
00:28:19,759 --> 00:28:28,250
caught that bug other than just you know

563
00:28:24,169 --> 00:28:31,940
straight up inspection of the code more

564
00:28:28,250 --> 00:28:35,058
meticulously and hope that you think of

565
00:28:31,940 --> 00:28:36,200
it so now all we really have to do

566
00:28:35,058 --> 00:28:38,298
assuming than that is working properly

567
00:28:36,200 --> 00:28:42,759
now is see if there is something we

568
00:28:38,298 --> 00:28:45,710
could do with our death stamp like here

569
00:28:42,759 --> 00:28:48,500
and again mps fox is saying maybe just

570
00:28:45,710 --> 00:28:51,409
just use all the samples just use them

571
00:28:48,500 --> 00:28:52,308
directly and don't worry so much about

572
00:28:51,409 --> 00:28:54,710
the death man

573
00:28:52,308 --> 00:29:01,819
so if I were to do that if I base it was

574
00:28:54,710 --> 00:29:10,970
to just get rid of the test there that

575
00:29:01,819 --> 00:29:15,879
would give us this and you know some of

576
00:29:10,970 --> 00:29:19,960
it looks pretty good some of it doesn't

577
00:29:15,880 --> 00:29:23,289
right it's pretty hard to tell exactly

578
00:29:19,960 --> 00:29:25,460
why I can't say I had a lot of theories

579
00:29:23,288 --> 00:29:27,048
so if we take a look at the difference

580
00:29:25,460 --> 00:29:31,429
between multi sampling and not multi

581
00:29:27,048 --> 00:29:33,139
sampling so you know there's crispy

582
00:29:31,429 --> 00:29:34,909
edges everywhere in the non multi

583
00:29:33,140 --> 00:29:37,040
sampling version if I turn multi

584
00:29:34,909 --> 00:29:39,740
sampling on the crispy edges go away

585
00:29:37,039 --> 00:29:44,779
like here but they don't go away

586
00:29:39,740 --> 00:29:46,579
at places where the cubes intersect not

587
00:29:44,779 --> 00:29:48,109
really intersect but a but directly

588
00:29:46,579 --> 00:29:57,230
right so they are for all intents and

589
00:29:48,109 --> 00:30:01,808
purposes intersecting and so the

590
00:29:57,230 --> 00:30:07,519
question is why is that happening right

591
00:30:01,808 --> 00:30:08,210
and you know is there something we can

592
00:30:07,519 --> 00:30:12,259
do about it

593
00:30:08,210 --> 00:30:15,590
it does look you know I would say at

594
00:30:12,259 --> 00:30:18,650
this point it does look just generally

595
00:30:15,589 --> 00:30:20,509
better with multi sampling on which is

596
00:30:18,650 --> 00:30:25,340
more than we could have ever said before

597
00:30:20,509 --> 00:30:28,490
so I think thanks to Moxa's careful look

598
00:30:25,339 --> 00:30:31,069
at the result shader we are in a better

599
00:30:28,490 --> 00:30:33,230
place than we were we're maybe not all

600
00:30:31,069 --> 00:30:38,299
the way home because it would be nice to

601
00:30:33,230 --> 00:30:40,400
clean up those edges but despite not

602
00:30:38,299 --> 00:30:43,009
being all the way home I do feel like

603
00:30:40,400 --> 00:30:44,960
we've made a visual improvement so I do

604
00:30:43,009 --> 00:30:47,269
feel like you'd rather play the game in

605
00:30:44,960 --> 00:30:48,890
this mode than in the other mode so far

606
00:30:47,269 --> 00:30:53,299
when maybe there are some artifacts we

607
00:30:48,890 --> 00:30:55,670
haven't seen yet but you know it does

608
00:30:53,299 --> 00:30:59,240
kind of look like most of the time what

609
00:30:55,670 --> 00:31:04,340
artifacts there are are at least no more

610
00:30:59,240 --> 00:31:07,009
objectionable right so now one question

611
00:31:04,339 --> 00:31:08,808
would be well what if we go start

612
00:31:07,009 --> 00:31:10,099
playing with this shader a little bit

613
00:31:08,808 --> 00:31:11,420
more you know maybe there's something we

614
00:31:10,099 --> 00:31:16,639
can do that improves it even further

615
00:31:11,420 --> 00:31:21,860
right that's going to be an even better

616
00:31:16,640 --> 00:31:28,340
way to way to have it run and so you

617
00:31:21,859 --> 00:31:30,678
know most of what we can do here most of

618
00:31:28,339 --> 00:31:34,308
what we can do here I guess

619
00:31:30,679 --> 00:31:37,910
it just depends on the way that we're

620
00:31:34,308 --> 00:31:44,329
picking that depth range right

621
00:31:37,910 --> 00:31:46,490
and it looks like I've sort of I removed

622
00:31:44,329 --> 00:31:48,558
the operable part of it that was

623
00:31:46,490 --> 00:31:52,849
previously picking the range so this is

624
00:31:48,558 --> 00:31:53,420
just taking the minimum now so if I was

625
00:31:52,849 --> 00:31:58,189
to go

626
00:31:53,420 --> 00:32:02,090
back to doing something more complicated

627
00:31:58,190 --> 00:32:06,320
where we actually did pick a range I

628
00:32:02,089 --> 00:32:07,909
wonder if that might be a better place

629
00:32:06,319 --> 00:32:11,839
to start and I suppose I should defer to

630
00:32:07,910 --> 00:32:14,180
MTS marks on this I assume yeah so it

631
00:32:11,839 --> 00:32:16,099
looks like he also and I think that's

632
00:32:14,180 --> 00:32:18,799
why I remember him saying he went back

633
00:32:16,099 --> 00:32:21,139
to the depth range version of the shader

634
00:32:18,799 --> 00:32:23,329
remember this is how we were doing it

635
00:32:21,140 --> 00:32:27,310
previously before we started playing

636
00:32:23,329 --> 00:32:31,039
with it some more so let's go ahead and

637
00:32:27,309 --> 00:32:33,879
try that out so this is basically

638
00:32:31,039 --> 00:32:36,349
restoring the way it used to work before

639
00:32:33,880 --> 00:32:37,910
when I tried this and it didn't work but

640
00:32:36,349 --> 00:32:42,439
as far as we know that was really mostly

641
00:32:37,910 --> 00:32:45,590
just because we were messing up the

642
00:32:42,440 --> 00:32:47,690
depth buffer rights so let's start back

643
00:32:45,589 --> 00:32:49,339
with this and see what happens and

644
00:32:47,690 --> 00:32:53,210
there's some other stuff we can probably

645
00:32:49,339 --> 00:32:55,009
do there to improve things further so

646
00:32:53,210 --> 00:32:58,430
looking at this I would say it doesn't

647
00:32:55,009 --> 00:33:00,049
really look appreciably better than the

648
00:32:58,430 --> 00:33:02,660
other version in fact if anything I

649
00:33:00,049 --> 00:33:04,519
think it looks a little bit worse than

650
00:33:02,660 --> 00:33:06,529
just picking the minimum you can see

651
00:33:04,519 --> 00:33:08,900
some artifact and going on up here that

652
00:33:06,529 --> 00:33:10,970
I don't remember having much problems

653
00:33:08,900 --> 00:33:13,580
with them in the previous version that

654
00:33:10,970 --> 00:33:17,450
you can see right in there you get kind

655
00:33:13,579 --> 00:33:20,449
of a nasty problem with artifacting

656
00:33:17,450 --> 00:33:23,090
there and and that makes some sense like

657
00:33:20,450 --> 00:33:26,690
that's probably in places where we're

658
00:33:23,089 --> 00:33:29,000
just picking depth values poorly from

659
00:33:26,690 --> 00:33:31,009
this tree at the edge of this tree to

660
00:33:29,000 --> 00:33:32,599
where it sort of intersects where this

661
00:33:31,009 --> 00:33:35,000
tree is being picked or something like

662
00:33:32,599 --> 00:33:41,539
that we're probably just doing something

663
00:33:35,000 --> 00:33:43,519
a little bit stupid in that case so I

664
00:33:41,539 --> 00:33:48,619
don't know exactly what we want to do

665
00:33:43,519 --> 00:33:54,670
here but it does seem like picking the

666
00:33:48,619 --> 00:33:54,669
min is a little bit better in this case

667
00:33:55,180 --> 00:34:03,649
at least as far as I can tell that that

668
00:33:58,069 --> 00:34:06,980
seems like a more sane result right

669
00:34:03,648 --> 00:34:11,299
so I would say mostly just looking at at

670
00:34:06,980 --> 00:34:14,780
the game in that mode you know you're

671
00:34:11,300 --> 00:34:17,050
not seeing those artifacts pop up I feel

672
00:34:14,780 --> 00:34:17,050
like

673
00:34:30,880 --> 00:34:35,869
I'm still seeing there's still some

674
00:34:33,469 --> 00:34:40,939
definite artifacts in right you can see

675
00:34:35,869 --> 00:34:45,339
as we start to peel away you still get

676
00:34:40,940 --> 00:34:45,340
artifacts on the resolve with those

677
00:34:48,820 --> 00:34:54,620
those places where the primitives of but

678
00:34:51,670 --> 00:34:57,460
and it does you know it makes sense as

679
00:34:54,619 --> 00:34:57,460
to why that's the case

680
00:34:57,699 --> 00:35:00,699
certainly

681
00:35:06,550 --> 00:35:33,090
so I don't have to think I have to think

682
00:35:28,840 --> 00:35:33,090
of what else I might want to try here

683
00:36:28,690 --> 00:36:31,690
so

684
00:36:35,239 --> 00:36:44,569
I guess what I would say is going back

685
00:36:39,230 --> 00:36:47,539
to first principles on this the thing

686
00:36:44,570 --> 00:36:50,630
that's so frustrating about it is we

687
00:36:47,539 --> 00:36:54,940
don't even need multi sampling for any

688
00:36:50,630 --> 00:36:57,740
reason right there's nothing actually

689
00:36:54,940 --> 00:37:01,429
happening here that we care about multi

690
00:36:57,739 --> 00:37:06,459
sampling for the only thing we're trying

691
00:37:01,429 --> 00:37:10,368
to do is smooth the edges of our cubes

692
00:37:06,460 --> 00:37:13,159
because our cubes are geometric

693
00:37:10,369 --> 00:37:16,430
primitives not sprites and therefore

694
00:37:13,159 --> 00:37:19,309
they have hard edges now multi sampling

695
00:37:16,429 --> 00:37:23,329
is intended for this purpose certainly

696
00:37:19,309 --> 00:37:27,349
like the goal of multi sampling is very

697
00:37:23,329 --> 00:37:29,690
specifically to smooth the edges of

698
00:37:27,349 --> 00:37:34,400
geometric primitives that's what it does

699
00:37:29,690 --> 00:37:40,159
no question about that but we don't

700
00:37:34,400 --> 00:37:41,960
actually want it to be doing all the

701
00:37:40,159 --> 00:37:43,519
work it's doing it's actually creating

702
00:37:41,960 --> 00:37:48,940
too much work for us

703
00:37:43,519 --> 00:37:51,920
all we really want it to do is to write

704
00:37:48,940 --> 00:37:54,108
proportionally into the pixel it would

705
00:37:51,920 --> 00:37:57,490
have filled based on its coverage of

706
00:37:54,108 --> 00:38:00,739
that pixel that's all we actually want

707
00:37:57,489 --> 00:38:03,559
right we don't want to record multi

708
00:38:00,739 --> 00:38:06,139
sample we want us to produce one depth

709
00:38:03,559 --> 00:38:10,759
value per pixel and then we want it to

710
00:38:06,139 --> 00:38:12,889
if it cuts that pixel right in a alpha

711
00:38:10,760 --> 00:38:14,810
blended color value that does not

712
00:38:12,889 --> 00:38:22,460
actually alpha blame it just writes in

713
00:38:14,809 --> 00:38:26,239
the Alpha role and they're just I just

714
00:38:22,460 --> 00:38:29,690
don't know any way to do it and it's a

715
00:38:26,239 --> 00:38:35,419
little bit frustrating because it's so

716
00:38:29,690 --> 00:38:38,329
simple in concept but it's just there's

717
00:38:35,420 --> 00:38:41,590
I don't know any way to convince the GPU

718
00:38:38,329 --> 00:38:41,590
to actually do it

719
00:38:45,039 --> 00:38:50,210
and we end up in the situation where

720
00:38:48,440 --> 00:39:03,829
we're bending over backwards to try to

721
00:38:50,210 --> 00:39:05,539
produce this this other results I mean I

722
00:39:03,829 --> 00:39:08,989
really feel like we should be able to

723
00:39:05,539 --> 00:39:12,829
reconstruct that basically though right

724
00:39:08,989 --> 00:39:14,509
so you know inside this loop what we

725
00:39:12,829 --> 00:39:16,579
should be able to do is find the depth

726
00:39:14,510 --> 00:39:21,970
pin and we should be able to do this

727
00:39:16,579 --> 00:39:21,969
operation right that should have worked

728
00:39:26,559 --> 00:39:32,150
and I really just don't know why it

729
00:39:29,599 --> 00:39:34,009
doesn't and I feel like I need to maybe

730
00:39:32,150 --> 00:39:36,050
think that through a little more clearly

731
00:39:34,010 --> 00:39:38,930
because I really feel like that should

732
00:39:36,050 --> 00:39:42,050
work I feel like that should generally

733
00:39:38,929 --> 00:39:46,460
produce the results that I wanted right

734
00:39:42,050 --> 00:39:48,350
and I don't quite get why it doesn't and

735
00:39:46,460 --> 00:39:52,970
I think it's a little bit subtle

736
00:39:48,349 --> 00:39:55,599
probably why it does it you know would

737
00:39:52,969 --> 00:39:55,599
be my guess

738
00:40:11,239 --> 00:40:18,219
I'm kind of curious what happens if we

739
00:40:13,670 --> 00:40:18,220
turn off srgb just curious

740
00:40:25,679 --> 00:40:36,568
so it's definitely closer to right and

741
00:40:33,858 --> 00:40:42,019
sRGB is always on in this case right

742
00:40:36,568 --> 00:40:42,019
because we turned off the yeah

743
00:41:24,260 --> 00:41:29,730
so hmm I'm going to draw the settlement

744
00:41:28,469 --> 00:41:31,230
wait for word just so we all know what

745
00:41:29,730 --> 00:41:35,670
we're talking about and so I can just

746
00:41:31,230 --> 00:41:37,469
check my assumptions basically so let's

747
00:41:35,670 --> 00:41:38,940
talk about what I would ideally like to

748
00:41:37,469 --> 00:41:42,119
have happen but that is not happening

749
00:41:38,940 --> 00:41:47,880
right now so we have primitives that are

750
00:41:42,119 --> 00:41:50,429
like these cubes right and what happens

751
00:41:47,880 --> 00:41:53,730
is along the edges of the cubes there's

752
00:41:50,429 --> 00:41:55,500
a you know obviously a change in what's

753
00:41:53,730 --> 00:41:58,860
happening along that geometric edge

754
00:41:55,500 --> 00:42:01,079
right so if we were to take one of these

755
00:41:58,860 --> 00:42:03,539
triangles here like let's say that this

756
00:42:01,079 --> 00:42:05,549
was broken up like that if we were to

757
00:42:03,539 --> 00:42:09,119
take one of those triangles that we're

758
00:42:05,550 --> 00:42:12,570
looking at there are pixels right along

759
00:42:09,119 --> 00:42:14,339
the edge of the triangle for any given

760
00:42:12,570 --> 00:42:17,940
one of those pixels here's what I would

761
00:42:14,340 --> 00:42:20,610
like to see happen right I would like to

762
00:42:17,940 --> 00:42:23,519
see it take the percentage of the pixel

763
00:42:20,610 --> 00:42:27,210
that is covered by that edge and I'd

764
00:42:23,519 --> 00:42:29,009
like it to turn that into a percent

765
00:42:27,210 --> 00:42:31,019
coverage value so I don't know maybe

766
00:42:29,010 --> 00:42:34,410
that's 50 percent or something right so

767
00:42:31,019 --> 00:42:37,559
that would be 0.5 and then what I'd like

768
00:42:34,409 --> 00:42:40,319
to see it do is produce the color value

769
00:42:37,559 --> 00:42:42,630
which is whatever the color value would

770
00:42:40,320 --> 00:42:44,670
have been on this pixel I don't care do

771
00:42:42,630 --> 00:42:47,039
the centroid I don't really even care at

772
00:42:44,670 --> 00:42:49,680
all where you sample it but sample the

773
00:42:47,039 --> 00:42:51,989
color value and then multiply the color

774
00:42:49,679 --> 00:42:56,179
value by this alpha to give the

775
00:42:51,989 --> 00:42:56,179
premultiplied alpha result right

776
00:43:01,369 --> 00:43:04,599
[Applause]

777
00:43:06,730 --> 00:43:12,000
I mean that's fundamentally what I want

778
00:43:09,280 --> 00:43:12,000
to have happen

779
00:43:46,980 --> 00:43:52,920
all right let's keep going here so

780
00:43:51,539 --> 00:43:55,980
fundamentally that's what I want to have

781
00:43:52,920 --> 00:43:58,710
happen and so I want to produce a value

782
00:43:55,980 --> 00:44:00,659
in the buffer I believe and we can go

783
00:43:58,710 --> 00:44:01,858
double-check this but I want to produce

784
00:44:00,659 --> 00:44:03,750
the value in the buffer that is

785
00:44:01,858 --> 00:44:07,409
effectively whatever this color would be

786
00:44:03,750 --> 00:44:09,690
if this is si I want to do 0.5 see in

787
00:44:07,409 --> 00:44:11,159
the RGB channel and point 5 in the alpha

788
00:44:09,690 --> 00:44:14,010
channel so I want a pre multiplied

789
00:44:11,159 --> 00:44:19,170
result here for that pixel and I want

790
00:44:14,010 --> 00:44:21,570
that stored in the peel right and that's

791
00:44:19,170 --> 00:44:24,059
it and I want it depth value whatever

792
00:44:21,570 --> 00:44:28,220
its depth value was stored in it in the

793
00:44:24,059 --> 00:44:38,070
peel there okay so that's what I want

794
00:44:28,219 --> 00:44:39,899
now that should be approximated by what

795
00:44:38,070 --> 00:44:43,109
I'm doing in this shader which is to say

796
00:44:39,900 --> 00:44:47,519
that we've got 8 samples in here right

797
00:44:43,108 --> 00:44:48,900
and if what I do is I sum up the samples

798
00:44:47,519 --> 00:44:51,119
that appear to come from this primitive

799
00:44:48,900 --> 00:44:52,740
which have the same Z value so let's say

800
00:44:51,119 --> 00:44:55,710
you know in this case it's the same

801
00:44:52,739 --> 00:44:57,838
thing I sum up these V values I'd say

802
00:44:55,710 --> 00:44:59,780
sum up the color values that match the Z

803
00:44:57,838 --> 00:45:03,019
which are these ones these ones don't i

804
00:44:59,780 --> 00:45:06,150
sum those together and I should get

805
00:45:03,019 --> 00:45:10,858
effectively the same answer right I

806
00:45:06,150 --> 00:45:12,690
should get that I end up with 0.5 and it

807
00:45:10,858 --> 00:45:14,400
won't be as exact as it would have been

808
00:45:12,690 --> 00:45:15,690
because we only have 8 samples so it's

809
00:45:14,400 --> 00:45:18,088
going to be more granular but it's

810
00:45:15,690 --> 00:45:20,039
basically the same thing I would get 0.5

811
00:45:18,088 --> 00:45:21,119
times the color with 0.5 in the Alpha

812
00:45:20,039 --> 00:45:23,068
Channel now I know I'm going to get

813
00:45:21,119 --> 00:45:25,050
point 5 in the Alpha Channel because I'm

814
00:45:23,068 --> 00:45:28,050
doing in sample count times a combined

815
00:45:25,050 --> 00:45:31,050
color so however many of those we added

816
00:45:28,050 --> 00:45:32,700
up their alpha value is presumably 1 but

817
00:45:31,050 --> 00:45:34,410
then I divide by the total number so if

818
00:45:32,699 --> 00:45:36,960
I only have four of them and I divide by

819
00:45:34,409 --> 00:45:38,730
eight I'll get that point five but now

820
00:45:36,960 --> 00:45:41,400
the question is do I end up with point

821
00:45:38,730 --> 00:45:43,170
five see in the Alpha Channel well I do

822
00:45:41,400 --> 00:45:44,849
end up with point slides here but the

823
00:45:43,170 --> 00:45:48,329
problem is thinking about this where

824
00:45:44,849 --> 00:45:49,829
does the srgb factor come into play and

825
00:45:48,329 --> 00:45:51,240
to answer that question I feel like I

826
00:45:49,829 --> 00:45:52,289
have to look at how we're doing our peel

827
00:45:51,239 --> 00:45:54,838
compositing because I don't really

828
00:45:52,289 --> 00:45:57,358
remember but if you take a look at here

829
00:45:54,838 --> 00:46:00,949
how we're doing it we square the RGB as

830
00:45:57,358 --> 00:46:05,519
it comes in right

831
00:46:00,949 --> 00:46:10,039
so in theory we want to do the alpha

832
00:46:05,519 --> 00:46:14,309
multiplied before doing the srgb right

833
00:46:10,039 --> 00:46:17,219
because if I did it after then this

834
00:46:14,309 --> 00:46:19,500
square would mess it up right this

835
00:46:17,219 --> 00:46:22,500
square undoes this square root and put

836
00:46:19,500 --> 00:46:24,840
me back into the space where I expect to

837
00:46:22,500 --> 00:46:27,539
be so I'm pretty sure is if that is the

838
00:46:24,840 --> 00:46:29,910
correct place to do it now when we come

839
00:46:27,539 --> 00:46:31,949
through here peel 3 obviously was going

840
00:46:29,909 --> 00:46:32,849
to be an essentially it isn't now but we

841
00:46:31,949 --> 00:46:35,009
don't care too much about that because

842
00:46:32,849 --> 00:46:37,769
we're talking mainly about peels 1 &amp; 2

843
00:46:35,010 --> 00:46:41,130
that's our 0 or 1 and maybe two but

844
00:46:37,769 --> 00:46:43,469
probably not so then we take P peel 0

845
00:46:41,130 --> 00:46:46,220
RGB we assume that that's the correct

846
00:46:43,469 --> 00:46:49,109
thing to sum and then we multiply in

847
00:46:46,219 --> 00:46:51,689
whatever the underlying layer is

848
00:46:49,110 --> 00:46:53,160
composited to using the inverse of

849
00:46:51,690 --> 00:46:55,099
whatever the peel alpha is and that

850
00:46:53,159 --> 00:46:57,719
seems like the correct compositing

851
00:46:55,099 --> 00:47:05,369
operation I don't really see what's

852
00:46:57,719 --> 00:47:11,429
wrong with that at the moment what

853
00:47:05,369 --> 00:47:20,730
something must be and I'm guessing that

854
00:47:11,429 --> 00:47:21,719
what must be happening is what will help

855
00:47:20,730 --> 00:47:23,280
to be honest I don't really know I

856
00:47:21,719 --> 00:47:27,329
really just don't know what's happening

857
00:47:23,280 --> 00:47:31,350
I don't understand why I wouldn't come

858
00:47:27,329 --> 00:47:32,759
out to the same value because especially

859
00:47:31,349 --> 00:47:35,339
when you consider the case of the two

860
00:47:32,760 --> 00:47:38,910
triangles touching you know that like

861
00:47:35,340 --> 00:47:40,620
these four over here went to one

862
00:47:38,909 --> 00:47:43,369
triangle like this is triangle a and

863
00:47:40,619 --> 00:47:48,480
these went to triangle B along this line

864
00:47:43,369 --> 00:47:52,500
right or something like this they both

865
00:47:48,480 --> 00:47:55,260
have the same color value right I mean

866
00:47:52,500 --> 00:47:56,789
there's almost no difference between the

867
00:47:55,260 --> 00:47:58,350
color values on either side of this

868
00:47:56,789 --> 00:48:01,139
triangle there isn't really even a

869
00:47:58,349 --> 00:48:02,190
gradient at in play there you know maybe

870
00:48:01,139 --> 00:48:03,690
you look at this one like there's a

871
00:48:02,190 --> 00:48:06,659
gradient there maybe something's wrong

872
00:48:03,690 --> 00:48:10,110
with this how the cut but this is the

873
00:48:06,659 --> 00:48:12,869
same color right so all the samples are

874
00:48:10,110 --> 00:48:13,809
the same color in both of these cases so

875
00:48:12,869 --> 00:48:16,509
they should sum

876
00:48:13,809 --> 00:48:23,229
to the same thing so it suggests to me

877
00:48:16,509 --> 00:48:25,688
that there is an error here that I just

878
00:48:23,228 --> 00:48:27,458
don't understand and I feel like we need

879
00:48:25,688 --> 00:48:28,889
to understand it in order to really say

880
00:48:27,458 --> 00:48:31,899
this is or isn't working because

881
00:48:28,889 --> 00:48:37,150
something's wrong there and the fact

882
00:48:31,900 --> 00:48:39,969
that I can't tell what it is is is bad

883
00:48:37,150 --> 00:48:43,680
right it means that there could be yet

884
00:48:39,969 --> 00:48:46,809
another bug like the one mts NOx found

885
00:48:43,679 --> 00:48:48,129
that you know we may not get lucky you

886
00:48:46,809 --> 00:48:49,809
know no you know sometimes you get lucky

887
00:48:48,130 --> 00:48:54,759
someone finds a bug for you you may not

888
00:48:49,809 --> 00:48:56,559
get lucky so we're the only people who

889
00:48:54,759 --> 00:48:58,568
really have to be responsible for

890
00:48:56,559 --> 00:49:00,548
finding if there's bugs in here because

891
00:48:58,568 --> 00:49:01,748
you know we can't necessarily guarantee

892
00:49:00,548 --> 00:49:13,538
that anyone else is going to look at it

893
00:49:01,748 --> 00:49:15,578
after and find it so yeah looking at

894
00:49:13,539 --> 00:49:19,719
this code you know we're fetching the

895
00:49:15,579 --> 00:49:22,028
depth the same way both times so

896
00:49:19,719 --> 00:49:25,838
presumably there isn't an issue there

897
00:49:22,028 --> 00:49:29,559
and you know we're summing up the color

898
00:49:25,838 --> 00:49:33,489
in squared space which is where we think

899
00:49:29,559 --> 00:49:36,999
we should be doing it and I don't see

900
00:49:33,489 --> 00:49:38,978
any problem with that so you know it

901
00:49:36,998 --> 00:49:41,919
seems like that's pretty basic and we're

902
00:49:38,978 --> 00:49:44,608
checking for equals to the DEF men which

903
00:49:41,920 --> 00:49:47,889
is the value that we're setting the frag

904
00:49:44,608 --> 00:49:50,528
depth to right yeah so here's the frag

905
00:49:47,889 --> 00:49:53,048
depth depth man that's what we're

906
00:49:50,528 --> 00:49:55,170
setting it to and so the next peel will

907
00:49:53,048 --> 00:49:57,699
include all samples that are below that

908
00:49:55,170 --> 00:50:04,688
right I mean that's what's going to

909
00:49:57,699 --> 00:50:06,670
happen I suppose maybe is it possible

910
00:50:04,688 --> 00:50:10,629
that the samples are not predictable

911
00:50:06,670 --> 00:50:13,509
like if the multi sampling sample

912
00:50:10,630 --> 00:50:18,189
locations were different between the two

913
00:50:13,509 --> 00:50:20,880
passes I suppose that could lead to the

914
00:50:18,188 --> 00:50:20,879
problem

915
00:50:28,690 --> 00:50:35,389
because again we know that we're just a

916
00:50:31,550 --> 00:50:38,300
little bit we know that we're very

917
00:50:35,389 --> 00:50:40,400
granular right because we only have

918
00:50:38,300 --> 00:50:42,080
eight shades of alpha to play with with

919
00:50:40,400 --> 00:50:48,889
multi sampling right we only have

920
00:50:42,079 --> 00:50:52,069
between zero zero and eight are the

921
00:50:48,889 --> 00:50:54,349
number of samples that can be covered so

922
00:50:52,070 --> 00:50:57,640
we only have the steps between there one

923
00:50:54,349 --> 00:51:01,460
two three four five six seven and eight

924
00:50:57,639 --> 00:51:07,000
so really there's between zero and one

925
00:51:01,460 --> 00:51:07,000
we're only dealing with seven possible

926
00:51:07,059 --> 00:51:15,920
shades in between which isn't a lot so

927
00:51:13,969 --> 00:51:18,409
it could be something like that and I

928
00:51:15,920 --> 00:51:19,760
you know I mean if it was I guess there

929
00:51:18,409 --> 00:51:21,769
wouldn't be a lot of ways for us to test

930
00:51:19,760 --> 00:51:23,510
other than if there's some way we can

931
00:51:21,769 --> 00:51:26,690
tell the card to always use the same

932
00:51:23,510 --> 00:51:28,280
sample positions just at the test and I

933
00:51:26,690 --> 00:51:31,720
don't really know if we can or not but

934
00:51:28,280 --> 00:51:31,720
that would be one way to do it

935
00:51:31,760 --> 00:51:34,839
[Applause]

936
00:52:22,030 --> 00:52:28,369
you know I really can't say I have a

937
00:52:24,260 --> 00:52:31,960
good idea about that I do not know what

938
00:52:28,369 --> 00:52:31,960
the actual problem is there

939
00:52:44,179 --> 00:52:51,048
I mean blending is disabled so we're not

940
00:52:48,199 --> 00:52:53,838
accidentally like double blending or

941
00:52:51,048 --> 00:52:59,750
anything like that at least as far as I

942
00:52:53,838 --> 00:53:01,519
know and so is I really wish I could say

943
00:52:59,750 --> 00:53:03,440
that I could think of something else

944
00:53:01,519 --> 00:53:06,949
that could be happening there other than

945
00:53:03,440 --> 00:53:09,170
different sample positions but I can't

946
00:53:06,949 --> 00:53:12,980
think of much I mean I guess there's the

947
00:53:09,170 --> 00:53:15,289
precision of the accumulator since we're

948
00:53:12,980 --> 00:53:18,409
dividing by the sample count every time

949
00:53:15,289 --> 00:53:20,809
I guess maybe I could try to make sure

950
00:53:18,409 --> 00:53:26,929
the precision isn't a problem I don't

951
00:53:20,809 --> 00:53:30,170
really think that could be the case it

952
00:53:26,929 --> 00:53:33,440
doesn't seem likely but you know we

953
00:53:30,170 --> 00:53:37,099
could put in sample count at the top and

954
00:53:33,440 --> 00:53:41,838
then add in game sample count times the

955
00:53:37,099 --> 00:53:46,970
color every time but that I don't mean X

956
00:53:41,838 --> 00:54:01,909
if anything could be less accurate so at

957
00:53:46,969 --> 00:54:09,730
ups so yeah and it looks basically the

958
00:54:01,909 --> 00:54:11,819
same which is what you expect um yeah

959
00:54:09,730 --> 00:54:11,820
yeah

960
00:54:29,679 --> 00:54:35,980
well anyone have any ideas I'm curious

961
00:54:33,130 --> 00:54:38,170
to know about where that difference

962
00:54:35,980 --> 00:54:41,500
comes from because I would think that it

963
00:54:38,170 --> 00:54:48,159
would be equivalent especially between

964
00:54:41,500 --> 00:54:51,599
those two tiles and I can't really think

965
00:54:48,159 --> 00:54:54,098
of why it's having a difference there

966
00:54:51,599 --> 00:54:57,338
unless there's something about the

967
00:54:54,099 --> 00:55:00,420
sampling we don't know or you know with

968
00:54:57,338 --> 00:55:00,420
it we don't understand

969
00:55:12,289 --> 00:55:21,469
so here's a question actually now that I

970
00:55:15,440 --> 00:55:23,809
think about it so do we necessarily know

971
00:55:21,469 --> 00:55:26,509
exactly how many samples there are in

972
00:55:23,809 --> 00:55:29,599
the pixel is the same is the Mac multi

973
00:55:26,510 --> 00:55:31,880
sampling value we always have set it to

974
00:55:29,599 --> 00:55:34,730
that right like there's no possibility

975
00:55:31,880 --> 00:55:36,920
that we have an off by one error here

976
00:55:34,730 --> 00:55:39,079
where the number of samples that can be

977
00:55:36,920 --> 00:55:42,680
summed is actually lower I mean if we do

978
00:55:39,079 --> 00:55:47,150
sample index 0 to 7 which is what we're

979
00:55:42,679 --> 00:55:48,679
doing here then that's 8 individual

980
00:55:47,150 --> 00:55:52,220
things that are add together so we would

981
00:55:48,679 --> 00:55:56,809
want to multiply by 1 over 8 I would

982
00:55:52,219 --> 00:55:58,789
think so it's not some case where like

983
00:55:56,809 --> 00:56:01,190
one of these samples doesn't actually

984
00:55:58,789 --> 00:56:04,059
exist or something like we're querying

985
00:56:01,190 --> 00:56:06,860
it and it's not actually there or

986
00:56:04,059 --> 00:56:14,360
there's one additional sample we're not

987
00:56:06,860 --> 00:56:20,110
accounting for or something but I am NOT

988
00:56:14,360 --> 00:56:20,110
I am Not sure

989
00:56:34,130 --> 00:56:37,519
yeah I'm not sure

990
00:56:45,420 --> 00:56:53,550
hmm so I'm going to double check the

991
00:56:50,590 --> 00:56:53,550
depth peel code

992
00:57:07,510 --> 00:57:13,309
so what we do in the deaf peel code is

993
00:57:10,190 --> 00:57:25,869
we fetch from the tech the we do the

994
00:57:13,309 --> 00:57:25,869
textile fetch so

995
00:57:33,409 --> 00:57:46,199
so here's a question do we know that the

996
00:57:42,869 --> 00:57:48,510
frame buffers recording as V values

997
00:57:46,199 --> 00:57:52,710
couldn't be involved in this case as

998
00:57:48,510 --> 00:57:56,040
well like we're using deff component 24

999
00:57:52,710 --> 00:57:58,980
here which is not the same as a floating

1000
00:57:56,039 --> 00:58:20,279
point value right it's very specifically

1001
00:57:58,980 --> 00:58:31,469
not and so I wonder a little bit look

1002
00:58:20,280 --> 00:58:49,380
what if we just said let's make this be

1003
00:58:31,469 --> 00:58:53,929
something we can set and some place and

1004
00:58:49,380 --> 00:58:57,690
so let's go here and set that to 32 s

1005
00:58:53,929 --> 00:59:00,149
because now it's the same it's the exact

1006
00:58:57,690 --> 00:59:01,619
same kind of value so whatever we

1007
00:59:00,150 --> 00:59:03,150
actually compute in the shader is what

1008
00:59:01,619 --> 00:59:08,329
gets stored directly in the frame buffer

1009
00:59:03,150 --> 00:59:08,329
and there's no quantization error right

1010
00:59:09,108 --> 00:59:12,108
nope

1011
00:59:12,849 --> 00:59:16,960
because I was just curious like when

1012
00:59:15,280 --> 00:59:20,530
you're dealing with something that what

1013
00:59:16,960 --> 00:59:22,809
depth fielding is kind of exact in that

1014
00:59:20,530 --> 00:59:24,640
sense and it's like well I don't know if

1015
00:59:22,809 --> 00:59:27,250
maybe we're getting something weird

1016
00:59:24,639 --> 00:59:29,980
happening there where it's like oops you

1017
00:59:27,250 --> 00:59:32,320
threw out you know you quantize the

1018
00:59:29,980 --> 00:59:34,780
value which makes it compare wrong

1019
00:59:32,320 --> 00:59:36,670
instead of comparing less than it

1020
00:59:34,780 --> 00:59:37,960
compares greater than or something

1021
00:59:36,670 --> 00:59:39,909
because you just flipped on either side

1022
00:59:37,960 --> 00:59:41,769
of it when you were right you know right

1023
00:59:39,909 --> 00:59:43,949
on the boundary like you would be when

1024
00:59:41,769 --> 00:59:46,360
two triangles abut each other like that

1025
00:59:43,949 --> 00:59:48,129
so I feel like you know when you're in a

1026
00:59:46,360 --> 00:59:50,289
game of inches like that

1027
00:59:48,130 --> 00:59:52,690
you probably want to make sure that

1028
00:59:50,289 --> 00:59:56,349
you're not the quantization artifacts

1029
00:59:52,690 --> 00:59:57,639
are not sneaking up on you there but

1030
00:59:56,349 --> 01:00:01,500
that doesn't look like that has anything

1031
00:59:57,639 --> 01:00:01,500
to do with it so

1032
01:00:16,409 --> 01:00:25,179
you know let me hear me out for a second

1033
01:00:21,099 --> 01:00:26,170
on this because you know just talk about

1034
01:00:25,179 --> 01:00:29,500
this for a second

1035
01:00:26,170 --> 01:00:34,950
I want to pick out an artifact on the

1036
01:00:29,500 --> 01:00:34,949
screen here and just just talk about it

1037
01:00:36,519 --> 01:00:42,789
and I think this is probably the best

1038
01:00:39,400 --> 01:00:51,599
place to look at it I well you and maybe

1039
01:00:42,789 --> 01:00:51,599
not maybe this is

1040
01:00:56,050 --> 01:01:03,280
yeah maybe this is so okay this is a

1041
01:00:59,440 --> 01:01:06,329
clue and important clue I would say so

1042
01:01:03,280 --> 01:01:09,250
let's take a look at the hero here if

1043
01:01:06,329 --> 01:01:13,779
you take a look at what's happening to

1044
01:01:09,250 --> 01:01:17,469
him what I think you'll find unless I'm

1045
01:01:13,780 --> 01:01:23,160
very much mistaken is that we are seeing

1046
01:01:17,469 --> 01:01:26,289
through the split in his graphics right

1047
01:01:23,159 --> 01:01:28,719
so where the two triangles meet here

1048
01:01:26,289 --> 01:01:31,539
it's not a question of an incorrect

1049
01:01:28,719 --> 01:01:36,459
summation it's a question of actually

1050
01:01:31,539 --> 01:01:38,590
peeling it away so at the boundary for

1051
01:01:36,460 --> 01:01:44,039
some reason when we're doing the multi

1052
01:01:38,590 --> 01:01:44,039
sample rather than the next depth peel

1053
01:01:45,389 --> 01:01:53,650
actually being whatever the whatever the

1054
01:01:50,230 --> 01:02:01,829
budding triangle was it actually looks

1055
01:01:53,650 --> 01:02:06,039
like it's picking the next thing down

1056
01:02:01,829 --> 01:02:10,230
which is kind of what we want if these

1057
01:02:06,039 --> 01:02:14,230
were some incorrectly but is not

1058
01:02:10,230 --> 01:02:17,019
actually right by what I think the

1059
01:02:14,230 --> 01:02:22,690
pipeline should be doing so suggest that

1060
01:02:17,019 --> 01:02:24,489
there's something happening uh he

1061
01:02:22,690 --> 01:02:27,130
suggests that something weird is

1062
01:02:24,489 --> 01:02:31,389
happening with the depth peel where it's

1063
01:02:27,130 --> 01:02:37,480
actually being more forgiving with the

1064
01:02:31,389 --> 01:02:41,219
depth peel then it should be and I do

1065
01:02:37,480 --> 01:02:41,219
not know how that's happening

1066
01:02:44,989 --> 01:02:49,139
because you can see here what it's doing

1067
01:02:47,219 --> 01:02:51,509
is it's saying whatever the fragment V

1068
01:02:49,139 --> 01:02:53,339
is that I was going to write here if

1069
01:02:51,510 --> 01:02:58,740
it's less than or equal to the clip step

1070
01:02:53,340 --> 01:03:01,980
that I'm not going to write it right but

1071
01:02:58,739 --> 01:03:04,729
what we should have seen is that anyone

1072
01:03:01,980 --> 01:03:07,860
who wouldn't have passed this test

1073
01:03:04,730 --> 01:03:10,469
should have gotten swept up in this

1074
01:03:07,860 --> 01:03:13,920
equal statement because if you were

1075
01:03:10,469 --> 01:03:17,549
equal to it you would be included in the

1076
01:03:13,920 --> 01:03:22,289
summation so how is it that something is

1077
01:03:17,550 --> 01:03:25,380
failing this test but succeeding this

1078
01:03:22,289 --> 01:03:28,219
one or I should say also failing this I

1079
01:03:25,380 --> 01:03:31,829
mean it's not hitting the discard right

1080
01:03:28,219 --> 01:03:33,569
because if it was equal to if it was

1081
01:03:31,829 --> 01:03:37,259
less than it should have been in a

1082
01:03:33,570 --> 01:03:39,030
previous feel one before even the one

1083
01:03:37,260 --> 01:03:42,540
we're checking against so in two peels

1084
01:03:39,030 --> 01:03:45,540
back right so if it's saying that it's

1085
01:03:42,539 --> 01:03:48,480
not in this that it's actually at the

1086
01:03:45,539 --> 01:03:51,659
clip step or was before the cliff death

1087
01:03:48,480 --> 01:03:55,289
then it how could it possibly not be in

1088
01:03:51,659 --> 01:03:59,099
hitting this on a previous step peel how

1089
01:03:55,289 --> 01:04:01,739
is that possible that's the part that's

1090
01:03:59,099 --> 01:04:05,029
a bit of a mystery right like it doesn't

1091
01:04:01,739 --> 01:04:13,669
seem like that should really be possible

1092
01:04:05,030 --> 01:04:13,670
to to have that happen you know

1093
01:04:21,969 --> 01:04:25,559
I'm not seeing it

1094
01:04:40,998 --> 01:04:45,149
because there needs to be some

1095
01:04:43,259 --> 01:04:47,809
explanation for why that's happening

1096
01:04:45,150 --> 01:04:51,420
even if we don't really care about it

1097
01:04:47,809 --> 01:04:52,920
from a perspective of you know even if

1098
01:04:51,420 --> 01:04:55,048
we don't think we can really get the

1099
01:04:52,920 --> 01:04:58,108
improvement that we want we should be

1100
01:04:55,048 --> 01:04:59,818
able to fix at least that or have an

1101
01:04:58,108 --> 01:05:02,548
understanding come to understanding of

1102
01:04:59,818 --> 01:05:06,630
why it would occur and I can't think of

1103
01:05:02,548 --> 01:05:12,329
anything I can't think of any reason why

1104
01:05:06,630 --> 01:05:15,798
that would occur because we know we're

1105
01:05:12,329 --> 01:05:15,798
writing that into the depth buffer

1106
01:05:43,358 --> 01:05:47,650
yeah and I don't see it so

1107
01:05:59,269 --> 01:06:03,769
blending remains off the entire time

1108
01:06:04,070 --> 01:06:25,640
right yeah so I really do not know what

1109
01:06:20,639 --> 01:06:27,659
the deal is there I guess I don't know

1110
01:06:25,639 --> 01:06:30,358
4gl multi-sample

1111
01:06:27,659 --> 01:06:37,589
being enabled we don't ever have to turn

1112
01:06:30,358 --> 01:06:39,329
that off do we like presumably that just

1113
01:06:37,590 --> 01:06:41,340
turns on or off based on whether you're

1114
01:06:39,329 --> 01:06:43,409
writing to a multi sample surface and

1115
01:06:41,340 --> 01:06:46,650
I'm assuming that you don't really have

1116
01:06:43,409 --> 01:06:48,899
to enable it or disable it in any more

1117
01:06:46,650 --> 01:06:50,490
specific way than just to turn it on and

1118
01:06:48,900 --> 01:06:53,340
then you'd only turn it off if for some

1119
01:06:50,489 --> 01:07:08,759
reason you didn't want to write multi

1120
01:06:53,340 --> 01:07:12,088
sampled right I wonder if there's

1121
01:07:08,760 --> 01:07:15,240
anything I'm going to take a look at

1122
01:07:12,088 --> 01:07:16,829
core ARB this is me just kind of

1123
01:07:15,239 --> 01:07:20,399
daydreaming now because I don't have any

1124
01:07:16,829 --> 01:07:23,358
particularly good idea I want to take a

1125
01:07:20,400 --> 01:07:23,358
look at coverage here

1126
01:07:27,068 --> 01:07:34,119
so I would like to know what sample

1127
01:07:30,380 --> 01:07:34,119
coverage value is

1128
01:07:47,570 --> 01:07:51,090
multifamily examples a pixel multiple

1129
01:07:49,800 --> 01:07:52,740
times is very sensation dependent

1130
01:07:51,090 --> 01:07:54,660
subject locations generate anti aliasing

1131
01:07:52,739 --> 01:07:57,209
effect multi stamping transparently

1132
01:07:54,659 --> 01:07:58,710
anticipated if it is enabled value is

1133
01:07:57,210 --> 01:08:00,179
used to construct a temporary mask use

1134
01:07:58,710 --> 01:08:01,530
determining which samples will be used

1135
01:08:00,179 --> 01:08:03,569
in resolving the final fragment color

1136
01:08:01,530 --> 01:08:04,500
this massive dip by banded with the

1137
01:08:03,570 --> 01:08:06,030
coverage master narrator from the

1138
01:08:04,500 --> 01:08:07,679
multi-tenant computation if the invert

1139
01:08:06,030 --> 01:08:10,320
flag is set the temporary mask is

1140
01:08:07,679 --> 01:08:11,730
inverted and then the bitwise confutatis

1141
01:08:10,320 --> 01:08:12,870
and implications does not have any left

1142
01:08:11,730 --> 01:08:14,449
in where's rail orbiters no the

1143
01:08:12,869 --> 01:08:16,710
restoration occurs only a single sample

1144
01:08:14,449 --> 01:08:18,119
computing a pixels final RGB color

1145
01:08:16,710 --> 01:08:19,859
provided and implementation sports play

1146
01:08:18,119 --> 01:08:21,029
several buffers and multi-channel

1147
01:08:19,859 --> 01:08:22,589
examines the files no derivative

1148
01:08:21,029 --> 01:08:24,989
occupying several samples per pixel each

1149
01:08:22,590 --> 01:08:29,000
template official diversity performed on

1150
01:08:24,989 --> 01:08:29,000
each sample here is a question though

1151
01:08:35,908 --> 01:08:42,778
the question is could you do that and

1152
01:08:38,670 --> 01:08:45,588
just give me the value back this is

1153
01:08:42,779 --> 01:08:45,589
really what I want to know

1154
01:09:06,960 --> 01:09:11,819
I love all these crazy pages that are

1155
01:09:09,149 --> 01:09:19,500
like basically just the docs from the

1156
01:09:11,819 --> 01:09:20,850
open jail thing moved up opengl 4.5

1157
01:09:19,500 --> 01:09:23,009
slack let's take a look at the latest

1158
01:09:20,850 --> 01:09:23,789
spec if that is wait a sec I don't even

1159
01:09:23,009 --> 01:09:33,259
know if it is anymore

1160
01:09:23,789 --> 01:09:33,259
that sample coverage coverage

1161
01:09:44,229 --> 01:09:49,639
all right the RGB values of the ran

1162
01:09:47,689 --> 01:09:51,139
stress governor left unaffected but the

1163
01:09:49,640 --> 01:09:52,730
a value is multiplied by a floating

1164
01:09:51,140 --> 01:09:53,750
point value in the range 0 to 1 the

1165
01:09:52,729 --> 01:09:55,819
describe the fragment stream

1166
01:09:53,750 --> 01:09:58,300
crystal-covered wait this is what I

1167
01:09:55,819 --> 01:09:58,299
wanted

1168
01:10:01,630 --> 01:10:05,619
how do we turn this on

1169
01:10:09,680 --> 01:10:13,610
raster addition specify which premium is

1170
01:10:11,750 --> 01:10:15,560
converted to a 2-dimensional image bla

1171
01:10:13,609 --> 01:10:17,149
bla bla raster Reznick Runa begins by

1172
01:10:15,560 --> 01:10:19,910
determining which square as integrated

1173
01:10:17,149 --> 01:10:21,349
window yeah that's fine a grid square so

1174
01:10:19,909 --> 01:10:22,609
should data of furniture is called a

1175
01:10:21,350 --> 01:10:24,950
fragment yeah

1176
01:10:22,609 --> 01:10:26,779
fragments div square okay after as

1177
01:10:24,949 --> 01:10:29,539
Esther press release pragmatist in

1178
01:10:26,779 --> 01:10:32,090
fragments so I'm like we don't care any

1179
01:10:29,539 --> 01:10:35,149
that that's a grid squares need on

1180
01:10:32,090 --> 01:10:36,380
actually be square and GL fine several

1181
01:10:35,149 --> 01:10:37,939
fractions prisons running before

1182
01:10:36,380 --> 01:10:39,500
decision points they're given

1183
01:10:37,939 --> 01:10:40,659
rasterization only produces fragments

1184
01:10:39,500 --> 01:10:42,350
Crosswhite includes in the frame buffer

1185
01:10:40,659 --> 01:10:43,670
fragments which would be Bruce class

1186
01:10:42,350 --> 01:10:45,079
diction of a infirmary rest which rules

1187
01:10:43,670 --> 01:10:50,329
for Evelyn so the Pharaoh not produced

1188
01:10:45,079 --> 01:10:51,920
nor they processed primitives right by

1189
01:10:50,329 --> 01:10:53,930
enable rasterizer

1190
01:10:51,920 --> 01:10:55,640
bridges can be optionally that's carded

1191
01:10:53,930 --> 01:10:58,159
before esters become enabled table with

1192
01:10:55,640 --> 01:10:59,510
rasterizer discard resorts card

1193
01:10:58,159 --> 01:11:01,210
immediately for the restoration stage

1194
01:10:59,510 --> 01:11:04,159
okay that's fine we don't need that

1195
01:11:01,210 --> 01:11:04,640
considered primitive Pease legacy okay

1196
01:11:04,159 --> 01:11:06,559
whatever

1197
01:11:04,640 --> 01:11:09,800
Ann Taylor saying their GP values for

1198
01:11:06,560 --> 01:11:11,090
apparent let's put a value see what are

1199
01:11:09,800 --> 01:11:13,190
you even talking about when you say

1200
01:11:11,090 --> 01:11:14,900
anti-aliasing like hello specification

1201
01:11:13,189 --> 01:11:20,089
tell me something about when that would

1202
01:11:14,899 --> 01:11:22,939
occur but this is what we wanted but I

1203
01:11:20,090 --> 01:11:25,010
was not able to get this to happen the

1204
01:11:22,939 --> 01:11:26,689
per fragment stage of the GL can be set

1205
01:11:25,010 --> 01:11:28,400
up to use the a value to blend the

1206
01:11:26,689 --> 01:11:29,960
incoming fragment crystal or and I'd get

1207
01:11:28,399 --> 01:11:31,039
that we don't care about that we want to

1208
01:11:29,960 --> 01:11:32,060
write the actual value details the

1209
01:11:31,039 --> 01:11:33,949
parent players current coverage

1210
01:11:32,060 --> 01:11:35,690
Peter different difficult so in general

1211
01:11:33,949 --> 01:11:37,039
reason is that hi clients doing may take

1212
01:11:35,689 --> 01:11:38,960
into account perceptual issues 12

1213
01:11:37,039 --> 01:11:40,310
characters monitor okay so those might

1214
01:11:38,960 --> 01:11:41,600
be just mystical document further the

1215
01:11:40,310 --> 01:11:42,800
coverage about a commuter for a fragment

1216
01:11:41,600 --> 01:11:44,090
of some ready-made the privileged

1217
01:11:42,800 --> 01:11:45,110
relationship to a number of grid squares

1218
01:11:44,090 --> 01:11:47,329
neighboring the one cross line the

1219
01:11:45,109 --> 01:11:49,869
fragment asked right I'm serious thing

1220
01:11:47,329 --> 01:11:51,949
okay you're all giving jilted okay fine

1221
01:11:49,869 --> 01:11:53,869
we chose to specify the behavior of

1222
01:11:51,949 --> 01:11:56,000
exact investing in the prototypical case

1223
01:11:53,869 --> 01:11:56,329
that each sleeve is a very square of

1224
01:11:56,000 --> 01:11:57,560
your

1225
01:11:56,329 --> 01:11:59,539
see the square it's called a fragment

1226
01:11:57,560 --> 01:12:01,670
square in the lower left corner XY upper

1227
01:11:59,539 --> 01:12:02,779
corner X plus one minus one recognize

1228
01:12:01,670 --> 01:12:04,340
that symbol box will dramatically

1229
01:12:02,779 --> 01:12:05,630
muscular results because a simple well

1230
01:12:04,340 --> 01:12:08,739
defined model at field position we use

1231
01:12:05,630 --> 01:12:08,739
other metric a fine

1232
01:12:16,738 --> 01:12:20,788
instantly she's ready to return anything

1233
01:12:18,510 --> 01:12:24,329
Claudia a routine barber ngl hints but I

1234
01:12:20,788 --> 01:12:28,380
need you to make up to speed up but how

1235
01:12:24,328 --> 01:12:30,359
do you get it to actually turn on that

1236
01:12:28,380 --> 01:12:32,730
is the question like this is all we

1237
01:12:30,359 --> 01:12:36,089
actually want we want this section of

1238
01:12:32,729 --> 01:12:37,738
the spec to occur and then we could get

1239
01:12:36,090 --> 01:12:40,199
rid of multi sample buffers entirely

1240
01:12:37,738 --> 01:12:45,238
right that's all we this is all we

1241
01:12:40,198 --> 01:12:48,109
actually wanted but we were not able to

1242
01:12:45,238 --> 01:12:48,109
get that to occur

1243
01:13:09,489 --> 01:13:13,569
yeah anyway

1244
01:13:19,029 --> 01:13:22,618
don't pick the care about any of this

1245
01:13:31,899 --> 01:13:36,909
is there anything about anti-aliasing

1246
01:13:33,970 --> 01:13:38,289
the polygons section polygons

1247
01:13:36,909 --> 01:13:39,729
interesting rasterizer polygons by

1248
01:13:38,289 --> 01:13:41,050
producing a fragment wherever the

1249
01:13:39,729 --> 01:13:43,329
interior the plug on your sex the

1250
01:13:41,050 --> 01:13:45,610
fragment square the coverage value is

1251
01:13:43,329 --> 01:13:47,199
computed at each such fragment and this

1252
01:13:45,609 --> 01:13:49,929
value is saved to be applied to

1253
01:13:47,199 --> 01:13:54,729
subscribe in Section 17 one associated

1254
01:13:49,930 --> 01:13:58,320
datum is assigned to fragment by

1255
01:13:54,729 --> 01:14:01,449
integrating the datums value of the yeah

1256
01:13:58,319 --> 01:14:04,869
so why could we not get that to happen

1257
01:14:01,449 --> 01:14:07,510
we want that we want to at least try

1258
01:14:04,869 --> 01:14:08,890
that the interpretation of polygons

1259
01:14:07,510 --> 01:14:13,180
rasterization is controlled using

1260
01:14:08,890 --> 01:14:19,780
polygon mode blah blah which we don't

1261
01:14:13,180 --> 01:14:21,930
care about no care about polygon offset

1262
01:14:19,779 --> 01:14:21,929
either

1263
01:14:30,949 --> 01:14:37,269
because the weather polygon interesting

1264
01:14:33,140 --> 01:14:49,420
polygon smooth is enabled or disabled

1265
01:14:37,270 --> 01:14:49,420
did we ever try turning that on curious

1266
01:15:13,579 --> 01:15:17,269
[Music]

1267
01:15:18,569 --> 01:15:24,299
yet is that did we do that

1268
01:15:27,750 --> 01:15:33,100
maybe we didn't do that

1269
01:15:30,600 --> 01:15:35,370
what happened let's just I'm just

1270
01:15:33,100 --> 01:15:35,370
curious

1271
01:15:36,479 --> 01:15:53,259
so let's say we don't have multi

1272
01:15:40,449 --> 01:15:55,210
sampling on right so this is a non multi

1273
01:15:53,260 --> 01:15:56,739
sample game running in low resolution at

1274
01:15:55,210 --> 01:15:58,060
the moment because why bother setting it

1275
01:15:56,739 --> 01:15:59,170
back up we don't really care we just

1276
01:15:58,060 --> 01:16:03,940
want to know whether we conclude some

1277
01:15:59,170 --> 01:16:08,440
things right okay so now let's go in

1278
01:16:03,939 --> 01:16:13,500
here and say okay GL enable GL polygons

1279
01:16:08,439 --> 01:16:19,299
smooth start with that first eye

1280
01:16:13,500 --> 01:16:21,699
what does that do I don't see any

1281
01:16:19,300 --> 01:16:23,860
polygon smoothing at all happening there

1282
01:16:21,699 --> 01:16:32,439
so that doesn't seem to do anything

1283
01:16:23,859 --> 01:16:37,509
right I guess like a disable multi

1284
01:16:32,439 --> 01:16:38,679
sample as well just to make sure we're

1285
01:16:37,510 --> 01:16:42,610
not using it at the moment so it

1286
01:16:38,680 --> 01:16:47,950
wouldn't matter I still see it I see no

1287
01:16:42,609 --> 01:16:52,769
smoothing i GL Kim I think that person

1288
01:16:47,949 --> 01:16:52,769
had it there right yeah just in case

1289
01:16:53,350 --> 01:16:58,069
[Applause]

1290
01:17:06,159 --> 01:17:14,670
can you open or Target has an invalid e

1291
01:17:08,350 --> 01:17:14,670
now is that not allowed

1292
01:17:15,390 --> 01:17:18,539
[Applause]

1293
01:17:29,569 --> 01:17:35,840
[Applause]

1294
01:17:31,840 --> 01:17:38,029
still see no smoothing now we're going

1295
01:17:35,840 --> 01:17:43,130
to totally wreck our rendering here in a

1296
01:17:38,029 --> 01:17:48,909
second unfortunately best I I'm going to

1297
01:17:43,130 --> 01:17:48,909
go ahead and do a GL enable GL blend

1298
01:17:49,090 --> 01:17:58,310
right and do we ever enable blending

1299
01:17:53,750 --> 01:18:00,640
again no so in theory if I enable

1300
01:17:58,310 --> 01:18:03,530
blending which should allow it to draw

1301
01:18:00,640 --> 01:18:17,860
and then I set the blend funk to one

1302
01:18:03,529 --> 01:18:17,859
zero I'm still not getting any smoothing

1303
01:18:21,100 --> 01:18:25,489
so it's not because it should just be

1304
01:18:23,569 --> 01:18:28,189
writing that alpha value in although I

1305
01:18:25,488 --> 01:18:32,839
guess we would have we it doesn't know

1306
01:18:28,189 --> 01:18:41,839
to pre multiply the alpha value so let's

1307
01:18:32,840 --> 01:18:43,550
just just to see again I just want to

1308
01:18:41,840 --> 01:18:45,350
know whether this whether you can ever

1309
01:18:43,550 --> 01:18:55,820
coax this into producing a primitive at

1310
01:18:45,350 --> 01:19:00,260
all it really doesn't seem like it like

1311
01:18:55,819 --> 01:19:01,880
I should see something right and maybe

1312
01:19:00,260 --> 01:19:02,960
not but I mean here's an example of

1313
01:19:01,880 --> 01:19:05,239
something that's just against the

1314
01:19:02,960 --> 01:19:08,989
background I should see some color

1315
01:19:05,238 --> 01:19:15,559
variation or something there but I'm not

1316
01:19:08,988 --> 01:19:18,819
seeing anything right hmm so I don't

1317
01:19:15,560 --> 01:19:18,820
know how do you get

1318
01:19:23,579 --> 01:19:26,769
[Applause]

1319
01:19:31,090 --> 01:19:34,239
all right

1320
01:19:38,420 --> 01:19:42,680
yeah I mean I unless I'm missing

1321
01:19:40,760 --> 01:19:44,390
something it does not look like even

1322
01:19:42,680 --> 01:19:47,480
though that's specifically stated in the

1323
01:19:44,390 --> 01:19:50,690
specification I don't see it turning on

1324
01:19:47,479 --> 01:19:52,609
at all but it's supposed to right I mean

1325
01:19:50,689 --> 01:19:54,919
it's it like that whole section in the

1326
01:19:52,609 --> 01:19:57,949
spec specifically says that you're

1327
01:19:54,920 --> 01:20:02,750
supposed to be able to turn on some kind

1328
01:19:57,949 --> 01:20:06,470
of anti-aliasing right so I'm I guess

1329
01:20:02,750 --> 01:20:11,930
what I don't understand is why that's

1330
01:20:06,470 --> 01:20:13,550
not why that doesn't seem to ever

1331
01:20:11,930 --> 01:20:16,520
produce it because I really would have

1332
01:20:13,550 --> 01:20:22,730
liked to be able to get that but I can't

1333
01:20:16,520 --> 01:20:24,410
seem to get so the first is you're in

1334
01:20:22,729 --> 01:20:26,439
the location of frame buffer is when

1335
01:20:24,409 --> 01:20:31,149
it's just on the drum buffer right yeah

1336
01:20:26,439 --> 01:20:31,149
so there test should be fine

1337
01:20:57,918 --> 01:21:04,300
so I don't see ya I literally see no

1338
01:21:00,800 --> 01:21:04,300
reason why we shouldn't be getting

1339
01:21:04,630 --> 01:21:08,380
polygon smoothing they're right

1340
01:21:09,050 --> 01:21:13,458
[Applause]

1341
01:21:35,319 --> 01:21:40,929
so it looks like basically that part of

1342
01:21:37,840 --> 01:21:45,150
the spec is just a word maybe and it's

1343
01:21:40,930 --> 01:21:54,840
just like hey yeah sorry about that we

1344
01:21:45,149 --> 01:21:54,839
we just don't care about that idea right

1345
01:21:57,270 --> 01:22:16,300
well it would have been nice all right

1346
01:22:13,060 --> 01:22:26,080
so yeah I mean honestly I don't know I

1347
01:22:16,300 --> 01:22:27,699
don't have a lot of ideas as to why as

1348
01:22:26,079 --> 01:22:29,380
to why we're not getting an even

1349
01:22:27,699 --> 01:22:31,239
summation on there because we're clearly

1350
01:22:29,380 --> 01:22:35,800
getting something where it's knocking

1351
01:22:31,239 --> 01:22:37,659
out a pixel which I feel like should

1352
01:22:35,800 --> 01:22:40,840
then should have belonged to the

1353
01:22:37,659 --> 01:22:43,420
subsequent death feel but doesn't appear

1354
01:22:40,840 --> 01:22:45,279
to and maybe the problem there is just a

1355
01:22:43,420 --> 01:22:47,949
summation from death feel to depth

1356
01:22:45,279 --> 01:22:49,599
appeal is incorrect because I suppose

1357
01:22:47,949 --> 01:22:53,079
that would do it like if it was under

1358
01:22:49,600 --> 01:22:55,260
weighting them in some way that I

1359
01:22:53,079 --> 01:22:58,600
suppose could be part of the problem

1360
01:22:55,260 --> 01:23:00,250
what I feel like might maybe if there

1361
01:22:58,600 --> 01:23:04,690
was some kind of a problem with the

1362
01:23:00,250 --> 01:23:06,909
Alpha that was being picked up at that

1363
01:23:04,689 --> 01:23:14,129
pixel like the Alpha value was not

1364
01:23:06,909 --> 01:23:14,130
correct so it was getting under weighted

1365
01:23:14,550 --> 01:23:19,270
like I just I don't understand exactly

1366
01:23:17,380 --> 01:23:20,680
how that would be possible but it's just

1367
01:23:19,270 --> 01:23:23,620
I'm saying that that's something that

1368
01:23:20,680 --> 01:23:26,670
would cause it so for example in you

1369
01:23:23,619 --> 01:23:28,869
know in here where we're doing this

1370
01:23:26,670 --> 01:23:32,020
summation we're sort of assuming that

1371
01:23:28,869 --> 01:23:35,439
the alpha value is one for all the

1372
01:23:32,020 --> 01:23:37,930
samples along that border and there's

1373
01:23:35,439 --> 01:23:39,009
just a fraction of the samples but I

1374
01:23:37,930 --> 01:23:43,539
don't know like is there something

1375
01:23:39,010 --> 01:23:46,420
that's creating non one alpha values

1376
01:23:43,539 --> 01:23:48,989
there I don't know and you know you

1377
01:23:46,420 --> 01:23:52,230
can't imagine us specify

1378
01:23:48,989 --> 01:24:04,769
this more stringently by doing something

1379
01:23:52,229 --> 01:24:12,059
like this combined color RGB combined

1380
01:24:04,770 --> 01:24:14,640
color a plus equals one right so if we

1381
01:24:12,060 --> 01:24:16,380
just assume that that well I mean you

1382
01:24:14,640 --> 01:24:24,900
know it's probably this that's probably

1383
01:24:16,380 --> 01:24:26,850
dumb right just so we don't care what we

1384
01:24:24,899 --> 01:24:28,469
fetch out of the buffer even if the

1385
01:24:26,850 --> 01:24:30,450
alpha value appears to be something

1386
01:24:28,470 --> 01:24:37,159
we're going to set it to one anyway

1387
01:24:30,449 --> 01:24:45,059
right um so you know looking at that so

1388
01:24:37,159 --> 01:24:47,309
I mean that's just that to me again like

1389
01:24:45,060 --> 01:24:50,550
I just do not understand what I'm seeing

1390
01:24:47,310 --> 01:24:52,380
then because now I mean you can ignore

1391
01:24:50,550 --> 01:24:53,850
all the black stuff here that's what we

1392
01:24:52,380 --> 01:24:55,859
would expect right we're taking pixels

1393
01:24:53,850 --> 01:24:58,380
that should have an alpha value and

1394
01:24:55,859 --> 01:25:00,589
we're treating them like they are solid

1395
01:24:58,380 --> 01:25:05,069
but I'm talking about for these

1396
01:25:00,590 --> 01:25:08,220
in-between pieces here like now we know

1397
01:25:05,069 --> 01:25:10,679
that that's not happening right the

1398
01:25:08,220 --> 01:25:13,230
alpha value is full-on and it's still

1399
01:25:10,680 --> 01:25:16,260
getting that same error so the summation

1400
01:25:13,229 --> 01:25:19,679
here across the boundary is just plain

1401
01:25:16,260 --> 01:25:21,750
broken but I have no idea why it's

1402
01:25:19,680 --> 01:25:24,060
broken I don't understand how we're not

1403
01:25:21,750 --> 01:25:28,289
getting to even size of the sample count

1404
01:25:24,060 --> 01:25:32,090
to sum up properly it doesn't make a

1405
01:25:28,289 --> 01:25:32,090
whole lot of sense to me

1406
01:25:36,369 --> 01:25:43,609
No all right good

1407
01:25:40,750 --> 01:25:46,250
that was bugging me I think I ought to

1408
01:25:43,609 --> 01:25:48,099
get it now all right so let's turn this

1409
01:25:46,250 --> 01:25:51,739
into something where we were looking at

1410
01:25:48,100 --> 01:25:58,460
the actual depth layers here's the peels

1411
01:25:51,739 --> 01:26:02,029
so here's our pixel right and we're

1412
01:25:58,460 --> 01:26:05,329
doing this V fall on the top tip field

1413
01:26:02,029 --> 01:26:06,259
these don't so they get moved down to

1414
01:26:05,329 --> 01:26:07,939
this depth field

1415
01:26:06,260 --> 01:26:09,440
what's going to happen right these still

1416
01:26:07,939 --> 01:26:11,659
happen on here but they're already taken

1417
01:26:09,439 --> 01:26:13,819
care of so they rejected right and then

1418
01:26:11,659 --> 01:26:15,649
there's something down here well what's

1419
01:26:13,819 --> 01:26:17,750
going to end up happening is the alpha

1420
01:26:15,649 --> 01:26:19,819
value here is point five and the Alpha

1421
01:26:17,750 --> 01:26:21,859
value here is point five but this is on

1422
01:26:19,819 --> 01:26:24,409
top lemming so what's going to happen is

1423
01:26:21,859 --> 01:26:27,679
this point five is going to add with

1424
01:26:24,409 --> 01:26:30,139
this point five right and rather than

1425
01:26:27,680 --> 01:26:33,409
producing one and not summing this it's

1426
01:26:30,140 --> 01:26:35,270
going to do an on top right it's going

1427
01:26:33,409 --> 01:26:36,710
to do it's going to turn this into a

1428
01:26:35,270 --> 01:26:42,100
point two five and it's going to add

1429
01:26:36,710 --> 01:26:42,100
point two five of this which is wrong

1430
01:26:56,680 --> 01:26:59,300
and I don't see a lot of ways around

1431
01:26:58,850 --> 01:27:00,829
that

1432
01:26:59,300 --> 01:27:03,050
I mean I think this is basically why

1433
01:27:00,829 --> 01:27:04,850
people use multi sampling in the regular

1434
01:27:03,050 --> 01:27:06,350
situation is specifically because you

1435
01:27:04,850 --> 01:27:09,430
don't know what the Alpha value is

1436
01:27:06,350 --> 01:27:09,430
actually trying to tell you

1437
01:27:13,479 --> 01:27:18,559
actively what it means is that when you

1438
01:27:16,279 --> 01:27:24,739
have multi sampling you need to track

1439
01:27:18,560 --> 01:27:30,880
how many actual samples there were in

1440
01:27:24,739 --> 01:27:30,880
the depth range and then you use

1441
01:27:44,260 --> 01:27:54,590
so here's a question if we just take the

1442
01:27:47,269 --> 01:27:57,039
whole thing what happens if we just take

1443
01:27:54,590 --> 01:27:57,038
the whole thing

1444
01:28:03,908 --> 01:28:13,000
if I just say give me the maximum give

1445
01:28:09,229 --> 01:28:19,250
me the highest give me the first back

1446
01:28:13,000 --> 01:28:25,029
right for this back thing sum all the

1447
01:28:19,250 --> 01:28:25,029
colors what happens then

1448
01:28:26,679 --> 01:28:37,369
what does that look like I'm curious to

1449
01:28:30,738 --> 01:28:40,099
know so we get some artifacts

1450
01:28:37,369 --> 01:28:45,140
specifically where the tree boundaries

1451
01:28:40,100 --> 01:28:48,610
overlap each other but now we don't have

1452
01:28:45,140 --> 01:28:48,610
that problem right of the

1453
01:29:03,119 --> 01:29:07,380
yet we don't have the problem

1454
01:29:13,939 --> 01:29:17,839
where we get those cross-purposes so

1455
01:29:16,069 --> 01:29:19,909
we're only talking about the fringes

1456
01:29:17,840 --> 01:29:21,610
once we switch that on and then we're

1457
01:29:19,909 --> 01:29:26,448
good to go pretty much everywhere else

1458
01:29:21,609 --> 01:29:28,219
right so in that situation we're just

1459
01:29:26,448 --> 01:29:30,409
back to the old problem that we had

1460
01:29:28,219 --> 01:29:32,060
before where and presumably this is

1461
01:29:30,409 --> 01:29:33,409
what's happening in the regular resolve

1462
01:29:32,060 --> 01:29:35,330
- right because this is the problem we

1463
01:29:33,409 --> 01:29:38,630
had when we just used the default

1464
01:29:35,329 --> 01:29:42,109
resolve and that problem is just that

1465
01:29:38,630 --> 01:29:47,680
when you get out to the fringe edge you

1466
01:29:42,109 --> 01:29:47,679
are going to produce an alpha value

1467
01:29:53,319 --> 01:30:05,859
that's too low and you're blocking the

1468
01:29:57,289 --> 01:30:05,859
other pieces from showing through

1469
01:30:12,800 --> 01:30:23,000
but at the end of the day that's really

1470
01:30:17,369 --> 01:30:23,000
more of a problem with the fact

1471
01:30:37,550 --> 01:30:45,929
that we don't clip out the Alpha when it

1472
01:30:40,738 --> 01:30:48,029
gets down to that level because if there

1473
01:30:45,929 --> 01:30:49,949
was still something to be contributed

1474
01:30:48,029 --> 01:30:51,119
here than the peeling like we're really

1475
01:30:49,948 --> 01:30:56,750
just talking about the fact that these

1476
01:30:51,119 --> 01:30:56,750
peels are overlapping directly in Z and

1477
01:30:57,829 --> 01:31:11,119
so we end up under weighting one of the

1478
01:31:07,500 --> 01:31:11,119
other values so I'm interested to know

1479
01:31:15,590 --> 01:31:22,500
what would happen if we put in some sort

1480
01:31:18,869 --> 01:31:23,789
of an alpha threshold here and just play

1481
01:31:22,500 --> 01:31:32,640
with that a little bit I'm curious to

1482
01:31:23,789 --> 01:31:35,698
know right so that that sort of wide

1483
01:31:32,640 --> 01:31:40,110
apron artifacting is more or less

1484
01:31:35,698 --> 01:31:42,899
controllable by the Alpha by the alpha

1485
01:31:40,109 --> 01:31:50,089
threshold what happens when we come down

1486
01:31:42,899 --> 01:31:50,089
through look at some sparklies though

1487
01:32:09,069 --> 01:32:13,029
it's pretty interesting

1488
01:32:16,840 --> 01:32:20,159
[Music]

1489
01:32:36,550 --> 01:32:41,630
that's pretty interesting so I also

1490
01:32:39,229 --> 01:32:43,789
wonder a little bit I want to try one

1491
01:32:41,630 --> 01:32:44,840
thing here so for intersecting I don't

1492
01:32:43,789 --> 01:32:47,569
know there's much we can do about

1493
01:32:44,840 --> 01:32:50,260
intersecting cubes because in that case

1494
01:32:47,569 --> 01:32:54,439
the multi sampling is not going to help

1495
01:32:50,260 --> 01:32:56,180
right so for intersecting cubes

1496
01:32:54,439 --> 01:33:00,409
I would actually need to do something

1497
01:32:56,180 --> 01:33:02,840
where we actually record the values

1498
01:33:00,409 --> 01:33:06,909
there because the most multi sampling

1499
01:33:02,840 --> 01:33:06,909
isn't going to help I'll sink

1500
01:33:15,510 --> 01:33:20,248
sounds like if there's a reason if multi

1501
01:33:17,698 --> 01:33:22,589
sampling if we were just doing regular

1502
01:33:20,248 --> 01:33:27,988
multi sampling would it work you know

1503
01:33:22,590 --> 01:33:32,179
without the depth feeling would it be

1504
01:33:27,988 --> 01:33:34,678
okay there and I don't think it would be

1505
01:33:32,179 --> 01:33:36,899
well no I guess you know to be honest I

1506
01:33:34,679 --> 01:33:39,269
guess I don't know exactly why those are

1507
01:33:36,899 --> 01:33:42,179
having that problem either meaning along

1508
01:33:39,269 --> 01:33:44,010
that boundary I would expect we should

1509
01:33:42,179 --> 01:33:47,069
be able to get multi sampling along that

1510
01:33:44,010 --> 01:33:49,079
boundary to work properly as well unless

1511
01:33:47,069 --> 01:33:51,238
the problem is that the primitive it's

1512
01:33:49,078 --> 01:33:53,880
not the primitive edge because it's a

1513
01:33:51,238 --> 01:33:56,098
little too fat so it sticks inside of it

1514
01:33:53,880 --> 01:33:59,779
and the primitive edge is so it doesn't

1515
01:33:56,099 --> 01:33:59,779
turn on multi sampling in that case

1516
01:34:07,368 --> 01:34:20,458
because I don't know if it if it uses

1517
01:34:12,229 --> 01:34:23,940
the Z testing to check so I wonder if

1518
01:34:20,458 --> 01:34:26,729
it's our centroid sampling that is that

1519
01:34:23,939 --> 01:34:28,618
that that makes that be the problem

1520
01:34:26,729 --> 01:34:33,179
right because our centroid for sampling

1521
01:34:28,618 --> 01:34:34,859
have forces all of that to be having the

1522
01:34:33,179 --> 01:34:37,408
same value and that prevents you from

1523
01:34:34,859 --> 01:34:39,748
getting multi sample they're probably so

1524
01:34:37,408 --> 01:34:42,029
if I were to turn off the centroid stuff

1525
01:34:39,748 --> 01:34:45,448
I wonder if that would improve that

1526
01:34:42,029 --> 01:34:50,518
situation so if I just take centroid out

1527
01:34:45,448 --> 01:34:57,228
of here right I guess I didn't need to

1528
01:34:50,519 --> 01:34:57,229
do that it's just that

1529
01:35:00,969 --> 01:35:06,460
yes so so it's really just a centroid

1530
01:35:04,000 --> 01:35:09,520
that ruins that but if you take a look

1531
01:35:06,460 --> 01:35:11,649
at what we've got now right where we're

1532
01:35:09,520 --> 01:35:14,140
just taking the maximum depth value

1533
01:35:11,649 --> 01:35:17,500
that's actually really nice and smooth

1534
01:35:14,140 --> 01:35:19,810
and it smoothes those intersections so

1535
01:35:17,500 --> 01:35:22,689
really at that point we're just talking

1536
01:35:19,810 --> 01:35:26,710
about some of that when we when we sort

1537
01:35:22,689 --> 01:35:32,169
of clip out there's there's some

1538
01:35:26,710 --> 01:35:40,680
objectionable sparklies in there but

1539
01:35:32,170 --> 01:35:43,560
everything else is pretty nice right and

1540
01:35:40,680 --> 01:35:46,270
I mean if you compare these two

1541
01:35:43,560 --> 01:35:47,920
especially here at this lower resolution

1542
01:35:46,270 --> 01:35:49,690
which admittedly is not exactly fair

1543
01:35:47,920 --> 01:35:54,789
because well you wouldn't run in the

1544
01:35:49,689 --> 01:35:57,789
lower resolution but you know if you

1545
01:35:54,789 --> 01:36:04,988
take a look at those two it's really a

1546
01:35:57,789 --> 01:36:07,409
lot nicer with multi sampling on you

1547
01:36:04,988 --> 01:36:07,409
know I'm saying

1548
01:36:19,850 --> 01:36:22,850
hmm

1549
01:36:33,539 --> 01:36:39,159
all right so I'm just not willing to

1550
01:36:36,220 --> 01:36:41,230
quite give up on this yet so I guess

1551
01:36:39,159 --> 01:36:44,649
what I would say is we're going to have

1552
01:36:41,229 --> 01:36:46,419
to pull Center it out it's pretty clear

1553
01:36:44,649 --> 01:36:47,859
that without centroid you get way better

1554
01:36:46,420 --> 01:36:51,449
anti-aliasing on those intersection

1555
01:36:47,859 --> 01:36:54,309
points so I'm just saying it's out

1556
01:36:51,449 --> 01:37:03,329
sentry is gone goodbye centroid no more

1557
01:36:54,310 --> 01:37:03,330
centroid oops

1558
01:37:21,000 --> 01:37:31,319
because that looks way nicer to me right

1559
01:37:24,939 --> 01:37:31,319
I am a fan I am a fan of this

1560
01:37:35,760 --> 01:37:42,480
that looks really nice and smooth and I

1561
01:37:40,948 --> 01:37:44,158
don't get a lot of those sparklies I

1562
01:37:42,479 --> 01:37:50,339
hate those sparkly is when things move

1563
01:37:44,158 --> 01:37:52,319
and you get the spark leaves right so

1564
01:37:50,340 --> 01:37:59,340
really we're just talking about those

1565
01:37:52,319 --> 01:38:01,469
those artifacts which we mostly can get

1566
01:37:59,340 --> 01:38:03,630
rid of with an alpha test which is what

1567
01:38:01,469 --> 01:38:05,099
I turned on there and I'd almost be

1568
01:38:03,630 --> 01:38:06,868
willing to live with that but there's a

1569
01:38:05,099 --> 01:38:09,650
little bit I wonder if we can just do a

1570
01:38:06,868 --> 01:38:09,649
little bit better

1571
01:38:22,590 --> 01:38:28,110
you can see some of those artifacts

1572
01:38:24,840 --> 01:38:32,510
right the edges there right I'm not

1573
01:38:28,109 --> 01:38:32,509
quite sure it because the clipping

1574
01:38:42,948 --> 01:38:47,269
right you can see right in there I don't

1575
01:38:45,198 --> 01:38:50,359
know if you can see it you can see it's

1576
01:38:47,270 --> 01:38:53,020
just subtly wrong all the time right at

1577
01:38:50,359 --> 01:38:53,019
those edges

1578
01:39:20,520 --> 01:39:36,540
ah very close now very very close now

1579
01:39:32,819 --> 01:39:39,229
though so the question is just could I

1580
01:39:36,539 --> 01:39:43,140
do something in the multi sample resolve

1581
01:39:39,229 --> 01:39:46,679
that's a little bit better about how it

1582
01:39:43,140 --> 01:39:54,710
processes those multi samples so we know

1583
01:39:46,680 --> 01:39:54,710
that if we pick the max depth here I

1584
01:39:59,149 --> 01:40:06,059
guess I'm not 100% sure when we're doing

1585
01:40:03,390 --> 01:40:08,070
that pick I guess I'm not a hundred

1586
01:40:06,060 --> 01:40:09,510
percent sure again and this is probably

1587
01:40:08,069 --> 01:40:11,069
just the fact that I always have to work

1588
01:40:09,510 --> 01:40:12,600
on it on a weekend and that is a week in

1589
01:40:11,069 --> 01:40:14,429
between and maybe my brain just kind of

1590
01:40:12,600 --> 01:40:16,620
loses some of the context that's

1591
01:40:14,430 --> 01:40:17,909
important in really thinking through a

1592
01:40:16,619 --> 01:40:21,720
problem but you don't totally know

1593
01:40:17,909 --> 01:40:22,500
what's going on right it's important to

1594
01:40:21,720 --> 01:40:26,310
try and get to that understanding

1595
01:40:22,500 --> 01:40:31,050
sometimes you need more focus then that

1596
01:40:26,310 --> 01:40:32,960
provides but if we take a look at what's

1597
01:40:31,050 --> 01:40:36,050
going on there with picking the depth

1598
01:40:32,960 --> 01:40:45,810
maximum value which is the farthest away

1599
01:40:36,050 --> 01:40:54,810
saying then I guess what I'm not clear

1600
01:40:45,810 --> 01:40:57,390
on is right at the edge when it does the

1601
01:40:54,810 --> 01:40:59,100
multi sampling if the Alpha value I

1602
01:40:57,390 --> 01:41:03,900
guess the problem is that the Alpha

1603
01:40:59,100 --> 01:41:06,390
value is very low then you for those

1604
01:41:03,899 --> 01:41:09,029
samples what you want to do is you want

1605
01:41:06,390 --> 01:41:15,240
to pick up okay so I I do know exactly

1606
01:41:09,029 --> 01:41:18,689
what's going on so that's good so the

1607
01:41:15,239 --> 01:41:21,029
problem is if when you do your multi

1608
01:41:18,689 --> 01:41:22,859
samples right you end up in a

1609
01:41:21,029 --> 01:41:26,189
circumstance where you've got one two

1610
01:41:22,859 --> 01:41:28,019
three four five six seven eight so if

1611
01:41:26,189 --> 01:41:30,899
you end up in this circumstance where

1612
01:41:28,020 --> 01:41:32,760
you've got a bunch of samples and you

1613
01:41:30,899 --> 01:41:33,658
know you're you're doing something like

1614
01:41:32,760 --> 01:41:36,389
this

1615
01:41:33,658 --> 01:41:37,829
and so you've got all these samples here

1616
01:41:36,389 --> 01:41:39,960
that you want to talk about but their

1617
01:41:37,829 --> 01:41:41,429
alpha value is very low

1618
01:41:39,960 --> 01:41:43,590
so when you pick all these guys up

1619
01:41:41,429 --> 01:41:45,539
you've got you know five samples but the

1620
01:41:43,590 --> 01:41:49,650
five samples all have alpha values of

1621
01:41:45,539 --> 01:41:52,109
like point one right as a result you're

1622
01:41:49,649 --> 01:41:55,099
going to produce the combined you're

1623
01:41:52,109 --> 01:41:57,869
producing the combined colors here using

1624
01:41:55,100 --> 01:42:01,139
the multi sampling so you're going to

1625
01:41:57,869 --> 01:42:03,869
get you know a three that have some

1626
01:42:01,139 --> 01:42:06,270
other color here but what you wanted to

1627
01:42:03,869 --> 01:42:08,698
do was you wanted to figure out what the

1628
01:42:06,270 --> 01:42:13,620
color was on the next depth peeled down

1629
01:42:08,698 --> 01:42:15,988
from just these samples right you wanted

1630
01:42:13,619 --> 01:42:17,639
to figure out what the def PLU was there

1631
01:42:15,988 --> 01:42:20,428
and add that in that's what you're

1632
01:42:17,639 --> 01:42:23,279
trying to do but you're not going to do

1633
01:42:20,429 --> 01:42:25,260
that because these samples are already

1634
01:42:23,279 --> 01:42:27,599
from here so you're actually going to

1635
01:42:25,260 --> 01:42:30,300
skip this depth all together and get

1636
01:42:27,600 --> 01:42:33,210
down to the next depth field right and

1637
01:42:30,300 --> 01:42:35,550
only this amount of contribution came

1638
01:42:33,210 --> 01:42:37,920
from this layer which is not what you

1639
01:42:35,550 --> 01:42:40,409
wanted so you get way more of this color

1640
01:42:37,920 --> 01:42:50,908
than you should get in this peel and

1641
01:42:40,408 --> 01:42:52,979
that's incorrect right or vice versa and

1642
01:42:50,908 --> 01:42:55,289
so when you pick the minimum color what

1643
01:42:52,979 --> 01:42:58,349
you do is you preserve the depth feeling

1644
01:42:55,289 --> 01:43:00,149
right when you picked up min you

1645
01:42:58,350 --> 01:43:04,469
preserve the depth feeling effect very

1646
01:43:00,149 --> 01:43:10,579
nicely what you don't do is you you

1647
01:43:04,469 --> 01:43:13,948
don't get drilled down deep enough right

1648
01:43:10,579 --> 01:43:16,859
and especially when things are

1649
01:43:13,948 --> 01:43:19,049
overlapping you end up in a bit of a

1650
01:43:16,859 --> 01:43:20,849
pickle there right now I don't know like

1651
01:43:19,050 --> 01:43:22,889
maybe there's simpler things that just

1652
01:43:20,850 --> 01:43:27,150
happen to not produce as much of an

1653
01:43:22,889 --> 01:43:31,219
error like I don't know you know maybe

1654
01:43:27,149 --> 01:43:38,129
maybe if we did the you know depth

1655
01:43:31,219 --> 01:43:43,250
equals one and you know we took step

1656
01:43:38,130 --> 01:43:43,250
then we grab that here

1657
01:43:45,210 --> 01:44:07,829
and I just tracked both and you know we

1658
01:43:54,810 --> 01:44:11,850
split the range in half right who knows

1659
01:44:07,829 --> 01:44:13,559
I'm making stuff up at this point I so

1660
01:44:11,850 --> 01:44:15,239
you know like if we take a look at what

1661
01:44:13,560 --> 01:44:17,070
happens there what you know what do we

1662
01:44:15,238 --> 01:44:18,629
get if we just split the depth range in

1663
01:44:17,069 --> 01:44:20,130
half so if there's oh it's going to be

1664
01:44:18,630 --> 01:44:21,510
mostly what it would have been if

1665
01:44:20,130 --> 01:44:24,150
they're close together if they're not

1666
01:44:21,510 --> 01:44:26,760
close together it'll pick something you

1667
01:44:24,149 --> 01:44:29,819
know halfway in between right what does

1668
01:44:26,760 --> 01:44:31,980
that look like and well what I would say

1669
01:44:29,819 --> 01:44:35,179
is I see a lot less artifacts of the

1670
01:44:31,979 --> 01:44:35,178
kind that we were talking about before

1671
01:44:36,560 --> 01:44:43,199
and I guess I would be interested to

1672
01:44:38,550 --> 01:44:44,640
know just looking at it here I'm not

1673
01:44:43,198 --> 01:44:47,639
seeing those artifacts on the top of the

1674
01:44:44,640 --> 01:44:54,510
trees for example right and and maybe

1675
01:44:47,640 --> 01:45:01,619
right if I also took a look and how we

1676
01:44:54,510 --> 01:45:03,360
were doing the threshold maybe that you

1677
01:45:01,619 --> 01:45:05,130
know what happens if I if I back off

1678
01:45:03,359 --> 01:45:06,929
that threshold again where do the

1679
01:45:05,130 --> 01:45:11,789
artifacts look like in this mode with

1680
01:45:06,929 --> 01:45:14,789
with no threshold and oddly enough I

1681
01:45:11,789 --> 01:45:16,920
don't see any so it doesn't look like

1682
01:45:14,789 --> 01:45:20,149
the Alpha threshold actually needs to be

1683
01:45:16,920 --> 01:45:20,149
there if you split the range

1684
01:45:27,140 --> 01:45:35,369
so right now honestly the only artifacts

1685
01:45:30,989 --> 01:45:39,869
I'm seeing so far are mostly in peeling

1686
01:45:35,369 --> 01:45:42,180
away like right now in the peeling away

1687
01:45:39,869 --> 01:45:46,369
like you can see some flicker unis

1688
01:45:42,180 --> 01:45:46,369
they're right

1689
01:45:58,039 --> 01:46:04,019
that's mostly all I'm seeing I would

1690
01:46:01,680 --> 01:46:08,610
like to know whether at alpha threshold

1691
01:46:04,020 --> 01:46:12,950
makes a difference for that I have no

1692
01:46:08,609 --> 01:46:12,949
idea let's find out

1693
01:46:20,668 --> 01:46:23,969
doesn't appear to

1694
01:46:58,969 --> 01:47:07,880
so I guess I would say at the moment and

1695
01:47:06,710 --> 01:47:11,329
that's weird that sort of simple

1696
01:47:07,880 --> 01:47:13,840
solution happens to be so good but that

1697
01:47:11,329 --> 01:47:17,869
really does look pretty shippable I

1698
01:47:13,840 --> 01:47:19,279
don't love the the pullthru artifacts

1699
01:47:17,869 --> 01:47:24,198
there I don't love the artifacts that

1700
01:47:19,279 --> 01:47:27,439
I'm seeing right here but that's really

1701
01:47:24,198 --> 01:47:30,769
it in terms of just rendering the scene

1702
01:47:27,439 --> 01:47:37,000
that looks real stable and very nice to

1703
01:47:30,770 --> 01:47:37,000
me everything is silky smooth there

1704
01:47:56,670 --> 01:48:00,840
I'm pretty happy with that so far

1705
01:48:26,118 --> 01:48:38,929
any questions and any questions any

1706
01:48:32,609 --> 01:48:38,929
questions also

1707
01:48:41,130 --> 01:48:44,248
[Applause]

1708
01:48:52,409 --> 01:49:04,090
[Applause]

1709
01:49:05,810 --> 01:49:09,440
we did that yesterday

1710
01:49:11,208 --> 01:49:20,269
I don't know other issues we've got

1711
01:49:12,800 --> 01:49:22,929
outstanding here news variable by

1712
01:49:20,269 --> 01:49:22,929
mistake

1713
01:49:31,469 --> 01:49:35,840
so this is not a bug that's just a

1714
01:49:33,420 --> 01:49:35,840
suggestion

1715
01:49:43,800 --> 01:49:50,219
two small compiler warnings vs 17p

1716
01:49:47,520 --> 01:49:51,869
Lindex has previous different okay first

1717
01:49:50,219 --> 01:49:53,578
more seconds looking at the shadow of

1718
01:49:51,868 --> 01:49:56,219
fixing the last one civil training set

1719
01:49:53,578 --> 01:49:57,539
cursor these are pretty free to change

1720
01:49:56,219 --> 01:50:01,139
and they would help if they would help

1721
01:49:57,539 --> 01:50:08,059
people compile on via 17 that's time

1722
01:50:01,139 --> 01:50:08,059
with me so that's in here the arrow

1723
01:50:08,420 --> 01:50:14,250
resource so that's just going to cast

1724
01:50:11,099 --> 01:50:20,578
that to the proper value and value for

1725
01:50:14,250 --> 01:50:21,809
the compiler to be happy declaration

1726
01:50:20,578 --> 01:50:35,460
feeling to touch previous local

1727
01:50:21,809 --> 01:50:38,719
decoration that here probably a for I

1728
01:50:35,460 --> 01:50:38,719
loop yep

1729
01:50:42,039 --> 01:50:50,109
so I'm going to go ahead and change this

1730
01:50:43,840 --> 01:50:51,640
one to on keel index since it's a little

1731
01:50:50,109 --> 01:50:57,009
more global and I'd like it to be a

1732
01:50:51,640 --> 01:50:59,860
little clearer I really wish I need to

1733
01:50:57,010 --> 01:51:02,020
figure out a way to make for code or not

1734
01:50:59,859 --> 01:51:19,949
stop searching for things because you

1735
01:51:02,020 --> 01:51:19,950
scroll all right that's it

1736
01:51:25,099 --> 01:51:28,029
well good

1737
01:51:33,119 --> 01:51:55,680
[Applause]

1738
01:52:11,729 --> 01:52:17,979
yeah uplink coder I I wish there was

1739
01:52:15,939 --> 01:52:20,289
some way and I guess conservative

1740
01:52:17,979 --> 01:52:21,669
rasterization is the thing that you know

1741
01:52:20,289 --> 01:52:23,529
look I talked about the beginning is the

1742
01:52:21,670 --> 01:52:26,409
thing that I want and some modern cards

1743
01:52:23,529 --> 01:52:29,340
now have added that looks like Nvidia

1744
01:52:26,409 --> 01:52:29,340
and Intel

1745
01:52:29,609 --> 01:52:37,509
you know both both have that Super Cub

1746
01:52:36,130 --> 01:52:39,640
what about the typecast what about what

1747
01:52:37,510 --> 01:52:44,579
typecast if this is this was the

1748
01:52:39,640 --> 01:52:44,579
typecast right making resource

1749
01:52:55,020 --> 01:53:00,600
oh hey and rec yeah game wise this isn't

1750
01:52:58,859 --> 01:53:04,710
really much of a game stream if it's a

1751
01:53:00,600 --> 01:53:07,970
programming stream so the engine coding

1752
01:53:04,710 --> 01:53:10,980
is the point of it if that makes sense

1753
01:53:07,970 --> 01:53:13,860
and we're kind of coming to the end of

1754
01:53:10,979 --> 01:53:19,169
that so we are going to build the game

1755
01:53:13,859 --> 01:53:22,380
on top of it as well just to show how

1756
01:53:19,170 --> 01:53:24,869
that part is done but I am NOT a game

1757
01:53:22,380 --> 01:53:29,550
designer so that that part will be more

1758
01:53:24,869 --> 01:53:32,309
just about like hey so here's you know

1759
01:53:29,550 --> 01:53:34,170
how to code the game part of the game in

1760
01:53:32,310 --> 01:53:35,400
case you didn't already know how to do

1761
01:53:34,170 --> 01:53:37,949
that from all the stuff we've already

1762
01:53:35,399 --> 01:53:40,139
sort of shown because a lot of its you

1763
01:53:37,949 --> 01:53:42,389
know kind of pretty obvious I think at

1764
01:53:40,140 --> 01:53:44,730
this point if people have followed the

1765
01:53:42,390 --> 01:53:47,730
whole stream they pretty much know how

1766
01:53:44,729 --> 01:53:49,139
to you know make a game on top of it now

1767
01:53:47,729 --> 01:53:54,119
because the game code is not

1768
01:53:49,140 --> 01:53:58,410
particularly complicated so we will be

1769
01:53:54,119 --> 01:54:00,420
doing that part but it it's not really

1770
01:53:58,409 --> 01:54:05,090
the point of stream if that makes sense

1771
01:54:00,420 --> 01:54:11,850
the game coding will be much less

1772
01:54:05,090 --> 01:54:13,920
important than the engine so I guess

1773
01:54:11,850 --> 01:54:15,780
that's that's what I would say so it's

1774
01:54:13,920 --> 01:54:19,260
not really much of a stream for people

1775
01:54:15,779 --> 01:54:21,289
who want to make games as the primary

1776
01:54:19,260 --> 01:54:24,989
goal is just to make a game and not

1777
01:54:21,289 --> 01:54:27,239
don't care about engine work because the

1778
01:54:24,989 --> 01:54:31,729
point the stream is the engine work not

1779
01:54:27,239 --> 01:54:31,729
the game that means

1780
01:54:32,800 --> 01:54:37,270
there are plenty of oh well I think that

1781
01:54:35,470 --> 01:54:39,730
things there are I think there are other

1782
01:54:37,270 --> 01:54:41,320
streams available that are more about

1783
01:54:39,729 --> 01:54:43,329
making a game and like so they just

1784
01:54:41,319 --> 01:54:44,649
glued up unity you know and show you how

1785
01:54:43,329 --> 01:54:47,979
to like put entities in or something

1786
01:54:44,649 --> 01:54:50,589
like that and so I think there are

1787
01:54:47,979 --> 01:54:54,369
streams that cover that kind of stuff

1788
01:54:50,590 --> 01:54:57,130
and this is very far from that right we

1789
01:54:54,369 --> 01:55:00,099
even wrote our own software rasterizer

1790
01:54:57,130 --> 01:55:03,940
for the game at one point which is you

1791
01:55:00,100 --> 01:55:05,880
know something you would never do for

1792
01:55:03,939 --> 01:55:07,599
any real reason it was just to sort of

1793
01:55:05,880 --> 01:55:09,970
educationally show here's how

1794
01:55:07,600 --> 01:55:12,789
rasterization works and here's how you

1795
01:55:09,970 --> 01:55:14,770
should think about it here's what the

1796
01:55:12,789 --> 01:55:16,090
GPU is doing under the hood and let's

1797
01:55:14,770 --> 01:55:19,330
implement that ourselves so we can

1798
01:55:16,090 --> 01:55:21,760
understand it that sort of stuff so you

1799
01:55:19,329 --> 01:55:24,609
know we pretty much are very heavily

1800
01:55:21,760 --> 01:55:27,310
focused on learning to program engine

1801
01:55:24,609 --> 01:55:30,939
and how they work and we don't really

1802
01:55:27,310 --> 01:55:32,080
focus on games or game design and and

1803
01:55:30,939 --> 01:55:34,029
again that's because I'm not a game

1804
01:55:32,079 --> 01:55:35,640
designer so I feel like that's really

1805
01:55:34,029 --> 01:55:38,739
[Music]

1806
01:55:35,640 --> 01:55:40,420
someone else's dream to make I wish

1807
01:55:38,739 --> 01:55:43,899
there were good ones as is there really

1808
01:55:40,420 --> 01:55:45,670
I don't know if there are you know game

1809
01:55:43,899 --> 01:55:46,869
good game designers are very hard to

1810
01:55:45,670 --> 01:55:48,069
come by there aren't very many of them

1811
01:55:46,869 --> 01:55:49,569
in the world

1812
01:55:48,069 --> 01:55:52,539
there's a lot of game designers but very

1813
01:55:49,569 --> 01:55:57,369
few of them are good and I don't think

1814
01:55:52,539 --> 01:55:59,019
any of them that I know of stream I mean

1815
01:55:57,369 --> 01:56:02,800
that's not entirely true like Jonathan

1816
01:55:59,020 --> 01:56:05,590
Blow does streams and he is a great game

1817
01:56:02,800 --> 01:56:08,440
designer but he doesn't do streams on

1818
01:56:05,590 --> 01:56:09,789
game design he streams like when he's

1819
01:56:08,439 --> 01:56:14,859
programming his compiler or something

1820
01:56:09,789 --> 01:56:22,139
like that which is great but not you

1821
01:56:14,859 --> 01:56:25,109
know yeah

1822
01:56:22,139 --> 01:56:27,118
I guess what I'd says it's it's not

1823
01:56:25,109 --> 01:56:29,069
helping anyone who's whose main goal was

1824
01:56:27,118 --> 01:56:30,630
to see how a great game designer does

1825
01:56:29,069 --> 01:56:32,099
that work

1826
01:56:30,630 --> 01:56:34,409
John blow streams aren't going to help

1827
01:56:32,099 --> 01:56:38,010
you because he doesn't show that right

1828
01:56:34,408 --> 01:56:43,408
key work shows how he does programming

1829
01:56:38,010 --> 01:56:44,760
on other things wasn't able as it

1830
01:56:43,408 --> 01:56:46,589
appeared to her nearing the end of the

1831
01:56:44,760 --> 01:56:48,479
main engine deadly be adding in the

1832
01:56:46,590 --> 01:56:53,010
non-mining to three layers to or have

1833
01:56:48,479 --> 01:56:55,708
others already done those um so I we

1834
01:56:53,010 --> 01:56:57,719
won't do ports till the very end so the

1835
01:56:55,708 --> 01:57:00,719
game will be done on one three two and

1836
01:56:57,719 --> 01:57:02,550
then we'll do the ports that said yes

1837
01:57:00,719 --> 01:57:05,489
other people have already done them if

1838
01:57:02,550 --> 01:57:08,340
you pre-ordered the game you can

1839
01:57:05,488 --> 01:57:11,698
actually go on the github and people

1840
01:57:08,340 --> 01:57:16,110
have ported it to STL which is a

1841
01:57:11,698 --> 01:57:19,558
cross-platform like library thing so I

1842
01:57:16,109 --> 01:57:26,098
think if you care about that you can go

1843
01:57:19,559 --> 01:57:29,279
get one of those and that would allow

1844
01:57:26,099 --> 01:57:32,819
you to run it probably in most places to

1845
01:57:29,279 --> 01:57:36,198
at least a certain degree because STL

1846
01:57:32,819 --> 01:57:40,139
has code for lots of different platforms

1847
01:57:36,198 --> 01:57:42,538
however I don't have any experience with

1848
01:57:40,139 --> 01:57:45,779
that branch myself I've never looked at

1849
01:57:42,538 --> 01:57:49,139
it so I don't know what it does or

1850
01:57:45,779 --> 01:57:51,328
doesn't do I will port the game to the

1851
01:57:49,139 --> 01:57:53,788
other platforms eventually you know at

1852
01:57:51,328 --> 01:57:57,179
least probably Linux Mac and Raspberry

1853
01:57:53,788 --> 01:57:59,099
Pi because those are plat open platforms

1854
01:57:57,179 --> 01:58:01,529
now one of them may close by the end of

1855
01:57:59,099 --> 01:58:03,899
that like Mac maybe completely closed

1856
01:58:01,529 --> 01:58:05,609
platform by that time I mean heck

1857
01:58:03,899 --> 01:58:07,889
windows maybe a closed platform by that

1858
01:58:05,609 --> 01:58:09,029
time I have no idea platforms are

1859
01:58:07,889 --> 01:58:12,239
rapidly closing up

1860
01:58:09,029 --> 01:58:16,550
but Raspberry Pi will be open so we'll

1861
01:58:12,238 --> 01:58:16,549
definitely port to Raspberry Pi right

1862
01:58:18,019 --> 01:58:23,639
but what else before - I don't know and

1863
01:58:20,988 --> 01:58:26,218
Linux right because that'll death open

1864
01:58:23,639 --> 01:58:29,909
so Linux and Raspberry Pi and those are

1865
01:58:26,219 --> 01:58:31,380
both similar ports because presumably we

1866
01:58:29,908 --> 01:58:32,759
could do a Linux Raspberry Pi port

1867
01:58:31,380 --> 01:58:34,880
although it might be more fun to do a

1868
01:58:32,760 --> 01:58:39,850
whole cloth Raspberry Pi

1869
01:58:34,880 --> 01:58:39,850
work but but yeah

1870
01:59:05,130 --> 01:59:08,230
alright looks like we're done with the Q

1871
01:59:07,539 --> 01:59:18,479
:

1872
01:59:08,229 --> 01:59:23,948
ah so I wouldn't go ahead and I will

1873
01:59:18,479 --> 01:59:26,139
wrap it up for the day I'm surprised at

1874
01:59:23,948 --> 01:59:27,819
how well that multi sampling suddenly

1875
01:59:26,140 --> 01:59:30,369
started working I guess once we fixed

1876
01:59:27,819 --> 01:59:32,019
the bug with a custom result it turns

1877
01:59:30,369 --> 01:59:34,630
out that just a small change to the

1878
01:59:32,020 --> 01:59:38,500
custom resolves produces a very good

1879
01:59:34,630 --> 01:59:40,029
result which doesn't make a whole lot of

1880
01:59:38,500 --> 01:59:43,000
sense to me why splitting the depth

1881
01:59:40,029 --> 01:59:49,119
range in half is suddenly somehow

1882
01:59:43,000 --> 01:59:51,130
magically amazing but I guess that's

1883
01:59:49,119 --> 01:59:54,670
just like your bisecting the difference

1884
01:59:51,130 --> 01:59:58,719
between the two I don't know

1885
01:59:54,670 --> 02:00:02,319
- did odd if we're honest or being

1886
01:59:58,719 --> 02:00:03,760
honest about it it's a bit weird but

1887
02:00:02,319 --> 02:00:11,139
yeah I mean just looking at it now I

1888
02:00:03,760 --> 02:00:13,480
feel like most of the bugs are just are

1889
02:00:11,140 --> 02:00:15,219
just in that that movement downwards but

1890
02:00:13,479 --> 02:00:17,079
in terms of rendering the scene it's

1891
02:00:15,219 --> 02:00:20,829
like rock solid I don't see any problems

1892
02:00:17,079 --> 02:00:26,859
that I notice rendering the scene it

1893
02:00:20,829 --> 02:00:29,619
looks great I mean for not doing any

1894
02:00:26,859 --> 02:00:32,289
sprite sorting at all just dumping all

1895
02:00:29,619 --> 02:00:34,869
the sprites into the engine and having

1896
02:00:32,289 --> 02:00:36,640
it completely resolve it with def peels

1897
02:00:34,869 --> 02:00:42,279
plus multi sample that's just kind of

1898
02:00:36,640 --> 02:00:45,820
crazy I'm like pretty impressed by how

1899
02:00:42,279 --> 02:00:47,738
well that works before we started I

1900
02:00:45,819 --> 02:00:51,099
don't think I would have said that that

1901
02:00:47,738 --> 02:00:52,718
I mean I had really no idea I'd never

1902
02:00:51,100 --> 02:00:55,630
thought about using defiantly for a 2d

1903
02:00:52,719 --> 02:00:58,289
engine before I'm kind of surprised at

1904
02:00:55,630 --> 02:00:58,289
how well that works

1905
02:01:19,909 --> 02:01:28,189
well sometimes you get lucky I guess I

1906
02:01:25,229 --> 02:01:30,989
don't know what that is notifications I

1907
02:01:28,189 --> 02:01:37,769
love when your developer studio has

1908
02:01:30,989 --> 02:01:39,389
notifications alright thank you for

1909
02:01:37,770 --> 02:01:40,710
joining me for enough code a handmade

1910
02:01:39,390 --> 02:01:42,539
hero it's been a pleasure coding with

1911
02:01:40,710 --> 02:01:43,859
you as always if you would like to

1912
02:01:42,539 --> 02:01:45,600
follow along series you can always

1913
02:01:43,859 --> 02:01:46,889
secure to the game on hammaker org and

1914
02:01:45,600 --> 02:01:49,289
it comes with a source code so you can

1915
02:01:46,890 --> 02:01:51,030
play around with it and practice the

1916
02:01:49,289 --> 02:01:54,479
stuff that we have talked about on the

1917
02:01:51,029 --> 02:01:57,179
stream or in the case of MTS mocks find

1918
02:01:54,479 --> 02:01:58,559
bugs for us that were really helpful we

1919
02:01:57,180 --> 02:02:00,119
may never have revisited that if you

1920
02:01:58,560 --> 02:02:03,050
hadn't to take a look at it or she I

1921
02:02:00,119 --> 02:02:07,609
don't actually know MTS mocks personally

1922
02:02:03,050 --> 02:02:12,560
although I often see them on the stream

1923
02:02:07,609 --> 02:02:14,549
that I remember the MTS mocks um

1924
02:02:12,560 --> 02:02:17,100
nickname coming up so thank you very

1925
02:02:14,550 --> 02:02:18,989
much for finding that that was great

1926
02:02:17,100 --> 02:02:21,480
and it made us go back to it and

1927
02:02:18,989 --> 02:02:23,510
actually do something pretty cool so I

1928
02:02:21,479 --> 02:02:26,519
think that's a pretty valuable thing

1929
02:02:23,510 --> 02:02:29,070
that's about it until next time if you

1930
02:02:26,520 --> 02:02:30,480
have questions you can go to the forums

1931
02:02:29,069 --> 02:02:33,119
talk to other community folks about it

1932
02:02:30,479 --> 02:02:35,189
you can go to a patreon page if you want

1933
02:02:33,119 --> 02:02:36,569
support the video series you can check

1934
02:02:35,189 --> 02:02:38,309
our schedule box find out what's good is

1935
02:02:36,569 --> 02:02:40,859
going to be and you can go to our

1936
02:02:38,310 --> 02:02:42,750
episode guide to catch up on old

1937
02:02:40,859 --> 02:02:46,649
episodes if there's something that you

1938
02:02:42,750 --> 02:02:51,750
missed that's about it for today until

1939
02:02:46,649 --> 02:02:52,649
next week yeah have fun programming and

1940
02:02:51,750 --> 02:02:55,130
I'll see you on the Internet

1941
02:02:52,649 --> 02:02:55,129
take it easy everybody

