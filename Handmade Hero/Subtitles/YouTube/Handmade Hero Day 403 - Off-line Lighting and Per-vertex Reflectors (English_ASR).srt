1
00:00:01,820 --> 00:00:05,819
hello everyone and welcome to handmade

2
00:00:04,379 --> 00:00:09,388
Hero the show recode a complete game

3
00:00:05,819 --> 00:00:14,280
live on stream we are trying streaming

4
00:00:09,388 --> 00:00:16,948
from the new office location so it's a

5
00:00:14,279 --> 00:00:18,689
little bit tricky I'm not sure whether

6
00:00:16,949 --> 00:00:22,130
or not this is going to work exactly we

7
00:00:18,690 --> 00:00:25,380
tried streaming for a while before

8
00:00:22,129 --> 00:00:27,089
before starting the stream here it was a

9
00:00:25,379 --> 00:00:28,739
little bit dicey initially I thought it

10
00:00:27,089 --> 00:00:31,469
wasn't going to work but then it turned

11
00:00:28,739 --> 00:00:33,988
out that it was just Comcast was gating

12
00:00:31,469 --> 00:00:36,420
our speed in a weird way that they

13
00:00:33,988 --> 00:00:38,070
weren't supposed to below what it was

14
00:00:36,420 --> 00:00:42,989
supposed to be but rebooting the cable

15
00:00:38,070 --> 00:00:45,530
modem seems to fix it and so it maybe

16
00:00:42,988 --> 00:00:47,849
it's working ok now I don't really know

17
00:00:45,530 --> 00:00:49,289
it's a little bit suspicious and it's

18
00:00:47,850 --> 00:00:52,649
one of those things we're probably going

19
00:00:49,289 --> 00:00:54,390
to have to give them a call and find out

20
00:00:52,649 --> 00:00:56,128
because I'm afraid that it's something

21
00:00:54,390 --> 00:00:57,539
that may be happening periodically in

22
00:00:56,128 --> 00:00:59,488
which case we're going to constantly

23
00:00:57,539 --> 00:01:00,780
have to struggle with it but we're going

24
00:00:59,488 --> 00:01:02,820
to give it a shot and we'll see what we

25
00:01:00,780 --> 00:01:05,400
can do we'll see if we can get some

26
00:01:02,820 --> 00:01:10,469
programming out of it and and who knows

27
00:01:05,400 --> 00:01:12,990
so anyway here's a 403 we'll do the best

28
00:01:10,469 --> 00:01:15,329
we can if it turns out the recording

29
00:01:12,989 --> 00:01:17,548
here locally as far as we know works

30
00:01:15,329 --> 00:01:19,079
just fine obviously so if something

31
00:01:17,549 --> 00:01:24,659
happens to the stream partway through I

32
00:01:19,079 --> 00:01:26,429
do apologize we'll just assume that we

33
00:01:24,659 --> 00:01:30,600
you can catch the video on demand when

34
00:01:26,430 --> 00:01:32,720
it's posted up on YouTube right so let's

35
00:01:30,599 --> 00:01:36,390
go ahead and get started today is day

36
00:01:32,719 --> 00:01:40,048
403 I'm going to go ahead and open up

37
00:01:36,390 --> 00:01:46,019
the code base here it's been a while I

38
00:01:40,049 --> 00:01:47,630
don't know why this keeps okay um there

39
00:01:46,019 --> 00:01:50,368
we go

40
00:01:47,629 --> 00:01:51,780
didn't really want that window hanging

41
00:01:50,368 --> 00:01:53,219
around for the entire time we were going

42
00:01:51,780 --> 00:01:55,140
to be programming so it's good that we

43
00:01:53,219 --> 00:01:58,859
were able to get rid of that little

44
00:01:55,140 --> 00:02:00,509
thing anyway so let's go ahead and run

45
00:01:58,859 --> 00:02:04,200
it we were in the middle of playing with

46
00:02:00,509 --> 00:02:05,609
lighting and at the moment we are in a

47
00:02:04,200 --> 00:02:07,189
reasonably good position with lighting

48
00:02:05,609 --> 00:02:10,500
the problem is we just need to start

49
00:02:07,189 --> 00:02:12,210
working out how we're going to propagate

50
00:02:10,500 --> 00:02:15,300
light in

51
00:02:12,210 --> 00:02:16,439
a reasonably high quality way so at the

52
00:02:15,300 --> 00:02:17,460
moment we've kind of got this little

53
00:02:16,439 --> 00:02:20,370
lighting test that you're running

54
00:02:17,460 --> 00:02:23,460
entirely on the CPU side now so it's not

55
00:02:20,370 --> 00:02:24,689
particularly good in terms of speed but

56
00:02:23,460 --> 00:02:26,879
we're just trying to get to a point

57
00:02:24,689 --> 00:02:31,050
where we can verify that the quality is

58
00:02:26,879 --> 00:02:32,460
roughly what we want it to be and and

59
00:02:31,050 --> 00:02:33,719
that's going to require us doing a

60
00:02:32,460 --> 00:02:35,849
little more thinking about how we're

61
00:02:33,719 --> 00:02:38,699
transferring light you can kind of see

62
00:02:35,849 --> 00:02:41,340
that at the moment it is at least

63
00:02:38,699 --> 00:02:44,219
working to a certain extent it's not a

64
00:02:41,340 --> 00:02:46,469
great lighting solution but we are at

65
00:02:44,219 --> 00:02:48,030
least get you know what we're looking at

66
00:02:46,469 --> 00:02:52,199
here is just just sort of block lighting

67
00:02:48,030 --> 00:02:59,759
in fact I can show you the actual lights

68
00:02:52,199 --> 00:03:02,399
here in a second let's see here here we

69
00:02:59,759 --> 00:03:05,489
go this is actually what we're

70
00:03:02,400 --> 00:03:08,939
simulating here just these little sort

71
00:03:05,490 --> 00:03:11,219
of light reflectors and what we don't

72
00:03:08,939 --> 00:03:13,050
really know at the moment is exactly how

73
00:03:11,219 --> 00:03:15,150
we want to transfer light between them

74
00:03:13,050 --> 00:03:18,360
we've sort of done a few things this

75
00:03:15,150 --> 00:03:21,300
right now is using a sort of stochastic

76
00:03:18,360 --> 00:03:23,700
like a ray casting technique this just

77
00:03:21,300 --> 00:03:25,950
looks at different reflectors versus

78
00:03:23,699 --> 00:03:28,109
each other sees how much each reflector

79
00:03:25,949 --> 00:03:32,459
can see each other reflector is in a

80
00:03:28,110 --> 00:03:34,710
sort of like randomized fashion and then

81
00:03:32,460 --> 00:03:36,240
propagates the light around and as you

82
00:03:34,710 --> 00:03:39,120
can see some of that stuff works pretty

83
00:03:36,240 --> 00:03:41,520
well actually and at the speed that it's

84
00:03:39,120 --> 00:03:47,759
running now probably we would actually

85
00:03:41,520 --> 00:03:50,280
even be able to once this is running GPU

86
00:03:47,759 --> 00:03:52,829
side that's probably actually fine as

87
00:03:50,280 --> 00:03:54,330
weird as that seems so you know speed

88
00:03:52,830 --> 00:03:57,170
wise we don't even really have that much

89
00:03:54,330 --> 00:04:00,180
of a problem at the moment I don't think

90
00:03:57,169 --> 00:04:03,059
but what we do want to do before we go

91
00:04:00,180 --> 00:04:06,750
any further down that road is just try

92
00:04:03,060 --> 00:04:09,120
to do something with the quality so

93
00:04:06,750 --> 00:04:11,250
there's two ways we can sort of go about

94
00:04:09,120 --> 00:04:13,740
looking at the quality at the moment or

95
00:04:11,250 --> 00:04:15,419
rather I shouldn't say two ways perhaps

96
00:04:13,740 --> 00:04:17,400
the right way to say it would be there's

97
00:04:15,419 --> 00:04:22,168
two things we need to look at in terms

98
00:04:17,399 --> 00:04:25,199
of quality at the moment and one of them

99
00:04:22,168 --> 00:04:26,099
is just the fact that we are not really

100
00:04:25,199 --> 00:04:28,469
taking

101
00:04:26,100 --> 00:04:31,530
care in how we're transferring light

102
00:04:28,470 --> 00:04:33,060
around and obviously that's something we

103
00:04:31,529 --> 00:04:36,869
can sort of start to improve by

104
00:04:33,060 --> 00:04:39,360
tightening down the equations and doing

105
00:04:36,870 --> 00:04:41,639
a more sensible approach to how we move

106
00:04:39,360 --> 00:04:44,639
the light but the other thing that's

107
00:04:41,639 --> 00:04:47,430
particularly interesting here is we have

108
00:04:44,639 --> 00:04:49,289
not yet put in anything that operates in

109
00:04:47,430 --> 00:04:51,660
a multi resolution fashion and we're

110
00:04:49,290 --> 00:04:54,900
going to want to do that as well even

111
00:04:51,660 --> 00:04:56,670
just for quality and so let me go to the

112
00:04:54,899 --> 00:04:58,229
blackboard assuming that the blackboard

113
00:04:56,670 --> 00:05:01,080
is working here I assume I reset up the

114
00:04:58,230 --> 00:05:04,490
pen properly don't actually know that I

115
00:05:01,079 --> 00:05:04,490
did but we hope that I did

116
00:05:11,980 --> 00:05:20,420
okay it looks not gonna do it so today

117
00:05:17,149 --> 00:05:23,539
is day four a three is that correct man

118
00:05:20,420 --> 00:05:24,590
so it isn't it's so interesting we we

119
00:05:23,540 --> 00:05:26,840
really need to checked on that Milton

120
00:05:24,589 --> 00:05:28,069
bug it's like when Milton loses like

121
00:05:26,839 --> 00:05:29,869
when that thing pops up in front of

122
00:05:28,069 --> 00:05:32,689
Milton it loses the ability to access

123
00:05:29,870 --> 00:05:35,000
the tablet I have no idea why and it's

124
00:05:32,689 --> 00:05:37,939
not repeatable either right like there

125
00:05:35,000 --> 00:05:41,540
it is here we go and there it is still

126
00:05:37,939 --> 00:05:50,509
so you know it wasn't a problem that

127
00:05:41,540 --> 00:05:53,260
time you know anyway so let's let's just

128
00:05:50,509 --> 00:05:53,259
talk about

129
00:05:58,870 --> 00:06:03,550
let's just talk about multi-resolution

130
00:06:00,790 --> 00:06:07,449
and quality in terms of lighting so what

131
00:06:03,550 --> 00:06:09,910
we have right now is we've got you know

132
00:06:07,449 --> 00:06:11,228
if I was going to look top down here you

133
00:06:09,910 --> 00:06:12,820
know we've got some stuff that looks

134
00:06:11,228 --> 00:06:19,719
kind of like this we've got these little

135
00:06:12,819 --> 00:06:22,269
reflectors and what we're seeing is

136
00:06:19,720 --> 00:06:25,180
we've got these reflectors that are sort

137
00:06:22,269 --> 00:06:29,049
of passing rays out to see what they

138
00:06:25,180 --> 00:06:32,500
could hit right and obviously the

139
00:06:29,050 --> 00:06:34,840
quality of the light transfer is you

140
00:06:32,500 --> 00:06:36,250
know besides the equation that tells us

141
00:06:34,839 --> 00:06:39,339
how much light we want to transfer when

142
00:06:36,250 --> 00:06:41,560
we actually see another reflector we

143
00:06:39,339 --> 00:06:43,989
obviously have a number of issues there

144
00:06:41,560 --> 00:06:47,350
which are just related to how many of

145
00:06:43,990 --> 00:06:51,100
these rays we shoot and in what

146
00:06:47,350 --> 00:06:53,800
direction will materially affect the

147
00:06:51,100 --> 00:06:55,689
quality of our solution because you know

148
00:06:53,800 --> 00:06:57,910
no matter we're not going to be able to

149
00:06:55,689 --> 00:06:59,889
shoot out like a million rays right the

150
00:06:57,910 --> 00:07:03,160
number is not going to be high it's

151
00:06:59,889 --> 00:07:06,129
going to be like you know 8 or 16 or at

152
00:07:03,160 --> 00:07:14,500
best on the GPU something like 256 if we

153
00:07:06,129 --> 00:07:16,389
got really obsessive but whatever it is

154
00:07:14,500 --> 00:07:22,949
you have to remember it's trying to

155
00:07:16,389 --> 00:07:26,079
encompass an entire hemisphere right and

156
00:07:22,949 --> 00:07:29,019
a hemisphere is an entire

157
00:07:26,079 --> 00:07:31,839
three-dimensional shape and you know 16

158
00:07:29,019 --> 00:07:34,359
samples even 32 samples just isn't a

159
00:07:31,839 --> 00:07:36,609
very dense sampling of the hemisphere

160
00:07:34,360 --> 00:07:40,689
when you start to think about just how

161
00:07:36,610 --> 00:07:42,990
wide of a net it has to cast and to give

162
00:07:40,689 --> 00:07:46,389
you something understanding exactly how

163
00:07:42,990 --> 00:07:49,139
ridiculous it is I mean imagine if you

164
00:07:46,389 --> 00:07:52,660
were not going to have any kind of

165
00:07:49,139 --> 00:07:55,180
intelligent handling of casting through

166
00:07:52,660 --> 00:07:57,070
to clean and you wanted to have a

167
00:07:55,180 --> 00:07:59,889
situation where you were just going to

168
00:07:57,069 --> 00:08:01,418
simulate let's say sunlight or something

169
00:07:59,889 --> 00:08:04,810
right

170
00:08:01,418 --> 00:08:08,379
well if even in 2d right if the Sun is

171
00:08:04,810 --> 00:08:12,350
you know this sort of thing way way off

172
00:08:08,379 --> 00:08:14,360
in the distance then if you just cast

173
00:08:12,350 --> 00:08:20,210
even just a little bit to either side of

174
00:08:14,360 --> 00:08:21,949
it right you would miss because the Sun

175
00:08:20,209 --> 00:08:23,509
is so tiny and it's so far away the

176
00:08:21,949 --> 00:08:25,039
chances that you'll aim directly at it

177
00:08:23,509 --> 00:08:27,110
with a random sample are actually very

178
00:08:25,040 --> 00:08:29,510
low and so no matter how many samples

179
00:08:27,110 --> 00:08:32,779
you take unless that that number is in

180
00:08:29,509 --> 00:08:35,120
the astronomical up to an astronomical

181
00:08:32,779 --> 00:08:37,339
level you're never going to hit it and

182
00:08:35,120 --> 00:08:40,668
that is why different techniques are

183
00:08:37,340 --> 00:08:41,810
used for sampling light sources and

184
00:08:40,668 --> 00:08:44,480
things like this that have a low

185
00:08:41,809 --> 00:08:46,129
probability of being hit often times

186
00:08:44,480 --> 00:08:50,930
what you'll do is you'll intentionally

187
00:08:46,129 --> 00:08:54,350
aim blue tuned right at the light source

188
00:08:50,929 --> 00:08:57,439
so when you're picking which directions

189
00:08:54,350 --> 00:08:58,759
to send rays oftentimes you'll send one

190
00:08:57,440 --> 00:09:02,390
directly at the light source

191
00:08:58,759 --> 00:09:03,649
intentionally and that's like one of the

192
00:09:02,389 --> 00:09:05,019
cheats that you do it's one of the

193
00:09:03,649 --> 00:09:09,169
things that allows that to happen

194
00:09:05,019 --> 00:09:12,409
however one of the problems here is that

195
00:09:09,169 --> 00:09:15,529
that only works when you know ahead of

196
00:09:12,409 --> 00:09:18,589
time what a light source actually is and

197
00:09:15,529 --> 00:09:20,720
so that helps you for emitters but what

198
00:09:18,590 --> 00:09:23,030
about secondary emitters right it

199
00:09:20,720 --> 00:09:24,800
doesn't help you at all for those so

200
00:09:23,029 --> 00:09:26,720
what happens is if I have like a really

201
00:09:24,799 --> 00:09:28,939
bright light source over here and it's

202
00:09:26,720 --> 00:09:31,430
shining in this direction yes it may

203
00:09:28,940 --> 00:09:33,650
help me to grab it by knowing that it's

204
00:09:31,429 --> 00:09:35,539
an emitter I can always check to see if

205
00:09:33,649 --> 00:09:40,039
I see the admit err and waste array on

206
00:09:35,539 --> 00:09:42,169
that all the time but at that point this

207
00:09:40,039 --> 00:09:45,139
guy who can't see the emitter back here

208
00:09:42,169 --> 00:09:47,360
he is going to try to look around his

209
00:09:45,139 --> 00:09:49,819
scene and he doesn't have any special

210
00:09:47,360 --> 00:09:50,960
knowledge that this is a place where a

211
00:09:49,820 --> 00:09:52,610
lot of lights going to be coming from

212
00:09:50,960 --> 00:09:54,800
because it's the thing that has the

213
00:09:52,610 --> 00:09:56,210
primary bounce from this light source

214
00:09:54,799 --> 00:09:59,539
which may be where most of the lights

215
00:09:56,210 --> 00:10:02,389
coming from so that again is a problem

216
00:09:59,539 --> 00:10:03,559
where you don't necessarily know where

217
00:10:02,389 --> 00:10:06,500
you should be focusing your attention

218
00:10:03,559 --> 00:10:10,269
and this becomes a more significant

219
00:10:06,500 --> 00:10:13,220
problem as you try to do more sort of

220
00:10:10,269 --> 00:10:15,319
global illumination schemes that involve

221
00:10:13,220 --> 00:10:16,629
those secondary bounces because you

222
00:10:15,320 --> 00:10:19,940
never know where you should be looking

223
00:10:16,629 --> 00:10:22,639
to find out now sometimes you can use

224
00:10:19,940 --> 00:10:26,180
hybrid approaches that are like forward

225
00:10:22,639 --> 00:10:29,870
schemes and that may be

226
00:10:26,179 --> 00:10:31,750
thing that we will do what what that

227
00:10:29,870 --> 00:10:34,278
basically entails is saying well okay

228
00:10:31,750 --> 00:10:36,769
let's say that we take the light source

229
00:10:34,278 --> 00:10:39,259
let's cast outward from the light source

230
00:10:36,769 --> 00:10:42,500
instead of backwards from the reflectors

231
00:10:39,259 --> 00:10:44,360
and let's just tag anything we hit so

232
00:10:42,500 --> 00:10:46,789
when we come out here we'll just tag

233
00:10:44,360 --> 00:10:49,610
like a bunch of things that we hit you

234
00:10:46,789 --> 00:10:53,649
know and those will now become our

235
00:10:49,610 --> 00:10:57,350
secondary light sources right that

236
00:10:53,649 --> 00:10:59,600
allows us to know sort of a set of

237
00:10:57,350 --> 00:11:01,700
places where we should probably be

238
00:10:59,600 --> 00:11:03,500
concentrating our efforts in terms of

239
00:11:01,700 --> 00:11:05,240
looking for light and that's a good

240
00:11:03,500 --> 00:11:07,639
strategy and like I said we may use some

241
00:11:05,240 --> 00:11:11,000
like that but there's another strategy

242
00:11:07,639 --> 00:11:13,399
that we probably need to use and that is

243
00:11:11,000 --> 00:11:15,528
the multi resolution approach and the

244
00:11:13,399 --> 00:11:18,440
multi resolution approach is just saying

245
00:11:15,528 --> 00:11:20,689
that well look we know that when we

246
00:11:18,440 --> 00:11:22,490
start to cast these rays out when we're

247
00:11:20,690 --> 00:11:24,589
very close to the surface we probably

248
00:11:22,490 --> 00:11:27,409
have a really good sampling if there's a

249
00:11:24,589 --> 00:11:29,180
light right up here we know that most of

250
00:11:27,409 --> 00:11:30,769
our rays are going to hit it so we don't

251
00:11:29,179 --> 00:11:32,929
have to worry about sampling the

252
00:11:30,769 --> 00:11:34,610
hemisphere very densely because most of

253
00:11:32,929 --> 00:11:36,979
those rays are very close together when

254
00:11:34,610 --> 00:11:39,528
you've only gotten say a foot away from

255
00:11:36,980 --> 00:11:41,959
the reflector surface or an inch away or

256
00:11:39,528 --> 00:11:44,240
something like this right the closer the

257
00:11:41,958 --> 00:11:46,549
better for keeping the hemisphere nicely

258
00:11:44,240 --> 00:11:48,350
sampled but what happens and the part

259
00:11:46,549 --> 00:11:51,289
that we're most concerned about and you

260
00:11:48,350 --> 00:11:55,659
can see it here in 2d is as I send rays

261
00:11:51,289 --> 00:11:55,659
out further right

262
00:12:04,059 --> 00:12:09,309
what may be a very dense sampling in

263
00:12:06,909 --> 00:12:11,649
here becomes a fairly sparse sampling

264
00:12:09,309 --> 00:12:14,049
out here and when I get you know far

265
00:12:11,649 --> 00:12:16,809
enough out it becomes a massively sparse

266
00:12:14,049 --> 00:12:18,789
sampling so you know there's joy ganthet

267
00:12:16,809 --> 00:12:20,859
gaps in the sampling as you get further

268
00:12:18,789 --> 00:12:27,099
away and that's just the nature of a

269
00:12:20,860 --> 00:12:32,019
radial distribution a uniform sampling

270
00:12:27,100 --> 00:12:34,420
of an angular space just produces

271
00:12:32,019 --> 00:12:38,199
coarser and coarser samplers samples as

272
00:12:34,419 --> 00:12:40,299
you expand the radius of the sampling

273
00:12:38,200 --> 00:12:42,700
surface that's just you know you can see

274
00:12:40,299 --> 00:12:44,949
that very intuitively there's not a lot

275
00:12:42,700 --> 00:12:48,070
of mystery to it that's just the way it

276
00:12:44,950 --> 00:12:49,509
goes so what that means and the reason

277
00:12:48,070 --> 00:12:52,450
why I bring up multi-resolution

278
00:12:49,509 --> 00:12:54,879
is that no matter what you do it really

279
00:12:52,450 --> 00:12:56,680
doesn't matter what you do even if you

280
00:12:54,879 --> 00:12:58,090
have sort of a forward scheme like I was

281
00:12:56,679 --> 00:13:00,879
talking about the light sources before

282
00:12:58,090 --> 00:13:03,759
or if you send out a ton of samples it

283
00:13:00,879 --> 00:13:07,299
doesn't matter at all you will not get a

284
00:13:03,759 --> 00:13:08,919
good result for faraway things unless

285
00:13:07,299 --> 00:13:11,049
you have some kind of strategy that

286
00:13:08,919 --> 00:13:14,409
takes into account the fact that when

287
00:13:11,049 --> 00:13:17,769
you get out here you want to use a more

288
00:13:14,409 --> 00:13:19,689
coarse representation of the world so

289
00:13:17,769 --> 00:13:23,289
you can find out what's probably going

290
00:13:19,690 --> 00:13:26,440
on right and what I mean by that is if I

291
00:13:23,289 --> 00:13:29,019
have a you know some reflectors out here

292
00:13:26,440 --> 00:13:31,870
like this sort of thing and I'm casting

293
00:13:29,019 --> 00:13:34,899
out into them what I really want to know

294
00:13:31,870 --> 00:13:37,720
is I don't really want to just miss

295
00:13:34,899 --> 00:13:40,240
these like so right or maybe only hit

296
00:13:37,720 --> 00:13:43,120
this one and never hit these other ones

297
00:13:40,240 --> 00:13:44,830
by all these three rays what I really

298
00:13:43,120 --> 00:13:47,230
want to do is form an aggregate

299
00:13:44,830 --> 00:13:49,420
reflector that's fairly large that just

300
00:13:47,230 --> 00:13:52,570
says how much these generally would

301
00:13:49,419 --> 00:13:55,240
reflect from how far away they are and

302
00:13:52,570 --> 00:13:58,180
that way all of these samples will get

303
00:13:55,240 --> 00:14:00,100
it right and in the best possible world

304
00:13:58,179 --> 00:14:03,219
you have roughly a one-to-one

305
00:14:00,100 --> 00:14:05,080
correspondence of what you're saying the

306
00:14:03,220 --> 00:14:06,550
Rays you're sampling and how you've

307
00:14:05,080 --> 00:14:10,330
compressed your geometry so that each

308
00:14:06,549 --> 00:14:12,609
sample does a maximal amount of work but

309
00:14:10,330 --> 00:14:15,580
you know anywhere close is probably fine

310
00:14:12,610 --> 00:14:17,740
so when you look at that hopefully what

311
00:14:15,580 --> 00:14:20,320
that you know sort of indicates is

312
00:14:17,740 --> 00:14:21,940
that sort of an LOD scheme right a level

313
00:14:20,320 --> 00:14:25,390
of detail scheme like we normally would

314
00:14:21,940 --> 00:14:29,110
do where we are collapsing nearby things

315
00:14:25,389 --> 00:14:30,970
that are similar together is exactly

316
00:14:29,110 --> 00:14:32,980
what we actually want for lighting as

317
00:14:30,970 --> 00:14:34,570
well because when we are looking off in

318
00:14:32,980 --> 00:14:37,210
the distance to say how much light is

319
00:14:34,570 --> 00:14:39,790
coming from a relatively far away piece

320
00:14:37,210 --> 00:14:45,040
of geometry we don't really need the

321
00:14:39,789 --> 00:14:46,480
exact answer for diffuse lighting for

322
00:14:45,039 --> 00:14:48,309
specular lighting we might want the

323
00:14:46,480 --> 00:14:49,810
exact answer because if for a mirror or

324
00:14:48,309 --> 00:14:52,689
something we want to know exactly what

325
00:14:49,809 --> 00:14:53,979
we hit right but for diffuse lighting

326
00:14:52,690 --> 00:14:56,440
that's not we want we just want to know

327
00:14:53,980 --> 00:14:59,830
the general amount of light and sort of

328
00:14:56,440 --> 00:15:02,950
what color it is from that direction we

329
00:14:59,830 --> 00:15:05,590
don't need to know specifically what's

330
00:15:02,950 --> 00:15:07,420
going on so what we actually want again

331
00:15:05,590 --> 00:15:10,360
is something that operates very much

332
00:15:07,419 --> 00:15:12,639
like a cone right that collects all the

333
00:15:10,360 --> 00:15:14,050
things in this area and a cone is

334
00:15:12,639 --> 00:15:16,149
relatively hard to deal with so

335
00:15:14,049 --> 00:15:19,419
preferably what we would like to do is

336
00:15:16,149 --> 00:15:23,399
be able to sample just say a line in a

337
00:15:19,419 --> 00:15:29,110
direction and that line instead

338
00:15:23,399 --> 00:15:31,360
who-who's what I'm so Yanni lately I'm

339
00:15:29,110 --> 00:15:35,019
not sure why I guess I happen to get

340
00:15:31,360 --> 00:15:36,460
enough sleep I don't know I think it's

341
00:15:35,019 --> 00:15:39,309
more that my schedule got shifted up

342
00:15:36,460 --> 00:15:44,680
because it's brutally hot here in

343
00:15:39,309 --> 00:15:46,149
Seattle like not maybe necessarily by

344
00:15:44,679 --> 00:15:48,189
the standards of other parts of the

345
00:15:46,149 --> 00:15:50,279
world that are more tropical but in

346
00:15:48,190 --> 00:15:53,170
Seattle it's usually relatively cool and

347
00:15:50,279 --> 00:15:55,839
I you know we don't have a hundred

348
00:15:53,169 --> 00:15:57,370
degree day weather days here that's not

349
00:15:55,840 --> 00:15:59,370
a thing not it's not like you know

350
00:15:57,370 --> 00:16:03,279
Phoenix Arizona or something like this

351
00:15:59,370 --> 00:16:04,539
and what we've been getting lately is

352
00:16:03,279 --> 00:16:06,970
sort of a heat wave where the

353
00:16:04,539 --> 00:16:09,750
temperature is up above 90 every day and

354
00:16:06,970 --> 00:16:13,600
supposedly it will be up above 100 even

355
00:16:09,750 --> 00:16:15,610
occasionally and it's just it's awful I

356
00:16:13,600 --> 00:16:17,050
don't know how anyone ever gets any work

357
00:16:15,610 --> 00:16:20,850
done with these come temperatures it's

358
00:16:17,049 --> 00:16:23,199
just oh gotta buy an air conditioner now

359
00:16:20,850 --> 00:16:25,570
most places in Seattle don't have air

360
00:16:23,200 --> 00:16:29,050
conditioning specifically because you

361
00:16:25,570 --> 00:16:31,030
didn't really need it so people's homes

362
00:16:29,049 --> 00:16:31,389
typically are built without any kind of

363
00:16:31,029 --> 00:16:33,339
center

364
00:16:31,389 --> 00:16:36,009
air conditioning because it just wasn't

365
00:16:33,340 --> 00:16:37,360
necessary and apartment buildings often

366
00:16:36,009 --> 00:16:39,759
don't have it but they're starting to

367
00:16:37,360 --> 00:16:41,820
build them in now because the the

368
00:16:39,759 --> 00:16:47,649
temperatures are getting so much hotter

369
00:16:41,820 --> 00:16:49,750
anyway so what I would like to explore

370
00:16:47,649 --> 00:16:52,750
in terms of the multi-resolution stuff

371
00:16:49,750 --> 00:16:55,629
is I would like to figure out a way to

372
00:16:52,750 --> 00:17:00,570
maybe take reflectors that are nearby

373
00:16:55,629 --> 00:17:03,129
and pointing in a similar direction I

374
00:17:00,570 --> 00:17:06,730
would like to figure out a way to sort

375
00:17:03,129 --> 00:17:09,039
of condense them down a bit if possible

376
00:17:06,730 --> 00:17:11,019
now it's always kind of a dicey

377
00:17:09,039 --> 00:17:13,240
proposition to do these sorts of things

378
00:17:11,019 --> 00:17:15,910
because when you're talking about coarse

379
00:17:13,240 --> 00:17:17,980
approximation so things like reflectors

380
00:17:15,910 --> 00:17:21,730
you run the risk of producing erroneous

381
00:17:17,980 --> 00:17:22,690
lighting results as well so it's kind of

382
00:17:21,730 --> 00:17:24,190
a little bit tricky and I don't

383
00:17:22,690 --> 00:17:25,390
necessarily pretend that it's going to

384
00:17:24,190 --> 00:17:28,570
be a straightforward process

385
00:17:25,390 --> 00:17:30,490
but in general we do need to do

386
00:17:28,569 --> 00:17:34,569
something so I want to kind of look at

387
00:17:30,490 --> 00:17:36,609
what our options might be now what I'm

388
00:17:34,569 --> 00:17:38,289
trying to say here again is that what I

389
00:17:36,609 --> 00:17:41,859
want to do is I want to be able to cast

390
00:17:38,289 --> 00:17:44,559
rays out from say a reflector and be

391
00:17:41,859 --> 00:17:47,589
able to treat these three for example as

392
00:17:44,559 --> 00:17:51,429
one reflector and just get the sort of

393
00:17:47,589 --> 00:17:58,959
aggregate lighting back right that's

394
00:17:51,430 --> 00:18:02,620
what I would like to do and that

395
00:17:58,960 --> 00:18:05,350
requires sort of a some kind of a tree

396
00:18:02,619 --> 00:18:09,459
or a hierarchy of these reflectors where

397
00:18:05,349 --> 00:18:11,529
I can sort of go in and say how they are

398
00:18:09,460 --> 00:18:13,840
related to each other how like smaller

399
00:18:11,529 --> 00:18:16,149
ones relate to bigger ones and that's

400
00:18:13,839 --> 00:18:18,429
going to be a take a bit of doing and

401
00:18:16,150 --> 00:18:20,170
again the primary problem here is just

402
00:18:18,430 --> 00:18:25,860
figuring out how to make these

403
00:18:20,170 --> 00:18:28,870
reflectors behave in ways that will not

404
00:18:25,859 --> 00:18:31,179
produce highly erroneous results when

405
00:18:28,869 --> 00:18:33,309
sampled in the multi-resolution context

406
00:18:31,180 --> 00:18:36,120
meaning we want something that will sort

407
00:18:33,309 --> 00:18:38,679
of approximate what the what those

408
00:18:36,119 --> 00:18:41,049
reflectors would actually have done if

409
00:18:38,680 --> 00:18:45,070
sampled more densely from the place

410
00:18:41,049 --> 00:18:47,619
where we're casting I and I don't

411
00:18:45,069 --> 00:18:50,349
we know again exactly how hard that's

412
00:18:47,619 --> 00:18:53,829
going to be slipping back to the running

413
00:18:50,349 --> 00:18:55,599
version of the program you can kind of

414
00:18:53,829 --> 00:18:58,329
see that since all of our stuff is

415
00:18:55,599 --> 00:19:01,089
rectangular and we generally know that

416
00:18:58,329 --> 00:19:05,980
that's how it works it does sort of mean

417
00:19:01,089 --> 00:19:07,839
that we we could I suspect if we decided

418
00:19:05,980 --> 00:19:10,269
to switch we kind of use a disk

419
00:19:07,839 --> 00:19:12,548
approximation for reflectors now since

420
00:19:10,269 --> 00:19:15,370
most of our stuff is actual rectangles

421
00:19:12,548 --> 00:19:17,829
we could decide to switch to actual

422
00:19:15,369 --> 00:19:19,839
rectangular reflectors if we did that it

423
00:19:17,829 --> 00:19:22,538
is true that we could probably merge

424
00:19:19,839 --> 00:19:26,459
things fairly cleanly like if you look

425
00:19:22,538 --> 00:19:28,599
at how these things are are currently

426
00:19:26,460 --> 00:19:31,179
laid out you know you could easily

427
00:19:28,599 --> 00:19:32,949
imagine taking you know this entire blue

428
00:19:31,179 --> 00:19:34,929
wall and replacing it with one reflector

429
00:19:32,950 --> 00:19:38,200
this entire white floor place it with

430
00:19:34,929 --> 00:19:39,700
one reflector the you know sort of the

431
00:19:38,200 --> 00:19:42,788
the degree to which these things can be

432
00:19:39,700 --> 00:19:45,759
merged up is probably relatively sane

433
00:19:42,788 --> 00:19:50,500
there's not a lot of of oddity to it

434
00:19:45,759 --> 00:19:53,230
there but if we remain at with disks

435
00:19:50,500 --> 00:19:54,579
that may be more difficult and the

436
00:19:53,230 --> 00:19:56,528
reason that it would be more difficult

437
00:19:54,579 --> 00:19:59,319
remaining with disks is because a lot of

438
00:19:56,528 --> 00:20:02,740
the things here like for walls and such

439
00:19:59,319 --> 00:20:05,918
are not really capable of stretching in

440
00:20:02,740 --> 00:20:08,378
both directions symmetrically like that

441
00:20:05,919 --> 00:20:13,990
if you imagine for example trying to fit

442
00:20:08,378 --> 00:20:16,058
a disc to this these blue wall here

443
00:20:13,990 --> 00:20:19,089
right and I guess I can make it even

444
00:20:16,058 --> 00:20:23,168
more obvious if I go down to where is it

445
00:20:19,089 --> 00:20:30,189
that's not what I wanted no no no render

446
00:20:23,169 --> 00:20:31,899
lighting show reflectors so if I come

447
00:20:30,190 --> 00:20:34,149
here and you just kind of look at what

448
00:20:31,898 --> 00:20:35,589
we've got if you imagine trying to make

449
00:20:34,148 --> 00:20:37,719
a single reflector that encompassed

450
00:20:35,589 --> 00:20:40,269
these three you know it would have to be

451
00:20:37,720 --> 00:20:44,048
this big thing it gets a lot higher and

452
00:20:40,269 --> 00:20:48,700
a lot lower it you know it produces a

453
00:20:44,048 --> 00:20:51,700
much bigger span in Z than we ever would

454
00:20:48,700 --> 00:20:55,509
have wanted it to and so that's kind of

455
00:20:51,700 --> 00:20:57,730
an issue that we wouldn't have if we had

456
00:20:55,509 --> 00:20:58,690
something that could be eccentric you

457
00:20:57,730 --> 00:21:00,250
know we could stay

458
00:20:58,690 --> 00:21:02,410
this they would just have to be ellipses

459
00:21:00,250 --> 00:21:04,029
but it seems like at some point you just

460
00:21:02,410 --> 00:21:07,570
have to ask yourself well if you're

461
00:21:04,029 --> 00:21:14,710
going to be starting with mostly quads

462
00:21:07,569 --> 00:21:17,950
why not stay with quads which is a very

463
00:21:14,710 --> 00:21:20,440
reasonable thing to say and it's also

464
00:21:17,950 --> 00:21:27,549
worth noting that quads are pretty easy

465
00:21:20,440 --> 00:21:30,009
to quickly test for it's not that hard

466
00:21:27,549 --> 00:21:33,669
to do Ranger sections with quads it's

467
00:21:30,009 --> 00:21:36,129
just three three or four edge tests for

468
00:21:33,670 --> 00:21:38,289
triangles or quads right once you find a

469
00:21:36,130 --> 00:21:40,900
point in the plane you can then see

470
00:21:38,289 --> 00:21:43,389
whether or not you're inside the edges

471
00:21:40,900 --> 00:21:45,850
of the quad with just a few edge sets

472
00:21:43,390 --> 00:21:47,110
like you would normally do now one of

473
00:21:45,849 --> 00:21:48,669
the interesting things about that is

474
00:21:47,109 --> 00:21:50,289
there's also a lot of ways that people

475
00:21:48,670 --> 00:21:55,289
have found to accelerate those sorts of

476
00:21:50,289 --> 00:21:58,329
things there are actually ways of doing

477
00:21:55,289 --> 00:22:01,389
faster testing than testing the point

478
00:21:58,329 --> 00:22:04,149
you know actually doing the full point

479
00:22:01,390 --> 00:22:08,770
test in that way but I guess what I

480
00:22:04,150 --> 00:22:10,210
would say is you know we don't probably

481
00:22:08,769 --> 00:22:12,460
have to care too much about that stuff

482
00:22:10,210 --> 00:22:14,079
at the moment so we can just treat it

483
00:22:12,460 --> 00:22:18,700
like we would be treating any other sort

484
00:22:14,079 --> 00:22:21,159
of point in quad kind of scenario so I

485
00:22:18,700 --> 00:22:23,410
think that's everything I have to say

486
00:22:21,160 --> 00:22:26,340
about that and so what I would like to

487
00:22:23,410 --> 00:22:29,650
do is maybe go all right

488
00:22:26,339 --> 00:22:32,829
let's try to think of a structure that

489
00:22:29,650 --> 00:22:35,259
we can use to do some ray casting that

490
00:22:32,829 --> 00:22:38,349
will be multi-resolution

491
00:22:35,259 --> 00:22:42,279
and I don't really know exactly how we

492
00:22:38,349 --> 00:22:44,889
want to structure that hierarchy but I

493
00:22:42,279 --> 00:22:49,599
guess what I would say is I probably

494
00:22:44,890 --> 00:22:51,730
want something where I at least have two

495
00:22:49,599 --> 00:22:55,629
discrete levels of detail I don't know

496
00:22:51,730 --> 00:22:57,400
if we need three but I'm thinking of a

497
00:22:55,630 --> 00:23:00,580
very straightforward and relatively

498
00:22:57,400 --> 00:23:03,009
simple system here where if you imagine

499
00:23:00,579 --> 00:23:09,579
that the world you know is in some kind

500
00:23:03,009 --> 00:23:10,690
of a gridded layout which we've already

501
00:23:09,579 --> 00:23:12,039
thought we're going to need for other

502
00:23:10,690 --> 00:23:12,610
things anyway so a lot of this stuff

503
00:23:12,039 --> 00:23:15,839
maybe event

504
00:23:12,609 --> 00:23:18,039
it can be collapsed into one sort of

505
00:23:15,839 --> 00:23:20,919
spatial structure for a lot of different

506
00:23:18,039 --> 00:23:23,048
purposes if we're lucky who knows but if

507
00:23:20,920 --> 00:23:25,900
we take a look at the world and we say

508
00:23:23,048 --> 00:23:29,529
well okay you know maybe if a reflector

509
00:23:25,900 --> 00:23:32,640
is going to be evaluated it evaluates

510
00:23:29,529 --> 00:23:37,149
like its local neighborhood of four

511
00:23:32,640 --> 00:23:39,730
regions using actually the real

512
00:23:37,150 --> 00:23:42,970
reflectors that are there and then it

513
00:23:39,730 --> 00:23:47,140
evaluates the rest of the region right

514
00:23:42,970 --> 00:23:52,360
the rest of the world using the higher

515
00:23:47,140 --> 00:23:56,520
resolution reflectors right and if we

516
00:23:52,359 --> 00:23:56,519
were going to do that then you know we

517
00:23:57,869 --> 00:24:02,918
there are still issues that we have to

518
00:24:00,609 --> 00:24:04,418
address if we do something that way so

519
00:24:02,919 --> 00:24:06,759
it may be that that's not necessarily

520
00:24:04,419 --> 00:24:07,870
the best way to do it check now that I

521
00:24:06,759 --> 00:24:16,929
think about that's probably not a great

522
00:24:07,869 --> 00:24:18,849
way to do it now I think about the

523
00:24:16,929 --> 00:24:20,140
reason that's not such a good way if you

524
00:24:18,849 --> 00:24:22,539
think about it's going to happen here if

525
00:24:20,140 --> 00:24:24,790
we start to create larger aggregate

526
00:24:22,539 --> 00:24:26,109
occluders those occluders will perhaps

527
00:24:24,789 --> 00:24:28,298
encompass some of the things we've

528
00:24:26,109 --> 00:24:29,918
already checked and then we'll sort of

529
00:24:28,298 --> 00:24:31,599
be double counting them in these weird

530
00:24:29,919 --> 00:24:34,450
ways so I don't know that might not be

531
00:24:31,599 --> 00:24:36,939
so good so it might be better to just

532
00:24:34,450 --> 00:24:39,640
build aggregate build them in sort of a

533
00:24:36,940 --> 00:24:41,080
more tree fashion kind of like the the

534
00:24:39,640 --> 00:24:42,910
paper that we looked at initially was

535
00:24:41,079 --> 00:24:50,079
sort of doing where it says all right

536
00:24:42,910 --> 00:24:51,669
there is one reflector right and that

537
00:24:50,079 --> 00:24:54,279
encompasses everything in the world and

538
00:24:51,669 --> 00:24:57,340
then it breaks down into you know some

539
00:24:54,279 --> 00:24:58,960
set of smaller reflectors and those

540
00:24:57,339 --> 00:25:05,289
break down to some set of smaller

541
00:24:58,960 --> 00:25:08,308
reflectors and maybe each one of these

542
00:25:05,289 --> 00:25:11,470
has a bounding box or something right

543
00:25:08,308 --> 00:25:14,798
maybe each one of these stores the

544
00:25:11,470 --> 00:25:18,039
bounds of all of the things that were

545
00:25:14,798 --> 00:25:20,200
sucked up into it right and so then what

546
00:25:18,039 --> 00:25:23,500
we do is we just start at the top and we

547
00:25:20,200 --> 00:25:26,080
say okay we've got the boundary of this

548
00:25:23,500 --> 00:25:27,940
thing we test

549
00:25:26,079 --> 00:25:30,658
me whether or not you know what's the

550
00:25:27,940 --> 00:25:34,538
how far away are we from this boundary

551
00:25:30,659 --> 00:25:37,120
right however far away we are from the

552
00:25:34,538 --> 00:25:39,788
boundary if we're far enough away we

553
00:25:37,119 --> 00:25:42,629
just use that if we're - if we're not

554
00:25:39,788 --> 00:25:50,019
far enough away we descend one level

555
00:25:42,630 --> 00:25:56,640
right that seems relatively safe to me I

556
00:25:50,019 --> 00:26:01,329
oh that seems that seems pretty good and

557
00:25:56,640 --> 00:26:03,490
I mean there's no reason that can't

558
00:26:01,329 --> 00:26:05,259
operate on the GPU relatively

559
00:26:03,490 --> 00:26:07,839
effectively there are one of the

560
00:26:05,259 --> 00:26:10,089
problems with hierarchical things on the

561
00:26:07,839 --> 00:26:13,000
GPU is that the warps get out of phase

562
00:26:10,089 --> 00:26:15,189
so for example if we're going to cast

563
00:26:13,000 --> 00:26:16,778
multiple arrays at a time or who knows

564
00:26:15,190 --> 00:26:19,360
how will actually be implemented with

565
00:26:16,778 --> 00:26:21,038
GPU or even if you're inputting a CPU

566
00:26:19,359 --> 00:26:22,750
for that matter you end up in a

567
00:26:21,038 --> 00:26:28,240
situation where you want to be able to

568
00:26:22,750 --> 00:26:31,808
cast raise together but different ones

569
00:26:28,240 --> 00:26:34,538
of those rays are coming potentially are

570
00:26:31,808 --> 00:26:35,859
going to hit different things in the

571
00:26:34,538 --> 00:26:37,210
world and be at different levels of

572
00:26:35,859 --> 00:26:39,428
resolution so you end up with different

573
00:26:37,210 --> 00:26:42,429
data structure levels that you're

574
00:26:39,429 --> 00:26:44,500
accessing which can be ugly so it's a

575
00:26:42,429 --> 00:26:48,460
little bit hard to say right now what

576
00:26:44,500 --> 00:26:50,798
degree of you know how problematic this

577
00:26:48,460 --> 00:26:53,558
is going to be for us the other thing we

578
00:26:50,798 --> 00:26:56,109
could do here is we could go again with

579
00:26:53,558 --> 00:26:58,298
a more octree like approach so the other

580
00:26:56,109 --> 00:26:59,859
option is to say let's not merge

581
00:26:58,298 --> 00:27:01,960
reflectors or think of reflectors in

582
00:26:59,859 --> 00:27:03,788
that way let's instead think of the

583
00:27:01,960 --> 00:27:07,360
world is more of a voxel if-- structure

584
00:27:03,788 --> 00:27:11,919
and again that was more if we want to do

585
00:27:07,359 --> 00:27:17,709
tracing out into the world as ways of

586
00:27:11,919 --> 00:27:21,250
sampling ways of sampling the lighting

587
00:27:17,710 --> 00:27:23,710
as a voxel right the reason that is

588
00:27:21,250 --> 00:27:25,409
useful to us is because if we assume

589
00:27:23,710 --> 00:27:27,940
that something is vocalized

590
00:27:25,409 --> 00:27:30,460
just using the top-down version here

591
00:27:27,940 --> 00:27:36,308
which would be a quadtree you can

592
00:27:30,460 --> 00:27:39,308
imagine something that looks like this

593
00:27:36,308 --> 00:27:39,970
if I am a reflector here and I'm trying

594
00:27:39,308 --> 00:27:43,660
to calculate

595
00:27:39,970 --> 00:27:46,450
my lighting is when I cast out

596
00:27:43,660 --> 00:27:50,080
like so what I can do is I can take

597
00:27:46,450 --> 00:27:53,500
samples into the octree at various

598
00:27:50,079 --> 00:27:59,649
levels and when I take those samples

599
00:27:53,500 --> 00:28:02,799
what I will find is I will get if I if I

600
00:27:59,650 --> 00:28:07,269
change the level of resolution I sample

601
00:28:02,799 --> 00:28:09,819
at as I go further out in distance then

602
00:28:07,269 --> 00:28:12,039
I will naturally sample a coarser

603
00:28:09,819 --> 00:28:14,429
lighting solution when I'm farther away

604
00:28:12,039 --> 00:28:16,659
right sampling at the the first

605
00:28:14,430 --> 00:28:18,700
subdivision level here second

606
00:28:16,660 --> 00:28:24,400
subdivision level here third here forth

607
00:28:18,700 --> 00:28:25,990
here fifth here right the problem with

608
00:28:24,400 --> 00:28:33,040
that is again I don't really know to

609
00:28:25,990 --> 00:28:34,839
what degree we can really rely on a box

610
00:28:33,039 --> 00:28:40,980
alized lighting solution for the world

611
00:28:34,839 --> 00:28:43,359
in that way it's it's pretty tricky to

612
00:28:40,980 --> 00:28:45,250
to really think through how you're going

613
00:28:43,359 --> 00:28:47,079
to make that work efficiently where is

614
00:28:45,250 --> 00:28:50,200
something that is more straightforwardly

615
00:28:47,079 --> 00:28:51,730
based on actual flat surfaces tends to

616
00:28:50,200 --> 00:28:53,799
admit itself a little more cleanly to

617
00:28:51,730 --> 00:28:56,799
doing sort of radiosity solutions like

618
00:28:53,799 --> 00:28:58,690
this so I don't know about that

619
00:28:56,799 --> 00:29:01,450
but this seems like a reasonable thing

620
00:28:58,690 --> 00:29:03,340
to do so if we wanted to be able to do

621
00:29:01,450 --> 00:29:09,160
that all we really have to do at that

622
00:29:03,339 --> 00:29:11,740
point is have a way of collapsing these

623
00:29:09,160 --> 00:29:14,200
things up into some kind of uniform

624
00:29:11,740 --> 00:29:17,140
structure now one of the things that

625
00:29:14,200 --> 00:29:18,580
we're suffering from at the moment and

626
00:29:17,140 --> 00:29:19,900
something that I would like to fix and

627
00:29:18,579 --> 00:29:21,939
probably the first thing we'll do today

628
00:29:19,900 --> 00:29:22,900
or perhaps the only thing we'll do today

629
00:29:21,940 --> 00:29:24,519
I don't know how much time we'll have

630
00:29:22,900 --> 00:29:26,650
we're sort once you have an hour and a

631
00:29:24,519 --> 00:29:29,410
half one of the things I'd like to do

632
00:29:26,650 --> 00:29:32,350
today is fix a problem that we have been

633
00:29:29,410 --> 00:29:36,220
having and that is that if you take a

634
00:29:32,349 --> 00:29:37,299
look at this for example if you know

635
00:29:36,220 --> 00:29:39,910
we're still running this lighting

636
00:29:37,299 --> 00:29:41,200
solution in real time but it's not a

637
00:29:39,910 --> 00:29:42,970
real time letting solution right now

638
00:29:41,200 --> 00:29:44,470
right it's getting a hundred and thirty

639
00:29:42,970 --> 00:29:49,750
frames a second or something like this

640
00:29:44,470 --> 00:29:51,519
right that's just not usable and it's

641
00:29:49,750 --> 00:29:53,440
preventing us from trying things that

642
00:29:51,519 --> 00:29:55,950
might be even more expensive

643
00:29:53,440 --> 00:29:59,710
because it just wouldn't even run right

644
00:29:55,950 --> 00:30:01,690
so what I need to be able to do or what

645
00:29:59,710 --> 00:30:03,430
I would like to be able to do is I'd

646
00:30:01,690 --> 00:30:04,900
like to be able to turn this into what

647
00:30:03,430 --> 00:30:06,910
is essentially an offline learning

648
00:30:04,900 --> 00:30:09,550
solution meaning I would like to be able

649
00:30:06,910 --> 00:30:10,990
to just you know kit a key run the

650
00:30:09,549 --> 00:30:13,210
length solution if that letting solution

651
00:30:10,990 --> 00:30:17,349
takes 30 seconds that's fine it then

652
00:30:13,210 --> 00:30:19,870
saves that lighting solution and allows

653
00:30:17,349 --> 00:30:22,149
us to inspect it the reason I want to do

654
00:30:19,869 --> 00:30:25,750
that is because I don't want to keep

655
00:30:22,150 --> 00:30:27,790
fighting the time budget to get

656
00:30:25,750 --> 00:30:29,410
something usable because what we're

657
00:30:27,789 --> 00:30:31,539
trying to do here is experiment and

658
00:30:29,410 --> 00:30:34,360
maybe I want to see what happens if we

659
00:30:31,539 --> 00:30:36,220
cast out an absurd number of rays but

660
00:30:34,359 --> 00:30:38,529
for example if I want to do that right

661
00:30:36,220 --> 00:30:41,380
now and this will be hopefully a good

662
00:30:38,529 --> 00:30:43,720
motivating example if I want to do that

663
00:30:41,380 --> 00:30:51,070
right now I don't remember where

664
00:30:43,720 --> 00:30:54,100
lighting test is there it is we know how

665
00:30:51,069 --> 00:30:56,129
many of these Ray's samples were we're

666
00:30:54,099 --> 00:31:01,419
sending out here right we've got that

667
00:30:56,130 --> 00:31:03,820
where is that here here it is right we

668
00:31:01,420 --> 00:31:06,670
said we've got that here we cast up 16

669
00:31:03,819 --> 00:31:08,740
rays let's say I wanted to cast that 64

670
00:31:06,670 --> 00:31:10,360
Ray's just to see how much better the

671
00:31:08,740 --> 00:31:12,609
lighting solution would get or what the

672
00:31:10,359 --> 00:31:15,699
result would be of the lighting solution

673
00:31:12,609 --> 00:31:18,939
right well it's almost impossible to use

674
00:31:15,700 --> 00:31:21,400
right it's so slow at that point and

675
00:31:18,940 --> 00:31:23,140
then if I keep going further to the

676
00:31:21,400 --> 00:31:27,160
thing that I said originally which is

677
00:31:23,140 --> 00:31:29,920
256 rays it gets pretty much completely

678
00:31:27,160 --> 00:31:37,240
unworkable and it's just you know it's

679
00:31:29,920 --> 00:31:39,700
just not usable right I mean look the

680
00:31:37,240 --> 00:31:42,180
thing doesn't even get like two frames

681
00:31:39,700 --> 00:31:42,180
into it

682
00:31:45,819 --> 00:31:50,439
so I think what we want to do is

683
00:31:48,140 --> 00:31:52,520
something very different than this right

684
00:31:50,440 --> 00:31:54,350
what we want to do is something that

685
00:31:52,519 --> 00:31:56,569
allows us to run this lighting solution

686
00:31:54,349 --> 00:31:58,490
and it doesn't matter if it takes 5

687
00:31:56,569 --> 00:32:00,799
seconds 10 seconds 30 seconds it doesn't

688
00:31:58,490 --> 00:32:02,779
matter it will then just cache the

689
00:32:00,799 --> 00:32:03,649
lighting solution and show it for us

690
00:32:02,779 --> 00:32:07,299
later

691
00:32:03,650 --> 00:32:09,740
right that's what I want to actually do

692
00:32:07,299 --> 00:32:11,058
so what I'd like to do yeah like I said

693
00:32:09,740 --> 00:32:13,400
is figure out a way to make that work

694
00:32:11,058 --> 00:32:16,579
and I think we can figure out a way to

695
00:32:13,400 --> 00:32:18,679
make that work because you know as just

696
00:32:16,579 --> 00:32:22,039
a simple test thing that's inserted in

697
00:32:18,679 --> 00:32:23,300
here we should be able to cache what we

698
00:32:22,039 --> 00:32:26,119
were going to output as the lighting

699
00:32:23,299 --> 00:32:28,519
solution and output it on top of

700
00:32:26,119 --> 00:32:33,558
whatever was going to happen for so

701
00:32:28,519 --> 00:32:42,440
something like you know if we compute

702
00:32:33,558 --> 00:32:45,319
lighting then you do this and then

703
00:32:42,440 --> 00:32:49,429
another if here which is like display

704
00:32:45,319 --> 00:32:51,769
lighting and we would put in whatever

705
00:32:49,429 --> 00:32:54,110
the code is that we need to put in here

706
00:32:51,769 --> 00:32:55,700
and what I want to do is just take this

707
00:32:54,109 --> 00:33:04,359
platform stuff that we're sending down

708
00:32:55,700 --> 00:33:04,360
for video let's see here

709
00:33:06,750 --> 00:33:14,369
here we go we know we've got this game

710
00:33:11,609 --> 00:33:17,069
render commands struct and we know that

711
00:33:14,369 --> 00:33:20,279
we could save the contents of it and put

712
00:33:17,069 --> 00:33:23,279
them back in later right so if we wanted

713
00:33:20,279 --> 00:33:25,649
to we could create a place for saving

714
00:33:23,279 --> 00:33:36,839
this stuff and then we could go ahead

715
00:33:25,650 --> 00:33:39,950
and push it forward so I think all I

716
00:33:36,839 --> 00:33:42,629
would have to do and again this when we

717
00:33:39,950 --> 00:33:45,660
get the render group here we are capable

718
00:33:42,630 --> 00:33:52,160
of extracting this information so for

719
00:33:45,660 --> 00:33:52,160
example if we just keep this out here

720
00:33:53,960 --> 00:34:03,600
well actually you know what now I think

721
00:33:56,039 --> 00:34:06,299
about - I guess I don't even really want

722
00:34:03,599 --> 00:34:16,648
to do that I guess I can do this sort of

723
00:34:06,299 --> 00:34:21,869
as something that well trying to think

724
00:34:16,648 --> 00:34:23,940
of how I want to do this you know I

725
00:34:21,869 --> 00:34:26,429
think it I think is even easier is to

726
00:34:23,940 --> 00:34:28,139
not even bother doing quite that much

727
00:34:26,429 --> 00:34:30,179
work now I think about it

728
00:34:28,139 --> 00:34:32,519
all we really have to do is we were

729
00:34:30,179 --> 00:34:35,610
already copying the lighting out into

730
00:34:32,519 --> 00:34:37,949
this push buffer why don't we just not

731
00:34:35,610 --> 00:34:40,500
do that and instead why don't we just

732
00:34:37,949 --> 00:34:41,878
save these lighting elements then what

733
00:34:40,500 --> 00:34:43,648
we can do is instead of actually

734
00:34:41,878 --> 00:34:45,389
rendering the world we'll just render

735
00:34:43,648 --> 00:34:48,269
the lighting elements and we'll just

736
00:34:45,389 --> 00:34:50,940
make that be an option that seems a lot

737
00:34:48,269 --> 00:34:54,780
more straightforward and doesn't require

738
00:34:50,940 --> 00:34:57,480
us to do any of that other work so yeah

739
00:34:54,780 --> 00:34:59,010
that seems easier so let me just go

740
00:34:57,480 --> 00:35:03,510
ahead and put the lighting elements in

741
00:34:59,010 --> 00:35:05,100
here for now and we'll just make a thing

742
00:35:03,510 --> 00:35:08,120
called lighting solution that happens to

743
00:35:05,099 --> 00:35:13,289
have all these lighting elements in it

744
00:35:08,119 --> 00:35:14,849
like so and I guess since we are going

745
00:35:13,289 --> 00:35:17,509
to be dynamically allocating this in

746
00:35:14,849 --> 00:35:19,650
general I suppose we could also make it

747
00:35:17,510 --> 00:35:20,470
so that this lighting elements things

748
00:35:19,650 --> 00:35:21,460
well

749
00:35:20,469 --> 00:35:27,368
actually I guess we don't even you do

750
00:35:21,460 --> 00:35:28,990
that doesn't matter so what I could

751
00:35:27,369 --> 00:35:33,400
probably say is all right let's take

752
00:35:28,989 --> 00:35:36,429
lighting elements elements to a solution

753
00:35:33,400 --> 00:35:39,730
elements and we know we're going to have

754
00:35:36,429 --> 00:35:41,199
as many elements as there are quads so

755
00:35:39,730 --> 00:36:03,519
I'm just going to store that value in

756
00:35:41,199 --> 00:36:06,989
here something like this and so what

757
00:36:03,519 --> 00:36:10,659
this will do now is this will basically

758
00:36:06,989 --> 00:36:15,029
this will basically store the lighting

759
00:36:10,659 --> 00:36:17,949
test into a you know a permanent buffer

760
00:36:15,030 --> 00:36:20,080
and then what we can do is only we only

761
00:36:17,949 --> 00:36:24,309
have to run that lighting test when we

762
00:36:20,079 --> 00:36:29,289
actually want to recompute it so for

763
00:36:24,309 --> 00:36:31,570
example right here we can call if

764
00:36:29,289 --> 00:36:34,239
lighting test and then here we can do

765
00:36:31,570 --> 00:36:36,580
another thing where we do an if as to

766
00:36:34,239 --> 00:36:39,338
whether or not we want to output it in

767
00:36:36,579 --> 00:36:41,559
that outputting then where we do copy

768
00:36:39,338 --> 00:36:44,079
lighting out here that can become a

769
00:36:41,559 --> 00:36:47,199
separate function that does not have to

770
00:36:44,079 --> 00:36:48,759
include computing the lighting so

771
00:36:47,199 --> 00:36:53,009
outputting the lighting in computing the

772
00:36:48,760 --> 00:36:53,010
lighting can be totally different right

773
00:37:00,420 --> 00:37:05,619
so then what I would want to do is I'd

774
00:37:03,039 --> 00:37:10,199
want to say all right this whole

775
00:37:05,619 --> 00:37:13,750
situation here where we're doing

776
00:37:10,199 --> 00:37:17,710
simulation and any of these other sorts

777
00:37:13,750 --> 00:37:21,219
of things right that should all pretty

778
00:37:17,710 --> 00:37:26,829
much just be predicated on whether we

779
00:37:21,219 --> 00:37:32,019
actually want to yeah like we whether we

780
00:37:26,829 --> 00:37:34,179
actually want to do any new work and

781
00:37:32,019 --> 00:37:35,800
instead what we would do is

782
00:37:34,179 --> 00:37:38,769
we didn't want to do any of that new

783
00:37:35,800 --> 00:37:51,700
work is we would do the output lighting

784
00:37:38,769 --> 00:37:53,829
instead so something like this so that

785
00:37:51,699 --> 00:37:56,289
way we can have like a key or something

786
00:37:53,829 --> 00:37:58,179
that we push it will then you know

787
00:37:56,289 --> 00:38:01,389
recompute the lighting based on whether

788
00:37:58,179 --> 00:38:03,759
or not you press that key and then the

789
00:38:01,389 --> 00:38:05,440
output lighting will be a state that we

790
00:38:03,760 --> 00:38:11,190
can put ourselves in where we're just

791
00:38:05,440 --> 00:38:14,470
viewing the lighting and off we go I

792
00:38:11,190 --> 00:38:21,059
think that's pretty good so what we need

793
00:38:14,469 --> 00:38:23,469
to do here is we want to essentially

794
00:38:21,059 --> 00:38:26,219
transform you know what we were doing

795
00:38:23,469 --> 00:38:31,509
before is sort of hijacking the quads

796
00:38:26,219 --> 00:38:33,189
and putting those in there so you know

797
00:38:31,510 --> 00:38:37,900
we were we were taking the quads that we

798
00:38:33,190 --> 00:38:40,599
had before and we were going to write

799
00:38:37,900 --> 00:38:46,690
the lighting on top of them we pretty

800
00:38:40,599 --> 00:38:49,900
much want to step back from that and we

801
00:38:46,690 --> 00:38:55,000
want to be able to make something here

802
00:38:49,900 --> 00:38:57,369
which we may want to save enough

803
00:38:55,000 --> 00:39:00,460
information to reconstruct the full

804
00:38:57,369 --> 00:39:03,250
state of the quads as well and I mean

805
00:39:00,460 --> 00:39:04,720
that's and that's not too hard to do but

806
00:39:03,250 --> 00:39:06,699
we want something here which will

807
00:39:04,719 --> 00:39:09,069
recreate them from whole cloth basically

808
00:39:06,699 --> 00:39:12,759
so you know it's going to be something

809
00:39:09,070 --> 00:39:15,010
that's just doing push quads and writing

810
00:39:12,760 --> 00:39:20,350
out those quads directly so in the

811
00:39:15,010 --> 00:39:23,500
render group we're going to want to

812
00:39:20,349 --> 00:39:26,469
essentially do this I think where we

813
00:39:23,500 --> 00:39:30,940
just call this directly and we do the

814
00:39:26,469 --> 00:39:34,439
push quad for each one of our lighting

815
00:39:30,940 --> 00:39:37,579
elements right

816
00:39:34,440 --> 00:39:37,579
[Music]

817
00:39:41,440 --> 00:40:04,220
so really at this point we want to loop

818
00:39:49,639 --> 00:40:18,920
over our elements and we want to get

819
00:40:04,219 --> 00:40:20,539
each one of these elements in turn for

820
00:40:18,920 --> 00:40:24,789
each of those elements we're going to

821
00:40:20,539 --> 00:40:24,789
want to do a push quad for the element

822
00:40:26,409 --> 00:40:31,759
and what you can see here is we don't

823
00:40:29,358 --> 00:40:33,920
store in the element right now enough to

824
00:40:31,760 --> 00:40:38,059
reconstruct exactly what the thing was

825
00:40:33,920 --> 00:40:41,599
that came in and that is not necessarily

826
00:40:38,059 --> 00:40:45,890
a problem because if we only wanted to

827
00:40:41,599 --> 00:40:47,329
show just the lighting itself then we

828
00:40:45,889 --> 00:40:50,118
wouldn't have a problem but if we want

829
00:40:47,329 --> 00:40:51,530
to see the lighting on target meaning

830
00:40:50,119 --> 00:40:53,329
with the bitmaps and everything else

831
00:40:51,530 --> 00:40:55,730
we're going to need to have that as well

832
00:40:53,329 --> 00:41:07,880
so we want to do is store those things

833
00:40:55,730 --> 00:41:10,298
down here I think in addition something

834
00:41:07,880 --> 00:41:10,298
like this

835
00:41:19,559 --> 00:41:26,469
and then what we want here four colors

836
00:41:22,869 --> 00:41:28,479
we probably have most of these already

837
00:41:26,469 --> 00:41:30,849
created the emission we don't care about

838
00:41:28,478 --> 00:41:32,259
because emission is not currently used

839
00:41:30,849 --> 00:41:34,838
by the render it's only used by the

840
00:41:32,259 --> 00:41:37,119
lighting solution so obviously we don't

841
00:41:34,838 --> 00:41:40,650
need to worry about that right now

842
00:41:37,119 --> 00:41:40,650
however the

843
00:41:51,530 --> 00:41:56,030
so this is what our lighting would

844
00:41:53,690 --> 00:41:59,690
actually be course I really kind of want

845
00:41:56,030 --> 00:42:02,630
both of these things so I suppose we're

846
00:41:59,690 --> 00:42:08,389
probably going to need to keep most of

847
00:42:02,630 --> 00:42:12,200
this right so really this stuff probably

848
00:42:08,389 --> 00:42:21,460
just wants to stay in place for the most

849
00:42:12,199 --> 00:42:21,460
part it's and this can kind of go away

850
00:42:22,869 --> 00:42:33,109
all right let's get to the other I don't

851
00:42:29,809 --> 00:42:35,690
want to have my head in the way so if I

852
00:42:33,110 --> 00:42:38,539
take a look at what's going on I know

853
00:42:35,690 --> 00:42:40,820
that I want to do this this push here I

854
00:42:38,539 --> 00:42:42,380
know that we can get the bitmap out of

855
00:42:40,820 --> 00:42:45,890
the element because we're going to store

856
00:42:42,380 --> 00:42:48,590
that I know the UVs we can preserve so

857
00:42:45,889 --> 00:42:52,609
then the real question is how do I

858
00:42:48,590 --> 00:42:54,559
produce the rest of these things we

859
00:42:52,610 --> 00:42:57,320
already have code that we wrote before

860
00:42:54,559 --> 00:42:59,329
that essentially does that and so what I

861
00:42:57,320 --> 00:43:04,370
want to do here is I want to just

862
00:42:59,329 --> 00:43:08,289
convert to actually using that so yeah

863
00:43:04,369 --> 00:43:10,849
we basically got we've got two different

864
00:43:08,289 --> 00:43:14,349
ways we could be grabbing say the

865
00:43:10,849 --> 00:43:17,239
positional data so I'm going to store

866
00:43:14,349 --> 00:43:21,880
again basically the entire information

867
00:43:17,239 --> 00:43:21,879
about the quad here that makes sense

868
00:43:22,960 --> 00:43:30,769
in fact now I think about it why don't I

869
00:43:26,030 --> 00:43:36,110
just save the quad itself it's a very

870
00:43:30,769 --> 00:43:39,170
good question and I don't know but for

871
00:43:36,110 --> 00:43:42,349
example write this this textured vertex

872
00:43:39,170 --> 00:43:46,039
why don't I just save those exactly as

873
00:43:42,349 --> 00:43:47,869
they were and I don't know because that

874
00:43:46,039 --> 00:43:51,849
does seem like that would save me the

875
00:43:47,869 --> 00:43:51,849
trouble so let's just do this

876
00:43:53,800 --> 00:44:00,890
that seems a little more sane alright so

877
00:43:58,699 --> 00:44:03,399
from there we can you know like I said

878
00:44:00,889 --> 00:44:07,670
we've got a bunch of options here but

879
00:44:03,400 --> 00:44:10,610
essentially what we need to do is be

880
00:44:07,670 --> 00:44:12,409
pushing quad on which will have these

881
00:44:10,610 --> 00:44:15,110
properties and we need to set these

882
00:44:12,409 --> 00:44:16,989
properties somehow now we know that

883
00:44:15,110 --> 00:44:20,769
we're not going to modify the UV ever

884
00:44:16,989 --> 00:44:24,019
the UV is going to be what the UV is so

885
00:44:20,769 --> 00:44:31,400
these generally should just look like

886
00:44:24,019 --> 00:44:35,869
this and I guess since these are always

887
00:44:31,400 --> 00:44:38,869
vert you know the vert going to get the

888
00:44:35,869 --> 00:44:41,869
referenced here I guess I don't really

889
00:44:38,869 --> 00:44:59,859
need to do it quite that way I can do it

890
00:44:41,869 --> 00:45:06,130
like this and the rest of these values

891
00:44:59,860 --> 00:45:06,130
will get set by these these code paths

892
00:45:15,789 --> 00:45:21,710
another thing I could do is call this

893
00:45:17,809 --> 00:45:26,929
the original vertices to make that more

894
00:45:21,710 --> 00:45:35,019
clear which seems nice just so nobody's

895
00:45:26,929 --> 00:45:35,019
oops so nobody's confused about that

896
00:45:35,070 --> 00:45:40,200
so all this stuff mostly works the same

897
00:45:37,409 --> 00:45:42,299
way right we're just doing the standard

898
00:45:40,199 --> 00:45:45,089
thing we're doing here I don't think any

899
00:45:42,300 --> 00:45:48,810
of this stuff really needs to change at

900
00:45:45,090 --> 00:45:51,420
all the bitmap is going to switch so I

901
00:45:48,809 --> 00:45:55,110
guess we do want to do loaded bitmap fit

902
00:45:51,420 --> 00:46:03,960
map here and we probably want to do that

903
00:45:55,110 --> 00:46:06,420
as element for a bitmap like so and then

904
00:46:03,960 --> 00:46:07,769
we'll set the bitmap differently if it

905
00:46:06,420 --> 00:46:14,760
turns out we don't want to use the

906
00:46:07,769 --> 00:46:16,530
original bitmap okay and then like I

907
00:46:14,760 --> 00:46:19,200
said in here rather than setting these

908
00:46:16,530 --> 00:46:26,010
we're going to need to store these

909
00:46:19,199 --> 00:46:36,239
somewhere as the P as the P values that

910
00:46:26,010 --> 00:46:39,960
will then get used right so here we are

911
00:46:36,239 --> 00:46:42,439
setting these then we want to set the W

912
00:46:39,960 --> 00:46:42,440
values

913
00:46:50,619 --> 00:46:59,740
I'm not sure why this quad does not take

914
00:46:55,980 --> 00:47:04,449
unnormal I guess it's because it just

915
00:46:59,739 --> 00:47:05,528
recomputes the normal so I guess we

916
00:47:04,449 --> 00:47:10,028
don't really need to worry about the

917
00:47:05,528 --> 00:47:14,259
normal yet I guess kind of a waste of

918
00:47:10,028 --> 00:47:17,440
time but whatever alright so then we get

919
00:47:14,259 --> 00:47:21,009
front emit that should all be fine and

920
00:47:17,440 --> 00:47:22,450
then when we set these colors that Alex

921
00:47:21,009 --> 00:47:43,059
front a bit so basically we just need

922
00:47:22,449 --> 00:47:50,018
our color values here so and then I need

923
00:47:43,059 --> 00:47:51,490
to actually define those up top alright

924
00:47:50,018 --> 00:47:58,959
so that's just going to look something

925
00:47:51,489 --> 00:48:05,439
like this and now we'll see where we're

926
00:47:58,960 --> 00:48:07,749
at so we need also somewhere for these

927
00:48:05,440 --> 00:48:09,369
to be stored I suppose we don't need to

928
00:48:07,748 --> 00:48:11,969
do with that just yet

929
00:48:09,369 --> 00:48:13,960
let's grab out that command structure

930
00:48:11,969 --> 00:48:16,379
because we do want to be able to get

931
00:48:13,960 --> 00:48:16,380
that bitmap

932
00:48:23,090 --> 00:48:30,030
there we go and now we really just need

933
00:48:26,070 --> 00:48:36,059
a way to drive this more sensibly so

934
00:48:30,030 --> 00:48:38,940
we've got this a game mode world here if

935
00:48:36,059 --> 00:48:50,789
we want to we can put in a lighting

936
00:48:38,940 --> 00:48:53,849
solution and we just need that learning

937
00:48:50,789 --> 00:48:56,190
solution to be defined somewhere it

938
00:48:53,849 --> 00:48:57,239
should be since it is right here well I

939
00:48:56,190 --> 00:49:07,050
guess it doesn't really matter where we

940
00:48:57,239 --> 00:49:08,819
define this but point being we need some

941
00:49:07,050 --> 00:49:12,060
way of triggering these things but once

942
00:49:08,820 --> 00:49:14,039
we do then we're fine because then we

943
00:49:12,059 --> 00:49:16,619
can just get them out of we can get the

944
00:49:14,039 --> 00:49:18,210
solution out of the world mode and we

945
00:49:16,619 --> 00:49:20,609
can do all the rest of the operations

946
00:49:18,210 --> 00:49:28,820
that we wanted to do and that gives you

947
00:49:20,610 --> 00:49:28,820
enough oops I call it test later

948
00:49:37,030 --> 00:49:44,080
so now we just need some way of setting

949
00:49:40,000 --> 00:49:46,510
these values and we kind of need like a

950
00:49:44,079 --> 00:49:50,799
debug key or something to that effect in

951
00:49:46,510 --> 00:49:52,960
order to make this work and I'll have to

952
00:49:50,800 --> 00:49:55,630
wire one of those up but other than that

953
00:49:52,960 --> 00:49:57,820
I think we're more or less okay the one

954
00:49:55,630 --> 00:49:59,980
thing we did not do that we will need to

955
00:49:57,820 --> 00:50:02,380
do is when we are extracting the

956
00:49:59,980 --> 00:50:03,490
lighting so here where we create four

957
00:50:02,380 --> 00:50:05,920
for each one of these

958
00:50:03,489 --> 00:50:08,769
we're we create one of these elements we

959
00:50:05,920 --> 00:50:12,190
need to store the original values that

960
00:50:08,769 --> 00:50:14,530
we need to reconstruct because we're

961
00:50:12,190 --> 00:50:17,980
using those now so that becomes

962
00:50:14,530 --> 00:50:29,730
important and I don't know that we

963
00:50:17,980 --> 00:50:29,730
actually here don't actually know

964
00:50:37,119 --> 00:50:48,220
don't actually know where we're storing

965
00:50:39,349 --> 00:50:48,220
that you keep on up to push quad

966
00:50:58,608 --> 00:51:01,608
yeah

967
00:51:07,369 --> 00:51:14,700
so then I'll just allow us to extract

968
00:51:10,108 --> 00:51:17,369
that bitmap array as well so when we

969
00:51:14,699 --> 00:51:20,068
loop over this and we get the bitmaps

970
00:51:17,369 --> 00:51:30,028
out we should now be able to when we

971
00:51:20,068 --> 00:51:32,489
store those maybe ELPS do that we should

972
00:51:30,028 --> 00:51:38,849
be able to keep those billet to the

973
00:51:32,489 --> 00:51:40,858
clean what is abstract we should now

974
00:51:38,849 --> 00:51:42,778
have those bitmap stored and so now all

975
00:51:40,858 --> 00:51:46,528
we need to do is is store the original

976
00:51:42,778 --> 00:51:53,159
vertices so widget you know org v-0 is

977
00:51:46,528 --> 00:51:59,369
just going to be four zero and each one

978
00:51:53,159 --> 00:52:01,409
of these will get stored and turn and I

979
00:51:59,369 --> 00:52:04,760
think that's it so now we're just down

980
00:52:01,409 --> 00:52:09,058
to how we actually want to make this run

981
00:52:04,760 --> 00:52:11,190
and you know we need some kind of switch

982
00:52:09,059 --> 00:52:12,510
that says whether we're looking at the

983
00:52:11,190 --> 00:52:15,838
lighting or whether we're looking at

984
00:52:12,510 --> 00:52:21,569
something else and so I need to add some

985
00:52:15,838 --> 00:52:25,469
debug stuff there what I feel like I

986
00:52:21,568 --> 00:52:29,159
might as well do because I can't think

987
00:52:25,469 --> 00:52:39,659
of a reason not to is maybe we'll just

988
00:52:29,159 --> 00:52:41,759
go ahead and inside our I assume this is

989
00:52:39,659 --> 00:52:45,149
inside the thing that says whether or

990
00:52:41,760 --> 00:52:46,650
not it was down before yeah what I might

991
00:52:45,150 --> 00:52:49,730
do is just go ahead and add a little

992
00:52:46,650 --> 00:52:55,588
thing here that gives me the F keys as

993
00:52:49,730 --> 00:52:57,539
debug keys or maybe just the number keys

994
00:52:55,588 --> 00:53:00,449
you know like basically like something

995
00:52:57,539 --> 00:53:01,859
that allows me to send some debug keys

996
00:53:00,449 --> 00:53:08,578
through to the application so that they

997
00:53:01,858 --> 00:53:10,880
could be used and quickly hit to trigger

998
00:53:08,579 --> 00:53:10,880
something

999
00:53:11,389 --> 00:53:16,679
so what I might do here say all right

1000
00:53:13,710 --> 00:53:20,909
let's say that I'm just looking at it

1001
00:53:16,679 --> 00:53:31,169
here and let's say that in here where

1002
00:53:20,909 --> 00:53:34,230
we've got let's see in here where we've

1003
00:53:31,170 --> 00:53:40,619
got sort of the catch-all let's go ahead

1004
00:53:34,230 --> 00:53:44,550
and say but it's a VK code it's greater

1005
00:53:40,619 --> 00:53:57,539
than equal to V KF 1 and the VK code is

1006
00:53:44,550 --> 00:53:59,869
less than or equal to v k f 12 then what

1007
00:53:57,539 --> 00:54:15,900
I'll do is I'll put into the platform

1008
00:53:59,869 --> 00:54:28,050
input something that allows us to just

1009
00:54:15,900 --> 00:54:29,700
set the input so that it knows that you

1010
00:54:28,050 --> 00:54:33,900
know some kind of special F key went

1011
00:54:29,699 --> 00:54:38,098
down right and so if I look in here

1012
00:54:33,900 --> 00:54:40,680
we're getting a game controller input

1013
00:54:38,099 --> 00:54:42,710
for the keyboard controller but we're

1014
00:54:40,679 --> 00:54:45,759
not able to do

1015
00:54:42,710 --> 00:54:45,760
[Music]

1016
00:54:51,980 --> 00:54:59,329
we're not able to do the access the F

1017
00:54:56,599 --> 00:55:02,360
key right here which is kind of annoying

1018
00:54:59,329 --> 00:55:05,750
so if I look at win32 processed ending

1019
00:55:02,360 --> 00:55:07,970
messages which happens here what I'd

1020
00:55:05,750 --> 00:55:14,780
really like to be able to do is I'd like

1021
00:55:07,969 --> 00:55:18,529
to be able to access the whole new input

1022
00:55:14,780 --> 00:55:21,350
structure right and so I'd like to be

1023
00:55:18,530 --> 00:55:37,400
able to you know pass it new input here

1024
00:55:21,349 --> 00:55:39,049
which I think shouldn't be a problem and

1025
00:55:37,400 --> 00:55:41,869
so I think all I should have to do is

1026
00:55:39,050 --> 00:55:45,940
just access off of that and we should be

1027
00:55:41,869 --> 00:56:00,309
done ok there's anything to answer to it

1028
00:55:45,940 --> 00:56:05,329
so where is that if you pressed sorry

1029
00:56:00,309 --> 00:56:08,529
and I do want that to also be cleared so

1030
00:56:05,329 --> 00:56:12,650
when we're actually doing that and doing

1031
00:56:08,530 --> 00:56:17,600
the process pending messages I do want

1032
00:56:12,650 --> 00:56:29,450
to clear those out so in here I want to

1033
00:56:17,599 --> 00:56:31,670
basically say like so once we have that

1034
00:56:29,449 --> 00:56:36,769
I think inside world mode I should be

1035
00:56:31,670 --> 00:56:38,450
able to then use that information to do

1036
00:56:36,769 --> 00:56:41,719
my own sort of toggling here or

1037
00:56:38,449 --> 00:56:46,509
processing however I want so I can do a

1038
00:56:41,719 --> 00:56:49,279
thing like show lighting like so and

1039
00:56:46,510 --> 00:56:52,880
what I probably will do here is just say

1040
00:56:49,280 --> 00:56:54,440
well if the world mode says that we're

1041
00:56:52,880 --> 00:57:00,800
going to show lighting and I guess I

1042
00:56:54,440 --> 00:57:02,269
kind of got a reverse these two then

1043
00:57:00,800 --> 00:57:08,900
we're just going to output whatever our

1044
00:57:02,269 --> 00:57:10,190
lighting solution actually was and if

1045
00:57:08,900 --> 00:57:12,530
we're going to compute a new lighting

1046
00:57:10,190 --> 00:57:16,789
test then I will say that show lighting

1047
00:57:12,530 --> 00:57:19,130
gets turned on like so the other thing I

1048
00:57:16,789 --> 00:57:24,739
want to do here is just say like okay

1049
00:57:19,130 --> 00:57:28,610
well I if we're in the mode where we're

1050
00:57:24,739 --> 00:57:33,919
showing lighting if the input F key

1051
00:57:28,610 --> 00:57:35,690
pressed let's say it's going to be a

1052
00:57:33,920 --> 00:57:37,039
little confusing I guess now I think

1053
00:57:35,690 --> 00:57:42,099
about it I probably should have made the

1054
00:57:37,039 --> 00:57:42,099
F keys line up with themselves better

1055
00:57:50,440 --> 00:58:01,119
that way we could just say oh is the f1

1056
00:57:54,980 --> 00:58:04,179
key right just makes it a little clearer

1057
00:58:01,119 --> 00:58:06,789
rather than making it quite so tortured

1058
00:58:04,179 --> 00:58:09,379
so if we want to do something like that

1059
00:58:06,789 --> 00:58:11,090
then what we can do is say well alright

1060
00:58:09,380 --> 00:58:13,730
if we're in the show lighting mode if

1061
00:58:11,090 --> 00:58:16,300
the F key was pressed then we're going

1062
00:58:13,730 --> 00:58:23,719
to get out of the shear loading mode

1063
00:58:16,300 --> 00:58:29,150
right and if we're not then the opposite

1064
00:58:23,719 --> 00:58:31,009
is true so if you press the f1 key now

1065
00:58:29,150 --> 00:58:33,079
you'll go into the show lighting mode

1066
00:58:31,010 --> 00:58:35,360
and I don't know if this will work but

1067
00:58:33,079 --> 00:58:38,429
we'll find out

1068
00:58:35,360 --> 00:58:38,429
[Music]

1069
00:58:40,639 --> 00:58:47,940
p0 ah yes I agree that that is a good

1070
00:58:47,340 --> 00:58:55,700
catch

1071
00:58:47,940 --> 00:58:55,700
I would like to initialize those here

1072
00:59:06,469 --> 00:59:14,279
alright so in theory and I guess I don't

1073
00:59:11,820 --> 00:59:19,890
know but in theory we should just start

1074
00:59:14,280 --> 00:59:21,720
off with a yeah a purely unlit world

1075
00:59:19,889 --> 00:59:25,769
which it does look like is what we're

1076
00:59:21,719 --> 00:59:28,829
doing at the moment uh because it's just

1077
00:59:25,769 --> 00:59:30,929
putting out pure colors there which i

1078
00:59:28,829 --> 00:59:33,299
think is what we should expect to see

1079
00:59:30,929 --> 00:59:35,759
with no lighting if I f1 it should

1080
00:59:33,300 --> 00:59:37,350
pause for a second which it did and then

1081
00:59:35,760 --> 00:59:40,850
go in here all right so we've got some

1082
00:59:37,349 --> 00:59:40,849
problem with our lighting output however

1083
00:59:41,960 --> 00:59:52,110
and it looks like the problem is that

1084
00:59:45,719 --> 00:59:54,689
current quads has not been started so we

1085
00:59:52,110 --> 00:59:56,640
need to start the render group here and

1086
00:59:54,690 --> 01:00:00,630
we didn't do that I guess that was our

1087
00:59:56,639 --> 01:00:03,179
problem so we're going to have to go

1088
01:00:00,630 --> 01:00:03,660
ahead yet and and I guess make sure that

1089
01:00:03,179 --> 01:00:05,609
happens

1090
01:00:03,659 --> 01:00:10,199
all right so if we want to make sure

1091
01:00:05,610 --> 01:00:12,120
that the the render group actually is

1092
01:00:10,199 --> 01:00:14,309
sort of operational at that time

1093
01:00:12,119 --> 01:00:16,849
although let me actually go back here

1094
01:00:14,309 --> 01:00:16,849
just really briefly

1095
01:00:23,519 --> 01:00:29,969
so doing actually we set up the render

1096
01:00:27,210 --> 01:00:32,159
transform do we not or do we not yeah we

1097
01:00:29,969 --> 01:00:35,009
call set camera transform so the camera

1098
01:00:32,159 --> 01:00:41,149
is set up and ready to go so I'm not

1099
01:00:35,010 --> 01:00:45,750
sure why exactly that push quad didn't

1100
01:00:41,150 --> 01:00:52,079
work but I believe we should find the

1101
01:00:45,750 --> 01:00:54,000
answer here let's take a look here so

1102
01:00:52,079 --> 01:00:58,559
I'm imagining that it's because this

1103
01:00:54,000 --> 01:01:01,920
needs to be called I take a look at get

1104
01:00:58,559 --> 01:01:06,659
current clogs yeah so it looks like we

1105
01:01:01,920 --> 01:01:11,099
need to to call get current quads first

1106
01:01:06,659 --> 01:01:17,279
before we before we do that process so

1107
01:01:11,099 --> 01:01:22,139
let me go ahead and modify output

1108
01:01:17,280 --> 01:01:27,990
lighting to do that so we know at the

1109
01:01:22,139 --> 01:01:35,089
moment so we don't need that we know at

1110
01:01:27,989 --> 01:01:39,589
the moment that we need the quad count

1111
01:01:35,090 --> 01:01:39,590
to be however many elements there are

1112
01:01:40,429 --> 01:01:46,349
right now we only create one quad for

1113
01:01:43,380 --> 01:01:52,858
element so that should be sufficient now

1114
01:01:46,349 --> 01:01:57,569
let's see what happens well that is

1115
01:01:52,858 --> 01:02:01,579
certainly amusing although not really

1116
01:01:57,570 --> 01:02:01,580
what I had in mind for honest

1117
01:02:04,889 --> 01:02:14,548
yeah not great not great how we only got

1118
01:02:11,489 --> 01:02:15,720
one of those I am Not sure but anyway at

1119
01:02:14,548 --> 01:02:17,159
least we know the process working

1120
01:02:15,719 --> 01:02:19,649
properly so now we just have to debug

1121
01:02:17,159 --> 01:02:23,818
this which hopefully will not be too

1122
01:02:19,650 --> 01:02:31,160
onerous for us so let's take a look here

1123
01:02:23,818 --> 01:02:33,538
I am out of water which is never good

1124
01:02:31,159 --> 01:02:36,298
going to have to get two things of water

1125
01:02:33,539 --> 01:02:39,720
it's hot enough here that you just need

1126
01:02:36,298 --> 01:02:41,130
you need like infinite waters so I'll

1127
01:02:39,719 --> 01:02:48,509
plan that infinite waters that's maybe

1128
01:02:41,130 --> 01:02:54,088
too much waters but yes how much time do

1129
01:02:48,509 --> 01:03:01,889
I have left I feel like I can ask this

1130
01:02:54,088 --> 01:03:03,599
bought this question okay 58 minutes so

1131
01:03:01,889 --> 01:03:06,618
this should be easily debuggable in 58

1132
01:03:03,599 --> 01:03:06,619
minutes famous last words

1133
01:03:06,739 --> 01:03:13,559
so the first question I have is why are

1134
01:03:11,190 --> 01:03:23,730
we only seeing one element

1135
01:03:13,559 --> 01:03:29,609
oh well that's an easy one the bitmap

1136
01:03:23,730 --> 01:03:31,559
looks wrong as well and I'm not sure

1137
01:03:29,608 --> 01:03:34,348
that maybe due to the fact that we're

1138
01:03:31,559 --> 01:03:37,528
not requesting that that bitmap be

1139
01:03:34,349 --> 01:03:43,579
cached so there is that but that's

1140
01:03:37,528 --> 01:03:43,579
probably a separate yeah

1141
01:03:48,869 --> 01:03:55,650
so let's maybe step in and look at the

1142
01:03:51,748 --> 01:03:59,808
bitmap part of things here and just see

1143
01:03:55,650 --> 01:04:01,979
what's going on there because that might

1144
01:03:59,809 --> 01:04:02,910
illuminate this a little bit because I

1145
01:04:01,978 --> 01:04:07,618
don't really know

1146
01:04:02,909 --> 01:04:09,179
quad bitmap stuff commands oh yeah this

1147
01:04:07,619 --> 01:04:12,410
is not right at all I thought was just

1148
01:04:09,179 --> 01:04:18,739
meat cutting and pasting stupidly uh

1149
01:04:12,409 --> 01:04:18,739
it's really that right

1150
01:04:33,469 --> 01:04:39,139
so it looks like we're not clearing out

1151
01:04:36,230 --> 01:04:41,260
that keypress properly but other than

1152
01:04:39,139 --> 01:04:46,879
that it looks like we're good to go so

1153
01:04:41,260 --> 01:04:52,510
we're almost there so let's take a quick

1154
01:04:46,880 --> 01:04:55,940
look if we're showing the lighting

1155
01:04:52,510 --> 01:05:00,550
output the lighting and if you press the

1156
01:04:55,940 --> 01:05:02,510
F key we stop showing the lighting on

1157
01:05:00,550 --> 01:05:04,940
the other hand when you come through

1158
01:05:02,510 --> 01:05:07,130
here if the F key was pressed you do the

1159
01:05:04,940 --> 01:05:09,349
lighting test and set your lighting to

1160
01:05:07,130 --> 01:05:20,480
true that should all be fine

1161
01:05:09,349 --> 01:05:27,530
in 32 handmade that's you pressed so I

1162
01:05:20,480 --> 01:05:30,559
think that should be clearing it hmm but

1163
01:05:27,530 --> 01:05:33,369
I'm not 100% certain let me just verify

1164
01:05:30,559 --> 01:05:33,369
this ah

1165
01:05:46,030 --> 01:05:55,530
what is input by itself ah there you go

1166
01:05:52,179 --> 01:06:00,009
well that was that problem as well good

1167
01:05:55,530 --> 01:06:02,890
so let's see how we do now so there is

1168
01:06:00,010 --> 01:06:04,840
our lighting solution computed and as

1169
01:06:02,889 --> 01:06:07,809
you can see now we're nicely able to

1170
01:06:04,840 --> 01:06:10,690
rotate around it in in real-time because

1171
01:06:07,809 --> 01:06:13,119
it essentially is caused I can unplug it

1172
01:06:10,690 --> 01:06:24,369
at any time move to a different setup

1173
01:06:13,119 --> 01:06:27,730
hit it and go right so that's much

1174
01:06:24,369 --> 01:06:30,219
better because now I am free to do

1175
01:06:27,730 --> 01:06:32,610
things which are very expensive which we

1176
01:06:30,219 --> 01:06:36,269
could not possibly do in real time as

1177
01:06:32,610 --> 01:06:40,000
tests and still I can inspect them

1178
01:06:36,269 --> 01:06:44,769
relatively well and that's pretty

1179
01:06:40,000 --> 01:06:48,789
important right so that's that's a very

1180
01:06:44,769 --> 01:06:52,650
good thing that is a plus so let's go

1181
01:06:48,789 --> 01:06:56,679
ahead and and you can see kind of I'm

1182
01:06:52,650 --> 01:06:59,880
already a little bit miffed here you can

1183
01:06:56,679 --> 01:07:04,569
kind of see like we just have a lot of

1184
01:06:59,880 --> 01:07:07,930
bad we just have a lot of erroneous

1185
01:07:04,570 --> 01:07:11,050
thing is happening which I think will be

1186
01:07:07,929 --> 01:07:15,279
nice to kind of start to work on like

1187
01:07:11,050 --> 01:07:18,390
you know why is this square completely

1188
01:07:15,280 --> 01:07:18,390
dark right

1189
01:07:24,920 --> 01:07:28,990
and why are these not bright blue

1190
01:07:41,679 --> 01:07:49,059
is that just a bug in how they're

1191
01:07:45,280 --> 01:07:50,560
getting copied out or something that

1192
01:07:49,059 --> 01:07:52,590
really doesn't make very much sense does

1193
01:07:50,559 --> 01:07:52,590
it

1194
01:08:13,739 --> 01:08:16,670
it's pretty interesting

1195
01:08:20,350 --> 01:08:26,170
so anyway I think that's roughly correct

1196
01:08:23,279 --> 01:08:29,470
but again I'm not sure if we introduced

1197
01:08:26,170 --> 01:08:31,690
any bugs in the copy out because

1198
01:08:29,470 --> 01:08:33,338
sometimes can be hard to tell especially

1199
01:08:31,689 --> 01:08:35,349
when we don't have a working lighting

1200
01:08:33,338 --> 01:08:36,970
solution yet we don't necessarily know

1201
01:08:35,350 --> 01:08:38,350
if we ruin something or if we're just

1202
01:08:36,970 --> 01:08:40,750
seeing artifacts of our previous

1203
01:08:38,350 --> 01:08:43,420
lighting solution one thing I can do

1204
01:08:40,750 --> 01:08:45,640
here is I could just go ahead and set

1205
01:08:43,420 --> 01:08:50,289
all of the lighting equal to one to make

1206
01:08:45,640 --> 01:08:51,460
sure that it's actually working so for

1207
01:08:50,289 --> 01:08:55,539
example here when we're doing compute

1208
01:08:51,460 --> 01:08:58,180
lighting and we go through this this

1209
01:08:55,539 --> 01:09:01,088
process what I could do instead is you

1210
01:08:58,180 --> 01:09:04,560
know just set front m8c equal to one

1211
01:09:01,088 --> 01:09:04,559
right I could just say

1212
01:09:18,929 --> 01:09:20,989
you

1213
01:09:23,969 --> 01:09:29,130
so now when I hit f1 I should see

1214
01:09:25,798 --> 01:09:31,859
essentially the same screen right and I

1215
01:09:29,130 --> 01:09:36,560
do so that's good and that's just my way

1216
01:09:31,859 --> 01:09:41,279
of trying to ensure that I don't have a

1217
01:09:36,560 --> 01:09:44,069
bug in the copy out and copy back and so

1218
01:09:41,279 --> 01:09:46,350
at least that part I know is working

1219
01:09:44,069 --> 01:09:48,210
properly and so there may still be some

1220
01:09:46,350 --> 01:09:55,969
bugs in the other parts of it but at

1221
01:09:48,210 --> 01:09:58,170
least that part is somewhat saying okay

1222
01:09:55,969 --> 01:10:03,899
what I really need right now is some

1223
01:09:58,170 --> 01:10:05,190
water I should probably get some so in

1224
01:10:03,899 --> 01:10:07,759
fact you know I think I will get some

1225
01:10:05,189 --> 01:10:07,759
I'll be right back

1226
01:10:51,460 --> 01:10:54,639
all right

1227
01:11:08,359 --> 01:11:16,489
so we've got output lighting here and

1228
01:11:13,369 --> 01:11:19,069
now we can start to look at this just to

1229
01:11:16,489 --> 01:11:21,289
make sure that there's nothing strange

1230
01:11:19,069 --> 01:11:27,889
going on I don't think there is it looks

1231
01:11:21,289 --> 01:11:30,340
relatively fine and yeah so I suspect I

1232
01:11:27,890 --> 01:11:34,550
suspect that we mostly have a problem

1233
01:11:30,340 --> 01:11:37,340
with our lighting and we probably you

1234
01:11:34,550 --> 01:11:45,829
know and let me say that let's say I go

1235
01:11:37,340 --> 01:11:48,920
ahead and switch it to a Trey's yeah so

1236
01:11:45,829 --> 01:11:53,090
I think we just have some bugs in our in

1237
01:11:48,920 --> 01:11:54,529
our lighting there as we expected

1238
01:11:53,090 --> 01:11:56,659
because it doesn't show any of those

1239
01:11:54,529 --> 01:11:57,829
bugs when we do less rays so it's

1240
01:11:56,659 --> 01:12:00,199
probably just doing something stupid

1241
01:11:57,829 --> 01:12:04,670
like accumulating and not averaging or

1242
01:12:00,199 --> 01:12:06,720
something like this in fact how does

1243
01:12:04,670 --> 01:12:10,048
that work right now

1244
01:12:06,720 --> 01:12:10,048
[Music]

1245
01:12:14,658 --> 01:12:28,399
for each ray we take the hit and we see

1246
01:12:22,198 --> 01:12:28,399
whether we have hit or not and then we

1247
01:12:29,929 --> 01:12:33,380
accumulate that in

1248
01:12:42,109 --> 01:12:48,989
yeah so this doesn't really yeah so we

1249
01:12:47,430 --> 01:12:51,690
have a lot of work to do here because

1250
01:12:48,989 --> 01:12:53,279
this is this this is a problem when you

1251
01:12:51,689 --> 01:12:56,009
just do lighting in little like two-hour

1252
01:12:53,279 --> 01:13:00,630
chunks right the lighting is a very

1253
01:12:56,010 --> 01:13:06,480
complicated thing and this is just kind

1254
01:13:00,630 --> 01:13:08,520
of a mess as we've just been trying

1255
01:13:06,479 --> 01:13:11,879
things we don't have enough time to

1256
01:13:08,520 --> 01:13:14,550
really write out full stuff so what you

1257
01:13:11,880 --> 01:13:16,440
can see here as well is we're not really

1258
01:13:14,550 --> 01:13:20,210
we don't really have any kind of

1259
01:13:16,439 --> 01:13:23,159
sensible idea of how we're actually

1260
01:13:20,210 --> 01:13:26,039
transmitting this light we get a bunch

1261
01:13:23,159 --> 01:13:32,970
of light in here and we accumulate the

1262
01:13:26,039 --> 01:13:35,760
light each time through we multiply like

1263
01:13:32,970 --> 01:13:40,730
visibility type TOC and add that in we

1264
01:13:35,760 --> 01:13:44,900
end up with a accumulation of light here

1265
01:13:40,729 --> 01:13:44,899
that as far as I can tell

1266
01:13:49,300 --> 01:13:56,800
I mean as far as I can tell this is just

1267
01:13:53,020 --> 01:14:05,580
only using one of the Rays right I mean

1268
01:13:56,800 --> 01:14:08,130
it's supposed to be that eye right there

1269
01:14:05,579 --> 01:14:11,710
we go

1270
01:14:08,130 --> 01:14:12,989
and hey our lighting solution is a lot

1271
01:14:11,710 --> 01:14:27,369
better too huh

1272
01:14:12,989 --> 01:14:28,269
as you might expect so yeah that that

1273
01:14:27,369 --> 01:14:31,689
was funny

1274
01:14:28,270 --> 01:14:34,510
not sure how no one caught that besides

1275
01:14:31,689 --> 01:14:37,419
me not that it's anyone's job to catch

1276
01:14:34,510 --> 01:14:41,560
it besides me but you know what can you

1277
01:14:37,420 --> 01:14:44,920
say so this is kind of nice at this

1278
01:14:41,560 --> 01:14:49,170
point it's actually starting to look

1279
01:14:44,920 --> 01:14:49,170
kind of nice the lighting solution there

1280
01:14:49,859 --> 01:14:54,399
now that we don't have an obvious error

1281
01:14:52,689 --> 01:14:55,899
in that you can kind of see that the

1282
01:14:54,399 --> 01:14:59,049
things are starting to propagate a

1283
01:14:55,899 --> 01:15:01,539
little more nicely but obviously we

1284
01:14:59,050 --> 01:15:03,880
still have issues some of those issues

1285
01:15:01,539 --> 01:15:05,380
are understandable and it kind of

1286
01:15:03,880 --> 01:15:07,960
suggests we're going to want to switch

1287
01:15:05,380 --> 01:15:11,949
away from discs so if you take a look at

1288
01:15:07,960 --> 01:15:18,699
these reflectors here you can kind of

1289
01:15:11,949 --> 01:15:21,609
see oh this is weird I guess our order

1290
01:15:18,699 --> 01:15:24,130
of stuff that we push on here is wrong

1291
01:15:21,609 --> 01:15:24,359
at the moment let's let's fix that shall

1292
01:15:24,130 --> 01:15:30,159
we

1293
01:15:24,359 --> 01:15:34,029
so in output lighting I'm guessing that

1294
01:15:30,159 --> 01:15:37,750
this p 0 P 1 P 2 P 3 that we were doing

1295
01:15:34,029 --> 01:15:41,019
here is is wrong now and we will want to

1296
01:15:37,750 --> 01:15:42,699
actually go in the correct winding order

1297
01:15:41,020 --> 01:15:45,790
because we're using push quad which will

1298
01:15:42,699 --> 01:15:48,069
we reorder them for us so what we want

1299
01:15:45,789 --> 01:15:51,550
to do here is say well let's start with

1300
01:15:48,069 --> 01:15:53,799
let's say if we want it to go

1301
01:15:51,550 --> 01:15:57,730
counterclockwise to start with positive

1302
01:15:53,800 --> 01:15:59,770
X we'll go to positive Y then we'll go

1303
01:15:57,729 --> 01:16:03,349
to negative x negative Y that should

1304
01:15:59,770 --> 01:16:07,250
give us a proper disc oops

1305
01:16:03,350 --> 01:16:11,510
doot go and there now we can kind of see

1306
01:16:07,250 --> 01:16:13,489
those those disks anyway what I was

1307
01:16:11,510 --> 01:16:17,960
trying to say before I had to debug that

1308
01:16:13,489 --> 01:16:19,579
minor inconvenience is the fact that

1309
01:16:17,960 --> 01:16:21,319
these reflectors don't line up with the

1310
01:16:19,579 --> 01:16:22,609
actual world is going to be more and

1311
01:16:21,319 --> 01:16:25,340
more of a problem which is why I think

1312
01:16:22,609 --> 01:16:28,039
maybe we want to just go ahead and test

1313
01:16:25,340 --> 01:16:30,440
them properly because if you look at

1314
01:16:28,039 --> 01:16:32,720
what happens here you know there's just

1315
01:16:30,439 --> 01:16:36,319
a lot of holes in the geometry as a

1316
01:16:32,720 --> 01:16:38,360
result of this and we can use a larger

1317
01:16:36,319 --> 01:16:39,469
version of the disks but then they'll be

1318
01:16:38,359 --> 01:16:42,139
over-inclusive

1319
01:16:39,470 --> 01:16:43,760
of the blocking region and you'll end up

1320
01:16:42,140 --> 01:16:45,110
with a bunch of shadows in places that

1321
01:16:43,760 --> 01:16:48,440
there shouldn't have been shadows and

1322
01:16:45,109 --> 01:16:55,789
bla bla bla bla bla so we may want to

1323
01:16:48,439 --> 01:16:57,529
kind of you know we may we may want to

1324
01:16:55,789 --> 01:17:03,519
to do something a little bit more

1325
01:16:57,529 --> 01:17:06,849
sensible there where we are consuming

1326
01:17:03,520 --> 01:17:06,850
where we are

1327
01:17:10,559 --> 01:17:15,119
where we are actually using the real

1328
01:17:13,198 --> 01:17:17,638
quad structures themselves as reflectors

1329
01:17:15,118 --> 01:17:21,029
since we have a few of them that may be

1330
01:17:17,639 --> 01:17:23,010
sufficient it will complicate our rate

1331
01:17:21,029 --> 01:17:27,029
testing obviously but otherwise would

1332
01:17:23,010 --> 01:17:29,309
probably be fine so as I look through

1333
01:17:27,029 --> 01:17:31,018
this here you can kind of see now all

1334
01:17:29,309 --> 01:17:33,958
the stuff I was complaining about before

1335
01:17:31,019 --> 01:17:37,319
not I fix that code to be a plus instead

1336
01:17:33,958 --> 01:17:38,338
of an equals you can see the stuff has

1337
01:17:37,319 --> 01:17:40,919
complained about the floor has been

1338
01:17:38,338 --> 01:17:44,269
fixed as well so I'm now getting that

1339
01:17:40,918 --> 01:17:48,059
bounce that I wanted on on ground

1340
01:17:44,269 --> 01:17:50,969
elements to a certain degree which is

1341
01:17:48,059 --> 01:17:56,279
nice like in here you get that the red

1342
01:17:50,969 --> 01:18:00,059
tinge twinges happening and things like

1343
01:17:56,279 --> 01:18:03,179
this this little yellow dude needs to go

1344
01:18:00,059 --> 01:18:04,469
there we go so like some of that bleed

1345
01:18:03,179 --> 01:18:07,050
that I was hoping for is actually

1346
01:18:04,469 --> 01:18:09,479
properly there now which is good so

1347
01:18:07,050 --> 01:18:10,800
we've got that was that was a pretty

1348
01:18:09,479 --> 01:18:14,219
stupid bug we had in there and I'm glad

1349
01:18:10,800 --> 01:18:15,510
that that's gone but again we still have

1350
01:18:14,219 --> 01:18:17,248
a ways to go before this code is

1351
01:18:15,510 --> 01:18:18,780
actually doing a reasonable lighting

1352
01:18:17,248 --> 01:18:20,219
transfer and there's a couple things

1353
01:18:18,779 --> 01:18:22,078
that we need to talk about a is the

1354
01:18:20,219 --> 01:18:24,748
multi resolution thing which I want to

1355
01:18:22,078 --> 01:18:27,658
do and now that I have the ability to do

1356
01:18:24,748 --> 01:18:29,519
it offline we can play around with

1357
01:18:27,658 --> 01:18:30,658
techniques for collapsing them but the

1358
01:18:29,519 --> 01:18:34,139
other thing that I kind of want to do

1359
01:18:30,658 --> 01:18:36,478
here is I switch from using disks are

1360
01:18:34,139 --> 01:18:44,128
using probably you know probably to

1361
01:18:36,479 --> 01:18:46,639
using quads it just seems like the right

1362
01:18:44,128 --> 01:18:46,639
thing to do

1363
01:18:50,300 --> 01:18:58,170
yeah

1364
01:18:51,869 --> 01:18:59,430
so there's so there's that and is there

1365
01:18:58,170 --> 01:19:01,699
anything else I want to look at right

1366
01:18:59,430 --> 01:19:01,699
now

1367
01:19:09,988 --> 01:19:14,598
I'm not 100% sure

1368
01:19:28,979 --> 01:19:35,519
I think that's mostly it getting the

1369
01:19:33,630 --> 01:19:37,829
actual light transport better is

1370
01:19:35,520 --> 01:19:42,030
something we'll want to do but it's

1371
01:19:37,829 --> 01:19:44,189
probably not the thing to do just yet

1372
01:19:42,029 --> 01:19:45,599
because we're still at the point where

1373
01:19:44,189 --> 01:19:49,199
we need to sort of work on how we're

1374
01:19:45,600 --> 01:19:51,060
moving that light around and so probably

1375
01:19:49,199 --> 01:19:53,760
the easiest thing to focus on right now

1376
01:19:51,060 --> 01:19:57,770
is just switching to quad and then

1377
01:19:53,760 --> 01:19:57,770
having some multi-resolution happen

1378
01:19:57,829 --> 01:20:05,939
that's my guess anyway so I think that's

1379
01:20:01,590 --> 01:20:07,860
probably what we wanted to and we can

1380
01:20:05,939 --> 01:20:11,399
give that I'm not sure which of those to

1381
01:20:07,859 --> 01:20:15,380
start with I guess probably switching to

1382
01:20:11,399 --> 01:20:19,199
quads is the most logical one because

1383
01:20:15,380 --> 01:20:21,029
before I switched a quad if I went and

1384
01:20:19,199 --> 01:20:24,179
did the both resolution stuff now we

1385
01:20:21,029 --> 01:20:26,819
would end up in a situation where we

1386
01:20:24,180 --> 01:20:28,950
built the motors up for discs and we

1387
01:20:26,819 --> 01:20:30,149
really don't want to produce anyway so

1388
01:20:28,949 --> 01:20:30,689
it seems like maybe switching that to

1389
01:20:30,149 --> 01:20:32,519
quads

1390
01:20:30,689 --> 01:20:34,759
first would be the most sensible thing

1391
01:20:32,520 --> 01:20:34,760
to do

1392
01:21:06,260 --> 01:21:13,429
all right so let's now try I'm going to

1393
01:21:08,809 --> 01:21:21,079
go try increasing the rate count as well

1394
01:21:13,429 --> 01:21:23,179
I'm just interested to see now that we

1395
01:21:21,078 --> 01:21:24,558
can do an extremely slow one I'm just

1396
01:21:23,179 --> 01:21:26,828
interested to see what the difference is

1397
01:21:24,559 --> 01:21:26,829
there

1398
01:21:34,750 --> 01:21:40,239
yeah so I think I guess this is

1399
01:21:39,069 --> 01:21:43,090
something I should probably do

1400
01:21:40,239 --> 01:21:44,500
short-term the other thing you can see

1401
01:21:43,090 --> 01:21:47,650
there this is what I thought was going

1402
01:21:44,500 --> 01:21:51,189
to happen is we don't take into account

1403
01:21:47,649 --> 01:21:55,509
how many things we are looking at for

1404
01:21:51,189 --> 01:21:58,359
inbound light so we're not really if we

1405
01:21:55,510 --> 01:22:00,789
cast more rays we get higher light

1406
01:21:58,359 --> 01:22:05,769
values right which is never the right

1407
01:22:00,789 --> 01:22:08,949
way to go so we also need to sort of

1408
01:22:05,770 --> 01:22:12,460
think about averaging how many samples

1409
01:22:08,949 --> 01:22:17,039
were taking so the number of of rays

1410
01:22:12,460 --> 01:22:21,310
cast right has to be a divisor in here

1411
01:22:17,039 --> 01:22:24,159
at the very least because if we don't

1412
01:22:21,310 --> 01:22:26,740
then we just the more rays we cast the

1413
01:22:24,159 --> 01:22:31,920
more light we get which is not a sane

1414
01:22:26,739 --> 01:22:34,090
way to perform the solution right

1415
01:22:31,920 --> 01:22:36,940
because each one of the Rays weak-ass

1416
01:22:34,090 --> 01:22:40,090
needs to basically count for a certain

1417
01:22:36,939 --> 01:22:42,669
amount of incoming light and if we don't

1418
01:22:40,090 --> 01:22:43,840
see anything in that direction like how

1419
01:22:42,670 --> 01:22:45,909
whatever light we see in that direction

1420
01:22:43,840 --> 01:22:47,590
has to be multiplied by the amount of

1421
01:22:45,909 --> 01:22:49,960
hemisphere that it's supposedly

1422
01:22:47,590 --> 01:22:54,190
representing that that ray is supposedly

1423
01:22:49,960 --> 01:23:08,170
representing and so it needs to be a

1424
01:22:54,189 --> 01:23:09,819
divisor on on the total right so yeah so

1425
01:23:08,170 --> 01:23:12,550
anyway just looking at how that would

1426
01:23:09,819 --> 01:23:16,149
work what that really means is that when

1427
01:23:12,550 --> 01:23:19,510
we come down here and we look at this

1428
01:23:16,149 --> 01:23:23,549
sort of addition here front emit see

1429
01:23:19,510 --> 01:23:27,070
global render iteration count

1430
01:23:23,550 --> 01:23:34,449
essentially what we have here is this is

1431
01:23:27,069 --> 01:23:37,170
actually the ray count times the

1432
01:23:34,449 --> 01:23:37,170
iteration count

1433
01:23:57,850 --> 01:24:04,329
and now I think if I'm not mistaken we

1434
01:24:00,729 --> 01:24:06,729
should get a solution that stable across

1435
01:24:04,329 --> 01:24:08,949
the number of race so depending on how

1436
01:24:06,729 --> 01:24:12,399
many Ray's you want to put in you can

1437
01:24:08,949 --> 01:24:15,220
get different solutions in terms of

1438
01:24:12,399 --> 01:24:18,819
perhaps quality but you will not get a

1439
01:24:15,220 --> 01:24:20,710
difference in terms of total amount of

1440
01:24:18,819 --> 01:24:27,399
light and that does seem to be the case

1441
01:24:20,710 --> 01:24:29,220
so there's you know eight let's

1442
01:24:27,399 --> 01:24:48,539
recompile here

1443
01:24:29,220 --> 01:24:52,539
so there's 16 there's 32 there's 64 and

1444
01:24:48,539 --> 01:24:56,829
here's like our predict goes one two two

1445
01:24:52,539 --> 01:24:59,159
six and you know it seems it seems

1446
01:24:56,829 --> 01:24:59,159
reasonable

1447
01:25:13,640 --> 01:25:20,289
right I mean that seems like a pretty

1448
01:25:15,500 --> 01:25:20,289
reasonable lighting solution and

1449
01:25:30,210 --> 01:25:35,600
I'm not seeing too much in the way of

1450
01:25:32,189 --> 01:25:35,599
obvious artifact in here

1451
01:25:45,729 --> 01:25:49,409
it seems pretty good

1452
01:25:58,289 --> 01:26:07,140
all right um so there is one other thing

1453
01:26:05,699 --> 01:26:08,460
I thought about and maybe this is

1454
01:26:07,140 --> 01:26:09,869
something we should address sooner

1455
01:26:08,460 --> 01:26:13,289
rather than later actually now to think

1456
01:26:09,869 --> 01:26:15,630
about it and that is that we also need a

1457
01:26:13,289 --> 01:26:17,310
way of smoothing out the light solution

1458
01:26:15,630 --> 01:26:20,039
and we haven't really talked about that

1459
01:26:17,310 --> 01:26:22,410
yet either smoothing out the light

1460
01:26:20,039 --> 01:26:24,390
solution just means that if you look at

1461
01:26:22,409 --> 01:26:26,579
what's happening here

1462
01:26:24,390 --> 01:26:30,690
we're only computing the lighting for

1463
01:26:26,579 --> 01:26:32,430
reflectors on a per face basis what this

1464
01:26:30,689 --> 01:26:35,429
means is that the lighting would always

1465
01:26:32,430 --> 01:26:39,360
be very blocky and wouldn't have a lot

1466
01:26:35,430 --> 01:26:47,310
of gradation to it and you can probably

1467
01:26:39,359 --> 01:26:49,460
understand why that's maybe not the best

1468
01:26:47,310 --> 01:26:51,840
possible circumstance for us here and

1469
01:26:49,460 --> 01:26:54,930
it's unclear what we necessarily want to

1470
01:26:51,840 --> 01:26:57,449
do about that right so the question

1471
01:26:54,930 --> 01:27:01,470
becomes how are we actually going to

1472
01:26:57,449 --> 01:27:04,679
deal with reconstructing and end

1473
01:27:01,470 --> 01:27:06,420
lighting state from one of these

1474
01:27:04,680 --> 01:27:07,860
lighting computations meaning once we

1475
01:27:06,420 --> 01:27:13,319
computed what the lighting is supposed

1476
01:27:07,859 --> 01:27:16,349
to be how do we then actually have the

1477
01:27:13,319 --> 01:27:18,689
pixels in the game look up into that

1478
01:27:16,350 --> 01:27:21,660
lighting solution to produce some kind

1479
01:27:18,689 --> 01:27:26,219
of a smooth result if you imagine this

1480
01:27:21,659 --> 01:27:27,750
scene right here what we'd want to do is

1481
01:27:26,220 --> 01:27:29,789
for this to be a sort of this should

1482
01:27:27,750 --> 01:27:32,340
sort of be a radial gradient looking

1483
01:27:29,789 --> 01:27:34,560
like thing and of course at the moment

1484
01:27:32,340 --> 01:27:35,880
it definitely isn't it's just you know

1485
01:27:34,560 --> 01:27:37,980
all we've got is sort of a way to

1486
01:27:35,880 --> 01:27:40,380
reproduce sort of the blocky version of

1487
01:27:37,979 --> 01:27:42,679
that so there's a couple different ways

1488
01:27:40,380 --> 01:27:46,640
we could imagine attacking this problem

1489
01:27:42,680 --> 01:27:51,570
and it's not immediately clear anyway

1490
01:27:46,640 --> 01:27:54,600
what the best way to do it would be so

1491
01:27:51,569 --> 01:27:57,269
one way to do it would be to actually

1492
01:27:54,600 --> 01:27:59,490
try per pixel to have some kind of a

1493
01:27:57,270 --> 01:28:02,340
lighting query that looks up into the

1494
01:27:59,489 --> 01:28:04,739
world and uses their computed lighting

1495
01:28:02,340 --> 01:28:07,770
on the reflectors to figure out what the

1496
01:28:04,739 --> 01:28:12,679
lighting at the pixel is I don't really

1497
01:28:07,770 --> 01:28:12,680
know how effective that would be

1498
01:28:14,569 --> 01:28:19,649
maybe it's theoretically possible that

1499
01:28:17,130 --> 01:28:20,730
that would just work meaning if there

1500
01:28:19,649 --> 01:28:22,289
was some kind of a multi-resolution

1501
01:28:20,729 --> 01:28:24,619
query where it just kind of looked up

1502
01:28:22,289 --> 01:28:28,140
the reflectors in its immediate vicinity

1503
01:28:24,619 --> 01:28:31,680
and did some kind of a blend between the

1504
01:28:28,140 --> 01:28:34,530
nearby ones based on its normal ah maybe

1505
01:28:31,680 --> 01:28:36,510
I could see that working I have to admit

1506
01:28:34,529 --> 01:28:37,859
it's a little bit scary sounding like I

1507
01:28:36,510 --> 01:28:41,909
don't know for sure that that would

1508
01:28:37,859 --> 01:28:44,699
actually work so that's a little bit

1509
01:28:41,909 --> 01:28:47,399
dicey the other way we could imagine

1510
01:28:44,699 --> 01:28:49,800
doing it is we could just be computing

1511
01:28:47,399 --> 01:28:51,689
these add a little bit of a higher

1512
01:28:49,800 --> 01:28:55,079
sampling density so instead of just

1513
01:28:51,689 --> 01:29:00,289
using one reflector per quod we could

1514
01:28:55,079 --> 01:29:00,289
use one reflector per vertex per quod

1515
01:29:01,850 --> 01:29:07,970
which would at least give us a little

1516
01:29:04,319 --> 01:29:10,829
more leg fidelity like a little bit more

1517
01:29:07,970 --> 01:29:12,930
so you get imagine dicing this caught up

1518
01:29:10,829 --> 01:29:16,859
into essentially four quads and setting

1519
01:29:12,930 --> 01:29:18,570
the lighting based on which you know

1520
01:29:16,859 --> 01:29:24,059
this vertex is letting based on disk

1521
01:29:18,569 --> 01:29:29,179
lectors incoming radians right um I'm

1522
01:29:24,060 --> 01:29:29,180
not sure what to say about that

1523
01:29:39,819 --> 01:29:44,689
it has some attractive qualities namely

1524
01:29:43,130 --> 01:29:46,460
that there's no per pixel cost

1525
01:29:44,689 --> 01:29:52,189
associated with the lighting it's a more

1526
01:29:46,460 --> 01:29:54,980
flat cost and it just has an obvious way

1527
01:29:52,189 --> 01:29:57,529
in which you get the lighting from the

1528
01:29:54,979 --> 01:30:00,109
light solution down to the actual

1529
01:29:57,529 --> 01:30:02,090
drawing the problem with it is that any

1530
01:30:00,109 --> 01:30:03,769
lighting that's based on per vertex is

1531
01:30:02,090 --> 01:30:09,829
always going to fall victim to the

1532
01:30:03,770 --> 01:30:11,690
sampling density that you use so it does

1533
01:30:09,829 --> 01:30:14,170
seem like it's probably not going to be

1534
01:30:11,689 --> 01:30:19,159
a particularly high quality method of

1535
01:30:14,170 --> 01:30:21,020
reproducing the lighting and we probably

1536
01:30:19,159 --> 01:30:29,000
could do something better given the

1537
01:30:21,020 --> 01:30:31,820
information that we have so again I

1538
01:30:29,000 --> 01:30:34,010
would say it's a tricky situation and I

1539
01:30:31,819 --> 01:30:38,599
don't really know what the easiest way

1540
01:30:34,010 --> 01:30:42,340
to try to make that work would be a per

1541
01:30:38,600 --> 01:30:42,340
pixel lookup for color information

1542
01:30:51,189 --> 01:30:59,669
ooh uber a per pixel lookup for color

1543
01:30:57,010 --> 01:30:59,670
information

1544
01:31:11,039 --> 01:31:15,269
I guess now that I think about it it's

1545
01:31:13,590 --> 01:31:23,960
not entirely out of the question that

1546
01:31:15,270 --> 01:31:23,960
that could work like maybe it just would

1547
01:31:37,880 --> 01:31:52,409
hmm so this is a bit of a quandary I

1548
01:31:40,739 --> 01:31:57,989
really don't know but but I think that

1549
01:31:52,409 --> 01:32:02,220
the saving grace here is that once we

1550
01:31:57,989 --> 01:32:05,579
have this information we can put it in a

1551
01:32:02,220 --> 01:32:07,590
spatially coherent structure so for

1552
01:32:05,579 --> 01:32:10,319
example once we know what once we've

1553
01:32:07,590 --> 01:32:12,720
done the reflectivity we could put it

1554
01:32:10,319 --> 01:32:15,469
into some kind of a voxel or any other

1555
01:32:12,720 --> 01:32:18,630
sort of lookup structure we want and

1556
01:32:15,470 --> 01:32:23,100
then every pixel could just interpolate

1557
01:32:18,630 --> 01:32:27,770
the lighting based on what it found in

1558
01:32:23,100 --> 01:32:27,770
the neighborhood of itself right

1559
01:32:46,939 --> 01:32:51,000
it's really tough this is always the

1560
01:32:49,710 --> 01:32:52,770
problem with anything where you're

1561
01:32:51,000 --> 01:32:55,380
trying to reconstruct lighting with less

1562
01:32:52,770 --> 01:32:57,210
than per pixel accurate results you end

1563
01:32:55,380 --> 01:32:58,859
up in the situation you see people try

1564
01:32:57,210 --> 01:33:00,689
to do a lot of clever stuff like with

1565
01:32:58,859 --> 01:33:03,449
temporal anti-aliasing or screen space

1566
01:33:00,689 --> 01:33:04,710
ambient occlusion or screen space

1567
01:33:03,449 --> 01:33:06,300
reflections and all these sorts of

1568
01:33:04,710 --> 01:33:07,920
things you always end up in the same

1569
01:33:06,300 --> 01:33:10,320
sorts of predicaments where you're just

1570
01:33:07,920 --> 01:33:12,420
like well you know we've got this

1571
01:33:10,319 --> 01:33:15,389
problem where we are trying to

1572
01:33:12,420 --> 01:33:17,340
reconstruct things at pixels but we

1573
01:33:15,390 --> 01:33:19,619
don't have the actual data of what

1574
01:33:17,340 --> 01:33:21,569
happened at the pixels we just have data

1575
01:33:19,619 --> 01:33:23,340
about what happened in some other kind

1576
01:33:21,569 --> 01:33:24,840
of sparse way and we're trying to

1577
01:33:23,340 --> 01:33:27,569
reconstruct something that's going to be

1578
01:33:24,840 --> 01:33:33,000
good enough and it always has bugs and

1579
01:33:27,569 --> 01:33:34,799
edge cases and whatever and I think this

1580
01:33:33,000 --> 01:33:38,640
is one of those one of those kind of

1581
01:33:34,800 --> 01:33:49,350
things so I just I just don't know I

1582
01:33:38,640 --> 01:33:52,440
really don't know I mean here's what I

1583
01:33:49,350 --> 01:34:00,240
would say it wouldn't be too hard for us

1584
01:33:52,439 --> 01:34:03,329
to try doing this per vertex so for

1585
01:34:00,239 --> 01:34:06,750
example if I wanted to what I could do

1586
01:34:03,329 --> 01:34:10,199
here is say well for each one of these

1587
01:34:06,750 --> 01:34:15,289
I'll create one of the I'll create one

1588
01:34:10,199 --> 01:34:18,659
of these letting elements per vertex and

1589
01:34:15,289 --> 01:34:24,840
then when I come back through when I do

1590
01:34:18,659 --> 01:34:27,569
the output lighting I could actually

1591
01:34:24,840 --> 01:34:29,730
take the color per vertex and put it in

1592
01:34:27,569 --> 01:34:33,509
here so we could actually test per

1593
01:34:29,729 --> 01:34:34,709
vertex lighting not - it would not be

1594
01:34:33,510 --> 01:34:38,489
too difficult to test per vertex

1595
01:34:34,710 --> 01:34:40,470
lighting and again the problem that I

1596
01:34:38,489 --> 01:34:44,489
see with that is just that per vertex

1597
01:34:40,470 --> 01:34:47,539
lighting doesn't really produce the

1598
01:34:44,489 --> 01:34:51,119
kinds of results that you want for

1599
01:34:47,539 --> 01:34:52,710
lighting the changes within a quad it

1600
01:34:51,119 --> 01:34:55,949
can only do kind of a constant gradient

1601
01:34:52,710 --> 01:34:59,029
wash maybe that's good enough I don't

1602
01:34:55,949 --> 01:34:59,029
know I

1603
01:34:59,159 --> 01:35:04,139
fact it will probably have some obvious

1604
01:35:00,869 --> 01:35:08,729
artifacts but we you know we could test

1605
01:35:04,140 --> 01:35:12,119
it pretty easily so you know I guess we

1606
01:35:08,729 --> 01:35:14,869
could we could kind of do a test here

1607
01:35:12,119 --> 01:35:14,869
where we do that

1608
01:35:21,859 --> 01:35:27,139
I guess maybe let's just see what

1609
01:35:25,219 --> 01:35:33,639
happens if I break this up into multiple

1610
01:35:27,139 --> 01:35:36,380
routines so extract lighting from quads

1611
01:35:33,639 --> 01:35:42,319
extract or respect reflectors I should

1612
01:35:36,380 --> 01:35:44,750
say so we do is extract the selectors

1613
01:35:42,319 --> 01:35:48,259
from quads and extract reflectors from

1614
01:35:44,750 --> 01:35:52,069
verts and so if I wanted to be able to

1615
01:35:48,260 --> 01:35:57,250
do either of those two things close pic

1616
01:35:52,069 --> 01:35:57,250
index I don't really care about any more

1617
01:36:10,929 --> 01:36:22,719
there you go so when we do lighting copy

1618
01:36:18,469 --> 01:36:22,719
in let's go ahead and grab this out

1619
01:36:26,529 --> 01:36:36,639
here's the quad version and let's go and

1620
01:36:34,429 --> 01:36:36,639
grab

1621
01:36:42,738 --> 01:36:46,189
sparked here

1622
01:37:00,250 --> 01:37:14,720
okay so if we imagine that we want two

1623
01:37:08,449 --> 01:37:17,630
of these one that would be per quod and

1624
01:37:14,720 --> 01:37:20,480
one that would be per vertex I then

1625
01:37:17,630 --> 01:37:21,980
extract reflectors from quads is going

1626
01:37:20,479 --> 01:37:23,809
to do the same path that we were doing

1627
01:37:21,979 --> 01:37:41,750
before presumably we can just make that

1628
01:37:23,810 --> 01:37:46,910
compile fairly directly and then what we

1629
01:37:41,750 --> 01:37:50,119
need to do consuming it make sure that

1630
01:37:46,909 --> 01:37:52,989
all the rest of these things can operate

1631
01:37:50,119 --> 01:37:52,989
in either fashion

1632
01:38:16,789 --> 01:38:28,738
yeah so now really it's just a question

1633
01:38:24,810 --> 01:38:35,300
of we have to make sure that we call one

1634
01:38:28,738 --> 01:38:35,299
of these first to get the information

1635
01:38:37,639 --> 01:38:45,000
don't think debug light P is used

1636
01:38:40,050 --> 01:38:47,400
anymore just camera P with you so that

1637
01:38:45,000 --> 01:38:49,109
should be good so what we want to be

1638
01:38:47,399 --> 01:38:51,960
able to do now is say well okay we want

1639
01:38:49,109 --> 01:38:54,359
to be able to do an extraction from the

1640
01:38:51,960 --> 01:38:58,260
vertices if we do an extraction from the

1641
01:38:54,359 --> 01:39:01,670
vertices the tricky part is just going

1642
01:38:58,260 --> 01:39:04,739
to be that when we output the lighting

1643
01:39:01,670 --> 01:39:10,679
it's going to be kind of confusing right

1644
01:39:04,738 --> 01:39:13,589
because it's it's it's going to have to

1645
01:39:10,679 --> 01:39:16,529
do sort of an integration here where it

1646
01:39:13,590 --> 01:39:20,489
takes for reflectors and packs them

1647
01:39:16,529 --> 01:39:24,719
separately into one output quad right

1648
01:39:20,488 --> 01:39:29,129
eye so that's going to be kind of the

1649
01:39:24,719 --> 01:39:31,260
more the nastier part of it but we'll

1650
01:39:29,130 --> 01:39:33,929
ignore that for the temporary moment and

1651
01:39:31,260 --> 01:39:38,219
just focus on extracting since that's

1652
01:39:33,929 --> 01:39:41,969
going to have to happen as well so

1653
01:39:38,219 --> 01:39:45,689
here's the extraction code and that's

1654
01:39:41,969 --> 01:39:48,329
operating currently if we wanted to make

1655
01:39:45,689 --> 01:39:52,109
this extract per vertex then as we come

1656
01:39:48,329 --> 01:39:54,599
through here and we are about to output

1657
01:39:52,109 --> 01:39:56,908
a lighting element really what we want

1658
01:39:54,599 --> 01:39:59,219
to do is output for lighting elements

1659
01:39:56,908 --> 01:40:06,329
right so this quad count here is going

1660
01:39:59,219 --> 01:40:10,829
to be four times so and the lighting

1661
01:40:06,329 --> 01:40:13,130
element is going to have to be something

1662
01:40:10,829 --> 01:40:13,130
that

1663
01:40:15,158 --> 01:40:27,259
happens four times right so here's our

1664
01:40:21,770 --> 01:40:35,600
loop I guess let index on the next left

1665
01:40:27,260 --> 01:40:37,310
+ 4 + left element index and I think

1666
01:40:35,600 --> 01:40:42,370
what we want to do here is you say well

1667
01:40:37,310 --> 01:40:44,239
alright so instead of half of the span

1668
01:40:42,369 --> 01:40:47,210
really I guess what we're going to do

1669
01:40:44,238 --> 01:40:52,448
here is it's going to be a quarter of

1670
01:40:47,210 --> 01:41:01,789
the span is is going to be the actual

1671
01:40:52,448 --> 01:41:04,069
length or I guess I should say since

1672
01:41:01,789 --> 01:41:07,939
we're over sampling you know a third of

1673
01:41:04,069 --> 01:41:13,549
the span and the location is going to be

1674
01:41:07,939 --> 01:41:16,279
one of the vertices right so it's going

1675
01:41:13,550 --> 01:41:19,310
to be whichever one of these we're

1676
01:41:16,279 --> 01:41:26,869
currently on I guess that means we sort

1677
01:41:19,310 --> 01:41:28,039
of have to do this as an array because

1678
01:41:26,869 --> 01:41:37,569
I'm going to want to do something like

1679
01:41:28,039 --> 01:41:37,569
this yeah

1680
01:41:52,180 --> 01:41:55,570
not pretty

1681
01:42:00,970 --> 01:42:14,990
admittedly so yeah that should do it and

1682
01:42:11,630 --> 01:42:21,760
then if I just say we've got vert P 4

1683
01:42:14,989 --> 01:42:21,760
here we get all this and then we can

1684
01:42:29,710 --> 01:42:37,939
compute them thusly so if we take each

1685
01:42:34,340 --> 01:42:41,329
of those you can now grab the center out

1686
01:42:37,939 --> 01:42:43,729
properly the radius is just always going

1687
01:42:41,329 --> 01:42:45,380
to be the radius we can just it's the

1688
01:42:43,729 --> 01:42:53,059
same radius for everybody so that's not

1689
01:42:45,380 --> 01:42:56,989
really relevant it's the same color for

1690
01:42:53,060 --> 01:43:03,260
everyone as well that's just uniform

1691
01:42:56,989 --> 01:43:06,469
computation oh no actually it's not we

1692
01:43:03,260 --> 01:43:14,659
can do better than that now because we

1693
01:43:06,470 --> 01:43:18,440
can actually just get the color for that

1694
01:43:14,659 --> 01:43:22,269
particular vertex same would be true of

1695
01:43:18,439 --> 01:43:22,269
the normal so all of these can actually

1696
01:43:22,810 --> 01:43:28,940
access those directly now all of this

1697
01:43:26,930 --> 01:43:34,970
stuff seems relatively straightforward

1698
01:43:28,939 --> 01:43:37,309
again the emission same thing here and

1699
01:43:34,970 --> 01:43:40,180
then the only problem is these values

1700
01:43:37,310 --> 01:43:43,000
are not really accurate anymore right

1701
01:43:40,180 --> 01:43:45,890
but otherwise I think we're good there

1702
01:43:43,000 --> 01:43:47,930
so now we should be able to do this

1703
01:43:45,890 --> 01:43:52,619
although we may need to make that array

1704
01:43:47,930 --> 01:43:55,680
bigger but if we want to

1705
01:43:52,619 --> 01:44:02,909
just look at reflectors we should now in

1706
01:43:55,680 --> 01:44:03,990
theory be able to do that I think of

1707
01:44:02,909 --> 01:44:07,439
course the other thing I probably should

1708
01:44:03,989 --> 01:44:09,659
do is set that value down from 256 since

1709
01:44:07,439 --> 01:44:16,589
we don't really need to see that at the

1710
01:44:09,659 --> 01:44:18,599
moment but so here is what it says the

1711
01:44:16,590 --> 01:44:20,310
legislation is that doesn't really make

1712
01:44:18,600 --> 01:44:23,610
much sense it doesn't look like we've

1713
01:44:20,310 --> 01:44:27,420
got one at every vertex at the moment or

1714
01:44:23,609 --> 01:44:36,329
well actually maybe it kind of does but

1715
01:44:27,420 --> 01:44:40,770
they don't look large enough what's

1716
01:44:36,329 --> 01:44:43,350
going on here and also I guess I do have

1717
01:44:40,770 --> 01:44:44,520
to do an offset now that I think about

1718
01:44:43,350 --> 01:44:46,140
it this is going to be a little more

1719
01:44:44,520 --> 01:44:50,270
complicated if I actually want to plate

1720
01:44:46,140 --> 01:44:50,270
this properly so

1721
01:45:12,908 --> 01:45:18,679
you just make sure we can run this

1722
01:45:15,109 --> 01:45:27,829
relatively quickly should be pretty

1723
01:45:18,679 --> 01:45:30,309
cheap forgot we are not set up to do

1724
01:45:27,828 --> 01:45:30,308
that yet

1725
01:45:38,300 --> 01:45:50,310
so yeah it kind of looks more to me like

1726
01:45:47,069 --> 01:45:54,239
we're not really distributing these at

1727
01:45:50,310 --> 01:45:57,539
the vertices at all I'm not sure what's

1728
01:45:54,239 --> 01:46:03,449
going on there so let's take a look at

1729
01:45:57,539 --> 01:46:08,909
what the problem is so we're getting the

1730
01:46:03,449 --> 01:46:11,090
vert P values this looks reasonable to

1731
01:46:08,909 --> 01:46:11,090
me

1732
01:46:16,599 --> 01:46:23,340
and then we're accessing out of the vert

1733
01:46:18,849 --> 01:46:23,340
P for whatever element index were on up

1734
01:46:23,939 --> 01:46:30,189
so have that snuck outside the brace so

1735
01:46:27,520 --> 01:46:39,420
we were in fact not creating four of

1736
01:46:30,189 --> 01:46:39,419
those try that one more time there we go

1737
01:46:41,880 --> 01:46:46,569
alright so at least now we're creating

1738
01:46:44,439 --> 01:46:49,569
for them we're not creating them

1739
01:46:46,569 --> 01:46:56,979
correctly however for a number of

1740
01:46:49,569 --> 01:46:59,729
different reasons so I still think yeah

1741
01:46:56,979 --> 01:47:02,738
we've still got a bunch of bugs in there

1742
01:46:59,729 --> 01:47:06,428
alright so let's take a look at this so

1743
01:47:02,738 --> 01:47:10,569
we're going through the elements zero to

1744
01:47:06,429 --> 01:47:12,520
four we're picking out and and perhaps

1745
01:47:10,569 --> 01:47:14,469
instead of element index that's really

1746
01:47:12,520 --> 01:47:19,030
not right it's the vertex that we're

1747
01:47:14,469 --> 01:47:22,090
talking about here right the position

1748
01:47:19,029 --> 01:47:25,118
should be correct because we're not even

1749
01:47:22,090 --> 01:47:29,230
trying to move that to center it about

1750
01:47:25,118 --> 01:47:31,029
the face yet so how that's wrong I don't

1751
01:47:29,229 --> 01:47:35,979
know but it kind of looks like it was

1752
01:47:31,029 --> 01:47:39,519
wrong so that's a bit strange but oh

1753
01:47:35,979 --> 01:47:45,279
well so position and radius of the

1754
01:47:39,520 --> 01:47:47,500
reflector none of this stuff should

1755
01:47:45,279 --> 01:47:49,359
matter at all nor should any of this

1756
01:47:47,500 --> 01:47:51,789
stuff because we're not using it so it's

1757
01:47:49,359 --> 01:47:54,988
really just these two things and I'm not

1758
01:47:51,789 --> 01:47:57,988
sure how that's managing to be so

1759
01:47:54,988 --> 01:47:57,988
incorrect

1760
01:48:11,960 --> 01:48:17,300
so just to give you a little bit of an

1761
01:48:15,800 --> 01:48:22,029
understanding of what I'm thinking about

1762
01:48:17,300 --> 01:48:22,029
here so if we imagine

1763
01:48:31,239 --> 01:48:34,750
I mean I guess I could convince myself

1764
01:48:33,609 --> 01:48:38,099
that was correct

1765
01:48:34,750 --> 01:48:38,100
I can't really

1766
01:48:50,600 --> 01:48:54,710
I mean I guess I could imagine that that

1767
01:48:53,300 --> 01:48:59,360
was correct so if we take a look at this

1768
01:48:54,710 --> 01:49:01,760
as one here here's all the vertex we do

1769
01:48:59,359 --> 01:49:03,529
have the different reflectors pointing

1770
01:49:01,760 --> 01:49:05,060
in the various directions okay you know

1771
01:49:03,529 --> 01:49:07,659
what maybe I can convince myself that's

1772
01:49:05,060 --> 01:49:10,010
correct let's let's let myself

1773
01:49:07,659 --> 01:49:14,210
temporarily believe that that could be

1774
01:49:10,010 --> 01:49:16,100
true and then what I'll do is I'll do

1775
01:49:14,210 --> 01:49:19,779
the code for actually offsetting these

1776
01:49:16,100 --> 01:49:19,780
and we'll see what happens

1777
01:49:20,630 --> 01:49:25,190
so if you look at what's got to happen

1778
01:49:22,819 --> 01:49:28,489
here we've got four vertices that we're

1779
01:49:25,189 --> 01:49:33,939
setting and really the positions of

1780
01:49:28,489 --> 01:49:37,069
those vertices are are pretty different

1781
01:49:33,939 --> 01:49:39,859
what I probably didn't need to do this

1782
01:49:37,069 --> 01:49:41,779
in hindsight because I'm going to have

1783
01:49:39,859 --> 01:49:44,170
to do each of these mainly although we

1784
01:49:41,779 --> 01:49:50,840
could we yeah we still probably could

1785
01:49:44,170 --> 01:49:52,449
come up with a different an algorithm

1786
01:49:50,840 --> 01:49:56,869
for setting them actually but you know

1787
01:49:52,449 --> 01:50:05,989
we'll see anyway so if we imagine each

1788
01:49:56,869 --> 01:50:07,670
one of these vertices like so if we're

1789
01:50:05,989 --> 01:50:10,729
imagining this is a quad then we know

1790
01:50:07,670 --> 01:50:15,050
what our bases are right we know that we

1791
01:50:10,729 --> 01:50:18,409
have if I remember correctly we've set

1792
01:50:15,050 --> 01:50:21,350
these up they're coming out in Tri strip

1793
01:50:18,409 --> 01:50:25,399
oh we've done it we've untried stripped

1794
01:50:21,350 --> 01:50:26,960
them it looks like here right so we do

1795
01:50:25,399 --> 01:50:31,210
zero one three two

1796
01:50:26,960 --> 01:50:31,210
so we've got presumably this

1797
01:50:36,338 --> 01:50:42,189
and so we did 0 1 3 2 to return to a

1798
01:50:39,550 --> 01:50:46,029
standard kind of ordering here so what

1799
01:50:42,189 --> 01:50:48,249
we want to do is we want to create a set

1800
01:50:46,029 --> 01:50:50,588
of reflectors that represent this face

1801
01:50:48,248 --> 01:50:54,519
and we want to distribute them across

1802
01:50:50,588 --> 01:50:57,729
the surface evenly right so what we want

1803
01:50:54,519 --> 01:51:01,208
to do is say okay the you know the

1804
01:50:57,729 --> 01:51:03,519
vertex reflector for vertex zero wants

1805
01:51:01,208 --> 01:51:05,948
to be like right here and the vertex

1806
01:51:03,519 --> 01:51:11,019
reflector for vertex 2 wants to be right

1807
01:51:05,948 --> 01:51:14,638
here which means that one quarter of the

1808
01:51:11,019 --> 01:51:17,378
span from 0 to 2 should be added in and

1809
01:51:14,639 --> 01:51:19,929
1/4 of the span from 0 to 1 should be

1810
01:51:17,378 --> 01:51:25,358
added in for the verts our reflector

1811
01:51:19,929 --> 01:51:28,679
right does that make sense so they can

1812
01:51:25,359 --> 01:51:33,969
all be based off of vert 0 if we want

1813
01:51:28,679 --> 01:51:36,489
right they can all be like vert 0 and

1814
01:51:33,969 --> 01:51:42,668
then we just want to do ok whatever the

1815
01:51:36,488 --> 01:51:46,029
span is and don't ask me why I called

1816
01:51:42,668 --> 01:51:48,599
these that way usually I name them from

1817
01:51:46,029 --> 01:51:51,728
to-and-from but that's alright it's time

1818
01:51:48,599 --> 01:51:56,649
so if i want to do that i need to add in

1819
01:51:51,729 --> 01:52:02,639
a quarter of the span from 1 to 0 and a

1820
01:51:56,649 --> 01:52:04,929
quarter of the span from 2 to 0 but well

1821
01:52:02,639 --> 01:52:14,199
like I said we remembered these so

1822
01:52:04,929 --> 01:52:16,149
actually it's 3 right and what we need

1823
01:52:14,198 --> 01:52:22,538
to do here is each of these is going to

1824
01:52:16,149 --> 01:52:24,219
be a different span amount right so and

1825
01:52:22,538 --> 01:52:26,050
if we wanted to we could base them we

1826
01:52:24,219 --> 01:52:30,368
could we could make all of these be 25%

1827
01:52:26,050 --> 01:52:33,070
by using the span in in question so if

1828
01:52:30,368 --> 01:52:35,198
we redraw this with the things actually

1829
01:52:33,069 --> 01:52:42,429
remembered the way we remember them so 0

1830
01:52:35,198 --> 01:52:48,279
1 2 3 then the 1 version is going to

1831
01:52:42,429 --> 01:52:49,630
want to go well I guess we technically

1832
01:52:48,279 --> 01:52:52,149
never compute that span

1833
01:52:49,630 --> 01:52:54,460
but we can use the span from zero to

1834
01:52:52,149 --> 01:52:56,769
three instead right so it's going to

1835
01:52:54,460 --> 01:53:00,689
want to go 25% along that one but it's

1836
01:52:56,770 --> 01:53:05,320
going to want to go the negative 25%

1837
01:53:00,689 --> 01:53:09,429
along the one zero span to put it like

1838
01:53:05,319 --> 01:53:12,670
right here for element 2 which is this

1839
01:53:09,430 --> 01:53:20,500
one it's going to want to go a negative

1840
01:53:12,670 --> 01:53:23,170
on both of those and for three it's

1841
01:53:20,500 --> 01:53:24,640
going to want to go a positive on the

1842
01:53:23,170 --> 01:53:27,329
one zero span but a negative on the

1843
01:53:24,640 --> 01:53:27,329
three zero span

1844
01:53:47,238 --> 01:53:51,788
all right so let's take a look at that

1845
01:53:53,198 --> 01:54:00,319
so as you can see that did produce a

1846
01:53:56,988 --> 01:54:01,939
fairly regular tiling so I guess I can

1847
01:54:00,319 --> 01:54:05,808
convince myself that I didn't have the

1848
01:54:01,939 --> 01:54:08,149
bug and so you can see now how this

1849
01:54:05,809 --> 01:54:10,820
produces potentially a better lighting

1850
01:54:08,149 --> 01:54:13,268
solution because now we at each vertex

1851
01:54:10,819 --> 01:54:16,759
could get some lighting that was

1852
01:54:13,269 --> 01:54:20,480
potentially more accurate so let's see

1853
01:54:16,760 --> 01:54:21,679
if we can do that now when we do output

1854
01:54:20,479 --> 01:54:24,348
lighting you could see us going through

1855
01:54:21,679 --> 01:54:25,940
the elements here and what we really

1856
01:54:24,349 --> 01:54:27,590
want to do is say well instead of going

1857
01:54:25,939 --> 01:54:30,319
through the elements one at a time like

1858
01:54:27,590 --> 01:54:33,050
that what we actually want to do is we

1859
01:54:30,319 --> 01:54:35,658
want to go through the elements by fours

1860
01:54:33,050 --> 01:54:39,079
because we're only going to output one

1861
01:54:35,658 --> 01:54:41,960
element per we're going to we're only

1862
01:54:39,078 --> 01:54:44,658
going to output one quad per element

1863
01:54:41,960 --> 01:54:48,069
right that's effectively what we're

1864
01:54:44,658 --> 01:54:54,049
saying so what we want to do here is

1865
01:54:48,069 --> 01:54:56,689
kind of wonky but you know what can I

1866
01:54:54,050 --> 01:54:58,369
say just the way it is

1867
01:54:56,689 --> 01:55:03,018
so what we're going to want to do here

1868
01:54:58,368 --> 01:55:05,679
is we're going to want to say that in

1869
01:55:03,019 --> 01:55:12,409
this path right

1870
01:55:05,679 --> 01:55:15,800
in fact I guess maybe we have to get

1871
01:55:12,408 --> 01:55:19,460
kind of a light computation thing

1872
01:55:15,800 --> 01:55:26,929
happening here where you can kind of see

1873
01:55:19,460 --> 01:55:28,489
that we've got this I guess one of

1874
01:55:26,929 --> 01:55:30,469
things I think we always want to write a

1875
01:55:28,488 --> 01:55:33,888
separate routine how we had output

1876
01:55:30,469 --> 01:55:37,599
lighting you know output quad lighting

1877
01:55:33,889 --> 01:55:37,599
and output vert lighting basically

1878
01:55:41,579 --> 01:55:57,760
like so and then what I can do is just

1879
01:55:45,279 --> 01:55:59,229
pick which one of those I'm doing so if

1880
01:55:57,760 --> 01:56:01,659
I wanted to have the one that does

1881
01:55:59,229 --> 01:56:05,169
vertices the one that does the vertices

1882
01:56:01,659 --> 01:56:10,869
is going to do the element count divided

1883
01:56:05,170 --> 01:56:13,539
by four as it goes through and what

1884
01:56:10,869 --> 01:56:16,979
we're going to do here is just say we

1885
01:56:13,539 --> 01:56:16,979
don't care about show visibility anymore

1886
01:56:21,479 --> 01:56:25,179
and we don't care about your reflectors

1887
01:56:24,640 --> 01:56:27,489
anymore

1888
01:56:25,180 --> 01:56:44,400
because we calling the other path if you

1889
01:56:27,488 --> 01:56:44,399
were doing that we do if so reflectors

1890
01:56:49,800 --> 01:56:58,570
then go to the cloud path otherwise go

1891
01:56:55,090 --> 01:57:06,369
to the word pad okay so the verb path

1892
01:56:58,569 --> 01:57:08,460
needs to be able to do this and what we

1893
01:57:06,369 --> 01:57:12,039
want to do here is we want to

1894
01:57:08,460 --> 01:57:20,590
effectively access in fact you know what

1895
01:57:12,039 --> 01:57:23,170
we probably want to do it like this so

1896
01:57:20,590 --> 01:57:25,289
we grab out one of the elements and most

1897
01:57:23,170 --> 01:57:27,640
of this code is actually will still work

1898
01:57:25,289 --> 01:57:29,649
but what we want to do is instead of

1899
01:57:27,640 --> 01:57:31,960
doing the Hadamard product with just one

1900
01:57:29,649 --> 01:57:35,500
front of it we actually need to grab all

1901
01:57:31,960 --> 01:57:42,659
the different front omits right so we

1902
01:57:35,500 --> 01:57:50,488
need to be able to do element zero one

1903
01:57:42,659 --> 01:57:50,488
two three zero one two three

1904
01:57:53,810 --> 01:57:59,910
and we're kind of relying on the

1905
01:57:56,970 --> 01:58:02,760
duplicated data because inside each of

1906
01:57:59,909 --> 01:58:04,710
those they store all the original

1907
01:58:02,760 --> 01:58:07,470
vertices just in a fattie way they store

1908
01:58:04,710 --> 01:58:09,329
them all so we can just rely on it and

1909
01:58:07,470 --> 01:58:26,220
so what we can do here is do a thing

1910
01:58:09,329 --> 01:58:28,829
where we say like okay let's grab out

1911
01:58:26,220 --> 01:58:30,750
each of the front commision values and

1912
01:58:28,829 --> 01:58:36,260
then we can pack the vertices with

1913
01:58:30,750 --> 01:58:36,260
different Hadamard products on each one

1914
01:58:38,720 --> 01:58:44,610
and I think that might be all we

1915
01:58:41,100 --> 01:58:47,940
actually need to do not sure so here's

1916
01:58:44,609 --> 01:58:49,380
the reflector computation I here's the

1917
01:58:47,939 --> 01:58:53,899
lighting computation without the

1918
01:58:49,380 --> 01:58:53,900
reflectors not so good

1919
01:59:01,329 --> 01:59:10,479
oh I suppose also haha plus equals zero

1920
01:59:07,359 --> 01:59:11,769
that was good I suppose we also want to

1921
01:59:10,479 --> 01:59:14,079
say but you're going to be divided by

1922
01:59:11,770 --> 01:59:22,870
four because we're only outputting a

1923
01:59:14,079 --> 01:59:25,750
quad every four elements now so if I go

1924
01:59:22,869 --> 01:59:30,369
into the render let's try this now sure

1925
01:59:25,750 --> 01:59:31,960
reflectors false so you can kind of see

1926
01:59:30,369 --> 01:59:34,510
it gets a little better but you can also

1927
01:59:31,960 --> 01:59:37,720
see some of the problems with that I

1928
01:59:34,510 --> 01:59:38,980
mean we don't necessarily know there

1929
01:59:37,720 --> 01:59:41,829
might be some bugs in there but you can

1930
01:59:38,979 --> 01:59:43,869
see sort of those banding artifacts from

1931
01:59:41,829 --> 01:59:45,100
the vertex based lighting that was

1932
01:59:43,869 --> 01:59:48,460
exactly the kind of thing that I would

1933
01:59:45,100 --> 01:59:49,750
be afraid of let me just move the

1934
01:59:48,460 --> 01:59:55,119
lighting over here so you can kind of

1935
01:59:49,750 --> 01:59:56,050
see and that's just because again you

1936
01:59:55,119 --> 02:00:00,640
know if you take a look at the

1937
01:59:56,050 --> 02:00:03,489
reflectors the reflectors generally have

1938
02:00:00,640 --> 02:00:05,770
some pattern of what's dark and what's

1939
02:00:03,489 --> 02:00:08,619
light and then they're just going to get

1940
02:00:05,770 --> 02:00:12,040
interpolated in a straight linear

1941
02:00:08,619 --> 02:00:17,349
fashion right and so that's when you get

1942
02:00:12,039 --> 02:00:19,689
that kind of ugly vertex based banding

1943
02:00:17,350 --> 02:00:22,450
so basically what happens there is

1944
02:00:19,689 --> 02:00:26,109
you're almost good I mean it almost

1945
02:00:22,449 --> 02:00:28,119
looks good right so it's not like the

1946
02:00:26,109 --> 02:00:29,949
worst thing in the world it in like in

1947
02:00:28,119 --> 02:00:32,289
some cases like that when the vertices

1948
02:00:29,949 --> 02:00:33,729
happen to line up with a sampling it

1949
02:00:32,289 --> 02:00:37,289
actually looks quite nice like this

1950
02:00:33,729 --> 02:00:41,229
right here looks great you know ship it

1951
02:00:37,289 --> 02:00:43,779
but when you get those problems such as

1952
02:00:41,229 --> 02:00:45,849
in this example you really get some

1953
02:00:43,779 --> 02:00:47,319
nasty banding in there so I think we

1954
02:00:45,850 --> 02:00:50,970
would want to come up with solution to

1955
02:00:47,319 --> 02:00:54,609
fix that anyway if that makes sense

1956
02:00:50,970 --> 02:00:56,409
all right so let's go ahead and go to

1957
02:00:54,609 --> 02:00:58,989
the Q&amp;A for now we've done everything

1958
02:00:56,409 --> 02:01:01,449
that I wanted to do today tomorrow we

1959
02:00:58,989 --> 02:01:03,159
can maybe look at what we want to do

1960
02:01:01,449 --> 02:01:04,599
about the banding or we can move on to

1961
02:01:03,159 --> 02:01:08,130
the multi resolution stuff that I'd like

1962
02:01:04,600 --> 02:01:08,130
to do either or

1963
02:02:21,130 --> 02:02:37,659
you can triangle order the verts for the

1964
02:02:25,930 --> 02:02:39,700
banding issue oh I think I know what

1965
02:02:37,659 --> 02:02:40,960
your suggest well I guess I don't know

1966
02:02:39,699 --> 02:02:51,069
I'm going to try and guess what that

1967
02:02:40,960 --> 02:02:53,859
means do you mean that if since you can

1968
02:02:51,069 --> 02:02:59,109
pick which one of these two you want to

1969
02:02:53,859 --> 02:03:03,699
do if you have you know if you look at

1970
02:02:59,109 --> 02:03:06,609
the four vertices and want to know and

1971
02:03:03,699 --> 02:03:09,429
have an opinion about which way would

1972
02:03:06,609 --> 02:03:12,009
produce the least ugly result you pick

1973
02:03:09,430 --> 02:03:17,380
between these two is that what you're

1974
02:03:12,010 --> 02:03:20,650
saying and I mean I agree it might help

1975
02:03:17,380 --> 02:03:23,859
a little I don't think that's going to

1976
02:03:20,649 --> 02:03:29,349
get us all the way there it's hard to

1977
02:03:23,859 --> 02:03:32,920
say like I mean if I look at what's

1978
02:03:29,350 --> 02:03:34,660
happening say here you know no matter

1979
02:03:32,920 --> 02:03:36,609
which way you pick it you're probably

1980
02:03:34,659 --> 02:03:39,699
going to get something relatively ugly

1981
02:03:36,609 --> 02:03:42,939
it just feels like so I don't know that

1982
02:03:39,699 --> 02:03:45,639
that's really attacking enough of the

1983
02:03:42,939 --> 02:03:47,589
problem like I think you would get a but

1984
02:03:45,640 --> 02:03:49,600
if you swap the order of this triangle

1985
02:03:47,590 --> 02:03:51,940
for example you just get a bright band

1986
02:03:49,600 --> 02:03:53,980
with a dark edge instead of a dark band

1987
02:03:51,939 --> 02:03:55,869
with a bright edge so I don't I don't

1988
02:03:53,979 --> 02:04:00,699
really think that's going to solve the

1989
02:03:55,869 --> 02:04:02,829
problem much the problem is understand

1990
02:04:00,699 --> 02:04:05,909
is that it's understand fell'd not that

1991
02:04:02,829 --> 02:04:08,909
it just happens to have one of the

1992
02:04:05,909 --> 02:04:08,909
rotations

1993
02:04:28,630 --> 02:04:34,119
I have brand the hard the hardware

1994
02:04:32,109 --> 02:04:37,920
render is running right now it's just

1995
02:04:34,119 --> 02:04:37,920
the lighting is happening in software

1996
02:04:44,099 --> 02:04:48,060
Carrie Johansson so I had the idea of

1997
02:04:46,738 --> 02:04:50,689
maintaining all geometry in a

1998
02:04:48,060 --> 02:04:52,829
geometrically determined hash table

1999
02:04:50,689 --> 02:04:55,259
computing the trajectory of the

2000
02:04:52,828 --> 02:04:58,710
reflections and looking up where the

2001
02:04:55,260 --> 02:05:00,179
resulting geometry is that's something

2002
02:04:58,710 --> 02:05:06,868
that would be workable or am I missing

2003
02:05:00,179 --> 02:05:08,670
something um so I don't necessarily know

2004
02:05:06,868 --> 02:05:10,618
if you're missing something or not just

2005
02:05:08,670 --> 02:05:13,770
from the question it depends on how

2006
02:05:10,618 --> 02:05:16,198
you're thinking about it let me just

2007
02:05:13,770 --> 02:05:18,449
give you some food for thought there and

2008
02:05:16,198 --> 02:05:22,469
then you can decide for yourself whether

2009
02:05:18,448 --> 02:05:24,178
you're missing something a geometrically

2010
02:05:22,469 --> 02:05:27,239
determined hash table is a hash table

2011
02:05:24,179 --> 02:05:35,460
that basically takes some kind of an

2012
02:05:27,238 --> 02:05:38,669
input position like say X Y Z and hashes

2013
02:05:35,460 --> 02:05:41,069
it to a particular value you know some

2014
02:05:38,670 --> 02:05:42,989
32-bit value or something so that you

2015
02:05:41,069 --> 02:05:45,090
can then look it up in a hash table and

2016
02:05:42,988 --> 02:05:50,339
see whether there's anything else that

2017
02:05:45,090 --> 02:05:53,639
matches this XYZ right so the problem

2018
02:05:50,340 --> 02:05:56,039
with this is that it's very good for if

2019
02:05:53,639 --> 02:05:57,659
you just have points and you want to

2020
02:05:56,039 --> 02:05:59,488
know whether you've seen a particular

2021
02:05:57,658 --> 02:06:03,059
point before that can be pretty handy

2022
02:05:59,488 --> 02:06:04,559
right but with something like lighting

2023
02:06:03,060 --> 02:06:06,539
what you're typically doing is looking

2024
02:06:04,560 --> 02:06:13,020
at volume through space like lines

2025
02:06:06,539 --> 02:06:17,760
through space or or cones through space

2026
02:06:13,020 --> 02:06:19,829
right and this makes geometric hashing a

2027
02:06:17,760 --> 02:06:22,530
lot harder the reason it makes geometric

2028
02:06:19,828 --> 02:06:25,309
hashing a lot harder is because how do

2029
02:06:22,529 --> 02:06:30,509
you define a line through space right

2030
02:06:25,310 --> 02:06:33,119
well a line through space is going to

2031
02:06:30,510 --> 02:06:35,250
have to be parametrized somehow so one

2032
02:06:33,118 --> 02:06:38,158
way you could do it is is parameterize

2033
02:06:35,250 --> 02:06:39,300
based on just a normal but if you think

2034
02:06:38,158 --> 02:06:41,879
about it that's really not enough

2035
02:06:39,300 --> 02:06:44,130
because just the normal doesn't tell you

2036
02:06:41,880 --> 02:06:46,020
that that only gives you the lines

2037
02:06:44,130 --> 02:06:49,289
through space that happen from the

2038
02:06:46,020 --> 02:06:54,139
origin you really need a point plus a

2039
02:06:49,289 --> 02:06:54,139
normal to define a raycast right

2040
02:06:54,689 --> 02:06:59,849
but if you want all of the things that

2041
02:06:57,119 --> 02:07:00,960
lie along this line in space then what

2042
02:06:59,850 --> 02:07:03,630
you need to do is come up with a

2043
02:07:00,960 --> 02:07:05,520
canonicalized way of representing P and

2044
02:07:03,630 --> 02:07:08,159
can just be the normal that you're

2045
02:07:05,520 --> 02:07:09,870
looking for but P would have to be some

2046
02:07:08,159 --> 02:07:16,409
canonical representation now that's not

2047
02:07:09,869 --> 02:07:22,590
so hard right you could probably figure

2048
02:07:16,409 --> 02:07:25,619
out a way to canonicalize P so that any

2049
02:07:22,590 --> 02:07:26,520
line in space could then be represented

2050
02:07:25,619 --> 02:07:29,219
in this way

2051
02:07:26,520 --> 02:07:32,370
right that's not that hard we could

2052
02:07:29,219 --> 02:07:34,230
figure out ways to do that so I agree

2053
02:07:32,369 --> 02:07:40,140
that we could get a hash table that was

2054
02:07:34,229 --> 02:07:44,429
like px py PZ and x and y and z and

2055
02:07:40,140 --> 02:07:47,520
really I really this is overdetermined

2056
02:07:44,430 --> 02:07:49,619
really you only need two of these so to

2057
02:07:47,520 --> 02:07:52,199
be a little more explicit here if you

2058
02:07:49,619 --> 02:07:53,670
imagine what we're doing here if you

2059
02:07:52,198 --> 02:07:55,349
take the origin and we'll just do it in

2060
02:07:53,670 --> 02:07:57,420
2d because it's easier for you to

2061
02:07:55,350 --> 02:08:01,079
visualize so let's suppose we were just

2062
02:07:57,420 --> 02:08:04,079
doing this in 2d so here's the 2d grid

2063
02:08:01,079 --> 02:08:05,880
and I take a particular normal that goes

2064
02:08:04,079 --> 02:08:09,059
in a direction right here's the normal

2065
02:08:05,880 --> 02:08:11,760
that goes in a direction and what I want

2066
02:08:09,060 --> 02:08:14,460
to do is I want to say well okay from

2067
02:08:11,760 --> 02:08:17,100
the origin all I would need is a normal

2068
02:08:14,460 --> 02:08:18,569
X normal Y all I would need is that and

2069
02:08:17,100 --> 02:08:20,460
really even that's over determined I

2070
02:08:18,569 --> 02:08:23,099
could just use a theta I could use one

2071
02:08:20,460 --> 02:08:26,430
value that would tell me what the angle

2072
02:08:23,100 --> 02:08:28,829
was and I'd be done but now the question

2073
02:08:26,430 --> 02:08:30,840
is what if I wanted to represents a line

2074
02:08:28,829 --> 02:08:33,600
through space that started here right

2075
02:08:30,840 --> 02:08:38,010
this line through space cannot be

2076
02:08:33,600 --> 02:08:41,760
represented by any value that we've just

2077
02:08:38,010 --> 02:08:43,680
put here so what I need to do in 2d is I

2078
02:08:41,760 --> 02:08:47,579
need to introduce one more variable

2079
02:08:43,680 --> 02:08:51,180
which is the amount of slide relative to

2080
02:08:47,579 --> 02:08:54,448
the perpendicular to that right so the

2081
02:08:51,180 --> 02:08:56,789
perp of N going in the opposite

2082
02:08:54,448 --> 02:08:59,059
direction that's the direction

2083
02:08:56,789 --> 02:09:02,819
perpendicular direction I need to

2084
02:08:59,060 --> 02:09:04,199
introduce a displacement along that so

2085
02:09:02,819 --> 02:09:05,698
that if I wanted to represent this I

2086
02:09:04,198 --> 02:09:08,250
would start with this which I can

2087
02:09:05,698 --> 02:09:11,579
represent and then produce D

2088
02:09:08,250 --> 02:09:14,399
this to bring it to here right so I

2089
02:09:11,579 --> 02:09:16,199
definitely can produce those things so

2090
02:09:14,399 --> 02:09:18,420
that gives me something I could look up

2091
02:09:16,199 --> 02:09:20,970
into my hash table so that for every

2092
02:09:18,420 --> 02:09:23,760
line through space I can get a hash on

2093
02:09:20,970 --> 02:09:27,630
that line in space now here comes the

2094
02:09:23,760 --> 02:09:32,220
problem the problem is well what do you

2095
02:09:27,630 --> 02:09:35,550
put into that hash table what do you put

2096
02:09:32,220 --> 02:09:39,659
into it suppose that I have a thing that

2097
02:09:35,550 --> 02:09:44,279
I would like to hit and so I want any

2098
02:09:39,659 --> 02:09:46,439
line through space to have that you know

2099
02:09:44,279 --> 02:09:49,109
to have this be in that hash well

2100
02:09:46,439 --> 02:09:52,049
there's an infinite number of lines that

2101
02:09:49,109 --> 02:09:54,750
hit that thing so I can't very well hash

2102
02:09:52,050 --> 02:09:57,840
this way right so that I think

2103
02:09:54,750 --> 02:10:00,149
immediately disqualifies you from doing

2104
02:09:57,840 --> 02:10:02,760
any kind of hashing based around the

2105
02:10:00,149 --> 02:10:04,199
actual lookup you're doing so that means

2106
02:10:02,760 --> 02:10:05,430
you would then have to go and say all

2107
02:10:04,199 --> 02:10:09,090
right the kind of hash I'm going to do

2108
02:10:05,430 --> 02:10:12,780
instead is a hash based on say some kind

2109
02:10:09,090 --> 02:10:16,440
of spatial occupancy so if the thing

2110
02:10:12,779 --> 02:10:18,449
that I'm talking about happens to be in

2111
02:10:16,439 --> 02:10:20,489
this region I will hash it with this

2112
02:10:18,449 --> 02:10:23,399
point so it's like a discreet hash right

2113
02:10:20,489 --> 02:10:25,590
it's basically a sparse voxel at that

2114
02:10:23,399 --> 02:10:28,619
point that's all your hash table is and

2115
02:10:25,590 --> 02:10:29,310
again the problem is now how do you cast

2116
02:10:28,619 --> 02:10:31,109
against it

2117
02:10:29,310 --> 02:10:33,450
well if I'm going to cast against it I

2118
02:10:31,109 --> 02:10:35,909
now have to cast through a sparse voxel

2119
02:10:33,449 --> 02:10:37,859
if it's a hash table I don't even have

2120
02:10:35,909 --> 02:10:40,079
any structure to the farc sparse voxel

2121
02:10:37,859 --> 02:10:42,899
so I'm going to have to cast you every

2122
02:10:40,079 --> 02:10:45,930
voxel point looking up along the way the

2123
02:10:42,899 --> 02:10:47,759
query as I go right looking to see if

2124
02:10:45,930 --> 02:10:49,920
there's anything in there and again I

2125
02:10:47,760 --> 02:10:51,840
would say why not just use a sparse lock

2126
02:10:49,920 --> 02:10:53,609
tree right why not just use something

2127
02:10:51,840 --> 02:10:55,789
with more structure so that you can move

2128
02:10:53,609 --> 02:11:01,380
your ray along faster or something right

2129
02:10:55,789 --> 02:11:03,449
so I guess what I would say is I don't

2130
02:11:01,380 --> 02:11:05,779
know does that give you does that cover

2131
02:11:03,449 --> 02:11:08,909
the ways you were thinking about it and

2132
02:11:05,779 --> 02:11:11,189
do you still think that that would be

2133
02:11:08,909 --> 02:11:12,510
productive or not if the answer is that

2134
02:11:11,189 --> 02:11:16,109
doesn't cover the way you're thinking

2135
02:11:12,510 --> 02:11:18,060
about it tell me what's that way was and

2136
02:11:16,109 --> 02:11:19,799
I'll take a look at that if it does

2137
02:11:18,060 --> 02:11:22,050
comes where you're thinking about it and

2138
02:11:19,800 --> 02:11:23,279
you don't think that

2139
02:11:22,050 --> 02:11:25,350
means that it wouldn't be a very good

2140
02:11:23,279 --> 02:11:26,880
way to do it then you have answered your

2141
02:11:25,350 --> 02:11:31,860
question that no you are not missing

2142
02:11:26,880 --> 02:11:33,150
something if however you now no longer

2143
02:11:31,859 --> 02:11:35,689
think it's a good idea then I guess the

2144
02:11:33,149 --> 02:11:38,689
answer was you were missing something I

2145
02:11:35,689 --> 02:11:38,689
guess

2146
02:12:12,909 --> 02:12:26,349
[Music]

2147
02:12:17,770 --> 02:12:29,570
why is my chat not updating oh man

2148
02:12:26,350 --> 02:12:35,180
scientist connectives again my hex chat

2149
02:12:29,569 --> 02:12:37,250
has been really not working like really

2150
02:12:35,180 --> 02:12:38,960
not working it used to work just fine

2151
02:12:37,250 --> 02:12:41,300
and now it doesn't work hardly at all I

2152
02:12:38,960 --> 02:12:43,130
don't know what happened but it like

2153
02:12:41,300 --> 02:12:45,940
constantly disconnects and I miss

2154
02:12:43,130 --> 02:12:45,940
messages now

2155
02:12:54,300 --> 02:13:01,320
just so I'm sorry if you asked the

2156
02:12:56,699 --> 02:13:04,559
question after Gary Johansson's I have

2157
02:13:01,319 --> 02:13:07,019
not seen it because text/chat decided to

2158
02:13:04,560 --> 02:13:09,560
not talk to the server anymore because

2159
02:13:07,020 --> 02:13:09,560
why not

2160
02:13:37,469 --> 02:13:42,300
yeah this is a Linux machine so I can

2161
02:13:40,289 --> 02:13:49,680
definitely switch to WeChat if it works

2162
02:13:42,300 --> 02:13:50,969
well I could try that I would be happy

2163
02:13:49,680 --> 02:13:55,020
to try and do when context chat has been

2164
02:13:50,969 --> 02:13:56,579
really unreliable and there's nothing in

2165
02:13:55,020 --> 02:13:58,260
particular that I like about it I mean

2166
02:13:56,579 --> 02:14:00,300
I'm just using it to view the chat so I

2167
02:13:58,260 --> 02:14:02,039
don't need like as I just need something

2168
02:14:00,300 --> 02:14:04,400
that will be reliable it doesn't have to

2169
02:14:02,039 --> 02:14:04,399
be fancy

2170
02:14:26,389 --> 02:14:32,118
criminate er one one seven yeah those

2171
02:14:29,479 --> 02:14:34,939
vertex banding patterns that you see are

2172
02:14:32,118 --> 02:14:36,618
very distinct and they are just that is

2173
02:14:34,939 --> 02:14:39,769
what happens when you just interpolate

2174
02:14:36,618 --> 02:14:42,500
along points in space linearly and don't

2175
02:14:39,770 --> 02:14:44,480
do any recomputation inside is you get

2176
02:14:42,500 --> 02:14:46,819
these linear bands because that's what

2177
02:14:44,479 --> 02:14:50,839
should happen it's correct unfortunately

2178
02:14:46,819 --> 02:14:53,269
it's not pleasing and so if you're

2179
02:14:50,840 --> 02:14:54,949
relying on that to generate some kind of

2180
02:14:53,270 --> 02:14:57,830
nice results for you a lot of times it

2181
02:14:54,948 --> 02:15:01,329
won't it's why Phong shading is better

2182
02:14:57,829 --> 02:15:01,329
than Goro shading for example

2183
02:15:21,569 --> 02:15:25,859
derp circular would it be possible to

2184
02:15:23,399 --> 02:15:27,569
write a transpiler so that we could take

2185
02:15:25,859 --> 02:15:30,658
the C code and run it on the GPU

2186
02:15:27,569 --> 02:15:37,590
trivially after debugging on the CPU yes

2187
02:15:30,658 --> 02:15:39,598
and no so the primary problem and the

2188
02:15:37,590 --> 02:15:41,340
reason why I want to do it on the GPU on

2189
02:15:39,599 --> 02:15:43,710
the CPU rather in the first place is

2190
02:15:41,340 --> 02:15:46,319
that the kinds of things that run fast

2191
02:15:43,710 --> 02:15:49,880
on GPUs are not the same as the things

2192
02:15:46,319 --> 02:15:52,139
that run fast on CPU is necessarily or

2193
02:15:49,880 --> 02:15:55,380
maybe I should say that the other way

2194
02:15:52,139 --> 02:15:56,670
around so because typically if you do

2195
02:15:55,380 --> 02:15:59,880
have something that runs fast on a GPU

2196
02:15:56,670 --> 02:16:03,389
it will run fast on a CPU as well what

2197
02:15:59,880 --> 02:16:07,739
I'm more meant to say was CPUs can do a

2198
02:16:03,389 --> 02:16:09,840
lot of things GPUs can't write GPUs are

2199
02:16:07,738 --> 02:16:14,399
set up very specifically for low clock

2200
02:16:09,840 --> 02:16:19,139
rate narrow cache like highly memory

2201
02:16:14,399 --> 02:16:23,219
coherent workloads that are wide Sindhi

2202
02:16:19,139 --> 02:16:25,739
very wide right and I don't want to have

2203
02:16:23,219 --> 02:16:31,020
to think about how to make the lighting

2204
02:16:25,738 --> 02:16:35,549
code work properly i under those

2205
02:16:31,020 --> 02:16:38,939
constraints yet so it's not that we

2206
02:16:35,549 --> 02:16:40,768
couldn't make exactly what we write run

2207
02:16:38,939 --> 02:16:42,300
on the GPU because GPUs are pretty

2208
02:16:40,769 --> 02:16:45,239
general-purpose these days so we could

2209
02:16:42,299 --> 02:16:48,090
we could get that to work the problem is

2210
02:16:45,239 --> 02:16:49,799
we wouldn't want to write the problem is

2211
02:16:48,090 --> 02:16:52,829
what we want to do is get the lighting

2212
02:16:49,799 --> 02:16:56,608
solution working nicely here then do a

2213
02:16:52,829 --> 02:17:00,718
pass where we rewrite it to be efficient

2214
02:16:56,609 --> 02:17:07,318
and streamed properly for a GPU setting

2215
02:17:00,718 --> 02:17:11,279
and so yeah I wish there was a way that

2216
02:17:07,318 --> 02:17:14,189
that could automatically happen but it's

2217
02:17:11,280 --> 02:17:17,149
it's not really something that can be

2218
02:17:14,189 --> 02:17:17,148
automated at this point

2219
02:17:23,299 --> 02:17:28,769
chaos calm in your lighting formula you

2220
02:17:25,889 --> 02:17:31,170
use negative spans like negatives span 1

2221
02:17:28,770 --> 02:17:33,060
0 what if if everything is supposed to

2222
02:17:31,170 --> 02:17:35,370
be displaced when I 0 shouldn't you have

2223
02:17:33,059 --> 02:17:36,899
plus 0.75 at some point instead of

2224
02:17:35,370 --> 02:17:40,020
something night and said something

2225
02:17:36,899 --> 02:17:42,479
negative yes but remember I didn't base

2226
02:17:40,020 --> 02:17:44,220
it off of vertex zero I ended up basing

2227
02:17:42,479 --> 02:17:46,850
it off of whatever vertex we were

2228
02:17:44,219 --> 02:17:52,199
actually trying to put ourselves on

2229
02:17:46,850 --> 02:17:53,940
right that's why if I had based it off

2230
02:17:52,200 --> 02:17:57,140
of vertex zero than yeah they would be

2231
02:17:53,940 --> 02:17:57,140
0.75 and so on

2232
02:18:14,739 --> 02:18:22,989
you're using a square so why not filter

2233
02:18:18,308 --> 02:18:26,228
by linearly along the square axes rather

2234
02:18:22,989 --> 02:18:31,629
than interpolating over the triangles

2235
02:18:26,228 --> 02:18:39,489
that should avoid the diagonal seems not

2236
02:18:31,629 --> 02:18:45,459
oh oh okay I think I see what you're

2237
02:18:39,489 --> 02:18:51,690
saying so you're basically saying do a

2238
02:18:45,459 --> 02:18:51,689
UV interpolation style like that like a

2239
02:18:52,019 --> 02:19:04,569
what's the word I'm looking for so if

2240
02:19:01,388 --> 02:19:07,388
I'm catching you correctly you're asking

2241
02:19:04,569 --> 02:19:09,340
could we do something like this so right

2242
02:19:07,388 --> 02:19:12,279
now what's happening is the graphics

2243
02:19:09,340 --> 02:19:13,540
card is drawing these like so so what

2244
02:19:12,280 --> 02:19:16,750
it's doing is this turbo its

2245
02:19:13,540 --> 02:19:20,110
interpolating you know here to here here

2246
02:19:16,750 --> 02:19:22,420
to here and here to here right so

2247
02:19:20,110 --> 02:19:25,809
basically like as it walks down this

2248
02:19:22,420 --> 02:19:29,409
line it's just interpolating down to

2249
02:19:25,808 --> 02:19:31,209
this value right what you're asking is

2250
02:19:29,409 --> 02:19:33,760
would it improve matters if instead we

2251
02:19:31,209 --> 02:19:36,968
did a bilinear where first we produce

2252
02:19:33,760 --> 02:19:40,239
the blend between these two and then we

2253
02:19:36,968 --> 02:19:44,308
produce the blend between here right if

2254
02:19:40,239 --> 02:19:48,940
I think that's what you're asking and

2255
02:19:44,308 --> 02:19:53,559
the answer there is it might it might

2256
02:19:48,940 --> 02:19:57,930
improve things and unfortunately I'm not

2257
02:19:53,559 --> 02:20:08,769
sure exactly how to test that quickly

2258
02:19:57,930 --> 02:20:10,210
because we are sort of forced to go

2259
02:20:08,770 --> 02:20:12,640
through the standard rendering pipeline

2260
02:20:10,209 --> 02:20:17,079
here I guess I think we would have to do

2261
02:20:12,639 --> 02:20:21,039
is sort of in our pixel shader we'd have

2262
02:20:17,079 --> 02:20:26,200
to output these four values in to the

2263
02:20:21,040 --> 02:20:28,120
pixel shader per per vertex so that when

2264
02:20:26,200 --> 02:20:29,680
it was interpolating them

2265
02:20:28,120 --> 02:20:39,939
pixel shader could have said do the

2266
02:20:29,680 --> 02:20:41,800
interpolation right like I said I don't

2267
02:20:39,939 --> 02:20:49,870
think it's a bad idea I just we can't

2268
02:20:41,799 --> 02:20:55,449
really test it right now right but I do

2269
02:20:49,870 --> 02:21:01,770
think it's a reasonable idea I you know

2270
02:20:55,450 --> 02:21:01,770
maybe we could try tomorrow so

2271
02:21:06,859 --> 02:21:13,370
and yeah Capcom it's true that light

2272
02:21:09,319 --> 02:21:15,379
doesn't behave linearly but remember we

2273
02:21:13,370 --> 02:21:16,609
only really care about whether it looks

2274
02:21:15,379 --> 02:21:19,398
okay

2275
02:21:16,609 --> 02:21:21,050
we don't care how accurate it is we just

2276
02:21:19,398 --> 02:21:25,279
care that it looks like it's behaving

2277
02:21:21,049 --> 02:21:28,188
light like so if we get a good enough

2278
02:21:25,280 --> 02:21:33,079
result in terms of visual quality it's

2279
02:21:28,189 --> 02:21:34,639
okay if it's not really all that related

2280
02:21:33,079 --> 02:21:38,809
to what the real lighting solution

2281
02:21:34,639 --> 02:21:41,269
should be so I'm certainly willing to

2282
02:21:38,809 --> 02:21:44,809
try if we could make a different

2283
02:21:41,270 --> 02:21:46,670
interpolation mechanism that you know

2284
02:21:44,809 --> 02:21:50,239
eliminated the banding and just produce

2285
02:21:46,670 --> 02:21:53,750
relatively nice results then that would

2286
02:21:50,239 --> 02:21:55,909
be a win I think it doesn't you know

2287
02:21:53,750 --> 02:21:57,228
maybe this particular one won't work but

2288
02:21:55,909 --> 02:21:59,869
that doesn't mean that something

2289
02:21:57,228 --> 02:22:02,920
wouldn't work right like and so it is an

2290
02:21:59,870 --> 02:22:12,590
area that's worth examining

2291
02:22:02,920 --> 02:22:17,510
to say the least all right I'm going to

2292
02:22:12,590 --> 02:22:21,189
go ahead and wrap it up actually I

2293
02:22:17,510 --> 02:22:21,189
should close some of these down goodbye

2294
02:22:24,069 --> 02:22:27,500
all right thank you everyone for joining

2295
02:22:25,969 --> 02:22:29,478
me for an upstart of hand made here at

2296
02:22:27,500 --> 02:22:31,398
San pecheur coding with you as always if

2297
02:22:29,478 --> 02:22:32,750
you would like to follow along at home

2298
02:22:31,398 --> 02:22:34,069
you can always peer to the game on hand

2299
02:22:32,750 --> 02:22:36,439
made here at Oregon comes with the

2300
02:22:34,069 --> 02:22:37,309
source code so you can test out things

2301
02:22:36,439 --> 02:22:39,319
for yourself

2302
02:22:37,309 --> 02:22:40,969
we also forum site and go to class

2303
02:22:39,319 --> 02:22:42,859
questions the patreon page you want

2304
02:22:40,969 --> 02:22:44,809
support the video series a schedule bot

2305
02:22:42,859 --> 02:22:47,450
that tweets the schedule at you an

2306
02:22:44,809 --> 02:22:50,329
episode guide that you can use to catch

2307
02:22:47,450 --> 02:22:52,189
up on past episodes and of course a

2308
02:22:50,329 --> 02:22:54,379
little button that you can use to view

2309
02:22:52,189 --> 02:22:56,780
the show it's not live now it will be

2310
02:22:54,379 --> 02:23:00,170
live as i refresh the page will be live

2311
02:22:56,780 --> 02:23:03,050
in 20 hours and that is true we will be

2312
02:23:00,170 --> 02:23:05,359
back tomorrow for some more light coding

2313
02:23:03,049 --> 02:23:06,769
hopefully everything worked fine from

2314
02:23:05,359 --> 02:23:08,420
the news stream you set up I didn't hear

2315
02:23:06,770 --> 02:23:14,210
anyone say the stream went down so that

2316
02:23:08,420 --> 02:23:17,210
seems pretty good but that's yeah that's

2317
02:23:14,209 --> 02:23:18,829
about it until then have fun programming

2318
02:23:17,209 --> 02:23:19,819
and I'll see everyone on the Internet

2319
02:23:18,829 --> 02:23:21,879
take it easy everybody

2320
02:23:19,819 --> 02:23:21,879
you

