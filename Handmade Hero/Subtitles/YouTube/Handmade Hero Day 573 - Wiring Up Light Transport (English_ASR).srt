1
00:00:00,030 --> 00:00:03,509
hello everybody and welcome to hand made

2
00:00:02,459 --> 00:00:06,509
here oh sure we could a complete-game

3
00:00:03,509 --> 00:00:09,660
live on stream we just got done patching

4
00:00:06,509 --> 00:00:11,669
the stupid call that does the stupid

5
00:00:09,660 --> 00:00:13,199
query - stupid twitch to see if the

6
00:00:11,669 --> 00:00:15,539
stream is live which they changed the

7
00:00:13,199 --> 00:00:18,269
API for no frickin reason so we had to

8
00:00:15,539 --> 00:00:20,399
go do that and so now in theory the

9
00:00:18,269 --> 00:00:22,679
watch page is working again because now

10
00:00:20,399 --> 00:00:24,239
it's using the new API exactly the same

11
00:00:22,679 --> 00:00:27,359
as the old API but they changed the

12
00:00:24,239 --> 00:00:30,439
words so that was great let's go ahead

13
00:00:27,359 --> 00:00:33,809
and and jump into what we're doing today

14
00:00:30,439 --> 00:00:35,909
we are trying to work on our lighting

15
00:00:33,808 --> 00:00:38,238
algorithm here there's the little curl

16
00:00:35,909 --> 00:00:41,369
hanging around from that twitch

17
00:00:38,238 --> 00:00:45,419
extravaganza there let me go ahead and

18
00:00:41,369 --> 00:00:48,238
load up a run of the program here so you

19
00:00:45,420 --> 00:00:50,100
can see where we were at last stream we

20
00:00:48,238 --> 00:00:52,769
got blending working in a rudimentary

21
00:00:50,100 --> 00:00:55,020
way and the voxel stabilized so that as

22
00:00:52,770 --> 00:00:56,609
we hop around and go between things as

23
00:00:55,020 --> 00:00:59,219
you can see now the lighting is very

24
00:00:56,609 --> 00:01:01,679
stable and does smooth blending as you

25
00:00:59,219 --> 00:01:03,899
go and I don't know there may be some

26
00:01:01,679 --> 00:01:07,319
errors in it we don't really know we

27
00:01:03,899 --> 00:01:09,118
just kind of barely did that we do have

28
00:01:07,319 --> 00:01:10,859
a couple things we probably need to work

29
00:01:09,118 --> 00:01:12,900
on like for example you can kind of see

30
00:01:10,859 --> 00:01:16,769
we don't for whatever reason we've got

31
00:01:12,900 --> 00:01:18,600
some we've got some issues with how we

32
00:01:16,769 --> 00:01:22,199
pull things into the active said you can

33
00:01:18,599 --> 00:01:23,849
see the way I'm looking at it here when

34
00:01:22,200 --> 00:01:25,560
you have a large room like this and we

35
00:01:23,849 --> 00:01:26,938
grab a room off the other end you can

36
00:01:25,560 --> 00:01:30,689
see there's there's a chance you just

37
00:01:26,938 --> 00:01:32,069
won't grab enough stuff so we do have a

38
00:01:30,688 --> 00:01:33,839
little bit of an issue with the way

39
00:01:32,069 --> 00:01:35,069
we're doing our bounds I'm not going to

40
00:01:33,840 --> 00:01:36,478
worry too much about that right now

41
00:01:35,069 --> 00:01:38,309
those are the sorts of things that we

42
00:01:36,478 --> 00:01:40,590
can probably clean up later on in the

43
00:01:38,310 --> 00:01:42,689
pipe so I'm not really worried about

44
00:01:40,590 --> 00:01:45,540
those but I'm just trying to see to what

45
00:01:42,688 --> 00:01:47,398
extent we we have stability here you can

46
00:01:45,540 --> 00:01:51,030
see there I'm not thrilled about what's

47
00:01:47,399 --> 00:01:53,700
going on there I think though that that

48
00:01:51,030 --> 00:01:56,310
made I don't really know that may just

49
00:01:53,700 --> 00:01:58,680
be about who's finding which light

50
00:01:56,310 --> 00:02:00,359
sources and when so I'm not going to

51
00:01:58,680 --> 00:02:02,549
worry about those exactly yet either

52
00:02:00,359 --> 00:02:04,578
because the voxel seems very stable that

53
00:02:02,549 --> 00:02:07,140
seems to just be maybe a light switch so

54
00:02:04,578 --> 00:02:09,060
most of these things I'm going to say at

55
00:02:07,140 --> 00:02:11,870
the moment we can hold off on until

56
00:02:09,060 --> 00:02:13,979
we're doing sort of different debugging

57
00:02:11,870 --> 00:02:15,360
in in a situate

58
00:02:13,979 --> 00:02:16,738
it doesn't have a hacky like light

59
00:02:15,360 --> 00:02:18,930
source choosing in there because we're

60
00:02:16,739 --> 00:02:21,330
about to get rid of that um so I'm gonna

61
00:02:18,930 --> 00:02:23,430
say that's really pretty stable for our

62
00:02:21,330 --> 00:02:25,830
purposes and that we can move on to the

63
00:02:23,430 --> 00:02:28,049
next step which is the full lighting

64
00:02:25,830 --> 00:02:29,819
solution again the main problem we're

65
00:02:28,049 --> 00:02:31,230
gonna have now is once we engage the

66
00:02:29,818 --> 00:02:32,579
full lighting solution we're going to be

67
00:02:31,229 --> 00:02:34,619
inter plating a single light field

68
00:02:32,580 --> 00:02:38,010
that's probably not really what we're

69
00:02:34,620 --> 00:02:40,530
going to want to do and and so moving up

70
00:02:38,009 --> 00:02:42,000
to the multi light field is probably

71
00:02:40,530 --> 00:02:44,219
really going to be where the problem

72
00:02:42,000 --> 00:02:45,239
comes in for us all right so that's what

73
00:02:44,219 --> 00:02:46,590
we're going to have to take a look at

74
00:02:45,239 --> 00:02:48,689
but for right now we're just gonna focus

75
00:02:46,590 --> 00:02:50,219
on getting the multi bounce in there so

76
00:02:48,689 --> 00:02:54,509
that we're not in flashlight mode but

77
00:02:50,219 --> 00:02:58,378
it's getting pretty close right okay so

78
00:02:54,509 --> 00:03:00,298
let's go ahead and and load up the part

79
00:02:58,378 --> 00:03:02,818
of the code that we haven't finished yet

80
00:03:00,299 --> 00:03:04,739
that we need to finish for today's work

81
00:03:02,818 --> 00:03:08,128
and so if I jump over to the lighting

82
00:03:04,739 --> 00:03:11,128
code here hopefully what you can see if

83
00:03:08,128 --> 00:03:14,459
I jump down to the the voxel lighting

84
00:03:11,128 --> 00:03:16,649
sample which is this code right here it

85
00:03:14,459 --> 00:03:19,319
should just have a nothing in it yeah

86
00:03:16,650 --> 00:03:21,060
right see and so we've got it to do here

87
00:03:19,318 --> 00:03:23,969
this is the thing we want to fill in and

88
00:03:21,060 --> 00:03:25,169
what has to happen this is basically you

89
00:03:23,969 --> 00:03:26,879
know there's there's nothing actually

90
00:03:25,169 --> 00:03:28,919
different that we're gonna do here it's

91
00:03:26,879 --> 00:03:30,329
just because we have part of the

92
00:03:28,919 --> 00:03:31,950
lighting down on the CPU side part of

93
00:03:30,329 --> 00:03:33,450
letting down the GPU side and that's

94
00:03:31,949 --> 00:03:36,949
because we don't really want to require

95
00:03:33,449 --> 00:03:39,418
you know video RTX part or something

96
00:03:36,949 --> 00:03:42,048
we're doing the Ray casting on the CPU

97
00:03:39,419 --> 00:03:44,730
side so what that means is that when the

98
00:03:42,049 --> 00:03:47,459
when the CPU needs to compute lighting

99
00:03:44,729 --> 00:03:50,848
at a point using last frames theta it's

100
00:03:47,459 --> 00:03:53,459
gonna have to do that using a using

101
00:03:50,848 --> 00:03:54,810
information that would normally be

102
00:03:53,459 --> 00:03:56,729
something you'd sample in the pixel

103
00:03:54,810 --> 00:03:58,049
shader so if for example we go to the Z

104
00:03:56,729 --> 00:04:01,318
bias program here that we're actually

105
00:03:58,049 --> 00:04:03,000
using for pretty much all of the the

106
00:04:01,318 --> 00:04:05,628
things that we draw you can see here

107
00:04:03,000 --> 00:04:08,909
that we have a thing called sunlight and

108
00:04:05,628 --> 00:04:11,310
sunlight is literally like the code we

109
00:04:08,909 --> 00:04:14,280
need right so if you take a look at

110
00:04:11,310 --> 00:04:15,780
what's supposed to happen care literally

111
00:04:14,280 --> 00:04:19,199
the thing that's supposed to happen is

112
00:04:15,780 --> 00:04:21,779
this right so the pixel shader is is

113
00:04:19,199 --> 00:04:23,550
already the code that we need so we know

114
00:04:21,779 --> 00:04:26,250
the code that we need

115
00:04:23,550 --> 00:04:27,680
it's literally this and we just need to

116
00:04:26,250 --> 00:04:30,500
figure out how to do that

117
00:04:27,680 --> 00:04:34,370
in our code because our code doesn't

118
00:04:30,500 --> 00:04:36,560
have it doesn't run pixel shaders right

119
00:04:34,370 --> 00:04:38,780
the pixel shader is code we wrote that

120
00:04:36,560 --> 00:04:40,819
runs on the GPU but if we look at it

121
00:04:38,779 --> 00:04:42,198
because we already did some work to help

122
00:04:40,819 --> 00:04:43,519
ourselves out because we sort of knew

123
00:04:42,199 --> 00:04:45,530
this was the case we wanted to keep

124
00:04:43,519 --> 00:04:48,109
these code paths similar what you can

125
00:04:45,529 --> 00:04:51,109
see is that we actually wrote our pixel

126
00:04:48,110 --> 00:04:53,120
shader to use exactly the same syntax as

127
00:04:51,110 --> 00:04:54,919
our regular code and we did that of

128
00:04:53,120 --> 00:04:56,750
course for those of you don't remember

129
00:04:54,918 --> 00:04:58,909
we did that by putting in a bunch of

130
00:04:56,750 --> 00:05:01,850
pound affiance which effectively turned

131
00:04:58,910 --> 00:05:03,800
pixel shader syntax into our syntax for

132
00:05:01,850 --> 00:05:06,919
the most part so if we were to just

133
00:05:03,800 --> 00:05:10,460
paste this in here with the exception of

134
00:05:06,918 --> 00:05:13,009
maybe the fact that they that you know I

135
00:05:10,459 --> 00:05:16,430
don't know why that I'm surprised it

136
00:05:13,009 --> 00:05:19,038
accepted that 2.0 F I don't think it's

137
00:05:16,430 --> 00:05:21,288
supposed to allow that I should probably

138
00:05:19,038 --> 00:05:23,029
get rid of that that must be just being

139
00:05:21,288 --> 00:05:25,939
accepted by the shader because we're

140
00:05:23,029 --> 00:05:27,409
using a later shader model or something

141
00:05:25,939 --> 00:05:30,860
but earlier shader models wouldn't have

142
00:05:27,410 --> 00:05:32,419
liked that I don't think but anyway with

143
00:05:30,860 --> 00:05:35,180
the exception of a few things like the

144
00:05:32,418 --> 00:05:38,418
fact that these should be F listed or

145
00:05:35,180 --> 00:05:40,220
whatever they're ripe effectively when

146
00:05:38,418 --> 00:05:42,288
we're doing the lighting you know what

147
00:05:40,220 --> 00:05:43,430
we want to do is basically this now we

148
00:05:42,288 --> 00:05:45,139
don't necessarily want to do exactly

149
00:05:43,430 --> 00:05:47,990
this there's going to be some changes to

150
00:05:45,139 --> 00:05:50,060
it probably and we probably want just

151
00:05:47,990 --> 00:05:50,780
pure diffuse reflection and and so on

152
00:05:50,060 --> 00:05:52,848
and so forth

153
00:05:50,779 --> 00:05:55,250
but for the most part what we want to do

154
00:05:52,848 --> 00:05:56,930
is almost exactly the same thing that we

155
00:05:55,250 --> 00:05:59,209
were doing in the pixel shader so very

156
00:05:56,930 --> 00:06:01,519
very similar and if you look at what

157
00:05:59,209 --> 00:06:03,978
that means for us really this is the

158
00:06:01,519 --> 00:06:05,659
problem so it's really just these

159
00:06:03,978 --> 00:06:09,589
texture lookups those are the things

160
00:06:05,660 --> 00:06:11,900
that we don't really know right and so

161
00:06:09,589 --> 00:06:13,159
we want some way of emulating what the

162
00:06:11,899 --> 00:06:14,839
texture Union on the ground scar is

163
00:06:13,160 --> 00:06:17,320
doing in our CPU code and that's we have

164
00:06:14,839 --> 00:06:17,319
to write today

165
00:06:20,589 --> 00:06:30,250
all right so what we want to do is focus

166
00:06:27,339 --> 00:06:32,519
on this and start here we know we want a

167
00:06:30,250 --> 00:06:35,110
sample this normal and we want to sample

168
00:06:32,519 --> 00:06:37,168
this position right so we're trying to

169
00:06:35,110 --> 00:06:39,939
find the incoming radiance at that point

170
00:06:37,168 --> 00:06:41,769
we know that we can do some of these

171
00:06:39,939 --> 00:06:43,120
things the same but some of them we

172
00:06:41,769 --> 00:06:46,000
don't really want to do so if you look

173
00:06:43,120 --> 00:06:48,639
at what's happening here right this is

174
00:06:46,000 --> 00:06:50,259
part of doing reflection for things that

175
00:06:48,639 --> 00:06:53,530
might have specularity or like a

176
00:06:50,259 --> 00:06:56,469
reflective component to them that has to

177
00:06:53,529 --> 00:06:59,409
do with the angle of view since we're

178
00:06:56,470 --> 00:07:01,210
moving light around a scene at the

179
00:06:59,410 --> 00:07:04,270
moment I don't know that we really want

180
00:07:01,209 --> 00:07:06,219
that maybe we do I mean you could argue

181
00:07:04,269 --> 00:07:07,689
that that is kind of how it should be

182
00:07:06,220 --> 00:07:10,570
working that we should still be taking

183
00:07:07,689 --> 00:07:12,279
this into account in terms of specular

184
00:07:10,569 --> 00:07:13,930
reflections so you know maybe that's

185
00:07:12,279 --> 00:07:15,879
true and maybe we want to leave that in

186
00:07:13,930 --> 00:07:18,668
there I don't know if that's the case

187
00:07:15,879 --> 00:07:20,889
though what we need to know when we do

188
00:07:18,668 --> 00:07:23,978
compute voxel radiance is we don't

189
00:07:20,889 --> 00:07:25,449
really want world P - camera P that is

190
00:07:23,978 --> 00:07:26,709
saying what light is going to be

191
00:07:25,449 --> 00:07:29,019
reflected back to the viewer and

192
00:07:26,709 --> 00:07:30,788
remember that's fine for computing what

193
00:07:29,019 --> 00:07:32,918
the visible pixels color should be what

194
00:07:30,788 --> 00:07:34,089
we're looking at it but what we would

195
00:07:32,918 --> 00:07:37,659
want to do if we wanted to simulate

196
00:07:34,089 --> 00:07:39,939
specularity in a bounce like this is we

197
00:07:37,660 --> 00:07:42,340
want to know what the query rate is so

198
00:07:39,939 --> 00:07:45,219
effectively what we want here is like an

199
00:07:42,339 --> 00:07:46,239
input you know an eye parameter there

200
00:07:45,220 --> 00:07:48,610
right that's going to give us that

201
00:07:46,240 --> 00:07:50,288
information back and arguably what we

202
00:07:48,610 --> 00:07:51,810
probably should have done here is sent

203
00:07:50,288 --> 00:07:57,250
that in and the reason that I say that

204
00:07:51,810 --> 00:07:59,829
is because if you look at the the get

205
00:07:57,250 --> 00:08:02,110
irradiance sorry the compute voxel

206
00:07:59,829 --> 00:08:04,569
function here this maybe should have got

207
00:08:02,110 --> 00:08:05,770
passed into this anyway because you know

208
00:08:04,569 --> 00:08:07,060
maybe you want to sample it from more

209
00:08:05,769 --> 00:08:09,519
than one direction for some reason or

210
00:08:07,060 --> 00:08:11,860
something you know but anyway so we have

211
00:08:09,519 --> 00:08:14,349
like in incidence here which is like the

212
00:08:11,860 --> 00:08:17,740
out you know the outgoing direction or

213
00:08:14,350 --> 00:08:19,120
whatever and it's really the incoming

214
00:08:17,740 --> 00:08:20,800
direction you can see it's world P -

215
00:08:19,120 --> 00:08:24,280
camera P so it's the it's the you know

216
00:08:20,800 --> 00:08:27,728
in pointing direction so this is like

217
00:08:24,279 --> 00:08:29,288
the incidence I guess we'll call it and

218
00:08:27,728 --> 00:08:31,149
so if we want to do that what we need is

219
00:08:29,288 --> 00:08:32,889
is we just need someone to pass that in

220
00:08:31,149 --> 00:08:33,959
to us and tell us like what direction

221
00:08:32,889 --> 00:08:36,240
were you trying to stamp

222
00:08:33,960 --> 00:08:37,650
right but once we have that then we have

223
00:08:36,240 --> 00:08:39,029
all the same information that we needed

224
00:08:37,649 --> 00:08:41,009
here so we can pretty much do everything

225
00:08:39,029 --> 00:08:43,709
that we needed it to right we compute

226
00:08:41,009 --> 00:08:45,389
that our value this stuff is what we'll

227
00:08:43,710 --> 00:08:47,430
have to change a little bit just to make

228
00:08:45,389 --> 00:08:48,509
sure that we're computing the voxel

229
00:08:47,429 --> 00:08:50,459
information in the same way but

230
00:08:48,509 --> 00:08:51,929
basically that is what we want we're

231
00:08:50,460 --> 00:08:53,490
then going to ask the light sampler to

232
00:08:51,929 --> 00:08:56,159
give us back this information and since

233
00:08:53,490 --> 00:08:57,779
we know that we're not sampling fours we

234
00:08:56,159 --> 00:08:59,490
can actually just change this to be

235
00:08:57,779 --> 00:09:01,049
effectively sampling threes everywhere

236
00:08:59,490 --> 00:09:03,720
because we don't have this this isn't

237
00:09:01,049 --> 00:09:06,000
encoded right so we don't actually have

238
00:09:03,720 --> 00:09:10,649
to do that either we can just sort of do

239
00:09:06,000 --> 00:09:12,450
this in a simpler way okay so we can do

240
00:09:10,649 --> 00:09:14,610
this this would sample all of the things

241
00:09:12,450 --> 00:09:16,200
that we have there and then when we

242
00:09:14,610 --> 00:09:18,450
compute the light data here

243
00:09:16,200 --> 00:09:20,310
that's the outgoing light data that

244
00:09:18,450 --> 00:09:21,960
we're going to sample we could pretty

245
00:09:20,309 --> 00:09:25,679
much just capture all of that

246
00:09:21,960 --> 00:09:29,060
information as we go right so if we do

247
00:09:25,679 --> 00:09:31,409
that all we would have to do is you know

248
00:09:29,059 --> 00:09:33,209
emulate now they get irradiance call it

249
00:09:31,409 --> 00:09:35,309
would be past the light information and

250
00:09:33,210 --> 00:09:37,440
the reflectance here so that information

251
00:09:35,309 --> 00:09:39,719
would come out here and you can see it's

252
00:09:37,440 --> 00:09:42,510
gonna do literally just exactly this

253
00:09:39,720 --> 00:09:44,610
call about this code rather the only

254
00:09:42,509 --> 00:09:46,710
difference is the light value here can

255
00:09:44,610 --> 00:09:50,100
actually be the light color directly so

256
00:09:46,710 --> 00:09:52,530
that information doesn't have to be sort

257
00:09:50,100 --> 00:09:54,960
of I don't the word you want to use is

258
00:09:52,529 --> 00:09:56,309
decoded I guess like it does have to be

259
00:09:54,960 --> 00:09:58,379
in the pixel shader so if that light

260
00:09:56,309 --> 00:10:00,539
color here this stuff doesn't have to

261
00:09:58,379 --> 00:10:03,629
happen because we just have the actual

262
00:10:00,539 --> 00:10:06,509
light unencoded so this would work

263
00:10:03,629 --> 00:10:09,480
directly and the rest of this would not

264
00:10:06,509 --> 00:10:12,210
have to be you know nothing special

265
00:10:09,480 --> 00:10:14,700
would have to happen here so basically

266
00:10:12,210 --> 00:10:15,450
this exact code path should actually be

267
00:10:14,700 --> 00:10:17,340
fine

268
00:10:15,450 --> 00:10:19,290
and what we want to do now is just kind

269
00:10:17,340 --> 00:10:22,680
of work through it and get it

270
00:10:19,289 --> 00:10:25,529
implemented exactly now you can see here

271
00:10:22,679 --> 00:10:26,609
that the world normal is not present

272
00:10:25,529 --> 00:10:28,289
here that's because that was coming in

273
00:10:26,610 --> 00:10:31,409
as a global effectively in the pixel

274
00:10:28,289 --> 00:10:33,899
shader right and so this sample end that

275
00:10:31,409 --> 00:10:35,939
we have here is actually the information

276
00:10:33,899 --> 00:10:38,220
that we need for that so we kind of need

277
00:10:35,940 --> 00:10:40,590
to do something more along these lines

278
00:10:38,220 --> 00:10:42,660
where we're going to pass that in as

279
00:10:40,590 --> 00:10:45,750
another parameter that wasn't getting

280
00:10:42,659 --> 00:10:46,919
passed here so that value is it's

281
00:10:45,750 --> 00:10:48,328
varying now and

282
00:10:46,919 --> 00:10:50,699
we have to make sure that that gets

283
00:10:48,328 --> 00:10:53,099
taken care of here but other than that I

284
00:10:50,700 --> 00:10:56,550
think we're good so there's the sampling

285
00:10:53,100 --> 00:10:58,769
code for that irradiance there and then

286
00:10:56,549 --> 00:11:01,319
we're just working on this part so world

287
00:10:58,769 --> 00:11:03,899
P we know it's just sample P right and

288
00:11:01,320 --> 00:11:06,329
so really the the majority of the

289
00:11:03,899 --> 00:11:07,828
problem now it just comes down to this

290
00:11:06,328 --> 00:11:09,958
piece of code here that we don't really

291
00:11:07,828 --> 00:11:19,289
know it oh and also this is really just

292
00:11:09,958 --> 00:11:21,028
result now right ok so now we have a

293
00:11:19,289 --> 00:11:23,159
sketch of the routine and what you can

294
00:11:21,028 --> 00:11:24,480
see is that really like I said pretty

295
00:11:23,159 --> 00:11:25,860
much everything translates almost

296
00:11:24,480 --> 00:11:30,329
exactly so we don't really have to do

297
00:11:25,860 --> 00:11:32,129
anything to to modify the math it's it's

298
00:11:30,328 --> 00:11:34,289
almost exact right we just had to wire

299
00:11:32,129 --> 00:11:37,078
up the parameter coming from the

300
00:11:34,289 --> 00:11:38,399
function parameter rather than from sort

301
00:11:37,078 --> 00:11:39,899
of a global in the shader because the

302
00:11:38,399 --> 00:11:42,929
shader is sort of its own function that

303
00:11:39,899 --> 00:11:44,339
gets called if you will and global

304
00:11:42,929 --> 00:11:47,278
variables are really just parameters to

305
00:11:44,339 --> 00:11:49,350
it in that context so what we want to do

306
00:11:47,278 --> 00:11:51,328
now is say well the compute voxel

307
00:11:49,350 --> 00:11:55,350
irradiance add function just now had the

308
00:11:51,328 --> 00:11:58,708
work that we don't have is we need a way

309
00:11:55,350 --> 00:12:01,199
to sample the voxel using the same kind

310
00:11:58,708 --> 00:12:05,729
of trilinear filtering that the game

311
00:12:01,198 --> 00:12:07,049
itself would use right and so if i want

312
00:12:05,730 --> 00:12:10,500
to do something like that what i need to

313
00:12:07,049 --> 00:12:13,139
do is just take like the texture call

314
00:12:10,500 --> 00:12:15,179
here and implement the same thing that

315
00:12:13,139 --> 00:12:17,069
the graphics card would have done and

316
00:12:15,179 --> 00:12:19,919
what you can see is it's a little bit

317
00:12:17,070 --> 00:12:22,350
Squinkie because we sort of have the

318
00:12:19,919 --> 00:12:24,929
light voxel is not stored as a separate

319
00:12:22,350 --> 00:12:26,490
thing right but that's actually good in

320
00:12:24,929 --> 00:12:28,500
our case because we don't really want to

321
00:12:26,490 --> 00:12:30,389
belabor the point here so what we

322
00:12:28,500 --> 00:12:32,759
probably want to do is make these just

323
00:12:30,389 --> 00:12:35,818
get sampled directly in here as

324
00:12:32,759 --> 00:12:39,509
something that can be done from the the

325
00:12:35,818 --> 00:12:42,149
you know the neighboring voxels so if i

326
00:12:39,509 --> 00:12:44,939
look at how we've got our voxels stored

327
00:12:42,149 --> 00:12:47,278
there in one of these light computation

328
00:12:44,940 --> 00:12:49,410
sorry lightbox will sell this this

329
00:12:47,278 --> 00:12:52,379
doesn't exist anymore analyze what's the

330
00:12:49,409 --> 00:12:54,870
best digital remain so this light voxel

331
00:12:52,379 --> 00:12:56,939
cell here if we look at the way that

332
00:12:54,870 --> 00:12:58,078
it's laid out what we can see is we've

333
00:12:56,940 --> 00:12:59,279
got all the information that we need

334
00:12:58,078 --> 00:13:00,689
right here so we really just need our

335
00:12:59,278 --> 00:13:02,490
eight voxel

336
00:13:00,690 --> 00:13:04,560
you know our eight voxel cells right

337
00:13:02,490 --> 00:13:07,379
that's what we would need here and we

338
00:13:04,559 --> 00:13:10,259
need a way of grabbing those cells sort

339
00:13:07,379 --> 00:13:13,679
of getting the getting the ones that

340
00:13:10,259 --> 00:13:15,629
surround a particular location so we

341
00:13:13,679 --> 00:13:18,149
know that we can find an exact location

342
00:13:15,629 --> 00:13:19,980
right but what we don't know is how to

343
00:13:18,149 --> 00:13:23,189
get the things around an exact location

344
00:13:19,980 --> 00:13:25,980
right so if you look at get voxel index

345
00:13:23,190 --> 00:13:29,070
for example you can see here right this

346
00:13:25,980 --> 00:13:30,420
this call right here tells us you know

347
00:13:29,070 --> 00:13:36,960
the first piece of information that we

348
00:13:30,419 --> 00:13:38,879
need know why that there we go so we

349
00:13:36,960 --> 00:13:41,280
know part of it right we know that if we

350
00:13:38,879 --> 00:13:43,799
did this this world peak here were three

351
00:13:41,279 --> 00:13:48,689
pass their sample page this gives us our

352
00:13:43,799 --> 00:13:52,169
voxel index here right so if we do know

353
00:13:48,690 --> 00:13:54,270
why like typo King this morning there we

354
00:13:52,169 --> 00:13:56,519
go so this right here would give us the

355
00:13:54,269 --> 00:13:58,649
voxel index that the sample P itself

356
00:13:56,519 --> 00:14:02,789
lies in and then of course we need to

357
00:13:58,649 --> 00:14:05,909
know ones that are sort of on one away

358
00:14:02,789 --> 00:14:07,649
in each case for this right and the key

359
00:14:05,909 --> 00:14:09,719
thing here the thing that's that's a

360
00:14:07,649 --> 00:14:11,759
problem for us is we need to know we

361
00:14:09,720 --> 00:14:13,590
need to be able to clamp right so we

362
00:14:11,759 --> 00:14:14,909
need to be able to say like look if

363
00:14:13,590 --> 00:14:17,310
we're gonna we don't want to fetch

364
00:14:14,909 --> 00:14:18,809
outside this voxel so when we're doing

365
00:14:17,309 --> 00:14:20,939
the fetching we need to be able to clamp

366
00:14:18,809 --> 00:14:23,849
our fetches so that they all end up

367
00:14:20,940 --> 00:14:26,250
inside I'm gonna put that in a sort of

368
00:14:23,850 --> 00:14:28,019
simple function for now and you know we

369
00:14:26,250 --> 00:14:29,399
probably have to speed this routine up

370
00:14:28,019 --> 00:14:31,470
this is probably gonna be the slowest

371
00:14:29,399 --> 00:14:33,120
part of our code is doing this lighting

372
00:14:31,470 --> 00:14:35,100
sample here that'd be my guess anyway

373
00:14:33,120 --> 00:14:37,289
and so we're probably gonna have to do

374
00:14:35,100 --> 00:14:39,570
work to make this cleaner and not do it

375
00:14:37,289 --> 00:14:42,599
the way that I'm doing it here but just

376
00:14:39,570 --> 00:14:44,280
so you're clear on it I'm gonna do the

377
00:14:42,600 --> 00:14:46,800
simple version first and then we're

378
00:14:44,279 --> 00:14:49,829
gonna worry about the speed part after

379
00:14:46,799 --> 00:14:52,588
everything is working so in here what

380
00:14:49,830 --> 00:14:57,509
we'll do is first do the the light box

381
00:14:52,589 --> 00:15:00,720
will sell and I'm just going to go ahead

382
00:14:57,509 --> 00:15:03,929
and take a sort of the literal version

383
00:15:00,720 --> 00:15:07,019
of this you know we've got you know of

384
00:15:03,929 --> 00:15:10,529
eight eight cell region we've got two by

385
00:15:07,019 --> 00:15:12,210
two by two we're trying to get basically

386
00:15:10,529 --> 00:15:13,500
the the things that we would need to

387
00:15:12,210 --> 00:15:17,129
interpolate between

388
00:15:13,500 --> 00:15:18,539
when we get the voxel index here we're

389
00:15:17,129 --> 00:15:23,100
gonna assume that we adjust this

390
00:15:18,539 --> 00:15:24,689
downward so for example normally when we

391
00:15:23,100 --> 00:15:26,909
get in box Linux we just want to know

392
00:15:24,690 --> 00:15:28,800
which voxel index you're in but in this

393
00:15:26,909 --> 00:15:31,319
case we're going to need to do something

394
00:15:28,799 --> 00:15:33,240
where we say okay if you were on one

395
00:15:31,320 --> 00:15:34,230
side of the voxel you would do a

396
00:15:33,240 --> 00:15:36,330
different thing than if you're on the

397
00:15:34,230 --> 00:15:37,860
other side of the voxel right so I'm

398
00:15:36,330 --> 00:15:40,860
gonna assume that we handle that first

399
00:15:37,860 --> 00:15:42,600
and we're gonna sort of deal with with

400
00:15:40,860 --> 00:15:44,039
that flooring and it in a different way

401
00:15:42,600 --> 00:15:47,450
in fact like what I could do here is

402
00:15:44,039 --> 00:15:49,349
literally just put this code in here

403
00:15:47,450 --> 00:15:55,350
because we're gonna need to work with it

404
00:15:49,350 --> 00:15:58,019
a second so this is where we need to

405
00:15:55,350 --> 00:15:59,639
start off right and before we do or

406
00:15:58,019 --> 00:16:01,949
after I guess maybe a week I should say

407
00:15:59,639 --> 00:16:04,019
after we do this floor this F work here

408
00:16:01,950 --> 00:16:07,020
we're going to produce the uvw score

409
00:16:04,019 --> 00:16:09,720
this thing by subtracting these right so

410
00:16:07,019 --> 00:16:12,679
after we've done the floor where we are

411
00:16:09,720 --> 00:16:16,019
inside the voxel that we're actually in

412
00:16:12,679 --> 00:16:17,609
that information well and you know what

413
00:16:16,019 --> 00:16:20,159
I guess the other thing we could say is

414
00:16:17,610 --> 00:16:21,720
we kind of need to know relative to the

415
00:16:20,159 --> 00:16:23,219
voxel Center as well so there's a bunch

416
00:16:21,720 --> 00:16:26,070
of information we need to do here

417
00:16:23,220 --> 00:16:27,810
actually so if we take this F chord what

418
00:16:26,070 --> 00:16:29,370
you can see here is we're producing the

419
00:16:27,809 --> 00:16:31,079
vox of so we're in by doing this but

420
00:16:29,370 --> 00:16:34,259
what we really want to know is the voxel

421
00:16:31,080 --> 00:16:35,400
that we would be in I'm so much to

422
00:16:34,259 --> 00:16:38,549
explain this I think we just need a

423
00:16:35,399 --> 00:16:41,850
diagram I know what I want but I'm not

424
00:16:38,549 --> 00:16:43,169
able to say the words that's that's

425
00:16:41,850 --> 00:16:45,360
going to make it clear so we're just

426
00:16:43,169 --> 00:16:49,309
going to take that as a sign that we

427
00:16:45,360 --> 00:16:49,310
need the diagram so here's

428
00:16:53,570 --> 00:16:58,700
here's our voxel sample so what we want

429
00:16:56,059 --> 00:17:00,250
to do here is we want to say alright we

430
00:16:58,700 --> 00:17:03,580
know that we're trying to produce

431
00:17:00,250 --> 00:17:03,580
effectively this

432
00:17:04,900 --> 00:17:12,500
right we have like this voxel we know

433
00:17:09,559 --> 00:17:14,690
that it's going to be a little cube and

434
00:17:12,500 --> 00:17:18,859
it's divided up such that we have eight

435
00:17:14,690 --> 00:17:23,059
little cells right and we know that if

436
00:17:18,859 --> 00:17:25,399
we imagine you know are sort of X Y Z

437
00:17:23,059 --> 00:17:28,039
here that like this is the minimum

438
00:17:25,400 --> 00:17:31,850
corner right and this is the maximum

439
00:17:28,039 --> 00:17:33,710
corner in terms of coordinates and so

440
00:17:31,849 --> 00:17:36,109
what we want to do is we want to produce

441
00:17:33,710 --> 00:17:38,180
this minimum corner value and then we

442
00:17:36,109 --> 00:17:40,099
want to do like plus one in every

443
00:17:38,180 --> 00:17:41,720
dimension and every combination of

444
00:17:40,099 --> 00:17:45,469
dimension to produce our eight cell

445
00:17:41,720 --> 00:17:46,940
indices now to produce this the thing

446
00:17:45,470 --> 00:17:48,620
that I wanted to point out and I'll draw

447
00:17:46,940 --> 00:17:50,120
the diagram in a simpler form over here

448
00:17:48,619 --> 00:17:51,319
we'll just do a 2d cross-section because

449
00:17:50,119 --> 00:17:54,619
it works the same in any number of

450
00:17:51,319 --> 00:17:56,450
dimensions we have the center of a voxel

451
00:17:54,619 --> 00:17:58,939
cell and that is where we're assuming

452
00:17:56,450 --> 00:18:00,380
these values exist which honestly may

453
00:17:58,940 --> 00:18:01,759
have been a mistake maybe we should have

454
00:18:00,380 --> 00:18:03,050
assumed if they work at the vertices

455
00:18:01,759 --> 00:18:06,379
because would have worked a lot better

456
00:18:03,049 --> 00:18:10,399
if we've done that uh so there's that

457
00:18:06,380 --> 00:18:13,720
but again you know there's yeah we'll

458
00:18:10,400 --> 00:18:16,070
see we can adjust it later if we need to

459
00:18:13,720 --> 00:18:18,589
so what we want to do here is just say

460
00:18:16,069 --> 00:18:21,619
look we know that this is where our

461
00:18:18,589 --> 00:18:25,669
voxel information is stored and so if

462
00:18:21,619 --> 00:18:29,869
you know you imagine this is 0.5 0.5 a

463
00:18:25,670 --> 00:18:32,720
long you know from say the the corner of

464
00:18:29,869 --> 00:18:35,239
this voxel which would be here right if

465
00:18:32,720 --> 00:18:38,299
this is 0.5 0.5 along what that means is

466
00:18:35,240 --> 00:18:42,019
that if you were below point 5 so if you

467
00:18:38,299 --> 00:18:44,240
were only like point 2 above this line

468
00:18:42,019 --> 00:18:46,670
you would actually want your minimum

469
00:18:44,240 --> 00:18:48,109
corner to be this voxel and the reason

470
00:18:46,670 --> 00:18:50,750
is because the things you're going to be

471
00:18:48,109 --> 00:18:52,879
blending between are actually these four

472
00:18:50,750 --> 00:18:55,039
whereas if you were up here and you

473
00:18:52,880 --> 00:18:57,890
considered this you would use these four

474
00:18:55,039 --> 00:19:01,279
right so what we want to do here is

475
00:18:57,890 --> 00:19:05,030
include that 0.5 0.5 bias when we

476
00:19:01,279 --> 00:19:06,920
compute the actual value so in here

477
00:19:05,029 --> 00:19:09,019
where we do this had a marred product

478
00:19:06,920 --> 00:19:11,060
right then we do the inverse Vox will

479
00:19:09,019 --> 00:19:13,789
sell them to figure out basically where

480
00:19:11,059 --> 00:19:15,889
we're at what we need to do is we need

481
00:19:13,789 --> 00:19:17,990
to then say let's shift those let's

482
00:19:15,890 --> 00:19:20,060
shift that value downward

483
00:19:17,990 --> 00:19:22,730
by the point five point five so that we

484
00:19:20,059 --> 00:19:24,289
get a different glamping than we

485
00:19:22,730 --> 00:19:27,170
otherwise would right

486
00:19:24,289 --> 00:19:30,799
so in this right here once we've done

487
00:19:27,170 --> 00:19:33,470
this you know moved it into voxel space

488
00:19:30,799 --> 00:19:38,230
what we want to do is basically shift

489
00:19:33,470 --> 00:19:41,240
over by a a bias factor to move us into

490
00:19:38,230 --> 00:19:43,970
the previous voxel if that was where we

491
00:19:41,240 --> 00:19:46,190
should have been then when we do the

492
00:19:43,970 --> 00:19:49,220
floor we're producing the value we

493
00:19:46,190 --> 00:19:51,500
actually wanted and we can now do the

494
00:19:49,220 --> 00:19:53,509
subtraction off of that value should

495
00:19:51,500 --> 00:19:56,150
give us the proper UVW for blending

496
00:19:53,509 --> 00:19:58,069
whereas before it would not have done

497
00:19:56,150 --> 00:19:59,660
that because we were in a shifted space

498
00:19:58,069 --> 00:20:02,960
relative to where we want it to be I

499
00:19:59,660 --> 00:20:04,580
believe that's my assertion anyway so in

500
00:20:02,960 --> 00:20:06,650
order to get the fractional part here I

501
00:20:04,579 --> 00:20:09,109
can actually just do the opposite I can

502
00:20:06,650 --> 00:20:11,150
take the vox cell dim and multiply it

503
00:20:09,109 --> 00:20:22,579
here so I can do the opposite Hadamard

504
00:20:11,150 --> 00:20:25,490
basically so like this right so this

505
00:20:22,579 --> 00:20:30,079
will give me my UV W's and so now I know

506
00:20:25,490 --> 00:20:33,529
like relatively where I am and that

507
00:20:30,079 --> 00:20:35,269
should always be well behaved right now

508
00:20:33,529 --> 00:20:39,710
the problem that we're gonna have here

509
00:20:35,269 --> 00:20:42,349
is where we this voxel index is

510
00:20:39,710 --> 00:20:44,120
potentially out of bounds as well right

511
00:20:42,349 --> 00:20:45,469
so we need to make sure that that gets

512
00:20:44,119 --> 00:20:48,229
clamped properly but I think other than

513
00:20:45,470 --> 00:20:50,750
that I think we should be okay right the

514
00:20:48,230 --> 00:20:52,849
clamping will happen in here so this UV

515
00:20:50,750 --> 00:20:55,970
W gives us the UV W blend that we need

516
00:20:52,849 --> 00:20:57,769
and so then what we can do is we don't

517
00:20:55,970 --> 00:20:59,360
need this anymore because this code is

518
00:20:57,769 --> 00:21:02,059
what we just implemented up here but for

519
00:20:59,359 --> 00:21:03,500
our scheme right and perhaps we should

520
00:21:02,059 --> 00:21:04,700
also put this down here because that's

521
00:21:03,500 --> 00:21:06,829
something that has to do the lighting

522
00:21:04,700 --> 00:21:08,029
and we maybe don't want to make it look

523
00:21:06,829 --> 00:21:11,269
like that's part of the box so lookup

524
00:21:08,029 --> 00:21:13,339
information that's not so what we're

525
00:21:11,269 --> 00:21:15,710
going to do then is we're gonna get our

526
00:21:13,339 --> 00:21:18,109
voxel light cells here so we'll just

527
00:21:15,710 --> 00:21:21,500
grab a pointer to each of those and say

528
00:21:18,109 --> 00:21:26,659
all right where are those and this will

529
00:21:21,500 --> 00:21:29,029
be like a you know look up voxel lamped

530
00:21:26,660 --> 00:21:31,320
or something like that and we're gonna

531
00:21:29,029 --> 00:21:35,549
say here's the voxel index X

532
00:21:31,319 --> 00:21:37,889
in XY voxel index Z like this and that

533
00:21:35,549 --> 00:21:39,690
way we can say alright look up each of

534
00:21:37,890 --> 00:21:42,090
these things and we're going to get

535
00:21:39,690 --> 00:21:45,600
these out in the order that we would

536
00:21:42,089 --> 00:21:49,589
expect them right so first we would say

537
00:21:45,599 --> 00:21:54,209
X then we would say X plus 1 right for

538
00:21:49,589 --> 00:21:57,449
each of these like so and then we would

539
00:21:54,210 --> 00:22:00,230
say okay then it's going to be y plus 1

540
00:21:57,450 --> 00:22:00,230
potentially

541
00:22:07,089 --> 00:22:12,189
I do one

542
00:22:10,170 --> 00:22:15,490
there we go I only need eight of them

543
00:22:12,190 --> 00:22:18,940
and then finally the Z plus one on the

544
00:22:15,490 --> 00:22:20,920
outside right and so as you can see all

545
00:22:18,940 --> 00:22:22,660
I'm doing here is taking every possible

546
00:22:20,920 --> 00:22:24,340
combination if I space these out you

547
00:22:22,660 --> 00:22:25,900
could see maybe a little bit better what

548
00:22:24,339 --> 00:22:28,119
I'm talking about but we're just

549
00:22:25,900 --> 00:22:30,600
incrementing we're just doing every

550
00:22:28,119 --> 00:22:34,000
permutation of X you know down the line

551
00:22:30,599 --> 00:22:35,889
you know plus 0 plus 1 plus 0 plus 1

552
00:22:34,000 --> 00:22:38,589
plus 0 plus 1 then we're doing a you

553
00:22:35,890 --> 00:22:40,570
know the half cadence on Y and then the

554
00:22:38,589 --> 00:22:42,429
half again cadence on Z and you can kind

555
00:22:40,569 --> 00:22:45,490
of see that that just gives us all the

556
00:22:42,430 --> 00:22:49,029
permutations of plus 0 and plus 1 for

557
00:22:45,490 --> 00:22:50,380
each of these so that would get us all

558
00:22:49,029 --> 00:22:52,509
the voxels and some of these may be the

559
00:22:50,380 --> 00:22:54,130
same voxel if they had to clamp but

560
00:22:52,509 --> 00:22:57,129
we're gonna let the clamping function do

561
00:22:54,130 --> 00:22:58,210
that and then once we have that we

562
00:22:57,130 --> 00:23:01,870
should be able to produce all of these

563
00:22:58,210 --> 00:23:05,350
by just basic lips right so we have a

564
00:23:01,869 --> 00:23:07,509
lab function here it is and so all we

565
00:23:05,349 --> 00:23:11,439
need to do is loop our values I believe

566
00:23:07,509 --> 00:23:13,750
we have a Lib for both types yeah so we

567
00:23:11,440 --> 00:23:17,130
have we can do our b3s as well so we can

568
00:23:13,750 --> 00:23:19,329
just say look I'm gonna loop this stuff

569
00:23:17,130 --> 00:23:22,240
and the way we're going to do this is

570
00:23:19,329 --> 00:23:25,929
we're gonna go between different cells

571
00:23:22,240 --> 00:23:29,500
right so we know we've got cells

572
00:23:25,930 --> 00:23:32,110
something and then we want to take you

573
00:23:29,500 --> 00:23:34,420
know maybe the light n value 0 or

574
00:23:32,109 --> 00:23:36,339
something right and then we would lurk

575
00:23:34,420 --> 00:23:37,870
that with cells something in that end

576
00:23:36,339 --> 00:23:42,490
value and that's how we would produce

577
00:23:37,869 --> 00:23:45,129
like the end 0 right so that's all we

578
00:23:42,490 --> 00:23:47,079
really have to do and this is going to

579
00:23:45,130 --> 00:23:49,270
be the same for all of these it's just

580
00:23:47,079 --> 00:23:51,189
gonna change well the only thing that's

581
00:23:49,269 --> 00:23:54,039
gonna change is what we actually lurk

582
00:23:51,190 --> 00:23:57,910
right and which parameter we actually

583
00:23:54,039 --> 00:24:00,250
use to loop it well I guess you know

584
00:23:57,910 --> 00:24:04,509
it's it's not lerp that's that's

585
00:24:00,250 --> 00:24:06,369
incorrect you shouldn't say that it's

586
00:24:04,509 --> 00:24:09,930
actually like a cubic thing so we

587
00:24:06,369 --> 00:24:15,539
probably need to do our own thing here

588
00:24:09,930 --> 00:24:15,539
something like that I guess

589
00:24:18,628 --> 00:24:24,069
and I'll just make a macro probably that

590
00:24:22,118 --> 00:24:25,808
expands this out

591
00:24:24,069 --> 00:24:27,788
in fact that's almost certainly what

592
00:24:25,808 --> 00:24:30,638
I'll do so what I probably wanted to do

593
00:24:27,788 --> 00:24:32,950
here this was probably a premature

594
00:24:30,638 --> 00:24:35,859
probably didn't need to do it this way I

595
00:24:32,950 --> 00:24:39,580
can probably do just a macro to expand

596
00:24:35,859 --> 00:24:44,949
that out and just say what the what

597
00:24:39,579 --> 00:25:00,158
parameter we're doing right so I can

598
00:24:44,950 --> 00:25:01,569
probably just do this and then I just

599
00:25:00,159 --> 00:25:06,369
need something that will do this

600
00:25:01,569 --> 00:25:09,368
properly right okay so what that looked

601
00:25:06,368 --> 00:25:12,069
like well for a trailer of you know some

602
00:25:09,368 --> 00:25:13,538
field and I guess we didn't even really

603
00:25:12,069 --> 00:25:15,638
need this because since we're defying

604
00:25:13,538 --> 00:25:19,929
the macro of locally we could just say

605
00:25:15,638 --> 00:25:20,858
look that doesn't matter so if we're

606
00:25:19,929 --> 00:25:23,139
fine

607
00:25:20,858 --> 00:25:26,378
we're trying this we know that we can do

608
00:25:23,138 --> 00:25:28,118
it with the cell look up here and to be

609
00:25:26,378 --> 00:25:30,519
fair I guess we didn't really need to do

610
00:25:28,118 --> 00:25:32,829
it we probably could have made these

611
00:25:30,519 --> 00:25:36,759
lookup box a clamped things actually

612
00:25:32,829 --> 00:25:38,408
just be you know cell zero zero zero

613
00:25:36,759 --> 00:25:40,720
cells or what you know we didn't need it

614
00:25:38,409 --> 00:25:43,299
to be an array that may just make it

615
00:25:40,720 --> 00:25:44,858
harder to read so I apologize for that

616
00:25:43,298 --> 00:25:47,798
maybe we'll change that later but for

617
00:25:44,858 --> 00:25:50,710
now so we need to do a trailer for a

618
00:25:47,798 --> 00:25:58,138
particular field what we have to do is

619
00:25:50,710 --> 00:25:58,139
first compute the lerp for each of our

620
00:25:59,200 --> 00:26:04,210
so we first need to do bilinear

621
00:26:00,519 --> 00:26:07,240
interpolation on each of our you know to

622
00:26:04,210 --> 00:26:09,940
two halves of the of the voxel and then

623
00:26:07,240 --> 00:26:12,370
we need to do the linear between them

624
00:26:09,940 --> 00:26:14,559
right so it's basically like a series of

625
00:26:12,369 --> 00:26:17,649
linear blends so the first thing that I

626
00:26:14,559 --> 00:26:21,129
would say is well alright you know if

627
00:26:17,650 --> 00:26:25,000
you take a look at that diagram that I

628
00:26:21,130 --> 00:26:27,100
had before like here so now what we're

629
00:26:25,000 --> 00:26:28,720
effectively saying is look we're sort of

630
00:26:27,099 --> 00:26:29,889
going to break it down and I guess we'll

631
00:26:28,720 --> 00:26:32,028
probably big it down in Z so we'd

632
00:26:29,890 --> 00:26:34,090
probably do it this way

633
00:26:32,028 --> 00:26:34,089
you

634
00:26:36,630 --> 00:26:40,140
so we're pretty much doing is saying all

635
00:26:38,549 --> 00:26:42,269
right the first thing we're gonna do is

636
00:26:40,140 --> 00:26:44,790
take four linear blends to produce

637
00:26:42,269 --> 00:26:48,960
basically these blend points so blend

638
00:26:44,789 --> 00:26:51,629
these this this and this right that

639
00:26:48,960 --> 00:26:55,019
gives us these four will then blend

640
00:26:51,630 --> 00:26:57,180
those to get these and it'll blend those

641
00:26:55,019 --> 00:27:01,230
right so we're just making you know a

642
00:26:57,180 --> 00:27:03,029
series of blends there and so in order

643
00:27:01,230 --> 00:27:04,920
to do that you know first what we would

644
00:27:03,029 --> 00:27:07,170
do like I said is well lerp on X so

645
00:27:04,920 --> 00:27:09,150
we're gonna use that first at in order

646
00:27:07,170 --> 00:27:12,980
to do that what we need is whatever the

647
00:27:09,150 --> 00:27:15,690
field was so we need the cells you know

648
00:27:12,980 --> 00:27:17,279
for that field it'll look like this

649
00:27:15,690 --> 00:27:20,279
right

650
00:27:17,279 --> 00:27:23,519
we need to lurk between the X's of all

651
00:27:20,279 --> 00:27:24,899
possible combinations right so we're

652
00:27:23,519 --> 00:27:27,000
gonna have something that looks

653
00:27:24,900 --> 00:27:29,610
effectively like this where we say look

654
00:27:27,000 --> 00:27:30,650
we're gonna go from 0 to 1 I guess I

655
00:27:29,609 --> 00:27:33,719
should have put that in there first

656
00:27:30,650 --> 00:27:37,350
we're gonna do from 0 to 1 on each X

657
00:27:33,720 --> 00:27:50,360
every X that we have right and so we're

658
00:27:37,349 --> 00:27:52,679
gonna have to do like that I guess right

659
00:27:50,359 --> 00:27:54,269
and so like I said before there's four

660
00:27:52,680 --> 00:27:56,519
of these so I don't know why I was so

661
00:27:54,269 --> 00:27:58,319
over zealous there there's four of these

662
00:27:56,519 --> 00:28:00,059
and that just corresponds to the

663
00:27:58,319 --> 00:28:02,970
different combinations that I could have

664
00:28:00,059 --> 00:28:06,269
done in the other dimensions right and

665
00:28:02,970 --> 00:28:08,130
we're gonna lurk between those so

666
00:28:06,269 --> 00:28:10,920
there's our four loops that we start

667
00:28:08,130 --> 00:28:13,050
with right and like I said that produces

668
00:28:10,920 --> 00:28:16,890
those so now we need to do is lure long

669
00:28:13,049 --> 00:28:18,509
Y so for each Y variance right and you

670
00:28:16,890 --> 00:28:19,110
know what I guess this is the wrong way

671
00:28:18,509 --> 00:28:25,519
round

672
00:28:19,109 --> 00:28:25,519
it should probably be this way right

673
00:28:27,150 --> 00:28:36,970
there yeah so for each y variant I need

674
00:28:31,599 --> 00:28:41,029
to now lerp that right so now you can

675
00:28:36,970 --> 00:28:43,289
kind of see how that's going

676
00:28:41,029 --> 00:28:46,000
[Applause]

677
00:28:43,289 --> 00:28:48,339
so we produce the combinations for the

678
00:28:46,000 --> 00:28:50,980
X's first and then we're gonna lurk

679
00:28:48,339 --> 00:28:53,649
those in Y and then finally there's just

680
00:28:50,980 --> 00:28:57,308
one big lerp at the very end that does

681
00:28:53,650 --> 00:28:58,929
the Z combined and so that's a trilinear

682
00:28:57,308 --> 00:29:02,529
and it's trilinear because it's three

683
00:28:58,929 --> 00:29:05,019
linear blends you first do your blends

684
00:29:02,529 --> 00:29:07,269
in one that's the first blend then you

685
00:29:05,019 --> 00:29:08,410
do your blends in the other dimension

686
00:29:07,269 --> 00:29:10,660
then you do your blends in third

687
00:29:08,410 --> 00:29:16,360
dimension so it's you know three linear

688
00:29:10,660 --> 00:29:20,890
blends in a row all right so that's I

689
00:29:16,359 --> 00:29:22,959
think all we actually need to do and now

690
00:29:20,890 --> 00:29:25,600
it's just a question of getting rid of

691
00:29:22,960 --> 00:29:27,190
compilers and debugging so for here

692
00:29:25,599 --> 00:29:29,439
again we have world P but it's its

693
00:29:27,190 --> 00:29:32,558
sample P in ours so that's the long word

694
00:29:29,440 --> 00:29:35,440
and then we need look up the box of

695
00:29:32,558 --> 00:29:36,849
clamp to be an actual thing now to do

696
00:29:35,440 --> 00:29:38,590
look up box of clamp this is pretty

697
00:29:36,849 --> 00:29:43,000
trivial all we're doing is we're just

698
00:29:38,589 --> 00:29:45,519
going to return the light voxel cell

699
00:29:43,000 --> 00:29:50,890
that is at whatever location we are

700
00:29:45,519 --> 00:29:53,589
asked about so so we basically have an X

701
00:29:50,890 --> 00:29:57,780
the Y and the Z and all we're doing it

702
00:29:53,589 --> 00:29:57,779
going to do is literally just do this

703
00:29:59,700 --> 00:30:08,160
take whatever the words are voxel

704
00:30:09,599 --> 00:30:15,359
I guess so we're gonna take whatever the

705
00:30:14,099 --> 00:30:17,969
cells are here and we're just gonna

706
00:30:15,359 --> 00:30:21,779
return the address of the ZYX

707
00:30:17,970 --> 00:30:23,339
cell and off we go

708
00:30:21,779 --> 00:30:24,420
and if we never we're gonna fetch out of

709
00:30:23,339 --> 00:30:26,039
bounds that would literally be the

710
00:30:24,420 --> 00:30:27,300
entire team but we know that this can

711
00:30:26,039 --> 00:30:29,039
produce out-of-bounds results because we

712
00:30:27,299 --> 00:30:31,259
may be sampling somewhere where it's at

713
00:30:29,039 --> 00:30:33,089
the off the end of the voxel and so we

714
00:30:31,259 --> 00:30:35,700
want to do first is just make sure that

715
00:30:33,089 --> 00:30:39,509
all of our values are clamped so I

716
00:30:35,700 --> 00:30:41,970
believe we have a clamp or these we do

717
00:30:39,509 --> 00:30:44,490
so really this is all we need to do we

718
00:30:41,970 --> 00:30:47,430
just need to feed these values through

719
00:30:44,490 --> 00:30:53,910
the clamp first so we know that we want

720
00:30:47,430 --> 00:30:59,190
to clamp ourselves to large light box'll

721
00:30:53,910 --> 00:31:00,779
or light large voxel dim and maybe we

722
00:30:59,190 --> 00:31:02,009
want to do it to the hot voxel I don't

723
00:31:00,779 --> 00:31:04,079
think we do though because I think will

724
00:31:02,009 --> 00:31:07,079
allow sampling outside to old light

725
00:31:04,079 --> 00:31:10,319
values probably I mean maybe that's dumb

726
00:31:07,079 --> 00:31:21,059
but we'll see I'll put it to doing about

727
00:31:10,319 --> 00:31:23,069
that but either way you know maybe we do

728
00:31:21,059 --> 00:31:24,960
maybe we don't but either way all its

729
00:31:23,069 --> 00:31:27,119
gonna do is change the clamp here to be

730
00:31:24,960 --> 00:31:28,529
a different range so it would be you

731
00:31:27,119 --> 00:31:31,289
know different parameters here in here

732
00:31:28,529 --> 00:31:32,549
but otherwise it'd be the same and so

733
00:31:31,289 --> 00:31:34,289
what we do is we just clamp all those

734
00:31:32,549 --> 00:31:37,740
values and then we do the lookup and

735
00:31:34,289 --> 00:31:41,009
that's it right and so once we have that

736
00:31:37,740 --> 00:31:42,720
I think we there look like there's maybe

737
00:31:41,009 --> 00:31:49,859
a little bit more errors there though

738
00:31:42,720 --> 00:31:51,240
oops that's that's that's all we should

739
00:31:49,859 --> 00:31:52,379
need to do that will get us clamped

740
00:31:51,240 --> 00:31:54,029
values then we'll be able to look these

741
00:31:52,380 --> 00:31:56,160
up I don't know why these are semicolons

742
00:31:54,029 --> 00:31:59,519
you know again it was bad morning for

743
00:31:56,160 --> 00:32:00,870
typos so kind of to be expected who

744
00:31:59,519 --> 00:32:03,720
knows so many typos are creeping into

745
00:32:00,869 --> 00:32:09,259
our code right now and it looks like

746
00:32:03,720 --> 00:32:13,789
maybe this is not quite balanced in the

747
00:32:09,259 --> 00:32:19,789
comma in two places actually

748
00:32:13,789 --> 00:32:22,609
all right what else we got alright uh

749
00:32:19,789 --> 00:32:25,789
it's so it looks like we are missing

750
00:32:22,609 --> 00:32:28,519
something there compute solar

751
00:32:25,789 --> 00:32:31,670
radiance that's what are we missing

752
00:32:28,519 --> 00:32:34,160
oh yes the incidence angle so the

753
00:32:31,670 --> 00:32:37,310
incidence angle here is just how the

754
00:32:34,160 --> 00:32:39,800
light ray is coming in and so the probes

755
00:32:37,309 --> 00:32:41,750
sample n is basically what that is

756
00:32:39,799 --> 00:32:44,389
that's the direction the lights coming

757
00:32:41,750 --> 00:32:46,869
in it's just going the wrong way

758
00:32:44,390 --> 00:32:52,970
so oh no it's not sorry Peart not that

759
00:32:46,869 --> 00:32:54,559
sampled the Ray dirrection there we go

760
00:32:52,970 --> 00:32:57,049
so the Ray Direction right we know we

761
00:32:54,559 --> 00:32:58,730
hit by going in that direction so I

762
00:32:57,049 --> 00:33:01,549
think all we need to do is just pass

763
00:32:58,730 --> 00:33:03,279
that down so right the Ray direction

764
00:33:01,549 --> 00:33:05,779
here is what we actually need

765
00:33:03,279 --> 00:33:08,089
unfortunately that ray Direction is

766
00:33:05,779 --> 00:33:11,089
actually a bundle right it's for Ray

767
00:33:08,089 --> 00:33:13,429
directions in one and so when we're

768
00:33:11,089 --> 00:33:15,559
doing that voxel and by the way it

769
00:33:13,430 --> 00:33:16,779
brings up the fact that this voxel

770
00:33:15,559 --> 00:33:33,950
sampling could probably be done wide

771
00:33:16,779 --> 00:33:35,539
which we may want to do but you know so

772
00:33:33,950 --> 00:33:37,160
we probably want to do this wide and

773
00:33:35,539 --> 00:33:39,289
move it out into here and like basically

774
00:33:37,160 --> 00:33:41,840
pass in like these should all be fours

775
00:33:39,289 --> 00:33:43,339
right so we can just pass these things

776
00:33:41,839 --> 00:33:45,439
directly but for now we're actually

777
00:33:43,339 --> 00:33:48,079
doing an iteration so the raid erection

778
00:33:45,440 --> 00:33:52,610
itself is something that kind of has to

779
00:33:48,079 --> 00:33:54,799
be unpacked right so unpacking that ray

780
00:33:52,609 --> 00:33:58,759
direction what we would need to do is

781
00:33:54,799 --> 00:34:01,069
say all right ray Direction 1 equals get

782
00:33:58,759 --> 00:34:03,529
component where oh well it's sample D

783
00:34:01,069 --> 00:34:08,079
out there actually so it's it's

784
00:34:03,529 --> 00:34:08,079
literally just this right

785
00:34:10,820 --> 00:34:15,659
but again we would like to avoid doing

786
00:34:13,409 --> 00:34:17,628
that so we're probably hoping that Mesa

787
00:34:15,659 --> 00:34:21,599
basically we can just widen this path

788
00:34:17,628 --> 00:34:23,549
for the most part and then only the

789
00:34:21,599 --> 00:34:25,619
thing that actually does the memory

790
00:34:23,550 --> 00:34:29,580
lookups on the voxels would have to be

791
00:34:25,619 --> 00:34:31,769
done sort of not wide so all right

792
00:34:29,579 --> 00:34:33,598
that's how the voxel irradiance would be

793
00:34:31,769 --> 00:34:35,849
going and now we can effectively run

794
00:34:33,599 --> 00:34:37,409
this light transport routine if we want

795
00:34:35,849 --> 00:34:39,119
to the only thing that we don't really

796
00:34:37,409 --> 00:34:42,119
know what to do with now is like the

797
00:34:39,119 --> 00:34:44,550
spamming of the voxels right we're just

798
00:34:42,119 --> 00:34:48,210
gonna go ahead and just call it right

799
00:34:44,550 --> 00:34:49,619
and do the best we can so you know we're

800
00:34:48,210 --> 00:34:51,030
gonna go ahead and stop doing the test

801
00:34:49,619 --> 00:34:52,619
casts I think at this point and start

802
00:34:51,030 --> 00:34:54,480
trying to do actual light convection

803
00:34:52,619 --> 00:34:55,829
it's gonna go terribly we're gonna have

804
00:34:54,480 --> 00:34:58,108
a crap ton of debugging work we're not

805
00:34:55,829 --> 00:34:59,699
going to finish by the end of today but

806
00:34:58,108 --> 00:35:02,699
we're at least gonna get that sort of

807
00:34:59,699 --> 00:35:05,039
going and in order to do that it's

808
00:35:02,699 --> 00:35:09,299
pretty pretty simple we've got our test

809
00:35:05,039 --> 00:35:12,329
cast or like what is it test cast from

810
00:35:09,300 --> 00:35:14,099
probes right so test cast from probes it

811
00:35:12,329 --> 00:35:16,588
just does like a fake lighting solution

812
00:35:14,099 --> 00:35:18,838
right and compute light propagation is

813
00:35:16,588 --> 00:35:20,579
like the real light light solution and

814
00:35:18,838 --> 00:35:22,559
so if you look at the way this is

815
00:35:20,579 --> 00:35:25,619
working what we really want to do is say

816
00:35:22,559 --> 00:35:27,779
all right this transfer here this part

817
00:35:25,619 --> 00:35:29,730
here that we're actually doing that we

818
00:35:27,780 --> 00:35:32,040
want to keep and test cast from probes

819
00:35:29,730 --> 00:35:34,619
is something we actually don't want to

820
00:35:32,039 --> 00:35:36,779
keep anymore and so what we want to do

821
00:35:34,619 --> 00:35:39,690
is say all right let's make this a

822
00:35:36,780 --> 00:35:42,210
switch that can either do the real light

823
00:35:39,690 --> 00:35:46,500
propagation or it can do the test cast

824
00:35:42,210 --> 00:35:48,570
from probes right so if I do this we

825
00:35:46,500 --> 00:35:50,280
will now call call the real routine and

826
00:35:48,570 --> 00:35:52,140
you know it's fail spectacularly or

827
00:35:50,280 --> 00:35:55,380
whatever but that's just the way we want

828
00:35:52,139 --> 00:35:57,598
things to go now if I go look at compute

829
00:35:55,380 --> 00:35:59,940
light provocation you can see that that

830
00:35:57,599 --> 00:36:01,650
doesn't actually pass that this is not

831
00:35:59,940 --> 00:36:02,909
real I don't know why that was still

832
00:36:01,650 --> 00:36:04,920
going through there that was like old

833
00:36:02,909 --> 00:36:05,909
code but you can see that now we're

834
00:36:04,920 --> 00:36:07,530
gonna call this thing and it's gonna

835
00:36:05,909 --> 00:36:09,598
distribute the work out and this is the

836
00:36:07,530 --> 00:36:11,630
the multi work case we can also call the

837
00:36:09,599 --> 00:36:14,070
single work case while we're too buggin

838
00:36:11,630 --> 00:36:18,329
but you know now we're now we're

839
00:36:14,070 --> 00:36:20,309
actually in party zone right so now what

840
00:36:18,329 --> 00:36:20,519
we need to do is start figuring out what

841
00:36:20,309 --> 00:36:22,139
the

842
00:36:20,519 --> 00:36:23,639
is going on and so we're gonna switch

843
00:36:22,139 --> 00:36:25,289
the debug mode because you know if we

844
00:36:23,639 --> 00:36:25,829
got crashes and we gotta like fix all

845
00:36:25,289 --> 00:36:27,389
this stuff

846
00:36:25,829 --> 00:36:29,219
we should also switch to single threaded

847
00:36:27,389 --> 00:36:31,679
probably so if I just you know do that

848
00:36:29,219 --> 00:36:35,489
we'll be in single threaded mode and now

849
00:36:31,679 --> 00:36:36,659
when I do our compilation in debug we

850
00:36:35,489 --> 00:36:38,009
should be able to like step through the

851
00:36:36,659 --> 00:36:42,299
code and see what the heck is going on

852
00:36:38,010 --> 00:36:43,980
so on alright uh looking in here so our

853
00:36:42,300 --> 00:36:47,510
lighting work has changed a little bit

854
00:36:43,980 --> 00:36:51,240
let me just go in and make that work so

855
00:36:47,510 --> 00:36:54,510
yeah like let's see solution first light

856
00:36:51,239 --> 00:37:01,469
probe one pass last first light probe

857
00:36:54,510 --> 00:37:05,790
index one pass light probe index that's

858
00:37:01,469 --> 00:37:09,419
gonna be like probe count so it's

859
00:37:05,789 --> 00:37:10,460
basically that and I think that should

860
00:37:09,420 --> 00:37:28,050
do it

861
00:37:10,460 --> 00:37:29,220
probably didn't we call this compute

862
00:37:28,050 --> 00:37:32,220
light per application work or something

863
00:37:29,219 --> 00:37:33,719
like that yeah we did so what's the

864
00:37:32,219 --> 00:37:39,959
function call for that platform or Q

865
00:37:33,719 --> 00:37:42,750
callback does that not look like that so

866
00:37:39,960 --> 00:37:46,470
platform work you call back looks like

867
00:37:42,750 --> 00:37:48,389
this it takes the work queue and the

868
00:37:46,469 --> 00:37:51,649
data so I guess we're just supposed to

869
00:37:48,389 --> 00:37:51,650
pass the lighting view in here

870
00:37:55,289 --> 00:38:02,409
all right so now what we got to do is

871
00:38:00,699 --> 00:38:04,449
again just figure out what's going on

872
00:38:02,409 --> 00:38:08,639
with our routine and so hopefully we'll

873
00:38:04,449 --> 00:38:11,529
get some information here all right so

874
00:38:08,639 --> 00:38:13,389
to start with this is not really a real

875
00:38:11,530 --> 00:38:14,560
crash this is just we haven't quite

876
00:38:13,389 --> 00:38:16,839
finished writing this routine it looks

877
00:38:14,559 --> 00:38:19,840
like so we have the like and closest

878
00:38:16,840 --> 00:38:22,900
lights bit here so we just never

879
00:38:19,840 --> 00:38:24,430
actually did that so we should probably

880
00:38:22,900 --> 00:38:26,530
do that but for right now we're gonna do

881
00:38:24,429 --> 00:38:28,359
is probably not do and closest lights

882
00:38:26,530 --> 00:38:32,200
we're just gonna call like the get one

883
00:38:28,360 --> 00:38:36,550
closest light feature and or because we

884
00:38:32,199 --> 00:38:39,699
only really need one at the moment right

885
00:38:36,550 --> 00:38:42,100
so instead of any of this stuff you know

886
00:38:39,699 --> 00:38:43,329
we're we're gonna maybe get rid of this

887
00:38:42,099 --> 00:38:45,969
and just say all right

888
00:38:43,329 --> 00:38:50,019
letting box bias toward light is going

889
00:38:45,969 --> 00:38:55,889
to be like what's that get lightly 4p or

890
00:38:50,019 --> 00:39:00,190
whatever the crap it was so this right

891
00:38:55,889 --> 00:39:02,230
and we just need a p-value of where

892
00:39:00,190 --> 00:39:05,019
we're going to actually look for it and

893
00:39:02,230 --> 00:39:06,510
so since we know the point that we're

894
00:39:05,019 --> 00:39:09,730
going to be sampling the light probe

895
00:39:06,510 --> 00:39:12,370
position all we should have to do is

896
00:39:09,730 --> 00:39:15,429
just pass that down and then we'll get

897
00:39:12,369 --> 00:39:17,710
back like the light that is you know Nam

898
00:39:15,429 --> 00:39:19,899
not really closest to us but is near to

899
00:39:17,710 --> 00:39:23,619
us or whatever right a a light that is

900
00:39:19,900 --> 00:39:25,420
near to us um so we could start there

901
00:39:23,619 --> 00:39:27,309
and then we can see what this code is

902
00:39:25,420 --> 00:39:30,659
actually doing and see if it you know we

903
00:39:27,309 --> 00:39:30,659
can actually get it working at all

904
00:39:31,050 --> 00:39:34,680
now we're actually running and so

905
00:39:32,880 --> 00:39:36,780
hopefully like if I compile in release

906
00:39:34,679 --> 00:39:37,739
mode we can see but presumably what our

907
00:39:36,780 --> 00:39:39,360
problems gonna be is we're just gonna

908
00:39:37,739 --> 00:39:43,529
remain black there's not going to be any

909
00:39:39,360 --> 00:39:45,960
actual light because of bugs in the in

910
00:39:43,530 --> 00:39:47,450
the box of sampler or who knows what

911
00:39:45,960 --> 00:39:50,579
else right

912
00:39:47,449 --> 00:39:52,559
all right so here's where we're at you

913
00:39:50,579 --> 00:39:55,110
can see that game is running right and

914
00:39:52,559 --> 00:39:56,670
you know the hero is actually hopping

915
00:39:55,110 --> 00:40:00,269
around but you can't see it I can sort

916
00:39:56,670 --> 00:40:02,190
of see the faint little lines in here so

917
00:40:00,269 --> 00:40:03,960
what we need to do now is figure out why

918
00:40:02,190 --> 00:40:05,730
we're not getting any light back right

919
00:40:03,960 --> 00:40:07,920
and so we're gonna want to do is step

920
00:40:05,730 --> 00:40:09,179
through our you know our lighting

921
00:40:07,920 --> 00:40:10,800
function here and see what's going on

922
00:40:09,179 --> 00:40:12,779
but you know basically we got to figure

923
00:40:10,800 --> 00:40:17,280
out how this you know makes this routine

924
00:40:12,780 --> 00:40:19,170
work properly and also you know it

925
00:40:17,280 --> 00:40:22,680
should be at least injecting some

926
00:40:19,170 --> 00:40:24,680
transfer some light transfer in here so

927
00:40:22,679 --> 00:40:27,679
I think we maybe just have some basic

928
00:40:24,679 --> 00:40:27,679
issues

929
00:40:29,079 --> 00:40:34,650
and you know this doesn't have to happen

930
00:40:31,119 --> 00:40:34,650
in Murr because this happens at the end

931
00:40:38,570 --> 00:40:40,630
you

932
00:40:42,389 --> 00:40:45,139
I would think

933
00:40:45,809 --> 00:40:47,869
you

934
00:40:51,099 --> 00:40:55,479
yeah so anyway I'm gonna step through

935
00:40:53,768 --> 00:40:55,958
this cuz I don't really know what's

936
00:40:55,478 --> 00:40:57,929
wrong with it

937
00:40:55,958 --> 00:41:02,169
right so I want to see what's going on

938
00:40:57,929 --> 00:41:05,018
and we'll go from there so I'm gonna

939
00:41:02,170 --> 00:41:07,959
start by saying look we should have the

940
00:41:05,018 --> 00:41:13,358
bias towards light path we should hit

941
00:41:07,958 --> 00:41:15,038
something sometimes right and the more

942
00:41:13,358 --> 00:41:16,808
interesting thing to to me actually is

943
00:41:15,039 --> 00:41:18,430
that if we didn't hit anything so like

944
00:41:16,809 --> 00:41:20,589
let's see go in this path we should be

945
00:41:18,429 --> 00:41:22,419
injecting some moon color even if we

946
00:41:20,588 --> 00:41:23,978
didn't hit anything so the fact that

947
00:41:22,420 --> 00:41:25,239
this isn't working is really weird I'm

948
00:41:23,978 --> 00:41:27,098
just gonna actually jump to here really

949
00:41:25,239 --> 00:41:31,989
quickly and see what our what our status

950
00:41:27,099 --> 00:41:41,039
is for like light P light C and light

951
00:41:31,989 --> 00:41:41,039
fall-off oops did I not recompile

952
00:41:49,690 --> 00:41:54,769
so here's our information if I look at

953
00:41:52,670 --> 00:41:57,440
the light color there is light coming

954
00:41:54,769 --> 00:41:59,610
back so that's a bit weird and we're

955
00:41:57,440 --> 00:42:02,719
going to spam the voxel so

956
00:41:59,610 --> 00:42:02,719
[Music]

957
00:42:04,980 --> 00:42:07,039
you

958
00:42:08,849 --> 00:42:10,910
you

959
00:42:14,550 --> 00:42:18,440
so the fact that the light fall-off

960
00:42:20,010 --> 00:42:25,110
I think that's the wrong way to go for

961
00:42:23,010 --> 00:42:34,980
the moonlight right so light fall-off

962
00:42:25,110 --> 00:42:37,380
gets multiplied in here I think yes

963
00:42:34,980 --> 00:42:40,679
times the light oh no but that should so

964
00:42:37,380 --> 00:42:43,700
the lighting should be adding something

965
00:42:40,679 --> 00:42:43,699
here shouldn't it

966
00:42:49,590 --> 00:42:57,690
ah I know what's going on

967
00:42:54,619 --> 00:42:58,920
so one thing we did and we shouldn't

968
00:42:57,690 --> 00:43:01,349
have done it this way because it was

969
00:42:58,920 --> 00:43:03,539
misleading is in the test cast from

970
00:43:01,349 --> 00:43:05,940
probes we welded the part here that does

971
00:43:03,539 --> 00:43:07,650
the updating of the voxel into the test

972
00:43:05,940 --> 00:43:11,579
cast but we need that to actually happen

973
00:43:07,650 --> 00:43:14,180
inside the lighting always right that

974
00:43:11,579 --> 00:43:17,039
needs to happen here effectively right

975
00:43:14,179 --> 00:43:18,239
so we were never we were accumulating

976
00:43:17,039 --> 00:43:19,860
stuff but that we were never actually

977
00:43:18,239 --> 00:43:24,209
doing anything with the accumulated

978
00:43:19,860 --> 00:43:25,410
version okay so that that makes sense

979
00:43:24,210 --> 00:43:26,940
that that didn't work so we should

980
00:43:25,409 --> 00:43:29,069
because we should even if our ray Kassar

981
00:43:26,940 --> 00:43:31,889
is totally busted we should be seeing

982
00:43:29,070 --> 00:43:33,360
some moonlight because that's what

983
00:43:31,889 --> 00:43:34,739
happens when you don't find any light

984
00:43:33,360 --> 00:43:38,700
sources you're supposed to just get a

985
00:43:34,739 --> 00:43:41,459
little bit of moonlight right um so this

986
00:43:38,699 --> 00:43:43,980
looks totally crazy right now I have no

987
00:43:41,460 --> 00:43:46,110
idea what's going on there but that's

988
00:43:43,980 --> 00:43:47,760
actually better at least than it was

989
00:43:46,110 --> 00:43:50,430
because now at least we sort of are

990
00:43:47,760 --> 00:43:53,430
seeing something right all right so

991
00:43:50,429 --> 00:43:54,809
let's run this in full speed and see

992
00:43:53,429 --> 00:43:56,519
what the heck we're looking at here and

993
00:43:54,809 --> 00:43:58,440
then we'll sort of start to try and

994
00:43:56,519 --> 00:44:02,130
figure out what the heck what's going on

995
00:43:58,440 --> 00:44:04,320
with our with our code right alright so

996
00:44:02,130 --> 00:44:07,410
that was just some crazy I don't know

997
00:44:04,320 --> 00:44:08,670
what that was about but anyway so we are

998
00:44:07,409 --> 00:44:12,149
seeing some light so we can get started

999
00:44:08,670 --> 00:44:14,639
here so let's take a look inside compute

1000
00:44:12,150 --> 00:44:16,050
light propagation again we're doing this

1001
00:44:14,639 --> 00:44:17,219
single threaded so we shouldn't have to

1002
00:44:16,050 --> 00:44:21,360
worry about any weird like threading

1003
00:44:17,219 --> 00:44:23,730
things that are happening now and if we

1004
00:44:21,360 --> 00:44:25,920
look down here where we're doing our

1005
00:44:23,730 --> 00:44:28,650
light updating right here's where we're

1006
00:44:25,920 --> 00:44:31,920
spending our voxels you know and this

1007
00:44:28,650 --> 00:44:33,960
should be clearing those out right so we

1008
00:44:31,920 --> 00:44:35,610
should be seeing some something stable

1009
00:44:33,960 --> 00:44:37,590
like you know what's a little bit weird

1010
00:44:35,610 --> 00:44:38,099
is why did it go to black like why did

1011
00:44:37,590 --> 00:44:39,960
we not

1012
00:44:38,099 --> 00:44:43,799
why didn't don't we see just a stable

1013
00:44:39,960 --> 00:44:45,720
light there I'm not 100% sure there

1014
00:44:43,800 --> 00:44:48,960
might be some like Manning or something

1015
00:44:45,719 --> 00:44:51,000
like that going on in here but um so you

1016
00:44:48,960 --> 00:44:53,309
know this code path in fact one thing I

1017
00:44:51,000 --> 00:44:55,760
could do too is just maybe we just start

1018
00:44:53,309 --> 00:44:59,309
with just trying to debug just the moon

1019
00:44:55,760 --> 00:45:01,800
the moon light itself so if I literally

1020
00:44:59,309 --> 00:45:03,509
just nuke the path that ever actually

1021
00:45:01,800 --> 00:45:05,250
does anything right

1022
00:45:03,510 --> 00:45:08,430
say we're always gonna just do moonlight

1023
00:45:05,250 --> 00:45:13,170
transfer it sounds like some kind of bad

1024
00:45:08,429 --> 00:45:17,099
70s band if we just do moonlight

1025
00:45:13,170 --> 00:45:18,840
transfer like what happens there and one

1026
00:45:17,099 --> 00:45:25,289
thing you can see from the moonlight

1027
00:45:18,840 --> 00:45:29,220
transfer at the moment is it's a little

1028
00:45:25,289 --> 00:45:32,730
nonsensical the results that we're

1029
00:45:29,219 --> 00:45:35,579
getting I especially don't understand

1030
00:45:32,730 --> 00:45:39,329
why moving in here changes I don't

1031
00:45:35,579 --> 00:45:41,819
understand why that gets darker when we

1032
00:45:39,329 --> 00:45:43,920
move in Oh possibly because we are the

1033
00:45:41,820 --> 00:45:46,140
closer light than that one was or

1034
00:45:43,920 --> 00:45:50,789
something like that and maybe that's not

1035
00:45:46,139 --> 00:45:53,400
that understandable but anyway so I'm

1036
00:45:50,789 --> 00:45:55,170
curious like about this now like let's

1037
00:45:53,400 --> 00:45:57,180
try and figure out why you know the

1038
00:45:55,170 --> 00:46:00,119
ambient light looks way too bright you

1039
00:45:57,179 --> 00:46:01,440
know why is that and I'm not sure so if

1040
00:46:00,119 --> 00:46:04,789
we take a look at how this is being

1041
00:46:01,440 --> 00:46:04,789
spamed out here

1042
00:46:09,429 --> 00:46:11,489
you

1043
00:46:14,780 --> 00:46:21,740
I'm not sure about the Ray wait either

1044
00:46:18,320 --> 00:46:21,740
is that

1045
00:46:27,539 --> 00:46:34,450
so we're not using the railway either so

1046
00:46:30,579 --> 00:46:37,510
we also don't this is totally busted as

1047
00:46:34,449 --> 00:46:40,608
well and this is not six anymore

1048
00:46:37,510 --> 00:46:40,609
[Music]

1049
00:46:45,150 --> 00:46:47,210
you

1050
00:46:50,530 --> 00:46:56,510
yeah so if we look at what's happening

1051
00:46:54,139 --> 00:47:02,269
here the REA bundle count is how many of

1052
00:46:56,510 --> 00:47:05,780
these were going to do right and so the

1053
00:47:02,269 --> 00:47:11,929
weight of each one of these would be 1

1054
00:47:05,780 --> 00:47:13,220
over the rate bundle count I'm not sure

1055
00:47:11,929 --> 00:47:15,469
that that's even necessary though

1056
00:47:13,219 --> 00:47:17,989
because we're doing a power sum here in

1057
00:47:15,469 --> 00:47:20,149
fact you can see us doing the power sum

1058
00:47:17,989 --> 00:47:23,089
and then we're normalizing by the total

1059
00:47:20,150 --> 00:47:25,070
power after so I'm pretty sure that

1060
00:47:23,090 --> 00:47:27,850
actually this just doesn't need to be

1061
00:47:25,070 --> 00:47:27,850
here anymore

1062
00:47:28,179 --> 00:47:38,769
when we span the voxel we could just

1063
00:47:33,139 --> 00:47:38,769
probably just looking at this

1064
00:47:40,590 --> 00:47:47,610
average light location the average light

1065
00:47:42,599 --> 00:47:51,420
fall-off and then the light color the

1066
00:47:47,610 --> 00:47:53,780
light color is never normalized for some

1067
00:47:51,420 --> 00:47:53,780
reason

1068
00:47:54,329 --> 00:48:03,179
about this so we're summing the light

1069
00:47:57,000 --> 00:48:07,969
color every time but we never normalize

1070
00:48:03,179 --> 00:48:12,169
that and we probably should so I guess

1071
00:48:07,969 --> 00:48:12,169
maybe I spoke too soon there

1072
00:48:12,949 --> 00:48:15,009
you

1073
00:48:18,130 --> 00:48:26,269
so this is gonna do one over the Rabin

1074
00:48:23,929 --> 00:48:28,639
del count times the raise per bundle

1075
00:48:26,268 --> 00:48:31,639
right so it's it's actually times four

1076
00:48:28,639 --> 00:48:35,858
and so the Rey wait down here

1077
00:48:31,639 --> 00:48:35,858
wouldn't you be used to normalize this

1078
00:48:36,789 --> 00:48:44,509
right so I do think that needed to

1079
00:48:41,088 --> 00:48:46,788
happen because these are two this was

1080
00:48:44,509 --> 00:48:49,519
way too bright and I think that was why

1081
00:48:46,789 --> 00:48:52,759
cuz the color was never adjusted

1082
00:48:49,518 --> 00:48:54,588
properly and so that should be down

1083
00:48:52,759 --> 00:48:56,539
there but the problem is you know are

1084
00:48:54,588 --> 00:48:59,210
the way that our color encoding works is

1085
00:48:56,539 --> 00:49:03,979
we actually sort of color encode a few

1086
00:48:59,210 --> 00:49:07,940
steps down black is is below like the

1087
00:49:03,978 --> 00:49:09,288
actual color of no light is moved

1088
00:49:07,940 --> 00:49:12,440
upwards by the fact that we're doing

1089
00:49:09,289 --> 00:49:14,059
sort of that clamping of the light that

1090
00:49:12,440 --> 00:49:17,210
shifting of the light value to get the

1091
00:49:14,059 --> 00:49:18,528
interpolation and so it's hard to say we

1092
00:49:17,210 --> 00:49:20,119
kind of need to work that out a little

1093
00:49:18,528 --> 00:49:21,318
bit more but for now we'll boost our

1094
00:49:20,119 --> 00:49:22,519
light files eventually we're gonna have

1095
00:49:21,318 --> 00:49:25,639
to go through and work out exactly the

1096
00:49:22,518 --> 00:49:28,189
exact math on that to get it just right

1097
00:49:25,639 --> 00:49:30,798
but basically what that means is like

1098
00:49:28,190 --> 00:49:32,690
yeah this has to be sort of shifted into

1099
00:49:30,798 --> 00:49:35,179
a range that actually produces some

1100
00:49:32,690 --> 00:49:36,769
visible light there once we do that

1101
00:49:35,179 --> 00:49:40,009
truncation and I'm not sure what that

1102
00:49:36,768 --> 00:49:41,838
value would necessarily be but we can

1103
00:49:40,009 --> 00:49:45,338
play with it and figure out what it

1104
00:49:41,838 --> 00:49:45,338
should be back in here

1105
00:49:57,818 --> 00:50:04,210
just need to figure out roughly where we

1106
00:50:00,469 --> 00:50:04,210
think that that ambient should be at

1107
00:50:07,349 --> 00:50:12,299
so that's somewhere right in there looks

1108
00:50:10,059 --> 00:50:12,299
like

1109
00:50:16,780 --> 00:50:18,840
you

1110
00:50:19,190 --> 00:50:21,250
you

1111
00:50:21,719 --> 00:50:25,298
you

1112
00:50:23,469 --> 00:50:30,189
so one thing that's really kind of

1113
00:50:25,298 --> 00:50:32,920
strange though is I'm not quite sure why

1114
00:50:30,190 --> 00:50:35,019
we're getting different values depending

1115
00:50:32,920 --> 00:50:36,909
on where you are I mean this is an

1116
00:50:35,019 --> 00:50:42,190
ambient light it should be added into

1117
00:50:36,909 --> 00:50:44,409
everybody right and so I guess I'm not

1118
00:50:42,190 --> 00:50:47,440
sure where that's coming from that seems

1119
00:50:44,409 --> 00:50:50,440
concerning like why would my location

1120
00:50:47,440 --> 00:50:55,329
ever change that information because

1121
00:50:50,440 --> 00:50:57,849
we're not actually doing anything with

1122
00:50:55,329 --> 00:51:00,099
like we're not we if zero it out the

1123
00:50:57,849 --> 00:51:03,130
case that actually happens when you hit

1124
00:51:00,099 --> 00:51:06,700
a light source so in you know it doesn't

1125
00:51:03,130 --> 00:51:12,150
really make a lot of sense is a mission

1126
00:51:06,699 --> 00:51:12,149
direction so I guess

1127
00:51:13,110 --> 00:51:20,459
I guess that bias does come in

1128
00:51:17,400 --> 00:51:20,459
[Music]

1129
00:51:29,039 --> 00:51:32,930
you

1130
00:51:30,869 --> 00:51:32,929
you

1131
00:51:33,059 --> 00:51:35,119
you

1132
00:51:41,210 --> 00:51:46,170
yeah I'm not sure what we want to do

1133
00:51:43,619 --> 00:51:47,970
about that what we would need to do here

1134
00:51:46,170 --> 00:51:50,220
for admission directions so a couple

1135
00:51:47,969 --> 00:51:52,289
things about this if you look like that

1136
00:51:50,219 --> 00:51:54,089
is one place where that thing would have

1137
00:51:52,289 --> 00:51:55,980
needed to be normalized and currently

1138
00:51:54,090 --> 00:51:58,860
it's not so if we actually look at

1139
00:51:55,980 --> 00:52:00,679
what's going on with that initial ray

1140
00:51:58,860 --> 00:52:03,599
Direction here

1141
00:52:00,679 --> 00:52:10,859
that's not normalized and pretty much

1142
00:52:03,599 --> 00:52:13,099
does need to be right so that's a bit of

1143
00:52:10,860 --> 00:52:13,099
an issue

1144
00:52:14,108 --> 00:52:19,460
yeah that's a bit of an issue so what we

1145
00:52:17,239 --> 00:52:21,818
would want to do here I guess let me

1146
00:52:19,460 --> 00:52:25,429
just take a look at what we've got here

1147
00:52:21,818 --> 00:52:26,509
proxy nose so I'm gonna do a raid

1148
00:52:25,429 --> 00:52:32,210
director you know I'm gonna do an

1149
00:52:26,510 --> 00:52:33,890
approximate on it and that would

1150
00:52:32,210 --> 00:52:36,550
normalize it so that we wouldn't be

1151
00:52:33,889 --> 00:52:39,588
getting wildly different results for

1152
00:52:36,550 --> 00:52:41,510
rays that are you know pointing directly

1153
00:52:39,588 --> 00:52:46,578
upwards towards one oops versus ones

1154
00:52:41,510 --> 00:52:50,480
that aren't so I'm assuming that would

1155
00:52:46,579 --> 00:52:52,369
allow us to deal with this now more

1156
00:52:50,480 --> 00:52:55,150
stable II but again there may be some

1157
00:52:52,369 --> 00:52:55,150
other bugs in here

1158
00:53:01,018 --> 00:53:03,078
you

1159
00:53:03,340 --> 00:53:05,400
you

1160
00:53:13,650 --> 00:53:22,349
right so to me that looks pretty moon

1161
00:53:16,829 --> 00:53:24,028
lady you know again I'm not really sure

1162
00:53:22,349 --> 00:53:25,289
exactly what's going on with some of

1163
00:53:24,028 --> 00:53:26,969
this stuff it looks like there's still

1164
00:53:25,289 --> 00:53:32,940
some weirdness in terms of what's going

1165
00:53:26,969 --> 00:53:35,548
like why is that I guess that might be

1166
00:53:32,940 --> 00:53:37,798
just because things that haven't been

1167
00:53:35,548 --> 00:53:41,690
pulled in yet take a while to relight at

1168
00:53:37,798 --> 00:53:41,690
that slow of speed

1169
00:53:46,239 --> 00:53:50,949
which I guess is going to be a problem

1170
00:53:48,199 --> 00:53:50,949
for us but

1171
00:53:52,409 --> 00:53:55,960
you

1172
00:53:54,170 --> 00:53:58,019
you

1173
00:53:55,960 --> 00:53:58,019
you

1174
00:54:03,800 --> 00:54:07,810
right

1175
00:54:06,039 --> 00:54:08,980
so I'm not sure I think we still have

1176
00:54:07,809 --> 00:54:10,960
some bugs in there but I'm gonna just

1177
00:54:08,980 --> 00:54:13,240
push forward again I know this is gonna

1178
00:54:10,960 --> 00:54:14,710
be a long process so as much as it is

1179
00:54:13,239 --> 00:54:18,879
annoying I'm just gonna go ahead and say

1180
00:54:14,710 --> 00:54:19,360
all right let's try and get as far as we

1181
00:54:18,880 --> 00:54:21,869
can

1182
00:54:19,360 --> 00:54:25,360
this should blow up now in theory

1183
00:54:21,869 --> 00:54:28,569
because like we know something is crazy

1184
00:54:25,360 --> 00:54:31,059
about it and the way that those are kind

1185
00:54:28,570 --> 00:54:32,800
of flashing like that I believe that

1186
00:54:31,059 --> 00:54:34,750
means we're getting some kind of madness

1187
00:54:32,800 --> 00:54:38,470
in there like I think we're getting some

1188
00:54:34,750 --> 00:54:42,760
invalid values somehow somebody is

1189
00:54:38,469 --> 00:54:46,089
returning garbage or like f32 max right

1190
00:54:42,760 --> 00:54:50,140
or something so you know maybe that's

1191
00:54:46,090 --> 00:54:53,260
you know maybe that's this right I don't

1192
00:54:50,139 --> 00:54:55,449
know but anyway so somehow I think we're

1193
00:54:53,260 --> 00:54:58,890
getting some garbage values in there I'm

1194
00:54:55,449 --> 00:54:58,889
not sure exactly how

1195
00:55:03,559 --> 00:55:08,690
I'm not sure why that would be exactly

1196
00:55:14,030 --> 00:55:16,090
you

1197
00:55:17,360 --> 00:55:21,599
and I don't think there's anything weird

1198
00:55:19,829 --> 00:55:23,009
like uninitialized or anything so I'm

1199
00:55:21,599 --> 00:55:27,769
not sure why we would be getting weird

1200
00:55:23,010 --> 00:55:32,270
values here because you would think that

1201
00:55:27,769 --> 00:55:34,920
this all should have been reasonable and

1202
00:55:32,269 --> 00:55:36,509
looking at like so you know we're

1203
00:55:34,920 --> 00:55:39,329
getting the probe sample out of this

1204
00:55:36,510 --> 00:55:43,050
we're getting the normal here we're

1205
00:55:39,329 --> 00:55:53,190
getting the color out here and the

1206
00:55:43,050 --> 00:55:55,500
emission value so you know I guess just

1207
00:55:53,190 --> 00:55:57,720
looking at this I'm just gonna say like

1208
00:55:55,500 --> 00:56:00,150
maybe the easiest thing to do is to just

1209
00:55:57,719 --> 00:56:03,559
try and say well the only stuff that

1210
00:56:00,150 --> 00:56:03,559
really comes out of here

1211
00:56:03,980 --> 00:56:11,579
that's particularly strange I mean I

1212
00:56:08,969 --> 00:56:13,639
guess light pee

1213
00:56:11,579 --> 00:56:13,640
you

1214
00:56:14,949 --> 00:56:22,480
what happens with light P probe sample P

1215
00:56:18,929 --> 00:56:24,429
so probe sample P is moon P and then in

1216
00:56:22,480 --> 00:56:27,760
here we would compute it as get combined

1217
00:56:24,429 --> 00:56:29,889
so bright alright so basically like this

1218
00:56:27,760 --> 00:56:36,099
is the only stuff we actually ever see

1219
00:56:29,889 --> 00:56:39,250
so probe sample P transfer PB s and this

1220
00:56:36,099 --> 00:56:42,490
light fall-off this light fall-off is

1221
00:56:39,250 --> 00:56:44,889
0.5 here and 0 here so like the chances

1222
00:56:42,489 --> 00:56:47,199
that that's causing a significant Manesh

1223
00:56:44,889 --> 00:56:49,838
kind of problem or like 0 unless we were

1224
00:56:47,199 --> 00:56:51,429
dividing by this light fall-off which we

1225
00:56:49,838 --> 00:56:55,420
know we're not and also that's the case

1226
00:56:51,429 --> 00:57:00,429
that works right so I think we're

1227
00:56:55,420 --> 00:57:04,720
looking at transfer PPS and light P must

1228
00:57:00,429 --> 00:57:09,480
have bugs in them somehow so let's take

1229
00:57:04,719 --> 00:57:09,480
a look at them and say like you know if

1230
00:57:10,018 --> 00:57:23,169
inbounds or looks fishy right I'm gonna

1231
00:57:21,818 --> 00:57:25,838
just make this function called looks

1232
00:57:23,170 --> 00:57:32,409
fishy and I'm gonna pass these two

1233
00:57:25,838 --> 00:57:36,699
things to it like give myself a way to

1234
00:57:32,409 --> 00:57:38,949
get a break point in to see if some of

1235
00:57:36,699 --> 00:57:39,969
these values are weird and so what I'm

1236
00:57:38,949 --> 00:57:42,818
gonna do is I'm just gonna make a

1237
00:57:39,969 --> 00:57:45,578
function called looks fishy and again

1238
00:57:42,818 --> 00:57:47,558
this is just a aid debugging here right

1239
00:57:45,579 --> 00:57:49,778
so basically what that's gonna do is

1240
00:57:47,559 --> 00:57:52,569
it's going to return if you pass it in

1241
00:57:49,778 --> 00:57:54,309
some kind of a vector it's going to

1242
00:57:52,568 --> 00:57:59,788
return a result that like if this vector

1243
00:57:54,309 --> 00:57:59,789
looks kind of fishy it's gonna say true

1244
00:58:00,268 --> 00:58:03,689
so what I'm going to say here is looks

1245
00:58:02,739 --> 00:58:05,059
fishy

1246
00:58:03,690 --> 00:58:08,260
X

1247
00:58:05,059 --> 00:58:08,259
[Applause]

1248
00:58:11,170 --> 00:58:18,710
and I'm just gonna make it looks fishy

1249
00:58:14,260 --> 00:58:22,790
for scalar and then that's all I really

1250
00:58:18,710 --> 00:58:28,130
need right and I'm going to say this

1251
00:58:22,789 --> 00:58:32,659
this scalar looks fishy I you know if if

1252
00:58:28,130 --> 00:58:34,880
a dot X I want it to kind of be inbounds

1253
00:58:32,659 --> 00:58:36,769
right so I want a to X to be greater

1254
00:58:34,880 --> 00:58:54,380
than equal to like negative something

1255
00:58:36,769 --> 00:58:57,710
large and a 2x a right so I just want to

1256
00:58:54,380 --> 00:58:59,869
you know have some way of testing this

1257
00:58:57,710 --> 00:59:02,059
thing and finding out like roughly

1258
00:58:59,869 --> 00:59:03,200
whether these values are in bounds at

1259
00:59:02,059 --> 00:59:04,940
all

1260
00:59:03,199 --> 00:59:06,858
and I'm gonna change this to debug mode

1261
00:59:04,940 --> 00:59:09,769
and I'm hoping what'll happen is we'll

1262
00:59:06,858 --> 00:59:11,329
just get a breakpoint there and we'll be

1263
00:59:09,769 --> 00:59:16,000
able to see that some of our values are

1264
00:59:11,329 --> 00:59:21,259
just getting you know in just totally

1265
00:59:16,000 --> 00:59:23,960
busted that's the hope so let's see so

1266
00:59:21,260 --> 00:59:28,090
here we are and we know that we're you

1267
00:59:23,960 --> 00:59:28,090
know the folks we're looking at here now

1268
00:59:28,539 --> 00:59:31,880
let me look at transfer PPS and light

1269
00:59:31,429 --> 00:59:35,419
key

1270
00:59:31,880 --> 00:59:41,980
so here's those values transfer PPS

1271
00:59:35,420 --> 00:59:43,460
looks fine light P I mean is that really

1272
00:59:41,980 --> 00:59:46,070
possible

1273
00:59:43,460 --> 00:59:48,619
I mean technically that value is not

1274
00:59:46,070 --> 00:59:51,920
ridiculous but it does seem like that

1275
00:59:48,619 --> 00:59:53,500
would be kind of weird that the light

1276
00:59:51,920 --> 00:59:56,150
position could really be that far away

1277
00:59:53,500 --> 01:00:01,239
so I'm what kind of wondering is light P

1278
00:59:56,150 --> 01:00:01,240
actually valid so light P in this case

1279
01:00:01,659 --> 01:00:07,539
oh that's the summation though it's it's

1280
01:00:05,320 --> 01:00:12,400
sorry so it shouldn't be light p its

1281
01:00:07,539 --> 01:00:14,590
probperly going re we're looking at the

1282
01:00:12,400 --> 01:00:16,829
wrong value there is nothing wrong with

1283
01:00:14,590 --> 01:00:16,829
that

1284
01:00:25,449 --> 01:00:31,389
so let's let it run a little more here

1285
01:00:27,369 --> 01:00:33,989
and see if anything looks fishy we're

1286
01:00:31,389 --> 01:00:33,989
hoping it does

1287
01:00:34,889 --> 01:00:36,949
you

1288
01:00:40,099 --> 01:00:45,210
okay good so we're getting a looks fishy

1289
01:00:43,320 --> 01:00:49,710
here let's see what the actual things we

1290
01:00:45,210 --> 01:00:54,858
get are so that I mean Oh again look

1291
01:00:49,710 --> 01:00:54,858
into throwing one say that's ridiculous

1292
01:00:55,820 --> 01:01:00,838
so yeah like it looks like I guess

1293
01:00:58,858 --> 01:01:03,210
there's no immediate like nanning

1294
01:01:00,838 --> 01:01:04,920
involved but it does look like our light

1295
01:01:03,210 --> 01:01:08,900
are feeding back on themselves

1296
01:01:04,920 --> 01:01:08,900
like we're putting light into the system

1297
01:01:08,960 --> 01:01:17,639
and it's just like driving out - it's

1298
01:01:15,059 --> 01:01:19,139
just getting like an infinite amount of

1299
01:01:17,639 --> 01:01:22,440
light like way too much light like we're

1300
01:01:19,139 --> 01:01:23,789
not properly averaging in the amount

1301
01:01:22,440 --> 01:01:25,130
that should be average dinner or

1302
01:01:23,789 --> 01:01:27,809
something like this right

1303
01:01:25,130 --> 01:01:29,490
so something weird is happening when

1304
01:01:27,809 --> 01:01:32,219
we're actually producing when we're

1305
01:01:29,489 --> 01:01:36,868
doing the spam voxels like this stuff is

1306
01:01:32,219 --> 01:01:44,159
not computing something stabili or

1307
01:01:36,869 --> 01:01:46,829
something the transfer PPS is just way

1308
01:01:44,159 --> 01:01:49,230
too high and so normally what what's

1309
01:01:46,829 --> 01:01:54,389
happening here I guess is is we're doing

1310
01:01:49,230 --> 01:01:56,070
that by taking the sample ref color I'm

1311
01:01:54,389 --> 01:01:59,338
assuming that's coming from here because

1312
01:01:56,070 --> 01:02:01,200
presumably sample ref color should

1313
01:01:59,338 --> 01:02:04,108
should never really be particularly high

1314
01:02:01,199 --> 01:02:09,750
I mean maybe it is coming back badly but

1315
01:02:04,108 --> 01:02:11,219
I would like to see so let's set a

1316
01:02:09,750 --> 01:02:13,588
breakpoint in here where we actually got

1317
01:02:11,219 --> 01:02:16,679
a hit and see about how much light we're

1318
01:02:13,588 --> 01:02:22,500
sending back so let's see we've got a

1319
01:02:16,679 --> 01:02:26,489
probe oh sorry we've got voxel

1320
01:02:22,500 --> 01:02:29,059
irradiance here here's our trail in here

1321
01:02:26,489 --> 01:02:29,059
filtering

1322
01:02:31,010 --> 01:02:37,470
so I light in zero weight in one all

1323
01:02:36,989 --> 01:02:44,399
right

1324
01:02:37,469 --> 01:02:49,859
c0 yeah so this would just produce no

1325
01:02:44,400 --> 01:02:52,230
light at all it does and so

1326
01:02:49,860 --> 01:02:54,360
first this looks like it's working okay

1327
01:02:52,230 --> 01:02:58,260
I guess we don't really know like if

1328
01:02:54,360 --> 01:02:59,550
this was going to be something that

1329
01:02:58,260 --> 01:03:01,260
actually hit a light source and the

1330
01:02:59,550 --> 01:03:02,910
emission value came back then we're

1331
01:03:01,260 --> 01:03:05,510
going to actually put something in there

1332
01:03:02,909 --> 01:03:05,509
right

1333
01:03:10,469 --> 01:03:14,059
you

1334
01:03:12,000 --> 01:03:14,059
you

1335
01:03:16,409 --> 01:03:23,068
but again I don't really see that being

1336
01:03:18,838 --> 01:03:24,690
particularly bad let me take a look in

1337
01:03:23,068 --> 01:03:26,699
here I I don't remember what we're doing

1338
01:03:24,690 --> 01:03:28,380
inside spam box well I'm not seeing

1339
01:03:26,699 --> 01:03:32,038
anything really all that suspicious yet

1340
01:03:28,380 --> 01:03:35,369
which is not good the more subtle it is

1341
01:03:32,039 --> 01:03:37,200
the worse right so if we go in here and

1342
01:03:35,369 --> 01:03:40,250
take a look at what's happening this is

1343
01:03:37,199 --> 01:03:40,250
just filling in the light field

1344
01:03:43,079 --> 01:03:47,109
you

1345
01:03:44,889 --> 01:03:55,230
and this is kind of yeah so this is kind

1346
01:03:47,108 --> 01:03:55,230
of broken so spam voxel slice yeah is

1347
01:03:55,840 --> 01:04:03,220
is already accounting for the intensity

1348
01:03:59,230 --> 01:04:05,769
range of the light source here so that

1349
01:04:03,219 --> 01:04:08,980
is not actually the way we would want to

1350
01:04:05,769 --> 01:04:11,360
do it so spam voxel slice probably has

1351
01:04:08,980 --> 01:04:13,480
to be changed a little bit

1352
01:04:11,360 --> 01:04:16,119
[Music]

1353
01:04:13,480 --> 01:04:18,579
and that fall-off has to be more of and

1354
01:04:16,119 --> 01:04:20,230
like this this needs to be about the

1355
01:04:18,579 --> 01:04:22,900
actual fall off because the emission

1356
01:04:20,230 --> 01:04:26,050
rate has already been put in there and

1357
01:04:22,900 --> 01:04:27,940
so the light a actually should just be

1358
01:04:26,050 --> 01:04:36,430
going like you know between like zero

1359
01:04:27,940 --> 01:04:40,530
and one really so so that's not it's not

1360
01:04:36,429 --> 01:04:40,529
really what we wanted right

1361
01:04:43,639 --> 01:04:55,029
so let me fix that first let's just

1362
01:04:51,320 --> 01:04:57,110
let's just try and fix that one part and

1363
01:04:55,030 --> 01:04:59,180
we'll see what happens so if this

1364
01:04:57,110 --> 01:05:03,370
actually was not going to do that and we

1365
01:04:59,179 --> 01:05:03,369
were just gonna use the light DF instead

1366
01:05:08,530 --> 01:05:12,950
so this would just do a fall if it

1367
01:05:10,789 --> 01:05:17,239
wouldn't do the light intensity boosting

1368
01:05:12,949 --> 01:05:20,259
like it was doing there before hmm I'm

1369
01:05:17,239 --> 01:05:23,000
just curious what we end up with now

1370
01:05:20,260 --> 01:05:25,940
again I think it's still broken I don't

1371
01:05:23,000 --> 01:05:28,489
think this will actually fix it but I'm

1372
01:05:25,940 --> 01:05:30,440
just curious if we can now sort of

1373
01:05:28,489 --> 01:05:33,649
isolate a different portion of the code

1374
01:05:30,440 --> 01:05:35,389
is being busted as opposed to just that

1375
01:05:33,650 --> 01:05:37,869
which was feeding back like very large

1376
01:05:35,389 --> 01:05:37,869
values

1377
01:05:38,139 --> 01:05:40,199
you

1378
01:05:42,050 --> 01:05:45,820
again not really sure what's going on

1379
01:05:43,760 --> 01:05:45,820
here

1380
01:05:47,820 --> 01:05:49,880
you

1381
01:05:58,460 --> 01:06:00,519
you

1382
01:06:01,798 --> 01:06:03,858
you

1383
01:06:08,960 --> 01:06:17,429
still pretty weird right like I just

1384
01:06:16,199 --> 01:06:19,799
don't even know exactly how we're

1385
01:06:17,429 --> 01:06:21,539
getting that because since these voxels

1386
01:06:19,800 --> 01:06:23,640
are supposed to be kind of smoothed over

1387
01:06:21,539 --> 01:06:25,289
time it's like those must be really huge

1388
01:06:23,639 --> 01:06:32,429
values that are like coming in and out

1389
01:06:25,289 --> 01:06:38,059
of there right so we're still in like

1390
01:06:32,429 --> 01:06:43,139
real bizarro and just producing like

1391
01:06:38,059 --> 01:06:44,880
fully crazy values and I guess we don't

1392
01:06:43,139 --> 01:06:47,639
really know whether it's you know it

1393
01:06:44,880 --> 01:06:49,349
could be crazy in in multiple ways it

1394
01:06:47,639 --> 01:06:49,949
could be crazy because the normal is

1395
01:06:49,349 --> 01:06:56,699
really weird

1396
01:06:49,949 --> 01:06:58,829
or it could be crazy because the color

1397
01:06:56,699 --> 01:07:00,689
is really weird and one thing we

1398
01:06:58,829 --> 01:07:02,519
probably do want to do is normalize our

1399
01:07:00,690 --> 01:07:04,470
normals the fact that our normals aren't

1400
01:07:02,519 --> 01:07:07,320
normal is a little weird so like for

1401
01:07:04,469 --> 01:07:09,089
example when we're doing like the

1402
01:07:07,320 --> 01:07:10,820
spamming of the voxels and then we do

1403
01:07:09,090 --> 01:07:12,720
you know we accumulate the normals

1404
01:07:10,820 --> 01:07:15,390
accumulating the normals shouldn't

1405
01:07:12,719 --> 01:07:17,459
actually renormalize them using the

1406
01:07:15,389 --> 01:07:20,099
normal value it should renormalize them

1407
01:07:17,460 --> 01:07:21,840
using normalization because you want to

1408
01:07:20,099 --> 01:07:23,219
your normals to be normal you don't want

1409
01:07:21,840 --> 01:07:24,420
them to just be an average because that

1410
01:07:23,219 --> 01:07:27,000
could produce pretty much anything

1411
01:07:24,420 --> 01:07:32,340
really so I suppose we also should

1412
01:07:27,000 --> 01:07:34,440
probably do an end lighting computation

1413
01:07:32,340 --> 01:07:38,480
where we do this what we should probably

1414
01:07:34,440 --> 01:07:41,630
do is say yeah this part

1415
01:07:38,480 --> 01:07:41,630
[Music]

1416
01:07:43,150 --> 01:07:50,930
you

1417
01:07:44,659 --> 01:07:53,029
where you blend these two together after

1418
01:07:50,929 --> 01:07:55,789
that you want to actually do a

1419
01:07:53,030 --> 01:08:04,430
normalization right so here you'd want

1420
01:07:55,789 --> 01:08:05,900
to do this and again I don't really

1421
01:08:04,429 --> 01:08:07,849
think that has much to do with anything

1422
01:08:05,900 --> 01:08:09,440
at the moment but it just occurred to me

1423
01:08:07,849 --> 01:08:11,059
that like we want our normals to always

1424
01:08:09,440 --> 01:08:15,470
be normal we don't want them to be

1425
01:08:11,059 --> 01:08:18,550
averages and so off we go now in theory

1426
01:08:15,469 --> 01:08:20,929
if the normals are always normal in

1427
01:08:18,550 --> 01:08:22,340
theory that would mean that the color

1428
01:08:20,930 --> 01:08:24,109
values are the thing that's wrong right

1429
01:08:22,340 --> 01:08:27,710
now because we know that they're always

1430
01:08:24,109 --> 01:08:29,600
normal really hard to say when we're

1431
01:08:27,710 --> 01:08:32,149
looking at this here I also wonder to

1432
01:08:29,600 --> 01:08:38,090
what extent we need to do clamping like

1433
01:08:32,149 --> 01:08:45,949
so when we output the voxel and we do

1434
01:08:38,090 --> 01:08:48,730
light c0 output here how is that getting

1435
01:08:45,949 --> 01:08:48,729
encoded

1436
01:09:00,259 --> 01:09:05,158
so these don't look like they're maybe

1437
01:09:03,118 --> 01:09:06,929
being clamped correctly either so when

1438
01:09:05,158 --> 01:09:10,000
the light I value comes in it could be

1439
01:09:06,929 --> 01:09:13,069
between zero and whatever right

1440
01:09:10,000 --> 01:09:13,069
[Music]

1441
01:09:13,229 --> 01:09:15,289
you

1442
01:09:17,380 --> 01:09:19,440
you

1443
01:09:24,720 --> 01:09:28,440
and I guess I don't know so but it looks

1444
01:09:27,000 --> 01:09:30,239
like it's taking the maximum value so

1445
01:09:28,439 --> 01:09:32,719
whatever the highest value is and then

1446
01:09:30,239 --> 01:09:36,809
it's like normalizing these down right

1447
01:09:32,720 --> 01:09:40,170
so it seems like in theory that should

1448
01:09:36,810 --> 01:09:43,140
mean that these are always reasonably

1449
01:09:40,170 --> 01:09:44,970
behaved you know what I mean because

1450
01:09:43,140 --> 01:09:46,530
whatever the highest value is I mean I

1451
01:09:44,970 --> 01:09:49,530
guess you know they could be if somehow

1452
01:09:46,529 --> 01:09:51,210
they got to be negative which would be

1453
01:09:49,529 --> 01:09:54,599
pretty ridiculous because we're only

1454
01:09:51,210 --> 01:09:57,659
ever adding values in but no matter what

1455
01:09:54,600 --> 01:10:00,590
the highest value actually is I would

1456
01:09:57,659 --> 01:10:00,590
think it should be okay

1457
01:10:05,618 --> 01:10:09,689
because this will always knock it back

1458
01:10:07,510 --> 01:10:09,690
down

1459
01:10:11,079 --> 01:10:13,619
right

1460
01:10:14,368 --> 01:10:17,939
so I don't really see any way that could

1461
01:10:16,050 --> 01:10:19,500
really overflow so I'm not sure again

1462
01:10:17,939 --> 01:10:25,229
I'm not sure where the flickering could

1463
01:10:19,500 --> 01:10:27,448
possibly come from let's go ahead and do

1464
01:10:25,229 --> 01:10:30,118
some testing so when I do the transfer

1465
01:10:27,448 --> 01:10:33,750
suppose that I was to stop transferring

1466
01:10:30,118 --> 01:10:37,380
the normals altogether and I just said

1467
01:10:33,750 --> 01:10:40,469
look you know the normal is always going

1468
01:10:37,380 --> 01:10:47,510
to be the same or something right

1469
01:10:40,469 --> 01:10:51,359
so when we actually do the words that go

1470
01:10:47,510 --> 01:10:55,230
so down here when we actually pack the

1471
01:10:51,359 --> 01:10:56,488
by normal to normal here and we do you

1472
01:10:55,229 --> 01:10:59,129
know the packing of these things down

1473
01:10:56,488 --> 01:11:06,138
what if I just said like look it's

1474
01:10:59,130 --> 01:11:06,139
always just like Z or something right so

1475
01:11:06,859 --> 01:11:09,988
so now like I've taken that out of the

1476
01:11:09,510 --> 01:11:12,239
equation

1477
01:11:09,988 --> 01:11:15,750
and when we run this we should always

1478
01:11:12,238 --> 01:11:18,209
have stable normals like always right

1479
01:11:15,750 --> 01:11:20,099
and so there's what our result looks

1480
01:11:18,210 --> 01:11:22,408
like and then similarly like what if I

1481
01:11:20,099 --> 01:11:24,869
leave the normal is the same and always

1482
01:11:22,408 --> 01:11:26,549
output the same color so like okay the

1483
01:11:24,868 --> 01:11:32,069
color value is just always going to be

1484
01:11:26,550 --> 01:11:35,099
like krei or something or maybe it

1485
01:11:32,069 --> 01:11:37,349
remember this is sort of a weird

1486
01:11:35,099 --> 01:11:53,219
irradiance pack thing oh right I have to

1487
01:11:37,349 --> 01:11:55,170
do in a radiance pack on it this let's

1488
01:11:53,219 --> 01:11:56,969
suppose I just put in some kind of

1489
01:11:55,170 --> 01:12:00,179
stable value here that's always going to

1490
01:11:56,969 --> 01:12:04,609
be the same and I don't know what that

1491
01:12:00,179 --> 01:12:04,609
value would be but it's like you know

1492
01:12:05,389 --> 01:12:08,960
let's say that grey

1493
01:12:18,090 --> 01:12:22,710
and now if I just tweak with those what

1494
01:12:20,219 --> 01:12:25,170
do I get so all right we're irradiance

1495
01:12:22,710 --> 01:12:28,560
packing some values here I don't

1496
01:12:25,170 --> 01:12:30,239
actually know what these need to be this

1497
01:12:28,560 --> 01:12:32,190
is probably part of the encoding stuff

1498
01:12:30,238 --> 01:12:34,559
that we now have to go start working out

1499
01:12:32,189 --> 01:12:36,448
more directly to because you know we now

1500
01:12:34,560 --> 01:12:38,699
have problems all over the place it's

1501
01:12:36,448 --> 01:12:42,750
like pretty hard for us to know exactly

1502
01:12:38,698 --> 01:12:48,269
what is what here so how high does this

1503
01:12:42,750 --> 01:12:49,649
have to be to actually produce visible I

1504
01:12:48,270 --> 01:12:57,510
don't know I don't remember what our max

1505
01:12:49,649 --> 01:13:01,519
light intensity is here why don't we

1506
01:12:57,510 --> 01:13:01,520
have two of those okay there we go

1507
01:13:06,439 --> 01:13:14,989
so that's really bizarre to write so

1508
01:13:09,590 --> 01:13:28,789
like that's is that from the normals so

1509
01:13:14,989 --> 01:13:33,199
if I now pack a normal in back away so

1510
01:13:28,789 --> 01:13:37,250
there is weirdness coming in from both

1511
01:13:33,199 --> 01:13:41,380
places basically right so if I pack the

1512
01:13:37,250 --> 01:13:41,380
actual normal it's weird too

1513
01:13:47,909 --> 01:13:49,970
you

1514
01:13:50,060 --> 01:13:56,300
like somehow the normal to the light

1515
01:13:53,359 --> 01:14:00,500
that's getting computed for all of these

1516
01:13:56,300 --> 01:14:02,720
probes is like I guess downward or

1517
01:14:00,500 --> 01:14:08,260
something something that's creating a

1518
01:14:02,720 --> 01:14:11,600
pure black they're like I don't know

1519
01:14:08,260 --> 01:14:14,600
right like but you can see that that's

1520
01:14:11,600 --> 01:14:16,579
purely coming from the normal so I

1521
01:14:14,600 --> 01:14:18,890
suppose we can kind of break this into

1522
01:14:16,579 --> 01:14:20,720
two separate problems one is that we're

1523
01:14:18,890 --> 01:14:22,850
out putting weird information for the

1524
01:14:20,720 --> 01:14:26,530
color and one is that we're out putting

1525
01:14:22,850 --> 01:14:26,530
weird information for the normal

1526
01:14:30,850 --> 01:14:33,720
it would seem

1527
01:14:33,979 --> 01:14:36,579
right

1528
01:14:38,640 --> 01:14:40,700
you

1529
01:14:43,789 --> 01:14:45,850
you

1530
01:14:54,789 --> 01:14:56,850
you

1531
01:15:03,939 --> 01:15:08,689
so I'm not sure how to proceed now we've

1532
01:15:06,559 --> 01:15:11,300
got a lot of stuff to debug I'm not sure

1533
01:15:08,689 --> 01:15:16,009
what the best way to do it would be but

1534
01:15:11,300 --> 01:15:17,539
there we see very you know clearly that

1535
01:15:16,010 --> 01:15:20,239
we're getting kind of weird values

1536
01:15:17,539 --> 01:15:23,420
coming in so presumably like here where

1537
01:15:20,238 --> 01:15:25,488
we're spamming this information and we

1538
01:15:23,420 --> 01:15:29,630
sort of have what the light position is

1539
01:15:25,488 --> 01:15:31,819
that stuff is coming from you know that

1540
01:15:29,630 --> 01:15:34,520
that value is getting set to something

1541
01:15:31,819 --> 01:15:38,899
very weird by the rate caster and we

1542
01:15:34,520 --> 01:15:41,389
don't really know why that's happening

1543
01:15:38,899 --> 01:15:42,649
you know I also realized - we're gonna

1544
01:15:41,389 --> 01:15:45,409
have to do a little bit of work when we

1545
01:15:42,649 --> 01:15:47,509
multi-thread this because we can't just

1546
01:15:45,408 --> 01:15:49,609
sum into a voxel because we don't know

1547
01:15:47,510 --> 01:15:50,570
who is doing which part at which voxel

1548
01:15:49,609 --> 01:15:52,609
so we're gonna have to break it up

1549
01:15:50,569 --> 01:15:55,328
instead of by light probes we're gonna

1550
01:15:52,609 --> 01:15:57,259
have to break it up by voxel region

1551
01:15:55,328 --> 01:16:01,238
which is a little bit of a pain in the

1552
01:15:57,260 --> 01:16:01,239
butt but that's just how it is

1553
01:16:05,520 --> 01:16:07,580
you

1554
01:16:08,010 --> 01:16:10,070
you

1555
01:16:12,628 --> 01:16:16,590
so there's another thing that I think

1556
01:16:14,399 --> 01:16:19,050
that maybe we should be doing here

1557
01:16:16,590 --> 01:16:22,378
which is that when we do our spamming I

1558
01:16:19,050 --> 01:16:23,668
wonder if we should really be doing that

1559
01:16:22,378 --> 01:16:26,368
a little bit differently to which is to

1560
01:16:23,668 --> 01:16:29,458
say that we may want our light probes to

1561
01:16:26,368 --> 01:16:32,208
not quite do that right we may want our

1562
01:16:29,458 --> 01:16:32,208
light probes to

1563
01:16:36,880 --> 01:16:42,880
I think this probably doesn't want to do

1564
01:16:41,109 --> 01:16:45,009
what it's doing I think we probably just

1565
01:16:42,880 --> 01:16:46,930
want to spam just the voxel that we're

1566
01:16:45,010 --> 01:16:50,280
in and then we want to just do like a

1567
01:16:46,930 --> 01:16:53,530
flood fill probably on the voxel later

1568
01:16:50,279 --> 01:16:56,050
so this is probably bad too so let's

1569
01:16:53,529 --> 01:16:58,960
take this one step at a time I'm gonna

1570
01:16:56,050 --> 01:17:00,820
say that maybe we want spam voxel slice

1571
01:16:58,960 --> 01:17:05,590
to actually just be the only thing we

1572
01:17:00,819 --> 01:17:09,099
call so I'm going to say like maybe we

1573
01:17:05,590 --> 01:17:13,300
don't do this and we'll add a flood fill

1574
01:17:09,100 --> 01:17:15,990
to flood fill outward so maybe it would

1575
01:17:13,300 --> 01:17:15,989
look more like this

1576
01:17:27,649 --> 01:17:29,710
you

1577
01:17:32,550 --> 01:17:35,219
and I think we want to probably take it

1578
01:17:34,469 --> 01:17:38,519
one step at a time

1579
01:17:35,219 --> 01:17:42,300
but I do think like yeah so the you know

1580
01:17:38,519 --> 01:17:44,099
the the flood filling to fill in what we

1581
01:17:42,300 --> 01:17:47,189
probably want to do is make sure we have

1582
01:17:44,099 --> 01:17:51,208
enough light probes that we don't have

1583
01:17:47,189 --> 01:17:52,918
any problem with filling in data in the

1584
01:17:51,208 --> 01:17:55,229
general case and then when we get to the

1585
01:17:52,918 --> 01:17:57,779
edges we can flood fill our voxel for

1586
01:17:55,229 --> 01:17:59,280
people who didn't get any samples we can

1587
01:17:57,779 --> 01:18:02,938
just flood fill our voxel from there

1588
01:17:59,279 --> 01:18:04,768
right but I do think we want to like get

1589
01:18:02,939 --> 01:18:06,949
away from having to do all that spamming

1590
01:18:04,769 --> 01:18:12,208
right I think that's probably a bad idea

1591
01:18:06,948 --> 01:18:15,228
all right so moving on it's weird like

1592
01:18:12,208 --> 01:18:18,448
it's getting close to being good right

1593
01:18:15,229 --> 01:18:21,149
but yeah so I think we do want to fix

1594
01:18:18,448 --> 01:18:23,219
that one part and let's also while we're

1595
01:18:21,149 --> 01:18:28,099
at it let's fix the test case now as

1596
01:18:23,219 --> 01:18:28,099
well so I'm gonna go to the test cast

1597
01:18:32,238 --> 01:18:39,198
the column again test cast from probes

1598
01:18:42,889 --> 01:18:50,399
so in test cast from probes I'm gonna go

1599
01:18:46,529 --> 01:18:51,898
ahead and test cast from probes I'm

1600
01:18:50,399 --> 01:18:53,820
going to enable that again and we have

1601
01:18:51,899 --> 01:18:55,320
to fix the light intensity there we have

1602
01:18:53,819 --> 01:18:56,219
to output a different light intensity

1603
01:18:55,319 --> 01:18:59,578
because the light intensity were

1604
01:18:56,219 --> 01:19:03,538
outputting won't be sufficient right so

1605
01:18:59,578 --> 01:19:07,529
if we do test cast from probes so here's

1606
01:19:03,538 --> 01:19:11,569
the test cast from probes version not

1607
01:19:07,529 --> 01:19:11,569
using the flood fill right

1608
01:19:13,050 --> 01:19:18,449
and actually there's surprisingly few

1609
01:19:15,529 --> 01:19:21,179
things that actually fail when you're

1610
01:19:18,449 --> 01:19:24,539
not when you're not doing that and see a

1611
01:19:21,180 --> 01:19:26,900
couple right but they're surprisingly

1612
01:19:24,539 --> 01:19:26,899
few

1613
01:19:27,250 --> 01:19:32,109
so it does look like we have a dense

1614
01:19:28,810 --> 01:19:33,880
enough sampling of light probes to not

1615
01:19:32,109 --> 01:19:36,059
have too many artifacts at the immediate

1616
01:19:33,880 --> 01:19:36,060
moment

1617
01:19:44,369 --> 01:19:47,760
so that's all right

1618
01:20:05,559 --> 01:20:07,619
you

1619
01:20:12,060 --> 01:20:14,120
you

1620
01:20:21,710 --> 01:20:28,449
hmm

1621
01:20:23,289 --> 01:20:36,489
I say alright so the fact that that is

1622
01:20:28,449 --> 01:20:38,529
doing what it's doing there right if we

1623
01:20:36,489 --> 01:20:42,340
go down and look at the you know that

1624
01:20:38,529 --> 01:20:45,069
that was always packing in a fixed color

1625
01:20:42,340 --> 01:20:50,079
but packing in a normal here so I guess

1626
01:20:45,069 --> 01:21:02,889
you know yeah and maybe I should fix

1627
01:20:50,079 --> 01:21:05,859
this part first too so let me go ahead

1628
01:21:02,890 --> 01:21:20,440
and put in a switch for this so we can

1629
01:21:05,859 --> 01:21:22,630
do either one that nurse the color value

1630
01:21:20,439 --> 01:21:24,159
and so if I want to now I can just like

1631
01:21:22,630 --> 01:21:25,869
switch between those two and say all

1632
01:21:24,159 --> 01:21:28,059
right let's not nerf the color value

1633
01:21:25,869 --> 01:21:30,189
let's actually look at what the test

1634
01:21:28,060 --> 01:21:31,600
case was outputting for the color value

1635
01:21:30,189 --> 01:21:32,949
because that maybe that's why it looked

1636
01:21:31,600 --> 01:21:35,680
like it was okay it's cuz the color

1637
01:21:32,949 --> 01:21:40,389
value was getting stuffed right oh and

1638
01:21:35,680 --> 01:21:42,250
that so I'm going to try that and just

1639
01:21:40,390 --> 01:21:44,430
see what happens there too because I

1640
01:21:42,250 --> 01:21:50,710
think we'll see more gaps now in theory

1641
01:21:44,430 --> 01:21:52,780
but maybe not we'll see yeah okay so

1642
01:21:50,710 --> 01:21:54,399
also now the intensity is wrong as I

1643
01:21:52,779 --> 01:21:56,409
thought it should be okay good good good

1644
01:21:54,399 --> 01:21:58,000
so let's go test out some probes and

1645
01:21:56,409 --> 01:21:59,649
increase the light intensity so this

1646
01:21:58,000 --> 01:22:01,060
right here you know I don't know what

1647
01:21:59,649 --> 01:22:09,189
the light intensity should be so we'll

1648
01:22:01,060 --> 01:22:11,310
make something up at the moment there we

1649
01:22:09,189 --> 01:22:11,309
go

1650
01:22:22,640 --> 01:22:29,730
so it does seem like that light fall-off

1651
01:22:25,170 --> 01:22:31,500
there is pretty steep right and you can

1652
01:22:29,729 --> 01:22:33,419
see that it shifts around to follow me

1653
01:22:31,500 --> 01:22:35,220
and I don't know is that just because of

1654
01:22:33,420 --> 01:22:39,810
the intensity I'm not sure but let's

1655
01:22:35,220 --> 01:22:49,829
find out I'm just going to increase the

1656
01:22:39,810 --> 01:22:53,700
intensity here and see what happens

1657
01:22:49,829 --> 01:22:57,949
so we'll reload the code there is an

1658
01:22:53,699 --> 01:22:57,949
increased intensity so let's fall off

1659
01:22:59,248 --> 01:23:04,088
so you know I'm just I'm just seeing a

1660
01:23:01,988 --> 01:23:09,368
lot of stuff that that seems

1661
01:23:04,088 --> 01:23:11,528
questionable right you know some of it

1662
01:23:09,368 --> 01:23:13,268
makes perfect sense some of the stuff

1663
01:23:11,529 --> 01:23:15,189
that you see there is just because we're

1664
01:23:13,269 --> 01:23:17,439
only casting to that one light source so

1665
01:23:15,189 --> 01:23:19,510
you know a fairer test would be instead

1666
01:23:17,439 --> 01:23:22,298
of doing this we should probably always

1667
01:23:19,510 --> 01:23:23,619
just be testing with that because

1668
01:23:22,298 --> 01:23:24,158
otherwise it just doesn't really mean

1669
01:23:23,618 --> 01:23:27,128
anything

1670
01:23:24,158 --> 01:23:28,688
so this let's just go to testing casting

1671
01:23:27,128 --> 01:23:32,408
from just a single light source and now

1672
01:23:28,689 --> 01:23:34,088
we know where it is right but if we look

1673
01:23:32,408 --> 01:23:36,158
at what's happening there I'm still not

1674
01:23:34,088 --> 01:23:38,798
sure it makes really any sense what I'm

1675
01:23:36,158 --> 01:23:43,598
seeing I mean maybe it does but I don't

1676
01:23:38,798 --> 01:23:49,149
know so if we take a look at at how

1677
01:23:43,599 --> 01:23:52,088
that's shifting now I guess that does I

1678
01:23:49,149 --> 01:23:54,789
guess that does look okay because inside

1679
01:23:52,088 --> 01:23:56,260
you know there's no there's the voxels

1680
01:23:54,788 --> 01:23:59,288
up here get nothing because we're not

1681
01:23:56,260 --> 01:24:01,029
flood filling them right so you only get

1682
01:23:59,288 --> 01:24:03,698
whatever you can see from this light

1683
01:24:01,029 --> 01:24:05,109
source and probably you know maybe

1684
01:24:03,698 --> 01:24:07,088
that's a little bit laggy on the light

1685
01:24:05,109 --> 01:24:12,939
source so you know maybe let's suppose

1686
01:24:07,088 --> 01:24:16,588
we change the light preservation to

1687
01:24:12,939 --> 01:24:16,588
something like about twice as fast

1688
01:24:30,029 --> 01:24:39,009
still maybe a little bit much I guess

1689
01:24:37,630 --> 01:24:46,359
that would sway more than twice as fast

1690
01:24:39,010 --> 01:24:49,630
now that I think about it there was many

1691
01:24:46,359 --> 01:24:56,549
times faster so this is about ten times

1692
01:24:49,630 --> 01:24:56,550
faster and that seems better right

1693
01:25:03,639 --> 01:25:09,350
all right so I think I want to maybe

1694
01:25:07,069 --> 01:25:10,880
because I think like we're gonna need

1695
01:25:09,350 --> 01:25:13,280
another weekend of debugging for sure

1696
01:25:10,880 --> 01:25:18,139
I'd like to take a look at flood filling

1697
01:25:13,279 --> 01:25:19,849
the voxel perhaps and maybe doing some

1698
01:25:18,139 --> 01:25:22,340
things with the encoding how much time

1699
01:25:19,850 --> 01:25:24,980
do I have a half an hour because our

1700
01:25:22,340 --> 01:25:26,360
encoding was pretty ad-hoc maybe we need

1701
01:25:24,979 --> 01:25:27,769
to like tighten that up a little bit and

1702
01:25:26,359 --> 01:25:29,479
then get the flood filling into the

1703
01:25:27,770 --> 01:25:32,000
correct place cuz I feel like there's

1704
01:25:29,479 --> 01:25:35,388
too many variables right now and so

1705
01:25:32,000 --> 01:25:38,510
trying to debug you know any particular

1706
01:25:35,389 --> 01:25:42,380
one of them seems you know sort of not

1707
01:25:38,510 --> 01:25:44,270
possible right so let's suppose we move

1708
01:25:42,380 --> 01:25:46,190
to a direct voxel fill like we're doing

1709
01:25:44,270 --> 01:25:48,320
here and then we flood fill to get our

1710
01:25:46,189 --> 01:25:52,069
edges proper right so that the fall-off

1711
01:25:48,319 --> 01:25:56,359
around the edges where light stops in

1712
01:25:52,069 --> 01:25:58,639
the voxel looks okay okay

1713
01:25:56,359 --> 01:26:01,579
and that again can just be done like

1714
01:25:58,639 --> 01:26:05,420
sort of with a filter I think after the

1715
01:26:01,579 --> 01:26:09,158
fact I hope that's my that's my hope

1716
01:26:05,420 --> 01:26:12,050
anyway and in theory we should be okay

1717
01:26:09,158 --> 01:26:14,238
all right so the first thing I think we

1718
01:26:12,050 --> 01:26:16,550
want to do is try and get the encoding

1719
01:26:14,238 --> 01:26:18,379
into a good state and and what I mean by

1720
01:26:16,550 --> 01:26:19,940
that is like right now like the normal

1721
01:26:18,380 --> 01:26:22,670
encoding is pretty simple it's just a

1722
01:26:19,939 --> 01:26:24,138
directional field right so we don't

1723
01:26:22,670 --> 01:26:25,550
really have to think too hard about that

1724
01:26:24,139 --> 01:26:26,600
we don't really know how to blend them

1725
01:26:25,550 --> 01:26:28,909
because we don't know how to produce

1726
01:26:26,600 --> 01:26:31,130
more than one like if we only have one

1727
01:26:28,908 --> 01:26:32,329
light source then it's pretty simple but

1728
01:26:31,130 --> 01:26:34,850
assuming we have like hundreds of light

1729
01:26:32,329 --> 01:26:36,380
sources and we want to simulate those

1730
01:26:34,850 --> 01:26:38,239
hundreds by projecting down into four

1731
01:26:36,380 --> 01:26:39,230
light fields how we do that I'm not

1732
01:26:38,238 --> 01:26:40,729
exactly sure

1733
01:26:39,229 --> 01:26:44,359
right because you kind of have a K

1734
01:26:40,729 --> 01:26:45,979
clusters problem at that point and it's

1735
01:26:44,359 --> 01:26:48,559
not clear how you do an incremental K

1736
01:26:45,979 --> 01:26:49,879
clusters on this sort of thing you know

1737
01:26:48,560 --> 01:26:51,980
maybe it turns out to be simple I don't

1738
01:26:49,880 --> 01:26:53,690
know if look at it but we're talking

1739
01:26:51,979 --> 01:26:55,428
about the colors there is an encoding

1740
01:26:53,689 --> 01:26:58,250
issue there and the encoding issue is

1741
01:26:55,429 --> 01:27:01,639
just how do we want to reproduce sort of

1742
01:26:58,250 --> 01:27:03,679
the stuff where we get beyond zero right

1743
01:27:01,639 --> 01:27:06,350
so really what I'm talking about is this

1744
01:27:03,679 --> 01:27:08,118
right here so encoding so that that

1745
01:27:06,350 --> 01:27:10,789
works properly requires you to have

1746
01:27:08,118 --> 01:27:13,219
effectively like negative light value so

1747
01:27:10,789 --> 01:27:14,430
when your light fall-off would end and

1748
01:27:13,219 --> 01:27:17,819
you're going like path

1749
01:27:14,430 --> 01:27:19,350
that you need to still have those you

1750
01:27:17,819 --> 01:27:22,639
need to still have real values they're

1751
01:27:19,350 --> 01:27:26,250
right you can't just clamp to zero

1752
01:27:22,640 --> 01:27:30,570
that's not going to cut it so what we

1753
01:27:26,250 --> 01:27:33,239
need for the interpolation we need the

1754
01:27:30,569 --> 01:27:34,739
coding that has effectively like you

1755
01:27:33,239 --> 01:27:36,449
know you've heard of Headroom and audio

1756
01:27:34,739 --> 01:27:40,199
recording well this is the opposite this

1757
01:27:36,449 --> 01:27:41,519
is tail room right we effectively need

1758
01:27:40,199 --> 01:27:45,539
something where where we do our

1759
01:27:41,520 --> 01:27:49,790
irradiance pack on here what we kind of

1760
01:27:45,539 --> 01:27:53,699
need to do is figure out effectively

1761
01:27:49,789 --> 01:27:56,010
sort of how we want to shift this light

1762
01:27:53,699 --> 01:27:59,970
information around such that it actually

1763
01:27:56,010 --> 01:28:03,060
has you know for lack of the term tail

1764
01:27:59,970 --> 01:28:06,150
room and the way I think we would

1765
01:28:03,060 --> 01:28:08,820
probably want to do that is to let our

1766
01:28:06,149 --> 01:28:11,629
light values go to negative so that in

1767
01:28:08,819 --> 01:28:11,630
the actual

1768
01:28:14,220 --> 01:28:22,000
in the actual code pass in on a CPU side

1769
01:28:19,020 --> 01:28:25,150
we know that zero means no light and

1770
01:28:22,000 --> 01:28:28,539
that negative means that we're extending

1771
01:28:25,149 --> 01:28:30,579
our understanding of light into sort of

1772
01:28:28,539 --> 01:28:32,500
regions where there's no light but we

1773
01:28:30,579 --> 01:28:35,920
want to capture how the fall-off would

1774
01:28:32,500 --> 01:28:37,930
have gone and so I think what we want to

1775
01:28:35,920 --> 01:28:43,239
do is create a definition here where

1776
01:28:37,930 --> 01:28:45,010
that's going to be valid right so I

1777
01:28:43,239 --> 01:28:49,239
think what I'd do is I'd say when the

1778
01:28:45,010 --> 01:28:55,079
light value comes in I would then say

1779
01:28:49,239 --> 01:28:55,079
that we need to clamp these values and

1780
01:28:55,199 --> 01:29:01,750
when we do the irradiance pack on them

1781
01:28:57,970 --> 01:29:04,800
we want to first scale ourselves up a

1782
01:29:01,750 --> 01:29:08,590
little bit to allow for a little bit of

1783
01:29:04,800 --> 01:29:11,440
negative light so if I go to the Z bias

1784
01:29:08,590 --> 01:29:15,430
program here and we look at how that's

1785
01:29:11,439 --> 01:29:18,629
you know playing out you can see where

1786
01:29:15,430 --> 01:29:22,480
we do the light unpack it's here right

1787
01:29:18,630 --> 01:29:25,600
and this is not what we want right

1788
01:29:22,479 --> 01:29:30,719
that's a perfect halfway split point so

1789
01:29:25,600 --> 01:29:33,579
that's basically saying we're going to

1790
01:29:30,720 --> 01:29:35,980
bisect the range and have you know

1791
01:29:33,579 --> 01:29:37,449
intensity on one side be about the same

1792
01:29:35,979 --> 01:29:40,029
as intensity on the other so that the

1793
01:29:37,449 --> 01:29:42,639
dark areas get as much as the light

1794
01:29:40,029 --> 01:29:43,960
areas and I don't think we want that so

1795
01:29:42,640 --> 01:29:46,210
I think what we want instead is

1796
01:29:43,960 --> 01:29:48,460
something like this we would say first

1797
01:29:46,210 --> 01:29:52,390
of all let's take the light and boost it

1798
01:29:48,460 --> 01:29:55,210
by our floor value right so like we

1799
01:29:52,390 --> 01:29:58,180
would have like a light floor or

1800
01:29:55,210 --> 01:30:02,069
something right and this light floor

1801
01:29:58,180 --> 01:30:04,510
value is just going to be like how much

1802
01:30:02,069 --> 01:30:11,710
you know it's it's a vector that says

1803
01:30:04,510 --> 01:30:17,070
how much light exactly we have to work

1804
01:30:11,710 --> 01:30:20,710
with in this case so

1805
01:30:17,069 --> 01:30:23,049
how much light we have underneath black

1806
01:30:20,710 --> 01:30:24,550
underneath no light and again that's

1807
01:30:23,050 --> 01:30:27,219
just for keeping the interpolation

1808
01:30:24,550 --> 01:30:29,260
working we need values down there so the

1809
01:30:27,219 --> 01:30:33,730
light floor value in this case you know

1810
01:30:29,260 --> 01:30:34,510
is gonna be something like this and I

1811
01:30:33,729 --> 01:30:36,368
don't know what we should call that

1812
01:30:34,510 --> 01:30:38,920
light floor value is not the greatest

1813
01:30:36,368 --> 01:30:42,670
name but suppose we did something like

1814
01:30:38,920 --> 01:30:45,609
that right so we were just like look you

1815
01:30:42,670 --> 01:30:47,828
know Oh point one point one point one or

1816
01:30:45,609 --> 01:30:49,389
something is how much room we have there

1817
01:30:47,828 --> 01:30:53,759
maybe we do something that's trying to

1818
01:30:49,389 --> 01:30:57,520
be a little bit more power of TUI right

1819
01:30:53,760 --> 01:30:59,260
and so you have some range but most of

1820
01:30:57,520 --> 01:31:01,619
your range is the visible light and then

1821
01:30:59,260 --> 01:31:03,400
only a little bit is the dark light

1822
01:31:01,618 --> 01:31:05,828
because we're just going to assume that

1823
01:31:03,399 --> 01:31:08,170
the fall-off rate is not such that we

1824
01:31:05,828 --> 01:31:11,109
need to capture these huge values as we

1825
01:31:08,170 --> 01:31:13,118
step out into the voxels we don't need

1826
01:31:11,109 --> 01:31:14,979
it to be that precise of an

1827
01:31:13,118 --> 01:31:17,618
interpolation so we're just not gonna

1828
01:31:14,979 --> 01:31:20,169
assume we need that much tail room there

1829
01:31:17,618 --> 01:31:22,000
so when the light comes in the first

1830
01:31:20,170 --> 01:31:24,219
thing we would do is shift it up by the

1831
01:31:22,000 --> 01:31:26,260
floor value so that we have basically as

1832
01:31:24,219 --> 01:31:28,948
much as we can in the actual visible

1833
01:31:26,260 --> 01:31:31,360
space and then we would just do like a

1834
01:31:28,948 --> 01:31:35,549
clamp and I don't know if that we can

1835
01:31:31,359 --> 01:31:38,049
clamp a vector it looks like we can yes

1836
01:31:35,550 --> 01:31:40,119
so we wouldn't really want to clamp zero

1837
01:31:38,050 --> 01:31:42,670
to one necessarily but we would want to

1838
01:31:40,118 --> 01:31:43,899
do that a little later on so I guess

1839
01:31:42,670 --> 01:31:46,000
then what we would do is we take the

1840
01:31:43,899 --> 01:31:47,198
maximum all of these things I guess we

1841
01:31:46,000 --> 01:31:50,130
do really want to clamp it here though

1842
01:31:47,198 --> 01:31:50,129
so I'm going to do a clamp

1843
01:31:50,609 --> 01:31:56,000
of the MaxLite intensity value year

1844
01:31:56,600 --> 01:31:59,289
right

1845
01:32:01,578 --> 01:32:10,279
I guess all we really need to do is just

1846
01:32:05,988 --> 01:32:11,928
clamp the zero end actually so I think

1847
01:32:10,279 --> 01:32:24,349
all we really need to do here is say

1848
01:32:11,929 --> 01:32:26,539
look I think that's all we really need

1849
01:32:24,349 --> 01:32:28,219
to do I don't think we need to clamp in

1850
01:32:26,539 --> 01:32:30,050
the other direction so we just need to

1851
01:32:28,219 --> 01:32:31,908
clamp things that are so negative that

1852
01:32:30,050 --> 01:32:35,239
they would be underneath the light floor

1853
01:32:31,908 --> 01:32:37,339
right so we first shift up by the light

1854
01:32:35,238 --> 01:32:39,408
floor value then we clamp to make sure

1855
01:32:37,340 --> 01:32:41,239
that we're within that range we now know

1856
01:32:39,408 --> 01:32:42,948
that nothing can be negative we take the

1857
01:32:41,238 --> 01:32:44,750
maximum value and we normalize out by

1858
01:32:42,948 --> 01:32:46,308
that if it was greater than the maximum

1859
01:32:44,750 --> 01:32:49,340
intensity that's okay this will take

1860
01:32:46,309 --> 01:32:52,190
care of it this clamp right here and

1861
01:32:49,340 --> 01:32:54,139
then we encode the light so then in the

1862
01:32:52,189 --> 01:32:56,509
pixel shader when we actually need to

1863
01:32:54,139 --> 01:32:58,400
deconstruct this then we're not actually

1864
01:32:56,510 --> 01:33:03,469
doing this anymore so what we're doing

1865
01:32:58,399 --> 01:33:07,670
instead is we're saying well we have an

1866
01:33:03,469 --> 01:33:10,908
a value that we use to encode the light

1867
01:33:07,670 --> 01:33:13,399
for maximum intensity so we're going to

1868
01:33:10,908 --> 01:33:19,609
multiply that out first so here we would

1869
01:33:13,399 --> 01:33:30,500
say this clamp doesn't need to happen I

1870
01:33:19,609 --> 01:33:32,839
think so I think what we want to do here

1871
01:33:30,500 --> 01:33:34,609
is say all right we're going to take the

1872
01:33:32,840 --> 01:33:35,960
max light intensity multiplied by the

1873
01:33:34,609 --> 01:33:38,118
actual intensity of the light that we

1874
01:33:35,960 --> 01:33:43,939
encoded and then multiply that by the

1875
01:33:38,118 --> 01:33:46,908
actual light for the actual lighting

1876
01:33:43,939 --> 01:33:48,649
values and then that gives us back the

1877
01:33:46,908 --> 01:33:49,308
value that we actually encoded in the

1878
01:33:48,649 --> 01:33:50,779
first place

1879
01:33:49,309 --> 01:33:52,730
but we know that that's been shifted up

1880
01:33:50,779 --> 01:33:54,408
slightly by the light floor value so

1881
01:33:52,729 --> 01:34:00,799
then we need to do is like remove that

1882
01:33:54,408 --> 01:34:02,539
light floor value and that will shift us

1883
01:34:00,800 --> 01:34:04,730
back down into the negative range then

1884
01:34:02,539 --> 01:34:07,439
we just color things as we normally

1885
01:34:04,729 --> 01:34:09,149
would right

1886
01:34:07,439 --> 01:34:13,229
so then the light floor value actually

1887
01:34:09,149 --> 01:34:15,539
does have to be in there somewhere and

1888
01:34:13,229 --> 01:34:17,099
so when we actually output the pound

1889
01:34:15,539 --> 01:34:18,630
Defiance for this thing we're probably

1890
01:34:17,100 --> 01:34:20,880
gonna have to put that in there

1891
01:34:18,630 --> 01:34:23,789
right so we're gonna have to do like you

1892
01:34:20,880 --> 01:34:25,770
know our light for value has to get put

1893
01:34:23,789 --> 01:34:29,760
in here and that's just something that's

1894
01:34:25,770 --> 01:34:31,440
going to come in fact I guess we don't

1895
01:34:29,760 --> 01:34:34,760
even have to quite do it that way it

1896
01:34:31,439 --> 01:34:34,759
would really just be like this

1897
01:34:40,920 --> 01:34:45,590
have to make a string out of that

1898
01:34:43,560 --> 01:34:47,650
somehow

1899
01:34:45,590 --> 01:34:47,650
you

1900
01:34:50,630 --> 01:35:03,390
you know what I can do is I can do right

1901
01:35:01,710 --> 01:35:07,460
then the light floor value is the thing

1902
01:35:03,390 --> 01:35:11,039
that we can put in here as a percent F

1903
01:35:07,460 --> 01:35:12,899
just like we do everything else and so

1904
01:35:11,039 --> 01:35:14,310
then when we do all of this stuff we can

1905
01:35:12,899 --> 01:35:18,929
just say like light floor value goes

1906
01:35:14,310 --> 01:35:20,730
there right and then inside the shader

1907
01:35:18,929 --> 01:35:24,810
when we actually need to produce that

1908
01:35:20,729 --> 01:35:35,189
light floor value we can just put the

1909
01:35:24,810 --> 01:35:36,449
subtraction in right here now I still

1910
01:35:35,189 --> 01:35:38,219
don't really know if that's the best way

1911
01:35:36,448 --> 01:35:39,839
to do that but something like that and

1912
01:35:38,219 --> 01:35:42,060
then we would put the light floor value

1913
01:35:39,840 --> 01:35:45,420
pound to fine over with max light

1914
01:35:42,060 --> 01:35:49,590
intensity so it ends up you know making

1915
01:35:45,420 --> 01:35:52,230
some sense there and then hopefully that

1916
01:35:49,590 --> 01:35:53,969
sort of works so that's now a different

1917
01:35:52,229 --> 01:35:55,799
encoding of the lighting and hopefully

1918
01:35:53,969 --> 01:35:58,289
that makes it easier for us to work with

1919
01:35:55,800 --> 01:36:00,750
this stuff so it won't be so ridiculous

1920
01:35:58,289 --> 01:36:03,689
all the time now I don't actually know

1921
01:36:00,750 --> 01:36:05,189
but hopefully that will help right

1922
01:36:03,689 --> 01:36:08,549
because now it's just it's just saying

1923
01:36:05,189 --> 01:36:13,109
it's more sane right what we're looking

1924
01:36:08,550 --> 01:36:16,050
at okay so looking at the test here it

1925
01:36:13,109 --> 01:36:19,729
looks like it roughly works you can see

1926
01:36:16,050 --> 01:36:22,949
that when we do the encoding you get

1927
01:36:19,729 --> 01:36:24,619
values that kind of shift I assume

1928
01:36:22,948 --> 01:36:27,359
because we're just don't have enough

1929
01:36:24,619 --> 01:36:30,300
precision in the light information

1930
01:36:27,359 --> 01:36:32,729
itself we get a lot of flickering from

1931
01:36:30,300 --> 01:36:34,860
that and it's kind of an unfortunate

1932
01:36:32,729 --> 01:36:36,718
source of flickering it would be nice if

1933
01:36:34,859 --> 01:36:39,119
we didn't have that so I do wonder if

1934
01:36:36,719 --> 01:36:42,960
that means we want these values to be

1935
01:36:39,119 --> 01:36:45,988
more work we just need more resolution

1936
01:36:42,960 --> 01:36:51,060
right we just need more resolution in

1937
01:36:45,988 --> 01:36:55,519
the in the light intensity valued right

1938
01:36:51,060 --> 01:37:01,000
and so in order to - oh that looks nice

1939
01:36:55,520 --> 01:37:03,370
kind of to look kind of nice um

1940
01:37:01,000 --> 01:37:04,630
and so I think we also kind of have a

1941
01:37:03,369 --> 01:37:07,119
separate problem here that maybe we

1942
01:37:04,630 --> 01:37:10,119
should fix this just like the encoding

1943
01:37:07,119 --> 01:37:12,130
isn't enough bits right like the the

1944
01:37:10,119 --> 01:37:15,460
encoding needs to be like 16 bits or

1945
01:37:12,130 --> 01:37:17,980
something or we need to encode the you

1946
01:37:15,460 --> 01:37:20,409
know we can encode the RGB one way but

1947
01:37:17,979 --> 01:37:23,559
include you know like maybe like a y UV

1948
01:37:20,409 --> 01:37:26,439
or something where we have 16 bits for

1949
01:37:23,560 --> 01:37:28,210
the Alpha for the intensity value and

1950
01:37:26,439 --> 01:37:31,539
then just like two things for the color

1951
01:37:28,210 --> 01:37:33,010
or something like that right so we could

1952
01:37:31,539 --> 01:37:34,659
try to do something like that like you

1953
01:37:33,010 --> 01:37:36,820
know use a different lighting space like

1954
01:37:34,659 --> 01:37:38,769
loggia V or something like that I don't

1955
01:37:36,819 --> 01:37:41,079
want to do that yet because I think that

1956
01:37:38,770 --> 01:37:42,610
again introduces yet more parameters

1957
01:37:41,079 --> 01:37:44,289
into the system that we have to then

1958
01:37:42,609 --> 01:37:46,509
wrestle with so I think what I'd rather

1959
01:37:44,289 --> 01:37:52,329
do is figure out if we can get a cheap

1960
01:37:46,510 --> 01:37:54,789
way here to make to me make this maybe

1961
01:37:52,329 --> 01:37:57,369
be 16 bits so you know maybe I don't

1962
01:37:54,789 --> 01:38:02,979
know but if we were to look at how the

1963
01:37:57,369 --> 01:38:08,050
opengl how the texture was being sent

1964
01:38:02,979 --> 01:38:14,379
down there if we look here right you can

1965
01:38:08,050 --> 01:38:17,220
see we've got some of the like look up

1966
01:38:14,380 --> 01:38:17,220
stuff

1967
01:38:18,899 --> 01:38:26,039
that's the normal so here's the light

1968
01:38:22,609 --> 01:38:27,958
data here you can see it's RGB eight and

1969
01:38:26,038 --> 01:38:29,998
it's submitting an unsigned byte and so

1970
01:38:27,958 --> 01:38:33,719
I just wonder like you know suppose we

1971
01:38:29,998 --> 01:38:38,458
we kick that up to like an unsigned

1972
01:38:33,719 --> 01:38:41,849
short you know and did the encoding that

1973
01:38:38,458 --> 01:38:44,128
way we could also use like half float or

1974
01:38:41,849 --> 01:38:45,689
something like that but I wonder do we

1975
01:38:44,128 --> 01:38:47,929
have those defines we have to copy those

1976
01:38:45,689 --> 01:38:52,019
defines in but if we have those defines

1977
01:38:47,929 --> 01:38:53,668
we could then potentially yeah we do

1978
01:38:52,019 --> 01:38:57,869
we could start submitting these as

1979
01:38:53,668 --> 01:39:00,779
unsigned shorts and if we put them in as

1980
01:38:57,868 --> 01:39:04,288
unsigned shorts then maybe we can get a

1981
01:39:00,779 --> 01:39:06,958
little bit more out of that so looking

1982
01:39:04,288 --> 01:39:09,208
at the light voxel information that

1983
01:39:06,958 --> 01:39:12,469
we're submitting there right so when we

1984
01:39:09,208 --> 01:39:16,408
actually go to do the irradiance pack

1985
01:39:12,469 --> 01:39:17,908
here instead of doing a BG are a pack

1986
01:39:16,408 --> 01:39:20,158
four by eight we would actually

1987
01:39:17,908 --> 01:39:23,009
producing like a 64-bit value and

1988
01:39:20,158 --> 01:39:25,679
putting that out as a result right and

1989
01:39:23,010 --> 01:39:29,909
if we looked at how that would go just

1990
01:39:25,679 --> 01:39:33,569
going down to the where the light stuff

1991
01:39:29,908 --> 01:39:36,448
actually gets set up if we were to do a

1992
01:39:33,569 --> 01:39:45,268
64 pack it would look something like

1993
01:39:36,448 --> 01:39:46,948
this it would be the exact same call

1994
01:39:45,269 --> 01:39:51,418
right so it's it's really really simple

1995
01:39:46,948 --> 01:39:54,268
but when we're doing this rounding and

1996
01:39:51,418 --> 01:40:00,269
we produce these values what we would

1997
01:39:54,269 --> 01:40:05,309
want to do here is this would explain

1998
01:40:00,269 --> 01:40:13,019
the 65535 and this would be packing a

1999
01:40:05,309 --> 01:40:20,130
64-bit value instead of a a set of a

2000
01:40:13,019 --> 01:40:25,260
32-bit value so 16 32 48 right

2001
01:40:20,130 --> 01:40:26,579
um so it's pretty easy for us to do

2002
01:40:25,260 --> 01:40:31,440
something like that and then we just

2003
01:40:26,579 --> 01:40:37,488
have to actually like record that that

2004
01:40:31,439 --> 01:40:37,488
packing what's it complaining about

2005
01:40:40,130 --> 01:40:47,850
conversion from you 64 to you 32 sorry

2006
01:40:44,810 --> 01:40:50,219
yeah and so now all we have to do is

2007
01:40:47,850 --> 01:40:52,500
actually allocate that storage as a

2008
01:40:50,219 --> 01:40:55,079
different kind of storage so now like

2009
01:40:52,500 --> 01:40:58,229
the light see that information that's

2010
01:40:55,079 --> 01:40:59,579
going to be 64-bit coming down and all

2011
01:40:58,229 --> 01:41:01,349
we're doing here is increasing the bit

2012
01:40:59,579 --> 01:41:03,960
depth a little bit just to see to what

2013
01:41:01,350 --> 01:41:07,440
extent we're getting a problem with just

2014
01:41:03,960 --> 01:41:11,460
bit depth information there right and so

2015
01:41:07,439 --> 01:41:14,879
you can see here light voxel C needs to

2016
01:41:11,460 --> 01:41:18,389
be expanded so what we're getting there

2017
01:41:14,880 --> 01:41:23,890
is like this information right needs to

2018
01:41:18,389 --> 01:41:30,789
be 64 s right

2019
01:41:23,890 --> 01:41:34,970
and like j2c is the same so that's just

2020
01:41:30,789 --> 01:41:36,140
that so again nothing really interesting

2021
01:41:34,970 --> 01:41:37,730
happening there I just wanted to

2022
01:41:36,140 --> 01:41:39,500
increase the Biff depth a little bit to

2023
01:41:37,729 --> 01:41:45,429
see whether that flickering was coming

2024
01:41:39,500 --> 01:41:50,600
from it or not and I don't know that is

2025
01:41:45,430 --> 01:41:56,110
not what I expected even a little bit so

2026
01:41:50,600 --> 01:41:56,110
what did I screw up there did I I not

2027
01:42:00,840 --> 01:42:07,020
Oh haha yeah so actually we said short

2028
01:42:05,250 --> 01:42:10,100
on the initial one but we didn't say

2029
01:42:07,020 --> 01:42:10,100
short on this one

2030
01:42:11,469 --> 01:42:13,800
oops

2031
01:42:18,560 --> 01:42:20,620
you

2032
01:42:22,899 --> 01:42:25,439
my bad

2033
01:42:26,279 --> 01:42:28,340
you

2034
01:42:31,300 --> 01:42:39,140
okay so here's one that has more light

2035
01:42:37,279 --> 01:42:42,009
bits and I just want to see if that has

2036
01:42:39,140 --> 01:42:42,010
anything to do with it

2037
01:42:51,710 --> 01:42:58,170
so I would say it's you know I can't

2038
01:42:56,310 --> 01:42:59,730
even really tell if there's maybe even

2039
01:42:58,170 --> 01:43:02,760
more there so you know I'm just going to

2040
01:42:59,729 --> 01:43:04,349
say forget it we're just gonna send this

2041
01:43:02,760 --> 01:43:07,980
down regular and we'll figure out the

2042
01:43:04,350 --> 01:43:12,870
encoding later right so I'm gonna do it

2043
01:43:07,979 --> 01:43:16,649
to do figure out the encoding for these

2044
01:43:12,869 --> 01:43:18,800
later and because I don't really want to

2045
01:43:16,649 --> 01:43:20,909
have to wrestle with that anymore

2046
01:43:18,800 --> 01:43:23,579
because you know what that could be the

2047
01:43:20,909 --> 01:43:27,000
normal as well so I'll switch both of

2048
01:43:23,579 --> 01:43:28,850
these now we can play with them but I'm

2049
01:43:27,000 --> 01:43:32,430
just gonna like I'm gonna let these be

2050
01:43:28,850 --> 01:43:35,130
encoded exactly as they are as just

2051
01:43:32,430 --> 01:43:37,050
floats and just say look we're gonna

2052
01:43:35,130 --> 01:43:39,690
we'll figure out the encoding later when

2053
01:43:37,050 --> 01:43:42,690
we actually care but that's what we're

2054
01:43:39,689 --> 01:43:46,409
gonna do okay

2055
01:43:42,689 --> 01:43:49,109
so the lightbox will see in the in the

2056
01:43:46,409 --> 01:43:53,369
platform layer here so light box let's

2057
01:43:49,109 --> 01:43:56,939
see here we're gonna change that to be

2058
01:43:53,369 --> 01:43:59,609
VIII's right and then we're just not

2059
01:43:56,939 --> 01:44:01,229
gonna pack the values at all we're just

2060
01:43:59,609 --> 01:44:05,009
going to leave them exactly as they are

2061
01:44:01,229 --> 01:44:07,469
so these light C values here instead of

2062
01:44:05,010 --> 01:44:09,739
calling a radiance pack on those we're

2063
01:44:07,470 --> 01:44:12,930
not going to we're just going to do that

2064
01:44:09,739 --> 01:44:15,179
right and this is just me saying look

2065
01:44:12,930 --> 01:44:16,890
that was pretty mature we want to see

2066
01:44:15,180 --> 01:44:19,110
the actual values we're computing so

2067
01:44:16,890 --> 01:44:21,630
that we know that the the art of any

2068
01:44:19,109 --> 01:44:23,909
artifacts that we see are not from our

2069
01:44:21,630 --> 01:44:25,260
quantization and then later when we're

2070
01:44:23,909 --> 01:44:27,619
trying to optimize things then we'll

2071
01:44:25,260 --> 01:44:29,670
quantize so that was just me being lazy

2072
01:44:27,619 --> 01:44:32,579
because I didn't want to have to like

2073
01:44:29,670 --> 01:44:34,710
add a float path there but that's not

2074
01:44:32,579 --> 01:44:38,010
what we want to do and so here where we

2075
01:44:34,710 --> 01:44:40,590
set up the the light C's we'll do those

2076
01:44:38,010 --> 01:44:43,350
this way and we won't pack and then when

2077
01:44:40,590 --> 01:44:45,690
we do our sampling in the pixel shader

2078
01:44:43,350 --> 01:44:48,000
we just we'll just use it exactly as it

2079
01:44:45,689 --> 01:44:53,009
is right we won't touch it

2080
01:44:48,000 --> 01:44:54,840
we won't change the value in any way so

2081
01:44:53,010 --> 01:44:58,949
that we know like packing or clamping or

2082
01:44:54,840 --> 01:45:03,119
anything right and then so yeah the Z

2083
01:44:58,949 --> 01:45:03,859
bias program where this thing gets you

2084
01:45:03,119 --> 01:45:07,699
know

2085
01:45:03,859 --> 01:45:12,139
we used I'm not I'm gonna like nerf out

2086
01:45:07,699 --> 01:45:14,989
this bit here and just say that whatever

2087
01:45:12,140 --> 01:45:19,630
the light for that you know whatever

2088
01:45:14,989 --> 01:45:19,630
that light see came back as

2089
01:45:23,090 --> 01:45:25,150
you

2090
01:45:26,019 --> 01:45:33,710
yeah we're just going to use so I'm

2091
01:45:28,578 --> 01:45:37,759
gonna say oops I'm gonna say the lights

2092
01:45:33,710 --> 01:45:40,998
color equals the light the RGB and used

2093
01:45:37,760 --> 01:45:43,789
that's it no modification for the light

2094
01:45:40,998 --> 01:45:46,099
floor no modification for anything so

2095
01:45:43,788 --> 01:45:47,509
then in the OpenGL code when we submit

2096
01:45:46,099 --> 01:45:51,099
our textures down we're just gonna

2097
01:45:47,510 --> 01:45:54,429
submit floats for both of them and

2098
01:45:51,099 --> 01:46:00,199
that's all that's going to happen so the

2099
01:45:54,429 --> 01:46:03,019
the sixteen there this this one this is

2100
01:46:00,198 --> 01:46:05,779
going to come down as float just like

2101
01:46:03,019 --> 01:46:08,449
before when we ask for how it's going to

2102
01:46:05,779 --> 01:46:15,738
be stored I'm gonna ask for a float

2103
01:46:08,448 --> 01:46:21,049
there as well so I'm gonna see if we can

2104
01:46:15,738 --> 01:46:25,308
just get that in both cases so not

2105
01:46:21,050 --> 01:46:30,199
encoded in any kind of shifty way there

2106
01:46:25,309 --> 01:46:33,139
right and so when we do the normal I

2107
01:46:30,198 --> 01:46:36,189
don't know if we unpacked that here's

2108
01:46:33,139 --> 01:46:36,190
the light normal

2109
01:46:39,699 --> 01:46:41,760
you

2110
01:46:43,319 --> 01:46:52,359
so light and ink right also got unpacked

2111
01:46:48,579 --> 01:46:54,699
I'm not gonna do that so when I have

2112
01:46:52,359 --> 01:46:56,589
that go in the same way as well so

2113
01:46:54,699 --> 01:47:00,010
basically all of this will just stay

2114
01:46:56,590 --> 01:47:04,420
exactly as it was so we get floats there

2115
01:47:00,010 --> 01:47:07,360
we get floats here and then I guess we

2116
01:47:04,420 --> 01:47:09,100
also just need to make sure that we're

2117
01:47:07,359 --> 01:47:23,039
those are actually submitted their float

2118
01:47:09,100 --> 01:47:23,039
but I think we already did that yep

2119
01:47:24,850 --> 01:47:33,440
all right so I think that's what we

2120
01:47:29,600 --> 01:47:37,100
needed and now everything should be

2121
01:47:33,439 --> 01:47:40,279
kosher when we actually packed these we

2122
01:47:37,100 --> 01:47:44,180
would just be assigning them directly as

2123
01:47:40,279 --> 01:47:47,059
well so inside the letting call when we

2124
01:47:44,180 --> 01:47:52,579
actually surface the voxel there what

2125
01:47:47,060 --> 01:47:58,820
I'd like to do is just make that make

2126
01:47:52,579 --> 01:48:02,809
that packing code not actually use sorry

2127
01:47:58,819 --> 01:48:04,789
where does that radience the by normal

2128
01:48:02,810 --> 01:48:07,100
to normal thing we don't want to do

2129
01:48:04,789 --> 01:48:10,340
anymore right so we want to just assign

2130
01:48:07,100 --> 01:48:17,230
these directly so these should be like

2131
01:48:10,340 --> 01:48:17,230
this and off we go

2132
01:48:17,289 --> 01:48:21,590
and so let's try to get this working

2133
01:48:19,640 --> 01:48:23,300
before we end for the day so just now

2134
01:48:21,590 --> 01:48:25,250
passing everything that is floats so we

2135
01:48:23,300 --> 01:48:27,890
know that like look it's piggy there's

2136
01:48:25,250 --> 01:48:30,380
probably no reason for it but at least

2137
01:48:27,890 --> 01:48:32,630
we can start to eliminate like any

2138
01:48:30,380 --> 01:48:35,869
suspicion we have about the artifacts

2139
01:48:32,630 --> 01:48:37,550
coming from quantization and so I think

2140
01:48:35,869 --> 01:48:39,409
my suspicion was well-founded

2141
01:48:37,550 --> 01:48:43,970
so like looking at it now it's not

2142
01:48:39,409 --> 01:48:45,949
sparkly anymore at all right but you can

2143
01:48:43,970 --> 01:48:48,289
tell that it's a bad idea right just

2144
01:48:45,949 --> 01:48:50,869
looking at it currently it's very slow

2145
01:48:48,289 --> 01:48:52,460
by comparison to the old one so you can

2146
01:48:50,869 --> 01:48:55,760
see like those texture samplers really

2147
01:48:52,460 --> 01:48:57,319
do cost you right it's not free now we

2148
01:48:55,760 --> 01:48:59,510
can speed it back up again it doesn't

2149
01:48:57,319 --> 01:49:00,739
have to be slow I'm assuming that's the

2150
01:48:59,510 --> 01:49:05,329
graphs right I guess I don't really know

2151
01:49:00,739 --> 01:49:07,849
so I should be careful there but inside

2152
01:49:05,329 --> 01:49:09,859
our actual Z bias program we can sample

2153
01:49:07,850 --> 01:49:12,140
less of those right at the moment we're

2154
01:49:09,859 --> 01:49:14,539
not using a bunch of them so if we

2155
01:49:12,140 --> 01:49:20,600
wanted to we could just say like yeah

2156
01:49:14,539 --> 01:49:25,189
don't actually do any of this right just

2157
01:49:20,600 --> 01:49:27,890
sample one of them and use that and that

2158
01:49:25,189 --> 01:49:29,389
should in theory get us you know that

2159
01:49:27,890 --> 01:49:30,920
speed back if it is the graphics card

2160
01:49:29,390 --> 01:49:34,130
that's the actual problem right which I

2161
01:49:30,920 --> 01:49:35,578
think it was I don't see because it

2162
01:49:34,130 --> 01:49:37,679
slowed down only when I'm out here

2163
01:49:35,578 --> 01:49:39,448
right and so now when we look at this

2164
01:49:37,679 --> 01:49:43,819
right and now it's perfectly fast again

2165
01:49:39,448 --> 01:49:46,259
and so I do think you know you could I

2166
01:49:43,819 --> 01:49:49,049
wasn't wrong that we need to do some

2167
01:49:46,260 --> 01:49:51,270
encoding to keep that stuff fast but it

2168
01:49:49,050 --> 01:49:53,369
does have a cost right and it looks like

2169
01:49:51,270 --> 01:49:56,639
the cost may have been mostly in the

2170
01:49:53,368 --> 01:49:58,319
encoding of the normals not in the

2171
01:49:56,639 --> 01:50:00,630
encoding of the colors which is pretty

2172
01:49:58,319 --> 01:50:03,590
interesting but you know that's just

2173
01:50:00,630 --> 01:50:05,880
something that's worth looking at right

2174
01:50:03,590 --> 01:50:09,860
and so we may be able to go ahead and

2175
01:50:05,880 --> 01:50:12,300
make color values be much much less

2176
01:50:09,859 --> 01:50:15,839
resolute but we may need to make our

2177
01:50:12,300 --> 01:50:18,389
normals be 64-bit encoded or maybe we

2178
01:50:15,840 --> 01:50:20,159
change to an encoding that's like an X

2179
01:50:18,389 --> 01:50:22,859
and a Y and then a bit for Z or

2180
01:50:20,158 --> 01:50:24,658
something like that right just so we can

2181
01:50:22,859 --> 01:50:26,399
get more data out in there so we

2182
01:50:24,658 --> 01:50:27,569
definitely have an encoding problem we

2183
01:50:26,399 --> 01:50:29,158
could choose to like work on the

2184
01:50:27,569 --> 01:50:32,099
encoding is a little bit more because

2185
01:50:29,158 --> 01:50:34,170
now we have we know exactly like we have

2186
01:50:32,099 --> 01:50:39,719
a case where we can demonstrate that

2187
01:50:34,170 --> 01:50:41,609
it's perfect no no freckling and so we

2188
01:50:39,719 --> 01:50:43,859
just would need some way of going wait a

2189
01:50:41,609 --> 01:50:46,170
minute

2190
01:50:43,859 --> 01:50:48,269
what kind of encoding can we do here

2191
01:50:46,170 --> 01:50:49,380
that would that would make that work so

2192
01:50:48,270 --> 01:50:50,940
I'm going to go ahead and say that's it

2193
01:50:49,380 --> 01:50:52,340
for today next week and me what we'll do

2194
01:50:50,939 --> 01:50:54,960
is get the encoding working correctly

2195
01:50:52,340 --> 01:50:57,029
but we're almost there on that and then

2196
01:50:54,960 --> 01:50:58,649
we can go back to the ray casting and

2197
01:50:57,029 --> 01:51:02,219
get that working so you know again

2198
01:50:58,649 --> 01:51:03,719
getting pretty close you know it's and

2199
01:51:02,219 --> 01:51:06,179
you can see here we've got issues to

2200
01:51:03,719 --> 01:51:07,980
like so do you see how we're centering

2201
01:51:06,179 --> 01:51:13,078
the simulation region is centered over

2202
01:51:07,979 --> 01:51:17,178
there right now for some reason I don't

2203
01:51:13,078 --> 01:51:17,179
really know why that's the case

2204
01:51:17,880 --> 01:51:19,940
you

2205
01:51:22,779 --> 01:51:27,969
so if we look at exactly what's going on

2206
01:51:24,909 --> 01:51:30,460
there the simulation center is it's

2207
01:51:27,970 --> 01:51:33,329
really very far this way even though

2208
01:51:30,460 --> 01:51:33,329
this room is not

2209
01:51:40,369 --> 01:51:44,149
not actually the center

2210
01:51:45,560 --> 01:51:50,150
yeah but anyway point B you can see how

2211
01:51:47,869 --> 01:51:51,680
the lighting voxel probably doesn't want

2212
01:51:50,149 --> 01:51:53,420
to be simulation center based we

2213
01:51:51,680 --> 01:51:55,700
probably want it to be more camera based

2214
01:51:53,420 --> 01:51:56,930
when we move that voxel around so that's

2215
01:51:55,699 --> 01:51:59,529
another thing we got to do we got plenty

2216
01:51:56,930 --> 01:51:59,530
of stuff to do

2217
01:52:00,199 --> 01:52:02,260
you

2218
01:52:04,159 --> 01:52:08,630
um so yeah maybe I'm also gonna start

2219
01:52:06,680 --> 01:52:10,250
here like a little list because there's

2220
01:52:08,630 --> 01:52:12,440
a lot of stuff here so if we go to

2221
01:52:10,250 --> 01:52:43,760
lighting I'm gonna put a little thing in

2222
01:52:12,439 --> 01:52:45,710
that right so that's one that we can

2223
01:52:43,760 --> 01:52:47,270
just do next weekend that's one we could

2224
01:52:45,710 --> 01:52:48,649
just do get that working get our

2225
01:52:47,270 --> 01:52:49,700
encoding so it's nice and smooth and

2226
01:52:48,649 --> 01:52:51,079
then we just don't have to think about

2227
01:52:49,699 --> 01:52:51,739
that as a possible source of error

2228
01:52:51,079 --> 01:52:54,680
anymore

2229
01:52:51,739 --> 01:52:56,389
right so you could do that or we could

2230
01:52:54,680 --> 01:53:00,020
do that later but either way we can do

2231
01:52:56,390 --> 01:53:05,990
that and figure that out right number

2232
01:53:00,020 --> 01:53:09,880
two would be flood filled the voxel so

2233
01:53:05,989 --> 01:53:13,670
that portions that didn't get sampled

2234
01:53:09,880 --> 01:53:22,100
get filled in from nearby samples so

2235
01:53:13,670 --> 01:53:24,170
basically you have filter pass so I'll

2236
01:53:22,100 --> 01:53:27,890
do that's just to fill in the edges

2237
01:53:24,170 --> 01:53:32,899
there and then what we want to do I

2238
01:53:27,890 --> 01:53:38,539
think is fix the voxel centering so that

2239
01:53:32,899 --> 01:53:44,679
a lighting hot region is always nearby

2240
01:53:38,539 --> 01:53:44,680
to the camera so we don't see

2241
01:53:47,109 --> 01:53:51,229
so I think those are some small - dues

2242
01:53:49,760 --> 01:53:54,159
that way I just want to remember them

2243
01:53:51,229 --> 01:53:57,409
all because they all have to happen

2244
01:53:54,159 --> 01:53:58,970
separate from going now than fixing the

2245
01:53:57,409 --> 01:54:00,559
light transport to be working properly

2246
01:53:58,970 --> 01:54:03,079
because it's kind of busted at the

2247
01:54:00,560 --> 01:54:05,810
moment so we'll work on the light

2248
01:54:03,079 --> 01:54:07,460
transport but we also have these three

2249
01:54:05,810 --> 01:54:09,320
and we want to do those separate so

2250
01:54:07,460 --> 01:54:11,380
that's what we're looking at heading

2251
01:54:09,319 --> 01:54:16,269
into next weekend

2252
01:54:11,380 --> 01:54:16,270
all right let's go ahead and go to QA

2253
01:54:25,609 --> 01:54:34,488
oops miss type that there

2254
01:54:30,220 --> 01:54:34,489
[Music]

2255
01:54:34,619 --> 01:54:39,720
where is my discord

2256
01:54:43,810 --> 01:54:50,550
[Music]

2257
01:54:46,979 --> 01:54:50,549
yeah okay

2258
01:54:56,760 --> 01:54:58,820
you

2259
01:55:05,920 --> 01:55:14,618
- why you pound to find internal -

2260
01:55:08,469 --> 01:55:18,000
static so you know I've kind of had a

2261
01:55:14,618 --> 01:55:20,829
slight change of mind on that that

2262
01:55:18,000 --> 01:55:22,719
there's now like other reasons to do it

2263
01:55:20,829 --> 01:55:24,550
than the one that I originally did and I

2264
01:55:22,719 --> 01:55:31,179
probably wouldn't have chosen the name

2265
01:55:24,550 --> 01:55:35,590
internal so you know six of one half

2266
01:55:31,179 --> 01:55:39,399
dozen together but I don't like the word

2267
01:55:35,590 --> 01:55:42,520
the keyword static in C and C++ I think

2268
01:55:39,399 --> 01:55:45,488
it was a really bad idea it is the basis

2269
01:55:42,520 --> 01:55:48,850
of it the reason is because it's used

2270
01:55:45,488 --> 01:55:51,939
for two totally different purposes so

2271
01:55:48,850 --> 01:55:55,829
you can't really grep very effectively

2272
01:55:51,939 --> 01:55:58,960
for things like I don't ever need to

2273
01:55:55,829 --> 01:56:02,050
grep for whether I have functions that

2274
01:55:58,960 --> 01:56:04,029
are defined static because all my

2275
01:56:02,050 --> 01:56:07,469
functions usually can be defined static

2276
01:56:04,029 --> 01:56:10,988
I definitely want to know if there's any

2277
01:56:07,469 --> 01:56:14,198
variables defined static like that's

2278
01:56:10,988 --> 01:56:16,479
really important to know so the keywords

2279
01:56:14,198 --> 01:56:18,819
what I would have done if it were up to

2280
01:56:16,479 --> 01:56:24,029
me is I would have had the following B

2281
01:56:18,819 --> 01:56:29,259
keywords I would have had them be

2282
01:56:24,029 --> 01:56:36,009
function and external function and these

2283
01:56:29,260 --> 01:56:39,400
would have mapped to static and you know

2284
01:56:36,010 --> 01:56:41,829
nothing right and you would have had to

2285
01:56:39,399 --> 01:56:43,269
have put these in front of everything so

2286
01:56:41,829 --> 01:56:46,389
whenever you defined a function you

2287
01:56:43,270 --> 01:56:49,330
would say function void through and you

2288
01:56:46,389 --> 01:56:51,909
would go right and that would default to

2289
01:56:49,329 --> 01:56:53,889
internal linkage only so only in the

2290
01:56:51,908 --> 01:56:55,509
same compilation module and then if you

2291
01:56:53,889 --> 01:56:57,850
wanted something exported you would have

2292
01:56:55,510 --> 01:56:59,440
said that now I don't care what these

2293
01:56:57,850 --> 01:57:01,570
are you know maybe you don't want to

2294
01:56:59,439 --> 01:57:04,149
type that much so it's just func and you

2295
01:57:01,569 --> 01:57:06,670
know e funk or something right I don't

2296
01:57:04,149 --> 01:57:09,879
care but but that's what I wanted to

2297
01:57:06,670 --> 01:57:13,270
keywords to be static and nothing not

2298
01:57:09,880 --> 01:57:17,380
cool right that is just not what should

2299
01:57:13,270 --> 01:57:19,150
be there and especially because in in if

2300
01:57:17,380 --> 01:57:21,100
you want to make lightweight text

2301
01:57:19,149 --> 01:57:23,379
Cicero's for example that look at C code

2302
01:57:21,100 --> 01:57:26,620
or something the fact that it's just a

2303
01:57:23,380 --> 01:57:29,079
type name that starts a function is also

2304
01:57:26,619 --> 01:57:31,119
terrible right because it means you have

2305
01:57:29,079 --> 01:57:32,948
to have global awareness of the entire

2306
01:57:31,119 --> 01:57:34,510
set of things that happen in the program

2307
01:57:32,948 --> 01:57:35,769
in order just to even know if

2308
01:57:34,510 --> 01:57:41,020
something's a function half the time

2309
01:57:35,770 --> 01:57:42,610
right but anyway so I would have done

2310
01:57:41,020 --> 01:57:43,989
that and any other thing I would have

2311
01:57:42,609 --> 01:57:47,549
done is I would have had keywords for

2312
01:57:43,988 --> 01:57:51,238
like global variable or something and

2313
01:57:47,550 --> 01:57:53,890
local persistent variable right and

2314
01:57:51,238 --> 01:57:57,309
those would have mapped both to what the

2315
01:57:53,890 --> 01:58:05,170
see currently defines a static and and

2316
01:57:57,310 --> 01:58:06,489
basically you know and you would have

2317
01:58:05,170 --> 01:58:08,800
had to have said which one of these you

2318
01:58:06,488 --> 01:58:11,709
were talking about right and again maybe

2319
01:58:08,800 --> 01:58:16,869
you just want them to be like you know X

2320
01:58:11,710 --> 01:58:19,119
glob and you know blob and local

2321
01:58:16,869 --> 01:58:21,158
position right so they can be terse if

2322
01:58:19,119 --> 01:58:22,510
you want I don't care but they should

2323
01:58:21,158 --> 01:58:27,429
have been keywords and they should have

2324
01:58:22,510 --> 01:58:30,960
had a different one for each case so I

2325
01:58:27,429 --> 01:58:30,960
think that makes sense right

2326
01:58:33,520 --> 01:58:35,580
you

2327
01:58:39,880 --> 01:58:41,940
you

2328
01:58:42,710 --> 01:58:46,189
you

2329
01:58:44,130 --> 01:58:46,190
you

2330
01:58:47,958 --> 01:58:53,389
is there a way to suggest or home the

2331
01:58:50,809 --> 01:58:56,179
processor that a branch is likely or not

2332
01:58:53,389 --> 01:58:59,019
likely to be taken goal is to help with

2333
01:58:56,179 --> 01:58:59,019
branch prediction

2334
01:59:01,469 --> 01:59:13,170
mmm well so yeah I want to see the

2335
01:59:08,948 --> 01:59:13,169
answer is currently No

2336
01:59:15,770 --> 01:59:17,830
you

2337
01:59:18,460 --> 01:59:22,319
I want to say the answer is currently No

2338
01:59:22,420 --> 01:59:25,868
don't quote me on that because I'd have

2339
01:59:24,099 --> 01:59:29,409
to go look it up but I think the answer

2340
01:59:25,868 --> 01:59:34,598
is currently no there isn't there has

2341
01:59:29,408 --> 01:59:37,988
been many times many ways as they say in

2342
01:59:34,599 --> 01:59:40,119
the Merry Christmas song so there used

2343
01:59:37,988 --> 01:59:41,979
to be things where like the branch

2344
01:59:40,118 --> 01:59:44,078
predictor would initialize to assume

2345
01:59:41,979 --> 01:59:46,629
that like backward branches were taken

2346
01:59:44,078 --> 01:59:49,238
and forward branches weren't so you

2347
01:59:46,630 --> 01:59:52,420
could always structure your code so that

2348
01:59:49,238 --> 01:59:54,308
the positive side of an if statement was

2349
01:59:52,420 --> 01:59:56,828
the most likely case and the else was

2350
01:59:54,309 --> 02:00:00,670
the least likely and loops were always

2351
01:59:56,828 --> 02:00:03,130
biased that way right that was a thing

2352
02:00:00,670 --> 02:00:06,219
that used to happen on certain CPUs if I

2353
02:00:03,130 --> 02:00:09,010
remember correctly there was branch

2354
02:00:06,219 --> 02:00:10,389
prediction bits so there were ways you

2355
02:00:09,010 --> 02:00:14,500
could actually put it into the assembly

2356
02:00:10,389 --> 02:00:16,659
language or the machine code into the

2357
02:00:14,500 --> 02:00:18,609
jump instructions on certain CPUs where

2358
02:00:16,658 --> 02:00:22,859
things were say a hint as to whether

2359
02:00:18,609 --> 02:00:25,389
this is commonly taken or commonly not I

2360
02:00:22,859 --> 02:00:27,189
remember at least to those two things I

2361
02:00:25,389 --> 02:00:27,789
want to say that none of those are true

2362
02:00:27,189 --> 02:00:30,698
anymore

2363
02:00:27,789 --> 02:00:32,289
I could be wrong because I not up to

2364
02:00:30,698 --> 02:00:33,399
date on some of these things I haven't

2365
02:00:32,289 --> 02:00:35,590
looked at branch prediction in a while

2366
02:00:33,399 --> 02:00:37,388
but I want to say that currently the

2367
02:00:35,590 --> 02:00:39,130
Intel and AMD branch prediction

2368
02:00:37,389 --> 02:00:42,940
architectures are their own thing that

2369
02:00:39,130 --> 02:00:46,029
just I don't know that they really have

2370
02:00:42,939 --> 02:00:48,399
the ability to be hinted at anymore

2371
02:00:46,029 --> 02:00:51,189
maybe there is I don't know you would

2372
02:00:48,399 --> 02:00:56,348
have to go look but I don't know of a

2373
02:00:51,189 --> 02:00:58,299
way to do it anymore so I'm sorry you're

2374
02:00:56,349 --> 02:01:00,929
gonna have to go read the docs I think

2375
02:00:58,300 --> 02:01:00,929
is the real answer

2376
02:01:05,090 --> 02:01:07,400
what's your owner stream we said

2377
02:01:06,229 --> 02:01:08,899
something along the lines of I've never

2378
02:01:07,399 --> 02:01:09,889
worked on a commercial compiler so have

2379
02:01:08,899 --> 02:01:12,710
you ever worked on a non-commercial

2380
02:01:09,890 --> 02:01:15,350
compiler yes I have worked on

2381
02:01:12,710 --> 02:01:17,239
non-commercial compilers meaning like

2382
02:01:15,350 --> 02:01:19,190
internal things that do compilation

2383
02:01:17,239 --> 02:01:20,869
stuff some of them are more like text

2384
02:01:19,189 --> 02:01:22,819
translators like a trad I wrote some

2385
02:01:20,869 --> 02:01:25,099
text translators that we used which

2386
02:01:22,819 --> 02:01:26,689
Fabien always had the dubious honour of

2387
02:01:25,100 --> 02:01:28,640
having to turn into real compilers later

2388
02:01:26,689 --> 02:01:32,119
because then one of the weird things

2389
02:01:28,640 --> 02:01:33,710
that always happens it seems if you ever

2390
02:01:32,119 --> 02:01:36,109
make something that's just a simple text

2391
02:01:33,710 --> 02:01:37,310
translator people will start using it

2392
02:01:36,109 --> 02:01:39,079
and they'll end up wanting it to

2393
02:01:37,310 --> 02:01:42,820
eventually be a cool compiler that's

2394
02:01:39,079 --> 02:01:42,819
just what it that's it's it's just I

2395
02:01:43,600 --> 02:01:57,050
don't know why that's just what happens

2396
02:01:46,010 --> 02:01:59,650
so stuff has a way of sticking around a

2397
02:01:57,050 --> 02:02:03,079
lot longer than it was supposed to

2398
02:01:59,649 --> 02:02:05,359
that's just what happens but yeah and

2399
02:02:03,079 --> 02:02:07,850
then internally I've done some more real

2400
02:02:05,359 --> 02:02:09,710
compiler work at Mali rocket for just

2401
02:02:07,850 --> 02:02:12,680
stuff we use internally and that stuff's

2402
02:02:09,710 --> 02:02:14,329
more of real compiler stuff the stuff I

2403
02:02:12,680 --> 02:02:16,039
did it rad was not really although I did

2404
02:02:14,329 --> 02:02:18,590
do one thing that was sort of real can

2405
02:02:16,039 --> 02:02:23,659
probably be optimizing back-end that I

2406
02:02:18,590 --> 02:02:24,920
did for Xbox 360 as a test that one was

2407
02:02:23,659 --> 02:02:26,389
fairly real but we didn't end up using

2408
02:02:24,920 --> 02:02:27,590
it because we ended up changing the way

2409
02:02:26,390 --> 02:02:30,130
we were doing stuff on that platform

2410
02:02:27,590 --> 02:02:30,130
anyway

2411
02:02:32,109 --> 02:02:34,170
you

2412
02:02:36,059 --> 02:02:38,940
what see us first

2413
02:02:37,619 --> 02:02:40,590
do you remember recommend for a beginner

2414
02:02:38,939 --> 02:02:43,159
I don't have any recommendations for

2415
02:02:40,590 --> 02:02:43,159
that sorry

2416
02:02:53,618 --> 02:02:57,279
what's your guess on how much faster GPU

2417
02:02:55,838 --> 02:02:59,738
trilling your sampling is compared to

2418
02:02:57,279 --> 02:03:02,078
CPU side also could you not bounce the

2419
02:02:59,738 --> 02:03:04,268
light on GPU side and be faster even an

2420
02:03:02,078 --> 02:03:05,738
onyx cards what are the reasons against

2421
02:03:04,269 --> 02:03:09,069
doing that is that just to keep

2422
02:03:05,738 --> 02:03:11,168
complexity at HMH scope I don't actually

2423
02:03:09,069 --> 02:03:15,999
that the reason is mostly that no I

2424
02:03:11,168 --> 02:03:20,108
don't think we can so basically what

2425
02:03:15,998 --> 02:03:21,279
we're gonna have to do I think is we're

2426
02:03:20,109 --> 02:03:23,819
gonna have some lighting we're gonna

2427
02:03:21,279 --> 02:03:26,978
have to have some lighting quality

2428
02:03:23,819 --> 02:03:29,169
controls and I'm guessing that we will

2429
02:03:26,979 --> 02:03:32,649
do very simplistic lighting output on

2430
02:03:29,168 --> 02:03:34,418
sort of lower end stuff and so while

2431
02:03:32,649 --> 02:03:36,219
maybe the card that's in my machine now

2432
02:03:34,418 --> 02:03:39,698
it might this this machine might have a

2433
02:03:36,219 --> 02:03:42,998
1080 in it in which case sure we could

2434
02:03:39,698 --> 02:03:44,798
do ray tracing on the card side and it

2435
02:03:42,998 --> 02:03:49,568
would probably be faster than the than

2436
02:03:44,798 --> 02:03:50,948
the CPU but that's not necessarily going

2437
02:03:49,569 --> 02:03:52,569
to be the minimum specs we're shooting

2438
02:03:50,948 --> 02:03:55,568
for I mean if we try to port handmade

2439
02:03:52,569 --> 02:03:57,969
hero to Raspberry Pi right we need a way

2440
02:03:55,569 --> 02:03:59,859
of doing some lighting somewhere and

2441
02:03:57,969 --> 02:04:03,819
then outputting it in a way that could

2442
02:03:59,859 --> 02:04:07,569
be used right and so I just don't want

2443
02:04:03,819 --> 02:04:10,030
to take the full leap of going this game

2444
02:04:07,569 --> 02:04:11,530
requires GPU ray tracing because that

2445
02:04:10,029 --> 02:04:14,338
just really limits what you can run on

2446
02:04:11,529 --> 02:04:14,338
right

2447
02:04:17,329 --> 02:04:22,309
we just write some CPU stuff that we use

2448
02:04:20,119 --> 02:04:24,880
that's like a much simpler version of

2449
02:04:22,310 --> 02:04:29,810
this that we run on lower end stuff and

2450
02:04:24,880 --> 02:04:32,510
furthermore on machines with like Intel

2451
02:04:29,810 --> 02:04:34,460
i GPUs and stuff I would wager that you

2452
02:04:32,510 --> 02:04:38,119
could still do like the full ray tracing

2453
02:04:34,460 --> 02:04:39,800
because it might be a very good this de

2454
02:04:38,119 --> 02:04:41,689
CPU might be great right but the GPU

2455
02:04:39,800 --> 02:04:44,539
would never be able to do a good job of

2456
02:04:41,689 --> 02:04:46,549
ray tracing right so I think it's just

2457
02:04:44,539 --> 02:04:50,630
you have to respect the heterogeneity

2458
02:04:46,550 --> 02:04:53,239
there so if we can if we can make the

2459
02:04:50,630 --> 02:04:54,560
CPU do the Ray casting fast enough we

2460
02:04:53,239 --> 02:04:55,369
probably should because it's not going

2461
02:04:54,560 --> 02:04:56,750
to be used for anything else in this

2462
02:04:55,369 --> 02:04:58,069
game we don't have it we don't have any

2463
02:04:56,750 --> 02:04:59,960
physics sim or stuff like that that

2464
02:04:58,069 --> 02:05:01,250
we're really using it for so I think we

2465
02:04:59,960 --> 02:05:05,800
want to take advantage of that so that

2466
02:05:01,250 --> 02:05:05,800
we can run on on crappy GPUs basically

2467
02:05:07,520 --> 02:05:09,580
you

2468
02:05:14,819 --> 02:05:16,880
you

2469
02:05:24,600 --> 02:05:27,430
it seems unlikely that enzyme D would

2470
02:05:26,699 --> 02:05:28,539
change behavior

2471
02:05:27,430 --> 02:05:30,579
branch lick and concerning things like

2472
02:05:28,539 --> 02:05:33,670
pgo and GCC building specs severe oh

2473
02:05:30,579 --> 02:05:37,630
they did like the AMD branch predictor

2474
02:05:33,670 --> 02:05:39,819
predictor in Rison - is totally

2475
02:05:37,630 --> 02:05:42,940
different than the branch predictor

2476
02:05:39,819 --> 02:05:46,359
predictor even in Rison one but

2477
02:05:42,939 --> 02:05:46,779
certainly than in bulldozer it's totally

2478
02:05:46,359 --> 02:05:50,619
different

2479
02:05:46,779 --> 02:05:55,059
so it changes completely from

2480
02:05:50,619 --> 02:05:58,289
architecture to architecture so trust me

2481
02:05:55,060 --> 02:05:58,289
it's totally different

2482
02:05:59,670 --> 02:06:03,750
have you considered the fact that if you

2483
02:06:01,829 --> 02:06:05,010
just said handmade hero had an AI based

2484
02:06:03,750 --> 02:06:07,460
lighting solution you could say it was

2485
02:06:05,010 --> 02:06:07,460
done now

2486
02:06:10,229 --> 02:06:12,289
you

2487
02:06:13,238 --> 02:06:15,939
I understand you're doing a unity

2488
02:06:14,889 --> 02:06:17,920
building handmade here what's the

2489
02:06:15,939 --> 02:06:21,998
meaning of internalist scenario well

2490
02:06:17,920 --> 02:06:24,550
again it just if you don't put it then

2491
02:06:21,998 --> 02:06:25,510
the C compiler thinks everything needs

2492
02:06:24,550 --> 02:06:27,579
to be external

2493
02:06:25,510 --> 02:06:29,380
and that costs you extra linking time

2494
02:06:27,578 --> 02:06:31,509
because you output it a bunch of data

2495
02:06:29,380 --> 02:06:33,038
you didn't need to output so even when

2496
02:06:31,510 --> 02:06:36,099
you're doing a unity build you still

2497
02:06:33,038 --> 02:06:38,590
want to say all of this stuff is within

2498
02:06:36,099 --> 02:06:41,078
this compilation unit so don't do any

2499
02:06:38,590 --> 02:06:44,319
extra work right you need to tell the

2500
02:06:41,078 --> 02:06:47,498
compiler that cuz it doesn't know that's

2501
02:06:44,319 --> 02:06:48,939
what you're doing then through the is hi

2502
02:06:47,498 --> 02:06:50,408
guy content by to company to work as a C

2503
02:06:48,939 --> 02:06:51,879
programmer one job on the numerical

2504
02:06:50,408 --> 02:06:53,408
repeating dia but as I stood aside one

2505
02:06:51,880 --> 02:06:55,150
of the cryptography they also wrote to

2506
02:06:53,408 --> 02:06:56,529
me that they have a hard time in finding

2507
02:06:55,149 --> 02:06:57,670
people who are in a little programming

2508
02:06:56,529 --> 02:06:59,408
do you think it is because majority

2509
02:06:57,670 --> 02:07:00,670
people use Python just for high level

2510
02:06:59,408 --> 02:07:02,018
languages I guess there's always a job

2511
02:07:00,670 --> 02:07:04,328
as someone could you see in a bit of

2512
02:07:02,019 --> 02:07:06,429
assembly yeah I mean this is exactly

2513
02:07:04,328 --> 02:07:08,380
what I said before

2514
02:07:06,429 --> 02:07:10,349
there's almost nobody knows how to do

2515
02:07:08,380 --> 02:07:12,998
this kind of programming any more

2516
02:07:10,349 --> 02:07:15,369
programmers who know anything about how

2517
02:07:12,998 --> 02:07:17,139
to do low-level programming are very

2518
02:07:15,368 --> 02:07:18,130
valuable everywhere because they're the

2519
02:07:17,139 --> 02:07:20,288
only people who know how to like

2520
02:07:18,130 --> 02:07:25,449
actually make things run smoothly or

2521
02:07:20,288 --> 02:07:27,340
fast right so yes I mean it's there's

2522
02:07:25,448 --> 02:07:28,748
always a job for you if you know how to

2523
02:07:27,340 --> 02:07:30,069
do the sorts of stuff we do on handmade

2524
02:07:28,748 --> 02:07:32,380
hero cuz nobody does

2525
02:07:30,069 --> 02:07:34,299
it's not that there's like millions of

2526
02:07:32,380 --> 02:07:36,880
jobs for it it's just that there's

2527
02:07:34,300 --> 02:07:41,110
nobody you can do it so it's just it's

2528
02:07:36,880 --> 02:07:42,429
just a supply issue right when running

2529
02:07:41,109 --> 02:07:44,229
visual studio with my executable has an

2530
02:07:42,429 --> 02:07:46,118
argument I can't find the project

2531
02:07:44,229 --> 02:07:51,419
properties properties window in which

2532
02:07:46,118 --> 02:07:56,219
you set the pound defines dude I don't I

2533
02:07:51,420 --> 02:07:56,219
don't know about Visual Studio like

2534
02:07:56,369 --> 02:08:02,189
you

2535
02:07:58,378 --> 02:08:05,538
like Visual Studio is the pilot crap go

2536
02:08:02,189 --> 02:08:05,539
get remedy that's my advice

2537
02:08:07,699 --> 02:08:11,449
just catching up on the show again what

2538
02:08:10,039 --> 02:08:15,019
do we have left other than lighting an

2539
02:08:11,449 --> 02:08:17,779
actual gameplay so not really anything

2540
02:08:15,020 --> 02:08:19,670
but the gameplay stuff will be kind of

2541
02:08:17,779 --> 02:08:22,039
slow at first I think because we'll want

2542
02:08:19,670 --> 02:08:23,869
to there's two things I think want to be

2543
02:08:22,039 --> 02:08:26,060
tightened up there one is we need the

2544
02:08:23,869 --> 02:08:28,220
collision detector to be back in there

2545
02:08:26,060 --> 02:08:29,930
for like projectiles so that'll probably

2546
02:08:28,220 --> 02:08:31,070
get tuned a little bit because that

2547
02:08:29,930 --> 02:08:34,579
really never got done that we're just

2548
02:08:31,069 --> 02:08:42,109
kind of sitting in there but the other

2549
02:08:34,579 --> 02:08:43,340
thing that I would want to the other

2550
02:08:42,109 --> 02:08:45,199
thing that I think we're gonna want to

2551
02:08:43,340 --> 02:08:47,329
do is the tag based matching sucks right

2552
02:08:45,199 --> 02:08:51,559
now and so what I want to do is like

2553
02:08:47,329 --> 02:08:53,630
write some gameplay code and do the

2554
02:08:51,560 --> 02:08:55,039
snuffleupagus thing stuff let the

2555
02:08:53,630 --> 02:08:56,930
snuffle epistle into programming where

2556
02:08:55,039 --> 02:08:59,390
we just go okay now that we're actually

2557
02:08:56,930 --> 02:09:01,460
running real gameplay play code what do

2558
02:08:59,390 --> 02:09:02,690
we want to type in here to say like how

2559
02:09:01,460 --> 02:09:05,689
these things should have their graphics

2560
02:09:02,689 --> 02:09:08,179
assigned and then go fix the tag code to

2561
02:09:05,689 --> 02:09:10,669
work that way so that wants to happen to

2562
02:09:08,180 --> 02:09:11,900
that can happen with the gameplay code

2563
02:09:10,670 --> 02:09:15,020
though it doesn't have to be a separate

2564
02:09:11,899 --> 02:09:16,719
step but yeah but I would say the

2565
02:09:15,020 --> 02:09:19,190
collision detector needs to be fixed and

2566
02:09:16,720 --> 02:09:22,070
like get that part of the code like

2567
02:09:19,189 --> 02:09:23,059
correct again again we can do that while

2568
02:09:22,069 --> 02:09:24,139
we're doing getting played programming

2569
02:09:23,060 --> 02:09:25,760
that we don't like doesn't need a

2570
02:09:24,140 --> 02:09:27,320
separate phase but we know new gameplay

2571
02:09:25,760 --> 02:09:28,640
room like okay how do we want push next

2572
02:09:27,319 --> 02:09:32,109
to work here like let's go but clean

2573
02:09:28,640 --> 02:09:34,310
that up and make that robust right I

2574
02:09:32,109 --> 02:09:36,079
don't think there's really anything else

2575
02:09:34,310 --> 02:09:39,140
I mean there's a lot of cleanup work we

2576
02:09:36,079 --> 02:09:40,729
can do so you know cleaning things up we

2577
02:09:39,140 --> 02:09:42,619
could spend a few weeks on just getting

2578
02:09:40,729 --> 02:09:45,169
like stuff kind of organized now that we

2579
02:09:42,619 --> 02:09:46,250
have everything done for the engine but

2580
02:09:45,170 --> 02:09:47,899
I don't know that we we could probably

2581
02:09:46,250 --> 02:09:49,939
just do some gameplay stuff first before

2582
02:09:47,899 --> 02:09:50,899
we do that just to make sure we validate

2583
02:09:49,939 --> 02:09:52,069
everything out first

2584
02:09:50,899 --> 02:09:54,920
so I would probably say we'd start the

2585
02:09:52,069 --> 02:09:56,389
gameplay first then take a break from

2586
02:09:54,920 --> 02:09:59,000
the gameplay once we have some basic

2587
02:09:56,390 --> 02:10:00,079
gameplay in there and say okay this is

2588
02:09:59,000 --> 02:10:01,729
basically what it's supposed to play

2589
02:10:00,079 --> 02:10:04,279
like you know like I look up you know

2590
02:10:01,729 --> 02:10:06,139
first level kind of thing then clean

2591
02:10:04,279 --> 02:10:09,550
everything up then push forward

2592
02:10:06,140 --> 02:10:09,550
that seems saying

2593
02:10:11,380 --> 02:10:15,739
which features a c-list do you think our

2594
02:10:13,609 --> 02:10:17,179
conductive orchids are conducive to

2595
02:10:15,738 --> 02:10:18,678
performance oriented programming and

2596
02:10:17,179 --> 02:10:20,179
which do you think are detrimental and

2597
02:10:18,679 --> 02:10:21,618
should be avoided I noticed that you use

2598
02:10:20,179 --> 02:10:25,969
default argument sometimes for example

2599
02:10:21,618 --> 02:10:27,348
um I would say C++ you really doesn't

2600
02:10:25,969 --> 02:10:29,779
have almost anything in it that you want

2601
02:10:27,349 --> 02:10:33,619
the only things I would use are operator

2602
02:10:29,779 --> 02:10:38,630
overloading default parameters well I

2603
02:10:33,618 --> 02:10:41,529
think C us has that now and declare

2604
02:10:38,630 --> 02:10:43,550
anywhere which C also has now

2605
02:10:41,529 --> 02:10:45,259
constructor destructor pairs are

2606
02:10:43,550 --> 02:10:47,869
sometimes useful for automatic things

2607
02:10:45,260 --> 02:10:51,380
like count block so constructor

2608
02:10:47,868 --> 02:10:52,908
destructor pairs for structs maybe but I

2609
02:10:51,380 --> 02:10:55,069
don't really care you don't really have

2610
02:10:52,908 --> 02:10:56,448
to use it it's just a convenience a mild

2611
02:10:55,069 --> 02:11:02,078
convenience that I can easily live

2612
02:10:56,448 --> 02:11:03,669
without so yeah

2613
02:11:02,078 --> 02:11:05,078
when adding the normals together doesn't

2614
02:11:03,670 --> 02:11:07,239
immediately normalizing after each ad

2615
02:11:05,078 --> 02:11:11,170
make the result dependent on the order

2616
02:11:07,238 --> 02:11:13,649
of the vectors yes it does but we're not

2617
02:11:11,170 --> 02:11:17,618
doing that at least not that I remember

2618
02:11:13,649 --> 02:11:27,339
so if you look when we actually do our

2619
02:11:17,618 --> 02:11:29,948
normal accumulation step so you can see

2620
02:11:27,340 --> 02:11:31,900
we do not normalize during our normal

2621
02:11:29,948 --> 02:11:33,969
accumulation step right so there's the

2622
02:11:31,899 --> 02:11:37,769
accumulation step right there and it

2623
02:11:33,969 --> 02:11:37,770
does not normalize right

2624
02:11:39,039 --> 02:11:47,750
so you know that's that's that we

2625
02:11:45,439 --> 02:11:52,069
probably should normalize this sample

2626
02:11:47,750 --> 02:11:53,510
down here but that's another story so

2627
02:11:52,069 --> 02:11:55,099
the place that you might be thinking of

2628
02:11:53,510 --> 02:11:57,409
is the place where we update the voxel

2629
02:11:55,100 --> 02:11:59,539
for the frame but that one's fine

2630
02:11:57,409 --> 02:12:03,289
because that's just doing one update per

2631
02:11:59,539 --> 02:12:06,319
frame right so this right here is just

2632
02:12:03,289 --> 02:12:09,829
saying look we've now produced the new

2633
02:12:06,319 --> 02:12:12,349
result for the for the frame so let's

2634
02:12:09,829 --> 02:12:14,000
normalize it and we always want to start

2635
02:12:12,350 --> 02:12:17,020
with the normalized normal right so that

2636
02:12:14,000 --> 02:12:20,020
that doesn't does that does that help

2637
02:12:17,020 --> 02:12:20,020
hope

2638
02:12:36,149 --> 02:12:39,979
you

2639
02:12:37,920 --> 02:12:39,980
you

2640
02:12:46,569 --> 02:12:53,889
all right we're good all right just few

2641
02:12:49,880 --> 02:12:58,750
questions and we're on topic questions

2642
02:12:53,889 --> 02:12:58,750
so let's go ahead and close this out

2643
02:13:09,779 --> 02:13:13,139
all right Oh

2644
02:13:13,869 --> 02:13:17,019
someone once said as you remember we

2645
02:13:15,760 --> 02:13:19,060
talked about valve a CEO shader

2646
02:13:17,020 --> 02:13:19,990
compilers replacing LLVM I heard that it

2647
02:13:19,060 --> 02:13:22,930
reduces the shadow compile time

2648
02:13:19,989 --> 02:13:24,849
significantly they said that it is great

2649
02:13:22,930 --> 02:13:28,539
for the open source graphics driver on

2650
02:13:24,850 --> 02:13:32,860
Linux okay I mean that that seems good I

2651
02:13:28,539 --> 02:13:37,979
had not looked at it yet though also I

2652
02:13:32,859 --> 02:13:37,979
don't program on Linux but

2653
02:13:38,420 --> 02:13:46,460
did we track light energy so we do but

2654
02:13:44,270 --> 02:13:50,869
at the moment it's kind of an abstract

2655
02:13:46,460 --> 02:13:52,609
value so we don't make an attempt to try

2656
02:13:50,868 --> 02:13:56,149
and have the light energy correspond to

2657
02:13:52,609 --> 02:13:58,609
an actual real value like we're not

2658
02:13:56,149 --> 02:14:04,069
trying to actually measure flux in like

2659
02:13:58,609 --> 02:14:06,679
real physical units so we kind of have

2660
02:14:04,069 --> 02:14:08,539
an abstract value that we claim to

2661
02:14:06,679 --> 02:14:12,920
convict around which is photons per

2662
02:14:08,539 --> 02:14:16,670
second by some scale which is just how

2663
02:14:12,920 --> 02:14:19,069
we're thinking of it and the the reason

2664
02:14:16,670 --> 02:14:20,989
it's not really physical is because that

2665
02:14:19,069 --> 02:14:22,399
scale value is arbitrary we're not

2666
02:14:20,988 --> 02:14:23,779
saying what it is we're just saying look

2667
02:14:22,399 --> 02:14:25,399
this is a measure of the number of

2668
02:14:23,779 --> 02:14:31,368
photons per second that pass through

2669
02:14:25,399 --> 02:14:38,329
this point they Begley right and so

2670
02:14:31,368 --> 02:14:40,309
we're not really trying to to measure

2671
02:14:38,329 --> 02:14:42,050
that how is the radiance different from

2672
02:14:40,310 --> 02:14:44,300
radiance well they're not really

2673
02:14:42,050 --> 02:14:46,460
different it's just trying to it's

2674
02:14:44,300 --> 02:14:49,489
trying to talk about whether something's

2675
02:14:46,460 --> 02:14:51,079
coming in or going out right so like

2676
02:14:49,488 --> 02:14:54,589
radiance is what comes out and

2677
02:14:51,079 --> 02:14:56,948
irradiance is what comes in right so if

2678
02:14:54,590 --> 02:14:56,949
you look

2679
02:15:01,050 --> 02:15:06,719
they get this is this is so so this is

2680
02:15:04,050 --> 02:15:09,360
the value eight more right so irradiance

2681
02:15:06,719 --> 02:15:11,189
is the radiant flux received by a

2682
02:15:09,359 --> 02:15:12,920
surface per unit area right so

2683
02:15:11,189 --> 02:15:16,729
irradiance coming in

2684
02:15:12,920 --> 02:15:20,309
whereas radiance I believe is going out

2685
02:15:16,729 --> 02:15:22,039
typically right yeah in radiometry

2686
02:15:20,309 --> 02:15:25,860
radiance is the radiant flux emitted

2687
02:15:22,039 --> 02:15:29,760
right or you know reflected basically

2688
02:15:25,859 --> 02:15:31,289
coming out right and it looks like maybe

2689
02:15:29,760 --> 02:15:33,900
you could have used that for received as

2690
02:15:31,289 --> 02:15:35,969
well so I don't know I'm not sure about

2691
02:15:33,899 --> 02:15:37,920
the terminology exactly there but the

2692
02:15:35,969 --> 02:15:39,658
point is when you say irradiance you

2693
02:15:37,920 --> 02:15:41,730
specifically mean that it's what's

2694
02:15:39,658 --> 02:15:44,609
entering the surface at that point like

2695
02:15:41,729 --> 02:15:47,908
what's entering the equation from the

2696
02:15:44,609 --> 02:15:50,009
outside not stuff that's going that

2697
02:15:47,908 --> 02:15:56,698
you're sending back into the environment

2698
02:15:50,010 --> 02:15:58,739
from the system right so I think really

2699
02:15:56,698 --> 02:16:00,569
the only reason we use that term

2700
02:15:58,738 --> 02:16:01,919
irradiance is just to make it clear that

2701
02:16:00,569 --> 02:16:09,328
we're talking about stuff that's coming

2702
02:16:01,920 --> 02:16:12,840
in right and and radiance is talking

2703
02:16:09,328 --> 02:16:15,679
about what's going out that's usually

2704
02:16:12,840 --> 02:16:15,679
how I think about them anyway

2705
02:16:17,390 --> 02:16:19,450
you

2706
02:16:21,380 --> 02:16:23,440
you

2707
02:16:24,779 --> 02:16:31,859
and why mmm zero I don't think radiance

2708
02:16:29,310 --> 02:16:33,870
and irradiance are measured differently

2709
02:16:31,859 --> 02:16:34,829
though I don't think when you say

2710
02:16:33,870 --> 02:16:36,630
irradiance you're talking about

2711
02:16:34,829 --> 02:16:38,909
different measure than radiance meaning

2712
02:16:36,629 --> 02:16:41,670
I think irradiance is still per service

2713
02:16:38,909 --> 02:16:44,700
area and Prasad angle right meaning it

2714
02:16:41,670 --> 02:16:46,620
does not change it's just talking about

2715
02:16:44,700 --> 02:16:48,420
the fact that it's incoming right it's

2716
02:16:46,620 --> 02:16:52,079
not it's not that it's measured in a

2717
02:16:48,420 --> 02:16:57,319
different measure is it so I don't I

2718
02:16:52,079 --> 02:16:57,319
don't think that's true might be though

2719
02:17:03,500 --> 02:17:07,319
so they are different units alright so I

2720
02:17:06,000 --> 02:17:08,819
guess they're different units as well so

2721
02:17:07,319 --> 02:17:12,439
when you talk about the outgoing your

2722
02:17:08,819 --> 02:17:14,498
you actually change the units apparently

2723
02:17:12,439 --> 02:17:14,498
you

2724
02:17:15,569 --> 02:17:19,690
that part I don't know I usually have to

2725
02:17:18,129 --> 02:17:21,219
go study that stuff pretty carefully

2726
02:17:19,690 --> 02:17:22,510
when I go to write anything that

2727
02:17:21,219 --> 02:17:25,119
actually does tries to do a lighting

2728
02:17:22,510 --> 02:17:29,500
reflectance I find it pretty confusing

2729
02:17:25,120 --> 02:17:30,730
to remember it all at some point I

2730
02:17:29,500 --> 02:17:32,590
should probably sit down and work it out

2731
02:17:30,729 --> 02:17:35,939
myself in a way that I like to think

2732
02:17:32,590 --> 02:17:35,940
about it so that it would stick

2733
02:17:39,760 --> 02:17:45,010
either way the point is simply that

2734
02:17:41,849 --> 02:17:48,130
irradiance is what's coming in so that's

2735
02:17:45,010 --> 02:17:50,648
why I use that term instead of just

2736
02:17:48,129 --> 02:17:52,778
saying radians I'm not trying to talk

2737
02:17:50,648 --> 02:17:54,638
about any specific units at all I'm just

2738
02:17:52,779 --> 02:17:58,599
trying to talk about the fact that if I

2739
02:17:54,638 --> 02:18:00,968
say your radiance IRR as opposed to

2740
02:17:58,599 --> 02:18:04,859
radiance with just an R I'm just trying

2741
02:18:00,968 --> 02:18:04,858
to say it's coming in right

2742
02:18:11,529 --> 02:18:17,840
have you read Sean Barrett's post on

2743
02:18:13,849 --> 02:18:19,898
anti-aliasing I don't think so

2744
02:18:17,840 --> 02:18:19,898
you

2745
02:18:20,590 --> 02:18:22,620
uhh

2746
02:18:26,100 --> 02:18:34,139
you

2747
02:18:27,988 --> 02:18:36,289
I remember this when he was working on

2748
02:18:34,138 --> 02:18:38,399
it

2749
02:18:36,290 --> 02:18:40,429
but

2750
02:18:38,399 --> 02:18:40,429
I

2751
02:18:45,379 --> 02:18:54,170
but I think I do yeah I don't remember

2752
02:18:51,590 --> 02:18:57,219
reading this though I don't think I've

2753
02:18:54,170 --> 02:18:57,219
ever seen this actual post

2754
02:19:01,888 --> 02:19:04,608
all right

2755
02:19:04,950 --> 02:19:07,010
you

2756
02:19:07,040 --> 02:19:09,099
you

2757
02:19:10,939 --> 02:19:18,929
let's go ahead and close it down thank

2758
02:19:16,590 --> 02:19:20,308
you everyone for tuning in for an

2759
02:19:18,929 --> 02:19:21,840
episode of handmade hero it's been a

2760
02:19:20,308 --> 02:19:23,849
pleasure coding with you as always if

2761
02:19:21,840 --> 02:19:25,049
you would like to follow along with the

2762
02:19:23,849 --> 02:19:26,579
series at home you can always print the

2763
02:19:25,049 --> 02:19:27,778
game on hand made here at organic house

2764
02:19:26,579 --> 02:19:32,370
the source code so you can follow along

2765
02:19:27,779 --> 02:19:34,229
with me as we code it also in theory the

2766
02:19:32,370 --> 02:19:38,689
watch page is working again now because

2767
02:19:34,228 --> 02:19:41,879
I went and updated the server to use the

2768
02:19:38,689 --> 02:19:43,469
the new twitch API so in theory now you

2769
02:19:41,879 --> 02:19:45,420
come here you should get the old

2770
02:19:43,468 --> 02:19:47,488
behavior where you know it's me talking

2771
02:19:45,420 --> 02:19:49,590
like this whenever the show is live and

2772
02:19:47,488 --> 02:19:53,459
whenever the show is not live it should

2773
02:19:49,590 --> 02:19:56,939
revert back to having just the the

2774
02:19:53,459 --> 02:20:00,839
schedule posted there so that's about it

2775
02:19:56,939 --> 02:20:02,040
I'll be back here next week for us to

2776
02:20:00,840 --> 02:20:04,590
sort of start working through some of

2777
02:20:02,040 --> 02:20:06,000
those lighting to do's until then have

2778
02:20:04,590 --> 02:20:07,648
fun programming everyone and I'll see

2779
02:20:06,000 --> 02:20:09,889
everyone on the Internet take it easy

2780
02:20:07,648 --> 02:20:09,889
everybody

