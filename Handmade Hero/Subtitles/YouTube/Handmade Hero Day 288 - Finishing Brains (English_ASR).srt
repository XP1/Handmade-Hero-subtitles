1
00:00:02,330 --> 00:00:06,179
hello everyone and welcome to handmade

2
00:00:04,769 --> 00:00:10,888
Hero the show where we code a complete

3
00:00:06,179 --> 00:00:12,570
game live on stream we are on Friday we

4
00:00:10,888 --> 00:00:13,829
actually did some stuff to the enemy

5
00:00:12,570 --> 00:00:16,500
system that we didn't really get a

6
00:00:13,830 --> 00:00:19,410
chance to finish we implemented this new

7
00:00:16,500 --> 00:00:21,809
system that I wanted to use or wanted to

8
00:00:19,410 --> 00:00:24,359
try out as far as how we would create

9
00:00:21,809 --> 00:00:28,018
control code for entities that were more

10
00:00:24,359 --> 00:00:30,779
complicated than just a simple single

11
00:00:28,018 --> 00:00:37,558
unit that moves around and so what I

12
00:00:30,778 --> 00:00:38,850
wanted to do was finish that up today or

13
00:00:37,558 --> 00:00:40,829
I shouldn't say finish it up but at

14
00:00:38,850 --> 00:00:42,239
least get it to the point where I could

15
00:00:40,829 --> 00:00:43,739
actually test the thing I wanted to test

16
00:00:42,238 --> 00:00:47,849
because we implemented the basics but we

17
00:00:43,738 --> 00:00:50,640
didn't actually go and finish the actual

18
00:00:47,850 --> 00:00:54,359
system so let's take a look at that

19
00:00:50,640 --> 00:00:56,308
today as I just flashed as de 288 Sol de

20
00:00:54,359 --> 00:00:57,359
287 source code is a source code that

21
00:00:56,308 --> 00:00:58,679
you're going to want to start with if

22
00:00:57,359 --> 00:01:01,649
you're trying to follow along with the

23
00:00:58,679 --> 00:01:01,948
series at home all right so let's load

24
00:01:01,649 --> 00:01:04,799
up

25
00:01:01,948 --> 00:01:07,769
handmade hero here and if I remember

26
00:01:04,799 --> 00:01:10,409
correctly we left it compiling but we

27
00:01:07,769 --> 00:01:11,099
hadn't yet actually ported over the full

28
00:01:10,409 --> 00:01:13,530
feature set

29
00:01:11,099 --> 00:01:15,629
so it's compiling but only nom it's like

30
00:01:13,530 --> 00:01:18,299
just nominally like compiling it's not

31
00:01:15,629 --> 00:01:20,728
actually doing anything so for example I

32
00:01:18,299 --> 00:01:22,560
am unable to control the hero right so

33
00:01:20,728 --> 00:01:24,420
we're still booting and all the entities

34
00:01:22,560 --> 00:01:26,790
show up where they should show up and

35
00:01:24,420 --> 00:01:28,950
that's all fine but the controllers

36
00:01:26,790 --> 00:01:30,659
aren't actually executing yet and if you

37
00:01:28,950 --> 00:01:34,109
remember why that is it's because we

38
00:01:30,659 --> 00:01:35,549
haven't actually gone excuse me let me

39
00:01:34,109 --> 00:01:37,920
load this up here we haven't actually

40
00:01:35,549 --> 00:01:40,700
gone and implemented any of that brain

41
00:01:37,920 --> 00:01:44,280
code we just sort of put it in place and

42
00:01:40,700 --> 00:01:47,430
created the entities with stuff in their

43
00:01:44,280 --> 00:01:49,409
brain type slot and ID but we didn't

44
00:01:47,430 --> 00:01:51,390
actually implement the hash table that

45
00:01:49,409 --> 00:01:53,729
loads them in we just kind of left it

46
00:01:51,390 --> 00:01:57,060
there so right now there's never going

47
00:01:53,728 --> 00:01:59,789
to be an actual brain triggering when it

48
00:01:57,060 --> 00:02:03,030
goes to loop through the array of brains

49
00:01:59,790 --> 00:02:05,070
sounds like something a zombie wrote to

50
00:02:03,030 --> 00:02:06,840
say the least so anyway if I come in

51
00:02:05,069 --> 00:02:10,139
here and look you can see that we

52
00:02:06,840 --> 00:02:13,709
created the notion of a brain hash right

53
00:02:10,139 --> 00:02:16,589
there's a brain hash right here

54
00:02:13,709 --> 00:02:19,289
and we also have this concept of max

55
00:02:16,590 --> 00:02:21,658
brain count and brain there right and so

56
00:02:19,289 --> 00:02:24,090
we have the the trappings of a thing

57
00:02:21,658 --> 00:02:25,889
that stores and executes these brains we

58
00:02:24,090 --> 00:02:27,688
just never actually made any of the

59
00:02:25,889 --> 00:02:30,658
actual brains and so that's what I'm

60
00:02:27,688 --> 00:02:32,878
gonna go ahead and do and sort of make

61
00:02:30,658 --> 00:02:35,848
that start to happen so let's take a

62
00:02:32,878 --> 00:02:39,030
look here in let me see let me take a

63
00:02:35,848 --> 00:02:42,479
look at stem region sorry I just want to

64
00:02:39,030 --> 00:02:46,739
adjust my chair there we go so if I take

65
00:02:42,479 --> 00:02:48,388
a look in tsim region there's the part

66
00:02:46,739 --> 00:02:51,480
where we sort of push on to the entities

67
00:02:48,389 --> 00:02:52,950
and that's here an identity right you

68
00:02:51,479 --> 00:02:56,780
can see that we're gonna need

69
00:02:52,949 --> 00:02:59,488
essentially the same thing for ADD brain

70
00:02:56,780 --> 00:03:03,750
right and what we want to do here is we

71
00:02:59,489 --> 00:03:06,450
want to I guess so I'm curious here it

72
00:03:03,750 --> 00:03:09,180
looks like our rule when we did identity

73
00:03:06,449 --> 00:03:11,789
when we get this entry is we assume that

74
00:03:09,180 --> 00:03:13,530
if someone's calling a brain that that

75
00:03:11,789 --> 00:03:15,718
means they've already tested the hash

76
00:03:13,530 --> 00:03:18,120
table and they didn't find anything in

77
00:03:15,718 --> 00:03:19,560
it now that's a little bit odd to me to

78
00:03:18,120 --> 00:03:21,030
be completely honest I'm not sure

79
00:03:19,560 --> 00:03:23,430
because we're already doing this hash

80
00:03:21,030 --> 00:03:24,870
look up here it seems to me that we

81
00:03:23,430 --> 00:03:27,359
would want to check to make sure we

82
00:03:24,870 --> 00:03:29,519
hadn't already added it or a rather that

83
00:03:27,359 --> 00:03:31,590
we would have done a lookup already but

84
00:03:29,519 --> 00:03:33,329
I guess the nature of it is I guess the

85
00:03:31,590 --> 00:03:35,128
nature is that we don't because we know

86
00:03:33,329 --> 00:03:36,750
that we're loading them so I feel like a

87
00:03:35,128 --> 00:03:41,340
brain is gonna be a little bit different

88
00:03:36,750 --> 00:03:44,310
I feel like a brain might be like yet or

89
00:03:41,340 --> 00:03:45,840
a brain in the sense that I feel like

90
00:03:44,310 --> 00:03:48,090
this is one where you're going to

91
00:03:45,840 --> 00:03:49,408
constantly try to add the brain multiple

92
00:03:48,090 --> 00:03:51,120
times the reason I say that is because

93
00:03:49,408 --> 00:03:53,789
unlike the entities which are packed

94
00:03:51,120 --> 00:03:55,949
uniquely into some place in the world

95
00:03:53,789 --> 00:03:57,418
brains are created spontaneously when

96
00:03:55,949 --> 00:03:59,430
patterns of entities are seen in the

97
00:03:57,419 --> 00:04:01,139
world and that means that when we see an

98
00:03:59,430 --> 00:04:03,120
entity with a particular brain type in

99
00:04:01,139 --> 00:04:05,400
an ID we're gonna be trying to create

100
00:04:03,120 --> 00:04:07,079
that but there may already be that brain

101
00:04:05,400 --> 00:04:10,408
in our simulation and we're just trying

102
00:04:07,079 --> 00:04:12,989
to attach an entity to it right and so

103
00:04:10,408 --> 00:04:15,060
that's the thing that I think

104
00:04:12,989 --> 00:04:17,098
differentiates these two and it's what I

105
00:04:15,060 --> 00:04:19,530
think means that we will want to make it

106
00:04:17,098 --> 00:04:22,408
so that this is a single function that

107
00:04:19,529 --> 00:04:24,418
either creates or returns the same brain

108
00:04:22,408 --> 00:04:26,158
and we don't really need it to even do

109
00:04:24,418 --> 00:04:26,579
the return probably we'll probably won't

110
00:04:26,158 --> 00:04:27,610
use it

111
00:04:26,579 --> 00:04:29,468
I'll do it any

112
00:04:27,610 --> 00:04:31,538
way here but really what we're saying is

113
00:04:29,468 --> 00:04:33,848
just hey we might not always add one we

114
00:04:31,538 --> 00:04:36,610
may just take one that we already had in

115
00:04:33,848 --> 00:04:38,649
return it now I don't actually know much

116
00:04:36,610 --> 00:04:39,968
about the world mode situation here like

117
00:04:38,649 --> 00:04:41,438
for example I don't know why this is

118
00:04:39,968 --> 00:04:42,908
taking a world mode it's really only a

119
00:04:41,439 --> 00:04:44,349
sim region that it needs

120
00:04:42,908 --> 00:04:45,519
maybe there's something specific going

121
00:04:44,348 --> 00:04:46,750
on there but I'm gonna remove that from

122
00:04:45,519 --> 00:04:48,430
here for now because I don't actually

123
00:04:46,750 --> 00:04:49,990
know what it's doing there and I don't

124
00:04:48,430 --> 00:04:51,340
like having parameters lying around but

125
00:04:49,990 --> 00:04:52,960
I don't know if they're actually being

126
00:04:51,339 --> 00:04:54,399
used so I'm gonna keep it out of there

127
00:04:52,959 --> 00:04:57,668
for now we can always add it back in if

128
00:04:54,399 --> 00:04:58,989
we need it so that's fine so what I want

129
00:04:57,668 --> 00:05:02,709
to do here is say okay there's a sim

130
00:04:58,990 --> 00:05:05,288
region and what I want to do is I want

131
00:05:02,709 --> 00:05:06,399
to be able to create a brain and you

132
00:05:05,288 --> 00:05:07,750
know what we are gonna need this because

133
00:05:06,399 --> 00:05:08,978
we're gonna have to insert entities into

134
00:05:07,750 --> 00:05:10,449
it so we are gonna need to return it I

135
00:05:08,978 --> 00:05:12,459
take it back we actually will use that

136
00:05:10,449 --> 00:05:14,259
return I think almost right away now I

137
00:05:12,459 --> 00:05:15,519
just wasn't thinking it through quite

138
00:05:14,259 --> 00:05:17,408
all the way I think that'll actually

139
00:05:15,519 --> 00:05:19,418
happen so if we want to create a brain

140
00:05:17,408 --> 00:05:22,000
really all a brain is is an ID and a

141
00:05:19,418 --> 00:05:23,408
type and then a bunch of slots right and

142
00:05:22,000 --> 00:05:24,490
we haven't quite gotten to the slot part

143
00:05:23,408 --> 00:05:25,930
of things yet but we know that we're

144
00:05:24,490 --> 00:05:27,460
gonna need a brain ID and a brain type

145
00:05:25,930 --> 00:05:28,718
so at a minimum you're gonna have to

146
00:05:27,459 --> 00:05:30,430
pass those two things as you want to

147
00:05:28,718 --> 00:05:31,930
create a brain and then what we're gonna

148
00:05:30,430 --> 00:05:33,759
do here is we're gonna say alright we've

149
00:05:31,930 --> 00:05:36,848
got a result brain and we're going to

150
00:05:33,759 --> 00:05:38,680
return that result brain and assuming

151
00:05:36,848 --> 00:05:40,569
that we can't find that result brain

152
00:05:38,680 --> 00:05:43,060
then what we're gonna have to do is

153
00:05:40,569 --> 00:05:45,699
we're going to have to create a new one

154
00:05:43,060 --> 00:05:47,680
and we're gonna initialize its settings

155
00:05:45,699 --> 00:05:52,000
to the settings that we are given here

156
00:05:47,680 --> 00:05:53,650
like so so the first question is where

157
00:05:52,000 --> 00:05:54,968
is that brain coming from well the way

158
00:05:53,649 --> 00:05:57,250
that we're doing it here is we just push

159
00:05:54,968 --> 00:05:59,079
them onto this sort of stack right and

160
00:05:57,250 --> 00:06:00,699
we're gonna keep that for now that may

161
00:05:59,079 --> 00:06:02,258
change in the future if we want to make

162
00:06:00,699 --> 00:06:04,419
sure that we can go to as many as we

163
00:06:02,259 --> 00:06:06,490
want and grow dynamically we may change

164
00:06:04,418 --> 00:06:07,959
that for right now we certainly don't

165
00:06:06,490 --> 00:06:09,310
need to because we're treating entities

166
00:06:07,959 --> 00:06:11,198
this way we can treat brains this way as

167
00:06:09,310 --> 00:06:13,060
well and so we're just gonna leave it

168
00:06:11,199 --> 00:06:14,528
like that for now so here we'll just

169
00:06:13,060 --> 00:06:16,269
allocate a new brain off the stack and

170
00:06:14,528 --> 00:06:18,189
just so we know later on in the in the

171
00:06:16,269 --> 00:06:20,758
as we're sort of moving through this we

172
00:06:18,189 --> 00:06:23,379
want to make sure that we don't have

173
00:06:20,759 --> 00:06:24,430
oops sorry it's a max brain count there

174
00:06:23,379 --> 00:06:25,990
we want to make sure that we never

175
00:06:24,430 --> 00:06:27,848
overflow that because we want to know

176
00:06:25,990 --> 00:06:29,139
that again we may change it later so

177
00:06:27,848 --> 00:06:30,370
that it can't overflow it'll just grab

178
00:06:29,139 --> 00:06:31,960
more memory or something like this but

179
00:06:30,370 --> 00:06:33,519
for the moment we just want to make sure

180
00:06:31,959 --> 00:06:34,959
we don't hit that case and wonder why

181
00:06:33,519 --> 00:06:36,549
we're having a bug so that assertion is

182
00:06:34,959 --> 00:06:39,489
there to protect us from that during

183
00:06:36,550 --> 00:06:41,259
development so here we are getting a

184
00:06:39,490 --> 00:06:42,819
our brain and setting it and then

185
00:06:41,259 --> 00:06:45,580
returning it so the only thing we need

186
00:06:42,819 --> 00:06:48,910
to do now is use that hash table so we

187
00:06:45,579 --> 00:06:50,829
want to have a brain hash here and we

188
00:06:48,910 --> 00:06:53,560
want to sort of do that same get hashed

189
00:06:50,829 --> 00:06:55,478
by ID where we're gonna ask for a hash

190
00:06:53,560 --> 00:06:58,930
this is asking from a different hash

191
00:06:55,478 --> 00:07:01,149
table certainly than the other one

192
00:06:58,930 --> 00:07:03,910
but I guess in this case yeah we don't

193
00:07:01,149 --> 00:07:05,679
assert I suppose we just say that result

194
00:07:03,910 --> 00:07:08,229
equals whatever the hash pointer was and

195
00:07:05,680 --> 00:07:09,970
so in this case if we find that the

196
00:07:08,228 --> 00:07:11,620
result wasn't equal to anything then at

197
00:07:09,970 --> 00:07:12,970
the end we also want to make sure we set

198
00:07:11,620 --> 00:07:16,090
the hash pointer so the next person

199
00:07:12,970 --> 00:07:18,250
through will find it properly okay

200
00:07:16,089 --> 00:07:20,318
that's pretty much all we need the only

201
00:07:18,250 --> 00:07:22,209
problem now is we don't have a hash

202
00:07:20,319 --> 00:07:25,990
table for these particular guys that's

203
00:07:22,209 --> 00:07:28,689
no real big ID we saw a big idea Wow

204
00:07:25,990 --> 00:07:30,668
talking big problem really all we need

205
00:07:28,689 --> 00:07:32,019
here is another one of these and this

206
00:07:30,668 --> 00:07:34,240
one presumably will work roughly the

207
00:07:32,019 --> 00:07:36,310
same way we could almost use the same

208
00:07:34,240 --> 00:07:37,750
hash table for these things but or a

209
00:07:36,310 --> 00:07:39,430
same hash table code I don't know that

210
00:07:37,750 --> 00:07:40,478
it's worth trying to like make sort of a

211
00:07:39,430 --> 00:07:41,949
template eyes version of this or

212
00:07:40,478 --> 00:07:43,598
anything like that I tend not to super

213
00:07:41,949 --> 00:07:45,759
like things like that especially when

214
00:07:43,598 --> 00:07:47,949
the code is so straightforward and there

215
00:07:45,759 --> 00:07:48,939
isn't very much of it there because you

216
00:07:47,949 --> 00:07:50,710
never know when we're gonna want to

217
00:07:48,939 --> 00:07:56,620
specialize these things or do other

218
00:07:50,709 --> 00:08:03,339
things in that in that case so I feel

219
00:07:56,620 --> 00:08:05,168
like yeah brain hash pretty much the

220
00:08:03,339 --> 00:08:08,288
exact same code here really nothing

221
00:08:05,168 --> 00:08:12,038
particularly unusual I think we really

222
00:08:08,288 --> 00:08:13,750
much do exactly what we're doing and so

223
00:08:12,038 --> 00:08:15,759
I think it's pretty much just that I

224
00:08:13,750 --> 00:08:17,740
don't think there's really much else to

225
00:08:15,759 --> 00:08:20,199
it now

226
00:08:17,740 --> 00:08:21,879
let's see brain hash I think we've made

227
00:08:20,199 --> 00:08:23,228
the name of this thing be ID and we

228
00:08:21,879 --> 00:08:25,930
probably should make the name of the

229
00:08:23,228 --> 00:08:27,038
other one ID as well but we can always

230
00:08:25,930 --> 00:08:29,800
do that a little bit later when we're

231
00:08:27,038 --> 00:08:31,180
cleaning things up so let's see in this

232
00:08:29,800 --> 00:08:33,700
case we got a return a brain hash

233
00:08:31,180 --> 00:08:37,899
obviously not vanity hash that's fine

234
00:08:33,700 --> 00:08:42,490
and yeah we also have to change this to

235
00:08:37,899 --> 00:08:44,078
a brain - go when we do add entity we

236
00:08:42,490 --> 00:08:45,399
remove the world mood parameter for it

237
00:08:44,078 --> 00:08:47,259
just well as some cleanup well of us

238
00:08:45,399 --> 00:08:48,458
moving through there so there we go

239
00:08:47,259 --> 00:08:50,049
we're good to go

240
00:08:48,458 --> 00:08:52,629
what I want to do now is I want to say

241
00:08:50,049 --> 00:08:54,729
all right when we do add entity here

242
00:08:52,629 --> 00:08:56,950
what we want to do is every time we add

243
00:08:54,730 --> 00:08:58,060
an entity we're going to and this is the

244
00:08:56,950 --> 00:09:00,129
only place we do that at the moment

245
00:08:58,059 --> 00:09:02,019
right so this that add enemy call could

246
00:09:00,129 --> 00:09:03,549
actually be sort of streamlined in here

247
00:09:02,019 --> 00:09:05,169
if we want to I don't know what add

248
00:09:03,549 --> 00:09:06,639
entity raw is you know what I have no

249
00:09:05,169 --> 00:09:07,929
idea what that does I don't think it

250
00:09:06,639 --> 00:09:10,569
does anything so that should probably go

251
00:09:07,929 --> 00:09:12,099
away identity is actually code that that

252
00:09:10,570 --> 00:09:14,620
you never call unless you're doing an

253
00:09:12,100 --> 00:09:17,500
unpack and so actually really this could

254
00:09:14,620 --> 00:09:19,450
just be included directly in that unpack

255
00:09:17,500 --> 00:09:19,870
which might be actually a little bit

256
00:09:19,450 --> 00:09:21,790
better

257
00:09:19,870 --> 00:09:23,529
now that I think about it so you know it

258
00:09:21,789 --> 00:09:25,179
might be that this is really the the

259
00:09:23,529 --> 00:09:26,529
right way to do it is to have this all

260
00:09:25,179 --> 00:09:28,539
in line because I feel like this is just

261
00:09:26,529 --> 00:09:30,730
a giant the giant unpack function

262
00:09:28,539 --> 00:09:33,599
probably is gonna want to be something a

263
00:09:30,730 --> 00:09:36,279
little bit more direct like this right

264
00:09:33,600 --> 00:09:38,620
and so I think what I might do is say

265
00:09:36,279 --> 00:09:40,959
okay let's say that this is just dest

266
00:09:38,620 --> 00:09:43,060
right here and then we sort of do a

267
00:09:40,960 --> 00:09:45,790
thing where we check for the overlap and

268
00:09:43,059 --> 00:09:48,699
then when we come in here we do that oh

269
00:09:45,789 --> 00:09:54,669
wait no sorry that's that's not true its

270
00:09:48,700 --> 00:09:56,290
source okay we check that and then when

271
00:09:54,669 --> 00:09:57,909
we when we're done with that we can kind

272
00:09:56,289 --> 00:09:59,980
of come in and say oh okay we've got the

273
00:09:57,909 --> 00:10:03,610
the rest of stuff here we just do our

274
00:09:59,980 --> 00:10:06,220
addition right in line and that that

275
00:10:03,610 --> 00:10:07,990
seems like like a fairly fairly good

276
00:10:06,220 --> 00:10:10,629
idea to me so it's all you know we get

277
00:10:07,990 --> 00:10:13,450
rid of that stuff and make it a little

278
00:10:10,629 --> 00:10:14,439
bit more straightforward there okay let

279
00:10:13,450 --> 00:10:19,960
me just double check that that's all

280
00:10:14,440 --> 00:10:23,260
fine yeah all right so anyway here we

281
00:10:19,960 --> 00:10:24,970
are inside the unpack function which

282
00:10:23,259 --> 00:10:27,250
does all the sort of unpacking of the

283
00:10:24,970 --> 00:10:29,950
world into a simulated state and what I

284
00:10:27,250 --> 00:10:31,899
want to do in here is I want to whenever

285
00:10:29,950 --> 00:10:33,660
whenever we've added an entity right

286
00:10:31,899 --> 00:10:36,399
which is this sort of thing here

287
00:10:33,659 --> 00:10:39,100
whenever we've added an entity and we've

288
00:10:36,399 --> 00:10:41,199
we finished doing that assuming that the

289
00:10:39,100 --> 00:10:44,230
entity is updatable I think we would

290
00:10:41,200 --> 00:10:46,090
want it to have a brain controller now I

291
00:10:44,230 --> 00:10:47,500
guess even if it's not updatable we

292
00:10:46,090 --> 00:10:49,899
might want it so that the brain knows

293
00:10:47,500 --> 00:10:51,460
it's there and just not simulated well

294
00:10:49,899 --> 00:10:53,379
we haven't really done much with the

295
00:10:51,460 --> 00:10:54,550
updatable stuff that's gonna probably

296
00:10:53,379 --> 00:10:56,799
stuff it's got to change a little bit in

297
00:10:54,549 --> 00:10:58,449
the future to be a little different than

298
00:10:56,799 --> 00:11:01,779
it is right now but we'll sort of ignore

299
00:10:58,450 --> 00:11:04,030
that for now anyway point being in here

300
00:11:01,779 --> 00:11:05,549
what I want to do is say well if this

301
00:11:04,029 --> 00:11:07,470
destination

302
00:11:05,549 --> 00:11:09,359
you know we've got the certain notion of

303
00:11:07,470 --> 00:11:11,100
the brain type on the enemy and what I

304
00:11:09,360 --> 00:11:15,089
want to do is say if the entity's brain

305
00:11:11,100 --> 00:11:17,850
type is you know is something that is

306
00:11:15,089 --> 00:11:19,529
nonzero and I don't know I guess it's

307
00:11:17,850 --> 00:11:24,509
nap type I guess it was ID that we said

308
00:11:19,528 --> 00:11:27,689
if the brain ID is nonzero then I want

309
00:11:24,509 --> 00:11:29,278
to create a brain for it so I'm gonna do

310
00:11:27,690 --> 00:11:30,420
an ADD brain here and I guess what we

311
00:11:29,278 --> 00:11:33,809
call what did we call it get our add

312
00:11:30,419 --> 00:11:35,219
brain yeah so I'm gonna pass the sim

313
00:11:33,809 --> 00:11:38,429
region here and then I'm gonna pass my

314
00:11:35,220 --> 00:11:39,839
brain ID and my brain type and I don't

315
00:11:38,429 --> 00:11:41,129
remember which order we passed them in

316
00:11:39,839 --> 00:11:43,140
but I'm sure the compiler will tell me

317
00:11:41,129 --> 00:11:45,539
in a second so that was the order we

318
00:11:43,139 --> 00:11:46,860
passed them in so once I have a brain

319
00:11:45,539 --> 00:11:48,778
and I've got my brain idea in my brain

320
00:11:46,860 --> 00:11:50,399
type now the only thing I really need to

321
00:11:48,778 --> 00:11:52,289
do is I need to figure out how we

322
00:11:50,399 --> 00:11:54,179
actually store these things right now

323
00:11:52,289 --> 00:11:55,679
this is something that I said if you

324
00:11:54,179 --> 00:11:57,750
remember I alluded to I said we're gonna

325
00:11:55,679 --> 00:11:59,549
do some stuff here that's gonna be a

326
00:11:57,750 --> 00:12:02,669
little more complicated than what I do

327
00:11:59,549 --> 00:12:05,099
up front what I'm gonna do first just to

328
00:12:02,669 --> 00:12:06,659
get it working is I'm going to say that

329
00:12:05,100 --> 00:12:09,170
there is sort of just this collection of

330
00:12:06,659 --> 00:12:12,059
brain slots where is the same region

331
00:12:09,169 --> 00:12:13,828
here it is these are these are probably

332
00:12:12,059 --> 00:12:15,719
gonna move out into a different location

333
00:12:13,828 --> 00:12:19,229
in the future as well so I'm not but I'm

334
00:12:15,720 --> 00:12:21,240
at apply be a file looks like brain dot

335
00:12:19,230 --> 00:12:22,470
H or something right but for now I'm

336
00:12:21,240 --> 00:12:24,509
gonna put them in here so we basically

337
00:12:22,470 --> 00:12:26,459
have you know we have the entity and

338
00:12:24,509 --> 00:12:27,838
then we've got the brain as well so

339
00:12:26,458 --> 00:12:30,599
there's the brain and what's gonna

340
00:12:27,839 --> 00:12:32,430
happen here is inside the brain there's

341
00:12:30,600 --> 00:12:35,399
gonna be something that looks like this

342
00:12:32,429 --> 00:12:39,449
which is like you know members or

343
00:12:35,399 --> 00:12:40,708
something or parts to be honest I really

344
00:12:39,450 --> 00:12:42,899
don't know what this is gonna be called

345
00:12:40,708 --> 00:12:44,909
but then there's gonna be some number in

346
00:12:42,899 --> 00:12:46,350
here right that's like the maximum brain

347
00:12:44,909 --> 00:12:49,350
parts and I don't know how many there's

348
00:12:46,350 --> 00:12:51,209
gonna be this is probably not exactly

349
00:12:49,350 --> 00:12:54,028
how it's going to go right it's not

350
00:12:51,208 --> 00:12:55,139
gonna look exactly like that but it's

351
00:12:54,028 --> 00:12:58,948
gonna look something like that

352
00:12:55,139 --> 00:13:04,679
and probably honestly what we'll end up

353
00:12:58,948 --> 00:13:06,778
doing is something like this where we

354
00:13:04,679 --> 00:13:08,370
sort of have like okay there's a union

355
00:13:06,778 --> 00:13:09,838
that's all these entity pointers if you

356
00:13:08,370 --> 00:13:12,000
just want to know what the random

357
00:13:09,839 --> 00:13:15,060
pointer is inside it but then there's

358
00:13:12,000 --> 00:13:17,309
also you know something like this where

359
00:13:15,059 --> 00:13:18,899
you know we have if it's a hero brain

360
00:13:17,309 --> 00:13:21,448
then it's got you know

361
00:13:18,899 --> 00:13:25,649
any star ahead and any star body or

362
00:13:21,448 --> 00:13:27,479
something like this right so you know

363
00:13:25,649 --> 00:13:28,740
that's the sort of thing that will

364
00:13:27,480 --> 00:13:30,300
probably end up seeing I don't know

365
00:13:28,740 --> 00:13:31,619
exactly how we're gonna do it but it'll

366
00:13:30,299 --> 00:13:37,558
be something that looks a little bit

367
00:13:31,619 --> 00:13:39,720
like that and so yeah that will happen

368
00:13:37,558 --> 00:13:42,719
we probably and to be completely honest

369
00:13:39,720 --> 00:13:46,230
we might even do something like this you

370
00:13:42,720 --> 00:13:48,269
know Kuro or bring your parts or

371
00:13:46,230 --> 00:13:52,678
something like that where we do entity

372
00:13:48,269 --> 00:13:54,209
head and entity body we might even do

373
00:13:52,678 --> 00:13:58,649
something like that where we just say

374
00:13:54,208 --> 00:14:08,549
like okay you know if you're a hero we

375
00:13:58,649 --> 00:14:10,589
just do something like this so now we

376
00:14:08,549 --> 00:14:12,599
can ask them in either as named things

377
00:14:10,589 --> 00:14:15,779
if we're doing a particular brain or is

378
00:14:12,600 --> 00:14:17,519
just a generic list of things if we're

379
00:14:15,778 --> 00:14:19,499
not right

380
00:14:17,519 --> 00:14:22,499
and so it'll be something like this that

381
00:14:19,499 --> 00:14:25,139
I don't know exactly what one we're

382
00:14:22,499 --> 00:14:27,300
going to do right so I you know that'll

383
00:14:25,139 --> 00:14:29,579
that'll sort of shake itself out a

384
00:14:27,299 --> 00:14:33,229
little bit further on but anyway point

385
00:14:29,578 --> 00:14:36,299
being here what would do inside the

386
00:14:33,230 --> 00:14:38,039
inside this situation and these are

387
00:14:36,299 --> 00:14:41,878
going to get more complicated later if

388
00:14:38,039 --> 00:14:44,099
you can have more of these right

389
00:14:41,879 --> 00:14:47,149
but what we're gonna do here is say

390
00:14:44,100 --> 00:14:47,149
alright the brain

391
00:14:47,448 --> 00:14:53,338
everybody has their sort of slot you can

392
00:14:50,999 --> 00:14:55,050
remember we said in here we've got the

393
00:14:53,339 --> 00:15:00,300
brain type and we've got the brain slot

394
00:14:55,049 --> 00:15:02,008
right so the brain slot has a value and

395
00:15:00,299 --> 00:15:07,139
that tells us where we go in here now I

396
00:15:02,009 --> 00:15:08,759
can assert that it fits so that we don't

397
00:15:07,139 --> 00:15:12,169
have any kind of weirdness going on so I

398
00:15:08,759 --> 00:15:16,438
figure like okay yeah make sure that

399
00:15:12,169 --> 00:15:19,368
that it fits but assuming it fits the

400
00:15:16,438 --> 00:15:22,110
destination entity goes into that right

401
00:15:19,369 --> 00:15:27,670
so now we actually are building for

402
00:15:22,110 --> 00:15:29,500
realz these controllers and yeah and

403
00:15:27,669 --> 00:15:31,569
that's that's just how that goes Am I is

404
00:15:29,500 --> 00:15:37,899
it index is it actually I think it might

405
00:15:31,570 --> 00:15:40,600
be index see yeah so now we should

406
00:15:37,899 --> 00:15:44,470
actually be building brains but we're

407
00:15:40,600 --> 00:15:45,940
not actually oh well you know what else

408
00:15:44,470 --> 00:15:47,710
we got to do we have to actually

409
00:15:45,940 --> 00:15:50,530
allocate some so the other thing we need

410
00:15:47,710 --> 00:15:52,720
to do is when we create a sim region at

411
00:15:50,529 --> 00:15:55,209
the moment I think we don't have a max

412
00:15:52,720 --> 00:15:56,830
brain count happening here so and

413
00:15:55,210 --> 00:15:59,860
actually you know what what's

414
00:15:56,830 --> 00:16:01,570
interesting is yeah okay so so yeah we

415
00:15:59,860 --> 00:16:04,659
would just want to in cure say how many

416
00:16:01,570 --> 00:16:06,610
brains can you have and I don't know how

417
00:16:04,659 --> 00:16:10,509
many brains you can have right I have no

418
00:16:06,610 --> 00:16:11,379
idea what that number is but and I'm

419
00:16:10,509 --> 00:16:13,149
just making it up

420
00:16:11,379 --> 00:16:14,289
certainly we would want to we want to

421
00:16:13,149 --> 00:16:15,909
actually do some work here to figure

422
00:16:14,289 --> 00:16:18,129
that out in the future once we actually

423
00:16:15,909 --> 00:16:19,719
have like the whole game you know sort

424
00:16:18,129 --> 00:16:22,120
of running will we'd come back and

425
00:16:19,720 --> 00:16:24,040
figure this sort of thing out but for

426
00:16:22,120 --> 00:16:26,769
now we just need some for testing

427
00:16:24,039 --> 00:16:30,159
purposes oops and so now we've got them

428
00:16:26,769 --> 00:16:31,990
now we haven't actually done anything

429
00:16:30,159 --> 00:16:33,339
with these brains yet so in theory

430
00:16:31,990 --> 00:16:35,409
nothing should happen and as you can see

431
00:16:33,340 --> 00:16:37,420
nothing does happen but we are now at

432
00:16:35,409 --> 00:16:38,829
least creating them in theory so for

433
00:16:37,419 --> 00:16:40,870
example the hero should have a brain

434
00:16:38,830 --> 00:16:42,370
created what that means is that if we

435
00:16:40,870 --> 00:16:45,009
pop back to world mode and take a look

436
00:16:42,370 --> 00:16:49,929
at where that sort of brain situation

437
00:16:45,009 --> 00:16:52,259
happened here in brain hero you can see

438
00:16:49,929 --> 00:16:56,049
that we never actually fill these in

439
00:16:52,259 --> 00:17:00,580
right and so what we'd want to do is is

440
00:16:56,049 --> 00:17:02,769
put these grab them out of the the hero

441
00:17:00,580 --> 00:17:03,910
right we want to say okay I be sorry

442
00:17:02,769 --> 00:17:08,170
grab them out of the brain so you'd want

443
00:17:03,909 --> 00:17:10,329
to say the brain Kiro dot head is is

444
00:17:08,170 --> 00:17:12,640
what we're looking for there and here

445
00:17:10,329 --> 00:17:14,769
dot body is what we're looking for for

446
00:17:12,640 --> 00:17:17,020
the body exactly what you would expect

447
00:17:14,769 --> 00:17:19,569
and then when I go ahead and run that

448
00:17:17,019 --> 00:17:20,980
now in theory we should actually have

449
00:17:19,569 --> 00:17:22,960
and you can see we're starting to get

450
00:17:20,980 --> 00:17:24,279
that information right you can see that

451
00:17:22,960 --> 00:17:27,579
we're actually standing on this guy now

452
00:17:24,279 --> 00:17:29,500
so that code is actually running because

453
00:17:27,579 --> 00:17:32,369
I don't think that runs elsewhere could

454
00:17:29,500 --> 00:17:35,230
be right about that though all right so

455
00:17:32,369 --> 00:17:36,709
now we have to actually figure out I

456
00:17:35,230 --> 00:17:38,120
don't know

457
00:17:36,710 --> 00:17:39,350
in fact let me see are we actually

458
00:17:38,119 --> 00:17:42,798
running this code we might actually be

459
00:17:39,349 --> 00:17:45,079
running to it we got to verify that yeah

460
00:17:42,798 --> 00:17:46,490
so we are actually running this code and

461
00:17:45,079 --> 00:17:50,000
you can kind of see that because I can

462
00:17:46,490 --> 00:17:51,829
span the world with these guys right and

463
00:17:50,000 --> 00:17:53,630
then I remember that code that just

464
00:17:51,829 --> 00:17:58,609
looks for the closest unoccupied point

465
00:17:53,630 --> 00:18:00,860
to us and sticks people on it we all

466
00:17:58,609 --> 00:18:03,019
right don't ask me why I did that don't

467
00:18:00,859 --> 00:18:05,808
know also you know he was noticing that

468
00:18:03,019 --> 00:18:08,899
we never deleted identity so I'm gonna

469
00:18:05,808 --> 00:18:10,428
go ahead and delete that goodbye all

470
00:18:08,898 --> 00:18:12,259
right so we've got the brains working

471
00:18:10,429 --> 00:18:14,659
now but we've got to actually make sure

472
00:18:12,259 --> 00:18:17,509
they really actually do what they need

473
00:18:14,659 --> 00:18:18,889
to do and if I remember correctly part

474
00:18:17,509 --> 00:18:21,589
of the problem there was we sort of had

475
00:18:18,888 --> 00:18:24,259
this old janky way from way back when

476
00:18:21,589 --> 00:18:26,359
that we were using to move people which

477
00:18:24,259 --> 00:18:29,960
is instead of actually calling or

478
00:18:26,359 --> 00:18:32,808
putting in a move request into the

479
00:18:29,960 --> 00:18:36,169
entity itself we actually had that move

480
00:18:32,808 --> 00:18:39,048
request sort of cascade through I don't

481
00:18:36,169 --> 00:18:41,720
know if you remember this but basically

482
00:18:39,048 --> 00:18:44,778
what was happening there is inside you

483
00:18:41,720 --> 00:18:46,429
know down at the end can't remember

484
00:18:44,778 --> 00:18:48,619
where we actually were doing this it's

485
00:18:46,429 --> 00:18:49,880
like yeah down at the end you know we'd

486
00:18:48,619 --> 00:18:51,349
have this thing you know if this thing

487
00:18:49,880 --> 00:18:53,720
is movable then we would call move

488
00:18:51,349 --> 00:18:55,609
entity on it with you know with the with

489
00:18:53,720 --> 00:18:58,220
its acceleration value or whatever and

490
00:18:55,609 --> 00:19:01,548
so what I'd rather do here is I'd rather

491
00:18:58,220 --> 00:19:02,990
make it so that that's actually because

492
00:19:01,548 --> 00:19:04,759
now we're gonna be doing packing and

493
00:19:02,990 --> 00:19:07,669
stuff what we want to do is be able to

494
00:19:04,759 --> 00:19:09,230
sort of put accelerations into objects

495
00:19:07,669 --> 00:19:12,409
and have them just do those

496
00:19:09,230 --> 00:19:14,028
accelerations later right so brains can

497
00:19:12,409 --> 00:19:16,278
assign a bunch of accelerations that

498
00:19:14,028 --> 00:19:18,769
it's trying to do to whatever parts it

499
00:19:16,278 --> 00:19:20,240
has and then later when the physics

500
00:19:18,769 --> 00:19:21,620
kicks in which is going to be sort of

501
00:19:20,240 --> 00:19:25,099
this separate wave which it already kind

502
00:19:21,619 --> 00:19:26,778
of is now that'll just happen right and

503
00:19:25,099 --> 00:19:32,269
that's how we want that to work ideally

504
00:19:26,778 --> 00:19:33,919
for a number of reasons anyway not the

505
00:19:32,269 --> 00:19:35,929
least of which being if we don't know

506
00:19:33,919 --> 00:19:37,190
the accelerations of objects when we go

507
00:19:35,929 --> 00:19:40,309
to do collision detection we have a

508
00:19:37,190 --> 00:19:44,528
problem I'll give you a real simple

509
00:19:40,308 --> 00:19:44,528
example right of this is

510
00:19:45,890 --> 00:19:50,910
and I know that I don't know if Sergio

511
00:19:49,140 --> 00:19:52,110
was watching I apologize I'm not updated

512
00:19:50,910 --> 00:19:53,250
Milton yet I know he's freaking out

513
00:19:52,109 --> 00:19:54,959
because he had a bug in the latest

514
00:19:53,250 --> 00:19:56,519
Milton and he doesn't want the

515
00:19:54,960 --> 00:19:58,350
blackboard for him made here to get lost

516
00:19:56,519 --> 00:19:59,730
I appreciate that but I'll be honest no

517
00:19:58,349 --> 00:20:01,919
one's ever gonna use these blackboard

518
00:19:59,730 --> 00:20:04,079
files anyway so after I'm off the stream

519
00:20:01,920 --> 00:20:06,450
I will try to remember to update Milton

520
00:20:04,079 --> 00:20:07,500
but either or not really a big deal

521
00:20:06,450 --> 00:20:15,680
anyway

522
00:20:07,500 --> 00:20:18,329
so what I wanted to say was so DDP right

523
00:20:15,680 --> 00:20:20,130
so what happens in our system right

524
00:20:18,329 --> 00:20:21,210
because we did a little basic physics

525
00:20:20,130 --> 00:20:22,950
thing back in the getting when we're

526
00:20:21,210 --> 00:20:25,170
sort of getting things sort of started

527
00:20:22,950 --> 00:20:26,789
but we never really did our final pass

528
00:20:25,170 --> 00:20:28,110
on it and that's okay because this is

529
00:20:26,789 --> 00:20:29,069
the whole point is we wanted to get to

530
00:20:28,109 --> 00:20:31,109
the point where we have things like

531
00:20:29,069 --> 00:20:32,579
brains doing stuff we wanted we want to

532
00:20:31,109 --> 00:20:34,139
keep incrementally building building the

533
00:20:32,579 --> 00:20:36,089
engine which is exactly what we did and

534
00:20:34,140 --> 00:20:37,410
so then you always are implementing the

535
00:20:36,089 --> 00:20:39,269
thing at the time when you actually have

536
00:20:37,410 --> 00:20:41,100
information so a lot of times that's not

537
00:20:39,269 --> 00:20:42,299
really a good idea to do a really full

538
00:20:41,099 --> 00:20:45,299
version of something until you know

539
00:20:42,299 --> 00:20:46,649
what's actually going on and so the case

540
00:20:45,299 --> 00:20:48,720
that I want to talk about here is you

541
00:20:46,650 --> 00:20:51,090
know if I was to move each entity in

542
00:20:48,720 --> 00:20:52,440
turn like we were doing before then we

543
00:20:51,089 --> 00:20:54,419
have this problem of let's suppose that

544
00:20:52,440 --> 00:20:56,039
both of these entities are moving in

545
00:20:54,420 --> 00:20:58,620
this direction or want to move in this

546
00:20:56,039 --> 00:21:00,389
direction right well because they're

547
00:20:58,619 --> 00:21:02,789
right next to each other if I happen to

548
00:21:00,390 --> 00:21:04,800
try and move this one first right it's

549
00:21:02,789 --> 00:21:06,960
gonna hit this entity and it can't go

550
00:21:04,799 --> 00:21:09,720
the full amount that was gonna go even

551
00:21:06,960 --> 00:21:11,430
though if we just looked and waited and

552
00:21:09,720 --> 00:21:13,079
saw that this entity was going to move

553
00:21:11,430 --> 00:21:15,120
as well if he was the second one to move

554
00:21:13,079 --> 00:21:16,679
we would then know that this guy could

555
00:21:15,119 --> 00:21:18,629
have moved to where who's gonna be right

556
00:21:16,680 --> 00:21:21,060
so you end up with all these fractious

557
00:21:18,630 --> 00:21:23,010
micro bumping things happening if you

558
00:21:21,059 --> 00:21:24,990
don't first assign all of your

559
00:21:23,009 --> 00:21:27,059
accelerations and then simulate the

560
00:21:24,990 --> 00:21:30,299
people together right because I would

561
00:21:27,059 --> 00:21:31,589
know where this guy was in this at this

562
00:21:30,299 --> 00:21:33,480
point in time if I knew what his

563
00:21:31,589 --> 00:21:35,609
acceleration was right so you want to

564
00:21:33,480 --> 00:21:38,339
try and do as much simultaneous movement

565
00:21:35,609 --> 00:21:40,949
as you can so you want your brains to go

566
00:21:38,339 --> 00:21:42,089
and assign all of their accelerations so

567
00:21:40,950 --> 00:21:43,920
that you know how everything's supposed

568
00:21:42,089 --> 00:21:45,419
to move so that you don't end up hitting

569
00:21:43,920 --> 00:21:48,830
each other in times when you shouldn't

570
00:21:45,420 --> 00:21:54,180
actually ever hit each other right so

571
00:21:48,829 --> 00:21:56,970
yeah so we come in here and we get

572
00:21:54,180 --> 00:21:59,890
something like the let's see where is it

573
00:21:56,970 --> 00:22:03,350
the hero controller

574
00:21:59,890 --> 00:22:04,880
here's brain here oh right and what I

575
00:22:03,349 --> 00:22:09,829
want to do here is I want to actually

576
00:22:04,880 --> 00:22:11,840
assign DDP to write to the actual hero

577
00:22:09,829 --> 00:22:13,929
you can see we've got some weird stuff

578
00:22:11,839 --> 00:22:16,399
happening we've got these like brains

579
00:22:13,930 --> 00:22:18,289
getting iterated and then we also have

580
00:22:16,400 --> 00:22:19,430
like the controller stuff here happening

581
00:22:18,289 --> 00:22:21,349
so the controller stuff happens down

582
00:22:19,430 --> 00:22:24,200
here we kind of want to integrate this

583
00:22:21,349 --> 00:22:25,969
stuff in I think right we want this

584
00:22:24,200 --> 00:22:27,440
controller index this controller stuff

585
00:22:25,970 --> 00:22:29,240
to be a little bit more sensible than it

586
00:22:27,440 --> 00:22:30,740
is right now right now it's kind of

587
00:22:29,240 --> 00:22:33,049
janky and so we're gonna try and

588
00:22:30,740 --> 00:22:36,799
probably fix that at the same time

589
00:22:33,049 --> 00:22:37,879
hopefully so let's start out by doing

590
00:22:36,799 --> 00:22:39,649
something a little bit more

591
00:22:37,880 --> 00:22:42,830
straightforward let's start by just

592
00:22:39,650 --> 00:22:44,420
drawing whatever that DDP actually is so

593
00:22:42,829 --> 00:22:47,779
I'm gonna say that from now on we're

594
00:22:44,420 --> 00:22:57,320
storing in the entity we're gonna store

595
00:22:47,779 --> 00:22:58,490
the DDP now note that that's not

596
00:22:57,319 --> 00:23:00,559
something that actually s get packed

597
00:22:58,490 --> 00:23:02,180
because acceleration doesn't persist

598
00:23:00,559 --> 00:23:04,759
from frame to frame only velocity and

599
00:23:02,180 --> 00:23:06,440
position do and so the DDP is strictly

600
00:23:04,759 --> 00:23:09,349
an accumulator so it's that we know

601
00:23:06,440 --> 00:23:11,570
who's actually trying to apply forces to

602
00:23:09,349 --> 00:23:13,250
these objects right that's all we're

603
00:23:11,569 --> 00:23:16,220
trying to figure out here so we never

604
00:23:13,250 --> 00:23:18,769
actually need the DDP to be stored in

605
00:23:16,220 --> 00:23:20,750
the permanent record it's just a

606
00:23:18,769 --> 00:23:23,059
temporary accumulator so that everyone

607
00:23:20,750 --> 00:23:27,230
who's trying to push on this thing can

608
00:23:23,059 --> 00:23:29,149
push on it right and then later we can

609
00:23:27,230 --> 00:23:31,190
figure out what that actually means now

610
00:23:29,150 --> 00:23:34,130
to be honest I guess I don't know that

611
00:23:31,190 --> 00:23:35,630
we really need to do that because

612
00:23:34,130 --> 00:23:37,490
there's a number of reasons why maybe we

613
00:23:35,630 --> 00:23:41,030
don't but I'm just gonna do it that way

614
00:23:37,490 --> 00:23:43,940
for now we could we could do it directly

615
00:23:41,029 --> 00:23:45,500
into the velocity but I'm just gonna do

616
00:23:43,940 --> 00:23:48,080
it this way for now because I feel like

617
00:23:45,500 --> 00:23:49,460
it's a little more straightforward so

618
00:23:48,079 --> 00:23:50,779
what I want to do is I want to sort of

619
00:23:49,460 --> 00:23:52,279
change this controller code around a

620
00:23:50,779 --> 00:23:53,809
little bit you can see here that we've

621
00:23:52,279 --> 00:23:56,389
got controller code that's good writing

622
00:23:53,809 --> 00:23:58,220
over these things and in this case it's

623
00:23:56,390 --> 00:23:59,930
taking a look to see if a controller

624
00:23:58,220 --> 00:24:02,360
doesn't have a player assigned if it

625
00:23:59,930 --> 00:24:03,230
does have a player assign it's gonna if

626
00:24:02,359 --> 00:24:04,129
it doesn't have player a sign and they

627
00:24:03,230 --> 00:24:05,539
push the start button it's going to

628
00:24:04,130 --> 00:24:07,550
create a new player all right we want to

629
00:24:05,539 --> 00:24:10,420
keep that code that code makes a lot of

630
00:24:07,549 --> 00:24:12,710
sense we do want that to happen right so

631
00:24:10,420 --> 00:24:17,960
we're gonna make this piece of code

632
00:24:12,710 --> 00:24:22,808
here no Casey this is like look to see

633
00:24:17,960 --> 00:24:24,769
if any players are trying to join

634
00:24:22,808 --> 00:24:26,148
because that's what this code does it

635
00:24:24,769 --> 00:24:29,658
just looks for any controllers that are

636
00:24:26,148 --> 00:24:32,000
trying to hit start right so that's all

637
00:24:29,659 --> 00:24:36,980
fine then the next thing I want to do is

638
00:24:32,000 --> 00:24:39,319
like you know run all brains and so when

639
00:24:36,980 --> 00:24:40,819
we're running the brains what I want to

640
00:24:39,319 --> 00:24:41,960
do is figure out a way and I don't think

641
00:24:40,819 --> 00:24:44,089
this is going to be particularly hard

642
00:24:41,960 --> 00:24:45,890
what I want to do here is figure out a

643
00:24:44,089 --> 00:24:47,839
way to make it so that instead of having

644
00:24:45,890 --> 00:24:49,220
to do this weird like looping over the

645
00:24:47,839 --> 00:24:50,658
controller nonsense you remember we had

646
00:24:49,220 --> 00:24:52,370
this nonsense in here right where we

647
00:24:50,659 --> 00:24:53,870
loop over the controller is to see if

648
00:24:52,369 --> 00:24:56,658
any of the controllers pertain to our

649
00:24:53,869 --> 00:24:58,009
hero that's just dumb because we should

650
00:24:56,659 --> 00:24:59,149
be able to now that we have this solid

651
00:24:58,009 --> 00:25:01,158
concept of the brain which is

652
00:24:59,148 --> 00:25:02,538
controlling the entity it seems like we

653
00:25:01,159 --> 00:25:06,500
should be able to do something much more

654
00:25:02,538 --> 00:25:08,720
solid which is just go get whichever

655
00:25:06,500 --> 00:25:11,359
controller is the one that corresponds

656
00:25:08,720 --> 00:25:14,000
to this particular hero right doesn't

657
00:25:11,359 --> 00:25:16,490
seem particularly hard so I want to take

658
00:25:14,000 --> 00:25:20,269
that code out and I want to put that

659
00:25:16,490 --> 00:25:23,870
code in and I want to put it over here

660
00:25:20,269 --> 00:25:26,240
right so right where we're about to do

661
00:25:23,869 --> 00:25:28,398
that work like this

662
00:25:26,240 --> 00:25:31,519
we know we're always gonna have a

663
00:25:28,398 --> 00:25:33,558
controller if it's a hero because if it

664
00:25:31,519 --> 00:25:35,148
wasn't it probably wouldn't be I mean we

665
00:25:33,558 --> 00:25:37,460
could still double check to make sure

666
00:25:35,148 --> 00:25:39,229
that's true but if it wasn't that it

667
00:25:37,460 --> 00:25:42,259
wouldn't really be a hero what makes a

668
00:25:39,230 --> 00:25:45,288
hero a hero is the fact that it's got a

669
00:25:42,259 --> 00:25:46,940
connection to controller right and if we

670
00:25:45,288 --> 00:25:48,740
were going to have another brain that

671
00:25:46,940 --> 00:25:51,080
was similar to a hero but used its own

672
00:25:48,740 --> 00:25:53,599
control logic well we would make another

673
00:25:51,079 --> 00:25:55,398
brain type for that probably and then

674
00:25:53,599 --> 00:25:56,719
they'd share perhaps a bunch of code but

675
00:25:55,398 --> 00:25:58,189
that would be the primary difference

676
00:25:56,720 --> 00:26:01,210
between the two controller types one is

677
00:25:58,190 --> 00:26:04,360
from a controller and one is from on

678
00:26:01,210 --> 00:26:10,278
artificial intelligence of some kind

679
00:26:04,359 --> 00:26:13,219
okay so yeah if I go in here and now do

680
00:26:10,278 --> 00:26:14,778
a thing that that sort of gets that

681
00:26:13,220 --> 00:26:16,548
controllers could controller stuff

682
00:26:14,778 --> 00:26:19,269
happening then you can see what I want

683
00:26:16,548 --> 00:26:23,750
to do is if I'm caught if I'm calling

684
00:26:19,269 --> 00:26:24,980
this code where I get the the gaming

685
00:26:23,750 --> 00:26:25,940
controller from the controller index

686
00:26:24,980 --> 00:26:29,019
right

687
00:26:25,940 --> 00:26:31,220
all I need to get started is I just need

688
00:26:29,019 --> 00:26:33,589
some notion of what that controller

689
00:26:31,220 --> 00:26:36,139
index is right so I just need a way of

690
00:26:33,589 --> 00:26:39,138
having the controller index properly

691
00:26:36,138 --> 00:26:41,418
correspond in some way that's all I'm

692
00:26:39,138 --> 00:26:44,329
looking for here and once I have some

693
00:26:41,419 --> 00:26:46,460
way to get that controller then the rest

694
00:26:44,329 --> 00:26:49,099
of the stuff that I do can can all just

695
00:26:46,460 --> 00:26:52,429
work and similarly in this case I don't

696
00:26:49,099 --> 00:26:55,849
really have any circumstances right

697
00:26:52,429 --> 00:26:57,649
where I I don't really have any

698
00:26:55,849 --> 00:26:59,329
circumstances where I wouldn't have a

699
00:26:57,648 --> 00:27:00,678
con here anymore and like I said we can

700
00:26:59,329 --> 00:27:03,048
make like if we want to make the little

701
00:27:00,679 --> 00:27:04,879
hoppin zombie guy we can now make that

702
00:27:03,048 --> 00:27:06,980
guy by sharing code perhaps we'll share

703
00:27:04,878 --> 00:27:08,569
a bunch of this code but we wouldn't

704
00:27:06,980 --> 00:27:10,190
want to make it be the same brain type

705
00:27:08,569 --> 00:27:11,778
because I think we want this brain type

706
00:27:10,190 --> 00:27:14,330
to mean i get my control from a

707
00:27:11,778 --> 00:27:16,069
controller and then we want other brain

708
00:27:14,329 --> 00:27:17,808
types for things like zombie or whatever

709
00:27:16,069 --> 00:27:19,908
right and there's a bunch of more stuff

710
00:27:17,808 --> 00:27:22,878
we can do to that regard but you get the

711
00:27:19,909 --> 00:27:24,409
idea so that's how the controller stuff

712
00:27:22,878 --> 00:27:26,298
works and then this stuff doesn't really

713
00:27:24,409 --> 00:27:27,549
have to happen in this say that the test

714
00:27:26,298 --> 00:27:30,408
hero stuff doesn't have to happen

715
00:27:27,548 --> 00:27:36,408
instead what we can do is just directly

716
00:27:30,409 --> 00:27:38,899
use this code and because we don't have

717
00:27:36,409 --> 00:27:41,179
a real way to add one of those zombies

718
00:27:38,898 --> 00:27:45,859
anymore I'm gonna if throw this out for

719
00:27:41,179 --> 00:27:47,059
the moment right and maybe we'll go

720
00:27:45,859 --> 00:27:49,339
ahead and re-enable that and actually

721
00:27:47,058 --> 00:27:50,960
make a zombie brain that works the same

722
00:27:49,339 --> 00:27:53,168
as the hero brain as a test case which

723
00:27:50,960 --> 00:27:55,700
actually sounds like a great idea to me

724
00:27:53,169 --> 00:27:57,889
so all the rest of this stuff just works

725
00:27:55,700 --> 00:28:00,409
and there's really no modification that

726
00:27:57,888 --> 00:28:02,058
has to happen to it so presumably all

727
00:28:00,409 --> 00:28:03,649
that should happen now is we just don't

728
00:28:02,058 --> 00:28:04,668
know the controller index so the

729
00:28:03,648 --> 00:28:06,949
question is where do we get the

730
00:28:04,669 --> 00:28:09,830
controller index well I'm gonna be mr.

731
00:28:06,950 --> 00:28:11,990
sly pants sly pants II man and just say

732
00:28:09,829 --> 00:28:14,569
that well where we get the controller

733
00:28:11,990 --> 00:28:16,730
index should probably just be based off

734
00:28:14,569 --> 00:28:19,849
of the brain ID because we can just

735
00:28:16,730 --> 00:28:22,009
reserve a slot of brain IDs for all the

736
00:28:19,849 --> 00:28:24,199
controllers that we might have and then

737
00:28:22,009 --> 00:28:28,460
we know that the actual brain ID itself

738
00:28:24,200 --> 00:28:31,460
maps directly to which controller we're

739
00:28:28,460 --> 00:28:33,110
looking at right and we can sort of

740
00:28:31,460 --> 00:28:34,460
assert here I don't know what get

741
00:28:33,109 --> 00:28:35,928
controller actually does I'll be

742
00:28:34,460 --> 00:28:39,019
completely honest with you I don't

743
00:28:35,929 --> 00:28:40,970
remember if it checks so it just doesn't

744
00:28:39,019 --> 00:28:43,069
assertion yeah so alright so I don't

745
00:28:40,970 --> 00:28:46,308
have to reassert there it's gonna assert

746
00:28:43,069 --> 00:28:49,069
for me but the controller index can just

747
00:28:46,308 --> 00:28:51,528
be whatever the brain IDs value is and

748
00:28:49,069 --> 00:28:53,569
if zero is not a valid brain ID which

749
00:28:51,528 --> 00:28:56,359
I'm pretty sure it's not then they would

750
00:28:53,569 --> 00:28:58,099
just start 1 2 3 4 right so what that

751
00:28:56,359 --> 00:29:01,189
means is that our controllers are

752
00:28:58,099 --> 00:29:02,898
numbered from 0 I believe and so what we

753
00:29:01,190 --> 00:29:07,070
probably want to do is just subtract 1

754
00:29:02,898 --> 00:29:08,839
there to make right but to make that a

755
00:29:07,069 --> 00:29:10,759
little bit more festive and creative

756
00:29:08,839 --> 00:29:12,709
let's say that we actually have a

757
00:29:10,759 --> 00:29:16,159
numerator for it and we'll call it like

758
00:29:12,710 --> 00:29:18,829
brain reserved or reserved brain ID

759
00:29:16,159 --> 00:29:24,230
underscore first hero or something like

760
00:29:18,829 --> 00:29:26,928
this and then what I can do is say ok

761
00:29:24,230 --> 00:29:29,509
with those brain IDs we just know right

762
00:29:26,929 --> 00:29:33,048
off the bat right that we're going to

763
00:29:29,509 --> 00:29:35,960
require those slots for brains to be

764
00:29:33,048 --> 00:29:37,339
reserved so you know in here it will

765
00:29:35,960 --> 00:29:38,600
actually no I could do it for it in the

766
00:29:37,339 --> 00:29:39,168
entity as well where we're talking about

767
00:29:38,599 --> 00:29:42,278
brains

768
00:29:39,169 --> 00:29:43,460
so in here I could do something like

769
00:29:42,278 --> 00:29:47,538
enum

770
00:29:43,460 --> 00:29:49,730
reserved brain ID kind of a thing and in

771
00:29:47,538 --> 00:29:55,700
here there's like the first hero is

772
00:29:49,730 --> 00:29:58,940
reserved one and then you know there's

773
00:29:55,700 --> 00:30:02,590
reserved brain count or or something

774
00:29:58,940 --> 00:30:04,999
like that or I should say first fun

775
00:30:02,589 --> 00:30:06,079
first free ID or something like that

776
00:30:04,999 --> 00:30:08,360
right

777
00:30:06,079 --> 00:30:11,808
yeah something like that and so then in

778
00:30:08,359 --> 00:30:14,508
here I do reserved brain ID last hero

779
00:30:11,808 --> 00:30:18,158
and the last hero would just be you know

780
00:30:14,509 --> 00:30:21,319
the first here of plus however many

781
00:30:18,159 --> 00:30:24,139
controllers there are so in the platform

782
00:30:21,319 --> 00:30:26,329
code you can see that you know we want

783
00:30:24,138 --> 00:30:28,699
one per controller so it's gonna be the

784
00:30:26,329 --> 00:30:30,949
array count of however many of these are

785
00:30:28,700 --> 00:30:35,149
I'll make a pound to find for it cuz why

786
00:30:30,950 --> 00:30:36,350
not max controller account and that way

787
00:30:35,148 --> 00:30:38,719
it's a little clearer what's going on

788
00:30:36,349 --> 00:30:40,069
there but that way we can just say well

789
00:30:38,720 --> 00:30:41,269
we'll just reserve however many there

790
00:30:40,069 --> 00:30:45,139
are and then however many

791
00:30:41,269 --> 00:30:48,349
are we now know that that's the last one

792
00:30:45,140 --> 00:30:50,780
right now since we don't really have to

793
00:30:48,349 --> 00:30:52,609
reserve the very last that all of those

794
00:30:50,779 --> 00:30:55,569
because you know we've got first here oh

795
00:30:52,609 --> 00:30:58,339
it's zero based right so we don't need

796
00:30:55,569 --> 00:31:00,919
you know it would be the value of first

797
00:30:58,339 --> 00:31:02,509
free wants to be the one after the last

798
00:31:00,920 --> 00:31:05,060
one you'd use so I'm going to take back

799
00:31:02,509 --> 00:31:06,650
one there to make sure that we only

800
00:31:05,059 --> 00:31:08,029
reserve the ones we actually use now

801
00:31:06,650 --> 00:31:09,830
that there's any penalty for not doing

802
00:31:08,029 --> 00:31:12,619
it we've got certainly got plenty but

803
00:31:09,829 --> 00:31:16,220
you get the idea so that's what's going

804
00:31:12,619 --> 00:31:19,069
on there right and what I'm gonna do up

805
00:31:16,220 --> 00:31:21,860
here is the the reverse so when we add a

806
00:31:19,069 --> 00:31:25,250
player instead of it returning me the

807
00:31:21,859 --> 00:31:28,699
brain ID I actually want that brain ID

808
00:31:25,250 --> 00:31:33,099
to be something that I pass in so I'm

809
00:31:28,700 --> 00:31:36,620
gonna say here okay I've got brain ID

810
00:31:33,099 --> 00:31:39,589
for this guy and it's gonna be whatever

811
00:31:36,619 --> 00:31:42,049
the controller index was plus whatever

812
00:31:39,589 --> 00:31:44,119
that first hero is right so I now know

813
00:31:42,049 --> 00:31:47,029
that that's what my brain ID actually is

814
00:31:44,119 --> 00:31:49,039
and I'm gonna pass that in right so now

815
00:31:47,029 --> 00:31:52,160
in that add player code instead of that

816
00:31:49,039 --> 00:31:55,720
returning the brain ID it's not going to

817
00:31:52,160 --> 00:31:59,000
do that it's gonna take the brain ID in

818
00:31:55,720 --> 00:32:00,799
and it's not gonna be this add brain

819
00:31:59,000 --> 00:32:02,779
thing is never gonna happen in here

820
00:32:00,799 --> 00:32:05,690
because it's been you know it's sort of

821
00:32:02,779 --> 00:32:07,730
something that's only for when you're

822
00:32:05,690 --> 00:32:09,200
adding to the end of that free list so

823
00:32:07,730 --> 00:32:12,680
then what we need to do is when we

824
00:32:09,200 --> 00:32:15,380
initially create the brains themselves

825
00:32:12,680 --> 00:32:18,529
we need to make sure that we start out

826
00:32:15,380 --> 00:32:20,840
with the first free brain and we don't

827
00:32:18,529 --> 00:32:24,259
ever like actually use any that we

828
00:32:20,839 --> 00:32:25,939
haven't any that are reserved right so

829
00:32:24,259 --> 00:32:28,359
what we're gonna do there is say well

830
00:32:25,940 --> 00:32:31,009
okay we're we're getting the brains from

831
00:32:28,359 --> 00:32:32,240
it's kind of some weird things that end

832
00:32:31,009 --> 00:32:36,460
up being said when we're talking about

833
00:32:32,240 --> 00:32:36,460
this where we're getting the brains from

834
00:32:36,670 --> 00:32:43,670
inside our storage indexes here right is

835
00:32:41,690 --> 00:32:46,039
I guess this last use entity storage and

836
00:32:43,670 --> 00:32:48,920
I guess they're using the same ones for

837
00:32:46,039 --> 00:32:50,629
that so what I want to do is I guess I

838
00:32:48,920 --> 00:32:54,880
could just still even do it make sure

839
00:32:50,630 --> 00:32:57,130
that that starts after the first because

840
00:32:54,880 --> 00:32:58,810
reserved brain ID now we can split these

841
00:32:57,130 --> 00:33:00,940
into two arrays but at the moment we

842
00:32:58,809 --> 00:33:02,259
don't really care too much about that so

843
00:33:00,940 --> 00:33:04,000
I'm just going to make sure that no

844
00:33:02,259 --> 00:33:06,779
entities are in that range either we

845
00:33:04,000 --> 00:33:10,509
just have a range we start after right

846
00:33:06,779 --> 00:33:11,529
so now that should be fine and I think

847
00:33:10,509 --> 00:33:13,359
that's basically it

848
00:33:11,529 --> 00:33:14,950
right so now we should be actually

849
00:33:13,359 --> 00:33:17,379
creating one that goes with a particular

850
00:33:14,950 --> 00:33:19,690
controller in theory anyway

851
00:33:17,380 --> 00:33:21,130
now that doesn't help us that's just

852
00:33:19,690 --> 00:33:22,509
what we needed to do to make things

853
00:33:21,130 --> 00:33:24,550
cleaner in general but that doesn't help

854
00:33:22,509 --> 00:33:25,629
us as you can see oh well I guess it

855
00:33:24,549 --> 00:33:27,519
does I was gonna say doesn't help us

856
00:33:25,630 --> 00:33:29,020
with the DDP thing but it does help us

857
00:33:27,519 --> 00:33:30,670
see that we're actually now corrected to

858
00:33:29,019 --> 00:33:31,990
the connected to the correct hero right

859
00:33:30,670 --> 00:33:33,700
because I can change his facing

860
00:33:31,990 --> 00:33:35,829
direction since that's not something

861
00:33:33,700 --> 00:33:37,150
that relies on the acceleration but we

862
00:33:35,829 --> 00:33:38,859
still haven't put the acceleration back

863
00:33:37,150 --> 00:33:40,450
in and like I said in order to put the

864
00:33:38,859 --> 00:33:42,099
acceleration back in we just need to

865
00:33:40,450 --> 00:33:44,680
start treating that as sort of an

866
00:33:42,099 --> 00:33:46,449
accumulation right and so now when we

867
00:33:44,680 --> 00:33:49,390
have some of the things that were in

868
00:33:46,450 --> 00:33:51,130
that Kankuro we don't actually need to

869
00:33:49,390 --> 00:33:53,200
be in the conure so the DDP can is

870
00:33:51,130 --> 00:33:54,940
actually in the entity now does not need

871
00:33:53,200 --> 00:33:56,769
to be in the connected hero so now some

872
00:33:54,940 --> 00:33:58,690
of the things can come out of there

873
00:33:56,769 --> 00:34:01,509
which we're not really ever you know

874
00:33:58,690 --> 00:34:07,509
shouldn't actually be in there in the

875
00:34:01,509 --> 00:34:12,340
first place handmade H so let's see

876
00:34:07,509 --> 00:34:13,389
where that is controlled hero first of

877
00:34:12,340 --> 00:34:15,250
all we don't need the brain ideas

878
00:34:13,389 --> 00:34:18,489
because they're mapped implicitly we

879
00:34:15,250 --> 00:34:20,590
don't need DDP and the sword or DZ we

880
00:34:18,489 --> 00:34:22,359
really just need I don't even know if we

881
00:34:20,590 --> 00:34:25,110
need exited we might need exited and

882
00:34:22,360 --> 00:34:26,829
debug spawn I'm not totally sure we do

883
00:34:25,110 --> 00:34:28,930
you know what I don't think we need

884
00:34:26,829 --> 00:34:31,090
really anything but the recenter timer

885
00:34:28,929 --> 00:34:33,039
I'm pretty sure that we don't need

886
00:34:31,090 --> 00:34:36,610
anything but let the recenter timer but

887
00:34:33,039 --> 00:34:38,590
we'll find out in a second and we'll go

888
00:34:36,610 --> 00:34:40,150
from there so I'm pretty sure now you

889
00:34:38,590 --> 00:34:41,559
can see that this just cleaned up things

890
00:34:40,150 --> 00:34:43,030
a lot right because now everything's in

891
00:34:41,559 --> 00:34:44,469
the correct place we don't have this

892
00:34:43,030 --> 00:34:46,630
weird like storage thing going on that

893
00:34:44,469 --> 00:34:48,219
we don't really need to have that we

894
00:34:46,630 --> 00:34:50,079
didn't really want want to or need to

895
00:34:48,219 --> 00:34:51,639
have happen in the first place so we'll

896
00:34:50,079 --> 00:34:53,170
keep the sword in there

897
00:34:51,639 --> 00:34:54,489
we need to rename it cuz that's not what

898
00:34:53,170 --> 00:34:55,720
it means anymore but you know for now

899
00:34:54,489 --> 00:34:57,489
we're just as we're doing the code

900
00:34:55,719 --> 00:35:01,059
transformation that's fine you can see

901
00:34:57,489 --> 00:35:02,829
us initializing these things here these

902
00:35:01,059 --> 00:35:04,809
were getting initialized already so we

903
00:35:02,829 --> 00:35:07,059
can just make those to happen I don't

904
00:35:04,809 --> 00:35:08,590
know what exited and debug spawn really

905
00:35:07,059 --> 00:35:09,969
need to be but

906
00:35:08,590 --> 00:35:12,370
at this point we'll just clear them to

907
00:35:09,969 --> 00:35:14,169
zero when we come through here then all

908
00:35:12,369 --> 00:35:17,319
of the things where we had

909
00:35:14,170 --> 00:35:20,050
Kankuro DDP before we just want to have

910
00:35:17,320 --> 00:35:21,670
entity DDP and said right we're just

911
00:35:20,050 --> 00:35:23,500
gonna go ahead and and set those

912
00:35:21,670 --> 00:35:26,889
although you know to be honest I guess

913
00:35:23,500 --> 00:35:29,110
it might be more fun to just have DDP be

914
00:35:26,889 --> 00:35:32,789
something that we can create directly

915
00:35:29,110 --> 00:35:32,789
and then we'll set it later

916
00:35:33,300 --> 00:35:40,200
oops what do I want to do oh no this one

917
00:35:36,579 --> 00:35:43,269
I wanted to conjure up VDP with just DDP

918
00:35:40,199 --> 00:35:43,689
so I'm just gonna go ahead and what did

919
00:35:43,269 --> 00:35:47,170
I do

920
00:35:43,690 --> 00:35:51,099
I need to remember to make automatically

921
00:35:47,170 --> 00:35:56,860
repeat last replace I haven't done that

922
00:35:51,099 --> 00:35:59,769
in my I custom file yet I should all

923
00:35:56,860 --> 00:36:04,690
right so we're coming down here doing

924
00:35:59,769 --> 00:36:07,000
some stuff so yeah when we create these

925
00:36:04,690 --> 00:36:10,690
DDPs then what I want to do is finally

926
00:36:07,000 --> 00:36:15,309
set my entity DDP equal to whatever the

927
00:36:10,690 --> 00:36:17,860
one is that I got there right for the

928
00:36:15,309 --> 00:36:19,329
most part I think I don't really

929
00:36:17,860 --> 00:36:26,380
remember what the things are that we

930
00:36:19,329 --> 00:36:30,840
wanted to do I think that's true I think

931
00:36:26,380 --> 00:36:30,840
that's true do we do anything with that

932
00:36:33,869 --> 00:36:39,849
so I guess that's not even true it looks

933
00:36:37,480 --> 00:36:41,050
like it looks like we don't even want to

934
00:36:39,849 --> 00:36:44,309
assign that because it looks like we're

935
00:36:41,050 --> 00:36:48,280
manhandling it here to a large extent

936
00:36:44,309 --> 00:36:50,309
right it looks like we're just straight

937
00:36:48,280 --> 00:36:50,310
up

938
00:36:50,710 --> 00:37:03,010
we're just straight-up set in the

939
00:36:52,269 --> 00:37:06,880
velocity am i right huh I'm sort of

940
00:37:03,010 --> 00:37:11,890
confused right now be completely honest

941
00:37:06,880 --> 00:37:18,070
because I didn't I didn't realize that

942
00:37:11,889 --> 00:37:23,559
we just straight up set the velocity is

943
00:37:18,070 --> 00:37:26,080
that gosh huh

944
00:37:23,559 --> 00:37:30,190
but I mean seems relatively

945
00:37:26,079 --> 00:37:35,380
incontrovertible since like that's what

946
00:37:30,190 --> 00:37:37,539
we were doing all right well you know if

947
00:37:35,380 --> 00:37:38,829
that's the case then we just do that and

948
00:37:37,539 --> 00:37:40,989
off we go

949
00:37:38,829 --> 00:37:42,759
but that's not probably what we should

950
00:37:40,989 --> 00:37:45,039
be doing I mean probably what we should

951
00:37:42,760 --> 00:37:46,240
be doing is setting this in here so we

952
00:37:45,039 --> 00:37:47,829
got a bunch of clean up to do here

953
00:37:46,239 --> 00:37:49,209
because that's not what I even thought

954
00:37:47,829 --> 00:37:51,279
we were doing but I guess we just never

955
00:37:49,210 --> 00:37:54,699
really wrote that code for real which is

956
00:37:51,280 --> 00:37:56,560
fine Oh

957
00:37:54,699 --> 00:37:58,629
looks like I spoke too soon I guess we

958
00:37:56,559 --> 00:38:00,099
do need to sort we don't really actually

959
00:37:58,630 --> 00:38:02,440
need to store the brain idea but looks

960
00:38:00,099 --> 00:38:07,719
like we want to store something there so

961
00:38:02,440 --> 00:38:10,570
we know that it's assigned right so

962
00:38:07,719 --> 00:38:19,000
that's yeah I guess that's that does

963
00:38:10,570 --> 00:38:22,930
make some sense so yeah yeah let's take

964
00:38:19,000 --> 00:38:25,349
a look here so if I set that in handmade

965
00:38:22,929 --> 00:38:25,349
aged

966
00:38:29,489 --> 00:38:44,798
then when I do my ad player it just

967
00:38:37,088 --> 00:38:46,328
looks like this alright so this was some

968
00:38:44,798 --> 00:38:50,048
holdover stuff that we don't really want

969
00:38:46,329 --> 00:38:53,650
anymore I'm gonna get rid of it let's

970
00:38:50,048 --> 00:38:55,358
see our debug spawn is set to true there

971
00:38:53,650 --> 00:38:59,079
that's something that bull I guess deal

972
00:38:55,358 --> 00:39:01,630
with a little bit later let's see we've

973
00:38:59,079 --> 00:39:12,910
got our d sword con hero D sword is just

974
00:39:01,630 --> 00:39:14,170
gonna be D sword I know that was behind

975
00:39:12,909 --> 00:39:17,068
my head couldn't see what I did okay

976
00:39:14,170 --> 00:39:17,068
yeah that seems reasonable

977
00:39:17,760 --> 00:39:23,559
we need to process that exited code are

978
00:39:21,219 --> 00:39:24,759
we processing that down here when do we

979
00:39:23,559 --> 00:39:28,720
actually process yeah we do

980
00:39:24,760 --> 00:39:30,099
so if we exited we set that to false but

981
00:39:28,719 --> 00:39:31,389
we don't really do that we delete the

982
00:39:30,099 --> 00:39:33,068
entity and set the brain ID so that's

983
00:39:31,389 --> 00:39:35,400
what we would want to do anyway that's

984
00:39:33,068 --> 00:39:35,400
all good

985
00:39:35,730 --> 00:39:42,159
alright so our D Z Kanye rode easy I

986
00:39:39,699 --> 00:39:43,808
don't think we want jumping in there

987
00:39:42,159 --> 00:39:46,000
anymore so that's gone so I think now

988
00:39:43,809 --> 00:39:48,640
we're back to everything trimmed out and

989
00:39:46,000 --> 00:39:50,559
going through the brain so now we just

990
00:39:48,639 --> 00:39:54,969
have to actually get this guide back in

991
00:39:50,559 --> 00:39:56,920
motion and so setting the DP directly

992
00:39:54,969 --> 00:40:03,608
means all we have to do is call move

993
00:39:56,920 --> 00:40:05,259
entity on the hero but I'm not sure yeah

994
00:40:03,608 --> 00:40:08,949
I said that was I was kind of surprised

995
00:40:05,259 --> 00:40:10,150
at how that was was going anyway it

996
00:40:08,949 --> 00:40:12,009
doesn't matter but we're gonna have to

997
00:40:10,150 --> 00:40:14,950
to make the rest of this stuff go

998
00:40:12,009 --> 00:40:18,929
alright so let's see what we've got here

999
00:40:14,949 --> 00:40:18,929
there's the switch for entity type

1000
00:40:19,079 --> 00:40:24,119
most of the code happens in the hero

1001
00:40:21,570 --> 00:40:27,930
struck now so it looks like what's

1002
00:40:24,119 --> 00:40:36,900
happening here in the movement mode code

1003
00:40:27,929 --> 00:40:42,199
I think this stuff I mean just looking

1004
00:40:36,900 --> 00:40:42,200
at it this stuff really wants to be

1005
00:40:42,739 --> 00:40:47,789
probably more so this looks like this is

1006
00:40:46,559 --> 00:40:50,190
gonna have to be a slightly separate

1007
00:40:47,789 --> 00:40:52,619
stage of things right so the idea here

1008
00:40:50,190 --> 00:40:54,659
is we want to be able to share methods

1009
00:40:52,619 --> 00:40:56,579
of movement so we kind of have the like

1010
00:40:54,659 --> 00:40:57,779
concept that something's planted versus

1011
00:40:56,579 --> 00:41:01,650
the concept that something is hopping

1012
00:40:57,780 --> 00:41:04,740
around right and so what we'd like to do

1013
00:41:01,650 --> 00:41:11,869
here is we'd like to make this be a

1014
00:41:04,739 --> 00:41:20,159
little bit more a little bit more

1015
00:41:11,869 --> 00:41:22,109
separated from from the notion like this

1016
00:41:20,159 --> 00:41:24,149
bit doesn't really make sense in terms

1017
00:41:22,110 --> 00:41:26,190
of planted because this part right here

1018
00:41:24,150 --> 00:41:27,990
assumes that you've got a notion of

1019
00:41:26,190 --> 00:41:29,880
someone you're leaning towards which is

1020
00:41:27,989 --> 00:41:31,859
not true for general planted people

1021
00:41:29,880 --> 00:41:34,170
right so it feels like we want a little

1022
00:41:31,860 --> 00:41:36,180
more granularity here hopping looks

1023
00:41:34,170 --> 00:41:37,889
about correct right

1024
00:41:36,179 --> 00:41:39,059
because hopping you just says hey look

1025
00:41:37,889 --> 00:41:41,039
if I'm trying to hop from one place to

1026
00:41:39,059 --> 00:41:47,670
the other here you go right and it

1027
00:41:41,039 --> 00:41:49,800
doesn't really require any sort of you

1028
00:41:47,670 --> 00:41:51,930
know that doesn't really require any

1029
00:41:49,800 --> 00:41:54,720
sort of knowledge of other people or

1030
00:41:51,929 --> 00:41:56,250
what's going on so if entities in is a

1031
00:41:54,719 --> 00:41:58,679
hopping mode you can see that it just

1032
00:41:56,250 --> 00:42:03,360
sort of works and so it's really just

1033
00:41:58,679 --> 00:42:05,460
the the sort of the part inside planted

1034
00:42:03,360 --> 00:42:07,349
that's that's not okay and we can get

1035
00:42:05,460 --> 00:42:09,420
rid of that temporarily because planted

1036
00:42:07,349 --> 00:42:13,230
is not a particularly interests Tay

1037
00:42:09,420 --> 00:42:15,000
where you are right so that's really not

1038
00:42:13,230 --> 00:42:16,199
so bad but we're gonna have to sort of

1039
00:42:15,000 --> 00:42:17,460
take these one by one because there's

1040
00:42:16,199 --> 00:42:19,349
just a lot of code here and we're trying

1041
00:42:17,460 --> 00:42:24,470
to sort of sort these out a little more

1042
00:42:19,349 --> 00:42:34,029
cleanly what is the complaint here

1043
00:42:24,469 --> 00:42:34,029
there is a null entity ah I see

1044
00:42:38,989 --> 00:42:44,179
you see occupying an entity came from

1045
00:42:44,449 --> 00:42:52,559
inside get some space reversible I am

1046
00:42:49,168 --> 00:42:54,900
Not sure I'm not sure what's going on

1047
00:42:52,559 --> 00:43:02,729
here which entity are we updating right

1048
00:42:54,900 --> 00:43:04,588
now we're updating brain type brain Hiro

1049
00:43:02,728 --> 00:43:07,889
so we're updating a hero we're updating

1050
00:43:04,588 --> 00:43:10,498
the body of a hero right and it is in

1051
00:43:07,889 --> 00:43:15,048
the hopping mode it's trying to update

1052
00:43:10,498 --> 00:43:15,048
its came from but there is no came from

1053
00:43:15,588 --> 00:43:22,078
which I guess is the problem so how did

1054
00:43:20,248 --> 00:43:29,278
we get into hopping mode without it came

1055
00:43:22,079 --> 00:43:33,239
from it's a reasonable question let's

1056
00:43:29,278 --> 00:43:42,929
take a look so in order to get into

1057
00:43:33,239 --> 00:43:49,228
hopping mode we would need where is that

1058
00:43:42,929 --> 00:43:54,079
code here we go in order to getting the

1059
00:43:49,228 --> 00:43:56,548
hopping mode we need to get here right

1060
00:43:54,079 --> 00:43:58,559
and when we do that we have to set came

1061
00:43:56,548 --> 00:44:00,809
from and so you can see I guess when we

1062
00:43:58,559 --> 00:44:06,469
first start up I guess we're not

1063
00:44:00,809 --> 00:44:06,469
occupying anything yeah index 0

1064
00:44:09,039 --> 00:44:22,699
but we did set the pointer so at this

1065
00:44:14,869 --> 00:44:24,920
point both came from Oh No okay but we

1066
00:44:22,699 --> 00:44:27,289
set it in transactional occupy so okay

1067
00:44:24,920 --> 00:44:29,750
so came from in this case is you know

1068
00:44:27,289 --> 00:44:31,969
occupying I guess was originally set to

1069
00:44:29,750 --> 00:44:33,440
nothing which doesn't really make sense

1070
00:44:31,969 --> 00:44:35,480
it should have been sent to something

1071
00:44:33,440 --> 00:44:37,280
right because occupying is supposed to

1072
00:44:35,480 --> 00:44:39,050
be initialized at least I believe that

1073
00:44:37,280 --> 00:44:41,530
should be true so when we were on ad

1074
00:44:39,050 --> 00:44:43,580
player right we should have set

1075
00:44:41,530 --> 00:44:46,070
occupying equal of something and maybe

1076
00:44:43,579 --> 00:44:47,569
we never did but it seems like it should

1077
00:44:46,070 --> 00:44:49,370
be so I wanted to see what happened

1078
00:44:47,570 --> 00:44:51,950
there it could be that our packing code

1079
00:44:49,369 --> 00:44:54,829
is not right yet which because we didn't

1080
00:44:51,949 --> 00:44:56,750
quite do as much of that as we should so

1081
00:44:54,829 --> 00:45:00,019
you can see we set that there and then

1082
00:44:56,750 --> 00:45:03,230
when we call end entity it should be

1083
00:45:00,019 --> 00:45:08,179
packing the body in you know it should

1084
00:45:03,230 --> 00:45:11,389
be packing that properly so here we are

1085
00:45:08,179 --> 00:45:14,659
in the Packer and we're gonna pack

1086
00:45:11,389 --> 00:45:17,960
occupying and came from both of which

1087
00:45:14,659 --> 00:45:22,190
are set to something although I'll be

1088
00:45:17,960 --> 00:45:24,829
honest with you oh sorry no it came from

1089
00:45:22,190 --> 00:45:26,690
is not it's just occupying so when we go

1090
00:45:24,829 --> 00:45:30,889
to pack occupying let's see what happens

1091
00:45:26,690 --> 00:45:33,710
there so the ref pointer is gonna be

1092
00:45:30,889 --> 00:45:36,230
something right it's not deleted so we

1093
00:45:33,710 --> 00:45:39,500
set the ref index to something let's see

1094
00:45:36,230 --> 00:45:42,530
what our reference of being so it looks

1095
00:45:39,500 --> 00:45:44,809
like that packs properly to me right

1096
00:45:42,530 --> 00:45:47,120
that all looks good so I'm not sure what

1097
00:45:44,809 --> 00:45:51,079
the problem is there but I'm gonna go

1098
00:45:47,119 --> 00:45:52,869
ahead and and check I guess when we do

1099
00:45:51,079 --> 00:45:54,980
the unpack to see what happens

1100
00:45:52,869 --> 00:45:56,210
maybe there's something weird happening

1101
00:45:54,980 --> 00:45:59,269
I don't know why something weird would

1102
00:45:56,210 --> 00:46:02,300
happen there that's the hero of body and

1103
00:45:59,269 --> 00:46:04,159
it's the only hero body so I'm not quite

1104
00:46:02,300 --> 00:46:09,220
sure why we would end up in a situation

1105
00:46:04,159 --> 00:46:09,219
where that wouldn't be correct

1106
00:46:13,420 --> 00:46:20,559
well okay so I guess if we add it it

1107
00:46:18,760 --> 00:46:22,510
won't get unpacked but that's okay we'll

1108
00:46:20,559 --> 00:46:25,239
skip it this time through right it won't

1109
00:46:22,510 --> 00:46:26,770
have been added yet I mean technically

1110
00:46:25,239 --> 00:46:28,059
that should probably at the end because

1111
00:46:26,769 --> 00:46:30,250
we really don't want any in there that

1112
00:46:28,059 --> 00:46:32,440
never got used but I guess that's a

1113
00:46:30,250 --> 00:46:34,539
separate issue but yeah we come through

1114
00:46:32,440 --> 00:46:37,929
here we shouldn't have any heroes there

1115
00:46:34,539 --> 00:46:39,550
should be no heroes at all right and so

1116
00:46:37,929 --> 00:46:45,069
you know yeah we're just we're never

1117
00:46:39,550 --> 00:46:46,539
gonna actually have a hero in there and

1118
00:46:45,070 --> 00:46:48,550
then the next time through you would

1119
00:46:46,539 --> 00:46:52,599
think anyway that our hero should have

1120
00:46:48,550 --> 00:46:56,640
had that set properly I would think but

1121
00:46:52,599 --> 00:46:56,639
I guess he doesn't let's see why not

1122
00:46:59,610 --> 00:47:06,400
alright so we're gonna grab the head and

1123
00:47:01,960 --> 00:47:09,460
the body here look at the body and I

1124
00:47:06,400 --> 00:47:11,860
want to look at those pieces of

1125
00:47:09,460 --> 00:47:14,199
information occupying came from so yeah

1126
00:47:11,860 --> 00:47:16,210
it totally lost its occupying

1127
00:47:14,199 --> 00:47:18,909
information like that's just set to

1128
00:47:16,210 --> 00:47:22,539
nothing so I guess like my unpack code

1129
00:47:18,909 --> 00:47:24,730
is broken or something like this and I

1130
00:47:22,539 --> 00:47:26,619
want to find out why because obviously

1131
00:47:24,730 --> 00:47:31,000
we're not gonna get very far if we can't

1132
00:47:26,619 --> 00:47:32,769
pack our stuff properly and this code is

1133
00:47:31,000 --> 00:47:34,090
kind of a unnecessarily obtuse right

1134
00:47:32,769 --> 00:47:35,590
because this stuff will get a little bit

1135
00:47:34,090 --> 00:47:37,000
more Systema is when we actually start

1136
00:47:35,590 --> 00:47:38,350
doing packing and unpacking but for

1137
00:47:37,000 --> 00:47:39,730
right now it's sort of in an interim

1138
00:47:38,349 --> 00:47:42,339
state which does make it a little bit

1139
00:47:39,730 --> 00:47:48,519
more difficult to use certainly but

1140
00:47:42,340 --> 00:47:51,100
let's take a look so this is gonna be in

1141
00:47:48,519 --> 00:47:55,239
connect entity pointers it's when this

1142
00:47:51,099 --> 00:47:57,789
will happen and hope well you know to do

1143
00:47:55,239 --> 00:48:03,179
reenable this would probably be why

1144
00:47:57,789 --> 00:48:03,179
that's not getting unpacked shockingly

1145
00:48:03,579 --> 00:48:11,239
all right that's great so yeah in this

1146
00:48:09,920 --> 00:48:16,840
case we don't need head we just need

1147
00:48:11,239 --> 00:48:18,739
occupying and came from I don't know

1148
00:48:16,840 --> 00:48:22,250
looks like we're just unpacking and

1149
00:48:18,739 --> 00:48:24,589
marking that as used which is fine so

1150
00:48:22,250 --> 00:48:27,619
that that should hopefully solve that

1151
00:48:24,590 --> 00:48:32,420
problem of why those aren't getting

1152
00:48:27,619 --> 00:48:34,099
impact all right so let's see well no I

1153
00:48:32,420 --> 00:48:36,440
guess it didn't but that is definitely a

1154
00:48:34,099 --> 00:48:39,349
problem you have to admit it's not

1155
00:48:36,440 --> 00:48:43,190
particularly it's not particularly

1156
00:48:39,349 --> 00:48:44,690
friendly if you if you're trying to get

1157
00:48:43,190 --> 00:48:46,159
a location when you're supposed to be

1158
00:48:44,690 --> 00:48:51,470
occupying something and you never unpack

1159
00:48:46,159 --> 00:48:55,460
it alright so who is this exactly we're

1160
00:48:51,469 --> 00:48:57,889
looking at a body here and somehow it's

1161
00:48:55,460 --> 00:49:00,500
occupying again got set to zero though

1162
00:48:57,889 --> 00:49:01,819
right but I don't understand why that

1163
00:49:00,500 --> 00:49:04,070
would be because the occupying should

1164
00:49:01,820 --> 00:49:05,180
never really get set to zero let me

1165
00:49:04,070 --> 00:49:07,850
double check that I didn't mess

1166
00:49:05,179 --> 00:49:11,149
something up here we do low traversal

1167
00:49:07,849 --> 00:49:13,460
reference on the occupying we

1168
00:49:11,150 --> 00:49:17,690
double-check and set the entity to make

1169
00:49:13,460 --> 00:49:22,250
it occupy but I don't know where where

1170
00:49:17,690 --> 00:49:23,840
it's load so when we load it we just see

1171
00:49:22,250 --> 00:49:26,809
whether or not there's an index there

1172
00:49:23,840 --> 00:49:32,660
and if there is we go ahead and and and

1173
00:49:26,809 --> 00:49:35,389
get the entity out which seems fine so

1174
00:49:32,659 --> 00:49:38,629
I'm gonna go ahead and set a breakpoint

1175
00:49:35,389 --> 00:49:41,719
there I want to see what happens when

1176
00:49:38,630 --> 00:49:44,030
that when that unpacks and you know

1177
00:49:41,719 --> 00:49:48,799
what's weird about that too is I saw the

1178
00:49:44,030 --> 00:49:52,040
the fact that it was being occupied

1179
00:49:48,800 --> 00:49:54,470
because it turned blue before and so I

1180
00:49:52,039 --> 00:49:57,529
feel like yeah I feel like that was a

1181
00:49:54,469 --> 00:49:58,730
little bit odd but it's ok now I still

1182
00:49:57,530 --> 00:50:00,320
got about 10 minutes left so I'm gonna

1183
00:49:58,730 --> 00:50:02,530
go ahead and hunt this guy down before

1184
00:50:00,320 --> 00:50:02,530
stopping

1185
00:50:06,400 --> 00:50:13,250
excuse me all right so somewhere

1186
00:50:11,329 --> 00:50:15,230
somebody is setting this to zero which

1187
00:50:13,250 --> 00:50:19,519
is not what I would have preferred they

1188
00:50:15,230 --> 00:50:22,070
do and what I'd like to do is is take a

1189
00:50:19,519 --> 00:50:24,409
look at which actual value ID this guy

1190
00:50:22,070 --> 00:50:29,600
is right so every time we run its Guide

1191
00:50:24,409 --> 00:50:34,609
to 19 right you can see here it back up

1192
00:50:29,599 --> 00:50:36,679
a bit here so right ID value to 19

1193
00:50:34,610 --> 00:50:38,809
that's what I want to do is just insert

1194
00:50:36,679 --> 00:50:40,460
a little bit of code to help me out and

1195
00:50:38,809 --> 00:50:42,949
say that when we're actually doing this

1196
00:50:40,460 --> 00:50:44,869
unpacking when we do connect entity

1197
00:50:42,949 --> 00:50:49,519
pointers I'm just going to make it so

1198
00:50:44,869 --> 00:50:53,150
that you know if the entity ID value

1199
00:50:49,519 --> 00:50:58,400
equals to 19 you know I want you to just

1200
00:50:53,150 --> 00:50:59,960
stop right probably more interesting

1201
00:50:58,400 --> 00:51:03,950
would just be to give me a line to stop

1202
00:50:59,960 --> 00:51:07,490
on and then I can just set it and unset

1203
00:51:03,949 --> 00:51:09,859
it as as I wish so now if I look at some

1204
00:51:07,489 --> 00:51:13,159
region here when we actually do the the

1205
00:51:09,860 --> 00:51:16,820
connect up I can just set a breakpoint

1206
00:51:13,159 --> 00:51:18,469
and run and now I can see what happens

1207
00:51:16,820 --> 00:51:20,960
when we're about to unpack the entity

1208
00:51:18,469 --> 00:51:22,189
that I know is the problem and this is

1209
00:51:20,960 --> 00:51:23,720
just a common thing that I do you've

1210
00:51:22,190 --> 00:51:25,730
seen me do it before where I'm like oh

1211
00:51:23,719 --> 00:51:26,959
it's it would be kind of finicky to try

1212
00:51:25,730 --> 00:51:28,460
to step to that code all the time

1213
00:51:26,960 --> 00:51:30,320
because it's a school it's this code

1214
00:51:28,460 --> 00:51:32,480
gets run a bunch of times every frame

1215
00:51:30,320 --> 00:51:34,010
and and I don't want to spend a lot of

1216
00:51:32,480 --> 00:51:35,210
time getting to it so instead I just put

1217
00:51:34,010 --> 00:51:36,980
some code in that I know will only

1218
00:51:35,210 --> 00:51:39,710
trigger when on the thing that I want to

1219
00:51:36,980 --> 00:51:41,719
see and so then we can see what happens

1220
00:51:39,710 --> 00:51:44,210
so let's at least see now what happens

1221
00:51:41,719 --> 00:51:47,839
with occupying so it looks like we're

1222
00:51:44,210 --> 00:51:50,289
actually coming in wrong so our the

1223
00:51:47,840 --> 00:51:53,990
point where we actually saved it out

1224
00:51:50,289 --> 00:51:56,420
must also be erroneous or something

1225
00:51:53,989 --> 00:52:00,229
because by the time we get to the unpack

1226
00:51:56,420 --> 00:52:02,480
it's not correct right so let's try and

1227
00:52:00,230 --> 00:52:05,300
figure out why that's happening I can

1228
00:52:02,480 --> 00:52:09,250
sort of keep this exact same concept

1229
00:52:05,300 --> 00:52:09,250
going by going into

1230
00:52:11,079 --> 00:52:18,289
so weird for the world the world code

1231
00:52:16,179 --> 00:52:20,659
and when we do the pack

1232
00:52:18,289 --> 00:52:21,980
I can stop on the pack as well and see

1233
00:52:20,659 --> 00:52:25,579
if there's anything weird happening

1234
00:52:21,980 --> 00:52:28,130
there so for example on this guy I could

1235
00:52:25,579 --> 00:52:31,190
say like oh yeah tell me when this

1236
00:52:28,130 --> 00:52:32,950
entity gets packed and I guess sorry

1237
00:52:31,190 --> 00:52:36,490
21 the source I need to get packed and

1238
00:52:32,949 --> 00:52:42,099
then we'll go from there alright so

1239
00:52:36,489 --> 00:52:42,099
let's see both sides of the equation now

1240
00:52:44,170 --> 00:52:53,240
here we are packing the source and we

1241
00:52:50,300 --> 00:52:55,820
can see that occupying is already set to

1242
00:52:53,239 --> 00:52:58,399
no so now I just have to kind of ask the

1243
00:52:55,820 --> 00:53:00,320
question all right if this is entity 219

1244
00:52:58,400 --> 00:53:01,760
and it's already set to no why was it

1245
00:53:00,320 --> 00:53:03,230
set to no when we're adding this player

1246
00:53:01,760 --> 00:53:04,490
why are we not adding the player

1247
00:53:03,230 --> 00:53:10,969
correctly

1248
00:53:04,489 --> 00:53:14,239
oh well that's why because the head is

1249
00:53:10,969 --> 00:53:16,039
not the thing that the head is not the

1250
00:53:14,239 --> 00:53:19,039
thing which gets an occupying heads

1251
00:53:16,039 --> 00:53:24,860
don't occupy only the body occupies so

1252
00:53:19,039 --> 00:53:28,659
that's a little weird right hmm well

1253
00:53:24,860 --> 00:53:31,039
that kind of answers our question right

1254
00:53:28,659 --> 00:53:34,119
yeah that kind of answers our question

1255
00:53:31,039 --> 00:53:34,119
you know what I might do

1256
00:53:42,059 --> 00:53:54,369
I might do something like this where we

1257
00:53:51,219 --> 00:53:56,108
can just set this value madam I'll just

1258
00:53:54,369 --> 00:53:58,838
do it it doesn't matter like how long

1259
00:53:56,108 --> 00:54:01,509
did that take to add table you know two

1260
00:53:58,838 --> 00:54:03,998
seconds 12 seconds 15 seconds 30 seconds

1261
00:54:01,509 --> 00:54:07,690
75 seconds not very many seconds is the

1262
00:54:03,998 --> 00:54:09,399
point all right so all I want to do now

1263
00:54:07,690 --> 00:54:12,548
is go take a look at that code and see

1264
00:54:09,400 --> 00:54:14,499
why we're ever looking at the occupying

1265
00:54:12,548 --> 00:54:17,409
value for the head cuz that just looks

1266
00:54:14,498 --> 00:54:19,598
like I must have made a typo there so

1267
00:54:17,409 --> 00:54:21,670
let's go ahead and run and let it crash

1268
00:54:19,599 --> 00:54:23,140
at the place it was crashing because

1269
00:54:21,670 --> 00:54:27,548
that doesn't that should not actually be

1270
00:54:23,139 --> 00:54:29,739
happening yes so why is the body what's

1271
00:54:27,548 --> 00:54:34,509
going on with the with that did I I may

1272
00:54:29,739 --> 00:54:36,608
have mixed up I may have mixed up

1273
00:54:34,509 --> 00:54:38,259
which word switch and so another thing

1274
00:54:36,608 --> 00:54:40,929
too is we could take this opportunity to

1275
00:54:38,259 --> 00:54:43,208
especially if that is the bug take this

1276
00:54:40,929 --> 00:54:47,139
opportunity to fix that so let's see

1277
00:54:43,208 --> 00:54:48,608
here so the head is in slot one of the

1278
00:54:47,139 --> 00:54:52,568
bodies in slot zero so I was wrong

1279
00:54:48,608 --> 00:54:54,808
already right so what I'd like to do is

1280
00:54:52,568 --> 00:55:00,458
I'd like to have a way of making this

1281
00:54:54,809 --> 00:55:03,249
more robust right and it's a little

1282
00:55:00,458 --> 00:55:05,318
tricky to do that because C C++ don't

1283
00:55:03,248 --> 00:55:06,968
really let you do this very well but you

1284
00:55:05,318 --> 00:55:08,498
see what the bug is right it's actually

1285
00:55:06,969 --> 00:55:10,329
this goes into this slot and this goes

1286
00:55:08,498 --> 00:55:15,848
into that slot that was what was

1287
00:55:10,329 --> 00:55:18,459
supposed to happen so you know finish

1288
00:55:15,849 --> 00:55:20,410
running this here so that's the actual

1289
00:55:18,458 --> 00:55:21,608
problem with with why we were crashing

1290
00:55:20,409 --> 00:55:23,798
and so now we're back to normal

1291
00:55:21,608 --> 00:55:25,808
but you can see what we want to do is we

1292
00:55:23,798 --> 00:55:28,208
want to make it so that it's much easier

1293
00:55:25,809 --> 00:55:32,739
to put them in the right slot so we want

1294
00:55:28,208 --> 00:55:36,909
to make a way that we can take one of

1295
00:55:32,739 --> 00:55:40,028
these entity brains that we have and if

1296
00:55:36,909 --> 00:55:41,798
we define a nice template here not a

1297
00:55:40,028 --> 00:55:43,920
people s template out so you but you

1298
00:55:41,798 --> 00:55:43,920
know

1299
00:55:44,869 --> 00:55:51,109
I mean the actual textbook definition of

1300
00:55:47,510 --> 00:55:52,730
template if we have one of these we want

1301
00:55:51,110 --> 00:55:55,910
to be able to get the index by just

1302
00:55:52,730 --> 00:55:59,480
figuring out what it would have been

1303
00:55:55,909 --> 00:56:01,460
right so I'm gonna make a macro for that

1304
00:55:59,480 --> 00:56:03,349
because like I said there really isn't a

1305
00:56:01,460 --> 00:56:06,349
lot of there really isn't a good way to

1306
00:56:03,349 --> 00:56:08,119
do it and so you know I want to make

1307
00:56:06,349 --> 00:56:11,269
something just like look brain slot for

1308
00:56:08,119 --> 00:56:14,420
and you basically say oh you know what

1309
00:56:11,269 --> 00:56:17,269
was the brain slot type you were looking

1310
00:56:14,420 --> 00:56:22,460
for and what was the member I should do

1311
00:56:17,269 --> 00:56:25,130
it this way right type and member so

1312
00:56:22,460 --> 00:56:28,010
that I can say like oh okay the brain

1313
00:56:25,130 --> 00:56:32,390
slot in this case is the brain slot for

1314
00:56:28,010 --> 00:56:36,230
a brain here of parts you know which one

1315
00:56:32,389 --> 00:56:42,579
is this your body and this one is the

1316
00:56:36,230 --> 00:56:42,579
brain slot for the brain hero parts head

1317
00:56:48,460 --> 00:56:53,480
so at least I know that they'll come

1318
00:56:50,960 --> 00:56:55,519
back reliably and so how do I do that

1319
00:56:53,480 --> 00:56:58,250
well this is an overlay on top of this

1320
00:56:55,519 --> 00:57:02,329
array so I know that if I take the

1321
00:56:58,250 --> 00:57:06,079
offset from the base of that then I

1322
00:57:02,329 --> 00:57:08,000
could figure out where it was right so

1323
00:57:06,079 --> 00:57:10,130
in other words this structure has a set

1324
00:57:08,000 --> 00:57:12,079
of entity pointers in it and I know if I

1325
00:57:10,130 --> 00:57:14,690
just look at how many bytes in a

1326
00:57:12,079 --> 00:57:16,519
particular one of those is and I divide

1327
00:57:14,690 --> 00:57:18,409
by the size of one of these entity

1328
00:57:16,519 --> 00:57:20,059
pointers right then I would know that's

1329
00:57:18,409 --> 00:57:22,639
how far I go in right divided by eight

1330
00:57:20,059 --> 00:57:24,049
bytes right the size of a pointer so I

1331
00:57:22,639 --> 00:57:26,900
can make a little macro that basically

1332
00:57:24,050 --> 00:57:29,180
does that that thing what I could do is

1333
00:57:26,900 --> 00:57:34,730
I could say like okay let me cast you

1334
00:57:29,179 --> 00:57:36,379
know like some something like zero to

1335
00:57:34,730 --> 00:57:37,849
whatever the type is that I'm trying to

1336
00:57:36,380 --> 00:57:40,160
talk about which is the brain here of

1337
00:57:37,849 --> 00:57:42,110
parts in this case right so I've got a

1338
00:57:40,159 --> 00:57:43,460
brain here of parts here and I know that

1339
00:57:42,110 --> 00:57:47,019
if I had a pointer to brain here of

1340
00:57:43,460 --> 00:57:49,760
parts right I could get out of that

1341
00:57:47,019 --> 00:57:51,559
whatever the member was that that I was

1342
00:57:49,760 --> 00:57:54,440
referring to right so there's my member

1343
00:57:51,559 --> 00:57:58,309
and this is essentially like this

1344
00:57:54,440 --> 00:58:04,250
pointer right would be how far in

1345
00:57:58,309 --> 00:58:05,690
I would be from from the start of the

1346
00:58:04,250 --> 00:58:07,940
structure right if the structure was at

1347
00:58:05,690 --> 00:58:09,829
zero then you know if I if I took like

1348
00:58:07,940 --> 00:58:14,750
the address let's say of this member

1349
00:58:09,829 --> 00:58:17,380
then that's how many bytes in I am from

1350
00:58:14,750 --> 00:58:20,659
the start of the structure make sense

1351
00:58:17,380 --> 00:58:23,690
and so from there I can figure out how

1352
00:58:20,659 --> 00:58:26,269
many entity pointers in that is by just

1353
00:58:23,690 --> 00:58:28,070
dividing by the size of one of those

1354
00:58:26,269 --> 00:58:30,860
entity pointers right so I could say

1355
00:58:28,070 --> 00:58:35,960
well alright however many in that is I

1356
00:58:30,860 --> 00:58:37,070
could divide that value you know well

1357
00:58:35,960 --> 00:58:38,690
you know I wouldn't even have to do that

1358
00:58:37,070 --> 00:58:41,539
I could just use pointer arithmetic for

1359
00:58:38,690 --> 00:58:45,829
it if that's a pointer I could just say

1360
00:58:41,539 --> 00:58:48,139
pretend that pointer to that member is a

1361
00:58:45,829 --> 00:58:49,460
pointer to an entity star star which

1362
00:58:48,139 --> 00:58:52,789
actually I definitely under pretend it

1363
00:58:49,460 --> 00:58:57,849
is that right so I could just say take

1364
00:58:52,789 --> 00:58:57,849
that do I have enough parentheses here

1365
00:58:58,000 --> 00:59:07,250
okay take that and subtract it from if

1366
00:59:03,019 --> 00:59:12,949
you believed that that zero itself was a

1367
00:59:07,250 --> 00:59:14,719
pointer to an entity star right and that

1368
00:59:12,949 --> 00:59:17,960
would get me back in index that says

1369
00:59:14,719 --> 00:59:20,269
what the brain slot actually was so hold

1370
00:59:17,960 --> 00:59:22,449
on one second and I'll walk that a bit

1371
00:59:20,269 --> 00:59:28,369
no pretty fan which takes right in of in

1372
00:59:22,449 --> 00:59:30,949
1664 oh right sorry I forgot to actually

1373
00:59:28,369 --> 00:59:33,639
wrap that up in well you know I could

1374
00:59:30,949 --> 00:59:33,639
just do this for now

1375
00:59:36,699 --> 00:59:43,199
okay so I think that should work but

1376
00:59:39,099 --> 00:59:45,548
we'll double-check it yeah it does okay

1377
00:59:43,199 --> 00:59:46,960
so let me just explain that one more

1378
00:59:45,548 --> 00:59:49,659
time for people who think that's kind of

1379
00:59:46,960 --> 00:59:54,338
crazy and weird just what's going on

1380
00:59:49,659 --> 00:59:55,480
there so you know that this is just an

1381
00:59:54,338 --> 00:59:57,369
overlay on this right because they're a

1382
00:59:55,480 --> 00:59:59,380
union so if I want to know which slot

1383
00:59:57,369 --> 01:00:01,180
one of these would have lined up in all

1384
00:59:59,380 --> 01:00:03,190
I'm doing is saying hey take the address

1385
01:00:01,179 --> 01:00:05,649
of it if you assumed that you were

1386
01:00:03,190 --> 01:00:07,900
starting at zero how far in what I have

1387
01:00:05,650 --> 01:00:09,970
to go to get to that member right and

1388
01:00:07,900 --> 01:00:11,920
then I'm just telling them Pilar hey by

1389
01:00:09,969 --> 01:00:15,250
the way how many entities stars is it

1390
01:00:11,920 --> 01:00:16,510
from zero to their right so that

1391
01:00:15,250 --> 01:00:19,798
automatically tells us how's the

1392
01:00:16,510 --> 01:00:23,740
compiler do that divided for me right

1393
01:00:19,798 --> 01:00:26,409
and yeah it's not pretty but that's

1394
01:00:23,739 --> 01:00:29,159
there you go now this is exactly the

1395
01:00:26,409 --> 01:00:34,088
kind of thing to that compiler vendors

1396
01:00:29,159 --> 01:00:36,460
who basically are like trying to make

1397
01:00:34,088 --> 01:00:39,159
programmer slaves more difficult will

1398
01:00:36,460 --> 01:00:40,599
get and optimize in weird ways that

1399
01:00:39,159 --> 01:00:42,098
because they're like well we don't come

1400
01:00:40,599 --> 01:00:43,630
from the same memory pool because

1401
01:00:42,099 --> 01:00:47,230
technically you never allocated and blah

1402
01:00:43,630 --> 01:00:49,780
blah blah blah blah that kind of stuff

1403
01:00:47,230 --> 01:00:51,219
is the most annoying stuff ever and I

1404
01:00:49,780 --> 01:00:52,990
hate it this particular one I don't

1405
01:00:51,219 --> 01:00:53,949
believe they optimized for it because

1406
01:00:52,989 --> 01:00:55,118
there's really nothing you can do about

1407
01:00:53,949 --> 01:00:56,798
it because they could have come from the

1408
01:00:55,119 --> 01:00:59,559
same memory pool in this case so I'm

1409
01:00:56,798 --> 01:01:01,000
pretty sure this one's safe but yeah a

1410
01:00:59,559 --> 01:01:03,369
lot of times you find yourself having to

1411
01:01:01,000 --> 01:01:05,889
do operations like this because the

1412
01:01:03,369 --> 01:01:08,048
language I mean it's pretty obvious the

1413
01:01:05,889 --> 01:01:10,000
language should support this exact

1414
01:01:08,048 --> 01:01:12,210
operation which is to say I want to name

1415
01:01:10,000 --> 01:01:15,130
slots in an array it's kind of obvious

1416
01:01:12,210 --> 01:01:16,030
but of course it doesn't and so you know

1417
01:01:15,130 --> 01:01:17,619
a lot of times you have to compensate

1418
01:01:16,030 --> 01:01:20,019
for it and then it's super annoying when

1419
01:01:17,619 --> 01:01:21,789
compiler vendors come in and make it

1420
01:01:20,019 --> 01:01:23,500
hard for you to compensate for the

1421
01:01:21,789 --> 01:01:25,000
problems in the language by making it

1422
01:01:23,500 --> 01:01:26,739
impossible for you to use the things

1423
01:01:25,000 --> 01:01:28,088
that compensate for the fit problems in

1424
01:01:26,739 --> 01:01:29,739
the language but you know there you are

1425
01:01:28,088 --> 01:01:31,509
so anyway this is definitely that kind

1426
01:01:29,739 --> 01:01:34,118
of a thing but sometimes you need to do

1427
01:01:31,510 --> 01:01:36,970
that I would like this to return an

1428
01:01:34,119 --> 01:01:39,519
actual brain slot value so what I might

1429
01:01:36,969 --> 01:01:42,429
do as well is I might sort of take this

1430
01:01:39,519 --> 01:01:43,989
to be a little bit more of an official

1431
01:01:42,429 --> 01:01:47,828
thing and say ok there's actually an

1432
01:01:43,989 --> 01:01:50,429
inline function called brain slot 4 and

1433
01:01:47,829 --> 01:01:53,510
that just needs to take whatever

1434
01:01:50,429 --> 01:01:56,419
that pointer offset is like whatever the

1435
01:01:53,510 --> 01:01:59,579
the actual distance is there or whatever

1436
01:01:56,420 --> 01:02:04,019
so we'll just say like or you know this

1437
01:01:59,579 --> 01:02:07,289
is just the pack value or something

1438
01:02:04,019 --> 01:02:10,380
right so this way we can put it into the

1439
01:02:07,289 --> 01:02:11,789
right type of a structure and I'm really

1440
01:02:10,380 --> 01:02:14,220
doing this because we're not using the

1441
01:02:11,789 --> 01:02:15,329
most the most modern dialect of C where

1442
01:02:14,219 --> 01:02:17,818
I could have just done the bracket

1443
01:02:15,329 --> 01:02:20,130
initializer for it there so anyway I

1444
01:02:17,818 --> 01:02:24,659
could do brain slot results equals pack

1445
01:02:20,130 --> 01:02:26,760
value and then just return it so that

1446
01:02:24,659 --> 01:02:28,889
way we don't have to do this indexed

1447
01:02:26,760 --> 01:02:30,770
nonsense anymore either which is makes

1448
01:02:28,889 --> 01:02:32,759
that also a little bit nicer

1449
01:02:30,769 --> 01:02:34,170
alright so that's about it we'll go

1450
01:02:32,760 --> 01:02:35,460
ahead and go to the Q&amp;A and so we still

1451
01:02:34,170 --> 01:02:37,108
have tomorrow we got to finish up our

1452
01:02:35,460 --> 01:02:37,318
acceleration stuff but that's no big

1453
01:02:37,108 --> 01:02:39,210
deal

1454
01:02:37,318 --> 01:02:49,889
we've gotten the brain stuff working

1455
01:02:39,210 --> 01:02:53,190
which is nice can we have a look at the

1456
01:02:49,889 --> 01:02:54,960
C time stats so far yes I believe that

1457
01:02:53,190 --> 01:02:57,059
should be easy enough to do right C time

1458
01:02:54,960 --> 01:03:03,059
is in yes it is

1459
01:02:57,059 --> 01:03:06,298
oops so if we take a look at actually

1460
01:03:03,059 --> 01:03:09,690
where we storing it in build know where

1461
01:03:06,298 --> 01:03:11,159
we're actually storing it sorry I just

1462
01:03:09,690 --> 01:03:16,579
don't remember where we decided to put

1463
01:03:11,159 --> 01:03:16,578
this maybe it's just in code

1464
01:03:25,329 --> 01:03:37,420
yeah so you're just looking at stats you

1465
01:03:33,920 --> 01:03:37,420
just want to know this oops

1466
01:03:38,798 --> 01:03:49,219
remember what the command is Oh - stats

1467
01:03:41,420 --> 01:03:52,869
sorry so so far we've spent a total of 7

1468
01:03:49,219 --> 01:03:59,000
minutes and 29 seconds building

1469
01:03:52,869 --> 01:04:03,289
apparently yeah so that's in in 400

1470
01:03:59,000 --> 01:04:05,030
we've built 417 times that's a

1471
01:04:03,289 --> 01:04:16,818
tremendous number of times

1472
01:04:05,030 --> 01:04:19,280
uh-huh in in 10 days so we build an

1473
01:04:16,818 --> 01:04:25,818
average of 40 times an episode can you

1474
01:04:19,280 --> 01:04:29,298
imagine what it would be like like can

1475
01:04:25,818 --> 01:04:33,409
you imagine what it would be like in if

1476
01:04:29,298 --> 01:04:35,989
that was like uh you know took took a

1477
01:04:33,409 --> 01:04:39,769
minute to compile or something that

1478
01:04:35,989 --> 01:04:43,868
would be brutal dude in basement what

1479
01:04:39,769 --> 01:04:43,869
would we do for the production assert

1480
01:04:44,048 --> 01:04:49,369
well in in release mode that they're

1481
01:04:47,179 --> 01:04:56,449
they don't compile in so there won't be

1482
01:04:49,369 --> 01:04:57,980
any there is no production of sorry may

1483
01:04:56,449 --> 01:04:59,779
this brain system allow for things like

1484
01:04:57,980 --> 01:05:04,099
two characters carrying a felled tree

1485
01:04:59,780 --> 01:05:07,990
between them with both of their brains

1486
01:05:04,099 --> 01:05:07,990
controlling the movement of the tree

1487
01:05:11,010 --> 01:05:17,400
well I guess what I would say is I don't

1488
01:05:15,539 --> 01:05:19,289
know that I would have chosen to use the

1489
01:05:17,400 --> 01:05:22,050
brain system for that because it doesn't

1490
01:05:19,289 --> 01:05:23,820
necessarily I don't know that that would

1491
01:05:22,050 --> 01:05:27,539
be the best way to use the brain system

1492
01:05:23,820 --> 01:05:29,190
but you certainly could the reason that

1493
01:05:27,539 --> 01:05:33,449
I don't think I would use the brain

1494
01:05:29,190 --> 01:05:36,300
system for that is because if you wanted

1495
01:05:33,449 --> 01:05:39,029
to have to like let's say you then

1496
01:05:36,300 --> 01:05:41,250
wanted to have other types of people who

1497
01:05:39,030 --> 01:05:42,810
are carrying the tree well if the brain

1498
01:05:41,250 --> 01:05:45,210
system is what determines is carrying

1499
01:05:42,809 --> 01:05:46,739
the tree then you you could you know

1500
01:05:45,210 --> 01:05:50,460
it's easy enough to write a hero hero

1501
01:05:46,739 --> 01:05:52,679
tree carrier but now I got a right oh

1502
01:05:50,460 --> 01:05:53,820
what if one of the people was a monster

1503
01:05:52,679 --> 01:05:56,368
and I have to have a tree monster

1504
01:05:53,820 --> 01:05:59,400
carrying thing and blah blah blah right

1505
01:05:56,369 --> 01:06:02,190
so I feel like maybe what you would do

1506
01:05:59,400 --> 01:06:03,510
there is you would have probably and and

1507
01:06:02,190 --> 01:06:05,340
this will probably happen right our

1508
01:06:03,510 --> 01:06:07,080
brains will probably have behaviors and

1509
01:06:05,340 --> 01:06:10,019
stuff in them they're probably just be

1510
01:06:07,079 --> 01:06:12,420
like a thing that's like am i carrying a

1511
01:06:10,019 --> 01:06:14,219
tree if so then I have special stuff

1512
01:06:12,420 --> 01:06:15,869
that I might do on one side of the tree

1513
01:06:14,219 --> 01:06:17,608
or something I don't know but I'm not

1514
01:06:15,869 --> 01:06:19,410
sure that that would be the best way to

1515
01:06:17,608 --> 01:06:21,119
implement it I have to see that's not

1516
01:06:19,409 --> 01:06:23,039
really something on handmade hero that

1517
01:06:21,119 --> 01:06:25,019
since hammer here is a sinker player

1518
01:06:23,039 --> 01:06:26,429
game I haven't really thought too hard

1519
01:06:25,019 --> 01:06:29,070
about how you would need to do stuff

1520
01:06:26,429 --> 01:06:32,480
like that and whether there's something

1521
01:06:29,070 --> 01:06:32,480
intelligent you would want to do there

1522
01:07:30,739 --> 01:07:36,569
all right no more questions we can end I

1523
01:07:33,539 --> 01:07:40,590
don't see any I'm waiting I don't see no

1524
01:07:36,570 --> 01:07:45,840
questions I don't see no questions I

1525
01:07:40,590 --> 01:07:50,870
don't see no questions no questions no

1526
01:07:45,840 --> 01:07:50,870
questions no questions

1527
01:07:56,030 --> 01:08:00,480
frosty ninja try not to make the brain

1528
01:07:58,469 --> 01:08:02,069
self-aware we can't have stumpy over

1529
01:08:00,480 --> 01:08:04,349
there taking over the world

1530
01:08:02,070 --> 01:08:10,350
well I think the person you should be

1531
01:08:04,349 --> 01:08:12,239
more concerned about is in sohbat right

1532
01:08:10,349 --> 01:08:13,980
because in sohbat is definitely way more

1533
01:08:12,239 --> 01:08:16,469
advanced than any of the brains we're

1534
01:08:13,980 --> 01:08:18,020
making on handmade hero and so if

1535
01:08:16,470 --> 01:08:22,800
something's gonna take over the world

1536
01:08:18,020 --> 01:08:25,350
it's going to be in sohbat the Cizek

1537
01:08:22,800 --> 01:08:31,140
four brain types why not an enum for the

1538
01:08:25,350 --> 01:08:33,930
array indices well the problem with

1539
01:08:31,140 --> 01:08:35,820
array indices in this case is that's

1540
01:08:33,930 --> 01:08:41,039
just more typing that I don't really

1541
01:08:35,819 --> 01:08:42,449
want to have to do but because then you

1542
01:08:41,039 --> 01:08:48,090
have to constantly be like the thing in

1543
01:08:42,449 --> 01:08:49,470
the brackets we could do it you know and

1544
01:08:48,090 --> 01:08:52,980
the other reason is you can mix and

1545
01:08:49,470 --> 01:08:54,420
match them accidentally right I mean you

1546
01:08:52,979 --> 01:08:55,769
know since since nobody's asking any

1547
01:08:54,420 --> 01:08:58,109
other questions let me just go ahead and

1548
01:08:55,770 --> 01:08:59,360
actually be 100% explicit on why I don't

1549
01:08:58,109 --> 01:09:05,339
want to do that because it's worth

1550
01:08:59,359 --> 01:09:08,039
elaborating so here's what we've got

1551
01:09:05,340 --> 01:09:10,529
currently right and you've got brain

1552
01:09:08,039 --> 01:09:12,630
here a parts head and body and so what

1553
01:09:10,529 --> 01:09:14,609
happens there is when I'm actually doing

1554
01:09:12,630 --> 01:09:17,369
that the construction code would not be

1555
01:09:14,609 --> 01:09:20,339
any different really or any more

1556
01:09:17,369 --> 01:09:23,309
error-prone if you used enums so in that

1557
01:09:20,340 --> 01:09:25,710
case I think you could use either fairly

1558
01:09:23,310 --> 01:09:29,610
interchangeably because there's no

1559
01:09:25,710 --> 01:09:34,889
really clean way to make this work I

1560
01:09:29,609 --> 01:09:39,568
don't I don't think

1561
01:09:34,889 --> 01:09:41,429
I mean we could maybe do some I don't

1562
01:09:39,569 --> 01:09:42,659
know the the point being no I don't

1563
01:09:41,429 --> 01:09:45,149
think there's much we could do here to

1564
01:09:42,658 --> 01:09:47,068
make this less error-prone but the only

1565
01:09:45,149 --> 01:09:50,460
reason that I wanted to maybe do it

1566
01:09:47,069 --> 01:09:51,869
without the enums was because in the

1567
01:09:50,460 --> 01:09:55,590
case where you're actually getting the

1568
01:09:51,868 --> 01:09:58,769
code out right in here this is a little

1569
01:09:55,590 --> 01:10:03,500
easier to not screw up in my opinion

1570
01:09:58,770 --> 01:10:03,500
because you can do stuff like that

1571
01:10:08,279 --> 01:10:19,439
in the case where I've got a lot of

1572
01:10:10,170 --> 01:10:21,420
these and I can just and I can write and

1573
01:10:19,439 --> 01:10:24,509
I can make sure that everything comes

1574
01:10:21,420 --> 01:10:28,460
from the same understanding right now if

1575
01:10:24,510 --> 01:10:28,460
instead I was to do it this way

1576
01:10:41,890 --> 01:10:48,050
right well probably I'd have to always

1577
01:10:46,100 --> 01:10:50,300
do this and I'd have to always make sure

1578
01:10:48,050 --> 01:10:52,000
these were correct and the reason is

1579
01:10:50,300 --> 01:10:54,800
because it'd be real easy to

1580
01:10:52,000 --> 01:10:59,449
accidentally use the enum from some

1581
01:10:54,800 --> 01:11:00,739
other brain type in this entity right so

1582
01:10:59,449 --> 01:11:01,939
you'd always have to I'd have to at

1583
01:11:00,739 --> 01:11:03,739
least always make sure I was very

1584
01:11:01,939 --> 01:11:06,409
consistent with these prefixes because

1585
01:11:03,739 --> 01:11:08,359
if I did this you know maybe that's the

1586
01:11:06,409 --> 01:11:09,979
wrong that's not the hero body that's

1587
01:11:08,359 --> 01:11:11,449
some other body which is in a different

1588
01:11:09,979 --> 01:11:13,549
slot right because you're gonna have a

1589
01:11:11,449 --> 01:11:15,139
bunch of different types of brains so

1590
01:11:13,550 --> 01:11:16,940
this one kind of makes it so that it's

1591
01:11:15,140 --> 01:11:18,890
scoped a little more properly in my mind

1592
01:11:16,939 --> 01:11:20,899
and that's the reason I didn't go with

1593
01:11:18,890 --> 01:11:22,579
enums now maybe I should have gone with

1594
01:11:20,899 --> 01:11:24,799
enums because maybe that's really not a

1595
01:11:22,579 --> 01:11:27,640
realistic error to be worried about but

1596
01:11:24,800 --> 01:11:27,640
that's what I was thinking

1597
01:11:37,319 --> 01:11:43,420
Josiah Mariette how would you go about

1598
01:11:39,399 --> 01:11:45,489
making game entities moddable well it

1599
01:11:43,420 --> 01:11:53,529
depends what you're trying to mod about

1600
01:11:45,489 --> 01:11:54,579
them I mean like that's kind of I feel

1601
01:11:53,529 --> 01:11:56,949
like that's really not a question you

1602
01:11:54,579 --> 01:11:59,260
can answer because the moddable is not

1603
01:11:56,949 --> 01:12:01,239
really moddable is not really a

1604
01:11:59,260 --> 01:12:04,300
definition like moddable doesn't mean

1605
01:12:01,239 --> 01:12:06,939
anything right I mean for handmade hero

1606
01:12:04,300 --> 01:12:08,380
the trivial answer is like oh well all

1607
01:12:06,939 --> 01:12:09,759
the source codes available so if anyone

1608
01:12:08,380 --> 01:12:12,460
wants to make a different stuff they can

1609
01:12:09,760 --> 01:12:14,140
just make it right so the question is

1610
01:12:12,460 --> 01:12:16,869
like what do you actually want to get

1611
01:12:14,140 --> 01:12:18,280
out of the modding do they just want to

1612
01:12:16,869 --> 01:12:19,960
be able to swap in bitmaps do they want

1613
01:12:18,279 --> 01:12:22,029
to be able to define new behaviors that

1614
01:12:19,960 --> 01:12:23,560
are existing combinations of existing

1615
01:12:22,029 --> 01:12:25,210
behaviors or do they need to be able to

1616
01:12:23,560 --> 01:12:26,740
write completely new behaviors that are

1617
01:12:25,210 --> 01:12:30,220
like coded totally differently from

1618
01:12:26,739 --> 01:12:32,829
other behaviors right and so if you're

1619
01:12:30,220 --> 01:12:34,510
trying to okay so it says I was thinking

1620
01:12:32,829 --> 01:12:36,039
of trying to find whole types of holder

1621
01:12:34,510 --> 01:12:37,720
types entities so if you're trying to

1622
01:12:36,039 --> 01:12:40,289
find whole new types of entities then

1623
01:12:37,720 --> 01:12:48,550
you would probably have to do something

1624
01:12:40,289 --> 01:12:51,550
where you where you load a dll right if

1625
01:12:48,550 --> 01:12:52,869
you wanted them to be able to to be able

1626
01:12:51,550 --> 01:13:00,090
to find entirely new entity you have to

1627
01:12:52,869 --> 01:13:00,090
be able to load a dll right

1628
01:13:10,529 --> 01:13:16,329
yeah because the only alternative that

1629
01:13:12,760 --> 01:13:19,140
really is is a scripting language right

1630
01:13:16,329 --> 01:13:21,579
if you if you want to be able to load

1631
01:13:19,140 --> 01:13:27,070
actual code in you'd have to either load

1632
01:13:21,579 --> 01:13:30,219
a scripting language or load a DLL with

1633
01:13:27,069 --> 01:13:31,569
that has you know code in it and you

1634
01:13:30,219 --> 01:13:35,439
know for handmade hero we definitely

1635
01:13:31,569 --> 01:13:36,488
wouldn't ever do a scripting language so

1636
01:13:35,439 --> 01:13:39,389
that's kind of like a whole another

1637
01:13:36,488 --> 01:13:43,419
project right to implement one of those

1638
01:13:39,390 --> 01:13:45,280
but you know you could see loading a DLL

1639
01:13:43,420 --> 01:13:47,770
or something and and then you would just

1640
01:13:45,279 --> 01:13:50,198
have to do some kind of understanding of

1641
01:13:47,770 --> 01:13:52,840
how you would marshal those behaviors

1642
01:13:50,198 --> 01:13:56,019
right like how you would assign them to

1643
01:13:52,840 --> 01:13:58,119
different things and obviously because

1644
01:13:56,020 --> 01:14:00,400
you run into the problem of defining a

1645
01:13:58,119 --> 01:14:01,899
new type of entity you would have to

1646
01:14:00,399 --> 01:14:03,519
figure out how you're picking entities

1647
01:14:01,899 --> 01:14:06,029
to begin with right

1648
01:14:03,520 --> 01:14:09,250
and so we would probably do is take

1649
01:14:06,029 --> 01:14:10,869
those brain types and the brain types

1650
01:14:09,250 --> 01:14:13,090
would now be picked very much similar to

1651
01:14:10,869 --> 01:14:14,619
where the asset system picks things so

1652
01:14:13,090 --> 01:14:16,150
instead of specifically creating a brain

1653
01:14:14,619 --> 01:14:17,529
type and said you would have some

1654
01:14:16,149 --> 01:14:21,909
parameters and it would you know do

1655
01:14:17,529 --> 01:14:24,159
whatever just I and marry it I guess

1656
01:14:21,909 --> 01:14:27,099
there's no way to mitigate DLL security

1657
01:14:24,159 --> 01:14:29,139
concerns well you can if you want to

1658
01:14:27,100 --> 01:14:31,690
right that's like for example what

1659
01:14:29,140 --> 01:14:34,600
chrome does is you could sandbox the DLL

1660
01:14:31,689 --> 01:14:38,738
and you can force it not to load any be

1661
01:14:34,600 --> 01:14:39,789
able to load from anything but certainly

1662
01:14:38,738 --> 01:14:43,000
that's not something I would care about

1663
01:14:39,789 --> 01:14:46,149
at all because you know security

1664
01:14:43,000 --> 01:14:48,909
concerns of that form in my mind that

1665
01:14:46,149 --> 01:14:50,738
was Microsoft's job and they abdicated

1666
01:14:48,909 --> 01:14:52,000
their responsibility there and so I'm

1667
01:14:50,738 --> 01:14:56,109
certainly not gonna step in and do

1668
01:14:52,000 --> 01:14:57,789
Microsoft's job for them you know it's

1669
01:14:56,109 --> 01:14:59,619
ridiculous that you could ever possibly

1670
01:14:57,789 --> 01:15:01,810
have a security concern with a video

1671
01:14:59,619 --> 01:15:04,750
game right that the even the mere fact

1672
01:15:01,810 --> 01:15:06,880
that that's even a concept is just kind

1673
01:15:04,750 --> 01:15:08,920
of like a testament to how bad Microsoft

1674
01:15:06,880 --> 01:15:11,140
is at their job because it's ridicu it

1675
01:15:08,920 --> 01:15:14,289
it doesn't even make sense the point of

1676
01:15:11,140 --> 01:15:16,390
an operating system just in general was

1677
01:15:14,289 --> 01:15:18,729
that there was no way for a game to be

1678
01:15:16,390 --> 01:15:20,920
able to do anything on your machine

1679
01:15:18,729 --> 01:15:21,769
right that was like the whole point of

1680
01:15:20,920 --> 01:15:24,520
time sharing

1681
01:15:21,770 --> 01:15:26,210
operating systems in the first place

1682
01:15:24,520 --> 01:15:27,860
well I shouldn't say time sorry

1683
01:15:26,210 --> 01:15:29,659
operating systems but of having

1684
01:15:27,859 --> 01:15:29,929
protection in the first place it was

1685
01:15:29,659 --> 01:15:32,359
that

1686
01:15:29,930 --> 01:15:34,789
so users couldn't do that and so it's

1687
01:15:32,359 --> 01:15:36,469
it's kind of silly that that's even the

1688
01:15:34,789 --> 01:15:39,439
concept that you would even ever think

1689
01:15:36,470 --> 01:15:41,390
of having to do security as a game

1690
01:15:39,439 --> 01:15:42,559
developer is ludicrous right

1691
01:15:41,390 --> 01:15:43,940
the only kind of security a game

1692
01:15:42,560 --> 01:15:45,410
developer should be thinking about is if

1693
01:15:43,939 --> 01:15:47,210
they're talking to like a server or

1694
01:15:45,409 --> 01:15:49,279
something because obviously that's

1695
01:15:47,210 --> 01:15:52,880
something that you know that that could

1696
01:15:49,279 --> 01:15:55,759
be hacked in a separate way but so yeah

1697
01:15:52,880 --> 01:15:57,409
that's just that's that's just

1698
01:15:55,760 --> 01:16:01,760
Microsoft's problem as far as I'm

1699
01:15:57,409 --> 01:16:03,829
concerned static motion all the brain

1700
01:16:01,760 --> 01:16:05,720
code is now in the switch brain type how

1701
01:16:03,829 --> 01:16:06,829
many brains do you expect to have what

1702
01:16:05,720 --> 01:16:09,530
if we have a hundred brains where you

1703
01:16:06,829 --> 01:16:11,239
keep all the code in there well I don't

1704
01:16:09,529 --> 01:16:12,800
know that we would necessarily get rid

1705
01:16:11,239 --> 01:16:14,329
of the switch statement but we probably

1706
01:16:12,800 --> 01:16:16,250
wouldn't keep the switch statement in

1707
01:16:14,329 --> 01:16:19,039
line in this file so there probably be a

1708
01:16:16,250 --> 01:16:20,600
plan made brain dot cpp and then we'd

1709
01:16:19,039 --> 01:16:23,449
have the switch statement there now

1710
01:16:20,600 --> 01:16:25,640
we're keep in mind that these brains

1711
01:16:23,449 --> 01:16:28,099
will start sharing a lot of code so the

1712
01:16:25,640 --> 01:16:29,510
brain code will not be probably so huge

1713
01:16:28,100 --> 01:16:31,100
it'll probably be calling functions to

1714
01:16:29,510 --> 01:16:38,900
do things that are common among brains

1715
01:16:31,100 --> 01:16:42,160
so that'll change a little bit all right

1716
01:16:38,899 --> 01:16:42,159
we're out of time so

1717
01:16:50,038 --> 01:16:54,188
okay thank you everyone for joining me

1718
01:16:53,109 --> 01:16:55,389
for another episode of hand made here

1719
01:16:54,189 --> 01:16:57,159
it's been a pleasure coding with you as

1720
01:16:55,389 --> 01:16:58,628
always if you want to follow along

1721
01:16:57,158 --> 01:17:00,128
series at home you can always peer to

1722
01:16:58,628 --> 01:17:02,050
the game on handmade hero argh and it

1723
01:17:00,128 --> 01:17:03,729
comes with a source code so you can play

1724
01:17:02,050 --> 01:17:05,409
around with it on your own we also have

1725
01:17:03,729 --> 01:17:07,929
a forum site you can go to if you would

1726
01:17:05,408 --> 01:17:10,328
like to some sort of ask questions and

1727
01:17:07,929 --> 01:17:11,769
or if you find bugs or anything like

1728
01:17:10,328 --> 01:17:13,838
that that you want to report there's

1729
01:17:11,769 --> 01:17:15,189
there's forums on there you can use we

1730
01:17:13,838 --> 01:17:17,050
have a patreon page you can use you want

1731
01:17:15,189 --> 01:17:18,789
support the video series we have a

1732
01:17:17,050 --> 01:17:20,079
schedule bot which when I remember it up

1733
01:17:18,788 --> 01:17:21,279
below the schedule tells you what the

1734
01:17:20,078 --> 01:17:22,648
schedule is going to be I forgot to do

1735
01:17:21,279 --> 01:17:25,208
that this weekend I'll do that tonight

1736
01:17:22,649 --> 01:17:26,739
we also have a past episodes guide that

1737
01:17:25,208 --> 01:17:27,938
you can use to catch up with parts three

1738
01:17:26,738 --> 01:17:29,918
series it's really cool it has time

1739
01:17:27,939 --> 01:17:32,918
coded links and everything I brought to

1740
01:17:29,918 --> 01:17:36,158
you by our very own Niblo and that's

1741
01:17:32,918 --> 01:17:37,510
about it I will see you guys back here I

1742
01:17:36,158 --> 01:17:39,368
believe tomorrow will be another stream

1743
01:17:37,510 --> 01:17:41,349
day but double check the three pot which

1744
01:17:39,368 --> 01:17:42,818
I'll update tonight but I believe we'll

1745
01:17:41,349 --> 01:17:44,199
be back here again at 5 p.m. Pacific

1746
01:17:42,819 --> 01:17:47,409
Daylight Time tomorrow just as we

1747
01:17:44,198 --> 01:17:51,098
normally are that's about all there is

1748
01:17:47,408 --> 01:17:52,538
to say about that thanks for joining me

1749
01:17:51,099 --> 01:17:53,739
I will see you guys tomorrow until then

1750
01:17:52,538 --> 01:17:56,128
have fun programming and I'll see you on

1751
01:17:53,738 --> 01:17:56,128
the Internet

