1
00:00:00,800 --> 00:00:04,500
hello everyone and welcome to handmade

2
00:00:03,120 --> 00:00:07,770
Euro the show recoat a complete game

3
00:00:04,500 --> 00:00:12,539
live on stream on Twitch it is a Friday

4
00:00:07,769 --> 00:00:16,138
here things are kind of crazy crazy

5
00:00:12,539 --> 00:00:18,839
Friday and we're right in the middle of

6
00:00:16,138 --> 00:00:20,759
font stuff so I'm gonna just go get

7
00:00:18,839 --> 00:00:22,589
right back into it we were about to do

8
00:00:20,760 --> 00:00:24,240
stuff with language although some people

9
00:00:22,589 --> 00:00:25,710
were mentioning that we we don't handle

10
00:00:24,239 --> 00:00:27,028
spaces properly currently and that's

11
00:00:25,710 --> 00:00:28,289
because of some stuff readable kerning

12
00:00:27,028 --> 00:00:30,089
so we should probably fix that first is

13
00:00:28,289 --> 00:00:32,910
your trivial things so we have some

14
00:00:30,089 --> 00:00:34,140
stuff we want to do with fonts and so I

15
00:00:32,909 --> 00:00:36,029
think we should try to get some of that

16
00:00:34,140 --> 00:00:37,619
done today it's a Friday so we don't

17
00:00:36,030 --> 00:00:39,689
want to open up anything major but we

18
00:00:37,619 --> 00:00:41,099
should be able to just do some analysis

19
00:00:39,689 --> 00:00:42,299
of our stuff figure out exactly what we

20
00:00:41,100 --> 00:00:44,640
need to do maybe put a little bit of it

21
00:00:42,299 --> 00:00:45,718
in there and get ourselves in a good

22
00:00:44,640 --> 00:00:47,399
position so that we know what we need to

23
00:00:45,719 --> 00:00:49,800
do next week to wrap up the font stuff

24
00:00:47,399 --> 00:00:51,359
for good and then we just have fonts and

25
00:00:49,799 --> 00:00:53,399
everyone's happy and we're fond thing

26
00:00:51,359 --> 00:00:57,119
and it's great and everyone loves it

27
00:00:53,399 --> 00:00:58,920
okay so like I said just want to get

28
00:00:57,119 --> 00:01:00,628
started so if you are following along at

29
00:00:58,920 --> 00:01:01,948
home and you preorder the code on

30
00:01:00,628 --> 00:01:03,358
handmade hero org

31
00:01:01,948 --> 00:01:05,908
I'm sorry pre-order the game on hamate

32
00:01:03,359 --> 00:01:09,868
here at org you can download the source

33
00:01:05,909 --> 00:01:11,729
code and unpack day 173 today is 174 so

34
00:01:09,868 --> 00:01:13,618
173 source code is what I'm starting

35
00:01:11,728 --> 00:01:15,060
with and so if you want to follow along

36
00:01:13,618 --> 00:01:16,200
that's what you want pack and you'll be

37
00:01:15,060 --> 00:01:20,579
right where I am

38
00:01:16,200 --> 00:01:22,859
starting now alright so we pretty much

39
00:01:20,579 --> 00:01:24,629
had fonts working to my satisfaction you

40
00:01:22,859 --> 00:01:25,978
know to the level that I think we need

41
00:01:24,629 --> 00:01:28,828
them to be for this particular game

42
00:01:25,978 --> 00:01:31,200
which is granted not too much in terms

43
00:01:28,828 --> 00:01:32,759
of complexity but some folks were saying

44
00:01:31,200 --> 00:01:34,590
that spaces weren't working and I can

45
00:01:32,759 --> 00:01:36,180
already know why that would be so let's

46
00:01:34,590 --> 00:01:37,950
go ahead and just debug that one thing

47
00:01:36,180 --> 00:01:40,500
first so that we don't have to worry

48
00:01:37,950 --> 00:01:42,810
about it later well we go ahead and do

49
00:01:40,500 --> 00:01:44,819
our language stuff right so if we want

50
00:01:42,810 --> 00:01:48,960
to do our debug cycle count stuff I

51
00:01:44,819 --> 00:01:50,879
that's probably like low counts yeah so

52
00:01:48,959 --> 00:01:52,408
that's got spaces in it right and so

53
00:01:50,879 --> 00:01:53,789
that should there should be space is

54
00:01:52,409 --> 00:01:55,710
there and there and there not so that's

55
00:01:53,790 --> 00:01:57,840
an easy test case why aren't the spaces

56
00:01:55,709 --> 00:01:59,429
there let's figure that out right well

57
00:01:57,840 --> 00:02:02,490
the reason I'm pretty sure I already

58
00:01:59,430 --> 00:02:04,950
actually know but the reason for that is

59
00:02:02,489 --> 00:02:06,739
because spaces are obviously are going

60
00:02:04,950 --> 00:02:11,009
to do kerning just like everything else

61
00:02:06,739 --> 00:02:13,620
and we changed the way we were doing

62
00:02:11,008 --> 00:02:15,779
our kerning right the way we're doing

63
00:02:13,620 --> 00:02:18,390
our kerning now is it happens inside

64
00:02:15,780 --> 00:02:20,549
this character operation set and this

65
00:02:18,389 --> 00:02:23,339
character operation set never actually

66
00:02:20,549 --> 00:02:24,900
looks at space because space isn't a

67
00:02:23,340 --> 00:02:28,019
glyph that we actually ever need to draw

68
00:02:24,900 --> 00:02:29,489
right it's empty there's nothing there

69
00:02:28,019 --> 00:02:31,319
so we skipped it we didn't bother

70
00:02:29,489 --> 00:02:32,459
exporting it because why bother

71
00:02:31,318 --> 00:02:34,169
exploring something we don't think

72
00:02:32,459 --> 00:02:36,539
actually is going to be used however

73
00:02:34,169 --> 00:02:39,268
that means it's kerning table will never

74
00:02:36,539 --> 00:02:41,578
actually get set and so what we want to

75
00:02:39,269 --> 00:02:44,280
do is we want to make sure that we

76
00:02:41,579 --> 00:02:46,110
handle space properly so that it

77
00:02:44,280 --> 00:02:47,789
actually gets at it now there's a couple

78
00:02:46,110 --> 00:02:49,410
ways that we could do that the easiest

79
00:02:47,789 --> 00:02:52,650
one is to actually store it with four

80
00:02:49,409 --> 00:02:54,479
font right I'm sorry for space right we

81
00:02:52,650 --> 00:02:57,659
can just do this you can't just say all

82
00:02:54,479 --> 00:02:59,548
right there we go we've got a space now

83
00:02:57,659 --> 00:03:01,680
it'll go through the standard path and

84
00:02:59,549 --> 00:03:03,810
presumably should actually work although

85
00:03:01,680 --> 00:03:05,280
I'd have to think about whether there's

86
00:03:03,810 --> 00:03:07,650
anything we did in the kerning code that

87
00:03:05,280 --> 00:03:08,878
would cause that not to work like for

88
00:03:07,650 --> 00:03:10,950
example because of the way we were

89
00:03:08,878 --> 00:03:11,848
trying to get alignment to the left edge

90
00:03:10,949 --> 00:03:13,619
and stuff like that

91
00:03:11,848 --> 00:03:17,729
so since we're not exactly doing the

92
00:03:13,620 --> 00:03:19,889
exact same thing windows is I do I do

93
00:03:17,729 --> 00:03:22,738
think we're not 100% guaranteed to have

94
00:03:19,889 --> 00:03:25,709
this work but that's at least the first

95
00:03:22,739 --> 00:03:29,700
fast thing to try and yep so there we go

96
00:03:25,709 --> 00:03:30,840
not actually working as perhaps I should

97
00:03:29,699 --> 00:03:38,298
have foretold

98
00:03:30,840 --> 00:03:38,299
so anyway hmm do you think yeah

99
00:03:41,449 --> 00:03:45,829
I'm gonna say I don't even actually

100
00:03:43,639 --> 00:03:50,268
remember now that I think about it

101
00:03:45,830 --> 00:03:51,709
I don't think I ever even actually

102
00:03:50,269 --> 00:03:56,230
remember where we landed on the Curtin

103
00:03:51,709 --> 00:03:56,229
thing did we use the get care wid 30 -

104
00:03:56,800 --> 00:04:07,010
yeah and then when we do our kerning

105
00:04:00,318 --> 00:04:08,929
tables that seems like that should have

106
00:04:07,009 --> 00:04:12,259
worked you know what I take it all back

107
00:04:08,930 --> 00:04:13,969
I take all of it back our kerning table

108
00:04:12,259 --> 00:04:17,000
should have had the kerning value added

109
00:04:13,969 --> 00:04:18,620
into it so although we may need to do

110
00:04:17,000 --> 00:04:20,810
this to extract the original value I

111
00:04:18,620 --> 00:04:22,459
think I revised I think I didn't really

112
00:04:20,810 --> 00:04:25,069
know I thought I knew but I didn't know

113
00:04:22,459 --> 00:04:27,349
I suspect the real reason is actually

114
00:04:25,069 --> 00:04:29,269
because we may yeah that's the real

115
00:04:27,350 --> 00:04:33,320
reason right there potentially do we

116
00:04:29,269 --> 00:04:35,930
actually handle everything else probably

117
00:04:33,319 --> 00:04:38,389
no we're fine we don't we don't look at

118
00:04:35,930 --> 00:04:39,829
spaces but that's okay because we don't

119
00:04:38,389 --> 00:04:42,319
actually need to render those spaces

120
00:04:39,829 --> 00:04:44,449
right so this right here the court get

121
00:04:42,319 --> 00:04:50,269
horizontal advanced repair should have

122
00:04:44,449 --> 00:04:52,219
done it yeah all right

123
00:04:50,269 --> 00:04:53,149
so I'm gonna have to go debug this this

124
00:04:52,220 --> 00:04:54,350
may be a little trick here that I

125
00:04:53,149 --> 00:04:57,529
thought was gonna be I was hoping it

126
00:04:54,350 --> 00:04:59,900
would be simple so yeah what I imagined

127
00:04:57,529 --> 00:05:01,549
was happening I'll just say it even

128
00:04:59,899 --> 00:05:04,310
though it apparently wasn't the truth

129
00:05:01,550 --> 00:05:07,430
what I imagined was happening was that

130
00:05:04,310 --> 00:05:09,139
our kerning right for spaces maybe there

131
00:05:07,430 --> 00:05:11,569
really wasn't any kerning for spaces for

132
00:05:09,139 --> 00:05:13,220
the most part and so what was happening

133
00:05:11,569 --> 00:05:14,779
was because we never actually ran the

134
00:05:13,220 --> 00:05:16,550
kerning code for the space character

135
00:05:14,779 --> 00:05:19,038
because it never had its glyph stuff

136
00:05:16,550 --> 00:05:20,509
processed right I just assumed that that

137
00:05:19,038 --> 00:05:22,490
would probably be the reason why it

138
00:05:20,509 --> 00:05:24,019
wasn't getting advanced this route this

139
00:05:22,490 --> 00:05:26,598
part right here is the part that

140
00:05:24,019 --> 00:05:30,620
actually computes you know that does

141
00:05:26,598 --> 00:05:37,719
that additional kerning and so it seemed

142
00:05:30,620 --> 00:05:40,480
to me you know

143
00:05:37,720 --> 00:05:41,860
I felt like that would have been the

144
00:05:40,480 --> 00:05:45,550
reason why we didn't get any space

145
00:05:41,860 --> 00:05:48,129
kerning you know yet when I actually did

146
00:05:45,550 --> 00:05:50,500
this which should make sure that it's

147
00:05:48,129 --> 00:05:52,600
called right if we rerun the asset

148
00:05:50,500 --> 00:05:53,829
Packer there's no spaces right so

149
00:05:52,600 --> 00:05:55,810
where'd the spaces go

150
00:05:53,829 --> 00:05:58,269
so what I'll have to do to figure out

151
00:05:55,810 --> 00:06:00,939
why we're not getting those since it's

152
00:05:58,269 --> 00:06:04,750
not what I thought it was we're gonna

153
00:06:00,939 --> 00:06:06,730
have to go take a look and and see what

154
00:06:04,750 --> 00:06:10,959
the kerning for space actually ends up

155
00:06:06,730 --> 00:06:15,580
doing my assumption is that the easiest

156
00:06:10,959 --> 00:06:17,909
way to do that is to switch to the asset

157
00:06:15,579 --> 00:06:21,430
Packer there we go

158
00:06:17,910 --> 00:06:24,939
switch to the asset Packer and actually

159
00:06:21,430 --> 00:06:26,470
just set a breakpoint and stop when

160
00:06:24,939 --> 00:06:27,819
we're actually processing the space so

161
00:06:26,470 --> 00:06:31,150
you know we could do something like this

162
00:06:27,819 --> 00:06:38,579
where we set a condition on this break

163
00:06:31,149 --> 00:06:41,579
point which is that code point equals

164
00:06:38,579 --> 00:06:41,579
space

165
00:06:46,430 --> 00:06:54,889
or not hmm well

166
00:07:00,168 --> 00:07:06,549
is code-point not done that way is it

167
00:07:04,069 --> 00:07:13,039
not capitalized or something no it is

168
00:07:06,550 --> 00:07:18,310
huh all right well I'm gonna go a little

169
00:07:13,038 --> 00:07:23,028
bit further down that road then and say

170
00:07:18,310 --> 00:07:28,069
inside test asset builder CPP I'll stop

171
00:07:23,028 --> 00:07:34,430
manually in that case if code point

172
00:07:28,069 --> 00:07:38,569
equals space into y equals three so now

173
00:07:34,430 --> 00:07:40,400
I can set a break point there well it

174
00:07:38,569 --> 00:07:42,588
turns out it probably is what I thought

175
00:07:40,399 --> 00:07:48,528
it was which is to say that the space is

176
00:07:42,588 --> 00:07:50,740
not running but oh snap it's because

177
00:07:48,528 --> 00:07:53,718
there's another reason it might not run

178
00:07:50,740 --> 00:07:56,408
space contains no characters so it's

179
00:07:53,718 --> 00:08:00,620
glyph will never get packed

180
00:07:56,408 --> 00:08:06,459
oops looks like this has to happen

181
00:08:00,620 --> 00:08:09,168
outside well so I had the right cause

182
00:08:06,459 --> 00:08:12,588
but I didn't actually implement the fix

183
00:08:09,168 --> 00:08:14,538
properly as it turns out so there we go

184
00:08:12,588 --> 00:08:20,228
oops that's the asset builder wanted to

185
00:08:14,538 --> 00:08:23,568
run handmade here Oh yep there we go

186
00:08:20,228 --> 00:08:25,490
although we know still not quite right

187
00:08:23,569 --> 00:08:28,039
where is our little where's our little

188
00:08:25,490 --> 00:08:30,588
baby guy where is the little dude

189
00:08:28,038 --> 00:08:34,578
normally comes right here right it's

190
00:08:30,588 --> 00:08:37,908
debug space cycle space and there's

191
00:08:34,578 --> 00:08:39,799
nothing there's nothing there so is

192
00:08:37,908 --> 00:08:41,360
there some kind of really nasty big

193
00:08:39,799 --> 00:08:43,818
value that's wrong in there or something

194
00:08:41,360 --> 00:08:48,649
like that that we need to pay closer

195
00:08:43,818 --> 00:08:51,049
attention to let's see here care

196
00:08:48,649 --> 00:08:53,269
advanced crooning change that's that's

197
00:08:51,049 --> 00:08:57,019
probably not okay that's that's just

198
00:08:53,269 --> 00:09:04,278
uninitialized garbage there right so if

199
00:08:57,019 --> 00:09:07,039
we want what we probably want to do is

200
00:09:04,278 --> 00:09:11,299
set this only if we actually right we

201
00:09:07,039 --> 00:09:13,549
won't we won't change the kerning if

202
00:09:11,299 --> 00:09:17,179
there was no actual

203
00:09:13,549 --> 00:09:18,559
to change but we will otherwise so that

204
00:09:17,179 --> 00:09:20,419
way it's just gonna be care advance

205
00:09:18,559 --> 00:09:23,208
it'll be minus zero and it won't update

206
00:09:20,419 --> 00:09:25,399
this so that seems a little bit better

207
00:09:23,208 --> 00:09:27,528
so we see you see what happened there

208
00:09:25,399 --> 00:09:30,679
that was just like some cut and paste

209
00:09:27,528 --> 00:09:33,470
Croft there we go alright so I think

210
00:09:30,679 --> 00:09:35,778
that's probably most ly all we would

211
00:09:33,470 --> 00:09:39,320
need to do for fixing spaces they that

212
00:09:35,778 --> 00:09:41,028
looks fine I wonder are they big enough

213
00:09:39,320 --> 00:09:42,769
though we should I guess we should

214
00:09:41,028 --> 00:09:45,679
double check against the thing to make

215
00:09:42,769 --> 00:09:52,789
sure that we're actually parsing those

216
00:09:45,679 --> 00:09:57,769
okay debug cycle and w8 ah that looks

217
00:09:52,789 --> 00:10:01,659
about right that looks pretty close so

218
00:09:57,769 --> 00:10:12,200
looks like we're handling the spaces now

219
00:10:01,659 --> 00:10:14,588
pretty well okay so there we go that's

220
00:10:12,200 --> 00:10:14,589
where we're at

221
00:10:17,049 --> 00:10:21,500
you know what I have one other thing I

222
00:10:18,830 --> 00:10:24,800
want Chuck because we're gonna start

223
00:10:21,500 --> 00:10:26,690
doing language stuff here I want I want

224
00:10:24,799 --> 00:10:30,829
that Tokyo I was doing Tokyo they're

225
00:10:26,690 --> 00:10:34,370
right I think what I was doing maybe we

226
00:10:30,830 --> 00:10:42,730
should do something more appropriate to

227
00:10:34,370 --> 00:10:42,730
handmade to handmade hero like you know

228
00:10:42,850 --> 00:10:54,040
something like let's see search

229
00:10:56,049 --> 00:11:04,569
short-eared owl long eared owl burrowing

230
00:10:59,960 --> 00:11:07,300
owl Eurasian east eagle owl snowy owl

231
00:11:04,570 --> 00:11:11,570
great horned owl I think we're gonna go

232
00:11:07,299 --> 00:11:12,459
with this guy a short-eared owl looks

233
00:11:11,570 --> 00:11:15,740
good to me

234
00:11:12,460 --> 00:11:19,610
right a short year owl of shame of

235
00:11:15,740 --> 00:11:23,360
course so let's go ahead and put that in

236
00:11:19,610 --> 00:11:26,060
there and so what I'd like to do is I'd

237
00:11:23,360 --> 00:11:28,850
like to get it so that we know like what

238
00:11:26,059 --> 00:11:29,839
these code points are right because I

239
00:11:28,850 --> 00:11:31,370
don't know what they are and I'm not

240
00:11:29,840 --> 00:11:33,950
really sure if windows provides a good

241
00:11:31,370 --> 00:11:35,389
way to do it so I I want to do two

242
00:11:33,950 --> 00:11:38,240
things first of all I want to verify

243
00:11:35,389 --> 00:11:41,210
that these are actually in Ariel so

244
00:11:38,240 --> 00:11:43,279
Ariel actually has does it actually have

245
00:11:41,210 --> 00:11:44,990
all these I don't even know right I have

246
00:11:43,279 --> 00:11:46,189
no idea if it does or if it doesn't so

247
00:11:44,990 --> 00:11:48,230
what I'm going to do is I'm gonna pick

248
00:11:46,190 --> 00:11:51,110
some random stupid font that probably

249
00:11:48,230 --> 00:11:54,440
wouldn't and do it okay so it looks like

250
00:11:51,110 --> 00:11:58,159
Ariel does actually have those guys too

251
00:11:54,440 --> 00:11:59,960
at least it would appear because when I

252
00:11:58,159 --> 00:12:02,389
select some other font those go to

253
00:11:59,960 --> 00:12:04,340
nothing so I'm assuming that if we stick

254
00:12:02,389 --> 00:12:08,600
with Ariel we will actually be able to

255
00:12:04,340 --> 00:12:12,920
get some characters from the kanji out

256
00:12:08,600 --> 00:12:15,019
bet so let's find out what these code

257
00:12:12,919 --> 00:12:22,189
points are because I don't know code

258
00:12:15,019 --> 00:12:23,799
point uh let's see here where is thick

259
00:12:22,190 --> 00:12:29,190
there was like a code point lookup tool

260
00:12:23,799 --> 00:12:32,669
code point look up tool or tall or just

261
00:12:29,190 --> 00:12:36,509
fine doesn't matter don't worry about it

262
00:12:32,669 --> 00:12:40,169
so if we cut and paste this in here give

263
00:12:36,509 --> 00:12:43,800
me give me to look up okay so that's it

264
00:12:40,169 --> 00:12:46,318
five c0f so I'm just going to manually

265
00:12:43,799 --> 00:12:50,338
enter these in at the moment

266
00:12:46,318 --> 00:12:51,899
so let's see here handmade CPP and I'm

267
00:12:50,339 --> 00:12:54,379
just gonna make like a little note here

268
00:12:51,899 --> 00:13:12,679
for when we need them

269
00:12:54,379 --> 00:13:12,680
five c0f whatever this is a t-33 and

270
00:13:22,490 --> 00:13:26,539
sixty seven twenty eight

271
00:13:31,840 --> 00:13:35,050
last one

272
00:13:37,299 --> 00:13:49,329
five one four II okay so now we just

273
00:13:46,720 --> 00:13:53,009
we've got some semblance and you know

274
00:13:49,330 --> 00:14:03,550
what I'm gonna save this guy save as

275
00:13:53,009 --> 00:14:06,490
desktop kanji owl dot txt Hey

276
00:14:03,549 --> 00:14:07,078
oops okay sorry it didn't mean to do

277
00:14:06,490 --> 00:14:09,730
that

278
00:14:07,078 --> 00:14:13,559
yeah encoding

279
00:14:09,730 --> 00:14:21,339
let's do utf-8 why not

280
00:14:13,559 --> 00:14:24,759
desktop kanji owl all right so now we've

281
00:14:21,339 --> 00:14:39,640
got our kanji owl SPECT out and there we

282
00:14:24,759 --> 00:14:41,740
go okay so what do we do now let's talk

283
00:14:39,639 --> 00:14:44,379
about this because we got problems as

284
00:14:41,740 --> 00:14:51,899
you can see there are problems right

285
00:14:44,379 --> 00:14:54,730
this is our kanji owl we've got problems

286
00:14:51,899 --> 00:14:57,970
so as you can see from this right here

287
00:14:54,730 --> 00:15:00,129
the span of these characters is pretty

288
00:14:57,970 --> 00:15:01,570
massive right and so if we were going to

289
00:15:00,129 --> 00:15:05,169
use any kind of direct look-up tables

290
00:15:01,570 --> 00:15:07,720
it's gonna be pretty ugly right they'd

291
00:15:05,169 --> 00:15:09,669
be just too huge we're at least got a

292
00:15:07,720 --> 00:15:11,680
span between five and eight so we're

293
00:15:09,669 --> 00:15:14,828
gonna span at least three and the upper

294
00:15:11,679 --> 00:15:19,028
thing there which is you know shift up

295
00:15:14,828 --> 00:15:20,948
by 12 bits so that's just it's too much

296
00:15:19,028 --> 00:15:23,169
right we don't want to store a to you

297
00:15:20,948 --> 00:15:27,219
lookup table for kerning at that size

298
00:15:23,169 --> 00:15:31,240
certainly and so that's just not it's

299
00:15:27,220 --> 00:15:33,940
not a good scene furthermore even our 1d

300
00:15:31,240 --> 00:15:35,980
table would be pretty crazy because our

301
00:15:33,940 --> 00:15:42,209
1d table would have to go all the way up

302
00:15:35,980 --> 00:15:46,139
to a t-33 right which is quite high

303
00:15:42,208 --> 00:15:49,000
here's me pasting an individual studio

304
00:15:46,139 --> 00:15:50,769
that's a 30 mm entry table

305
00:15:49,000 --> 00:15:52,239
now the

306
00:15:50,769 --> 00:15:54,220
total number of Japanese symbols we'd

307
00:15:52,239 --> 00:15:55,509
probably need to represent the items in

308
00:15:54,220 --> 00:15:58,059
our game is probably going to be like

309
00:15:55,509 --> 00:15:59,919
five hundred or something right so we'd

310
00:15:58,058 --> 00:16:02,139
be storing a thirty two thousand entry

311
00:15:59,919 --> 00:16:04,778
table to store five hundred things and

312
00:16:02,139 --> 00:16:09,298
that's kind of ridiculous right because

313
00:16:04,778 --> 00:16:09,298
almost every entry in it would be zero

314
00:16:10,678 --> 00:16:21,220
so we're going to need some way of

315
00:16:14,558 --> 00:16:22,749
condensing our our stuff right we're

316
00:16:21,220 --> 00:16:25,149
gonna need some way of condensing down

317
00:16:22,749 --> 00:16:26,649
if there's only 500 symbols that get

318
00:16:25,149 --> 00:16:28,928
used we're gonna want to condense down

319
00:16:26,649 --> 00:16:30,778
to things that are only of the order 500

320
00:16:28,928 --> 00:16:37,389
and not things that are of the order of

321
00:16:30,778 --> 00:16:40,808
32,000 right so how do we do that right

322
00:16:37,389 --> 00:16:44,318
what are we actually gonna do what do we

323
00:16:40,808 --> 00:16:47,019
actually undo to fix that well let's

324
00:16:44,318 --> 00:16:52,659
start with the easier problem which is

325
00:16:47,019 --> 00:16:54,249
just the 1d lookup okay so obviously if

326
00:16:52,659 --> 00:16:56,889
we wanted to store this in a very

327
00:16:54,249 --> 00:17:02,920
straightforward fashion and let me put

328
00:16:56,889 --> 00:17:03,789
the day number down here if we wanted to

329
00:17:02,919 --> 00:17:06,490
store this in a very straightforward

330
00:17:03,789 --> 00:17:09,338
fashion right we would just do something

331
00:17:06,490 --> 00:17:11,109
like okay right now we just had a flat

332
00:17:09,338 --> 00:17:14,220
array and we assumed what the numbers

333
00:17:11,109 --> 00:17:18,038
were so we had something like you know

334
00:17:14,220 --> 00:17:21,909
ABCDE and so on and we just assumed that

335
00:17:18,038 --> 00:17:24,730
like it was like 0 1 2 3 4 right and

336
00:17:21,909 --> 00:17:27,278
that would work for any contiguous set

337
00:17:24,730 --> 00:17:29,169
of things in fact even if this is not 0

338
00:17:27,278 --> 00:17:31,808
if we want to condense down the fact

339
00:17:29,169 --> 00:17:34,960
that we know we don't really need 0 you

340
00:17:31,808 --> 00:17:36,759
know because we started at like 33 was

341
00:17:34,960 --> 00:17:38,710
our first character or something storing

342
00:17:36,759 --> 00:17:40,269
an offset of 33 would totally condense

343
00:17:38,710 --> 00:17:42,278
that down because we pretty much had a

344
00:17:40,269 --> 00:17:44,138
fully dense range of characters in the

345
00:17:42,278 --> 00:17:45,579
ANSI set all of them were ones we

346
00:17:44,138 --> 00:17:48,009
probably would have used so we could

347
00:17:45,579 --> 00:17:50,319
just store a 33 over 2 tilde and be done

348
00:17:48,009 --> 00:17:51,730
right and now be perfectly compact and

349
00:17:50,319 --> 00:17:56,138
all the information would be nice and

350
00:17:51,730 --> 00:17:58,048
it's fine and whatever however once we

351
00:17:56,138 --> 00:18:01,658
start having things that look like oh

352
00:17:58,048 --> 00:18:04,750
12,000 you know 3 or whatever and then

353
00:18:01,659 --> 00:18:07,270
the next one is like you know 15,000 for

354
00:18:04,750 --> 00:18:09,279
seventy-two there's this giant gaps in

355
00:18:07,269 --> 00:18:11,410
between things and this no longer the

356
00:18:09,279 --> 00:18:13,029
assumed thing no longer works so the

357
00:18:11,410 --> 00:18:14,350
easiest thing to do if we didn't care

358
00:18:13,029 --> 00:18:16,059
about how long it would take us to look

359
00:18:14,349 --> 00:18:19,089
up right the easiest thing to do would

360
00:18:16,059 --> 00:18:21,279
be to just make the table enclose the

361
00:18:19,089 --> 00:18:23,439
numbers as well so instead of implying

362
00:18:21,279 --> 00:18:25,420
the index we would just store the index

363
00:18:23,440 --> 00:18:27,759
so we essentially tag each thing with

364
00:18:25,420 --> 00:18:37,180
its actual code point right or whatever

365
00:18:27,759 --> 00:18:42,250
it was and be done with it then when we

366
00:18:37,180 --> 00:18:44,580
have a string like fubar we know we can

367
00:18:42,250 --> 00:18:47,980
just go ahead and look up into the table

368
00:18:44,579 --> 00:18:49,179
whenever you see F we go find the code

369
00:18:47,980 --> 00:18:51,819
point for F you know I don't know

370
00:18:49,180 --> 00:18:53,799
whatever it is it's 37 or something I

371
00:18:51,819 --> 00:18:56,500
don't remember remember 39 who knows I

372
00:18:53,799 --> 00:18:58,000
have no idea we go find where 39 s in

373
00:18:56,500 --> 00:18:59,799
the table by searching through it and

374
00:18:58,000 --> 00:19:01,630
then we pick the letter now we could do

375
00:18:59,799 --> 00:19:02,829
a faster search than linear potentially

376
00:19:01,630 --> 00:19:04,300
we could do like a binary search

377
00:19:02,829 --> 00:19:05,619
potentially although sometimes binary

378
00:19:04,299 --> 00:19:07,029
searches are kind of slow because it's

379
00:19:05,619 --> 00:19:11,469
unpredictable cash wise and all these

380
00:19:07,029 --> 00:19:13,089
other nonsense things but in this case I

381
00:19:11,470 --> 00:19:14,140
like in fact good case point being we

382
00:19:13,089 --> 00:19:15,069
could do a binary search going to

383
00:19:14,140 --> 00:19:17,950
accelerate so we don't have to visit

384
00:19:15,069 --> 00:19:19,389
every single item but we would still

385
00:19:17,950 --> 00:19:24,610
have to do some kind of a search there

386
00:19:19,390 --> 00:19:28,270
right now probably that's the kind of

387
00:19:24,609 --> 00:19:30,069
thing we would have to do if this were a

388
00:19:28,269 --> 00:19:32,170
game that allowed you to like enter text

389
00:19:30,069 --> 00:19:34,799
right if this were a game that would

390
00:19:32,170 --> 00:19:37,390
allow you to like you type text into it

391
00:19:34,799 --> 00:19:39,639
because if you can type text into it

392
00:19:37,390 --> 00:19:42,340
then you can enter whatever you want and

393
00:19:39,640 --> 00:19:46,330
we have to be able to convert whatever

394
00:19:42,339 --> 00:19:50,799
you enter right into something that we

395
00:19:46,329 --> 00:19:54,000
recognize however in the case where we

396
00:19:50,799 --> 00:19:57,869
actually the strings our hours

397
00:19:54,000 --> 00:20:00,880
originally right we created the strings

398
00:19:57,869 --> 00:20:02,349
then one thing that an option that

399
00:20:00,880 --> 00:20:04,780
exists for us that would not exist

400
00:20:02,349 --> 00:20:08,379
otherwise is we can actually pre process

401
00:20:04,779 --> 00:20:11,079
the strings instead to map them into a

402
00:20:08,380 --> 00:20:13,840
pre-collapse set of gifts of tables

403
00:20:11,079 --> 00:20:15,939
rather right so if we have this and we

404
00:20:13,839 --> 00:20:18,519
say we're going to map that to 0 and

405
00:20:15,940 --> 00:20:21,039
that to 1 and something to 2 right

406
00:20:18,519 --> 00:20:24,039
then we go in as we see oh when someone

407
00:20:21,039 --> 00:20:26,109
uses code point you know 12000 0 0 3 in

408
00:20:24,039 --> 00:20:29,139
a string we just go through the mapping

409
00:20:26,109 --> 00:20:32,859
table map it to something and then

410
00:20:29,140 --> 00:20:37,360
output the 0 instead right of the actual

411
00:20:32,859 --> 00:20:39,490
number and so for this game it would

412
00:20:37,359 --> 00:20:43,029
seem like that's probably the smartest

413
00:20:39,490 --> 00:20:44,529
thing to do actually right that seems

414
00:20:43,029 --> 00:20:46,660
like a much easier way to go because

415
00:20:44,529 --> 00:20:48,549
then we would never have to do anything

416
00:20:46,660 --> 00:20:50,290
expensive at runtime it's always direct

417
00:20:48,549 --> 00:20:58,200
lookup and the tables are always

418
00:20:50,289 --> 00:21:04,089
maximally tiny so the cost is you can't

419
00:20:58,200 --> 00:21:10,110
you can't generate new strings at

420
00:21:04,089 --> 00:21:16,259
runtime however even that is not

421
00:21:10,109 --> 00:21:16,259
necessarily true we could also write

422
00:21:16,980 --> 00:21:29,019
ship some kind of a compressed table so

423
00:21:21,730 --> 00:21:33,009
oh wait maybe this is just a smarter

424
00:21:29,019 --> 00:21:34,000
thing to do in general yeah this is

425
00:21:33,009 --> 00:21:37,119
probably the smart of thing to do

426
00:21:34,000 --> 00:21:41,559
general huh all right so I might be a

427
00:21:37,119 --> 00:21:43,149
little bit stupid okay that's true let's

428
00:21:41,559 --> 00:21:44,769
not harp on it all right why do you you

429
00:21:43,150 --> 00:21:46,960
know why do you even bring that up you

430
00:21:44,769 --> 00:21:50,470
know why would you go ahead and bring

431
00:21:46,960 --> 00:21:51,789
that up are you trying to hurt my

432
00:21:50,470 --> 00:21:53,380
feelings because this is not polite

433
00:21:51,789 --> 00:21:54,849
right you know I'm trying to sing this

434
00:21:53,380 --> 00:21:56,500
I'm doing this for you at the end of the

435
00:21:54,849 --> 00:21:58,059
day you know you shouldn't call me

436
00:21:56,500 --> 00:22:00,730
stupid right like in the middle of that

437
00:21:58,059 --> 00:22:04,419
you know it's impolite really is what

438
00:22:00,730 --> 00:22:06,250
I'm saying so rather than do that why

439
00:22:04,420 --> 00:22:08,289
would we bother doing that when instead

440
00:22:06,250 --> 00:22:11,259
what we could do is just have one 64k

441
00:22:08,289 --> 00:22:15,099
table right says you've okay entry table

442
00:22:11,259 --> 00:22:18,460
so C 4 K 2 so 128 K table we could just

443
00:22:15,099 --> 00:22:20,529
have one 128 K table or rather that goes

444
00:22:18,460 --> 00:22:23,590
up to whatever our maximum code point is

445
00:22:20,529 --> 00:22:25,839
and then in there we just store for the

446
00:22:23,589 --> 00:22:28,439
currently selected font where it

447
00:22:25,839 --> 00:22:28,439
actually Maps

448
00:22:28,970 --> 00:22:34,210
that would actually be pretty darn easy

449
00:22:37,990 --> 00:22:45,950
then you can just enter text all you

450
00:22:40,038 --> 00:22:48,019
want right and nobody cares so that

451
00:22:45,950 --> 00:22:51,019
seems like it's probably a smarter way

452
00:22:48,019 --> 00:22:53,418
to go so let's go that way

453
00:22:51,019 --> 00:23:01,579
I think that pretty much just answers it

454
00:22:53,419 --> 00:23:03,860
right there yeah seems easy seems really

455
00:23:01,579 --> 00:23:07,069
trivial to me if anyone has any

456
00:23:03,859 --> 00:23:12,139
objections you could voice them in the

457
00:23:07,069 --> 00:23:16,279
chat and I hereby overrule them all

458
00:23:12,140 --> 00:23:21,130
right so let's take a look let's take a

459
00:23:16,279 --> 00:23:24,918
look at what would happen there so hmm

460
00:23:21,130 --> 00:23:26,750
really not much has to change not much

461
00:23:24,919 --> 00:23:30,169
has to change folks if you want to do

462
00:23:26,750 --> 00:23:35,750
that so if we go in here and we take a

463
00:23:30,169 --> 00:23:39,590
look at our file format so really we

464
00:23:35,750 --> 00:23:42,890
only need one thing a very very simple

465
00:23:39,589 --> 00:23:47,418
thing which is that in our table of

466
00:23:42,890 --> 00:23:50,780
bitmap id's we've got that yeah right

467
00:23:47,419 --> 00:23:52,370
here in our table of bitmap IDs what we

468
00:23:50,779 --> 00:23:53,960
actually need to store is something

469
00:23:52,369 --> 00:23:57,639
slightly more complicated than a bitmap

470
00:23:53,960 --> 00:24:00,798
ID we need a code point plus a bitmap ID

471
00:23:57,640 --> 00:24:01,788
right so we just need something that's

472
00:24:00,798 --> 00:24:05,808
like you know

473
00:24:01,788 --> 00:24:07,970
HHA font code point or something like

474
00:24:05,808 --> 00:24:11,889
that and it just says like here's the

475
00:24:07,970 --> 00:24:15,200
code point and then here's the bitmap ID

476
00:24:11,890 --> 00:24:19,820
you know and then now when we store this

477
00:24:15,200 --> 00:24:23,058
we just say oh okay this entry in the

478
00:24:19,819 --> 00:24:25,428
table whatever entry it is represents

479
00:24:23,058 --> 00:24:30,579
this code point in Unicode right so this

480
00:24:25,429 --> 00:24:34,038
is the the unicode code point and then

481
00:24:30,579 --> 00:24:37,539
this is the bitmap this is the bitmap ID

482
00:24:34,038 --> 00:24:40,150
for that that's it

483
00:24:37,539 --> 00:24:43,569
so then when we load the font in if we

484
00:24:40,150 --> 00:24:47,740
want to use the font we just unpack that

485
00:24:43,569 --> 00:24:50,829
table basically into into we decompress

486
00:24:47,740 --> 00:24:55,200
this into into a table that's actually

487
00:24:50,829 --> 00:24:57,809
direct lookup and that's the end of it I

488
00:24:55,200 --> 00:25:02,700
really don't think there's anything else

489
00:24:57,809 --> 00:25:06,809
there's nothing else to be done I yeah

490
00:25:02,700 --> 00:25:06,809
can't think of anything else anyway I

491
00:25:10,980 --> 00:25:15,640
felt like this was gonna be harder than

492
00:25:12,970 --> 00:25:16,450
this I wonder if I'm just forgetting

493
00:25:15,640 --> 00:25:20,440
something

494
00:25:16,450 --> 00:25:22,960
I guess now the memory starts deep when

495
00:25:20,440 --> 00:25:26,590
you can have 128 K table things get a

496
00:25:22,960 --> 00:25:28,750
lot easier on you I suppose maybe that's

497
00:25:26,589 --> 00:25:32,169
maybe that's the lesson learned I don't

498
00:25:28,750 --> 00:25:34,930
know anyway let's keep going so if I go

499
00:25:32,170 --> 00:25:36,279
into the test asset builder and now I'm

500
00:25:34,930 --> 00:25:40,269
going to go ahead and change that so

501
00:25:36,279 --> 00:25:41,710
we've got the bitmap ID here and I'm

502
00:25:40,269 --> 00:25:45,639
gonna go ahead and change that over to

503
00:25:41,710 --> 00:25:52,559
being an HHH HHH a font code point like

504
00:25:45,640 --> 00:25:52,560
so then when I come through here

505
00:25:57,739 --> 00:26:04,700
no that's fine yeah so when I come

506
00:26:02,098 --> 00:26:07,618
through here and write our bitmap IDs I

507
00:26:04,700 --> 00:26:10,019
need to do a few things first of all the

508
00:26:07,618 --> 00:26:13,228
bitmap ID size is actually not going to

509
00:26:10,019 --> 00:26:20,388
be that anymore it's going to be one of

510
00:26:13,229 --> 00:26:24,169
these guys so AJ font code point yeah

511
00:26:20,388 --> 00:26:24,168
and then

512
00:26:24,690 --> 00:26:29,028
I don't know that there's really a whole

513
00:26:26,548 --> 00:26:31,858
lot else we need to do other than set it

514
00:26:29,028 --> 00:26:35,339
so when we do this we just have add

515
00:26:31,858 --> 00:26:37,378
character asset will have that actually

516
00:26:35,339 --> 00:26:41,009
returned one of those instead so we can

517
00:26:37,378 --> 00:26:47,128
still even use this this exact format in

518
00:26:41,009 --> 00:26:49,679
fact although now I think about this

519
00:26:47,128 --> 00:26:51,028
gets even simpler so yeah I guess we

520
00:26:49,679 --> 00:26:55,798
don't even really do that here's what we

521
00:26:51,028 --> 00:26:59,489
would do we would do code point or local

522
00:26:55,798 --> 00:27:05,658
index right and then what we do is we'd

523
00:26:59,489 --> 00:27:08,639
set that one yeah we would set that one

524
00:27:05,659 --> 00:27:11,820
each time through so we do something

525
00:27:08,638 --> 00:27:16,019
like this let's see let's see we would

526
00:27:11,819 --> 00:27:18,168
do HHH font code point and this would be

527
00:27:16,019 --> 00:27:20,909
this the code point thing or whatever

528
00:27:18,169 --> 00:27:29,220
Copley's that's not the right name what

529
00:27:20,909 --> 00:27:34,259
do we call that font I guess it's just a

530
00:27:29,220 --> 00:27:37,919
glyph I don't know we're gonna call it a

531
00:27:34,259 --> 00:27:41,940
glyph okay so if I come in here and I

532
00:27:37,919 --> 00:27:47,580
grab that out and I just say twits or

533
00:27:41,940 --> 00:27:53,700
something who knows so I grab out the

534
00:27:47,579 --> 00:27:55,678
glyph the bitmap ID that goes with it we

535
00:27:53,700 --> 00:28:01,139
get that the code point that goes with

536
00:27:55,679 --> 00:28:06,139
it I know already right it's this like

537
00:28:01,138 --> 00:28:10,738
so and I think that's just about it

538
00:28:06,138 --> 00:28:16,439
right and so the actual character range

539
00:28:10,739 --> 00:28:20,848
for this thing it's kind of a little

540
00:28:16,440 --> 00:28:24,179
confusing because it includes the space

541
00:28:20,848 --> 00:28:26,038
but that's okay right and so what we

542
00:28:24,179 --> 00:28:30,059
would have to do here is we'd have to

543
00:28:26,038 --> 00:28:33,749
say you know we'd want to do essentially

544
00:28:30,058 --> 00:28:35,819
this operation for the space as well

545
00:28:33,749 --> 00:28:37,259
which is kind of a little bit annoying I

546
00:28:35,819 --> 00:28:38,339
guess we could just a copy and

547
00:28:37,259 --> 00:28:40,769
paste it who cares

548
00:28:38,339 --> 00:28:43,589
right at some level this is like I said

549
00:28:40,769 --> 00:28:47,220
this can throw away code in this in this

550
00:28:43,589 --> 00:28:50,759
asset processor so yeah we could just do

551
00:28:47,220 --> 00:28:53,130
it that way right we could even go a

552
00:28:50,759 --> 00:28:57,119
little bit further here and do that if

553
00:28:53,130 --> 00:28:58,110
we were feeling particularly enamored

554
00:28:57,119 --> 00:29:02,579
with ourselves

555
00:28:58,109 --> 00:29:04,349
right and you know what we could do

556
00:29:02,579 --> 00:29:06,689
something else too we could we could do

557
00:29:04,349 --> 00:29:08,548
something even more ridiculous you know

558
00:29:06,690 --> 00:29:10,950
I say that throw away code and then I go

559
00:29:08,548 --> 00:29:12,538
and do these things that's just that's

560
00:29:10,950 --> 00:29:16,558
how you know that you're kind of a

561
00:29:12,538 --> 00:29:18,148
programmer a sort of person I guess yeah

562
00:29:16,558 --> 00:29:20,759
what are you gonna do anyway

563
00:29:18,148 --> 00:29:22,648
inside here we actually could just do

564
00:29:20,759 --> 00:29:26,599
that part of it now that I think about

565
00:29:22,648 --> 00:29:31,288
it right we could just do this in here

566
00:29:26,599 --> 00:29:34,469
so we take the glyph for that font we

567
00:29:31,288 --> 00:29:36,390
take the debug font itself and do you

568
00:29:34,470 --> 00:29:40,919
know something like okay debug font

569
00:29:36,390 --> 00:29:42,778
glyphs debug font you know glyph count

570
00:29:40,919 --> 00:29:46,860
or something like that and we increment

571
00:29:42,778 --> 00:29:49,829
that we assert ahead of time that the

572
00:29:46,859 --> 00:29:53,119
glyph count is less than the max lift

573
00:29:49,829 --> 00:29:55,849
count or something like this you know

574
00:29:53,119 --> 00:30:01,859
and then this stuff gets written in

575
00:29:55,849 --> 00:30:09,319
automatically and yeah and then the

576
00:30:01,859 --> 00:30:09,319
bitmap ID just gets set just get set

577
00:30:10,509 --> 00:30:21,099
like that right then we don't care about

578
00:30:17,740 --> 00:30:24,700
this anymore and we don't care about

579
00:30:21,099 --> 00:30:30,730
this anymore and we don't care about any

580
00:30:24,700 --> 00:30:36,970
of this we just say we want that and we

581
00:30:30,730 --> 00:30:46,900
want these please give them to us and we

582
00:30:36,970 --> 00:30:48,460
won't you know shoot the hostage we'll

583
00:30:46,900 --> 00:30:52,120
be the bigger man and not shoot the

584
00:30:48,460 --> 00:30:54,669
hostage okay so if we do something like

585
00:30:52,119 --> 00:30:57,189
that which makes this much cleaner right

586
00:30:54,669 --> 00:31:00,150
it also means that I can go ahead and

587
00:30:57,190 --> 00:31:02,529
add you know we can sort of see in fact

588
00:31:00,150 --> 00:31:05,140
exactly what I'm gonna add here in a

589
00:31:02,529 --> 00:31:07,839
second right you can imagine our kanji

590
00:31:05,140 --> 00:31:10,750
owl our kanji owl is gonna be something

591
00:31:07,839 --> 00:31:14,589
that would do you know something like

592
00:31:10,750 --> 00:31:16,509
this begin asset type font lift write

593
00:31:14,589 --> 00:31:18,250
add character asset and then we would

594
00:31:16,509 --> 00:31:22,450
literally just add the ones that we

595
00:31:18,250 --> 00:31:24,669
wanted right in fact now I think about

596
00:31:22,450 --> 00:31:27,730
it we could do that right inside here in

597
00:31:24,669 --> 00:31:29,710
fact I'm just gonna do it right who's

598
00:31:27,730 --> 00:31:31,929
gonna stop me no one's gonna stop me you

599
00:31:29,710 --> 00:31:33,789
can't really stop me that's the thing

600
00:31:31,929 --> 00:31:36,940
right it'd be really difficult to stop

601
00:31:33,789 --> 00:31:40,240
me because at this point probably even

602
00:31:36,940 --> 00:31:42,250
on the twitch stream yours is the lag is

603
00:31:40,240 --> 00:31:44,200
such that by the time you hear this I

604
00:31:42,250 --> 00:31:46,329
will already have actually typed it so

605
00:31:44,200 --> 00:31:48,360
even if you could somehow stop me you

606
00:31:46,329 --> 00:31:51,129
wouldn't have known in time to stop me

607
00:31:48,359 --> 00:31:56,409
that's the thing right that's the best

608
00:31:51,130 --> 00:32:02,020
the whole the whole situation I'm gonna

609
00:31:56,410 --> 00:32:06,759
go ahead and say kanji owl right because

610
00:32:02,019 --> 00:32:09,910
it is anyway so there's our kanji owl

611
00:32:06,759 --> 00:32:10,808
and now we can just add code points to

612
00:32:09,910 --> 00:32:14,798
our hearts content

613
00:32:10,808 --> 00:32:16,539
yeah and so what we need to do now is we

614
00:32:14,798 --> 00:32:19,418
need to back out the use of the

615
00:32:16,539 --> 00:32:22,450
character which is not really so

616
00:32:19,419 --> 00:32:23,509
interesting anymore and start using the

617
00:32:22,450 --> 00:32:25,789
index

618
00:32:23,509 --> 00:32:28,279
of the character everywhere that we were

619
00:32:25,789 --> 00:32:30,829
doing our addressing so we do have a

620
00:32:28,279 --> 00:32:34,839
bunch of work to do but it is not hard

621
00:32:30,829 --> 00:32:37,970
work it's just sort of mechanical right

622
00:32:34,839 --> 00:32:39,470
because if you look in here well so

623
00:32:37,970 --> 00:32:45,529
we'll also do a thing here which is just

624
00:32:39,470 --> 00:32:51,980
like right max code point cap or max

625
00:32:45,529 --> 00:32:54,289
whip count max with count equals I don't

626
00:32:51,980 --> 00:32:59,809
know nobody better make a font with more

627
00:32:54,289 --> 00:33:02,420
than 5,000 characters in it note KC 5000

628
00:32:59,809 --> 00:33:07,609
characters should be more than enough

629
00:33:02,420 --> 00:33:15,230
for anybody right and you know it's true

630
00:33:07,609 --> 00:33:16,849
you know what let's make it 64 K because

631
00:33:15,230 --> 00:33:18,680
that's close to 600 40k I don't want to

632
00:33:16,849 --> 00:33:20,509
do 640k because that actually is more

633
00:33:18,680 --> 00:33:21,590
than enough for anybody so I wanna do

634
00:33:20,509 --> 00:33:27,190
something that's actually kind of

635
00:33:21,589 --> 00:33:29,419
slightly comically low right 64 okay

636
00:33:27,190 --> 00:33:31,940
should be more than enough for anybody

637
00:33:29,420 --> 00:33:33,920
right I mean can you imagine a situation

638
00:33:31,940 --> 00:33:36,170
where you would need any more than that

639
00:33:33,920 --> 00:33:39,289
I can't right

640
00:33:36,170 --> 00:33:42,130
and so yeah is that gonna be too much

641
00:33:39,289 --> 00:33:46,759
will that blow out anything 640 by 1024

642
00:33:42,130 --> 00:33:48,950
x 640 x 1024 that's too big that's still

643
00:33:46,759 --> 00:33:51,289
too big that's gonna be like too big for

644
00:33:48,950 --> 00:33:53,450
the table all right so I'm gonna I'm

645
00:33:51,289 --> 00:33:57,230
gonna actually say it's just five

646
00:33:53,450 --> 00:34:01,660
thousand five thousand quid to two

647
00:33:57,230 --> 00:34:05,900
thousand two thousand three thousand I

648
00:34:01,660 --> 00:34:08,030
don't know how many we want calc three

649
00:34:05,900 --> 00:34:11,059
thousand times three thousand nine

650
00:34:08,030 --> 00:34:13,670
megabytes totally fine five thousand

651
00:34:11,059 --> 00:34:18,699
times five thousand right 25 megabytes

652
00:34:13,670 --> 00:34:18,700
not a problem so I'll let it go up there

653
00:34:19,449 --> 00:34:26,069
there we go

654
00:34:21,840 --> 00:34:29,280
all right so now that we've gotten that

655
00:34:26,070 --> 00:34:32,420
crucial thing out of the way I'm gonna

656
00:34:29,280 --> 00:34:35,310
go ahead and set some stuff up here

657
00:34:32,420 --> 00:34:41,269
which is to say that I guess we got

658
00:34:35,309 --> 00:34:44,309
loaded font which should be somewhere

659
00:34:41,269 --> 00:34:46,559
there it is so we've got loaded why is

660
00:34:44,309 --> 00:34:48,900
it why are these in here instead of out

661
00:34:46,559 --> 00:34:54,389
here does anyone even know I don't even

662
00:34:48,900 --> 00:34:56,130
know nobody knows nobody cares anyway so

663
00:34:54,389 --> 00:34:57,869
if I have my loaded font here what I'd

664
00:34:56,130 --> 00:34:59,670
like to do is now say all right there's

665
00:34:57,869 --> 00:35:05,429
not going to be a code point count per

666
00:34:59,670 --> 00:35:10,740
se there's going to be a glyph count and

667
00:35:05,429 --> 00:35:14,669
a max width count and you know what min

668
00:35:10,739 --> 00:35:18,989
code points and a max code point might

669
00:35:14,670 --> 00:35:19,920
be good as well right so we know like

670
00:35:18,989 --> 00:35:22,369
what range

671
00:35:19,920 --> 00:35:25,200
it actually maps to something like that

672
00:35:22,369 --> 00:35:29,099
all right so I'd like to do that we can

673
00:35:25,199 --> 00:35:32,389
set the max glyph count here and we'll

674
00:35:29,099 --> 00:35:37,409
set it like that font min code point

675
00:35:32,389 --> 00:35:44,129
equals you know some extremely high

676
00:35:37,409 --> 00:35:47,879
value int max let's say font max code

677
00:35:44,130 --> 00:35:52,860
point equals zero and then we've got

678
00:35:47,880 --> 00:35:54,869
this with count zero so that's good and

679
00:35:52,860 --> 00:35:56,370
then in all here where we're doing like

680
00:35:54,869 --> 00:35:58,859
code point count stuff like that we're

681
00:35:56,369 --> 00:36:00,779
gonna use the max width count instead so

682
00:35:58,860 --> 00:36:02,490
now we just know however many glyphs we

683
00:36:00,780 --> 00:36:04,650
think and you can see what I'm doing I'm

684
00:36:02,489 --> 00:36:06,659
changing right we were previously

685
00:36:04,650 --> 00:36:08,910
counting code points which are actually

686
00:36:06,659 --> 00:36:11,250
entries into the real unicode table

687
00:36:08,909 --> 00:36:13,289
we're now going with glyphs which is our

688
00:36:11,250 --> 00:36:14,969
own numbering for the actual Gliss

689
00:36:13,289 --> 00:36:16,860
Restorick which are totally sparse

690
00:36:14,969 --> 00:36:19,500
they're spread out through the unicode

691
00:36:16,860 --> 00:36:22,860
code point they are not write contiguous

692
00:36:19,500 --> 00:36:26,010
at all so that's why I need to introduce

693
00:36:22,860 --> 00:36:29,660
this concept of two different you know

694
00:36:26,010 --> 00:36:29,660
types of numbering essentially

695
00:36:33,300 --> 00:36:42,730
okay so now we're you have a slightly

696
00:36:40,630 --> 00:36:44,500
harder time because since we don't since

697
00:36:42,730 --> 00:36:47,590
I'm not setting how many glyphs there

698
00:36:44,500 --> 00:36:49,869
are ahead of time it means that our

699
00:36:47,590 --> 00:36:51,370
stride is is still based on the max lift

700
00:36:49,869 --> 00:36:53,559
count but it means we won't be able to

701
00:36:51,369 --> 00:36:55,329
write this table out in one shot anymore

702
00:36:53,559 --> 00:36:57,039
we'll have to write it out in a very

703
00:36:55,329 --> 00:36:57,699
different way but you'll see that when

704
00:36:57,039 --> 00:36:59,920
we get there

705
00:36:57,699 --> 00:37:01,659
so yeah I don't think we'll probably

706
00:36:59,920 --> 00:37:04,240
finish this by the end of today by the

707
00:37:01,659 --> 00:37:06,309
way but the good news is this I think

708
00:37:04,239 --> 00:37:09,279
just pretty much finishes everything for

709
00:37:06,309 --> 00:37:11,769
us so once we do have a chance to finish

710
00:37:09,280 --> 00:37:15,760
it maybe Monday or Tuesday it'll just be

711
00:37:11,769 --> 00:37:17,259
like a good sponsor done guess what I've

712
00:37:15,760 --> 00:37:19,710
got a present for you knock knock who's

713
00:37:17,260 --> 00:37:22,210
there fonts are done fonts are done who

714
00:37:19,710 --> 00:37:23,530
snow monster done who the fonts are just

715
00:37:22,210 --> 00:37:25,000
done right

716
00:37:23,530 --> 00:37:26,560
stop knocking on my door I don't know

717
00:37:25,000 --> 00:37:28,000
why although in that case I would have

718
00:37:26,559 --> 00:37:31,690
been the person knocking doesn't matter

719
00:37:28,000 --> 00:37:34,300
it's not relevant point being what we

720
00:37:31,690 --> 00:37:36,940
want to do now is we want to go ahead

721
00:37:34,300 --> 00:37:40,740
and start treating this mapping we have

722
00:37:36,940 --> 00:37:40,740
to we have to have our own mapping now

723
00:37:43,320 --> 00:37:51,850
because we've got sort of this this this

724
00:37:48,730 --> 00:37:55,809
whole kerning pair situation we need to

725
00:37:51,849 --> 00:37:58,059
be able to map the actual unicode code

726
00:37:55,809 --> 00:38:01,179
points into something we can actually

727
00:37:58,059 --> 00:38:04,239
use I guess you know now that I think

728
00:38:01,179 --> 00:38:08,889
about it that may mean that we want to

729
00:38:04,239 --> 00:38:11,649
actually still index these guys by the

730
00:38:08,889 --> 00:38:14,679
Unicode code points and just allocate a

731
00:38:11,650 --> 00:38:17,250
gigantic table for them only a tacit

732
00:38:14,679 --> 00:38:17,250
packing time

733
00:38:23,150 --> 00:38:30,730
I'm kind of like with that you know what

734
00:38:26,690 --> 00:38:30,730
I mean this sort of thing

735
00:38:45,239 --> 00:38:52,338
yeah so here's how I'm thinking it let's

736
00:38:49,318 --> 00:38:56,159
hear me out here so in the asset Packer

737
00:38:52,338 --> 00:38:58,139
we allocate one big old table out to the

738
00:38:56,159 --> 00:39:00,118
max code point so whatever the maximum

739
00:38:58,139 --> 00:39:03,989
code point is we don't care it's 64k

740
00:39:00,119 --> 00:39:06,210
let's say so this table just stores

741
00:39:03,989 --> 00:39:08,219
where we actually put each one of these

742
00:39:06,210 --> 00:39:11,460
guys so that we always have a mapping

743
00:39:08,219 --> 00:39:14,068
table back to our own glyph type right

744
00:39:11,460 --> 00:39:17,280
so basically when we when we you know

745
00:39:14,068 --> 00:39:18,808
create one of these fonts we get

746
00:39:17,280 --> 00:39:20,160
something in here which is and this will

747
00:39:18,809 --> 00:39:23,400
just be some kind of a pound to find

748
00:39:20,159 --> 00:39:25,828
which right which is like max font code

749
00:39:23,400 --> 00:39:27,838
point and so the maximum code point that

750
00:39:25,829 --> 00:39:31,349
we're allowing is you know this one or

751
00:39:27,838 --> 00:39:34,019
something right who knows what's the

752
00:39:31,349 --> 00:39:36,720
highest unicode code point what is the

753
00:39:34,019 --> 00:39:38,880
highest unicode code point it's like

754
00:39:36,719 --> 00:39:42,269
what's the largest number what is the

755
00:39:38,880 --> 00:39:52,650
largest number according to standard the

756
00:39:42,269 --> 00:39:55,108
highest code point is oh x1 0 ffff let's

757
00:39:52,650 --> 00:39:57,740
jump stack overflow though can you

758
00:39:55,108 --> 00:39:57,739
really trust it

759
00:39:59,679 --> 00:40:04,849
the character in connection masky blah

760
00:40:02,119 --> 00:40:07,669
blah blah music oppressors foresters 210

761
00:40:04,849 --> 00:40:10,249
fffx unicode coasters divide 217 planes

762
00:40:07,668 --> 00:40:13,728
the basic multilingual plane and 16

763
00:40:10,248 --> 00:40:15,918
supplementary planes each with 65536

764
00:40:13,728 --> 00:40:17,858
code points that's the total size of the

765
00:40:15,918 --> 00:40:19,639
unicode Curtis packs of 17 times bla

766
00:40:17,858 --> 00:40:22,759
okay

767
00:40:19,639 --> 00:40:25,548
so 10 ffff hex

768
00:40:22,759 --> 00:40:27,858
how much do I care about that is that a

769
00:40:25,548 --> 00:40:32,119
bad size doesn't look it to me

770
00:40:27,858 --> 00:40:34,159
Oh x10 FFF yeah that's nothing for an

771
00:40:32,119 --> 00:40:36,079
ass for the asset Packer cuz we don't

772
00:40:34,159 --> 00:40:38,838
care the asset Packer can allocate

773
00:40:36,079 --> 00:40:44,229
memory like Athene and no one cares at

774
00:40:38,838 --> 00:40:46,308
all right so BAM there it is folks

775
00:40:44,228 --> 00:40:51,438
maximum code point is going to be that

776
00:40:46,309 --> 00:40:53,659
right and so yeah so if we want to do

777
00:40:51,438 --> 00:40:56,528
that then all we have to do is when we

778
00:40:53,659 --> 00:41:03,469
Mal'akh this friendly little font here

779
00:40:56,528 --> 00:41:04,668
our loaded font is gonna need I'm

780
00:41:03,469 --> 00:41:07,909
actually I'm gonna put I'm pulling these

781
00:41:04,668 --> 00:41:11,358
guys I'm pulling them I'm doing it don't

782
00:41:07,909 --> 00:41:13,669
try to stop me because because I won't I

783
00:41:11,358 --> 00:41:19,159
won't let you honestly that's just the

784
00:41:13,668 --> 00:41:20,838
truth test I set builder H so reason

785
00:41:19,159 --> 00:41:24,939
this doesn't include we does that H up

786
00:41:20,838 --> 00:41:27,938
there I'm gonna go ahead and do that

787
00:41:24,938 --> 00:41:27,938
that

788
00:41:33,289 --> 00:41:51,679
yeah all right so it's not called that

789
00:41:43,500 --> 00:42:01,230
anymore there we go

790
00:41:51,679 --> 00:42:04,169
code point counts max cliff counts we

791
00:42:01,230 --> 00:42:06,179
are back to where we were and so what I

792
00:42:04,170 --> 00:42:07,889
was going to say is the loaded font

793
00:42:06,179 --> 00:42:09,839
itself needs to store that mapping table

794
00:42:07,889 --> 00:42:11,339
and that mapping table is just a thing

795
00:42:09,840 --> 00:42:18,110
that's saying okay

796
00:42:11,340 --> 00:42:20,579
it's our glyph index from code point so

797
00:42:18,110 --> 00:42:22,590
it is just something where you can plug

798
00:42:20,579 --> 00:42:25,170
in the unicode code point and get out

799
00:42:22,590 --> 00:42:28,340
the slot you know the the index in this

800
00:42:25,170 --> 00:42:30,599
font where that code point exists right

801
00:42:28,340 --> 00:42:33,510
so you know it's gonna be something

802
00:42:30,599 --> 00:42:40,079
where we just malloc some large number

803
00:42:33,510 --> 00:42:44,359
of that right we say okay you know like

804
00:42:40,079 --> 00:42:48,059
so we allocate however many the max

805
00:42:44,358 --> 00:42:51,929
thought code point is we know that that

806
00:42:48,059 --> 00:42:54,029
way we've got room for them all and then

807
00:42:51,929 --> 00:42:56,009
we would presumably initialize them all

808
00:42:54,030 --> 00:42:59,340
to zero which is to say that by default

809
00:42:56,010 --> 00:43:01,410
none of them there none of them are in

810
00:42:59,340 --> 00:43:08,119
the phone at all right they're all not

811
00:43:01,409 --> 00:43:08,118
there so yeah so that's that

812
00:43:10,510 --> 00:43:26,200
like so so assuming I might put that

813
00:43:23,710 --> 00:43:27,730
down here I suppose so assuming that we

814
00:43:26,199 --> 00:43:29,169
go ahead and make that table I should

815
00:43:27,730 --> 00:43:33,940
also make a little thing that free is

816
00:43:29,170 --> 00:43:41,019
the font here just gets rid of all the

817
00:43:33,940 --> 00:43:46,889
tables and stuff the glyphs horizontal

818
00:43:41,019 --> 00:43:50,139
advance with index from third point and

819
00:43:46,889 --> 00:43:52,629
we should probably also just chart it so

820
00:43:50,139 --> 00:43:54,368
not that anyone ever frees the font but

821
00:43:52,630 --> 00:43:59,829
if they were to might as well do it

822
00:43:54,369 --> 00:44:02,500
right seems like I don't know anyway so

823
00:43:59,829 --> 00:44:06,210
in here we come through and we we go

824
00:44:02,500 --> 00:44:08,920
ahead and we allocate the font we

825
00:44:06,210 --> 00:44:12,519
allocate the table we clear the table to

826
00:44:08,920 --> 00:44:16,750
zero gotta have a zero in there we

827
00:44:12,519 --> 00:44:18,219
allocate as many bitmap IDs but for that

828
00:44:16,750 --> 00:44:21,489
table this is gonna actually be our

829
00:44:18,219 --> 00:44:28,139
glyphs table now right we allocate as

830
00:44:21,489 --> 00:44:28,139
many of those as we can maximally hold

831
00:44:29,909 --> 00:44:39,608
we do the same thing for our horizontal

832
00:44:32,889 --> 00:44:43,029
advance we then clear it out and then

833
00:44:39,608 --> 00:44:45,130
this you know essentially this can can

834
00:44:43,030 --> 00:44:47,680
be a still be exactly the same the only

835
00:44:45,130 --> 00:44:51,340
difference is that we can't do it now

836
00:44:47,679 --> 00:44:55,259
because we don't have a mapping right we

837
00:44:51,340 --> 00:44:58,720
don't have any way of actually mapping

838
00:44:55,260 --> 00:45:01,030
the kerning pair so we need to kind of

839
00:44:58,719 --> 00:45:04,949
do that kerning after we've already done

840
00:45:01,030 --> 00:45:04,950
all of our mapping right

841
00:45:06,170 --> 00:45:11,059
because these are supposed to be glyph

842
00:45:08,519 --> 00:45:15,210
indices and they're actually unicode

843
00:45:11,059 --> 00:45:16,949
indices you know and so we need to

844
00:45:15,210 --> 00:45:20,539
translate them through our mapping table

845
00:45:16,949 --> 00:45:20,539
but there's no way for us to do that

846
00:45:20,630 --> 00:45:34,530
until we've actually extracted all the

847
00:45:22,889 --> 00:45:41,119
characters right so if we were if we

848
00:45:34,530 --> 00:45:44,100
were to do that how would we do it

849
00:45:41,119 --> 00:45:46,789
here is where we do our kerning after

850
00:45:44,099 --> 00:45:51,389
the fact we get our kerning change here

851
00:45:46,789 --> 00:45:54,650
we look up the code points the way that

852
00:45:51,389 --> 00:45:57,960
we do this is we just straight up add

853
00:45:54,650 --> 00:46:02,280
this change to all the code points that

854
00:45:57,960 --> 00:46:04,039
involved us right and so that is

855
00:46:02,280 --> 00:46:10,050
something that we could actually just

856
00:46:04,039 --> 00:46:11,730
bake out at the end right it's something

857
00:46:10,050 --> 00:46:17,490
we could very easily bake out at the end

858
00:46:11,730 --> 00:46:23,070
in fact and so I think I will the way we

859
00:46:17,489 --> 00:46:26,939
would do that is we would just store

860
00:46:23,070 --> 00:46:29,750
this kerning change into the actual

861
00:46:26,940 --> 00:46:35,849
record for this font this font glyph

862
00:46:29,750 --> 00:46:39,929
right we'd store that and then all of

863
00:46:35,849 --> 00:46:42,239
this would happen separately care

864
00:46:39,929 --> 00:46:44,219
advanced - kerning change we know what

865
00:46:42,239 --> 00:46:47,879
care advanced is we would know what

866
00:46:44,219 --> 00:46:49,319
kerning change was in fact we can just

867
00:46:47,880 --> 00:46:55,610
say that we would write kerning change

868
00:46:49,320 --> 00:46:55,610
directly into that table

869
00:46:56,280 --> 00:46:59,660
I think that'll work

870
00:47:10,769 --> 00:47:17,039
since these are somes my argument is

871
00:47:13,800 --> 00:47:27,450
that this right here actually is just

872
00:47:17,039 --> 00:47:29,599
other glyph index now right and it can

873
00:47:27,449 --> 00:47:31,980
just stripe through the table

874
00:47:29,599 --> 00:47:34,529
essentially just just doing it to

875
00:47:31,980 --> 00:47:37,590
everything it can just basically pre set

876
00:47:34,530 --> 00:47:42,630
the table for this character the entire

877
00:47:37,590 --> 00:47:47,309
table to just have that value sitting in

878
00:47:42,630 --> 00:47:49,950
it right and so all it needs to do is

879
00:47:47,309 --> 00:47:53,759
say oh okay whatever the other glyph

880
00:47:49,949 --> 00:47:55,949
index was and I know what my glyph index

881
00:47:53,760 --> 00:48:06,440
is because now I've it's been assigned

882
00:47:55,949 --> 00:48:06,439
right this should just work

883
00:48:08,250 --> 00:48:13,289
I think that's good I think we're good

884
00:48:10,309 --> 00:48:15,119
so if I do that this is gonna have to be

885
00:48:13,289 --> 00:48:19,380
by stride so I feel like at this point

886
00:48:15,119 --> 00:48:21,089
to horizontal advance you almost want a

887
00:48:19,380 --> 00:48:22,410
utility function for looking up into it

888
00:48:21,090 --> 00:48:25,740
because so many people are doing this

889
00:48:22,409 --> 00:48:28,739
nonsense so we may go ahead and do that

890
00:48:25,739 --> 00:48:31,289
later I'm not sure it's it's it's it's

891
00:48:28,739 --> 00:48:32,579
it's in the back of my mind though so if

892
00:48:31,289 --> 00:48:34,769
we went ahead and did that that would

893
00:48:32,579 --> 00:48:39,840
just work I think the glyph index would

894
00:48:34,769 --> 00:48:42,090
get assigned presumably in in this in

895
00:48:39,840 --> 00:48:43,890
this sort of pass right so we do load

896
00:48:42,090 --> 00:48:46,890
glyph index we would pass at a code

897
00:48:43,889 --> 00:48:48,569
point and a glyph index right so we'd

898
00:48:46,889 --> 00:48:52,529
say we want this glyph index it's

899
00:48:48,570 --> 00:48:54,390
rendering this code point yeah and and

900
00:48:52,530 --> 00:48:57,330
presumably actually could even look that

901
00:48:54,389 --> 00:48:59,129
up into the code point table so it could

902
00:48:57,329 --> 00:49:01,110
actually do something where we said okay

903
00:48:59,130 --> 00:49:06,630
the glyph index is just whatever the

904
00:49:01,110 --> 00:49:12,900
font code point table lift from with

905
00:49:06,630 --> 00:49:17,300
index Brown code point it just grabs it

906
00:49:12,900 --> 00:49:17,300
up yeah

907
00:49:18,690 --> 00:49:22,110
so I think we could just do that I don't

908
00:49:20,519 --> 00:49:25,949
even know why I'm compiling yet but

909
00:49:22,110 --> 00:49:27,450
that's just pointless anyway so I think

910
00:49:25,949 --> 00:49:29,279
we could just do that I think that's

911
00:49:27,449 --> 00:49:30,899
fine and we don't need to do anything

912
00:49:29,280 --> 00:49:35,100
special so really all we have to do is

913
00:49:30,900 --> 00:49:36,599
move this thing out to the end right so

914
00:49:35,099 --> 00:49:38,699
essentially we want to do that like

915
00:49:36,599 --> 00:49:39,809
right before we write out the font so

916
00:49:38,699 --> 00:49:42,750
that we know that all the characters

917
00:49:39,809 --> 00:49:46,610
have been extracted you know so you know

918
00:49:42,750 --> 00:49:49,440
like this this happens right like here

919
00:49:46,610 --> 00:49:51,750
and so in order to do that you know I

920
00:49:49,440 --> 00:49:54,300
don't know that we really want to dump

921
00:49:51,750 --> 00:49:58,670
it in there so when it actually does the

922
00:49:54,300 --> 00:50:02,460
load font I might do something like

923
00:49:58,670 --> 00:50:05,940
introduce a thing here that's like you

924
00:50:02,460 --> 00:50:11,130
know finalize font kerning or something

925
00:50:05,940 --> 00:50:16,590
like that and just in finalized font

926
00:50:11,130 --> 00:50:18,150
kerning we do this stuff now we

927
00:50:16,590 --> 00:50:20,039
obviously are gonna have to actually

928
00:50:18,150 --> 00:50:22,139
select the font in because we don't know

929
00:50:20,039 --> 00:50:24,509
that it's the active font so we flick

930
00:50:22,139 --> 00:50:28,440
the font in we'd get the kerning stuff

931
00:50:24,510 --> 00:50:30,930
out of it right we'd go through and then

932
00:50:28,440 --> 00:50:33,750
in here we would now be able to actually

933
00:50:30,929 --> 00:50:39,649
do the thing we wanted which is like

934
00:50:33,750 --> 00:50:48,960
first and second are going to be glyph

935
00:50:39,650 --> 00:50:51,110
index from code point right and there we

936
00:50:48,960 --> 00:50:51,110
go

937
00:50:52,420 --> 00:50:56,960
so now they're converted to glyph

938
00:50:54,559 --> 00:50:59,059
indices and they can be used to index

939
00:50:56,960 --> 00:51:02,780
into that table which is what we wanted

940
00:50:59,059 --> 00:51:05,990
right where is my free where's my free

941
00:51:02,780 --> 00:51:11,349
go my free is missing and I feel like

942
00:51:05,989 --> 00:51:13,759
that's bad there it is right there okay

943
00:51:11,349 --> 00:51:15,289
that's not that is not where it's

944
00:51:13,760 --> 00:51:20,140
supposed to go just in case anyone was

945
00:51:15,289 --> 00:51:20,139
wondering not where it's supposed to go

946
00:51:21,730 --> 00:51:27,260
okay so that's fine

947
00:51:25,309 --> 00:51:29,180
that's where finalized font kerning will

948
00:51:27,260 --> 00:51:34,089
happen and so I'll just do it here

949
00:51:29,179 --> 00:51:39,710
finalize font kerning and that will take

950
00:51:34,088 --> 00:51:41,509
the font like so and then further on a

951
00:51:39,710 --> 00:51:43,490
lot of servers all of that this will be

952
00:51:41,510 --> 00:51:45,619
the glyph count this will be the glyph

953
00:51:43,489 --> 00:51:47,568
count as well this will also be the

954
00:51:45,619 --> 00:51:51,710
glyph count but the code point size will

955
00:51:47,568 --> 00:52:03,529
be the HHA font cliff we're then going

956
00:51:51,710 --> 00:52:07,130
to write them out like so however this

957
00:52:03,530 --> 00:52:09,170
will not work it won't work because this

958
00:52:07,130 --> 00:52:12,710
table was bigger than the one that we're

959
00:52:09,170 --> 00:52:14,869
actually going to write out right and so

960
00:52:12,710 --> 00:52:18,139
really what we need to do here is do a

961
00:52:14,869 --> 00:52:24,230
series of writes that only write part of

962
00:52:18,139 --> 00:52:26,989
the thing so this is a slice right it's

963
00:52:24,230 --> 00:52:29,500
one slice of it I don't know if this

964
00:52:26,989 --> 00:52:33,529
makes sense but you know we made a table

965
00:52:29,500 --> 00:52:38,539
that looks like this and we're actually

966
00:52:33,530 --> 00:52:39,829
only outputting a part a subsection of

967
00:52:38,539 --> 00:52:42,798
it right

968
00:52:39,829 --> 00:52:46,700
we're only actually outputting some some

969
00:52:42,798 --> 00:52:48,230
smaller bit right and so when we

970
00:52:46,699 --> 00:52:50,808
actually output this we just want to

971
00:52:48,230 --> 00:52:52,969
output you know a row then advance to

972
00:52:50,809 --> 00:52:55,130
the next one and another row and we're

973
00:52:52,969 --> 00:52:58,548
skipping a bunch here because the max

974
00:52:55,130 --> 00:53:00,619
glyph count is not equal to the actual

975
00:52:58,548 --> 00:53:02,298
glyph count so there's just a bunch of

976
00:53:00,619 --> 00:53:06,318
unused space and we're not going to

977
00:53:02,298 --> 00:53:09,139
write that out so yeah so

978
00:53:06,318 --> 00:53:13,338
we want to just do with index equals

979
00:53:09,139 --> 00:53:22,038
zero with index is less than font glyph

980
00:53:13,338 --> 00:53:23,808
count click index and the slice size is

981
00:53:22,039 --> 00:53:25,130
not squared it's just one of those

982
00:53:23,809 --> 00:53:28,278
because now we're looping over each one

983
00:53:25,130 --> 00:53:30,858
we want to write out the horizontal

984
00:53:28,278 --> 00:53:33,528
advance we want to like strive it we

985
00:53:30,858 --> 00:53:36,078
want to move you know forward each time

986
00:53:33,528 --> 00:53:41,298
right so we want to do is say alright we

987
00:53:36,079 --> 00:53:47,000
had a pointer right this is the

988
00:53:41,298 --> 00:53:51,288
horizontal advance pointer which is that

989
00:53:47,000 --> 00:53:55,429
and then each time we want to write that

990
00:53:51,289 --> 00:54:03,520
out we're going to then add the total

991
00:53:55,429 --> 00:54:03,519
size of one of these things right oops

992
00:54:04,568 --> 00:54:08,960
so this is basically the same as like

993
00:54:07,250 --> 00:54:10,730
the bitmap copies we've been doing only

994
00:54:08,960 --> 00:54:12,230
it's not a bitmap in this case that

995
00:54:10,730 --> 00:54:14,838
we're copying but it's a 2d array that

996
00:54:12,230 --> 00:54:17,630
we're getting us a chunk of right so

997
00:54:14,838 --> 00:54:20,358
we're starting at the top we're writing

998
00:54:17,630 --> 00:54:22,818
out a partial row and then we're

999
00:54:20,358 --> 00:54:25,219
advancing by the full row size oops

1000
00:54:22,818 --> 00:54:31,000
except that didn't convert to what I

1001
00:54:25,219 --> 00:54:35,509
wanted horizontal advance right

1002
00:54:31,000 --> 00:54:37,429
something like that yeah that way that

1003
00:54:35,510 --> 00:54:40,329
table then condenses down to the correct

1004
00:54:37,429 --> 00:54:43,338
size that the table should actually be

1005
00:54:40,329 --> 00:54:45,099
which is better than having it not be

1006
00:54:43,338 --> 00:54:49,038
the size that it actually needs to be

1007
00:54:45,099 --> 00:54:51,440
thing can't really argue with that

1008
00:54:49,039 --> 00:54:54,079
so anyway min code point max code point

1009
00:54:51,440 --> 00:54:55,818
we set those up max flip counts the max

1010
00:54:54,079 --> 00:54:57,349
discount is just going to be what we

1011
00:54:55,818 --> 00:55:00,139
sort of said here in fact I guess I

1012
00:54:57,349 --> 00:55:02,480
don't really need that to be redundant I

1013
00:55:00,139 --> 00:55:05,179
can just put it here and have it get set

1014
00:55:02,480 --> 00:55:07,639
directly like that the cliff counts

1015
00:55:05,179 --> 00:55:11,449
going to be zero and now these routines

1016
00:55:07,639 --> 00:55:12,980
will all sort of do I think exactly what

1017
00:55:11,449 --> 00:55:15,259
we wanted them to do there they are

1018
00:55:12,980 --> 00:55:18,500
glyph indexed from code point glyph

1019
00:55:15,260 --> 00:55:25,869
index from code point sighs that's all

1020
00:55:18,500 --> 00:55:30,219
good okay so moving along this stuff

1021
00:55:25,869 --> 00:55:37,430
actually it's just max code point max

1022
00:55:30,219 --> 00:55:40,689
font code point and really it's not max

1023
00:55:37,429 --> 00:55:49,940
font code point it slacks like it's like

1024
00:55:40,690 --> 00:55:59,740
count we want that or you know I could

1025
00:55:49,940 --> 00:55:59,740
do one past there we go

1026
00:56:04,358 --> 00:56:10,659
that way if you allocate a table you

1027
00:56:07,039 --> 00:56:12,349
have enough right otherwise your one off

1028
00:56:10,659 --> 00:56:16,129
anyway

1029
00:56:12,349 --> 00:56:25,280
so we freeing things everyone loves it

1030
00:56:16,130 --> 00:56:28,550
when you free things and so on this is

1031
00:56:25,280 --> 00:56:30,800
gonna be good oh you know what are you

1032
00:56:28,550 --> 00:56:34,960
gonna do all right so let's see here

1033
00:56:30,800 --> 00:56:40,190
other glyph index not equal to zero

1034
00:56:34,960 --> 00:56:41,900
index boy ran out of time

1035
00:56:40,190 --> 00:56:43,159
well I told you I was gonna run time I

1036
00:56:41,900 --> 00:56:45,050
said we wouldn't finish this till

1037
00:56:43,159 --> 00:56:47,989
Tuesday probably so I don't know why I'm

1038
00:56:45,050 --> 00:56:50,720
I'm screaming but you know it's that you

1039
00:56:47,989 --> 00:56:53,149
want to finish coding you know you want

1040
00:56:50,719 --> 00:56:59,299
to finish you know what you're doing you

1041
00:56:53,150 --> 00:57:00,889
know what you're doing don't you you do

1042
00:56:59,300 --> 00:57:02,060
and when you know what you're doing you

1043
00:57:00,889 --> 00:57:03,409
want to finish right that's you're in

1044
00:57:02,059 --> 00:57:05,239
the groove right it's like it's just

1045
00:57:03,409 --> 00:57:08,000
it's totally mechanical and you can just

1046
00:57:05,239 --> 00:57:09,729
go and like there's no reason to stop

1047
00:57:08,000 --> 00:57:11,420
why would you stop you wouldn't stop

1048
00:57:09,730 --> 00:57:14,179
except for the little thing at the

1049
00:57:11,420 --> 00:57:18,619
bottom tells you you have to and so you

1050
00:57:14,179 --> 00:57:21,739
do so yeah I mean I guess I got a wind

1051
00:57:18,619 --> 00:57:25,250
down don't want to have to so there's

1052
00:57:21,739 --> 00:57:31,818
cliff index from code point it's just

1053
00:57:25,250 --> 00:57:34,130
gonna be yeah saying that we have we're

1054
00:57:31,818 --> 00:57:35,750
entering the glyph into the table like

1055
00:57:34,130 --> 00:57:39,349
so that's where it's going to be stored

1056
00:57:35,750 --> 00:57:42,469
so then we pull out that one and then we

1057
00:57:39,349 --> 00:57:44,900
into the table here issue the code point

1058
00:57:42,469 --> 00:57:50,389
and say that map's to this lip index

1059
00:57:44,900 --> 00:57:50,750
right very very simple so yeah there we

1060
00:57:50,389 --> 00:57:57,469
go

1061
00:57:50,750 --> 00:58:02,750
and code point count is not a member of

1062
00:57:57,469 --> 00:58:04,309
loaded that's true it is not but yeah

1063
00:58:02,750 --> 00:58:07,730
that's actually gonna be glyph count

1064
00:58:04,309 --> 00:58:09,529
eventually so I might actually go ahead

1065
00:58:07,730 --> 00:58:11,250
and change that already it's quit count

1066
00:58:09,530 --> 00:58:17,970
it's not code point count

1067
00:58:11,250 --> 00:58:23,880
right and horizontal advance is actually

1068
00:58:17,969 --> 00:58:26,399
that yeah okay there we go and let's see

1069
00:58:23,880 --> 00:58:29,150
font code point counts that's gonna be

1070
00:58:26,400 --> 00:58:35,750
glyph count that's gonna be glyph counts

1071
00:58:29,150 --> 00:58:41,309
and there we go glyph index code points

1072
00:58:35,750 --> 00:58:45,960
and let's see Hamlet assets code point

1073
00:58:41,309 --> 00:58:50,670
count is going to be glyph count and we

1074
00:58:45,960 --> 00:58:51,929
are happy about that okay all that code

1075
00:58:50,670 --> 00:58:56,119
needs to be changed but at least for

1076
00:58:51,929 --> 00:58:59,098
compiling and so now I can call it Q&amp;A

1077
00:58:56,119 --> 00:59:02,190
but yeah we still have I we've got

1078
00:58:59,099 --> 00:59:06,119
another good hour left so Monday we will

1079
00:59:02,190 --> 00:59:08,630
have to finish all of that up but that's

1080
00:59:06,119 --> 00:59:10,710
fine let's go ahead and go to the Q&amp;A if

1081
00:59:08,630 --> 00:59:12,809
anyone has any questions about what we

1082
00:59:10,710 --> 00:59:14,099
did get them in quick we're only gonna

1083
00:59:12,809 --> 00:59:17,789
have about 10 minutes of Q&amp;A today

1084
00:59:14,099 --> 00:59:19,019
because I got to go at like 6:15 so

1085
00:59:17,789 --> 00:59:22,619
please put Q :

1086
00:59:19,019 --> 00:59:28,079
in front of the question so that I can

1087
00:59:22,619 --> 00:59:29,220
see it BK bagi I noticed that you really

1088
00:59:28,079 --> 00:59:30,690
comment your code your comment suppose

1089
00:59:29,219 --> 00:59:31,529
it consisted to do what are your

1090
00:59:30,690 --> 00:59:32,670
thoughts on commenting your code

1091
00:59:31,530 --> 00:59:34,200
considering a lot of it is pretty

1092
00:59:32,670 --> 00:59:35,940
complicated unless of course you don't

1093
00:59:34,199 --> 00:59:37,230
see it as such or do you think that

1094
00:59:35,940 --> 00:59:40,230
since you write good code it doesn't

1095
00:59:37,230 --> 00:59:42,329
require comments you readable none of

1096
00:59:40,230 --> 00:59:43,440
those things well okay I wouldn't

1097
00:59:42,329 --> 00:59:46,139
necessarily say that the code is

1098
00:59:43,440 --> 00:59:50,369
complicated this is not particularly

1099
00:59:46,139 --> 00:59:52,348
complicated code but the reason that I

1100
00:59:50,369 --> 00:59:53,760
don't put comments in it is not because

1101
00:59:52,349 --> 00:59:56,099
I don't think that they might help the

1102
00:59:53,760 --> 00:59:58,710
reason is because and I have I can

1103
00:59:56,099 --> 01:00:01,109
actually tell you that I don't know a

1104
00:59:58,710 --> 01:00:06,659
single other programmer who doesn't echo

1105
01:00:01,108 --> 01:00:08,819
this who who does you know who does

1106
01:00:06,659 --> 01:00:13,469
significant programming for a living at

1107
01:00:08,820 --> 01:00:16,109
the kind of speed that I do the comments

1108
01:00:13,469 --> 01:00:18,118
get out of date almost immediately and

1109
01:00:16,108 --> 01:00:19,889
end up being more harmful than if you

1110
01:00:18,119 --> 01:00:21,450
didn't have them because someone will

1111
01:00:19,889 --> 01:00:23,519
come and read something that says this

1112
01:00:21,449 --> 01:00:24,719
does blah and of course it doesn't do

1113
01:00:23,519 --> 01:00:26,759
blah anymore and

1114
01:00:24,719 --> 01:00:30,689
it's worse than if they didn't have the

1115
01:00:26,760 --> 01:00:32,040
comment so the problem essentially is

1116
01:00:30,690 --> 01:00:33,720
that comments don't go through the

1117
01:00:32,039 --> 01:00:36,000
compiler there's nothing checking them

1118
01:00:33,719 --> 01:00:37,529
and so if you wanted your comments to

1119
01:00:36,000 --> 01:00:39,659
always been a date you would need to put

1120
01:00:37,530 --> 01:00:40,829
in a process whereby you manually check

1121
01:00:39,659 --> 01:00:42,328
them or have them code reviewed or

1122
01:00:40,829 --> 01:00:45,210
something and that just slows you down

1123
01:00:42,329 --> 01:00:48,450
way too much it slows you down way more

1124
01:00:45,210 --> 01:00:51,449
than having that comment accurate could

1125
01:00:48,449 --> 01:00:53,279
ever have saved you and so it's a bad

1126
01:00:51,449 --> 01:00:56,219
trade-off to comment your code in my

1127
01:00:53,280 --> 01:00:59,609
opinion I do sometimes comment code and

1128
01:00:56,219 --> 01:01:01,379
that time is when I have fully finished

1129
01:00:59,608 --> 01:01:04,230
something and I'm like I am NOT gonna

1130
01:01:01,380 --> 01:01:06,269
touch this for like six months I will

1131
01:01:04,230 --> 01:01:07,829
then go in and write extensive comments

1132
01:01:06,269 --> 01:01:08,460
into the header that's like here's how

1133
01:01:07,829 --> 01:01:09,599
this works

1134
01:01:08,460 --> 01:01:11,760
here's what you need to be aware of

1135
01:01:09,599 --> 01:01:14,880
here's what you're gonna forget right

1136
01:01:11,760 --> 01:01:16,859
and that I think is very valuable but

1137
01:01:14,880 --> 01:01:19,108
commenting code that is in flux is

1138
01:01:16,858 --> 01:01:22,549
completely useless in my opinion it only

1139
01:01:19,108 --> 01:01:25,469
ever results in a net speed loss

1140
01:01:22,550 --> 01:01:27,329
regardless of how you do it meaning if

1141
01:01:25,469 --> 01:01:29,068
you don't have a review process in place

1142
01:01:27,329 --> 01:01:30,420
it's a speed loss because you're gonna

1143
01:01:29,068 --> 01:01:33,000
have a ton of comments that aren't right

1144
01:01:30,420 --> 01:01:34,409
and that's a speed loss if you do have a

1145
01:01:33,000 --> 01:01:35,880
review process the review process took

1146
01:01:34,409 --> 01:01:37,799
longer than it needed to and that was a

1147
01:01:35,880 --> 01:01:38,910
speed loss much more than the comment

1148
01:01:37,800 --> 01:01:41,160
could have possibly saved someone who's

1149
01:01:38,909 --> 01:01:43,949
reading the code so I don't see any

1150
01:01:41,159 --> 01:01:46,078
point in commenting code in flux but I

1151
01:01:43,949 --> 01:01:49,078
do see a point in commenting code that

1152
01:01:46,079 --> 01:01:51,240
you are intentionally putting aside for

1153
01:01:49,079 --> 01:01:53,390
a long time because that can be kind of

1154
01:01:51,239 --> 01:01:53,389
useful

1155
01:01:59,510 --> 01:02:04,560
why was your first calculation of the

1156
01:02:01,769 --> 01:02:06,210
glyph table index size too big 64 K and

1157
01:02:04,559 --> 01:02:09,420
reduced at UK and still later went full

1158
01:02:06,210 --> 01:02:12,960
on 64 K again what changed the size I

1159
01:02:09,420 --> 01:02:21,769
don't think it is 64 K it was five

1160
01:02:12,960 --> 01:02:21,769
thousand right back

1161
01:02:24,889 --> 01:02:31,588
yeah the reason for that was like a

1162
01:02:27,599 --> 01:02:32,940
table that's 5,000 by 5,000 is 25 Meg's

1163
01:02:31,588 --> 01:02:36,420
which isn't too bad

1164
01:02:32,940 --> 01:02:38,849
but a 6 5 5 3 6 by 6 5 5 3 6 table is

1165
01:02:36,420 --> 01:02:41,358
actually 4 gigabytes which seemed a bit

1166
01:02:38,849 --> 01:02:41,359
too large

1167
01:02:54,219 --> 01:02:58,269
I just want food would it be a good

1168
01:02:56,530 --> 01:03:02,980
practice to comment after writing all

1169
01:02:58,269 --> 01:03:05,050
your code for others um if like I said

1170
01:03:02,980 --> 01:03:07,510
if you know that the code is likes done

1171
01:03:05,050 --> 01:03:09,730
and you're not gonna touch it right

1172
01:03:07,510 --> 01:03:12,010
except for like minor bug fixing things

1173
01:03:09,730 --> 01:03:13,809
then that's an okay time to do it if

1174
01:03:12,010 --> 01:03:16,320
you're still working on the code just

1175
01:03:13,809 --> 01:03:18,909
don't comment that that's a just just oh

1176
01:03:16,320 --> 01:03:23,680
really of me it's not worth it it's

1177
01:03:18,909 --> 01:03:25,119
gonna do more harm than good and I would

1178
01:03:23,679 --> 01:03:26,440
also see that when you go to comment

1179
01:03:25,119 --> 01:03:29,619
code if you're gonna put it away for a

1180
01:03:26,440 --> 01:03:40,240
while don't go comment like like this is

1181
01:03:29,619 --> 01:03:42,279
not useful right you see a lot of

1182
01:03:40,239 --> 01:03:44,169
comments like this it's like that

1183
01:03:42,280 --> 01:03:47,110
doesn't tell me anything I didn't know

1184
01:03:44,170 --> 01:03:48,670
by reading this right so typically the

1185
01:03:47,110 --> 01:03:51,130
comments like this doesn't need to be

1186
01:03:48,670 --> 01:03:53,230
commented because I could read this and

1187
01:03:51,130 --> 01:03:55,360
I know what it's doing what needs to be

1188
01:03:53,230 --> 01:03:58,030
commented is anything where I wouldn't

1189
01:03:55,360 --> 01:04:05,620
know something about it from reading it

1190
01:03:58,030 --> 01:04:07,990
like something like now maybe I would

1191
01:04:05,619 --> 01:04:09,609
guess that because of this but that's an

1192
01:04:07,989 --> 01:04:11,199
interesting comment for me right like

1193
01:04:09,610 --> 01:04:13,809
okay this is something that runs

1194
01:04:11,199 --> 01:04:15,309
multi-threaded maybe that helps me write

1195
01:04:13,809 --> 01:04:16,360
maybe you could put that in the name

1196
01:04:15,309 --> 01:04:19,329
though and then it would be a little bit

1197
01:04:16,360 --> 01:04:20,890
better another example would be don't

1198
01:04:19,329 --> 01:04:22,690
comment like this these functions

1199
01:04:20,889 --> 01:04:25,119
because I can see what they do instead I

1200
01:04:22,690 --> 01:04:27,340
want to comment up here at the top that

1201
01:04:25,119 --> 01:04:28,989
just tells me how does this whole system

1202
01:04:27,340 --> 01:04:31,480
work because that's the thing that I

1203
01:04:28,989 --> 01:04:33,159
have a hard time knowing right I can

1204
01:04:31,480 --> 01:04:34,780
look at any individual like comments

1205
01:04:33,159 --> 01:04:36,309
that say how this function works that

1206
01:04:34,780 --> 01:04:37,540
doesn't matter like if I'm a good

1207
01:04:36,309 --> 01:04:40,329
programmer I know how the function works

1208
01:04:37,539 --> 01:04:42,009
I can read it what I don't know is why

1209
01:04:40,329 --> 01:04:44,139
this function is here like what is the

1210
01:04:42,010 --> 01:04:46,540
point of this function and how does it

1211
01:04:44,139 --> 01:04:48,489
fit into everything else so like a nice

1212
01:04:46,539 --> 01:04:50,469
comment at the top a nice big comment at

1213
01:04:48,489 --> 01:04:52,599
the top it's like the handmade asset

1214
01:04:50,469 --> 01:04:54,250
system is made for reading files off the

1215
01:04:52,599 --> 01:04:56,019
drive that are packed by an asset Packer

1216
01:04:54,250 --> 01:05:00,010
that follow the file format in HSA

1217
01:04:56,019 --> 01:05:02,340
assets whatever it's built up on a

1218
01:05:00,010 --> 01:05:04,660
series of tables that are flat loaded

1219
01:05:02,340 --> 01:05:06,309
asset types are remapped at low type

1220
01:05:04,659 --> 01:05:07,629
like that's a good comment right and

1221
01:05:06,309 --> 01:05:08,049
then I'm like ah okay see what it all

1222
01:05:07,630 --> 01:05:09,700
does

1223
01:05:08,050 --> 01:05:11,050
I can then start when I read this

1224
01:05:09,699 --> 01:05:13,299
function I know how the function works I

1225
01:05:11,050 --> 01:05:14,440
can say okay whatever right or like this

1226
01:05:13,300 --> 01:05:17,170
generation thing would be perfect right

1227
01:05:14,440 --> 01:05:19,059
don't tell me don't comment this I don't

1228
01:05:17,170 --> 01:05:20,980
need to see I know exactly what this is

1229
01:05:19,059 --> 01:05:22,659
doing what I don't know is what is a

1230
01:05:20,980 --> 01:05:24,789
generation like what does that even mean

1231
01:05:22,659 --> 01:05:26,920
why is it here so a comment at the top

1232
01:05:24,789 --> 01:05:28,840
that's like generations are things that

1233
01:05:26,920 --> 01:05:31,300
are used to make sure that assets don't

1234
01:05:28,840 --> 01:05:33,370
get referenced after the time what

1235
01:05:31,300 --> 01:05:35,019
they're evicted and so it's maintained

1236
01:05:33,369 --> 01:05:37,509
by the render up like that again good

1237
01:05:35,019 --> 01:05:39,400
comment useful comment so I don't need

1238
01:05:37,510 --> 01:05:41,730
to see any comments here I need to I

1239
01:05:39,400 --> 01:05:44,289
need the gestalt I need like the bigger

1240
01:05:41,730 --> 01:05:46,449
picture that's where to spend the time

1241
01:05:44,289 --> 01:05:49,860
commenting right if you're gonna spend

1242
01:05:46,449 --> 01:05:49,859
time calm anything I spend it there

1243
01:05:57,639 --> 01:06:01,338
cuber Caleb since the questions are slow

1244
01:05:59,989 --> 01:06:05,568
today when do you think you'll write a

1245
01:06:01,338 --> 01:06:09,078
proper RNG probably when we go to do the

1246
01:06:05,568 --> 01:06:13,329
world generation I would guess that's

1247
01:06:09,079 --> 01:06:15,140
the only time we really care at all

1248
01:06:13,329 --> 01:06:17,150
student I'm saying 3 or a real a

1249
01:06:15,139 --> 01:06:21,199
structured no we're never writing a real

1250
01:06:17,150 --> 01:06:23,449
hash function right as I said every game

1251
01:06:21,199 --> 01:06:27,380
that's ever shipped has to have this

1252
01:06:23,449 --> 01:06:32,180
comment in it which I assume is why you

1253
01:06:27,380 --> 01:06:34,519
brought it up that has to be in every

1254
01:06:32,179 --> 01:06:36,889
game if we ship handmade here oh and

1255
01:06:34,518 --> 01:06:38,659
that is not in there then I don't know

1256
01:06:36,889 --> 01:06:41,690
what to say we have not shipped a real

1257
01:06:38,659 --> 01:06:46,268
game at that point in my opinion a real

1258
01:06:41,690 --> 01:06:46,269
game has to comment better hash function

1259
01:06:46,630 --> 01:06:50,568
so you know what we could do is there's

1260
01:06:49,159 --> 01:06:52,159
a couple of these and they say better

1261
01:06:50,568 --> 01:06:54,679
hash function what we could do is like

1262
01:06:52,159 --> 01:06:56,118
rewrite like one or two of them to

1263
01:06:54,679 --> 01:06:58,669
actually be better hash functions but as

1264
01:06:56,119 --> 01:07:00,410
long as we leave one then I guess I'm

1265
01:06:58,670 --> 01:07:07,130
okay with it as long as one of them at

1266
01:07:00,409 --> 01:07:09,078
least says better hash function james

1267
01:07:07,130 --> 01:07:10,548
Widman my comment rating rule for a

1268
01:07:09,079 --> 01:07:12,380
while has been code should clearly tell

1269
01:07:10,548 --> 01:07:15,949
you what is being done comments if you

1270
01:07:12,380 --> 01:07:18,199
need them should only tell you why yeah

1271
01:07:15,949 --> 01:07:20,059
I mean I don't know that I necessary for

1272
01:07:18,199 --> 01:07:24,079
that because it's not for me about a

1273
01:07:20,059 --> 01:07:27,079
what or a why it's it's more about level

1274
01:07:24,079 --> 01:07:29,059
of detail I want the high the high

1275
01:07:27,079 --> 01:07:31,099
picture I want the the big picture

1276
01:07:29,059 --> 01:07:33,890
comment and that big picture might be a

1277
01:07:31,099 --> 01:07:36,259
what comment but I just need that big

1278
01:07:33,889 --> 01:07:38,679
picture it's the small it's the fine

1279
01:07:36,259 --> 01:07:40,639
resolution that I don't need because

1280
01:07:38,679 --> 01:07:42,798
that is just that's what the code does

1281
01:07:40,639 --> 01:07:44,028
right if the code is that hard to read

1282
01:07:42,798 --> 01:07:45,920
maybe you should think about rewriting

1283
01:07:44,028 --> 01:07:47,119
it to be a little bit easier to read you

1284
01:07:45,920 --> 01:07:54,009
know like name things a little bit

1285
01:07:47,119 --> 01:07:54,009
better or something you know but yeah

1286
01:07:55,460 --> 01:08:03,320
how long have you been coding here's us

1287
01:07:59,360 --> 01:08:05,400
31 31 years

1288
01:08:03,320 --> 01:08:07,130
I'm Newark hombre when will you

1289
01:08:05,400 --> 01:08:09,030
implement the chocolate wine fountain

1290
01:08:07,130 --> 01:08:12,329
probably that's where ever yangshin

1291
01:08:09,030 --> 01:08:13,650
thing but we will definitely you know

1292
01:08:12,329 --> 01:08:15,329
yangshin will definitely be doing the

1293
01:08:13,650 --> 01:08:18,539
chocolate fountain the question is just

1294
01:08:15,329 --> 01:08:19,380
will that be in the and and the answers

1295
01:08:18,539 --> 01:08:20,760
you're probably waiting a while right

1296
01:08:19,380 --> 01:08:22,739
because that's going to be in the Abner

1297
01:08:20,760 --> 01:08:23,850
Coimbra chocolate wine expansion pack so

1298
01:08:22,739 --> 01:08:25,529
that's got to wait til the end of

1299
01:08:23,850 --> 01:08:27,600
everything I mean I apologize but I mean

1300
01:08:25,529 --> 01:08:30,358
if the whole expansion pack is named

1301
01:08:27,600 --> 01:08:31,770
after it it can't the chocolate wine

1302
01:08:30,359 --> 01:08:33,060
fountain had better be in that pack

1303
01:08:31,770 --> 01:08:37,970
right I mean that's kind of a no-brainer

1304
01:08:33,060 --> 01:08:37,970
or people are gonna be like WTF so

1305
01:08:39,890 --> 01:08:50,760
alright guys no more questions

1306
01:08:43,609 --> 01:08:57,870
no more questions and call it i'ma call

1307
01:08:50,760 --> 01:08:58,890
it alright yeah alright everyone thank

1308
01:08:57,869 --> 01:09:00,149
you very much for joining me for another

1309
01:08:58,890 --> 01:09:03,240
episode of hand made here it's been a

1310
01:09:00,149 --> 01:09:06,029
pleasure coding with you as always if

1311
01:09:03,239 --> 01:09:08,039
you wanted to follow along at home with

1312
01:09:06,029 --> 01:09:09,569
the series you can always pre-order the

1313
01:09:08,039 --> 01:09:10,769
game on hand made here or again it comes

1314
01:09:09,569 --> 01:09:12,029
with a source code so that you can play

1315
01:09:10,770 --> 01:09:15,660
around with it at home and learn from it

1316
01:09:12,029 --> 01:09:17,460
and do all kinds of crazy experiments we

1317
01:09:15,659 --> 01:09:19,050
also have a patreon page if you want to

1318
01:09:17,460 --> 01:09:21,180
support the video series you can

1319
01:09:19,050 --> 01:09:23,220
subscribe to that we also have a forum

1320
01:09:21,180 --> 01:09:25,230
site you can go to ask questions get

1321
01:09:23,220 --> 01:09:26,880
community ports to Mac and Linux look at

1322
01:09:25,229 --> 01:09:28,199
a community annotated episode guide that

1323
01:09:26,880 --> 01:09:30,630
can help you catch up on past episodes

1324
01:09:28,199 --> 01:09:32,699
all kinds of good stuff up there really

1325
01:09:30,630 --> 01:09:34,050
great stuff for the community it's

1326
01:09:32,699 --> 01:09:35,849
really worth checking out if you haven't

1327
01:09:34,050 --> 01:09:37,980
already and finally there's a video

1328
01:09:35,850 --> 01:09:41,160
that's not true finally there's a tweet

1329
01:09:37,979 --> 01:09:44,179
bot you can check the schedule on it

1330
01:09:41,159 --> 01:09:47,069
tweets the schedule on weekends and

1331
01:09:44,180 --> 01:09:48,720
tweets every day when the stream can be

1332
01:09:47,069 --> 01:09:50,250
that day so it's really easy to like

1333
01:09:48,720 --> 01:09:55,350
catch the series live that's you wanna

1334
01:09:50,250 --> 01:09:56,970
do so that's about it we I think we've

1335
01:09:55,350 --> 01:09:58,680
more or less finished the font stuff

1336
01:09:56,970 --> 01:10:00,360
like I think this design will actually

1337
01:09:58,680 --> 01:10:02,640
be fine so it's just a question of

1338
01:10:00,359 --> 01:10:04,799
spending the final hour or two of

1339
01:10:02,640 --> 01:10:05,970
programming next week on making sure all

1340
01:10:04,800 --> 01:10:07,770
the glyph stuff lines up and then I

1341
01:10:05,970 --> 01:10:09,000
think we're pretty much good to go

1342
01:10:07,770 --> 01:10:11,369
we'll be able to support multiple

1343
01:10:09,000 --> 01:10:13,408
languages that way we'll just have to

1344
01:10:11,368 --> 01:10:15,509
come up with some tagging scheme so that

1345
01:10:13,408 --> 01:10:17,819
we can pick fonts more intelligently

1346
01:10:15,510 --> 01:10:19,409
because we might need something that's

1347
01:10:17,819 --> 01:10:20,609
like a tag you know in our asset system

1348
01:10:19,408 --> 01:10:22,859
we don't have a tag right now we could

1349
01:10:20,609 --> 01:10:24,598
define a new tag for like language so

1350
01:10:22,859 --> 01:10:26,519
that you know if you're trying to do you

1351
01:10:24,599 --> 01:10:28,500
know if you're trying to run the game in

1352
01:10:26,520 --> 01:10:30,929
Korean it would pick a font that has

1353
01:10:28,500 --> 01:10:32,698
Korean glyphs in it by setting a tag or

1354
01:10:30,929 --> 01:10:35,130
something just to make it so that you

1355
01:10:32,698 --> 01:10:37,859
know because not all fonts our problem

1356
01:10:35,130 --> 01:10:39,480
are gonna have all glyphs would be my my

1357
01:10:37,859 --> 01:10:41,029
assumption so there's some stuff we

1358
01:10:39,479 --> 01:10:43,229
could do there so so you know maybe

1359
01:10:41,029 --> 01:10:45,689
there'd be an extra hour next week or

1360
01:10:43,229 --> 01:10:47,399
something about just making that system

1361
01:10:45,689 --> 01:10:49,049
a little more of us to not really making

1362
01:10:47,399 --> 01:10:50,729
the system or bus but coming up with

1363
01:10:49,050 --> 01:10:52,650
whatever conventions we want there that

1364
01:10:50,729 --> 01:10:54,598
that would work well so hopefully you

1365
01:10:52,649 --> 01:10:55,738
join me for that again check that tweet

1366
01:10:54,599 --> 01:10:58,139
bot if you wanted the schedule for next

1367
01:10:55,738 --> 01:10:59,069
week I post it on the weekend until then

1368
01:10:58,139 --> 01:11:01,020
have a great weekend

1369
01:10:59,069 --> 01:11:04,609
have fun coding and I will see you guys

1370
01:11:01,020 --> 01:11:04,610
on the Internet take it easy everyone

