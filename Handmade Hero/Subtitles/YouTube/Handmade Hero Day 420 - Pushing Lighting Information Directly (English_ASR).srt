1
00:00:00,000 --> 00:00:06,150
uh so where I left off let's see here we

2
00:00:04,349 --> 00:00:07,619
go hello everyone and welcome to

3
00:00:06,150 --> 00:00:09,540
handmade Hiro sure we could a complete

4
00:00:07,620 --> 00:00:11,870
game live on stream we are streaming

5
00:00:09,539 --> 00:00:14,279
over YouTube today because twitch

6
00:00:11,869 --> 00:00:16,048
totally rolled over and died on us and

7
00:00:14,279 --> 00:00:18,089
is refusing to let us stream anything at

8
00:00:16,048 --> 00:00:20,070
all so that's just where we're at

9
00:00:18,089 --> 00:00:22,589
hopefully everyone can hear me okay and

10
00:00:20,070 --> 00:00:24,719
see me okay if you can't I am recording

11
00:00:22,589 --> 00:00:28,349
this locally so hopefully we will be

12
00:00:24,719 --> 00:00:29,518
able to post it online and you can watch

13
00:00:28,349 --> 00:00:33,600
it after the fact

14
00:00:29,518 --> 00:00:34,920
where I left off yesterday was I just

15
00:00:33,600 --> 00:00:37,109
cranked the number of things in the

16
00:00:34,920 --> 00:00:39,960
scene up to the full size that will

17
00:00:37,109 --> 00:00:42,539
probably in be in a rendered scene in

18
00:00:39,960 --> 00:00:44,789
the actual game during gameplay so that

19
00:00:42,539 --> 00:00:46,289
we could see the slowest the lighting

20
00:00:44,789 --> 00:00:48,450
would get right now the lighting is

21
00:00:46,289 --> 00:00:49,920
totally unoptimized and so the idea now

22
00:00:48,450 --> 00:00:51,870
is just to start working on optimizing

23
00:00:49,920 --> 00:00:54,809
the lighting to get it to a point where

24
00:00:51,869 --> 00:00:56,159
we can run it at 60 frames a second now

25
00:00:54,808 --> 00:00:58,349
I don't actually think this is going to

26
00:00:56,159 --> 00:01:01,619
be that hard because we found that for a

27
00:00:58,350 --> 00:01:05,338
simplified room one that we were not

28
00:01:01,619 --> 00:01:07,829
actually doing the size of a real level

29
00:01:05,338 --> 00:01:10,349
where there was lots of stuff in it in

30
00:01:07,829 --> 00:01:12,509
this in the simulation region in that

31
00:01:10,349 --> 00:01:15,239
case we actually were running just fine

32
00:01:12,510 --> 00:01:18,630
with the completely unoptimized lighting

33
00:01:15,239 --> 00:01:21,239
that was super crappy in terms of how it

34
00:01:18,629 --> 00:01:23,579
does performance and and so that's just

35
00:01:21,239 --> 00:01:25,560
a good example of how fast computers are

36
00:01:23,579 --> 00:01:27,179
these days when you when you have real

37
00:01:25,560 --> 00:01:29,250
absolutely simple level geometry you can

38
00:01:27,180 --> 00:01:30,630
just have them like the whole thing so

39
00:01:29,250 --> 00:01:32,400
we've gotten it now to a point where

40
00:01:30,629 --> 00:01:33,719
it's relatively slow and so our goal is

41
00:01:32,400 --> 00:01:37,350
now to start thinking about how we're

42
00:01:33,719 --> 00:01:38,489
gonna get this running faster and so

43
00:01:37,349 --> 00:01:40,559
really we're just looking at

44
00:01:38,489 --> 00:01:41,489
streamlining this stuff and starting to

45
00:01:40,560 --> 00:01:43,079
think about how it's going to be

46
00:01:41,489 --> 00:01:44,908
spatially a partition that sort of thing

47
00:01:43,078 --> 00:01:46,769
so let me go ahead and show you what I'm

48
00:01:44,909 --> 00:01:49,170
talking about for those of you who maybe

49
00:01:46,769 --> 00:01:51,060
didn't see yesterday's stream or who

50
00:01:49,170 --> 00:01:52,409
have very short memories and can't

51
00:01:51,060 --> 00:01:55,140
remember what happened on yesterday's

52
00:01:52,409 --> 00:01:57,750
stream I'm going to go ahead and run

53
00:01:55,140 --> 00:02:00,299
this here and what you can see is we get

54
00:01:57,750 --> 00:02:02,938
a very very slow frame rate here because

55
00:02:00,299 --> 00:02:05,729
the level is nice and big you can see up

56
00:02:02,938 --> 00:02:07,379
here you know the its it's like 1.2

57
00:02:05,728 --> 00:02:09,800
seconds per frame right that's what

58
00:02:07,379 --> 00:02:13,049
happens when we get a whole level size

59
00:02:09,800 --> 00:02:13,980
and so that's just an example of where

60
00:02:13,050 --> 00:02:16,469
we are starting from

61
00:02:13,979 --> 00:02:18,780
now our goal of course is to make it run

62
00:02:16,469 --> 00:02:19,949
nice and smoothly there and again I

63
00:02:18,780 --> 00:02:21,449
don't think that's gonna be too much of

64
00:02:19,949 --> 00:02:25,530
a struggle though we'll take you know a

65
00:02:21,449 --> 00:02:28,949
few steps to get there if I show let's

66
00:02:25,530 --> 00:02:32,219
see here if I make it so that doesn't

67
00:02:28,949 --> 00:02:34,500
quite generate as much stuff as that for

68
00:02:32,219 --> 00:02:37,769
example if we just generate a single

69
00:02:34,500 --> 00:02:40,289
seam a single room whatever you want to

70
00:02:37,769 --> 00:02:43,408
call it then we can get we can actually

71
00:02:40,289 --> 00:02:44,878
have fairly playable rates right so you

72
00:02:43,408 --> 00:02:47,519
know even the completely unoptimized

73
00:02:44,878 --> 00:02:49,229
version it doesn't really run in real

74
00:02:47,519 --> 00:02:52,079
time it runs an interactive time though

75
00:02:49,229 --> 00:02:53,669
and the lighting works with shadowing

76
00:02:52,079 --> 00:02:57,299
and everything else and all that good

77
00:02:53,669 --> 00:02:59,068
stuff so we're in relatively good shape

78
00:02:57,299 --> 00:03:01,049
I don't think we're gonna have to

79
00:02:59,068 --> 00:03:02,458
struggle too much but we do need to do a

80
00:03:01,049 --> 00:03:04,349
bunch of work to get us to the point

81
00:03:02,459 --> 00:03:06,959
where we'll be running at 60 frames a

82
00:03:04,348 --> 00:03:09,000
second with real lighting so let's talk

83
00:03:06,959 --> 00:03:11,009
about what the source of the slowness is

84
00:03:09,000 --> 00:03:12,959
in this algorithm because right now

85
00:03:11,009 --> 00:03:14,250
we're not we're not whenever you look at

86
00:03:12,959 --> 00:03:16,289
an optimization problem right there's

87
00:03:14,250 --> 00:03:17,539
different sort of slices of the

88
00:03:16,289 --> 00:03:19,979
optimization that you're thinking about

89
00:03:17,539 --> 00:03:20,909
and in the case that we're talking about

90
00:03:19,979 --> 00:03:22,379
right now

91
00:03:20,909 --> 00:03:24,329
we're really talking about algorithmic

92
00:03:22,379 --> 00:03:26,039
optimization so what I mean by that is

93
00:03:24,329 --> 00:03:27,870
obviously there's you know very

94
00:03:26,039 --> 00:03:31,048
meticulous optimization of like what the

95
00:03:27,870 --> 00:03:32,310
actual CPU and GPU are doing and talking

96
00:03:31,049 --> 00:03:34,530
about the exact performance

97
00:03:32,310 --> 00:03:36,299
characteristics of that and so on we're

98
00:03:34,530 --> 00:03:37,590
not really at that point yet we haven't

99
00:03:36,299 --> 00:03:38,760
even moved legging to the GPU we're

100
00:03:37,590 --> 00:03:41,609
actually doing letting entirely on the

101
00:03:38,759 --> 00:03:43,078
CPU right now and we're not even doing

102
00:03:41,609 --> 00:03:45,569
it with Cindy or any of that stuff so

103
00:03:43,079 --> 00:03:48,030
we're not talking about optimizing the

104
00:03:45,568 --> 00:03:50,369
lighting from a processor standpoint yet

105
00:03:48,030 --> 00:03:51,689
because it's a little bit premature what

106
00:03:50,370 --> 00:03:54,239
we're talking about right now is just

107
00:03:51,689 --> 00:03:55,650
lets architect the lighting algorithm so

108
00:03:54,239 --> 00:03:58,409
that it's running in a reasonable way

109
00:03:55,650 --> 00:04:00,090
that we think will give us reasonable

110
00:03:58,409 --> 00:04:01,500
performance right because there's only

111
00:04:00,090 --> 00:04:03,150
so much you can do to speed up the

112
00:04:01,500 --> 00:04:05,310
computation of the lighting brute force

113
00:04:03,150 --> 00:04:07,379
which is how we're doing it now what

114
00:04:05,310 --> 00:04:09,000
we'd rather do is use some more subtlety

115
00:04:07,378 --> 00:04:11,789
in the way that we compute the lighting

116
00:04:09,000 --> 00:04:14,639
so that we don't have to do as much work

117
00:04:11,789 --> 00:04:16,829
just in the in the abstract sense right

118
00:04:14,639 --> 00:04:19,620
the actual the actual number of work

119
00:04:16,829 --> 00:04:21,449
items we have to actually do to perform

120
00:04:19,620 --> 00:04:24,990
the lighting we're trying to reduce that

121
00:04:21,449 --> 00:04:27,650
down rather than talking about speeding

122
00:04:24,990 --> 00:04:29,240
up an individual piece of work right

123
00:04:27,649 --> 00:04:31,819
those are sort of the two right the two

124
00:04:29,240 --> 00:04:33,590
sort of big parts oxidation so we're not

125
00:04:31,819 --> 00:04:34,849
really gonna be timing stuff right now

126
00:04:33,589 --> 00:04:36,439
or getting into instruction because

127
00:04:34,850 --> 00:04:38,449
that's our stuff we're just at a very

128
00:04:36,439 --> 00:04:40,279
broad phase where we need to just reduce

129
00:04:38,449 --> 00:04:42,919
the total amount of work we're even

130
00:04:40,279 --> 00:04:52,489
considering because that's already just

131
00:04:42,918 --> 00:04:55,279
out in in a ridiculous place okay so let

132
00:04:52,490 --> 00:04:57,889
me show you what I mean by that so if we

133
00:04:55,279 --> 00:05:00,198
go into the render group here what you

134
00:04:57,889 --> 00:05:02,930
can see if we look at the compute light

135
00:05:00,199 --> 00:05:06,919
propagation function and I think now we

136
00:05:02,930 --> 00:05:09,800
did solve this problem we I guess I

137
00:05:06,918 --> 00:05:11,629
should say that the index assignment is

138
00:05:09,800 --> 00:05:18,978
not quite done yet so I'm going to still

139
00:05:11,629 --> 00:05:21,228
put one here that says you know we want

140
00:05:18,978 --> 00:05:28,668
to make sure that we do index

141
00:05:21,228 --> 00:05:30,620
reassignment properly because right now

142
00:05:28,668 --> 00:05:34,519
if you started to move around the scene

143
00:05:30,620 --> 00:05:36,288
we wouldn't necessarily we don't have a

144
00:05:34,519 --> 00:05:39,109
way of like freeing light indices when

145
00:05:36,288 --> 00:05:41,180
they're not used so we want to make sure

146
00:05:39,110 --> 00:05:42,500
that we do that eventually it's not

147
00:05:41,180 --> 00:05:45,348
important to do right now because we're

148
00:05:42,500 --> 00:05:48,038
not moving around so we don't have to

149
00:05:45,348 --> 00:05:50,300
really get inside the the light

150
00:05:48,038 --> 00:05:51,680
algorithm itself it doesn't care because

151
00:05:50,300 --> 00:05:52,098
the lighting indices have already been

152
00:05:51,680 --> 00:05:54,079
assigned

153
00:05:52,098 --> 00:05:57,319
but once we sort of finished the

154
00:05:54,079 --> 00:05:58,459
lighting and say that's done we do in

155
00:05:57,319 --> 00:06:00,110
the renderer need to have a little thing

156
00:05:58,459 --> 00:06:03,918
that can allocate and deallocate like

157
00:06:00,110 --> 00:06:05,629
blocks basically so that they are that

158
00:06:03,918 --> 00:06:08,000
they correspond properly and this isn't

159
00:06:05,629 --> 00:06:10,399
about memory allocation it's just about

160
00:06:08,000 --> 00:06:11,839
correspondence allocation again because

161
00:06:10,399 --> 00:06:14,779
rather than doing spatial correspondence

162
00:06:11,839 --> 00:06:17,269
we're just doing identificar spawned

163
00:06:14,779 --> 00:06:21,469
it's to keep it really smooth and clear

164
00:06:17,269 --> 00:06:24,228
right so this is presumably where we're

165
00:06:21,470 --> 00:06:25,789
spending all the time and why do I say

166
00:06:24,228 --> 00:06:27,589
presumably because I haven't actually

167
00:06:25,788 --> 00:06:29,509
measured it yet but what I can pretty

168
00:06:27,589 --> 00:06:30,799
much tell you is this is our problem the

169
00:06:29,509 --> 00:06:34,689
reason that I know this is our problem

170
00:06:30,800 --> 00:06:37,968
is because it is way too loopy right

171
00:06:34,689 --> 00:06:39,709
loopiness equals slowness basically what

172
00:06:37,968 --> 00:06:41,449
happens is here we have a number of

173
00:06:39,709 --> 00:06:43,278
light propagation iteration

174
00:06:41,449 --> 00:06:45,740
so there's one you know if you if you

175
00:06:43,278 --> 00:06:47,389
imagine the amount of work that has to

176
00:06:45,740 --> 00:06:48,590
be done I'm gonna go ahead and and

177
00:06:47,389 --> 00:06:50,538
switch over to Milton here really

178
00:06:48,589 --> 00:06:52,188
quickly just so I can draw this out for

179
00:06:50,538 --> 00:07:05,449
you

180
00:06:52,189 --> 00:07:09,199
and here's day 420 so let's talk about

181
00:07:05,449 --> 00:07:10,520
the lighting work here so if you look at

182
00:07:09,199 --> 00:07:13,158
what we're actually talking about we

183
00:07:10,519 --> 00:07:16,609
have a number of iterations so we have

184
00:07:13,158 --> 00:07:18,949
to do the number of iterations and then

185
00:07:16,610 --> 00:07:20,389
it's gonna do everything inside why am I

186
00:07:18,949 --> 00:07:22,550
not there we go

187
00:07:20,389 --> 00:07:24,680
so we have however many iterations we're

188
00:07:22,550 --> 00:07:27,740
doing right then we're gonna look at

189
00:07:24,680 --> 00:07:32,150
every emitter right so times the number

190
00:07:27,740 --> 00:07:34,699
of emitters then we're gonna look at at

191
00:07:32,149 --> 00:07:38,718
the number of rays which is the rate

192
00:07:34,699 --> 00:07:40,879
count here and then for each one of

193
00:07:38,718 --> 00:07:47,139
those we're gonna look at the raycast

194
00:07:40,879 --> 00:07:49,218
function itself right here's the raycast

195
00:07:47,139 --> 00:07:54,259
and that's gonna go over all the

196
00:07:49,218 --> 00:07:56,180
surfaces and we end up with this really

197
00:07:54,259 --> 00:07:58,218
big nasty equation for the amount of

198
00:07:56,180 --> 00:08:00,199
work that we're gonna do right we know

199
00:07:58,218 --> 00:08:01,668
that this thing is not particularly high

200
00:08:00,199 --> 00:08:03,408
right I mean it could be as low as

201
00:08:01,668 --> 00:08:05,959
something like four right it's it's not

202
00:08:03,408 --> 00:08:07,550
a particularly high number so that's not

203
00:08:05,959 --> 00:08:10,338
the end of the world necessarily but you

204
00:08:07,550 --> 00:08:12,139
know you get the idea so we have a

205
00:08:10,338 --> 00:08:13,610
certain number of iterations we have a

206
00:08:12,139 --> 00:08:15,769
number of emitters this is going to be

207
00:08:13,610 --> 00:08:17,749
huge right this is gonna be on the order

208
00:08:15,769 --> 00:08:19,519
of like 32,000 or something like this

209
00:08:17,749 --> 00:08:21,949
right this is a huge number potentially

210
00:08:19,519 --> 00:08:23,329
you know we can get that down certainly

211
00:08:21,949 --> 00:08:25,819
to a lower number but this is gonna be

212
00:08:23,329 --> 00:08:27,800
huge so you know maybe this gets down to

213
00:08:25,819 --> 00:08:30,499
something like 16 K or something like

214
00:08:27,800 --> 00:08:32,329
that but all of you remember emitter is

215
00:08:30,499 --> 00:08:34,219
just a term here talking about services

216
00:08:32,328 --> 00:08:36,288
that are reflecting light off of them so

217
00:08:34,219 --> 00:08:40,010
really it's every surface in the game is

218
00:08:36,288 --> 00:08:41,838
in this emitter category here right then

219
00:08:40,009 --> 00:08:44,059
we have some number of rays right and

220
00:08:41,839 --> 00:08:46,550
the number of rays goes potentially down

221
00:08:44,059 --> 00:08:48,289
with each iteration but you know this

222
00:08:46,549 --> 00:08:50,328
number here is going to be something in

223
00:08:48,289 --> 00:08:52,059
the range of like you know between 4 and

224
00:08:50,328 --> 00:08:54,169
64 so it's again a pretty high number

225
00:08:52,059 --> 00:08:55,279
and then the number of surfaces is

226
00:08:54,169 --> 00:08:57,079
basically the same as

227
00:08:55,279 --> 00:09:00,230
more or less there's less surfaces than

228
00:08:57,080 --> 00:09:02,180
emitters because surfaces are a big sort

229
00:09:00,230 --> 00:09:03,980
of occluders whereas emitters are

230
00:09:02,179 --> 00:09:06,379
individual points that might be you know

231
00:09:03,980 --> 00:09:07,879
receiving and sending light and so so

232
00:09:06,379 --> 00:09:09,230
within in surfaces let's say you know

233
00:09:07,879 --> 00:09:10,549
there's a significantly less than this

234
00:09:09,230 --> 00:09:13,879
but there's still a large number like

235
00:09:10,549 --> 00:09:15,439
eight thousand or something right so

236
00:09:13,879 --> 00:09:17,269
when you look at how many of these

237
00:09:15,440 --> 00:09:19,100
things we have you can see why this is

238
00:09:17,269 --> 00:09:20,720
something that can't be run in real time

239
00:09:19,100 --> 00:09:21,110
the way that it is written at the moment

240
00:09:20,720 --> 00:09:23,509
right

241
00:09:21,110 --> 00:09:27,649
oops I remember people gave me this

242
00:09:23,509 --> 00:09:29,689
little speed crunch thing here so yeah

243
00:09:27,649 --> 00:09:32,059
I'm not really very familiar with speed

244
00:09:29,690 --> 00:09:35,210
crunch but it's oops it seems like a

245
00:09:32,059 --> 00:09:37,279
reasonable thing to use so if we look at

246
00:09:35,210 --> 00:09:42,230
what happens here let's say we do 4

247
00:09:37,279 --> 00:09:43,939
times 32 okay then times I don't know

248
00:09:42,230 --> 00:09:45,500
the average of that maybe let's say is

249
00:09:43,940 --> 00:09:47,030
somewhere around 24 depending on how I

250
00:09:45,500 --> 00:09:48,559
don't remember exactly how we break it

251
00:09:47,029 --> 00:09:51,799
down but it's something like that

252
00:09:48,559 --> 00:09:53,750
times 8,000 and you can see that it's

253
00:09:51,799 --> 00:09:55,549
just this ridiculously massive number

254
00:09:53,750 --> 00:09:57,200
here right and remember the number of

255
00:09:55,549 --> 00:10:00,079
cycles per second we're going to get on

256
00:09:57,200 --> 00:10:04,160
something like a CPU is you know in the

257
00:10:00,080 --> 00:10:07,280
ballpark of of this right right

258
00:10:04,159 --> 00:10:08,809
something like 3 gigahertz is is what

259
00:10:07,279 --> 00:10:10,519
we're expecting to get in terms of

260
00:10:08,809 --> 00:10:12,769
cycles it's it when you compare these

261
00:10:10,519 --> 00:10:15,289
two things together it's just a really

262
00:10:12,769 --> 00:10:17,149
unflattering comparison not particularly

263
00:10:15,289 --> 00:10:19,579
good at all so you can see why you start

264
00:10:17,149 --> 00:10:21,459
spiking up to really high numbers

265
00:10:19,580 --> 00:10:25,759
because you need just a ton of

266
00:10:21,460 --> 00:10:27,290
computation time for something that does

267
00:10:25,759 --> 00:10:29,000
this much work even if the work is very

268
00:10:27,289 --> 00:10:30,769
simple and mind you the work is very

269
00:10:29,000 --> 00:10:32,629
simple these are just Rea checks it's

270
00:10:30,769 --> 00:10:35,480
not doing a lot of math but it's enough

271
00:10:32,629 --> 00:10:36,820
right so you can just see that these

272
00:10:35,480 --> 00:10:39,740
numbers have to be pared down

273
00:10:36,820 --> 00:10:41,390
substantially so if you were to imagine

274
00:10:39,740 --> 00:10:44,000
how you might pair these numbers down

275
00:10:41,389 --> 00:10:46,100
substantially right you've got a number

276
00:10:44,000 --> 00:10:49,279
of ways that you could start to look at

277
00:10:46,100 --> 00:10:51,200
reducing these first of all this is a

278
00:10:49,279 --> 00:10:52,519
really easy number to start reducing

279
00:10:51,200 --> 00:10:55,790
right here

280
00:10:52,519 --> 00:10:57,199
and and so in some sense is this one and

281
00:10:55,789 --> 00:10:59,329
so let's talk about that because the ray

282
00:10:57,200 --> 00:11:01,400
count and the iteration count themselves

283
00:10:59,330 --> 00:11:04,629
are very minor right we're talking about

284
00:11:01,399 --> 00:11:07,519
worst case you know it's it's something

285
00:11:04,629 --> 00:11:09,169
like this I mean it's actually I think

286
00:11:07,519 --> 00:11:11,328
it's 64 like

287
00:11:09,169 --> 00:11:14,360
32 plus 16 plus 8 it's something like

288
00:11:11,328 --> 00:11:16,759
this right it's a very low low number so

289
00:11:14,360 --> 00:11:19,550
the number of Ray casts were actually

290
00:11:16,759 --> 00:11:22,220
doing just in terms of the iteration and

291
00:11:19,549 --> 00:11:23,958
raise is extremely low it's just because

292
00:11:22,220 --> 00:11:26,930
there's so many things to recast from

293
00:11:23,958 --> 00:11:28,939
and so many reasons very cost to doing a

294
00:11:26,929 --> 00:11:32,088
hundred and twenty raise you know

295
00:11:28,940 --> 00:11:34,699
millions of times is you know 120

296
00:11:32,089 --> 00:11:37,459
millions of raise you get the idea

297
00:11:34,698 --> 00:11:39,409
so what we're looking at here is these

298
00:11:37,458 --> 00:11:40,819
are the big numbers these are the really

299
00:11:39,409 --> 00:11:43,879
big numbers that are blowing out our

300
00:11:40,820 --> 00:11:46,070
system so what we're really looking at

301
00:11:43,879 --> 00:11:47,570
here is forget these because these are

302
00:11:46,070 --> 00:11:49,730
not that important and can be addressed

303
00:11:47,570 --> 00:11:51,139
in a number of different ways these are

304
00:11:49,730 --> 00:11:53,000
really not that important it's these

305
00:11:51,139 --> 00:11:59,060
that are important so what we're talking

306
00:11:53,000 --> 00:12:03,049
about here is reducing the emitter times

307
00:11:59,059 --> 00:12:05,388
surface Oh N squared part of this

308
00:12:03,049 --> 00:12:06,919
problem right because if these are both

309
00:12:05,389 --> 00:12:08,299
proportional to n they're proportional

310
00:12:06,919 --> 00:12:11,169
to the number of things you know it

311
00:12:08,299 --> 00:12:13,309
looks like an H I apologize for that

312
00:12:11,169 --> 00:12:15,620
these are both proportional to the

313
00:12:13,309 --> 00:12:17,179
number of things in the game right the

314
00:12:15,620 --> 00:12:18,709
number of things that are bouncing light

315
00:12:17,179 --> 00:12:20,659
around and the number of things that are

316
00:12:18,708 --> 00:12:22,338
stopping light from bouncing around are

317
00:12:20,659 --> 00:12:24,139
both proportional to the number of

318
00:12:22,339 --> 00:12:26,060
things in the game so the number of

319
00:12:24,139 --> 00:12:29,480
things that we have in the game squared

320
00:12:26,059 --> 00:12:32,208
is going to be this you know central

321
00:12:29,480 --> 00:12:36,769
problem so as we crank that number up

322
00:12:32,208 --> 00:12:39,588
right that is where we get into hot

323
00:12:36,769 --> 00:12:44,480
water so the question is how do we do

324
00:12:39,589 --> 00:12:46,730
something that takes this central

325
00:12:44,480 --> 00:12:49,278
product and reduces it to something

326
00:12:46,730 --> 00:12:50,990
that's more manageable right how do we

327
00:12:49,278 --> 00:12:52,698
make it so that we can still do

328
00:12:50,990 --> 00:12:54,680
something because we know the lighting

329
00:12:52,698 --> 00:12:56,929
has to do this we know the lighting has

330
00:12:54,679 --> 00:12:59,559
to be about all the emitters emitting to

331
00:12:56,929 --> 00:13:02,689
all the surfaces so how do we do

332
00:12:59,559 --> 00:13:04,549
something smart here and so the answer

333
00:13:02,690 --> 00:13:08,680
is we're probably going to end up with

334
00:13:04,549 --> 00:13:08,679
something that's multi-resolution right

335
00:13:10,419 --> 00:13:14,299
so what we can probably say is all right

336
00:13:13,068 --> 00:13:15,979
look

337
00:13:14,299 --> 00:13:17,689
let's say we have a fairly detailed

338
00:13:15,980 --> 00:13:19,159
thing in the scene where we've got you

339
00:13:17,690 --> 00:13:20,600
know sort of all of these cubes right

340
00:13:19,159 --> 00:13:22,539
around and they're all kind of bouncing

341
00:13:20,600 --> 00:13:23,920
light around

342
00:13:22,539 --> 00:13:25,419
in each other and they're stopping light

343
00:13:23,919 --> 00:13:29,049
from coming in from the outside and

344
00:13:25,419 --> 00:13:32,049
whatever obviously we need to do a full

345
00:13:29,049 --> 00:13:34,569
N squared thing on these five emitters

346
00:13:32,049 --> 00:13:35,769
occluders whatever they are well I mean

347
00:13:34,570 --> 00:13:37,750
everything is kind of both in the game

348
00:13:35,769 --> 00:13:40,269
right so we need to do something like

349
00:13:37,750 --> 00:13:42,129
that so you know we might have a 5 x 5

350
00:13:40,269 --> 00:13:44,379
kind of a situation here that's 25

351
00:13:42,129 --> 00:13:46,029
things right but that's a totally

352
00:13:44,379 --> 00:13:47,860
reasonable number of things to do and

353
00:13:46,029 --> 00:13:50,439
then over here we may have a similar

354
00:13:47,860 --> 00:13:51,850
thing set up right it's bouncing light

355
00:13:50,440 --> 00:13:53,950
all around it right and maybe there's

356
00:13:51,850 --> 00:13:56,290
six of these right so it's a 6 x 6

357
00:13:53,950 --> 00:13:59,830
situation right again totally reasonable

358
00:13:56,289 --> 00:14:02,259
the problem comes when these interact

359
00:13:59,830 --> 00:14:04,450
with each other now right if we

360
00:14:02,259 --> 00:14:07,480
aggregate everything up then we start

361
00:14:04,450 --> 00:14:09,759
saying well now it's you know 11 times

362
00:14:07,480 --> 00:14:12,220
11 if these all have to go into each

363
00:14:09,759 --> 00:14:17,319
other and now we start to get into much

364
00:14:12,220 --> 00:14:18,940
higher numbers right this is a much

365
00:14:17,320 --> 00:14:21,520
higher number than just doing these two

366
00:14:18,940 --> 00:14:25,360
things separately right 25 plus 36 is

367
00:14:21,519 --> 00:14:26,980
much lower than 121 right and this gets

368
00:14:25,360 --> 00:14:30,370
worse and worse as you go this is the Oh

369
00:14:26,980 --> 00:14:31,960
n versus Oh N squared problem if we just

370
00:14:30,370 --> 00:14:33,970
look at little local clusters and add

371
00:14:31,960 --> 00:14:36,490
them together that's gonna scale as a

372
00:14:33,970 --> 00:14:38,529
nice line if we always put them so that

373
00:14:36,490 --> 00:14:41,159
they all have to compute crosswise

374
00:14:38,529 --> 00:14:43,720
that's where we get this sort of nasty

375
00:14:41,159 --> 00:14:45,549
spiral off into infinity kind of Oh N

376
00:14:43,720 --> 00:14:48,009
squared thing right so this is our own

377
00:14:45,549 --> 00:14:50,379
squared curve this is our Oh n line and

378
00:14:48,009 --> 00:14:52,899
we want to try and stay on this line as

379
00:14:50,379 --> 00:14:55,629
much as possible this is where 60 frames

380
00:14:52,899 --> 00:14:59,860
per second lives this is where you know

381
00:14:55,629 --> 00:15:02,110
I don't even I don't know this is where

382
00:14:59,860 --> 00:15:04,389
a pub G server lives right it's out on

383
00:15:02,110 --> 00:15:05,769
this ridiculous line where you can't

384
00:15:04,389 --> 00:15:08,529
even you know you rubberband all over

385
00:15:05,769 --> 00:15:09,939
the place um so this is what we want to

386
00:15:08,529 --> 00:15:11,769
be we want to be on this 60 frames per

387
00:15:09,940 --> 00:15:14,470
second line in order to do that we have

388
00:15:11,769 --> 00:15:16,179
to break this N squared problem and so

389
00:15:14,470 --> 00:15:18,430
when I say multi-resolution I'm saying

390
00:15:16,179 --> 00:15:21,519
is let's look for ways that we can

391
00:15:18,429 --> 00:15:23,109
cleave these things apart and say that

392
00:15:21,519 --> 00:15:24,819
things that are next to each other we

393
00:15:23,110 --> 00:15:26,830
will solve em squared because that's how

394
00:15:24,820 --> 00:15:28,930
light transfer works but can we

395
00:15:26,830 --> 00:15:31,170
basically break things into clusters

396
00:15:28,929 --> 00:15:33,699
which will then just transmit light as

397
00:15:31,169 --> 00:15:35,139
clusters to each other and if you

398
00:15:33,700 --> 00:15:35,900
remember when I started out the lighting

399
00:15:35,139 --> 00:15:37,580
thing

400
00:15:35,899 --> 00:15:41,539
I was talking about doing lighting in

401
00:15:37,580 --> 00:15:43,700
this way we just never actually got to a

402
00:15:41,539 --> 00:15:45,490
point where that multi-resolution thing

403
00:15:43,700 --> 00:15:47,990
I wasn't sure how it's gonna work

404
00:15:45,490 --> 00:15:49,639
so now is the part where that finally

405
00:15:47,990 --> 00:15:51,560
comes in now we can actually implement

406
00:15:49,639 --> 00:15:52,909
something both a resolution because we

407
00:15:51,559 --> 00:15:55,069
have an algorithm that's actually

408
00:15:52,909 --> 00:15:56,419
working with full N squared and now we

409
00:15:55,070 --> 00:16:02,470
just need to figure out a way to break

410
00:15:56,419 --> 00:16:06,069
it into something that's based on unless

411
00:16:02,470 --> 00:16:08,570
how should I put this that's based on

412
00:16:06,070 --> 00:16:10,550
more of an Owen curve of breaking things

413
00:16:08,570 --> 00:16:12,800
down into smaller sections now there's

414
00:16:10,549 --> 00:16:14,959
again two ways you can sort of look at

415
00:16:12,799 --> 00:16:20,719
this problem you can look at this

416
00:16:14,960 --> 00:16:23,870
problem as Oh n versus some small number

417
00:16:20,720 --> 00:16:29,330
right so we can look at it as om versus

418
00:16:23,870 --> 00:16:33,730
some very small number right or we can

419
00:16:29,330 --> 00:16:33,730
look at this as you know small number

420
00:16:33,879 --> 00:16:39,620
versus small number and I want to talk

421
00:16:38,480 --> 00:16:40,430
about the difference between these two

422
00:16:39,620 --> 00:16:43,519
things because they're two different

423
00:16:40,429 --> 00:16:45,859
types of algorithms so this is the

424
00:16:43,519 --> 00:16:49,100
standard ray casting approach for like

425
00:16:45,860 --> 00:16:53,300
offline rendering we still loop over

426
00:16:49,100 --> 00:16:55,670
everything that is going to be doing say

427
00:16:53,299 --> 00:16:58,549
transmission or something so we still

428
00:16:55,669 --> 00:17:00,860
loop over 32,000 things for transmission

429
00:16:58,549 --> 00:17:03,589
or reception whichever one we want to do

430
00:17:00,860 --> 00:17:07,220
but then we employ some kind of a

431
00:17:03,590 --> 00:17:10,309
spatial partition so that we only

432
00:17:07,220 --> 00:17:12,709
consider a subset of the N when we

433
00:17:10,309 --> 00:17:15,559
actually go to do like intersection or

434
00:17:12,709 --> 00:17:18,529
something like that right so for example

435
00:17:15,559 --> 00:17:21,829
let's say we have a KD tree we've talked

436
00:17:18,529 --> 00:17:27,829
about these before or an octree or a

437
00:17:21,829 --> 00:17:30,559
quad tree or a BSP tree right let's say

438
00:17:27,829 --> 00:17:32,299
we have any kind of spatial partition so

439
00:17:30,559 --> 00:17:34,609
one way of looking at this is saying

440
00:17:32,299 --> 00:17:36,799
well let's loop over everything we were

441
00:17:34,609 --> 00:17:38,750
going to do before so for example up

442
00:17:36,799 --> 00:17:41,419
here when we wrote this giant equation

443
00:17:38,750 --> 00:17:43,609
let's say that all of this is going to

444
00:17:41,420 --> 00:17:45,200
be exactly the same as it was and then

445
00:17:43,609 --> 00:17:48,019
the only thing we're going to do is

446
00:17:45,200 --> 00:17:49,640
employ a spatial partition here one of

447
00:17:48,019 --> 00:17:52,069
those tree types here so

448
00:17:49,640 --> 00:17:55,670
that surfaces instead of being o n is

449
00:17:52,069 --> 00:18:01,789
like o log N or something right so this

450
00:17:55,670 --> 00:18:03,740
is our small number so it's saying take

451
00:18:01,789 --> 00:18:05,990
all of this leave them as large numbers

452
00:18:03,740 --> 00:18:09,799
knock one down to a small number but

453
00:18:05,990 --> 00:18:13,549
this this guy is still o n right that's

454
00:18:09,799 --> 00:18:16,460
one way to do it that way will be slower

455
00:18:13,549 --> 00:18:18,819
but potentially more accurate maybe it's

456
00:18:16,460 --> 00:18:22,670
still operating on everything right that

457
00:18:18,819 --> 00:18:25,329
way will be more accurate but slower

458
00:18:22,670 --> 00:18:28,600
than something that is not actually

459
00:18:25,329 --> 00:18:31,279
accelerating the exact equation right Oh

460
00:18:28,599 --> 00:18:39,279
looks like steam is still running on my

461
00:18:31,279 --> 00:18:41,589
machine how do I exit good there we go

462
00:18:39,279 --> 00:18:45,079
sorry about that

463
00:18:41,589 --> 00:18:47,149
little steam toasts there everywhere uh

464
00:18:45,079 --> 00:18:51,289
so basically what I'm trying to say here

465
00:18:47,150 --> 00:18:53,360
is if you take a look at how that was

466
00:18:51,289 --> 00:18:55,250
working we're taking one part of the of

467
00:18:53,359 --> 00:18:57,919
the giant multiplication expression and

468
00:18:55,250 --> 00:18:59,329
we're simplifying that one down to be a

469
00:18:57,920 --> 00:19:00,740
small number but everything else is

470
00:18:59,329 --> 00:19:03,319
working exactly the way it was so we're

471
00:19:00,740 --> 00:19:05,480
really just accelerating one search part

472
00:19:03,319 --> 00:19:07,639
one part that was saying what did I

473
00:19:05,480 --> 00:19:10,309
intersect we're accelerating just that

474
00:19:07,640 --> 00:19:11,990
one part right but another way of

475
00:19:10,309 --> 00:19:17,359
looking at it is again sort of the

476
00:19:11,990 --> 00:19:19,339
multi-resolution or approach is not that

477
00:19:17,359 --> 00:19:22,429
the multi-resolution approach says let's

478
00:19:19,339 --> 00:19:24,079
simplify things down so that rather than

479
00:19:22,430 --> 00:19:26,060
ever working on the whole problem

480
00:19:24,079 --> 00:19:28,939
exactly as it was we're just gonna work

481
00:19:26,059 --> 00:19:31,789
on clusters that sort of smush down into

482
00:19:28,940 --> 00:19:32,930
approximations for areas and so that was

483
00:19:31,789 --> 00:19:34,460
sort of what I was interested in

484
00:19:32,930 --> 00:19:36,680
exploring now in terms of how we

485
00:19:34,460 --> 00:19:38,809
accelerate things and what that means is

486
00:19:36,680 --> 00:19:40,880
exactly what I was drawing before when

487
00:19:38,809 --> 00:19:42,139
we have sort of that that example that I

488
00:19:40,880 --> 00:19:44,720
was saying oh you've got these people

489
00:19:42,140 --> 00:19:46,730
are transmitting light right well the

490
00:19:44,720 --> 00:19:49,130
way that the tree based sort of

491
00:19:46,730 --> 00:19:52,309
accelerate just one half of the problem

492
00:19:49,130 --> 00:19:54,620
works is when we go to transmit light

493
00:19:52,309 --> 00:19:56,899
say from here to here what we're doing

494
00:19:54,619 --> 00:19:59,209
is we're saying well we binary space

495
00:19:56,900 --> 00:20:01,640
partition to this or something in some

496
00:19:59,210 --> 00:20:03,319
way that cleaves up the space so that

497
00:20:01,640 --> 00:20:05,360
really we just do in

498
00:20:03,319 --> 00:20:07,519
of having to check against all six well

499
00:20:05,359 --> 00:20:09,469
not just all six but all eleven of the

500
00:20:07,519 --> 00:20:11,359
things here we're only gonna check do

501
00:20:09,470 --> 00:20:13,039
like a couple plane tests so like three

502
00:20:11,359 --> 00:20:14,359
tests and then we know that we only

503
00:20:13,039 --> 00:20:17,299
really have to check this guy or

504
00:20:14,359 --> 00:20:20,059
something right so again that's using

505
00:20:17,299 --> 00:20:21,500
we're doing exactly all the same work as

506
00:20:20,059 --> 00:20:23,059
we were doing before but we're just

507
00:20:21,500 --> 00:20:24,890
knocking down the number of things we

508
00:20:23,059 --> 00:20:26,659
consider when we go to do our expensive

509
00:20:24,890 --> 00:20:28,280
tests right

510
00:20:26,660 --> 00:20:30,320
the multi-resolution approach is

511
00:20:28,279 --> 00:20:32,690
different it knocks everything down to

512
00:20:30,319 --> 00:20:34,909
small numbers the way that works it says

513
00:20:32,690 --> 00:20:36,860
let's identify clusters that will

514
00:20:34,910 --> 00:20:38,630
transmit light amongst themselves and

515
00:20:36,859 --> 00:20:41,240
have some idea of how the light

516
00:20:38,630 --> 00:20:43,850
transmits out from them and then this

517
00:20:41,240 --> 00:20:47,180
whole segment gets reduced to just its

518
00:20:43,849 --> 00:20:51,709
cluster right so now this thing is just

519
00:20:47,180 --> 00:20:56,660
a single it's one emitter you know

520
00:20:51,710 --> 00:20:58,850
occluder for all five same with this one

521
00:20:56,660 --> 00:21:00,830
so that by the time we do transfer

522
00:20:58,849 --> 00:21:04,279
between these two things we're talking

523
00:21:00,829 --> 00:21:06,230
about a one-to-one transfer right and

524
00:21:04,279 --> 00:21:14,210
this is I talked about this as a multi

525
00:21:06,230 --> 00:21:16,220
grid right approach to lighting and what

526
00:21:14,210 --> 00:21:18,920
that means is it's saying okay let's

527
00:21:16,220 --> 00:21:21,230
just say there's a very you know we have

528
00:21:18,920 --> 00:21:23,150
a very granular 32 thousand things or

529
00:21:21,230 --> 00:21:24,890
whatever at the bottom we're simply not

530
00:21:23,150 --> 00:21:26,870
going to do light transmission between

531
00:21:24,890 --> 00:21:28,970
32,000 things we don't even want to

532
00:21:26,869 --> 00:21:30,409
consider that as an option instead what

533
00:21:28,970 --> 00:21:34,160
we're going to do is we're going to

534
00:21:30,410 --> 00:21:36,170
bounce light around clusters of these

535
00:21:34,160 --> 00:21:38,779
things that then collapse in on

536
00:21:36,170 --> 00:21:40,970
themselves into sort of smaller and

537
00:21:38,779 --> 00:21:42,950
smaller groups those groups then

538
00:21:40,970 --> 00:21:46,910
transfer light between each other and

539
00:21:42,950 --> 00:21:51,440
propagate back down to the lower levels

540
00:21:46,910 --> 00:21:54,590
right so I don't know these are two ways

541
00:21:51,440 --> 00:21:59,180
of approaching the problem one benefit

542
00:21:54,589 --> 00:22:00,949
of the one benefit of the one that is

543
00:21:59,180 --> 00:22:05,860
not multi-resolution that's basically

544
00:22:00,950 --> 00:22:05,860
just saying hey let's go ahead and and

545
00:22:06,099 --> 00:22:11,659
just use acceleration for the query is

546
00:22:09,950 --> 00:22:14,509
you don't have to worry about how those

547
00:22:11,660 --> 00:22:16,340
cluster boundaries affect things the

548
00:22:14,509 --> 00:22:17,119
strictly multi-resolution approach which

549
00:22:16,339 --> 00:22:19,970
is an up it or

550
00:22:17,119 --> 00:22:22,789
and then down like n up iterations and

551
00:22:19,970 --> 00:22:24,680
end down iterations is that it's

552
00:22:22,789 --> 00:22:27,879
perfectly login all the time it always

553
00:22:24,680 --> 00:22:30,590
is looking at that subdividing thing sub

554
00:22:27,880 --> 00:22:32,750
something like how do I say it like sub

555
00:22:30,589 --> 00:22:34,759
collapsing right it's it's it's reducing

556
00:22:32,750 --> 00:22:36,970
the numbers up up up up up does that

557
00:22:34,759 --> 00:22:40,099
some things and then it goes back down

558
00:22:36,970 --> 00:22:42,200
the problem with it of course is that

559
00:22:40,099 --> 00:22:43,969
you have to figure out what you do at

560
00:22:42,200 --> 00:22:46,970
these cluster boundaries to not see

561
00:22:43,970 --> 00:22:48,620
seams or things like this and so one

562
00:22:46,970 --> 00:22:51,380
potential way that we could mix these

563
00:22:48,619 --> 00:22:52,909
two approaches together is to you know

564
00:22:51,380 --> 00:22:54,440
sort of take a page from the thing that

565
00:22:52,910 --> 00:22:57,740
we were experimenting with early on as

566
00:22:54,440 --> 00:23:02,480
well where where we actually do still

567
00:22:57,740 --> 00:23:04,370
loop over every receptor surface but

568
00:23:02,480 --> 00:23:06,049
when we look at where it's getting its

569
00:23:04,369 --> 00:23:08,419
light from we do that in a multi

570
00:23:06,049 --> 00:23:10,428
resolution fashion so we just look at

571
00:23:08,420 --> 00:23:14,690
things that are far you know we we sort

572
00:23:10,429 --> 00:23:16,790
of have some entirely grouped version

573
00:23:14,690 --> 00:23:18,920
some tree that talks about grouped

574
00:23:16,789 --> 00:23:21,470
occluders emitters and we just go

575
00:23:18,920 --> 00:23:24,710
through that that sort of grouped

576
00:23:21,470 --> 00:23:27,319
version and we subdivide it down to as

577
00:23:24,710 --> 00:23:29,360
detailed as we need to in terms of

578
00:23:27,319 --> 00:23:31,129
things that should be considered so the

579
00:23:29,359 --> 00:23:33,500
way to think about that is that we have

580
00:23:31,130 --> 00:23:36,170
some multi resolution version of this

581
00:23:33,500 --> 00:23:40,960
thing where okay let's say that here's

582
00:23:36,170 --> 00:23:40,960
all of the things we have in the scene

583
00:23:43,089 --> 00:23:48,980
and we start the lighting algorithm by

584
00:23:47,058 --> 00:23:52,039
just collapsing everything up into a

585
00:23:48,980 --> 00:23:54,259
tree so these things form a tree where

586
00:23:52,039 --> 00:23:56,149
there's a root node right that

587
00:23:54,259 --> 00:23:58,670
encompasses everything in here

588
00:23:56,150 --> 00:24:01,070
it split into some number of child nodes

589
00:23:58,670 --> 00:24:04,759
right those are split into some number

590
00:24:01,069 --> 00:24:05,990
of child nodes blah blah blah right and

591
00:24:04,759 --> 00:24:08,179
then eventually you get down and the

592
00:24:05,990 --> 00:24:10,039
Leafs are individual ones of these right

593
00:24:08,179 --> 00:24:12,200
so we just have an entire tree when we

594
00:24:10,039 --> 00:24:14,269
go to compute a lighting transfer for

595
00:24:12,200 --> 00:24:16,370
any given one of these what we do is we

596
00:24:14,269 --> 00:24:18,440
use the leaf nodes for the things that

597
00:24:16,369 --> 00:24:21,199
are close to it so these things let's

598
00:24:18,440 --> 00:24:24,650
say here are all involved in direct

599
00:24:21,200 --> 00:24:26,509
computations but then anything that's

600
00:24:24,650 --> 00:24:29,810
further away that doesn't need to be

601
00:24:26,509 --> 00:24:30,680
split say this cluster here this cluster

602
00:24:29,809 --> 00:24:32,869
here

603
00:24:30,680 --> 00:24:36,710
this cluster here maybe that's clustered

604
00:24:32,869 --> 00:24:38,509
right just transmit light as a group you

605
00:24:36,710 --> 00:24:44,240
know they transmit in block oral light

606
00:24:38,509 --> 00:24:46,460
as a group and you know I don't know is

607
00:24:44,240 --> 00:24:49,849
it is it the right way to do it I am Not

608
00:24:46,460 --> 00:24:51,890
sure it's just a thought right and so

609
00:24:49,849 --> 00:24:54,199
the way that that I'm thinking about

610
00:24:51,890 --> 00:24:56,540
that is to just say okay for any given

611
00:24:54,200 --> 00:24:59,029
lighting computation we just have a tree

612
00:24:56,539 --> 00:25:00,889
walk that goes downward that's something

613
00:24:59,029 --> 00:25:02,389
we can implement in a shader assuming

614
00:25:00,890 --> 00:25:03,830
the tree has been built ahead of time

615
00:25:02,390 --> 00:25:05,630
building the tree in a shader might not

616
00:25:03,829 --> 00:25:07,699
work but that's okay we could build the

617
00:25:05,630 --> 00:25:09,440
tree on the CPU so so basically the CPU

618
00:25:07,700 --> 00:25:10,759
builds the tree and sends it down a

619
00:25:09,440 --> 00:25:12,080
computer shader could build the tree

620
00:25:10,759 --> 00:25:13,309
just fine but I don't know that we want

621
00:25:12,079 --> 00:25:15,460
to go into that territory because

622
00:25:13,309 --> 00:25:17,960
sometimes you're you know

623
00:25:15,460 --> 00:25:19,360
better off keeping things simple enough

624
00:25:17,960 --> 00:25:21,799
that you don't require compute shaders

625
00:25:19,359 --> 00:25:23,059
so anyway that's the sort of thing that

626
00:25:21,799 --> 00:25:24,919
I'm thinking about is just could be

627
00:25:23,059 --> 00:25:27,470
maybe multiple multi Reza

628
00:25:24,920 --> 00:25:28,730
just one side now on the other side so

629
00:25:27,470 --> 00:25:32,210
we're still not doing the thing where

630
00:25:28,730 --> 00:25:33,740
we're doing you know technically Oh N

631
00:25:32,210 --> 00:25:34,970
squared but we're breaking one half of

632
00:25:33,740 --> 00:25:38,000
the Oh N squared by using a spatial

633
00:25:34,970 --> 00:25:40,759
partition instead we're doing o n versus

634
00:25:38,000 --> 00:25:43,250
some sort of multi resolution thing

635
00:25:40,759 --> 00:25:44,869
where we don't even we're not even doing

636
00:25:43,250 --> 00:25:46,549
spatial partitioning to figure out what

637
00:25:44,869 --> 00:25:49,219
we hit in a faster fashion we're

638
00:25:46,549 --> 00:25:51,169
literally testing against things that

639
00:25:49,220 --> 00:25:55,309
are multi resolution as you go further

640
00:25:51,170 --> 00:25:59,029
out so that's my you know that's my sort

641
00:25:55,309 --> 00:26:00,649
of rough feeling on that and you know in

642
00:25:59,029 --> 00:26:02,990
order to do this I think because our

643
00:26:00,650 --> 00:26:04,970
world is kind of cube like I feel like

644
00:26:02,990 --> 00:26:07,549
one thing we could do is just do all of

645
00:26:04,970 --> 00:26:09,380
this on cubes so we could say that every

646
00:26:07,549 --> 00:26:14,180
lighting element is really just a cube

647
00:26:09,380 --> 00:26:18,920
and you know we just sort of coalesce

648
00:26:14,180 --> 00:26:21,380
these cubes together and off we go so we

649
00:26:18,920 --> 00:26:25,519
would have sort of a the way this would

650
00:26:21,380 --> 00:26:28,520
look look is we'd have a giant like mama

651
00:26:25,519 --> 00:26:30,619
cube you know which would be sort of the

652
00:26:28,519 --> 00:26:32,089
the cube that contains all cubes then

653
00:26:30,619 --> 00:26:34,699
inside there we have you know some

654
00:26:32,089 --> 00:26:36,470
smaller cubes and inside those cubes we

655
00:26:34,700 --> 00:26:39,440
have smaller cubes yet until eventually

656
00:26:36,470 --> 00:26:40,970
we have the level geometry right and the

657
00:26:39,440 --> 00:26:42,980
way that we would build this is probably

658
00:26:40,970 --> 00:26:44,339
doing some kind of thing where we take

659
00:26:42,980 --> 00:26:45,929
closest you know

660
00:26:44,339 --> 00:26:47,339
the beginning we sort of take a spatial

661
00:26:45,929 --> 00:26:48,990
partition and dump things in and find

662
00:26:47,339 --> 00:26:50,519
the closest cubes we collapse those

663
00:26:48,990 --> 00:26:52,500
cubes together up and up and up and up

664
00:26:50,519 --> 00:26:54,179
and to end we may be group you know four

665
00:26:52,500 --> 00:26:56,220
cubes at a time or something like this I

666
00:26:54,179 --> 00:26:57,570
don't know so we can do something like

667
00:26:56,220 --> 00:26:59,100
that where we just kind of group these

668
00:26:57,569 --> 00:27:01,829
things together based on their proximity

669
00:26:59,099 --> 00:27:03,480
and hey our world storage already stores

670
00:27:01,829 --> 00:27:05,369
things based on proximity so in theory

671
00:27:03,480 --> 00:27:06,659
if we played our cards right we could

672
00:27:05,369 --> 00:27:08,038
even keep that flowing through the whole

673
00:27:06,659 --> 00:27:12,270
pipeline and not have to do a lot of

674
00:27:08,038 --> 00:27:14,190
work to create the sort of higher higher

675
00:27:12,269 --> 00:27:16,679
order work there in the first place

676
00:27:14,190 --> 00:27:19,649
that might be good as well so I feel

677
00:27:16,679 --> 00:27:20,940
like we're you know that's based on the

678
00:27:19,648 --> 00:27:23,369
fact that our world is supposed to be

679
00:27:20,940 --> 00:27:24,899
kind of QB anyway it seems like that's

680
00:27:23,369 --> 00:27:27,028
the case now when I say cube I don't

681
00:27:24,898 --> 00:27:29,699
really mean cube I really mean right

682
00:27:27,028 --> 00:27:31,528
rectangular prism obviously like it's

683
00:27:29,700 --> 00:27:33,750
something that has a width a height and

684
00:27:31,528 --> 00:27:35,669
a depth these are not all the same it's

685
00:27:33,750 --> 00:27:38,640
not with cubed right so it's not really

686
00:27:35,669 --> 00:27:41,640
a cube it's actually a right rectangular

687
00:27:38,640 --> 00:27:49,140
prism but you know what I mean so that

688
00:27:41,640 --> 00:27:52,140
is and I and I mortally mean an axis

689
00:27:49,140 --> 00:27:55,110
aligned right rectangular prism often

690
00:27:52,140 --> 00:28:00,028
called an access aligned bounding box

691
00:27:55,109 --> 00:28:04,048
for it a ABB uh so I think you know

692
00:28:00,028 --> 00:28:07,319
that's a relatively reasonable way we

693
00:28:04,048 --> 00:28:08,609
could start to approach things and again

694
00:28:07,319 --> 00:28:10,139
it's hard to know ahead of time whether

695
00:28:08,609 --> 00:28:12,509
it's intelligent or not sometimes you

696
00:28:10,140 --> 00:28:13,919
have to just explore but that's I think

697
00:28:12,509 --> 00:28:16,140
what I would like to go down and the

698
00:28:13,919 --> 00:28:22,980
steps to this would be basically like

699
00:28:16,140 --> 00:28:24,509
Cuba five the lighting so basically

700
00:28:22,980 --> 00:28:27,179
right now we're actually talking about

701
00:28:24,509 --> 00:28:29,190
services as being individual plates I

702
00:28:27,179 --> 00:28:31,048
think maybe we switched to cubes because

703
00:28:29,190 --> 00:28:33,659
that way we can just talk about a whole

704
00:28:31,048 --> 00:28:36,058
cube at a time and we know that

705
00:28:33,659 --> 00:28:39,120
everything is always a cube or right

706
00:28:36,058 --> 00:28:47,490
rectangle prison or a a B Cuba Phi the

707
00:28:39,119 --> 00:28:54,839
lighting build cube tree and then you

708
00:28:47,490 --> 00:28:56,819
know update lighting with the tree and

709
00:28:54,839 --> 00:28:57,788
so it's actually three fairly simple

710
00:28:56,819 --> 00:29:00,970
steps

711
00:28:57,788 --> 00:29:03,700
I think honestly this is the only hard

712
00:29:00,970 --> 00:29:08,350
one right the rest is just busy work but

713
00:29:03,700 --> 00:29:11,558
building a tree of spatially coherent

714
00:29:08,349 --> 00:29:13,808
lighting elements is actually something

715
00:29:11,558 --> 00:29:23,829
that is a little bit touchy right like

716
00:29:13,808 --> 00:29:25,868
that's yeah you know so you know this is

717
00:29:23,829 --> 00:29:33,848
something that we can that we can do and

718
00:29:25,868 --> 00:29:37,720
I think this bottom step here you know

719
00:29:33,848 --> 00:29:46,418
the update lighting with tree

720
00:29:37,720 --> 00:29:48,098
I summon ulti there right like so if you

721
00:29:46,419 --> 00:29:50,559
think about what has to happen there if

722
00:29:48,098 --> 00:29:52,710
we imagine that we're talking about the

723
00:29:50,558 --> 00:29:56,348
concept that this thing is an emitter

724
00:29:52,710 --> 00:29:58,058
then it's kind of it's it's gonna be a

725
00:29:56,348 --> 00:30:02,288
little bit subtle to say well if I've

726
00:29:58,058 --> 00:30:05,348
got a bunch of cubes and I want to talk

727
00:30:02,288 --> 00:30:11,460
about an enclosing cube knowing how much

728
00:30:05,348 --> 00:30:15,939
light hits like exits here right is

729
00:30:11,460 --> 00:30:17,710
relatively difficult I say relatively

730
00:30:15,940 --> 00:30:21,278
difficult because it's not that

731
00:30:17,710 --> 00:30:23,169
difficult it's just relative to the rest

732
00:30:21,278 --> 00:30:25,690
of stuff for doing but honestly I think

733
00:30:23,169 --> 00:30:28,479
all it is is just saying all right when

734
00:30:25,690 --> 00:30:31,960
we do light transport do light transport

735
00:30:28,479 --> 00:30:34,840
amongst the things in the set and have a

736
00:30:31,960 --> 00:30:37,598
bound around the set such that when you

737
00:30:34,839 --> 00:30:40,388
hit that bound you add lighting to the

738
00:30:37,598 --> 00:30:42,729
boundary element right so that these

739
00:30:40,388 --> 00:30:45,158
boundary elements gain their lighting

740
00:30:42,729 --> 00:30:50,200
from things that would have exited the

741
00:30:45,159 --> 00:30:52,330
volume right we store those up and so

742
00:30:50,200 --> 00:30:54,399
then we just have two light passes we

743
00:30:52,329 --> 00:30:55,778
have the emission phase where things are

744
00:30:54,398 --> 00:30:58,839
transmitting light amongst themselves

745
00:30:55,778 --> 00:31:01,148
here and any light errant light that

746
00:30:58,839 --> 00:31:04,449
would go out hits the boundary element

747
00:31:01,148 --> 00:31:07,028
hits the bound and gets stored there

748
00:31:04,450 --> 00:31:09,399
then when we do light transfer between

749
00:31:07,028 --> 00:31:11,528
the larger elements they just transfer

750
00:31:09,398 --> 00:31:11,859
light among those bounds just like they

751
00:31:11,528 --> 00:31:13,480
were in

752
00:31:11,859 --> 00:31:15,879
here and they've got a large amount as

753
00:31:13,480 --> 00:31:18,279
well right then when we come down to

754
00:31:15,880 --> 00:31:20,020
propagate the things that come in we

755
00:31:18,279 --> 00:31:23,678
just have that inbound lighting now what

756
00:31:20,019 --> 00:31:26,500
we could do as well is stagger that by

757
00:31:23,679 --> 00:31:29,170
one frame so on every frame we just do

758
00:31:26,500 --> 00:31:32,410
an up lighting pass that's all we do and

759
00:31:29,170 --> 00:31:34,630
during the up lighting pass wheats are

760
00:31:32,410 --> 00:31:39,509
emitting from these surfaces as well

761
00:31:34,630 --> 00:31:43,150
right in skew surfaces or interior

762
00:31:39,509 --> 00:31:45,819
surfaces and I think that's a reasonable

763
00:31:43,150 --> 00:32:02,040
I think that's a reasonable approach

764
00:31:45,819 --> 00:32:06,220
right I mean I can't see I can't see

765
00:32:02,039 --> 00:32:07,659
much peculiar about that right whether

766
00:32:06,220 --> 00:32:09,910
it works in whether it's great or not I

767
00:32:07,660 --> 00:32:13,419
don't know again you know when you're

768
00:32:09,910 --> 00:32:15,160
talking about sort of exploring novel

769
00:32:13,419 --> 00:32:17,830
routines you kind of have to wing it a

770
00:32:15,160 --> 00:32:20,048
little bit and just go with some

771
00:32:17,829 --> 00:32:21,428
experiments the whole lighting so far

772
00:32:20,048 --> 00:32:23,200
has been experiments and it's gotten us

773
00:32:21,429 --> 00:32:24,340
to a pretty good place and so now we're

774
00:32:23,200 --> 00:32:25,660
just talking about some experiments to

775
00:32:24,339 --> 00:32:29,409
figure out how we get the performance up

776
00:32:25,660 --> 00:32:37,509
to where we want it to be and so I guess

777
00:32:29,410 --> 00:32:39,490
that's yeah I guess that all sounds

778
00:32:37,509 --> 00:32:41,829
plausible enough to me that I think I'd

779
00:32:39,490 --> 00:32:43,509
be ready to pull the trigger on that I'm

780
00:32:41,829 --> 00:32:44,678
just kind of ruminating it in my head a

781
00:32:43,509 --> 00:32:46,089
little bit and trying to think if

782
00:32:44,679 --> 00:32:47,798
there's anything that I'm forgetting

783
00:32:46,089 --> 00:32:50,230
there in terms of things that are why

784
00:32:47,798 --> 00:32:53,440
you obviously shouldn't start down this

785
00:32:50,230 --> 00:32:56,160
path but I'm not really coming up with

786
00:32:53,440 --> 00:32:56,160
much

787
00:33:04,398 --> 00:33:11,908
so I will see one thing that is kind of

788
00:33:07,288 --> 00:33:15,868
difficult about it that I think is a

789
00:33:11,909 --> 00:33:17,789
little bit tricky is that in the case of

790
00:33:15,868 --> 00:33:19,558
our world we're talking about there's

791
00:33:17,788 --> 00:33:21,709
like things like lots of little cubes

792
00:33:19,558 --> 00:33:26,158
that make up the ground or something

793
00:33:21,709 --> 00:33:30,379
right and so what's gonna happen if you

794
00:33:26,159 --> 00:33:35,429
imagine you take a look at these systems

795
00:33:30,378 --> 00:33:36,838
as they are when you imagine breaking

796
00:33:35,429 --> 00:33:39,149
these into chunks you're gonna get

797
00:33:36,838 --> 00:33:41,969
something where you've got one bounding

798
00:33:39,148 --> 00:33:45,118
cube like so and one bounding cube like

799
00:33:41,969 --> 00:33:47,278
so and these are tight right so you've

800
00:33:45,118 --> 00:33:48,988
got cubes that are like this next to

801
00:33:47,278 --> 00:33:51,078
each other talking about light transfer

802
00:33:48,989 --> 00:33:55,649
and then you've got an additional

803
00:33:51,078 --> 00:33:57,989
version of that right in other words all

804
00:33:55,648 --> 00:34:00,808
of these cubes are tight together if

805
00:33:57,989 --> 00:34:03,119
they were broken up in this way those

806
00:34:00,808 --> 00:34:06,928
two are also tight together meaning

807
00:34:03,118 --> 00:34:08,190
their faces are coincident I think

808
00:34:06,929 --> 00:34:12,778
that's gonna make it relatively

809
00:34:08,190 --> 00:34:15,480
difficult to that's gonna make it

810
00:34:12,778 --> 00:34:17,278
relatively difficult to do the light

811
00:34:15,480 --> 00:34:21,269
transfer if these were sort of cubes

812
00:34:17,278 --> 00:34:23,489
that were floating in space you could be

813
00:34:21,268 --> 00:34:26,028
a lot sloppier with how this was working

814
00:34:23,489 --> 00:34:28,588
because you don't have a budding phases

815
00:34:26,028 --> 00:34:30,960
of you're sort of multi-resolution

816
00:34:28,588 --> 00:34:33,210
groups but here we do have a budding

817
00:34:30,960 --> 00:34:34,858
phases and I think that that's going to

818
00:34:33,210 --> 00:34:37,079
make the letting transfer more difficult

819
00:34:34,858 --> 00:34:38,848
because when you're talking about two

820
00:34:37,079 --> 00:34:41,068
phases that are right coincident with

821
00:34:38,849 --> 00:34:42,809
each other figuring out how the light

822
00:34:41,068 --> 00:34:48,418
transfers between them is relatively

823
00:34:42,809 --> 00:34:52,409
difficult you have to start being

824
00:34:48,418 --> 00:34:55,078
precise with how you are treating values

825
00:34:52,409 --> 00:34:58,140
in the system because simple ray casting

826
00:34:55,079 --> 00:35:00,298
is not going to work if you talk about

827
00:34:58,139 --> 00:35:01,768
two surfaces that are directly on top of

828
00:35:00,298 --> 00:35:04,139
each other right one pointing this way

829
00:35:01,768 --> 00:35:05,848
one pointing that way figuring out that

830
00:35:04,139 --> 00:35:08,219
the light that leaves this surface is

831
00:35:05,849 --> 00:35:13,640
100% going to go into this surface

832
00:35:08,219 --> 00:35:13,639
basically is a lot more difficult than

833
00:35:13,710 --> 00:35:19,139
having surfaces that are separated from

834
00:35:15,929 --> 00:35:22,250
each other and again it's because the

835
00:35:19,139 --> 00:35:24,509
raycast itself now is numerically

836
00:35:22,250 --> 00:35:27,059
finicky because you're talking about

837
00:35:24,510 --> 00:35:29,849
coincident points that are exactly on

838
00:35:27,059 --> 00:35:33,420
planes transmitting to those planes you

839
00:35:29,849 --> 00:35:35,730
have no room for error anymore and so

840
00:35:33,420 --> 00:35:38,099
one of the things that we might have to

841
00:35:35,730 --> 00:35:40,440
do is sort of special you know treat

842
00:35:38,099 --> 00:35:42,059
these value especially we did say that

843
00:35:40,440 --> 00:35:44,309
they're going to be access aligned that

844
00:35:42,059 --> 00:35:48,480
gives us an advantage the advantage that

845
00:35:44,309 --> 00:35:50,759
it gives us is we know that things are

846
00:35:48,480 --> 00:35:52,710
going to line up exactly they're not you

847
00:35:50,760 --> 00:35:54,750
know if you're talking about two planes

848
00:35:52,710 --> 00:35:57,088
that look like this that are right on

849
00:35:54,750 --> 00:35:59,579
top of each other they're not going to

850
00:35:57,088 --> 00:36:01,619
line up exactly once you reduce them to

851
00:35:59,579 --> 00:36:03,449
floating point you know they could look

852
00:36:01,619 --> 00:36:04,920
a little bit more like this where

853
00:36:03,449 --> 00:36:06,629
they're slight even though they're

854
00:36:04,920 --> 00:36:09,450
supposed to be exact they're sort of

855
00:36:06,630 --> 00:36:11,250
tilted with a with axis aligned stuff we

856
00:36:09,449 --> 00:36:14,699
know that the value of x here will be

857
00:36:11,250 --> 00:36:17,099
exact on both so we can't actually check

858
00:36:14,699 --> 00:36:19,108
for equivalence if we want to when we're

859
00:36:17,099 --> 00:36:22,380
building these things we could in theory

860
00:36:19,108 --> 00:36:24,539
make that work you probably don't want

861
00:36:22,380 --> 00:36:25,858
to but you know I'm just saying we we

862
00:36:24,539 --> 00:36:27,088
have some advantages that there's got to

863
00:36:25,858 --> 00:36:29,369
be a little bit more numerically

864
00:36:27,088 --> 00:36:31,469
feasible to work with because they are

865
00:36:29,369 --> 00:36:35,070
axis to line then if they weren't access

866
00:36:31,469 --> 00:36:38,939
aligned for when we do our transmission

867
00:36:35,070 --> 00:36:41,730
in that case so yeah just trying to

868
00:36:38,940 --> 00:36:47,309
think that through is there any is that

869
00:36:41,730 --> 00:36:49,380
how problematic is that going to be I'm

870
00:36:47,309 --> 00:36:51,690
thinking about in my head I'm thinking

871
00:36:49,380 --> 00:36:53,970
about the case for the floor so again we

872
00:36:51,690 --> 00:36:58,200
kind of have these grounds that we want

873
00:36:53,969 --> 00:37:00,949
to be to look sort of cube ish and they

874
00:36:58,199 --> 00:37:03,689
kind of look like you know if this is a

875
00:37:00,949 --> 00:37:06,838
floating piece you know there's another

876
00:37:03,690 --> 00:37:08,608
piece next to it like this and so on and

877
00:37:06,838 --> 00:37:10,500
I'm just thinking so there's some

878
00:37:08,608 --> 00:37:12,210
unevenness there and so you're gonna get

879
00:37:10,500 --> 00:37:15,358
situations where you're looking at the

880
00:37:12,210 --> 00:37:17,460
side one of these larger cube transfer

881
00:37:15,358 --> 00:37:19,409
elements and it's actually got the

882
00:37:17,460 --> 00:37:22,530
elements inside it kind of look like

883
00:37:19,409 --> 00:37:25,799
this let's say on the other side so when

884
00:37:22,530 --> 00:37:27,240
you're asking about transmission between

885
00:37:25,800 --> 00:37:29,039
these two I

886
00:37:27,239 --> 00:37:31,859
think we solve again that problem by

887
00:37:29,039 --> 00:37:34,320
just having points scattered on that

888
00:37:31,860 --> 00:37:35,490
surface each time we kind of go up so

889
00:37:34,320 --> 00:37:37,019
you kind of know whether the

890
00:37:35,489 --> 00:37:40,169
transmission is happening more at the

891
00:37:37,019 --> 00:37:42,570
top or more at the bottom so I think the

892
00:37:40,170 --> 00:37:45,990
like cubes with points scattered on them

893
00:37:42,570 --> 00:37:48,930
approach is actually relatively stable

894
00:37:45,989 --> 00:37:51,659
the whole way up and hopefully we'll

895
00:37:48,929 --> 00:37:52,919
just kind of work again we just have to

896
00:37:51,659 --> 00:37:55,139
make sure that we're really careful

897
00:37:52,920 --> 00:38:08,789
about allowing points that are right on

898
00:37:55,139 --> 00:38:11,569
the boundary to transmit properly and I

899
00:38:08,789 --> 00:38:13,710
think that's all I have to say about it

900
00:38:11,570 --> 00:38:16,200
how much time we got here I don't even

901
00:38:13,710 --> 00:38:17,340
because of that whole you having to

902
00:38:16,199 --> 00:38:20,789
switch to YouTube because twitch

903
00:38:17,340 --> 00:38:25,050
exploded disaster I don't even know when

904
00:38:20,789 --> 00:38:28,320
we started this thing can't just does

905
00:38:25,050 --> 00:38:30,510
that doesn't the does in Saibot on there

906
00:38:28,320 --> 00:38:32,580
tell us how long how far we into the

907
00:38:30,510 --> 00:38:35,369
episode we are 38 minutes into the

908
00:38:32,579 --> 00:38:39,409
mainstream okay so we've got an hour and

909
00:38:35,369 --> 00:38:41,850
20 minutes left or something like that

910
00:38:39,409 --> 00:38:44,099
at least an hour anyway

911
00:38:41,849 --> 00:38:46,769
so we should be able to sort of take

912
00:38:44,099 --> 00:38:48,269
some first steps here and I think the

913
00:38:46,769 --> 00:38:51,050
thing that we would want to do here

914
00:38:48,269 --> 00:38:54,509
probably is just again switch to cube

915
00:38:51,050 --> 00:38:56,850
based lighting for this stuff and that

916
00:38:54,510 --> 00:38:58,650
way we can start right because we've

917
00:38:56,849 --> 00:39:00,210
we've we've already got ourselves at a

918
00:38:58,650 --> 00:39:01,858
more granular thing that we're doing

919
00:39:00,210 --> 00:39:04,139
which is actually just a plate based

920
00:39:01,858 --> 00:39:05,639
lighting we could stick with place based

921
00:39:04,139 --> 00:39:07,589
lighting but we would probably be

922
00:39:05,639 --> 00:39:11,608
somewhat wasteful there because rather

923
00:39:07,590 --> 00:39:13,500
than doing things in terms of plates we

924
00:39:11,608 --> 00:39:15,420
can just switch to doing things as a a B

925
00:39:13,500 --> 00:39:17,699
B's and one of the nice things about a a

926
00:39:15,420 --> 00:39:20,780
B's is it's faster to check for

927
00:39:17,699 --> 00:39:23,129
intersection on them anyway and that

928
00:39:20,780 --> 00:39:26,160
would allow us to get a speed increase

929
00:39:23,130 --> 00:39:27,900
on that part of the problem as well one

930
00:39:26,159 --> 00:39:30,690
of the nice things about a a B B's again

931
00:39:27,900 --> 00:39:33,090
is if you and really not save use any

932
00:39:30,690 --> 00:39:35,340
bounding box if it's a right rectangular

933
00:39:33,090 --> 00:39:38,100
prism one of the nice things about it is

934
00:39:35,340 --> 00:39:39,690
that when you go to do a collision with

935
00:39:38,099 --> 00:39:40,920
array right because that's what we're

936
00:39:39,690 --> 00:39:43,289
trying to do here

937
00:39:40,920 --> 00:39:47,340
doing coaching with array you actually

938
00:39:43,289 --> 00:39:49,230
can just take the min and Max of these

939
00:39:47,340 --> 00:39:53,450
things to figure out where the Ray is

940
00:39:49,230 --> 00:39:56,519
probably going to hit you it's actually

941
00:39:53,449 --> 00:39:57,899
not that hard right because you can

942
00:39:56,519 --> 00:39:59,639
figure out what the closest point is

943
00:39:57,900 --> 00:40:01,200
going to be on here you can figure out

944
00:39:59,639 --> 00:40:03,359
whether you're inside or outside of it

945
00:40:01,199 --> 00:40:04,799
right so it you can usually do some some

946
00:40:03,360 --> 00:40:07,650
pretty good stuff in terms of figuring

947
00:40:04,800 --> 00:40:10,230
out where where you're going to

948
00:40:07,650 --> 00:40:12,480
intersect one of these things if it's

949
00:40:10,230 --> 00:40:14,789
array for example we can immediately

950
00:40:12,480 --> 00:40:17,250
discount all of the back faces right

951
00:40:14,789 --> 00:40:19,559
just by knowing by classifying which

952
00:40:17,250 --> 00:40:22,380
side the you know which direction the

953
00:40:19,559 --> 00:40:26,070
Ray is pointing right so if the you know

954
00:40:22,380 --> 00:40:27,900
if the Ray just and if it's an accent

955
00:40:26,070 --> 00:40:30,150
line batas it's it's so simple to figure

956
00:40:27,900 --> 00:40:32,010
that out because the sine of these

957
00:40:30,150 --> 00:40:33,720
values relative to the center of this

958
00:40:32,010 --> 00:40:35,640
thing is gonna tell us which side it's

959
00:40:33,719 --> 00:40:37,439
on right if it's got a negative X

960
00:40:35,639 --> 00:40:39,449
relative to where we are then we know

961
00:40:37,440 --> 00:40:41,940
that you know this this face is not

962
00:40:39,449 --> 00:40:44,579
gonna hit it's got to be the negative x

963
00:40:41,940 --> 00:40:46,200
facing face that we would check and so

964
00:40:44,579 --> 00:40:48,719
we can immediately just using like the

965
00:40:46,199 --> 00:40:50,519
sine of the elements after a simple

966
00:40:48,719 --> 00:40:52,079
subtract we could do a lot of nice stuff

967
00:40:50,519 --> 00:40:54,150
we don't have to do dot products to

968
00:40:52,079 --> 00:40:56,130
figure out which of the faces is in the

969
00:40:54,150 --> 00:40:57,570
mix we can literally just use the sine

970
00:40:56,130 --> 00:40:59,220
of the values to see which faces we're

971
00:40:57,570 --> 00:41:01,200
even testing against and then test

972
00:40:59,219 --> 00:41:03,480
against the faces is even simpler

973
00:41:01,199 --> 00:41:05,659
because the faces themselves only really

974
00:41:03,480 --> 00:41:08,099
have one parameter in the mix right

975
00:41:05,659 --> 00:41:09,449
because you know that they're always

976
00:41:08,099 --> 00:41:12,119
going to be aligned to one of the

977
00:41:09,449 --> 00:41:14,969
primary axes so again that simplifies

978
00:41:12,119 --> 00:41:17,429
that intersection equation down as well

979
00:41:14,969 --> 00:41:19,049
and changes it to just a simple like

980
00:41:17,429 --> 00:41:20,789
range comparison you know once you do

981
00:41:19,050 --> 00:41:22,080
you do the 1 divide to figure out where

982
00:41:20,789 --> 00:41:23,670
you would end up on the face and then

983
00:41:22,079 --> 00:41:25,889
you can do the range comparison so we

984
00:41:23,670 --> 00:41:31,889
have a lot of options of simplifying

985
00:41:25,889 --> 00:41:33,440
down how we test these things and so I

986
00:41:31,889 --> 00:41:35,579
think that that might be a good

987
00:41:33,440 --> 00:41:38,099
operation as well because since we know

988
00:41:35,579 --> 00:41:39,989
that so many of our things do look that

989
00:41:38,099 --> 00:41:41,880
way you know just looking at the world

990
00:41:39,989 --> 00:41:43,739
let me go in head and turn the lighting

991
00:41:41,880 --> 00:41:45,900
off here so we can just inspect it a

992
00:41:43,739 --> 00:41:48,959
little bit but you know looking at the

993
00:41:45,900 --> 00:41:50,639
world here assuming that again we change

994
00:41:48,960 --> 00:41:53,880
all of these trees to computing their

995
00:41:50,639 --> 00:41:54,778
lighting based on a cube which is what

996
00:41:53,880 --> 00:41:58,380
we said we wanted to

997
00:41:54,778 --> 00:42:02,188
anyway everything here is just gonna fit

998
00:41:58,380 --> 00:42:04,229
slap nicely into that concept right so I

999
00:42:02,188 --> 00:42:07,379
think that's pretty pretty reasonable

1000
00:42:04,228 --> 00:42:09,808
and I think that is what I'd like to go

1001
00:42:07,380 --> 00:42:12,390
with so let's go ahead and just modify

1002
00:42:09,809 --> 00:42:14,729
today well our goal will be to modify

1003
00:42:12,389 --> 00:42:19,278
the lighting to be working on a a B B's

1004
00:42:14,728 --> 00:42:19,278
and then the next thing that we'll do is

1005
00:42:19,849 --> 00:42:26,669
ease take that a b b lighting and the

1006
00:42:24,659 --> 00:42:29,369
next time we do hamid here our sessions

1007
00:42:26,668 --> 00:42:32,308
we will try to build trees based on that

1008
00:42:29,369 --> 00:42:34,259
that sort of work in a multi resolution

1009
00:42:32,309 --> 00:42:36,929
fashion and then finally our final step

1010
00:42:34,259 --> 00:42:39,900
of algorithmic optimization would be to

1011
00:42:36,929 --> 00:42:44,999
make those trees make the lighting work

1012
00:42:39,900 --> 00:42:46,709
using those trees i so ok if we assume

1013
00:42:44,998 --> 00:42:49,558
that that's how we're gonna do things

1014
00:42:46,708 --> 00:42:52,438
then when we go ahead the first thing

1015
00:42:49,559 --> 00:42:55,559
we're gonna have to do here is when we

1016
00:42:52,438 --> 00:42:58,199
actually push cubes on we're gonna have

1017
00:42:55,559 --> 00:42:59,939
to push lighting cubes on as a specific

1018
00:42:58,199 --> 00:43:02,608
thing so letting cubes are gonna have to

1019
00:42:59,938 --> 00:43:06,268
actually be specified directly and i'm

1020
00:43:02,608 --> 00:43:08,400
fine with taking that step now so again

1021
00:43:06,268 --> 00:43:10,078
I want to take baby steps it's a

1022
00:43:08,400 --> 00:43:11,459
complicated system I don't want to

1023
00:43:10,079 --> 00:43:13,739
change too many things at once just

1024
00:43:11,458 --> 00:43:17,129
little tiny steps pick the simplest

1025
00:43:13,739 --> 00:43:18,838
thing we can do and work towards the the

1026
00:43:17,130 --> 00:43:21,088
change we want to make so that we don't

1027
00:43:18,838 --> 00:43:22,739
rip everything apart and end up with a

1028
00:43:21,088 --> 00:43:25,828
huge debugging nightmare on our hands

1029
00:43:22,739 --> 00:43:27,389
right so if we take a look at what we're

1030
00:43:25,829 --> 00:43:31,169
actually communicating to the render

1031
00:43:27,389 --> 00:43:33,688
side of things in here we've got sort of

1032
00:43:31,168 --> 00:43:36,179
our our lighting surface lighting point

1033
00:43:33,688 --> 00:43:42,629
textured vertex stuff right so what we

1034
00:43:36,179 --> 00:43:44,219
want to do here is say all right when we

1035
00:43:42,630 --> 00:43:46,739
send down lighting things instead of

1036
00:43:44,219 --> 00:43:48,329
sending down lighting services right

1037
00:43:46,739 --> 00:43:50,608
which are currently the thing that we're

1038
00:43:48,329 --> 00:43:52,289
talking about lighting points will still

1039
00:43:50,608 --> 00:43:54,268
be what we're talking about certainly

1040
00:43:52,289 --> 00:43:55,380
but instead of lighting services now

1041
00:43:54,268 --> 00:43:57,448
what we're going to talk about is

1042
00:43:55,380 --> 00:44:00,209
something different we're gonna be

1043
00:43:57,449 --> 00:44:04,528
talking about lighting boxes basically

1044
00:44:00,208 --> 00:44:05,698
right so instead of lighting surface

1045
00:44:04,528 --> 00:44:07,679
we're gonna call this the lighting box

1046
00:44:05,699 --> 00:44:08,579
it's gonna have a position but it's not

1047
00:44:07,679 --> 00:44:10,410
going to have

1048
00:44:08,579 --> 00:44:11,699
a normal in fact it's not even gonna

1049
00:44:10,409 --> 00:44:15,179
really have a position it's probably

1050
00:44:11,699 --> 00:44:17,460
going to have more of a min/max right so

1051
00:44:15,179 --> 00:44:19,139
we've got a minimum quart minimum corner

1052
00:44:17,460 --> 00:44:22,260
of lemon backs maximum corner of it and

1053
00:44:19,139 --> 00:44:24,420
it's just axis aligned so it doesn't get

1054
00:44:22,260 --> 00:44:27,330
an x axis or y axis or any of that stuff

1055
00:44:24,420 --> 00:44:29,670
that's gone it's just min and Max and

1056
00:44:27,329 --> 00:44:31,019
that's all it doesn't have a width and

1057
00:44:29,670 --> 00:44:33,900
height in that way because the min and

1058
00:44:31,019 --> 00:44:36,090
Max will completely specify it and as

1059
00:44:33,900 --> 00:44:37,710
far as transparency is concerned I don't

1060
00:44:36,090 --> 00:44:40,920
know whether we want to preserve that or

1061
00:44:37,710 --> 00:44:43,289
not that's gonna be kind of a whole

1062
00:44:40,920 --> 00:44:45,059
nother question about whether light can

1063
00:44:43,289 --> 00:44:48,929
pass through these things or not pass

1064
00:44:45,059 --> 00:44:49,949
through these things I think we maybe

1065
00:44:48,929 --> 00:44:51,480
want to keep that in there just

1066
00:44:49,949 --> 00:44:52,980
nominally as a thing we might want to do

1067
00:44:51,480 --> 00:44:54,990
because if we put in a little mist

1068
00:44:52,980 --> 00:44:57,599
lighting thing I don't know I you know

1069
00:44:54,989 --> 00:44:59,009
we we may want to play with this in the

1070
00:44:57,599 --> 00:45:01,889
future for right now we can kind of

1071
00:44:59,010 --> 00:45:04,110
ignore it as we have been and just leave

1072
00:45:01,889 --> 00:45:07,079
it in there as as sort of a nominal

1073
00:45:04,110 --> 00:45:09,030
thing so now we have these lighting

1074
00:45:07,079 --> 00:45:12,569
boxes we don't have lighting services

1075
00:45:09,030 --> 00:45:15,030
yet and so we have to kind of forgot to

1076
00:45:12,570 --> 00:45:16,200
change that name there we don't have

1077
00:45:15,030 --> 00:45:17,550
lighting services anymore we just have

1078
00:45:16,199 --> 00:45:19,199
lighting boxes so now we should get as

1079
00:45:17,550 --> 00:45:20,400
compiler errors everywhere that people

1080
00:45:19,199 --> 00:45:22,529
were dealing with these things as a

1081
00:45:20,400 --> 00:45:24,660
single surface and our job is to go

1082
00:45:22,530 --> 00:45:30,030
through these and basically change them

1083
00:45:24,659 --> 00:45:31,829
to work as boxes now we know that our

1084
00:45:30,030 --> 00:45:33,540
lighting surface count has to be a lot

1085
00:45:31,829 --> 00:45:34,920
less than our point count but we're not

1086
00:45:33,539 --> 00:45:36,179
going to deal with that quite yet cuz

1087
00:45:34,920 --> 00:45:38,039
again we're gonna make another step

1088
00:45:36,179 --> 00:45:40,710
later where we talk about those things

1089
00:45:38,039 --> 00:45:43,679
directly and so here we go

1090
00:45:40,710 --> 00:45:45,119
when we look at our quads here one of

1091
00:45:43,679 --> 00:45:47,269
the problems that we're gonna have is

1092
00:45:45,119 --> 00:45:49,380
when we do extract reflectors from quads

1093
00:45:47,269 --> 00:45:52,259
that's not really sufficient anymore

1094
00:45:49,380 --> 00:45:55,650
because the quads won't tell us the

1095
00:45:52,260 --> 00:45:57,360
information we need about these things

1096
00:45:55,650 --> 00:46:02,130
specifically so we're gonna have to

1097
00:45:57,360 --> 00:46:04,800
change over finally to actually pushing

1098
00:46:02,130 --> 00:46:06,090
these things down for reals in the

1099
00:46:04,800 --> 00:46:08,850
renderer because we've kind of been

1100
00:46:06,090 --> 00:46:10,890
avoiding that step every step of the way

1101
00:46:08,849 --> 00:46:14,759
and one thing we could do first is is

1102
00:46:10,889 --> 00:46:16,769
actually I suppose we could change it in

1103
00:46:14,760 --> 00:46:19,830
fact maybe maybe this is even even

1104
00:46:16,769 --> 00:46:22,409
smaller step maybe I say all right look

1105
00:46:19,829 --> 00:46:28,288
let's leave these

1106
00:46:22,409 --> 00:46:30,029
as they were temporarily right and say

1107
00:46:28,289 --> 00:46:34,799
well what we want to do is move to this

1108
00:46:30,030 --> 00:46:41,490
soon but let's leave the lighting

1109
00:46:34,798 --> 00:46:42,960
surfaces as a thing for now and what

1110
00:46:41,489 --> 00:46:44,909
we'll do is change it so that we're

1111
00:46:42,960 --> 00:46:47,130
actually pushing these things on so

1112
00:46:44,909 --> 00:46:48,690
instead of this sort of janky routine

1113
00:46:47,130 --> 00:46:50,548
here that we were using to sort of port

1114
00:46:48,690 --> 00:46:53,099
our old stuff into a thing that has

1115
00:46:50,548 --> 00:46:56,068
lighting let's actually go and do the

1116
00:46:53,099 --> 00:47:03,119
actual lighting push right and so what

1117
00:46:56,068 --> 00:47:05,130
that would be here is on the I ended up

1118
00:47:03,119 --> 00:47:06,838
in the wrong file on the actual platform

1119
00:47:05,130 --> 00:47:09,630
stuff that gets passed to the renderer

1120
00:47:06,838 --> 00:47:12,929
we're now gonna really pass down lights

1121
00:47:09,630 --> 00:47:14,490
as a thing right and so the way we're

1122
00:47:12,929 --> 00:47:19,828
going to do that is we're gonna pass

1123
00:47:14,489 --> 00:47:22,798
down when we're pushing things on we're

1124
00:47:19,829 --> 00:47:26,519
gonna pass down I guess a u-32 that

1125
00:47:22,798 --> 00:47:31,460
would tell us here what our surface

1126
00:47:26,519 --> 00:47:31,460
count is and we're gonna pass down a

1127
00:47:31,969 --> 00:47:37,409
array of surfaces here and those are

1128
00:47:35,429 --> 00:47:41,250
just gonna stack up just like they did

1129
00:47:37,409 --> 00:47:44,278
before so if we search for where we do

1130
00:47:41,250 --> 00:47:50,579
that quad bitmap push right you can kind

1131
00:47:44,278 --> 00:47:54,329
of see right here where we initialize

1132
00:47:50,579 --> 00:47:56,880
our default render setup we need to

1133
00:47:54,329 --> 00:47:59,579
provide memory to store these letting

1134
00:47:56,880 --> 00:48:02,278
services right so we need to put a thing

1135
00:47:59,579 --> 00:48:05,059
in here that says the surface is what I

1136
00:48:02,278 --> 00:48:05,059
actually call this

1137
00:48:07,670 --> 00:48:16,369
oh hey it's even right there we need to

1138
00:48:13,789 --> 00:48:21,259
pass down memory for that that gets

1139
00:48:16,369 --> 00:48:23,568
allocated for use by the renderer like

1140
00:48:21,260 --> 00:48:25,579
so so now whenever there's a default

1141
00:48:23,568 --> 00:48:27,829
rendered commands call whoever is

1142
00:48:25,579 --> 00:48:29,660
setting that up is responsible for also

1143
00:48:27,829 --> 00:48:31,190
setting this up what you can see is

1144
00:48:29,659 --> 00:48:32,210
there some win32 allocate memory stuff

1145
00:48:31,190 --> 00:48:34,039
going on here

1146
00:48:32,210 --> 00:48:42,980
again we can just sort of do the same

1147
00:48:34,039 --> 00:48:45,318
thing and here we'll just say like use

1148
00:48:42,980 --> 00:48:46,699
that light data width so you know that's

1149
00:48:45,318 --> 00:48:48,980
the maximum we can have at the moment

1150
00:48:46,699 --> 00:48:51,230
and later again we'll probably change

1151
00:48:48,980 --> 00:48:53,358
this stuff to be a little once we finish

1152
00:48:51,230 --> 00:48:54,588
this up we'll probably save it to

1153
00:48:53,358 --> 00:48:56,210
something reasonable and you can notice

1154
00:48:54,588 --> 00:48:57,679
it's marked as non restored because if

1155
00:48:56,210 --> 00:48:59,599
you use the like playback and recordings

1156
00:48:57,679 --> 00:49:16,429
features we don't care about this it's

1157
00:48:59,599 --> 00:49:24,349
transient so that's about it and that

1158
00:49:16,429 --> 00:49:32,710
will that will give us what we need

1159
00:49:24,349 --> 00:49:32,710
right yeah hold on one second here I

1160
00:49:32,798 --> 00:49:42,829
want to make sure I'm calling this

1161
00:49:34,789 --> 00:49:45,679
correctly yeah all right I so now those

1162
00:49:42,829 --> 00:49:48,950
lighting surfaces can get passed it can

1163
00:49:45,679 --> 00:49:54,259
be sort of pushed on directly and we

1164
00:49:48,949 --> 00:49:56,989
don't have any we don't have any letting

1165
00:49:54,260 --> 00:49:58,549
points yet so I think probably while

1166
00:49:56,989 --> 00:50:00,769
we're at it we want to push the lighting

1167
00:49:58,548 --> 00:50:02,298
points on directly to so if you come

1168
00:50:00,769 --> 00:50:03,858
down and look at what we were doing

1169
00:50:02,298 --> 00:50:06,530
right we were computing these letting

1170
00:50:03,858 --> 00:50:08,358
points by just arbitrarily pushing them

1171
00:50:06,530 --> 00:50:09,950
on here I think while we're at it we

1172
00:50:08,358 --> 00:50:12,558
want to move both things over because we

1173
00:50:09,949 --> 00:50:19,059
wanted both things to be pushed there so

1174
00:50:12,559 --> 00:50:22,630
I think we also want to say light points

1175
00:50:19,059 --> 00:50:23,650
because light points like so so we kind

1176
00:50:22,630 --> 00:50:28,809
of want to say all right we've got

1177
00:50:23,650 --> 00:50:32,860
lighting points oops

1178
00:50:28,809 --> 00:50:43,449
a lot of spurious caps-lock pushing

1179
00:50:32,860 --> 00:50:45,880
problems so something like this and then

1180
00:50:43,449 --> 00:50:48,819
again the win32 stuff will have to do

1181
00:50:45,880 --> 00:50:50,590
the same thing I don't know why we're

1182
00:50:48,820 --> 00:50:54,720
quite doing it this way I don't know why

1183
00:50:50,590 --> 00:50:57,760
we don't just say arrow base after it I

1184
00:50:54,719 --> 00:51:00,539
couldn't really tell you because we

1185
00:50:57,760 --> 00:51:07,660
don't actually use these anywhere do we

1186
00:51:00,539 --> 00:51:09,969
oops yeah we don't so you don't really

1187
00:51:07,659 --> 00:51:29,230
need to do this you know you can just do

1188
00:51:09,969 --> 00:51:32,469
this right so I don't really know why I

1189
00:51:29,230 --> 00:51:34,269
was doing it before that way but I don't

1190
00:51:32,469 --> 00:51:36,369
know I was so maybe the better way to

1191
00:51:34,269 --> 00:51:40,869
indent that it's like this so it can be

1192
00:51:36,369 --> 00:51:42,369
a little more legible but that's it

1193
00:51:40,869 --> 00:51:50,710
and so here if I want to do lighting

1194
00:51:42,369 --> 00:51:52,239
points again the same thing and also

1195
00:51:50,710 --> 00:51:55,449
this should just be whole lighting

1196
00:51:52,239 --> 00:51:58,869
surfaces and whole any points so that's

1197
00:51:55,449 --> 00:52:00,159
the correct size of the things and we're

1198
00:51:58,869 --> 00:52:02,049
going to do that many of them for now

1199
00:52:00,159 --> 00:52:05,500
that memory gets allocated and then

1200
00:52:02,050 --> 00:52:08,250
passed down and then you can just sort

1201
00:52:05,500 --> 00:52:11,559
of fill it up so this gets us out of the

1202
00:52:08,250 --> 00:52:13,840
of the problem where we were having to

1203
00:52:11,559 --> 00:52:15,190
store these separately and generate them

1204
00:52:13,840 --> 00:52:16,600
every frame or whatever where now

1205
00:52:15,190 --> 00:52:17,530
they'll just get pushed directly off the

1206
00:52:16,599 --> 00:52:18,819
renderer so this will get generated

1207
00:52:17,530 --> 00:52:19,690
every frame will get generated directly

1208
00:52:18,820 --> 00:52:21,490
where they were supposed to get

1209
00:52:19,690 --> 00:52:24,420
generated instead of the sort of port

1210
00:52:21,489 --> 00:52:24,419
thing that we were doing before

1211
00:52:29,670 --> 00:52:37,930
all right

1212
00:52:31,960 --> 00:52:40,659
so in order to update this to this new

1213
00:52:37,929 --> 00:52:42,609
routine to work the way the old routine

1214
00:52:40,659 --> 00:52:44,079
was working what we want to do is

1215
00:52:42,610 --> 00:52:47,170
basically get rid of the extract

1216
00:52:44,079 --> 00:52:49,150
reflectors from quads function more or

1217
00:52:47,170 --> 00:52:52,420
less we want to pretty much eliminate it

1218
00:52:49,150 --> 00:52:54,880
right so what we want to do there is we

1219
00:52:52,420 --> 00:52:57,550
want to say okay let's start eliminating

1220
00:52:54,880 --> 00:53:00,400
the things that that does slowly but

1221
00:52:57,550 --> 00:53:04,330
surely in order to do that what we want

1222
00:53:00,400 --> 00:53:11,470
to do is go into the renderer and when

1223
00:53:04,329 --> 00:53:13,269
it's pushing lighting on which it knows

1224
00:53:11,469 --> 00:53:15,279
that it is because you know we've got

1225
00:53:13,269 --> 00:53:17,440
sort of our lighting enabled stuff

1226
00:53:15,280 --> 00:53:18,910
happening here as you can see

1227
00:53:17,440 --> 00:53:21,880
hey there we're entering a second error

1228
00:53:18,909 --> 00:53:24,569
so we have another hour to go which is

1229
00:53:21,880 --> 00:53:24,570
which is nice

1230
00:53:25,320 --> 00:53:31,930
thank you in savate for basically

1231
00:53:28,030 --> 00:53:35,110
telling us the exact right thing I so

1232
00:53:31,929 --> 00:53:37,480
anyway let me go ahead and do a push

1233
00:53:35,110 --> 00:53:38,980
cube or things like that if the lighting

1234
00:53:37,480 --> 00:53:41,380
is enabled we know that we're gonna push

1235
00:53:38,980 --> 00:53:43,179
on lighting information as well and so

1236
00:53:41,380 --> 00:53:45,369
in order to do that what I want to do

1237
00:53:43,179 --> 00:53:47,259
here is is actually push things on

1238
00:53:45,369 --> 00:53:49,119
coherently that that you know makes

1239
00:53:47,260 --> 00:53:50,620
sense and we don't really have this

1240
00:53:49,119 --> 00:53:52,989
lighting structure worked out exactly

1241
00:53:50,619 --> 00:53:55,089
the way we want it probably yet but it's

1242
00:53:52,989 --> 00:53:56,469
pretty close right the thing that's a

1243
00:53:55,090 --> 00:53:58,600
little bit weird about is the is the

1244
00:53:56,469 --> 00:53:59,799
cross-indexing which is a little weird

1245
00:53:58,599 --> 00:54:01,059
so you can see you've got like a

1246
00:53:59,800 --> 00:54:02,140
lighting surface here and then you've

1247
00:54:01,059 --> 00:54:04,210
got a lighting point and the lighting

1248
00:54:02,139 --> 00:54:07,029
point kind of talks back to about which

1249
00:54:04,210 --> 00:54:13,480
its lighting surfaces and so I don't

1250
00:54:07,030 --> 00:54:15,700
really know how those really want to I I

1251
00:54:13,480 --> 00:54:20,769
don't really know exactly how we want to

1252
00:54:15,699 --> 00:54:22,149
treat those because I it would be nice

1253
00:54:20,769 --> 00:54:25,239
if everything just correspondent

1254
00:54:22,150 --> 00:54:27,220
directly the problem is that in order to

1255
00:54:25,239 --> 00:54:29,769
correspond them directly we couldn't

1256
00:54:27,219 --> 00:54:32,469
more highly sample some surfaces than

1257
00:54:29,769 --> 00:54:35,159
others and we also do have a problem of

1258
00:54:32,469 --> 00:54:37,449
sharing lights points between surfaces

1259
00:54:35,159 --> 00:54:38,889
and I'm not sure exactly how we're going

1260
00:54:37,449 --> 00:54:40,719
to do that but we're gonna want to do

1261
00:54:38,889 --> 00:54:43,089
that and

1262
00:54:40,719 --> 00:54:47,439
so I think what we're going to have to

1263
00:54:43,090 --> 00:54:49,450
do at least my guess is is that this is

1264
00:54:47,440 --> 00:54:52,679
going to have to be a general index back

1265
00:54:49,449 --> 00:54:54,730
to any lighting surface potentially and

1266
00:54:52,679 --> 00:55:00,098
potentially tube lighting surfaces I

1267
00:54:54,730 --> 00:55:01,809
don't know it's it's going to be a

1268
00:55:00,099 --> 00:55:04,140
problem let me just put it to you that

1269
00:55:01,809 --> 00:55:04,139
way

1270
00:55:04,650 --> 00:55:09,910
we're going to have to do something with

1271
00:55:08,050 --> 00:55:11,320
lighting points and services that allow

1272
00:55:09,909 --> 00:55:15,250
them to be correspondent in a flexible

1273
00:55:11,320 --> 00:55:19,390
way it may require essentially a linking

1274
00:55:15,250 --> 00:55:21,280
table kind of approach where we we put

1275
00:55:19,389 --> 00:55:23,199
pairs of indices lighting points surface

1276
00:55:21,280 --> 00:55:24,820
and you can have any number of those

1277
00:55:23,199 --> 00:55:26,980
pairs that you want we may have to do

1278
00:55:24,820 --> 00:55:28,840
something crazy there right now we don't

1279
00:55:26,980 --> 00:55:31,659
have to because we're not doing the

1280
00:55:28,840 --> 00:55:34,300
thing where we put points on the borders

1281
00:55:31,659 --> 00:55:36,940
that share behavior between the two or

1282
00:55:34,300 --> 00:55:38,500
anything like that but we may get to the

1283
00:55:36,940 --> 00:55:42,460
point where we're doing things that are

1284
00:55:38,500 --> 00:55:43,630
somewhat complicated there so there's a

1285
00:55:42,460 --> 00:55:44,740
couple different ways we can do it and

1286
00:55:43,630 --> 00:55:48,460
I'm not sure exactly how we're going to

1287
00:55:44,739 --> 00:55:49,838
but one way that we could do it in the

1288
00:55:48,460 --> 00:55:52,119
future and in fact now I'm saying it's

1289
00:55:49,838 --> 00:55:55,809
probably a good idea is just to link

1290
00:55:52,119 --> 00:55:58,390
light points together so if we have two

1291
00:55:55,809 --> 00:55:59,650
points that want to become the same what

1292
00:55:58,389 --> 00:56:00,789
we'll do is we'll have a separate pass

1293
00:55:59,650 --> 00:56:03,700
that happens afterwards that just

1294
00:56:00,789 --> 00:56:04,779
averages those together so something

1295
00:56:03,699 --> 00:56:07,299
like that where we're basically saying

1296
00:56:04,780 --> 00:56:08,980
and and just I'm sorry to be throwing so

1297
00:56:07,300 --> 00:56:10,539
many things at you here I realize it's a

1298
00:56:08,980 --> 00:56:11,920
lot to take in but you know lighting is

1299
00:56:10,539 --> 00:56:13,989
complicated it's one of the hardest

1300
00:56:11,920 --> 00:56:18,490
things you can possibly do in graphics

1301
00:56:13,989 --> 00:56:20,108
full-stop so what I'm saying is we

1302
00:56:18,489 --> 00:56:21,759
talked before about how I will

1303
00:56:20,108 --> 00:56:23,108
eventually want to get rid of this this

1304
00:56:21,760 --> 00:56:25,869
scene here and there's pretty pretty

1305
00:56:23,108 --> 00:56:27,608
easy ways to do it what I was talking

1306
00:56:25,869 --> 00:56:29,710
about is you want to share lighting

1307
00:56:27,608 --> 00:56:31,929
information across that boundary in

1308
00:56:29,710 --> 00:56:34,720
order to do that right we need points

1309
00:56:31,929 --> 00:56:36,309
that will say Oh interpolate the

1310
00:56:34,719 --> 00:56:38,230
lighting along here is the same on

1311
00:56:36,309 --> 00:56:39,820
either side of it so we need to put the

1312
00:56:38,230 --> 00:56:41,380
terpil Asian points there that know that

1313
00:56:39,820 --> 00:56:42,970
the lighting should be equivalent but

1314
00:56:41,380 --> 00:56:44,380
remember we want these lighting points

1315
00:56:42,969 --> 00:56:45,608
to be associated with services so that

1316
00:56:44,380 --> 00:56:47,650
when we hit surfaces we know to

1317
00:56:45,608 --> 00:56:50,019
distribute light to the points we can't

1318
00:56:47,650 --> 00:56:51,309
have lighting points that are that are

1319
00:56:50,019 --> 00:56:53,320
shared between services without more

1320
00:56:51,309 --> 00:56:54,529
complicated linking but what we can do

1321
00:56:53,320 --> 00:56:57,890
instead is just say or

1322
00:56:54,530 --> 00:57:00,200
let's just put points duplicated that

1323
00:56:57,889 --> 00:57:03,789
are just close to each other and we'll

1324
00:57:00,199 --> 00:57:06,589
just say after you're completely done

1325
00:57:03,789 --> 00:57:08,929
average those two together and update

1326
00:57:06,590 --> 00:57:11,269
the the light with that information

1327
00:57:08,929 --> 00:57:13,699
right so there's like a post pass like a

1328
00:57:11,269 --> 00:57:15,829
convolution on the lighting that happens

1329
00:57:13,699 --> 00:57:18,079
to smooth it out along boundaries that

1330
00:57:15,829 --> 00:57:19,340
should not have seams and so that's I

1331
00:57:18,079 --> 00:57:21,380
think probably where I'd go with that

1332
00:57:19,340 --> 00:57:24,350
sometimes you want to duplicate effort

1333
00:57:21,380 --> 00:57:25,369
to avoid complicated linkage and I think

1334
00:57:24,349 --> 00:57:29,449
this is gonna be one of those situations

1335
00:57:25,369 --> 00:57:30,889
right so that convolution process I

1336
00:57:29,449 --> 00:57:32,929
think would give us a lot of nice

1337
00:57:30,889 --> 00:57:34,429
opportunity to smooth out the lighting

1338
00:57:32,929 --> 00:57:36,109
in places where we know we're never

1339
00:57:34,429 --> 00:57:40,039
gonna sample it high enough to not have

1340
00:57:36,110 --> 00:57:41,690
a least a subtle seam in it right so

1341
00:57:40,039 --> 00:57:43,969
that's I think where we're gonna go with

1342
00:57:41,690 --> 00:57:45,380
that as I'm saying it out loud I'm

1343
00:57:43,969 --> 00:57:46,609
really liking the sound of it so I think

1344
00:57:45,380 --> 00:57:48,980
that's probably where I have to go with

1345
00:57:46,610 --> 00:57:50,809
that so let's come in here and now let's

1346
00:57:48,980 --> 00:57:56,030
let's work on getting these lighting

1347
00:57:50,809 --> 00:57:59,150
services pushed properly here so what I

1348
00:57:56,030 --> 00:58:01,040
want to do is I want to push a these on

1349
00:57:59,150 --> 00:58:03,980
in the same way that we're pushing on

1350
00:58:01,039 --> 00:58:05,690
the existing ones we've got basically

1351
00:58:03,980 --> 00:58:07,429
all the information that we need to do

1352
00:58:05,690 --> 00:58:11,269
so because we're gonna push on the cloth

1353
00:58:07,429 --> 00:58:13,099
the cubes the the quadrilaterals on the

1354
00:58:11,269 --> 00:58:15,199
faces of a cube so we know we can first

1355
00:58:13,099 --> 00:58:18,079
push the lighting services that are

1356
00:58:15,199 --> 00:58:20,119
exactly those right so what I can do

1357
00:58:18,079 --> 00:58:28,489
here is sort of say like okay I've got a

1358
00:58:20,119 --> 00:58:31,190
lighting surface and maybe I'll just

1359
00:58:28,489 --> 00:58:32,779
call it surface here and that's going to

1360
00:58:31,190 --> 00:58:34,760
be equal to something we'll figure out

1361
00:58:32,780 --> 00:58:36,380
where that goes in a second and then

1362
00:58:34,760 --> 00:58:40,160
what I'm gonna say is like okay surface

1363
00:58:36,380 --> 00:58:42,740
zero or rather just surface blah blah

1364
00:58:40,159 --> 00:58:44,719
blah surface blah blah blah right and

1365
00:58:42,739 --> 00:58:48,019
then I will plus plus surface and I'll

1366
00:58:44,719 --> 00:58:50,599
just do this for the six faces that I

1367
00:58:48,019 --> 00:58:53,599
want to have there and then I'll be done

1368
00:58:50,599 --> 00:58:55,639
so what I'll do is say all right the

1369
00:58:53,599 --> 00:58:57,949
point here I have to figure out what

1370
00:58:55,639 --> 00:58:59,839
that point is we already did the work of

1371
00:58:57,949 --> 00:59:01,069
figuring out what that that surface

1372
00:58:59,840 --> 00:59:02,300
point is and the other one but we can

1373
00:59:01,070 --> 00:59:04,580
probably do something simpler here

1374
00:59:02,300 --> 00:59:07,400
because with this cube we're getting

1375
00:59:04,579 --> 00:59:08,329
exactly information we need right so you

1376
00:59:07,400 --> 00:59:10,130
can see here

1377
00:59:08,329 --> 00:59:11,599
we're getting all of this information we

1378
00:59:10,130 --> 00:59:14,630
know what the normals are we've already

1379
00:59:11,599 --> 00:59:16,250
said what they are in a lot of cases we

1380
00:59:14,630 --> 00:59:18,829
know what the points are Bob you know

1381
00:59:16,250 --> 00:59:20,329
etc etc so we kind of know all the

1382
00:59:18,829 --> 00:59:22,039
information that we need here we don't

1383
00:59:20,329 --> 00:59:23,599
even really need to do arithmetic on

1384
00:59:22,039 --> 00:59:25,130
these probably to get back the

1385
00:59:23,599 --> 00:59:26,150
information we want like we're having to

1386
00:59:25,130 --> 00:59:28,340
construct them before because we

1387
00:59:26,150 --> 00:59:30,430
actually know that the real cube now we

1388
00:59:28,340 --> 00:59:34,579
can just push the the services on

1389
00:59:30,429 --> 00:59:37,369
directly right so we know we need a P

1390
00:59:34,579 --> 00:59:38,869
and an N the surface the transparency I

1391
00:59:37,369 --> 00:59:40,159
don't know how we were doing it for them

1392
00:59:38,869 --> 00:59:42,650
I'm just set that to zero for now

1393
00:59:40,159 --> 00:59:47,420
because we don't care what it is we need

1394
00:59:42,650 --> 00:59:49,789
the width and the height of that surface

1395
00:59:47,420 --> 00:59:51,019
we need the x-axis and the Y's and you

1396
00:59:49,789 --> 00:59:53,449
can see how much information is getting

1397
00:59:51,019 --> 00:59:55,849
push on here it's way too much which is

1398
00:59:53,449 --> 00:59:57,619
why switching to a a B these gonna be

1399
00:59:55,849 --> 00:59:59,179
great here we're gonna simplify all this

1400
00:59:57,619 --> 01:00:01,730
stuff and just really get it down to a

1401
00:59:59,179 --> 01:00:03,349
much more straightforward thing we can

1402
01:00:01,730 --> 01:00:04,940
use for letting transfer that's gonna be

1403
01:00:03,349 --> 01:00:07,309
really nice I think in and of itself

1404
01:00:04,940 --> 01:00:10,610
that just that will actually speed us up

1405
01:00:07,309 --> 01:00:13,309
probably maybe not 8x but something like

1406
01:00:10,610 --> 01:00:16,610
an 8x speed increased probably just from

1407
01:00:13,309 --> 01:00:24,909
stopping proliferating cubes into their

1408
01:00:16,610 --> 01:00:24,910
faces for no reason right all right

1409
01:00:27,559 --> 01:00:31,759
so if we take a look at the surface

1410
01:00:29,210 --> 01:00:35,210
points here what we want to do is say

1411
01:00:31,760 --> 01:00:39,980
okay when we created these we said

1412
01:00:35,210 --> 01:00:42,409
alright the the NX P X n YP y + Z PZ

1413
01:00:39,980 --> 01:00:45,289
that's the negative maximum X positive

1414
01:00:42,409 --> 01:00:49,219
maximum X negative maximum Y positive

1415
01:00:45,289 --> 01:00:51,320
maximum Y and so on right so this cube

1416
01:00:49,219 --> 01:00:53,659
is always access aligned in this case

1417
01:00:51,320 --> 01:00:56,600
already so we don't really even have to

1418
01:00:53,659 --> 01:00:58,730
think about it harder than that and we

1419
01:00:56,599 --> 01:01:01,039
already have them in Max's that we need

1420
01:00:58,730 --> 01:01:03,019
here so what we can do is just start

1421
01:01:01,039 --> 01:01:05,929
talking about the center point but the

1422
01:01:03,019 --> 01:01:08,030
center point we have it's just px py P

1423
01:01:05,929 --> 01:01:09,710
at Z whatever so when we're trying to

1424
01:01:08,030 --> 01:01:12,200
produce say one of these services all

1425
01:01:09,710 --> 01:01:14,420
we're really saying is oh let's take

1426
01:01:12,199 --> 01:01:17,089
like the negative x negative Y negative

1427
01:01:14,420 --> 01:01:21,230
Z that would be the corner the most

1428
01:01:17,090 --> 01:01:23,090
negative corner point right let me I'm

1429
01:01:21,230 --> 01:01:24,679
sorry this is probably something where

1430
01:01:23,090 --> 01:01:32,269
you would like a diagram to understand

1431
01:01:24,679 --> 01:01:35,569
it better so we have a cube its axis

1432
01:01:32,269 --> 01:01:42,349
aligned here are the axis of the cube X

1433
01:01:35,570 --> 01:01:43,190
Y Z right all at right angles and if you

1434
01:01:42,349 --> 01:01:46,250
think about what we're talking about

1435
01:01:43,190 --> 01:01:48,920
here negative x negative Y negative Z

1436
01:01:46,250 --> 01:01:50,119
it's this corner down here right what we

1437
01:01:48,920 --> 01:01:53,599
might want to do is say well let's

1438
01:01:50,119 --> 01:01:55,609
produce this point right so all we have

1439
01:01:53,599 --> 01:01:57,710
to do is say well that point is going to

1440
01:01:55,610 --> 01:02:00,200
be the center point of the cube with

1441
01:01:57,710 --> 01:02:06,440
just its Y value change to negative

1442
01:02:00,199 --> 01:02:11,089
right so if we were instead to say start

1443
01:02:06,440 --> 01:02:16,400
at the center point and just take the

1444
01:02:11,090 --> 01:02:18,110
negative Y right it's hard to type of

1445
01:02:16,400 --> 01:02:21,289
the pen in your hand or the negative x

1446
01:02:18,110 --> 01:02:23,559
or the positive x that gives us the

1447
01:02:21,289 --> 01:02:27,590
center points of each of the phases

1448
01:02:23,559 --> 01:02:31,400
right so we can trivially arrive at all

1449
01:02:27,590 --> 01:02:34,010
six of these just by taking the positive

1450
01:02:31,400 --> 01:02:36,160
and negative faces that's all we need to

1451
01:02:34,010 --> 01:02:36,160
do

1452
01:02:39,260 --> 01:02:45,090
oops and again you can see how many

1453
01:02:43,559 --> 01:02:47,130
things are pushing on for a cube it's

1454
01:02:45,090 --> 01:02:48,990
just a ton of work so we'll get to see

1455
01:02:47,130 --> 01:02:51,030
all of this collapse to a much simpler

1456
01:02:48,989 --> 01:02:52,439
thing when we switch to the abbs so

1457
01:02:51,030 --> 01:02:55,410
that's going to be very satisfying I

1458
01:02:52,440 --> 01:03:00,690
think all right so as we push these

1459
01:02:55,409 --> 01:03:02,369
services on here we have to pick one of

1460
01:03:00,690 --> 01:03:05,300
these to do so I'm just going to suit

1461
01:03:02,369 --> 01:03:09,619
like negative x first then positive x

1462
01:03:05,300 --> 01:03:13,320
negative Y first then positive Y

1463
01:03:09,619 --> 01:03:15,750
negative Z first then positive Z and now

1464
01:03:13,320 --> 01:03:17,940
we have each of the center points of all

1465
01:03:15,750 --> 01:03:19,769
of our faces now the other thing that we

1466
01:03:17,940 --> 01:03:21,059
know is generating the normal is

1467
01:03:19,769 --> 01:03:22,500
actually extremely easy because the

1468
01:03:21,059 --> 01:03:25,110
normal is always going to look like an

1469
01:03:22,500 --> 01:03:26,940
axis aligned normal right so we just

1470
01:03:25,110 --> 01:03:28,950
have to know which one of these were

1471
01:03:26,940 --> 01:03:30,599
doing well if we flip back to the

1472
01:03:28,949 --> 01:03:32,969
diagram what you can see is that

1473
01:03:30,599 --> 01:03:35,730
whatever the thing is so here was the y

1474
01:03:32,969 --> 01:03:38,519
axis I replaced the y coordinate of the

1475
01:03:35,730 --> 01:03:41,369
center with the negative Y well then the

1476
01:03:38,519 --> 01:03:44,130
normal is just a long y- so whichever

1477
01:03:41,369 --> 01:03:46,500
one I put in there is the one I do if I

1478
01:03:44,130 --> 01:03:51,840
put negative x in there right if I put

1479
01:03:46,500 --> 01:03:58,820
positive x in there if I put negative Y

1480
01:03:51,840 --> 01:03:58,820
in there if I put positive Y in there

1481
01:03:59,630 --> 01:04:02,840
negative Z

1482
01:04:05,239 --> 01:04:12,199
positive Z so hopefully that's all very

1483
01:04:08,900 --> 01:04:14,869
clear like it's it's hopefully you can

1484
01:04:12,199 --> 01:04:16,969
see all of the things that are going on

1485
01:04:14,869 --> 01:04:18,890
in that geometrically are very simple

1486
01:04:16,969 --> 01:04:20,568
and very straightforward and it just

1487
01:04:18,889 --> 01:04:21,799
allows us to generate it without doing

1488
01:04:20,568 --> 01:04:23,420
any arithmetic like we're doing before

1489
01:04:21,800 --> 01:04:24,890
it's just rote it's just it's like a

1490
01:04:23,420 --> 01:04:27,680
tableau you can just read it directly

1491
01:04:24,889 --> 01:04:29,960
off now the width and height are a

1492
01:04:27,679 --> 01:04:31,190
little bit more finicky again we can

1493
01:04:29,960 --> 01:04:32,480
read them directly off but we have to

1494
01:04:31,190 --> 01:04:34,670
make sure we're reading the right thing

1495
01:04:32,480 --> 01:04:36,400
off now fortunately for us we actually

1496
01:04:34,670 --> 01:04:39,849
only have two values radius and height

1497
01:04:36,400 --> 01:04:42,108
so that makes things a little bit easier

1498
01:04:39,849 --> 01:04:43,460
but we're gonna have to adjust the Z

1499
01:04:42,108 --> 01:04:44,750
values here because we did a little bit

1500
01:04:43,460 --> 01:04:46,490
of a weird thing when we were specifying

1501
01:04:44,750 --> 01:04:48,889
these cubes where we specify that the

1502
01:04:46,489 --> 01:04:50,239
top point I don't know why we decided do

1503
01:04:48,889 --> 01:04:52,818
this way cuz just I think cuz we

1504
01:04:50,239 --> 01:04:55,969
thinking ground based I really kind of

1505
01:04:52,818 --> 01:04:58,099
wish we didn't do this I don't know that

1506
01:04:55,969 --> 01:04:59,629
I want to change it right now but I kind

1507
01:04:58,099 --> 01:05:11,869
of want to change it right now like it's

1508
01:04:59,630 --> 01:05:12,440
it's I think this is it's whatever it is

1509
01:05:11,869 --> 01:05:14,119
what it is

1510
01:05:12,440 --> 01:05:15,829
um so we're gonna have to go modify

1511
01:05:14,119 --> 01:05:16,970
those Z's later but I'm just gonna do

1512
01:05:15,829 --> 01:05:19,460
everything uniform and then we're just

1513
01:05:16,969 --> 01:05:21,649
gonna touch up the Z when we're when

1514
01:05:19,460 --> 01:05:23,510
we're done with it right because

1515
01:05:21,650 --> 01:05:25,220
actually the negative Z you can see it's

1516
01:05:23,510 --> 01:05:27,619
still I think it's correct what we wrote

1517
01:05:25,219 --> 01:05:29,689
but you can see that these two values

1518
01:05:27,619 --> 01:05:31,010
are a little bit different so you know

1519
01:05:29,690 --> 01:05:33,470
you have to think about them a little

1520
01:05:31,010 --> 01:05:35,780
bit differently when when we get to them

1521
01:05:33,469 --> 01:05:37,098
that's all so width and Heights are

1522
01:05:35,780 --> 01:05:39,019
gonna be a little more finicky x-axis

1523
01:05:37,099 --> 01:05:42,170
y-axis are going to be not so finicky

1524
01:05:39,019 --> 01:05:44,449
right so let's just go ahead and and

1525
01:05:42,170 --> 01:05:46,250
look at those first so when we're

1526
01:05:44,449 --> 01:05:49,699
talking about positive X which is going

1527
01:05:46,250 --> 01:05:52,699
in this direction here so for positive x

1528
01:05:49,699 --> 01:05:55,308
we know that our x-axis right is this

1529
01:05:52,699 --> 01:05:58,098
way and our y-axis is this way so we

1530
01:05:55,309 --> 01:05:59,900
know that for positive x the x axis is

1531
01:05:58,099 --> 01:06:01,160
actually the y axis and the y axis is

1532
01:05:59,900 --> 01:06:04,720
actually the z axis

1533
01:06:01,159 --> 01:06:04,719
right that makes sense

1534
01:06:08,489 --> 01:06:14,858
oops

1535
01:06:11,190 --> 01:06:20,409
right so z-axis is that is going along

1536
01:06:14,858 --> 01:06:22,389
our Y and and our x axis is going I'm

1537
01:06:20,409 --> 01:06:25,058
sorry X that's going or why our waxes is

1538
01:06:22,389 --> 01:06:28,538
going along our Z right world Z that's

1539
01:06:25,059 --> 01:06:31,000
going in there um on the other hand in

1540
01:06:28,539 --> 01:06:32,230
the back version here at the back

1541
01:06:31,000 --> 01:06:34,239
versions cube where we were talking

1542
01:06:32,230 --> 01:06:37,500
about negative x right OOP and you know

1543
01:06:34,239 --> 01:06:37,500
what I just put that in the wrong place

1544
01:06:44,068 --> 01:06:51,099
yeah so we're talking about the negative

1545
01:06:47,230 --> 01:06:53,588
x axis the y axis is still going to be z

1546
01:06:51,099 --> 01:06:54,970
right it's still gonna be facing up but

1547
01:06:53,588 --> 01:06:56,619
this time instead of pointing this way

1548
01:06:54,969 --> 01:06:58,058
it's gonna be pointing this way

1549
01:06:56,619 --> 01:07:00,880
right so it's actually gonna be negative

1550
01:06:58,059 --> 01:07:02,500
Y axis for our X and that's just because

1551
01:07:00,880 --> 01:07:04,480
we're on the back face of the cube right

1552
01:07:02,500 --> 01:07:08,278
so we've rotated around and we want to

1553
01:07:04,480 --> 01:07:11,099
still keep the winding to uniform right

1554
01:07:08,278 --> 01:07:14,739
so there we go

1555
01:07:11,099 --> 01:07:17,710
alright now let's talk about the Y ones

1556
01:07:14,739 --> 01:07:21,038
so on negative Y you can see again Z is

1557
01:07:17,710 --> 01:07:24,400
still our y axis and our x axis is

1558
01:07:21,039 --> 01:07:28,089
actually our x axis right so on the

1559
01:07:24,400 --> 01:07:32,410
negative Y front we have an x axis that

1560
01:07:28,088 --> 01:07:37,989
is the x axis and we have a y axis that

1561
01:07:32,409 --> 01:07:41,798
is the z axis when we go the positive

1562
01:07:37,989 --> 01:07:46,778
round we're rotating around here our you

1563
01:07:41,798 --> 01:07:48,849
know our Z is the same I mean our wax

1564
01:07:46,778 --> 01:07:54,519
this is still the z axis our x axis

1565
01:07:48,849 --> 01:07:58,720
going back to the other direction and

1566
01:07:54,519 --> 01:08:00,788
then finally we get down to our Z's for

1567
01:07:58,719 --> 01:08:02,618
our z- right you have to imagine looking

1568
01:08:00,789 --> 01:08:03,460
at the cube from the back or well I mean

1569
01:08:02,619 --> 01:08:05,170
I guess we could do it the other way

1570
01:08:03,460 --> 01:08:07,480
around if we start with our positive z

1571
01:08:05,170 --> 01:08:07,838
axis right and we're looking down at

1572
01:08:07,480 --> 01:08:10,778
this

1573
01:08:07,838 --> 01:08:12,788
there's our you know would be one way of

1574
01:08:10,778 --> 01:08:14,139
doing it it doesn't really matter which

1575
01:08:12,789 --> 01:08:17,949
way we can always pick as long as these

1576
01:08:14,139 --> 01:08:18,939
axis are stable it's fine so if we take

1577
01:08:17,948 --> 01:08:20,629
a look at how we're doing this here

1578
01:08:18,939 --> 01:08:23,149
negative x axis

1579
01:08:20,630 --> 01:08:25,690
it's going that way positive y-axis is

1580
01:08:23,149 --> 01:08:25,689
going this way

1581
01:08:27,219 --> 01:08:32,989
so negative access sry native x-axis is

1582
01:08:31,099 --> 01:08:36,170
our Y positive z-axis

1583
01:08:32,988 --> 01:08:38,718
it's our X and if you imagine that

1584
01:08:36,170 --> 01:08:41,989
rotating around again this this axis

1585
01:08:38,719 --> 01:08:45,948
doesn't change so the positive Y axis is

1586
01:08:41,988 --> 01:08:48,169
still X right as we rotate this around

1587
01:08:45,948 --> 01:08:50,479
you can imagine the x axis is still

1588
01:08:48,170 --> 01:08:53,298
going and positive Y but this is it's

1589
01:08:50,479 --> 01:08:55,638
different now so instead of the x axis

1590
01:08:53,298 --> 01:09:01,099
being positive I'm sorry in any of this

1591
01:08:55,639 --> 01:09:03,078
case it becomes positive so there you go

1592
01:09:01,099 --> 01:09:05,748
now we filled out all of the things that

1593
01:09:03,078 --> 01:09:07,670
were pushing on there finally we have to

1594
01:09:05,748 --> 01:09:10,309
do the rest of this stuff so what you

1595
01:09:07,670 --> 01:09:19,609
can see here is our light count in this

1596
01:09:10,309 --> 01:09:22,759
case is always for our light indices in

1597
01:09:19,609 --> 01:09:26,659
this case you can kind of see we started

1598
01:09:22,759 --> 01:09:32,389
with it here it's just going to be light

1599
01:09:26,658 --> 01:09:34,538
index and we'll just update that as we

1600
01:09:32,389 --> 01:09:34,538
go

1601
01:09:41,988 --> 01:09:56,000
and that will just become like so now

1602
01:09:54,319 --> 01:10:00,170
one of the problems that is this again

1603
01:09:56,000 --> 01:10:03,439
has to kind of be placed down in here

1604
01:10:00,170 --> 01:10:06,949
correctly we can worry about that in a

1605
01:10:03,439 --> 01:10:09,379
second I suppose what we really want to

1606
01:10:06,948 --> 01:10:11,539
do here is maybe have these services

1607
01:10:09,380 --> 01:10:13,340
still be coherent but we'll we'll deal

1608
01:10:11,539 --> 01:10:18,579
with that again in one second let's just

1609
01:10:13,340 --> 01:10:21,829
finish the width height stuff instead

1610
01:10:18,579 --> 01:10:23,929
all right so we got to look at the width

1611
01:10:21,829 --> 01:10:25,250
and height here of these things so we're

1612
01:10:23,929 --> 01:10:27,829
now talking about the negative

1613
01:10:25,250 --> 01:10:29,238
x-direction right so the negative

1614
01:10:27,829 --> 01:10:30,529
x-direction is the thing that points out

1615
01:10:29,238 --> 01:10:32,209
this way

1616
01:10:30,529 --> 01:10:37,460
and so what we said is that our negative

1617
01:10:32,210 --> 01:10:41,239
x is axis is negative x-axis is I'm

1618
01:10:37,460 --> 01:10:43,069
sorry negative y-axis is our X right and

1619
01:10:41,238 --> 01:10:44,678
so that was what we were talking about

1620
01:10:43,069 --> 01:10:51,170
we were talking about

1621
01:10:44,679 --> 01:10:54,920
I say negative y-axis yeah negative

1622
01:10:51,170 --> 01:10:57,949
y-axis is our x axis and Z is our or y

1623
01:10:54,920 --> 01:10:59,869
axis right so width and height have to

1624
01:10:57,948 --> 01:11:03,229
be measured along these so our width is

1625
01:10:59,869 --> 01:11:07,130
going to be our y ry with right and

1626
01:11:03,229 --> 01:11:09,589
we've said that that's the radius of

1627
01:11:07,130 --> 01:11:11,270
this thing right since it's the width we

1628
01:11:09,590 --> 01:11:14,960
need to multiply it by 2 I believe

1629
01:11:11,270 --> 01:11:17,540
because radius is you know goes in both

1630
01:11:14,960 --> 01:11:19,189
directions and so really all we have to

1631
01:11:17,539 --> 01:11:22,219
look at is what are the two we're doing

1632
01:11:19,189 --> 01:11:25,309
here and so the on for Z we are using

1633
01:11:22,219 --> 01:11:27,380
height instead which is a total so

1634
01:11:25,310 --> 01:11:29,270
height is actually just type in this

1635
01:11:27,380 --> 01:11:31,039
case now the same thing is going to be

1636
01:11:29,270 --> 01:11:33,380
true here since we're not changing that

1637
01:11:31,039 --> 01:11:36,560
interpretation at all it's going to be

1638
01:11:33,380 --> 01:11:40,010
the same in both cases right we then

1639
01:11:36,560 --> 01:11:41,989
ever are ones for negative and positive

1640
01:11:40,010 --> 01:11:44,989
Y so negative and positive Y are going

1641
01:11:41,988 --> 01:11:47,238
these ways so again our X is our radius

1642
01:11:44,988 --> 01:11:49,549
but our Y in this case is going to be a

1643
01:11:47,238 --> 01:11:51,919
height based thing so I think we've

1644
01:11:49,550 --> 01:11:54,340
still got the exact same concept going

1645
01:11:51,920 --> 01:11:54,340
on here

1646
01:11:56,140 --> 01:12:01,220
but our Z on the other hand takes that

1647
01:11:59,300 --> 01:12:02,989
out of the equation so for our Z it's

1648
01:12:01,220 --> 01:12:05,480
always gonna be radius no matter which

1649
01:12:02,989 --> 01:12:15,920
side it's on so it's always to point our

1650
01:12:05,479 --> 01:12:17,479
F times radius in this case and then

1651
01:12:15,920 --> 01:12:19,190
what we need to do is we need to make

1652
01:12:17,479 --> 01:12:22,369
sure that these services that we've

1653
01:12:19,189 --> 01:12:25,819
pushed on correspond to the light in the

1654
01:12:22,369 --> 01:12:27,260
the light points that we push on as well

1655
01:12:25,819 --> 01:12:29,000
right we want we need to push on

1656
01:12:27,260 --> 01:12:32,060
individual points that are kind of on

1657
01:12:29,000 --> 01:12:34,609
these things and so if we go back and

1658
01:12:32,060 --> 01:12:36,110
look at the you know I wonder if I kind

1659
01:12:34,609 --> 01:12:37,519
of was just wasting everyone's time

1660
01:12:36,109 --> 01:12:38,779
there by doing that too because the

1661
01:12:37,520 --> 01:12:41,390
other thing I think units can't we just

1662
01:12:38,779 --> 01:12:43,750
copy the routine that we were doing over

1663
01:12:41,390 --> 01:12:46,130
here like could we just copy this thing

1664
01:12:43,750 --> 01:12:48,920
shouldn't I have just put this thing

1665
01:12:46,130 --> 01:13:01,720
directly in there in fact why did I just

1666
01:12:48,920 --> 01:13:01,720
waste everyone's time by doing that well

1667
01:13:05,769 --> 01:13:12,309
I don't know why I wasted your time

1668
01:13:08,710 --> 01:13:14,439
doing that I'll be honest don't have a

1669
01:13:12,309 --> 01:13:15,730
lot of explanation for it but what I

1670
01:13:14,439 --> 01:13:18,460
will do is I won't waste your time any

1671
01:13:15,729 --> 01:13:20,828
further what I will do is I'll say all

1672
01:13:18,460 --> 01:13:23,980
right let's grab this chunky monkey out

1673
01:13:20,828 --> 01:13:26,198
of here and and put that in so once we

1674
01:13:23,979 --> 01:13:29,649
have the surfaces we can generate the

1675
01:13:26,198 --> 01:13:31,149
points right so once we have the

1676
01:13:29,649 --> 01:13:34,658
services will generate the points from

1677
01:13:31,149 --> 01:13:52,929
the services just by using the the sub

1678
01:13:34,658 --> 01:13:59,679
counts here so we'll go through and

1679
01:13:52,929 --> 01:14:02,529
generate them this way we'll iterate

1680
01:13:59,679 --> 01:14:07,059
over the letting points that we're gonna

1681
01:14:02,529 --> 01:14:09,609
push in here and we have to reset our

1682
01:14:07,059 --> 01:14:12,010
lighting index variable for that so when

1683
01:14:09,609 --> 01:14:14,518
we go through here right we're gonna

1684
01:14:12,010 --> 01:14:14,519
want to

1685
01:14:21,680 --> 01:14:26,490
reset this back then we're going to want

1686
01:14:24,989 --> 01:14:27,719
to push these on we're gonna push these

1687
01:14:26,489 --> 01:14:32,429
on exactly the same way as we were

1688
01:14:27,720 --> 01:14:34,020
before and so we need to now have for

1689
01:14:32,430 --> 01:14:36,079
our letting points we need to have some

1690
01:14:34,020 --> 01:14:39,120
sort of a idea of what's going on here

1691
01:14:36,079 --> 01:14:42,210
inside the platform layer when we push

1692
01:14:39,119 --> 01:14:46,340
these letting points on we do P P R FCN

1693
01:14:42,210 --> 01:14:48,000
and surface index so we need you know

1694
01:14:46,340 --> 01:14:50,789
these guys here

1695
01:14:48,000 --> 01:14:52,739
we don't initialize these because these

1696
01:14:50,789 --> 01:14:54,420
are not part of it yet so we'll let

1697
01:14:52,739 --> 01:14:57,539
those get handled a little bit further

1698
01:14:54,420 --> 01:15:00,690
down although I guess ostensibly we

1699
01:14:57,539 --> 01:15:08,489
should move this into here eventually in

1700
01:15:00,689 --> 01:15:12,139
some way I mean in fact I could just do

1701
01:15:08,489 --> 01:15:12,139
that in this pass as well

1702
01:15:25,000 --> 01:15:35,630
yeah I guess I could just do that in

1703
01:15:27,079 --> 01:15:41,479
this pass as well all right well that's

1704
01:15:35,630 --> 01:15:47,829
fine let's go whole log so in the

1705
01:15:41,479 --> 01:15:47,829
lighting solution some world mode here

1706
01:15:49,270 --> 01:15:53,840
we've got sort of the informational

1707
01:15:52,189 --> 01:15:57,169
stuff we were doing before where we've

1708
01:15:53,840 --> 01:16:00,110
got emit c0 and emit c1 and average

1709
01:15:57,170 --> 01:16:02,930
direction to light those things get

1710
01:16:00,109 --> 01:16:05,599
initialized in certain ways the average

1711
01:16:02,930 --> 01:16:08,720
direction to average direction to light

1712
01:16:05,600 --> 01:16:15,530
and c1 are used in the computations and

1713
01:16:08,720 --> 01:16:22,480
held although average direction to light

1714
01:16:15,529 --> 01:16:22,479
gets reset here which is wrong

1715
01:16:28,409 --> 01:16:32,519
so we had a bug in here that we didn't

1716
01:16:30,449 --> 01:16:38,489
address average direction to light is

1717
01:16:32,520 --> 01:16:39,540
supposed to be held over correct yeah

1718
01:16:38,489 --> 01:16:41,699
that was a bug

1719
01:16:39,539 --> 01:16:43,050
we were probably getting better lighting

1720
01:16:41,699 --> 01:16:53,429
results than we thought we were getting

1721
01:16:43,050 --> 01:16:55,440
because we had a bug here mm-hmm I say

1722
01:16:53,430 --> 01:17:12,050
hold on one second

1723
01:16:55,439 --> 01:17:12,049
I want to test something

1724
01:17:16,319 --> 01:17:21,630
so this is what we were running before

1725
01:17:18,649 --> 01:17:23,069
and you know what let me generate a

1726
01:17:21,630 --> 01:17:26,569
small world so we can run the lighting

1727
01:17:23,069 --> 01:17:26,569
in interactive time as well

1728
01:17:41,569 --> 01:17:55,279
so here is the old version and here

1729
01:17:53,390 --> 01:17:59,780
let's see these are cleared normally

1730
01:17:55,279 --> 01:18:03,460
right I think so let's just see what

1731
01:17:59,779 --> 01:18:03,460
happens if we don't clear that value

1732
01:18:06,489 --> 01:18:11,779
because I thought weren't wheeler ping

1733
01:18:10,159 --> 01:18:14,869
those so how was that working let's

1734
01:18:11,779 --> 01:18:16,729
maybe amer I must be wrong because I

1735
01:18:14,869 --> 01:18:18,260
thought we were blending those values

1736
01:18:16,729 --> 01:18:20,289
over time but what are we blending them

1737
01:18:18,260 --> 01:18:20,289
with

1738
01:18:31,729 --> 01:18:37,679
okay so we do have lat never mind I was

1739
01:18:34,920 --> 01:18:39,118
I was a little nervous there that we

1740
01:18:37,679 --> 01:18:41,550
were clearing the wrong thing so that's

1741
01:18:39,118 --> 01:18:44,420
okay because we do have it's stored in a

1742
01:18:41,550 --> 01:18:47,639
separate one so it's all fine

1743
01:18:44,420 --> 01:18:50,550
yeah and we just lurk between those two

1744
01:18:47,639 --> 01:18:52,170
so that's fine okay okay I got very

1745
01:18:50,550 --> 01:18:53,579
nervous there for a second

1746
01:18:52,170 --> 01:18:55,380
but we're all good I was like it should

1747
01:18:53,578 --> 01:18:57,389
have been super flickery and weird like

1748
01:18:55,380 --> 01:18:59,909
and wrong not flickery but it should

1749
01:18:57,389 --> 01:19:02,099
have been really wrong and dark if we

1750
01:18:59,908 --> 01:19:03,569
were doing that so I was like really

1751
01:19:02,099 --> 01:19:06,029
confused I wanted to make sure I wasn't

1752
01:19:03,569 --> 01:19:09,658
totally crazy

1753
01:19:06,029 --> 01:19:13,109
but I'm not so anyway uh going back here

1754
01:19:09,658 --> 01:19:15,149
so if I jump back to the render group

1755
01:19:13,109 --> 01:19:17,420
where we're pushing these lights on

1756
01:19:15,149 --> 01:19:18,629
[Music]

1757
01:19:17,420 --> 01:19:21,328
there we go

1758
01:19:18,630 --> 01:19:22,650
so if I push all these services on and

1759
01:19:21,328 --> 01:19:24,748
then I want to push these points on

1760
01:19:22,649 --> 01:19:27,538
average direction to light is just a

1761
01:19:24,748 --> 01:19:28,920
temporary rendering buffer so it doesn't

1762
01:19:27,538 --> 01:19:30,658
need to get cleared here because it can

1763
01:19:28,920 --> 01:19:31,889
get cleared anywhere right it can get

1764
01:19:30,658 --> 01:19:34,319
cleared back in the other routine or

1765
01:19:31,889 --> 01:19:37,109
whatever so that one's not a big deal

1766
01:19:34,319 --> 01:19:39,198
but the emission is actually an

1767
01:19:37,109 --> 01:19:41,609
important part of the light information

1768
01:19:39,198 --> 01:19:43,109
which needs to get sent down on the

1769
01:19:41,609 --> 01:19:45,179
frame because it's the new emission

1770
01:19:43,109 --> 01:19:46,948
that's being said you know this is the

1771
01:19:45,179 --> 01:19:50,908
emission that we're actually sending

1772
01:19:46,948 --> 01:19:55,078
down so we do want that to be stored in

1773
01:19:50,908 --> 01:19:57,929
the render information as well and so

1774
01:19:55,078 --> 01:20:01,139
I'm just going to put that at least

1775
01:19:57,929 --> 01:20:03,239
temporarily into the the stuff that we

1776
01:20:01,139 --> 01:20:05,219
passed down I'm gonna bake that in to

1777
01:20:03,238 --> 01:20:06,359
the lighting point and the reason I'm

1778
01:20:05,219 --> 01:20:07,170
gonna bake that into the lighting point

1779
01:20:06,359 --> 01:20:10,078
is because I think we're gonna use

1780
01:20:07,170 --> 01:20:11,670
buffers for iterating over these and so

1781
01:20:10,078 --> 01:20:13,408
I think there'll be a source buffer from

1782
01:20:11,670 --> 01:20:17,069
the lending points we'll do a pass first

1783
01:20:13,408 --> 01:20:18,929
that well I don't know since I don't

1784
01:20:17,069 --> 01:20:23,399
know I'll just leave it separate I I'm

1785
01:20:18,929 --> 01:20:25,109
getting ahead of myself here so we emit

1786
01:20:23,399 --> 01:20:26,429
c0 we'll go here with lighting points

1787
01:20:25,109 --> 01:20:28,799
and it'll have as many in it as this

1788
01:20:26,429 --> 01:20:35,550
does and so what we'll do here is again

1789
01:20:28,800 --> 01:20:37,559
say that whatever the whatever the emit

1790
01:20:35,550 --> 01:20:38,900
c0 is for this particular light index is

1791
01:20:37,559 --> 01:20:42,599
going to be the max mission times

1792
01:20:38,899 --> 01:20:44,129
whatever the emission is for this value

1793
01:20:42,599 --> 01:20:44,690
which should be just a value right here

1794
01:20:44,130 --> 01:20:45,890
we

1795
01:20:44,689 --> 01:20:48,710
have to get out of a vertex or anything

1796
01:20:45,890 --> 01:20:50,869
because we could just use it directly so

1797
01:20:48,710 --> 01:20:56,119
we'll put the emission in there and then

1798
01:20:50,869 --> 01:20:57,529
we'll continue on right all right so

1799
01:20:56,119 --> 01:21:02,779
we're getting closer but we still have a

1800
01:20:57,529 --> 01:21:04,909
few things to deal with here so we have

1801
01:21:02,779 --> 01:21:06,170
to figure out which order we need to

1802
01:21:04,909 --> 01:21:14,569
push the service in to line up with

1803
01:21:06,170 --> 01:21:21,350
these right so p0 p1 p2 p3 is p0 p1 p2

1804
01:21:14,569 --> 01:21:24,559
p3 is N and P P and P P P P and P P

1805
01:21:21,350 --> 01:21:28,969
right so this is a positive Z face of

1806
01:21:24,560 --> 01:21:31,370
the cube right so the first thing we're

1807
01:21:28,969 --> 01:21:34,579
pushing is the positive z face and this

1808
01:21:31,369 --> 01:21:39,109
is our positive z face so this goes

1809
01:21:34,579 --> 01:21:45,769
first right the next thing we're pushing

1810
01:21:39,109 --> 01:21:52,939
is seven six five four seven six five

1811
01:21:45,770 --> 01:21:56,270
four that's the negative Z face so

1812
01:21:52,939 --> 01:22:03,229
positive Z face negative Z face what are

1813
01:21:56,270 --> 01:22:08,860
we doing next four or five one zero four

1814
01:22:03,229 --> 01:22:08,859
five one zero that's the negative Y face

1815
01:22:12,310 --> 01:22:15,850
this one right here

1816
01:22:17,340 --> 01:22:24,460
keep track of where I am superfish

1817
01:22:22,659 --> 01:22:26,439
positive easy face negative z face

1818
01:22:24,460 --> 01:22:29,430
positive i'm sorry negative live face

1819
01:22:26,439 --> 01:22:32,219
i'm just gonna guess positive y face

1820
01:22:29,430 --> 01:22:42,340
let's see if I'm right

1821
01:22:32,220 --> 01:22:49,840
2 6 7 3 2 6 7 3 yep

1822
01:22:42,340 --> 01:22:52,720
so probably negative X face now and then

1823
01:22:49,840 --> 01:23:02,380
positive X face let's take a look 1 5 6

1824
01:22:52,720 --> 01:23:03,820
2 1 5 6 2 lovely so here we've pushed on

1825
01:23:02,380 --> 01:23:05,199
the surfaces now in the same order that

1826
01:23:03,819 --> 01:23:09,219
they're getting pushed on in here which

1827
01:23:05,199 --> 01:23:10,989
is obviously important and so then we

1828
01:23:09,220 --> 01:23:13,690
need to make sure that our light index

1829
01:23:10,989 --> 01:23:15,460
aligns up I'm this is really cheesy I'm

1830
01:23:13,689 --> 01:23:17,079
only just not caring about this because

1831
01:23:15,460 --> 01:23:19,899
we're gonna delete it like immediately

1832
01:23:17,079 --> 01:23:21,279
after we get it working so we're you

1833
01:23:19,899 --> 01:23:23,049
know resetting it or pushing on the

1834
01:23:21,279 --> 01:23:26,829
points resetting it again pushing on the

1835
01:23:23,050 --> 01:23:29,170
points right but that's really all we

1836
01:23:26,829 --> 01:23:30,369
should have to do so now what we need to

1837
01:23:29,170 --> 01:23:32,199
do is actually grab these out of

1838
01:23:30,369 --> 01:23:34,599
somewhere now we've got our rendered

1839
01:23:32,199 --> 01:23:39,550
entry texture quad stuff here where we

1840
01:23:34,600 --> 01:23:40,900
got entry right and this is using sort

1841
01:23:39,550 --> 01:23:44,610
of this information for where we're

1842
01:23:40,899 --> 01:23:47,409
supposed to push the quads we need to

1843
01:23:44,609 --> 01:23:48,819
specify we need to be able to get out

1844
01:23:47,409 --> 01:23:51,309
the rest of the stuff from the render

1845
01:23:48,819 --> 01:23:56,859
group as well so like this we need to

1846
01:23:51,310 --> 01:24:02,710
access these two things right we need

1847
01:23:56,859 --> 01:24:08,019
command surfaces and commands points so

1848
01:24:02,710 --> 01:24:15,640
in here where we do lighting surface

1849
01:24:08,020 --> 01:24:19,570
surface equals command surfaces commands

1850
01:24:15,640 --> 01:24:21,280
surface count plus equals 6 what we need

1851
01:24:19,569 --> 01:24:24,840
to do here is basically say like okay

1852
01:24:21,279 --> 01:24:24,840
commands surface count

1853
01:24:32,069 --> 01:24:35,889
we need to make sure all these indices

1854
01:24:34,389 --> 01:24:38,139
line up and there's way too many of them

1855
01:24:35,889 --> 01:24:40,208
right so we need to be able to say like

1856
01:24:38,139 --> 01:24:41,588
okay what's the surfaced in next year

1857
01:24:40,208 --> 01:24:49,418
the surface index is whatever the

1858
01:24:41,588 --> 01:24:51,969
surface count was so now we've got the

1859
01:24:49,418 --> 01:24:59,050
surface index properly here and then all

1860
01:24:51,969 --> 01:25:00,458
of these can all of the points can know

1861
01:24:59,050 --> 01:25:04,859
what their surface index should have

1862
01:25:00,458 --> 01:25:07,779
been I guess is what I'm saying there

1863
01:25:04,859 --> 01:25:10,179
when they get pushed on we'll deal with

1864
01:25:07,779 --> 01:25:12,458
that in a second so anyway here's our

1865
01:25:10,179 --> 01:25:14,949
surface indices we know what surface

1866
01:25:12,458 --> 01:25:16,988
index were on we go sort of through them

1867
01:25:14,948 --> 01:25:18,158
we'll use this in a minute because we

1868
01:25:16,988 --> 01:25:20,259
don't actually need it for anything at

1869
01:25:18,158 --> 01:25:21,998
the exact moment we update the surface

1870
01:25:20,260 --> 01:25:23,769
count so this process should push all

1871
01:25:21,998 --> 01:25:27,279
the surfaces on we just need to know

1872
01:25:23,769 --> 01:25:28,958
what this commands value is and I think

1873
01:25:27,279 --> 01:25:31,198
we can do it just by doing group

1874
01:25:28,958 --> 01:25:36,938
commands I think it's literally just

1875
01:25:31,198 --> 01:25:44,078
that right we also want to assert that

1876
01:25:36,939 --> 01:25:47,649
surface index is I should say commands

1877
01:25:44,078 --> 01:25:50,738
surface count less than or equal to like

1878
01:25:47,649 --> 01:25:53,588
data width like so and this should push

1879
01:25:50,738 --> 01:25:55,328
all of those services directly on we

1880
01:25:53,588 --> 01:25:57,550
then when we're pushing the points on

1881
01:25:55,328 --> 01:25:59,498
need to do exactly the same thing so we

1882
01:25:57,550 --> 01:26:00,429
have the light index stuff here needs to

1883
01:25:59,498 --> 01:26:05,668
be on here so

1884
01:26:00,429 --> 01:26:11,788
this is actually just group commands

1885
01:26:05,668 --> 01:26:11,788
white points and similarly we have here

1886
01:26:15,238 --> 01:26:22,328
when we're doing this check this is

1887
01:26:18,219 --> 01:26:24,569
going to be group commands light point

1888
01:26:22,328 --> 01:26:24,569
count

1889
01:26:25,809 --> 01:26:29,050
like so

1890
01:26:35,590 --> 01:27:01,819
alright don't ask me what that's

1891
01:26:38,658 --> 01:27:11,210
supposed to be all right and now we need

1892
01:27:01,819 --> 01:27:14,750
to allocate these points per surface

1893
01:27:11,210 --> 01:27:20,210
right so really what we want to do is

1894
01:27:14,750 --> 01:27:26,569
loop over the surfaces here like so this

1895
01:27:20,210 --> 01:27:28,809
would be surface width and height we

1896
01:27:26,569 --> 01:27:32,590
need to know the surface index as well

1897
01:27:28,809 --> 01:27:32,590
which should be pretty straightforward

1898
01:27:38,060 --> 01:27:50,670
and I think that's all I think that's

1899
01:27:41,670 --> 01:27:52,470
all that we actually is right so yeah in

1900
01:27:50,670 --> 01:27:53,970
here we can just say all right we know

1901
01:27:52,470 --> 01:27:58,740
that our surface index this is our

1902
01:27:53,970 --> 01:28:03,020
starting surface index right here all

1903
01:27:58,739 --> 01:28:03,019
right so we know that our surface index

1904
01:28:10,939 --> 01:28:19,799
we're just going to loop over all six

1905
01:28:12,960 --> 01:28:23,000
phases once we get the surface index we

1906
01:28:19,800 --> 01:28:23,000
can pull the surface out from that

1907
01:28:41,140 --> 01:28:46,840
that's actually fine better right

1908
01:28:56,270 --> 01:29:02,900
all right and so for each of these

1909
01:29:00,710 --> 01:29:05,989
points the point P is gonna have to be

1910
01:29:02,899 --> 01:29:08,599
something on the surface right so what

1911
01:29:05,989 --> 01:29:10,939
we can do here is say well you know we

1912
01:29:08,600 --> 01:29:13,490
know what the point we want to change

1913
01:29:10,939 --> 01:29:14,869
this from being generated off of

1914
01:29:13,489 --> 01:29:17,779
vertices which is how it was working

1915
01:29:14,869 --> 01:29:22,579
before into something that's generated

1916
01:29:17,779 --> 01:29:25,389
off of the center point probably right

1917
01:29:22,579 --> 01:29:38,989
so what we can do here is say like okay

1918
01:29:25,390 --> 01:29:41,420
the vert well I can really even just

1919
01:29:38,989 --> 01:29:43,069
translate this exactly so if we just use

1920
01:29:41,420 --> 01:29:44,630
the surfaces x-axis that we've already

1921
01:29:43,069 --> 01:29:46,189
computed in the surfaces y-axis that

1922
01:29:44,630 --> 01:29:48,890
we've already computed we can replicate

1923
01:29:46,189 --> 01:29:50,719
this as in its entirety by just saying

1924
01:29:48,890 --> 01:29:53,150
all right they're vert we know what this

1925
01:29:50,720 --> 01:29:55,490
would be it's just gonna be kind of

1926
01:29:53,149 --> 01:30:00,229
annoying when we write it out but if we

1927
01:29:55,489 --> 01:30:02,479
just take the surfaces P value then we

1928
01:30:00,229 --> 01:30:08,089
just need to step backwards by the x and

1929
01:30:02,479 --> 01:30:11,059
y-axes by by half the width and height

1930
01:30:08,090 --> 01:30:13,489
of the actual thing right so we just

1931
01:30:11,060 --> 01:30:20,240
need to say like half we're gonna step

1932
01:30:13,489 --> 01:30:22,969
backwards by half surface with backwards

1933
01:30:20,239 --> 01:30:24,409
by half surface height and again that's

1934
01:30:22,970 --> 01:30:25,670
totally unnecessary because we could

1935
01:30:24,409 --> 01:30:27,529
just make that directly to here because

1936
01:30:25,670 --> 01:30:31,460
we know that sub width is just half of

1937
01:30:27,529 --> 01:30:35,529
it already so I guess one thing we could

1938
01:30:31,460 --> 01:30:38,000
say it's just like alright forget that

1939
01:30:35,529 --> 01:30:39,619
we know we're subtracting off the point

1940
01:30:38,000 --> 01:30:41,359
five here so just get rid of the point

1941
01:30:39,619 --> 01:30:46,819
five of this or whatever but let's just

1942
01:30:41,359 --> 01:30:51,099
replicate it exactly for now and again

1943
01:30:46,819 --> 01:30:51,099
this is saxis

1944
01:30:58,250 --> 01:31:07,189
omit see zero in this case is just our

1945
01:31:00,920 --> 01:31:12,619
group commands omitsu zero max emission

1946
01:31:07,189 --> 01:31:14,779
is sort of the value we've we haven't

1947
01:31:12,619 --> 01:31:16,819
really decided what that value actually

1948
01:31:14,779 --> 01:31:18,380
is ever going to be so that'll be

1949
01:31:16,819 --> 01:31:21,500
something that we work on a little bit

1950
01:31:18,380 --> 01:31:24,279
later but it's just a way of encoding

1951
01:31:21,500 --> 01:31:24,279
our light sources

1952
01:31:31,420 --> 01:31:43,480
we'll handle that like so um yeah

1953
01:31:54,029 --> 01:31:59,039
cannot convert f/32 ah

1954
01:32:17,619 --> 01:32:27,920
and there we go so now we have

1955
01:32:25,909 --> 01:32:31,220
ostensibly started pushing these things

1956
01:32:27,920 --> 01:32:37,210
on to that memory oh and we need to

1957
01:32:31,220 --> 01:32:37,210
allocate this in in our win32 layer

1958
01:32:37,300 --> 01:32:46,940
still being here and these will probably

1959
01:32:43,489 --> 01:32:48,380
be transfer buffers eventually because

1960
01:32:46,939 --> 01:32:50,389
this is all stuff that goes to the card

1961
01:32:48,380 --> 01:32:53,960
so I'm not sure how this will actually

1962
01:32:50,390 --> 01:32:56,660
pan out when we finish up but you know

1963
01:32:53,960 --> 01:32:58,819
it's gonna be something like this and

1964
01:32:56,659 --> 01:33:13,819
then when we do our default render

1965
01:32:58,819 --> 01:33:16,029
commands you have to pass these in like

1966
01:33:13,819 --> 01:33:16,029
so

1967
01:33:17,600 --> 01:33:22,010
so now that stuff should be getting

1968
01:33:19,010 --> 01:33:25,190
pushed on there it's however is not

1969
01:33:22,010 --> 01:33:28,730
actually going to get used and we have

1970
01:33:25,189 --> 01:33:31,089
to it that's odd is this not getting

1971
01:33:28,729 --> 01:33:31,089
reset

1972
01:33:41,529 --> 01:34:07,359
oh right we don't reset this so we have

1973
01:33:44,439 --> 01:34:10,089
to where is our there we go so we have

1974
01:34:07,359 --> 01:34:12,849
to clear this out every time we restart

1975
01:34:10,090 --> 01:34:15,909
as well right so we have to clear out

1976
01:34:12,850 --> 01:34:18,880
our surface count we have to clear out

1977
01:34:15,909 --> 01:34:22,059
our light point count and we have to

1978
01:34:18,880 --> 01:34:24,940
clear out our admit well our emitters

1979
01:34:22,060 --> 01:34:28,140
just use the same indices so that

1980
01:34:24,939 --> 01:34:28,139
doesn't actually need to get cleared out

1981
01:34:31,949 --> 01:34:37,920
so at least in theory now we should be

1982
01:34:34,390 --> 01:34:37,920
good to go on the

1983
01:34:45,559 --> 01:34:51,208
on the lighting front there all that

1984
01:34:48,238 --> 01:34:54,568
stuff's getting pushed down we're just

1985
01:34:51,208 --> 01:34:56,748
not using it yet and so now we have to

1986
01:34:54,569 --> 01:34:59,729
we have to see about actually using it

1987
01:34:56,748 --> 01:35:03,568
and we have to see about pushing the

1988
01:34:59,729 --> 01:35:05,010
light points on are they all getting

1989
01:35:03,569 --> 01:35:06,839
pushed on correctly I think they are

1990
01:35:05,010 --> 01:35:09,719
actually doing press on correctly

1991
01:35:06,838 --> 01:35:10,979
so now or at least we made an attempt to

1992
01:35:09,719 --> 01:35:13,439
push them on correctly we may not have

1993
01:35:10,979 --> 01:35:15,119
done it correctly yet so now we just

1994
01:35:13,439 --> 01:35:17,069
need to go and actually start using them

1995
01:35:15,118 --> 01:35:20,128
so what we want to do here is in when we

1996
01:35:17,069 --> 01:35:22,469
do our extraction process here we do

1997
01:35:20,128 --> 01:35:25,588
extract reflectors from quads what we

1998
01:35:22,469 --> 01:35:28,889
want to do is say well we don't really

1999
01:35:25,588 --> 01:35:31,559
do that anymore let's just obviate the

2000
01:35:28,889 --> 01:35:32,729
need for that entirely get rid of all

2001
01:35:31,559 --> 01:35:36,239
this and the only thing we really have

2002
01:35:32,729 --> 01:35:38,789
to do then is let's clear out like emit

2003
01:35:36,238 --> 01:35:42,529
c0 I mean I mean average direction to

2004
01:35:38,788 --> 01:35:45,719
light right because that needs to get

2005
01:35:42,529 --> 01:35:50,849
cleared properly so average direction to

2006
01:35:45,719 --> 01:35:53,989
light needs to be zeroed no if we have a

2007
01:35:50,849 --> 01:35:53,989
thing to zero here

2008
01:36:04,170 --> 01:36:14,349
zero size so if I want to I can zero out

2009
01:36:11,078 --> 01:36:16,179
that entire array and so now that's

2010
01:36:14,349 --> 01:36:18,279
cleared and now we don't do the

2011
01:36:16,179 --> 01:36:20,440
extraction process at all

2012
01:36:18,279 --> 01:36:27,670
we just need to hoist these values out

2013
01:36:20,439 --> 01:36:39,428
here and use them right so what we want

2014
01:36:27,670 --> 01:36:40,599
to do is in the lighting solution where

2015
01:36:39,429 --> 01:36:44,109
we've got like the service count

2016
01:36:40,599 --> 01:36:46,510
services the point count points the emit

2017
01:36:44,109 --> 01:36:49,210
Caesar bitsy one direction delight last

2018
01:36:46,510 --> 01:36:50,980
is valid blah blah blah we want to do

2019
01:36:49,210 --> 01:36:58,300
here is we want to start taking some of

2020
01:36:50,979 --> 01:37:00,098
these out okay and so now what we want

2021
01:36:58,300 --> 01:37:04,750
to do is we want to get those from

2022
01:37:00,099 --> 01:37:05,920
somewhere else and you know that

2023
01:37:04,750 --> 01:37:08,760
somewhere else is going to be the

2024
01:37:05,920 --> 01:37:11,469
lighting commands right so we have to

2025
01:37:08,760 --> 01:37:13,440
when we go to do that extraction what we

2026
01:37:11,469 --> 01:37:22,750
need to do is actually extract those

2027
01:37:13,439 --> 01:37:25,299
from exactly that place now I guess we

2028
01:37:22,750 --> 01:37:27,908
could actually do this in a in a really

2029
01:37:25,300 --> 01:37:30,070
smoothly kind of way by just saying like

2030
01:37:27,908 --> 01:37:34,049
alright well you know what maybe we just

2031
01:37:30,069 --> 01:37:37,078
actually copy everything for the moment

2032
01:37:34,050 --> 01:37:37,079
you know

2033
01:37:40,939 --> 01:37:52,589
so let's just do this solution omit c0

2034
01:37:47,060 --> 01:37:58,220
is gonna come from group commands omit

2035
01:37:52,590 --> 01:38:06,829
c0 let's just copy all this stuff

2036
01:37:58,220 --> 01:38:22,350
surfaces light points and emit c0

2037
01:38:06,829 --> 01:38:42,239
surfaces points emit c0 and then let's

2038
01:38:22,350 --> 01:38:43,620
also just copy the point counts so now

2039
01:38:42,239 --> 01:38:45,090
we're just going to won't copy that

2040
01:38:43,619 --> 01:38:59,699
stuff in here and now we can actually

2041
01:38:45,090 --> 01:39:03,960
debug this as we go and this was already

2042
01:38:59,699 --> 01:39:05,130
a local so we could just do that so now

2043
01:39:03,960 --> 01:39:06,960
we do the extraction we're literally

2044
01:39:05,130 --> 01:39:09,270
just copying the stuff out into our own

2045
01:39:06,960 --> 01:39:13,380
temporary space working on it and then

2046
01:39:09,270 --> 01:39:16,800
putting it back and as you can see when

2047
01:39:13,380 --> 01:39:19,079
I'm doing this we actually seem to have

2048
01:39:16,800 --> 01:39:21,720
got incorrect results which is kind of

2049
01:39:19,079 --> 01:39:23,250
surprising to be honest but it seems to

2050
01:39:21,720 --> 01:39:25,920
still be behaving the way that it was

2051
01:39:23,250 --> 01:39:27,750
behaving before it does seem slower now

2052
01:39:25,920 --> 01:39:30,239
which I'm not sure exactly why that

2053
01:39:27,750 --> 01:39:31,829
would be but we can investigate that a

2054
01:39:30,239 --> 01:39:34,199
little bit further I just wanted to make

2055
01:39:31,829 --> 01:39:39,029
sure that was working at all and it sort

2056
01:39:34,199 --> 01:39:40,470
of is one of the reasons it might be

2057
01:39:39,029 --> 01:39:43,039
slower is because of all this copying

2058
01:39:40,470 --> 01:39:47,090
that we're doing for no reason

2059
01:39:43,039 --> 01:39:47,090
obviously you pick part of it

2060
01:39:51,210 --> 01:39:56,109
we are a compelling optimization mode

2061
01:39:53,710 --> 01:39:58,149
but that copy could be kind of slow so

2062
01:39:56,109 --> 01:40:00,429
let's go ahead and get rid of the copy

2063
01:39:58,149 --> 01:40:02,619
and get rid of the extraction altogether

2064
01:40:00,430 --> 01:40:05,110
we can now get rid of this because we

2065
01:40:02,619 --> 01:40:17,260
don't use it anymore I will go ahead and

2066
01:40:05,109 --> 01:40:18,789
and nuke that there we go and then when

2067
01:40:17,260 --> 01:40:24,789
we do extract the selectors from quads

2068
01:40:18,789 --> 01:40:26,800
where we were calling that before I'm

2069
01:40:24,789 --> 01:40:32,170
just going to put this directly in line

2070
01:40:26,800 --> 01:40:34,000
here and I'm going to eliminate these

2071
01:40:32,170 --> 01:40:39,220
copies by just making them be local

2072
01:40:34,000 --> 01:40:46,060
pointers right so where we do extract

2073
01:40:39,220 --> 01:40:48,070
reflectors quads can go what we need to

2074
01:40:46,060 --> 01:40:53,230
do here is just say that solutions

2075
01:40:48,069 --> 01:40:59,019
surfaces equals command surfaces

2076
01:40:53,229 --> 01:41:03,569
solution points equals group command

2077
01:40:59,020 --> 01:41:09,250
light points and solution emits c0

2078
01:41:03,569 --> 01:41:17,250
equals rib commands emit c0 like so and

2079
01:41:09,250 --> 01:41:17,250
we need to move this stuff down here

2080
01:41:20,899 --> 01:41:28,489
this needs to happen at the end like so

2081
01:41:30,739 --> 01:41:35,639
so when we do this right now we're gonna

2082
01:41:33,600 --> 01:41:39,180
grab all the pointers out we're gonna do

2083
01:41:35,640 --> 01:41:40,890
our we're gonna save our average

2084
01:41:39,180 --> 01:41:46,350
direction copy here and then we're gonna

2085
01:41:40,890 --> 01:41:50,250
clear it that's really it not a lot more

2086
01:41:46,350 --> 01:41:52,579
to it than that so I think we're all

2087
01:41:50,250 --> 01:41:52,579
good

2088
01:41:53,710 --> 01:41:58,140
[Music]

2089
01:41:55,699 --> 01:41:59,699
the only question is hey when we're

2090
01:41:58,140 --> 01:42:05,400
storing these here we should probably

2091
01:41:59,699 --> 01:42:07,229
now do this a little bit more sane we

2092
01:42:05,399 --> 01:42:09,719
should probably say something like well

2093
01:42:07,229 --> 01:42:13,679
for the points that we're actually using

2094
01:42:09,720 --> 01:42:16,010
so you know this is probably more

2095
01:42:13,680 --> 01:42:16,010
appropriate

2096
01:42:18,140 --> 01:42:24,869
let's not clear parts of the buffer that

2097
01:42:21,210 --> 01:42:28,050
we don't actually use or save parts the

2098
01:42:24,869 --> 01:42:34,619
buffer that we don't actually use in

2099
01:42:28,050 --> 01:42:36,239
that case but that's about it so

2100
01:42:34,619 --> 01:42:40,710
assuming that we're gonna do everything

2101
01:42:36,239 --> 01:42:42,840
that way then what we want to do is and

2102
01:42:40,710 --> 01:42:44,100
we have to do some some stuff here to

2103
01:42:42,840 --> 01:42:47,250
make sure the things as we add more

2104
01:42:44,100 --> 01:42:48,990
points won't be completely borked there

2105
01:42:47,250 --> 01:42:50,909
but that's sort of a separate issue we

2106
01:42:48,989 --> 01:42:52,319
have to zero some things out and and

2107
01:42:50,909 --> 01:42:56,340
stuff like that but we'll get to that a

2108
01:42:52,319 --> 01:42:57,809
little bit further down they will

2109
01:42:56,340 --> 01:42:59,400
already be zeroed because they're win32

2110
01:42:57,810 --> 01:43:02,070
initialized blocks so that part is easy

2111
01:42:59,399 --> 01:43:03,539
as well but anyway what we need to do

2112
01:43:02,069 --> 01:43:05,099
now is make sure that we're not using

2113
01:43:03,539 --> 01:43:07,109
array count anywhere because these

2114
01:43:05,100 --> 01:43:11,930
things are no longer directly accessible

2115
01:43:07,109 --> 01:43:18,029
so this you know becomes that this

2116
01:43:11,930 --> 01:43:21,329
becomes that this becomes that so you

2117
01:43:18,029 --> 01:43:23,069
have to watch out right so I'm just

2118
01:43:21,329 --> 01:43:27,260
gonna go see if we have any other size

2119
01:43:23,069 --> 01:43:27,259
of zin here that we're happening

2120
01:43:27,770 --> 01:43:33,160
there isn't and I'm gonna see if we have

2121
01:43:30,930 --> 01:43:36,220
any array counts in here

2122
01:43:33,159 --> 01:43:38,649
it doesn't look like we do so I'm gonna

2123
01:43:36,220 --> 01:43:41,860
see if that works a little bit better or

2124
01:43:38,649 --> 01:43:44,199
I should say if it works at all because

2125
01:43:41,859 --> 01:43:50,529
I don't actually know it does appear to

2126
01:43:44,199 --> 01:43:56,889
be working I'm gonna take a look at the

2127
01:43:50,529 --> 01:43:58,269
profile you can see update and render

2128
01:43:56,890 --> 01:44:00,340
world is taking all the time that's the

2129
01:43:58,270 --> 01:44:05,500
compute lighting stuff I'm gonna go

2130
01:44:00,340 --> 01:44:09,270
ahead and take a look at the I'm gonna

2131
01:44:05,500 --> 01:44:09,270
I'm gonna add some timed blocks in here

2132
01:44:12,180 --> 01:44:20,819
so all I have to do yeah

2133
01:44:17,710 --> 01:44:20,819
[Music]

2134
01:44:30,439 --> 01:44:38,469
assuming that all the time will be spent

2135
01:44:33,649 --> 01:44:38,469
in there but I don't actually know

2136
01:44:49,569 --> 01:44:54,648
so compute light propagation is taking

2137
01:44:52,248 --> 01:44:57,050
all the time which is what I had assumed

2138
01:44:54,649 --> 01:44:59,809
would be happening and is happening so

2139
01:44:57,050 --> 01:45:01,699
that's good the only problem is I don't

2140
01:44:59,809 --> 01:45:03,800
know why it seems significantly slower

2141
01:45:01,698 --> 01:45:06,259
than it was before cuz I think it was

2142
01:45:03,800 --> 01:45:08,090
running faster than this before I could

2143
01:45:06,260 --> 01:45:09,860
be wrong about that so maybe there's no

2144
01:45:08,090 --> 01:45:11,179
need for concern but I was trying to

2145
01:45:09,859 --> 01:45:13,998
figure out whether we were pushing too

2146
01:45:11,179 --> 01:45:15,559
many points on potentially so it might

2147
01:45:13,998 --> 01:45:19,340
be nice to see what the point count is

2148
01:45:15,559 --> 01:45:21,019
for example in here in the renderer how

2149
01:45:19,340 --> 01:45:22,159
many lighting points is actually doing

2150
01:45:21,019 --> 01:45:25,969
how many plotting points is actually

2151
01:45:22,158 --> 01:45:27,348
using or stuff like that so I might just

2152
01:45:25,969 --> 01:45:31,849
add a thing that allows that to be

2153
01:45:27,349 --> 01:45:35,239
output I know in our debug system we

2154
01:45:31,849 --> 01:45:50,779
have the ability to save debug value

2155
01:45:35,238 --> 01:45:55,218
I just never remember how it works so it

2156
01:45:50,779 --> 01:45:59,090
looks like you just say debug value that

2157
01:45:55,219 --> 01:46:03,668
seems pretty simple so yeah if I was to

2158
01:45:59,090 --> 01:46:03,668
do that here would that just work

2159
01:46:20,560 --> 01:46:32,350
I don't really know I guess it does so

2160
01:46:27,340 --> 01:46:35,710
we've got 1849 points and 462 surfaces

2161
01:46:32,350 --> 01:46:41,980
so that does still seem like the right

2162
01:46:35,710 --> 01:46:44,529
number so yeah I'm just not sure if we

2163
01:46:41,979 --> 01:46:46,149
accidentally slowed things down because

2164
01:46:44,529 --> 01:46:55,300
I don't remember how fast this thing was

2165
01:46:46,149 --> 01:46:56,319
running before I think maybe it didn't

2166
01:46:55,300 --> 01:46:58,300
slow down I don't know we should

2167
01:46:56,319 --> 01:46:59,469
probably check we're gonna have to

2168
01:46:58,300 --> 01:47:01,930
optimize this all anyway so I guess I

2169
01:46:59,470 --> 01:47:03,220
don't really care too much but I

2170
01:47:01,930 --> 01:47:04,480
probably shouldn't double-check that we

2171
01:47:03,220 --> 01:47:07,050
didn't slow it down it would have been

2172
01:47:04,479 --> 01:47:09,189
nice we can go check the video I suppose

2173
01:47:07,050 --> 01:47:11,860
all right so that's how we're pushing

2174
01:47:09,189 --> 01:47:13,750
all that stuff on there and now the

2175
01:47:11,859 --> 01:47:15,819
question is just and

2176
01:47:13,750 --> 01:47:17,289
you know I might have pushed so I I

2177
01:47:15,819 --> 01:47:19,239
don't know if I actually pushed

2178
01:47:17,289 --> 01:47:25,199
everything on exactly right

2179
01:47:19,239 --> 01:47:25,199
fortunately it it looks like I did I

2180
01:47:26,699 --> 01:47:31,179
mean all the phases seemed to be

2181
01:47:29,109 --> 01:47:33,519
responding properly if I switch

2182
01:47:31,180 --> 01:47:35,590
temporarily to what it looks like what

2183
01:47:33,520 --> 01:47:36,670
the incoming light is you can see that

2184
01:47:35,590 --> 01:47:38,590
it looks about right

2185
01:47:36,670 --> 01:47:41,020
this yellow incoming light to all those

2186
01:47:38,590 --> 01:47:43,630
there's white incoming light over where

2187
01:47:41,020 --> 01:47:49,720
the white light is that all looks pretty

2188
01:47:43,630 --> 01:47:51,190
reasonable right I can switch the number

2189
01:47:49,720 --> 01:47:52,710
of iterations down very low and then

2190
01:47:51,189 --> 01:47:56,399
we're back up to 60 frames a second

2191
01:47:52,710 --> 01:47:56,399
there's one iteration

2192
01:47:59,989 --> 01:48:08,429
there's two iterations and so on uh you

2193
01:48:05,880 --> 01:48:10,560
know in another thing that's worth

2194
01:48:08,430 --> 01:48:13,710
noting is since we're sort of doing

2195
01:48:10,560 --> 01:48:15,810
smoothing overtime now we can even we

2196
01:48:13,710 --> 01:48:20,699
could allow light to propagate to

2197
01:48:15,810 --> 01:48:24,000
continue propagation across frames

2198
01:48:20,699 --> 01:48:25,649
potentially I don't know how I feel

2199
01:48:24,000 --> 01:48:26,850
about that necessarily but you know it's

2200
01:48:25,649 --> 01:48:29,670
worth noting that one of the things we

2201
01:48:26,850 --> 01:48:32,940
could do is say well lighting bounces

2202
01:48:29,670 --> 01:48:34,710
happen can happen outside of a frame so

2203
01:48:32,939 --> 01:48:36,599
you know you bounce light somewhere and

2204
01:48:34,710 --> 01:48:38,130
it can it can bounce light again next

2205
01:48:36,600 --> 01:48:40,200
frame that it received the previous

2206
01:48:38,130 --> 01:48:42,690
frame I don't know if we really want to

2207
01:48:40,199 --> 01:48:44,579
go that route because I'm not sure how

2208
01:48:42,689 --> 01:48:45,929
you know you have to decay those over

2209
01:48:44,579 --> 01:48:48,809
time in order to make sure that they

2210
01:48:45,930 --> 01:48:55,170
would not bounce around forever or

2211
01:48:48,810 --> 01:48:57,870
whatever but you know we'll see anyway

2212
01:48:55,170 --> 01:48:59,399
so given the fact that that's all fairly

2213
01:48:57,869 --> 01:49:01,500
reasonable now the next step that we

2214
01:48:59,399 --> 01:49:03,629
would do is change this to a a B P so

2215
01:49:01,500 --> 01:49:05,659
that we just passed down a B piece

2216
01:49:03,630 --> 01:49:08,850
directly instead of having to pass down

2217
01:49:05,659 --> 01:49:11,550
all of this extra mumbo-jumbo right I

2218
01:49:08,850 --> 01:49:13,560
don't want to do that yet because we are

2219
01:49:11,550 --> 01:49:15,329
out of time now so what I want to do is

2220
01:49:13,560 --> 01:49:17,190
next time that's the next step will take

2221
01:49:15,329 --> 01:49:21,390
change to a BBS so that everything this

2222
01:49:17,189 --> 01:49:24,299
works on a a B B's instead and off we go

2223
01:49:21,390 --> 01:49:29,220
right so I'll go ahead and go to the QA

2224
01:49:24,300 --> 01:49:31,640
for now and hopefully YouTube stayed up

2225
01:49:29,220 --> 01:49:31,640
the whole time

2226
01:49:42,710 --> 01:49:44,770
you

2227
01:50:02,029 --> 01:50:15,529
all right oh how can - isn't used

2228
01:50:13,130 --> 01:50:17,329
prevalently at that in video playback

2229
01:50:15,529 --> 01:50:19,309
across all the video playback in use

2230
01:50:17,329 --> 01:50:24,140
cases why is it the incumbent sovereign

2231
01:50:19,310 --> 01:50:27,680
only in video games well I think two

2232
01:50:24,140 --> 01:50:29,480
reasons one is that the companies that

2233
01:50:27,680 --> 01:50:31,880
get together to do the standard like

2234
01:50:29,479 --> 01:50:34,369
MPEG license are all kind of in a cabal

2235
01:50:31,880 --> 01:50:37,460
together - they all do like this giant

2236
01:50:34,369 --> 01:50:39,019
patent nonsense and make this like you

2237
01:50:37,460 --> 01:50:40,430
know codec that they're all gonna put in

2238
01:50:39,020 --> 01:50:42,170
their things so like you know that's why

2239
01:50:40,430 --> 01:50:44,150
I like Blu ray or something is this

2240
01:50:42,170 --> 01:50:46,010
standard it's because all the people who

2241
01:50:44,149 --> 01:50:47,719
make blu-ray players and blu-ray discs

2242
01:50:46,010 --> 01:50:49,250
you all get together and have a giant

2243
01:50:47,720 --> 01:50:52,730
festival where they make a really crappy

2244
01:50:49,250 --> 01:50:54,529
standard and then ship it right but the

2245
01:50:52,729 --> 01:51:00,639
other reason is because - is very

2246
01:50:54,529 --> 01:51:03,380
specifically designed for games and it's

2247
01:51:00,640 --> 01:51:04,970
very explicitly doesn't do things you

2248
01:51:03,380 --> 01:51:07,069
might want to do if you weren't worried

2249
01:51:04,970 --> 01:51:09,800
about games for example encoding is very

2250
01:51:07,069 --> 01:51:11,630
slow in big - because it assumes that

2251
01:51:09,800 --> 01:51:14,360
what you want to do is bake all the

2252
01:51:11,630 --> 01:51:15,800
videos for your games down and you want

2253
01:51:14,359 --> 01:51:17,719
to put a lot of thought into the

2254
01:51:15,800 --> 01:51:20,600
encoding of those and then you want the

2255
01:51:17,720 --> 01:51:22,789
playback to be extremely fast but that's

2256
01:51:20,600 --> 01:51:24,440
not true of other thing it's like for

2257
01:51:22,789 --> 01:51:26,810
example this is a live stream right now

2258
01:51:24,439 --> 01:51:29,629
I don't know that could livestream

2259
01:51:26,810 --> 01:51:32,780
something it's compressor is not meant

2260
01:51:29,630 --> 01:51:33,949
to run in real time right you know maybe

2261
01:51:32,779 --> 01:51:36,079
it can by now I don't know what they've

2262
01:51:33,949 --> 01:51:38,689
done to it since last I've worked on it

2263
01:51:36,079 --> 01:51:40,279
but so it makes three different

2264
01:51:38,689 --> 01:51:41,960
trade-offs than you would for a

2265
01:51:40,279 --> 01:51:44,659
general-purpose codec that doesn't have

2266
01:51:41,960 --> 01:51:47,510
any specific use case in mind like MPEG

2267
01:51:44,659 --> 01:51:49,510
or something like that

2268
01:51:47,510 --> 01:51:52,489
and the other reason is because

2269
01:51:49,510 --> 01:51:55,220
will sacrifice compression quality for

2270
01:51:52,489 --> 01:51:56,449
playback speed for example right so one

2271
01:51:55,220 --> 01:51:58,430
of the things that - definitely

2272
01:51:56,449 --> 01:52:00,050
does is it make sure it uses very little

2273
01:51:58,430 --> 01:52:04,450
memory and make sure it uses very little

2274
01:52:00,050 --> 01:52:04,449
CPU right as much as possible

2275
01:52:04,699 --> 01:52:10,309
that's not again true of MPEG MPEG is

2276
01:52:07,819 --> 01:52:11,929
maybe just going for the like best

2277
01:52:10,310 --> 01:52:14,470
quality with the highest compression

2278
01:52:11,930 --> 01:52:15,650
right and it doesn't care if it's using

2279
01:52:14,470 --> 01:52:16,730
urine

2280
01:52:15,649 --> 01:52:18,979
higher machine resources just to

2281
01:52:16,729 --> 01:52:19,849
playback a single video your pink

2282
01:52:18,979 --> 01:52:21,709
wouldn't want to make that decision

2283
01:52:19,850 --> 01:52:22,880
because pink knows that you want to be

2284
01:52:21,710 --> 01:52:24,980
doing loading and processing of your

2285
01:52:22,880 --> 01:52:26,179
assets while you're streaming a video so

2286
01:52:24,979 --> 01:52:29,529
that there's not a load screen or

2287
01:52:26,179 --> 01:52:32,779
something right so that's that's

2288
01:52:29,529 --> 01:52:35,149
probably most of the reason pink to just

2289
01:52:32,779 --> 01:52:36,679
isn't trying to target general purpose

2290
01:52:35,149 --> 01:52:38,689
it's only trying to target what game

2291
01:52:36,679 --> 01:52:40,699
people do that's what it tries to do

2292
01:52:38,689 --> 01:52:45,158
that's who they sell to and that's

2293
01:52:40,698 --> 01:52:45,158
intentional to fuel our descent

2294
01:52:46,819 --> 01:52:52,099
alright so light leaking it's entirely

2295
01:52:50,810 --> 01:52:53,449
possible that we have light leaking

2296
01:52:52,100 --> 01:52:54,739
because when we push these things on we

2297
01:52:53,448 --> 01:53:02,988
may have pushed them on incorrectly

2298
01:52:54,738 --> 01:53:04,849
right let's take a look could you be

2299
01:53:02,988 --> 01:53:14,269
more specific about where the light is

2300
01:53:04,850 --> 01:53:17,150
leaking I guess maybe the yellow light

2301
01:53:14,270 --> 01:53:24,130
is leaking is it leaking

2302
01:53:17,149 --> 01:53:24,129
I can't tell I'm not seeing the leaking

2303
01:53:32,170 --> 01:53:37,739
I don't see any light leaking at the

2304
01:53:35,139 --> 01:53:37,739
moment

2305
01:54:11,510 --> 01:54:19,269
trying to see if anyone has some can say

2306
01:54:15,380 --> 01:54:19,269
where the leaking is

2307
01:54:28,720 --> 01:54:34,240
I thought I saw the light leak through

2308
01:54:31,689 --> 01:54:42,759
the bottom wall that would be the red

2309
01:54:34,239 --> 01:54:44,859
wall right well remember we can push

2310
01:54:42,760 --> 01:54:48,489
ourselves through right so what you may

2311
01:54:44,859 --> 01:54:50,769
have seen is is this if we allow the

2312
01:54:48,489 --> 01:54:52,750
cube to penetrate through this surface

2313
01:54:50,770 --> 01:54:55,420
which is the only one blocking it then

2314
01:54:52,750 --> 01:54:56,920
it will leak through right so right now

2315
01:54:55,420 --> 01:55:00,359
you can see we're not getting any white

2316
01:54:56,920 --> 01:55:02,980
light leaking here but if I push through

2317
01:55:00,359 --> 01:55:05,019
then you would get it it's that's not a

2318
01:55:02,979 --> 01:55:07,029
leak that's because we assume you don't

2319
01:55:05,020 --> 01:55:09,600
enter penetrate because you normally

2320
01:55:07,029 --> 01:55:09,599
wouldn't be able to

2321
01:55:23,929 --> 01:55:27,829
Asaf said that I'm getting pretty

2322
01:55:26,329 --> 01:55:29,510
frequent audio popping other people

2323
01:55:27,829 --> 01:55:32,000
notice it as well I required a sample

2324
01:55:29,510 --> 01:55:34,550
here so I'm assuming that's the YouTube

2325
01:55:32,000 --> 01:55:36,670
streaming from OBS not working or maybe

2326
01:55:34,550 --> 01:55:39,770
YouTube isn't working

2327
01:55:36,670 --> 01:55:41,600
cuz I'm assuming that the audio popping

2328
01:55:39,770 --> 01:55:46,969
is not gonna be on the recording

2329
01:55:41,600 --> 01:55:52,159
recorded version unfortunately I'm not

2330
01:55:46,969 --> 01:55:53,989
sure how we would fix that maybe I have

2331
01:55:52,158 --> 01:56:03,829
to change the encoding settings for

2332
01:55:53,988 --> 01:56:05,509
YouTube or something not sure when you

2333
01:56:03,829 --> 01:56:06,529
write code in exploratory fashion and

2334
01:56:05,510 --> 01:56:08,119
you end up with something that works

2335
01:56:06,529 --> 01:56:09,559
well but it's too large and complex to

2336
01:56:08,119 --> 01:56:10,550
fit in your head at once how do you

2337
01:56:09,560 --> 01:56:13,789
simplify it back into something

2338
01:56:10,550 --> 01:56:16,310
manageable um well the same way that you

2339
01:56:13,789 --> 01:56:17,539
do anything else right like you go back

2340
01:56:16,310 --> 01:56:19,699
through it and you look at what it's

2341
01:56:17,539 --> 01:56:21,529
doing and you say alright how can I

2342
01:56:19,698 --> 01:56:24,439
break this into chunks that I can sort

2343
01:56:21,529 --> 01:56:27,619
of calve off as something that it does

2344
01:56:24,439 --> 01:56:29,869
right so like with the light we're like

2345
01:56:27,619 --> 01:56:31,698
okay you know maybe it does this

2346
01:56:29,869 --> 01:56:33,050
particular pass and then it does this

2347
01:56:31,698 --> 01:56:34,669
other particular pass let's break those

2348
01:56:33,050 --> 01:56:36,500
into two functions and sort of document

2349
01:56:34,670 --> 01:56:39,980
what they do and then then lock it down

2350
01:56:36,500 --> 01:56:41,179
like okay here's what it does right so

2351
01:56:39,979 --> 01:56:43,579
usually what you do is you just take

2352
01:56:41,179 --> 01:56:45,500
sort of spaghetti ish stuff right which

2353
01:56:43,579 --> 01:56:46,880
the light system is kind of now it's

2354
01:56:45,500 --> 01:56:49,219
like pushing it all over the place right

2355
01:56:46,880 --> 01:56:50,750
and then when we know that it's kind of

2356
01:56:49,219 --> 01:56:53,119
working the way we want then we just go

2357
01:56:50,750 --> 01:56:55,279
in and we start isolating the parts and

2358
01:56:53,119 --> 01:56:57,229
how they work and we just lock those

2359
01:56:55,279 --> 01:56:58,880
down right make them nice and clean and

2360
01:56:57,229 --> 01:57:01,129
say here's here's how the data comes in

2361
01:56:58,880 --> 01:57:03,469
here's how the data goes out everyone

2362
01:57:01,130 --> 01:57:08,539
understands it now and off we go

2363
01:57:03,469 --> 01:57:10,189
right it's it's really not that hard to

2364
01:57:08,539 --> 01:57:11,420
usually to go back through and scho what

2365
01:57:10,189 --> 01:57:13,908
is this actually doing how do I break

2366
01:57:11,420 --> 01:57:15,350
this into sections that I can clearly

2367
01:57:13,908 --> 01:57:18,799
say what they do and what they don't do

2368
01:57:15,350 --> 01:57:23,480
and what they ingest in what they output

2369
01:57:18,800 --> 01:57:26,329
right will you continue dual streaming

2370
01:57:23,479 --> 01:57:27,979
to YouTube I'm not gonna dual stream

2371
01:57:26,329 --> 01:57:30,079
like I'm only gonna stream to one place

2372
01:57:27,979 --> 01:57:33,109
if we can get the YouTube streaming

2373
01:57:30,079 --> 01:57:34,750
working well we could just switch to

2374
01:57:33,109 --> 01:57:36,529
that permanently I'd be fine with that

2375
01:57:34,750 --> 01:57:39,920
but

2376
01:57:36,529 --> 01:57:42,259
I don't knit it's very hard to get dual

2377
01:57:39,920 --> 01:57:45,440
streaming to work it's it's not reliable

2378
01:57:42,260 --> 01:57:49,119
and OBS doesn't support it natively so

2379
01:57:45,439 --> 01:57:49,118
I'm not gonna go down that route

2380
01:58:04,689 --> 01:58:09,460
are you concerned with compiled times at

2381
01:58:07,000 --> 01:58:15,369
all so far I saw see time reporting 2.7

2382
01:58:09,460 --> 01:58:18,939
seconds no that's plenty fine for me

2383
01:58:15,369 --> 01:58:21,930
that's 2.7 seconds is the optimized

2384
01:58:18,939 --> 01:58:25,329
build so if we switch to the debug build

2385
01:58:21,930 --> 01:58:28,390
it's only one point six four seconds so

2386
01:58:25,329 --> 01:58:28,869
I'm fine with those two as compiled

2387
01:58:28,390 --> 01:58:30,579
times

2388
01:58:28,869 --> 01:58:35,380
anything under 10 seconds I'm I'm

2389
01:58:30,579 --> 01:58:38,590
usually fine with I find anything over

2390
01:58:35,380 --> 01:58:39,940
10 seconds and I noticed the iteration I

2391
01:58:38,590 --> 01:58:42,300
I noticed that it like by the time I

2392
01:58:39,939 --> 01:58:44,229
switch here it's not ready to run yet

2393
01:58:42,300 --> 01:59:20,140
anything under 10 seconds I'm usually

2394
01:58:44,229 --> 01:59:23,889
fine no more questions

2395
01:59:20,140 --> 01:59:29,530
if there are no more questions then I

2396
01:59:23,890 --> 01:59:32,430
will end the stream for today for two

2397
01:59:29,529 --> 01:59:32,429
day

2398
01:59:38,989 --> 01:59:42,779
all right thank you everyone for joining

2399
01:59:41,399 --> 01:59:43,949
me for an episode of handmade hero it's

2400
01:59:42,779 --> 01:59:48,630
been a pleasure coding with you as

2401
01:59:43,949 --> 01:59:49,829
always if you would like to well you

2402
01:59:48,630 --> 01:59:51,630
know what I just realized that before I

2403
01:59:49,829 --> 01:59:53,159
do end it I don't know if there were

2404
01:59:51,630 --> 01:59:55,650
some questions on the YouTube one cuz

2405
01:59:53,159 --> 01:59:59,689
that would not have shown up did anyone

2406
01:59:55,649 --> 01:59:59,689
have questions on the YouTube chat I

2407
02:00:00,260 --> 02:00:05,150
don't see any Q colons on here

2408
02:00:24,899 --> 02:00:29,399
alright looks like now alright thank you

2409
02:00:27,510 --> 02:00:30,899
very much I kept aside of ham in here

2410
02:00:29,399 --> 02:00:32,969
that's Leonard's coach pleasure coding

2411
02:00:30,899 --> 02:00:34,019
with you as always if you want to follow

2412
02:00:32,969 --> 02:00:35,189
along series at home you can always

2413
02:00:34,019 --> 02:00:36,659
pre-order the game at handmade hero

2414
02:00:35,189 --> 02:00:38,820
organic comes with all the source code

2415
02:00:36,658 --> 02:00:40,618
so you can play around with it we also

2416
02:00:38,819 --> 02:00:42,029
have a schedule bot if you want to know

2417
02:00:40,618 --> 02:00:43,759
when we're gonna be live and the little

2418
02:00:42,029 --> 02:00:46,378
live Now button will tell you as well

2419
02:00:43,760 --> 02:00:47,519
periodically as soon as the schedule is

2420
02:00:46,378 --> 02:00:49,349
updated it will tell you how long it's

2421
02:00:47,519 --> 02:00:50,998
gonna be till we're up obviously once

2422
02:00:49,349 --> 02:00:52,469
we're done it will switch to nothing

2423
02:00:50,998 --> 02:00:54,179
scheduled until the next schedule gets

2424
02:00:52,469 --> 02:00:55,498
posted I also have an episode guide go

2425
02:00:54,179 --> 02:00:57,208
to watch I got past episode of the

2426
02:00:55,498 --> 02:01:01,918
series I'll contribute button if you

2427
02:00:57,208 --> 02:01:03,328
want to contribute to the sort of how

2428
02:01:01,918 --> 02:01:05,038
should I put it community projects like

2429
02:01:03,328 --> 02:01:06,958
the for coder editor we use on the

2430
02:01:05,038 --> 02:01:09,359
stream or the although I think that is

2431
02:01:06,958 --> 02:01:12,389
went to itch i/o now so it'd just be the

2432
02:01:09,359 --> 02:01:14,458
episode guide the hosting for the

2433
02:01:12,389 --> 02:01:16,590
handmade hero forums and the hammering

2434
02:01:14,458 --> 02:01:18,840
Network stuff all that sort of thing we

2435
02:01:16,590 --> 02:01:21,779
do to collect community contributions to

2436
02:01:18,840 --> 02:01:24,208
pay for those projects and we just give

2437
02:01:21,779 --> 02:01:27,268
out the money to the folks who are doing

2438
02:01:24,208 --> 02:01:29,279
them that's about it for today I do not

2439
02:01:27,269 --> 02:01:33,628
know if I will be back next week or not

2440
02:01:29,279 --> 02:01:35,158
because I may be out of town and away

2441
02:01:33,628 --> 02:01:36,418
from this computer on the days we would

2442
02:01:35,158 --> 02:01:37,948
have normally scheduled them I might try

2443
02:01:36,418 --> 02:01:38,189
to reschedule them for other times we'll

2444
02:01:37,948 --> 02:01:40,109
see

2445
02:01:38,189 --> 02:01:41,820
so no process on that but we will be

2446
02:01:40,109 --> 02:01:43,078
back the week afterwards regardless and

2447
02:01:41,819 --> 02:01:46,018
then we'll be regularly scheduled

2448
02:01:43,078 --> 02:01:47,340
broadcasting from then on out until then

2449
02:01:46,019 --> 02:01:48,628
have fun programming I'll see everyone

2450
02:01:47,340 --> 02:01:50,458
on the internet and we will try to

2451
02:01:48,628 --> 02:01:52,889
figure out what's going to go on with

2452
02:01:50,458 --> 02:01:54,359
our streaming setup in the future as

2453
02:01:52,889 --> 02:01:56,069
well since now we know that twitch is

2454
02:01:54,359 --> 02:01:57,779
not really reliable we'll probably have

2455
02:01:56,069 --> 02:01:59,878
to have something backup like this

2456
02:01:57,779 --> 02:02:00,898
YouTube situation so we'll play around

2457
02:01:59,878 --> 02:02:04,439
with that a little bit and see what we

2458
02:02:00,899 --> 02:02:07,939
can do that's it for now catch everybody

2459
02:02:04,439 --> 02:02:07,939
later and thanks for joining

