1
00:00:00,079 --> 00:00:03,929
hello everyone and welcome to hand made

2
00:00:02,459 --> 00:00:08,129
here oh sure we code a complete game

3
00:00:03,928 --> 00:00:14,339
live on stream we are going to do some I

4
00:00:08,130 --> 00:00:17,969
guess sort of file translation and slash

5
00:00:14,339 --> 00:00:21,028
testing today we want to get our game

6
00:00:17,969 --> 00:00:23,729
packages building from a text file spec

7
00:00:21,028 --> 00:00:27,570
that we have implemented and probably

8
00:00:23,730 --> 00:00:29,640
sort of mostly at this point parsed but

9
00:00:27,570 --> 00:00:30,719
we have some additional concerns we want

10
00:00:29,640 --> 00:00:32,579
to address here and I'm gonna go ahead

11
00:00:30,719 --> 00:00:35,399
and start addressing let me show you

12
00:00:32,579 --> 00:00:37,590
what I'm talking about for those of you

13
00:00:35,399 --> 00:00:38,429
who don't necessarily quite remember

14
00:00:37,590 --> 00:00:40,020
okay

15
00:00:38,429 --> 00:00:43,500
I don't know why I just loaded handmade

16
00:00:40,020 --> 00:00:45,870
array probably because I wasn't paying

17
00:00:43,500 --> 00:00:49,500
very close attention so let's go ahead

18
00:00:45,869 --> 00:00:51,419
and do our compiler our compile here and

19
00:00:49,500 --> 00:00:53,009
I'll show you what I'm talking about it

20
00:00:51,420 --> 00:00:54,420
looks like we left it in a compiling

21
00:00:53,009 --> 00:00:56,219
state although we weren't quite finished

22
00:00:54,420 --> 00:00:58,500
with one of the things so let's go ahead

23
00:00:56,219 --> 00:01:00,660
and jump in here so what we wanted to do

24
00:00:58,500 --> 00:01:04,019
is and what we've been working on for

25
00:01:00,659 --> 00:01:06,868
the past this past weekend and this

26
00:01:04,019 --> 00:01:09,359
weekend is we've got these hht files

27
00:01:06,868 --> 00:01:11,250
there in the handmade tags directory and

28
00:01:09,359 --> 00:01:12,510
you've got bass game 2 h-e-a-t and intro

29
00:01:11,250 --> 00:01:14,640
cutscene that it should see or the -

30
00:01:12,510 --> 00:01:16,170
once we defined can see in here there

31
00:01:14,640 --> 00:01:18,659
basis a text file format that just

32
00:01:16,170 --> 00:01:21,118
describes a packing list and all of the

33
00:01:18,659 --> 00:01:22,890
mark-up that we need for our files so it

34
00:01:21,118 --> 00:01:25,049
says for every given file that that

35
00:01:22,890 --> 00:01:26,728
artist may have provided us what the

36
00:01:25,049 --> 00:01:29,100
additional information that the artist

37
00:01:26,728 --> 00:01:31,590
didn't provide was and that's mainly the

38
00:01:29,099 --> 00:01:33,359
thing we need them for otherwise we

39
00:01:31,590 --> 00:01:35,390
could just take all the things in the

40
00:01:33,359 --> 00:01:38,250
directory and just gobble them up right

41
00:01:35,390 --> 00:01:40,259
so again we just really wanted some way

42
00:01:38,250 --> 00:01:41,549
of cleanly saying look there's tons of

43
00:01:40,259 --> 00:01:43,500
information that we're maybe gonna have

44
00:01:41,549 --> 00:01:45,090
to add here the very least there's tags

45
00:01:43,500 --> 00:01:46,769
but then there's also alignment points

46
00:01:45,090 --> 00:01:48,570
we need somewhere to store that this is

47
00:01:46,769 --> 00:01:50,429
where we're gonna store it and so we've

48
00:01:48,569 --> 00:01:53,239
got this this format here what we want

49
00:01:50,430 --> 00:01:56,040
to do is we want to be able to load this

50
00:01:53,239 --> 00:01:58,679
produce a result from it so we want to

51
00:01:56,040 --> 00:02:04,170
be able to like produce a packed game

52
00:01:58,680 --> 00:02:09,140
from it but then we also want to have a

53
00:02:04,170 --> 00:02:12,120
system for doing edits in the game and

54
00:02:09,139 --> 00:02:13,649
reflecting them back out so re saving

55
00:02:12,120 --> 00:02:18,060
those edits to the tech

56
00:02:13,650 --> 00:02:20,489
file not just our binary format we want

57
00:02:18,060 --> 00:02:22,019
them reflected in the binary format as

58
00:02:20,489 --> 00:02:23,819
well because we want them to have be

59
00:02:22,019 --> 00:02:26,969
live and like when we run we want them

60
00:02:23,818 --> 00:02:28,408
to just be there and we don't want have

61
00:02:26,969 --> 00:02:29,699
to rebuild our binary or something like

62
00:02:28,408 --> 00:02:31,590
that every time we make a small change

63
00:02:29,699 --> 00:02:33,060
so what we've got working now is good

64
00:02:31,590 --> 00:02:35,188
and we don't really want to fuss with it

65
00:02:33,060 --> 00:02:37,829
we just want to add this additional

66
00:02:35,188 --> 00:02:39,989
layer of having a text file backing

67
00:02:37,829 --> 00:02:43,439
store so that we know we can always

68
00:02:39,989 --> 00:02:45,509
rebuild the whole package with just PNG

69
00:02:43,438 --> 00:02:47,549
s in the text and not needing this

70
00:02:45,509 --> 00:02:49,408
special-purpose binary format that we're

71
00:02:47,549 --> 00:02:52,139
running with because it's just some

72
00:02:49,408 --> 00:02:53,608
hacky format we designed it's not you

73
00:02:52,139 --> 00:02:55,469
know the kind of thing that that's

74
00:02:53,609 --> 00:02:58,319
designed to be a standard file

75
00:02:55,469 --> 00:03:01,979
interchange format like PNG and text

76
00:02:58,318 --> 00:03:04,259
right again that's a decision we're

77
00:03:01,979 --> 00:03:05,759
making because we're a small game we're

78
00:03:04,259 --> 00:03:07,949
not like a huge city or something it's

79
00:03:05,759 --> 00:03:09,539
totally reasonable to do a big binary

80
00:03:07,949 --> 00:03:11,188
format that you're going to like to

81
00:03:09,539 --> 00:03:13,289
maintain and that's gonna be your format

82
00:03:11,188 --> 00:03:14,908
going forward you can do that it's just

83
00:03:13,289 --> 00:03:16,798
that's a bigger investment and it's

84
00:03:14,908 --> 00:03:19,649
probably not super appropriate for our

85
00:03:16,799 --> 00:03:21,120
particular scenario and like with

86
00:03:19,650 --> 00:03:23,129
anything else you've got to choose the

87
00:03:21,120 --> 00:03:26,579
thing that's appropriate for what you're

88
00:03:23,128 --> 00:03:28,620
doing at the given time so this seemed

89
00:03:26,579 --> 00:03:30,840
like the easiest way for us to get what

90
00:03:28,620 --> 00:03:34,079
we need and so that's what we're going

91
00:03:30,840 --> 00:03:37,019
to be working with now inside our actual

92
00:03:34,079 --> 00:03:40,079
code we're sort of in the middle of it

93
00:03:37,019 --> 00:03:42,359
here and we have this concept called

94
00:03:40,079 --> 00:03:44,459
parsed top-level block and that's really

95
00:03:42,359 --> 00:03:47,419
what we kind of need to work with now to

96
00:03:44,459 --> 00:03:50,699
make sure that this actually goes well

97
00:03:47,419 --> 00:03:52,709
also by the way just so you know I guess

98
00:03:50,699 --> 00:03:56,310
I didn't mention Molly is with us today

99
00:03:52,709 --> 00:03:59,310
hello Molly how are you doing it's a

100
00:03:56,310 --> 00:04:05,400
good good kitten yes you want to look

101
00:03:59,310 --> 00:04:06,840
out the window window she was sleeping

102
00:04:05,400 --> 00:04:08,310
so I had the window closed but I'm gonna

103
00:04:06,840 --> 00:04:12,239
go ahead and open the window in case she

104
00:04:08,310 --> 00:04:15,389
likes to watch the birds outside okay so

105
00:04:12,239 --> 00:04:17,310
when we go to parse top level block what

106
00:04:15,389 --> 00:04:19,109
we need to do is we need to have this

107
00:04:17,310 --> 00:04:21,538
code do two things that it's not doing

108
00:04:19,108 --> 00:04:24,089
right now the first one is we need to

109
00:04:21,538 --> 00:04:24,500
actually create that awareness that I'm

110
00:04:24,089 --> 00:04:26,929
talking

111
00:04:24,500 --> 00:04:31,399
about where the top level block parser

112
00:04:26,930 --> 00:04:34,250
is able to you know put data back into

113
00:04:31,399 --> 00:04:36,019
the text file or at least know when it

114
00:04:34,250 --> 00:04:37,970
needs to do that sort of an operation

115
00:04:36,019 --> 00:04:40,459
and then the other thing we need to do

116
00:04:37,970 --> 00:04:43,820
is actually implement the thing that is

117
00:04:40,459 --> 00:04:45,649
moving code from the text file when

118
00:04:43,819 --> 00:04:47,899
we're rewriting it into a new text file

119
00:04:45,649 --> 00:04:49,969
right because what we want to be able to

120
00:04:47,899 --> 00:04:53,359
do like I said before is do an export

121
00:04:49,970 --> 00:04:56,660
that basically rewrites the text file as

122
00:04:53,360 --> 00:05:00,740
it was so it's supposed to look roughly

123
00:04:56,660 --> 00:05:04,730
the same as when we you know you know in

124
00:05:00,740 --> 00:05:06,918
import it could be the first time but we

125
00:05:04,730 --> 00:05:11,150
want to add any changes that have been

126
00:05:06,918 --> 00:05:12,829
made so if you lo the hht you do some

127
00:05:11,149 --> 00:05:15,889
mucking about with the alignment points

128
00:05:12,829 --> 00:05:18,109
I then want to be able to insert those

129
00:05:15,889 --> 00:05:20,569
alignment points back in and so that's

130
00:05:18,110 --> 00:05:22,370
really what we're trying to do here and

131
00:05:20,569 --> 00:05:24,168
remember that's you know because if you

132
00:05:22,370 --> 00:05:27,319
if you jump back in here and take a look

133
00:05:24,168 --> 00:05:30,379
at the game running the way that we want

134
00:05:27,319 --> 00:05:32,870
to do this was we want to be able to you

135
00:05:30,379 --> 00:05:34,459
know have in this so you know if this is

136
00:05:32,870 --> 00:05:36,649
the game that's running we want to be

137
00:05:34,459 --> 00:05:38,418
able to switch to our editor here that

138
00:05:36,649 --> 00:05:40,099
can edit stuff like alignment points we

139
00:05:38,418 --> 00:05:42,829
want to be able to pick you know what

140
00:05:40,100 --> 00:05:44,990
we're looking at and grab you know any

141
00:05:42,829 --> 00:05:47,569
sort of information that we change here

142
00:05:44,990 --> 00:05:49,639
put it back to the text file so if we

143
00:05:47,569 --> 00:05:53,930
add like an alignment point like this

144
00:05:49,639 --> 00:05:55,639
right and we want that to be saved

145
00:05:53,930 --> 00:05:57,470
you know and we did pick you know what

146
00:05:55,639 --> 00:06:00,680
you know what it means whatever all that

147
00:05:57,470 --> 00:06:02,630
stuff we need that to be savable so then

148
00:06:00,680 --> 00:06:04,610
when we go back here and have our little

149
00:06:02,629 --> 00:06:08,079
Save or sit or import and save buttons

150
00:06:04,610 --> 00:06:10,699
right when we click that Save button

151
00:06:08,079 --> 00:06:12,889
that's when we want to write that new

152
00:06:10,699 --> 00:06:14,990
hht file now we know that the overwrite

153
00:06:12,889 --> 00:06:17,990
our old hht file we can make a new one

154
00:06:14,990 --> 00:06:19,009
and then the user could choose whether

155
00:06:17,990 --> 00:06:21,290
they want to keep it or not

156
00:06:19,009 --> 00:06:23,629
right so it also gives us an extra level

157
00:06:21,290 --> 00:06:26,419
of sort of like security there where we

158
00:06:23,629 --> 00:06:28,300
can create a new hht file and then the

159
00:06:26,418 --> 00:06:31,579
the user could like diff the two and

160
00:06:28,300 --> 00:06:33,918
verify that the changes that you made

161
00:06:31,579 --> 00:06:37,250
during edits actually were changes that

162
00:06:33,918 --> 00:06:37,500
they wanted right and that their that

163
00:06:37,250 --> 00:06:38,550
they

164
00:06:37,500 --> 00:06:39,779
didn't like make some changes they

165
00:06:38,550 --> 00:06:42,060
forgot about that they actually want to

166
00:06:39,779 --> 00:06:43,859
revert or whatever so it also can

167
00:06:42,060 --> 00:06:46,680
provide us with an extra layer of sort

168
00:06:43,860 --> 00:06:48,330
of assurance there that we didn't

169
00:06:46,680 --> 00:06:50,129
accidentally save an edit that we didn't

170
00:06:48,329 --> 00:06:53,069
mean to or things like that so there's a

171
00:06:50,129 --> 00:06:55,079
bunch of stuff we could do in that

172
00:06:53,069 --> 00:06:57,870
regard even if we save it over the

173
00:06:55,079 --> 00:06:59,939
existing file even that still provides

174
00:06:57,870 --> 00:07:01,290
us a layer of security which is that if

175
00:06:59,939 --> 00:07:03,240
we assume that we're checking these

176
00:07:01,290 --> 00:07:05,580
things into source code control at least

177
00:07:03,240 --> 00:07:07,259
daily then you at least can see the

178
00:07:05,579 --> 00:07:11,099
changes you made relative to like

179
00:07:07,259 --> 00:07:14,250
yesterday's you know hht or something

180
00:07:11,100 --> 00:07:16,200
like that right so I feel like that's

181
00:07:14,250 --> 00:07:17,490
you know an important thing to

182
00:07:16,199 --> 00:07:19,889
understand about the way this process is

183
00:07:17,490 --> 00:07:21,569
going to work okay so assuming that

184
00:07:19,889 --> 00:07:24,180
we're doing that when we're in here in

185
00:07:21,569 --> 00:07:25,980
parse top level block what we need to do

186
00:07:24,180 --> 00:07:28,769
is start by you know thinking about this

187
00:07:25,980 --> 00:07:30,569
copy all input up to an including we

188
00:07:28,769 --> 00:07:32,459
need that to be implemented and what

189
00:07:30,569 --> 00:07:35,099
that's gonna do is that's gonna take the

190
00:07:32,459 --> 00:07:36,810
existing text so as we sort of troll

191
00:07:35,100 --> 00:07:38,820
through this that's gonna take the

192
00:07:36,810 --> 00:07:40,589
existing text and move it from the old

193
00:07:38,819 --> 00:07:43,680
file to the new file right so it's gonna

194
00:07:40,589 --> 00:07:45,959
just copy text over as we confirm each

195
00:07:43,680 --> 00:07:49,439
line of text is okay we can just copy it

196
00:07:45,959 --> 00:07:51,120
over right and that's you know one thing

197
00:07:49,439 --> 00:07:52,709
we want to do the other thing we want to

198
00:07:51,120 --> 00:07:55,228
do is then when we come in here we need

199
00:07:52,709 --> 00:08:01,949
to have some understanding of when to

200
00:07:55,228 --> 00:08:03,899
add things that we saw that or sorry

201
00:08:01,949 --> 00:08:06,149
things that we didn't see that we have

202
00:08:03,899 --> 00:08:08,909
added or things like that that's

203
00:08:06,149 --> 00:08:11,909
something a place where we need to to

204
00:08:08,910 --> 00:08:14,640
add into the text file new things that

205
00:08:11,910 --> 00:08:19,860
maybe weren't specified in the text file

206
00:08:14,639 --> 00:08:22,740
at all right okay so let's take a look

207
00:08:19,860 --> 00:08:24,210
at how we might do this there's a couple

208
00:08:22,740 --> 00:08:25,978
of different things we can do here but

209
00:08:24,209 --> 00:08:28,259
if you take a look at the way this code

210
00:08:25,978 --> 00:08:29,969
is working what we're essentially doing

211
00:08:28,259 --> 00:08:32,038
is going over this parsing loop and

212
00:08:29,970 --> 00:08:33,719
every time we parse something what we're

213
00:08:32,038 --> 00:08:36,288
going to do is just copy it to the

214
00:08:33,719 --> 00:08:39,870
output you can see us doing that there

215
00:08:36,288 --> 00:08:42,929
at the moment you cannot edit tags hhas

216
00:08:39,870 --> 00:08:45,029
names descriptions or authors inside the

217
00:08:42,929 --> 00:08:47,549
game those are not things that we have

218
00:08:45,029 --> 00:08:49,708
an editor for so at least at the moment

219
00:08:47,549 --> 00:08:50,889
we don't actually have to do any work

220
00:08:49,708 --> 00:08:53,169
for those

221
00:08:50,889 --> 00:08:54,580
we can simply copy them that's the

222
00:08:53,169 --> 00:08:57,579
beginning and end of the work that we

223
00:08:54,580 --> 00:08:59,440
would have to do right however when we

224
00:08:57,580 --> 00:09:02,110
get to the alignment points the

225
00:08:59,440 --> 00:09:04,360
alignment points are not that way the

226
00:09:02,110 --> 00:09:06,610
alignment points actually do need that

227
00:09:04,360 --> 00:09:10,840
information they need to have something

228
00:09:06,610 --> 00:09:12,730
in there which tells them exactly which

229
00:09:10,840 --> 00:09:14,710
ones we should write and which ones we

230
00:09:12,730 --> 00:09:17,710
shouldn't so when we read in these

231
00:09:14,710 --> 00:09:21,460
alignment points we have two things we

232
00:09:17,710 --> 00:09:23,530
can do first of all we could look and

233
00:09:21,460 --> 00:09:25,750
see for any given alignment point does

234
00:09:23,529 --> 00:09:27,990
it match the one that we currently have

235
00:09:25,750 --> 00:09:32,799
and if it does copy that

236
00:09:27,990 --> 00:09:35,200
lying in right or we could just eat all

237
00:09:32,799 --> 00:09:36,759
the alignment point lines and always

238
00:09:35,200 --> 00:09:39,850
rewrite them with the ones that we have

239
00:09:36,759 --> 00:09:41,710
right in the case of rewriting if we're

240
00:09:39,850 --> 00:09:43,269
actually doing the import then we don't

241
00:09:41,710 --> 00:09:45,580
want to do that we want to overwrite our

242
00:09:43,269 --> 00:09:46,990
versions with the new versions right but

243
00:09:45,580 --> 00:09:49,840
assuming we're doing a save like

244
00:09:46,990 --> 00:09:51,669
assuming this is a save operation and so

245
00:09:49,840 --> 00:09:53,440
that's kind of difficult and the reason

246
00:09:51,669 --> 00:09:55,329
we might want to do it one way or the

247
00:09:53,440 --> 00:09:57,550
other way depends largely on how closely

248
00:09:55,330 --> 00:09:59,590
we're trying to mimic the input if we

249
00:09:57,549 --> 00:10:01,269
want to keep the exact thing that the

250
00:09:59,590 --> 00:10:04,750
user typed in in the case where it

251
00:10:01,269 --> 00:10:06,909
hasn't changed that's one kind of way

252
00:10:04,750 --> 00:10:09,460
that we might want this to go I'm going

253
00:10:06,909 --> 00:10:11,620
to try going the whole nine here you

254
00:10:09,460 --> 00:10:14,320
know I mean I don't pretend that this is

255
00:10:11,620 --> 00:10:17,799
necessarily a good idea but let's just

256
00:10:14,320 --> 00:10:19,900
see what happens if we work I'm gonna

257
00:10:17,799 --> 00:10:21,759
have a thing here called a line point

258
00:10:19,899 --> 00:10:25,209
written and I'm just gonna keep a

259
00:10:21,759 --> 00:10:27,669
boolean that's the exact same size as as

260
00:10:25,210 --> 00:10:29,560
this array of alignment points here

261
00:10:27,669 --> 00:10:32,319
right so I'm gonna I'm gonna keep that

262
00:10:29,559 --> 00:10:35,649
updated right and when we're doing our

263
00:10:32,320 --> 00:10:39,670
reads I'm going to remember whether or

264
00:10:35,649 --> 00:10:43,990
not we wrote one of these out or not

265
00:10:39,669 --> 00:10:46,059
right okay so that's one thing that we

266
00:10:43,990 --> 00:10:48,009
want to do and that will help me if I if

267
00:10:46,059 --> 00:10:50,589
I need to understand exactly what's

268
00:10:48,009 --> 00:10:52,389
going on there but as you can kind of

269
00:10:50,590 --> 00:10:53,050
see we still have a little bit more work

270
00:10:52,389 --> 00:10:55,029
to do

271
00:10:53,049 --> 00:10:58,539
before like reorganized routine a little

272
00:10:55,029 --> 00:11:01,449
bit around one particularly nefarious

273
00:10:58,539 --> 00:11:04,129
thing and what that is here in the

274
00:11:01,450 --> 00:11:08,000
alignment it's the first time that

275
00:11:04,129 --> 00:11:12,320
we have to actually specify a sublevel

276
00:11:08,000 --> 00:11:15,379
of of specificity for an import so if we

277
00:11:12,320 --> 00:11:17,300
import a body like the hero's body for

278
00:11:15,379 --> 00:11:19,879
example there's multiple frames in a

279
00:11:17,299 --> 00:11:21,859
single PNG it's got like you know a

280
00:11:19,879 --> 00:11:24,200
Dodge left maybe or it's got you know

281
00:11:21,860 --> 00:11:25,250
facing left facing up facing right you

282
00:11:24,200 --> 00:11:30,110
know it's got different angles of

283
00:11:25,250 --> 00:11:32,090
artwork baked into that one PNG file so

284
00:11:30,110 --> 00:11:34,310
what I think we want to do here is we'd

285
00:11:32,090 --> 00:11:36,830
like to sort of move past where we're at

286
00:11:34,309 --> 00:11:39,199
the moment where we have to sort of do

287
00:11:36,830 --> 00:11:42,170
all of that in one sort of baked pass

288
00:11:39,200 --> 00:11:46,390
what I'd like to do is I'd like to get

289
00:11:42,169 --> 00:11:50,689
the information about that sublevel of

290
00:11:46,389 --> 00:11:53,169
of how the block will actually get

291
00:11:50,690 --> 00:11:56,720
processed whether it's a body a head

292
00:11:53,169 --> 00:11:59,569
plate block I'd like to get that before

293
00:11:56,720 --> 00:12:02,210
we do our parsing now normally I just do

294
00:11:59,570 --> 00:12:05,000
it after like I was doing before but in

295
00:12:02,210 --> 00:12:09,889
this case the problem is I need to be

296
00:12:05,000 --> 00:12:12,440
able to rewrite those text lines as I

297
00:12:09,889 --> 00:12:14,029
see them because if I don't do that I

298
00:12:12,440 --> 00:12:16,700
can't preserve all the comments and

299
00:12:14,029 --> 00:12:18,470
stuff right and so that's really what's

300
00:12:16,700 --> 00:12:21,020
going on here so I want to be able to

301
00:12:18,470 --> 00:12:23,810
kind of do that part of it all right so

302
00:12:21,019 --> 00:12:26,779
let's let's try and mutate this code a

303
00:12:23,809 --> 00:12:29,209
few times and get a little further down

304
00:12:26,779 --> 00:12:31,370
that path so if you look at what's going

305
00:12:29,210 --> 00:12:33,320
on here you can see that a bunch of the

306
00:12:31,370 --> 00:12:35,990
things that we're doing like get our

307
00:12:33,320 --> 00:12:38,240
create asset source file those things

308
00:12:35,990 --> 00:12:41,440
could have been done earlier and they

309
00:12:38,240 --> 00:12:44,480
should be done earlier probably right

310
00:12:41,440 --> 00:12:46,820
and so what I want to be able to do is I

311
00:12:44,480 --> 00:12:49,759
want to be able to well I get you know

312
00:12:46,820 --> 00:12:54,740
what here's the thing there is one way

313
00:12:49,759 --> 00:12:56,569
that that might not be true this is

314
00:12:54,740 --> 00:13:01,810
tough so one reason that might not be

315
00:12:56,570 --> 00:13:08,290
true is if a particular if a particular

316
00:13:01,809 --> 00:13:12,649
asset can be targeted to a specific HHA

317
00:13:08,289 --> 00:13:14,629
that would would change it because then

318
00:13:12,649 --> 00:13:17,419
we really don't even know where we would

319
00:13:14,629 --> 00:13:22,759
look for this particular

320
00:13:17,419 --> 00:13:24,729
for this particular packing order which

321
00:13:22,759 --> 00:13:27,919
is not necessarily the end of the world

322
00:13:24,730 --> 00:13:30,409
I mean we could always pre-process it

323
00:13:27,919 --> 00:13:33,019
but here's I'm gonna say for our benefit

324
00:13:30,409 --> 00:13:38,360
I'm gonna go ahead and remove this I'm

325
00:13:33,019 --> 00:13:41,689
gonna say we don't have an HHA field so

326
00:13:38,360 --> 00:13:46,220
we'll just say that the text file and

327
00:13:41,690 --> 00:13:48,290
the HHA have to match right another way

328
00:13:46,220 --> 00:13:51,550
we could do it is just say that the HHA

329
00:13:48,289 --> 00:13:54,019
has to appear in some kind of

330
00:13:51,549 --> 00:13:56,589
system-wide way so you know it could

331
00:13:54,019 --> 00:13:58,699
have to appear at the top of this thing

332
00:13:56,590 --> 00:14:00,139
that's another way to do it but I think

333
00:13:58,700 --> 00:14:03,740
I'm gonna go with the simpler thing that

334
00:14:00,139 --> 00:14:11,659
just says the text file and the HHA have

335
00:14:03,740 --> 00:14:13,100
to be together maybe because that will

336
00:14:11,659 --> 00:14:14,419
just simplify our lives a little bit

337
00:14:13,100 --> 00:14:16,340
here and it will make it so that we

338
00:14:14,419 --> 00:14:18,439
always know that text and Agent J are

339
00:14:16,340 --> 00:14:19,879
paired and there isn't a lot of fine

340
00:14:18,440 --> 00:14:23,060
grain switching that could happen so

341
00:14:19,879 --> 00:14:24,649
let's just say that that's the case

342
00:14:23,059 --> 00:14:27,409
and assuming that's the case then what

343
00:14:24,649 --> 00:14:30,019
we can do is now pop up here and that'll

344
00:14:27,409 --> 00:14:33,649
also solve this problem for us in this

345
00:14:30,019 --> 00:14:36,980
case so for example what we can do is we

346
00:14:33,649 --> 00:14:41,779
can grab this pretty much everything

347
00:14:36,980 --> 00:14:44,240
down to here right and we can start to

348
00:14:41,779 --> 00:14:46,490
move it up so when we come through this

349
00:14:44,240 --> 00:14:49,970
particular part of the code where we do

350
00:14:46,490 --> 00:14:53,360
like you know this open brace once we

351
00:14:49,970 --> 00:14:55,129
have that open brace we can then do some

352
00:14:53,360 --> 00:14:56,870
work on this this is not really super

353
00:14:55,129 --> 00:14:58,490
necessary at this point so this is

354
00:14:56,870 --> 00:15:00,320
probably not something we actually want

355
00:14:58,490 --> 00:15:02,360
to do in fact I may want to keep that

356
00:15:00,320 --> 00:15:05,960
here but you know we at least want this

357
00:15:02,360 --> 00:15:08,620
right so what I probably want to do here

358
00:15:05,960 --> 00:15:11,269
is is put that is default you know down

359
00:15:08,620 --> 00:15:16,909
at a part where you know before we would

360
00:15:11,269 --> 00:15:19,610
actually be doing any kind of actual

361
00:15:16,909 --> 00:15:23,089
processing of the file so somewhere in

362
00:15:19,610 --> 00:15:25,159
here probably you know we'd also have

363
00:15:23,090 --> 00:15:26,570
have that so I'm gonna leave that part

364
00:15:25,159 --> 00:15:29,569
right there but what I want to do here

365
00:15:26,570 --> 00:15:31,340
say okay the temporary memory stuff you

366
00:15:29,570 --> 00:15:34,640
know that's actually something that we

367
00:15:31,340 --> 00:15:35,540
just have out here right we can do the

368
00:15:34,639 --> 00:15:37,970
beginning temper

369
00:15:35,539 --> 00:15:40,789
temporary memory part sort of at the

370
00:15:37,970 --> 00:15:42,440
beginning of the top of a block and I'll

371
00:15:40,789 --> 00:15:43,699
put the end temporary memory at the end

372
00:15:42,440 --> 00:15:46,340
of the block because there's not a lot

373
00:15:43,700 --> 00:15:48,980
of reason not to right so we'll just

374
00:15:46,340 --> 00:15:50,269
leave it like this and then as I come

375
00:15:48,980 --> 00:15:52,610
through here let's take a look at what

376
00:15:50,269 --> 00:15:55,250
we want to do so if this is not the

377
00:15:52,610 --> 00:15:56,509
default then what I'd like to do is acne

378
00:15:55,250 --> 00:15:58,370
I don't need this parse pieces cause

379
00:15:56,509 --> 00:16:00,019
actually happening in there I'd like to

380
00:15:58,370 --> 00:16:00,740
keep this part happening based of the

381
00:16:00,019 --> 00:16:03,079
way it is right now

382
00:16:00,740 --> 00:16:05,060
I want the HHA to be in there this is

383
00:16:03,080 --> 00:16:07,220
not gonna be in the fields part of

384
00:16:05,059 --> 00:16:10,329
things this is actually gonna be in the

385
00:16:07,220 --> 00:16:13,910
context now so this is like the HHA

386
00:16:10,330 --> 00:16:15,980
filename we're talking about here this

387
00:16:13,909 --> 00:16:18,409
will produce the full asset name we can

388
00:16:15,980 --> 00:16:20,360
then see if that file actually exists

389
00:16:18,409 --> 00:16:23,209
you know and assuming that it does we

390
00:16:20,360 --> 00:16:26,720
can then create a match for it right and

391
00:16:23,210 --> 00:16:30,440
if we get that match then we can do the

392
00:16:26,720 --> 00:16:32,540
the additional work here of testing to

393
00:16:30,440 --> 00:16:34,880
see whether it's been modified once we

394
00:16:32,539 --> 00:16:36,589
have that we can actually do our check

395
00:16:34,879 --> 00:16:37,789
to see if we want to do parse pieces

396
00:16:36,590 --> 00:16:42,710
that can happen right here

397
00:16:37,789 --> 00:16:45,019
and then we can proceed with this the

398
00:16:42,710 --> 00:16:47,990
rest of it later on so I think that's

399
00:16:45,019 --> 00:16:49,309
where I want to be at the start so I

400
00:16:47,990 --> 00:16:52,430
want something that looks kind of like

401
00:16:49,309 --> 00:16:55,579
this I probably want this to be here so

402
00:16:52,429 --> 00:16:58,129
this will be like an import type and

403
00:16:55,580 --> 00:17:02,840
that'll be like import none probably and

404
00:16:58,129 --> 00:17:05,359
we'll get that here like so and then we

405
00:17:02,840 --> 00:17:06,559
can we can kind of grab and we don't

406
00:17:05,359 --> 00:17:12,079
really want that we would probably want

407
00:17:06,559 --> 00:17:15,289
this right to happen outside so like

408
00:17:12,079 --> 00:17:17,119
this right so again just doing the first

409
00:17:15,289 --> 00:17:20,180
part of this we get all of that

410
00:17:17,119 --> 00:17:23,239
information up front so now we have like

411
00:17:20,180 --> 00:17:26,120
our tags array our import type and you

412
00:17:23,240 --> 00:17:27,799
know all that sort of stuff and the

413
00:17:26,119 --> 00:17:31,489
problem that we'll have there is the

414
00:17:27,799 --> 00:17:33,109
append tags that part is happening

415
00:17:31,490 --> 00:17:35,089
inside parse pieces again I'm gonna

416
00:17:33,109 --> 00:17:37,429
start to pull that out because it gets

417
00:17:35,089 --> 00:17:39,470
creating too much rigidity there for the

418
00:17:37,430 --> 00:17:42,620
way we want to do things so then we go

419
00:17:39,470 --> 00:17:44,089
through our parsing here ramp and

420
00:17:42,619 --> 00:17:44,569
remember I sort of got loaded in here

421
00:17:44,089 --> 00:17:46,339
this

422
00:17:44,569 --> 00:17:48,168
we're gonna do the the import type check

423
00:17:46,339 --> 00:17:49,638
so we're still gonna do that but anyway

424
00:17:48,169 --> 00:17:51,799
we come through here we're gonna do

425
00:17:49,638 --> 00:17:54,740
where we've got you know parsing of

426
00:17:51,798 --> 00:17:56,658
alignment points and so on and then we

427
00:17:54,740 --> 00:17:58,460
get when we get to the end here is when

428
00:17:56,659 --> 00:18:03,230
we're actually going to start doing some

429
00:17:58,460 --> 00:18:05,179
some more of this this work so we'll it

430
00:18:03,230 --> 00:18:07,190
reinstitute this check to make sure if

431
00:18:05,179 --> 00:18:08,899
we have errors so far then just don't

432
00:18:07,190 --> 00:18:12,019
bother doing any imports because we know

433
00:18:08,898 --> 00:18:14,569
that this was a busted text file right

434
00:18:12,019 --> 00:18:17,509
and so we don't want that occurring so

435
00:18:14,569 --> 00:18:19,250
here we have our import check assuming

436
00:18:17,509 --> 00:18:21,919
that we actually have an import that

437
00:18:19,250 --> 00:18:23,628
we're going to actually do then we can

438
00:18:21,919 --> 00:18:26,690
do the work of actually you know

439
00:18:23,628 --> 00:18:28,849
creating it right now this import type

440
00:18:26,690 --> 00:18:30,950
equals import type none part of things I

441
00:18:28,849 --> 00:18:33,319
guess what I want to say there too is

442
00:18:30,950 --> 00:18:35,778
that may be something that really should

443
00:18:33,319 --> 00:18:38,148
just create an error so when we come

444
00:18:35,778 --> 00:18:40,009
through here you know I think maybe we

445
00:18:38,148 --> 00:18:41,808
want to do and I guess one way to do

446
00:18:40,009 --> 00:18:45,829
that would be you know to keep it within

447
00:18:41,808 --> 00:18:47,690
this block well I guess we don't really

448
00:18:45,829 --> 00:18:50,359
do that we could just do it up here we

449
00:18:47,690 --> 00:18:53,840
could just say look when we create one

450
00:18:50,359 --> 00:18:56,479
of these things and we look and see if

451
00:18:53,839 --> 00:18:58,009
we've got the default or not right we

452
00:18:56,480 --> 00:19:00,048
could just say if it's not the default

453
00:18:58,009 --> 00:19:02,360
we're gonna go in here and do a parse

454
00:19:00,048 --> 00:19:05,000
pieces on the import type and right

455
00:19:02,359 --> 00:19:06,528
there if the import type doesn't come

456
00:19:05,000 --> 00:19:09,528
back with something valid so if it's

457
00:19:06,528 --> 00:19:12,500
none we will do an error so that we know

458
00:19:09,528 --> 00:19:14,628
on that block token report the error

459
00:19:12,500 --> 00:19:16,548
that we don't understand what this thing

460
00:19:14,628 --> 00:19:21,128
is supposed to be right look we just

461
00:19:16,548 --> 00:19:23,538
don't even know what it's supposed to be

462
00:19:21,128 --> 00:19:25,308
furthermore these things here should

463
00:19:23,538 --> 00:19:27,038
also have their errors associated with

464
00:19:25,308 --> 00:19:29,778
them I don't know if we had errors here

465
00:19:27,038 --> 00:19:32,119
yeah like we had unrecognized block type

466
00:19:29,778 --> 00:19:34,490
and file not found so we want to keep

467
00:19:32,119 --> 00:19:36,079
these errors we want to just move them

468
00:19:34,490 --> 00:19:38,240
to where they are now actually occurring

469
00:19:36,079 --> 00:19:40,579
so let me just grab those and bring them

470
00:19:38,240 --> 00:19:43,429
up here so again what we want to do is

471
00:19:40,579 --> 00:19:51,859
say in here unrecognized block type is

472
00:19:43,429 --> 00:19:55,100
going to be right here right and file

473
00:19:51,859 --> 00:19:57,028
info is going to be here right so we

474
00:19:55,099 --> 00:19:58,769
want something

475
00:19:57,028 --> 00:20:00,538
we want something looks sort of like

476
00:19:58,769 --> 00:20:03,388
this we're still not quite done you can

477
00:20:00,538 --> 00:20:04,949
see this file info file date stuff

478
00:20:03,388 --> 00:20:08,908
that's checking to see whether we need

479
00:20:04,949 --> 00:20:10,949
to re-import this I again that's sort of

480
00:20:08,909 --> 00:20:14,009
a thing that just says whether we need

481
00:20:10,949 --> 00:20:16,649
to re-import the PNG itself but it

482
00:20:14,009 --> 00:20:18,989
doesn't really tell us much else so

483
00:20:16,648 --> 00:20:21,058
that's actually something we're not

484
00:20:18,989 --> 00:20:24,058
going to be doing this way anymore

485
00:20:21,058 --> 00:20:26,189
it's just an out of date check and so

486
00:20:24,058 --> 00:20:28,078
what we really need now is this concept

487
00:20:26,189 --> 00:20:30,389
that do we need to rebuild the asset

488
00:20:28,078 --> 00:20:32,788
right so we can just say like look is

489
00:20:30,388 --> 00:20:33,808
this asset dirty or not you know is it

490
00:20:32,788 --> 00:20:35,219
something that needs to be rebuilt

491
00:20:33,808 --> 00:20:38,699
another way to say that would be like

492
00:20:35,219 --> 00:20:41,068
needs are rebuild right and so we can

493
00:20:38,699 --> 00:20:43,288
say here whether or not it needs to be

494
00:20:41,068 --> 00:20:45,928
rebuild or not and what we can do is say

495
00:20:43,288 --> 00:20:49,739
we default to the fact that it doesn't

496
00:20:45,929 --> 00:20:52,528
but in the case that these things don't

497
00:20:49,739 --> 00:20:54,629
match then it least needs a rebuild in

498
00:20:52,528 --> 00:20:57,028
that case so if someone changes the PNG

499
00:20:54,628 --> 00:20:58,918
but then we also need a way to rebuild

500
00:20:57,028 --> 00:21:04,378
it if other things don't match such as

501
00:20:58,919 --> 00:21:08,609
if you change the tags right now when

502
00:21:04,378 --> 00:21:10,978
we're actually looking at this we

503
00:21:08,608 --> 00:21:14,098
probably want to keep two states we

504
00:21:10,979 --> 00:21:18,929
probably want to say is the art dirty or

505
00:21:14,098 --> 00:21:20,608
just the the metadata right so we would

506
00:21:18,929 --> 00:21:24,929
need like a needs full rebuild and it

507
00:21:20,608 --> 00:21:26,999
needs meta rebuild in the case where the

508
00:21:24,929 --> 00:21:29,159
actual PNG is changed that's a full

509
00:21:26,999 --> 00:21:33,358
rebuild right we need to it reinforce

510
00:21:29,159 --> 00:21:35,729
the whole thing right but if this if

511
00:21:33,358 --> 00:21:37,888
it's if that's not the case right if we

512
00:21:35,729 --> 00:21:42,449
just have a situation you know what I

513
00:21:37,888 --> 00:21:46,398
could also can do this let's do it this

514
00:21:42,449 --> 00:21:46,399
way keep this a little cleaner here

515
00:21:47,210 --> 00:21:53,069
all right so now you can see this

516
00:21:51,450 --> 00:21:54,480
starting to come together

517
00:21:53,069 --> 00:21:56,519
the only issue we've got right now is

518
00:21:54,480 --> 00:21:59,009
the append tags here it's not actually

519
00:21:56,519 --> 00:22:01,528
something that we know yet and so we

520
00:21:59,009 --> 00:22:03,298
kind of need to put that down here and

521
00:22:01,528 --> 00:22:04,500
we need to stop passing it in so we need

522
00:22:03,298 --> 00:22:06,990
something that looks a little bit more

523
00:22:04,500 --> 00:22:08,808
like that and so we we kind of have to

524
00:22:06,990 --> 00:22:12,210
reverse the way in which we were doing

525
00:22:08,808 --> 00:22:13,918
some of that tag appending kind of work

526
00:22:12,210 --> 00:22:16,110
and so we'll take a look at how we're

527
00:22:13,919 --> 00:22:18,899
gonna do that a little bit later but you

528
00:22:16,109 --> 00:22:20,369
get the idea so in here we do our parse

529
00:22:18,898 --> 00:22:21,839
pieces this is the thing that will let

530
00:22:20,369 --> 00:22:25,079
us know exactly what everything was

531
00:22:21,839 --> 00:22:27,240
supposed to be and when we do get our

532
00:22:25,079 --> 00:22:29,398
create asset source file we can also now

533
00:22:27,240 --> 00:22:31,679
know what the tags were for any given

534
00:22:29,398 --> 00:22:33,298
thing so now we have some way that we

535
00:22:31,679 --> 00:22:34,620
can actually differentiate between these

536
00:22:33,298 --> 00:22:38,009
two things I started to think about them

537
00:22:34,619 --> 00:22:40,288
okay so now we get down to the actual

538
00:22:38,009 --> 00:22:41,819
parsing you can see here we've got our

539
00:22:40,288 --> 00:22:42,808
append text we'll fill that out later

540
00:22:41,819 --> 00:22:43,980
and that's the thing we're gonna have to

541
00:22:42,808 --> 00:22:45,418
reverse from the parse pieces because

542
00:22:43,980 --> 00:22:46,769
parse pieces would weld those two things

543
00:22:45,419 --> 00:22:50,250
together and that's not gonna work now

544
00:22:46,769 --> 00:22:52,859
so what we want to do here is just sort

545
00:22:50,250 --> 00:22:54,329
of now proof this routine so as we read

546
00:22:52,859 --> 00:22:56,788
through here again most of these things

547
00:22:54,329 --> 00:22:59,308
are fine because we're gonna get all of

548
00:22:56,788 --> 00:23:00,658
these fields and we're gonna parts get

549
00:22:59,308 --> 00:23:02,190
the tag list out and all that sort of

550
00:23:00,659 --> 00:23:04,559
stuff we're gonna parse the alignment

551
00:23:02,190 --> 00:23:06,509
points and any time we see an alignment

552
00:23:04,558 --> 00:23:08,428
point we also now have the option of

553
00:23:06,509 --> 00:23:09,808
updating it or not so we have the

554
00:23:08,429 --> 00:23:13,110
information we need so we'll look at how

555
00:23:09,808 --> 00:23:15,389
we're gonna do that in a minute but

556
00:23:13,109 --> 00:23:17,668
after we get done with all of that stuff

557
00:23:15,390 --> 00:23:20,340
and we see the final semicolon then we

558
00:23:17,669 --> 00:23:23,700
can actually look and say did everything

559
00:23:20,339 --> 00:23:25,678
work if it did work let's go ahead and

560
00:23:23,700 --> 00:23:27,659
assign the default fields if this was a

561
00:23:25,679 --> 00:23:30,360
default if not let's go ahead and

562
00:23:27,659 --> 00:23:32,789
process it as an actual art asset now

563
00:23:30,359 --> 00:23:35,129
this data for alignment points and

564
00:23:32,788 --> 00:23:36,269
alignment points written that obviously

565
00:23:35,130 --> 00:23:38,039
should go up here because that's

566
00:23:36,269 --> 00:23:41,069
happening as part of this parse so we

567
00:23:38,038 --> 00:23:43,169
want that up at the top there and in

568
00:23:41,069 --> 00:23:46,288
here this is where we actually do our

569
00:23:43,169 --> 00:23:48,179
updates now as you can see we've got

570
00:23:46,288 --> 00:23:49,500
different ways that we might want to do

571
00:23:48,179 --> 00:23:51,000
these updates and that's why I say we

572
00:23:49,500 --> 00:23:53,669
kind of want to break these processes

573
00:23:51,000 --> 00:23:55,380
apart a little bit rather than having

574
00:23:53,669 --> 00:23:57,000
the tags well and in there I think we

575
00:23:55,380 --> 00:24:00,419
want to do the tags as a separate kind

576
00:23:57,000 --> 00:24:03,778
of a write and the process tile imports

577
00:24:00,419 --> 00:24:05,879
all that stuff we need to start doing

578
00:24:03,778 --> 00:24:07,019
these as a little bit more striated

579
00:24:05,878 --> 00:24:09,868
right we need to kind of think about

580
00:24:07,019 --> 00:24:11,608
this a little bit more specifically so

581
00:24:09,868 --> 00:24:13,079
what we want to do is first say all

582
00:24:11,608 --> 00:24:15,329
right we need to break this into two

583
00:24:13,079 --> 00:24:18,898
parts we need to break it into one part

584
00:24:15,329 --> 00:24:21,118
that actually just takes the PNG and and

585
00:24:18,898 --> 00:24:22,949
get the data out and that's when we need

586
00:24:21,118 --> 00:24:25,470
it if we need to do a full rebuild right

587
00:24:22,950 --> 00:24:28,169
and then we need another part that says

588
00:24:25,470 --> 00:24:31,108
look if all we were doing is just

589
00:24:28,169 --> 00:24:32,989
updating the tags of this thing so we

590
00:24:31,108 --> 00:24:35,009
don't actually need to reread the PNG

591
00:24:32,989 --> 00:24:36,298
don't do that work because remember

592
00:24:35,009 --> 00:24:38,970
reading the PNG can be very expensive

593
00:24:36,298 --> 00:24:40,878
these are big high resolution files we

594
00:24:38,970 --> 00:24:43,558
actually do pressing on the pixels

595
00:24:40,878 --> 00:24:45,959
that's a lot heavier weight than just a

596
00:24:43,558 --> 00:24:48,358
simple update that says add this one tag

597
00:24:45,960 --> 00:24:50,460
so if we wanted to add a tag to like a

598
00:24:48,358 --> 00:24:52,439
hundred things we don't want to repress

599
00:24:50,460 --> 00:24:54,480
a hundred PNG s for no reason that's

600
00:24:52,440 --> 00:24:55,739
just dumb because we know which one

601
00:24:54,480 --> 00:25:00,628
we're doing we might as well do it

602
00:24:55,739 --> 00:25:02,308
correctly so if we need to do needs full

603
00:25:00,628 --> 00:25:04,019
rebuild then we're going to go through

604
00:25:02,308 --> 00:25:06,898
this whole situation where we actually

605
00:25:04,019 --> 00:25:09,028
do the entire update so we update the

606
00:25:06,898 --> 00:25:09,959
date and the checksum this contents and

607
00:25:09,028 --> 00:25:12,239
all that sort of stuff

608
00:25:09,960 --> 00:25:17,850
parse the PNG do what we need to do

609
00:25:12,239 --> 00:25:25,319
right and that part is the part that we

610
00:25:17,849 --> 00:25:26,908
actually need in terms of of doing the

611
00:25:25,319 --> 00:25:29,099
processing the multi tile import and all

612
00:25:26,909 --> 00:25:31,528
that sort of stuff the problem is as you

613
00:25:29,099 --> 00:25:34,199
can see that will also update things

614
00:25:31,528 --> 00:25:37,079
like tags fields and so on which we

615
00:25:34,200 --> 00:25:38,940
don't really actually need to do and so

616
00:25:37,079 --> 00:25:42,599
we kind of want to separate these two

617
00:25:38,940 --> 00:25:44,580
things out into like almost like a the

618
00:25:42,599 --> 00:25:46,888
import of the PNG and then like a

619
00:25:44,579 --> 00:25:48,960
stamping process which like goes through

620
00:25:46,888 --> 00:25:50,368
and then like updates the tags in

621
00:25:48,960 --> 00:25:53,909
anything that it would need to update

622
00:25:50,368 --> 00:25:55,499
the tags for and so as hairy as that is

623
00:25:53,909 --> 00:25:58,950
I think that is what we actually want to

624
00:25:55,499 --> 00:26:00,659
do and so although you know we got this

625
00:25:58,950 --> 00:26:02,429
HHA appended next that we stuck on the

626
00:26:00,659 --> 00:26:04,980
info I think we want to do now is kind

627
00:26:02,429 --> 00:26:07,769
of like say yeah sorry oops about that

628
00:26:04,980 --> 00:26:10,618
not really what we wanted to do take

629
00:26:07,769 --> 00:26:14,160
this info and the tags get that off of

630
00:26:10,618 --> 00:26:17,519
there right so that's not going to be

631
00:26:14,160 --> 00:26:24,360
on there anymore right this stuff is not

632
00:26:17,519 --> 00:26:26,129
gonna get past anymore and so what we're

633
00:26:24,359 --> 00:26:27,869
gonna do with the multi tile single tile

634
00:26:26,130 --> 00:26:32,040
and plate imports is we're just gonna

635
00:26:27,869 --> 00:26:36,959
that's just gonna import the it's

636
00:26:32,039 --> 00:26:39,599
strictly going to import the the image

637
00:26:36,960 --> 00:26:44,340
data and it's not gonna touch anything

638
00:26:39,599 --> 00:26:47,519
else right okay we still need this part

639
00:26:44,339 --> 00:26:51,149
the append HHA index the get or create

640
00:26:47,519 --> 00:26:52,829
by stem indexing sort of thing right and

641
00:26:51,150 --> 00:26:54,420
that getter create by stem part of

642
00:26:52,829 --> 00:26:57,569
things that's actually going to want to

643
00:26:54,420 --> 00:26:59,850
happen yeah in either case so if we need

644
00:26:57,569 --> 00:27:01,529
to do a full rebuild or if we need to do

645
00:26:59,849 --> 00:27:03,839
a partial rebuild but we're gonna want

646
00:27:01,529 --> 00:27:06,359
to do that and so what we can do here we

647
00:27:03,839 --> 00:27:08,250
just say look actually this info thing

648
00:27:06,359 --> 00:27:11,399
that's actually part of the partial

649
00:27:08,250 --> 00:27:16,920
rebuild so like if needs meto rebuild or

650
00:27:11,400 --> 00:27:19,380
whatever that can go down here let me

651
00:27:16,920 --> 00:27:20,880
just verify that I've got that that's

652
00:27:19,380 --> 00:27:21,960
the if needs full rebuild oh hey look my

653
00:27:20,880 --> 00:27:24,780
little scope thing even told me that

654
00:27:21,960 --> 00:27:28,380
right you can see right here if needs

655
00:27:24,779 --> 00:27:31,079
full rebuild anyway that goes into the

656
00:27:28,380 --> 00:27:33,630
the meta built part and what we want to

657
00:27:31,079 --> 00:27:35,429
do here is have this append HH 8 index

658
00:27:33,630 --> 00:27:37,770
that's actually just going to be

659
00:27:35,430 --> 00:27:40,410
something that we use to talk about as

660
00:27:37,769 --> 00:27:42,539
we flow through the system so I don't

661
00:27:40,410 --> 00:27:45,750
know if you want to pass the HH 8 index

662
00:27:42,539 --> 00:27:47,970
or not I suspect we probably just do so

663
00:27:45,750 --> 00:27:50,220
in here we're gonna replace that stuff

664
00:27:47,970 --> 00:27:52,799
with when it flows down the pipe is

665
00:27:50,220 --> 00:27:55,380
gonna actually just be here's the HH a

666
00:27:52,799 --> 00:28:00,509
to write this to go nuts we're not gonna

667
00:27:55,380 --> 00:28:02,940
talk about anything else right off we go

668
00:28:00,509 --> 00:28:04,920
so that's what I want to do here and

669
00:28:02,940 --> 00:28:08,370
again this is going to be the context

670
00:28:04,920 --> 00:28:10,460
HHO that we're talking about and so this

671
00:28:08,369 --> 00:28:14,099
is not going to be that at all

672
00:28:10,460 --> 00:28:16,200
this is going to be that to do oops I

673
00:28:14,099 --> 00:28:21,209
didn't cut and paste that to do there

674
00:28:16,200 --> 00:28:24,120
again um and so that's part one right

675
00:28:21,210 --> 00:28:27,299
part two is if we need a meta rebuild

676
00:28:24,119 --> 00:28:28,089
and the meta rebuild will happen if we

677
00:28:27,299 --> 00:28:30,730
do a full

678
00:28:28,089 --> 00:28:32,439
build as well so basically what we want

679
00:28:30,730 --> 00:28:33,849
to say is look if we need if you need a

680
00:28:32,440 --> 00:28:36,278
full rebuild we're gonna stamp things

681
00:28:33,849 --> 00:28:38,740
it's free - anyway you might as well and

682
00:28:36,278 --> 00:28:40,569
there might have been new tiles added

683
00:28:38,740 --> 00:28:42,370
because maybe someone filled in a grid

684
00:28:40,569 --> 00:28:46,119
square that they didn't previous do

685
00:28:42,369 --> 00:28:49,239
right the needs Metairie building needs

686
00:28:46,119 --> 00:28:51,219
full rebuild those two things regardless

687
00:28:49,240 --> 00:28:54,038
of which one gets set we're always going

688
00:28:51,220 --> 00:28:55,509
to re stamp so it's just a PNG part

689
00:28:54,038 --> 00:28:58,028
that's going to not happen in the case

690
00:28:55,509 --> 00:28:59,710
where we only need to update like tags

691
00:28:58,028 --> 00:29:02,769
or author information or something like

692
00:28:59,710 --> 00:29:04,870
that so what I want to do now is say

693
00:29:02,769 --> 00:29:07,329
okay in that case now we've got a thing

694
00:29:04,869 --> 00:29:09,668
that just says look we're gonna stamp or

695
00:29:07,329 --> 00:29:12,099
stemp I guess this case may be we're

696
00:29:09,669 --> 00:29:13,778
gonna stamp this thing so I'm gonna do

697
00:29:12,099 --> 00:29:17,459
the same thing I was doing before where

698
00:29:13,778 --> 00:29:21,490
I say look give me you know one of these

699
00:29:17,460 --> 00:29:23,590
indexes that I can use here and if you

700
00:29:21,490 --> 00:29:26,409
can't find it that's not good and we're

701
00:29:23,589 --> 00:29:29,678
gonna call that an error I'm not sure

702
00:29:26,409 --> 00:29:34,000
why I'm missing one of these but

703
00:29:29,679 --> 00:29:35,919
apparently I am and that's the if of is

704
00:29:34,000 --> 00:29:37,599
default so that one there is fine again

705
00:29:35,919 --> 00:29:38,860
check out those little scope guys I'm

706
00:29:37,599 --> 00:29:42,308
glad I added those they're actually very

707
00:29:38,859 --> 00:29:43,778
handy they tell me exactly what those

708
00:29:42,308 --> 00:29:44,950
things were I've got a better version of

709
00:29:43,778 --> 00:29:50,200
that that's coming down the pipe by the

710
00:29:44,950 --> 00:29:52,149
way oh my god I forgot to announce crap

711
00:29:50,200 --> 00:29:54,548
I forgot to announce next weekend his

712
00:29:52,148 --> 00:29:59,079
for coder Jam that was a mistake

713
00:29:54,548 --> 00:30:00,730
I regret not announcing that beginning

714
00:29:59,079 --> 00:30:03,519
the stream at the end of the stream I

715
00:30:00,730 --> 00:30:07,839
will talk more about that next weekend

716
00:30:03,519 --> 00:30:11,168
is for coder Jam and you're gonna want

717
00:30:07,839 --> 00:30:12,220
to be there for that so anyway I forgot

718
00:30:11,169 --> 00:30:15,159
to announce that I'll announce at the

719
00:30:12,220 --> 00:30:17,980
end of the stream because it's what's

720
00:30:15,159 --> 00:30:19,690
happening next weekend okay so when we

721
00:30:17,980 --> 00:30:21,700
get to here we want to stamp what we're

722
00:30:19,690 --> 00:30:23,830
talking about right and so the way that

723
00:30:21,700 --> 00:30:27,190
we're gonna do that is we've got the

724
00:30:23,829 --> 00:30:28,689
append HHA index right and we're gonna

725
00:30:27,190 --> 00:30:30,278
say we need to stamp this stuff with

726
00:30:28,690 --> 00:30:33,220
like the tags and all that sort of thing

727
00:30:30,278 --> 00:30:35,769
when we do our process multi tile import

728
00:30:33,220 --> 00:30:39,640
right that's going to give us sort of a

729
00:30:35,769 --> 00:30:41,798
set of images that are going to go into

730
00:30:39,640 --> 00:30:42,070
a particular you know place as we've

731
00:30:41,798 --> 00:30:45,639
sort

732
00:30:42,069 --> 00:30:49,960
cycle through them right and what we

733
00:30:45,640 --> 00:30:52,870
need to do is we need to in fact I guess

734
00:30:49,960 --> 00:30:55,440
why why do we not have the match should

735
00:30:52,869 --> 00:30:58,089
come down through here is there a reason

736
00:30:55,440 --> 00:31:03,120
no I'm looking as I'm wondering the the

737
00:30:58,089 --> 00:31:05,529
when we match when we do this match here

738
00:31:03,119 --> 00:31:06,969
are we not oh we are we are we're

739
00:31:05,529 --> 00:31:07,990
passing it good good you're a passing

740
00:31:06,970 --> 00:31:10,390
they match and because that's the thing

741
00:31:07,990 --> 00:31:14,490
we actually need we need that match so

742
00:31:10,390 --> 00:31:14,490
this right needs to be up here as well

743
00:31:15,210 --> 00:31:20,980
so that match is gonna tell us like

744
00:31:18,190 --> 00:31:22,840
where this stuff goes right and so what

745
00:31:20,980 --> 00:31:24,880
all we really need to pass when we're

746
00:31:22,839 --> 00:31:28,509
doing the stamping is saying look this

747
00:31:24,880 --> 00:31:32,680
match that we're talking about is is

748
00:31:28,509 --> 00:31:36,250
what we need to do that to know where

749
00:31:32,680 --> 00:31:38,130
all the assets were that we imported now

750
00:31:36,250 --> 00:31:44,400
I think about it was there a reason that

751
00:31:38,130 --> 00:31:44,400
itself doesn't have the HHA index in it

752
00:31:45,420 --> 00:31:51,720
so that's kind of interesting cuz yeah

753
00:31:48,039 --> 00:31:54,519
it doesn't so down asset source file

754
00:31:51,720 --> 00:32:03,190
that asset source file should really

755
00:31:54,519 --> 00:32:05,319
have its HHA found in there I want to

756
00:32:03,190 --> 00:32:08,170
say so I kind of feel like this this

757
00:32:05,319 --> 00:32:11,349
notion of of the asset source file kinda

758
00:32:08,170 --> 00:32:16,090
needs to be upgraded because it's going

759
00:32:11,349 --> 00:32:19,629
into a particular HH a and that

760
00:32:16,089 --> 00:32:21,819
knowledge is you know is important right

761
00:32:19,630 --> 00:32:24,010
and so I almost want to say this append

762
00:32:21,819 --> 00:32:28,210
HHA index what I think we really want to

763
00:32:24,009 --> 00:32:30,460
do here is say okay say that so it's

764
00:32:28,210 --> 00:32:36,990
like which one of which one of the files

765
00:32:30,460 --> 00:32:36,990
is this going into right you know

766
00:32:41,380 --> 00:32:56,480
this thing and you don't want to dangle

767
00:32:49,549 --> 00:32:58,000
a preposition so you know just make sure

768
00:32:56,480 --> 00:33:00,740
you don't dangle your prepositions kids

769
00:32:58,000 --> 00:33:04,480
so when we stamp it really that should

770
00:33:00,740 --> 00:33:04,480
be sufficient now that I think about it

771
00:33:04,490 --> 00:33:10,099
and when we acquire this match I think

772
00:33:07,460 --> 00:33:13,039
what we want to do is is actually then

773
00:33:10,099 --> 00:33:15,679
expand this notion a little bit more I

774
00:33:13,039 --> 00:33:17,509
like the way this is shaping up again

775
00:33:15,680 --> 00:33:19,910
you know when you work with code you

776
00:33:17,509 --> 00:33:21,619
start to see the the correct things

777
00:33:19,910 --> 00:33:24,320
emerge and it's always very satisfying

778
00:33:21,619 --> 00:33:26,929
in my opinion so when we create that

779
00:33:24,319 --> 00:33:29,990
match what we want to do is sort of at

780
00:33:26,930 --> 00:33:33,140
the at the outset here assuming that's

781
00:33:29,990 --> 00:33:36,589
not the default what we want to do is

782
00:33:33,140 --> 00:33:38,870
say let's get a create the HHA that

783
00:33:36,589 --> 00:33:42,740
we're going to use here and say let's

784
00:33:38,869 --> 00:33:45,289
find this one now if we get one back

785
00:33:42,740 --> 00:33:48,700
then we're in a good situation if we

786
00:33:45,289 --> 00:33:51,559
don't we're kind of in trouble right and

787
00:33:48,700 --> 00:33:53,539
so what we want to do there is say when

788
00:33:51,559 --> 00:33:54,919
we create one of when we get or create

789
00:33:53,539 --> 00:33:58,339
one of these hhas

790
00:33:54,920 --> 00:34:01,519
that we're going to use we want to then

791
00:33:58,339 --> 00:34:03,649
update the match and if we were told

792
00:34:01,519 --> 00:34:08,090
like because let's say a hypothesis what

793
00:34:03,650 --> 00:34:10,789
if we move what if we move one of our

794
00:34:08,090 --> 00:34:13,579
assets from one HHA to another right

795
00:34:10,789 --> 00:34:15,980
well when we get the asset source file

796
00:34:13,579 --> 00:34:20,168
and we look at which desk file index

797
00:34:15,980 --> 00:34:20,168
what which one it was coming from right

798
00:34:20,199 --> 00:34:26,418
that record needs to be checked as dirty

799
00:34:24,168 --> 00:34:28,730
as well because if it says it's going

800
00:34:26,418 --> 00:34:30,650
into file three but we're telling you it

801
00:34:28,730 --> 00:34:31,610
needs to be go into file five we need to

802
00:34:30,650 --> 00:34:33,889
do a reinforce

803
00:34:31,610 --> 00:34:36,470
right we have to do a full rebuild in

804
00:34:33,889 --> 00:34:39,129
that case so that's very important so

805
00:34:36,469 --> 00:34:45,649
actually you know I may even do that

806
00:34:39,130 --> 00:34:47,930
sort of up here where I say look as part

807
00:34:45,650 --> 00:34:50,269
of this process

808
00:34:47,929 --> 00:34:54,379
I'm gonna do a check and I'm gonna

809
00:34:50,269 --> 00:35:02,900
create this HHA here to say where this

810
00:34:54,380 --> 00:35:04,610
thing is gonna go into right and that

811
00:35:02,900 --> 00:35:11,869
will help me determine what I need to

812
00:35:04,610 --> 00:35:17,480
know um you know what I think and I

813
00:35:11,869 --> 00:35:22,039
think I may have been premature looking

814
00:35:17,480 --> 00:35:27,949
at the way this code is working out it

815
00:35:22,039 --> 00:35:30,920
looks like you can still specify the HHA

816
00:35:27,949 --> 00:35:40,219
per thing possibly well not really

817
00:35:30,920 --> 00:35:43,070
because of this so I guess that means

818
00:35:40,219 --> 00:35:46,159
now that I say it you don't ever move

819
00:35:43,070 --> 00:35:49,010
between two of those things you can't

820
00:35:46,159 --> 00:35:52,940
really move one because since the path

821
00:35:49,010 --> 00:36:01,550
is fixed the path is always supposed to

822
00:35:52,940 --> 00:36:05,059
be underneath the HHA you if you moved

823
00:36:01,550 --> 00:36:07,970
one you wouldn't find the original one

824
00:36:05,059 --> 00:36:11,960
you wouldn't see it so we really don't

825
00:36:07,969 --> 00:36:13,250
need to do what I was saying I'm gonna

826
00:36:11,960 --> 00:36:14,960
leave it in here because it's an easy

827
00:36:13,250 --> 00:36:16,309
enough effort to do but it's not as

828
00:36:14,960 --> 00:36:17,570
necessary as I thought it was it's not

829
00:36:16,309 --> 00:36:20,239
really gonna do anything

830
00:36:17,570 --> 00:36:22,670
so assuming we've got an eight append HH

831
00:36:20,239 --> 00:36:26,379
any index what I'm gonna do here is say

832
00:36:22,670 --> 00:36:26,380
we've got a match right

833
00:36:27,289 --> 00:36:29,960
so assuming we've got a Matt and you

834
00:36:28,610 --> 00:36:32,210
know what I can really just check is

835
00:36:29,960 --> 00:36:34,070
match because match will only get set in

836
00:36:32,210 --> 00:36:35,750
the case where it's not the default so

837
00:36:34,070 --> 00:36:37,250
match is really a thing that tells us

838
00:36:35,750 --> 00:36:39,320
that anyway

839
00:36:37,250 --> 00:36:44,150
in fact in here we could do the same

840
00:36:39,320 --> 00:36:46,519
thing well you know right we can just

841
00:36:44,150 --> 00:36:49,250
look and see if match is valid it is not

842
00:36:46,519 --> 00:36:51,380
valid we don't need to proceed so that's

843
00:36:49,250 --> 00:36:54,409
fine and all I need to do here is say

844
00:36:51,380 --> 00:36:57,530
look whatever match we got look at the

845
00:36:54,409 --> 00:37:00,230
desk file index right whatever that

846
00:36:57,530 --> 00:37:01,500
desperatly next is if the append HHA

847
00:37:00,230 --> 00:37:03,630
index

848
00:37:01,500 --> 00:37:06,690
is different so if these are not the

849
00:37:03,630 --> 00:37:09,780
same then we need to update that oops

850
00:37:06,690 --> 00:37:11,990
that's supposed to be index not name by

851
00:37:09,780 --> 00:37:11,990
the way

852
00:37:14,900 --> 00:37:20,460
so in the case where desk Val index

853
00:37:17,519 --> 00:37:21,989
equals the append HHA index we don't

854
00:37:20,460 --> 00:37:24,780
have to do anything but in this case we

855
00:37:21,989 --> 00:37:27,119
do and again just to support moving

856
00:37:24,780 --> 00:37:29,100
assets which really can't happen I guess

857
00:37:27,119 --> 00:37:31,500
but if for some reason we change this

858
00:37:29,099 --> 00:37:33,239
pathway I want to needs full rebuild can

859
00:37:31,500 --> 00:37:35,489
just get set to true here so we know

860
00:37:33,239 --> 00:37:37,319
that that was a change that we now need

861
00:37:35,489 --> 00:37:39,000
to record right so we need to do a

862
00:37:37,320 --> 00:37:42,120
reinforce we're going to a different

863
00:37:39,000 --> 00:37:43,679
target than we were before so that's

864
00:37:42,119 --> 00:37:48,059
fine you know I don't see a lot of

865
00:37:43,679 --> 00:37:51,690
problem with that honestly it's okay um

866
00:37:48,059 --> 00:37:53,579
and so this right here will get that HHA

867
00:37:51,690 --> 00:37:55,260
index for us and that tells us what's

868
00:37:53,579 --> 00:37:56,940
going on with the match that means that

869
00:37:55,260 --> 00:38:00,410
later on we don't need to do that

870
00:37:56,940 --> 00:38:03,840
anymore and so if we just go ahead and

871
00:38:00,409 --> 00:38:04,980
vaporize this part of things wreck and

872
00:38:03,840 --> 00:38:07,740
that we're still doing that check up

873
00:38:04,980 --> 00:38:09,329
here so we're still doing that that

874
00:38:07,739 --> 00:38:12,119
means that can be eliminated from these

875
00:38:09,329 --> 00:38:14,250
paths and so rather than passing an HHA

876
00:38:12,119 --> 00:38:15,359
index the match actually has that in

877
00:38:14,250 --> 00:38:16,320
there which is what it should have done

878
00:38:15,360 --> 00:38:22,070
in the first place

879
00:38:16,320 --> 00:38:27,150
and then you know off you go right now

880
00:38:22,070 --> 00:38:30,210
hmm and again I could make base name

881
00:38:27,150 --> 00:38:32,010
match on just the PNG name and then you

882
00:38:30,210 --> 00:38:34,800
could move one thing from another and it

883
00:38:32,010 --> 00:38:36,450
would would retain its data I don't want

884
00:38:34,800 --> 00:38:37,950
to do that the reason I don't want to do

885
00:38:36,449 --> 00:38:40,139
that is I'd like to support multiple

886
00:38:37,949 --> 00:38:42,569
people making multiple hhas that have

887
00:38:40,139 --> 00:38:43,920
the same named files in them because

888
00:38:42,570 --> 00:38:47,309
they might have been made by two

889
00:38:43,920 --> 00:38:49,559
different people have no idea what the

890
00:38:47,309 --> 00:38:52,289
other person was naming their files so

891
00:38:49,559 --> 00:38:54,090
as long as there are different hhas so

892
00:38:52,289 --> 00:38:56,070
as long as you pick a unique name for

893
00:38:54,090 --> 00:38:58,920
your distributable HHA you don't worry

894
00:38:56,070 --> 00:39:01,380
about the conflict that that is the more

895
00:38:58,920 --> 00:39:06,840
important part of this right so that's

896
00:39:01,380 --> 00:39:10,920
that's why don't want to push it there I

897
00:39:06,840 --> 00:39:12,960
want to I want to leave that you being

898
00:39:10,920 --> 00:39:15,389
unique based on the hhx that I think is

899
00:39:12,960 --> 00:39:17,278
important so yeah

900
00:39:15,389 --> 00:39:19,618
like I said moving on if we do a stamp

901
00:39:17,278 --> 00:39:21,900
of these and I want to pass down the

902
00:39:19,619 --> 00:39:25,470
assets here again now's our chance to

903
00:39:21,900 --> 00:39:27,720
fix this import info nonsense we've got

904
00:39:25,469 --> 00:39:32,788
the hht fields and that's good I'm gonna

905
00:39:27,719 --> 00:39:35,189
go ahead and put that this in here like

906
00:39:32,789 --> 00:39:37,440
so and that can actually be potentially

907
00:39:35,190 --> 00:39:39,750
an index as well so when we see the HSA

908
00:39:37,440 --> 00:39:41,369
we could actually set the index there if

909
00:39:39,750 --> 00:39:43,949
we want to because this is actually

910
00:39:41,369 --> 00:39:45,690
gonna be set as the index so we can

911
00:39:43,949 --> 00:39:48,598
actually pull that part out and I should

912
00:39:45,690 --> 00:39:51,088
we should we should just do that um so

913
00:39:48,599 --> 00:39:53,640
here in the hht fields that name off

914
00:39:51,088 --> 00:39:55,798
your description that's actually what we

915
00:39:53,639 --> 00:39:57,268
needed in in terms of the import source

916
00:39:55,798 --> 00:39:59,309
info you can see it's exactly the same

917
00:39:57,268 --> 00:40:02,939
thing so what I'm going to do there is

918
00:39:59,309 --> 00:40:05,519
just call this hht fields for now and

919
00:40:02,940 --> 00:40:07,108
we're gonna pass that directly so

920
00:40:05,518 --> 00:40:09,088
instead of having to do this nonsense

921
00:40:07,108 --> 00:40:11,190
we're just gonna pass fields down to the

922
00:40:09,088 --> 00:40:13,108
stamping function we're gonna delete

923
00:40:11,190 --> 00:40:19,318
this and that again really simplifies

924
00:40:13,108 --> 00:40:22,528
that process so stamp asset that's gonna

925
00:40:19,318 --> 00:40:24,778
go or go through all the assets in this

926
00:40:22,528 --> 00:40:26,518
match and stamp them with the the values

927
00:40:24,778 --> 00:40:29,880
in the fields it's also going to need

928
00:40:26,518 --> 00:40:33,298
that tag array so it's gonna need the

929
00:40:29,880 --> 00:40:41,789
information that's coming out of this so

930
00:40:33,298 --> 00:40:44,278
this right here that tag set that's

931
00:40:41,789 --> 00:40:46,619
gonna have to be in there as well and so

932
00:40:44,278 --> 00:40:49,289
if you look at what's going on here we

933
00:40:46,619 --> 00:40:50,608
want to pass that address once we hand

934
00:40:49,289 --> 00:40:52,200
those are the stamp assets it should be

935
00:40:50,608 --> 00:40:55,348
pretty straightforward for it to do that

936
00:40:52,199 --> 00:40:57,268
asset stamping that'll be good and then

937
00:40:55,349 --> 00:40:58,650
we've got a much cleaner import process

938
00:40:57,268 --> 00:41:01,139
here right so this is the part that

939
00:40:58,650 --> 00:41:02,880
actually processes the image data and

940
00:41:01,139 --> 00:41:06,568
that's great this is the part that

941
00:41:02,880 --> 00:41:08,940
actually does the the metadata and

942
00:41:06,568 --> 00:41:11,548
that's great and so this should all flow

943
00:41:08,940 --> 00:41:21,450
pretty cleanly now like that's pretty

944
00:41:11,548 --> 00:41:24,170
reasonable I don't know why that's a

945
00:41:21,449 --> 00:41:24,169
to-do

946
00:41:27,570 --> 00:41:32,380
- completely honest if you've not sure

947
00:41:29,800 --> 00:41:35,469
right that's it to do

948
00:41:32,380 --> 00:41:35,469
[Music]

949
00:41:39,809 --> 00:41:44,570
I got nothing

950
00:41:47,659 --> 00:41:54,119
that seems like just a note if somebody

951
00:41:52,019 --> 00:41:55,679
wants to go back to when we if you look

952
00:41:54,119 --> 00:41:57,960
at the github it'll tell us when we do I

953
00:41:55,679 --> 00:42:00,750
if there was an actual reason why that

954
00:41:57,960 --> 00:42:04,019
was it knew it it doesn't have an actual

955
00:42:00,750 --> 00:42:06,539
to do like that's just what you want to

956
00:42:04,019 --> 00:42:08,429
do right update it first because we then

957
00:42:06,539 --> 00:42:10,800
pack the assets and since we're

958
00:42:08,429 --> 00:42:14,609
reloading the PNG we want to stamp the

959
00:42:10,800 --> 00:42:21,110
date for and check some of the of the

960
00:42:14,610 --> 00:42:32,539
PNG right I mean that's just kind of

961
00:42:21,110 --> 00:42:32,539
obvious I don't know what else to say

962
00:42:33,590 --> 00:42:38,730
yeah I got nothing

963
00:42:35,489 --> 00:42:41,039
so yeah if we do the checksum the file

964
00:42:38,730 --> 00:42:42,570
date stuff then you know we're good to

965
00:42:41,039 --> 00:42:46,110
go and we've we've reprocessed

966
00:42:42,570 --> 00:42:48,210
everything and that's all fine so I

967
00:42:46,110 --> 00:42:49,380
think this is all reasonable and again

968
00:42:48,210 --> 00:42:50,789
we just have to actually implement that

969
00:42:49,380 --> 00:42:54,269
stamp assets function but that's a

970
00:42:50,789 --> 00:42:55,800
pretty good learning scheme there um and

971
00:42:54,269 --> 00:42:58,679
so now let's just go back and say okay

972
00:42:55,800 --> 00:43:00,780
that HHA part of things let's actually

973
00:42:58,679 --> 00:43:03,149
make that work a little more properly so

974
00:43:00,780 --> 00:43:06,750
you know in here where we actually do

975
00:43:03,150 --> 00:43:08,539
this part this can actually be done a

976
00:43:06,750 --> 00:43:11,579
little even a little bit further down

977
00:43:08,539 --> 00:43:14,159
which is to say now we can actually do

978
00:43:11,579 --> 00:43:15,989
that right here where we update that

979
00:43:14,159 --> 00:43:18,420
right at the beginning this part of

980
00:43:15,989 --> 00:43:21,059
things will move into the outer code

981
00:43:18,420 --> 00:43:23,250
because when we actually do a parse of

982
00:43:21,059 --> 00:43:26,579
the h HT itself and we build that

983
00:43:23,250 --> 00:43:30,360
context that actually is the part that's

984
00:43:26,579 --> 00:43:33,059
going to want to know what the HHA is

985
00:43:30,360 --> 00:43:36,650
and we could make that be like a top

986
00:43:33,059 --> 00:43:39,150
line directive or something like that

987
00:43:36,650 --> 00:43:41,220
and we could even make that be something

988
00:43:39,150 --> 00:43:42,599
that you can actually change inside an

989
00:43:41,219 --> 00:43:46,259
HT if you want to you just can't change

990
00:43:42,599 --> 00:43:47,759
it inside a block right so we could if

991
00:43:46,260 --> 00:43:52,820
you wanted to do is do something like

992
00:43:47,760 --> 00:43:52,820
this where we say like HHA

993
00:43:53,400 --> 00:43:59,579
I don't know like I don't know what we

994
00:43:58,139 --> 00:44:02,269
would say exactly but you know we could

995
00:43:59,579 --> 00:44:02,269
say something like

996
00:44:13,019 --> 00:44:34,349
I don't know I have no idea but we could

997
00:44:33,059 --> 00:44:36,659
do something like that if we wanted to

998
00:44:34,349 --> 00:44:38,159
and then you know you could still feel

999
00:44:36,659 --> 00:44:43,409
free to make some kind of thing that

1000
00:44:38,159 --> 00:44:48,690
packs two multiple of these I I just I

1001
00:44:43,409 --> 00:44:50,789
don't know but you know why not my

1002
00:44:48,690 --> 00:44:52,619
excuse for everything that we ever do is

1003
00:44:50,789 --> 00:44:56,519
just as an educational stream so I don't

1004
00:44:52,619 --> 00:44:58,019
really have to make great decisions as

1005
00:44:56,519 --> 00:45:03,210
long as I'm showing something useful

1006
00:44:58,019 --> 00:45:06,030
that you might take and use yourself off

1007
00:45:03,210 --> 00:45:07,289
we go right so I can if I want to just

1008
00:45:06,030 --> 00:45:08,730
add like what is essentially a

1009
00:45:07,289 --> 00:45:14,099
preprocessor directive here that says

1010
00:45:08,730 --> 00:45:17,820
you know there's a pounds and and if in

1011
00:45:14,099 --> 00:45:19,799
here we said that sometimes you know we

1012
00:45:17,820 --> 00:45:21,510
go going back and looking at what we

1013
00:45:19,800 --> 00:45:22,980
said here you know the string comes

1014
00:45:21,510 --> 00:45:25,770
after it so if we come through here and

1015
00:45:22,980 --> 00:45:27,599
say look you know if the token type that

1016
00:45:25,769 --> 00:45:29,579
we see on the outside is a pound it's

1017
00:45:27,599 --> 00:45:35,670
like a preprocessor directive of some

1018
00:45:29,579 --> 00:45:37,829
kind and we're gonna Jimmy we're gonna

1019
00:45:35,670 --> 00:45:39,960
use that right and so this is a

1020
00:45:37,829 --> 00:45:42,090
preprocessor directive we get the

1021
00:45:39,960 --> 00:45:47,159
directive that we want so we just say

1022
00:45:42,090 --> 00:45:53,030
here's the directive get token and we

1023
00:45:47,159 --> 00:45:56,489
can then look at the directive like so

1024
00:45:53,030 --> 00:45:59,640
and we could even you know we could even

1025
00:45:56,489 --> 00:46:01,769
have multiple of these directives if we

1026
00:45:59,639 --> 00:46:05,670
want to so for example we could even

1027
00:46:01,769 --> 00:46:12,358
support a pound include right and we

1028
00:46:05,670 --> 00:46:13,740
could support a HHA so that seems cool

1029
00:46:12,358 --> 00:46:16,319
right I mean I don't know

1030
00:46:13,739 --> 00:46:17,819
doesn't seem horrible to me I also don't

1031
00:46:16,320 --> 00:46:21,480
know why we have to break here because

1032
00:46:17,820 --> 00:46:25,200
this will break automatically so that's

1033
00:46:21,480 --> 00:46:26,579
kind of dumb but anyway so when we're

1034
00:46:25,199 --> 00:46:29,519
going through here what

1035
00:46:26,579 --> 00:46:36,630
could do here is like this is just an

1036
00:46:29,519 --> 00:46:41,699
unrecognized directive here our

1037
00:46:36,630 --> 00:46:44,280
directives can Molly Molly has an

1038
00:46:41,699 --> 00:46:48,210
automated feeder that goes off regularly

1039
00:46:44,280 --> 00:46:52,350
throughout the day and so that she

1040
00:46:48,210 --> 00:46:55,500
always like basically like she gets wet

1041
00:46:52,349 --> 00:46:56,849
food once a day but she also has like a

1042
00:46:55,500 --> 00:46:59,519
little automated feeder that will just

1043
00:46:56,849 --> 00:47:01,380
put out dry food for her so it's kind of

1044
00:46:59,519 --> 00:47:06,989
like a thing that she always knows is

1045
00:47:01,380 --> 00:47:11,190
reliable and you know if no Wooden's to

1046
00:47:06,989 --> 00:47:13,019
hear defeat her will still go off so she

1047
00:47:11,190 --> 00:47:16,500
can have meals at her regular times

1048
00:47:13,019 --> 00:47:18,269
right and so when you hear it go off

1049
00:47:16,500 --> 00:47:20,400
she's always a little bit early I think

1050
00:47:18,269 --> 00:47:24,000
she can hear like a little bit better

1051
00:47:20,400 --> 00:47:27,180
than we can and so as soon as the thing

1052
00:47:24,000 --> 00:47:29,610
starts to go off she's off to get food

1053
00:47:27,179 --> 00:47:32,129
so that's where Molly went I don't know

1054
00:47:29,610 --> 00:47:33,900
if she'll come back she might want to do

1055
00:47:32,130 --> 00:47:40,200
some exploring and you know walk her

1056
00:47:33,900 --> 00:47:42,030
route but that's where she went okay so

1057
00:47:40,199 --> 00:47:46,980
if we have an include directive again we

1058
00:47:42,030 --> 00:47:50,760
could just include a file here and you

1059
00:47:46,980 --> 00:47:52,260
know to do processing food and then the

1060
00:47:50,760 --> 00:47:53,940
HHA again is just going to set that

1061
00:47:52,260 --> 00:47:57,870
target and so that's really just this

1062
00:47:53,940 --> 00:48:00,450
thing and so anytime we see one of those

1063
00:47:57,869 --> 00:48:02,849
we're going to want to do this and

1064
00:48:00,449 --> 00:48:08,699
inside here where we've got sort of the

1065
00:48:02,849 --> 00:48:11,969
context HHA index we're going to set

1066
00:48:08,699 --> 00:48:14,399
that to zero and what we want to do is

1067
00:48:11,969 --> 00:48:17,179
say look you're not allowed to have a

1068
00:48:14,400 --> 00:48:20,910
block that doesn't have an HHA assigned

1069
00:48:17,179 --> 00:48:24,980
and so what we're gonna do in here is

1070
00:48:20,909 --> 00:48:28,710
just say if we see a top-level block

1071
00:48:24,980 --> 00:48:30,630
there had better be an HHA index so

1072
00:48:28,710 --> 00:48:35,730
we'll only actually gonna go down that

1073
00:48:30,630 --> 00:48:38,309
route if if we see one of those so if we

1074
00:48:35,730 --> 00:48:39,240
haven't seen one yet then we'll just say

1075
00:48:38,309 --> 00:48:42,110
hey

1076
00:48:39,239 --> 00:48:49,079
yeah also by the way this should be

1077
00:48:42,110 --> 00:48:51,990
effective here's our token type equals

1078
00:48:49,079 --> 00:49:01,319
in a fire that means we need to have an

1079
00:48:51,989 --> 00:49:03,269
HSA if we did great if we didn't I don't

1080
00:49:01,320 --> 00:49:07,650
know what to call this import blocks are

1081
00:49:03,269 --> 00:49:12,900
not allowed to appear before at least

1082
00:49:07,650 --> 00:49:16,680
one HHA directive how's that for a

1083
00:49:12,900 --> 00:49:18,329
cryptic error message all right so you

1084
00:49:16,679 --> 00:49:20,129
know we'll we'll just fault on that and

1085
00:49:18,329 --> 00:49:21,869
say yeah we're not gonna process art

1086
00:49:20,130 --> 00:49:24,059
assets if you don't actually specify an

1087
00:49:21,869 --> 00:49:25,110
HHA in the packing list we come through

1088
00:49:24,059 --> 00:49:27,539
here me say all right we're gonna get

1089
00:49:25,110 --> 00:49:29,880
that HHA we'll find out what the heck's

1090
00:49:27,539 --> 00:49:33,539
going on there right and so let's get

1091
00:49:29,880 --> 00:49:37,140
our let's get our actual one that when

1092
00:49:33,539 --> 00:49:39,630
we do create a by stem we'll will grab

1093
00:49:37,139 --> 00:49:46,710
that out and so we'll just say that's

1094
00:49:39,630 --> 00:49:48,570
directive text right and so that will

1095
00:49:46,710 --> 00:49:50,880
try to create it and assuming that it

1096
00:49:48,570 --> 00:49:53,420
can create it when we get it back then

1097
00:49:50,880 --> 00:49:53,420
we can do

1098
00:50:00,829 --> 00:50:07,079
this so that should allow us to set

1099
00:50:04,469 --> 00:50:09,389
those hhas and process going forwards

1100
00:50:07,079 --> 00:50:11,190
and also ensure that we actually have

1101
00:50:09,389 --> 00:50:13,109
one and now we've recovered the

1102
00:50:11,190 --> 00:50:15,480
functionality that we lost before that

1103
00:50:13,110 --> 00:50:17,400
way you can't start an import without

1104
00:50:15,480 --> 00:50:20,639
knowing where it's gonna go because that

1105
00:50:17,400 --> 00:50:23,220
just creates a pre parse problem so that

1106
00:50:20,639 --> 00:50:24,989
seems fine to me I'm gonna prom with

1107
00:50:23,219 --> 00:50:29,759
that if we wanted to handle includes

1108
00:50:24,989 --> 00:50:33,359
it's actually probably not that hard if

1109
00:50:29,760 --> 00:50:37,680
we won - we can just do a and get a

1110
00:50:33,360 --> 00:50:41,579
great asset source file probably just

1111
00:50:37,679 --> 00:50:43,109
using the base name although since

1112
00:50:41,579 --> 00:50:45,000
they're in the tags directory I don't

1113
00:50:43,110 --> 00:50:49,079
know maybe that's not entirely true but

1114
00:50:45,000 --> 00:50:51,420
I suspect it is probably true uh so yeah

1115
00:50:49,079 --> 00:50:55,440
we could we could just actually do the

1116
00:50:51,420 --> 00:50:57,960
include pretty easily right let's go

1117
00:50:55,440 --> 00:51:05,730
ahead and and check that out actually so

1118
00:50:57,960 --> 00:51:07,530
if we wanted to if you look in here all

1119
00:51:05,730 --> 00:51:16,559
it needs is like the platform file

1120
00:51:07,530 --> 00:51:19,440
handle so yeah so if we want to do that

1121
00:51:16,559 --> 00:51:21,539
we just could let's do that it seems

1122
00:51:19,440 --> 00:51:24,480
fine right so if we want to do something

1123
00:51:21,539 --> 00:51:27,059
like this oops I forgot to cut and paste

1124
00:51:24,480 --> 00:51:29,550
the actual info part of it I wanted that

1125
00:51:27,059 --> 00:51:31,590
so if we wanted to have an include

1126
00:51:29,550 --> 00:51:34,410
directive that's actually trivial right

1127
00:51:31,590 --> 00:51:36,059
it's just three entrant code it's

1128
00:51:34,409 --> 00:51:38,849
probably not the best thing in the world

1129
00:51:36,059 --> 00:51:42,690
because we're not storing a coherent

1130
00:51:38,849 --> 00:51:45,839
context here but we can fix that we can

1131
00:51:42,690 --> 00:51:48,000
even fix that so if we want to we can

1132
00:51:45,840 --> 00:51:49,710
make this work let's just grab the hht

1133
00:51:48,000 --> 00:51:51,809
context in fact we can even do the

1134
00:51:49,710 --> 00:51:54,389
include limit so that's actually not

1135
00:51:51,809 --> 00:51:57,679
that hard either so when we come in

1136
00:51:54,389 --> 00:52:01,469
through here let's just do it we can say

1137
00:51:57,679 --> 00:52:07,199
here's the the context the file groups

1138
00:52:01,469 --> 00:52:11,909
going to be this the assets we already

1139
00:52:07,199 --> 00:52:13,199
know but temporary nough is this and

1140
00:52:11,909 --> 00:52:15,328
since

1141
00:52:13,199 --> 00:52:18,539
the yeah I mean you look at what's going

1142
00:52:15,329 --> 00:52:21,119
on there with that memory arena pointer

1143
00:52:18,539 --> 00:52:24,269
that's actually just part of the context

1144
00:52:21,119 --> 00:52:29,970
now so we don't even really need that to

1145
00:52:24,269 --> 00:52:31,829
be done that way we could do it like

1146
00:52:29,969 --> 00:52:33,808
this I'm gonna leave it like that just

1147
00:52:31,829 --> 00:52:35,519
to make it a little easier on people so

1148
00:52:33,809 --> 00:52:36,900
that they don't have to do that

1149
00:52:35,519 --> 00:52:38,269
ampersand every time so I'm going to

1150
00:52:36,900 --> 00:52:42,260
leave it like that for no real reason

1151
00:52:38,269 --> 00:52:45,358
but that's what we'll do and so I think

1152
00:52:42,260 --> 00:52:51,540
that's probably all we actually need to

1153
00:52:45,358 --> 00:52:52,828
do I think that's fine and I think we

1154
00:52:51,539 --> 00:52:54,449
don't care about this because we're not

1155
00:52:52,829 --> 00:52:56,220
going to do space reclamation we're just

1156
00:52:54,449 --> 00:53:02,699
going to say that's something that you

1157
00:52:56,219 --> 00:53:04,949
should do on your own yeah okay so let's

1158
00:53:02,699 --> 00:53:09,179
keep going here so what I'm going to do

1159
00:53:04,949 --> 00:53:11,608
is I'm going to take that away we're

1160
00:53:09,179 --> 00:53:15,838
gonna leave this this is all gonna come

1161
00:53:11,608 --> 00:53:17,789
up into this function here and rather

1162
00:53:15,838 --> 00:53:19,710
than passing this stuff down this is

1163
00:53:17,789 --> 00:53:21,259
just going to take the hht context you

1164
00:53:19,710 --> 00:53:24,019
can see what I'm doing here right

1165
00:53:21,260 --> 00:53:29,250
hopefully it's pretty clear that

1166
00:53:24,019 --> 00:53:31,019
tokenizer is gonna get put in here I'm

1167
00:53:29,250 --> 00:53:34,769
gonna just again make it so that people

1168
00:53:31,019 --> 00:53:36,239
don't have to do the ampersand so if you

1169
00:53:34,769 --> 00:53:37,920
look at what's going on here we're now

1170
00:53:36,239 --> 00:53:39,209
just going to take that context and the

1171
00:53:37,920 --> 00:53:42,869
only thing we really need is that

1172
00:53:39,210 --> 00:53:46,409
platform file info so when we get that

1173
00:53:42,869 --> 00:53:48,960
info that's what we'll start with

1174
00:53:46,409 --> 00:53:51,029
because you can see in here

1175
00:53:48,960 --> 00:53:53,750
well actually platform file handle I

1176
00:53:51,030 --> 00:53:53,750
guess

1177
00:53:54,289 --> 00:54:03,838
well I guess really that part I guess

1178
00:54:02,039 --> 00:54:07,608
that part's fine so we could just pass

1179
00:54:03,838 --> 00:54:07,608
the info right and do this

1180
00:54:08,010 --> 00:54:12,810
seems good right do we have a closed

1181
00:54:10,929 --> 00:54:15,159
file handle yeah we do it's right there

1182
00:54:12,809 --> 00:54:17,889
and so really all we need is that info

1183
00:54:15,159 --> 00:54:19,480
so this routine now becomes much much

1184
00:54:17,889 --> 00:54:21,879
cleaner I think because it can now do

1185
00:54:19,480 --> 00:54:24,699
reentry and have everything and have a

1186
00:54:21,880 --> 00:54:26,980
little party with all its little friends

1187
00:54:24,699 --> 00:54:29,259
so there's that context file feel we've

1188
00:54:26,980 --> 00:54:33,519
already got so we just call parse hht in

1189
00:54:29,260 --> 00:54:36,730
a loop with that particular block inside

1190
00:54:33,519 --> 00:54:38,739
here we do parse hht we just tokenize

1191
00:54:36,730 --> 00:54:40,750
whatever we got if we want to do another

1192
00:54:38,739 --> 00:54:46,299
file info cure that comes by and include

1193
00:54:40,750 --> 00:54:47,679
we can we just say look the tags file is

1194
00:54:46,300 --> 00:54:51,039
going to be in there somewhere

1195
00:54:47,679 --> 00:54:56,019
so why don't you go and get that here's

1196
00:54:51,039 --> 00:54:58,179
the directive text so go go ahead and

1197
00:54:56,019 --> 00:55:07,719
load that include oh wait we need the

1198
00:54:58,179 --> 00:55:10,599
actual file name text so we need to get

1199
00:55:07,719 --> 00:55:17,230
that file name up oh hello you have

1200
00:55:10,599 --> 00:55:18,880
returned what an auspicious occasion why

1201
00:55:17,230 --> 00:55:24,550
do you always go that way you know you

1202
00:55:18,880 --> 00:55:25,660
can't balance on that anyway so we go

1203
00:55:24,550 --> 00:55:28,630
ahead and get the file name out of here

1204
00:55:25,659 --> 00:55:30,519
and then we try to load it either we can

1205
00:55:28,630 --> 00:55:34,480
or can't load it and if we can't load it

1206
00:55:30,519 --> 00:55:36,579
then it's an error right so if that file

1207
00:55:34,480 --> 00:55:39,190
name is not available we can just or we

1208
00:55:36,579 --> 00:55:46,989
can't load it's like unable to include

1209
00:55:39,190 --> 00:55:49,269
file or something right so we go ahead

1210
00:55:46,989 --> 00:55:51,909
and get that file this can be a required

1211
00:55:49,269 --> 00:55:53,889
token so we can say that this has to be

1212
00:55:51,909 --> 00:55:56,559
a string because it does have to be a

1213
00:55:53,889 --> 00:55:58,059
string we can go ahead and get it we

1214
00:55:56,559 --> 00:55:59,949
don't need a sub dirt here because it's

1215
00:55:58,059 --> 00:56:02,019
always going to be in tags so we go

1216
00:55:59,949 --> 00:56:06,210
ahead and get that file by path and we

1217
00:56:02,019 --> 00:56:08,829
see what's up we inside our file info

1218
00:56:06,210 --> 00:56:09,670
when we actually assuming we actually

1219
00:56:08,829 --> 00:56:11,980
get it

1220
00:56:09,670 --> 00:56:13,659
we just parse the hht and we pass it in

1221
00:56:11,980 --> 00:56:15,610
now you can see that this is reentrant

1222
00:56:13,659 --> 00:56:17,379
which means that if you include the same

1223
00:56:15,610 --> 00:56:18,579
file it'll just include itself over and

1224
00:56:17,380 --> 00:56:20,440
over and over again until it runs out of

1225
00:56:18,579 --> 00:56:21,130
stack station crash if we want to

1226
00:56:20,440 --> 00:56:24,190
prevent that

1227
00:56:21,130 --> 00:56:29,048
we absolutely can all we have to do is

1228
00:56:24,190 --> 00:56:30,400
just insert into the context right in

1229
00:56:29,048 --> 00:56:31,358
fact let me just go ahead and do that

1230
00:56:30,400 --> 00:56:33,009
here

1231
00:56:31,358 --> 00:56:35,048
into the context we just need a thing

1232
00:56:33,009 --> 00:56:38,409
that says hey what we're actually gonna

1233
00:56:35,048 --> 00:56:40,298
do here in the weed and loops we don't

1234
00:56:38,409 --> 00:56:44,558
actually need this either

1235
00:56:40,298 --> 00:56:47,889
that's HHA index we just need a thing

1236
00:56:44,559 --> 00:56:50,079
that's like include depth and every time

1237
00:56:47,889 --> 00:56:52,000
we do and include all you have to do is

1238
00:56:50,079 --> 00:56:56,230
just Inc that number and make sure that

1239
00:56:52,000 --> 00:57:05,170
we're not going to do that so if we do

1240
00:56:56,230 --> 00:57:09,009
say this we can just do an error and say

1241
00:57:05,170 --> 00:57:12,909
look when we got this directive maximum

1242
00:57:09,009 --> 00:57:14,349
include depth exceeded so that way we

1243
00:57:12,909 --> 00:57:16,868
won't just spiral out of control if

1244
00:57:14,349 --> 00:57:18,250
someone makes a stupid mistake and all

1245
00:57:16,869 --> 00:57:19,930
we have to do like I said to do that is

1246
00:57:18,250 --> 00:57:22,420
say look whenever week whatever this

1247
00:57:19,929 --> 00:57:25,838
context is whatever the include depth is

1248
00:57:22,420 --> 00:57:28,180
just increment it and if it's less than

1249
00:57:25,838 --> 00:57:30,429
some reasonable number like 16 let's say

1250
00:57:28,179 --> 00:57:32,980
I mean who could shouldn't ever be doing

1251
00:57:30,429 --> 00:57:35,018
much more than that right I don't even

1252
00:57:32,980 --> 00:57:36,338
know I would think it included the 1

1253
00:57:35,018 --> 00:57:37,750
would be sufficient for most of our

1254
00:57:36,338 --> 00:57:41,949
purposes but all right so let's say you

1255
00:57:37,750 --> 00:57:43,480
got something ridiculous going on if you

1256
00:57:41,949 --> 00:57:46,509
blow past that include depth it's an

1257
00:57:43,480 --> 00:57:47,619
error and we're gonna get mad and we're

1258
00:57:46,509 --> 00:57:50,019
gonna issue an air and we're gonna stop

1259
00:57:47,619 --> 00:57:52,210
so that should allow us to do and

1260
00:57:50,018 --> 00:57:55,419
include as well off we go so this all

1261
00:57:52,210 --> 00:57:56,318
should just run and be fun and happy and

1262
00:57:55,420 --> 00:58:01,920
everything's great

1263
00:57:56,318 --> 00:58:04,960
right off we go so once we've got that

1264
00:58:01,920 --> 00:58:07,329
that allows us to do the HHA targeting

1265
00:58:04,960 --> 00:58:09,849
and it allows us to do this parsing in

1266
00:58:07,329 --> 00:58:12,579
this order and so really all we're down

1267
00:58:09,849 --> 00:58:15,940
to now to finish things off is we have

1268
00:58:12,579 --> 00:58:17,380
to write the stamp function but then we

1269
00:58:15,940 --> 00:58:20,259
got to get back to this sort of touchy

1270
00:58:17,380 --> 00:58:24,759
aspect of how do we want to actually

1271
00:58:20,259 --> 00:58:29,108
sort of merge these like like do that

1272
00:58:24,759 --> 00:58:30,789
text transfer right and so what I'd like

1273
00:58:29,108 --> 00:58:32,920
to do first is say well we know that

1274
00:58:30,789 --> 00:58:34,640
during stamping we're gonna pass the

1275
00:58:32,920 --> 00:58:39,048
tags and we're also going

1276
00:58:34,639 --> 00:58:41,210
past let's say the append tags right so

1277
00:58:39,048 --> 00:58:43,190
that append tags is coming in here that

1278
00:58:41,210 --> 00:58:46,010
we built but we want to attack those

1279
00:58:43,190 --> 00:58:50,358
onto the end and so when we do the parse

1280
00:58:46,010 --> 00:58:51,980
pieces bit right we don't expect that to

1281
00:58:50,358 --> 00:58:55,159
do any appending anymore

1282
00:58:51,980 --> 00:58:57,559
so like in here where we do parse pieces

1283
00:58:55,159 --> 00:58:59,149
and we've got those append tags we're

1284
00:58:57,559 --> 00:59:03,619
just not going to do that so we're gonna

1285
00:58:59,150 --> 00:59:05,809
let this thing just produce the version

1286
00:59:03,619 --> 00:59:08,210
that it needs now the nice part about

1287
00:59:05,809 --> 00:59:11,660
doing it this way is this work could now

1288
00:59:08,210 --> 00:59:13,699
be amortized right we could then say to

1289
00:59:11,659 --> 00:59:19,219
do KC

1290
00:59:13,699 --> 00:59:23,118
this could now just be built one for

1291
00:59:19,219 --> 00:59:28,278
each type ahead of time and we don't

1292
00:59:23,119 --> 00:59:30,950
have to reconstruct the tags over and

1293
00:59:28,278 --> 00:59:32,900
over and over and over and we should do

1294
00:59:30,949 --> 00:59:33,528
that but we don't really need to do it

1295
00:59:32,900 --> 00:59:35,869
quite yet

1296
00:59:33,528 --> 00:59:38,900
so since we're making tons of changes

1297
00:59:35,869 --> 00:59:45,289
there's no sense making it harder for

1298
00:59:38,900 --> 00:59:46,700
ourselves in that regard right okay so

1299
00:59:45,289 --> 00:59:50,720
taking a look at what's going on here

1300
00:59:46,699 --> 00:59:53,210
this is that append operation right and

1301
00:59:50,719 --> 00:59:56,298
what we're going to be doing is adding

1302
00:59:53,210 --> 00:59:58,250
that stamping function on here and that

1303
00:59:56,298 --> 01:00:00,380
stamping function is really the thing

1304
00:59:58,250 --> 01:00:05,989
that we need to start thinking about

1305
01:00:00,380 --> 01:00:08,480
there so let's go ahead and do that and

1306
01:00:05,989 --> 01:00:11,088
that will sort of have more to do as we

1307
01:00:08,480 --> 01:00:13,190
get there so all of this code now that

1308
01:00:11,088 --> 01:00:15,679
sort of have this append tags that can

1309
01:00:13,190 --> 01:00:17,630
end and that even cleans up this code

1310
01:00:15,679 --> 01:00:19,639
path and it makes it not dependent on

1311
01:00:17,630 --> 01:00:21,559
who was calling it and that's really the

1312
01:00:19,639 --> 01:00:23,659
important part that's what will also

1313
01:00:21,559 --> 01:00:27,319
allow us to again cache this so we just

1314
01:00:23,659 --> 01:00:29,058
build those templates once at the start

1315
01:00:27,318 --> 01:00:31,548
of an import and we'll we won't have to

1316
01:00:29,059 --> 01:00:33,048
build them for everything and that would

1317
01:00:31,548 --> 01:00:34,909
be really nice right because it's just a

1318
01:00:33,048 --> 01:00:37,639
waste of everyone's time that this is

1319
01:00:34,909 --> 01:00:40,068
happening every single time through and

1320
01:00:37,639 --> 01:00:41,750
that was just us being sloppy right we

1321
01:00:40,068 --> 01:00:43,940
just that's just the way we happen to

1322
01:00:41,750 --> 01:00:46,170
write it because it was easiest but it's

1323
01:00:43,940 --> 01:00:48,900
not the best way to do it and so we're

1324
01:00:46,170 --> 01:00:52,079
improving code that way as well which is

1325
01:00:48,900 --> 01:00:55,440
kind of a nice fringe benefit of kind of

1326
01:00:52,079 --> 01:00:58,230
cleaning up that path okay so getting

1327
01:00:55,440 --> 01:00:59,670
rid of the impending here so that those

1328
01:00:58,230 --> 01:01:01,139
don't get passed through anymore now

1329
01:00:59,670 --> 01:01:03,860
we're pretty much good to go

1330
01:01:01,139 --> 01:01:06,389
all this stuff does what it needs to do

1331
01:01:03,860 --> 01:01:10,019
and and we're good

1332
01:01:06,389 --> 01:01:11,309
item tags here I don't know and and we

1333
01:01:10,019 --> 01:01:12,599
don't have those to find it so we're

1334
01:01:11,309 --> 01:01:14,909
just gonna insert those later and

1335
01:01:12,599 --> 01:01:17,670
that'll be fine so all of that looks

1336
01:01:14,909 --> 01:01:19,799
pretty clean if you look here at right

1337
01:01:17,670 --> 01:01:22,200
all HHA modifications this should still

1338
01:01:19,800 --> 01:01:24,420
just work fine so all we really need to

1339
01:01:22,199 --> 01:01:27,539
do now is just that stamping and then

1340
01:01:24,420 --> 01:01:29,909
focus on the text transfer and I think

1341
01:01:27,539 --> 01:01:32,519
we're good to go okay I'm gonna go ahead

1342
01:01:29,909 --> 01:01:33,839
and and recompile I don't know what

1343
01:01:32,519 --> 01:01:38,550
mommy was doing there she's you know

1344
01:01:33,840 --> 01:01:43,769
she's doing she's kitten she has you

1345
01:01:38,550 --> 01:01:45,360
know she has her ways when we do right

1346
01:01:43,769 --> 01:01:49,559
image shhh I remember we got rid of this

1347
01:01:45,360 --> 01:01:51,980
info hmm and so if we take a look at

1348
01:01:49,559 --> 01:01:53,759
what's going on there

1349
01:01:51,980 --> 01:01:55,679
actually don't know why it's complaining

1350
01:01:53,760 --> 01:01:58,080
about that asset index what's the

1351
01:01:55,679 --> 01:02:00,599
problem file isn't undeclared an affair

1352
01:01:58,079 --> 01:02:01,799
it's right here so I guess it just

1353
01:02:00,599 --> 01:02:03,269
doesn't like that part

1354
01:02:01,800 --> 01:02:05,100
but anyway so what I was saying is that

1355
01:02:03,269 --> 01:02:08,579
info struct we're not actually gonna

1356
01:02:05,099 --> 01:02:10,559
allow that infrastruc ture more that's

1357
01:02:08,579 --> 01:02:12,659
not going to be their asset source file

1358
01:02:10,559 --> 01:02:14,070
will be there and if I jump in here you

1359
01:02:12,659 --> 01:02:15,839
can see where it's getting the asset

1360
01:02:14,070 --> 01:02:20,490
file index that's actually now going to

1361
01:02:15,840 --> 01:02:23,789
come from the file right I don't think

1362
01:02:20,489 --> 01:02:27,179
we called it that what do we call it we

1363
01:02:23,789 --> 01:02:30,900
call it desk file index so that's coming

1364
01:02:27,179 --> 01:02:32,519
again from that file and then when we

1365
01:02:30,900 --> 01:02:34,139
look at where the actual info is coming

1366
01:02:32,519 --> 01:02:37,800
from what you can see is like these

1367
01:02:34,139 --> 01:02:41,639
right asset strings stuff right that's

1368
01:02:37,800 --> 01:02:43,650
where the info was coming from now we

1369
01:02:41,639 --> 01:02:46,019
don't actually want to do that again

1370
01:02:43,650 --> 01:02:48,059
that's the part that wants to be done

1371
01:02:46,019 --> 01:02:50,009
separately and what you can see from

1372
01:02:48,059 --> 01:02:52,679
right asset data is like this stuff is

1373
01:02:50,010 --> 01:02:55,140
not actually touching that this all of

1374
01:02:52,679 --> 01:02:57,779
this is actually the part that's that

1375
01:02:55,139 --> 01:02:59,909
needs to be handled sort of separately

1376
01:02:57,780 --> 01:03:03,210
so it's actually this part

1377
01:02:59,909 --> 01:03:05,639
here that's important these are this is

1378
01:03:03,210 --> 01:03:08,608
all the annotation data right that comes

1379
01:03:05,639 --> 01:03:11,279
with the asset and so what we want to do

1380
01:03:08,608 --> 01:03:15,239
is we want to be able to do this part as

1381
01:03:11,280 --> 01:03:20,210
the separate pass that will update the

1382
01:03:15,239 --> 01:03:23,879
asset in a different way right and

1383
01:03:20,210 --> 01:03:25,949
looking at how this works when looking

1384
01:03:23,880 --> 01:03:28,588
at how this works when we actually do

1385
01:03:25,949 --> 01:03:31,679
the right asset data right asset data is

1386
01:03:28,588 --> 01:03:35,578
the thing that's presumably rewriting

1387
01:03:31,679 --> 01:03:44,538
out the asset itself no I guess it's not

1388
01:03:35,579 --> 01:03:44,539
so these things all HHA modification

1389
01:03:50,750 --> 01:03:58,730
yeah so I think cuz this just sets

1390
01:03:54,719 --> 01:03:58,730
modified to true right

1391
01:04:03,250 --> 01:04:15,159
something someone sets it to show you

1392
01:04:04,929 --> 01:04:17,858
somewhere so that right asset data call

1393
01:04:15,159 --> 01:04:19,598
will set modify it equal to true I don't

1394
01:04:17,858 --> 01:04:22,750
really know why it's only happening

1395
01:04:19,599 --> 01:04:26,260
there because you would think that that

1396
01:04:22,750 --> 01:04:29,588
should actually happen sort of in us in

1397
01:04:26,260 --> 01:04:32,920
a broader context so we may move that

1398
01:04:29,588 --> 01:04:38,739
modify that may want to loft out a

1399
01:04:32,920 --> 01:04:40,900
little bit further right so that I'm not

1400
01:04:38,739 --> 01:04:42,489
sure about but what I can say is the

1401
01:04:40,900 --> 01:04:45,400
simple part that I wanted to actually do

1402
01:04:42,489 --> 01:04:47,618
is actually you know very

1403
01:04:45,400 --> 01:04:49,690
straightforward exactly what we want so

1404
01:04:47,619 --> 01:04:52,750
here where we set all of the asset

1405
01:04:49,690 --> 01:04:58,119
annotation data here what I can do is

1406
01:04:52,750 --> 01:05:00,760
also set the annotation data here pretty

1407
01:04:58,119 --> 01:05:02,650
pretty straightforward right so when we

1408
01:05:00,760 --> 01:05:04,210
do these asset indices you know when we

1409
01:05:02,650 --> 01:05:06,338
export the PNG s and stuff all that

1410
01:05:04,210 --> 01:05:08,409
stuff can get set that's exactly what we

1411
01:05:06,338 --> 01:05:11,679
want but then what we can do in addition

1412
01:05:08,409 --> 01:05:13,588
to that is just grab this part out that

1413
01:05:11,679 --> 01:05:17,980
was sort of a separate piece there in

1414
01:05:13,588 --> 01:05:19,630
fact we can actually even take the well

1415
01:05:17,980 --> 01:05:22,030
I guess the file date and file checksum

1416
01:05:19,630 --> 01:05:23,619
park is important as well so we'll leave

1417
01:05:22,030 --> 01:05:25,210
that in place that's fine where it is

1418
01:05:23,619 --> 01:05:27,970
we're gonna grab this out here and

1419
01:05:25,210 --> 01:05:30,429
inside stamp that's where this is gonna

1420
01:05:27,969 --> 01:05:33,098
happen so when we actually go to stamp

1421
01:05:30,429 --> 01:05:35,409
the assets down this is where that will

1422
01:05:33,099 --> 01:05:39,400
actually happen and this way we can

1423
01:05:35,409 --> 01:05:41,440
rewrite the all the stuff that that we

1424
01:05:39,400 --> 01:05:45,670
had happen on this particular

1425
01:05:41,440 --> 01:05:47,619
pass-through now it's an open question

1426
01:05:45,670 --> 01:05:50,108
what you want to do with the air stream

1427
01:05:47,619 --> 01:05:52,420
it may be that you want to preserve the

1428
01:05:50,108 --> 01:05:54,190
original air stream and so when you

1429
01:05:52,420 --> 01:05:55,960
update the tags you don't want to

1430
01:05:54,190 --> 01:05:58,329
destroy the air stream that existed

1431
01:05:55,960 --> 01:06:00,909
previously I'm not sure how we really

1432
01:05:58,329 --> 01:06:08,890
want that to happen I think that

1433
01:06:00,909 --> 01:06:10,779
probably we just I I think that probably

1434
01:06:08,889 --> 01:06:13,059
we would want to have two separate air

1435
01:06:10,780 --> 01:06:15,579
streams one for the PNG and one for the

1436
01:06:13,059 --> 01:06:16,250
metadata probably I just really don't

1437
01:06:15,579 --> 01:06:19,190
know

1438
01:06:16,250 --> 01:06:22,489
the problem so I'm not sure which should

1439
01:06:19,190 --> 01:06:25,760
happen in this case what I will say is I

1440
01:06:22,489 --> 01:06:28,399
think thinking about it a little bit

1441
01:06:25,760 --> 01:06:30,620
deeper I think what we may want to do is

1442
01:06:28,400 --> 01:06:32,329
take a different tack with the Airstream

1443
01:06:30,619 --> 01:06:34,599
so we'll talk about that later we'll get

1444
01:06:32,329 --> 01:06:37,069
those working and then play with them

1445
01:06:34,599 --> 01:06:38,900
all right so let me go ahead and fix the

1446
01:06:37,070 --> 01:06:41,900
errors that are in the upper part of the

1447
01:06:38,900 --> 01:06:44,809
file let me see here

1448
01:06:41,900 --> 01:06:48,320
you 64 to you 32 oh that didn't need to

1449
01:06:44,809 --> 01:06:50,360
be you 64 Beth can just be you 32

1450
01:06:48,320 --> 01:06:52,490
so I just want to fix the part where we

1451
01:06:50,360 --> 01:06:53,890
were passing through source infos those

1452
01:06:52,489 --> 01:06:57,289
I just don't think are necessary anymore

1453
01:06:53,889 --> 01:06:59,869
so what should happen is the info struct

1454
01:06:57,289 --> 01:07:01,909
here can get struck doesn't need to

1455
01:06:59,869 --> 01:07:03,769
actually occur so everywhere that we

1456
01:07:01,909 --> 01:07:07,069
were previously passing it will just go

1457
01:07:03,769 --> 01:07:09,650
away and so people who have these source

1458
01:07:07,070 --> 01:07:12,980
infos come along those will just get get

1459
01:07:09,650 --> 01:07:14,360
nerfed and that's all fine and I'll just

1460
01:07:12,980 --> 01:07:16,130
kind of work through that slowly because

1461
01:07:14,360 --> 01:07:17,570
it's just it is a case of nobody needs

1462
01:07:16,130 --> 01:07:20,150
it anymore because it's not actually

1463
01:07:17,570 --> 01:07:21,890
using any of that and these are just

1464
01:07:20,150 --> 01:07:23,300
errors that are you know spirits errors

1465
01:07:21,889 --> 01:07:25,460
from the compiler that are actually just

1466
01:07:23,300 --> 01:07:31,310
go away automatically so yeah none of

1467
01:07:25,460 --> 01:07:37,579
that matters at all right so I think

1468
01:07:31,309 --> 01:07:39,579
that's probably most of it well what is

1469
01:07:37,579 --> 01:07:42,880
it complaining about here I'm not sure

1470
01:07:39,579 --> 01:07:50,000
in tax doesn't take for parameters out

1471
01:07:42,880 --> 01:07:55,180
what does it take token Iser category so

1472
01:07:50,000 --> 01:07:55,179
yeah what was that original then I

1473
01:07:56,769 --> 01:08:01,269
didn't want that to jump but it jumped

1474
01:08:05,679 --> 01:08:12,969
so result is the import tag array I

1475
01:08:15,429 --> 01:08:26,329
don't really understand how that was how

1476
01:08:19,279 --> 01:08:31,130
it was so this was returning an import

1477
01:08:26,329 --> 01:08:36,338
grid tag temp and passing an import tag

1478
01:08:31,130 --> 01:08:36,338
array that didn't actually happen

1479
01:08:45,298 --> 01:08:55,500
so this is just code we don't care about

1480
01:08:50,100 --> 01:09:01,670
I think that was just old old news all

1481
01:08:55,500 --> 01:09:04,409
right so what you looking at Molly

1482
01:09:01,670 --> 01:09:05,760
what's going on you seem agitated you

1483
01:09:04,409 --> 01:09:11,608
doing okay you just you just got the

1484
01:09:05,760 --> 01:09:14,338
zoomies I don't know what's going on out

1485
01:09:11,609 --> 01:09:15,779
there but she's pretty attend time all

1486
01:09:14,338 --> 01:09:17,609
right so if we take a look at what's

1487
01:09:15,779 --> 01:09:19,230
going on in the lower part of the code

1488
01:09:17,609 --> 01:09:20,490
just to make sure that we've still got

1489
01:09:19,229 --> 01:09:21,588
stuff going on that's supposed to be

1490
01:09:20,489 --> 01:09:24,088
going on

1491
01:09:21,588 --> 01:09:26,220
so the append HHA index is actually

1492
01:09:24,088 --> 01:09:28,170
coming from the context now right so

1493
01:09:26,220 --> 01:09:29,789
there's an HH a index that's associated

1494
01:09:28,170 --> 01:09:33,420
with that context and we want to update

1495
01:09:29,789 --> 01:09:34,439
that every time when we actually work

1496
01:09:33,420 --> 01:09:37,980
through the code

1497
01:09:34,439 --> 01:09:43,829
lower down here so oops I don't actually

1498
01:09:37,979 --> 01:09:47,219
care about this right now um let me take

1499
01:09:43,829 --> 01:09:50,880
a look so yeah here we're saying that

1500
01:09:47,220 --> 01:09:53,909
there should be some kind of HH a file

1501
01:09:50,880 --> 01:09:56,609
name that we're loading out so we do

1502
01:09:53,909 --> 01:09:58,109
actually want that I eliminated it

1503
01:09:56,609 --> 01:10:02,099
before but right we need it for the path

1504
01:09:58,109 --> 01:10:06,029
so we do want an HH a base name I guess

1505
01:10:02,100 --> 01:10:08,490
right in HH a stem we want so I'm gonna

1506
01:10:06,029 --> 01:10:10,469
go ahead and put the the that back in

1507
01:10:08,489 --> 01:10:12,479
there and that's easy enough to get

1508
01:10:10,470 --> 01:10:16,110
because all that is is when we actually

1509
01:10:12,479 --> 01:10:18,829
grab the token here so when we go

1510
01:10:16,109 --> 01:10:21,329
through this code and we say parse h HT

1511
01:10:18,829 --> 01:10:24,569
anytime that we're going to set that HH

1512
01:10:21,329 --> 01:10:27,210
a in here all we need to do is say when

1513
01:10:24,569 --> 01:10:36,989
we actually find it we'll set that stem

1514
01:10:27,210 --> 01:10:42,739
so basically the oh you know what we

1515
01:10:36,989 --> 01:10:42,739
need this as well

1516
01:10:43,250 --> 01:10:49,199
so we grabbed the HHA name here we're

1517
01:10:46,739 --> 01:10:50,539
gonna say that stem and I'll call it

1518
01:10:49,199 --> 01:10:53,849
stem

1519
01:10:50,539 --> 01:10:56,300
we're gonna remember that stem and when

1520
01:10:53,850 --> 01:10:58,950
we actually do this we're gonna say

1521
01:10:56,300 --> 01:11:02,239
let's go ahead and get that right and I

1522
01:10:58,949 --> 01:11:02,239
can I can actually do it like this

1523
01:11:08,689 --> 01:11:13,889
that should be sufficient that root lets

1524
01:11:12,119 --> 01:11:16,739
us remember both things so we actually

1525
01:11:13,890 --> 01:11:18,829
pre get the index and we get the stem so

1526
01:11:16,739 --> 01:11:21,239
we can actually produce it properly here

1527
01:11:18,829 --> 01:11:23,489
the file name dot txt

1528
01:11:21,239 --> 01:11:26,039
that's this up here and remember that's

1529
01:11:23,489 --> 01:11:32,269
only valid in the non default case so

1530
01:11:26,039 --> 01:11:32,269
that's all fine looking the rest of this

1531
01:11:34,579 --> 01:11:41,600
it looks to me like these code paths can

1532
01:11:37,529 --> 01:11:52,409
be welded so all of this can move up

1533
01:11:41,600 --> 01:12:01,320
right and this part should be able to

1534
01:11:52,409 --> 01:12:03,449
just operate here I think so I believe

1535
01:12:01,319 --> 01:12:05,399
we can now simplify that code path as

1536
01:12:03,449 --> 01:12:10,139
well because we can just get the file

1537
01:12:05,399 --> 01:12:14,399
name we can do our file matching attempt

1538
01:12:10,140 --> 01:12:16,260
and you know proceed from there so I

1539
01:12:14,399 --> 01:12:20,069
think that code path can actually be

1540
01:12:16,260 --> 01:12:25,199
simplified quite a bit taking a look at

1541
01:12:20,069 --> 01:12:28,319
what's going on here let's see there was

1542
01:12:25,199 --> 01:12:31,109
previously a file name mentioned here we

1543
01:12:28,319 --> 01:12:33,449
don't need that one anymore so that's

1544
01:12:31,109 --> 01:12:37,769
good I'm gonna go ahead and make stamp

1545
01:12:33,449 --> 01:12:40,250
have that this basically if doubt so we

1546
01:12:37,770 --> 01:12:44,910
can jump right to the first error easily

1547
01:12:40,250 --> 01:12:48,060
and yeah let's see that needs a

1548
01:12:44,909 --> 01:12:52,439
semicolon we can open our file and oh

1549
01:12:48,060 --> 01:12:55,090
here looks like the file info in

1550
01:12:52,439 --> 01:12:57,279
question is not being preserved

1551
01:12:55,090 --> 01:12:59,230
makes sense we're getting it up here so

1552
01:12:57,279 --> 01:13:02,139
that's actually the thing and not the

1553
01:12:59,229 --> 01:13:06,189
file name that needs to be placed up

1554
01:13:02,140 --> 01:13:09,610
here so there's our file info and looks

1555
01:13:06,189 --> 01:13:14,199
reasonable we should also say the import

1556
01:13:09,609 --> 01:13:22,000
type gets initialized to what was it

1557
01:13:14,199 --> 01:13:24,010
import type none okay so here we now

1558
01:13:22,000 --> 01:13:26,050
need to look at what the definition of

1559
01:13:24,010 --> 01:13:30,159
these actually was so if we go to like

1560
01:13:26,050 --> 01:13:33,850
multi tile import it's got the tag array

1561
01:13:30,159 --> 01:13:41,349
I don't know what the tag array is

1562
01:13:33,850 --> 01:13:46,060
actually being used for right image two

1563
01:13:41,350 --> 01:13:58,930
HHA is taking the grid tags but I don't

1564
01:13:46,060 --> 01:14:03,310
actually know if they're used so we do

1565
01:13:58,930 --> 01:14:05,500
need to know the tag array looks like so

1566
01:14:03,310 --> 01:14:07,690
I'm going to continue passing that

1567
01:14:05,500 --> 01:14:10,229
because it looks like we want to know

1568
01:14:07,689 --> 01:14:21,189
the type when we add these things in

1569
01:14:10,229 --> 01:14:23,349
right so that seems good probably it

1570
01:14:21,189 --> 01:14:25,569
does mean that maybe we need a thing

1571
01:14:23,350 --> 01:14:27,610
here that says if we change the metadata

1572
01:14:25,569 --> 01:14:30,309
in a way that is gonna change the types

1573
01:14:27,609 --> 01:14:32,229
of the tags that may require a full

1574
01:14:30,310 --> 01:14:34,480
rebuild because that would mean that

1575
01:14:32,229 --> 01:14:39,789
we'd have to actually have the assets

1576
01:14:34,479 --> 01:14:44,109
stamped differently so this part right

1577
01:14:39,789 --> 01:14:50,340
here is a little confusing because

1578
01:14:44,109 --> 01:14:54,789
that's the only place that's used and

1579
01:14:50,340 --> 01:14:56,560
that's really sucky right because that

1580
01:14:54,789 --> 01:14:59,260
means we're passing that whole thing

1581
01:14:56,560 --> 01:15:01,480
down for no other reason than just the

1582
01:14:59,260 --> 01:15:05,230
fact that we're calling set asset type

1583
01:15:01,479 --> 01:15:08,009
on it which just seems real dumb so I'm

1584
01:15:05,229 --> 01:15:10,409
gonna actually say no even to that

1585
01:15:08,010 --> 01:15:12,180
I'm gonna say that goes in stamp and

1586
01:15:10,409 --> 01:15:17,399
then that whole thing is getting cleaned

1587
01:15:12,180 --> 01:15:20,610
out as well so up here we're gonna do

1588
01:15:17,399 --> 01:15:26,009
this you know if we detect that the

1589
01:15:20,609 --> 01:15:27,719
asset type previously didn't exist for

1590
01:15:26,010 --> 01:15:29,430
when we're doing the stamp and it looks

1591
01:15:27,720 --> 01:15:33,659
like the way that that has to happen

1592
01:15:29,430 --> 01:15:38,010
there is when we reserved a new asset

1593
01:15:33,659 --> 01:15:48,630
right the asset type if we didn't

1594
01:15:38,010 --> 01:15:50,430
already have one right so we'll have to

1595
01:15:48,630 --> 01:15:52,760
deal with that but otherwise that's

1596
01:15:50,430 --> 01:15:56,360
pretty good because this tags type ID

1597
01:15:52,760 --> 01:16:01,940
doesn't actually then need to happen and

1598
01:15:56,359 --> 01:16:01,939
with this I guess what I would say is

1599
01:16:02,479 --> 01:16:08,669
the part where we do sprite founded was

1600
01:16:05,279 --> 01:16:12,059
accredited blank tile again that part we

1601
01:16:08,670 --> 01:16:17,789
can actually save for later so that can

1602
01:16:12,060 --> 01:16:20,430
happen in here right so the stamping

1603
01:16:17,789 --> 01:16:21,930
process can still again be separate so

1604
01:16:20,430 --> 01:16:24,480
when we come through here and do all of

1605
01:16:21,930 --> 01:16:27,600
this asset processing now we don't need

1606
01:16:24,479 --> 01:16:29,369
the tags at all so right image to HHA

1607
01:16:27,600 --> 01:16:34,710
just doesn't need to take those and that

1608
01:16:29,369 --> 01:16:36,750
solves that problem for us right and

1609
01:16:34,710 --> 01:16:40,789
here again when we're looking at this

1610
01:16:36,750 --> 01:16:40,789
HHA asset and we do this assignment

1611
01:16:42,050 --> 01:16:50,250
again don't really need that we don't

1612
01:16:47,159 --> 01:16:53,399
need to update that that stuff can be

1613
01:16:50,250 --> 01:16:57,630
updated later so this can just be

1614
01:16:53,399 --> 01:16:59,599
updated in here right and these parts

1615
01:16:57,630 --> 01:17:03,029
that are being updated will just get

1616
01:16:59,600 --> 01:17:06,530
updated again so this stuff's all fine

1617
01:17:03,029 --> 01:17:11,699
and it can all be rewritten

1618
01:17:06,529 --> 01:17:13,619
but off we go so when we type my phone

1619
01:17:11,699 --> 01:17:17,609
my phone was on silent

1620
01:17:13,619 --> 01:17:19,409
I guess my phone was not on silent so

1621
01:17:17,609 --> 01:17:21,809
much for a professional podcaster or a

1622
01:17:19,409 --> 01:17:24,460
professional streamer I should say

1623
01:17:21,810 --> 01:17:28,330
all right so I'm here we do write image

1624
01:17:24,460 --> 01:17:31,630
to HSA we're removing the tags from the

1625
01:17:28,329 --> 01:17:33,550
list and so anywhere from the Brady much

1626
01:17:31,630 --> 01:17:35,590
hhj so that stuff doesn't have to happen

1627
01:17:33,550 --> 01:17:37,300
and now we just got that partitioned

1628
01:17:35,590 --> 01:17:39,039
into two parts which I like better so

1629
01:17:37,300 --> 01:17:40,750
the metadata can be updated separately

1630
01:17:39,039 --> 01:17:42,250
from the image data and we should

1631
01:17:40,750 --> 01:17:44,529
probably take that as far as we can go

1632
01:17:42,250 --> 01:17:47,079
so later on we probably want to keep

1633
01:17:44,529 --> 01:17:50,229
doing that let's take a look at process

1634
01:17:47,079 --> 01:17:52,149
multi tile import now so anywhere we

1635
01:17:50,229 --> 01:17:54,250
were doing this before so there's the

1636
01:17:52,149 --> 01:17:56,679
multi tile here's the plate I'm going to

1637
01:17:54,250 --> 01:18:02,079
take the tags out of there because again

1638
01:17:56,680 --> 01:18:05,680
they just aren't necessary okay so now

1639
01:18:02,079 --> 01:18:08,859
grid tag array where's that happening on

1640
01:18:05,680 --> 01:18:12,460
a second this is not gonna happen right

1641
01:18:08,859 --> 01:18:16,059
that goes away and we've got stamp

1642
01:18:12,460 --> 01:18:19,329
assets platform open file okay

1643
01:18:16,060 --> 01:18:20,289
so inside here this is context file

1644
01:18:19,329 --> 01:18:23,198
group because remember that's getting

1645
01:18:20,289 --> 01:18:29,619
passed down now that temporary nough is

1646
01:18:23,198 --> 01:18:34,389
happening here and you know honestly

1647
01:18:29,619 --> 01:18:39,420
inside this part hht bit i think yeah

1648
01:18:34,390 --> 01:18:44,469
everything this all seems fine we could

1649
01:18:39,420 --> 01:18:48,940
move that clear further down if we

1650
01:18:44,469 --> 01:18:51,069
wanted to we could make that something

1651
01:18:48,939 --> 01:18:53,829
that actually clears out the HH tees as

1652
01:18:51,069 --> 01:18:56,019
they're brought in I don't think we care

1653
01:18:53,829 --> 01:19:00,819
about that so I'm not going to bother

1654
01:18:56,020 --> 01:19:02,199
but we could if we needed to stamp

1655
01:19:00,819 --> 01:19:06,609
assets is the thing we're gonna have to

1656
01:19:02,198 --> 01:19:09,039
write file info here is this is getting

1657
01:19:06,609 --> 01:19:12,189
passed in so this is actually sort of a

1658
01:19:09,039 --> 01:19:16,238
sub file info or included might be this

1659
01:19:12,189 --> 01:19:18,460
is the included file info and so we want

1660
01:19:16,238 --> 01:19:21,639
that to work so we'll go ahead and have

1661
01:19:18,460 --> 01:19:24,039
that work there and in here if we can't

1662
01:19:21,640 --> 01:19:31,850
open in HHA then we're gonna do

1663
01:19:24,039 --> 01:19:38,579
HHA stem in this case what else we got

1664
01:19:31,850 --> 01:19:41,210
when we do purse top of a block that's

1665
01:19:38,579 --> 01:19:44,149
just a question of too many ampersands

1666
01:19:41,210 --> 01:19:47,569
oops

1667
01:19:44,149 --> 01:19:50,519
final group looks fine there

1668
01:19:47,569 --> 01:19:54,479
thug group star is there a reason that's

1669
01:19:50,520 --> 01:19:58,830
not a star oh so then actually returns

1670
01:19:54,479 --> 01:20:00,948
the actual file group that seems fine as

1671
01:19:58,829 --> 01:20:00,948
well

1672
01:20:05,899 --> 01:20:20,479
so that can just be stored and we're

1673
01:20:12,300 --> 01:20:20,480
almost down to the end tougher files

1674
01:20:22,819 --> 01:20:30,649
okay let's see what else we got

1675
01:20:36,029 --> 01:20:41,429
so that looks like that

1676
01:20:41,729 --> 01:20:48,459
all right so now we have come to the

1677
01:20:46,029 --> 01:20:50,859
part where we really got to figure out

1678
01:20:48,460 --> 01:20:53,789
what's going on here so if we actually

1679
01:20:50,859 --> 01:20:56,649
call like imagine we have this function

1680
01:20:53,789 --> 01:21:03,460
where we say here's the assets here's

1681
01:20:56,649 --> 01:21:09,069
the asset source file here's the hht

1682
01:21:03,460 --> 01:21:13,989
fields here's the tags right this is

1683
01:21:09,069 --> 01:21:27,908
what a import grid tags and this is an

1684
01:21:13,988 --> 01:21:30,009
import tag array something like this so

1685
01:21:27,908 --> 01:21:31,299
if we actually start with this now what

1686
01:21:30,010 --> 01:21:32,619
we have to do is figure out how to

1687
01:21:31,300 --> 01:21:35,230
actually make something that goes

1688
01:21:32,619 --> 01:21:39,569
through all of the assets that were ever

1689
01:21:35,229 --> 01:21:42,129
pulled in for this particular file and

1690
01:21:39,569 --> 01:21:43,960
rewrite all of their asset headers to

1691
01:21:42,130 --> 01:21:46,779
make sure that they now contain the

1692
01:21:43,960 --> 01:21:49,119
metadata that we've received and

1693
01:21:46,779 --> 01:21:51,309
furthermore what we need to do is when

1694
01:21:49,119 --> 01:21:54,309
we actually go in here to parse

1695
01:21:51,310 --> 01:21:56,440
top-level block we want to have a thing

1696
01:21:54,310 --> 01:22:01,420
that says whether or not we actually

1697
01:21:56,439 --> 01:22:05,408
need to save based on that operation we

1698
01:22:01,420 --> 01:22:08,670
could just not bother at some level we

1699
01:22:05,408 --> 01:22:08,670
don't care right

1700
01:22:14,300 --> 01:22:18,600
so it's a little bit tough to say

1701
01:22:16,710 --> 01:22:20,939
whether we actually want to be too

1702
01:22:18,600 --> 01:22:24,120
specific about saying we need to rewrite

1703
01:22:20,939 --> 01:22:28,429
these or not in other words we could

1704
01:22:24,119 --> 01:22:31,289
just always Reese tamp all the assets

1705
01:22:28,430 --> 01:22:33,810
and especially if we did a little bit of

1706
01:22:31,289 --> 01:22:36,539
string pooling we probably never know

1707
01:22:33,810 --> 01:22:37,950
the difference but I'd rather not do

1708
01:22:36,539 --> 01:22:39,210
that so I think I'm gonna actually try

1709
01:22:37,949 --> 01:22:41,039
to make it so it's a little bit more

1710
01:22:39,210 --> 01:22:44,579
specific just so we don't blow our files

1711
01:22:41,039 --> 01:22:46,140
during development so in here when we

1712
01:22:44,579 --> 01:22:47,579
actually do stamp assets I'm going to

1713
01:22:46,140 --> 01:22:49,980
get rid of the f0 and we're gonna

1714
01:22:47,579 --> 01:22:54,000
actually try to make this work

1715
01:22:49,979 --> 01:22:58,229
when we go and do the right hht part of

1716
01:22:54,000 --> 01:23:02,939
this from before which is all right up

1717
01:22:58,229 --> 01:23:06,089
here I need to follow this logic a

1718
01:23:02,939 --> 01:23:09,839
little bit so this part here where we

1719
01:23:06,090 --> 01:23:12,420
sort of specify what's going on

1720
01:23:09,840 --> 01:23:14,430
inside the file asset indices you can

1721
01:23:12,420 --> 01:23:16,409
see as we flew through this code that

1722
01:23:14,430 --> 01:23:19,350
down here we're gonna assign this thing

1723
01:23:16,409 --> 01:23:25,139
and in terms of the type that gets

1724
01:23:19,350 --> 01:23:31,500
assigned to it what's kind of a little

1725
01:23:25,140 --> 01:23:32,970
bit frustrating about that is that we

1726
01:23:31,500 --> 01:23:34,829
don't actually store that piece of

1727
01:23:32,970 --> 01:23:37,260
information anywhere right it's just

1728
01:23:34,829 --> 01:23:40,470
inside the tags and it's impossible for

1729
01:23:37,260 --> 01:23:42,420
me to actually know whether or not we

1730
01:23:40,470 --> 01:23:44,909
hit this path or this path and we kind

1731
01:23:42,420 --> 01:23:47,190
of need to know because we need to be

1732
01:23:44,909 --> 01:23:57,449
able to set the type ID on whatever this

1733
01:23:47,189 --> 01:23:59,719
thing is I think that's really not that

1734
01:23:57,449 --> 01:24:02,970
big a deal though because inside

1735
01:23:59,720 --> 01:24:06,470
handmade asset it's pretty easy for us

1736
01:24:02,970 --> 01:24:09,539
to just go ahead and take an asset and

1737
01:24:06,470 --> 01:24:13,739
when we look in here and you've got this

1738
01:24:09,539 --> 01:24:15,869
like next of type field it'd be pretty

1739
01:24:13,738 --> 01:24:23,699
trivial for us to just store the type in

1740
01:24:15,869 --> 01:24:27,979
there right so that doesn't really seem

1741
01:24:23,699 --> 01:24:33,329
that bad to me when we do that set asset

1742
01:24:27,979 --> 01:24:39,629
type we could just put it there so maybe

1743
01:24:33,329 --> 01:24:41,519
we'll do that also that stuff is kind of

1744
01:24:39,630 --> 01:24:47,190
irrelevant anyway because we're gonna

1745
01:24:41,520 --> 01:24:50,790
probably eliminate that it's sort of a

1746
01:24:47,189 --> 01:24:51,569
non-issue at this point but anyway so in

1747
01:24:50,789 --> 01:24:54,840
here

1748
01:24:51,569 --> 01:25:00,000
when we do set asset type we want to get

1749
01:24:54,840 --> 01:25:04,590
the asset we want to assert that the

1750
01:25:00,000 --> 01:25:14,189
asset type is zero and then we want to

1751
01:25:04,590 --> 01:25:15,930
set that asset type right again it's a

1752
01:25:14,189 --> 01:25:17,669
little fragile because like what happens

1753
01:25:15,930 --> 01:25:20,760
if you want to change the type of an

1754
01:25:17,670 --> 01:25:22,020
asset it just doesn't work and so I

1755
01:25:20,760 --> 01:25:25,199
think again this is something that we're

1756
01:25:22,020 --> 01:25:26,700
really gonna have to change the way we

1757
01:25:25,199 --> 01:25:28,710
were doing it we had this sort of fairly

1758
01:25:26,699 --> 01:25:29,789
fragile like way that we were looking

1759
01:25:28,710 --> 01:25:31,619
through and this is just for tag

1760
01:25:29,789 --> 01:25:33,750
matching so what we're really going to

1761
01:25:31,619 --> 01:25:34,979
want to do as we go forward is we're

1762
01:25:33,750 --> 01:25:36,539
just going to want to have a tag

1763
01:25:34,979 --> 01:25:42,149
matching index that we just rebuild

1764
01:25:36,539 --> 01:25:44,719
right and so I think like this is it to

1765
01:25:42,149 --> 01:25:44,719
do here

1766
01:26:05,559 --> 01:26:11,449
so I think we just want to make sure

1767
01:26:09,349 --> 01:26:13,849
that that that's a little bit more

1768
01:26:11,448 --> 01:26:16,868
robust going forwards anyway when we

1769
01:26:13,849 --> 01:26:20,630
come through here we're gonna want to do

1770
01:26:16,868 --> 01:26:23,269
set asset type on this thing and so

1771
01:26:20,630 --> 01:26:25,010
we're gonna have to have you know

1772
01:26:23,270 --> 01:26:27,429
something that actually does this check

1773
01:26:25,010 --> 01:26:31,840
here so we don't call this unnecessarily

1774
01:26:27,429 --> 01:26:40,908
and that's gonna be right

1775
01:26:31,840 --> 01:26:45,920
mmm modifications tha yeah no actually

1776
01:26:40,908 --> 01:26:51,558
that's not what I wanted what I actually

1777
01:26:45,920 --> 01:26:53,599
wanted was this so what I want to do

1778
01:26:51,559 --> 01:26:55,730
here is I want to get this piece of

1779
01:26:53,599 --> 01:26:59,869
information out so I want to say like

1780
01:26:55,729 --> 01:27:03,678
hey let's get which asset we're talking

1781
01:26:59,868 --> 01:27:06,979
about in this case and and actually pull

1782
01:27:03,679 --> 01:27:11,300
that out right and I want to make sure

1783
01:27:06,979 --> 01:27:12,589
that the asset index actually exists if

1784
01:27:11,300 --> 01:27:14,210
it doesn't exist I'm not going to do

1785
01:27:12,590 --> 01:27:16,250
anything to it because we don't stamp

1786
01:27:14,210 --> 01:27:20,899
things that aren't there right we only

1787
01:27:16,250 --> 01:27:23,118
stamp things that are and so we'll start

1788
01:27:20,899 --> 01:27:26,868
with that and that needs to be obviously

1789
01:27:23,118 --> 01:27:29,029
in sort of a double for because we're

1790
01:27:26,868 --> 01:27:29,658
going to be going over an entire tag

1791
01:27:29,029 --> 01:27:32,328
array

1792
01:27:29,658 --> 01:27:38,089
stamping anything that we see inside the

1793
01:27:32,328 --> 01:27:44,979
tag array so much like in the code

1794
01:27:38,090 --> 01:27:44,980
is in here somewhere for loop on that

1795
01:27:45,729 --> 01:28:02,329
that's in there somewhere

1796
01:27:48,189 --> 01:28:04,399
no you know so this right where we're

1797
01:28:02,329 --> 01:28:06,289
gonna actually look and see when they

1798
01:28:04,399 --> 01:28:09,348
come through the tag array we're gonna

1799
01:28:06,289 --> 01:28:11,179
figure out like much like this code here

1800
01:28:09,349 --> 01:28:14,360
we're gonna look through all of the

1801
01:28:11,179 --> 01:28:17,029
asset indices in the actual file so

1802
01:28:14,359 --> 01:28:19,519
we're gonna say look there's our counts

1803
01:28:17,029 --> 01:28:21,229
that we're going to go through and then

1804
01:28:19,520 --> 01:28:25,159
we're gonna go through these one by one

1805
01:28:21,229 --> 01:28:28,789
and for each of them we're going to grab

1806
01:28:25,158 --> 01:28:30,500
the asset that corresponds to it

1807
01:28:28,789 --> 01:28:32,899
and we're gonna try and stamp it if

1808
01:28:30,500 --> 01:28:36,399
there actually is an asset there so

1809
01:28:32,899 --> 01:28:36,399
assuming that there is an asset there

1810
01:28:37,029 --> 01:28:43,130
we're gonna take a look and see if that

1811
01:28:39,760 --> 01:28:45,710
asset has a particular type involved

1812
01:28:43,130 --> 01:28:48,109
again we need to get the tags out here

1813
01:28:45,710 --> 01:28:52,130
so if you take a look at the import grid

1814
01:28:48,109 --> 01:28:53,839
tag if I jump out to here and say import

1815
01:28:52,130 --> 01:28:55,609
grid tag array there right we've got the

1816
01:28:53,840 --> 01:28:57,980
first tag index one passed last tag

1817
01:28:55,609 --> 01:29:00,348
index that sort of thing so what I want

1818
01:28:57,979 --> 01:29:09,009
to do here is say let's grab that out so

1819
01:29:00,349 --> 01:29:14,929
here's the tags that go with it rid tags

1820
01:29:09,010 --> 01:29:17,810
like so so now we've got the tags and

1821
01:29:14,929 --> 01:29:20,449
the asset index I guess I can delay

1822
01:29:17,810 --> 01:29:23,349
actually looking for it by doing this if

1823
01:29:20,448 --> 01:29:27,678
we then look to see and say that hey

1824
01:29:23,349 --> 01:29:31,429
there is an asset and we expect to be

1825
01:29:27,679 --> 01:29:33,739
able to do something with it but oddly

1826
01:29:31,429 --> 01:29:37,310
enough there wasn't actually supposed to

1827
01:29:33,738 --> 01:29:41,959
be anything in this slot you know oops

1828
01:29:37,310 --> 01:29:44,469
so we can actually act on that here I'm

1829
01:29:41,960 --> 01:29:44,469
gonna say

1830
01:29:50,429 --> 01:30:00,639
only set this in that case and off we go

1831
01:29:55,600 --> 01:30:01,780
right so that's basically what we're

1832
01:30:00,639 --> 01:30:04,929
dealing with here

1833
01:30:01,779 --> 01:30:09,340
I guess previously we just did this and

1834
01:30:04,929 --> 01:30:12,250
that's fine too so now we start moving

1835
01:30:09,340 --> 01:30:14,050
through this code we set up all of our

1836
01:30:12,250 --> 01:30:15,670
tags and we stamp them and stuff like

1837
01:30:14,050 --> 01:30:17,469
that but as you can see here we want to

1838
01:30:15,670 --> 01:30:20,260
kind of be a little bit broader we need

1839
01:30:17,469 --> 01:30:22,899
to merge these tag sets together all of

1840
01:30:20,260 --> 01:30:24,730
this stuff is fine and so really what we

1841
01:30:22,899 --> 01:30:26,198
want to do here is when we do this stamp

1842
01:30:24,729 --> 01:30:28,869
we need a place to get the errors from

1843
01:30:26,198 --> 01:30:31,629
and that's fine too

1844
01:30:28,869 --> 01:30:34,059
so all of this stuff looks pretty clean

1845
01:30:31,630 --> 01:30:35,409
the stamping should be pretty basic so

1846
01:30:34,060 --> 01:30:37,840
the only thing we're really gonna have

1847
01:30:35,408 --> 01:30:40,089
to do is do a temporary tag build here

1848
01:30:37,840 --> 01:30:42,100
so that we can merge the two sets of

1849
01:30:40,090 --> 01:30:44,590
tags together the one that came from the

1850
01:30:42,100 --> 01:30:48,789
template and the one that's been like

1851
01:30:44,590 --> 01:30:50,590
merged into the file right and so what

1852
01:30:48,789 --> 01:30:53,710
we want to do is is probably jump down

1853
01:30:50,590 --> 01:30:56,409
to parse tag list use the Builder here

1854
01:30:53,710 --> 01:30:59,469
and just merge those two tags together

1855
01:30:56,408 --> 01:31:02,529
so we're gonna do that right here here's

1856
01:30:59,469 --> 01:31:05,710
the easiest way to do that right and

1857
01:31:02,529 --> 01:31:08,859
then when we do our end tags like this

1858
01:31:05,710 --> 01:31:12,279
that's the thing that'll give us the the

1859
01:31:08,859 --> 01:31:13,210
temporary there right um and so let's

1860
01:31:12,279 --> 01:31:17,679
see

1861
01:31:13,210 --> 01:31:21,880
combined tags here write them out there

1862
01:31:17,679 --> 01:31:24,489
and we're done right so I think that's

1863
01:31:21,880 --> 01:31:25,779
all we need to do to get our tag merging

1864
01:31:24,488 --> 01:31:27,939
and all that stuff working in and of

1865
01:31:25,779 --> 01:31:30,039
course asset names and source files and

1866
01:31:27,939 --> 01:31:32,619
errors and all that garbage will you

1867
01:31:30,039 --> 01:31:34,869
know just be in there and so when we

1868
01:31:32,619 --> 01:31:38,829
actually do this import here what we can

1869
01:31:34,869 --> 01:31:41,859
see is when we do our source tags like

1870
01:31:38,829 --> 01:31:44,579
so on we need to merge from two

1871
01:31:41,859 --> 01:31:47,679
different tag arrays we need to first

1872
01:31:44,579 --> 01:31:49,750
merge from the tag array that comes here

1873
01:31:47,679 --> 01:31:53,739
and then we need to merge from the tag

1874
01:31:49,750 --> 01:31:57,369
array that comes and effect just

1875
01:31:53,738 --> 01:32:00,809
duplicate that from the append tags so

1876
01:31:57,369 --> 01:32:00,809
first let's take this one

1877
01:32:01,289 --> 01:32:08,198
we've got that specified right here so

1878
01:32:04,210 --> 01:32:13,060
we just do tags tags we append each of

1879
01:32:08,198 --> 01:32:15,129
those tags on no big deal there that

1880
01:32:13,060 --> 01:32:16,929
should be it and then here we do the

1881
01:32:15,130 --> 01:32:20,980
exact same thing with the ones that

1882
01:32:16,929 --> 01:32:34,239
we're appending right pretty

1883
01:32:20,979 --> 01:32:36,189
straightforward so again we don't need

1884
01:32:34,238 --> 01:32:37,928
to worry about holes in the in the grid

1885
01:32:36,189 --> 01:32:40,178
because we're only going to import when

1886
01:32:37,929 --> 01:32:42,369
there's actually an asset index so

1887
01:32:40,179 --> 01:32:43,899
that's fine we won't like be creating

1888
01:32:42,369 --> 01:32:45,488
assets in places where they didn't exist

1889
01:32:43,899 --> 01:32:48,369
before because we're only gonna ever see

1890
01:32:45,488 --> 01:32:52,149
them I'm gonna go ahead and call this Y

1891
01:32:48,369 --> 01:32:54,000
or X&amp;Y index because we know those are

1892
01:32:52,149 --> 01:32:58,049
the only things we actually have here

1893
01:32:54,000 --> 01:33:01,810
and then I think we're good

1894
01:32:58,050 --> 01:33:04,270
looking through here this is just a dot

1895
01:33:01,810 --> 01:33:06,190
right and we should probably make this

1896
01:33:04,270 --> 01:33:08,620
just being a thing that comes with the

1897
01:33:06,189 --> 01:33:12,428
Builder by default like so that you can

1898
01:33:08,619 --> 01:33:14,948
just say merge and it'll merge tag sets

1899
01:33:12,429 --> 01:33:20,369
let me see what else we got here so tags

1900
01:33:14,948 --> 01:33:20,369
is not a member of import grid tag

1901
01:33:23,460 --> 01:33:39,658
that's true and that's that's I'm not

1902
01:33:36,069 --> 01:33:45,670
sure what the problem is scattered it's

1903
01:33:39,658 --> 01:33:47,920
that's that's all good and in here we've

1904
01:33:45,670 --> 01:33:50,649
got a tokenizer that's got to get passed

1905
01:33:47,920 --> 01:33:53,139
down there I think that's just for

1906
01:33:50,649 --> 01:33:58,899
reporting out of memory errors if I'm

1907
01:33:53,139 --> 01:34:00,940
not entirely mistaken if we want to sort

1908
01:33:58,899 --> 01:34:03,158
of propagate that forward we would need

1909
01:34:00,939 --> 01:34:07,119
to pass the tokenizer here I'm not

1910
01:34:03,158 --> 01:34:08,738
adverse to that because again it just

1911
01:34:07,119 --> 01:34:13,389
helps us report errors at the correct

1912
01:34:08,738 --> 01:34:20,428
location which I like so let's see HHA

1913
01:34:13,389 --> 01:34:20,429
assets in this case what don't we have

1914
01:34:20,969 --> 01:34:28,300
info in this case is just the fields and

1915
01:34:24,998 --> 01:34:33,880
so this is pretty easy to restore that's

1916
01:34:28,300 --> 01:34:36,550
just going to be this like so in here

1917
01:34:33,880 --> 01:34:40,239
where we write the asset file source

1918
01:34:36,550 --> 01:34:42,880
name that is not currently getting

1919
01:34:40,238 --> 01:34:46,118
passed down so we're probably going to

1920
01:34:42,880 --> 01:34:48,489
need to pass that down although really

1921
01:34:46,118 --> 01:34:50,348
it's sort of is because if you take a

1922
01:34:48,488 --> 01:34:51,098
look at what's going on here actually we

1923
01:34:50,349 --> 01:34:53,439
can just get it

1924
01:34:51,099 --> 01:34:55,559
here's that base name and we know what

1925
01:34:53,439 --> 01:34:59,110
that asset source file actually is

1926
01:34:55,559 --> 01:35:03,929
coming from in terms of the source file

1927
01:34:59,109 --> 01:35:06,938
itself so I think that's really just

1928
01:35:03,929 --> 01:35:08,679
that's just fine so I don't know why

1929
01:35:06,939 --> 01:35:10,209
that was actually flagged that may

1930
01:35:08,679 --> 01:35:12,880
actually not have been a problem at all

1931
01:35:10,208 --> 01:35:14,590
so I assume it's just asset file here

1932
01:35:12,880 --> 01:35:17,918
that's the problem we're we're doing it

1933
01:35:14,590 --> 01:35:19,389
right assets string in terms of what

1934
01:35:17,918 --> 01:35:22,868
actually needs to get passed down there

1935
01:35:19,389 --> 01:35:27,458
so if we look at what asset file expects

1936
01:35:22,868 --> 01:35:30,308
I think that wants to know this which we

1937
01:35:27,458 --> 01:35:34,448
haven't actually retrieved yet and so we

1938
01:35:30,309 --> 01:35:38,800
want to get that by index so we want

1939
01:35:34,448 --> 01:35:43,958
like get asset file or get file here and

1940
01:35:38,800 --> 01:35:46,090
I mean this

1941
01:35:43,958 --> 01:35:48,038
soin cure when we actually go to write

1942
01:35:46,090 --> 01:35:50,139
this out and we're calling stamp assets

1943
01:35:48,038 --> 01:35:55,109
we want to be able to get the file in

1944
01:35:50,139 --> 01:35:55,109
question that file is gonna be you know

1945
01:35:55,139 --> 01:36:01,659
whatever are our source says it's going

1946
01:35:58,689 --> 01:36:02,499
to be and from then we should should not

1947
01:36:01,658 --> 01:36:07,109
have a problem with that

1948
01:36:02,498 --> 01:36:07,109
oh and sorry that's called asset file

1949
01:36:09,439 --> 01:36:20,099
right it looks like we're basically done

1950
01:36:17,220 --> 01:36:22,230
so now we just need that HHA asset that

1951
01:36:20,100 --> 01:36:26,010
needs to actually get sort of stamped

1952
01:36:22,229 --> 01:36:29,099
that hij asset is coming from the asset

1953
01:36:26,010 --> 01:36:31,440
itself so we're we're actually writing

1954
01:36:29,100 --> 01:36:38,910
that in that actually needs to be more

1955
01:36:31,439 --> 01:36:41,629
like you know this so that it can

1956
01:36:38,909 --> 01:36:43,649
actually stamp into the asset itself I

1957
01:36:41,630 --> 01:36:45,239
think then we're good to go

1958
01:36:43,649 --> 01:36:48,309
so I think this needs to take the

1959
01:36:45,239 --> 01:36:49,819
tokenizer otherwise we're good

1960
01:36:48,310 --> 01:36:57,450
[Music]

1961
01:36:49,819 --> 01:36:58,920
HHA stem here these are arrows and again

1962
01:36:57,449 --> 01:37:02,609
we're gonna have to flow that down all

1963
01:36:58,920 --> 01:37:09,930
these old paths were written before that

1964
01:37:02,609 --> 01:37:11,639
became passed in and that's it so you

1965
01:37:09,930 --> 01:37:13,950
can see a lot of work a lot of

1966
01:37:11,640 --> 01:37:16,470
bookkeeping but it's slowly starting to

1967
01:37:13,949 --> 01:37:18,389
take reasonable shape and you can see if

1968
01:37:16,470 --> 01:37:21,329
we were writing this originally without

1969
01:37:18,390 --> 01:37:23,250
having sort of wrap route found to it it

1970
01:37:21,329 --> 01:37:24,750
wouldn't be too hard to just make one of

1971
01:37:23,250 --> 01:37:29,729
these from whole cloth there's not that

1972
01:37:24,750 --> 01:37:31,529
much code there right and so as we start

1973
01:37:29,729 --> 01:37:34,919
to refine it I think we're kind of

1974
01:37:31,529 --> 01:37:36,599
zeroing on something reasonable and so

1975
01:37:34,920 --> 01:37:39,960
I'm not too worried about where that's

1976
01:37:36,600 --> 01:37:42,090
going now we should be able to actually

1977
01:37:39,960 --> 01:37:49,079
do an import from the agency and it

1978
01:37:42,090 --> 01:37:51,630
should actually work I think that's at

1979
01:37:49,079 --> 01:37:53,250
the point where it's testable and so the

1980
01:37:51,630 --> 01:37:56,880
thing that wouldn't actually work yet is

1981
01:37:53,250 --> 01:38:00,659
the import that goes from one hht to a

1982
01:37:56,880 --> 01:38:02,159
new one and puts in edited data that

1983
01:38:00,659 --> 01:38:03,689
wouldn't work and the reason that it

1984
01:38:02,159 --> 01:38:07,619
wouldn't work is because we haven't done

1985
01:38:03,689 --> 01:38:09,119
the copy yet and so we'll have to do

1986
01:38:07,619 --> 01:38:11,729
some work there but I think we could

1987
01:38:09,119 --> 01:38:13,800
start to test this and see if this

1988
01:38:11,729 --> 01:38:16,500
actually can start to build hht files

1989
01:38:13,800 --> 01:38:18,720
let's just start down that debugging

1990
01:38:16,500 --> 01:38:20,550
path I think we've got like five minutes

1991
01:38:18,720 --> 01:38:21,880
left let's just see how bad a shape

1992
01:38:20,550 --> 01:38:23,920
we're in

1993
01:38:21,880 --> 01:38:28,389
or actually no I think we have more than

1994
01:38:23,920 --> 01:38:30,599
that I think we actually have 20 minutes

1995
01:38:28,389 --> 01:38:30,599
left

1996
01:38:35,319 --> 01:38:41,409
all right um so what I want to do here

1997
01:38:39,550 --> 01:38:42,430
is I want to compile in debug mode and I

1998
01:38:41,409 --> 01:38:43,359
would just want to kind of step through

1999
01:38:42,430 --> 01:38:46,990
the code oh whoops

2000
01:38:43,359 --> 01:38:49,449
we've got two of those open my bad those

2001
01:38:46,989 --> 01:38:56,559
there I want to compile in debug mode

2002
01:38:49,449 --> 01:38:59,019
and I want to look through this code and

2003
01:38:56,560 --> 01:39:01,150
just see what what's going on

2004
01:38:59,020 --> 01:39:03,730
right because we've done a ton of stuff

2005
01:39:01,149 --> 01:39:05,139
we probably made a lot of mistakes and

2006
01:39:03,729 --> 01:39:08,439
so we want to kind of start to look and

2007
01:39:05,140 --> 01:39:10,900
look through what we're doing and see

2008
01:39:08,439 --> 01:39:20,379
how it's going so I want to go ahead and

2009
01:39:10,899 --> 01:39:22,839
jump oh and you know what we never set

2010
01:39:20,380 --> 01:39:26,529
that asset type to zero when we

2011
01:39:22,840 --> 01:39:30,819
initialize an asset yet so we should do

2012
01:39:26,529 --> 01:39:33,840
that let's go ahead and look at set

2013
01:39:30,819 --> 01:39:33,840
asset type

2014
01:39:41,810 --> 01:39:47,820
so you can see it here when we actually

2015
01:39:45,779 --> 01:39:51,329
allocate these you can see us doing it

2016
01:39:47,819 --> 01:40:02,219
so what we want to do is say type equals

2017
01:39:51,329 --> 01:40:03,840
zero where is that next of type next so

2018
01:40:02,220 --> 01:40:08,840
what's interesting about that is we're

2019
01:40:03,840 --> 01:40:08,840
not initializing that next of type oh

2020
01:40:10,100 --> 01:40:14,730
there we go and I'm like so it should

2021
01:40:12,300 --> 01:40:16,710
have been initialized for us as a clear

2022
01:40:14,729 --> 01:40:20,250
to zero so that was because I actually

2023
01:40:16,710 --> 01:40:21,510
that we left it not in there but that

2024
01:40:20,250 --> 01:40:23,250
does remind me there's a couple other

2025
01:40:21,510 --> 01:40:25,050
things we did want to do here so that

2026
01:40:23,250 --> 01:40:27,060
deaths file index is probably not going

2027
01:40:25,050 --> 01:40:28,170
to get set here because when we load the

2028
01:40:27,060 --> 01:40:30,780
things and it's not going to say where

2029
01:40:28,170 --> 01:40:34,010
it came from we do want it to say where

2030
01:40:30,779 --> 01:40:39,119
it came from so if you look in here and

2031
01:40:34,010 --> 01:40:41,640
you know we go back to ham audacity age

2032
01:40:39,119 --> 01:40:44,430
so as we come through here and we see

2033
01:40:41,640 --> 01:40:46,770
this like asset source file that desk

2034
01:40:44,430 --> 01:40:50,930
file index when we create that asset

2035
01:40:46,770 --> 01:40:50,930
source file we want that to be specified

2036
01:40:51,289 --> 01:40:58,100
and so in here where we actually create

2037
01:40:54,000 --> 01:40:58,100
the source file in question

2038
01:41:05,300 --> 01:41:11,239
and you can see we do a getter create

2039
01:41:07,989 --> 01:41:14,359
what I want to do there is I want to

2040
01:41:11,239 --> 01:41:16,460
have that when that gets rid in I want

2041
01:41:14,359 --> 01:41:23,750
that to say where it came from

2042
01:41:16,460 --> 01:41:26,149
right and so in here the the setting

2043
01:41:23,750 --> 01:41:29,180
that we set like that

2044
01:41:26,149 --> 01:41:32,359
that desk file index wants to get set in

2045
01:41:29,180 --> 01:41:40,159
here so when we get that source file I

2046
01:41:32,359 --> 01:41:42,109
want that to be like set okay and that

2047
01:41:40,159 --> 01:41:43,849
because we weren't that was a new field

2048
01:41:42,109 --> 01:41:46,939
we added that you know wouldn't never

2049
01:41:43,850 --> 01:41:48,920
have gotten set would never get set all

2050
01:41:46,939 --> 01:41:51,039
right so moving on again like I said I

2051
01:41:48,920 --> 01:41:52,909
want to step through some of this code

2052
01:41:51,039 --> 01:41:56,300
here's the game loading these are the

2053
01:41:52,909 --> 01:41:58,099
old age eight days right so that's you

2054
01:41:56,300 --> 01:41:59,810
know nothing's going on there and so the

2055
01:41:58,100 --> 01:42:01,579
first thing that should happen is if we

2056
01:41:59,810 --> 01:42:04,340
actually try to trigger a rebuild

2057
01:42:01,579 --> 01:42:06,289
we should get hit here and I'm expecting

2058
01:42:04,340 --> 01:42:11,060
we'll get an error because we currently

2059
01:42:06,289 --> 01:42:13,880
don't ever create new files right and so

2060
01:42:11,060 --> 01:42:15,980
when we start parsing and we say this is

2061
01:42:13,880 --> 01:42:18,470
the HHA this should go into we should

2062
01:42:15,979 --> 01:42:19,789
not find that HHA and so this is what

2063
01:42:18,470 --> 01:42:22,610
i'm expecting to happen if we

2064
01:42:19,789 --> 01:42:26,149
miraculously have no bugs that's what

2065
01:42:22,609 --> 01:42:27,199
should happen right but we probably do

2066
01:42:26,149 --> 01:42:29,479
have bug so that's probably not what's

2067
01:42:27,199 --> 01:42:31,159
gonna happen but just so you know that's

2068
01:42:29,479 --> 01:42:32,869
what we're talking about so I'm going to

2069
01:42:31,159 --> 01:42:36,590
hit important save and I think we're

2070
01:42:32,869 --> 01:42:38,510
supposed to when we hit that button we

2071
01:42:36,590 --> 01:42:42,610
should get down to here now handmade

2072
01:42:38,510 --> 01:42:42,610
internal we didn't turn that off did we

2073
01:42:43,210 --> 01:42:47,060
it's up to one so when I push that

2074
01:42:45,949 --> 01:42:48,559
button we should get breakpoint here

2075
01:42:47,060 --> 01:42:50,060
it's making me a little nervous that

2076
01:42:48,560 --> 01:42:52,490
this is grayed out how does it know that

2077
01:42:50,060 --> 01:42:54,289
handmade internal isn't bound to find I

2078
01:42:52,489 --> 01:42:59,719
mean we should be able to see that code

2079
01:42:54,289 --> 01:43:00,310
path right yeah so just cuz it's grayed

2080
01:42:59,720 --> 01:43:02,960
out

2081
01:43:00,310 --> 01:43:06,050
that's just visual studio being its

2082
01:43:02,960 --> 01:43:07,609
usual bug itself so here we go

2083
01:43:06,050 --> 01:43:10,789
first we're gonna say let's get all the

2084
01:43:07,609 --> 01:43:13,599
hht files and hey look we got one let's

2085
01:43:10,789 --> 01:43:13,600
see what it actually is

2086
01:43:18,378 --> 01:43:23,118
it's intro cutscene that hht that's

2087
01:43:20,510 --> 01:43:24,619
great that's correct so we're gonna open

2088
01:43:23,118 --> 01:43:27,108
that file and we're gonna read in the

2089
01:43:24,618 --> 01:43:28,818
contents and then really close it right

2090
01:43:27,109 --> 01:43:30,379
and so what we should see now is we

2091
01:43:28,819 --> 01:43:31,969
should have a file buffer here if that

2092
01:43:30,378 --> 01:43:34,698
file buffer should have the entire thing

2093
01:43:31,969 --> 01:43:36,918
in it if I open up this little text

2094
01:43:34,698 --> 01:43:39,588
viewer here you can see like hey that's

2095
01:43:36,918 --> 01:43:41,628
exactly what we expect so off to a

2096
01:43:39,588 --> 01:43:43,849
reasonable start we're gonna start

2097
01:43:41,628 --> 01:43:46,248
tokenizing again tokenizer is now

2098
01:43:43,849 --> 01:43:47,479
supposed to have things like file and

2099
01:43:46,248 --> 01:43:49,309
line number information let's make sure

2100
01:43:47,479 --> 01:43:52,548
that's right yeah it's there that's good

2101
01:43:49,309 --> 01:43:55,939
the file name is intro cutscene that's

2102
01:43:52,548 --> 01:44:00,260
exactly what we expect so off we go

2103
01:43:55,939 --> 01:44:02,569
we start our parsing we get a token what

2104
01:44:00,260 --> 01:44:06,350
is that first token pray tell because we

2105
01:44:02,569 --> 01:44:09,689
don't know let's see the first token is

2106
01:44:06,350 --> 01:44:09,689
[Music]

2107
01:44:09,939 --> 01:44:26,809
an unknown so our tokenizer is busted

2108
01:44:20,559 --> 01:44:29,809
and we need to fix it it didn't parse

2109
01:44:26,809 --> 01:44:32,628
the comment which it was supposed to

2110
01:44:29,809 --> 01:44:37,659
parse so I'm gonna go ahead and rerun

2111
01:44:32,628 --> 01:44:40,298
that and do that operation a second time

2112
01:44:37,658 --> 01:44:42,648
so I'm just gonna click this button and

2113
01:44:40,298 --> 01:44:46,969
let's see what happens I'm gonna run to

2114
01:44:42,649 --> 01:44:48,798
here and step in the first thing we call

2115
01:44:46,969 --> 01:44:51,948
is get token raw that's exactly what we

2116
01:44:48,798 --> 01:44:55,309
should call and so now we're gonna take

2117
01:44:51,948 --> 01:44:58,219
a look at what the character settings

2118
01:44:55,309 --> 01:45:01,489
actually are so here's our C it's set to

2119
01:44:58,219 --> 01:45:03,828
forward slash we jump into here we look

2120
01:45:01,488 --> 01:45:06,558
in and check what it actually is now we

2121
01:45:03,828 --> 01:45:08,808
should hit one of these comment paths

2122
01:45:06,559 --> 01:45:11,689
should be this one right so we should

2123
01:45:08,809 --> 01:45:13,609
parse into there but we're not okay so

2124
01:45:11,689 --> 01:45:18,829
we're not actually that match didn't

2125
01:45:13,609 --> 01:45:21,079
work probably you know why it's because

2126
01:45:18,828 --> 01:45:24,858
we already sucked up that character so

2127
01:45:21,078 --> 01:45:28,488
actually yeah this path is is not

2128
01:45:24,859 --> 01:45:29,030
correct so we gotta fix that when we did

2129
01:45:28,488 --> 01:45:33,229
that actually

2130
01:45:29,029 --> 01:45:39,380
port we screwed it up totally fine so

2131
01:45:33,229 --> 01:45:41,929
this actually needs to be see and this

2132
01:45:39,380 --> 01:45:44,779
needs to actually be based on whatever

2133
01:45:41,930 --> 01:45:54,550
the thing we're going to advance is

2134
01:45:44,779 --> 01:45:54,550
right and so it really looks like this

2135
01:45:56,680 --> 01:46:15,730
and so that still probably should be

2136
01:45:59,270 --> 01:46:15,730
fine everything else think is okay

2137
01:46:22,729 --> 01:46:28,948
that's probably fine

2138
01:46:25,850 --> 01:46:28,949
[Music]

2139
01:46:44,500 --> 01:46:50,988
looking at the parsing of is number that

2140
01:46:47,988 --> 01:46:55,509
looks incorrect because as you can see

2141
01:46:50,988 --> 01:47:00,399
it's sort of doing a peak on C there and

2142
01:46:55,510 --> 01:47:00,400
it won't you want to actually have that

2143
01:47:00,579 --> 01:47:13,670
first digit recorded properly so this

2144
01:47:04,399 --> 01:47:15,319
should actually be this right so you

2145
01:47:13,670 --> 01:47:17,090
know looking through this probably we

2146
01:47:15,319 --> 01:47:22,969
shouldn't have pulled we shouldn't have

2147
01:47:17,090 --> 01:47:26,560
pulled the advance it probably would

2148
01:47:22,969 --> 01:47:26,560
have been smarter not to do that

2149
01:47:33,060 --> 01:47:38,140
yeah so that might not have been the

2150
01:47:35,739 --> 01:47:41,260
smartest way to write that but that's

2151
01:47:38,140 --> 01:47:43,180
okay you can see what the bug was right

2152
01:47:41,260 --> 01:47:47,560
so it's pretty straightforward I'm gonna

2153
01:47:43,180 --> 01:47:51,579
jump right to here so that we can you

2154
01:47:47,560 --> 01:47:56,770
know debug that more easily oops

2155
01:47:51,579 --> 01:47:59,109
I don't know what that did so when we

2156
01:47:56,770 --> 01:48:03,310
start parsing here I'm going to jump

2157
01:47:59,109 --> 01:48:05,229
into the get token draw and when I do

2158
01:48:03,310 --> 01:48:09,789
this switch now I'm expecting to be able

2159
01:48:05,229 --> 01:48:12,909
to flow through this comment block and

2160
01:48:09,789 --> 01:48:15,390
thankfully I actually do now and so we

2161
01:48:12,909 --> 01:48:18,729
kind of eat away you can see it slowly

2162
01:48:15,390 --> 01:48:20,410
eating through this string when by the

2163
01:48:18,729 --> 01:48:24,819
time we get to here we should have eaten

2164
01:48:20,409 --> 01:48:27,659
the entire comment hopefully and if we

2165
01:48:24,819 --> 01:48:30,279
see that we actually did get a valid

2166
01:48:27,659 --> 01:48:33,340
stopping point here we can advance

2167
01:48:30,279 --> 01:48:36,340
forward this should really check the

2168
01:48:33,340 --> 01:48:38,380
entire thing I'm not sure why it didn't

2169
01:48:36,340 --> 01:48:40,650
I guess it doesn't really matter cuz the

2170
01:48:38,380 --> 01:48:44,760
advance cares too should still work

2171
01:48:40,649 --> 01:48:48,729
either way so it's probably fine but

2172
01:48:44,760 --> 01:48:50,710
anyway so we now get the token it's a

2173
01:48:48,729 --> 01:48:52,119
comment so we should get another token

2174
01:48:50,710 --> 01:48:54,760
and let's see if we get the correct

2175
01:48:52,119 --> 01:48:58,390
token this time we got an end-of-line

2176
01:48:54,760 --> 01:49:00,100
token that's also correct so when we

2177
01:48:58,390 --> 01:49:04,119
look at that the line number should

2178
01:49:00,100 --> 01:49:07,539
actually advance and it did right so

2179
01:49:04,119 --> 01:49:12,939
that's good we'll skip that and now we

2180
01:49:07,539 --> 01:49:15,269
should see what's the token we got now

2181
01:49:12,939 --> 01:49:15,269
some

2182
01:49:19,850 --> 01:49:24,930
just some more notes these are the

2183
01:49:23,130 --> 01:49:26,010
assets for the intro cutscene is that

2184
01:49:24,930 --> 01:49:29,030
what should actually they let's see what

2185
01:49:26,010 --> 01:49:29,030
the actual files I don't remember

2186
01:49:32,300 --> 01:49:36,930
so what token did we actually get back

2187
01:49:36,329 --> 01:49:42,390
here

2188
01:49:36,930 --> 01:49:45,720
we got an end-of-line and there's a note

2189
01:49:42,390 --> 01:49:48,380
Casey but I don't understand where

2190
01:49:45,720 --> 01:49:48,380
that's coming from

2191
01:49:51,020 --> 01:49:56,940
I'm looking at the wrong file ok so no

2192
01:49:54,720 --> 01:50:00,869
that's right that's another comment it

2193
01:49:56,939 --> 01:50:11,809
should get skipped that's exactly what I

2194
01:50:00,869 --> 01:50:14,430
expect and now we've got to our string

2195
01:50:11,810 --> 01:50:16,650
right so the first thing we got was a

2196
01:50:14,430 --> 01:50:18,500
string that doesn't seem right because

2197
01:50:16,649 --> 01:50:22,529
we should have gotten identifiers first

2198
01:50:18,500 --> 01:50:26,069
right so that seems a still a little

2199
01:50:22,529 --> 01:50:33,359
broken because the first thing that we

2200
01:50:26,069 --> 01:50:34,859
got there unless I'm mistaken oh no it

2201
01:50:33,359 --> 01:50:36,710
wasn't it was token identifier alright

2202
01:50:34,859 --> 01:50:40,199
nevermind I just misread that branch

2203
01:50:36,710 --> 01:50:42,270
okay good so we look here and we've got

2204
01:50:40,199 --> 01:50:44,488
a token identifier and we immediately

2205
01:50:42,270 --> 01:50:46,500
hit an error and that's actually correct

2206
01:50:44,488 --> 01:50:50,009
impart blocks are not allowed to appear

2207
01:50:46,500 --> 01:50:52,949
so that's actually great we caught that

2208
01:50:50,010 --> 01:50:57,420
error and didn't do the parse and so

2209
01:50:52,949 --> 01:50:59,159
what we know there is this doesn't have

2210
01:50:57,420 --> 01:51:03,480
the HHA on it

2211
01:50:59,159 --> 01:51:05,609
right and so I'm tempted to say let's

2212
01:51:03,479 --> 01:51:07,079
leave that error in there so that we can

2213
01:51:05,609 --> 01:51:09,059
work on our error processing so I'm

2214
01:51:07,079 --> 01:51:11,909
gonna go ahead and say let's not change

2215
01:51:09,060 --> 01:51:14,370
that let's go to base game data hht and

2216
01:51:11,909 --> 01:51:17,130
watch it parse this and see how that

2217
01:51:14,369 --> 01:51:19,010
goes so here we are in parsing that one

2218
01:51:17,130 --> 01:51:22,199
let's take a look at that first token

2219
01:51:19,010 --> 01:51:24,420
that's going to be the the directive so

2220
01:51:22,199 --> 01:51:26,819
we look at that directive here's the HHA

2221
01:51:24,420 --> 01:51:29,399
we're gonna get that stem what's the

2222
01:51:26,819 --> 01:51:30,809
stem it's base game we're gonna try and

2223
01:51:29,399 --> 01:51:31,259
get that we should get back a zero

2224
01:51:30,810 --> 01:51:33,150
because

2225
01:51:31,260 --> 01:51:36,060
won't find it it doesn't we get the

2226
01:51:33,149 --> 01:51:40,349
error there and then we can move on

2227
01:51:36,060 --> 01:51:42,989
right so again our token thing was a

2228
01:51:40,350 --> 01:51:45,180
little busted other than that our error

2229
01:51:42,988 --> 01:51:47,819
checking actually passed with flying

2230
01:51:45,180 --> 01:51:50,570
colors at least for those first basic

2231
01:51:47,819 --> 01:51:52,710
errors it prevented two errors one

2232
01:51:50,569 --> 01:51:55,259
trying to start writing to a file that

2233
01:51:52,710 --> 01:52:00,569
it couldn't actually open and another

2234
01:51:55,260 --> 01:52:03,300
one that's you know just there to try

2235
01:52:00,569 --> 01:52:05,009
and make sure that you've specified

2236
01:52:03,300 --> 01:52:10,500
where you're actually gonna write things

2237
01:52:05,010 --> 01:52:12,680
to now what we want to do here is figure

2238
01:52:10,500 --> 01:52:16,140
out how we do want to handle this case

2239
01:52:12,680 --> 01:52:19,430
where you're specifying an HHH a that

2240
01:52:16,140 --> 01:52:31,230
doesn't actually exist and so if I do a

2241
01:52:19,430 --> 01:52:33,090
get or create this call right here it's

2242
01:52:31,229 --> 01:52:38,369
going to look to see whether or not it

2243
01:52:33,090 --> 01:52:41,310
can find the HHA in question and if it

2244
01:52:38,369 --> 01:52:41,729
can't we want to potentially create a

2245
01:52:41,310 --> 01:52:45,000
blank

2246
01:52:41,729 --> 01:52:47,879
HHA now we do know how to create a blank

2247
01:52:45,000 --> 01:52:51,479
HHA because in our HHA edit we actually

2248
01:52:47,880 --> 01:52:53,909
have a - create call right and so right

2249
01:52:51,479 --> 01:52:56,429
here that already does exist and you can

2250
01:52:53,909 --> 01:52:58,920
see it's pretty trivial all it does is

2251
01:52:56,430 --> 01:53:01,020
just write a blank header into the file

2252
01:52:58,920 --> 01:53:03,539
and furthermore that hutter is gonna get

2253
01:53:01,020 --> 01:53:05,310
rewritten like every time anyway so we

2254
01:53:03,539 --> 01:53:07,859
almost don't even really need to do that

2255
01:53:05,310 --> 01:53:09,390
if we don't want to because when we

2256
01:53:07,859 --> 01:53:12,179
actually go to open that file for

2257
01:53:09,390 --> 01:53:14,520
writing it would just rewrite the header

2258
01:53:12,180 --> 01:53:17,610
anyway if it actually had any data to

2259
01:53:14,520 --> 01:53:19,080
write in the first place but either way

2260
01:53:17,609 --> 01:53:20,699
let's suppose we were going to do this

2261
01:53:19,079 --> 01:53:25,439
we would want to do the equivalent of

2262
01:53:20,699 --> 01:53:28,170
that and we'd want some way of opening

2263
01:53:25,439 --> 01:53:30,059
an actual file handle that would create

2264
01:53:28,170 --> 01:53:32,069
the file for us now that's not that hard

2265
01:53:30,060 --> 01:53:34,860
to do we just need our platform layer to

2266
01:53:32,069 --> 01:53:37,170
be a little bit more understanding

2267
01:53:34,859 --> 01:53:40,799
because what happens at the moment is

2268
01:53:37,170 --> 01:53:43,619
that if we actually say platform get

2269
01:53:40,800 --> 01:53:45,719
file by path there's no way to tell this

2270
01:53:43,619 --> 01:53:50,219
thing that we actually want to make

2271
01:53:45,719 --> 01:53:52,769
it always exists right and so what we

2272
01:53:50,219 --> 01:53:55,229
could do here is say well you know we've

2273
01:53:52,769 --> 01:53:58,440
already got these mode flags let's just

2274
01:53:55,229 --> 01:54:01,380
tell it hey you know what you pass those

2275
01:53:58,439 --> 01:54:03,658
flags when you do this as well

2276
01:54:01,380 --> 01:54:06,779
so that if you asked and get a file by

2277
01:54:03,658 --> 01:54:08,848
path we can actually create it if it

2278
01:54:06,779 --> 01:54:12,988
doesn't exist and so if we jump back

2279
01:54:08,849 --> 01:54:16,998
down to the win32 code path there and we

2280
01:54:12,988 --> 01:54:21,868
look at the open file by path in here

2281
01:54:16,998 --> 01:54:23,519
sorry get file by path in here where we

2282
01:54:21,868 --> 01:54:26,069
actually get that information you can

2283
01:54:23,519 --> 01:54:28,498
see us getting the information here what

2284
01:54:26,069 --> 01:54:29,849
we can do is we can allocate file info

2285
01:54:28,498 --> 01:54:31,139
for something that doesn't actually

2286
01:54:29,849 --> 01:54:33,869
exist

2287
01:54:31,139 --> 01:54:37,139
and return that if you asked us to write

2288
01:54:33,868 --> 01:54:40,319
to it right so if you told us we want to

2289
01:54:37,139 --> 01:54:42,599
write to this file we can create it and

2290
01:54:40,319 --> 01:54:44,518
so what I'll do there is say hey let's

2291
01:54:42,599 --> 01:54:48,739
do a get file attributes and we'll do

2292
01:54:44,519 --> 01:54:51,599
the result here if we couldn't get that

2293
01:54:48,738 --> 01:54:56,178
let's create the file and then try again

2294
01:54:51,599 --> 01:55:00,510
right so I really just want to do this

2295
01:54:56,179 --> 01:55:02,219
so that we'll try twice makes sense and

2296
01:55:00,510 --> 01:55:04,650
so what I want to do is have a create

2297
01:55:02,219 --> 01:55:07,349
file here where we do you know

2298
01:55:04,649 --> 01:55:09,359
essentially this and so in the case

2299
01:55:07,349 --> 01:55:12,449
where we say get file attributes and it

2300
01:55:09,359 --> 01:55:15,029
doesn't actually return we'll do a test

2301
01:55:12,448 --> 01:55:17,848
here to say well if the mode says that

2302
01:55:15,029 --> 01:55:19,078
you would allow writing so you're trying

2303
01:55:17,849 --> 01:55:21,679
to actually create one of these

2304
01:55:19,078 --> 01:55:24,029
potentially if it doesn't exists already

2305
01:55:21,679 --> 01:55:28,139
then we'll just say all right if you

2306
01:55:24,029 --> 01:55:31,738
wanted to open it for writing then when

2307
01:55:28,139 --> 01:55:33,328
we do this we can you know do the full

2308
01:55:31,738 --> 01:55:34,828
nine yards with the permissions and the

2309
01:55:33,328 --> 01:55:39,448
creation and all that sort of stuff and

2310
01:55:34,828 --> 01:55:42,179
then if we get back a valid handle then

2311
01:55:39,448 --> 01:55:45,569
what we can do is you know process it

2312
01:55:42,179 --> 01:55:49,849
from there right and we actually have I

2313
01:55:45,569 --> 01:55:49,849
think yeah

2314
01:55:50,890 --> 01:55:57,250
we can just do a closed handle on that

2315
01:55:54,250 --> 01:55:57,609
and then get the file info and go from

2316
01:55:57,250 --> 01:56:00,130
there

2317
01:55:57,609 --> 01:56:03,489
so what we really need is just a way to

2318
01:56:00,130 --> 01:56:05,380
get generate our are you know sort of

2319
01:56:03,489 --> 01:56:06,939
creation operations you know generic

2320
01:56:05,380 --> 01:56:10,359
right open always that sort of stuff

2321
01:56:06,939 --> 01:56:12,759
right so we would really need something

2322
01:56:10,359 --> 01:56:14,920
that does that now if we want to we can

2323
01:56:12,760 --> 01:56:18,909
we can actually make it so that we don't

2324
01:56:14,920 --> 01:56:22,720
actually have to create that that data

2325
01:56:18,909 --> 01:56:25,779
so the win32 allocate file info where is

2326
01:56:22,720 --> 01:56:27,940
that in to allocate oops into to

2327
01:56:25,779 --> 01:56:29,739
allocate file info what you can see

2328
01:56:27,939 --> 01:56:31,779
there is that just uses like this sort

2329
01:56:29,739 --> 01:56:34,090
of synthetic stuff we could just say

2330
01:56:31,779 --> 01:56:38,559
let's just give it a fake one of those

2331
01:56:34,090 --> 01:56:39,819
right and have it have it used that so

2332
01:56:38,560 --> 01:56:40,930
we don't even really need to do this

2333
01:56:39,819 --> 01:56:42,369
part because that would happen

2334
01:56:40,930 --> 01:56:44,920
automatically so what we could do is say

2335
01:56:42,369 --> 01:56:48,640
all right let's create a fake one of

2336
01:56:44,920 --> 01:56:51,310
these as necessary right and and just

2337
01:56:48,640 --> 01:57:00,880
say yeah in fact we could just say like

2338
01:56:51,310 --> 01:57:02,530
zero struct out that data right and set

2339
01:57:00,880 --> 01:57:06,239
the relevant portions of it like the

2340
01:57:02,529 --> 01:57:06,239
past sixteen part and so on

2341
01:57:10,639 --> 01:57:20,000
that seems pretty reasonable to me now

2342
01:57:18,829 --> 01:57:21,859
I'm looking at this here and I'm just

2343
01:57:20,000 --> 01:57:24,039
wondering when we're taking a look at

2344
01:57:21,859 --> 01:57:26,750
this where we do win through to allocate

2345
01:57:24,039 --> 01:57:29,359
file data I'm not sure where it's

2346
01:57:26,750 --> 01:57:39,109
actually getting the name from though

2347
01:57:29,359 --> 01:57:41,179
where is that actually happening so this

2348
01:57:39,109 --> 01:57:49,670
is actually incomplete isn't it because

2349
01:57:41,179 --> 01:57:54,020
this past 16 is never getting set on

2350
01:57:49,670 --> 01:57:56,408
there so this is actually not right you

2351
01:57:54,020 --> 01:57:56,409
know I'm saying

2352
01:58:04,279 --> 01:58:09,389
because that information should have

2353
01:58:06,359 --> 01:58:21,059
been passed down so yeah we didn't quite

2354
01:58:09,390 --> 01:58:22,619
finish this code it looks like because

2355
01:58:21,060 --> 01:58:25,140
here's where that's getting created here

2356
01:58:22,619 --> 01:58:26,909
right it does a allocate file info but

2357
01:58:25,140 --> 01:58:28,590
then it does this operation that you

2358
01:58:26,909 --> 01:58:30,359
actually do need to do right where it

2359
01:58:28,590 --> 01:58:31,800
puts the information in for what the

2360
01:58:30,359 --> 01:58:36,750
platform is going to need to open the

2361
01:58:31,800 --> 01:58:42,180
file that's actually getting copied in

2362
01:58:36,750 --> 01:58:50,310
there and we're not doing that and we

2363
01:58:42,180 --> 01:58:54,210
need to do that right so in this routine

2364
01:58:50,310 --> 01:58:55,110
where we actually call win32 get filed

2365
01:58:54,210 --> 01:59:02,969
by path

2366
01:58:55,109 --> 01:59:05,009
this was actually bogus yeah we should

2367
01:59:02,969 --> 01:59:08,779
have done that way so what we should be

2368
01:59:05,010 --> 01:59:08,780
doing here is we should say look

2369
01:59:18,500 --> 01:59:32,479
if we can get this or we're writing to

2370
01:59:29,510 --> 01:59:34,640
it so even if this fails we'll still do

2371
01:59:32,479 --> 01:59:36,709
this and then at the end here we just

2372
01:59:34,640 --> 01:59:39,380
need to set those actual parameters

2373
01:59:36,710 --> 01:59:42,050
right because those the file name and

2374
01:59:39,380 --> 01:59:44,420
stuff was not getting set here so in the

2375
01:59:42,050 --> 01:59:47,480
when we actually get that file info back

2376
01:59:44,420 --> 01:59:50,270
we need to set you know base name and we

2377
01:59:47,479 --> 01:59:52,459
need to set platform now in here we've

2378
01:59:50,270 --> 01:59:54,650
already got it so it's pretty easy right

2379
01:59:52,460 --> 01:59:59,239
the past 16 is the platform name and

2380
01:59:54,649 --> 02:00:01,729
you're passing in the actual path itself

2381
01:59:59,239 --> 02:00:03,409
so that we could put in here and you

2382
02:00:01,729 --> 02:00:07,069
know maybe we should duplicate it or not

2383
02:00:03,409 --> 02:00:12,619
I'm not sure like to do KC like should

2384
02:00:07,069 --> 02:00:14,149
the base name be duplicated and maybe

2385
02:00:12,619 --> 02:00:17,119
the answer is yes maybe the answer is no

2386
02:00:14,149 --> 02:00:18,949
I really couldn't tell you but in this

2387
02:00:17,119 --> 02:00:21,470
case you know that that's the open

2388
02:00:18,949 --> 02:00:22,729
question but what would happen in here

2389
02:00:21,470 --> 02:00:25,039
if we wanted to get or create one of

2390
02:00:22,729 --> 02:00:28,659
these is we would first need to you know

2391
02:00:25,039 --> 02:00:33,519
get that file by path using a file group

2392
02:00:28,659 --> 02:00:36,979
that we you know that we create somehow

2393
02:00:33,520 --> 02:00:40,610
and then we'd have to open the file

2394
02:00:36,979 --> 02:00:42,379
handle for writing now that file group I

2395
02:00:40,609 --> 02:00:45,920
believe do we actually have that in the

2396
02:00:42,380 --> 02:00:47,630
assets itself because I should have

2397
02:00:45,920 --> 02:00:50,869
actually stored it let me take a look at

2398
02:00:47,630 --> 02:00:54,710
where we do that so when we actually do

2399
02:00:50,869 --> 02:00:57,590
a platform file group here we do get all

2400
02:00:54,710 --> 02:00:59,480
files of type again and then we come

2401
02:00:57,590 --> 02:01:04,130
down here yeah we do get all files of

2402
02:00:59,479 --> 02:01:06,079
type end and so that needs to I mean we

2403
02:01:04,130 --> 02:01:08,119
could keep it around I guess we don't

2404
02:01:06,079 --> 02:01:09,710
really have to though because what we

2405
02:01:08,119 --> 02:01:14,710
could do here just say like look open

2406
02:01:09,710 --> 02:01:19,670
the file group for these things like so

2407
02:01:14,710 --> 02:01:21,980
right and then we want to create one of

2408
02:01:19,670 --> 02:01:24,079
these things by name in the case where

2409
02:01:21,979 --> 02:01:28,039
where it actually wasn't already in

2410
02:01:24,079 --> 02:01:29,689
existence so it's a little janky I don't

2411
02:01:28,039 --> 02:01:31,699
know how I feel about it I feel like we

2412
02:01:29,689 --> 02:01:33,759
want to kind of clean up the way we're

2413
02:01:31,699 --> 02:01:36,738
doing the

2414
02:01:33,760 --> 02:01:39,320
we kind of need something a little bit

2415
02:01:36,738 --> 02:01:41,718
more purpose-built for the types of

2416
02:01:39,319 --> 02:01:43,368
operations we're actually doing but for

2417
02:01:41,719 --> 02:01:45,260
the most part it's still pretty good so

2418
02:01:43,368 --> 02:01:53,210
we here what we want to do is you know

2419
02:01:45,260 --> 02:01:55,309
get file by path and we want to do

2420
02:01:53,210 --> 02:02:09,889
something that looks sort of like this

2421
02:01:55,309 --> 02:02:11,840
right and so at least at the moment what

2422
02:02:09,889 --> 02:02:14,270
we want to do is is get that out of the

2423
02:02:11,840 --> 02:02:15,739
data directory actually we don't mean to

2424
02:02:14,270 --> 02:02:21,110
do it like that so we just need to do

2425
02:02:15,738 --> 02:02:23,178
like data and then the stem right and

2426
02:02:21,109 --> 02:02:25,639
then we have to to sort of create that

2427
02:02:23,179 --> 02:02:33,920
HHA and it doesn't actually exist yet

2428
02:02:25,639 --> 02:02:35,510
right so we need to sort of bootstrap it

2429
02:02:33,920 --> 02:02:37,908
if you will so if we take a look at how

2430
02:02:35,510 --> 02:02:40,570
this works in here we would need to take

2431
02:02:37,908 --> 02:02:43,939
that stem and we just need to put it in

2432
02:02:40,569 --> 02:02:48,019
right like so and then we would want to

2433
02:02:43,939 --> 02:02:50,988
get that as a path to the extent that it

2434
02:02:48,020 --> 02:02:52,579
is able to do so and then when we call

2435
02:02:50,988 --> 02:02:54,439
that function remember we need to now

2436
02:02:52,578 --> 02:02:57,349
say what we're actually going to be

2437
02:02:54,439 --> 02:03:01,098
doing with this so you know are we

2438
02:02:57,349 --> 02:03:07,039
reading or writing and in this case we

2439
02:03:01,099 --> 02:03:09,260
want to be able to do both so when we

2440
02:03:07,039 --> 02:03:09,649
come through here when we create the

2441
02:03:09,260 --> 02:03:13,099
blank

2442
02:03:09,649 --> 02:03:15,289
HHA this is us doing that and we just

2443
02:03:13,099 --> 02:03:18,590
need a way to write it and so we need to

2444
02:03:15,289 --> 02:03:27,639
do like a write file so in here where

2445
02:03:18,590 --> 02:03:33,380
we've got write data to file we need to

2446
02:03:27,639 --> 02:03:39,429
pass the file handle and we need to pass

2447
02:03:33,380 --> 02:03:39,429
the offset the size and the address

2448
02:03:45,729 --> 02:03:53,328
right so we do need to do this and again

2449
02:03:50,210 --> 02:03:55,069
it's kind of annoying because since

2450
02:03:53,328 --> 02:03:57,558
we're sort of retrofitting the asset

2451
02:03:55,069 --> 02:04:00,198
system to do these kinds of in-place

2452
02:03:57,559 --> 02:04:01,639
merges it's not set up the best for it

2453
02:04:00,198 --> 02:04:02,868
and we probably want to do a path to

2454
02:04:01,639 --> 02:04:05,599
clean that up once we know what

2455
02:04:02,868 --> 02:04:08,089
everything actually is but at the moment

2456
02:04:05,599 --> 02:04:10,010
that's actually okay so here's us

2457
02:04:08,090 --> 02:04:11,900
getting that file info by path and then

2458
02:04:10,010 --> 02:04:18,320
assuming that we get it we can do a

2459
02:04:11,899 --> 02:04:21,078
platform file handle where we open that

2460
02:04:18,319 --> 02:04:23,658
and actually looking at it we want to do

2461
02:04:21,078 --> 02:04:26,299
that as the same way that we did the

2462
02:04:23,658 --> 02:04:28,788
other files in the system so back in

2463
02:04:26,300 --> 02:04:33,288
here where we've sort of got those files

2464
02:04:28,788 --> 02:04:34,759
where are those files when we initially

2465
02:04:33,288 --> 02:04:38,118
open them you can see them happening

2466
02:04:34,760 --> 02:04:39,800
here right so when we go through me open

2467
02:04:38,118 --> 02:04:44,509
all these files the first time through

2468
02:04:39,800 --> 02:04:53,420
you can see us doing this where we sort

2469
02:04:44,510 --> 02:04:55,519
of opened them and create we sort of

2470
02:04:53,420 --> 02:04:57,078
create the initial stem with the asset

2471
02:04:55,519 --> 02:05:02,059
base and the tag base and that sort of

2472
02:04:57,078 --> 02:05:04,939
things for them right and since this is

2473
02:05:02,059 --> 02:05:07,760
a new file all of this stuff right none

2474
02:05:04,939 --> 02:05:11,268
of this stuff really has to happen and

2475
02:05:07,760 --> 02:05:13,579
so the initial settings for it don't

2476
02:05:11,269 --> 02:05:16,039
have to have you know they don't have to

2477
02:05:13,578 --> 02:05:18,799
be retracted or anything but because we

2478
02:05:16,038 --> 02:05:21,738
want to keep this code as simple as

2479
02:05:18,800 --> 02:05:25,639
possible probably what I think we want

2480
02:05:21,738 --> 02:05:28,218
to do is actually call this so we're

2481
02:05:25,639 --> 02:05:35,989
always going through the same path if

2482
02:05:28,219 --> 02:05:38,198
that makes sense probably that's my

2483
02:05:35,988 --> 02:05:38,198
guess

2484
02:05:43,559 --> 02:05:48,000
that just seems like the sameness thing

2485
02:05:45,538 --> 02:05:51,569
to do so if we actually create one of

2486
02:05:48,000 --> 02:05:53,399
these here what we want to do is like do

2487
02:05:51,569 --> 02:05:55,500
a write to it and then basically call

2488
02:05:53,399 --> 02:05:57,269
this code path and let it do this entire

2489
02:05:55,500 --> 02:05:59,158
thing even though it's somewhat

2490
02:05:57,270 --> 02:06:03,539
redundant just to make sure that we're

2491
02:05:59,158 --> 02:06:08,368
always doing the same code path right so

2492
02:06:03,538 --> 02:06:10,519
that there's like a init source

2493
02:06:08,368 --> 02:06:16,788
HHA kind of a thing that happens here

2494
02:06:10,520 --> 02:06:16,789
and so that in this code when we do this

2495
02:06:19,069 --> 02:06:36,479
we can essentially just say that and

2496
02:06:32,719 --> 02:06:38,158
have that work right and then we've got

2497
02:06:36,479 --> 02:06:40,319
a couple things here that need to kind

2498
02:06:38,158 --> 02:06:50,189
of get passed through this is going to

2499
02:06:40,319 --> 02:07:02,189
be you know on there there's file info

2500
02:06:50,189 --> 02:07:05,428
needs to get passed down although I

2501
02:07:02,189 --> 02:07:08,269
might say that this actually should be

2502
02:07:05,429 --> 02:07:08,270
this order

2503
02:07:12,600 --> 02:07:18,770
and then that stem needs to get

2504
02:07:15,119 --> 02:07:18,769
remembered so

2505
02:07:28,529 --> 02:07:34,050
oh so it's actually gonna do that from

2506
02:07:31,649 --> 02:07:38,699
the base name okay so that's fine so

2507
02:07:34,050 --> 02:07:40,980
actually the stem here in this case we

2508
02:07:38,699 --> 02:07:44,670
really just need the arena that's being

2509
02:07:40,979 --> 02:07:48,209
used the arena in this case is always

2510
02:07:44,670 --> 02:07:51,750
the same though it's the non restored

2511
02:07:48,210 --> 02:07:56,550
memory right so it I don't feel like

2512
02:07:51,750 --> 02:07:57,689
that actually that can just be got

2513
02:07:56,550 --> 02:08:03,869
enough for the assets it doesn't

2514
02:07:57,689 --> 02:08:21,710
actually need to be passed the file

2515
02:08:03,869 --> 02:08:21,710
group does want to be there like so and

2516
02:08:24,409 --> 02:08:29,269
that should be mostly it I think yeah

2517
02:08:30,949 --> 02:08:38,840
okay

2518
02:08:33,680 --> 02:08:40,520
um so just taking a look at this as we

2519
02:08:38,840 --> 02:08:42,529
move forward so what I want to do here

2520
02:08:40,520 --> 02:08:45,200
is I want to be able to open one of

2521
02:08:42,529 --> 02:08:47,179
these platform files I want to write

2522
02:08:45,199 --> 02:08:49,849
this thing and then I want to

2523
02:08:47,180 --> 02:08:51,770
essentially call initialize on it so

2524
02:08:49,850 --> 02:08:56,480
after we're done with that I'm gonna

2525
02:08:51,770 --> 02:08:59,600
call here like hey in its source HHA I

2526
02:08:56,479 --> 02:09:01,459
want to call it with the file index that

2527
02:08:59,600 --> 02:09:04,789
we're talking about so basically you

2528
02:09:01,460 --> 02:09:06,409
know the result effectively and I want

2529
02:09:04,789 --> 02:09:08,359
to pass all the rest of the data that

2530
02:09:06,409 --> 02:09:09,739
that actually needs to operate so that I

2531
02:09:08,359 --> 02:09:11,000
know it's going through the same path

2532
02:09:09,739 --> 02:09:14,569
even though it's going to repeat some

2533
02:09:11,000 --> 02:09:16,130
work I don't mind so calling that I got

2534
02:09:14,569 --> 02:09:17,960
to pass the file index I gotta pass the

2535
02:09:16,130 --> 02:09:21,470
file group which I have I have to pass

2536
02:09:17,960 --> 02:09:23,930
the file info which I also have right

2537
02:09:21,470 --> 02:09:25,850
and so as long as I just create this

2538
02:09:23,930 --> 02:09:26,510
piece of information for it we should be

2539
02:09:25,850 --> 02:09:28,760
good to go

2540
02:09:26,510 --> 02:09:32,770
so when I come in here I need to do a

2541
02:09:28,760 --> 02:09:35,090
platform file handle there's the handle

2542
02:09:32,770 --> 02:09:37,610
that's going to be an open file right

2543
02:09:35,090 --> 02:09:46,430
that has to happen on there so platform

2544
02:09:37,609 --> 02:09:49,239
you know open file or whatever and then

2545
02:09:46,430 --> 02:09:49,240
we have to close it

2546
02:09:56,630 --> 02:10:01,350
and so it's kind of a pain in the butt

2547
02:09:59,250 --> 02:10:05,789
it's not what I would prefer but you

2548
02:10:01,350 --> 02:10:07,740
know oh well so if all of that stuff

2549
02:10:05,789 --> 02:10:14,010
works so if literally all of this works

2550
02:10:07,739 --> 02:10:16,739
then we'll do an innate source HHA but

2551
02:10:14,010 --> 02:10:20,460
otherwise we won't right so all of that

2552
02:10:16,739 --> 02:10:22,619
stuff has to occur and has to work and

2553
02:10:20,460 --> 02:10:26,630
you know assuming that it all does then

2554
02:10:22,619 --> 02:10:26,630
we'll continue forward with it right

2555
02:10:26,750 --> 02:10:36,750
okay so what's the problem here that's

2556
02:10:31,319 --> 02:10:42,269
supposed to be sizeof not sure what the

2557
02:10:36,750 --> 02:10:49,289
problem is here get file by path this

2558
02:10:42,270 --> 02:10:51,500
needs to take in open file read so does

2559
02:10:49,289 --> 02:10:51,500
this

2560
02:10:58,689 --> 02:11:06,089
thought we passed a mode to that now

2561
02:11:09,750 --> 02:11:13,380
it's a mode flaps

2562
02:11:16,639 --> 02:11:29,059
so open file is complaining thanks

2563
02:11:24,408 --> 02:11:32,238
because that and I guess this isn't is

2564
02:11:29,059 --> 02:11:37,579
valid test how does this supposed to

2565
02:11:32,238 --> 02:11:44,868
work platform file handle so there's

2566
02:11:37,578 --> 02:11:46,819
just in no errors and so I think all we

2567
02:11:44,868 --> 02:11:49,158
need to do now is actually assign the

2568
02:11:46,819 --> 02:11:55,368
result here so what we want to do is say

2569
02:11:49,158 --> 02:11:58,009
end result equals zero and you know the

2570
02:11:55,368 --> 02:12:01,578
the number of asset files that we can

2571
02:11:58,010 --> 02:12:04,489
store is it's actually allowed so the

2572
02:12:01,578 --> 02:12:07,429
max file cap here we need to do a like

2573
02:12:04,488 --> 02:12:10,759
and you know plow count is less than max

2574
02:12:07,429 --> 02:12:13,069
file count right so we have to have room

2575
02:12:10,760 --> 02:12:14,780
to put this thing so assuming that's the

2576
02:12:13,069 --> 02:12:18,498
case then we can just say alright the

2577
02:12:14,779 --> 02:12:21,078
result equals the assets file count and

2578
02:12:18,498 --> 02:12:22,128
that can get incremented we don't

2579
02:12:21,078 --> 02:12:25,279
actually need to do that until

2580
02:12:22,128 --> 02:12:27,679
everything actually works right and so

2581
02:12:25,279 --> 02:12:30,550
we actually get all the way down here we

2582
02:12:27,679 --> 02:12:32,929
don't have to assign it an actual index

2583
02:12:30,550 --> 02:12:34,760
so it's kind of just like literally

2584
02:12:32,929 --> 02:12:38,538
right there that that ever actually

2585
02:12:34,760 --> 02:12:41,689
happens and I think that's all we would

2586
02:12:38,538 --> 02:12:44,179
really need to do I don't know if closed

2587
02:12:41,689 --> 02:12:48,349
file happens here we can put it here if

2588
02:12:44,179 --> 02:12:50,628
we want to just to make sure it always

2589
02:12:48,349 --> 02:12:58,569
just close in all cases so if I do this

2590
02:12:50,628 --> 02:12:58,569
right I think that works

2591
02:13:05,588 --> 02:13:13,429
and I think we're good to go so the only

2592
02:13:11,059 --> 02:13:16,609
thing that I might suggest is I kind of

2593
02:13:13,429 --> 02:13:19,219
would rather it looks more like this at

2594
02:13:16,609 --> 02:13:26,929
that point and I would probably also say

2595
02:13:19,219 --> 02:13:34,338
I would rather that it look like this so

2596
02:13:26,929 --> 02:13:38,838
when I do in it that HHA right that

2597
02:13:34,338 --> 02:13:48,109
actually happens on here so this gives

2598
02:13:38,838 --> 02:13:50,448
back one of those indices so I think

2599
02:13:48,109 --> 02:13:52,309
that's all fine and that way when we

2600
02:13:50,448 --> 02:13:55,488
actually do this file indexed result

2601
02:13:52,309 --> 02:13:58,219
right that thing is going to be set to

2602
02:13:55,488 --> 02:13:58,698
zero and then if we actually get one of

2603
02:13:58,219 --> 02:14:03,109
these

2604
02:13:58,698 --> 02:14:06,798
then it equals file count and we can

2605
02:14:03,109 --> 02:14:10,699
increment that right and that allows us

2606
02:14:06,798 --> 02:14:13,429
to make this be something that you know

2607
02:14:10,698 --> 02:14:15,378
makes more sense right

2608
02:14:13,429 --> 02:14:19,429
that way we're not passing file index

2609
02:14:15,378 --> 02:14:21,738
anymore and so this code here when it

2610
02:14:19,429 --> 02:14:24,019
actually does the assets file count bit

2611
02:14:21,738 --> 02:14:26,988
it's not going to do that it's not going

2612
02:14:24,019 --> 02:14:28,939
to do this what we're actually gonna do

2613
02:14:26,988 --> 02:14:31,338
is say hey just like everything else

2614
02:14:28,939 --> 02:14:33,918
assets file count actually ends up

2615
02:14:31,338 --> 02:14:37,248
equaling one and that's fine when we

2616
02:14:33,918 --> 02:14:41,328
allocate our array of asset files we're

2617
02:14:37,248 --> 02:14:44,358
actually gonna put on the max file count

2618
02:14:41,328 --> 02:14:46,728
and the Mac style count is going to

2619
02:14:44,359 --> 02:14:49,219
actually be based on however many of

2620
02:14:46,729 --> 02:14:51,829
these things there were going to be

2621
02:14:49,219 --> 02:14:53,748
which I believe is in the file group it

2622
02:14:51,828 --> 02:14:57,648
gives us a count of those right so in

2623
02:14:53,748 --> 02:14:59,538
here when we look at the platform file

2624
02:14:57,649 --> 02:15:00,829
group it's got the foul count so we're

2625
02:14:59,538 --> 02:15:03,259
going to take a look at that file count

2626
02:15:00,828 --> 02:15:05,628
and we're gonna do that if we're in

2627
02:15:03,260 --> 02:15:07,309
handmade internal we're gonna allow like

2628
02:15:05,628 --> 02:15:10,338
for a bunch of headroom like we do with

2629
02:15:07,309 --> 02:15:12,829
everything else right and so then we

2630
02:15:10,338 --> 02:15:13,698
allocate that array in leave space so if

2631
02:15:12,828 --> 02:15:15,920
we need to add anything

2632
02:15:13,698 --> 02:15:17,419
then we've got our file index here

2633
02:15:15,920 --> 02:15:20,559
doesn't actually need to occur anymore

2634
02:15:17,420 --> 02:15:23,300
so this can now just be in its source

2635
02:15:20,559 --> 02:15:26,479
HHA forever where it just passes the

2636
02:15:23,300 --> 02:15:28,038
file info and the assets and we don't

2637
02:15:26,479 --> 02:15:32,409
even need to know what that return value

2638
02:15:28,038 --> 02:15:35,090
is anymore it's just not relevant right

2639
02:15:32,408 --> 02:15:38,058
and so I think that's all we need to

2640
02:15:35,090 --> 02:15:41,659
actually do here and then when we can

2641
02:15:38,059 --> 02:15:43,610
look at that image source hhj code and

2642
02:15:41,658 --> 02:15:44,988
oh and we need to pass in addition to

2643
02:15:43,609 --> 02:15:49,339
the file info we just need to pass the

2644
02:15:44,988 --> 02:15:50,718
file group so I think that's proper and

2645
02:15:49,340 --> 02:15:52,099
that just kind of extends that to

2646
02:15:50,719 --> 02:15:54,078
allowing us to create some files it's

2647
02:15:52,099 --> 02:15:55,670
not as clean as I would like because

2648
02:15:54,078 --> 02:15:58,788
again we probably could just use

2649
02:15:55,670 --> 02:16:00,708
allocate on demand here and like it so

2650
02:15:58,788 --> 02:16:04,038
it just wasn't a particularly useful way

2651
02:16:00,708 --> 02:16:06,498
to structure those as an array so it

2652
02:16:04,038 --> 02:16:07,939
would be nice if we probably change that

2653
02:16:06,498 --> 02:16:10,519
there's no there's no reason for them to

2654
02:16:07,939 --> 02:16:30,768
be an array and so it's just kind of

2655
02:16:10,519 --> 02:16:32,689
holding us back right so a lot of this

2656
02:16:30,769 --> 02:16:35,079
stuff now that we're sort of looking at

2657
02:16:32,689 --> 02:16:39,079
it these could really be changed into a

2658
02:16:35,079 --> 02:16:40,818
more per allocation system there's

2659
02:16:39,079 --> 02:16:42,738
really not a reason not to and so we're

2660
02:16:40,818 --> 02:16:44,718
just kind of that's just like a legacy

2661
02:16:42,738 --> 02:16:48,379
code that's you know hampering us a

2662
02:16:44,718 --> 02:16:50,419
little bit unfortunately so let's just

2663
02:16:48,379 --> 02:16:53,869
go ahead and wrap up the stream by

2664
02:16:50,420 --> 02:16:56,179
verifying that that you know approach

2665
02:16:53,870 --> 02:16:57,139
will work we can still run the game

2666
02:16:56,179 --> 02:16:58,638
which is good so means we didn't break

2667
02:16:57,138 --> 02:17:00,829
any of that part I'm gonna run through

2668
02:16:58,638 --> 02:17:03,138
to here and just see if we can actually

2669
02:17:00,829 --> 02:17:06,620
create a file now and then we'll stop

2670
02:17:03,138 --> 02:17:09,198
there so if I actually click import and

2671
02:17:06,620 --> 02:17:13,279
save here and jump to that part of it

2672
02:17:09,199 --> 02:17:15,800
when we actually get to the the HHA part

2673
02:17:13,279 --> 02:17:17,090
of things this part is supposed to error

2674
02:17:15,799 --> 02:17:20,929
out right because remember we're on the

2675
02:17:17,090 --> 02:17:22,639
file that doesn't actually have that so

2676
02:17:20,929 --> 02:17:25,129
let's go ahead and parse that HHA

2677
02:17:22,638 --> 02:17:27,138
directive and jump into this code here

2678
02:17:25,129 --> 02:17:28,488
so we're not gonna find the HHA that

2679
02:17:27,138 --> 02:17:31,068
we're talking about cuz no one has

2680
02:17:28,488 --> 02:17:33,019
created that HHA again we're looking for

2681
02:17:31,068 --> 02:17:36,109
one that's actually called base game and

2682
02:17:33,019 --> 02:17:38,809
that one does not exist so let's see if

2683
02:17:36,109 --> 02:17:40,609
we can create one we're gonna open an

2684
02:17:38,808 --> 02:17:42,920
iteration on these guys we're gonna

2685
02:17:40,609 --> 02:17:45,590
create our own name which is this name

2686
02:17:42,920 --> 02:17:50,478
here right so it's it's gonna be data

2687
02:17:45,590 --> 02:17:52,519
slash base tha we're gonna try and get a

2688
02:17:50,478 --> 02:17:54,920
file by that path and see if we can

2689
02:17:52,519 --> 02:17:58,130
let's take a look so we get a file info

2690
02:17:54,920 --> 02:18:00,079
it looks like we've got it okay so then

2691
02:17:58,129 --> 02:18:03,528
we're gonna try and open that file and

2692
02:18:00,079 --> 02:18:05,449
see if we got a handle back oh yeah

2693
02:18:03,529 --> 02:18:07,969
that's correct so we come in here we

2694
02:18:05,449 --> 02:18:11,090
didn't have any errors so that's nice we

2695
02:18:07,968 --> 02:18:13,938
try to write the data to the file we do

2696
02:18:11,090 --> 02:18:16,090
it there and now we come through and try

2697
02:18:13,939 --> 02:18:18,260
to initialize that file we do have room

2698
02:18:16,090 --> 02:18:23,179
because we have plenty of extra files

2699
02:18:18,260 --> 02:18:25,699
here so we should now be able to process

2700
02:18:23,179 --> 02:18:27,529
this as a read/write file so coming

2701
02:18:25,699 --> 02:18:31,069
through here let's see if we can open it

2702
02:18:27,529 --> 02:18:34,670
we can't for some reason why is that I'm

2703
02:18:31,068 --> 02:18:36,869
not sure database game that HHA should

2704
02:18:34,670 --> 02:18:39,059
exist so for some reason

2705
02:18:36,870 --> 02:18:55,650
we were not actually able to read that

2706
02:18:39,059 --> 02:18:59,040
and I'm not sure why so you can see that

2707
02:18:55,649 --> 02:19:06,659
we actually created it properly and if I

2708
02:18:59,040 --> 02:19:09,329
dump it it's valid right so our code

2709
02:19:06,659 --> 02:19:10,950
actually worked great up to a point when

2710
02:19:09,329 --> 02:19:12,739
we actually went to open it though we

2711
02:19:10,950 --> 02:19:15,030
couldn't open it again for some reason

2712
02:19:12,739 --> 02:19:18,479
and it's unclear what that reason

2713
02:19:15,030 --> 02:19:20,760
actually was looking in here oh well

2714
02:19:18,479 --> 02:19:22,770
actually it's not I'm clear so the

2715
02:19:20,760 --> 02:19:24,899
problem is right here that's because we

2716
02:19:22,770 --> 02:19:28,140
haven't closed it yet

2717
02:19:24,899 --> 02:19:32,399
so in that case yeah the closed file

2718
02:19:28,139 --> 02:19:35,909
handle that actually needed to happen

2719
02:19:32,399 --> 02:19:44,449
beforehand so a better way to do this

2720
02:19:35,909 --> 02:19:44,450
would probably be to go like this right

2721
02:19:48,440 --> 02:19:52,739
so this is actually the way we should be

2722
02:19:50,909 --> 02:19:55,860
doing that not the way I was doing it

2723
02:19:52,739 --> 02:19:57,181
before but that looks fine because I

2724
02:19:55,860 --> 02:20:00,841
want to be able to call closed file on

2725
02:19:57,181 --> 02:20:02,431
this pretty much any time I want to so I

2726
02:20:00,841 --> 02:20:04,440
think we still did it correctly so

2727
02:20:02,431 --> 02:20:08,791
that's good and so I think then we're

2728
02:20:04,440 --> 02:20:11,730
done now we can proceed with you know

2729
02:20:08,790 --> 02:20:14,369
doing the rest of the the testing there

2730
02:20:11,729 --> 02:20:17,640
and seeing if it actually works I'm

2731
02:20:14,370 --> 02:20:19,501
going to call it for now and we will go

2732
02:20:17,640 --> 02:20:21,239
to a very brief Q&amp;A and then we'll have

2733
02:20:19,501 --> 02:20:23,851
a announcement about for coder Jam

2734
02:20:21,239 --> 02:20:28,110
situation let me go ahead and and do a

2735
02:20:23,851 --> 02:20:30,560
QA here which I have to do on the other

2736
02:20:28,110 --> 02:20:33,560
stream for some reason so there we go

2737
02:20:30,560 --> 02:20:33,560
done

2738
02:20:58,959 --> 02:21:02,559
oh we said we have one of the newline

2739
02:21:00,639 --> 02:21:05,920
cases is still parsing at one sorry that

2740
02:21:02,559 --> 02:21:07,420
was a typo there and we'll have to do

2741
02:21:05,920 --> 02:21:10,648
some testing of this right we didn't

2742
02:21:07,420 --> 02:21:10,648
really test any of this stuff

2743
02:21:29,010 --> 02:21:34,450
you had a note you changed it to do but

2744
02:21:31,629 --> 02:21:35,889
what if by with the right data indicated

2745
02:21:34,450 --> 02:21:40,079
the code wasn't or isn't using the right

2746
02:21:35,889 --> 02:21:40,079
data let me take a look

2747
02:21:52,170 --> 02:22:01,609
now but it is the right data yeah

2748
02:22:08,978 --> 02:22:12,519
any questions

2749
02:22:21,478 --> 02:22:26,219
looks like no questions which makes

2750
02:22:25,290 --> 02:22:31,699
sense I mean basis we're just doing

2751
02:22:26,219 --> 02:22:31,698
bookkeeping the asset importing so

2752
02:22:48,069 --> 02:22:55,879
we're using a KVM and that set up and do

2753
02:22:50,510 --> 02:23:01,069
you like it um so actually I was using a

2754
02:22:55,879 --> 02:23:04,039
KVM switch from I Omega and I didn't

2755
02:23:01,069 --> 02:23:06,699
like it and it actually was causing a

2756
02:23:04,040 --> 02:23:10,070
bunch of problems and then I switched to

2757
02:23:06,700 --> 02:23:13,370
and actually to be clear it wasn't

2758
02:23:10,069 --> 02:23:17,060
actually KVM switch was just keyboard

2759
02:23:13,370 --> 02:23:19,370
and mouse a KVM switch is technically

2760
02:23:17,060 --> 02:23:20,360
video as well this was not video because

2761
02:23:19,370 --> 02:23:21,740
I don't actually need to switch the

2762
02:23:20,360 --> 02:23:25,670
video I just need to switch to keyboard

2763
02:23:21,739 --> 02:23:28,940
mouse I upgraded to one by AV access

2764
02:23:25,670 --> 02:23:30,950
that's like a more substantial one

2765
02:23:28,940 --> 02:23:32,569
probably cost about twice as much maybe

2766
02:23:30,950 --> 02:23:34,250
I mean it still wasn't super expensive

2767
02:23:32,569 --> 02:23:37,239
buy computer equipment standards it was

2768
02:23:34,250 --> 02:23:39,470
like $80 or something so you know I mean

2769
02:23:37,239 --> 02:23:41,271
computer equipment is expensive so

2770
02:23:39,470 --> 02:23:42,470
that's not that expensive in the grand

2771
02:23:41,271 --> 02:23:46,040
scheme of things but it was more

2772
02:23:42,470 --> 02:23:48,470
expensive than the I Omega one was and

2773
02:23:46,040 --> 02:23:51,021
it's much better it actually works on

2774
02:23:48,470 --> 02:23:53,140
all machines which you wouldn't who used

2775
02:23:51,021 --> 02:23:55,820
to have a problem with it sometimes

2776
02:23:53,140 --> 02:23:57,859
understanding what was going on and so

2777
02:23:55,819 --> 02:24:00,199
it was causing problems there also it's

2778
02:23:57,860 --> 02:24:01,400
this one has just a button you push for

2779
02:24:00,200 --> 02:24:03,050
any given input so you can switch

2780
02:24:01,399 --> 02:24:05,449
directly the I Omega you had to like

2781
02:24:03,049 --> 02:24:07,609
click to get to one and I hate that so

2782
02:24:05,450 --> 02:24:09,790
you end up kind of so so I this AV

2783
02:24:07,610 --> 02:24:14,860
access one's really good it's actually a

2784
02:24:09,790 --> 02:24:18,561
four-way HDMI and keyboard and mouse

2785
02:24:14,860 --> 02:24:20,450
switcher I just I don't use the video so

2786
02:24:18,560 --> 02:24:21,920
you know the video could be totally

2787
02:24:20,450 --> 02:24:29,271
broken for all I know it I didn't have

2788
02:24:21,920 --> 02:24:32,720
no idea so I I really couldn't tell ya

2789
02:24:29,271 --> 02:24:34,010
right do you have an idea as to what the

2790
02:24:32,720 --> 02:24:37,039
gameplay of hammer here we're just doing

2791
02:24:34,010 --> 02:24:38,780
more of that design exploration um I do

2792
02:24:37,040 --> 02:24:40,700
have idea of what the gameplay will be

2793
02:24:38,780 --> 02:24:42,260
like but you know this is not really a

2794
02:24:40,700 --> 02:24:48,860
gameplay or this is not a game design

2795
02:24:42,260 --> 02:24:51,110
stream so that is not a focus right the

2796
02:24:48,860 --> 02:24:53,960
the gameplay will be just because we

2797
02:24:51,110 --> 02:24:55,670
need there to be gameplay on top of an

2798
02:24:53,959 --> 02:24:59,419
engine in order for it to be a game

2799
02:24:55,670 --> 02:25:00,351
technically and you don't really know if

2800
02:24:59,420 --> 02:25:00,829
all the sudden the engines working

2801
02:25:00,351 --> 02:25:02,930
unless you

2802
02:25:00,829 --> 02:25:04,700
actually play a game and it works right

2803
02:25:02,930 --> 02:25:08,960
so it's it's like a proof-of-concept to

2804
02:25:04,700 --> 02:25:10,820
in that sense but this is absolutely not

2805
02:25:08,959 --> 02:25:12,250
a game design stream and I will say that

2806
02:25:10,819 --> 02:25:14,989
repeatedly when we're doing game

2807
02:25:12,250 --> 02:25:19,389
development of just the play stuff as I

2808
02:25:14,989 --> 02:25:21,289
will I'm explicitly disavowing any

2809
02:25:19,389 --> 02:25:25,369
suggestion that you should be listening

2810
02:25:21,290 --> 02:25:27,920
to that as a game designer this is not a

2811
02:25:25,370 --> 02:25:29,990
game design stream and it should not be

2812
02:25:27,920 --> 02:25:32,420
watched by game designers because it is

2813
02:25:29,989 --> 02:25:34,969
not about game design and will never be

2814
02:25:32,420 --> 02:25:37,069
about game design there will not be a

2815
02:25:34,969 --> 02:25:40,459
single episode of this stream about game

2816
02:25:37,069 --> 02:25:42,079
design ever the stream will we will end

2817
02:25:40,459 --> 02:25:43,669
the handmade arrow series without ever

2818
02:25:42,079 --> 02:25:54,289
having talked about game design at all

2819
02:25:43,670 --> 02:25:55,969
because we don't do that here repeating

2820
02:25:54,290 --> 02:25:57,440
my question what makes asset importing

2821
02:25:55,969 --> 02:26:00,819
special the way you're doing it compared

2822
02:25:57,440 --> 02:26:04,280
to other ways in other game libs I don't

2823
02:26:00,819 --> 02:26:08,500
think there is something special about

2824
02:26:04,280 --> 02:26:11,659
it I mean every game needs to have some

2825
02:26:08,500 --> 02:26:15,021
you know process by which asset

2826
02:26:11,659 --> 02:26:18,350
importing happens I don't think we're

2827
02:26:15,021 --> 02:26:20,470
doing anything particularly out of the

2828
02:26:18,350 --> 02:26:20,470
ordinary

2829
02:26:22,870 --> 02:26:31,700
one thing that is a little bit different

2830
02:26:26,000 --> 02:26:34,310
from how some other code bases do it is

2831
02:26:31,700 --> 02:26:37,880
we don't spam strings into our

2832
02:26:34,310 --> 02:26:40,520
executable everywhere so sometimes the

2833
02:26:37,879 --> 02:26:43,310
way that asset importing works in game

2834
02:26:40,521 --> 02:26:45,409
engines is like strewn throughout the

2835
02:26:43,310 --> 02:26:49,430
entire code will just be strings talking

2836
02:26:45,409 --> 02:26:51,560
about P and G's and stuff right and we

2837
02:26:49,430 --> 02:26:54,110
don't do that we actually define like a

2838
02:26:51,560 --> 02:26:58,670
rigorous set of enums for tags and stuff

2839
02:26:54,110 --> 02:27:01,340
like that so that's one thing that some

2840
02:26:58,670 --> 02:27:04,430
asset imports do and some asset imports

2841
02:27:01,340 --> 02:27:07,010
don't do and so we are on that side of

2842
02:27:04,430 --> 02:27:08,870
that fence but that is not unique to

2843
02:27:07,010 --> 02:27:11,420
handmade hero there are plenty of asset

2844
02:27:08,870 --> 02:27:15,110
systems designed to not spam strings

2845
02:27:11,420 --> 02:27:17,290
everywhere so you know that's

2846
02:27:15,110 --> 02:27:20,329
that may be unusual compared to some

2847
02:27:17,290 --> 02:27:27,290
asset imports but it's certainly not

2848
02:27:20,329 --> 02:27:28,700
unusual across all asset imports so yeah

2849
02:27:27,290 --> 02:27:30,141
so I would say there's nothing special

2850
02:27:28,700 --> 02:27:36,261
about the way we're doing it I don't

2851
02:27:30,140 --> 02:27:37,879
think you know we've made some specific

2852
02:27:36,261 --> 02:27:39,739
choices that other asset systems

2853
02:27:37,879 --> 02:27:40,729
probably do slightly differently but

2854
02:27:39,739 --> 02:27:42,649
they're all basically doing the same

2855
02:27:40,729 --> 02:27:46,159
thing which is they're trying to marshal

2856
02:27:42,649 --> 02:27:48,440
a bunch of disparate source files and

2857
02:27:46,159 --> 02:27:51,619
pull them into the game in a way that

2858
02:27:48,440 --> 02:27:57,500
the game can recognize what they're

2859
02:27:51,620 --> 02:27:59,900
supposed to do right and so you know we

2860
02:27:57,500 --> 02:28:02,360
we sort of have a sprite sheet kind of

2861
02:27:59,899 --> 02:28:07,609
approach there is some things we do

2862
02:28:02,360 --> 02:28:10,431
differently so again depending on the

2863
02:28:07,610 --> 02:28:16,690
pipelining question some pipelines

2864
02:28:10,431 --> 02:28:18,351
don't try to actually only use the

2865
02:28:16,690 --> 02:28:19,940
elements of the sprite sheet that

2866
02:28:18,351 --> 02:28:21,500
actually it use some of them just pull

2867
02:28:19,940 --> 02:28:23,841
in the entire sprite sheets and ship

2868
02:28:21,500 --> 02:28:26,569
that right so we are a little bit better

2869
02:28:23,841 --> 02:28:28,069
than that right we do only keep the

2870
02:28:26,569 --> 02:28:30,829
parts of sprite sheets that actually

2871
02:28:28,069 --> 02:28:33,440
have stuff in them but again most

2872
02:28:30,829 --> 02:28:35,591
professional asset pipelines would be

2873
02:28:33,440 --> 02:28:37,521
doing that it's only kind of a janky

2874
02:28:35,591 --> 02:28:39,380
amateur-hour stuff that wouldn't be

2875
02:28:37,521 --> 02:28:41,570
doing that anyway so again I don't

2876
02:28:39,379 --> 02:28:43,520
really consider that to be special on

2877
02:28:41,569 --> 02:28:46,011
the whole we are not a particularly

2878
02:28:43,521 --> 02:28:51,460
advanced asset pipeline compared to a

2879
02:28:46,011 --> 02:28:53,870
very high-end asset pipeline so you know

2880
02:28:51,459 --> 02:28:56,949
yeah checksum right now is a murmur hash

2881
02:28:53,870 --> 02:28:56,950
I think that's what we used

2882
02:29:02,189 --> 02:29:06,790
when you import assets do they go into

2883
02:29:04,840 --> 02:29:10,409
some kind of target like a texture Atlas

2884
02:29:06,790 --> 02:29:15,189
on we are not using a texture Atlas

2885
02:29:10,409 --> 02:29:20,228
because we chose to use texture arrays

2886
02:29:15,189 --> 02:29:22,148
instead and so when we import our assets

2887
02:29:20,228 --> 02:29:23,949
actually the way that it works is we

2888
02:29:22,148 --> 02:29:26,680
just pack the data that we receive

2889
02:29:23,950 --> 02:29:29,020
directly into our source data files just

2890
02:29:26,680 --> 02:29:31,659
the part that's actually used and then

2891
02:29:29,020 --> 02:29:33,430
at runtime when we actually stream that

2892
02:29:31,659 --> 02:29:35,770
asset in when we detect that somebody

2893
02:29:33,430 --> 02:29:39,670
needs it we place it into a freeze

2894
02:29:35,770 --> 02:29:42,010
portion of the texture array so whatever

2895
02:29:39,670 --> 02:29:44,469
if there's a place in texture we haven't

2896
02:29:42,010 --> 02:29:45,880
used yet we use that if we don't have a

2897
02:29:44,469 --> 02:29:48,519
placement x-ray that hasn't been used

2898
02:29:45,879 --> 02:29:53,099
yet we just evict something and put it

2899
02:29:48,520 --> 02:29:55,630
there so we don't use a texture Atlas

2900
02:29:53,100 --> 02:29:58,500
that's a different method than the

2901
02:29:55,629 --> 02:29:58,500
method we're using

2902
02:30:03,340 --> 02:30:09,398
and also to give a little bit more

2903
02:30:06,670 --> 02:30:11,889
perspective texture atlas and

2904
02:30:09,398 --> 02:30:12,939
spritesheet while some people may use

2905
02:30:11,889 --> 02:30:14,590
them entertainment change lead

2906
02:30:12,939 --> 02:30:17,020
technically they are not the same thing

2907
02:30:14,590 --> 02:30:18,880
sprite sheet is a statement about an art

2908
02:30:17,020 --> 02:30:20,500
asset so if you're talking about a

2909
02:30:18,879 --> 02:30:24,278
sprite sheet what you're talking about

2910
02:30:20,500 --> 02:30:26,799
is an artist has made a single image

2911
02:30:24,279 --> 02:30:31,140
that has multiple different sprite

2912
02:30:26,799 --> 02:30:34,868
images packed into it in some way right

2913
02:30:31,139 --> 02:30:39,158
that is a sprite sheet a texture atlas

2914
02:30:34,869 --> 02:30:42,340
is just the word for any texture image

2915
02:30:39,158 --> 02:30:46,500
that you might use in a game or anywhere

2916
02:30:42,340 --> 02:30:50,260
really where you have packed in some way

2917
02:30:46,500 --> 02:30:53,619
some set of data into it that isn't just

2918
02:30:50,260 --> 02:30:55,750
one single rectangular image now it has

2919
02:30:53,619 --> 02:30:59,979
nothing to do with what an artist may

2920
02:30:55,750 --> 02:31:02,459
have made right an artists doesn't

2921
02:30:59,978 --> 02:31:04,868
usually make a texture Atlas directly

2922
02:31:02,459 --> 02:31:06,698
usually when you talk about texture

2923
02:31:04,869 --> 02:31:09,640
Atlas you're talking about something

2924
02:31:06,699 --> 02:31:12,578
that some pre-process or took a bunch of

2925
02:31:09,639 --> 02:31:14,648
data and you know jammed it in in a

2926
02:31:12,578 --> 02:31:18,369
particular way with certain borders of

2927
02:31:14,648 --> 02:31:20,709
certain sizes right and more

2928
02:31:18,369 --> 02:31:22,750
specifically texture atlases although in

2929
02:31:20,709 --> 02:31:24,639
the case of a 2-d game this may often be

2930
02:31:22,750 --> 02:31:26,949
the case for simplicity and because

2931
02:31:24,639 --> 02:31:29,828
you're not really usually pushing GPU

2932
02:31:26,949 --> 02:31:31,930
memory to its limits in the case of a 3d

2933
02:31:29,828 --> 02:31:33,639
game a texture analyst can often refer

2934
02:31:31,930 --> 02:31:36,850
to things that aren't even rectangular

2935
02:31:33,639 --> 02:31:38,618
lis packed right so a texture Atlas may

2936
02:31:36,850 --> 02:31:40,658
have things that are irregular they're

2937
02:31:38,619 --> 02:31:42,250
all kind of shoved together with just a

2938
02:31:40,658 --> 02:31:44,590
little bit of space in between them and

2939
02:31:42,250 --> 02:31:46,568
then you're actually pulling like shaped

2940
02:31:44,590 --> 02:31:48,340
regions out of them because you have to

2941
02:31:46,568 --> 02:31:50,139
imagine like you've got like triangle

2942
02:31:48,340 --> 02:31:51,880
meshes that are pulling out of these

2943
02:31:50,139 --> 02:31:54,340
things they don't actually have to be

2944
02:31:51,879 --> 02:31:56,618
rectangular right so again spritesheet

2945
02:31:54,340 --> 02:31:59,199
is an art term if you're using it

2946
02:31:56,619 --> 02:32:03,670
properly texture Atlas is a technical

2947
02:31:59,199 --> 02:32:06,189
rendering term and while you can make a

2948
02:32:03,670 --> 02:32:08,049
sprite sheet that you use directly as a

2949
02:32:06,189 --> 02:32:09,908
texture Atlas because you do no

2950
02:32:08,049 --> 02:32:12,309
processing on it when you pull it in and

2951
02:32:09,908 --> 02:32:13,719
you pull out of it directly from the

2952
02:32:12,309 --> 02:32:17,309
thing the artists actually painted you

2953
02:32:13,719 --> 02:32:20,648
can do that that's a

2954
02:32:17,309 --> 02:32:23,639
that's just a possible thing that could

2955
02:32:20,648 --> 02:32:25,869
happen but there is no actual

2956
02:32:23,639 --> 02:32:28,568
correspondence between a sprite sheet

2957
02:32:25,870 --> 02:32:31,829
and a texture atlas by definition there

2958
02:32:28,568 --> 02:32:36,988
are two very different concepts it might

2959
02:32:31,829 --> 02:32:36,988
help to clarify that distinction right

2960
02:32:38,879 --> 02:32:44,799
we are using note we are not using

2961
02:32:42,909 --> 02:32:49,719
texture Atlas we are sort of using

2962
02:32:44,799 --> 02:32:51,608
sprite sheets when the artists make

2963
02:32:49,719 --> 02:32:53,858
something that would go into handmade

2964
02:32:51,609 --> 02:32:56,649
hero they are going to be making them

2965
02:32:53,859 --> 02:32:58,210
based on a sprite layout we have a

2966
02:32:56,648 --> 02:33:01,329
number of them

2967
02:32:58,209 --> 02:33:03,639
so those sprite layouts look you know

2968
02:33:01,329 --> 02:33:05,318
like this here's an example right and

2969
02:33:03,639 --> 02:33:08,829
you can see that there's a bunch of

2970
02:33:05,318 --> 02:33:10,659
blank space so that's a very good

2971
02:33:08,829 --> 02:33:12,818
example of why we don't use this at

2972
02:33:10,659 --> 02:33:14,648
runtime another reason is because it's

2973
02:33:12,818 --> 02:33:16,898
much higher res than we use at runtime

2974
02:33:14,648 --> 02:33:18,818
we actually downsample because the

2975
02:33:16,898 --> 02:33:22,988
source art is higher res than the actual

2976
02:33:18,818 --> 02:33:24,459
one use a game but that's one of the

2977
02:33:22,988 --> 02:33:26,289
reasons why we go through and we

2978
02:33:24,459 --> 02:33:28,648
actually only extract the pieces from

2979
02:33:26,290 --> 02:33:30,939
the sprite sheet that we actually see

2980
02:33:28,648 --> 02:33:32,858
anywhere in this write sheet that's got

2981
02:33:30,939 --> 02:33:33,880
that doesn't have a frame of animation

2982
02:33:32,859 --> 02:33:36,880
for it

2983
02:33:33,879 --> 02:33:38,259
we just don't save right and again

2984
02:33:36,879 --> 02:33:42,969
that's just to make it so that we're not

2985
02:33:38,260 --> 02:33:48,790
just saving gobs of empty nonsense in

2986
02:33:42,969 --> 02:33:50,318
there right so that's all alright I

2987
02:33:48,790 --> 02:33:52,600
think that's it for questions so I'm

2988
02:33:50,318 --> 02:33:54,039
going to go ahead and wrap it up thank

2989
02:33:52,600 --> 02:33:55,300
you everyone for joining me for an

2990
02:33:54,040 --> 02:33:56,620
episode of handmade hero it's been a

2991
02:33:55,299 --> 02:33:58,028
pleasure talking with you as always

2992
02:33:56,620 --> 02:33:59,920
if you do want to follow along the

2993
02:33:58,029 --> 02:34:01,810
series at home you can always peer to

2994
02:33:59,920 --> 02:34:04,090
the game on handmade hero org it comes

2995
02:34:01,809 --> 02:34:05,680
with a source code so that you can you

2996
02:34:04,090 --> 02:34:07,059
know sort of follow along with what I'm

2997
02:34:05,680 --> 02:34:10,210
doing and also play around it yourself

2998
02:34:07,059 --> 02:34:14,189
do some experimentation and and so on

2999
02:34:10,209 --> 02:34:17,738
right now I want to make an announcement

3000
02:34:14,189 --> 02:34:19,960
next weekend is actually not gonna be a

3001
02:34:17,738 --> 02:34:21,449
regular episode of hammer here I can

3002
02:34:19,959 --> 02:34:23,228
have a special episode of handmade hero

3003
02:34:21,450 --> 02:34:24,790
and that'sthe anchors write a good

3004
02:34:23,228 --> 02:34:27,459
stopping point actually we've kind of

3005
02:34:24,790 --> 02:34:30,100
done all of the work all the main

3006
02:34:27,459 --> 02:34:31,658
structural work and so

3007
02:34:30,100 --> 02:34:35,318
okay take a little bit break and come

3008
02:34:31,658 --> 02:34:36,639
back in after skipping a week to do the

3009
02:34:35,318 --> 02:34:39,670
debugging process right because that's

3010
02:34:36,639 --> 02:34:41,079
sort of a separate thing but what I want

3011
02:34:39,670 --> 02:34:43,540
to say is next weekend will be a very

3012
02:34:41,079 --> 02:34:45,879
special stream what we're going to be

3013
02:34:43,540 --> 02:34:48,279
doing is as you know I get a bunch of

3014
02:34:45,879 --> 02:34:50,170
upgrades to for coder I spent about

3015
02:34:48,279 --> 02:34:51,460
three weeks on it which was more than I

3016
02:34:50,170 --> 02:34:54,460
was originally planning to but I kind of

3017
02:34:51,459 --> 02:34:56,379
just wanted to get it all done so I did

3018
02:34:54,459 --> 02:34:57,908
a ton of upgrades to for coder

3019
02:34:56,379 --> 02:35:01,299
most of which you have not seen yet

3020
02:34:57,908 --> 02:35:06,279
because I've not actually updated the

3021
02:35:01,299 --> 02:35:08,769
for coder in two weeks time the goal

3022
02:35:06,279 --> 02:35:11,229
with a lot of those modifications was to

3023
02:35:08,770 --> 02:35:15,220
get them back into for coder proper so

3024
02:35:11,228 --> 02:35:16,778
that everyone can use them why I don't

3025
02:35:15,219 --> 02:35:20,108
know I'm just feeling generous I guess

3026
02:35:16,779 --> 02:35:21,939
who knows but so what I wanted to do was

3027
02:35:20,109 --> 02:35:24,520
get all of those modifications back to

3028
02:35:21,939 --> 02:35:26,619
Alan so that they could get into for

3029
02:35:24,520 --> 02:35:29,859
coder and be mainlined

3030
02:35:26,619 --> 02:35:34,689
over time so in order to do that though

3031
02:35:29,859 --> 02:35:37,390
I've made like so many updates to the

3032
02:35:34,689 --> 02:35:40,090
source base at this point it's not super

3033
02:35:37,389 --> 02:35:41,858
feasible to just hand it over so what we

3034
02:35:40,090 --> 02:35:43,779
wanted to do was have Alan and I get

3035
02:35:41,859 --> 02:35:46,689
together and just kind of go over all

3036
02:35:43,779 --> 02:35:50,470
the stuff moving into for coder as best

3037
02:35:46,689 --> 02:35:52,300
we can as sort of an adjunct system that

3038
02:35:50,469 --> 02:35:54,608
can get built alongside the four coder

3039
02:35:52,299 --> 02:35:58,809
source code and then once that's

3040
02:35:54,609 --> 02:36:01,210
happening I think Alan will then be able

3041
02:35:58,809 --> 02:36:03,879
to sort of move them over into for coder

3042
02:36:01,209 --> 02:36:06,688
over time so basically all of the mods

3043
02:36:03,879 --> 02:36:10,089
that I've made can get mainlined in as

3044
02:36:06,689 --> 02:36:12,639
sort of he gets a chance to digest those

3045
02:36:10,090 --> 02:36:14,290
and you know expand them a bit because

3046
02:36:12,639 --> 02:36:16,858
actually they're like totally specified

3047
02:36:14,290 --> 02:36:20,470
specific to how I wanted it to work and

3048
02:36:16,859 --> 02:36:23,500
so you know he's gonna want to brought

3049
02:36:20,469 --> 02:36:25,028
in a lot of them probably to make them

3050
02:36:23,500 --> 02:36:27,369
more generally applicable to the way

3051
02:36:25,029 --> 02:36:30,158
everyone else might want to mod it and

3052
02:36:27,369 --> 02:36:31,930
so on so what we're gonna do this coming

3053
02:36:30,158 --> 02:36:34,350
weekend is we're gonna do a for coder

3054
02:36:31,930 --> 02:36:37,000
Jam Alan and I will probably both stream

3055
02:36:34,350 --> 02:36:37,829
or we'll do some kind of hybrid stream

3056
02:36:37,000 --> 02:36:40,420
or something

3057
02:36:37,829 --> 02:36:41,889
so it'll either be on his channel or my

3058
02:36:40,420 --> 02:36:42,930
channel or both channels at the same

3059
02:36:41,889 --> 02:36:46,500
time

3060
02:36:42,930 --> 02:36:47,639
what we can get working and so stay

3061
02:36:46,500 --> 02:36:49,559
tuned for more information about that

3062
02:36:47,639 --> 02:36:51,448
but basically it'll should be basically

3063
02:36:49,559 --> 02:36:53,100
the same way you watch handmade hero the

3064
02:36:51,449 --> 02:36:54,329
schedule will go up it's at the set of a

3065
02:36:53,100 --> 02:36:56,670
normal have sort of handmade hero it'll

3066
02:36:54,329 --> 02:36:57,959
be the four coat of jam and we don't

3067
02:36:56,670 --> 02:36:59,760
know yet whether it'll be Saturday and

3068
02:36:57,959 --> 02:37:01,409
Sunday or just saturday we'll see how

3069
02:36:59,760 --> 02:37:02,670
far we get through it we may find that

3070
02:37:01,409 --> 02:37:04,139
we just haven't gotten far enough after

3071
02:37:02,670 --> 02:37:06,809
Saturday's over and then we'll do a

3072
02:37:04,139 --> 02:37:08,879
Sunday so that's our plan it's a little

3073
02:37:06,809 --> 02:37:11,189
bit tentative but you know that's what

3074
02:37:08,879 --> 02:37:13,799
we're playing do so stay tuned for that

3075
02:37:11,189 --> 02:37:16,079
and we should you know be able to post

3076
02:37:13,799 --> 02:37:17,969
on the watch page on the Twitter Allen's

3077
02:37:16,079 --> 02:37:19,949
and mine and handmade hero what's going

3078
02:37:17,969 --> 02:37:24,568
on so that you'll be up-to-date with

3079
02:37:19,949 --> 02:37:26,819
what's going on there and so that should

3080
02:37:24,568 --> 02:37:29,549
be pretty exciting we've got tons of new

3081
02:37:26,818 --> 02:37:31,049
features that that I think will be

3082
02:37:29,549 --> 02:37:36,988
pretty awesome and that you'll want to

3083
02:37:31,049 --> 02:37:40,259
see so far like basically like it's

3084
02:37:36,988 --> 02:37:43,260
really really far ahead of Emax now so

3085
02:37:40,260 --> 02:37:48,120
you know compared to what Allen

3086
02:37:43,260 --> 02:37:49,978
originally replaced which was Emacs you

3087
02:37:48,120 --> 02:37:51,840
know for coder has sort of been a like a

3088
02:37:49,978 --> 02:37:53,579
replacement that was way better

3089
02:37:51,840 --> 02:37:57,000
performance but was missing some of the

3090
02:37:53,579 --> 02:37:58,920
features of Emacs Allen is slowly added

3091
02:37:57,000 --> 02:38:05,879
basically all the features from Emacs

3092
02:37:58,920 --> 02:38:07,738
that I was using except for what's where

3093
02:38:05,879 --> 02:38:09,809
I'm before except for macro recording

3094
02:38:07,738 --> 02:38:11,369
Mac recording something's Allen working

3095
02:38:09,809 --> 02:38:12,898
on now so I haven't looked at that but

3096
02:38:11,370 --> 02:38:15,840
what I did is I went ahead and just

3097
02:38:12,898 --> 02:38:17,549
added a ton of features that basically

3098
02:38:15,840 --> 02:38:21,000
takes it like way past anything that

3099
02:38:17,549 --> 02:38:27,478
Emacs ever did by far right so now it's

3100
02:38:21,000 --> 02:38:31,199
got like just way better sort of feature

3101
02:38:27,478 --> 02:38:33,090
support than Emacs had because Emacs was

3102
02:38:31,199 --> 02:38:34,590
basically a giant bloated pile of list

3103
02:38:33,090 --> 02:38:36,449
of stuff most of which does things I

3104
02:38:34,590 --> 02:38:37,680
didn't care about and it really didn't

3105
02:38:36,449 --> 02:38:40,829
have a lot of features for things I do

3106
02:38:37,680 --> 02:38:44,130
care about like really fast code based

3107
02:38:40,829 --> 02:38:45,420
navigation things that I wanted and

3108
02:38:44,129 --> 02:38:47,309
stuff like that so what I've done is

3109
02:38:45,420 --> 02:38:48,629
I've kind of gone like all right now

3110
02:38:47,309 --> 02:38:50,100
that for coders up to the point where it

3111
02:38:48,629 --> 02:38:52,139
basically replaced Emacs what can I do

3112
02:38:50,100 --> 02:38:56,309
to like basically get better than Emacs

3113
02:38:52,139 --> 02:38:57,000
everywhere where I you know can just say

3114
02:38:56,309 --> 02:38:59,159
like okay

3115
02:38:57,000 --> 02:39:00,809
literally every operation I ever do on a

3116
02:38:59,159 --> 02:39:02,850
codebase this is way better than what do

3117
02:39:00,809 --> 02:39:04,859
you max was providing and so I've done

3118
02:39:02,850 --> 02:39:06,510
that and when we combine that back with

3119
02:39:04,859 --> 02:39:08,279
what Alan's doing with macro recording

3120
02:39:06,510 --> 02:39:14,010
which is the one feature that was still

3121
02:39:08,279 --> 02:39:17,130
missing I think by that time it'll it'll

3122
02:39:14,010 --> 02:39:18,840
just be like totally trancing Emacs like

3123
02:39:17,129 --> 02:39:21,869
it would be crazy that you'd ever bother

3124
02:39:18,840 --> 02:39:26,728
to use Emacs assuming that what you do

3125
02:39:21,870 --> 02:39:28,529
is code C++ for a living right so that's

3126
02:39:26,728 --> 02:39:30,179
it and and we'll be doing that next

3127
02:39:28,529 --> 02:39:32,790
weekend and that will include like demos

3128
02:39:30,180 --> 02:39:34,738
of all the new features and stuff which

3129
02:39:32,790 --> 02:39:37,319
I think you'll be pretty much in so

3130
02:39:34,738 --> 02:39:39,238
don't don't miss it until then have fun

3131
02:39:37,318 --> 02:39:42,829
programming everybody and I'll see

3132
02:39:39,238 --> 02:39:42,829
everyone on the Internet take it easy

