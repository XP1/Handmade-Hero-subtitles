1
00:00:00,000 --> 00:00:04,080
hello everyone and welcome to handmade

2
00:00:02,000 --> 00:00:05,040
hero show recorded complete game live on

3
00:00:04,080 --> 00:00:07,679
stream uh

4
00:00:05,040 --> 00:00:08,960
we when we last left which was actually

5
00:00:07,679 --> 00:00:10,718
a couple weeks ago because we did some

6
00:00:08,960 --> 00:00:14,080
rough term streams

7
00:00:10,718 --> 00:00:14,558
um in between when we last left we were

8
00:00:14,080 --> 00:00:18,000
doing

9
00:00:14,558 --> 00:00:18,640
some code for just we wanted to be able

10
00:00:18,000 --> 00:00:20,879
to

11
00:00:18,640 --> 00:00:23,199
make our collision system we really want

12
00:00:20,879 --> 00:00:25,839
to be able to debug our collision system

13
00:00:23,199 --> 00:00:26,640
uh in some reasonable way and i really

14
00:00:25,839 --> 00:00:29,359
don't know

15
00:00:26,640 --> 00:00:31,199
any way to do that other than by having

16
00:00:29,359 --> 00:00:34,960
good diagramming

17
00:00:31,199 --> 00:00:38,239
um inside the the engine itself

18
00:00:34,960 --> 00:00:39,200
meaning some way to draw what's

19
00:00:38,238 --> 00:00:41,439
happening

20
00:00:39,200 --> 00:00:42,719
because things like collision are just

21
00:00:41,439 --> 00:00:45,759
unfortunately

22
00:00:42,719 --> 00:00:46,399
very uh abstract when you look at the

23
00:00:45,759 --> 00:00:49,599
code

24
00:00:46,399 --> 00:00:50,239
it's pretty hard to intuit what is going

25
00:00:49,600 --> 00:00:53,760
on

26
00:00:50,238 --> 00:00:54,159
by just looking at code so stepping

27
00:00:53,759 --> 00:00:56,558
through

28
00:00:54,159 --> 00:00:58,000
a collision routine in a debugger you're

29
00:00:56,558 --> 00:01:00,079
almost never gonna see

30
00:00:58,000 --> 00:01:01,759
your bugs because they're so geometric

31
00:01:00,079 --> 00:01:04,478
in nature and your brain

32
00:01:01,759 --> 00:01:05,840
can't really look at a watch window and

33
00:01:04,478 --> 00:01:09,438
extrapolate

34
00:01:05,840 --> 00:01:11,439
oh you know this um

35
00:01:09,438 --> 00:01:13,359
here are these three points and this is

36
00:01:11,438 --> 00:01:14,879
their relationship oh they're coplanar

37
00:01:13,359 --> 00:01:15,280
and that's breaking this thing i was

38
00:01:14,879 --> 00:01:17,199
doing

39
00:01:15,280 --> 00:01:18,960
well three points always go planar four

40
00:01:17,200 --> 00:01:20,000
points and their coplanar and i was

41
00:01:18,959 --> 00:01:21,679
assuming they would actually make a

42
00:01:20,000 --> 00:01:22,239
tetrahedron and that's why my collision

43
00:01:21,680 --> 00:01:24,240
detection

44
00:01:22,239 --> 00:01:26,239
didn't work and so now i can fix that

45
00:01:24,239 --> 00:01:28,158
gaining that geometrical tradition

46
00:01:26,239 --> 00:01:29,280
most humans can't look at four points

47
00:01:28,159 --> 00:01:32,960
and tell their coplanar

48
00:01:29,280 --> 00:01:33,680
right um if all you see is just the

49
00:01:32,959 --> 00:01:35,199
numbers

50
00:01:33,680 --> 00:01:37,040
if you show them a picture of four

51
00:01:35,200 --> 00:01:38,000
points almost any human can tell that

52
00:01:37,040 --> 00:01:39,439
they're coplanar

53
00:01:38,000 --> 00:01:41,040
even if they're humans who don't know

54
00:01:39,438 --> 00:01:43,118
what coplanar is they can still say oh

55
00:01:41,040 --> 00:01:47,360
they kind of look like they're all

56
00:01:43,118 --> 00:01:48,959
flat right so your geometric intuition

57
00:01:47,359 --> 00:01:50,640
tends to be the best thing to use for

58
00:01:48,959 --> 00:01:52,478
debugging collision detection

59
00:01:50,640 --> 00:01:54,079
um and our collision detection is

60
00:01:52,478 --> 00:01:55,759
working well enough

61
00:01:54,078 --> 00:01:57,118
um but it looked like there were some

62
00:01:55,759 --> 00:02:00,959
problems with it

63
00:01:57,118 --> 00:02:03,280
um and i wanted to see if we could uh

64
00:02:00,959 --> 00:02:04,158
get some better diagramming in here just

65
00:02:03,280 --> 00:02:06,239
so i can

66
00:02:04,159 --> 00:02:07,200
figure out whether or not there are some

67
00:02:06,239 --> 00:02:10,318
more bugs in it

68
00:02:07,200 --> 00:02:12,800
or as we see bugs that come up

69
00:02:10,318 --> 00:02:13,679
in the course of using it i want those

70
00:02:12,800 --> 00:02:15,280
to not be

71
00:02:13,680 --> 00:02:16,400
super mysterious or difficult and i

72
00:02:15,280 --> 00:02:18,239
think the thing we're seeing is like

73
00:02:16,400 --> 00:02:22,159
this dude

74
00:02:18,239 --> 00:02:25,039
um well okay so unfortunately right now

75
00:02:22,159 --> 00:02:26,878
i'm not seeing much in the way of the

76
00:02:25,039 --> 00:02:30,000
bugs that we were seeing before

77
00:02:26,878 --> 00:02:30,318
um so that's a little unnerving but you

78
00:02:30,000 --> 00:02:31,759
know

79
00:02:30,318 --> 00:02:32,958
i still i just still want to do it i

80
00:02:31,759 --> 00:02:34,239
thought yeah there you go so there's

81
00:02:32,959 --> 00:02:35,519
some weird like it was getting kind of

82
00:02:34,239 --> 00:02:36,400
stuck in the ground a little bit there i

83
00:02:35,519 --> 00:02:37,680
felt like

84
00:02:36,400 --> 00:02:39,760
there were just some things where it

85
00:02:37,680 --> 00:02:42,640
felt like there were some bugs and

86
00:02:39,759 --> 00:02:43,919
you know it's always hard to know um oh

87
00:02:42,639 --> 00:02:46,000
like right there though

88
00:02:43,919 --> 00:02:48,000
so i don't know if i guess i don't know

89
00:02:46,000 --> 00:02:48,959
if those guys have circular collisions

90
00:02:48,000 --> 00:02:50,400
or not

91
00:02:48,959 --> 00:02:52,239
they might not so maybe that's what's

92
00:02:50,400 --> 00:02:53,760
going on there but there's just a bunch

93
00:02:52,239 --> 00:02:54,400
of things like that that i'm just not

94
00:02:53,759 --> 00:02:56,560
sure

95
00:02:54,400 --> 00:02:57,599
what's happening and if i'm not sure

96
00:02:56,560 --> 00:03:00,959
what's happening

97
00:02:57,598 --> 00:03:01,359
then i kind of need um a way oh so like

98
00:03:00,959 --> 00:03:05,759
yeah

99
00:03:01,360 --> 00:03:08,959
like that's

100
00:03:05,759 --> 00:03:12,158
here's an example hopefully

101
00:03:08,959 --> 00:03:16,000
right um

102
00:03:12,158 --> 00:03:17,199
well i mean yeah but i still think that

103
00:03:16,000 --> 00:03:20,400
should probably work

104
00:03:17,199 --> 00:03:21,759
right like when something gets in like

105
00:03:20,400 --> 00:03:23,280
that kind of insight we should be

106
00:03:21,759 --> 00:03:23,759
allowed it should be allowed to get out

107
00:03:23,280 --> 00:03:26,000
of that

108
00:03:23,759 --> 00:03:28,079
right and it's having trouble doing that

109
00:03:26,000 --> 00:03:28,959
now and i'm sure it will be allowed to

110
00:03:28,080 --> 00:03:31,599
get out of it

111
00:03:28,959 --> 00:03:33,039
uh if we do that right but i think it

112
00:03:31,598 --> 00:03:34,399
should have still been able to do like a

113
00:03:33,039 --> 00:03:35,840
roll off of that so

114
00:03:34,400 --> 00:03:38,080
you can see that i just think there's

115
00:03:35,840 --> 00:03:40,640
some bugs in here um

116
00:03:38,080 --> 00:03:42,400
they may not be literal bugs in the code

117
00:03:40,639 --> 00:03:44,000
they may be misunderstandings about how

118
00:03:42,400 --> 00:03:44,719
we set things up you know it could be

119
00:03:44,000 --> 00:03:46,719
anything

120
00:03:44,719 --> 00:03:47,919
but without better drawing there's no

121
00:03:46,719 --> 00:03:51,039
way i'm gonna know

122
00:03:47,919 --> 00:03:54,158
right i just won't know what's happening

123
00:03:51,039 --> 00:03:57,759
and so as we see stuff like that happen

124
00:03:54,158 --> 00:04:00,719
i need some way of getting uh

125
00:03:57,759 --> 00:04:01,039
of getting a visual so that i can debug

126
00:04:00,719 --> 00:04:02,479
it

127
00:04:01,039 --> 00:04:04,158
and that's really the only thing that

128
00:04:02,479 --> 00:04:05,679
i'm talking about at this point

129
00:04:04,158 --> 00:04:07,039
there's also the uh the fact that we

130
00:04:05,680 --> 00:04:08,959
would like to add a spatial partition

131
00:04:07,039 --> 00:04:11,280
but that's purely optimization

132
00:04:08,959 --> 00:04:13,438
so i don't care about that right now uh

133
00:04:11,280 --> 00:04:14,479
what i care about is the ability to do

134
00:04:13,438 --> 00:04:17,680
like you know

135
00:04:14,479 --> 00:04:19,358
uh good debugging right i also like how

136
00:04:17,680 --> 00:04:19,918
our under damp spring goes nuts check

137
00:04:19,358 --> 00:04:22,478
that out

138
00:04:19,918 --> 00:04:24,478
that's awesome this is why you never use

139
00:04:22,478 --> 00:04:25,279
an underdamped pdc for controlling

140
00:04:24,478 --> 00:04:28,319
things because it

141
00:04:25,279 --> 00:04:30,478
goes crazy like that right

142
00:04:28,319 --> 00:04:31,918
and that's just that spring getting too

143
00:04:30,478 --> 00:04:34,000
powerful right

144
00:04:31,918 --> 00:04:35,120
as the frame rate goes down it's an it's

145
00:04:34,000 --> 00:04:38,160
a it's a

146
00:04:35,120 --> 00:04:39,680
uh frame rate dependent equation and you

147
00:04:38,160 --> 00:04:41,040
get those kinds of behaviors as the

148
00:04:39,680 --> 00:04:42,160
frame rate goes down or if there's a

149
00:04:41,040 --> 00:04:44,560
slow frame or something

150
00:04:42,160 --> 00:04:46,000
right uh and it just builds up so much

151
00:04:44,560 --> 00:04:47,280
kinetic energy that it can just like

152
00:04:46,000 --> 00:04:50,639
shoot over anything

153
00:04:47,279 --> 00:04:52,239
right anyway uh

154
00:04:50,639 --> 00:04:53,360
those are other problems though that

155
00:04:52,240 --> 00:04:55,199
we'll deal with later that has nothing

156
00:04:53,360 --> 00:04:57,759
to do with collision detection at all

157
00:04:55,199 --> 00:04:58,800
so anyway that's what we want to do uh

158
00:04:57,759 --> 00:05:01,038
that's our goal

159
00:04:58,800 --> 00:05:02,079
is just to figure out how to not have

160
00:05:01,038 --> 00:05:03,839
that problem

161
00:05:02,079 --> 00:05:05,599
right is that a single oh no that's two

162
00:05:03,839 --> 00:05:07,679
snakes i was like why is there one snake

163
00:05:05,600 --> 00:05:10,720
that long it's not it's two snakes

164
00:05:07,680 --> 00:05:12,000
um so that's all we really need to do uh

165
00:05:10,720 --> 00:05:13,840
but it just takes a while to do

166
00:05:12,000 --> 00:05:14,879
something like that right to put in a

167
00:05:13,839 --> 00:05:17,758
system and

168
00:05:14,879 --> 00:05:20,000
uh we made sort of an idea for it here

169
00:05:17,759 --> 00:05:22,560
where we said all right suppose that we

170
00:05:20,000 --> 00:05:23,360
just have a way of anywhere in the code

171
00:05:22,560 --> 00:05:26,160
that we want to

172
00:05:23,360 --> 00:05:27,600
we can just do a bunch of this stuff

173
00:05:26,160 --> 00:05:30,479
where we just have like hey

174
00:05:27,600 --> 00:05:32,160
here's diagrams right so you say diagram

175
00:05:30,478 --> 00:05:35,599
this diagram that

176
00:05:32,160 --> 00:05:39,520
um and what we want to do here

177
00:05:35,600 --> 00:05:42,160
is we want to just be able to uh

178
00:05:39,519 --> 00:05:43,918
we want to just be able to say any

179
00:05:42,160 --> 00:05:46,400
diagram that we want to make

180
00:05:43,918 --> 00:05:47,120
we can output this way and then we can

181
00:05:46,399 --> 00:05:50,478
look

182
00:05:47,120 --> 00:05:53,600
uh at what it actually drew

183
00:05:50,478 --> 00:05:54,399
later right so it's basically a debug

184
00:05:53,600 --> 00:05:58,160
buffer

185
00:05:54,399 --> 00:06:00,000
is all it is that fills up with uh

186
00:05:58,160 --> 00:06:02,560
you know it fills up with drawing

187
00:06:00,000 --> 00:06:02,560
instructions

188
00:06:02,800 --> 00:06:09,360
and it's really exactly the same

189
00:06:06,240 --> 00:06:09,680
as our render uh like our render command

190
00:06:09,360 --> 00:06:12,000
list

191
00:06:09,680 --> 00:06:12,879
stuff right it just builds up a series

192
00:06:12,000 --> 00:06:14,959
of commands

193
00:06:12,879 --> 00:06:16,079
that you then do and the only difference

194
00:06:14,959 --> 00:06:18,478
between

195
00:06:16,079 --> 00:06:20,159
that renderer and this one is that

196
00:06:18,478 --> 00:06:21,519
render is meant for like actually

197
00:06:20,160 --> 00:06:23,280
driving the gpu

198
00:06:21,519 --> 00:06:26,639
this one is instead meant for

199
00:06:23,279 --> 00:06:29,679
convenience it's just meant for

200
00:06:26,639 --> 00:06:32,840
say whatever you kind of want to draw

201
00:06:29,680 --> 00:06:34,160
as broadly as possible so it's easy for

202
00:06:32,839 --> 00:06:38,079
you

203
00:06:34,160 --> 00:06:38,080
uh and then we'll draw that

204
00:06:38,879 --> 00:06:42,478
for you later by translating those high

205
00:06:41,519 --> 00:06:44,079
level commands

206
00:06:42,478 --> 00:06:45,839
into the kinds of things that the

207
00:06:44,079 --> 00:06:49,279
renderer can actually produce like

208
00:06:45,839 --> 00:06:50,879
lines right

209
00:06:49,279 --> 00:06:52,719
so that's all we're trying to do here

210
00:06:50,879 --> 00:06:54,079
and you can kind of see there's a couple

211
00:06:52,720 --> 00:06:56,000
of things that seem

212
00:06:54,079 --> 00:06:58,240
maybe like they're missing here like it

213
00:06:56,000 --> 00:07:00,319
probably would be good to have

214
00:06:58,240 --> 00:07:01,439
something like this that we didn't put

215
00:07:00,319 --> 00:07:03,598
in there

216
00:07:01,439 --> 00:07:04,719
so that you can change what color is the

217
00:07:03,598 --> 00:07:07,598
thing that you're drawing

218
00:07:04,720 --> 00:07:10,720
you know what i mean um that's probably

219
00:07:07,598 --> 00:07:13,560
a good thing to put in there

220
00:07:10,720 --> 00:07:14,840
and i don't know about maybe line weight

221
00:07:13,560 --> 00:07:17,839
[Music]

222
00:07:14,839 --> 00:07:17,839
um

223
00:07:19,759 --> 00:07:23,520
something like that and so i don't

224
00:07:22,079 --> 00:07:25,439
really know like what are those things

225
00:07:23,519 --> 00:07:26,959
we need but i feel like we probably want

226
00:07:25,439 --> 00:07:28,639
some things like that that would just be

227
00:07:26,959 --> 00:07:30,079
sticky so you can say like here's the

228
00:07:28,639 --> 00:07:33,038
thickness here's the color

229
00:07:30,079 --> 00:07:33,038
or whatever right

230
00:07:33,279 --> 00:07:39,918
um that seems fine

231
00:07:37,598 --> 00:07:39,918
and

232
00:07:40,720 --> 00:07:44,400
yeah i don't think we need to belabor

233
00:07:42,079 --> 00:07:45,680
the point too much so when you look at

234
00:07:44,399 --> 00:07:47,769
this you can kind of see

235
00:07:45,680 --> 00:07:49,680
and i'll pop these two

236
00:07:47,769 --> 00:07:51,120
[Music]

237
00:07:49,680 --> 00:07:53,759
additional functions we made down in

238
00:07:51,120 --> 00:07:56,240
there too so

239
00:07:53,759 --> 00:07:57,520
uh and if you take a look at these you

240
00:07:56,240 --> 00:07:58,000
can kind of see all they're going to be

241
00:07:57,519 --> 00:08:00,478
doing is

242
00:07:58,000 --> 00:08:02,160
cueing this stuff up right there's not a

243
00:08:00,478 --> 00:08:04,478
whole lot to it

244
00:08:02,160 --> 00:08:05,520
uh and so what i'd like to do is just

245
00:08:04,478 --> 00:08:07,918
have some way

246
00:08:05,519 --> 00:08:09,198
of cueing these that is relatively

247
00:08:07,918 --> 00:08:10,799
straightforward again we're not going to

248
00:08:09,199 --> 00:08:12,879
do anything fancy

249
00:08:10,800 --> 00:08:14,560
um so what i might do is say well there

250
00:08:12,879 --> 00:08:17,680
are these phases

251
00:08:14,560 --> 00:08:20,399
right and you know

252
00:08:17,680 --> 00:08:21,598
it's got like begin and end for phases

253
00:08:20,399 --> 00:08:23,439
and i think

254
00:08:21,598 --> 00:08:25,199
sorry no it's got phases and a beginning

255
00:08:23,439 --> 00:08:26,079
end for diagrams and the diagrams

256
00:08:25,199 --> 00:08:28,478
presumably

257
00:08:26,079 --> 00:08:28,478
are like

258
00:08:33,519 --> 00:08:37,839
we will want to be able to isolate

259
00:08:35,918 --> 00:08:40,478
individual ones

260
00:08:37,839 --> 00:08:41,200
you know what i'm saying so we'll want

261
00:08:40,479 --> 00:08:42,959
to be able

262
00:08:41,200 --> 00:08:44,879
and you know the other thing is the

263
00:08:42,958 --> 00:08:48,239
names that go in here

264
00:08:44,879 --> 00:08:51,039
uh i don't know if those

265
00:08:48,240 --> 00:08:51,680
want to like i don't know to what extent

266
00:08:51,039 --> 00:08:55,838
we

267
00:08:51,679 --> 00:08:55,838
use those too much

268
00:08:56,080 --> 00:08:59,120
so i'm not sure if those should actually

269
00:08:57,519 --> 00:09:01,759
be labels like this or not i don't know

270
00:08:59,120 --> 00:09:03,600
doesn't really matter point being um so

271
00:09:01,759 --> 00:09:05,519
what i might do is just say look there's

272
00:09:03,600 --> 00:09:08,159
like a diagram entry

273
00:09:05,519 --> 00:09:09,600
um and the diagram entry is gonna have

274
00:09:08,159 --> 00:09:13,278
like all of this stuff in it

275
00:09:09,600 --> 00:09:17,519
right so it's gonna have the color um

276
00:09:13,278 --> 00:09:21,600
and thickness in it uh it's gonna have

277
00:09:17,519 --> 00:09:26,000
like a uh you know maybe like an

278
00:09:21,600 --> 00:09:29,278
a and a b kind of a thing um

279
00:09:26,000 --> 00:09:29,278
and it's gonna have to have a type

280
00:09:32,720 --> 00:09:36,080
uh and in here we're gonna have things

281
00:09:34,879 --> 00:09:38,559
like what we

282
00:09:36,080 --> 00:09:39,278
said we would draw so we've got like a

283
00:09:38,559 --> 00:09:42,559
sphere

284
00:09:39,278 --> 00:09:45,200
a line um and a box

285
00:09:42,559 --> 00:09:47,119
at least uh and then we have some

286
00:09:45,200 --> 00:09:51,600
special things that are like a

287
00:09:47,120 --> 00:09:54,080
you know these are not actually

288
00:09:51,600 --> 00:09:55,440
i might pop a diagram null in here as

289
00:09:54,080 --> 00:09:59,360
well

290
00:09:55,440 --> 00:10:02,079
uh and then a uh a diagram count

291
00:09:59,360 --> 00:10:02,560
and so in here i would say like okay

292
00:10:02,078 --> 00:10:05,759
there's

293
00:10:02,559 --> 00:10:09,759
probably things in here like a

294
00:10:05,759 --> 00:10:13,600
phase a diagram um

295
00:10:09,759 --> 00:10:15,360
and a result which are sort of pseudo

296
00:10:13,600 --> 00:10:17,120
it's weird to have diagram diagram but

297
00:10:15,360 --> 00:10:20,159
yeah that's what we've got

298
00:10:17,120 --> 00:10:22,879
um and these are the types

299
00:10:20,159 --> 00:10:23,600
of things that can come in to this right

300
00:10:22,879 --> 00:10:27,200
uh

301
00:10:23,600 --> 00:10:29,519
this entry thing and they

302
00:10:27,200 --> 00:10:31,120
just have a bunch of different things

303
00:10:29,519 --> 00:10:34,639
that we will stack up

304
00:10:31,120 --> 00:10:34,639
and you know i think that's

305
00:10:34,958 --> 00:10:39,278
that's pretty much all we would really

306
00:10:36,399 --> 00:10:41,679
need there um

307
00:10:39,278 --> 00:10:42,480
there's maybe some parameter stuff like

308
00:10:41,679 --> 00:10:45,519
this

309
00:10:42,480 --> 00:10:48,149
uh that we would want so maybe

310
00:10:45,519 --> 00:10:50,720
maybe we have like a

311
00:10:48,149 --> 00:10:55,519
[Music]

312
00:10:50,720 --> 00:10:58,240
i don't know a parameter like that

313
00:10:55,519 --> 00:10:59,440
um and maybe these are from two kind of

314
00:10:58,240 --> 00:11:02,079
as well

315
00:10:59,440 --> 00:11:03,040
um or something like that or i i don't

316
00:11:02,078 --> 00:11:04,000
know i mean

317
00:11:03,039 --> 00:11:06,078
there's a couple of different ways you

318
00:11:04,000 --> 00:11:06,879
could look at that uh i think i'm just

319
00:11:06,078 --> 00:11:10,639
going to do

320
00:11:06,879 --> 00:11:14,958
uh a and b or like you know that

321
00:11:10,639 --> 00:11:18,159
uh two points just because i

322
00:11:14,958 --> 00:11:21,518
if you want to be mr always

323
00:11:18,159 --> 00:11:24,958
uh you know lays things out

324
00:11:21,519 --> 00:11:26,320
exactly and i have to have a type for

325
00:11:24,958 --> 00:11:28,078
everything

326
00:11:26,320 --> 00:11:30,160
then what you would do is you'd make a

327
00:11:28,078 --> 00:11:31,599
struct for the sphere a structure for

328
00:11:30,159 --> 00:11:33,120
the line instruct for a box and you'd

329
00:11:31,600 --> 00:11:34,560
put a union in here

330
00:11:33,120 --> 00:11:36,399
to me that just seems like a waste of

331
00:11:34,559 --> 00:11:38,000
time so rather being mr lays everything

332
00:11:36,399 --> 00:11:39,839
out i'm going to be misses doesn't lay

333
00:11:38,000 --> 00:11:41,200
everything out and just uses a generic

334
00:11:39,839 --> 00:11:43,200
parameter

335
00:11:41,200 --> 00:11:44,320
because i really just don't care like i

336
00:11:43,200 --> 00:11:45,200
don't think i'm going to get any

337
00:11:44,320 --> 00:11:48,480
additional

338
00:11:45,200 --> 00:11:49,759
valuable error checking for that so i

339
00:11:48,480 --> 00:11:52,879
just don't think it matters

340
00:11:49,759 --> 00:11:56,319
right so

341
00:11:52,879 --> 00:11:59,120
that's all i need for the basics and

342
00:11:56,320 --> 00:12:01,040
if i go to the actual file here and i

343
00:11:59,120 --> 00:12:04,720
just sort of stick

344
00:12:01,039 --> 00:12:05,919
a global in here and i say like global

345
00:12:04,720 --> 00:12:09,360
diagram

346
00:12:05,919 --> 00:12:11,919
entries uh and you know

347
00:12:09,360 --> 00:12:13,759
i don't know i may not exactly want to

348
00:12:11,919 --> 00:12:14,559
do that i may say that there's a thing

349
00:12:13,759 --> 00:12:18,319
that's like

350
00:12:14,559 --> 00:12:22,638
diagram uh group or whatever

351
00:12:18,320 --> 00:12:24,000
and this is you know

352
00:12:22,639 --> 00:12:25,919
it's got the color and the thickness

353
00:12:24,000 --> 00:12:29,440
that you currently set

354
00:12:25,919 --> 00:12:34,078
uh and then it's got like a entry count

355
00:12:29,440 --> 00:12:34,079
and then it's got the entries um

356
00:12:34,559 --> 00:12:37,599
like this and you know i don't know how

357
00:12:36,720 --> 00:12:39,040
many this has

358
00:12:37,600 --> 00:12:42,720
and no one cares because it's debug

359
00:12:39,039 --> 00:12:42,719
anyway uh

360
00:12:46,320 --> 00:12:52,720
but something like that and obviously

361
00:12:50,078 --> 00:12:54,799
this stuff can be disabled in in debug

362
00:12:52,720 --> 00:12:57,920
mode so we can just say

363
00:12:54,799 --> 00:12:58,479
look if you're not doing an internal

364
00:12:57,919 --> 00:13:00,479
build

365
00:12:58,480 --> 00:13:03,600
then you really don't need any of this

366
00:13:00,480 --> 00:13:05,600
stuff um

367
00:13:03,600 --> 00:13:07,360
and i guess we already have a thing for

368
00:13:05,600 --> 00:13:10,800
it here right

369
00:13:07,360 --> 00:13:13,919
so we can't just disable those uh

370
00:13:10,799 --> 00:13:15,120
by by just making all of these things

371
00:13:13,919 --> 00:13:17,759
not happen

372
00:13:15,120 --> 00:13:19,600
right and i don't know why we didn't

373
00:13:17,759 --> 00:13:22,000
already do that uh probably because we

374
00:13:19,600 --> 00:13:25,278
didn't much care

375
00:13:22,000 --> 00:13:27,278
uh at the time but all i'm going to do

376
00:13:25,278 --> 00:13:29,600
here is just i'm just going to take

377
00:13:27,278 --> 00:13:29,600
these

378
00:13:30,159 --> 00:13:34,879
wouldn't it be amazing if like anyone at

379
00:13:33,120 --> 00:13:35,839
the c plus committee learned to program

380
00:13:34,879 --> 00:13:37,679
someday

381
00:13:35,839 --> 00:13:39,680
and then they would know that this is a

382
00:13:37,679 --> 00:13:42,159
very common thing that people do

383
00:13:39,679 --> 00:13:43,759
so maybe they should just have a way to

384
00:13:42,159 --> 00:13:46,958
define a keyword

385
00:13:43,759 --> 00:13:49,120
that is this thing disappears

386
00:13:46,958 --> 00:13:50,078
when this command when this uh pound

387
00:13:49,120 --> 00:13:53,278
define

388
00:13:50,078 --> 00:13:55,519
happens right

389
00:13:53,278 --> 00:13:55,519
like

390
00:13:57,278 --> 00:14:00,879
you know all of this nonsense could go

391
00:14:00,320 --> 00:14:03,600
away

392
00:14:00,879 --> 00:14:04,480
with one tiny language feature but you

393
00:14:03,600 --> 00:14:06,079
know

394
00:14:04,480 --> 00:14:07,600
we've been waiting 40 years and it

395
00:14:06,078 --> 00:14:09,439
hasn't happened so i'm gonna go ahead

396
00:14:07,600 --> 00:14:12,000
and guess

397
00:14:09,440 --> 00:14:13,760
that it's never gonna because that would

398
00:14:12,000 --> 00:14:16,559
require someone who actually programs

399
00:14:13,759 --> 00:14:21,600
for a living

400
00:14:16,559 --> 00:14:21,599
to be on the c plus committee all right

401
00:14:21,679 --> 00:14:28,719
so by the way i don't suppose

402
00:14:26,159 --> 00:14:29,600
john is watching but if john was

403
00:14:28,720 --> 00:14:31,680
watching

404
00:14:29,600 --> 00:14:34,240
i would love to know what jai's solution

405
00:14:31,679 --> 00:14:38,879
to this problem is because i'm guessing

406
00:14:34,240 --> 00:14:41,600
he has probably addressed this um

407
00:14:38,879 --> 00:14:43,519
because he does program for a living and

408
00:14:41,600 --> 00:14:46,560
he's probably had to write

409
00:14:43,519 --> 00:14:49,519
stupid code like this before uh

410
00:14:46,559 --> 00:14:49,838
and i'm guessing he probably fixed that

411
00:14:49,519 --> 00:14:51,440
but

412
00:14:49,839 --> 00:14:52,800
i don't actually know he may never have

413
00:14:51,440 --> 00:14:54,000
gotten to that i mean there's a lot of

414
00:14:52,799 --> 00:14:55,039
things to do when you're making a

415
00:14:54,000 --> 00:14:57,198
language so

416
00:14:55,039 --> 00:14:58,399
he may not have actually gotten a chance

417
00:14:57,198 --> 00:15:00,078
to address something like this before

418
00:14:58,399 --> 00:15:02,559
but i'd be curious to know what he did

419
00:15:00,078 --> 00:15:02,559
if he did

420
00:15:03,278 --> 00:15:08,159
i might reorganize that slightly

421
00:15:11,440 --> 00:15:16,160
okay um to be honest i guess i'm not

422
00:15:14,720 --> 00:15:19,680
sure why there's a diagram

423
00:15:16,159 --> 00:15:19,679
end because

424
00:15:22,159 --> 00:15:25,439
you kind of just have these hierarchical

425
00:15:24,480 --> 00:15:28,800
phases

426
00:15:25,440 --> 00:15:32,000
right um and so

427
00:15:28,799 --> 00:15:33,758
i think maybe that was just a dumb idea

428
00:15:32,000 --> 00:15:35,759
like if you had to look at what was

429
00:15:33,759 --> 00:15:38,240
going on here you would probably say

430
00:15:35,759 --> 00:15:38,240
something

431
00:15:38,839 --> 00:15:41,839
uh

432
00:15:43,198 --> 00:15:45,919
you would probably

433
00:15:47,519 --> 00:15:51,519
you would probably not do what i did

434
00:15:49,759 --> 00:15:53,759
right like like

435
00:15:51,519 --> 00:15:55,600
that doesn't really make a lot of sense

436
00:15:53,759 --> 00:15:56,480
you would probably say something more

437
00:15:55,600 --> 00:16:00,079
like this

438
00:15:56,480 --> 00:16:02,560
where you say uh there's a diagram phase

439
00:16:00,078 --> 00:16:03,679
and there's like a phase depth or

440
00:16:02,559 --> 00:16:06,879
something

441
00:16:03,679 --> 00:16:08,319
you know what i mean um

442
00:16:06,879 --> 00:16:10,958
where you just say like oh there are

443
00:16:08,320 --> 00:16:14,480
these phases and they they push

444
00:16:10,958 --> 00:16:15,838
so you know i

445
00:16:14,480 --> 00:16:17,440
and i guess what i could say is if you

446
00:16:15,839 --> 00:16:19,040
were going to do a begin end then you

447
00:16:17,440 --> 00:16:21,440
would just make that be hiracle so so

448
00:16:19,039 --> 00:16:23,838
yeah so so let's say

449
00:16:21,440 --> 00:16:23,839
um

450
00:16:24,639 --> 00:16:29,360
let's say that we just have phases and

451
00:16:27,198 --> 00:16:30,240
at the beginning end you can just make

452
00:16:29,360 --> 00:16:32,720
some

453
00:16:30,240 --> 00:16:34,959
like nested diagrams because otherwise

454
00:16:32,720 --> 00:16:36,399
it seems like we've just got extra calls

455
00:16:34,958 --> 00:16:38,239
and those calls don't actually do

456
00:16:36,399 --> 00:16:42,720
anything so

457
00:16:38,240 --> 00:16:46,959
you know um let's just say

458
00:16:42,720 --> 00:16:51,839
that that is what we're doing

459
00:16:46,958 --> 00:16:51,838
or something i don't know

460
00:17:08,640 --> 00:17:14,319
um so yeah

461
00:17:12,240 --> 00:17:16,838
like i'm just assuming we dump stuff to

462
00:17:14,318 --> 00:17:19,838
this thing

463
00:17:16,838 --> 00:17:19,838
and

464
00:17:31,679 --> 00:17:36,960
yeah so i think what we want is maybe

465
00:17:34,720 --> 00:17:36,960
this

466
00:17:37,519 --> 00:17:42,079
right uh and each time you do one of

467
00:17:40,240 --> 00:17:47,599
these it can like set the pen

468
00:17:42,079 --> 00:17:50,720
or something so then there would be uh

469
00:17:47,599 --> 00:17:50,719
like this

470
00:17:51,759 --> 00:17:57,599
um where if you didn't actually want

471
00:17:54,960 --> 00:17:58,160
to set the pen and you wanted to put

472
00:17:57,599 --> 00:18:01,279
text

473
00:17:58,160 --> 00:18:06,400
out you could so i think that's

474
00:18:01,279 --> 00:18:06,399
maybe more like what i'm thinking here

475
00:18:12,839 --> 00:18:15,839
um

476
00:18:20,079 --> 00:18:22,480
by the way before i forget i should

477
00:18:21,119 --> 00:18:29,839
check chat to see if anyone knows if

478
00:18:22,480 --> 00:18:29,839
john implemented that thing

479
00:18:45,279 --> 00:18:48,319
so i guess nobody knows

480
00:18:50,319 --> 00:18:55,439
um all right so anyway that all looks

481
00:18:53,839 --> 00:18:59,038
fine begin end color

482
00:18:55,440 --> 00:19:02,558
thickness sphere line box

483
00:18:59,038 --> 00:19:02,558
point text out

484
00:19:05,440 --> 00:19:11,840
okay um

485
00:19:18,240 --> 00:19:21,359
so i don't really know exactly what i

486
00:19:20,000 --> 00:19:24,720
want to do here but it's probably going

487
00:19:21,359 --> 00:19:28,719
to be something like that

488
00:19:24,720 --> 00:19:30,400
right uh and and so now these

489
00:19:28,720 --> 00:19:34,640
these have to be changed a little bit so

490
00:19:30,400 --> 00:19:34,640
it's probably gonna look more like this

491
00:19:36,839 --> 00:19:39,839
um

492
00:19:42,319 --> 00:19:44,720
i think

493
00:19:48,720 --> 00:19:52,640
all right so let's give that a shot uh a

494
00:19:52,160 --> 00:19:55,759
shot

495
00:19:52,640 --> 00:19:55,759
a implementation shot

496
00:19:57,519 --> 00:20:02,480
um and we could too if we want

497
00:20:00,720 --> 00:20:04,159
uh we could make this a little bit

498
00:20:02,480 --> 00:20:05,759
squinkier

499
00:20:04,159 --> 00:20:08,240
i don't know how squeaky we want it to

500
00:20:05,759 --> 00:20:11,599
be uh but we could make it

501
00:20:08,240 --> 00:20:13,038
fairly squinky by actually making this

502
00:20:11,599 --> 00:20:14,639
an arena that can just have as much

503
00:20:13,038 --> 00:20:18,839
stuff in it as we want

504
00:20:14,640 --> 00:20:20,880
so the other thing i could do is just

505
00:20:18,839 --> 00:20:24,399
this

506
00:20:20,880 --> 00:20:24,400
right uh

507
00:20:29,038 --> 00:20:34,240
you know so that it just like threads

508
00:20:31,440 --> 00:20:35,600
these things

509
00:20:34,240 --> 00:20:38,798
and you can just have as many as you

510
00:20:35,599 --> 00:20:42,240
want so i don't really remember

511
00:20:38,798 --> 00:20:46,319
how this works uh and

512
00:20:42,240 --> 00:20:50,480
i don't really care

513
00:20:46,319 --> 00:20:53,839
but i'm going to assume

514
00:20:50,480 --> 00:20:54,319
that it does things the way i do them

515
00:20:53,839 --> 00:20:57,599
now

516
00:20:54,319 --> 00:21:00,319
even though this code is old

517
00:20:57,599 --> 00:21:01,678
all right so i'm going to assume that

518
00:21:00,319 --> 00:21:05,200
that we can

519
00:21:01,679 --> 00:21:07,440
just do that right uh

520
00:21:05,200 --> 00:21:08,720
and that way we can then just say all

521
00:21:07,440 --> 00:21:12,798
right uh

522
00:21:08,720 --> 00:21:17,839
if enable diagrams and if and just to be

523
00:21:12,798 --> 00:21:17,839
you know

524
00:21:18,079 --> 00:21:22,879
maybe that's more what that should be

525
00:21:23,519 --> 00:21:27,200
but that way all of this stuff uh will

526
00:21:25,919 --> 00:21:30,480
compile out

527
00:21:27,200 --> 00:21:33,840
automatically right uh and i don't have

528
00:21:30,480 --> 00:21:35,279
to rely like i don't have to rely on it

529
00:21:33,839 --> 00:21:37,519
somehow compiling this out which it

530
00:21:35,279 --> 00:21:40,879
might not right

531
00:21:37,519 --> 00:21:43,200
so that all seems fine uh

532
00:21:40,880 --> 00:21:45,039
no real issues there and then in here

533
00:21:43,200 --> 00:21:45,759
where we've got these like phases that

534
00:21:45,038 --> 00:21:48,798
would be what would

535
00:21:45,759 --> 00:21:52,798
what would get pushed on here uh and so

536
00:21:48,798 --> 00:21:52,798
this will need a like a phase depth

537
00:21:54,319 --> 00:21:59,839
uh sort of thing and

538
00:22:19,038 --> 00:22:22,798
i'm not super sure

539
00:22:23,339 --> 00:22:26,000
[Music]

540
00:22:24,839 --> 00:22:31,038
um

541
00:22:26,000 --> 00:22:34,558
i want to hold off for just a little bit

542
00:22:31,038 --> 00:22:37,679
on the text side of things um

543
00:22:34,558 --> 00:22:39,119
because i'm not sure how i want to

544
00:22:37,679 --> 00:22:42,000
reference those

545
00:22:39,119 --> 00:22:43,918
there's sort of two ways i can do it and

546
00:22:42,000 --> 00:22:47,279
i'm not sure

547
00:22:43,919 --> 00:22:50,640
which one i actually

548
00:22:47,279 --> 00:22:54,480
want there's

549
00:22:50,640 --> 00:22:56,720
one that attaches text to the thing

550
00:22:54,480 --> 00:22:59,919
by putting it afterwards that's kind of

551
00:22:56,720 --> 00:22:59,919
you know what let's not do that

552
00:23:01,038 --> 00:23:05,919
let's do it like this so you say

553
00:23:03,759 --> 00:23:08,558
beforehand what the thing is

554
00:23:05,919 --> 00:23:09,520
right and then you do it and you get the

555
00:23:08,558 --> 00:23:12,399
thing so

556
00:23:09,519 --> 00:23:14,480
yeah yeah that's probably it um so

557
00:23:12,400 --> 00:23:17,759
there's like text attached to the thing

558
00:23:14,480 --> 00:23:18,720
and blah blah and no one cares and

559
00:23:17,759 --> 00:23:22,240
whatever

560
00:23:18,720 --> 00:23:23,440
right so it probably looks more like

561
00:23:22,240 --> 00:23:27,759
this

562
00:23:23,440 --> 00:23:27,759
um right

563
00:23:31,279 --> 00:23:35,279
uh you know what i'm saying so you've

564
00:23:34,240 --> 00:23:37,519
got

565
00:23:35,279 --> 00:23:39,038
what comes after it in the list you've

566
00:23:37,519 --> 00:23:40,960
got what is the actual

567
00:23:39,038 --> 00:23:44,158
like text stuff that's going to be here

568
00:23:40,960 --> 00:23:44,159
i don't remember

569
00:23:47,919 --> 00:23:51,759
i don't really remember how this works

570
00:23:50,000 --> 00:23:55,359
when we print stuff out

571
00:23:51,759 --> 00:24:04,000
uh yeah so it's kind of crappy

572
00:23:55,359 --> 00:24:05,918
right um

573
00:24:04,000 --> 00:24:07,679
yeah it's kind of crappy because we

574
00:24:05,919 --> 00:24:10,559
ported it like basically what we did is

575
00:24:07,679 --> 00:24:13,360
we made our own printf

576
00:24:10,558 --> 00:24:14,879
um and so it's not designed particularly

577
00:24:13,359 --> 00:24:19,839
smart

578
00:24:14,880 --> 00:24:24,799
uh right like it's it's not

579
00:24:19,839 --> 00:24:24,798
it's not that good uh and that's fine

580
00:24:28,798 --> 00:24:35,200
so anyway

581
00:24:32,480 --> 00:24:36,720
let's call it that uh and so you

582
00:24:35,200 --> 00:24:39,519
everyone can have

583
00:24:36,720 --> 00:24:41,360
a buffer of text that's associated with

584
00:24:39,519 --> 00:24:44,158
whatever it is they're doing

585
00:24:41,359 --> 00:24:45,119
uh they can have you know whatever this

586
00:24:44,159 --> 00:24:48,159
stuff is here

587
00:24:45,119 --> 00:24:50,079
right and you can set like the

588
00:24:48,159 --> 00:24:52,000
parameters or whatever you want for

589
00:24:50,079 --> 00:24:53,759
what's going on now

590
00:24:52,000 --> 00:24:55,440
whether these are sticky or not is kind

591
00:24:53,759 --> 00:24:57,038
of another question

592
00:24:55,440 --> 00:24:58,798
you know maybe you want the thickness to

593
00:24:57,038 --> 00:25:00,079
or the color to be uh

594
00:24:58,798 --> 00:25:02,240
maybe you want the color to be sticky

595
00:25:00,079 --> 00:25:04,720
but the thickness not to be or

596
00:25:02,240 --> 00:25:05,839
you certainly don't want the text uh to

597
00:25:04,720 --> 00:25:08,079
be sticky

598
00:25:05,839 --> 00:25:09,519
i don't think um so it's a little bit

599
00:25:08,079 --> 00:25:11,678
hard to say

600
00:25:09,519 --> 00:25:12,839
what the rules of that would be and they

601
00:25:11,679 --> 00:25:14,480
might be a little

602
00:25:12,839 --> 00:25:16,240
counter-intuitive but they just kind of

603
00:25:14,480 --> 00:25:19,440
do what you want them to do

604
00:25:16,240 --> 00:25:20,319
uh is is you know i wouldn't be mad

605
00:25:19,440 --> 00:25:22,240
about that

606
00:25:20,319 --> 00:25:24,399
but we'll cross that bridge when we come

607
00:25:22,240 --> 00:25:26,640
to it

608
00:25:24,400 --> 00:25:28,320
so in each of these cases all we're

609
00:25:26,640 --> 00:25:32,159
really doing is pushing an entry

610
00:25:28,319 --> 00:25:32,158
onto the stack um

611
00:25:34,880 --> 00:25:38,159
i should say onto the list it is sort of

612
00:25:37,278 --> 00:25:40,720
a stack but

613
00:25:38,159 --> 00:25:42,480
you know who cares um and so what we're

614
00:25:40,720 --> 00:25:45,278
doing here is like

615
00:25:42,480 --> 00:25:46,400
each time here we just have like a thing

616
00:25:45,278 --> 00:25:49,038
that's like

617
00:25:46,400 --> 00:25:49,840
you know uh push diagram entry or

618
00:25:49,038 --> 00:25:52,480
whatever

619
00:25:49,839 --> 00:25:53,359
or append might be the better way to say

620
00:25:52,480 --> 00:25:58,159
it

621
00:25:53,359 --> 00:25:58,158
uh so there's a this thing right

622
00:26:01,038 --> 00:26:04,480
so you grab the the global thing that's

623
00:26:04,079 --> 00:26:06,240
gonna

624
00:26:04,480 --> 00:26:08,640
track these and the reason that it's

625
00:26:06,240 --> 00:26:10,159
global

626
00:26:08,640 --> 00:26:12,159
is there's sort of two ways you might do

627
00:26:10,159 --> 00:26:14,240
this you don't really want people to

628
00:26:12,159 --> 00:26:15,520
have to pass it through the call chain

629
00:26:14,240 --> 00:26:17,599
uh and the reason for that is it's a

630
00:26:15,519 --> 00:26:19,519
debug system so it really doesn't make

631
00:26:17,599 --> 00:26:20,959
sense to architect around it because if

632
00:26:19,519 --> 00:26:22,400
you were doing that it's actually having

633
00:26:20,960 --> 00:26:23,278
implications for your architecture and

634
00:26:22,400 --> 00:26:26,480
the point is the

635
00:26:23,278 --> 00:26:27,839
deodorant system shut end so normally

636
00:26:26,480 --> 00:26:28,558
what you would do is you'd tack it on

637
00:26:27,839 --> 00:26:31,599
the end

638
00:26:28,558 --> 00:26:33,038
of a like thread context and each thread

639
00:26:31,599 --> 00:26:34,798
would have its own context that does get

640
00:26:33,038 --> 00:26:36,158
past the chain for actual architecture

641
00:26:34,798 --> 00:26:37,119
reasons

642
00:26:36,159 --> 00:26:38,480
but we don't actually do that in

643
00:26:37,119 --> 00:26:40,000
handmade hero because we don't thread

644
00:26:38,480 --> 00:26:42,880
very much

645
00:26:40,000 --> 00:26:43,519
so it's just it's just a vanilla global

646
00:26:42,880 --> 00:26:44,640
um

647
00:26:43,519 --> 00:26:46,639
whereas it would be in the thread

648
00:26:44,640 --> 00:26:48,159
context otherwise

649
00:26:46,640 --> 00:26:49,600
those are two choices there really

650
00:26:48,159 --> 00:26:51,520
aren't any other choices passing it

651
00:26:49,599 --> 00:26:54,558
around would not be a good idea

652
00:26:51,519 --> 00:26:55,918
because passing it around would imply

653
00:26:54,558 --> 00:26:57,839
that you've architected for it and you

654
00:26:55,919 --> 00:26:59,278
don't want to architect for debug

655
00:26:57,839 --> 00:27:01,119
architecting for debug is a very bad

656
00:26:59,278 --> 00:27:02,640
idea because it means that you're making

657
00:27:01,119 --> 00:27:04,798
architectural decisions that affect

658
00:27:02,640 --> 00:27:06,320
the actual performance of your program

659
00:27:04,798 --> 00:27:07,839
so that you can enable debug and you

660
00:27:06,319 --> 00:27:09,038
want the opposite you want the debug

661
00:27:07,839 --> 00:27:11,519
system

662
00:27:09,038 --> 00:27:13,119
to be transparent to your architecture

663
00:27:11,519 --> 00:27:14,400
so that when it compiles out there are

664
00:27:13,119 --> 00:27:21,839
no implications

665
00:27:14,400 --> 00:27:21,840
right and that's pretty important so

666
00:27:45,839 --> 00:27:52,720
okay so

667
00:27:49,839 --> 00:27:54,158
for each of these arenas um sorry for

668
00:27:52,720 --> 00:27:57,839
each of these entries i want to

669
00:27:54,159 --> 00:28:02,559
ask the arena uh to give me a new one

670
00:27:57,839 --> 00:28:06,558
so i've got a diagram entry

671
00:28:02,558 --> 00:28:09,200
and i'm just going to say that

672
00:28:06,558 --> 00:28:09,200
this arena

673
00:28:10,159 --> 00:28:14,480
that i've got here should allow me to do

674
00:28:12,398 --> 00:28:17,038
a push struct

675
00:28:14,480 --> 00:28:19,120
of one of these diagram entries right

676
00:28:17,038 --> 00:28:22,720
and that should give me back

677
00:28:19,119 --> 00:28:24,959
uh what's happening here uh oh

678
00:28:22,720 --> 00:28:26,960
did i oh like it looks like there was

679
00:28:24,960 --> 00:28:31,840
like a i accidentally hit like a delete

680
00:28:26,960 --> 00:28:31,840
thing or something

681
00:28:33,679 --> 00:28:42,240
memory arena unknown override specifier

682
00:28:37,119 --> 00:28:42,239
uh where did we put this in the list of

683
00:28:42,839 --> 00:28:45,839
things

684
00:28:52,398 --> 00:29:01,918
so yeah this this probably needs to be

685
00:28:56,960 --> 00:29:01,919
much higher in the list of things right

686
00:29:04,319 --> 00:29:13,839
all right so uh

687
00:29:21,679 --> 00:29:28,480
now the phase thing i guess

688
00:29:25,038 --> 00:29:28,480
each time through this loop

689
00:29:30,000 --> 00:29:41,839
is going to look like that right

690
00:29:46,720 --> 00:29:55,839
uh so there are the phases yeah

691
00:29:57,119 --> 00:30:02,319
and uh we should have had i guess we

692
00:29:59,679 --> 00:30:02,320
weren't using

693
00:30:05,278 --> 00:30:10,640
i see we had that with enable diagram

694
00:30:08,398 --> 00:30:10,639
still

695
00:30:15,839 --> 00:30:18,959
so i don't think anything in there

696
00:30:18,480 --> 00:30:22,079
really

697
00:30:18,960 --> 00:30:37,840
needs to be in a block for enable

698
00:30:22,079 --> 00:30:37,839
diagrams right um

699
00:30:52,000 --> 00:31:05,839
how about this

700
00:31:11,839 --> 00:31:17,119
so in theory i would think that most

701
00:31:14,880 --> 00:31:18,880
compilers who aren't completely brain

702
00:31:17,119 --> 00:31:22,158
dead if you put an

703
00:31:18,880 --> 00:31:24,559
if zero in here uh

704
00:31:22,159 --> 00:31:26,320
then it will compile all of this out

705
00:31:24,558 --> 00:31:29,038
right i mean that's what we would expect

706
00:31:26,319 --> 00:31:31,278
to have happen

707
00:31:29,038 --> 00:31:32,319
so i feel like that should probably be

708
00:31:31,278 --> 00:31:36,720
safe

709
00:31:32,319 --> 00:31:36,720
um right

710
00:31:37,759 --> 00:31:41,960
like like that feels like that should

711
00:31:39,599 --> 00:31:46,000
probably be

712
00:31:41,960 --> 00:31:48,319
uncontroversial uh so that way you can

713
00:31:46,000 --> 00:31:49,839
put things in blocks that are ift on

714
00:31:48,319 --> 00:31:52,879
whether the diagram is

715
00:31:49,839 --> 00:31:54,079
system is diagramming or not uh

716
00:31:52,880 --> 00:31:55,760
and that'll make it very clear to the

717
00:31:54,079 --> 00:31:57,439
compiler without needing pound if blocks

718
00:31:55,759 --> 00:31:58,398
so that they still get compiled and we

719
00:31:57,440 --> 00:32:00,640
know what's going on

720
00:31:58,398 --> 00:32:02,239
and if we change the definition this way

721
00:32:00,640 --> 00:32:06,320
we gotta compile error and stuff

722
00:32:02,240 --> 00:32:08,240
which is what i would prefer right um

723
00:32:06,319 --> 00:32:15,839
so that that i think is more what we

724
00:32:08,240 --> 00:32:15,839
want here

725
00:32:16,960 --> 00:32:21,440
um so yeah

726
00:32:23,278 --> 00:32:26,720
and maybe this is stupid what i'm doing

727
00:32:25,200 --> 00:32:29,840
i don't know

728
00:32:26,720 --> 00:32:29,839
right um

729
00:32:36,079 --> 00:32:39,519
you know maybe we need a more succinct

730
00:32:38,240 --> 00:32:42,960
way

731
00:32:39,519 --> 00:32:45,599
of uh of of

732
00:32:42,960 --> 00:32:46,960
passing this information uh because i

733
00:32:45,599 --> 00:32:50,079
can think of some other ways we

734
00:32:46,960 --> 00:32:53,120
could do it and you know

735
00:32:50,079 --> 00:32:54,720
there's pros and cons to each the

736
00:32:53,119 --> 00:32:56,798
important thing here is i just want

737
00:32:54,720 --> 00:32:59,278
something that works relatively well

738
00:32:56,798 --> 00:33:00,879
and if it's a little verbose that's okay

739
00:32:59,278 --> 00:33:01,679
as long as i can put everything in that

740
00:33:00,880 --> 00:33:04,640
i want

741
00:33:01,679 --> 00:33:05,679
um i think it's all right uh but you

742
00:33:04,640 --> 00:33:07,440
know do we

743
00:33:05,679 --> 00:33:08,798
maybe want something a little more terse

744
00:33:07,440 --> 00:33:10,399
you know you can see why pushing that

745
00:33:08,798 --> 00:33:12,319
out to a text thing

746
00:33:10,398 --> 00:33:14,879
is maybe not as good because it just

747
00:33:12,319 --> 00:33:25,839
makes the code too long

748
00:33:14,880 --> 00:33:25,840
so it's something to think about

749
00:33:41,759 --> 00:33:44,640
right so you know

750
00:33:47,119 --> 00:33:53,839
meh it's not horrible uh

751
00:34:18,639 --> 00:34:35,838
all right um

752
00:34:36,159 --> 00:34:40,320
so yeah the reason i want that is on

753
00:34:39,440 --> 00:34:42,480
switch

754
00:34:40,320 --> 00:34:43,919
is because we probably want to be able

755
00:34:42,480 --> 00:34:47,519
to turn diagrams on

756
00:34:43,918 --> 00:34:48,000
if we even so there's enabling diagrams

757
00:34:47,519 --> 00:34:50,000
which means

758
00:34:48,000 --> 00:34:51,119
is the code compiled in but then we may

759
00:34:50,000 --> 00:34:53,039
also just want to be able to turn them

760
00:34:51,119 --> 00:34:54,720
on and off at runtime in builds when

761
00:34:53,039 --> 00:34:56,960
they are compiled in

762
00:34:54,719 --> 00:34:57,838
and so that's really what that is there

763
00:34:56,960 --> 00:35:01,519
for

764
00:34:57,838 --> 00:35:04,639
um so yeah

765
00:35:01,519 --> 00:35:08,480
uh this is

766
00:35:04,639 --> 00:35:10,879
not this yes so

767
00:35:08,480 --> 00:35:14,639
is on begin end color thickness text

768
00:35:10,880 --> 00:35:14,640
sphere line box point overlay

769
00:35:14,838 --> 00:35:17,838
um

770
00:35:20,239 --> 00:35:30,000
okay so now we just need to buffer these

771
00:35:23,760 --> 00:35:32,480
up uh as they go and so

772
00:35:30,000 --> 00:35:34,960
i guess really what's gonna happen here

773
00:35:32,480 --> 00:35:34,960
is

774
00:35:36,000 --> 00:35:40,719
each time we do be a begin we need to

775
00:35:39,519 --> 00:35:44,000
push on one of these

776
00:35:40,719 --> 00:35:47,358
and you know so this uh

777
00:35:44,000 --> 00:35:50,400
this is gonna be a clear right so

778
00:35:47,358 --> 00:35:53,440
i think we clear by default

779
00:35:50,400 --> 00:35:55,920
uh if i remember correctly we can double

780
00:35:53,440 --> 00:35:55,920
check that

781
00:35:56,800 --> 00:35:59,839
um but i'm pretty sure like the default

782
00:35:59,280 --> 00:36:04,079
thing

783
00:35:59,838 --> 00:36:07,838
to do uh when you do a push size

784
00:36:04,079 --> 00:36:07,839
uh is to to clear

785
00:36:08,000 --> 00:36:13,920
um so so that will just clear it and

786
00:36:12,159 --> 00:36:17,440
then all we have to do is set

787
00:36:13,920 --> 00:36:19,280
the other pieces now probably everyone's

788
00:36:17,440 --> 00:36:21,519
going to pass one of these

789
00:36:19,280 --> 00:36:23,519
so we might as well just say that that

790
00:36:21,519 --> 00:36:26,719
gets set for you

791
00:36:23,519 --> 00:36:29,920
um and then the other things in here

792
00:36:26,719 --> 00:36:31,919
probably can get set

793
00:36:29,920 --> 00:36:32,960
uh based on what the thing is it's

794
00:36:31,920 --> 00:36:34,559
actually being called

795
00:36:32,960 --> 00:36:37,838
some of them probably can get set so

796
00:36:34,559 --> 00:36:37,838
like the value

797
00:36:38,320 --> 00:36:47,599
um and the thickness right

798
00:36:42,639 --> 00:36:50,960
uh oh sorry the color and the thickness

799
00:36:47,599 --> 00:36:53,680
um the color and the thickness can

800
00:36:50,960 --> 00:36:54,000
just get set from the group because

801
00:36:53,679 --> 00:36:56,799
those

802
00:36:54,000 --> 00:36:58,400
are going to be like sticky right this

803
00:36:56,800 --> 00:37:01,839
and this

804
00:36:58,400 --> 00:37:04,090
uh and the same thing would be

805
00:37:01,838 --> 00:37:05,199
probably for the text um

806
00:37:04,090 --> 00:37:08,880
[Music]

807
00:37:05,199 --> 00:37:10,480
right so you would probably expect to

808
00:37:08,880 --> 00:37:13,200
see something

809
00:37:10,480 --> 00:37:13,199
like this

810
00:37:14,800 --> 00:37:19,280
yeah uh and

811
00:37:19,838 --> 00:37:26,239
since you can kind of see where that's

812
00:37:21,599 --> 00:37:28,559
going i feel like you probably want

813
00:37:26,239 --> 00:37:28,559
this

814
00:37:33,920 --> 00:37:38,159
like maybe attributes right

815
00:37:39,920 --> 00:37:44,480
uh and the attributes for each thing

816
00:37:42,079 --> 00:37:47,280
just are in here

817
00:37:44,480 --> 00:37:51,838
you know what i'm saying uh that way we

818
00:37:47,280 --> 00:37:51,839
can have

819
00:37:52,400 --> 00:37:57,920
attributes on the group that just get

820
00:37:54,480 --> 00:37:57,920
applied each time

821
00:38:00,480 --> 00:38:04,000
and furthermore we can do

822
00:38:02,559 --> 00:38:06,320
[Music]

823
00:38:04,000 --> 00:38:06,320
this

824
00:38:12,320 --> 00:38:19,119
so that we have a default set and a

825
00:38:15,280 --> 00:38:21,519
current set

826
00:38:19,119 --> 00:38:21,519
oops

827
00:38:26,559 --> 00:38:31,519
right so that way we can add one more

828
00:38:29,920 --> 00:38:36,639
command

829
00:38:31,519 --> 00:38:36,639
which is like stick

830
00:38:37,440 --> 00:38:47,838
so if you want to set a permanent thing

831
00:38:39,679 --> 00:38:47,838
you can

832
00:38:50,960 --> 00:38:53,199
uh

833
00:38:54,639 --> 00:38:58,239
so after you set like color or thickness

834
00:38:56,719 --> 00:39:01,279
or text or any of those things

835
00:38:58,239 --> 00:39:04,078
if you want those to apply to everything

836
00:39:01,280 --> 00:39:04,560
uh for the rest of the for the rest of

837
00:39:04,079 --> 00:39:07,839
the

838
00:39:04,559 --> 00:39:11,599
uh thing that you're doing um

839
00:39:07,838 --> 00:39:12,078
then you can you can just call stick and

840
00:39:11,599 --> 00:39:16,720
it will

841
00:39:12,079 --> 00:39:16,720
it will apply those settings right

842
00:39:16,880 --> 00:39:23,440
so and all that is is it's just the

843
00:39:21,280 --> 00:39:24,800
it just takes the global attrib group

844
00:39:23,440 --> 00:39:25,679
that where these things are being

845
00:39:24,800 --> 00:39:27,599
tracked

846
00:39:25,679 --> 00:39:28,879
and says that the default trib equals

847
00:39:27,599 --> 00:39:31,760
whatever the current

848
00:39:28,880 --> 00:39:31,760
attribute is right

849
00:39:32,320 --> 00:39:37,039
that's it um these are now you know

850
00:39:35,519 --> 00:39:38,960
really straightforward the color and the

851
00:39:37,039 --> 00:39:42,239
thickness because they're very simple

852
00:39:38,960 --> 00:39:46,000
they just set uh whatever the current

853
00:39:42,239 --> 00:39:46,000
attribute is they just set it

854
00:39:51,280 --> 00:39:55,519
uh and the text one is more complicated

855
00:39:53,760 --> 00:39:57,839
partially because we don't really have

856
00:39:55,519 --> 00:39:59,599
an arena-based push

857
00:39:57,838 --> 00:40:02,000
of these things at least i don't think

858
00:39:59,599 --> 00:40:05,280
we do and maybe we actually secretly do

859
00:40:02,000 --> 00:40:11,440
and we just forgot um

860
00:40:05,280 --> 00:40:14,319
about it you can see i even have a to do

861
00:40:11,440 --> 00:40:15,440
so it's like we knew that this was lousy

862
00:40:14,318 --> 00:40:17,599
this was the thing i was actually

863
00:40:15,440 --> 00:40:20,960
talking about right

864
00:40:17,599 --> 00:40:23,119
so we knew that kind of sucked um but we

865
00:40:20,960 --> 00:40:24,000
we just haven't ever had a chance to go

866
00:40:23,119 --> 00:40:28,720
unsuck it

867
00:40:24,000 --> 00:40:28,719
right which is fine

868
00:40:29,440 --> 00:40:34,720
so here's uh i'm gonna leave the text

869
00:40:32,400 --> 00:40:37,200
one for now because like i said that one

870
00:40:34,719 --> 00:40:38,639
requires a little bit more finesse uh

871
00:40:37,199 --> 00:40:42,078
let's just do the rest of these

872
00:40:38,639 --> 00:40:46,000
so append diagram entry now

873
00:40:42,079 --> 00:40:48,160
where we just have you know

874
00:40:46,000 --> 00:40:49,679
i mean you know what we're doing here

875
00:40:48,159 --> 00:40:53,838
right uh

876
00:40:49,679 --> 00:40:53,838
there's it's just

877
00:40:55,599 --> 00:41:02,240
it's literally just just stacking these

878
00:40:58,639 --> 00:41:05,519
right so uh what we need to do here

879
00:41:02,239 --> 00:41:06,639
is when we push these on uh we also need

880
00:41:05,519 --> 00:41:09,759
to set the like

881
00:41:06,639 --> 00:41:11,440
first and last pointers so you got these

882
00:41:09,760 --> 00:41:12,640
first and last pointers here that's the

883
00:41:11,440 --> 00:41:15,760
chain of things

884
00:41:12,639 --> 00:41:21,838
that we've seen um and you know

885
00:41:15,760 --> 00:41:21,839
so that's just gonna be like um

886
00:41:27,760 --> 00:41:30,480
this sort of thing

887
00:41:30,880 --> 00:41:35,838
right um

888
00:41:47,280 --> 00:41:50,640
anyway it doesn't matter point being

889
00:41:49,039 --> 00:41:52,880
we're just changing these things on

890
00:41:50,639 --> 00:41:54,639
and each time that we see a new one we

891
00:41:52,880 --> 00:41:56,400
want to add it to the end of the list

892
00:41:54,639 --> 00:41:58,799
and so this the reason that we can't

893
00:41:56,400 --> 00:42:00,880
just keep a push down version of it

894
00:41:58,800 --> 00:42:02,079
is when we go to actually draw these we

895
00:42:00,880 --> 00:42:04,160
we want to draw them in order

896
00:42:02,079 --> 00:42:05,760
like the person who was recording them

897
00:42:04,159 --> 00:42:06,879
wants to draw them in the order that

898
00:42:05,760 --> 00:42:08,880
they were seen

899
00:42:06,880 --> 00:42:10,640
because we're trying to step through the

900
00:42:08,880 --> 00:42:12,720
run of the program in a diagram

901
00:42:10,639 --> 00:42:15,358
at diagram by diagram and you don't want

902
00:42:12,719 --> 00:42:19,039
to see like the last diagram first

903
00:42:15,358 --> 00:42:19,440
or something right so what we want to do

904
00:42:19,039 --> 00:42:21,759
here

905
00:42:19,440 --> 00:42:22,480
is we want to actually uh go through

906
00:42:21,760 --> 00:42:26,240
each of these

907
00:42:22,480 --> 00:42:29,440
and say uh okay

908
00:42:26,239 --> 00:42:31,759
the every time the last entry

909
00:42:29,440 --> 00:42:33,519
needs to point to whatever the current

910
00:42:31,760 --> 00:42:36,319
one we just made is

911
00:42:33,519 --> 00:42:38,079
if there is a last entry already then we

912
00:42:36,318 --> 00:42:39,679
just want to set the next pointer to the

913
00:42:38,079 --> 00:42:42,000
entry that we're talking about

914
00:42:39,679 --> 00:42:43,279
whereas if it's uh if we haven't done

915
00:42:42,000 --> 00:42:46,159
the first one

916
00:42:43,280 --> 00:42:47,519
yet uh then it's gonna set the first one

917
00:42:46,159 --> 00:42:48,559
right so it's again pretty

918
00:42:47,519 --> 00:42:50,079
straightforward we're just

919
00:42:48,559 --> 00:42:51,759
that just makes a linked list of these

920
00:42:50,079 --> 00:42:55,359
things and that's all it does

921
00:42:51,760 --> 00:42:57,440
right um so that way

922
00:42:55,358 --> 00:43:00,078
we can now implement all of these really

923
00:42:57,440 --> 00:43:01,440
easily there's really nothing to it

924
00:43:00,079 --> 00:43:03,200
so we're just going to do this append

925
00:43:01,440 --> 00:43:03,838
diagram entry and each time we're just

926
00:43:03,199 --> 00:43:05,118
going to pass

927
00:43:03,838 --> 00:43:07,599
whatever the type of the thing is that

928
00:43:05,119 --> 00:43:13,838
we were actually going to draw

929
00:43:07,599 --> 00:43:13,838
so each of these will look like that

930
00:43:15,760 --> 00:43:19,440
uh and the only thing that they're gonna

931
00:43:19,119 --> 00:43:21,838
do

932
00:43:19,440 --> 00:43:22,480
is say like hey it's a sphere or

933
00:43:21,838 --> 00:43:26,000
whatever

934
00:43:22,480 --> 00:43:29,440
right uh and we just say well there's a

935
00:43:26,000 --> 00:43:34,480
center i and

936
00:43:29,440 --> 00:43:34,480
a radius right

937
00:43:34,719 --> 00:43:41,759
um and that's it

938
00:43:38,318 --> 00:43:45,279
and then for this one well it's a line

939
00:43:41,760 --> 00:43:50,800
so there's the you know from

940
00:43:45,280 --> 00:43:50,800
and the two uh there's you know

941
00:43:51,119 --> 00:43:55,838
a box

942
00:43:56,639 --> 00:44:09,838
uh and in a and a point

943
00:44:14,079 --> 00:44:18,480
uh and then we didn't really do overlay

944
00:44:16,159 --> 00:44:20,879
but we we need one

945
00:44:18,480 --> 00:44:22,159
and that's just if you want to just if

946
00:44:20,880 --> 00:44:23,358
you're just trying to display some text

947
00:44:22,159 --> 00:44:27,440
that doesn't really go

948
00:44:23,358 --> 00:44:31,199
anywhere on the diagram right

949
00:44:27,440 --> 00:44:32,480
uh so it's just text right

950
00:44:31,199 --> 00:44:35,598
it'll just overlay it on top of the

951
00:44:32,480 --> 00:44:38,960
diagram in like a hud or something

952
00:44:35,599 --> 00:44:40,640
uh now we've got one more thing that

953
00:44:38,960 --> 00:44:43,760
needs to be recorded

954
00:44:40,639 --> 00:44:45,679
this does not that's not a thing anymore

955
00:44:43,760 --> 00:44:47,280
um we got one more thing that needs to

956
00:44:45,679 --> 00:44:50,399
be recorded and

957
00:44:47,280 --> 00:44:52,560
that is the phase

958
00:44:50,400 --> 00:44:54,480
right so we need markers each time we

959
00:44:52,559 --> 00:44:58,159
have a phase

960
00:44:54,480 --> 00:45:00,960
and uh the value that that is

961
00:44:58,159 --> 00:45:05,838
in the phase i don't know if this so

962
00:45:00,960 --> 00:45:05,838
this is really just

963
00:45:14,800 --> 00:45:18,560
you know it may not make any sense to

964
00:45:16,559 --> 00:45:19,358
actually do this it may make more sense

965
00:45:18,559 --> 00:45:22,880
to just say

966
00:45:19,358 --> 00:45:25,119
look there's two points and

967
00:45:22,880 --> 00:45:26,720
this stuff will just have a phase begin

968
00:45:25,119 --> 00:45:27,680
phase end there'll just be a beginning

969
00:45:26,719 --> 00:45:29,039
and end

970
00:45:27,679 --> 00:45:32,239
and that'll just get tracked when you're

971
00:45:29,039 --> 00:45:33,679
drawing it um

972
00:45:32,239 --> 00:45:35,838
that probably makes more sense because

973
00:45:33,679 --> 00:45:38,000
there's no need for that value

974
00:45:35,838 --> 00:45:39,838
uh so it's probably and then you just

975
00:45:38,000 --> 00:45:41,119
you just actually have that stack depth

976
00:45:39,838 --> 00:45:47,838
maintained here

977
00:45:41,119 --> 00:45:47,838
so probably this is better

978
00:45:49,440 --> 00:45:54,159
these don't actually have any parameters

979
00:45:52,000 --> 00:45:58,318
you know

980
00:45:54,159 --> 00:46:00,159
so they can just kind of just be ignored

981
00:45:58,318 --> 00:46:01,759
uh the return value because you're not

982
00:46:00,159 --> 00:46:05,279
going to do anything with it

983
00:46:01,760 --> 00:46:07,359
right so that does a complete recording

984
00:46:05,280 --> 00:46:09,200
of everything we wanted to draw right

985
00:46:07,358 --> 00:46:10,078
and as you can see it's almost no code

986
00:46:09,199 --> 00:46:12,838
right so it's pretty

987
00:46:10,079 --> 00:46:15,200
it's pretty cheap to make one of these

988
00:46:12,838 --> 00:46:19,440
things uh

989
00:46:15,199 --> 00:46:21,759
and that's it right

990
00:46:19,440 --> 00:46:21,760
um

991
00:46:24,000 --> 00:46:27,519
the only thing we haven't done is the

992
00:46:25,280 --> 00:46:29,119
text output and then we can just move to

993
00:46:27,519 --> 00:46:30,480
the drawing phase where we just convert

994
00:46:29,119 --> 00:46:31,200
these things to something you can

995
00:46:30,480 --> 00:46:33,920
actually

996
00:46:31,199 --> 00:46:35,039
uh put on the screen uh which will be a

997
00:46:33,920 --> 00:46:38,639
little more work

998
00:46:35,039 --> 00:46:40,079
because it's you know doing more

999
00:46:38,639 --> 00:46:41,838
than merely recording what the person

1000
00:46:40,079 --> 00:46:43,599
wanted to do but as you can see if you

1001
00:46:41,838 --> 00:46:44,078
write this sensibly there's not a lot to

1002
00:46:43,599 --> 00:46:45,680
it

1003
00:46:44,079 --> 00:46:47,280
it's really straightforward to do the

1004
00:46:45,679 --> 00:46:51,919
recording part

1005
00:46:47,280 --> 00:46:55,280
uh it's pretty basic right

1006
00:46:51,920 --> 00:46:58,960
now one thing we might want to do uh

1007
00:46:55,280 --> 00:47:02,160
is when you begin a diagram

1008
00:46:58,960 --> 00:47:04,480
we should probably clear out

1009
00:47:02,159 --> 00:47:04,480
um

1010
00:47:08,838 --> 00:47:11,838
like

1011
00:47:28,159 --> 00:47:31,199
so the the only thing i'm thinking here

1012
00:47:30,800 --> 00:47:32,559
is like

1013
00:47:31,199 --> 00:47:35,279
when you actually do one of these

1014
00:47:32,559 --> 00:47:35,280
diagrams

1015
00:47:37,440 --> 00:47:53,838
we probably want to be able to like

1016
00:47:54,079 --> 00:47:58,720
to like keep track of the state right

1017
00:48:01,199 --> 00:48:06,480
so i wonder if it wouldn't maybe make

1018
00:48:02,880 --> 00:48:08,400
more sense to just

1019
00:48:06,480 --> 00:48:12,240
to just actually just record that state

1020
00:48:08,400 --> 00:48:12,240
and have the render side track it

1021
00:48:17,039 --> 00:48:21,838
that's a good question

1022
00:48:50,159 --> 00:48:53,920
yeah i i think i might just do that

1023
00:48:56,880 --> 00:49:02,240
so because i think we could just say

1024
00:48:59,760 --> 00:49:05,920
well let's just make it entirely run

1025
00:49:02,239 --> 00:49:05,919
at that time so you could do this

1026
00:49:12,318 --> 00:49:16,480
so either you specify points to draw or

1027
00:49:15,519 --> 00:49:19,759
you specify

1028
00:49:16,480 --> 00:49:22,800
attributes that you're changing

1029
00:49:19,760 --> 00:49:30,079
that makes a lot of sense to me so maybe

1030
00:49:22,800 --> 00:49:33,359
let's just do that

1031
00:49:30,079 --> 00:49:34,720
yeah i think i like that better uh and

1032
00:49:33,358 --> 00:49:45,838
then you just have them

1033
00:49:34,719 --> 00:49:45,838
up here

1034
00:49:47,358 --> 00:49:51,838
that seems good uh and

1035
00:49:53,199 --> 00:49:56,719
these now actually have an entry so like

1036
00:49:56,000 --> 00:49:59,838
changing

1037
00:49:56,719 --> 00:49:59,838
this stuff just has an entry

1038
00:50:10,318 --> 00:50:13,838
like so

1039
00:50:17,539 --> 00:50:20,840
[Music]

1040
00:50:24,838 --> 00:50:27,838
um

1041
00:50:28,079 --> 00:50:35,119
and that seems okay uh that seems better

1042
00:50:32,800 --> 00:50:35,119
to me

1043
00:50:36,480 --> 00:50:42,559
i think i like that better uh

1044
00:50:40,000 --> 00:50:44,639
so this doesn't have to happen which

1045
00:50:42,559 --> 00:50:47,760
makes that more efficient

1046
00:50:44,639 --> 00:50:49,440
and the structs are smaller so that just

1047
00:50:47,760 --> 00:50:52,480
seems like a better choice

1048
00:50:49,440 --> 00:50:54,240
pretty much across the board don't ask

1049
00:50:52,480 --> 00:50:57,358
me why that's not a pointer and why

1050
00:50:54,239 --> 00:51:01,759
didn't it complain about this one

1051
00:50:57,358 --> 00:51:04,610
um this doesn't need a return value

1052
00:51:01,760 --> 00:51:06,839
because it doesn't do anything

1053
00:51:04,610 --> 00:51:09,200
[Music]

1054
00:51:06,838 --> 00:51:12,480
um

1055
00:51:09,199 --> 00:51:16,318
okay so last but not least is

1056
00:51:12,480 --> 00:51:19,679
text it's actually very uh simple

1057
00:51:16,318 --> 00:51:21,679
what's happening there also because uh

1058
00:51:19,679 --> 00:51:23,118
this seems like it's only ever going to

1059
00:51:21,679 --> 00:51:24,399
be just in for the

1060
00:51:23,119 --> 00:51:26,640
in the interest of being slightly more

1061
00:51:24,400 --> 00:51:30,000
efficient we can also put text i think

1062
00:51:26,639 --> 00:51:31,519
in here uh because we know that

1063
00:51:30,000 --> 00:51:34,318
you don't really need i don't think i

1064
00:51:31,519 --> 00:51:36,000
ever need to specify more than that so

1065
00:51:34,318 --> 00:51:37,519
the diagram attributes can just be a

1066
00:51:36,000 --> 00:51:38,639
thing that that exists in here because

1067
00:51:37,519 --> 00:51:39,519
they're the ones that might be sticky

1068
00:51:38,639 --> 00:51:40,719
and you know we'll

1069
00:51:39,519 --> 00:51:42,639
we'll play that a little bit in a second

1070
00:51:40,719 --> 00:51:44,318
but then the text that way

1071
00:51:42,639 --> 00:51:46,719
this whole thing is only ever going to

1072
00:51:44,318 --> 00:51:50,000
take the size of of this

1073
00:51:46,719 --> 00:51:53,598
uh so six floats

1074
00:51:50,000 --> 00:51:55,920
six floats great adventure and

1075
00:51:53,599 --> 00:51:55,920
uh

1076
00:51:57,199 --> 00:52:00,799
and all we need to do here now is set

1077
00:51:59,440 --> 00:52:04,240
this text

1078
00:52:00,800 --> 00:52:07,599
uh buffer to something right

1079
00:52:04,239 --> 00:52:10,479
now we know that we can do a

1080
00:52:07,599 --> 00:52:13,599
uh so if we go to the format string side

1081
00:52:10,480 --> 00:52:16,960
of things we know that we can do this

1082
00:52:13,599 --> 00:52:19,280
you know so we know that we can do

1083
00:52:16,960 --> 00:52:20,079
an arg list format and we can pass it to

1084
00:52:19,280 --> 00:52:22,240
this thing

1085
00:52:20,079 --> 00:52:23,519
and off we go and and the problem that

1086
00:52:22,239 --> 00:52:26,078
we have

1087
00:52:23,519 --> 00:52:27,920
right is we don't know what to do with

1088
00:52:26,079 --> 00:52:29,039
this so we don't know what to do with

1089
00:52:27,920 --> 00:52:31,680
this dust size

1090
00:52:29,039 --> 00:52:32,719
dust here these are now known right it's

1091
00:52:31,679 --> 00:52:35,440
it's what came in

1092
00:52:32,719 --> 00:52:36,159
as the printf uh but these we don't

1093
00:52:35,440 --> 00:52:39,440
actually know

1094
00:52:36,159 --> 00:52:42,000
what they are because we don't have any

1095
00:52:39,440 --> 00:52:45,679
buffer to put these things in

1096
00:52:42,000 --> 00:52:48,800
but you know we have an arena right so

1097
00:52:45,679 --> 00:52:48,799
what we should be able to do

1098
00:52:48,960 --> 00:52:52,400
with the arena and i don't know to what

1099
00:52:50,960 --> 00:52:53,679
extent we support this because like i

1100
00:52:52,400 --> 00:52:56,559
said

1101
00:52:53,679 --> 00:52:57,440
it looked kind of crappy and that's fine

1102
00:52:56,559 --> 00:52:59,760
uh but it's just

1103
00:52:57,440 --> 00:53:01,440
you know it is what it is uh when we're

1104
00:52:59,760 --> 00:53:04,720
doing the push size on here

1105
00:53:01,440 --> 00:53:08,159
you know we've got this sort of stuff

1106
00:53:04,719 --> 00:53:08,159
where you can do like a

1107
00:53:08,400 --> 00:53:14,079
you know you can you can do like

1108
00:53:11,440 --> 00:53:16,000
begin and end where you can check like

1109
00:53:14,079 --> 00:53:18,318
how much memory

1110
00:53:16,000 --> 00:53:19,119
uh you use then you can rewind and stuff

1111
00:53:18,318 --> 00:53:21,039
like that

1112
00:53:19,119 --> 00:53:23,039
that's what this and temporary memory

1113
00:53:21,039 --> 00:53:26,318
does you can see it rewind

1114
00:53:23,039 --> 00:53:28,000
uh and reset the used part here

1115
00:53:26,318 --> 00:53:29,440
uh and the stupid thing about this is

1116
00:53:28,000 --> 00:53:31,519
what you would normally want to do here

1117
00:53:29,440 --> 00:53:33,838
is you just push on like a large chunk

1118
00:53:31,519 --> 00:53:35,358
like 4096

1119
00:53:33,838 --> 00:53:37,199
you do the printf into it and then you

1120
00:53:35,358 --> 00:53:38,639
just rewind the pointer back to however

1121
00:53:37,199 --> 00:53:43,838
much it actually took

1122
00:53:38,639 --> 00:53:43,838
right that's what this would normally do

1123
00:53:53,679 --> 00:53:56,879
but we don't really have a way to do

1124
00:53:55,920 --> 00:53:58,800
that

1125
00:53:56,880 --> 00:54:00,400
right so i'm not going to do that

1126
00:53:58,800 --> 00:54:02,079
because i don't really want to muck

1127
00:54:00,400 --> 00:54:03,519
with that part of the code there's no

1128
00:54:02,079 --> 00:54:08,000
point in doing that this is a

1129
00:54:03,519 --> 00:54:08,000
just a debug system um

1130
00:54:08,079 --> 00:54:11,920
so if we just make a thing that's like

1131
00:54:09,679 --> 00:54:12,639
okay the global has some format buffer

1132
00:54:11,920 --> 00:54:15,680
and we'll just

1133
00:54:12,639 --> 00:54:18,639
just put it into the format buffer right

1134
00:54:15,679 --> 00:54:19,199
um this is an inefficient and stupid way

1135
00:54:18,639 --> 00:54:22,480
to do it

1136
00:54:19,199 --> 00:54:24,399
but we don't care so uh at the moment

1137
00:54:22,480 --> 00:54:26,318
we'll just do it that way

1138
00:54:24,400 --> 00:54:27,599
instead and the way that that will look

1139
00:54:26,318 --> 00:54:32,480
is uh

1140
00:54:27,599 --> 00:54:32,480
you know we'll take this diagram group

1141
00:54:34,880 --> 00:54:41,039
um and we're gonna say however big this

1142
00:54:38,798 --> 00:54:41,039
is

1143
00:54:44,960 --> 00:54:48,000
you can put it in there

1144
00:54:48,400 --> 00:54:51,519
and then you can tell us how big it

1145
00:54:50,159 --> 00:54:56,798
actually will be

1146
00:54:51,519 --> 00:54:56,798
right um and we'll do like a

1147
00:54:57,519 --> 00:55:05,199
a push copy you know what i'm saying

1148
00:55:01,760 --> 00:55:07,119
uh so a push copy is just saying i'm

1149
00:55:05,199 --> 00:55:07,838
gonna give you block of memory and

1150
00:55:07,119 --> 00:55:11,760
you're gonna

1151
00:55:07,838 --> 00:55:11,759
you know push it on in there

1152
00:55:12,719 --> 00:55:20,239
so if we do a push copy we

1153
00:55:16,798 --> 00:55:23,440
push an arena

1154
00:55:20,239 --> 00:55:27,279
a size a source and then the params

1155
00:55:23,440 --> 00:55:31,200
uh we want like

1156
00:55:27,280 --> 00:55:31,200
no clear right

1157
00:55:31,519 --> 00:55:35,119
because it would be dumb to push a copy

1158
00:55:33,280 --> 00:55:36,880
something you there'd be no reason to

1159
00:55:35,119 --> 00:55:40,079
clear it first right

1160
00:55:36,880 --> 00:55:43,358
so we're going to push on this result

1161
00:55:40,079 --> 00:55:48,720
and we're going to push on this

1162
00:55:43,358 --> 00:55:53,039
source and we're going to push it onto

1163
00:55:48,719 --> 00:55:55,358
this arena that will push the copy on

1164
00:55:53,039 --> 00:55:56,719
uh and then we just have to do like is

1165
00:55:55,358 --> 00:56:01,759
there a make buffer

1166
00:55:56,719 --> 00:56:01,759
or a wrap what does this do

1167
00:56:01,838 --> 00:56:04,558
bundle string

1168
00:56:04,880 --> 00:56:17,838
so then we can just say

1169
00:56:18,239 --> 00:56:23,358
oops to uh

1170
00:56:21,358 --> 00:56:24,558
bundle that into a buffer and now we've

1171
00:56:23,358 --> 00:56:27,838
got the string

1172
00:56:24,559 --> 00:56:30,798
right uh so not fabulous because

1173
00:56:27,838 --> 00:56:31,199
this is just inefficient for no reason

1174
00:56:30,798 --> 00:56:33,039
but

1175
00:56:31,199 --> 00:56:45,838
you know so you can say here if you

1176
00:56:33,039 --> 00:56:45,838
wanted to

1177
00:57:03,519 --> 00:57:10,239
right uh so that's fine and

1178
00:57:08,000 --> 00:57:11,039
now we have a complete recording so all

1179
00:57:10,239 --> 00:57:14,399
we really need

1180
00:57:11,039 --> 00:57:17,440
is a function that draws this right and

1181
00:57:14,400 --> 00:57:18,400
if we so you know we just need some

1182
00:57:17,440 --> 00:57:20,079
function that will

1183
00:57:18,400 --> 00:57:22,480
we'll dump this down to the render

1184
00:57:20,079 --> 00:57:22,480
buffer

1185
00:57:22,639 --> 00:57:29,759
um as we go and

1186
00:57:28,000 --> 00:57:31,119
the other thing that's the thing about

1187
00:57:29,760 --> 00:57:32,480
it too is like we've got all this other

1188
00:57:31,119 --> 00:57:34,079
drawing code right now that's in there

1189
00:57:32,480 --> 00:57:36,639
for no reason that we could also

1190
00:57:34,079 --> 00:57:37,519
like so there's drawing code that is in

1191
00:57:36,639 --> 00:57:39,279
the actual

1192
00:57:37,519 --> 00:57:40,798
uh collision detector destroying those

1193
00:57:39,280 --> 00:57:41,920
little boxes that should all get moved

1194
00:57:40,798 --> 00:57:45,039
to this code as well

1195
00:57:41,920 --> 00:57:46,880
right obviously um because we don't

1196
00:57:45,039 --> 00:57:48,639
need that sort of like hacky drawing

1197
00:57:46,880 --> 00:57:50,480
code now that we actually have a way to

1198
00:57:48,639 --> 00:57:52,719
record things into a debug buffer and

1199
00:57:50,480 --> 00:57:55,838
then play them back that would obviously

1200
00:57:52,719 --> 00:57:55,838
be right

1201
00:57:56,719 --> 00:58:01,199
what you would do now there's a lot of

1202
00:58:00,000 --> 00:58:02,349
stuff that we can do

1203
00:58:01,199 --> 00:58:04,558
here

1204
00:58:02,349 --> 00:58:05,920
[Music]

1205
00:58:04,559 --> 00:58:08,480
and we'll kind of get into that probably

1206
00:58:05,920 --> 00:58:09,280
next weekend the things that we can do

1207
00:58:08,480 --> 00:58:12,240
here

1208
00:58:09,280 --> 00:58:13,200
so one of the reasons i predicated the

1209
00:58:12,239 --> 00:58:15,118
diagram stuff

1210
00:58:13,199 --> 00:58:17,279
you can see with this like diagram is on

1211
00:58:15,119 --> 00:58:18,559
call is we can

1212
00:58:17,280 --> 00:58:20,839
make it so that this is completely

1213
00:58:18,559 --> 00:58:22,480
dynamic where like as you step through

1214
00:58:20,838 --> 00:58:24,239
diagrams it'll just

1215
00:58:22,480 --> 00:58:27,039
only turn on the ones that you actually

1216
00:58:24,239 --> 00:58:29,039
are looking at that will help

1217
00:58:27,039 --> 00:58:30,318
keep the speed high so that people

1218
00:58:29,039 --> 00:58:31,920
aren't syncing like

1219
00:58:30,318 --> 00:58:33,599
hundreds of thousands of these diagram

1220
00:58:31,920 --> 00:58:35,200
calls every frame

1221
00:58:33,599 --> 00:58:36,240
only for us never to actually need any

1222
00:58:35,199 --> 00:58:37,118
of them because we're not looking at

1223
00:58:36,239 --> 00:58:39,679
them

1224
00:58:37,119 --> 00:58:41,358
so that way that can always return zero

1225
00:58:39,679 --> 00:58:42,399
except for the diagram you're actually

1226
00:58:41,358 --> 00:58:46,719
looking at

1227
00:58:42,400 --> 00:58:49,680
right so that would keep it to just

1228
00:58:46,719 --> 00:58:51,439
diagram begin and end are getting called

1229
00:58:49,679 --> 00:58:53,440
uh

1230
00:58:51,440 --> 00:58:54,960
to to like say what diagrams are

1231
00:58:53,440 --> 00:58:56,798
available but all of the actual

1232
00:58:54,960 --> 00:58:58,400
information the diagram just would never

1233
00:58:56,798 --> 00:59:02,480
actually happen

1234
00:58:58,400 --> 00:59:03,760
unless you uh specifically asked to view

1235
00:59:02,480 --> 00:59:07,119
that diagram

1236
00:59:03,760 --> 00:59:08,480
so that's you know uh

1237
00:59:07,119 --> 00:59:10,559
just to give you an idea of like where

1238
00:59:08,480 --> 00:59:12,880
that should be going

1239
00:59:10,559 --> 00:59:14,720
it should be something like that so

1240
00:59:12,880 --> 00:59:16,798
after you do all of this there should at

1241
00:59:14,719 --> 00:59:19,039
some point here now be a call that's

1242
00:59:16,798 --> 00:59:19,039
like

1243
00:59:20,000 --> 00:59:23,440
you know convert or something like

1244
00:59:22,639 --> 00:59:28,719
diagram

1245
00:59:23,440 --> 00:59:32,318
you know convert d diagrams

1246
00:59:28,719 --> 00:59:34,318
to uh

1247
00:59:32,318 --> 00:59:36,000
or render diagrams i guess render

1248
00:59:34,318 --> 00:59:39,599
diagrams

1249
00:59:36,000 --> 00:59:43,119
you know that kind of thing uh and

1250
00:59:39,599 --> 00:59:43,119
that's going to take like the render

1251
00:59:44,838 --> 00:59:49,440
group

1252
00:59:46,480 --> 00:59:51,039
and it's going to take whatever the the

1253
00:59:49,440 --> 00:59:52,559
diagrams are from that

1254
00:59:51,039 --> 00:59:55,119
that diagram set it's just going to dump

1255
00:59:52,559 --> 00:59:58,559
them out right so dump them out

1256
00:59:55,119 --> 00:59:58,559
so yeah

1257
00:59:59,039 --> 01:00:02,480
that's basically what we want

1258
01:00:05,920 --> 01:00:11,519
uh i'm tired i guess i didn't get enough

1259
01:00:08,960 --> 01:00:15,119
sleep last night

1260
01:00:11,519 --> 01:00:17,440
which is unfortunate um so

1261
01:00:15,119 --> 01:00:19,119
you know we would we would do that and

1262
01:00:17,440 --> 01:00:19,679
i'm assuming that like the place we

1263
01:00:19,119 --> 01:00:21,280
would put that

1264
01:00:19,679 --> 01:00:22,719
is like in here somewhere right because

1265
01:00:21,280 --> 01:00:24,720
we've got

1266
01:00:22,719 --> 01:00:27,118
this stuff that like uh when you're

1267
01:00:24,719 --> 01:00:27,118
running

1268
01:00:27,358 --> 01:00:43,838
what is this complaining about

1269
01:00:44,480 --> 01:00:48,559
i have no idea what this is complaining

1270
01:00:45,679 --> 01:00:48,558
about at the moment hold on

1271
01:00:52,000 --> 01:00:58,318
um oh

1272
01:00:55,679 --> 01:00:58,960
we don't that's right i always do it

1273
01:00:58,318 --> 01:01:01,679
this way

1274
01:00:58,960 --> 01:01:02,639
on handmade hero i build i don't build

1275
01:01:01,679 --> 01:01:06,879
twice

1276
01:01:02,639 --> 01:01:10,639
for whatever reason um probably should

1277
01:01:06,880 --> 01:01:11,838
uh so that should crash again here

1278
01:01:10,639 --> 01:01:15,598
hopefully yeah

1279
01:01:11,838 --> 01:01:15,599
uh so i don't know what

1280
01:01:16,960 --> 01:01:23,838
what that's about it doesn't

1281
01:01:20,559 --> 01:01:27,040
like this debug record allocation the

1282
01:01:23,838 --> 01:01:30,798
call to the debug system here

1283
01:01:27,039 --> 01:01:30,798
but i'm not actually sure why

1284
01:01:33,199 --> 01:01:39,838
that all looks fine and that looks fine

1285
01:01:37,199 --> 01:01:39,838
but this

1286
01:01:41,599 --> 01:01:48,640
apparently it doesn't like

1287
01:01:45,440 --> 01:01:50,079
our debug system is so terrible um

1288
01:01:48,639 --> 01:01:52,400
at some point we should just rip it out

1289
01:01:50,079 --> 01:01:54,640
and replace it with something better but

1290
01:01:52,400 --> 01:01:54,639
uh

1291
01:01:56,480 --> 01:02:01,039
i can't say i see what the immediate

1292
01:01:59,358 --> 01:02:04,318
thing is

1293
01:02:01,039 --> 01:02:04,799
writing location zero it's something in

1294
01:02:04,318 --> 01:02:08,318
the

1295
01:02:04,798 --> 01:02:08,318
that actual macro

1296
01:02:14,719 --> 01:02:18,480
um like trying to get that event right

1297
01:02:17,920 --> 01:02:21,039
because it's

1298
01:02:18,480 --> 01:02:23,119
it's it's actually in the debug record

1299
01:02:21,039 --> 01:02:25,200
allocation call

1300
01:02:23,119 --> 01:02:26,559
that like it's not able to get one of

1301
01:02:25,199 --> 01:02:30,000
these events

1302
01:02:26,559 --> 01:02:32,640
or something um

1303
01:02:30,000 --> 01:02:34,239
my assumption would be that that is just

1304
01:02:32,639 --> 01:02:36,239
because this is getting called so many

1305
01:02:34,239 --> 01:02:38,399
times that we're actually running out of

1306
01:02:36,239 --> 01:02:40,509
these events

1307
01:02:38,400 --> 01:02:43,519
you know what i mean um

1308
01:02:40,510 --> 01:02:49,839
[Music]

1309
01:02:43,519 --> 01:02:49,838
that'd be my guess

1310
01:02:52,880 --> 01:02:59,519
uh which is annoying to say the least

1311
01:02:57,199 --> 01:03:01,279
uh but i guess we just don't do enough

1312
01:02:59,519 --> 01:03:04,880
small allocations

1313
01:03:01,280 --> 01:03:06,400
normally to to actually make that be a

1314
01:03:04,880 --> 01:03:10,160
problem

1315
01:03:06,400 --> 01:03:12,480
for this particular system right

1316
01:03:10,159 --> 01:03:12,480
uh

1317
01:03:13,358 --> 01:03:21,759
meh so i'm not sure

1318
01:03:17,199 --> 01:03:23,598
what to do about that other than to say

1319
01:03:21,760 --> 01:03:25,200
that that particular thing where we

1320
01:03:23,599 --> 01:03:28,559
record those allocations

1321
01:03:25,199 --> 01:03:32,399
is not particularly useful like

1322
01:03:28,559 --> 01:03:32,400
what that was used for

1323
01:03:33,599 --> 01:03:37,920
is so let me disable this and just we'll

1324
01:03:36,639 --> 01:03:41,519
go through it

1325
01:03:37,920 --> 01:03:44,559
so what that was used for was

1326
01:03:41,519 --> 01:03:46,239
uh oops still running

1327
01:03:44,559 --> 01:03:47,599
what that was used for was a pretty

1328
01:03:46,239 --> 01:03:50,078
stupid thing

1329
01:03:47,599 --> 01:03:51,599
um i think it was just something someone

1330
01:03:50,079 --> 01:03:52,720
asked for so we did it

1331
01:03:51,599 --> 01:03:54,960
but i don't actually think it's

1332
01:03:52,719 --> 01:03:56,719
particularly useful i don't i don't know

1333
01:03:54,960 --> 01:03:58,559
that we we almost never use it at least

1334
01:03:56,719 --> 01:04:04,159
i don't remember ever using it

1335
01:03:58,559 --> 01:04:04,160
but wait did i not just

1336
01:04:04,239 --> 01:04:10,798
that was funny i said it's a nine no

1337
01:04:07,358 --> 01:04:12,318
nine does not disable uh a pound if in

1338
01:04:10,798 --> 01:04:17,599
case anyone's wondering

1339
01:04:12,318 --> 01:04:17,599
um so we've got this thing that's like

1340
01:04:17,838 --> 01:04:24,960
this and

1341
01:04:21,679 --> 01:04:26,318
you can view like how your memory is

1342
01:04:24,960 --> 01:04:29,679
laid out

1343
01:04:26,318 --> 01:04:33,440
uh you know what i'm saying

1344
01:04:29,679 --> 01:04:37,759
so this is all the memory um

1345
01:04:33,440 --> 01:04:37,760
in the system and

1346
01:04:38,318 --> 01:04:42,079
you can see like who allocated it or

1347
01:04:40,000 --> 01:04:44,880
whatever right

1348
01:04:42,079 --> 01:04:45,920
so that's all that's doing uh it it

1349
01:04:44,880 --> 01:04:54,720
doesn't do

1350
01:04:45,920 --> 01:04:58,960
anything else um

1351
01:04:54,719 --> 01:04:58,959
it's just this right um

1352
01:04:59,920 --> 01:05:03,680
yeah so you can kind of see like where

1353
01:05:02,318 --> 01:05:07,440
all your memory is

1354
01:05:03,679 --> 01:05:10,798
uh or whatever and i don't know

1355
01:05:07,440 --> 01:05:14,318
uh no one cares

1356
01:05:10,798 --> 01:05:17,519
um but that's just what it is right

1357
01:05:14,318 --> 01:05:17,519
uh and

1358
01:05:18,639 --> 01:05:22,000
being able to see this level of

1359
01:05:20,239 --> 01:05:24,399
granularity is what causes the

1360
01:05:22,000 --> 01:05:25,679
problem because if you do tons of little

1361
01:05:24,400 --> 01:05:27,358
allocations in there

1362
01:05:25,679 --> 01:05:28,719
the debug system is trying to store all

1363
01:05:27,358 --> 01:05:30,000
of those and eventually just runs out of

1364
01:05:28,719 --> 01:05:32,000
space to store them because we don't

1365
01:05:30,000 --> 01:05:35,039
allocate that much space

1366
01:05:32,000 --> 01:05:39,199
to the debug system itself and that's

1367
01:05:35,039 --> 01:05:40,799
basically it um

1368
01:05:39,199 --> 01:05:42,239
i'm not sure there's really anything

1369
01:05:40,798 --> 01:05:45,038
else to it

1370
01:05:42,239 --> 01:05:46,558
uh and a lot of that's just because the

1371
01:05:45,039 --> 01:05:48,240
debug system is terrible

1372
01:05:46,559 --> 01:05:49,760
right there's so many reasons why the

1373
01:05:48,239 --> 01:05:52,479
debug system is terrible it's hard to

1374
01:05:49,760 --> 01:05:55,920
describe how many reasons there are

1375
01:05:52,480 --> 01:05:57,929
um it's just bad in a lot of ways

1376
01:05:55,920 --> 01:05:59,119
and it's just one of the things we

1377
01:05:57,929 --> 01:06:00,719
[Music]

1378
01:05:59,119 --> 01:06:02,480
it's one of the casualties of the way

1379
01:06:00,719 --> 01:06:04,558
handmade hero is developed

1380
01:06:02,480 --> 01:06:06,159
not being able to spend like weeks at a

1381
01:06:04,559 --> 01:06:07,599
time on something where you concentrate

1382
01:06:06,159 --> 01:06:10,399
on it for several

1383
01:06:07,599 --> 01:06:11,760
hours every day it's pretty hard to do

1384
01:06:10,400 --> 01:06:15,358
complex systems well

1385
01:06:11,760 --> 01:06:17,599
if you're trying new stuff

1386
01:06:15,358 --> 01:06:19,199
and so in this particular case i don't

1387
01:06:17,599 --> 01:06:22,720
know why i can't jump to that

1388
01:06:19,199 --> 01:06:22,719
global yeah

1389
01:06:22,798 --> 01:06:28,000
in this particular case right it just

1390
01:06:25,440 --> 01:06:30,480
ends up not being very good

1391
01:06:28,000 --> 01:06:31,920
and you know it definitely cost us

1392
01:06:30,480 --> 01:06:33,440
something because not having a good

1393
01:06:31,920 --> 01:06:36,000
debug system and having to deal with

1394
01:06:33,440 --> 01:06:38,559
crap like this is not what you want

1395
01:06:36,000 --> 01:06:39,199
but you know there's only so much you

1396
01:06:38,559 --> 01:06:42,640
can do

1397
01:06:39,199 --> 01:06:45,118
about that so the global debug table

1398
01:06:42,639 --> 01:06:46,639
i don't actually even know how we were

1399
01:06:45,119 --> 01:06:48,160
doing that we were using that so we

1400
01:06:46,639 --> 01:06:49,598
could use that weird counter trick

1401
01:06:48,159 --> 01:06:51,440
which i don't really know how valuable

1402
01:06:49,599 --> 01:07:01,838
that even is

1403
01:06:51,440 --> 01:07:01,838
but um

1404
01:07:06,318 --> 01:07:15,838
so i guess what i really probably want

1405
01:07:08,639 --> 01:07:15,838
to look at is this

1406
01:07:17,599 --> 01:07:23,200
yeah um so you can see here like hey

1407
01:07:21,760 --> 01:07:24,720
it's this thing with like a tremendous

1408
01:07:23,199 --> 01:07:26,558
number of these like debug events

1409
01:07:24,719 --> 01:07:28,639
there's just tons of them

1410
01:07:26,559 --> 01:07:30,880
uh and i assume what's happening there

1411
01:07:28,639 --> 01:07:32,318
is it's just blowing out

1412
01:07:30,880 --> 01:07:34,640
like whatever that number is it's too

1413
01:07:32,318 --> 01:07:38,159
many right

1414
01:07:34,639 --> 01:07:41,199
um so you know you can

1415
01:07:38,159 --> 01:07:43,838
up the number i don't know uh how big

1416
01:07:41,199 --> 01:07:43,838
are these things

1417
01:07:52,880 --> 01:07:57,039
what a strange thing so it's got a u64

1418
01:07:56,079 --> 01:08:00,318
so this is like

1419
01:07:57,039 --> 01:08:03,359
eight eight and then

1420
01:08:00,318 --> 01:08:07,838
just an unbalanced with a pad eight

1421
01:08:03,358 --> 01:08:10,239
eight so that's like you know a 32

1422
01:08:07,838 --> 01:08:12,000
and then whatever the heck this thing is

1423
01:08:10,239 --> 01:08:15,439
that's gonna be the biggest

1424
01:08:12,000 --> 01:08:17,279
probably is a wreck three uh so that's

1425
01:08:15,440 --> 01:08:20,798
nine

1426
01:08:17,279 --> 01:08:25,839
floats right

1427
01:08:20,798 --> 01:08:25,838
so like looking at the

1428
01:08:29,838 --> 01:08:34,719
looking at the layout of this it's like

1429
01:08:31,279 --> 01:08:34,719
you know it's like nine floats

1430
01:08:35,520 --> 01:08:43,120
plus you know 32

1431
01:08:38,798 --> 01:08:47,359
68 fantastic number okay

1432
01:08:43,119 --> 01:08:50,838
um so 68

1433
01:08:47,359 --> 01:08:52,480
of these i don't know this is just

1434
01:08:50,838 --> 01:08:56,399
stupid

1435
01:08:52,479 --> 01:08:59,759
um the way this is done

1436
01:08:56,399 --> 01:09:03,278
but so 68 is

1437
01:08:59,759 --> 01:09:06,960
fine so we got 16 times 655

1438
01:09:03,279 --> 01:09:11,279
36 times 2 times 68.

1439
01:09:06,960 --> 01:09:12,079
uh so it's pretty huge right it's a 142

1440
01:09:11,279 --> 01:09:15,520
megabyte

1441
01:09:12,079 --> 01:09:16,960
buffer for debug that said it's a debug

1442
01:09:15,520 --> 01:09:18,159
buffer so you can pretty much make it as

1443
01:09:16,960 --> 01:09:19,198
large as you want and no one's going to

1444
01:09:18,158 --> 01:09:21,519
care because it doesn't actually ship

1445
01:09:19,198 --> 01:09:24,639
with the game

1446
01:09:21,520 --> 01:09:24,640
so i suppose there's that

1447
01:09:26,960 --> 01:09:31,039
if we were to make this bigger so it

1448
01:09:29,920 --> 01:09:32,960
takes half a meg

1449
01:09:31,039 --> 01:09:34,399
does anyone care and does that fix our

1450
01:09:32,960 --> 01:09:36,079
problem if so that's probably what we

1451
01:09:34,399 --> 01:09:38,879
should do

1452
01:09:36,079 --> 01:09:38,880
um but we'll see

1453
01:09:40,880 --> 01:09:44,560
yeah so basically if we just let it have

1454
01:09:43,838 --> 01:09:47,439
more

1455
01:09:44,560 --> 01:09:48,480
you know then it's fine so that's okay

1456
01:09:47,439 --> 01:09:50,559
with me

1457
01:09:48,479 --> 01:09:51,838
if we take a look at the arenas now do

1458
01:09:50,560 --> 01:09:54,880
we see that

1459
01:09:51,838 --> 01:09:56,880
stuff happening oh wait no we

1460
01:09:54,880 --> 01:09:58,079
but the duh we didn't turn back on the

1461
01:09:56,880 --> 01:10:00,719
diagram so we don't know

1462
01:09:58,079 --> 01:10:03,359
that yeah we don't know that that

1463
01:10:00,719 --> 01:10:05,679
actually helped

1464
01:10:03,359 --> 01:10:05,679
oh

1465
01:10:08,319 --> 01:10:14,399
false alarm that may not

1466
01:10:11,359 --> 01:10:16,158
actually be necessary yet the reason

1467
01:10:14,399 --> 01:10:20,000
that may not be necessary is we're not

1468
01:10:16,158 --> 01:10:24,079
clearing these right we haven't called

1469
01:10:20,000 --> 01:10:27,359
render diagrams yet

1470
01:10:24,079 --> 01:10:29,039
right um so we haven't actually called

1471
01:10:27,359 --> 01:10:30,719
any stuff so it'll just keep piling up

1472
01:10:29,039 --> 01:10:34,960
forever so

1473
01:10:30,719 --> 01:10:38,880
that you know yeah that probably

1474
01:10:34,960 --> 01:10:42,000
is the problem so we we could we're okay

1475
01:10:38,880 --> 01:10:43,279
no need to panic uh i just forgot we

1476
01:10:42,000 --> 01:10:44,560
hadn't actually finished this stuff yet

1477
01:10:43,279 --> 01:10:46,158
so we wouldn't we would it would just

1478
01:10:44,560 --> 01:10:47,760
grow forever right

1479
01:10:46,158 --> 01:10:50,960
so all we really have to do here

1480
01:10:47,760 --> 01:10:52,719
probably is clear this arena

1481
01:10:50,960 --> 01:10:54,399
right um and i'm gonna go ahead and pull

1482
01:10:52,719 --> 01:10:58,079
out this is a as a local just have to

1483
01:10:54,399 --> 01:10:59,519
keep typing it

1484
01:10:58,079 --> 01:11:01,359
if we go ahead and say look clear that

1485
01:10:59,520 --> 01:11:05,280
arena you know

1486
01:11:01,359 --> 01:11:05,279
get rid of all that um

1487
01:11:11,760 --> 01:11:27,840
how does that work

1488
01:11:14,880 --> 01:11:27,840
in the debug system though

1489
01:11:48,000 --> 01:11:52,000
yeah so you know now that i think about

1490
01:11:49,600 --> 01:11:54,800
it i i i maybe

1491
01:11:52,000 --> 01:11:56,000
that may be false alarm though maybe it

1492
01:11:54,800 --> 01:11:57,920
is a problem because

1493
01:11:56,000 --> 01:12:02,000
the debug thing will get cleared every

1494
01:11:57,920 --> 01:12:02,000
time because that always gets cleared

1495
01:12:06,840 --> 01:12:09,840
so

1496
01:12:17,760 --> 01:12:23,840
yeah so that does seem weird also debug

1497
01:12:20,719 --> 01:12:23,840
arena suppress

1498
01:12:25,359 --> 01:12:29,679
does seem like we could use that as well

1499
01:12:28,079 --> 01:12:31,039
so we could get rid of this arena from

1500
01:12:29,679 --> 01:12:32,640
the system so that wouldn't be a problem

1501
01:12:31,039 --> 01:12:35,519
right

1502
01:12:32,640 --> 01:12:36,159
yeah i don't know anyway uh when we look

1503
01:12:35,520 --> 01:12:38,159
at this

1504
01:12:36,158 --> 01:12:41,279
here it looks like it records the block

1505
01:12:38,158 --> 01:12:45,279
freeze as well so the clear would work

1506
01:12:41,279 --> 01:12:46,319
um but those things all i thought just

1507
01:12:45,279 --> 01:12:49,439
got

1508
01:12:46,319 --> 01:12:49,759
freed anyway so so i yeah so i don't

1509
01:12:49,439 --> 01:12:51,439
know

1510
01:12:49,760 --> 01:12:52,960
i'm gonna go ahead and do this part but

1511
01:12:51,439 --> 01:12:55,359
i do think we may have

1512
01:12:52,960 --> 01:12:59,359
some stuff to worry about anyway so

1513
01:12:55,359 --> 01:12:59,359
let's suppose we do a clear on this

1514
01:13:00,319 --> 01:13:04,880
uh so that we do clear out the group

1515
01:13:02,960 --> 01:13:08,800
every time

1516
01:13:04,880 --> 01:13:11,520
like so uh and so every time

1517
01:13:08,800 --> 01:13:13,520
in handmade uh you know update and

1518
01:13:11,520 --> 01:13:16,560
render or whatever

1519
01:13:13,520 --> 01:13:20,239
not update in render editor although

1520
01:13:16,560 --> 01:13:20,239
maybe that does make sense i don't know

1521
01:13:21,119 --> 01:13:24,880
you know maybe that is where it should

1522
01:13:22,158 --> 01:13:27,519
be but uh update and render

1523
01:13:24,880 --> 01:13:28,000
i'm thinking more like just update and

1524
01:13:27,520 --> 01:13:32,800
render

1525
01:13:28,000 --> 01:13:37,679
regular like in handmade cpp right

1526
01:13:32,800 --> 01:13:40,800
so in uh in this game update and render

1527
01:13:37,679 --> 01:13:42,000
right uh when we go through here i'm

1528
01:13:40,800 --> 01:13:46,320
just wondering like

1529
01:13:42,000 --> 01:13:49,679
you know maybe this happens after we do

1530
01:13:46,319 --> 01:13:52,000
whatever this ui nonsense is here right

1531
01:13:49,679 --> 01:13:54,719
so we do that and then we clear the

1532
01:13:52,000 --> 01:13:54,719
diagrams

1533
01:13:54,800 --> 01:14:01,840
and that probably has to be something

1534
01:13:56,960 --> 01:14:01,840
that is going to go through this system

1535
01:14:10,399 --> 01:14:15,839
maybe that

1536
01:14:16,479 --> 01:14:24,238
right so that it doesn't cause a problem

1537
01:14:19,840 --> 01:14:24,239
so that'll be diagram reset that'll be

1538
01:14:26,840 --> 01:14:30,800
uh

1539
01:14:28,960 --> 01:14:32,640
that'll be called every frame and so now

1540
01:14:30,800 --> 01:14:35,279
at least we know this will get rid of

1541
01:14:32,640 --> 01:14:36,320
uh any things that are you know in the

1542
01:14:35,279 --> 01:14:38,719
way

1543
01:14:36,319 --> 01:14:41,759
so if i go ahead and make that a one so

1544
01:14:38,719 --> 01:14:45,600
now the diagram code is enabled

1545
01:14:41,760 --> 01:14:48,400
and i run it now i want to see

1546
01:14:45,600 --> 01:14:51,120
like is this actually a problem with too

1547
01:14:48,399 --> 01:14:54,238
many of these

1548
01:14:51,119 --> 01:14:54,238
i want to know right

1549
01:14:54,560 --> 01:15:00,000
so looking at the global debug table

1550
01:14:56,719 --> 01:15:04,880
okay i'm pretty sure it's not zero

1551
01:15:00,000 --> 01:15:04,880
that seems unlikely um

1552
01:15:07,279 --> 01:15:11,840
let's try that again folks

1553
01:15:22,840 --> 01:15:25,840
uh

1554
01:15:50,399 --> 01:15:57,198
so i suppose what i don't know is

1555
01:15:53,520 --> 01:16:01,679
how is that event array index

1556
01:15:57,198 --> 01:16:01,678
thing doing what it's doing

1557
01:16:04,840 --> 01:16:07,840
um

1558
01:16:12,000 --> 01:16:15,600
so it's just a 64-bit value that's split

1559
01:16:14,640 --> 01:16:20,800
into two

1560
01:16:15,600 --> 01:16:23,120
halves right

1561
01:16:20,800 --> 01:16:23,119
so

1562
01:16:24,158 --> 01:16:35,839
top one looks irrelevant um

1563
01:16:45,520 --> 01:16:52,800
so it is just an overflow right

1564
01:16:49,359 --> 01:16:53,439
that's all it is and so now i just don't

1565
01:16:52,800 --> 01:16:57,679
know

1566
01:16:53,439 --> 01:16:58,479
like is it is that actually expected and

1567
01:16:57,679 --> 01:17:00,719
maybe it is

1568
01:16:58,479 --> 01:17:02,799
i don't know so what i'd like to do here

1569
01:17:00,719 --> 01:17:05,359
is just say well let's find out

1570
01:17:02,800 --> 01:17:07,840
let's boost that number and see what

1571
01:17:05,359 --> 01:17:07,839
happens

1572
01:17:10,479 --> 01:17:14,238
just so i can have some perspective on

1573
01:17:12,158 --> 01:17:15,279
whether it actually is an unbounded

1574
01:17:14,238 --> 01:17:19,599
problem

1575
01:17:15,279 --> 01:17:23,519
uh or whether it's just a uh

1576
01:17:19,600 --> 01:17:23,520
yeah so it really feels

1577
01:17:24,399 --> 01:17:30,799
well hmm that's a little bit odd though

1578
01:17:26,719 --> 01:17:32,079
because that number is the same number

1579
01:17:30,800 --> 01:17:34,960
oh but that's just what we put in there

1580
01:17:32,079 --> 01:17:45,840
so here's our uh

1581
01:17:34,960 --> 01:17:45,840
our new one right

1582
01:17:57,520 --> 01:18:02,400
so it really feels unbounded right it

1583
01:18:00,719 --> 01:18:03,840
feels like we're doing something where

1584
01:18:02,399 --> 01:18:04,799
it's not really that we don't have

1585
01:18:03,840 --> 01:18:07,199
enough

1586
01:18:04,800 --> 01:18:08,960
it feels kind of unbounded and i'm not

1587
01:18:07,198 --> 01:18:11,119
sure why

1588
01:18:08,960 --> 01:18:12,960
you know what i'm saying so let's see if

1589
01:18:11,119 --> 01:18:14,960
we can figure out what's going on there

1590
01:18:12,960 --> 01:18:16,079
if there's some kind of thing that i

1591
01:18:14,960 --> 01:18:18,319
screwed up

1592
01:18:16,079 --> 01:18:18,319
uh

1593
01:18:22,960 --> 01:18:26,640
or maybe it really is just that many

1594
01:18:25,039 --> 01:18:41,840
diagrams

1595
01:18:26,640 --> 01:18:41,840
you know what i mean

1596
01:18:53,279 --> 01:18:56,880
so i guess if you look at what's

1597
01:18:54,800 --> 01:18:58,560
happening here i guess it really could

1598
01:18:56,880 --> 01:18:59,679
just be that many diagrams because if

1599
01:18:58,560 --> 01:19:01,840
you look

1600
01:18:59,679 --> 01:19:03,440
it's any time you call move entity it's

1601
01:19:01,840 --> 01:19:05,440
doing the n squared check

1602
01:19:03,439 --> 01:19:06,719
because we don't have the spatial

1603
01:19:05,439 --> 01:19:09,919
partition

1604
01:19:06,719 --> 01:19:11,520
right so if it's an n squared thing yeah

1605
01:19:09,920 --> 01:19:13,119
that probably just will blow out the

1606
01:19:11,520 --> 01:19:14,159
total diagram i mean you wouldn't want

1607
01:19:13,119 --> 01:19:17,840
to record

1608
01:19:14,158 --> 01:19:17,839
that many of them right

1609
01:19:19,039 --> 01:19:23,279
so that does seem like just flat out a

1610
01:19:21,679 --> 01:19:36,880
problem

1611
01:19:23,279 --> 01:19:37,759
and i'm not sure like maybe the right

1612
01:19:36,880 --> 01:19:40,400
thing to do here

1613
01:19:37,760 --> 01:19:41,760
is to limit this to a particular entity

1614
01:19:40,399 --> 01:19:45,198
you know what i mean

1615
01:19:41,760 --> 01:19:48,400
like you know

1616
01:19:45,198 --> 01:19:49,359
if we just want to see particular

1617
01:19:48,399 --> 01:19:51,599
entities we can

1618
01:19:49,359 --> 01:19:53,439
have some way of restricting it because

1619
01:19:51,600 --> 01:19:54,960
you know i'm going to want to use these

1620
01:19:53,439 --> 01:19:58,559
diagrams all over the place

1621
01:19:54,960 --> 01:19:59,760
so i don't really want like i can't

1622
01:19:58,560 --> 01:20:01,520
afford to have them

1623
01:19:59,760 --> 01:20:03,280
be something that's producing billions

1624
01:20:01,520 --> 01:20:05,199
and billions of things

1625
01:20:03,279 --> 01:20:07,439
so i need a way of scoping them down

1626
01:20:05,198 --> 01:20:07,439
more

1627
01:20:17,119 --> 01:20:33,840
so maybe we do something like

1628
01:20:36,800 --> 01:20:39,119
um

1629
01:20:42,639 --> 01:20:47,840
how would we do this

1630
01:21:21,279 --> 01:21:25,599
so we basically need some filter here

1631
01:21:23,920 --> 01:21:26,880
and i'm guessing that we just need like

1632
01:21:25,600 --> 01:21:30,560
entity filters so

1633
01:21:26,880 --> 01:21:33,840
i'm thinking that probably what we want

1634
01:21:30,560 --> 01:21:43,760
is like sort of this

1635
01:21:33,840 --> 01:21:46,400
sort of thing

1636
01:21:43,760 --> 01:21:47,679
so like whoever's trying to do like

1637
01:21:46,399 --> 01:21:53,119
pushes

1638
01:21:47,679 --> 01:21:53,119
has to check to see what's up

1639
01:21:54,840 --> 01:21:57,840
right

1640
01:22:08,800 --> 01:22:14,560
uh and then we will just return zero

1641
01:22:12,238 --> 01:22:25,839
when the filter says that the diagram is

1642
01:22:14,560 --> 01:22:25,840
not necessary at that time

1643
01:22:31,198 --> 01:22:37,279
uh and so here we can just say like okay

1644
01:22:34,479 --> 01:22:38,559
if we want to actually do the thing do

1645
01:22:37,279 --> 01:22:41,840
the thing

1646
01:22:38,560 --> 01:22:41,840
otherwise return 0

1647
01:22:42,479 --> 01:22:47,599
and we can just turn it off that way you

1648
01:22:45,119 --> 01:22:47,599
know what i mean

1649
01:22:51,359 --> 01:22:58,238
and so now we just need a way of

1650
01:22:54,960 --> 01:23:01,920
articulating what the filter actually

1651
01:22:58,238 --> 01:23:05,439
is right

1652
01:23:01,920 --> 01:23:08,719
um but otherwise we should be fine

1653
01:23:05,439 --> 01:23:11,759
so now if i go ahead and restore to

1654
01:23:08,719 --> 01:23:20,880
a optimize build

1655
01:23:11,760 --> 01:23:23,280
like so

1656
01:23:20,880 --> 01:23:23,279
um

1657
01:23:24,238 --> 01:23:31,839
now what we need is just a way of like

1658
01:23:27,359 --> 01:23:31,839
you know spot turning it on so

1659
01:23:32,840 --> 01:23:35,840
like

1660
01:23:41,198 --> 01:23:46,839
i guess we just want this thing to just

1661
01:23:43,699 --> 01:23:49,840
[Music]

1662
01:23:46,840 --> 01:23:49,840
do

1663
01:23:57,039 --> 01:24:05,119
i i really don't know um

1664
01:24:02,319 --> 01:24:06,799
but my hunch is we just use some kind of

1665
01:24:05,119 --> 01:24:10,079
like an id

1666
01:24:06,800 --> 01:24:14,079
so you know something like an entity id

1667
01:24:10,079 --> 01:24:17,439
like we have um

1668
01:24:14,079 --> 01:24:20,149
we could just say something like

1669
01:24:17,439 --> 01:24:21,439
in the diagrams we

1670
01:24:20,149 --> 01:24:24,479
[Music]

1671
01:24:21,439 --> 01:24:27,439
uh we pass a filter

1672
01:24:24,479 --> 01:24:28,839
so you say like i'm gonna begin

1673
01:24:27,439 --> 01:24:31,839
[Music]

1674
01:24:28,840 --> 01:24:31,840
like

1675
01:24:32,880 --> 01:24:37,440
um you pass a filter and you know

1676
01:24:35,600 --> 01:24:38,880
everything from then on if it doesn't

1677
01:24:37,439 --> 01:24:41,919
match the filter

1678
01:24:38,880 --> 01:24:43,279
right or whatever it doesn't pass i

1679
01:24:41,920 --> 01:24:47,440
don't know

1680
01:24:43,279 --> 01:24:47,439
so you would do like

1681
01:24:54,399 --> 01:24:59,839
you pass some value here and there's

1682
01:24:56,880 --> 01:24:59,840
like

1683
01:25:00,079 --> 01:25:05,840
a set that someone can call

1684
01:25:06,560 --> 01:25:10,800
uh and then each time through when we do

1685
01:25:09,279 --> 01:25:12,559
these it's like okay we know we're going

1686
01:25:10,800 --> 01:25:13,840
to be doing a bunch of diagramming and

1687
01:25:12,560 --> 01:25:17,120
so the thing is like

1688
01:25:13,840 --> 01:25:20,319
well the diagram filter here

1689
01:25:17,119 --> 01:25:27,840
is going to be like you know two and and

1690
01:25:20,319 --> 01:25:27,840
there should probably be like

1691
01:25:28,399 --> 01:25:32,960
multiple pieces to this like this thing

1692
01:25:31,679 --> 01:25:35,600
should probably take

1693
01:25:32,960 --> 01:25:36,800
like a care star or something or like a

1694
01:25:35,600 --> 01:25:41,440
void star

1695
01:25:36,800 --> 01:25:44,800
that's like a

1696
01:25:41,439 --> 01:25:47,759
like a type string or something and then

1697
01:25:44,800 --> 01:25:50,320
the value so it would be like okay you

1698
01:25:47,760 --> 01:25:55,840
know it's this function

1699
01:25:50,319 --> 01:25:55,840
and uh

1700
01:25:57,279 --> 01:26:01,198
just to like disambiguate which one

1701
01:25:59,279 --> 01:26:04,559
you're doing although i guess the

1702
01:26:01,198 --> 01:26:05,919
now that's probably not that necessary

1703
01:26:04,560 --> 01:26:07,760
because you can just pick those out so

1704
01:26:05,920 --> 01:26:09,440
let's let's ignore that so we'll just

1705
01:26:07,760 --> 01:26:13,760
say look there's the entity

1706
01:26:09,439 --> 01:26:16,559
we're going to pass the id as the filter

1707
01:26:13,760 --> 01:26:17,360
and that will give us a way of only

1708
01:26:16,560 --> 01:26:18,880
outputting

1709
01:26:17,359 --> 01:26:23,920
the diagrams we actually care about at

1710
01:26:18,880 --> 01:26:23,920
any particular time hopefully um

1711
01:26:25,198 --> 01:26:28,158
and we'll go from there

1712
01:26:33,198 --> 01:26:37,839
that seems fine

1713
01:26:40,000 --> 01:26:45,039
and the way this would work is now we

1714
01:26:48,840 --> 01:26:53,360
like

1715
01:26:50,238 --> 01:26:55,919
have some notion of like did you pass

1716
01:26:53,359 --> 01:26:55,920
the filter

1717
01:27:00,880 --> 01:27:05,840
so in here we've got

1718
01:27:08,238 --> 01:27:16,479
a filter past variable um

1719
01:27:11,439 --> 01:27:20,079
and like the filter itself

1720
01:27:16,479 --> 01:27:23,439
and so in here you would say set filter

1721
01:27:20,079 --> 01:27:25,359
just as a global diagram group filter

1722
01:27:23,439 --> 01:27:27,279
equals value

1723
01:27:25,359 --> 01:27:28,960
and in here you would just have global

1724
01:27:27,279 --> 01:27:32,000
diagram

1725
01:27:28,960 --> 01:27:34,880
group filter past equals

1726
01:27:32,000 --> 01:27:36,079
like whatever this thing is that you're

1727
01:27:34,880 --> 01:27:39,600
getting

1728
01:27:36,079 --> 01:27:41,119
um if it equals whatever the last thing

1729
01:27:39,600 --> 01:27:44,840
was set as the filter

1730
01:27:41,119 --> 01:27:49,279
then we use then you can draw

1731
01:27:44,840 --> 01:27:52,480
right so at that point

1732
01:27:49,279 --> 01:27:55,439
this just works and this is now just

1733
01:27:52,479 --> 01:27:55,839
if the diagramming is on right and i

1734
01:27:55,439 --> 01:27:59,198
think

1735
01:27:55,840 --> 01:28:02,159
then we're fine so now the diagramming

1736
01:27:59,198 --> 01:28:05,279
is actually live

1737
01:28:02,158 --> 01:28:07,198
and you can run it and in theory

1738
01:28:05,279 --> 01:28:08,559
we won't have that problem with too many

1739
01:28:07,198 --> 01:28:11,119
diagrams

1740
01:28:08,560 --> 01:28:12,560
and now you should be able to sync your

1741
01:28:11,119 --> 01:28:14,158
diagram just fine

1742
01:28:12,560 --> 01:28:15,600
by turning on the filter for a

1743
01:28:14,158 --> 01:28:18,638
particular entity

1744
01:28:15,600 --> 01:28:22,880
right um and then what we can do

1745
01:28:18,639 --> 01:28:23,119
is just next time uh we'll find the free

1746
01:28:22,880 --> 01:28:26,400
f

1747
01:28:23,119 --> 01:28:29,439
key there are not many

1748
01:28:26,399 --> 01:28:32,719
um oh we've already got one

1749
01:28:29,439 --> 01:28:34,960
right so

1750
01:28:32,719 --> 01:28:36,639
really all we need to do is go into this

1751
01:28:34,960 --> 01:28:38,079
collision recorder thing change this to

1752
01:28:36,639 --> 01:28:40,880
diagramming

1753
01:28:38,079 --> 01:28:42,079
um and then it will step us through

1754
01:28:40,880 --> 01:28:45,199
right

1755
01:28:42,079 --> 01:28:46,719
um so that's what we'll do next week is

1756
01:28:45,198 --> 01:28:49,039
tie that up to it

1757
01:28:46,719 --> 01:28:50,158
uh and then we should have some diagrams

1758
01:28:49,039 --> 01:28:51,439
whether we'll find anything with them i

1759
01:28:50,158 --> 01:28:54,399
don't know but hopefully they'll

1760
01:28:51,439 --> 01:28:56,000
make it clear what's going on um the

1761
01:28:54,399 --> 01:28:59,759
other nice thing we could do there

1762
01:28:56,000 --> 01:29:01,359
is like we can finally shut off some of

1763
01:28:59,760 --> 01:29:03,039
this other stuff so like if we go back

1764
01:29:01,359 --> 01:29:04,238
into world mode we don't have to keep

1765
01:29:03,039 --> 01:29:07,519
drawing stupid

1766
01:29:04,238 --> 01:29:07,519
uh colliders and stuff

1767
01:29:08,840 --> 01:29:11,840
um

1768
01:29:20,000 --> 01:29:23,039
there we go uh so we don't have to draw

1769
01:29:22,079 --> 01:29:25,359
like this stuff

1770
01:29:23,039 --> 01:29:27,119
anymore uh because we can now put that

1771
01:29:25,359 --> 01:29:28,799
into the diagram so that we only

1772
01:29:27,119 --> 01:29:30,079
see the colliders that we actually care

1773
01:29:28,800 --> 01:29:31,760
about that are like in the region we're

1774
01:29:30,079 --> 01:29:33,279
looking in and all those sorts of things

1775
01:29:31,760 --> 01:29:35,039
so that would clean things up nicely so

1776
01:29:33,279 --> 01:29:36,000
that when we're normally running we see

1777
01:29:35,039 --> 01:29:39,119
the actual

1778
01:29:36,000 --> 01:29:40,479
thing correctly which is much better um

1779
01:29:39,119 --> 01:29:41,679
just so we have some idea of what the

1780
01:29:40,479 --> 01:29:43,359
heck is going on

1781
01:29:41,679 --> 01:29:45,440
uh and then we'll just make it so that

1782
01:29:43,359 --> 01:29:47,279
as we get you know closer to things that

1783
01:29:45,439 --> 01:29:52,238
draws their collision volumes in

1784
01:29:47,279 --> 01:29:53,840
uh using the actual uh diagramming right

1785
01:29:52,238 --> 01:29:55,279
and then we should be able to see we can

1786
01:29:53,840 --> 01:29:56,639
like set the diagramming to show the

1787
01:29:55,279 --> 01:29:58,079
glove and then when we get those things

1788
01:29:56,639 --> 01:29:59,679
where it sticks on the corner

1789
01:29:58,079 --> 01:30:01,279
and we don't think it should because the

1790
01:29:59,679 --> 01:30:03,199
sphere roll-off should have solved that

1791
01:30:01,279 --> 01:30:06,079
right or that was the hope anyway

1792
01:30:03,198 --> 01:30:06,799
we can see why and that's really what we

1793
01:30:06,079 --> 01:30:21,840
want here

1794
01:30:06,800 --> 01:30:21,840
you know what i mean

1795
01:30:21,920 --> 01:30:35,840
all right

1796
01:30:38,079 --> 01:30:40,960
so that's it folks

1797
01:30:41,198 --> 01:30:46,960
any questions about what we just did

1798
01:30:44,560 --> 01:30:48,560
um it all looks okay like i think it's

1799
01:30:46,960 --> 01:30:49,198
so the only thing that i would say about

1800
01:30:48,560 --> 01:30:50,639
it is

1801
01:30:49,198 --> 01:30:51,919
one thing i would probably do if this

1802
01:30:50,639 --> 01:30:52,639
was something i was programming in

1803
01:30:51,920 --> 01:30:55,760
myself

1804
01:30:52,639 --> 01:30:56,079
uh with a lot more time uh i would say

1805
01:30:55,760 --> 01:30:58,320
you

1806
01:30:56,079 --> 01:30:59,519
probably want to make it easier to

1807
01:30:58,319 --> 01:31:00,960
specify the diagrams

1808
01:30:59,520 --> 01:31:04,639
so i might make it so you can just like

1809
01:31:00,960 --> 01:31:04,639
throw those up on there

1810
01:31:05,279 --> 01:31:18,719
if that makes sense

1811
01:31:16,479 --> 01:31:19,839
do you know about web view 2 that

1812
01:31:18,719 --> 01:31:24,158
doesn't sound

1813
01:31:19,840 --> 01:31:24,159
on topic synthesis

1814
01:31:24,800 --> 01:31:27,859
[Music]

1815
01:31:28,840 --> 01:31:31,840
um

1816
01:31:42,238 --> 01:31:45,678
well it's just web view 2 just kind of

1817
01:31:44,560 --> 01:31:48,159
sounds like

1818
01:31:45,679 --> 01:31:50,480
you know electron for windows right i

1819
01:31:48,158 --> 01:31:53,279
mean that doesn't seem weird

1820
01:31:50,479 --> 01:31:54,000
it's just hey you wanted to put a

1821
01:31:53,279 --> 01:31:57,198
website

1822
01:31:54,000 --> 01:31:57,198
content thing into your

1823
01:31:57,600 --> 01:32:03,440
like into your app

1824
01:32:00,880 --> 01:32:04,880
um that you know i mean we already have

1825
01:32:03,439 --> 01:32:07,439
that

1826
01:32:04,880 --> 01:32:13,840
but i guess this they this is

1827
01:32:07,439 --> 01:32:13,839
microsoft's version of it right

1828
01:32:21,920 --> 01:32:26,319
what's the sphere roll off um so what i

1829
01:32:24,319 --> 01:32:28,399
was trying to say there was just that

1830
01:32:26,319 --> 01:32:29,759
if you so one of the things that we

1831
01:32:28,399 --> 01:32:32,238
added to the collision system was

1832
01:32:29,760 --> 01:32:33,039
spheres and they don't seem to work

1833
01:32:32,238 --> 01:32:35,039
right

1834
01:32:33,039 --> 01:32:36,880
because you would expect the spheres you

1835
01:32:35,039 --> 01:32:37,600
would expect sphere colliders to be able

1836
01:32:36,880 --> 01:32:41,119
to roll

1837
01:32:37,600 --> 01:32:44,400
off the side of of uh

1838
01:32:41,119 --> 01:32:45,840
like when they hit

1839
01:32:44,399 --> 01:32:46,960
the collision normal is going to be

1840
01:32:45,840 --> 01:32:48,239
pointing towards the center of the

1841
01:32:46,960 --> 01:32:49,279
sphere which means that if you hit

1842
01:32:48,238 --> 01:32:52,238
anywhere

1843
01:32:49,279 --> 01:32:53,198
to like the side of the center of the

1844
01:32:52,238 --> 01:32:54,718
sphere

1845
01:32:53,198 --> 01:32:57,359
it should be able to roll around the

1846
01:32:54,719 --> 01:33:02,639
corner instead of getting stuck

1847
01:32:57,359 --> 01:33:09,119
and you know that needs to get debugged

1848
01:33:02,639 --> 01:33:10,639
because it doesn't look it's working

1849
01:33:09,119 --> 01:33:12,800
you made it about rewinding a memory

1850
01:33:10,639 --> 01:33:16,239
arena does a rewind free the allocation

1851
01:33:12,800 --> 01:33:17,760
uh it doesn't have to the important part

1852
01:33:16,238 --> 01:33:20,238
about that particular to-do

1853
01:33:17,760 --> 01:33:22,400
was i was just trying to note that what

1854
01:33:20,238 --> 01:33:25,359
we don't want to do

1855
01:33:22,399 --> 01:33:26,960
is we don't want to push some space on

1856
01:33:25,359 --> 01:33:29,279
use it for a printf buffer

1857
01:33:26,960 --> 01:33:30,158
and then orphan all the space that

1858
01:33:29,279 --> 01:33:31,759
wasn't used

1859
01:33:30,158 --> 01:33:33,359
because that's just a tremendous waste

1860
01:33:31,760 --> 01:33:35,119
especially when you're doing potentially

1861
01:33:33,359 --> 01:33:37,599
a lot of these like we would be

1862
01:33:35,119 --> 01:33:38,158
so if you put on 1024 because you want

1863
01:33:37,600 --> 01:33:40,320
to support

1864
01:33:38,158 --> 01:33:42,399
large string printfs and most of your

1865
01:33:40,319 --> 01:33:44,079
strings are 16 characters or something

1866
01:33:42,399 --> 01:33:46,158
you're orphaning like basically a

1867
01:33:44,079 --> 01:33:47,760
thousand bytes in the arena

1868
01:33:46,158 --> 01:33:50,000
that you can't use for anything they

1869
01:33:47,760 --> 01:33:51,679
just got wasted on that frame

1870
01:33:50,000 --> 01:33:53,520
right and yeah it all gets cleared at

1871
01:33:51,679 --> 01:33:55,039
the end so maybe you don't care but it's

1872
01:33:53,520 --> 01:33:56,000
still a tremendous amount of wasted

1873
01:33:55,039 --> 01:33:58,960
memory

1874
01:33:56,000 --> 01:34:00,319
uh paging that doesn't have to happen

1875
01:33:58,960 --> 01:34:01,920
and so the way smarter thing to do is

1876
01:34:00,319 --> 01:34:03,599
when you do a printf like that

1877
01:34:01,920 --> 01:34:05,119
you print f into the buffer and you then

1878
01:34:03,600 --> 01:34:07,039
record that you the

1879
01:34:05,119 --> 01:34:08,880
amount you actually used and it's very

1880
01:34:07,039 --> 01:34:19,840
simple it's a really simple addition to

1881
01:34:08,880 --> 01:34:19,840
arenas that you know you should do

1882
01:34:21,600 --> 01:34:24,960
shouldn't we add spatial partitioning

1883
01:34:22,960 --> 01:34:25,279
for collisions uh and such at this point

1884
01:34:24,960 --> 01:34:28,399
uh

1885
01:34:25,279 --> 01:34:30,960
not until it's debugged so

1886
01:34:28,399 --> 01:34:32,158
i don't want to uh so so typically if

1887
01:34:30,960 --> 01:34:33,600
you when you're talking about spatial

1888
01:34:32,158 --> 01:34:35,599
partitioning for things

1889
01:34:33,600 --> 01:34:37,920
the best time to do spatial partitioning

1890
01:34:35,600 --> 01:34:39,199
is after you're done with the algorithm

1891
01:34:37,920 --> 01:34:40,480
because until you're done with the

1892
01:34:39,198 --> 01:34:41,759
algorithm and until you have it

1893
01:34:40,479 --> 01:34:42,158
completely debugged and you know that

1894
01:34:41,760 --> 01:34:44,880
it's

1895
01:34:42,158 --> 01:34:46,319
what you want you may end up making it

1896
01:34:44,880 --> 01:34:47,679
if you do before that you

1897
01:34:46,319 --> 01:34:48,960
may end up making a spatial audition

1898
01:34:47,679 --> 01:34:49,679
that doesn't answer the questions you

1899
01:34:48,960 --> 01:34:51,520
actually needed

1900
01:34:49,679 --> 01:34:52,800
because you add a question or you change

1901
01:34:51,520 --> 01:34:55,119
how a question is asked

1902
01:34:52,800 --> 01:34:56,000
when you modify the routine so i would

1903
01:34:55,118 --> 01:34:58,079
highly recommend

1904
01:34:56,000 --> 01:34:59,439
not adding a spatial partition until

1905
01:34:58,079 --> 01:35:02,079
after you're done

1906
01:34:59,439 --> 01:35:03,919
with the actual routine because then you

1907
01:35:02,079 --> 01:35:15,840
know what you need

1908
01:35:03,920 --> 01:35:15,840
whereas until you're done you don't

1909
01:35:19,118 --> 01:35:21,439
you mentioned you are doing memory

1910
01:35:20,238 --> 01:35:22,559
arenas differently now what are you

1911
01:35:21,439 --> 01:35:25,759
doing differently um

1912
01:35:22,560 --> 01:35:28,080
so nowadays i lean on the 64-bit

1913
01:35:25,760 --> 01:35:30,079
stuff more so a lot of times i'll set up

1914
01:35:28,079 --> 01:35:33,439
arenas if they're growable arenas

1915
01:35:30,079 --> 01:35:36,559
they grow in linear order

1916
01:35:33,439 --> 01:35:38,158
they don't use chunks as much right

1917
01:35:36,560 --> 01:35:40,159
because you don't really need chunks as

1918
01:35:38,158 --> 01:35:40,799
much when you have a full 64-bit address

1919
01:35:40,158 --> 01:35:43,759
space

1920
01:35:40,800 --> 01:35:45,679
you can kind of just like grow linearly

1921
01:35:43,760 --> 01:35:46,719
pretty much all the time it's pretty

1922
01:35:45,679 --> 01:35:49,760
rare to need

1923
01:35:46,719 --> 01:35:57,840
anything else so you know you do it a

1924
01:35:49,760 --> 01:35:57,840
little bit differently um

1925
01:36:07,840 --> 01:36:10,719
in the early days you're mentioning that

1926
01:36:09,520 --> 01:36:11,280
australia's got enough attraction you

1927
01:36:10,719 --> 01:36:12,639
could probably

1928
01:36:11,279 --> 01:36:14,158
possibly look into networking what are

1929
01:36:12,639 --> 01:36:15,279
your chances now uh no if you want

1930
01:36:14,158 --> 01:36:16,559
networking you're going to have to do

1931
01:36:15,279 --> 01:36:20,639
star code galaxy

1932
01:36:16,560 --> 01:36:24,159
starco galaxy covers networking um

1933
01:36:20,639 --> 01:36:25,920
handmade hero will not so you know

1934
01:36:24,158 --> 01:36:27,198
when this comes out you'll get your

1935
01:36:25,920 --> 01:36:30,719
networking

1936
01:36:27,198 --> 01:36:39,839
um and there's a lot of it

1937
01:36:30,719 --> 01:36:39,840
but uh handmade heroes no networking

1938
01:36:50,840 --> 01:36:53,279
so

1939
01:36:52,000 --> 01:36:54,880
uh why do you forward to clear the

1940
01:36:53,279 --> 01:36:56,079
diagram function the header file i

1941
01:36:54,880 --> 01:36:57,440
thought you did the unity build system

1942
01:36:56,079 --> 01:36:59,118
so you didn't need to that kind of thing

1943
01:36:57,439 --> 01:36:59,759
unless the pound include order requires

1944
01:36:59,118 --> 01:37:02,639
it

1945
01:36:59,760 --> 01:37:03,360
um well there's a couple of reasons uh

1946
01:37:02,639 --> 01:37:06,560
two

1947
01:37:03,359 --> 01:37:08,639
two or not two do it right uh

1948
01:37:06,560 --> 01:37:10,400
yeah one is for the pound include order

1949
01:37:08,639 --> 01:37:14,400
the other is just for my own

1950
01:37:10,399 --> 01:37:17,839
organization so when i do

1951
01:37:14,399 --> 01:37:19,839
uh typically when

1952
01:37:17,840 --> 01:37:21,600
i do something where i have to do this

1953
01:37:19,840 --> 01:37:25,840
crap because of c

1954
01:37:21,600 --> 01:37:28,960
plus um i typically also put the

1955
01:37:25,840 --> 01:37:30,960
the non-pound defined versions up here

1956
01:37:28,960 --> 01:37:32,800
and that's just so i can see them and

1957
01:37:30,960 --> 01:37:35,840
make sure that i remember to do

1958
01:37:32,800 --> 01:37:39,920
them both right so

1959
01:37:35,840 --> 01:37:41,760
you don't really need them um

1960
01:37:39,920 --> 01:37:47,920
you you probably and well i don't know

1961
01:37:41,760 --> 01:37:50,400
let me just see i'm not sure what our

1962
01:37:47,920 --> 01:37:52,960
there we go

1963
01:37:50,399 --> 01:37:53,599
uh you probably don't need them so you

1964
01:37:52,960 --> 01:37:56,800
probably

1965
01:37:53,600 --> 01:37:57,840
could do this uh right and it still

1966
01:37:56,800 --> 01:38:01,360
works

1967
01:37:57,840 --> 01:38:02,079
but typically when i you know typically

1968
01:38:01,359 --> 01:38:05,439
what happens

1969
01:38:02,079 --> 01:38:09,118
is i end up uh putting them in there

1970
01:38:05,439 --> 01:38:09,118
when i'm trying to keep them lined up

1971
01:38:14,840 --> 01:38:17,840
right

1972
01:38:33,600 --> 01:38:36,880
do you know any particular reason why

1973
01:38:35,118 --> 01:38:37,519
msvc would optimize a piece of code

1974
01:38:36,880 --> 01:38:41,760
better with

1975
01:38:37,520 --> 01:38:44,480
slash ox instead of slash o2

1976
01:38:41,760 --> 01:38:45,280
um can you be more specific i don't even

1977
01:38:44,479 --> 01:38:47,439
remember what

1978
01:38:45,279 --> 01:38:49,840
the like i i hate remembering things

1979
01:38:47,439 --> 01:38:53,439
like command line switches and stuff

1980
01:38:49,840 --> 01:38:56,719
so i don't even remember what that is

1981
01:38:53,439 --> 01:39:00,319
uh slash ox

1982
01:38:56,719 --> 01:39:00,319
is favor speed

1983
01:39:02,800 --> 01:39:08,719
so you're asking why is slash 02

1984
01:39:06,000 --> 01:39:09,600
and slash ox you're expecting them to be

1985
01:39:08,719 --> 01:39:12,880
the same

1986
01:39:09,600 --> 01:39:17,600
because they're both favor speed

1987
01:39:12,880 --> 01:39:21,920
or and and you're not seeing that um

1988
01:39:17,600 --> 01:39:23,440
or something so i can give a meta answer

1989
01:39:21,920 --> 01:39:25,679
because obviously i have no idea because

1990
01:39:23,439 --> 01:39:28,319
i don't write the compiler

1991
01:39:25,679 --> 01:39:29,600
but what i would do is i would go to

1992
01:39:28,319 --> 01:39:33,039
here

1993
01:39:29,600 --> 01:39:35,360
right nope not that did i type that

1994
01:39:33,039 --> 01:39:35,359
wrong

1995
01:39:36,960 --> 01:39:43,359
there we go i guess i typed it wrong um

1996
01:39:40,399 --> 01:39:46,799
so i would go to here and i would put in

1997
01:39:43,359 --> 01:39:46,799
your code that you're talking about

1998
01:39:47,118 --> 01:39:51,279
whatever it is right and then i would

1999
01:39:49,920 --> 01:39:54,239
just set this up

2000
01:39:51,279 --> 01:39:55,759
to to look at both of them so i'd add

2001
01:39:54,238 --> 01:40:00,238
two compilers

2002
01:39:55,760 --> 01:40:00,239
i'd add microsoft's you know

2003
01:40:00,719 --> 01:40:04,960
increasingly terrible compiler as they

2004
01:40:02,560 --> 01:40:06,719
release new versions of it

2005
01:40:04,960 --> 01:40:08,800
the latest version of microsoft visual

2006
01:40:06,719 --> 01:40:09,439
studio visual c compiler is one of the

2007
01:40:08,800 --> 01:40:13,039
worst

2008
01:40:09,439 --> 01:40:13,039
i've ever experienced in the

2009
01:40:17,760 --> 01:40:23,760
10 in the 30 year history of me having

2010
01:40:20,880 --> 01:40:26,880
used this compiler is that right

2011
01:40:23,760 --> 01:40:28,800
so like 92 so 10 10

2012
01:40:26,880 --> 01:40:30,159
10. yeah in the 30-year history of using

2013
01:40:28,800 --> 01:40:31,520
the compiler their latest one is

2014
01:40:30,158 --> 01:40:32,158
probably one of the worst i've ever

2015
01:40:31,520 --> 01:40:35,199
experienced

2016
01:40:32,158 --> 01:40:36,799
it's absolutely horrific um it gets

2017
01:40:35,198 --> 01:40:40,158
worse with every version and this

2018
01:40:36,800 --> 01:40:44,239
latest version is is

2019
01:40:40,158 --> 01:40:47,439
just insane um absolutely

2020
01:40:44,238 --> 01:40:48,879
absolutely terrible uh so i'm assuming

2021
01:40:47,439 --> 01:40:49,359
that everyone will eventually switch to

2022
01:40:48,880 --> 01:40:51,520
clang

2023
01:40:49,359 --> 01:40:52,799
because they have to because microsoft

2024
01:40:51,520 --> 01:40:54,400
continues to make their compiler so bad

2025
01:40:52,800 --> 01:40:57,600
that just i don't think anyone could

2026
01:40:54,399 --> 01:41:00,238
use it uh eventually but you know

2027
01:40:57,600 --> 01:41:02,239
that's where we're at so you know i

2028
01:41:00,238 --> 01:41:05,839
would type in whatever the thing is

2029
01:41:02,238 --> 01:41:05,839
that you're trying to do here

2030
01:41:08,880 --> 01:41:15,199
you know um and then what i would do

2031
01:41:12,639 --> 01:41:16,480
is oops i forgot this thing is to return

2032
01:41:15,198 --> 01:41:19,439
something

2033
01:41:16,479 --> 01:41:20,319
um i would look and see if you can

2034
01:41:19,439 --> 01:41:22,238
narrow down

2035
01:41:20,319 --> 01:41:25,118
what the actual difference is between

2036
01:41:22,238 --> 01:41:28,479
the assembly language between these two

2037
01:41:25,118 --> 01:41:33,599
right um and

2038
01:41:28,479 --> 01:41:36,000
so that is that is what

2039
01:41:33,600 --> 01:41:37,360
that is what i would do because then you

2040
01:41:36,000 --> 01:41:40,560
can find out like

2041
01:41:37,359 --> 01:41:42,079
what is the actual diff uh

2042
01:41:40,560 --> 01:41:43,679
that that it you know what is it

2043
01:41:42,079 --> 01:41:45,279
actually changing

2044
01:41:43,679 --> 01:41:48,560
that is making the speed difference

2045
01:41:45,279 --> 01:41:50,880
right and then you can investigate that

2046
01:41:48,560 --> 01:42:00,159
but i would start by trying to find the

2047
01:41:50,880 --> 01:42:01,920
actual difference

2048
01:42:00,158 --> 01:42:03,759
and you can pick your exact version of

2049
01:42:01,920 --> 01:42:15,840
msvc if you're not using the latest one

2050
01:42:03,760 --> 01:42:15,840
but that's where i would start

2051
01:42:27,840 --> 01:42:31,440
what do you mean by grow linearly um so

2052
01:42:30,639 --> 01:42:35,600
what i mean

2053
01:42:31,439 --> 01:42:38,638
is that in a 64-bit address space

2054
01:42:35,600 --> 01:42:40,639
you can just pick very sparse starting

2055
01:42:38,639 --> 01:42:45,039
points for your arenas so that they have

2056
01:42:40,639 --> 01:42:47,359
as much room to grow as they want right

2057
01:42:45,039 --> 01:42:47,359
um

2058
01:42:52,000 --> 01:42:57,840
that's that's all i mean

2059
01:43:02,800 --> 01:43:05,840
yeah and botonder my answer is the same

2060
01:43:04,639 --> 01:43:06,800
right it doesn't matter which one of

2061
01:43:05,840 --> 01:43:08,319
these produces more

2062
01:43:06,800 --> 01:43:10,480
regardless of which one produces the

2063
01:43:08,319 --> 01:43:11,920
faster code you want to find out by

2064
01:43:10,479 --> 01:43:13,599
doing this

2065
01:43:11,920 --> 01:43:15,920
and there's multiple reasons for that

2066
01:43:13,600 --> 01:43:17,679
one is you might want to report a bug

2067
01:43:15,920 --> 01:43:19,118
i mean we've seen what happens when you

2068
01:43:17,679 --> 01:43:20,000
report a bug to microsoft so maybe don't

2069
01:43:19,118 --> 01:43:22,238
do that

2070
01:43:20,000 --> 01:43:24,000
but you will be able to see what's going

2071
01:43:22,238 --> 01:43:27,279
wrong

2072
01:43:24,000 --> 01:43:29,760
and then when you see what's going wrong

2073
01:43:27,279 --> 01:43:31,359
you can try to change your routines to

2074
01:43:29,760 --> 01:43:33,119
work around it right

2075
01:43:31,359 --> 01:43:35,279
because you have to remember that when

2076
01:43:33,118 --> 01:43:36,639
you when you're asking the compiler to

2077
01:43:35,279 --> 01:43:38,479
optimize something

2078
01:43:36,639 --> 01:43:40,400
what really is happening is the compiler

2079
01:43:38,479 --> 01:43:42,718
is applying a bunch of heuristics about

2080
01:43:40,399 --> 01:43:45,439
what it thinks is going to happen

2081
01:43:42,719 --> 01:43:46,239
uh to your code but it never actually

2082
01:43:45,439 --> 01:43:49,118
tests them

2083
01:43:46,238 --> 01:43:51,359
right so the compiler doesn't the

2084
01:43:49,118 --> 01:43:53,279
compiler never like compiles and runs

2085
01:43:51,359 --> 01:43:55,679
the code to see whether it's faster

2086
01:43:53,279 --> 01:43:57,359
it's just guessing that if it applies

2087
01:43:55,679 --> 01:43:59,039
the transformations that it thinks are

2088
01:43:57,359 --> 01:44:02,880
faster that it will get faster

2089
01:43:59,039 --> 01:44:06,560
right that's what it's doing

2090
01:44:02,880 --> 01:44:10,880
and so when you ask it for

2091
01:44:06,560 --> 01:44:12,320
maximum optimizations it's simply

2092
01:44:10,880 --> 01:44:14,480
what it's going to apply are the

2093
01:44:12,319 --> 01:44:16,319
optimizations that it generally

2094
01:44:14,479 --> 01:44:18,238
thinks are the best but there's no

2095
01:44:16,319 --> 01:44:19,039
guarantee that that code will actually

2096
01:44:18,238 --> 01:44:21,359
be better

2097
01:44:19,039 --> 01:44:22,238
that code may actually be worse for all

2098
01:44:21,359 --> 01:44:25,599
we know

2099
01:44:22,238 --> 01:44:27,919
right it may be worse than debug in some

2100
01:44:25,600 --> 01:44:30,400
really rare cases

2101
01:44:27,920 --> 01:44:32,158
because the compiler never checks right

2102
01:44:30,399 --> 01:44:32,638
the compiler never checks to see whether

2103
01:44:32,158 --> 01:44:34,638
the code

2104
01:44:32,639 --> 01:44:36,560
actually got faster it's never running

2105
01:44:34,639 --> 01:44:37,760
the code only you are running the code

2106
01:44:36,560 --> 01:44:39,039
and you're the one who knows that it got

2107
01:44:37,760 --> 01:44:42,079
slower

2108
01:44:39,039 --> 01:44:44,639
so what you have to do is when you see a

2109
01:44:42,079 --> 01:44:47,198
case where two different flags

2110
01:44:44,639 --> 01:44:48,000
produce different speeds and it's

2111
01:44:47,198 --> 01:44:49,439
unclear why

2112
01:44:48,000 --> 01:44:50,880
you're like how that doesn't make sense

2113
01:44:49,439 --> 01:44:52,238
because this one should have is supposed

2114
01:44:50,880 --> 01:44:54,880
to be faster

2115
01:44:52,238 --> 01:44:56,399
the only thing you could do is go look

2116
01:44:54,880 --> 01:44:57,760
you just have to go look

2117
01:44:56,399 --> 01:45:00,238
and then when you find out what the

2118
01:44:57,760 --> 01:45:01,199
problem is you can try to work around it

2119
01:45:00,238 --> 01:45:03,759
by changing your c

2120
01:45:01,198 --> 01:45:04,479
code or hand optimizing that part that

2121
01:45:03,760 --> 01:45:05,840
got slower

2122
01:45:04,479 --> 01:45:08,238
so that the compiler doesn't have to

2123
01:45:05,840 --> 01:45:09,679
figure it out right you're

2124
01:45:08,238 --> 01:45:11,118
when you're doing code optimization

2125
01:45:09,679 --> 01:45:11,920
through a compiler you have to do a

2126
01:45:11,118 --> 01:45:14,960
bunch of that

2127
01:45:11,920 --> 01:45:18,880
stupid dance where you go in there and

2128
01:45:14,960 --> 01:45:20,800
you like you know you

2129
01:45:18,880 --> 01:45:22,319
make little changes to your c code to

2130
01:45:20,800 --> 01:45:25,039
try and nudge the compiler towards the

2131
01:45:22,319 --> 01:45:25,039
right thing to do

2132
01:45:28,840 --> 01:45:31,840
right

2133
01:45:41,920 --> 01:45:45,359
would be possible to render all of the

2134
01:45:43,600 --> 01:45:46,960
unfiltered n-squared diagrams if the

2135
01:45:45,359 --> 01:45:48,719
number of debug events was huge

2136
01:45:46,960 --> 01:45:50,000
or are there just way too many diagrams

2137
01:45:48,719 --> 01:45:53,198
for that um

2138
01:45:50,000 --> 01:45:54,479
you know one of the problems so

2139
01:45:53,198 --> 01:45:56,479
there's a difference between what's

2140
01:45:54,479 --> 01:45:59,678
possible and what's feasible

2141
01:45:56,479 --> 01:46:02,799
right so it's probably possible

2142
01:45:59,679 --> 01:46:03,359
to render all the diagrams but the debug

2143
01:46:02,800 --> 01:46:05,279
system

2144
01:46:03,359 --> 01:46:06,880
is not set up to be super optimal

2145
01:46:05,279 --> 01:46:10,880
because it's a debug system

2146
01:46:06,880 --> 01:46:14,079
right and so the problem that you get

2147
01:46:10,880 --> 01:46:14,880
is that you don't actually want to spend

2148
01:46:14,079 --> 01:46:17,039
a bunch of time

2149
01:46:14,880 --> 01:46:18,079
optimizing the throughput of your debug

2150
01:46:17,039 --> 01:46:21,439
diagrams

2151
01:46:18,079 --> 01:46:24,399
right so what's

2152
01:46:21,439 --> 01:46:26,238
feasible to do and what's possible to do

2153
01:46:24,399 --> 01:46:27,679
are very different in this case because

2154
01:46:26,238 --> 01:46:29,359
if we don't want to spend a bunch of

2155
01:46:27,679 --> 01:46:30,639
time optimizing the throughput of our

2156
01:46:29,359 --> 01:46:31,839
debug system so that we can draw

2157
01:46:30,639 --> 01:46:34,079
billions of diagrams

2158
01:46:31,840 --> 01:46:36,000
which might be very possible on today's

2159
01:46:34,079 --> 01:46:37,519
hardware it's just not feasible for us

2160
01:46:36,000 --> 01:46:38,960
because we're trying to do

2161
01:46:37,520 --> 01:46:41,840
other stuff we don't want to spend all

2162
01:46:38,960 --> 01:46:43,600
our time on a debug diagram system if we

2163
01:46:41,840 --> 01:46:55,840
did we might be optimizing it for that

2164
01:46:43,600 --> 01:46:55,840
kind of throughput right

2165
01:47:05,760 --> 01:47:08,880
and for the record like that would be a

2166
01:47:07,359 --> 01:47:12,479
cool project right

2167
01:47:08,880 --> 01:47:14,880
so if someone wanted to do a really

2168
01:47:12,479 --> 01:47:16,638
highly optimized very awesome debug

2169
01:47:14,880 --> 01:47:18,480
system that you could use in your games

2170
01:47:16,639 --> 01:47:21,199
or whatever that's a great tool

2171
01:47:18,479 --> 01:47:22,638
right so it's not so much that you don't

2172
01:47:21,198 --> 01:47:24,638
want to make a super highly optimized

2173
01:47:22,639 --> 01:47:24,960
debug system it's just that that's its

2174
01:47:24,639 --> 01:47:27,760
own

2175
01:47:24,960 --> 01:47:29,439
project right and so if you're not doing

2176
01:47:27,760 --> 01:47:37,840
that project then it doesn't make much

2177
01:47:29,439 --> 01:47:37,839
sense to do it

2178
01:47:48,238 --> 01:47:51,839
i think that's all the questions

2179
01:48:12,639 --> 01:48:16,079
what you used to build on linux

2180
01:48:16,560 --> 01:48:20,320
i i don't know what you mean

2181
01:48:20,399 --> 01:48:24,399
what do i use to build on linux i just

2182
01:48:22,960 --> 01:48:27,920
use a compiler

2183
01:48:24,399 --> 01:48:31,279
i usually use clang sometimes i use gcc

2184
01:48:27,920 --> 01:48:31,279
if that's the thing that's installed

2185
01:48:31,520 --> 01:48:34,159
do you know that sean barrett is writing

2186
01:48:32,719 --> 01:48:35,679
a c compiler are you going to use it i

2187
01:48:34,158 --> 01:48:38,879
mean i don't really have any use for a c

2188
01:48:35,679 --> 01:48:42,560
compiler so i don't

2189
01:48:38,880 --> 01:48:44,159
i mean i program in c

2190
01:48:42,560 --> 01:48:45,600
plus plus you know i don't use a lot of

2191
01:48:44,158 --> 01:48:48,238
cbs features but i use

2192
01:48:45,600 --> 01:48:49,920
you know operator overloading and stuff

2193
01:48:48,238 --> 01:48:52,238
like that so a c compiler doesn't really

2194
01:48:49,920 --> 01:48:52,239
help me

2195
01:48:52,639 --> 01:48:56,480
oh any build system or just yeah just a

2196
01:48:54,639 --> 01:48:58,239
sh file same exact thing as i do on

2197
01:48:56,479 --> 01:48:58,638
windows just a dot sh file that just

2198
01:48:58,238 --> 01:49:01,519
says

2199
01:48:58,639 --> 01:49:02,560
like clang and then the file the c file

2200
01:49:01,520 --> 01:49:15,840
and a bunch of switches

2201
01:49:02,560 --> 01:49:15,840
that's the entire build right

2202
01:49:21,039 --> 01:49:23,279
all right

2203
01:49:24,158 --> 01:49:27,279
thank you everyone for joining me for an

2204
01:49:25,760 --> 01:49:28,639
episode of handmade hero it's been a

2205
01:49:27,279 --> 01:49:29,118
pleasure coding through as always if you

2206
01:49:28,639 --> 01:49:31,440
want to follow

2207
01:49:29,118 --> 01:49:33,439
the series you can always pre-order the

2208
01:49:31,439 --> 01:49:35,039
game on handmade hero.org and it comes

2209
01:49:33,439 --> 01:49:38,319
with the source code

2210
01:49:35,039 --> 01:49:42,079
um i will be back here next week to

2211
01:49:38,319 --> 01:49:43,279
do this actual uh basically we did all

2212
01:49:42,079 --> 01:49:44,158
the work for like queuing up our

2213
01:49:43,279 --> 01:49:46,158
diagrams

2214
01:49:44,158 --> 01:49:47,198
and so now we need something that will

2215
01:49:46,158 --> 01:49:50,319
actually draw them

2216
01:49:47,198 --> 01:49:53,279
right uh and so we'll just make our

2217
01:49:50,319 --> 01:49:55,118
our little like drawing loop uh and then

2218
01:49:53,279 --> 01:49:56,880
we should have some diagrams

2219
01:49:55,118 --> 01:49:58,399
the hope is that will make it pretty

2220
01:49:56,880 --> 01:49:59,520
easy for us to figure out what goes on

2221
01:49:58,399 --> 01:50:02,719
with things

2222
01:49:59,520 --> 01:50:03,679
like spheres like whatever but i don't

2223
01:50:02,719 --> 01:50:06,319
actually know

2224
01:50:03,679 --> 01:50:07,599
so it'll be more of a question of like

2225
01:50:06,319 --> 01:50:08,158
at that point it'll become a little bit

2226
01:50:07,599 --> 01:50:10,159
of a

2227
01:50:08,158 --> 01:50:11,198
of a discovery process where we start

2228
01:50:10,158 --> 01:50:12,638
drawing things

2229
01:50:11,198 --> 01:50:15,519
and hopefully those drawings will help

2230
01:50:12,639 --> 01:50:16,880
us discover uh some of the problems

2231
01:50:15,520 --> 01:50:18,639
that we might that might be lurking in

2232
01:50:16,880 --> 01:50:20,239
the collision code that's hard to find

2233
01:50:18,639 --> 01:50:22,880
without drawing

2234
01:50:20,238 --> 01:50:25,118
that's it uh i will see you next week

2235
01:50:22,880 --> 01:50:28,880
until then have fun programming everyone

2236
01:50:25,118 --> 01:50:32,719
and i will see you on the internet

2237
01:50:28,880 --> 01:50:32,719
um i don't

