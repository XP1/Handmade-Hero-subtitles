1
00:00:00,079 --> 00:00:04,588
start recording hello everyone and

2
00:00:02,609 --> 00:00:06,480
welcome to handmade Hero the show where

3
00:00:04,589 --> 00:00:08,849
we code a complete game live on Twitch

4
00:00:06,480 --> 00:00:09,990
and we're in the middle of some grabs

5
00:00:08,849 --> 00:00:11,519
programming right now so you know what

6
00:00:09,990 --> 00:00:13,169
I'm not even gonna explain what we're

7
00:00:11,519 --> 00:00:15,210
doing am I'm gonna say anything I'm just

8
00:00:13,169 --> 00:00:18,210
gonna say if you are someone who wants

9
00:00:15,210 --> 00:00:20,939
to program some graphics you came to the

10
00:00:18,210 --> 00:00:23,519
right place because that is exactly what

11
00:00:20,939 --> 00:00:26,070
we're about to do okay we talked about

12
00:00:23,518 --> 00:00:27,750
Basie's yesterday and we got some trippy

13
00:00:26,070 --> 00:00:29,910
rotating nonsense happening on the

14
00:00:27,750 --> 00:00:32,429
screen because people kept egging me

15
00:00:29,910 --> 00:00:34,500
egging me on to do more weird cosine

16
00:00:32,429 --> 00:00:36,420
sine theta stuff it got a little out of

17
00:00:34,500 --> 00:00:39,119
hand the Q&amp;A it's true but we're back on

18
00:00:36,420 --> 00:00:40,530
track today okay to actually focus on

19
00:00:39,119 --> 00:00:42,359
stuff we actually care about and not

20
00:00:40,530 --> 00:00:43,679
messing around although you know with

21
00:00:42,359 --> 00:00:44,789
graphics programming it's easy to kind

22
00:00:43,679 --> 00:00:48,329
of go off on a little bit of a tangent

23
00:00:44,789 --> 00:00:49,469
there you know it happens it does so I'm

24
00:00:48,329 --> 00:00:52,710
gonna get right into it let me just

25
00:00:49,469 --> 00:00:54,899
mention briefly we're on day 92 so unzip

26
00:00:52,710 --> 00:00:56,340
day 91 source code if you're someone who

27
00:00:54,899 --> 00:00:57,929
pre-ordered the game on handmade hero

28
00:00:56,340 --> 00:00:59,879
org and you you're one of those folks

29
00:00:57,929 --> 00:01:01,890
who'd like to follow along at home unzip

30
00:00:59,878 --> 00:01:07,289
that source code so you'll be where I am

31
00:01:01,890 --> 00:01:09,629
today let's go to the blackboard okay

32
00:01:07,290 --> 00:01:11,340
let us go to the blackboard because the

33
00:01:09,629 --> 00:01:14,188
blackboard is really where the magic

34
00:01:11,340 --> 00:01:16,109
happens first okay because we say what

35
00:01:14,188 --> 00:01:17,899
we're gonna do it's like in pool where

36
00:01:16,109 --> 00:01:20,640
you call your shot you know you're like

37
00:01:17,900 --> 00:01:21,810
you know 9 in the corner pocket or

38
00:01:20,640 --> 00:01:23,340
whatever and you hit it there and it

39
00:01:21,810 --> 00:01:25,618
goes in that's the blackboard

40
00:01:23,340 --> 00:01:26,909
of course there's rarely any bugs when

41
00:01:25,618 --> 00:01:28,739
you do well there are bugs in the pool

42
00:01:26,909 --> 00:01:30,329
you pull table you try to hit it and if

43
00:01:28,739 --> 00:01:34,319
you miss you know it goes somewhere else

44
00:01:30,328 --> 00:01:35,750
right that happens sometimes ignoring

45
00:01:34,319 --> 00:01:39,478
all that let's get down to business here

46
00:01:35,750 --> 00:01:41,188
so what I would like to introduce now to

47
00:01:39,478 --> 00:01:42,569
get take the next step forward because

48
00:01:41,188 --> 00:01:45,478
remember what we're trying to do here is

49
00:01:42,569 --> 00:01:48,118
we want rotation and scaling rotation

50
00:01:45,478 --> 00:01:49,649
and scaling right we already have

51
00:01:48,118 --> 00:01:51,569
something that blitz tough to the screen

52
00:01:49,649 --> 00:01:52,950
but before we do anything to try and

53
00:01:51,569 --> 00:01:54,629
make it faster or do anything like that

54
00:01:52,950 --> 00:01:55,890
we have to make sure that we have the

55
00:01:54,629 --> 00:01:57,239
actual features that we need and

56
00:01:55,890 --> 00:01:58,709
rotation and scaling are features that

57
00:01:57,239 --> 00:02:01,259
we actually want now what do I mean by

58
00:01:58,709 --> 00:02:03,478
that well what I mean by that is our

59
00:02:01,259 --> 00:02:04,769
artists reaction right she draws some

60
00:02:03,478 --> 00:02:07,109
stuff and the stuff looks pretty awesome

61
00:02:04,769 --> 00:02:08,848
right it's like the little dude the hero

62
00:02:07,109 --> 00:02:11,939
or something she draws that in a bitmap

63
00:02:08,848 --> 00:02:13,739
and then that bitmap we have code right

64
00:02:11,939 --> 00:02:16,199
now that will display that bitmap on

65
00:02:13,740 --> 00:02:18,810
screen anywhere we want but it has to be

66
00:02:16,199 --> 00:02:20,969
exactly the same as what she drew okay

67
00:02:18,810 --> 00:02:21,750
there's no it can't we can't do anything

68
00:02:20,969 --> 00:02:24,270
to it right now

69
00:02:21,750 --> 00:02:25,680
literally nothing in fact right so all

70
00:02:24,270 --> 00:02:28,320
we've done is something that basically

71
00:02:25,680 --> 00:02:30,300
does a block copy of some memory to

72
00:02:28,319 --> 00:02:32,129
another location and we've only

73
00:02:30,300 --> 00:02:34,560
implemented one thing right which is

74
00:02:32,129 --> 00:02:36,210
alpha blending right we did implement

75
00:02:34,560 --> 00:02:38,370
alpha blending and that's the thing that

76
00:02:36,210 --> 00:02:39,840
allows us to kind of mask away all of

77
00:02:38,370 --> 00:02:42,210
the stuff in the bitmap that's supposed

78
00:02:39,840 --> 00:02:43,770
to be transparent so that when we blit

79
00:02:42,210 --> 00:02:45,510
it you know stuff can show through like

80
00:02:43,770 --> 00:02:47,730
if there's a tree back here you know it

81
00:02:45,509 --> 00:02:49,349
can show through or whatever right so we

82
00:02:47,729 --> 00:02:51,119
did that and that's good but what we'd

83
00:02:49,349 --> 00:02:53,400
like to be able to do is we'd like to be

84
00:02:51,120 --> 00:02:56,039
able to do various effects on these

85
00:02:53,400 --> 00:02:58,050
things as we've lit them and there are

86
00:02:56,039 --> 00:03:00,000
several that we might find important for

87
00:02:58,050 --> 00:03:01,800
compositing for getting the most out of

88
00:03:00,000 --> 00:03:04,319
the stuff that yangshin draws for us

89
00:03:01,800 --> 00:03:05,820
right and so one of the things that we'd

90
00:03:04,319 --> 00:03:08,699
like to be able to do is we'd like to be

91
00:03:05,819 --> 00:03:10,769
able to scale these things and rotate

92
00:03:08,699 --> 00:03:12,060
them right scaling is useful for a

93
00:03:10,770 --> 00:03:14,490
number of reasons it's useful for

94
00:03:12,060 --> 00:03:16,500
effects like if we want you know let's

95
00:03:14,490 --> 00:03:18,930
say we drew you maybe she draws like

96
00:03:16,500 --> 00:03:21,000
some smoke or something right and we

97
00:03:18,930 --> 00:03:22,800
want that smoke to start tiny and like

98
00:03:21,000 --> 00:03:26,310
get bigger right as it animates or

99
00:03:22,800 --> 00:03:28,350
something that would be scaling right or

100
00:03:26,310 --> 00:03:30,180
maybe we want something like she draws

101
00:03:28,349 --> 00:03:32,759
like some little throwing star weird

102
00:03:30,180 --> 00:03:34,020
thing right and we want it to throw

103
00:03:32,759 --> 00:03:35,729
across the screen but we want it to

104
00:03:34,020 --> 00:03:38,070
rotate as it does so right so we want it

105
00:03:35,729 --> 00:03:40,079
to spin right and so what we'd like to

106
00:03:38,069 --> 00:03:41,969
be able to do is just take art assets in

107
00:03:40,080 --> 00:03:43,920
our art artists make and we'd like to be

108
00:03:41,969 --> 00:03:44,819
able to apply arbitrary rotations and

109
00:03:43,919 --> 00:03:46,019
scales to them and there's other things

110
00:03:44,819 --> 00:03:47,189
that we like to be able to do too like

111
00:03:46,020 --> 00:03:49,350
for example we might want to colorize

112
00:03:47,189 --> 00:03:51,389
these like for example change the colors

113
00:03:49,349 --> 00:03:52,379
from red to green to whatever right

114
00:03:51,389 --> 00:03:54,569
there's other things I don't want to do

115
00:03:52,379 --> 00:03:56,639
they're pixel operations but in terms of

116
00:03:54,569 --> 00:03:58,229
geometric operations on the shape of the

117
00:03:56,639 --> 00:03:59,459
thing we at least want to be able to do

118
00:03:58,229 --> 00:04:01,469
these two things because they're gonna

119
00:03:59,460 --> 00:04:04,200
be important for allowing us to animate

120
00:04:01,469 --> 00:04:05,460
stuff in the way that sort of gets the

121
00:04:04,199 --> 00:04:12,989
most out of our artwork because remember

122
00:04:05,460 --> 00:04:14,909
artwork is expensive right whether it's

123
00:04:12,990 --> 00:04:17,160
in terms of money if you're paying an

124
00:04:14,909 --> 00:04:19,589
artist or time if you are the artist it

125
00:04:17,160 --> 00:04:20,850
takes a long time to draw a good art and

126
00:04:19,589 --> 00:04:23,399
so what you want to always be thinking

127
00:04:20,850 --> 00:04:25,740
about is how can I make programming

128
00:04:23,399 --> 00:04:27,929
things that will get the most bang for

129
00:04:25,740 --> 00:04:29,728
the buck out of the art that I have

130
00:04:27,930 --> 00:04:31,259
because no matter what you do your game

131
00:04:29,728 --> 00:04:32,668
will get better no matter how much money

132
00:04:31,259 --> 00:04:34,860
you have your game will always get

133
00:04:32,668 --> 00:04:36,089
better the better code you have to get

134
00:04:34,860 --> 00:04:37,710
that are on to the screen because you

135
00:04:36,089 --> 00:04:41,250
can always do more with whatever it is

136
00:04:37,709 --> 00:04:42,779
that you had right all right so how do

137
00:04:41,250 --> 00:04:44,788
we do this rotation of scaling

138
00:04:42,779 --> 00:04:46,079
okay well let's start with something

139
00:04:44,788 --> 00:04:49,438
very simple let's start with the first

140
00:04:46,079 --> 00:04:54,649
step of the process okay let's just talk

141
00:04:49,439 --> 00:04:57,509
about what pixels are filled okay

142
00:04:54,649 --> 00:04:59,339
so what we did yesterday is we we

143
00:04:57,509 --> 00:05:00,930
figured out how to you know do simple

144
00:04:59,339 --> 00:05:02,519
bases right where we could sort of say

145
00:05:00,930 --> 00:05:04,408
all right we've got a coordinate system

146
00:05:02,519 --> 00:05:05,878
and we could rotate that coordinate

147
00:05:04,408 --> 00:05:07,019
system and so we made something that was

148
00:05:05,879 --> 00:05:08,729
pretty straightforward that was

149
00:05:07,019 --> 00:05:11,848
basically a thing that would allow us to

150
00:05:08,728 --> 00:05:14,399
draw like little squares right and we

151
00:05:11,848 --> 00:05:16,500
could rotate those squares around okay

152
00:05:14,399 --> 00:05:17,968
and if you remember in fact I'll just go

153
00:05:16,500 --> 00:05:19,468
ahead and run it here why don't I you

154
00:05:17,968 --> 00:05:21,149
know let's just run it let's go nuts you

155
00:05:19,468 --> 00:05:24,149
know what I'm saying let's not why do we

156
00:05:21,149 --> 00:05:25,378
have to why do we have to always be so

157
00:05:24,149 --> 00:05:26,489
serious all the time really you're

158
00:05:25,379 --> 00:05:28,379
people you know you're just bringing me

159
00:05:26,490 --> 00:05:30,269
down let's lighten up a little bit let's

160
00:05:28,379 --> 00:05:32,789
go ahead and run the game all right so

161
00:05:30,269 --> 00:05:34,589
here's this this ridiculousness that we

162
00:05:32,788 --> 00:05:36,389
made there right it was it was totally

163
00:05:34,589 --> 00:05:37,859
crazy and the reason it was totally

164
00:05:36,389 --> 00:05:40,348
crazy is because people kept egging me

165
00:05:37,860 --> 00:05:42,838
on to change stuff in it when we were in

166
00:05:40,348 --> 00:05:44,098
the QA it was relatively sane originally

167
00:05:42,838 --> 00:05:45,478
but then you know it just got out of

168
00:05:44,098 --> 00:05:47,430
hand and so what happened was people

169
00:05:45,478 --> 00:05:49,680
started adding these weird well people

170
00:05:47,430 --> 00:05:52,168
people I did it but you know people were

171
00:05:49,680 --> 00:05:54,269
egging me on like I said so let's let's

172
00:05:52,168 --> 00:05:55,560
clip away all this ridiculousness let's

173
00:05:54,269 --> 00:05:57,870
just just cut it out for now so we can

174
00:05:55,560 --> 00:05:59,610
see the original thing none of this

175
00:05:57,870 --> 00:06:01,259
weird wobbly stuff none of this

176
00:05:59,610 --> 00:06:05,000
craziness right let's let's try to get

177
00:06:01,259 --> 00:06:08,009
back to something reasonable okay

178
00:06:05,000 --> 00:06:09,899
let's just go ahead and get it back to

179
00:06:08,009 --> 00:06:13,620
where it was before we started the

180
00:06:09,899 --> 00:06:17,429
craziness right and now you can see that

181
00:06:13,620 --> 00:06:20,968
it's just oops more thing negative

182
00:06:17,430 --> 00:06:24,120
x-axis dot Y x axis X do we have

183
00:06:20,968 --> 00:06:25,500
everything proper here I think so why

184
00:06:24,120 --> 00:06:27,300
are we still collapsed that's like our

185
00:06:25,500 --> 00:06:29,519
y-axis doesn't actually have a length to

186
00:06:27,300 --> 00:06:30,270
it oh because it's a hundred times right

187
00:06:29,519 --> 00:06:32,908
we don't need do that

188
00:06:30,269 --> 00:06:34,439
it's already scaled there we go so this

189
00:06:32,908 --> 00:06:36,149
was our little coordinate system and you

190
00:06:34,439 --> 00:06:38,338
can kind of see us rotating it around

191
00:06:36,149 --> 00:06:39,870
here right and we put a little 4x4 grid

192
00:06:38,338 --> 00:06:40,860
of points in there so we could see that

193
00:06:39,870 --> 00:06:43,168
they all rotate with it

194
00:06:40,860 --> 00:06:45,000
right and so all this was showing was

195
00:06:43,168 --> 00:06:47,279
how we create a coordinate system that

196
00:06:45,000 --> 00:06:48,990
can rotate in scale right because we can

197
00:06:47,279 --> 00:06:50,788
we can scale it as well right like if I

198
00:06:48,990 --> 00:06:52,918
do that you can see it gets larger right

199
00:06:50,788 --> 00:06:54,240
and if I do that you can see it gets

200
00:06:52,918 --> 00:06:56,728
smaller so we can multiply it by

201
00:06:54,240 --> 00:06:58,259
whatever we want to scale it right but

202
00:06:56,728 --> 00:07:00,000
that only tells us how to work with

203
00:06:58,259 --> 00:07:01,800
points right that tells us how to

204
00:07:00,000 --> 00:07:03,389
compute points on the screen that are

205
00:07:01,800 --> 00:07:05,908
rotated in scale but we don't actually

206
00:07:03,389 --> 00:07:07,918
know how to do like what we want to do

207
00:07:05,908 --> 00:07:09,360
which is take a bitmap right that's

208
00:07:07,918 --> 00:07:12,000
that's you know this rect Lerner bitmap

209
00:07:09,360 --> 00:07:13,979
and rotate that and scale that onto the

210
00:07:12,000 --> 00:07:15,750
screen right and so the very first thing

211
00:07:13,978 --> 00:07:17,639
we're gonna have to do is do something a

212
00:07:15,750 --> 00:07:19,439
little fancier than what we're doing

213
00:07:17,639 --> 00:07:21,629
there right we got to do something

214
00:07:19,439 --> 00:07:25,169
a little fancier because what we need to

215
00:07:21,629 --> 00:07:28,468
know is when we're on the screen right

216
00:07:25,168 --> 00:07:31,589
here's these pixels right this is our

217
00:07:28,468 --> 00:07:33,060
screen with all the pixels on it we we

218
00:07:31,589 --> 00:07:35,339
can't just have something that tells us

219
00:07:33,060 --> 00:07:37,319
okay you know we did some rotation and

220
00:07:35,339 --> 00:07:39,628
scaling you know and here are those

221
00:07:37,319 --> 00:07:41,430
those points right that we that we

222
00:07:39,629 --> 00:07:42,810
wanted to compute we computed the point

223
00:07:41,430 --> 00:07:45,269
so we can rotate and scale them around

224
00:07:42,810 --> 00:07:48,240
right what we actually want to know is

225
00:07:45,269 --> 00:07:52,348
if we were to rotate and scale an entire

226
00:07:48,240 --> 00:07:56,370
rectangle right what would we actually

227
00:07:52,348 --> 00:07:58,978
fill on the screen what are all the

228
00:07:56,370 --> 00:08:04,709
pixels that would actually be included

229
00:07:58,978 --> 00:08:05,908
in that rectangle right you feel me on

230
00:08:04,709 --> 00:08:07,560
that one see where I'm going with that

231
00:08:05,908 --> 00:08:09,899
that's what we need that's our next step

232
00:08:07,560 --> 00:08:11,579
right so essentially what I want to do

233
00:08:09,899 --> 00:08:12,299
today if we can get if we can have

234
00:08:11,579 --> 00:08:14,728
enough time to do it

235
00:08:12,300 --> 00:08:17,038
I want to change this into something

236
00:08:14,728 --> 00:08:20,938
that draws a solid rectangle that's

237
00:08:17,038 --> 00:08:22,588
rotating and scaling right solid because

238
00:08:20,939 --> 00:08:24,120
that's the next step in our process

239
00:08:22,588 --> 00:08:26,278
we're great basically have two steps

240
00:08:24,120 --> 00:08:28,949
right make a solid spinning thing and

241
00:08:26,278 --> 00:08:30,478
then fill it with the correct colors to

242
00:08:28,949 --> 00:08:32,129
make that texture there's a bunch of

243
00:08:30,478 --> 00:08:33,360
other stuff along the way or rather that

244
00:08:32,129 --> 00:08:35,370
come after that to start tighten things

245
00:08:33,360 --> 00:08:38,158
down but that's the basics right so how

246
00:08:35,370 --> 00:08:40,110
we gonna do that well to remember our

247
00:08:38,158 --> 00:08:43,679
collision detector right do remember

248
00:08:40,110 --> 00:08:45,329
collision detection we sort it's well we

249
00:08:43,679 --> 00:08:48,389
sort of started talking about a lot of

250
00:08:45,328 --> 00:08:49,439
the things that we would need to do it

251
00:08:48,389 --> 00:08:50,610
when we were talking about the collision

252
00:08:49,440 --> 00:08:52,290
detection because collision detection

253
00:08:50,610 --> 00:08:54,600
and rendering are actually not that

254
00:08:52,289 --> 00:08:56,818
different they both involve

255
00:08:54,600 --> 00:09:00,089
substantively the same sorts of

256
00:08:56,818 --> 00:09:02,189
operations and specifically pixel

257
00:09:00,089 --> 00:09:04,350
filling has a lot to do with collision

258
00:09:02,190 --> 00:09:07,470
detection because think about what I'm

259
00:09:04,350 --> 00:09:10,079
asking if I think about this pixel as a

260
00:09:07,470 --> 00:09:11,339
point and I say is this pixel something

261
00:09:10,078 --> 00:09:13,500
that I should light up for this scaled

262
00:09:11,339 --> 00:09:17,810
and rotated rectangle well what is that

263
00:09:13,500 --> 00:09:20,610
if not a point inside rotated and scaled

264
00:09:17,809 --> 00:09:22,768
rectangle test which is collision

265
00:09:20,610 --> 00:09:27,568
detection it's saying does this pixel

266
00:09:22,769 --> 00:09:30,929
hit this shape right and so really all

267
00:09:27,568 --> 00:09:32,759
we need to do is extend our collision

268
00:09:30,929 --> 00:09:34,469
detection understanding a little bit

269
00:09:32,759 --> 00:09:36,449
past where we did it and in fact if we

270
00:09:34,470 --> 00:09:38,899
had done the collision detection to

271
00:09:36,448 --> 00:09:40,799
handle rotation we would already know

272
00:09:38,899 --> 00:09:44,009
everything that we need to do but we

273
00:09:40,799 --> 00:09:45,149
have it yet and so you know we got a we

274
00:09:44,009 --> 00:09:46,259
got to start up this is the first time

275
00:09:45,149 --> 00:09:47,909
we'll be into it but we'll be able to go

276
00:09:46,259 --> 00:09:49,800
back to Architecture later and use this

277
00:09:47,909 --> 00:09:51,600
what we've learned here to make it

278
00:09:49,799 --> 00:09:55,198
better right okay

279
00:09:51,600 --> 00:09:57,209
so what I want to suggest to you is that

280
00:09:55,198 --> 00:10:00,088
let's suppose that I just want to know

281
00:09:57,208 --> 00:10:02,369
if a given pixel on the screen given by

282
00:10:00,089 --> 00:10:05,250
let's say it's center point if that

283
00:10:02,370 --> 00:10:08,250
center point falls within a rectangle

284
00:10:05,250 --> 00:10:11,490
and I'll make it easier for you at the

285
00:10:08,250 --> 00:10:14,009
moment I'll simply say well let's

286
00:10:11,490 --> 00:10:15,720
suppose temporarily that you don't even

287
00:10:14,009 --> 00:10:17,938
have to worry about rotation and scaling

288
00:10:15,720 --> 00:10:21,569
I'm letting you off the hook there all

289
00:10:17,938 --> 00:10:24,208
you have to do is for a rectangle that

290
00:10:21,568 --> 00:10:26,068
is aligned with the screen and here

291
00:10:24,208 --> 00:10:28,018
comes my you know pixels or whatever

292
00:10:26,068 --> 00:10:30,328
right there they are for a rectangle

293
00:10:28,019 --> 00:10:34,470
that's aligned with the screen tell me

294
00:10:30,328 --> 00:10:36,899
which of these are in and which are out

295
00:10:34,470 --> 00:10:39,089
right distinguish between these ones

296
00:10:36,899 --> 00:10:43,740
that overlap the shape right here is the

297
00:10:39,089 --> 00:10:45,389
shape and these ones that don't okay now

298
00:10:43,740 --> 00:10:46,980
I hope that after this long and

299
00:10:45,389 --> 00:10:49,169
hand-made here you would all be able to

300
00:10:46,980 --> 00:10:51,990
tell me the answer to that question what

301
00:10:49,169 --> 00:10:54,659
you would say to me is well okay if I

302
00:10:51,990 --> 00:10:57,120
have a minimum X right and I have a

303
00:10:54,659 --> 00:11:01,679
minimum I'm sorry in a maximum X right

304
00:10:57,120 --> 00:11:04,919
and I have a minimum Y and a maximum Y

305
00:11:01,679 --> 00:11:06,838
right like so and again I'm using this

306
00:11:04,919 --> 00:11:08,039
coordinate system for now but it doesn't

307
00:11:06,839 --> 00:11:11,579
matter whichever direction is

308
00:11:08,039 --> 00:11:14,069
doesn't matter if I have those minimums

309
00:11:11,578 --> 00:11:16,289
and maximums right you should be able to

310
00:11:14,070 --> 00:11:19,769
tell me for a given pixel if this is an

311
00:11:16,289 --> 00:11:22,588
x and a y right does that overlap or

312
00:11:19,769 --> 00:11:26,399
doesn't it right how would you do that

313
00:11:22,589 --> 00:11:29,310
test well I hope you would say something

314
00:11:26,399 --> 00:11:33,990
like alright if the X is greater than or

315
00:11:29,309 --> 00:11:36,149
equal to the X minimum right and right

316
00:11:33,990 --> 00:11:38,579
we'd say and and I'll guess I'll write

317
00:11:36,149 --> 00:11:41,220
it in the C++ version here right the X

318
00:11:38,578 --> 00:11:43,439
is less than the X maximum right and

319
00:11:41,220 --> 00:11:44,850
remember we did that sort of inclusion

320
00:11:43,440 --> 00:11:48,630
rule so that things that abut work

321
00:11:44,850 --> 00:11:49,980
properly right if it's greater than or

322
00:11:48,629 --> 00:11:52,169
equal to the minimum meaning it's on

323
00:11:49,980 --> 00:11:53,670
this side of the minimum and it is less

324
00:11:52,169 --> 00:11:56,849
than the maximum it's on that side of

325
00:11:53,669 --> 00:11:58,469
the maximum right then it's in for X and

326
00:11:56,850 --> 00:12:00,659
furthermore I could do the exact same

327
00:11:58,470 --> 00:12:04,319
thing of Y right it's greater than or

328
00:12:00,659 --> 00:12:09,179
equal to the minimum and right less than

329
00:12:04,318 --> 00:12:11,909
the maximum this complete test here

330
00:12:09,179 --> 00:12:14,159
would tell me if a pixel was inside or

331
00:12:11,909 --> 00:12:15,838
not right so for any given pixel I could

332
00:12:14,159 --> 00:12:17,399
just check is it greater than the

333
00:12:15,839 --> 00:12:19,980
minimum bound and less than the maximum

334
00:12:17,399 --> 00:12:22,409
bound for each of my two axes and then I

335
00:12:19,980 --> 00:12:24,028
would know hopefully that makes perfect

336
00:12:22,409 --> 00:12:25,198
sense hopefully that's something that

337
00:12:24,028 --> 00:12:26,429
should be relatively straightforward to

338
00:12:25,198 --> 00:12:29,458
you if you've been watching all of the

339
00:12:26,429 --> 00:12:30,269
episodes if you haven't well go back and

340
00:12:29,458 --> 00:12:32,969
watch them I guess

341
00:12:30,269 --> 00:12:37,679
very very simple stuff right very very

342
00:12:32,970 --> 00:12:38,670
simple so now the question is well you

343
00:12:37,679 --> 00:12:41,969
know what I'll take it one step further

344
00:12:38,669 --> 00:12:45,899
so I could write something that actually

345
00:12:41,970 --> 00:12:47,699
fills all you know these pixels for a

346
00:12:45,899 --> 00:12:50,100
rectangle that is not rotated and scaled

347
00:12:47,698 --> 00:12:53,278
right I could write something by just

348
00:12:50,100 --> 00:12:56,659
iterating over all pixels on the screen

349
00:12:53,278 --> 00:13:02,509
right all of them and doing this test

350
00:12:56,659 --> 00:13:02,509
right that would feel

351
00:13:02,539 --> 00:13:08,429
so you may say that's very inefficient

352
00:13:06,059 --> 00:13:10,049
well you're right it is inefficient

353
00:13:08,429 --> 00:13:12,088
because we'd be testing all the pixels

354
00:13:10,049 --> 00:13:13,708
even though we don't need to right but

355
00:13:12,089 --> 00:13:16,290
we could make it much more efficient by

356
00:13:13,708 --> 00:13:23,938
just doing all the pixels you know in

357
00:13:16,289 --> 00:13:25,559
some conservative bound right right we

358
00:13:23,938 --> 00:13:27,838
could say well we know that the

359
00:13:25,559 --> 00:13:29,429
rectangle is roughly in this region of

360
00:13:27,839 --> 00:13:31,230
the screen so we'll just iterate over

361
00:13:29,429 --> 00:13:33,299
those pixels and then our wastage would

362
00:13:31,230 --> 00:13:35,069
be very small right and furthermore

363
00:13:33,299 --> 00:13:37,169
because it's a aligned rectangle we

364
00:13:35,068 --> 00:13:39,269
could even go well okay we actually know

365
00:13:37,169 --> 00:13:41,219
exactly what pixels it fills so we'll

366
00:13:39,269 --> 00:13:42,899
just only iterate over those pixels and

367
00:13:41,220 --> 00:13:45,778
then this test would not be necessary

368
00:13:42,899 --> 00:13:47,938
right and that's the routine we actually

369
00:13:45,778 --> 00:13:51,750
wrote right that's the routine that we

370
00:13:47,938 --> 00:13:54,509
wrote before when we did draw rectangle

371
00:13:51,750 --> 00:13:57,149
what we did is we just we did all of

372
00:13:54,509 --> 00:13:59,068
that checking and decided to only loop

373
00:13:57,149 --> 00:14:01,019
over the pixels where we knew the test

374
00:13:59,068 --> 00:14:03,360
was already true but we didn't have to

375
00:14:01,019 --> 00:14:05,610
do that right if we couldn't have

376
00:14:03,360 --> 00:14:08,879
produced that minimal bound we could

377
00:14:05,610 --> 00:14:11,129
have just iterated over some wider set

378
00:14:08,879 --> 00:14:13,438
of pixels a little bit more than we

379
00:14:11,129 --> 00:14:15,778
needed to write or even the whole screen

380
00:14:13,438 --> 00:14:18,539
if we wanted to and inside this loop

381
00:14:15,778 --> 00:14:20,220
check to see whether x and y were inside

382
00:14:18,539 --> 00:14:22,860
and only colored the ones that we showed

383
00:14:20,220 --> 00:14:26,310
up right we could have done that and in

384
00:14:22,860 --> 00:14:28,620
fact let's do it mm-hmm let's just prove

385
00:14:26,309 --> 00:14:30,539
that that's true right I'm gonna take

386
00:14:28,620 --> 00:14:31,948
this thing this coordinate system call

387
00:14:30,539 --> 00:14:33,149
that we've got here and this is just

388
00:14:31,948 --> 00:14:34,289
gonna be our little plaything because

389
00:14:33,149 --> 00:14:36,629
since it's not something we actually

390
00:14:34,289 --> 00:14:38,969
ever need to use let's actually write a

391
00:14:36,629 --> 00:14:41,129
function that literally does draw a

392
00:14:38,970 --> 00:14:44,160
rectangle but it does draw a rectangle

393
00:14:41,129 --> 00:14:47,610
in the least efficient way possible okay

394
00:14:44,159 --> 00:14:50,100
so here's our draw rectangle we'll call

395
00:14:47,610 --> 00:14:53,068
it draw a rectangle slowly let's say

396
00:14:50,100 --> 00:14:55,439
here's our buffer here's our min and Max

397
00:14:53,068 --> 00:14:57,599
and here's our colors it takes the exact

398
00:14:55,438 --> 00:14:57,990
same parameters as the other one and off

399
00:14:57,600 --> 00:15:01,920
we go

400
00:14:57,990 --> 00:15:04,558
we start off with exactly the same loop

401
00:15:01,919 --> 00:15:06,838
and we say okay we're gonna start at the

402
00:15:04,558 --> 00:15:08,818
buffer memory and instead of advancing

403
00:15:06,839 --> 00:15:10,889
it to the min X in the mid why we're not

404
00:15:08,818 --> 00:15:13,769
gonna we're just gonna start right there

405
00:15:10,889 --> 00:15:15,299
and we're going to go through every last

406
00:15:13,769 --> 00:15:18,870
pixel

407
00:15:15,299 --> 00:15:21,899
on the screen makes sense so here we go

408
00:15:18,870 --> 00:15:23,339
we've got our our buffer we're gonna go

409
00:15:21,899 --> 00:15:24,570
I forget what these are actually called

410
00:15:23,339 --> 00:15:26,779
I think they're width and height oops

411
00:15:24,570 --> 00:15:31,769
that supposed to be height

412
00:15:26,778 --> 00:15:34,588
there's whip and so I'm not going to try

413
00:15:31,769 --> 00:15:39,089
at all to do anything smart here right

414
00:15:34,589 --> 00:15:41,070
I'm not going to try to to to call or

415
00:15:39,089 --> 00:15:44,250
anything I'm literally just gonna say in

416
00:15:41,070 --> 00:15:47,100
here for every pixel I'm gonna test to

417
00:15:44,250 --> 00:15:48,958
see whether it's inside or outside using

418
00:15:47,100 --> 00:15:52,350
exactly the thing I just ripped X should

419
00:15:48,958 --> 00:15:55,199
be greater than equal to my my minimum

420
00:15:52,350 --> 00:15:58,379
coordinate right and it should be less

421
00:15:55,200 --> 00:16:00,420
than my maximum coordinate on X and then

422
00:15:58,379 --> 00:16:04,078
the exact same thing should be true for

423
00:16:00,419 --> 00:16:07,528
my Y coordinates right my Y should also

424
00:16:04,078 --> 00:16:09,328
be in range if it is in range I will set

425
00:16:07,528 --> 00:16:13,980
the color of the pixel that we're on if

426
00:16:09,328 --> 00:16:16,588
it is not I will leave it alone okay so

427
00:16:13,980 --> 00:16:18,480
very very straightforward oops I've got

428
00:16:16,589 --> 00:16:21,480
it still build that color like doing

429
00:16:18,480 --> 00:16:25,320
this much down here so there we go

430
00:16:21,480 --> 00:16:27,959
and why not I'll make this a v4 since we

431
00:16:25,320 --> 00:16:30,720
previously we now have that capability

432
00:16:27,958 --> 00:16:34,759
I'll just go ahead and and put in that's

433
00:16:30,720 --> 00:16:34,759
this routines a little more modern right

434
00:16:35,720 --> 00:16:45,028
okay

435
00:16:38,009 --> 00:16:47,970
this will be our color 32 so that draws

436
00:16:45,028 --> 00:16:49,679
rectangles extremely slowly right and if

437
00:16:47,970 --> 00:16:51,480
I want to I can take that coordinate

438
00:16:49,679 --> 00:16:53,729
system thing that we did before right

439
00:16:51,480 --> 00:16:54,149
where we do the y axis and all that sort

440
00:16:53,730 --> 00:16:56,159
of stuff

441
00:16:54,149 --> 00:16:58,559
when we go to draw one of those instead

442
00:16:56,159 --> 00:16:59,338
of drawing the weird grid pattern stuff

443
00:16:58,559 --> 00:17:02,039
that we did there well you know what

444
00:16:59,339 --> 00:17:05,789
I'll still draw it right but instead

445
00:17:02,039 --> 00:17:09,659
what I'll do is I'll just draw a

446
00:17:05,789 --> 00:17:12,539
rectangle that's at that location and

447
00:17:09,660 --> 00:17:16,169
I'll use the X and the y axes to kind of

448
00:17:12,539 --> 00:17:17,938
to move out to to compute that Batman in

449
00:17:16,169 --> 00:17:20,100
the max right so what I'll say is we'll

450
00:17:17,939 --> 00:17:22,980
do draw a rectangle slowly we know what

451
00:17:20,099 --> 00:17:25,259
the color is we'll turn this off don't

452
00:17:22,980 --> 00:17:26,730
need that now we'll turn we'll turn that

453
00:17:25,259 --> 00:17:28,650
off so what we want to do is say okay

454
00:17:26,730 --> 00:17:30,329
we're gonna draw from the origin

455
00:17:28,650 --> 00:17:33,330
right and we're gonna draw from the

456
00:17:30,329 --> 00:17:36,509
origin to the that mid in the max right

457
00:17:33,329 --> 00:17:40,619
so we're gonna say entry origin plus

458
00:17:36,509 --> 00:17:44,789
entry x axis plus entry y axis and

459
00:17:40,619 --> 00:17:46,889
that's going to be our maximum okay and

460
00:17:44,789 --> 00:17:50,670
so we just need to pass it the output

461
00:17:46,890 --> 00:17:54,210
target we need to pass it the color and

462
00:17:50,670 --> 00:17:57,990
then we should be good to go and of

463
00:17:54,210 --> 00:17:59,490
course let me see I don't know if I

464
00:17:57,990 --> 00:18:06,420
forgot anything there or not let's see

465
00:17:59,490 --> 00:18:08,039
so aperture get entry origin I need to

466
00:18:06,420 --> 00:18:09,750
add the entry origin there we go because

467
00:18:08,039 --> 00:18:14,099
I need the minimum and the maximum so

468
00:18:09,750 --> 00:18:21,450
that should do it right so in theory I

469
00:18:14,099 --> 00:18:25,349
believe well there's one thing that we

470
00:18:21,450 --> 00:18:27,090
didn't quite do there so I got to stop

471
00:18:25,349 --> 00:18:28,980
it rotating first because when it

472
00:18:27,089 --> 00:18:30,389
rotates we're not actually taking the

473
00:18:28,980 --> 00:18:33,480
min and the max so I gotta make it so

474
00:18:30,390 --> 00:18:35,429
it's actually stable if that makes sense

475
00:18:33,480 --> 00:18:38,279
so I can't you got to make sure that our

476
00:18:35,429 --> 00:18:40,350
angle for at the moment is not gonna be

477
00:18:38,279 --> 00:18:44,339
anything it's just gonna stay stationary

478
00:18:40,349 --> 00:18:48,480
there we go and so I think that's too

479
00:18:44,339 --> 00:18:52,139
large so I feel like our axes where our

480
00:18:48,480 --> 00:18:55,529
axes getting scaled somehow here because

481
00:18:52,140 --> 00:18:57,120
it shouldn't be I maybe I've got a bug

482
00:18:55,529 --> 00:18:59,279
in my draw a rectangle slowly it should

483
00:18:57,119 --> 00:19:09,079
be only filling a smaller region than

484
00:18:59,279 --> 00:19:15,178
that if X is less than V Max X y la

485
00:19:09,079 --> 00:19:19,259
pixel equals Rho that looks correct to

486
00:19:15,179 --> 00:19:23,880
me V min X V min Y V Max X V max why the

487
00:19:19,259 --> 00:19:26,819
X's and the Y's look right there our

488
00:19:23,880 --> 00:19:32,150
axes should be pointing straight up and

489
00:19:26,819 --> 00:19:35,149
down so that should be fine as well so

490
00:19:32,150 --> 00:19:35,150
yeah

491
00:19:35,619 --> 00:19:40,959
not seeing why that's wrong hold on one

492
00:19:37,720 --> 00:19:42,130
second sorry it's important to get this

493
00:19:40,960 --> 00:19:44,650
part right because that way we won't

494
00:19:42,130 --> 00:19:47,050
have to deal with it in the end the

495
00:19:44,650 --> 00:19:49,330
other one there so if I add the x-axis I

496
00:19:47,049 --> 00:19:51,720
go over an X if I add the wax I go up

497
00:19:49,329 --> 00:19:54,699
that should have given us a valid

498
00:19:51,720 --> 00:19:56,200
minimum location there and in fact what

499
00:19:54,700 --> 00:19:57,880
I could do to I would like to do this

500
00:19:56,200 --> 00:20:03,100
just so we can see them I'm gonna draw

501
00:19:57,880 --> 00:20:08,020
these after the fact like this I'm gonna

502
00:20:03,099 --> 00:20:11,349
draw these in a in a different color so

503
00:20:08,019 --> 00:20:14,079
I'm gonna draw these in some kind of

504
00:20:11,349 --> 00:20:16,569
color that's it's a little bit easier

505
00:20:14,079 --> 00:20:17,649
for us to distinguish from the one that

506
00:20:16,569 --> 00:20:21,869
the other things drawing in so we're

507
00:20:17,650 --> 00:20:21,870
just going to go ahead and do this so I

508
00:20:22,769 --> 00:20:34,179
want to be able to see those points on

509
00:20:26,109 --> 00:20:36,759
top of the rectangle there we go okay so

510
00:20:34,179 --> 00:20:38,710
that is where we are in pixel space and

511
00:20:36,759 --> 00:20:40,900
for some reason our rectangle is not

512
00:20:38,710 --> 00:20:42,789
properly clipping to its max bounds of

513
00:20:40,900 --> 00:20:45,700
course I don't actually know for sure

514
00:20:42,789 --> 00:20:48,549
that the max is where the max says it is

515
00:20:45,700 --> 00:20:50,319
so I do also want to just quickly make

516
00:20:48,549 --> 00:20:52,690
sure that I've got that so I'm gonna do

517
00:20:50,319 --> 00:20:58,149
a thing here where we just draw that max

518
00:20:52,690 --> 00:21:00,070
in that max location like so the max I

519
00:20:58,150 --> 00:21:03,640
guess so I'm gonna compute that by

520
00:21:00,069 --> 00:21:05,049
saying V Max here it is so that way I

521
00:21:03,640 --> 00:21:08,050
can see where it is and make sure that

522
00:21:05,049 --> 00:21:10,058
it's not an incorrect value yeah so it's

523
00:21:08,049 --> 00:21:14,549
not my V Max computation is somehow

524
00:21:10,058 --> 00:21:17,980
incorrect oh because I added it twice

525
00:21:14,549 --> 00:21:18,909
why it's a typo dated it there it is all

526
00:21:17,980 --> 00:21:20,289
right that should have worked the first

527
00:21:18,910 --> 00:21:23,259
time but we were passing the wrong

528
00:21:20,289 --> 00:21:25,808
parameter so yeah all right it's a typo

529
00:21:23,259 --> 00:21:28,150
day what can I say all right so back to

530
00:21:25,808 --> 00:21:30,670
the point at hand now that we actually

531
00:21:28,150 --> 00:21:32,380
have this you can notice that this fills

532
00:21:30,670 --> 00:21:35,800
the rectangle correctly right we have

533
00:21:32,380 --> 00:21:38,020
the rectangle there and we you know

534
00:21:35,799 --> 00:21:39,460
we're not doing it an efficient way cuz

535
00:21:38,019 --> 00:21:41,440
we're filling the entire screen but it's

536
00:21:39,460 --> 00:21:43,660
okay in terms of correctness right we're

537
00:21:41,440 --> 00:21:45,789
filling the rectangle that we want to

538
00:21:43,660 --> 00:21:47,650
fill by just doing a pass over the

539
00:21:45,789 --> 00:21:49,240
entire screen and you can see draw a

540
00:21:47,650 --> 00:21:51,400
rectangle slowly here

541
00:21:49,240 --> 00:21:54,579
it checks every pixel and just sees

542
00:21:51,400 --> 00:21:58,540
which of them are inside right which of

543
00:21:54,579 --> 00:22:01,419
those are inside the the pixel right and

544
00:21:58,539 --> 00:22:04,450
so what I could do again like I said is

545
00:22:01,420 --> 00:22:08,110
I could say you know what I'm going to

546
00:22:04,450 --> 00:22:10,840
restrict the area that you march over to

547
00:22:08,109 --> 00:22:12,729
something smaller than that right and

548
00:22:10,839 --> 00:22:14,169
then we would just restrict these to

549
00:22:12,730 --> 00:22:15,759
something smaller and we would only test

550
00:22:14,170 --> 00:22:17,140
a fewer number of pixels we could go all

551
00:22:15,759 --> 00:22:18,460
the way to only testing the ones that we

552
00:22:17,140 --> 00:22:21,700
need to test which means you don't test

553
00:22:18,460 --> 00:22:24,700
at all but same deal right all right so

554
00:22:21,700 --> 00:22:26,500
that's all good and so you may ask all

555
00:22:24,700 --> 00:22:28,569
right how does that help us do our

556
00:22:26,500 --> 00:22:30,339
rotation and scaling right how does that

557
00:22:28,569 --> 00:22:31,419
help at all we're basically just back

558
00:22:30,339 --> 00:22:35,279
where we started only were much slower

559
00:22:31,420 --> 00:22:39,000
well the answer is these right here

560
00:22:35,279 --> 00:22:41,670
think about what these are doing okay

561
00:22:39,000 --> 00:22:45,220
what are these ands what are we actually

562
00:22:41,670 --> 00:22:47,830
computing what we're saying is for any

563
00:22:45,220 --> 00:22:51,130
given pixel on the screen we are making

564
00:22:47,829 --> 00:22:54,429
sure that the result of a series of four

565
00:22:51,130 --> 00:22:57,040
edge tests all comes back stating that

566
00:22:54,430 --> 00:23:00,250
we were on the inside of whatever that

567
00:22:57,039 --> 00:23:02,680
edges right we are first testing its

568
00:23:00,250 --> 00:23:04,180
x-men and saying we want to make sure

569
00:23:02,680 --> 00:23:06,910
that we are on this side of that edge

570
00:23:04,180 --> 00:23:09,009
right or on it that's the case maybe for

571
00:23:06,910 --> 00:23:10,420
X max we're saying the same thing we

572
00:23:09,009 --> 00:23:13,660
want to make sure that we're on this

573
00:23:10,420 --> 00:23:15,970
side of that edge right same with y-min

574
00:23:13,660 --> 00:23:20,019
and y-max right same with y-min and

575
00:23:15,970 --> 00:23:23,230
y-max so the question is now well if we

576
00:23:20,019 --> 00:23:25,059
wanted to rotate this couldn't we just

577
00:23:23,230 --> 00:23:28,360
do the same thing right

578
00:23:25,059 --> 00:23:30,519
can't we just test against four corners

579
00:23:28,359 --> 00:23:32,469
of our rectangle and if they all come

580
00:23:30,519 --> 00:23:34,960
back true we know we're inside the

581
00:23:32,470 --> 00:23:36,819
answer is absolutely we can so instead

582
00:23:34,960 --> 00:23:38,769
of thinking about it this way let's just

583
00:23:36,819 --> 00:23:43,059
change this to a slightly different

584
00:23:38,769 --> 00:23:46,809
format let's say is inside right or abet

585
00:23:43,059 --> 00:23:50,259
better yet let's just say edge test

586
00:23:46,809 --> 00:23:51,700
right you know and we'll take that first

587
00:23:50,259 --> 00:23:53,559
one right so we'll you know we'll take

588
00:23:51,700 --> 00:23:56,200
whatever this is this is 0 this is 1

589
00:23:53,559 --> 00:23:58,480
this is 2 this is 3 we have you know 4

590
00:23:56,200 --> 00:24:02,080
edges to test against right edge test 0

591
00:23:58,480 --> 00:24:02,799
we want edge test zero to come out true

592
00:24:02,079 --> 00:24:06,519
we

593
00:24:02,799 --> 00:24:09,759
edge test right one to come out true we

594
00:24:06,519 --> 00:24:11,789
want edge test two to come out true and

595
00:24:09,759 --> 00:24:15,009
we want edge test three to come out true

596
00:24:11,789 --> 00:24:16,750
right we want all the edge tests to come

597
00:24:15,009 --> 00:24:20,619
out true and if they all come out true

598
00:24:16,750 --> 00:24:22,960
we assume that we are inside ok so all

599
00:24:20,619 --> 00:24:25,869
we would need to fill a rotated and

600
00:24:22,960 --> 00:24:30,160
scaled one is some way of producing an

601
00:24:25,869 --> 00:24:32,049
edge test for our rotated and scaled our

602
00:24:30,160 --> 00:24:36,340
rotated and scaled rectangle now before

603
00:24:32,049 --> 00:24:37,889
we get to any fancy this year I'm gonna

604
00:24:36,339 --> 00:24:41,409
show you how you could have done that

605
00:24:37,890 --> 00:24:43,360
without my help if you have watched all

606
00:24:41,410 --> 00:24:46,480
of handmade hero you already know the

607
00:24:43,359 --> 00:24:49,750
answer to this question okay let's make

608
00:24:46,480 --> 00:24:53,319
the construction here is that basis of

609
00:24:49,750 --> 00:24:55,210
our rectangle here is the one of the

610
00:24:53,319 --> 00:24:58,029
points right here is another one of the

611
00:24:55,210 --> 00:25:02,170
points and here is the final point okay

612
00:24:58,029 --> 00:25:04,480
right so I want to test against these

613
00:25:02,170 --> 00:25:05,710
four edges well I only need to make code

614
00:25:04,480 --> 00:25:07,150
that test against one edge and then I

615
00:25:05,710 --> 00:25:08,410
can call it four times right so we're

616
00:25:07,150 --> 00:25:11,200
only looking at one problem here and

617
00:25:08,410 --> 00:25:13,720
that problem is given one edge let's say

618
00:25:11,200 --> 00:25:16,900
this edge right here right so I've got

619
00:25:13,720 --> 00:25:19,720
p0 and p1 right or I could think of it

620
00:25:16,900 --> 00:25:20,769
as having the actual edge there in fact

621
00:25:19,720 --> 00:25:23,230
maybe we do that

622
00:25:20,769 --> 00:25:26,829
I've got p0 and in this case this was my

623
00:25:23,230 --> 00:25:30,039
x-axis right I'm sorry that would be the

624
00:25:26,829 --> 00:25:32,349
y-axis what am I so I seem to do that a

625
00:25:30,039 --> 00:25:34,960
lot here I mix up the excess of the Y's

626
00:25:32,349 --> 00:25:37,269
all right so this is that origin right

627
00:25:34,960 --> 00:25:40,120
this is the origin and this is the

628
00:25:37,269 --> 00:25:42,670
x-axis right and I want to test to see

629
00:25:40,119 --> 00:25:43,469
whether on this side of it how would I

630
00:25:42,670 --> 00:25:46,720
do that

631
00:25:43,470 --> 00:25:50,110
so I told you already about the

632
00:25:46,720 --> 00:25:52,150
perpendicular operator right so it would

633
00:25:50,109 --> 00:25:53,889
be free for me if I wanted to for

634
00:25:52,150 --> 00:25:57,940
example to produce a vector

635
00:25:53,890 --> 00:25:59,350
perpendicular to the x-axis now it turns

636
00:25:57,940 --> 00:26:00,670
out that I don't even really need to do

637
00:25:59,349 --> 00:26:02,799
that right because we know that the y

638
00:26:00,670 --> 00:26:05,980
axis is perpendicular to the x axis

639
00:26:02,799 --> 00:26:08,019
correct so we know that this vector here

640
00:26:05,980 --> 00:26:09,910
are perpendicular to the x axis we know

641
00:26:08,019 --> 00:26:12,629
that that's just the y axis we already

642
00:26:09,910 --> 00:26:16,600
had it right very very straightforward

643
00:26:12,630 --> 00:26:18,700
so if I wanted to know if a point

644
00:26:16,599 --> 00:26:22,859
somewhere in the world was on this side

645
00:26:18,700 --> 00:26:22,860
of it how would I do that

646
00:26:24,869 --> 00:26:33,579
anyway now remember we've already done

647
00:26:31,380 --> 00:26:35,050
everything you would need to be able to

648
00:26:33,579 --> 00:26:37,990
do this to answer this question we've

649
00:26:35,049 --> 00:26:43,149
done it on handmade hero so the answer

650
00:26:37,990 --> 00:26:48,910
is the dot product right the dot product

651
00:26:43,150 --> 00:26:50,980
the inner product we covered it that is

652
00:26:48,910 --> 00:26:51,580
the all that we would really need to do

653
00:26:50,980 --> 00:26:54,309
this right

654
00:26:51,579 --> 00:26:56,679
because if we have this vector right if

655
00:26:54,309 --> 00:26:58,990
we could take P and subtract the origin

656
00:26:56,680 --> 00:27:01,810
from it we end up in the exact classic

657
00:26:58,990 --> 00:27:04,029
dot product scenario we have a base we

658
00:27:01,809 --> 00:27:06,190
have two vectors we have the one that

659
00:27:04,029 --> 00:27:08,710
goes to P and then we have the edge that

660
00:27:06,190 --> 00:27:10,900
we're testing against right we have its

661
00:27:08,710 --> 00:27:14,500
perpendicular which is the perpendicular

662
00:27:10,900 --> 00:27:16,740
to the edge right here all we need to

663
00:27:14,500 --> 00:27:20,349
know if we want to know which side of

664
00:27:16,740 --> 00:27:22,299
this edge P is on is take its

665
00:27:20,349 --> 00:27:25,539
perpendicular and do the dot product if

666
00:27:22,299 --> 00:27:27,549
that dot product again that map's P onto

667
00:27:25,539 --> 00:27:29,950
here it tells us how far along this we

668
00:27:27,549 --> 00:27:31,839
would go if that dot product is positive

669
00:27:29,950 --> 00:27:33,940
we know that we were on this side of the

670
00:27:31,839 --> 00:27:37,209
edge if it is negative we know that P

671
00:27:33,940 --> 00:27:39,070
was over here so the sign of that dot

672
00:27:37,210 --> 00:27:42,279
product will tell us which side of the

673
00:27:39,069 --> 00:27:44,589
edge we are on and it's trivial for us

674
00:27:42,279 --> 00:27:49,389
to compute it's just inner product right

675
00:27:44,589 --> 00:27:52,230
of P minus the origin it's just the

676
00:27:49,390 --> 00:27:55,000
inner product of that with our

677
00:27:52,230 --> 00:27:56,740
perpendicular right in our perpendicular

678
00:27:55,000 --> 00:27:57,880
in this case we already know it is we

679
00:27:56,740 --> 00:27:59,230
don't ever have to compute them if it's

680
00:27:57,880 --> 00:28:00,610
the if we're testing against this x-axis

681
00:27:59,230 --> 00:28:03,339
we know that it's gonna be the y-axis

682
00:28:00,609 --> 00:28:04,419
we're testing against this upper limit

683
00:28:03,339 --> 00:28:08,199
to the x-axis we know it's the negative

684
00:28:04,420 --> 00:28:10,600
y-axis right so on and so forth so it's

685
00:28:08,200 --> 00:28:12,279
really really simple this is the entire

686
00:28:10,599 --> 00:28:13,539
edge test that we would need that's the

687
00:28:12,279 --> 00:28:15,609
only thing we would need to do to

688
00:28:13,539 --> 00:28:17,859
determine whether or not a pixel was in

689
00:28:15,609 --> 00:28:20,259
we just do that four times we do that

690
00:28:17,859 --> 00:28:21,490
four times and we're done right and all

691
00:28:20,259 --> 00:28:22,480
we need to do is check the sign of it we

692
00:28:21,490 --> 00:28:23,589
don't even need to know what its

693
00:28:22,480 --> 00:28:25,630
magnitude is we don't need to compute

694
00:28:23,589 --> 00:28:28,539
anything other than was it going to be

695
00:28:25,630 --> 00:28:29,720
positive or negative and we just want to

696
00:28:28,539 --> 00:28:32,028
see if it's positive that's

697
00:28:29,720 --> 00:28:33,649
so the edge test is just is it greater

698
00:28:32,028 --> 00:28:36,500
than zero and we could flip it we can

699
00:28:33,648 --> 00:28:37,729
choose which way we want we can we can

700
00:28:36,500 --> 00:28:40,099
choose whether we want these normals to

701
00:28:37,730 --> 00:28:41,750
point in or out right we can choose

702
00:28:40,099 --> 00:28:43,250
whether which way we want to frame it

703
00:28:41,750 --> 00:28:45,679
right because we could speak instead use

704
00:28:43,250 --> 00:28:47,269
the negative y-axis there right we could

705
00:28:45,679 --> 00:28:49,759
do we can do whatever you want there so

706
00:28:47,269 --> 00:28:51,470
let's just implement one of these as an

707
00:28:49,759 --> 00:28:57,849
example right let's just implement one

708
00:28:51,470 --> 00:29:00,710
of these okay so here we go let's

709
00:28:57,849 --> 00:29:02,599
suppose that I start this rotating again

710
00:29:00,710 --> 00:29:05,120
right it's not rotating right now

711
00:29:02,599 --> 00:29:07,250
I started rotating again and now we got

712
00:29:05,119 --> 00:29:08,898
a situation that's kind of nasty which

713
00:29:07,250 --> 00:29:11,778
is basically that we only actually are

714
00:29:08,898 --> 00:29:14,178
able to fill our rectangle you know in

715
00:29:11,778 --> 00:29:16,548
this kind of lame way right because it's

716
00:29:14,179 --> 00:29:17,960
really just filling it to whatever this

717
00:29:16,548 --> 00:29:19,730
point is here it's trying to fill a

718
00:29:17,960 --> 00:29:21,409
rectangle between these two points so

719
00:29:19,730 --> 00:29:23,599
when this point is in the positive

720
00:29:21,409 --> 00:29:25,070
direction it works and at other times it

721
00:29:23,599 --> 00:29:27,469
doesn't because our edge tests all fail

722
00:29:25,069 --> 00:29:29,148
right so all we need to do now is change

723
00:29:27,470 --> 00:29:31,190
from those bad edge tests that were just

724
00:29:29,148 --> 00:29:33,229
totally for rectilinear ones all we need

725
00:29:31,190 --> 00:29:34,879
to do is change it to using edge tests

726
00:29:33,230 --> 00:29:37,159
that are actually based on the four

727
00:29:34,878 --> 00:29:38,689
points that we actually have right and

728
00:29:37,159 --> 00:29:40,009
we could do them for arbitrary for four

729
00:29:38,690 --> 00:29:41,058
points actually if you want to but I'm

730
00:29:40,009 --> 00:29:42,079
gonna do them for the rectilinear ones

731
00:29:41,058 --> 00:29:43,480
because that's all we actually care

732
00:29:42,079 --> 00:29:45,740
about since we're not gonna be filling

733
00:29:43,480 --> 00:29:47,538
arbitrary shapes and hammer here we just

734
00:29:45,740 --> 00:29:49,878
need to blitt you know rectilinear

735
00:29:47,538 --> 00:29:51,950
bitmaps all right so how do we do that

736
00:29:49,878 --> 00:29:55,759
off we go let's go back to our draw

737
00:29:51,950 --> 00:29:57,139
rectangle slowly so here is our V min so

738
00:29:55,759 --> 00:29:59,120
what we want to do now is change this

739
00:29:57,138 --> 00:30:01,788
draw rectangle slowly to actually take

740
00:29:59,119 --> 00:30:04,518
maybe all the things right so we've got

741
00:30:01,788 --> 00:30:07,369
our origin we've got our x-axis we've

742
00:30:04,519 --> 00:30:09,679
got our y-axis right and now we want to

743
00:30:07,369 --> 00:30:11,719
go ahead and fill that now we could just

744
00:30:09,679 --> 00:30:13,580
quickly verify that that stuff's getting

745
00:30:11,720 --> 00:30:15,500
passed correctly if we wanted to we

746
00:30:13,579 --> 00:30:17,269
could go ahead and say that we're going

747
00:30:15,500 --> 00:30:19,038
to compute V min from these right

748
00:30:17,269 --> 00:30:21,829
there's our V min there's our V Max

749
00:30:19,038 --> 00:30:24,138
origin plus x axis plus y axis like so

750
00:30:21,829 --> 00:30:27,278
like that and then we go down to draw a

751
00:30:24,138 --> 00:30:32,959
rectangle slowly oops

752
00:30:27,278 --> 00:30:35,148
rectangle slowly rectangle slowly and

753
00:30:32,960 --> 00:30:39,110
instead here when we pass that we will

754
00:30:35,148 --> 00:30:41,689
actually pass entry x axis entry y axis

755
00:30:39,109 --> 00:30:43,000
right and then that color and now we

756
00:30:41,690 --> 00:30:46,200
should see in fear

757
00:30:43,000 --> 00:30:48,819
exactly the same thing happen right

758
00:30:46,200 --> 00:30:50,440
meaning can't feel anything until that

759
00:30:48,819 --> 00:30:52,240
comes down to the positive they could

760
00:30:50,440 --> 00:30:55,269
fill and then it goes away all right

761
00:30:52,240 --> 00:30:57,670
exactly what we would expected so back

762
00:30:55,269 --> 00:30:59,680
up to draw a rectangle slowly here we go

763
00:30:57,670 --> 00:31:02,320
when we are drawing the rectangle slowly

764
00:30:59,680 --> 00:31:05,860
we now need to say let's test these

765
00:31:02,319 --> 00:31:07,659
edges as they actually were using the

766
00:31:05,859 --> 00:31:10,359
edge test that I just described all

767
00:31:07,660 --> 00:31:12,759
right so first off we need to test you

768
00:31:10,359 --> 00:31:14,589
know we need to test each of them and so

769
00:31:12,759 --> 00:31:16,660
I'm just going to actually record here

770
00:31:14,589 --> 00:31:18,939
what the edge functions were so they can

771
00:31:16,660 --> 00:31:20,529
see it in a little more detail right so

772
00:31:18,940 --> 00:31:24,460
I'm gonna do an edge zero

773
00:31:20,529 --> 00:31:27,819
you know edge one edge two right edge

774
00:31:24,460 --> 00:31:29,529
three like so and then like I said all

775
00:31:27,819 --> 00:31:31,990
we need to do is test that all of the

776
00:31:29,529 --> 00:31:34,230
edges are actually in and so what I

777
00:31:31,990 --> 00:31:37,809
could do here is I could I could

778
00:31:34,230 --> 00:31:41,170
actually sort of do a version of this

779
00:31:37,809 --> 00:31:43,149
right I could do I could do the version

780
00:31:41,170 --> 00:31:44,620
of this that is the same as what we're

781
00:31:43,150 --> 00:31:46,000
doing now because if you think about it

782
00:31:44,619 --> 00:31:48,789
these are sort of like dot products

783
00:31:46,000 --> 00:31:50,980
right this is like saying well I'm just

784
00:31:48,789 --> 00:31:53,049
taking the x Gordon don't need to dot it

785
00:31:50,980 --> 00:31:55,180
with the x-axis because I'm with the

786
00:31:53,049 --> 00:31:56,980
with the the X X because I already have

787
00:31:55,180 --> 00:31:59,560
it right I already have what its value

788
00:31:56,980 --> 00:32:01,839
is so I'm just testing it against the

789
00:31:59,559 --> 00:32:04,269
min right I could phrase that

790
00:32:01,839 --> 00:32:08,079
differently by saying I just want to

791
00:32:04,269 --> 00:32:10,569
know if the X minus the X men right is

792
00:32:08,079 --> 00:32:11,649
positive right that's like doing that

793
00:32:10,569 --> 00:32:14,439
sort of rebasing

794
00:32:11,650 --> 00:32:15,820
putting it around I'll be I'll be a

795
00:32:14,440 --> 00:32:18,610
hundred percent explicit here just so

796
00:32:15,819 --> 00:32:20,529
you can see what I'm saying right we can

797
00:32:18,609 --> 00:32:22,569
rephrase these edge tests even in the

798
00:32:20,529 --> 00:32:25,359
rectilinear case to be much closer than

799
00:32:22,569 --> 00:32:29,349
to what we expect by saying ok before we

800
00:32:25,359 --> 00:32:31,419
had an X min right and we had an X right

801
00:32:29,349 --> 00:32:33,039
and we wanted to know well was it on

802
00:32:31,420 --> 00:32:34,690
this side so what we're doing is we were

803
00:32:33,039 --> 00:32:37,539
just writing the test explicitly we were

804
00:32:34,690 --> 00:32:39,610
saying we want X to be greater than or

805
00:32:37,539 --> 00:32:41,649
equal to X men but that is the same

806
00:32:39,609 --> 00:32:43,689
thing as actually doing the dot product

807
00:32:41,650 --> 00:32:46,330
effectively right it's the same thing as

808
00:32:43,690 --> 00:32:49,000
saying all right take X and subtract X

809
00:32:46,329 --> 00:32:51,009
min from it you will now get a positive

810
00:32:49,000 --> 00:32:53,950
or a negative value that tells us which

811
00:32:51,009 --> 00:32:55,539
side we are on right and then we can

812
00:32:53,950 --> 00:32:56,130
test to see whether it's greater than or

813
00:32:55,539 --> 00:32:58,288
equal to

814
00:32:56,130 --> 00:32:59,490
right so we could have phrased it the

815
00:32:58,288 --> 00:33:02,160
other way we just didn't because it was

816
00:32:59,490 --> 00:33:03,929
so simple we didn't need to so we can

817
00:33:02,160 --> 00:33:06,058
turn it around in a slightly different

818
00:33:03,929 --> 00:33:07,110
way we could we could do it this way and

819
00:33:06,058 --> 00:33:12,359
say all right

820
00:33:07,109 --> 00:33:15,959
we want X minus V men then we want X

821
00:33:12,359 --> 00:33:19,819
minus V Max dot X we want that to be

822
00:33:15,960 --> 00:33:25,230
less than zero we want Y minus V men

823
00:33:19,819 --> 00:33:31,349
sees in there we want Y minus V men to

824
00:33:25,230 --> 00:33:41,069
be greater than zero and we want Y minus

825
00:33:31,349 --> 00:33:43,259
y max to be less than zero right again

826
00:33:41,069 --> 00:33:45,418
same exact thing happening all I've done

827
00:33:43,259 --> 00:33:48,960
here is just change those into stuff

828
00:33:45,419 --> 00:33:51,000
that looks right like this I did the P

829
00:33:48,960 --> 00:33:52,350
minus origin and then I did the dot

830
00:33:51,000 --> 00:33:53,819
product with the perpendicular doesn't

831
00:33:52,349 --> 00:33:56,519
need to happen because they're already

832
00:33:53,819 --> 00:33:58,349
in the perpendicular coordinates right x

833
00:33:56,519 --> 00:33:59,700
and y we're not rotated at all so we

834
00:33:58,349 --> 00:34:01,649
don't actually need to do this part but

835
00:33:59,700 --> 00:34:03,870
this part we had to do right so that's

836
00:34:01,650 --> 00:34:05,580
all I did right here I did it now what

837
00:34:03,869 --> 00:34:07,798
you'll notice as well is because we're

838
00:34:05,579 --> 00:34:10,349
not doing the dot product the sign

839
00:34:07,798 --> 00:34:11,699
doesn't flip right and so that's why

840
00:34:10,349 --> 00:34:13,648
these are different comparisons here

841
00:34:11,699 --> 00:34:16,710
right what would normally be happening

842
00:34:13,648 --> 00:34:17,699
is we'd be testing against normals that

843
00:34:16,710 --> 00:34:19,889
we're in different directions right

844
00:34:17,699 --> 00:34:20,878
those perpendiculars would be pointing

845
00:34:19,889 --> 00:34:22,800
in different directions so we could

846
00:34:20,878 --> 00:34:25,168
always test greater than or less than

847
00:34:22,800 --> 00:34:27,179
right but we're not doing anyone here so

848
00:34:25,168 --> 00:34:27,750
it doesn't actually reverse it if that

849
00:34:27,179 --> 00:34:28,889
makes sense

850
00:34:27,750 --> 00:34:30,449
so that's why we have to do the

851
00:34:28,889 --> 00:34:33,090
different ones there but we can easily

852
00:34:30,449 --> 00:34:34,918
go ahead and sort of fool that right

853
00:34:33,090 --> 00:34:36,840
what we can do is say all right let's

854
00:34:34,918 --> 00:34:38,730
suppose we want to make greater than B

855
00:34:36,840 --> 00:34:39,899
our standard so everything's always

856
00:34:38,730 --> 00:34:45,559
going to be greater than greater than

857
00:34:39,898 --> 00:34:45,559
greater than greater than right like so

858
00:34:47,269 --> 00:34:55,739
so I want to change all these so if I do

859
00:34:50,128 --> 00:34:57,868
edge 0 H 1 H 2 X 3 I want them all to

860
00:34:55,739 --> 00:34:59,879
just be using the same comparison right

861
00:34:57,869 --> 00:35:01,740
I want them all to be using like that

862
00:34:59,880 --> 00:35:03,690
comparison let's say or something right

863
00:35:01,739 --> 00:35:05,129
so they're greater than and maybe you

864
00:35:03,690 --> 00:35:06,599
know what it probably makes more sense

865
00:35:05,130 --> 00:35:08,338
to think of these as pointing outwards

866
00:35:06,599 --> 00:35:09,900
you know because that's the way you

867
00:35:08,338 --> 00:35:11,460
normally think of surface

868
00:35:09,900 --> 00:35:12,570
most pointing we'll get to that sort of

869
00:35:11,460 --> 00:35:14,429
stuff a little bit later but let's make

870
00:35:12,570 --> 00:35:16,350
them point outwards so let's say that we

871
00:35:14,429 --> 00:35:17,849
want positive means you're outside the

872
00:35:16,349 --> 00:35:19,079
shape negative means are inside the

873
00:35:17,849 --> 00:35:21,719
shape let's just use that as our

874
00:35:19,079 --> 00:35:23,759
convention right so I want all of my

875
00:35:21,719 --> 00:35:26,250
edge functions to actually be negative I

876
00:35:23,760 --> 00:35:27,780
want them all to be negative and so in

877
00:35:26,250 --> 00:35:29,639
order to do that I have to reverse the

878
00:35:27,780 --> 00:35:31,620
sense of some of these right every other

879
00:35:29,639 --> 00:35:32,969
one that the edge one and the edge three

880
00:35:31,619 --> 00:35:34,589
are going to be wrong because they were

881
00:35:32,969 --> 00:35:36,899
based or you know they're going to be

882
00:35:34,590 --> 00:35:40,410
the opposite of the other two right so

883
00:35:36,900 --> 00:35:42,990
in this case X minus X min X I want that

884
00:35:40,409 --> 00:35:44,909
to actually be a reverse test because

885
00:35:42,989 --> 00:35:46,769
before that was giving me a positive

886
00:35:44,909 --> 00:35:48,569
answer on one side of X a negative

887
00:35:46,769 --> 00:35:51,509
answer on the wrong side right and so I

888
00:35:48,570 --> 00:35:53,610
need to flip the sense of that so again

889
00:35:51,510 --> 00:35:56,490
it's just a simple negation I just flip

890
00:35:53,610 --> 00:35:58,320
it same thing true of 'man Y right and

891
00:35:56,489 --> 00:35:59,759
the other ones were already producing

892
00:35:58,320 --> 00:36:01,200
negative values when they were on the

893
00:35:59,760 --> 00:36:05,040
correct side of the edge so those are

894
00:36:01,199 --> 00:36:06,329
just fine right and so this gives us

895
00:36:05,039 --> 00:36:08,519
again the exact same results as we had

896
00:36:06,329 --> 00:36:11,210
before but we're one step closer we're

897
00:36:08,519 --> 00:36:14,130
one step closer right so there we go

898
00:36:11,210 --> 00:36:16,470
we're super close all we have to do now

899
00:36:14,130 --> 00:36:18,150
is is lever up one more time and

900
00:36:16,469 --> 00:36:20,219
actually get the dot product in there

901
00:36:18,150 --> 00:36:22,260
right because remember I said we want

902
00:36:20,219 --> 00:36:25,489
inner product right we've got our inner

903
00:36:22,260 --> 00:36:28,470
product we want to do our inner product

904
00:36:25,489 --> 00:36:30,869
after doing the rebasing okay so let's

905
00:36:28,469 --> 00:36:34,559
do that so here's our forage and

906
00:36:30,869 --> 00:36:36,599
subtraction right reversing it back to

907
00:36:34,559 --> 00:36:40,049
the same way it was and now we just have

908
00:36:36,599 --> 00:36:42,000
to make synthetic edge values right

909
00:36:40,050 --> 00:36:48,060
things that point in those directions

910
00:36:42,000 --> 00:36:50,849
okay so we've got our V min right that's

911
00:36:48,059 --> 00:36:52,469
here's our here's our X min right so the

912
00:36:50,849 --> 00:36:54,509
edge that we want we said we want

913
00:36:52,469 --> 00:36:55,859
pointing outwards right so I'll clear

914
00:36:54,510 --> 00:36:56,400
the diagram so we can be completely

915
00:36:55,860 --> 00:36:58,200
clean

916
00:36:56,400 --> 00:37:00,900
we want our edges are perpendicular

917
00:36:58,199 --> 00:37:03,480
pointing outwards right so here we are

918
00:37:00,900 --> 00:37:05,639
in the minimum what is that vector right

919
00:37:03,480 --> 00:37:09,090
well that vector is pretty simple it's

920
00:37:05,639 --> 00:37:11,219
just negative one zero correct pretty

921
00:37:09,090 --> 00:37:14,460
simple the one for the for the x max is

922
00:37:11,219 --> 00:37:15,839
just one zero right same thing here

923
00:37:14,460 --> 00:37:16,500
right we've just got this as negative

924
00:37:15,840 --> 00:37:19,440
one zero

925
00:37:16,500 --> 00:37:21,599
oops this is zero negative 1 and this is

926
00:37:19,440 --> 00:37:23,579
0 1 right so are we

927
00:37:21,599 --> 00:37:26,219
it's totally trivial what those those

928
00:37:23,579 --> 00:37:27,779
Edge's actually are we are perpendicular

929
00:37:26,219 --> 00:37:30,119
actually are we could just read them

930
00:37:27,780 --> 00:37:33,000
straight off the diagram okay so at zero

931
00:37:30,119 --> 00:37:35,849
again I said was negative one zero the

932
00:37:33,000 --> 00:37:39,750
the max version was one zero right

933
00:37:35,849 --> 00:37:43,909
again minimum here for Y and maximum for

934
00:37:39,750 --> 00:37:43,909
Y okay oops

935
00:37:44,599 --> 00:37:50,489
and of course in this particular case we

936
00:37:48,659 --> 00:37:52,679
have the we have the the problem that

937
00:37:50,489 --> 00:37:54,379
the inner is going to do the full dot

938
00:37:52,679 --> 00:37:59,009
product so I really need to do

939
00:37:54,380 --> 00:38:01,980
essentially like okay I've got my pixel

940
00:37:59,010 --> 00:38:04,860
P right and it's the XY coordinate of

941
00:38:01,980 --> 00:38:08,820
that pixel right and I need to then say

942
00:38:04,860 --> 00:38:11,250
okay it's it's technically it's time

943
00:38:08,820 --> 00:38:14,850
they're going to be the pixel P minus

944
00:38:11,250 --> 00:38:18,420
you know the vmon pixel P minus the V

945
00:38:14,849 --> 00:38:21,539
Max to do that full sort of vector

946
00:38:18,420 --> 00:38:23,430
subtraction right the pixel P minus the

947
00:38:21,539 --> 00:38:25,170
DMX so again they're just producing one

948
00:38:23,429 --> 00:38:27,149
that's based off of whatever that

949
00:38:25,170 --> 00:38:28,289
location is so for example when we want

950
00:38:27,150 --> 00:38:31,050
to do this one we have to subtract

951
00:38:28,289 --> 00:38:32,849
whatever the point is from this because

952
00:38:31,050 --> 00:38:35,870
that is what we're testing against right

953
00:38:32,849 --> 00:38:35,869
so there we go

954
00:38:36,260 --> 00:38:43,100
almost there we go there we go now we're

955
00:38:40,800 --> 00:38:45,240
actually doing the full test right

956
00:38:43,099 --> 00:38:47,159
you'll notice we got a lot slower

957
00:38:45,239 --> 00:38:49,559
because it's doing a ton more operations

958
00:38:47,159 --> 00:38:50,969
for every pixel on the screen it's gonna

959
00:38:49,559 --> 00:38:53,549
get worse before it gets better people

960
00:38:50,969 --> 00:38:55,019
we're we're gonna be super slow for a

961
00:38:53,550 --> 00:38:56,160
little while before we get it before we

962
00:38:55,019 --> 00:38:57,360
get better but you can see that it's

963
00:38:56,159 --> 00:39:00,119
still doing the same thing now but it's

964
00:38:57,360 --> 00:39:02,280
doing those edge tests right and then

965
00:39:00,119 --> 00:39:04,920
finally all I have to do is now actually

966
00:39:02,280 --> 00:39:07,380
change these edge tests to using actual

967
00:39:04,920 --> 00:39:08,760
edges of the rotated thing which again

968
00:39:07,380 --> 00:39:10,380
hopefully you've seen is pretty

969
00:39:08,760 --> 00:39:13,140
straightforward there's not a whole lot

970
00:39:10,380 --> 00:39:15,390
that we will have to do there to do that

971
00:39:13,139 --> 00:39:18,389
so let's just go ahead and create those

972
00:39:15,389 --> 00:39:20,509
we have the x-axis and the y-axis so

973
00:39:18,389 --> 00:39:25,049
let's think about what these would be

974
00:39:20,510 --> 00:39:27,030
here is my x-axis here is my y-axis so

975
00:39:25,050 --> 00:39:29,130
if I want to test against this first

976
00:39:27,030 --> 00:39:30,660
edge we'll treat this as our first edge

977
00:39:29,130 --> 00:39:33,930
actually let's treat this as our first

978
00:39:30,659 --> 00:39:35,568
edge because I keep saying X X's and Y's

979
00:39:33,929 --> 00:39:37,969
backwards

980
00:39:35,568 --> 00:39:39,829
time so let's let's try and try and not

981
00:39:37,969 --> 00:39:43,159
say X's and Y's loggers I'll do my best

982
00:39:39,829 --> 00:39:45,318
so cures our origin right so what I can

983
00:39:43,159 --> 00:39:49,759
do now is just say ok the pixel the

984
00:39:45,318 --> 00:39:50,838
pixel this stuff here this V min V Max

985
00:39:49,759 --> 00:39:52,789
we're just gonna rid up there's no more

986
00:39:50,838 --> 00:39:55,578
V min and V Max so now we're just going

987
00:39:52,789 --> 00:39:58,729
to use the the origin x-axis and y-axis

988
00:39:55,579 --> 00:40:01,969
stuff alright so the first thing we need

989
00:39:58,728 --> 00:40:03,798
to do is say ok where's my blackboard

990
00:40:01,969 --> 00:40:05,690
let's test against this edge here so

991
00:40:03,798 --> 00:40:09,739
that's the x-axis it's going from the

992
00:40:05,690 --> 00:40:12,798
origin to like the one you know along

993
00:40:09,739 --> 00:40:14,599
the bottom right in our case it's the

994
00:40:12,798 --> 00:40:16,248
top because that screen coordinate

995
00:40:14,599 --> 00:40:18,349
systems actually flipped but it doesn't

996
00:40:16,248 --> 00:40:19,639
matter it doesn't any space this all

997
00:40:18,349 --> 00:40:22,818
this math still works no matter what the

998
00:40:19,639 --> 00:40:24,199
space is right so we have the origin we

999
00:40:22,818 --> 00:40:26,568
have the x-axis is running across here

1000
00:40:24,199 --> 00:40:29,088
what we want to do is say is it on the

1001
00:40:26,568 --> 00:40:32,838
correct side of this right so we want to

1002
00:40:29,088 --> 00:40:34,759
use the negative y-axis would be the

1003
00:40:32,838 --> 00:40:37,518
perpendicular right the negative y-axis

1004
00:40:34,759 --> 00:40:39,769
so our first test is going to be against

1005
00:40:37,518 --> 00:40:42,228
the negative y-axis that dot product

1006
00:40:39,768 --> 00:40:43,939
right and we're gonna use the origin as

1007
00:40:42,228 --> 00:40:45,798
our basis because that is a point that

1008
00:40:43,940 --> 00:40:47,358
runs through this edge so we can again

1009
00:40:45,798 --> 00:40:50,239
make sure that we put P in the same

1010
00:40:47,358 --> 00:40:53,478
space to test which side it's on right

1011
00:40:50,239 --> 00:40:56,329
so we just say P minus the origin that's

1012
00:40:53,478 --> 00:40:58,998
our first test ok next we'll test

1013
00:40:56,329 --> 00:41:00,859
against this guy right here now this

1014
00:40:58,998 --> 00:41:03,468
base point to do that test that's going

1015
00:41:00,858 --> 00:41:05,958
to be the origin plus the x-axis right

1016
00:41:03,469 --> 00:41:08,690
so we actually need to do the origin

1017
00:41:05,958 --> 00:41:12,469
plus the x-axis for the base point that

1018
00:41:08,690 --> 00:41:14,059
we're going to test off of okay and then

1019
00:41:12,469 --> 00:41:15,048
we need to say which is the axis that

1020
00:41:14,059 --> 00:41:16,789
we're going to test well we want it

1021
00:41:15,048 --> 00:41:18,679
pointing outwards that's the x-axis that

1022
00:41:16,789 --> 00:41:21,709
points in that direction right so that's

1023
00:41:18,679 --> 00:41:25,308
just the x-axis all right

1024
00:41:21,708 --> 00:41:26,838
next we'll do this guy ok and so that's

1025
00:41:25,309 --> 00:41:28,519
you know that's that v-max

1026
00:41:26,838 --> 00:41:29,690
point that we're based off of there

1027
00:41:28,518 --> 00:41:31,129
essentially I'm just going around this

1028
00:41:29,690 --> 00:41:33,409
counterclockwise force of habit

1029
00:41:31,130 --> 00:41:35,239
as a graphics programmer so the test of

1030
00:41:33,409 --> 00:41:37,909
the axis is going to be the y-axis there

1031
00:41:35,239 --> 00:41:41,778
right so that's going to be the wax test

1032
00:41:37,909 --> 00:41:44,478
and the point that we're on is going to

1033
00:41:41,778 --> 00:41:47,478
be just the origin plus the X and the

1034
00:41:44,478 --> 00:41:49,019
y-axis right so there's origin plus the

1035
00:41:47,478 --> 00:41:52,079
x axis plus the y axis

1036
00:41:49,019 --> 00:41:54,389
we're on and then finally our final edge

1037
00:41:52,079 --> 00:41:57,509
coming down right is going to be this

1038
00:41:54,389 --> 00:41:58,379
which is just you know the origin plus

1039
00:41:57,510 --> 00:42:02,310
the x-axis

1040
00:41:58,380 --> 00:42:03,390
I'm sorry plus the y-axis and you can

1041
00:42:02,309 --> 00:42:04,559
tell which one is going to be because we

1042
00:42:03,389 --> 00:42:06,239
haven't used it yet that's gonna be the

1043
00:42:04,559 --> 00:42:11,210
negative x-axis right is pointing out in

1044
00:42:06,239 --> 00:42:16,319
that direction okay so there we go

1045
00:42:11,210 --> 00:42:19,409
now if I could compile that you will now

1046
00:42:16,320 --> 00:42:21,000
notice that without actually really

1047
00:42:19,409 --> 00:42:24,059
changing anything about what we were

1048
00:42:21,000 --> 00:42:26,579
doing just following it step by step we

1049
00:42:24,059 --> 00:42:28,230
are now filling a rectangle right and

1050
00:42:26,579 --> 00:42:29,639
we're filling the rectangle with

1051
00:42:28,230 --> 00:42:31,289
rotation and scaling just fine we can do

1052
00:42:29,639 --> 00:42:33,809
anything we want to that and it would

1053
00:42:31,289 --> 00:42:35,369
just go ahead and work right you can see

1054
00:42:33,809 --> 00:42:37,710
it rotating there but if I wanted to I

1055
00:42:35,369 --> 00:42:42,030
could go ahead and introduce some

1056
00:42:37,710 --> 00:42:45,690
scaling to it right mm-hmm by just going

1057
00:42:42,030 --> 00:42:48,089
back to that code let's see here I made

1058
00:42:45,690 --> 00:42:50,130
a few yeah here we are

1059
00:42:48,088 --> 00:42:52,500
if I wanted to introduce some scaling to

1060
00:42:50,130 --> 00:42:53,940
it again I could I could do sort of the

1061
00:42:52,500 --> 00:42:57,510
same thing that we were doing yesterday

1062
00:42:53,940 --> 00:43:00,150
by just saying let's put in some notion

1063
00:42:57,510 --> 00:43:03,119
of a change in scale that happens over

1064
00:43:00,150 --> 00:43:06,119
time and you can see that that works

1065
00:43:03,119 --> 00:43:07,260
fine right now again we're very slow

1066
00:43:06,119 --> 00:43:08,369
right now because we're not doing

1067
00:43:07,260 --> 00:43:09,599
anything we're not even compiling with

1068
00:43:08,369 --> 00:43:10,740
optimizations on so we're like the

1069
00:43:09,599 --> 00:43:12,869
slowest we could possibly be we're

1070
00:43:10,739 --> 00:43:14,309
filling all the pixel off screen so what

1071
00:43:12,869 --> 00:43:17,460
we might want to do is say well okay

1072
00:43:14,309 --> 00:43:19,139
let's at least we can do a little bit

1073
00:43:17,460 --> 00:43:21,088
better than that without actually it

1074
00:43:19,139 --> 00:43:22,889
would you know just algorithmically we

1075
00:43:21,088 --> 00:43:24,960
can do something smarter there right

1076
00:43:22,889 --> 00:43:27,838
because what we could do is we could say

1077
00:43:24,960 --> 00:43:29,820
well we know very trivially that the

1078
00:43:27,838 --> 00:43:33,449
only pixels that could possibly be

1079
00:43:29,820 --> 00:43:35,849
involved in this right are bounded by

1080
00:43:33,449 --> 00:43:38,669
the by the minimum and maximum x and y

1081
00:43:35,849 --> 00:43:40,950
values of those points right I mean if I

1082
00:43:38,670 --> 00:43:43,500
come in here and I have some rotated

1083
00:43:40,949 --> 00:43:47,189
shape right and so it's got four points

1084
00:43:43,500 --> 00:43:49,380
right well I know that no pixels outside

1085
00:43:47,190 --> 00:43:51,358
of this right this this oriented

1086
00:43:49,380 --> 00:43:53,039
rectangle right if I just take the

1087
00:43:51,358 --> 00:43:55,500
minimum and maximum of all the points I

1088
00:43:53,039 --> 00:43:57,059
would end up having all the pictures

1089
00:43:55,500 --> 00:44:00,239
that could possibly filled so I could

1090
00:43:57,059 --> 00:44:01,440
restrict my choice of pixels to just

1091
00:44:00,239 --> 00:44:02,549
those and then we wouldn't have to fill

1092
00:44:01,440 --> 00:44:04,829
the whole screen

1093
00:44:02,550 --> 00:44:06,600
we'd feel a much smaller region so

1094
00:44:04,829 --> 00:44:07,889
that's a good first step to to what we

1095
00:44:06,599 --> 00:44:10,679
should do so let's let's just go ahead

1096
00:44:07,889 --> 00:44:12,869
and do that right that's that's you know

1097
00:44:10,679 --> 00:44:15,839
very very simple for us to do so in this

1098
00:44:12,869 --> 00:44:17,460
render group here right I'm just going

1099
00:44:15,840 --> 00:44:19,800
to introduce the same things we had

1100
00:44:17,460 --> 00:44:25,170
before right I've got a I got an int Y

1101
00:44:19,800 --> 00:44:28,350
min and in Y Max and in X Men and an int

1102
00:44:25,170 --> 00:44:30,180
X Max right I've got those and all I'm

1103
00:44:28,349 --> 00:44:32,279
going to do here is first I'm going to

1104
00:44:30,179 --> 00:44:40,500
set them to be exactly what they were

1105
00:44:32,280 --> 00:44:44,100
before right Y min Y max so X min x max

1106
00:44:40,500 --> 00:44:46,409
but I am going to change to saying that

1107
00:44:44,099 --> 00:44:49,380
we will actually consider whatever that

1108
00:44:46,409 --> 00:44:50,879
max actually is right so we'll go will

1109
00:44:49,380 --> 00:44:52,410
actually test all of them because now

1110
00:44:50,880 --> 00:44:54,599
our inclusion and exclusion is going to

1111
00:44:52,409 --> 00:44:56,699
be based on these tests not on this this

1112
00:44:54,599 --> 00:45:03,239
is just pixel coverage right and so I'm

1113
00:44:56,699 --> 00:45:07,139
going to say all right oops

1114
00:45:03,239 --> 00:45:08,309
yeah buffer weight and so that's all the

1115
00:45:07,139 --> 00:45:10,289
pixels on the screen again so if I

1116
00:45:08,309 --> 00:45:13,860
compile this we get the same result and

1117
00:45:10,289 --> 00:45:17,130
it's still quite slow but what I can do

1118
00:45:13,860 --> 00:45:19,710
now is I can say all right let's go

1119
00:45:17,130 --> 00:45:21,690
ahead and introduce something that

1120
00:45:19,710 --> 00:45:24,449
actually tries to get the min and the

1121
00:45:21,690 --> 00:45:27,210
max out of this right so I've got four

1122
00:45:24,449 --> 00:45:30,239
points essentially that I could have

1123
00:45:27,210 --> 00:45:33,179
four minimums and maximums right so I've

1124
00:45:30,239 --> 00:45:35,789
got essentially four points that are the

1125
00:45:33,179 --> 00:45:36,659
the you know the points of this weird

1126
00:45:35,789 --> 00:45:39,029
rotated shape

1127
00:45:36,659 --> 00:45:41,399
I've got the origin I've got the origin

1128
00:45:39,030 --> 00:45:45,240
plus the x-axis about the origin plus

1129
00:45:41,400 --> 00:45:47,460
the x-axis and the y-axis right and I've

1130
00:45:45,239 --> 00:45:49,199
got the origin plus the y-axis right so

1131
00:45:47,460 --> 00:45:51,630
I've got four points so what I'd like to

1132
00:45:49,199 --> 00:45:55,319
do is just loop through those points and

1133
00:45:51,630 --> 00:45:57,750
I'd like to go ahead and take sort of I

1134
00:45:55,320 --> 00:46:00,300
like to shrink it down so that they sort

1135
00:45:57,750 --> 00:46:01,769
of fit around that guy right so what I'm

1136
00:46:00,300 --> 00:46:04,260
going to do is say all right let's say

1137
00:46:01,769 --> 00:46:06,630
we loop over these int P index equals 0

1138
00:46:04,260 --> 00:46:09,240
P index is less than an array count p

1139
00:46:06,630 --> 00:46:13,110
plus plus index right and what I'm gonna

1140
00:46:09,239 --> 00:46:14,969
do is going to take that P

1141
00:46:13,110 --> 00:46:18,539
like a test point out of it the index

1142
00:46:14,969 --> 00:46:21,389
and I'm going to say all right I want to

1143
00:46:18,539 --> 00:46:23,429
now take the the Y min the Y max all

1144
00:46:21,389 --> 00:46:24,690
those guys I'm going to say if I well

1145
00:46:23,429 --> 00:46:27,239
you know what I'll do first I don't

1146
00:46:24,690 --> 00:46:30,179
actually need to do that we'll do int px

1147
00:46:27,239 --> 00:46:33,629
and py and these are just going to be

1148
00:46:30,179 --> 00:46:35,009
the floors and ceilings of those values

1149
00:46:33,630 --> 00:46:36,390
numerically right I have a floating

1150
00:46:35,010 --> 00:46:39,000
point value I want to see what its

1151
00:46:36,389 --> 00:46:41,460
closest real value is right so I believe

1152
00:46:39,000 --> 00:46:44,219
we have these in our in our handmade

1153
00:46:41,460 --> 00:46:46,650
intrinsics right we've got floor yeah

1154
00:46:44,219 --> 00:46:47,250
conceal so here's our floor and our

1155
00:46:46,650 --> 00:46:51,480
ceiling

1156
00:46:47,250 --> 00:46:53,670
so we'll do our p RP xf i guess or will

1157
00:46:51,480 --> 00:46:59,309
do will do floor something like that

1158
00:46:53,670 --> 00:47:01,559
floor x CL x that seems good so yeah

1159
00:46:59,309 --> 00:47:10,829
that seems like the right thing to do so

1160
00:47:01,559 --> 00:47:12,480
B 2 P equals P P index sorry getting a

1161
00:47:10,829 --> 00:47:15,539
little tripped up here all right so

1162
00:47:12,480 --> 00:47:18,059
there's my floor X and my CL X I'm gonna

1163
00:47:15,539 --> 00:47:20,039
take the 10 minutes that I started late

1164
00:47:18,059 --> 00:47:21,539
because we're right we're right at

1165
00:47:20,039 --> 00:47:27,239
finishing this part up so we might as

1166
00:47:21,539 --> 00:47:32,360
well so there's the seal and then I've

1167
00:47:27,239 --> 00:47:34,949
got same things happening in Y like so

1168
00:47:32,360 --> 00:47:37,170
and so now that I've got those this is

1169
00:47:34,949 --> 00:47:38,189
sort of like the min X the max X and

1170
00:47:37,170 --> 00:47:40,409
that sort of thing

1171
00:47:38,190 --> 00:47:42,720
for this guy right so this is the test

1172
00:47:40,409 --> 00:47:44,460
min X and the test max X and so on that

1173
00:47:42,719 --> 00:47:46,019
this guy would represent and so all I

1174
00:47:44,460 --> 00:47:47,730
have to do now and in fact I don't

1175
00:47:46,019 --> 00:47:49,349
really have to take this the the floor

1176
00:47:47,730 --> 00:47:51,570
and seal in that way I could just say

1177
00:47:49,349 --> 00:47:52,860
that the ceiling of why is the floor Y

1178
00:47:51,570 --> 00:47:54,150
plus 1 right because we know that

1179
00:47:52,860 --> 00:47:56,250
they're on either side of each other but

1180
00:47:54,150 --> 00:47:57,990
I'll leave it that way for now so now

1181
00:47:56,250 --> 00:47:59,969
all I have to do is say well if the Y

1182
00:47:57,989 --> 00:48:03,089
minimum right if the minimum Y we've

1183
00:47:59,969 --> 00:48:06,359
seen is actually greater than that floor

1184
00:48:03,090 --> 00:48:08,039
Y right then I want to assign them right

1185
00:48:06,360 --> 00:48:11,039
I want to take I want to accept the new

1186
00:48:08,039 --> 00:48:13,940
floor Y as my minimum right and again

1187
00:48:11,039 --> 00:48:17,519
all I'm doing is just again gathering up

1188
00:48:13,940 --> 00:48:19,710
sort of the the minimum and maximum so

1189
00:48:17,519 --> 00:48:22,619
that we know what we actually need to

1190
00:48:19,710 --> 00:48:23,780
test against and similarly I'll expand

1191
00:48:22,619 --> 00:48:26,509
the

1192
00:48:23,780 --> 00:48:28,420
some to go ahead and and you know

1193
00:48:26,510 --> 00:48:33,320
encompass that whole area right so seal

1194
00:48:28,420 --> 00:48:34,760
why seal X like so right and so that'll

1195
00:48:33,320 --> 00:48:37,280
that'll actually grab those and then all

1196
00:48:34,760 --> 00:48:40,570
I have to do is actually go ahead and

1197
00:48:37,280 --> 00:48:47,230
make this excuse me

1198
00:48:40,570 --> 00:48:47,230
start out the opposite way right like so

1199
00:48:48,190 --> 00:48:54,170
so now we're starting essentially as big

1200
00:48:51,440 --> 00:48:55,849
as possible right we're starting with

1201
00:48:54,170 --> 00:48:58,099
I'm sorry we're starting with nothing

1202
00:48:55,849 --> 00:49:00,079
included right and we're just kind of

1203
00:48:58,099 --> 00:49:02,089
moving the x-men back and moving the the

1204
00:49:00,079 --> 00:49:05,630
xmax back as far as possible now this

1205
00:49:02,090 --> 00:49:07,579
could still produce things that were off

1206
00:49:05,630 --> 00:49:09,410
the screen so at the end we do have to

1207
00:49:07,579 --> 00:49:13,299
clamp them we have to say if the x-men

1208
00:49:09,409 --> 00:49:16,250
you know you know I should probably do

1209
00:49:13,300 --> 00:49:18,560
you know I should probably do some kind

1210
00:49:16,250 --> 00:49:25,460
of a width thing here like like with

1211
00:49:18,559 --> 00:49:28,039
masks or something like that max I don't

1212
00:49:25,460 --> 00:49:30,289
know whit max something like that tight

1213
00:49:28,039 --> 00:49:33,079
max just these values so I don't keep

1214
00:49:30,289 --> 00:49:35,719
half left - one right it's like the

1215
00:49:33,079 --> 00:49:41,779
inclusive version so that's with Max and

1216
00:49:35,719 --> 00:49:43,039
that's height max and yeah and so all I

1217
00:49:41,780 --> 00:49:45,140
really have to do now is just finish

1218
00:49:43,039 --> 00:49:45,710
clipping those so I say if X min is less

1219
00:49:45,139 --> 00:49:51,230
than zero

1220
00:49:45,710 --> 00:49:55,460
you know then X min equals 0 if Y min is

1221
00:49:51,230 --> 00:49:59,329
less than zero then Y min equals zero if

1222
00:49:55,460 --> 00:50:02,750
X max is greater than with Max then X

1223
00:49:59,329 --> 00:50:08,380
min oops sorry x max X max equals with

1224
00:50:02,750 --> 00:50:17,269
Max and the same is true for Y type max

1225
00:50:08,380 --> 00:50:19,900
right max right and these are lower seal

1226
00:50:17,269 --> 00:50:19,900
there we go

1227
00:50:22,369 --> 00:50:28,910
all right uh-oh

1228
00:50:25,650 --> 00:50:33,088
but of course that didn't quite work

1229
00:50:28,909 --> 00:50:33,838
hold on one second I have to we're

1230
00:50:33,088 --> 00:50:35,719
almost done

1231
00:50:33,838 --> 00:50:38,028
just got to fix a couple of things first

1232
00:50:35,719 --> 00:50:40,199
so mm-hmm

1233
00:50:38,028 --> 00:50:42,239
just double-checking we've got our with

1234
00:50:40,199 --> 00:50:43,588
max and our height max I want to do

1235
00:50:42,239 --> 00:50:45,989
something quickly which is just to not

1236
00:50:43,588 --> 00:50:48,690
test the edges I'm just gonna always

1237
00:50:45,989 --> 00:50:50,548
Phil right so instead of this I'm just

1238
00:50:48,690 --> 00:50:52,739
gonna always Phil so we can see where

1239
00:50:50,548 --> 00:50:54,778
our bounding region is so I'm gonna say

1240
00:50:52,739 --> 00:50:57,389
all right everywhere in the bounty

1241
00:50:54,778 --> 00:50:59,579
region that we use we are going to fill

1242
00:50:57,389 --> 00:51:01,768
and then now we can test our boundaries

1243
00:50:59,579 --> 00:51:03,749
so we start x-min off at the maximum

1244
00:51:01,768 --> 00:51:07,229
possible value it could be and then as

1245
00:51:03,748 --> 00:51:10,618
we step through each of these points in

1246
00:51:07,230 --> 00:51:12,298
our index we floor them so that we baste

1247
00:51:10,619 --> 00:51:14,880
and seal them so that we know what their

1248
00:51:12,298 --> 00:51:17,159
floor and ceiling values are we then go

1249
00:51:14,880 --> 00:51:18,989
ahead and say if the xmin that we

1250
00:51:17,159 --> 00:51:21,449
currently have is greater than whatever

1251
00:51:18,989 --> 00:51:24,749
the floor is then we are going to accept

1252
00:51:21,449 --> 00:51:27,268
the new floor value and then that will

1253
00:51:24,748 --> 00:51:28,048
basically keep moving X min down as we

1254
00:51:27,268 --> 00:51:31,229
go

1255
00:51:28,048 --> 00:51:33,960
same with Y min so as we you know find

1256
00:51:31,230 --> 00:51:37,409
lower Wyman's we accept lower Wyman's

1257
00:51:33,960 --> 00:51:39,179
right and then similarly if the x max is

1258
00:51:37,409 --> 00:51:40,528
ever less than whatever the ceiling was

1259
00:51:39,179 --> 00:51:42,480
we accept that oops

1260
00:51:40,528 --> 00:51:46,818
and there's our typo knew there was

1261
00:51:42,480 --> 00:51:51,269
going to be one and so there we go

1262
00:51:46,818 --> 00:51:54,150
although why are we still up in the

1263
00:51:51,268 --> 00:51:56,909
corner we're getting our range Oh

1264
00:51:54,150 --> 00:51:59,519
because now right now we have to restore

1265
00:51:56,909 --> 00:52:02,639
our buffer pre step rank because we have

1266
00:51:59,518 --> 00:52:05,129
an actual min X and min Y so we're going

1267
00:52:02,639 --> 00:52:08,608
to have to do this again to step to the

1268
00:52:05,130 --> 00:52:10,400
correct location so there we go there's

1269
00:52:08,608 --> 00:52:14,068
our X Men oops

1270
00:52:10,400 --> 00:52:17,028
there's our X Men and there's our Y min

1271
00:52:14,068 --> 00:52:20,159
right and now you can see we are

1272
00:52:17,028 --> 00:52:23,460
correctly picking the rectangle to test

1273
00:52:20,159 --> 00:52:25,768
and so now if we reenable our test we

1274
00:52:23,460 --> 00:52:29,159
get our correctly filled guy and it's

1275
00:52:25,768 --> 00:52:31,979
you know it's still not a fast fill but

1276
00:52:29,159 --> 00:52:33,929
it's much faster than it was now we have

1277
00:52:31,980 --> 00:52:36,840
a ton of stuff still left to talk

1278
00:52:33,929 --> 00:52:38,940
we are not home free but again like I

1279
00:52:36,840 --> 00:52:41,700
said I'm out of time we're now just

1280
00:52:38,940 --> 00:52:44,070
about running into where I won hours

1281
00:52:41,699 --> 00:52:46,618
worth of code we've got a bunch stuff to

1282
00:52:44,070 --> 00:52:48,030
talk about like sub-pixel stuff and what

1283
00:52:46,619 --> 00:52:50,039
pixel centers are and a bunch of other

1284
00:52:48,030 --> 00:52:51,570
things about sort of finicky stuff in

1285
00:52:50,039 --> 00:52:53,070
there and there's a bunch of things that

1286
00:52:51,570 --> 00:52:54,809
we also didn't talk about we can we can

1287
00:52:53,070 --> 00:52:56,190
go in and simplify a lot of these like

1288
00:52:54,809 --> 00:52:58,019
we don't need to do these expressions

1289
00:52:56,190 --> 00:53:01,139
exactly we did them but I'd like to go

1290
00:52:58,019 --> 00:53:03,900
ahead and wait we'll we'll pick back up

1291
00:53:01,139 --> 00:53:06,389
here tomorrow and clean a bunch of this

1292
00:53:03,900 --> 00:53:08,608
stuff up as we move towards actually

1293
00:53:06,389 --> 00:53:10,889
getting our full flitting working so

1294
00:53:08,608 --> 00:53:17,250
there you go let's go and go to the Q &amp;

1295
00:53:10,889 --> 00:53:19,589
A like so and I will you know I will

1296
00:53:17,250 --> 00:53:21,179
start taking questions now please prefix

1297
00:53:19,590 --> 00:53:22,380
your questions with Q : and ply it

1298
00:53:21,179 --> 00:53:25,799
please try to keep them to what we're

1299
00:53:22,380 --> 00:53:27,090
doing if you want to ask off-topic

1300
00:53:25,800 --> 00:53:29,880
question stuff like that please come

1301
00:53:27,090 --> 00:53:32,430
back before the stream starts because

1302
00:53:29,880 --> 00:53:34,380
that's really the best time to do that

1303
00:53:32,429 --> 00:53:35,940
sort of stuff we I tend to skip anything

1304
00:53:34,380 --> 00:53:37,800
that's off topic during this so we can

1305
00:53:35,940 --> 00:53:40,309
concentrate on just questions about what

1306
00:53:37,800 --> 00:53:40,310
we're working on

1307
00:53:54,639 --> 00:54:03,699
do you Seven Samurai what are your

1308
00:53:56,440 --> 00:54:06,970
computer specs so this computer is super

1309
00:54:03,699 --> 00:54:10,179
old but at the time it was like a fancy

1310
00:54:06,969 --> 00:54:11,679
Xeon so it's kind of a little bit tricky

1311
00:54:10,179 --> 00:54:13,358
to talk about its performance because

1312
00:54:11,679 --> 00:54:16,778
it's not the kind of performance that

1313
00:54:13,358 --> 00:54:21,338
you would get on on 'men of those things

1314
00:54:16,778 --> 00:54:22,960
right where you're you're kind of you're

1315
00:54:21,338 --> 00:54:26,230
kind of in an unusual scenario like most

1316
00:54:22,960 --> 00:54:31,298
users don't have Zeon's right so it's a

1317
00:54:26,230 --> 00:54:36,400
w55 80 which and I think it's so it's

1318
00:54:31,298 --> 00:54:37,630
about five years old I think maybe six

1319
00:54:36,400 --> 00:54:39,130
years old it's about five or six years

1320
00:54:37,630 --> 00:54:40,749
old so Triola processor but at the time

1321
00:54:39,130 --> 00:54:43,329
it was a Xeon so it's got like a bigger

1322
00:54:40,748 --> 00:54:45,278
cache than most things do and so on so

1323
00:54:43,329 --> 00:54:46,269
it's not probably as fast as most of the

1324
00:54:45,278 --> 00:54:49,748
computers that people are probably

1325
00:54:46,268 --> 00:54:52,449
following handmade hero on but either

1326
00:54:49,748 --> 00:54:53,679
way like like I said we haven't we're

1327
00:54:52,449 --> 00:54:58,960
not really dealing with performance yet

1328
00:54:53,679 --> 00:55:00,308
so you know any any computer probably

1329
00:54:58,960 --> 00:55:02,289
can do what we're doing here though

1330
00:55:00,309 --> 00:55:04,269
because even even though we're doing it

1331
00:55:02,289 --> 00:55:05,470
super inefficiently it's it's just not

1332
00:55:04,268 --> 00:55:08,159
much to do right just one little

1333
00:55:05,469 --> 00:55:08,159
rectangle so

1334
00:55:14,150 --> 00:55:19,320
is it weird that I got really excited

1335
00:55:16,469 --> 00:55:21,059
once the rotated fill got faster no that

1336
00:55:19,320 --> 00:55:22,530
probably just means you should be an

1337
00:55:21,059 --> 00:55:24,779
optimizer guy right if you're not

1338
00:55:22,530 --> 00:55:26,519
already that means you'll be kind of

1339
00:55:24,780 --> 00:55:27,660
excited as we do our performance stuff I

1340
00:55:26,519 --> 00:55:30,900
guess

1341
00:55:27,659 --> 00:55:32,389
I mean basically getting excited when

1342
00:55:30,900 --> 00:55:34,289
stuff like this happens is what

1343
00:55:32,389 --> 00:55:35,429
determines whether probably you're going

1344
00:55:34,289 --> 00:55:36,659
to be a good programmer because if

1345
00:55:35,429 --> 00:55:37,769
you're not excited about this sort of

1346
00:55:36,659 --> 00:55:39,509
stuff you probably don't really want to

1347
00:55:37,769 --> 00:55:40,559
be shouldn't be a programmer right you

1348
00:55:39,510 --> 00:55:41,609
should do something else because you

1349
00:55:40,559 --> 00:55:44,369
want to do stuff that you're excited

1350
00:55:41,608 --> 00:55:46,769
about the little things about it right

1351
00:55:44,369 --> 00:55:48,390
that's what makes you know I'm assuming

1352
00:55:46,769 --> 00:55:50,070
what makes a great basketball player I

1353
00:55:48,389 --> 00:55:52,049
mean besides physical build or whatever

1354
00:55:50,070 --> 00:55:53,460
right and programmed that too you got to

1355
00:55:52,050 --> 00:55:55,080
be you know have a good brain for it or

1356
00:55:53,460 --> 00:55:56,579
whatever right but what determines that

1357
00:55:55,079 --> 00:55:57,840
you're gonna go do that thing it's like

1358
00:55:56,579 --> 00:55:59,429
you're gonna be great Bassel player if

1359
00:55:57,840 --> 00:56:00,539
you love the feel of shooting a basket

1360
00:55:59,429 --> 00:56:01,710
right because you're gonna sit there and

1361
00:56:00,539 --> 00:56:05,489
do it all the time and earn it really

1362
00:56:01,710 --> 00:56:07,170
good and so yeah I mean that's that's

1363
00:56:05,489 --> 00:56:11,729
kind of how that works which skewing the

1364
00:56:07,170 --> 00:56:14,369
axes still work yeah yet wood so if you

1365
00:56:11,730 --> 00:56:18,440
wanted to skew the axes that probably

1366
00:56:14,369 --> 00:56:18,440
would still work because it's long well

1367
00:56:20,869 --> 00:56:27,150
so no if we wanted to skew the axes we

1368
00:56:25,199 --> 00:56:30,029
couldn't take the shortcut that I took

1369
00:56:27,150 --> 00:56:32,000
which is using the axes as the perps you

1370
00:56:30,030 --> 00:56:34,800
would have to actually compute the perps

1371
00:56:32,000 --> 00:56:36,449
because because if we skew the axes then

1372
00:56:34,800 --> 00:56:38,160
they will no longer be perpendicular to

1373
00:56:36,449 --> 00:56:40,739
each other I'll show you what happens if

1374
00:56:38,159 --> 00:56:42,299
you do it but it would be really trivial

1375
00:56:40,739 --> 00:56:47,149
to support it you just actually compute

1376
00:56:42,300 --> 00:56:50,970
the perp right so if you skewed the axes

1377
00:56:47,150 --> 00:56:57,630
Janee skewing the axes was was this

1378
00:56:50,969 --> 00:57:01,079
right y-axis equals you know cosine

1379
00:56:57,630 --> 00:57:03,740
angle plus something that wasn't 90

1380
00:57:01,079 --> 00:57:03,739
right

1381
00:57:05,809 --> 00:57:08,989
and so can you kind of see what's

1382
00:57:07,489 --> 00:57:12,679
happening there do you see how that's

1383
00:57:08,989 --> 00:57:14,569
going you get this kind of I'll try to

1384
00:57:12,679 --> 00:57:15,679
skew the axes even a little more maybe

1385
00:57:14,570 --> 00:57:17,210
than they were before

1386
00:57:15,679 --> 00:57:19,389
so it's a little more pronounced that

1387
00:57:17,210 --> 00:57:22,659
effect do you see what's happening there

1388
00:57:19,389 --> 00:57:24,650
you you end up in this situation where

1389
00:57:22,659 --> 00:57:26,210
basically like that that perpendicular

1390
00:57:24,650 --> 00:57:27,800
is not perpendicular anymore so you're

1391
00:57:26,210 --> 00:57:30,530
not actually getting the proper test if

1392
00:57:27,800 --> 00:57:34,310
you wanted that to work though it's not

1393
00:57:30,530 --> 00:57:37,610
that big of a deal we can go in and add

1394
00:57:34,309 --> 00:57:39,469
a more proper perpendicular right so to

1395
00:57:37,610 --> 00:57:41,360
do a proper perpendicular I already

1396
00:57:39,469 --> 00:57:43,549
showed you how to do that and I said

1397
00:57:41,360 --> 00:57:47,690
there's even let's add a perp operator

1398
00:57:43,550 --> 00:57:49,370
right here right and so so let's let's

1399
00:57:47,690 --> 00:57:50,570
do that I mean that's that's not so I

1400
00:57:49,369 --> 00:57:52,009
don't mind doing that in the Q&amp;A because

1401
00:57:50,570 --> 00:57:54,470
I already explained it all in a

1402
00:57:52,010 --> 00:58:01,190
different one so let's do that right

1403
00:57:54,469 --> 00:58:05,750
let's do perp x-axis right like that

1404
00:58:01,190 --> 00:58:08,630
and so in handmade math right dot H in

1405
00:58:05,750 --> 00:58:11,659
here I can just add one of those that's

1406
00:58:08,630 --> 00:58:16,030
an easy v2 operation that's just in line

1407
00:58:11,659 --> 00:58:18,349
v2 perp v2 a and in here we just have

1408
00:58:16,030 --> 00:58:21,040
literally just that result right it's

1409
00:58:18,349 --> 00:58:23,630
just v2 equals whatever the negative

1410
00:58:21,039 --> 00:58:28,519
thing is like that right there's that

1411
00:58:23,630 --> 00:58:31,280
perp makes sense so you know if we if we

1412
00:58:28,519 --> 00:58:32,989
did that then if we do this here we can

1413
00:58:31,280 --> 00:58:33,530
we've actually added the perp operator

1414
00:58:32,989 --> 00:58:37,689
oops

1415
00:58:33,530 --> 00:58:37,690
e to result

1416
00:58:40,039 --> 00:58:46,889
there we go so mm-hmm

1417
00:58:43,699 --> 00:58:49,739
once we have that perp we can go ahead

1418
00:58:46,889 --> 00:58:53,099
and tackle this guy a little bit better

1419
00:58:49,739 --> 00:58:55,229
which is that in here now instead of

1420
00:58:53,099 --> 00:58:58,710
doing this we would actually always use

1421
00:58:55,230 --> 00:59:01,530
the perpendicular of the other axis so

1422
00:58:58,710 --> 00:59:03,269
we would essentially say okay this we

1423
00:59:01,530 --> 00:59:07,470
don't actually want the negative x-axis

1424
00:59:03,269 --> 00:59:09,389
what we want is the negative perp of the

1425
00:59:07,469 --> 00:59:10,679
x-axis right we don't want the native

1426
00:59:09,389 --> 00:59:13,079
black so you want the negative purpose

1427
00:59:10,679 --> 00:59:15,659
the x-axis we don't actually want the

1428
00:59:13,079 --> 00:59:17,849
x-axis here what we want is the perp of

1429
00:59:15,659 --> 00:59:19,920
the y-axis right you don't actually want

1430
00:59:17,849 --> 00:59:21,690
the waxes here we want the perk of the

1431
00:59:19,920 --> 00:59:23,789
x-axis we don't actually want the

1432
00:59:21,690 --> 00:59:28,380
negative axis here we want the perp of

1433
00:59:23,789 --> 00:59:30,659
the y-axis negative right mm-hmm and in

1434
00:59:28,380 --> 00:59:33,329
theory that should work although is this

1435
00:59:30,659 --> 00:59:34,739
gonna be backwards I got to think about

1436
00:59:33,329 --> 00:59:36,000
that so let's let's think about well the

1437
00:59:34,739 --> 00:59:39,869
fact that's not feeling suggested to

1438
00:59:36,000 --> 00:59:42,659
this so let's just double check okay so

1439
00:59:39,869 --> 00:59:46,170
what we want here right is we've got

1440
00:59:42,659 --> 00:59:49,049
this is the origin this is the x-axis

1441
00:59:46,170 --> 00:59:51,000
point when we step out to it and so what

1442
00:59:49,050 --> 00:59:53,310
we want here is we want the perp of the

1443
00:59:51,000 --> 00:59:55,199
x-axis right which is going to go this

1444
00:59:53,309 --> 00:59:58,349
direction so we want the negative of

1445
00:59:55,199 --> 01:00:02,609
that negative perp x-axis that's correct

1446
00:59:58,349 --> 01:00:05,339
we then are here going this way on that

1447
01:00:02,610 --> 01:00:08,190
y-axis so we want to test that which is

1448
01:00:05,340 --> 01:00:09,420
going to be so the perp of this is going

1449
01:00:08,190 --> 01:00:12,690
to be pointing that way so it's the

1450
01:00:09,420 --> 01:00:17,519
negative perp of the y-axis right so

1451
01:00:12,690 --> 01:00:20,820
it's actually that right and then we go

1452
01:00:17,519 --> 01:00:27,000
this way we want the thing pointing that

1453
01:00:20,820 --> 01:00:28,410
way so that's going to be again for that

1454
01:00:27,000 --> 01:00:33,599
x-axis that's just going to be the perp

1455
01:00:28,409 --> 01:00:35,099
of the x axis so we just yet so so it's

1456
01:00:33,599 --> 01:00:37,170
a negative y-axis nativist that's just

1457
01:00:35,099 --> 01:00:39,389
that so that's that's the way that it

1458
01:00:37,170 --> 01:00:41,670
would be right and so once you do that

1459
01:00:39,389 --> 01:00:43,650
it'll work just fine so you can't take

1460
01:00:41,670 --> 01:00:45,300
the shortcut that I took before but but

1461
01:00:43,650 --> 01:00:50,010
if you if you don't take that shortcut

1462
01:00:45,300 --> 01:00:51,390
and and really so you know I'll I'll put

1463
01:00:50,010 --> 01:00:52,730
the Jews in here so we don't forget but

1464
01:00:51,389 --> 01:00:57,429
this is what I was going to do next

1465
01:00:52,730 --> 01:00:57,429
anyway perp dot products a perp inner

1466
01:00:58,659 --> 01:01:05,019
simpler origin calyx

1467
01:01:13,099 --> 01:01:19,470
he's downscaling bitmaps correctly

1468
01:01:15,809 --> 01:01:21,719
correctly slower than Oh is down

1469
01:01:19,469 --> 01:01:22,409
something bitmaps correctly slower than

1470
01:01:21,719 --> 01:01:26,338
upscaling

1471
01:01:22,409 --> 01:01:30,210
more color points to blend well it

1472
01:01:26,338 --> 01:01:33,179
depends what your it depends how the

1473
01:01:30,210 --> 01:01:38,010
answer in general is yes but it may not

1474
01:01:33,179 --> 01:01:39,899
be as yes as you think so the answer is

1475
01:01:38,010 --> 01:01:43,260
that typically nobody down scales

1476
01:01:39,900 --> 01:01:45,720
bitmaps more than 2x what they do

1477
01:01:43,260 --> 01:01:47,970
instead is they use mipmapping so

1478
01:01:45,719 --> 01:01:48,929
typically and we'll be doing this on the

1479
01:01:47,969 --> 01:01:50,219
stream although I don't know that will

1480
01:01:48,929 --> 01:01:53,608
actually need MIT maps but we'll be

1481
01:01:50,219 --> 01:01:58,019
doing the down sampling part so

1482
01:01:53,608 --> 01:01:59,429
typically what happens is this right so

1483
01:01:58,019 --> 01:02:01,619
let's say I want to down sample this

1484
01:01:59,429 --> 01:02:03,899
bitmap right so I want to make it

1485
01:02:01,619 --> 01:02:07,108
smaller and what I want to do is I want

1486
01:02:03,900 --> 01:02:09,150
to take this this block right and I want

1487
01:02:07,108 --> 01:02:11,670
it to become a single pixel so I've got

1488
01:02:09,150 --> 01:02:15,088
you know something like this right and

1489
01:02:11,670 --> 01:02:17,789
so on and I'm doing a 2x scale on the

1490
01:02:15,088 --> 01:02:21,900
two axes so basically these four right

1491
01:02:17,789 --> 01:02:25,289
map to here so this a actually takes its

1492
01:02:21,900 --> 01:02:26,400
values from all of these things right so

1493
01:02:25,289 --> 01:02:29,338
what I need to do there is I need to

1494
01:02:26,400 --> 01:02:31,588
sample four pixels right and I need to

1495
01:02:29,338 --> 01:02:33,328
produce I need to average them together

1496
01:02:31,588 --> 01:02:35,159
or do some other filter to get that a

1497
01:02:33,329 --> 01:02:39,390
that's a very simple it's called a box

1498
01:02:35,159 --> 01:02:42,000
filter right so that would be down

1499
01:02:39,389 --> 01:02:44,909
sampling right now if I was up sampling

1500
01:02:42,000 --> 01:02:47,068
I have to do the exact same thing right

1501
01:02:44,909 --> 01:02:49,379
to up sample what I need to do is I need

1502
01:02:47,068 --> 01:02:55,559
to again sample these but instead now

1503
01:02:49,380 --> 01:02:57,180
I'm producing many A's from it right so

1504
01:02:55,559 --> 01:03:00,150
instead now this is going to let's say

1505
01:02:57,179 --> 01:03:03,480
I'm up sampling by two right well now I

1506
01:03:00,150 --> 01:03:05,789
need to produce this region and so the a

1507
01:03:03,480 --> 01:03:09,300
is all fill falling here and what I do

1508
01:03:05,789 --> 01:03:11,639
is exactly the same thing right I to

1509
01:03:09,300 --> 01:03:13,619
compute this a or maybe this one's a

1510
01:03:11,639 --> 01:03:15,809
better example to compute this a right I

1511
01:03:13,619 --> 01:03:18,059
need to get all four of these and then

1512
01:03:15,809 --> 01:03:19,980
compute the sort of a weighted blend

1513
01:03:18,059 --> 01:03:21,690
between them that produces that sort of

1514
01:03:19,980 --> 01:03:23,400
you know oh it's a little bit more

1515
01:03:21,690 --> 01:03:24,039
towards this guy than the other four

1516
01:03:23,400 --> 01:03:27,610
right

1517
01:03:24,039 --> 01:03:29,110
that kind of thing right so up sampling

1518
01:03:27,610 --> 01:03:30,789
and down sampling are exactly as

1519
01:03:29,110 --> 01:03:35,110
expensive when you're only talking about

1520
01:03:30,789 --> 01:03:37,329
between you know 0.5 X and 2x they're

1521
01:03:35,110 --> 01:03:39,130
doing exactly the same thing the problem

1522
01:03:37,329 --> 01:03:41,230
comes when you have a greater than 2x

1523
01:03:39,130 --> 01:03:44,230
factor of shrinkage right so you're

1524
01:03:41,230 --> 01:03:46,420
doing like 0.25 X or something right but

1525
01:03:44,230 --> 01:03:47,949
the way that video cards and everyone

1526
01:03:46,420 --> 01:03:50,440
else do this to get around that problem

1527
01:03:47,949 --> 01:03:52,869
of well okay if I wanted to down sample

1528
01:03:50,440 --> 01:03:55,360
like this you know this thing and I'm

1529
01:03:52,869 --> 01:03:57,069
down something to just one pixel so I

1530
01:03:55,360 --> 01:03:58,660
got to do the whole map I want to down

1531
01:03:57,070 --> 01:04:00,550
sample to one pixel it's a super tiny

1532
01:03:58,659 --> 01:04:02,799
stretch right I've got to read all these

1533
01:04:00,550 --> 01:04:04,800
guys and produce this one pixel right or

1534
01:04:02,800 --> 01:04:06,910
something like that

1535
01:04:04,800 --> 01:04:08,350
that may seem like a lot of work but it

1536
01:04:06,909 --> 01:04:09,879
isn't because what they end up doing is

1537
01:04:08,349 --> 01:04:12,219
they just create MIT Maps which are pre

1538
01:04:09,880 --> 01:04:14,920
filtered versions so for every bitmap

1539
01:04:12,219 --> 01:04:15,819
let's say you have a 256 by 256 bitmap

1540
01:04:14,920 --> 01:04:19,380
right

1541
01:04:15,820 --> 01:04:23,650
they actually pre compute a 128 by 128

1542
01:04:19,380 --> 01:04:27,340
right then a 64 by 64 then a 32 by 32

1543
01:04:23,650 --> 01:04:31,360
then a 16 by 16 then an 8 by 8 then a 4

1544
01:04:27,340 --> 01:04:34,180
by 4 then a 2 by 2 and then a 1 by 1 and

1545
01:04:31,360 --> 01:04:37,269
what they do is they say how far down am

1546
01:04:34,179 --> 01:04:39,609
i scaling this if I'm scaling it from

1547
01:04:37,269 --> 01:04:47,409
its normal size all the way down to say

1548
01:04:39,610 --> 01:04:50,410
30 by 30 I will pull from the the mipmap

1549
01:04:47,409 --> 01:04:53,500
that is close to that the 32 so that I

1550
01:04:50,409 --> 01:04:56,319
know I'm still only sampling 4 pixels

1551
01:04:53,500 --> 01:04:59,679
for any pixel that I draw right I don't

1552
01:04:56,320 --> 01:05:02,080
have to sample some giant region like of

1553
01:04:59,679 --> 01:05:05,710
this thing I'm just sampling one little

1554
01:05:02,079 --> 01:05:06,730
4x4 and what the reason I say that it's

1555
01:05:05,710 --> 01:05:08,470
still more expensive is because

1556
01:05:06,730 --> 01:05:11,559
typically what you do is called

1557
01:05:08,469 --> 01:05:13,329
trilinear filtering here and what

1558
01:05:11,559 --> 01:05:16,989
trilinear filtering does is it samples

1559
01:05:13,329 --> 01:05:20,019
from both the next highest and next

1560
01:05:16,989 --> 01:05:22,869
lowest so they get samples for texels

1561
01:05:20,019 --> 01:05:24,519
from each of these to produce this guy

1562
01:05:22,869 --> 01:05:26,409
and blends the result together and the

1563
01:05:24,519 --> 01:05:27,880
reason for that is to prevent any

1564
01:05:26,409 --> 01:05:30,420
noticeable popping as you transition

1565
01:05:27,880 --> 01:05:30,420
between them

1566
01:05:33,969 --> 01:05:37,519
eventually will you implement

1567
01:05:35,659 --> 01:05:38,929
anti-aliasing into the rendering of the

1568
01:05:37,519 --> 01:05:43,369
rectangle or is that too much for the

1569
01:05:38,929 --> 01:05:45,019
CPU actually so the answer is yes we

1570
01:05:43,369 --> 01:05:47,179
will be implementing it but no we don't

1571
01:05:45,019 --> 01:05:50,030
actually need anti-aliasing of the

1572
01:05:47,179 --> 01:05:51,919
rectangle I don't want to explain why

1573
01:05:50,030 --> 01:05:53,720
quite yet but the reason is because

1574
01:05:51,920 --> 01:05:55,430
since we are pulling from alpha bitmaps

1575
01:05:53,719 --> 01:05:58,219
it turns out that will get anti-aliasing

1576
01:05:55,429 --> 01:06:00,469
for free so we don't have to use multi

1577
01:05:58,219 --> 01:06:03,189
sampling if you are actually drawing

1578
01:06:00,469 --> 01:06:06,349
actual shapes whose edges are visible

1579
01:06:03,190 --> 01:06:08,420
that's when you have to worry about that

1580
01:06:06,349 --> 01:06:10,429
anti-aliasing and just to be a little

1581
01:06:08,420 --> 01:06:12,559
more concrete on that what I mean is to

1582
01:06:10,429 --> 01:06:16,039
say here is if we are bleeding a bitmap

1583
01:06:12,559 --> 01:06:18,590
that has a border of 0 alpha around it

1584
01:06:16,039 --> 01:06:20,389
we get anti-aliasing for free as part of

1585
01:06:18,590 --> 01:06:22,570
our texture sampling our texture

1586
01:06:20,389 --> 01:06:24,859
sampling actually handles this for us

1587
01:06:22,570 --> 01:06:26,840
texture sampling handles the

1588
01:06:24,860 --> 01:06:29,480
anti-aliasing and we'll show how that

1589
01:06:26,840 --> 01:06:32,059
happens when we go there but if we were

1590
01:06:29,480 --> 01:06:34,309
actually drawing shapes so if we were

1591
01:06:32,059 --> 01:06:37,250
actually drawing a solid rectangle that

1592
01:06:34,309 --> 01:06:38,809
didn't have any alpha then we don't have

1593
01:06:37,250 --> 01:06:41,480
that texture sampling to save us and

1594
01:06:38,809 --> 01:06:44,360
that's why graphics cards have things

1595
01:06:41,480 --> 01:06:49,340
like MSAA or you know multi sampling

1596
01:06:44,360 --> 01:06:51,860
right it is not to anti-alias bitmaps

1597
01:06:49,340 --> 01:06:53,900
you never need MSA or any of that stuff

1598
01:06:51,860 --> 01:06:56,000
to anti-alias bitmap blitz that have

1599
01:06:53,900 --> 01:06:58,760
alpha in them what you need it for is

1600
01:06:56,000 --> 01:07:01,010
the edges so MSA and that stuff only

1601
01:06:58,760 --> 01:07:02,630
actually works on the edges of things

1602
01:07:01,010 --> 01:07:05,360
it's the only place you actually need it

1603
01:07:02,630 --> 01:07:07,579
to do stuff and so the way that that

1604
01:07:05,360 --> 01:07:09,860
works is it takes many samples inside a

1605
01:07:07,579 --> 01:07:12,529
pixel of the edges that pass through

1606
01:07:09,860 --> 01:07:14,210
them right and then uses that to sort of

1607
01:07:12,530 --> 01:07:15,710
smooth that edge but we don't have any

1608
01:07:14,210 --> 01:07:17,599
edges because we are always bleeding

1609
01:07:15,710 --> 01:07:19,909
bitmaps that have a contour that's

1610
01:07:17,599 --> 01:07:23,360
defined in the Alpha Channel so we don't

1611
01:07:19,909 --> 01:07:25,190
ever have to do this so fast or no we

1612
01:07:23,360 --> 01:07:27,349
just don't have to care we are going to

1613
01:07:25,190 --> 01:07:29,300
be doing this texture sampling because

1614
01:07:27,349 --> 01:07:30,529
we need that for quality and so the

1615
01:07:29,300 --> 01:07:31,610
anti-aliasing will just be baked into

1616
01:07:30,530 --> 01:07:35,540
that and we'll get it for free which is

1617
01:07:31,610 --> 01:07:37,460
nice none of what I just said would have

1618
01:07:35,539 --> 01:07:39,829
been true if we were rendering 3d shapes

1619
01:07:37,460 --> 01:07:43,220
that had contour is defined by polygons

1620
01:07:39,829 --> 01:07:44,809
right then that's that's when this comes

1621
01:07:43,219 --> 01:07:47,209
in and we're fortunate that we're not

1622
01:07:44,809 --> 01:07:49,639
doing that because yeah that that would

1623
01:07:47,210 --> 01:07:56,500
be a whole thing that the CPU would have

1624
01:07:49,639 --> 01:07:56,500
to do all right no more questions

1625
01:08:00,860 --> 01:08:08,809
it's a pretty hilarious little shape we

1626
01:08:02,989 --> 01:08:10,279
made there believe it or not you know I

1627
01:08:08,809 --> 01:08:12,079
mean what has it been two days or

1628
01:08:10,280 --> 01:08:13,580
something believe it or not we are just

1629
01:08:12,079 --> 01:08:16,039
not far

1630
01:08:13,579 --> 01:08:16,789
like from having rotated and scaled

1631
01:08:16,039 --> 01:08:20,449
bitmaps

1632
01:08:16,789 --> 01:08:21,920
in fact like we're we might even have

1633
01:08:20,449 --> 01:08:24,519
them tomorrow it depends on what order

1634
01:08:21,920 --> 01:08:26,750
we tend to we do things like I might

1635
01:08:24,520 --> 01:08:29,030
show you how to get the rotated scale

1636
01:08:26,750 --> 01:08:30,529
bitmap first but it's kind of janky and

1637
01:08:29,029 --> 01:08:32,659
then we'll go back and do a pass over

1638
01:08:30,529 --> 01:08:33,829
all of the math to show like okay how do

1639
01:08:32,659 --> 01:08:35,000
we make sure we're always some pixel

1640
01:08:33,829 --> 01:08:39,500
accurate how do we make sure where this

1641
01:08:35,000 --> 01:08:41,390
how many make sure were that but like I

1642
01:08:39,500 --> 01:08:44,119
said this stuff ain't that hard once you

1643
01:08:41,390 --> 01:08:46,430
kind of know how to do it it's actually

1644
01:08:44,119 --> 01:08:48,409
real simple it's just building up all

1645
01:08:46,430 --> 01:08:49,850
this knowledge of like how all these

1646
01:08:48,409 --> 01:08:51,798
things work and like having them

1647
01:08:49,850 --> 01:08:54,410
introduced to you in a reasonable way is

1648
01:08:51,798 --> 01:08:56,869
most is most of it once you actually see

1649
01:08:54,409 --> 01:08:58,489
it you're like oh like I mean you saw

1650
01:08:56,869 --> 01:09:00,710
what I did it was not that complicated

1651
01:08:58,489 --> 01:09:01,760
it was not that much complicated much

1652
01:09:00,710 --> 01:09:02,930
more company than just filling a

1653
01:09:01,760 --> 01:09:05,000
rectangle that was aligned with the

1654
01:09:02,930 --> 01:09:06,260
screen right real simple all you have to

1655
01:09:05,000 --> 01:09:07,729
do is just make that small step of like

1656
01:09:06,260 --> 01:09:09,980
okay let me define some other edges and

1657
01:09:07,729 --> 01:09:11,629
there we go now again it keeps layering

1658
01:09:09,979 --> 01:09:13,279
on top of each other and would you have

1659
01:09:11,630 --> 01:09:15,588
known to do all that stuff if it wasn't

1660
01:09:13,279 --> 01:09:17,389
for 30 years or 40 years of graphics

1661
01:09:15,588 --> 01:09:19,220
researchers figuring stuff out no right

1662
01:09:17,390 --> 01:09:21,079
but they have figured it all out

1663
01:09:19,220 --> 01:09:24,170
and so the nice thing is we can just

1664
01:09:21,079 --> 01:09:27,019
kind of keep you know leveraging all of

1665
01:09:24,170 --> 01:09:30,399
their work to very quickly go okay

1666
01:09:27,020 --> 01:09:30,400
here's how we do it we're good to go

1667
01:09:37,659 --> 01:09:55,149
Garlan doubloon historically did we ever

1668
01:09:40,369 --> 01:09:58,430
do anti-aliasing with CPU rendering well

1669
01:09:55,149 --> 01:10:01,819
that is a very good question and I don't

1670
01:09:58,430 --> 01:10:04,340
know the answer to it I mean obviously

1671
01:10:01,819 --> 01:10:06,649
we've done anti aliasing and CP

1672
01:10:04,340 --> 01:10:08,420
rendering for some definition for a

1673
01:10:06,649 --> 01:10:09,859
certain problem that means right but if

1674
01:10:08,420 --> 01:10:15,460
you're talking about game software

1675
01:10:09,859 --> 01:10:19,509
rendering of 3d stuff I don't know I

1676
01:10:15,460 --> 01:10:22,270
really don't it's not actually that

1677
01:10:19,510 --> 01:10:24,739
expensive probably to implement like

1678
01:10:22,270 --> 01:10:26,450
oddly enough I don't know that MSAA

1679
01:10:24,739 --> 01:10:28,609
would really actually be all that

1680
01:10:26,449 --> 01:10:31,130
expensive in software like it's

1681
01:10:28,609 --> 01:10:33,229
expensive but you only pay for it at

1682
01:10:31,130 --> 01:10:34,760
actual edges because anything that has a

1683
01:10:33,229 --> 01:10:37,309
complete coverage you don't actually

1684
01:10:34,760 --> 01:10:40,550
ever compute the msaa for it so it's

1685
01:10:37,310 --> 01:10:43,220
really just more of a sort of how of an

1686
01:10:40,550 --> 01:10:45,320
edge complexity thing how many edges are

1687
01:10:43,220 --> 01:10:47,930
there in the scene how many pixels are

1688
01:10:45,319 --> 01:10:49,880
are have edges passing through them

1689
01:10:47,930 --> 01:10:51,020
right so I don't know so I think it

1690
01:10:49,880 --> 01:10:52,699
wouldn't be that expensive mean usually

1691
01:10:51,020 --> 01:10:55,640
the expensive thing is texture sampling

1692
01:10:52,699 --> 01:10:57,559
right and and we're gonna see that like

1693
01:10:55,640 --> 01:10:59,450
that's what will that is texture

1694
01:10:57,560 --> 01:11:01,220
sampling is presumably I would suspect

1695
01:10:59,449 --> 01:11:02,779
texture sampling is going to be the

1696
01:11:01,220 --> 01:11:05,090
reason why we can't really use our

1697
01:11:02,779 --> 01:11:07,609
software rasterizer to shift the game

1698
01:11:05,090 --> 01:11:10,520
right we're never gonna get that as fast

1699
01:11:07,609 --> 01:11:13,420
as the GPUs have it and that's why you

1700
01:11:10,520 --> 01:11:15,980
use GPUs for a 2-d game it's it's that

1701
01:11:13,420 --> 01:11:18,619
ability to pull the textures through the

1702
01:11:15,979 --> 01:11:20,509
writes are probably not as big of a deal

1703
01:11:18,619 --> 01:11:23,420
I mean yes the GPU does a better job of

1704
01:11:20,510 --> 01:11:26,810
that too but it prob we could probably

1705
01:11:23,420 --> 01:11:28,190
get around that by tiling we could

1706
01:11:26,810 --> 01:11:31,100
probably get around that right so the

1707
01:11:28,189 --> 01:11:33,379
real killer is that texture sampling and

1708
01:11:31,100 --> 01:11:34,579
so msaa if we had to implement that

1709
01:11:33,380 --> 01:11:36,730
which we don't because we won't have a

1710
01:11:34,579 --> 01:11:38,960
use for it because we don't have edges

1711
01:11:36,729 --> 01:11:40,879
but even if we did that probably

1712
01:11:38,960 --> 01:11:42,140
wouldn't be the biggest deal I bet MSA

1713
01:11:40,880 --> 01:11:43,430
really wouldn't be that big of a deal

1714
01:11:42,140 --> 01:11:44,690
for us because the texture sampling

1715
01:11:43,430 --> 01:11:46,610
would still be would probably still

1716
01:11:44,689 --> 01:11:48,669
dominate or run time that's just my

1717
01:11:46,609 --> 01:11:48,670
guess

1718
01:11:50,319 --> 01:12:01,009
so alright looks like we're done with on

1719
01:11:56,180 --> 01:12:02,750
topics so I'm gonna postpone anything

1720
01:12:01,010 --> 01:12:04,850
more till tomorrow when we will talk

1721
01:12:02,750 --> 01:12:07,219
about you know what I think we we should

1722
01:12:04,850 --> 01:12:09,079
just keep the trend of just like getting

1723
01:12:07,219 --> 01:12:10,699
the first thing going and then go back

1724
01:12:09,079 --> 01:12:11,899
and revisit so I think we maybe will do

1725
01:12:10,699 --> 01:12:15,159
it in two ways what we'll do is we'll

1726
01:12:11,899 --> 01:12:17,389
we'll just get a janky bitmap Phil going

1727
01:12:15,159 --> 01:12:19,279
so we'll fill this with an actual

1728
01:12:17,390 --> 01:12:21,739
texture like we'll map the guy's head in

1729
01:12:19,279 --> 01:12:24,349
there or something we'll do that

1730
01:12:21,738 --> 01:12:25,849
tomorrow and Friday or whatever and then

1731
01:12:24,350 --> 01:12:27,739
next week what we'll do is we'll start

1732
01:12:25,850 --> 01:12:30,170
on going through and cleaning up all

1733
01:12:27,738 --> 01:12:32,359
that math so that everything is just so

1734
01:12:30,170 --> 01:12:34,039
and we can be pretty happy that things

1735
01:12:32,359 --> 01:12:37,519
are in the right place before we start

1736
01:12:34,039 --> 01:12:41,269
any optimization work but yeah good work

1737
01:12:37,520 --> 01:12:44,330
today people good work today we filled a

1738
01:12:41,270 --> 01:12:45,980
rotated scaling shape and another thing

1739
01:12:44,329 --> 01:12:47,269
that that you know we didn't quite

1740
01:12:45,979 --> 01:12:50,959
mention but that might be worth

1741
01:12:47,270 --> 01:12:53,750
mentioning is this will work for any

1742
01:12:50,960 --> 01:12:56,119
convex shape right that inclusion test

1743
01:12:53,750 --> 01:12:58,760
that idea of checking all the edges and

1744
01:12:56,119 --> 01:13:00,409
seeing if they're all inside any convex

1745
01:12:58,760 --> 01:13:04,699
shape that'll work so we could actually

1746
01:13:00,409 --> 01:13:07,909
have an arbitrary end gone essentially

1747
01:13:04,699 --> 01:13:10,719
as long as it's always was with convex

1748
01:13:07,909 --> 01:13:13,760
and didn't have like any you know in

1749
01:13:10,719 --> 01:13:17,659
notches cut into it basically it would

1750
01:13:13,760 --> 01:13:20,090
work and if you want to you can even use

1751
01:13:17,659 --> 01:13:22,760
the same sort of a test to do something

1752
01:13:20,090 --> 01:13:24,560
for concave shapes it's just again we

1753
01:13:22,760 --> 01:13:26,539
don't need those frame things so I'm

1754
01:13:24,560 --> 01:13:29,539
sticking with the stuff that's the most

1755
01:13:26,539 --> 01:13:30,890
accelerate able because you know you

1756
01:13:29,539 --> 01:13:32,659
always want to do the fastest thing you

1757
01:13:30,890 --> 01:13:38,810
can for what for the for the thing that

1758
01:13:32,659 --> 01:13:44,409
you need alright so I'll go ahead and

1759
01:13:38,810 --> 01:13:46,610
wrap that up here close things down

1760
01:13:44,409 --> 01:13:49,069
let's go ahead and save our mischief

1761
01:13:46,609 --> 01:13:51,500
board I don't know how big that files

1762
01:13:49,069 --> 01:13:53,059
gotten probably pretty big huh all right

1763
01:13:51,500 --> 01:13:54,649
thank you everyone for joining me for

1764
01:13:53,060 --> 01:13:56,180
another episode of hand made hero it has

1765
01:13:54,649 --> 01:13:57,979
been a pleasure coding with as always

1766
01:13:56,180 --> 01:14:02,180
and I gotta be honest with you software

1767
01:13:57,979 --> 01:14:03,319
rasterizer are just so much darn fun

1768
01:14:02,180 --> 01:14:05,329
collision detection is always a

1769
01:14:03,319 --> 01:14:06,409
nightmare it's always bogged down when

1770
01:14:05,329 --> 01:14:08,359
we do clear detection when you do

1771
01:14:06,409 --> 01:14:09,289
rasterization it's just so much fun like

1772
01:14:08,359 --> 01:14:10,849
I had a blast

1773
01:14:09,289 --> 01:14:13,340
yesterday and today doing the coding was

1774
01:14:10,850 --> 01:14:14,750
just fun and and pulling the bitmaps

1775
01:14:13,340 --> 01:14:16,610
tomorrow is gonna be a blast I hope

1776
01:14:14,750 --> 01:14:19,069
you'll join me for that 5:00 p.m. same

1777
01:14:16,609 --> 01:14:20,449
time same place we'll go ahead and do

1778
01:14:19,069 --> 01:14:22,429
that and I think it'll be a lot of fun

1779
01:14:20,449 --> 01:14:24,439
what is it oh it's Thursday already

1780
01:14:22,430 --> 01:14:26,240
I said Thursday Friday oh man so we've

1781
01:14:24,439 --> 01:14:28,250
only got an hour we've got an hour new

1782
01:14:26,239 --> 01:14:31,099
bitmap sampling tomorrow all right we

1783
01:14:28,250 --> 01:14:33,560
can do it I think we can do it I don't

1784
01:14:31,100 --> 01:14:35,390
know we'll see I'll think about it I'll

1785
01:14:33,560 --> 01:14:37,550
give it a little thought between now and

1786
01:14:35,390 --> 01:14:38,990
then and see if I can align the things I

1787
01:14:37,550 --> 01:14:40,460
need to teach in just the right way so

1788
01:14:38,989 --> 01:14:42,949
that we can make sure that we fitted in

1789
01:14:40,460 --> 01:14:44,270
in an hour if not maybe we go long

1790
01:14:42,949 --> 01:14:46,250
maybe tomorrow's the day we go along

1791
01:14:44,270 --> 01:14:48,980
because we wouldn't you know one hour

1792
01:14:46,250 --> 01:14:50,060
two I think we'll be able to do it so

1793
01:14:48,979 --> 01:14:51,829
anyway I hope you'll join me for that

1794
01:14:50,060 --> 01:14:53,270
it's been a lot of fun I think it'll

1795
01:14:51,829 --> 01:14:55,250
keep being a lot of fun so I'd love to

1796
01:14:53,270 --> 01:14:57,470
see you back here tomorrow for that

1797
01:14:55,250 --> 01:14:59,510
anyway if you want to follow along at

1798
01:14:57,470 --> 01:15:00,440
home of course and and check out some of

1799
01:14:59,510 --> 01:15:02,360
the stuff that we've been doing

1800
01:15:00,439 --> 01:15:04,009
you can always pre-order the game on

1801
01:15:02,359 --> 01:15:06,469
hand made here org it comes with a

1802
01:15:04,010 --> 01:15:08,360
source code as we do it every day so you

1803
01:15:06,470 --> 01:15:09,949
can download it and play with it just

1804
01:15:08,359 --> 01:15:12,469
like I did on the stream and and do

1805
01:15:09,949 --> 01:15:14,389
whatever you want to do to kind of you

1806
01:15:12,470 --> 01:15:16,940
know learn more effectively by trial and

1807
01:15:14,390 --> 01:15:18,050
error basically right so if you want to

1808
01:15:16,939 --> 01:15:19,159
do that you can pre-order it here we

1809
01:15:18,050 --> 01:15:20,239
also have a patreon if you want to

1810
01:15:19,159 --> 01:15:22,599
support the video series you can always

1811
01:15:20,239 --> 01:15:24,739
subscribe to that it's much appreciated

1812
01:15:22,600 --> 01:15:27,260
and we have a forum site where you can

1813
01:15:24,739 --> 01:15:28,609
ask questions as well and there's also

1814
01:15:27,260 --> 01:15:29,720
community ports to Linux and Mac and

1815
01:15:28,609 --> 01:15:31,279
stuff like that there if you wanna check

1816
01:15:29,720 --> 01:15:33,140
those out and we have a tweet bot but

1817
01:15:31,279 --> 01:15:35,960
tweets the schedule at you so if you

1818
01:15:33,140 --> 01:15:37,670
want to catch the video series live that

1819
01:15:35,960 --> 01:15:40,100
is the thing to subscribe to it will

1820
01:15:37,670 --> 01:15:41,300
tell you every day it sends out in the

1821
01:15:40,100 --> 01:15:42,740
morning when it's gonna be and then an

1822
01:15:41,300 --> 01:15:44,029
hour beforehand so it always gives you a

1823
01:15:42,739 --> 01:15:46,130
big heads up

1824
01:15:44,029 --> 01:15:49,189
alright thanks everyone for joining me I

1825
01:15:46,130 --> 01:15:50,720
will see you tomorrow hopefully if not

1826
01:15:49,189 --> 01:15:53,119
have a wonderful weekend and I'll see

1827
01:15:50,720 --> 01:15:55,510
you on Monday either way so take it easy

1828
01:15:53,119 --> 01:15:55,510
everyone

