1
00:00:01,909 --> 00:00:05,849
hello everyone and welcome to hand made

2
00:00:04,440 --> 00:00:13,109
here oh sure we code a complete game

3
00:00:05,849 --> 00:00:15,859
live on stream we are probably in a good

4
00:00:13,109 --> 00:00:19,679
position to upgrade our profiler today

5
00:00:15,859 --> 00:00:23,129
we fixed a bunch of sort of sensitive

6
00:00:19,679 --> 00:00:24,689
stuff with it before yesterday it could

7
00:00:23,129 --> 00:00:27,210
not do a couple things like it did not

8
00:00:24,689 --> 00:00:28,618
profile across code reloads and you know

9
00:00:27,210 --> 00:00:30,719
sort of some pretty complicated

10
00:00:28,618 --> 00:00:32,368
intricate little little things in there

11
00:00:30,719 --> 00:00:35,159
but we fixed them and so now our

12
00:00:32,368 --> 00:00:37,979
profiling seems to be pretty solid but

13
00:00:35,159 --> 00:00:40,409
our view like we have not really spent

14
00:00:37,979 --> 00:00:42,569
any time rendering our profile and so

15
00:00:40,409 --> 00:00:44,849
it's it's not really very usable right

16
00:00:42,570 --> 00:00:46,710
now so even though you can get sort of a

17
00:00:44,850 --> 00:00:49,530
basic idea of what's going on with our

18
00:00:46,710 --> 00:00:52,948
profiler we need to take a little bit

19
00:00:49,530 --> 00:00:54,420
more of a close like we kind of got to

20
00:00:52,948 --> 00:00:56,399
get down into there in some place where

21
00:00:54,420 --> 00:00:58,469
we're actually slaying it and give it

22
00:00:56,399 --> 00:01:02,340
some upgrades like actually allow it to

23
00:00:58,469 --> 00:01:04,558
show you know sort of more detailed

24
00:01:02,340 --> 00:01:06,390
information give us a way to interact

25
00:01:04,558 --> 00:01:09,390
with it that makes sense

26
00:01:06,390 --> 00:01:11,549
we need to sort of get get that going so

27
00:01:09,390 --> 00:01:13,950
I am going to start playing around with

28
00:01:11,549 --> 00:01:16,650
that today and if you want to follow

29
00:01:13,950 --> 00:01:19,439
along with me at home and you are one of

30
00:01:16,650 --> 00:01:21,359
those folks who has purchased the

31
00:01:19,438 --> 00:01:25,679
pre-order of the game

32
00:01:21,359 --> 00:01:27,000
make sure you unpack day 258 source code

33
00:01:25,680 --> 00:01:30,450
because that is the source code that I'm

34
00:01:27,000 --> 00:01:34,500
starting with at the moment so let's

35
00:01:30,450 --> 00:01:37,469
just make a brief sort of let me give

36
00:01:34,500 --> 00:01:42,569
you a brief reminder of where we are in

37
00:01:37,469 --> 00:01:43,649
terms of terms of the profiler and what

38
00:01:42,569 --> 00:01:47,279
we might want to do with it

39
00:01:43,649 --> 00:01:52,228
so at the moment you can kind of see

40
00:01:47,280 --> 00:01:54,450
here we've got our we've got our

41
00:01:52,228 --> 00:01:55,978
cutscene going here and we really don't

42
00:01:54,450 --> 00:01:57,149
have anything in the way of UI for this

43
00:01:55,978 --> 00:01:59,310
in fact it does it's not even smart

44
00:01:57,149 --> 00:02:01,739
enough to start large in a way that we

45
00:01:59,310 --> 00:02:03,659
can even view and all we really have

46
00:02:01,739 --> 00:02:06,089
right now is the top level thing being

47
00:02:03,659 --> 00:02:08,069
displayed by them and then the threads

48
00:02:06,090 --> 00:02:09,598
that have ever been seen the system

49
00:02:08,068 --> 00:02:11,488
there's nothing getting loaded in the

50
00:02:09,598 --> 00:02:13,199
separate threads at the moment so they

51
00:02:11,489 --> 00:02:15,030
don't show up as anytime take

52
00:02:13,199 --> 00:02:17,009
whatsoever at this point but there are

53
00:02:15,030 --> 00:02:19,979
reserved slots for them at the moment

54
00:02:17,009 --> 00:02:22,739
and I can sort of move over here and I

55
00:02:19,979 --> 00:02:24,568
can ask like what any particular thing

56
00:02:22,739 --> 00:02:26,128
was we can get the file and line number

57
00:02:24,568 --> 00:02:28,199
where that block began and how many

58
00:02:26,128 --> 00:02:29,518
cycles it took and it's obviously

59
00:02:28,199 --> 00:02:31,169
graphically displayed in terms of

60
00:02:29,519 --> 00:02:35,069
percentages we can see that right now we

61
00:02:31,169 --> 00:02:38,129
really even when we go into the game in

62
00:02:35,068 --> 00:02:39,509
in release mode this was pretty tiny so

63
00:02:38,129 --> 00:02:41,280
there's really not much work going on

64
00:02:39,509 --> 00:02:44,280
right now if we don't include all the

65
00:02:41,280 --> 00:02:47,430
debug like if we if we actually compile

66
00:02:44,280 --> 00:02:49,979
in release mode but basically this is

67
00:02:47,430 --> 00:02:53,069
just the top level so let's say for

68
00:02:49,979 --> 00:02:54,869
example we were curious about why we're

69
00:02:53,068 --> 00:02:58,289
taking so much more time in debug mode

70
00:02:54,870 --> 00:02:59,610
than release mode right because for

71
00:02:58,289 --> 00:03:01,889
those of you who were here yesterday we

72
00:02:59,610 --> 00:03:03,630
ran in release mode this red block was a

73
00:03:01,889 --> 00:03:05,879
tiny little sliver in release mode in

74
00:03:03,629 --> 00:03:07,500
debug mode it's nearly a third of the

75
00:03:05,879 --> 00:03:10,439
frame there or maybe exactly a tenth

76
00:03:07,500 --> 00:03:12,689
flame possibly I should say even more

77
00:03:10,439 --> 00:03:13,889
than throw to frame so why is game

78
00:03:12,689 --> 00:03:16,650
update takes so much longer in release

79
00:03:13,889 --> 00:03:18,599
mode is it in debug mode is it actually

80
00:03:16,650 --> 00:03:20,670
just because the optimizing compiler

81
00:03:18,599 --> 00:03:22,019
does that much more stuff to it or is

82
00:03:20,669 --> 00:03:25,048
there something that we're doing in

83
00:03:22,019 --> 00:03:26,609
debug mode like checking that takes all

84
00:03:25,049 --> 00:03:27,810
that time and maybe we want to get rid

85
00:03:26,609 --> 00:03:29,790
of those checks or make those checks

86
00:03:27,810 --> 00:03:31,109
optional so that they don't slow us down

87
00:03:29,789 --> 00:03:33,509
in debug mode you know stuff like that

88
00:03:31,109 --> 00:03:36,030
is interesting to see we can't see it

89
00:03:33,509 --> 00:03:37,828
right now so it would be nice if our

90
00:03:36,030 --> 00:03:39,989
profiler could you know click on this or

91
00:03:37,829 --> 00:03:42,719
something or have there be some way that

92
00:03:39,989 --> 00:03:45,750
we could make this be interactive in a

93
00:03:42,719 --> 00:03:47,009
way that that is useful right and

94
00:03:45,750 --> 00:03:49,019
furthermore you'll notice that like

95
00:03:47,009 --> 00:03:50,849
things behind this thing are still

96
00:03:49,019 --> 00:03:52,769
interactive at the moment and we don't

97
00:03:50,849 --> 00:03:54,750
want that either we solve that problem

98
00:03:52,769 --> 00:03:56,459
right our system handles that graceful

99
00:03:54,750 --> 00:03:58,379
you can see that if you're over this you

100
00:03:56,459 --> 00:03:59,879
don't get any highlights for like these

101
00:03:58,379 --> 00:04:00,900
things here right like there I'm

102
00:03:59,879 --> 00:04:02,879
highlighting it but as soon as I move

103
00:04:00,900 --> 00:04:04,439
over this it stops so our our system is

104
00:04:02,879 --> 00:04:06,449
like unified in terms of hit handling

105
00:04:04,439 --> 00:04:08,219
but right now we don't even mark any of

106
00:04:06,449 --> 00:04:09,179
this as as hittable so if you're

107
00:04:08,219 --> 00:04:10,379
hovering over it

108
00:04:09,180 --> 00:04:11,819
you can still select things underneath

109
00:04:10,379 --> 00:04:12,269
it which is surely not what we want it

110
00:04:11,818 --> 00:04:14,219
anyway

111
00:04:12,269 --> 00:04:15,629
so all of that stuff is busted and we

112
00:04:14,219 --> 00:04:19,470
would like to sort of get in there and

113
00:04:15,629 --> 00:04:20,788
fix that I think we also I'll double

114
00:04:19,470 --> 00:04:22,560
check locks I guess we can do this

115
00:04:20,788 --> 00:04:25,889
without you even change thing if I

116
00:04:22,560 --> 00:04:27,689
change over to software rendering

117
00:04:25,889 --> 00:04:30,538
I'm pretty sure there's a way to do that

118
00:04:27,689 --> 00:04:32,039
somewhere I like that

119
00:04:30,538 --> 00:04:34,468
so if we change over to software

120
00:04:32,038 --> 00:04:37,378
rendering I think we also saw some

121
00:04:34,468 --> 00:04:39,209
weirdness yeah you can kind of see if we

122
00:04:37,379 --> 00:04:42,539
change over to software rendering we get

123
00:04:39,209 --> 00:04:46,680
a nonsensical display here right you can

124
00:04:42,538 --> 00:04:47,908
see that we have like it's all pink and

125
00:04:46,680 --> 00:04:50,999
I don't know what's going on and I just

126
00:04:47,908 --> 00:04:54,990
remember this being weird and it's like

127
00:04:50,999 --> 00:04:57,860
it's filling the box right so it's like

128
00:04:54,990 --> 00:05:00,389
it's not like it's not drawing anything

129
00:04:57,860 --> 00:05:02,430
but it's definitely a little confusing

130
00:05:00,389 --> 00:05:05,668
as to what it's doing and I'm not sure

131
00:05:02,430 --> 00:05:08,009
what the you know I I don't really know

132
00:05:05,668 --> 00:05:09,959
why that's happening so I would be

133
00:05:08,009 --> 00:05:11,968
interested also to take a look at what

134
00:05:09,959 --> 00:05:13,348
is going on with the profile render I

135
00:05:11,968 --> 00:05:15,629
don't think it's a problem with the

136
00:05:13,348 --> 00:05:19,938
actual profile because you can kind of

137
00:05:15,629 --> 00:05:21,990
see that as I'm moving I'm still getting

138
00:05:19,939 --> 00:05:23,400
you know debug original I think the

139
00:05:21,990 --> 00:05:25,019
profile is actually working

140
00:05:23,399 --> 00:05:27,209
I just can't interact with it properly

141
00:05:25,019 --> 00:05:30,718
and so I was wondering if maybe our

142
00:05:27,209 --> 00:05:33,149
multi thread rendering is busted because

143
00:05:30,718 --> 00:05:36,500
when we're in the other mode when we're

144
00:05:33,149 --> 00:05:38,908
back in this mode you will notice that

145
00:05:36,500 --> 00:05:40,228
we are not actually drawing anything on

146
00:05:38,908 --> 00:05:43,139
the other threads really because they

147
00:05:40,228 --> 00:05:44,968
hardly ever hit and so I'm wondering if

148
00:05:43,139 --> 00:05:46,500
maybe there's actually bugs in that

149
00:05:44,968 --> 00:05:48,120
multi-threaded stuff that we're just not

150
00:05:46,500 --> 00:05:52,019
because we aren't really using the other

151
00:05:48,120 --> 00:05:54,329
threads yet in the in the non software

152
00:05:52,019 --> 00:05:57,778
render case maybe we're just not seeing

153
00:05:54,329 --> 00:05:59,728
them for that reason so that's like the

154
00:05:57,778 --> 00:06:02,098
state of the profiler and obviously just

155
00:05:59,728 --> 00:06:05,158
a ton of work we can do there so let's

156
00:06:02,098 --> 00:06:07,829
do some of it or at least start

157
00:06:05,158 --> 00:06:09,718
we've got draw a profile in is the

158
00:06:07,829 --> 00:06:11,579
function that draws our profiler

159
00:06:09,718 --> 00:06:13,769
first thing I'm going to do is just take

160
00:06:11,579 --> 00:06:18,240
a look to see if it makes sense to me

161
00:06:13,769 --> 00:06:20,899
why we're not drawing multiple threads

162
00:06:18,240 --> 00:06:20,899
correctly

163
00:06:24,319 --> 00:06:29,790
so if I take a look at what we're seeing

164
00:06:27,149 --> 00:06:32,069
here you can kind of see that we've got

165
00:06:29,790 --> 00:06:34,620
a rectangle that draws at the beginning

166
00:06:32,069 --> 00:06:36,149
and that rectangle is just to sort of

167
00:06:34,620 --> 00:06:39,629
darken the background it's basically a

168
00:06:36,149 --> 00:06:41,519
backing rectangle and that was why it

169
00:06:39,629 --> 00:06:45,509
was a little darker behind the profile

170
00:06:41,519 --> 00:06:48,000
window we then have some information

171
00:06:45,509 --> 00:06:50,459
here where we try to compute what the

172
00:06:48,000 --> 00:06:52,649
lane height is the way we do that is we

173
00:06:50,459 --> 00:06:55,589
look at how many lanes there are total

174
00:06:52,649 --> 00:06:56,939
and we then say okay however many lanes

175
00:06:55,589 --> 00:06:58,349
there are total we're going to divide

176
00:06:56,939 --> 00:06:59,819
the total height by that

177
00:06:58,350 --> 00:07:02,400
now that appeared to be working because

178
00:06:59,819 --> 00:07:05,339
you'll notice we only have three active

179
00:07:02,399 --> 00:07:07,529
lanes at three active threads in the

180
00:07:05,339 --> 00:07:09,359
hardware renderer they're the two asset

181
00:07:07,529 --> 00:07:12,419
loading threads and the main game thread

182
00:07:09,360 --> 00:07:14,759
we never launched really any other tasks

183
00:07:12,420 --> 00:07:16,290
on any other threads so our assists our

184
00:07:14,759 --> 00:07:18,300
profiler would never see any other

185
00:07:16,290 --> 00:07:23,010
activity on the high priority queues

186
00:07:18,300 --> 00:07:25,500
where the other four threads are so we

187
00:07:23,009 --> 00:07:27,149
saw a nice three division which is right

188
00:07:25,500 --> 00:07:29,819
then when we search a software renderer

189
00:07:27,149 --> 00:07:30,959
the profile system finally saw those so

190
00:07:29,819 --> 00:07:32,519
the threads come in and you notice all

191
00:07:30,959 --> 00:07:35,939
the parts got tinier even when we switch

192
00:07:32,519 --> 00:07:37,918
back so this this Lane count thing I my

193
00:07:35,939 --> 00:07:40,500
observation of what I saw there I

194
00:07:37,918 --> 00:07:42,359
believe it to be working properly now we

195
00:07:40,500 --> 00:07:43,680
come down through here and I want to see

196
00:07:42,360 --> 00:07:46,259
whether or not the thing that actually

197
00:07:43,680 --> 00:07:47,759
draws things into lanes is actually

198
00:07:46,259 --> 00:07:50,459
making sense because for all I know

199
00:07:47,759 --> 00:07:53,219
maybe that's busted who knows so let's

200
00:07:50,459 --> 00:07:55,560
take a look here we are with our stored

201
00:07:53,220 --> 00:07:58,410
event system we're looping over all of

202
00:07:55,560 --> 00:08:00,478
the immediate children of the root node

203
00:07:58,410 --> 00:08:02,760
that we're trying to profile we are

204
00:08:00,478 --> 00:08:04,319
drawing it by saying okay let's grab a

205
00:08:02,759 --> 00:08:06,300
color that's just based off the grid

206
00:08:04,319 --> 00:08:08,969
pointer again there's really no rhyme or

207
00:08:06,300 --> 00:08:13,280
reason that we just need some pointer

208
00:08:08,970 --> 00:08:16,950
there right and here we are with

209
00:08:13,279 --> 00:08:18,389
computing the min and Max X I'm assuming

210
00:08:16,949 --> 00:08:19,589
the minimax X are computed properly

211
00:08:18,389 --> 00:08:22,680
because they looked like there it could

212
00:08:19,589 --> 00:08:24,509
be computed properly in the main bar and

213
00:08:22,680 --> 00:08:25,769
they certainly look correct here so I

214
00:08:24,509 --> 00:08:28,709
don't suspect as any throughout the

215
00:08:25,769 --> 00:08:32,458
computation and that seems borne out by

216
00:08:28,709 --> 00:08:34,259
what we see visually now here in the Y

217
00:08:32,458 --> 00:08:36,429
computation you can see we're doing a

218
00:08:34,259 --> 00:08:38,830
rectum in max here is the min and

219
00:08:36,429 --> 00:08:41,379
X and then here is my computation for

220
00:08:38,830 --> 00:08:43,240
what the min and Max why are you can see

221
00:08:41,379 --> 00:08:45,490
we've got the lane index here oh well

222
00:08:43,240 --> 00:08:48,278
there you go so for starters we're never

223
00:08:45,490 --> 00:08:49,810
actually setting this lane index so

224
00:08:48,278 --> 00:08:51,730
that's gonna be a problem regardless

225
00:08:49,809 --> 00:08:53,949
that means that everything is being

226
00:08:51,730 --> 00:08:55,089
drawn into lane zero even if it was on

227
00:08:53,950 --> 00:08:56,800
some other Lane

228
00:08:55,089 --> 00:08:59,010
now the profile nodes themselves I

229
00:08:56,799 --> 00:09:02,588
believe we've already done the work

230
00:08:59,009 --> 00:09:04,240
right I'm pretty sure that we've done

231
00:09:02,589 --> 00:09:05,890
the work of figuring out what Lane they

232
00:09:04,240 --> 00:09:07,620
should be in because we're doing that

233
00:09:05,889 --> 00:09:10,539
during the collation now so I feel like

234
00:09:07,620 --> 00:09:12,820
like thread ordinal is is all we really

235
00:09:10,539 --> 00:09:14,500
need to know so I feel like we can just

236
00:09:12,820 --> 00:09:16,629
go ahead and say that the lane index is

237
00:09:14,500 --> 00:09:18,220
a thread ordinal now at least we're

238
00:09:16,629 --> 00:09:19,600
starting with a little bit more of a

239
00:09:18,220 --> 00:09:22,269
reasonable thing now we're starting at

240
00:09:19,600 --> 00:09:23,830
the max y and we're moving backwards so

241
00:09:22,269 --> 00:09:25,899
we're saying that the min is going to be

242
00:09:23,830 --> 00:09:29,920
the lane index plus 1 times the line

243
00:09:25,899 --> 00:09:32,049
height and the the max is going to be

244
00:09:29,919 --> 00:09:33,639
lame with index plus zero that seems

245
00:09:32,049 --> 00:09:37,120
about right to me

246
00:09:33,639 --> 00:09:38,588
basically that saying start at the one

247
00:09:37,120 --> 00:09:40,240
down from where you're going to be and

248
00:09:38,589 --> 00:09:42,640
then go up which is you know two preusse

249
00:09:40,240 --> 00:09:44,528
the minute max remember y is going it

250
00:09:42,639 --> 00:09:46,230
increases as we go upwards on the screen

251
00:09:44,528 --> 00:09:48,399
because we're in math coordinates here

252
00:09:46,230 --> 00:09:52,240
not screen coordinates where oftentimes

253
00:09:48,399 --> 00:09:54,458
y would go increasing down so here we

254
00:09:52,240 --> 00:09:56,889
have our push rect call we're pushing

255
00:09:54,458 --> 00:09:57,969
the REC that we created there that seems

256
00:09:56,889 --> 00:09:59,830
reasonable as well

257
00:09:57,970 --> 00:10:01,810
we take a look to see whether or not the

258
00:09:59,830 --> 00:10:03,790
mouse is in the rectangle and then we do

259
00:10:01,809 --> 00:10:06,219
this print out this should probably be

260
00:10:03,789 --> 00:10:08,139
switched to an interaction as well or at

261
00:10:06,220 --> 00:10:10,570
least that interaction should be added

262
00:10:08,139 --> 00:10:12,039
to it again to allow for clicking and

263
00:10:10,570 --> 00:10:13,839
stuff so that might be the next thing

264
00:10:12,039 --> 00:10:17,949
I'm gonna take a look to see what we end

265
00:10:13,839 --> 00:10:19,900
up getting here with our with our change

266
00:10:17,950 --> 00:10:22,740
to having the lanes drawn correctly I'm

267
00:10:19,899 --> 00:10:25,028
not sure what that will do for us but

268
00:10:22,740 --> 00:10:27,370
we'll see we should maybe see some noise

269
00:10:25,028 --> 00:10:29,588
down here during loads as well yeah you

270
00:10:27,370 --> 00:10:32,919
saw them right there that was the asset

271
00:10:29,589 --> 00:10:34,600
system loading in there and so now let's

272
00:10:32,919 --> 00:10:38,439
take a look at what happens if we switch

273
00:10:34,600 --> 00:10:41,129
to the software renderer so it looks

274
00:10:38,440 --> 00:10:43,390
like now you know I'm seeing I'm

275
00:10:41,129 --> 00:10:45,338
definitely seeing the hover work

276
00:10:43,389 --> 00:10:47,199
properly and it just seems like our

277
00:10:45,339 --> 00:10:49,540
rectangle fill is a little bit broken

278
00:10:47,200 --> 00:10:50,019
while we're in here what I'd like to do

279
00:10:49,539 --> 00:10:52,659
is

280
00:10:50,019 --> 00:10:54,100
turn off the background fill like get

281
00:10:52,659 --> 00:10:56,019
rid of this to see if there's some kind

282
00:10:54,100 --> 00:10:59,139
of weirdness there so it looks like it

283
00:10:56,019 --> 00:11:00,970
looks like that background fill is a

284
00:10:59,139 --> 00:11:03,579
little busted and I'm not sure why

285
00:11:00,970 --> 00:11:05,230
because here is what we would expect to

286
00:11:03,578 --> 00:11:07,688
see in our software profile and we do

287
00:11:05,230 --> 00:11:09,009
here's the main game thread running here

288
00:11:07,688 --> 00:11:10,269
are the two asset loading threads

289
00:11:09,009 --> 00:11:12,548
they're not doing anything at the moment

290
00:11:10,269 --> 00:11:14,259
and here are our child render work

291
00:11:12,548 --> 00:11:15,850
threads you can see them each taking a

292
00:11:14,259 --> 00:11:18,339
little bit of time but they basically

293
00:11:15,850 --> 00:11:19,659
kick off roughly the same time and end

294
00:11:18,339 --> 00:11:22,569
depending on how much work they had to

295
00:11:19,659 --> 00:11:25,298
do so that's you know roughly what we

296
00:11:22,568 --> 00:11:27,548
would expect kind of cool right I really

297
00:11:25,298 --> 00:11:32,669
enjoy having tools like this you can

298
00:11:27,548 --> 00:11:32,669
actually see what's going on excuse me

299
00:11:33,899 --> 00:11:38,889
so that's kind of nice and we we can

300
00:11:36,639 --> 00:11:42,759
sort of see what's happening there so

301
00:11:38,889 --> 00:11:45,579
that's lovely now what I don't know is

302
00:11:42,759 --> 00:11:54,419
why that background clear only seems to

303
00:11:45,578 --> 00:11:54,419
work in the in the the this phase I

304
00:11:54,509 --> 00:12:00,850
don't know I don't know why that would

305
00:11:58,269 --> 00:12:03,568
be the case I'm a little confused by

306
00:12:00,850 --> 00:12:03,569
that to say the least

307
00:12:10,429 --> 00:12:18,359
why would that be the case why would it

308
00:12:14,399 --> 00:12:19,948
be first of all it may be in fact it

309
00:12:18,360 --> 00:12:25,289
probably is the fact that we don't

310
00:12:19,948 --> 00:12:26,939
support alpha blending with like it's

311
00:12:25,289 --> 00:12:29,068
probably the case that we don't have

312
00:12:26,940 --> 00:12:33,050
alpha blending for our rectangle right

313
00:12:29,068 --> 00:12:34,679
that seems like it's probably true

314
00:12:33,049 --> 00:12:36,629
because I don't know that we ever

315
00:12:34,679 --> 00:12:38,039
implemented a read-modify-write for

316
00:12:36,629 --> 00:12:42,750
active well no you know what we might we

317
00:12:38,039 --> 00:12:44,519
might have we should check that but what

318
00:12:42,750 --> 00:12:46,259
I don't understand is let's say that it

319
00:12:44,519 --> 00:12:48,778
was just the alpha or something that was

320
00:12:46,259 --> 00:12:51,300
broken what I don't understand is why

321
00:12:48,778 --> 00:12:54,328
it's drawing pure purple and why it's

322
00:12:51,299 --> 00:12:56,729
drawing purple on top right

323
00:12:54,328 --> 00:12:58,318
like if it was drawing solid in the

324
00:12:56,730 --> 00:13:00,839
background and then still drawing the

325
00:12:58,318 --> 00:13:03,539
threads on top of it that would make me

326
00:13:00,839 --> 00:13:04,649
expect oh the render the drawing routine

327
00:13:03,539 --> 00:13:06,568
is just a little bit busted in the

328
00:13:04,649 --> 00:13:07,948
software under because I don't know why

329
00:13:06,568 --> 00:13:09,568
we were concentrating bitmaps and we

330
00:13:07,948 --> 00:13:13,769
hadn't looked at solid rectangles in a

331
00:13:09,568 --> 00:13:15,958
while or I don't know what but given

332
00:13:13,769 --> 00:13:18,778
that that's not what I'm seeing this

333
00:13:15,958 --> 00:13:20,369
feels like that the sort is wrong but

334
00:13:18,778 --> 00:13:23,818
that the sort is only wrong in the

335
00:13:20,370 --> 00:13:26,009
software renderer right and so that's

336
00:13:23,818 --> 00:13:35,250
what that feels like is happening but

337
00:13:26,009 --> 00:13:38,789
I'm not sure I don't know hmm so what's

338
00:13:35,250 --> 00:13:43,708
the problem there we're drawing this to

339
00:13:38,789 --> 00:13:44,939
the backing transform and we're drawing

340
00:13:43,708 --> 00:13:47,250
these rectangles to the back and

341
00:13:44,940 --> 00:13:49,620
transform so maybe that's actually just

342
00:13:47,250 --> 00:13:52,289
kind of wrong and we really need another

343
00:13:49,620 --> 00:13:55,679
Z level there that does seem possible

344
00:13:52,289 --> 00:13:57,360
right that there'd be a backing

345
00:13:55,679 --> 00:13:59,068
transform a drawing transform and then

346
00:13:57,360 --> 00:14:03,209
kind of forward it's like look we would

347
00:13:59,068 --> 00:14:06,870
need more Z's effectively I could see

348
00:14:03,208 --> 00:14:09,719
that being the case and so it's possible

349
00:14:06,870 --> 00:14:16,110
that it's just the sort that is being

350
00:14:09,720 --> 00:14:18,360
weird and and I guess what I wouldn't

351
00:14:16,110 --> 00:14:20,399
know at that point is why the hardware

352
00:14:18,360 --> 00:14:22,139
renderer doesn't sort the same way as a

353
00:14:20,399 --> 00:14:23,909
software renderer because they should

354
00:14:22,139 --> 00:14:25,528
both sort the same

355
00:14:23,909 --> 00:14:27,389
and actually since they're sorting by

356
00:14:25,528 --> 00:14:30,539
why you would expect this one probably

357
00:14:27,389 --> 00:14:33,060
to be above all the time so I don't

358
00:14:30,539 --> 00:14:34,439
really know I'm a little bit confused

359
00:14:33,059 --> 00:14:36,299
whether that's a little bit perplexing

360
00:14:34,440 --> 00:14:40,050
it doesn't make perfect sense to me I'll

361
00:14:36,299 --> 00:14:43,708
be completely honest with you it's a

362
00:14:40,049 --> 00:14:45,539
little weird a little bit weird so yeah

363
00:14:43,708 --> 00:14:55,799
let's see here if I were to make another

364
00:14:45,539 --> 00:15:01,879
one of these so we've got you know where

365
00:14:55,799 --> 00:15:01,879
this is I don't know you buy a transform

366
00:15:14,600 --> 00:15:18,750
this is probably not the best way to do

367
00:15:17,190 --> 00:15:22,089
this either like it seems like we want a

368
00:15:18,750 --> 00:15:29,350
more granular way but you know

369
00:15:22,089 --> 00:15:30,879
we'll we'll stick with it for now so I'm

370
00:15:29,350 --> 00:15:32,980
moving this to another layer that's in

371
00:15:30,879 --> 00:15:40,350
between I just want to see if that

372
00:15:32,980 --> 00:15:42,819
changes it so there's the profile right

373
00:15:40,350 --> 00:15:44,579
seems to be working okay here's the

374
00:15:42,818 --> 00:15:48,219
platform controls going to turn them on

375
00:15:44,578 --> 00:15:50,588
and so that did fix this sort yeah so

376
00:15:48,220 --> 00:15:52,899
that's fine but I don't know why it's

377
00:15:50,589 --> 00:15:54,759
purple still so we still have another

378
00:15:52,899 --> 00:15:57,789
kind of weird thing going on there like

379
00:15:54,759 --> 00:16:01,620
that should not be purple and I would

380
00:15:57,789 --> 00:16:04,990
like to know why it's purple if I go to

381
00:16:01,620 --> 00:16:08,730
the handmade render code I don't really

382
00:16:04,990 --> 00:16:14,709
know what happens with a draw rectangle

383
00:16:08,730 --> 00:16:17,610
it does well that that does not look

384
00:16:14,708 --> 00:16:19,659
right I'll admit that

385
00:16:17,610 --> 00:16:21,938
if that's the code we're actually

386
00:16:19,659 --> 00:16:26,708
calling for draw rectangle that doesn't

387
00:16:21,938 --> 00:16:34,259
actually support alpha alpha blending

388
00:16:26,708 --> 00:16:34,258
does it yeah

389
00:16:37,379 --> 00:16:45,850
so at the moment our draw rectangle code

390
00:16:40,509 --> 00:16:48,610
does not actually support alpha blending

391
00:16:45,850 --> 00:16:52,259
at all it would seem so

392
00:16:48,610 --> 00:16:54,250
that is probably why that doesn't work

393
00:16:52,259 --> 00:17:06,990
although I'm not sure why it would be

394
00:16:54,250 --> 00:17:06,990
pink because we're passing black right

395
00:17:07,980 --> 00:17:14,529
we're passing black with an alpha of

396
00:17:10,359 --> 00:17:21,369
0.25 so I'm not sure why we would get

397
00:17:14,529 --> 00:17:23,190
that result specifically but you know

398
00:17:21,369 --> 00:17:30,699
fixing this would not be too difficult

399
00:17:23,190 --> 00:17:36,279
certainly if we were to take a look here

400
00:17:30,700 --> 00:17:38,500
at the well I guess we don't have to

401
00:17:36,279 --> 00:17:43,450
really do that if we were to unpack the

402
00:17:38,500 --> 00:17:46,690
pixels here we could presumably do our

403
00:17:43,450 --> 00:17:48,549
alpha blending just fine so it would be

404
00:17:46,690 --> 00:17:50,650
nice to write this routine as an

405
00:17:48,549 --> 00:17:54,669
optimized routine right it would be nice

406
00:17:50,650 --> 00:17:57,340
to take a draw rectangle quickly and do

407
00:17:54,670 --> 00:18:00,090
that properly and I guess you know one

408
00:17:57,339 --> 00:18:02,799
thing we could do if we wanted to is

409
00:18:00,089 --> 00:18:06,720
take a look at draw rectangle quickly

410
00:18:02,799 --> 00:18:13,149
and actually just sort of cut it down to

411
00:18:06,720 --> 00:18:18,819
two you know to be just the thing that

412
00:18:13,150 --> 00:18:21,160
draws a rectangle we could actually do

413
00:18:18,819 --> 00:18:24,039
that and use essentially the exact same

414
00:18:21,160 --> 00:18:26,170
ops here that we were doing and just get

415
00:18:24,039 --> 00:18:28,779
rid of all the Texel stuff we could do

416
00:18:26,170 --> 00:18:33,160
that I'm not sure it's worth our time to

417
00:18:28,779 --> 00:18:34,660
do it but we could do it and I don't

418
00:18:33,160 --> 00:18:39,070
know let's see how long that would take

419
00:18:34,660 --> 00:18:41,320
us I don't know seems worth maintaining

420
00:18:39,069 --> 00:18:46,049
a little bit of parity here just for fun

421
00:18:41,319 --> 00:18:46,049
so here's our draw a rectangle code

422
00:18:46,309 --> 00:18:51,799
and here is our filling code right so we

423
00:18:49,819 --> 00:18:56,119
kind of know as we go through these

424
00:18:51,799 --> 00:18:59,029
which one we're doing so I guess I would

425
00:18:56,119 --> 00:19:02,059
want to sort of keep to a certain extent

426
00:18:59,029 --> 00:19:03,769
this notion of what we're filling

427
00:19:02,059 --> 00:19:06,619
between that's this code right here

428
00:19:03,769 --> 00:19:08,569
right the min max X this this

429
00:19:06,619 --> 00:19:13,819
information I guess and then I'm gonna

430
00:19:08,569 --> 00:19:21,950
just if zero this out and then put it in

431
00:19:13,819 --> 00:19:24,950
this new code here like so so let's take

432
00:19:21,950 --> 00:19:26,750
a look we still want to pre multiply our

433
00:19:24,950 --> 00:19:29,269
color presumably that shouldn't change

434
00:19:26,750 --> 00:19:30,890
we don't need to know any of these

435
00:19:29,269 --> 00:19:32,450
access length things because we're not

436
00:19:30,890 --> 00:19:35,870
rotating this rectangle this rectangle

437
00:19:32,450 --> 00:19:38,539
is supposed to be screen oriented I

438
00:19:35,869 --> 00:19:40,699
believe we could still support the

439
00:19:38,539 --> 00:19:44,599
rotation I just don't know whether

440
00:19:40,700 --> 00:19:47,120
that's something we care about so I'm

441
00:19:44,599 --> 00:19:49,549
gonna say no for now so I'm gonna say we

442
00:19:47,119 --> 00:19:55,179
don't care about any of this right we

443
00:19:49,549 --> 00:20:00,230
don't care about any of this at all

444
00:19:55,180 --> 00:20:01,910
let's see Phil rect so we know our fill

445
00:20:00,230 --> 00:20:04,849
rec we already have our fill rect it's

446
00:20:01,910 --> 00:20:07,700
there so we don't care about any of this

447
00:20:04,849 --> 00:20:12,559
I don't think so I think we can just

448
00:20:07,700 --> 00:20:15,080
start with this all we have to do is

449
00:20:12,559 --> 00:20:17,839
intersect our clip region which I assume

450
00:20:15,079 --> 00:20:19,730
we pass yes all we have to do is

451
00:20:17,839 --> 00:20:22,809
intersect our clip region with our fill

452
00:20:19,730 --> 00:20:27,500
region then we can go ahead and do our

453
00:20:22,809 --> 00:20:29,119
our testing our clipping masks all that

454
00:20:27,500 --> 00:20:34,640
stuff this should all be exactly the

455
00:20:29,119 --> 00:20:37,239
same we can then I think get rid of most

456
00:20:34,640 --> 00:20:37,240
of this stuff

457
00:20:38,029 --> 00:20:43,079
probably a lot of that can just go away

458
00:20:40,548 --> 00:20:45,808
we'll take a look in a minute we don't

459
00:20:43,079 --> 00:20:47,909
have any texture memory we don't have

460
00:20:45,808 --> 00:20:53,190
any of like this stuff texture pitch or

461
00:20:47,910 --> 00:20:57,620
any of that let's see what else we got

462
00:20:53,190 --> 00:21:04,548
here let's see what else we got

463
00:20:57,619 --> 00:21:10,109
all of this stuff can stay for now and

464
00:21:04,548 --> 00:21:13,349
this stuff will all still be here we'll

465
00:21:10,109 --> 00:21:15,719
just have to fix the defines below so

466
00:21:13,349 --> 00:21:19,289
let's see we've got all of our pixel

467
00:21:15,720 --> 00:21:23,579
fill we've got our clipping we've got

468
00:21:19,289 --> 00:21:29,069
our destination we've got our U and Vees

469
00:21:23,579 --> 00:21:32,189
which we don't need anymore fetch we are

470
00:21:29,069 --> 00:21:33,899
not doing none of this right because

471
00:21:32,190 --> 00:21:37,080
this is all Texas stuff this is all our

472
00:21:33,900 --> 00:21:39,660
fetch our Texel fetch we don't want any

473
00:21:37,079 --> 00:21:42,750
Texel fetch we don't want any violence

474
00:21:39,660 --> 00:21:46,429
and we just want to load the destination

475
00:21:42,750 --> 00:21:48,660
then we want to go ahead and convert

476
00:21:46,429 --> 00:21:51,509
well we don't need to convert that the

477
00:21:48,660 --> 00:21:53,730
texels actually at all I don't think we

478
00:21:51,509 --> 00:21:55,440
don't need to do the bilinear blend we

479
00:21:53,730 --> 00:21:57,509
do need to do the modulate by the

480
00:21:55,440 --> 00:22:01,710
incoming color in the sense that we just

481
00:21:57,509 --> 00:22:03,629
need it to be the color right so

482
00:22:01,710 --> 00:22:05,548
whatever the actual incoming color is

483
00:22:03,630 --> 00:22:06,270
that's what we actually want here

484
00:22:05,548 --> 00:22:15,740
exactly

485
00:22:06,269 --> 00:22:15,740
no mul PS necessary there's that color

486
00:22:16,660 --> 00:22:24,790
and then we are clamping the color

487
00:22:20,589 --> 00:22:25,839
values we don't we don't really need any

488
00:22:24,789 --> 00:22:28,119
of this

489
00:22:25,839 --> 00:22:30,059
I don't think we'll leave it for now but

490
00:22:28,119 --> 00:22:33,849
we don't really need to do any of that

491
00:22:30,059 --> 00:22:35,589
we've got our our gamma correction which

492
00:22:33,849 --> 00:22:38,609
is all good our destination blend and

493
00:22:35,589 --> 00:22:48,369
all of this stuff looks about right so

494
00:22:38,609 --> 00:22:50,559
that's fine all right

495
00:22:48,369 --> 00:22:57,819
these are undeclared identifiers that is

496
00:22:50,559 --> 00:22:58,869
true I'm gonna get rid of them there we

497
00:22:57,819 --> 00:23:00,609
go

498
00:22:58,869 --> 00:23:02,349
and I guess we have a pixel inclusion

499
00:23:00,609 --> 00:23:05,259
test here now that I think about it we

500
00:23:02,349 --> 00:23:07,839
don't want to do the pixel inclusion

501
00:23:05,259 --> 00:23:10,720
test we just want to see like whether

502
00:23:07,839 --> 00:23:13,990
the the all we need to know is

503
00:23:10,720 --> 00:23:19,620
essentially which pixels whether we're

504
00:23:13,990 --> 00:23:19,620
inside the the X&amp;Y properly right

505
00:23:27,710 --> 00:23:36,899
let me see what actually happens there

506
00:23:31,220 --> 00:23:38,819
so pixel P Y P Y X n I don't think we

507
00:23:36,898 --> 00:23:40,949
need I don't think we need or want any

508
00:23:38,819 --> 00:23:47,178
of these things right we don't want the

509
00:23:40,950 --> 00:23:47,179
U or the V or any of that

510
00:23:47,480 --> 00:23:54,650
pixal PX not sure if we care about that

511
00:23:50,779 --> 00:24:00,980
either let's see I get rid of these for

512
00:23:54,650 --> 00:24:03,170
now and I'm gonna go ahead and loft

513
00:24:00,980 --> 00:24:05,180
these things up because now they're used

514
00:24:03,170 --> 00:24:07,190
by multiple people so I'm just gonna say

515
00:24:05,180 --> 00:24:08,900
that those come here I'm gonna delete

516
00:24:07,190 --> 00:24:12,590
them from the other place where they

517
00:24:08,900 --> 00:24:14,480
occur which is here and I'm gonna move

518
00:24:12,589 --> 00:24:16,699
the Ayaka stuff up to the top again

519
00:24:14,480 --> 00:24:23,000
because that's something we might use to

520
00:24:16,700 --> 00:24:31,450
profile that we can alright so let's see

521
00:24:23,000 --> 00:24:31,450
here so the right mask and the clip mask

522
00:24:32,319 --> 00:24:40,429
actually should be the same right so we

523
00:24:37,759 --> 00:24:49,150
shouldn't have to do this at all

524
00:24:40,430 --> 00:24:49,150
we should just be able to do this right

525
00:24:55,240 --> 00:25:02,440
and this just needs to be defined and

526
00:24:58,700 --> 00:25:10,029
then I think we're pretty close to good

527
00:25:02,440 --> 00:25:10,029
pixel px don't care about that all right

528
00:25:10,049 --> 00:25:17,549
so in theory now we have a draw a

529
00:25:13,950 --> 00:25:21,120
rectangle call in theory that we'll do

530
00:25:17,549 --> 00:25:25,230
our fill for us with alpha blending I

531
00:25:21,119 --> 00:25:30,409
think that is my assertion anyway I'm

532
00:25:25,230 --> 00:25:33,539
pretty sure don't quote me on that and

533
00:25:30,410 --> 00:25:42,900
is it actually currently drawing these

534
00:25:33,539 --> 00:25:50,220
let's find out it doesn't look like

535
00:25:42,900 --> 00:25:52,050
reloaded for whatever reason oh you know

536
00:25:50,220 --> 00:25:53,940
why it probably didn't is because this

537
00:25:52,049 --> 00:25:58,440
is now built into the platform layer at

538
00:25:53,940 --> 00:26:01,558
the moment because we didn't make a

539
00:25:58,440 --> 00:26:04,740
third layer for the renderer all right

540
00:26:01,558 --> 00:26:08,759
so let's go ahead and see what that code

541
00:26:04,740 --> 00:26:10,019
does we are actually in it now so we can

542
00:26:08,759 --> 00:26:13,170
we should be able to see what it

543
00:26:10,019 --> 00:26:14,789
actually looks like well that's not very

544
00:26:13,170 --> 00:26:19,080
good is it

545
00:26:14,789 --> 00:26:21,659
I don't see any rectangles at all which

546
00:26:19,079 --> 00:26:26,819
is not a very good amount of rectangles

547
00:26:21,660 --> 00:26:34,170
let's see what we messed up here let's

548
00:26:26,819 --> 00:26:36,329
set a breakpoint here we go so I

549
00:26:34,170 --> 00:26:39,240
probably should be I would rather be

550
00:26:36,329 --> 00:26:44,928
single threaded here but of course let's

551
00:26:39,240 --> 00:26:47,929
see who we got

552
00:26:44,929 --> 00:26:47,929
let's

553
00:26:49,630 --> 00:26:55,270
let's look at just this thread if we can

554
00:26:52,900 --> 00:27:00,390
I want to look at just this thread can I

555
00:26:55,269 --> 00:27:00,389
step thread do we have step thread here

556
00:27:02,849 --> 00:27:19,919
I'm gonna go with no frieze threads

557
00:27:12,869 --> 00:27:23,500
collapse groups fan groups expands yeah

558
00:27:19,920 --> 00:27:25,450
well I'll tell you what if you don't

559
00:27:23,500 --> 00:27:28,089
want to make it easy for me to step

560
00:27:25,450 --> 00:27:40,269
threads then I will simply turn off all

561
00:27:28,089 --> 00:27:46,929
the threads how do you like that here's

562
00:27:40,269 --> 00:27:48,279
the high priority queue right so if

563
00:27:46,930 --> 00:27:50,740
instead of the high priority queue

564
00:27:48,279 --> 00:27:53,589
actually working I just said that there

565
00:27:50,740 --> 00:27:58,839
were no things in the high priority

566
00:27:53,589 --> 00:28:01,169
queue I'm assuming I could get it down

567
00:27:58,839 --> 00:28:01,169
to one

568
00:28:03,410 --> 00:28:10,740
okay so here we are on the main thread

569
00:28:07,500 --> 00:28:13,890
doing our rendering and our rectangle

570
00:28:10,740 --> 00:28:16,069
has an area which is a bummer to say the

571
00:28:13,890 --> 00:28:16,070
least

572
00:28:16,250 --> 00:28:23,460
let's figure out if our rectangles ever

573
00:28:18,390 --> 00:28:26,700
have any area well that would do it

574
00:28:23,460 --> 00:28:29,970
apparently our fill rect on our cliprect

575
00:28:26,700 --> 00:28:31,799
never intersect so we never actually get

576
00:28:29,970 --> 00:28:34,110
to any of our rendering code which would

577
00:28:31,799 --> 00:28:34,769
be good reason why we would never see a

578
00:28:34,109 --> 00:28:42,059
rectangle

579
00:28:34,769 --> 00:28:44,609
I should think I'm not sure why that

580
00:28:42,059 --> 00:28:46,980
would be this is the same code in each

581
00:28:44,609 --> 00:28:50,129
case so I'm gonna leave it actually

582
00:28:46,980 --> 00:28:52,950
there I'm not sure why we would never

583
00:28:50,130 --> 00:28:54,750
see a rectangle maybe I need to make

584
00:28:52,950 --> 00:29:00,710
sure there was more of one to begin with

585
00:28:54,750 --> 00:29:00,710
I mean there's an obvious rectangle

586
00:29:01,549 --> 00:29:08,839
there we go

587
00:29:03,829 --> 00:29:14,839
so now we can actually look and see

588
00:29:08,839 --> 00:29:18,869
where we are at set up some stuff and

589
00:29:14,839 --> 00:29:23,970
look at the watch window so I mean ymax

590
00:29:18,869 --> 00:29:25,709
y min x max X obviously plenty to fill

591
00:29:23,970 --> 00:29:35,940
there so let's see why we are not

592
00:29:25,710 --> 00:29:42,180
filling the right mask is equal to the

593
00:29:35,940 --> 00:29:47,910
clip mask so what is our right mask our

594
00:29:42,180 --> 00:29:50,759
right mask is all set so it should right

595
00:29:47,910 --> 00:29:55,400
everywhere we are loading the

596
00:29:50,759 --> 00:29:55,400
destination in we are taking our colors

597
00:29:56,240 --> 00:29:59,240
that's

598
00:30:04,900 --> 00:30:10,360
that's not what's going on here

599
00:30:11,109 --> 00:30:24,679
there we go there's an A in there right

600
00:30:13,430 --> 00:30:29,840
so shouldn't okay there we go

601
00:30:24,680 --> 00:30:33,350
all right just want to make sure all

602
00:30:29,839 --> 00:30:35,329
right so our Texel are our textile gr

603
00:30:33,349 --> 00:30:37,730
Tex will be our all-black which is what

604
00:30:35,329 --> 00:30:41,359
we would expect we're squaring to get to

605
00:30:37,730 --> 00:30:46,819
absence we're doing our blend so we're

606
00:30:41,359 --> 00:30:49,009
gonna multiply by the textile alpha so

607
00:30:46,819 --> 00:30:54,309
this is just giving us what our blends

608
00:30:49,009 --> 00:30:54,309
should be which should be 75% right

609
00:30:55,390 --> 00:31:11,990
although I guess if it's well what is

610
00:31:01,789 --> 00:31:13,309
our inverse textile a so our textile a

611
00:31:11,990 --> 00:31:17,380
is two five two five two five two five

612
00:31:13,309 --> 00:31:17,379
our inverse X will a

613
00:31:21,990 --> 00:31:52,380
he's point nine nine oh I see I see is

614
00:31:41,380 --> 00:31:54,700
our alpha in the right format here

615
00:31:52,380 --> 00:31:57,430
because these are all going to be 255

616
00:31:54,700 --> 00:31:59,920
ish and we're multiplying right so this

617
00:31:57,430 --> 00:32:03,850
is just to convert the destination into

618
00:31:59,920 --> 00:32:06,210
zero to one space so that seems fine

619
00:32:03,849 --> 00:32:06,209
actually

620
00:32:19,420 --> 00:32:33,080
so that seems pretty reasonable I feel

621
00:32:24,019 --> 00:32:38,529
like we should be seeing that but we so

622
00:32:33,079 --> 00:32:42,859
totally are not seeing that right

623
00:32:38,529 --> 00:32:43,579
nothing looked obviously wrong there to

624
00:32:42,859 --> 00:32:50,299
me anyway

625
00:32:43,579 --> 00:32:52,250
and I guess we should look to see are we

626
00:32:50,299 --> 00:32:55,089
always just producing the exact same

627
00:32:52,250 --> 00:32:55,089
pixel value

628
00:33:03,099 --> 00:33:08,289
our right mask is still full I didn't

629
00:33:07,009 --> 00:33:11,900
start to like 30 minutes in today so

630
00:33:08,289 --> 00:33:15,170
we're so not in Q&amp;A right now

631
00:33:11,900 --> 00:33:17,330
I should probably actually only start

632
00:33:15,170 --> 00:33:19,670
the timer when I actually start about

633
00:33:17,329 --> 00:33:21,829
what're you gonna do

634
00:33:19,670 --> 00:33:24,470
so there's the right mask it's full

635
00:33:21,829 --> 00:33:28,849
here's the pixel value that we're

636
00:33:24,470 --> 00:33:34,549
writing into right that's where we're

637
00:33:28,849 --> 00:33:43,719
that's our destination target and here's

638
00:33:34,549 --> 00:33:46,970
our output value let's see here

639
00:33:43,720 --> 00:33:53,779
well we are definitely producing the

640
00:33:46,970 --> 00:33:55,960
exact same value there's no question

641
00:33:53,779 --> 00:33:59,750
about that

642
00:33:55,960 --> 00:34:12,880
so I guess the thing that I need to

643
00:33:59,750 --> 00:34:18,550
figure out is why why are we producing

644
00:34:12,880 --> 00:34:18,550
the wrong alpha blend

645
00:34:29,519 --> 00:34:35,429
I think what I would like to do is just

646
00:34:33,418 --> 00:34:37,440
use structured art here for a minute I

647
00:34:35,429 --> 00:34:39,898
think that'd make it a little bit easier

648
00:34:37,440 --> 00:34:42,599
for me to track so what I'm thinking is

649
00:34:39,898 --> 00:34:45,000
instead of setting these as the actual

650
00:34:42,599 --> 00:34:47,398
correct color values what I'm going to

651
00:34:45,000 --> 00:34:49,530
do is instead just stuff the color value

652
00:34:47,398 --> 00:34:52,319
so I think what I'll do is I'll say oh

653
00:34:49,530 --> 00:34:55,710
you know the color R is gonna be 1.0 the

654
00:34:52,320 --> 00:35:05,460
color you know G is gonna be 1.0 and so

655
00:34:55,710 --> 00:35:07,289
on maybe I'll do it so I can see the

656
00:35:05,460 --> 00:35:20,070
channel so there'll be no green just

657
00:35:07,289 --> 00:35:21,029
aren't be okay and so let's take a look

658
00:35:20,070 --> 00:35:24,530
at what we get here

659
00:35:21,030 --> 00:35:27,420
our you know we have our textile our

660
00:35:24,530 --> 00:35:33,690
f/32 actually I don't remember how you

661
00:35:27,420 --> 00:35:35,909
get these it's this guy there's our text

662
00:35:33,690 --> 00:35:38,760
red values which are all ones which is

663
00:35:35,909 --> 00:35:44,009
what I would expect here's our

664
00:35:38,760 --> 00:35:47,130
destination our value which is what

665
00:35:44,010 --> 00:35:49,850
nines I guess and then when we do our

666
00:35:47,130 --> 00:35:49,849
blended our

667
00:35:52,800 --> 00:35:58,850
we get a three this makes it seem

668
00:36:06,449 --> 00:36:10,679
I feel like I'm not understanding that

669
00:36:09,420 --> 00:36:13,048
the space these are in because it's been

670
00:36:10,679 --> 00:36:18,149
a long time since we did this when we

671
00:36:13,048 --> 00:36:19,889
modulate by the incoming color the

672
00:36:18,150 --> 00:36:24,150
incoming color is in zero to one space

673
00:36:19,889 --> 00:36:29,868
the the destination is in zero two to

674
00:36:24,150 --> 00:36:29,869
five space right but it looks like

675
00:36:38,809 --> 00:36:48,829
it looks like we're okay we modulate by

676
00:36:45,920 --> 00:36:51,920
the incoming color but the Texel values

677
00:36:48,829 --> 00:36:55,630
were still 0 to 255 so that's where the

678
00:36:51,920 --> 00:37:01,970
255 came from so basically we have to

679
00:36:55,630 --> 00:37:10,220
re-encode this RGB to be 255 right so

680
00:37:01,969 --> 00:37:11,989
basically this has to happen first in

681
00:37:10,219 --> 00:37:15,589
order to bring everything up to the

682
00:37:11,989 --> 00:37:17,689
correct level if that makes sense

683
00:37:15,590 --> 00:37:19,220
because everything is actually zero to

684
00:37:17,690 --> 00:37:22,869
one space we need it in 0 to 5 space

685
00:37:19,219 --> 00:37:22,869
because we're no longer loading a Texel

686
00:37:22,900 --> 00:37:27,980
so in order to slot in where the Texel

687
00:37:25,909 --> 00:37:31,489
would have slotted in we need that to

688
00:37:27,980 --> 00:37:33,050
actually work now the roughness code is

689
00:37:31,489 --> 00:37:34,819
not the code you would actually write

690
00:37:33,050 --> 00:37:37,070
just to fill a rectangle but I was just

691
00:37:34,820 --> 00:37:43,900
trying to use the minimum amount of sub

692
00:37:37,070 --> 00:37:47,260
change you know I'm saying all right

693
00:37:43,900 --> 00:37:50,750
it's still not getting color properly

694
00:37:47,260 --> 00:37:56,290
our alpha looks right but our color

695
00:37:50,750 --> 00:37:56,289
looks wrong what happened there

696
00:37:56,380 --> 00:38:04,690
RGB a for our texels RGB a

697
00:38:07,340 --> 00:38:15,900
pre-multiplying the color up front seems

698
00:38:12,690 --> 00:38:21,110
like it should be okay is the a value

699
00:38:15,900 --> 00:38:21,110
not is the a value handled differently

700
00:38:21,380 --> 00:38:31,099
no because the Texel a value which comes

701
00:38:28,289 --> 00:38:31,099
in right here

702
00:38:34,480 --> 00:38:37,619
he's actually fine

703
00:38:44,949 --> 00:38:51,159
mmm so why are we getting all the same

704
00:38:48,710 --> 00:38:51,159
color

705
00:38:59,230 --> 00:39:06,940
blended are blended G blended B times

706
00:39:02,300 --> 00:39:06,940
the R squirt PS

707
00:39:15,269 --> 00:39:25,710
we multiply we multiply our color value

708
00:39:21,909 --> 00:39:25,710
by its reciprocal square root

709
00:39:32,389 --> 00:39:40,009
all right anyway let's see here so we

710
00:39:38,059 --> 00:39:42,950
have our destination blend we've got our

711
00:39:40,010 --> 00:39:47,269
textile a and we do one minus that all

712
00:39:42,949 --> 00:39:49,338
of those seem correct to me so I'm not

713
00:39:47,268 --> 00:39:52,028
sure why our color is not being passed

714
00:39:49,338 --> 00:39:52,028
through properly

715
00:39:52,719 --> 00:39:59,480
maybe our color values aren't what I

716
00:39:56,719 --> 00:40:03,078
think they are but I'm pretty sure they

717
00:39:59,480 --> 00:40:08,240
wouldn't have been blown out to 255 255

718
00:40:03,079 --> 00:40:11,630
255 to anything other than you know the

719
00:40:08,239 --> 00:40:15,739
zero to one range so it seems to me now

720
00:40:11,630 --> 00:40:19,490
let me go double check actually in in

721
00:40:15,739 --> 00:40:24,399
this case I'm going to take a look at

722
00:40:19,489 --> 00:40:24,399
draw rectangle quickly

723
00:40:27,079 --> 00:40:32,000
I wanted to see what it does to the

724
00:40:29,599 --> 00:40:35,659
color values here so it does the

725
00:40:32,000 --> 00:40:41,630
pre-multiply and then just leaves them

726
00:40:35,659 --> 00:40:44,299
in that format right yeah and that seems

727
00:40:41,630 --> 00:40:46,579
fine and we do the same thing here

728
00:40:44,300 --> 00:40:48,850
pretty multiply the color value waltz

729
00:40:46,579 --> 00:40:51,769
Dylan's very one range then blow it out

730
00:40:48,849 --> 00:40:53,599
do we not want to do that with the I

731
00:40:51,769 --> 00:40:55,699
feel like we want that even for the

732
00:40:53,599 --> 00:40:58,190
Alpha we want that to happen basically

733
00:40:55,699 --> 00:40:59,659
across all the color values so I'm

734
00:40:58,190 --> 00:41:06,380
pretty sure that's what we want

735
00:40:59,659 --> 00:41:09,739
everywhere yeah so I'm not sure why

736
00:41:06,380 --> 00:41:15,730
we're not getting why the color channels

737
00:41:09,739 --> 00:41:15,729
seem to be unseparated

738
00:41:18,000 --> 00:41:46,420
like why why is that happening someone

739
00:41:24,849 --> 00:41:53,528
explain what is our max what is this max

740
00:41:46,420 --> 00:41:55,568
color value nonsense here ah so this

741
00:41:53,528 --> 00:41:58,599
looks suspicious as well so we were

742
00:41:55,568 --> 00:42:02,849
actually doing things in double it looks

743
00:41:58,599 --> 00:42:06,099
like our blends when we load them in are

744
00:42:02,849 --> 00:42:14,798
into two to five times they're in

745
00:42:06,099 --> 00:42:19,720
squared space right so really we need to

746
00:42:14,798 --> 00:42:22,599
square the color first as well does that

747
00:42:19,719 --> 00:42:25,149
make sense because that's what we were

748
00:42:22,599 --> 00:42:29,079
expecting to have so we actually want

749
00:42:25,150 --> 00:42:31,500
our chart mm square there we actually

750
00:42:29,079 --> 00:42:37,150
want the color values to be squared in

751
00:42:31,500 --> 00:42:41,409
that space - hmm now the question is do

752
00:42:37,150 --> 00:42:47,769
we want the Alpha value squared I don't

753
00:42:41,409 --> 00:42:52,018
think so because we don't threshold that

754
00:42:47,768 --> 00:42:52,018
one so I'm gonna take a look here

755
00:42:57,500 --> 00:43:16,889
here's the unpack here's the srgb

756
00:43:09,889 --> 00:43:22,279
conversion but they're not really by

757
00:43:16,889 --> 00:43:25,859
linear blend modulate the incoming color

758
00:43:22,280 --> 00:43:28,190
clamp I'm not sure why we clamp to be

759
00:43:25,860 --> 00:43:28,190
honest

760
00:43:34,090 --> 00:43:44,650
and then we do in of 255 for X so I

761
00:43:42,219 --> 00:43:50,789
can't say I necessarily understand

762
00:43:44,650 --> 00:43:50,789
I guess the Alpha value stays 0 to 1

763
00:43:51,690 --> 00:44:00,309
some handle but I don't understand why

764
00:43:56,710 --> 00:44:03,340
that would be probably because it

765
00:44:00,309 --> 00:44:07,779
doesn't get squared because the Alpha

766
00:44:03,340 --> 00:44:09,640
value never needs to get squared I guess

767
00:44:07,780 --> 00:44:12,490
that makes sense since the Alpha value

768
00:44:09,639 --> 00:44:14,319
is not getting corrected to srgb space

769
00:44:12,489 --> 00:44:18,549
the Alpha value isn't squared but

770
00:44:14,320 --> 00:44:29,080
everything else is right so really this

771
00:44:18,550 --> 00:44:29,680
is probably the the culprit that's

772
00:44:29,079 --> 00:44:39,179
tricky

773
00:44:29,679 --> 00:44:39,179
I think we got it now yeah

774
00:44:42,809 --> 00:44:46,799
you can see the color values aren't

775
00:44:45,030 --> 00:44:50,660
quite corrected correctly this I'm still

776
00:44:46,800 --> 00:44:50,660
doing something slightly wrong there

777
00:44:51,710 --> 00:44:57,179
although that that may actually be the

778
00:44:54,809 --> 00:44:59,670
hardware renderer not color not doing

779
00:44:57,179 --> 00:45:05,099
the Alpha correctly for all I know

780
00:44:59,670 --> 00:45:08,070
I'd have to because it's not gonna when

781
00:45:05,099 --> 00:45:12,630
we do a solid color fill it's not gonna

782
00:45:08,070 --> 00:45:14,670
use srgb for the input color so actually

783
00:45:12,630 --> 00:45:16,230
I think that means that the hardware

784
00:45:14,670 --> 00:45:20,039
renderer is actually the inaccurate one

785
00:45:16,230 --> 00:45:23,599
in this case but either way all right so

786
00:45:20,039 --> 00:45:23,599
if I read an able our threads again

787
00:45:27,679 --> 00:45:32,029
somewhere in here somewhere

788
00:45:33,230 --> 00:45:43,349
there it is oops

789
00:45:39,079 --> 00:45:54,769
so if Eirene able our threads and I let

790
00:45:43,349 --> 00:45:54,769
this go then we should be lovely

791
00:45:54,980 --> 00:46:00,510
now our rectangles are basically the

792
00:45:58,139 --> 00:46:02,909
same except I'm not sure who is right on

793
00:46:00,510 --> 00:46:04,970
the color side of things if that makes

794
00:46:02,909 --> 00:46:04,969
sense

795
00:46:05,989 --> 00:46:10,409
so you know what it's we ended up doing

796
00:46:08,400 --> 00:46:12,269
a lot of a rendering day instead of a

797
00:46:10,409 --> 00:46:15,210
profiling day that makes me think of

798
00:46:12,269 --> 00:46:16,920
another thing we might want to do here

799
00:46:15,210 --> 00:46:20,130
when we switch between these two

800
00:46:16,920 --> 00:46:21,869
renderers the fonts are different and

801
00:46:20,130 --> 00:46:24,690
actually everything's a little bit off

802
00:46:21,869 --> 00:46:26,460
right and one thing that someone

803
00:46:24,690 --> 00:46:31,500
reminded me of on the forums actually

804
00:46:26,460 --> 00:46:32,460
that I had totally forgotten is that and

805
00:46:31,500 --> 00:46:38,059
in fact you know what

806
00:46:32,460 --> 00:46:44,220
I did this so I could show you who is it

807
00:46:38,059 --> 00:46:45,989
diver ball he pointed out that in order

808
00:46:44,219 --> 00:46:48,149
to make sure we never fetched off the

809
00:46:45,989 --> 00:46:50,639
texture in bilinear land we had

810
00:46:48,150 --> 00:46:53,760
introduced that one pixel apron remember

811
00:46:50,639 --> 00:46:55,549
all we always actually only use the

812
00:46:53,760 --> 00:46:57,500
interior part of the texture

813
00:46:55,550 --> 00:47:00,650
and there's a one texel apron around the

814
00:46:57,500 --> 00:47:04,820
whole image that we don't use so we have

815
00:47:00,650 --> 00:47:07,430
that UV fix up that we do and we are not

816
00:47:04,820 --> 00:47:09,650
doing that on the hardware renderer so

817
00:47:07,429 --> 00:47:12,409
if we did that on the hardware renderer

818
00:47:09,650 --> 00:47:13,670
that would probably improve our the way

819
00:47:12,409 --> 00:47:15,500
it lines up the hardware vendor is

820
00:47:13,670 --> 00:47:22,670
effectively not rendering the real thing

821
00:47:15,500 --> 00:47:26,239
and so when we call in in this code here

822
00:47:22,670 --> 00:47:29,599
where we're like render entry bit bitmap

823
00:47:26,239 --> 00:47:32,359
where we do OpenGL rectangle we actually

824
00:47:29,599 --> 00:47:33,860
don't want to do the standard OpenGL

825
00:47:32,360 --> 00:47:36,079
rectangle the one that we're doing here

826
00:47:33,860 --> 00:47:39,500
we actually need to correct the texture

827
00:47:36,079 --> 00:47:41,719
coordinates and what we could do is we

828
00:47:39,500 --> 00:47:44,420
could pass those texture coordinates in

829
00:47:41,719 --> 00:47:50,119
potentially like we could do like you

830
00:47:44,420 --> 00:47:58,930
know menu the max UV where these are set

831
00:47:50,119 --> 00:48:02,989
ahead of time to like the right thing so

832
00:47:58,929 --> 00:48:04,460
effectively anyone who was using this

833
00:48:02,989 --> 00:48:15,259
before would just get the default

834
00:48:04,460 --> 00:48:24,340
parameters of this is min UV min UV this

835
00:48:15,260 --> 00:48:34,130
is max UV x max UV x n UV

836
00:48:24,340 --> 00:48:42,289
X min UV oh wait that's not that was a

837
00:48:34,130 --> 00:48:50,559
one okay max UV X Max and UV X and then

838
00:48:42,289 --> 00:48:50,559
these are this I can just replace here

839
00:48:51,980 --> 00:48:55,920
remember you know what I forget what I

840
00:48:53,849 --> 00:49:03,449
bound it to never mind I don't do a

841
00:48:55,920 --> 00:49:14,340
surgeon replace when you do why and max

842
00:49:03,449 --> 00:49:15,629
uvy all right so if you run it now we

843
00:49:14,340 --> 00:49:20,760
should get exactly the same thing we

844
00:49:15,630 --> 00:49:23,309
were getting before right no change but

845
00:49:20,760 --> 00:49:27,720
now if I go ahead and pass the corrector

846
00:49:23,309 --> 00:49:31,079
corrected Texel coordinates I'm hoping

847
00:49:27,719 --> 00:49:33,299
that we will get a closer match and so

848
00:49:31,079 --> 00:49:34,949
in here where we call this OpenGL

849
00:49:33,300 --> 00:49:39,690
rectangle here what I'm going to do is

850
00:49:34,949 --> 00:49:45,000
I'm going to pass a min UV and a max UV

851
00:49:39,690 --> 00:49:47,490
on through so in order to do that I need

852
00:49:45,000 --> 00:49:50,969
to compute essentially the text the

853
00:49:47,489 --> 00:49:54,029
Texel offsets exactly the same way we

854
00:49:50,969 --> 00:49:55,469
were computing them in the software

855
00:49:54,030 --> 00:49:59,100
renderer which means we're going to

856
00:49:55,469 --> 00:50:03,149
start one texel in and end one texel

857
00:49:59,099 --> 00:50:07,170
back so in order to do that I have to do

858
00:50:03,150 --> 00:50:10,079
like you know one texel one texel and

859
00:50:07,170 --> 00:50:15,809
here I have to do like you know width

860
00:50:10,079 --> 00:50:17,340
minus one texel height minus one text

861
00:50:15,809 --> 00:50:23,460
little kind of a thing right or I should

862
00:50:17,340 --> 00:50:26,070
start 1.0 minus one texel so what I need

863
00:50:23,460 --> 00:50:28,500
to do is I need to compute how big one

864
00:50:26,070 --> 00:50:31,080
texel is and unfortunately it's gonna be

865
00:50:28,500 --> 00:50:33,539
different in U and V because U and V is

866
00:50:31,079 --> 00:50:36,389
0 to 1 and these bitmaps are different

867
00:50:33,539 --> 00:50:38,039
widths and Heights so the range on the

868
00:50:36,389 --> 00:50:38,940
height and the range on a sorry the

869
00:50:38,039 --> 00:50:41,400
range of the width and the range of the

870
00:50:38,940 --> 00:50:44,519
height are going to be different so I

871
00:50:41,400 --> 00:50:51,750
have to compute how big a Texel is in

872
00:50:44,519 --> 00:50:56,579
each of them and yeah it's pretty easy

873
00:50:51,750 --> 00:50:59,159
to do all I need to do is know how big

874
00:50:56,579 --> 00:51:01,409
they are and so I'm assuming that there

875
00:50:59,159 --> 00:51:05,690
is that information here I'm assuming

876
00:51:01,409 --> 00:51:05,690
that I can just ask right

877
00:51:06,539 --> 00:51:18,729
like so and be done so that's one you

878
00:51:16,239 --> 00:51:21,219
know one texel in you and one Texan v

879
00:51:18,728 --> 00:51:23,528
but since that can now divide by zero

880
00:51:21,219 --> 00:51:30,429
what I would like to do is just do an

881
00:51:23,528 --> 00:51:32,978
entry bitmap with and entry bitmap

882
00:51:30,429 --> 00:51:36,039
height I would like to make sure that

883
00:51:32,978 --> 00:51:38,139
those are both actually valid before I

884
00:51:36,039 --> 00:51:40,630
do anything because in case we load

885
00:51:38,139 --> 00:51:42,728
somehow is 0 with the bitmap or for some

886
00:51:40,630 --> 00:51:44,619
reason I don't want the game to crash

887
00:51:42,728 --> 00:51:47,828
I'd rather just not render anything

888
00:51:44,619 --> 00:51:50,349
which seems harmless enough right

889
00:51:47,829 --> 00:51:52,900
so already you can kind of see that the

890
00:51:50,349 --> 00:51:57,429
fonts look more like they look they're

891
00:51:52,900 --> 00:52:00,548
more correct now and so here's the

892
00:51:57,429 --> 00:52:02,798
switch wow I I can't even really tell

893
00:52:00,548 --> 00:52:08,978
the difference much now I think we're

894
00:52:02,798 --> 00:52:10,778
still off by a little bit but it is

895
00:52:08,978 --> 00:52:16,358
really hard to see the difference

896
00:52:10,778 --> 00:52:18,599
between our dren Durer's like really

897
00:52:16,358 --> 00:52:18,598
hard

898
00:52:22,269 --> 00:52:29,949
that's pretty great I can sort of see

899
00:52:28,480 --> 00:52:32,619
the difference on the fonts it looks

900
00:52:29,949 --> 00:52:35,349
like we are I would say that we are not

901
00:52:32,619 --> 00:52:37,390
pre stepping our software renderer to

902
00:52:35,349 --> 00:52:39,429
the correct pixel center so I think

903
00:52:37,389 --> 00:52:42,309
we're off by a little bit in the pixel

904
00:52:39,429 --> 00:52:44,289
center I think that's really it but

905
00:52:42,309 --> 00:52:50,759
otherwise we line up perfectly now with

906
00:52:44,289 --> 00:52:50,759
OpenGL which is pretty awesome all right

907
00:52:54,980 --> 00:53:03,230
yay so I'm going to close this out

908
00:53:23,000 --> 00:53:29,539
cool so for those of you don't know I

909
00:53:25,820 --> 00:53:30,950
started a bug list in the github so that

910
00:53:29,539 --> 00:53:33,670
we could keep track of some of these

911
00:53:30,949 --> 00:53:38,929
things that you know we need to

912
00:53:33,670 --> 00:53:41,630
potentially fix right and you know these

913
00:53:38,929 --> 00:53:43,039
are basically just things that we sort

914
00:53:41,630 --> 00:53:44,420
of found maybe we talked about but

915
00:53:43,039 --> 00:53:48,019
haven't fix that or that people on the

916
00:53:44,420 --> 00:53:49,250
forums need help with for like compiling

917
00:53:48,019 --> 00:53:51,590
on different compilers or stuff like

918
00:53:49,250 --> 00:53:53,329
that so while we're in here we could

919
00:53:51,590 --> 00:53:57,710
probably fix a couple of these actually

920
00:53:53,329 --> 00:54:00,829
I know that our srgb typos like I had

921
00:53:57,710 --> 00:54:04,250
made a change to the to the there was a

922
00:54:00,829 --> 00:54:08,029
typo in the sRGB detection I think it

923
00:54:04,250 --> 00:54:09,860
was in win32 handmade here and there was

924
00:54:08,030 --> 00:54:11,720
a typo I fixed it and I forgot to save

925
00:54:09,860 --> 00:54:15,970
the file I think or something like this

926
00:54:11,719 --> 00:54:20,239
happened I think it's right here

927
00:54:15,969 --> 00:54:22,069
where was that SRB there it is it's this

928
00:54:20,239 --> 00:54:24,169
one right here remember this is not

929
00:54:22,070 --> 00:54:26,240
supposed to be OpenGL default internal

930
00:54:24,170 --> 00:54:27,800
texture format that's not what it's

931
00:54:26,239 --> 00:54:32,709
supposed to be it's supposed to be

932
00:54:27,800 --> 00:54:37,340
whether or not it has that the extension

933
00:54:32,710 --> 00:54:39,550
that allows us to to do srgb so it was

934
00:54:37,340 --> 00:54:45,260
actually to see whether or not it

935
00:54:39,550 --> 00:54:46,970
supported srgb frame buffer so that was

936
00:54:45,260 --> 00:54:48,260
actually what we're supposed to do it's

937
00:54:46,969 --> 00:54:49,519
supposed to be like if it doesn't

938
00:54:48,260 --> 00:54:53,510
support us are to be frame buffer then

939
00:54:49,519 --> 00:54:56,989
don't set that right that was what we're

940
00:54:53,510 --> 00:54:58,700
supposed to do and similarly if we don't

941
00:54:56,989 --> 00:55:00,619
support an sRGB frame before us think

942
00:54:58,699 --> 00:55:02,480
about this before if we don't support an

943
00:55:00,619 --> 00:55:04,699
sRGB frame buffer the other thing that I

944
00:55:02,480 --> 00:55:10,990
think we would want to do is actually

945
00:55:04,699 --> 00:55:14,059
not not set the texture format either

946
00:55:10,989 --> 00:55:16,129
right because if it doesn't support an

947
00:55:14,059 --> 00:55:17,630
sRGB frame buffer we don't want to like

948
00:55:16,130 --> 00:55:19,070
basically what happens when we're doing

949
00:55:17,630 --> 00:55:20,630
that srgb remember because we

950
00:55:19,070 --> 00:55:23,870
implemented some saw for renderer we

951
00:55:20,630 --> 00:55:27,470
load the texels out of the texture we

952
00:55:23,869 --> 00:55:29,299
gamma we ungawa correct them we do our

953
00:55:27,469 --> 00:55:31,159
ops and then we're e gamma correct to

954
00:55:29,300 --> 00:55:33,170
put it into the frame buffer now if the

955
00:55:31,159 --> 00:55:36,960
frame buffer rege am a correction is not

956
00:55:33,170 --> 00:55:38,730
going to happen then we don't want to

957
00:55:36,960 --> 00:55:40,858
we don't want to convert to linear

958
00:55:38,730 --> 00:55:42,659
because we'll get a more correct image

959
00:55:40,858 --> 00:55:44,730
by just leaving everything in gamma

960
00:55:42,659 --> 00:55:46,828
space all the way through we'll get a

961
00:55:44,730 --> 00:55:48,449
totally messed up washed out image if we

962
00:55:46,829 --> 00:55:50,490
don't gamma correct on one side but do

963
00:55:48,449 --> 00:55:51,480
on the other if we you know use apply

964
00:55:50,489 --> 00:55:54,179
the curve on one side but not the

965
00:55:51,480 --> 00:55:56,338
inverse on the other side so I think

966
00:55:54,179 --> 00:55:58,710
what we actually also want to do here in

967
00:55:56,338 --> 00:56:00,509
order to be a little bit more compliant

968
00:55:58,710 --> 00:56:03,869
as we go forwards and try to if we try

969
00:56:00,510 --> 00:56:07,200
to support some it doesn't support those

970
00:56:03,869 --> 00:56:09,410
those texture formats in OpenGL in it I

971
00:56:07,199 --> 00:56:12,899
think we need to pass a thing which says

972
00:56:09,409 --> 00:56:17,068
you know the 32 you know frame buffer

973
00:56:12,900 --> 00:56:18,930
supports srgb or something and what we'd

974
00:56:17,068 --> 00:56:22,440
want to do here is say if the framework

975
00:56:18,929 --> 00:56:27,210
supports RGB and we have the srgb

976
00:56:22,440 --> 00:56:31,050
extension then we will use it right if

977
00:56:27,210 --> 00:56:34,949
that makes sense I guess actually here

978
00:56:31,050 --> 00:56:36,869
it is it's right here too so really

979
00:56:34,949 --> 00:56:44,129
these go together so I guess what I'm

980
00:56:36,869 --> 00:56:49,920
saying so if we have all the extensions

981
00:56:44,130 --> 00:56:53,390
and we believe that the the the

982
00:56:49,920 --> 00:56:53,389
underlying stuff works right

983
00:57:13,900 --> 00:57:23,599
right because if not everything is if

984
00:57:20,809 --> 00:57:26,210
not absolutely everything supports the

985
00:57:23,599 --> 00:57:28,610
sRGB transforms then we don't want to

986
00:57:26,210 --> 00:57:29,809
turn on just one side goes turning on

987
00:57:28,610 --> 00:57:31,640
just the frame buffer or just the

988
00:57:29,809 --> 00:57:34,179
texture will lead to the completely

989
00:57:31,639 --> 00:57:37,339
wrong image and that would be real bad

990
00:57:34,179 --> 00:57:39,649
so I think that's actually what we want

991
00:57:37,340 --> 00:57:40,280
to do here when we do our open jellinek

992
00:57:39,650 --> 00:57:43,760
here

993
00:57:40,280 --> 00:57:44,300
I assume at this point have we set this

994
00:57:43,760 --> 00:57:46,310
correctly

995
00:57:44,300 --> 00:57:53,060
yeah because we've queried all of our

996
00:57:46,309 --> 00:57:56,179
swap interval stuff so this is pass

997
00:57:53,059 --> 00:57:57,920
through so let's just double-check this

998
00:57:56,179 --> 00:58:00,259
now to make sure this is not really a

999
00:57:57,920 --> 00:58:07,820
test of it in any particular way but

1000
00:58:00,260 --> 00:58:15,740
just trying to make sure yeah man that

1001
00:58:07,820 --> 00:58:19,519
is just so cool how close we match I'm

1002
00:58:15,739 --> 00:58:22,969
pretty psyched about that all right so

1003
00:58:19,519 --> 00:58:24,860
anyway really hard to fight the urge to

1004
00:58:22,969 --> 00:58:26,509
not go back and correct it exactly to

1005
00:58:24,860 --> 00:58:28,090
match someday we probably will because

1006
00:58:26,510 --> 00:58:34,640
I'll just won't be able to not do it

1007
00:58:28,090 --> 00:58:35,840
anyway so we've got our our bug resolved

1008
00:58:34,639 --> 00:58:43,099
there so I'm going to go ahead and close

1009
00:58:35,840 --> 00:58:47,269
that out that is in this here we fixed

1010
00:58:43,099 --> 00:58:50,239
the typo so we just entered name we're

1011
00:58:47,269 --> 00:58:52,550
checking isn't always the one so here's

1012
00:58:50,239 --> 00:58:56,839
another one - someone was saying that

1013
00:58:52,550 --> 00:58:58,340
that GL ARB frame buffer srgb is is also

1014
00:58:56,840 --> 00:59:02,030
one that's checked that it's sometimes

1015
00:58:58,340 --> 00:59:03,769
present for the same purpose so what we

1016
00:59:02,030 --> 00:59:05,570
might want to do is try to do that bug

1017
00:59:03,769 --> 00:59:08,809
as well so people can look and see if

1018
00:59:05,570 --> 00:59:12,500
that helped so here what we could do is

1019
00:59:08,809 --> 00:59:15,139
just say well in either case there's our

1020
00:59:12,500 --> 00:59:15,840
versions of these so let's just go ahead

1021
00:59:15,139 --> 00:59:19,379
and support

1022
00:59:15,840 --> 00:59:21,150
the ARB ones as well right I don't

1023
00:59:19,380 --> 00:59:22,200
actually remember what they are but

1024
00:59:21,150 --> 00:59:30,599
let's take a look

1025
00:59:22,199 --> 00:59:31,529
so texture srgb ARB because they're

1026
00:59:30,599 --> 00:59:38,250
something like that

1027
00:59:31,530 --> 00:59:41,430
good job thanks google that's good let's

1028
00:59:38,250 --> 00:59:46,760
see well here's the GL ARB frame buffer

1029
00:59:41,429 --> 00:59:53,519
srgb so that one at least we know is

1030
00:59:46,760 --> 00:59:54,990
oops that one at least we know what that

1031
00:59:53,519 --> 00:59:56,880
one is so we know the other frame buffer

1032
00:59:54,989 --> 00:59:59,039
1 so there's the the original extension

1033
00:59:56,880 --> 01:00:01,289
1 and here's the ARB 1 and then now we

1034
00:59:59,039 --> 01:00:05,340
just want to look to see what the

1035
01:00:01,289 --> 01:00:09,469
texture version of that is and I don't

1036
01:00:05,340 --> 01:00:22,820
actually know maybe there isn't one

1037
01:00:09,469 --> 01:00:22,819
texture srgb armed well

1038
01:00:26,639 --> 01:00:40,779
yeah not seeing a lot of other stuff

1039
01:00:32,260 --> 01:00:42,520
here there anything else about it the

1040
01:00:40,780 --> 01:00:45,640
frame buffer ones there but I don't see

1041
01:00:42,519 --> 01:00:47,500
the texture one let's see about if I

1042
01:00:45,639 --> 01:00:51,129
just search for the actual extension

1043
01:00:47,500 --> 01:01:02,190
that we use which is this this guy right

1044
01:00:51,130 --> 01:01:02,190
here how do we know if it's supported

1045
01:01:02,309 --> 01:01:11,500
how do we know how do we we don't know

1046
01:01:07,199 --> 01:01:14,529
apparently maybe it's just by default

1047
01:01:11,500 --> 01:01:25,440
supported in OpenGL 4 and it's not in

1048
01:01:14,530 --> 01:01:25,440
three or something I don't know well

1049
01:01:45,400 --> 01:01:52,340
so I don't know about that I would be

1050
01:01:49,130 --> 01:01:55,730
interested to see I can't scroll down

1051
01:01:52,340 --> 01:01:57,590
here there we go I would be interested

1052
01:01:55,730 --> 01:01:59,780
to know what that actually was if

1053
01:01:57,590 --> 01:02:02,690
someone knows of an r1 please open a new

1054
01:01:59,780 --> 01:02:04,190
bug for this at some point or post on

1055
01:02:02,690 --> 01:02:13,329
the forums what it is so that we'll be

1056
01:02:04,190 --> 01:02:16,220
able to know but all right yay okay so

1057
01:02:13,329 --> 01:02:26,239
I'm gonna put a little to do in here and

1058
01:02:16,219 --> 01:02:30,799
just say like to do is there some kind

1059
01:02:26,239 --> 01:02:38,949
of ARB string to look for that indicates

1060
01:02:30,800 --> 01:02:42,080
the Oh X texture srgb do what I could do

1061
01:02:38,949 --> 01:02:44,719
also if there was an ARB one this card

1062
01:02:42,079 --> 01:02:46,819
maybe would be reporting cuz the drivers

1063
01:02:44,719 --> 01:02:48,739
relatively modern well it's kind of an

1064
01:02:46,820 --> 01:02:51,110
old card but what I could do is just

1065
01:02:48,739 --> 01:02:54,469
look and see what's actually coming out

1066
01:02:51,110 --> 01:02:56,570
in that string maybe I can just spot it

1067
01:02:54,469 --> 01:03:05,509
right maybe if I set a breakpoint in

1068
01:02:56,570 --> 01:03:06,640
OpenGL get info maybe I can see like in

1069
01:03:05,510 --> 01:03:10,180
here somewhere

1070
01:03:06,639 --> 01:03:10,179
what's going on

1071
01:03:15,510 --> 01:03:31,830
so here's a bunch of stuff let's see our

1072
01:03:22,579 --> 01:03:37,590
frame before sRGB is there you know I'm

1073
01:03:31,829 --> 01:03:38,608
just gonna go ahead and search mmm I

1074
01:03:37,590 --> 01:03:42,570
don't have I don't know how to get a

1075
01:03:38,608 --> 01:03:43,880
temporary buffer in for coder never

1076
01:03:42,570 --> 01:03:45,960
thought of it before

1077
01:03:43,880 --> 01:03:56,280
I'll just go go to the bottom of the

1078
01:03:45,960 --> 01:03:57,840
file srgb X texture and frame buffer so

1079
01:03:56,280 --> 01:04:01,430
it doesn't look like there is an ARB one

1080
01:03:57,840 --> 01:04:01,430
I guess that's it

1081
01:04:01,489 --> 01:04:05,299
so there we go

1082
01:04:06,679 --> 01:04:12,259
so I don't know what to make of that but

1083
01:04:09,449 --> 01:04:12,259
that's where we're at

1084
01:04:30,480 --> 01:04:35,190
cool

1085
01:04:32,380 --> 01:04:35,190
all right

1086
01:04:39,590 --> 01:04:52,820
all right let's do brief q and a brief

1087
01:04:43,760 --> 01:04:56,760
brief brief and I will close that down

1088
01:04:52,820 --> 01:04:59,990
and we should probably do a couple

1089
01:04:56,760 --> 01:05:03,030
others of these they're not too many

1090
01:04:59,989 --> 01:05:06,769
like basically these can be could

1091
01:05:03,030 --> 01:05:06,769
probably be not too too much

1092
01:05:36,630 --> 01:05:44,460
Jessie use I've implemented a quick and

1093
01:05:38,760 --> 01:05:52,670
dirty flame graph for handmade hero here

1094
01:05:44,460 --> 01:05:52,670
is the link is that a flame graph I

1095
01:05:53,179 --> 01:05:57,949
guess yeah I mean you just kind of move

1096
01:05:55,469 --> 01:06:01,289
down if you want to stack the things up

1097
01:05:57,949 --> 01:06:08,669
it's I can't say that that's super

1098
01:06:01,289 --> 01:06:11,900
readable but I mean yeah I guess that's

1099
01:06:08,670 --> 01:06:11,900
kind of works

1100
01:06:22,230 --> 01:06:26,829
he's the stream being off tomorrow at

1101
01:06:24,699 --> 01:06:32,169
April Fool's joke no I have to go to a

1102
01:06:26,829 --> 01:06:33,970
wedding dinner thing so it's actually

1103
01:06:32,170 --> 01:06:41,500
not an episode just I'm just not here so

1104
01:06:33,969 --> 01:06:43,539
I can't stream Kubica that what happened

1105
01:06:41,500 --> 01:06:46,329
to the sufferer forest it was running at

1106
01:06:43,539 --> 01:06:48,460
30 frames a few months ago even without

1107
01:06:46,329 --> 01:06:49,180
Oh - it was pretty decent I don't know

1108
01:06:48,460 --> 01:06:51,309
about that

1109
01:06:49,179 --> 01:06:55,659
it was never able to render the

1110
01:06:51,309 --> 01:07:01,540
super-stacked cutscene stuff without Oh

1111
01:06:55,659 --> 01:07:05,500
- remember Oh - was always on by default

1112
01:07:01,539 --> 01:07:08,500
in the software renderer always because

1113
01:07:05,500 --> 01:07:10,659
we had that handmade optimized so you're

1114
01:07:08,500 --> 01:07:15,130
not comparing apples to oranges there if

1115
01:07:10,659 --> 01:07:19,210
I go back in here and and actually put

1116
01:07:15,130 --> 01:07:24,160
on optimization it should be pretty

1117
01:07:19,210 --> 01:07:26,940
reasonable kind of what that just did

1118
01:07:24,159 --> 01:07:26,940
okay there we go

1119
01:07:29,000 --> 01:07:33,539
but it was though it always struggled

1120
01:07:31,889 --> 01:07:37,109
with the the super deep cutscenes

1121
01:07:33,539 --> 01:07:38,759
because it has to overdraw a lot and you

1122
01:07:37,110 --> 01:07:41,480
know if we were gonna try and optimize

1123
01:07:38,760 --> 01:07:45,000
that we would cut down a lot of overdraw

1124
01:07:41,480 --> 01:07:47,820
but yeah so it always had trouble with

1125
01:07:45,000 --> 01:07:49,559
like this scene for example because it's

1126
01:07:47,820 --> 01:07:51,360
stacks and stacks and stacks of these

1127
01:07:49,559 --> 01:07:56,579
little subtle layers that it's nothing

1128
01:07:51,360 --> 01:07:58,829
to do all of those fills right so on

1129
01:07:56,579 --> 01:08:02,639
scenes that have less layers it's better

1130
01:07:58,829 --> 01:08:07,079
but you know it's still problematic also

1131
01:08:02,639 --> 01:08:13,920
the debug code probably eats of a bunch

1132
01:08:07,079 --> 01:08:17,390
of that time unfortunately so like you

1133
01:08:13,920 --> 01:08:17,390
can see the software's actually done

1134
01:08:17,659 --> 01:08:29,010
right about here actually come to think

1135
01:08:25,289 --> 01:08:30,269
of it is that just you know what's

1136
01:08:29,010 --> 01:08:31,680
actually causing the problem with our

1137
01:08:30,270 --> 01:08:33,359
suffer renderer that you're noticing

1138
01:08:31,680 --> 01:08:35,298
that the difference between what it was

1139
01:08:33,359 --> 01:08:37,650
because this off runners done right here

1140
01:08:35,298 --> 01:08:40,079
so we're about twice as fast as the

1141
01:08:37,649 --> 01:08:43,759
framerate is right now it looks like

1142
01:08:40,079 --> 01:08:50,250
it's just the open gel texture download

1143
01:08:43,760 --> 01:08:52,409
right see what I'm saying about debug

1144
01:08:50,250 --> 01:08:54,479
tools being so important like you can

1145
01:08:52,409 --> 01:08:58,920
just immediately see that there's no way

1146
01:08:54,479 --> 01:09:02,789
you would ever see that otherwise hold

1147
01:08:58,920 --> 01:09:04,680
on a second here we need to wait we need

1148
01:09:02,789 --> 01:09:07,439
to add a three-way switch so we can pick

1149
01:09:04,680 --> 01:09:10,530
between these but if we switch this so

1150
01:09:07,439 --> 01:09:14,750
that went through to rendering type on

1151
01:09:10,529 --> 01:09:14,750
startup is going through GDI

1152
01:09:19,050 --> 01:09:23,880
I'm interested to know what the what

1153
01:09:21,279 --> 01:09:23,880
that looks like now

1154
01:09:30,238 --> 01:09:37,369
yeah much better

1155
01:09:34,369 --> 01:09:37,369
certainly

1156
01:09:43,979 --> 01:09:48,169
let's see if we can get back to it there

1157
01:09:45,960 --> 01:09:55,500
yeah I mean that's like twice as fast

1158
01:09:48,170 --> 01:09:56,880
right as it was so yeah I think part of

1159
01:09:55,500 --> 01:09:58,679
that is also remember we're doing that

1160
01:09:56,880 --> 01:10:01,829
weird thing for the streaming which

1161
01:09:58,679 --> 01:10:05,789
totally screws up OpenGL so that's not

1162
01:10:01,829 --> 01:10:08,210
even open gels fault just that's just

1163
01:10:05,789 --> 01:10:08,210
how it is

1164
01:10:25,809 --> 01:10:31,000
yeah that's holding like 60 Hertz on

1165
01:10:28,118 --> 01:10:32,908
this thing which is pretty great but you

1166
01:10:31,000 --> 01:10:35,710
can see when it switches to more layers

1167
01:10:32,908 --> 01:10:38,170
when it gets to about 4 layers it can't

1168
01:10:35,710 --> 01:10:42,038
quite hit it it's not quite at 30 it

1169
01:10:38,170 --> 01:10:47,199
doesn't quite take 30 but it's it's not

1170
01:10:42,038 --> 01:10:49,658
quite there what is this nonsense debug

1171
01:10:47,198 --> 01:10:51,788
collation it might if we turn off the

1172
01:10:49,658 --> 01:10:53,288
debug collation it might be able to of

1173
01:10:51,788 --> 01:10:57,448
course we would then lose our ability to

1174
01:10:53,288 --> 01:10:57,448
profile but you know

1175
01:11:11,479 --> 01:11:15,750
q for Caleb so let me get this straight

1176
01:11:13,560 --> 01:11:17,789
modern picky connections have several

1177
01:11:15,750 --> 01:11:19,680
gigabytes a second a bandwidth and it

1178
01:11:17,789 --> 01:11:22,380
takes several frames to upload a texture

1179
01:11:19,680 --> 01:11:25,710
for the back buffer well it's not that

1180
01:11:22,380 --> 01:11:31,199
simple it's a lot more complicated than

1181
01:11:25,710 --> 01:11:32,369
that actually and it's probably not the

1182
01:11:31,199 --> 01:11:35,250
right time to go into it

1183
01:11:32,369 --> 01:11:37,439
but there's so many things that go into

1184
01:11:35,250 --> 01:11:39,930
having to get a texture down to the card

1185
01:11:37,439 --> 01:11:44,279
for usability that there's just a lot of

1186
01:11:39,930 --> 01:11:46,860
pipelining it's it's it's problematic it

1187
01:11:44,279 --> 01:11:48,960
has to be swizzles it has to be mapped

1188
01:11:46,859 --> 01:11:50,969
into the aperture we're not doing a very

1189
01:11:48,960 --> 01:11:52,590
efficient download right now like what

1190
01:11:50,970 --> 01:11:54,780
we should do is probably do it into a

1191
01:11:52,590 --> 01:11:56,880
pixel buffer object if like if we were

1192
01:11:54,779 --> 01:11:59,909
trying to optimize our opengl throughput

1193
01:11:56,880 --> 01:12:01,560
for the picture for the back buffer we'd

1194
01:11:59,909 --> 01:12:03,689
probably want a pixel buffer object and

1195
01:12:01,560 --> 01:12:05,930
we want two of them to ping-pong so that

1196
01:12:03,689 --> 01:12:09,029
we get rid of one of the copies so like

1197
01:12:05,930 --> 01:12:13,200
and OpenGL right now is not set up

1198
01:12:09,029 --> 01:12:15,599
properly like I was saying before at the

1199
01:12:13,199 --> 01:12:16,949
moment OpenGL is happy to run in this

1200
01:12:15,600 --> 01:12:21,920
weird mode to make sure the streaming

1201
01:12:16,949 --> 01:12:25,710
works so probably if I turned on the the

1202
01:12:21,920 --> 01:12:34,020
double buffer flag we would get a bunch

1203
01:12:25,710 --> 01:12:36,319
of improvement there too so so there's

1204
01:12:34,020 --> 01:12:36,320
that

1205
01:12:43,470 --> 01:12:51,940
yay I feel like we don't we're not doing

1206
01:12:49,300 --> 01:12:54,430
a clear like the clear in the Safa

1207
01:12:51,939 --> 01:12:57,449
render obviously there's no clear which

1208
01:12:54,430 --> 01:13:00,130
is fine we won't really need one because

1209
01:12:57,449 --> 01:13:03,909
we'll be drawing stuff back here pretty

1210
01:13:00,130 --> 01:13:05,319
soon but just worth noting that we don't

1211
01:13:03,909 --> 01:13:19,019
have a clear on software renderer for

1212
01:13:05,319 --> 01:13:19,019
whatever reason alright alright folks

1213
01:13:19,170 --> 01:13:37,329
I'm gonna go eat some dinner leave this

1214
01:13:34,270 --> 01:13:42,970
the way we found it probably don't want

1215
01:13:37,329 --> 01:13:47,260
optimizations on okay close that down

1216
01:13:42,970 --> 01:13:48,310
and that down thank you everyone for

1217
01:13:47,260 --> 01:13:49,329
joining me for another episode of

1218
01:13:48,310 --> 01:13:51,430
handmade hero it's been a pleasure

1219
01:13:49,329 --> 01:13:53,590
coding with you as always if you want to

1220
01:13:51,430 --> 01:13:54,970
follow along with the code at home you

1221
01:13:53,590 --> 01:13:56,680
can always pre-order the game on

1222
01:13:54,970 --> 01:13:59,560
Hammacher org and it comes to the source

1223
01:13:56,680 --> 01:14:01,480
code so you can do exactly that you

1224
01:13:59,560 --> 01:14:03,520
could also go to the forums and ask

1225
01:14:01,479 --> 01:14:05,139
questions if you've got questions you

1226
01:14:03,520 --> 01:14:06,400
can go to our patreon page if you want

1227
01:14:05,140 --> 01:14:08,950
to support the video series you can go

1228
01:14:06,399 --> 01:14:10,779
to the tweet bot to find out when we are

1229
01:14:08,949 --> 01:14:12,909
live and that is exactly what you will

1230
01:14:10,779 --> 01:14:14,979
have to do to find out the schedules for

1231
01:14:12,909 --> 01:14:17,019
next week I will be off stream tomorrow

1232
01:14:14,979 --> 01:14:18,609
so there will be no stream tomorrow but

1233
01:14:17,020 --> 01:14:22,720
we will probably pick back up on Monday

1234
01:14:18,609 --> 01:14:26,049
assuming normal schedule so please check

1235
01:14:22,720 --> 01:14:27,430
the tweet bot Monday morning to see what

1236
01:14:26,050 --> 01:14:29,920
the schedule for the week going to be if

1237
01:14:27,430 --> 01:14:34,590
you would like to do some more profiler

1238
01:14:29,920 --> 01:14:39,310
implementation that's about it until

1239
01:14:34,590 --> 01:14:40,630
until next time I will catch you guys on

1240
01:14:39,310 --> 01:14:43,020
the internet have fun programming

1241
01:14:40,630 --> 01:14:43,020
everyone

