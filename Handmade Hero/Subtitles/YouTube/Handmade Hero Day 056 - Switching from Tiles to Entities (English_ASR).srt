1
00:00:00,350 --> 00:00:05,699
okay hello everyone welcome to handmade

2
00:00:03,540 --> 00:00:07,200
Hero a Monday handmade hero saw her back

3
00:00:05,700 --> 00:00:09,330
after a weekend I hope everyone's

4
00:00:07,200 --> 00:00:11,490
program brain has had a chance to

5
00:00:09,330 --> 00:00:14,129
recharge and is ready to forge ahead

6
00:00:11,490 --> 00:00:16,829
because forge ahead we will again

7
00:00:14,130 --> 00:00:18,300
handmade hero we are in the process of

8
00:00:16,829 --> 00:00:21,000
writing an entire game from scratch

9
00:00:18,300 --> 00:00:23,730
using no library and no engine you know

10
00:00:21,000 --> 00:00:25,050
a daring a daring feat of strength like

11
00:00:23,730 --> 00:00:26,939
I said just me and a thousand of my

12
00:00:25,050 --> 00:00:29,429
closest friends here on the twitch chat

13
00:00:26,939 --> 00:00:31,859
and if we go pretty good

14
00:00:29,428 --> 00:00:34,140
we're sort of cresting a very important

15
00:00:31,859 --> 00:00:35,760
stage in in our engine design right now

16
00:00:34,140 --> 00:00:37,710
we're basically at the point where we're

17
00:00:35,759 --> 00:00:38,909
trying to figure out exactly how we want

18
00:00:37,710 --> 00:00:40,350
everything in the engine laid out so we

19
00:00:38,909 --> 00:00:43,199
can go implement the various components

20
00:00:40,350 --> 00:00:44,489
and so what's interesting is we're at a

21
00:00:43,200 --> 00:00:46,620
point now where we're finally getting to

22
00:00:44,488 --> 00:00:48,359
where I think we need to be in terms of

23
00:00:46,619 --> 00:00:50,939
like managing the entity in the world

24
00:00:48,359 --> 00:00:52,198
stay in kind of a good way and we're at

25
00:00:50,939 --> 00:00:53,308
a point where we're trying to play

26
00:00:52,198 --> 00:00:54,659
around with that stuff to make sure we

27
00:00:53,308 --> 00:00:56,189
get it right and it's just about getting

28
00:00:54,659 --> 00:00:58,078
to where I'm starting to feel like it's

29
00:00:56,189 --> 00:00:59,308
good and so that's that's kind of

30
00:00:58,079 --> 00:01:01,020
exciting because once we can kind of

31
00:00:59,308 --> 00:01:02,759
lock that down and move past that that

32
00:01:01,020 --> 00:01:04,890
that's like sort of one another big

33
00:01:02,759 --> 00:01:07,438
notch that we can sort of say okay we're

34
00:01:04,890 --> 00:01:09,359
good so I want to get right back into

35
00:01:07,438 --> 00:01:13,408
that even though it is a Monday I'd like

36
00:01:09,359 --> 00:01:17,159
to get started dive right in

37
00:01:13,409 --> 00:01:20,340
so the what I will say that was we are

38
00:01:17,159 --> 00:01:21,750
where we at we're at day 56 so what you

39
00:01:20,340 --> 00:01:23,400
want to do is if you have pre-ordered

40
00:01:21,750 --> 00:01:24,509
the game on handmade hero org you should

41
00:01:23,400 --> 00:01:25,770
have got a link in your email if you go

42
00:01:24,509 --> 00:01:27,540
to that link you can download the source

43
00:01:25,769 --> 00:01:30,298
code zip and that source code if zip

44
00:01:27,540 --> 00:01:32,969
should have the the zips for every day

45
00:01:30,299 --> 00:01:35,070
source code so since we're on day 56 go

46
00:01:32,969 --> 00:01:36,478
ahead and unzip day 55 source code into

47
00:01:35,069 --> 00:01:37,889
a directory and you'll be exactly where

48
00:01:36,478 --> 00:01:39,859
I am if you want to go ahead and follow

49
00:01:37,890 --> 00:01:44,399
along with what we do on today's video

50
00:01:39,859 --> 00:01:48,509
so where were we basically what we had

51
00:01:44,399 --> 00:01:50,670
done on Friday is we had just sort of

52
00:01:48,509 --> 00:01:53,938
gotten to the point where we had our

53
00:01:50,670 --> 00:01:55,439
entities partitioned into two sets a low

54
00:01:53,938 --> 00:01:58,529
frequency and a high frequency update

55
00:01:55,438 --> 00:02:00,508
set and we also had it so that the

56
00:01:58,530 --> 00:02:02,129
entities everything was now being done

57
00:02:00,509 --> 00:02:03,530
in entities so like walls like these

58
00:02:02,129 --> 00:02:06,449
walls of this room here

59
00:02:03,530 --> 00:02:08,159
well room and I use the term loosely are

60
00:02:06,450 --> 00:02:10,020
being defined as each little individual

61
00:02:08,159 --> 00:02:13,530
entities that kind of go around the

62
00:02:10,020 --> 00:02:15,240
perimeter and we had started to

63
00:02:13,530 --> 00:02:18,568
actually do the work of as the camera

64
00:02:15,240 --> 00:02:21,090
moves around sort of move entities into

65
00:02:18,568 --> 00:02:24,469
and out of that high frequency set and

66
00:02:21,090 --> 00:02:28,259
so what we were doing is if you remember

67
00:02:24,469 --> 00:02:30,750
let me see here if I have a yeah let me

68
00:02:28,259 --> 00:02:34,409
let me bring up the editor not gonna do

69
00:02:30,750 --> 00:02:36,479
much coding without an editor so we have

70
00:02:34,409 --> 00:02:38,459
the set camera call and what the set

71
00:02:36,479 --> 00:02:40,799
camera call would do is every time we

72
00:02:38,459 --> 00:02:43,349
move the camera it would sort of look

73
00:02:40,800 --> 00:02:46,910
through here and go alright we have

74
00:02:43,349 --> 00:02:49,319
everybody you know who's who sort of

75
00:02:46,909 --> 00:02:52,199
when the camera moves we have everyone

76
00:02:49,319 --> 00:02:53,519
who's going to now become outside of the

77
00:02:52,199 --> 00:02:54,958
bounds of the camera that we want to

78
00:02:53,519 --> 00:02:56,010
simulate outside of the area that we

79
00:02:54,959 --> 00:02:57,599
actually want to simulate so we're going

80
00:02:56,009 --> 00:02:59,669
to move them into a low frequency area

81
00:02:57,599 --> 00:03:01,739
and this offset and check frequency by

82
00:02:59,669 --> 00:03:03,689
area call basically takes care of all

83
00:03:01,739 --> 00:03:05,610
those guys it goes through and looks and

84
00:03:03,689 --> 00:03:07,409
it moves them out and so that's pretty

85
00:03:05,610 --> 00:03:09,330
much like there's there's not much about

86
00:03:07,409 --> 00:03:13,590
that that I'm that I'm uncomfortable

87
00:03:09,330 --> 00:03:15,620
with that's basically what we want to do

88
00:03:13,590 --> 00:03:18,120
because this high frequency entity set

89
00:03:15,620 --> 00:03:20,189
is the set that we're actively dealing

90
00:03:18,120 --> 00:03:21,569
with and especially on a very fast CPU

91
00:03:20,189 --> 00:03:24,389
like the one we're working with right

92
00:03:21,569 --> 00:03:25,829
now that's probably fine for awhile like

93
00:03:24,389 --> 00:03:27,569
we really don't have to worry about that

94
00:03:25,829 --> 00:03:31,140
hardly at all because the number of

95
00:03:27,569 --> 00:03:35,430
things that are in that set is is very

96
00:03:31,139 --> 00:03:36,839
is very low right by the way I tried

97
00:03:35,430 --> 00:03:38,159
installing someone was recommending miss

98
00:03:36,840 --> 00:03:40,289
shift as a drawing program so I'm going

99
00:03:38,159 --> 00:03:42,750
to try it we're trying a new drawing

100
00:03:40,289 --> 00:03:44,639
program today we'll see how it works so

101
00:03:42,750 --> 00:03:47,969
if you remember we had a situation where

102
00:03:44,639 --> 00:03:50,488
you you basically had some if this is

103
00:03:47,969 --> 00:03:51,870
the screen this is what you can see then

104
00:03:50,489 --> 00:03:52,859
there are sort of an apron around there

105
00:03:51,870 --> 00:03:54,750
and we're basically saying that entity

106
00:03:52,859 --> 00:03:56,969
any entities that fall within this

107
00:03:54,750 --> 00:03:59,669
region we're gonna simulate at high

108
00:03:56,969 --> 00:04:01,650
frequency right and then everything

109
00:03:59,669 --> 00:04:02,879
outside of there that's in the rest of

110
00:04:01,650 --> 00:04:04,829
the world is going to be sequel to

111
00:04:02,879 --> 00:04:06,569
simulate at low frequencies so people

112
00:04:04,829 --> 00:04:07,980
out here are not going to be getting the

113
00:04:06,569 --> 00:04:09,509
same attention to details people in here

114
00:04:07,979 --> 00:04:11,939
and the reason we did that was for

115
00:04:09,509 --> 00:04:13,858
scalability right so we want to have

116
00:04:11,939 --> 00:04:15,509
good scaling in our game and I don't

117
00:04:13,859 --> 00:04:17,489
mean things getting bigger and smaller I

118
00:04:15,509 --> 00:04:19,139
mean the ability to scale up to very

119
00:04:17,488 --> 00:04:21,689
large numbers of entities that are all

120
00:04:19,139 --> 00:04:23,339
acting independently and so let's say we

121
00:04:21,689 --> 00:04:25,110
have a game world that's very large

122
00:04:23,339 --> 00:04:26,219
let's say we have huge numbers of

123
00:04:25,110 --> 00:04:27,540
entities you know we've got a hundred

124
00:04:26,220 --> 00:04:29,250
thousand entities out there or

125
00:04:27,540 --> 00:04:30,540
more a million enemies who knows how

126
00:04:29,250 --> 00:04:32,430
many right just a huge number of

127
00:04:30,540 --> 00:04:34,860
entities and we want to make sure that

128
00:04:32,430 --> 00:04:36,360
we can scale so I want all of the things

129
00:04:34,860 --> 00:04:38,699
that we simulate at high frequency I

130
00:04:36,360 --> 00:04:40,439
want that to be a bounded known low

131
00:04:38,699 --> 00:04:42,750
number you know I want to have like a

132
00:04:40,439 --> 00:04:44,459
sub 100 number that's the stuff that's

133
00:04:42,750 --> 00:04:45,930
on the screen and just outside the

134
00:04:44,459 --> 00:04:47,699
screen where maybe you could hear it or

135
00:04:45,930 --> 00:04:48,900
where effects would sort of trickle into

136
00:04:47,699 --> 00:04:51,089
the screen that sort of stuff

137
00:04:48,899 --> 00:04:53,009
I want that number to be low and I want

138
00:04:51,089 --> 00:04:55,109
it to be controlled but I don't want to

139
00:04:53,009 --> 00:04:56,730
put a bound on this number I want this

140
00:04:55,110 --> 00:04:58,439
number to be able to scale up very well

141
00:04:56,730 --> 00:05:01,200
and not affect the runtime performance

142
00:04:58,439 --> 00:05:04,620
of the game so that's what this low

143
00:05:01,199 --> 00:05:06,539
frequency concept is for and so that's

144
00:05:04,620 --> 00:05:07,800
why we have sort of these two different

145
00:05:06,540 --> 00:05:09,270
types of entities and they're doing more

146
00:05:07,800 --> 00:05:10,980
work to be able to support that it's

147
00:05:09,269 --> 00:05:12,329
because we want to scale that up and

148
00:05:10,980 --> 00:05:15,180
realistically we're not gonna be able to

149
00:05:12,329 --> 00:05:16,919
do high fidelity simulation on entities

150
00:05:15,180 --> 00:05:18,930
at this kind of scale but we certainly

151
00:05:16,920 --> 00:05:22,560
could at this kind of scale right

152
00:05:18,930 --> 00:05:25,050
and so what I'm what I'm getting at here

153
00:05:22,560 --> 00:05:27,240
is that that means that that calls like

154
00:05:25,050 --> 00:05:30,449
this that operate on all like every

155
00:05:27,240 --> 00:05:33,960
single one because if you remember I can

156
00:05:30,449 --> 00:05:36,240
show you offset and check that just

157
00:05:33,959 --> 00:05:37,979
loops through all the high the high

158
00:05:36,240 --> 00:05:39,870
frequency entities and if they aren't

159
00:05:37,980 --> 00:05:41,670
inside the rectangle that's bet that the

160
00:05:39,870 --> 00:05:43,439
camera you know the camera bounded

161
00:05:41,670 --> 00:05:44,879
simulation which is which is bigger than

162
00:05:43,439 --> 00:05:46,589
the screen it's it's you know camera

163
00:05:44,879 --> 00:05:48,449
bands is perhaps a wrong term it's the

164
00:05:46,589 --> 00:05:52,739
it's more like the high frequency bound

165
00:05:48,449 --> 00:05:57,329
in fact we could say this is the high

166
00:05:52,740 --> 00:05:59,460
frequency bound right because the camera

167
00:05:57,329 --> 00:06:02,129
is actually only looking at it at a sort

168
00:05:59,459 --> 00:06:04,139
of a different subset so we're looping

169
00:06:02,129 --> 00:06:06,329
over every single high level entity here

170
00:06:04,139 --> 00:06:08,129
but that's okay and while we could up

171
00:06:06,329 --> 00:06:11,339
well we may want to optimize that a

172
00:06:08,129 --> 00:06:12,990
little bit later on we really don't have

173
00:06:11,339 --> 00:06:14,819
any pressing need to because the number

174
00:06:12,990 --> 00:06:16,439
of high level entities is low so the

175
00:06:14,819 --> 00:06:18,209
degree to which that'll tank our frame

176
00:06:16,439 --> 00:06:19,829
rate is actually not high it's not

177
00:06:18,209 --> 00:06:22,949
really that big of a deal

178
00:06:19,829 --> 00:06:24,839
but the other one that we were doing the

179
00:06:22,949 --> 00:06:27,689
other loop there which loops over all

180
00:06:24,839 --> 00:06:29,129
the low entities right so you know this

181
00:06:27,689 --> 00:06:30,899
was the part that dealt with the high

182
00:06:29,129 --> 00:06:32,639
enemies the one that deals with the low

183
00:06:30,899 --> 00:06:35,519
entities that one is definitely a

184
00:06:32,639 --> 00:06:37,139
problem because if we scale up the size

185
00:06:35,519 --> 00:06:38,639
of this array to be like a million

186
00:06:37,139 --> 00:06:41,919
entities or something like that that we

187
00:06:38,639 --> 00:06:43,479
are tracking there's no way that this is

188
00:06:41,920 --> 00:06:46,360
to be performant enough right that's

189
00:06:43,480 --> 00:06:48,310
just not gonna be sufficient it's going

190
00:06:46,360 --> 00:06:51,220
to take too long to do this processing

191
00:06:48,310 --> 00:06:54,189
and everything will slow down far too

192
00:06:51,220 --> 00:06:56,320
much right and we should probably you

193
00:06:54,189 --> 00:06:58,329
know we could presumably demonstrate

194
00:06:56,319 --> 00:07:00,159
that reasonably well

195
00:06:58,329 --> 00:07:02,050
in fact I guess one thing I could do is

196
00:07:00,160 --> 00:07:03,700
just go ahead and and and and

197
00:07:02,050 --> 00:07:05,680
demonstrate here you know if I've got

198
00:07:03,699 --> 00:07:07,000
this you can see that this is this is

199
00:07:05,680 --> 00:07:08,500
relatively performing I mean we haven't

200
00:07:07,000 --> 00:07:11,170
optimized anything and it's it's it's

201
00:07:08,500 --> 00:07:13,569
it's all very intentionally slow and

202
00:07:11,170 --> 00:07:14,830
unoptimized code but it totally is fine

203
00:07:13,569 --> 00:07:16,449
for playing right it's like there's

204
00:07:14,829 --> 00:07:18,939
nothing particularly problematic about

205
00:07:16,449 --> 00:07:21,310
this it's totally workable right but if

206
00:07:18,939 --> 00:07:23,170
I were to go and add a lot more of those

207
00:07:21,310 --> 00:07:24,879
low-frequency entities which I could do

208
00:07:23,170 --> 00:07:27,250
with just a loop here that just adds

209
00:07:24,879 --> 00:07:28,990
tons of the frequency entities right so

210
00:07:27,250 --> 00:07:31,750
when we when we initialize the game here

211
00:07:28,990 --> 00:07:33,310
what I could do is you know this this

212
00:07:31,750 --> 00:07:35,439
goes ahead and creates a bunch of rooms

213
00:07:33,310 --> 00:07:38,079
what I could do is say let's just go

214
00:07:35,439 --> 00:07:42,459
ahead and add a ton of entities as well

215
00:07:38,079 --> 00:07:44,589
right after that just a ton and you know

216
00:07:42,459 --> 00:07:46,539
I guess one problem that we have is we

217
00:07:44,589 --> 00:07:48,459
may mean more space for our four enemies

218
00:07:46,540 --> 00:07:50,110
because we haven't really we haven't

219
00:07:48,459 --> 00:07:52,120
really I think we're still at like 64

220
00:07:50,110 --> 00:07:53,560
megabytes or something like that so if I

221
00:07:52,120 --> 00:07:55,060
beef that up a bit if I said that that

222
00:07:53,560 --> 00:07:57,100
was two in 56 megabytes so we have more

223
00:07:55,060 --> 00:08:00,459
room of the permanent store for the game

224
00:07:57,100 --> 00:08:02,980
and I just create you know some dummy

225
00:08:00,459 --> 00:08:05,620
entity index here I just create some

226
00:08:02,980 --> 00:08:07,509
really large number of these right in

227
00:08:05,620 --> 00:08:09,340
fact I could just say we'll create as

228
00:08:07,509 --> 00:08:12,879
many as we have room for so I'll do a

229
00:08:09,339 --> 00:08:15,339
while loop and I'll do a while loop on

230
00:08:12,879 --> 00:08:17,860
that low entity count and I'll just say

231
00:08:15,339 --> 00:08:20,109
while the low entity count is less than

232
00:08:17,860 --> 00:08:24,220
however many could fit in the low empty

233
00:08:20,110 --> 00:08:26,080
array total right like so then I'm going

234
00:08:24,220 --> 00:08:28,540
to just add an entity right I'm gonna

235
00:08:26,079 --> 00:08:31,029
add a low entity in fact I'll just add a

236
00:08:28,540 --> 00:08:32,769
wall I guess and we'll add a wall at

237
00:08:31,029 --> 00:08:34,569
some location in fact I guess we could

238
00:08:32,769 --> 00:08:36,129
add them all at the same location we'll

239
00:08:34,570 --> 00:08:37,900
just add a wall out in the middle of

240
00:08:36,129 --> 00:08:40,570
nowhere so it's nowhere near the camera

241
00:08:37,899 --> 00:08:44,199
it's not relevant for it to be simulated

242
00:08:40,570 --> 00:08:46,450
or anything like that but you know it's

243
00:08:44,200 --> 00:08:49,150
it's it's out there right so if an AB

244
00:08:46,450 --> 00:08:50,560
cell X AB style Y AB style Z right and

245
00:08:49,149 --> 00:08:52,389
in fact you know I guess one one thing

246
00:08:50,559 --> 00:08:55,539
that I could do is I could just say that

247
00:08:52,389 --> 00:08:57,399
whatever that low empty index would be

248
00:08:55,539 --> 00:08:59,379
right something like this I could say

249
00:08:57,399 --> 00:09:03,879
whatever the low entity count is right

250
00:08:59,379 --> 00:09:07,269
gamestate like soaps I could say that

251
00:09:03,879 --> 00:09:12,090
whatever that is will make that be what

252
00:09:07,269 --> 00:09:14,379
it's you know what it's I'll do this

253
00:09:12,090 --> 00:09:16,840
coordinate what is call it coordinate

254
00:09:14,379 --> 00:09:20,799
there we go and so we'll make that just

255
00:09:16,840 --> 00:09:22,509
be you know that's a 1024 plus this and

256
00:09:20,799 --> 00:09:24,609
then we'll stick it at that coordinate

257
00:09:22,509 --> 00:09:26,169
that coordinate that coordinate in XYZ

258
00:09:24,610 --> 00:09:27,310
right so just stick it out in the middle

259
00:09:26,169 --> 00:09:29,709
of nowhere but they're gonna all be in

260
00:09:27,309 --> 00:09:32,769
different locations right so there we go

261
00:09:29,710 --> 00:09:34,330
that'll add just a ton of walls you know

262
00:09:32,769 --> 00:09:35,860
in the middle of nowhere and I could run

263
00:09:34,330 --> 00:09:39,220
this and it's only going to add a few at

264
00:09:35,860 --> 00:09:42,190
this point right or it should whoops I

265
00:09:39,220 --> 00:09:43,840
guess I added one too many there while

266
00:09:42,190 --> 00:09:47,080
though entity count is less than array

267
00:09:43,840 --> 00:09:51,460
count see then we're going to add why

268
00:09:47,080 --> 00:09:54,730
was that was the assert theme state low

269
00:09:51,460 --> 00:09:59,170
in D count is less than game so why did

270
00:09:54,730 --> 00:10:00,250
I keep trying to add after that what was

271
00:09:59,169 --> 00:10:01,870
the problem there I'm gonna take a look

272
00:10:00,250 --> 00:10:03,700
at that sorry this is probably just me

273
00:10:01,870 --> 00:10:04,750
it's a Monday you got to give me you

274
00:10:03,700 --> 00:10:08,050
gotta cut me some slack here

275
00:10:04,750 --> 00:10:10,480
so the low-end account and that's so why

276
00:10:08,049 --> 00:10:12,699
didn't we break out of that Oh poop duh

277
00:10:10,480 --> 00:10:14,200
we need space for the player that's good

278
00:10:12,700 --> 00:10:16,240
so I guess we got to leave a little bit

279
00:10:14,200 --> 00:10:18,790
of room we got to leave a little bit of

280
00:10:16,240 --> 00:10:22,899
room so for the player otherwise we'll

281
00:10:18,789 --> 00:10:25,179
run out of entities all right so here we

282
00:10:22,899 --> 00:10:27,909
go so now we've we filled up the array

283
00:10:25,179 --> 00:10:29,319
to what 4096 entities right so that loop

284
00:10:27,909 --> 00:10:30,339
is gonna go over the four thousand the

285
00:10:29,320 --> 00:10:32,950
nine six entities and see whether

286
00:10:30,340 --> 00:10:34,090
they're inside and so let's go ahead and

287
00:10:32,950 --> 00:10:35,379
start cranking that number up and just

288
00:10:34,090 --> 00:10:36,910
see what we can go to now computers are

289
00:10:35,379 --> 00:10:39,009
really fast these days so actually we'll

290
00:10:36,909 --> 00:10:40,959
probably be able to go pretty high but

291
00:10:39,009 --> 00:10:41,860
let's find out exactly where we can go

292
00:10:40,960 --> 00:10:43,780
with that

293
00:10:41,860 --> 00:10:45,940
so let's say that we change this to six

294
00:10:43,779 --> 00:10:47,049
five five three six or actually let's

295
00:10:45,940 --> 00:10:48,250
just let's just go its head and pick

296
00:10:47,049 --> 00:10:49,929
that up the numbers I use I used a

297
00:10:48,250 --> 00:10:52,080
hundred thousand before so we'll now

298
00:10:49,929 --> 00:10:55,779
have a hundred thousand in decent here

299
00:10:52,080 --> 00:10:57,220
so well yeah computers are too fast I

300
00:10:55,779 --> 00:10:58,839
guess that's this is not gonna make a

301
00:10:57,220 --> 00:11:02,529
very good demo it looks like it's almost

302
00:10:58,840 --> 00:11:03,730
impossible for me to actually since

303
00:11:02,529 --> 00:11:05,259
we're not actually doing anything than

304
00:11:03,730 --> 00:11:07,990
checking the rectangle bounds of these

305
00:11:05,259 --> 00:11:08,480
guys oh but you know what that's on only

306
00:11:07,990 --> 00:11:10,190
on set

307
00:11:08,480 --> 00:11:11,870
amaura actually so it's only when we

308
00:11:10,190 --> 00:11:15,649
moved through but even so it's plenty

309
00:11:11,870 --> 00:11:16,820
fast unfortunately yeah oh well so I

310
00:11:15,649 --> 00:11:19,220
guess this won't make a very good demo

311
00:11:16,820 --> 00:11:21,649
of why we need to do this we actually

312
00:11:19,220 --> 00:11:24,740
have to be doing some actual work it

313
00:11:21,649 --> 00:11:27,139
would appear in that in that low check

314
00:11:24,740 --> 00:11:28,539
in order for that to to really cost us

315
00:11:27,139 --> 00:11:30,799
anything

316
00:11:28,539 --> 00:11:31,698
computers are so crazy fast these days

317
00:11:30,799 --> 00:11:33,620
it's it's insane

318
00:11:31,698 --> 00:11:34,639
like you know that's not the kind of

319
00:11:33,620 --> 00:11:38,470
thing you would have been able to get

320
00:11:34,639 --> 00:11:42,350
away with much too long ago but anyway

321
00:11:38,470 --> 00:11:45,350
so basically this guy right here was

322
00:11:42,350 --> 00:11:47,750
literally looping over about I don't

323
00:11:45,350 --> 00:11:49,370
know like a million of those guys right

324
00:11:47,750 --> 00:11:53,208
somewhere stri of a million is what I

325
00:11:49,370 --> 00:11:56,860
typed in there and so somehow that still

326
00:11:53,208 --> 00:11:59,059
manages to not be even a minor

327
00:11:56,860 --> 00:12:01,129
inconvenience for us now if I had

328
00:11:59,059 --> 00:12:03,319
changed the set camera to operate every

329
00:12:01,129 --> 00:12:04,789
frame I don't know if that would have

330
00:12:03,320 --> 00:12:07,010
been so if we were doing smooth

331
00:12:04,789 --> 00:12:08,120
scrolling for example maybe that would

332
00:12:07,009 --> 00:12:09,769
have been something that we would notice

333
00:12:08,120 --> 00:12:12,320
in fact I could check that out as well

334
00:12:09,769 --> 00:12:13,879
let's go ahead and see here it's so

335
00:12:12,320 --> 00:12:18,110
amazing how fast computers are it's

336
00:12:13,879 --> 00:12:20,240
great let's see map new entities in and

337
00:12:18,110 --> 00:12:26,509
all the movies out new camera P so

338
00:12:20,240 --> 00:12:30,980
basically this is just I guess I kind of

339
00:12:26,509 --> 00:12:33,139
just want to do this where let's let's

340
00:12:30,980 --> 00:12:36,949
do it this way let's do it so we just

341
00:12:33,139 --> 00:12:40,549
track new camera P equals camera

342
00:12:36,948 --> 00:12:42,078
following entity low P so the it just

343
00:12:40,549 --> 00:12:44,299
it's just gonna be this will be just

344
00:12:42,078 --> 00:12:46,789
smooth scrolling basically so that way

345
00:12:44,299 --> 00:12:48,979
you'd have to check on every frame and

346
00:12:46,789 --> 00:12:51,230
it still I mean that's still pretty

347
00:12:48,980 --> 00:12:54,019
zippy I feel like that's that's still at

348
00:12:51,230 --> 00:12:55,699
the point where it's kind of I mean it's

349
00:12:54,019 --> 00:12:57,740
not a good frame rate but it's not

350
00:12:55,698 --> 00:12:59,389
really a bad frame right either and I'm

351
00:12:57,740 --> 00:13:03,860
gonna go ahead and and step in there and

352
00:12:59,389 --> 00:13:06,230
and this is a debug mode to god intel

353
00:13:03,860 --> 00:13:09,050
they saved they saved everyone basically

354
00:13:06,230 --> 00:13:11,509
from themselves by making such crazy

355
00:13:09,049 --> 00:13:14,479
fast hardware so basically this is

356
00:13:11,509 --> 00:13:15,980
happening every frame now and the

357
00:13:14,480 --> 00:13:17,779
gamestate low-end account should be very

358
00:13:15,980 --> 00:13:21,889
high

359
00:13:17,779 --> 00:13:23,659
count right like you can see and it's

360
00:13:21,889 --> 00:13:25,429
just doing these comparisons just crazy

361
00:13:23,659 --> 00:13:26,839
fast right it's just able to chew

362
00:13:25,429 --> 00:13:31,120
through those things incredibly

363
00:13:26,840 --> 00:13:33,560
incredibly fast you can go ahead and see

364
00:13:31,120 --> 00:13:35,840
it's it's got a fair bit of work to do

365
00:13:33,559 --> 00:13:37,250
but it's all relatively straightforward

366
00:13:35,840 --> 00:13:39,590
it's just able to sort of plow through

367
00:13:37,250 --> 00:13:40,879
this at sort of a ridiculously enormous

368
00:13:39,590 --> 00:13:43,190
rate so I'm not sure I'm gonna go ahead

369
00:13:40,879 --> 00:13:44,750
and try a little bit more to see if I

370
00:13:43,190 --> 00:13:47,780
can get it to the point just to figure

371
00:13:44,750 --> 00:13:50,389
out where are our bounds would have been

372
00:13:47,779 --> 00:13:53,149
where where the breaking point would be

373
00:13:50,389 --> 00:13:55,850
for the number of entities that we'd

374
00:13:53,149 --> 00:13:58,159
have to go go to let's see

375
00:13:55,850 --> 00:14:00,620
so how many do we have here we've got 1

376
00:13:58,159 --> 00:14:03,110
million n of these so what if I was to

377
00:14:00,620 --> 00:14:04,100
go up to 10 million entities I don't

378
00:14:03,110 --> 00:14:06,320
even know if we've got enough room for

379
00:14:04,100 --> 00:14:07,420
those but let's see yeah I didn't think

380
00:14:06,320 --> 00:14:10,010
so

381
00:14:07,419 --> 00:14:15,349
gamestate it's not even that big so

382
00:14:10,009 --> 00:14:17,120
we'll try 5 million entities so there we

383
00:14:15,350 --> 00:14:18,769
go now we've at least hit a boundary at

384
00:14:17,120 --> 00:14:21,049
5 million where you can really feel it

385
00:14:18,769 --> 00:14:23,120
it's it's really super sluggish now

386
00:14:21,049 --> 00:14:27,229
right and it can't hit framerate anymore

387
00:14:23,120 --> 00:14:31,850
its way it's way below the 30 so yeah I

388
00:14:27,230 --> 00:14:33,320
mean basically once we have more work

389
00:14:31,850 --> 00:14:35,779
that we're doing this'll be more

390
00:14:33,320 --> 00:14:37,280
interesting of a test I was assuming

391
00:14:35,779 --> 00:14:40,009
that that it would have a little bit of

392
00:14:37,279 --> 00:14:41,389
a trouble doing but I guess there's it

393
00:14:40,009 --> 00:14:45,110
was just so simple what it was asked to

394
00:14:41,389 --> 00:14:46,580
do but so at that point five million NTS

395
00:14:45,110 --> 00:14:53,930
that's kind of crazy how fast you can do

396
00:14:46,580 --> 00:14:56,420
that loop so all right maybe based on

397
00:14:53,929 --> 00:14:58,969
that test we really just don't care that

398
00:14:56,419 --> 00:15:01,250
much if that really is the status of

399
00:14:58,970 --> 00:15:02,899
things that we're just not feeling that

400
00:15:01,250 --> 00:15:04,190
that much then maybe we don't have to

401
00:15:02,899 --> 00:15:08,120
worry about it right now what I was

402
00:15:04,190 --> 00:15:09,740
going to say was that I feel like we

403
00:15:08,120 --> 00:15:12,049
would probably need to replace that and

404
00:15:09,740 --> 00:15:14,060
I feel like eventually we will but man

405
00:15:12,049 --> 00:15:18,049
like I said peers are so fast it's not

406
00:15:14,059 --> 00:15:19,989
anytime soon I guess I really wanted to

407
00:15:18,049 --> 00:15:23,269
make sure that we were only checking

408
00:15:19,990 --> 00:15:26,269
sort of some smaller subset of the low

409
00:15:23,269 --> 00:15:30,929
frequency entities ones that were likely

410
00:15:26,269 --> 00:15:32,850
to be necessary to page in and so well

411
00:15:30,929 --> 00:15:35,399
do there is put those low entities in a

412
00:15:32,850 --> 00:15:37,920
spatial partition something that allows

413
00:15:35,399 --> 00:15:40,980
us to query them so that we can just get

414
00:15:37,919 --> 00:15:45,509
them without having to do a bunch of

415
00:15:40,980 --> 00:15:46,800
work to you know to figure out whether

416
00:15:45,509 --> 00:15:49,079
they were inside or not so we just

417
00:15:46,799 --> 00:15:52,229
basically you know kind of be able to

418
00:15:49,078 --> 00:15:53,818
ask the world what are you know if the

419
00:15:52,230 --> 00:15:56,428
camera moves in a particular direction

420
00:15:53,818 --> 00:15:59,308
right like let's say that the camera

421
00:15:56,428 --> 00:16:00,838
moves this way be able to ask just what

422
00:15:59,308 --> 00:16:02,399
are the entities in this area and not

423
00:16:00,839 --> 00:16:05,490
have to look through all the entities to

424
00:16:02,399 --> 00:16:06,688
do it but man like I said we just have

425
00:16:05,490 --> 00:16:08,100
so much horsepower to play with maybe

426
00:16:06,688 --> 00:16:10,649
that's just something better left for

427
00:16:08,100 --> 00:16:16,230
when we're doing the performance pass on

428
00:16:10,649 --> 00:16:23,549
things so alright this needs to be

429
00:16:16,230 --> 00:16:27,360
accelerated but man this CPU is crazy

430
00:16:23,549 --> 00:16:28,498
fast and I guess it only stands to

431
00:16:27,360 --> 00:16:30,808
reason I mean when you think about how

432
00:16:28,499 --> 00:16:33,509
many pixels we are drawing just for the

433
00:16:30,808 --> 00:16:35,639
bitmap it's a lot more than this and the

434
00:16:33,509 --> 00:16:37,829
operations that we're doing in here just

435
00:16:35,639 --> 00:16:39,329
aren't that expensive so yeah at the end

436
00:16:37,828 --> 00:16:40,799
of the day not much but we'd like to get

437
00:16:39,328 --> 00:16:41,758
rid of this anyway because we don't want

438
00:16:40,799 --> 00:16:46,438
to be spending a huge amount of our

439
00:16:41,759 --> 00:16:50,220
frame time doing that either way so that

440
00:16:46,438 --> 00:16:51,269
said that said and this is debug code

441
00:16:50,220 --> 00:16:53,040
which is even better we're not even

442
00:16:51,269 --> 00:16:55,909
compiling in optimizations at the moment

443
00:16:53,039 --> 00:16:58,259
so that said where do we go from there

444
00:16:55,909 --> 00:16:59,428
because that actually puts us in some

445
00:16:58,259 --> 00:17:02,249
pretty nice in a pre nice position

446
00:16:59,428 --> 00:17:04,048
so what I would say is I would still

447
00:17:02,249 --> 00:17:06,538
like to go ahead and do one more

448
00:17:04,048 --> 00:17:07,949
architectural change even though we

449
00:17:06,538 --> 00:17:09,838
don't really need to do it for Speed

450
00:17:07,949 --> 00:17:12,568
purposes what I would like to do is is

451
00:17:09,838 --> 00:17:14,639
now go back and finally revisit our tile

452
00:17:12,568 --> 00:17:16,740
map we made a hash table so that it

453
00:17:14,640 --> 00:17:19,350
could be pop properly stored sparsely

454
00:17:16,740 --> 00:17:21,390
and that is something that we're doing

455
00:17:19,349 --> 00:17:23,658
at the moment and what I would be

456
00:17:21,390 --> 00:17:26,189
interested in doing now is going ok

457
00:17:23,659 --> 00:17:28,439
maybe now is a good time to get out of

458
00:17:26,189 --> 00:17:29,970
the tile map business because like I

459
00:17:28,439 --> 00:17:32,220
said I don't really want things to be

460
00:17:29,970 --> 00:17:35,759
too tile oriented at the end of the day

461
00:17:32,220 --> 00:17:38,009
so I just want to make you know I would

462
00:17:35,759 --> 00:17:40,440
like the world to be partitioned into

463
00:17:38,009 --> 00:17:42,119
sections that get loaded so that they

464
00:17:40,440 --> 00:17:43,558
can be stored sparsely and so that they

465
00:17:42,119 --> 00:17:44,699
can be you know paged in and out is

466
00:17:43,558 --> 00:17:47,430
necessary and these sorts of

467
00:17:44,700 --> 00:17:49,470
and so what I would like to do is maybe

468
00:17:47,430 --> 00:17:51,330
start looking at these as just things

469
00:17:49,470 --> 00:17:53,549
that hold entities instead of things

470
00:17:51,329 --> 00:17:56,339
that are in a tile map because I don't

471
00:17:53,549 --> 00:17:57,690
know like playing with a tile map it

472
00:17:56,339 --> 00:17:59,549
just didn't seem that interesting and I

473
00:17:57,690 --> 00:18:01,019
feel like graphics wise we kind of want

474
00:17:59,549 --> 00:18:03,240
to have sort of more freeform stuff

475
00:18:01,019 --> 00:18:04,829
anyway and so my plan was always to sort

476
00:18:03,240 --> 00:18:07,049
of use the tile map as just a guideline

477
00:18:04,829 --> 00:18:08,579
anyway so I kind of feel like I might

478
00:18:07,049 --> 00:18:11,579
want to convert over now that we have

479
00:18:08,579 --> 00:18:12,990
walls or entities I'm thinking maybe the

480
00:18:11,579 --> 00:18:15,240
tile map is just a thing that holds

481
00:18:12,990 --> 00:18:16,980
entities and to the extent that it is

482
00:18:15,240 --> 00:18:18,960
tiled at all if just if those entities

483
00:18:16,980 --> 00:18:21,420
happen to be like things that we created

484
00:18:18,960 --> 00:18:24,240
that go in a timely fashion then that's

485
00:18:21,420 --> 00:18:28,500
great but they don't have to be right so

486
00:18:24,240 --> 00:18:30,029
that's what I was thinking and so what

487
00:18:28,500 --> 00:18:31,890
I'd like to do is go ahead and sort of

488
00:18:30,029 --> 00:18:34,649
change the notion of the tile map here

489
00:18:31,890 --> 00:18:36,720
to sort of have a little bit more of

490
00:18:34,650 --> 00:18:38,700
that right to be based on storing

491
00:18:36,720 --> 00:18:43,680
entities not on storing tiles that have

492
00:18:38,700 --> 00:18:46,259
data values in them right and so how the

493
00:18:43,680 --> 00:18:48,870
I've got to sort of ways I could think

494
00:18:46,259 --> 00:18:50,609
about doing that right right now what we

495
00:18:48,869 --> 00:18:52,679
do is we store all the löwe entities in

496
00:18:50,609 --> 00:18:55,889
this big giant array here right and

497
00:18:52,680 --> 00:18:57,480
those low entities are then just

498
00:18:55,890 --> 00:18:59,610
processed them like in that loop there

499
00:18:57,480 --> 00:19:00,990
we just run over them all or you know if

500
00:18:59,609 --> 00:19:04,859
you have a picture entity that you're

501
00:19:00,990 --> 00:19:07,950
talking about that's fine so I've got

502
00:19:04,859 --> 00:19:12,089
two things I could do here in terms of

503
00:19:07,950 --> 00:19:14,910
storing the entities I could put the low

504
00:19:12,089 --> 00:19:18,240
entities directly into the storage of

505
00:19:14,910 --> 00:19:20,519
the world right I could make it so that

506
00:19:18,240 --> 00:19:22,380
the world the way that the world stores

507
00:19:20,519 --> 00:19:25,200
things is that stores the entities

508
00:19:22,380 --> 00:19:26,610
directly inside it and then whenever

509
00:19:25,200 --> 00:19:29,180
you're talking about entities you go

510
00:19:26,609 --> 00:19:31,979
through the world to pull them out right

511
00:19:29,180 --> 00:19:34,769
the other way I could do it is that the

512
00:19:31,980 --> 00:19:37,140
world is just a spatial index into the

513
00:19:34,769 --> 00:19:39,559
low entity set so that basically there's

514
00:19:37,140 --> 00:19:42,420
just all the the world stores is is

515
00:19:39,559 --> 00:19:45,259
which entities like the index of which

516
00:19:42,420 --> 00:19:49,140
entities are in in a given tile chunk

517
00:19:45,259 --> 00:19:52,710
now there's reasons to and not to do

518
00:19:49,140 --> 00:19:55,530
both of those two things the problem

519
00:19:52,710 --> 00:19:57,539
with having the entities stored directly

520
00:19:55,529 --> 00:19:58,889
in the tile chunks which would make

521
00:19:57,539 --> 00:20:00,809
sense for a lot of reasons

522
00:19:58,890 --> 00:20:01,950
like for the example because we know

523
00:20:00,809 --> 00:20:03,450
we're always gonna be thinking about

524
00:20:01,950 --> 00:20:05,610
this spatially it makes a lot of sense

525
00:20:03,450 --> 00:20:07,140
to be able to say let's process them

526
00:20:05,609 --> 00:20:08,789
directly let's keep them all directly

527
00:20:07,140 --> 00:20:10,710
there in that memory block so that when

528
00:20:08,789 --> 00:20:12,809
we go to access what's in this

529
00:20:10,710 --> 00:20:14,039
particular point in space we can just

530
00:20:12,809 --> 00:20:16,710
run over them right there and not have

531
00:20:14,039 --> 00:20:18,329
to do a bunch of chasing the problem

532
00:20:16,710 --> 00:20:20,519
with that is that we end up in a

533
00:20:18,329 --> 00:20:23,039
situation where referencing the entities

534
00:20:20,519 --> 00:20:25,980
becomes difficult so if we want to talk

535
00:20:23,039 --> 00:20:27,629
about entity 12 in a particular way like

536
00:20:25,980 --> 00:20:30,029
so somebody is like following that

537
00:20:27,630 --> 00:20:31,710
entity or something it becomes more

538
00:20:30,029 --> 00:20:33,930
difficult for them because it's very

539
00:20:31,710 --> 00:20:36,420
hard for that person to know where

540
00:20:33,930 --> 00:20:38,340
entity 12 is there's no central notion

541
00:20:36,420 --> 00:20:40,950
of entity 12 so we would have to have a

542
00:20:38,339 --> 00:20:45,929
secondary way to look up where entity 12

543
00:20:40,950 --> 00:20:47,519
is right on the other hand if we do it

544
00:20:45,930 --> 00:20:51,450
the other way where this just stores

545
00:20:47,519 --> 00:20:52,619
indexes into the low entity table then

546
00:20:51,450 --> 00:20:54,420
we don't have that problem but we have

547
00:20:52,619 --> 00:20:55,919
to chase the we have to chase those

548
00:20:54,420 --> 00:20:57,210
indices so we're always looking up once

549
00:20:55,920 --> 00:21:00,480
in the space position and then looking

550
00:20:57,210 --> 00:21:02,850
up again and really we end up in the

551
00:21:00,480 --> 00:21:04,440
same situation there because those are

552
00:21:02,849 --> 00:21:06,750
basically just pointers you know those

553
00:21:04,440 --> 00:21:08,850
are basically just references to those

554
00:21:06,750 --> 00:21:10,289
entities so we still do have the problem

555
00:21:08,849 --> 00:21:11,849
where when you reference an entity you

556
00:21:10,289 --> 00:21:13,289
have to think about the fact that people

557
00:21:11,849 --> 00:21:14,669
are holding references to it and if it

558
00:21:13,289 --> 00:21:16,440
gets deleted they have to be updated

559
00:21:14,670 --> 00:21:18,960
there and all those sorts of same things

560
00:21:16,440 --> 00:21:22,710
that you would normally do so we do have

561
00:21:18,960 --> 00:21:24,509
like you know it's not a it's not a

562
00:21:22,710 --> 00:21:26,250
problem that has an easy right answer

563
00:21:24,509 --> 00:21:27,809
there's there's different ways that we

564
00:21:26,250 --> 00:21:29,069
could envision doing it and it's hard to

565
00:21:27,809 --> 00:21:32,549
know which one exactly would be the

566
00:21:29,069 --> 00:21:36,329
right way what I'm going to assume is

567
00:21:32,549 --> 00:21:41,069
probably what we would want to do is I

568
00:21:36,329 --> 00:21:44,309
would assume that we we probably don't

569
00:21:41,069 --> 00:21:47,669
need references to most entities most of

570
00:21:44,309 --> 00:21:49,349
the time right like most entities aren't

571
00:21:47,670 --> 00:21:51,210
being referenced most of the time like

572
00:21:49,349 --> 00:21:52,679
there's only a few entities that are

573
00:21:51,210 --> 00:21:54,120
getting followed by some one or a few

574
00:21:52,680 --> 00:21:55,320
entities that are getting chased by some

575
00:21:54,119 --> 00:21:59,519
one or a few entities that are like

576
00:21:55,319 --> 00:22:02,039
inside of some other entity right so the

577
00:21:59,519 --> 00:22:04,920
ability to refer to entities is is a

578
00:22:02,039 --> 00:22:06,779
less heavyweight operation than just the

579
00:22:04,920 --> 00:22:10,170
standard spatial processing of entities

580
00:22:06,779 --> 00:22:12,490
which seems probably more common and so

581
00:22:10,170 --> 00:22:14,289
you know my gut feel with

582
00:22:12,490 --> 00:22:16,870
you know of which one to implement first

583
00:22:14,289 --> 00:22:20,139
sort of suggests to me that storing the

584
00:22:16,869 --> 00:22:22,689
entities out in blocks that are a long

585
00:22:20,140 --> 00:22:24,130
like we're spatial and entities that are

586
00:22:22,690 --> 00:22:26,860
in the same spatial location our group

587
00:22:24,130 --> 00:22:30,820
together seems to make a fair bit of

588
00:22:26,859 --> 00:22:33,159
sense and so the question would be if we

589
00:22:30,819 --> 00:22:35,470
were to do that what would it have to

590
00:22:33,160 --> 00:22:38,259
look like in order for those people who

591
00:22:35,470 --> 00:22:40,329
do need to reference entities by some

592
00:22:38,259 --> 00:22:44,619
kind of permanent handle basically how

593
00:22:40,329 --> 00:22:45,939
would they do it right and so I guess

594
00:22:44,619 --> 00:22:47,500
I'm just gonna think about that a little

595
00:22:45,940 --> 00:22:50,259
bit and see what that would look like

596
00:22:47,500 --> 00:22:51,670
right so let's suppose that we have our

597
00:22:50,259 --> 00:22:53,379
child chunks here right which were

598
00:22:51,670 --> 00:22:55,330
previously storing tiles but now they're

599
00:22:53,380 --> 00:22:57,670
storing like a bunch of entities right

600
00:22:55,329 --> 00:23:01,178
so now they're storing some some low

601
00:22:57,670 --> 00:23:02,769
entity you know some low entity block

602
00:23:01,179 --> 00:23:05,679
that's just a bunch of entities in here

603
00:23:02,769 --> 00:23:07,509
and we'll talk about how we would store

604
00:23:05,679 --> 00:23:08,559
this later but we've got you know we've

605
00:23:07,509 --> 00:23:10,450
got something in here where we're

606
00:23:08,558 --> 00:23:12,339
storing these entities and so now

607
00:23:10,450 --> 00:23:13,960
whenever we're iterating over things

608
00:23:12,339 --> 00:23:15,759
spatially it's pretty easy because we

609
00:23:13,960 --> 00:23:18,610
can just see all of the entities that

610
00:23:15,759 --> 00:23:19,450
are stored inside this pouch chunk and

611
00:23:18,609 --> 00:23:26,250
we're good to go

612
00:23:19,450 --> 00:23:30,610
right really very simple not a big deal

613
00:23:26,250 --> 00:23:34,269
but how do we refer to them indirectly

614
00:23:30,609 --> 00:23:36,729
right and what I would assume is that in

615
00:23:34,269 --> 00:23:38,920
order to refer to them indirectly we

616
00:23:36,730 --> 00:23:41,769
would essentially have two choices one

617
00:23:38,920 --> 00:23:45,730
is that all entities get a universal ID

618
00:23:41,769 --> 00:23:48,339
right and that Universal ID is stored

619
00:23:45,730 --> 00:23:49,599
either in some kind of a tree or in some

620
00:23:48,339 --> 00:23:51,279
kind of array that goes along with them

621
00:23:49,599 --> 00:23:59,939
so for example in here we would have

622
00:23:51,279 --> 00:24:02,829
something like you know low entity chunk

623
00:23:59,940 --> 00:24:05,799
reference or something like this and it

624
00:24:02,829 --> 00:24:09,009
would have you know the tile chunk that

625
00:24:05,799 --> 00:24:11,049
that the entity was in and the entity

626
00:24:09,009 --> 00:24:15,279
right and and the entity index in that

627
00:24:11,049 --> 00:24:16,990
chunk right or something like this or we

628
00:24:15,279 --> 00:24:18,069
could just if we don't ever actually

629
00:24:16,990 --> 00:24:20,349
need that particular piece of

630
00:24:18,069 --> 00:24:21,639
information we could store just a

631
00:24:20,349 --> 00:24:24,789
pointer to the entity but I suspect we

632
00:24:21,640 --> 00:24:26,210
would need that piece of information so

633
00:24:24,789 --> 00:24:28,849
we'd store that and we'd have

634
00:24:26,210 --> 00:24:30,890
sort of a set of those references we'd

635
00:24:28,849 --> 00:24:33,019
have one for however many low entities

636
00:24:30,890 --> 00:24:35,690
there were right and that would be the

637
00:24:33,019 --> 00:24:38,299
end of it that would be the table and so

638
00:24:35,690 --> 00:24:40,220
anytime you got an entity also gets one

639
00:24:38,299 --> 00:24:42,349
of these things in here and when enemies

640
00:24:40,220 --> 00:24:47,240
get moved around they are updated in

641
00:24:42,349 --> 00:24:49,519
this in this reference table seems

642
00:24:47,240 --> 00:24:53,029
totally reasonable to me waste a bit of

643
00:24:49,519 --> 00:24:55,490
space and so it's a little bit piggy so

644
00:24:53,029 --> 00:24:57,889
and the reason for that is because like

645
00:24:55,490 --> 00:25:00,259
I said a lot of entities are like a wall

646
00:24:57,890 --> 00:25:02,600
or a tree aren't being referenced by

647
00:25:00,259 --> 00:25:04,730
anyone and so we're paying the price to

648
00:25:02,599 --> 00:25:06,829
be able to reference them without ever

649
00:25:04,730 --> 00:25:09,819
anyone actually needing to reference

650
00:25:06,829 --> 00:25:11,720
them for any particular reason and so

651
00:25:09,819 --> 00:25:13,849
another way to think about it would be

652
00:25:11,720 --> 00:25:16,069
is there a way that we can structure

653
00:25:13,849 --> 00:25:18,289
things so that only the people who

654
00:25:16,069 --> 00:25:20,149
actually need to be referenced at any

655
00:25:18,289 --> 00:25:22,730
given time and only the people who were

656
00:25:20,150 --> 00:25:25,759
having essentially who have references

657
00:25:22,730 --> 00:25:27,110
to them that are being held right by

658
00:25:25,759 --> 00:25:29,509
some other entity or something that

659
00:25:27,109 --> 00:25:35,059
cares about talking about that stuff

660
00:25:29,509 --> 00:25:39,379
Kennedy you know could we figure out how

661
00:25:35,059 --> 00:25:41,179
to talk about that entity haven't have a

662
00:25:39,380 --> 00:25:44,600
handle that essentially only when that

663
00:25:41,180 --> 00:25:46,970
was true and we could do that as well

664
00:25:44,599 --> 00:25:48,349
with sort of a double reference ii kind

665
00:25:46,970 --> 00:25:50,660
of a scheme but the problem there is

666
00:25:48,349 --> 00:25:53,029
it's hard to do that without bloating

667
00:25:50,660 --> 00:25:55,460
there without basically paying the cost

668
00:25:53,029 --> 00:25:57,649
in another place because let's say we

669
00:25:55,460 --> 00:26:00,590
did something where we said okay we want

670
00:25:57,650 --> 00:26:02,240
to do that so we'll only have this this

671
00:26:00,589 --> 00:26:04,730
right here where we have like a

672
00:26:02,240 --> 00:26:07,640
reference count right

673
00:26:04,730 --> 00:26:09,589
you know referenced referenced entity

674
00:26:07,640 --> 00:26:12,530
count and then we only have these

675
00:26:09,589 --> 00:26:15,529
references for the number that there

676
00:26:12,529 --> 00:26:17,119
were right so we only have a small

677
00:26:15,529 --> 00:26:18,440
number of these you know maybe there's

678
00:26:17,119 --> 00:26:19,639
there's some small number in a given

679
00:26:18,440 --> 00:26:22,100
time there's not very many of them

680
00:26:19,640 --> 00:26:25,970
there's a lot less right if you were to

681
00:26:22,099 --> 00:26:28,490
do that though the question is when an

682
00:26:25,970 --> 00:26:31,579
entity needs to update its location in

683
00:26:28,490 --> 00:26:33,740
here how does it know which one of these

684
00:26:31,579 --> 00:26:35,689
to update right because the entity

685
00:26:33,740 --> 00:26:37,039
doesn't store any way to get back here

686
00:26:35,690 --> 00:26:39,410
so we're zooming over these guys who are

687
00:26:37,039 --> 00:26:40,609
processing them and we need to change

688
00:26:39,410 --> 00:26:42,860
like their location or something like

689
00:26:40,609 --> 00:26:44,089
that Wichita chime therian or something

690
00:26:42,859 --> 00:26:47,000
like that so they can be found again

691
00:26:44,089 --> 00:26:48,589
correctly it's unclear how we would ever

692
00:26:47,000 --> 00:26:50,329
get back here because this doesn't store

693
00:26:48,589 --> 00:26:52,459
the information necessary to find it in

694
00:26:50,329 --> 00:26:54,710
here we could search over this but that

695
00:26:52,460 --> 00:26:55,789
might be expensive and so we end up in a

696
00:26:54,710 --> 00:26:58,759
situation where it's a little bit

697
00:26:55,789 --> 00:27:00,019
problematic and I don't know and we

698
00:26:58,759 --> 00:27:01,700
don't want to add more space here

699
00:27:00,019 --> 00:27:02,990
because the only reason that we were

700
00:27:01,700 --> 00:27:04,340
doing this in the first place was the

701
00:27:02,990 --> 00:27:06,170
safe space if we didn't care about space

702
00:27:04,339 --> 00:27:07,250
we just have the giant array that had

703
00:27:06,170 --> 00:27:12,560
all the entities in it and you just

704
00:27:07,250 --> 00:27:14,599
reference to that so you know it's it's

705
00:27:12,559 --> 00:27:16,639
an open question and by the way someone

706
00:27:14,599 --> 00:27:19,309
was asking I think a couple days ago

707
00:27:16,640 --> 00:27:21,590
about about slot maps they were calling

708
00:27:19,309 --> 00:27:23,629
it and this would presumably qualify in

709
00:27:21,589 --> 00:27:25,609
the slot map category although I never

710
00:27:23,630 --> 00:27:27,920
used that term so I'm not sure I

711
00:27:25,609 --> 00:27:29,569
precisely know when people decide they'd

712
00:27:27,920 --> 00:27:30,920
like to use that term but that's you

713
00:27:29,569 --> 00:27:32,809
know I'm sort of talking about here is

714
00:27:30,920 --> 00:27:34,820
is basically a place where you can go to

715
00:27:32,809 --> 00:27:36,619
find out where an entity is when the

716
00:27:34,819 --> 00:27:38,299
entities themselves are kind of buried

717
00:27:36,619 --> 00:27:39,799
out into the world and and need some

718
00:27:38,299 --> 00:27:42,680
kind of handle that can sort of indirect

719
00:27:39,799 --> 00:27:44,539
through to them so there you go that's

720
00:27:42,680 --> 00:27:46,310
my entire thought about all of that

721
00:27:44,539 --> 00:27:48,440
stuff and like I said I don't really

722
00:27:46,309 --> 00:27:50,839
know what I think the answer should be

723
00:27:48,440 --> 00:27:52,370
yet and so again like I've done many

724
00:27:50,839 --> 00:27:54,019
times is I don't want to decide at this

725
00:27:52,369 --> 00:27:56,059
point I want to just write code with it

726
00:27:54,019 --> 00:27:58,730
and see how it goes and then we'll see

727
00:27:56,059 --> 00:28:01,339
what kind of matures from there so what

728
00:27:58,730 --> 00:28:04,329
I think I would rather do is I think I

729
00:28:01,339 --> 00:28:10,099
would rather go ahead and say let's

730
00:28:04,329 --> 00:28:11,960
let's just do a piggy version it's not

731
00:28:10,099 --> 00:28:15,139
that pig it's not so piggy that it's

732
00:28:11,960 --> 00:28:17,180
time for the Hat but let's do a piggy

733
00:28:15,140 --> 00:28:19,070
version which basically says here's the

734
00:28:17,180 --> 00:28:21,259
top chunk that the guys in here is the

735
00:28:19,069 --> 00:28:23,269
index inside that chunk of whatever the

736
00:28:21,259 --> 00:28:25,629
entity array is for the guy for this

737
00:28:23,269 --> 00:28:29,089
this chunk or something like that right

738
00:28:25,630 --> 00:28:30,560
and then the the reference entities are

739
00:28:29,089 --> 00:28:34,009
always going to be in here so we have a

740
00:28:30,559 --> 00:28:36,319
low entity count like so and they end up

741
00:28:34,009 --> 00:28:38,480
being referenced this way and then we're

742
00:28:36,319 --> 00:28:40,839
just we're basically wasting memory at

743
00:28:38,480 --> 00:28:43,880
this point right this is memory wastage

744
00:28:40,839 --> 00:28:47,359
but we're not really wasting CPU or

745
00:28:43,880 --> 00:28:49,040
cache because for the most part everyone

746
00:28:47,359 --> 00:28:50,629
will be you know normally querying

747
00:28:49,039 --> 00:28:53,158
entities spatially as we move through

748
00:28:50,630 --> 00:28:55,379
the world and so for the most

749
00:28:53,159 --> 00:28:58,289
all of our our stuff that actually does

750
00:28:55,378 --> 00:29:03,019
work on these will should be relatively

751
00:28:58,288 --> 00:29:11,339
efficient at least that's the hope

752
00:29:03,019 --> 00:29:15,569
okay so I think that is what I will go

753
00:29:11,339 --> 00:29:19,079
with for now and this will also solve

754
00:29:15,569 --> 00:29:20,849
our slowness problem where we cranked it

755
00:29:19,079 --> 00:29:22,619
up to five million of these and things

756
00:29:20,849 --> 00:29:24,298
got slow this would presumably also

757
00:29:22,619 --> 00:29:26,459
solve that problem so that's something

758
00:29:24,298 --> 00:29:30,210
that we can think about as well all

759
00:29:26,460 --> 00:29:32,100
right so let's go ahead and and do some

760
00:29:30,210 --> 00:29:34,860
work here and think about how we're

761
00:29:32,099 --> 00:29:37,498
gonna handle these these tile chunks and

762
00:29:34,859 --> 00:29:39,748
that sort of stuff because I'm not sure

763
00:29:37,499 --> 00:29:42,720
exactly how I want to store these either

764
00:29:39,749 --> 00:29:45,329
and so I kind of need to go through and

765
00:29:42,720 --> 00:29:49,159
think about that I suspect what I would

766
00:29:45,329 --> 00:29:51,509
like to do is store entities in blocks

767
00:29:49,159 --> 00:29:52,980
because I know that every screen will

768
00:29:51,509 --> 00:29:55,618
have a fair number of entities on it

769
00:29:52,980 --> 00:29:58,128
they'll at least be walls and and and

770
00:29:55,618 --> 00:30:01,109
trees and that sort of stuff on every

771
00:29:58,128 --> 00:30:03,839
presumable tile so every every one of

772
00:30:01,109 --> 00:30:06,508
these table chunks is going to have some

773
00:30:03,839 --> 00:30:07,949
number of entities in it so what I'm

774
00:30:06,509 --> 00:30:10,528
thinking is I'll probably do something

775
00:30:07,950 --> 00:30:13,019
like this I'll have a tile entity block

776
00:30:10,528 --> 00:30:14,970
a tile enemy block will store some

777
00:30:13,019 --> 00:30:17,220
number of entities right and it'll be

778
00:30:14,970 --> 00:30:19,379
responsible for kind of being the memory

779
00:30:17,220 --> 00:30:22,740
intermediary where I kind of allow

780
00:30:19,378 --> 00:30:25,019
things to were things kind of coalesce

781
00:30:22,740 --> 00:30:26,609
so that you know let's say that we in

782
00:30:25,019 --> 00:30:28,859
general think of there as being 16

783
00:30:26,609 --> 00:30:30,388
entities per block or something and you

784
00:30:28,859 --> 00:30:32,609
know and these things can chain together

785
00:30:30,388 --> 00:30:34,979
so we basically have some number of tile

786
00:30:32,609 --> 00:30:36,538
inity blocks and as tile chunks get

787
00:30:34,980 --> 00:30:40,378
filled up with entities they use more

788
00:30:36,538 --> 00:30:42,808
blocks per you know you know as they go

789
00:30:40,378 --> 00:30:44,638
if that makes sense something like that

790
00:30:42,808 --> 00:30:46,138
I'm not sure if that's again these are

791
00:30:44,638 --> 00:30:48,089
these are largely just speculative moves

792
00:30:46,138 --> 00:30:49,558
that I'm making here and so yeah we're

793
00:30:48,089 --> 00:30:51,898
not sure exactly if that's how I want to

794
00:30:49,558 --> 00:30:53,460
do it or not we'll see there's

795
00:30:51,898 --> 00:30:55,079
complexity there's a lot of complexities

796
00:30:53,460 --> 00:30:57,210
in here so again just just playing

797
00:30:55,079 --> 00:30:58,710
around it and see and so what we do here

798
00:30:57,210 --> 00:31:00,629
is we go ahead and remove the tile

799
00:30:58,710 --> 00:31:03,808
chunks entirely the tile chunks would be

800
00:31:00,628 --> 00:31:06,209
gone I'm sorry the yeah the tiles and we

801
00:31:03,808 --> 00:31:07,649
just go with entities from then on

802
00:31:06,210 --> 00:31:10,200
we just sort of say all right we've got

803
00:31:07,650 --> 00:31:12,090
a an entity block that's our first block

804
00:31:10,200 --> 00:31:15,000
and that's really the only thing that we

805
00:31:12,089 --> 00:31:16,259
would need here and then any as tile

806
00:31:15,000 --> 00:31:18,509
chunks get filled up they just kind of

807
00:31:16,259 --> 00:31:19,920
fill up with these blocks now since all

808
00:31:18,509 --> 00:31:21,240
tile chunks pretty much have that

809
00:31:19,920 --> 00:31:23,700
anything in them I'd probably just leave

810
00:31:21,240 --> 00:31:25,799
that first block in there directly so

811
00:31:23,700 --> 00:31:27,539
you always start out with one block and

812
00:31:25,799 --> 00:31:29,879
that block you know probably should or

813
00:31:27,539 --> 00:31:32,299
so also store its fill level so the

814
00:31:29,880 --> 00:31:35,040
number of md's that's actually in the 16

815
00:31:32,299 --> 00:31:37,319
but that even that may not be necessary

816
00:31:35,039 --> 00:31:40,109
what we could do is actually have the

817
00:31:37,319 --> 00:31:51,029
entities so that they basically have you

818
00:31:40,109 --> 00:31:52,889
know a a is present not present and then

819
00:31:51,029 --> 00:31:55,200
we always process them to say sixteen at

820
00:31:52,890 --> 00:31:56,420
a time that's also totally totally

821
00:31:55,200 --> 00:31:59,460
plausible

822
00:31:56,420 --> 00:32:01,740
so just thinking this through again I'm

823
00:31:59,460 --> 00:32:03,329
thinking like okay so that'd be fine I

824
00:32:01,740 --> 00:32:06,900
store my entities in there that's all

825
00:32:03,329 --> 00:32:08,720
good so we've got you know the enemy

826
00:32:06,900 --> 00:32:11,430
blocks and and they're all good to go

827
00:32:08,720 --> 00:32:12,660
but there's another thing there there's

828
00:32:11,430 --> 00:32:15,330
well there's really two things that I

829
00:32:12,660 --> 00:32:17,220
could do to I could also choose to store

830
00:32:15,329 --> 00:32:19,500
this as just having more tile chunks so

831
00:32:17,220 --> 00:32:21,180
instead of having there be tile chunks

832
00:32:19,500 --> 00:32:22,500
and then off those damn enemy blocks I

833
00:32:21,180 --> 00:32:25,860
could make it so that I just have tile

834
00:32:22,500 --> 00:32:27,599
chunks and tile chunks are you know over

835
00:32:25,859 --> 00:32:29,609
subscribe so you keep going

836
00:32:27,599 --> 00:32:31,589
and you process all of the ones that you

837
00:32:29,609 --> 00:32:34,529
see that have the matching top chunk x

838
00:32:31,589 --> 00:32:35,970
y&amp;z not sure if that's good idea or not

839
00:32:34,529 --> 00:32:38,490
but just point it out there's something

840
00:32:35,970 --> 00:32:42,900
we could do so I could say what to do

841
00:32:38,490 --> 00:32:47,970
here could make this just tile chunk and

842
00:32:42,900 --> 00:32:52,860
then allow multiple tile chunks per half

843
00:32:47,970 --> 00:32:54,390
bucket per per XYZ I should say right so

844
00:32:52,859 --> 00:32:56,399
we could do that not sure if you want to

845
00:32:54,390 --> 00:32:57,750
do that but we could do that so if I do

846
00:32:56,400 --> 00:32:59,820
that then I'll be able to store these

847
00:32:57,750 --> 00:33:01,200
guys and then you know so the main thing

848
00:32:59,819 --> 00:33:03,210
that I'm thinking about now in terms of

849
00:33:01,200 --> 00:33:04,740
efficiency right is I've got these high

850
00:33:03,210 --> 00:33:06,180
entities and the Hyades need to be able

851
00:33:04,740 --> 00:33:07,859
to write back they're low entities and

852
00:33:06,180 --> 00:33:10,529
so this right here would be the primary

853
00:33:07,859 --> 00:33:11,879
place where I'd have to be doing that

854
00:33:10,529 --> 00:33:14,039
Porter chasing and a kind of an

855
00:33:11,880 --> 00:33:16,410
inefficient way right where this is

856
00:33:14,039 --> 00:33:18,359
gonna have to go look up in here and get

857
00:33:16,410 --> 00:33:19,800
back there and that's really the place

858
00:33:18,359 --> 00:33:20,038
where I'm most concerned about it

859
00:33:19,799 --> 00:33:21,808
because

860
00:33:20,038 --> 00:33:24,329
other the that's the one where it's

861
00:33:21,808 --> 00:33:26,819
gonna be most heavily hit because people

862
00:33:24,329 --> 00:33:28,168
snapping references to other entities

863
00:33:26,819 --> 00:33:29,759
where they're like following somebody

864
00:33:28,169 --> 00:33:31,019
those kinds of things I don't think are

865
00:33:29,759 --> 00:33:34,139
going to be as prevalent but I don't

866
00:33:31,019 --> 00:33:37,200
know so it would be interesting to me if

867
00:33:34,138 --> 00:33:40,558
I could figure out some way of you know

868
00:33:37,200 --> 00:33:43,830
some some technique some structure there

869
00:33:40,558 --> 00:33:47,940
that would allow those two to be a

870
00:33:43,829 --> 00:33:49,949
little to be a little more or logical

871
00:33:47,940 --> 00:33:53,038
right that would allow it to to access a

872
00:33:49,950 --> 00:33:56,038
little bit better and I'm not sure what

873
00:33:53,038 --> 00:33:57,690
that way would be the one thing I will

874
00:33:56,038 --> 00:34:04,319
say is that does kind of argue that

875
00:33:57,690 --> 00:34:05,788
maybe maybe I really do want that maybe

876
00:34:04,319 --> 00:34:07,499
okay so this is kind of interesting I'm

877
00:34:05,788 --> 00:34:10,048
glad I'm glad I'm walking through every

878
00:34:07,499 --> 00:34:12,088
single step of this think about that

879
00:34:10,048 --> 00:34:14,338
some more that may argue for going the

880
00:34:12,088 --> 00:34:16,469
other way with it right because since

881
00:34:14,338 --> 00:34:19,828
since the high entities want to

882
00:34:16,469 --> 00:34:22,798
constantly right back into their lows at

883
00:34:19,829 --> 00:34:25,589
that point the tile chunk iteration is

884
00:34:22,798 --> 00:34:28,469
only for moving things in as you move

885
00:34:25,588 --> 00:34:29,909
the camera around it may mean that the

886
00:34:28,469 --> 00:34:32,939
indirection really should be on the

887
00:34:29,909 --> 00:34:35,128
other side so that I think maybe makes

888
00:34:32,940 --> 00:34:37,039
the determination for me I think this

889
00:34:35,128 --> 00:34:40,289
made this that may do it

890
00:34:37,039 --> 00:34:42,418
so essentially I think this is this

891
00:34:40,289 --> 00:34:44,190
might be the way it should go so these

892
00:34:42,418 --> 00:34:47,009
are in fact going to be the low entities

893
00:34:44,190 --> 00:34:49,200
they are gonna stay in here and they'll

894
00:34:47,010 --> 00:34:50,909
be direct and then people will always

895
00:34:49,199 --> 00:34:52,558
use those to directly access them and

896
00:34:50,909 --> 00:34:54,990
then what we will store out here in the

897
00:34:52,559 --> 00:34:58,019
talks is just for any given tile chunk

898
00:34:54,989 --> 00:35:04,368
here are all of the low entities that

899
00:34:58,019 --> 00:35:07,259
pertain to it right and so basically

900
00:35:04,369 --> 00:35:10,890
that is what we would turn this would no

901
00:35:07,260 --> 00:35:13,559
longer really be a tile map at all which

902
00:35:10,889 --> 00:35:15,480
is what I was trying to get to it would

903
00:35:13,559 --> 00:35:16,798
just be something where you know we we

904
00:35:15,480 --> 00:35:20,039
are sort of storing that that large

905
00:35:16,798 --> 00:35:22,170
spatial that large spatial partition of

906
00:35:20,039 --> 00:35:24,298
our entities so that we could scale them

907
00:35:22,170 --> 00:35:26,068
up as large as you want because yet like

908
00:35:24,298 --> 00:35:27,449
even in here you know you did see it

909
00:35:26,068 --> 00:35:30,900
eventually got slow and we scaled it up

910
00:35:27,449 --> 00:35:32,759
to five million and so I'm just I don't

911
00:35:30,900 --> 00:35:33,840
want that to ever be a problem whereas

912
00:35:32,760 --> 00:35:36,270
we start to do more

913
00:35:33,840 --> 00:35:37,650
work on those low res entities or any

914
00:35:36,269 --> 00:35:39,360
other sorts of stuff like that I don't

915
00:35:37,650 --> 00:35:41,369
want that ever to be something that

916
00:35:39,360 --> 00:35:42,990
we're actually spending significant CPU

917
00:35:41,369 --> 00:35:44,549
time on especially maybe on lower end

918
00:35:42,989 --> 00:35:45,559
CPUs than the one that I'm using and

919
00:35:44,550 --> 00:35:48,120
that sort of thing

920
00:35:45,559 --> 00:35:50,269
so I think that's roughly what I'd like

921
00:35:48,119 --> 00:35:54,719
to do so I'm gonna go ahead and do that

922
00:35:50,269 --> 00:35:56,250
and let's let's say for the moment we'll

923
00:35:54,719 --> 00:35:59,369
just go ahead and implement that

924
00:35:56,250 --> 00:36:01,800
directly I think that most everything

925
00:35:59,369 --> 00:36:03,929
that we need to do is already now done

926
00:36:01,800 --> 00:36:07,620
structurally speaking we just need to

927
00:36:03,929 --> 00:36:11,339
start actually operating on these entity

928
00:36:07,619 --> 00:36:17,299
blocks properly so let's go ahead and do

929
00:36:11,340 --> 00:36:20,760
that so first things first we need to

930
00:36:17,300 --> 00:36:22,800
well why didn't I get any oh I know why

931
00:36:20,760 --> 00:36:25,230
because first I've got to delete a

932
00:36:22,800 --> 00:36:27,660
couple of these things so basically like

933
00:36:25,230 --> 00:36:30,240
kept I'll value and Sceptile value are

934
00:36:27,659 --> 00:36:31,859
now no longer useful to us right

935
00:36:30,239 --> 00:36:33,539
so those things kind of need to go away

936
00:36:31,860 --> 00:36:36,599
right you're not allowed to set a tile

937
00:36:33,539 --> 00:36:38,309
value anymore for the most so I'm gonna

938
00:36:36,599 --> 00:36:42,089
I'm gonna start vaporizing these guys

939
00:36:38,309 --> 00:36:43,679
slowly you're not allowed to set a tile

940
00:36:42,090 --> 00:36:45,300
value you're not allowed to get a tile

941
00:36:43,679 --> 00:36:47,699
value anymore because those things are

942
00:36:45,300 --> 00:36:50,010
relatively meaningless they don't they

943
00:36:47,699 --> 00:36:51,449
don't mean anything right because we're

944
00:36:50,010 --> 00:36:53,780
just gonna use entities for all of that

945
00:36:51,449 --> 00:36:56,149
stuff so we'll go ahead and rid of that

946
00:36:53,780 --> 00:36:59,190
we don't care about any of this stuff

947
00:36:56,150 --> 00:37:02,070
this is all all going away so let's go

948
00:36:59,190 --> 00:37:03,780
ahead and compile that and we've already

949
00:37:02,070 --> 00:37:05,700
eliminated most of it from here anyway

950
00:37:03,780 --> 00:37:07,050
it was like this was it the sceptile

951
00:37:05,699 --> 00:37:09,149
value was really all that we were

952
00:37:07,050 --> 00:37:11,190
calling right so we can continue to

953
00:37:09,150 --> 00:37:15,300
vaporize that stuff pretty much all the

954
00:37:11,190 --> 00:37:18,000
way up get chunk position four is

955
00:37:15,300 --> 00:37:19,410
probably still important though that one

956
00:37:18,000 --> 00:37:22,320
we're going to need just for doing our

957
00:37:19,409 --> 00:37:24,210
own accessing so that's fine

958
00:37:22,320 --> 00:37:27,600
but let's go ahead and we'll save that

959
00:37:24,210 --> 00:37:30,059
guy let's see so how about you get two

960
00:37:27,599 --> 00:37:31,589
value and checked and then get tanka so

961
00:37:30,059 --> 00:37:33,989
I think we're mostly looking at this

962
00:37:31,590 --> 00:37:35,700
right so all of this stuff would

963
00:37:33,989 --> 00:37:37,500
basically go away all of that stuff

964
00:37:35,699 --> 00:37:41,069
would be done so let's push that all

965
00:37:37,500 --> 00:37:43,469
down let's grab it out of here right

966
00:37:41,070 --> 00:37:44,950
I'll stick it kind of at the end of the

967
00:37:43,469 --> 00:37:49,539
file

968
00:37:44,949 --> 00:37:50,889
like so see there hopefully there's no

969
00:37:49,539 --> 00:37:51,909
there comments in there yeah so it's

970
00:37:50,889 --> 00:37:54,639
grayed out

971
00:37:51,909 --> 00:37:57,250
everyone knows it's gone and so now we

972
00:37:54,639 --> 00:37:59,139
have our get tile chunk and we have our

973
00:37:57,250 --> 00:38:01,630
get chunk position for and those are

974
00:37:59,139 --> 00:38:04,420
things we actually do want and then we

975
00:38:01,630 --> 00:38:05,260
can start to to move forward so let's

976
00:38:04,420 --> 00:38:08,019
see here

977
00:38:05,260 --> 00:38:12,280
tiles yes that's true that is no longer

978
00:38:08,019 --> 00:38:16,329
an active member tiles is not a member

979
00:38:12,280 --> 00:38:18,070
of tile chunk let's see that's true now

980
00:38:16,329 --> 00:38:20,829
what's interesting about this is when I

981
00:38:18,070 --> 00:38:23,320
do that push array so there is one thing

982
00:38:20,829 --> 00:38:26,500
that's a little janky about that let's

983
00:38:23,320 --> 00:38:31,180
talk about that for a second so if we

984
00:38:26,500 --> 00:38:35,650
talk about having this tile cashier

985
00:38:31,179 --> 00:38:37,839
stored so since if we actually store

986
00:38:35,650 --> 00:38:40,960
these directly in there we are starting

987
00:38:37,840 --> 00:38:43,720
to balloon that out this is getting

988
00:38:40,960 --> 00:38:45,610
rather relatively large right so the

989
00:38:43,719 --> 00:38:47,409
size of this chunk cache is actually

990
00:38:45,610 --> 00:38:48,880
pretty large I don't know that that's

991
00:38:47,409 --> 00:38:50,230
necessarily a problem because like I

992
00:38:48,880 --> 00:38:52,570
said you kind of want it to be direct

993
00:38:50,230 --> 00:38:55,510
access like that but it does mean that

994
00:38:52,570 --> 00:38:57,970
empty slots in here are starting to take

995
00:38:55,510 --> 00:39:00,520
up a lot of space and so I do worry a

996
00:38:57,969 --> 00:39:02,769
little bit about that because remember

997
00:39:00,519 --> 00:39:04,630
the reason there's two ways we can

998
00:39:02,769 --> 00:39:07,269
implement this one is that these are

999
00:39:04,630 --> 00:39:08,800
pointers right so that there's a zero in

1000
00:39:07,269 --> 00:39:11,530
there if there's no chunk cache and not

1001
00:39:08,800 --> 00:39:13,120
if there's not and the other way is the

1002
00:39:11,530 --> 00:39:14,680
way we were doing here where the tile

1003
00:39:13,119 --> 00:39:18,159
chunks have some notion of whether

1004
00:39:14,679 --> 00:39:19,989
they're filled or not and so the only

1005
00:39:18,159 --> 00:39:22,000
reason that I wanted to do it where they

1006
00:39:19,989 --> 00:39:23,079
were where they were all there is

1007
00:39:22,000 --> 00:39:24,909
because that way you don't have this

1008
00:39:23,079 --> 00:39:26,019
double pointer chasing going on where

1009
00:39:24,909 --> 00:39:32,529
you look it up and you look I look it up

1010
00:39:26,019 --> 00:39:34,059
again but we do have a problem which is

1011
00:39:32,530 --> 00:39:36,040
if we want this hash table to be

1012
00:39:34,059 --> 00:39:39,579
relatively sparse we're paying a lot of

1013
00:39:36,039 --> 00:39:41,110
extra space if we don't have the extra

1014
00:39:39,579 --> 00:39:42,819
pointer there so I'm starting to think

1015
00:39:41,110 --> 00:39:46,090
that maybe this should just be a flat

1016
00:39:42,820 --> 00:39:47,740
pointer and we'll just bite that initial

1017
00:39:46,090 --> 00:39:49,690
double indirection and then we have

1018
00:39:47,739 --> 00:39:51,969
everything packed in there after the

1019
00:39:49,690 --> 00:39:54,280
double of direction happens I don't know

1020
00:39:51,969 --> 00:39:55,509
it's tough to say like I said this is

1021
00:39:54,280 --> 00:39:58,269
the sort of thing that it's really

1022
00:39:55,510 --> 00:40:03,070
difficult to to know

1023
00:39:58,269 --> 00:40:05,139
so I feel like it's it's premature to

1024
00:40:03,070 --> 00:40:07,750
really do it one way or the other we'd

1025
00:40:05,139 --> 00:40:09,279
have to start time yet to see what

1026
00:40:07,750 --> 00:40:12,250
whether it was expensive or not right

1027
00:40:09,280 --> 00:40:20,320
does that make sense so I'm just gonna

1028
00:40:12,250 --> 00:40:23,800
mark that and I'll say tile time cash

1029
00:40:20,320 --> 00:40:30,309
should probably switch to pointers which

1030
00:40:23,800 --> 00:40:36,220
to pointers if tile entity blocks

1031
00:40:30,309 --> 00:40:40,119
continue to be stored on Moss directly

1032
00:40:36,219 --> 00:40:42,429
in the Tile Shop right so basically what

1033
00:40:40,119 --> 00:40:44,500
I'm saying is if this becomes a pointer

1034
00:40:42,429 --> 00:40:48,579
later on depending on how we do this or

1035
00:40:44,500 --> 00:40:51,909
it's small then it's totally fine but if

1036
00:40:48,579 --> 00:40:54,670
it continues to be a large flat array of

1037
00:40:51,909 --> 00:40:57,549
16 or something like that

1038
00:40:54,670 --> 00:40:59,980
then I think we have a problem just in

1039
00:40:57,550 --> 00:41:03,100
terms of the space wastage for the empty

1040
00:40:59,980 --> 00:41:03,929
slots in the chunk cash that's my that's

1041
00:41:03,099 --> 00:41:08,380
my thought

1042
00:41:03,929 --> 00:41:10,839
so we'll see anyway moving on so we've

1043
00:41:08,380 --> 00:41:11,890
got our low entity indexes in here so

1044
00:41:10,840 --> 00:41:14,289
now what we need to do is to start

1045
00:41:11,889 --> 00:41:16,750
storing those putting putting low

1046
00:41:14,289 --> 00:41:19,750
entities actually in there and so this

1047
00:41:16,750 --> 00:41:22,329
can you all go away and we're done and

1048
00:41:19,750 --> 00:41:24,550
so like I said that the handmade cpp is

1049
00:41:22,329 --> 00:41:25,719
now not even using that it's just like I

1050
00:41:24,550 --> 00:41:27,880
said it's searching all of the entities

1051
00:41:25,719 --> 00:41:31,119
every time so it's totally fine

1052
00:41:27,880 --> 00:41:33,340
and mr. walks around here is unaffected

1053
00:41:31,119 --> 00:41:38,409
by these changes because really he's not

1054
00:41:33,340 --> 00:41:41,680
using the the what's word for it the

1055
00:41:38,409 --> 00:41:45,190
he's not using the tile the tile map at

1056
00:41:41,679 --> 00:41:47,710
all okay and so what we can do now is

1057
00:41:45,190 --> 00:41:50,139
this would be a good point to rename it

1058
00:41:47,710 --> 00:41:51,909
from a tile map as well and since we had

1059
00:41:50,139 --> 00:41:54,129
that world I'm gonna go ahead and say

1060
00:41:51,909 --> 00:41:56,199
let's let's start opening up handmade

1061
00:41:54,130 --> 00:42:00,760
world will make handmade world which is

1062
00:41:56,199 --> 00:42:03,369
the thing be be our new file and so

1063
00:42:00,760 --> 00:42:06,040
handmade tile dot cpp I want to keep

1064
00:42:03,369 --> 00:42:08,109
most of this stuff right but I'm gonna

1065
00:42:06,039 --> 00:42:10,090
start to rename it so I'm gonna move it

1066
00:42:08,110 --> 00:42:11,500
in here we're going to go ahead and vape

1067
00:42:10,090 --> 00:42:17,340
this file so this

1068
00:42:11,500 --> 00:42:20,769
goes away fleet file and made file dot H

1069
00:42:17,340 --> 00:42:26,260
goodbye and then handmade tile dot cpp

1070
00:42:20,769 --> 00:42:28,199
i'll save as well just these guys so and

1071
00:42:26,260 --> 00:42:35,170
then this can kind of go away I believe

1072
00:42:28,199 --> 00:42:38,500
Wow and goodbye and then I've got my

1073
00:42:35,170 --> 00:42:43,180
handmade world that's EBP and in theory

1074
00:42:38,500 --> 00:42:44,619
let's see save in theory that should

1075
00:42:43,179 --> 00:42:50,679
cause us to have to do that

1076
00:42:44,619 --> 00:42:53,400
there we go and okay so now that we've

1077
00:42:50,679 --> 00:42:57,009
got that let's go ahead and start

1078
00:42:53,400 --> 00:43:00,309
working on this a little bit more so now

1079
00:42:57,010 --> 00:43:02,520
I sort of we had this world pointer

1080
00:43:00,309 --> 00:43:06,340
before right we had the tile map

1081
00:43:02,519 --> 00:43:08,289
structure before where did that guy go

1082
00:43:06,340 --> 00:43:10,119
we had a struct world there it is and

1083
00:43:08,289 --> 00:43:11,440
holding it was tile map and now we're

1084
00:43:10,119 --> 00:43:12,760
I'm gonna say is alright we kind of know

1085
00:43:11,440 --> 00:43:14,349
what the world is now the world is a

1086
00:43:12,760 --> 00:43:15,550
collection of entities so I'm gonna go

1087
00:43:14,349 --> 00:43:17,109
ahead and say that this is the world

1088
00:43:15,550 --> 00:43:18,820
right and you know and longer have to

1089
00:43:17,108 --> 00:43:21,369
double dereference out of it

1090
00:43:18,820 --> 00:43:23,200
and then what we've got here is we we

1091
00:43:21,369 --> 00:43:24,820
just have a world chunk and the world

1092
00:43:23,199 --> 00:43:27,819
chunk stores everything in the world at

1093
00:43:24,820 --> 00:43:30,280
a particular area right and we've got

1094
00:43:27,820 --> 00:43:34,599
the world chunk cash and that's going to

1095
00:43:30,280 --> 00:43:37,599
be all referenced in here right so we've

1096
00:43:34,599 --> 00:43:39,070
got our roots we've got our world chunk

1097
00:43:37,599 --> 00:43:40,570
shift or world shock masks and now we

1098
00:43:39,070 --> 00:43:44,349
definitively kind of know what this is

1099
00:43:40,570 --> 00:43:48,599
and that's good so then here we've got

1100
00:43:44,349 --> 00:43:53,950
the world chunk and we've got its x y&amp;z

1101
00:43:48,599 --> 00:43:56,440
positions and we've got its its entity

1102
00:43:53,949 --> 00:43:58,480
block so I don't know what we want to

1103
00:43:56,440 --> 00:44:02,970
call that there's probably a better name

1104
00:43:58,480 --> 00:44:02,969
for this let's call this

1105
00:44:10,108 --> 00:44:21,088
what are we going to call this it's a

1106
00:44:14,650 --> 00:44:24,519
good question I'm not entirely certain

1107
00:44:21,088 --> 00:44:25,630
I'm not entirely certain I'm also kind

1108
00:44:24,519 --> 00:44:27,940
of tempted to do that thing where we

1109
00:44:25,630 --> 00:44:29,980
just have both of the the world chunks

1110
00:44:27,940 --> 00:44:31,539
there where we just have more world

1111
00:44:29,980 --> 00:44:35,139
chunks and you just kind of look for one

1112
00:44:31,539 --> 00:44:39,490
that's empty it's kind of tempting it's

1113
00:44:35,139 --> 00:44:41,078
one of those tempting things yeah you

1114
00:44:39,489 --> 00:44:44,828
know what I'm saying like basically you

1115
00:44:41,079 --> 00:44:48,579
know these are that right and then it's

1116
00:44:44,829 --> 00:44:52,990
it's this and that's the whole thing it

1117
00:44:48,579 --> 00:44:54,940
feels like a good idea to me feels kind

1118
00:44:52,989 --> 00:44:57,338
of like a good idea to me so we just

1119
00:44:54,940 --> 00:44:59,068
look it up in the spatial hash and then

1120
00:44:57,338 --> 00:45:05,170
we kind of crawl through the hash

1121
00:44:59,068 --> 00:45:07,000
looking for every hit mmm it's just you

1122
00:45:05,170 --> 00:45:07,298
know it's so crazy that it just might

1123
00:45:07,000 --> 00:45:18,159
work

1124
00:45:07,298 --> 00:45:20,679
as they say such a tough decision with

1125
00:45:18,159 --> 00:45:22,778
which to go with first like I said

1126
00:45:20,679 --> 00:45:24,608
eventually all things become clear when

1127
00:45:22,778 --> 00:45:26,318
you go and do them but sometimes it's

1128
00:45:24,608 --> 00:45:28,298
just kind of fun to think and guess and

1129
00:45:26,318 --> 00:45:29,679
they like which one do I think is gonna

1130
00:45:28,298 --> 00:45:32,469
be the one that I'm gonna like more and

1131
00:45:29,679 --> 00:45:34,509
I don't know so you know obviously I try

1132
00:45:32,469 --> 00:45:36,848
to prune and and get rid of things that

1133
00:45:34,510 --> 00:45:38,289
are obviously gonna be stupid but at the

1134
00:45:36,849 --> 00:45:41,099
end of the day trying it's really the

1135
00:45:38,289 --> 00:45:43,270
only way I ever know and so you know

1136
00:45:41,099 --> 00:45:45,099
really I probably would would have to

1137
00:45:43,269 --> 00:45:46,420
just try it the reason that I think this

1138
00:45:45,099 --> 00:45:48,548
is kind of interesting is because it

1139
00:45:46,420 --> 00:45:50,019
just simplifies things a little bit but

1140
00:45:48,548 --> 00:45:51,730
it is nice be able to pull out a chunk

1141
00:45:50,019 --> 00:45:53,199
and be able to hand that chunk back to

1142
00:45:51,730 --> 00:45:54,760
somebody and say okay you don't have to

1143
00:45:53,199 --> 00:45:56,739
do any more tests and you can just sort

1144
00:45:54,760 --> 00:45:58,690
of follow through like I'm thinking that

1145
00:45:56,739 --> 00:46:01,689
basically someone queries write this

1146
00:45:58,690 --> 00:46:03,970
thing and they get back a pointer to the

1147
00:46:01,690 --> 00:46:05,920
entity block and they just can like walk

1148
00:46:03,969 --> 00:46:09,009
through that enemy block so it's gonna

1149
00:46:05,920 --> 00:46:10,480
be cleaner that way I don't know so so

1150
00:46:09,010 --> 00:46:14,278
many hard decisions all right

1151
00:46:10,480 --> 00:46:16,300
anyway that's all that's all that

1152
00:46:14,278 --> 00:46:20,079
nothing particularly tricky

1153
00:46:16,300 --> 00:46:22,980
there so then what we have is in this

1154
00:46:20,079 --> 00:46:26,110
this is the position of a tile inside

1155
00:46:22,980 --> 00:46:27,400
the the the world inside those blocks

1156
00:46:26,110 --> 00:46:29,530
which I don't think we care any more

1157
00:46:27,400 --> 00:46:31,150
about I'm pretty sure I'll check

1158
00:46:29,530 --> 00:46:31,690
position is just not relevant to us

1159
00:46:31,150 --> 00:46:32,829
anymore

1160
00:46:31,690 --> 00:46:35,079
so I think we can get rid of that

1161
00:46:32,829 --> 00:46:35,860
entirely and then tile map position is

1162
00:46:35,079 --> 00:46:37,869
kind of interesting

1163
00:46:35,860 --> 00:46:40,180
what tile map position was previously

1164
00:46:37,869 --> 00:46:43,239
used for was basically a way for us to

1165
00:46:40,179 --> 00:46:45,690
determine you know where where things

1166
00:46:43,239 --> 00:46:49,839
were we have interesting opportunity now

1167
00:46:45,690 --> 00:46:52,720
which is that the chunk X Y &amp; Z does

1168
00:46:49,840 --> 00:46:56,620
allow us to know sort of where the guy

1169
00:46:52,719 --> 00:46:58,509
would be if we had the offset plus we

1170
00:46:56,619 --> 00:47:01,150
knew which one he was in so anytime that

1171
00:46:58,510 --> 00:47:03,340
we iterate over the things in one of

1172
00:47:01,150 --> 00:47:04,510
these blocks we could these are not

1173
00:47:03,340 --> 00:47:06,070
necessary we wouldn't have to store

1174
00:47:04,510 --> 00:47:07,390
these anymore which would be great

1175
00:47:06,070 --> 00:47:08,620
because that means we don't destroy them

1176
00:47:07,389 --> 00:47:10,869
we'd have to save them they're not

1177
00:47:08,619 --> 00:47:12,250
important anymore right because instead

1178
00:47:10,869 --> 00:47:13,869
of storing what tile you reference to

1179
00:47:12,250 --> 00:47:15,820
you could just store which world chunk

1180
00:47:13,869 --> 00:47:18,789
you're in and then the offset relative

1181
00:47:15,820 --> 00:47:20,920
to the world chunk in you'd be good why

1182
00:47:18,789 --> 00:47:23,679
am i hesitating on that right well the

1183
00:47:20,920 --> 00:47:28,720
reason I'm hesitating about that is

1184
00:47:23,679 --> 00:47:29,190
because is because come back to me there

1185
00:47:28,719 --> 00:47:31,480
we go

1186
00:47:29,190 --> 00:47:34,059
the reason I'm hesitating on that is

1187
00:47:31,480 --> 00:47:36,550
because what do you do when you get to

1188
00:47:34,059 --> 00:47:38,199
someone through a reference so I'm an

1189
00:47:36,550 --> 00:47:41,140
idiom following other entity I go oh

1190
00:47:38,199 --> 00:47:41,799
that guy I need to follow that guy where

1191
00:47:41,139 --> 00:47:43,480
is he

1192
00:47:41,800 --> 00:47:46,450
I can look him up in his lo entity

1193
00:47:43,480 --> 00:47:50,170
structure but I have no idea which tile

1194
00:47:46,449 --> 00:47:53,250
chunk he's in right so how would I go

1195
00:47:50,170 --> 00:47:55,269
and find out cuz I'd have no way of

1196
00:47:53,250 --> 00:47:59,130
literally have no way of figuring that

1197
00:47:55,269 --> 00:47:59,130
out right there's no way to know that

1198
00:48:02,340 --> 00:48:08,829
it's it's pretty tough it is pretty

1199
00:48:06,010 --> 00:48:11,080
tough so that's kind of why you need

1200
00:48:08,829 --> 00:48:13,529
this is because this is what lets you

1201
00:48:11,079 --> 00:48:17,440
get back to the chunk that you were in

1202
00:48:13,530 --> 00:48:20,410
so that you can update yourself properly

1203
00:48:17,440 --> 00:48:22,119
or know where you are so it's it's

1204
00:48:20,409 --> 00:48:23,500
frustrating because it would be really

1205
00:48:22,119 --> 00:48:25,389
nice to be able to store this in a

1206
00:48:23,500 --> 00:48:28,750
compress form and everyone who operates

1207
00:48:25,389 --> 00:48:30,159
on things per block wouldn't have to

1208
00:48:28,750 --> 00:48:32,650
worry and would able to would

1209
00:48:30,159 --> 00:48:35,199
able to just do that but I just I can't

1210
00:48:32,650 --> 00:48:36,970
think of right now how I would do it so

1211
00:48:35,199 --> 00:48:39,279
that when you're going through the low

1212
00:48:36,969 --> 00:48:41,078
entities in some other method of

1213
00:48:39,280 --> 00:48:44,260
indirection like from the high entities

1214
00:48:41,079 --> 00:48:46,210
right going through them although with

1215
00:48:44,260 --> 00:48:47,859
the Hyades it's okay because since we

1216
00:48:46,210 --> 00:48:49,929
know your absolute location at that

1217
00:48:47,858 --> 00:48:53,230
point actually we could figure out where

1218
00:48:49,929 --> 00:48:56,019
you were we could go relook you up in in

1219
00:48:53,230 --> 00:48:57,548
whatever towel chunk you came from so

1220
00:48:56,019 --> 00:48:59,259
that's not so bad

1221
00:48:57,548 --> 00:49:01,119
so I guess hi enemies aren't the problem

1222
00:48:59,260 --> 00:49:03,460
it's just if a high entity or a low

1223
00:49:01,119 --> 00:49:04,539
entity is referencing some other entity

1224
00:49:03,460 --> 00:49:07,500
that it's following or something like

1225
00:49:04,539 --> 00:49:09,849
that it goes and says where is that guy

1226
00:49:07,500 --> 00:49:13,269
it just doesn't have the knowledge to

1227
00:49:09,849 --> 00:49:14,798
get back there so man that's that's

1228
00:49:13,269 --> 00:49:16,509
frustrating so that frustrates me

1229
00:49:14,798 --> 00:49:18,009
because that's such a special purpose

1230
00:49:16,510 --> 00:49:20,170
thing that's going on but we need to

1231
00:49:18,010 --> 00:49:21,309
support it so the question is again is

1232
00:49:20,170 --> 00:49:23,559
there something we can do that's a

1233
00:49:21,309 --> 00:49:27,480
little clever here so that our structure

1234
00:49:23,559 --> 00:49:27,480
would support that and not have to store

1235
00:49:27,630 --> 00:49:32,430
fix this extra information right

1236
00:49:45,920 --> 00:49:58,430
I don't know I don't know that's a

1237
00:49:50,780 --> 00:50:01,210
puzzler that is a puzzler my friends so

1238
00:49:58,429 --> 00:50:07,119
I'm gonna go ahead and say to do KC

1239
00:50:01,210 --> 00:50:12,980
puzzler how can we get rid of AB style

1240
00:50:07,119 --> 00:50:18,409
star here and still allow references to

1241
00:50:12,980 --> 00:50:24,199
entities to be able to figure out where

1242
00:50:18,409 --> 00:50:32,980
they are or I should say or rather which

1243
00:50:24,199 --> 00:50:35,449
tile which world chunk they are in right

1244
00:50:32,980 --> 00:50:39,860
and that's just yeah like I said that's

1245
00:50:35,449 --> 00:50:44,029
that's really tricky that's really

1246
00:50:39,860 --> 00:50:45,140
really tricky so basically we've got we

1247
00:50:44,030 --> 00:50:46,850
don't really need to call these world

1248
00:50:45,139 --> 00:50:48,980
map position we could call these just

1249
00:50:46,849 --> 00:50:51,139
world positions now right we could just

1250
00:50:48,980 --> 00:50:56,150
call that world position and world

1251
00:50:51,139 --> 00:50:57,440
diferents I suppose because yeah world

1252
00:50:56,150 --> 00:50:59,599
difference will be replaced by just a

1253
00:50:57,440 --> 00:51:02,539
vector3 I think in the future we don't

1254
00:50:59,599 --> 00:51:03,889
really need that that one at all but

1255
00:51:02,539 --> 00:51:06,800
let's go ahead and and fix some of these

1256
00:51:03,889 --> 00:51:08,929
compile errors here pull that world

1257
00:51:06,800 --> 00:51:13,690
chunk that's the next in the hash

1258
00:51:08,929 --> 00:51:19,519
let's see Tom at position so tile map

1259
00:51:13,690 --> 00:51:21,619
position is an ad world position I get

1260
00:51:19,519 --> 00:51:23,509
some of this cleanup we've talked about

1261
00:51:21,619 --> 00:51:25,460
some of these things before but you know

1262
00:51:23,510 --> 00:51:27,860
I try not to do anything until it's

1263
00:51:25,460 --> 00:51:31,099
really obvious it's time cuz I feel like

1264
00:51:27,860 --> 00:51:33,890
that saves a lot of kind of a lot of

1265
00:51:31,099 --> 00:51:35,900
going back and forth okay let's see here

1266
00:51:33,889 --> 00:51:36,969
hello any chunk reference we got rid of

1267
00:51:35,900 --> 00:51:40,010
that that's gone

1268
00:51:36,969 --> 00:51:43,429
and let's see tile chunk so there's

1269
00:51:40,010 --> 00:51:46,310
world chunk see and this is world so

1270
00:51:43,429 --> 00:51:48,710
tile map is now world essentially

1271
00:51:46,309 --> 00:51:52,269
everywhere that's the world world world

1272
00:51:48,710 --> 00:51:52,269
world world world world world world

1273
00:51:53,599 --> 00:51:58,349
okay and similarly Thailand just for a

1274
00:51:57,210 --> 00:52:05,960
map is my world

1275
00:51:58,349 --> 00:52:09,719
so that's cute yeah keep on going there

1276
00:52:05,960 --> 00:52:14,159
see where we're at so tight on cash is

1277
00:52:09,719 --> 00:52:17,639
just world Chun cash so I guess tile

1278
00:52:14,159 --> 00:52:18,719
chunk becomes world chunk as well these

1279
00:52:17,639 --> 00:52:22,980
are the kind of things that I really

1280
00:52:18,719 --> 00:52:25,469
wish we had better built-in support for

1281
00:52:22,980 --> 00:52:26,730
us um there's some like refactoring

1282
00:52:25,469 --> 00:52:28,319
tools and stuff to do this but I just

1283
00:52:26,730 --> 00:52:29,760
wish that we had just better unified

1284
00:52:28,320 --> 00:52:31,740
like tools for this sort of thing

1285
00:52:29,760 --> 00:52:33,450
because it's just kind of stupid but but

1286
00:52:31,739 --> 00:52:34,889
this sort of thing even happens it

1287
00:52:33,449 --> 00:52:39,439
doesn't take very long it's not a big

1288
00:52:34,889 --> 00:52:42,299
deal but it is just kind of lame right

1289
00:52:39,440 --> 00:52:45,210
okay so these are let's just go ahead

1290
00:52:42,300 --> 00:52:52,650
and replace the world chunk with just a

1291
00:52:45,210 --> 00:52:56,309
chunk so cute too there we go and all

1292
00:52:52,650 --> 00:52:58,500
these guys can't be oops one of those

1293
00:52:56,309 --> 00:53:00,269
guys was not supposed to be it's not

1294
00:52:58,500 --> 00:53:03,059
supposed to be replaced

1295
00:53:00,269 --> 00:53:06,030
that's okay it'll complain it'll

1296
00:53:03,059 --> 00:53:09,360
complain for us there we go well John

1297
00:53:06,030 --> 00:53:11,040
cash I don't even know I suppose I could

1298
00:53:09,360 --> 00:53:13,050
just change that as well though we could

1299
00:53:11,039 --> 00:53:14,849
just call this cuz you know what other

1300
00:53:13,050 --> 00:53:17,340
chunks are there gonna be we're calling

1301
00:53:14,849 --> 00:53:22,920
these chunks so we'll call them show us

1302
00:53:17,340 --> 00:53:27,300
there we go alright so replace that and

1303
00:53:22,920 --> 00:53:32,730
keep going next in hash road chunk what

1304
00:53:27,300 --> 00:53:38,180
else we get worlds that's world chunk

1305
00:53:32,730 --> 00:53:38,179
position is get shot position four

1306
00:53:38,690 --> 00:53:43,860
we don't need this anymore do we this is

1307
00:53:41,489 --> 00:53:47,189
strictly so this is strictly something

1308
00:53:43,860 --> 00:53:49,440
we only need to compute these so world

1309
00:53:47,190 --> 00:53:50,550
Chuck position is really if we deleted

1310
00:53:49,440 --> 00:53:52,980
that guys don't actually do them anymore

1311
00:53:50,550 --> 00:53:56,700
what we really all we really need is the

1312
00:53:52,980 --> 00:53:59,340
ABS the the chunk X chunk Y and chunk Z

1313
00:53:56,699 --> 00:54:01,109
and I think we're probably going to get

1314
00:53:59,340 --> 00:54:02,880
into a situation where we don't super

1315
00:54:01,110 --> 00:54:04,110
care about that as much anymore either

1316
00:54:02,880 --> 00:54:04,930
so I'm just going to go ahead and stir

1317
00:54:04,110 --> 00:54:07,710
that guy

1318
00:54:04,929 --> 00:54:10,058
do tomorrow when we do empty insertion

1319
00:54:07,710 --> 00:54:14,650
we'll go ahead and deal with that at

1320
00:54:10,059 --> 00:54:16,380
that time okay so let's see world Chun

1321
00:54:14,650 --> 00:54:20,019
cash

1322
00:54:16,380 --> 00:54:26,108
he's just chump cash now what else we

1323
00:54:20,019 --> 00:54:29,250
got some cash chunk index world chunk

1324
00:54:26,108 --> 00:54:32,348
becomes chump yeah

1325
00:54:29,250 --> 00:54:40,440
easy enough tile map difference is just

1326
00:54:32,349 --> 00:54:45,269
world difference tile map is just world

1327
00:54:40,440 --> 00:54:45,269
see here again same thing

1328
00:54:45,659 --> 00:54:49,389
mmm and we'll be able to get rid of that

1329
00:54:47,769 --> 00:54:51,639
tile sided meters as well so this will

1330
00:54:49,389 --> 00:54:53,230
be pretty good cleanup but we'll have to

1331
00:54:51,639 --> 00:54:54,338
we'll have to tackle some of the more

1332
00:54:53,230 --> 00:54:56,980
important parts of it tomorrow

1333
00:54:54,338 --> 00:55:00,429
unfortunately so let's go ahead and say

1334
00:54:56,980 --> 00:55:03,338
that we've got world there so tile map

1335
00:55:00,429 --> 00:55:07,088
with those worlds wherever we see that

1336
00:55:03,338 --> 00:55:11,199
world world worlds of course the future

1337
00:55:07,088 --> 00:55:14,019
a lot of those are world Aero world so

1338
00:55:11,199 --> 00:55:19,088
we'll have to we'll have to clean that

1339
00:55:14,019 --> 00:55:21,730
up in a second so world arrow rolled

1340
00:55:19,088 --> 00:55:26,440
arrow world just becomes world's pretty

1341
00:55:21,730 --> 00:55:31,088
easy yeah and tile map becomes world as

1342
00:55:26,440 --> 00:55:34,079
well world world world world world and

1343
00:55:31,088 --> 00:55:34,078
there we go

1344
00:55:37,710 --> 00:55:43,690
that's true that it's not necessary I

1345
00:55:40,869 --> 00:55:46,500
agree with that and there we go

1346
00:55:43,690 --> 00:55:51,010
so let's see how badly we broke things

1347
00:55:46,500 --> 00:55:52,530
pretty badly it would appear so let's

1348
00:55:51,010 --> 00:55:55,809
see if we can go ahead and fix that

1349
00:55:52,530 --> 00:55:57,970
hopefully we have not broken anything

1350
00:55:55,809 --> 00:56:01,720
too horrible with all of my ridiculous

1351
00:55:57,969 --> 00:56:05,798
renaming um so let's see here

1352
00:56:01,719 --> 00:56:06,429
oh no oh oh but we were just almost

1353
00:56:05,798 --> 00:56:10,900
there

1354
00:56:06,429 --> 00:56:14,739
well okay what is the problem here map

1355
00:56:10,900 --> 00:56:16,480
into task face move player game update

1356
00:56:14,739 --> 00:56:19,088
what what does the what was the problem

1357
00:56:16,480 --> 00:56:22,000
what what is the problem

1358
00:56:19,088 --> 00:56:23,369
so let's let's take a look at I guess I

1359
00:56:22,000 --> 00:56:27,900
should look at what got initialized

1360
00:56:23,369 --> 00:56:29,980
let's see here world

1361
00:56:27,900 --> 00:56:32,559
alright so world is not being

1362
00:56:29,980 --> 00:56:35,769
initialized that's really the problem

1363
00:56:32,559 --> 00:56:39,940
that we have to initialize world let's

1364
00:56:35,769 --> 00:56:40,420
go ahead and see we are that is just

1365
00:56:39,940 --> 00:56:42,519
garbage

1366
00:56:40,420 --> 00:56:46,559
that's all totally garbage so that needs

1367
00:56:42,519 --> 00:56:52,150
to go away like so what's our world

1368
00:56:46,559 --> 00:56:54,250
equals that and there we go okay so now

1369
00:56:52,150 --> 00:56:56,470
we're back to square one so that's good

1370
00:56:54,250 --> 00:56:59,980
and we're in good shape so we can start

1371
00:56:56,469 --> 00:57:01,419
the QA so that's totally good so

1372
00:56:59,980 --> 00:57:05,530
basically where we're at just to give a

1373
00:57:01,420 --> 00:57:06,670
recap is now we've got sort of a sense

1374
00:57:05,530 --> 00:57:09,970
of how we're going to store the world

1375
00:57:06,670 --> 00:57:13,659
there's only really one large

1376
00:57:09,969 --> 00:57:15,789
outstanding question for me which is if

1377
00:57:13,659 --> 00:57:19,149
we get rid of the notion of tiles

1378
00:57:15,789 --> 00:57:20,980
entirely right so we still need a notion

1379
00:57:19,150 --> 00:57:22,510
of where things are that's resilient and

1380
00:57:20,980 --> 00:57:26,588
scales to very large floating-point

1381
00:57:22,510 --> 00:57:28,930
values and so what we're gonna have to

1382
00:57:26,588 --> 00:57:30,699
do is this world position is still going

1383
00:57:28,929 --> 00:57:33,909
to have to be relative to something now

1384
00:57:30,699 --> 00:57:35,529
it can be relative to the chunks but

1385
00:57:33,909 --> 00:57:39,549
it's going to be interesting to try to

1386
00:57:35,530 --> 00:57:42,070
think about exactly how we do those

1387
00:57:39,550 --> 00:57:46,240
mappings in other words like when we

1388
00:57:42,070 --> 00:57:48,519
have something like this in the hand

1389
00:57:46,239 --> 00:57:50,259
made here a thing where we do the set

1390
00:57:48,519 --> 00:57:52,329
tile and that sort of stuff

1391
00:57:50,260 --> 00:57:55,060
right here like when we're adding our

1392
00:57:52,329 --> 00:57:57,759
walls so now that we know that the walls

1393
00:57:55,059 --> 00:58:00,219
are not going to be at like ABS tile

1394
00:57:57,760 --> 00:58:01,900
locations we just need a way of like

1395
00:58:00,219 --> 00:58:04,419
cleanly being able to say okay I'm

1396
00:58:01,900 --> 00:58:05,769
working on a room like maybe like here's

1397
00:58:04,420 --> 00:58:07,329
the center of the room and here's where

1398
00:58:05,769 --> 00:58:10,150
I want to put the you know the things

1399
00:58:07,329 --> 00:58:11,588
and we need some coherent way of talking

1400
00:58:10,150 --> 00:58:13,180
about those things such that we can

1401
00:58:11,588 --> 00:58:16,389
create the world so it's nice and

1402
00:58:13,179 --> 00:58:19,480
continuous but that's you know such that

1403
00:58:16,389 --> 00:58:22,420
we can still have it be resilient and

1404
00:58:19,480 --> 00:58:24,579
not have problems with with float

1405
00:58:22,420 --> 00:58:26,260
precision right and so that's the

1406
00:58:24,579 --> 00:58:27,579
interesting thing because I'm not sure

1407
00:58:26,260 --> 00:58:29,109
exactly how we're gonna do that if we

1408
00:58:27,579 --> 00:58:31,119
stop think about things in tiles but

1409
00:58:29,108 --> 00:58:32,099
that's really the only thing the rest of

1410
00:58:31,119 --> 00:58:33,420
it is just a little

1411
00:58:32,099 --> 00:58:34,619
and see things that like later on when

1412
00:58:33,420 --> 00:58:35,909
we get to ization we could think about

1413
00:58:34,619 --> 00:58:38,609
more more heavily

1414
00:58:35,909 --> 00:58:40,199
s'alright we can do the Q&amp;A now please

1415
00:58:38,610 --> 00:58:44,220
put Q :

1416
00:58:40,199 --> 00:58:45,269
before your questions and if you could

1417
00:58:44,219 --> 00:58:46,619
keep the questions and things we've

1418
00:58:45,269 --> 00:58:48,929
talked about in today's stream or on a

1419
00:58:46,619 --> 00:58:50,489
previous stream because that that helps

1420
00:58:48,929 --> 00:58:52,379
tremendously if you want to do off-topic

1421
00:58:50,489 --> 00:58:55,019
questions come about 15 minutes before

1422
00:58:52,380 --> 00:58:57,860
the stream starts we do all kinds of

1423
00:58:55,019 --> 00:58:57,860
off-topic stuff man

1424
00:58:58,789 --> 00:59:02,670
do you such that the gameplay to be

1425
00:59:00,780 --> 00:59:07,170
broadly grid based even without tiles

1426
00:59:02,670 --> 00:59:09,150
yes to some degree like I feel like the

1427
00:59:07,170 --> 00:59:12,780
grid miss helps the players think about

1428
00:59:09,150 --> 00:59:14,400
it that way and so I I don't really know

1429
00:59:12,780 --> 00:59:17,010
exactly how we're gonna do some of that

1430
00:59:14,400 --> 00:59:19,440
stuff but I do expect to try to keep

1431
00:59:17,010 --> 00:59:22,740
things to be sort of grid based for a

1432
00:59:19,440 --> 00:59:24,300
player understanding basically but what

1433
00:59:22,739 --> 00:59:28,199
I want to be able to do is make it so

1434
00:59:24,300 --> 00:59:29,700
that the engine supports arbitrary

1435
00:59:28,199 --> 00:59:31,889
things so they don't have to be grid

1436
00:59:29,699 --> 00:59:34,169
based but you know we'll still sort of

1437
00:59:31,889 --> 00:59:38,779
create them on grids as necessary when

1438
00:59:34,170 --> 00:59:38,780
we you know for again for understanding

1439
00:59:43,659 --> 00:59:52,420
could you use reflection to help handle

1440
00:59:45,909 --> 00:59:56,980
the entities and world chunks I'm not

1441
00:59:52,420 --> 00:59:58,539
sure what you mean by help handle could

1442
00:59:56,980 --> 01:00:00,369
you be more specific about help handle

1443
00:59:58,539 --> 01:00:02,260
like what is it that you think that

1444
01:00:00,369 --> 01:00:07,740
reflection would help in terms of

1445
01:00:02,260 --> 01:00:07,740
handling if that makes sense

1446
01:00:23,309 --> 01:00:27,278
not very many questions today of course

1447
01:00:25,298 --> 01:00:30,998
that makes sense we were just sort of

1448
01:00:27,278 --> 01:00:34,900
doing some pretty basic code code

1449
01:00:30,998 --> 01:00:39,399
changes here although like kind of was

1450
01:00:34,900 --> 01:00:40,389
hoping someone would talk about that's

1451
01:00:39,400 --> 01:00:44,289
kind of hoping someone would figure out

1452
01:00:40,389 --> 01:00:46,088
how to do a good collapse for these so

1453
01:00:44,289 --> 01:00:47,950
we don't have to store them that'll be

1454
01:00:46,088 --> 01:00:53,858
kind of questing to see I hope we figure

1455
01:00:47,949 --> 01:00:55,629
something out eventually well everything

1456
01:00:53,858 --> 01:00:56,828
in the game be an entity even if it

1457
01:00:55,630 --> 01:01:00,730
doesn't need collision detection or a

1458
01:00:56,829 --> 01:01:03,818
movement so if there are things that

1459
01:01:00,730 --> 01:01:11,230
that don't have any aspects of entity

1460
01:01:03,818 --> 01:01:13,480
ninis at all then we might right but i

1461
01:01:11,230 --> 01:01:15,608
feel like we want most things in the

1462
01:01:13,480 --> 01:01:17,440
game to be dynamic and i feel like the

1463
01:01:15,608 --> 01:01:19,150
game gets richer if we allow everything

1464
01:01:17,440 --> 01:01:22,088
to sort of be entity I mean to give you

1465
01:01:19,150 --> 01:01:24,009
an absolute absurd example like you know

1466
01:01:22,088 --> 01:01:25,960
let's say you know you get a magic wand

1467
01:01:24,009 --> 01:01:28,358
that allows things to turn into entities

1468
01:01:25,960 --> 01:01:29,829
like so I wave the wand at the wall and

1469
01:01:28,358 --> 01:01:33,369
it like grows legs and walks around

1470
01:01:29,829 --> 01:01:34,960
that'd be pretty great so it's those

1471
01:01:33,369 --> 01:01:36,789
kinds of wacky things that I think it's

1472
01:01:34,960 --> 01:01:38,170
interesting to enable and so I kind of

1473
01:01:36,789 --> 01:01:39,880
feel like making everything in entity

1474
01:01:38,170 --> 01:01:41,200
it's just kind of a nice thing and then

1475
01:01:39,880 --> 01:01:43,390
figuring out how to make entities very

1476
01:01:41,199 --> 01:01:45,098
dynamic so that they can represent walls

1477
01:01:43,389 --> 01:01:46,960
or represent real things and scale

1478
01:01:45,099 --> 01:01:48,759
between those nicely is a more

1479
01:01:46,960 --> 01:01:50,230
interesting direction to go rather than

1480
01:01:48,759 --> 01:01:52,480
hard coding what the difference is

1481
01:01:50,230 --> 01:01:55,748
between a piece of scenery and a piece

1482
01:01:52,480 --> 01:01:57,068
of interactive stuff but who knows we'll

1483
01:01:55,748 --> 01:01:58,629
see when we actually start coding the

1484
01:01:57,068 --> 01:02:03,998
entity stuff how hard turns out to be to

1485
01:01:58,630 --> 01:02:05,318
make those things realizable do anything

1486
01:02:03,998 --> 01:02:07,118
most of the storage concerns done from

1487
01:02:05,318 --> 01:02:08,318
having just high and low entities and

1488
01:02:07,119 --> 01:02:10,210
would be solved by having more

1489
01:02:08,318 --> 01:02:11,768
granularity there so you have more and

1490
01:02:10,210 --> 01:02:15,818
smaller arrays of entities with some

1491
01:02:11,768 --> 01:02:17,588
particular aspect I don't think so and

1492
01:02:15,818 --> 01:02:19,119
the reason for that is because like I

1493
01:02:17,588 --> 01:02:20,679
said I want the constant of entity to be

1494
01:02:19,119 --> 01:02:23,108
very dynamic in this game I want things

1495
01:02:20,679 --> 01:02:24,998
to be able to very broadly be able to

1496
01:02:23,108 --> 01:02:26,619
support a lot of different mix and sorts

1497
01:02:24,998 --> 01:02:30,248
of stuff so I just don't think we're

1498
01:02:26,619 --> 01:02:31,989
going to be able to have homogeneity

1499
01:02:30,248 --> 01:02:34,028
I think homogeneity really won't be

1500
01:02:31,989 --> 01:02:35,470
possible with the game design if I

1501
01:02:34,028 --> 01:02:37,750
thought it was gonna be very

1502
01:02:35,469 --> 01:02:38,919
in that way we absolutely would because

1503
01:02:37,750 --> 01:02:49,000
it'd be much better for performance as

1504
01:02:38,920 --> 01:02:50,200
well you mentioned considering having

1505
01:02:49,000 --> 01:02:52,030
the world chunk store a fixed entity

1506
01:02:50,199 --> 01:02:53,169
count and then add multiple chunks to

1507
01:02:52,030 --> 01:02:54,880
the hash table if necessary to store

1508
01:02:53,170 --> 01:02:56,590
entities if you were to go that route

1509
01:02:54,880 --> 01:02:58,000
how would you compare one chunk to

1510
01:02:56,590 --> 01:03:00,579
another multiple chunks would have the

1511
01:02:58,000 --> 01:03:03,130
same XYZ so the answer would just be all

1512
01:03:00,579 --> 01:03:06,069
queries into the hash table would walk

1513
01:03:03,130 --> 01:03:10,809
all the chunks that had the matching X Y

1514
01:03:06,070 --> 01:03:13,120
Z so basically that that lookup right

1515
01:03:10,809 --> 01:03:15,009
this lookup right here instead of

1516
01:03:13,119 --> 01:03:18,579
stopping when it found a match would

1517
01:03:15,010 --> 01:03:20,020
just go through and actually use every

1518
01:03:18,579 --> 01:03:21,940
single one that it found instead of

1519
01:03:20,019 --> 01:03:23,530
instead of this break it would basically

1520
01:03:21,940 --> 01:03:26,920
process one and then go to the next one

1521
01:03:23,530 --> 01:03:28,240
and process that one and so on right and

1522
01:03:26,920 --> 01:03:31,269
so the only reason I didn't do that

1523
01:03:28,239 --> 01:03:34,419
is because C and C++ don't make it very

1524
01:03:31,269 --> 01:03:37,360
easy to do visitor style stuff like

1525
01:03:34,420 --> 01:03:38,860
basically normally in other languages

1526
01:03:37,360 --> 01:03:40,930
you just patch closures in here and they

1527
01:03:38,860 --> 01:03:42,070
just get executed and see those dos

1528
01:03:40,929 --> 01:03:43,449
Elevens a little bit better about that

1529
01:03:42,070 --> 01:03:46,840
but it's still just it's not a language

1530
01:03:43,449 --> 01:03:50,559
it's really built for that just bottom

1531
01:03:46,840 --> 01:03:51,820
line and so you know I was sort of

1532
01:03:50,559 --> 01:03:54,009
staying away from that because it'll be

1533
01:03:51,820 --> 01:03:57,010
easier if this hash lookup can just

1534
01:03:54,010 --> 01:03:58,690
return to you a chain and you iterate

1535
01:03:57,010 --> 01:04:00,910
over it rather than doing it the other

1536
01:03:58,690 --> 01:04:02,019
way around but that may change because

1537
01:04:00,909 --> 01:04:04,059
it's not that hard to make a little

1538
01:04:02,019 --> 01:04:05,619
iterator here that I would that you

1539
01:04:04,059 --> 01:04:09,929
would use to crawl over them and so

1540
01:04:05,619 --> 01:04:09,929
we'll see I may just do that

1541
01:04:15,289 --> 01:04:20,099
in terms of handling entity compression

1542
01:04:17,909 --> 01:04:21,598
decompression where would you grab store

1543
01:04:20,099 --> 01:04:26,809
the state of objects that are coming in

1544
01:04:21,599 --> 01:04:32,460
and out of the updates update scope so

1545
01:04:26,809 --> 01:04:34,170
that is just inset camera right so this

1546
01:04:32,460 --> 01:04:36,300
is the thing that basically stores stuff

1547
01:04:34,170 --> 01:04:38,608
back and this is the stuff that pulls

1548
01:04:36,300 --> 01:04:47,430
stuff in right I think that is that what

1549
01:04:38,608 --> 01:04:48,989
you're asking I'm not 100% sure why did

1550
01:04:47,429 --> 01:04:52,440
I call see compiled with a Cephas list

1551
01:04:48,989 --> 01:04:54,629
compliers compiler C++ well because this

1552
01:04:52,440 --> 01:04:56,490
isn't technically C right you couldn't

1553
01:04:54,630 --> 01:05:01,079
write this wouldn't compile with the C

1554
01:04:56,489 --> 01:05:02,969
compiler so for example if you look at

1555
01:05:01,079 --> 01:05:04,858
here we've you know these operators and

1556
01:05:02,969 --> 01:05:07,588
stuff that's all C++ so this is

1557
01:05:04,858 --> 01:05:09,809
definitely C++ code it's not C code it's

1558
01:05:07,588 --> 01:05:12,358
just we don't use much C++ because most

1559
01:05:09,809 --> 01:05:14,159
C++ is not particularly good but there

1560
01:05:12,358 --> 01:05:15,869
are some language features of C++ that

1561
01:05:14,159 --> 01:05:19,009
are good and so we do use them so

1562
01:05:15,869 --> 01:05:19,010
technically we're not C

1563
01:05:23,539 --> 01:05:27,739
well I can't world position just have a

1564
01:05:25,849 --> 01:05:30,019
pointer to a world chunk instead of all

1565
01:05:27,739 --> 01:05:33,679
those ab styles then offset underscore

1566
01:05:30,019 --> 01:05:36,170
is relative to the world chunk so the

1567
01:05:33,679 --> 01:05:38,690
problem is that doesn't really save us

1568
01:05:36,170 --> 01:05:40,670
much space right like I mean it might

1569
01:05:38,690 --> 01:05:43,490
save us a little bit of work so that

1570
01:05:40,670 --> 01:05:47,539
that's not a bad thing to do right but

1571
01:05:43,489 --> 01:05:50,929
this is you know this is 32 plus 32 plus

1572
01:05:47,539 --> 01:05:53,239
32 right so it's it's 64 it basically

1573
01:05:50,929 --> 01:05:55,819
would save us half right if because a

1574
01:05:53,239 --> 01:05:59,449
pointer is a pointer here is going to be

1575
01:05:55,820 --> 01:06:04,700
eight eight bytes whereas we're using 12

1576
01:05:59,449 --> 01:06:06,579
bytes right so it's just it's not like

1577
01:06:04,699 --> 01:06:09,169
getting rid of all of it which would be

1578
01:06:06,579 --> 01:06:11,869
much better right saving four bytes

1579
01:06:09,170 --> 01:06:13,880
versus saving twelve and furthermore

1580
01:06:11,869 --> 01:06:17,380
you're kind of in a little bit of a

1581
01:06:13,880 --> 01:06:20,720
rough position if you put a pointer here

1582
01:06:17,380 --> 01:06:24,320
that isn't really all the information if

1583
01:06:20,719 --> 01:06:26,599
that makes sense I mean it sort of is in

1584
01:06:24,320 --> 01:06:28,519
some sense but it sort of isn't isn't it

1585
01:06:26,599 --> 01:06:30,440
another with this you can actually

1586
01:06:28,519 --> 01:06:34,610
figure out where in the hash table

1587
01:06:30,440 --> 01:06:36,980
something is whereas without that you

1588
01:06:34,610 --> 01:06:38,059
can't so for example if you just have a

1589
01:06:36,980 --> 01:06:39,769
pointer to a world chunk

1590
01:06:38,059 --> 01:06:42,079
let's say you want to remove that chunk

1591
01:06:39,769 --> 01:06:43,670
from the hash table you wouldn't be able

1592
01:06:42,079 --> 01:06:47,599
to do it because it doesn't store

1593
01:06:43,670 --> 01:06:54,039
pointers back to where it is right so

1594
01:06:47,599 --> 01:06:54,039
that would be kind of a bit difficulty

1595
01:06:55,000 --> 01:07:01,429
and you'd go so as long as we continue

1596
01:06:58,760 --> 01:07:03,230
to store the complete XYZ in there

1597
01:07:01,429 --> 01:07:05,089
I guess that's totally fine so yeah so

1598
01:07:03,230 --> 01:07:06,590
it's still fine storing the pointer

1599
01:07:05,090 --> 01:07:07,850
would be fine it just doesn't get me as

1600
01:07:06,590 --> 01:07:09,230
much of the savings as I want

1601
01:07:07,849 --> 01:07:12,319
I would like to figure out a way just

1602
01:07:09,230 --> 01:07:17,320
nuke this entirely if that makes sense

1603
01:07:12,320 --> 01:07:17,320
but you know maybe that's not possible

1604
01:07:23,969 --> 01:07:28,409
I didn't get to met - I didn't get to

1605
01:07:26,969 --> 01:07:29,549
watch the entire stream so I don't know

1606
01:07:28,409 --> 01:07:31,679
if you considered it but why don't you

1607
01:07:29,550 --> 01:07:33,450
have a flag for about to be deleted that

1608
01:07:31,679 --> 01:07:35,009
every entity checks against and nulls

1609
01:07:33,449 --> 01:07:37,379
pointers have it visible for all

1610
01:07:35,010 --> 01:07:38,760
entities for one frame so the reason I

1611
01:07:37,380 --> 01:07:40,099
don't do that is because not all

1612
01:07:38,760 --> 01:07:41,970
entities will be updated every frame

1613
01:07:40,099 --> 01:07:43,410
especially the low entities will get

1614
01:07:41,969 --> 01:07:44,639
updated at a very low frequency that's

1615
01:07:43,409 --> 01:07:46,259
why they're called low entities so they

1616
01:07:44,639 --> 01:07:48,900
might be updated once every 60 frames

1617
01:07:46,260 --> 01:07:50,070
for example so using a deferred deletion

1618
01:07:48,900 --> 01:07:51,869
strategy like that really isn't an

1619
01:07:50,070 --> 01:07:53,280
option for us we probably still will

1620
01:07:51,869 --> 01:07:55,260
defer deletions to the end of the frame

1621
01:07:53,280 --> 01:07:56,700
for another other reasons but we won't

1622
01:07:55,260 --> 01:07:58,800
be able to use that as the way that we'd

1623
01:07:56,699 --> 01:08:00,269
get out of jail free for deleted

1624
01:07:58,800 --> 01:08:01,530
entities but that's not what we were

1625
01:08:00,269 --> 01:08:03,780
talking about here really either so just

1626
01:08:01,530 --> 01:08:07,080
to be clear I wasn't worried about that

1627
01:08:03,780 --> 01:08:09,690
I was literally just worried about the

1628
01:08:07,079 --> 01:08:12,150
fact that as things move spatially they

1629
01:08:09,690 --> 01:08:15,420
will move where they are in the world

1630
01:08:12,150 --> 01:08:17,190
storage right and so that was the thing

1631
01:08:15,420 --> 01:08:19,109
that I was worried about not the

1632
01:08:17,189 --> 01:08:22,099
entities would be deleted that wasn't

1633
01:08:19,109 --> 01:08:22,100
that really wasn't the problem

1634
01:08:26,750 --> 01:08:31,010
do you think that you do puzzler will be

1635
01:08:29,119 --> 01:08:32,090
handled tomorrow and do you often sleep

1636
01:08:31,010 --> 01:08:34,130
on decisions like that

1637
01:08:32,090 --> 01:08:36,770
I do often sleep on decisions most of

1638
01:08:34,130 --> 01:08:38,420
the time I never do anything right the

1639
01:08:36,770 --> 01:08:39,620
first time I have to sort of play with

1640
01:08:38,420 --> 01:08:42,350
it and then I think about it I'm like ah

1641
01:08:39,619 --> 01:08:43,430
that's what I should do and so that's

1642
01:08:42,350 --> 01:08:44,750
why I trying to think it through too

1643
01:08:43,430 --> 01:08:46,039
hard I try to do a little bit of due

1644
01:08:44,750 --> 01:08:47,390
diligence when I'm writing things I'm

1645
01:08:46,039 --> 01:08:48,859
like okay does this seem right you know

1646
01:08:47,390 --> 01:08:50,660
struggle it around and then I just go

1647
01:08:48,859 --> 01:08:52,130
and I make that thing and then later I

1648
01:08:50,659 --> 01:08:53,569
think about it look like I'm good okay I

1649
01:08:52,130 --> 01:08:55,430
should have done it this way and I do it

1650
01:08:53,569 --> 01:08:57,859
because usually I find that I have to

1651
01:08:55,430 --> 01:08:59,360
see the thing to really know because

1652
01:08:57,859 --> 01:09:00,920
there's a lot of complexity and it kind

1653
01:08:59,359 --> 01:09:05,149
of like sinks in and I'm like ah that's

1654
01:09:00,920 --> 01:09:07,039
the thing whether I don't think I'll be

1655
01:09:05,149 --> 01:09:08,210
handled tomorrow I think that will have

1656
01:09:07,039 --> 01:09:11,149
to get a little further down the road

1657
01:09:08,210 --> 01:09:12,439
and then we'll see how the low entities

1658
01:09:11,149 --> 01:09:14,539
get updated in that sort of stuff and

1659
01:09:12,439 --> 01:09:16,279
then we'll kind of go ah there's how we

1660
01:09:14,539 --> 01:09:18,729
do it and then we'll do it if it's

1661
01:09:16,279 --> 01:09:18,729
possible

1662
01:09:31,279 --> 01:09:34,309
what I was getting to is that we seem to

1663
01:09:33,048 --> 01:09:36,469
be working towards what's called the

1664
01:09:34,309 --> 01:09:38,119
entity component system where what we

1665
01:09:36,469 --> 01:09:40,189
call now high and low are just

1666
01:09:38,118 --> 01:09:43,250
components alongside anything else we

1667
01:09:40,189 --> 01:09:45,169
want to add two entities later yeah well

1668
01:09:43,250 --> 01:09:48,109
so it's hard to say I mean that may be

1669
01:09:45,170 --> 01:09:49,969
true but it like I said I don't really

1670
01:09:48,109 --> 01:09:52,159
like to pre guess those sorts of things

1671
01:09:49,969 --> 01:09:55,609
I'd rather let them emerge properly so

1672
01:09:52,158 --> 01:09:58,729
that they are guaranteed to be right for

1673
01:09:55,609 --> 01:10:03,139
the model that we're actually using so I

1674
01:09:58,729 --> 01:10:05,238
I do suspect we will have components but

1675
01:10:03,139 --> 01:10:07,880
those components will probably be part

1676
01:10:05,238 --> 01:10:10,399
of the low entity because they never get

1677
01:10:07,880 --> 01:10:12,260
deleted right they're going to be there

1678
01:10:10,399 --> 01:10:13,969
forever and so presumably the high

1679
01:10:12,260 --> 01:10:15,920
entity is really just a thing that that

1680
01:10:13,969 --> 01:10:19,578
stores like the animation state and

1681
01:10:15,920 --> 01:10:22,639
stuff like that and so I don't see the I

1682
01:10:19,578 --> 01:10:24,769
don't see much benefit in trying to

1683
01:10:22,639 --> 01:10:27,559
overthink that and making some generic

1684
01:10:24,770 --> 01:10:29,179
way of handling it when the specific way

1685
01:10:27,559 --> 01:10:32,059
of handling it I think will be what we

1686
01:10:29,179 --> 01:10:34,809
actually want and so if that makes sense

1687
01:10:32,059 --> 01:10:34,809
hopefully that makes some sense

1688
01:10:38,869 --> 01:10:42,680
see that the computer handles 1 million

1689
01:10:40,970 --> 01:10:44,150
entities without lagging do we really

1690
01:10:42,680 --> 01:10:45,470
need to worry about the performance it

1691
01:10:44,149 --> 01:10:48,229
coming from one extra point or

1692
01:10:45,470 --> 01:10:49,030
dereference so yes and no I mean you're

1693
01:10:48,229 --> 01:10:50,929
right

1694
01:10:49,029 --> 01:10:52,340
probably not but what you have to

1695
01:10:50,930 --> 01:10:53,930
remember is the poor dereferences are

1696
01:10:52,340 --> 01:10:56,329
the really bad things a lot of the times

1697
01:10:53,930 --> 01:10:58,100
that case where we're looping over the

1698
01:10:56,329 --> 01:11:00,019
entities is the best possible case it

1699
01:10:58,100 --> 01:11:02,600
has no pointer dereferencing it was just

1700
01:11:00,020 --> 01:11:04,220
a loop that's completely streaming so

1701
01:11:02,600 --> 01:11:06,170
the memory is read and complete

1702
01:11:04,220 --> 01:11:08,420
sequential order and is the perfect case

1703
01:11:06,170 --> 01:11:10,670
for the processor and so Porter chasing

1704
01:11:08,420 --> 01:11:12,440
is actually much worse than that it can

1705
01:11:10,670 --> 01:11:15,289
be you know up to 200 times slower than

1706
01:11:12,439 --> 01:11:17,719
what we were doing right and so so yeah

1707
01:11:15,289 --> 01:11:19,430
I am a little bit worried about it just

1708
01:11:17,720 --> 01:11:21,020
from the standpoint of like it what if

1709
01:11:19,430 --> 01:11:22,159
we actually want to scale things I don't

1710
01:11:21,020 --> 01:11:24,890
want there to be a lot of that but

1711
01:11:22,159 --> 01:11:26,210
realistically no I mean at some level we

1712
01:11:24,890 --> 01:11:28,670
don't care too much about some of these

1713
01:11:26,210 --> 01:11:30,170
things because like the tile chunks

1714
01:11:28,670 --> 01:11:31,579
won't be accessed at a frequency that's

1715
01:11:30,170 --> 01:11:32,920
high enough to make the extra point

1716
01:11:31,579 --> 01:11:35,869
under efference really that big a deal

1717
01:11:32,920 --> 01:11:39,350
and stuff like that so we'll see but

1718
01:11:35,869 --> 01:11:41,420
again I like this is this is also some

1719
01:11:39,350 --> 01:11:43,520
practice I mean the idea here is not to

1720
01:11:41,420 --> 01:11:45,020
just do the the sloppiest thing that

1721
01:11:43,520 --> 01:11:47,060
works is to actually think through

1722
01:11:45,020 --> 01:11:48,980
everything and program it as if it were

1723
01:11:47,060 --> 01:11:50,420
intended to be professional and that we

1724
01:11:48,979 --> 01:11:53,269
don't want to spend a lot of time doing

1725
01:11:50,420 --> 01:11:55,430
things that we don't have to because

1726
01:11:53,270 --> 01:11:56,780
again this is educational it's not the

1727
01:11:55,430 --> 01:11:58,460
goal here is not to ship the game as

1728
01:11:56,779 --> 01:12:00,380
quickly as possible in this piggy away

1729
01:11:58,460 --> 01:12:03,619
as possible which would be a different

1730
01:12:00,380 --> 01:12:04,760
skill set right it's to sort of show how

1731
01:12:03,619 --> 01:12:06,739
to think through problems and do

1732
01:12:04,760 --> 01:12:07,670
efficient systems because a lot of times

1733
01:12:06,739 --> 01:12:09,529
you do have to care about efficiency

1734
01:12:07,670 --> 01:12:11,239
this just doesn't happen to be one of

1735
01:12:09,529 --> 01:12:13,609
them because you know at the end of the

1736
01:12:11,239 --> 01:12:19,369
day that particular loop is not gonna be

1737
01:12:13,609 --> 01:12:22,279
a problem although who knows on the

1738
01:12:19,369 --> 01:12:23,750
Raspberry Pi maybe maybe we'll be we're

1739
01:12:22,279 --> 01:12:25,340
on the best possible case right now so

1740
01:12:23,750 --> 01:12:26,989
keep that in mind like things get a lot

1741
01:12:25,340 --> 01:12:31,699
worse when we step down to mobile or

1742
01:12:26,989 --> 01:12:33,469
whatever right well enemies be able to

1743
01:12:31,699 --> 01:12:35,659
transfer from one chunk to another yes

1744
01:12:33,470 --> 01:12:37,850
that's all the enemies will always

1745
01:12:35,659 --> 01:12:39,800
transfer from one to another unless

1746
01:12:37,850 --> 01:12:41,660
they're pure scenery I think so anyone

1747
01:12:39,800 --> 01:12:44,199
who moves will often switch between

1748
01:12:41,659 --> 01:12:44,199
chunks

1749
01:12:51,979 --> 01:12:55,549
will we start using the entity system

1750
01:12:54,140 --> 01:12:57,590
for something other than walls players

1751
01:12:55,550 --> 01:13:00,020
walls soon or will the renderer come

1752
01:12:57,590 --> 01:13:01,670
first we'll probably add a few more

1753
01:13:00,020 --> 01:13:05,330
things in there for testing purposes

1754
01:13:01,670 --> 01:13:07,100
like you know pickups chests at an enemy

1755
01:13:05,329 --> 01:13:09,769
or - something like that just to get it

1756
01:13:07,100 --> 01:13:12,320
working correctly so that we're seeing

1757
01:13:09,770 --> 01:13:15,080
roughly what'll be in there and then

1758
01:13:12,319 --> 01:13:17,109
we'll do the renderer does that make

1759
01:13:15,079 --> 01:13:17,109
sense

1760
01:13:17,350 --> 01:13:24,890
how are we looking here it's at the end

1761
01:13:20,840 --> 01:13:28,520
of the queue colons I think that may be

1762
01:13:24,890 --> 01:13:33,619
the end of the queue colons I'll give it

1763
01:13:28,520 --> 01:13:35,650
a second just to make sure just to make

1764
01:13:33,619 --> 01:13:35,649
sure

1765
01:13:40,479 --> 01:13:48,189
looks like that is the end of the queue

1766
01:13:44,710 --> 01:13:52,329
Cowen's I believe we have reached the

1767
01:13:48,189 --> 01:13:56,019
end of the queue colons so I think

1768
01:13:52,329 --> 01:13:59,140
that's about it for today we will wrap

1769
01:13:56,020 --> 01:14:00,489
it up here tomorrow what I'd like to do

1770
01:13:59,140 --> 01:14:02,199
is go through and actually start using

1771
01:14:00,488 --> 01:14:04,509
the world as a spatial partition where

1772
01:14:02,198 --> 01:14:06,729
we put stuff in it so we'll go ahead and

1773
01:14:04,510 --> 01:14:08,679
implement that code and then that'll

1774
01:14:06,729 --> 01:14:10,839
pretty much be you know and I'll go

1775
01:14:08,679 --> 01:14:12,850
through and probably pull out some of

1776
01:14:10,840 --> 01:14:14,500
that code that's in handmade that's EVP

1777
01:14:12,850 --> 01:14:17,320
right now that's that's about moving

1778
01:14:14,500 --> 01:14:18,369
things in and out of the active sets so

1779
01:14:17,319 --> 01:14:19,389
we'll kind of we'll just play around

1780
01:14:18,369 --> 01:14:20,948
just cleaning that up a little bit

1781
01:14:19,390 --> 01:14:22,750
making it a little more formal exactly

1782
01:14:20,948 --> 01:14:24,339
how things work trying to get it down to

1783
01:14:22,750 --> 01:14:26,050
something relatively straightforward

1784
01:14:24,340 --> 01:14:29,260
that's that's very clear and easy to

1785
01:14:26,050 --> 01:14:31,210
follow but I think that's about it for

1786
01:14:29,260 --> 01:14:32,619
playing with how the world is stored so

1787
01:14:31,210 --> 01:14:34,480
then we'll try adding like I said a

1788
01:14:32,619 --> 01:14:37,149
couple more entity types just play

1789
01:14:34,479 --> 01:14:39,789
around a little bit you know maybe try

1790
01:14:37,149 --> 01:14:42,519
to create a bit of a sprawling world

1791
01:14:39,789 --> 01:14:44,649
like let make a stupid generator that

1792
01:14:42,520 --> 01:14:46,030
generates a lot more stuff and make sure

1793
01:14:44,649 --> 01:14:47,920
that we handle it right make sure that

1794
01:14:46,029 --> 01:14:50,259
you can walk around the world with a

1795
01:14:47,920 --> 01:14:52,869
million entities actually placed and

1796
01:14:50,260 --> 01:14:55,570
that it all works ok and then we'll kind

1797
01:14:52,869 --> 01:14:57,309
of consider this part of things done for

1798
01:14:55,569 --> 01:14:59,259
now and we can move on to the animation

1799
01:14:57,310 --> 01:15:01,539
code which we do need to prototype as

1800
01:14:59,260 --> 01:15:03,429
well before moving on to the to actual

1801
01:15:01,539 --> 01:15:07,840
any any real straightforward work on

1802
01:15:03,429 --> 01:15:08,710
engine components like the renderer but

1803
01:15:07,840 --> 01:15:10,090
again things seem to be going pretty

1804
01:15:08,710 --> 01:15:13,060
well

1805
01:15:10,090 --> 01:15:16,300
I do wish we had like a slightly better

1806
01:15:13,060 --> 01:15:18,250
solution for for for the a couple things

1807
01:15:16,300 --> 01:15:20,289
in here but those are the kind of things

1808
01:15:18,250 --> 01:15:21,579
that usually shake out over time you

1809
01:15:20,289 --> 01:15:22,840
kind of start CEO I should have done

1810
01:15:21,579 --> 01:15:24,939
this way and then it's a little bit

1811
01:15:22,840 --> 01:15:26,020
clearer it's fine so I'm not too worried

1812
01:15:24,939 --> 01:15:27,909
about it but but there are a couple

1813
01:15:26,020 --> 01:15:29,440
things that still bug me so hopefully

1814
01:15:27,909 --> 01:15:32,948
we'll get you know all that stuff ironed

1815
01:15:29,439 --> 01:15:35,919
out at the end of the day but for now

1816
01:15:32,948 --> 01:15:40,238
that is the end of our coding oops oops

1817
01:15:35,920 --> 01:15:42,850
what did I do here edit there we go ok

1818
01:15:40,238 --> 01:15:44,229
make sure it's looking pilot so thank

1819
01:15:42,850 --> 01:15:46,929
you very much for joining me it's been a

1820
01:15:44,229 --> 01:15:48,459
pleasure coding with you as always if

1821
01:15:46,929 --> 01:15:50,260
you would like to follow along at home

1822
01:15:48,460 --> 01:15:51,969
with handmade hero you can pre-order the

1823
01:15:50,260 --> 01:15:53,800
game on hand me here org and it comes

1824
01:15:51,969 --> 01:15:54,469
with all the source code you can

1825
01:15:53,800 --> 01:15:55,940
download the source

1826
01:15:54,469 --> 01:15:58,158
every night after I finished coding here

1827
01:15:55,939 --> 01:16:00,768
on the stream I upload it so you can

1828
01:15:58,158 --> 01:16:02,359
play around with it and learn to program

1829
01:16:00,769 --> 01:16:05,210
gave yourself as much as you would like

1830
01:16:02,359 --> 01:16:06,710
to so if you'd like to do that Hameed

1831
01:16:05,210 --> 01:16:08,359
erode out or get the PR at a button and

1832
01:16:06,710 --> 01:16:09,769
you are good to go if you want to

1833
01:16:08,359 --> 01:16:11,238
support the video series we also do have

1834
01:16:09,769 --> 01:16:12,949
a patreon you can subscribe to that's

1835
01:16:11,238 --> 01:16:15,228
clickable over here on hand made here on

1836
01:16:12,948 --> 01:16:16,578
a tour as well and then we also have a

1837
01:16:15,229 --> 01:16:17,960
news and forum site that I highly

1838
01:16:16,578 --> 01:16:19,420
recommend people check out if they're

1839
01:16:17,960 --> 01:16:22,038
trying to learn from the stream

1840
01:16:19,420 --> 01:16:25,158
schedules here although I also have the

1841
01:16:22,038 --> 01:16:26,899
Twitter bot now is handmade hero on

1842
01:16:25,158 --> 01:16:29,238
Twitter now tweets the schedule properly

1843
01:16:26,899 --> 01:16:30,679
as well so that's good but it also has

1844
01:16:29,238 --> 01:16:31,848
an episode guide for catching up on past

1845
01:16:30,679 --> 01:16:34,969
episode it's got a coding resources

1846
01:16:31,849 --> 01:16:36,319
guide which basically has everything in

1847
01:16:34,969 --> 01:16:37,819
it that you might need for porting to

1848
01:16:36,319 --> 01:16:39,439
Mac or Linux people have done work on

1849
01:16:37,819 --> 01:16:40,639
moving it to platforms that we haven't

1850
01:16:39,439 --> 01:16:42,408
gotten to yet so that's pretty cool

1851
01:16:40,639 --> 01:16:43,909
place to check out and we've got a code

1852
01:16:42,408 --> 01:16:45,498
discussion forum where you can go and

1853
01:16:43,908 --> 01:16:48,319
ask questions if you have questions

1854
01:16:45,498 --> 01:16:50,149
however my check in and out so thanks

1855
01:16:48,319 --> 01:16:52,308
everyone for joining me I'll be back

1856
01:16:50,149 --> 01:16:53,509
tomorrow at 8 p.m. PST where we should

1857
01:16:52,309 --> 01:16:56,029
be able to wrap up some of this world

1858
01:16:53,510 --> 01:16:59,289
stuff hopefully and I hope to see you

1859
01:16:56,029 --> 01:16:59,288
all there thanks for joining me

