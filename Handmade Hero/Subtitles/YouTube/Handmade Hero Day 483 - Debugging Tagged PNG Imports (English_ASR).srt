1
00:00:00,060 --> 00:00:03,659
hello everyone welcome to handmade Hero

2
00:00:02,009 --> 00:00:05,548
show recode a complete game live on

3
00:00:03,658 --> 00:00:06,750
stream we have some debugging to do

4
00:00:05,549 --> 00:00:08,250
today

5
00:00:06,750 --> 00:00:10,050
what we'd like to do is put a bunch of

6
00:00:08,250 --> 00:00:13,410
art in the game because we have the

7
00:00:10,050 --> 00:00:15,540
opportunity to do that now and we just

8
00:00:13,410 --> 00:00:19,649
have to finish up our art pipeline stuff

9
00:00:15,539 --> 00:00:22,230
that is I think mostly written but it's

10
00:00:19,649 --> 00:00:24,390
not necessarily working we have to go

11
00:00:22,230 --> 00:00:26,099
through and debug a bunch of stuff and

12
00:00:24,390 --> 00:00:27,359
there's a couple ways we can do that one

13
00:00:26,099 --> 00:00:29,490
of the things that I'd like to do today

14
00:00:27,359 --> 00:00:33,870
is actually do a little bit of adding

15
00:00:29,489 --> 00:00:35,369
code to debug it's not new code that we

16
00:00:33,869 --> 00:00:36,988
actually are gonna use in the game but

17
00:00:35,369 --> 00:00:40,140
I'd like to make a little more debug

18
00:00:36,988 --> 00:00:41,609
infrastructure that we can use and so

19
00:00:40,140 --> 00:00:43,829
let me talk a little bit about what I

20
00:00:41,609 --> 00:00:46,259
mean by that so right now what we're

21
00:00:43,829 --> 00:00:49,170
doing and if I remember correctly from

22
00:00:46,259 --> 00:00:51,299
last week what we were doing was just

23
00:00:49,170 --> 00:00:54,149
saying look we would like to do tagging

24
00:00:51,299 --> 00:00:56,609
and finding of assets but what we saw is

25
00:00:54,149 --> 00:00:59,489
well actually it kind of worked but it

26
00:00:56,609 --> 00:01:01,439
kind of didn't because you can see we

27
00:00:59,488 --> 00:01:02,968
definitely loaded some stuff in but

28
00:01:01,439 --> 00:01:06,209
there's a couple things we can see first

29
00:01:02,969 --> 00:01:08,849
of all we're upside down which we do

30
00:01:06,209 --> 00:01:11,359
kind of expect because pngs

31
00:01:08,849 --> 00:01:14,879
are backwards from how our textures are

32
00:01:11,359 --> 00:01:17,789
they go the first when you start to

33
00:01:14,879 --> 00:01:19,679
decode a PNG the first row of pixels

34
00:01:17,790 --> 00:01:21,390
that you get in a PNG because member we

35
00:01:19,680 --> 00:01:24,360
wrote the PNG reader on stream so we're

36
00:01:21,390 --> 00:01:29,280
going full-bore here the first row of

37
00:01:24,359 --> 00:01:32,400
pixels in a PNG is actually the top like

38
00:01:29,280 --> 00:01:35,040
physical top of the thing so you know if

39
00:01:32,400 --> 00:01:38,040
you were to look at something like a

40
00:01:35,040 --> 00:01:39,600
human the head would be on that first

41
00:01:38,040 --> 00:01:42,118
row of pixels right would be where that

42
00:01:39,599 --> 00:01:44,819
starts the feet would be down where the

43
00:01:42,118 --> 00:01:48,959
last row of pixels is right but that's

44
00:01:44,819 --> 00:01:51,359
not how textures work in 3d hardware in

45
00:01:48,959 --> 00:01:53,908
3d hardware when you think about what's

46
00:01:51,359 --> 00:01:56,459
that is the zero so the first row that

47
00:01:53,909 --> 00:02:01,399
you would submit that's actually the

48
00:01:56,459 --> 00:02:05,218
bottom physically of the texture so it's

49
00:02:01,399 --> 00:02:07,500
it's difficult to talk really about

50
00:02:05,218 --> 00:02:08,909
those things constructively because what

51
00:02:07,500 --> 00:02:12,479
the other thing you have to remember in

52
00:02:08,909 --> 00:02:13,479
3d is since it's a world and you're just

53
00:02:12,479 --> 00:02:16,090
talking about mapping

54
00:02:13,479 --> 00:02:18,939
into the world top and bottom is really

55
00:02:16,090 --> 00:02:22,539
more conventional than anything else but

56
00:02:18,939 --> 00:02:25,239
we chose the convention that we will

57
00:02:22,539 --> 00:02:28,989
stick with the standard math axis which

58
00:02:25,239 --> 00:02:31,180
is that Y goes upward not downward right

59
00:02:28,989 --> 00:02:33,009
if we had chosen to go with the

60
00:02:31,180 --> 00:02:36,310
convention where Y goes downward then we

61
00:02:33,009 --> 00:02:39,579
would agree with PNG in the sense that

62
00:02:36,310 --> 00:02:42,519
PNG has zero and then increasing values

63
00:02:39,580 --> 00:02:46,690
of Y increasing row indices go down

64
00:02:42,519 --> 00:02:48,280
right so you have to understand all of

65
00:02:46,689 --> 00:02:51,039
these things in your head I know it's

66
00:02:48,280 --> 00:02:53,169
difficult but this is where these sorts

67
00:02:51,039 --> 00:02:55,120
of problems come from and obviously we

68
00:02:53,169 --> 00:02:57,848
have this situation where we have to

69
00:02:55,120 --> 00:02:59,409
make all these things line up so what I

70
00:02:57,848 --> 00:03:02,919
mean by the upside down thing being

71
00:02:59,409 --> 00:03:04,629
expected is this is something I knew we

72
00:03:02,919 --> 00:03:05,828
would deal with me it's not a shock to

73
00:03:04,629 --> 00:03:07,060
me that the things came in upside down

74
00:03:05,829 --> 00:03:08,680
because that's just something we have to

75
00:03:07,060 --> 00:03:10,840
deal with so we have to decide how

76
00:03:08,680 --> 00:03:14,500
exactly we want to handle that and so on

77
00:03:10,840 --> 00:03:17,530
that's not particularly concerning what

78
00:03:14,500 --> 00:03:19,180
does concern me is the blue tone I do

79
00:03:17,530 --> 00:03:21,729
not understand where that's coming from

80
00:03:19,180 --> 00:03:24,159
that's a weird one so we have some

81
00:03:21,729 --> 00:03:27,129
debugging to do there and then I think

82
00:03:24,159 --> 00:03:30,340
we've got one other thing to worry about

83
00:03:27,129 --> 00:03:32,889
here which is that we also have a bug

84
00:03:30,340 --> 00:03:34,509
with our picking so the way we're

85
00:03:32,889 --> 00:03:36,880
setting up the tags are picking with the

86
00:03:34,509 --> 00:03:39,548
tags is wrong so we have a couple bugs

87
00:03:36,879 --> 00:03:40,209
that we want to look into and I don't

88
00:03:39,549 --> 00:03:41,889
know that they're going to be

89
00:03:40,209 --> 00:03:43,329
complicated but what I do know is this

90
00:03:41,889 --> 00:03:45,430
is the sort of thing that could get

91
00:03:43,329 --> 00:03:47,379
complicated quickly why because we have

92
00:03:45,430 --> 00:03:51,790
many steps in the process the artist

93
00:03:47,379 --> 00:03:53,019
makes a PNG the PNG like exported from

94
00:03:51,789 --> 00:03:55,840
Photoshop right so really they make a

95
00:03:53,019 --> 00:03:59,349
Photoshop thing then they export a PNG

96
00:03:55,840 --> 00:04:03,969
from that that PNG is loaded into our

97
00:03:59,348 --> 00:04:07,030
game by our decoder and loader right it

98
00:04:03,969 --> 00:04:09,310
is then packed into a uniform data

99
00:04:07,030 --> 00:04:11,348
format that has some meta information on

100
00:04:09,310 --> 00:04:13,389
it so that we can quickly load where it

101
00:04:11,348 --> 00:04:14,858
is and know what it is so that we don't

102
00:04:13,389 --> 00:04:16,870
have to like iterate over everything

103
00:04:14,859 --> 00:04:18,038
every time we start the game and look at

104
00:04:16,870 --> 00:04:21,399
all the P and G's we have or anything

105
00:04:18,038 --> 00:04:23,288
like this right so we've got that and

106
00:04:21,399 --> 00:04:25,538
then we've got the actual runtime code

107
00:04:23,288 --> 00:04:26,319
that looks through what's loaded to find

108
00:04:25,538 --> 00:04:29,589
matches for

109
00:04:26,319 --> 00:04:31,599
things that we asked for right and every

110
00:04:29,589 --> 00:04:33,310
one of those steps can have a bug and

111
00:04:31,600 --> 00:04:36,790
there's even one more that we kind of

112
00:04:33,310 --> 00:04:38,500
know isn't a problem in some sense but

113
00:04:36,790 --> 00:04:39,970
you know even really kind of could be

114
00:04:38,500 --> 00:04:42,639
depending on because of the lighting

115
00:04:39,970 --> 00:04:44,050
maybe who knows which is the actual

116
00:04:42,639 --> 00:04:45,939
rendering you know what I mean

117
00:04:44,050 --> 00:04:47,920
so when we actually go to render things

118
00:04:45,939 --> 00:04:49,449
we also we could easily do something

119
00:04:47,920 --> 00:04:51,129
where we're screwing up the red or green

120
00:04:49,449 --> 00:04:53,319
channels there or the blue Channel there

121
00:04:51,129 --> 00:04:55,089
or whatever right or we're flipping

122
00:04:53,319 --> 00:04:56,800
things upside down inside the renderer

123
00:04:55,089 --> 00:05:01,529
when we shouldn't be and things like

124
00:04:56,800 --> 00:05:05,680
this right so we have a large number of

125
00:05:01,529 --> 00:05:07,000
possible failure points and so the

126
00:05:05,680 --> 00:05:08,829
reason I wanted to take the particular

127
00:05:07,000 --> 00:05:11,589
talk when I take today is not because I

128
00:05:08,829 --> 00:05:14,289
I could now go debug those we can

129
00:05:11,589 --> 00:05:16,329
probably debug them pretty cold and it

130
00:05:14,290 --> 00:05:17,920
wouldn't be a huge deal but I don't

131
00:05:16,329 --> 00:05:19,329
really want to spend a lot of time to

132
00:05:17,920 --> 00:05:23,350
bugging these kind of issues all the

133
00:05:19,329 --> 00:05:27,459
time so what I'd rather do is take one

134
00:05:23,350 --> 00:05:29,800
part of the puzzle away and just go look

135
00:05:27,459 --> 00:05:32,709
we've got this utility we wrote that's

136
00:05:29,800 --> 00:05:36,310
HHA edit right and in here you can do

137
00:05:32,709 --> 00:05:38,049
create rewrite info dump right and so

138
00:05:36,310 --> 00:05:40,689
one of the things that we had was these

139
00:05:38,050 --> 00:05:44,139
these two bottom ones that allow us to

140
00:05:40,689 --> 00:05:48,790
look at a particular one of our data one

141
00:05:44,139 --> 00:05:50,919
of our HHA files like the runtime data

142
00:05:48,790 --> 00:05:53,680
for the game it allows us to look at one

143
00:05:50,920 --> 00:05:55,480
of those in so if we wanted to say look

144
00:05:53,680 --> 00:05:57,400
this is the imported art assets here

145
00:05:55,480 --> 00:06:02,590
right this is what we're running with if

146
00:05:57,399 --> 00:06:04,959
I say HHA edit and I said info local HHA

147
00:06:02,589 --> 00:06:07,329
it will tell me some information right

148
00:06:04,959 --> 00:06:10,180
okay so it's a version 1 file it has 14

149
00:06:07,329 --> 00:06:13,149
assets in it there are 46 total tags and

150
00:06:10,180 --> 00:06:15,639
it came with annotations in it right if

151
00:06:13,149 --> 00:06:18,029
I then say dump right what you can see

152
00:06:15,639 --> 00:06:20,740
here is we get all of the information

153
00:06:18,029 --> 00:06:22,719
about these things in here that is

154
00:06:20,740 --> 00:06:25,420
exactly what I want to know so for

155
00:06:22,720 --> 00:06:29,380
example I can see here that like okay

156
00:06:25,420 --> 00:06:30,879
here's the hand dark bones thing it says

157
00:06:29,379 --> 00:06:33,250
this is the tile that it was imported

158
00:06:30,879 --> 00:06:35,439
from it says that Anna is the person who

159
00:06:33,250 --> 00:06:39,728
made it it says which file it was from

160
00:06:35,439 --> 00:06:42,189
which is nice we have a data like

161
00:06:39,728 --> 00:06:43,389
Poynter it tells us four tags and what

162
00:06:42,189 --> 00:06:45,610
you can see here is the piece of

163
00:06:43,389 --> 00:06:47,918
information I'm really interested in is

164
00:06:45,610 --> 00:06:49,889
sort of missing right I want to know

165
00:06:47,918 --> 00:06:53,049
what we tagged the thing and

166
00:06:49,889 --> 00:06:54,759
unfortunately I can't see it right so it

167
00:06:53,050 --> 00:06:56,620
just says unknown and so let's look at

168
00:06:54,759 --> 00:06:57,490
why that's true that's the first thing I

169
00:06:56,620 --> 00:06:59,499
do today because I think it'd be easier

170
00:06:57,490 --> 00:07:02,050
to fix and then we could look at that

171
00:06:59,499 --> 00:07:04,778
and eliminate that as a possibility one

172
00:07:02,050 --> 00:07:07,478
thing the other thing I'd like to do is

173
00:07:04,778 --> 00:07:10,870
I can't tell if this bitmap is correct

174
00:07:07,478 --> 00:07:13,658
right I have no idea what this bitmap

175
00:07:10,870 --> 00:07:16,718
looks like so the other thing I could do

176
00:07:13,658 --> 00:07:19,269
is make in the like a like something

177
00:07:16,718 --> 00:07:22,240
like this like dump BMP or something and

178
00:07:19,269 --> 00:07:25,209
I could tell it take this local itch

179
00:07:22,240 --> 00:07:27,370
it's a and dump all the bitmaps out into

180
00:07:25,209 --> 00:07:29,769
a directory so I can look at them and

181
00:07:27,370 --> 00:07:31,689
see if they're all correct so I can have

182
00:07:29,769 --> 00:07:33,639
a round trip there so those two things

183
00:07:31,689 --> 00:07:35,588
aren't particularly hard to add to our

184
00:07:33,639 --> 00:07:38,079
HSA editor so I think we should because

185
00:07:35,588 --> 00:07:43,449
that way we can know like what's going

186
00:07:38,079 --> 00:07:45,008
on the other thing we could do is make

187
00:07:43,449 --> 00:07:46,538
it so that the import path gets welded

188
00:07:45,009 --> 00:07:48,009
in here too but I don't know how much we

189
00:07:46,538 --> 00:07:50,318
want to I'm not gonna do that because we

190
00:07:48,009 --> 00:07:52,569
don't really care but something to think

191
00:07:50,319 --> 00:07:55,749
about maybe a long term so let's take a

192
00:07:52,569 --> 00:07:57,968
look at the first one so we have some

193
00:07:55,749 --> 00:08:00,430
duplicated code and the duplicated code

194
00:07:57,968 --> 00:08:01,899
is what's leading to this problem so if

195
00:08:00,430 --> 00:08:04,930
we look let me just load up the project

196
00:08:01,899 --> 00:08:06,610
here so we get all our files so if we

197
00:08:04,930 --> 00:08:08,680
look inside Hannah made asset one thing

198
00:08:06,610 --> 00:08:10,360
we just kind of shoved in really quickly

199
00:08:08,680 --> 00:08:13,449
last week without really thinking about

200
00:08:10,360 --> 00:08:16,509
it with this right here so this was a

201
00:08:13,449 --> 00:08:18,759
list of names that go with tags you know

202
00:08:16,509 --> 00:08:21,309
I'm saying and if you take a look in our

203
00:08:18,759 --> 00:08:24,399
HHA editor what you'll also notice is

204
00:08:21,309 --> 00:08:26,349
that it needs that as well so if we go

205
00:08:24,399 --> 00:08:28,019
look at where it dumps the tags out

206
00:08:26,348 --> 00:08:34,259
which

207
00:08:28,019 --> 00:08:40,588
is right here ribs not what I wanted

208
00:08:34,259 --> 00:08:43,379
print contents what you can see here is

209
00:08:40,589 --> 00:08:46,020
we have a print tag function and that's

210
00:08:43,379 --> 00:08:48,450
what's being called to say for any given

211
00:08:46,019 --> 00:08:50,250
tag in the system what it is and you'll

212
00:08:48,450 --> 00:08:53,910
notice we have a thing here called tag

213
00:08:50,250 --> 00:08:55,259
name from ID now if I love these two

214
00:08:53,909 --> 00:08:58,110
things together you can see that

215
00:08:55,259 --> 00:09:01,078
essentially what we've got here is we've

216
00:08:58,110 --> 00:09:04,860
got two of the same things happening

217
00:09:01,078 --> 00:09:06,599
this is a mapping of tag names where you

218
00:09:04,860 --> 00:09:08,759
can put in an ID and get out of tag name

219
00:09:06,600 --> 00:09:11,009
this is the opposite this is the thing

220
00:09:08,759 --> 00:09:14,100
where you can put in a name and get out

221
00:09:11,009 --> 00:09:17,220
a tag and you can see why these two

222
00:09:14,100 --> 00:09:19,980
things are essentially the same so they

223
00:09:17,220 --> 00:09:21,959
both maintain a mapping from IDs to

224
00:09:19,980 --> 00:09:24,329
names or back depending on how you want

225
00:09:21,958 --> 00:09:25,949
to look at them but the information

226
00:09:24,328 --> 00:09:27,659
that's contained in them is essentially

227
00:09:25,950 --> 00:09:30,420
the same they're just optimized for a

228
00:09:27,659 --> 00:09:33,708
different direction of lookup and what

229
00:09:30,419 --> 00:09:37,139
happens here is we end up in a situation

230
00:09:33,708 --> 00:09:43,159
where these two tables have to would

231
00:09:37,139 --> 00:09:45,659
always have to be synchronized right

232
00:09:43,159 --> 00:09:48,179
anytime we add something and this is

233
00:09:45,659 --> 00:09:50,189
exactly what happened we made a table

234
00:09:48,179 --> 00:09:52,379
here that has a bunch of things for tags

235
00:09:50,190 --> 00:09:53,850
that we never went back and added so

236
00:09:52,379 --> 00:09:56,370
when you print it out you don't get the

237
00:09:53,850 --> 00:09:58,470
right results so what would be nice

238
00:09:56,370 --> 00:10:01,200
well what would be really nice is if C

239
00:09:58,470 --> 00:10:02,278
and or C++ actually had introspection in

240
00:10:01,200 --> 00:10:03,839
it in which case neither of these two

241
00:10:02,278 --> 00:10:05,750
tables would even have to exist in the

242
00:10:03,839 --> 00:10:08,070
first place but that's a separate issue

243
00:10:05,750 --> 00:10:11,940
since we don't have a language that

244
00:10:08,070 --> 00:10:13,350
actually is any good what we can do is

245
00:10:11,940 --> 00:10:16,620
minimize the degree to which that

246
00:10:13,350 --> 00:10:19,620
language poops on us by say let's go

247
00:10:16,620 --> 00:10:22,169
ahead and make a unified place for this

248
00:10:19,620 --> 00:10:25,589
to occur so we at least know if we could

249
00:10:22,169 --> 00:10:27,719
read the name in and set a tag we can

250
00:10:25,589 --> 00:10:29,250
print the name in you so you're never

251
00:10:27,720 --> 00:10:31,470
gonna have a situation where you really

252
00:10:29,250 --> 00:10:34,289
can import a tag you can't then export

253
00:10:31,470 --> 00:10:36,750
right it's always gonna be the same so

254
00:10:34,289 --> 00:10:39,000
what I want to do is unify these two

255
00:10:36,750 --> 00:10:41,198
together and the way that I'm gonna do

256
00:10:39,000 --> 00:10:45,379
that is I'm just gonna go in and say

257
00:10:41,198 --> 00:10:48,769
inside the HHA file format stuff which

258
00:10:45,379 --> 00:10:51,589
is this right here we've got sort of the

259
00:10:48,769 --> 00:10:53,448
the definitions of everything right

260
00:10:51,589 --> 00:10:55,879
here's our basic categories and stuff

261
00:10:53,448 --> 00:10:57,649
like that right and we've got this asset

262
00:10:55,879 --> 00:10:59,688
tag ID here and we know this is the

263
00:10:57,649 --> 00:11:01,278
master list because this is what's

264
00:10:59,688 --> 00:11:02,659
actually being used for compilation and

265
00:11:01,278 --> 00:11:04,938
anything that's not in the master list

266
00:11:02,659 --> 00:11:07,399
here couldn't be referred to by code in

267
00:11:04,938 --> 00:11:09,198
any way right so we know this list is

268
00:11:07,399 --> 00:11:11,720
the correct list so what I'd like to do

269
00:11:09,198 --> 00:11:14,448
now is say well maybe there's a handmade

270
00:11:11,720 --> 00:11:17,810
file formats dot cpp we have not had

271
00:11:14,448 --> 00:11:22,149
that previously but we do have it now so

272
00:11:17,809 --> 00:11:22,149
I'm gonna go ahead and create one and

273
00:11:27,938 --> 00:11:37,789
maybe I put it in the wrong directory

274
00:11:30,049 --> 00:11:39,559
hold on a sec sorry I don't know what I

275
00:11:37,789 --> 00:11:42,769
just did there I wanted to make a new

276
00:11:39,559 --> 00:11:44,179
one in the code directory maybe I made

277
00:11:42,769 --> 00:11:44,870
it in the project directory and I know

278
00:11:44,179 --> 00:11:54,429
let's see

279
00:11:44,870 --> 00:11:58,068
so handmade file format made file

280
00:11:54,429 --> 00:11:59,479
formats that's CPP there we go sorry I

281
00:11:58,068 --> 00:12:01,128
think I made it in the wrong directory

282
00:11:59,480 --> 00:12:03,528
there so I didn't want to save it out to

283
00:12:01,129 --> 00:12:05,180
be in the wrong place anyway so if we

284
00:12:03,528 --> 00:12:07,009
have a handmade file formats the CPP

285
00:12:05,179 --> 00:12:09,769
what we can do is add some things in

286
00:12:07,009 --> 00:12:12,139
here that will be sort of Universal ways

287
00:12:09,769 --> 00:12:15,980
to look this stuff up and what we can do

288
00:12:12,139 --> 00:12:18,079
is go alright so inside the HSA editor

289
00:12:15,980 --> 00:12:22,250
we kind of already have like one of

290
00:12:18,078 --> 00:12:25,128
those so we've got this type from ID v-0

291
00:12:22,250 --> 00:12:27,078
table right so maybe that you know wants

292
00:12:25,129 --> 00:12:28,759
to be moved in there just because it's a

293
00:12:27,078 --> 00:12:32,088
named table and let's just put those in

294
00:12:28,759 --> 00:12:35,209
here right so here's our type form ID

295
00:12:32,089 --> 00:12:37,879
table and the other thing we can do is

296
00:12:35,208 --> 00:12:41,028
put those tag tables in there so inside

297
00:12:37,879 --> 00:12:44,269
the asset system right we've got a name

298
00:12:41,028 --> 00:12:46,578
tag here we can put those in as well so

299
00:12:44,269 --> 00:12:48,528
we can go ahead and and add this in

300
00:12:46,578 --> 00:12:50,448
there like so

301
00:12:48,528 --> 00:12:53,480
and we can also inside the HHA edit

302
00:12:50,448 --> 00:12:54,409
where we had those tags we can put these

303
00:12:53,480 --> 00:12:57,889
in

304
00:12:54,409 --> 00:13:00,019
- right and so now what we want to do is

305
00:12:57,889 --> 00:13:02,659
figure out a way to kind of unify these

306
00:13:00,019 --> 00:13:05,449
two things together so the first thing I

307
00:13:02,659 --> 00:13:08,600
want to do is convert I would like to

308
00:13:05,450 --> 00:13:10,790
use this kind of mapping not this one

309
00:13:08,600 --> 00:13:13,040
the reason for that is if you look at

310
00:13:10,789 --> 00:13:16,129
what might happen when we are doing

311
00:13:13,039 --> 00:13:22,459
stuff in this system what you can see is

312
00:13:16,129 --> 00:13:25,460
that we have essentially a we have a

313
00:13:22,460 --> 00:13:30,290
many to one kind of relationship going

314
00:13:25,460 --> 00:13:33,500
on with these names there's only one set

315
00:13:30,289 --> 00:13:35,569
of ID's so a tag underscore bones is

316
00:13:33,500 --> 00:13:38,299
always a tag underscore bones there

317
00:13:35,570 --> 00:13:41,720
isn't some other tag like tag underscore

318
00:13:38,299 --> 00:13:42,289
bone without the S that also means the

319
00:13:41,720 --> 00:13:44,990
same thing

320
00:13:42,289 --> 00:13:48,559
so inside our code we are rigid about

321
00:13:44,990 --> 00:13:50,810
always having one identifier that means

322
00:13:48,559 --> 00:13:52,750
what it means and there's never two

323
00:13:50,809 --> 00:13:54,889
identifiers that can mean the same thing

324
00:13:52,750 --> 00:13:57,679
that's important for programming that's

325
00:13:54,889 --> 00:14:00,049
what we do all the time but in art land

326
00:13:57,679 --> 00:14:01,069
that it doesn't always happen sometimes

327
00:14:00,049 --> 00:14:03,949
people because you know they don't have

328
00:14:01,070 --> 00:14:05,870
a compiler really a lot of times to tell

329
00:14:03,950 --> 00:14:07,700
them that they use the term that's wrong

330
00:14:05,870 --> 00:14:09,440
they're just naming something in

331
00:14:07,700 --> 00:14:10,580
photoshop and photoshop can't check it

332
00:14:09,440 --> 00:14:13,820
for validity right

333
00:14:10,580 --> 00:14:16,520
so sometimes we would rather be more

334
00:14:13,820 --> 00:14:18,470
permissive in the exported thing rather

335
00:14:16,519 --> 00:14:20,629
than say oh yeah like when you go to

336
00:14:18,470 --> 00:14:22,370
import it it gives you an error and go

337
00:14:20,629 --> 00:14:23,809
back to photoshop and change the name of

338
00:14:22,370 --> 00:14:26,120
the thing you know stuff like that

339
00:14:23,809 --> 00:14:27,559
so what we want to do is anymore premiss

340
00:14:26,120 --> 00:14:30,909
is there which means we tend to have

341
00:14:27,559 --> 00:14:36,069
more than one text you will name that

342
00:14:30,909 --> 00:14:38,870
can go with a particular tag right and

343
00:14:36,070 --> 00:14:42,080
so what we want to do is recognize that

344
00:14:38,870 --> 00:14:43,490
fact and set up a mapping that goes in

345
00:14:42,080 --> 00:14:46,070
that direction

346
00:14:43,490 --> 00:14:48,950
so we can define lots of strings that

347
00:14:46,070 --> 00:14:51,290
map to a small number of IDs rather than

348
00:14:48,950 --> 00:14:53,210
lots of IDs that map to a small number

349
00:14:51,289 --> 00:14:55,610
of strings because we're trying to model

350
00:14:53,210 --> 00:14:58,580
a specific one of those two things

351
00:14:55,610 --> 00:15:01,190
that's occurring and so that's what

352
00:14:58,580 --> 00:15:02,750
we're doing here right and so what I'd

353
00:15:01,190 --> 00:15:03,250
like to do and let me just I'm going to

354
00:15:02,750 --> 00:15:05,379
move

355
00:15:03,250 --> 00:15:07,029
down below it because it's it's not this

356
00:15:05,379 --> 00:15:10,480
is some old stuff that probably won't

357
00:15:07,029 --> 00:15:14,009
come into play very often what I'd like

358
00:15:10,480 --> 00:15:17,080
to do here is just say okay when we're

359
00:15:14,009 --> 00:15:20,019
when we're compiling this stuff what I'd

360
00:15:17,080 --> 00:15:21,940
like to do here is just say let's stop

361
00:15:20,019 --> 00:15:24,100
using this tag name from ID and we'll

362
00:15:21,940 --> 00:15:26,710
start using this now I don't know if we

363
00:15:24,100 --> 00:15:29,259
actually want to have this to this type

364
00:15:26,710 --> 00:15:30,960
from ID v-0 actually in there we might

365
00:15:29,259 --> 00:15:33,759
we might not I don't know we'll see

366
00:15:30,960 --> 00:15:35,889
because this can go away eventually but

367
00:15:33,759 --> 00:15:37,539
you know we'll see this part here is

368
00:15:35,889 --> 00:15:39,549
here to stay so this is the part that we

369
00:15:37,539 --> 00:15:42,219
want to focus on and what I'd like to do

370
00:15:39,549 --> 00:15:46,209
is just go ahead and convert these

371
00:15:42,220 --> 00:15:50,590
things that we had already into sort of

372
00:15:46,210 --> 00:15:54,009
more the same format that we had below

373
00:15:50,590 --> 00:15:56,200
right so all of this stuff while it's

374
00:15:54,009 --> 00:15:58,929
still in the tag system we'll just go

375
00:15:56,200 --> 00:16:01,120
ahead and and put in there so if I look

376
00:15:58,929 --> 00:16:03,669
at what these things were you know in

377
00:16:01,120 --> 00:16:05,950
terms of tags they kind of map directly

378
00:16:03,669 --> 00:16:11,949
over right so we know we've got you know

379
00:16:05,950 --> 00:16:15,040
smoothness flatness it's facing

380
00:16:11,950 --> 00:16:22,570
Direction Unicode code point you know

381
00:16:15,039 --> 00:16:29,769
font type shot index layer index primacy

382
00:16:22,570 --> 00:16:33,580
and basic category and so now we know

383
00:16:29,769 --> 00:16:36,000
that we've got a mapping between those

384
00:16:33,580 --> 00:16:36,000
two things

385
00:16:40,850 --> 00:16:44,870
done in exactly the same way that we

386
00:16:42,830 --> 00:16:48,129
were doing the other tags so it's

387
00:16:44,870 --> 00:16:50,269
uniform right don't really want that

388
00:16:48,129 --> 00:16:54,769
indented that way let's go ahead and get

389
00:16:50,269 --> 00:16:56,990
that out of here so now we've got a

390
00:16:54,769 --> 00:16:59,659
table that's uniform and now we just

391
00:16:56,990 --> 00:17:01,850
need to support the types of calls that

392
00:16:59,659 --> 00:17:04,759
we were supporting before meaning we

393
00:17:01,850 --> 00:17:07,578
need to be able to use this table in

394
00:17:04,759 --> 00:17:10,279
some constructive way so if I look at

395
00:17:07,578 --> 00:17:12,948
the HHA editor what we needed is tag

396
00:17:10,279 --> 00:17:16,399
name from ID so we want to turn that

397
00:17:12,949 --> 00:17:19,009
into you know a function right and that

398
00:17:16,400 --> 00:17:23,180
function needs to return exactly what it

399
00:17:19,009 --> 00:17:29,240
says it needs to return a tag name in

400
00:17:23,180 --> 00:17:31,250
this case and we use strings here so in

401
00:17:29,240 --> 00:17:33,440
this case I again probably want to

402
00:17:31,250 --> 00:17:36,799
although we can't actually have this

403
00:17:33,440 --> 00:17:39,920
return a care star as well you can use

404
00:17:36,799 --> 00:17:41,539
either of those two things so because in

405
00:17:39,920 --> 00:17:42,050
this case we actually define it both

406
00:17:41,539 --> 00:17:44,329
ways

407
00:17:42,049 --> 00:17:47,329
so it's kind of it's fine either one you

408
00:17:44,329 --> 00:17:49,279
want to do so I don't remember what the

409
00:17:47,329 --> 00:17:51,379
full name of what is this asset tag ID

410
00:17:49,279 --> 00:17:52,839
yeah I could just call it tag ID we're

411
00:17:51,380 --> 00:17:55,220
not gonna have it it's got two tags but

412
00:17:52,839 --> 00:17:57,799
so there's the ID so what we want to do

413
00:17:55,220 --> 00:18:01,610
is find what it is right we want to find

414
00:17:57,799 --> 00:18:04,159
which one of these goes with the ID and

415
00:18:01,609 --> 00:18:06,409
then we want to return that string so

416
00:18:04,160 --> 00:18:09,980
we've got a result here and that result

417
00:18:06,410 --> 00:18:11,960
is gonna come back so we just need to

418
00:18:09,980 --> 00:18:15,289
find out what it is then we have the

419
00:18:11,960 --> 00:18:17,480
opposite version in hand made asset and

420
00:18:15,289 --> 00:18:20,000
what that wants to do is check all the

421
00:18:17,480 --> 00:18:21,589
names so that's something that needs to

422
00:18:20,000 --> 00:18:25,119
work the opposite way right so that's

423
00:18:21,589 --> 00:18:31,750
gonna go through our list and and go now

424
00:18:25,119 --> 00:18:36,019
remember I guess we could say from name

425
00:18:31,750 --> 00:18:37,759
remember we don't actually need this to

426
00:18:36,019 --> 00:18:39,680
be particularly fast neither these two

427
00:18:37,759 --> 00:18:42,349
things is running in a like critical

428
00:18:39,680 --> 00:18:43,039
scenario so we can just leave them

429
00:18:42,349 --> 00:18:45,049
pretty cheesy

430
00:18:43,039 --> 00:18:47,809
you know like if we needed them to be

431
00:18:45,049 --> 00:18:50,599
fast we certainly could make them much

432
00:18:47,809 --> 00:18:53,089
faster right and the way that we would

433
00:18:50,599 --> 00:18:54,009
do that is we would actually use some

434
00:18:53,089 --> 00:18:57,159
sort of indexing

435
00:18:54,009 --> 00:19:00,009
here to jump to only asset that would

436
00:18:57,160 --> 00:19:02,230
make sense right but I don't think we

437
00:19:00,009 --> 00:19:04,480
really have to care linear check of

438
00:19:02,230 --> 00:19:06,700
these even if there's a thousand of them

439
00:19:04,480 --> 00:19:08,110
probably won't hurt us for most of the

440
00:19:06,700 --> 00:19:10,840
cases we actually care about because

441
00:19:08,109 --> 00:19:13,689
it's never runs at run time it's only an

442
00:19:10,839 --> 00:19:15,009
import time thing so until we actually

443
00:19:13,690 --> 00:19:16,240
see it show up on the profile we're

444
00:19:15,009 --> 00:19:17,710
probably fine because this is not

445
00:19:16,240 --> 00:19:25,870
something we're shipping to an end user

446
00:19:17,710 --> 00:19:27,400
right so let's see here so I think what

447
00:19:25,869 --> 00:19:29,229
we want to do is say all right we've got

448
00:19:27,400 --> 00:19:30,580
an unknown string that will return in

449
00:19:29,230 --> 00:19:33,220
the case we don't know what's going on

450
00:19:30,579 --> 00:19:37,649
otherwise we'll run through this list of

451
00:19:33,220 --> 00:19:41,200
name tags here and when we actually find

452
00:19:37,650 --> 00:19:43,390
one that's equal then we return it just

453
00:19:41,200 --> 00:19:44,819
as we would before so we just need to

454
00:19:43,390 --> 00:19:47,740
flip the ways to doing like this ones

455
00:19:44,819 --> 00:19:49,960
comparing strings and then returning the

456
00:19:47,740 --> 00:19:51,970
ID what we want to do here is compare

457
00:19:49,960 --> 00:19:54,309
the IDs and then return the string right

458
00:19:51,970 --> 00:19:56,440
it's the exact opposite way of checking

459
00:19:54,309 --> 00:19:59,200
but the code is identical so we're just

460
00:19:56,440 --> 00:20:01,720
gonna do that and then return the string

461
00:19:59,200 --> 00:20:04,360
like so so when we do that now what we

462
00:20:01,720 --> 00:20:07,029
have to do is actually have this code be

463
00:20:04,359 --> 00:20:09,250
present so the first way we do that

464
00:20:07,029 --> 00:20:12,250
obviously it's just in handmade asset

465
00:20:09,250 --> 00:20:16,029
when it wants to make this call we need

466
00:20:12,250 --> 00:20:18,220
to actually include that file so if you

467
00:20:16,029 --> 00:20:19,899
look in handmade CPP we're not actually

468
00:20:18,220 --> 00:20:21,490
building it that's a new file that we

469
00:20:19,900 --> 00:20:25,210
added we're not actually building with

470
00:20:21,490 --> 00:20:31,359
it so I need to include in my CPP's I

471
00:20:25,210 --> 00:20:34,090
need to include the file formats dot CPP

472
00:20:31,359 --> 00:20:35,919
right and you can see that in the H file

473
00:20:34,089 --> 00:20:40,990
we've got that up here right it's right

474
00:20:35,920 --> 00:20:43,029
after random and and stream and stuff so

475
00:20:40,990 --> 00:20:44,500
what we want to do is is put that in

476
00:20:43,029 --> 00:20:47,710
roughly the same area which I guess is

477
00:20:44,500 --> 00:20:50,410
there and should be good

478
00:20:47,710 --> 00:20:53,620
so looking at the bugs we have in hand

479
00:20:50,410 --> 00:20:55,480
made hero here we I said string it's not

480
00:20:53,619 --> 00:20:58,539
string I don't know why I type that I

481
00:20:55,480 --> 00:21:00,009
believe it's name in the actual field so

482
00:20:58,539 --> 00:21:01,869
that I think is our only problem so

483
00:21:00,009 --> 00:21:03,250
that's now building with the table so

484
00:21:01,869 --> 00:21:04,059
the only thing we have to do now is make

485
00:21:03,250 --> 00:21:07,210
the

486
00:21:04,059 --> 00:21:09,429
this code HHA editor also billed at the

487
00:21:07,210 --> 00:21:11,920
table if you look here it already

488
00:21:09,430 --> 00:21:13,900
includes some of this stuff so I think

489
00:21:11,920 --> 00:21:16,120
all we have to do to make this work is

490
00:21:13,900 --> 00:21:19,120
just say okay let's include that

491
00:21:16,119 --> 00:21:20,829
handmade file format dot cpp in here and

492
00:21:19,119 --> 00:21:22,989
we should be good to go now I could put

493
00:21:20,829 --> 00:21:24,639
that in here because the CPP that's the

494
00:21:22,990 --> 00:21:27,130
only CPP it actually it's building with

495
00:21:24,640 --> 00:21:31,270
hopefully that's line we'll find out in

496
00:21:27,130 --> 00:21:33,130
a second alright so in here I think we

497
00:21:31,269 --> 00:21:36,369
want to eliminate this and just assume

498
00:21:33,130 --> 00:21:39,160
that we can do this right and then what

499
00:21:36,369 --> 00:21:44,879
we'll do is we'll just take the data out

500
00:21:39,160 --> 00:21:47,350
of the string here and inside the the

501
00:21:44,880 --> 00:21:49,810
inside the actual file formats routine

502
00:21:47,349 --> 00:21:51,849
what we what we want to do is make sure

503
00:21:49,809 --> 00:21:53,589
that that check that looks to see if

504
00:21:51,849 --> 00:21:55,299
it's out of balance that works remember

505
00:21:53,589 --> 00:21:56,470
the reason we had to do that check for

506
00:21:55,299 --> 00:21:58,180
out of bounds cuz we were looking up

507
00:21:56,470 --> 00:22:00,339
directly into an array that was indexed

508
00:21:58,180 --> 00:22:01,990
off of the ID so if we had had it out of

509
00:22:00,339 --> 00:22:04,839
bounds ID we would just fall it and that

510
00:22:01,990 --> 00:22:06,609
would be bad but here we don't have that

511
00:22:04,839 --> 00:22:09,339
problem because we're iterating over a

512
00:22:06,609 --> 00:22:11,559
list and looking for matches so if you

513
00:22:09,339 --> 00:22:13,089
pass us an ID we don't recognize no big

514
00:22:11,559 --> 00:22:14,859
deal it's just gonna return the default

515
00:22:13,089 --> 00:22:17,740
so we really don't need to check anymore

516
00:22:14,859 --> 00:22:20,019
and this is fine right so we should be

517
00:22:17,740 --> 00:22:23,140
good to go now let's just take a look if

518
00:22:20,019 --> 00:22:27,129
we've got on the other cannot okay so we

519
00:22:23,140 --> 00:22:28,750
do have to convert it to the the type so

520
00:22:27,130 --> 00:22:31,360
we need to change us to it that's a tag

521
00:22:28,750 --> 00:22:33,690
ID it's just actually a politeness cast

522
00:22:31,359 --> 00:22:37,599
it's not actually converting the value

523
00:22:33,690 --> 00:22:41,529
and here it wants a care star and that's

524
00:22:37,599 --> 00:22:44,740
fine because it's just a string so we

525
00:22:41,529 --> 00:22:46,779
can now use the same in both cases and

526
00:22:44,740 --> 00:22:50,529
the reason that that's good is because

527
00:22:46,779 --> 00:22:53,139
again now for really no cost to us every

528
00:22:50,529 --> 00:22:55,210
time we add something to the parser it

529
00:22:53,140 --> 00:22:56,980
will also add it to the debug dump and

530
00:22:55,210 --> 00:22:59,170
that's just a good way to keep those two

531
00:22:56,980 --> 00:23:01,059
things in sync so now when we hit dump

532
00:22:59,170 --> 00:23:03,519
we can actually see what all of these

533
00:23:01,059 --> 00:23:07,359
things are right so we can see for

534
00:23:03,519 --> 00:23:08,859
example that we've got a dark energy or

535
00:23:07,359 --> 00:23:10,750
a bones tag on here

536
00:23:08,859 --> 00:23:12,909
and we can see that that makes sense so

537
00:23:10,750 --> 00:23:14,589
hand dark bones has a dark energy tag

538
00:23:12,910 --> 00:23:17,590
and a bones tag on it right was what we

539
00:23:14,589 --> 00:23:19,720
want now if I remember

540
00:23:17,589 --> 00:23:22,808
correctly the reason that we thought we

541
00:23:19,720 --> 00:23:24,700
had a bug is because we didn't see the

542
00:23:22,808 --> 00:23:26,859
matching happening the way that we

543
00:23:24,700 --> 00:23:27,970
thought it should and so the first thing

544
00:23:26,859 --> 00:23:30,038
we could start to debug now that we've

545
00:23:27,970 --> 00:23:33,370
added that is let's go ahead and turn

546
00:23:30,038 --> 00:23:34,690
back on what we thought was the problem

547
00:23:33,369 --> 00:23:36,369
there which is remember I don't know if

548
00:23:34,690 --> 00:23:38,650
remember this we turned off these files

549
00:23:36,369 --> 00:23:41,259
by naming them something that our system

550
00:23:38,650 --> 00:23:42,580
wouldn't recognize I'll now name them

551
00:23:41,259 --> 00:23:44,679
back to something our system will

552
00:23:42,579 --> 00:23:47,829
recognize and all of these things should

553
00:23:44,679 --> 00:23:51,399
now get pulled into the system so when I

554
00:23:47,829 --> 00:23:55,928
rerun the game now it should try to

555
00:23:51,398 --> 00:23:57,609
import those files right and it looks

556
00:23:55,929 --> 00:23:59,528
like it did import those files that was

557
00:23:57,609 --> 00:24:01,048
pretty quick but I guess there's not

558
00:23:59,528 --> 00:24:04,028
that many files to import or whatever

559
00:24:01,048 --> 00:24:08,679
and what you can see is it's picking at

560
00:24:04,028 --> 00:24:11,380
the moment right some ground that's a

561
00:24:08,679 --> 00:24:13,210
that's a dirt like side texture there

562
00:24:11,380 --> 00:24:15,278
and again we have the weird blue problem

563
00:24:13,210 --> 00:24:17,200
right so you know again weird problems

564
00:24:15,278 --> 00:24:18,220
and so on we will be we'll have to work

565
00:24:17,200 --> 00:24:20,528
through those and find out what they are

566
00:24:18,220 --> 00:24:21,880
those are separate from the picking

567
00:24:20,528 --> 00:24:26,409
problem which is what I want to look at

568
00:24:21,880 --> 00:24:30,039
now so if I go ahead and just dump this

569
00:24:26,409 --> 00:24:35,350
thing to some kind of analysis file like

570
00:24:30,038 --> 00:24:38,109
local dot txt what I can then do is look

571
00:24:35,349 --> 00:24:42,959
at that local dot txt file is my did I

572
00:24:38,109 --> 00:24:42,959
not put I thought I put tab you in here

573
00:24:47,980 --> 00:24:50,759
don't

574
00:25:01,190 --> 00:25:16,070
no hmm I thought we put tabview in here

575
00:25:12,410 --> 00:25:18,940
but I mean I know we put tab you in here

576
00:25:16,069 --> 00:25:18,939
right

577
00:25:23,140 --> 00:25:28,280
what's gonna what's going on here

578
00:25:25,940 --> 00:25:34,730
did I just run directly out of the bonus

579
00:25:28,279 --> 00:25:36,139
pack I guess maybe I did well it's in

580
00:25:34,730 --> 00:25:38,569
the bonus pack one way or the other so

581
00:25:36,140 --> 00:25:40,610
that's fine anyway let's go ahead and

582
00:25:38,569 --> 00:25:43,939
continue what I was going to do which is

583
00:25:40,609 --> 00:25:46,369
look at the contents of that dump so

584
00:25:43,940 --> 00:25:48,259
here's the local hhj file here are the

585
00:25:46,369 --> 00:25:52,250
assets that are supposedly in the file

586
00:25:48,259 --> 00:25:56,000
here are the blocks so we've got four of

587
00:25:52,250 --> 00:25:59,150
them right and if we open them up we can

588
00:25:56,000 --> 00:26:01,900
see which ones they are and that they're

589
00:25:59,150 --> 00:26:05,420
all doing whatever they're doing right

590
00:26:01,900 --> 00:26:07,910
and they each have some tags so here's

591
00:26:05,420 --> 00:26:11,090
what the tags are so right off the bat

592
00:26:07,910 --> 00:26:14,180
we can see that it's busted because we

593
00:26:11,089 --> 00:26:20,119
have these basic categories which are

594
00:26:14,180 --> 00:26:22,820
set properly probably right but there's

595
00:26:20,119 --> 00:26:25,219
no other tags so if you're looking here

596
00:26:22,819 --> 00:26:28,359
you can see that we are getting actual

597
00:26:25,220 --> 00:26:31,700
tags right like there's the bones tag

598
00:26:28,359 --> 00:26:34,549
and we don't have any of the other tags

599
00:26:31,700 --> 00:26:37,850
so that tells me right off the bat that

600
00:26:34,549 --> 00:26:40,849
the problem here is actually is in the

601
00:26:37,849 --> 00:26:45,859
import when we go to import we're not

602
00:26:40,849 --> 00:26:48,849
getting those tags so why not here's our

603
00:26:45,859 --> 00:26:52,339
begin tags call here's our end tags call

604
00:26:48,849 --> 00:26:54,949
and we pass the file name in here just

605
00:26:52,339 --> 00:26:56,659
like we do here but for whatever reason

606
00:26:54,950 --> 00:26:59,509
we're not actually getting any parsing

607
00:26:56,660 --> 00:27:02,390
so why not right would be my first

608
00:26:59,509 --> 00:27:05,569
question like if we go in and look at

609
00:27:02,390 --> 00:27:09,850
the art I guess now that I think about

610
00:27:05,569 --> 00:27:12,950
it it's actually kind of obvious we

611
00:27:09,849 --> 00:27:14,750
renamed these files cover forest hand

612
00:27:12,950 --> 00:27:17,360
bones I'm sorry hand bones

613
00:27:14,750 --> 00:27:21,500
and dark bones hand glove fingers we

614
00:27:17,359 --> 00:27:23,299
never renamed these so I don't know why

615
00:27:21,500 --> 00:27:29,690
we would think that there was any way to

616
00:27:23,299 --> 00:27:32,450
pick anything that must have just been a

617
00:27:29,690 --> 00:27:34,309
case of me we went for a couple we went

618
00:27:32,450 --> 00:27:37,069
long and maybe I was a little delirious

619
00:27:34,309 --> 00:27:41,960
like why would we think that would work

620
00:27:37,069 --> 00:27:43,849
I don't know why I don't even know why I

621
00:27:41,960 --> 00:27:45,769
thought something should happen there so

622
00:27:43,849 --> 00:27:47,839
it looks like nothing happened wrong

623
00:27:45,769 --> 00:27:49,910
that was just us being dumb and not

624
00:27:47,839 --> 00:27:54,470
actually even putting any input into the

625
00:27:49,910 --> 00:27:57,590
system so I don't have an explanation

626
00:27:54,470 --> 00:27:59,029
for that so let's take a look at what

627
00:27:57,589 --> 00:28:01,339
we're actually talking about here we've

628
00:27:59,029 --> 00:28:04,460
got bones dark energy glove and fingers

629
00:28:01,339 --> 00:28:06,619
those were our labels for the other

630
00:28:04,460 --> 00:28:10,340
things in the system but now we need

631
00:28:06,619 --> 00:28:13,639
labels for blocks what I would like to

632
00:28:10,339 --> 00:28:17,209
say is this is you know it's wood you

633
00:28:13,640 --> 00:28:18,350
know it's interior or you know maybe

634
00:28:17,210 --> 00:28:21,259
it's mint I don't know what you want to

635
00:28:18,349 --> 00:28:22,969
call it like like it's a structure it's

636
00:28:21,259 --> 00:28:40,279
wood and drywall

637
00:28:22,970 --> 00:28:47,720
I guess so it's wood drywall so it looks

638
00:28:40,279 --> 00:28:52,910
like it's interior or man-made it's like

639
00:28:47,720 --> 00:28:56,660
a like a wall you know we should also

640
00:28:52,910 --> 00:29:00,019
probably have floor so some of these

641
00:28:56,660 --> 00:29:02,750
tags to describe this thing right let's

642
00:29:00,019 --> 00:29:05,450
try those and then again we'll just use

643
00:29:02,750 --> 00:29:07,700
the system that we just made we want to

644
00:29:05,450 --> 00:29:10,819
basically tack on a bunch of new words

645
00:29:07,700 --> 00:29:12,860
here here they are so all we need to do

646
00:29:10,819 --> 00:29:15,500
is just actually write these in here so

647
00:29:12,859 --> 00:29:17,389
we've got like a constant Z with the

648
00:29:15,500 --> 00:29:21,079
name we want and then the tag that we

649
00:29:17,390 --> 00:29:23,120
want like so so in here we could say

650
00:29:21,079 --> 00:29:28,449
well here's wood here's drywall here's

651
00:29:23,119 --> 00:29:32,000
manmade here's wall here's floor

652
00:29:28,450 --> 00:29:39,190
delete all those and then we can say

653
00:29:32,000 --> 00:29:41,569
like wood drywall man-made wall floor

654
00:29:39,190 --> 00:29:43,130
and I don't know if drywall is the right

655
00:29:41,569 --> 00:29:46,189
term here I don't know what that stuff

656
00:29:43,130 --> 00:29:48,260
would really be called you know probably

657
00:29:46,190 --> 00:29:50,210
wasn't called drywall back in the day

658
00:29:48,259 --> 00:29:52,519
either when you know in mythical times

659
00:29:50,210 --> 00:29:54,319
and so on when you think about when this

660
00:29:52,519 --> 00:29:55,940
game might take place in a mythical

661
00:29:54,319 --> 00:30:00,349
kingdom I don't think they were like oh

662
00:29:55,940 --> 00:30:02,240
and what ho good sir please to come

663
00:30:00,349 --> 00:30:04,398
across your acquaintances and would you

664
00:30:02,240 --> 00:30:06,409
like to do some dry walling like I don't

665
00:30:04,398 --> 00:30:08,509
know that Shakespeare had drywall I mean

666
00:30:06,409 --> 00:30:10,669
maybe he did but they probably had a

667
00:30:08,509 --> 00:30:18,200
different name for that so I don't know

668
00:30:10,669 --> 00:30:19,730
not exactly as sort of mythical world is

669
00:30:18,200 --> 00:30:22,490
you might want but you know no one has

670
00:30:19,730 --> 00:30:24,500
to see that so it's fine

671
00:30:22,490 --> 00:30:26,778
and that's that will give us what we

672
00:30:24,500 --> 00:30:29,869
need so if we then go in here we've got

673
00:30:26,778 --> 00:30:31,640
sort of these block orphanages and

674
00:30:29,869 --> 00:30:33,408
there's a stone one too so maybe I'll

675
00:30:31,640 --> 00:30:39,830
throw that in there too you know we'll

676
00:30:33,409 --> 00:30:41,899
get a stone in there like so on and

677
00:30:39,829 --> 00:30:47,269
that'll be a good set of stuff so that's

678
00:30:41,898 --> 00:30:51,139
like a stone floor and and probably a

679
00:30:47,269 --> 00:30:53,980
man-made one right there very regular so

680
00:30:51,140 --> 00:30:53,980
I think that's fine

681
00:30:59,170 --> 00:31:02,890
I can't think of anything else I really

682
00:31:01,359 --> 00:31:05,109
need to do there so let's just go ahead

683
00:31:02,890 --> 00:31:08,320
and rename some of these to something

684
00:31:05,109 --> 00:31:11,678
that actually will work for us there so

685
00:31:08,319 --> 00:31:13,000
we've got this block forest I guess you

686
00:31:11,679 --> 00:31:15,250
know what and I think about it while

687
00:31:13,000 --> 00:31:21,308
we're at it let's add that one too so

688
00:31:15,250 --> 00:31:28,690
this is great like there's a grass kind

689
00:31:21,308 --> 00:31:31,269
here and and maybe so I don't know if

690
00:31:28,690 --> 00:31:35,759
floor so I don't know if we want

691
00:31:31,269 --> 00:31:39,250
differentiate between floor and ground I

692
00:31:35,759 --> 00:31:42,490
don't think we do I think something is

693
00:31:39,250 --> 00:31:44,500
probably just man-made or not right and

694
00:31:42,490 --> 00:31:46,480
then it's like floor or not so if

695
00:31:44,500 --> 00:31:48,160
something is a man-made floor versus a

696
00:31:46,480 --> 00:31:51,450
non man-made floor is probably

697
00:31:48,160 --> 00:31:51,450
sufficient would be my guess

698
00:31:55,710 --> 00:31:59,919
so I don't know cuz there's two ways we

699
00:31:58,450 --> 00:32:02,169
can look at that right and that's that

700
00:31:59,919 --> 00:32:04,150
like man-made is a tag and natural is a

701
00:32:02,169 --> 00:32:05,890
tag and floor and ground or both tags

702
00:32:04,150 --> 00:32:07,929
too and you could just you just throw

703
00:32:05,890 --> 00:32:09,220
all these tags in there and and let some

704
00:32:07,929 --> 00:32:11,230
sort it out or you try to be minimal

705
00:32:09,220 --> 00:32:13,690
about it I don't know which one we want

706
00:32:11,230 --> 00:32:15,160
it might be that it's better to not try

707
00:32:13,690 --> 00:32:17,340
to be minimal about it you know what I

708
00:32:15,160 --> 00:32:17,340
mean

709
00:32:19,319 --> 00:32:23,798
and another way to yet another way to

710
00:32:22,298 --> 00:32:26,379
say that would be maybe we want this

711
00:32:23,798 --> 00:32:29,048
thing to actually have more of a like

712
00:32:26,380 --> 00:32:31,510
settings sort of a structure so just to

713
00:32:29,048 --> 00:32:39,250
give an example you know suppose you

714
00:32:31,509 --> 00:32:41,500
were to say tag ID from name and it

715
00:32:39,250 --> 00:32:44,380
returned you a value as well so it could

716
00:32:41,500 --> 00:32:47,380
be that like you know man-made is like

717
00:32:44,380 --> 00:32:50,740
man-made one and natural is man-made

718
00:32:47,380 --> 00:32:52,840
zero equals zero like you have the tag

719
00:32:50,740 --> 00:32:53,980
and its value is something you know what

720
00:32:52,839 --> 00:32:55,569
I mean

721
00:32:53,980 --> 00:32:58,630
and so then when you say tag name from

722
00:32:55,569 --> 00:33:01,869
ID you would actually pass the value in

723
00:32:58,630 --> 00:33:05,110
and it would tell you what the meaning

724
00:33:01,869 --> 00:33:07,959
of that thing was in a in another way

725
00:33:05,109 --> 00:33:09,969
right I don't know I feel about that

726
00:33:07,960 --> 00:33:11,710
when I'm looking at these right now I

727
00:33:09,970 --> 00:33:12,850
don't yeah I don't know we'll have to

728
00:33:11,710 --> 00:33:14,350
see as we go again

729
00:33:12,849 --> 00:33:15,669
I'm okay with updating the system one

730
00:33:14,349 --> 00:33:17,799
more time we have all the source assets

731
00:33:15,670 --> 00:33:19,330
so rien porting everything is not a big

732
00:33:17,799 --> 00:33:21,549
deal so we can play with it a little bit

733
00:33:19,329 --> 00:33:23,439
and be a little bit more flexible if we

734
00:33:21,549 --> 00:33:26,139
want to right um

735
00:33:23,440 --> 00:33:28,150
so looking at this here we've got a

736
00:33:26,140 --> 00:33:30,250
couple more we want to add there we've

737
00:33:28,150 --> 00:33:33,280
got wood stone drywall man-made wall

738
00:33:30,250 --> 00:33:35,140
floor we want to add that grass in here

739
00:33:33,279 --> 00:33:38,379
and then I think we've got the stuff

740
00:33:35,140 --> 00:33:41,140
that we need for naming this is not

741
00:33:38,380 --> 00:33:48,820
really have to be forest it can just be

742
00:33:41,140 --> 00:33:55,180
kind of like block or grass right this

743
00:33:48,819 --> 00:34:01,889
is going to be block wall man-made wood

744
00:33:55,180 --> 00:34:06,310
drywall this is going to be block war

745
00:34:01,890 --> 00:34:12,519
man-made stone and this is going to be

746
00:34:06,309 --> 00:34:16,000
block or man-made wood and these are

747
00:34:12,519 --> 00:34:17,769
like you know doing their thing and now

748
00:34:16,000 --> 00:34:20,260
when we input them they will have some

749
00:34:17,769 --> 00:34:24,489
tags that can actually be used to like

750
00:34:20,260 --> 00:34:26,950
pick something right so I think that's

751
00:34:24,489 --> 00:34:29,649
all we actually had as a bug and I would

752
00:34:26,949 --> 00:34:32,799
point out that we actually can if we

753
00:34:29,650 --> 00:34:34,450
want to like when we're doing this we

754
00:34:32,800 --> 00:34:37,120
don't even have to be pristine about it

755
00:34:34,449 --> 00:34:38,949
it's wasteful but if we just rerun all

756
00:34:37,119 --> 00:34:42,489
that's gonna happen is we're gonna get

757
00:34:38,949 --> 00:34:45,789
some more blocks right and so if we then

758
00:34:42,489 --> 00:34:47,619
look and read dump that file to a text

759
00:34:45,789 --> 00:34:49,800
file again and I reload it here what

760
00:34:47,619 --> 00:34:53,769
we'll see is we actually should have

761
00:34:49,800 --> 00:34:55,990
just stacked up more assets right so we

762
00:34:53,769 --> 00:34:58,630
don't actually have to go redo we can

763
00:34:55,989 --> 00:35:00,069
leave bogus assets in here it doesn't

764
00:34:58,630 --> 00:35:02,410
cost us anything but a little bit of

765
00:35:00,070 --> 00:35:04,300
extra space so during development we

766
00:35:02,409 --> 00:35:06,250
don't have to care that these things are

767
00:35:04,300 --> 00:35:07,510
in their wrong and the fact that they

768
00:35:06,250 --> 00:35:09,519
don't have any tags means they're never

769
00:35:07,510 --> 00:35:11,410
gonna match anything anyway so it really

770
00:35:09,519 --> 00:35:13,809
doesn't matter if we want to take a

771
00:35:11,409 --> 00:35:15,609
harder line on that later we can but

772
00:35:13,809 --> 00:35:21,549
right now it's our purview to just leave

773
00:35:15,610 --> 00:35:23,200
them right so what we see here is oh you

774
00:35:21,550 --> 00:35:26,850
know what I didn't recompile the file so

775
00:35:23,199 --> 00:35:26,849
that actually it's not good

776
00:35:27,010 --> 00:35:35,660
right I don't think I actually built

777
00:35:29,690 --> 00:35:38,389
this yeah so now it should be looking

778
00:35:35,659 --> 00:35:41,949
for those tags right and now when I

779
00:35:38,389 --> 00:35:41,949
actually run this in theory anyway

780
00:35:41,989 --> 00:35:46,099
well so now I actually do have to do it

781
00:35:44,449 --> 00:35:47,989
because we haven't touched those files

782
00:35:46,099 --> 00:35:50,059
right we modified the code and haven't

783
00:35:47,989 --> 00:35:52,489
touched those files for parsing we could

784
00:35:50,059 --> 00:35:54,079
rename them or just do a touch on them

785
00:35:52,489 --> 00:35:56,929
to change their dates and then they

786
00:35:54,079 --> 00:36:01,069
would get re-employed potentially but

787
00:35:56,929 --> 00:36:02,419
yeah I think I'll just rebuild the HHA

788
00:36:01,070 --> 00:36:05,000
because that's easy enough for me to do

789
00:36:02,420 --> 00:36:09,860
um so if I go in here and I just delete

790
00:36:05,000 --> 00:36:12,320
local HHA and then I do a HHA edit I can

791
00:36:09,860 --> 00:36:13,880
do a create local uhha and now we have a

792
00:36:12,320 --> 00:36:16,789
new one it will reinforce all of our

793
00:36:13,880 --> 00:36:20,960
stuff cleanly and build a fresh pack

794
00:36:16,789 --> 00:36:22,940
right now in theory that imports so

795
00:36:20,960 --> 00:36:25,940
quickly I guess the optimized build is

796
00:36:22,940 --> 00:36:27,710
just hey man computers are really fast

797
00:36:25,940 --> 00:36:34,880
nowadays so even though we haven't done

798
00:36:27,710 --> 00:36:38,500
any work to actually make oops to make

799
00:36:34,880 --> 00:36:42,320
that fast it just is so there you go

800
00:36:38,500 --> 00:36:44,809
oops and so looking at this now we can

801
00:36:42,320 --> 00:36:46,160
see there there are tags we can inspect

802
00:36:44,809 --> 00:36:47,539
it and make sure the tags are actually

803
00:36:46,159 --> 00:36:51,309
correct yeah because that would be nice

804
00:36:47,539 --> 00:36:55,699
here so we can see that like here's our

805
00:36:51,309 --> 00:36:57,529
block for the the wall and it is a wall

806
00:36:55,699 --> 00:36:59,469
it's man-made is wood drywall that's

807
00:36:57,530 --> 00:37:02,330
good right so all that stuff's in there

808
00:36:59,469 --> 00:37:05,179
and so now when I run in theory I should

809
00:37:02,329 --> 00:37:07,219
be able to like actually control some of

810
00:37:05,179 --> 00:37:09,409
this stuff right now

811
00:37:07,219 --> 00:37:10,730
we have some issues though there's one

812
00:37:09,409 --> 00:37:12,500
more issue that I'd like to tackle

813
00:37:10,730 --> 00:37:15,139
before we really trying to that because

814
00:37:12,500 --> 00:37:16,519
we're gonna end up with problems so

815
00:37:15,139 --> 00:37:19,099
let's go we'll write a little bit of

816
00:37:16,519 --> 00:37:20,869
code to kind of decorate like make the

817
00:37:19,099 --> 00:37:22,610
world actually pick the pieces that we

818
00:37:20,869 --> 00:37:23,809
think it should be picking but then we

819
00:37:22,610 --> 00:37:26,630
have to go and figure out what's wrong

820
00:37:23,809 --> 00:37:27,889
with our color swapping enter and then

821
00:37:26,630 --> 00:37:30,079
we have to decide what to do about the

822
00:37:27,889 --> 00:37:32,089
upside down this right so we've got some

823
00:37:30,079 --> 00:37:33,739
more issues like we're not really done

824
00:37:32,090 --> 00:37:35,690
with the importing yet we've solved the

825
00:37:33,739 --> 00:37:39,259
tag issue which was that we never

826
00:37:35,690 --> 00:37:40,068
actually named the files oh well like we

827
00:37:39,260 --> 00:37:41,989
were we were

828
00:37:40,068 --> 00:37:43,429
crazy last week we didn't we weren't

829
00:37:41,989 --> 00:37:44,958
thinking so we thought there was a bug

830
00:37:43,429 --> 00:37:47,958
that really wasn't a bug we just never

831
00:37:44,958 --> 00:37:50,028
actually named anything and that's fine

832
00:37:47,958 --> 00:37:52,190
it's good bug to have as a non bug so

833
00:37:50,028 --> 00:37:54,708
anyway let's go take a look at what we

834
00:37:52,190 --> 00:37:57,619
would need to do for the entity tagging

835
00:37:54,708 --> 00:38:00,440
stuff so what I need to do here if

836
00:37:57,619 --> 00:38:01,880
you'll if you notice we haven't here

837
00:38:00,440 --> 00:38:04,940
there's sort of this notion that an

838
00:38:01,880 --> 00:38:06,650
entity has you know all this stuff that

839
00:38:04,940 --> 00:38:08,298
we haven't really talked about or done

840
00:38:06,650 --> 00:38:09,858
anything with we just throw things in

841
00:38:08,298 --> 00:38:11,989
here and that's exactly what I want it I

842
00:38:09,858 --> 00:38:14,420
don't want to work on the entities until

843
00:38:11,989 --> 00:38:17,900
we're pretty much like halfway through

844
00:38:14,420 --> 00:38:19,548
the game right like when we were

845
00:38:17,900 --> 00:38:21,739
actually kind of starting on gameplay

846
00:38:19,548 --> 00:38:24,768
stuff now in a sense like we're making

847
00:38:21,739 --> 00:38:26,478
out the world so we will start paying

848
00:38:24,768 --> 00:38:29,978
more attention to energy structure but

849
00:38:26,478 --> 00:38:32,568
again I don't really want to do anything

850
00:38:29,978 --> 00:38:35,598
to clean this up this is supposed to be

851
00:38:32,568 --> 00:38:38,929
messy but we do need to add a piece of

852
00:38:35,599 --> 00:38:42,440
information to it which is what tags

853
00:38:38,929 --> 00:38:45,139
this entity has so we need to have a tag

854
00:38:42,440 --> 00:38:47,119
system in here that allows us to tag

855
00:38:45,139 --> 00:38:50,088
these things on here because right now

856
00:38:47,119 --> 00:38:53,809
all the only thing we have at the moment

857
00:38:50,088 --> 00:38:56,568
is we just have the asset basic category

858
00:38:53,809 --> 00:38:58,579
right which is not what we want to do so

859
00:38:56,568 --> 00:39:01,400
what we want to do is have some more

860
00:38:58,579 --> 00:39:05,989
tags in here we want to say okay we've

861
00:39:01,400 --> 00:39:08,420
got asset tag ID and we've got some tags

862
00:39:05,989 --> 00:39:10,338
in here you know and the entity has some

863
00:39:08,420 --> 00:39:15,079
tags you know I don't know what they are

864
00:39:10,338 --> 00:39:17,449
but the entity has them right and so I

865
00:39:15,079 --> 00:39:20,769
want to put that in there I also want to

866
00:39:17,449 --> 00:39:23,509
look to see does smoothness use anywhere

867
00:39:20,768 --> 00:39:25,368
smooth this is not used anywhere at the

868
00:39:23,509 --> 00:39:27,708
moment so you know what I'm gonna do I'm

869
00:39:25,369 --> 00:39:32,979
just gonna go ahead and go rogue and say

870
00:39:27,708 --> 00:39:40,278
that tag zero is actually just none

871
00:39:32,978 --> 00:39:42,228
right so because hey we can so I'm just

872
00:39:40,278 --> 00:39:44,088
gonna say the tag zero is none it gets

873
00:39:42,228 --> 00:39:45,768
skipped so smoothness which was some

874
00:39:44,088 --> 00:39:47,659
random thing we put in there is now no

875
00:39:45,768 --> 00:39:51,228
longer in there sorry anyone who was

876
00:39:47,659 --> 00:39:53,159
tagged with smoothness will make another

877
00:39:51,228 --> 00:39:56,489
smoothness later if we have to

878
00:39:53,159 --> 00:39:58,018
but these tags will go in here right and

879
00:39:56,489 --> 00:40:01,679
then what we'll do is we'll say all

880
00:39:58,018 --> 00:40:07,409
right when we loop through these tags we

881
00:40:01,679 --> 00:40:09,899
will unpack them into whatever the asset

882
00:40:07,409 --> 00:40:10,348
matching vector is and we'll go from

883
00:40:09,900 --> 00:40:18,778
there

884
00:40:10,349 --> 00:40:21,990
right so what I want to do is way we're

885
00:40:18,778 --> 00:40:26,670
currently matching is not particularly

886
00:40:21,989 --> 00:40:28,949
useful so there are some issues there

887
00:40:26,670 --> 00:40:35,369
here's well okay let me let me talk

888
00:40:28,949 --> 00:40:37,259
about a few more things so there is one

889
00:40:35,369 --> 00:40:39,660
reason not to do what I just said

890
00:40:37,259 --> 00:40:46,769
and this is probably why we decided not

891
00:40:39,659 --> 00:40:49,409
to make there be a should I put this

892
00:40:46,768 --> 00:40:51,959
there is one reason why you might not

893
00:40:49,409 --> 00:40:53,730
want to make 0b none and that reason and

894
00:40:51,960 --> 00:40:54,960
is probably the reason why we didn't do

895
00:40:53,730 --> 00:40:57,028
it in the first place which is that if

896
00:40:54,960 --> 00:40:59,670
you want to expand these things out to a

897
00:40:57,028 --> 00:41:01,588
vector to match then you want each of

898
00:40:59,670 --> 00:41:03,990
these to correspond to a position in the

899
00:41:01,588 --> 00:41:05,730
vector right so you have like 0 1 2 3 4

900
00:41:03,989 --> 00:41:09,419
or 5 right hey you don't want none

901
00:41:05,730 --> 00:41:10,889
taking up a slot based on the way we're

902
00:41:09,420 --> 00:41:13,259
talking about tags

903
00:41:10,889 --> 00:41:15,509
I have changed my mental model of what

904
00:41:13,259 --> 00:41:17,639
these things would be how a matcher

905
00:41:15,509 --> 00:41:19,650
would work because if you look at it

906
00:41:17,639 --> 00:41:21,538
we're gonna have a ton of tags there's

907
00:41:19,650 --> 00:41:23,190
gonna be like a hundred tags so we're

908
00:41:21,539 --> 00:41:24,480
never gonna want to build a vector of

909
00:41:23,190 --> 00:41:28,048
them we're gonna want it to remain

910
00:41:24,480 --> 00:41:30,329
sparse right and so what we want to do

911
00:41:28,048 --> 00:41:33,139
here is just do something where we like

912
00:41:30,329 --> 00:41:36,630
sort the tags or something right and

913
00:41:33,139 --> 00:41:40,920
then compare them to each other that's

914
00:41:36,630 --> 00:41:46,259
all we're gonna want to do I think so if

915
00:41:40,920 --> 00:41:48,329
we sort all of our tags and like buy in

916
00:41:46,259 --> 00:41:50,519
ascending order or something then we

917
00:41:48,329 --> 00:41:52,528
write a matcher that works that way that

918
00:41:50,518 --> 00:41:54,239
would just solve our problem and so that

919
00:41:52,528 --> 00:41:59,130
seems like more what we would want to do

920
00:41:54,239 --> 00:42:00,929
to me right and so I don't care about I

921
00:41:59,130 --> 00:42:02,130
want none to be zero now but so that way

922
00:42:00,929 --> 00:42:04,699
we just have an easy way of saying that

923
00:42:02,130 --> 00:42:07,789
there is no tag there

924
00:42:04,699 --> 00:42:09,348
okay so I want to put in a tag array

925
00:42:07,789 --> 00:42:12,920
like this and then what I want to do is

926
00:42:09,349 --> 00:42:14,088
match against that tag array and I want

927
00:42:12,920 --> 00:42:15,200
to get rid of the way we're doing the

928
00:42:14,088 --> 00:42:16,578
matching so we want to kind of update

929
00:42:15,199 --> 00:42:18,649
the matching a little bit

930
00:42:16,579 --> 00:42:20,660
we'll leave the matching the way it is

931
00:42:18,650 --> 00:42:23,480
now and we'll update it to something

932
00:42:20,659 --> 00:42:26,029
else another day and so I'll put it to

933
00:42:23,480 --> 00:42:28,338
do in the code in the entity system for

934
00:42:26,030 --> 00:42:33,640
making it work that way but at the

935
00:42:28,338 --> 00:42:33,639
moment I'm just gonna go ahead and oops

936
00:42:42,519 --> 00:42:48,139
at the moment I'm just gonna go ahead

937
00:42:44,869 --> 00:42:50,510
and make it so that the entity uses the

938
00:42:48,139 --> 00:42:52,489
same matching as it used to use because

939
00:42:50,510 --> 00:42:54,619
that's more of an optimization thing and

940
00:42:52,489 --> 00:42:56,000
I want to put I don't really want to go

941
00:42:54,619 --> 00:42:57,559
and deal with that right now

942
00:42:56,000 --> 00:42:59,989
we can deal with it a little bit later

943
00:42:57,559 --> 00:43:04,339
it's not gonna it's just gonna be a

944
00:42:59,989 --> 00:43:05,719
performance cost really that we

945
00:43:04,338 --> 00:43:07,159
definitely don't want to pay as it gets

946
00:43:05,719 --> 00:43:08,269
higher but it's not going to prevent us

947
00:43:07,159 --> 00:43:10,868
from doing the work that we're trying to

948
00:43:08,269 --> 00:43:13,338
do today so I'm gonna punt it to them

949
00:43:10,869 --> 00:43:14,720
alright so inside update and render

950
00:43:13,338 --> 00:43:16,400
entities when we come through the

951
00:43:14,719 --> 00:43:18,919
entities here what you can see is that

952
00:43:16,400 --> 00:43:20,480
we eventually have to do some stuff

953
00:43:18,920 --> 00:43:22,130
where we do some matching and so here's

954
00:43:20,480 --> 00:43:24,139
our way that we were doing matching and

955
00:43:22,130 --> 00:43:25,640
that's all fine but what we want to do

956
00:43:24,139 --> 00:43:27,980
now is make sure that our tags are

957
00:43:25,639 --> 00:43:29,808
actually expanded in here we've set the

958
00:43:27,980 --> 00:43:31,670
facing direction in here and that's fine

959
00:43:29,809 --> 00:43:33,140
but now we also want to say we want to

960
00:43:31,670 --> 00:43:35,088
match on some of these other things so

961
00:43:33,139 --> 00:43:37,639
let's go ahead and loop over the things

962
00:43:35,088 --> 00:43:40,250
in our entity tags that are actually

963
00:43:37,639 --> 00:43:41,868
what we want to match on so I'm gonna go

964
00:43:40,250 --> 00:43:44,088
ahead and say like here's a match index

965
00:43:41,869 --> 00:43:48,740
match index is less than array count you

966
00:43:44,088 --> 00:43:50,539
know entity tags plus plus match index

967
00:43:48,739 --> 00:43:52,219
and then for each of these things I want

968
00:43:50,539 --> 00:43:56,058
to say that the match vector of the

969
00:43:52,219 --> 00:43:58,009
entity tags match index which I could

970
00:43:56,059 --> 00:44:01,640
pull out right so I could say like okay

971
00:43:58,010 --> 00:44:03,500
asset tag ID ID so let's say the match

972
00:44:01,639 --> 00:44:06,858
vector for that is going to be whatever

973
00:44:03,500 --> 00:44:08,690
the asset has so I guess now I think

974
00:44:06,858 --> 00:44:13,909
about the site I also need a tag value

975
00:44:08,690 --> 00:44:16,190
right so in here I need a tag value and

976
00:44:13,909 --> 00:44:17,750
these two probably should be paired

977
00:44:16,190 --> 00:44:28,880
together

978
00:44:17,750 --> 00:44:31,219
right we will probably want to do that

979
00:44:28,880 --> 00:44:34,190
but again I want to clean this up a

980
00:44:31,219 --> 00:44:42,829
little bit later and so here I'll also

981
00:44:34,190 --> 00:44:44,329
put this something like that so what I

982
00:44:42,829 --> 00:44:47,598
want to do now is say okay we got a

983
00:44:44,329 --> 00:44:48,739
match vector for this tag we want to set

984
00:44:47,599 --> 00:44:53,990
it to whatever the end of these tag

985
00:44:48,739 --> 00:44:56,149
value is for that thing right and then

986
00:44:53,989 --> 00:44:58,519
we also have the weight vector and for

987
00:44:56,150 --> 00:45:01,430
now again we'll just say okay the weight

988
00:44:58,519 --> 00:45:03,440
vector for the hoops the weight vector

989
00:45:01,429 --> 00:45:05,419
for that thing is gonna be one so it's

990
00:45:03,440 --> 00:45:08,059
it's you know it's just uniformly

991
00:45:05,420 --> 00:45:09,380
weighted all the way now but we'll you

992
00:45:08,059 --> 00:45:11,929
know we might want to change some of

993
00:45:09,380 --> 00:45:14,150
that later so anyway this what this does

994
00:45:11,929 --> 00:45:16,399
is this unpacks the entities tags that

995
00:45:14,150 --> 00:45:17,869
it's got into a match vector for use in

996
00:45:16,400 --> 00:45:19,550
the system later on we'll just leave

997
00:45:17,869 --> 00:45:20,990
them packed and match directly on the

998
00:45:19,550 --> 00:45:22,510
packed version but that's all there is

999
00:45:20,989 --> 00:45:27,739
to that

1000
00:45:22,510 --> 00:45:29,810
so what I want to do now is actually add

1001
00:45:27,739 --> 00:45:31,759
those tags to the entities somehow

1002
00:45:29,809 --> 00:45:33,588
because right now entities don't have

1003
00:45:31,760 --> 00:45:37,580
any tags that's just not something that

1004
00:45:33,588 --> 00:45:39,949
they actually have sir this is an e in

1005
00:45:37,579 --> 00:45:42,409
those cases and so what we want to do is

1006
00:45:39,949 --> 00:45:44,179
is give our entity some tags to match on

1007
00:45:42,409 --> 00:45:46,670
so that we can see if the matching is

1008
00:45:44,179 --> 00:45:48,079
working correctly and so if you look

1009
00:45:46,670 --> 00:45:50,180
here right like none of these entities

1010
00:45:48,079 --> 00:45:51,380
have any tags so none of them it doesn't

1011
00:45:50,179 --> 00:45:53,929
know that's a wall it doesn't know this

1012
00:45:51,380 --> 00:45:55,519
is a floor blah blah blah right so what

1013
00:45:53,929 --> 00:45:58,879
we want to do now is when we actually

1014
00:45:55,519 --> 00:46:00,588
create the rooms in here we create

1015
00:45:58,880 --> 00:46:02,000
entities right you can see us placing

1016
00:46:00,588 --> 00:46:04,940
these entities here are the entities

1017
00:46:02,000 --> 00:46:08,210
what we want to do is set those tags on

1018
00:46:04,940 --> 00:46:09,800
the entities and work through those I

1019
00:46:08,210 --> 00:46:11,929
don't know exactly how we want to do

1020
00:46:09,800 --> 00:46:13,849
that so we'll kind of rough it in right

1021
00:46:11,929 --> 00:46:17,269
now and then we'll we'll add some more

1022
00:46:13,849 --> 00:46:19,490
stuff later I probably want to maybe

1023
00:46:17,269 --> 00:46:21,829
just looking at it I probably want to be

1024
00:46:19,489 --> 00:46:23,299
able to do something like this so I want

1025
00:46:21,829 --> 00:46:25,400
to be able to say like let's add a tag

1026
00:46:23,300 --> 00:46:28,250
and let's say you know is this thing a

1027
00:46:25,400 --> 00:46:30,200
floor is this thing whatever right and

1028
00:46:28,250 --> 00:46:32,059
so in here we must have known

1029
00:46:30,199 --> 00:46:33,799
right because we were placing the things

1030
00:46:32,059 --> 00:46:35,630
so when we come through here we can say

1031
00:46:33,800 --> 00:46:38,210
aleko k is it on a boundary is on a

1032
00:46:35,630 --> 00:46:39,710
connection whatever and so when we look

1033
00:46:38,210 --> 00:46:41,720
at these things we should be able to say

1034
00:46:39,710 --> 00:46:42,860
is it a floor or not and you can see

1035
00:46:41,719 --> 00:46:45,079
we're kind of already doing that if it's

1036
00:46:42,860 --> 00:46:47,210
on a boundary and not on a connection

1037
00:46:45,079 --> 00:46:50,900
then it's a wall so it should add a

1038
00:46:47,210 --> 00:46:53,539
particular type of tag and then we need

1039
00:46:50,900 --> 00:46:55,369
to add one of these traversals for it

1040
00:46:53,539 --> 00:46:59,929
right so I can put that in here right

1041
00:46:55,369 --> 00:47:01,609
like so but I can add a tag one way or

1042
00:46:59,929 --> 00:47:03,940
the other right so this is going to be a

1043
00:47:01,610 --> 00:47:03,940
wall

1044
00:47:05,300 --> 00:47:13,039
and this is going to be a floor and what

1045
00:47:08,809 --> 00:47:14,779
we can do here is have the floors be we

1046
00:47:13,039 --> 00:47:16,070
can change what kinds they are at some

1047
00:47:14,780 --> 00:47:18,980
point but what I'm gonna do now just say

1048
00:47:16,070 --> 00:47:21,260
like wall or floor in in any case

1049
00:47:18,980 --> 00:47:24,829
everything in here is man-made at least

1050
00:47:21,260 --> 00:47:26,720
for the moment so we're always putting a

1051
00:47:24,829 --> 00:47:27,769
man-made one in here and again all of

1052
00:47:26,719 --> 00:47:29,059
these things have to become more

1053
00:47:27,769 --> 00:47:30,619
complicated because this room Jen

1054
00:47:29,059 --> 00:47:33,170
generates our outdoor rooms right now

1055
00:47:30,619 --> 00:47:35,089
too so we obviously don't want that but

1056
00:47:33,170 --> 00:47:36,349
you know well we'll cross that bridge

1057
00:47:35,090 --> 00:47:37,730
when we come to right now we just want

1058
00:47:36,349 --> 00:47:40,670
to make sure that our tagging system can

1059
00:47:37,730 --> 00:47:43,429
work so that's all we really need here I

1060
00:47:40,670 --> 00:47:45,440
think is to say these couple of things

1061
00:47:43,429 --> 00:47:47,230
we should probably say what kind they

1062
00:47:45,440 --> 00:47:49,909
are here maybe this is a wood floor

1063
00:47:47,230 --> 00:47:51,170
generally speaking we could also say

1064
00:47:49,909 --> 00:47:52,489
that in general this is just wood

1065
00:47:51,170 --> 00:47:55,159
construction so we could put that down

1066
00:47:52,489 --> 00:47:57,589
here and so that just sets these tags up

1067
00:47:55,159 --> 00:47:59,210
to it to work what that means is that in

1068
00:47:57,590 --> 00:48:02,120
here we need a thing where we actually

1069
00:47:59,210 --> 00:48:03,440
say what the tag count is like so and if

1070
00:48:02,119 --> 00:48:05,420
that's the case then in here this should

1071
00:48:03,440 --> 00:48:07,849
actually look at a tag count like that

1072
00:48:05,420 --> 00:48:09,710
right and what we want to do then is

1073
00:48:07,849 --> 00:48:12,799
just have a thing that when we call tag

1074
00:48:09,710 --> 00:48:15,260
count when we call add tag on an entity

1075
00:48:12,800 --> 00:48:19,910
that that actually does something so for

1076
00:48:15,260 --> 00:48:22,910
example in here we can actually say add

1077
00:48:19,909 --> 00:48:25,519
tag now I think we decided that doesn't

1078
00:48:22,909 --> 00:48:26,960
really go in entity I guess it goes more

1079
00:48:25,519 --> 00:48:28,940
in world construction because that's

1080
00:48:26,960 --> 00:48:30,860
where we add things like pieces and tags

1081
00:48:28,940 --> 00:48:32,450
I don't know if that makes a lot of

1082
00:48:30,860 --> 00:48:34,430
sense because it seems to me like this

1083
00:48:32,449 --> 00:48:37,669
stuff will have to migrate out

1084
00:48:34,429 --> 00:48:39,619
eventually because it has to be

1085
00:48:37,670 --> 00:48:41,659
something like we want to add IDs and

1086
00:48:39,619 --> 00:48:42,589
pieces at runtime potentially so I feel

1087
00:48:41,659 --> 00:48:43,500
like this stuff is probably

1088
00:48:42,590 --> 00:48:45,360
inappropriate

1089
00:48:43,500 --> 00:48:46,980
placed in a room Jen so I think we'll

1090
00:48:45,360 --> 00:48:50,880
have to move it out to something where

1091
00:48:46,980 --> 00:48:52,170
it's sensible later but that's okay it's

1092
00:48:50,880 --> 00:48:54,210
not really a big deal at the moment

1093
00:48:52,170 --> 00:48:56,130
either way so here's the tag value that

1094
00:48:54,210 --> 00:48:57,570
we're gonna add and there we go

1095
00:48:56,130 --> 00:48:59,280
so the first thing we need to do is just

1096
00:48:57,570 --> 00:49:02,700
make sure we still have room so we have

1097
00:48:59,280 --> 00:49:04,170
to make sure that for the moment anyway

1098
00:49:02,699 --> 00:49:06,329
because the way that we're doing this is

1099
00:49:04,170 --> 00:49:07,530
again kind of little ad hoc since the

1100
00:49:06,329 --> 00:49:09,210
entity structure is something that will

1101
00:49:07,530 --> 00:49:12,330
be dealt with much later on like when

1102
00:49:09,210 --> 00:49:15,599
the game is playable and partially done

1103
00:49:12,329 --> 00:49:17,009
right so we want to make sure though for

1104
00:49:15,599 --> 00:49:19,529
the time being that the fixed array that

1105
00:49:17,010 --> 00:49:21,690
we're adding it to has enough room and

1106
00:49:19,530 --> 00:49:25,170
then when it does we can just say all

1107
00:49:21,690 --> 00:49:27,119
right the tag index is whatever the next

1108
00:49:25,170 --> 00:49:31,680
tag is and then we just set the two

1109
00:49:27,119 --> 00:49:37,460
values so this entity tags is gonna be

1110
00:49:31,679 --> 00:49:37,460
this ID and the value is gonna be this

1111
00:49:38,030 --> 00:49:42,570
and so then we've got a way to stick the

1112
00:49:40,980 --> 00:49:44,070
tags on the entities and so now we

1113
00:49:42,570 --> 00:49:47,160
should be able to debug a code path

1114
00:49:44,070 --> 00:49:49,620
which essentially selects various things

1115
00:49:47,159 --> 00:49:51,420
in our game from the options that are

1116
00:49:49,619 --> 00:49:54,929
presented so what we want to do now is

1117
00:49:51,420 --> 00:49:56,940
make it so that we can see when these

1118
00:49:54,929 --> 00:49:58,199
entities go through that system are they

1119
00:49:56,940 --> 00:49:59,909
getting picked properly if they're not

1120
00:49:58,199 --> 00:50:01,139
gonna pay probably why not now looking

1121
00:49:59,909 --> 00:50:01,980
at it it doesn't look like they're

1122
00:50:01,139 --> 00:50:03,329
getting picked properly because

1123
00:50:01,980 --> 00:50:05,219
everything still looks like it's picking

1124
00:50:03,329 --> 00:50:07,739
just a ground tile right it doesn't look

1125
00:50:05,219 --> 00:50:09,899
like it's picking anything on there and

1126
00:50:07,739 --> 00:50:12,299
so I want to go in and see why are we

1127
00:50:09,900 --> 00:50:14,970
not picking now I'm gonna go ahead and

1128
00:50:12,300 --> 00:50:19,400
downshift a debug mode here so I'm gonna

1129
00:50:14,969 --> 00:50:23,399
go ahead and say look give me just the

1130
00:50:19,400 --> 00:50:25,230
the debug version of the code and when

1131
00:50:23,400 --> 00:50:27,269
we go through here I want to see why

1132
00:50:25,230 --> 00:50:28,980
we're not getting the matches that I

1133
00:50:27,269 --> 00:50:32,219
think we should be getting so I'm gonna

1134
00:50:28,980 --> 00:50:34,079
stop in here and I'm gonna look at an

1135
00:50:32,219 --> 00:50:36,869
entity that has some tags I want to see

1136
00:50:34,079 --> 00:50:37,799
what those tags are and and just so we

1137
00:50:36,869 --> 00:50:39,029
can see like what we're actually

1138
00:50:37,800 --> 00:50:40,860
matching and then I want to look at the

1139
00:50:39,030 --> 00:50:42,990
match and see is it matching properly or

1140
00:50:40,860 --> 00:50:45,539
is it doing something stupid so here's

1141
00:50:42,989 --> 00:50:47,729
an ID it says it's a floor tag right I

1142
00:50:45,539 --> 00:50:49,759
don't want to really match that I don't

1143
00:50:47,730 --> 00:50:54,800
wanna well yeah well let's do it anyway

1144
00:50:49,760 --> 00:50:54,800
so what's the value here that we added

1145
00:50:57,400 --> 00:51:13,778
match vector weight vector so let's see

1146
00:51:10,789 --> 00:51:17,809
here we got a match vector and 18 is set

1147
00:51:13,778 --> 00:51:25,130
right we got a match vector an 18 is set

1148
00:51:17,809 --> 00:51:27,140
into the notch as well and 18 is our is

1149
00:51:25,130 --> 00:51:30,019
our floor value so that that looks

1150
00:51:27,139 --> 00:51:31,578
correct so far we come in here we're

1151
00:51:30,018 --> 00:51:32,928
gonna set another one what's the we're

1152
00:51:31,579 --> 00:51:36,769
gonna set we're going to set the wood

1153
00:51:32,929 --> 00:51:41,389
tag there it is and then we're gonna set

1154
00:51:36,768 --> 00:51:44,288
some other thing man-made all right so

1155
00:51:41,389 --> 00:51:47,168
we're gonna set man-made wood floor

1156
00:51:44,289 --> 00:51:49,939
that's exactly what we should have set

1157
00:51:47,168 --> 00:51:51,889
so we now need to know why you know why

1158
00:51:49,938 --> 00:51:58,699
aren't we finding that so when we go to

1159
00:51:51,889 --> 00:52:00,798
get best match what's the deal right why

1160
00:51:58,699 --> 00:52:02,479
aren't we finding anything so let's look

1161
00:52:00,798 --> 00:52:08,150
at the tags that are on this actual

1162
00:52:02,478 --> 00:52:12,318
asset here we find a tight tag ID of

1163
00:52:08,150 --> 00:52:15,168
eight I don't know if usual student can

1164
00:52:12,318 --> 00:52:17,418
do this it can so that's the basic

1165
00:52:15,168 --> 00:52:20,658
category we don't need to match that one

1166
00:52:17,418 --> 00:52:25,778
so I'm assuming it will just get rid of

1167
00:52:20,659 --> 00:52:32,449
it yeah which is good then we've got

1168
00:52:25,778 --> 00:52:36,739
another tag in here 18 let's do it that

1169
00:52:32,449 --> 00:52:39,619
way so we this is a floor tag so that

1170
00:52:36,739 --> 00:52:41,449
should give us a weighted and it doesn't

1171
00:52:39,619 --> 00:52:43,489
alright so what did we screw up here

1172
00:52:41,449 --> 00:52:45,469
because this is a floor tag we should be

1173
00:52:43,489 --> 00:52:47,208
matching on floor oh it's a difference

1174
00:52:45,469 --> 00:52:51,918
so it should give us a difference of

1175
00:52:47,208 --> 00:52:54,848
zero yeah that's that's a that's what we

1176
00:52:51,918 --> 00:52:54,848
wanted right yeah

1177
00:52:57,449 --> 00:53:06,639
okay I think I see the problem here so

1178
00:53:04,059 --> 00:53:07,900
the problem is that the way yeah again

1179
00:53:06,639 --> 00:53:09,969
the way we were doing this matching is

1180
00:53:07,900 --> 00:53:11,800
just kind of dumb right so the way we're

1181
00:53:09,969 --> 00:53:15,909
doing this matching is we only match on

1182
00:53:11,800 --> 00:53:19,330
tags that the asset actually has which

1183
00:53:15,909 --> 00:53:21,009
does not work because basically if an

1184
00:53:19,329 --> 00:53:22,329
asset doesn't have it we don't count it

1185
00:53:21,010 --> 00:53:23,619
as a penalty that it doesn't have

1186
00:53:22,329 --> 00:53:26,559
something that we were trying to match

1187
00:53:23,619 --> 00:53:29,289
on and it should because something that

1188
00:53:26,559 --> 00:53:34,119
doesn't have it should actually count

1189
00:53:29,289 --> 00:53:37,860
against it right so I feel like that's

1190
00:53:34,119 --> 00:53:37,860
just kind of busted

1191
00:54:05,760 --> 00:54:14,200
so I may have to update the tag matching

1192
00:54:08,860 --> 00:54:16,539
early because I'm not sure how else I

1193
00:54:14,199 --> 00:54:19,689
will would go about fixing this problem

1194
00:54:16,539 --> 00:54:22,150
I could sort of hack a thing in here

1195
00:54:19,690 --> 00:54:26,619
which would look for things in the match

1196
00:54:22,150 --> 00:54:28,720
vector that weren't there or I could

1197
00:54:26,619 --> 00:54:30,940
switch it to a positive match

1198
00:54:28,719 --> 00:54:36,129
I guess I'll switch it to a positive

1199
00:54:30,940 --> 00:54:47,050
match for now rather than rewrite it

1200
00:54:36,130 --> 00:54:49,570
I guess I'll to switch it to a positive

1201
00:54:47,050 --> 00:54:55,690
match for now so what we're looking at

1202
00:54:49,570 --> 00:54:58,570
here is the best difference so we look

1203
00:54:55,690 --> 00:55:00,519
for things that are the lowest I'm going

1204
00:54:58,570 --> 00:55:05,530
to change it to looking at looking at

1205
00:55:00,519 --> 00:55:09,219
things for the highest so what I'm going

1206
00:55:05,530 --> 00:55:14,320
to do instead is say that right and

1207
00:55:09,219 --> 00:55:15,879
we'll start out at 0 and when we loop

1208
00:55:14,320 --> 00:55:20,370
through these assets here what we do is

1209
00:55:15,880 --> 00:55:23,380
we say all right what is the total match

1210
00:55:20,369 --> 00:55:26,079
we go through and we say for this one

1211
00:55:23,380 --> 00:55:27,940
we'll say for the match vector I can

1212
00:55:26,079 --> 00:55:36,599
convert these to our new type naming

1213
00:55:27,940 --> 00:55:42,099
here we look to see what the absolute

1214
00:55:36,599 --> 00:55:46,869
value is of the difference between these

1215
00:55:42,099 --> 00:55:50,619
two and what I guess I want to do is I

1216
00:55:46,869 --> 00:55:54,420
want to invert that so we say here's the

1217
00:55:50,619 --> 00:55:54,420
absolute value here's the

1218
00:55:59,739 --> 00:56:08,499
not sure what interesting so we have a

1219
00:56:05,509 --> 00:56:08,498
tag range

1220
00:56:12,900 --> 00:56:16,068
that's very interesting

1221
00:56:19,010 --> 00:56:24,200
so we actually have a way of mapping the

1222
00:56:21,829 --> 00:56:26,299
range in here that's even more

1223
00:56:24,199 --> 00:56:30,559
interesting all right well I wasn't

1224
00:56:26,300 --> 00:56:35,440
expecting that I don't know if we really

1225
00:56:30,559 --> 00:56:38,119
need that but we probably did that too

1226
00:56:35,440 --> 00:56:41,179
we probably did that so that we could

1227
00:56:38,119 --> 00:56:43,100
have directions work properly

1228
00:56:41,179 --> 00:56:44,269
like the facing direction it's a little

1229
00:56:43,099 --> 00:56:47,719
more advanced than I thought we were

1230
00:56:44,269 --> 00:56:50,179
being in here that's okay so when we

1231
00:56:47,719 --> 00:56:54,469
actually take the difference here what

1232
00:56:50,179 --> 00:56:56,210
I'd like to do is just say look let's go

1233
00:56:54,469 --> 00:56:59,559
ahead and say that whatever the

1234
00:56:56,210 --> 00:57:02,960
difference between these two things was

1235
00:56:59,559 --> 00:57:05,960
we want to give you points for every one

1236
00:57:02,960 --> 00:57:07,730
that you match right so we want to say

1237
00:57:05,960 --> 00:57:10,429
that you effectively do something like

1238
00:57:07,730 --> 00:57:14,929
this you know what I mean

1239
00:57:10,429 --> 00:57:18,559
and when we then weight those things we

1240
00:57:14,929 --> 00:57:21,829
add together the total match value and

1241
00:57:18,559 --> 00:57:25,549
then we look at whichever one is look is

1242
00:57:21,829 --> 00:57:27,529
highest right and so it's just a way of

1243
00:57:25,550 --> 00:57:30,320
saying that if you have more matches

1244
00:57:27,530 --> 00:57:32,119
you'll get more points rather than just

1245
00:57:30,320 --> 00:57:34,880
saying we're trying to minimize the

1246
00:57:32,119 --> 00:57:35,869
number of times you don't match and I

1247
00:57:34,880 --> 00:57:37,670
think that will solve the problem

1248
00:57:35,869 --> 00:57:38,720
temporarily but like I said we kind of

1249
00:57:37,670 --> 00:57:43,519
want to look at this in a slightly

1250
00:57:38,719 --> 00:57:49,118
different way a little later on

1251
00:57:43,519 --> 00:57:49,119
okay so best match sorry about that and

1252
00:57:52,239 --> 00:57:56,389
now let's see if we get a little bit

1253
00:57:54,320 --> 00:57:57,890
better matching in the short term here

1254
00:57:56,389 --> 00:58:00,129
just so we can finish kind of what we

1255
00:57:57,889 --> 00:58:00,129
were doing

1256
00:58:01,199 --> 00:58:06,118
so that's exactly what we wanted to see

1257
00:58:03,539 --> 00:58:09,960
so that's much better obviously and so

1258
00:58:06,119 --> 00:58:11,608
now are we I think we at least know our

1259
00:58:09,960 --> 00:58:23,639
tags are working in we now just have a

1260
00:58:11,608 --> 00:58:25,500
problem where we've sort of got a we we

1261
00:58:23,639 --> 00:58:27,298
know we've got roughly the right thing

1262
00:58:25,500 --> 00:58:29,250
happening but we have some obvious

1263
00:58:27,298 --> 00:58:31,108
import errors the upside down s and the

1264
00:58:29,250 --> 00:58:32,849
blue tinge we now want to look at

1265
00:58:31,108 --> 00:58:34,650
because we're in the pipeline for

1266
00:58:32,849 --> 00:58:37,859
importing and selecting assets looks

1267
00:58:34,650 --> 00:58:39,750
like it's working properly to me now and

1268
00:58:37,858 --> 00:58:43,259
so we want to kind of switch to looking

1269
00:58:39,750 --> 00:58:45,268
at that and I'm not sure how we want to

1270
00:58:43,260 --> 00:58:46,920
address that so the first thing I want

1271
00:58:45,268 --> 00:58:48,808
to do is look at our render test because

1272
00:58:46,920 --> 00:58:51,180
our render test does not have this

1273
00:58:48,809 --> 00:58:53,339
problem I want to make sure that our

1274
00:58:51,179 --> 00:58:54,598
render test is actually accounting for

1275
00:58:53,338 --> 00:58:56,630
it properly so I just want to look at

1276
00:58:54,599 --> 00:59:01,160
what's going on here

1277
00:58:56,630 --> 00:59:01,160
so if we look at what's happening in in

1278
00:59:02,028 --> 00:59:10,199
in our loader here when we load the

1279
00:59:05,429 --> 00:59:13,469
bitmap just looking at how we read it in

1280
00:59:10,199 --> 00:59:16,078
the bitmap might already be bottom-up so

1281
00:59:13,469 --> 00:59:23,899
that might be solving this problem

1282
00:59:16,079 --> 00:59:23,900
automatically for us here actually

1283
00:59:26,039 --> 00:59:34,500
but let's take a look so in here we've

1284
00:59:28,530 --> 00:59:38,210
got our red green blue we're packing it

1285
00:59:34,500 --> 00:59:38,210
in so that we've got

1286
00:59:44,670 --> 00:59:53,579
a on top our than G than B I thought

1287
00:59:49,170 --> 00:59:56,760
that was how we were using the import

1288
00:59:53,579 --> 00:59:58,799
here as well so I'm a little weirded out

1289
00:59:56,760 --> 01:00:03,410
by why we were getting a blueshift in

1290
00:59:58,800 --> 01:00:03,410
our current stuff and not this one

1291
01:00:04,010 --> 01:00:10,200
because inside the loading here that

1292
01:00:08,429 --> 01:00:16,279
should have been fine right so you can

1293
01:00:10,199 --> 01:00:19,019
see when we load things out we've got a

1294
01:00:16,280 --> 01:00:21,769
we do have a swap R and B let me look at

1295
01:00:19,019 --> 01:00:21,769
what happens in there

1296
01:00:33,858 --> 01:00:41,460
so in there we basically take the

1297
01:00:36,389 --> 01:00:46,348
existing color and we we yeah we just

1298
01:00:41,460 --> 01:00:50,820
swapped what's in those two that looks

1299
01:00:46,349 --> 01:00:53,099
pretty sane and I do think we should

1300
01:00:50,820 --> 01:00:56,820
have to do that right because the PNG

1301
01:00:53,099 --> 01:00:58,830
would be encoded and and I mean you

1302
01:00:56,820 --> 01:01:03,720
could see us loading it here we're

1303
01:00:58,829 --> 01:01:05,250
loading it that way as well although I

1304
01:01:03,719 --> 01:01:07,848
guess this isn't loading a PNG it's

1305
01:01:05,250 --> 01:01:07,849
loading a BMP

1306
01:01:17,650 --> 01:01:24,789
so let's look inside our PNG reader what

1307
01:01:22,219 --> 01:01:24,789
do we do here

1308
01:01:42,699 --> 01:01:48,449
because I'm pretty sure it should come

1309
01:01:44,679 --> 01:01:51,819
out like with like the order are GBA

1310
01:01:48,449 --> 01:01:55,629
rgba because I thought it was I didn't

1311
01:01:51,820 --> 01:01:57,640
think it was windows style so when we

1312
01:01:55,630 --> 01:02:09,460
actually output this we don't swap it or

1313
01:01:57,639 --> 01:02:10,349
anything right just want to see what

1314
01:02:09,460 --> 01:02:15,490
we're doing here

1315
01:02:10,349 --> 01:02:17,980
here's our parse P&amp;G call and we just

1316
01:02:15,489 --> 01:02:20,349
call parse P&amp;G that's the only thing

1317
01:02:17,980 --> 01:02:25,210
that we do to it before we start working

1318
01:02:20,349 --> 01:02:27,420
on it right so if we look in here and we

1319
01:02:25,210 --> 01:02:30,099
look at what happens during parse P&amp;G

1320
01:02:27,420 --> 01:02:32,940
it's just that loading routine we just

1321
01:02:30,099 --> 01:02:35,980
looked at so if decompresses the bytes

1322
01:02:32,940 --> 01:02:40,659
does the consume bits compute Huffman

1323
01:02:35,980 --> 01:02:42,610
blah blah blah right does all the work

1324
01:02:40,659 --> 01:02:45,849
so do you compress the PNG and it just

1325
01:02:42,610 --> 01:02:52,300
outputs the data right and when it calls

1326
01:02:45,849 --> 01:02:55,829
PNG filter reconstruct it doesn't swap

1327
01:02:52,300 --> 01:02:55,830
any bits right

1328
01:03:04,150 --> 01:03:11,139
yeah I mean I don't see anything in

1329
01:03:07,949 --> 01:03:17,129
there that's doing swapping so I would

1330
01:03:11,139 --> 01:03:20,409
expect them to be correct in that RGB

1331
01:03:17,130 --> 01:03:22,599
order which means we do have to swap

1332
01:03:20,409 --> 01:03:33,159
them right like they should have to be

1333
01:03:22,599 --> 01:03:43,179
swapped and so yeah so what's going on

1334
01:03:33,159 --> 01:03:52,149
here here's our thing that extracts the

1335
01:03:43,179 --> 01:03:55,329
image right there's nothing particularly

1336
01:03:52,150 --> 01:03:55,820
weird about it it's pretty

1337
01:03:55,329 --> 01:03:57,480
straightforward

1338
01:03:55,820 --> 01:04:03,490
[Music]

1339
01:03:57,480 --> 01:04:06,179
it just converts it does a alpha

1340
01:04:03,489 --> 01:04:06,179
pre-multiply

1341
01:04:09,469 --> 01:04:12,818
other than that there's nothing

1342
01:04:14,949 --> 01:04:26,649
nothing remarkable about that and then

1343
01:04:18,250 --> 01:04:30,639
we do our down sampling down sampling

1344
01:04:26,650 --> 01:04:39,099
doesn't do anything weird right just

1345
01:04:30,639 --> 01:04:44,980
blends these together so yeah I don't

1346
01:04:39,099 --> 01:04:57,400
really see anything weird going on there

1347
01:04:44,980 --> 01:05:00,659
I don't I don't really see I don't see

1348
01:04:57,400 --> 01:05:02,889
the problem I don't see what's up

1349
01:05:00,659 --> 01:05:07,629
something's up but I don't see what's up

1350
01:05:02,889 --> 01:05:10,420
when we actually go to submit these I'm

1351
01:05:07,630 --> 01:05:14,170
assuming that they just get submitted

1352
01:05:10,420 --> 01:05:16,990
directly through so yeah I don't know so

1353
01:05:14,170 --> 01:05:19,599
let me just verify a few things first

1354
01:05:16,989 --> 01:05:22,679
and then we'll figure out what our next

1355
01:05:19,599 --> 01:05:26,338
step should be I'm gonna launch insight

1356
01:05:22,679 --> 01:05:31,328
and I'm going to run hand-me hero

1357
01:05:26,338 --> 01:05:34,769
through insight like so and all I'm

1358
01:05:31,329 --> 01:05:37,210
going to do here is take a look

1359
01:05:34,769 --> 01:05:39,780
we're in looks like we're running in the

1360
01:05:37,210 --> 01:05:39,780
wrong directory

1361
01:05:41,599 --> 01:05:51,889
I have to save this somehow we know how

1362
01:05:50,539 --> 01:05:56,590
to save it but that's where we actually

1363
01:05:51,889 --> 01:05:58,969
want to run it right so if I launch this

1364
01:05:56,590 --> 01:06:00,890
what I want to do is look at what the

1365
01:05:58,969 --> 01:06:02,419
textures we actually downloaded are to

1366
01:06:00,889 --> 01:06:03,829
make sure that the textures themselves

1367
01:06:02,420 --> 01:06:06,260
are tinted blue and it's not a rendering

1368
01:06:03,829 --> 01:06:07,610
artifact before I go chasing down a bug

1369
01:06:06,260 --> 01:06:08,060
that doesn't actually exist if that

1370
01:06:07,610 --> 01:06:09,890
makes sense

1371
01:06:08,059 --> 01:06:11,989
so what I'm gonna do is do capture for

1372
01:06:09,889 --> 01:06:14,389
live analysis let Nvidia capture the

1373
01:06:11,989 --> 01:06:16,309
frame then I'm gonna go look at our

1374
01:06:14,389 --> 01:06:18,889
texture set and see what the textures

1375
01:06:16,309 --> 01:06:21,650
actually have in it so what I could do

1376
01:06:18,889 --> 01:06:23,839
here is let me just go ahead and make

1377
01:06:21,650 --> 01:06:25,550
this a little bit bigger what I can do

1378
01:06:23,840 --> 01:06:27,440
here is just say look give us something

1379
01:06:25,550 --> 01:06:28,789
like where we're end or something you

1380
01:06:27,440 --> 01:06:31,519
know what I mean

1381
01:06:28,789 --> 01:06:32,119
let's go ahead and scrub for something

1382
01:06:31,519 --> 01:06:35,239
like that

1383
01:06:32,119 --> 01:06:37,420
so there's there's some know why they're

1384
01:06:35,239 --> 01:06:40,639
all kind of over in the corner there but

1385
01:06:37,420 --> 01:06:42,550
if I look through our render passes here

1386
01:06:40,639 --> 01:06:44,629
we should be able to find one that's

1387
01:06:42,550 --> 01:06:47,330
mostly geometry and I think that's

1388
01:06:44,630 --> 01:06:49,130
probably one and so if I look at what

1389
01:06:47,329 --> 01:06:52,190
the textures are that are in play here I

1390
01:06:49,130 --> 01:06:56,630
should be able to see something like

1391
01:06:52,190 --> 01:06:57,500
some kind of texture array but I guess

1392
01:06:56,630 --> 01:06:59,420
the other thing to do is just look

1393
01:06:57,500 --> 01:07:01,280
through the the total set of textures in

1394
01:06:59,420 --> 01:07:03,680
fact that's probably the easier thing to

1395
01:07:01,280 --> 01:07:05,690
do so maybe I'll do that there should be

1396
01:07:03,679 --> 01:07:09,859
like a way to look at all my textures

1397
01:07:05,690 --> 01:07:11,480
right there it is so if I look through

1398
01:07:09,860 --> 01:07:13,329
the textures here there should be one of

1399
01:07:11,480 --> 01:07:15,320
them that's like a texture array and

1400
01:07:13,329 --> 01:07:15,710
we'll see what you wanna do is so here

1401
01:07:15,320 --> 01:07:17,870
it is

1402
01:07:15,710 --> 01:07:19,460
right and so what I want to do is go

1403
01:07:17,869 --> 01:07:22,299
look at and see like what I actually

1404
01:07:19,460 --> 01:07:24,349
downloaded so if I look at this tile

1405
01:07:22,300 --> 01:07:27,410
that pretty much tells me what I need to

1406
01:07:24,349 --> 01:07:31,699
know so the art and B channels are

1407
01:07:27,409 --> 01:07:33,920
swapped in it and again I don't know why

1408
01:07:31,699 --> 01:07:39,619
right I don't know why they've been

1409
01:07:33,920 --> 01:07:43,659
swapped if I look at the rest of the how

1410
01:07:39,619 --> 01:07:46,400
do I get out of this I just do that

1411
01:07:43,659 --> 01:07:50,039
there's got to be a way to change the

1412
01:07:46,400 --> 01:07:54,119
array slice right don't think

1413
01:07:50,039 --> 01:07:56,009
that's a histogram I change how do I

1414
01:07:54,119 --> 01:07:57,840
change the array slice okay so I just I

1415
01:07:56,010 --> 01:08:00,270
hit the right mouse button is what I

1416
01:07:57,840 --> 01:08:05,700
just did there to changer a slice so

1417
01:08:00,269 --> 01:08:07,230
looking at these you know I can see that

1418
01:08:05,699 --> 01:08:11,159
it's not really a problem with the

1419
01:08:07,230 --> 01:08:15,990
texture upload because these assets that

1420
01:08:11,159 --> 01:08:18,568
came from the previous import path there

1421
01:08:15,989 --> 01:08:23,278
right so like that's not that doesn't

1422
01:08:18,569 --> 01:08:25,710
have its RMB flopped this does so the

1423
01:08:23,279 --> 01:08:32,400
question is how how is that happening

1424
01:08:25,710 --> 01:08:37,140
right and I have no idea so let's go

1425
01:08:32,399 --> 01:08:38,579
ahead and look into it further when I go

1426
01:08:37,140 --> 01:08:40,230
to submit a texture

1427
01:08:38,579 --> 01:08:46,949
let's see what's actually happening

1428
01:08:40,229 --> 01:08:52,409
there so if I go to the win32 renderer

1429
01:08:46,949 --> 01:08:56,298
for OpenGL when we do at X sub image 3d

1430
01:08:52,409 --> 01:08:56,298
which is how we send these things down

1431
01:09:00,470 --> 01:09:06,390
if I look at what's actually happening

1432
01:09:03,088 --> 01:09:12,180
in there you can see here that we we are

1433
01:09:06,390 --> 01:09:15,798
passing the BGR a extension right so

1434
01:09:12,180 --> 01:09:18,750
that means that the order of bytes

1435
01:09:15,798 --> 01:09:22,738
that's being passed in the data field

1436
01:09:18,750 --> 01:09:27,238
there should be blue green red alpha so

1437
01:09:22,738 --> 01:09:36,119
the low is B then the next is G then the

1438
01:09:27,238 --> 01:09:38,548
are then a if we go and look at where

1439
01:09:36,119 --> 01:09:40,439
that call is actually made to submit the

1440
01:09:38,548 --> 01:09:43,289
texture that's gonna be in handmade

1441
01:09:40,439 --> 01:09:45,179
asset and we're actually gonna have a

1442
01:09:43,289 --> 01:09:46,798
thing for finalized at the bitmap right

1443
01:09:45,180 --> 01:09:49,588
here's where we passed the bitmap memory

1444
01:09:46,798 --> 01:09:52,738
right we add an OP to the texture Q to

1445
01:09:49,588 --> 01:09:56,220
do that after it gets loaded right so

1446
01:09:52,738 --> 01:09:59,479
this is what does that work after we do

1447
01:09:56,220 --> 01:10:02,810
the read from file and we're done so

1448
01:09:59,479 --> 01:10:04,729
we're not we're not like

1449
01:10:02,810 --> 01:10:06,430
modifying the data in any way when we

1450
01:10:04,729 --> 01:10:09,289
pass it downward is passing it directly

1451
01:10:06,430 --> 01:10:14,090
so it pretty much just leaves us with

1452
01:10:09,289 --> 01:10:18,170
the import and the import is has got to

1453
01:10:14,090 --> 01:10:20,659
be mucking with it somehow right so when

1454
01:10:18,170 --> 01:10:25,430
we call parse P&amp;G and we are pretty sure

1455
01:10:20,659 --> 01:10:28,010
that the PNG has those things flipped

1456
01:10:25,430 --> 01:10:29,450
around right but I guess I don't know

1457
01:10:28,010 --> 01:10:30,550
the other thing could be that we don't

1458
01:10:29,449 --> 01:10:35,139
that that's not true

1459
01:10:30,550 --> 01:10:35,140
PNG byte order

1460
01:10:52,729 --> 01:10:57,329
colors sooner scented by either crystal

1461
01:10:55,020 --> 01:10:59,280
RGB the grayscale data represents

1462
01:10:57,329 --> 01:11:00,449
luminance RGB data it represents

1463
01:10:59,279 --> 01:11:02,670
calibrated color information or

1464
01:11:00,449 --> 01:11:07,109
uncovered device all clever values range

1465
01:11:02,670 --> 01:11:10,199
from zero to most intense yep simplify

1466
01:11:07,109 --> 01:11:17,519
our sensor linear blah blah swear

1467
01:11:10,199 --> 01:11:21,840
surface is nice right okay red appears

1468
01:11:17,520 --> 01:11:26,360
first then green then blue so it's our G

1469
01:11:21,840 --> 01:11:26,360
B right

1470
01:11:35,369 --> 01:11:41,109
so yeah I still don't see any reason why

1471
01:11:38,260 --> 01:11:43,989
this thing wouldn't be coming in as our

1472
01:11:41,109 --> 01:11:46,229
first then G than B will have to step

1473
01:11:43,988 --> 01:11:48,789
into it and find out but let's assume

1474
01:11:46,229 --> 01:11:50,589
that's what's going on the good of

1475
01:11:48,789 --> 01:11:53,710
process multi tail import let's just see

1476
01:11:50,590 --> 01:11:56,350
what's happening so when we look at

1477
01:11:53,710 --> 01:11:58,149
these we're scanning over and we look at

1478
01:11:56,350 --> 01:12:00,340
the alpha channel that we know is in the

1479
01:11:58,149 --> 01:12:03,369
right place because we're not getting

1480
01:12:00,340 --> 01:12:05,890
any bugs there so when we come through

1481
01:12:03,369 --> 01:12:07,630
here and we look at these pixels and no

1482
01:12:05,890 --> 01:12:09,640
one has done any swapping this is just

1483
01:12:07,630 --> 01:12:12,850
the raw input image right there's

1484
01:12:09,640 --> 01:12:14,380
nothing nothing has happened so far so

1485
01:12:12,850 --> 01:12:17,170
when we come through here and we do a

1486
01:12:14,380 --> 01:12:19,359
down sample on this and then we do a

1487
01:12:17,170 --> 01:12:21,069
right image to HHA those are the two

1488
01:12:19,359 --> 01:12:24,689
places that this stuff could get mopped

1489
01:12:21,069 --> 01:12:28,170
up I'm gonna look at the right image to

1490
01:12:24,689 --> 01:12:32,019
hij function just see what that's doing

1491
01:12:28,170 --> 01:12:34,329
to see what what's actually happening in

1492
01:12:32,020 --> 01:12:39,340
there so looking through here we don't

1493
01:12:34,329 --> 01:12:42,840
touch the pixels at all so it can't be

1494
01:12:39,340 --> 01:12:42,840
happening there right

1495
01:12:55,319 --> 01:13:00,988
I want to look at the GRA unpack and

1496
01:12:58,649 --> 01:13:03,439
make sure that that's doing what I think

1497
01:13:00,988 --> 01:13:03,439
it's doing

1498
01:13:10,380 --> 01:13:16,800
so be GRE unpack does what I would

1499
01:13:14,590 --> 01:13:16,800
expect

1500
01:13:17,429 --> 01:13:35,849
RGBA it unpacks the v4 as I would expect

1501
01:13:20,908 --> 01:13:35,848
be GRA pack 4x8 also looks correct I

1502
01:13:38,969 --> 01:13:44,130
mean I can't say I see anything odd

1503
01:13:42,420 --> 01:13:50,219
right

1504
01:13:44,130 --> 01:13:50,219
it all looks fine to me

1505
01:13:58,380 --> 01:14:03,300
yes so I don't see anything weird

1506
01:14:00,639 --> 01:14:03,300
happening there

1507
01:14:11,289 --> 01:14:14,560
I what I will say is I don't understand

1508
01:14:13,420 --> 01:14:16,630
why we did it that way

1509
01:14:14,560 --> 01:14:20,470
like we don't need to do what we're

1510
01:14:16,630 --> 01:14:22,060
doing here it seems just kind of dumb so

1511
01:14:20,470 --> 01:14:23,590
maybe I will change us a little if we're

1512
01:14:22,060 --> 01:14:26,740
gonna do bug it we might as well do bug

1513
01:14:23,590 --> 01:14:34,150
a smarter version of it so when we

1514
01:14:26,739 --> 01:14:44,679
actually you know what though here's the

1515
01:14:34,149 --> 01:14:49,929
thing we don't call this path this only

1516
01:14:44,680 --> 01:14:52,150
happens on multi tile so I think all

1517
01:14:49,930 --> 01:14:54,520
we're really seeing is the fact that

1518
01:14:52,149 --> 01:14:58,569
when we actually call one of these

1519
01:14:54,520 --> 01:15:08,080
processed single tile imports we don't

1520
01:14:58,569 --> 01:15:10,029
actually we don't actually call that so

1521
01:15:08,079 --> 01:15:17,199
I think the problem here is really just

1522
01:15:10,029 --> 01:15:18,789
that yeah that's not sufficient so I

1523
01:15:17,199 --> 01:15:28,300
think what we want to do here is

1524
01:15:18,789 --> 01:15:31,689
probably do the flipping and the color

1525
01:15:28,300 --> 01:15:34,329
conversion in Prabhat probably a more

1526
01:15:31,689 --> 01:15:40,479
uniform way I don't know it's a good

1527
01:15:34,329 --> 01:15:43,720
question let's start with a few simple

1528
01:15:40,479 --> 01:15:45,969
things so if we're going to convert this

1529
01:15:43,720 --> 01:15:48,340
I think we should just do an RGB a

1530
01:15:45,970 --> 01:15:50,770
unpack on this because that way it'll

1531
01:15:48,340 --> 01:15:52,119
impact that and then pack it into G like

1532
01:15:50,770 --> 01:15:55,000
we don't need to call the swap

1533
01:15:52,119 --> 01:15:57,340
separately so we'll do this we can also

1534
01:15:55,000 --> 01:15:59,229
flip the image to be the correct

1535
01:15:57,340 --> 01:16:00,819
orientation here because when we're

1536
01:15:59,229 --> 01:16:02,139
running in the desk pixels what we could

1537
01:16:00,819 --> 01:16:05,829
do is just write in the desk pixels

1538
01:16:02,140 --> 01:16:09,490
backwards right and or read from the

1539
01:16:05,829 --> 01:16:12,779
source row backwards so it's our choice

1540
01:16:09,489 --> 01:16:15,010
so maybe we'll just do this when Bert's

1541
01:16:12,779 --> 01:16:19,389
flipping through the source row we'll

1542
01:16:15,010 --> 01:16:23,140
just say look instead of starting at the

1543
01:16:19,390 --> 01:16:24,219
top start at the bottom right so instead

1544
01:16:23,140 --> 01:16:27,910
here to say

1545
01:16:24,219 --> 01:16:37,539
go to max live right and start there and

1546
01:16:27,909 --> 01:16:38,889
read from the bottom back right and I

1547
01:16:37,539 --> 01:16:41,350
think that should be sufficient for

1548
01:16:38,890 --> 01:16:44,500
handling that path but then we need an

1549
01:16:41,350 --> 01:16:46,780
equivalent path in the other places that

1550
01:16:44,500 --> 01:16:49,029
we were dealing with this so in here

1551
01:16:46,779 --> 01:16:53,920
where we do process single tile import

1552
01:16:49,029 --> 01:16:56,198
and process plate import those also need

1553
01:16:53,920 --> 01:16:59,050
to have some way of handling this

1554
01:16:56,198 --> 01:17:03,549
problem because they don't go through

1555
01:16:59,050 --> 01:17:05,230
this extraction path right so what we

1556
01:17:03,550 --> 01:17:07,029
probably need to do there is sort of

1557
01:17:05,229 --> 01:17:09,339
make this a little bit more regularize

1558
01:17:07,029 --> 01:17:12,189
so that this actually works properly for

1559
01:17:09,340 --> 01:17:15,520
everybody right before the down sample

1560
01:17:12,189 --> 01:17:17,319
is called and we could bake it into the

1561
01:17:15,520 --> 01:17:19,989
down sample but I don't think we really

1562
01:17:17,319 --> 01:17:25,599
want to do that so what I want to do is

1563
01:17:19,988 --> 01:17:28,439
like you know extract image something

1564
01:17:25,600 --> 01:17:32,070
like this and then I want this to happen

1565
01:17:28,439 --> 01:17:35,019
inside there so that everyone can use it

1566
01:17:32,069 --> 01:17:38,799
and go from there so let's just try

1567
01:17:35,020 --> 01:17:47,860
doing that here so let's suppose and

1568
01:17:38,800 --> 01:17:52,900
here we say that there's this extract

1569
01:17:47,859 --> 01:17:55,599
image call and everything that's going

1570
01:17:52,899 --> 01:17:57,488
to be done will get done every time by

1571
01:17:55,600 --> 01:18:02,079
the extract image call so it'll flip and

1572
01:17:57,488 --> 01:18:03,399
change the RGB the way we want it it's a

1573
01:18:02,079 --> 01:18:04,779
little bit of an open question whether

1574
01:18:03,399 --> 01:18:06,369
we want to do that at all

1575
01:18:04,779 --> 01:18:08,948
because another thing we could do is

1576
01:18:06,369 --> 01:18:11,920
switch to the RGB a ordering which is

1577
01:18:08,948 --> 01:18:15,210
the more normal ordering and so we

1578
01:18:11,920 --> 01:18:15,210
should have that discussion as well

1579
01:18:28,929 --> 01:18:32,510
because now might be a good time to do

1580
01:18:31,100 --> 01:18:34,520
that and so what we would really want to

1581
01:18:32,510 --> 01:18:37,130
do there is just go ahead and set up a

1582
01:18:34,520 --> 01:18:39,739
rien port for all of our cutscenes as

1583
01:18:37,130 --> 01:18:41,449
well and then just do one big rebuild of

1584
01:18:39,738 --> 01:18:44,238
all of our HSAs for fonts and everything

1585
01:18:41,448 --> 01:18:45,769
and then we can just have a clean slate

1586
01:18:44,238 --> 01:18:46,789
that we start with and we're not far

1587
01:18:45,770 --> 01:18:50,000
from be able to do that so we probably

1588
01:18:46,789 --> 01:18:52,850
should and so we should think about that

1589
01:18:50,000 --> 01:18:54,409
at that time because really the BG RA is

1590
01:18:52,850 --> 01:18:56,090
a Windows anomaly and we probably

1591
01:18:54,409 --> 01:18:58,519
shouldn't keep it inherited now that we

1592
01:18:56,090 --> 01:19:01,819
don't really need it for anything so we

1593
01:18:58,520 --> 01:19:03,590
here what I would say is oK we've got we

1594
01:19:01,819 --> 01:19:06,049
need that temper rena because we need to

1595
01:19:03,590 --> 01:19:08,929
be able to push this temporary buffer on

1596
01:19:06,050 --> 01:19:12,829
for doing the this work here what we

1597
01:19:08,929 --> 01:19:15,079
want to do is say we've got an image u32

1598
01:19:12,829 --> 01:19:17,479
that's the source image that can all

1599
01:19:15,079 --> 01:19:20,899
stay the same all of that information

1600
01:19:17,479 --> 01:19:26,659
can stay the same here but we can return

1601
01:19:20,899 --> 01:19:30,250
the tile image like so and I can call

1602
01:19:26,659 --> 01:19:30,250
this result now

1603
01:19:39,649 --> 01:19:45,420
right so we make the result here by

1604
01:19:43,078 --> 01:19:47,250
saying extract image do all this work to

1605
01:19:45,420 --> 01:19:48,599
it and so now we really just need to

1606
01:19:47,250 --> 01:19:54,769
know the bounds that we're actually

1607
01:19:48,599 --> 01:19:59,179
using so we say like min x max X min Y

1608
01:19:54,769 --> 01:20:03,119
max Y right that's what we're extracting

1609
01:19:59,179 --> 01:20:05,190
and so maybe I'll do min min max max and

1610
01:20:03,118 --> 01:20:11,038
off we go I think that maybe all we

1611
01:20:05,189 --> 01:20:12,569
really need here and this computation

1612
01:20:11,038 --> 01:20:17,639
really though has to be done on the

1613
01:20:12,569 --> 01:20:20,238
outside but other than that I think

1614
01:20:17,639 --> 01:20:20,239
we're good right

1615
01:20:23,639 --> 01:20:27,269
so when we call extract image we're just

1616
01:20:26,010 --> 01:20:29,219
going to pass a temporariness so it can

1617
01:20:27,269 --> 01:20:32,900
do its allocation we're gonna pass the

1618
01:20:29,219 --> 01:20:35,219
source image that we're extracting from

1619
01:20:32,899 --> 01:20:41,638
and then we're going to say like look

1620
01:20:35,219 --> 01:20:43,710
here's the here's the min and Max Y that

1621
01:20:41,639 --> 01:20:45,920
we need and the min and Max X that we

1622
01:20:43,710 --> 01:20:45,920
need

1623
01:20:59,970 --> 01:21:10,199
oops there we go

1624
01:21:07,329 --> 01:21:15,569
so what we want to do is pass in here

1625
01:21:10,199 --> 01:21:18,789
for the X and the y just our min and Max

1626
01:21:15,569 --> 01:21:22,090
values that we actually want here right

1627
01:21:18,789 --> 01:21:24,159
so here's the tile base and here's the

1628
01:21:22,090 --> 01:21:27,819
min and Max extraction inside the tile

1629
01:21:24,159 --> 01:21:32,019
base that we want to extract I think

1630
01:21:27,819 --> 01:21:36,819
that gives us what we want when we go to

1631
01:21:32,020 --> 01:21:39,220
down sample I'm sorry now when we go

1632
01:21:36,819 --> 01:21:42,699
down sample when we go to call extract

1633
01:21:39,220 --> 01:21:49,570
image for everybody else oh and this is

1634
01:21:42,699 --> 01:21:52,359
tile I'm sure they can do the same thing

1635
01:21:49,569 --> 01:21:59,259
now and do the extraction that will do

1636
01:21:52,359 --> 01:22:06,179
the flip upside down right so this will

1637
01:21:59,260 --> 01:22:06,180
be like a prep image call like so

1638
01:22:11,939 --> 01:22:19,779
and we will down sample that prepared

1639
01:22:16,000 --> 01:22:22,810
image instead of the source image so now

1640
01:22:19,779 --> 01:22:24,729
when we go to do this we know that we

1641
01:22:22,810 --> 01:22:26,289
just when we actually do the process

1642
01:22:24,729 --> 01:22:28,750
plate import all we have to do is say

1643
01:22:26,289 --> 01:22:30,609
well we want the whole thing right so

1644
01:22:28,750 --> 01:22:34,000
it's just going to be zero zero and then

1645
01:22:30,609 --> 01:22:38,679
whatever the source image is with was

1646
01:22:34,000 --> 01:22:40,238
and the source image is height now the

1647
01:22:38,679 --> 01:22:41,469
only thing I don't like about this is

1648
01:22:40,238 --> 01:22:44,829
that I feel like we should be passing

1649
01:22:41,469 --> 01:22:46,630
one past of them in and one past the max

1650
01:22:44,829 --> 01:22:48,309
because otherwise we're gonna do this

1651
01:22:46,630 --> 01:22:50,650
here and I don't like that because

1652
01:22:48,310 --> 01:22:54,219
that's very error-prone it could produce

1653
01:22:50,649 --> 01:22:56,439
bad outcomes like by wrapping the value

1654
01:22:54,219 --> 01:22:58,060
if it was zero or something like that so

1655
01:22:56,439 --> 01:23:00,609
I think we may want to do something

1656
01:22:58,060 --> 01:23:03,699
where we say okay let's modify this

1657
01:23:00,609 --> 01:23:05,189
routine slightly so that when we come

1658
01:23:03,698 --> 01:23:07,329
through here and do an extract image

1659
01:23:05,189 --> 01:23:11,129
we're really just gonna get rid of these

1660
01:23:07,329 --> 01:23:15,069
plus ones here couldn't do it like this

1661
01:23:11,130 --> 01:23:17,219
and so we're gonna do a subtract one

1662
01:23:15,069 --> 01:23:19,389
when we actually grab the value there so

1663
01:23:17,219 --> 01:23:21,399
that should be fine because we won't

1664
01:23:19,390 --> 01:23:23,980
loop over anything if the if we have a

1665
01:23:21,399 --> 01:23:25,839
zero in these cases and so it won't

1666
01:23:23,979 --> 01:23:27,309
matter what we push put in here for the

1667
01:23:25,840 --> 01:23:29,770
source row because we'll never read from

1668
01:23:27,310 --> 01:23:33,489
it so I think we're okay and I think

1669
01:23:29,770 --> 01:23:43,050
that's probably the way it should go so

1670
01:23:33,488 --> 01:23:46,750
it's really this you know I'm saying and

1671
01:23:43,050 --> 01:23:48,039
I think that's a little bit better just

1672
01:23:46,750 --> 01:23:50,380
because of the way the math works out

1673
01:23:48,039 --> 01:23:52,689
there so then when we pass this in here

1674
01:23:50,380 --> 01:23:56,289
all we need to do is just enlarge it by

1675
01:23:52,689 --> 01:23:58,139
one which is safer for us to do and then

1676
01:23:56,289 --> 01:24:00,850
I think we've got that import path

1677
01:23:58,140 --> 01:24:03,000
worked out much more cleanly than it was

1678
01:24:00,850 --> 01:24:03,000
before

1679
01:24:10,729 --> 01:24:32,579
that's all you're relevant now it's all

1680
01:24:15,840 --> 01:24:36,569
welded in right and I think we are good

1681
01:24:32,578 --> 01:24:38,219
so in here also I think we passed source

1682
01:24:36,569 --> 01:24:40,728
image it's not source image there's no

1683
01:24:38,219 --> 01:24:48,050
source image it's just image in there

1684
01:24:40,729 --> 01:24:51,539
there we go okay uh so temporary nough

1685
01:24:48,050 --> 01:24:54,538
here looks like I put that as the last

1686
01:24:51,538 --> 01:24:56,578
parameter which i think is good it's the

1687
01:24:54,538 --> 01:24:59,279
destination so I tend to put

1688
01:24:56,578 --> 01:25:03,139
destinations last so I'm okay with that

1689
01:24:59,279 --> 01:25:03,139
we'll just say that that happens here

1690
01:25:04,668 --> 01:25:11,219
and then I think we're done that's whole

1691
01:25:07,439 --> 01:25:14,909
path yeah so let's see now what happens

1692
01:25:11,219 --> 01:25:18,748
when we really get so if I delete the

1693
01:25:14,908 --> 01:25:21,058
local ehh-ehh and I create a new one so

1694
01:25:18,748 --> 01:25:23,038
I'm going to force the entire re-import

1695
01:25:21,059 --> 01:25:25,739
path which is so much slower debug mode

1696
01:25:23,038 --> 01:25:28,018
I guess I never realized quite how much

1697
01:25:25,738 --> 01:25:30,058
the optimizer helps there I suppose all

1698
01:25:28,019 --> 01:25:32,399
the PNG reading and the flippin bytes

1699
01:25:30,059 --> 01:25:36,659
and everything just gets a huge win from

1700
01:25:32,399 --> 01:25:38,550
the optimizer which it's cool but it

1701
01:25:36,658 --> 01:25:46,518
should force the re-import everywhere

1702
01:25:38,550 --> 01:25:46,519
hopefully no no doesn't let's see

1703
01:25:51,779 --> 01:25:57,099
looks reasonable I think we're just

1704
01:25:55,630 --> 01:26:00,670
going through doing all the down

1705
01:25:57,099 --> 01:26:02,760
sampling hopefully everything's working

1706
01:26:00,670 --> 01:26:02,760
properly

1707
01:26:05,519 --> 01:26:19,659
all right um so now what I'm seeing

1708
01:26:10,149 --> 01:26:37,868
looks entirely correct to me go ahead

1709
01:26:19,658 --> 01:26:39,609
and switch to optimize filter these what

1710
01:26:37,868 --> 01:26:41,920
I will say is that the lighting is a

1711
01:26:39,609 --> 01:26:44,049
little bit the the lighting mapping is

1712
01:26:41,920 --> 01:26:45,670
it's a little blown out right we need to

1713
01:26:44,050 --> 01:26:49,239
probably work on our lighting which we

1714
01:26:45,670 --> 01:26:52,510
knew was true ahead of time so that's

1715
01:26:49,238 --> 01:26:54,609
fine but it it's looking correct now

1716
01:26:52,510 --> 01:26:58,420
right we're getting exactly what I think

1717
01:26:54,609 --> 01:26:59,679
we should be getting in terms of of how

1718
01:26:58,420 --> 01:27:01,328
these assets are getting picked so

1719
01:26:59,679 --> 01:27:02,710
that's good

1720
01:27:01,328 --> 01:27:05,018
and we should be able to now

1721
01:27:02,710 --> 01:27:07,689
differentiate like two rooms right if we

1722
01:27:05,019 --> 01:27:10,809
wanted to do that so you know if we

1723
01:27:07,689 --> 01:27:15,250
wanted to have an outdoor area be forest

1724
01:27:10,809 --> 01:27:17,889
like we could do that and if we wanted

1725
01:27:15,250 --> 01:27:19,389
to down a dungeon to be dungeon like we

1726
01:27:17,889 --> 01:27:22,840
could do that right if we wanted these

1727
01:27:19,389 --> 01:27:28,480
areas to look to be stone so I think

1728
01:27:22,840 --> 01:27:30,849
we're now pretty much clean with how the

1729
01:27:28,479 --> 01:27:33,879
assets are getting picked so if I go

1730
01:27:30,849 --> 01:27:43,300
ahead and and switch back to the room

1731
01:27:33,880 --> 01:27:48,219
Jen for example I think that's probably

1732
01:27:43,300 --> 01:27:54,090
all we really need to know now when we

1733
01:27:48,219 --> 01:27:54,090
look at the general structure right so

1734
01:27:56,149 --> 01:28:02,368
you know inside the genuine structure we

1735
01:27:59,609 --> 01:28:05,578
don't have like this room spec thing

1736
01:28:02,368 --> 01:28:09,118
doesn't really have any information

1737
01:28:05,578 --> 01:28:13,670
about what should be going on in here

1738
01:28:09,118 --> 01:28:16,109
but we could make just a quick

1739
01:28:13,670 --> 01:28:18,658
modification to it just to figure out

1740
01:28:16,109 --> 01:28:20,098
whether this thing is working at all and

1741
01:28:18,658 --> 01:28:22,799
we could just say like look does have a

1742
01:28:20,099 --> 01:28:24,449
stone floor or not probably not how we

1743
01:28:22,800 --> 01:28:26,969
would want to do that normally but we'll

1744
01:28:24,448 --> 01:28:30,269
just say look that's a thing so then

1745
01:28:26,969 --> 01:28:33,090
when we go into the general we can pull

1746
01:28:30,270 --> 01:28:37,050
out the spec so in here we can say the

1747
01:28:33,090 --> 01:28:38,310
general spec for whatever this room is

1748
01:28:37,050 --> 01:28:40,710
is going to tell us whether it has a

1749
01:28:38,310 --> 01:28:44,400
stone floor or not and so in that point

1750
01:28:40,710 --> 01:28:48,090
what I can do is say look in here we

1751
01:28:44,399 --> 01:28:50,759
know that at the moment if it's a wall

1752
01:28:48,090 --> 01:28:52,679
it's always wood if it's not a wall

1753
01:28:50,760 --> 01:28:54,480
we're actually gonna set whether it's

1754
01:28:52,679 --> 01:28:57,569
wood or not based on whether the spec

1755
01:28:54,479 --> 01:28:59,488
says that it has a stone floor so we'll

1756
01:28:57,569 --> 01:29:02,309
say that the floor is stone in that case

1757
01:28:59,488 --> 01:29:04,348
and off we'll go right now if we've run

1758
01:29:02,310 --> 01:29:06,389
this we shouldn't see anything happen

1759
01:29:04,349 --> 01:29:08,429
because we'll never have set that so it

1760
01:29:06,389 --> 01:29:12,569
should always be false and we'll always

1761
01:29:08,429 --> 01:29:15,719
have the stone floor flag set to false

1762
01:29:12,569 --> 01:29:17,939
right but if we were then to change and

1763
01:29:15,719 --> 01:29:19,500
say well when we actually go to build

1764
01:29:17,939 --> 01:29:22,019
the world let's give some of the room

1765
01:29:19,500 --> 01:29:26,698
stone floors then what we can do is say

1766
01:29:22,020 --> 01:29:29,670
when we actually made those dungeons

1767
01:29:26,698 --> 01:29:33,719
right can see in here we've got like the

1768
01:29:29,670 --> 01:29:38,279
bedroom spec we generate expect there we

1769
01:29:33,719 --> 01:29:40,948
could say that we want the bedrooms to

1770
01:29:38,279 --> 01:29:44,069
have stone floors that's you know just

1771
01:29:40,948 --> 01:29:44,939
what happens because these are orphans

1772
01:29:44,069 --> 01:29:47,880
and their mouths

1773
01:29:44,939 --> 01:29:49,979
you know mistreated you know then when

1774
01:29:47,880 --> 01:29:51,868
we open it up we should expect to see

1775
01:29:49,979 --> 01:29:53,879
bedrooms having stone floors right and

1776
01:29:51,868 --> 01:29:56,339
then we can test it and they do right

1777
01:29:53,880 --> 01:29:58,349
now these are the hero's rooms which is

1778
01:29:56,340 --> 01:30:00,480
also technically a bedroom but they

1779
01:29:58,349 --> 01:30:03,029
don't get stone floors because that's

1780
01:30:00,479 --> 01:30:04,738
the save slot spec so we could make the

1781
01:30:03,029 --> 01:30:07,828
save slots have a different kind of

1782
01:30:04,738 --> 01:30:09,738
floor but you know if we play the game

1783
01:30:07,828 --> 01:30:12,139
now we see that their stone floors

1784
01:30:09,738 --> 01:30:16,609
in those rooms right which is what we

1785
01:30:12,139 --> 01:30:22,159
wanted so I would see really we're right

1786
01:30:16,609 --> 01:30:24,170
where I want to be so the other thing is

1787
01:30:22,158 --> 01:30:30,408
this a little repetitive here so if you

1788
01:30:24,170 --> 01:30:33,260
look at these you can also kind of see

1789
01:30:30,408 --> 01:30:33,888
that the floors are not they're all the

1790
01:30:33,260 --> 01:30:36,949
same

1791
01:30:33,889 --> 01:30:38,300
tiles but they probably shouldn't be so

1792
01:30:36,948 --> 01:30:41,750
there's one other thing we can do there

1793
01:30:38,300 --> 01:30:48,679
too which is in the room Jen right when

1794
01:30:41,750 --> 01:30:55,099
we go in here the the the UV layout for

1795
01:30:48,679 --> 01:30:57,139
these cubes is not being set so when we

1796
01:30:55,099 --> 01:31:01,849
actually when we actually want to set

1797
01:30:57,139 --> 01:31:10,460
this I believe inside the world the add

1798
01:31:01,849 --> 01:31:14,569
piece structure right sorry that's it

1799
01:31:10,460 --> 01:31:17,408
here so when we do an ADD piece I you

1800
01:31:14,569 --> 01:31:20,929
know it doesn't set anything about that

1801
01:31:17,408 --> 01:31:24,158
UV mapping so what I want to do is say

1802
01:31:20,929 --> 01:31:27,199
well when we do an entity visible piece

1803
01:31:24,158 --> 01:31:30,649
and we add one of those here I would

1804
01:31:27,198 --> 01:31:32,779
like to be able to set the cube UV

1805
01:31:30,649 --> 01:31:35,118
layout in situations where I think

1806
01:31:32,779 --> 01:31:40,368
that's appropriate and so one example

1807
01:31:35,118 --> 01:31:44,719
would be like if I want to do a

1808
01:31:40,368 --> 01:31:47,509
randomized top right so I could say true

1809
01:31:44,719 --> 01:31:51,920
on randomize top and if I want to do

1810
01:31:47,510 --> 01:31:55,150
rant two on randomize top you know I'll

1811
01:31:51,920 --> 01:31:55,149
just set this cube layout

1812
01:31:58,949 --> 01:32:05,689
if you remember how this thing worked we

1813
01:32:01,560 --> 01:32:08,340
can pack you view layouts here and

1814
01:32:05,689 --> 01:32:10,529
there's like a default packing for each

1815
01:32:08,340 --> 01:32:12,270
of these things right so what I want to

1816
01:32:10,529 --> 01:32:13,590
do this I want to say there's a bottom

1817
01:32:12,270 --> 01:32:15,720
index I don't care what it is I don't

1818
01:32:13,590 --> 01:32:17,670
care the facing index is there's four

1819
01:32:15,720 --> 01:32:20,130
sign indexes I don't care what those are

1820
01:32:17,670 --> 01:32:22,380
either right so these can all be zeros

1821
01:32:20,130 --> 01:32:24,239
then the top index I want to randomize

1822
01:32:22,380 --> 01:32:26,159
so I want this to be a number between 0

1823
01:32:24,239 --> 01:32:27,840
and 3 that says which one it is and

1824
01:32:26,159 --> 01:32:29,489
furthermore I could randomize it's

1825
01:32:27,840 --> 01:32:31,140
facing direction so I could I could just

1826
01:32:29,489 --> 01:32:32,939
totally randomize this if I want to just

1827
01:32:31,140 --> 01:32:35,610
again as an example not only want to do

1828
01:32:32,939 --> 01:32:39,059
exactly this way but something we can

1829
01:32:35,609 --> 01:32:42,929
expect so when we look here I can set a

1830
01:32:39,060 --> 01:32:45,150
random by using the generator entropy I

1831
01:32:42,930 --> 01:32:47,789
can come in here and say look give me an

1832
01:32:45,149 --> 01:32:50,189
entropic value that I can use to set

1833
01:32:47,789 --> 01:32:52,229
this so I believe we have a concept of a

1834
01:32:50,189 --> 01:32:57,210
random count so we can just say like

1835
01:32:52,229 --> 01:32:58,919
give me a random count of 4 right and so

1836
01:32:57,210 --> 01:33:01,140
set the facing Direction randomly and

1837
01:32:58,920 --> 01:33:03,600
which one of those four tiles you're

1838
01:33:01,140 --> 01:33:07,829
using randomly as well

1839
01:33:03,600 --> 01:33:12,329
I don't know why deleted the a there but

1840
01:33:07,829 --> 01:33:15,239
I did okay so maybe we don't don't we

1841
01:33:12,329 --> 01:33:15,840
have a random count random choice that's

1842
01:33:15,239 --> 01:33:23,630
what it is

1843
01:33:15,840 --> 01:33:31,409
sorry naming Naaman klaich our problems

1844
01:33:23,630 --> 01:33:34,980
so off we go and now what I want to see

1845
01:33:31,409 --> 01:33:36,720
is like if we well I'm not and I'm not

1846
01:33:34,979 --> 01:33:40,019
seeing it unfortunately so that's not

1847
01:33:36,720 --> 01:33:41,820
good but what I want to be able to see

1848
01:33:40,020 --> 01:33:43,380
here is I want to see some variation in

1849
01:33:41,819 --> 01:33:47,099
these and I'm not seeing it so that's

1850
01:33:43,380 --> 01:33:50,579
not great when I look in here I've got

1851
01:33:47,100 --> 01:33:53,760
randomize top set to true oh that's for

1852
01:33:50,579 --> 01:33:54,750
boobs that's for the walls so it is

1853
01:33:53,760 --> 01:33:55,980
working actual you can see they

1854
01:33:54,750 --> 01:34:01,109
disappear because there isn't one in

1855
01:33:55,979 --> 01:34:01,968
that part of the wall my back try that

1856
01:34:01,109 --> 01:34:04,069
one more time

1857
01:34:01,969 --> 01:34:05,989
so this should randomize both the

1858
01:34:04,069 --> 01:34:08,299
orientation and the selection of which

1859
01:34:05,988 --> 01:34:10,488
one of those wood grain floors it uses

1860
01:34:08,300 --> 01:34:13,219
and so now that's working you can see

1861
01:34:10,488 --> 01:34:14,089
that happening here and I don't know

1862
01:34:13,219 --> 01:34:16,069
that like I said we don't necessarily

1863
01:34:14,090 --> 01:34:18,920
want that I just want to make sure it

1864
01:34:16,069 --> 01:34:20,599
worked right so we now have the ability

1865
01:34:18,920 --> 01:34:23,119
to decorate our room server we want to

1866
01:34:20,600 --> 01:34:26,420
and that's good and we can go from there

1867
01:34:23,119 --> 01:34:28,760
so that all seems nice

1868
01:34:26,420 --> 01:34:31,430
and I think that's a good place to leave

1869
01:34:28,760 --> 01:34:33,350
it next weekend we'll start to kind of

1870
01:34:31,430 --> 01:34:35,510
go a little more crazy I don't

1871
01:34:33,350 --> 01:34:37,550
necessarily love the color variants here

1872
01:34:35,510 --> 01:34:38,869
that's happening there's there's a lot

1873
01:34:37,550 --> 01:34:41,750
of color variants there you don't

1874
01:34:38,869 --> 01:34:44,738
necessarily know why I think it might be

1875
01:34:41,750 --> 01:34:48,010
because do we have randomized color

1876
01:34:44,738 --> 01:34:48,009
perturbation here

1877
01:34:57,130 --> 01:35:03,699
we don't so that's actually coming from

1878
01:35:01,090 --> 01:35:05,409
the like reflective oh right because the

1879
01:35:03,698 --> 01:35:06,939
walls are like red and the ground is

1880
01:35:05,408 --> 01:35:14,738
green so we're actually seeing all those

1881
01:35:06,939 --> 01:35:16,149
bounce colors no no that's not true so I

1882
01:35:14,738 --> 01:35:17,259
don't know why that's happening that's

1883
01:35:16,149 --> 01:35:18,670
I'm not sure why we're getting those

1884
01:35:17,260 --> 01:35:21,130
vats because that's not actually what's

1885
01:35:18,670 --> 01:35:22,449
happening there um if I was to turn this

1886
01:35:21,130 --> 01:35:25,449
off we would actually have the old

1887
01:35:22,448 --> 01:35:31,658
colors come back and we probably want to

1888
01:35:25,448 --> 01:35:33,129
fuss with that as well but right yeah so

1889
01:35:31,658 --> 01:35:34,509
I don't know why we were getting some of

1890
01:35:33,130 --> 01:35:35,800
that coloring there but looking at again

1891
01:35:34,510 --> 01:35:37,810
the lighting is something that now we

1892
01:35:35,800 --> 01:35:39,610
have to take more seriously and that's

1893
01:35:37,810 --> 01:35:44,469
something we're gonna have to get

1894
01:35:39,609 --> 01:35:49,238
working better in this case here I guess

1895
01:35:44,469 --> 01:35:51,340
what I would say is maybe we just want

1896
01:35:49,238 --> 01:35:57,009
to back off on this reflectivity a

1897
01:35:51,340 --> 01:35:59,110
little bit but we need we also don't

1898
01:35:57,010 --> 01:36:00,610
have roofs which is another problem

1899
01:35:59,109 --> 01:36:02,948
because then there's nothing for the

1900
01:36:00,609 --> 01:36:09,539
light to bounce off of so we've got we

1901
01:36:02,948 --> 01:36:19,448
got issues so not sure why those are

1902
01:36:09,539 --> 01:36:21,069
transparent oh gosh you think possibly

1903
01:36:19,448 --> 01:36:25,238
the fact that you set it to transparent

1904
01:36:21,069 --> 01:36:30,099
could have something to do with it just

1905
01:36:25,238 --> 01:36:32,789
maybe alright um so yes so we've got a

1906
01:36:30,099 --> 01:36:35,949
lot of work to do on our sort of

1907
01:36:32,789 --> 01:36:39,448
rendering side of things now to clean

1908
01:36:35,948 --> 01:36:42,609
all that up but we're pretty close now

1909
01:36:39,448 --> 01:36:49,259
right let's do one more thing we can set

1910
01:36:42,609 --> 01:36:49,259
grass let's walk in here

1911
01:36:58,170 --> 01:37:03,550
yeah everything looks pretty good so I

1912
01:37:02,319 --> 01:37:05,109
think really we just need to improve the

1913
01:37:03,550 --> 01:37:07,300
lighting which we knew we had to do

1914
01:37:05,109 --> 01:37:11,589
already distribute sample points well

1915
01:37:07,300 --> 01:37:19,119
and clean up the algorithms a little but

1916
01:37:11,590 --> 01:37:21,809
we're looking pretty respectable yeah

1917
01:37:19,118 --> 01:37:21,808
I'm pretty happy with that

1918
01:37:28,310 --> 01:37:33,890
all right uh probably don't have much

1919
01:37:31,619 --> 01:37:36,659
time for Q&amp;A here I gotta go today so

1920
01:37:33,890 --> 01:37:38,130
I'll just take any really quick

1921
01:37:36,659 --> 01:37:40,500
questions about what we did if there's

1922
01:37:38,130 --> 01:37:44,390
any specific on topic questions I'll

1923
01:37:40,500 --> 01:37:44,390
take them and then we'll close it down

1924
01:38:09,948 --> 01:38:14,638
well you update the test asset builder

1925
01:38:12,539 --> 01:38:16,859
to version one I think what we'll

1926
01:38:14,639 --> 01:38:21,868
probably do now is delete the test asset

1927
01:38:16,859 --> 01:38:26,130
builder and roll the font thing into our

1928
01:38:21,868 --> 01:38:27,839
game code will not assert game code but

1929
01:38:26,130 --> 01:38:31,500
maybe the HHA thing so you can just

1930
01:38:27,840 --> 01:38:32,940
insert a font into it because the only

1931
01:38:31,500 --> 01:38:34,380
thing the test hasn't builder we don't

1932
01:38:32,939 --> 01:38:40,460
need anymore so I'd like to just get rid

1933
01:38:34,380 --> 01:38:40,460
of it you know I'm saying

1934
01:38:43,039 --> 01:38:47,489
so what was the reason for the blue oh

1935
01:38:45,750 --> 01:38:50,489
so the reason we were getting the blue

1936
01:38:47,489 --> 01:38:52,229
was because nobody was doing the swap so

1937
01:38:50,489 --> 01:38:53,760
remember we have a couple different

1938
01:38:52,229 --> 01:38:58,829
import past because we have different

1939
01:38:53,760 --> 01:39:03,090
formats for our assets one of the assets

1940
01:38:58,829 --> 01:39:05,640
types is tiled right and in the path

1941
01:39:03,090 --> 01:39:08,340
that we extract tiles from a PNG we were

1942
01:39:05,640 --> 01:39:11,130
swapping the R and B but in the path

1943
01:39:08,340 --> 01:39:12,539
where we took the whole PNG and put that

1944
01:39:11,130 --> 01:39:14,579
in as a texture itself

1945
01:39:12,539 --> 01:39:18,510
we weren't swapping so it was just a

1946
01:39:14,579 --> 01:39:22,019
case of we needed to unify the paths to

1947
01:39:18,510 --> 01:39:24,060
do manipulation of the PNG always no

1948
01:39:22,020 --> 01:39:25,620
matter which path we went down so that's

1949
01:39:24,060 --> 01:39:27,390
why I pulled out that extract image

1950
01:39:25,619 --> 01:39:29,849
function and made it so that everyone

1951
01:39:27,390 --> 01:39:32,280
calls that first because that way we

1952
01:39:29,850 --> 01:39:38,340
know that we're not going to get any of

1953
01:39:32,279 --> 01:39:39,750
the paths accidentally not flipping will

1954
01:39:38,340 --> 01:39:41,520
you write any unit test to cure

1955
01:39:39,750 --> 01:39:43,710
yourselves so when I said on topic

1956
01:39:41,520 --> 01:39:46,430
questions I'm wondering how someone

1957
01:39:43,710 --> 01:39:48,480
thought that was an on topic question

1958
01:39:46,430 --> 01:39:50,039
but I've talked about unit test many

1959
01:39:48,479 --> 01:39:52,319
times you can search the archive for it

1960
01:39:50,039 --> 01:39:55,279
in short they're not very useful for

1961
01:39:52,319 --> 01:39:59,130
games except for very specific

1962
01:39:55,279 --> 01:40:01,259
situations and occasionally you do want

1963
01:39:59,130 --> 01:40:07,800
to test those you know like things like

1964
01:40:01,260 --> 01:40:10,850
a memory allocator or trying to think of

1965
01:40:07,800 --> 01:40:10,850
other typical ones

1966
01:40:16,789 --> 01:40:22,789
job system memory allocator these things

1967
01:40:19,710 --> 01:40:24,510
can often be unit tested a little bit

1968
01:40:22,789 --> 01:40:27,238
there's a couple of things it can be

1969
01:40:24,510 --> 01:40:29,100
unit tested most of the time you can't

1970
01:40:27,238 --> 01:40:32,250
right and the reason for that is because

1971
01:40:29,100 --> 01:40:35,039
games are about random player input and

1972
01:40:32,250 --> 01:40:37,260
so typically what games do for testing

1973
01:40:35,039 --> 01:40:38,850
is not unit testing because unit testing

1974
01:40:37,260 --> 01:40:41,130
doesn't it only helps you find bugs that

1975
01:40:38,850 --> 01:40:42,870
aren't really the hard bugs what you

1976
01:40:41,130 --> 01:40:45,389
typically need is simulation based

1977
01:40:42,869 --> 01:40:48,238
testing so for example one of the things

1978
01:40:45,389 --> 01:40:49,560
that games usually do at least at the

1979
01:40:48,238 --> 01:40:52,769
higher end you know if you're triple a

1980
01:40:49,560 --> 01:40:55,080
game and you got resources they make

1981
01:40:52,770 --> 01:40:58,340
randomized testers so these are things

1982
01:40:55,079 --> 01:41:00,630
that play the game randomly they like

1983
01:40:58,340 --> 01:41:03,210
simulate a player sitting there just

1984
01:41:00,630 --> 01:41:06,679
doing random stuff and they try to find

1985
01:41:03,210 --> 01:41:09,630
sequences of inputs that will produce

1986
01:41:06,679 --> 01:41:11,399
crashes or allow the player to get

1987
01:41:09,630 --> 01:41:13,010
somewhere that they've marked the player

1988
01:41:11,399 --> 01:41:16,589
shouldn't get you know things like that

1989
01:41:13,010 --> 01:41:17,969
so typically if you want to map it on

1990
01:41:16,590 --> 01:41:21,860
something from like other types of

1991
01:41:17,969 --> 01:41:25,230
development it's more like fuzz testing

1992
01:41:21,859 --> 01:41:27,630
input fuzz testing is more like what

1993
01:41:25,229 --> 01:41:29,638
finds bugs and games than unit testing

1994
01:41:27,630 --> 01:41:31,650
unit testing is not usually relevant

1995
01:41:29,639 --> 01:41:34,170
because most of the code for a game

1996
01:41:31,649 --> 01:41:36,299
doesn't have a well-defined input in an

1997
01:41:34,170 --> 01:41:38,219
output it's about all these state

1998
01:41:36,300 --> 01:41:39,779
transitions that happen and you're

1999
01:41:38,219 --> 01:41:41,760
trying to find errors in the state

2000
01:41:39,779 --> 01:41:44,369
transitions that only happen when you do

2001
01:41:41,760 --> 01:41:45,929
some set of inputs and you don't know

2002
01:41:44,369 --> 01:41:48,710
what that inside of input is you can't

2003
01:41:45,929 --> 01:41:51,658
make a unit test you have to generate

2004
01:41:48,710 --> 01:41:52,859
randomized testing so you can still

2005
01:41:51,658 --> 01:41:54,119
consider that unit test if you want to

2006
01:41:52,859 --> 01:41:55,948
but it's not the kind you normally think

2007
01:41:54,119 --> 01:41:57,809
of where you're like let me brute force

2008
01:41:55,948 --> 01:41:59,460
all the inputs to this function or some

2009
01:41:57,810 --> 01:42:01,080
set of inputs this function and make

2010
01:41:59,460 --> 01:42:03,179
sure it has the right responses that

2011
01:42:01,079 --> 01:42:05,039
kind of testing fairly useless in games

2012
01:42:03,179 --> 01:42:06,149
the only kind of bugs those will find

2013
01:42:05,039 --> 01:42:09,719
are bugs you probably would have found

2014
01:42:06,149 --> 01:42:11,658
anyway so you really need if you want to

2015
01:42:09,719 --> 01:42:14,399
try and be robust is you need the

2016
01:42:11,658 --> 01:42:16,469
simulation based testing and that is

2017
01:42:14,399 --> 01:42:18,149
very valuable if you have time to do it

2018
01:42:16,469 --> 01:42:19,649
I highly recommend it but it can be very

2019
01:42:18,149 --> 01:42:24,420
complicated to writes much harder than

2020
01:42:19,649 --> 01:42:25,859
unit testing that's why a lot of people

2021
01:42:24,420 --> 01:42:28,270
just rely on play testing right that's

2022
01:42:25,859 --> 01:42:30,449
the that's the the poor person

2023
01:42:28,270 --> 01:42:30,450
approach

2024
01:42:38,699 --> 01:42:42,609
I've never streamed so I'm not sure

2025
01:42:41,229 --> 01:42:43,929
what's going on but why are John streams

2026
01:42:42,609 --> 01:42:47,049
left in the videos tab and yours aren't

2027
01:42:43,930 --> 01:42:50,380
oh because I just I don't set that

2028
01:42:47,050 --> 01:42:56,110
option in twitch I only put the things

2029
01:42:50,380 --> 01:42:59,020
in the archive all right well you tile

2030
01:42:56,109 --> 01:43:01,869
the fonts as well then possibly I think

2031
01:42:59,020 --> 01:43:08,530
we probably should there are two routes

2032
01:43:01,869 --> 01:43:11,050
we can go with that and I don't know

2033
01:43:08,529 --> 01:43:14,019
which one we should take one is we can

2034
01:43:11,050 --> 01:43:15,909
tile the fonts and the other is we can

2035
01:43:14,020 --> 01:43:18,880
just have a separate array for fonts

2036
01:43:15,909 --> 01:43:21,340
that's small fonts and particles that

2037
01:43:18,880 --> 01:43:24,130
might be the smarter approach and then

2038
01:43:21,340 --> 01:43:28,600
what we would do is we batch those

2039
01:43:24,130 --> 01:43:30,630
together so we set the texture array

2040
01:43:28,600 --> 01:43:36,030
once do a whole batch of font rendering

2041
01:43:30,630 --> 01:43:38,020
unset it yeah I'm saying so hard to say

2042
01:43:36,029 --> 01:43:41,739
we could take either approach I don't

2043
01:43:38,020 --> 01:43:43,690
know which one we should take but you

2044
01:43:41,739 --> 01:43:46,479
know so we'd have like a 512 by 512

2045
01:43:43,689 --> 01:43:48,219
texture right at 64 by 64 texture array

2046
01:43:46,479 --> 01:43:52,929
all the fonts and the particles go into

2047
01:43:48,220 --> 01:43:57,220
64 by 64 which has a lot more right

2048
01:43:52,930 --> 01:43:59,670
slots that kind of thing all right let

2049
01:43:57,220 --> 01:43:59,670
me wrap it up

2050
01:44:09,979 --> 01:44:13,349
thank you everyone for joining me for

2051
01:44:11,998 --> 01:44:16,349
less that hand made here so I pleasure

2052
01:44:13,349 --> 01:44:18,229
coding with you as always we are now at

2053
01:44:16,349 --> 01:44:21,659
the point where we've got to start

2054
01:44:18,229 --> 01:44:24,420
pushing that sort of world gen stuff a

2055
01:44:21,658 --> 01:44:25,738
little bit more so we're gonna kind of

2056
01:44:24,420 --> 01:44:27,149
try to pull all these things together

2057
01:44:25,738 --> 01:44:29,009
and that's gonna be a fairly lengthy

2058
01:44:27,149 --> 01:44:31,768
process of like building out the world

2059
01:44:29,010 --> 01:44:34,139
and we need to take that in a couple of

2060
01:44:31,769 --> 01:44:35,969
waves right so first thing we want to do

2061
01:44:34,139 --> 01:44:38,279
is start to put the art assets where

2062
01:44:35,969 --> 01:44:39,569
they belong make sure our systems were

2063
01:44:38,279 --> 01:44:42,738
doing that work well and we're

2064
01:44:39,569 --> 01:44:44,549
comfortable we need to add some nice

2065
01:44:42,738 --> 01:44:46,078
abilities in there that we don't have

2066
01:44:44,550 --> 01:44:48,570
right now like the ability to spread

2067
01:44:46,078 --> 01:44:51,808
ground-cover around and things like that

2068
01:44:48,569 --> 01:44:53,549
and then we need to also tie the

2069
01:44:51,809 --> 01:44:55,498
lighting in so the lighting is still not

2070
01:44:53,550 --> 01:44:57,538
finished we need to bring that in get it

2071
01:44:55,498 --> 01:44:59,010
looking right so that's our next goal is

2072
01:44:57,538 --> 01:45:01,050
to make that all happen

2073
01:44:59,010 --> 01:45:02,909
once that's done we've kind of got our

2074
01:45:01,050 --> 01:45:04,469
game really set up and then we're just

2075
01:45:02,908 --> 01:45:06,598
on a game play code which we'll just

2076
01:45:04,469 --> 01:45:09,149
kind of do as we do not we're not game

2077
01:45:06,599 --> 01:45:10,800
designers here on and made hero so that

2078
01:45:09,149 --> 01:45:12,689
part of the process is gonna be pretty

2079
01:45:10,800 --> 01:45:15,690
odd hock and it's not really gonna be

2080
01:45:12,689 --> 01:45:16,888
about learning because well I can't

2081
01:45:15,689 --> 01:45:21,658
teach you that someone else is gonna

2082
01:45:16,889 --> 01:45:22,828
have to teach you that so we're getting

2083
01:45:21,658 --> 01:45:24,538
pretty close I guess is what I'm saying

2084
01:45:22,828 --> 01:45:26,099
we've done a lot of work and we've

2085
01:45:24,538 --> 01:45:28,319
pretty much built an entire game from

2086
01:45:26,099 --> 01:45:30,510
scratch and we're almost up to the part

2087
01:45:28,319 --> 01:45:34,768
where we would really step back and say

2088
01:45:30,510 --> 01:45:36,719
game designers it's your turn now but we

2089
01:45:34,769 --> 01:45:40,229
still have some quality stuff to do

2090
01:45:36,719 --> 01:45:41,698
before then and we will actually do the

2091
01:45:40,229 --> 01:45:44,610
game design ourselves for better for

2092
01:45:41,698 --> 01:45:47,038
worse after that process and it'll be

2093
01:45:44,609 --> 01:45:50,569
fun anyway to just have a game that we

2094
01:45:47,038 --> 01:45:54,868
made even if we're not particularly

2095
01:45:50,569 --> 01:45:56,219
talented at that part right I mean you

2096
01:45:54,868 --> 01:45:57,748
make the whole engine and get everything

2097
01:45:56,219 --> 01:46:00,210
working and support all this cool stuff

2098
01:45:57,748 --> 01:46:04,228
you might as well design a little game

2099
01:46:00,210 --> 01:46:07,559
in it right so yeah so we're getting

2100
01:46:04,229 --> 01:46:08,639
pretty close and you know doing the

2101
01:46:07,559 --> 01:46:10,079
world-building I think will be fun

2102
01:46:08,639 --> 01:46:11,639
because that is about programming and so

2103
01:46:10,078 --> 01:46:13,759
and you know tying that stuff together

2104
01:46:11,639 --> 01:46:15,199
so I think what enjoy doing that because

2105
01:46:13,760 --> 01:46:17,420
kind of rewarding to see the world come

2106
01:46:15,198 --> 01:46:19,029
together as well and all that stuff

2107
01:46:17,420 --> 01:46:21,529
anyway

2108
01:46:19,029 --> 01:46:23,689
that's it for today I'll be back here

2109
01:46:21,529 --> 01:46:25,550
next week to start on that side of the

2110
01:46:23,689 --> 01:46:27,408
process hope see you back here for that

2111
01:46:25,550 --> 01:46:28,519
till then half of programming I'll see

2112
01:46:27,408 --> 01:46:30,848
anywhere on the Internet tickets

2113
01:46:28,519 --> 01:46:30,849
everybody

