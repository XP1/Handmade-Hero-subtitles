1
00:00:01,610 --> 00:00:08,638
all right so hello everyone and welcome

2
00:00:06,509 --> 00:00:10,380
to hand made here the show where we code

3
00:00:08,638 --> 00:00:13,910
a complete game from scratch on Twitch

4
00:00:10,380 --> 00:00:16,769
live with no libraries no engine

5
00:00:13,910 --> 00:00:18,528
everything is coded from scratch because

6
00:00:16,769 --> 00:00:21,329
when you do something from scratch

7
00:00:18,528 --> 00:00:22,679
everyone knows it tastes better this is

8
00:00:21,329 --> 00:00:26,189
like when you make the chocolate chip

9
00:00:22,679 --> 00:00:27,929
cookies and they're fresh and awesome ok

10
00:00:26,189 --> 00:00:31,109
not the store-bought ones that are all

11
00:00:27,929 --> 00:00:34,500
crusty and moldy and nobody wants that

12
00:00:31,109 --> 00:00:36,829
nobody wants a licensed cookie ok you

13
00:00:34,500 --> 00:00:39,299
don't want all of that weird you know

14
00:00:36,829 --> 00:00:41,850
sort of the artificial flavors and

15
00:00:39,299 --> 00:00:42,929
colors you can't even read the label

16
00:00:41,850 --> 00:00:44,219
you're like looking at it I don't know

17
00:00:42,929 --> 00:00:46,019
what that's in there you don't want that

18
00:00:44,219 --> 00:00:47,640
right you don't want that giant build

19
00:00:46,020 --> 00:00:49,890
soup that's not going to work out for

20
00:00:47,640 --> 00:00:51,480
you but from scratch that's the only way

21
00:00:49,890 --> 00:00:53,789
we do it here it's delicious it's just

22
00:00:51,479 --> 00:00:55,078
like momma used to code and that's how

23
00:00:53,789 --> 00:00:58,230
we're doing it here on handmade hero

24
00:00:55,079 --> 00:01:00,239
anyway we have some debugging to do

25
00:00:58,229 --> 00:01:01,709
today because we made some changes

26
00:01:00,238 --> 00:01:03,779
yesterday and didn't have time to go

27
00:01:01,710 --> 00:01:04,948
through and debug them and so I want to

28
00:01:03,780 --> 00:01:07,349
go ahead and do that because I hate it

29
00:01:04,948 --> 00:01:09,810
when we know we've got some digging to

30
00:01:07,349 --> 00:01:11,368
do and haven't done it yet so if you

31
00:01:09,810 --> 00:01:13,320
want to follow along with that debugging

32
00:01:11,368 --> 00:01:16,170
and along with that chocolate chip

33
00:01:13,319 --> 00:01:18,658
cookie metaphorically speaking today is

34
00:01:16,170 --> 00:01:21,810
day 72 so if you have pre-ordered the

35
00:01:18,659 --> 00:01:23,729
source code and downloaded that you want

36
00:01:21,810 --> 00:01:25,290
to unzip day 71 source code because

37
00:01:23,728 --> 00:01:27,118
that's what I am starting with right now

38
00:01:25,290 --> 00:01:31,200
so if you want to follow along with it

39
00:01:27,118 --> 00:01:33,810
that is that is the way to do it so

40
00:01:31,200 --> 00:01:34,978
let's take a look some people on the

41
00:01:33,810 --> 00:01:37,769
forums were writing in what they

42
00:01:34,978 --> 00:01:40,349
suspected the bugs to be and they might

43
00:01:37,769 --> 00:01:42,149
be right we don't know like I said I had

44
00:01:40,349 --> 00:01:44,548
to stop last night I did not have time

45
00:01:42,150 --> 00:01:47,969
to step through and debug it so we don't

46
00:01:44,549 --> 00:01:50,310
know what you know what we actually did

47
00:01:47,969 --> 00:01:51,929
we don't know what might be wrong but

48
00:01:50,310 --> 00:01:53,790
somebody did send in one bug that's

49
00:01:51,930 --> 00:01:56,850
definitely a bug whether it's our butt

50
00:01:53,790 --> 00:01:59,070
or not it's definitely a bug so let me

51
00:01:56,849 --> 00:02:01,228
go take a look at here I will point out

52
00:01:59,069 --> 00:02:03,688
to you yes so when we were doing our cut

53
00:02:01,228 --> 00:02:05,159
and pasting yesterday we had one

54
00:02:03,688 --> 00:02:08,038
cut-and-paste problem which is we have

55
00:02:05,159 --> 00:02:11,099
not yet checked the Z coordinate for our

56
00:02:08,038 --> 00:02:13,169
rectangle three right again we don't

57
00:02:11,098 --> 00:02:13,500
even we haven't there's probably tons of

58
00:02:13,169 --> 00:02:14,669
bugs

59
00:02:13,500 --> 00:02:16,620
our math library just to be clear

60
00:02:14,669 --> 00:02:18,030
because like I said we're not really

61
00:02:16,620 --> 00:02:18,840
concerned super much about bugs at this

62
00:02:18,030 --> 00:02:20,939
point we're just trying to our

63
00:02:18,840 --> 00:02:22,650
architecture stuff when we get when it

64
00:02:20,939 --> 00:02:24,329
gets time to really sort of get them to

65
00:02:22,650 --> 00:02:27,030
it and we have everything in place where

66
00:02:24,330 --> 00:02:28,560
we want it we'll probably do more sort

67
00:02:27,030 --> 00:02:33,840
of testing and battle hardening of some

68
00:02:28,560 --> 00:02:35,219
of this stuff so yeah we've got some

69
00:02:33,840 --> 00:02:36,390
bugs in it but when someone points them

70
00:02:35,219 --> 00:02:37,500
out it's good to fix them this is

71
00:02:36,389 --> 00:02:40,199
obviously one of them we were not

72
00:02:37,500 --> 00:02:42,419
checking the z-coordinate here is for

73
00:02:40,199 --> 00:02:44,189
our is in rectangle you can see that

74
00:02:42,419 --> 00:02:48,389
most of the rectangle code is not

75
00:02:44,189 --> 00:02:50,400
actually based at all on actual elements

76
00:02:48,389 --> 00:02:52,649
that's the only one that is so when we

77
00:02:50,400 --> 00:02:53,969
change is in when we change rectangle

78
00:02:52,650 --> 00:02:55,080
dimensions when we went from two to

79
00:02:53,969 --> 00:02:57,209
three that's the only thing that really

80
00:02:55,080 --> 00:02:58,920
had change it seems like everything else

81
00:02:57,209 --> 00:03:00,569
is pretty much just in terms of the

82
00:02:58,919 --> 00:03:03,059
underlying vectors and dozen really have

83
00:03:00,569 --> 00:03:04,889
to change so there is that the other

84
00:03:03,060 --> 00:03:08,580
thing that someone wrote in and pointed

85
00:03:04,889 --> 00:03:10,949
out which is also a bug is inside our

86
00:03:08,580 --> 00:03:12,900
world code yesterday we were just kind

87
00:03:10,949 --> 00:03:14,549
of going through again and part of that

88
00:03:12,900 --> 00:03:16,549
giant change removing everything going

89
00:03:14,550 --> 00:03:20,610
directly to three-dimensional everywhere

90
00:03:16,549 --> 00:03:23,849
was that when we were doing a sort of

91
00:03:20,610 --> 00:03:25,590
the the words that where is it at here

92
00:03:23,849 --> 00:03:27,120
the thing that we were using only for

93
00:03:25,590 --> 00:03:29,700
temporary world building it was this

94
00:03:27,120 --> 00:03:32,189
chunked position from tile position this

95
00:03:29,699 --> 00:03:34,409
thing right here when we were doing our

96
00:03:32,189 --> 00:03:36,719
multiplication to multiply out where the

97
00:03:34,409 --> 00:03:38,430
tot where stuff was in tile space we

98
00:03:36,719 --> 00:03:40,379
were using chunk diamond meters we're

99
00:03:38,430 --> 00:03:42,689
really opposed to be tile side meters

100
00:03:40,379 --> 00:03:45,209
right because these are in tiles not

101
00:03:42,689 --> 00:03:46,859
chunks that we wanted to do here and so

102
00:03:45,209 --> 00:03:48,239
that was actually making the world it

103
00:03:46,860 --> 00:03:50,100
would make the world much more sparse

104
00:03:48,239 --> 00:03:51,000
because they've read every you know time

105
00:03:50,099 --> 00:03:52,949
we were thought we were putting things

106
00:03:51,000 --> 00:03:54,659
kind of at tile boundaries and again we

107
00:03:52,949 --> 00:03:56,939
don't have tiles anymore so this is just

108
00:03:54,659 --> 00:03:58,709
a positioning aid so we could still kind

109
00:03:56,939 --> 00:04:01,949
of make some tile based stuff before we

110
00:03:58,709 --> 00:04:06,900
go and do something more complicated but

111
00:04:01,949 --> 00:04:08,459
it's definitely a bug so yeah I guess

112
00:04:06,900 --> 00:04:09,870
this is no longer had a marred product

113
00:04:08,459 --> 00:04:12,689
either at the moment because this is

114
00:04:09,870 --> 00:04:15,180
actually just going to be multiplying

115
00:04:12,689 --> 00:04:18,269
this vector by a scalar and that's about

116
00:04:15,180 --> 00:04:20,009
it and let's take a look here okay so

117
00:04:18,269 --> 00:04:21,478
that's two bugs that people wrote in and

118
00:04:20,009 --> 00:04:24,000
found on the forums kind of nice to have

119
00:04:21,478 --> 00:04:25,709
it's kind of like having a giant set of

120
00:04:24,000 --> 00:04:27,180
code reviewers who just like look for

121
00:04:25,709 --> 00:04:30,989
bugs all taking her

122
00:04:27,180 --> 00:04:34,740
but I it's kind of a real nice bonus

123
00:04:30,990 --> 00:04:36,180
of doing all this stuff live is and and

124
00:04:34,740 --> 00:04:38,519
and having the source code available

125
00:04:36,180 --> 00:04:42,509
right is this like you kind of get free

126
00:04:38,519 --> 00:04:44,819
debugging services kind of cool anyway

127
00:04:42,509 --> 00:04:47,550
but so I I don't know if that will

128
00:04:44,819 --> 00:04:50,939
actually fix the problems the initial

129
00:04:47,550 --> 00:04:52,680
bugs were having it might not and so

130
00:04:50,939 --> 00:04:53,910
well and that for some reason it looks

131
00:04:52,680 --> 00:04:54,900
like changing that because we were not

132
00:04:53,910 --> 00:04:58,470
getting this yesterday looks like

133
00:04:54,899 --> 00:05:00,508
changing that was causing a problem with

134
00:04:58,470 --> 00:05:02,430
our our map into chunks face call it as

135
00:05:00,509 --> 00:05:06,270
well so I don't know what that's about

136
00:05:02,430 --> 00:05:08,300
that seems a little bit odd why is it

137
00:05:06,269 --> 00:05:18,060
complaining

138
00:05:08,300 --> 00:05:22,710
well sorry I'm pretty thirsty let's take

139
00:05:18,060 --> 00:05:24,689
a look at what we computed here get a

140
00:05:22,709 --> 00:05:27,598
little warmed up here all right so we

141
00:05:24,689 --> 00:05:31,348
have an offset which is going to be

142
00:05:27,598 --> 00:05:34,649
whatever what is this actually computing

143
00:05:31,348 --> 00:05:35,939
XY and Z no no that's not what I wanted

144
00:05:34,649 --> 00:05:37,500
to view I wanted to view this we're in

145
00:05:35,939 --> 00:05:40,740
the wrong space here that's I want of

146
00:05:37,500 --> 00:05:42,598
view 132 is the offset what is our tile

147
00:05:40,740 --> 00:05:45,829
though this is just an hour thing to map

148
00:05:42,598 --> 00:05:48,598
back to our canonical coordinates our

149
00:05:45,829 --> 00:05:49,948
tile relative is still yes so this is

150
00:05:48,598 --> 00:05:51,870
another one of those once the things get

151
00:05:49,949 --> 00:05:54,960
large so you remember I said this

152
00:05:51,870 --> 00:05:56,519
yesterday in fact I was like when we

153
00:05:54,959 --> 00:05:57,959
were writing this I was like well we can

154
00:05:56,519 --> 00:05:59,639
we could take advantage of map in a

155
00:05:57,959 --> 00:06:01,138
chunk space and just do it that way but

156
00:05:59,639 --> 00:06:02,460
it's going to be a precision problem

157
00:06:01,139 --> 00:06:03,750
well this is exactly the precision

158
00:06:02,459 --> 00:06:07,019
problem I was talking about right as

159
00:06:03,750 --> 00:06:09,509
these numbers get larger the precision

160
00:06:07,019 --> 00:06:11,129
is going to go down and we end up in

161
00:06:09,509 --> 00:06:14,189
this circumstance where it's having

162
00:06:11,129 --> 00:06:19,500
trouble figuring out you know which

163
00:06:14,189 --> 00:06:21,478
which tile it goes in but which top

164
00:06:19,500 --> 00:06:23,788
chunk it goes I should say but we don't

165
00:06:21,478 --> 00:06:25,879
super care about that right now but what

166
00:06:23,788 --> 00:06:27,689
I do want to say just again is like

167
00:06:25,879 --> 00:06:29,819
eventually what I think we're going to

168
00:06:27,689 --> 00:06:31,199
want to do for building the world we're

169
00:06:29,819 --> 00:06:33,029
going to do the same thing we did for

170
00:06:31,199 --> 00:06:35,788
simulating the world since we want to be

171
00:06:33,029 --> 00:06:38,309
able to build really huge world's what

172
00:06:35,788 --> 00:06:40,139
we want to be able to do is just build a

173
00:06:38,310 --> 00:06:40,800
local region doing everything in float

174
00:06:40,139 --> 00:06:42,658
and then

175
00:06:40,800 --> 00:06:44,728
move that region over so like when we do

176
00:06:42,658 --> 00:06:47,069
you know based on rooms or we we sort of

177
00:06:44,728 --> 00:06:49,620
say here's an area that we're making and

178
00:06:47,069 --> 00:06:51,330
we make that area and then we can sort

179
00:06:49,620 --> 00:06:53,370
of move our like focus over somewhere

180
00:06:51,329 --> 00:06:55,318
else and then do again all of the stuff

181
00:06:53,370 --> 00:06:57,538
around a local coordinate origin and

182
00:06:55,319 --> 00:06:59,629
that again is just to let us scale to

183
00:06:57,538 --> 00:07:01,649
like these really really huge worlds

184
00:06:59,629 --> 00:07:02,819
which again we don't necessarily know

185
00:07:01,649 --> 00:07:03,839
that we need but I just saying I wanted

186
00:07:02,819 --> 00:07:05,189
to show how to do on the stream because

187
00:07:03,839 --> 00:07:06,359
it's more complicated than just throwing

188
00:07:05,189 --> 00:07:07,500
everything in a float and then that's

189
00:07:06,360 --> 00:07:12,300
never letting the world get big enough

190
00:07:07,500 --> 00:07:15,089
to care and it may let us do some fun

191
00:07:12,300 --> 00:07:18,228
stuff like allowing you to generate a

192
00:07:15,089 --> 00:07:23,279
game it'll take you a year to play and

193
00:07:18,228 --> 00:07:24,750
and somebody would do it you know that

194
00:07:23,279 --> 00:07:26,848
if we shipped a game that took a year to

195
00:07:24,750 --> 00:07:28,079
play there be a player who would not

196
00:07:26,848 --> 00:07:31,019
only do it but stream the whole thing

197
00:07:28,079 --> 00:07:31,529
right so who knows you know why why

198
00:07:31,019 --> 00:07:34,228
fight it

199
00:07:31,529 --> 00:07:37,378
why fight it just just do the code and

200
00:07:34,228 --> 00:07:38,668
let it go so so I think we don't super

201
00:07:37,379 --> 00:07:40,620
care with that we can just expand our

202
00:07:38,668 --> 00:07:41,818
epsilon for now but that's really and we

203
00:07:40,620 --> 00:07:43,050
already have the to do about it which

204
00:07:41,819 --> 00:07:45,689
basically says we're going to have to

205
00:07:43,050 --> 00:07:47,550
certify this we should be able to week

206
00:07:45,689 --> 00:07:50,310
when we do our Rica nautical eyes we

207
00:07:47,550 --> 00:07:52,740
should be able to really get that

208
00:07:50,310 --> 00:07:55,500
epsilon down to essentially nothing once

209
00:07:52,740 --> 00:07:58,110
we are never once we are not relying on

210
00:07:55,500 --> 00:07:59,129
the build world stuff because we're

211
00:07:58,110 --> 00:08:01,080
always going to be around that local

212
00:07:59,129 --> 00:08:03,028
origin and we should be able to make it

213
00:08:01,079 --> 00:08:04,468
so it's really not that bad but for now

214
00:08:03,028 --> 00:08:06,089
that's definitely the case that we're

215
00:08:04,468 --> 00:08:08,519
going to run into those and I don't know

216
00:08:06,089 --> 00:08:09,869
how bad we're going to run to them let

217
00:08:08,519 --> 00:08:11,848
me double check to make sure that's yeah

218
00:08:09,870 --> 00:08:14,218
I just want to make sure that that's not

219
00:08:11,848 --> 00:08:18,089
something else but see what the chunk

220
00:08:14,218 --> 00:08:22,468
game is here chunk Jim actually look at

221
00:08:18,089 --> 00:08:25,888
the chunk / - yeah wow that's off by a

222
00:08:22,468 --> 00:08:27,899
lot that's off by like 0.01 right that's

223
00:08:25,889 --> 00:08:31,740
just I that's just a really really large

224
00:08:27,899 --> 00:08:34,139
error but yeah I don't think there's

225
00:08:31,740 --> 00:08:35,908
anything bad going on there I really

226
00:08:34,139 --> 00:08:38,158
just think that's you can't build the

227
00:08:35,908 --> 00:08:41,009
world that goes out that far and expect

228
00:08:38,158 --> 00:08:43,620
to get that that level of error there is

229
00:08:41,009 --> 00:08:46,230
that even gonna be enough I thought be

230
00:08:43,620 --> 00:08:49,049
not yeah so maybe that's not enough to

231
00:08:46,230 --> 00:08:50,579
do oh well alright so I guess it was

232
00:08:49,049 --> 00:08:52,859
just that fact that we were spreading

233
00:08:50,578 --> 00:08:54,299
the world out that was it everything

234
00:08:52,860 --> 00:08:56,789
else was fine

235
00:08:54,299 --> 00:08:58,319
we looks like we did everything else

236
00:08:56,789 --> 00:09:03,469
okay as far as I can tell from here

237
00:08:58,320 --> 00:09:03,470
anyway looks about right to me

238
00:09:04,909 --> 00:09:12,480
awesome site so we'll have to do a

239
00:09:10,589 --> 00:09:16,140
little bit of work with that apparently

240
00:09:12,480 --> 00:09:19,079
you can jump up over the world now check

241
00:09:16,139 --> 00:09:20,759
this out when I yeah

242
00:09:19,078 --> 00:09:22,199
I'm able to kind of go up into the next

243
00:09:20,759 --> 00:09:23,909
tier and then land back down we're gonna

244
00:09:22,200 --> 00:09:26,820
we'll have to take a look at our Z

245
00:09:23,909 --> 00:09:30,328
handling as so our Z handling is is not

246
00:09:26,820 --> 00:09:32,220
quite right yet that's for sure

247
00:09:30,328 --> 00:09:33,208
so we'll have to take a look at that but

248
00:09:32,220 --> 00:09:35,459
that's okay that's what we're supposed

249
00:09:33,208 --> 00:09:35,939
to be doing currently anyway that was

250
00:09:35,458 --> 00:09:39,599
awesome

251
00:09:35,940 --> 00:09:41,190
I don't know why it's kind of weird it's

252
00:09:39,600 --> 00:09:45,990
like you jump twice and do it alright so

253
00:09:41,190 --> 00:09:47,970
let's take a look at that look let's

254
00:09:45,990 --> 00:09:49,769
take a look at that that's pretty funny

255
00:09:47,970 --> 00:09:52,889
and I want to see what's going on there

256
00:09:49,769 --> 00:09:55,769
as you can see we also on our little

257
00:09:52,889 --> 00:09:57,539
to-do thing here we've got some other

258
00:09:55,769 --> 00:09:59,190
things that we want to do with C so I

259
00:09:57,539 --> 00:10:01,139
think you know we'll just kind of spend

260
00:09:59,190 --> 00:10:02,399
some some more Z time I want to take a

261
00:10:01,139 --> 00:10:11,458
look at what's going on here with this

262
00:10:02,399 --> 00:10:16,470
particular bug I know that we kind of

263
00:10:11,458 --> 00:10:21,479
quit we hastily moved the processing for

264
00:10:16,470 --> 00:10:24,269
the Z equations of motion right we move

265
00:10:21,480 --> 00:10:27,930
those into we rolled them essentially

266
00:10:24,269 --> 00:10:29,100
into the the rest of the computations

267
00:10:27,929 --> 00:10:31,828
for the equations of motion so they

268
00:10:29,100 --> 00:10:34,500
operate exactly the way that they used

269
00:10:31,828 --> 00:10:38,698
to operate right and so the way that we

270
00:10:34,500 --> 00:10:41,399
did that was we went in here and we made

271
00:10:38,698 --> 00:10:44,338
the acceleration of the guy be negative

272
00:10:41,399 --> 00:10:46,198
9.8 which is negative m/s squared that's

273
00:10:44,339 --> 00:10:50,130
the that's gravity right this is just

274
00:10:46,198 --> 00:10:51,569
it's just gravity and then what we did

275
00:10:50,129 --> 00:10:52,919
is we just rolled that into the

276
00:10:51,570 --> 00:10:54,540
acceleration and allowed it to get

277
00:10:52,919 --> 00:10:55,649
computed along with the acceleration

278
00:10:54,539 --> 00:10:58,500
that was going on in the horizontal

279
00:10:55,649 --> 00:11:00,839
plane and that seems ok I don't think

280
00:10:58,500 --> 00:11:03,778
there's there's anything strange going

281
00:11:00,839 --> 00:11:06,780
on there it doesn't look like so I think

282
00:11:03,778 --> 00:11:10,889
we can probably say that that's fine

283
00:11:06,779 --> 00:11:13,439
for now then what we did at the end is

284
00:11:10,889 --> 00:11:18,149
we took a look to see whether the

285
00:11:13,440 --> 00:11:20,480
location of the guy was below the the

286
00:11:18,149 --> 00:11:24,750
sort of the low bar right below the

287
00:11:20,480 --> 00:11:26,789
Jimmy below the the ground if you will

288
00:11:24,750 --> 00:11:29,340
which is zero and if it was we would set

289
00:11:26,789 --> 00:11:34,879
it back up to zero and again that seems

290
00:11:29,340 --> 00:11:37,710
fine nothing particularly weird there

291
00:11:34,879 --> 00:11:40,049
but one thing that we didn't sort of do

292
00:11:37,710 --> 00:11:44,150
too much about was the sort of the thing

293
00:11:40,049 --> 00:11:48,209
where you actually do the jump code I

294
00:11:44,149 --> 00:11:52,289
believe where is our jump code there it

295
00:11:48,210 --> 00:11:54,930
is I believe that our con he rode easy

296
00:11:52,289 --> 00:11:57,990
handling maybe a little where is it now

297
00:11:54,929 --> 00:11:59,609
it looks good so what's our our DZ is

298
00:11:57,990 --> 00:12:01,560
three so we'd be going up

299
00:11:59,610 --> 00:12:04,950
so we're flat setting the velocity of

300
00:12:01,559 --> 00:12:07,349
our guy to basically go up whenever the

301
00:12:04,950 --> 00:12:10,320
the DS that you know that space bar goes

302
00:12:07,350 --> 00:12:13,170
down if that's the case I would have

303
00:12:10,320 --> 00:12:16,260
expected the jumping to look roughly the

304
00:12:13,169 --> 00:12:18,929
same as it was looking so it's a little

305
00:12:16,259 --> 00:12:20,700
bit odd that it's not and I'm not sure

306
00:12:18,929 --> 00:12:22,409
exactly what's going on there so I kind

307
00:12:20,700 --> 00:12:23,640
of think we may have to step through

308
00:12:22,409 --> 00:12:26,039
here and just take a little look at

309
00:12:23,639 --> 00:12:29,069
what's going on because I can't Intuit

310
00:12:26,039 --> 00:12:31,980
anything obvious it's going wrong there

311
00:12:29,070 --> 00:12:36,060
again we pull out the Z here right in

312
00:12:31,980 --> 00:12:38,580
order to get the entity Z we use meters

313
00:12:36,059 --> 00:12:39,929
to pixels as we were before and we just

314
00:12:38,580 --> 00:12:41,879
kind of roll that into the y coordinate

315
00:12:39,929 --> 00:12:43,799
and that's how we're having him jump up

316
00:12:41,879 --> 00:12:46,409
and down but he used to go much further

317
00:12:43,799 --> 00:12:50,219
and so now I'm wondering why he is it

318
00:12:46,409 --> 00:12:51,689
and so let's just go ahead and see what

319
00:12:50,220 --> 00:12:57,889
happens the first time through that

320
00:12:51,690 --> 00:12:57,890
seems pretty reasonable to me so

321
00:12:58,710 --> 00:13:06,629
I don't know but all seems fine so and

322
00:13:04,559 --> 00:13:08,309
then I guess we also have the other bug

323
00:13:06,629 --> 00:13:09,870
to look at which which I'm going to look

324
00:13:08,309 --> 00:13:11,759
at separate I'm going to look at after

325
00:13:09,870 --> 00:13:14,399
this one which is why you're able to

326
00:13:11,759 --> 00:13:17,309
kind of push yourself up into the next Z

327
00:13:14,399 --> 00:13:19,889
bracket and not go back down I guess

328
00:13:17,309 --> 00:13:22,559
that would happen if the jump height if

329
00:13:19,889 --> 00:13:27,289
you could get high enough in the jump to

330
00:13:22,559 --> 00:13:29,639
go up then really this I mean

331
00:13:27,289 --> 00:13:32,279
technically this right here would do it

332
00:13:29,639 --> 00:13:35,029
right because if you can jump let me

333
00:13:32,279 --> 00:13:35,029
draw this out

334
00:13:39,200 --> 00:13:49,590
hello there we go so the thing I'm

335
00:13:46,019 --> 00:13:51,929
thinking about here is just we we do

336
00:13:49,590 --> 00:13:57,120
that is what would happen the jump code

337
00:13:51,929 --> 00:13:59,459
would do exactly what I just said in the

338
00:13:57,120 --> 00:14:04,529
case where you imagine all right this is

339
00:13:59,460 --> 00:14:07,410
a side view and here is the current tile

340
00:14:04,529 --> 00:14:10,439
ABS tile Z so this is like this is our

341
00:14:07,409 --> 00:14:14,490
ABS tile Z that we're on right we're in

342
00:14:10,440 --> 00:14:16,380
this chunk right I should actually say

343
00:14:14,490 --> 00:14:19,370
ABS tile G we can just say our trunk Z

344
00:14:16,379 --> 00:14:23,639
right so we're in this chunk right now

345
00:14:19,370 --> 00:14:29,730
and here is another chunk right well

346
00:14:23,639 --> 00:14:31,889
when we jump up right our guy leaves the

347
00:14:29,730 --> 00:14:35,670
sort of the baseline which is zero and

348
00:14:31,889 --> 00:14:39,990
if he were to cross up high enough that

349
00:14:35,669 --> 00:14:43,289
he went above the next chunk Z right

350
00:14:39,990 --> 00:14:46,379
chunk z plus one then when he came back

351
00:14:43,289 --> 00:14:50,009
down his we're just checking for his

352
00:14:46,379 --> 00:14:51,360
position his relative position meaning

353
00:14:50,009 --> 00:14:55,500
his position relative to the camera

354
00:14:51,360 --> 00:14:57,210
right to go less than 0 and if it is

355
00:14:55,500 --> 00:15:00,330
this relative the camera goes less than

356
00:14:57,210 --> 00:15:04,019
zero then we just go ahead and say okay

357
00:15:00,330 --> 00:15:06,030
he he stops right he stops here so you

358
00:15:04,019 --> 00:15:07,049
would always jump up and land on the

359
00:15:06,029 --> 00:15:09,720
thing it would be kind of like you know

360
00:15:07,049 --> 00:15:11,339
a Mario situation or not Mario I guess

361
00:15:09,720 --> 00:15:12,470
Mario didn't si do this but you know in

362
00:15:11,340 --> 00:15:14,030
a platformer where

363
00:15:12,470 --> 00:15:16,700
you're standing on something and you

364
00:15:14,029 --> 00:15:19,129
jump up and then you can pass through

365
00:15:16,700 --> 00:15:20,840
this thing this other platform but then

366
00:15:19,129 --> 00:15:21,889
when you land you land on it you know

367
00:15:20,840 --> 00:15:23,450
you go up like that

368
00:15:21,889 --> 00:15:25,730
that's essentially what's going on here

369
00:15:23,450 --> 00:15:27,350
because we're not preventing you from

370
00:15:25,730 --> 00:15:29,240
jumping up through things and then

371
00:15:27,350 --> 00:15:30,980
you're landing on them and we don't even

372
00:15:29,240 --> 00:15:33,440
check right all we're doing is checking

373
00:15:30,980 --> 00:15:36,620
for less than Z less than zero that

374
00:15:33,440 --> 00:15:37,850
again that's the camera relative Z all

375
00:15:36,620 --> 00:15:39,169
we're doing is checking for the Z less

376
00:15:37,850 --> 00:15:41,360
than zero and since we're only checking

377
00:15:39,169 --> 00:15:43,819
for the Z less than zero what that means

378
00:15:41,360 --> 00:15:45,350
is that it doesn't even matter if

379
00:15:43,820 --> 00:15:47,660
there's anything there right you don't

380
00:15:45,350 --> 00:15:49,639
do landing on something you just have to

381
00:15:47,659 --> 00:15:52,879
go above the zero line and come back

382
00:15:49,639 --> 00:15:55,069
down so probably that's roughly what's

383
00:15:52,879 --> 00:15:56,840
happening I'm guessing but that still

384
00:15:55,070 --> 00:15:59,450
doesn't explain why we're seeing why it

385
00:15:56,840 --> 00:16:01,879
looks so weird when you do it like I

386
00:15:59,450 --> 00:16:03,770
don't understand why we're getting that

387
00:16:01,879 --> 00:16:08,029
sort of behavior where it's that little

388
00:16:03,769 --> 00:16:09,949
tiny jump like that it just doesn't it

389
00:16:08,029 --> 00:16:11,149
doesn't look right so I want to debug

390
00:16:09,950 --> 00:16:13,100
that first and find out what's going on

391
00:16:11,149 --> 00:16:14,509
there and maybe that will also be a clue

392
00:16:13,100 --> 00:16:19,070
to what's going on I want to take a

393
00:16:14,509 --> 00:16:21,830
quick look to as how for how we update

394
00:16:19,070 --> 00:16:25,310
the camera here I just want to see how

395
00:16:21,830 --> 00:16:28,250
that worked so it looks like we we are

396
00:16:25,309 --> 00:16:29,839
just using the chunk Z for the camera so

397
00:16:28,250 --> 00:16:30,889
right now we're not even really doing Z

398
00:16:29,840 --> 00:16:33,139
tracking the camera

399
00:16:30,889 --> 00:16:34,519
other than the chunk Z so I feel like

400
00:16:33,139 --> 00:16:38,240
that shouldn't have really been a

401
00:16:34,519 --> 00:16:40,029
problem oh nope that's the problem right

402
00:16:38,240 --> 00:16:43,850
there

403
00:16:40,029 --> 00:16:46,879
yeah so we actually are we're fully

404
00:16:43,850 --> 00:16:48,800
tracking the guys motion with our Z so

405
00:16:46,879 --> 00:16:50,480
really when you were jumping you were

406
00:16:48,799 --> 00:16:52,609
seeing the offset of the guy and the

407
00:16:50,480 --> 00:16:53,810
camera was following him up so that's

408
00:16:52,610 --> 00:16:55,430
actually what was happening and that's

409
00:16:53,809 --> 00:16:59,389
the cause of the entire problem if we

410
00:16:55,429 --> 00:17:00,979
didn't do that I think we'd be okay well

411
00:16:59,389 --> 00:17:03,350
actually I guess I can't quite do that

412
00:17:00,980 --> 00:17:04,880
yet since we didn't write that code yet

413
00:17:03,350 --> 00:17:07,490
but so let me just comment out the

414
00:17:04,880 --> 00:17:09,950
camera following and now we should yeah

415
00:17:07,490 --> 00:17:12,309
we should have the ability to jump the

416
00:17:09,950 --> 00:17:16,819
way we were jumping before and we do

417
00:17:12,309 --> 00:17:21,710
yeah looks about right

418
00:17:16,819 --> 00:17:23,839
yeah so okay I'm not sure exactly what

419
00:17:21,710 --> 00:17:26,120
we want to do with that for the moment

420
00:17:23,839 --> 00:17:27,879
we can do this and then because really

421
00:17:26,119 --> 00:17:30,799
what we want to do is we want to go

422
00:17:27,880 --> 00:17:33,020
actually work on ours our Z stuff anyway

423
00:17:30,799 --> 00:17:37,069
so it's possible that we could do a

424
00:17:33,019 --> 00:17:40,369
thing where we kind of do only we do

425
00:17:37,069 --> 00:17:41,839
only the x and y coordinates of course

426
00:17:40,369 --> 00:17:44,179
these are world positions here so we

427
00:17:41,839 --> 00:17:51,019
can't do that directly but what we could

428
00:17:44,180 --> 00:17:55,130
do is something more like you know this

429
00:17:51,019 --> 00:18:00,819
sort of thing where we take a chunk X

430
00:17:55,130 --> 00:18:02,780
and we do that one chunk X so on

431
00:18:00,819 --> 00:18:06,710
actually know what I could do to I can

432
00:18:02,779 --> 00:18:10,279
just do I could just save the Z can Z

433
00:18:06,710 --> 00:18:13,600
offset and grab off whatever that

434
00:18:10,279 --> 00:18:16,399
actually is right so here's offset dot Z

435
00:18:13,599 --> 00:18:18,230
and then I can go ahead and just say you

436
00:18:16,400 --> 00:18:20,780
know what the new camera P does equal to

437
00:18:18,230 --> 00:18:24,920
stored P but then we restore its offset

438
00:18:20,779 --> 00:18:26,779
Z to whatever it used to be right like

439
00:18:24,920 --> 00:18:29,750
so and that would prevent the camera

440
00:18:26,779 --> 00:18:32,149
from tracking us in Z and then we're

441
00:18:29,750 --> 00:18:34,519
back to you know what we're doing for

442
00:18:32,150 --> 00:18:35,090
now we should still be able to yeah

443
00:18:34,519 --> 00:18:36,109
there we go

444
00:18:35,089 --> 00:18:37,939
we should still be able to virtually

445
00:18:36,109 --> 00:18:39,349
jump up a level by just keep jumping

446
00:18:37,940 --> 00:18:42,080
because remember we don't cap your jump

447
00:18:39,349 --> 00:18:43,789
height you have infinite jumps so I feel

448
00:18:42,079 --> 00:18:46,490
like we should still be able do that

449
00:18:43,789 --> 00:18:50,359
reliably and we can and that again just

450
00:18:46,490 --> 00:18:53,500
moves us up one layer alright so that

451
00:18:50,359 --> 00:18:55,669
all makes reasonable sense I think

452
00:18:53,500 --> 00:18:59,289
nothing particularly weird going on

453
00:18:55,670 --> 00:18:59,289
there to me

454
00:19:01,319 --> 00:19:08,278
but now we get down to some harder work

455
00:19:05,220 --> 00:19:10,950
here we kind of got to think about some

456
00:19:08,278 --> 00:19:13,648
of these things I have to admit I kind

457
00:19:10,950 --> 00:19:15,630
of want to do this one I know that it

458
00:19:13,648 --> 00:19:17,069
really I don't even know why like it's

459
00:19:15,630 --> 00:19:19,830
one of those obsessive things it's like

460
00:19:17,069 --> 00:19:21,089
why do we even care about that at all it

461
00:19:19,829 --> 00:19:23,069
doesn't even make any sense

462
00:19:21,089 --> 00:19:25,829
Ike I just want to do it just because I

463
00:19:23,069 --> 00:19:27,750
had said it was a puzzler and then it's

464
00:19:25,829 --> 00:19:30,058
like we we solved it without even

465
00:19:27,750 --> 00:19:31,679
realizing it and I just want to do it so

466
00:19:30,058 --> 00:19:36,599
I kind of feel like I'm just going to do

467
00:19:31,679 --> 00:19:38,850
that um because I want to I don't have

468
00:19:36,599 --> 00:19:41,579
any other reason I don't have any other

469
00:19:38,849 --> 00:19:43,678
reason I just want to see if we could do

470
00:19:41,579 --> 00:19:47,099
it so if you remember when we first did

471
00:19:43,679 --> 00:19:48,840
this I was like well you know we have

472
00:19:47,099 --> 00:19:51,480
these world positions which is saying

473
00:19:48,839 --> 00:19:53,970
where guys are in everything and then we

474
00:19:51,480 --> 00:19:56,278
store the entities we store where they

475
00:19:53,970 --> 00:19:58,259
are in the world via these you know

476
00:19:56,278 --> 00:20:02,250
these worlds entity block structures or

477
00:19:58,259 --> 00:20:04,048
whatever right and if you know what if

478
00:20:02,250 --> 00:20:07,079
you if you're looking at world entity

479
00:20:04,048 --> 00:20:09,480
blocks you know where that world entity

480
00:20:07,079 --> 00:20:11,220
block was in terms of chunk X Y &amp; Z like

481
00:20:09,480 --> 00:20:13,079
the chunk x y&amp;z is stored in a world

482
00:20:11,220 --> 00:20:17,278
chunk and all the world blocks are off

483
00:20:13,079 --> 00:20:19,829
of a world chunk so why would we then go

484
00:20:17,278 --> 00:20:22,048
ahead and store in the entity what its

485
00:20:19,829 --> 00:20:26,038
position was because we don't we don't

486
00:20:22,048 --> 00:20:28,740
need that right and so I feel like we

487
00:20:26,038 --> 00:20:32,038
can get away with no longer storing this

488
00:20:28,740 --> 00:20:33,628
right meaning we can still use the world

489
00:20:32,038 --> 00:20:36,240
position structure when we want to talk

490
00:20:33,628 --> 00:20:39,678
about a full world position but instead

491
00:20:36,240 --> 00:20:43,169
in in the actual entities themselves

492
00:20:39,679 --> 00:20:46,110
right we wouldn't need to store this

493
00:20:43,169 --> 00:20:47,850
world position at all right we could

494
00:20:46,109 --> 00:20:51,058
just we could just get rid of it

495
00:20:47,849 --> 00:20:53,250
entirely I think and instead just use

496
00:20:51,058 --> 00:20:55,048
the offset field in there inside the sin

497
00:20:53,250 --> 00:20:56,579
entity we could just use all we really

498
00:20:55,048 --> 00:20:58,319
need the story's just what the offset is

499
00:20:56,579 --> 00:21:00,869
from its chunk that's the only piece of

500
00:20:58,319 --> 00:21:02,759
information we actually need it because

501
00:21:00,869 --> 00:21:06,268
the chunk XY and Z will just be implicit

502
00:21:02,759 --> 00:21:09,269
when we iterate over them right and so I

503
00:21:06,269 --> 00:21:13,190
guess we do have one thing here where we

504
00:21:09,269 --> 00:21:14,900
try to store the invalid information in

505
00:21:13,190 --> 00:21:16,940
world entities p apiece director

506
00:21:14,900 --> 00:21:18,530
whatever there but we maybe will get can

507
00:21:16,940 --> 00:21:20,539
get rid of that too I don't know so

508
00:21:18,529 --> 00:21:22,490
let's just try it I just want to try it

509
00:21:20,539 --> 00:21:24,589
and see if we can solve this puzzle er

510
00:21:22,490 --> 00:21:27,140
which we had set up way back from when

511
00:21:24,589 --> 00:21:28,309
we originally did world positions so

512
00:21:27,140 --> 00:21:30,410
what I'm going to do first is I'm just

513
00:21:28,309 --> 00:21:32,269
going to flat out get rid of this right

514
00:21:30,410 --> 00:21:36,590
it's going away I'm going to see what

515
00:21:32,269 --> 00:21:37,940
code actually used it okay and something

516
00:21:36,589 --> 00:21:39,199
I do all the time right use comment

517
00:21:37,940 --> 00:21:40,670
something out and see where all your

518
00:21:39,200 --> 00:21:45,500
compiler eyes are now I know everyone

519
00:21:40,670 --> 00:21:48,830
whoever accessed it right so all right

520
00:21:45,500 --> 00:21:50,450
change it any location well chain

521
00:21:48,829 --> 00:21:55,220
generally location only accesses it to

522
00:21:50,450 --> 00:21:57,529
set it basically right let's see where

523
00:21:55,220 --> 00:22:00,500
it actually cares about that it looks to

524
00:21:57,529 --> 00:22:01,970
see if it's valid but we could get rid

525
00:22:00,500 --> 00:22:03,440
of that like I said we could make it so

526
00:22:01,970 --> 00:22:04,910
that people have to pass in some

527
00:22:03,440 --> 00:22:09,680
additional thing if they want invalid

528
00:22:04,910 --> 00:22:14,060
things so it seems like when we do

529
00:22:09,680 --> 00:22:17,210
change entity location raw all we really

530
00:22:14,059 --> 00:22:20,419
needed to know is where they were before

531
00:22:17,210 --> 00:22:23,059
right so we don't need to store it we

532
00:22:20,420 --> 00:22:24,950
wouldn't need to know where what chunk

533
00:22:23,059 --> 00:22:28,480
they were in so we need to know like

534
00:22:24,950 --> 00:22:30,259
where they came from world chunk wise

535
00:22:28,480 --> 00:22:33,710
but that's about it

536
00:22:30,259 --> 00:22:36,829
so it would mean that when we do change

537
00:22:33,710 --> 00:22:40,100
any location we would have to pass in a

538
00:22:36,829 --> 00:22:43,429
old position which we used to do right

539
00:22:40,099 --> 00:22:45,949
we used to pass in an old position and

540
00:22:43,430 --> 00:22:49,400
we would have to do that again in order

541
00:22:45,950 --> 00:22:51,440
to do the removal so do we care about

542
00:22:49,400 --> 00:22:54,380
that basically what it would mean is

543
00:22:51,440 --> 00:22:59,269
that our sim region when we unpack our

544
00:22:54,380 --> 00:23:01,520
entities right we would have to store in

545
00:22:59,269 --> 00:23:04,970
in the same region something that allows

546
00:23:01,519 --> 00:23:10,549
us to get back to where it where the the

547
00:23:04,970 --> 00:23:13,009
thing was right and I'm not sure that's

548
00:23:10,549 --> 00:23:15,799
a bad trade-off that seems like

549
00:23:13,009 --> 00:23:19,740
something that might be totally fine

550
00:23:15,799 --> 00:23:19,740
[Music]

551
00:23:21,470 --> 00:23:26,160
yeah I think I think I like that better

552
00:23:23,690 --> 00:23:28,740
basically all it needs is it needs to

553
00:23:26,160 --> 00:23:30,450
know what the world chunk is to

554
00:23:28,740 --> 00:23:32,910
basically be able to remove this thing

555
00:23:30,450 --> 00:23:36,200
and so we could just flat-out store a

556
00:23:32,910 --> 00:23:38,548
pointer to whatever the world chump was

557
00:23:36,200 --> 00:23:39,990
since we know that the low entities in

558
00:23:38,548 --> 00:23:42,509
there we know that the world chunk can't

559
00:23:39,990 --> 00:23:45,029
get removed so we could just say that

560
00:23:42,509 --> 00:23:49,349
you know when we do our sim entity when

561
00:23:45,029 --> 00:23:53,369
we pull something out into simulation we

562
00:23:49,349 --> 00:23:54,899
kind of just say oh you know we we go

563
00:23:53,369 --> 00:23:57,509
ahead and say there's the there's the

564
00:23:54,900 --> 00:23:59,759
world chunk which ever you know chunk it

565
00:23:57,509 --> 00:24:02,279
was in it's from this chunk right and

566
00:23:59,759 --> 00:24:04,408
then when somebody changes the location

567
00:24:02,279 --> 00:24:06,960
of entity they just pass in whatever the

568
00:24:04,409 --> 00:24:09,390
world chunk was where it used to be

569
00:24:06,960 --> 00:24:11,548
right so we pass in a world chunk here

570
00:24:09,390 --> 00:24:14,520
would say this is where it's from you

571
00:24:11,548 --> 00:24:18,269
know and then it would say where it

572
00:24:14,519 --> 00:24:20,250
wants it to be now and we wouldn't

573
00:24:18,269 --> 00:24:22,710
really need this new P init thing

574
00:24:20,250 --> 00:24:24,869
anymore probably in fact I don't

575
00:24:22,710 --> 00:24:26,889
actually know why it was doing it that

576
00:24:24,869 --> 00:24:29,598
way

577
00:24:26,888 --> 00:24:32,538
yeah why was it doing it that way

578
00:24:29,598 --> 00:24:35,378
I do not know why I was doing it that

579
00:24:32,538 --> 00:24:36,979
way it's a bit wonky to say the least

580
00:24:35,378 --> 00:24:40,069
but there we go

581
00:24:36,979 --> 00:24:42,409
so anyway yeah we pass a from chunk or

582
00:24:40,069 --> 00:24:44,118
you know when old chunk basically right

583
00:24:42,409 --> 00:24:48,109
and we could say this is old chunk as

584
00:24:44,118 --> 00:24:50,208
well and yeah and then we pass in the

585
00:24:48,108 --> 00:24:52,908
new P let's just go ahead and try that

586
00:24:50,209 --> 00:24:55,339
we would get rid of the the old P new P

587
00:24:52,909 --> 00:24:58,369
thing we would say don't worry about

588
00:24:55,338 --> 00:25:00,918
that at all and we don't really care

589
00:24:58,368 --> 00:25:04,488
about grabbing that old P out at all I

590
00:25:00,919 --> 00:25:06,589
don't think yeah I don't think we care

591
00:25:04,489 --> 00:25:09,499
about this at all we we only really care

592
00:25:06,588 --> 00:25:11,509
about being able to set it to invalid so

593
00:25:09,499 --> 00:25:13,129
I guess we'll leave that in the case

594
00:25:11,509 --> 00:25:15,199
that the new P was not valid that got

595
00:25:13,128 --> 00:25:17,118
passed in so we'll change Trinity

596
00:25:15,199 --> 00:25:18,619
location raw to take the old chunk and

597
00:25:17,118 --> 00:25:20,148
it'll just do that that way doesn't have

598
00:25:18,618 --> 00:25:23,269
to do a look up there anymore so that

599
00:25:20,148 --> 00:25:25,458
actually saves us a hash lookup and a

600
00:25:23,269 --> 00:25:27,108
traversal - well no just a hash to come

601
00:25:25,459 --> 00:25:28,369
I guess save as a hash lookup so that's

602
00:25:27,108 --> 00:25:31,128
good

603
00:25:28,368 --> 00:25:33,108
and then at the end when we do the new P

604
00:25:31,128 --> 00:25:35,778
assuming that that actually was correct

605
00:25:33,108 --> 00:25:40,509
we don't have to store it back I guess

606
00:25:35,778 --> 00:25:44,449
all we have to do is in the low entities

607
00:25:40,509 --> 00:25:48,229
sim entity it's it's a it's offset I

608
00:25:44,449 --> 00:25:50,599
guess now gets retained right so we

609
00:25:48,229 --> 00:25:53,479
would retain whatever that new P offset

610
00:25:50,598 --> 00:25:56,838
was and that I think is about it we

611
00:25:53,479 --> 00:25:58,399
don't have to initialize this at all so

612
00:25:56,838 --> 00:26:00,918
I think that's it and then when I go to

613
00:25:58,398 --> 00:26:03,498
change in any location raw right I come

614
00:26:00,919 --> 00:26:07,129
up here and now this just takes a world

615
00:26:03,499 --> 00:26:08,598
chunk and this is the old chunk so and

616
00:26:07,128 --> 00:26:14,628
we don't really have this assertion

617
00:26:08,598 --> 00:26:19,578
anymore we would then have to say this

618
00:26:14,628 --> 00:26:21,198
this code actually I guess excuse me

619
00:26:19,578 --> 00:26:24,918
it's a little more complicated because

620
00:26:21,199 --> 00:26:27,679
we don't we can't actually ask about our

621
00:26:24,919 --> 00:26:31,278
in same chunk well actually I guess we

622
00:26:27,679 --> 00:26:32,509
can if we have world chunk that actually

623
00:26:31,278 --> 00:26:37,429
does have the information that we need

624
00:26:32,509 --> 00:26:39,440
right so if we go to loop Stephon here

625
00:26:37,429 --> 00:26:40,440
yeah that actually just that so what we

626
00:26:39,440 --> 00:26:43,320
could do is say

627
00:26:40,440 --> 00:26:44,789
if old chunk and noopy are in same chunk

628
00:26:43,319 --> 00:26:46,559
you can just pass old chunk there and

629
00:26:44,789 --> 00:26:49,170
then are in same chunk we just need

630
00:26:46,559 --> 00:26:53,639
another one of those one that takes a

631
00:26:49,170 --> 00:26:55,289
world chunk right and it can still do

632
00:26:53,640 --> 00:26:57,660
basically the same thing but now instead

633
00:26:55,289 --> 00:26:59,399
it just checks off of a pretty

634
00:26:57,660 --> 00:27:01,440
straightforward that works exactly the

635
00:26:59,400 --> 00:27:03,330
same way so that's good so if that's the

636
00:27:01,440 --> 00:27:06,029
case we don't really have to do anything

637
00:27:03,329 --> 00:27:08,519
about it I guess then when we go in here

638
00:27:06,029 --> 00:27:10,740
if there was an old chunk then we just

639
00:27:08,519 --> 00:27:14,339
don't call get world chunk we already

640
00:27:10,740 --> 00:27:15,660
know what it was right so we can just go

641
00:27:14,339 --> 00:27:17,609
ahead and say that chunk equals old

642
00:27:15,660 --> 00:27:21,450
chunk that seems pretty straightforward

643
00:27:17,609 --> 00:27:23,309
right we don't even have to do any if

644
00:27:21,450 --> 00:27:25,110
because we already did the if so we can

645
00:27:23,309 --> 00:27:26,639
just get rid of that entirely and that

646
00:27:25,109 --> 00:27:29,789
goes away so there it is

647
00:27:26,640 --> 00:27:31,830
right bingo then we go ahead and check

648
00:27:29,789 --> 00:27:33,329
for new P that handling should be

649
00:27:31,829 --> 00:27:34,829
exactly the same I don't think anything

650
00:27:33,329 --> 00:27:38,179
change there at all so just leave that

651
00:27:34,829 --> 00:27:40,519
the way it was and that's it right I

652
00:27:38,180 --> 00:27:43,350
can't think of anything else

653
00:27:40,519 --> 00:27:47,490
particularly weird oops gotta rename

654
00:27:43,349 --> 00:27:50,579
that because we kept that PAP in so yeah

655
00:27:47,490 --> 00:27:54,839
that seems about right so when we do get

656
00:27:50,579 --> 00:27:56,869
sim space P we have a slightly harder

657
00:27:54,839 --> 00:27:59,009
situation to deal with here I suppose

658
00:27:56,869 --> 00:28:01,559
because now we have to be able to pass

659
00:27:59,009 --> 00:28:04,259
this stuff properly to we have to be

660
00:28:01,559 --> 00:28:07,440
able to forward the chunk information on

661
00:28:04,259 --> 00:28:10,049
right so we do get grit world chunk I'm

662
00:28:07,440 --> 00:28:11,549
sorry we do get some space P we want to

663
00:28:10,049 --> 00:28:17,339
pass that world chunk in so it can

664
00:28:11,549 --> 00:28:20,700
reconstruct where the guy should be that

665
00:28:17,339 --> 00:28:24,029
makes sense okay so if we're going to do

666
00:28:20,700 --> 00:28:25,920
that let's take a look at how that would

667
00:28:24,029 --> 00:28:27,720
function so who are all the people that

668
00:28:25,920 --> 00:28:30,210
call get some space P just want to take

669
00:28:27,720 --> 00:28:31,950
a look at them so basically if we load

670
00:28:30,210 --> 00:28:33,360
in any reference we get one from the

671
00:28:31,950 --> 00:28:41,009
symmetries week we have to pull low

672
00:28:33,359 --> 00:28:43,649
entity out ah darn that's going to kill

673
00:28:41,009 --> 00:28:47,450
us isn't it is there I don't think

674
00:28:43,650 --> 00:28:47,450
there's any way we can fix that ah

675
00:28:50,000 --> 00:28:56,750
well I tried you know I tried to solve

676
00:28:54,230 --> 00:28:58,450
the puzzler but we couldn't solve it so

677
00:28:56,750 --> 00:29:01,309
this is the thing that'll stop us

678
00:28:58,450 --> 00:29:04,610
basically entity references will stop us

679
00:29:01,309 --> 00:29:07,700
because the entity reference will not be

680
00:29:04,609 --> 00:29:10,969
able to figure out what chunk the entity

681
00:29:07,700 --> 00:29:19,059
is in because it doesn't query by

682
00:29:10,970 --> 00:29:24,589
location so sad so sad we almost did it

683
00:29:19,059 --> 00:29:26,710
but we can't can't do it so now we know

684
00:29:24,589 --> 00:29:29,990
that's fine

685
00:29:26,710 --> 00:29:31,759
we know the puzzle can't be solved well

686
00:29:29,990 --> 00:29:34,519
you know maybe someday we'll still be

687
00:29:31,759 --> 00:29:37,460
able to solve it but you know for now

688
00:29:34,519 --> 00:29:40,250
anyway unfortunately it can't be solved

689
00:29:37,460 --> 00:29:42,170
so let's go ahead and back that out and

690
00:29:40,250 --> 00:29:43,549
be disappointed about it at least I'm

691
00:29:42,170 --> 00:29:48,140
disappointed about it because I was kind

692
00:29:43,549 --> 00:29:50,389
of hoping we would be able to but and by

693
00:29:48,140 --> 00:29:52,670
the way I should also mention this is

694
00:29:50,390 --> 00:29:53,509
not uncommon for me I often try things

695
00:29:52,670 --> 00:29:56,840
like that

696
00:29:53,509 --> 00:30:00,680
just because I kind of want to tubes did

697
00:29:56,839 --> 00:30:04,369
I not restore that to its its games um

698
00:30:00,680 --> 00:30:05,870
that's not uncommon for me I often like

699
00:30:04,369 --> 00:30:08,239
try something I'm like I want to try

700
00:30:05,869 --> 00:30:09,949
this thing and then eventually through

701
00:30:08,240 --> 00:30:12,799
the code somewhere you find out I can't

702
00:30:09,950 --> 00:30:15,049
do it right and then happens to me all

703
00:30:12,799 --> 00:30:16,639
the time it's very very common but I

704
00:30:15,049 --> 00:30:18,829
still like to track us sometimes it does

705
00:30:16,640 --> 00:30:20,720
work and you never really know until you

706
00:30:18,829 --> 00:30:22,309
try it may be that you could have known

707
00:30:20,720 --> 00:30:23,839
that one I don't know that was kind of

708
00:30:22,309 --> 00:30:26,089
complicated it's hard to remember all

709
00:30:23,839 --> 00:30:30,980
those sorts of things so alright so now

710
00:30:26,089 --> 00:30:35,990
we know I'll write that here to do it

711
00:30:30,980 --> 00:30:40,940
seems like we have to store chunk XYZ

712
00:30:35,990 --> 00:30:44,269
with each entity because even though the

713
00:30:40,940 --> 00:30:50,230
sim region gathered doesn't need it at

714
00:30:44,269 --> 00:30:54,230
first and we could get by about it

715
00:30:50,230 --> 00:30:58,819
entity references pull in entities

716
00:30:54,230 --> 00:31:00,269
without going through their top chunk or

717
00:30:58,819 --> 00:31:06,229
I should say world chunk

718
00:31:00,269 --> 00:31:10,979
and thus still need to know the chunk

719
00:31:06,229 --> 00:31:12,808
XYZ all right well it's sad it's sad I

720
00:31:10,979 --> 00:31:16,619
wish we had an owl of disappointment to

721
00:31:12,808 --> 00:31:19,079
go with that RL shame we don't but if we

722
00:31:16,618 --> 00:31:21,558
did it would be flapping its little

723
00:31:19,079 --> 00:31:21,558
wings right now

724
00:31:22,098 --> 00:31:28,408
all right well another to do down though

725
00:31:26,239 --> 00:31:31,409
so we are making progress on the things

726
00:31:28,409 --> 00:31:33,479
we wanted to do this week and let's take

727
00:31:31,409 --> 00:31:34,859
a look at what we have next which one of

728
00:31:33,479 --> 00:31:36,179
these two we want to do so Minkowski

729
00:31:34,858 --> 00:31:38,458
inclusion test for sim region begin

730
00:31:36,179 --> 00:31:40,979
updatable bounce that's pretty easy we

731
00:31:38,459 --> 00:31:43,009
might as well do that let's go ahead and

732
00:31:40,979 --> 00:31:45,419
continue that because that's a good

733
00:31:43,009 --> 00:31:46,979
progress towards E and then maybe

734
00:31:45,419 --> 00:31:49,739
tomorrow will be our day where we start

735
00:31:46,979 --> 00:31:51,298
working on this up-and-down situation

736
00:31:49,739 --> 00:31:52,889
because that's really a thing where we

737
00:31:51,298 --> 00:31:55,648
were we're kind of have to put on our

738
00:31:52,888 --> 00:31:57,928
our for instance caps and and have a

739
00:31:55,648 --> 00:31:59,968
bunch of for instances like for instance

740
00:31:57,929 --> 00:32:01,739
I'm going upstairs for instance I want

741
00:31:59,969 --> 00:32:03,570
to go into a cave for instance I want to

742
00:32:01,739 --> 00:32:06,929
see a boss that's below me on a lower

743
00:32:03,569 --> 00:32:10,249
floor you know for instance is you know

744
00:32:06,929 --> 00:32:13,739
I'm talking about right for instances

745
00:32:10,249 --> 00:32:16,528
maybe you don't but anyway so Minkowski

746
00:32:13,739 --> 00:32:17,700
inclusion testing that's pretty easy and

747
00:32:16,528 --> 00:32:19,979
it's not even really you don't even have

748
00:32:17,700 --> 00:32:21,749
to do Minkowski you could we can we'll

749
00:32:19,979 --> 00:32:24,209
talk about this because it's not even

750
00:32:21,749 --> 00:32:26,368
Tevan have to be phrased in terms of

751
00:32:24,209 --> 00:32:32,339
Minkowski but basically all I'm talking

752
00:32:26,368 --> 00:32:34,019
about is we have currently inside our

753
00:32:32,338 --> 00:32:36,658
sim region this concept of the entity

754
00:32:34,019 --> 00:32:39,058
gather where we go through in fact it's

755
00:32:36,659 --> 00:32:41,129
right here right we go through all of

756
00:32:39,058 --> 00:32:44,459
the things in the world that are within

757
00:32:41,128 --> 00:32:47,638
a certain boundary and we basically ask

758
00:32:44,459 --> 00:32:50,489
like what you know for all of the

759
00:32:47,638 --> 00:32:52,949
entities here which one of them which of

760
00:32:50,489 --> 00:32:53,999
them overlaps this boundary and those

761
00:32:52,950 --> 00:32:55,619
are the ones we're going to put into

762
00:32:53,999 --> 00:32:57,328
this either simulation right it's a

763
00:32:55,618 --> 00:32:59,668
spatial it's a spatially bounded

764
00:32:57,328 --> 00:33:00,989
simulation and we did that because we

765
00:32:59,669 --> 00:33:01,979
know we can't simulate all the entities

766
00:33:00,989 --> 00:33:04,200
in the world at a time so we're just

767
00:33:01,979 --> 00:33:06,450
simulating them in little geographic

768
00:33:04,200 --> 00:33:07,679
regions so that they can like interact

769
00:33:06,450 --> 00:33:09,889
with each other in that region and then

770
00:33:07,679 --> 00:33:13,200
we can simulate other regions and so on

771
00:33:09,888 --> 00:33:14,069
now the problem with the code that we

772
00:33:13,200 --> 00:33:15,420
wrote in the reason

773
00:33:14,069 --> 00:33:17,990
I said we should update it just to kind

774
00:33:15,420 --> 00:33:19,890
of be a little bit cleaner about it

775
00:33:17,990 --> 00:33:21,769
problem with the code that we wrote is

776
00:33:19,890 --> 00:33:23,820
that currently it doesn't actually

777
00:33:21,769 --> 00:33:26,369
respect the concept that entities

778
00:33:23,819 --> 00:33:28,589
themselves have a size and so what was

779
00:33:26,369 --> 00:33:30,479
happening before and this has nothing to

780
00:33:28,589 --> 00:33:32,879
do with Z specifically this was true

781
00:33:30,480 --> 00:33:34,140
even when we weren't talking about Z but

782
00:33:32,880 --> 00:33:36,180
it makes sense to handle it in Z as well

783
00:33:34,140 --> 00:33:38,060
because we we also want to start talking

784
00:33:36,180 --> 00:33:40,320
about entities in this way as well

785
00:33:38,059 --> 00:33:43,019
essentially you can imagine our entities

786
00:33:40,319 --> 00:33:43,769
right R have some kind of boundary that

787
00:33:43,019 --> 00:33:45,990
we could talk about

788
00:33:43,769 --> 00:33:48,269
and since we're mostly working with

789
00:33:45,990 --> 00:33:49,589
we've been working with sort of right

790
00:33:48,269 --> 00:33:51,059
rectangular prisms here we've been

791
00:33:49,589 --> 00:33:55,019
working with you know things that are

792
00:33:51,059 --> 00:33:58,649
like a cube but stretched I don't have

793
00:33:55,019 --> 00:34:00,180
boxes right or a a B B's we've been

794
00:33:58,650 --> 00:34:04,880
working with access aligned bounding

795
00:34:00,180 --> 00:34:08,849
boxes right access aligned bounding

796
00:34:04,880 --> 00:34:11,849
boxes we've been working with these and

797
00:34:08,849 --> 00:34:13,139
you know we've been doing some stuff

798
00:34:11,849 --> 00:34:15,569
like our collision sort of works

799
00:34:13,139 --> 00:34:17,069
properly with them and we do some stuff

800
00:34:15,570 --> 00:34:19,650
that respects the bounding boxes and our

801
00:34:17,070 --> 00:34:22,050
entities right now have a width and a

802
00:34:19,650 --> 00:34:24,240
height right but they should also now

803
00:34:22,050 --> 00:34:25,590
have a depth so that's one thing that we

804
00:34:24,239 --> 00:34:27,869
need to add which is the concept that

805
00:34:25,590 --> 00:34:31,320
entities have like an actual you know

806
00:34:27,869 --> 00:34:35,009
size so we should probably change this

807
00:34:31,320 --> 00:34:36,420
concept to be a v3 in the entity that

808
00:34:35,010 --> 00:34:37,830
basically stores their dimensions along

809
00:34:36,420 --> 00:34:39,869
all three axes right that makes sense

810
00:34:37,829 --> 00:34:43,519
but the other thing that we should do is

811
00:34:39,869 --> 00:34:46,349
in that gather we should use this now to

812
00:34:43,519 --> 00:34:48,719
see whether entities overlap or gather

813
00:34:46,349 --> 00:34:50,639
region so if this is our gather region

814
00:34:48,719 --> 00:34:53,669
and there's an entity that's right there

815
00:34:50,639 --> 00:34:56,779
well its center point might be here but

816
00:34:53,670 --> 00:34:58,889
its bounds extend all through you know

817
00:34:56,780 --> 00:35:01,019
three-dimensional space right its bounds

818
00:34:58,889 --> 00:35:02,759
extend outward and right now when we do

819
00:35:01,019 --> 00:35:04,949
our inclusion tests all we're doing is

820
00:35:02,760 --> 00:35:07,260
we're just testing the position and

821
00:35:04,949 --> 00:35:11,759
we're seeing whether that position falls

822
00:35:07,260 --> 00:35:13,400
within this this boundary now that

823
00:35:11,760 --> 00:35:15,420
doesn't really help us very much

824
00:35:13,400 --> 00:35:17,119
because we could have an entity that

825
00:35:15,420 --> 00:35:19,440
should be in the boundary but that's not

826
00:35:17,119 --> 00:35:21,779
being counted because of this especially

827
00:35:19,440 --> 00:35:23,639
if energy was somewhat large so what

828
00:35:21,780 --> 00:35:26,250
we'd like to do is we'd like to do our

829
00:35:23,639 --> 00:35:27,539
inclusion test to test against

830
00:35:26,250 --> 00:35:30,119
overlapping

831
00:35:27,539 --> 00:35:32,369
with these other you know with these

832
00:35:30,119 --> 00:35:33,929
other rectangles right and so we already

833
00:35:32,369 --> 00:35:35,639
know one way that we could do this right

834
00:35:33,929 --> 00:35:38,009
we could do this with the Minkowski

835
00:35:35,639 --> 00:35:40,889
which is basically we you know we take

836
00:35:38,010 --> 00:35:43,320
whatever this distance is here and we

837
00:35:40,889 --> 00:35:44,879
add it on to either side right of this

838
00:35:43,320 --> 00:35:46,380
rectangle and we take whatever this

839
00:35:44,880 --> 00:35:49,230
distance is here and we add it on to

840
00:35:46,380 --> 00:35:51,660
this one right so that we produce a new

841
00:35:49,230 --> 00:35:53,670
testing rectangle and then we just test

842
00:35:51,659 --> 00:35:57,719
against the point that's one way we

843
00:35:53,670 --> 00:35:59,309
could do it but we could also choose to

844
00:35:57,719 --> 00:36:01,019
do it another way which is just to do an

845
00:35:59,309 --> 00:36:03,539
overlap test to see whether the two

846
00:36:01,019 --> 00:36:04,739
rectangles overlap and honestly it's six

847
00:36:03,539 --> 00:36:06,509
of one half dozen or the other I don't

848
00:36:04,739 --> 00:36:10,169
know that it really matters which way we

849
00:36:06,510 --> 00:36:12,150
do it but we have to do one of those you

850
00:36:10,170 --> 00:36:14,550
know we have to do something we also

851
00:36:12,150 --> 00:36:15,660
have a related problem and this one I

852
00:36:14,550 --> 00:36:18,120
don't know if we're going to try and

853
00:36:15,659 --> 00:36:21,480
solve or not right but what that problem

854
00:36:18,119 --> 00:36:26,389
is is right now we have a tile chunks

855
00:36:21,480 --> 00:36:29,820
right we've got these tile chunks and

856
00:36:26,389 --> 00:36:33,750
the tile chunks store our entities right

857
00:36:29,820 --> 00:36:37,019
so when we do a gather so here's our

858
00:36:33,750 --> 00:36:40,260
gather region what we are currently

859
00:36:37,019 --> 00:36:42,900
doing is we're looping over all the tile

860
00:36:40,260 --> 00:36:45,630
chunks that are gathering touches right

861
00:36:42,900 --> 00:36:47,400
so we're looping over these nine you

862
00:36:45,630 --> 00:36:49,590
know squares right we're looping over

863
00:36:47,400 --> 00:36:51,240
this one this this this this this this

864
00:36:49,590 --> 00:36:53,039
this this and saying give me all the

865
00:36:51,239 --> 00:36:54,449
entities in there then test them against

866
00:36:53,039 --> 00:36:56,340
the rectangle that's how we're doing our

867
00:36:54,449 --> 00:36:57,719
gather to avoid testing all the entities

868
00:36:56,340 --> 00:36:59,190
in the world every time which would be

869
00:36:57,719 --> 00:37:02,879
prohibitively expensive with the number

870
00:36:59,190 --> 00:37:05,610
of entities we're going to have but what

871
00:37:02,880 --> 00:37:08,250
if there was an entry in this up here so

872
00:37:05,610 --> 00:37:10,260
this guy right this top chunk is not

873
00:37:08,250 --> 00:37:13,469
counted but there's the editor here who

874
00:37:10,260 --> 00:37:18,540
just has a really large bound right he's

875
00:37:13,469 --> 00:37:20,819
very big or perhaps more likely imagine

876
00:37:18,539 --> 00:37:24,019
if instead of being here our gather

877
00:37:20,820 --> 00:37:26,160
region were aligned more poorly right

878
00:37:24,019 --> 00:37:27,719
because you know the gather regions

879
00:37:26,159 --> 00:37:29,639
allowed to be anywhere it wants we're

880
00:37:27,719 --> 00:37:31,349
not placing restrictions on how the

881
00:37:29,639 --> 00:37:33,569
camera moves at the moment the camera

882
00:37:31,349 --> 00:37:38,299
can move anywhere it wants so suppose

883
00:37:33,570 --> 00:37:38,300
instead my gather region is right here

884
00:37:39,210 --> 00:37:47,550
right that includes these guys it does

885
00:37:44,519 --> 00:37:48,900
not include this tile chunk because it's

886
00:37:47,550 --> 00:37:50,579
on the other side the gather Ethan

887
00:37:48,900 --> 00:37:51,990
starts on the other side of touch on so

888
00:37:50,579 --> 00:37:53,670
if there is a guy who is right on the

889
00:37:51,989 --> 00:37:56,519
edge and who isn't particularly large

890
00:37:53,670 --> 00:38:01,139
he's only that big he still won't get he

891
00:37:56,519 --> 00:38:02,759
won't show up right he won't be tested

892
00:38:01,139 --> 00:38:05,129
he won't even be looked at right it's

893
00:38:02,760 --> 00:38:06,809
not that he'll fail the test because I

894
00:38:05,130 --> 00:38:08,519
could write the test properly so that he

895
00:38:06,809 --> 00:38:10,260
would would say he was in but we'll

896
00:38:08,519 --> 00:38:12,030
never actually even iterate over him

897
00:38:10,260 --> 00:38:14,430
because he's stored in this tile chunk

898
00:38:12,030 --> 00:38:15,750
not this tile chunk and this is the

899
00:38:14,429 --> 00:38:18,659
first tile chunk that we start using

900
00:38:15,750 --> 00:38:21,599
right so there's multiple ways we can

901
00:38:18,659 --> 00:38:26,789
approach that problem and I think I'll

902
00:38:21,599 --> 00:38:29,490
probably take a the sort of the look to

903
00:38:26,789 --> 00:38:36,380
oh I'm tired tonight

904
00:38:29,489 --> 00:38:39,959
it's yawning Johnny here the problem is

905
00:38:36,380 --> 00:38:41,519
that we have to solve it either in the

906
00:38:39,960 --> 00:38:44,179
spatial partition either in the tile

907
00:38:41,519 --> 00:38:46,500
chunks themselves or in our Gavin and

908
00:38:44,179 --> 00:38:49,889
the way that we would solve it in the

909
00:38:46,500 --> 00:38:52,048
tile chunks is for example we could

910
00:38:49,889 --> 00:38:54,358
double store our entities so for example

911
00:38:52,048 --> 00:38:57,150
any entity that's straddled a tile chunk

912
00:38:54,358 --> 00:39:00,838
could just go ahead and be stored in

913
00:38:57,150 --> 00:39:03,568
both top chunks right totally fine no

914
00:39:00,838 --> 00:39:07,798
big deal the other way we can do it is

915
00:39:03,568 --> 00:39:11,639
in our entity gather we can displace the

916
00:39:07,798 --> 00:39:14,750
entity gather we can say let's expand it

917
00:39:11,639 --> 00:39:18,150
by the radius of our largest entity

918
00:39:14,750 --> 00:39:19,920
right because that's how far it could

919
00:39:18,150 --> 00:39:22,530
extend over and that would guarantee

920
00:39:19,920 --> 00:39:24,389
Blee get it so what are the pros and

921
00:39:22,530 --> 00:39:28,950
cons here why would we choose one of the

922
00:39:24,389 --> 00:39:33,690
other well expanding so expanding the

923
00:39:28,949 --> 00:39:36,298
gather right if we were going to expand

924
00:39:33,690 --> 00:39:40,608
the gather that is the problem of it it

925
00:39:36,298 --> 00:39:44,068
has to handle the maximum entity radius

926
00:39:40,608 --> 00:39:46,409
right if all our entities are similarly

927
00:39:44,068 --> 00:39:48,539
sized totally fine

928
00:39:46,409 --> 00:39:51,568
because it really wouldn't be a problem

929
00:39:48,539 --> 00:39:52,480
no big deal but what if we have a giant

930
00:39:51,568 --> 00:39:54,190
entity

931
00:39:52,480 --> 00:39:56,349
so what if at one point we have an

932
00:39:54,190 --> 00:39:58,059
entity that's like 12 screens large I

933
00:39:56,349 --> 00:40:00,190
don't know how we do that or why but

934
00:39:58,059 --> 00:40:02,440
let's say we did well now this is really

935
00:40:00,190 --> 00:40:07,539
bad because now our gather region has to

936
00:40:02,440 --> 00:40:11,079
gather tons more child pile chunks every

937
00:40:07,539 --> 00:40:13,029
time looking for a giant entity even if

938
00:40:11,079 --> 00:40:15,039
there's no giant envy anywhere near

939
00:40:13,030 --> 00:40:18,550
where we're gathering right so it's a

940
00:40:15,039 --> 00:40:20,769
huge waste of resources all the time so

941
00:40:18,550 --> 00:40:22,839
that's the problem that's the thing that

942
00:40:20,769 --> 00:40:27,608
it does not do well right this is the

943
00:40:22,838 --> 00:40:32,400
bad part on the other hand doubl stores

944
00:40:27,608 --> 00:40:37,029
right or I should say multi stores are

945
00:40:32,400 --> 00:40:38,769
the opposite basically what they are is

946
00:40:37,030 --> 00:40:40,839
if we all if we have similarly sized

947
00:40:38,769 --> 00:40:45,489
entities if we have mostly similar sized

948
00:40:40,838 --> 00:40:47,108
entities right so if we have mostly

949
00:40:45,489 --> 00:40:50,108
entities that are all the exact same

950
00:40:47,108 --> 00:40:52,358
size and now we're just storing all of

951
00:40:50,108 --> 00:40:55,119
these entities doubly all the time we're

952
00:40:52,358 --> 00:40:58,539
just wasting a ton of work storing and

953
00:40:55,119 --> 00:41:01,000
pulling things out of our store just to

954
00:40:58,539 --> 00:41:04,358
handle that one once or twice where we

955
00:41:01,000 --> 00:41:06,639
have that giant entity right if we ever

956
00:41:04,358 --> 00:41:08,739
do now if we actually do have that giant

957
00:41:06,639 --> 00:41:10,509
envy then maybe this was a win because

958
00:41:08,739 --> 00:41:13,269
we don't have to do this expansion all

959
00:41:10,510 --> 00:41:16,089
the time but we do have this problem

960
00:41:13,269 --> 00:41:18,068
we're like okay if mostly we're never

961
00:41:16,088 --> 00:41:21,219
actually taking advantage of that then

962
00:41:18,068 --> 00:41:23,259
really all we did you know if we never

963
00:41:21,219 --> 00:41:27,250
have that single giant entity right if

964
00:41:23,260 --> 00:41:31,210
if if all entities are small then this

965
00:41:27,250 --> 00:41:32,530
was a total lose right and we don't

966
00:41:31,210 --> 00:41:36,190
really know which of these two we have

967
00:41:32,530 --> 00:41:37,690
it's not clear so I'm not sure but

968
00:41:36,190 --> 00:41:40,088
that's basically the way that works is

969
00:41:37,690 --> 00:41:41,889
they're there to trade offs and we don't

970
00:41:40,088 --> 00:41:43,630
really have very much information with

971
00:41:41,889 --> 00:41:45,068
which to make that trade-off so I think

972
00:41:43,630 --> 00:41:47,318
what I'll probably do is I'm going to do

973
00:41:45,068 --> 00:41:50,529
this simpler of the two right because

974
00:41:47,318 --> 00:41:52,059
when you have no information you might

975
00:41:50,530 --> 00:41:54,849
as well do the one that's least likely

976
00:41:52,059 --> 00:41:57,130
to cause bugs and be a strain on the

977
00:41:54,849 --> 00:41:59,289
code so instead of worrying about

978
00:41:57,130 --> 00:42:02,470
storing things and removing things from

979
00:41:59,289 --> 00:42:04,300
the Space Foundation overlapping let's

980
00:42:02,469 --> 00:42:05,759
just go ahead and introduce a Maxum

981
00:42:04,300 --> 00:42:08,550
entity radius right we already

982
00:42:05,760 --> 00:42:11,190
a safety margin and we'll have a max

983
00:42:08,550 --> 00:42:13,620
entity radius and we'll just say that

984
00:42:11,190 --> 00:42:15,480
we've got whatever this is you know the

985
00:42:13,619 --> 00:42:17,549
maxim entity radius is like five meters

986
00:42:15,480 --> 00:42:20,010
or something and then our sim regions

987
00:42:17,550 --> 00:42:20,370
will just get updated by whatever that

988
00:42:20,010 --> 00:42:25,170
is

989
00:42:20,369 --> 00:42:28,589
so we'll say you know add radius - we'll

990
00:42:25,170 --> 00:42:30,059
do that bounds there and we'll say in

991
00:42:28,590 --> 00:42:31,350
fact is this bounds that we used

992
00:42:30,059 --> 00:42:34,139
anywhere else we'll make sure it's not

993
00:42:31,349 --> 00:42:37,049
bounce bounce bounce bounce bounce

994
00:42:34,139 --> 00:42:39,839
bounce bounce it's not so we'll go ahead

995
00:42:37,050 --> 00:42:42,150
and just say that that's going to be the

996
00:42:39,840 --> 00:42:43,980
maximum radius maximum radius maximum

997
00:42:42,150 --> 00:42:46,980
radius that way we just enlarge that

998
00:42:43,980 --> 00:42:49,050
collision region there and off we go now

999
00:42:46,980 --> 00:42:51,389
what we also can do is we can also say

1000
00:42:49,050 --> 00:42:54,030
we could make this a global thing right

1001
00:42:51,389 --> 00:42:56,309
and we could sort of say that we try to

1002
00:42:54,030 --> 00:42:58,170
prevent there from ever being a case

1003
00:42:56,309 --> 00:43:00,029
where we know about an ax T that's going

1004
00:42:58,170 --> 00:43:02,159
to be that larger than that or something

1005
00:43:00,030 --> 00:43:04,460
like this so that's an ad that's ten

1006
00:43:02,159 --> 00:43:06,480
meters large right which is pretty big

1007
00:43:04,460 --> 00:43:08,280
but you know maybe someday we

1008
00:43:06,480 --> 00:43:09,269
accidentally forget and we create one

1009
00:43:08,280 --> 00:43:12,870
larger than that

1010
00:43:09,269 --> 00:43:14,460
so it would be nice to sort of it looks

1011
00:43:12,869 --> 00:43:15,869
like I've even got a thinner calculate

1012
00:43:14,460 --> 00:43:18,630
this eventually from the maximum value

1013
00:43:15,869 --> 00:43:20,849
of all n ad radius plus our speed so we

1014
00:43:18,630 --> 00:43:23,130
know that the update safety margin is

1015
00:43:20,849 --> 00:43:28,199
now going to be the max entity radius

1016
00:43:23,130 --> 00:43:36,150
plus whatever the speed / / DT is as

1017
00:43:28,199 --> 00:43:37,679
well here right excuse me there's always

1018
00:43:36,150 --> 00:43:41,430
a lot of nose blowing on the street

1019
00:43:37,679 --> 00:43:45,179
I feel like twitch users are subjected

1020
00:43:41,429 --> 00:43:47,579
to my colds and allergies which I don't

1021
00:43:45,179 --> 00:43:48,929
know if like misery loves company or

1022
00:43:47,579 --> 00:43:51,989
something I don't know if like spreading

1023
00:43:48,929 --> 00:43:54,199
it around is is helping me I don't think

1024
00:43:51,989 --> 00:43:54,199
it is

1025
00:43:55,429 --> 00:44:01,399
anyway so we don't actually know what

1026
00:43:59,420 --> 00:44:03,588
the DT is here we should probably figure

1027
00:44:01,400 --> 00:44:05,329
that out so we'd have a maximum radius

1028
00:44:03,588 --> 00:44:09,588
and we'd have a max entity velocity

1029
00:44:05,329 --> 00:44:11,119
right and you know maybe that's you know

1030
00:44:09,588 --> 00:44:12,798
who knows what that is it's 10 meters

1031
00:44:11,119 --> 00:44:14,960
per second I have no idea but we

1032
00:44:12,798 --> 00:44:18,019
multiply it by the DT so we'd say you

1033
00:44:14,960 --> 00:44:19,699
know what when you open up a sim region

1034
00:44:18,019 --> 00:44:21,500
you've got to tell us what the DT is

1035
00:44:19,699 --> 00:44:23,288
going to be and then we would just

1036
00:44:21,500 --> 00:44:26,239
multiply that out so now we know that

1037
00:44:23,289 --> 00:44:28,490
the max entity velocity actually I

1038
00:44:26,239 --> 00:44:32,358
should put it here right plus DT Max

1039
00:44:28,489 --> 00:44:35,298
Energy velocity so we basically say okay

1040
00:44:32,358 --> 00:44:39,469
that actually is correct now and now all

1041
00:44:35,298 --> 00:44:43,130
we would have to do is actually sort of

1042
00:44:39,469 --> 00:44:47,239
very validate or try to validate that we

1043
00:44:43,130 --> 00:44:49,068
never exceed these maximums right and so

1044
00:44:47,239 --> 00:44:52,038
we can sort of do that in a loose way

1045
00:44:49,068 --> 00:44:54,170
and maybe there's ways so we can put it

1046
00:44:52,039 --> 00:44:59,450
to do here that was like to do try to

1047
00:44:54,170 --> 00:45:03,858
make these get enforced more rigorously

1048
00:44:59,449 --> 00:45:05,509
of course more rigorously but what we

1049
00:45:03,858 --> 00:45:07,548
can also do is sort of have those here

1050
00:45:05,510 --> 00:45:10,849
in the sim region we could just go ahead

1051
00:45:07,548 --> 00:45:14,568
and say we have max entity radius in max

1052
00:45:10,849 --> 00:45:17,000
entity velocity right and we could set

1053
00:45:14,568 --> 00:45:20,298
those so we would say all right the sim

1054
00:45:17,000 --> 00:45:22,519
region sets those and then when it's

1055
00:45:20,298 --> 00:45:25,219
doing a processing it'll check it'll

1056
00:45:22,519 --> 00:45:28,759
actually just flat-out check when it's

1057
00:45:25,219 --> 00:45:35,480
doing stuff to make sure that that's not

1058
00:45:28,760 --> 00:45:37,970
going on right okay so first off what we

1059
00:45:35,480 --> 00:45:40,880
can do is we can start well you know

1060
00:45:37,969 --> 00:45:44,149
what else I'll do I'll go up to here

1061
00:45:40,880 --> 00:45:46,579
let's see let's see where is it where is

1062
00:45:44,150 --> 00:45:49,160
it move entity so in move entity we know

1063
00:45:46,579 --> 00:45:52,190
what the velocity actually is right we

1064
00:45:49,159 --> 00:45:54,409
actually have in sort of a feel for what

1065
00:45:52,190 --> 00:45:57,048
that velocity is going to be and so we

1066
00:45:54,409 --> 00:46:02,259
can actually check in this entity VP we

1067
00:45:57,048 --> 00:46:06,048
can say right here you know if entity DP

1068
00:46:02,260 --> 00:46:08,320
you know if the length squared of that

1069
00:46:06,048 --> 00:46:13,179
gives greater

1070
00:46:08,320 --> 00:46:17,830
than the length squared of whatever that

1071
00:46:13,179 --> 00:46:19,989
maximum is Maxima velocity right so if

1072
00:46:17,829 --> 00:46:21,549
our if our velocity for entity that we

1073
00:46:19,989 --> 00:46:25,029
would have been computing if that's

1074
00:46:21,550 --> 00:46:26,230
going to be above it you know we could

1075
00:46:25,030 --> 00:46:28,540
actually for now I guess we could just

1076
00:46:26,230 --> 00:46:30,880
assert it in the future maybe we want to

1077
00:46:28,539 --> 00:46:32,800
clip it right I don't know if that seems

1078
00:46:30,880 --> 00:46:34,510
like good idea but we could basically

1079
00:46:32,800 --> 00:46:38,380
say you know assert that we're always

1080
00:46:34,510 --> 00:46:40,420
less than whatever that that max entity

1081
00:46:38,380 --> 00:46:41,500
velocity is and again I'm just doing the

1082
00:46:40,420 --> 00:46:43,480
length squared because we don't actually

1083
00:46:41,500 --> 00:46:45,010
care about what the actual length is we

1084
00:46:43,480 --> 00:46:47,260
just want to know if it's greater than

1085
00:46:45,010 --> 00:46:48,730
or less than so we don't need to do the

1086
00:46:47,260 --> 00:46:50,290
square root in there we can just go

1087
00:46:48,730 --> 00:46:51,630
ahead and say check the length squared

1088
00:46:50,289 --> 00:46:57,090
against each other and they'll tell us

1089
00:46:51,630 --> 00:47:02,680
so what I might say in here is you know

1090
00:46:57,090 --> 00:47:05,559
upgrade college physical motion routines

1091
00:47:02,679 --> 00:47:07,629
to handle capping the maximum velocity

1092
00:47:05,559 --> 00:47:10,420
so that we just know it would never

1093
00:47:07,630 --> 00:47:12,039
exceed it even if we made some gameplay

1094
00:47:10,420 --> 00:47:16,059
code that tried to it just would always

1095
00:47:12,039 --> 00:47:17,650
cap it so for now we'll assert but then

1096
00:47:16,059 --> 00:47:21,400
later it seems like it would be a good

1097
00:47:17,650 --> 00:47:30,820
idea to go ahead and actually enforce

1098
00:47:21,400 --> 00:47:34,000
that right yeah so there we go um let's

1099
00:47:30,820 --> 00:47:36,900
take a look here that's right that's not

1100
00:47:34,000 --> 00:47:40,480
a nice grid square that's already scalar

1101
00:47:36,900 --> 00:47:41,519
okay so we've got our DT in here

1102
00:47:40,480 --> 00:47:44,860
somewhere

1103
00:47:41,519 --> 00:47:47,259
so I think it's called DP for frame is

1104
00:47:44,860 --> 00:47:50,769
it no it's not what is it where is my DT

1105
00:47:47,260 --> 00:47:54,970
DT it's just input DT right is what we

1106
00:47:50,769 --> 00:47:57,009
called it input DP for frame close

1107
00:47:54,969 --> 00:48:00,039
enough I feel like they should have

1108
00:47:57,010 --> 00:48:02,140
given that one to me so I think that

1109
00:48:00,039 --> 00:48:05,289
should just still work the same way that

1110
00:48:02,139 --> 00:48:06,699
it was working oh so I guess our entity

1111
00:48:05,289 --> 00:48:14,029
velocities are much higher than I

1112
00:48:06,699 --> 00:48:17,199
thought they were too oh that's that's

1113
00:48:14,030 --> 00:48:19,310
oh wait no that's not a bug that

1114
00:48:17,199 --> 00:48:21,619
actually did mean it exceeded it right

1115
00:48:19,309 --> 00:48:23,809
because I actually I did not multiply by

1116
00:48:21,619 --> 00:48:26,210
the DT in begin Sam right I just store

1117
00:48:23,809 --> 00:48:28,909
it out if I remember correctly I just

1118
00:48:26,210 --> 00:48:35,960
store it out our max entity velocity

1119
00:48:28,909 --> 00:48:40,849
right yeah so yeah so I guess we're

1120
00:48:35,960 --> 00:48:42,380
already above 10 m/s how fast is 10

1121
00:48:40,849 --> 00:48:45,529
meters per second I don't even know

1122
00:48:42,380 --> 00:48:53,450
let's see I think we looked this up

1123
00:48:45,530 --> 00:48:59,680
before do same bolt speed 23 miles per

1124
00:48:53,449 --> 00:49:01,009
hour so 23.5 mph in meters per second oh

1125
00:48:59,679 --> 00:49:03,440
man

1126
00:49:01,010 --> 00:49:05,420
he runs just a little bit faster than

1127
00:49:03,440 --> 00:49:07,070
the maximum velocity well that's okay

1128
00:49:05,420 --> 00:49:08,750
because we probably want things that can

1129
00:49:07,070 --> 00:49:10,700
go even faster than Usain Bolt in our

1130
00:49:08,750 --> 00:49:12,139
game so we probably want quite a bit

1131
00:49:10,699 --> 00:49:14,299
faster than that we'd probably want

1132
00:49:12,139 --> 00:49:16,579
something like 30 because at the end of

1133
00:49:14,300 --> 00:49:17,870
the day don't forget our frame time step

1134
00:49:16,579 --> 00:49:20,659
it's dividing out by it that's how much

1135
00:49:17,869 --> 00:49:23,349
we're growing by so three divided by 30

1136
00:49:20,659 --> 00:49:27,859
would only be one would be one meter

1137
00:49:23,349 --> 00:49:30,679
that we'd actually be expanding by so

1138
00:49:27,860 --> 00:49:32,809
that seems that seems fine that seems

1139
00:49:30,679 --> 00:49:37,460
fine okay

1140
00:49:32,809 --> 00:49:39,019
let's try that again yeah so now at

1141
00:49:37,460 --> 00:49:41,090
least well known oh wow all right so

1142
00:49:39,019 --> 00:49:45,400
we're still getting some velocities that

1143
00:49:41,090 --> 00:49:46,700
are higher than that it's kind of crazy

1144
00:49:45,400 --> 00:49:51,769
Wow

1145
00:49:46,699 --> 00:49:55,099
oh right I jump hot faster than that

1146
00:49:51,769 --> 00:50:01,159
that's so our jumping code is a bit

1147
00:49:55,099 --> 00:50:05,210
wonky is jumping at nits at negative 30

1148
00:50:01,159 --> 00:50:07,429
meters per second squared is that Oh No

1149
00:50:05,210 --> 00:50:09,199
okay I know what that is that's just

1150
00:50:07,429 --> 00:50:11,089
because our velocity doesn't stop when

1151
00:50:09,199 --> 00:50:14,029
we hit the ground okay I was like that's

1152
00:50:11,090 --> 00:50:16,010
not right and it's not so yeah so what

1153
00:50:14,030 --> 00:50:18,550
that was was since we have not actually

1154
00:50:16,010 --> 00:50:21,020
done much with our Z motion code yet

1155
00:50:18,550 --> 00:50:22,700
when you hit the ground we don't zero

1156
00:50:21,019 --> 00:50:24,679
out your velocity so your velocity is

1157
00:50:22,699 --> 00:50:27,469
able to just keep building in Z ad

1158
00:50:24,679 --> 00:50:28,009
infinitum so really what we need to do

1159
00:50:27,469 --> 00:50:30,709
when you hit

1160
00:50:28,010 --> 00:50:32,900
ground right is we need to set your your

1161
00:50:30,710 --> 00:50:35,090
Z velocity to zero as well right

1162
00:50:32,900 --> 00:50:36,500
everything should zero out yeah yeah so

1163
00:50:35,090 --> 00:50:39,019
that I was gonna say what's with that

1164
00:50:36,500 --> 00:50:40,190
but that's not true yeah so we should be

1165
00:50:39,019 --> 00:50:41,900
fine now

1166
00:50:40,190 --> 00:50:44,780
I think there's I don't think we've got

1167
00:50:41,900 --> 00:50:48,590
it now we've got a problem now at least

1168
00:50:44,780 --> 00:50:49,100
I'm pretty sure we know yeah so that's

1169
00:50:48,590 --> 00:50:53,980
all good

1170
00:50:49,099 --> 00:50:56,029
that seems fine no big deals there okay

1171
00:50:53,980 --> 00:50:57,559
so that's good and now we just have one

1172
00:50:56,030 --> 00:51:01,040
more thing to do before we can complete

1173
00:50:57,559 --> 00:51:03,440
that to do we're doing that that growing

1174
00:51:01,039 --> 00:51:05,360
which is nice but we need to actually do

1175
00:51:03,440 --> 00:51:07,610
the rectangle test now like I said I

1176
00:51:05,360 --> 00:51:10,309
just want to do a rectangle test that'll

1177
00:51:07,610 --> 00:51:13,160
include the dimensions of our actual

1178
00:51:10,309 --> 00:51:15,799
guys so what we're going to do is first

1179
00:51:13,159 --> 00:51:18,409
I'm going to say let's go ahead and make

1180
00:51:15,800 --> 00:51:20,330
their actual width height I'm gonna I'm

1181
00:51:18,409 --> 00:51:23,299
gonna just make that B bit like a dim

1182
00:51:20,329 --> 00:51:25,219
look at their dimension right so they'll

1183
00:51:23,300 --> 00:51:27,440
have like a width height and depth down

1184
00:51:25,219 --> 00:51:28,969
right and so I'm just going to change

1185
00:51:27,440 --> 00:51:32,329
all the code that used to be with the

1186
00:51:28,969 --> 00:51:34,789
height and change that to be actually

1187
00:51:32,329 --> 00:51:40,630
using the dimension right so this will

1188
00:51:34,789 --> 00:51:44,090
be dim X right and this will be dim Y so

1189
00:51:40,630 --> 00:51:46,300
and then we'll go in here and I guess I

1190
00:51:44,090 --> 00:51:50,570
can just change

1191
00:51:46,300 --> 00:51:57,530
Cinda height to send dim dot X oops dot

1192
00:51:50,570 --> 00:52:00,110
Y 2 2 2 2 2 again and then I can do sim

1193
00:51:57,530 --> 00:52:05,480
dot width and change that to Sam dot dim

1194
00:52:00,110 --> 00:52:07,130
dot X and that should do that and again

1195
00:52:05,480 --> 00:52:10,460
presumably in our collision detection

1196
00:52:07,130 --> 00:52:16,490
still works okay it does so that's good

1197
00:52:10,460 --> 00:52:19,220
everyone's happy yeah ok

1198
00:52:16,489 --> 00:52:21,589
and so really all I need to do now is

1199
00:52:19,219 --> 00:52:23,509
start giving these guys some Z at some

1200
00:52:21,590 --> 00:52:24,380
point but honestly we don't really care

1201
00:52:23,510 --> 00:52:26,750
about that right now

1202
00:52:24,380 --> 00:52:29,210
so all we need to do to finish up this

1203
00:52:26,750 --> 00:52:32,840
particular part to do is inside the sim

1204
00:52:29,210 --> 00:52:35,960
region we would like to actually compute

1205
00:52:32,840 --> 00:52:37,760
me oh you know what we're actually even

1206
00:52:35,960 --> 00:52:40,849
using it in here so we could just start

1207
00:52:37,760 --> 00:52:41,819
doing this instead of that nonsense we

1208
00:52:40,849 --> 00:52:43,108
could just say

1209
00:52:41,818 --> 00:52:45,420
right let's start using the z course

1210
00:52:43,108 --> 00:52:48,449
there isn't one so that's fine but at

1211
00:52:45,420 --> 00:52:50,548
least we're using it now there we go

1212
00:52:48,449 --> 00:52:54,809
so there we've got our x y&amp;z dimensions

1213
00:52:50,548 --> 00:52:57,179
so that's fine is this though shouldn't

1214
00:52:54,809 --> 00:52:58,528
these be halves yes they are so that's

1215
00:52:57,179 --> 00:52:59,338
my Costigan ammeter and not the radius

1216
00:52:58,528 --> 00:53:03,150
so that's fine

1217
00:52:59,338 --> 00:53:04,558
yeah so that's all good so they don't

1218
00:53:03,150 --> 00:53:07,769
have to do is modify my rectangle check

1219
00:53:04,559 --> 00:53:09,989
and I think that's all we really need to

1220
00:53:07,768 --> 00:53:13,618
do from now and then we can end right on

1221
00:53:09,989 --> 00:53:17,608
time in a nice Pleasant fashion so when

1222
00:53:13,619 --> 00:53:21,028
I'm doing that I think what I want to do

1223
00:53:17,608 --> 00:53:23,400
here is when I do my is inside rectangle

1224
00:53:21,028 --> 00:53:27,358
I've got I've got to is in rectangle

1225
00:53:23,400 --> 00:53:29,369
calls right I've got here and here so

1226
00:53:27,358 --> 00:53:35,788
I'd like to do is I'd like to just ask

1227
00:53:29,369 --> 00:53:37,588
if the rectangles overlapped and so I

1228
00:53:35,789 --> 00:53:40,319
think I'm just going to go ahead and do

1229
00:53:37,588 --> 00:53:41,940
a special purpose call for that that

1230
00:53:40,318 --> 00:53:43,469
does the math in there so that I don't

1231
00:53:41,940 --> 00:53:45,389
have to do it in two different places

1232
00:53:43,469 --> 00:53:47,869
since I'm already doing it in two places

1233
00:53:45,389 --> 00:53:57,028
so I think I'm going to do is just say

1234
00:53:47,869 --> 00:53:59,969
if entity overlaps right rectangle so

1235
00:53:57,028 --> 00:54:06,838
what I'll do is I'll say okay you know

1236
00:53:59,969 --> 00:54:07,829
we've got we've got a desk P I'm not

1237
00:54:06,838 --> 00:54:16,528
really I don't know that I want to

1238
00:54:07,829 --> 00:54:18,599
actually pass the actual entity here so

1239
00:54:16,528 --> 00:54:22,768
I think all I want to do is I think I

1240
00:54:18,599 --> 00:54:24,690
just want to pass the rectangle right so

1241
00:54:22,768 --> 00:54:26,728
what I'll do is I'll say all right god s

1242
00:54:24,690 --> 00:54:28,650
P here's our rectangle and then I just

1243
00:54:26,728 --> 00:54:33,718
want to I need to actually pass the

1244
00:54:28,650 --> 00:54:36,690
dimension of of that guy so so desk dim

1245
00:54:33,719 --> 00:54:39,838
right entity overlaps rectangle so so

1246
00:54:36,690 --> 00:54:41,880
that basically and then later when we do

1247
00:54:39,838 --> 00:54:45,108
is inside rectangle here that would be

1248
00:54:41,880 --> 00:54:48,630
the same thing to be entity overlaps

1249
00:54:45,108 --> 00:54:51,239
entity over left rectangle we'd pass

1250
00:54:48,630 --> 00:54:52,470
whatever that same space P was and then

1251
00:54:51,239 --> 00:54:56,369
we'd also pass the low

1252
00:54:52,469 --> 00:54:58,649
sym dim right and then I just have to

1253
00:54:56,369 --> 00:55:00,450
implement this function so I need to

1254
00:54:58,650 --> 00:55:02,579
make a little function here which

1255
00:55:00,449 --> 00:55:04,098
returns a boolean right I think this is

1256
00:55:02,579 --> 00:55:06,239
probably just a really simple function

1257
00:55:04,099 --> 00:55:10,109
and what that's going to do is going to

1258
00:55:06,239 --> 00:55:16,169
take the P the dimension and then the

1259
00:55:10,108 --> 00:55:22,549
rectangle three for the bounds right so

1260
00:55:16,170 --> 00:55:25,050
I think I will probably do this by

1261
00:55:22,550 --> 00:55:27,119
testing by just doing the Minkowski

1262
00:55:25,050 --> 00:55:28,320
thing that seems like the easiest thing

1263
00:55:27,119 --> 00:55:32,490
to do for now

1264
00:55:28,320 --> 00:55:37,680
so I guess what I would say is the grown

1265
00:55:32,489 --> 00:55:42,089
like a grown rectangle equals add what

1266
00:55:37,679 --> 00:55:45,480
do we call it add radius two right I

1267
00:55:42,090 --> 00:55:48,480
think we'll just do that we'll add half

1268
00:55:45,480 --> 00:55:50,340
the dimension so that it grows I'm

1269
00:55:48,480 --> 00:55:53,480
pretty sure in fact we could actually

1270
00:55:50,340 --> 00:55:59,820
have an add diameter to call as well add

1271
00:55:53,480 --> 00:56:04,108
radius to which which does that half

1272
00:55:59,820 --> 00:56:05,400
this doesn't do it by I mean we'll just

1273
00:56:04,108 --> 00:56:06,719
we'll just leave it this way because if

1274
00:56:05,400 --> 00:56:08,280
we did we'd have to just multiply by a

1275
00:56:06,719 --> 00:56:10,739
so we'll just leave this way I will do

1276
00:56:08,280 --> 00:56:13,109
it add radius two that'll expand our

1277
00:56:10,739 --> 00:56:15,358
test region by the dimension that we're

1278
00:56:13,108 --> 00:56:18,539
looking for and then we can just go

1279
00:56:15,358 --> 00:56:21,119
ahead and return the result which is is

1280
00:56:18,539 --> 00:56:23,130
inside rectangle again but with that

1281
00:56:21,119 --> 00:56:24,329
grown rectangle and now we test the P

1282
00:56:23,130 --> 00:56:26,849
again and we're done

1283
00:56:24,329 --> 00:56:28,469
right so that's really all I want to do

1284
00:56:26,849 --> 00:56:31,619
there and now we're actually testing for

1285
00:56:28,469 --> 00:56:33,449
overlapping as well which you just

1286
00:56:31,619 --> 00:56:35,338
prevent us from having bugs in the

1287
00:56:33,449 --> 00:56:37,319
future where we're missing some entities

1288
00:56:35,338 --> 00:56:38,070
that we should otherwise be getting and

1289
00:56:37,320 --> 00:56:39,320
that's about it

1290
00:56:38,070 --> 00:56:43,140
so there really isn't much more to it

1291
00:56:39,320 --> 00:56:45,900
that's all there is all right so I think

1292
00:56:43,139 --> 00:56:49,170
that basically we're a little ahead of

1293
00:56:45,900 --> 00:56:54,210
time here but I guess that's basically

1294
00:56:49,170 --> 00:56:56,309
all I wanted to do today we figured out

1295
00:56:54,210 --> 00:56:58,510
that I'm going to put our four instances

1296
00:56:56,309 --> 00:57:01,750
in here

1297
00:56:58,510 --> 00:57:04,390
so I think all we really have to do now

1298
00:57:01,750 --> 00:57:05,889
is actually figure out how we want to

1299
00:57:04,389 --> 00:57:08,409
handle the kind of going up and down

1300
00:57:05,889 --> 00:57:09,549
things and it's gonna it's going to be

1301
00:57:08,409 --> 00:57:10,659
some work because we don't really know

1302
00:57:09,550 --> 00:57:15,640
what we want to do there and we don't

1303
00:57:10,659 --> 00:57:20,289
have a lot to go on so that's definitely

1304
00:57:15,639 --> 00:57:25,029
to be some explorations going on to you

1305
00:57:20,289 --> 00:57:26,320
know for us tomorrow so it does seem

1306
00:57:25,030 --> 00:57:28,660
like we probably get to that I don't

1307
00:57:26,320 --> 00:57:31,030
know if we'll get to to this stuff

1308
00:57:28,659 --> 00:57:32,829
before the end of the week probably not

1309
00:57:31,030 --> 00:57:34,590
but we should be able to at least get

1310
00:57:32,829 --> 00:57:37,389
done with our Z stuff and so that's good

1311
00:57:34,590 --> 00:57:38,920
and yeah looks like we've got a lot of

1312
00:57:37,389 --> 00:57:39,879
good stuff coming up here I'm looking

1313
00:57:38,920 --> 00:57:42,340
forward to this this just should be

1314
00:57:39,880 --> 00:57:45,130
pretty good but we're pretty much done

1315
00:57:42,340 --> 00:57:47,800
for today so let me go ahead and start

1316
00:57:45,130 --> 00:57:50,349
the Q&amp;A here and I will go ahead and and

1317
00:57:47,800 --> 00:57:52,420
tell the bots that it is time for the

1318
00:57:50,349 --> 00:57:54,849
Q&amp;A if you would like to ask a question

1319
00:57:52,420 --> 00:57:56,710
about what we've done on today's stream

1320
00:57:54,849 --> 00:57:59,289
or on previous dreams please go ahead

1321
00:57:56,710 --> 00:58:02,170
and ask it now put a Q : in front of it

1322
00:57:59,289 --> 00:58:03,820
so I can see it and if you want to ask

1323
00:58:02,170 --> 00:58:04,840
questions that are like off-topic or

1324
00:58:03,820 --> 00:58:07,000
don't really have anything to do with

1325
00:58:04,840 --> 00:58:09,670
the coding that we're doing right now

1326
00:58:07,000 --> 00:58:10,750
those are cool but not for right now ask

1327
00:58:09,670 --> 00:58:13,090
those at the beginning of the stream

1328
00:58:10,750 --> 00:58:14,590
basically what we do is about 15 minutes

1329
00:58:13,090 --> 00:58:15,910
before the stream starts I answer

1330
00:58:14,590 --> 00:58:17,559
off-topic questions or whatever so if

1331
00:58:15,909 --> 00:58:19,269
you want to save those for tomorrow we

1332
00:58:17,559 --> 00:58:22,029
can do them just come about 15 minutes

1333
00:58:19,269 --> 00:58:25,929
before the stream schedule start and we

1334
00:58:22,030 --> 00:58:33,580
do off topic questions then so let's go

1335
00:58:25,929 --> 00:58:37,379
ahead and go to the Q and the a if we

1336
00:58:33,579 --> 00:58:37,380
have any Q&amp;A that is

1337
00:58:43,650 --> 00:58:48,950
not much it looks like

1338
00:58:56,719 --> 00:59:02,409
yeah well maybe we won't have any Q&amp;A

1339
00:59:03,309 --> 00:59:09,670
maybe we won't I see nothing

1340
00:59:11,980 --> 00:59:15,769
again please remember to prefixed your

1341
00:59:14,480 --> 00:59:17,510
questions with Q :

1342
00:59:15,769 --> 00:59:20,088
because I have a little filter thing and

1343
00:59:17,510 --> 00:59:23,810
I only look at things that have Q : in

1344
00:59:20,088 --> 00:59:26,659
front of them because you know basically

1345
00:59:23,809 --> 00:59:28,279
like there's there's chat and stuff on

1346
00:59:26,659 --> 00:59:30,828
the stream and stuff that's not directed

1347
00:59:28,280 --> 00:59:42,319
at me so I filter that out so I can just

1348
00:59:30,829 --> 00:59:44,420
answer the questions as they come up we

1349
00:59:42,318 --> 00:59:47,088
had a bit of a troll problem today hang

1350
00:59:44,420 --> 00:59:49,760
on yeah I don't know do we need to make

1351
00:59:47,088 --> 00:59:50,929
a private IRC where it's a little more

1352
00:59:49,760 --> 00:59:51,740
controlled or something I don't know

1353
00:59:50,929 --> 00:59:57,739
what to do about that

1354
00:59:51,739 --> 00:59:59,088
I I don't yeah I I don't love the fact

1355
00:59:57,739 --> 01:00:01,838
that the moderators are having to deal

1356
00:59:59,088 --> 01:00:03,920
with all this ridiculousness

1357
01:00:01,838 --> 01:00:05,599
because they shouldn't have to do that

1358
01:00:03,920 --> 01:00:07,159
like and I don't know it would be nice

1359
01:00:05,599 --> 01:00:10,190
if twitch was more serious about the

1360
01:00:07,159 --> 01:00:13,309
trolling problems and was actually like

1361
01:00:10,190 --> 01:00:15,230
did some placing themselves and tried to

1362
01:00:13,309 --> 01:00:17,210
separate things into trolls non trolls

1363
01:00:15,230 --> 01:00:18,260
and that way if you want trolls on your

1364
01:00:17,210 --> 01:00:20,720
stream you can have them if you don't

1365
01:00:18,260 --> 01:00:23,230
you don't or something like that but of

1366
01:00:20,719 --> 01:00:26,598
course there's not that much of it so

1367
01:00:23,230 --> 01:00:29,420
Carlin W Blum question pasta was gross

1368
01:00:26,599 --> 01:00:31,789
what does that even mean all right this

1369
01:00:29,420 --> 01:00:34,088
is nonsensical I have no idea what that

1370
01:00:31,789 --> 01:00:34,088
means

1371
01:00:36,608 --> 01:00:43,659
what was my grade on APCs is that you

1372
01:00:40,699 --> 01:00:45,710
mean Advanced Placement computer science

1373
01:00:43,659 --> 01:00:47,059
hilariously and this probably does not

1374
01:00:45,710 --> 01:00:47,838
bode well for the state of computer

1375
01:00:47,059 --> 01:00:51,130
science education

1376
01:00:47,838 --> 01:00:53,389
I got a 5 on the AP computer science

1377
01:00:51,130 --> 01:00:56,890
test which was the highest you could

1378
01:00:53,389 --> 01:00:59,539
possibly get despite not having

1379
01:00:56,889 --> 01:01:06,460
programmed in the language the test was

1380
01:00:59,539 --> 01:01:10,588
given in for seven years I want to say

1381
01:01:06,460 --> 01:01:13,170
it was given in Pascal like anybody

1382
01:01:10,588 --> 01:01:18,358
programs in Pascal and I had programmed

1383
01:01:13,170 --> 01:01:19,769
Pascal since I was like nine and I still

1384
01:01:18,358 --> 01:01:22,739
got a five which is terrifying

1385
01:01:19,768 --> 01:01:25,108
I don't know what that says because if

1386
01:01:22,739 --> 01:01:26,489
you're not a frequent programmer in the

1387
01:01:25,108 --> 01:01:29,848
language that the test is given and you

1388
01:01:26,489 --> 01:01:32,039
should not get the highest score I don't

1389
01:01:29,849 --> 01:01:35,719
care what kind of grade inflation is

1390
01:01:32,039 --> 01:01:35,719
going on there that's just the case

1391
01:01:43,400 --> 01:01:47,969
let's see what math classes did I take

1392
01:01:46,679 --> 01:01:49,710
in high school and what grades you get

1393
01:01:47,969 --> 01:01:51,719
these are all off topic but that's okay

1394
01:01:49,710 --> 01:01:53,309
because I know trust me if there's any

1395
01:01:51,719 --> 01:01:55,200
actual on topic questions because

1396
01:01:53,309 --> 01:01:57,630
there's no sense in filtering out

1397
01:01:55,199 --> 01:02:02,328
off-topic questions if there are no on

1398
01:01:57,630 --> 01:02:02,329
topic questions but

1399
01:02:12,280 --> 01:02:15,550
I noticed a bunch of your functions are

1400
01:02:14,469 --> 01:02:17,049
inlined is there a difference between

1401
01:02:15,550 --> 01:02:20,890
using regular functions and inline

1402
01:02:17,050 --> 01:02:25,510
functions so not the answer is not

1403
01:02:20,889 --> 01:02:27,460
really like a part of that is because of

1404
01:02:25,510 --> 01:02:29,080
the way that we're programming so the

1405
01:02:27,460 --> 01:02:30,429
way that we're writing this right now is

1406
01:02:29,079 --> 01:02:32,440
we use the thing that a lot of people

1407
01:02:30,429 --> 01:02:34,059
call the unity build which is not

1408
01:02:32,440 --> 01:02:36,369
actually have anything to do with unity

1409
01:02:34,059 --> 01:02:37,719
the game engine so it's a little bit

1410
01:02:36,369 --> 01:02:39,279
confusing Lee named perhaps but

1411
01:02:37,719 --> 01:02:40,839
basically the way we do it is our build

1412
01:02:39,280 --> 01:02:44,200
is like a batch file that just builds

1413
01:02:40,840 --> 01:02:46,960
one file handmade dot cpp and all of our

1414
01:02:44,199 --> 01:02:48,250
code is in it essentially and the way

1415
01:02:46,960 --> 01:02:50,320
that the reason we have multiple files

1416
01:02:48,250 --> 01:02:52,059
is just logically they're broken up so

1417
01:02:50,320 --> 01:02:54,160
that I can bounce back and forth between

1418
01:02:52,059 --> 01:02:56,139
them and Emacs easily but they all get

1419
01:02:54,159 --> 01:02:58,449
included into the same file as just

1420
01:02:56,139 --> 01:03:00,400
pound includes and built that way what

1421
01:02:58,449 --> 01:03:02,319
that means is that the compiler always

1422
01:03:00,400 --> 01:03:05,590
has access to all of our functions

1423
01:03:02,320 --> 01:03:07,990
during the build so technically in

1424
01:03:05,590 --> 01:03:11,019
lining I don't even know if it does

1425
01:03:07,989 --> 01:03:14,169
anything meaning the word in line when I

1426
01:03:11,019 --> 01:03:16,719
put it here for our build I don't think

1427
01:03:14,170 --> 01:03:19,690
it maybe does anything at all because

1428
01:03:16,719 --> 01:03:21,279
for the most part the compiler will see

1429
01:03:19,690 --> 01:03:23,550
all of our functions and can decide

1430
01:03:21,280 --> 01:03:26,260
itself which ones it wants to inline

1431
01:03:23,550 --> 01:03:28,030
usually when you use inline if because

1432
01:03:26,260 --> 01:03:29,050
you have moved something to an H file so

1433
01:03:28,030 --> 01:03:30,670
that you're giving the compiler the

1434
01:03:29,050 --> 01:03:31,960
ability to inline it because you've put

1435
01:03:30,670 --> 01:03:34,450
it there and it's getting included in

1436
01:03:31,960 --> 01:03:36,010
all of your compilation units but we

1437
01:03:34,449 --> 01:03:38,169
don't have that situation here so really

1438
01:03:36,010 --> 01:03:41,290
it's more inline is really just mostly a

1439
01:03:38,170 --> 01:03:43,300
note for me that says what it's mostly

1440
01:03:41,289 --> 01:03:46,329
about me saying whether I think it's a

1441
01:03:43,300 --> 01:03:47,560
small inline double function or not but

1442
01:03:46,329 --> 01:03:49,029
the compiler probably doesn't really

1443
01:03:47,559 --> 01:03:52,750
care

1444
01:03:49,030 --> 01:03:54,340
and that's might be relatively true I

1445
01:03:52,750 --> 01:03:55,510
don't know since I don't use normal

1446
01:03:54,340 --> 01:03:58,480
build processes ever

1447
01:03:55,510 --> 01:04:02,200
anymore but that might also be kind of

1448
01:03:58,480 --> 01:04:04,269
true with link time code generation for

1449
01:04:02,199 --> 01:04:05,949
all I know like modern link time code

1450
01:04:04,269 --> 01:04:07,869
generation will go ahead and inline all

1451
01:04:05,949 --> 01:04:10,299
kinds of stuff for you that you didn't

1452
01:04:07,869 --> 01:04:13,239
bother to make visible and other

1453
01:04:10,300 --> 01:04:14,380
compilation units so I don't know that

1454
01:04:13,239 --> 01:04:16,569
depends on how good the link time code

1455
01:04:14,380 --> 01:04:19,210
generator is right but so the answer is

1456
01:04:16,570 --> 01:04:21,280
yeah like inline used to mean more than

1457
01:04:19,210 --> 01:04:23,829
it does it used to basically tell the

1458
01:04:21,280 --> 01:04:26,230
compiler to expand something directly

1459
01:04:23,829 --> 01:04:28,929
inside every place that it was called

1460
01:04:26,230 --> 01:04:30,280
it no longer means that really it's

1461
01:04:28,929 --> 01:04:33,699
always been optional I believe

1462
01:04:30,280 --> 01:04:35,950
specification wise and now it is

1463
01:04:33,699 --> 01:04:37,809
optional definitely in practice meaning

1464
01:04:35,949 --> 01:04:40,059
the compilers definitely do a lot of

1465
01:04:37,809 --> 01:04:41,799
their own thinking and do plenty of

1466
01:04:40,059 --> 01:04:44,980
inlining for stuff that you didn't mark

1467
01:04:41,800 --> 01:04:46,720
in line so even if I didn't mark any

1468
01:04:44,980 --> 01:04:48,699
overlaps rectangle in line it might very

1469
01:04:46,719 --> 01:04:51,969
well inline it even when I do mark it in

1470
01:04:48,699 --> 01:04:54,039
line it may dot and so if you actually

1471
01:04:51,969 --> 01:04:55,419
care about performance a lot and really

1472
01:04:54,039 --> 01:04:56,949
do want to know that something's getting

1473
01:04:55,420 --> 01:04:59,590
in lined you actually have to take

1474
01:04:56,949 --> 01:05:02,230
additional steps the the word in line

1475
01:04:59,590 --> 01:05:04,510
does not actually make sure the compiler

1476
01:05:02,230 --> 01:05:06,699
in line something there's like a force

1477
01:05:04,510 --> 01:05:08,560
in line compiler directive you can also

1478
01:05:06,699 --> 01:05:11,589
often use that actually means something

1479
01:05:08,559 --> 01:05:16,210
will literally be inlined and is the

1480
01:05:11,590 --> 01:05:17,380
compiler will not try to stop you and so

1481
01:05:16,210 --> 01:05:18,639
we may have to do stuff like that when

1482
01:05:17,380 --> 01:05:20,950
we're doing optimization work depending

1483
01:05:18,639 --> 01:05:22,719
on circumstances I don't know but on the

1484
01:05:20,949 --> 01:05:24,009
whole to answer question in line really

1485
01:05:22,719 --> 01:05:25,959
kind of meaningless these days and it's

1486
01:05:24,010 --> 01:05:28,119
mostly more it's more of a note for me

1487
01:05:25,960 --> 01:05:30,280
than anybody than the compiler because

1488
01:05:28,119 --> 01:05:31,990
really all it says the compiler is hey

1489
01:05:30,280 --> 01:05:33,820
maybe you shouldn't line this and the

1490
01:05:31,989 --> 01:05:35,079
compiler is free to say like no yeah I

1491
01:05:33,820 --> 01:05:36,700
didn't really I don't really like it and

1492
01:05:35,079 --> 01:05:45,039
then anything that isn't marked in line

1493
01:05:36,699 --> 01:05:46,689
it can still in my memory by valve

1494
01:05:45,039 --> 01:05:47,710
question date something - how much

1495
01:05:46,690 --> 01:05:52,480
longer do you think this is going to

1496
01:05:47,710 --> 01:05:55,539
take well each day is only an hour so if

1497
01:05:52,480 --> 01:05:57,909
you think about it 72 hours is like one

1498
01:05:55,539 --> 01:05:59,469
and a half work weeks roughly a little

1499
01:05:57,909 --> 01:06:02,019
more than that one in two thirds work

1500
01:05:59,469 --> 01:06:04,799
weeks every one through that so on date

1501
01:06:02,019 --> 01:06:08,230
80 will well done 2 weeks worth of work

1502
01:06:04,800 --> 01:06:11,830
which is very little so I suspect it'll

1503
01:06:08,230 --> 01:06:14,920
probably like 600 days maybe I feel like

1504
01:06:11,829 --> 01:06:17,108
we've got to do at least three four

1505
01:06:14,920 --> 01:06:21,880
months of coding to make a game from

1506
01:06:17,108 --> 01:06:23,559
scratch right and so if you multiply

1507
01:06:21,880 --> 01:06:25,840
that out to an hour a day you're talking

1508
01:06:23,559 --> 01:06:28,269
about you know 600 days something like

1509
01:06:25,840 --> 01:06:30,130
that so we'll be here for a long time

1510
01:06:28,269 --> 01:06:31,809
because that one one hour days is not

1511
01:06:30,130 --> 01:06:33,730
very much code right we don't get to do

1512
01:06:31,809 --> 01:06:36,929
very much and I'm talking the whole time

1513
01:06:33,730 --> 01:06:36,929
too so

1514
01:06:37,230 --> 01:06:39,289
you

1515
01:06:49,519 --> 01:06:54,889
could you take a look at player

1516
01:06:51,949 --> 01:07:03,559
collision they spawned very close to

1517
01:06:54,889 --> 01:07:06,500
each other they spawn very close to each

1518
01:07:03,559 --> 01:07:11,110
other happy vertex what do you mean by

1519
01:07:06,500 --> 01:07:15,280
they spawn very close to each other uh

1520
01:07:11,110 --> 01:07:15,280
I'm not sure what that means

1521
01:07:15,730 --> 01:07:24,050
sorry I don't understand that and also

1522
01:07:22,849 --> 01:07:25,369
to answer the question out the almond

1523
01:07:24,050 --> 01:07:28,550
milk I make it myself

1524
01:07:25,369 --> 01:07:30,199
now which is a bit time-consuming I

1525
01:07:28,550 --> 01:07:32,480
would like to purchase it from the store

1526
01:07:30,199 --> 01:07:35,269
but unfortunately the store brought

1527
01:07:32,480 --> 01:07:36,679
versions have just tons of stuff added

1528
01:07:35,269 --> 01:07:44,059
and I really just kind of want to plain

1529
01:07:36,679 --> 01:07:45,489
almond milk oh and for the person who's

1530
01:07:44,059 --> 01:07:48,860
asking what the streaming schedule is

1531
01:07:45,489 --> 01:07:51,589
it's basically really easy to find you

1532
01:07:48,860 --> 01:07:54,170
can just go to this tweet spot here if

1533
01:07:51,590 --> 01:07:57,039
you if you go to hammy hero org if you

1534
01:07:54,170 --> 01:07:59,750
click on the tweet spot the tweet spot

1535
01:07:57,039 --> 01:08:01,009
tweets the schedule so every week it

1536
01:07:59,750 --> 01:08:03,769
tweets the schedule for the week and

1537
01:08:01,010 --> 01:08:05,030
then every day it reminds you about when

1538
01:08:03,769 --> 01:08:10,670
it's on so if you want to follow it the

1539
01:08:05,030 --> 01:08:13,580
tweet bot is your friend are there any

1540
01:08:10,670 --> 01:08:18,170
good uses for 40 vectors yes there are

1541
01:08:13,579 --> 01:08:21,079
two very very very very very common I

1542
01:08:18,170 --> 01:08:24,289
almost say ubiquitous cases for 40

1543
01:08:21,079 --> 01:08:26,528
vectors and you've already seen one of

1544
01:08:24,289 --> 01:08:29,000
them if you've been watching the series

1545
01:08:26,529 --> 01:08:31,730
but we haven't actually used them yet

1546
01:08:29,000 --> 01:08:38,210
so we might add a 40 vector for it so

1547
01:08:31,729 --> 01:08:43,689
for D vectors among other things from

1548
01:08:38,210 --> 01:08:43,689
the use you haven't seen is quaternions

1549
01:08:44,048 --> 01:08:53,829
so quaternions are a four element vector

1550
01:08:47,600 --> 01:08:57,079
and they're basically stored as X Y Z W

1551
01:08:53,829 --> 01:09:00,039
and they are stored they're sort of

1552
01:08:57,079 --> 01:09:03,229
stored you can think of them as being

1553
01:09:00,039 --> 01:09:06,710
stored sort of in a 3:1

1554
01:09:03,229 --> 01:09:09,588
sort of partition basically the the

1555
01:09:06,710 --> 01:09:11,989
first three numbers store the axis of

1556
01:09:09,588 --> 01:09:13,430
rotation so like it's quadrillions or

1557
01:09:11,988 --> 01:09:15,048
store rotations or array of store

1558
01:09:13,430 --> 01:09:17,150
rotation values so if you imagine an

1559
01:09:15,048 --> 01:09:20,180
axis of rotation and an angle around

1560
01:09:17,149 --> 01:09:21,679
that axis right so I have something that

1561
01:09:20,180 --> 01:09:23,060
I'm spinning around like the axle of a

1562
01:09:21,680 --> 01:09:25,159
car right and the wheels are spinning

1563
01:09:23,060 --> 01:09:26,210
around it I've got an angle of rotation

1564
01:09:25,159 --> 01:09:27,979
theta

1565
01:09:26,210 --> 01:09:31,548
I bet an axis of rotation we'll call

1566
01:09:27,979 --> 01:09:34,729
that V quaternions can be thought of in

1567
01:09:31,548 --> 01:09:38,359
two parts one is the W component which

1568
01:09:34,729 --> 01:09:40,429
is just cosine of theta over two and so

1569
01:09:38,359 --> 01:09:42,710
whatever this this theta was it's cosine

1570
01:09:40,430 --> 01:09:46,940
of Phi over 2 and the V component is

1571
01:09:42,710 --> 01:09:52,009
this the XYZ is just sine of theta over

1572
01:09:46,939 --> 01:09:54,919
two times V times that right and so

1573
01:09:52,009 --> 01:09:56,539
that's a four a four element vector that

1574
01:09:54,920 --> 01:09:59,690
typically is stored as a vector for I

1575
01:09:56,539 --> 01:10:01,880
store it as a V for in my code we won't

1576
01:09:59,689 --> 01:10:03,619
probably ever use these in hand made

1577
01:10:01,880 --> 01:10:06,230
hero because we don't have to really do

1578
01:10:03,619 --> 01:10:08,180
full 3d rotation work in handmade hero

1579
01:10:06,229 --> 01:10:11,988
but that's what they're used for a lot

1580
01:10:08,180 --> 01:10:16,340
in engine code I used some today in fact

1581
01:10:11,988 --> 01:10:20,659
at work for number two as the one you

1582
01:10:16,340 --> 01:10:25,489
have seen before colors so oftentimes

1583
01:10:20,659 --> 01:10:29,329
you'll have RGB a colors right and so

1584
01:10:25,488 --> 01:10:30,859
again a 3.1 storage but you know

1585
01:10:29,329 --> 01:10:34,340
typically that stored is a vector four

1586
01:10:30,859 --> 01:10:35,089
and we could go do that right now and

1587
01:10:34,340 --> 01:10:37,220
hamate hero

1588
01:10:35,090 --> 01:10:39,529
we just haven't but that's probably

1589
01:10:37,220 --> 01:10:41,210
something we will do eventually so you

1590
01:10:39,529 --> 01:10:43,340
typically will have a thing that stores

1591
01:10:41,210 --> 01:10:45,609
colors that way just for utility a lot

1592
01:10:43,340 --> 01:10:45,610
of times

1593
01:10:49,710 --> 01:10:52,890
[Music]

1594
01:10:52,960 --> 01:11:04,880
let's see do you tend to order your

1595
01:11:02,479 --> 01:11:07,669
functions in any sort of order or even

1596
01:11:04,880 --> 01:11:08,930
flow wise do you tend to always put one

1597
01:11:07,670 --> 01:11:12,920
above the other or do you never think

1598
01:11:08,930 --> 01:11:19,159
about it so yeah because a/c is kind of

1599
01:11:12,920 --> 01:11:22,730
crappy and it it can't call a function

1600
01:11:19,159 --> 01:11:24,800
that hasn't been declared yet the reason

1601
01:11:22,729 --> 01:11:26,839
that I sort my functions the way I do is

1602
01:11:24,800 --> 01:11:29,119
because I tend to put all the things

1603
01:11:26,840 --> 01:11:30,350
that get called by functions above the

1604
01:11:29,119 --> 01:11:34,010
functions that call them so I don't have

1605
01:11:30,350 --> 01:11:36,530
to have additional declarations so I do

1606
01:11:34,010 --> 01:11:38,960
do that sorting beyond that the only way

1607
01:11:36,529 --> 01:11:41,719
I really sort is file wise I tend to

1608
01:11:38,960 --> 01:11:43,489
split out my function so that functions

1609
01:11:41,720 --> 01:11:46,670
that tend to go together like ones that

1610
01:11:43,488 --> 01:11:48,049
all work with simulation you know or

1611
01:11:46,670 --> 01:11:49,970
once it all work with entities or

1612
01:11:48,050 --> 01:11:51,500
whatever go into those files so that I

1613
01:11:49,970 --> 01:11:53,180
can keep them separate and look at them

1614
01:11:51,500 --> 01:11:55,640
more cleanly but that's really just

1615
01:11:53,180 --> 01:11:56,960
because editors are lousy and don't do a

1616
01:11:55,640 --> 01:11:59,570
good job of visualizing some of that

1617
01:11:56,960 --> 01:12:03,680
stuff but that's so that's that's just

1618
01:11:59,569 --> 01:12:04,939
purely organizational in that sense will

1619
01:12:03,680 --> 01:12:06,350
you extend your bankowski collision

1620
01:12:04,939 --> 01:12:08,619
implementation to deal with rotation

1621
01:12:06,350 --> 01:12:11,239
arbitrary convex polygons in the future

1622
01:12:08,619 --> 01:12:15,619
so we don't really know yet what we're

1623
01:12:11,238 --> 01:12:17,149
going to do so rotation I don't think we

1624
01:12:15,619 --> 01:12:18,738
ever actually need because I don't know

1625
01:12:17,149 --> 01:12:21,649
that we're doing much with rotation we

1626
01:12:18,738 --> 01:12:24,859
might I'm not sure so we'll have to see

1627
01:12:21,649 --> 01:12:26,839
if we ever have rotation and in terms of

1628
01:12:24,859 --> 01:12:30,920
our arbitrary Comics polygons probably

1629
01:12:26,840 --> 01:12:32,449
yes I suspect we will want that at the

1630
01:12:30,920 --> 01:12:34,909
very least we'll probably at least want

1631
01:12:32,449 --> 01:12:37,550
circular or oval regions or rounded

1632
01:12:34,909 --> 01:12:40,220
rectangles and things like that if not

1633
01:12:37,550 --> 01:12:44,239
arbitrary polygons so I'm not sure hard

1634
01:12:40,220 --> 01:12:46,400
to say but possibly but who knows I

1635
01:12:44,238 --> 01:12:48,139
really don't know it's worth noting that

1636
01:12:46,399 --> 01:12:50,449
collision detection doesn't work with

1637
01:12:48,140 --> 01:12:53,090
rotation in terms of animated rotation

1638
01:12:50,449 --> 01:12:59,229
there really isn't a collision solver

1639
01:12:53,090 --> 01:13:01,170
that handles our that properly handles a

1640
01:12:59,229 --> 01:13:03,869
continuous rotation

1641
01:13:01,170 --> 01:13:07,739
you can write ones that do essentially

1642
01:13:03,869 --> 01:13:09,390
like search based handling of of that

1643
01:13:07,738 --> 01:13:13,439
kind of thing but there's really nothing

1644
01:13:09,390 --> 01:13:17,010
that's not iterative in time that

1645
01:13:13,439 --> 01:13:20,159
handles animated rotation at least

1646
01:13:17,010 --> 01:13:22,860
enough that I've ever seen so rotation

1647
01:13:20,159 --> 01:13:24,899
that animates is kind of problematic and

1648
01:13:22,859 --> 01:13:26,009
usually people don't actually handle it

1649
01:13:24,899 --> 01:13:27,509
properly they usually just use the

1650
01:13:26,010 --> 01:13:31,230
rotation from the start or the finish or

1651
01:13:27,510 --> 01:13:34,650
they bisect in between but there's no

1652
01:13:31,229 --> 01:13:36,539
way to handle it a do exact collision

1653
01:13:34,649 --> 01:13:42,238
between spinning things that are

1654
01:13:36,539 --> 01:13:46,019
extruded unless you went up in dimension

1655
01:13:42,238 --> 01:13:48,269
I don't know if you can you might I

1656
01:13:46,020 --> 01:13:50,429
think it's still nonlinear so yeah I

1657
01:13:48,270 --> 01:13:53,100
don't know what you would do like gjk

1658
01:13:50,429 --> 01:13:55,230
probably wouldn't work I'm not sure so

1659
01:13:53,100 --> 01:13:57,300
yeah so that's kind of a tough topic

1660
01:13:55,229 --> 01:13:59,759
there really aren't very good solutions

1661
01:13:57,300 --> 01:14:01,590
for that or at least they're not that I

1662
01:13:59,760 --> 01:14:05,520
know of you can't always have to do

1663
01:14:01,590 --> 01:14:08,789
something a little janky whereas n just

1664
01:14:05,520 --> 01:14:10,410
to be clear to contrast that with things

1665
01:14:08,789 --> 01:14:11,429
that don't have an animated rotation

1666
01:14:10,409 --> 01:14:13,679
meaning if you just assume that the

1667
01:14:11,429 --> 01:14:17,329
anime rotation was constant across the

1668
01:14:13,679 --> 01:14:20,489
time step those can be solved exactly

1669
01:14:17,329 --> 01:14:22,920
usually like with G JK or something you

1670
01:14:20,488 --> 01:14:25,049
can get those exactly right but those

1671
01:14:22,920 --> 01:14:28,109
schemes don't work when the when the

1672
01:14:25,050 --> 01:14:30,929
rotation is animated so you tend to have

1673
01:14:28,109 --> 01:14:32,099
to augment whatever the collision

1674
01:14:30,929 --> 01:14:34,739
detector is with something that

1675
01:14:32,100 --> 01:14:37,079
approximates that like maybe like I said

1676
01:14:34,738 --> 01:14:40,019
subdivides it or does something else or

1677
01:14:37,079 --> 01:14:42,689
takes the conservative maximum area then

1678
01:14:40,020 --> 01:14:45,449
the rotation would do and does that test

1679
01:14:42,689 --> 01:14:47,519
and then if that fails then it does the

1680
01:14:45,448 --> 01:14:49,979
subdivision you know stuff like this it

1681
01:14:47,520 --> 01:14:51,179
gets it gets much nastier so you do want

1682
01:14:49,979 --> 01:14:54,119
to cut try to avoid those if you can

1683
01:14:51,179 --> 01:14:55,649
because you you're always going to have

1684
01:14:54,119 --> 01:14:58,559
kind of a substandard solution if you

1685
01:14:55,649 --> 01:15:00,659
really want to do completely accurate

1686
01:14:58,560 --> 01:15:01,860
rotational collision detection so it's

1687
01:15:00,659 --> 01:15:04,488
best to try and figure out ways to avoid

1688
01:15:01,859 --> 01:15:04,488
it if you can

1689
01:15:14,300 --> 01:15:20,730
why is win32 mouse handling so annoying

1690
01:15:17,899 --> 01:15:22,920
so if you're having annoyances with

1691
01:15:20,729 --> 01:15:25,738
mouse down and mouse up and that sort of

1692
01:15:22,920 --> 01:15:30,300
stuff I would probably say you might be

1693
01:15:25,738 --> 01:15:32,819
happier using raw raw input mouse and

1694
01:15:30,300 --> 01:15:35,279
just querying the mouse directly you

1695
01:15:32,819 --> 01:15:37,380
might might have better luck with that

1696
01:15:35,279 --> 01:15:43,109
but as to why it's so annoying it's

1697
01:15:37,380 --> 01:15:45,989
because yeah it's it's windows you know

1698
01:15:43,109 --> 01:15:47,609
I mean they and it's it's true on a lot

1699
01:15:45,988 --> 01:15:49,139
of platforms actually a lot of platforms

1700
01:15:47,609 --> 01:15:50,849
just don't think through how to pass

1701
01:15:49,140 --> 01:15:52,500
input on to the apps properly and so

1702
01:15:50,850 --> 01:15:54,920
they end up with a lot of problems like

1703
01:15:52,500 --> 01:15:57,569
and Windows is definitely one of them

1704
01:15:54,920 --> 01:15:58,789
they don't do a good job handing input

1705
01:15:57,569 --> 01:16:08,158
to the application they never have

1706
01:15:58,789 --> 01:16:11,340
probably never will you see when will

1707
01:16:08,158 --> 01:16:15,750
the z-index of the entities occur what

1708
01:16:11,340 --> 01:16:18,949
is the Z index which Z index are you

1709
01:16:15,750 --> 01:16:23,640
referring to quit sacado

1710
01:16:18,948 --> 01:16:26,569
and as for whether anyone here is old

1711
01:16:23,640 --> 01:16:30,210
enough to miss the great space coaster

1712
01:16:26,569 --> 01:16:31,769
there is no good news that is good good

1713
01:16:30,210 --> 01:16:34,310
news with Gary is all I have to say

1714
01:16:31,770 --> 01:16:34,310
about that

1715
01:16:43,439 --> 01:16:48,009
do you ever foresee the project getting

1716
01:16:45,760 --> 01:16:49,570
to a stage in which you accept pull and

1717
01:16:48,010 --> 01:16:52,000
merge requests from other developers to

1718
01:16:49,569 --> 01:16:53,799
fix bugs add features or other things of

1719
01:16:52,000 --> 01:16:55,448
course you would first have to start

1720
01:16:53,800 --> 01:17:01,690
using version control before your hard

1721
01:16:55,448 --> 01:17:03,939
drive fails so I would probably say I

1722
01:17:01,689 --> 01:17:07,479
don't know that I'll ever do that but

1723
01:17:03,939 --> 01:17:09,099
the code for the game again will be

1724
01:17:07,479 --> 01:17:12,129
released into the public domain two

1725
01:17:09,100 --> 01:17:15,400
years after the game ships so at that

1726
01:17:12,130 --> 01:17:17,140
point anyone who wants to can host I

1727
01:17:15,399 --> 01:17:18,670
mean it'll be public domain at that

1728
01:17:17,140 --> 01:17:21,250
point so anyone who wants to be able to

1729
01:17:18,670 --> 01:17:22,630
host their own repository and if there

1730
01:17:21,250 --> 01:17:25,590
wants to be a community maintained

1731
01:17:22,630 --> 01:17:25,590
edition they can go nuts

1732
01:17:29,960 --> 01:17:34,869
and for the person who's asking why does

1733
01:17:32,600 --> 01:17:37,039
the player even need to jump they don't

1734
01:17:34,869 --> 01:17:38,569
we just threw that in one day because

1735
01:17:37,039 --> 01:17:40,069
someone asked about it so we threw in

1736
01:17:38,569 --> 01:17:41,448
the implication of a jump and since then

1737
01:17:40,069 --> 01:17:42,859
it's just been fun to test the Z

1738
01:17:41,448 --> 01:17:44,329
movement because we know we're going to

1739
01:17:42,859 --> 01:17:46,130
have things like flying enemies and

1740
01:17:44,329 --> 01:17:49,809
stuff so it was just in there for

1741
01:17:46,130 --> 01:17:49,810
testing the player isn't going to jump

1742
01:17:50,319 --> 01:17:54,229
it's not really a game where the player

1743
01:17:52,488 --> 01:17:55,669
jumps but it was just useful for testing

1744
01:17:54,229 --> 01:17:57,799
so it stayed in eventually it'll get

1745
01:17:55,670 --> 01:18:00,529
removed when we're when we've got all

1746
01:17:57,800 --> 01:18:12,079
the Z stuff worked out exactly we want

1747
01:18:00,529 --> 01:18:12,439
it it can it can go I see what you're

1748
01:18:12,079 --> 01:18:14,448
saying

1749
01:18:12,439 --> 01:18:17,948
happy vertex you're saying if you want

1750
01:18:14,448 --> 01:18:20,179
to create multiple characters to play

1751
01:18:17,948 --> 01:18:22,969
then they'll spawn inside of each other

1752
01:18:20,180 --> 01:18:24,460
yes we haven't done anything about that

1753
01:18:22,969 --> 01:18:29,960
there's two ways you could handle that

1754
01:18:24,460 --> 01:18:32,899
and we what we'll probably do is I would

1755
01:18:29,960 --> 01:18:35,359
say we have this here I can add that for

1756
01:18:32,899 --> 01:18:38,599
you there what's the plan for robustness

1757
01:18:35,359 --> 01:18:41,630
we'll handle that so basically like you

1758
01:18:38,600 --> 01:18:44,630
know implement reprojection to handle

1759
01:18:41,630 --> 01:18:46,010
interpenetration or something we should

1760
01:18:44,630 --> 01:18:48,859
we should go ahead and do the work when

1761
01:18:46,010 --> 01:18:52,250
we do this through this here basically

1762
01:18:48,859 --> 01:18:53,630
like right now we don't handle what

1763
01:18:52,250 --> 01:18:55,760
happens when things get stuck in other

1764
01:18:53,630 --> 01:18:57,770
things right which can happen any time

1765
01:18:55,760 --> 01:18:58,820
the game creates an entity on top of

1766
01:18:57,770 --> 01:19:00,290
another entity or something that what we

1767
01:18:58,819 --> 01:19:02,238
want to do is make that code more robust

1768
01:19:00,289 --> 01:19:05,119
and have some ways that that can be

1769
01:19:02,238 --> 01:19:06,738
resolved and that also will fix problems

1770
01:19:05,119 --> 01:19:09,229
with floating point imprecision where we

1771
01:19:06,738 --> 01:19:10,669
do solves and we move something and we

1772
01:19:09,229 --> 01:19:12,079
move it a little too far so it ends up

1773
01:19:10,670 --> 01:19:13,789
being technically inside something else

1774
01:19:12,079 --> 01:19:15,019
we'd like to be able to make it so that

1775
01:19:13,789 --> 01:19:16,189
that's not the end of the world like we

1776
01:19:15,020 --> 01:19:18,110
want to make it so the clintons has to

1777
01:19:16,189 --> 01:19:19,399
robusta that and so yeah we'll probably

1778
01:19:18,109 --> 01:19:21,139
do that we won't probably it to it this

1779
01:19:19,399 --> 01:19:22,519
week but we'll get to it when we soon

1780
01:19:21,140 --> 01:19:25,789
let me do the collision detection pass

1781
01:19:22,520 --> 01:19:26,810
of just shoring things up and leaving it

1782
01:19:25,789 --> 01:19:29,269
in a state where we don't have to think

1783
01:19:26,810 --> 01:19:32,289
about it anymore until we do you know

1784
01:19:29,270 --> 01:19:32,290
the final version

1785
01:19:37,748 --> 01:19:44,328
what's the most elegant sexy piece of

1786
01:19:41,448 --> 01:19:47,418
code in the game so far I don't know

1787
01:19:44,328 --> 01:19:49,908
what a sexy piece of code is necessarily

1788
01:19:47,418 --> 01:19:51,168
it's probably the most sexy thing that

1789
01:19:49,908 --> 01:19:52,728
we have right now is the fact that we

1790
01:19:51,168 --> 01:19:55,219
can do the loop live code editing that

1791
01:19:52,729 --> 01:19:57,979
is pretty darn cool basically that's the

1792
01:19:55,219 --> 01:19:59,599
thing that we have where we implemented

1793
01:19:57,979 --> 01:20:01,699
it so that the entire game is

1794
01:19:59,599 --> 01:20:04,099
essentially able to rewind itself and do

1795
01:20:01,698 --> 01:20:06,319
stuff that's cool like that so if you

1796
01:20:04,099 --> 01:20:07,969
want to program it you can set things

1797
01:20:06,319 --> 01:20:09,738
called loop points like there I just set

1798
01:20:07,969 --> 01:20:13,219
one and then you can loop and then it'll

1799
01:20:09,738 --> 01:20:16,399
play back that section and while you're

1800
01:20:13,219 --> 01:20:18,109
doing that you can actually edit the

1801
01:20:16,399 --> 01:20:20,029
code so while that's happening you can

1802
01:20:18,109 --> 01:20:22,038
go in here and say oh you know I want to

1803
01:20:20,029 --> 01:20:25,609
edit the code I don't know what we want

1804
01:20:22,038 --> 01:20:29,359
to do exactly like maybe we want the

1805
01:20:25,609 --> 01:20:31,788
hero where's the hero in fact I can just

1806
01:20:29,359 --> 01:20:35,509
I can actually just go ahead and and put

1807
01:20:31,788 --> 01:20:41,599
this down here for now all right put

1808
01:20:35,510 --> 01:20:44,239
that up there put our code down here so

1809
01:20:41,599 --> 01:20:46,189
you know if we want to go ahead and and

1810
01:20:44,238 --> 01:20:48,438
change like the way the hero's drawn or

1811
01:20:46,189 --> 01:20:49,519
something like that we can go and do

1812
01:20:48,439 --> 01:20:51,650
that like maybe we want to give him a

1813
01:20:49,519 --> 01:20:52,699
second head that's what I like doing I

1814
01:20:51,649 --> 01:20:56,328
think I've done that a couple times

1815
01:20:52,698 --> 01:20:59,658
right just give him you know another

1816
01:20:56,328 --> 01:21:01,340
another just another noggin right we can

1817
01:20:59,658 --> 01:21:04,279
just do that and so basically all of our

1818
01:21:01,340 --> 01:21:05,748
code is live you give it as many as you

1819
01:21:04,279 --> 01:21:08,509
want actually right and maybe you want

1820
01:21:05,748 --> 01:21:10,938
another one on there that's totally fine

1821
01:21:08,510 --> 01:21:14,090
so the fact that we can edit the code

1822
01:21:10,939 --> 01:21:15,499
live in and in a loop so we can change

1823
01:21:14,090 --> 01:21:18,469
what happens on user input and

1824
01:21:15,498 --> 01:21:19,938
everything is pretty darn awesome like a

1825
01:21:18,469 --> 01:21:21,498
ton of game engines just don't even have

1826
01:21:19,939 --> 01:21:23,300
that and they're you know fancy

1827
01:21:21,498 --> 01:21:26,510
commercial engines that cost money and

1828
01:21:23,300 --> 01:21:27,708
stuff so it's pretty cool I don't know

1829
01:21:26,510 --> 01:21:28,668
that we've done a lot of other sexy

1830
01:21:27,708 --> 01:21:30,198
stuff because right now we're working on

1831
01:21:28,668 --> 01:21:33,019
engine architecture stuff which usually

1832
01:21:30,198 --> 01:21:34,279
isn't sexy but I don't know what you

1833
01:21:33,019 --> 01:21:39,639
consider sexy you know everyone has

1834
01:21:34,279 --> 01:21:39,639
their own definitions of sexiness so

1835
01:21:41,918 --> 01:21:46,988
what program to be used for the

1836
01:21:43,698 --> 01:21:46,988
blackboard reusing mischief

1837
01:21:56,869 --> 01:22:00,300
if I'm not mistaken in your code you

1838
01:21:59,219 --> 01:22:01,829
didn't need to use any forward

1839
01:22:00,300 --> 01:22:03,719
declarations and come up against if the

1840
01:22:01,829 --> 01:22:06,029
dependencies until now is this by chance

1841
01:22:03,719 --> 01:22:07,710
or did you try in your head not to have

1842
01:22:06,029 --> 01:22:11,969
them while writing new functions trucks

1843
01:22:07,710 --> 01:22:13,649
uh well I always sort my stuff by who

1844
01:22:11,969 --> 01:22:16,590
calls who so that part wasn't accidental

1845
01:22:13,649 --> 01:22:18,238
that's just how I do that so I don't be

1846
01:22:16,590 --> 01:22:19,409
again so I don't have to have the Sigma

1847
01:22:18,238 --> 01:22:21,629
Z and again that's just because C and

1848
01:22:19,409 --> 01:22:24,359
C++ are stupid and require forward

1849
01:22:21,630 --> 01:22:27,119
declarations i it's just it's purely

1850
01:22:24,359 --> 01:22:29,189
laziness on the part of the language

1851
01:22:27,119 --> 01:22:31,949
designers and compiler writers that that

1852
01:22:29,189 --> 01:22:33,179
is the case largely the language

1853
01:22:31,949 --> 01:22:35,069
designers because they design it in such

1854
01:22:33,180 --> 01:22:35,820
a way that it's got things that don't

1855
01:22:35,069 --> 01:22:39,359
work properly

1856
01:22:35,819 --> 01:22:42,299
um but either way well ignore that for

1857
01:22:39,359 --> 01:22:47,130
now so basically what ends up happening

1858
01:22:42,300 --> 01:22:49,650
is I do do that sorting I just don't

1859
01:22:47,130 --> 01:22:52,800
have anything right now but that needs

1860
01:22:49,649 --> 01:22:54,750
to call cyclically there is one case and

1861
01:22:52,800 --> 01:22:56,010
we just we added a forward declaration

1862
01:22:54,750 --> 01:22:57,810
right there

1863
01:22:56,010 --> 01:23:02,610
where was it oh sorry it was in sim

1864
01:22:57,810 --> 01:23:03,810
region right so add entity the way that

1865
01:23:02,609 --> 01:23:06,210
that worked because it pulled in

1866
01:23:03,810 --> 01:23:08,130
references the act of adding an entity

1867
01:23:06,210 --> 01:23:11,520
could add more entities so we have one

1868
01:23:08,130 --> 01:23:14,190
forward declaration here right and so

1869
01:23:11,520 --> 01:23:17,160
I'm not trying to prevent cyclic things

1870
01:23:14,189 --> 01:23:20,250
they just don't tend to happen that

1871
01:23:17,159 --> 01:23:21,750
often they're kind of fairly rare in my

1872
01:23:20,250 --> 01:23:24,750
code I find so we just don't have that

1873
01:23:21,750 --> 01:23:27,000
many and everything else I just sort so

1874
01:23:24,750 --> 01:23:29,420
I do do that sorting so that I don't

1875
01:23:27,000 --> 01:23:32,960
have to cut cut and paste to make

1876
01:23:29,420 --> 01:23:32,960
forward declarations

1877
01:23:38,829 --> 01:23:42,319
chrysocolla

1878
01:23:39,979 --> 01:23:43,399
enemies drawing back to front I don't

1879
01:23:42,319 --> 01:23:46,699
know when we'll do that we'll probably

1880
01:23:43,399 --> 01:23:47,629
do entities drawing back to front first

1881
01:23:46,699 --> 01:23:49,220
of all I don't know that we'll probably

1882
01:23:47,630 --> 01:23:50,900
ever do enemies drawing back to front

1883
01:23:49,220 --> 01:23:53,329
will probably draw any front to back

1884
01:23:50,899 --> 01:23:54,739
because it's usually faster

1885
01:23:53,329 --> 01:23:58,000
so we'll do enemies drawing front to

1886
01:23:54,739 --> 01:23:58,000
back probably when we do the renderer

1887
01:23:58,960 --> 01:24:02,689
will there be a hand made hero

1888
01:24:01,010 --> 01:24:04,699
convention annually after the game

1889
01:24:02,689 --> 01:24:07,009
release yes of course they'll be one

1890
01:24:04,699 --> 01:24:07,819
before the game releases of course we're

1891
01:24:07,010 --> 01:24:10,300
going to have a hand made hero

1892
01:24:07,819 --> 01:24:10,299
convention

1893
01:24:24,449 --> 01:24:30,220
are you implementing any advanced data

1894
01:24:28,210 --> 01:24:32,710
structures and would you recommend

1895
01:24:30,220 --> 01:24:36,369
learning assembly to aid in optimizing C

1896
01:24:32,710 --> 01:24:37,480
programs any tips on practice so we have

1897
01:24:36,369 --> 01:24:41,019
implemented some advanced data

1898
01:24:37,479 --> 01:24:42,519
structures our chunk store is sort of an

1899
01:24:41,020 --> 01:24:44,320
advanced data structure it depends on

1900
01:24:42,520 --> 01:24:46,990
what you consider advanced like it's not

1901
01:24:44,319 --> 01:24:48,699
advanced advanced like I've written way

1902
01:24:46,989 --> 01:24:51,250
more complicated data structures than

1903
01:24:48,699 --> 01:24:53,079
this before but it is a data structure

1904
01:24:51,250 --> 01:24:56,140
that is you know it's a hash table with

1905
01:24:53,079 --> 01:25:00,100
a linked list inside it so you know I

1906
01:24:56,140 --> 01:25:03,010
mean is it advanced no is it you know

1907
01:25:00,100 --> 01:25:05,170
more than a linked list yes is it more

1908
01:25:03,010 --> 01:25:07,750
than a hash table yes so I don't know

1909
01:25:05,170 --> 01:25:13,300
like you know where you want to put that

1910
01:25:07,750 --> 01:25:15,970
it's not super fancy but it is more than

1911
01:25:13,300 --> 01:25:17,140
nothing so you know advanced might be

1912
01:25:15,970 --> 01:25:19,720
the wrong term but we're implementing

1913
01:25:17,140 --> 01:25:21,430
data structures that are not just

1914
01:25:19,720 --> 01:25:23,380
exactly what you'd find in a book that

1915
01:25:21,430 --> 01:25:25,210
are amalgams of that we haven't had to

1916
01:25:23,380 --> 01:25:26,980
do anything yet that was fully out there

1917
01:25:25,210 --> 01:25:28,420
like occasionally I've employed data

1918
01:25:26,979 --> 01:25:29,619
structures that are like totally wild

1919
01:25:28,420 --> 01:25:32,739
and that don't really have a

1920
01:25:29,619 --> 01:25:34,000
classification I don't know that those

1921
01:25:32,739 --> 01:25:36,219
are going to call furthermost

1922
01:25:34,000 --> 01:25:37,600
things the reason that those common data

1923
01:25:36,220 --> 01:25:38,619
structures are the classic ones is

1924
01:25:37,600 --> 01:25:40,329
because you tend to able to build

1925
01:25:38,619 --> 01:25:42,640
whatever you need out of them and so you

1926
01:25:40,329 --> 01:25:44,590
know who knows as for learning assembly

1927
01:25:42,640 --> 01:25:47,350
language I think a simulator is just

1928
01:25:44,590 --> 01:25:48,159
pretty important to be able to know you

1929
01:25:47,350 --> 01:25:49,360
don't necessarily have to be able to

1930
01:25:48,159 --> 01:25:51,130
write assembly code you have to be able

1931
01:25:49,359 --> 01:25:52,539
to read it because understanding what

1932
01:25:51,130 --> 01:25:54,010
the compiler is doing and looking at it

1933
01:25:52,539 --> 01:25:55,329
and understanding why things are slow by

1934
01:25:54,010 --> 01:25:56,640
looking at what the CPU actually has to

1935
01:25:55,329 --> 01:25:58,779
do is pretty crucial

1936
01:25:56,640 --> 01:26:00,220
being able to write whole programs the

1937
01:25:58,779 --> 01:26:02,880
same language isn't necessary I don't

1938
01:26:00,220 --> 01:26:02,880
think most of the time

1939
01:26:10,479 --> 01:26:15,919
let's see is there such a thing it's a

1940
01:26:12,949 --> 01:26:19,159
hardware cursor as a compared to a

1941
01:26:15,920 --> 01:26:23,060
software mouse cursor the answer is in

1942
01:26:19,159 --> 01:26:25,279
the old days yes there was okay so at

1943
01:26:23,060 --> 01:26:26,810
first there was no difference then there

1944
01:26:25,279 --> 01:26:27,949
was a difference then there was no

1945
01:26:26,810 --> 01:26:29,840
difference again and then there was a

1946
01:26:27,949 --> 01:26:36,349
difference and then there was no

1947
01:26:29,840 --> 01:26:39,560
difference again in the early early

1948
01:26:36,350 --> 01:26:42,289
early days there were only displays that

1949
01:26:39,560 --> 01:26:43,910
you basically set pixel values in and

1950
01:26:42,289 --> 01:26:45,380
that got displayed and so there was no

1951
01:26:43,909 --> 01:26:46,550
such thing as a hardware mouse cursor if

1952
01:26:45,380 --> 01:26:47,989
you're going to draw one you just had to

1953
01:26:46,550 --> 01:26:50,270
draw it a lot of times they used XOR

1954
01:26:47,989 --> 01:26:51,260
drawing to pick it up put it back so

1955
01:26:50,270 --> 01:26:52,700
that they didn't have because they

1956
01:26:51,260 --> 01:26:54,079
didn't have multiple been have double

1957
01:26:52,699 --> 01:26:55,689
buffering and they didn't have a lot of

1958
01:26:54,079 --> 01:26:58,699
copy bandwidth and that sort of stuff

1959
01:26:55,689 --> 01:27:01,609
then because mouse cursors became such

1960
01:26:58,699 --> 01:27:03,319
an important thing and also because

1961
01:27:01,609 --> 01:27:05,059
sprites were common which is basically

1962
01:27:03,319 --> 01:27:06,859
what a mouse cursor is sprites were

1963
01:27:05,060 --> 01:27:09,260
common in game hardware hardware in

1964
01:27:06,859 --> 01:27:11,779
general had the concept of sprites mouse

1965
01:27:09,260 --> 01:27:14,239
cursors often were then implemented with

1966
01:27:11,779 --> 01:27:16,369
hardware that actually was doing the

1967
01:27:14,239 --> 01:27:18,889
overlay and so then there was definitely

1968
01:27:16,369 --> 01:27:24,529
a difference between a hardware mouse

1969
01:27:18,890 --> 01:27:29,930
cursor and software mouse cursor then we

1970
01:27:24,529 --> 01:27:34,090
went to two 3d graphics right where we

1971
01:27:29,930 --> 01:27:37,039
had a hardware that was doing 3d and

1972
01:27:34,090 --> 01:27:40,730
eventually it was doing all sorts of

1973
01:27:37,039 --> 01:27:42,319
bitmap compositing so now there really

1974
01:27:40,729 --> 01:27:43,909
is no difference between a hardware

1975
01:27:42,319 --> 01:27:46,250
cursor and everything else on the screen

1976
01:27:43,909 --> 01:27:48,500
the hardware the graphics hardware is

1977
01:27:46,250 --> 01:27:49,909
doing all this compositing its

1978
01:27:48,500 --> 01:27:52,159
compositing the mouse cursor and the

1979
01:27:49,909 --> 01:27:54,050
windows and the fact that these things

1980
01:27:52,159 --> 01:27:56,180
are blurred and all that stuff is all

1981
01:27:54,050 --> 01:27:57,949
going through the hardware and so we've

1982
01:27:56,180 --> 01:27:59,570
gotten back to a point now where calling

1983
01:27:57,949 --> 01:28:00,920
the mouse cursor a hardware cursor it's

1984
01:27:59,569 --> 01:28:02,989
kind of meaningless because everything's

1985
01:28:00,920 --> 01:28:06,500
composited by the hardware not the mouse

1986
01:28:02,989 --> 01:28:10,819
cursor specifically so it's kind of big

1987
01:28:06,500 --> 01:28:12,260
goes through phases so you know the

1988
01:28:10,819 --> 01:28:16,279
answer is it depends there certainly

1989
01:28:12,260 --> 01:28:19,750
always have been differences and then on

1990
01:28:16,279 --> 01:28:19,750
differences in differences and so on

1991
01:28:22,069 --> 01:28:27,139
alright looks like we are out of time

1992
01:28:24,380 --> 01:28:29,480
and we've got most two most of the

1993
01:28:27,140 --> 01:28:32,900
questions anyway so I think we're good

1994
01:28:29,479 --> 01:28:33,469
I think that is a good place to stop for

1995
01:28:32,899 --> 01:28:36,109
today

1996
01:28:33,470 --> 01:28:39,110
again we will be back here same time

1997
01:28:36,109 --> 01:28:42,380
same place tomorrow to take a look at

1998
01:28:39,109 --> 01:28:44,210
what we want to do with Z try to now

1999
01:28:42,380 --> 01:28:46,340
that we've got Z flowing through the

2000
01:28:44,210 --> 01:28:48,050
pipe line properly everywhere would be a

2001
01:28:46,340 --> 01:28:52,100
good chance to kind of go what are we

2002
01:28:48,050 --> 01:28:54,260
doing here maybe make some 2 layer

2003
01:28:52,100 --> 01:28:55,700
structures and allow you to walk between

2004
01:28:54,260 --> 01:28:57,380
them and figure out what we're gonna do

2005
01:28:55,699 --> 01:28:58,729
because yeah really that's what we got

2006
01:28:57,380 --> 01:29:01,369
to figure out like how is that stuff

2007
01:28:58,729 --> 01:29:02,809
going to work so I hope you will join me

2008
01:29:01,369 --> 01:29:03,949
to come back tomorrow to join me for

2009
01:29:02,810 --> 01:29:08,660
that let me go ahead and save our

2010
01:29:03,949 --> 01:29:11,539
mischief blackboard area and of course

2011
01:29:08,659 --> 01:29:13,010
if you would like to follow along at

2012
01:29:11,539 --> 01:29:14,569
home with with these episodes it's

2013
01:29:13,010 --> 01:29:16,100
pretty easy to do if you want to

2014
01:29:14,569 --> 01:29:17,750
pre-order the game it comes with a

2015
01:29:16,100 --> 01:29:19,430
source code so if you want to follow

2016
01:29:17,750 --> 01:29:21,289
along the source code it's pretty easy

2017
01:29:19,430 --> 01:29:22,970
you can go to hammy here org and do

2018
01:29:21,289 --> 01:29:24,859
pre-order and you get a download link

2019
01:29:22,970 --> 01:29:26,090
and then every night after the stream

2020
01:29:24,859 --> 01:29:28,579
you can download the source code which

2021
01:29:26,090 --> 01:29:30,020
is pretty cool and of course you'll also

2022
01:29:28,579 --> 01:29:32,239
get the game once it's done and once we

2023
01:29:30,020 --> 01:29:33,890
start doing builds of the game regularly

2024
01:29:32,239 --> 01:29:35,599
you get those and all that good stuff

2025
01:29:33,890 --> 01:29:37,640
it also comes to the art assets that we

2026
01:29:35,600 --> 01:29:40,789
use so you can use those for testing as

2027
01:29:37,640 --> 01:29:41,810
well we have a patreon that you can

2028
01:29:40,789 --> 01:29:43,189
subscribe to if you want support the

2029
01:29:41,810 --> 01:29:45,140
video series that's linked up there as

2030
01:29:43,189 --> 01:29:46,729
well we have a tweet bot that tweets the

2031
01:29:45,140 --> 01:29:47,930
schedule at you so if you have a Twitter

2032
01:29:46,729 --> 01:29:49,039
account you want to know when the

2033
01:29:47,930 --> 01:29:51,140
streams going to be on that sort of

2034
01:29:49,039 --> 01:29:54,350
stuff that's a good place to to go and

2035
01:29:51,140 --> 01:29:57,200
just follow or do whatever list it or

2036
01:29:54,350 --> 01:29:58,400
something and then we also have a site

2037
01:29:57,199 --> 01:30:00,079
you can go to where there's a forum for

2038
01:29:58,399 --> 01:30:02,750
asking questions and there's some coding

2039
01:30:00,079 --> 01:30:03,920
resources ports to Linux and Mac and by

2040
01:30:02,750 --> 01:30:05,060
the community and stuff like that so if

2041
01:30:03,920 --> 01:30:06,670
you want to follow along a different

2042
01:30:05,060 --> 01:30:08,570
platform than Windows you can do that

2043
01:30:06,670 --> 01:30:09,980
there's a bunch of good stuff up there

2044
01:30:08,569 --> 01:30:11,149
so highly recommend checking that out as

2045
01:30:09,979 --> 01:30:13,729
well

2046
01:30:11,149 --> 01:30:15,889
and yeah that's about it I hope you will

2047
01:30:13,729 --> 01:30:18,589
join me tomorrow for the next episode of

2048
01:30:15,890 --> 01:30:20,900
handmade hero until then please have a

2049
01:30:18,590 --> 01:30:23,350
wonderful Wednesday and I'll see you

2050
01:30:20,899 --> 01:30:23,349
guys on the Internet

