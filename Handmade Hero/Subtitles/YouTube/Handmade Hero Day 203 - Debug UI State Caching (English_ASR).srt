1
00:00:01,520 --> 00:00:05,339
hello everyone and welcome to handmade

2
00:00:03,779 --> 00:00:10,379
here I'll show Rico complete game live

3
00:00:05,339 --> 00:00:12,030
on stream we are kind of in we're in a

4
00:00:10,380 --> 00:00:16,800
bit of technical difficulty land it's

5
00:00:12,029 --> 00:00:19,410
true I my laptop my pet the power port

6
00:00:16,800 --> 00:00:21,868
on my laptop fried itself and so I had

7
00:00:19,410 --> 00:00:24,539
to kind of provision this laptop kind of

8
00:00:21,868 --> 00:00:26,219
in hope that will work and you know I

9
00:00:24,539 --> 00:00:28,920
think we're going I was able to read the

10
00:00:26,219 --> 00:00:30,329
chat during the pre stream so I'm hoping

11
00:00:28,920 --> 00:00:31,560
that everything's fine I don't

12
00:00:30,329 --> 00:00:33,899
necessarily know if everything's fine

13
00:00:31,559 --> 00:00:35,670
but we're doing the best we can under

14
00:00:33,899 --> 00:00:38,879
the circumstances hopefully my laptop I

15
00:00:35,670 --> 00:00:40,950
sent it back for RMA hopefully it will

16
00:00:38,878 --> 00:00:42,988
get repaired and that is sort of a

17
00:00:40,950 --> 00:00:44,219
separate issue so we're going to try and

18
00:00:42,988 --> 00:00:46,140
go we're going to try and forge ahead

19
00:00:44,219 --> 00:00:47,640
here with episode 203 and assuming that

20
00:00:46,140 --> 00:00:50,189
today goes well I'll post the foot full

21
00:00:47,640 --> 00:00:52,020
handmade hero schedule to the tweet bot

22
00:00:50,189 --> 00:00:53,488
and we'll do the rest of the things for

23
00:00:52,020 --> 00:00:54,570
the week if if it turns out to be too

24
00:00:53,488 --> 00:00:55,919
much of a problem maybe we'll take a

25
00:00:54,570 --> 00:00:58,488
week off and come back to it next week

26
00:00:55,920 --> 00:01:03,510
with a repaired laptop hopefully maybe

27
00:00:58,488 --> 00:01:08,009
but anyway where we are at is we were

28
00:01:03,509 --> 00:01:11,069
working on a debug sort of rearrangement

29
00:01:08,010 --> 00:01:12,900
of the debug display and we basically

30
00:01:11,069 --> 00:01:15,658
did all the work for it that we did not

31
00:01:12,900 --> 00:01:16,770
actually get to the point where we you

32
00:01:15,659 --> 00:01:17,939
know we just kind of finished at the

33
00:01:16,769 --> 00:01:19,769
very end of stream so we did not really

34
00:01:17,938 --> 00:01:22,919
get to the point where we could actually

35
00:01:19,769 --> 00:01:24,030
test it out debug it and fix it no that

36
00:01:22,920 --> 00:01:26,340
sort of stuff so that's what we're going

37
00:01:24,030 --> 00:01:28,920
to do today just get that working now I

38
00:01:26,340 --> 00:01:30,359
did have one thing that was stupid on

39
00:01:28,920 --> 00:01:33,740
the last dream last week was a bad week

40
00:01:30,359 --> 00:01:36,719
my laptop died my credit card got stolen

41
00:01:33,739 --> 00:01:38,039
my laptop died at well I could card

42
00:01:36,719 --> 00:01:39,509
number got stolen i should say the

43
00:01:38,040 --> 00:01:40,770
actual physical card never got stolen

44
00:01:39,509 --> 00:01:42,180
but you know how it is with data

45
00:01:40,769 --> 00:01:43,530
breaches and such everyone has your

46
00:01:42,180 --> 00:01:45,659
credit card number is just a question of

47
00:01:43,530 --> 00:01:47,849
when they'll start to use it credit card

48
00:01:45,659 --> 00:01:51,000
got stolen and i like injured my foot so

49
00:01:47,849 --> 00:01:52,859
it's just like bad and so i feel like i

50
00:01:51,000 --> 00:01:54,269
did not do it for a good job talking

51
00:01:52,859 --> 00:01:56,759
about something I was just like totally

52
00:01:54,269 --> 00:01:59,670
out to lunch when we were talking about

53
00:01:56,759 --> 00:02:01,680
trees here in an order in and out of

54
00:01:59,670 --> 00:02:03,329
order walk so I do want to take a quick

55
00:02:01,680 --> 00:02:05,880
second just to like address this and

56
00:02:03,328 --> 00:02:08,459
maybe explain it correctly because I

57
00:02:05,879 --> 00:02:11,250
totally explained it wrong I think on

58
00:02:08,459 --> 00:02:12,080
the last one not that I really remember

59
00:02:11,250 --> 00:02:15,050
what I said

60
00:02:12,080 --> 00:02:15,950
but just pretty sure it's just wrong so

61
00:02:15,050 --> 00:02:19,610
I'm going to kind of correct i'm going

62
00:02:15,949 --> 00:02:21,769
to try and correct that ok so what i

63
00:02:19,610 --> 00:02:23,120
said was that if you're doing a stacked

64
00:02:21,770 --> 00:02:25,100
reversal of something then you're going

65
00:02:23,120 --> 00:02:28,340
to get a breath first thing but that's

66
00:02:25,099 --> 00:02:31,389
not really true what's actually true is

67
00:02:28,340 --> 00:02:33,170
that like the type of stack determines

68
00:02:31,389 --> 00:02:34,729
what's going to happen with your

69
00:02:33,169 --> 00:02:36,589
traversal and i'm not sure why i like my

70
00:02:34,729 --> 00:02:39,349
brain was just frazzled so i just didn't

71
00:02:36,590 --> 00:02:40,520
quite see it that way even though I've

72
00:02:39,349 --> 00:02:42,469
written this kind of code many times

73
00:02:40,520 --> 00:02:44,090
before you know sometimes your brain is

74
00:02:42,469 --> 00:02:46,759
just not on it's not on you know there's

75
00:02:44,090 --> 00:02:48,319
really not if she can say about it so if

76
00:02:46,759 --> 00:02:52,639
you take a look at kind of the case that

77
00:02:48,319 --> 00:02:54,019
I was looking at before we got kind of a

78
00:02:52,639 --> 00:02:56,689
tree and you're going to walk through

79
00:02:54,020 --> 00:02:58,790
this tree then if you think about how

80
00:02:56,689 --> 00:03:00,770
the stack sort of traversal these things

81
00:02:58,789 --> 00:03:02,120
go if you have some kind of stack and

82
00:03:00,770 --> 00:03:03,680
you're going to be pushing things on to

83
00:03:02,120 --> 00:03:06,050
it so you kind of start at the top and

84
00:03:03,680 --> 00:03:07,310
you like push things down as you go then

85
00:03:06,050 --> 00:03:11,030
if you push the first thing on to the

86
00:03:07,310 --> 00:03:15,650
stack right let's say we've got ABC you

87
00:03:11,030 --> 00:03:16,759
know d e f g h right then there's

88
00:03:15,650 --> 00:03:19,340
different ways that we could visit the

89
00:03:16,759 --> 00:03:21,590
nodes in this tree and so you know one

90
00:03:19,340 --> 00:03:23,900
way is we could do a depth first walk of

91
00:03:21,590 --> 00:03:26,689
this tree and that would be like if I

92
00:03:23,900 --> 00:03:30,379
was to do it in this order right as I

93
00:03:26,689 --> 00:03:32,090
come down so it would be like a BD right

94
00:03:30,379 --> 00:03:33,919
so I'd come down this way first all the

95
00:03:32,090 --> 00:03:35,629
way down then I can't go any further so

96
00:03:33,919 --> 00:03:38,750
I come back up and go to the other side

97
00:03:35,629 --> 00:03:40,159
and then be an e right so then I come

98
00:03:38,750 --> 00:03:41,719
back up that's very top because I can't

99
00:03:40,159 --> 00:03:44,389
go any word from there I come down to

100
00:03:41,719 --> 00:03:49,099
see than F then down all the way that

101
00:03:44,389 --> 00:03:54,529
side which is G and then H right like

102
00:03:49,099 --> 00:03:56,209
that so bab Dec fgh now if I was to do a

103
00:03:54,530 --> 00:03:58,310
breadth-first I'd end up in the order

104
00:03:56,209 --> 00:04:00,469
that I sort of said it in terms of the

105
00:03:58,310 --> 00:04:01,819
alphabet right if we do breadth-first we

106
00:04:00,469 --> 00:04:02,930
do all the ones at this level then all

107
00:04:01,819 --> 00:04:03,919
the ones at that level then all the ones

108
00:04:02,930 --> 00:04:09,580
at that level then all the ones of that

109
00:04:03,919 --> 00:04:12,560
level right so we do like a b c d e f g

110
00:04:09,580 --> 00:04:13,820
h in like alphabetical order right

111
00:04:12,560 --> 00:04:16,639
that's how i actually labeled them

112
00:04:13,819 --> 00:04:18,168
originally and the difference between

113
00:04:16,639 --> 00:04:21,349
these two is actually just how you

114
00:04:18,168 --> 00:04:24,978
operate on the stack so like if i push a

115
00:04:21,350 --> 00:04:26,040
onto the stack as a start right because

116
00:04:24,978 --> 00:04:28,500
we're always going to start at the

117
00:04:26,040 --> 00:04:29,879
the tree then really what just the only

118
00:04:28,500 --> 00:04:33,180
thing that determines what the order is

119
00:04:29,879 --> 00:04:34,680
that I get is how I choose to pull

120
00:04:33,180 --> 00:04:35,939
things off of the stack so obviously

121
00:04:34,680 --> 00:04:37,379
there's only one thing on the stack at

122
00:04:35,939 --> 00:04:39,420
first it's a so when it gets pulled off

123
00:04:37,379 --> 00:04:42,420
we're it's going to push his children on

124
00:04:39,420 --> 00:04:47,280
which is B and C right and so then the

125
00:04:42,420 --> 00:04:50,550
question is hmm excuse me the question

126
00:04:47,279 --> 00:04:53,519
is when I pull these things off if I

127
00:04:50,550 --> 00:04:55,920
want a depth-first traversal versus a

128
00:04:53,519 --> 00:04:59,849
breadth-first traversal breadth-first

129
00:04:55,920 --> 00:05:01,830
traversal it mostly depends on what i'm

130
00:04:59,850 --> 00:05:05,510
going to do in terms of who gets pulled

131
00:05:01,829 --> 00:05:07,859
off first right so if i pull off see

132
00:05:05,509 --> 00:05:11,039
meaning i pull off from the top of the

133
00:05:07,860 --> 00:05:12,090
stack then i will get a breath first I

134
00:05:11,040 --> 00:05:14,280
mean I sorry i'll get a depth-first

135
00:05:12,089 --> 00:05:16,649
traversal because if i pull off see i

136
00:05:14,279 --> 00:05:19,559
will then push sees child which is e

137
00:05:16,649 --> 00:05:21,239
right hmm of course it would get pushed

138
00:05:19,560 --> 00:05:23,639
in place like this comes off the sack

139
00:05:21,240 --> 00:05:26,189
right this guy technically came off the

140
00:05:23,639 --> 00:05:28,139
stack if that makes sense traveling have

141
00:05:26,189 --> 00:05:32,160
a good way to draw this may be like this

142
00:05:28,139 --> 00:05:34,079
so a comes on the stack we need to then

143
00:05:32,160 --> 00:05:37,350
pull a off the stack so a comes away

144
00:05:34,079 --> 00:05:40,620
right then we push its children on which

145
00:05:37,350 --> 00:05:42,750
are B and C right then we pull the top

146
00:05:40,620 --> 00:05:44,819
one off the stack would you see and we

147
00:05:42,750 --> 00:05:46,649
push its children on which is e right

148
00:05:44,819 --> 00:05:49,050
then we pull it off the stack and we

149
00:05:46,649 --> 00:05:52,469
take its children which is G and H right

150
00:05:49,050 --> 00:05:54,120
then we process H it has no children we

151
00:05:52,470 --> 00:05:56,330
process G it has their children we

152
00:05:54,120 --> 00:05:59,459
process be it does have children DNA

153
00:05:56,329 --> 00:06:01,439
right and you can see as we did that we

154
00:05:59,459 --> 00:06:04,709
went all the way down first and then

155
00:06:01,439 --> 00:06:07,079
came back up so in order to do the

156
00:06:04,709 --> 00:06:09,989
breadth-first traversal you actually

157
00:06:07,079 --> 00:06:12,089
pull off the front of the stack right so

158
00:06:09,990 --> 00:06:14,370
instead of the top you use the bottom so

159
00:06:12,089 --> 00:06:15,419
you push a on you pull a off that

160
00:06:14,370 --> 00:06:17,310
doesn't change there's only one thing on

161
00:06:15,420 --> 00:06:19,680
the stack but then it pushes B and C on

162
00:06:17,310 --> 00:06:21,750
instead of pulling see you pull be right

163
00:06:19,680 --> 00:06:23,670
so becomes off the stack and the stack

164
00:06:21,750 --> 00:06:29,189
pointer becomes here right so that goes

165
00:06:23,670 --> 00:06:32,629
away then you push on a right you push

166
00:06:29,189 --> 00:06:35,009
on bees children which is de right and

167
00:06:32,629 --> 00:06:36,719
then when you go to pull something you

168
00:06:35,009 --> 00:06:37,860
pull see next because you're always

169
00:06:36,720 --> 00:06:39,480
pulling off the front of the stack so

170
00:06:37,860 --> 00:06:40,920
that goes away right and you

171
00:06:39,480 --> 00:06:43,560
see that that's what does that in order

172
00:06:40,920 --> 00:06:45,449
walk for us so we always pull things off

173
00:06:43,560 --> 00:06:46,800
in the order they were pushed rather in

174
00:06:45,449 --> 00:06:49,139
the opposite order of what they were

175
00:06:46,800 --> 00:06:52,050
pushed and so that's just like a FIFO

176
00:06:49,139 --> 00:06:54,899
first in first out versus a LIFO last in

177
00:06:52,050 --> 00:07:00,120
first out right sort of view of the

178
00:06:54,899 --> 00:07:03,419
stack as a cue right as a thing that

179
00:07:00,120 --> 00:07:04,590
sort of processes items and so I just

180
00:07:03,420 --> 00:07:06,180
want to correct that because that was

181
00:07:04,589 --> 00:07:08,839
just totally wrong my explanation of it

182
00:07:06,180 --> 00:07:11,160
yesterday or not yesterday on friday

183
00:07:08,839 --> 00:07:12,750
thursday now i guess we need to do a

184
00:07:11,160 --> 00:07:15,900
friday stream on thursday was just

185
00:07:12,750 --> 00:07:17,790
totally wrong so that's like a hopefully

186
00:07:15,899 --> 00:07:20,219
a little bit better a little bit clearer

187
00:07:17,790 --> 00:07:22,800
and it end more importantly not

188
00:07:20,220 --> 00:07:26,220
erroneous way of thinking at it because

189
00:07:22,800 --> 00:07:27,990
basically like with a stack it's not the

190
00:07:26,220 --> 00:07:32,760
stock doesn't force you to traverse it

191
00:07:27,990 --> 00:07:35,850
in one way hmm and I really shouldn't

192
00:07:32,759 --> 00:07:37,949
say stack I said more q if you have a

193
00:07:35,850 --> 00:07:40,680
queue you can't reverse it in either way

194
00:07:37,949 --> 00:07:42,689
if you have a true stack meaning you can

195
00:07:40,680 --> 00:07:44,370
only pull off what the top like that

196
00:07:42,689 --> 00:07:45,990
because technically a stack usually if

197
00:07:44,370 --> 00:07:47,790
you say stack you can typically only

198
00:07:45,990 --> 00:07:49,110
pull off the top it typically gets

199
00:07:47,790 --> 00:07:52,290
called a queue if you could pull off

200
00:07:49,110 --> 00:07:54,360
either end right or or not the end you

201
00:07:52,290 --> 00:07:56,220
push on even if you only pull out one if

202
00:07:54,360 --> 00:07:58,139
you can push if you can push on one end

203
00:07:56,220 --> 00:08:00,120
and pull off the other it's typically

204
00:07:58,139 --> 00:08:04,560
called a queue if you have a true sack

205
00:08:00,120 --> 00:08:07,829
actually a true sack also only traverses

206
00:08:04,560 --> 00:08:09,360
in order you in-depth order usually it

207
00:08:07,829 --> 00:08:11,849
does that it does depth-first not

208
00:08:09,360 --> 00:08:14,759
breadth first so that was just just like

209
00:08:11,850 --> 00:08:16,950
I said just a flat-out wrong for all

210
00:08:14,759 --> 00:08:19,199
intents and purposes of what we were

211
00:08:16,949 --> 00:08:20,639
talking about so I'm not sure again

212
00:08:19,199 --> 00:08:24,300
wives think I just kind of frazzled I

213
00:08:20,639 --> 00:08:28,139
guess I'm not sure why I was thinking

214
00:08:24,300 --> 00:08:31,259
that but yeah just getting old probably

215
00:08:28,139 --> 00:08:34,949
the bottom bottom line so anyway if we

216
00:08:31,259 --> 00:08:36,689
kind of go back to him a hero now it

217
00:08:34,950 --> 00:08:38,910
doesn't really have any practical

218
00:08:36,690 --> 00:08:40,320
significance to us in the terms of the

219
00:08:38,909 --> 00:08:42,029
code we wrote necessarily but it's just

220
00:08:40,320 --> 00:08:44,250
important to understand that so that

221
00:08:42,029 --> 00:08:46,589
people aren't confused when they go to

222
00:08:44,250 --> 00:08:47,730
like work with stuff like that so if i

223
00:08:46,590 --> 00:08:49,680
remember correctly we sort of have

224
00:08:47,730 --> 00:08:51,240
things done but not really working

225
00:08:49,679 --> 00:08:53,009
properly like we had done all the code

226
00:08:51,240 --> 00:08:55,680
work

227
00:08:53,009 --> 00:08:56,939
but we weren't quite there yet and so

228
00:08:55,679 --> 00:08:59,279
like if you look we're not drawing

229
00:08:56,940 --> 00:09:01,910
anything here like the game is running

230
00:08:59,279 --> 00:09:05,730
and the debug system is obviously active

231
00:09:01,909 --> 00:09:08,250
but we're not seeing anything right and

232
00:09:05,730 --> 00:09:10,920
and so where are where is our hierarchy

233
00:09:08,250 --> 00:09:12,870
is the first question so what I want to

234
00:09:10,919 --> 00:09:15,089
do here is I want to go ahead over to

235
00:09:12,870 --> 00:09:19,049
handmade debug and see if I can get a

236
00:09:15,090 --> 00:09:23,310
bead on exactly where our hierarchy went

237
00:09:19,049 --> 00:09:25,889
right so let's go ahead and see when

238
00:09:23,309 --> 00:09:28,379
we're doing this this debug stuff what

239
00:09:25,889 --> 00:09:34,740
we're actually looking for here so let's

240
00:09:28,379 --> 00:09:37,259
go ahead over to see here and region

241
00:09:34,740 --> 00:09:39,480
debug and interact a lot to debug

242
00:09:37,259 --> 00:09:42,659
drumming menu there we are I'm going to

243
00:09:39,480 --> 00:09:45,600
go over debug draw a menu and just see

244
00:09:42,659 --> 00:09:49,860
what we've got so we do enter debug drum

245
00:09:45,600 --> 00:09:51,840
a menus loop so we do have a tree right

246
00:09:49,860 --> 00:09:54,360
so we know that at least the tree itself

247
00:09:51,840 --> 00:09:55,920
is not busted and if I look here it

248
00:09:54,360 --> 00:09:58,440
looks like the group is actually set up

249
00:09:55,919 --> 00:10:00,389
there it is right so we've just got some

250
00:09:58,440 --> 00:10:01,950
problem with our traversal not

251
00:10:00,389 --> 00:10:05,100
surprising because we haven't tested it

252
00:10:01,950 --> 00:10:07,770
yet all we did was type it in so if we

253
00:10:05,100 --> 00:10:10,740
look here we are setting the depth of

254
00:10:07,769 --> 00:10:13,350
this thing to we're setting the depth to

255
00:10:10,740 --> 00:10:15,690
one and we're pushing on sort of the

256
00:10:13,350 --> 00:10:20,629
state of the iteration here inside this

257
00:10:15,690 --> 00:10:24,150
while loop Jimmy inside this while loop

258
00:10:20,629 --> 00:10:26,460
we are obviously over a depth of zero so

259
00:10:24,149 --> 00:10:28,620
we'll proceed we grabbed the first thing

260
00:10:26,460 --> 00:10:30,389
off the stack and the first thing off

261
00:10:28,620 --> 00:10:34,049
the stack is going to be that first link

262
00:10:30,389 --> 00:10:35,429
right and it looks like it is the

263
00:10:34,049 --> 00:10:39,569
central or at least it thinks is the

264
00:10:35,429 --> 00:10:41,819
Sentinel right so that seems to me like

265
00:10:39,570 --> 00:10:43,710
that would imply because it looks like

266
00:10:41,820 --> 00:10:45,270
this code is correct it looks like it's

267
00:10:43,710 --> 00:10:49,200
setting these two things properly to me

268
00:10:45,269 --> 00:10:51,389
right because I'm seeing that that makes

269
00:10:49,200 --> 00:10:53,400
me think that maybe it just wasn't built

270
00:10:51,389 --> 00:10:55,080
correctly like it it looks like maybe

271
00:10:53,399 --> 00:10:57,509
the drawing code is not necessarily at

272
00:10:55,080 --> 00:10:58,950
fault at least not yet and that the

273
00:10:57,509 --> 00:11:00,240
problem is actually that the thing

274
00:10:58,950 --> 00:11:03,060
that's supposed to build this is not

275
00:11:00,240 --> 00:11:04,820
actually building it right and so as a

276
00:11:03,059 --> 00:11:07,409
result

277
00:11:04,820 --> 00:11:10,440
when it goes to draw the tree it just

278
00:11:07,409 --> 00:11:11,759
finds it that group contains nothing so

279
00:11:10,440 --> 00:11:13,170
let's take a look at what happens when

280
00:11:11,759 --> 00:11:15,629
the tree gets built at the beginning of

281
00:11:13,169 --> 00:11:21,839
the program and we'll just see if we can

282
00:11:15,629 --> 00:11:33,000
spot what is happening there let's find

283
00:11:21,840 --> 00:11:35,519
out all right here we go so in here when

284
00:11:33,000 --> 00:11:37,200
we first start creating the stuff you

285
00:11:35,519 --> 00:11:38,250
can see here when we begin variable

286
00:11:37,200 --> 00:11:40,290
groups and that sort of stuff I meant to

287
00:11:38,250 --> 00:11:41,519
set a breakpoint and we might actually

288
00:11:40,289 --> 00:11:42,870
start a little bit above this because

289
00:11:41,519 --> 00:11:46,799
this is actually the first place we do

290
00:11:42,870 --> 00:11:48,990
it right so maybe let's start here and

291
00:11:46,799 --> 00:11:52,139
see what happens here so we'll go to the

292
00:11:48,990 --> 00:11:58,769
root group will say to begin a debug

293
00:11:52,139 --> 00:12:01,620
variable group and yeah debug ahead

294
00:11:58,769 --> 00:12:03,720
variable adding our group we know that

295
00:12:01,620 --> 00:12:06,210
works because we saw the root group and

296
00:12:03,720 --> 00:12:12,899
here it is we're going to add ourselves

297
00:12:06,210 --> 00:12:18,780
to the group depth that that looks wrong

298
00:12:12,899 --> 00:12:21,779
to me so wait a minute wait a minute

299
00:12:18,779 --> 00:12:25,649
everyone what are we okay so how do we

300
00:12:21,779 --> 00:12:27,600
when we grab off the group stack what

301
00:12:25,649 --> 00:12:31,309
are we actually looking at we're looking

302
00:12:27,600 --> 00:12:35,129
at the group death itself alright well

303
00:12:31,309 --> 00:12:38,489
honestly that's that's correct so

304
00:12:35,129 --> 00:12:42,210
alright that's fine so we set ourselves

305
00:12:38,490 --> 00:12:46,529
to be the top person on stack at that

306
00:12:42,210 --> 00:12:48,780
depth so off we go when we call begin

307
00:12:46,529 --> 00:12:50,189
variable group now we're going to see

308
00:12:48,779 --> 00:12:53,370
what happens when we try to add one of

309
00:12:50,190 --> 00:12:56,700
these guys it looks okay so basically

310
00:12:53,370 --> 00:12:59,210
the problem is we just yet we just have

311
00:12:56,700 --> 00:13:01,800
it so that it doesn't actually call

312
00:12:59,210 --> 00:13:04,769
debug add variable to group that's the

313
00:13:01,799 --> 00:13:09,799
problem that's pretty much it right we

314
00:13:04,769 --> 00:13:13,370
want it to be doing this and it's not

315
00:13:09,799 --> 00:13:18,799
so I think that's it that may be that

316
00:13:13,370 --> 00:13:20,600
may be the primary source of air my

317
00:13:18,799 --> 00:13:23,049
voice is rough I wish I had a drink I'll

318
00:13:20,600 --> 00:13:27,110
be honest with you drop forgot my drink

319
00:13:23,049 --> 00:13:29,419
never good situation so okay all we

320
00:13:27,110 --> 00:13:31,519
really need to do here when we do debug

321
00:13:29,419 --> 00:13:32,719
that variable is now we just have to

322
00:13:31,519 --> 00:13:33,919
make sure we're calling the right one

323
00:13:32,720 --> 00:13:39,680
which is the one that actually takes the

324
00:13:33,919 --> 00:13:44,169
context and does its thing right what is

325
00:13:39,679 --> 00:13:44,169
happening here oh this was of course our

326
00:13:44,320 --> 00:13:49,278
hmmmm excuse me this is of course are a

327
00:13:47,629 --> 00:13:51,559
little problem of we still have that

328
00:13:49,278 --> 00:13:54,259
weird compile you know we we set all our

329
00:13:51,559 --> 00:13:58,699
compiler variables thing so if our debug

330
00:13:54,259 --> 00:14:01,549
stuff fails we can't actually we get

331
00:13:58,700 --> 00:14:05,180
like a null file here right which is not

332
00:14:01,549 --> 00:14:07,909
the best situation to begin yeah I don't

333
00:14:05,179 --> 00:14:10,939
really know I said that's something we

334
00:14:07,909 --> 00:14:12,649
kind of want to to fix this was kind of

335
00:14:10,940 --> 00:14:15,649
a thing that's on our list to do it's

336
00:14:12,649 --> 00:14:16,759
pretty easy for us to recover from but

337
00:14:15,649 --> 00:14:24,289
it's just kind of annoying and stupid

338
00:14:16,759 --> 00:14:26,000
oops delete tangle um but for now since

339
00:14:24,289 --> 00:14:28,069
we're working on something else I'll

340
00:14:26,000 --> 00:14:32,028
just go ahead and fix it myself this is

341
00:14:28,070 --> 00:14:35,480
pretty basic let's see I'm fine search

342
00:14:32,028 --> 00:14:42,740
for quote make it 0 go back to the

343
00:14:35,480 --> 00:14:45,860
beginning there we go all right yeah so

344
00:14:42,740 --> 00:14:49,089
for now let's go ahead and just see what

345
00:14:45,860 --> 00:14:52,519
happens with our system as it stands

346
00:14:49,089 --> 00:14:56,120
again let's okay so this is good so now

347
00:14:52,519 --> 00:14:59,088
we've gotten to a point where we're a

348
00:14:56,120 --> 00:15:01,009
little bit further down and so we're now

349
00:14:59,089 --> 00:15:02,570
actually eating over variables it looks

350
00:15:01,009 --> 00:15:06,110
like we've still got a bad situation

351
00:15:02,570 --> 00:15:08,600
though we've got a link to an actual

352
00:15:06,110 --> 00:15:11,600
null pointer which would never actually

353
00:15:08,600 --> 00:15:13,790
be possible right that's just purely

354
00:15:11,600 --> 00:15:15,500
erroneous so that just means we're not

355
00:15:13,789 --> 00:15:19,039
quite initializing all of our stuff

356
00:15:15,500 --> 00:15:20,809
right and we have to figure out exactly

357
00:15:19,039 --> 00:15:22,028
where that's happening so I'm just going

358
00:15:20,809 --> 00:15:23,959
to go ahead and look at the tree and

359
00:15:22,028 --> 00:15:26,179
just see for myself

360
00:15:23,960 --> 00:15:28,040
exactly where it's happening so if we go

361
00:15:26,179 --> 00:15:29,839
in I'm going to take a look at this

362
00:15:28,039 --> 00:15:32,719
debug variable skin I'm going to come in

363
00:15:29,840 --> 00:15:37,310
here and take a look at what happens to

364
00:15:32,720 --> 00:15:39,290
that group again all right so we're

365
00:15:37,309 --> 00:15:43,789
going to do big debug ID variable there

366
00:15:39,289 --> 00:15:45,079
and add ourselves to the group add some

367
00:15:43,789 --> 00:15:46,279
of these guys in fact I guess you know

368
00:15:45,080 --> 00:15:48,139
what i'll do i'll take a look at it kind

369
00:15:46,279 --> 00:15:50,240
of post build and i just want to see

370
00:15:48,139 --> 00:15:56,919
what the look of the tree is so here we

371
00:15:50,240 --> 00:16:00,350
go here is the debug state route group

372
00:15:56,919 --> 00:16:03,019
and if i take a look in here i could see

373
00:16:00,350 --> 00:16:07,450
the VAR group which is what it is I look

374
00:16:03,019 --> 00:16:12,039
at that and so the far on this VAR on

375
00:16:07,450 --> 00:16:14,570
this VAR group here that looks correct

376
00:16:12,039 --> 00:16:16,789
right because that should be no because

377
00:16:14,570 --> 00:16:20,540
this is just a sentinel if i come to the

378
00:16:16,789 --> 00:16:23,809
next one well so that's not correct

379
00:16:20,539 --> 00:16:25,879
right it's got another one and the VAR

380
00:16:23,809 --> 00:16:28,849
pointer is no but the VAR pointer should

381
00:16:25,879 --> 00:16:31,129
never be no on these guys so something

382
00:16:28,850 --> 00:16:33,409
is a little bit busted there so let's

383
00:16:31,129 --> 00:16:37,279
see what's going on with that when we do

384
00:16:33,409 --> 00:16:39,620
debug at variable we add advert to group

385
00:16:37,279 --> 00:16:40,939
oh so this is the problem when we add a

386
00:16:39,620 --> 00:16:43,070
debug variable we were never actually

387
00:16:40,940 --> 00:16:44,900
even setting that right we never

388
00:16:43,070 --> 00:16:46,580
actually like are basically our thing

389
00:16:44,899 --> 00:16:50,120
that makes that thing never bothered to

390
00:16:46,580 --> 00:16:51,620
set it so that's not great okay so this

391
00:16:50,120 --> 00:16:54,350
is looking a little bit better now it's

392
00:16:51,620 --> 00:16:56,659
still not great right we can kind of see

393
00:16:54,350 --> 00:16:59,300
that's it's it's it's not quite right

394
00:16:56,659 --> 00:17:02,360
yet but we're getting closer right we're

395
00:16:59,299 --> 00:17:04,490
definitely getting closer and it looks

396
00:17:02,360 --> 00:17:06,559
like to we even have all of our stuff is

397
00:17:04,490 --> 00:17:08,569
kind of working here in the sense that

398
00:17:06,559 --> 00:17:10,700
like all of the the sort of zooming

399
00:17:08,569 --> 00:17:12,230
features and that sort of thing work now

400
00:17:10,700 --> 00:17:13,100
we do have a problem that those things

401
00:17:12,230 --> 00:17:14,480
aren't stored anywhere because we

402
00:17:13,099 --> 00:17:16,309
haven't implemented the cash for our

403
00:17:14,480 --> 00:17:19,430
data yet but the rest of this stuff

404
00:17:16,309 --> 00:17:21,649
seems to be roughly correct right and

405
00:17:19,430 --> 00:17:23,360
that just did a save that just did it

406
00:17:21,650 --> 00:17:24,980
right out so I'm going to look and see

407
00:17:23,359 --> 00:17:27,319
what this and so this worked as well

408
00:17:24,980 --> 00:17:30,019
right you can kind of see that here we

409
00:17:27,319 --> 00:17:31,279
actually did write out all our variables

410
00:17:30,019 --> 00:17:33,538
as well which is kind of nice so that

411
00:17:31,279 --> 00:17:36,910
part was working as

412
00:17:33,538 --> 00:17:38,019
okay so we still need to do some more

413
00:17:36,910 --> 00:17:39,610
work here this is obviously not working

414
00:17:38,019 --> 00:17:43,179
correctly quite yet so let's go ahead

415
00:17:39,609 --> 00:17:45,009
and and see if we can tidy that up art

416
00:17:43,179 --> 00:17:46,720
it looks like we're not really handling

417
00:17:45,009 --> 00:17:48,250
expand and collapse or any of that stuff

418
00:17:46,720 --> 00:17:50,140
and I think that makes sense because we

419
00:17:48,250 --> 00:17:53,890
didn't actually when we implemented this

420
00:17:50,140 --> 00:17:55,059
sort of inorder traversal stuff here we

421
00:17:53,890 --> 00:17:58,299
did it the same way as we did it in the

422
00:17:55,058 --> 00:18:00,450
in the handmade config and so it's not

423
00:17:58,298 --> 00:18:04,599
actually doing any checks I don't think

424
00:18:00,450 --> 00:18:06,460
you know for basically for when it

425
00:18:04,599 --> 00:18:09,579
should and should not descend to

426
00:18:06,460 --> 00:18:11,048
children if that makes sense so if we

427
00:18:09,579 --> 00:18:13,649
look here we've got right hand made

428
00:18:11,048 --> 00:18:15,940
config we've got debug drumming menu

429
00:18:13,650 --> 00:18:17,798
down at the bottom of this guy if it's a

430
00:18:15,940 --> 00:18:20,919
VAR group you can see we pretty much

431
00:18:17,798 --> 00:18:23,288
always push even if the guy is collapsed

432
00:18:20,919 --> 00:18:25,720
which we don't really want to do right

433
00:18:23,288 --> 00:18:30,190
so what we'd rather do here is say okay

434
00:18:25,720 --> 00:18:32,190
we've got handmade give our gut h we

435
00:18:30,190 --> 00:18:35,200
know we were storing these in our view

436
00:18:32,190 --> 00:18:37,240
write debug view and so we knew that we

437
00:18:35,200 --> 00:18:39,580
had the concept that this thing was

438
00:18:37,240 --> 00:18:40,900
collapsible or whatever it was and so

439
00:18:39,579 --> 00:18:43,389
what we want to do is we want to go

440
00:18:40,900 --> 00:18:46,570
ahead and test that right we want to do

441
00:18:43,390 --> 00:18:48,159
a thing where we go like okay I get the

442
00:18:46,569 --> 00:18:50,829
collapsible out of the sky right it's a

443
00:18:48,159 --> 00:18:53,080
view which we already had and so

444
00:18:50,829 --> 00:18:59,349
assuming it's a group we only want to do

445
00:18:53,079 --> 00:19:01,449
it if the view expanded always for now I

446
00:18:59,349 --> 00:19:02,949
guess is the one that will look at this

447
00:19:01,450 --> 00:19:04,538
I think that's the one that we were yet

448
00:19:02,950 --> 00:19:07,029
that's one of the we're modifying at the

449
00:19:04,538 --> 00:19:09,129
moment we want expanded always to be

450
00:19:07,029 --> 00:19:17,099
true and if it is we will descend if not

451
00:19:09,130 --> 00:19:22,210
then we will not right sorry no go

452
00:19:17,099 --> 00:19:24,549
so now if i run this everything or

453
00:19:22,210 --> 00:19:26,860
nothing should be collapsed right but of

454
00:19:24,549 --> 00:19:28,149
course we can't ever actually i think we

455
00:19:26,859 --> 00:19:29,559
probably won't ever actually be able to

456
00:19:28,150 --> 00:19:34,210
do this because when we do the

457
00:19:29,559 --> 00:19:36,250
recompilation step right that will

458
00:19:34,210 --> 00:19:38,680
overwrite our static our debug view

459
00:19:36,250 --> 00:19:41,170
dummy here so I don't know how effective

460
00:19:38,680 --> 00:19:44,230
this actually will be but you know we

461
00:19:41,170 --> 00:19:46,990
could do we could for a minute sort of

462
00:19:44,230 --> 00:19:48,759
just for testing purposes go ahead and

463
00:19:46,990 --> 00:19:51,460
make a single one of these it's actually

464
00:19:48,759 --> 00:19:53,529
in our debug state stuff so we can take

465
00:19:51,460 --> 00:19:55,059
that out of the equation right so we can

466
00:19:53,529 --> 00:19:59,799
basically just say oh there's a debug

467
00:19:55,059 --> 00:20:02,799
dummy in here right and then this guy

468
00:19:59,799 --> 00:20:05,139
just returns the debug state dummy that

469
00:20:02,799 --> 00:20:07,359
way there's no static variable and we

470
00:20:05,140 --> 00:20:10,900
can actually see what's going on right

471
00:20:07,359 --> 00:20:15,849
so that'll work a little bit easier okay

472
00:20:10,900 --> 00:20:17,769
so in theory I feel like I feel like hmm

473
00:20:15,849 --> 00:20:20,799
I see it for a second but then it goes

474
00:20:17,769 --> 00:20:23,650
away and I'm not entirely certain why

475
00:20:20,799 --> 00:20:25,480
that would be that doesn't make quite

476
00:20:23,650 --> 00:20:28,930
the right amount of sense to me so I

477
00:20:25,480 --> 00:20:30,309
want to take a look at that why that's

478
00:20:28,930 --> 00:20:32,710
happening so when we do debug and

479
00:20:30,309 --> 00:20:33,730
interact we set the expanded always

480
00:20:32,710 --> 00:20:36,190
equal to knox may notice that should

481
00:20:33,730 --> 00:20:38,680
only really be happening on that dummy

482
00:20:36,190 --> 00:20:40,600
that one time although oh you know what

483
00:20:38,680 --> 00:20:42,519
the problem is the dummy is kind of

484
00:20:40,599 --> 00:20:44,859
overloaded so everyone's writing to it

485
00:20:42,519 --> 00:20:46,660
including people who are writing the

486
00:20:44,859 --> 00:20:48,609
position of things to it so that

487
00:20:46,660 --> 00:20:50,050
actually makes perfect sense so I think

488
00:20:48,609 --> 00:20:51,189
Babel what we should do rather than

489
00:20:50,049 --> 00:20:53,889
trying to hack it is like actually

490
00:20:51,190 --> 00:20:55,840
finish our implementation of get debug

491
00:20:53,890 --> 00:20:59,980
view for that seems like probably the

492
00:20:55,839 --> 00:21:01,509
smartest thing to do all right so what

493
00:20:59,980 --> 00:21:03,579
we need to do for get the about view for

494
00:21:01,509 --> 00:21:05,799
is we need a way again what we're trying

495
00:21:03,579 --> 00:21:08,949
to do here is store the state of the

496
00:21:05,799 --> 00:21:14,859
interactions with things in such a way

497
00:21:08,950 --> 00:21:17,170
as to make sure that we always we only

498
00:21:14,859 --> 00:21:18,389
store any important piece of state like

499
00:21:17,170 --> 00:21:21,940
whether something collapsed or expanded

500
00:21:18,390 --> 00:21:24,970
but we don't store it hard coded with

501
00:21:21,940 --> 00:21:26,680
the particular variable itself so like

502
00:21:24,970 --> 00:21:29,170
for example we were having this trouble

503
00:21:26,680 --> 00:21:30,490
where we had two different copies of

504
00:21:29,170 --> 00:21:32,679
like a tree of some

505
00:21:30,490 --> 00:21:35,799
kind right or two different copies of

506
00:21:32,679 --> 00:21:36,910
like a bit map viewer and one of them

507
00:21:35,799 --> 00:21:38,019
was supposed to be sized like

508
00:21:36,910 --> 00:21:40,509
differently than the other or something

509
00:21:38,019 --> 00:21:42,369
like this right so we want to be able to

510
00:21:40,509 --> 00:21:43,808
store those two things differently so

511
00:21:42,369 --> 00:21:45,549
what I want to do is I want to just make

512
00:21:43,808 --> 00:21:48,399
it so that whenever we have one of these

513
00:21:45,549 --> 00:21:49,690
things whatever it is whenever we have a

514
00:21:48,400 --> 00:21:52,600
debug variable we can have as many

515
00:21:49,690 --> 00:21:54,340
states sitting on top of it as we want

516
00:21:52,599 --> 00:21:56,349
right so anything that's like you I

517
00:21:54,339 --> 00:21:58,119
state gets stored in sort of the

518
00:21:56,349 --> 00:21:59,558
separate cash so that you can have as

519
00:21:58,119 --> 00:22:02,709
many of them as you have like trees

520
00:21:59,558 --> 00:22:04,869
right and so when we call get debug view

521
00:22:02,710 --> 00:22:06,610
for what we want to do is say for this

522
00:22:04,869 --> 00:22:07,959
particular debug variable and we

523
00:22:06,609 --> 00:22:11,740
probably also want to say for a

524
00:22:07,960 --> 00:22:14,500
particular debug variable link right so

525
00:22:11,740 --> 00:22:18,009
for a particular link what's the what's

526
00:22:14,500 --> 00:22:19,240
the state and to that since the link has

527
00:22:18,009 --> 00:22:21,009
the variable pointer in it I probably

528
00:22:19,240 --> 00:22:24,519
don't need to pass it so when we call

529
00:22:21,009 --> 00:22:27,789
get debug view for what we're actually

530
00:22:24,519 --> 00:22:29,859
passing here is going to be the inner

531
00:22:27,789 --> 00:22:31,928
link right but we've already kind of

532
00:22:29,859 --> 00:22:38,308
gotten rid of that so I need to kind of

533
00:22:31,929 --> 00:22:41,080
cash it here like so so think that's

534
00:22:38,308 --> 00:22:44,019
basically it let's see what else we've

535
00:22:41,079 --> 00:22:45,789
got here so when we went to our get

536
00:22:44,019 --> 00:22:48,369
debug before here and we do our expand

537
00:22:45,789 --> 00:22:50,109
always right so in this case again we're

538
00:22:48,369 --> 00:22:53,829
going to be have to have to pass a link

539
00:22:50,109 --> 00:22:55,539
here so for the most part probably what

540
00:22:53,829 --> 00:22:57,428
we'd want to do is we'd say whenever

541
00:22:55,539 --> 00:22:59,170
you're interacting something you don't

542
00:22:57,429 --> 00:23:00,670
interact with a variable directly you

543
00:22:59,170 --> 00:23:03,400
interact with the link of that variable

544
00:23:00,670 --> 00:23:06,670
so now our interactions rather than

545
00:23:03,400 --> 00:23:08,769
being phrased on bars will always be on

546
00:23:06,670 --> 00:23:11,529
links since those are the things that

547
00:23:08,769 --> 00:23:12,789
will actually store the you know sort of

548
00:23:11,529 --> 00:23:18,789
the synthetic values and stuff like that

549
00:23:12,789 --> 00:23:20,678
so we'd say the link right equals that

550
00:23:18,789 --> 00:23:22,299
and then we just go ahead and

551
00:23:20,679 --> 00:23:29,910
dereference off of that so debug

552
00:23:22,299 --> 00:23:33,970
variable VAR e quills think bar so

553
00:23:29,910 --> 00:23:36,009
so then the debug get the debug view for

554
00:23:33,970 --> 00:23:38,799
something all we'd have to do there is

555
00:23:36,009 --> 00:23:41,200
say like okay pass the link now instead

556
00:23:38,799 --> 00:23:43,269
and then these interactions are pretty

557
00:23:41,200 --> 00:23:44,950
much the same they don't really have to

558
00:23:43,269 --> 00:23:47,799
change much they just have to instead of

559
00:23:44,950 --> 00:23:49,000
writing far as they're running links so

560
00:23:47,799 --> 00:23:52,450
we're just changing with level we're

561
00:23:49,000 --> 00:23:54,430
restoring really so that's good now

562
00:23:52,450 --> 00:23:56,650
let's see here really know what this is

563
00:23:54,430 --> 00:23:58,650
doing that's that's fine just kind of

564
00:23:56,650 --> 00:24:02,350
make making a slight modification there

565
00:23:58,650 --> 00:24:08,440
so yeah in debug interact this is

566
00:24:02,349 --> 00:24:10,480
probably debug variable link again but

567
00:24:08,440 --> 00:24:12,730
in this case we don't really know I

568
00:24:10,480 --> 00:24:15,490
guess whether it's a bar or not until we

569
00:24:12,730 --> 00:24:22,569
get a little bit lower down right so

570
00:24:15,490 --> 00:24:30,039
something like that ok so I think that

571
00:24:22,569 --> 00:24:31,450
should take care of it yep okay and so

572
00:24:30,039 --> 00:24:32,680
now we're just interacting with links

573
00:24:31,450 --> 00:24:34,059
instead of bars and so that gives us

574
00:24:32,680 --> 00:24:36,130
like kind of a separate thing up the

575
00:24:34,059 --> 00:24:37,569
hierarchy right and you can see that

576
00:24:36,130 --> 00:24:39,310
it's still it's all working just fine

577
00:24:37,569 --> 00:24:40,899
and so now we have to do is actually

578
00:24:39,309 --> 00:24:43,240
implement that cash so we're not all

579
00:24:40,900 --> 00:24:47,610
writing to the same state and then we're

580
00:24:43,240 --> 00:24:51,370
good right so let's go ahead and do that

581
00:24:47,609 --> 00:24:54,119
or at least attempt to do that so we

582
00:24:51,369 --> 00:25:00,279
need to do get debug before we pass that

583
00:24:54,119 --> 00:25:04,599
that link variable right and let's see

584
00:25:00,279 --> 00:25:10,450
here let's see here

585
00:25:04,599 --> 00:25:15,750
so in this case I guess I'm kind of

586
00:25:10,450 --> 00:25:18,549
wondering though if we have the links

587
00:25:15,750 --> 00:25:23,670
why am I not just storing it on the link

588
00:25:18,549 --> 00:25:33,220
that seems like what I should have been

589
00:25:23,670 --> 00:25:35,860
doing right that's kind of why would I

590
00:25:33,220 --> 00:25:37,660
yeah this may have just been more of the

591
00:25:35,859 --> 00:25:43,589
frazzled miss right I don't really need

592
00:25:37,660 --> 00:25:46,990
this anywhere do I I can just modify I

593
00:25:43,589 --> 00:25:48,819
mean correct me if I'm wrong but I

594
00:25:46,990 --> 00:25:53,079
should be able to store this in the link

595
00:25:48,819 --> 00:25:58,359
itself like I already have that piece of

596
00:25:53,079 --> 00:26:00,699
information I mean there is one problem

597
00:25:58,359 --> 00:26:03,369
with it and the problem with it is is

598
00:26:00,700 --> 00:26:06,730
that if we wanted to not use the link so

599
00:26:03,369 --> 00:26:08,949
much if we wanted to have iterators that

600
00:26:06,730 --> 00:26:10,180
don't actually have links on them and I

601
00:26:08,950 --> 00:26:11,830
guess that's something that we kind of

602
00:26:10,180 --> 00:26:15,210
have to think about you know if we

603
00:26:11,829 --> 00:26:17,859
wanted to make this a little bit more

604
00:26:15,210 --> 00:26:19,059
flexible so that you're kind of going

605
00:26:17,859 --> 00:26:22,839
through something and didn't actually

606
00:26:19,059 --> 00:26:24,549
have to have the link yeah that does

607
00:26:22,839 --> 00:26:27,129
that does kind of argue a little bit for

608
00:26:24,549 --> 00:26:28,690
it like basically if you have links and

609
00:26:27,130 --> 00:26:29,800
that's just a way of saying here are

610
00:26:28,690 --> 00:26:32,529
some of the variables that we're talking

611
00:26:29,799 --> 00:26:33,970
about then that's all good but if you

612
00:26:32,529 --> 00:26:35,410
don't want to have any links like let's

613
00:26:33,970 --> 00:26:37,509
say you were iterating over something

614
00:26:35,410 --> 00:26:39,370
that doesn't that's not explicit we're

615
00:26:37,509 --> 00:26:41,410
just iterating over say the members of

616
00:26:39,369 --> 00:26:42,939
an entity or something and we want to

617
00:26:41,410 --> 00:26:44,590
make those editable but we don't want to

618
00:26:42,940 --> 00:26:49,509
actually announce them as individual

619
00:26:44,589 --> 00:26:52,929
links in any particular way you know it

620
00:26:49,509 --> 00:26:56,019
makes it a little bit it makes it a

621
00:26:52,930 --> 00:26:58,570
little bit trickier right and so it

622
00:26:56,019 --> 00:27:02,680
seems like more what we want to do is to

623
00:26:58,569 --> 00:27:05,649
just have some notion right like you

624
00:27:02,680 --> 00:27:10,509
know a debug view tag something like

625
00:27:05,650 --> 00:27:12,880
that or debug view ID right where we can

626
00:27:10,509 --> 00:27:15,700
just say okay variable links will have

627
00:27:12,880 --> 00:27:17,778
these right like there's a way to get a

628
00:27:15,700 --> 00:27:20,058
view ID from a very ruling

629
00:27:17,778 --> 00:27:23,210
us ways you could generate them without

630
00:27:20,058 --> 00:27:25,519
that you know like using a pointer to

631
00:27:23,210 --> 00:27:27,950
something or using whatever so that you

632
00:27:25,519 --> 00:27:30,679
can identify the particular thing that

633
00:27:27,950 --> 00:27:31,819
you're talking about right and so I'm

634
00:27:30,679 --> 00:27:33,830
just going to go ahead and say that

635
00:27:31,819 --> 00:27:36,579
that's the way we'll do it you know and

636
00:27:33,829 --> 00:27:39,108
maybe like we have something like

637
00:27:36,579 --> 00:27:41,058
something like this where it's just got

638
00:27:39,108 --> 00:27:43,548
you know let's say it's got two pointers

639
00:27:41,058 --> 00:27:45,528
or something in it and that constitutes

640
00:27:43,548 --> 00:27:48,648
the debug view ID and that's the thing

641
00:27:45,528 --> 00:27:52,940
that we would actually be looking up on

642
00:27:48,648 --> 00:27:56,088
for the most part right okay so we say

643
00:27:52,940 --> 00:27:58,879
we'd pass one of those things and let me

644
00:27:56,088 --> 00:28:05,598
go ahead and and and make that happen so

645
00:27:58,878 --> 00:28:09,528
we just say like debug maybe that's

646
00:28:05,598 --> 00:28:11,628
maybe that's just debug ID even yeah so

647
00:28:09,528 --> 00:28:14,509
a debug ID from link or something like

648
00:28:11,628 --> 00:28:16,128
that right and then that would just be

649
00:28:14,509 --> 00:28:18,979
something where you can immediately get

650
00:28:16,128 --> 00:28:22,939
one of those it's trivial to get one of

651
00:28:18,979 --> 00:28:25,759
those where I'm saying okay I've got a

652
00:28:22,940 --> 00:28:32,349
debug ID gonna return one of these so

653
00:28:25,759 --> 00:28:37,700
curious debug you know variable link

654
00:28:32,348 --> 00:28:39,678
here we go there's the link and all I'm

655
00:28:37,700 --> 00:28:41,808
going to do is just take whatever the

656
00:28:39,679 --> 00:28:45,469
pointer is for that link under say that

657
00:28:41,808 --> 00:28:46,969
that's the entirety of the ID right and

658
00:28:45,469 --> 00:28:50,088
again this is just some way of making

659
00:28:46,969 --> 00:28:53,838
sure that I can uniquely identify one of

660
00:28:50,088 --> 00:28:55,548
these things right so there's my value 0

661
00:28:53,838 --> 00:28:58,128
is going to be equal to the link pointer

662
00:28:55,548 --> 00:29:00,038
the result of value one is going to be 0

663
00:28:58,128 --> 00:29:02,689
right so just leave it cleared for that

664
00:29:00,038 --> 00:29:09,138
so that's really all we need for that

665
00:29:02,690 --> 00:29:10,548
kind of thing okay so that way we've

666
00:29:09,138 --> 00:29:14,088
kind of got it set up to look up on

667
00:29:10,548 --> 00:29:17,118
anything we want right and that's kind

668
00:29:14,088 --> 00:29:19,190
of handy so then when we do when we're

669
00:29:17,118 --> 00:29:20,898
interacting with things we can now go

670
00:29:19,190 --> 00:29:22,278
one step further and say that our

671
00:29:20,898 --> 00:29:24,738
interaction system does not actually

672
00:29:22,278 --> 00:29:26,118
require you to interact with the link it

673
00:29:24,739 --> 00:29:28,278
just requires you to interact with

674
00:29:26,118 --> 00:29:31,699
something that can be identified by the

675
00:29:28,278 --> 00:29:33,079
debug system right and so our

676
00:29:31,700 --> 00:29:36,669
debug interaction would just be like

677
00:29:33,079 --> 00:29:43,548
we're interacting with a debug ID right

678
00:29:36,669 --> 00:29:46,100
and and probably I would say maybe

679
00:29:43,548 --> 00:29:48,138
everything every debug interaction has

680
00:29:46,099 --> 00:29:49,819
one of those so we still do pass the

681
00:29:48,138 --> 00:29:51,678
variable because that's the thing you're

682
00:29:49,819 --> 00:29:54,490
interacting with but then we also have

683
00:29:51,679 --> 00:29:57,440
an ID that allows you to disambiguate

684
00:29:54,490 --> 00:29:59,569
the circumstance under which you are

685
00:29:57,440 --> 00:30:04,100
actually editing that particular

686
00:29:59,569 --> 00:30:06,769
variable right and i think this sets us

687
00:30:04,099 --> 00:30:08,599
up for doing one more transformation

688
00:30:06,769 --> 00:30:13,370
that we want to do that's going to be

689
00:30:08,599 --> 00:30:15,500
cool right okay all right so anyway

690
00:30:13,369 --> 00:30:17,148
that's probably that's probably the

691
00:30:15,500 --> 00:30:18,769
right thing in my opinion and then this

692
00:30:17,148 --> 00:30:20,989
doesn't have to do the thing that I was

693
00:30:18,769 --> 00:30:24,079
doing before so we can revert this code

694
00:30:20,990 --> 00:30:30,528
basically back to sort of the easier way

695
00:30:24,079 --> 00:30:37,449
that it was working oops like this and

696
00:30:30,528 --> 00:30:46,548
that's probably better do-do-do-do

697
00:30:37,450 --> 00:30:49,480
do-do-do-do yeah and so this will just

698
00:30:46,548 --> 00:30:54,160
use the debug state at interaction ID

699
00:30:49,480 --> 00:30:58,150
and this

700
00:30:54,160 --> 00:31:05,220
debug state interaction link would

701
00:30:58,150 --> 00:31:08,490
actually just do this oops bar bar

702
00:31:05,220 --> 00:31:11,940
alright so that's how that would work

703
00:31:08,490 --> 00:31:15,630
but in order to make that work cleanly

704
00:31:11,940 --> 00:31:18,460
we want to take one more step right so

705
00:31:15,630 --> 00:31:20,410
right now we're kind of ad hoc with our

706
00:31:18,460 --> 00:31:22,600
assignment when we do like item

707
00:31:20,410 --> 00:31:24,279
interactions and stuff like that so

708
00:31:22,599 --> 00:31:26,649
probably what we want to do is something

709
00:31:24,279 --> 00:31:30,399
more like this we want to say like VAR

710
00:31:26,650 --> 00:31:31,810
interaction and we want to do something

711
00:31:30,400 --> 00:31:34,360
where we pass out the type of

712
00:31:31,809 --> 00:31:36,700
interaction and then probably like this

713
00:31:34,359 --> 00:31:39,609
so actually pi I'd even say like more

714
00:31:36,700 --> 00:31:43,710
like VAR link interaction something like

715
00:31:39,609 --> 00:31:49,209
that and we'll pass the link in right

716
00:31:43,710 --> 00:31:51,039
and that is going to be something which

717
00:31:49,210 --> 00:31:56,039
creates one of these debug interactions

718
00:31:51,039 --> 00:32:00,009
basically a mento rank of that thing

719
00:31:56,039 --> 00:32:02,109
grab that out where it takes whatever

720
00:32:00,009 --> 00:32:05,049
the thing was whatever the type of

721
00:32:02,109 --> 00:32:09,579
interaction that we wanted to do right

722
00:32:05,049 --> 00:32:14,289
so debug interaction type it takes the

723
00:32:09,579 --> 00:32:16,329
debug variable link pointer and then it

724
00:32:14,289 --> 00:32:23,259
creates the item interaction that has

725
00:32:16,329 --> 00:32:25,119
all of the like book ID all of the

726
00:32:23,259 --> 00:32:29,109
information filled out properly there we

727
00:32:25,119 --> 00:32:32,189
go right so it fills out the ID it fills

728
00:32:29,109 --> 00:32:35,740
out the type and it fills out the bar

729
00:32:32,190 --> 00:32:37,120
and then we can everything go through

730
00:32:35,740 --> 00:32:39,220
that and so then as we sort of play

731
00:32:37,119 --> 00:32:42,339
around with different ways in which

732
00:32:39,220 --> 00:32:43,839
those if we r you know if we decide to

733
00:32:42,339 --> 00:32:47,439
change kind of how that's packed up

734
00:32:43,839 --> 00:32:49,029
there or what's in it we can do that

735
00:32:47,440 --> 00:32:50,799
without having to worry that like about

736
00:32:49,029 --> 00:32:52,149
all the places that's being done so

737
00:32:50,799 --> 00:32:54,339
again this is just standard a

738
00:32:52,150 --> 00:32:56,890
compression a little compression that

739
00:32:54,339 --> 00:32:59,049
we're doing here to sort of take that

740
00:32:56,890 --> 00:33:01,690
variability out of the equation you know

741
00:32:59,049 --> 00:33:03,519
I'm saying so this is a bar link

742
00:33:01,690 --> 00:33:05,710
interaction here again right so I'm just

743
00:33:03,519 --> 00:33:07,470
simplifying it down into

744
00:33:05,710 --> 00:33:11,558
something a little more straightforward

745
00:33:07,470 --> 00:33:13,210
so everyone's calling through that again

746
00:33:11,558 --> 00:33:16,990
debug interaction i can put pretty much

747
00:33:13,210 --> 00:33:22,179
a search for it so this is a that's not

748
00:33:16,990 --> 00:33:27,579
one of them it's a different kind and so

749
00:33:22,179 --> 00:33:31,538
that's that's a size interaction that's

750
00:33:27,579 --> 00:33:42,069
a VAR link already that's of our link

751
00:33:31,538 --> 00:33:46,750
interaction i tear interaction it's

752
00:33:42,069 --> 00:33:50,408
happening there I think we're good looks

753
00:33:46,750 --> 00:33:52,359
good to me all right so then all we need

754
00:33:50,409 --> 00:33:54,640
is some way of looking up into this cash

755
00:33:52,359 --> 00:33:57,189
right so that we can get our debug view

756
00:33:54,640 --> 00:33:59,288
of whatever the thing is we're passing

757
00:33:57,190 --> 00:34:01,240
debug IDs now so we kind of have a way

758
00:33:59,288 --> 00:34:03,879
of looking it up but we don't actually

759
00:34:01,240 --> 00:34:05,740
have like anything to look it up in

760
00:34:03,880 --> 00:34:07,870
right so we have sort of this is a

761
00:34:05,740 --> 00:34:09,190
straightforward map right we just want

762
00:34:07,869 --> 00:34:12,489
to map one thing to another so I'm going

763
00:34:09,190 --> 00:34:16,599
to use the hash table that's a pretty

764
00:34:12,489 --> 00:34:19,449
easy thing to do right and we've written

765
00:34:16,599 --> 00:34:21,039
those before on handmade hero and we'll

766
00:34:19,449 --> 00:34:22,928
just use whatever the value is now we

767
00:34:21,039 --> 00:34:24,070
know that these values are pointers so

768
00:34:22,929 --> 00:34:25,809
the thing that we probably want to do

769
00:34:24,070 --> 00:34:28,000
with the hash table right is we'd

770
00:34:25,809 --> 00:34:30,338
probably want to ignore like the bottom

771
00:34:28,000 --> 00:34:31,780
bits of them for the most part like you

772
00:34:30,338 --> 00:34:33,909
know pointers are pretty much always

773
00:34:31,780 --> 00:34:35,769
going to be at least aligned to a D word

774
00:34:33,909 --> 00:34:38,679
boundary so we probably want to like go

775
00:34:35,769 --> 00:34:40,480
ahead and ignore those bottom bits so we

776
00:34:38,679 --> 00:34:43,119
probably want to look more at like you

777
00:34:40,480 --> 00:34:44,980
know we probably want to shift shift it

778
00:34:43,119 --> 00:34:48,039
down as we do our look up so I guess all

779
00:34:44,980 --> 00:34:51,070
I'm saying ok so then what we would do

780
00:34:48,039 --> 00:34:56,250
is we'd say we have some set of these

781
00:34:51,070 --> 00:35:00,580
debug views right and can see them here

782
00:34:56,250 --> 00:35:01,900
it already has annexed in hash on it so

783
00:35:00,579 --> 00:35:04,838
if i just come in here and i say all

784
00:35:01,900 --> 00:35:08,230
right give a view this is my view hash

785
00:35:04,838 --> 00:35:10,119
get rid of the dummy and the view hash

786
00:35:08,230 --> 00:35:13,150
is however big it is we don't really

787
00:35:10,119 --> 00:35:14,890
care and like i said any time you write

788
00:35:13,150 --> 00:35:17,800
a hash function the most important thing

789
00:35:14,889 --> 00:35:19,250
to do we've talked about this it's the

790
00:35:17,800 --> 00:35:21,080
right better hash function

791
00:35:19,250 --> 00:35:24,469
you have to have at least one of those

792
00:35:21,079 --> 00:35:28,670
in any shipping game you're only allowed

793
00:35:24,469 --> 00:35:31,549
to fix n minus 1 hashes in your game

794
00:35:28,670 --> 00:35:34,430
some hash table has to ship with that to

795
00:35:31,550 --> 00:35:35,720
do and the full and the fully known

796
00:35:34,429 --> 00:35:37,819
belief that if you spent some time

797
00:35:35,719 --> 00:35:42,589
looking at it you could probably make a

798
00:35:37,820 --> 00:35:46,730
hash function that worked alright so in

799
00:35:42,590 --> 00:35:50,329
the case of view hash in this case I

800
00:35:46,730 --> 00:35:52,309
just need to hash index here and what I

801
00:35:50,329 --> 00:35:54,679
need to do is when you call get debug

802
00:35:52,309 --> 00:35:56,509
view I need to find it in the hash if

803
00:35:54,679 --> 00:35:59,809
it's not in the hash I need to create it

804
00:35:56,510 --> 00:36:02,930
in the hash right so I need to basically

805
00:35:59,809 --> 00:36:05,210
grab the hash lot from whatever our hash

806
00:36:02,929 --> 00:36:07,609
index ends up being and then I need to

807
00:36:05,210 --> 00:36:09,710
kind of loop to see if i can find this

808
00:36:07,610 --> 00:36:13,789
thing so it's probably something like

809
00:36:09,710 --> 00:36:16,780
this where i'd say like debug view well

810
00:36:13,789 --> 00:36:16,779
actually I guess I've got it right here

811
00:36:17,110 --> 00:36:22,789
look at the above you result and I do

812
00:36:20,000 --> 00:36:30,260
something like this where I do a debug

813
00:36:22,789 --> 00:36:35,690
view search equals hash lot while the

814
00:36:30,260 --> 00:36:39,140
search is working we do next in hash so

815
00:36:35,690 --> 00:36:42,170
we just go through the chain and if we

816
00:36:39,139 --> 00:36:44,449
do not find it right then we need to add

817
00:36:42,170 --> 00:36:48,559
it but if we find it then we're good so

818
00:36:44,449 --> 00:36:52,309
if whatever you know debug IDs match or

819
00:36:48,559 --> 00:36:54,019
debug IDs or equal if the one that we're

820
00:36:52,309 --> 00:36:56,570
searching for in the view ID that you

821
00:36:54,019 --> 00:36:58,219
know whatever this guy has here I assume

822
00:36:56,570 --> 00:37:03,559
these debug did I store it i didn't even

823
00:36:58,219 --> 00:37:05,329
store it did I so assuming that the IDS

824
00:37:03,559 --> 00:37:06,799
match so we've got the view ID we're

825
00:37:05,329 --> 00:37:09,500
looking for the search ID that we're

826
00:37:06,800 --> 00:37:12,080
looking at if they match we're done with

827
00:37:09,500 --> 00:37:14,900
our search if not then we need to insert

828
00:37:12,079 --> 00:37:18,079
it so if result is not acceptable here

829
00:37:14,900 --> 00:37:21,200
we need to do a push struct on it to add

830
00:37:18,079 --> 00:37:24,170
one in so we'd say that in that memory

831
00:37:21,199 --> 00:37:27,259
arena we just need one of these debug

832
00:37:24,170 --> 00:37:29,360
views and then inside there we just need

833
00:37:27,260 --> 00:37:32,330
to set the parameters for this so we

834
00:37:29,360 --> 00:37:34,220
know that we have the ID

835
00:37:32,329 --> 00:37:35,569
calling it view ID it's obviously a view

836
00:37:34,219 --> 00:37:41,659
ID in there I probably don't need to say

837
00:37:35,570 --> 00:37:44,630
that and then I've got anything else

838
00:37:41,659 --> 00:37:49,659
about the debug view what is that

839
00:37:44,630 --> 00:37:49,660
actually why is there a tree pointer

840
00:37:50,800 --> 00:37:55,130
that that was just there I think to

841
00:37:53,480 --> 00:37:57,949
disambiguate so we don't actually need

842
00:37:55,130 --> 00:38:00,320
that we don't need any of these in fact

843
00:37:57,949 --> 00:38:03,609
really all we need is the settings I

844
00:38:00,320 --> 00:38:06,769
don't think we need anything else yeah

845
00:38:03,610 --> 00:38:10,730
so assuming that the IDS match all we

846
00:38:06,769 --> 00:38:13,550
really need to do is just set up the

847
00:38:10,730 --> 00:38:16,219
next and hash stuff the type right

848
00:38:13,550 --> 00:38:17,750
whatever the type of debug view is and

849
00:38:16,219 --> 00:38:20,209
so we're going to have to probably pass

850
00:38:17,750 --> 00:38:23,059
that in as well so we do get debug

851
00:38:20,210 --> 00:38:24,980
before we would have to pass in what we

852
00:38:23,059 --> 00:38:26,269
were looking for because otherwise we

853
00:38:24,980 --> 00:38:29,000
wouldn't necessarily know how to set it

854
00:38:26,269 --> 00:38:30,559
I soon well you know what I guess that's

855
00:38:29,000 --> 00:38:32,719
not necessary to either we could defer

856
00:38:30,559 --> 00:38:39,380
that so we could say diva hbu type

857
00:38:32,719 --> 00:38:43,189
unknown or something like that maybe and

858
00:38:39,380 --> 00:38:44,780
we'll see how that goes in a second so

859
00:38:43,190 --> 00:38:47,240
we could set it to unknown we don't know

860
00:38:44,780 --> 00:38:52,630
what it is and then we just say like

861
00:38:47,239 --> 00:38:52,629
okay whatever the next in hash value is

862
00:38:53,469 --> 00:38:58,489
is going to be what's in that slot right

863
00:38:56,239 --> 00:39:01,339
so we know whoever was in the hash left

864
00:38:58,489 --> 00:39:03,139
to begin with and then we set the hash

865
00:39:01,340 --> 00:39:05,630
slot to point to us so typically just

866
00:39:03,139 --> 00:39:07,279
making a chain again just making a very

867
00:39:05,630 --> 00:39:08,930
straightforward hash table so now we

868
00:39:07,280 --> 00:39:13,910
need a way of getting that actual hash

869
00:39:08,929 --> 00:39:17,419
index right so our hash index would just

870
00:39:13,909 --> 00:39:18,710
be again the standard thing it's just

871
00:39:17,420 --> 00:39:20,780
going to be some way of computing a

872
00:39:18,710 --> 00:39:22,730
number we can use for indexing like I

873
00:39:20,780 --> 00:39:25,730
said we've got the ID we've got two

874
00:39:22,730 --> 00:39:27,490
values in the ID you know I have no idea

875
00:39:25,730 --> 00:39:29,869
what the easiest way to do this would be

876
00:39:27,489 --> 00:39:31,279
but you know you take them and you

877
00:39:29,869 --> 00:39:32,900
multiply them together or something a

878
00:39:31,280 --> 00:39:36,830
fantastical like this which is probably

879
00:39:32,900 --> 00:39:38,480
very stupid and just to mix them in and

880
00:39:36,829 --> 00:39:39,500
then we would say like I was saying

881
00:39:38,480 --> 00:39:42,050
before I think we probably want to

882
00:39:39,500 --> 00:39:43,059
ignore the bottom bits of them because

883
00:39:42,050 --> 00:39:45,010
you know

884
00:39:43,059 --> 00:39:45,940
they're going to be pointers so there's

885
00:39:45,010 --> 00:39:48,430
nothing there that could be any

886
00:39:45,940 --> 00:39:50,230
information in those bottom bits that

887
00:39:48,429 --> 00:39:54,789
would be worth you know that would be

888
00:39:50,230 --> 00:39:56,860
worth looking at it all so yeah I don't

889
00:39:54,789 --> 00:39:58,509
know again not particularly great we

890
00:39:56,860 --> 00:40:00,250
could also i suppose add them together I

891
00:39:58,510 --> 00:40:01,420
don't know that we we don't really know

892
00:40:00,250 --> 00:40:03,699
anything about the pattern of these

893
00:40:01,420 --> 00:40:05,289
values so I guess I don't even really

894
00:40:03,699 --> 00:40:07,149
know I'll just leave it like adding I

895
00:40:05,289 --> 00:40:09,909
don't I don't want to pretend we have

896
00:40:07,150 --> 00:40:11,470
some idea of what's going on here so if

897
00:40:09,909 --> 00:40:14,739
we did the hash index that way we'd be

898
00:40:11,469 --> 00:40:18,639
fine I think and then we can go from

899
00:40:14,739 --> 00:40:21,579
there so we've got a oh we already had a

900
00:40:18,639 --> 00:40:25,539
view hash look at that look at that it's

901
00:40:21,579 --> 00:40:28,920
already there that's crazy um and so

902
00:40:25,539 --> 00:40:33,730
yeah so let's go ahead and you know

903
00:40:28,920 --> 00:40:35,710
we'll make these guys 32-bit values and

904
00:40:33,730 --> 00:40:38,650
then we just need a way of comparing the

905
00:40:35,710 --> 00:40:42,460
hashes which is trivial right I mean old

906
00:40:38,650 --> 00:40:50,320
AR is just two pointers right so if I

907
00:40:42,460 --> 00:40:54,760
have to debug IDs so then the result is

908
00:40:50,320 --> 00:40:57,269
just going to be if the values equal

909
00:40:54,760 --> 00:40:57,270
each other

910
00:41:07,869 --> 00:41:20,539
yeah alright so that's all good that

911
00:41:15,530 --> 00:41:25,119
means to be an address that needs to be

912
00:41:20,539 --> 00:41:28,838
an arrow and that needs to go away and

913
00:41:25,119 --> 00:41:33,500
so I think that gets us our debug views

914
00:41:28,838 --> 00:41:35,828
relatively cleanly but let's see so now

915
00:41:33,500 --> 00:41:38,869
our stuff should work in theory at least

916
00:41:35,829 --> 00:41:41,380
and it does actually appear to which is

917
00:41:38,869 --> 00:41:43,608
kind of nice so we're getting there

918
00:41:41,380 --> 00:41:46,039
that's kind of nice I'm pretty happy

919
00:41:43,608 --> 00:41:49,309
about that I'm pretty happy about that

920
00:41:46,039 --> 00:41:50,480
how that's working out kind of hard to

921
00:41:49,309 --> 00:41:52,789
grab this I got to make those little bit

922
00:41:50,480 --> 00:41:55,730
bigger alright so that's working all

923
00:41:52,789 --> 00:41:57,980
quite nicely now actually we got to put

924
00:41:55,730 --> 00:42:01,159
in our indenting again but that's about

925
00:41:57,980 --> 00:42:04,369
it so now we do have a way of creating

926
00:42:01,159 --> 00:42:06,618
multiple things that all go you know

927
00:42:04,369 --> 00:42:08,630
creating editable things that actually

928
00:42:06,619 --> 00:42:12,380
store separate settings for themselves

929
00:42:08,630 --> 00:42:14,000
which is kind of cool and and so we've

930
00:42:12,380 --> 00:42:16,608
got you know maybe about ten minutes

931
00:42:14,000 --> 00:42:17,989
left in the stream or more actually

932
00:42:16,608 --> 00:42:20,150
probably like 50 ms left in the stream

933
00:42:17,989 --> 00:42:22,429
so let's go ahead and push forwards a

934
00:42:20,150 --> 00:42:24,500
little bit more on that lets fix our

935
00:42:22,429 --> 00:42:29,838
indentation first of all because I'd

936
00:42:24,500 --> 00:42:31,969
like that to be working properly I don't

937
00:42:29,838 --> 00:42:33,949
know why that actually broke you

938
00:42:31,969 --> 00:42:39,949
completely honest with you because i

939
00:42:33,949 --> 00:42:43,789
feel like the depth value should still

940
00:42:39,949 --> 00:42:46,489
be getting use it's not so Howard our

941
00:42:43,789 --> 00:42:49,519
begin element rectangle stuff was

942
00:42:46,489 --> 00:42:51,649
supposed to at least in theory was

943
00:42:49,519 --> 00:42:57,130
supposed to be doing that part for us

944
00:42:51,650 --> 00:43:02,510
was it not like it's supposed to be odd

945
00:42:57,130 --> 00:43:04,519
so our layout element here our layout is

946
00:43:02,510 --> 00:43:07,970
supposed to have a depth on it and we're

947
00:43:04,519 --> 00:43:12,349
not using it that appears to be our

948
00:43:07,969 --> 00:43:15,500
problem right so that's a little bit of

949
00:43:12,349 --> 00:43:15,830
a mistake it's true so we're going to

950
00:43:15,500 --> 00:43:18,590
have

951
00:43:15,829 --> 00:43:20,569
to make something that that actually

952
00:43:18,590 --> 00:43:25,880
acknowledges that that layout depth

953
00:43:20,570 --> 00:43:28,850
right yeah that's a bit a mistake so

954
00:43:25,880 --> 00:43:32,210
when we come through here I guess what

955
00:43:28,849 --> 00:43:34,639
we need to look at is since the depth

956
00:43:32,210 --> 00:43:37,280
since we are using the depth of this

957
00:43:34,639 --> 00:43:39,339
stack properly I think it would probably

958
00:43:37,280 --> 00:43:42,019
work to just say that they are the same

959
00:43:39,340 --> 00:43:44,180
but we probably want to clean that up a

960
00:43:42,019 --> 00:43:47,800
little bit we'll talk about that in a

961
00:43:44,179 --> 00:43:51,619
second that's why that was not working

962
00:43:47,800 --> 00:43:53,120
so there we go and so the depth is

963
00:43:51,619 --> 00:43:54,559
actually one less than the action up

964
00:43:53,119 --> 00:43:56,719
because we always have something on the

965
00:43:54,559 --> 00:43:59,090
stack right even if it's the first one

966
00:43:56,719 --> 00:44:08,359
but that looks like it's working pretty

967
00:43:59,090 --> 00:44:10,070
well there so that's good yeah although

968
00:44:08,360 --> 00:44:13,579
debug camera distance should be a scalar

969
00:44:10,070 --> 00:44:15,920
and it's not so we're not setting the

970
00:44:13,579 --> 00:44:21,769
value properly on that guy let's take a

971
00:44:15,920 --> 00:44:24,530
look at that yeah and also we're not

972
00:44:21,769 --> 00:44:25,610
actually setting the values right I mean

973
00:44:24,530 --> 00:44:29,860
shouldn't that add up should have done

974
00:44:25,610 --> 00:44:29,860
something well that worked fine

975
00:44:33,989 --> 00:44:39,999
and that works fine so why did our debug

976
00:44:37,838 --> 00:44:42,489
camera Oh probably because the distance

977
00:44:39,998 --> 00:44:48,959
is zero because it's set to false so why

978
00:44:42,489 --> 00:44:52,179
is our debug why is our why is our

979
00:44:48,960 --> 00:44:55,088
scalar value no longer a scalar value

980
00:44:52,179 --> 00:44:58,598
can we talk about that I would like to

981
00:44:55,088 --> 00:45:02,650
know Dewar's debug camera distance so

982
00:44:58,599 --> 00:45:05,769
where is our real 32 ro32 debug variable

983
00:45:02,650 --> 00:45:12,489
type real 32 set so right there why are

984
00:45:05,768 --> 00:45:15,578
we not getting our real 32 why is our

985
00:45:12,489 --> 00:45:17,650
realtor to not working so there and it

986
00:45:15,579 --> 00:45:21,160
was actually printing out as a boolean

987
00:45:17,650 --> 00:45:25,869
as well so it really looks like it is

988
00:45:21,159 --> 00:45:28,149
not the proper variable type right so

989
00:45:25,869 --> 00:45:29,289
that's kind of odd so I don't know

990
00:45:28,150 --> 00:45:31,269
what's going on there so I'm just going

991
00:45:29,289 --> 00:45:33,940
to take a look rather than try to guess

992
00:45:31,268 --> 00:45:36,248
I'm just going to look and see why

993
00:45:33,940 --> 00:45:41,230
that's the case like what's going on

994
00:45:36,248 --> 00:45:43,899
there so it's passing a bool it thinks

995
00:45:41,230 --> 00:45:49,088
bool is actually the matching type for

996
00:45:43,900 --> 00:45:56,769
debug camera distance I don't know why

997
00:45:49,088 --> 00:45:59,278
that's the case so what is debug camera

998
00:45:56,768 --> 00:45:59,278
distance

999
00:46:00,650 --> 00:46:09,059
it's undefined all right fair enough if

1000
00:46:05,460 --> 00:46:15,110
it's undefined its undefined it's that

1001
00:46:09,059 --> 00:46:21,150
because if we went into variables that H

1002
00:46:15,110 --> 00:46:23,160
oops i mean config doubt h that should

1003
00:46:21,150 --> 00:46:24,630
have been as point zero so if I was to

1004
00:46:23,159 --> 00:46:27,989
do something like debug camera distance

1005
00:46:24,630 --> 00:46:31,559
point zero like that is that really the

1006
00:46:27,989 --> 00:46:33,239
entirety of the problem perhaps since

1007
00:46:31,559 --> 00:46:37,799
it's doing its using the type to

1008
00:46:33,239 --> 00:46:41,909
determine it that is the problem all

1009
00:46:37,800 --> 00:46:46,730
right well that's always good use debug

1010
00:46:41,909 --> 00:46:50,250
camera all right ok so that's all fine

1011
00:46:46,730 --> 00:46:59,940
no need to panic debug camera it's

1012
00:46:50,250 --> 00:47:04,429
working yeah ok so that's all fine no

1013
00:46:59,940 --> 00:47:07,349
real problems there ah so what now

1014
00:47:04,429 --> 00:47:08,789
what's the next logical step I think we

1015
00:47:07,349 --> 00:47:12,599
want to do now is get our tear-offs

1016
00:47:08,789 --> 00:47:14,039
working and test those but I don't know

1017
00:47:12,599 --> 00:47:16,110
if those are working anymore i think we

1018
00:47:14,039 --> 00:47:18,779
come to this out right so now we want to

1019
00:47:16,110 --> 00:47:20,269
do to create a tear-off we want to be

1020
00:47:18,780 --> 00:47:23,340
able to kind of do this thing again

1021
00:47:20,269 --> 00:47:25,079
right and we want to be able to pull

1022
00:47:23,340 --> 00:47:27,480
something off of the menu and create

1023
00:47:25,079 --> 00:47:30,929
another version of that thing that we

1024
00:47:27,480 --> 00:47:35,369
can interact with right and so what we

1025
00:47:30,929 --> 00:47:38,099
want to do there if we're going to yeah

1026
00:47:35,369 --> 00:47:39,690
if we're going to implement that I'm

1027
00:47:38,099 --> 00:47:41,759
trying to think if we want to do try to

1028
00:47:39,690 --> 00:47:44,210
do anything clever I don't know if we do

1029
00:47:41,760 --> 00:47:44,210
or not

1030
00:47:46,570 --> 00:47:49,840
I think we should try to do something

1031
00:47:48,159 --> 00:47:53,319
clever so let's try to do something

1032
00:47:49,840 --> 00:47:56,019
clever with that here we go so when we

1033
00:47:53,320 --> 00:47:57,640
let's first just do the basic thing so

1034
00:47:56,019 --> 00:47:59,980
we have our debug interaction where we

1035
00:47:57,639 --> 00:48:03,039
tear the value off we now need to make a

1036
00:47:59,980 --> 00:48:04,510
tree for it right well let's just let

1037
00:48:03,039 --> 00:48:07,329
compile errors tell us what's wrong here

1038
00:48:04,510 --> 00:48:09,040
first of all so our debug tree right

1039
00:48:07,329 --> 00:48:11,590
that's going to have to do basically

1040
00:48:09,039 --> 00:48:13,420
same thing was doing and when we make a

1041
00:48:11,590 --> 00:48:15,630
group for these guys we're now going to

1042
00:48:13,420 --> 00:48:17,710
have to do something where we actually

1043
00:48:15,630 --> 00:48:19,660
use these calls directly like we're

1044
00:48:17,710 --> 00:48:23,800
doing before screen to call debug ad

1045
00:48:19,659 --> 00:48:27,819
group right we need to do debug let's

1046
00:48:23,800 --> 00:48:29,590
see diva begin variable group probably

1047
00:48:27,820 --> 00:48:32,080
something whatever that's doing debug

1048
00:48:29,590 --> 00:48:33,760
add variable so we need to do this so we

1049
00:48:32,079 --> 00:48:35,469
need to do this again like we were doing

1050
00:48:33,760 --> 00:48:38,440
it before we need to make a thing where

1051
00:48:35,469 --> 00:48:42,369
we can do debug variable like a drupe

1052
00:48:38,440 --> 00:48:44,139
group something like that right that

1053
00:48:42,369 --> 00:48:48,210
just does this this stuff without

1054
00:48:44,139 --> 00:48:52,629
anything else it doesn't do that right

1055
00:48:48,210 --> 00:48:53,829
and it just uses the context state so it

1056
00:48:52,630 --> 00:48:59,550
just creates one of these but

1057
00:48:53,829 --> 00:49:05,049
initializes it right and that's it I

1058
00:48:59,550 --> 00:49:06,430
guess I should also say should probably

1059
00:49:05,050 --> 00:49:09,310
do it without the context that's the

1060
00:49:06,429 --> 00:49:12,669
whole point of this so we can add a root

1061
00:49:09,309 --> 00:49:15,489
group this way and I guess we need a

1062
00:49:12,670 --> 00:49:17,440
name for it obviously so there's the

1063
00:49:15,489 --> 00:49:21,159
name for it and then we want to be able

1064
00:49:17,440 --> 00:49:22,929
to add a variable to this thing right so

1065
00:49:21,159 --> 00:49:26,710
we wanted to call add variable to group

1066
00:49:22,929 --> 00:49:28,210
we want to pass it what group data to so

1067
00:49:26,710 --> 00:49:30,789
that all works exactly the same ways

1068
00:49:28,210 --> 00:49:33,789
does we want to add the tree and then I

1069
00:49:30,789 --> 00:49:35,139
think that's pretty much it right now it

1070
00:49:33,789 --> 00:49:37,239
would be nice if these two things were a

1071
00:49:35,139 --> 00:49:38,170
little more coherent so I think the way

1072
00:49:37,239 --> 00:49:39,729
that I'm going to do this is I'm going

1073
00:49:38,170 --> 00:49:41,110
to call debug a drupe go this way we

1074
00:49:39,730 --> 00:49:43,449
were doing it before and I like that way

1075
00:49:41,110 --> 00:49:47,170
so I'm going to keep doing that where we

1076
00:49:43,449 --> 00:49:50,109
caught we basically like call down to

1077
00:49:47,170 --> 00:49:53,889
the lower level one do the add that way

1078
00:49:50,110 --> 00:49:55,930
and then all we do here is you know fix

1079
00:49:53,889 --> 00:49:59,489
up the rest of this stuff so we'd call

1080
00:49:55,929 --> 00:50:05,879
debug add variable to group

1081
00:49:59,489 --> 00:50:09,269
right and hmm excuse me use whatever

1082
00:50:05,880 --> 00:50:14,730
that Depot group actually is and so

1083
00:50:09,269 --> 00:50:17,150
that's going to be that's debug add

1084
00:50:14,730 --> 00:50:22,980
variable can be this guy right here

1085
00:50:17,150 --> 00:50:25,740
right that's the that's the one okay so

1086
00:50:22,980 --> 00:50:27,719
deep effect add variable to group it

1087
00:50:25,739 --> 00:50:29,129
will just do this even that's a little

1088
00:50:27,719 --> 00:50:32,969
bit more than I want so I feel like

1089
00:50:29,130 --> 00:50:34,230
actually I should probably do this where

1090
00:50:32,969 --> 00:50:37,909
we do debug add variable there I

1091
00:50:34,230 --> 00:50:41,760
actually want internal void debug add

1092
00:50:37,909 --> 00:50:46,940
variable to default group or something

1093
00:50:41,760 --> 00:50:51,060
like this where it just does this part

1094
00:50:46,940 --> 00:50:53,070
and that way I can call that directly so

1095
00:50:51,059 --> 00:50:55,710
I can just say okay I've got a context

1096
00:50:53,070 --> 00:50:58,440
add this variable to the context

1097
00:50:55,710 --> 00:51:04,079
whatever the context thinks it should be

1098
00:50:58,440 --> 00:51:06,720
doing at this time right because then

1099
00:51:04,079 --> 00:51:09,059
this all works and that's all fine and

1100
00:51:06,719 --> 00:51:11,699
so then here when we do debug add route

1101
00:51:09,059 --> 00:51:13,590
group we can then called ego by a group

1102
00:51:11,699 --> 00:51:16,559
group and then debug add variable to

1103
00:51:13,590 --> 00:51:19,500
default group and it will always kind of

1104
00:51:16,559 --> 00:51:25,320
reuse itself properly in the chain debug

1105
00:51:19,500 --> 00:51:29,420
variable group and that's just going to

1106
00:51:25,320 --> 00:51:29,420
look like that all right

1107
00:51:29,800 --> 00:51:38,800
so I think that should be fine should be

1108
00:51:35,170 --> 00:51:43,090
good let's find out what happens we

1109
00:51:38,800 --> 00:51:47,950
actually do this so I want to clone the

1110
00:51:43,090 --> 00:51:51,130
sky so I have cloned Tim right and now

1111
00:51:47,949 --> 00:51:53,109
in this so far we have not actually

1112
00:51:51,130 --> 00:51:54,760
differentiated these guys so it should

1113
00:51:53,110 --> 00:51:59,769
behave exactly the same way as it does

1114
00:51:54,760 --> 00:52:02,590
before right that makes sense but now if

1115
00:51:59,769 --> 00:52:06,730
we want these guys to be expanded to be

1116
00:52:02,590 --> 00:52:09,190
able to expand and contract properly see

1117
00:52:06,730 --> 00:52:12,039
if I can do this why is that copying the

1118
00:52:09,190 --> 00:52:13,480
whole thing like we have some kind of I

1119
00:52:12,039 --> 00:52:18,820
think our ter interaction is slightly

1120
00:52:13,480 --> 00:52:21,579
off there though let me see add tree

1121
00:52:18,820 --> 00:52:28,330
root Cooper's new user group contraction

1122
00:52:21,579 --> 00:52:29,980
bar so if we're doing a tear value yeah

1123
00:52:28,329 --> 00:52:31,269
i wanna i just want to take a quick look

1124
00:52:29,980 --> 00:52:36,389
at that I feel like we may have the

1125
00:52:31,269 --> 00:52:36,389
variable wrong on that clear interaction

1126
00:52:38,829 --> 00:52:46,610
so that looks right we're tearing the

1127
00:52:43,969 --> 00:52:52,309
value and that's the value that we're

1128
00:52:46,610 --> 00:52:57,470
tearing off so I'm not entirely sure why

1129
00:52:52,309 --> 00:52:59,449
the tree is getting that is displaying

1130
00:52:57,469 --> 00:53:05,809
that whole thing did we do something

1131
00:52:59,449 --> 00:53:08,649
dumb when we do the main menu thing were

1132
00:53:05,809 --> 00:53:12,710
we grabbing something that's not

1133
00:53:08,650 --> 00:53:17,150
actually the trees root or something yes

1134
00:53:12,710 --> 00:53:19,250
fantastic why are we doing that that

1135
00:53:17,150 --> 00:53:22,400
doesn't make any sense that's what we

1136
00:53:19,250 --> 00:53:26,030
actually want to say the least so that

1137
00:53:22,400 --> 00:53:27,530
would have been kind of annoying uh to

1138
00:53:26,030 --> 00:53:30,710
debug because we'd be like what's going

1139
00:53:27,530 --> 00:53:34,010
on it's like well what's going on is

1140
00:53:30,710 --> 00:53:38,329
you're an idiot okay so let's go ahead

1141
00:53:34,010 --> 00:53:39,950
and delete that that away and now we

1142
00:53:38,329 --> 00:53:43,099
should actually be low tear off specific

1143
00:53:39,949 --> 00:53:47,569
values not the whole tree so there's one

1144
00:53:43,099 --> 00:53:48,980
let's try this one there we go but like

1145
00:53:47,570 --> 00:53:50,809
I said they're still tied together right

1146
00:53:48,980 --> 00:53:53,000
and so we want to do is untie these now

1147
00:53:50,809 --> 00:53:54,409
and that should be a simple matter of

1148
00:53:53,000 --> 00:53:56,659
being able to disambiguate them now what

1149
00:53:54,409 --> 00:53:58,759
we can do is we could deep copy the

1150
00:53:56,659 --> 00:54:01,099
hierarchy but that seems like a pain

1151
00:53:58,760 --> 00:54:03,410
because now in theory we don't really

1152
00:54:01,099 --> 00:54:06,619
have to because since the state is

1153
00:54:03,409 --> 00:54:08,679
stored externally we can actually tear

1154
00:54:06,619 --> 00:54:11,000
off whole hierarchy is just fine and

1155
00:54:08,679 --> 00:54:12,619
with that state start extremely all we

1156
00:54:11,000 --> 00:54:15,530
need i don't know why i've got two of

1157
00:54:12,619 --> 00:54:19,279
these open I don't even want to know why

1158
00:54:15,530 --> 00:54:20,690
that's happening we won't ask now that

1159
00:54:19,280 --> 00:54:23,930
we've got them sort externally all we

1160
00:54:20,690 --> 00:54:27,679
need to do is make our debug ID be more

1161
00:54:23,929 --> 00:54:31,190
expressive about what is actually being

1162
00:54:27,679 --> 00:54:33,079
compared right so all we need to do is

1163
00:54:31,190 --> 00:54:36,230
when we make one of these debug view IDs

1164
00:54:33,079 --> 00:54:38,150
we just need something a little bit more

1165
00:54:36,230 --> 00:54:39,559
expressive that says like what tree

1166
00:54:38,150 --> 00:54:41,599
you're iterating them in or something

1167
00:54:39,559 --> 00:54:43,130
and we won't actually ever have to clone

1168
00:54:41,599 --> 00:54:44,509
it because it'll automatically just

1169
00:54:43,130 --> 00:54:48,320
flown the state but won't have to clone

1170
00:54:44,510 --> 00:54:50,350
the tree if that makes sense so if we do

1171
00:54:48,320 --> 00:54:50,350
that

1172
00:54:52,269 --> 00:54:57,650
all we would need to do is when we

1173
00:54:54,440 --> 00:54:59,480
create these guys a debug variable link

1174
00:54:57,650 --> 00:55:03,610
let's just say that when you do that you

1175
00:54:59,480 --> 00:55:03,610
have to tell me the tree as well right

1176
00:55:03,940 --> 00:55:09,320
so when we do debug ID from link and

1177
00:55:08,360 --> 00:55:11,930
we're trying to create these

1178
00:55:09,320 --> 00:55:19,490
interactions you just have to pass the

1179
00:55:11,929 --> 00:55:22,969
tree as well all right so for our link

1180
00:55:19,489 --> 00:55:27,829
interactions we know the tree right we

1181
00:55:22,969 --> 00:55:32,529
know the tree here oops Stefan wrong

1182
00:55:27,829 --> 00:55:38,569
order and we know the tree here as well

1183
00:55:32,530 --> 00:55:42,320
right so yeah so now when we look at

1184
00:55:38,570 --> 00:55:45,200
this when we pull this off you can see

1185
00:55:42,320 --> 00:55:47,600
that in theory they should behave

1186
00:55:45,199 --> 00:55:50,899
totally differently and they do right

1187
00:55:47,599 --> 00:55:53,480
because now the state is being stored as

1188
00:55:50,900 --> 00:55:57,170
a look-up on not only which one of these

1189
00:55:53,480 --> 00:56:00,500
guys you are right but also which tree

1190
00:55:57,170 --> 00:56:03,050
you're talking about and we could extend

1191
00:56:00,500 --> 00:56:04,760
this a little bit further on the hot

1192
00:56:03,050 --> 00:56:07,039
interaction side right because you

1193
00:56:04,760 --> 00:56:09,290
notice we we highlight function like

1194
00:56:07,039 --> 00:56:12,110
this and they both highlight now that

1195
00:56:09,289 --> 00:56:14,329
may be actually a good thing we may want

1196
00:56:12,110 --> 00:56:17,720
that to be the case that seems kind of

1197
00:56:14,329 --> 00:56:19,519
helpful in my mind but if we didn't want

1198
00:56:17,719 --> 00:56:22,219
to do that we could we could make that

1199
00:56:19,519 --> 00:56:25,639
not happen either by just comparing

1200
00:56:22,219 --> 00:56:28,579
those debug IDs at the head end right

1201
00:56:25,639 --> 00:56:30,139
that makes sense ok so we've succeeded

1202
00:56:28,579 --> 00:56:32,569
in our first stated goal which is to

1203
00:56:30,139 --> 00:56:35,239
isolate that state so that's kind of

1204
00:56:32,570 --> 00:56:37,490
nice and that might be a good place to

1205
00:56:35,239 --> 00:56:39,529
end for today I'm really to be happy

1206
00:56:37,489 --> 00:56:41,419
with that and hopefully everyone knows

1207
00:56:39,530 --> 00:56:43,370
what we did there right what we did is

1208
00:56:41,420 --> 00:56:44,690
we separated the state out in the

1209
00:56:43,369 --> 00:56:46,909
something that can you looked up on some

1210
00:56:44,690 --> 00:56:49,820
key values so that now when we produce

1211
00:56:46,909 --> 00:56:52,219
our interface we're now no longer come

1212
00:56:49,820 --> 00:56:54,890
worried about having to store any

1213
00:56:52,219 --> 00:56:57,679
particular state for something just as

1214
00:56:54,889 --> 00:56:59,119
we need it we go please get me a state

1215
00:56:57,679 --> 00:57:00,949
storage for something that's in this

1216
00:56:59,119 --> 00:57:02,809
tree that has this site that has this

1217
00:57:00,949 --> 00:57:04,309
you know whatever pointer or something

1218
00:57:02,809 --> 00:57:06,289
and then we can

1219
00:57:04,309 --> 00:57:07,969
just kind of go hog Wow the nice part

1220
00:57:06,289 --> 00:57:09,469
about it is it doesn't use it if this

1221
00:57:07,969 --> 00:57:11,959
tree was giant you know if it was like

1222
00:57:09,469 --> 00:57:15,169
billions of entries we would never

1223
00:57:11,960 --> 00:57:17,059
actually be touching or storing any of

1224
00:57:15,170 --> 00:57:19,519
the state for those entities right in

1225
00:57:17,059 --> 00:57:21,049
that tree we're just throwing the state

1226
00:57:19,519 --> 00:57:23,119
for the ones we actually have ever seen

1227
00:57:21,050 --> 00:57:24,560
before and that's actually pretty

1228
00:57:23,119 --> 00:57:26,299
important because what that means is we

1229
00:57:24,559 --> 00:57:28,309
can have trees that could be infinitely

1230
00:57:26,300 --> 00:57:29,870
large like let's say and this is

1231
00:57:28,309 --> 00:57:31,699
swelling I want to do you know maybe

1232
00:57:29,869 --> 00:57:33,139
tomorrow or the next day let's say we

1233
00:57:31,699 --> 00:57:35,750
have something that has an unbounded

1234
00:57:33,139 --> 00:57:37,219
number of things in the tree like very

1235
00:57:35,750 --> 00:57:38,570
very large that could be like all the

1236
00:57:37,219 --> 00:57:41,179
world chunks or something like right

1237
00:57:38,570 --> 00:57:42,890
right that you could drill down into or

1238
00:57:41,179 --> 00:57:45,139
who knows what we wouldn't have to

1239
00:57:42,889 --> 00:57:47,119
create storage for all those things we'd

1240
00:57:45,139 --> 00:57:48,679
only store them as we came across them

1241
00:57:47,119 --> 00:57:51,170
and that's really like kind of what I

1242
00:57:48,679 --> 00:57:52,699
want right all right so I think we're

1243
00:57:51,170 --> 00:57:54,530
getting there we'll go to a brief Q&amp;A

1244
00:57:52,699 --> 00:57:57,829
assuming that the laptop is working

1245
00:57:54,530 --> 00:58:01,040
which I don't know if it is but we will

1246
00:57:57,829 --> 00:58:03,909
we'll do that you'll try to do that as

1247
00:58:01,039 --> 00:58:03,909
best as I can

1248
00:58:14,019 --> 00:58:19,989
pure design question in giba in debug

1249
00:58:17,139 --> 00:58:21,969
I'm sorry get debug view for your method

1250
00:58:19,989 --> 00:58:24,189
is named such that it's a query but it

1251
00:58:21,969 --> 00:58:25,779
appears to be a command in some cases in

1252
00:58:24,190 --> 00:58:27,579
that it change in state of the system

1253
00:58:25,780 --> 00:58:29,500
I've heard that you typically want to

1254
00:58:27,579 --> 00:58:38,889
avoid this do you agree is there a

1255
00:58:29,500 --> 00:58:44,320
reason you did this um so I guess what I

1256
00:58:38,889 --> 00:58:48,969
would say is I don't normally tend to be

1257
00:58:44,320 --> 00:58:52,539
too I don't tend to care too much about

1258
00:58:48,969 --> 00:58:54,879
that naming scheme wise I don't tend to

1259
00:58:52,539 --> 00:58:57,340
assume that the name of something tells

1260
00:58:54,880 --> 00:59:00,670
me whether it will modify it or not but

1261
00:58:57,340 --> 00:59:02,559
I would not mind someone who want who

1262
00:59:00,670 --> 00:59:04,300
felt strongly about that like if if

1263
00:59:02,559 --> 00:59:06,219
that's the way you tend to program is

1264
00:59:04,300 --> 00:59:07,810
that you trust that you will name your

1265
00:59:06,219 --> 00:59:09,219
things based on whether they modify

1266
00:59:07,809 --> 00:59:11,199
something or not and you then use that

1267
00:59:09,219 --> 00:59:17,169
to sort of speed up the development

1268
00:59:11,199 --> 00:59:22,929
process because I will I often do do

1269
00:59:17,170 --> 00:59:26,889
something that looks like this I will

1270
00:59:22,929 --> 00:59:28,719
often do that and so I am totally fine

1271
00:59:26,889 --> 00:59:33,309
with that I like I said I'm i'm not

1272
00:59:28,719 --> 00:59:34,989
particularly fussy about it but i will

1273
00:59:33,309 --> 00:59:37,809
often named it that way if I think I'm

1274
00:59:34,989 --> 00:59:39,879
in any danger of forgetting in this case

1275
00:59:37,809 --> 00:59:42,159
I know the debug view 0 is cached behind

1276
00:59:39,880 --> 00:59:43,720
the scenes so I don't think of them as

1277
00:59:42,159 --> 00:59:46,569
something that needs to state that

1278
00:59:43,719 --> 00:59:51,750
because you never don't do that at the

1279
00:59:46,570 --> 00:59:51,750
moment but it's it's totally fine

1280
00:59:53,880 --> 00:59:57,690
do you think learning all the algorithms

1281
00:59:55,500 --> 01:00:00,389
and data structures ISM is a must or is

1282
00:59:57,690 --> 01:00:02,429
it okay to learn them when the need for

1283
01:00:00,389 --> 01:00:03,900
one of them arises or is it one of those

1284
01:00:02,429 --> 01:00:08,269
things that you have to learn beforehand

1285
01:00:03,900 --> 01:00:08,269
or to know if you need them or not I

1286
01:00:10,610 --> 01:00:16,890
would say that I would say that the

1287
01:00:15,179 --> 01:00:18,239
basic algorithms and data structures are

1288
01:00:16,889 --> 01:00:20,849
probably something you want to kind of

1289
01:00:18,239 --> 01:00:22,019
learn at least learn what they do you

1290
01:00:20,849 --> 01:00:23,549
don't necessarily to learn how to write

1291
01:00:22,019 --> 01:00:25,710
them like you don't then learn how to

1292
01:00:23,550 --> 01:00:28,610
write a b-tree but you should know what

1293
01:00:25,710 --> 01:00:32,880
a b-tree is and why you might use it

1294
01:00:28,610 --> 01:00:36,930
because yeah learning how to implement

1295
01:00:32,880 --> 01:00:38,400
them lazily is totally fine but learning

1296
01:00:36,929 --> 01:00:41,699
what they do is kind of a must because

1297
01:00:38,400 --> 01:00:44,400
otherwise you wouldn't know if you

1298
01:00:41,699 --> 01:00:46,199
needed one like you wouldn't know if

1299
01:00:44,400 --> 01:00:49,380
you're in a circumstance you're like I

1300
01:00:46,199 --> 01:00:51,149
don't know what to do here you can't

1301
01:00:49,380 --> 01:00:52,740
just go learn the one that you need

1302
01:00:51,150 --> 01:00:55,079
because you don't know which one you

1303
01:00:52,739 --> 01:00:56,909
need right so you can't possibly learn

1304
01:00:55,079 --> 01:00:59,789
it at that point so I would say just

1305
01:00:56,909 --> 01:01:02,159
getting a broad overview of like what's

1306
01:00:59,789 --> 01:01:06,840
a b-tree what's a hash table what's the

1307
01:01:02,159 --> 01:01:08,069
stack what's a map you know what are all

1308
01:01:06,840 --> 01:01:09,300
these things and some of those are kind

1309
01:01:08,070 --> 01:01:10,500
of cross way like a map is kind of

1310
01:01:09,300 --> 01:01:14,519
conceptual thing where's the hashes of

1311
01:01:10,500 --> 01:01:16,550
implementation things so you know kind

1312
01:01:14,519 --> 01:01:18,659
of mixing words a bit there but

1313
01:01:16,550 --> 01:01:21,390
understanding just kind of what your

1314
01:01:18,659 --> 01:01:24,019
options are it's kind of important this

1315
01:01:21,389 --> 01:01:24,019
is basically it

1316
01:02:00,079 --> 01:02:04,980
and unfortunately I can't really answer

1317
01:02:03,268 --> 01:02:19,108
in sohbats question because I don't

1318
01:02:04,980 --> 01:02:22,079
understand it quarter Tron a b-tree is

1319
01:02:19,108 --> 01:02:23,639
not really a subset I'm sorry binary

1320
01:02:22,079 --> 01:02:30,599
search tree is not really a subset of a

1321
01:02:23,639 --> 01:02:32,219
b-tree like a binary search tree I mean

1322
01:02:30,599 --> 01:02:37,890
I I guess I guess you could phrase it

1323
01:02:32,219 --> 01:02:41,098
that way a binary search tree I guess is

1324
01:02:37,889 --> 01:02:44,940
kind of you could say it has to you know

1325
01:02:41,099 --> 01:02:51,000
two branches at each part where's Abby

1326
01:02:44,940 --> 01:02:53,250
tree has n you know I don't tend to

1327
01:02:51,000 --> 01:02:54,480
think of them as really being subsets

1328
01:02:53,250 --> 01:02:55,798
though because the b-tree is kind of

1329
01:02:54,480 --> 01:02:57,778
very different in terms of its

1330
01:02:55,798 --> 01:02:59,489
implementation but I could see why

1331
01:02:57,778 --> 01:03:01,559
someone I could see why you would say

1332
01:02:59,489 --> 01:03:08,399
that and that might be a reasonable way

1333
01:03:01,559 --> 01:03:10,048
to think about it yeah about your memory

1334
01:03:08,400 --> 01:03:11,190
allocation way back when shouldn't the

1335
01:03:10,048 --> 01:03:12,929
amount of memory you allocate depend on

1336
01:03:11,190 --> 01:03:15,450
the size the world chosen by the user as

1337
01:03:12,929 --> 01:03:20,338
it is it is fixed at compile time if I

1338
01:03:15,449 --> 01:03:23,068
understand correctly um so we sort of

1339
01:03:20,338 --> 01:03:28,048
have a dilemma there right and I don't

1340
01:03:23,068 --> 01:03:29,818
know how we want to solve it we will

1341
01:03:28,048 --> 01:03:33,869
talk more about memory allocation a

1342
01:03:29,818 --> 01:03:37,380
little later on but the dilemma that we

1343
01:03:33,869 --> 01:03:39,150
have is technically we set up our game

1344
01:03:37,380 --> 01:03:47,338
to kind of handle arbitrarily large

1345
01:03:39,150 --> 01:03:49,789
worlds right so in some sense if you

1346
01:03:47,338 --> 01:03:52,199
just want it to be ridiculous about it

1347
01:03:49,789 --> 01:03:54,089
you could say that the user should be

1348
01:03:52,199 --> 01:03:57,239
able to make a world that's as big as

1349
01:03:54,088 --> 01:03:59,578
the memory in his machine so a 32 a user

1350
01:03:57,239 --> 01:04:01,018
with 32 gigabytes in his machine should

1351
01:03:59,579 --> 01:04:02,278
be able to make a substantially bigger

1352
01:04:01,018 --> 01:04:05,629
world that someone with only four

1353
01:04:02,278 --> 01:04:05,630
gigabytes right

1354
01:04:06,079 --> 01:04:14,960
the problem with that is it's will it

1355
01:04:11,780 --> 01:04:18,950
would be very very difficult to write an

1356
01:04:14,960 --> 01:04:20,990
algorithm that predicts how much the

1357
01:04:18,949 --> 01:04:27,289
degenerates a world within a certain

1358
01:04:20,989 --> 01:04:30,769
size of memory right and I don't know if

1359
01:04:27,289 --> 01:04:34,429
we'll be able to do that if we can then

1360
01:04:30,769 --> 01:04:36,739
yes what we probably will do is will

1361
01:04:34,429 --> 01:04:38,029
make it so that at startup it takes a

1362
01:04:36,739 --> 01:04:41,419
look at how much memory you have and

1363
01:04:38,030 --> 01:04:43,640
then it like goes all right when you go

1364
01:04:41,420 --> 01:04:45,289
to make a world it will only allow you

1365
01:04:43,639 --> 01:04:46,819
to pick maybe you know a world that's

1366
01:04:45,289 --> 01:04:49,279
the size that could fit in your memory

1367
01:04:46,820 --> 01:04:51,320
footprint you know we could do that if

1368
01:04:49,280 --> 01:04:53,170
we can if we can't do that then we have

1369
01:04:51,320 --> 01:04:56,150
to do is pick some size of the world

1370
01:04:53,170 --> 01:04:57,860
that we know is reasonable and that fits

1371
01:04:56,150 --> 01:04:59,269
inside whatever our system requirements

1372
01:04:57,860 --> 01:05:03,370
are and that's the biggest you can make

1373
01:04:59,269 --> 01:05:03,369
the world you know

1374
01:05:29,550 --> 01:05:33,910
elvin I would like to be a tools

1375
01:05:31,750 --> 01:05:35,469
programmer game tech writer like you but

1376
01:05:33,909 --> 01:05:37,000
I'm still learning things so I'm not

1377
01:05:35,469 --> 01:05:38,259
fully qualified to work as one I'm

1378
01:05:37,000 --> 01:05:40,449
thinking of working in a simple game

1379
01:05:38,260 --> 01:05:42,369
company where the qualifications aren't

1380
01:05:40,449 --> 01:05:44,108
so hardcore maybe they use unity or

1381
01:05:42,369 --> 01:05:46,230
whatever and at the same time do my

1382
01:05:44,108 --> 01:05:49,779
private Louisville stuff self-learning

1383
01:05:46,230 --> 01:05:53,429
good idea yes no I would say it does

1384
01:05:49,780 --> 01:05:56,050
sound like a reasonable idea to me

1385
01:05:53,429 --> 01:05:59,409
there's a lot of work that goes into

1386
01:05:56,050 --> 01:06:02,289
making a game and only a certain portion

1387
01:05:59,409 --> 01:06:05,079
of that is like you know the programming

1388
01:06:02,289 --> 01:06:06,429
and so if you're interested in making

1389
01:06:05,079 --> 01:06:08,679
games it's very important to kind of

1390
01:06:06,429 --> 01:06:10,139
know about the whole process and have

1391
01:06:08,679 --> 01:06:14,618
some experience with the whole process

1392
01:06:10,139 --> 01:06:16,059
so you know working on at a company

1393
01:06:14,619 --> 01:06:18,130
that's making like a game and unity or

1394
01:06:16,059 --> 01:06:20,289
something may not be very good practice

1395
01:06:18,130 --> 01:06:22,840
if you want to be a tools engine

1396
01:06:20,289 --> 01:06:24,579
programmer kind of guy but it's still

1397
01:06:22,840 --> 01:06:27,460
very valuable because you will see the

1398
01:06:24,579 --> 01:06:30,480
process of making a game right and the

1399
01:06:27,460 --> 01:06:33,760
process besides the unity part is

1400
01:06:30,480 --> 01:06:35,409
applicable to any game no matter you

1401
01:06:33,760 --> 01:06:37,119
know the like how artists work on the

1402
01:06:35,409 --> 01:06:39,848
game how the game designers work on the

1403
01:06:37,119 --> 01:06:41,619
game how production works working on in

1404
01:06:39,849 --> 01:06:44,170
a team environment like that all of that

1405
01:06:41,619 --> 01:06:46,539
stuff is the same on a Unity game or on

1406
01:06:44,170 --> 01:06:49,630
a custom engine right and so getting

1407
01:06:46,539 --> 01:06:53,440
experience making Unity game is is not

1408
01:06:49,630 --> 01:06:56,349
at all a you know inapplicable to making

1409
01:06:53,440 --> 01:06:57,909
a game yourself and also getting

1410
01:06:56,349 --> 01:07:00,519
experience making a game in unity or

1411
01:06:57,909 --> 01:07:02,319
something would also inform some of your

1412
01:07:00,519 --> 01:07:05,139
decisions because you will see firsthand

1413
01:07:02,320 --> 01:07:06,730
what are the problems with unity where

1414
01:07:05,139 --> 01:07:09,579
does it break why is it causing us you

1415
01:07:06,730 --> 01:07:11,260
know issues and what do we like about it

1416
01:07:09,579 --> 01:07:13,989
like where is it a good tool what you

1417
01:07:11,260 --> 01:07:15,670
know what do they do right and that

1418
01:07:13,989 --> 01:07:17,199
would allow you as well if you wanted to

1419
01:07:15,670 --> 01:07:18,940
then go work on your own engine stuff or

1420
01:07:17,199 --> 01:07:20,529
do your own things it would inform those

1421
01:07:18,940 --> 01:07:22,599
decisions like what do I want to do that

1422
01:07:20,530 --> 01:07:24,670
unity isn't doing or you know or if you

1423
01:07:22,599 --> 01:07:26,619
want to use unity on your project what

1424
01:07:24,670 --> 01:07:28,420
do I anticipate the problems being and

1425
01:07:26,619 --> 01:07:30,760
what might I right to alleviate those

1426
01:07:28,420 --> 01:07:32,170
problems right so it's definitely I

1427
01:07:30,760 --> 01:07:34,030
think good idea the only thing I would

1428
01:07:32,170 --> 01:07:36,099
caution about it or not really caution

1429
01:07:34,030 --> 01:07:38,140
about it but more or what I'd say is

1430
01:07:36,099 --> 01:07:40,900
there is one option that's one better

1431
01:07:38,139 --> 01:07:42,429
than that if you can if you can get it

1432
01:07:40,900 --> 01:07:44,889
which is if you can work at a company

1433
01:07:42,429 --> 01:07:47,079
where you are maybe not doing anything

1434
01:07:44,889 --> 01:07:48,730
in particular hardcore you're just doing

1435
01:07:47,079 --> 01:07:50,829
game scripting or working on a simpler

1436
01:07:48,730 --> 01:07:52,599
thing but there are harder core

1437
01:07:50,829 --> 01:07:54,670
programmers they're making engine stuff

1438
01:07:52,599 --> 01:07:56,349
that would be even better because then

1439
01:07:54,670 --> 01:07:57,820
you can see how they are working as well

1440
01:07:56,349 --> 01:08:00,069
and that could be very educational for

1441
01:07:57,820 --> 01:08:02,410
you so if you can find a place like that

1442
01:08:00,070 --> 01:08:04,150
that's even better but those are you

1443
01:08:02,409 --> 01:08:06,789
know much harder to find good game

1444
01:08:04,150 --> 01:08:09,340
programmers are hard to find and good

1445
01:08:06,789 --> 01:08:10,989
jobs where you might work nearby or in

1446
01:08:09,340 --> 01:08:14,680
collaboration with a good game develop a

1447
01:08:10,989 --> 01:08:16,149
good game programmer is hard to find so

1448
01:08:14,679 --> 01:08:17,680
I appreciate the fact that you know it

1449
01:08:16,149 --> 01:08:18,879
start and chances are if you know if

1450
01:08:17,680 --> 01:08:19,720
you're trying to get your first game the

1451
01:08:18,880 --> 01:08:21,069
game is sure you're going to be working

1452
01:08:19,720 --> 01:08:22,600
out seeing that just has you know they

1453
01:08:21,069 --> 01:08:23,710
got some unity and maybe who knows what

1454
01:08:22,600 --> 01:08:24,910
they're doing and they don't necessarily

1455
01:08:23,710 --> 01:08:27,149
know what's going on in whatever else

1456
01:08:24,909 --> 01:08:27,149
right

1457
01:08:35,149 --> 01:08:40,969
what are your plans for streaming once

1458
01:08:37,579 --> 01:08:42,769
you complete this game I don't have any

1459
01:08:40,969 --> 01:08:44,750
plans for streaming that's this is all I

1460
01:08:42,770 --> 01:08:47,719
was going to do just make the game and

1461
01:08:44,750 --> 01:08:49,158
then the stream is over Abner cumbre

1462
01:08:47,719 --> 01:08:50,480
you've discussed using blender are you a

1463
01:08:49,158 --> 01:08:52,429
3d modeler of some sort more

1464
01:08:50,479 --> 01:08:56,389
specifically what operations do you do

1465
01:08:52,429 --> 01:08:58,969
with that software package yes I do i do

1466
01:08:56,390 --> 01:09:03,230
know how to do 3d modeling I can do

1467
01:08:58,969 --> 01:09:06,198
production 3d models III do not really

1468
01:09:03,229 --> 01:09:08,329
have much in the way of production 3d

1469
01:09:06,198 --> 01:09:10,099
model painting skills so I would not

1470
01:09:08,329 --> 01:09:14,000
necessarily be the best texturing guy

1471
01:09:10,100 --> 01:09:15,350
nor am I a good rigor but as far as

1472
01:09:14,000 --> 01:09:17,988
modeling concerned I can definitely do

1473
01:09:15,350 --> 01:09:20,989
that as for what i'm using it for at the

1474
01:09:17,988 --> 01:09:24,250
moment i'm using it for essentially

1475
01:09:20,988 --> 01:09:28,250
previz it's for working with the artists

1476
01:09:24,250 --> 01:09:31,298
i've been using blender to do previz so

1477
01:09:28,250 --> 01:09:33,259
i can sort of go like okay here is what

1478
01:09:31,298 --> 01:09:35,119
we're trying to do with this particular

1479
01:09:33,259 --> 01:09:36,619
thing here's a mock-up of it in blender

1480
01:09:35,119 --> 01:09:42,048
and this what everyone's on the same

1481
01:09:36,619 --> 01:09:44,630
page on the team on the current team i'm

1482
01:09:42,048 --> 01:09:46,609
the only person with 3d experience on

1483
01:09:44,630 --> 01:09:49,969
our current game so that's why i'm doing

1484
01:09:46,609 --> 01:09:51,949
that unhand me hero i'm not and handmade

1485
01:09:49,969 --> 01:09:55,369
hero yangshin knows how to use 3d

1486
01:09:51,948 --> 01:09:57,738
packages we don't use it a whole heck of

1487
01:09:55,369 --> 01:10:00,380
a lot well she doesn't use it a whole

1488
01:09:57,738 --> 01:10:02,479
heck of a lot on him a hero but but she

1489
01:10:00,380 --> 01:10:04,250
has 3d experience as well I don't know

1490
01:10:02,479 --> 01:10:10,250
how extensive it is but but she

1491
01:10:04,250 --> 01:10:17,090
definitely knows I'd like to see a

1492
01:10:10,250 --> 01:10:18,679
blender pre stream demo okay I mean any

1493
01:10:17,090 --> 01:10:21,880
particular reason you can just go online

1494
01:10:18,679 --> 01:10:24,710
right now and look up any number of

1495
01:10:21,880 --> 01:10:31,100
blender videos that show you

1496
01:10:24,710 --> 01:10:32,510
introduction to blender because they are

1497
01:10:31,100 --> 01:10:33,320
doing a short off our streams show

1498
01:10:32,510 --> 01:10:35,000
people how you do things like

1499
01:10:33,319 --> 01:10:37,219
metaprogramming that you won't get to

1500
01:10:35,000 --> 01:10:38,840
touch on it hammer here not really

1501
01:10:37,219 --> 01:10:41,750
because this stuff anything that's

1502
01:10:38,840 --> 01:10:44,779
that's anything that's relatively

1503
01:10:41,750 --> 01:10:47,090
straightforward to explain on a stream

1504
01:10:44,779 --> 01:10:49,819
in a reasonable amount of time I am

1505
01:10:47,090 --> 01:10:51,529
doing in handmade hero so anything that

1506
01:10:49,819 --> 01:10:53,929
I'm kind of leaving out is generally

1507
01:10:51,529 --> 01:10:57,590
stuff that you know would need many

1508
01:10:53,930 --> 01:11:00,039
hours of streaming itself to cover if

1509
01:10:57,590 --> 01:11:00,039
that makes sense

1510
01:11:07,609 --> 01:11:11,880
roots 2d hey love catching the stream

1511
01:11:10,289 --> 01:11:13,229
when I can what language you recommend

1512
01:11:11,880 --> 01:11:18,420
is a beginner programmer looking to get

1513
01:11:13,229 --> 01:11:23,369
into game development I don't really

1514
01:11:18,420 --> 01:11:25,800
know obviously like if you're serious

1515
01:11:23,369 --> 01:11:28,079
game programmer C and C++ is pretty much

1516
01:11:25,800 --> 01:11:32,460
the only thing the industry really uses

1517
01:11:28,079 --> 01:11:33,840
Syria in serious land but it's not a

1518
01:11:32,460 --> 01:11:36,929
great language that story to start out

1519
01:11:33,840 --> 01:11:40,140
in if you're talking about more like

1520
01:11:36,929 --> 01:11:42,000
just light game programming then C sharp

1521
01:11:40,140 --> 01:11:44,039
tends to be pretty common for that

1522
01:11:42,000 --> 01:11:45,539
because a lot of people use unity and

1523
01:11:44,039 --> 01:11:49,948
c-sharp is like the scripting language

1524
01:11:45,539 --> 01:11:51,800
in unity now whether any of those are

1525
01:11:49,948 --> 01:11:55,408
good things to start with I don't know I

1526
01:11:51,800 --> 01:11:57,150
I feel like probably if it's you know

1527
01:11:55,408 --> 01:11:59,729
your very first time doing any

1528
01:11:57,149 --> 01:12:01,319
programming at all you know you're going

1529
01:11:59,729 --> 01:12:03,988
to want a language that's really easy to

1530
01:12:01,319 --> 01:12:05,549
experiment with that's very simple that

1531
01:12:03,988 --> 01:12:08,759
just lets you play around you know like

1532
01:12:05,550 --> 01:12:09,900
my I didn't write my first program in c

1533
01:12:08,760 --> 01:12:12,480
you know i wrote my first programming

1534
01:12:09,899 --> 01:12:14,698
basic which is not really around much

1535
01:12:12,479 --> 01:12:16,829
anymore but at the time it was you know

1536
01:12:14,698 --> 01:12:18,419
exactly that it was a program language

1537
01:12:16,829 --> 01:12:20,488
meant for beginners just so they could

1538
01:12:18,420 --> 01:12:22,949
sort of like get an idea of at all

1539
01:12:20,488 --> 01:12:24,928
what's going on so what the best

1540
01:12:22,948 --> 01:12:27,389
language is for that nowadays I really

1541
01:12:24,929 --> 01:12:28,940
don't know you know I don't know it's

1542
01:12:27,390 --> 01:12:32,730
it's it's such a different world

1543
01:12:28,939 --> 01:12:35,069
compared to what I grew up in that I

1544
01:12:32,729 --> 01:12:37,769
don't really have a good I don't really

1545
01:12:35,069 --> 01:12:39,179
have experience with beginner tools to

1546
01:12:37,770 --> 01:12:42,330
know which one of them i think is like

1547
01:12:39,179 --> 01:12:44,010
really the best one to start out so i

1548
01:12:42,329 --> 01:12:45,600
would say you know that's probably

1549
01:12:44,010 --> 01:12:49,920
something you kind of have to search for

1550
01:12:45,600 --> 01:12:52,289
a little bit but yeah you know like like

1551
01:12:49,920 --> 01:12:55,260
maybe something like a game maker or

1552
01:12:52,289 --> 01:12:56,640
something like that probably i'm just

1553
01:12:55,260 --> 01:12:58,890
guessing and i don't know but probably

1554
01:12:56,640 --> 01:13:02,489
has like a very rudimentary scripting

1555
01:12:58,890 --> 01:13:04,170
language in it that's designed to make

1556
01:13:02,488 --> 01:13:06,349
it easy for people who don't necessarily

1557
01:13:04,170 --> 01:13:09,779
know very much about programming to

1558
01:13:06,350 --> 01:13:11,370
experiment and that might be you know a

1559
01:13:09,779 --> 01:13:16,559
good way to just kind of get your feet

1560
01:13:11,369 --> 01:13:17,179
wet but but I don't you know I don't

1561
01:13:16,560 --> 01:13:21,769
know

1562
01:13:17,179 --> 01:13:26,179
I really just don't another one might be

1563
01:13:21,769 --> 01:13:32,530
you know just to play around with with

1564
01:13:26,179 --> 01:13:34,760
something you know like I'm trying so so

1565
01:13:32,529 --> 01:13:36,559
the thing that I thought I guess I would

1566
01:13:34,760 --> 01:13:37,820
say is if I work if I were going to go

1567
01:13:36,559 --> 01:13:39,788
find it if I was going to go spend some

1568
01:13:37,819 --> 01:13:42,139
time like researching it try to find it

1569
01:13:39,788 --> 01:13:43,819
like what what do I think the best one

1570
01:13:42,139 --> 01:13:45,590
is probably think I would look for

1571
01:13:43,819 --> 01:13:47,509
something with a debugger like I don't

1572
01:13:45,590 --> 01:13:49,489
know if something like RPG Maker game

1573
01:13:47,510 --> 01:13:54,889
maker people are suggesting RPG maker on

1574
01:13:49,488 --> 01:13:57,078
here or whatever uh if you can find a

1575
01:13:54,889 --> 01:13:58,578
very simple straightforward you know you

1576
01:13:57,078 --> 01:14:02,208
know a language design three dinners

1577
01:13:58,578 --> 01:14:04,399
that has a debugger that would probably

1578
01:14:02,208 --> 01:14:07,458
be the best because that would be

1579
01:14:04,399 --> 01:14:09,529
something that allows you to look at how

1580
01:14:07,458 --> 01:14:11,988
your code is working and that really

1581
01:14:09,529 --> 01:14:13,368
speeds up the learning process one of

1582
01:14:11,988 --> 01:14:15,408
the problems with a lot of like easy

1583
01:14:13,368 --> 01:14:19,399
languages is they don't necessarily have

1584
01:14:15,408 --> 01:14:23,359
debuggers so i would say probably try to

1585
01:14:19,399 --> 01:14:24,978
find a language I don't never used game

1586
01:14:23,359 --> 01:14:27,078
maker so I don't know but you know if it

1587
01:14:24,979 --> 01:14:28,219
has a debugger and if its language is

1588
01:14:27,078 --> 01:14:29,478
relatively straightforward that you know

1589
01:14:28,219 --> 01:14:30,739
that might be a good thing you know its

1590
01:14:29,479 --> 01:14:34,579
design for game development you know

1591
01:14:30,738 --> 01:14:37,419
it's designed to be easy for games but

1592
01:14:34,578 --> 01:14:37,420
but I don't know

1593
01:14:51,698 --> 01:15:01,719
alright stream is over it's over people

1594
01:15:05,529 --> 01:15:11,779
okay not doing that yet okay thank you

1595
01:15:09,380 --> 01:15:12,800
for joining me for another episode of

1596
01:15:11,779 --> 01:15:14,149
handmade here it's a pleasure cutting

1597
01:15:12,800 --> 01:15:17,029
with you as always it seems like the

1598
01:15:14,149 --> 01:15:19,069
laptop is working well enough to answer

1599
01:15:17,029 --> 01:15:20,478
the chat so I will go ahead and post the

1600
01:15:19,069 --> 01:15:24,558
full schedules the week and we will do

1601
01:15:20,479 --> 01:15:27,979
it as normal now for those of you who

1602
01:15:24,559 --> 01:15:30,110
would like to chat about a special

1603
01:15:27,979 --> 01:15:32,360
episode that's up coming on Friday stay

1604
01:15:30,109 --> 01:15:33,589
on the stream for a second after i

1605
01:15:32,359 --> 01:15:37,609
finish this episode and we will chat

1606
01:15:33,590 --> 01:15:40,219
about it until that happens let me just

1607
01:15:37,609 --> 01:15:41,448
conclude the normal stream and say that

1608
01:15:40,219 --> 01:15:43,698
if you want to follow along the source

1609
01:15:41,448 --> 01:15:44,808
code at home please remember that the

1610
01:15:43,698 --> 01:15:46,158
source code does come with all

1611
01:15:44,809 --> 01:15:47,748
pre-orders of the game so if you want to

1612
01:15:46,158 --> 01:15:49,219
play around that you can always

1613
01:15:47,748 --> 01:15:50,960
pre-order the game on handmade hero org

1614
01:15:49,219 --> 01:15:52,489
and it comes to the source code which I

1615
01:15:50,960 --> 01:15:54,260
upload every night so you can always

1616
01:15:52,488 --> 01:15:56,569
play around the latest version as well

1617
01:15:54,260 --> 01:15:58,039
we also have patreon page montfort the

1618
01:15:56,569 --> 01:15:59,328
video series we have a forum site you go

1619
01:15:58,038 --> 01:16:00,618
to ask questions you have a tweet bout

1620
01:15:59,328 --> 01:16:01,670
that we've scheduled you when I know

1621
01:16:00,618 --> 01:16:03,078
what the schedule is going to be which

1622
01:16:01,670 --> 01:16:04,819
hopefully will be this evening since now

1623
01:16:03,078 --> 01:16:10,670
i'm pretty sure that we can do all the

1624
01:16:04,819 --> 01:16:12,408
weeks ones so that should be the best

1625
01:16:10,670 --> 01:16:13,279
way to keep up with the stream except

1626
01:16:12,408 --> 01:16:15,649
when we have reared technical

1627
01:16:13,279 --> 01:16:17,658
difficulties like we did this weekend so

1628
01:16:15,649 --> 01:16:20,118
anyway yet we'll be back here tomorrow 5

1629
01:16:17,658 --> 01:16:22,748
p.m. pacific daylight time and we will

1630
01:16:20,118 --> 01:16:25,268
be here all week at 5pm until friday

1631
01:16:22,748 --> 01:16:29,658
when there will be a special stream at

1632
01:16:25,269 --> 01:16:31,248
8pm i believe is the correct time and so

1633
01:16:29,658 --> 01:16:33,710
if you want to talk about what's going

1634
01:16:31,248 --> 01:16:35,420
to happen the special stream stay on the

1635
01:16:33,710 --> 01:16:39,139
chat for a minute and we will chat about

1636
01:16:35,420 --> 01:16:41,239
it until then or i should say until

1637
01:16:39,139 --> 01:16:43,248
tomorrow for anyone who's ducking out

1638
01:16:41,238 --> 01:16:46,058
have fun programming and i will see you

1639
01:16:43,248 --> 01:16:46,059
guys on the internet

