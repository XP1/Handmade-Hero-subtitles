1
00:00:04,878 --> 00:00:08,820
hello everyone and welcome to hand made

2
00:00:07,500 --> 00:00:12,990
here oh sure we could a complete game

3
00:00:08,820 --> 00:00:14,509
live on stream I have some I have a

4
00:00:12,990 --> 00:00:18,089
surprise in store for myself today

5
00:00:14,509 --> 00:00:20,039
actually I was pretty excited

6
00:00:18,089 --> 00:00:21,539
last time we were programming Oh looks

7
00:00:20,039 --> 00:00:25,970
like we didn't sub-sahara drive I must

8
00:00:21,539 --> 00:00:28,920
have rebooted I'm pretty excited because

9
00:00:25,969 --> 00:00:30,928
we actually got the lighting looking

10
00:00:28,920 --> 00:00:34,710
kind of cool and it's not even done yet

11
00:00:30,928 --> 00:00:36,659
so basically like the the kind of look

12
00:00:34,710 --> 00:00:38,969
started to seem pretty cool like I kind

13
00:00:36,659 --> 00:00:40,349
of liked what this was looking like like

14
00:00:38,969 --> 00:00:42,570
all the little riff like the wall

15
00:00:40,350 --> 00:00:44,939
reflections look really cool and it's

16
00:00:42,570 --> 00:00:46,679
surprisingly real feeling like it's got

17
00:00:44,939 --> 00:00:49,829
all kinds of nice stuff happening there

18
00:00:46,679 --> 00:00:51,840
so I was pretty excited about this but

19
00:00:49,829 --> 00:00:54,270
this isn't even really the lighting yet

20
00:00:51,840 --> 00:00:58,469
because this is not using the diffuse

21
00:00:54,270 --> 00:01:00,620
map at all during secondary bounces so

22
00:00:58,469 --> 00:01:02,460
it's only using a specular version

23
00:01:00,619 --> 00:01:04,170
whereas what it should be using it

24
00:01:02,460 --> 00:01:08,010
should be using the diffuse version we

25
00:01:04,170 --> 00:01:10,200
just don't have that stuff set up yet so

26
00:01:08,010 --> 00:01:13,978
we don't have a way to feed that in and

27
00:01:10,200 --> 00:01:16,200
so we don't end up getting the any use

28
00:01:13,978 --> 00:01:19,049
of the diffuse in here so the lighting

29
00:01:16,200 --> 00:01:20,549
is actually not at all it's not even

30
00:01:19,049 --> 00:01:22,140
remotely as good as it should be because

31
00:01:20,549 --> 00:01:25,170
it should be using a diffuse map for

32
00:01:22,140 --> 00:01:28,170
bounce computations during the like

33
00:01:25,170 --> 00:01:29,700
convection pass and it's not so that's

34
00:01:28,170 --> 00:01:32,189
what we want to do today and hopefully

35
00:01:29,700 --> 00:01:35,460
if I can get that working in you know in

36
00:01:32,188 --> 00:01:36,809
the next hour or two then today we will

37
00:01:35,459 --> 00:01:38,789
get to see what the lighting actually

38
00:01:36,810 --> 00:01:41,070
looks like for the first time using this

39
00:01:38,790 --> 00:01:42,299
scheme which I'm kind of excited just to

40
00:01:41,069 --> 00:01:44,039
see cuz I don't know what it's gonna

41
00:01:42,299 --> 00:01:45,990
look like right we're just we're trying

42
00:01:44,040 --> 00:01:48,149
to put in a good lighting solution but

43
00:01:45,989 --> 00:01:49,500
like anything else if you're trying from

44
00:01:48,149 --> 00:01:51,359
scratch and you don't really have

45
00:01:49,500 --> 00:01:52,680
anything to go on you don't really know

46
00:01:51,359 --> 00:01:56,399
how good the lighting is going to be or

47
00:01:52,680 --> 00:01:58,439
isn't going to be right and so that's

48
00:01:56,399 --> 00:02:00,450
what we're looking at today trying to

49
00:01:58,438 --> 00:02:02,309
get that working and again like you can

50
00:02:00,450 --> 00:02:03,600
see when I'm up here for example you can

51
00:02:02,310 --> 00:02:07,170
see that I don't get a much light

52
00:02:03,599 --> 00:02:08,609
transmission down in there and so on and

53
00:02:07,170 --> 00:02:10,469
when I'm standing you know it's a pretty

54
00:02:08,610 --> 00:02:13,110
narrow light field like you'll see how

55
00:02:10,469 --> 00:02:14,819
little light there actually is

56
00:02:13,110 --> 00:02:17,130
and again that's because this bounced

57
00:02:14,819 --> 00:02:20,009
lighting is specular bounced lighting

58
00:02:17,129 --> 00:02:21,900
right it's just not it's not correct so

59
00:02:20,009 --> 00:02:24,179
we want to use this map which is the

60
00:02:21,900 --> 00:02:25,680
diffuse map we want to use that for our

61
00:02:24,180 --> 00:02:27,240
bounce lighting and that'll push a lot

62
00:02:25,680 --> 00:02:29,460
more light for the scene it's how light

63
00:02:27,240 --> 00:02:31,890
would actually be behaving pretty much

64
00:02:29,460 --> 00:02:34,740
all the time anyway because most

65
00:02:31,889 --> 00:02:35,909
surfaces are not mirrors right

66
00:02:34,740 --> 00:02:38,040
whereas what we're doing right now

67
00:02:35,909 --> 00:02:41,219
basically simulates it as if they were

68
00:02:38,039 --> 00:02:42,810
all mirrors more or less right and so

69
00:02:41,219 --> 00:02:44,879
what we're seeing is more like a mirror

70
00:02:42,810 --> 00:02:47,039
version of the world where as what we

71
00:02:44,879 --> 00:02:49,469
want to see is what if everything was

72
00:02:47,039 --> 00:02:53,069
more of a chalky like you know diffuse

73
00:02:49,469 --> 00:02:55,620
soft lighting surface and so we kind of

74
00:02:53,069 --> 00:02:58,049
want to make sure we get that right we

75
00:02:55,620 --> 00:03:00,689
want to get that feel so that's what we

76
00:02:58,050 --> 00:03:02,640
need to do now let's go ahead and and

77
00:03:00,689 --> 00:03:05,879
take a look I'm going to go ahead in

78
00:03:02,639 --> 00:03:07,649
here to the lighting code and the the

79
00:03:05,879 --> 00:03:10,979
main problem that we're gonna have is

80
00:03:07,650 --> 00:03:12,750
just that we don't actually have a the

81
00:03:10,979 --> 00:03:15,269
same format for you know one of them's

82
00:03:12,750 --> 00:03:17,129
in the the format of the GPU is gonna

83
00:03:15,270 --> 00:03:19,769
pick up which is just a big texture

84
00:03:17,129 --> 00:03:23,250
atlas the other one is a voxel the one

85
00:03:19,769 --> 00:03:26,730
that we were like an actual voxel so you

86
00:03:23,250 --> 00:03:28,860
can see here if I go into the code these

87
00:03:26,729 --> 00:03:30,988
light voxel cells are what we've been

88
00:03:28,860 --> 00:03:33,989
using to do the the light lookups in

89
00:03:30,989 --> 00:03:36,689
here and I think what we probably want

90
00:03:33,989 --> 00:03:39,659
to do is because we know that we're

91
00:03:36,689 --> 00:03:41,250
basically GPU lighting and we're doing

92
00:03:39,659 --> 00:03:43,829
some of it on the CPU and we may want to

93
00:03:41,250 --> 00:03:45,299
keep doing some of it on the CPU or we

94
00:03:43,830 --> 00:03:47,070
may want to move it to the GPU I don't

95
00:03:45,299 --> 00:03:49,170
know which one we want to do that's kind

96
00:03:47,069 --> 00:03:51,659
of an open question but either way

97
00:03:49,169 --> 00:03:53,879
regardless of that the main thing that

98
00:03:51,659 --> 00:03:57,840
we are going to hit here is the fact

99
00:03:53,879 --> 00:04:00,599
that we know we at least want to be GPU

100
00:03:57,840 --> 00:04:02,430
through lined because we know it

101
00:04:00,599 --> 00:04:03,900
computes the lighting at the end and we

102
00:04:02,430 --> 00:04:05,849
know we need to put the diffuse map into

103
00:04:03,900 --> 00:04:07,650
the format it's going to use so I think

104
00:04:05,849 --> 00:04:10,560
what we more or less want to do here is

105
00:04:07,650 --> 00:04:12,780
keep ourselves more or less on the GPU

106
00:04:10,560 --> 00:04:14,099
path the entire time and if we happen to

107
00:04:12,780 --> 00:04:15,689
keep doing things on the CPU that's fine

108
00:04:14,099 --> 00:04:18,569
but we probably want to keep our data

109
00:04:15,689 --> 00:04:22,469
formatted in the GPU style as well as we

110
00:04:18,569 --> 00:04:25,800
go through it and so I think I want us

111
00:04:22,470 --> 00:04:26,550
to start by taking the light voxel cells

112
00:04:25,800 --> 00:04:29,879
and

113
00:04:26,550 --> 00:04:31,740
stop I want to stop using those right so

114
00:04:29,879 --> 00:04:35,220
rather than treating things as light

115
00:04:31,740 --> 00:04:41,069
voxel cells pretty much ever I would

116
00:04:35,220 --> 00:04:45,360
like to treat these as I would like to

117
00:04:41,069 --> 00:04:47,009
treat the light voxel cells as an actual

118
00:04:45,360 --> 00:04:49,139
texture Atlas so that we're just a

119
00:04:47,009 --> 00:04:52,830
texture Atlas the entire time that's

120
00:04:49,139 --> 00:04:58,129
what I would like and yeah so that's

121
00:04:52,829 --> 00:05:01,050
that's the plan okay

122
00:04:58,129 --> 00:05:03,389
so what I'm gonna do is just make the

123
00:05:01,050 --> 00:05:06,240
smallest change I can to produce that

124
00:05:03,389 --> 00:05:09,180
result and if we look at what's going on

125
00:05:06,240 --> 00:05:10,978
here so you can see we've got in inside

126
00:05:09,180 --> 00:05:13,348
this we've got the light voxel cells

127
00:05:10,978 --> 00:05:15,029
system here and you can see that like

128
00:05:13,348 --> 00:05:18,149
how we've got that is it's basically a

129
00:05:15,029 --> 00:05:21,000
light large voxel dim cube worth of

130
00:05:18,149 --> 00:05:24,418
these little you know texture pieces

131
00:05:21,000 --> 00:05:27,089
right and what I want to do is convert

132
00:05:24,418 --> 00:05:29,549
that to an atlas so in place of this I

133
00:05:27,089 --> 00:05:32,429
sort of want like a light texture atlas

134
00:05:29,550 --> 00:05:34,710
thing and at this point since we know

135
00:05:32,430 --> 00:05:36,778
this is moving through the system quite

136
00:05:34,709 --> 00:05:42,120
a bit and in fact you can even see it

137
00:05:36,778 --> 00:05:45,418
like if you look inside like if you look

138
00:05:42,120 --> 00:05:47,490
inside the where the commands the game

139
00:05:45,418 --> 00:05:49,408
render commands are where we're pushing

140
00:05:47,490 --> 00:05:51,028
this town you can see like we've got

141
00:05:49,408 --> 00:05:52,379
this stuff here and we got the light Fox

142
00:05:51,028 --> 00:05:54,329
will dim the light Fox will see in the

143
00:05:52,379 --> 00:05:57,478
light box Lodi and all this this garbage

144
00:05:54,329 --> 00:06:00,870
in there right um we sort of have this

145
00:05:57,478 --> 00:06:06,079
concept now of a light voxel atlas and

146
00:06:00,870 --> 00:06:08,968
we may want to just have that be a like

147
00:06:06,079 --> 00:06:11,399
we may want that to just be part of the

148
00:06:08,968 --> 00:06:16,199
system like we might want to know what a

149
00:06:11,399 --> 00:06:17,848
light voxel atlas is right and we might

150
00:06:16,199 --> 00:06:20,218
want to just have that be something that

151
00:06:17,848 --> 00:06:23,218
people understand so I'm thinking that

152
00:06:20,218 --> 00:06:25,199
we want something like this you know

153
00:06:23,218 --> 00:06:27,620
what I mean where we can just pass

154
00:06:25,199 --> 00:06:31,020
around one of these light atlases and

155
00:06:27,620 --> 00:06:33,269
instead of having all of these constants

156
00:06:31,019 --> 00:06:37,500
and stuff we can just make something

157
00:06:33,269 --> 00:06:40,319
where we know for any given thing if you

158
00:06:37,500 --> 00:06:42,300
just hand someone a pointer to a light

159
00:06:40,319 --> 00:06:45,959
lists they can get the information out

160
00:06:42,300 --> 00:06:54,270
of the light Atlas that they need to do

161
00:06:45,959 --> 00:06:56,159
their work properly right and so rather

162
00:06:54,269 --> 00:06:58,199
than just having it be scatter shot

163
00:06:56,160 --> 00:06:59,490
which is the reason I did it scatter

164
00:06:58,199 --> 00:07:01,680
shot for now so they didn't know what we

165
00:06:59,490 --> 00:07:03,780
needed now that I kind of see what we

166
00:07:01,680 --> 00:07:05,459
needed I think that might be what we

167
00:07:03,779 --> 00:07:08,849
want now the other thing to keep in mind

168
00:07:05,459 --> 00:07:10,979
is as far as I can tell and it's it

169
00:07:08,850 --> 00:07:13,530
again it's a little bit tricky so I

170
00:07:10,980 --> 00:07:15,780
don't really know but as far as I can

171
00:07:13,529 --> 00:07:17,939
tell like when looking at this system I

172
00:07:15,779 --> 00:07:20,250
think that because we're big blocky

173
00:07:17,939 --> 00:07:23,600
cubes I don't think we're actually gonna

174
00:07:20,250 --> 00:07:27,209
need the depth system probably at all

175
00:07:23,600 --> 00:07:29,340
like looking at it I think like depth is

176
00:07:27,209 --> 00:07:32,219
just not necessary it seems like we can

177
00:07:29,339 --> 00:07:34,829
probably get away with just using the

178
00:07:32,220 --> 00:07:37,890
lighting as is and not actually doing

179
00:07:34,829 --> 00:07:39,750
anything else right the reason you would

180
00:07:37,889 --> 00:07:42,029
use a depth buffer and we had it in

181
00:07:39,750 --> 00:07:44,879
there as like something to maintain and

182
00:07:42,029 --> 00:07:48,089
that we should you know keep track of

183
00:07:44,879 --> 00:07:51,870
going forward the reason for that is

184
00:07:48,089 --> 00:07:54,629
just because look we when we're actually

185
00:07:51,870 --> 00:07:56,699
doing lighting per pixel maybe we want

186
00:07:54,629 --> 00:07:59,819
to check to see whether or not you can

187
00:07:56,699 --> 00:08:01,769
actually from this location wherever

188
00:07:59,819 --> 00:08:03,240
we're doing our lighting from we may

189
00:08:01,769 --> 00:08:05,099
want to see like could we have reached

190
00:08:03,240 --> 00:08:05,759
this light source from here or not or

191
00:08:05,100 --> 00:08:09,330
things like that

192
00:08:05,759 --> 00:08:13,920
right so I believe that that was the

193
00:08:09,329 --> 00:08:16,919
main the main reason for using the the

194
00:08:13,920 --> 00:08:18,810
depth information in here and I don't

195
00:08:16,920 --> 00:08:21,930
know that we're ever gonna actually want

196
00:08:18,810 --> 00:08:23,579
to use that so you know maybe we keep it

197
00:08:21,930 --> 00:08:26,370
in there but I'm just thinking we

198
00:08:23,579 --> 00:08:27,779
probably won't so I think I'll leave it

199
00:08:26,370 --> 00:08:29,850
you know because we're gonna generalize

200
00:08:27,779 --> 00:08:32,370
the light Atlas out a little bit you

201
00:08:29,850 --> 00:08:34,680
know maybe I leave it in there but on

202
00:08:32,370 --> 00:08:38,490
the whole I'm not really sure I actually

203
00:08:34,679 --> 00:08:40,949
want it so I'm pretty I'm pretty unclear

204
00:08:38,490 --> 00:08:43,979
about this right it may be that we just

205
00:08:40,950 --> 00:08:47,000
don't ever want this thing in there at

206
00:08:43,979 --> 00:08:49,860
all and it's I write like I don't know

207
00:08:47,000 --> 00:08:52,220
now there is something that's kind of

208
00:08:49,860 --> 00:08:52,220
unfortunate

209
00:08:53,299 --> 00:08:59,309
which is just that there's not a lot of

210
00:08:56,039 --> 00:09:01,889
ways that I know of that for light

211
00:08:59,309 --> 00:09:03,359
atlases to keep them likes whistled

212
00:09:01,889 --> 00:09:05,939
which is probably what I would want to

213
00:09:03,360 --> 00:09:06,690
do here and just to explain what I mean

214
00:09:05,940 --> 00:09:09,450
by that

215
00:09:06,690 --> 00:09:11,250
so when we're loading in and

216
00:09:09,450 --> 00:09:13,590
distributing light atlases and stuff

217
00:09:11,250 --> 00:09:15,059
like that I would like to be able to

218
00:09:13,590 --> 00:09:17,490
work with the light atlases a little

219
00:09:15,059 --> 00:09:19,349
more cleanly and eventually if we

220
00:09:17,490 --> 00:09:22,019
convert the light as Lass's to like

221
00:09:19,350 --> 00:09:23,370
8-bit or 16-bit rather than 30 bit two

222
00:09:22,019 --> 00:09:25,350
bits per channel which we almost

223
00:09:23,370 --> 00:09:27,179
certainly want to do at the very least I

224
00:09:25,350 --> 00:09:32,399
would think 16 bits per channel for the

225
00:09:27,179 --> 00:09:34,139
lighting would be more than enough it

226
00:09:32,399 --> 00:09:35,879
would be nice to basically be able to

227
00:09:34,139 --> 00:09:39,689
pack these things in a little more

228
00:09:35,879 --> 00:09:41,850
densely right and you'd probably want to

229
00:09:39,690 --> 00:09:44,250
pack them in a pattern that would make

230
00:09:41,850 --> 00:09:46,019
more sense than just rows I don't know I

231
00:09:44,250 --> 00:09:48,000
mean maybe not and one of the problems

232
00:09:46,019 --> 00:09:49,919
is like OpenGL like texture submission

233
00:09:48,000 --> 00:09:51,419
without extensions is pretty bad like

234
00:09:49,919 --> 00:09:54,569
you're always sending down things and

235
00:09:51,419 --> 00:09:56,490
like unsold they're just in a row which

236
00:09:54,570 --> 00:10:00,240
is like the least likely way you are to

237
00:09:56,490 --> 00:10:01,860
access things in 3d graphics right you

238
00:10:00,240 --> 00:10:03,120
know back in the day when you were just

239
00:10:01,860 --> 00:10:05,250
talking about displaying an image direct

240
00:10:03,120 --> 00:10:06,690
through the screen and you were scanning

241
00:10:05,250 --> 00:10:09,149
out the screen in rows and stuff like

242
00:10:06,690 --> 00:10:11,910
that then storing images in rows maybe

243
00:10:09,149 --> 00:10:13,699
make some sense nowadays storages and

244
00:10:11,909 --> 00:10:15,719
rows makes almost no sense whatsoever

245
00:10:13,700 --> 00:10:18,120
you typically want to store them at

246
00:10:15,720 --> 00:10:20,100
least in blocks that have a like

247
00:10:18,120 --> 00:10:22,860
dimension so like 8x8 blocks or

248
00:10:20,100 --> 00:10:24,840
something like this or 4x4 blocks but of

249
00:10:22,860 --> 00:10:25,950
course that's not really possible when

250
00:10:24,840 --> 00:10:28,950
you're just talking about straight

251
00:10:25,950 --> 00:10:30,509
OpenGL submission straight up with GL

252
00:10:28,950 --> 00:10:32,520
submission doesn't support any kind of

253
00:10:30,509 --> 00:10:34,799
Swizzle you have to have it in rows and

254
00:10:32,519 --> 00:10:36,569
so that's kind of annoying there are

255
00:10:34,799 --> 00:10:38,339
like extensions and stuff like this but

256
00:10:36,570 --> 00:10:39,900
it's a problem everywhere like basically

257
00:10:38,340 --> 00:10:41,790
unless you're on a console it's actually

258
00:10:39,899 --> 00:10:44,639
pretty hard to have any idea what the

259
00:10:41,789 --> 00:10:46,049
heck the Swizzle patterns gonna be for

260
00:10:44,639 --> 00:10:47,580
optimal submission to a graphics card

261
00:10:46,049 --> 00:10:50,699
and this is just because they use

262
00:10:47,580 --> 00:10:52,500
different memory it's it's a long story

263
00:10:50,700 --> 00:10:54,830
on NVIDIA it's easy because Nvidia

264
00:10:52,500 --> 00:10:58,379
actually I think supports arbitrary

265
00:10:54,830 --> 00:11:00,120
memory bus whistles so I think on Nvidia

266
00:10:58,379 --> 00:11:02,070
you can pretty much just submit any

267
00:11:00,120 --> 00:11:04,620
Swizzle format that's saying and they

268
00:11:02,070 --> 00:11:06,780
can handle it on ambi I want to say they

269
00:11:04,620 --> 00:11:08,279
don't do that so

270
00:11:06,779 --> 00:11:09,929
because AMD cards are less expensive I

271
00:11:08,279 --> 00:11:12,110
think they they use cheaper MIT they

272
00:11:09,929 --> 00:11:14,729
just use whatever one like memory bus

273
00:11:12,110 --> 00:11:18,629
wiring pattern this is my understanding

274
00:11:14,730 --> 00:11:20,879
and so like on AMD you kind of need to

275
00:11:18,629 --> 00:11:23,009
know like you need to query if you were

276
00:11:20,879 --> 00:11:24,360
going to like support a Swizzle pattern

277
00:11:23,009 --> 00:11:25,470
of the card you have to say like hey

278
00:11:24,360 --> 00:11:27,750
what's wuzzle pattern do you actually

279
00:11:25,470 --> 00:11:28,830
use and that could be pretty tough right

280
00:11:27,750 --> 00:11:31,019
because then you'd have to have like

281
00:11:28,830 --> 00:11:33,000
sort of a JIT compiler that like you

282
00:11:31,019 --> 00:11:34,439
know compiles the graphics at that time

283
00:11:33,000 --> 00:11:37,679
to make sure you use the right so it's

284
00:11:34,440 --> 00:11:39,150
it's tough right so on consoles this is

285
00:11:37,679 --> 00:11:40,829
really easy because in consoles you know

286
00:11:39,149 --> 00:11:42,449
the exact pattern that that Hardware was

287
00:11:40,830 --> 00:11:44,190
designed for and you can just go ahead

288
00:11:42,450 --> 00:11:45,360
and like do all your programming to

289
00:11:44,190 --> 00:11:46,110
exactly that format and then

290
00:11:45,360 --> 00:11:47,639
everything's great

291
00:11:46,110 --> 00:11:48,990
you can even store all your textures in

292
00:11:47,639 --> 00:11:50,819
that format and load them and not have

293
00:11:48,990 --> 00:11:53,149
to go through a Swizzle so you can see

294
00:11:50,820 --> 00:11:55,620
why like this is a huge issue right

295
00:11:53,149 --> 00:11:56,909
anyway long story short I think we're

296
00:11:55,620 --> 00:11:57,929
gonna have to stick with ROS for now

297
00:11:56,909 --> 00:11:59,339
because I don't want to get into that

298
00:11:57,929 --> 00:12:00,689
whole territory because it's a really

299
00:11:59,340 --> 00:12:01,590
big can of worms but I just thought I'd

300
00:12:00,690 --> 00:12:03,030
bring it up because it's worth

301
00:12:01,590 --> 00:12:05,940
understanding like what's going on there

302
00:12:03,029 --> 00:12:07,409
right so let's go ahead and start with

303
00:12:05,940 --> 00:12:10,140
the light atlas and I'm just gonna say

304
00:12:07,409 --> 00:12:11,879
here that all right let's before we try

305
00:12:10,139 --> 00:12:13,980
to do any performance analysis I'm just

306
00:12:11,879 --> 00:12:16,259
gonna say let's make this say that we

307
00:12:13,980 --> 00:12:19,860
actually have like the at like the the

308
00:12:16,259 --> 00:12:25,679
voxel Jim goes in here and then the like

309
00:12:19,860 --> 00:12:28,200
the actual like core dim like so the the

310
00:12:25,679 --> 00:12:29,879
dimensions of the and it looks like we

311
00:12:28,200 --> 00:12:31,770
only have an ass for the 3s at the

312
00:12:29,879 --> 00:12:35,460
moment so I'll use that and then the

313
00:12:31,769 --> 00:12:38,730
like the actual little light templates

314
00:12:35,460 --> 00:12:41,519
the little light squares those are also

315
00:12:38,730 --> 00:12:45,690
need to have dimensions now we don't I

316
00:12:41,519 --> 00:12:47,519
think really try to think if we ever

317
00:12:45,690 --> 00:12:49,740
want to make those things be different

318
00:12:47,519 --> 00:12:52,829
size I don't know if we do or not I will

319
00:12:49,740 --> 00:12:54,330
I guess for now so if we if we want to

320
00:12:52,830 --> 00:12:55,889
make sure that those beautiful sizes I

321
00:12:54,330 --> 00:12:57,930
need two dimensions for those squares

322
00:12:55,889 --> 00:13:02,429
I'm not sure what to call those but I

323
00:12:57,929 --> 00:13:04,319
guess I'll call those like tile dim

324
00:13:02,429 --> 00:13:07,439
because it's like they're little tiles

325
00:13:04,320 --> 00:13:09,480
inside the Atlas right so we know we

326
00:13:07,440 --> 00:13:11,370
have this layout of the voxel and this

327
00:13:09,480 --> 00:13:14,460
layout of the tiles and then we know we

328
00:13:11,370 --> 00:13:18,419
just have like a pointer right to the

329
00:13:14,460 --> 00:13:20,160
actual texels so I just want this to

330
00:13:18,419 --> 00:13:20,539
flow around so that when you get one of

331
00:13:20,159 --> 00:13:21,860
these

332
00:13:20,539 --> 00:13:23,899
you know that you can pull the

333
00:13:21,860 --> 00:13:28,490
information that you need out of it like

334
00:13:23,899 --> 00:13:31,429
here and off you would go at the moment

335
00:13:28,490 --> 00:13:32,899
these are going to be F 32 s but I want

336
00:13:31,429 --> 00:13:35,449
to convert these to something else

337
00:13:32,899 --> 00:13:37,189
eventually as well so I'm gonna use a u

338
00:13:35,450 --> 00:13:38,990
8 pointer here and the reason for that

339
00:13:37,190 --> 00:13:45,590
is just to make sure that the dimensions

340
00:13:38,990 --> 00:13:46,639
actually kind of flow through here now

341
00:13:45,590 --> 00:13:48,379
I'm not going to support arbitrary

342
00:13:46,639 --> 00:13:50,870
formats we're gonna fix the particular

343
00:13:48,379 --> 00:13:52,700
format at the moment it could be F 32

344
00:13:50,870 --> 00:13:55,879
but it might be something else later and

345
00:13:52,700 --> 00:13:57,590
so this right here yeah might change now

346
00:13:55,879 --> 00:14:06,350
you know what I could do too

347
00:13:57,590 --> 00:14:20,240
I could do something like this so maybe

348
00:14:06,350 --> 00:14:22,100
we define a switch here like so maybe

349
00:14:20,240 --> 00:14:24,649
while I'm doing this we just prepare for

350
00:14:22,100 --> 00:14:27,950
the ability because I would like to be

351
00:14:24,649 --> 00:14:29,329
able to swap these right so we're just

352
00:14:27,950 --> 00:14:30,980
going to put this in here and we're

353
00:14:29,330 --> 00:14:33,290
gonna say that game light Atlas is just

354
00:14:30,980 --> 00:14:35,960
a thing now that you can have in the

355
00:14:33,289 --> 00:14:40,129
game and I'm gonna convert the two

356
00:14:35,960 --> 00:14:43,310
things that get passed through to a game

357
00:14:40,129 --> 00:14:46,279
light Atlas and then we're gonna go

358
00:14:43,309 --> 00:14:49,929
ahead and try and fix up the code to

359
00:14:46,279 --> 00:14:53,959
make that work in you know a little bit

360
00:14:49,929 --> 00:14:55,909
in waves right so and and this right

361
00:14:53,960 --> 00:14:57,590
here would change to being like okay

362
00:14:55,909 --> 00:14:59,569
this is the light voxel diffuse and then

363
00:14:57,590 --> 00:15:01,420
I could also have the light box or

364
00:14:59,570 --> 00:15:04,629
specular come down here if we want to

365
00:15:01,419 --> 00:15:08,719
because we can also provide the specular

366
00:15:04,629 --> 00:15:10,789
for what that's worth not 100% sure how

367
00:15:08,720 --> 00:15:16,879
we would want to do that but I think I

368
00:15:10,789 --> 00:15:19,069
kind of know I mean I think it's just we

369
00:15:16,879 --> 00:15:22,309
just passed down the map before we do

370
00:15:19,070 --> 00:15:25,190
the blur before we do the filter on it

371
00:15:22,309 --> 00:15:27,859
and that should give you sort of an

372
00:15:25,190 --> 00:15:31,280
approximate glassy specular and so we

373
00:15:27,860 --> 00:15:34,500
may want to put that to add that to the

374
00:15:31,279 --> 00:15:36,839
system and filter that

375
00:15:34,500 --> 00:15:39,269
during lighting to give a specular

376
00:15:36,840 --> 00:15:41,519
highlight to things that are supposed to

377
00:15:39,269 --> 00:15:43,289
be shiny and at the moment we don't have

378
00:15:41,519 --> 00:15:44,789
a specular map like we don't have a

379
00:15:43,289 --> 00:15:45,839
thing that tells us how shiny anything's

380
00:15:44,789 --> 00:15:48,599
supposed to be but we could add that

381
00:15:45,840 --> 00:15:50,550
pretty easily and that way if someone's

382
00:15:48,600 --> 00:15:52,440
making a piece of art and they want up

383
00:15:50,549 --> 00:15:55,439
you know a little bit of it to appear

384
00:15:52,440 --> 00:15:57,360
shinier like there's a bit of metal on

385
00:15:55,440 --> 00:16:00,390
it or something like that then we could

386
00:15:57,360 --> 00:16:03,269
maybe use that feature so we may want to

387
00:16:00,389 --> 00:16:04,740
enable that I'm not sure anyway so what

388
00:16:03,269 --> 00:16:06,990
I'd like to do first is just do that

389
00:16:04,740 --> 00:16:08,879
conversion so I'm gonna say like well

390
00:16:06,990 --> 00:16:10,049
we'll have the game up Atlas in here I

391
00:16:08,879 --> 00:16:11,460
don't know if we really want this

392
00:16:10,049 --> 00:16:13,229
lightbox wildy in there so I'm just

393
00:16:11,460 --> 00:16:17,580
gonna say like maybe that's not there

394
00:16:13,230 --> 00:16:19,920
anymore and so we'll just kind of have

395
00:16:17,580 --> 00:16:23,460
the lightbox we'll see so we'll have a

396
00:16:19,919 --> 00:16:26,669
lightbox we'll see here and that's going

397
00:16:23,460 --> 00:16:28,440
to be that that light Atlas I'm gonna

398
00:16:26,669 --> 00:16:31,110
get rid of this and I'm just gonna sort

399
00:16:28,440 --> 00:16:33,000
of handle all of the errors that I end

400
00:16:31,110 --> 00:16:35,730
up with right and there's gonna be a lot

401
00:16:33,000 --> 00:16:37,320
of them so here we do the light voxel

402
00:16:35,730 --> 00:16:39,090
dim none of this stuff happens anymore

403
00:16:37,320 --> 00:16:42,720
so I think we're just gonna call this

404
00:16:39,090 --> 00:16:44,790
like diffuse light Atlas like that and

405
00:16:42,720 --> 00:16:47,279
in the OpenGL system we're gonna

406
00:16:44,789 --> 00:16:49,230
initialize that thing so in here where

407
00:16:47,279 --> 00:16:51,870
we previously had sort of a bunch of

408
00:16:49,230 --> 00:16:54,810
random crap hanging around I'm gonna

409
00:16:51,870 --> 00:16:59,490
change that to being specifically the

410
00:16:54,809 --> 00:17:00,689
the buffer for this light voxel right so

411
00:16:59,490 --> 00:17:07,230
this is going to be a light box we'll

412
00:17:00,690 --> 00:17:09,709
see here and hope sorry light game Y

413
00:17:07,230 --> 00:17:12,599
Alice this is gonna be the light voxel C

414
00:17:09,709 --> 00:17:19,769
and well actually you know what

415
00:17:12,599 --> 00:17:23,849
this now that I think about it I should

416
00:17:19,769 --> 00:17:29,069
probably just rename these like these

417
00:17:23,849 --> 00:17:31,889
should just be named diffuse light Atlas

418
00:17:29,069 --> 00:17:35,389
everywhere and where's the where's the

419
00:17:31,890 --> 00:17:35,390
game render commands I was just on

420
00:17:38,910 --> 00:17:45,460
there we go I think that's maybe a

421
00:17:41,589 --> 00:17:47,379
little bit more sane all right

422
00:17:45,460 --> 00:17:49,660
so in here where we're working with

423
00:17:47,380 --> 00:17:51,010
these now you can kind of see like well

424
00:17:49,660 --> 00:17:53,860
this is just getting pulled out of the

425
00:17:51,009 --> 00:17:55,809
lead vas man that's actually fine

426
00:17:53,859 --> 00:17:57,819
and the main problem that we're gonna

427
00:17:55,809 --> 00:18:01,210
have here is like the light color lookup

428
00:17:57,819 --> 00:18:03,189
squared dim and stuff like that those

429
00:18:01,210 --> 00:18:05,200
things are all kind of hard-coded in

430
00:18:03,190 --> 00:18:09,580
here and we kind of want to start to get

431
00:18:05,200 --> 00:18:11,920
those out of the the atlas as well so

432
00:18:09,579 --> 00:18:13,179
I'm gonna do this in two phases the

433
00:18:11,920 --> 00:18:15,730
first phase is I'm going to get it

434
00:18:13,180 --> 00:18:17,140
working with using the different structs

435
00:18:15,730 --> 00:18:19,569
and the second phase is I'm going to

436
00:18:17,140 --> 00:18:20,860
remove these values everywhere like I

437
00:18:19,569 --> 00:18:23,369
was gonna get rid of the pound of fines

438
00:18:20,859 --> 00:18:28,379
and have them all get pulled out of that

439
00:18:23,369 --> 00:18:31,629
actual struct itself as a separate thing

440
00:18:28,380 --> 00:18:33,010
so in here where we have to look at the

441
00:18:31,630 --> 00:18:34,600
light voxel and we're pulling these

442
00:18:33,009 --> 00:18:36,369
elements out of here like we're gonna

443
00:18:34,599 --> 00:18:37,990
just do the basic thing first which is

444
00:18:36,369 --> 00:18:41,709
to say alright this is actually the

445
00:18:37,990 --> 00:18:44,890
diffuse light Atlas and the diffuse

446
00:18:41,710 --> 00:18:49,029
light Atlas in this case needs to look

447
00:18:44,890 --> 00:18:52,300
out on the texels right and we don't

448
00:18:49,029 --> 00:18:54,009
actually have this as an f32 so I kind

449
00:18:52,299 --> 00:18:56,259
of want to do that first which is like

450
00:18:54,009 --> 00:18:58,660
diffuse texels and I'm just gonna do

451
00:18:56,259 --> 00:19:02,140
this for now and we're gonna grab that

452
00:18:58,660 --> 00:19:06,940
out of here like so and just say diffuse

453
00:19:02,140 --> 00:19:09,460
texels and then what I want to do is I

454
00:19:06,940 --> 00:19:11,710
want to get rid of the D the depth value

455
00:19:09,460 --> 00:19:13,269
and the reason that I want to get rid of

456
00:19:11,710 --> 00:19:14,620
the depth value at the moment is because

457
00:19:13,269 --> 00:19:18,000
again I really don't think we're going

458
00:19:14,619 --> 00:19:21,909
to need it and hopefully once I have the

459
00:19:18,000 --> 00:19:24,430
once I do the light app game light Atlas

460
00:19:21,910 --> 00:19:27,070
struct it would be free or close to free

461
00:19:24,430 --> 00:19:29,830
for me to add it back in here because

462
00:19:27,069 --> 00:19:31,450
all I have to do is just you know access

463
00:19:29,829 --> 00:19:34,259
it in the same way that is access the

464
00:19:31,450 --> 00:19:37,299
other thing and we should be okay right

465
00:19:34,259 --> 00:19:40,569
so on the whole I don't really know that

466
00:19:37,299 --> 00:19:43,839
I want this to actually be here and

467
00:19:40,569 --> 00:19:46,689
doing anything again like I don't know

468
00:19:43,839 --> 00:19:49,899
that that's necessarily true but you

469
00:19:46,690 --> 00:19:50,500
know my my assumption is we really just

470
00:19:49,900 --> 00:19:51,970
don't want

471
00:19:50,500 --> 00:19:55,269
so we want to just not have it because

472
00:19:51,970 --> 00:19:57,039
it's getting a little too real it's

473
00:19:55,269 --> 00:20:00,039
trying to do a little bit too much 3d

474
00:19:57,039 --> 00:20:01,930
realistic lighting for us and it's just

475
00:20:00,039 --> 00:20:04,180
gonna slow us down without I think

476
00:20:01,930 --> 00:20:05,980
really improving the quality of the

477
00:20:04,180 --> 00:20:08,650
visuals of the game in a way I care

478
00:20:05,980 --> 00:20:09,849
about so I'm just gonna say like having

479
00:20:08,650 --> 00:20:11,170
looked at what the lighting looks like I

480
00:20:09,849 --> 00:20:13,750
just don't think we're gonna need that

481
00:20:11,170 --> 00:20:15,580
so we can really we can add it back in

482
00:20:13,750 --> 00:20:19,470
if it turns out we really really need it

483
00:20:15,579 --> 00:20:22,990
but for now we're just gonna say no okay

484
00:20:19,470 --> 00:20:24,789
so same thing through here like we're

485
00:20:22,990 --> 00:20:27,250
just gonna have when we're actually

486
00:20:24,789 --> 00:20:29,759
getting these light voxels out of here

487
00:20:27,250 --> 00:20:34,869
you can see us doing a bunch of stuff

488
00:20:29,759 --> 00:20:39,059
for you know filling in filling in the

489
00:20:34,869 --> 00:20:41,919
like the parts of the voxel that are not

490
00:20:39,059 --> 00:20:43,240
so weird I'm looking for the the parts

491
00:20:41,920 --> 00:20:45,970
of the voxel that are meant to handle

492
00:20:43,240 --> 00:20:47,799
wrapping cases and so in this case again

493
00:20:45,970 --> 00:20:51,009
we can just really do the diffuse

494
00:20:47,799 --> 00:20:54,220
textile grab here and use it that right

495
00:20:51,009 --> 00:20:56,379
so this is not the full thing we want to

496
00:20:54,220 --> 00:21:03,069
change for these but it's close enough

497
00:20:56,380 --> 00:21:05,110
at the moment that's really all we're

498
00:21:03,069 --> 00:21:14,559
talking about here so again very very

499
00:21:05,109 --> 00:21:17,289
simple oh so I guess interestingly

500
00:21:14,559 --> 00:21:20,919
enough so for that we don't actually

501
00:21:17,289 --> 00:21:24,250
have a way to get these as v3 so it

502
00:21:20,920 --> 00:21:26,430
looks like this was voxel offset C and D

503
00:21:24,250 --> 00:21:30,250
we're actually assuming that these were

504
00:21:26,430 --> 00:21:33,610
VIII's right so it looks like this is

505
00:21:30,250 --> 00:21:36,130
actually a v3 for now I think we

506
00:21:33,609 --> 00:21:38,439
probably want to change that and but

507
00:21:36,130 --> 00:21:41,050
again I want to do it in small passes

508
00:21:38,440 --> 00:21:45,779
because there's enough complexity here

509
00:21:41,049 --> 00:21:50,259
that I don't really want to do anything

510
00:21:45,779 --> 00:21:51,759
that could be that that I want to do it

511
00:21:50,259 --> 00:21:54,069
in small ways so I can see what breaks

512
00:21:51,759 --> 00:21:55,720
cuz it's gonna be hard to debug either

513
00:21:54,069 --> 00:21:57,009
way and I don't really want to be in a

514
00:21:55,720 --> 00:21:59,470
position where I have to debug

515
00:21:57,009 --> 00:22:02,470
everything at once so I'm trying to keep

516
00:21:59,470 --> 00:22:04,839
the number of changes to the smallest

517
00:22:02,470 --> 00:22:07,808
possible amount on each path

518
00:22:04,839 --> 00:22:10,658
through the code so that I can you know

519
00:22:07,808 --> 00:22:14,859
basically verify that what I'm doing

520
00:22:10,659 --> 00:22:18,370
didn't break anything major each time so

521
00:22:14,859 --> 00:22:20,168
that's the goal all right so let's see

522
00:22:18,369 --> 00:22:22,869
here it looks like this is accessing the

523
00:22:20,169 --> 00:22:25,150
same thing each time so I'm thinking

524
00:22:22,869 --> 00:22:26,678
that probably the diffuse texels should

525
00:22:25,150 --> 00:22:28,419
just be something that I pull out at the

526
00:22:26,679 --> 00:22:31,538
start so it's probably just that and

527
00:22:28,419 --> 00:22:34,380
then everybody uses it so all throughout

528
00:22:31,538 --> 00:22:38,919
this whole thing like all of these

529
00:22:34,380 --> 00:22:46,419
commands light voxel C's are all gonna

530
00:22:38,919 --> 00:22:51,759
be diffused texels like so that seems

531
00:22:46,419 --> 00:22:53,470
sane and then the main thing that's

532
00:22:51,759 --> 00:22:55,658
getting used out here it looks like the

533
00:22:53,470 --> 00:22:57,940
only other real thing is just getting

534
00:22:55,659 --> 00:23:01,470
the dimensions of the voxel DIMM

535
00:22:57,940 --> 00:23:04,808
and the interesting thing about that is

536
00:23:01,470 --> 00:23:09,220
you know we looks like we don't really

537
00:23:04,808 --> 00:23:18,700
support the we don't support arbitrary

538
00:23:09,220 --> 00:23:22,058
dimensions there so this isn't really

539
00:23:18,700 --> 00:23:25,720
sufficient and you can see here like all

540
00:23:22,058 --> 00:23:28,359
of this stuff really probably should

541
00:23:25,720 --> 00:23:30,730
have been done in vector right this

542
00:23:28,359 --> 00:23:32,918
should have been done to v3 yes to allow

543
00:23:30,730 --> 00:23:36,339
us to change the dimensions of our voxel

544
00:23:32,919 --> 00:23:38,980
if we'd wanted to now it may be that

545
00:23:36,339 --> 00:23:43,028
that's unwise because you just waste a

546
00:23:38,980 --> 00:23:44,470
lot of stack space or memory space

547
00:23:43,028 --> 00:23:49,019
sorting these dimensions and working

548
00:23:44,470 --> 00:23:53,909
with them or registers you know but I'm

549
00:23:49,019 --> 00:23:56,470
doubtful of that to be completely honest

550
00:23:53,909 --> 00:23:58,390
so I think it's probably more important

551
00:23:56,470 --> 00:24:00,130
to be able to control the dimensions of

552
00:23:58,390 --> 00:24:02,830
the voxel so that you can fit it better

553
00:24:00,130 --> 00:24:05,409
to your scenes especially for example we

554
00:24:02,829 --> 00:24:08,168
feel like we want a certain X Y

555
00:24:05,409 --> 00:24:10,809
dimension that's fairly dense and then a

556
00:24:08,169 --> 00:24:14,610
Z dimension that's sparser which is a

557
00:24:10,808 --> 00:24:18,158
very possible thing we might want to do

558
00:24:14,609 --> 00:24:18,459
especially on lower end systems where

559
00:24:18,159 --> 00:24:21,940
maybe

560
00:24:18,460 --> 00:24:23,529
we decide not to draw like let's suppose

561
00:24:21,940 --> 00:24:25,809
we're trying to figure out how to ship

562
00:24:23,529 --> 00:24:32,109
this game on a much weaker CPU and a

563
00:24:25,809 --> 00:24:34,169
much weaker GPU or something we may want

564
00:24:32,109 --> 00:24:37,149
to do something where we just draw one

565
00:24:34,170 --> 00:24:42,670
level instead of like right now you can

566
00:24:37,150 --> 00:24:45,519
see down like multiple floors sometimes

567
00:24:42,670 --> 00:24:47,080
like we can set our view we haven't

568
00:24:45,519 --> 00:24:48,639
really played much with that but we

569
00:24:47,079 --> 00:24:51,759
could draw like several you could look

570
00:24:48,640 --> 00:24:55,120
down like a hole and see multiple floors

571
00:24:51,759 --> 00:24:56,859
below you for example and if we were

572
00:24:55,119 --> 00:24:58,899
looking at something like that you could

573
00:24:56,859 --> 00:25:00,969
say well we could also just use fogging

574
00:24:58,900 --> 00:25:03,400
there on like lower end machines you

575
00:25:00,970 --> 00:25:05,019
can't really look down and so in those

576
00:25:03,400 --> 00:25:06,759
cases you'd want to be able to set like

577
00:25:05,019 --> 00:25:09,879
the Z dimension of your voxel - like

578
00:25:06,759 --> 00:25:12,430
very low like for even when the other

579
00:25:09,880 --> 00:25:14,530
two were like 32 by 32 or something and

580
00:25:12,430 --> 00:25:17,560
so I feel like that's something we

581
00:25:14,529 --> 00:25:22,029
probably wanted to support at least you

582
00:25:17,559 --> 00:25:24,730
know so this is not great but you know

583
00:25:22,029 --> 00:25:28,119
oh well so what I would probably say is

584
00:25:24,730 --> 00:25:32,650
like okay the hot cell count here is

585
00:25:28,119 --> 00:25:41,199
gonna be a v3 yes probably so let's just

586
00:25:32,650 --> 00:25:43,450
do that for now so we get that out of

587
00:25:41,200 --> 00:25:45,190
the defeat lice at Lite Atlas the large

588
00:25:43,450 --> 00:25:48,490
cell count for now since that's still a

589
00:25:45,190 --> 00:25:50,710
constant we can just duplicate out the

590
00:25:48,490 --> 00:25:52,750
constant to all three channels and then

591
00:25:50,710 --> 00:25:55,420
we can say all right when we compute the

592
00:25:52,750 --> 00:25:57,369
offset well let's just do it as a v3 yes

593
00:25:55,420 --> 00:25:59,470
and then when we look at the hot corner

594
00:25:57,369 --> 00:26:01,750
we don't actually have to convert it to

595
00:25:59,470 --> 00:26:06,549
v3 s because it already is and then we

596
00:26:01,750 --> 00:26:08,470
have the correct value similarly the hot

597
00:26:06,549 --> 00:26:10,119
dim can now become a Hadamard product

598
00:26:08,470 --> 00:26:12,960
and it can become a Hadamard product

599
00:26:10,119 --> 00:26:16,479
with the correct actual count like so

600
00:26:12,960 --> 00:26:18,940
and that's what we want here so that's

601
00:26:16,480 --> 00:26:21,130
good and that just requires moving the

602
00:26:18,940 --> 00:26:24,490
v3 s up into a regular float v3 for

603
00:26:21,130 --> 00:26:26,410
doing the multiplication but again not

604
00:26:24,490 --> 00:26:28,299
so bad right so we were sort of already

605
00:26:26,410 --> 00:26:30,570
prepared for this but we just didn't

606
00:26:28,299 --> 00:26:32,819
actually do oops

607
00:26:30,569 --> 00:26:35,129
got to actually get the vox let him out

608
00:26:32,819 --> 00:26:37,409
of there we just actually weren't doing

609
00:26:35,130 --> 00:26:40,770
quite the right thing so I think we

610
00:26:37,410 --> 00:26:42,540
didn't ever define operator for like

611
00:26:40,769 --> 00:26:46,048
specifically for the V 3 s's

612
00:26:42,539 --> 00:26:50,339
I don't think we defined an operator for

613
00:26:46,048 --> 00:26:53,970
that for the you know dividing we

614
00:26:50,339 --> 00:26:55,949
probably just had a multiply and so I

615
00:26:53,970 --> 00:26:58,440
don't really know where we put our V 3

616
00:26:55,950 --> 00:26:58,860
s's in here there's a lot of functions

617
00:26:58,440 --> 00:27:01,080
in here

618
00:26:58,859 --> 00:27:02,939
one of the things I never implemented in

619
00:27:01,079 --> 00:27:05,220
my for coder custom layer was jumping to

620
00:27:02,940 --> 00:27:07,830
operators by what types they were using

621
00:27:05,220 --> 00:27:09,900
it would be a nice thing just for this

622
00:27:07,829 --> 00:27:10,889
one case like for math it'd be nice to

623
00:27:09,900 --> 00:27:13,980
be able to say like show me the

624
00:27:10,890 --> 00:27:16,230
operators 4 v 3s or whatever right it's

625
00:27:13,980 --> 00:27:18,390
be a nice feature but I just never got

626
00:27:16,230 --> 00:27:20,099
around to it and you rarely actually

627
00:27:18,390 --> 00:27:21,660
need it so it never made it up the

628
00:27:20,099 --> 00:27:23,609
priority list but it you know in a

629
00:27:21,660 --> 00:27:24,870
fairly complete system you would like

630
00:27:23,609 --> 00:27:26,490
want that so you don't have to do what

631
00:27:24,869 --> 00:27:29,250
I'm doing here

632
00:27:26,490 --> 00:27:31,650
so here are the v 3s operators you can

633
00:27:29,250 --> 00:27:34,410
see like we've got minus and plus but

634
00:27:31,650 --> 00:27:39,750
there's actually no x and divide which

635
00:27:34,410 --> 00:27:43,710
you know I think we do want just for you

636
00:27:39,750 --> 00:27:49,319
know just for doing like basic you know

637
00:27:43,710 --> 00:27:50,009
you thirty twos or s thirty twos you

638
00:27:49,319 --> 00:27:54,000
know what I'm saying

639
00:27:50,009 --> 00:27:56,789
so we basically do like all right give

640
00:27:54,000 --> 00:27:58,589
me the divide give me the multiply and

641
00:27:56,789 --> 00:28:05,069
in this case they're just going to be

642
00:27:58,589 --> 00:28:09,079
like that right just going to be a

643
00:28:05,069 --> 00:28:09,079
multiply or divide

644
00:28:13,859 --> 00:28:19,629
so in this case we just you know

645
00:28:16,470 --> 00:28:21,190
implement the the basic operations for

646
00:28:19,630 --> 00:28:22,809
int and because those are pretty safe

647
00:28:21,190 --> 00:28:26,500
and we know we might want to do them for

648
00:28:22,808 --> 00:28:27,399
situations like you know like this all

649
00:28:26,500 --> 00:28:29,380
right

650
00:28:27,400 --> 00:28:31,660
so taking a look here you can see we're

651
00:28:29,380 --> 00:28:33,220
trying to produce the dimension of this

652
00:28:31,660 --> 00:28:34,570
thing and we're taking the solution box

653
00:28:33,220 --> 00:28:36,250
filled in and multiplying by the large

654
00:28:34,569 --> 00:28:37,329
cell count and you can see that this

655
00:28:36,250 --> 00:28:40,150
doesn't really make any sense because

656
00:28:37,329 --> 00:28:41,740
now this is a this is actually a vector

657
00:28:40,150 --> 00:28:42,940
so it's a vector times vector which

658
00:28:41,740 --> 00:28:46,269
means this is actually a Hadamard

659
00:28:42,940 --> 00:28:48,490
product as well which is again fine like

660
00:28:46,269 --> 00:28:50,079
that's not an issue because we can just

661
00:28:48,490 --> 00:28:53,440
multiply through dimensions by

662
00:28:50,079 --> 00:28:56,529
dimensions and everyone's happy so

663
00:28:53,440 --> 00:28:58,840
that's the conversion and the only

664
00:28:56,529 --> 00:29:00,399
problem that we have right now is if we

665
00:28:58,839 --> 00:29:02,980
actually ran this we would crash pretty

666
00:29:00,400 --> 00:29:05,919
hard and hopefully you can predict where

667
00:29:02,980 --> 00:29:06,940
so we don't actually this is the reason

668
00:29:05,919 --> 00:29:09,549
this crashing here's this is the first

669
00:29:06,940 --> 00:29:11,710
place that we write to the light buffer

670
00:29:09,548 --> 00:29:15,668
the reason for that is in our OpenGL

671
00:29:11,710 --> 00:29:19,019
layer you notice like what I did is I

672
00:29:15,669 --> 00:29:21,490
replaced an actual flat array like this

673
00:29:19,019 --> 00:29:23,798
with just this diffuse light Atlas right

674
00:29:21,490 --> 00:29:25,659
this is not getting used anymore and so

675
00:29:23,798 --> 00:29:27,308
as a result it doesn't actually point

676
00:29:25,659 --> 00:29:31,350
anything it's just has like a null

677
00:29:27,308 --> 00:29:31,349
pointer in there that points to nothing

678
00:29:33,029 --> 00:29:37,500
which is not particularly useful so at

679
00:29:35,650 --> 00:29:40,269
the very least it needs to point to this

680
00:29:37,500 --> 00:29:41,919
and we can go ahead and make that happen

681
00:29:40,269 --> 00:29:46,150
so if I go in here to the diffuse

682
00:29:41,919 --> 00:29:48,250
slightly atlas and where that

683
00:29:46,150 --> 00:29:51,220
information is actually being set up so

684
00:29:48,250 --> 00:29:54,548
you can see in here right this is in the

685
00:29:51,220 --> 00:29:56,440
OpenGL begin frame so we're doing that

686
00:29:54,548 --> 00:29:59,200
straight copy this needs to actually

687
00:29:56,440 --> 00:30:03,630
have valid data in it so if I were to go

688
00:29:59,200 --> 00:30:06,269
to you know like OpenGL in it which

689
00:30:03,630 --> 00:30:08,710
actually know where it is here it is

690
00:30:06,269 --> 00:30:10,538
when we do open julen it like what I

691
00:30:08,710 --> 00:30:13,298
would want to do is make sure that our

692
00:30:10,538 --> 00:30:15,700
our light textures actually set up so in

693
00:30:13,298 --> 00:30:18,700
here where we have the diffuse light

694
00:30:15,700 --> 00:30:20,110
Atlas I would want to make sure I would

695
00:30:18,700 --> 00:30:21,940
want to make sure that we actually

696
00:30:20,109 --> 00:30:24,079
initialize all the values of it

697
00:30:21,940 --> 00:30:27,570
so like

698
00:30:24,079 --> 00:30:30,418
the voxel game has to be initialized to

699
00:30:27,569 --> 00:30:36,359
a v3 yes the tyldum has to be

700
00:30:30,419 --> 00:30:39,360
initialized and then the texels have to

701
00:30:36,359 --> 00:30:41,128
be initialized as well and in this case

702
00:30:39,359 --> 00:30:43,678
we'll just initialize the texels to this

703
00:30:41,128 --> 00:30:45,778
for now like to the hard-coded array

704
00:30:43,679 --> 00:30:47,009
that we put in there in the future we

705
00:30:45,778 --> 00:30:49,619
can get a little more fancy with that if

706
00:30:47,009 --> 00:30:52,349
we want to and then we can just say look

707
00:30:49,619 --> 00:30:56,908
we've got the square doom here and we've

708
00:30:52,349 --> 00:31:04,230
got the voxel DIMM here like so and off

709
00:30:56,909 --> 00:31:06,629
we go so here we go so we can define

710
00:31:04,230 --> 00:31:10,798
that light Atlas now which is always a

711
00:31:06,628 --> 00:31:12,209
fun thing for everyone to do and we now

712
00:31:10,798 --> 00:31:14,099
just want to make sure that the texels

713
00:31:12,210 --> 00:31:16,798
point to something that's big enough to

714
00:31:14,099 --> 00:31:19,349
hold them and i believe they're f 32s

715
00:31:16,798 --> 00:31:22,378
right now as the pointer and off we go

716
00:31:19,349 --> 00:31:25,138
so that's a start so we've kind of

717
00:31:22,378 --> 00:31:27,178
barely sort of maybe a little bit worked

718
00:31:25,138 --> 00:31:28,979
towards that and again now I just want

719
00:31:27,179 --> 00:31:31,649
to run things and make sure that nothing

720
00:31:28,980 --> 00:31:33,329
obvious changed because I wanted this to

721
00:31:31,648 --> 00:31:35,579
run basically the exact same way that it

722
00:31:33,329 --> 00:31:37,378
was I don't want to see any differences

723
00:31:35,579 --> 00:31:40,199
here and and I don't really that looks

724
00:31:37,378 --> 00:31:43,319
like about the same to me as it was

725
00:31:40,200 --> 00:31:49,110
looking before more or less like no big

726
00:31:43,319 --> 00:31:52,259
change right okay so now what I might

727
00:31:49,109 --> 00:31:55,288
want to do is the line Atlas is itself

728
00:31:52,259 --> 00:31:57,450
like I may want that to be its own file

729
00:31:55,288 --> 00:31:59,460
like that just has a bunch of stuff in

730
00:31:57,450 --> 00:32:01,740
it for working with light atlases I'm

731
00:31:59,460 --> 00:32:03,590
not 100% certain I want to do that it's

732
00:32:01,740 --> 00:32:07,440
hard it's a hard decision at the moment

733
00:32:03,589 --> 00:32:08,759
but it may be something I want to do so

734
00:32:07,440 --> 00:32:10,919
I may want to start moving that stuff

735
00:32:08,759 --> 00:32:13,349
over so I think I'm going to create a

736
00:32:10,919 --> 00:32:19,080
file for this and I'm gonna use that

737
00:32:13,349 --> 00:32:22,769
file throughout so you know something

738
00:32:19,079 --> 00:32:28,288
like this so in hand-made code handmade

739
00:32:22,769 --> 00:32:30,240
light atlas mm-hmm and I'll make an H

740
00:32:28,288 --> 00:32:32,519
file here and I'm just gonna put the

741
00:32:30,240 --> 00:32:35,118
light Atlas over there and maybe I won't

742
00:32:32,519 --> 00:32:37,319
call it game light Atlas at that point

743
00:32:35,118 --> 00:32:41,939
because it's sort of like more of a

744
00:32:37,319 --> 00:32:43,558
mental type I don't know so I'm gonna

745
00:32:41,940 --> 00:32:45,028
put that in here and I'm gonna say

746
00:32:43,558 --> 00:32:49,319
alright there's a thing called the light

747
00:32:45,028 --> 00:32:51,869
Atlas like so and I'm gonna go ahead and

748
00:32:49,319 --> 00:32:54,710
say that everyone has to use that so if

749
00:32:51,869 --> 00:32:57,928
we look at where like this stuff gets

750
00:32:54,710 --> 00:33:04,100
included as well so if I do a search for

751
00:32:57,929 --> 00:33:04,100
like light Atlas open online at math

752
00:33:05,058 --> 00:33:12,359
page then when we look at where that's

753
00:33:08,819 --> 00:33:13,589
actually happening you can see that a

754
00:33:12,359 --> 00:33:16,079
bunch of different people kind of need

755
00:33:13,589 --> 00:33:17,668
access to that and that's fine so what

756
00:33:16,079 --> 00:33:18,898
we may do is just go ahead and say all

757
00:33:17,669 --> 00:33:21,538
right we're gonna put that into the

758
00:33:18,898 --> 00:33:23,668
various places that need it so you know

759
00:33:21,538 --> 00:33:31,888
we'd basically say like okay well what's

760
00:33:23,669 --> 00:33:35,100
in handmade shared also not much alright

761
00:33:31,888 --> 00:33:37,168
so inside like the various places that

762
00:33:35,099 --> 00:33:46,668
we might need this I'll go ahead and and

763
00:33:37,169 --> 00:33:46,669
put them in there so handmade H oops

764
00:33:52,769 --> 00:34:00,670
oops there we go

765
00:33:56,230 --> 00:34:09,668
and then we also need the open jail

766
00:34:00,670 --> 00:34:11,470
system so right here we'll need that and

767
00:34:09,668 --> 00:34:13,418
again I'm not really doing this for any

768
00:34:11,469 --> 00:34:16,418
reason other than my own personal

769
00:34:13,418 --> 00:34:20,619
organization this is not like any kind

770
00:34:16,418 --> 00:34:22,509
of a like you know it doesn't change

771
00:34:20,619 --> 00:34:24,190
like what code is produced it's not

772
00:34:22,510 --> 00:34:30,490
something that's like some kind of

773
00:34:24,190 --> 00:34:33,130
magical it's not any kind of like a

774
00:34:30,489 --> 00:34:34,989
magical thing that you know you must

775
00:34:33,130 --> 00:34:36,550
divide your files this way or anything

776
00:34:34,989 --> 00:34:37,750
like that people get very dogmatic about

777
00:34:36,550 --> 00:34:39,730
the sort of thing and that's usually

778
00:34:37,750 --> 00:34:41,289
wrong you just want to organize your

779
00:34:39,730 --> 00:34:43,300
files so that you can keep things

780
00:34:41,289 --> 00:34:45,340
together that you want to look at

781
00:34:43,300 --> 00:34:51,490
together and that's really most of what

782
00:34:45,340 --> 00:34:57,300
needs to happen right I think I put that

783
00:34:51,489 --> 00:35:00,579
in the wrong place that's what I wanted

784
00:34:57,300 --> 00:35:04,750
there so now I think everyone's got it

785
00:35:00,579 --> 00:35:07,299
who needs it and now I can go over to

786
00:35:04,750 --> 00:35:09,699
the light atlas side of things and I can

787
00:35:07,300 --> 00:35:14,980
start putting things in here that help

788
00:35:09,699 --> 00:35:17,349
and so when we're in the the renderer

789
00:35:14,980 --> 00:35:20,769
initializing it which was this what I'd

790
00:35:17,349 --> 00:35:22,869
like to do is maybe just make a thing

791
00:35:20,769 --> 00:35:27,309
that we use for initializing

792
00:35:22,869 --> 00:35:30,609
I don't actually know where we like how

793
00:35:27,309 --> 00:35:35,860
we how we do our memory policy stuff in

794
00:35:30,610 --> 00:35:38,110
here it's kind of a little bit wonky

795
00:35:35,860 --> 00:35:40,650
like the render at the moment doesn't

796
00:35:38,110 --> 00:35:43,630
really do a lot of allocation of that

797
00:35:40,650 --> 00:35:45,220
format it's not really something that

798
00:35:43,630 --> 00:35:49,269
happens very frequently in here so like

799
00:35:45,219 --> 00:35:53,500
who who allocates the opengl is is a

800
00:35:49,269 --> 00:35:57,070
little bit Squinkie right and I'm not

801
00:35:53,500 --> 00:36:01,380
really sure so you know in terms of how

802
00:35:57,070 --> 00:36:01,380
that gets done I believe it's in here

803
00:36:02,030 --> 00:36:06,810
so you can kind of see like all right

804
00:36:04,349 --> 00:36:09,539
when we get in here we do a win through

805
00:36:06,809 --> 00:36:11,610
to an end OpenGL and you can see that

806
00:36:09,539 --> 00:36:13,380
that code happens here and you can see

807
00:36:11,610 --> 00:36:16,559
that it's got like a win32 render

808
00:36:13,380 --> 00:36:19,769
alochol and the win32 render a lock call

809
00:36:16,559 --> 00:36:23,340
is like a special purpose thing that we

810
00:36:19,769 --> 00:36:26,150
use to allocate stuff not actually sure

811
00:36:23,340 --> 00:36:26,150
oops

812
00:36:30,320 --> 00:36:39,269
yeah you can kind of see you can kind of

813
00:36:36,480 --> 00:36:44,099
see it in here where just as a virtual

814
00:36:39,269 --> 00:36:46,259
lock directly so I don't really want to

815
00:36:44,099 --> 00:36:48,829
push memory allocation through the

816
00:36:46,260 --> 00:36:52,230
renderer in any particular way here and

817
00:36:48,829 --> 00:36:54,239
you know so I want this to be something

818
00:36:52,230 --> 00:36:56,519
that it can actually push down because

819
00:36:54,239 --> 00:36:58,619
it also might want to get memory that's

820
00:36:56,519 --> 00:37:01,559
specifically pinned for graphics card

821
00:36:58,619 --> 00:37:03,329
access or stuff like that right so it's

822
00:37:01,559 --> 00:37:04,920
pretty tricky to say so I think what I

823
00:37:03,329 --> 00:37:06,869
want to do here is say something like

824
00:37:04,920 --> 00:37:10,380
alright there's gonna be a call that's

825
00:37:06,869 --> 00:37:14,690
like in it light Atlas and in it light

826
00:37:10,380 --> 00:37:14,690
Atlas will just say like or you know

827
00:37:15,590 --> 00:37:20,789
like this and then you would basically

828
00:37:19,110 --> 00:37:22,590
just pass in the things that you

829
00:37:20,789 --> 00:37:25,009
actually wanted to use to initialize it

830
00:37:22,590 --> 00:37:25,010
right

831
00:37:33,650 --> 00:37:38,070
and what I'd like to do here is make it

832
00:37:36,269 --> 00:37:39,809
easy for people to use so actually I

833
00:37:38,070 --> 00:37:43,260
think I might take a void there and what

834
00:37:39,809 --> 00:37:46,529
I might say is like that maybe there's a

835
00:37:43,260 --> 00:37:48,350
pound of fine called like light atlas

836
00:37:46,530 --> 00:37:52,080
size or something like this or like

837
00:37:48,349 --> 00:37:54,929
compute light atlas size and that would

838
00:37:52,079 --> 00:37:57,179
take you know the parameters that were

839
00:37:54,929 --> 00:38:05,909
necessary to figure out what the light

840
00:37:57,179 --> 00:38:07,769
out the size actually was right so I

841
00:38:05,909 --> 00:38:10,679
would like something that the problem is

842
00:38:07,769 --> 00:38:14,489
right now you know I don't know I kind

843
00:38:10,679 --> 00:38:16,109
of want to have that allocation work a

844
00:38:14,489 --> 00:38:19,319
little bit differently like I would like

845
00:38:16,110 --> 00:38:21,630
it to allocate the space in some more

846
00:38:19,320 --> 00:38:23,340
sane way maybe even with a buffer with

847
00:38:21,630 --> 00:38:25,470
backing buffers or something like that

848
00:38:23,340 --> 00:38:29,460
so it's a little bit hard to say what

849
00:38:25,469 --> 00:38:31,139
should happen there so I think what we

850
00:38:29,460 --> 00:38:41,780
maybe want to do is something more like

851
00:38:31,139 --> 00:38:41,779
this maybe like this

852
00:38:46,099 --> 00:38:52,109
so people can kind of call these on the

853
00:38:49,530 --> 00:38:54,900
light atlas and sort of set things in

854
00:38:52,108 --> 00:38:56,190
waves I'm not sure how exactly like I

855
00:38:54,900 --> 00:38:57,900
said I want to do it but I want it

856
00:38:56,190 --> 00:39:02,369
somewhat clean because this is gonna

857
00:38:57,900 --> 00:39:04,289
very probably over time and we may want

858
00:39:02,369 --> 00:39:08,760
to put some additional stuff in here for

859
00:39:04,289 --> 00:39:10,170
tracking and who knows what right so

860
00:39:08,760 --> 00:39:12,300
we'll kind of see what happens there as

861
00:39:10,170 --> 00:39:14,250
we go the only thing that I'm not sure

862
00:39:12,300 --> 00:39:16,170
about is I would what I would ideally

863
00:39:14,250 --> 00:39:20,250
like is you make the light Atlas this

864
00:39:16,170 --> 00:39:25,260
way then you say like get light atlas

865
00:39:20,250 --> 00:39:26,880
sighs I'd like that to to be you know

866
00:39:25,260 --> 00:39:30,480
the way you figure out how much memory

867
00:39:26,880 --> 00:39:33,869
this thing takes and then you allocate

868
00:39:30,480 --> 00:39:37,619
that much right but the problem that I

869
00:39:33,869 --> 00:39:39,000
see here is that at least to maintain

870
00:39:37,619 --> 00:39:41,190
the current way we're doing it without a

871
00:39:39,000 --> 00:39:42,659
dynamic allocation it would have to be

872
00:39:41,190 --> 00:39:46,650
done at compile time and of course

873
00:39:42,659 --> 00:39:48,149
because C and C++ are not very good

874
00:39:46,650 --> 00:39:50,010
programming languages there's no way to

875
00:39:48,150 --> 00:39:52,440
actually just call something at compile

876
00:39:50,010 --> 00:39:54,839
time even if the types are known and the

877
00:39:52,440 --> 00:39:57,059
values are known if this was ji you

878
00:39:54,838 --> 00:40:03,329
would just do this but of course it's

879
00:39:57,059 --> 00:40:04,679
not so there you so anyway not being

880
00:40:03,329 --> 00:40:05,940
able to call it at compile time means we

881
00:40:04,679 --> 00:40:06,899
have to actually do some thinking here

882
00:40:05,940 --> 00:40:09,450
where we shouldn't have had to do any

883
00:40:06,900 --> 00:40:10,440
thinking and that just means you know we

884
00:40:09,449 --> 00:40:11,608
would have to pass the things

885
00:40:10,440 --> 00:40:13,588
individually like we'd like to pass a

886
00:40:11,608 --> 00:40:15,719
v3s but of course the preprocessor can't

887
00:40:13,588 --> 00:40:18,869
use a v3s so that's not really on the

888
00:40:15,719 --> 00:40:20,608
table and so I don't know maybe I want

889
00:40:18,869 --> 00:40:22,260
to go to dynamic allocation here maybe I

890
00:40:20,608 --> 00:40:24,659
don't I'm thinking about it and I'm not

891
00:40:22,260 --> 00:40:27,450
sure which one I want if you look at how

892
00:40:24,659 --> 00:40:28,980
this thing is actually allocated so if

893
00:40:27,449 --> 00:40:39,569
we actually go to the win32 and made up

894
00:40:28,980 --> 00:40:41,250
in jail let me look at the yeah so if i

895
00:40:39,570 --> 00:40:43,200
wants you in win32 and end up in jail i

896
00:40:41,250 --> 00:40:44,789
could just do it so maybe I'll just do

897
00:40:43,199 --> 00:40:45,960
that so I am gonna do this I'm gonna get

898
00:40:44,789 --> 00:40:49,469
rid of this and we'll just have the

899
00:40:45,960 --> 00:40:50,909
light Atlas stuff happen in here all

900
00:40:49,469 --> 00:40:52,049
right

901
00:40:50,909 --> 00:40:53,879
so the way we do that is not

902
00:40:52,050 --> 00:40:55,019
particularly complicated right I just

903
00:40:53,880 --> 00:40:56,460
wanted to be able to make sure I could

904
00:40:55,019 --> 00:40:57,900
do an actual Alec and the reason we do

905
00:40:56,460 --> 00:40:59,530
it here is because like I said I might

906
00:40:57,900 --> 00:41:01,480
want this to actually be in

907
00:40:59,530 --> 00:41:03,220
memory that's pinned for the graphics

908
00:41:01,480 --> 00:41:05,320
card to use so that the transfer can

909
00:41:03,219 --> 00:41:06,579
happen more efficiently I don't know how

910
00:41:05,320 --> 00:41:08,140
efficiently the transfer is happening

911
00:41:06,579 --> 00:41:09,579
right now but I suspect that the CPU is

912
00:41:08,139 --> 00:41:11,949
sitting around doing a bunch of copying

913
00:41:09,579 --> 00:41:13,269
for no reason and we may want to try and

914
00:41:11,949 --> 00:41:15,789
get rid of that in the future by using

915
00:41:13,269 --> 00:41:17,800
multiple buffers pinning the buffers and

916
00:41:15,789 --> 00:41:19,449
letting the Rassvet transfer one will be

917
00:41:17,800 --> 00:41:20,740
right into a different one that's just

918
00:41:19,449 --> 00:41:26,889
something you would often want to do for

919
00:41:20,739 --> 00:41:27,909
efficient GPU transfers and we want to

920
00:41:26,889 --> 00:41:30,190
be able to do that for multiple things

921
00:41:27,909 --> 00:41:32,849
so much like we have the vertex indexed

922
00:41:30,190 --> 00:41:34,900
array bitmap array all this stuff here

923
00:41:32,849 --> 00:41:36,880
much like we might want to double buff

924
00:41:34,900 --> 00:41:38,349
for a triple buffer those we might want

925
00:41:36,880 --> 00:41:39,970
to double buff for a triple buffer the

926
00:41:38,349 --> 00:41:41,650
light Atlas as well that's all so I'm

927
00:41:39,969 --> 00:41:43,989
basically saying so I want it to look

928
00:41:41,650 --> 00:41:47,670
like the same as that system and go

929
00:41:43,989 --> 00:41:51,519
through the same place as that system so

930
00:41:47,670 --> 00:41:53,380
hmm Jimmy so I'm gonna put that in here

931
00:41:51,519 --> 00:41:56,739
and I'm gonna get it out of here so

932
00:41:53,380 --> 00:41:59,440
we're not going to do it in the open

933
00:41:56,739 --> 00:42:02,289
drill in it we're gonna pull it out and

934
00:41:59,440 --> 00:42:06,190
put it in the actual platform side so

935
00:42:02,289 --> 00:42:07,900
this goes away like so and we come back

936
00:42:06,190 --> 00:42:08,829
here to where we're actually specifying

937
00:42:07,900 --> 00:42:11,950
the light atlas

938
00:42:08,829 --> 00:42:14,289
we're gonna make that happen in here now

939
00:42:11,949 --> 00:42:17,139
if we wanted to we could actually

940
00:42:14,289 --> 00:42:26,679
specify the light Atlas information at

941
00:42:17,139 --> 00:42:29,739
startup now so that memory could

942
00:42:26,679 --> 00:42:31,449
actually get pinned at startup and so

943
00:42:29,739 --> 00:42:34,769
you could actually change the voxel size

944
00:42:31,449 --> 00:42:37,149
you know with a runtime parameter right

945
00:42:34,769 --> 00:42:41,650
and so that's something that's also just

946
00:42:37,150 --> 00:42:44,260
kind of a nice side effect all right so

947
00:42:41,650 --> 00:42:45,880
if we set these here now what I could do

948
00:42:44,260 --> 00:42:49,890
is say all right I want to make a light

949
00:42:45,880 --> 00:42:51,970
Atlas which is this diffuse Atlas here I

950
00:42:49,889 --> 00:42:54,489
want to go ahead and use these

951
00:42:51,969 --> 00:42:59,139
parameters for it so you know the that's

952
00:42:54,489 --> 00:43:00,969
the the voxel Jim and that's the tile

953
00:42:59,139 --> 00:43:03,069
dim that's just going to create the

954
00:43:00,969 --> 00:43:06,039
light Atlas for me I'm then gonna say

955
00:43:03,070 --> 00:43:06,730
that I want to set the light Atlas

956
00:43:06,039 --> 00:43:12,059
texels

957
00:43:06,730 --> 00:43:12,059
to be whatever the size of the thing is

958
00:43:13,608 --> 00:43:24,210
like so so just give me the signs back

959
00:43:18,268 --> 00:43:28,429
I'll pass that to win32 render a lock so

960
00:43:24,210 --> 00:43:28,429
that will get me a buffer for my texels

961
00:43:29,059 --> 00:43:35,970
and then it will set it right like that

962
00:43:33,869 --> 00:43:38,608
so we're just gonna say look set the

963
00:43:35,969 --> 00:43:40,469
texels to be whatever whatever you tell

964
00:43:38,608 --> 00:43:43,588
me the size now should be that is what I

965
00:43:40,469 --> 00:43:49,108
will allocate and now I have a diffuse

966
00:43:43,588 --> 00:43:50,880
Atlas right alright so now you can see

967
00:43:49,108 --> 00:43:52,440
that we didn't really have any compiler

968
00:43:50,880 --> 00:43:53,700
so that was good but of course we have

969
00:43:52,440 --> 00:43:54,769
link errors because we haven't actually

970
00:43:53,699 --> 00:43:56,608
written any of these functions

971
00:43:54,768 --> 00:43:59,068
thankfully these functions are pretty

972
00:43:56,608 --> 00:44:01,828
simple right there's not a lot to it if

973
00:43:59,068 --> 00:44:04,679
we look at what these should be and I'll

974
00:44:01,829 --> 00:44:06,420
just go ahead and make these internal

975
00:44:04,679 --> 00:44:18,210
they don't need to be exported to

976
00:44:06,420 --> 00:44:20,670
anybody if I go through and just do the

977
00:44:18,210 --> 00:44:22,619
basics here make like that let's get

978
00:44:20,670 --> 00:44:23,579
light atlas size set light atlas texels

979
00:44:22,619 --> 00:44:25,680
i just need to do the basic

980
00:44:23,579 --> 00:44:29,068
implementation of these so here's the

981
00:44:25,679 --> 00:44:33,929
results the voxel dim just gets copied

982
00:44:29,068 --> 00:44:37,639
the tile dim just gets copied and that's

983
00:44:33,929 --> 00:44:40,739
the end of it the get light atlas size

984
00:44:37,639 --> 00:44:43,379
is again pretty straightforward it's

985
00:44:40,739 --> 00:44:45,209
just the light atlas in float is the

986
00:44:43,380 --> 00:44:47,548
thing that determines what's going on

987
00:44:45,210 --> 00:44:52,679
here I'm gonna make another function

988
00:44:47,548 --> 00:44:54,298
that I happen to want so in here I'm

989
00:44:52,679 --> 00:44:56,038
gonna move this up just as a more

990
00:44:54,298 --> 00:44:58,440
primary function and I'm gonna put

991
00:44:56,039 --> 00:45:00,900
another one in here which is get light

992
00:44:58,440 --> 00:45:03,838
Atlas and this can be au 32 because you

993
00:45:00,900 --> 00:45:08,039
know it's not that big get light a get

994
00:45:03,838 --> 00:45:10,920
light atlas textile size which is to say

995
00:45:08,039 --> 00:45:14,789
how big a particular Texel is just one

996
00:45:10,920 --> 00:45:16,259
texel inside the atlas and if we look at

997
00:45:14,789 --> 00:45:18,210
that function to write things in terms

998
00:45:16,259 --> 00:45:21,298
of that function for any particular

999
00:45:18,210 --> 00:45:25,190
textile atlas then we know that we can

1000
00:45:21,298 --> 00:45:27,570
just put this if in here

1001
00:45:25,190 --> 00:45:32,269
like so so we can say alright whatever

1002
00:45:27,570 --> 00:45:36,480
the light Atlas is in float we can just

1003
00:45:32,269 --> 00:45:38,340
say that the result is going to be one

1004
00:45:36,480 --> 00:45:41,760
of two things depending on whether that

1005
00:45:38,340 --> 00:45:45,600
said or not so if it's in float then we

1006
00:45:41,760 --> 00:45:48,720
know that the size of sorry that the

1007
00:45:45,599 --> 00:45:50,699
size of one of the texels is going to be

1008
00:45:48,719 --> 00:45:52,079
the size of a float times three

1009
00:45:50,699 --> 00:45:55,769
components the red the green and the

1010
00:45:52,079 --> 00:45:58,679
blue and then otherwise if it's not we

1011
00:45:55,769 --> 00:46:01,500
know that the size of the Atlas is going

1012
00:45:58,679 --> 00:46:04,230
to be just the size of one you 3 2

1013
00:46:01,500 --> 00:46:06,780
because the RGB and a would be packed in

1014
00:46:04,230 --> 00:46:10,309
there and the a channel look we don't

1015
00:46:06,780 --> 00:46:12,630
really know what we would put in there

1016
00:46:10,309 --> 00:46:18,269
but I don't know that we want these to

1017
00:46:12,630 --> 00:46:21,510
be RGB packed we could but it starts to

1018
00:46:18,269 --> 00:46:23,159
get a little squirrely right it becomes

1019
00:46:21,510 --> 00:46:25,710
harder to deal with if you don't have

1020
00:46:23,159 --> 00:46:27,179
your things packed for wide so I'm not

1021
00:46:25,710 --> 00:46:29,300
sure we would necessarily want to do

1022
00:46:27,179 --> 00:46:31,829
that but we might just to save the space

1023
00:46:29,300 --> 00:46:39,990
so it's really hard to say like we could

1024
00:46:31,829 --> 00:46:44,400
also do this and I don't know so excuse

1025
00:46:39,989 --> 00:46:46,919
me so for the moment I don't know that's

1026
00:46:44,400 --> 00:46:49,590
just where we're at we'll see so I'm

1027
00:46:46,920 --> 00:46:53,340
going to go ahead and say that the you

1028
00:46:49,590 --> 00:46:58,019
know result of get light atlas science

1029
00:46:53,340 --> 00:47:01,110
is just going to be the get light Atlas

1030
00:46:58,019 --> 00:47:02,759
texas-sized like so I'm going to ask how

1031
00:47:01,110 --> 00:47:04,320
big each Texel is and I'm going to

1032
00:47:02,760 --> 00:47:07,430
multiply it by the Texel count

1033
00:47:04,320 --> 00:47:07,430
what's the Texel count

1034
00:47:07,769 --> 00:47:17,969
well the Texel count is just going to be

1035
00:47:09,989 --> 00:47:23,189
the Atlas voxel dim x times atlas voxel

1036
00:47:17,969 --> 00:47:25,169
dim y times atlas box will dim Z and

1037
00:47:23,190 --> 00:47:27,389
actually I could just call that the tile

1038
00:47:25,170 --> 00:47:29,059
count right and then I could say well

1039
00:47:27,389 --> 00:47:33,730
what's the

1040
00:47:29,059 --> 00:47:39,108
texels per tile could also call this

1041
00:47:33,730 --> 00:47:44,719
tiles per voxel the Texas per tile is

1042
00:47:39,108 --> 00:47:50,230
the Vox oops tile dim x times atlas tile

1043
00:47:44,719 --> 00:47:52,699
dim Y right and I don't actually know

1044
00:47:50,230 --> 00:47:54,079
you can see we could have written area

1045
00:47:52,699 --> 00:47:56,960
functions for these which we may have

1046
00:47:54,079 --> 00:47:58,880
wanted to write because then you just

1047
00:47:56,960 --> 00:48:01,159
say get area on each of these which

1048
00:47:58,880 --> 00:48:02,720
makes more sense I'm not sure I'm gonna

1049
00:48:01,159 --> 00:48:04,129
go that route but you know you can see

1050
00:48:02,719 --> 00:48:07,669
why that might have been a better math

1051
00:48:04,130 --> 00:48:12,230
library decision if we were if one were

1052
00:48:07,670 --> 00:48:14,930
so inclined so we know the tiles per

1053
00:48:12,230 --> 00:48:16,699
voxel we know the texels per tile and so

1054
00:48:14,929 --> 00:48:18,348
if we want to we can then say well

1055
00:48:16,699 --> 00:48:21,409
whatever the Texas size is we just

1056
00:48:18,349 --> 00:48:23,809
multiply out tiles provoke soul and the

1057
00:48:21,409 --> 00:48:25,279
texels per tile in fact let me do this

1058
00:48:23,809 --> 00:48:29,539
in the other things we go kind of in

1059
00:48:25,280 --> 00:48:32,599
order of smallest to largest

1060
00:48:29,539 --> 00:48:35,150
so tiles per voxel times texels per tile

1061
00:48:32,599 --> 00:48:36,980
times the actual size of each Texel

1062
00:48:35,150 --> 00:48:39,440
gives us the total amount of size we

1063
00:48:36,980 --> 00:48:42,320
need for the clock for the Atlas storage

1064
00:48:39,440 --> 00:48:43,608
and then we're done in terms of setting

1065
00:48:42,320 --> 00:48:47,450
the memory now that's just going to be a

1066
00:48:43,608 --> 00:48:49,429
simple casting function and I don't know

1067
00:48:47,449 --> 00:48:51,799
that we want to do it this way forever

1068
00:48:49,429 --> 00:48:54,519
so it's it's going to depend eventually

1069
00:48:51,800 --> 00:48:57,800
but it's gonna look something like this

1070
00:48:54,519 --> 00:48:59,420
if we want to keep that I don't know

1071
00:48:57,800 --> 00:49:06,109
that we do I think this may want to

1072
00:48:59,420 --> 00:49:10,369
always be u8 no matter what in fact I

1073
00:49:06,108 --> 00:49:13,670
just know that it is I just want to be a

1074
00:49:10,369 --> 00:49:19,750
memory pointer so it's it's gonna be

1075
00:49:13,670 --> 00:49:22,400
that forever at least for now alright so

1076
00:49:19,750 --> 00:49:24,469
now we've got all of that working but

1077
00:49:22,400 --> 00:49:26,088
the problem is inside anyone who

1078
00:49:24,469 --> 00:49:27,739
actually works with this like in the

1079
00:49:26,088 --> 00:49:34,429
renderer and stuff we need to actually

1080
00:49:27,739 --> 00:49:36,229
pound include that that actual code

1081
00:49:34,429 --> 00:49:38,809
right you can see in here we're not

1082
00:49:36,230 --> 00:49:40,730
actually including it so in here we need

1083
00:49:38,809 --> 00:49:43,779
anything that we work with like a light

1084
00:49:40,730 --> 00:49:43,780
Atlas needs to occur

1085
00:49:43,820 --> 00:49:50,120
in here right this did not return the

1086
00:49:47,780 --> 00:49:52,820
results other than that I think we're

1087
00:49:50,119 --> 00:49:57,230
good I could also just make this happen

1088
00:49:52,820 --> 00:50:00,140
in here and off we go so I think we're

1089
00:49:57,230 --> 00:50:01,369
good now we should be working if we

1090
00:50:00,139 --> 00:50:04,129
didn't put any bugs in there put into

1091
00:50:01,369 --> 00:50:08,829
bugs bugs in there well it will crash

1092
00:50:04,130 --> 00:50:11,360
like it just did so that's bad um I

1093
00:50:08,829 --> 00:50:15,170
wonder what we screwed up probably

1094
00:50:11,360 --> 00:50:22,190
wouldn't be an allocation problem what

1095
00:50:15,170 --> 00:50:26,389
did we do wrong oh I know if we did

1096
00:50:22,190 --> 00:50:30,050
wrong we're not pointing to it hold on

1097
00:50:26,389 --> 00:50:35,589
one second so in here I need to get rid

1098
00:50:30,050 --> 00:50:38,360
of these right and just need to kind of

1099
00:50:35,590 --> 00:50:40,519
run through this real quick and anywhere

1100
00:50:38,360 --> 00:50:42,890
that we were using the light color data

1101
00:50:40,519 --> 00:50:47,630
before we need to use the diffused light

1102
00:50:42,889 --> 00:50:49,039
Atlas texels pointer right and one nice

1103
00:50:47,630 --> 00:50:51,740
thing about this is you can see that

1104
00:50:49,039 --> 00:50:53,570
this calculation here was actually the

1105
00:50:51,739 --> 00:50:58,159
calculation that we needed from before

1106
00:50:53,570 --> 00:51:00,019
so we actually want to use the the

1107
00:50:58,159 --> 00:51:02,750
information in here now you can see that

1108
00:51:00,019 --> 00:51:04,880
this actually because open gel is kind

1109
00:51:02,750 --> 00:51:07,760
of squirrelly and does submission in a

1110
00:51:04,880 --> 00:51:10,700
weird way for these we need to tell it

1111
00:51:07,760 --> 00:51:13,370
what the actual situation is here so we

1112
00:51:10,699 --> 00:51:17,629
need one more function right look in

1113
00:51:13,369 --> 00:51:20,480
here in addition to get light out with

1114
00:51:17,630 --> 00:51:24,890
size we need like get light Atlas Texel

1115
00:51:20,480 --> 00:51:28,579
count right and so we want to actually

1116
00:51:24,889 --> 00:51:31,309
have this interim copy like we did this

1117
00:51:28,579 --> 00:51:34,449
calculation we just don't ever expose it

1118
00:51:31,309 --> 00:51:40,070
so what we want to do is just expose it

1119
00:51:34,449 --> 00:51:42,679
so this right here where we do the tiles

1120
00:51:40,070 --> 00:51:45,800
per voxel times the texels per tile is

1121
00:51:42,679 --> 00:51:49,069
the total number of texels so what I

1122
00:51:45,800 --> 00:51:50,990
want to do there is just use that

1123
00:51:49,070 --> 00:51:53,240
instead so now people can get this if

1124
00:51:50,989 --> 00:51:55,669
they want to so I can in here just now

1125
00:51:53,239 --> 00:51:56,119
say all right get me the textile count

1126
00:51:55,670 --> 00:52:01,820
for the

1127
00:51:56,119 --> 00:52:03,440
thing right and that'll be good and then

1128
00:52:01,820 --> 00:52:05,180
when you look here you can see well

1129
00:52:03,440 --> 00:52:06,980
we've got some other parameters that

1130
00:52:05,179 --> 00:52:09,529
aren't necessarily the best parameters

1131
00:52:06,980 --> 00:52:12,019
in the world that we would like to know

1132
00:52:09,530 --> 00:52:13,370
what those should be as well right and I

1133
00:52:12,019 --> 00:52:14,420
don't know what we want to do with that

1134
00:52:13,369 --> 00:52:16,789
at the moment I think I'm gonna ignore

1135
00:52:14,420 --> 00:52:20,210
those and just say well we'll have to

1136
00:52:16,789 --> 00:52:24,079
like think about that a little bit more

1137
00:52:20,210 --> 00:52:26,539
in the future but what I could do is in

1138
00:52:24,079 --> 00:52:29,929
here we could actually have some kind of

1139
00:52:26,539 --> 00:52:33,050
a you know like a I don't know what I

1140
00:52:29,929 --> 00:52:37,789
want to call it like a decryption so we

1141
00:52:33,050 --> 00:52:39,740
could in here say like alright the light

1142
00:52:37,789 --> 00:52:44,329
Atlas here can also have a thing that's

1143
00:52:39,739 --> 00:52:45,619
like is float you know I don't know what

1144
00:52:44,329 --> 00:52:49,269
we want to do but I'm just gonna stub

1145
00:52:45,619 --> 00:52:49,269
that in for now

1146
00:52:52,719 --> 00:52:59,179
right and then I can also say like oh

1147
00:52:56,570 --> 00:53:01,700
all right well in that case I can just

1148
00:52:59,179 --> 00:53:08,059
do something more like I did before and

1149
00:53:01,699 --> 00:53:22,250
say like okay if is float Atlas then do

1150
00:53:08,059 --> 00:53:24,679
this else do this oops right so you know

1151
00:53:22,250 --> 00:53:27,980
I can produce two different versions of

1152
00:53:24,679 --> 00:53:32,000
this thing depending on which one I want

1153
00:53:27,980 --> 00:53:33,710
and and off we would go I can also do

1154
00:53:32,000 --> 00:53:38,360
this a slightly different way which is

1155
00:53:33,710 --> 00:53:45,619
set that to the component count and do

1156
00:53:38,360 --> 00:53:50,380
this and off we go so now we could say

1157
00:53:45,619 --> 00:53:53,389
like alright the is float is just a

1158
00:53:50,380 --> 00:53:53,690
predication and it returns like true or

1159
00:53:53,389 --> 00:53:55,190
false

1160
00:53:53,690 --> 00:53:58,400
in fact I guess I don't even need to do

1161
00:53:55,190 --> 00:54:01,150
that I could just do like return light

1162
00:53:58,400 --> 00:54:01,150
Atlas and float

1163
00:54:02,280 --> 00:54:17,290
or better yet right so now it's pretty

1164
00:54:14,650 --> 00:54:19,329
clear and I can say like look is this

1165
00:54:17,289 --> 00:54:21,070
light Atlas afloat and if it is it's

1166
00:54:19,329 --> 00:54:22,509
that otherwise it's going to be an

1167
00:54:21,070 --> 00:54:24,580
unsigned byte or something like that

1168
00:54:22,510 --> 00:54:26,890
right and so now we can actually make

1169
00:54:24,579 --> 00:54:30,250
this code path probably handle the thing

1170
00:54:26,889 --> 00:54:31,869
correctly that we were trying to do and

1171
00:54:30,250 --> 00:54:33,670
so this starts to look pretty nice

1172
00:54:31,869 --> 00:54:35,139
because now it's like oh all right now

1173
00:54:33,670 --> 00:54:37,570
we don't have all these constants

1174
00:54:35,139 --> 00:54:40,719
through now and along you know just

1175
00:54:37,570 --> 00:54:43,930
clogging up the works right and that

1176
00:54:40,719 --> 00:54:48,669
seems pretty good and I can also do like

1177
00:54:43,929 --> 00:54:53,169
a you know a get light axis get light

1178
00:54:48,670 --> 00:54:54,880
atlas texels here and I'm not sure again

1179
00:54:53,170 --> 00:54:56,710
what I'm really gonna be doing I don't

1180
00:54:54,880 --> 00:54:59,410
really know how we're gonna handle those

1181
00:54:56,710 --> 00:55:02,050
buffers so I'm just blinding them for

1182
00:54:59,409 --> 00:55:04,059
the minute and we'll pay attention to

1183
00:55:02,050 --> 00:55:06,970
that at some point if we care about the

1184
00:55:04,059 --> 00:55:10,480
performance of this so I think that's

1185
00:55:06,969 --> 00:55:20,709
mostly what we want I'm not sure let me

1186
00:55:10,480 --> 00:55:22,300
see here there's our set and the reason

1187
00:55:20,710 --> 00:55:24,070
I have this is the get is we may want

1188
00:55:22,300 --> 00:55:25,930
this to come back as a particular type

1189
00:55:24,070 --> 00:55:29,850
of pointer eventually I'm not sure we do

1190
00:55:25,929 --> 00:55:29,849
but we're just gonna see what happens

1191
00:55:29,969 --> 00:55:33,719
what am I missing here

1192
00:55:39,059 --> 00:55:46,259
Oh was that actually supposed to mmm

1193
00:55:44,039 --> 00:55:49,710
so that actually needs to be a width and

1194
00:55:46,260 --> 00:55:51,930
a height right so actually I all I need

1195
00:55:49,710 --> 00:55:54,050
more I need even more ways to query this

1196
00:55:51,929 --> 00:55:56,519
thing that will compute the right

1197
00:55:54,050 --> 00:55:58,530
dimensions for us right so I need

1198
00:55:56,519 --> 00:56:06,079
another one which is like get light

1199
00:55:58,530 --> 00:56:15,180
atlas width and get light atlas height

1200
00:56:06,079 --> 00:56:17,009
something like that right and think

1201
00:56:15,179 --> 00:56:20,099
about that so I need a little little bit

1202
00:56:17,010 --> 00:56:24,810
more complicated right so in here I need

1203
00:56:20,099 --> 00:56:28,319
to do the way you compute the width of

1204
00:56:24,809 --> 00:56:37,619
this thing is mmm getting rid of the Z

1205
00:56:28,320 --> 00:56:41,850
right so the light Atlas width is going

1206
00:56:37,619 --> 00:56:51,239
to be the voxel dim x times the voxel

1207
00:56:41,849 --> 00:56:59,880
dim Y times the tile dim X right and the

1208
00:56:51,239 --> 00:57:04,979
height is going to be the voxel dim Z

1209
00:56:59,880 --> 00:57:09,750
times the tiled my if I'm not mistaken

1210
00:57:04,980 --> 00:57:12,809
that is the way we laid out the Texel

1211
00:57:09,750 --> 00:57:15,690
and so this is actually not what you

1212
00:57:12,809 --> 00:57:17,730
want we don't need the text account

1213
00:57:15,690 --> 00:57:21,269
although I mean I suppose since we have

1214
00:57:17,730 --> 00:57:23,789
it we might as well leave it but you

1215
00:57:21,269 --> 00:57:27,509
know not actually necessary we could

1216
00:57:23,789 --> 00:57:29,429
also then say like oh all right like if

1217
00:57:27,510 --> 00:57:32,160
you want to know what the act was tax

1218
00:57:29,429 --> 00:57:35,639
account is we can actually put that in

1219
00:57:32,159 --> 00:57:39,839
terms of that right so we can actually

1220
00:57:35,639 --> 00:57:46,589
say well the tax account is the just the

1221
00:57:39,840 --> 00:57:49,720
width times the height so now that

1222
00:57:46,590 --> 00:57:53,410
computation can just happen

1223
00:57:49,719 --> 00:57:58,250
again all in terms of the same stuff

1224
00:57:53,409 --> 00:58:00,259
right that all seems relatively

1225
00:57:58,250 --> 00:58:03,309
straightforward and so this just has to

1226
00:58:00,260 --> 00:58:16,390
change so this has to be like width and

1227
00:58:03,309 --> 00:58:19,159
height so I think that's what we want

1228
00:58:16,389 --> 00:58:20,239
don't quote me on that and so there we

1229
00:58:19,159 --> 00:58:23,149
go

1230
00:58:20,239 --> 00:58:25,669
and now we have like a little like light

1231
00:58:23,150 --> 00:58:27,710
Atlas struct we can use that has some

1232
00:58:25,670 --> 00:58:30,740
nice Swiss Army knife properties to it

1233
00:58:27,710 --> 00:58:33,440
and we can start to play around with

1234
00:58:30,739 --> 00:58:36,979
that so that now we can have a second

1235
00:58:33,440 --> 00:58:39,800
one right which is kind of what we

1236
00:58:36,980 --> 00:58:42,079
wanted to do there so I'm gonna go ahead

1237
00:58:39,800 --> 00:58:44,720
and say that both of these should be in

1238
00:58:42,079 --> 00:58:46,509
the actual OpenGL system just in case we

1239
00:58:44,719 --> 00:58:49,189
want to start sending both of them down

1240
00:58:46,510 --> 00:58:51,290
so I'm gonna say that we have a specular

1241
00:58:49,190 --> 00:58:59,900
light Atlas and a diffuse light Atlas

1242
00:58:51,289 --> 00:59:03,500
that we're going to work with right and

1243
00:58:59,900 --> 00:59:06,619
again I really don't I don't know what

1244
00:59:03,500 --> 00:59:07,699
we're planning to do I don't know what

1245
00:59:06,619 --> 00:59:10,730
we're gonna do with these long-term

1246
00:59:07,699 --> 00:59:13,369
right I'm just not sure so it's fine

1247
00:59:10,730 --> 00:59:15,079
what I will do here is say we're gonna

1248
00:59:13,369 --> 00:59:17,179
have it if I'm gonna go ahead and make

1249
00:59:15,079 --> 00:59:21,019
these both get transmitted so there's a

1250
00:59:17,179 --> 00:59:25,549
diffuse light Atlas handle and a

1251
00:59:21,019 --> 00:59:27,559
specular light Atlas handle I'm gonna go

1252
00:59:25,550 --> 00:59:29,890
ahead and make that change as well cuz

1253
00:59:27,559 --> 00:59:29,889
why not

1254
00:59:37,259 --> 00:59:41,519
and then I'm gonna go through in here

1255
00:59:38,730 --> 00:59:45,719
and say alright we've got the diffusely

1256
00:59:41,518 --> 00:59:48,479
atlas handle and the specular light

1257
00:59:45,719 --> 00:59:52,078
Atlas handle these were both going to be

1258
00:59:48,480 --> 00:59:54,449
the same and eventually we kind of have

1259
00:59:52,079 --> 00:59:58,140
to fix this because like I said we want

1260
00:59:54,449 --> 01:00:02,028
these to not always be in float so we're

1261
00:59:58,139 --> 01:00:02,028
probably going to want to change that

1262
01:00:04,489 --> 01:00:10,258
and at this point I suppose in here we

1263
01:00:07,650 --> 01:00:12,660
actually have this value so I think we

1264
01:00:10,259 --> 01:00:14,548
could actually make this just do what we

1265
01:00:12,659 --> 01:00:18,210
want it to do right so we could do

1266
01:00:14,548 --> 01:00:20,159
something where we said okay this is the

1267
01:00:18,210 --> 01:00:24,240
width and height so we could just say

1268
01:00:20,159 --> 01:00:27,960
like get light Atlas with get light

1269
01:00:24,239 --> 01:00:31,758
Atlas height and not have these two

1270
01:00:27,960 --> 01:00:34,679
things hard-coded I think and so these

1271
01:00:31,759 --> 01:00:45,329
atlases in this case is just going to be

1272
01:00:34,679 --> 01:00:49,018
the OpenGL diffuse light Atlas and we

1273
01:00:45,329 --> 01:00:59,730
get rid of these similarly we can say is

1274
01:00:49,018 --> 01:01:03,449
float and make that an unsigned byte and

1275
01:00:59,730 --> 01:01:05,278
I don't actually know what this format

1276
01:01:03,449 --> 01:01:08,129
would be up here but I'm assuming we can

1277
01:01:05,278 --> 01:01:12,119
basically do the same thing for the most

1278
01:01:08,130 --> 01:01:17,690
part and just say like well alright I

1279
01:01:12,119 --> 01:01:22,559
guess it's going to be GL RGB like 8

1280
01:01:17,690 --> 01:01:24,950
right I think I don't know if we have

1281
01:01:22,559 --> 01:01:24,950
one of those

1282
01:01:26,639 --> 01:01:35,019
looks like we do um so anyway yeah I

1283
01:01:33,369 --> 01:01:37,900
don't really know but that's just my

1284
01:01:35,019 --> 01:01:39,190
assess my first thought about what that

1285
01:01:37,900 --> 01:01:43,420
should be let's take a look at the

1286
01:01:39,190 --> 01:01:53,710
errors here so OpenGL is not typed right

1287
01:01:43,420 --> 01:01:55,570
there which doesn't help all right so I

1288
01:01:53,710 --> 01:01:58,059
think that's mostly what we want there

1289
01:01:55,570 --> 01:02:01,119
let me go ahead and I kind of want to go

1290
01:01:58,059 --> 01:02:03,759
back to that though so let me let me

1291
01:02:01,119 --> 01:02:10,390
take a look at that what was that again

1292
01:02:03,760 --> 01:02:13,240
get light that was with so yeah so we

1293
01:02:10,389 --> 01:02:17,829
really don't want we want this to be the

1294
01:02:13,239 --> 01:02:19,659
same and the only difference here is

1295
01:02:17,829 --> 01:02:25,269
that diffuse and specular are gonna get

1296
01:02:19,659 --> 01:02:26,259
swapped for now that could change we may

1297
01:02:25,269 --> 01:02:29,800
want them to be different in the future

1298
01:02:26,260 --> 01:02:33,340
I'm not sure but alright so off we go

1299
01:02:29,800 --> 01:02:34,780
and the light color atlas handle

1300
01:02:33,340 --> 01:02:36,510
obviously doesn't exist anymore so this

1301
01:02:34,780 --> 01:02:45,640
is just going to be the like diffuse

1302
01:02:36,510 --> 01:02:49,000
light atlas handle and specular light

1303
01:02:45,639 --> 01:02:51,599
atlas handle these are both the same as

1304
01:02:49,000 --> 01:02:51,599
they should be

1305
01:02:54,650 --> 01:03:10,639
this is the submission for it and we're

1306
01:03:08,610 --> 01:03:14,070
not submitting the specular right now

1307
01:03:10,639 --> 01:03:26,940
but we probably should so you know maybe

1308
01:03:14,070 --> 01:03:34,950
we'll just do this for now and we'll see

1309
01:03:26,940 --> 01:03:38,010
what happens and this is just drawing

1310
01:03:34,949 --> 01:03:48,839
two of them this is just the debug

1311
01:03:38,010 --> 01:03:50,640
drawing so now we have both of those the

1312
01:03:48,840 --> 01:03:53,789
specular light Atlas and the diffuse

1313
01:03:50,639 --> 01:03:55,980
light at lists are kind of both there it

1314
01:03:53,789 --> 01:03:57,360
looks like we've got a bug here I'm

1315
01:03:55,980 --> 01:04:04,769
going to look at what that message is

1316
01:03:57,360 --> 01:04:12,510
just so we can see oops invalid texture

1317
01:04:04,769 --> 01:04:18,050
format so we may be returning something

1318
01:04:12,510 --> 01:04:23,910
but oh yeah so we didn't initialize our

1319
01:04:18,050 --> 01:04:27,930
other Atlas so that makes sense in the

1320
01:04:23,909 --> 01:04:30,869
win32 OpenGL layer when we're actually

1321
01:04:27,929 --> 01:04:35,279
doing our render Alex here we would need

1322
01:04:30,869 --> 01:04:37,289
to produce something for our diffuse

1323
01:04:35,280 --> 01:04:39,269
light at lists and I'm going to go ahead

1324
01:04:37,289 --> 01:04:40,860
and say that we probably want it to be

1325
01:04:39,269 --> 01:04:43,019
basically the same so like we're just

1326
01:04:40,860 --> 01:04:46,860
gonna say like the light at Atlas voxel

1327
01:04:43,019 --> 01:04:49,880
dim and the light atlas tile dim are

1328
01:04:46,860 --> 01:04:49,880
gonna be the same here

1329
01:04:53,690 --> 01:05:02,519
so I'm going to say light Atlas Fox

1330
01:04:56,940 --> 01:05:04,230
lignum and light Atlas tyldum and then

1331
01:05:02,519 --> 01:05:18,119
I'm just going to do exactly the same

1332
01:05:04,230 --> 01:05:19,530
thing for both of these for now so now

1333
01:05:18,119 --> 01:05:27,210
we've initialized both of them and they

1334
01:05:19,530 --> 01:05:30,110
both should work hopefully all right so

1335
01:05:27,210 --> 01:05:32,909
now we have the two atlases here and

1336
01:05:30,110 --> 01:05:34,559
like I said at the moment we aren't

1337
01:05:32,909 --> 01:05:36,779
actually using the specular Atlas like

1338
01:05:34,559 --> 01:05:39,539
nobody's actually sampling it for

1339
01:05:36,780 --> 01:05:42,570
starters but no one's filling it in

1340
01:05:39,539 --> 01:05:44,460
either so even the debug pass just shows

1341
01:05:42,570 --> 01:05:47,430
black because no one's written anything

1342
01:05:44,460 --> 01:05:52,920
to that like no one's written anything

1343
01:05:47,429 --> 01:05:54,989
to it anyway so that's fine and then

1344
01:05:52,920 --> 01:05:57,210
what we can do is now we can sort of

1345
01:05:54,989 --> 01:05:59,579
pong back over to the lighting code

1346
01:05:57,210 --> 01:06:02,039
itself and we can start to use these

1347
01:05:59,579 --> 01:06:06,480
atlases more directly so that hopefully

1348
01:06:02,039 --> 01:06:09,599
we can start sample from the the actual

1349
01:06:06,480 --> 01:06:12,480
Atlas and not the voxel anymore so we'd

1350
01:06:09,599 --> 01:06:18,389
like to basically use the same like we

1351
01:06:12,480 --> 01:06:20,070
want to use the exact same stuff and

1352
01:06:18,389 --> 01:06:21,690
again the way that we would do this is

1353
01:06:20,070 --> 01:06:23,130
we basically say all right the specular

1354
01:06:21,690 --> 01:06:25,500
light Atlas is the thing that we're

1355
01:06:23,130 --> 01:06:28,740
actually updating because the thing we

1356
01:06:25,500 --> 01:06:30,030
can actually write into and the diffused

1357
01:06:28,739 --> 01:06:32,689
light Atlas is the thing we're sampling

1358
01:06:30,030 --> 01:06:35,190
from so the main change we want to make

1359
01:06:32,690 --> 01:06:40,409
the specular light Atlas that we write

1360
01:06:35,190 --> 01:06:41,730
into is the is the part that's currently

1361
01:06:40,409 --> 01:06:46,049
it's the part that's being currently

1362
01:06:41,730 --> 01:06:48,929
played by the by the actual um voxel and

1363
01:06:46,050 --> 01:06:52,110
that's the part that we want to fix so

1364
01:06:48,929 --> 01:06:56,789
I'm gonna take some smaller steps now

1365
01:06:52,110 --> 01:06:59,820
and say okay let's remove some of the

1366
01:06:56,789 --> 01:07:02,820
constants again being very trepidatious

1367
01:06:59,820 --> 01:07:05,630
here because I don't really want am I

1368
01:07:02,820 --> 01:07:05,630
being trepidatious

1369
01:07:08,619 --> 01:07:22,309
it spelled it wrong hey maybe maybe

1370
01:07:20,119 --> 01:07:23,088
that's wrong maybe we'll just say being

1371
01:07:22,309 --> 01:07:24,859
cautious

1372
01:07:23,088 --> 01:07:28,279
then trepidatious might be the wrong

1373
01:07:24,858 --> 01:07:29,690
word I want to minimize the amount of

1374
01:07:28,280 --> 01:07:31,369
debugging work that we have to do

1375
01:07:29,690 --> 01:07:33,440
because this is a very complicated

1376
01:07:31,369 --> 01:07:35,838
system and what we're basically doing is

1377
01:07:33,440 --> 01:07:39,019
we're sort of cleaning up code now that

1378
01:07:35,838 --> 01:07:40,789
we see how it's supposed to work and in

1379
01:07:39,019 --> 01:07:42,920
that process I don't want to introduce a

1380
01:07:40,789 --> 01:07:44,659
lot of errors if I can avoid it so

1381
01:07:42,920 --> 01:07:47,329
that's why I'm trying to go slowly and

1382
01:07:44,659 --> 01:07:49,159
do it step by step so in order to do

1383
01:07:47,329 --> 01:07:51,710
that I can start to remove things now

1384
01:07:49,159 --> 01:07:54,019
for example light data with does that

1385
01:07:51,710 --> 01:07:56,440
even get used anymore where is that

1386
01:07:54,019 --> 01:07:56,440
getting used

1387
01:07:58,539 --> 01:08:06,588
what are these used all right hold on a

1388
01:08:04,909 --> 01:08:09,588
second we're gonna take this one step at

1389
01:08:06,588 --> 01:08:11,029
a time like shouldnt max light box count

1390
01:08:09,588 --> 01:08:13,519
be the thing that's in there for the

1391
01:08:11,030 --> 01:08:17,000
light data width I don't know are these

1392
01:08:13,519 --> 01:08:18,588
used are they just used for building the

1393
01:08:17,000 --> 01:08:20,869
tree yeah

1394
01:08:18,588 --> 01:08:22,369
all right so I want to say light data

1395
01:08:20,869 --> 01:08:24,469
with should not be used for that and

1396
01:08:22,369 --> 01:08:32,329
it's actually that box count thing this

1397
01:08:24,469 --> 01:08:34,689
thing for now anyway this is at least a

1398
01:08:32,329 --> 01:08:34,689
better name

1399
01:08:45,050 --> 01:08:51,260
all right this stuff we don't need

1400
01:08:49,020 --> 01:08:51,260
anymore

1401
01:08:56,359 --> 01:09:05,429
this stuff is again sort of redundant

1402
01:09:00,680 --> 01:09:07,050
and the light probes are gone so we

1403
01:09:05,430 --> 01:09:10,409
actually can get rid of light probes

1404
01:09:07,050 --> 01:09:12,300
entirely now and should but I probably

1405
01:09:10,409 --> 01:09:15,210
shouldn't do that until we're absolutely

1406
01:09:12,300 --> 01:09:18,090
positive we don't need them there's like

1407
01:09:15,210 --> 01:09:20,550
an entire system that we made to track

1408
01:09:18,090 --> 01:09:22,520
light probes so we could try them out we

1409
01:09:20,550 --> 01:09:25,590
just don't need them anymore so like

1410
01:09:22,520 --> 01:09:28,130
this nonsense here we can just remove

1411
01:09:25,590 --> 01:09:31,199
and this was a ton of garbage so

1412
01:09:28,130 --> 01:09:33,420
assuming I can get this again this is

1413
01:09:31,199 --> 01:09:37,260
one of the reasons so like this you know

1414
01:09:33,420 --> 01:09:40,260
the remove indices nonsense like this

1415
01:09:37,260 --> 01:09:43,409
crap one of the really important things

1416
01:09:40,260 --> 01:09:45,180
that I've been trying to do throughout

1417
01:09:43,409 --> 01:09:49,039
this whole process the back of my head

1418
01:09:45,180 --> 01:09:51,390
was if we can avoid using light probe

1419
01:09:49,039 --> 01:09:53,819
locations as an actual first-class

1420
01:09:51,390 --> 01:09:56,400
citizen I totally wanted to do it and

1421
01:09:53,819 --> 01:09:58,889
the reason for that is that I don't want

1422
01:09:56,399 --> 01:10:01,439
to have to track them over time and so

1423
01:09:58,890 --> 01:10:04,140
we already I think have guaranteed that

1424
01:10:01,439 --> 01:10:07,500
that won't have to occur so at the very

1425
01:10:04,140 --> 01:10:09,990
least I can get rid of the indexes which

1426
01:10:07,500 --> 01:10:12,479
is really good like I really want this

1427
01:10:09,989 --> 01:10:16,769
light this tracking to go away we don't

1428
01:10:12,479 --> 01:10:18,329
want it so that's really good because it

1429
01:10:16,770 --> 01:10:21,750
saves us a bunch of time and other code

1430
01:10:18,329 --> 01:10:23,489
right so I'm hoping that's the case and

1431
01:10:21,750 --> 01:10:24,960
it seems overwhelming of the case the

1432
01:10:23,489 --> 01:10:26,639
other thing is can we get rid of the

1433
01:10:24,960 --> 01:10:28,380
light present entirely because they're

1434
01:10:26,640 --> 01:10:30,660
just taking up their clogging up our

1435
01:10:28,380 --> 01:10:31,859
entity stream for no reason they're just

1436
01:10:30,659 --> 01:10:34,079
extra processing we have to do every

1437
01:10:31,859 --> 01:10:36,599
frame for no reason and so that would

1438
01:10:34,079 --> 01:10:38,010
also be a win and I think we're gonna be

1439
01:10:36,600 --> 01:10:39,840
able get that too because right now

1440
01:10:38,010 --> 01:10:41,850
we're not using them we're just using

1441
01:10:39,840 --> 01:10:47,840
voxel centers and it seems to be working

1442
01:10:41,850 --> 01:10:47,840
ok so we'll see

1443
01:10:49,350 --> 01:10:59,800
all right moving on um let's see what

1444
01:10:56,229 --> 01:11:12,669
we've got here so what is max light

1445
01:10:59,800 --> 01:11:13,600
depth who uses this in Y all right so

1446
01:11:12,670 --> 01:11:15,250
that was only when we were tracking

1447
01:11:13,600 --> 01:11:28,030
depths we're not gonna do that right now

1448
01:11:15,250 --> 01:11:29,289
so we can get rid of that so these are

1449
01:11:28,029 --> 01:11:31,059
now the parameters that we're actually

1450
01:11:29,289 --> 01:11:33,579
starting to look at and these are set

1451
01:11:31,060 --> 01:11:36,730
inside the tile stuff so the light

1452
01:11:33,579 --> 01:11:39,510
lookup voxel dim and the look the the

1453
01:11:36,729 --> 01:11:50,738
squared dim that sort of stuff

1454
01:11:39,510 --> 01:11:55,329
yeah it looks like it looks like all of

1455
01:11:50,738 --> 01:11:59,789
this stuff is now kind of in the right

1456
01:11:55,329 --> 01:11:59,789
zone this is what we're looking at right

1457
01:12:04,439 --> 01:12:11,049
all right so some of this stuff we can

1458
01:12:07,960 --> 01:12:13,300
probably this stuff I think we need to

1459
01:12:11,050 --> 01:12:14,980
keep around in the sense that we do need

1460
01:12:13,300 --> 01:12:17,770
to make buffers that store like our

1461
01:12:14,979 --> 01:12:19,269
clutter stuff but I'm not sure how we

1462
01:12:17,770 --> 01:12:21,580
want to do that in the future we may

1463
01:12:19,270 --> 01:12:25,360
just push them on to the push buffer and

1464
01:12:21,579 --> 01:12:27,399
not care about it and link them up that

1465
01:12:25,359 --> 01:12:29,559
way I'm not sure still have to see about

1466
01:12:27,399 --> 01:12:31,210
that part it's not super important at

1467
01:12:29,560 --> 01:12:32,530
the moment when we actually look at some

1468
01:12:31,210 --> 01:12:34,359
of this stuff now we can start to move

1469
01:12:32,529 --> 01:12:36,550
this away the other thing I would

1470
01:12:34,359 --> 01:12:38,139
mention is like this light floor value I

1471
01:12:36,550 --> 01:12:39,940
feel like while I'm in here and looking

1472
01:12:38,139 --> 01:12:43,179
at this code I don't think we're

1473
01:12:39,939 --> 01:12:47,710
actually using that and we should be so

1474
01:12:43,179 --> 01:12:50,260
in the Z bias program we use a light

1475
01:12:47,710 --> 01:12:52,118
floor now and in fact you can see that

1476
01:12:50,260 --> 01:12:56,679
it's getting the light floor value is

1477
01:12:52,118 --> 01:13:00,158
actually in there right so I think in

1478
01:12:56,679 --> 01:13:00,819
the light floor value code we should be

1479
01:13:00,158 --> 01:13:02,888
using it

1480
01:13:00,819 --> 01:13:04,988
not so the place that that would be

1481
01:13:02,889 --> 01:13:07,960
getting used right is inside sample

1482
01:13:04,988 --> 01:13:11,948
lighting you can see in here we produce

1483
01:13:07,960 --> 01:13:14,590
the light result and here's the sum you

1484
01:13:11,948 --> 01:13:16,859
can see here we do a minus and we've got

1485
01:13:14,590 --> 01:13:18,880
the point two point two point two right

1486
01:13:16,859 --> 01:13:20,319
so I think what we want to do is

1487
01:13:18,880 --> 01:13:27,489
actually make that be something that

1488
01:13:20,319 --> 01:13:29,229
gets passed down and that way people can

1489
01:13:27,488 --> 01:13:30,609
reason about it everywhere and it's not

1490
01:13:29,229 --> 01:13:36,578
a magic constant that's sitting inside

1491
01:13:30,609 --> 01:13:37,719
the shader which is not great so again

1492
01:13:36,578 --> 01:13:39,549
hopefully that doesn't affect things at

1493
01:13:37,719 --> 01:13:45,460
all should look the same as it did

1494
01:13:39,550 --> 01:13:48,130
before but again just want check all

1495
01:13:45,460 --> 01:13:50,500
right so now let's start to peel these

1496
01:13:48,130 --> 01:13:51,639
away so if we look at these we don't

1497
01:13:50,500 --> 01:13:53,050
need the depth phone anymore we just

1498
01:13:51,639 --> 01:13:55,389
need the color one and I'm gonna go

1499
01:13:53,050 --> 01:13:57,010
ahead and now try to try to put that

1500
01:13:55,389 --> 01:14:00,340
into the OpenGL layer where this thing

1501
01:13:57,010 --> 01:14:02,139
is initialized so in here I'm just gonna

1502
01:14:00,340 --> 01:14:08,679
define this like literally we're just

1503
01:14:02,139 --> 01:14:12,270
gonna do this where I make it a u3 to

1504
01:14:08,679 --> 01:14:14,190
local and then use it right here right

1505
01:14:12,270 --> 01:14:16,510
so we're gonna try that and then

1506
01:14:14,189 --> 01:14:18,428
everywhere that's being it's being used

1507
01:14:16,510 --> 01:14:21,130
you can see all this usage of it right

1508
01:14:18,429 --> 01:14:23,199
we're gonna try to make those things now

1509
01:14:21,130 --> 01:14:25,960
work with the light atlas directly

1510
01:14:23,198 --> 01:14:31,868
rather than using the magic constant so

1511
01:14:25,960 --> 01:14:34,029
in here we have this depth lookup

1512
01:14:31,868 --> 01:14:36,339
squared dim and the light color lookup

1513
01:14:34,029 --> 01:14:38,349
squared M so these two values are not

1514
01:14:36,340 --> 01:14:41,828
really what we want anymore

1515
01:14:38,349 --> 01:14:51,810
we want something more like you know

1516
01:14:41,828 --> 01:14:51,809
diffuse light square and specular

1517
01:14:54,409 --> 01:15:05,119
something like that right so we want the

1518
01:15:01,439 --> 01:15:08,009
diffuse and specular tile sizes to be

1519
01:15:05,119 --> 01:15:18,000
placed in here and so those are gonna

1520
01:15:08,010 --> 01:15:23,760
come from you know the diffuse Atlas and

1521
01:15:18,000 --> 01:15:26,670
the specular Atlas and what we need to

1522
01:15:23,760 --> 01:15:28,380
do here is at the moment we have to

1523
01:15:26,670 --> 01:15:31,590
assume they're square because we don't

1524
01:15:28,380 --> 01:15:33,150
actually allow anything else right so at

1525
01:15:31,590 --> 01:15:38,430
the moment we're just gonna say alright

1526
01:15:33,149 --> 01:15:39,779
the tile dim X tile dim Y like so and if

1527
01:15:38,430 --> 01:15:42,480
I did that I'm a little bit worried

1528
01:15:39,779 --> 01:15:44,929
that's a bit landmine II so if we then

1529
01:15:42,479 --> 01:15:48,239
change two rectangles we'd be in trouble

1530
01:15:44,930 --> 01:15:51,329
so what I'd like to do there is maybe

1531
01:15:48,239 --> 01:16:02,960
say like okay let's well you know what I

1532
01:15:51,329 --> 01:16:02,960
could just start supporting it maybe I

1533
01:16:06,890 --> 01:16:10,079
was gonna be something else so I'm like

1534
01:16:08,699 --> 01:16:14,760
why not just support it so we'll pass it

1535
01:16:10,079 --> 01:16:17,550
down and now it's got it right so now if

1536
01:16:14,760 --> 01:16:19,560
I look at the actual code that's using

1537
01:16:17,550 --> 01:16:21,630
that we're we're it's in the octahedral

1538
01:16:19,560 --> 01:16:23,910
sample so you sampler so you can see it

1539
01:16:21,630 --> 01:16:28,380
here you can see the light lookup square

1540
01:16:23,909 --> 01:16:33,119
dim light lookup voxel damn right square

1541
01:16:28,380 --> 01:16:36,690
dim so what I want to do is when we're

1542
01:16:33,119 --> 01:16:39,269
doing the dim C and the dim D we kind of

1543
01:16:36,689 --> 01:16:40,649
need those to be changed here so we need

1544
01:16:39,270 --> 01:16:43,620
one for the diffuse and one for the

1545
01:16:40,649 --> 01:16:45,299
specular and what I could do is start

1546
01:16:43,619 --> 01:16:46,619
saying look maybe diffuse and specular

1547
01:16:45,300 --> 01:16:48,510
always have to be sampled on the same

1548
01:16:46,619 --> 01:16:50,609
resolution I don't know

1549
01:16:48,510 --> 01:16:52,350
the reason I'm apprehensive about that

1550
01:16:50,609 --> 01:16:54,149
and so you know you can see why that's

1551
01:16:52,350 --> 01:16:55,230
good because a that would reduce the

1552
01:16:54,149 --> 01:16:57,750
number of computations that you have to

1553
01:16:55,229 --> 01:16:58,739
do here but the reason I'm a little

1554
01:16:57,750 --> 01:17:01,020
apprehensive about that is if you think

1555
01:16:58,739 --> 01:17:02,939
about what you want specular Maps

1556
01:17:01,020 --> 01:17:05,340
probably want to be higher resolution

1557
01:17:02,939 --> 01:17:07,229
than diffuse maps so if we really wanted

1558
01:17:05,340 --> 01:17:08,760
to pursue this a little bit further we

1559
01:17:07,229 --> 01:17:11,250
probably would want to be able to do a

1560
01:17:08,760 --> 01:17:13,800
bigger specular map than the diffuse map

1561
01:17:11,250 --> 01:17:15,689
because the specular map is supposed to

1562
01:17:13,800 --> 01:17:17,460
show you some kind of glossy reflection

1563
01:17:15,689 --> 01:17:19,589
whereas the few snaps just a general

1564
01:17:17,460 --> 01:17:20,699
incoming light and so there's a big

1565
01:17:19,590 --> 01:17:22,140
difference between those two things and

1566
01:17:20,699 --> 01:17:23,550
we may not want them to be the same

1567
01:17:22,140 --> 01:17:25,940
dimensions right we may be able to

1568
01:17:23,550 --> 01:17:30,150
reduce the dimension our diffuse map

1569
01:17:25,939 --> 01:17:31,439
relative to our specular map so looking

1570
01:17:30,149 --> 01:17:33,779
through here where we look at you know

1571
01:17:31,439 --> 01:17:35,729
what we have to work with you can see

1572
01:17:33,779 --> 01:17:37,949
here these are not dependent on it so

1573
01:17:35,729 --> 01:17:40,738
the exterior UV dims and stuff that's

1574
01:17:37,949 --> 01:17:42,599
not important so really we're just

1575
01:17:40,738 --> 01:17:44,549
looking at at these computations here

1576
01:17:42,600 --> 01:17:46,260
moving down you can see that it doesn't

1577
01:17:44,550 --> 01:17:47,550
get use anywhere else either so we're

1578
01:17:46,260 --> 01:17:51,000
really just talking about two basic

1579
01:17:47,550 --> 01:17:53,489
things and the samples are going to be

1580
01:17:51,000 --> 01:17:55,020
based on those so you can see here that

1581
01:17:53,488 --> 01:17:57,269
none of this cares about it either

1582
01:17:55,020 --> 01:18:00,210
so we're really just talking about the

1583
01:17:57,270 --> 01:18:02,220
interior dims and that's what we have to

1584
01:18:00,210 --> 01:18:11,880
work with so I'm gonna make this one the

1585
01:18:02,220 --> 01:18:18,210
diffuse and this one the specular like

1586
01:18:11,880 --> 01:18:21,210
so and then I want to use those

1587
01:18:18,210 --> 01:18:25,350
separately to produce the samples so the

1588
01:18:21,210 --> 01:18:27,659
diffuse and specular and then when we

1589
01:18:25,350 --> 01:18:30,570
come through here we have different ways

1590
01:18:27,659 --> 01:18:33,720
of sampling these this one was the

1591
01:18:30,569 --> 01:18:35,609
blurred version and I'm not sure if you

1592
01:18:33,720 --> 01:18:39,810
look at what's happening you can see the

1593
01:18:35,609 --> 01:18:42,809
the light color sample and how it's

1594
01:18:39,810 --> 01:18:46,130
being blurred again I'm not sure how we

1595
01:18:42,810 --> 01:18:46,130
want to do this one way or the other

1596
01:18:48,829 --> 01:18:51,829
hmm

1597
01:18:58,038 --> 01:19:01,590
so there's a lot of different ways we

1598
01:19:00,328 --> 01:19:03,929
could do this and I'm not sure which way

1599
01:19:01,590 --> 01:19:06,809
we want to do it if you look at the path

1600
01:19:03,929 --> 01:19:08,219
here this is the simpler path and I

1601
01:19:06,809 --> 01:19:10,050
think what we probably would want to do

1602
01:19:08,219 --> 01:19:12,748
if anything is move this to a function

1603
01:19:10,050 --> 01:19:14,219
so I think what I probably want to do is

1604
01:19:12,748 --> 01:19:15,510
move that to a function I just don't

1605
01:19:14,219 --> 01:19:16,948
want to do that quite yet because we're

1606
01:19:15,510 --> 01:19:19,050
trying to do this in a in a more

1607
01:19:16,948 --> 01:19:22,710
organized fashion so the first thing I'm

1608
01:19:19,050 --> 01:19:24,150
going to do is I'm going to use these

1609
01:19:22,710 --> 01:19:25,800
and I'm just gonna throw the specular

1610
01:19:24,149 --> 01:19:30,768
away but I want to compute it anyway

1611
01:19:25,800 --> 01:19:33,210
so that's why that's still there like so

1612
01:19:30,769 --> 01:19:35,369
and then the rest of this stuff can

1613
01:19:33,210 --> 01:19:37,288
happen as it was happening before so

1614
01:19:35,368 --> 01:19:40,799
sample diffuse and sample specular here

1615
01:19:37,288 --> 01:19:42,658
I'm gonna go ahead and try and make

1616
01:19:40,800 --> 01:19:44,760
those work properly so you can see the

1617
01:19:42,658 --> 01:19:46,948
sample CUV gets multiplied through it's

1618
01:19:44,760 --> 01:19:49,550
gonna be sampled diffuse UV and then

1619
01:19:46,948 --> 01:19:49,549
it's gonna do its thing

1620
01:19:49,828 --> 01:19:57,630
same would be for here and then for the

1621
01:19:54,359 --> 01:19:59,819
texture results here we would sample the

1622
01:19:57,630 --> 01:20:04,618
other texture right like for the

1623
01:19:59,819 --> 01:20:05,908
specular amount and again like we're

1624
01:20:04,618 --> 01:20:07,828
just not going to do that right now

1625
01:20:05,908 --> 01:20:11,998
so that's gonna be like we're just gonna

1626
01:20:07,828 --> 01:20:14,488
delete that right so the result a is not

1627
01:20:11,998 --> 01:20:19,920
a thing it's just gonna be like zero or

1628
01:20:14,488 --> 01:20:21,178
whatever alright so if we then come

1629
01:20:19,920 --> 01:20:23,670
through and say all right we need to

1630
01:20:21,179 --> 01:20:25,739
actually make these compute the correct

1631
01:20:23,670 --> 01:20:27,989
thing we know that this now

1632
01:20:25,738 --> 01:20:30,419
is these two things were defined

1633
01:20:27,988 --> 01:20:31,558
differently for specular and diffuse so

1634
01:20:30,420 --> 01:20:34,019
look up in here we've got diffuse two of

1635
01:20:31,559 --> 01:20:35,130
them and specular tile dim so the first

1636
01:20:34,019 --> 01:20:42,590
one's going to be diffused tile damn

1637
01:20:35,130 --> 01:20:42,590
everywhere like so

1638
01:20:54,010 --> 01:21:04,170
oh there we go

1639
01:21:05,738 --> 01:21:09,729
and what you can see here is this is a

1640
01:21:07,359 --> 01:21:11,920
little bit off just if you look at

1641
01:21:09,729 --> 01:21:18,488
what's happening so it's taking the like

1642
01:21:11,920 --> 01:21:19,779
like here let me let me just show you

1643
01:21:18,488 --> 01:21:21,279
what that was again it's a little bit

1644
01:21:19,779 --> 01:21:22,868
hard to read because it's very hard to

1645
01:21:21,279 --> 01:21:26,800
read these inside for code it doesn't

1646
01:21:22,868 --> 01:21:30,819
really handle 'having stuff indented

1647
01:21:26,800 --> 01:21:32,800
inside here docks so if we take a look

1648
01:21:30,819 --> 01:21:34,569
at the achma interior diffuse Tim right

1649
01:21:32,800 --> 01:21:37,239
what we're saying is all right so it's

1650
01:21:34,569 --> 01:21:39,609
the amount we want to actually use of

1651
01:21:37,238 --> 01:21:47,078
this thing so we're gonna take the X

1652
01:21:39,609 --> 01:21:50,288
dimension oops and then we want to

1653
01:21:47,078 --> 01:21:52,988
divide it by the square of the light

1654
01:21:50,288 --> 01:21:55,479
lookup voxel dim so um I didn't mean to

1655
01:21:52,988 --> 01:21:58,779
replace that right because that's how

1656
01:21:55,479 --> 01:22:02,518
many tiles counted there are across and

1657
01:21:58,779 --> 01:22:05,018
then we're gonna multiply that by the

1658
01:22:02,519 --> 01:22:06,730
this is just this is just producing the

1659
01:22:05,019 --> 01:22:09,519
width right of this thing so the

1660
01:22:06,729 --> 01:22:12,368
diffused tile X ends up being placed in

1661
01:22:09,519 --> 01:22:14,619
there right and then we have in here the

1662
01:22:12,368 --> 01:22:17,109
same thing but we want to do it for Y so

1663
01:22:14,618 --> 01:22:24,219
this is diffused tile dimmed Y and then

1664
01:22:17,109 --> 01:22:25,509
this is diffuse tile damn Y so and then

1665
01:22:24,219 --> 01:22:27,489
now here we're doing the exact same

1666
01:22:25,510 --> 01:22:29,800
thing all we need to do is just use the

1667
01:22:27,488 --> 01:22:36,658
specular versions so this is going to be

1668
01:22:29,800 --> 01:22:36,659
specular tile dim X

1669
01:22:38,079 --> 01:22:43,930
specular child impacts and then here we

1670
01:22:41,060 --> 01:22:43,930
have oops

1671
01:22:44,079 --> 01:23:03,979
specular child my boobs right and that's

1672
01:23:01,520 --> 01:23:07,580
what we're looking at so hopefully now

1673
01:23:03,979 --> 01:23:09,949
this thing is you know compliant with

1674
01:23:07,579 --> 01:23:13,460
whatever arbitrary garbage we happen to

1675
01:23:09,949 --> 01:23:16,220
pass down and the only thing it doesn't

1676
01:23:13,460 --> 01:23:18,050
do yet is handle the light voxel

1677
01:23:16,220 --> 01:23:20,270
differences right so these are just

1678
01:23:18,050 --> 01:23:22,579
doing like squares and you know it's not

1679
01:23:20,270 --> 01:23:24,500
multiplying out the proper pieces of

1680
01:23:22,579 --> 01:23:27,019
those but that's okay because we're not

1681
01:23:24,500 --> 01:23:30,949
trying to fix that yet so then we get to

1682
01:23:27,020 --> 01:23:33,170
light voxel this one can just use well

1683
01:23:30,949 --> 01:23:34,939
so the problem here is now we actually

1684
01:23:33,170 --> 01:23:37,520
have a place where it's trying to use

1685
01:23:34,939 --> 01:23:39,199
this to define something so I believe

1686
01:23:37,520 --> 01:23:43,010
this is gonna have to start going away

1687
01:23:39,199 --> 01:23:46,369
so the voxel cell itself is going to

1688
01:23:43,010 --> 01:23:47,750
have to start going away and we're going

1689
01:23:46,369 --> 01:23:50,449
to have to do something about that

1690
01:23:47,750 --> 01:23:51,949
so when we look at like the diffused

1691
01:23:50,449 --> 01:23:54,260
weight map that we're computing in the

1692
01:23:51,949 --> 01:23:57,710
light fox will sell these have to be

1693
01:23:54,260 --> 01:23:59,900
dependent on those numbers and so we're

1694
01:23:57,710 --> 01:24:02,329
going to have to make those adapt to

1695
01:23:59,899 --> 01:24:06,199
whatever they actually need to be right

1696
01:24:02,329 --> 01:24:08,019
and that's not so bad but it does create

1697
01:24:06,199 --> 01:24:11,329
a little bit of work for us right so

1698
01:24:08,020 --> 01:24:14,750
what we want to do here is say well

1699
01:24:11,329 --> 01:24:16,010
actually let me let me go ahead and let

1700
01:24:14,750 --> 01:24:17,630
me go ahead and fix some other stuff

1701
01:24:16,010 --> 01:24:21,670
first so let's suppose we just made

1702
01:24:17,630 --> 01:24:21,670
these arbitrary values here

1703
01:24:29,719 --> 01:24:33,929
and I'm just doing that to nerf it just

1704
01:24:32,279 --> 01:24:37,319
really briefly so I can look at the rest

1705
01:24:33,929 --> 01:24:38,880
of these right and you can see like

1706
01:24:37,319 --> 01:24:40,409
we've got a lot of yeah we've got a lot

1707
01:24:38,880 --> 01:24:42,449
of issues where things are dependent on

1708
01:24:40,409 --> 01:24:47,729
those values being constants which I

1709
01:24:42,448 --> 01:24:48,960
don't know that we want right alright so

1710
01:24:47,729 --> 01:24:51,269
looking it up here

1711
01:24:48,960 --> 01:24:53,100
a lot of this stuff so yeah you can kind

1712
01:24:51,270 --> 01:24:55,199
of see I mean I guess what I'm learning

1713
01:24:53,100 --> 01:24:58,650
here is one problem we're gonna have is

1714
01:24:55,198 --> 01:25:03,210
that this information kind of wants to

1715
01:24:58,649 --> 01:25:05,519
be baked right so because I can easily

1716
01:25:03,210 --> 01:25:07,020
route this properly so I can easily

1717
01:25:05,520 --> 01:25:09,150
route it so that we get the information

1718
01:25:07,020 --> 01:25:11,310
we need and use it in a computation here

1719
01:25:09,149 --> 01:25:12,719
when you do direction from txy you just

1720
01:25:11,310 --> 01:25:15,719
pass the light atlas and it would use

1721
01:25:12,719 --> 01:25:17,219
the dimension the problem with that is

1722
01:25:15,719 --> 01:25:19,109
I'm concerned that that's going to lead

1723
01:25:17,219 --> 01:25:20,939
to a lot more computation doesn't need

1724
01:25:19,109 --> 01:25:22,710
to happen because if these things are

1725
01:25:20,939 --> 01:25:24,659
constant then the compiler can fold

1726
01:25:22,710 --> 01:25:27,390
those constants into pre computed values

1727
01:25:24,659 --> 01:25:30,479
or as if there are dynamic values you

1728
01:25:27,390 --> 01:25:37,829
can't write and so I am kind of nervous

1729
01:25:30,479 --> 01:25:40,409
about that prospect so that tells me

1730
01:25:37,829 --> 01:25:44,488
some pretty important information right

1731
01:25:40,409 --> 01:25:46,710
and I don't know like it's hard to say

1732
01:25:44,488 --> 01:25:51,229
to what extent that would really be an

1733
01:25:46,710 --> 01:25:51,230
issue you know just looking at it here

1734
01:25:52,909 --> 01:25:58,269
certainly in the case of the four loops

1735
01:25:55,319 --> 01:26:01,769
probably wouldn't be an issue

1736
01:25:58,270 --> 01:26:01,770
[Music]

1737
01:26:22,899 --> 01:26:28,539
but I am a little bit worried about

1738
01:26:25,279 --> 01:26:28,539
those direction calls

1739
01:27:07,539 --> 01:27:16,429
so here's I think what I want to do I'm

1740
01:27:10,908 --> 01:27:17,960
gonna look and see how rough it is to

1741
01:27:16,429 --> 01:27:20,960
pre-compute these values in the first

1742
01:27:17,960 --> 01:27:23,179
place so if I take a look at what's

1743
01:27:20,960 --> 01:27:26,270
going on here it looks like what I would

1744
01:27:23,179 --> 01:27:30,230
just need is some way of pre inverting

1745
01:27:26,270 --> 01:27:33,800
this right and that seems pretty easy so

1746
01:27:30,229 --> 01:27:37,849
really this box why here is a Hadamard

1747
01:27:33,800 --> 01:27:40,670
product with the particular light atlas

1748
01:27:37,850 --> 01:27:44,030
in question so I think what I could

1749
01:27:40,670 --> 01:27:46,489
probably do is say all right like look

1750
01:27:44,029 --> 01:27:49,519
if we just say that the light Atlas

1751
01:27:46,488 --> 01:27:50,928
itself when you define it starts to have

1752
01:27:49,520 --> 01:27:52,940
some dependent values that you can use

1753
01:27:50,929 --> 01:27:56,829
as constants so this one right here

1754
01:27:52,939 --> 01:28:02,960
would be like the you know the Oh X Y

1755
01:27:56,829 --> 01:28:04,850
coefficient right let's say and in that

1756
01:28:02,960 --> 01:28:07,819
case what you could do is you could just

1757
01:28:04,850 --> 01:28:11,900
say look whatever the Oh X Y coefficient

1758
01:28:07,819 --> 01:28:16,789
is for this thing and maybe we do it

1759
01:28:11,899 --> 01:28:18,859
this way so you're supposed to pass a

1760
01:28:16,789 --> 01:28:21,469
new X Y coefficient down to this thing

1761
01:28:18,859 --> 01:28:23,299
and then the X Y coefficient is just

1762
01:28:21,469 --> 01:28:26,060
multiplied on here and it's the inverse

1763
01:28:23,300 --> 01:28:28,429
of these values so then when you do make

1764
01:28:26,060 --> 01:28:30,050
light Atlas and now you can see why I

1765
01:28:28,429 --> 01:28:32,868
have this calls because that kind of was

1766
01:28:30,050 --> 01:28:34,100
a little bit you know in the assumption

1767
01:28:32,868 --> 01:28:35,059
having had a lot of experience

1768
01:28:34,100 --> 01:28:36,469
programming that we're gonna have to

1769
01:28:35,060 --> 01:28:39,920
compute a bunch of dependent values and

1770
01:28:36,469 --> 01:28:45,189
it turns out we do we know that we kind

1771
01:28:39,920 --> 01:28:45,190
of do this procedure to get them

1772
01:28:49,939 --> 01:28:56,069
right so now we can just say like okay

1773
01:28:53,250 --> 01:29:00,390
so whatever we compute the tile dim of

1774
01:28:56,069 --> 01:29:03,899
this thing to be we can compute what we

1775
01:29:00,390 --> 01:29:06,090
need for the dependent variables just

1776
01:29:03,899 --> 01:29:08,219
based off of that and then once that's

1777
01:29:06,090 --> 01:29:10,170
stored the light Atlas itself can

1778
01:29:08,220 --> 01:29:12,480
provide the value here and hey guess

1779
01:29:10,170 --> 01:29:14,369
what it's even a little bit faster

1780
01:29:12,479 --> 01:29:17,309
potentially because we're not doing a

1781
01:29:14,369 --> 01:29:18,809
divide right although we don't actually

1782
01:29:17,310 --> 01:29:21,090
know that that was costing us anything

1783
01:29:18,810 --> 01:29:23,700
divides go on a separate pipe in there

1784
01:29:21,090 --> 01:29:25,920
unless they're dependent it's not that

1785
01:29:23,699 --> 01:29:29,909
big a deal but it's you know or that for

1786
01:29:25,920 --> 01:29:32,850
now so if we actually produce that

1787
01:29:29,909 --> 01:29:35,460
coefficient then that's actually pretty

1788
01:29:32,850 --> 01:29:37,640
much free right so then if we looked at

1789
01:29:35,460 --> 01:29:44,819
where that was actually happening I

1790
01:29:37,640 --> 01:29:46,230
don't care about that or that so in here

1791
01:29:44,819 --> 01:29:48,149
we would just need to know that like

1792
01:29:46,229 --> 01:29:53,009
whatever the light Atlas was that we

1793
01:29:48,149 --> 01:29:56,069
were trying to operate on this would

1794
01:29:53,010 --> 01:29:58,560
give us that information and so in here

1795
01:29:56,069 --> 01:29:59,969
where we're doing the test sphere right

1796
01:29:58,560 --> 01:30:01,410
and we're looping through this thing

1797
01:29:59,970 --> 01:30:04,020
we're trying to write into the specular

1798
01:30:01,409 --> 01:30:05,909
map so we would just say like okay like

1799
01:30:04,020 --> 01:30:08,370
whatever the specular map actually is

1800
01:30:05,909 --> 01:30:10,680
and in this case we don't have that here

1801
01:30:08,369 --> 01:30:14,039
so we want that to be passed in probably

1802
01:30:10,680 --> 01:30:17,579
to the test fear code I'm guessing so we

1803
01:30:14,039 --> 01:30:21,810
probably want like light Atlas star in

1804
01:30:17,579 --> 01:30:23,519
this case spec Atlas so in here we would

1805
01:30:21,810 --> 01:30:25,680
just say like whatever the XY

1806
01:30:23,520 --> 01:30:29,840
coefficient is that's what we're going

1807
01:30:25,680 --> 01:30:32,789
to use and we'll just pass that in right

1808
01:30:29,840 --> 01:30:38,100
so that seems like a pretty reasonable

1809
01:30:32,789 --> 01:30:39,899
solution to that problem to me so the

1810
01:30:38,100 --> 01:30:42,180
same thing would happen here inside get

1811
01:30:39,899 --> 01:30:44,429
octahedral offset I just want to look to

1812
01:30:42,180 --> 01:30:47,100
see to what extent we can fold these

1813
01:30:44,430 --> 01:30:49,829
things in looking at this it looks like

1814
01:30:47,100 --> 01:30:52,560
we just need a light look up dim minus

1815
01:30:49,829 --> 01:30:55,559
three as a constant which again we can

1816
01:30:52,560 --> 01:30:58,070
just load in right so this is just our

1817
01:30:55,560 --> 01:30:58,070
like

1818
01:31:02,840 --> 01:31:10,078
like our öktem coefficient right and I

1819
01:31:08,189 --> 01:31:12,899
don't know what we want to call this

1820
01:31:10,078 --> 01:31:18,569
really it's not particularly well

1821
01:31:12,899 --> 01:31:20,759
defined what that would actually be in

1822
01:31:18,569 --> 01:31:22,710
fact it's really wrong because this is

1823
01:31:20,760 --> 01:31:24,449
supposed to be for a square and we're

1824
01:31:22,710 --> 01:31:28,368
doing it the same in both so I think we

1825
01:31:24,448 --> 01:31:30,388
actually want this to be a v2 right

1826
01:31:28,368 --> 01:31:32,250
which would be both of these two things

1827
01:31:30,389 --> 01:31:34,170
packed together so if you look at it's

1828
01:31:32,250 --> 01:31:35,849
actually this value right here so we'd

1829
01:31:34,170 --> 01:31:37,500
actually do you know we could actually

1830
01:31:35,849 --> 01:31:41,489
do this we could just say like öktem

1831
01:31:37,500 --> 01:31:43,229
coefficient here and the öktem

1832
01:31:41,488 --> 01:31:45,738
coefficient would literally just be

1833
01:31:43,229 --> 01:31:49,019
these two values right so it would be

1834
01:31:45,738 --> 01:31:55,109
well I can't do it that way but get the

1835
01:31:49,020 --> 01:32:00,960
idea it would be the tile dim minus

1836
01:31:55,109 --> 01:32:03,779
three in each direction like so and then

1837
01:32:00,960 --> 01:32:11,039
the oxy coefficient is just the inverse

1838
01:32:03,779 --> 01:32:13,710
of that right so once we have both of

1839
01:32:11,039 --> 01:32:15,719
those this becomes pretty

1840
01:32:13,710 --> 01:32:19,139
straightforward right so this value now

1841
01:32:15,719 --> 01:32:21,210
this is just a Hadamard between the

1842
01:32:19,139 --> 01:32:23,550
öktem coefficient and the UV now it

1843
01:32:21,210 --> 01:32:32,539
properly handles rectangles which is

1844
01:32:23,550 --> 01:32:32,539
good I think off we go right I think

1845
01:32:34,670 --> 01:32:47,510
do I not have what's the what is it

1846
01:32:37,460 --> 01:32:54,710
complaining about here so it looks like

1847
01:32:47,510 --> 01:32:58,070
this doesn't like one over so do we

1848
01:32:54,710 --> 01:33:01,789
really not have that looks like we don't

1849
01:32:58,069 --> 01:33:13,939
I guess we don't have a good way to

1850
01:33:01,789 --> 01:33:15,829
invert a vector we probably do probably

1851
01:33:13,939 --> 01:33:17,359
just have what we we probably named them

1852
01:33:15,829 --> 01:33:18,649
so we would know what it does if it's

1853
01:33:17,359 --> 01:33:29,869
zero or something like that is what I

1854
01:33:18,649 --> 01:33:31,250
would guess but it's been a while maybe

1855
01:33:29,869 --> 01:33:34,269
it could have been called like 1 over

1856
01:33:31,250 --> 01:33:34,270
inverse any of that

1857
01:33:44,850 --> 01:33:57,470
hmm or not hmm all right well I'm okay

1858
01:33:54,420 --> 01:33:57,470
with doing it the old-fashioned way

1859
01:34:01,039 --> 01:34:06,930
all right so now wherever we're getting

1860
01:34:03,989 --> 01:34:08,639
the octahedral offset again we kind of

1861
01:34:06,930 --> 01:34:11,430
need to know what we're sampling from in

1862
01:34:08,640 --> 01:34:13,890
case of in the case of the compute voxel

1863
01:34:11,430 --> 01:34:18,650
irradiance at in this case we're gonna

1864
01:34:13,890 --> 01:34:22,050
have to pass down the light Atlas and

1865
01:34:18,649 --> 01:34:25,649
this one's going to be the diffuse Atlas

1866
01:34:22,050 --> 01:34:32,130
right so in this case we just need the

1867
01:34:25,649 --> 01:34:34,500
diffuse Atlas öktem coefficient and then

1868
01:34:32,130 --> 01:34:36,600
actually you know this this is what

1869
01:34:34,500 --> 01:34:38,250
we're gonna replace so this lookup voxel

1870
01:34:36,600 --> 01:34:40,829
clamped is actually going to be

1871
01:34:38,250 --> 01:34:43,439
something that we use the diffuse that

1872
01:34:40,829 --> 01:34:45,119
lists for and we're gonna stop using the

1873
01:34:43,439 --> 01:34:48,809
cells for it but that's a separate issue

1874
01:34:45,119 --> 01:34:50,970
um so same is true here so here we are

1875
01:34:48,810 --> 01:34:56,730
in the test cast this is gonna have to

1876
01:34:50,970 --> 01:35:10,039
take the light Atlas this is the speck

1877
01:34:56,729 --> 01:35:10,039
Atlas I guess in this case so

1878
01:35:11,590 --> 01:35:21,340
I think that's pretty much it you know

1879
01:35:18,779 --> 01:35:23,908
so then we get to the Pyrus places where

1880
01:35:21,340 --> 01:35:26,319
we're actually looping over things and

1881
01:35:23,908 --> 01:35:28,929
in this case you can kind of say well

1882
01:35:26,319 --> 01:35:31,179
alright we can just look these up in the

1883
01:35:28,929 --> 01:35:32,618
thing we're looping over so whatever

1884
01:35:31,179 --> 01:35:34,239
we're planning to write out to which in

1885
01:35:32,618 --> 01:35:35,618
this case would be the spec Atlas that's

1886
01:35:34,238 --> 01:35:40,238
what we're looping over so this is just

1887
01:35:35,618 --> 01:35:44,859
the spec Atlas tyldum Y and the spec

1888
01:35:40,238 --> 01:35:47,859
Atlas Talde max right and those are just

1889
01:35:44,859 --> 01:35:54,848
basic light loops we're getting rid of

1890
01:35:47,859 --> 01:35:57,579
the D there so that's going away I think

1891
01:35:54,849 --> 01:35:59,829
we're good there for compute voxel

1892
01:35:57,579 --> 01:36:01,599
radians at in this case like I said we

1893
01:35:59,829 --> 01:36:05,408
need to start passing these towns so

1894
01:36:01,599 --> 01:36:09,639
we've got the light Atlas here and this

1895
01:36:05,408 --> 01:36:11,069
is going to be the speck Atlas and the

1896
01:36:09,639 --> 01:36:13,090
diffuse setlists

1897
01:36:11,069 --> 01:36:21,189
we're gonna use both of them in this

1898
01:36:13,090 --> 01:36:23,679
case don't ask me why I put them in the

1899
01:36:21,189 --> 01:36:25,178
wrong order I don't know

1900
01:36:23,679 --> 01:36:26,859
and then when people actually need to

1901
01:36:25,179 --> 01:36:29,380
use them we need to pass the right one

1902
01:36:26,859 --> 01:36:31,630
so whichever one it is that we actually

1903
01:36:29,380 --> 01:36:34,029
want to use has to be passed here I

1904
01:36:31,630 --> 01:36:36,520
don't actually know you know this may be

1905
01:36:34,029 --> 01:36:40,000
a mistake using the address of this

1906
01:36:36,520 --> 01:36:42,790
thing we may actually want to do just

1907
01:36:40,000 --> 01:36:45,300
copying it in wholesale so we may want

1908
01:36:42,789 --> 01:36:50,130
this thing to actually look like this

1909
01:36:45,300 --> 01:36:52,300
right because we don't want and again

1910
01:36:50,130 --> 01:36:54,940
there's no point to this other than to

1911
01:36:52,300 --> 01:36:57,460
tell the compiler hey look like we

1912
01:36:54,939 --> 01:36:59,198
aren't aliasing so when we write out two

1913
01:36:57,460 --> 01:37:01,389
things you don't have to worry about

1914
01:36:59,198 --> 01:37:02,738
that it's a little bit premature to do

1915
01:37:01,389 --> 01:37:04,420
that so I'm just not going to do it yet

1916
01:37:02,738 --> 01:37:05,709
when we actually look at the performance

1917
01:37:04,420 --> 01:37:07,300
this thing will have to look at the code

1918
01:37:05,710 --> 01:37:11,289
and see what the compiler is doing to

1919
01:37:07,300 --> 01:37:11,850
know whether we care about that now what

1920
01:37:11,289 --> 01:37:13,829
is the problem

1921
01:37:11,850 --> 01:37:16,989
[Music]

1922
01:37:13,829 --> 01:37:18,340
specular light atlas is it not did we

1923
01:37:16,988 --> 01:37:20,579
call it speck light atlas what did I

1924
01:37:18,340 --> 01:37:20,579
call it

1925
01:37:21,239 --> 01:37:30,250
or Addison's not in here

1926
01:37:23,399 --> 01:37:32,829
alright so apparently we never actually

1927
01:37:30,250 --> 01:37:34,659
copied that thing which was a mistake I

1928
01:37:32,829 --> 01:37:38,050
guess I just never went back to the open

1929
01:37:34,659 --> 01:37:41,920
Jill in it and actually placed it in

1930
01:37:38,050 --> 01:37:45,400
there which is weird but I guess that's

1931
01:37:41,920 --> 01:37:47,920
what happened so wait but we would have

1932
01:37:45,399 --> 01:37:53,279
to how is that possible because we

1933
01:37:47,920 --> 01:37:55,659
allocated it didn't we like when oh

1934
01:37:53,279 --> 01:37:58,569
never mind that's just where we set it

1935
01:37:55,659 --> 01:38:00,489
in for each frame so yeah I'm assuming

1936
01:37:58,569 --> 01:38:05,199
that in here we just need to copy this

1937
01:38:00,489 --> 01:38:09,670
forward so specular like that looks like

1938
01:38:05,199 --> 01:38:13,300
so and off we go

1939
01:38:09,670 --> 01:38:15,670
okay so when we're doing compute voxel

1940
01:38:13,300 --> 01:38:17,289
irradiance and we need to sample this we

1941
01:38:15,670 --> 01:38:18,850
need to sample the dis few setlists than

1942
01:38:17,289 --> 01:38:22,359
that so we're gonna pass that a few that

1943
01:38:18,850 --> 01:38:25,930
diffuse atlas to that when we're

1944
01:38:22,359 --> 01:38:28,380
updating this voxel here so octave set

1945
01:38:25,930 --> 01:38:31,869
when it gets passed to update voxel

1946
01:38:28,380 --> 01:38:35,350
that's the spec atlas here so for the

1947
01:38:31,869 --> 01:38:39,010
spec atlas we need to pull out the öktem

1948
01:38:35,350 --> 01:38:44,620
coefficient right for the get octahedral

1949
01:38:39,010 --> 01:38:46,750
offset call in here where we're doing

1950
01:38:44,619 --> 01:38:50,019
the cue callbacks for the oxy demand the

1951
01:38:46,750 --> 01:38:53,789
octave didim again these are really so

1952
01:38:50,020 --> 01:38:58,510
what's happening now is this is the part

1953
01:38:53,789 --> 01:39:01,210
where we need to do like that the

1954
01:38:58,510 --> 01:39:03,970
updates to things so at this point we

1955
01:39:01,210 --> 01:39:06,880
need to start replacing these calls

1956
01:39:03,970 --> 01:39:09,130
themselves but again we're making so

1957
01:39:06,880 --> 01:39:11,260
many changes here and we're gonna have

1958
01:39:09,130 --> 01:39:13,720
to this one's going to require debugging

1959
01:39:11,260 --> 01:39:16,270
because remember we have to change the

1960
01:39:13,720 --> 01:39:18,150
actual voxel writing part of things so

1961
01:39:16,270 --> 01:39:21,210
that's it's going to be a nightmare

1962
01:39:18,149 --> 01:39:24,609
it'll probably take into tomorrow to do

1963
01:39:21,210 --> 01:39:27,279
anyway so we want to try and keep this

1964
01:39:24,609 --> 01:39:30,250
at a minimum so at the moment we

1965
01:39:27,279 --> 01:39:32,259
probably want to do here for the oxy

1966
01:39:30,250 --> 01:39:33,189
demand the octi dim well I don't know I

1967
01:39:32,260 --> 01:39:37,719
guess they're only

1968
01:39:33,189 --> 01:39:39,099
being used in Justin here so I guess not

1969
01:39:37,719 --> 01:39:42,340
so I guess that's okay so we're gonna

1970
01:39:39,100 --> 01:39:44,320
pull that out and we're gonna take these

1971
01:39:42,340 --> 01:39:47,650
which are the access ORS and we're gonna

1972
01:39:44,319 --> 01:39:49,000
move those into here right so whenever

1973
01:39:47,649 --> 01:39:52,509
you're trying to get stuff you're gonna

1974
01:39:49,000 --> 01:39:54,460
ask this this code for it in the future

1975
01:39:52,510 --> 01:39:58,560
and we're gonna work our way towards

1976
01:39:54,460 --> 01:40:01,119
that right so let's see where we're at

1977
01:39:58,560 --> 01:40:03,190
in here where we're doing our casting

1978
01:40:01,119 --> 01:40:05,859
again we probably want to pull out the

1979
01:40:03,189 --> 01:40:10,719
atlases so we just have those around so

1980
01:40:05,859 --> 01:40:11,500
we're gonna have those here and then we

1981
01:40:10,719 --> 01:40:15,039
have to look at what we're actually

1982
01:40:11,500 --> 01:40:17,948
doing so if we take a look when we do

1983
01:40:15,039 --> 01:40:19,420
our elect s casting I'm not sure why

1984
01:40:17,948 --> 01:40:21,339
this didn't complaint oh because we're

1985
01:40:19,420 --> 01:40:23,619
doing full cast if we were doing tests

1986
01:40:21,340 --> 01:40:25,449
fearer test cast we would have had to

1987
01:40:23,619 --> 01:40:28,479
pass down the atlases here I believe

1988
01:40:25,448 --> 01:40:31,479
like if we look at test cast it wants to

1989
01:40:28,479 --> 01:40:34,029
spec Atlas scoops so let's go ahead and

1990
01:40:31,479 --> 01:40:39,849
pass that I'm assuming tests fear does

1991
01:40:34,029 --> 01:40:41,198
as well so that's spec that's there so

1992
01:40:39,850 --> 01:40:43,090
those two you can stay the way they are

1993
01:40:41,198 --> 01:40:44,229
and then full cast grabs them out of the

1994
01:40:43,090 --> 01:40:47,680
work anyway so we don't really need to

1995
01:40:44,229 --> 01:40:49,539
look at that so then we come to here and

1996
01:40:47,680 --> 01:40:51,909
this is where we actually do like our

1997
01:40:49,539 --> 01:40:54,609
blurring and that sort of stuff

1998
01:40:51,909 --> 01:40:56,198
and then we do our edge fill so if we

1999
01:40:54,609 --> 01:40:58,719
have the blurring and the edge fill that

2000
01:40:56,198 --> 01:41:00,819
needs to happen then we look at what's

2001
01:40:58,719 --> 01:41:03,789
going on here we need to do a couple

2002
01:41:00,819 --> 01:41:05,829
different things so first of all when we

2003
01:41:03,789 --> 01:41:08,109
look at the blurring function the

2004
01:41:05,829 --> 01:41:13,539
blurring function is reading from the

2005
01:41:08,109 --> 01:41:16,179
spec map and writing into the diffuse

2006
01:41:13,539 --> 01:41:19,869
map and like I said the way that we want

2007
01:41:16,180 --> 01:41:21,369
to do that is gonna probably change over

2008
01:41:19,869 --> 01:41:23,170
time and especially if we end up having

2009
01:41:21,369 --> 01:41:25,300
a spec map that's a different resolution

2010
01:41:23,170 --> 01:41:26,680
so we're probably gonna have to revisit

2011
01:41:25,300 --> 01:41:29,320
this routine for the minute I will just

2012
01:41:26,680 --> 01:41:33,539
poke I will just make it work exactly

2013
01:41:29,319 --> 01:41:33,539
the way that it should

2014
01:41:33,609 --> 01:41:38,079
I'll make it work exactly the way you

2015
01:41:35,770 --> 01:41:39,880
would expect if it was going to just

2016
01:41:38,079 --> 01:41:42,550
continue to be the same dimensions and

2017
01:41:39,880 --> 01:41:44,829
we'll sort of try to address it more

2018
01:41:42,550 --> 01:41:46,679
later so if we take a look what's going

2019
01:41:44,829 --> 01:41:51,179
to happen here we effectively need

2020
01:41:46,679 --> 01:41:52,859
to loop over the rows of the diffuse map

2021
01:41:51,179 --> 01:41:55,170
and the columns of the diffuse map

2022
01:41:52,859 --> 01:41:58,529
writing into the diffuse map so this

2023
01:41:55,170 --> 01:42:04,079
value here is just going to be whatever

2024
01:41:58,529 --> 01:42:09,719
the interior edge dimensions basically

2025
01:42:04,079 --> 01:42:13,050
are of this thing so this is just going

2026
01:42:09,719 --> 01:42:22,890
to be the tiled M X so is this

2027
01:42:13,050 --> 01:42:25,020
I'm sorry Y and there's X and then

2028
01:42:22,890 --> 01:42:27,179
inside here where we're looking at what

2029
01:42:25,020 --> 01:42:28,679
the sampling is going to be the sampling

2030
01:42:27,179 --> 01:42:31,679
obviously is going to be over the

2031
01:42:28,679 --> 01:42:39,390
specular map so instead of sampling over

2032
01:42:31,679 --> 01:42:41,489
the instead of sampling over the diffuse

2033
01:42:39,390 --> 01:42:42,960
Atlas's dimension we would want to stamp

2034
01:42:41,488 --> 01:42:45,029
because that's what we're running out to

2035
01:42:42,960 --> 01:43:00,929
we would want to sample over the speck

2036
01:42:45,029 --> 01:43:02,279
atlases dimension right like so and the

2037
01:43:00,929 --> 01:43:04,079
main problem we're gonna have again is

2038
01:43:02,279 --> 01:43:06,750
that how we're computing these diffuse

2039
01:43:04,079 --> 01:43:08,189
weight maps that is going to have to

2040
01:43:06,750 --> 01:43:10,469
change because it's not dynamic at the

2041
01:43:08,189 --> 01:43:12,689
moment so then the primary thing we need

2042
01:43:10,469 --> 01:43:15,929
here is we need the ability to get these

2043
01:43:12,689 --> 01:43:19,109
voxel offsets like where in the map we

2044
01:43:15,929 --> 01:43:22,109
are looking right and in order to do

2045
01:43:19,109 --> 01:43:25,649
that we need to produce this voxel

2046
01:43:22,109 --> 01:43:27,149
offset C values right and we need to be

2047
01:43:25,649 --> 01:43:28,439
able to produce those reliably now we

2048
01:43:27,149 --> 01:43:31,408
don't need the D because we're not

2049
01:43:28,439 --> 01:43:33,059
writing into the D at the moment but

2050
01:43:31,408 --> 01:43:35,969
what we do need to be able to do you can

2051
01:43:33,060 --> 01:43:38,760
see kind of here when we access the

2052
01:43:35,969 --> 01:43:40,920
diffuse map itself we need to pull from

2053
01:43:38,760 --> 01:43:43,020
the spec map and write to the diffuse

2054
01:43:40,920 --> 01:43:45,869
map so this is actually not going to be

2055
01:43:43,020 --> 01:43:50,460
diffuse texels anymore it's actually

2056
01:43:45,869 --> 01:43:57,659
going to be spec texels if that makes

2057
01:43:50,460 --> 01:44:00,300
sense so so I shouldn't say it that way

2058
01:43:57,659 --> 01:44:04,739
so the cell that we pull out right like

2059
01:44:00,300 --> 01:44:06,600
this part of things that's the thing you

2060
01:44:04,739 --> 01:44:08,069
know this part is the part that's now

2061
01:44:06,600 --> 01:44:11,460
going to have to change to be pulling

2062
01:44:08,069 --> 01:44:12,719
out of the spec map so this can stay the

2063
01:44:11,460 --> 01:44:16,109
same because it's the right part that's

2064
01:44:12,720 --> 01:44:20,100
writing out but this parts gonna have to

2065
01:44:16,109 --> 01:44:22,170
be fixed right okay so that's fine

2066
01:44:20,100 --> 01:44:24,630
that's what we would you know that's

2067
01:44:22,170 --> 01:44:25,920
what we'd expect it's totally fine so in

2068
01:44:24,630 --> 01:44:27,180
order to do that I think there's a

2069
01:44:25,920 --> 01:44:28,560
couple things we probably want to be

2070
01:44:27,180 --> 01:44:30,000
able to do at this point so now we

2071
01:44:28,560 --> 01:44:31,380
probably want to be able to do some

2072
01:44:30,000 --> 01:44:33,000
strided offsets into these things

2073
01:44:31,380 --> 01:44:36,600
because you look at how we want to

2074
01:44:33,000 --> 01:44:39,510
actually access this thing right we're

2075
01:44:36,600 --> 01:44:43,070
in a lot of pull from the cells more

2076
01:44:39,510 --> 01:44:45,119
reliably by actually using some

2077
01:44:43,069 --> 01:44:47,219
pre-baked offsets for where we're

2078
01:44:45,119 --> 01:44:48,689
writing into these things so that whole

2079
01:44:47,220 --> 01:44:51,119
process is probably gonna have to change

2080
01:44:48,689 --> 01:44:54,089
a little bit I'm going to push forward

2081
01:44:51,119 --> 01:45:03,750
slightly just really quickly just to see

2082
01:44:54,090 --> 01:45:07,020
what we have to do here so looking at it

2083
01:45:03,750 --> 01:45:08,819
I'm not sure what the N value is

2084
01:45:07,020 --> 01:45:10,950
supposed to be here that was just us

2085
01:45:08,819 --> 01:45:13,590
trying to look at what the TX should

2086
01:45:10,949 --> 01:45:16,559
range to so when we're actually copying

2087
01:45:13,590 --> 01:45:19,590
those from one side to the other and

2088
01:45:16,560 --> 01:45:24,090
we're doing our plus n so the N here is

2089
01:45:19,590 --> 01:45:25,860
actually the X dimension right so what

2090
01:45:24,090 --> 01:45:30,480
we want to do I guess is set the n

2091
01:45:25,859 --> 01:45:33,829
depending on the situation we probably

2092
01:45:30,479 --> 01:45:33,829
want to do something more like this

2093
01:45:38,399 --> 01:45:43,109
and this whole thing itself we're gonna

2094
01:45:41,279 --> 01:45:45,029
have to run once for the spec map and

2095
01:45:43,109 --> 01:45:48,619
once for the diffuse map right so we're

2096
01:45:45,029 --> 01:45:51,239
gonna want to do these two maps actually

2097
01:45:48,619 --> 01:45:55,289
differently right we're gonna want to

2098
01:45:51,239 --> 01:45:57,479
blend these both and so this process

2099
01:45:55,289 --> 01:46:00,090
itself I think is probably going to want

2100
01:45:57,479 --> 01:46:03,089
to be pulled out into a function that's

2101
01:46:00,090 --> 01:46:08,789
like the edge duplication function you

2102
01:46:03,090 --> 01:46:23,340
know what I'm saying so we probably want

2103
01:46:08,789 --> 01:46:28,439
something like this like that or you

2104
01:46:23,340 --> 01:46:31,829
know fill border something like that and

2105
01:46:28,439 --> 01:46:33,449
it would take a light atlas and just do

2106
01:46:31,829 --> 01:46:35,670
it because I don't think there's

2107
01:46:33,449 --> 01:46:38,069
anything else special about it so this

2108
01:46:35,670 --> 01:46:43,079
code right here that actually you know

2109
01:46:38,069 --> 01:46:45,750
does all this nonsense right that code

2110
01:46:43,079 --> 01:46:48,420
is something we can do on an atlas and

2111
01:46:45,750 --> 01:46:51,090
we might want to do it on both atlases I

2112
01:46:48,420 --> 01:46:53,550
don't know but let's suppose that we do

2113
01:46:51,090 --> 01:46:56,720
and so we wanted to be able to do here

2114
01:46:53,550 --> 01:46:59,130
say okay after the diffuse down sample

2115
01:46:56,720 --> 01:47:01,260
or possibly before the diffuse down

2116
01:46:59,130 --> 01:47:04,260
sample we want to go ahead and fill the

2117
01:47:01,260 --> 01:47:07,860
spec map border so we do the spec atlas

2118
01:47:04,260 --> 01:47:11,010
fill here and then after we finish the

2119
01:47:07,859 --> 01:47:13,199
sampling the down sampling which again

2120
01:47:11,010 --> 01:47:14,699
like I said well you know I think about

2121
01:47:13,199 --> 01:47:16,889
it that doesn't really make any sense we

2122
01:47:14,699 --> 01:47:18,869
don't this is not gonna pull from those

2123
01:47:16,890 --> 01:47:21,410
values so it doesn't matter so it's

2124
01:47:18,869 --> 01:47:21,409
really just this

2125
01:47:27,729 --> 01:47:34,579
right so we want to be able to do both

2126
01:47:31,310 --> 01:47:38,900
of those and we can by using fill atlas

2127
01:47:34,579 --> 01:47:43,880
right and so now this code just has to

2128
01:47:38,899 --> 01:47:46,250
be able to work using the the atlas only

2129
01:47:43,880 --> 01:47:49,340
and I think it can right this is just

2130
01:47:46,250 --> 01:47:52,880
the tile dim X here and then we do the

2131
01:47:49,340 --> 01:47:57,100
tiled my here and I think all of this

2132
01:47:52,880 --> 01:48:01,900
code works roughly the same as it should

2133
01:47:57,100 --> 01:48:05,360
with no real with nothing else really

2134
01:48:01,899 --> 01:48:08,839
problem attic in it so then we have to

2135
01:48:05,359 --> 01:48:11,569
just do this voxel offset nonsense just

2136
01:48:08,840 --> 01:48:14,750
needs to be changed slightly so all we

2137
01:48:11,569 --> 01:48:19,269
really have to do is just light atlas

2138
01:48:14,750 --> 01:48:24,590
offset well so I'm replacing voxel

2139
01:48:19,270 --> 01:48:27,170
offset see right actually and do this

2140
01:48:24,590 --> 01:48:33,199
even better so I'm gonna replace voxel

2141
01:48:27,170 --> 01:48:37,670
offset see parentheses with lighten

2142
01:48:33,199 --> 01:48:41,929
Atlas offset parentheses atlas comma

2143
01:48:37,670 --> 01:48:44,569
space and that will do what I want which

2144
01:48:41,930 --> 01:48:47,180
is to use a different offset here now

2145
01:48:44,569 --> 01:48:51,889
this code wants to be optimized to not

2146
01:48:47,180 --> 01:48:53,750
use so many offset calls that's a

2147
01:48:51,890 --> 01:48:57,530
separate issue that we'll get to in a

2148
01:48:53,750 --> 01:48:58,359
minute but basically other than that you

2149
01:48:57,529 --> 01:49:02,779
know we're okay

2150
01:48:58,359 --> 01:49:04,579
whoops we'll we'll figure that out so

2151
01:49:02,779 --> 01:49:06,380
anyway looking at the light atlas code

2152
01:49:04,579 --> 01:49:08,269
where we have this stuff we don't need

2153
01:49:06,380 --> 01:49:10,310
two of these now all we really need is

2154
01:49:08,270 --> 01:49:15,530
the fact that this is a light Atlas

2155
01:49:10,310 --> 01:49:17,120
offset and that you pass an Atlas should

2156
01:49:15,529 --> 01:49:20,149
give you all the information that you

2157
01:49:17,119 --> 01:49:21,859
actually need so now in here we just

2158
01:49:20,149 --> 01:49:23,539
need to fill in these dimensions with

2159
01:49:21,859 --> 01:49:26,719
the correct dimensions that you're

2160
01:49:23,539 --> 01:49:29,720
actually trying to pull from and off we

2161
01:49:26,720 --> 01:49:32,770
go so you know we'd want to say

2162
01:49:29,720 --> 01:49:32,770
something like this

2163
01:49:35,039 --> 01:49:50,380
like all of these are gonna be off of

2164
01:49:37,539 --> 01:49:52,000
the Atlas right like so and all of them

2165
01:49:50,380 --> 01:49:55,119
are going to want to be the correct

2166
01:49:52,000 --> 01:50:00,189
thing so if you take a look here the

2167
01:49:55,119 --> 01:50:02,890
like the hot dim in this case is talking

2168
01:50:00,189 --> 01:50:05,019
about the voxel dim and it's talking

2169
01:50:02,890 --> 01:50:08,409
about the voxel Jim Xbox lived in why

2170
01:50:05,020 --> 01:50:12,810
because it's the Z sheet this is talking

2171
01:50:08,408 --> 01:50:15,329
about the tiled MX and the tile dim line

2172
01:50:12,810 --> 01:50:21,670
because that's the size of one of those

2173
01:50:15,329 --> 01:50:24,939
tiles then we're talking about in here

2174
01:50:21,670 --> 01:50:28,840
for a wide sheet that's actually going

2175
01:50:24,939 --> 01:50:32,349
to be the X I guess is how much you'd be

2176
01:50:28,840 --> 01:50:33,579
going let me just make sure I've got all

2177
01:50:32,350 --> 01:50:38,140
this in here this is a pretty

2178
01:50:33,579 --> 01:50:40,420
complicated thing so if you take a look

2179
01:50:38,140 --> 01:50:46,690
at x times obviously x is going to have

2180
01:50:40,420 --> 01:50:51,869
to go by tile dim X's right so that

2181
01:50:46,689 --> 01:50:57,250
one's easy Y is going to have to go by

2182
01:50:51,869 --> 01:51:00,488
tile dim X's as well right and it's

2183
01:50:57,250 --> 01:51:04,689
going to have to go by voxel dim X of

2184
01:51:00,488 --> 01:51:07,658
those the text Y is actually going to

2185
01:51:04,689 --> 01:51:11,309
have to go a whole row down so that's

2186
01:51:07,658 --> 01:51:24,000
actually going to be the tile dim x

2187
01:51:11,310 --> 01:51:24,000
times the tile dim Y times I'm sorry I

2188
01:51:24,238 --> 01:51:27,718
said that wrong

2189
01:51:27,949 --> 01:51:41,149
box load MX times the voxel inline and

2190
01:51:35,609 --> 01:51:44,489
then finally times the tile dim X right

2191
01:51:41,149 --> 01:51:51,149
so I think that's the correct like code

2192
01:51:44,489 --> 01:51:53,250
for an Atlas offset and so finally in

2193
01:51:51,149 --> 01:51:54,989
here where we're looking at a particular

2194
01:51:53,250 --> 01:51:57,449
where we're filling in light Atlas

2195
01:51:54,989 --> 01:51:59,429
border in this case we need to tell it

2196
01:51:57,449 --> 01:52:04,229
which of the ones we were looking at

2197
01:51:59,430 --> 01:52:14,010
right and that's just a straight pass

2198
01:52:04,229 --> 01:52:39,269
through yeah so I think that's all we

2199
01:52:14,010 --> 01:52:40,829
really need all right that's wrong okay

2200
01:52:39,270 --> 01:52:43,830
so that should do it

2201
01:52:40,829 --> 01:52:53,970
and I don't know why I keep typing time

2202
01:52:43,829 --> 01:52:56,489
dim no real reason so then when we get

2203
01:52:53,970 --> 01:52:58,699
down to actually filling these we just

2204
01:52:56,489 --> 01:53:01,889
need to pass which one we're filling

2205
01:52:58,699 --> 01:53:03,510
which is pretty simple and then when

2206
01:53:01,890 --> 01:53:05,190
we're working with these things here any

2207
01:53:03,510 --> 01:53:06,420
other place we use light out let's

2208
01:53:05,189 --> 01:53:07,799
offset we just have to talk about which

2209
01:53:06,420 --> 01:53:11,060
one we're actually using so in this case

2210
01:53:07,800 --> 01:53:15,300
it's the diffuse Atlas and off we go

2211
01:53:11,060 --> 01:53:18,450
so for the rest of this stuff now we get

2212
01:53:15,300 --> 01:53:24,510
into the nasty part of things let me go

2213
01:53:18,449 --> 01:53:25,679
ahead and also just in here for building

2214
01:53:24,510 --> 01:53:30,140
the direction out of what we're looping

2215
01:53:25,680 --> 01:53:30,140
over in this case

2216
01:53:35,000 --> 01:53:37,770
excuse me

2217
01:53:36,539 --> 01:53:40,260
in this case we're trying to talk about

2218
01:53:37,770 --> 01:53:41,880
the incoming direction and so the

2219
01:53:40,260 --> 01:53:43,110
incoming direction so you can see each

2220
01:53:41,880 --> 01:53:45,150
of these they're gonna be different

2221
01:53:43,109 --> 01:53:46,829
light atlases so this one for the

2222
01:53:45,149 --> 01:53:51,899
outgoing that's going to be the diffuse

2223
01:53:46,829 --> 01:53:54,449
Atlas and that's going to be its what

2224
01:53:51,899 --> 01:54:06,089
did we call this it was the o XY

2225
01:53:54,449 --> 01:54:09,300
coefficient like so and so in this case

2226
01:54:06,090 --> 01:54:12,270
we just need to compute this value and

2227
01:54:09,300 --> 01:54:15,600
it needs to be computed based on those

2228
01:54:12,270 --> 01:54:21,230
two things so we need the diffuse Atlas

2229
01:54:15,600 --> 01:54:24,810
and the speck Atlas to be passed in

2230
01:54:21,229 --> 01:54:27,269
excuse me and then when we actually

2231
01:54:24,810 --> 01:54:28,890
prepare these we can do the same thing

2232
01:54:27,270 --> 01:54:33,420
so in this case we can say like the

2233
01:54:28,890 --> 01:54:37,440
diffuse Atlas tiled my and the diffuse

2234
01:54:33,420 --> 01:54:41,970
Atlas tile dim X and then in this case

2235
01:54:37,439 --> 01:54:47,269
it's the speck Atlas tile dim Y and the

2236
01:54:41,970 --> 01:54:53,220
speck Atlas tile dim X and then I think

2237
01:54:47,270 --> 01:54:55,440
that's that's everything right so the

2238
01:54:53,220 --> 01:54:57,810
problem that we then run into obviously

2239
01:54:55,439 --> 01:54:59,789
is we have sort of this issue where we

2240
01:54:57,810 --> 01:55:03,120
don't actually know how big these things

2241
01:54:59,789 --> 01:55:05,039
are going to be so we have no idea what

2242
01:55:03,119 --> 01:55:06,720
we should actually be doing here and if

2243
01:55:05,039 --> 01:55:08,609
you assume that we were able to change

2244
01:55:06,720 --> 01:55:10,079
these at runtime which you know at the

2245
01:55:08,609 --> 01:55:12,389
moment we don't actually allow you to do

2246
01:55:10,079 --> 01:55:13,769
but if you could you could see where

2247
01:55:12,390 --> 01:55:15,690
we'd be in big trouble because we don't

2248
01:55:13,770 --> 01:55:20,420
actually have a way of coping with that

2249
01:55:15,689 --> 01:55:23,489
right so I guess what I would say is the

2250
01:55:20,420 --> 01:55:25,500
only they can really think of is we can

2251
01:55:23,489 --> 01:55:33,179
either compute it every time it changes

2252
01:55:25,500 --> 01:55:35,779
right and that seems sane trying to get

2253
01:55:33,180 --> 01:55:35,780
what else we could do

2254
01:55:45,939 --> 01:55:50,889
I mean I really can't think of anything

2255
01:55:48,130 --> 01:55:52,868
else we could really do there so I mean

2256
01:55:50,889 --> 01:55:54,309
I don't know what else I don't know what

2257
01:55:52,868 --> 01:56:00,009
else to do there other than yeah like

2258
01:55:54,309 --> 01:56:01,269
just computed anytime it changes or

2259
01:56:00,010 --> 01:56:03,208
something like that and for the moment

2260
01:56:01,269 --> 01:56:07,059
we don't really have to care right

2261
01:56:03,208 --> 01:56:14,078
because it will do the right thing in

2262
01:56:07,059 --> 01:56:15,579
this case but so like you know in begin

2263
01:56:14,078 --> 01:56:18,759
lighting computation for example we

2264
01:56:15,578 --> 01:56:21,368
could compute it if it had changed

2265
01:56:18,760 --> 01:56:23,110
if those dimensions had changed or just

2266
01:56:21,368 --> 01:56:24,759
every frame if we're just being sloppy

2267
01:56:23,109 --> 01:56:26,228
because it really won't amount to much

2268
01:56:24,760 --> 01:56:31,179
compared to the rest of the stuff we

2269
01:56:26,229 --> 01:56:34,179
have to do it's not that bad right but

2270
01:56:31,179 --> 01:56:35,618
we do want to figure it out so I'm not

2271
01:56:34,179 --> 01:56:41,979
sure exactly what I want to do there

2272
01:56:35,618 --> 01:56:54,029
right like I don't know it's tough to

2273
01:56:41,979 --> 01:56:54,030
say for now we're going to do it here

2274
01:56:56,309 --> 01:57:01,559
and then we'll take a look at it later

2275
01:57:20,210 --> 01:57:42,359
so get light atlas texels so it looks

2276
01:57:40,738 --> 01:57:44,789
like we didn't include the C file which

2277
01:57:42,359 --> 01:57:49,170
I guess makes sense I may have not put

2278
01:57:44,789 --> 01:57:51,448
the actual Jimmy I may have not put the

2279
01:57:49,170 --> 01:57:53,699
actual C file in here so we may want to

2280
01:57:51,448 --> 01:57:57,329
go ahead and do like a handmade light

2281
01:57:53,698 --> 01:58:01,099
atlas dot CPP like so it doesn't really

2282
01:57:57,329 --> 01:58:04,649
matter where we put that one there we go

2283
01:58:01,100 --> 01:58:06,420
so now we are at least compiling but

2284
01:58:04,649 --> 01:58:08,159
this isn't actually correct if we ran

2285
01:58:06,420 --> 01:58:10,079
this it would just kind of roll over and

2286
01:58:08,159 --> 01:58:12,448
die the reason for that is we have these

2287
01:58:10,079 --> 01:58:14,819
light box will cells and they're not the

2288
01:58:12,448 --> 01:58:16,619
right none of this is the right

2289
01:58:14,819 --> 01:58:20,099
information you know what I mean

2290
01:58:16,619 --> 01:58:23,760
so we're currently just kind of worked a

2291
01:58:20,100 --> 01:58:25,110
little bit if you look at what's

2292
01:58:23,760 --> 01:58:26,969
happening here it kind of looks like

2293
01:58:25,109 --> 01:58:28,289
it's still working and you know I guess

2294
01:58:26,969 --> 01:58:30,060
I'm surprised it's working as well as it

2295
01:58:28,289 --> 01:58:33,269
is I guess we did a very good job of

2296
01:58:30,060 --> 01:58:35,370
that port so maybe it's not as bad as I

2297
01:58:33,270 --> 01:58:37,170
thought but my point is it's not doing

2298
01:58:35,369 --> 01:58:38,670
the right thing at all so it's not

2299
01:58:37,170 --> 01:58:40,469
actually sampling from the correct map

2300
01:58:38,670 --> 01:58:44,940
it's still using these light voxel cells

2301
01:58:40,469 --> 01:58:47,100
and we need to so go ahead and finish

2302
01:58:44,939 --> 01:58:48,779
that change since we are out of time

2303
01:58:47,100 --> 01:58:51,270
I'll end it there for today tomorrow

2304
01:58:48,779 --> 01:58:53,609
what we'll do is we'll actually go

2305
01:58:51,270 --> 01:58:55,830
through and pull from the correct Maps

2306
01:58:53,609 --> 01:58:59,819
so we'll get rid of using the light

2307
01:58:55,829 --> 01:59:01,680
voxel cell and that'll be the change

2308
01:58:59,819 --> 01:59:03,539
that finally puts us in sort of a nice

2309
01:59:01,680 --> 01:59:05,010
streamlined position where everyone's

2310
01:59:03,539 --> 01:59:07,920
using the correct map reading and

2311
01:59:05,010 --> 01:59:10,140
writing from the correct maps and that's

2312
01:59:07,920 --> 01:59:12,480
then we'll get to see like okay as we

2313
01:59:10,140 --> 01:59:14,400
tune the lighting a little bit how good

2314
01:59:12,479 --> 01:59:17,579
can we get it you know what does it look

2315
01:59:14,399 --> 01:59:22,409
like I'm encouraged again by how good

2316
01:59:17,579 --> 01:59:25,109
this one looks using just specular it's

2317
01:59:22,409 --> 01:59:27,920
not great it needs some work but it's

2318
01:59:25,109 --> 01:59:31,229
better than I would have expected right

2319
01:59:27,920 --> 01:59:34,770
so you know

2320
01:59:31,229 --> 01:59:35,699
it's at least encouraging but but we

2321
01:59:34,770 --> 01:59:36,870
don't know how good it's going to be

2322
01:59:35,699 --> 01:59:49,189
till we actually play around a little

2323
01:59:36,869 --> 01:59:49,189
bit more let's go ahead and go to Q&amp;A

2324
01:59:53,479 --> 01:59:56,609
[Music]

2325
02:00:04,618 --> 02:00:10,130
the heck oh the control keys held down

2326
02:00:14,810 --> 02:00:17,989
there we go

2327
02:00:36,269 --> 02:00:40,800
oh so I can answer the question about VC

2328
02:00:38,670 --> 02:00:41,989
runtime afforded us oh no we don't use

2329
02:00:40,800 --> 02:00:45,989
any dll's

2330
02:00:41,988 --> 02:00:48,149
that we didn't write ourselves we do use

2331
02:00:45,988 --> 02:00:53,308
the sine and cosine functions from the

2332
02:00:48,149 --> 02:00:55,018
static CRT but we will replace those

2333
02:00:53,309 --> 02:00:58,409
eventually too but right now we don't

2334
02:00:55,019 --> 02:01:14,489
load any non system DLL so we don't use

2335
02:00:58,408 --> 02:01:18,170
VC runtime 140 DLL so like sure where

2336
02:01:14,488 --> 02:01:18,169
the depends function is here

2337
02:01:23,539 --> 02:01:29,329
I don't know how well these things work

2338
02:01:27,529 --> 02:01:31,670
Microsoft has made it almost impossible

2339
02:01:29,329 --> 02:01:33,859
for any of this stuff to be any good

2340
02:01:31,670 --> 02:01:36,829
like because they've made their runtime

2341
02:01:33,859 --> 02:01:38,389
linking so incredibly janky that even

2342
02:01:36,829 --> 02:01:40,159
just analyzing something to find out

2343
02:01:38,390 --> 02:01:42,170
what it depends on is incredibly hard

2344
02:01:40,159 --> 02:01:44,029
that's how bad Windows is these days

2345
02:01:42,170 --> 02:01:45,319
it's really bad this is why you should

2346
02:01:44,029 --> 02:01:47,029
never use any of the new stuff like

2347
02:01:45,319 --> 02:01:48,979
manifests your side-by-side assemblies

2348
02:01:47,029 --> 02:01:51,590
or anything it's just a disaster really

2349
02:01:48,979 --> 02:01:52,669
really bad they've done a terrible job

2350
02:01:51,590 --> 02:01:55,819
they should have stuck with the original

2351
02:01:52,670 --> 02:02:00,220
DLL system for the faults that it

2352
02:01:55,819 --> 02:02:03,619
actually has it's still way better than

2353
02:02:00,220 --> 02:02:06,560
what they replaced it with so here's

2354
02:02:03,619 --> 02:02:10,039
1/32 handmade and you can see what the

2355
02:02:06,560 --> 02:02:13,700
import libraries are and you can see it

2356
02:02:10,039 --> 02:02:14,510
you know it's just GDI kernel user and

2357
02:02:13,699 --> 02:02:17,510
win mmm

2358
02:02:14,510 --> 02:02:19,159
so it's only just the system libraries

2359
02:02:17,510 --> 02:02:20,720
we need to call this is the entirety of

2360
02:02:19,159 --> 02:02:24,710
everything all of our external

2361
02:02:20,720 --> 02:02:33,409
dependencies right and we can also look

2362
02:02:24,710 --> 02:02:37,310
at the runtime hmm dll's so if we look

2363
02:02:33,409 --> 02:02:40,609
at like the game dll's like like this

2364
02:02:37,310 --> 02:02:43,940
right you can see the imports here and

2365
02:02:40,609 --> 02:02:46,429
they're basically the same right

2366
02:02:43,939 --> 02:02:48,529
it's just kernel32 and nothing else

2367
02:02:46,430 --> 02:02:51,440
because we just you call through the

2368
02:02:48,529 --> 02:02:54,829
platform layer and finally if you look

2369
02:02:51,439 --> 02:03:00,229
at the renderer dll that's just gonna

2370
02:02:54,829 --> 02:03:02,930
have OpenGL right as you can see up in

2371
02:03:00,229 --> 02:03:04,789
jail and then obviously GDI kernel and

2372
02:03:02,930 --> 02:03:07,400
user because it needs to access like the

2373
02:03:04,789 --> 02:03:10,519
window functions so we are pretty much

2374
02:03:07,399 --> 02:03:13,489
we're a third party library completely

2375
02:03:10,520 --> 02:03:14,930
free the only thing we still use is the

2376
02:03:13,489 --> 02:03:16,519
sine and cosine routines that were

2377
02:03:14,930 --> 02:03:19,010
written for this the standard library

2378
02:03:16,520 --> 02:03:23,180
wrote so we need to write our own of

2379
02:03:19,010 --> 02:03:28,300
those and then we're 100% clean like

2380
02:03:23,180 --> 02:03:28,300
literally no non our code period

2381
02:03:41,219 --> 02:03:45,819
do you know why some games require to

2382
02:03:43,630 --> 02:03:46,900
restart if you change graph settings is

2383
02:03:45,819 --> 02:03:48,729
because they can't reload different

2384
02:03:46,899 --> 02:03:50,259
textures runtime it's not usually

2385
02:03:48,729 --> 02:03:51,968
because they can't reload textures at

2386
02:03:50,260 --> 02:03:55,329
runtime although some games that may be

2387
02:03:51,969 --> 02:03:57,390
true it's usually just because look they

2388
02:03:55,329 --> 02:04:01,630
didn't want to have to do the work of

2389
02:03:57,390 --> 02:04:03,640
making everything properly track what

2390
02:04:01,630 --> 02:04:06,670
dependencies there are on those things

2391
02:04:03,640 --> 02:04:07,960
so for example let's suppose that you

2392
02:04:06,670 --> 02:04:11,649
know you've got a bunch of variables

2393
02:04:07,960 --> 02:04:12,939
that are due right we have a bunch of

2394
02:04:11,649 --> 02:04:14,920
variables that are dependent on things

2395
02:04:12,939 --> 02:04:17,408
that have to do with the graphics

2396
02:04:14,920 --> 02:04:18,819
subsystem and we've actually done a

2397
02:04:17,408 --> 02:04:19,988
pretty decent job of passing those

2398
02:04:18,819 --> 02:04:21,880
through so that you can actually change

2399
02:04:19,988 --> 02:04:24,309
a fair number of them at runtime it just

2400
02:04:21,880 --> 02:04:26,829
works but there are some that we

2401
02:04:24,310 --> 02:04:27,850
probably don't and in fact like one of

2402
02:04:26,829 --> 02:04:29,170
the things would be like let's say we

2403
02:04:27,850 --> 02:04:31,060
didn't want to actually have a thing

2404
02:04:29,170 --> 02:04:34,750
that detects like we just looked at that

2405
02:04:31,060 --> 02:04:37,840
diffuse blur coefficient right that

2406
02:04:34,750 --> 02:04:39,819
matrix if you just didn't do the work of

2407
02:04:37,840 --> 02:04:41,739
tracking the change on that then you

2408
02:04:39,819 --> 02:04:44,439
can't change it at runtime you have to

2409
02:04:41,738 --> 02:04:46,000
you know restart the game and compute it

2410
02:04:44,439 --> 02:04:48,729
at in it time which is where it gets

2411
02:04:46,000 --> 02:04:50,469
computed right or something so usually

2412
02:04:48,729 --> 02:04:52,839
what happens is game developers and

2413
02:04:50,469 --> 02:04:54,730
rightly so don't want to bother because

2414
02:04:52,840 --> 02:04:56,710
it's not really something you need to do

2415
02:04:54,729 --> 02:04:58,658
like people don't need to be able to

2416
02:04:56,710 --> 02:05:01,600
change 100% of their graphics settings

2417
02:04:58,658 --> 02:05:02,649
on the fly so typically what they'll do

2418
02:05:01,600 --> 02:05:04,630
is they'll say look we just don't want

2419
02:05:02,649 --> 02:05:07,799
to deal with having to make sure all of

2420
02:05:04,630 --> 02:05:10,750
that code is dynamically responsive and

2421
02:05:07,800 --> 02:05:12,340
doesn't introduce bugs when you do it so

2422
02:05:10,750 --> 02:05:13,899
it's usually just safer for them to say

2423
02:05:12,340 --> 02:05:15,340
look if you want to change any kind of

2424
02:05:13,899 --> 02:05:18,369
coregraphics setting just restart the

2425
02:05:15,340 --> 02:05:20,020
game and I respect that because it's not

2426
02:05:18,369 --> 02:05:23,229
a great place to spend your time it

2427
02:05:20,020 --> 02:05:25,480
requires extra engineering to clean all

2428
02:05:23,229 --> 02:05:28,928
of those paths completely and test them

2429
02:05:25,479 --> 02:05:30,279
so it just like don't bother now I

2430
02:05:28,929 --> 02:05:31,658
totally respect people to go the extra

2431
02:05:30,279 --> 02:05:33,579
mile and let you do it it's great

2432
02:05:31,658 --> 02:05:35,170
engineering to support that but you know

2433
02:05:33,579 --> 02:05:36,488
it's Engineering that comes at a cost

2434
02:05:35,170 --> 02:05:42,310
because it means you weren't doing

2435
02:05:36,488 --> 02:05:44,169
something else why don't all studios use

2436
02:05:42,310 --> 02:05:45,960
the dynamic DLL loading it's the best

2437
02:05:44,170 --> 02:05:48,719
thing ever right the reason is because

2438
02:05:45,960 --> 02:05:51,039
especially if you're like a C++ nonsense

2439
02:05:48,719 --> 02:05:53,050
engine where you have like all this

2440
02:05:51,039 --> 02:05:54,279
garbage all over the place you actually

2441
02:05:53,050 --> 02:05:55,900
can't do it so

2442
02:05:54,279 --> 02:05:57,819
one of the things the reasons that we

2443
02:05:55,899 --> 02:05:59,078
can do it so easily is because we have

2444
02:05:57,819 --> 02:06:01,118
relatively clean code that uses

2445
02:05:59,078 --> 02:06:03,250
relatively clean allocation strategy if

2446
02:06:01,118 --> 02:06:04,808
you have a nonsense allocation strategy

2447
02:06:03,250 --> 02:06:06,939
all this stuff goes out the window right

2448
02:06:04,809 --> 02:06:08,679
because you've just got people calling

2449
02:06:06,939 --> 02:06:10,210
stuff all over the place and you've got

2450
02:06:08,679 --> 02:06:12,340
V tables everywhere and all this other

2451
02:06:10,210 --> 02:06:16,779
stuff that can create all kinds of

2452
02:06:12,340 --> 02:06:18,819
problems for you and so C code it's very

2453
02:06:16,779 --> 02:06:20,500
usually very easy to take C code and

2454
02:06:18,819 --> 02:06:23,439
make it hot reloadable C++ code is not

2455
02:06:20,500 --> 02:06:25,000
that way and so usually what it means is

2456
02:06:23,439 --> 02:06:31,000
they just didn't it's just probably too

2457
02:06:25,000 --> 02:06:32,078
hard for them to add write C forget to

2458
02:06:31,000 --> 02:06:35,529
upload the previous episode of YouTube

2459
02:06:32,078 --> 02:06:38,130
no we just didn't do one on Sunday we

2460
02:06:35,529 --> 02:06:40,149
didn't actually end up coding on Sunday

2461
02:06:38,130 --> 02:06:42,010
they play us to open source the code

2462
02:06:40,149 --> 02:06:43,839
yeah we pre announced when we started

2463
02:06:42,010 --> 02:06:45,280
the series that the code will get

2464
02:06:43,840 --> 02:06:52,020
released from the public domain two

2465
02:06:45,279 --> 02:06:56,969
years after the game ships so it will be

2466
02:06:52,020 --> 02:06:56,969
released eventually but not anytime soon

2467
02:06:59,340 --> 02:07:02,889
pledged in advance if this was already

2468
02:07:01,630 --> 02:07:04,090
answered previously but is there

2469
02:07:02,889 --> 02:07:09,010
particular reason you use structs and

2470
02:07:04,090 --> 02:07:10,029
global functions instead of classes so

2471
02:07:09,010 --> 02:07:14,050
there's a couple of reasons

2472
02:07:10,029 --> 02:07:16,269
I guess maybe two reasons one is

2473
02:07:14,050 --> 02:07:20,079
obviously the word class as meaningless

2474
02:07:16,270 --> 02:07:21,460
doesn't do anything in C++ it was I

2475
02:07:20,078 --> 02:07:24,069
don't even know why they have it

2476
02:07:21,460 --> 02:07:25,899
it's a stupid a stupid idea a class is

2477
02:07:24,069 --> 02:07:27,488
just a struct or equivalent the only

2478
02:07:25,899 --> 02:07:30,009
difference between the two is a struct

2479
02:07:27,488 --> 02:07:31,509
starts out with a default public : and a

2480
02:07:30,010 --> 02:07:34,270
class starts out with a default private

2481
02:07:31,510 --> 02:07:36,730
: and what's absolutely hilarious to me

2482
02:07:34,270 --> 02:07:38,949
it literally cracks me up every time I

2483
02:07:36,729 --> 02:07:43,348
see it cuz I'm just like do you even

2484
02:07:38,948 --> 02:07:43,348
program bro is like I see this

2485
02:07:45,460 --> 02:07:53,770
right if you type that you could have

2486
02:07:48,909 --> 02:07:55,689
just typed this I don't know it's like

2487
02:07:53,770 --> 02:07:59,260
they're just like yeah man we literally

2488
02:07:55,689 --> 02:08:01,239
just don't care you know it blows my

2489
02:07:59,260 --> 02:08:03,220
mind so anyway like in terms of the

2490
02:08:01,239 --> 02:08:05,800
literal word why do I use struct instead

2491
02:08:03,220 --> 02:08:08,500
of class the reason is because what I'm

2492
02:08:05,800 --> 02:08:10,690
actually defining is a thing where I

2493
02:08:08,500 --> 02:08:12,520
want all the members to be public and so

2494
02:08:10,689 --> 02:08:19,059
it seems kind of stupid to type class

2495
02:08:12,520 --> 02:08:21,190
blah Open bracket public : right but the

2496
02:08:19,060 --> 02:08:22,539
broader question of why don't I use like

2497
02:08:21,189 --> 02:08:23,829
classes with member functions and

2498
02:08:22,539 --> 02:08:26,369
virtual functions that sort of stuff

2499
02:08:23,829 --> 02:08:29,019
it's just because I find that to be a

2500
02:08:26,369 --> 02:08:31,149
poor way of structuring and thinking

2501
02:08:29,020 --> 02:08:33,490
about your program and the reason that I

2502
02:08:31,149 --> 02:08:34,689
say that is because I've always said

2503
02:08:33,489 --> 02:08:35,979
this the problem I think with

2504
02:08:34,689 --> 02:08:37,179
object-oriented programming the reason I

2505
02:08:35,979 --> 02:08:39,369
don't like it the reason I don't do it

2506
02:08:37,180 --> 02:08:41,320
is not because there's anything wrong

2507
02:08:39,369 --> 02:08:43,869
with certain things that you might want

2508
02:08:41,319 --> 02:08:46,000
to do such as creating API boundaries or

2509
02:08:43,869 --> 02:08:50,470
encapsulation or any of these sorts of

2510
02:08:46,000 --> 02:08:52,420
things right because every programming

2511
02:08:50,470 --> 02:08:55,360
technique tends to have a place where it

2512
02:08:52,420 --> 02:08:57,130
makes sense and I don't want to

2513
02:08:55,359 --> 02:08:58,479
disparage a particular technique the

2514
02:08:57,130 --> 02:09:01,690
problem with a burny programming is the

2515
02:08:58,479 --> 02:09:03,489
phrase and the mindset so creating a

2516
02:09:01,689 --> 02:09:05,529
class and thinking that I put member

2517
02:09:03,489 --> 02:09:06,969
functions in a class that is just

2518
02:09:05,529 --> 02:09:09,189
fundamentally incorrect way to structure

2519
02:09:06,970 --> 02:09:11,590
a program period in my opinion the

2520
02:09:09,189 --> 02:09:14,349
reason for that is that I don't feel

2521
02:09:11,590 --> 02:09:16,750
like algorithms ever operate on one

2522
02:09:14,350 --> 02:09:20,170
thing they operate between two things

2523
02:09:16,750 --> 02:09:23,439
typically and you always want to think

2524
02:09:20,170 --> 02:09:26,230
about that pipeline as the primary thing

2525
02:09:23,439 --> 02:09:29,739
and so most of your functions should be

2526
02:09:26,229 --> 02:09:32,349
operating across structures not within

2527
02:09:29,739 --> 02:09:33,729
them and if most of your functions

2528
02:09:32,350 --> 02:09:35,620
operate within structures you've

2529
02:09:33,729 --> 02:09:37,899
probably screwed something up and you're

2530
02:09:35,619 --> 02:09:39,309
probably very inefficient which by the

2531
02:09:37,899 --> 02:09:40,869
way is how most opportunity of

2532
02:09:39,310 --> 02:09:42,340
programming looks to me when I look I'm

2533
02:09:40,869 --> 02:09:44,470
like that is a very inefficient way you

2534
02:09:42,340 --> 02:09:45,640
just wrote that and I can see why it's

2535
02:09:44,470 --> 02:09:46,869
because you were thinking that things

2536
02:09:45,640 --> 02:09:49,360
should be contained inside class

2537
02:09:46,869 --> 02:09:50,739
boundaries so I really really really

2538
02:09:49,359 --> 02:09:52,869
really like to emphasize the fact that

2539
02:09:50,739 --> 02:09:54,279
that's actually very bad now it doesn't

2540
02:09:52,869 --> 02:09:55,779
mean that once in awhile you don't end

2541
02:09:54,279 --> 02:09:57,729
up with something that can be completely

2542
02:09:55,779 --> 02:09:58,630
isolated within itself so for example

2543
02:09:57,729 --> 02:10:04,779
the techs

2544
02:09:58,630 --> 02:10:07,090
your Atlas thing we made today light

2545
02:10:04,779 --> 02:10:08,289
atlas rather this is an example of

2546
02:10:07,090 --> 02:10:10,119
something that could have been a class

2547
02:10:08,289 --> 02:10:12,429
if you'd want it to be right because it

2548
02:10:10,119 --> 02:10:15,309
happens to all be self-contained at the

2549
02:10:12,429 --> 02:10:17,529
moment and that may continue but the

2550
02:10:15,310 --> 02:10:20,020
crucial difference here and I really

2551
02:10:17,529 --> 02:10:23,500
want to emphasize this is that should be

2552
02:10:20,020 --> 02:10:24,820
the accidental case not the goal

2553
02:10:23,500 --> 02:10:26,319
so the problem with attribute

2554
02:10:24,819 --> 02:10:27,908
programming is they say that this is the

2555
02:10:26,319 --> 02:10:29,889
goal the goal is to end up with things

2556
02:10:27,908 --> 02:10:31,029
like this it's not when you end up with

2557
02:10:29,889 --> 02:10:32,819
something like this it's usually an

2558
02:10:31,029 --> 02:10:34,869
accident and it's usually very

2559
02:10:32,819 --> 02:10:36,429
inconsequential pieces of the code this

2560
02:10:34,869 --> 02:10:38,050
is irrelevant like this is not an

2561
02:10:36,429 --> 02:10:39,609
important part of our program it's tiny

2562
02:10:38,050 --> 02:10:41,050
and it's meaningless it's basically a

2563
02:10:39,609 --> 02:10:45,279
bunch of convenience functions to opt to

2564
02:10:41,050 --> 02:10:47,199
compute things right the goal of your

2565
02:10:45,279 --> 02:10:49,750
code should it be reduced clean data

2566
02:10:47,198 --> 02:10:50,309
pathways that work between multiple

2567
02:10:49,750 --> 02:10:53,829
Struck's

2568
02:10:50,310 --> 02:10:57,639
right and so what you really want to do

2569
02:10:53,829 --> 02:11:00,939
is get out of that mindset of I put

2570
02:10:57,639 --> 02:11:03,460
functions inside data structures because

2571
02:11:00,939 --> 02:11:06,039
functions should not be confined to data

2572
02:11:03,460 --> 02:11:08,109
stores that's a very very bad way it's

2573
02:11:06,039 --> 02:11:11,079
flipping the actual ways to think about

2574
02:11:08,109 --> 02:11:13,738
programming which is that data types are

2575
02:11:11,079 --> 02:11:15,488
things that are used by functions

2576
02:11:13,738 --> 02:11:17,408
instead you're thinking the other way

2577
02:11:15,488 --> 02:11:19,899
around as functions or things that are

2578
02:11:17,408 --> 02:11:22,149
used by data types very very bad mental

2579
02:11:19,899 --> 02:11:25,569
model so that's why I do it this way is

2580
02:11:22,149 --> 02:11:27,759
to you know remind everyone and to avoid

2581
02:11:25,569 --> 02:11:29,170
my own falling into a trap of thinking

2582
02:11:27,760 --> 02:11:31,320
that things should be lined up in that

2583
02:11:29,170 --> 02:11:31,319
way

2584
02:11:50,539 --> 02:11:54,260
I managed to extract CL XD for visual

2585
02:11:53,000 --> 02:11:55,609
studio but I can't redistribute it has

2586
02:11:54,260 --> 02:11:59,090
anyone been sued for redistributing the

2587
02:11:55,609 --> 02:12:00,710
free CL compiler so I don't know if

2588
02:11:59,090 --> 02:12:03,560
anyone has been sued but obviously

2589
02:12:00,710 --> 02:12:05,600
anyone could be sued so I guess what I

2590
02:12:03,560 --> 02:12:06,950
would say there is it's a copyrighted

2591
02:12:05,600 --> 02:12:08,630
program if you distribute it you are

2592
02:12:06,949 --> 02:12:10,779
opening yourself up to a lawsuit by

2593
02:12:08,630 --> 02:12:13,850
Microsoft should they choose to do that

2594
02:12:10,779 --> 02:12:15,679
at the very least I would say maybe try

2595
02:12:13,850 --> 02:12:23,360
to ask Microsoft specifically if they

2596
02:12:15,680 --> 02:12:25,010
mind you producing a bundle of that what

2597
02:12:23,359 --> 02:12:26,509
is your plan to ensure the orphanage our

2598
02:12:25,010 --> 02:12:28,130
hero Lisbon will have sufficient access

2599
02:12:26,510 --> 02:12:28,430
to paper products especially toilet

2600
02:12:28,130 --> 02:12:30,380
paper

2601
02:12:28,430 --> 02:12:31,820
how will hand-washing work in a world

2602
02:12:30,380 --> 02:12:34,609
where everything is handmade but the

2603
02:12:31,819 --> 02:12:38,509
children have no limbs so this is

2604
02:12:34,609 --> 02:12:41,299
actually an issue no question and that

2605
02:12:38,510 --> 02:12:43,550
is because limbless orphans which is

2606
02:12:41,300 --> 02:12:45,110
what we have in this game would have to

2607
02:12:43,550 --> 02:12:47,210
do everything with their mouths largely

2608
02:12:45,109 --> 02:12:50,599
which of course is a very bad disease

2609
02:12:47,210 --> 02:12:52,399
vector so I guess the way that I would

2610
02:12:50,600 --> 02:12:53,900
say it is it's very important that

2611
02:12:52,399 --> 02:12:57,619
people who interact with this orphanage

2612
02:12:53,899 --> 02:13:01,309
proper basically have very good hygiene

2613
02:12:57,619 --> 02:13:05,420
because otherwise they will definitely

2614
02:13:01,310 --> 02:13:06,590
have like you know issues with it like

2615
02:13:05,420 --> 02:13:07,760
basically have to just make sure you

2616
02:13:06,590 --> 02:13:10,340
have to do like what I'm doing right now

2617
02:13:07,760 --> 02:13:12,500
is just like not going outside right not

2618
02:13:10,340 --> 02:13:13,489
leaving the apartment so that basically

2619
02:13:12,500 --> 02:13:15,590
you know that you don't bring the

2620
02:13:13,489 --> 02:13:17,059
contagion in because once the contagions

2621
02:13:15,590 --> 02:13:17,600
in it's over there's nothing you can do

2622
02:13:17,060 --> 02:13:26,090
about it

2623
02:13:17,600 --> 02:13:27,680
right so well touching your face is fine

2624
02:13:26,090 --> 02:13:29,420
if you're not in an environment that has

2625
02:13:27,680 --> 02:13:33,700
any contagions around it right just

2626
02:13:29,420 --> 02:13:33,699
don't go outside and do that you know

2627
02:13:48,149 --> 02:13:51,729
moved from an array of light voxel cells

2628
02:13:50,470 --> 02:13:53,500
to a lighthouse that because of OpenGL

2629
02:13:51,729 --> 02:13:55,269
analysis or other yes sort of I

2630
02:13:53,500 --> 02:13:57,220
basically want to have one format

2631
02:13:55,270 --> 02:13:58,150
through the whole pipeline so before we

2632
02:13:57,220 --> 02:13:59,650
were storing these things in the light

2633
02:13:58,149 --> 02:14:01,359
box'll cells and that was a convenience

2634
02:13:59,649 --> 02:14:03,099
for us and instead I want to move to

2635
02:14:01,359 --> 02:14:06,489
everything sampling out of just just

2636
02:14:03,100 --> 02:14:09,280
flat atlases and that just allows us to

2637
02:14:06,489 --> 02:14:13,000
keep everything simpler removes code

2638
02:14:09,279 --> 02:14:15,189
types keep it simpler and also if we

2639
02:14:13,000 --> 02:14:16,630
need to offload this work to the GPU we

2640
02:14:15,189 --> 02:14:17,919
can because at least then all of our

2641
02:14:16,630 --> 02:14:23,500
code is just working with the same

2642
02:14:17,920 --> 02:14:26,170
concept the whole way right he's using

2643
02:14:23,500 --> 02:14:27,939
mm load PS and mm store PS more

2644
02:14:26,170 --> 02:14:31,960
efficient than just casting the floats

2645
02:14:27,939 --> 02:14:34,479
or accessing it through a union I guess

2646
02:14:31,960 --> 02:14:36,340
the answer would be so it's a little bit

2647
02:14:34,479 --> 02:14:37,539
complicated the answer is it really

2648
02:14:36,340 --> 02:14:41,079
depends on what the compiler chooses to

2649
02:14:37,539 --> 02:14:42,960
do so none of this matters at some level

2650
02:14:41,079 --> 02:14:47,739
because what's actually gonna happen is

2651
02:14:42,960 --> 02:14:50,649
there's going to be there's going to be

2652
02:14:47,739 --> 02:14:54,670
actual assembly language calls to move

2653
02:14:50,649 --> 02:14:57,849
the data out of the SSE registers into

2654
02:14:54,670 --> 02:14:59,640
memory one way or the other and what you

2655
02:14:57,850 --> 02:15:01,960
choose to tell the compiler to do is

2656
02:14:59,640 --> 02:15:03,400
going to help it potentially make a good

2657
02:15:01,960 --> 02:15:04,630
decision but at the end of the day you

2658
02:15:03,399 --> 02:15:07,449
can't control the compiler does the

2659
02:15:04,630 --> 02:15:09,699
compiler does what prado does so if you

2660
02:15:07,449 --> 02:15:12,849
cast a floats or access through a union

2661
02:15:09,699 --> 02:15:15,189
or anything else the compiler may or may

2662
02:15:12,850 --> 02:15:16,840
not know what you're doing and at some

2663
02:15:15,189 --> 02:15:18,819
point you may care about the performance

2664
02:15:16,840 --> 02:15:20,440
of that code and when you go look at the

2665
02:15:18,819 --> 02:15:23,380
disassembly you may see that compilers

2666
02:15:20,439 --> 02:15:25,449
made it a bad choice using the

2667
02:15:23,380 --> 02:15:27,640
intrinsics is a way of telling the

2668
02:15:25,449 --> 02:15:29,380
compiler what you were trying to do in a

2669
02:15:27,640 --> 02:15:31,060
cleaner way so it has a greater chance

2670
02:15:29,380 --> 02:15:33,010
of outputting the assembly language code

2671
02:15:31,060 --> 02:15:35,140
you actually wanted but that's all

2672
02:15:33,010 --> 02:15:36,760
that's happening there and if you really

2673
02:15:35,140 --> 02:15:38,170
want to do it right you have to write it

2674
02:15:36,760 --> 02:15:39,699
in assembly language anyway because

2675
02:15:38,170 --> 02:15:41,980
that's the only way to actually control

2676
02:15:39,699 --> 02:15:43,779
exactly what's happening so intrinsic

2677
02:15:41,979 --> 02:15:45,279
sar just hints to the compiler about

2678
02:15:43,779 --> 02:15:47,050
what a seminary you were trying to

2679
02:15:45,279 --> 02:15:48,659
generate in a way that makes it much

2680
02:15:47,050 --> 02:15:51,159
easier for the compiler to know as

2681
02:15:48,659 --> 02:15:52,329
opposed to if you just use like unions

2682
02:15:51,159 --> 02:15:54,189
or stuff for convenience which I do

2683
02:15:52,329 --> 02:15:55,300
sometimes but when I actually have to go

2684
02:15:54,189 --> 02:15:56,679
to opt by something that's usually the

2685
02:15:55,300 --> 02:15:57,850
case Copiah doesn't really know what you

2686
02:15:56,680 --> 02:15:59,230
were doing there and it will generate

2687
02:15:57,850 --> 02:16:01,110
like oh that's not as good or something

2688
02:15:59,229 --> 02:16:03,459
right

2689
02:16:01,109 --> 02:16:05,319
so that's really what's going on there

2690
02:16:03,460 --> 02:16:06,850
it has nothing to do with one or the

2691
02:16:05,319 --> 02:16:08,619
other being better it's more to select

2692
02:16:06,850 --> 02:16:10,360
look-sees not good at this

2693
02:16:08,619 --> 02:16:11,380
the intrinsics were a bad solution this

2694
02:16:10,359 --> 02:16:13,149
problem what we really needed was

2695
02:16:11,380 --> 02:16:15,609
language features that work with wide

2696
02:16:13,149 --> 02:16:17,589
vectors types like that and we don't

2697
02:16:15,609 --> 02:16:18,729
have them so at this point we're kind of

2698
02:16:17,590 --> 02:16:20,289
screwed and we just have to use these

2699
02:16:18,729 --> 02:16:21,729
intrinsics and so what you're trying to

2700
02:16:20,289 --> 02:16:23,948
do is basically tell the compiler what

2701
02:16:21,729 --> 02:16:25,929
you're doing in a way that that is easy

2702
02:16:23,948 --> 02:16:27,879
for it to generate good code and not

2703
02:16:25,930 --> 02:16:29,770
have to do all kinds of analysis that's

2704
02:16:27,880 --> 02:16:45,340
tricky and error-prone to figure out

2705
02:16:29,770 --> 02:16:47,500
what it was you were doing would you be

2706
02:16:45,340 --> 02:16:48,880
able to do give an intuitive geometric

2707
02:16:47,500 --> 02:16:50,500
explanation for what the adjoint matrix

2708
02:16:48,879 --> 02:16:52,388
abuse and why you need it for doing

2709
02:16:50,500 --> 02:16:55,450
generalized transforms on surface normal

2710
02:16:52,388 --> 02:16:57,329
vectors I mean yeah and I think I

2711
02:16:55,450 --> 02:17:00,370
already did

2712
02:16:57,329 --> 02:17:00,370
[Music]

2713
02:17:04,489 --> 02:17:18,840
so I want to see if you go to our search

2714
02:17:07,200 --> 02:17:27,230
here oh so I don't like the sound of

2715
02:17:18,840 --> 02:17:27,229
that so maybe I didn't

2716
02:17:48,079 --> 02:17:54,689
so this is the X the app so this is it

2717
02:17:50,879 --> 02:18:02,459
right here right if you go to day 101

2718
02:17:54,689 --> 02:18:04,050
this is it and you can see me like

2719
02:18:02,459 --> 02:18:05,818
transforming a geometric shape and you

2720
02:18:04,049 --> 02:18:07,829
can see how the normal doesn't transform

2721
02:18:05,818 --> 02:18:10,709
the same way that the points transform

2722
02:18:07,829 --> 02:18:13,849
and that's what the adjoint is for so

2723
02:18:10,709 --> 02:18:13,848
this I would go here

2724
02:18:26,120 --> 02:18:30,740
so I don't know if we actually got to

2725
02:18:28,638 --> 02:18:32,869
the adjoint matrix part of it we may not

2726
02:18:30,739 --> 02:18:37,100
have but that's the reason this is the

2727
02:18:32,870 --> 02:18:41,290
explanation we probably just never

2728
02:18:37,100 --> 02:18:41,290
called it an adjoint matrix so

2729
02:18:55,659 --> 02:19:01,659
so actually it's been a while since I've

2730
02:19:00,069 --> 02:19:08,850
looked at a linear algebra textbook is

2731
02:19:01,659 --> 02:19:08,850
this just the transpose though

2732
02:19:26,379 --> 02:19:30,609
can you just write the equation please

2733
02:19:46,318 --> 02:19:54,090
all right so whereas a math person can

2734
02:19:50,889 --> 02:19:57,038
someone please put the actual equation

2735
02:19:54,090 --> 02:20:00,279
in one line I guess it's not possible

2736
02:19:57,039 --> 02:20:04,270
probably on thing but normally you

2737
02:20:00,279 --> 02:20:05,800
transfer you normally when you transform

2738
02:20:04,270 --> 02:20:08,819
normals you transform normals by the

2739
02:20:05,799 --> 02:20:08,818
inverse transpose

2740
02:20:18,879 --> 02:20:22,059
you think using open jail for making

2741
02:20:20,889 --> 02:20:23,619
games is still fine for a couple years

2742
02:20:22,059 --> 02:20:27,069
I've heard John blow rant about it not

2743
02:20:23,620 --> 02:20:30,070
being valid API but not sure why I mean

2744
02:20:27,069 --> 02:20:31,629
it's not good and largely just because

2745
02:20:30,069 --> 02:20:35,350
there's been bad shepherding on that

2746
02:20:31,629 --> 02:20:37,269
part like I think opengl 4.5 especially

2747
02:20:35,350 --> 02:20:38,470
with the Nvidia extensions was a great

2748
02:20:37,270 --> 02:20:40,030
API I think someone should have

2749
02:20:38,469 --> 02:20:41,679
standardized on that removed all the

2750
02:20:40,030 --> 02:20:43,450
cruft and been like this is the new API

2751
02:20:41,680 --> 02:20:46,360
we've been way better than Vulcan would

2752
02:20:43,450 --> 02:20:49,300
have been as fast as Welkin but they

2753
02:20:46,360 --> 02:20:52,780
didn't do that and so the problem with

2754
02:20:49,299 --> 02:20:54,579
OpenGL it's just really sprawling and so

2755
02:20:52,780 --> 02:20:58,060
it's very unlikely to be supported

2756
02:20:54,579 --> 02:21:01,239
properly most of the time especially on

2757
02:20:58,059 --> 02:21:03,699
like Intel parts stuff like that and now

2758
02:21:01,239 --> 02:21:06,489
it's not supported on an Mac anymore so

2759
02:21:03,700 --> 02:21:08,470
you can't use it there so like Vulcan

2760
02:21:06,489 --> 02:21:11,439
OpenGL kind of useless should just get

2761
02:21:08,469 --> 02:21:12,639
thrown away probably at this point and I

2762
02:21:11,439 --> 02:21:19,450
think we're basically looking at a metal

2763
02:21:12,639 --> 02:21:20,859
D 3d world more or less unless someone's

2764
02:21:19,450 --> 02:21:23,530
ship and stuff on Linux which game

2765
02:21:20,860 --> 02:21:25,390
developers don't really need to do I

2766
02:21:23,530 --> 02:21:26,860
mean I would argue they shouldn't bother

2767
02:21:25,389 --> 02:21:28,299
shipping on Mac either so I think your

2768
02:21:26,860 --> 02:21:29,110
base looking at metal on iOS if you

2769
02:21:28,299 --> 02:21:33,159
really want to go to that platform

2770
02:21:29,110 --> 02:21:35,170
otherwise it's just a D 3d world now you

2771
02:21:33,159 --> 02:21:38,020
don't really need anything else I mean

2772
02:21:35,170 --> 02:21:44,340
you're shipping on Windows or you got to

2773
02:21:38,020 --> 02:21:44,340
write a custom thing for ps4 or Xbox so

2774
02:21:55,469 --> 02:22:00,418
Mac Apple does not support current

2775
02:21:57,779 --> 02:22:05,658
OpenGL they do not have a compliant like

2776
02:22:00,418 --> 02:22:05,658
4.6 implementation they absolutely don't

2777
02:22:11,889 --> 02:22:14,809
what do you think about the style of

2778
02:22:13,639 --> 02:22:16,010
using a bunch of defiance controller

2779
02:22:14,809 --> 02:22:18,350
generated code have it include for

2780
02:22:16,010 --> 02:22:20,180
things like libraries I think it's fine

2781
02:22:18,350 --> 02:22:21,590
the only problem with it is that it can

2782
02:22:20,180 --> 02:22:23,659
get kind of hairy and hard to maintain

2783
02:22:21,590 --> 02:22:27,859
but you know if you if you deploy it

2784
02:22:23,659 --> 02:22:30,020
judiciously it's fine do you take any

2785
02:22:27,859 --> 02:22:32,380
programming courses at college I didn't

2786
02:22:30,020 --> 02:22:32,380
go to college

2787
02:22:33,129 --> 02:22:37,398
Taylor towers on the Wikipedia page the

2788
02:22:35,450 --> 02:22:48,430
to point to the two-by-two generic

2789
02:22:37,398 --> 02:22:48,430
example this one

2790
02:23:08,129 --> 02:23:12,629
so the

2791
02:23:28,709 --> 02:23:34,000
so I want to say that this is not

2792
02:23:31,810 --> 02:23:55,050
exactly right

2793
02:23:34,000 --> 02:23:58,899
then so I guess it's kind of hard to say

2794
02:23:55,050 --> 02:24:01,659
like just thinking it through so like if

2795
02:23:58,899 --> 02:24:04,359
you look at what the matrix ends up

2796
02:24:01,659 --> 02:24:09,579
being for like an inverse matrix so

2797
02:24:04,360 --> 02:24:13,060
here's like 2x2 inverse right and so a

2798
02:24:09,579 --> 02:24:14,920
inverse here you know it equals this

2799
02:24:13,060 --> 02:24:17,591
analytic solution so you're looking at 1

2800
02:24:14,920 --> 02:24:23,591
over ad minus BC D negative B negative

2801
02:24:17,591 --> 02:24:24,970
CA right and if we look at the what

2802
02:24:23,591 --> 02:24:25,960
they're suggesting here and I like I

2803
02:24:24,970 --> 02:24:27,729
said this is just what it came through

2804
02:24:25,959 --> 02:24:29,289
for adjoint matrix which is just not it

2805
02:24:27,729 --> 02:24:30,761
says sometimes called adjoint so you

2806
02:24:29,290 --> 02:24:34,181
know let's assume that this Wikipedia

2807
02:24:30,761 --> 02:24:37,271
page is accurate if this is the actual

2808
02:24:34,181 --> 02:24:39,730
computation for it then if you look at

2809
02:24:37,271 --> 02:24:42,101
the two side-by-side I'll just explain

2810
02:24:39,729 --> 02:24:43,539
why I'm nervous about it and like I said

2811
02:24:42,101 --> 02:24:46,091
it's been a long time since I studied

2812
02:24:43,540 --> 02:24:48,221
that in algebra so take it with a grain

2813
02:24:46,091 --> 02:24:50,021
of salt I'm just telling you what it

2814
02:24:48,220 --> 02:24:54,670
looks like to me which is not

2815
02:24:50,021 --> 02:24:56,200
dispositive in any way so here's what

2816
02:24:54,670 --> 02:24:59,739
you know you'd expect the analytic

2817
02:24:56,200 --> 02:25:01,181
inverse to look like right and here's

2818
02:24:59,739 --> 02:25:05,949
what the adjoint

2819
02:25:01,181 --> 02:25:12,610
the ah to get matrix looks like right

2820
02:25:05,950 --> 02:25:16,329
and that's not even remotely what I

2821
02:25:12,610 --> 02:25:19,690
would expect it to look like like what I

2822
02:25:16,329 --> 02:25:21,310
would expect to see is for transforming

2823
02:25:19,690 --> 02:25:23,290
the normals I always want to see this

2824
02:25:21,310 --> 02:25:26,649
matrix but with the negative B and

2825
02:25:23,290 --> 02:25:34,091
negative C swapped this term would

2826
02:25:26,649 --> 02:25:36,220
remain here that is gone so maybe this

2827
02:25:34,091 --> 02:25:39,399
is not what they mean maybe they mean to

2828
02:25:36,220 --> 02:25:40,600
this or some I mean I don't know what

2829
02:25:39,399 --> 02:25:43,000
they mean I'm

2830
02:25:40,600 --> 02:25:44,619
not sure if I'm bet him if I'm reading

2831
02:25:43,000 --> 02:25:48,430
this right no it's like totally not

2832
02:25:44,619 --> 02:25:51,569
correct look it's not what you would

2833
02:25:48,430 --> 02:25:51,568
transform the normals by at all

2834
02:26:06,420 --> 02:26:11,280
so I don't know I mean it could be this

2835
02:26:08,579 --> 02:26:12,809
is just the wrong Wikipedia page but all

2836
02:26:11,280 --> 02:26:14,340
I wanted to say was like what I would

2837
02:26:12,809 --> 02:26:17,670
expect to see for transforming normals

2838
02:26:14,340 --> 02:26:19,549
is this matrix but transposed so you

2839
02:26:17,670 --> 02:26:21,809
know transpose of the matrix as you flip

2840
02:26:19,549 --> 02:26:23,579
along the diagonal right so the negative

2841
02:26:21,809 --> 02:26:25,619
B and negative C would swap and the same

2842
02:26:23,579 --> 02:26:27,329
would be true for any size matrix so if

2843
02:26:25,620 --> 02:26:30,360
you told me I had transformed normals

2844
02:26:27,329 --> 02:26:31,819
and three dimensions right watch that's

2845
02:26:30,360 --> 02:26:33,960
not true because normal is only really

2846
02:26:31,819 --> 02:26:35,520
you would have to go to buy vectors to

2847
02:26:33,959 --> 02:26:37,169
go above three dimensions anyway so this

2848
02:26:35,520 --> 02:26:38,430
all this stuff is not the way you would

2849
02:26:37,170 --> 02:26:39,780
even think about it at that point

2850
02:26:38,430 --> 02:26:40,950
but the point is like if you have a

2851
02:26:39,780 --> 02:26:43,890
three by three matrix you would do the

2852
02:26:40,950 --> 02:26:46,680
same thing so basically you would take a

2853
02:26:43,889 --> 02:26:49,500
look at what you got here

2854
02:26:46,680 --> 02:26:51,030
so you know you would you would compute

2855
02:26:49,500 --> 02:26:54,420
the 3x3 inverse and then you would

2856
02:26:51,030 --> 02:26:58,820
transpose it so the BCF and the DS DGH

2857
02:26:54,420 --> 02:26:58,819
would flip sides make sense

2858
02:27:10,610 --> 02:27:18,200
I don't have a Raspberry Pi for no why

2859
02:27:16,550 --> 02:27:23,500
would it support Vulcan instead of just

2860
02:27:18,200 --> 02:27:23,500
DX I have no idea you have to ask them

2861
02:27:25,841 --> 02:27:30,200
will you ship the game with debug GUI

2862
02:27:28,521 --> 02:27:31,431
Mike Acton said on GDC conference that

2863
02:27:30,200 --> 02:27:34,721
you should be able to debug the release

2864
02:27:31,431 --> 02:27:38,030
version of your game how do you do that

2865
02:27:34,720 --> 02:27:43,819
I'm sorry I don't really know what Mike

2866
02:27:38,030 --> 02:27:45,500
Acton said about that I'm I guess what I

2867
02:27:43,819 --> 02:27:48,020
would say is the release version of the

2868
02:27:45,500 --> 02:27:49,851
game can have bugs in it that are that

2869
02:27:48,021 --> 02:27:53,329
can't be found in like that don't show

2870
02:27:49,851 --> 02:27:55,101
up in a debug build so what I would say

2871
02:27:53,329 --> 02:27:57,261
and I have no idea what Mike said but

2872
02:27:55,101 --> 02:27:59,900
what I would say is you need to at least

2873
02:27:57,261 --> 02:28:02,960
make sure that when you're testing your

2874
02:27:59,899 --> 02:28:04,459
release build that if bugs come up you

2875
02:28:02,959 --> 02:28:06,979
have ways of tracking them down so you

2876
02:28:04,459 --> 02:28:09,979
can't remove 100% of the scaffolding

2877
02:28:06,979 --> 02:28:11,779
from your system because if you do you

2878
02:28:09,979 --> 02:28:12,949
won't be able to find those bugs now it

2879
02:28:11,780 --> 02:28:14,301
may be that you engineered your product

2880
02:28:12,950 --> 02:28:16,221
so it won't have those bugs that's

2881
02:28:14,300 --> 02:28:18,020
possible but whatever you do you need to

2882
02:28:16,220 --> 02:28:19,039
plan for that so that's what I would say

2883
02:28:18,021 --> 02:28:22,061
and I don't know if that's similar to

2884
02:28:19,040 --> 02:28:22,061
what Mike Acton said or not

2885
02:28:28,760 --> 02:28:31,908
all right

2886
02:28:42,359 --> 02:28:54,789
oops just make sure we're all saved up

2887
02:28:48,219 --> 02:28:56,078
here thank you everyone for joining me

2888
02:28:54,789 --> 02:28:58,209
for the notes on a handmade hero it's

2889
02:28:56,078 --> 02:29:02,078
been a pleasure coding with you as

2890
02:28:58,209 --> 02:29:03,129
always if you would like to following

2891
02:29:02,078 --> 02:29:04,449
series at home you can always peer to

2892
02:29:03,129 --> 02:29:05,770
the game on handmade hero org

2893
02:29:04,449 --> 02:29:08,229
it comes with a source code so you can

2894
02:29:05,770 --> 02:29:09,729
play around with it at home maybe you

2895
02:29:08,228 --> 02:29:11,559
can finish the lighting port we did

2896
02:29:09,728 --> 02:29:12,849
before I get to tomorrow it'd be good

2897
02:29:11,559 --> 02:29:15,639
practice because it's literally just

2898
02:29:12,850 --> 02:29:17,470
rote translation but it's meticulous so

2899
02:29:15,639 --> 02:29:20,318
you know and it's a good code cleanup

2900
02:29:17,469 --> 02:29:21,548
it's making the code better and less

2901
02:29:20,318 --> 02:29:23,198
fragile because we're actually

2902
02:29:21,549 --> 02:29:25,089
centralizing how a bunch of things are

2903
02:29:23,199 --> 02:29:26,970
done so it's a good thing to be in the

2904
02:29:25,088 --> 02:29:29,408
habit of doing and knowing how to do

2905
02:29:26,969 --> 02:29:30,908
I'll be back here tomorrow morning for

2906
02:29:29,408 --> 02:29:31,958
that until then have fun putting

2907
02:29:30,908 --> 02:29:34,918
everyone and I'll see you on the

2908
02:29:31,959 --> 02:29:34,918
Internet take it easy everybody

