1
00:00:00,709 --> 00:00:04,769
hello everyone and welcome hand-made

2
00:00:03,209 --> 00:00:07,318
here oh sure we could a complete game

3
00:00:04,769 --> 00:00:10,500
live on stream before I get started I

4
00:00:07,318 --> 00:00:13,769
wanted to mention the fact that our new

5
00:00:10,500 --> 00:00:15,449
comic has come out it came out Monday in

6
00:00:13,769 --> 00:00:17,160
fact I don't stream during the week

7
00:00:15,449 --> 00:00:19,288
these days so I didn't have a chance to

8
00:00:17,160 --> 00:00:20,730
tell anyone about it but it's called me

9
00:00:19,289 --> 00:00:22,730
out the infinite and it's super awesome

10
00:00:20,730 --> 00:00:25,920
especially if you like cats in space

11
00:00:22,730 --> 00:00:27,689
it's pretty easy to try reading you can

12
00:00:25,920 --> 00:00:29,730
just go to mail the infinite calm and

13
00:00:27,689 --> 00:00:31,170
there's a big old first issue button you

14
00:00:29,730 --> 00:00:34,320
click on that and you can just start

15
00:00:31,170 --> 00:00:37,710
reading the comic right and and off you

16
00:00:34,320 --> 00:00:38,929
go so check it out if you like comics at

17
00:00:37,710 --> 00:00:41,399
all

18
00:00:38,929 --> 00:00:44,308
it'll be updated about once every two

19
00:00:41,399 --> 00:00:46,549
months and there's you can if you want

20
00:00:44,308 --> 00:00:48,780
to know when new issues are posted

21
00:00:46,549 --> 00:00:51,750
anyone who signs up for the Molly Rocket

22
00:00:48,780 --> 00:00:55,530
mailing list gets immediately notified

23
00:00:51,750 --> 00:00:57,179
and you know if you if you ever are on

24
00:00:55,530 --> 00:00:59,308
the Molly Rocket mailing list we send

25
00:00:57,179 --> 00:01:01,979
out an email anytime we update one of

26
00:00:59,308 --> 00:01:04,558
our projects so that's also an easy way

27
00:01:01,979 --> 00:01:07,319
to know when when new issues are coming

28
00:01:04,558 --> 00:01:09,179
out if you like it so give it a shot and

29
00:01:07,319 --> 00:01:10,978
see what you want you can also buy the

30
00:01:09,180 --> 00:01:12,960
digital deluxe edition of it if you're

31
00:01:10,978 --> 00:01:15,030
really into it comes with a lot of cool

32
00:01:12,959 --> 00:01:18,478
stuff like really high quality of PDFs

33
00:01:15,030 --> 00:01:23,069
of all the chapters that you can you

34
00:01:18,478 --> 00:01:26,069
know read online plus every time there's

35
00:01:23,069 --> 00:01:28,739
one chapter we don't place online so you

36
00:01:26,069 --> 00:01:29,699
can read the extra chapter like several

37
00:01:28,739 --> 00:01:31,530
months earlier which is pretty awesome

38
00:01:29,700 --> 00:01:33,090
there's also a big like making a book

39
00:01:31,530 --> 00:01:34,799
that tons of concept art and stuff like

40
00:01:33,090 --> 00:01:35,159
that and that's not wallpapers all that

41
00:01:34,799 --> 00:01:37,530
good stuff

42
00:01:35,159 --> 00:01:40,920
so check all that out the infinite calm

43
00:01:37,530 --> 00:01:42,478
pretty easy to go to and yeah I think

44
00:01:40,920 --> 00:01:44,390
it's also linked to from handmade hero

45
00:01:42,478 --> 00:01:46,560
somewhere if you're on the watch page

46
00:01:44,390 --> 00:01:48,149
there's there's a little like other

47
00:01:46,560 --> 00:01:49,290
projects thing below it now so you can

48
00:01:48,149 --> 00:01:51,799
jump to our other products pretty

49
00:01:49,290 --> 00:01:56,100
quickly so it's right there at the top

50
00:01:51,799 --> 00:01:59,430
anyway let's get started here we left

51
00:01:56,099 --> 00:02:00,929
off last time which was not last week

52
00:01:59,430 --> 00:02:03,329
because we had a for coder Jam last week

53
00:02:00,930 --> 00:02:06,780
so we didn't stream but the weekend

54
00:02:03,328 --> 00:02:08,939
before that we left off kind of at a

55
00:02:06,780 --> 00:02:11,340
place where we sort of have some some

56
00:02:08,939 --> 00:02:12,719
grunt work to do now because we did a

57
00:02:11,340 --> 00:02:15,780
bunch of work to

58
00:02:12,719 --> 00:02:17,609
move our asset system over to a place

59
00:02:15,780 --> 00:02:19,409
where it kind of could take sort of

60
00:02:17,610 --> 00:02:21,660
these text input files it said here's

61
00:02:19,409 --> 00:02:24,900
all the stuff I want to pack up and how

62
00:02:21,659 --> 00:02:27,960
I want to pack it up and those sorts of

63
00:02:24,900 --> 00:02:30,480
things we're going to sort of replace

64
00:02:27,960 --> 00:02:31,530
any kind of file naming conventions or

65
00:02:30,479 --> 00:02:32,879
any of that sort of stuff that we had

66
00:02:31,530 --> 00:02:35,069
been using before it's because we kind

67
00:02:32,879 --> 00:02:37,109
of finally decided this was the best way

68
00:02:35,069 --> 00:02:41,789
to ship it to be like this is the final

69
00:02:37,110 --> 00:02:45,180
version and so doing that I would like

70
00:02:41,789 --> 00:02:48,989
to you know get that system shipped and

71
00:02:45,180 --> 00:02:51,210
done the problem is that we like wrote

72
00:02:48,990 --> 00:02:53,219
it all and we have not really started

73
00:02:51,210 --> 00:02:55,439
debugging it right so we have some

74
00:02:53,219 --> 00:02:58,680
pretty unsavory work to do today which

75
00:02:55,439 --> 00:03:00,270
is a we have to sort of debug the system

76
00:02:58,680 --> 00:03:02,250
like we've got to actually go like

77
00:03:00,270 --> 00:03:03,659
follow everything through and and get

78
00:03:02,250 --> 00:03:06,389
rid of anything in there that's not

79
00:03:03,659 --> 00:03:08,219
working properly which there probably is

80
00:03:06,389 --> 00:03:10,049
a fair bit of because we wrote a ton of

81
00:03:08,219 --> 00:03:11,580
stuff and moved a ton of stuff over the

82
00:03:10,050 --> 00:03:15,030
chances that we didn't make any mistakes

83
00:03:11,580 --> 00:03:17,850
very very low the other thing we have to

84
00:03:15,030 --> 00:03:20,610
do is make the text preservation part of

85
00:03:17,849 --> 00:03:23,039
things so at the moment what we wanted

86
00:03:20,610 --> 00:03:25,770
to do in addition to you know obviously

87
00:03:23,039 --> 00:03:29,310
reading these files and packing all of

88
00:03:25,770 --> 00:03:31,350
our art assets from them and I think we

89
00:03:29,310 --> 00:03:32,819
pretty much finished that part meaning

90
00:03:31,349 --> 00:03:34,699
if there's really not I don't think

91
00:03:32,819 --> 00:03:37,139
there's much of anything left to do

92
00:03:34,699 --> 00:03:37,679
there other than the debugging and

93
00:03:37,139 --> 00:03:40,829
polish

94
00:03:37,680 --> 00:03:43,560
part of it the part that we did not do

95
00:03:40,830 --> 00:03:48,510
yet is just if you want to rewrite a

96
00:03:43,560 --> 00:03:52,050
file so you load handmade hero up and

97
00:03:48,509 --> 00:03:55,319
you go into the edit mode and you adjust

98
00:03:52,050 --> 00:03:58,560
parameters of the art so for example the

99
00:03:55,319 --> 00:03:59,939
main thing right now that we edit inside

100
00:03:58,560 --> 00:04:02,099
the game because it's pretty hard to

101
00:03:59,939 --> 00:04:06,030
edit outside the game it's it's be able

102
00:04:02,099 --> 00:04:08,879
to be really cumbersome is how sprites

103
00:04:06,030 --> 00:04:10,739
are aligned like you know you want to

104
00:04:08,879 --> 00:04:12,959
have a head that snaps onto a body at a

105
00:04:10,739 --> 00:04:14,370
particular point or like a enemy holds a

106
00:04:12,959 --> 00:04:18,209
shield and you want to like snap the

107
00:04:14,370 --> 00:04:20,009
shield on at a particular point that is

108
00:04:18,209 --> 00:04:21,629
something that we want to be able to

109
00:04:20,009 --> 00:04:23,189
mark up in-game because it's just way

110
00:04:21,629 --> 00:04:25,978
faster to be able to like drag a little

111
00:04:23,189 --> 00:04:27,240
slider and see exactly what the result

112
00:04:25,978 --> 00:04:29,008
is

113
00:04:27,240 --> 00:04:31,620
because then we know like we got it

114
00:04:29,009 --> 00:04:34,229
right and it looks right if we add it

115
00:04:31,620 --> 00:04:36,300
just blindly edit some constant outside

116
00:04:34,228 --> 00:04:37,769
be like blindly of the constant run the

117
00:04:36,300 --> 00:04:38,879
game it's wrong blinding of the concert

118
00:04:37,769 --> 00:04:40,468
really good like that's not a good

119
00:04:38,879 --> 00:04:42,840
feedback loop so you want all that stuff

120
00:04:40,468 --> 00:04:45,029
to be like live but the problem with

121
00:04:42,839 --> 00:04:46,859
having it be live is once you edit it

122
00:04:45,029 --> 00:04:48,478
you've got to preserve it right if you

123
00:04:46,860 --> 00:04:50,879
don't preserve the data that you edited

124
00:04:48,478 --> 00:04:54,060
live then you have no way of actually

125
00:04:50,879 --> 00:04:56,879
using those edits long-term so what we

126
00:04:54,060 --> 00:04:59,069
want to do is we want to be able to take

127
00:04:56,879 --> 00:05:01,080
those edits which we already made all

128
00:04:59,069 --> 00:05:02,610
that right that all works but we want

129
00:05:01,079 --> 00:05:04,500
those edits to be saved back to

130
00:05:02,610 --> 00:05:06,180
something that's not the game pack file

131
00:05:04,500 --> 00:05:08,579
we even currently write them back to the

132
00:05:06,180 --> 00:05:11,939
pack file so if you just wanted to like

133
00:05:08,579 --> 00:05:13,918
pack everything once tweak all the art

134
00:05:11,939 --> 00:05:14,939
assets and then ship the game that would

135
00:05:13,918 --> 00:05:16,408
work we actually would have to do

136
00:05:14,939 --> 00:05:19,468
anything because it writes it back to

137
00:05:16,408 --> 00:05:22,709
HHA pack file so we're done right but I

138
00:05:19,468 --> 00:05:25,348
want to have a permanent way of like it

139
00:05:22,709 --> 00:05:28,500
checking into source code control the

140
00:05:25,348 --> 00:05:30,418
packing list with all of those markups

141
00:05:28,500 --> 00:05:34,019
in there so all of the stuff that was

142
00:05:30,418 --> 00:05:36,028
like placed this this point here snap

143
00:05:34,019 --> 00:05:39,209
this to this that sort of stuff should

144
00:05:36,028 --> 00:05:41,459
all go in there and so that's the thing

145
00:05:39,209 --> 00:05:44,459
that we don't have right now we can

146
00:05:41,459 --> 00:05:46,439
parse the file we can pack from the

147
00:05:44,459 --> 00:05:50,489
parse file module in fact that we have

148
00:05:46,439 --> 00:05:52,139
to debug it right and so that's all fine

149
00:05:50,490 --> 00:05:55,139
but we now need the way of rewriting

150
00:05:52,139 --> 00:05:58,400
like sit save and rewrite that file

151
00:05:55,139 --> 00:06:02,629
right so it's basically like the change

152
00:05:58,399 --> 00:06:06,568
needs to get written back that's all um

153
00:06:02,629 --> 00:06:08,610
so we want to do that and we you know

154
00:06:06,569 --> 00:06:12,088
look we're not far from it but obviously

155
00:06:08,610 --> 00:06:15,210
we have a little bit of work to do

156
00:06:12,088 --> 00:06:16,588
before we get to that point so I'm gonna

157
00:06:15,209 --> 00:06:19,288
go ahead and load up hand-made here out

158
00:06:16,588 --> 00:06:21,750
here and we're just gonna take a look at

159
00:06:19,288 --> 00:06:24,329
where we were at now remember we we

160
00:06:21,750 --> 00:06:27,509
essentially have no change like we did

161
00:06:24,329 --> 00:06:30,269
all this but we haven't like you know

162
00:06:27,509 --> 00:06:33,479
removed our old HHA files that were

163
00:06:30,269 --> 00:06:35,158
built without this system right so we're

164
00:06:33,478 --> 00:06:37,918
running a debug mode here so again the

165
00:06:35,158 --> 00:06:39,418
lighting is of course very slow but

166
00:06:37,918 --> 00:06:40,408
otherwise you can see like everything's

167
00:06:39,418 --> 00:06:43,709
fine it's loading

168
00:06:40,408 --> 00:06:46,678
the assets correctly right and so it's

169
00:06:43,709 --> 00:06:48,509
still using the old HHA files so we

170
00:06:46,678 --> 00:06:51,388
essentially have two goals and we can

171
00:06:48,509 --> 00:06:54,360
probably if we want to tackle them in

172
00:06:51,389 --> 00:06:58,978
series so the first goal we could have

173
00:06:54,360 --> 00:07:01,319
here is deleting the the HHA file that

174
00:06:58,978 --> 00:07:03,868
has all of the current game our assets

175
00:07:01,319 --> 00:07:06,809
in it and trying to get back to this

176
00:07:03,869 --> 00:07:09,509
screen so looking like this with all of

177
00:07:06,809 --> 00:07:15,779
the assets correctly loaded that's

178
00:07:09,509 --> 00:07:20,158
something we could do to prove that we

179
00:07:15,778 --> 00:07:24,058
don't have bugs in this new sort of

180
00:07:20,158 --> 00:07:28,199
manifest listing style or Packer thing

181
00:07:24,059 --> 00:07:29,550
right so we want to do that and that

182
00:07:28,199 --> 00:07:31,379
seems like a reasonable thing to start

183
00:07:29,550 --> 00:07:33,689
with especial especially since it's been

184
00:07:31,379 --> 00:07:35,489
two weeks instead of one that'll just

185
00:07:33,689 --> 00:07:37,229
get us reacquainted with the code right

186
00:07:35,488 --> 00:07:39,418
so that we can remember what it is that

187
00:07:37,228 --> 00:07:41,368
we're doing handmade here is weird like

188
00:07:39,418 --> 00:07:42,568
you know we they're so long between

189
00:07:41,369 --> 00:07:44,789
programming sessions normally it

190
00:07:42,569 --> 00:07:46,619
wouldn't all page out of your brain so

191
00:07:44,788 --> 00:07:49,588
it's worth you know taking it cautiously

192
00:07:46,619 --> 00:07:51,749
like that so anyway if we take a look

193
00:07:49,588 --> 00:07:53,218
back at the handmade 0 data directory

194
00:07:51,749 --> 00:07:55,139
which is the thing that we care about in

195
00:07:53,218 --> 00:07:57,748
this case you can see here that we've

196
00:07:55,139 --> 00:08:02,278
got our data and we have like an intro

197
00:07:57,749 --> 00:08:04,110
art v2 HHA we have a local HHA and then

198
00:08:02,278 --> 00:08:06,778
we have some other hhas that were kind

199
00:08:04,110 --> 00:08:10,619
of old things to like test these test

200
00:08:06,778 --> 00:08:12,269
ones test fonts these are all hh8 the

201
00:08:10,619 --> 00:08:14,849
best for ever we even made a converter

202
00:08:12,269 --> 00:08:16,739
to convert the old ones forward so what

203
00:08:14,848 --> 00:08:18,838
we want to do now is basically get rid

204
00:08:16,738 --> 00:08:21,718
of all of these and start trying to

205
00:08:18,838 --> 00:08:23,939
build a base game uhha that essentially

206
00:08:21,718 --> 00:08:25,949
matches our local HHA because remember

207
00:08:23,939 --> 00:08:29,278
local HHA was the thing we use to import

208
00:08:25,949 --> 00:08:30,778
all the p.m. G's and so now we want to

209
00:08:29,278 --> 00:08:32,429
do is make it so that when our packing

210
00:08:30,778 --> 00:08:35,879
system runs it'll create a base game

211
00:08:32,429 --> 00:08:38,338
that HHA that will just generate all of

212
00:08:35,879 --> 00:08:40,078
that stuff all of the stuff that was

213
00:08:38,339 --> 00:08:44,009
going into local hh8 will all go into

214
00:08:40,078 --> 00:08:45,568
base game HHA that's our first goal our

215
00:08:44,009 --> 00:08:49,259
second goal would be same thing with

216
00:08:45,568 --> 00:08:51,028
intro art v2 so info art v2 data HHA was

217
00:08:49,259 --> 00:08:53,970
again all of the stuff that we had had

218
00:08:51,028 --> 00:08:58,230
that came from the intro cutscenes

219
00:08:53,970 --> 00:09:00,779
that we also have p.m. geez of now we

220
00:08:58,230 --> 00:09:04,379
want to take all of those p.m. G's and

221
00:09:00,779 --> 00:09:07,470
pack those into an intro art version

222
00:09:04,379 --> 00:09:09,840
right and so these two we can completely

223
00:09:07,470 --> 00:09:11,370
replace this goes away so we don't care

224
00:09:09,840 --> 00:09:13,649
about I'm sorry sorry these two

225
00:09:11,370 --> 00:09:15,419
completely replace so they would go away

226
00:09:13,649 --> 00:09:16,769
and we replaced with new ones bass game

227
00:09:15,419 --> 00:09:18,360
day today would replace this one and

228
00:09:16,769 --> 00:09:21,090
intro art of each day would replace this

229
00:09:18,360 --> 00:09:23,070
one and then these I think basically

230
00:09:21,090 --> 00:09:26,129
don't have anything we really need in

231
00:09:23,070 --> 00:09:28,200
there so the only thing we would be left

232
00:09:26,129 --> 00:09:31,679
with is the fact that we don't have any

233
00:09:28,200 --> 00:09:34,140
way to build thoughts right now outside

234
00:09:31,679 --> 00:09:41,099
of our external tool and we can decide

235
00:09:34,139 --> 00:09:43,620
what we want to do about that but I

236
00:09:41,100 --> 00:09:48,769
suspect what we will do is we will just

237
00:09:43,620 --> 00:09:52,769
actually make a thought PNG and we will

238
00:09:48,769 --> 00:09:54,659
mark the thought PNG up so I think we'll

239
00:09:52,769 --> 00:10:00,389
stick with the system that we've got

240
00:09:54,659 --> 00:10:02,909
right now to a certain extent and and

241
00:10:00,389 --> 00:10:04,679
we'll just import it from a PNG because

242
00:10:02,909 --> 00:10:07,409
we can make a PNG that just has each

243
00:10:04,679 --> 00:10:08,939
character in like its own grid cell and

244
00:10:07,409 --> 00:10:12,240
then we use the same import process

245
00:10:08,940 --> 00:10:15,090
we've been using pretty much that just

246
00:10:12,240 --> 00:10:17,070
works right um so I think we should be

247
00:10:15,090 --> 00:10:18,269
okay we'll see what happens we'll give

248
00:10:17,070 --> 00:10:20,220
it a shot

249
00:10:18,269 --> 00:10:23,039
but that's that base we want to do and

250
00:10:20,220 --> 00:10:25,560
then once we've gotten that debugged

251
00:10:23,039 --> 00:10:28,500
then we can switch over to let's make

252
00:10:25,559 --> 00:10:30,899
sure rewriting works and rewriting again

253
00:10:28,500 --> 00:10:32,490
is just the process of taking these tags

254
00:10:30,899 --> 00:10:34,860
files here that lists all the things

255
00:10:32,490 --> 00:10:36,659
that should be inside and ehh eh

256
00:10:34,860 --> 00:10:38,720
rewriting them basically without

257
00:10:36,659 --> 00:10:42,120
mutating them at all other than

258
00:10:38,720 --> 00:10:45,210
inserting any edits that we've made or

259
00:10:42,120 --> 00:10:46,740
replacing lines you know that that

260
00:10:45,210 --> 00:10:50,280
should have been in there or something

261
00:10:46,740 --> 00:10:55,080
like that right so okay let's take a

262
00:10:50,279 --> 00:10:56,850
look inside our asset system here one

263
00:10:55,080 --> 00:10:58,560
thing that I think might be nice to do

264
00:10:56,850 --> 00:11:00,480
at this point is there's just too much

265
00:10:58,559 --> 00:11:03,179
stuff in here and so I think what I

266
00:11:00,480 --> 00:11:05,339
might just start with today as a simple

267
00:11:03,179 --> 00:11:07,109
thing we can do is inside handmade code

268
00:11:05,339 --> 00:11:09,240
we've got the handmade

269
00:11:07,110 --> 00:11:10,528
sit down H and that's EBP right I'm

270
00:11:09,240 --> 00:11:12,690
gonna make a thing called handmade

271
00:11:10,528 --> 00:11:15,539
import and the reason for that is we've

272
00:11:12,690 --> 00:11:18,149
just got a lot of code now that does

273
00:11:15,539 --> 00:11:20,219
this sort of thing and I don't really

274
00:11:18,149 --> 00:11:23,879
want to have to worry about it anymore

275
00:11:20,220 --> 00:11:27,180
right like I don't want it to be inside

276
00:11:23,879 --> 00:11:30,240
my asset system that runs at runtime as

277
00:11:27,179 --> 00:11:31,919
the actual like you know gameplay code

278
00:11:30,240 --> 00:11:34,139
and all that sort of stuff all this

279
00:11:31,919 --> 00:11:36,208
stuff only happens if somebody is saying

280
00:11:34,139 --> 00:11:38,458
they want to do dev work on the game and

281
00:11:36,208 --> 00:11:40,619
add art assets or something like that

282
00:11:38,458 --> 00:11:44,369
right so there's just a huge amount of

283
00:11:40,620 --> 00:11:46,110
code here that I can pull out and say

284
00:11:44,370 --> 00:11:47,970
look this is going to be sort of a

285
00:11:46,110 --> 00:11:50,879
separate chunk of code that only gets

286
00:11:47,970 --> 00:11:53,180
used during importing right so I'd like

287
00:11:50,879 --> 00:11:56,309
to keep all of this stuff separate here

288
00:11:53,179 --> 00:11:58,109
just so I can see that like alright

289
00:11:56,309 --> 00:12:00,719
there's a bunch of things that are like

290
00:11:58,110 --> 00:12:03,570
runtime house at work but there's also a

291
00:12:00,720 --> 00:12:05,540
bunch of things here that are not right

292
00:12:03,570 --> 00:12:08,459
that are that are sort of things that

293
00:12:05,539 --> 00:12:12,028
only are really relevant to people

294
00:12:08,458 --> 00:12:13,768
editing the game and that's just kind of

295
00:12:12,028 --> 00:12:16,980
a separate issue right so I'm just gonna

296
00:12:13,769 --> 00:12:19,769
pull those functions out sort of slowly

297
00:12:16,980 --> 00:12:23,579
here right and just make sure that I've

298
00:12:19,769 --> 00:12:26,519
got enough stuff for that so like

299
00:12:23,578 --> 00:12:28,198
reserved tags reserve asset that sort of

300
00:12:26,519 --> 00:12:30,389
stuff like these are just not things

301
00:12:28,198 --> 00:12:33,179
that matter to the runtime performance

302
00:12:30,389 --> 00:12:35,639
of the game at all and so I don't really

303
00:12:33,179 --> 00:12:38,278
want them in there so that I you know so

304
00:12:35,639 --> 00:12:40,879
that people aren't confused about what

305
00:12:38,278 --> 00:12:43,799
is and isn't actually part of the

306
00:12:40,879 --> 00:12:46,259
runtime stuff so you know you can see

307
00:12:43,799 --> 00:12:49,429
here now we've got sort of back to our

308
00:12:46,259 --> 00:12:51,569
much more streamlined asset system and

309
00:12:49,429 --> 00:12:54,419
only the things that actually matter to

310
00:12:51,570 --> 00:12:56,640
the asset system proper or will be in

311
00:12:54,419 --> 00:12:59,458
there and then here what I can do is

312
00:12:56,639 --> 00:13:02,009
pull out also the things from the H file

313
00:12:59,458 --> 00:13:05,039
so for example this import type is only

314
00:13:02,009 --> 00:13:07,139
used by that asset importing there's

315
00:13:05,039 --> 00:13:09,689
also stuff down here that is only used

316
00:13:07,139 --> 00:13:12,419
for it like the hhd fields context the

317
00:13:09,690 --> 00:13:15,569
import grids and tagged arrays all of

318
00:13:12,419 --> 00:13:18,539
this stuff again only used if we are

319
00:13:15,568 --> 00:13:20,469
doing that sort of import process so I'm

320
00:13:18,539 --> 00:13:22,529
just moving that over now I

321
00:13:20,470 --> 00:13:26,410
don't care about being this is not an

322
00:13:22,529 --> 00:13:28,720
actual segregation I'm not actually

323
00:13:26,409 --> 00:13:31,480
trying to draw a clean line through

324
00:13:28,720 --> 00:13:33,490
these two pieces of code I don't care if

325
00:13:31,480 --> 00:13:36,009
they're still still intermingled meaning

326
00:13:33,490 --> 00:13:37,750
like for example inside this game asset

327
00:13:36,009 --> 00:13:39,669
structure there's still things that are

328
00:13:37,750 --> 00:13:42,429
only used for importing potentially

329
00:13:39,669 --> 00:13:44,559
right so that's fine

330
00:13:42,429 --> 00:13:46,809
right I don't mind about that at all I'm

331
00:13:44,559 --> 00:13:49,509
not trying to like clearly delineate

332
00:13:46,809 --> 00:13:52,869
these all I really want to do is just

333
00:13:49,509 --> 00:13:55,439
have a rough separation of the two so

334
00:13:52,870 --> 00:13:59,379
that I have a vague idea at least of

335
00:13:55,440 --> 00:14:01,180
what I expect to be happening in import

336
00:13:59,379 --> 00:14:04,210
time versus what I expect to be

337
00:14:01,179 --> 00:14:07,120
happening at run time as we move forward

338
00:14:04,210 --> 00:14:09,700
and I'm finished with this system way

339
00:14:07,120 --> 00:14:12,340
down the line maybe I will want to do a

340
00:14:09,700 --> 00:14:16,900
harder separation between the two as an

341
00:14:12,340 --> 00:14:19,269
exercise to ensure that the import side

342
00:14:16,899 --> 00:14:20,829
stuff is never happening in game or

343
00:14:19,269 --> 00:14:23,110
doesn't have any effects on the in-game

344
00:14:20,830 --> 00:14:28,480
stuff or so that you don't have to port

345
00:14:23,110 --> 00:14:32,289
that stuff things like that so I don't

346
00:14:28,480 --> 00:14:35,440
really know whether I want to go further

347
00:14:32,289 --> 00:14:38,620
down that road or not but what I do know

348
00:14:35,440 --> 00:14:40,360
is that I definitely don't want to keep

349
00:14:38,620 --> 00:14:41,649
piling all the import stuff into that

350
00:14:40,360 --> 00:14:44,320
file because it just makes it too

351
00:14:41,649 --> 00:14:46,120
confusing as to what is happening when

352
00:14:44,320 --> 00:14:49,420
I'd like to be able to keep them

353
00:14:46,120 --> 00:14:52,230
separated uh so I'm gonna go ahead and

354
00:14:49,419 --> 00:14:56,110
rebuild here I don't actually know

355
00:14:52,230 --> 00:15:00,759
whether oops I don't actually know

356
00:14:56,110 --> 00:15:03,370
whether or not I I still use the asset

357
00:15:00,759 --> 00:15:05,710
memory block stuff I'm gonna just

358
00:15:03,370 --> 00:15:10,120
quickly ask that question because I'm

359
00:15:05,710 --> 00:15:11,350
curious yeah I don't so those were just

360
00:15:10,120 --> 00:15:13,690
vestigial remains so imma get rid of

361
00:15:11,350 --> 00:15:15,310
those you can see now that the in-game

362
00:15:13,690 --> 00:15:18,160
editor is trying to call parts of the

363
00:15:15,309 --> 00:15:19,659
asset system that we have removed and so

364
00:15:18,159 --> 00:15:22,779
what I'd like to do now is I'd like to

365
00:15:19,659 --> 00:15:25,389
just include the file that I created

366
00:15:22,779 --> 00:15:27,429
that sort of we separated out I'm gonna

367
00:15:25,389 --> 00:15:30,580
go ahead and add that back in here so

368
00:15:27,429 --> 00:15:32,769
that we've got it we could make this

369
00:15:30,580 --> 00:15:34,240
only in internal builds eventually if we

370
00:15:32,769 --> 00:15:36,309
wanted to

371
00:15:34,240 --> 00:15:38,980
but at the moment I'm not going to

372
00:15:36,309 --> 00:15:40,599
bother with that again those are things

373
00:15:38,980 --> 00:15:43,120
we can do a little bit further down the

374
00:15:40,600 --> 00:15:45,250
line if we so choose I'm not super

375
00:15:43,120 --> 00:15:47,889
concerned about them at the immediate

376
00:15:45,250 --> 00:15:50,169
moment all right so here we go let's

377
00:15:47,889 --> 00:15:52,269
just put those in there it's not what I

378
00:15:50,169 --> 00:15:55,679
wanted I want that I think that actually

379
00:15:52,269 --> 00:16:00,789
it's not acid import it's just import

380
00:15:55,679 --> 00:16:02,829
and so now we should get those pieces in

381
00:16:00,789 --> 00:16:05,699
there you have to excuse me like we

382
00:16:02,830 --> 00:16:09,040
still haven't updated our for coder I

383
00:16:05,700 --> 00:16:10,540
should really do that next week before

384
00:16:09,039 --> 00:16:18,159
next week I promise I'll update for

385
00:16:10,539 --> 00:16:20,439
coder all right so we got those two

386
00:16:18,159 --> 00:16:24,610
things separated out now and so what I

387
00:16:20,440 --> 00:16:27,520
want to do next is start by we're in

388
00:16:24,610 --> 00:16:28,990
debug mode I'm gonna start by trying out

389
00:16:27,519 --> 00:16:31,629
this code right

390
00:16:28,990 --> 00:16:34,060
so I want to get my import changed

391
00:16:31,629 --> 00:16:38,350
assets code working so that basically

392
00:16:34,059 --> 00:16:42,549
what will happen is at any time if you

393
00:16:38,350 --> 00:16:45,670
want to you can delete for example I

394
00:16:42,549 --> 00:16:47,679
could go in here - yeah sorry I'm

395
00:16:45,669 --> 00:16:51,009
already there I can go in here and

396
00:16:47,679 --> 00:16:54,609
delete this base game - HHA and then

397
00:16:51,009 --> 00:16:57,519
when you call like the you know the

398
00:16:54,610 --> 00:17:01,450
import changed assets code it will

399
00:16:57,519 --> 00:17:04,769
automatically look at the tag file it

400
00:17:01,450 --> 00:17:08,620
will rebuild the HHA from that tag file

401
00:17:04,769 --> 00:17:11,680
and produce a complete pack right I want

402
00:17:08,619 --> 00:17:16,479
that to work that's thing one thing too

403
00:17:11,680 --> 00:17:20,230
is if I change the tag file or a PNG and

404
00:17:16,480 --> 00:17:23,019
I hit update it will rebuild those the

405
00:17:20,230 --> 00:17:27,220
same way so basically like anytime I

406
00:17:23,019 --> 00:17:30,190
want to I can just reload anything that

407
00:17:27,220 --> 00:17:33,309
that I think should be reloaded and

408
00:17:30,190 --> 00:17:36,960
it'll just work so that's what I'd like

409
00:17:33,309 --> 00:17:36,960
to do now if that makes sense

410
00:17:39,549 --> 00:17:45,559
so let's see if we can get that working

411
00:17:42,369 --> 00:17:47,659
so let's just start by calling import

412
00:17:45,559 --> 00:17:50,299
changed at sets step through it see how

413
00:17:47,660 --> 00:17:52,220
it goes and every time we find a bug fix

414
00:17:50,299 --> 00:17:54,409
it eventually hopefully we'll get to the

415
00:17:52,220 --> 00:17:56,420
point where it just works and that's all

416
00:17:54,410 --> 00:17:58,220
we need to do now I don't actually want

417
00:17:56,420 --> 00:18:00,019
to have to click a button to do that so

418
00:17:58,220 --> 00:18:02,360
what I'm gonna do is just make it so

419
00:18:00,019 --> 00:18:04,549
that handmade hero just calls import

420
00:18:02,359 --> 00:18:07,969
changed assets automatically because it

421
00:18:04,549 --> 00:18:11,419
can and so what I'm gonna do is add a

422
00:18:07,970 --> 00:18:14,450
call up here to this so that's like look

423
00:18:11,420 --> 00:18:17,690
if anyone wants to call it that you can

424
00:18:14,450 --> 00:18:20,000
and then in the asset system proper once

425
00:18:17,690 --> 00:18:22,309
the asset system has actually loaded

426
00:18:20,000 --> 00:18:23,750
everything so like in here after it gets

427
00:18:22,309 --> 00:18:26,059
down to the bottom it's like alright

428
00:18:23,750 --> 00:18:27,920
we're good to go we've got all of our

429
00:18:26,059 --> 00:18:30,019
assets loaded and we you know we're

430
00:18:27,920 --> 00:18:32,600
ready to play the game I'm just gonna

431
00:18:30,019 --> 00:18:34,009
force this call here so that way when

432
00:18:32,599 --> 00:18:37,159
you start up the game it will

433
00:18:34,009 --> 00:18:41,059
automatically go hey let's double check

434
00:18:37,160 --> 00:18:42,560
make sure everything's kosher and that

435
00:18:41,059 --> 00:18:44,869
way while I'm debugging it I don't have

436
00:18:42,559 --> 00:18:48,379
to like manually go click a button to

437
00:18:44,869 --> 00:18:50,179
get started and this is just a general

438
00:18:48,380 --> 00:18:51,740
theme that happens anytime you're

439
00:18:50,180 --> 00:18:54,620
debugging things I highly encourage

440
00:18:51,740 --> 00:18:56,569
thinking about how to reduce the amount

441
00:18:54,619 --> 00:18:58,159
of physical steps necessary to do the

442
00:18:56,569 --> 00:19:00,619
debugging because at the end of the day

443
00:18:58,160 --> 00:19:03,650
the debugging time will take as long as

444
00:19:00,619 --> 00:19:06,609
it takes and anything you can do to

445
00:19:03,650 --> 00:19:09,350
shorten that up by reducing manual steps

446
00:19:06,609 --> 00:19:11,899
your wit your winning back time for

447
00:19:09,349 --> 00:19:14,089
yourself right so how they recommend you

448
00:19:11,900 --> 00:19:16,100
know making sure you think about oh

449
00:19:14,089 --> 00:19:17,689
could I just add some code to this thing

450
00:19:16,099 --> 00:19:19,519
I'm debugging to make it much shorter to

451
00:19:17,690 --> 00:19:24,289
the bug that's great right that's always

452
00:19:19,519 --> 00:19:26,990
a good win there so here we go let's go

453
00:19:24,289 --> 00:19:28,670
ahead and take a look and you can see

454
00:19:26,990 --> 00:19:31,700
here we've finished compiling so let's

455
00:19:28,670 --> 00:19:33,920
go over to our debugger and I'm going to

456
00:19:31,700 --> 00:19:36,710
set a breakpoint there on that import

457
00:19:33,920 --> 00:19:38,289
changed assets call right there and so

458
00:19:36,710 --> 00:19:41,299
it should happen right at the beginning

459
00:19:38,289 --> 00:19:43,940
I'm going to start with the nothing case

460
00:19:41,299 --> 00:19:47,899
quote-unquote meaning this start with no

461
00:19:43,940 --> 00:19:51,080
HHA and then later we'll try creating an

462
00:19:47,900 --> 00:19:53,059
HHA and having it fail I mean sorry

463
00:19:51,079 --> 00:19:55,189
creating hej and having it have

464
00:19:53,058 --> 00:19:56,509
merge into it so we'll try some

465
00:19:55,190 --> 00:19:59,240
different things and we'll see how it

466
00:19:56,509 --> 00:20:01,128
goes so I'm gonna start running

467
00:19:59,240 --> 00:20:02,569
hopefully I get a breakpoint right here

468
00:20:01,128 --> 00:20:05,648
and there we are

469
00:20:02,569 --> 00:20:08,418
Visual Studio does some weird things you

470
00:20:05,648 --> 00:20:10,028
know it's hey I'm still waiting for a

471
00:20:08,419 --> 00:20:11,929
new debugger hopefully we'll get one

472
00:20:10,028 --> 00:20:13,460
sometime soon that's not Visual Studio

473
00:20:11,929 --> 00:20:16,129
but you know it does some stupid stuff

474
00:20:13,460 --> 00:20:18,319
like if you have an if statement I don't

475
00:20:16,128 --> 00:20:20,240
know what just changed there if you have

476
00:20:18,319 --> 00:20:23,148
an if a pound if statement

477
00:20:20,240 --> 00:20:25,339
even though Visual Studio knows it's not

478
00:20:23,148 --> 00:20:27,788
building this file because we haven't

479
00:20:25,339 --> 00:20:30,378
created a project for it it's just a XE

480
00:20:27,788 --> 00:20:32,628
and it knows it's not building this file

481
00:20:30,378 --> 00:20:35,148
it still thinks it has the information

482
00:20:32,628 --> 00:20:37,998
necessary to know whether pound ifs are

483
00:20:35,148 --> 00:20:39,829
on and off it doesn't so it seems that

484
00:20:37,999 --> 00:20:43,368
they're all off because of course none

485
00:20:39,829 --> 00:20:46,460
of these have been set it's just really

486
00:20:43,368 --> 00:20:48,048
bad right it's essentially giving you

487
00:20:46,460 --> 00:20:49,788
completely false information that

488
00:20:48,048 --> 00:20:51,349
especially a beginner programmer might

489
00:20:49,788 --> 00:20:54,470
get really confused about what was going

490
00:20:51,349 --> 00:20:56,928
on here oh well that's just you know

491
00:20:54,470 --> 00:21:00,350
Microsoft me and Microsoft so if we end

492
00:20:56,929 --> 00:21:02,600
up in import changed assets here and I

493
00:21:00,349 --> 00:21:06,230
guess I for some reason deleted that

494
00:21:02,599 --> 00:21:07,759
break point but I want it sorry leave

495
00:21:06,230 --> 00:21:10,669
that on I

496
00:21:07,759 --> 00:21:13,788
sohere import changed assets we're gonna

497
00:21:10,669 --> 00:21:16,129
slowly step into the code you can see me

498
00:21:13,788 --> 00:21:18,230
getting all of the H HTS here from the

499
00:21:16,128 --> 00:21:20,808
platform layer so we want to load all of

500
00:21:18,230 --> 00:21:23,929
our tag files we start out parsing the

501
00:21:20,808 --> 00:21:25,579
tag file so here we go

502
00:21:23,929 --> 00:21:27,919
we're gonna open up one of these tag

503
00:21:25,579 --> 00:21:29,898
files here and read all of the tag file

504
00:21:27,919 --> 00:21:32,570
in so we've got it entirely in memory

505
00:21:29,898 --> 00:21:34,038
you can see that happening in fact I can

506
00:21:32,569 --> 00:21:36,079
even just open up the tokenizer that

507
00:21:34,038 --> 00:21:39,648
would have it you can see that the

508
00:21:36,079 --> 00:21:42,079
pointer to the characters which is here

509
00:21:39,648 --> 00:21:44,498
right yeah no is that wrong

510
00:21:42,079 --> 00:21:46,878
oh I haven't started it yet there we go

511
00:21:44,499 --> 00:21:50,360
so you should be able to see like once

512
00:21:46,878 --> 00:21:52,908
we tokenize it all of the the data from

513
00:21:50,359 --> 00:21:56,028
the file is like this is the file right

514
00:21:52,909 --> 00:21:59,028
is now loaded in here so this is the

515
00:21:56,028 --> 00:22:01,250
intro cutscene information and you can

516
00:21:59,028 --> 00:22:03,319
see that it's just got a bunch of stuff

517
00:22:01,250 --> 00:22:06,890
for the author here oh and you know what

518
00:22:03,319 --> 00:22:09,589
actually let me fix one thing

519
00:22:06,890 --> 00:22:12,800
we get started somebody mentioned this I

520
00:22:09,589 --> 00:22:19,779
don't know if they reported it in the

521
00:22:12,799 --> 00:22:19,779
github let me see here

522
00:22:31,650 --> 00:22:42,730
TuneIn factor authentication ladies and

523
00:22:35,920 --> 00:22:44,380
gentlemen okay so everyone now who wants

524
00:22:42,730 --> 00:22:46,539
to snarf my two-factor authentication

525
00:22:44,380 --> 00:22:47,950
can do it I have to

526
00:22:46,539 --> 00:22:50,409
I should probably time it so that I only

527
00:22:47,950 --> 00:22:53,110
enter it at the last possible second so

528
00:22:50,410 --> 00:22:57,300
that anyone who is is trying to hack my

529
00:22:53,109 --> 00:22:57,299
account won't have much time

530
00:23:00,369 --> 00:23:11,879
all right so if I go into the bug list

531
00:23:05,429 --> 00:23:16,300
let's see here here it is

532
00:23:11,880 --> 00:23:17,860
there we go so in the bug list yes I was

533
00:23:16,299 --> 00:23:21,399
gonna say I thought someone had reported

534
00:23:17,859 --> 00:23:25,689
it and there right so if you look I

535
00:23:21,400 --> 00:23:27,580
accidentally had these backwards so and

536
00:23:25,690 --> 00:23:29,860
I was the person who did the title

537
00:23:27,579 --> 00:23:35,379
screen and young-shin is the person who

538
00:23:29,859 --> 00:23:38,319
had the who did the cut-scene stuff so

539
00:23:35,380 --> 00:23:39,910
they were just backwards and so we might

540
00:23:38,319 --> 00:23:52,389
as well fix that because I happen to be

541
00:23:39,910 --> 00:23:54,670
looking at it and it's done now so I

542
00:23:52,390 --> 00:23:58,480
think that's all good so I'm gonna close

543
00:23:54,670 --> 00:24:00,460
and comment that and hopefully that that

544
00:23:58,480 --> 00:24:05,009
takes care of that issue that was just a

545
00:24:00,460 --> 00:24:08,019
you know mistake all right so moving on

546
00:24:05,009 --> 00:24:10,420
so if we go ahead and say look we want

547
00:24:08,019 --> 00:24:12,490
to get this thing loading properly let

548
00:24:10,420 --> 00:24:16,539
me run back to where I was so we're

549
00:24:12,490 --> 00:24:18,910
going if the intro cutscene one first so

550
00:24:16,539 --> 00:24:21,940
when we load this up we're starting to

551
00:24:18,910 --> 00:24:24,040
tokenize it we grab a token we look at

552
00:24:21,940 --> 00:24:26,980
what the token is and it looks like the

553
00:24:24,039 --> 00:24:30,839
token is an identifier and let's see

554
00:24:26,980 --> 00:24:34,450
what it actually is that token is

555
00:24:30,839 --> 00:24:36,909
default and actually we don't have a HHA

556
00:24:34,450 --> 00:24:40,059
context and we get an error here that

557
00:24:36,910 --> 00:24:42,810
error is totally correct and so the

558
00:24:40,059 --> 00:24:42,809
question now

559
00:24:50,160 --> 00:24:55,140
so here's something that's actually

560
00:24:52,089 --> 00:24:58,269
pretty interesting about that right is

561
00:24:55,140 --> 00:25:00,250
we don't actually have any way to put

562
00:24:58,269 --> 00:25:02,470
these errors anywhere so like if you

563
00:25:00,250 --> 00:25:05,048
look at what happens the error goes out

564
00:25:02,470 --> 00:25:08,440
to an error stream and we're never gonna

565
00:25:05,048 --> 00:25:11,019
see it right so it would be nice if

566
00:25:08,440 --> 00:25:14,410
there was some way to like display those

567
00:25:11,019 --> 00:25:16,900
errors or something but we don't really

568
00:25:14,410 --> 00:25:18,580
have any way of doing that and so that's

569
00:25:16,900 --> 00:25:21,640
another thing that we probably have to

570
00:25:18,579 --> 00:25:24,069
look at but for now it told us the error

571
00:25:21,640 --> 00:25:26,380
so we know that we've got an error in

572
00:25:24,069 --> 00:25:29,649
here actually and so let's just go ahead

573
00:25:26,380 --> 00:25:31,270
and fix that error right and we'll sort

574
00:25:29,650 --> 00:25:34,179
of figure out how we display errors to

575
00:25:31,269 --> 00:25:36,009
the user later so you can see that what

576
00:25:34,179 --> 00:25:37,540
we need here is an HHA directive this

577
00:25:36,009 --> 00:25:38,859
was the old way we were doing things we

578
00:25:37,539 --> 00:25:40,389
decided we didn't like that because we

579
00:25:38,859 --> 00:25:41,740
didn't want to have to parse we'd we

580
00:25:40,390 --> 00:25:44,470
don't actually allow you to change the

581
00:25:41,740 --> 00:25:45,880
HHA inside one of these we want that to

582
00:25:44,470 --> 00:25:48,130
be something that you permanently sort

583
00:25:45,880 --> 00:25:50,110
of state so here's a way to permanently

584
00:25:48,130 --> 00:25:52,210
state that there's HHA intro cutscene

585
00:25:50,109 --> 00:25:54,058
right so there's the like preprocessor

586
00:25:52,210 --> 00:25:57,730
directive Ishq and of thing that we made

587
00:25:54,058 --> 00:25:59,619
so that should fix that parse error

588
00:25:57,730 --> 00:26:03,669
right which was correct it was an

589
00:25:59,619 --> 00:26:06,159
ill-formed hht file all right let's run

590
00:26:03,669 --> 00:26:09,280
it again so now we're gonna come through

591
00:26:06,160 --> 00:26:12,100
here parse the hht in theory now we will

592
00:26:09,279 --> 00:26:15,308
get a include directive essentially I'm

593
00:26:12,099 --> 00:26:17,949
sorry an HSA directive we will try to

594
00:26:15,308 --> 00:26:19,928
create that HHA by its stem and the stem

595
00:26:17,950 --> 00:26:23,500
text is exactly what we think it should

596
00:26:19,929 --> 00:26:27,669
be intro cutscene right so we we jump in

597
00:26:23,500 --> 00:26:30,250
here and let's take a look we try to

598
00:26:27,669 --> 00:26:31,780
find it and we can't find it because we

599
00:26:30,250 --> 00:26:35,019
haven't loaded that yet in fact it

600
00:26:31,779 --> 00:26:36,910
doesn't exist at all create if not found

601
00:26:35,019 --> 00:26:38,529
is true and so we come through here

602
00:26:36,910 --> 00:26:42,220
we're going to actually need to create

603
00:26:38,529 --> 00:26:44,440
it so we create a path we can pass to

604
00:26:42,220 --> 00:26:47,710
the platform layer here it is data intro

605
00:26:44,440 --> 00:26:49,570
cutscene HHA we take a look we say

606
00:26:47,710 --> 00:26:51,910
alright let's try to open that assuming

607
00:26:49,569 --> 00:26:54,730
there are no errors we create a dummy

608
00:26:51,910 --> 00:26:57,100
header and write it to to the file

609
00:26:54,730 --> 00:26:59,110
we then initialize it and say why don't

610
00:26:57,099 --> 00:27:00,298
you load this in so we kind of come

611
00:26:59,109 --> 00:27:03,339
through here and try to load it in

612
00:27:00,298 --> 00:27:05,259
that's us doing this here and we say all

613
00:27:03,339 --> 00:27:07,928
right there are no errors that's great

614
00:27:05,259 --> 00:27:22,079
so now it's it's initialized and

615
00:27:07,929 --> 00:27:22,080
everyone is happy this seems broken

616
00:27:26,609 --> 00:27:29,609
interesting

617
00:27:33,319 --> 00:27:43,200
so if you look at this loop here we are

618
00:27:40,920 --> 00:27:47,519
we may kind of have a bug in this loop

619
00:27:43,200 --> 00:27:50,549
but the bug looks like it only happens

620
00:27:47,519 --> 00:27:54,349
in the case where we've already got like

621
00:27:50,549 --> 00:27:57,599
another bug which is that the file size

622
00:27:54,349 --> 00:28:02,309
should not have been zero because we

623
00:27:57,599 --> 00:28:06,750
wrote stuff to it so it should be larger

624
00:28:02,309 --> 00:28:10,500
than zero that file info is getting

625
00:28:06,750 --> 00:28:13,829
passed in here and so you can pretty

626
00:28:10,500 --> 00:28:19,200
much see where the error is when we

627
00:28:13,829 --> 00:28:24,210
create the file we don't reopen it right

628
00:28:19,200 --> 00:28:25,680
so we're passing in a file info that's

629
00:28:24,210 --> 00:28:32,009
not valid anymore

630
00:28:25,680 --> 00:28:33,900
right and part of this is just because

631
00:28:32,009 --> 00:28:35,490
our file system stuff is kind of janky

632
00:28:33,900 --> 00:28:37,440
it's it's we've kind of gone through

633
00:28:35,490 --> 00:28:39,329
several rounds of deciding we wanted to

634
00:28:37,440 --> 00:28:42,690
do more stuff with files than we had

635
00:28:39,329 --> 00:28:44,339
hoped you know what I mean and so at

636
00:28:42,690 --> 00:28:45,750
this point it may be the case that we

637
00:28:44,339 --> 00:28:48,329
really would rather do something a

638
00:28:45,750 --> 00:28:51,269
little bit different here because it's

639
00:28:48,329 --> 00:28:55,049
sort of it's sort of becoming a little

640
00:28:51,269 --> 00:28:59,670
bit too cumbersome right but if you take

641
00:28:55,049 --> 00:29:04,409
a look here at it for creates hhj by

642
00:28:59,670 --> 00:29:07,590
stem what I'd like to do here is I would

643
00:29:04,410 --> 00:29:11,340
like to have some way of refreshing this

644
00:29:07,589 --> 00:29:14,129
file info right and at the moment we

645
00:29:11,339 --> 00:29:17,399
don't have that what I can do instead is

646
00:29:14,130 --> 00:29:25,040
literally just call it again so I could

647
00:29:17,400 --> 00:29:25,040
say here like this right

648
00:29:42,569 --> 00:29:47,950
so not great but we know what the

649
00:29:46,119 --> 00:29:49,869
problem is and we can patch around it

650
00:29:47,950 --> 00:29:51,220
for now which is fine but I'm gonna flag

651
00:29:49,869 --> 00:29:55,839
that with it to do because it's not

652
00:29:51,220 --> 00:29:59,769
fabulous right so you know we'll take a

653
00:29:55,839 --> 00:30:02,230
look so if I jump back there to the

654
00:29:59,769 --> 00:30:04,240
ghetto create oh well you know what I

655
00:30:02,230 --> 00:30:06,339
should do is delete that file because I

656
00:30:04,240 --> 00:30:09,130
want to run that test again and now that

657
00:30:06,339 --> 00:30:10,929
thing exists so I want to delete that

658
00:30:09,130 --> 00:30:13,210
and watch I want to watch that happen

659
00:30:10,930 --> 00:30:17,410
again

660
00:30:13,210 --> 00:30:26,440
so if I go ahead and and and and step in

661
00:30:17,410 --> 00:30:33,400
there I mean let's go here no I keep

662
00:30:26,440 --> 00:30:35,230
doing that okay if I go ahead and step

663
00:30:33,400 --> 00:30:39,310
in there I want to take a look yeah so

664
00:30:35,230 --> 00:30:40,930
that's we created I want to take a look

665
00:30:39,309 --> 00:30:43,929
and see now if we get the right file

666
00:30:40,930 --> 00:30:45,730
size for that so let's jump in here

667
00:30:43,930 --> 00:30:47,170
let's go to the getter create so that

668
00:30:45,730 --> 00:30:49,299
first directive right here if that's

669
00:30:47,170 --> 00:30:50,680
gonna get or create that file we're just

670
00:30:49,299 --> 00:30:54,190
looking for the file here I'm gonna set

671
00:30:50,680 --> 00:30:55,570
a breakpoint when we actually go to init

672
00:30:54,190 --> 00:30:57,940
it and verify that the file inflow

673
00:30:55,569 --> 00:31:00,309
actually has some size now it does so

674
00:30:57,940 --> 00:31:01,779
that you know should fix that problem we

675
00:31:00,309 --> 00:31:03,819
come through here and we create it and

676
00:31:01,779 --> 00:31:05,019
then we do the watermark retraction that

677
00:31:03,819 --> 00:31:07,750
should just work because the high-water

678
00:31:05,019 --> 00:31:10,960
mark should actually just be exactly the

679
00:31:07,750 --> 00:31:12,309
same as it was of course visually

680
00:31:10,960 --> 00:31:14,710
doesn't let me inspect file because

681
00:31:12,309 --> 00:31:19,149
we've fallen out of here I don't know

682
00:31:14,710 --> 00:31:23,079
why they change that horrible anyway so

683
00:31:19,150 --> 00:31:26,530
once we grab the results now we've got

684
00:31:23,079 --> 00:31:28,839
the file sort of ready to go and in

685
00:31:26,529 --> 00:31:31,750
theory that should give us what we need

686
00:31:28,839 --> 00:31:34,089
to start importing from this file so

687
00:31:31,750 --> 00:31:37,990
into the context which is something that

688
00:31:34,089 --> 00:31:38,829
we use for doing further importing we

689
00:31:37,990 --> 00:31:41,259
have some addition

690
00:31:38,829 --> 00:31:43,869
the fields here like what file index we

691
00:31:41,259 --> 00:31:46,629
are going to be importing into again

692
00:31:43,869 --> 00:31:48,219
that's just kind of a useful thing for

693
00:31:46,630 --> 00:31:51,010
everything that we load to like shove

694
00:31:48,220 --> 00:31:52,600
into the right file and we've got the

695
00:31:51,009 --> 00:31:54,429
rest of stuff like the default fields

696
00:31:52,599 --> 00:31:55,629
here and so on ready to be populated

697
00:31:54,429 --> 00:31:58,090
right now they don't have anything in

698
00:31:55,630 --> 00:32:00,970
them though so I'm going to go ahead and

699
00:31:58,089 --> 00:32:03,278
start going forwards through here so

700
00:32:00,970 --> 00:32:05,890
when we parse we should now get some

701
00:32:03,278 --> 00:32:08,230
identifiers that we can actually process

702
00:32:05,890 --> 00:32:09,788
so we come in here and now we succeed

703
00:32:08,230 --> 00:32:11,230
because we've added that HHA directive

704
00:32:09,788 --> 00:32:13,089
member before it was failing out on the

705
00:32:11,230 --> 00:32:14,740
default block so here's the default

706
00:32:13,089 --> 00:32:17,199
block what we should see happen is we

707
00:32:14,740 --> 00:32:22,720
should parse this default block

708
00:32:17,200 --> 00:32:25,720
hopefully our copy all up to and

709
00:32:22,720 --> 00:32:27,850
including currently doesn't do anything

710
00:32:25,720 --> 00:32:29,980
since I wanted to bug this you can see

711
00:32:27,849 --> 00:32:31,388
this is where we got to when I ran so

712
00:32:29,980 --> 00:32:33,700
that means we didn't really hit any bugs

713
00:32:31,388 --> 00:32:35,589
yet we just have that not implemented

714
00:32:33,700 --> 00:32:37,480
that's where we're gonna start copying

715
00:32:35,589 --> 00:32:39,009
the thing from one to another I'm gonna

716
00:32:37,480 --> 00:32:41,440
get rid of that right now because we're

717
00:32:39,009 --> 00:32:43,869
not doing that yet so I'm just gonna say

718
00:32:41,440 --> 00:32:47,409
look we're we're assuming that we wrote

719
00:32:43,869 --> 00:32:49,418
something right there and we'll go we'll

720
00:32:47,409 --> 00:32:51,730
go from there right so I'm gonna go

721
00:32:49,419 --> 00:32:54,820
ahead and run up to there this is where

722
00:32:51,730 --> 00:32:57,909
we were and keep going so first things

723
00:32:54,819 --> 00:33:00,609
first we create a place to write the tag

724
00:32:57,909 --> 00:33:02,490
array if we need to what's gonna happen

725
00:33:00,609 --> 00:33:06,699
curious we're not gonna use that because

726
00:33:02,490 --> 00:33:08,710
we've actually we're actually parsing a

727
00:33:06,700 --> 00:33:10,929
default block which has no data at just

728
00:33:08,710 --> 00:33:13,240
setting default fields so you can see us

729
00:33:10,929 --> 00:33:15,880
pulling out those default fields let's

730
00:33:13,240 --> 00:33:19,089
see if we got them right so here's the

731
00:33:15,880 --> 00:33:22,550
default fields and we're about to fill

732
00:33:19,089 --> 00:33:25,039
these out we wrote these into

733
00:33:22,549 --> 00:33:28,009
I think just a thing called fields right

734
00:33:25,039 --> 00:33:30,759
yeah so we wrote these into a thing

735
00:33:28,009 --> 00:33:34,490
called fields so here's what we parsed

736
00:33:30,759 --> 00:33:36,140
right all third description name is not

737
00:33:34,490 --> 00:33:38,990
set which is correct because we don't

738
00:33:36,140 --> 00:33:40,160
have a name set for any of this stuff

739
00:33:38,990 --> 00:33:42,920
here

740
00:33:40,160 --> 00:33:45,050
and so I don't know if we're gonna use

741
00:33:42,920 --> 00:33:47,420
that or not ever but it's you know it's

742
00:33:45,049 --> 00:33:49,639
possible anyway to do so then what we're

743
00:33:47,420 --> 00:33:51,769
gonna do is say look the parsing

744
00:33:49,640 --> 00:33:53,210
succeeded is it a default it is so set

745
00:33:51,769 --> 00:33:55,339
the default fields equal the fields be

746
00:33:53,210 --> 00:33:57,200
parsed there they are so I think that's

747
00:33:55,339 --> 00:33:59,299
fine we're then going to end the

748
00:33:57,200 --> 00:34:01,549
temporary memory because we're finished

749
00:33:59,299 --> 00:34:03,440
parsing that block and then we can keep

750
00:34:01,549 --> 00:34:05,149
going so hey the default parser works

751
00:34:03,440 --> 00:34:06,680
fine that's good news

752
00:34:05,150 --> 00:34:08,329
now we get to something that actually

753
00:34:06,680 --> 00:34:10,490
needs to be imported and here's where

754
00:34:08,329 --> 00:34:13,279
things should get significantly saucy

755
00:34:10,489 --> 00:34:15,049
err so here's our parts top-level block

756
00:34:13,280 --> 00:34:17,150
call here I come through the parse

757
00:34:15,050 --> 00:34:19,400
top-level block call it is not a default

758
00:34:17,150 --> 00:34:21,680
this time so now what I need to do is I

759
00:34:19,400 --> 00:34:24,369
need to parse out where the art is

760
00:34:21,679 --> 00:34:28,489
actually going to come from so here is

761
00:34:24,369 --> 00:34:32,480
that file name you can see title screen

762
00:34:28,489 --> 00:34:35,569
the PNG being set there and that title

763
00:34:32,480 --> 00:34:37,460
screen dot PNG is where we need to grab

764
00:34:35,570 --> 00:34:39,230
the art from so first we have to

765
00:34:37,460 --> 00:34:41,179
construct a path thing that tells us

766
00:34:39,230 --> 00:34:42,800
where it comes from you can see us doing

767
00:34:41,179 --> 00:34:45,589
it with our format string function we

768
00:34:42,800 --> 00:34:46,670
wrote and so here it is probably not the

769
00:34:45,590 --> 00:34:50,150
best way to view it let's do it like

770
00:34:46,670 --> 00:34:53,019
this so it's source intro cutscene art

771
00:34:50,150 --> 00:34:56,240
title screen dot PNG did we construct it

772
00:34:53,019 --> 00:34:58,250
properly we can find out let's take a

773
00:34:56,239 --> 00:35:00,739
look from the starting directory which

774
00:34:58,250 --> 00:35:07,130
is this is where the game runs from if

775
00:35:00,739 --> 00:35:10,579
we look in source oh it's sources so no

776
00:35:07,130 --> 00:35:13,820
it's already wrong that's where it

777
00:35:10,579 --> 00:35:15,860
actually is so we needed an S there and

778
00:35:13,820 --> 00:35:17,480
we didn't have one so we can stop right

779
00:35:15,860 --> 00:35:19,160
now because we know that none of our

780
00:35:17,480 --> 00:35:21,949
stuff will import properly because that

781
00:35:19,159 --> 00:35:25,480
was supposed to be an S and it's not an

782
00:35:21,949 --> 00:35:31,699
S so if we take a look at that sources

783
00:35:25,480 --> 00:35:35,539
that's in the import here that just

784
00:35:31,699 --> 00:35:43,049
needed an S at the front of it

785
00:35:35,539 --> 00:35:49,110
like so and that's all we needed all

786
00:35:43,050 --> 00:35:51,630
right try one more time no errors there

787
00:35:49,110 --> 00:35:53,700
if I go ahead and set a breakpoint here

788
00:35:51,630 --> 00:35:56,940
we should be able to jump directly to it

789
00:35:53,699 --> 00:35:58,469
so here we go let's produce that again

790
00:35:56,940 --> 00:36:00,030
now this time we should get a path

791
00:35:58,469 --> 00:36:03,059
sources interesting art title screen

792
00:36:00,030 --> 00:36:04,890
that's now what we do expect to see so

793
00:36:03,059 --> 00:36:07,139
that's good now we're gonna try to get

794
00:36:04,889 --> 00:36:09,569
that file and see if the OS can load it

795
00:36:07,139 --> 00:36:11,940
it can let's see if it got the file size

796
00:36:09,570 --> 00:36:14,010
right it looks like it did so we're good

797
00:36:11,940 --> 00:36:16,200
to go now so the first thing we do is

798
00:36:14,010 --> 00:36:18,330
look to see if we have a match for this

799
00:36:16,199 --> 00:36:21,899
particular asset source file in this

800
00:36:18,329 --> 00:36:24,420
case we we don't I don't think so we

801
00:36:21,900 --> 00:36:26,240
wouldn't have seen this one before right

802
00:36:24,420 --> 00:36:28,320
this isn't a if this isn't

803
00:36:26,239 --> 00:36:31,829
something that we would know where it

804
00:36:28,320 --> 00:36:33,510
goes so when we get back this match it

805
00:36:31,829 --> 00:36:35,699
should be basically a fresh match with

806
00:36:33,510 --> 00:36:39,030
nothing in it it should just have

807
00:36:35,699 --> 00:36:40,980
nothing anywhere in here and I assume

808
00:36:39,030 --> 00:36:41,730
like the errors stream shouldn't have

809
00:36:40,980 --> 00:36:44,130
anything in it

810
00:36:41,730 --> 00:36:46,110
right yet doesn't and the asset indices

811
00:36:44,130 --> 00:36:47,610
should be all zeroes so it's basically

812
00:36:46,110 --> 00:36:49,710
just a fresh stream with nothing in it

813
00:36:47,610 --> 00:36:52,950
it doesn't have a date or the checksum

814
00:36:49,710 --> 00:36:56,840
or any of that stuff set now that part

815
00:36:52,949 --> 00:37:01,629
I'm not sure if that's what we want

816
00:36:56,840 --> 00:37:05,269
because that should get set

817
00:37:01,630 --> 00:37:05,269
[Music]

818
00:37:14,940 --> 00:37:20,579
I guess the only thing that I'm a little

819
00:37:17,699 --> 00:37:23,278
concerned about here is the fact that we

820
00:37:20,579 --> 00:37:34,798
don't set it till afterward like we

821
00:37:23,278 --> 00:37:39,179
don't set that stuff until here but I

822
00:37:34,798 --> 00:37:42,239
guess that's okay because the only time

823
00:37:39,179 --> 00:37:44,969
that we would have nothing set in there

824
00:37:42,239 --> 00:37:46,679
is when we will absolutely get to there

825
00:37:44,969 --> 00:37:49,679
because it means we've never loaded it

826
00:37:46,679 --> 00:37:53,639
before so I think that's okay but it's

827
00:37:49,679 --> 00:37:55,768
structured a little weird the code could

828
00:37:53,639 --> 00:37:57,328
definitely be better anyway we're gonna

829
00:37:55,768 --> 00:37:59,459
go into parse pieces and we're gonna

830
00:37:57,329 --> 00:38:02,759
look at what this actually is I don't

831
00:37:59,460 --> 00:38:06,449
actually know what it is oh it's a plate

832
00:38:02,759 --> 00:38:08,219
right it's a title screen plate yeah so

833
00:38:06,449 --> 00:38:10,469
the title screen plate doesn't have any

834
00:38:08,219 --> 00:38:12,358
asset tags to set because it's just a

835
00:38:10,469 --> 00:38:14,219
plate and plates don't have asset tags

836
00:38:12,358 --> 00:38:16,828
other than the ones listed in the hht

837
00:38:14,219 --> 00:38:19,348
file so it's just an import type setting

838
00:38:16,829 --> 00:38:23,068
and it doesn't change the tag array so

839
00:38:19,349 --> 00:38:24,869
the tag array stays now off we go so we

840
00:38:23,068 --> 00:38:26,460
need a full rebuild here because we've

841
00:38:24,869 --> 00:38:29,400
never seen this file before so the dates

842
00:38:26,460 --> 00:38:31,170
don't match and off we go so that all

843
00:38:29,400 --> 00:38:34,769
worked reasonably okay even though it's

844
00:38:31,170 --> 00:38:37,588
a little convoluted we then open up the

845
00:38:34,768 --> 00:38:39,000
brace for the data from this file and

846
00:38:37,588 --> 00:38:41,400
we're gonna start looking at the actual

847
00:38:39,000 --> 00:38:42,539
data we look through here and we see

848
00:38:41,400 --> 00:38:44,670
what we get

849
00:38:42,539 --> 00:38:48,000
first we see the tags so we go into the

850
00:38:44,670 --> 00:38:49,889
tag part of the tag list parser this is

851
00:38:48,000 --> 00:38:52,079
pulling out and just so those of you who

852
00:38:49,889 --> 00:38:54,538
don't remember the files structure very

853
00:38:52,079 --> 00:38:56,880
well inside here there's basically just

854
00:38:54,539 --> 00:38:59,519
tags that say what these things are so

855
00:38:56,880 --> 00:39:01,559
you can see here that we have this title

856
00:38:59,518 --> 00:39:03,868
screen it says shot index 12 layer index

857
00:39:01,559 --> 00:39:05,548
1 there's really no reason for that

858
00:39:03,869 --> 00:39:09,809
other than we decided that's what it's

859
00:39:05,548 --> 00:39:11,788
what it is we could tag this with just

860
00:39:09,809 --> 00:39:13,490
title screen and make a new tag for that

861
00:39:11,789 --> 00:39:16,349
if we want them to look it up that way

862
00:39:13,489 --> 00:39:20,368
it's arbitrary right that's entirely up

863
00:39:16,349 --> 00:39:22,109
to us so once we do this we just need in

864
00:39:20,369 --> 00:39:23,759
here to know that that's actually going

865
00:39:22,108 --> 00:39:26,578
to get parsed so let's double check that

866
00:39:23,759 --> 00:39:29,130
it does we get an open paren here let's

867
00:39:26,579 --> 00:39:31,950
see what the pram actually ended up

868
00:39:29,130 --> 00:39:35,759
being the tag value is 12 that's what we

869
00:39:31,949 --> 00:39:37,980
expect we should be good to go now and

870
00:39:35,759 --> 00:39:41,068
we added the tag in there the tag ID is

871
00:39:37,980 --> 00:39:44,809
what by the way shot index 12 so that's

872
00:39:41,068 --> 00:39:44,808
exactly what it should be we should now

873
00:39:50,268 --> 00:39:58,588
so we do have one bug once we parse out

874
00:39:54,750 --> 00:40:01,949
the close paren we should have re gotten

875
00:39:58,588 --> 00:40:06,210
the check so we do have an issue there

876
00:40:01,949 --> 00:40:10,608
in here right after when we're actually

877
00:40:06,210 --> 00:40:13,909
parsing the tag list we want to say oh

878
00:40:10,608 --> 00:40:18,389
let's continue getting tokens right

879
00:40:13,909 --> 00:40:20,518
because we want to we want to pick up

880
00:40:18,389 --> 00:40:23,730
whatever we would have picked up after

881
00:40:20,518 --> 00:40:25,469
the parenthetical so that check is

882
00:40:23,730 --> 00:40:27,838
supposed to now be a semicolon or a

883
00:40:25,469 --> 00:40:29,699
comma so we need to call that again so

884
00:40:27,838 --> 00:40:31,710
that was just a parse bug we forgot that

885
00:40:29,699 --> 00:40:35,939
we had parse something new and we want

886
00:40:31,710 --> 00:40:38,670
to get that check all right so if we

887
00:40:35,940 --> 00:40:40,829
continue down that let me just set a

888
00:40:38,670 --> 00:40:44,130
breakpoint there that we can jump to so

889
00:40:40,829 --> 00:40:46,349
here we are so now when we get it we

890
00:40:44,130 --> 00:40:49,500
should be able to do the tag addition

891
00:40:46,349 --> 00:40:54,150
correctly and not fall into an error

892
00:40:49,500 --> 00:40:57,179
case so off we go so now let's see what

893
00:40:54,150 --> 00:40:59,940
we get we get another identifier and

894
00:40:57,179 --> 00:41:00,389
hopefully again we get a tag that makes

895
00:40:59,940 --> 00:41:02,358
sense

896
00:41:00,389 --> 00:41:04,798
later index 1 that's what it should be

897
00:41:02,358 --> 00:41:06,838
so off we go

898
00:41:04,798 --> 00:41:10,018
that's the semicolon that ends the tag

899
00:41:06,838 --> 00:41:12,630
array so now our tag array should just

900
00:41:10,018 --> 00:41:15,149
have those in it it should have two tags

901
00:41:12,630 --> 00:41:17,579
in it and we saw them get parsed so

902
00:41:15,150 --> 00:41:21,480
let's take a look first tag index is 15

903
00:41:17,579 --> 00:41:22,920
25 one pass off thing this is 28 that

904
00:41:21,480 --> 00:41:26,219
doesn't make a lot of sense because we

905
00:41:22,920 --> 00:41:29,490
only parse two tags so how did we end up

906
00:41:26,219 --> 00:41:31,018
with so many more tags because it should

907
00:41:29,489 --> 00:41:33,629
just be 25 26

908
00:41:31,018 --> 00:41:42,088
so one pass last tag index should

909
00:41:33,630 --> 00:41:42,539
actually 1 2015 27 right oh no because

910
00:41:42,088 --> 00:41:45,029
there is

911
00:41:42,539 --> 00:41:47,849
tag which is the asset tag type and in

912
00:41:45,030 --> 00:41:55,950
this case that asset tag type is tag

913
00:41:47,849 --> 00:41:59,309
none interesting so I think we've got

914
00:41:55,949 --> 00:42:02,219
one more bug here right which is that in

915
00:41:59,309 --> 00:42:04,650
end tags the asset basic category needs

916
00:42:02,219 --> 00:42:08,159
to be set in order for this tag array to

917
00:42:04,650 --> 00:42:13,050
be correct or we need to stop having the

918
00:42:08,159 --> 00:42:15,259
asset tag category passed in let's take

919
00:42:13,050 --> 00:42:17,850
a look at how we're doing those end tags

920
00:42:15,260 --> 00:42:22,230
so where are those actually getting

921
00:42:17,849 --> 00:42:25,799
called right so when we do stamp assets

922
00:42:22,230 --> 00:42:29,550
let's take a look when we do stamp

923
00:42:25,800 --> 00:42:35,240
assets we go through and we do asset

924
00:42:29,550 --> 00:42:40,740
asset type based on the import grid tags

925
00:42:35,239 --> 00:42:46,109
stuff but do we ever actually set that

926
00:42:40,739 --> 00:42:48,419
tag ID add tag an tag asset none so we

927
00:42:46,110 --> 00:42:53,070
actually need the tags type ID to be

928
00:42:48,420 --> 00:42:58,230
passed here but that's fine so that's

929
00:42:53,070 --> 00:43:01,380
okay so I think maybe we're all right

930
00:42:58,230 --> 00:43:09,659
the only thing we need to do is in here

931
00:43:01,380 --> 00:43:17,250
don't do this if the category is asset

932
00:43:09,659 --> 00:43:19,349
type none right so I think that we're

933
00:43:17,250 --> 00:43:20,940
still probably okay again a little

934
00:43:19,349 --> 00:43:22,980
jankier than I would like because

935
00:43:20,940 --> 00:43:27,079
there's a lot going on here and we've

936
00:43:22,980 --> 00:43:30,570
we've sort of we you know we sort of

937
00:43:27,079 --> 00:43:32,849
re-architected this in place and so not

938
00:43:30,570 --> 00:43:36,350
everything flows the way that you would

939
00:43:32,849 --> 00:43:40,049
want but we can improve that over time

940
00:43:36,349 --> 00:43:42,839
so I think that's correct we just won't

941
00:43:40,050 --> 00:43:44,519
add the basic category tag if one is not

942
00:43:42,840 --> 00:43:46,230
specified and then later when you build

943
00:43:44,519 --> 00:43:49,019
one and it is specified we will add it

944
00:43:46,230 --> 00:43:52,949
so I think that should do what we needed

945
00:43:49,019 --> 00:43:54,460
to do all right so now when we come

946
00:43:52,949 --> 00:43:57,639
through here and do asset

947
00:43:54,460 --> 00:43:59,380
and we do this ad tag it'll only get

948
00:43:57,639 --> 00:44:01,778
called so this time it won't get called

949
00:43:59,380 --> 00:44:04,358
and we should get the right number if we

950
00:44:01,778 --> 00:44:06,579
look here now you can see 25 to 26 and

951
00:44:04,358 --> 00:44:09,578
27 is the end tag which is what we want

952
00:44:06,579 --> 00:44:13,539
so that's all fine so that looks much

953
00:44:09,579 --> 00:44:15,548
better now than it did all right so now

954
00:44:13,539 --> 00:44:18,460
we've parsed what was in there that's it

955
00:44:15,548 --> 00:44:22,239
so now we're ready to say look let's

956
00:44:18,460 --> 00:44:25,298
let's finish up and build a file we hit

957
00:44:22,239 --> 00:44:27,729
the parsing and it said no it's not time

958
00:44:25,298 --> 00:44:30,538
to parse so what happened it looks like

959
00:44:27,730 --> 00:44:33,219
we've got some kind of an error there

960
00:44:30,539 --> 00:44:36,069
and I'm not sure what that is presumably

961
00:44:33,219 --> 00:44:37,929
we hit the closed brace and left so we

962
00:44:36,068 --> 00:44:46,659
must have hit an error what was the

963
00:44:37,929 --> 00:44:49,210
error right so let's take a look so here

964
00:44:46,659 --> 00:44:51,730
we are in error and the error is

965
00:44:49,210 --> 00:44:53,588
unexpected token type how did we get it

966
00:44:51,730 --> 00:44:57,519
we got it when we were parsing the

967
00:44:53,588 --> 00:45:00,219
top-level block and it looks like we

968
00:44:57,519 --> 00:45:03,608
required token the token we required was

969
00:45:00,219 --> 00:45:05,709
a semicolon and we didn't get one so the

970
00:45:03,608 --> 00:45:07,298
question is why didn't we get one well

971
00:45:05,710 --> 00:45:10,778
we didn't get one because it is in fact

972
00:45:07,298 --> 00:45:14,139
missing a semicolon so that's easy

973
00:45:10,778 --> 00:45:15,179
enough again just a parse error and off

974
00:45:14,139 --> 00:45:18,519
we go

975
00:45:15,179 --> 00:45:21,669
so oh I didn't have to rebuild we didn't

976
00:45:18,519 --> 00:45:24,250
change the code so let's go ahead and

977
00:45:21,670 --> 00:45:26,260
run again again just kind of chipping

978
00:45:24,250 --> 00:45:29,079
away at the various errors that we have

979
00:45:26,260 --> 00:45:32,680
there so this time now we've actually

980
00:45:29,079 --> 00:45:34,119
made it to here and I'm gonna skip the

981
00:45:32,679 --> 00:45:36,519
first one because this is the default

982
00:45:34,119 --> 00:45:38,440
block right this is this one so I

983
00:45:36,519 --> 00:45:40,769
actually want the second one oops we got

984
00:45:38,440 --> 00:45:40,769
what's

985
00:45:45,539 --> 00:45:52,709
mmm we should have gotten one this time

986
00:45:48,059 --> 00:45:56,189
yeah should we not have because there's

987
00:45:52,708 --> 00:46:01,998
the tags and there's the clothes racing

988
00:45:56,188 --> 00:46:01,998
oh well these don't have it either

989
00:46:02,599 --> 00:46:07,249
that's probably not what the bug was but

990
00:46:09,798 --> 00:46:16,909
we should at least make our files

991
00:46:11,699 --> 00:46:21,659
correctly now it's worth noting that we

992
00:46:16,909 --> 00:46:24,449
could not bother with the semicolons if

993
00:46:21,659 --> 00:46:31,528
we wanted to just assume that if you see

994
00:46:24,449 --> 00:46:34,139
something new it's you know it's

995
00:46:31,528 --> 00:46:35,969
different but I just wanted this to kind

996
00:46:34,139 --> 00:46:38,099
of look more like see so I like to

997
00:46:35,969 --> 00:46:42,059
having a semicolons in there all right

998
00:46:38,099 --> 00:46:43,949
so let's save that and in base game you

999
00:46:42,059 --> 00:46:46,069
can see we've got all the semicolons so

1000
00:46:43,949 --> 00:46:49,289
this one was constructed more correctly

1001
00:46:46,068 --> 00:46:51,630
all right so in here let me run again

1002
00:46:49,289 --> 00:46:55,709
and let's see what we get

1003
00:46:51,630 --> 00:46:57,509
there's that require token we run again

1004
00:46:55,708 --> 00:46:58,588
and we're getting a required token

1005
00:46:57,509 --> 00:46:59,668
around the semicolon so I think this

1006
00:46:58,588 --> 00:47:00,778
time we're parsing it wrong because it

1007
00:46:59,668 --> 00:47:05,548
looks like we've got everything correct

1008
00:47:00,778 --> 00:47:08,838
in there and so something's up about

1009
00:47:05,548 --> 00:47:13,918
this so I'm gonna set a breakpoint there

1010
00:47:08,838 --> 00:47:17,458
and see what's going on so here's the

1011
00:47:13,918 --> 00:47:20,308
first time we call this and I'm just

1012
00:47:17,458 --> 00:47:21,958
gonna look at the tokenizer to see what

1013
00:47:20,309 --> 00:47:24,599
it's going to get here's the input

1014
00:47:21,958 --> 00:47:26,489
stream so it is going to get a semicolon

1015
00:47:24,599 --> 00:47:30,749
on that right it is gonna get a

1016
00:47:26,489 --> 00:47:34,918
semicolon on that is not gonna get a

1017
00:47:30,748 --> 00:47:42,688
semicolon on this though so this is

1018
00:47:34,918 --> 00:47:45,538
right before the default block so it

1019
00:47:42,688 --> 00:47:48,259
looks like we ate the semicolon on the

1020
00:47:45,539 --> 00:47:48,259
tag array

1021
00:47:55,039 --> 00:47:58,369
am i right

1022
00:48:03,610 --> 00:48:10,120
but the peak token call shouldn't have

1023
00:48:07,909 --> 00:48:10,119
done that

1024
00:48:11,469 --> 00:48:26,049
did we implement hoops Wow

1025
00:48:16,429 --> 00:48:26,049
typing problems today so it doesn't look

1026
00:48:26,769 --> 00:48:32,719
it doesn't look weird I will say this is

1027
00:48:29,989 --> 00:48:36,409
a dumb way to do this like you would

1028
00:48:32,719 --> 00:48:37,609
just do that right but still that

1029
00:48:36,409 --> 00:48:39,469
doesn't look like the problem because

1030
00:48:37,610 --> 00:48:43,309
that looks like that would have operated

1031
00:48:39,469 --> 00:48:44,750
properly so I don't think that's the

1032
00:48:43,309 --> 00:48:46,429
problem but clearly like why would you

1033
00:48:44,750 --> 00:48:47,960
copy it back in when you when you have a

1034
00:48:46,429 --> 00:48:50,779
duplicate one right here you might as

1035
00:48:47,960 --> 00:48:52,639
well just go ahead and do it right so

1036
00:48:50,780 --> 00:48:54,260
that's a little bit a little bit weird

1037
00:48:52,639 --> 00:48:57,049
so we should just do it like this

1038
00:48:54,260 --> 00:48:58,850
because it's just more efficient that's

1039
00:48:57,050 --> 00:49:00,590
it

1040
00:48:58,849 --> 00:49:04,039
you know compiler probably we figured

1041
00:49:00,590 --> 00:49:06,170
that one out for us so anyway if I take

1042
00:49:04,039 --> 00:49:08,360
a look a little kit more carefully now I

1043
00:49:06,170 --> 00:49:11,500
want to see like what is going on there

1044
00:49:08,360 --> 00:49:14,300
because it looks like our peak token is

1045
00:49:11,500 --> 00:49:20,840
is having an issue so let's see what

1046
00:49:14,300 --> 00:49:26,480
happens at that line of code so here we

1047
00:49:20,840 --> 00:49:29,150
are at the oh so hmm how do we never get

1048
00:49:26,480 --> 00:49:30,650
to how did we never get to that line of

1049
00:49:29,150 --> 00:49:32,800
code that's very strange right because

1050
00:49:30,650 --> 00:49:35,780
that we should have gotten to the tags I

1051
00:49:32,800 --> 00:49:37,460
mean how do we not get to the tags how

1052
00:49:35,780 --> 00:49:41,450
do we not get to that break point that I

1053
00:49:37,460 --> 00:49:50,840
just set when the tokenizer right if we

1054
00:49:41,449 --> 00:49:56,869
look at the input here's the input it is

1055
00:49:50,840 --> 00:50:02,650
parsed the tag array right so if it

1056
00:49:56,869 --> 00:50:02,650
parts the tag array what happened

1057
00:50:08,309 --> 00:50:11,309
aha

1058
00:50:11,699 --> 00:50:17,019
so yeah you can see what's going on here

1059
00:50:14,199 --> 00:50:19,809
right if we got to it semicolon we have

1060
00:50:17,018 --> 00:50:22,718
an issue because basically that that

1061
00:50:19,809 --> 00:50:24,969
peak token so we really need to use peak

1062
00:50:22,719 --> 00:50:27,369
token more is what it boils down to this

1063
00:50:24,969 --> 00:50:28,809
is just just too ugly right we do a peak

1064
00:50:27,369 --> 00:50:30,039
so can we see if we get the semicolon

1065
00:50:28,809 --> 00:50:31,329
the other thing we could do is roll the

1066
00:50:30,039 --> 00:50:32,559
semicolon parsing into the other thing

1067
00:50:31,329 --> 00:50:34,149
but I don't know if we really want to do

1068
00:50:32,559 --> 00:50:35,769
that so if you come through here you can

1069
00:50:34,148 --> 00:50:37,958
see we peek the token if you see a

1070
00:50:35,768 --> 00:50:42,068
semicolon we bail if we see an end of

1071
00:50:37,958 --> 00:50:44,798
fire we'd get it we need to then do this

1072
00:50:42,068 --> 00:50:47,528
as a peek token right so we see if the

1073
00:50:44,798 --> 00:50:49,989
if the thing is an open paren then we do

1074
00:50:47,528 --> 00:50:52,239
a get token on that too you know

1075
00:50:49,989 --> 00:50:54,338
retire the open paren and we can do a

1076
00:50:52,239 --> 00:50:56,858
sort of make sure that we didn't screw

1077
00:50:54,338 --> 00:50:59,679
up if we want to hear right can do it

1078
00:50:56,858 --> 00:51:02,739
that way we can get the open paren do

1079
00:50:59,679 --> 00:51:05,079
this and then peek this token right

1080
00:51:02,739 --> 00:51:11,588
once we peek the token we can say look

1081
00:51:05,079 --> 00:51:14,528
what was it we'll see which one it was

1082
00:51:11,588 --> 00:51:16,748
if it's a common comma we'll retire it

1083
00:51:14,528 --> 00:51:18,759
otherwise we'll keep going I'm sorry

1084
00:51:16,748 --> 00:51:21,009
otherwise we'll bail out on the Senate

1085
00:51:18,759 --> 00:51:22,778
go on and that way we're just only

1086
00:51:21,009 --> 00:51:27,639
looking to see if we're gonna settle on

1087
00:51:22,778 --> 00:51:29,438
if we are we'll stop right that's really

1088
00:51:27,639 --> 00:51:32,259
all there is to it not particularly

1089
00:51:29,438 --> 00:51:33,938
complicated so I think that solves a

1090
00:51:32,259 --> 00:51:37,748
problem we were having there and now we

1091
00:51:33,938 --> 00:51:41,138
won't have that weird like issue with

1092
00:51:37,748 --> 00:51:43,628
eating the semicolon again not the

1093
00:51:41,139 --> 00:51:43,809
cleanest stuff but that's I'm fine with

1094
00:51:43,628 --> 00:51:48,338
that

1095
00:51:43,809 --> 00:51:50,319
so let's take a look required token now

1096
00:51:48,338 --> 00:51:53,768
we should be able to get here more

1097
00:51:50,318 --> 00:51:55,838
reliably I think and so this is the

1098
00:51:53,768 --> 00:51:56,918
default one if I come back here now we

1099
00:51:55,838 --> 00:51:59,528
should be able to go into the non

1100
00:51:56,918 --> 00:52:01,628
default one we've got the match here's

1101
00:51:59,528 --> 00:52:06,128
the information on the death file index

1102
00:52:01,628 --> 00:52:07,989
it doesn't currently have one so it's

1103
00:52:06,128 --> 00:52:09,788
going to overwrite it right you can see

1104
00:52:07,989 --> 00:52:10,869
it doing that there and now that means

1105
00:52:09,789 --> 00:52:11,949
we definitely need a full rebuild

1106
00:52:10,869 --> 00:52:13,899
because going into completely different

1107
00:52:11,949 --> 00:52:15,159
HHA which again we already knew we need

1108
00:52:13,898 --> 00:52:18,019
if you throw a so it doesn't really

1109
00:52:15,159 --> 00:52:21,110
matter so now we're going to action

1110
00:52:18,019 --> 00:52:24,230
load the file right so we open up the

1111
00:52:21,110 --> 00:52:26,300
file and we load it all in so now we've

1112
00:52:24,230 --> 00:52:28,789
got the entire data there now we update

1113
00:52:26,300 --> 00:52:32,480
our match record so that we know that

1114
00:52:28,789 --> 00:52:33,739
it's there right and that's good then we

1115
00:52:32,480 --> 00:52:37,820
come through here and we say all right

1116
00:52:33,739 --> 00:52:39,500
let's take a look at the contents by

1117
00:52:37,820 --> 00:52:42,860
making a stream and asking the ping

1118
00:52:39,500 --> 00:52:45,079
parser to parse that string so hopefully

1119
00:52:42,860 --> 00:52:46,160
we've gotten it all in there we do so

1120
00:52:45,079 --> 00:52:48,559
now we're all good

1121
00:52:46,159 --> 00:52:50,480
then we say it was a plate import we

1122
00:52:48,559 --> 00:52:52,279
know that we were told that let's go

1123
00:52:50,480 --> 00:52:53,960
into process plate import make sure that

1124
00:52:52,280 --> 00:52:55,430
works we set up the width and height we

1125
00:52:53,960 --> 00:52:57,320
do the image extraction which is

1126
00:52:55,429 --> 00:52:58,609
happening here again it's in debug mode

1127
00:52:57,320 --> 00:53:00,769
so it's much slower than it would

1128
00:52:58,610 --> 00:53:03,200
normally be we look up the down sample

1129
00:53:00,769 --> 00:53:05,210
count we down sample and then we write

1130
00:53:03,199 --> 00:53:07,549
the image back to the HHA file which in

1131
00:53:05,210 --> 00:53:09,679
theory should just work hopefully right

1132
00:53:07,550 --> 00:53:11,930
so here it goes right we're writing it

1133
00:53:09,679 --> 00:53:13,609
back to the HHA blah blah blah blah blah

1134
00:53:11,929 --> 00:53:15,710
this is all code we had had running

1135
00:53:13,610 --> 00:53:18,140
before so all that stuff just gets set

1136
00:53:15,710 --> 00:53:19,760
up and we remember that we wrote this

1137
00:53:18,139 --> 00:53:23,659
thing in there and now big data is out

1138
00:53:19,760 --> 00:53:26,260
to the file happy birthday right so then

1139
00:53:23,659 --> 00:53:30,469
at the end if the metadata changed or

1140
00:53:26,260 --> 00:53:34,220
the the thing was built rebuilt in its

1141
00:53:30,469 --> 00:53:38,359
entirely I don't know needs metadata

1142
00:53:34,219 --> 00:53:44,869
change I don't know we currently just

1143
00:53:38,360 --> 00:53:47,269
don't set that right like we need to we

1144
00:53:44,869 --> 00:53:51,079
need to have some way of recording that

1145
00:53:47,269 --> 00:53:53,619
that has happened I don't know that we

1146
00:53:51,079 --> 00:53:53,619
do

1147
00:54:02,199 --> 00:54:06,919
so one problem that we definitely have

1148
00:54:04,760 --> 00:54:10,790
here is like we don't have a comparison

1149
00:54:06,920 --> 00:54:15,858
for these things right like we need to

1150
00:54:10,789 --> 00:54:28,070
compare and set the needs metadata so

1151
00:54:15,858 --> 00:54:29,869
like somewhere in here you know we're

1152
00:54:28,070 --> 00:54:31,940
running through the files we're parsing

1153
00:54:29,869 --> 00:54:34,280
the top level blocks every time we get

1154
00:54:31,940 --> 00:54:35,570
to a top level block we need to know if

1155
00:54:34,280 --> 00:54:36,980
we need to do a full rebuild

1156
00:54:35,570 --> 00:54:39,470
I think we're detecting that correctly

1157
00:54:36,980 --> 00:54:42,320
but if the metadata is out of date and

1158
00:54:39,469 --> 00:54:43,730
we need to rewrite that we're not

1159
00:54:42,320 --> 00:54:47,180
currently doing that

1160
00:54:43,730 --> 00:54:49,789
so after this parse like where all of

1161
00:54:47,179 --> 00:54:53,629
this stuff comes in we need to do a diff

1162
00:54:49,789 --> 00:54:59,980
here right that says all right do we

1163
00:54:53,630 --> 00:55:04,608
need like right this needs to get set

1164
00:54:59,980 --> 00:55:07,340
and so if we just take a look needs meta

1165
00:55:04,608 --> 00:55:11,179
rebuild you can see that you know it

1166
00:55:07,340 --> 00:55:14,420
just gets set to false and then it it

1167
00:55:11,179 --> 00:55:17,868
never it would never get set to true and

1168
00:55:14,420 --> 00:55:19,760
there definitely are cases where the hht

1169
00:55:17,869 --> 00:55:27,530
file we change like the tags or

1170
00:55:19,760 --> 00:55:31,340
something right if we've got situations

1171
00:55:27,530 --> 00:55:35,200
like that we want to now have some way

1172
00:55:31,340 --> 00:55:37,789
of differing the metadata to make sure

1173
00:55:35,199 --> 00:55:40,759
that we don't need to rewrite that and

1174
00:55:37,789 --> 00:55:44,389
so we need a function here and we can

1175
00:55:40,760 --> 00:55:45,830
also say like I mean you know we could

1176
00:55:44,389 --> 00:55:47,059
make it so that just gets defined here

1177
00:55:45,829 --> 00:55:52,369
but I'm not going to do that I'm gonna

1178
00:55:47,059 --> 00:55:55,639
say if the metadata is not already

1179
00:55:52,369 --> 00:55:57,440
scheduled for a rebuild right so if it

1180
00:55:55,639 --> 00:56:03,769
needs meta rebuild is not already

1181
00:55:57,440 --> 00:56:06,070
scheduled and we detect a difference so

1182
00:56:03,769 --> 00:56:06,070
like

1183
00:56:10,440 --> 00:56:14,349
so there's a magic function we haven't

1184
00:56:12,760 --> 00:56:15,010
written yet right snuffleupagus or into

1185
00:56:14,349 --> 00:56:16,569
programming

1186
00:56:15,010 --> 00:56:18,250
imagine we had something that did what

1187
00:56:16,570 --> 00:56:22,090
we wanted right

1188
00:56:18,250 --> 00:56:24,630
what would we pass to this thing so we

1189
00:56:22,090 --> 00:56:29,440
know we need to look at the assets that

1190
00:56:24,630 --> 00:56:31,630
currently are in there and we know we

1191
00:56:29,440 --> 00:56:35,920
need to sort of hand them the stuff that

1192
00:56:31,630 --> 00:56:38,590
we would have been shipped like handing

1193
00:56:35,920 --> 00:56:41,349
it right and then we would have to do

1194
00:56:38,590 --> 00:56:43,900
the needs mehta rebuild now looking at

1195
00:56:41,349 --> 00:56:46,599
that I think this can be deferred and

1196
00:56:43,900 --> 00:56:48,160
that's important if we're doing a full

1197
00:56:46,599 --> 00:56:53,819
rebuild we're doing a full rebuild so

1198
00:56:48,159 --> 00:56:56,739
off it goes really this thing right here

1199
00:56:53,820 --> 00:56:58,119
maybe is the right thing to look and see

1200
00:56:56,739 --> 00:57:00,429
whether we need to do it because it's

1201
00:56:58,119 --> 00:57:02,800
already iterating over everything to see

1202
00:57:00,429 --> 00:57:07,118
whether it needs to do the stamping or

1203
00:57:02,800 --> 00:57:09,789
not right so what I might do is say

1204
00:57:07,119 --> 00:57:13,150
maybe needs mehta rebuild just isn't

1205
00:57:09,789 --> 00:57:15,699
something that ever actually happens so

1206
00:57:13,150 --> 00:57:18,460
we can actually delete that and instead

1207
00:57:15,699 --> 00:57:22,118
what we do is we say look let's call

1208
00:57:18,460 --> 00:57:25,289
stamp assets and just say we always call

1209
00:57:22,119 --> 00:57:28,510
it right and maybe it's not even called

1210
00:57:25,289 --> 00:57:35,320
stamp assets maybe what it's called is

1211
00:57:28,510 --> 00:57:40,840
like update asset metadata right and so

1212
00:57:35,320 --> 00:57:42,789
in here we say we're gonna go through

1213
00:57:40,840 --> 00:57:44,890
everything and we're gonna make sure

1214
00:57:42,789 --> 00:57:47,650
that the tags are right for everything

1215
00:57:44,889 --> 00:57:52,139
in here and then that's the end of it

1216
00:57:47,650 --> 00:57:52,139
right make sense

1217
00:57:59,248 --> 00:58:08,588
um the way we want this to work is to

1218
00:58:05,798 --> 00:58:11,858
diff the things that it's about to write

1219
00:58:08,588 --> 00:58:15,338
and not write them if they're already

1220
00:58:11,858 --> 00:58:19,088
the same right so if whenever we're

1221
00:58:15,338 --> 00:58:23,409
seeing in the asset HHA already is fine

1222
00:58:19,088 --> 00:58:25,838
then we don't need to do anything so

1223
00:58:23,409 --> 00:58:29,918
what I'd like to do is say well alright

1224
00:58:25,838 --> 00:58:34,409
we've got you know asset string assets

1225
00:58:29,918 --> 00:58:37,719
stream here right are all happening and

1226
00:58:34,409 --> 00:58:41,438
we've got these tag arrays right and

1227
00:58:37,719 --> 00:58:45,130
those are happening so really all we

1228
00:58:41,438 --> 00:58:47,528
need to do here is when we do this this

1229
00:58:45,130 --> 00:58:50,979
tag set here week and if these two

1230
00:58:47,528 --> 00:58:52,630
things right so we could say like is the

1231
00:58:50,978 --> 00:58:55,948
tag array that already exists different

1232
00:58:52,630 --> 00:58:59,140
if it's not then don't change it right

1233
00:58:55,949 --> 00:59:04,028
so that's one thing we can do another

1234
00:58:59,139 --> 00:59:10,028
thing we can do is say well if the asset

1235
00:59:04,028 --> 00:59:11,380
type the asset site doesn't really

1236
00:59:10,028 --> 00:59:12,668
matter because that's just in the tag

1237
00:59:11,380 --> 00:59:14,528
array so that's actually not a right

1238
00:59:12,668 --> 00:59:16,900
back the other thing we do is say okay

1239
00:59:14,528 --> 00:59:18,369
if these asset strings are already the

1240
00:59:16,900 --> 00:59:21,159
exactly the same

1241
00:59:18,369 --> 00:59:23,289
we don't write those back and then

1242
00:59:21,159 --> 00:59:25,509
finally for the error stream we could

1243
00:59:23,289 --> 00:59:27,069
just say if there's no error stream then

1244
00:59:25,509 --> 00:59:30,639
we don't have to write that anyway so

1245
00:59:27,068 --> 00:59:32,318
that's a pretty simple one that could

1246
00:59:30,639 --> 00:59:34,509
probably be just left as it is because

1247
00:59:32,318 --> 00:59:38,318
it won't actually reserve any space if

1248
00:59:34,509 --> 00:59:41,588
there are no errors right it'll just be

1249
00:59:38,318 --> 00:59:45,219
like zero as always so I feel like

1250
00:59:41,588 --> 00:59:48,188
mostly all we need to do is make write

1251
00:59:45,219 --> 00:59:51,458
asset string do a diff so we could be

1252
00:59:48,188 --> 00:59:56,768
update asset string instead let me see

1253
00:59:51,458 --> 00:59:59,678
how often we call that it's only here so

1254
00:59:56,768 --> 01:00:03,088
if this were update asset string right

1255
00:59:59,679 --> 01:00:03,088
so I'm gonna say like

1256
01:00:07,710 --> 01:00:28,059
and in fact oops right so I'm going to

1257
01:00:24,280 --> 01:00:32,460
say that and then I'm going to just go

1258
01:00:28,059 --> 01:00:34,809
to write asset string and oops

1259
01:00:32,460 --> 01:00:40,090
and I'm going to put it to doing there

1260
01:00:34,809 --> 01:00:47,679
it's like to do don't write this if the

1261
01:00:40,090 --> 01:00:49,030
string is already the same so because

1262
01:00:47,679 --> 01:00:50,710
there's really no harm and running again

1263
01:00:49,030 --> 01:00:52,960
it's just wasteful like there's no need

1264
01:00:50,710 --> 01:00:58,090
to do this work so we can save that

1265
01:00:52,960 --> 01:01:00,010
information and move on so similarly the

1266
01:00:58,090 --> 01:01:01,150
and the error streams I'm not too

1267
01:01:00,010 --> 01:01:03,190
worried about because those are just

1268
01:01:01,150 --> 01:01:04,720
gonna get overwritten with zeros usually

1269
01:01:03,190 --> 01:01:06,309
and so in the case where there was no

1270
01:01:04,719 --> 01:01:07,869
errors no harm done if there were errors

1271
01:01:06,309 --> 01:01:09,610
we do need to save them so I don't

1272
01:01:07,869 --> 01:01:11,859
really need to compact those I think

1273
01:01:09,610 --> 01:01:13,329
those are fine so update assets string

1274
01:01:11,860 --> 01:01:16,720
is really the only thing to change there

1275
01:01:13,329 --> 01:01:17,889
so it's really just the tag array that

1276
01:01:16,719 --> 01:01:21,159
is the thing that's a little bit

1277
01:01:17,889 --> 01:01:24,099
complicated so the update asset metadata

1278
01:01:21,159 --> 01:01:26,710
call in this case really just needs to

1279
01:01:24,099 --> 01:01:30,699
do something smarter in this case so

1280
01:01:26,710 --> 01:01:32,920
when you're doing the tag builder what

1281
01:01:30,699 --> 01:01:35,529
we want to do is just not do this block

1282
01:01:32,920 --> 01:01:39,190
if the tags actually aren't different

1283
01:01:35,530 --> 01:01:41,710
right and so we know that we've got to

1284
01:01:39,190 --> 01:01:44,829
tag arrays that come together here and

1285
01:01:41,710 --> 01:01:46,929
then a type ID and that's basically what

1286
01:01:44,829 --> 01:01:49,690
we're gonna see so we just need to say

1287
01:01:46,929 --> 01:01:51,669
is that what's already there meaning is

1288
01:01:49,690 --> 01:01:55,059
is the thing that's in the file the same

1289
01:01:51,670 --> 01:01:57,519
already so if we looked at the H the

1290
01:01:55,059 --> 01:01:59,949
asset HHA first tag index as at a

1291
01:01:57,519 --> 01:02:05,409
Tuesday one past tag index would they

1292
01:01:59,949 --> 01:02:06,039
essentially be exactly the same so I can

1293
01:02:05,409 --> 01:02:12,659
do this

1294
01:02:06,039 --> 01:02:12,659
I think and

1295
01:02:13,668 --> 01:02:23,129
make a thing here where we check exactly

1296
01:02:19,798 --> 01:02:27,438
that so we can go through this set of

1297
01:02:23,130 --> 01:02:35,729
tags we can go through this set of tags

1298
01:02:27,438 --> 01:02:38,009
and then we can check this tag right and

1299
01:02:35,728 --> 01:02:41,879
we should be able to now do a direct

1300
01:02:38,009 --> 01:02:45,329
test to see whether or not these tags

1301
01:02:41,880 --> 01:02:51,959
are equivalent so the first thing we can

1302
01:02:45,329 --> 01:02:56,929
do is check the total tag count right so

1303
01:02:51,958 --> 01:02:56,928
in here we've got this tag array right

1304
01:02:57,498 --> 01:03:11,968
and then we've got this tag array and

1305
01:03:08,809 --> 01:03:13,890
what we can say is if the total tag

1306
01:03:11,969 --> 01:03:15,539
counts don't match then we don't really

1307
01:03:13,889 --> 01:03:17,998
need to look at the tags themselves

1308
01:03:15,539 --> 01:03:20,369
because obviously they're rays are

1309
01:03:17,998 --> 01:03:23,568
different so you know we have to rewrite

1310
01:03:20,369 --> 01:03:33,539
it so we can say if the total tag count

1311
01:03:23,568 --> 01:03:36,028
equals if the total tag count equals how

1312
01:03:33,539 --> 01:03:38,489
many tags are already there then we can

1313
01:03:36,028 --> 01:03:41,130
proceed with the diff otherwise we don't

1314
01:03:38,489 --> 01:03:43,528
need to proceed with the diff because we

1315
01:03:41,130 --> 01:03:46,469
know what's wrong and so we can just

1316
01:03:43,528 --> 01:03:48,929
skip right to rewriting it right so if

1317
01:03:46,469 --> 01:03:54,769
we say look here's how many there are in

1318
01:03:48,929 --> 01:03:54,769
the file at the moment for this asset

1319
01:03:56,088 --> 01:04:01,259
there we go here's how many are in the

1320
01:03:59,309 --> 01:04:03,569
file at the moment here's how many we

1321
01:04:01,259 --> 01:04:05,938
want there to be in the file if those

1322
01:04:03,568 --> 01:04:09,028
two things are the same we can dip them

1323
01:04:05,938 --> 01:04:11,219
if they're not then we're done right so

1324
01:04:09,028 --> 01:04:14,699
then we go through when we say like you

1325
01:04:11,219 --> 01:04:20,340
know test tag index equals

1326
01:04:14,699 --> 01:04:22,349
whatever that first one was right as we

1327
01:04:20,340 --> 01:04:24,360
loop through here all we really need to

1328
01:04:22,349 --> 01:04:38,519
do is say well we've got the source tag

1329
01:04:24,360 --> 01:04:42,809
so we can say it's like if the if the

1330
01:04:38,519 --> 01:04:54,539
test type index in any of these is not

1331
01:04:42,809 --> 01:04:58,279
equal to the source tag so basically if

1332
01:04:54,539 --> 01:05:03,869
the tags aren't equal then we're done

1333
01:04:58,280 --> 01:05:12,660
right and that's really all we need to

1334
01:05:03,869 --> 01:05:19,349
do anywhere in here so I think that's

1335
01:05:12,659 --> 01:05:26,179
pretty much it and then the final thing

1336
01:05:19,349 --> 01:05:26,179
is that last one the last tag so this

1337
01:05:31,369 --> 01:05:40,380
right this tag has to be equal to the

1338
01:05:36,960 --> 01:05:43,170
special tag which is the asset type and

1339
01:05:40,380 --> 01:05:46,650
so we need to make sort of a dummy tag

1340
01:05:43,170 --> 01:05:50,400
for that one if that makes sense so like

1341
01:05:46,650 --> 01:05:55,769
this struct here where we've got a JJ

1342
01:05:50,400 --> 01:05:58,590
tag this is the type tag you could say

1343
01:05:55,769 --> 01:06:05,309
this type tag is going to have an ID and

1344
01:05:58,590 --> 01:06:07,380
a value the the it's the type tag I

1345
01:06:05,309 --> 01:06:13,679
don't really remember what that's called

1346
01:06:07,380 --> 01:06:17,970
though basic category the basic category

1347
01:06:13,679 --> 01:06:20,509
has to be equal to whatever the basic

1348
01:06:17,969 --> 01:06:23,298
category was going to get set to right

1349
01:06:20,510 --> 01:06:27,439
so in here we would say

1350
01:06:23,298 --> 01:06:32,028
yeah there's that basic category and so

1351
01:06:27,438 --> 01:06:35,538
now we look to see if that one is

1352
01:06:32,028 --> 01:06:37,369
equivalent and if it is then we have to

1353
01:06:35,539 --> 01:06:39,519
we don't have to write it otherwise we

1354
01:06:37,369 --> 01:06:42,858
do right so you can see the whole thing

1355
01:06:39,518 --> 01:06:44,538
that does the complete tag arrayed if we

1356
01:06:42,858 --> 01:06:49,578
could definitely simplify this by like

1357
01:06:44,539 --> 01:06:52,489
making this be a routine right and maybe

1358
01:06:49,579 --> 01:06:55,339
we should but I don't know if we want to

1359
01:06:52,489 --> 01:06:58,759
or not so we do need to get tag counts

1360
01:06:55,338 --> 01:07:01,088
and we do needed tags are equal and so

1361
01:06:58,759 --> 01:07:04,039
let's just go ahead and write those two

1362
01:07:01,088 --> 01:07:08,688
they're not particularly difficult so if

1363
01:07:04,039 --> 01:07:18,799
I come up here and say okay here is get

1364
01:07:08,688 --> 01:07:23,178
tag count here is tags are equal what do

1365
01:07:18,798 --> 01:07:26,630
those look like and this is like asset

1366
01:07:23,179 --> 01:07:28,309
tag array I think or like you know

1367
01:07:26,630 --> 01:07:31,608
remember what those were called there

1368
01:07:28,309 --> 01:07:38,179
there are things that are import import

1369
01:07:31,608 --> 01:07:40,458
tag array right so this import tag array

1370
01:07:38,179 --> 01:07:42,648
the result of that is just going to be

1371
01:07:40,458 --> 01:07:45,248
the subtraction of the two right so it's

1372
01:07:42,648 --> 01:07:49,159
just the array one passed last

1373
01:07:45,248 --> 01:07:54,168
eigenvector a first tag index so really

1374
01:07:49,159 --> 01:07:57,439
you know nothing special there and then

1375
01:07:54,168 --> 01:08:01,938
the tags are equal again really pretty

1376
01:07:57,438 --> 01:08:04,398
basic it's just saying if I have two HHA

1377
01:08:01,938 --> 01:08:08,418
tags and I want to know if they're the

1378
01:08:04,398 --> 01:08:10,248
same I just compared their values that's

1379
01:08:08,418 --> 01:08:14,328
there's there's nothing more to it than

1380
01:08:10,248 --> 01:08:15,198
that so if you remember this this guy

1381
01:08:14,329 --> 01:08:19,609
here

1382
01:08:15,199 --> 01:08:24,380
if the IDS are equal and the values are

1383
01:08:19,609 --> 01:08:28,009
equal then the tags are equal because

1384
01:08:24,380 --> 01:08:28,480
there's nothing else in it and off you

1385
01:08:28,009 --> 01:08:32,809
go

1386
01:08:28,479 --> 01:08:35,699
so from there we can just look at what

1387
01:08:32,809 --> 01:08:42,470
we messed up here yeah we don't

1388
01:08:35,699 --> 01:08:46,229
do that oops let's try that again so

1389
01:08:42,470 --> 01:08:51,510
cannot import grid tag to import tag

1390
01:08:46,229 --> 01:08:54,779
array oh do we not have did we never fix

1391
01:08:51,510 --> 01:08:57,030
this stuff we probably didn't because we

1392
01:08:54,779 --> 01:08:59,399
were being lazy so you can see here

1393
01:08:57,029 --> 01:09:02,369
there's a tag this is a tag array and we

1394
01:08:59,399 --> 01:09:05,789
just never actually did that right this

1395
01:09:02,369 --> 01:09:07,349
is what we actually wanted to do and we

1396
01:09:05,789 --> 01:09:13,050
just didn't do it so let's just do it

1397
01:09:07,350 --> 01:09:17,280
now all right so this is just tags in

1398
01:09:13,050 --> 01:09:19,230
both of these cases and by the way we

1399
01:09:17,279 --> 01:09:32,369
could now make it so that this thing is

1400
01:09:19,229 --> 01:09:35,459
explicit because really the number of

1401
01:09:32,369 --> 01:09:38,489
people who actually do n tags now is not

1402
01:09:35,460 --> 01:09:40,380
that many and you know they could just

1403
01:09:38,489 --> 01:09:42,210
be explicitly adding it I don't really

1404
01:09:40,380 --> 01:09:45,810
know so I don't know what we want to do

1405
01:09:42,210 --> 01:09:50,149
there also is this part actually

1406
01:09:45,810 --> 01:09:50,150
necessary because the

1407
01:09:56,069 --> 01:10:01,139
okay so actually even the thing that I

1408
01:09:59,310 --> 01:10:11,100
did before was not really necessary so

1409
01:10:01,140 --> 01:10:12,869
the end tags call I think I think we

1410
01:10:11,100 --> 01:10:14,579
should just get rid of that cuz yeah

1411
01:10:12,869 --> 01:10:16,800
like that's not right either it's

1412
01:10:14,579 --> 01:10:20,550
already in there so actually I'm totally

1413
01:10:16,800 --> 01:10:23,460
wrong about this and it didn't actually

1414
01:10:20,550 --> 01:10:27,600
we didn't actually need to do that right

1415
01:10:23,460 --> 01:10:34,590
this was asset none and this is not

1416
01:10:27,600 --> 01:10:37,289
necessary there's no plus one and so I

1417
01:10:34,590 --> 01:10:39,750
think we should just get rid of that it

1418
01:10:37,289 --> 01:10:43,729
should just be an ADD tag call that gets

1419
01:10:39,750 --> 01:10:45,779
made that's just better so you know

1420
01:10:43,729 --> 01:10:48,629
that's fine

1421
01:10:45,779 --> 01:10:51,659
so that to do should stick and and we do

1422
01:10:48,630 --> 01:10:57,449
I think we probably do want to do it all

1423
01:10:51,659 --> 01:10:58,979
right so so now we got some easier stuff

1424
01:10:57,449 --> 01:11:03,059
here too instead of writing these things

1425
01:10:58,979 --> 01:11:07,868
these this way we can just do this which

1426
01:11:03,060 --> 01:11:12,070
is nice and so you know

1427
01:11:07,868 --> 01:11:15,069
like that and that seems really good

1428
01:11:12,069 --> 01:11:21,630
another way of writing it is just to say

1429
01:11:15,069 --> 01:11:21,630
this which is even more concise and

1430
01:11:21,658 --> 01:11:25,960
eventually we can probably get rid of

1431
01:11:23,979 --> 01:11:28,988
that entirely because that means that

1432
01:11:25,960 --> 01:11:30,639
now we're doing an import grid tag but

1433
01:11:28,988 --> 01:11:34,569
the basic category really doesn't have

1434
01:11:30,639 --> 01:11:36,880
to get returned there anymore as far as

1435
01:11:34,569 --> 01:11:39,609
I know although I guess it sort of does

1436
01:11:36,880 --> 01:11:42,699
so we'll see so we might leave it that

1437
01:11:39,609 --> 01:11:44,348
way for now we'll find out again that

1438
01:11:42,698 --> 01:11:46,988
basic category just a little bit

1439
01:11:44,349 --> 01:11:50,590
Squinkie so we'll see well we'll work it

1440
01:11:46,988 --> 01:11:54,609
through all right what's the problem

1441
01:11:50,590 --> 01:12:00,610
here these are not tag arrays but that's

1442
01:11:54,609 --> 01:12:03,279
fine what else we got

1443
01:12:00,609 --> 01:12:04,868
so looping through these it's just tags

1444
01:12:03,279 --> 01:12:08,609
tags which is kind of an amusing

1445
01:12:04,868 --> 01:12:08,609
statement but that's what it is

1446
01:12:09,039 --> 01:12:20,710
why is append tags a pointer and the

1447
01:12:12,399 --> 01:12:22,929
other one isn't it just should be a

1448
01:12:20,710 --> 01:12:26,429
pointer it just should be passed by

1449
01:12:22,929 --> 01:12:31,989
value we don't really really need that

1450
01:12:26,429 --> 01:12:35,380
yeah so anyway let me just quickly

1451
01:12:31,988 --> 01:12:36,609
change that because those are small so

1452
01:12:35,380 --> 01:12:37,960
we really don't need to pass them by

1453
01:12:36,609 --> 01:12:44,609
pointer we're probably just wasting our

1454
01:12:37,960 --> 01:12:44,609
time by doing that all right

1455
01:12:46,170 --> 01:12:50,980
every day alright so just working

1456
01:12:48,969 --> 01:12:55,539
through the air is now tags it's not a

1457
01:12:50,979 --> 01:12:56,829
member of import tag array so I guess

1458
01:12:55,539 --> 01:13:00,579
that was just a red herring

1459
01:12:56,829 --> 01:13:02,769
that's what I I just meant to do get

1460
01:13:00,579 --> 01:13:05,829
count cannot convert one from import

1461
01:13:02,770 --> 01:13:15,520
grid tag ah I see so only that one is

1462
01:13:05,829 --> 01:13:17,350
that makes sense this is not actually

1463
01:13:15,520 --> 01:13:19,060
necessary because we have the assets

1464
01:13:17,350 --> 01:13:20,289
here so I'm not sure why we were getting

1465
01:13:19,060 --> 01:13:21,670
them off with a builder probably because

1466
01:13:20,289 --> 01:13:26,859
we cut and pasted that code well now

1467
01:13:21,670 --> 01:13:28,510
paste it moved it into here from a place

1468
01:13:26,859 --> 01:13:33,149
that didn't have access to the assets in

1469
01:13:28,510 --> 01:13:36,190
another way but we do so that's all good

1470
01:13:33,149 --> 01:13:38,109
that means that in here too that needs

1471
01:13:36,189 --> 01:13:41,319
to be tags tags the words this doesn't

1472
01:13:38,109 --> 01:13:44,799
because tags is their different types so

1473
01:13:41,319 --> 01:13:46,090
again that's fine in here this is using

1474
01:13:44,800 --> 01:13:48,119
the Builder assets but it doesn't need

1475
01:13:46,090 --> 01:13:50,850
to so I'm going to get rid of that again

1476
01:13:48,119 --> 01:13:53,738
and then again that should be this way

1477
01:13:50,850 --> 01:13:57,940
in here when the age of je comes of the

1478
01:13:53,738 --> 01:13:59,948
combined tags that comes out has you

1479
01:13:57,939 --> 01:14:02,289
know the asset type in there too so I

1480
01:13:59,948 --> 01:14:04,809
think that's all good

1481
01:14:02,289 --> 01:14:08,050
update metadata doesn't need to pass the

1482
01:14:04,810 --> 01:14:14,289
address of that and so now I think we're

1483
01:14:08,050 --> 01:14:17,560
good yeah all right so let's give it one

1484
01:14:14,289 --> 01:14:20,408
more world here and see if we can't get

1485
01:14:17,560 --> 01:14:24,190
a valid import out of it I'm gonna

1486
01:14:20,408 --> 01:14:27,219
delete that intro cutscene dat HHA and

1487
01:14:24,189 --> 01:14:29,379
then I'm gonna run again we'll jump

1488
01:14:27,219 --> 01:14:31,630
right to the first needful rebuilds

1489
01:14:29,380 --> 01:14:32,980
because we pretty much know the rest of

1490
01:14:31,630 --> 01:14:35,619
that stuff's working now and we didn't

1491
01:14:32,979 --> 01:14:40,178
change it Curie's us doing our in PNG

1492
01:14:35,619 --> 01:14:41,979
import the plate has now been processed

1493
01:14:40,179 --> 01:14:44,770
and fussed with and all that other stuff

1494
01:14:41,979 --> 01:14:47,678
so then we go into update metadata we

1495
01:14:44,770 --> 01:14:51,489
take a look there's only one of these I

1496
01:14:47,679 --> 01:14:55,000
believe right so it's only gonna be the

1497
01:14:51,488 --> 01:14:55,689
first one and so like if we look at this

1498
01:14:55,000 --> 01:14:57,869
tags

1499
01:14:55,689 --> 01:14:57,869
oops

1500
01:15:02,220 --> 01:15:11,710
sorry I meant if we look at this tags we

1501
01:15:08,710 --> 01:15:14,439
should have only one place where this

1502
01:15:11,710 --> 01:15:15,489
occurs although actually well I guess

1503
01:15:14,439 --> 01:15:17,229
now I think about it we'll have none

1504
01:15:15,489 --> 01:15:21,039
because there is no grid so the only

1505
01:15:17,229 --> 01:15:23,349
tags we should have are here and the

1506
01:15:21,039 --> 01:15:25,239
basic asset type I guess that creates a

1507
01:15:23,350 --> 01:15:26,470
slight problem for us which is the basic

1508
01:15:25,239 --> 01:15:29,039
asset type we don't actually know what

1509
01:15:26,470 --> 01:15:29,039
it is right

1510
01:15:38,529 --> 01:15:49,909
if something is a plate if something is

1511
01:15:49,220 --> 01:15:52,789
a plate

1512
01:15:49,909 --> 01:15:55,250
what is the category it's just asset

1513
01:15:52,789 --> 01:15:57,019
plate right yeah so if something's gonna

1514
01:15:55,250 --> 01:15:58,488
be an asset plate

1515
01:15:57,020 --> 01:16:04,130
we need that to flow through the

1516
01:15:58,488 --> 01:16:07,579
pipeline better so haven't use me so

1517
01:16:04,130 --> 01:16:10,310
when we actually do that plate import we

1518
01:16:07,579 --> 01:16:13,789
do need to set one thing before we were

1519
01:16:10,310 --> 01:16:18,590
setting nothing but we actually do need

1520
01:16:13,789 --> 01:16:21,710
to set something which is in here where

1521
01:16:18,590 --> 01:16:26,810
we do this import plate we do want to do

1522
01:16:21,710 --> 01:16:29,539
one thing which is this and although

1523
01:16:26,810 --> 01:16:32,930
there are no other tags that would go in

1524
01:16:29,539 --> 01:16:36,920
place here we do need to just set the

1525
01:16:32,930 --> 01:16:40,700
asset category so here this is an asset

1526
01:16:36,920 --> 01:16:43,250
plate and we need to write this back to

1527
01:16:40,699 --> 01:16:47,750
something right and in our case the

1528
01:16:43,250 --> 01:16:50,420
something is just the zero zero element

1529
01:16:47,750 --> 01:16:56,060
because that's the only thing we have in

1530
01:16:50,420 --> 01:17:02,149
a plate is just one location right I

1531
01:16:56,060 --> 01:17:06,860
believe if we go look at the what is it

1532
01:17:02,149 --> 01:17:07,969
process multi important so if we look at

1533
01:17:06,859 --> 01:17:10,429
the various things here when we have

1534
01:17:07,970 --> 01:17:13,130
process plate import it should always do

1535
01:17:10,430 --> 01:17:15,140
it at zero zero so you know as long as

1536
01:17:13,130 --> 01:17:17,989
that zero zero is filled with the right

1537
01:17:15,140 --> 01:17:24,230
asset type we should be good to go so

1538
01:17:17,988 --> 01:17:28,819
I'm gonna call that done all right so

1539
01:17:24,229 --> 01:17:34,279
let's jump back to here I think we've

1540
01:17:28,819 --> 01:17:35,659
gotten there we go I think we've gotten

1541
01:17:34,279 --> 01:17:38,090
this worked out so now when we come

1542
01:17:35,659 --> 01:17:40,639
through here the tags type ID should be

1543
01:17:38,090 --> 01:17:42,650
asset plate and it is so then we can set

1544
01:17:40,640 --> 01:17:43,820
the asset type here because yes it type

1545
01:17:42,649 --> 01:17:48,929
would have been zero before so that's

1546
01:17:43,819 --> 01:17:50,549
good so we come through and we

1547
01:17:48,929 --> 01:17:52,920
we would have gotten this error by the

1548
01:17:50,550 --> 01:17:55,170
way we look to see whether the tags

1549
01:17:52,920 --> 01:17:57,630
differ so the first thing we're gonna do

1550
01:17:55,170 --> 01:17:59,369
is look at the count the total tag count

1551
01:17:57,630 --> 01:18:01,319
was three and of course before it would

1552
01:17:59,369 --> 01:18:02,640
just been zero so we're not gonna ever

1553
01:18:01,319 --> 01:18:04,829
diff the tags we're just gonna say look

1554
01:18:02,640 --> 01:18:06,630
they need to get written since the tag

1555
01:18:04,829 --> 01:18:08,519
zipper here is us building the tag array

1556
01:18:06,630 --> 01:18:11,400
that just depends these tag sets

1557
01:18:08,520 --> 01:18:14,030
together we produce the combined tag set

1558
01:18:11,399 --> 01:18:17,279
which should be three tags along and is

1559
01:18:14,029 --> 01:18:20,090
we then set that into the asset we write

1560
01:18:17,279 --> 01:18:21,988
out the strings and we write out the

1561
01:18:20,090 --> 01:18:24,750
well we don't write out the agents a

1562
01:18:21,988 --> 01:18:28,829
metadata yet we just mark that as dirty

1563
01:18:24,750 --> 01:18:31,969
or should have however I don't see us

1564
01:18:28,829 --> 01:18:39,149
marking it as dirty so I think that's an

1565
01:18:31,969 --> 01:18:43,020
mistake as well so I think we want that

1566
01:18:39,149 --> 01:18:45,779
HHA to be marked as dirty if any of

1567
01:18:43,020 --> 01:18:48,840
these things need to be written you know

1568
01:18:45,779 --> 01:18:51,929
I'm saying to you so that's one more

1569
01:18:48,840 --> 01:18:56,810
thing I think is broken there we

1570
01:18:51,929 --> 01:19:00,239
wouldn't touch this assets anymore right

1571
01:18:56,810 --> 01:19:06,330
so we'd come out here we'd be done with

1572
01:19:00,238 --> 01:19:09,000
that package and yeah and off we would

1573
01:19:06,329 --> 01:19:11,100
go so do we still have a breakpoint on

1574
01:19:09,000 --> 01:19:13,319
error yeah so let's run to the next

1575
01:19:11,100 --> 01:19:14,880
error for now we probably haven't gotten

1576
01:19:13,319 --> 01:19:16,889
rid of all the bugs but let's just see

1577
01:19:14,880 --> 01:19:21,600
if we have any more parse errors or like

1578
01:19:16,890 --> 01:19:24,239
obvious errors of that of that nature in

1579
01:19:21,600 --> 01:19:28,620
the build before we go any further with

1580
01:19:24,238 --> 01:19:31,229
it and and while we're at it we can sort

1581
01:19:28,619 --> 01:19:33,179
of look here and see you know that

1582
01:19:31,229 --> 01:19:35,519
should start piling things into intro

1583
01:19:33,179 --> 01:19:37,949
cutscene hopefully I'm not sure if it

1584
01:19:35,520 --> 01:19:41,750
will or not but let's take a look you

1585
01:19:37,948 --> 01:19:41,750
can see it does appear to be doing so

1586
01:19:47,460 --> 01:19:51,659
so not great

1587
01:19:51,840 --> 01:19:57,819
looks like we definitely have some

1588
01:19:54,310 --> 01:20:02,410
issues there because that's just not big

1589
01:19:57,819 --> 01:20:04,239
enough right it should grow

1590
01:20:02,409 --> 01:20:05,889
significantly beyond that so I'm not

1591
01:20:04,239 --> 01:20:08,679
sure what's good it should end up like

1592
01:20:05,890 --> 01:20:11,680
roughly that size right once

1593
01:20:08,680 --> 01:20:16,869
everything's piled together so I don't

1594
01:20:11,680 --> 01:20:18,610
know if I D but break here what ended up

1595
01:20:16,869 --> 01:20:19,359
happening so we're doing an image

1596
01:20:18,609 --> 01:20:24,528
extraction

1597
01:20:19,359 --> 01:20:24,528
[Music]

1598
01:20:36,479 --> 01:20:40,539
so it looks like hey we're just

1599
01:20:38,409 --> 01:20:41,829
processing a lot of big images and we're

1600
01:20:40,539 --> 01:20:44,079
processing the debug modes they're very

1601
01:20:41,829 --> 01:20:46,720
slow but nothing has gone horribly wrong

1602
01:20:44,079 --> 01:20:48,239
yet so we can keep it going so maybe

1603
01:20:46,720 --> 01:20:51,130
it's fine

1604
01:20:48,239 --> 01:20:52,239
these are all very large images and so

1605
01:20:51,130 --> 01:20:54,640
you really don't want to be in debug

1606
01:20:52,239 --> 01:20:56,019
mode because we we don't even really

1607
01:20:54,640 --> 01:20:57,760
have optimized pixel processing here

1608
01:20:56,020 --> 01:21:03,000
right we're just doing it in on the cpu

1609
01:20:57,760 --> 01:21:03,000
with floats we're not even using Cindy

1610
01:21:05,100 --> 01:21:11,260
so especially in debug mode it's gonna

1611
01:21:07,239 --> 01:21:12,909
be horriffic ly slow all right but it's

1612
01:21:11,260 --> 01:21:14,140
chugging along and maybe it's writing

1613
01:21:12,909 --> 01:21:15,760
something in there we don't really know

1614
01:21:14,140 --> 01:21:17,829
but hey it's getting bigger and that's

1615
01:21:15,760 --> 01:21:20,230
good

1616
01:21:17,829 --> 01:21:22,569
so that should grow eventually to a

1617
01:21:20,229 --> 01:21:26,019
large size and then we can also do an

1618
01:21:22,569 --> 01:21:28,899
HHA edit dump on it and see what we

1619
01:21:26,020 --> 01:21:32,010
actually got in there right so I think

1620
01:21:28,899 --> 01:21:32,009
that's good right

1621
01:21:47,140 --> 01:21:51,430
and again I guess while it's doing that

1622
01:21:48,939 --> 01:21:56,460
- one thing I might want to do is take a

1623
01:21:51,430 --> 01:22:03,300
look at where that dirty flag should go

1624
01:21:56,460 --> 01:22:05,619
so if you look at the HHA the the like

1625
01:22:03,300 --> 01:22:08,560
definition of the thing that stores

1626
01:22:05,619 --> 01:22:11,619
whether it needs to be written so here

1627
01:22:08,560 --> 01:22:15,720
it is it's called modified what we need

1628
01:22:11,619 --> 01:22:19,569
is a way to set modified in some way

1629
01:22:15,720 --> 01:22:21,909
that's reliable right and so whenever

1630
01:22:19,569 --> 01:22:24,279
you write asset data it'll get set and

1631
01:22:21,909 --> 01:22:34,769
whenever you reserve asset data it'll

1632
01:22:24,279 --> 01:22:47,289
get set but I don't know if that is

1633
01:22:34,770 --> 01:22:49,720
sufficient I don't think it is so I

1634
01:22:47,289 --> 01:22:51,640
think that's just really that's not

1635
01:22:49,720 --> 01:22:54,430
going to express enough in the in-game

1636
01:22:51,640 --> 01:22:58,660
editor when we set one of these it sets

1637
01:22:54,430 --> 01:23:01,360
that modified thing to true and that's

1638
01:22:58,659 --> 01:23:04,359
fine but that's not gonna cut it for

1639
01:23:01,359 --> 01:23:08,679
when the metadata changes happen so

1640
01:23:04,359 --> 01:23:11,250
inside update asset made it made a data

1641
01:23:08,680 --> 01:23:15,600
there we have to make sure that

1642
01:23:11,250 --> 01:23:15,600
everybody who might write something

1643
01:23:18,449 --> 01:23:25,809
actually sets that dirty flag asset

1644
01:23:23,050 --> 01:23:37,020
stream and up add update asset string

1645
01:23:25,810 --> 01:23:37,020
will because they'll call reserve data

1646
01:23:37,469 --> 01:23:42,059
and right asset data itself

1647
01:23:40,198 --> 01:23:46,768
automatically does it so basically

1648
01:23:42,059 --> 01:23:49,650
Reserve data's fine the only thing that

1649
01:23:46,769 --> 01:23:53,489
we care about here is basically here if

1650
01:23:49,649 --> 01:23:59,960
those tags differ then we need to set

1651
01:23:53,488 --> 01:23:59,959
the files modification flag to true I

1652
01:23:59,988 --> 01:24:05,698
think that's the only thing alright

1653
01:24:02,939 --> 01:24:07,799
we've hit our first error and I don't

1654
01:24:05,698 --> 01:24:11,460
even know what file we're on we may have

1655
01:24:07,800 --> 01:24:14,369
proceeded to the next file let's take a

1656
01:24:11,460 --> 01:24:17,399
look it looks like we did let's just

1657
01:24:14,368 --> 01:24:18,960
check here so file info that we're

1658
01:24:17,399 --> 01:24:22,248
processing at the moment is based game

1659
01:24:18,960 --> 01:24:25,198
so that means that actually we have

1660
01:24:22,248 --> 01:24:30,448
successfully in theory processed our

1661
01:24:25,198 --> 01:24:34,948
intro cutscene HHA now it's not very big

1662
01:24:30,448 --> 01:24:36,058
which is not great but I think that's

1663
01:24:34,948 --> 01:24:38,038
just because we haven't closed the file

1664
01:24:36,059 --> 01:24:42,119
handle yet so if you look here we've got

1665
01:24:38,038 --> 01:24:43,800
size on disk 325 right now one question

1666
01:24:42,118 --> 01:24:45,988
is why haven't we closed the file yet so

1667
01:24:43,800 --> 01:24:50,400
I wondered to be forget the file handle

1668
01:24:45,988 --> 01:24:52,078
closed because we probably did well I

1669
01:24:50,399 --> 01:24:55,589
guess not forget we leave those files

1670
01:24:52,078 --> 01:24:57,118
open so I guess that actually is fine

1671
01:24:55,590 --> 01:24:59,538
nevermind if those were supposed to be

1672
01:24:57,118 --> 01:25:02,219
left open for writing during during play

1673
01:24:59,538 --> 01:25:03,960
so what error did we hit when we were

1674
01:25:02,219 --> 01:25:05,760
parse when we were processing the base

1675
01:25:03,960 --> 01:25:07,920
game which is now different so we made

1676
01:25:05,760 --> 01:25:09,960
it through that other file with no

1677
01:25:07,920 --> 01:25:12,868
errors what did we hit here

1678
01:25:09,960 --> 01:25:16,248
we got an unrecognized block type when

1679
01:25:12,868 --> 01:25:19,558
we were parsed when we were processing a

1680
01:25:16,248 --> 01:25:21,210
top-level block and so the question

1681
01:25:19,559 --> 01:25:25,199
there would be like well what was it

1682
01:25:21,210 --> 01:25:29,609
right and it's called cover we don't

1683
01:25:25,198 --> 01:25:32,518
know what cover is yet and honestly that

1684
01:25:29,609 --> 01:25:35,279
sounds like a reasonable error I think

1685
01:25:32,519 --> 01:25:37,920
in parse pieces we just don't know what

1686
01:25:35,279 --> 01:25:41,849
that is right so we've got obstacles

1687
01:25:37,920 --> 01:25:44,880
item and in cover you can see we just

1688
01:25:41,849 --> 01:25:48,929
didn't set it so I think we want to set

1689
01:25:44,880 --> 01:25:50,319
that to to a multi tile import that just

1690
01:25:48,929 --> 01:25:53,500
gets ignored

1691
01:25:50,319 --> 01:25:57,250
and I guess again you know maybe what we

1692
01:25:53,500 --> 01:25:59,560
really should do is in the hht when

1693
01:25:57,250 --> 01:26:02,770
we're actually doing these things I

1694
01:25:59,560 --> 01:26:06,870
think maybe we want to just not do

1695
01:26:02,770 --> 01:26:11,080
anything with them we could for example

1696
01:26:06,869 --> 01:26:14,079
just comment them out right and so if I

1697
01:26:11,079 --> 01:26:18,220
go up to cover here I'm just gonna move

1698
01:26:14,079 --> 01:26:30,550
all of these down to the bottom and so

1699
01:26:18,220 --> 01:26:32,289
these are just things that we haven't we

1700
01:26:30,550 --> 01:26:34,869
haven't really used any of this stuff

1701
01:26:32,289 --> 01:26:36,699
and we will want to but we just don't

1702
01:26:34,869 --> 01:26:41,289
have any way to do those yet so we

1703
01:26:36,699 --> 01:26:43,239
should just ignore them right all right

1704
01:26:41,289 --> 01:26:46,779
so now let's take a look we know that

1705
01:26:43,239 --> 01:26:48,909
one of our files was imported okay you

1706
01:26:46,779 --> 01:26:52,119
can see it here intro cutscene dot h HJ

1707
01:26:48,909 --> 01:26:54,159
314 488 it's not as big as this one

1708
01:26:52,119 --> 01:26:55,779
which makes me a little bit nervous so

1709
01:26:54,159 --> 01:26:57,309
I'm not sure if we really got all of the

1710
01:26:55,779 --> 01:27:00,460
stuff in there imported the way we

1711
01:26:57,310 --> 01:27:01,990
should however maybe we did and maybe

1712
01:27:00,460 --> 01:27:03,970
the reason that smaller is because we

1713
01:27:01,989 --> 01:27:05,829
currently have some import size caps

1714
01:27:03,970 --> 01:27:07,630
that will reduce the size of things if

1715
01:27:05,829 --> 01:27:09,369
they're too large what could have

1716
01:27:07,630 --> 01:27:11,560
happened is you know this one this was

1717
01:27:09,369 --> 01:27:13,630
made that wasn't the case so that may

1718
01:27:11,560 --> 01:27:16,240
have been happening in here what I can

1719
01:27:13,630 --> 01:27:19,119
do is I can go back now and take a look

1720
01:27:16,239 --> 01:27:20,380
using HHA edit to see what's actually in

1721
01:27:19,119 --> 01:27:22,059
there so what I'm going to do is

1722
01:27:20,380 --> 01:27:25,000
remember HS 8 and it allows us to do a

1723
01:27:22,060 --> 01:27:27,400
minus dump so in there I can say look

1724
01:27:25,000 --> 01:27:30,100
take a look at this intro cutscene right

1725
01:27:27,399 --> 01:27:33,009
and that will dump everything that was

1726
01:27:30,100 --> 01:27:34,210
in it if you look at what's happened

1727
01:27:33,010 --> 01:27:36,730
there oh and you know what this makes

1728
01:27:34,210 --> 01:27:38,560
perfect sense if you look what's

1729
01:27:36,729 --> 01:27:40,299
happening there it had nothing in it so

1730
01:27:38,560 --> 01:27:43,180
why was that if not all this stuff well

1731
01:27:40,300 --> 01:27:44,920
again if you look at the way we

1732
01:27:43,180 --> 01:27:47,320
structure this routine we forgot an

1733
01:27:44,920 --> 01:27:50,140
obvious things that needs to happen at

1734
01:27:47,319 --> 01:27:52,569
some point someone needs to call write

1735
01:27:50,140 --> 01:27:54,700
modifications to HHA because all of

1736
01:27:52,569 --> 01:27:56,799
those asset tag array things that we

1737
01:27:54,699 --> 01:28:00,369
updated they never get written until the

1738
01:27:56,800 --> 01:28:02,639
end of the process right and so actually

1739
01:28:00,369 --> 01:28:08,189
inside handmade import at the end

1740
01:28:02,639 --> 01:28:11,668
this right we actually need to call that

1741
01:28:08,189 --> 01:28:14,340
right modifications to HH a function

1742
01:28:11,668 --> 01:28:17,158
otherwise it's never gonna nothing's

1743
01:28:14,340 --> 01:28:20,038
ever going to improve right so right

1744
01:28:17,158 --> 01:28:22,888
here before we finish this needs to

1745
01:28:20,038 --> 01:28:26,429
happen right those modifications need to

1746
01:28:22,889 --> 01:28:28,319
be written back now we actually need to

1747
01:28:26,429 --> 01:28:31,099
go through all of them so we want to

1748
01:28:28,319 --> 01:28:40,198
have a way of doing that for everything

1749
01:28:31,099 --> 01:28:44,130
and I don't know if we have that I don't

1750
01:28:40,198 --> 01:28:45,898
think we do so we want something that

1751
01:28:44,130 --> 01:28:49,918
will loop through them and anyone that's

1752
01:28:45,899 --> 01:28:51,829
modified it will just update it right so

1753
01:28:49,918 --> 01:28:53,788
we would like something that does that

1754
01:28:51,828 --> 01:29:05,368
essentially we want something here

1755
01:28:53,788 --> 01:29:09,658
that's like essentially the exact same

1756
01:29:05,368 --> 01:29:12,148
routine it's just it Maps over all of

1757
01:29:09,658 --> 01:29:13,918
them right so what we want to do is have

1758
01:29:12,149 --> 01:29:17,189
a for loop in here that says for every

1759
01:29:13,918 --> 01:29:20,279
file in the entire system if that file

1760
01:29:17,189 --> 01:29:21,570
was modified then rewrite it you know

1761
01:29:20,279 --> 01:29:23,969
time Sam

1762
01:29:21,569 --> 01:29:29,238
and so right amount of modifications to

1763
01:29:23,969 --> 01:29:29,239
HHA oops

1764
01:29:29,448 --> 01:29:34,708
it's basically something that's just

1765
01:29:31,679 --> 01:29:38,300
going to do all of that right let's just

1766
01:29:34,708 --> 01:29:38,300
make sure that that actually works

1767
01:29:47,460 --> 01:29:51,340
so if I do that it's pretty

1768
01:29:49,659 --> 01:29:54,369
straightforward because it happens to

1769
01:29:51,340 --> 01:29:57,130
just be a loop over the file indices so

1770
01:29:54,369 --> 01:30:02,590
we know we can just go through all of

1771
01:29:57,130 --> 01:30:06,520
them and for each one I can say look if

1772
01:30:02,590 --> 01:30:18,610
it was modified or write it that's it

1773
01:30:06,520 --> 01:30:19,960
it's not complicated right so that would

1774
01:30:18,609 --> 01:30:22,599
allow us to write all of our

1775
01:30:19,960 --> 01:30:31,300
modifications back and that should

1776
01:30:22,600 --> 01:30:34,329
really be all we need there so in this

1777
01:30:31,300 --> 01:30:35,890
case assets source file is not actually

1778
01:30:34,329 --> 01:30:37,899
the file that we're talking about here

1779
01:30:35,890 --> 01:30:41,230
we're actually talking about the asset

1780
01:30:37,899 --> 01:30:44,199
file so this was a as well that I

1781
01:30:41,229 --> 01:30:44,609
neglected to pick up there so there we

1782
01:30:44,199 --> 01:30:47,199
go

1783
01:30:44,609 --> 01:30:51,009
so all that should be relatively clean

1784
01:30:47,199 --> 01:30:54,729
now nothing weird happening so what I'd

1785
01:30:51,010 --> 01:30:59,260
like to do now is try a release build

1786
01:30:54,729 --> 01:31:02,949
and see if we get our stuff built

1787
01:30:59,260 --> 01:31:04,329
properly from scratch right and it

1788
01:31:02,949 --> 01:31:06,219
probably won't be we probably got a few

1789
01:31:04,329 --> 01:31:08,488
modes lurking in there but we're getting

1790
01:31:06,219 --> 01:31:12,550
closer

1791
01:31:08,488 --> 01:31:16,718
so again totally clear now nothing in

1792
01:31:12,550 --> 01:31:19,239
the directory I have built a release

1793
01:31:16,719 --> 01:31:22,630
mode version so this is the release mode

1794
01:31:19,238 --> 01:31:30,009
version building here and now I will run

1795
01:31:22,630 --> 01:31:31,600
it and see what happens right so now it

1796
01:31:30,010 --> 01:31:33,730
should chew through the files a lot

1797
01:31:31,600 --> 01:31:36,340
faster because it's at least an

1798
01:31:33,729 --> 01:31:41,049
optimized build so you can actually see

1799
01:31:36,340 --> 01:31:45,340
this number climbing much more much more

1800
01:31:41,050 --> 01:31:46,779
rapidly - right as the files - it that

1801
01:31:45,340 --> 01:31:48,010
should presumably climb to the same

1802
01:31:46,779 --> 01:31:50,199
number it climbed before because we

1803
01:31:48,010 --> 01:31:51,579
haven't changed anything so well there's

1804
01:31:50,199 --> 01:31:53,949
one thing they'll change it to go right

1805
01:31:51,579 --> 01:31:54,670
out the asset arrays so it plowed

1806
01:31:53,949 --> 01:31:56,349
through that

1807
01:31:54,670 --> 01:32:00,130
and now it's done and now it's working

1808
01:31:56,350 --> 01:32:01,539
on the base game so now if I want to I

1809
01:32:00,130 --> 01:32:05,500
should be able to look at that cutscene

1810
01:32:01,539 --> 01:32:07,630
one to be fair as this thing is going

1811
01:32:05,500 --> 01:32:18,460
through here just might as well let this

1812
01:32:07,630 --> 01:32:19,440
one finish as well right and hey we've

1813
01:32:18,460 --> 01:32:22,960
started again

1814
01:32:19,439 --> 01:32:25,178
now weirdly the head and stuff is

1815
01:32:22,960 --> 01:32:27,399
missing I am not sure why that would

1816
01:32:25,179 --> 01:32:30,429
have happened but I guess that may be

1817
01:32:27,399 --> 01:32:33,488
because we've got bugs in our import and

1818
01:32:30,429 --> 01:32:35,230
we've made a new asset that overrides

1819
01:32:33,488 --> 01:32:37,209
the asset that should have gone in that

1820
01:32:35,229 --> 01:32:39,459
place it could actually just be because

1821
01:32:37,210 --> 01:32:42,340
the alignment points are gone I don't

1822
01:32:39,460 --> 01:32:44,980
really know right we can actually look

1823
01:32:42,340 --> 01:32:47,170
at that if we want to the way that we

1824
01:32:44,979 --> 01:32:50,649
would do that is just say hey let's pick

1825
01:32:47,170 --> 01:32:52,149
one of these here let's see if we can

1826
01:32:50,649 --> 01:32:55,469
get the head in there somewhere

1827
01:32:52,149 --> 01:32:55,469
doesn't look like we can

1828
01:33:00,789 --> 01:33:07,369
yeah I don't see so it looks like the

1829
01:33:05,659 --> 01:33:10,489
head is just missing which is not good

1830
01:33:07,369 --> 01:33:13,699
right so I assume that's a bug like art

1831
01:33:10,489 --> 01:33:15,199
import did not work properly but I don't

1832
01:33:13,699 --> 01:33:16,760
know right because you can see like

1833
01:33:15,199 --> 01:33:18,229
everything else is there so doesn't look

1834
01:33:16,760 --> 01:33:22,310
like the head is there but not aligned

1835
01:33:18,229 --> 01:33:24,649
it looks like it's just busted um so

1836
01:33:22,310 --> 01:33:26,780
okay but we've gotten 3-1 imports so now

1837
01:33:24,649 --> 01:33:28,849
it's time to debug like actual errors in

1838
01:33:26,779 --> 01:33:30,710
the output let's take a look at the

1839
01:33:28,850 --> 01:33:31,940
intro cutscene stuff first oh the other

1840
01:33:30,710 --> 01:33:34,130
thing we could do is just see what

1841
01:33:31,939 --> 01:33:36,079
happens if we run the intro cutscene so

1842
01:33:34,130 --> 01:33:44,090
for example oh by the way this should do

1843
01:33:36,079 --> 01:33:45,949
like nothing essentially right yeah so

1844
01:33:44,090 --> 01:33:47,869
if we're only into a cutscene presumably

1845
01:33:45,949 --> 01:33:49,519
we'll also just not get anything here

1846
01:33:47,869 --> 01:33:51,369
because if we've got bugs and how we're

1847
01:33:49,520 --> 01:33:55,160
setting up our tags and stuff like that

1848
01:33:51,369 --> 01:33:58,059
we should not see the intro cutscene or

1849
01:33:55,159 --> 01:34:01,699
we should see like a buggy version of it

1850
01:33:58,060 --> 01:34:02,840
so we do see it that may although that

1851
01:34:01,699 --> 01:34:06,739
may also be because we're still using

1852
01:34:02,840 --> 01:34:08,329
the older HHA right and so we really I

1853
01:34:06,739 --> 01:34:11,029
guess can't judge much from that either

1854
01:34:08,329 --> 01:34:12,949
all right so let's start by looking a

1855
01:34:11,029 --> 01:34:14,539
little bit further into things let's

1856
01:34:12,949 --> 01:34:17,179
start by seeing what we've actually got

1857
01:34:14,539 --> 01:34:20,479
in there if I do a directory here I have

1858
01:34:17,180 --> 01:34:25,310
that intro art v2 not HHA what I'm gonna

1859
01:34:20,479 --> 01:34:28,339
do is make a like the two directory and

1860
01:34:25,310 --> 01:34:31,280
I'm gonna move intro art v2 to HHA into

1861
01:34:28,340 --> 01:34:33,920
the v2 directory so it's gone so now

1862
01:34:31,279 --> 01:34:36,170
when we load we only have intro cutscene

1863
01:34:33,920 --> 01:34:38,779
HHA that's all we've got

1864
01:34:36,170 --> 01:34:40,909
right so this is the freshly built one

1865
01:34:38,779 --> 01:34:43,579
if I now go to the intro cutscene the

1866
01:34:40,909 --> 01:34:46,159
question is what do we see do we find

1867
01:34:43,579 --> 01:34:47,960
any of those plates or do we not find

1868
01:34:46,159 --> 01:34:50,180
any of them and are they in the right

1869
01:34:47,960 --> 01:34:52,939
order all that stuff and now we can go

1870
01:34:50,180 --> 01:34:54,590
through debugging this part as we go so

1871
01:34:52,939 --> 01:34:59,000
you can see like nothing there right so

1872
01:34:54,590 --> 01:35:01,279
it cannot find those or it is finding

1873
01:34:59,000 --> 01:35:03,649
them but they're wrong so we like packed

1874
01:35:01,279 --> 01:35:07,189
the data incorrectly or something like

1875
01:35:03,649 --> 01:35:08,750
this alright so let's start down the

1876
01:35:07,189 --> 01:35:10,159
road of getting that working but I think

1877
01:35:08,750 --> 01:35:11,510
we're getting close now so this is nice

1878
01:35:10,159 --> 01:35:13,849
we're kind of getting to the end of the

1879
01:35:11,510 --> 01:35:14,570
road of this process where once we get

1880
01:35:13,850 --> 01:35:17,510
this stuff to

1881
01:35:14,569 --> 01:35:19,639
but we should be in good shape and have

1882
01:35:17,510 --> 01:35:23,630
a nice clean way to build all of our

1883
01:35:19,640 --> 01:35:27,530
stuff fresh all right so we find doing

1884
01:35:23,630 --> 01:35:33,319
HHA edit dump let's first try to get

1885
01:35:27,529 --> 01:35:35,899
this reporting some some stuff we can

1886
01:35:33,319 --> 01:35:41,139
use so I'm gonna put this into intro

1887
01:35:35,899 --> 01:35:41,139
cutscene text and I'm gonna run tab view

1888
01:35:43,720 --> 01:35:49,789
from the bonus pack on info cutscene

1889
01:35:47,180 --> 01:35:51,619
text if we actually look at what's going

1890
01:35:49,789 --> 01:35:54,619
on in here right you can see a big tiger

1891
01:35:51,619 --> 01:35:56,059
ready here's all our assets and when we

1892
01:35:54,619 --> 01:35:59,300
look at the assets we can see what's

1893
01:35:56,060 --> 01:36:02,480
going on let's just take a look so

1894
01:35:59,300 --> 01:36:05,810
looking at all this you know it actually

1895
01:36:02,479 --> 01:36:08,989
looks really good and that's frustrating

1896
01:36:05,810 --> 01:36:11,750
because you know it would be nicer if it

1897
01:36:08,989 --> 01:36:14,840
was obviously busted in some really

1898
01:36:11,750 --> 01:36:17,989
clear way you can see here that it's got

1899
01:36:14,840 --> 01:36:21,260
three tags a basic category of 25 which

1900
01:36:17,989 --> 01:36:26,960
i think is plate shot index 1 layer

1901
01:36:21,260 --> 01:36:30,050
index 1 right eye and so that's less

1902
01:36:26,960 --> 01:36:31,489
good but we can double check this basic

1903
01:36:30,050 --> 01:36:33,050
category stuff in a second here and

1904
01:36:31,489 --> 01:36:36,649
maybe there's something weird going on

1905
01:36:33,050 --> 01:36:38,750
there right we'll see

1906
01:36:36,649 --> 01:36:40,670
so all these shots look pretty good and

1907
01:36:38,750 --> 01:36:41,899
so I'm not really sure what to make of

1908
01:36:40,670 --> 01:36:45,260
that they all look like they've got

1909
01:36:41,899 --> 01:36:48,289
tagged properly the the bitmaps

1910
01:36:45,260 --> 01:36:50,869
themselves also look reasonable right

1911
01:36:48,289 --> 01:36:58,460
like there they've got actual data in

1912
01:36:50,869 --> 01:37:01,880
them that that size is even seen you

1913
01:36:58,460 --> 01:37:04,670
know at least somewhat plausible so I

1914
01:37:01,880 --> 01:37:06,140
don't really know just from looking at

1915
01:37:04,670 --> 01:37:08,329
this I was assuming we'd look in here

1916
01:37:06,140 --> 01:37:10,460
and it was just garbage I don't know

1917
01:37:08,329 --> 01:37:12,949
looking at this why we're not seeing

1918
01:37:10,460 --> 01:37:15,829
something on the screen and it's just

1919
01:37:12,949 --> 01:37:18,250
like I don't know maybe is the data bad

1920
01:37:15,829 --> 01:37:22,579
like is the bitmap that actually got

1921
01:37:18,250 --> 01:37:23,380
written a garbage bitmap or something

1922
01:37:22,579 --> 01:37:26,750
like that

1923
01:37:23,380 --> 01:37:27,699
and so I want to have a way of debugging

1924
01:37:26,750 --> 01:37:29,619
that

1925
01:37:27,699 --> 01:37:35,079
I want to have some like I'd like to

1926
01:37:29,619 --> 01:37:37,989
have some way of of looking at what a

1927
01:37:35,079 --> 01:37:39,399
particular bitmap was in the HHA file so

1928
01:37:37,989 --> 01:37:42,159
that I would know right that would be

1929
01:37:39,399 --> 01:37:45,519
kind of nice so here's I'm going to

1930
01:37:42,159 --> 01:37:49,599
propose what if we just added something

1931
01:37:45,520 --> 01:37:51,430
to our HHA edit so you know it's got

1932
01:37:49,600 --> 01:37:55,600
these commands in and create rewrite

1933
01:37:51,430 --> 01:38:00,550
info dump and I'll be honest I don't

1934
01:37:55,600 --> 01:38:02,140
really know what check hht is I think we

1935
01:38:00,550 --> 01:38:10,630
deleted that didn't we

1936
01:38:02,140 --> 01:38:14,050
that's still in there rewrite info dump

1937
01:38:10,630 --> 01:38:15,279
create you're right yeah that's not

1938
01:38:14,050 --> 01:38:18,010
really in there anymore that's just

1939
01:38:15,279 --> 01:38:20,229
wrong um so what I would like to do is

1940
01:38:18,010 --> 01:38:25,090
say look maybe we can do a thing here

1941
01:38:20,229 --> 01:38:28,599
where we say what if we have like a -

1942
01:38:25,090 --> 01:38:29,680
extract that just says if I give you

1943
01:38:28,600 --> 01:38:36,610
this

1944
01:38:29,680 --> 01:38:40,780
HHA file can you dump like a bitmap from

1945
01:38:36,609 --> 01:38:44,559
it so that I can look at it right and so

1946
01:38:40,779 --> 01:38:50,859
if I say source HHA it'll extract and

1947
01:38:44,560 --> 01:38:52,030
dump like all of the things I mean yeah

1948
01:38:50,859 --> 01:38:54,279
I mean I might as well just have it

1949
01:38:52,029 --> 01:38:56,529
extract all of them there doesn't seem

1950
01:38:54,279 --> 01:39:03,729
to be a lot of reason to extract just

1951
01:38:56,529 --> 01:39:05,429
one I don't think yeah I can't think of

1952
01:39:03,729 --> 01:39:07,509
it

1953
01:39:05,430 --> 01:39:09,220
so you basically say like click extract

1954
01:39:07,510 --> 01:39:11,170
all this stuff and extract it to this

1955
01:39:09,220 --> 01:39:12,579
directory right like that seems

1956
01:39:11,170 --> 01:39:15,369
reasonable

1957
01:39:12,579 --> 01:39:18,699
and so in here if we say like alright

1958
01:39:15,369 --> 01:39:22,180
let's have this commands where we do a

1959
01:39:18,699 --> 01:39:25,149
string comp here and we just say alright

1960
01:39:22,180 --> 01:39:29,460
extract everything from this then what I

1961
01:39:25,149 --> 01:39:29,460
do is I'd say get me that information

1962
01:39:33,750 --> 01:39:38,640
and then I would read this in and I

1963
01:39:36,210 --> 01:39:40,859
would just loop over all of the assets

1964
01:39:38,640 --> 01:39:45,480
in it and extract them out to different

1965
01:39:40,859 --> 01:39:49,319
directories right so this HHA a a

1966
01:39:45,479 --> 01:39:51,959
loading HHA has all of this information

1967
01:39:49,319 --> 01:39:55,649
in it so I can loop over the asset count

1968
01:39:51,960 --> 01:39:59,219
right I can say that there's an asset

1969
01:39:55,649 --> 01:40:02,759
index that goes from 1 to whatever the

1970
01:39:59,219 --> 01:40:07,260
asset count is and for each of those I

1971
01:40:02,760 --> 01:40:12,390
can output the asset index of my choice

1972
01:40:07,260 --> 01:40:19,590
right and I could also make it be like

1973
01:40:12,390 --> 01:40:24,539
there's a stem like that maybe I'll save

1974
01:40:19,590 --> 01:40:29,909
that so you just say like test file name

1975
01:40:24,539 --> 01:40:32,430
stem and so essentially what you do is

1976
01:40:29,909 --> 01:40:34,260
you'd pass like the first part of the

1977
01:40:32,430 --> 01:40:36,510
name and then I depend like the number

1978
01:40:34,260 --> 01:40:37,020
of the asset and the dot whatever it

1979
01:40:36,510 --> 01:40:40,800
should be

1980
01:40:37,020 --> 01:40:45,480
BMP if it's a you know a image or WAV if

1981
01:40:40,800 --> 01:40:47,310
it's a sound you know back how thing so

1982
01:40:45,479 --> 01:40:49,529
then in here what I'll do is I'll build

1983
01:40:47,310 --> 01:40:53,789
the asset name so I'll say like you know

1984
01:40:49,529 --> 01:40:59,300
desk file name and you know I'll do some

1985
01:40:53,789 --> 01:40:59,300
cheesery here whatever

1986
01:41:06,939 --> 01:41:20,529
actually are we using your standard

1987
01:41:09,140 --> 01:41:22,789
library oh nevermind

1988
01:41:20,529 --> 01:41:28,880
we're using our standard library

1989
01:41:22,789 --> 01:41:32,239
so I can just say alright make a test

1990
01:41:28,880 --> 01:41:35,960
file name here I want to have whatever

1991
01:41:32,239 --> 01:41:40,159
the stem is and then I want like a dot

1992
01:41:35,960 --> 01:41:44,480
and I want like some stuff and I'm gonna

1993
01:41:40,159 --> 01:41:48,579
dump a bitmap or something and so here I

1994
01:41:44,479 --> 01:41:52,129
want something like percent s % you

1995
01:41:48,579 --> 01:41:56,180
where the percent s is whatever the desk

1996
01:41:52,130 --> 01:42:02,960
file stem was and then the asset index

1997
01:41:56,180 --> 01:42:05,789
like comes after it you know and so

1998
01:42:02,960 --> 01:42:10,480
maybe that's

1999
01:42:05,789 --> 01:42:12,130
zero for as well something like that so

2000
01:42:10,479 --> 01:42:23,529
that will just like dump all of those

2001
01:42:12,130 --> 01:42:30,220
things in there and I can do the ones

2002
01:42:23,529 --> 01:42:32,489
that I know how to do right yeah so at

2003
01:42:30,220 --> 01:42:42,250
the moment what I'll do is I'll say look

2004
01:42:32,489 --> 01:42:45,039
we don't really handle we don't we don't

2005
01:42:42,250 --> 01:42:47,680
really handle anything that's not a

2006
01:42:45,039 --> 01:42:50,170
bitmap at the moment I'll add sounds at

2007
01:42:47,680 --> 01:42:52,000
some point so for right now we'll just

2008
01:42:50,170 --> 01:42:55,989
say look what was the type of this thing

2009
01:42:52,000 --> 01:42:59,890
like what kind of asset is it so when we

2010
01:42:55,989 --> 01:43:01,809
go into like here and there's this type

2011
01:42:59,890 --> 01:43:04,930
field we're just gonna look and say look

2012
01:43:01,810 --> 01:43:08,320
if that type is is it like an image type

2013
01:43:04,930 --> 01:43:10,630
then we'll we can parse it if it's not

2014
01:43:08,319 --> 01:43:14,380
we're just not gonna it's not gonna

2015
01:43:10,630 --> 01:43:16,420
happen my friend right so we just say

2016
01:43:14,380 --> 01:43:19,210
like okay get like if it's a bitmap off

2017
01:43:16,420 --> 01:43:22,180
we go if it's not then we don't and

2018
01:43:19,210 --> 01:43:24,069
that's the end of the bat so inside here

2019
01:43:22,180 --> 01:43:25,600
when we go to do the extract bitmap

2020
01:43:24,069 --> 01:43:27,639
accent I'm just gonna say like here's

2021
01:43:25,600 --> 01:43:29,860
the asset in question the loaded the

2022
01:43:27,640 --> 01:43:32,740
loaded HHA and here's the desk filename

2023
01:43:29,859 --> 01:43:34,929
that I'd like you know it to go to and

2024
01:43:32,739 --> 01:43:40,510
so all I need to do is just like write

2025
01:43:34,930 --> 01:43:41,920
this actual function I don't know if

2026
01:43:40,510 --> 01:43:47,280
we've got yeah

2027
01:43:41,920 --> 01:43:47,279
so for things that write bitmaps

2028
01:43:50,699 --> 01:44:03,489
we've got load BMP we have a right BMP

2029
01:43:55,479 --> 01:44:08,049
though too don't we I mean we definitely

2030
01:44:03,489 --> 01:44:10,170
do and so it's just a question of me

2031
01:44:08,050 --> 01:44:14,110
remembering where the heck we put it

2032
01:44:10,170 --> 01:44:16,840
because we have one at the very least I

2033
01:44:14,109 --> 01:44:19,899
thought we had but for our PNG tester

2034
01:44:16,840 --> 01:44:26,670
thing right where we would write out the

2035
01:44:19,899 --> 01:44:26,670
PNG that we loaded so like this thing

2036
01:44:28,319 --> 01:44:49,649
this yeah so you already have a thing

2037
01:44:38,649 --> 01:44:49,649
that does the writing here and I yes I

2038
01:44:50,819 --> 01:44:58,889
guess that's what we want maybe

2039
01:45:03,609 --> 01:45:32,380
I'm gonna cut and paste this for now I'm

2040
01:45:09,819 --> 01:45:33,759
not super sure so I'm just gonna say

2041
01:45:32,380 --> 01:45:35,260
look at some point we should probably

2042
01:45:33,760 --> 01:45:36,730
have some way of like for these

2043
01:45:35,260 --> 01:45:40,150
command-line utilities which we have a

2044
01:45:36,729 --> 01:45:43,209
couple of for various things I'm testing

2045
01:45:40,149 --> 01:45:45,009
really mostly it seems like we would

2046
01:45:43,210 --> 01:45:46,980
probably want to have some way of

2047
01:45:45,010 --> 01:45:51,789
sharing this code between them you know

2048
01:45:46,979 --> 01:45:54,129
that just seems like a good idea and I'm

2049
01:45:51,789 --> 01:45:57,189
also gonna let this thing not need error

2050
01:45:54,130 --> 01:46:00,670
streams you know if it doesn't if it

2051
01:45:57,189 --> 01:46:03,369
doesn't need to have them so at the

2052
01:46:00,670 --> 01:46:10,810
moment I might say actually where is out

2053
01:46:03,369 --> 01:46:12,789
F so it does do a check around the out

2054
01:46:10,810 --> 01:46:15,460
so this is fine so all this will be just

2055
01:46:12,789 --> 01:46:19,060
fine so what I really need to do here is

2056
01:46:15,460 --> 01:46:21,489
just call this for each asset in the

2057
01:46:19,060 --> 01:46:24,670
system and that should be the end of it

2058
01:46:21,489 --> 01:46:27,670
right so in theory this should do it for

2059
01:46:24,670 --> 01:46:31,510
us so we would need to know the asset oh

2060
01:46:27,670 --> 01:46:36,810
and this is a yeah a loaded HHA this is

2061
01:46:31,510 --> 01:46:36,810
an HSA asset and this is a like file

2062
01:46:37,050 --> 01:46:45,940
stem-vowel me actually that's a bug it's

2063
01:46:42,670 --> 01:46:48,640
not this fast time it's just foul name

2064
01:46:45,939 --> 01:46:50,649
so when we export each of these assets

2065
01:46:48,640 --> 01:46:52,869
what we need to do is grab this stuff

2066
01:46:50,649 --> 01:46:54,549
out so we know the desk file name and

2067
01:46:52,869 --> 01:46:55,930
that's fine and we also know the pixel

2068
01:46:54,550 --> 01:46:59,579
ops because those are always going to be

2069
01:46:55,930 --> 01:47:01,990
exactly the same so out of these right

2070
01:46:59,579 --> 01:47:06,390
we need to figure out which one's of

2071
01:47:01,989 --> 01:47:06,389
these we're going to do now invert

2072
01:47:09,479 --> 01:47:38,649
is what exactly it swaps rose ah so

2073
01:47:36,038 --> 01:47:44,738
that's if you want to flip it upside

2074
01:47:38,649 --> 01:47:47,099
down okay so we've got inverts which I

2075
01:47:44,738 --> 01:47:51,398
don't know whether we need because

2076
01:47:47,099 --> 01:47:56,918
bitmaps it's writing as at a top down so

2077
01:47:51,399 --> 01:47:58,689
ours in memory if they are top down as

2078
01:47:56,918 --> 01:48:01,118
well we're fine if they're actually

2079
01:47:58,689 --> 01:48:04,539
bottom up then we need to reverse them

2080
01:48:01,118 --> 01:48:06,578
right so I don't really remember which

2081
01:48:04,538 --> 01:48:09,518
way we did it cuz it's been so long

2082
01:48:06,578 --> 01:48:12,448
since we've touched that code but that's

2083
01:48:09,519 --> 01:48:15,579
easy enough for us to fuss with right

2084
01:48:12,448 --> 01:48:18,188
multiply a is whether or not we need to

2085
01:48:15,578 --> 01:48:23,738
do like a pre multiply alpha I assume on

2086
01:48:18,189 --> 01:48:26,409
there right yeah so this one I don't

2087
01:48:23,738 --> 01:48:30,248
think we want to multiply the alpha at

2088
01:48:26,408 --> 01:48:32,168
all because we've already done a are

2089
01:48:30,248 --> 01:48:36,760
pretty multiply if if one was gonna get

2090
01:48:32,168 --> 01:48:38,648
done for swap are we're writing we're

2091
01:48:36,760 --> 01:48:40,719
gonna be writing a windows bitmap file

2092
01:48:38,649 --> 01:48:43,239
so I think we do have to swap the are

2093
01:48:40,719 --> 01:48:44,649
because I believe we store I can't

2094
01:48:43,238 --> 01:48:46,538
remember again with trade store did we

2095
01:48:44,649 --> 01:48:50,289
do BJ we may actually start be GRE

2096
01:48:46,538 --> 01:48:51,658
internally though so I think swap are

2097
01:48:50,288 --> 01:48:57,698
doesn't actually need to be there either

2098
01:48:51,658 --> 01:48:59,138
replicate a just writes it as an alpha

2099
01:48:57,698 --> 01:49:01,418
image which again I don't think we need

2100
01:48:59,139 --> 01:49:04,090
so the only question is do we need to

2101
01:49:01,418 --> 01:49:06,550
invert it so we may just have 0 for

2102
01:49:04,090 --> 01:49:08,229
pixel ops but we may need to do the

2103
01:49:06,550 --> 01:49:08,739
inversion I'm not going to pass an air

2104
01:49:08,229 --> 01:49:12,579
stream

2105
01:49:08,738 --> 01:49:13,988
I don't care and so what we really need

2106
01:49:12,578 --> 01:49:16,988
to figure out is the rest of this stuff

2107
01:49:13,988 --> 01:49:18,698
so if we go back to the HHA file format

2108
01:49:16,988 --> 01:49:21,859
that should tell us what we need to know

2109
01:49:18,698 --> 01:49:26,960
if you look in here we've got

2110
01:49:21,859 --> 01:49:28,489
information from the HHA asset and it's

2111
01:49:26,960 --> 01:49:30,710
the bitmap part of it that we care about

2112
01:49:28,489 --> 01:49:31,880
because there's the dim that we that's

2113
01:49:30,710 --> 01:49:37,970
what we actually need to know

2114
01:49:31,880 --> 01:49:40,609
so inside asset we've got bitmap dot dim

2115
01:49:37,970 --> 01:49:47,510
and that should be our width and height

2116
01:49:40,609 --> 01:49:52,039
there and then we've got our pixels and

2117
01:49:47,510 --> 01:49:54,340
the pixels is going to be wherever the

2118
01:49:52,039 --> 01:49:57,350
data is supposed to be for this asset

2119
01:49:54,340 --> 01:50:08,029
and that was in the actual asset itself

2120
01:49:57,350 --> 01:50:14,150
so HHA asset data offset is where that

2121
01:50:08,029 --> 01:50:17,300
actually is groups right so if we look

2122
01:50:14,149 --> 01:50:20,299
at the loaded HHA the loaded HHA has on

2123
01:50:17,300 --> 01:50:22,699
everything loaded in it so this is it so

2124
01:50:20,300 --> 01:50:26,270
what we need to do is say well whatever

2125
01:50:22,699 --> 01:50:28,519
that asset was we need to take the data

2126
01:50:26,270 --> 01:50:31,130
store and we need to offset from the

2127
01:50:28,520 --> 01:50:35,060
data store wherever the asset data would

2128
01:50:31,130 --> 01:50:37,250
have been you know what I mean so that's

2129
01:50:35,060 --> 01:50:39,620
pretty straightforward as well I'm gonna

2130
01:50:37,250 --> 01:50:41,270
go ahead and call this pixels and I'm

2131
01:50:39,619 --> 01:50:43,609
gonna grab that out as a thing because

2132
01:50:41,270 --> 01:50:47,780
we may when we're debugging this we may

2133
01:50:43,609 --> 01:50:49,909
want to look at that value as well so I

2134
01:50:47,779 --> 01:50:52,069
think that's mostly everything that we

2135
01:50:49,909 --> 01:50:58,699
would need to do there in order to write

2136
01:50:52,069 --> 01:51:02,299
out the bitmaps I think that's mostly it

2137
01:50:58,699 --> 01:51:04,939
so if I go ahead and build this and look

2138
01:51:02,300 --> 01:51:06,739
look through here it looks like the

2139
01:51:04,939 --> 01:51:08,869
error stream stuff is a little borked

2140
01:51:06,739 --> 01:51:12,019
because we're not including that in here

2141
01:51:08,869 --> 01:51:13,189
so that's actually okay because I cut

2142
01:51:12,020 --> 01:51:16,550
and pasted it I'm just going to do this

2143
01:51:13,189 --> 01:51:20,989
this would be a bigger problem if I had

2144
01:51:16,550 --> 01:51:26,420
right so there's worth noting so where

2145
01:51:20,989 --> 01:51:28,340
do we actually so we're just doing a

2146
01:51:26,420 --> 01:51:31,279
printf to standard error for our stream

2147
01:51:28,340 --> 01:51:33,739
right that's how we're doing that so in

2148
01:51:31,279 --> 01:51:36,979
here we can just do this

2149
01:51:33,739 --> 01:51:41,119
and and that should solve that problem

2150
01:51:36,979 --> 01:51:44,389
for now that all's fine but we do have

2151
01:51:41,119 --> 01:51:46,849
the problem that inside the test P&amp;G

2152
01:51:44,390 --> 01:51:49,810
stuff I need like these utility

2153
01:51:46,850 --> 01:51:54,650
functions that we had that seems fine

2154
01:51:49,810 --> 01:51:56,480
the swap and stuff it's a swamp aren't B

2155
01:51:54,649 --> 01:52:03,049
and I know where that is

2156
01:51:56,479 --> 01:52:05,629
oh that's in that's in our utility layer

2157
01:52:03,050 --> 01:52:09,289
so that's all fine we could put these in

2158
01:52:05,630 --> 01:52:12,529
there as well just to avoid again just

2159
01:52:09,289 --> 01:52:13,250
duplicating things unnecessarily I'd be

2160
01:52:12,529 --> 01:52:16,369
fine with that

2161
01:52:13,250 --> 01:52:19,840
so in here if we wanted to we could just

2162
01:52:16,369 --> 01:52:22,399
say look those are there and that's fine

2163
01:52:19,840 --> 01:52:27,770
and then in test P&amp;G we just get rid of

2164
01:52:22,399 --> 01:52:29,509
them right so now we just have a problem

2165
01:52:27,770 --> 01:52:32,060
that that our bitmap header is not

2166
01:52:29,510 --> 01:52:34,190
defined anywhere and that's because that

2167
01:52:32,060 --> 01:52:37,010
was something that we've liked again

2168
01:52:34,189 --> 01:52:41,179
just always kind of cut and pasted so it

2169
01:52:37,010 --> 01:52:44,000
would be nice again if we like had some

2170
01:52:41,180 --> 01:52:45,440
saner way of sharing these amongst these

2171
01:52:44,000 --> 01:52:49,250
utilities because they don't go into

2172
01:52:45,439 --> 01:52:50,989
handmade here a proper and that's the

2173
01:52:49,250 --> 01:52:54,560
only place that we really set up a place

2174
01:52:50,989 --> 01:52:56,210
to share code amongst features right so

2175
01:52:54,560 --> 01:52:59,510
it's something to think about going

2176
01:52:56,210 --> 01:53:01,100
forward looking at this here we know we

2177
01:52:59,510 --> 01:53:04,010
don't need the stream anymore so I think

2178
01:53:01,100 --> 01:53:05,630
now we're good and now we just need to

2179
01:53:04,010 --> 01:53:07,400
see if this works at all which maybe it

2180
01:53:05,630 --> 01:53:09,890
does maybe it doesn't

2181
01:53:07,399 --> 01:53:11,059
so in here let's start by trying to dump

2182
01:53:09,890 --> 01:53:13,340
something from something that actually

2183
01:53:11,060 --> 01:53:14,480
works there's no point in trying to dump

2184
01:53:13,340 --> 01:53:16,430
from intro cut scene because

2185
01:53:14,479 --> 01:53:18,229
intercutting it's busted we're gonna use

2186
01:53:16,430 --> 01:53:19,880
the dump to debug it so we don't want to

2187
01:53:18,229 --> 01:53:23,119
start trying to get the dump working on

2188
01:53:19,880 --> 01:53:26,000
that because it might be busted right so

2189
01:53:23,119 --> 01:53:27,949
let's try dumping like the local HHA so

2190
01:53:26,000 --> 01:53:31,039
I'm gonna make a dump directory here and

2191
01:53:27,949 --> 01:53:32,869
I'm gonna say HHA edit - extract I'm

2192
01:53:31,039 --> 01:53:37,210
gonna say why don't you extract

2193
01:53:32,869 --> 01:53:40,699
I don't know test 1 v2 HHA or something

2194
01:53:37,210 --> 01:53:45,199
once you extract that into the dump

2195
01:53:40,699 --> 01:53:45,809
directory right so dump slash I don't

2196
01:53:45,199 --> 01:53:51,239
know

2197
01:53:45,810 --> 01:53:53,460
test 1 v2 go ahead and take a look so

2198
01:53:51,239 --> 01:53:58,769
first of all is that do anything it does

2199
01:53:53,460 --> 01:54:02,550
just do anything useful No

2200
01:53:58,770 --> 01:54:04,920
so you know close but no cigar we don't

2201
01:54:02,550 --> 01:54:08,940
we don't get any points we don't get to

2202
01:54:04,920 --> 01:54:10,890
come back next week or we don't win a

2203
01:54:08,939 --> 01:54:15,210
case of rice-a-roni the San Francisco

2204
01:54:10,890 --> 01:54:16,410
treat like nothing happens so we want to

2205
01:54:15,210 --> 01:54:18,029
get that dump working so that we can

2206
01:54:16,409 --> 01:54:19,590
look at these files so why isn't the

2207
01:54:18,029 --> 01:54:22,259
dump working would be question number

2208
01:54:19,590 --> 01:54:27,720
one what are we doing wrong there

2209
01:54:22,260 --> 01:54:30,119
so the bitmap dim we can look at this

2210
01:54:27,720 --> 01:54:32,340
how the header stuff is working we've

2211
01:54:30,119 --> 01:54:34,229
got the pragma pack pop bitmap header

2212
01:54:32,340 --> 01:54:35,190
here and presumably we're setting the

2213
01:54:34,229 --> 01:54:41,939
stuff correctly I don't know if we are

2214
01:54:35,189 --> 01:54:44,579
or not output pixel size this all seem

2215
01:54:41,939 --> 01:54:47,509
sane right we're just figuring out how

2216
01:54:44,579 --> 01:54:47,510
to line this stuff up

2217
01:54:54,269 --> 01:54:59,550
I mean that looks pretty reasonable to

2218
01:54:56,760 --> 01:55:11,369
me I'm not sure what's what would be

2219
01:54:59,550 --> 01:55:12,690
broken about that wait a second where is

2220
01:55:11,368 --> 01:55:22,679
it getting the out where is it getting

2221
01:55:12,689 --> 01:55:25,759
the space for output pixel size oh it's

2222
01:55:22,679 --> 01:55:25,760
just doing it in place

2223
01:55:29,319 --> 01:55:35,439
that's actually fine because we just

2224
01:55:31,149 --> 01:55:38,710
throw it away anyway but weird alright

2225
01:55:35,439 --> 01:55:40,539
so yeah that does the 2f writes and then

2226
01:55:38,710 --> 01:55:42,819
the F close I mean that should sort of

2227
01:55:40,539 --> 01:55:45,189
work right and it seems reasonable so

2228
01:55:42,819 --> 01:55:49,079
I'm not really sure what the problem was

2229
01:55:45,189 --> 01:55:52,149
there let me take a quick look and see

2230
01:55:49,079 --> 01:55:59,609
if there's something weird going on so

2231
01:55:52,149 --> 01:55:59,609
in here I'm gonna jump over to AJ edit I

2232
01:55:59,819 --> 01:56:13,989
think this is OK seems ok gonna take the

2233
01:56:07,989 --> 01:56:17,079
exact command line that we used and just

2234
01:56:13,989 --> 01:56:21,239
place that in here and then I'm gonna

2235
01:56:17,079 --> 01:56:25,180
make the working directory be handmade

2236
01:56:21,239 --> 01:56:28,119
slash data and we'll see if this

2237
01:56:25,180 --> 01:56:31,450
extraction call doesn't anything useful

2238
01:56:28,119 --> 01:56:34,510
so stepping in here oh and let me set it

2239
01:56:31,449 --> 01:56:36,250
to the debug mode so we don't have to do

2240
01:56:34,510 --> 01:56:37,690
fancy footwork to understand what we're

2241
01:56:36,250 --> 01:56:39,279
looking at in the debugger since this is

2242
01:56:37,689 --> 01:56:41,489
not a time critical operation shouldn't

2243
01:56:39,279 --> 01:56:41,489
be an issue

2244
01:56:41,880 --> 01:56:46,510
alright so assuming we get here which we

2245
01:56:45,369 --> 01:56:49,750
must because it actually was dumping

2246
01:56:46,510 --> 01:56:52,119
files we read the HHA and and you know

2247
01:56:49,750 --> 01:56:54,189
presumably that data store is just the

2248
01:56:52,119 --> 01:56:56,439
data store and there it is

2249
01:56:54,189 --> 01:56:57,759
so in here we loop through our assets

2250
01:56:56,439 --> 01:57:00,039
and when we get one of these bitmap

2251
01:56:57,760 --> 01:57:02,020
assets we create a DES file name which

2252
01:57:00,039 --> 01:57:04,300
that all seemed to work nicely so there

2253
01:57:02,020 --> 01:57:06,940
it is we then go to extract the bitmap

2254
01:57:04,300 --> 01:57:08,199
asset and in here we get a pixel pointer

2255
01:57:06,939 --> 01:57:11,019
back right which should be good

2256
01:57:08,199 --> 01:57:12,460
datastore plus the data offset and then

2257
01:57:11,020 --> 01:57:14,890
we pass in the width and height and all

2258
01:57:12,460 --> 01:57:17,409
that crap so let's see what that was 144

2259
01:57:14,890 --> 01:57:20,079
by 217 seems totally reasonable that

2260
01:57:17,409 --> 01:57:25,539
yields a total pixel size of 124 992

2261
01:57:20,079 --> 01:57:29,559
let's see if that actual value which is

2262
01:57:25,539 --> 01:57:34,779
this here that should equal what we

2263
01:57:29,560 --> 01:57:37,750
found in this HHA asset so meaning these

2264
01:57:34,779 --> 01:57:40,359
size should be the same and it is so

2265
01:57:37,750 --> 01:57:42,520
we're I mean everything looks right so

2266
01:57:40,359 --> 01:57:44,199
far we create a header let's

2267
01:57:42,520 --> 01:57:56,350
see if the header is it all reasonable

2268
01:57:44,199 --> 01:57:57,939
so here's the header file tight don't

2269
01:57:56,350 --> 01:57:59,500
really know much about what that should

2270
01:57:57,939 --> 01:57:59,919
be so I'm gonna assume that we got that

2271
01:57:59,500 --> 01:58:04,000
correct

2272
01:57:59,920 --> 01:58:05,920
let's hope we've got the file size which

2273
01:58:04,000 --> 01:58:09,250
is the header plus the pixel size that

2274
01:58:05,920 --> 01:58:12,010
seems good the header size is the size

2275
01:58:09,250 --> 01:58:19,199
the header minus 14 not sure how exactly

2276
01:58:12,010 --> 01:58:21,610
that works okay I know what we did wrong

2277
01:58:19,199 --> 01:58:24,880
see this is why we should share the code

2278
01:58:21,609 --> 01:58:33,099
right I bet we use the wrong bitmap

2279
01:58:24,880 --> 01:58:34,510
header so I'm guessing we've got two

2280
01:58:33,100 --> 01:58:36,690
different kinds of these although maybe

2281
01:58:34,510 --> 01:58:40,230
no no we don't nevermind

2282
01:58:36,689 --> 01:58:40,229
that is what it looks like

2283
01:59:00,090 --> 01:59:06,909
yeah nope I'm correct well I don't know

2284
01:59:05,890 --> 01:59:09,460
that I'm actually correct

2285
01:59:06,909 --> 01:59:13,289
so you can see in here here's the bitmap

2286
01:59:09,460 --> 01:59:13,289
header that the pain thing was using

2287
01:59:13,560 --> 01:59:36,010
right so here's the one that was doing

2288
01:59:21,970 --> 01:59:39,280
that right out so it was actually using

2289
01:59:36,010 --> 01:59:41,860
a totally different version the size of

2290
01:59:39,279 --> 01:59:45,719
header minus 14 part I'm not really sure

2291
01:59:41,859 --> 01:59:47,799
where it comes from exactly but again so

2292
01:59:45,720 --> 01:59:52,210
there's two different ways you can write

2293
01:59:47,800 --> 01:59:54,970
the bitmap and we have both versions in

2294
01:59:52,210 --> 02:00:00,279
our just like random crap files right

2295
01:59:54,970 --> 02:00:05,079
let me just see what happens now Hey

2296
02:00:00,279 --> 02:00:06,819
look so yeah again that's just we should

2297
02:00:05,079 --> 02:00:08,500
make a thing that we like something

2298
02:00:06,819 --> 02:00:12,009
that's like our command line utilities

2299
02:00:08,500 --> 02:00:13,420
stuff or maybe we just right enough in

2300
02:00:12,010 --> 02:00:15,369
our platform layer to make the command

2301
02:00:13,420 --> 02:00:18,010
line utilities use it that's the other

2302
02:00:15,369 --> 02:00:19,269
option it's just go full-bore right so

2303
02:00:18,010 --> 02:00:21,159
you can see all that stuff dumped

2304
02:00:19,270 --> 02:00:26,500
properly so that's great that means now

2305
02:00:21,159 --> 02:00:30,460
we can dump our intro 1 so if we say

2306
02:00:26,500 --> 02:00:33,369
like intercutting that HHA and we dump

2307
02:00:30,460 --> 02:00:36,100
all that stuff here we should now be

2308
02:00:33,369 --> 02:00:38,019
able to see what it is so this is even

2309
02:00:36,100 --> 02:00:41,039
more perplexing because now it's like

2310
02:00:38,020 --> 02:00:43,420
hey all of this stuff is accurate right

2311
02:00:41,039 --> 02:00:46,180
so the only thing I can think of is like

2312
02:00:43,420 --> 02:00:48,970
did we screw up the Alpha like why how

2313
02:00:46,180 --> 02:00:51,039
are we not able to see these when they

2314
02:00:48,970 --> 02:00:53,260
look correct like why aren't we finding

2315
02:00:51,039 --> 02:00:54,519
them what's going on you know what I

2316
02:00:53,260 --> 02:00:57,190
mean

2317
02:00:54,520 --> 02:01:00,430
so something's up and I'm not sure what

2318
02:00:57,189 --> 02:01:03,699
I might save that for tomorrow because

2319
02:01:00,430 --> 02:01:05,140
I'm happy with where we ended today so

2320
02:01:03,699 --> 02:01:06,699
at least we know like hey our whole

2321
02:01:05,140 --> 02:01:08,820
packing system is working pretty darn

2322
02:01:06,699 --> 02:01:08,819
well

2323
02:01:09,359 --> 02:01:15,920
but yeah so

2324
02:01:12,529 --> 02:01:19,939
we'll stop there I'll go to QA and we'll

2325
02:01:15,920 --> 02:01:22,599
pick this up tomorrow when I think we

2326
02:01:19,939 --> 02:01:22,598
should be all right

2327
02:01:35,998 --> 02:01:56,748
I should check to see how the inch are

2328
02:01:52,948 --> 02:01:56,748
cut scenes occurring their categories

2329
02:02:00,498 --> 02:02:05,478
yeah I'm just not sure what exactly is

2330
02:02:02,969 --> 02:02:05,479
wrong there

2331
02:02:09,139 --> 02:02:13,840
I'm just not sure

2332
02:02:19,399 --> 02:02:24,409
what's your first major gameplay

2333
02:02:21,229 --> 02:02:25,759
programming topic going to be we don't

2334
02:02:24,409 --> 02:02:30,859
we don't really have gameplay

2335
02:02:25,760 --> 02:02:33,079
programming topics per se you really

2336
02:02:30,859 --> 02:02:35,349
only do engine programming topics for

2337
02:02:33,079 --> 02:02:37,819
gameplay we're just gonna you know

2338
02:02:35,350 --> 02:02:40,760
basically just straightforwardly write

2339
02:02:37,819 --> 02:02:45,559
the entity code that we need for each

2340
02:02:40,760 --> 02:02:49,130
feature there really won't be there

2341
02:02:45,560 --> 02:02:52,820
won't be anything else try to stay away

2342
02:02:49,130 --> 02:02:54,890
from gameplay gameplay stuff cynthaiz

2343
02:02:52,819 --> 02:02:57,380
iasts do you use string library from CRT

2344
02:02:54,890 --> 02:02:59,780
I thought we wrote our own version yeah

2345
02:02:57,380 --> 02:03:03,650
so in our command-line utilities we

2346
02:02:59,779 --> 02:03:04,699
don't use our own stuff in the command

2347
02:03:03,649 --> 02:03:06,349
line utilities they're written on

2348
02:03:04,699 --> 02:03:10,369
standard libs so that anyone can compile

2349
02:03:06,350 --> 02:03:14,810
them hopefully on anything without

2350
02:03:10,369 --> 02:03:16,880
needing to change it however we could

2351
02:03:14,810 --> 02:03:22,340
decide not to do that later if that

2352
02:03:16,880 --> 02:03:26,319
makes sense so only in the game do we

2353
02:03:22,340 --> 02:03:26,319
call our own string your teens routines

2354
02:03:27,100 --> 02:03:31,550
have you ever programmed non-blocking

2355
02:03:29,329 --> 02:03:36,050
TCP sockets I wonder what is the cost of

2356
02:03:31,550 --> 02:03:41,810
directly calling rec fee and send versus

2357
02:03:36,050 --> 02:03:44,140
select so the answer actually is yes I

2358
02:03:41,810 --> 02:03:44,140
have

2359
02:03:48,680 --> 02:03:55,289
the only problem is I've never done it

2360
02:03:53,489 --> 02:03:58,800
in a super performance-critical way

2361
02:03:55,289 --> 02:04:03,090
where I was trying to like max out the

2362
02:03:58,800 --> 02:04:05,070
network performance so here's what I

2363
02:04:03,090 --> 02:04:07,050
will say if you're just doing it in a

2364
02:04:05,069 --> 02:04:10,949
game - like receive packets from the

2365
02:04:07,050 --> 02:04:12,989
server then calling a rec feed calling

2366
02:04:10,949 --> 02:04:16,319
non-blocking breakfast I would assume

2367
02:04:12,989 --> 02:04:19,109
would be totally fine because you're

2368
02:04:16,319 --> 02:04:21,000
just because the game client just

2369
02:04:19,109 --> 02:04:23,670
doesn't have very many connections to

2370
02:04:21,000 --> 02:04:26,579
service so you should be fine on a

2371
02:04:23,670 --> 02:04:28,380
server with a high volume of clients

2372
02:04:26,579 --> 02:04:30,149
like let's say you were trying to do a

2373
02:04:28,380 --> 02:04:31,980
lobby server with like thousands of

2374
02:04:30,149 --> 02:04:33,719
clients connecting and disconnecting I

2375
02:04:31,979 --> 02:04:36,449
don't think you would want to do that at

2376
02:04:33,720 --> 02:04:37,920
all because just the iteration over all

2377
02:04:36,449 --> 02:04:39,630
of those like saying do you have a

2378
02:04:37,920 --> 02:04:41,970
packet of magnitude a packet is just

2379
02:04:39,630 --> 02:04:44,550
really wasteful so I would say you

2380
02:04:41,970 --> 02:04:50,690
really want to use something like an i/o

2381
02:04:44,550 --> 02:04:57,270
CP or I like a Windows message something

2382
02:04:50,689 --> 02:05:00,539
that's like notification based so I

2383
02:04:57,270 --> 02:05:03,360
would just say non-blocking rect V is

2384
02:05:00,539 --> 02:05:05,640
fine for like one or two input streams

2385
02:05:03,359 --> 02:05:08,159
but if you're going to try and scale it

2386
02:05:05,640 --> 02:05:09,780
up to like you know tens hundreds

2387
02:05:08,159 --> 02:05:13,309
thousands of input streams it will I

2388
02:05:09,779 --> 02:05:13,309
don't think that's a very good strategy

2389
02:05:13,579 --> 02:05:17,250
could you improve the assert Metro such

2390
02:05:15,930 --> 02:05:19,560
that it prints the string IIST

2391
02:05:17,250 --> 02:05:20,819
expression which failed on Linux the

2392
02:05:19,560 --> 02:05:26,430
debugger does not always show which

2393
02:05:20,819 --> 02:05:32,279
assert failed where nope I can't because

2394
02:05:26,430 --> 02:05:34,950
there is no printf we removed all the

2395
02:05:32,279 --> 02:05:36,899
CRT stuff so we would have to add I mean

2396
02:05:34,949 --> 02:05:40,079
I could if I really cared which I don't

2397
02:05:36,899 --> 02:05:44,159
you could go into the win32 layer and

2398
02:05:40,079 --> 02:05:45,510
add the output like - to the platform

2399
02:05:44,159 --> 02:05:47,819
layer get an output and it would do a

2400
02:05:45,510 --> 02:05:51,420
printf on linux and it would do some

2401
02:05:47,819 --> 02:05:52,619
kind of an output on on Windows if you

2402
02:05:51,420 --> 02:05:56,659
just want to fix this on Linux just

2403
02:05:52,619 --> 02:05:56,659
change the assert macro on Linux right

2404
02:05:57,569 --> 02:06:06,569
I would also say men if the if on Linux

2405
02:06:04,829 --> 02:06:08,489
it can't tell you which is where you did

2406
02:06:06,569 --> 02:06:09,809
is right to zero that's kind of terrible

2407
02:06:08,489 --> 02:06:10,979
but of course links debuggers are

2408
02:06:09,810 --> 02:06:13,680
generally terrible so I don't know what

2409
02:06:10,979 --> 02:06:15,029
to say about that I would be shocked if

2410
02:06:13,680 --> 02:06:16,409
gdb didn't show you where it failed

2411
02:06:15,029 --> 02:06:19,699
though that what that sounds wrong you

2412
02:06:16,409 --> 02:06:19,699
must be using something other than gdb

2413
02:06:19,880 --> 02:06:23,520
what is your thought on the structure of

2414
02:06:22,020 --> 02:06:25,590
config files in Windows that have

2415
02:06:23,520 --> 02:06:26,610
sections in the close brackets do you

2416
02:06:25,590 --> 02:06:31,260
think it is a good structure for the

2417
02:06:26,609 --> 02:06:34,500
game config file I don't have a strong

2418
02:06:31,260 --> 02:06:36,390
opinion about it I tend to like things

2419
02:06:34,500 --> 02:06:40,079
to look more like C just cuz that's what

2420
02:06:36,390 --> 02:06:42,740
I'm used to but you know I have a

2421
02:06:40,079 --> 02:06:42,739
problem with it

2422
02:06:49,769 --> 02:06:55,030
how do you implement immediate mode desk

2423
02:06:52,868 --> 02:06:55,960
functionality for rendering anti-aliased

2424
02:06:55,029 --> 02:06:58,420
polygons

2425
02:06:55,960 --> 02:07:00,429
I am currently rendering n guns with a

2426
02:06:58,420 --> 02:07:05,260
geometry shader but I am unable to

2427
02:07:00,429 --> 02:07:09,158
implement anti-aliasing well so just to

2428
02:07:05,260 --> 02:07:11,139
be clear there's two questions that you

2429
02:07:09,158 --> 02:07:13,689
could be asking there and I don't know

2430
02:07:11,139 --> 02:07:15,639
which one you're asking if you're asking

2431
02:07:13,689 --> 02:07:20,078
how do you implement anti aliased

2432
02:07:15,639 --> 02:07:22,719
polygons if you're drawing them in the

2433
02:07:20,078 --> 02:07:25,210
correct order always meaning like back

2434
02:07:22,719 --> 02:07:28,118
to front and no intersections or

2435
02:07:25,210 --> 02:07:30,368
something like that then the answer is

2436
02:07:28,118 --> 02:07:34,328
you don't have to do anything to make

2437
02:07:30,368 --> 02:07:36,189
them anti aliased they just will be as

2438
02:07:34,328 --> 02:07:39,969
long as you use some kind of pixel

2439
02:07:36,189 --> 02:07:41,498
coverage for your pixel shader but if

2440
02:07:39,969 --> 02:07:44,078
you're asking how do you render

2441
02:07:41,498 --> 02:07:49,448
anti-alias polygons in an arbitrary

2442
02:07:44,078 --> 02:07:53,738
order you can't it's not possible so you

2443
02:07:49,448 --> 02:07:56,529
have to be using some actual strategy

2444
02:07:53,738 --> 02:07:59,408
for example you can turn on multi

2445
02:07:56,529 --> 02:08:02,710
sampling which is one strategy for

2446
02:07:59,408 --> 02:08:07,538
solving order independent anti-aliasing

2447
02:08:02,710 --> 02:08:11,078
of polygons you could implement def

2448
02:08:07,538 --> 02:08:13,118
peeling and then post blend of them like

2449
02:08:11,078 --> 02:08:18,759
we do in handmade Hiro that's another

2450
02:08:13,118 --> 02:08:23,348
strategy you could use pixel linked

2451
02:08:18,760 --> 02:08:28,809
lists which is yet another strategy but

2452
02:08:23,349 --> 02:08:30,699
yeah like the short answer of what do

2453
02:08:28,809 --> 02:08:33,219
you do in a geometry shader to render an

2454
02:08:30,698 --> 02:08:35,948
T as fuzzy as you can't you've got to

2455
02:08:33,219 --> 02:08:38,309
have a pixel a back-end pixel pipeline

2456
02:08:35,948 --> 02:08:41,498
capable of doing order independent

2457
02:08:38,309 --> 02:08:43,329
anti-aliasing and there are several ways

2458
02:08:41,498 --> 02:08:45,519
of doing that the most straightforward

2459
02:08:43,328 --> 02:08:46,538
one is always just to turn on multi

2460
02:08:45,519 --> 02:08:48,159
sampling because that's what it's made

2461
02:08:46,538 --> 02:08:52,478
for

2462
02:08:48,158 --> 02:08:55,920
but you know you've you've got a you've

2463
02:08:52,479 --> 02:08:58,690
got to pick something there there's no

2464
02:08:55,920 --> 02:09:00,998
if the fundamental problem is that if

2465
02:08:58,689 --> 02:09:03,129
you're drawing polygons in an arbitrary

2466
02:09:00,998 --> 02:09:05,590
order then

2467
02:09:03,130 --> 02:09:07,329
you have a problem that you don't know

2468
02:09:05,590 --> 02:09:11,829
which one was on top of which other one

2469
02:09:07,329 --> 02:09:16,289
so your coverage what it's supposed to

2470
02:09:11,829 --> 02:09:19,659
actually output as as a result is only

2471
02:09:16,289 --> 02:09:21,819
known if you know what all the samples

2472
02:09:19,659 --> 02:09:27,789
for that pixel were at some final time

2473
02:09:21,819 --> 02:09:30,489
right you can't do it any other way now

2474
02:09:27,789 --> 02:09:32,560
there is one method I didn't mention I

2475
02:09:30,489 --> 02:09:35,590
was listing for you there another one is

2476
02:09:32,560 --> 02:09:38,380
to change your definition of an edge

2477
02:09:35,590 --> 02:09:40,840
anti-aliasing to be order independence

2478
02:09:38,380 --> 02:09:42,310
and some people have done that but it

2479
02:09:40,840 --> 02:09:47,400
doesn't really do usually what you want

2480
02:09:42,310 --> 02:09:49,960
for high quality visuals you can look at

2481
02:09:47,399 --> 02:09:51,909
basically alpha functions that are not

2482
02:09:49,960 --> 02:09:53,800
over so the standard ALPHAN function

2483
02:09:51,909 --> 02:09:56,199
that we use is called over which is like

2484
02:09:53,800 --> 02:09:57,699
this over this and then whatever the

2485
02:09:56,199 --> 02:09:59,889
Alpha is it basically takes what's

2486
02:09:57,699 --> 02:10:03,699
underneath it and blends as much of

2487
02:09:59,890 --> 02:10:06,520
itself in as it needs to right and so

2488
02:10:03,699 --> 02:10:08,710
there are other alpha functions and that

2489
02:10:06,520 --> 02:10:12,730
aren't order dependent over is order

2490
02:10:08,710 --> 02:10:14,289
dependent and you can switch to one of

2491
02:10:12,729 --> 02:10:16,779
those that's yet another option but

2492
02:10:14,289 --> 02:10:19,810
again you you have to it's a pixel

2493
02:10:16,779 --> 02:10:21,279
pipeline issue not something that

2494
02:10:19,810 --> 02:10:25,110
happens in the geometry shader unless

2495
02:10:21,279 --> 02:10:25,109
I'm missing what you're trying to say

2496
02:10:33,340 --> 02:10:40,159
we're trying to manage entities in my

2497
02:10:35,420 --> 02:10:41,600
own game engine or sorry when trying I'm

2498
02:10:40,159 --> 02:10:42,590
just gonna rephrase this I think it's

2499
02:10:41,600 --> 02:10:44,390
what he sings when trying to match

2500
02:10:42,590 --> 02:10:45,529
others in my own game engine just me on

2501
02:10:44,390 --> 02:10:46,640
my own do you think the entity

2502
02:10:45,529 --> 02:10:48,769
components structure is worth

2503
02:10:46,640 --> 02:10:51,280
considering or am I just giving myself

2504
02:10:48,770 --> 02:10:53,570
too much work when it's just my own code

2505
02:10:51,279 --> 02:10:55,609
yeah generally speaking I guess what I'd

2506
02:10:53,569 --> 02:10:57,199
say is we've talked about NDK systems a

2507
02:10:55,609 --> 02:10:59,289
lot before and I would just emphasize

2508
02:10:57,199 --> 02:11:02,840
that I think it's just a bike shed

2509
02:10:59,289 --> 02:11:05,930
problem people massively over complicate

2510
02:11:02,840 --> 02:11:08,690
entity things and it's just um and isn't

2511
02:11:05,930 --> 02:11:10,700
necessary what you should do is just

2512
02:11:08,689 --> 02:11:13,279
write what you need the entities to do

2513
02:11:10,699 --> 02:11:16,970
in code and whatever falls out of that

2514
02:11:13,279 --> 02:11:22,429
data structure wise is fine it's really

2515
02:11:16,970 --> 02:11:27,140
the wrong place to focus that kind of

2516
02:11:22,430 --> 02:11:31,520
systemic database style thinking because

2517
02:11:27,140 --> 02:11:35,619
the most important thing to understand

2518
02:11:31,520 --> 02:11:38,740
is that anything that you impose as a

2519
02:11:35,619 --> 02:11:42,470
hard requirement on your entity system

2520
02:11:38,739 --> 02:11:46,369
is a fundamental limitation on your

2521
02:11:42,470 --> 02:11:50,690
gameplay right if you're just writing

2522
02:11:46,369 --> 02:11:52,779
your entities in C as C code then

2523
02:11:50,689 --> 02:11:57,229
literally anything the computer can do

2524
02:11:52,779 --> 02:11:59,420
can be in your game right once you start

2525
02:11:57,229 --> 02:12:01,099
piling systems on top of it and say the

2526
02:11:59,420 --> 02:12:04,369
entities have to be implemented in terms

2527
02:12:01,100 --> 02:12:06,370
of these systems now you have restricted

2528
02:12:04,369 --> 02:12:09,890
the set of possible games you can make

2529
02:12:06,369 --> 02:12:13,399
to those the things those systems

2530
02:12:09,890 --> 02:12:16,850
support in the case where you're dealing

2531
02:12:13,399 --> 02:12:20,509
with something incredibly specific with

2532
02:12:16,850 --> 02:12:24,490
hard requirements like transaction

2533
02:12:20,510 --> 02:12:26,840
systems for banking ATMs or whatever

2534
02:12:24,489 --> 02:12:28,369
where there's not a lot of crazy

2535
02:12:26,840 --> 02:12:30,460
functionality you're going to want but

2536
02:12:28,369 --> 02:12:33,489
there are a lot of hard constraints like

2537
02:12:30,460 --> 02:12:36,109
replicability fault tolerance

2538
02:12:33,489 --> 02:12:40,579
transaction logging bla bla bla that's

2539
02:12:36,109 --> 02:12:46,309
when it becomes important to say let's

2540
02:12:40,579 --> 02:12:47,210
trade flexibility for some set of you

2541
02:12:46,310 --> 02:12:49,579
know

2542
02:12:47,210 --> 02:12:51,050
things we get back by just implementing

2543
02:12:49,578 --> 02:12:52,939
things in this system we know we get all

2544
02:12:51,050 --> 02:12:55,190
this stuff so we're willing to make it

2545
02:12:52,939 --> 02:12:56,629
harder on ourselves to implement the

2546
02:12:55,189 --> 02:12:58,689
things we're actually implementing in

2547
02:12:56,630 --> 02:13:02,210
order to get all these things back

2548
02:12:58,689 --> 02:13:04,460
totally reasonable right game play is

2549
02:13:02,210 --> 02:13:06,109
not that way game play you want to be

2550
02:13:04,460 --> 02:13:07,460
able to write anything at any time you

2551
02:13:06,109 --> 02:13:09,589
don't want to have to stop and go oh

2552
02:13:07,460 --> 02:13:11,270
crap I wanted to add this gameplay

2553
02:13:09,590 --> 02:13:13,159
feature but I realized that the entity

2554
02:13:11,270 --> 02:13:16,039
component system that I wrote doesn't

2555
02:13:13,158 --> 02:13:18,408
support that now I've got to go rewrite

2556
02:13:16,038 --> 02:13:20,000
that system and then come back and write

2557
02:13:18,408 --> 02:13:24,439
the gameplay code and that's just it

2558
02:13:20,000 --> 02:13:26,059
just isn't sensible and so the most

2559
02:13:24,439 --> 02:13:28,189
important thing to remember is like

2560
02:13:26,059 --> 02:13:31,520
flexibility and gameplay code I think is

2561
02:13:28,189 --> 02:13:34,009
king I don't do game design really so

2562
02:13:31,520 --> 02:13:36,860
you know I'm not gonna sit here and tell

2563
02:13:34,010 --> 02:13:41,090
you exactly what you should do or what

2564
02:13:36,859 --> 02:13:44,149
you shouldn't do but the game designers

2565
02:13:41,090 --> 02:13:46,699
that I respect the most they just don't

2566
02:13:44,149 --> 02:13:50,359
do that kind of crap right they don't

2567
02:13:46,698 --> 02:13:53,178
make these like systemic things because

2568
02:13:50,359 --> 02:13:55,788
they know that every systemic step you

2569
02:13:53,179 --> 02:13:57,649
take is reducing the space of things you

2570
02:13:55,788 --> 02:13:59,538
can do in your game and that only makes

2571
02:13:57,649 --> 02:14:03,710
sense when you're intentionally trying

2572
02:13:59,538 --> 02:14:11,029
to carve out a space like that so I

2573
02:14:03,710 --> 02:14:12,920
don't know oh I see John John is here

2574
02:14:11,029 --> 02:14:14,658
actually John was that a reasonable

2575
02:14:12,920 --> 02:14:19,250
explanation of it you're really the

2576
02:14:14,658 --> 02:14:21,679
expert on game design systems so you

2577
02:14:19,250 --> 02:14:23,420
know I would I would say whatever you

2578
02:14:21,679 --> 02:14:25,429
say is probably the best advice on

2579
02:14:23,420 --> 02:14:27,078
things like this but I don't know

2580
02:14:25,429 --> 02:14:28,550
exactly what you would say I see you

2581
02:14:27,078 --> 02:14:31,250
saying don't bother with component

2582
02:14:28,550 --> 02:14:33,770
systems which is part of what I said but

2583
02:14:31,250 --> 02:14:35,359
I said something perhaps a little bit to

2584
02:14:33,770 --> 02:14:38,619
the side of that and I'm not sure if you

2585
02:14:35,359 --> 02:14:38,618
would necessarily agree with it but

2586
02:14:45,439 --> 02:14:50,599
also toy gang says what should I choose

2587
02:14:48,229 --> 02:14:54,259
ex-lover xeb I'm not enough of a Linux

2588
02:14:50,600 --> 02:15:01,820
expert to tell you what to do on Linux

2589
02:14:54,260 --> 02:15:04,360
sorry I just yeah I'm the wrong person

2590
02:15:01,819 --> 02:15:04,359
to ask

2591
02:15:07,239 --> 02:15:11,269
so Jon says yeah I haven't thought in a

2592
02:15:09,800 --> 02:15:13,400
while to explain the wall and yourself

2593
02:15:11,270 --> 02:15:14,750
in thing but that is 100% true it's like

2594
02:15:13,399 --> 02:15:16,670
playing go when you build a strategic

2595
02:15:14,750 --> 02:15:18,199
structure you are also filling in the

2596
02:15:16,670 --> 02:15:24,470
board and ruling out possibilities for

2597
02:15:18,199 --> 02:15:26,689
yourself so yeah I mean that that that I

2598
02:15:24,470 --> 02:15:28,100
I would think people should consider

2599
02:15:26,689 --> 02:15:31,210
that a much more definitive answer I

2600
02:15:28,100 --> 02:15:33,710
mean that's Jon makes the most like

2601
02:15:31,210 --> 02:15:36,590
intricate gameplay sort of thing is that

2602
02:15:33,710 --> 02:15:41,779
that I know of in in terms of games that

2603
02:15:36,590 --> 02:15:43,940
I think were great and so I just feel

2604
02:15:41,779 --> 02:15:45,679
like if if he's not singing the praises

2605
02:15:43,939 --> 02:15:47,689
of these like systemic kind of

2606
02:15:45,680 --> 02:15:50,180
approaches I think they're probably not

2607
02:15:47,689 --> 02:15:52,639
so good and it's not to say that they

2608
02:15:50,180 --> 02:15:56,510
might not have a place in something some

2609
02:15:52,640 --> 02:15:59,960
other like there's there's realms where

2610
02:15:56,510 --> 02:16:00,980
they might make sense you know the

2611
02:15:59,960 --> 02:16:04,340
example that comes to mind is like

2612
02:16:00,979 --> 02:16:06,799
puzzle script or something like there's

2613
02:16:04,340 --> 02:16:09,529
realms where you might say look the

2614
02:16:06,800 --> 02:16:12,710
whole point of this thing is I'm trying

2615
02:16:09,529 --> 02:16:15,949
to make a family of games that can only

2616
02:16:12,710 --> 02:16:17,840
do these things like the point is to

2617
02:16:15,949 --> 02:16:19,399
wall yourself in and if that's what

2618
02:16:17,840 --> 02:16:22,699
you're trying to do then maybe a

2619
02:16:19,399 --> 02:16:24,529
systemic approach makes sense but if

2620
02:16:22,699 --> 02:16:27,710
you're just trying to make the best game

2621
02:16:24,529 --> 02:16:30,800
you can for some specific game you're

2622
02:16:27,710 --> 02:16:33,530
writing walling yourself in just it just

2623
02:16:30,800 --> 02:16:35,870
seems self-defeating and if you've got

2624
02:16:33,530 --> 02:16:37,610
all these great benefits from it it

2625
02:16:35,870 --> 02:16:40,370
might make sense but you don't that's

2626
02:16:37,610 --> 02:16:42,440
the real problem is you're making a very

2627
02:16:40,370 --> 02:16:45,469
significant trade you're giving

2628
02:16:42,440 --> 02:16:46,880
something very valuable up and then

2629
02:16:45,468 --> 02:16:51,739
you're really just not getting anything

2630
02:16:46,879 --> 02:16:53,859
back right you get back very weak sort

2631
02:16:51,739 --> 02:16:53,860
of

2632
02:16:55,149 --> 02:17:02,149
benefits like really pretty if they're

2633
02:16:58,129 --> 02:17:03,468
even benefits at all you know and so in

2634
02:17:02,149 --> 02:17:05,059
the case of entity compliance is I think

2635
02:17:03,468 --> 02:17:06,559
is a pretty easy choice to say this just

2636
02:17:05,059 --> 02:17:09,199
doesn't really make any sense

2637
02:17:06,559 --> 02:17:10,549
I mean running my own game render loop

2638
02:17:09,200 --> 02:17:12,740
but I've been having trouble getting the

2639
02:17:10,549 --> 02:17:14,750
loop timing to be constant I seem to get

2640
02:17:12,739 --> 02:17:16,010
a stutter or skip in motion but it's not

2641
02:17:14,750 --> 02:17:17,840
because the render procedure takes too

2642
02:17:16,010 --> 02:17:20,059
long any ideas what could be the issue

2643
02:17:17,840 --> 02:17:22,940
sorry I know it's much not to go on but

2644
02:17:20,059 --> 02:17:25,129
any ideas would be helpful yeah so

2645
02:17:22,940 --> 02:17:28,600
there's this is first of all I guess

2646
02:17:25,129 --> 02:17:28,599
what I would say is you're not alone

2647
02:17:28,870 --> 02:17:32,930
windows in particular so you would

2648
02:17:31,218 --> 02:17:36,349
probably not be having this problem on

2649
02:17:32,930 --> 02:17:39,020
like a Playstation or something but

2650
02:17:36,350 --> 02:17:41,090
windows in particular and PCs in general

2651
02:17:39,020 --> 02:17:44,719
are very bad at doing things like

2652
02:17:41,090 --> 02:17:45,920
guaranteeing consistent frame timing now

2653
02:17:44,718 --> 02:17:49,699
there's two things that can be going on

2654
02:17:45,920 --> 02:17:52,629
here one is that in general if you are

2655
02:17:49,700 --> 02:17:54,980
not using some kind of a hard clock and

2656
02:17:52,629 --> 02:17:57,170
they really the only one that I know of

2657
02:17:54,979 --> 02:18:00,468
in the PC age you can use is the vsync

2658
02:17:57,170 --> 02:18:03,020
the V blank interrupts if you're not

2659
02:18:00,468 --> 02:18:06,500
using some kind of a hard clock tied to

2660
02:18:03,020 --> 02:18:08,479
the frame refresh then you're kind of

2661
02:18:06,500 --> 02:18:11,149
out of luck for consistent frame timing

2662
02:18:08,479 --> 02:18:14,090
so I'd start by VIPRE Kading into two

2663
02:18:11,149 --> 02:18:16,430
halves there's the type of game loop

2664
02:18:14,090 --> 02:18:18,460
which tries to always hit vsync and then

2665
02:18:16,430 --> 02:18:21,620
ask the graphics card to stall on vsync

2666
02:18:18,459 --> 02:18:26,000
that as far as I know is the only way to

2667
02:18:21,620 --> 02:18:29,329
do jitter free rendering I don't know of

2668
02:18:26,000 --> 02:18:31,549
any other way if that is what you're

2669
02:18:29,329 --> 02:18:33,549
doing and you're getting stuttering what

2670
02:18:31,549 --> 02:18:36,129
I would encourage you to do is try to

2671
02:18:33,549 --> 02:18:40,819
run your game under something like

2672
02:18:36,129 --> 02:18:42,939
incite and look to see what's going on

2673
02:18:40,819 --> 02:18:45,319
with the gravis card is it correctly

2674
02:18:42,940 --> 02:18:47,000
hitting those boundaries or not can you

2675
02:18:45,319 --> 02:18:49,159
get some information from the graphics

2676
02:18:47,000 --> 02:18:52,809
card about what's going on that may help

2677
02:18:49,159 --> 02:18:55,610
you if you're trying the other route

2678
02:18:52,809 --> 02:18:58,129
meaning you just flip as fast as you can

2679
02:18:55,610 --> 02:19:00,880
and you let it tear or you're using a

2680
02:18:58,129 --> 02:19:04,009
monitor that has flexible refresh rate

2681
02:19:00,879 --> 02:19:07,039
then the problem is usually in the

2682
02:19:04,010 --> 02:19:08,030
timing because the problem at that point

2683
02:19:07,040 --> 02:19:11,360
becomes

2684
02:19:08,030 --> 02:19:13,610
what you're measuring is usually not

2685
02:19:11,360 --> 02:19:17,120
what you need to measure for smoothness

2686
02:19:13,610 --> 02:19:20,030
so if you think about it the way a lot

2687
02:19:17,120 --> 02:19:23,360
of people do it is they present a frame

2688
02:19:20,030 --> 02:19:25,639
to the screen and at the time when they

2689
02:19:23,360 --> 02:19:29,329
made the present call they snap a clock

2690
02:19:25,638 --> 02:19:31,308
value then when they get to the next

2691
02:19:29,329 --> 02:19:33,649
time they do a present call they snap

2692
02:19:31,308 --> 02:19:36,229
the clock value and they use the Delta

2693
02:19:33,649 --> 02:19:38,899
between those two to know how far to

2694
02:19:36,229 --> 02:19:41,179
advance everything forward in time the

2695
02:19:38,899 --> 02:19:44,319
problem with that of course is it's

2696
02:19:41,179 --> 02:19:47,058
actually sort of a little bit too late

2697
02:19:44,319 --> 02:19:50,000
you're then using what the previous

2698
02:19:47,058 --> 02:19:53,750
frame time was to say how long this

2699
02:19:50,000 --> 02:19:56,149
frame should be now that can be okay if

2700
02:19:53,750 --> 02:20:00,950
you actually timed what you thought you

2701
02:19:56,149 --> 02:20:04,039
timed right and you have no frame bait

2702
02:20:00,950 --> 02:20:05,840
frame time-based effects such as motion

2703
02:20:04,040 --> 02:20:07,490
blur if you have motion blur you're done

2704
02:20:05,840 --> 02:20:09,590
but if you don't have motion blur you're

2705
02:20:07,489 --> 02:20:11,539
okay because there's no grammar that

2706
02:20:09,590 --> 02:20:14,000
says which frame is supposed to be which

2707
02:20:11,540 --> 02:20:17,930
time so you can you can still fudge it

2708
02:20:14,000 --> 02:20:19,250
there right but the problem is even if

2709
02:20:17,930 --> 02:20:20,559
you don't have motion blur you still end

2710
02:20:19,250 --> 02:20:23,319
up with you have time the right thing

2711
02:20:20,559 --> 02:20:25,969
timing the present present to present

2712
02:20:23,319 --> 02:20:27,799
doesn't actually tell you how long the

2713
02:20:25,969 --> 02:20:29,209
frame was on the screen for because you

2714
02:20:27,799 --> 02:20:30,859
don't know when that present actually

2715
02:20:29,209 --> 02:20:33,439
got committed and you don't know when

2716
02:20:30,860 --> 02:20:35,360
the next present will be committed so

2717
02:20:33,440 --> 02:20:37,700
what you really need is information back

2718
02:20:35,360 --> 02:20:39,950
from the graphics card on micro timing

2719
02:20:37,700 --> 02:20:42,409
which says here is how long these frames

2720
02:20:39,950 --> 02:20:43,670
are actually on the screen for as far as

2721
02:20:42,409 --> 02:20:46,930
I know no one actually does this

2722
02:20:43,670 --> 02:20:48,860
correctly and in fact Adam Ladd of app

2723
02:20:46,930 --> 02:20:50,479
actually I'm sorry I don't not to

2724
02:20:48,860 --> 02:20:54,520
pronounce his names I never heard it

2725
02:20:50,479 --> 02:20:54,520
pronounced the guy from Croteam

2726
02:20:58,889 --> 02:21:06,430
this guy right he actually was pushing

2727
02:21:04,809 --> 02:21:08,829
for this on the Vulcan advisory board I

2728
02:21:06,430 --> 02:21:11,470
remember this I don't think they ever

2729
02:21:08,829 --> 02:21:13,149
actually did it like he was explained

2730
02:21:11,469 --> 02:21:15,010
all that stuff he's like look these

2731
02:21:13,149 --> 02:21:16,989
things have to be timed properly in

2732
02:21:15,010 --> 02:21:18,729
order to get the frame updates with to

2733
02:21:16,989 --> 02:21:20,500
not have micro stutter in them like

2734
02:21:18,729 --> 02:21:22,389
little bits of wobble in the frame time

2735
02:21:20,500 --> 02:21:24,069
we have to know like exactly how long

2736
02:21:22,389 --> 02:21:25,569
the frame was on the screen for because

2737
02:21:24,069 --> 02:21:28,449
of the screen frame was on the screen

2738
02:21:25,569 --> 02:21:30,819
for all you know a few milliseconds less

2739
02:21:28,450 --> 02:21:33,159
than the times between the present calls

2740
02:21:30,819 --> 02:21:34,899
then we're actually updating the game

2741
02:21:33,159 --> 02:21:37,840
further than it should have been so

2742
02:21:34,899 --> 02:21:40,209
although the overall average frame time

2743
02:21:37,840 --> 02:21:42,520
is correct what were displaying to the

2744
02:21:40,209 --> 02:21:45,129
user has left micro stutter in it right

2745
02:21:42,520 --> 02:21:47,950
because we present we we updated it a

2746
02:21:45,129 --> 02:21:49,569
little bit too little on this frame and

2747
02:21:47,950 --> 02:21:51,460
a little bit too much on that frame and

2748
02:21:49,569 --> 02:21:53,379
the user can see this wobble right

2749
02:21:51,459 --> 02:21:55,629
really really perceptive of him and he's

2750
02:21:53,379 --> 02:22:03,849
totally right and they don't think they

2751
02:21:55,629 --> 02:22:09,609
ever did it unfortunately so I don't

2752
02:22:03,850 --> 02:22:12,220
know if that helps ideas guys says lot

2753
02:22:09,610 --> 02:22:18,069
of us might be the way to pronounce it

2754
02:22:12,219 --> 02:22:21,129
so let's say Adam Autobots also I mean

2755
02:22:18,069 --> 02:22:24,520
assuming that there's pronunciation

2756
02:22:21,129 --> 02:22:27,750
differences throughout his first name

2757
02:22:24,520 --> 02:22:27,750
might be pronounced differently as well

2758
02:22:35,030 --> 02:22:42,550
all right think we're done with

2759
02:22:36,530 --> 02:22:47,590
questions so I think we'll we'll all die

2760
02:22:42,549 --> 02:22:52,879
all right so we're getting a lot closer

2761
02:22:47,590 --> 02:22:55,969
and so I think we're almost done with

2762
02:22:52,879 --> 02:22:57,679
our asset our final asset pipeline which

2763
02:22:55,969 --> 02:23:01,219
is great because that'll be nice to have

2764
02:22:57,680 --> 02:23:02,510
that thing baked and then we can just

2765
02:23:01,219 --> 02:23:04,519
build the game from scratch all the time

2766
02:23:02,510 --> 02:23:07,280
and and it's pretty easy to have

2767
02:23:04,520 --> 02:23:08,540
everything yeah I don't know I'm I'm

2768
02:23:07,280 --> 02:23:09,980
pretty excited to have that kind of be

2769
02:23:08,540 --> 02:23:11,720
done and to be able to ship a thing

2770
02:23:09,979 --> 02:23:14,000
that's like okay here's like how we just

2771
02:23:11,719 --> 02:23:16,010
do packaging and you can you know dump

2772
02:23:14,000 --> 02:23:17,719
things and repack things and do it all

2773
02:23:16,010 --> 02:23:18,920
and then that's just done and it's out

2774
02:23:17,719 --> 02:23:23,449
there and we don't have to care anymore

2775
02:23:18,920 --> 02:23:25,639
so that'll be really nice and so

2776
02:23:23,450 --> 02:23:27,560
hopefully tomorrow we'll get a lot of

2777
02:23:25,639 --> 02:23:28,760
the way towards that goal there's other

2778
02:23:27,559 --> 02:23:29,719
things even if we get everything working

2779
02:23:28,760 --> 02:23:31,250
tomorrow there's other things we got to

2780
02:23:29,719 --> 02:23:32,539
do we got to finish sound stuff up just

2781
02:23:31,250 --> 02:23:35,690
to make sure those packed properly now

2782
02:23:32,540 --> 02:23:37,040
and load properly and we should do a

2783
02:23:35,690 --> 02:23:38,690
little bit with fonts so we got a couple

2784
02:23:37,040 --> 02:23:39,830
cleanup things you're still got to do

2785
02:23:38,690 --> 02:23:41,390
but we're getting pretty close and I

2786
02:23:39,829 --> 02:23:43,250
like it

2787
02:23:41,389 --> 02:23:45,349
that's about it for today I'll be back

2788
02:23:43,250 --> 02:23:47,540
here tomorrow to try finishing up some

2789
02:23:45,350 --> 02:23:48,710
of that stuff if you want to following

2790
02:23:47,540 --> 02:23:50,900
at home you can always go to handmade

2791
02:23:48,709 --> 02:23:52,129
hero org and pure to the game it comes

2792
02:23:50,899 --> 02:23:54,229
to the source code if you want to play

2793
02:23:52,129 --> 02:23:55,969
around with it maybe you can beat beat

2794
02:23:54,229 --> 02:23:57,049
us to the bug and try to bugging it

2795
02:23:55,969 --> 02:24:01,819
tonight on your own and see what you can

2796
02:23:57,049 --> 02:24:03,559
do also we recently really start comic

2797
02:24:01,819 --> 02:24:04,969
now the infinite if you're interested in

2798
02:24:03,559 --> 02:24:07,819
checking it out you can always read it

2799
02:24:04,969 --> 02:24:08,899
online if you go it's pretty easy when

2800
02:24:07,819 --> 02:24:12,260
you get to it if you're on handmade here

2801
02:24:08,899 --> 02:24:15,049
actually this this little guy here just

2802
02:24:12,260 --> 02:24:16,250
automatically brings us to all of our

2803
02:24:15,049 --> 02:24:18,259
site so you just click on meow the

2804
02:24:16,250 --> 02:24:19,670
infinite in the comics here first issues

2805
02:24:18,260 --> 02:24:22,729
up for reading check it out if you get a

2806
02:24:19,670 --> 02:24:25,309
chance let us know if you think I'm till

2807
02:24:22,729 --> 02:24:28,489
tomorrow everyone have fun programming

2808
02:24:25,309 --> 02:24:31,299
and I will see you on the Internet

2809
02:24:28,489 --> 02:24:31,299
take it easy everybody

