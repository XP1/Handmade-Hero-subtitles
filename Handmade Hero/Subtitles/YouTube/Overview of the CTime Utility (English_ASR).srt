1
00:00:02,419 --> 00:00:09,269
ok hello everyone and welcome to a

2
00:00:05,790 --> 00:00:11,609
special edition of handmade hero this is

3
00:00:09,269 --> 00:00:13,320
not actually part of the main handmade

4
00:00:11,609 --> 00:00:16,289
hero in that it has nothing to do with

5
00:00:13,320 --> 00:00:19,140
game programming but what I wanted to

6
00:00:16,289 --> 00:00:20,850
show today was I'm going to add there's

7
00:00:19,140 --> 00:00:22,199
a little utility that I have that I've

8
00:00:20,850 --> 00:00:25,019
been meaning to release for a long time

9
00:00:22,199 --> 00:00:27,029
I kept forgetting to release it and I

10
00:00:25,018 --> 00:00:29,640
never you know I don't ever like

11
00:00:27,028 --> 00:00:31,789
actually having to use anything like

12
00:00:29,640 --> 00:00:33,899
github or any of these sorts of things

13
00:00:31,789 --> 00:00:35,609
but of course since there were so many

14
00:00:33,899 --> 00:00:37,259
people who asked to have a hand made

15
00:00:35,609 --> 00:00:38,700
here at github and we have the one right

16
00:00:37,259 --> 00:00:40,409
now that if you know if you pre-order

17
00:00:38,700 --> 00:00:42,809
the game you get on that special github

18
00:00:40,409 --> 00:00:44,549
or whatever now there is a way to

19
00:00:42,808 --> 00:00:45,780
actually have things go up there

20
00:00:44,549 --> 00:00:47,189
automatically since I have a little

21
00:00:45,780 --> 00:00:50,219
script that just pushes our changes to

22
00:00:47,189 --> 00:00:52,890
it so I was like finally release the

23
00:00:50,219 --> 00:00:54,960
thing I should do it so I wanted to give

24
00:00:52,890 --> 00:00:56,820
a little brief demo of what it is it's

25
00:00:54,960 --> 00:01:00,329
very very simple utility but it's kind

26
00:00:56,820 --> 00:01:02,909
of useful and especially useful for

27
00:01:00,329 --> 00:01:05,219
people who maybe are in situations where

28
00:01:02,909 --> 00:01:06,929
they work on larger teams and have

29
00:01:05,219 --> 00:01:10,289
problems with their build times and

30
00:01:06,930 --> 00:01:12,060
stuff like this so this is a utility

31
00:01:10,290 --> 00:01:14,700
called see time and you can see here

32
00:01:12,060 --> 00:01:16,890
that I've typed it into the command line

33
00:01:14,700 --> 00:01:20,189
here and it printed out its little usage

34
00:01:16,890 --> 00:01:21,989
information and what this utility is

35
00:01:20,188 --> 00:01:24,258
designed to do is this utility is

36
00:01:21,989 --> 00:01:26,849
designed to give you some perspective on

37
00:01:24,259 --> 00:01:29,430
what your build times actually are and

38
00:01:26,849 --> 00:01:31,919
how much time you're spending sitting

39
00:01:29,430 --> 00:01:35,340
around waiting to have your projects

40
00:01:31,920 --> 00:01:36,990
built if that makes sense so you know

41
00:01:35,340 --> 00:01:39,060
typically when ends up happening if

42
00:01:36,989 --> 00:01:40,559
you're somebody like me you're extremely

43
00:01:39,060 --> 00:01:41,728
extremely careful about your build times

44
00:01:40,560 --> 00:01:43,890
and you make sure that your build times

45
00:01:41,728 --> 00:01:46,438
are always very very small and so for

46
00:01:43,890 --> 00:01:48,780
example you know if I have a build time

47
00:01:46,438 --> 00:01:50,398
that's getting to be 10 seconds or

48
00:01:48,780 --> 00:01:51,719
something like that I think that that's

49
00:01:50,399 --> 00:01:53,070
probably a really big problem and I

50
00:01:51,719 --> 00:01:54,989
should go look at why the build is

51
00:01:53,069 --> 00:01:57,359
taking so long and make sure that it's

52
00:01:54,989 --> 00:01:59,548
like stays well below 10 seconds you

53
00:01:57,359 --> 00:02:01,769
know I consider that emergency however

54
00:01:59,549 --> 00:02:03,450
there are a lot of places out there

55
00:02:01,769 --> 00:02:05,849
which don't seem to have very much

56
00:02:03,450 --> 00:02:07,770
respect for how problematic lung build

57
00:02:05,849 --> 00:02:10,169
times actually are and they have these

58
00:02:07,769 --> 00:02:13,019
turnaround times for doing full rebuilds

59
00:02:10,169 --> 00:02:13,769
of things that are like in the not just

60
00:02:13,020 --> 00:02:16,590
in the minutes some

61
00:02:13,770 --> 00:02:19,500
times in the hours and I think that is

62
00:02:16,590 --> 00:02:20,640
like extremely extremely problematic and

63
00:02:19,500 --> 00:02:23,430
obviously there's lots of people who

64
00:02:20,639 --> 00:02:25,679
disagree and I like that is someplace

65
00:02:23,430 --> 00:02:27,840
that I just do not see even remotely

66
00:02:25,680 --> 00:02:30,150
eye-to-eye with those people if if you

67
00:02:27,840 --> 00:02:32,250
ever have a build time that goes into a

68
00:02:30,150 --> 00:02:35,189
minute long you've done something

69
00:02:32,250 --> 00:02:38,039
horrifically horrifically wrong because

70
00:02:35,189 --> 00:02:40,469
you can compile massive code bases you

71
00:02:38,039 --> 00:02:42,179
can compile code bases that are hundreds

72
00:02:40,469 --> 00:02:45,030
of thousands of lines even millions of

73
00:02:42,180 --> 00:02:46,800
lines in much less time than that so you

74
00:02:45,030 --> 00:02:49,500
have to kind of ask yourself how did you

75
00:02:46,800 --> 00:02:52,710
let it get to the point where your build

76
00:02:49,500 --> 00:02:54,000
times are taking that long and why do

77
00:02:52,710 --> 00:02:56,939
you not see sort of the really

78
00:02:54,000 --> 00:02:58,379
deleterious effects if that has it's

79
00:02:56,939 --> 00:03:00,479
something that really stops the flow of

80
00:02:58,379 --> 00:03:01,740
programming it makes it so that testing

81
00:03:00,479 --> 00:03:04,649
various things becomes very very

82
00:03:01,740 --> 00:03:05,640
difficult for programmers to do and even

83
00:03:04,650 --> 00:03:07,710
if you've got it so that you can

84
00:03:05,639 --> 00:03:09,329
recompile little portions that's not the

85
00:03:07,710 --> 00:03:11,550
same because there's plenty of changes

86
00:03:09,330 --> 00:03:13,980
you might want to make and that affect

87
00:03:11,550 --> 00:03:16,350
large numbers of files in your system

88
00:03:13,979 --> 00:03:18,359
and if you've basically put in place

89
00:03:16,349 --> 00:03:21,030
this negative reinforcement so that

90
00:03:18,360 --> 00:03:22,950
programmers are incentivized to make

91
00:03:21,030 --> 00:03:25,590
tiny changes to small parts go base but

92
00:03:22,949 --> 00:03:27,030
massively disincentivize to change large

93
00:03:25,590 --> 00:03:28,590
parts of the code base well you've

94
00:03:27,030 --> 00:03:30,060
basically ensure that you will never get

95
00:03:28,590 --> 00:03:31,670
improvements that cover large parts of

96
00:03:30,060 --> 00:03:34,319
the code base that's what you did right

97
00:03:31,669 --> 00:03:36,359
so you have to be very very very careful

98
00:03:34,319 --> 00:03:38,879
about build times and I really wish more

99
00:03:36,360 --> 00:03:41,280
people were and so this utility is kind

100
00:03:38,879 --> 00:03:43,199
of a thing you can use to help gather

101
00:03:41,280 --> 00:03:44,669
information about your builds make sure

102
00:03:43,199 --> 00:03:47,369
that you stay honest about your build

103
00:03:44,669 --> 00:03:48,719
timings and also be able to perhaps use

104
00:03:47,370 --> 00:03:49,950
to demonstrate to people that build

105
00:03:48,719 --> 00:03:51,330
times are a problem if they don't

106
00:03:49,949 --> 00:03:52,530
believe that they are or at least so

107
00:03:51,330 --> 00:03:53,940
that you're not just randomly saying

108
00:03:52,530 --> 00:03:56,430
stuff like well I think our bill takes

109
00:03:53,939 --> 00:03:58,469
too long or stuff like that so let's see

110
00:03:56,430 --> 00:04:00,599
how to use this tool in practice and

111
00:03:58,469 --> 00:04:03,300
what I've done like I said is I put it

112
00:04:00,599 --> 00:04:05,699
in the handmade hero build now and so if

113
00:04:03,300 --> 00:04:08,430
you take a look when you if you download

114
00:04:05,699 --> 00:04:10,379
it from send owl if you're if you've I

115
00:04:08,430 --> 00:04:11,550
thought so you normally get it for or if

116
00:04:10,379 --> 00:04:13,699
you go to the github if that's where you

117
00:04:11,550 --> 00:04:16,139
normally get it from if you already

118
00:04:13,699 --> 00:04:18,180
bought a handmade hero and have X to it

119
00:04:16,139 --> 00:04:21,089
it's in there already so you just you

120
00:04:18,180 --> 00:04:23,579
have it and after the stream I will push

121
00:04:21,089 --> 00:04:25,259
it and it'll be up there well I guess

122
00:04:23,579 --> 00:04:26,609
actually technically me

123
00:04:25,259 --> 00:04:28,709
it's tomorrow that it gets pushed I

124
00:04:26,610 --> 00:04:30,300
don't know whenever the next push is by

125
00:04:28,709 --> 00:04:33,689
the end of Monday stream at least it'll

126
00:04:30,300 --> 00:04:37,259
just be in there and off off it goes but

127
00:04:33,689 --> 00:04:39,170
I also put it the the notice on it puts

128
00:04:37,259 --> 00:04:42,659
it in the public domain so you can also

129
00:04:39,170 --> 00:04:44,879
feel free to grab it and put it out at

130
00:04:42,660 --> 00:04:46,680
that point so it's it's not protected by

131
00:04:44,879 --> 00:04:48,269
the handmade hero license it's got a

132
00:04:46,680 --> 00:04:51,209
public domain license and it can just be

133
00:04:48,269 --> 00:04:52,439
free for everyone to use so if you take

134
00:04:51,209 --> 00:04:54,659
a look in the handmade directory it's

135
00:04:52,439 --> 00:04:56,759
gets in there there's the seat I'm

136
00:04:54,660 --> 00:04:58,890
directory it's got the the single see

137
00:04:56,759 --> 00:05:00,389
file source code is all it takes to

138
00:04:58,889 --> 00:05:02,339
build it so you can also modify if you

139
00:05:00,389 --> 00:05:05,219
want to but let's take a look at how to

140
00:05:02,339 --> 00:05:07,919
use it so the way that it works is it's

141
00:05:05,220 --> 00:05:10,200
exactly analogous to block profiling for

142
00:05:07,920 --> 00:05:12,930
an application but it's for builds so

143
00:05:10,199 --> 00:05:15,779
what you do is you basically put a begin

144
00:05:12,930 --> 00:05:18,569
and end pair around anything that you

145
00:05:15,779 --> 00:05:20,489
want to time and instead of giving it a

146
00:05:18,569 --> 00:05:22,019
name like you would in a normal block

147
00:05:20,490 --> 00:05:24,269
profile or you just give it a file and

148
00:05:22,019 --> 00:05:25,799
that file is where it stores the timings

149
00:05:24,269 --> 00:05:27,750
and it will store those timings forever

150
00:05:25,800 --> 00:05:29,610
so as many times as you run that build

151
00:05:27,750 --> 00:05:31,290
it will update that timing file with an

152
00:05:29,610 --> 00:05:33,509
entry for having entered so it's

153
00:05:31,290 --> 00:05:35,910
literally if you've ever used a block

154
00:05:33,509 --> 00:05:37,680
profiler even like the kind we made on a

155
00:05:35,910 --> 00:05:40,110
handmade hero you already know how this

156
00:05:37,680 --> 00:05:42,689
works it works exactly like that and

157
00:05:40,110 --> 00:05:45,120
I'll show you how we do that here by

158
00:05:42,689 --> 00:05:49,740
just adding it to the handmade hero

159
00:05:45,120 --> 00:05:51,269
build as we go so let's open up for it

160
00:05:49,740 --> 00:05:54,180
and I'll show you what we have right now

161
00:05:51,269 --> 00:05:56,939
for our handmade here a build right here

162
00:05:54,180 --> 00:05:58,319
is our project and when I normally build

163
00:05:56,939 --> 00:05:59,879
it right that's what we see over there

164
00:05:58,319 --> 00:06:02,279
there's a hameed setp korean lie right

165
00:05:59,879 --> 00:06:04,350
that's the build happening but you'll

166
00:06:02,279 --> 00:06:06,000
notice even right off the bat there's

167
00:06:04,350 --> 00:06:07,590
kind of this this annoying thing of like

168
00:06:06,000 --> 00:06:09,870
I don't know how long that build took

169
00:06:07,589 --> 00:06:11,399
right just yeah i mean i know that

170
00:06:09,870 --> 00:06:13,170
handmade heroes build process is not a

171
00:06:11,399 --> 00:06:14,939
problem we always make sure like i said

172
00:06:13,170 --> 00:06:17,819
i'm very diligent that i keep it short

173
00:06:14,939 --> 00:06:19,769
but even I because we never talked about

174
00:06:17,819 --> 00:06:21,420
see time normally my builds at work I

175
00:06:19,769 --> 00:06:22,859
always know exactly how long every build

176
00:06:21,420 --> 00:06:24,300
takes but if you look here I have no

177
00:06:22,860 --> 00:06:26,280
idea how long this bill takes and that's

178
00:06:24,300 --> 00:06:27,600
a common situation for a lot of people

179
00:06:26,279 --> 00:06:29,339
to be in is they don't really know how

180
00:06:27,600 --> 00:06:31,950
long their build even took they have no

181
00:06:29,339 --> 00:06:33,599
idea right and sometimes your build you

182
00:06:31,949 --> 00:06:35,459
know your compiler may have a switch you

183
00:06:33,600 --> 00:06:36,960
can turn on may be printed out but if

184
00:06:35,459 --> 00:06:38,279
you have other steps you don't know and

185
00:06:36,959 --> 00:06:38,909
if you compile multiple things you might

186
00:06:38,279 --> 00:06:40,229
not know how

187
00:06:38,910 --> 00:06:41,100
long it takes right so there's all these

188
00:06:40,230 --> 00:06:42,810
kind of things where you don't

189
00:06:41,100 --> 00:06:45,060
necessarily know depending on the tools

190
00:06:42,810 --> 00:06:46,589
you took a pic or whatever you may not

191
00:06:45,060 --> 00:06:48,360
even know what your total bill time is

192
00:06:46,589 --> 00:06:50,609
which is a problem to begin with right

193
00:06:48,360 --> 00:06:52,100
so see time and at the very least solves

194
00:06:50,610 --> 00:06:54,660
that problem because what you can do

195
00:06:52,100 --> 00:06:56,580
it's all go ahead and load up the build

196
00:06:54,660 --> 00:06:58,320
up back here is our build a batch file

197
00:06:56,579 --> 00:07:00,449
this is what does our build so what I

198
00:06:58,319 --> 00:07:03,719
can do now is I can say well okay i

199
00:07:00,449 --> 00:07:05,579
would like to record the timing for this

200
00:07:03,720 --> 00:07:07,080
build so what I'm going to do at the top

201
00:07:05,579 --> 00:07:10,310
of it is I'm just going to type C time

202
00:07:07,079 --> 00:07:13,560
begin and that seat I'm begin call

203
00:07:10,310 --> 00:07:15,420
allows me to basically say I'm starting

204
00:07:13,560 --> 00:07:17,399
at a timing block right just like a

205
00:07:15,420 --> 00:07:20,550
normal timing thing with now I need a

206
00:07:17,399 --> 00:07:22,859
place to put it and normally uh it you

207
00:07:20,550 --> 00:07:24,240
know I have a directory in my build

208
00:07:22,860 --> 00:07:25,980
system where I just put all of my timing

209
00:07:24,240 --> 00:07:27,509
files so normally i would have a record

210
00:07:25,980 --> 00:07:31,189
to that but i'm just going to go ahead

211
00:07:27,509 --> 00:07:33,899
and put it in here you can see the the

212
00:07:31,189 --> 00:07:35,250
normally I believe we run the build from

213
00:07:33,899 --> 00:07:36,419
directly out of here I'm just going to

214
00:07:35,250 --> 00:07:37,529
put the timing foul on there and we'll

215
00:07:36,420 --> 00:07:38,699
just check them in and we'll keep them

216
00:07:37,529 --> 00:07:40,469
around because there's no reason not to

217
00:07:38,699 --> 00:07:42,959
they don't get that huge you know maybe

218
00:07:40,470 --> 00:07:44,160
they're 100 200 k after two years of

219
00:07:42,959 --> 00:07:45,839
programming or some like that but it's

220
00:07:44,160 --> 00:07:48,270
not like you really care how big they

221
00:07:45,839 --> 00:07:49,169
are they're not onerous right so what

222
00:07:48,269 --> 00:07:50,879
I'm going to do is I'm going to say C

223
00:07:49,170 --> 00:07:55,919
time begin and I'm just going to say

224
00:07:50,879 --> 00:07:57,870
like handmade hero dot ctm okay and and

225
00:07:55,918 --> 00:08:00,629
that'll just keep our timings in there

226
00:07:57,870 --> 00:08:02,910
and off we go and then at the very end

227
00:08:00,629 --> 00:08:04,079
when we get down to to the very end of

228
00:08:02,910 --> 00:08:05,550
the thing I'm just going to say to you

229
00:08:04,079 --> 00:08:08,339
time and I'm going to pass it the same

230
00:08:05,550 --> 00:08:10,139
file right so basically that's just the

231
00:08:08,339 --> 00:08:14,459
beginning the end block for the

232
00:08:10,139 --> 00:08:16,680
profiling and now when I build right you

233
00:08:14,459 --> 00:08:18,418
can see that I now know exactly how long

234
00:08:16,680 --> 00:08:20,610
my build takes because at the end of

235
00:08:18,418 --> 00:08:23,219
that profiling block it'll tell me how

236
00:08:20,610 --> 00:08:25,830
long to build went in right here for

237
00:08:23,220 --> 00:08:29,250
example it says 1.3 27 seconds so I now

238
00:08:25,829 --> 00:08:30,629
at least know unlike before how long are

239
00:08:29,250 --> 00:08:34,529
build is well are billed for handmade

240
00:08:30,629 --> 00:08:35,909
hero takes 1.3 seconds to to occur and

241
00:08:34,529 --> 00:08:37,199
you know that's mine perfectly

242
00:08:35,909 --> 00:08:39,329
comfortable like I said like anything

243
00:08:37,200 --> 00:08:41,070
under you know two three four or five

244
00:08:39,330 --> 00:08:42,330
seconds I'm okay with that when it

245
00:08:41,070 --> 00:08:44,460
starts to crawl up towards 10 I'm

246
00:08:42,330 --> 00:08:47,730
nervous right heaven forfend that things

247
00:08:44,460 --> 00:08:50,250
come comes back and says 24 minutes or

248
00:08:47,730 --> 00:08:51,990
something like this that would be real

249
00:08:50,250 --> 00:08:55,350
bad but yeah that's

250
00:08:51,990 --> 00:08:58,440
that's a separate issue so anyway so

251
00:08:55,350 --> 00:09:00,180
that's how sue time works and every time

252
00:08:58,440 --> 00:09:01,830
you build it'll do exactly that so you

253
00:09:00,179 --> 00:09:03,569
can see I can build this multiple times

254
00:09:01,830 --> 00:09:06,360
and it just keeps saying you know cure

255
00:09:03,570 --> 00:09:07,649
town is so first of all at least if you

256
00:09:06,360 --> 00:09:09,149
do nothing else with it at least you

257
00:09:07,649 --> 00:09:10,740
could know how long your build is and

258
00:09:09,149 --> 00:09:13,649
always be aware of that which I find

259
00:09:10,740 --> 00:09:15,389
helpful just to begin with but it has a

260
00:09:13,649 --> 00:09:17,399
few more nice features and I'll go over

261
00:09:15,389 --> 00:09:18,958
what those are now so here we are in

262
00:09:17,399 --> 00:09:20,519
this directory and if I do a directory

263
00:09:18,958 --> 00:09:22,439
you can kind of see in fact I guess I'll

264
00:09:20,519 --> 00:09:24,240
isolated for you there it is that's the

265
00:09:22,440 --> 00:09:27,209
file that we created the handmade here

266
00:09:24,240 --> 00:09:28,649
at ctm and obviously if you want profile

267
00:09:27,208 --> 00:09:31,169
multiple blocks independently that's

268
00:09:28,649 --> 00:09:33,360
pretty easy to do you can just do see

269
00:09:31,169 --> 00:09:35,099
time and you can commune Oh put it put

270
00:09:33,360 --> 00:09:36,810
it put a separate beginning and pair

271
00:09:35,100 --> 00:09:38,820
around any particular parts that you

272
00:09:36,809 --> 00:09:42,269
want at a time and then they will be

273
00:09:38,820 --> 00:09:44,070
recorded into a file like that once you

274
00:09:42,269 --> 00:09:45,539
actually have one of those files you can

275
00:09:44,070 --> 00:09:47,850
start to ask questions about it so for

276
00:09:45,539 --> 00:09:50,309
example if I want to I can say well why

277
00:09:47,850 --> 00:09:52,830
don't you tell me some things about that

278
00:09:50,309 --> 00:09:54,838
block right and what that does is that

279
00:09:52,830 --> 00:09:56,700
basically gives you a dump which says

280
00:09:54,839 --> 00:09:58,440
okay how many times did you actually get

281
00:09:56,700 --> 00:09:59,610
complete timings and a complete timing

282
00:09:58,440 --> 00:10:01,620
is one where the beginning end pair

283
00:09:59,610 --> 00:10:02,820
actually executed so if you have a begin

284
00:10:01,620 --> 00:10:04,379
and you never get to the end because

285
00:10:02,820 --> 00:10:05,610
maybe the batch file crashed or

286
00:10:04,379 --> 00:10:07,049
something like that that would be

287
00:10:05,610 --> 00:10:09,028
incomplete timing and those are not

288
00:10:07,049 --> 00:10:10,139
counted because they don't know how long

289
00:10:09,028 --> 00:10:11,578
they took so if you have a begin

290
00:10:10,139 --> 00:10:13,230
followed by another begin it will count

291
00:10:11,578 --> 00:10:15,088
that first again as an incomplete timing

292
00:10:13,230 --> 00:10:17,039
because you don't want it to you know it

293
00:10:15,089 --> 00:10:18,510
has no idea what it is and then it'll

294
00:10:17,039 --> 00:10:20,069
give you just the basic statistics how

295
00:10:18,509 --> 00:10:21,059
long was the slowest build how long was

296
00:10:20,070 --> 00:10:25,050
the fastest build how long was your

297
00:10:21,059 --> 00:10:27,269
average build and how many total seconds

298
00:10:25,049 --> 00:10:29,039
did you spend in builds for whatever

299
00:10:27,269 --> 00:10:30,659
these these were marked and we'll talk

300
00:10:29,039 --> 00:10:32,338
about this successful part in a second

301
00:10:30,659 --> 00:10:34,379
because we haven't quite gotten there

302
00:10:32,339 --> 00:10:36,570
yet and then these are not particularly

303
00:10:34,379 --> 00:10:39,179
useful yet because we haven't really

304
00:10:36,570 --> 00:10:40,950
recorded more than one day's worth but

305
00:10:39,179 --> 00:10:42,629
after you record multiple days worth of

306
00:10:40,950 --> 00:10:44,850
timings it will actually start to fill

307
00:10:42,629 --> 00:10:46,889
in these graphs so you can kind of see

308
00:10:44,850 --> 00:10:49,320
over time how you're built has been

309
00:10:46,889 --> 00:10:51,509
progressing and in the all this up here

310
00:10:49,320 --> 00:10:52,890
where it says all these graphs show you

311
00:10:51,509 --> 00:10:54,958
how your build has been over the

312
00:10:52,889 --> 00:10:56,669
lifetime of the project and as you know

313
00:10:54,958 --> 00:10:58,500
you can see here like this will go up so

314
00:10:56,669 --> 00:10:59,879
days between first and last timing is

315
00:10:58,500 --> 00:11:01,440
zero because we haven't had multiple

316
00:10:59,879 --> 00:11:03,419
days as that gets longer it'll say like

317
00:11:01,440 --> 00:11:04,480
oh 200 days have elapsed between the

318
00:11:03,419 --> 00:11:07,000
first build in the last

319
00:11:04,480 --> 00:11:09,550
old recorded by hand recorded by sea

320
00:11:07,000 --> 00:11:11,198
time or something like that right it

321
00:11:09,549 --> 00:11:13,000
also gives you this recent one which is

322
00:11:11,198 --> 00:11:15,639
just one day per bucket here and that's

323
00:11:13,000 --> 00:11:17,110
the last 30 days right so you can kind

324
00:11:15,639 --> 00:11:19,899
of see how your builds have been going

325
00:11:17,110 --> 00:11:21,639
recently and how many this is how many

326
00:11:19,899 --> 00:11:24,250
there were each day and this is how long

327
00:11:21,639 --> 00:11:26,139
each one was taking and this is the

328
00:11:24,250 --> 00:11:28,419
average times here no sorry that's is

329
00:11:26,139 --> 00:11:30,629
this is the worst times here is what's

330
00:11:28,419 --> 00:11:32,799
recorded in these in these buckets right

331
00:11:30,629 --> 00:11:33,970
finally the end is probably the most

332
00:11:32,799 --> 00:11:35,708
interesting number that you care about

333
00:11:33,970 --> 00:11:38,350
which is how long have you been waiting

334
00:11:35,708 --> 00:11:40,539
for your builds and so for example I

335
00:11:38,350 --> 00:11:43,930
been running see time on our current

336
00:11:40,539 --> 00:11:48,088
product at Molly rocket and the base the

337
00:11:43,929 --> 00:11:50,799
the the the base build for that project

338
00:11:48,089 --> 00:11:53,740
has been a total of two hours spent

339
00:11:50,799 --> 00:11:56,559
building it over the course of the past

340
00:11:53,740 --> 00:11:59,079
year and a half so that's just an

341
00:11:56,559 --> 00:12:01,689
example of like how much programmer time

342
00:11:59,078 --> 00:12:04,149
did you actually lose over the course of

343
00:12:01,690 --> 00:12:05,620
a year and a half or whatever waiting

344
00:12:04,149 --> 00:12:07,899
for builds because they couldn't test

345
00:12:05,620 --> 00:12:09,610
something and had to do something like

346
00:12:07,899 --> 00:12:11,708
try to pipeline other changes with her

347
00:12:09,610 --> 00:12:14,318
right how much was it actually impacting

348
00:12:11,708 --> 00:12:16,719
their ability to test changes now you

349
00:12:14,318 --> 00:12:18,338
know right so that's a pretty

350
00:12:16,720 --> 00:12:20,050
interesting number the other thing that

351
00:12:18,339 --> 00:12:22,060
you can do with it is you can say well I

352
00:12:20,049 --> 00:12:24,969
would like to get this out into some

353
00:12:22,059 --> 00:12:27,518
kind of a graph that I can use or maybe

354
00:12:24,970 --> 00:12:29,740
run it through an analysis tool or

355
00:12:27,519 --> 00:12:31,929
create a presentation based on it and so

356
00:12:29,740 --> 00:12:34,000
what you can do is you can pass minus

357
00:12:31,929 --> 00:12:36,039
CSV to it and what it'll do is it'll

358
00:12:34,000 --> 00:12:38,860
give you a little thing here which you

359
00:12:36,039 --> 00:12:41,528
can actually use if that's just a comma

360
00:12:38,860 --> 00:12:43,209
separated list of stuff so you can

361
00:12:41,528 --> 00:12:45,909
import this into something like Excel

362
00:12:43,208 --> 00:12:47,379
and you can find out you know more

363
00:12:45,909 --> 00:12:48,850
information about it or maybe you can

364
00:12:47,379 --> 00:12:51,129
import it something like tableau like

365
00:12:48,850 --> 00:12:52,659
some kind of data analysis tool which

366
00:12:51,129 --> 00:12:54,669
allows you to create graphs or

367
00:12:52,659 --> 00:12:56,169
investigate the data if you're someone

368
00:12:54,669 --> 00:12:57,610
working in a large company and you want

369
00:12:56,169 --> 00:12:59,679
wherein facialized maybe you collect a

370
00:12:57,610 --> 00:13:01,269
bunch of these and you want to pull them

371
00:12:59,679 --> 00:13:03,458
all into something and look at different

372
00:13:01,269 --> 00:13:04,750
programmers timing files versus each

373
00:13:03,458 --> 00:13:07,388
other or I don't know what you want to

374
00:13:04,750 --> 00:13:08,948
do but you could do that and obviously

375
00:13:07,389 --> 00:13:10,539
you can also concatenate these together

376
00:13:08,948 --> 00:13:12,519
if you want to run multiples together

377
00:13:10,539 --> 00:13:14,349
and run through something you could do

378
00:13:12,519 --> 00:13:16,179
that as well I should probably include

379
00:13:14,350 --> 00:13:17,459
an option to not have any headers on

380
00:13:16,179 --> 00:13:19,349
them but

381
00:13:17,458 --> 00:13:20,638
I haven't done that yet it's pretty

382
00:13:19,350 --> 00:13:22,230
trivial I'll see if you wanted to you

383
00:13:20,639 --> 00:13:24,899
could just take the C file and get rid

384
00:13:22,230 --> 00:13:30,778
of it right so the other thing you could

385
00:13:24,899 --> 00:13:34,860
do in here is if you remember if i go

386
00:13:30,778 --> 00:13:36,778
back to the stats if you take a look at

387
00:13:34,860 --> 00:13:38,068
what happens here it'll say timings mark

388
00:13:36,778 --> 00:13:39,470
successful and you'll notice that's all

389
00:13:38,068 --> 00:13:42,659
it says it doesn't say anything else

390
00:13:39,470 --> 00:13:46,528
well this successful part is based on

391
00:13:42,659 --> 00:13:49,049
when you call see time end what it will

392
00:13:46,528 --> 00:13:51,600
do if you would like it to you know

393
00:13:49,049 --> 00:13:53,758
obviously one thing that I can do if I

394
00:13:51,600 --> 00:13:56,129
wanted to record different sets of

395
00:13:53,759 --> 00:13:58,860
timings for different types of builds is

396
00:13:56,129 --> 00:14:01,230
this seat I'm begin could include here

397
00:13:58,860 --> 00:14:02,938
like something like % like build name or

398
00:14:01,230 --> 00:14:04,230
something right so I can have different

399
00:14:02,938 --> 00:14:06,599
sets of timings for different build

400
00:14:04,230 --> 00:14:09,659
names and that would work just fine but

401
00:14:06,600 --> 00:14:11,550
what doesn't work so fine is if I wanted

402
00:14:09,659 --> 00:14:13,799
to have different sets of timings for

403
00:14:11,549 --> 00:14:15,628
whether or not the builds succeeded

404
00:14:13,799 --> 00:14:17,729
because obviously a build that like ends

405
00:14:15,629 --> 00:14:19,889
early because of an error is a different

406
00:14:17,730 --> 00:14:21,839
sort of beast than ones that go to

407
00:14:19,889 --> 00:14:25,709
completion because it may be timing less

408
00:14:21,839 --> 00:14:27,839
stuff right and when you call begin you

409
00:14:25,708 --> 00:14:29,428
don't know whether this build will

410
00:14:27,839 --> 00:14:31,439
succeed or not so it's not like you can

411
00:14:29,428 --> 00:14:33,688
create a separate timing file for it and

412
00:14:31,438 --> 00:14:36,509
so what see time does is it allows you

413
00:14:33,688 --> 00:14:38,818
to actually pass an additional parameter

414
00:14:36,509 --> 00:14:41,610
at the end when you finish the block

415
00:14:38,818 --> 00:14:43,948
that says did this block actually run to

416
00:14:41,610 --> 00:14:46,318
completion or did it fail somewhere in

417
00:14:43,948 --> 00:14:49,588
between and the way that you can do that

418
00:14:46,318 --> 00:14:51,740
and I actually document that inside the

419
00:14:49,589 --> 00:14:57,119
seat I'm file so you can actually see it

420
00:14:51,740 --> 00:14:59,789
here is that oops here's the seat I'm

421
00:14:57,119 --> 00:15:02,399
file right here what you can see here

422
00:14:59,789 --> 00:15:04,558
this is what I recommend is basically in

423
00:15:02,399 --> 00:15:07,139
the in the das batch file or whatever

424
00:15:04,558 --> 00:15:08,909
you're using when you do your build you

425
00:15:07,139 --> 00:15:12,119
can figure out whether there was an

426
00:15:08,909 --> 00:15:13,828
error or not right and I don't know if

427
00:15:12,119 --> 00:15:15,569
to what extent we do that here we don't

428
00:15:13,828 --> 00:15:17,878
compile the simple preprocessor anymore

429
00:15:15,568 --> 00:15:20,669
and we don't compile the asset builder

430
00:15:17,879 --> 00:15:25,019
so all we really do is this right here

431
00:15:20,669 --> 00:15:27,899
where we do this this build and then

432
00:15:25,019 --> 00:15:29,249
this build after it and so you know what

433
00:15:27,899 --> 00:15:30,830
I might want to do is just say well

434
00:15:29,249 --> 00:15:34,100
let's not count though

435
00:15:30,830 --> 00:15:36,560
30 to success or failure maybe you know

436
00:15:34,100 --> 00:15:38,149
I don't again it's hard to say whether

437
00:15:36,559 --> 00:15:40,519
we'd want to time those as two different

438
00:15:38,149 --> 00:15:42,319
blocks or how we'd want to do it this is

439
00:15:40,519 --> 00:15:43,730
all up to you it's exactly now it's the

440
00:15:42,320 --> 00:15:45,290
profiling a program you have to kind of

441
00:15:43,730 --> 00:15:48,889
decide what you're trying to gather

442
00:15:45,289 --> 00:15:53,990
statistics about but let's say that once

443
00:15:48,889 --> 00:15:56,149
we do our build here for our fur for the

444
00:15:53,990 --> 00:15:58,340
majority of the code on handmade hero I

445
00:15:56,149 --> 00:16:01,429
want to capture whether or not that

446
00:15:58,340 --> 00:16:03,170
actually worked ok so I'm going to

447
00:16:01,429 --> 00:16:05,059
capture the error level that came back

448
00:16:03,169 --> 00:16:07,549
from CL and then what I'm going to do is

449
00:16:05,059 --> 00:16:09,679
I'm just going to pass that to here so

450
00:16:07,549 --> 00:16:12,259
that if the build failed it will be

451
00:16:09,679 --> 00:16:14,149
known that this was a fail build versus

452
00:16:12,259 --> 00:16:16,250
a succeeding build so now I build it

453
00:16:14,149 --> 00:16:18,649
here and I'm passing that to see time

454
00:16:16,250 --> 00:16:20,720
and so when I say hey I want the stats

455
00:16:18,649 --> 00:16:22,759
you can see that I don't actually get

456
00:16:20,720 --> 00:16:25,610
any yet because it succeeded but if I

457
00:16:22,759 --> 00:16:28,220
was to go into handmade see and break

458
00:16:25,610 --> 00:16:29,930
the build intentionally which I can do

459
00:16:28,220 --> 00:16:31,970
here like by inserting an error for

460
00:16:29,929 --> 00:16:35,389
example and now I build well now there's

461
00:16:31,970 --> 00:16:37,519
an error and if I look to see time now

462
00:16:35,389 --> 00:16:38,809
you will see that one of them was marked

463
00:16:37,519 --> 00:16:40,429
failed and you can see that the failed

464
00:16:38,809 --> 00:16:42,379
build is quite a bit slower than the

465
00:16:40,429 --> 00:16:44,000
successful build so this will keep those

466
00:16:42,379 --> 00:16:46,340
two timing segregated and like I said

467
00:16:44,000 --> 00:16:48,110
that's necessary because there is no

468
00:16:46,340 --> 00:16:50,330
other way for you to have fixed that

469
00:16:48,110 --> 00:16:52,100
because you need to give it some file

470
00:16:50,330 --> 00:16:53,750
where you can store this information and

471
00:16:52,100 --> 00:16:55,550
that's just unfortunate an unfortunate

472
00:16:53,750 --> 00:16:56,960
reality of batch files I suppose maybe I

473
00:16:55,549 --> 00:16:58,729
could run a little service or something

474
00:16:56,960 --> 00:17:00,590
but I wanted to keep this a very simple

475
00:16:58,730 --> 00:17:02,029
easy to port utility that anyone could

476
00:17:00,590 --> 00:17:03,440
move to another platform if they wanted

477
00:17:02,029 --> 00:17:04,338
it for like their linux builds with

478
00:17:03,440 --> 00:17:06,320
their mac builds or something like that

479
00:17:04,338 --> 00:17:07,429
I didn't want to start having services

480
00:17:06,319 --> 00:17:09,139
and named pipes and all these other

481
00:17:07,430 --> 00:17:11,000
sorts of things I figured you wanted to

482
00:17:09,140 --> 00:17:13,759
have a file and so in that situation

483
00:17:11,000 --> 00:17:15,349
obviously you need some way of having

484
00:17:13,759 --> 00:17:16,459
the file include more than just that

485
00:17:15,349 --> 00:17:19,088
information and that's what it does

486
00:17:16,459 --> 00:17:21,199
currently eventually i could see

487
00:17:19,088 --> 00:17:22,458
extrapolating that more two-timing

488
00:17:21,199 --> 00:17:24,080
different parts and keeping them all

489
00:17:22,459 --> 00:17:26,240
circulating the file but it just hasn't

490
00:17:24,079 --> 00:17:27,919
been much of a priority because most of

491
00:17:26,240 --> 00:17:29,839
the time really what you just care about

492
00:17:27,920 --> 00:17:31,820
is how long did the total build take

493
00:17:29,839 --> 00:17:33,379
that's it and so it hasn't really been

494
00:17:31,819 --> 00:17:35,809
worth it to try and put in other things

495
00:17:33,380 --> 00:17:37,640
and so I never did and so now if I go

496
00:17:35,809 --> 00:17:40,009
back to this and it succeeds then again

497
00:17:37,640 --> 00:17:42,759
you can see when I come up here it tells

498
00:17:40,009 --> 00:17:45,289
me that information five and one right

499
00:17:42,759 --> 00:17:46,519
and so here's the total time we spent so

500
00:17:45,289 --> 00:17:48,079
far as you can see it continues to go up

501
00:17:46,519 --> 00:17:50,990
and so this is that number that really

502
00:17:48,079 --> 00:17:52,909
that you mostly care about and again if

503
00:17:50,990 --> 00:17:55,370
I go back and take a look at sea time

504
00:17:52,910 --> 00:17:56,300
dot c you can also see in here that if

505
00:17:55,369 --> 00:17:58,039
it's something that you would like to

506
00:17:56,299 --> 00:18:00,710
this is the public domain notice like i

507
00:17:58,039 --> 00:18:02,210
said you don't have to like this can be

508
00:18:00,710 --> 00:18:07,309
freely disseminated now once it's out

509
00:18:02,210 --> 00:18:08,750
there yeah that can be freely simon

510
00:18:07,309 --> 00:18:09,769
modified however you want to use it in

511
00:18:08,750 --> 00:18:11,720
your products and that sort of stuff

512
00:18:09,769 --> 00:18:13,339
what you can kind of see if you take a

513
00:18:11,720 --> 00:18:15,019
look at this here it's very very simple

514
00:18:13,339 --> 00:18:16,399
program there's really not much to it i

515
00:18:15,019 --> 00:18:18,619
don't know how many lines there are but

516
00:18:16,400 --> 00:18:20,870
738 lines i guess it's very very

517
00:18:18,619 --> 00:18:22,099
straightforward it relies on almost

518
00:18:20,869 --> 00:18:24,709
nothing but the sea runtime library

519
00:18:22,099 --> 00:18:26,119
however unfortunately and I don't know

520
00:18:24,710 --> 00:18:27,829
if this is something that really can be

521
00:18:26,119 --> 00:18:29,389
fixed because I don't know if anyone

522
00:18:27,829 --> 00:18:32,269
ever really updated the sea runtime

523
00:18:29,390 --> 00:18:35,630
library much to fix it unfortunately

524
00:18:32,269 --> 00:18:38,900
there is a little bit of a basically

525
00:18:35,630 --> 00:18:40,640
platform required stuff here so you can

526
00:18:38,900 --> 00:18:43,130
see in here that it includes windows.h

527
00:18:40,640 --> 00:18:45,680
and then it's got four functions right

528
00:18:43,130 --> 00:18:47,360
sorry five functions that's because I

529
00:18:45,680 --> 00:18:49,880
don't know of any way to get high

530
00:18:47,359 --> 00:18:53,059
resolution timing information out of the

531
00:18:49,880 --> 00:18:55,850
sea runtime library so at the moment

532
00:18:53,059 --> 00:18:58,069
that's why that's the case and it's set

533
00:18:55,849 --> 00:19:00,199
up to basically allow you to port

534
00:18:58,069 --> 00:19:02,149
because all you have to do is port these

535
00:19:00,200 --> 00:19:04,460
five functions which should be

536
00:19:02,150 --> 00:19:07,310
relatively easy to do to the operating

537
00:19:04,460 --> 00:19:11,809
system of your choice however that is

538
00:19:07,309 --> 00:19:13,490
the current hold up due to as to why you

539
00:19:11,809 --> 00:19:15,200
couldn't just compile it directly

540
00:19:13,490 --> 00:19:17,390
without doing reporting on a platform

541
00:19:15,200 --> 00:19:19,610
other than windows if somebody does

542
00:19:17,390 --> 00:19:20,990
happen to know I don't keep up to date

543
00:19:19,609 --> 00:19:22,669
like I don't even use the c runtime

544
00:19:20,990 --> 00:19:24,440
library in my projects at work as i

545
00:19:22,670 --> 00:19:26,360
mentioned before so I don't keep up the

546
00:19:24,440 --> 00:19:28,460
date with it at all but if someone who

547
00:19:26,359 --> 00:19:30,649
is more updated wants to port it to the

548
00:19:28,460 --> 00:19:33,259
sea runtime library if they do have high

549
00:19:30,650 --> 00:19:35,180
resolution timing information now where

550
00:19:33,259 --> 00:19:36,410
I can say you know at the start of the

551
00:19:35,180 --> 00:19:38,330
bachelor on the end of the batch file I

552
00:19:36,410 --> 00:19:40,100
can get really accurate times you know

553
00:19:38,329 --> 00:19:43,189
millisecond times of when we started and

554
00:19:40,099 --> 00:19:46,219
ended then you know that would be cool

555
00:19:43,190 --> 00:19:48,320
to add obviously so that this would no

556
00:19:46,220 --> 00:19:49,670
longer depend on any platform specific

557
00:19:48,319 --> 00:19:51,950
stuff but at the moment I don't really

558
00:19:49,670 --> 00:19:53,600
know of a way to do that without going

559
00:19:51,950 --> 00:19:56,028
through the operating system specific

560
00:19:53,599 --> 00:19:56,928
piece of information but that's the only

561
00:19:56,028 --> 00:19:58,848
you really need to worry about if you

562
00:19:56,929 --> 00:20:00,710
want to deport so you could do that and

563
00:19:58,848 --> 00:20:02,689
again if you do want me to reincorporate

564
00:20:00,710 --> 00:20:04,278
other ports if you do one for unix or

565
00:20:02,690 --> 00:20:07,669
something let me know and i'll try to

566
00:20:04,278 --> 00:20:09,858
merge it in here at some point so that's

567
00:20:07,669 --> 00:20:10,969
about it there's not like I said not too

568
00:20:09,858 --> 00:20:13,069
much to it it's pretty straightforward

569
00:20:10,969 --> 00:20:14,298
it should be really easy to understand

570
00:20:13,069 --> 00:20:17,450
if you want to go in here and modify

571
00:20:14,298 --> 00:20:19,398
anything and yeah and that's just about

572
00:20:17,450 --> 00:20:21,950
it I feel like probably one thing that I

573
00:20:19,398 --> 00:20:23,808
should do and never really did is I

574
00:20:21,950 --> 00:20:25,729
think currently because my builds are

575
00:20:23,808 --> 00:20:27,558
always a couple seconds I didn't

576
00:20:25,729 --> 00:20:29,749
actually add something that if the build

577
00:20:27,558 --> 00:20:31,009
took say an hour and 45 minutes it

578
00:20:29,749 --> 00:20:32,210
doesn't actually print it out as such it

579
00:20:31,009 --> 00:20:34,009
would still printed out as a number of

580
00:20:32,210 --> 00:20:36,019
seconds and you can kind of see what i

581
00:20:34,009 --> 00:20:40,308
mean by that you can see that where is

582
00:20:36,019 --> 00:20:42,200
it here here is minus end so you can see

583
00:20:40,308 --> 00:20:44,898
when it goes to do this right here it

584
00:20:42,200 --> 00:20:47,830
prints out this see time and it says

585
00:20:44,898 --> 00:20:49,819
what the the seconds were right and

586
00:20:47,829 --> 00:20:52,368
there's actually a function here called

587
00:20:49,819 --> 00:20:54,618
print time that will take seconds and

588
00:20:52,368 --> 00:20:56,058
turn it into something or so i take

589
00:20:54,618 --> 00:20:58,728
milliseconds and turn it into something

590
00:20:56,058 --> 00:21:00,079
useful print out wise so I feel like

591
00:20:58,729 --> 00:21:01,669
that's probably something that I should

592
00:21:00,079 --> 00:21:03,558
do maybe I should have done it before I

593
00:21:01,669 --> 00:21:04,849
printed it but you know like I said I

594
00:21:03,558 --> 00:21:06,138
don't ever run build to take that long

595
00:21:04,848 --> 00:21:07,489
but now this is out in the wild people

596
00:21:06,138 --> 00:21:08,928
might be running bills to take like an

597
00:21:07,489 --> 00:21:10,038
hour and it's going to print out the

598
00:21:08,929 --> 00:21:13,339
number of seconds which is going to be

599
00:21:10,038 --> 00:21:15,229
not probably what you wanted so maybe

600
00:21:13,338 --> 00:21:16,428
that's something that I should fix I

601
00:21:15,229 --> 00:21:18,558
suppose I could fix it right here on

602
00:21:16,429 --> 00:21:20,359
screen it wouldn't be particularly hard

603
00:21:18,558 --> 00:21:21,888
so the way that would work there's a

604
00:21:20,358 --> 00:21:23,778
function in here just called print time

605
00:21:21,888 --> 00:21:26,028
and I guess I'll go to it so you guys

606
00:21:23,778 --> 00:21:30,679
can see what I'm talking about so if I

607
00:21:26,028 --> 00:21:32,929
if I jump back up here you can see we're

608
00:21:30,679 --> 00:21:38,419
at sprint time you can see it's a pretty

609
00:21:32,929 --> 00:21:41,419
stupid function are you right here it's

610
00:21:38,419 --> 00:21:43,609
really really dumb but it can handle you

611
00:21:41,419 --> 00:21:46,219
know even builds that took a week it

612
00:21:43,608 --> 00:21:49,878
would tell you that and so you can kind

613
00:21:46,219 --> 00:21:52,580
of go in here and and and leverage that

614
00:21:49,878 --> 00:21:55,939
code so if I if I just take this out and

615
00:21:52,579 --> 00:21:57,499
put that in here like so we should be

616
00:21:55,940 --> 00:21:58,609
able to get something that that prints

617
00:21:57,499 --> 00:21:59,960
out the milliseconds and something that

618
00:21:58,608 --> 00:22:00,978
you could use even if your build is

619
00:21:59,960 --> 00:22:03,889
really really really really really

620
00:22:00,979 --> 00:22:05,450
really really really horrific we bad so

621
00:22:03,888 --> 00:22:09,439
if I was to do that I could get rid of

622
00:22:05,450 --> 00:22:11,538
this here and just put that as the pre

623
00:22:09,440 --> 00:22:14,000
amble essentially and then come in

624
00:22:11,538 --> 00:22:16,878
through here rearrange this so that I

625
00:22:14,000 --> 00:22:19,788
call this separately so here's my my

626
00:22:16,878 --> 00:22:22,849
standard out let's go ahead and fix that

627
00:22:19,788 --> 00:22:25,190
there and so here's that seat I'm call

628
00:22:22,849 --> 00:22:27,589
here's the % s I don't need to pass this

629
00:22:25,190 --> 00:22:30,110
anymore it's just going to be whatever

630
00:22:27,589 --> 00:22:31,849
the the timing file name is and that

631
00:22:30,109 --> 00:22:34,490
should basically give me something that

632
00:22:31,849 --> 00:22:36,798
printed out in a way that's going to be

633
00:22:34,490 --> 00:22:39,259
friendlier for people whose builds take

634
00:22:36,798 --> 00:22:42,740
a long time so let me go ahead and

635
00:22:39,259 --> 00:22:44,960
rebuild that here let's go in to see

636
00:22:42,740 --> 00:22:46,250
time if you want to rebuild see time

637
00:22:44,960 --> 00:22:47,690
it's very very simple here's the

638
00:22:46,250 --> 00:22:49,398
build-up bat as you can see there's

639
00:22:47,690 --> 00:22:51,409
almost nothing to it the only thing it

640
00:22:49,398 --> 00:22:52,729
needs to link with is the win mmm and

641
00:22:51,409 --> 00:22:55,009
that's because it tries to use the high

642
00:22:52,730 --> 00:22:56,089
resolution timer like I said so if you

643
00:22:55,009 --> 00:22:57,620
hit build it should be straightforward

644
00:22:56,089 --> 00:22:59,388
it shouldn't really have any problems

645
00:22:57,619 --> 00:23:01,278
there shouldn't be a lot of errors or

646
00:22:59,388 --> 00:23:02,599
warnings or anything like that and what

647
00:23:01,278 --> 00:23:04,909
comes out of it here is that seat I'm

648
00:23:02,599 --> 00:23:07,398
executable if I copy that see time

649
00:23:04,909 --> 00:23:09,528
executable over to our Miss directory

650
00:23:07,398 --> 00:23:12,349
where we keep our batch files I should

651
00:23:09,528 --> 00:23:14,419
now be using the new see time and so if

652
00:23:12,349 --> 00:23:17,689
we were to now build handmade hero again

653
00:23:14,419 --> 00:23:19,940
we should see it print out the new style

654
00:23:17,690 --> 00:23:21,409
which is 1.7 seconds instead of s and

655
00:23:19,940 --> 00:23:23,690
there you can see that's the case I

656
00:23:21,409 --> 00:23:26,690
probably should include a space after

657
00:23:23,690 --> 00:23:31,190
that there but that's about it so let me

658
00:23:26,690 --> 00:23:37,220
try that one more time build and copy

659
00:23:31,190 --> 00:23:38,808
and and there we go so now that will

660
00:23:37,220 --> 00:23:41,389
also print out in a little bit nicer

661
00:23:38,808 --> 00:23:44,148
fashion it'll do you know oh your build

662
00:23:41,388 --> 00:23:46,788
took two hours 45 minutes you know

663
00:23:44,148 --> 00:23:50,148
whatever heaven help you if it days ever

664
00:23:46,788 --> 00:23:52,519
shows up in there but that's about it so

665
00:23:50,148 --> 00:23:54,798
that is see time like I said really

666
00:23:52,519 --> 00:23:56,808
simple utility but it's one that I find

667
00:23:54,798 --> 00:23:58,940
it's a lot of fun it's so easy to add to

668
00:23:56,808 --> 00:24:00,619
your build if you wanted to you could

669
00:23:58,940 --> 00:24:03,288
probably even do it if you're one of

670
00:24:00,619 --> 00:24:04,609
those people and and you know heaven

671
00:24:03,288 --> 00:24:06,138
help you but if you're one of those

672
00:24:04,609 --> 00:24:08,658
people who actually tries to build from

673
00:24:06,138 --> 00:24:11,178
within visual studio you should be able

674
00:24:08,659 --> 00:24:15,100
to use one of those custom build steps

675
00:24:11,179 --> 00:24:20,028
so I've never tried it myself because I

676
00:24:15,099 --> 00:24:22,109
honestly I would probably rather you

677
00:24:20,028 --> 00:24:24,660
know I I probably have to

678
00:24:22,109 --> 00:24:26,879
I probably rather program with with the

679
00:24:24,660 --> 00:24:28,410
standard template library then I would

680
00:24:26,880 --> 00:24:31,980
want to have to build my project with

681
00:24:28,410 --> 00:24:34,110
this thing but if you are in this this

682
00:24:31,980 --> 00:24:38,039
environment and make your build using

683
00:24:34,109 --> 00:24:39,869
the solution Explorer you can probably

684
00:24:38,039 --> 00:24:41,490
add it as a custom build step I would

685
00:24:39,869 --> 00:24:42,689
assume I don't actually know because

686
00:24:41,490 --> 00:24:46,019
like I said that's not something I ever

687
00:24:42,690 --> 00:24:49,039
do but presumably in here if you were to

688
00:24:46,019 --> 00:24:51,900
look inside the project properties

689
00:24:49,039 --> 00:24:56,039
usually there's a way to figure out in

690
00:24:51,900 --> 00:24:59,429
here how to add sort of special special

691
00:24:56,039 --> 00:25:02,879
things and so I don't know like um you

692
00:24:59,429 --> 00:25:04,950
know maybe and and please take this with

693
00:25:02,880 --> 00:25:06,780
a big grain of salt because I don't

694
00:25:04,950 --> 00:25:09,298
really know what you know the right

695
00:25:06,779 --> 00:25:11,879
places to do it but here's custom build

696
00:25:09,298 --> 00:25:13,740
step and I suspect you could probably

697
00:25:11,880 --> 00:25:15,720
put it in here here's build events I

698
00:25:13,740 --> 00:25:18,750
suspect you could probably put it in

699
00:25:15,720 --> 00:25:20,370
here but I have no idea so take a look

700
00:25:18,750 --> 00:25:21,990
at your documentation or try to figure

701
00:25:20,369 --> 00:25:23,729
that out if you're interested in it but

702
00:25:21,990 --> 00:25:26,880
I suspect you could probably get it to

703
00:25:23,730 --> 00:25:30,960
slot in here reasonably and so if you

704
00:25:26,880 --> 00:25:33,179
don't use if you don't happen to use

705
00:25:30,960 --> 00:25:35,279
some kind of a bill that executes sin

706
00:25:33,179 --> 00:25:36,840
the shell that shouldn't preclude you

707
00:25:35,279 --> 00:25:38,639
from still keeping track of your build

708
00:25:36,839 --> 00:25:42,599
times if that's something that you are

709
00:25:38,640 --> 00:25:45,990
interested in doing so that's about it I

710
00:25:42,599 --> 00:25:47,668
will briefly take Q&amp;A but I'm assuming

711
00:25:45,990 --> 00:25:50,669
that there really aren't any questions

712
00:25:47,669 --> 00:25:53,370
and answers because I I wouldn't imagine

713
00:25:50,669 --> 00:25:55,710
that this is particularly confusing but

714
00:25:53,369 --> 00:25:57,269
i will take a quick Q&amp;A if there's

715
00:25:55,710 --> 00:26:01,669
anyone who has any questions about this

716
00:25:57,269 --> 00:26:01,668
that I maybe forgot to do cover

717
00:26:19,460 --> 00:26:23,690
frosting into time to see time build all

718
00:26:22,429 --> 00:26:27,200
right that's just getting that's just

719
00:26:23,690 --> 00:26:29,899
going too far let's see in so far says

720
00:26:27,200 --> 00:26:35,110
lipsy has clock is that not good enough

721
00:26:29,898 --> 00:26:35,109
for timing what's the resolution on it

722
00:26:35,409 --> 00:26:56,090
let's let's see i see one time library

723
00:26:43,519 --> 00:27:00,019
ah let's see cost-efficient what I'm

724
00:26:56,089 --> 00:27:02,329
saying so I think I could be wrong but I

725
00:27:00,019 --> 00:27:05,569
believe I tried this and the answer was

726
00:27:02,329 --> 00:27:06,678
no that at least on windows at least

727
00:27:05,569 --> 00:27:09,740
with that version the compiler or

728
00:27:06,679 --> 00:27:11,659
whatever it was pretty it was the clocks

729
00:27:09,740 --> 00:27:14,630
per second was not high enough to be a

730
00:27:11,659 --> 00:27:16,899
useful timer but I could be wrong about

731
00:27:14,630 --> 00:27:16,899
that

732
00:27:29,559 --> 00:27:33,389
what is clocks per second

733
00:27:38,099 --> 00:27:44,759
do we know you already look at that

734
00:27:54,160 --> 00:28:03,950
I don't know so I guess what I would say

735
00:28:01,190 --> 00:28:06,440
is I don't remember it may have been

736
00:28:03,950 --> 00:28:07,910
that I only tried time and maybe time

737
00:28:06,440 --> 00:28:11,630
was the one that wasn't good enough and

738
00:28:07,910 --> 00:28:13,400
maybe clock would be uh so I don't know

739
00:28:11,630 --> 00:28:15,500
I guess what I'd say is the source codes

740
00:28:13,400 --> 00:28:17,000
out there so if anyone wants to play

741
00:28:15,500 --> 00:28:19,720
around and see if they can get something

742
00:28:17,000 --> 00:28:23,630
I would like it to be you know at least

743
00:28:19,720 --> 00:28:25,039
10 millisecond granular or better you

744
00:28:23,630 --> 00:28:26,960
know preferably it be millisecond

745
00:28:25,039 --> 00:28:28,428
granular it doesn't have to be more than

746
00:28:26,960 --> 00:28:31,009
that because these are builds so it's

747
00:28:28,429 --> 00:28:33,290
not you know it doesn't need to be any

748
00:28:31,009 --> 00:28:37,879
more than that so it so first as

749
00:28:33,289 --> 00:28:43,639
positive clocks per second is is 10 what

750
00:28:37,880 --> 00:28:46,870
is that he's a million so that would be

751
00:28:43,640 --> 00:28:46,870
fine if that's actually the case

752
00:28:57,068 --> 00:29:05,598
well so I suppose there is one other

753
00:29:00,398 --> 00:29:09,168
thing so I suppose yeah but but this

754
00:29:05,598 --> 00:29:14,958
could probably be this could probably be

755
00:29:09,169 --> 00:29:16,759
fixed as well I'm guessing yeah I'd have

756
00:29:14,959 --> 00:29:18,379
to look at it like you can see that's

757
00:29:16,759 --> 00:29:21,588
sort of the way that this works right is

758
00:29:18,378 --> 00:29:23,448
that when it does the it uses the date

759
00:29:21,588 --> 00:29:25,908
stuff too so but that could probably be

760
00:29:23,449 --> 00:29:27,558
ported as well so yeah if it's if it's

761
00:29:25,909 --> 00:29:29,089
guaranteed to be a million clocks then

762
00:29:27,558 --> 00:29:30,709
that should be fine and this could be

763
00:29:29,088 --> 00:29:32,568
replaced with that and it wouldn't need

764
00:29:30,709 --> 00:29:42,709
time get time so I'm guessing that that

765
00:29:32,568 --> 00:29:46,489
would be fine oh and pharrell choices

766
00:29:42,709 --> 00:29:47,839
that it's 1,000 clocks per second well

767
00:29:46,489 --> 00:29:50,690
but that's still one millisecond greiner

768
00:29:47,838 --> 00:29:55,878
so that would still be enough that would

769
00:29:50,690 --> 00:29:58,578
still be enough like I said so so I

770
00:29:55,878 --> 00:30:00,198
would be fine with porting to that right

771
00:29:58,578 --> 00:30:01,638
it doesn't need to be more than a

772
00:30:00,199 --> 00:30:03,139
millisecond granular certainly it's just

773
00:30:01,638 --> 00:30:06,168
timing a build and so it doesn't have to

774
00:30:03,138 --> 00:30:07,728
be I would like it more than a second I

775
00:30:06,169 --> 00:30:16,788
would like to be higher resolution than

776
00:30:07,729 --> 00:30:18,949
one second but you know mid blue cool

777
00:30:16,788 --> 00:30:20,658
stuff if we poured it to linux would you

778
00:30:18,949 --> 00:30:22,459
be cool with us packaging it up for the

779
00:30:20,659 --> 00:30:23,509
arch user repository and then hopefully

780
00:30:22,459 --> 00:30:24,649
have it promoted to the official

781
00:30:23,509 --> 00:30:27,019
community oh yeah you can do it out its

782
00:30:24,648 --> 00:30:29,348
public domain now man do whatever you

783
00:30:27,019 --> 00:30:29,348
want with it

784
00:30:46,730 --> 00:30:51,019
elvin I tried the custom build stuff in

785
00:30:49,190 --> 00:30:52,730
vigils to be before it's terrible yes I

786
00:30:51,019 --> 00:30:54,829
don't ever try to build anything in

787
00:30:52,730 --> 00:30:57,558
visual studio because it's awful but if

788
00:30:54,829 --> 00:30:59,599
you're somebody who does I presumably

789
00:30:57,558 --> 00:31:01,399
then you're okay with it and I think you

790
00:30:59,599 --> 00:31:03,379
can put other things in there because i

791
00:31:01,400 --> 00:31:04,700
remember back the last time i worked on

792
00:31:03,380 --> 00:31:06,950
a project where I had to use visual

793
00:31:04,700 --> 00:31:08,419
studio you could put things in there so

794
00:31:06,950 --> 00:31:15,710
it does have custom build steps yes it's

795
00:31:08,419 --> 00:31:17,480
janky but it does work Sean McGrath is

796
00:31:15,710 --> 00:31:19,130
there a seat I'm time to calculate how

797
00:31:17,480 --> 00:31:21,500
much few time ads for build and by

798
00:31:19,130 --> 00:31:23,450
extension a seat I'm time etc no there

799
00:31:21,500 --> 00:31:25,308
isn't but what I will say is you'll

800
00:31:23,450 --> 00:31:27,679
notice that see time is very careful to

801
00:31:25,308 --> 00:31:29,808
make sure that it takes the absolute

802
00:31:27,679 --> 00:31:31,669
least amount of its own time into

803
00:31:29,808 --> 00:31:33,980
account now that that necessarily helps

804
00:31:31,669 --> 00:31:36,679
you but you can see that initially on

805
00:31:33,980 --> 00:31:40,490
entry it'll snap the get clock right

806
00:31:36,679 --> 00:31:43,400
there and on begin it will actually snap

807
00:31:40,490 --> 00:31:46,429
the get clock again so what it does is

808
00:31:43,400 --> 00:31:48,950
it takes the get clock as close to the

809
00:31:46,429 --> 00:31:51,679
end as possible on begin and as close to

810
00:31:48,950 --> 00:31:53,720
the beginning as possible on end so that

811
00:31:51,679 --> 00:31:55,400
you're not counting morrissey time than

812
00:31:53,720 --> 00:31:58,039
you need to although see time takes very

813
00:31:55,400 --> 00:32:01,548
little time to execute so doesn't really

814
00:31:58,039 --> 00:32:02,779
matter would be possible to time

815
00:32:01,548 --> 00:32:05,029
compiling and linking separately

816
00:32:02,779 --> 00:32:07,160
certainly if you do them separately in

817
00:32:05,029 --> 00:32:08,990
handmade here we do them as one pass so

818
00:32:07,160 --> 00:32:11,900
no because there is no where you can't

819
00:32:08,990 --> 00:32:15,259
look we are not able to get inside this

820
00:32:11,900 --> 00:32:16,700
C compiler to instrument it right but if

821
00:32:15,259 --> 00:32:18,769
you do it as two different parts to

822
00:32:16,700 --> 00:32:20,660
compile and a thing you can just wrap

823
00:32:18,769 --> 00:32:22,099
each part in a big separate see time

824
00:32:20,660 --> 00:32:23,480
begin and end and then you can compile

825
00:32:22,099 --> 00:32:26,449
them separately and then you can time

826
00:32:23,480 --> 00:32:27,650
the separately if you have long build

827
00:32:26,450 --> 00:32:30,440
times how do you find out what is

828
00:32:27,650 --> 00:32:32,690
causing it that is a total other problem

829
00:32:30,440 --> 00:32:35,000
right if you have long build times and

830
00:32:32,690 --> 00:32:36,529
you can put C time blocks around

831
00:32:35,000 --> 00:32:37,700
different things to find out which part

832
00:32:36,529 --> 00:32:39,410
is taking long but once you get it down

833
00:32:37,700 --> 00:32:41,509
to acidic part then it's just a question

834
00:32:39,410 --> 00:32:42,890
of why is my compiler slow right and at

835
00:32:41,509 --> 00:32:44,839
that point really only the compiler

836
00:32:42,890 --> 00:32:45,980
vendor knows you can do tests and try

837
00:32:44,839 --> 00:32:49,808
like turning things on and off and

838
00:32:45,980 --> 00:32:49,808
seeing what it is but it's pretty tough

839
00:32:51,500 --> 00:32:55,380
by flinger are you essentially packing

840
00:32:53,819 --> 00:32:57,418
the run data into a file and updating it

841
00:32:55,380 --> 00:32:59,759
every run yeah it just basically rights

842
00:32:57,419 --> 00:33:01,679
to the end of the file right so just it

843
00:32:59,759 --> 00:33:03,839
just writes a concatenation at the end

844
00:33:01,679 --> 00:33:05,870
of the file every time that's all it

845
00:33:03,839 --> 00:33:05,869
does

846
00:33:14,778 --> 00:33:21,750
dinger bill on unix machines mock

847
00:33:19,558 --> 00:33:23,819
absolute times the best crepe France

848
00:33:21,750 --> 00:33:25,528
counter is on windows there's no co2

849
00:33:23,819 --> 00:33:26,700
touch with high precision timing yeah

850
00:33:25,528 --> 00:33:28,798
but like I said doesn't need to be that

851
00:33:26,700 --> 00:33:30,330
high precision so if clocks per second

852
00:33:28,798 --> 00:33:31,710
is generally a thousand or higher we

853
00:33:30,329 --> 00:33:33,990
could probably use that because it's

854
00:33:31,710 --> 00:33:35,819
just not that important to get you know

855
00:33:33,990 --> 00:33:37,888
millisecond or better timing i just

856
00:33:35,819 --> 00:33:40,470
don't want one second granular because a

857
00:33:37,888 --> 00:33:42,778
lot of my builds take you know point

858
00:33:40,470 --> 00:33:45,798
nine seconds 1.2 seconds and i want to

859
00:33:42,778 --> 00:33:45,798
see that right

860
00:33:57,659 --> 00:34:04,749
so no crown have you tried standard

861
00:34:00,338 --> 00:34:08,378
chrono dude anything that has STD colon

862
00:34:04,749 --> 00:34:10,539
in front of it like should generally be

863
00:34:08,378 --> 00:34:17,018
considered something you never ever want

864
00:34:10,539 --> 00:34:20,500
to use for any reason like ever times a

865
00:34:17,018 --> 00:34:25,768
thousand STD just means bad code like it

866
00:34:20,500 --> 00:34:32,679
STD stands for like like I don't know

867
00:34:25,768 --> 00:34:34,689
probably like sucks too I don't know I

868
00:34:32,679 --> 00:34:36,250
don't know how to change STD into

869
00:34:34,690 --> 00:34:37,659
something that means the code is awful

870
00:34:36,250 --> 00:34:38,980
but I'll think of a good acronym for

871
00:34:37,659 --> 00:34:42,309
that and that's what you should think of

872
00:34:38,980 --> 00:34:44,579
it as SED just means really bad don't

873
00:34:42,309 --> 00:34:44,579
call

874
00:34:57,190 --> 00:35:01,720
grumpy giant 256 clock is no good

875
00:34:59,769 --> 00:35:07,358
because it counts from when your process

876
00:35:01,719 --> 00:35:09,759
started oh that's a good point duh

877
00:35:07,358 --> 00:35:11,500
that's why I didn't use it yeah I'm glad

878
00:35:09,760 --> 00:35:13,690
that I'm glad that Richards got my back

879
00:35:11,500 --> 00:35:16,358
here yeah right you can't use clock

880
00:35:13,690 --> 00:35:18,010
because you need an a time you're

881
00:35:16,358 --> 00:35:21,190
running the program twice you need it to

882
00:35:18,010 --> 00:35:23,550
be an actual time so that's why I was

883
00:35:21,190 --> 00:35:25,659
calling time yeah clock doesn't help you

884
00:35:23,550 --> 00:35:27,160
right sorry I forgot about that clock

885
00:35:25,659 --> 00:35:28,960
can't help you because you're calling

886
00:35:27,159 --> 00:35:31,719
the program twice so you need to know

887
00:35:28,960 --> 00:35:34,420
the actual time like what time it is in

888
00:35:31,719 --> 00:35:40,539
the real world and so that's why I had

889
00:35:34,420 --> 00:35:42,579
to use a time that was actually higher

890
00:35:40,539 --> 00:35:48,539
resolution but that meant real world

891
00:35:42,579 --> 00:35:48,539
time if that makes sense you see here

892
00:35:50,760 --> 00:35:57,280
yeah so you can see that I call time get

893
00:35:54,190 --> 00:35:59,079
time instead of instead of a clock or

894
00:35:57,280 --> 00:36:02,910
time for that reason yet okay thank you

895
00:35:59,079 --> 00:36:02,910
for yeah duh

896
00:36:23,159 --> 00:36:33,929
all right so it looks like that is all

897
00:36:25,380 --> 00:36:36,869
the questions so I think that's it like

898
00:36:33,929 --> 00:36:39,690
I said this will be up in handmade hero

899
00:36:36,869 --> 00:36:41,789
if you want to grab it I can also dumped

900
00:36:39,690 --> 00:36:43,889
it in a paste bin on Twitter if anyone

901
00:36:41,789 --> 00:36:45,480
wants to grab it from there but it

902
00:36:43,889 --> 00:36:48,089
should be widely disseminated at this

903
00:36:45,480 --> 00:36:49,710
point so anyone who wants to keep track

904
00:36:48,090 --> 00:36:51,600
of their build times and make sure they

905
00:36:49,710 --> 00:36:53,699
actually know what they are and / or

906
00:36:51,599 --> 00:36:55,949
know how they evolved over the course of

907
00:36:53,699 --> 00:37:00,210
their project this should basically do

908
00:36:55,949 --> 00:37:01,799
it for you and at the other point is we

909
00:37:00,210 --> 00:37:03,809
will now have that built into handmade

910
00:37:01,800 --> 00:37:05,910
hero so we can also see the other thing

911
00:37:03,809 --> 00:37:08,610
that it does that's kind of nice as well

912
00:37:05,909 --> 00:37:10,619
you'll notice that it has that sort of

913
00:37:08,610 --> 00:37:12,480
thing to where you can see how often you

914
00:37:10,619 --> 00:37:14,279
build something because in addition it

915
00:37:12,480 --> 00:37:15,780
always keeps track of how many times you

916
00:37:14,280 --> 00:37:17,220
built it so when you look over time you

917
00:37:15,780 --> 00:37:18,810
can see you I built like this may times

918
00:37:17,219 --> 00:37:20,339
and then I went down and didn't build

919
00:37:18,809 --> 00:37:25,650
much during this month or whatever so

920
00:37:20,340 --> 00:37:27,450
that's kind of fun to Colombian if you

921
00:37:25,650 --> 00:37:29,369
use see time during a daylight savings

922
00:37:27,449 --> 00:37:34,349
time shift does it take into account the

923
00:37:29,369 --> 00:37:36,059
extra less hour um well the so that

924
00:37:34,349 --> 00:37:38,639
question is actually punted to the

925
00:37:36,059 --> 00:37:40,799
operating system which may be you know I

926
00:37:38,639 --> 00:37:42,719
wanted to keep this program simple so i

927
00:37:40,800 --> 00:37:46,110
use the operating system to tell me what

928
00:37:42,719 --> 00:37:48,599
a day is so you can kind of see on here

929
00:37:46,110 --> 00:37:51,380
that it does some stuff where it it you

930
00:37:48,599 --> 00:37:53,639
know assume some information about how

931
00:37:51,380 --> 00:37:58,110
long a day takes and stuff like that

932
00:37:53,639 --> 00:38:00,690
which is not particularly great so not

933
00:37:58,110 --> 00:38:02,730
not really when it does print out dates

934
00:38:00,690 --> 00:38:06,269
it does it correctly but this could be

935
00:38:02,730 --> 00:38:10,530
improved like probably what you would

936
00:38:06,269 --> 00:38:14,190
maybe do here is when you get day index

937
00:38:10,530 --> 00:38:15,600
you could you could actually like this

938
00:38:14,190 --> 00:38:18,030
could be done better i guess is what I'm

939
00:38:15,599 --> 00:38:19,829
saying you could I do do file time to

940
00:38:18,030 --> 00:38:21,180
local file time here which accounts I

941
00:38:19,829 --> 00:38:23,639
believe for daylight savings time

942
00:38:21,179 --> 00:38:25,259
correctly assuming the operating system

943
00:38:23,639 --> 00:38:27,839
does which you know there might they may

944
00:38:25,260 --> 00:38:30,030
have bugs as well but I don't really do

945
00:38:27,840 --> 00:38:32,820
it in here so this could probably stand

946
00:38:30,030 --> 00:38:35,100
to be improved and what you would do

947
00:38:32,820 --> 00:38:35,950
there is you'd probably call this every

948
00:38:35,099 --> 00:38:40,809
time on

949
00:38:35,949 --> 00:38:47,139
index and then you'd use a you would use

950
00:38:40,809 --> 00:38:50,759
some kind of a basis for that so so no I

951
00:38:47,139 --> 00:38:50,759
mean the answer is no at the moment

952
00:38:57,929 --> 00:39:03,309
to think about that so if i wanted to do

953
00:39:00,849 --> 00:39:05,739
that correctly so you can see basically

954
00:39:03,309 --> 00:39:07,659
day indexes just use the only real

955
00:39:05,739 --> 00:39:08,889
reason is is just to see roughly how

956
00:39:07,659 --> 00:39:12,909
many days there are so it's not really

957
00:39:08,889 --> 00:39:15,250
used for anything particularly own risk

958
00:39:12,909 --> 00:39:19,539
and obviously this part is correct so

959
00:39:15,250 --> 00:39:26,590
when I say see time CSV and I asked for

960
00:39:19,539 --> 00:39:31,779
one of these as I call it oh wait I'm in

961
00:39:26,590 --> 00:39:34,869
the wrong directory so if I come in here

962
00:39:31,780 --> 00:39:43,660
and I want to see like see time stats

963
00:39:34,869 --> 00:39:45,160
for folks are a CSV for handmade CPM if

964
00:39:43,659 --> 00:39:46,960
I want to look at these these are

965
00:39:45,159 --> 00:39:49,989
printed out as you can see they're

966
00:39:46,960 --> 00:39:52,000
roughly correct in terms of what time it

967
00:39:49,989 --> 00:39:55,689
is here right those are when we did the

968
00:39:52,000 --> 00:39:57,070
build 340 p.m. you can see that that we

969
00:39:55,690 --> 00:39:58,780
probably did the build about 20 minutes

970
00:39:57,070 --> 00:40:01,119
ago right and that's what that is so

971
00:39:58,780 --> 00:40:02,440
these are all correct as far as the

972
00:40:01,119 --> 00:40:04,510
light savings time and all that sort of

973
00:40:02,440 --> 00:40:07,150
stuff assuming that the operating system

974
00:40:04,510 --> 00:40:10,800
doesn't mess it up what doesn't take

975
00:40:07,150 --> 00:40:19,480
into account those things properly is

976
00:40:10,800 --> 00:40:21,220
like I if you do this right this thing

977
00:40:19,480 --> 00:40:25,750
when it says one day per bucket is

978
00:40:21,219 --> 00:40:28,329
actually using quanta of a day which is

979
00:40:25,750 --> 00:40:31,869
not the same as as routing that day to

980
00:40:28,329 --> 00:40:33,969
the actual calendar day and if you

981
00:40:31,869 --> 00:40:37,329
wanted to make that happen I think it

982
00:40:33,969 --> 00:40:38,949
would be relatively easy to do I just

983
00:40:37,329 --> 00:40:42,279
have to think about exactly how you

984
00:40:38,949 --> 00:40:45,939
would want to do it you'd probably want

985
00:40:42,280 --> 00:40:48,310
to do something like here you can see

986
00:40:45,940 --> 00:40:52,139
where i call first day at last day I I

987
00:40:48,309 --> 00:40:52,139
take these day indexes and

988
00:40:52,769 --> 00:40:58,380
I guess I mean I guess I did it

989
00:40:56,909 --> 00:41:00,149
correctly it looks like so if I just

990
00:40:58,380 --> 00:41:05,240
came in here this would probably be

991
00:41:00,150 --> 00:41:05,240
sufficient you just have to do this

992
00:41:05,449 --> 00:41:13,980
you'd have to take you'd have to like

993
00:41:10,170 --> 00:41:16,079
truncate down to the closest day so I'm

994
00:41:13,980 --> 00:41:18,269
just sort of talking aloud here because

995
00:41:16,079 --> 00:41:25,619
I haven't thought it through but it

996
00:41:18,269 --> 00:41:31,889
would be something like this first you

997
00:41:25,619 --> 00:41:34,079
would go in and say well you know I've

998
00:41:31,889 --> 00:41:37,469
got a file time in a system time here's

999
00:41:34,079 --> 00:41:39,569
how I map those together so I've done a

1000
00:41:37,469 --> 00:41:42,449
file time to system time and now I know

1001
00:41:39,570 --> 00:41:47,430
you know the all of this information

1002
00:41:42,449 --> 00:41:55,109
about the about the file right let me

1003
00:41:47,429 --> 00:41:57,359
get over here into this file so yeah so

1004
00:41:55,110 --> 00:41:59,250
now I know all this information I know

1005
00:41:57,360 --> 00:42:01,590
the year I know the month and I know the

1006
00:41:59,250 --> 00:42:03,659
day right and what I can do now I say

1007
00:42:01,590 --> 00:42:05,700
well let's get rid of the hour the

1008
00:42:03,659 --> 00:42:08,279
minute in the second we'll just nuke

1009
00:42:05,699 --> 00:42:11,039
those right so be going here and say

1010
00:42:08,280 --> 00:42:13,860
okay so let's say the hour 0 and the

1011
00:42:11,039 --> 00:42:16,920
minute is 0 I believe these are zero

1012
00:42:13,860 --> 00:42:21,059
based let's find out yeah these are

1013
00:42:16,920 --> 00:42:24,780
these are zero based right no no no they

1014
00:42:21,059 --> 00:42:26,489
look one based are they well let's see

1015
00:42:24,780 --> 00:42:29,220
now 0 minutes second so those would be

1016
00:42:26,489 --> 00:42:30,959
those would be zero based so I believe

1017
00:42:29,219 --> 00:42:33,509
you know that would zero it out and put

1018
00:42:30,960 --> 00:42:34,980
it at the base of the day and then I

1019
00:42:33,510 --> 00:42:37,080
would just need to go the other way

1020
00:42:34,980 --> 00:42:40,050
round so I need to now convert it back

1021
00:42:37,079 --> 00:42:42,960
if that makes sense so then I would go

1022
00:42:40,050 --> 00:42:45,630
and say okay let's now that I've gotten

1023
00:42:42,960 --> 00:42:48,990
it routed to a physical day in my local

1024
00:42:45,630 --> 00:42:50,970
time whatever that is then I can go

1025
00:42:48,989 --> 00:42:54,869
ahead and say all right now will convert

1026
00:42:50,969 --> 00:43:01,869
it back over so we've got that system

1027
00:42:54,869 --> 00:43:06,159
time else critter system time too

1028
00:43:01,869 --> 00:43:11,019
file time and then we can do you know

1029
00:43:06,159 --> 00:43:12,909
local file time to file time and that'll

1030
00:43:11,019 --> 00:43:16,570
convert it back so that would convert us

1031
00:43:12,909 --> 00:43:19,809
back to some kind you know an arbitrary

1032
00:43:16,570 --> 00:43:22,720
actual point in time and then we could

1033
00:43:19,809 --> 00:43:31,210
get a we could get the information out

1034
00:43:22,719 --> 00:43:35,679
of that I think so system time file time

1035
00:43:31,210 --> 00:43:37,030
file x file time does that make sense so

1036
00:43:35,679 --> 00:43:40,569
that would root it in one of our local

1037
00:43:37,030 --> 00:43:42,430
days map it back and then I guess since

1038
00:43:40,570 --> 00:43:43,840
we're subtracting we don't really need

1039
00:43:42,429 --> 00:43:45,190
to convert it from local to local

1040
00:43:43,840 --> 00:43:47,590
anymore because we're just looking at

1041
00:43:45,190 --> 00:43:49,300
some kind of an absolute piece of

1042
00:43:47,590 --> 00:43:55,329
information here so I think at that part

1043
00:43:49,300 --> 00:44:02,370
point you can just do this again I think

1044
00:43:55,329 --> 00:44:04,630
uh so that's my guess that's my guess

1045
00:44:02,369 --> 00:44:08,319
you know whether that's right or not I

1046
00:44:04,630 --> 00:44:10,210
don't know but that seems like it right

1047
00:44:08,320 --> 00:44:13,510
so basically what I did here is I just

1048
00:44:10,210 --> 00:44:18,519
said like okay I floor it to a

1049
00:44:13,510 --> 00:44:20,470
particular day and then then actually

1050
00:44:18,519 --> 00:44:22,960
look at the the quad part of the file

1051
00:44:20,469 --> 00:44:24,429
time and convert that to just however

1052
00:44:22,960 --> 00:44:26,949
many days there are so that they're

1053
00:44:24,429 --> 00:44:29,799
they're based off of it right and maybe

1054
00:44:26,949 --> 00:44:35,439
that's a little more correct probably it

1055
00:44:29,800 --> 00:44:37,660
is I don't know that's that would take

1056
00:44:35,440 --> 00:44:39,579
into account you know things like leap

1057
00:44:37,659 --> 00:44:41,109
seconds if you cared I don't know that

1058
00:44:39,579 --> 00:44:45,880
anyone does but I think that's probably

1059
00:44:41,110 --> 00:44:50,970
a little bit more correct if that makes

1060
00:44:45,880 --> 00:44:50,970
sense uh let's see here though

1061
00:44:52,320 --> 00:45:06,420
a wait a minute so this needs one more

1062
00:45:03,269 --> 00:45:08,550
thing which is the a64 you large integer

1063
00:45:06,420 --> 00:45:11,039
part here with the quad part that thing

1064
00:45:08,550 --> 00:45:13,400
actually needs to come out of the file

1065
00:45:11,039 --> 00:45:13,400
time

1066
00:45:13,989 --> 00:45:29,299
yeah let's do that hold on a second one

1067
00:45:21,619 --> 00:45:31,549
more thing that right so after we do

1068
00:45:29,300 --> 00:45:34,280
this conversion our file time now has to

1069
00:45:31,550 --> 00:45:36,289
be converted out to whatever we were

1070
00:45:34,280 --> 00:45:38,630
going to do with the with the a64 so

1071
00:45:36,289 --> 00:45:47,119
this part can stay the same instead of

1072
00:45:38,630 --> 00:45:51,980
converting these this way do this these

1073
00:45:47,119 --> 00:46:08,449
are actually going to come from these

1074
00:45:51,980 --> 00:46:13,510
two pieces right why am I still building

1075
00:46:08,449 --> 00:46:19,789
handmade hero I have no idea so that's

1076
00:46:13,510 --> 00:46:21,110
that's all you would do there and it's

1077
00:46:19,789 --> 00:46:23,449
not going to change anything from our

1078
00:46:21,110 --> 00:46:28,670
print out right but that might be more

1079
00:46:23,449 --> 00:46:35,029
correct if that makes sense so I don't

1080
00:46:28,670 --> 00:46:35,840
know Colombian is that roughly is that

1081
00:46:35,030 --> 00:46:39,790
roughly what you were looking for

1082
00:46:35,840 --> 00:46:39,789
because I think that's basically correct

1083
00:47:07,219 --> 00:47:11,480
Clemmy and indeed that's what I was

1084
00:47:09,108 --> 00:47:14,029
thinking okay so hopefully now that's

1085
00:47:11,480 --> 00:47:19,030
that solve for you if you care about

1086
00:47:14,030 --> 00:47:26,119
those and i can put here like note kc to

1087
00:47:19,030 --> 00:47:32,810
help keep things aligned with the users

1088
00:47:26,119 --> 00:47:37,700
local conception of day we have the

1089
00:47:32,809 --> 00:47:47,358
operating system floor to feel local

1090
00:47:37,699 --> 00:47:48,439
days here right all right all right so

1091
00:47:47,358 --> 00:47:50,509
i'm going to go ahead and wrap that up

1092
00:47:48,440 --> 00:47:53,300
and like i said that'll be in the

1093
00:47:50,510 --> 00:47:57,080
handmade here repository now so so there

1094
00:47:53,300 --> 00:47:58,070
you go and i think when we just double

1095
00:47:57,079 --> 00:48:01,340
check to make sure we didn't break

1096
00:47:58,070 --> 00:48:03,950
anything we didn't and so that's all in

1097
00:48:01,340 --> 00:48:07,700
there and I will push that out to

1098
00:48:03,949 --> 00:48:11,269
everyone tomorrow all right that's it

1099
00:48:07,699 --> 00:48:15,559
folks thank you for joining me and I

1100
00:48:11,269 --> 00:48:18,108
hope that if you had any you know if you

1101
00:48:15,559 --> 00:48:20,960
had any bills that needed timing that

1102
00:48:18,108 --> 00:48:24,920
will no longer be the case after today

1103
00:48:20,960 --> 00:48:28,510
and I'll see you tomorrow for some

1104
00:48:24,920 --> 00:48:28,510
handed here did you use everyone

