1
00:00:00,030 --> 00:00:08,209
and there we go hello everyone and

2
00:00:04,139 --> 00:00:11,428
welcome to a sleepy morning edition of

3
00:00:08,210 --> 00:00:13,410
handmade hero we are getting started

4
00:00:11,429 --> 00:00:14,759
late today because honestly I was just

5
00:00:13,410 --> 00:00:17,879
too tired so I was drinking my coffee

6
00:00:14,759 --> 00:00:19,949
and we were chatting while trying to get

7
00:00:17,879 --> 00:00:21,868
to the point where our brains might

8
00:00:19,949 --> 00:00:24,210
actually function to do some programming

9
00:00:21,868 --> 00:00:27,300
because we do have some programming to

10
00:00:24,210 --> 00:00:30,300
do today and it is not the absolutely

11
00:00:27,300 --> 00:00:32,520
trivial variety we are going to go in

12
00:00:30,300 --> 00:00:35,579
and modify our stand and collision

13
00:00:32,520 --> 00:00:38,219
detection loop to do some new stuff that

14
00:00:35,579 --> 00:00:40,020
we wanted to do in terms of working with

15
00:00:38,219 --> 00:00:43,800
entities that define the walkable

16
00:00:40,020 --> 00:00:44,879
regions and the ground in the game and

17
00:00:43,799 --> 00:00:48,019
of course the reason we're doing this is

18
00:00:44,878 --> 00:00:50,070
because we want to be able to have rich

19
00:00:48,020 --> 00:00:52,500
three-dimensional constructions in our

20
00:00:50,070 --> 00:00:53,698
game even though it is a 2-d game we

21
00:00:52,500 --> 00:00:55,229
want to be able to do things like rooms

22
00:00:53,698 --> 00:00:57,329
on top of rooms that you can see down

23
00:00:55,229 --> 00:01:00,569
into other rooms from and ledges you can

24
00:00:57,329 --> 00:01:03,030
jump off of and land on lower ones again

25
00:01:00,570 --> 00:01:04,379
this is not necessarily because we feel

26
00:01:03,030 --> 00:01:05,338
like this is crucial to the game design

27
00:01:04,379 --> 00:01:08,130
or anything like that

28
00:01:05,338 --> 00:01:10,679
as is typical on handmade hero it's more

29
00:01:08,129 --> 00:01:13,500
about making sure that we don't shy away

30
00:01:10,680 --> 00:01:15,689
from solving the harder problems in any

31
00:01:13,500 --> 00:01:19,049
particular game space and so the fact

32
00:01:15,688 --> 00:01:22,438
that this is something that is raised by

33
00:01:19,049 --> 00:01:24,689
the type of game I want to tackle it

34
00:01:22,438 --> 00:01:28,109
head-on and show everyone how to tackle

35
00:01:24,688 --> 00:01:30,750
these kinds of problems even if we in

36
00:01:28,109 --> 00:01:32,640
the end don't really decide to use it

37
00:01:30,750 --> 00:01:34,319
very heavily in the actual game design

38
00:01:32,640 --> 00:01:37,829
we still want to make sure that our

39
00:01:34,319 --> 00:01:40,609
engine tech is you know top-notch and I

40
00:01:37,828 --> 00:01:44,188
feel like this is the kind of thing that

41
00:01:40,609 --> 00:01:46,438
you know if I were looking at some kind

42
00:01:44,188 --> 00:01:48,118
of a 2d engine licensable thing right I

43
00:01:46,438 --> 00:01:49,828
want to know that it's got a really nice

44
00:01:48,118 --> 00:01:52,438
robust system that allows me to define

45
00:01:49,828 --> 00:01:53,819
these nice 3d things even in my 2-d game

46
00:01:52,438 --> 00:01:55,648
so that it all worked kind of seamlessly

47
00:01:53,819 --> 00:01:58,679
and feels good and doesn't have janky

48
00:01:55,649 --> 00:02:00,540
corner cases where as a designer when

49
00:01:58,680 --> 00:02:02,430
I'm making my game in it I gotta be like

50
00:02:00,540 --> 00:02:04,409
oh I can't I got a hack all this stuff

51
00:02:02,430 --> 00:02:06,540
in and add all these other special

52
00:02:04,409 --> 00:02:10,319
checks to sort of approximate the fact

53
00:02:06,540 --> 00:02:11,550
that it's gonna be in 3d right so we

54
00:02:10,318 --> 00:02:12,750
kind of talked about this yesterday I

55
00:02:11,550 --> 00:02:15,060
highly recommend watching

56
00:02:12,750 --> 00:02:16,379
yesterday stream before this one if you

57
00:02:15,060 --> 00:02:17,849
haven't already because we kind of

58
00:02:16,379 --> 00:02:22,109
talked about exactly what we wanted to

59
00:02:17,849 --> 00:02:23,909
do as our first attempt at at solving

60
00:02:22,110 --> 00:02:25,290
some of the ground specification

61
00:02:23,909 --> 00:02:27,419
problems because a little bit of a

62
00:02:25,289 --> 00:02:28,919
open-ended sort of thing since there's a

63
00:02:27,419 --> 00:02:30,179
lot of ways you could imagine doing it

64
00:02:28,919 --> 00:02:31,729
and there's questions about you know

65
00:02:30,180 --> 00:02:35,280
what do you think would be the most

66
00:02:31,729 --> 00:02:36,780
effective and so I'm just gonna go ahead

67
00:02:35,280 --> 00:02:37,890
and start programming the stuff that we

68
00:02:36,780 --> 00:02:40,469
said we're going to program yesterday we

69
00:02:37,889 --> 00:02:41,579
added all of the infrastructure we

70
00:02:40,469 --> 00:02:43,259
needed to do that but we haven't

71
00:02:41,580 --> 00:02:44,640
actually done the computation on it yet

72
00:02:43,259 --> 00:02:46,649
and so that's we're gonna be doing today

73
00:02:44,639 --> 00:02:48,539
is writing that computation and then

74
00:02:46,650 --> 00:02:52,500
playing around it to see if it does what

75
00:02:48,539 --> 00:02:53,849
we need it to do so with that in mind I

76
00:02:52,500 --> 00:02:55,800
will just remind everyone that if you

77
00:02:53,849 --> 00:02:57,090
wanted to follow along with the source

78
00:02:55,800 --> 00:03:02,490
code and you have pre-order the game

79
00:02:57,090 --> 00:03:04,709
today is day 80 and which is our second

80
00:03:02,490 --> 00:03:07,080
week of programming write one hour a day

81
00:03:04,709 --> 00:03:09,090
80 hours that's two 40-hour work weeks

82
00:03:07,080 --> 00:03:11,010
we are finishing up our second full week

83
00:03:09,090 --> 00:03:14,580
of programming very exciting here on

84
00:03:11,009 --> 00:03:17,009
handmade hero but that means that if you

85
00:03:14,580 --> 00:03:20,760
have that source codes if you want to

86
00:03:17,009 --> 00:03:21,810
unpack day 79 out of it because that is

87
00:03:20,759 --> 00:03:24,689
the source code that I'm starting with

88
00:03:21,810 --> 00:03:28,140
now and so let's see how sleepy we

89
00:03:24,689 --> 00:03:30,120
actually are let's go ahead and bring up

90
00:03:28,139 --> 00:03:31,829
those collision detection routines and

91
00:03:30,120 --> 00:03:34,289
see if we just stare at them blankly

92
00:03:31,830 --> 00:03:36,410
going I don't know what all these

93
00:03:34,289 --> 00:03:39,269
letters and numbers on the screen mean

94
00:03:36,409 --> 00:03:41,370
or whether we actually whether the

95
00:03:39,269 --> 00:03:44,519
coffee has kicked in to the point where

96
00:03:41,370 --> 00:03:49,980
we actually can write some code that

97
00:03:44,519 --> 00:03:52,400
makes sense alright so the first thing

98
00:03:49,979 --> 00:03:56,250
that I'm going to do is take a look at

99
00:03:52,400 --> 00:03:58,099
you know sort of doing an as simple as

100
00:03:56,250 --> 00:04:00,629
possible modification of the loop

101
00:03:58,099 --> 00:04:01,949
because again we'll probably do some

102
00:04:00,629 --> 00:04:03,569
significant upgrades for this collision

103
00:04:01,949 --> 00:04:05,579
loop in terms of robustness and

104
00:04:03,569 --> 00:04:06,900
performance and everything else so we

105
00:04:05,580 --> 00:04:08,430
don't really care necessarily how

106
00:04:06,900 --> 00:04:09,719
efficient this loop is right now as long

107
00:04:08,430 --> 00:04:12,450
as we think we can make it efficient

108
00:04:09,719 --> 00:04:13,650
later that's fine so really what we want

109
00:04:12,449 --> 00:04:19,409
to do here is take a look at this loop

110
00:04:13,650 --> 00:04:22,879
and go well looking at this loop what

111
00:04:19,410 --> 00:04:24,630
can we do to sort of tackle this this

112
00:04:22,879 --> 00:04:25,740
this thing we were talking about

113
00:04:24,629 --> 00:04:30,209
yesterday

114
00:04:25,740 --> 00:04:32,129
which is this right here right we we

115
00:04:30,209 --> 00:04:34,228
want to turn our loop that was looping

116
00:04:32,129 --> 00:04:37,019
on one type of T value to something that

117
00:04:34,228 --> 00:04:41,310
loops on two type of T values we want to

118
00:04:37,019 --> 00:04:44,129
say alright find the minimum T that is

119
00:04:41,310 --> 00:04:46,949
where we would stop if we were gonna hit

120
00:04:44,129 --> 00:04:47,550
solid entities that's what we're already

121
00:04:46,949 --> 00:04:51,030
doing

122
00:04:47,550 --> 00:04:53,160
let's mint this loop to also have a

123
00:04:51,029 --> 00:04:55,439
second T value which is the maximum

124
00:04:53,160 --> 00:04:58,010
distance you could go in the entities

125
00:04:55,439 --> 00:04:59,939
that are representing empty space right

126
00:04:58,009 --> 00:05:02,668
so we're doing our own kind of

127
00:04:59,939 --> 00:05:05,219
constructive solid geometry here merging

128
00:05:02,668 --> 00:05:08,370
things together so that's what we're

129
00:05:05,220 --> 00:05:11,100
doing and that means we've got a sort of

130
00:05:08,370 --> 00:05:13,350
upgrade this T handling so if you look

131
00:05:11,100 --> 00:05:15,570
here on each iteration of the loop you

132
00:05:13,350 --> 00:05:18,570
can see that we've got the T min and

133
00:05:15,569 --> 00:05:20,909
that T min is exactly what we were

134
00:05:18,569 --> 00:05:23,579
working with in terms of entities

135
00:05:20,910 --> 00:05:26,070
getting hit so what we want to do is

136
00:05:23,579 --> 00:05:27,990
introduce another one here I think T max

137
00:05:26,069 --> 00:05:30,990
which is saying this is how far you

138
00:05:27,990 --> 00:05:33,418
could go maximally and obviously at the

139
00:05:30,990 --> 00:05:35,970
outset T max is going to be equal to

140
00:05:33,418 --> 00:05:38,939
zero because at the outset of a loop we

141
00:05:35,970 --> 00:05:44,250
have no idea how far you could go before

142
00:05:38,939 --> 00:05:50,668
hitting a boundary of one of these solid

143
00:05:44,250 --> 00:05:51,990
objects and so if you know I thought of

144
00:05:50,668 --> 00:05:54,569
something else we're probably gonna have

145
00:05:51,990 --> 00:05:55,620
to add for this and it's something

146
00:05:54,569 --> 00:05:57,209
that's pretty good to talk about so

147
00:05:55,620 --> 00:06:00,569
that's good but anyway we'll get that

148
00:05:57,209 --> 00:06:02,698
second and so what we want to do is we

149
00:06:00,569 --> 00:06:05,569
want to look at the entities now and

150
00:06:02,699 --> 00:06:08,400
obviously we've got some that are that

151
00:06:05,569 --> 00:06:10,228
that are operating on T min already and

152
00:06:08,399 --> 00:06:13,348
that's good that's exactly what we want

153
00:06:10,228 --> 00:06:16,560
but what we want to do now is also take

154
00:06:13,348 --> 00:06:20,969
a look at entities that would affect RT

155
00:06:16,560 --> 00:06:23,399
max so we do cat can collide and we go

156
00:06:20,970 --> 00:06:25,500
through and and you know check the

157
00:06:23,399 --> 00:06:26,788
things that we collide against and in

158
00:06:25,500 --> 00:06:29,939
fact I think we probably want to move

159
00:06:26,788 --> 00:06:32,848
this inside this is interesting

160
00:06:29,939 --> 00:06:36,209
early out I guess but for now I guess

161
00:06:32,848 --> 00:06:39,300
let's go ahead and just

162
00:06:36,209 --> 00:06:41,789
and just do this here so we're gonna go

163
00:06:39,300 --> 00:06:44,160
ahead and add that can collide on the

164
00:06:41,790 --> 00:06:45,900
inside so after we start looping through

165
00:06:44,160 --> 00:06:48,960
the volumes and we're going to do a

166
00:06:45,899 --> 00:06:53,879
volume check I guess the way that I

167
00:06:48,959 --> 00:06:56,759
would say it is when we well now you

168
00:06:53,879 --> 00:06:59,100
know what let's make two checks here

169
00:06:56,759 --> 00:07:01,829
because we sort of have we sort of have

170
00:06:59,100 --> 00:07:03,689
two kinds this this is like our early

171
00:07:01,829 --> 00:07:07,620
out if you will right it's our thing

172
00:07:03,689 --> 00:07:10,259
that says do we need to do any checking

173
00:07:07,620 --> 00:07:11,790
on this guy at all and it feels like we

174
00:07:10,259 --> 00:07:14,009
probably want to leave something like

175
00:07:11,790 --> 00:07:16,530
that in place so I guess we'll actually

176
00:07:14,009 --> 00:07:18,240
just do two checks right we'll see

177
00:07:16,529 --> 00:07:20,609
whether there's any kind of collision

178
00:07:18,240 --> 00:07:22,560
that's going to happen here at all and

179
00:07:20,610 --> 00:07:25,410
then we also need to say later

180
00:07:22,560 --> 00:07:28,800
what kind of collision that actually is

181
00:07:25,410 --> 00:07:33,660
so when we go through this what we would

182
00:07:28,800 --> 00:07:36,629
say is all right if it's something that

183
00:07:33,660 --> 00:07:38,160
we can't collide with in some way then

184
00:07:36,629 --> 00:07:40,709
we go ahead and set up the collision

185
00:07:38,160 --> 00:07:44,370
computation when we do the collision

186
00:07:40,709 --> 00:07:48,149
computation we then actually want to do

187
00:07:44,370 --> 00:07:49,410
these tests differently right so right

188
00:07:48,149 --> 00:07:52,349
now what we're doing is we're testing

189
00:07:49,410 --> 00:07:55,080
the four walls of the bounding box for

190
00:07:52,350 --> 00:07:58,530
whatever the entity is we want to go

191
00:07:55,079 --> 00:08:00,479
ahead and do this so that instead of

192
00:07:58,529 --> 00:08:04,019
looking for the minimum T it's gonna

193
00:08:00,480 --> 00:08:06,629
look for the maximum T and I feel like

194
00:08:04,019 --> 00:08:09,659
probably the easiest way to write that

195
00:08:06,629 --> 00:08:13,709
right now is to have test wall compute

196
00:08:09,660 --> 00:08:18,660
both and then at the end we will just do

197
00:08:13,709 --> 00:08:20,399
whichever one is you know whichever one

198
00:08:18,660 --> 00:08:23,070
is the one we actually wanted to pick

199
00:08:20,399 --> 00:08:26,909
now the problem with that is the test

200
00:08:23,069 --> 00:08:28,349
wall normal stuff that's that's gonna be

201
00:08:26,910 --> 00:08:30,870
a little janky because we don't actually

202
00:08:28,350 --> 00:08:33,060
know we need to know which of the two

203
00:08:30,870 --> 00:08:36,629
whether team in test or team

204
00:08:33,059 --> 00:08:41,250
max tests which one was hit potentially

205
00:08:36,629 --> 00:08:44,120
I guess no that's not true that's not

206
00:08:41,250 --> 00:08:44,120
true I suppose

207
00:08:45,769 --> 00:08:51,350
well you know I mean this is what I'm

208
00:08:48,389 --> 00:08:54,179
thinking we have this test wall call and

209
00:08:51,350 --> 00:08:55,590
inside the test wall call right I'm just

210
00:08:54,179 --> 00:08:58,529
trying to think of how to structure this

211
00:08:55,590 --> 00:09:00,000
the most effectively inside the test

212
00:08:58,529 --> 00:09:02,459
wall called what we're doing is we're

213
00:09:00,000 --> 00:09:07,220
checking to see whether or not the hit

214
00:09:02,460 --> 00:09:09,900
was earlier than it used to be right and

215
00:09:07,220 --> 00:09:12,290
in fact you know this this is that test

216
00:09:09,899 --> 00:09:17,340
right there right saying if this test is

217
00:09:12,289 --> 00:09:20,939
is earlier mm-hmm

218
00:09:17,340 --> 00:09:22,980
then we're going to accept it and if we

219
00:09:20,940 --> 00:09:27,630
want to add a thing here that says if

220
00:09:22,980 --> 00:09:32,519
this test was larger than a Tmax accept

221
00:09:27,629 --> 00:09:34,230
it for the t max hit as well so again I

222
00:09:32,519 --> 00:09:36,720
don't know it seems like to me almost

223
00:09:34,230 --> 00:09:39,269
that we want to actually just have two

224
00:09:36,720 --> 00:09:41,700
different loops here which is kind of

225
00:09:39,269 --> 00:09:45,360
annoying to say the least but I don't

226
00:09:41,700 --> 00:09:47,910
know I mean you know maybe that's maybe

227
00:09:45,360 --> 00:09:50,279
that's just what has to happen so you

228
00:09:47,909 --> 00:09:54,689
know it would look something like this

229
00:09:50,279 --> 00:09:56,490
if we were to do it that way right it

230
00:09:54,690 --> 00:09:57,750
would look something like this where we

231
00:09:56,490 --> 00:10:00,240
have one of them here and we have

232
00:09:57,750 --> 00:10:03,089
exactly the same code duplicated for the

233
00:10:00,240 --> 00:10:04,470
max on the other side now I feel like

234
00:10:03,089 --> 00:10:06,990
that's a little bit ugly so I'm

235
00:10:04,470 --> 00:10:09,060
wondering too if maybe we wouldn't turn

236
00:10:06,990 --> 00:10:14,009
this into something that just loops over

237
00:10:09,059 --> 00:10:16,709
data right which seems kind of plausible

238
00:10:14,009 --> 00:10:19,679
maybe I'll I'll give that a shot first

239
00:10:16,710 --> 00:10:23,339
so let's let's you know the way that I'm

240
00:10:19,679 --> 00:10:25,620
thinking about it is basically this this

241
00:10:23,339 --> 00:10:28,410
test wall we've sort of manually made

242
00:10:25,620 --> 00:10:31,830
this a loop over data by repeating the

243
00:10:28,409 --> 00:10:35,039
code and then plugging the data in right

244
00:10:31,830 --> 00:10:37,710
in each individual case and so what I

245
00:10:35,039 --> 00:10:40,829
could do is is loft that into some

246
00:10:37,710 --> 00:10:42,780
actual data right and then just do a for

247
00:10:40,830 --> 00:10:44,759
I loop over it and that would give me

248
00:10:42,779 --> 00:10:47,169
the opportunity to do that for I loop in

249
00:10:44,759 --> 00:10:50,039
two different ways without having

250
00:10:47,169 --> 00:10:52,389
it'd be particularly problematic right

251
00:10:50,039 --> 00:10:53,558
and again since we don't super care

252
00:10:52,389 --> 00:10:57,278
about the performance of the screw team

253
00:10:53,558 --> 00:10:58,600
at the moment that is probably fine we

254
00:10:57,278 --> 00:11:00,278
don't have to think too hard about it

255
00:10:58,600 --> 00:11:01,720
so I'm kind of want to lean towards the

256
00:11:00,278 --> 00:11:05,798
thing that's gonna be the easiest to

257
00:11:01,720 --> 00:11:09,189
type in so let's let's try that right

258
00:11:05,798 --> 00:11:14,139
let's go ahead and say okay if zero this

259
00:11:09,188 --> 00:11:15,849
out seems like a good idea if zero this

260
00:11:14,139 --> 00:11:17,139
out and let's turn this into an actual

261
00:11:15,850 --> 00:11:20,168
for loop so if we were gonna turn this

262
00:11:17,139 --> 00:11:23,859
into a for loop and it looks something

263
00:11:20,168 --> 00:11:26,558
like this wall index equals zero wall

264
00:11:23,859 --> 00:11:29,168
index is less than a rate count walls

265
00:11:26,558 --> 00:11:31,480
you know something like this wall index

266
00:11:29,168 --> 00:11:33,759
plus plus and then we're just gonna do

267
00:11:31,480 --> 00:11:38,789
this once I guess that's technically up

268
00:11:33,759 --> 00:11:43,778
there we're just gonna do that like so

269
00:11:38,789 --> 00:11:46,688
and each wall so I don't know what we'll

270
00:11:43,778 --> 00:11:50,698
call this a test wall I'm not sure

271
00:11:46,688 --> 00:11:54,368
each wall we will loop through walls

272
00:11:50,698 --> 00:11:57,248
plus wall index and we will just grab

273
00:11:54,369 --> 00:12:01,389
out of that all of these values that we

274
00:11:57,249 --> 00:12:03,040
were going to use previously right so

275
00:12:01,389 --> 00:12:08,798
we'll basically say all right yeah we've

276
00:12:03,039 --> 00:12:11,308
got you know the wall min corner X so I

277
00:12:08,798 --> 00:12:14,438
guess let's just do that the wall

278
00:12:11,308 --> 00:12:16,178
relative what are these what are these

279
00:12:14,438 --> 00:12:18,998
actually in fact they're just these so

280
00:12:16,178 --> 00:12:21,999
you know it'd be this right so there we

281
00:12:18,999 --> 00:12:24,040
go we'd get rid of a team in but

282
00:12:21,999 --> 00:12:31,379
everything else would just be in there

283
00:12:24,039 --> 00:12:36,519
and so the test wall is just wall X wall

284
00:12:31,379 --> 00:12:41,379
this is no well X well real X well real

285
00:12:36,519 --> 00:12:43,239
y wall player Delta X wall

286
00:12:41,379 --> 00:12:45,239
there Delta Y and maybe I'll just change

287
00:12:43,239 --> 00:12:52,389
this to be calling Delta X and Delta Y

288
00:12:45,239 --> 00:12:54,519
so on and then got the min Y and the max

289
00:12:52,389 --> 00:12:56,799
lab right

290
00:12:54,519 --> 00:12:57,789
and so we'll call that test well

291
00:12:56,799 --> 00:12:59,620
function like that

292
00:12:57,789 --> 00:13:04,059
and now that allows us today to drive

293
00:12:59,620 --> 00:13:05,409
this this call so that we can you know

294
00:13:04,059 --> 00:13:07,049
and this is the exact same here test

295
00:13:05,409 --> 00:13:09,759
well normal would be equal to wall

296
00:13:07,049 --> 00:13:11,379
normal that allows me to just build a

297
00:13:09,759 --> 00:13:12,399
data structure that will allow this loop

298
00:13:11,379 --> 00:13:13,870
to drive and then we don't have this

299
00:13:12,399 --> 00:13:15,879
code spammed out here so if we want to

300
00:13:13,870 --> 00:13:20,799
duplicate this loop twice it's not such

301
00:13:15,879 --> 00:13:24,909
a big deal right so that also allows me

302
00:13:20,799 --> 00:13:26,649
to move this inside potentially since we

303
00:13:24,909 --> 00:13:28,719
want to do this check two different ways

304
00:13:26,649 --> 00:13:31,149
one with the min confirmation and one

305
00:13:28,720 --> 00:13:33,370
with the Max confirmation so I'm gonna

306
00:13:31,149 --> 00:13:36,159
go ahead and do that as well although I

307
00:13:33,370 --> 00:13:38,500
guess I'll do it in two steps to make

308
00:13:36,159 --> 00:13:41,889
debugging a little bit easier so let's

309
00:13:38,500 --> 00:13:44,320
go ahead and and now turn this into data

310
00:13:41,889 --> 00:13:47,110
so we now want to take all of these

311
00:13:44,320 --> 00:13:50,140
things that used to be actually spammed

312
00:13:47,110 --> 00:13:55,570
out as individual calls here and make

313
00:13:50,139 --> 00:13:58,689
them into data all right like so so

314
00:13:55,570 --> 00:14:02,950
here's all my values minus the min test

315
00:13:58,690 --> 00:14:04,840
so that's gone right and I guess I

316
00:14:02,950 --> 00:14:06,129
should I think I accidentally removed

317
00:14:04,840 --> 00:14:10,180
that entirely

318
00:14:06,129 --> 00:14:13,269
so in here after that Delta Y we do need

319
00:14:10,179 --> 00:14:16,839
T min to be here so we want T min test

320
00:14:13,269 --> 00:14:18,789
to be in there as well so there we go so

321
00:14:16,840 --> 00:14:20,590
that's really all I'm talking about here

322
00:14:18,789 --> 00:14:22,360
right I guess we need that wall normal

323
00:14:20,590 --> 00:14:26,170
as well so let's grab that and stick

324
00:14:22,360 --> 00:14:29,470
that in there so so now we've got an

325
00:14:26,169 --> 00:14:30,759
easy way today to drive this and that's

326
00:14:29,470 --> 00:14:32,830
a good technique especially in

327
00:14:30,759 --> 00:14:35,289
situations like this where you know our

328
00:14:32,830 --> 00:14:37,240
primary concern here is not the

329
00:14:35,289 --> 00:14:38,799
performance right now so we don't really

330
00:14:37,240 --> 00:14:40,629
have to worry too much about how we

331
00:14:38,799 --> 00:14:42,729
structure this we just want to make sure

332
00:14:40,629 --> 00:14:44,860
we structure it in a way that's you know

333
00:14:42,730 --> 00:14:47,350
reasonable and more more or less easy

334
00:14:44,860 --> 00:14:49,149
for us to modify right now and then we

335
00:14:47,350 --> 00:14:51,370
can kind of go through later once

336
00:14:49,149 --> 00:14:53,379
everything's said and done and we're in

337
00:14:51,370 --> 00:14:55,509
a more performance oriented mindset we

338
00:14:53,379 --> 00:14:57,460
can sort of attack this later on because

339
00:14:55,509 --> 00:14:59,259
obviously there's no difference between

340
00:14:57,460 --> 00:15:01,450
these two things if later we needed to

341
00:14:59,259 --> 00:15:05,899
pull this back out into some more

342
00:15:01,450 --> 00:15:08,210
explicit code we could always do that so

343
00:15:05,899 --> 00:15:11,079
all right so there's our fault four

344
00:15:08,210 --> 00:15:14,180
walls and here's our wall testing and

345
00:15:11,080 --> 00:15:17,170
and honestly I think that may just work

346
00:15:14,179 --> 00:15:20,719
all we need to do now is actually define

347
00:15:17,169 --> 00:15:24,740
this test wall and that's that's going

348
00:15:20,720 --> 00:15:31,250
to be exactly this stuff right like so

349
00:15:24,740 --> 00:15:36,230
so we we have our X we have our rel X we

350
00:15:31,250 --> 00:15:41,629
have our rel Y we have our Delta X we

351
00:15:36,230 --> 00:15:46,970
have our Delta Y we have our min and Max

352
00:15:41,629 --> 00:15:49,580
and that's it we have two videos oh

353
00:15:46,970 --> 00:15:51,589
right and we need to remember our normal

354
00:15:49,580 --> 00:15:54,560
which is not something that's actually

355
00:15:51,589 --> 00:15:57,410
being passed so that's actually normal

356
00:15:54,559 --> 00:16:00,319
there we go and so let's make sure that

357
00:15:57,409 --> 00:16:02,600
that is still working at all right so

358
00:16:00,320 --> 00:16:07,940
that appears to be working just fine so

359
00:16:02,600 --> 00:16:10,250
that's all good no problems there all

360
00:16:07,940 --> 00:16:14,330
right and yeah everything's still good

361
00:16:10,250 --> 00:16:17,269
we can walk through things perfect so

362
00:16:14,330 --> 00:16:20,420
let's take this the next step further

363
00:16:17,269 --> 00:16:21,850
let's move test wall into there so that

364
00:16:20,419 --> 00:16:25,159
we're not actually calling it any more

365
00:16:21,850 --> 00:16:28,339
so that we actually just have this

366
00:16:25,159 --> 00:16:31,759
called directly embedded so what that's

367
00:16:28,339 --> 00:16:36,050
going to look like right is this so

368
00:16:31,759 --> 00:16:39,740
inside here we're going to we're going

369
00:16:36,049 --> 00:16:41,629
to actually do this case inside here

370
00:16:39,740 --> 00:16:44,620
right that's what we were doing before

371
00:16:41,629 --> 00:16:47,750
we're gonna get rid of all of this and

372
00:16:44,620 --> 00:16:49,850
we can actually loft some things out

373
00:16:47,750 --> 00:16:51,379
pretty trivially here I guess all we

374
00:16:49,850 --> 00:16:55,129
really need to do is just make these

375
00:16:51,379 --> 00:16:57,169
operate off of that pointer all right so

376
00:16:55,129 --> 00:17:00,289
I'm just gonna go ahead and do that so

377
00:16:57,169 --> 00:17:04,180
all the wall stuff is is this way

378
00:17:00,289 --> 00:17:04,180
there we go and

379
00:17:06,119 --> 00:17:15,929
tea results tea results is it's just a

380
00:17:12,269 --> 00:17:18,000
thing we computed and then team min is

381
00:17:15,930 --> 00:17:23,370
this guy right here all right so this is

382
00:17:18,000 --> 00:17:25,740
T min test right like so and we don't

383
00:17:23,369 --> 00:17:28,859
have to do pointers to it anymore we can

384
00:17:25,740 --> 00:17:34,410
just use the actual value so T min test

385
00:17:28,859 --> 00:17:36,839
like so I think that's most of what we

386
00:17:34,410 --> 00:17:43,050
need to do there so if there's our boobs

387
00:17:36,839 --> 00:17:46,199
our wall there and there and that looks

388
00:17:43,049 --> 00:17:48,058
good so let's see okay so now we've

389
00:17:46,200 --> 00:17:51,200
we've basically collapsed all that down

390
00:17:48,058 --> 00:17:54,599
into a little loop it looks pretty nice

391
00:17:51,200 --> 00:17:59,190
so here we go and that all seems to

392
00:17:54,599 --> 00:18:00,928
still work pretty good go out here test

393
00:17:59,190 --> 00:18:04,590
against all these guys everything looks

394
00:18:00,929 --> 00:18:08,130
good yeah so pretty happy with that

395
00:18:04,589 --> 00:18:11,099
we can still can we still shoot oh man

396
00:18:08,130 --> 00:18:15,000
did we break our did we break our hit

397
00:18:11,099 --> 00:18:17,219
testing for against the Monstar I feel

398
00:18:15,000 --> 00:18:19,710
like we did right it's not doing that

399
00:18:17,220 --> 00:18:21,000
anymore I wonder that doesn't have

400
00:18:19,710 --> 00:18:22,529
anything to do with what we were doing

401
00:18:21,000 --> 00:18:24,679
does it we just didn't test that in a

402
00:18:22,529 --> 00:18:24,678
while

403
00:18:25,099 --> 00:18:32,250
della check yeah so we got out we got a

404
00:18:30,900 --> 00:18:33,660
bug there we should take a look at

405
00:18:32,250 --> 00:18:35,160
someone remind me to take a look at that

406
00:18:33,660 --> 00:18:36,090
it doesn't really matter at this point

407
00:18:35,160 --> 00:18:37,110
because like I said we're still playing

408
00:18:36,089 --> 00:18:39,089
with all this stuff but we should

409
00:18:37,109 --> 00:18:42,000
it probably has something to do with the

410
00:18:39,089 --> 00:18:43,709
fact that we have changed the 3d ness of

411
00:18:42,000 --> 00:18:46,259
everything and maybe that sword no

412
00:18:43,710 --> 00:18:48,600
longer overlaps the guy when it passes

413
00:18:46,259 --> 00:18:53,160
through or something like that but all

414
00:18:48,599 --> 00:18:55,740
right ignoring that moving on so what we

415
00:18:53,160 --> 00:19:00,120
want to do here is also have something

416
00:18:55,740 --> 00:19:02,640
where we test you know in entities that

417
00:19:00,119 --> 00:19:04,469
we would consider inside entities like

418
00:19:02,640 --> 00:19:05,960
those empty space entities we want to do

419
00:19:04,470 --> 00:19:08,279
this testing a little bit differently so

420
00:19:05,960 --> 00:19:10,500
we would basically say you know if we're

421
00:19:08,279 --> 00:19:13,980
testing for an inside entity we do this

422
00:19:10,500 --> 00:19:15,990
right and if we're testing for opaque

423
00:19:13,980 --> 00:19:17,880
when we do this other thing right so

424
00:19:15,990 --> 00:19:19,849
let's go ahead and introduce a second

425
00:19:17,880 --> 00:19:22,970
loop here that we're going to do for

426
00:19:19,849 --> 00:19:26,058
things that are inside entities and that

427
00:19:22,970 --> 00:19:28,160
would be that would be a double if

428
00:19:26,058 --> 00:19:29,389
actually because we have to see we only

429
00:19:28,160 --> 00:19:35,840
do it for things that we're currently

430
00:19:29,390 --> 00:19:37,669
inside if I if I if I think about it

431
00:19:35,839 --> 00:19:39,980
correctly right you you want to find the

432
00:19:37,669 --> 00:19:42,288
maximum T for the for the empty space

433
00:19:39,980 --> 00:19:44,240
entities that you're actually inside so

434
00:19:42,288 --> 00:19:45,980
here's that secondary type of test and

435
00:19:44,240 --> 00:19:49,009
really the difference here is that

436
00:19:45,980 --> 00:19:51,710
instead of T min test we're going to be

437
00:19:49,009 --> 00:19:57,740
using T max test so this is T max test

438
00:19:51,710 --> 00:19:59,120
this is T max test like so and if we

439
00:19:57,740 --> 00:20:02,120
were doing it this way we need to

440
00:19:59,119 --> 00:20:04,219
reverse the sense of these so basically

441
00:20:02,119 --> 00:20:07,908
we want to make sure that whatever the

442
00:20:04,220 --> 00:20:09,769
result is is greater than zero and then

443
00:20:07,909 --> 00:20:15,890
we want to say all right whatever

444
00:20:09,769 --> 00:20:18,019
do me whatever this max is we want to

445
00:20:15,890 --> 00:20:21,740
accept at any time that the t max test

446
00:20:18,019 --> 00:20:23,119
is less than the T results so if we were

447
00:20:21,740 --> 00:20:23,990
going to have a hit that was further

448
00:20:23,119 --> 00:20:25,308
away now

449
00:20:23,990 --> 00:20:26,659
before we were testing for hits that

450
00:20:25,308 --> 00:20:28,579
were closer now we want to test for hits

451
00:20:26,659 --> 00:20:30,830
that are further away than the best one

452
00:20:28,579 --> 00:20:33,529
we've got so far and then when we come

453
00:20:30,829 --> 00:20:34,939
in here I don't know what we would want

454
00:20:33,529 --> 00:20:36,168
to do epsilon Y is the reason we had

455
00:20:34,940 --> 00:20:37,870
epsilon is before us to stop you a

456
00:20:36,169 --> 00:20:42,549
little bit before you got to the wall

457
00:20:37,869 --> 00:20:45,408
and in this particular case I don't know

458
00:20:42,548 --> 00:20:47,839
how much we care about that exactly we

459
00:20:45,409 --> 00:20:50,030
do have a bit of a problem which is you

460
00:20:47,839 --> 00:20:54,230
are never allowed to be outside of these

461
00:20:50,029 --> 00:20:56,359
and so I feel like you know probably

462
00:20:54,230 --> 00:21:01,069
what we want to do is you want to stop

463
00:20:56,359 --> 00:21:04,609
you exactly on one and perhaps do you

464
00:21:01,069 --> 00:21:06,349
know like a fix up at afterwards - to

465
00:21:04,609 --> 00:21:07,579
make sure that your Oh ease inside right

466
00:21:06,349 --> 00:21:11,000
we want to we want to keep you

467
00:21:07,579 --> 00:21:13,158
constrained to the outside to the inside

468
00:21:11,000 --> 00:21:17,240
of these as much as possible so for now

469
00:21:13,159 --> 00:21:20,120
we're just gonna say that this is going

470
00:21:17,240 --> 00:21:21,620
to be T results like so we've already

471
00:21:20,119 --> 00:21:23,779
tested it against zero so we know it's

472
00:21:21,619 --> 00:21:28,189
not a hit that's behind us so that seems

473
00:21:23,779 --> 00:21:30,500
fine and test well normal in this case

474
00:21:28,190 --> 00:21:32,058
we have two of these so we're gonna have

475
00:21:30,500 --> 00:21:34,368
a test wall we're normal

476
00:21:32,058 --> 00:21:37,908
the min side can attest while normal on

477
00:21:34,368 --> 00:21:40,158
the Mac side right we want to track both

478
00:21:37,909 --> 00:21:44,989
of those so we have testable normal min

479
00:21:40,159 --> 00:21:49,119
and Max and we've got our our team in

480
00:21:44,989 --> 00:21:53,509
test and we've got our T max test which

481
00:21:49,118 --> 00:21:55,728
which like guess it's just zero yeah to

482
00:21:53,509 --> 00:21:58,368
start with so there we go we come

483
00:21:55,729 --> 00:22:00,469
through here we do our t max test we now

484
00:21:58,368 --> 00:22:03,288
have that computed and so at the end of

485
00:22:00,469 --> 00:22:06,409
this we actually know both of these I

486
00:22:03,288 --> 00:22:09,338
suppose for these two things I don't

487
00:22:06,409 --> 00:22:13,009
really know exactly what we want to do

488
00:22:09,338 --> 00:22:16,278
it's a good question in terms of these

489
00:22:13,009 --> 00:22:17,598
guys I suppose for now let's let's do

490
00:22:16,278 --> 00:22:20,210
this hand like separately since it's

491
00:22:17,598 --> 00:22:22,989
going to be pretty different probably so

492
00:22:20,210 --> 00:22:24,769
this is the case where we were you know

493
00:22:22,989 --> 00:22:27,798
hitting something that was going to stop

494
00:22:24,769 --> 00:22:29,598
us this is the case where we're hitting

495
00:22:27,798 --> 00:22:31,608
something that isn't going to stop us

496
00:22:29,598 --> 00:22:39,168
that's allowing us to move so assuming

497
00:22:31,608 --> 00:22:40,460
that we hit it we now would say well we

498
00:22:39,169 --> 00:22:43,669
don't need to do the speculative

499
00:22:40,460 --> 00:22:49,369
collision stuff probably we do need to

500
00:22:43,669 --> 00:22:51,859
say that our are hit well normal max is

501
00:22:49,368 --> 00:22:55,189
equal to our test well our max our hit

502
00:22:51,858 --> 00:22:58,759
entity max is going to be equal to our

503
00:22:55,190 --> 00:23:01,489
test entity and our t max is going to be

504
00:22:58,759 --> 00:23:05,088
t max test right

505
00:23:01,489 --> 00:23:06,679
and similarly our roll normal min here

506
00:23:05,088 --> 00:23:10,278
is going to be equal to our testable

507
00:23:06,679 --> 00:23:13,339
normal min now I guess technically so

508
00:23:10,278 --> 00:23:16,179
since we only do one of these loops

509
00:23:13,338 --> 00:23:18,558
I suppose we actually don't need to do

510
00:23:16,179 --> 00:23:22,099
we don't need to have two test sets

511
00:23:18,558 --> 00:23:24,038
right since we can get rid of this right

512
00:23:22,098 --> 00:23:26,558
this is gone

513
00:23:24,038 --> 00:23:31,128
this could really we could just leave it

514
00:23:26,558 --> 00:23:33,918
as test well normal right and in fact

515
00:23:31,128 --> 00:23:35,898
this this that goes inside the secondary

516
00:23:33,919 --> 00:23:37,940
loop so we could just say all right test

517
00:23:35,898 --> 00:23:40,728
of all normal that's just going to be

518
00:23:37,940 --> 00:23:43,419
test well normal right no big deal test

519
00:23:40,729 --> 00:23:49,558
roll normal test well normal

520
00:23:43,419 --> 00:23:53,019
and this guy can do it the same way so

521
00:23:49,558 --> 00:23:55,028
it's really only that outer one that

522
00:23:53,019 --> 00:23:57,848
actually needs to be specified as both

523
00:23:55,028 --> 00:24:00,368
the min and the max all right so we've

524
00:23:57,848 --> 00:24:06,249
got test run or oh man test well my mum

525
00:24:00,368 --> 00:24:09,069
acts like so I and at the end now we

526
00:24:06,249 --> 00:24:10,298
just have to do some thinking about

527
00:24:09,069 --> 00:24:13,598
what's actually going to happen

528
00:24:10,298 --> 00:24:15,700
depending on which one of the this is

529
00:24:13,598 --> 00:24:18,158
and oh I right I needed to hit under the

530
00:24:15,700 --> 00:24:27,819
min and Max as well so that comes up

531
00:24:18,159 --> 00:24:30,489
here's Kennedy Ben max so hmm I guess

532
00:24:27,819 --> 00:24:32,348
what we'd want to do now is we want to

533
00:24:30,489 --> 00:24:35,798
see which of our team ends with sooner

534
00:24:32,348 --> 00:24:41,378
right so what we want to do is say

535
00:24:35,798 --> 00:24:44,440
something like you know pick one here so

536
00:24:41,378 --> 00:24:47,798
we want to say if our team min is less

537
00:24:44,440 --> 00:24:50,739
than our t max that means that we hit

538
00:24:47,798 --> 00:24:52,719
somebody who was opaque and he stopped

539
00:24:50,739 --> 00:24:55,960
us right a solid entity stopped us from

540
00:24:52,719 --> 00:24:57,700
moving so if that's the case then what

541
00:24:55,960 --> 00:24:59,798
we would like to do is we want to

542
00:24:57,700 --> 00:25:02,169
introduce here because T min is going to

543
00:24:59,798 --> 00:25:03,579
be used to compute the actual motion we

544
00:25:02,169 --> 00:25:06,909
want to introduce this thing here which

545
00:25:03,579 --> 00:25:11,138
is a key stop something like that right

546
00:25:06,909 --> 00:25:12,580
and so our key stop is something that

547
00:25:11,138 --> 00:25:16,418
we're going to initialize depending on

548
00:25:12,579 --> 00:25:18,668
which side of this we take right like

549
00:25:16,419 --> 00:25:20,649
that so if the team in is less than the

550
00:25:18,669 --> 00:25:23,799
T max then the teet the stopping value

551
00:25:20,648 --> 00:25:25,058
is the minimum and if the T stop if the

552
00:25:23,798 --> 00:25:27,519
other way around then the T stop is

553
00:25:25,058 --> 00:25:30,249
whatever the maximum when we hit is and

554
00:25:27,519 --> 00:25:31,719
that determines what our can't hit NB is

555
00:25:30,249 --> 00:25:34,419
I guess we'll call it our stop Kennedy

556
00:25:31,719 --> 00:25:37,269
well no our he identities fine right

557
00:25:34,419 --> 00:25:42,330
so our Kida t equals our hit entity min

558
00:25:37,269 --> 00:25:47,278
in this case and our wall normal equals

559
00:25:42,329 --> 00:25:47,278
our wall normal min right

560
00:25:47,490 --> 00:25:53,259
like so max max max and those things can

561
00:25:51,880 --> 00:25:56,590
now move down

562
00:25:53,259 --> 00:26:01,329
I believe meaning that for example hit

563
00:25:56,589 --> 00:26:02,829
entity was and and and well normal those

564
00:26:01,329 --> 00:26:04,389
used to be defined up at the top and now

565
00:26:02,829 --> 00:26:06,490
they're gonna be defined here because

566
00:26:04,390 --> 00:26:10,900
they actually this is where they

567
00:26:06,490 --> 00:26:12,640
actually get used like so on and so that

568
00:26:10,900 --> 00:26:14,560
just allows us to take whichever one of

569
00:26:12,640 --> 00:26:15,910
those we want now we haven't filled in

570
00:26:14,559 --> 00:26:17,950
these two ifs here we're gonna have to

571
00:26:15,910 --> 00:26:21,759
do that I guess we're gonna have to do

572
00:26:17,950 --> 00:26:24,640
that right away let's just do this for

573
00:26:21,759 --> 00:26:26,289
now there we go so it looks like we're

574
00:26:24,640 --> 00:26:29,980
compiling fine we just need these actual

575
00:26:26,289 --> 00:26:31,869
tests so this one right here we have to

576
00:26:29,980 --> 00:26:33,880
test for overlap and this one right here

577
00:26:31,869 --> 00:26:37,479
we have to test to see whether the

578
00:26:33,880 --> 00:26:39,760
entity is an empty space entity and so

579
00:26:37,480 --> 00:26:41,769
we have a way very trivially to test if

580
00:26:39,759 --> 00:26:43,599
it's an empty space entity if just is

581
00:26:41,769 --> 00:26:46,420
whether or not this traversable set flag

582
00:26:43,599 --> 00:26:48,909
is set so basically if this test entity

583
00:26:46,420 --> 00:26:51,759
has the traversable size flag set then

584
00:26:48,910 --> 00:26:56,410
we know we're doing basically a maximum

585
00:26:51,759 --> 00:26:58,809
extents movement test right and then

586
00:26:56,410 --> 00:27:00,370
what we want to do is before we test

587
00:26:58,809 --> 00:27:03,009
against this guy we have to verify that

588
00:27:00,369 --> 00:27:05,799
you were actually inside him right you

589
00:27:03,009 --> 00:27:09,309
have to have been inside the bounding

590
00:27:05,799 --> 00:27:11,589
box in order to do the move and so what

591
00:27:09,309 --> 00:27:14,349
we want to do is is sort of take our

592
00:27:11,589 --> 00:27:18,490
overlap testing that we were doing here

593
00:27:14,349 --> 00:27:20,349
we want that overlap testing to occur

594
00:27:18,490 --> 00:27:21,640
inside the loop and what's interesting

595
00:27:20,349 --> 00:27:23,799
about that is this was actually

596
00:27:21,640 --> 00:27:27,580
something that we probably should have

597
00:27:23,799 --> 00:27:29,980
been doing in the loop anyway where we

598
00:27:27,579 --> 00:27:33,519
are handling the overlap in a more

599
00:27:29,980 --> 00:27:35,920
intelligent way so it's kind of

600
00:27:33,519 --> 00:27:40,420
something that probably is good for us

601
00:27:35,920 --> 00:27:43,660
to have been doing regardless and we do

602
00:27:40,420 --> 00:27:48,370
have a little bit of an oddity there

603
00:27:43,660 --> 00:27:51,009
which is that we kind of want all of the

604
00:27:48,369 --> 00:27:53,459
things that you're overlapping at any

605
00:27:51,009 --> 00:27:56,289
given time to have an effect on you and

606
00:27:53,460 --> 00:27:58,470
again this is just you know the the

607
00:27:56,289 --> 00:28:00,908
complexity of really doing motion

608
00:27:58,470 --> 00:28:02,348
correctly in games is it's

609
00:28:00,909 --> 00:28:04,059
it's very very complicated as you've

610
00:28:02,348 --> 00:28:04,598
seen so far we've spent a bunch of time

611
00:28:04,058 --> 00:28:06,308
on it

612
00:28:04,598 --> 00:28:10,019
way more time than we spend on a lot of

613
00:28:06,308 --> 00:28:14,319
different things that we had to spec out

614
00:28:10,019 --> 00:28:16,118
but I don't really want to stop pushing

615
00:28:14,319 --> 00:28:18,579
on a lot of these things because usually

616
00:28:16,118 --> 00:28:19,868
what happens in any particular piece of

617
00:28:18,579 --> 00:28:21,848
code especially when you're working on

618
00:28:19,868 --> 00:28:25,329
something that's relatively complicated

619
00:28:21,848 --> 00:28:27,189
is things get very complex and then you

620
00:28:25,329 --> 00:28:30,989
start to find ways in which they can

621
00:28:27,190 --> 00:28:33,879
simplify down right and so you know

622
00:28:30,989 --> 00:28:35,889
sometimes proliferating out and really

623
00:28:33,878 --> 00:28:38,199
like handling or all the edge cases and

624
00:28:35,888 --> 00:28:39,728
thinking it through and improving the

625
00:28:38,200 --> 00:28:42,149
capabilities of something even though

626
00:28:39,729 --> 00:28:46,869
that ends up with this big messy

627
00:28:42,148 --> 00:28:48,518
nightmare yeah in some cases that's

628
00:28:46,868 --> 00:28:51,158
actually not something to be too afraid

629
00:28:48,519 --> 00:28:53,589
of as long as you are then willing to go

630
00:28:51,159 --> 00:28:55,269
through and go all right now that we've

631
00:28:53,589 --> 00:28:59,199
seen the nightmare how do we turn it

632
00:28:55,269 --> 00:29:01,450
into a pleasant dream right and and so

633
00:28:59,200 --> 00:29:03,429
that's what you know happens a lot of

634
00:29:01,450 --> 00:29:06,460
times in code if you push through it and

635
00:29:03,429 --> 00:29:09,879
so I would encourage people not to be

636
00:29:06,460 --> 00:29:12,340
scared about how ugly some of the stuff

637
00:29:09,878 --> 00:29:14,079
is to handle and you know don't just go

638
00:29:12,339 --> 00:29:17,470
oh let's just go do something simpler

639
00:29:14,079 --> 00:29:19,960
because a lot of times in the end what

640
00:29:17,470 --> 00:29:21,879
we come up with could might actually be

641
00:29:19,960 --> 00:29:23,889
quite simple like we may be able to then

642
00:29:21,878 --> 00:29:25,238
reduce down reduce down reduce down and

643
00:29:23,888 --> 00:29:28,089
end up with something that is actually

644
00:29:25,239 --> 00:29:30,399
pretty simple in the end it but it took

645
00:29:28,089 --> 00:29:31,720
us that sort of circuitous route to get

646
00:29:30,398 --> 00:29:33,728
there because we have to see all the

647
00:29:31,720 --> 00:29:36,098
complexity first before we can have the

648
00:29:33,729 --> 00:29:37,359
insights that make things simpler and

649
00:29:36,098 --> 00:29:39,308
we've seen that happen already on the

650
00:29:37,358 --> 00:29:41,079
stream a couple times in other places so

651
00:29:39,308 --> 00:29:43,298
that's why I would always encourage you

652
00:29:41,079 --> 00:29:46,028
to push through that do actually do go

653
00:29:43,298 --> 00:29:48,128
solve the problems no matter how janky

654
00:29:46,028 --> 00:29:50,108
your solutions end up being because once

655
00:29:48,128 --> 00:29:52,509
you have them all solved that puts you

656
00:29:50,108 --> 00:29:55,388
in a really good position to come up

657
00:29:52,509 --> 00:29:58,659
with more clever streamlined solutions

658
00:29:55,388 --> 00:29:59,798
that still get all the benefits that

659
00:29:58,659 --> 00:30:01,269
you're at a perfect point to be able to

660
00:29:59,798 --> 00:30:03,190
do that once you've seen it all right

661
00:30:01,269 --> 00:30:05,048
and before you've actually gotten solve

662
00:30:03,190 --> 00:30:09,038
them all you don't really have the

663
00:30:05,048 --> 00:30:11,579
necessary sort of perspective and of how

664
00:30:09,038 --> 00:30:14,588
everything really works in practice

665
00:30:11,579 --> 00:30:14,879
so yeah so we want to do here is take a

666
00:30:14,588 --> 00:30:16,409
look

667
00:30:14,880 --> 00:30:17,930
you know let's take a little step back

668
00:30:16,410 --> 00:30:21,779
and just think about that overlapping

669
00:30:17,930 --> 00:30:23,250
bit just a little a little bit so as we

670
00:30:21,779 --> 00:30:26,639
go through our iterations on each

671
00:30:23,250 --> 00:30:29,609
iteration right we are doing this

672
00:30:26,640 --> 00:30:32,220
overlap testing and we're seeing you

673
00:30:29,609 --> 00:30:34,500
know we've got you know what what what

674
00:30:32,220 --> 00:30:36,539
entities are we inside right what what

675
00:30:34,500 --> 00:30:39,569
space filling entities are we re

676
00:30:36,539 --> 00:30:42,539
enclosed by at at any given time and

677
00:30:39,569 --> 00:30:47,269
those entities that we are enclosed in

678
00:30:42,539 --> 00:30:49,799
we want to take a look at those sort of

679
00:30:47,269 --> 00:30:59,190
how should I say this we want to take a

680
00:30:49,799 --> 00:31:00,359
look at those in sort of also a well so

681
00:30:59,190 --> 00:31:02,549
as I think about this more I'm thinking

682
00:31:00,359 --> 00:31:04,859
maybe you don't want to double up that

683
00:31:02,549 --> 00:31:06,839
notion though look maybe we don't ever

684
00:31:04,859 --> 00:31:09,000
really want to say that something that

685
00:31:06,839 --> 00:31:10,619
encloses a space can also be a trigger

686
00:31:09,000 --> 00:31:11,910
we may want those to actually be

687
00:31:10,619 --> 00:31:13,619
separate because they mean everything so

688
00:31:11,910 --> 00:31:15,990
I guess I'll put that aside for now I

689
00:31:13,619 --> 00:31:18,750
guess really all we do need to do is

690
00:31:15,990 --> 00:31:21,960
just pull out oops what did i do did I

691
00:31:18,750 --> 00:31:23,670
hit no I did all right fine

692
00:31:21,960 --> 00:31:25,910
I guess really all we do need to do is

693
00:31:23,670 --> 00:31:28,769
pull out the notion of the overlap test

694
00:31:25,910 --> 00:31:29,700
into something else so that we don't

695
00:31:28,769 --> 00:31:32,000
have to do it multiple times so

696
00:31:29,700 --> 00:31:37,680
basically this this stuff right here

697
00:31:32,000 --> 00:31:40,619
this this testing that's something that

698
00:31:37,680 --> 00:31:42,660
we probably want to to loft out so let's

699
00:31:40,619 --> 00:31:43,500
go ahead and and nerf this for one

700
00:31:42,660 --> 00:31:45,750
second

701
00:31:43,500 --> 00:31:48,750
so that I can pull out the other test

702
00:31:45,750 --> 00:31:50,730
and verify it well enough so let's go

703
00:31:48,750 --> 00:31:53,460
ahead and do that so let's end if this

704
00:31:50,730 --> 00:31:58,289
will go back in here and just say you

705
00:31:53,460 --> 00:32:02,120
know so the oops that's no good what did

706
00:31:58,289 --> 00:32:05,119
I do wrong there I managed to make it oh

707
00:32:02,119 --> 00:32:05,119
right

708
00:32:05,509 --> 00:32:10,410
with our team in set to zero to zero to

709
00:32:09,059 --> 00:32:13,109
max up zero you'll never be able to move

710
00:32:10,410 --> 00:32:15,930
anywhere so temporarily I need to set

711
00:32:13,109 --> 00:32:19,009
this T max to one so that you can

712
00:32:15,930 --> 00:32:23,400
actually move right

713
00:32:19,009 --> 00:32:26,429
there we go so this is the thing that's

714
00:32:23,400 --> 00:32:28,080
doing that actually operates on overlap

715
00:32:26,429 --> 00:32:31,259
right now is right is that moving up and

716
00:32:28,079 --> 00:32:33,178
down so I want to go ahead and do the

717
00:32:31,259 --> 00:32:36,410
overlap test to make the overlap test be

718
00:32:33,179 --> 00:32:39,269
better and so let's go ahead and do that

719
00:32:36,410 --> 00:32:40,860
overlap test because it's got to do on

720
00:32:39,269 --> 00:32:42,720
here that says handle multi bombs let's

721
00:32:40,859 --> 00:32:45,449
handle the multi bombs and then pull it

722
00:32:42,720 --> 00:32:49,529
out into its own test that allows you to

723
00:32:45,450 --> 00:32:53,100
check for overlap really easily right so

724
00:32:49,529 --> 00:32:55,548
in order to check for overlap what we

725
00:32:53,099 --> 00:32:59,209
want to do here is move this entity rect

726
00:32:55,548 --> 00:33:03,690
inside so that what we're going to do is

727
00:32:59,210 --> 00:33:05,970
we loop over the volumes of both things

728
00:33:03,690 --> 00:33:08,940
like we were doing before in another one

729
00:33:05,970 --> 00:33:10,890
of these double double loops right it's

730
00:33:08,940 --> 00:33:12,360
literally this thing right here this

731
00:33:10,890 --> 00:33:16,590
loop right here so we could just reuse

732
00:33:12,359 --> 00:33:18,689
that that verbiage that is sort of the

733
00:33:16,589 --> 00:33:22,259
the way in which we were doing that

734
00:33:18,690 --> 00:33:24,630
testing so what we want to do is test

735
00:33:22,259 --> 00:33:26,279
the what are our two things here there's

736
00:33:24,630 --> 00:33:27,570
test identity so it's a key the same as

737
00:33:26,279 --> 00:33:28,950
it was before

738
00:33:27,569 --> 00:33:30,240
so we've got the two different NDS we

739
00:33:28,950 --> 00:33:34,410
now have the two different volumes and

740
00:33:30,240 --> 00:33:37,650
so what we want to do is make this code

741
00:33:34,410 --> 00:33:40,860
happen and then at the end we say if

742
00:33:37,650 --> 00:33:44,250
overlapped we handle that overlap right

743
00:33:40,859 --> 00:33:46,889
so we'll basically say bool overlap

744
00:33:44,250 --> 00:33:48,329
equals false and we can early-out as

745
00:33:46,890 --> 00:33:49,890
soon as we know that we overlap because

746
00:33:48,329 --> 00:33:51,808
we don't need to keep checking for

747
00:33:49,890 --> 00:33:55,980
overlap so we wanted to say you know if

748
00:33:51,808 --> 00:33:58,109
we aren't overlapped in each of these

749
00:33:55,980 --> 00:34:01,259
loops then we'll do that and that way

750
00:33:58,109 --> 00:34:04,168
when we set overlap to true here they'll

751
00:34:01,259 --> 00:34:07,589
break out of both loops and be done so

752
00:34:04,169 --> 00:34:08,878
here we are inside our volume testing we

753
00:34:07,589 --> 00:34:11,398
can do it exactly the way that we were

754
00:34:08,878 --> 00:34:14,219
doing it before right instead of doing

755
00:34:11,398 --> 00:34:16,500
total volume in both cases all we really

756
00:34:14,219 --> 00:34:18,329
have to do is switch to using the two

757
00:34:16,500 --> 00:34:20,699
different volumes that we said so we

758
00:34:18,329 --> 00:34:22,918
essentially have entity volume I believe

759
00:34:20,699 --> 00:34:27,079
what is it not just volume so we have

760
00:34:22,918 --> 00:34:34,469
volume like so

761
00:34:27,079 --> 00:34:36,539
right oops so we have volume and then

762
00:34:34,469 --> 00:34:46,339
we've got the test entity rect is going

763
00:34:36,539 --> 00:34:50,009
to be hmm the test volume there we go

764
00:34:46,340 --> 00:34:52,169
and now we are looping over both volumes

765
00:34:50,010 --> 00:34:54,020
and testing them both and then we are

766
00:34:52,168 --> 00:34:57,539
seeing whether or not those volumes

767
00:34:54,019 --> 00:34:59,250
intersect and we can actually do it just

768
00:34:57,539 --> 00:35:03,210
straight straight ahead since we know we

769
00:34:59,250 --> 00:35:05,369
breakout immediately upon overlap being

770
00:35:03,210 --> 00:35:07,289
true we can make it a little bit more

771
00:35:05,369 --> 00:35:09,750
concise so there we go

772
00:35:07,289 --> 00:35:12,210
so now we've got a relatively concise

773
00:35:09,750 --> 00:35:16,019
over left check that we're doing here

774
00:35:12,210 --> 00:35:21,360
and so what we should be able to do is

775
00:35:16,019 --> 00:35:23,550
now pull this out into its own function

776
00:35:21,360 --> 00:35:25,170
right so let's let's go ahead and

777
00:35:23,550 --> 00:35:27,620
compile that first make sure this works

778
00:35:25,170 --> 00:35:27,619
okay

779
00:35:27,949 --> 00:35:35,609
rule 3 to forcing value to troops I

780
00:35:33,420 --> 00:35:38,430
typed that wrong and by the way this is

781
00:35:35,610 --> 00:35:41,460
why I hate bool and always type bool 32

782
00:35:38,429 --> 00:35:44,599
I don't like these warnings right I

783
00:35:41,460 --> 00:35:47,760
don't want the compiler to do those

784
00:35:44,599 --> 00:35:49,889
those quote-unquote optimizations there

785
00:35:47,760 --> 00:35:52,020
or lack of optimizations to do those

786
00:35:49,889 --> 00:35:55,109
things that turn things into 0 and 1 for

787
00:35:52,019 --> 00:35:56,429
no reason so I just want everything to

788
00:35:55,110 --> 00:35:59,730
pass through regardless of how it was

789
00:35:56,429 --> 00:36:01,500
computed so all right now we've got that

790
00:35:59,730 --> 00:36:03,570
let's pull it out although I guess I'll

791
00:36:01,500 --> 00:36:07,159
test it first just to make sure that it

792
00:36:03,570 --> 00:36:10,559
still works it does so that's good and

793
00:36:07,159 --> 00:36:13,769
we can go in here and pull that out into

794
00:36:10,559 --> 00:36:19,849
some kind of a function like internal

795
00:36:13,769 --> 00:36:19,849
bowl for you two entities overlap

796
00:36:30,030 --> 00:36:45,010
hmm sorry I was thinking about some

797
00:36:39,429 --> 00:36:47,649
things in my head so I might want to do

798
00:36:45,010 --> 00:36:49,840
something else here which is introduce a

799
00:36:47,650 --> 00:36:50,950
little okay so I had a thought I'll

800
00:36:49,840 --> 00:36:52,840
share that thought with you in one

801
00:36:50,949 --> 00:36:54,969
moment so let's go ahead and pull this

802
00:36:52,840 --> 00:36:58,570
out first before I share that thought

803
00:36:54,969 --> 00:37:00,969
with you so let's say okay we've got

804
00:36:58,570 --> 00:37:03,100
empties overlap we want to do here is

805
00:37:00,969 --> 00:37:08,019
pass in the two entities so we have a

806
00:37:03,099 --> 00:37:10,630
and entity and test entity right and

807
00:37:08,019 --> 00:37:13,000
maybe I'll upgrade the Naaman clay Chur

808
00:37:10,630 --> 00:37:16,630
of this a little bit as well so we'll

809
00:37:13,000 --> 00:37:21,159
call this results equals false and we'll

810
00:37:16,630 --> 00:37:29,309
just do this result salt result and then

811
00:37:21,159 --> 00:37:34,989
return results right oops sim region

812
00:37:29,309 --> 00:37:38,409
overlapped this will now just be if

813
00:37:34,989 --> 00:37:43,179
entities overlap and it'll pass the two

814
00:37:38,409 --> 00:37:44,619
entities in so and again this is classic

815
00:37:43,179 --> 00:37:46,419
compression oriented programming here

816
00:37:44,619 --> 00:37:47,799
right I'm just looking at things pulling

817
00:37:46,420 --> 00:37:49,510
them out when I new I want to use the

818
00:37:47,800 --> 00:37:53,590
multiple times and letting that guide

819
00:37:49,510 --> 00:37:55,720
the design of of everything right I'm

820
00:37:53,590 --> 00:37:58,690
not thinking about the design at all I'm

821
00:37:55,719 --> 00:38:01,269
letting literally the reuse what I want

822
00:37:58,690 --> 00:38:04,539
to call at any given time drives that

823
00:38:01,269 --> 00:38:05,590
sort of upward motion I really like that

824
00:38:04,539 --> 00:38:10,210
style programming I find that it works

825
00:38:05,590 --> 00:38:13,600
really well even early in the morning

826
00:38:10,210 --> 00:38:16,240
like this so now this is much simpler

827
00:38:13,599 --> 00:38:18,639
and easier to read as well we can even

828
00:38:16,239 --> 00:38:26,199
sort of double this up we can we can

829
00:38:18,639 --> 00:38:29,199
almost just say this right like so and

830
00:38:26,199 --> 00:38:31,419
and that makes this loop really nice and

831
00:38:29,199 --> 00:38:34,509
pretty simple we now handle multi

832
00:38:31,420 --> 00:38:36,829
volumes so that's pretty good and I

833
00:38:34,510 --> 00:38:38,120
don't know what we want to talk what

834
00:38:36,829 --> 00:38:40,489
do about this will still leave that

835
00:38:38,119 --> 00:38:42,889
other to do for a little bit later on so

836
00:38:40,489 --> 00:38:45,409
this looks pretty good here what I was

837
00:38:42,889 --> 00:38:48,650
going to say is I wonder if what we want

838
00:38:45,409 --> 00:38:52,299
to do is move our epsilon into here so

839
00:38:48,650 --> 00:38:57,410
we can say that there is an epsilon

840
00:38:52,300 --> 00:38:59,080
basically a enlargement region if you

841
00:38:57,409 --> 00:39:02,359
will in terms of testing whether these

842
00:38:59,079 --> 00:39:04,759
overlap and I feel like we could even

843
00:39:02,360 --> 00:39:06,230
say that there was an epsilon in all

844
00:39:04,760 --> 00:39:08,960
three dimensions I know it's a little

845
00:39:06,230 --> 00:39:11,329
bit weird but this is just thought I was

846
00:39:08,960 --> 00:39:13,610
having and so by default if you ask if

847
00:39:11,329 --> 00:39:15,619
they overlap there is no Epsilon but

848
00:39:13,610 --> 00:39:17,269
later we could make their b1 right and

849
00:39:15,619 --> 00:39:19,400
it's really easy for us to do because

850
00:39:17,269 --> 00:39:20,809
all we have to do is take one of the

851
00:39:19,400 --> 00:39:23,180
volumes that we're using for the overlap

852
00:39:20,809 --> 00:39:24,949
test and add the epsilon to it right and

853
00:39:23,179 --> 00:39:28,159
that enlarges that guy but a little bit

854
00:39:24,949 --> 00:39:30,589
which means that there's now some sort

855
00:39:28,159 --> 00:39:32,000
of fudge in in the overlap there's a you

856
00:39:30,590 --> 00:39:35,930
know at kind of an extra boundary there

857
00:39:32,000 --> 00:39:38,300
right and the reason that I think that's

858
00:39:35,929 --> 00:39:40,699
kind of interesting was because that

859
00:39:38,300 --> 00:39:44,000
would allow us to do that sort of the

860
00:39:40,699 --> 00:39:46,489
overlap to be a little bit forgiving in

861
00:39:44,000 --> 00:39:47,780
those those ones those there's things

862
00:39:46,489 --> 00:39:51,219
you're allowed to move through so that

863
00:39:47,780 --> 00:39:54,410
we can do precise stopping on those

864
00:39:51,219 --> 00:39:56,299
those room boundary guys we can do

865
00:39:54,409 --> 00:39:58,909
precise stopping on them but we can also

866
00:39:56,300 --> 00:40:01,190
figure out which one you're inside much

867
00:39:58,909 --> 00:40:04,579
more easily and so I kind of like that

868
00:40:01,190 --> 00:40:07,429
idea I'm gonna go ahead and stick with

869
00:40:04,579 --> 00:40:10,460
that for now and so what we would do in

870
00:40:07,429 --> 00:40:16,099
here now is we'd reenable this guy like

871
00:40:10,460 --> 00:40:20,420
so and we can set this to basically

872
00:40:16,099 --> 00:40:22,460
entities overlap and what we'll do there

873
00:40:20,420 --> 00:40:24,769
is past entity and testin be like we're

874
00:40:22,460 --> 00:40:26,599
doing four and assuming that the two

875
00:40:24,769 --> 00:40:29,269
entities overlap then we we actually

876
00:40:26,599 --> 00:40:31,909
will use that that Tmax

877
00:40:29,269 --> 00:40:34,550
two to see what the furthest we can go

878
00:40:31,909 --> 00:40:37,849
is inside that entity now what I wanted

879
00:40:34,550 --> 00:40:40,670
to do here is again use that enlargement

880
00:40:37,849 --> 00:40:45,219
region and so what I'll probably do is

881
00:40:40,670 --> 00:40:48,470
say okay we have our overlap epsilon

882
00:40:45,219 --> 00:40:50,618
right in fact I'll just say overlap

883
00:40:48,469 --> 00:40:53,969
epsilon the overlap Epsilon

884
00:40:50,619 --> 00:40:55,960
we'll be something fairly small for now

885
00:40:53,969 --> 00:41:02,558
probably I don't know exactly what it

886
00:40:55,960 --> 00:41:05,249
should be this is definitely something

887
00:41:02,559 --> 00:41:09,249
we'll have to look at more detail later

888
00:41:05,248 --> 00:41:13,689
but basically we'll just have you know

889
00:41:09,248 --> 00:41:15,489
we could even do this you might want to

890
00:41:13,690 --> 00:41:17,289
make a utility function for that you

891
00:41:15,489 --> 00:41:22,389
know something that just spams one value

892
00:41:17,289 --> 00:41:24,278
out to all of things in in a vector but

893
00:41:22,389 --> 00:41:28,960
so you know all right that does the

894
00:41:24,278 --> 00:41:32,949
overlap test go missing a parenthesis

895
00:41:28,960 --> 00:41:34,690
that does the overlap test and allows us

896
00:41:32,949 --> 00:41:42,328
to make this loop more practically we

897
00:41:34,690 --> 00:41:45,400
loop properly in theory now oops I

898
00:41:42,329 --> 00:41:48,430
really need a better typing setup here

899
00:41:45,400 --> 00:41:50,289
I'm always find myself askew in the way

900
00:41:48,429 --> 00:41:52,919
that I'm kind of crammed in here at this

901
00:41:50,289 --> 00:41:52,920
desk all right

902
00:41:53,048 --> 00:42:00,998
in theory now we could actually well no

903
00:41:56,349 --> 00:42:02,710
that's not good at all we never seem to

904
00:42:00,998 --> 00:42:04,689
be able to get past our Tmax what's

905
00:42:02,710 --> 00:42:06,519
wrong all right so now it's time to

906
00:42:04,690 --> 00:42:07,420
debug this I was hoping that might just

907
00:42:06,518 --> 00:42:11,409
work

908
00:42:07,420 --> 00:42:14,139
but of course it never does so let's

909
00:42:11,409 --> 00:42:15,909
take a look at what's going on here just

910
00:42:14,139 --> 00:42:17,139
spot-check before we go debug this make

911
00:42:15,909 --> 00:42:20,318
sure we didn't do anything obviously

912
00:42:17,139 --> 00:42:22,989
stupid so when we're doing our t max

913
00:42:20,318 --> 00:42:24,429
test we need to set our t max test to

914
00:42:22,989 --> 00:42:28,150
zero we assume that that's the minimum

915
00:42:24,429 --> 00:42:33,848
you could possibly move in fact these I

916
00:42:28,150 --> 00:42:35,440
guess are technically T max test 2 min

917
00:42:33,849 --> 00:42:40,298
test these these don't really need to be

918
00:42:35,440 --> 00:42:41,679
out here and neither does hit this right

919
00:42:40,298 --> 00:42:44,608
those are actually these are actually

920
00:42:41,679 --> 00:42:48,969
internal things so these are actually

921
00:42:44,608 --> 00:42:52,929
these are actually like here right and

922
00:42:48,969 --> 00:42:54,368
down here so and this one doesn't have a

923
00:42:52,929 --> 00:42:54,829
T max test and this one doesn't have a

924
00:42:54,369 --> 00:43:01,430
team in

925
00:42:54,829 --> 00:43:03,079
right so yeah in fact and I'm gonna move

926
00:43:01,429 --> 00:43:06,789
over here to this this side so that my

927
00:43:03,079 --> 00:43:09,019
head is not constantly in the way so

928
00:43:06,789 --> 00:43:13,159
when we come through here

929
00:43:09,019 --> 00:43:15,500
and we do these tests we're testing to

930
00:43:13,159 --> 00:43:17,299
see we're accepting the largest value it

931
00:43:15,500 --> 00:43:21,019
looks like which is which is what we

932
00:43:17,300 --> 00:43:23,780
wanted so I'm not sure what the problem

933
00:43:21,019 --> 00:43:26,179
is exactly here it could be that our

934
00:43:23,780 --> 00:43:29,600
entities overlap call is not working

935
00:43:26,179 --> 00:43:31,730
properly I guess we do have another

936
00:43:29,599 --> 00:43:36,799
thing that's kind of stupid which is

937
00:43:31,730 --> 00:43:39,490
that you know we actually probably since

938
00:43:36,800 --> 00:43:48,440
we're already looping over the two

939
00:43:39,489 --> 00:43:51,349
volumes that loop those volume loops are

940
00:43:48,440 --> 00:43:57,429
really set up wrong now that I think

941
00:43:51,349 --> 00:44:05,360
about it right we don't actually need to

942
00:43:57,429 --> 00:44:08,469
loop over we don't actually need to loop

943
00:44:05,360 --> 00:44:08,470
over the volumes

944
00:44:15,300 --> 00:44:25,960
so justjust thinking this through right

945
00:44:20,519 --> 00:44:27,789
so up at the top here and in fact I

946
00:44:25,960 --> 00:44:29,880
guess this can collide is exactly

947
00:44:27,789 --> 00:44:31,989
probably why we're not getting in here

948
00:44:29,880 --> 00:44:35,800
so I didn't really think this through

949
00:44:31,989 --> 00:44:38,709
enough as I need to basically this can

950
00:44:35,800 --> 00:44:40,690
collide is really something to be done

951
00:44:38,710 --> 00:44:42,519
as an internal check and furthermore the

952
00:44:40,690 --> 00:44:44,800
entities overlap check doesn't need to

953
00:44:42,519 --> 00:44:46,480
be done per volume like this right the

954
00:44:44,800 --> 00:44:49,330
enemies overlap check can be done once

955
00:44:46,480 --> 00:44:51,940
for the entities up at the top and so

956
00:44:49,329 --> 00:44:54,969
really this this loop this can be done

957
00:44:51,940 --> 00:44:59,289
all the way out here right that's this

958
00:44:54,969 --> 00:45:00,759
is actually being done up here so let's

959
00:44:59,289 --> 00:45:03,279
let's reorganize this a little bit

960
00:45:00,760 --> 00:45:06,760
that's being done up there and this part

961
00:45:03,280 --> 00:45:10,269
right here looks a little bit more like

962
00:45:06,760 --> 00:45:14,080
it's it's it's its partner there and

963
00:45:10,269 --> 00:45:16,239
similarly this can collide right is is

964
00:45:14,079 --> 00:45:18,460
part of this check here too right

965
00:45:16,239 --> 00:45:20,289
so essentially what we need to do is out

966
00:45:18,460 --> 00:45:22,900
at the top here we need to do that

967
00:45:20,289 --> 00:45:24,369
determination of whether or not this is

968
00:45:22,900 --> 00:45:26,079
something worth considering and then

969
00:45:24,369 --> 00:45:30,849
traversable tells us which one we're

970
00:45:26,079 --> 00:45:32,619
going to do on it so in some sense we

971
00:45:30,849 --> 00:45:35,619
have something that's sort of like if

972
00:45:32,619 --> 00:45:39,250
it's traversable and the entities

973
00:45:35,619 --> 00:45:42,039
overlap right then that's one reason we

974
00:45:39,250 --> 00:45:43,780
might do it or if you can collide right

975
00:45:42,039 --> 00:45:45,159
and so I think the test we actually want

976
00:45:43,780 --> 00:45:48,370
to do is out of the top here we want to

977
00:45:45,159 --> 00:45:53,049
say if it's a traversable entity right

978
00:45:48,369 --> 00:45:57,670
and the entities overlap then we would

979
00:45:53,050 --> 00:45:58,870
do our collision processing or if there

980
00:45:57,670 --> 00:46:00,460
are things that can collide with each

981
00:45:58,869 --> 00:46:02,380
other then we would do our collision

982
00:46:00,460 --> 00:46:04,090
processing and those are the two reasons

983
00:46:02,380 --> 00:46:06,220
that we might start checking the volumes

984
00:46:04,090 --> 00:46:10,150
right but otherwise we wouldn't do that

985
00:46:06,219 --> 00:46:14,980
and I we got to do our our epsilon up

986
00:46:10,150 --> 00:46:16,480
here right so that is really the loop

987
00:46:14,980 --> 00:46:19,000
that we wanted I think or at least

988
00:46:16,480 --> 00:46:21,838
closer to it and then the rest of this

989
00:46:19,000 --> 00:46:24,179
stuff does what it does

990
00:46:21,838 --> 00:46:27,929
right that seems a little more same to

991
00:46:24,179 --> 00:46:29,429
me so let's take a look and now we're

992
00:46:27,929 --> 00:46:32,188
actually working a little more properly

993
00:46:29,429 --> 00:46:35,969
we're but we we don't really have any

994
00:46:32,188 --> 00:46:38,728
places right now that we can test

995
00:46:35,969 --> 00:46:41,429
against our blue line so I'm gonna do is

996
00:46:38,728 --> 00:46:43,938
I'm gonna go back here to our our thing

997
00:46:41,429 --> 00:46:47,098
that creates the world right

998
00:46:43,938 --> 00:46:50,068
here's handmade that's EPP and when we

999
00:46:47,099 --> 00:46:52,338
do add wall I'm just gonna go ahead and

1000
00:46:50,068 --> 00:46:54,719
say that we're just not gonna add walls

1001
00:46:52,338 --> 00:46:57,538
we're not gonna add walls two rooms past

1002
00:46:54,719 --> 00:47:00,208
the first room right so basically if we

1003
00:46:57,539 --> 00:47:02,009
have screen index here I'm just gonna

1004
00:47:00,208 --> 00:47:04,409
get rid of those walls everywhere else

1005
00:47:02,009 --> 00:47:06,179
so I'm going to do if screen index

1006
00:47:04,409 --> 00:47:08,818
equals 0 we add walls otherwise we don't

1007
00:47:06,179 --> 00:47:10,788
add any walls and so that means that we

1008
00:47:08,818 --> 00:47:14,248
should have a world that pretty much

1009
00:47:10,789 --> 00:47:16,289
only has those walls at the beginning

1010
00:47:14,248 --> 00:47:18,149
right so there's the walls and we are

1011
00:47:16,289 --> 00:47:19,739
colliding with them that's good we're

1012
00:47:18,150 --> 00:47:22,229
colliding with all the other people here

1013
00:47:19,739 --> 00:47:23,849
and so on and then we kind of walk up

1014
00:47:22,228 --> 00:47:25,798
here and now we're in a place that

1015
00:47:23,849 --> 00:47:27,119
doesn't have any walls right and so

1016
00:47:25,798 --> 00:47:29,579
we're walking around and so let's make

1017
00:47:27,119 --> 00:47:32,729
sure that we can't go outside of our

1018
00:47:29,579 --> 00:47:36,119
blue line and we can't which is what we

1019
00:47:32,728 --> 00:47:38,578
wanted that's a good thing it looks

1020
00:47:36,119 --> 00:47:40,229
pretty solid at the moment although we

1021
00:47:38,579 --> 00:47:42,028
do have there's some stickiness that I

1022
00:47:40,228 --> 00:47:43,858
don't like I'm not sure why we're

1023
00:47:42,028 --> 00:47:46,318
getting and that feels like we're we're

1024
00:47:43,858 --> 00:47:47,938
able to do some things I don't think we

1025
00:47:46,318 --> 00:47:49,438
should be able to do so yeah we're

1026
00:47:47,938 --> 00:47:52,318
getting some stickiness there right

1027
00:47:49,438 --> 00:47:53,998
we're sticking and I believe that

1028
00:47:52,318 --> 00:47:56,639
sticking is probably because of the way

1029
00:47:53,998 --> 00:48:00,808
that we're doing that epsilon handling

1030
00:47:56,639 --> 00:48:04,108
we're not we're because world you're

1031
00:48:00,809 --> 00:48:08,400
allowed to go because we're not setting

1032
00:48:04,108 --> 00:48:10,768
you inset from this guy from from the

1033
00:48:08,400 --> 00:48:13,079
space in the epsilon our sliding stuff

1034
00:48:10,768 --> 00:48:15,058
is a little bit more broken let's verify

1035
00:48:13,079 --> 00:48:16,769
that that's actually the case and we'll

1036
00:48:15,059 --> 00:48:18,630
have to think about how we want to

1037
00:48:16,768 --> 00:48:21,868
handle that we still we really don't

1038
00:48:18,630 --> 00:48:23,099
want those epsilon in there anyway so

1039
00:48:21,869 --> 00:48:24,660
you know that's something that's

1040
00:48:23,099 --> 00:48:26,999
definitely on my radar of stuff that we

1041
00:48:24,659 --> 00:48:28,348
want to clean up but I don't have a

1042
00:48:26,998 --> 00:48:29,278
really good idea of how we want to do it

1043
00:48:28,349 --> 00:48:31,048
yet so that's gonna have to be something

1044
00:48:29,278 --> 00:48:33,088
we set aside some time to think it

1045
00:48:31,048 --> 00:48:35,699
through and do something nice with it

1046
00:48:33,088 --> 00:48:40,670
but basically it's this part right here

1047
00:48:35,699 --> 00:48:43,289
you know where we basically want to say

1048
00:48:40,670 --> 00:48:47,400
this this exact thing that you're saying

1049
00:48:43,289 --> 00:48:50,880
for we would still need to do it for the

1050
00:48:47,400 --> 00:48:55,680
other side and now you know we get that

1051
00:48:50,880 --> 00:48:57,180
sliding which is what we want so you

1052
00:48:55,679 --> 00:48:58,919
know I would sense it her this a bit of

1053
00:48:57,179 --> 00:49:01,259
a success I think this came out

1054
00:48:58,920 --> 00:49:02,550
relatively well it's doing what we want

1055
00:49:01,260 --> 00:49:05,730
it to do which is preventing you from

1056
00:49:02,550 --> 00:49:09,330
ever getting outside and I like that and

1057
00:49:05,730 --> 00:49:10,019
so that's a good start that's a pretty

1058
00:49:09,329 --> 00:49:13,980
good start

1059
00:49:10,019 --> 00:49:18,030
I think now I'm not sure why we're why

1060
00:49:13,980 --> 00:49:21,139
we're stopping in here though that's a

1061
00:49:18,030 --> 00:49:23,730
bit odd I wonder if that's just because

1062
00:49:21,139 --> 00:49:25,739
what is that T Epsilon the T epsilon is

1063
00:49:23,730 --> 00:49:28,710
the same as our o is the same as our

1064
00:49:25,739 --> 00:49:31,019
overlap epsilon which is not what we

1065
00:49:28,710 --> 00:49:33,240
would want right we'd have to make those

1066
00:49:31,019 --> 00:49:34,679
be different in order for this to work

1067
00:49:33,239 --> 00:49:36,209
for you to be able to cross through

1068
00:49:34,679 --> 00:49:38,969
these properly right well I'm not sure

1069
00:49:36,210 --> 00:49:42,329
why it seems odd right I'm not sure why

1070
00:49:38,969 --> 00:49:44,849
we can't cross over that boundary that's

1071
00:49:42,329 --> 00:49:47,009
definitely a bit janky because I can go

1072
00:49:44,849 --> 00:49:48,360
through that boundary I can go through

1073
00:49:47,010 --> 00:49:50,370
that boundary in one direction but not

1074
00:49:48,360 --> 00:49:53,599
the other direction all right so we

1075
00:49:50,369 --> 00:49:57,230
definitely have some bug miss they're

1076
00:49:53,599 --> 00:49:58,769
something they'll have to think through

1077
00:49:57,230 --> 00:50:00,449
take the stairs

1078
00:49:58,769 --> 00:50:03,619
this is stairwell is a stairwell up or

1079
00:50:00,449 --> 00:50:03,619
down stairwell down

1080
00:50:04,420 --> 00:50:10,250
so yeah so why can we not that's

1081
00:50:07,340 --> 00:50:13,210
interesting it's the same we can't go

1082
00:50:10,250 --> 00:50:15,829
backwards I wonder if that's just an

1083
00:50:13,210 --> 00:50:18,019
order dependency thing too so if we have

1084
00:50:15,829 --> 00:50:19,789
a bug and it's just the order in which

1085
00:50:18,019 --> 00:50:21,590
these two things were added you can go

1086
00:50:19,789 --> 00:50:25,570
from an earlier entity to a later entity

1087
00:50:21,590 --> 00:50:25,570
but not vice versa you know what I mean

1088
00:50:25,809 --> 00:50:29,150
not sure why that would be though

1089
00:50:27,769 --> 00:50:33,050
because since we're taking the maximum

1090
00:50:29,150 --> 00:50:34,550
hit is it just an over is it because is

1091
00:50:33,050 --> 00:50:37,730
there something weird about the way this

1092
00:50:34,550 --> 00:50:39,850
overlap works like you would think we

1093
00:50:37,730 --> 00:50:43,849
must just have a simple bug actually

1094
00:50:39,849 --> 00:50:45,319
because you would think especially if so

1095
00:50:43,849 --> 00:50:47,989
we're in the situation should wrap repro

1096
00:50:45,320 --> 00:50:51,019
right here right yeah you would think

1097
00:50:47,989 --> 00:50:53,329
that if I made the overlap test very

1098
00:50:51,019 --> 00:50:55,070
permissive so I said like oh yeah the

1099
00:50:53,329 --> 00:50:57,949
overlap epsilon is massive

1100
00:50:55,070 --> 00:50:59,240
right that now we would definitely be

1101
00:50:57,949 --> 00:51:01,009
able to pass through there because it

1102
00:50:59,239 --> 00:51:02,599
should find that we are enclosed in that

1103
00:51:01,010 --> 00:51:05,720
other guy and his team axe should be

1104
00:51:02,599 --> 00:51:08,630
very large so the question is with that

1105
00:51:05,719 --> 00:51:12,699
overlap epsilon very large why is it not

1106
00:51:08,630 --> 00:51:15,380
possible to find a larger team axe there

1107
00:51:12,699 --> 00:51:20,419
and I don't know the answer to that

1108
00:51:15,380 --> 00:51:25,599
question it's very strange

1109
00:51:20,420 --> 00:51:28,880
right and so when we come in here and

1110
00:51:25,599 --> 00:51:32,299
we're looking through these walls we

1111
00:51:28,880 --> 00:51:35,269
find whatever our team axe test is is

1112
00:51:32,300 --> 00:51:38,269
later is less than whatever the result

1113
00:51:35,269 --> 00:51:46,219
is for this particular wall we then

1114
00:51:38,269 --> 00:51:51,230
accept it yeah I don't know that that

1115
00:51:46,219 --> 00:51:53,799
doesn't seem that doesn't seem logical

1116
00:51:51,230 --> 00:51:53,800
to me

1117
00:51:54,699 --> 00:51:58,719
so I guess what we need to do is is step

1118
00:51:57,400 --> 00:52:00,849
through this and see what's going on

1119
00:51:58,719 --> 00:52:02,169
here because I don't have it and maybe

1120
00:52:00,849 --> 00:52:04,089
it's just the early morning stream maybe

1121
00:52:02,170 --> 00:52:06,309
it should actually be obvious what's

1122
00:52:04,090 --> 00:52:07,900
going on and I'm just not seeing it that

1123
00:52:06,309 --> 00:52:10,269
seems like probably a pretty likely

1124
00:52:07,900 --> 00:52:12,579
thing for a sleepy time

1125
00:52:10,269 --> 00:52:15,039
for sleepy time programming and we've

1126
00:52:12,579 --> 00:52:16,539
got about seven minutes left so I think

1127
00:52:15,039 --> 00:52:20,349
we've got some time to step through here

1128
00:52:16,539 --> 00:52:24,480
and see what's going on so let's take a

1129
00:52:20,349 --> 00:52:26,650
look at pushing forwards through there

1130
00:52:24,480 --> 00:52:30,659
so I'm gonna go ahead and do this team

1131
00:52:26,650 --> 00:52:30,660
axe test let's see what our what's our

1132
00:52:35,260 --> 00:52:39,100
yeah so I don't know if this would be

1133
00:52:37,059 --> 00:52:40,779
the best test because of course I think

1134
00:52:39,099 --> 00:52:43,449
our team in and Tmax might already be

1135
00:52:40,780 --> 00:52:46,180
small but I'm not sure about that yeah

1136
00:52:43,449 --> 00:52:48,429
okay so anyway we have our team in in

1137
00:52:46,179 --> 00:52:51,309
our team max we're coming through here

1138
00:52:48,429 --> 00:52:53,079
to test these wall normals this is

1139
00:52:51,309 --> 00:52:55,929
somebody that we're already inside and

1140
00:52:53,079 --> 00:53:00,699
so let's take a look what is our T

1141
00:52:55,929 --> 00:53:07,239
result equal to ok our T result is

1142
00:53:00,699 --> 00:53:13,480
massive which is fine so we accept it

1143
00:53:07,239 --> 00:53:16,089
and our t max test is very large we

1144
00:53:13,480 --> 00:53:20,949
don't have any other collisions with

1145
00:53:16,090 --> 00:53:24,640
that and so that's fine we accept that

1146
00:53:20,949 --> 00:53:28,269
as our new t max and off we go and we've

1147
00:53:24,639 --> 00:53:36,519
we've set our hit entity rank we come

1148
00:53:28,269 --> 00:53:37,659
through here is that the only one we're

1149
00:53:36,519 --> 00:53:42,820
going to know we're gonna test against

1150
00:53:37,659 --> 00:53:44,679
another one so that's good off we go so

1151
00:53:42,820 --> 00:53:46,920
now we're testing against a separate one

1152
00:53:44,679 --> 00:53:51,339
it's resetting a t max tested zero again

1153
00:53:46,920 --> 00:53:53,200
and now we find a much closer hit so in

1154
00:53:51,340 --> 00:53:59,200
theory that will get accepted as T max

1155
00:53:53,199 --> 00:54:09,879
test now right but we should ignore that

1156
00:53:59,199 --> 00:54:10,509
hit I would think oh no oh yeah that's

1157
00:54:09,880 --> 00:54:12,250
it right there

1158
00:54:10,510 --> 00:54:16,960
this has to get initialized to what our

1159
00:54:12,250 --> 00:54:19,570
current max is that was dumb yeah so

1160
00:54:16,960 --> 00:54:21,039
that's the problem right we weren't

1161
00:54:19,570 --> 00:54:23,620
initializing it to the best one we'd

1162
00:54:21,039 --> 00:54:26,079
found so far so it just happened to be

1163
00:54:23,619 --> 00:54:28,509
whichever one was next yeah so then

1164
00:54:26,079 --> 00:54:30,009
those are fine and I'm not sure if we

1165
00:54:28,510 --> 00:54:31,630
really need to have that permissive

1166
00:54:30,010 --> 00:54:35,290
overlap test anymore but let's double

1167
00:54:31,630 --> 00:54:36,640
check and see I'm just curious yeah so

1168
00:54:35,289 --> 00:54:40,389
that passes through properly now and

1169
00:54:36,639 --> 00:54:43,969
still stops in the boundary so that

1170
00:54:40,389 --> 00:54:46,308
seems pretty good but you know

1171
00:54:43,969 --> 00:54:47,689
it's still a little janky certainly to

1172
00:54:46,309 --> 00:54:50,390
say the least

1173
00:54:47,690 --> 00:54:52,159
but we're definitely getting there all

1174
00:54:50,389 --> 00:54:54,469
right so that's pretty good

1175
00:54:52,159 --> 00:54:56,629
and so these now serve as boundaries

1176
00:54:54,469 --> 00:54:58,429
properly and so the next thing that we

1177
00:54:56,630 --> 00:55:00,410
we will want to do and I don't think I

1178
00:54:58,429 --> 00:55:02,538
want to start this today this will be

1179
00:55:00,409 --> 00:55:04,879
next week's thing is to actually start

1180
00:55:02,539 --> 00:55:07,400
playing with Z levels now because now we

1181
00:55:04,880 --> 00:55:09,470
can go ahead and do our sort of testing

1182
00:55:07,400 --> 00:55:13,309
against these to drop us down to

1183
00:55:09,469 --> 00:55:17,048
wherever the floor would be and that's

1184
00:55:13,309 --> 00:55:19,519
pretty you know that's gonna be a pretty

1185
00:55:17,048 --> 00:55:21,440
significant code change as well and so

1186
00:55:19,519 --> 00:55:23,780
now that we've got this working for the

1187
00:55:21,440 --> 00:55:25,700
most part I think we want to kind of

1188
00:55:23,780 --> 00:55:27,349
stop and go ahead and and move into the

1189
00:55:25,699 --> 00:55:30,730
Q&amp;A so that's pretty good I think we

1190
00:55:27,349 --> 00:55:34,369
made pretty good progress there yeah so

1191
00:55:30,730 --> 00:55:44,500
so let's do that let's go ahead and and

1192
00:55:34,369 --> 00:55:54,470
do the QA yeah what's our what's our

1193
00:55:44,500 --> 00:55:56,210
situation here so it looks like this I

1194
00:55:54,469 --> 00:55:57,939
think is already handled this we need to

1195
00:55:56,210 --> 00:56:01,579
play around X tweak and these two were

1196
00:55:57,940 --> 00:56:03,889
pretty we're on the we're on the edge of

1197
00:56:01,579 --> 00:56:07,039
solving these two so I think we we might

1198
00:56:03,889 --> 00:56:09,528
if we're really lucky we might be able

1199
00:56:07,039 --> 00:56:11,420
to knock off this entire thing next week

1200
00:56:09,528 --> 00:56:12,769
although next week might have to be

1201
00:56:11,420 --> 00:56:15,889
short cuz I do have a business trip

1202
00:56:12,769 --> 00:56:17,150
Monday and Tuesday that may make it so

1203
00:56:15,889 --> 00:56:19,548
it's hard for me to stream on those two

1204
00:56:17,150 --> 00:56:21,019
days so maybe not so it might take us to

1205
00:56:19,548 --> 00:56:23,239
them to the next week because we we're

1206
00:56:21,019 --> 00:56:27,980
gonna lose some days but we're getting

1207
00:56:23,239 --> 00:56:30,739
pretty good on this right so that's

1208
00:56:27,980 --> 00:56:33,619
pretty good yeah I feel like like debug

1209
00:56:30,739 --> 00:56:36,439
code is a real easy one this is gonna be

1210
00:56:33,619 --> 00:56:37,640
pretty trivial if it's pretty rope so

1211
00:56:36,440 --> 00:56:39,559
there won't be a lot of fussing there's

1212
00:56:37,639 --> 00:56:43,068
a bunch of code to write but it's pretty

1213
00:56:39,559 --> 00:56:48,920
pretty trivial this one is as well so

1214
00:56:43,068 --> 00:56:52,130
these will be pretty easy ones so we

1215
00:56:48,920 --> 00:56:53,630
won't probably get to the the next hard

1216
00:56:52,130 --> 00:56:56,390
stuff will be will be coming through

1217
00:56:53,630 --> 00:56:57,900
here so we're based gonna have to -

1218
00:56:56,389 --> 00:57:02,099
pretty easy guys

1219
00:56:57,900 --> 00:57:04,800
here and here yeah so I wonder if we

1220
00:57:02,099 --> 00:57:06,569
want to do if we want to sort of break

1221
00:57:04,800 --> 00:57:08,490
this up a little bit I guess we'll see

1222
00:57:06,570 --> 00:57:11,340
what we feel like doing it since debug

1223
00:57:08,489 --> 00:57:12,569
codes gonna be kind of fast one you know

1224
00:57:11,340 --> 00:57:14,460
maybe we want to do something more like

1225
00:57:12,570 --> 00:57:16,110
that where we do like this because this

1226
00:57:14,460 --> 00:57:18,780
is a little more interesting and

1227
00:57:16,110 --> 00:57:22,079
involved in the topic and then do audio

1228
00:57:18,780 --> 00:57:26,190
then come out to metagame and then and

1229
00:57:22,079 --> 00:57:28,860
then kick it through yeah seems seems

1230
00:57:26,190 --> 00:57:30,059
reasonable I'm excited about this so

1231
00:57:28,860 --> 00:57:31,320
many good things to do so yeah we're

1232
00:57:30,059 --> 00:57:32,730
really pushing through the hardest stuff

1233
00:57:31,320 --> 00:57:33,930
is really front loaded collision

1234
00:57:32,730 --> 00:57:35,909
detection that's gonna be probably one

1235
00:57:33,929 --> 00:57:41,190
of the nastiest things that we're

1236
00:57:35,909 --> 00:57:42,629
dealing with so yeah yeah this will be a

1237
00:57:41,190 --> 00:57:45,090
good block to get done this is the this

1238
00:57:42,630 --> 00:57:46,440
is a really hard block easy block this

1239
00:57:45,090 --> 00:57:49,289
actually block isn't that hard either

1240
00:57:46,440 --> 00:57:50,400
but it's stuff that people do weirdly so

1241
00:57:49,289 --> 00:57:51,690
it'll be something they'll have to kind

1242
00:57:50,400 --> 00:57:53,400
of cover like here's why you do it this

1243
00:57:51,690 --> 00:57:55,860
way and this has some nice benefits or

1244
00:57:53,400 --> 00:57:59,180
whatever and then yeah audio is pretty

1245
00:57:55,860 --> 00:58:02,490
pretty trivial as well so yeah alright

1246
00:57:59,179 --> 00:58:05,179
queue at any time let's let's go ahead

1247
00:58:02,489 --> 00:58:05,179
and do some Q&amp;A

1248
00:58:13,420 --> 00:58:19,880
can you explain the length of array

1249
00:58:16,159 --> 00:58:22,069
macro and the size of pointers so we've

1250
00:58:19,880 --> 00:58:23,210
we've this seems to come up a lot and so

1251
00:58:22,070 --> 00:58:28,039
I feel like this is something that's

1252
00:58:23,210 --> 00:58:31,579
unusual for people or III guess I don't

1253
00:58:28,039 --> 00:58:34,820
know like it just feels like some people

1254
00:58:31,579 --> 00:58:36,139
have trouble with these they're like

1255
00:58:34,820 --> 00:58:39,380
maybe they're not things that they're

1256
00:58:36,139 --> 00:58:42,049
used to seeing and so you know maybe

1257
00:58:39,380 --> 00:58:45,039
like let's let's explain this like very

1258
00:58:42,050 --> 00:58:48,110
slowly and and be very clear about

1259
00:58:45,039 --> 00:58:50,739
what's going on just so everyone is sort

1260
00:58:48,110 --> 00:58:56,349
of on board with with it a little more

1261
00:58:50,739 --> 00:59:01,639
cleanly so the idea here is that in

1262
00:58:56,349 --> 00:59:05,269
--see oftentimes I find myself wanting

1263
00:59:01,639 --> 00:59:07,039
to define an array right and so you can

1264
00:59:05,269 --> 00:59:09,590
see that I do that sometimes here right

1265
00:59:07,039 --> 00:59:11,449
where for whatever reason it might only

1266
00:59:09,590 --> 00:59:14,450
be temporary or it might be permanent

1267
00:59:11,449 --> 00:59:15,619
depending on what I'm doing I wanted to

1268
00:59:14,449 --> 00:59:17,419
find array of things and like in the

1269
00:59:15,619 --> 00:59:19,549
case of map mouse buttons if we only

1270
00:59:17,420 --> 00:59:21,110
know that there's always five button

1271
00:59:19,550 --> 00:59:23,360
mice and we're never gonna handle more

1272
00:59:21,110 --> 00:59:24,680
of them it'd be stupid for us to go

1273
00:59:23,360 --> 00:59:26,360
ahead and make some kind of flexible

1274
00:59:24,679 --> 00:59:28,609
sized array and incur the overhead that

1275
00:59:26,360 --> 00:59:30,110
that implies when we could just compile

1276
00:59:28,610 --> 00:59:32,120
the code to know exactly how many mouse

1277
00:59:30,110 --> 00:59:33,950
buttons there were right so I find

1278
00:59:32,119 --> 00:59:37,219
myself oftentimes wanting to make arrays

1279
00:59:33,949 --> 00:59:39,469
that are of a fixed size but I don't

1280
00:59:37,219 --> 00:59:42,829
really want to write the code to assume

1281
00:59:39,469 --> 00:59:44,449
that fixed size baked into it I would

1282
00:59:42,829 --> 00:59:46,340
rather have the compiler do that so that

1283
00:59:44,449 --> 00:59:49,159
if I do in the future decide that I want

1284
00:59:46,340 --> 00:59:50,360
to change it for some reason it doesn't

1285
00:59:49,159 --> 00:59:51,710
necessarily have to change at runtime

1286
00:59:50,360 --> 00:59:54,110
but it might have to change a compile

1287
00:59:51,710 --> 00:59:55,730
time so I defined the array to be

1288
00:59:54,110 --> 00:59:57,710
whatever size it is that I want to write

1289
00:59:55,730 --> 01:00:00,409
the code being able to use that number

1290
00:59:57,710 --> 01:00:02,539
now one way to do that is to use a pound

1291
01:00:00,409 --> 01:00:05,509
defying for whatever the number is but

1292
01:00:02,539 --> 01:00:07,400
the problem is that can break right if I

1293
01:00:05,510 --> 01:00:10,070
pound to find something and then later I

1294
01:00:07,400 --> 01:00:11,539
change I use a accidentally used the

1295
01:00:10,070 --> 01:00:13,250
wrong pound to find in the code or

1296
01:00:11,539 --> 01:00:15,170
something or I change which one is being

1297
01:00:13,250 --> 01:00:16,670
used for the array size now the code

1298
01:00:15,170 --> 01:00:19,340
that was based on that pound of fine is

1299
01:00:16,670 --> 01:00:21,079
mismatched with the array so what I'd

1300
01:00:19,340 --> 01:00:22,730
rather do is be able to look at the code

1301
01:00:21,079 --> 01:00:24,259
and know that it's actually using the

1302
01:00:22,730 --> 01:00:26,150
size of the thing that's actually

1303
01:00:24,260 --> 01:00:27,500
talking about and so

1304
01:00:26,150 --> 01:00:29,180
that's why I used this array account

1305
01:00:27,500 --> 01:00:31,219
macro which allows me to pass the array

1306
01:00:29,179 --> 01:00:32,808
that I'm working with and directly

1307
01:00:31,219 --> 01:00:34,308
compute its size without having to rely

1308
01:00:32,809 --> 01:00:36,769
on some kind of pound to find so it

1309
01:00:34,309 --> 01:00:38,750
doesn't matter how the person define the

1310
01:00:36,769 --> 01:00:41,028
array this will compute it and so how

1311
01:00:38,750 --> 01:00:45,528
does this macro work well in C there is

1312
01:00:41,028 --> 01:00:47,150
this concept of the size of sort of it's

1313
01:00:45,528 --> 01:00:48,409
a compile time directive really it's not

1314
01:00:47,150 --> 01:00:50,869
actually a function it looks like a

1315
01:00:48,409 --> 01:00:52,699
function but doesn't call anything what

1316
01:00:50,869 --> 01:00:55,130
it is is it's a question to the compiler

1317
01:00:52,699 --> 01:00:57,379
that says I'm going to pass you a value

1318
01:00:55,130 --> 01:00:59,450
and what I want you to do is instead of

1319
01:00:57,380 --> 01:01:01,430
looking at the actual value what's in

1320
01:00:59,449 --> 01:01:03,710
the value instead of what's contained in

1321
01:01:01,429 --> 01:01:05,269
this name like you would normally do

1322
01:01:03,710 --> 01:01:07,519
with the variable like if I say foo

1323
01:01:05,269 --> 01:01:09,739
normally you know if I say int foo

1324
01:01:07,519 --> 01:01:12,019
normally I'm talking about what's

1325
01:01:09,739 --> 01:01:14,659
contained in the int when I say food to

1326
01:01:12,019 --> 01:01:16,639
the compiler in this case don't think

1327
01:01:14,659 --> 01:01:19,670
about what it stores think about how big

1328
01:01:16,639 --> 01:01:23,298
it is how big do you think int foo is

1329
01:01:19,670 --> 01:01:26,358
and it replaces that this when you ask

1330
01:01:23,298 --> 01:01:29,088
that with that size in bytes so when I

1331
01:01:26,358 --> 01:01:31,969
say sizeof int foo I get back

1332
01:01:29,088 --> 01:01:34,608
four right on a thing where integers are

1333
01:01:31,969 --> 01:01:38,028
four bytes long such as our platform

1334
01:01:34,608 --> 01:01:41,298
right now now I can pass more

1335
01:01:38,028 --> 01:01:45,650
complicated things to it so if I have an

1336
01:01:41,298 --> 01:01:47,690
array like int foo five when I ask for

1337
01:01:45,650 --> 01:01:50,240
the size of that it will actually tell

1338
01:01:47,690 --> 01:01:53,690
me five times the size of an integer

1339
01:01:50,239 --> 01:01:55,909
which is four or 20 so I can ask for the

1340
01:01:53,690 --> 01:01:58,579
entire size of an array and get it back

1341
01:01:55,909 --> 01:02:00,108
the problem is that doesn't tell me how

1342
01:01:58,579 --> 01:02:02,660
many elements are in the array it tells

1343
01:02:00,108 --> 01:02:04,130
me how big the total array is so if I

1344
01:02:02,659 --> 01:02:06,318
want to know how many elements are

1345
01:02:04,130 --> 01:02:08,358
actually in the array I need to know how

1346
01:02:06,318 --> 01:02:11,719
big the elements of the array are and

1347
01:02:08,358 --> 01:02:13,848
divide by that number right so in this

1348
01:02:11,719 --> 01:02:15,889
case I'm gonna say size of food it's

1349
01:02:13,849 --> 01:02:18,980
gonna give me back 20 if I know that an

1350
01:02:15,889 --> 01:02:21,048
integer is 4 bytes long if I divide by 4

1351
01:02:18,980 --> 01:02:22,940
I get back the original 5 that's the

1352
01:02:21,048 --> 01:02:25,130
number that I actually wanted and so

1353
01:02:22,940 --> 01:02:28,068
what this second sizeof does is it says

1354
01:02:25,130 --> 01:02:30,440
what is the size of the first element of

1355
01:02:28,068 --> 01:02:31,608
that array because that's how big every

1356
01:02:30,440 --> 01:02:34,068
element is going to be the elements

1357
01:02:31,608 --> 01:02:35,869
can't be different sizes and so by

1358
01:02:34,068 --> 01:02:37,210
writing the macro this way it allows you

1359
01:02:35,869 --> 01:02:38,800
to take the name

1360
01:02:37,210 --> 01:02:41,559
of an array and produce its count

1361
01:02:38,800 --> 01:02:43,390
directly by just looking at the total

1362
01:02:41,559 --> 01:02:45,429
size of the array divided by the size of

1363
01:02:43,389 --> 01:02:49,659
its first element that gives me how many

1364
01:02:45,429 --> 01:02:52,779
elements there are right now the reason

1365
01:02:49,659 --> 01:02:54,339
that I can't call that directly for the

1366
01:02:52,780 --> 01:02:56,680
thing that I believe the person was

1367
01:02:54,340 --> 01:02:58,180
talking about here the reason that I

1368
01:02:56,679 --> 01:03:01,419
can't call that directly on this is

1369
01:02:58,179 --> 01:03:10,569
because C doesn't have a way for you to

1370
01:03:01,420 --> 01:03:14,110
basically do this right there's no way

1371
01:03:10,570 --> 01:03:18,580
to say how big is this how big is this

1372
01:03:14,110 --> 01:03:21,099
array in some other type right now you

1373
01:03:18,579 --> 01:03:23,949
can do that now by using a deckle valve

1374
01:03:21,099 --> 01:03:25,630
which we mentioned the other day that's

1375
01:03:23,949 --> 01:03:28,029
a brand new feature that got implemented

1376
01:03:25,630 --> 01:03:29,289
or whatever so I still use the

1377
01:03:28,030 --> 01:03:30,430
old-school way because it would work it

1378
01:03:29,289 --> 01:03:32,590
works everywhere and doesn't require a

1379
01:03:30,429 --> 01:03:34,299
new feature so no sense needing to use

1380
01:03:32,590 --> 01:03:37,230
the new feature you don't have to in

1381
01:03:34,300 --> 01:03:41,289
some sense so since you can't do this

1382
01:03:37,230 --> 01:03:45,519
what you do is you pretend that you

1383
01:03:41,289 --> 01:03:48,039
would have an actual value because size

1384
01:03:45,519 --> 01:03:51,610
of needs to pass values you can't give

1385
01:03:48,039 --> 01:03:52,449
it types you can't give it members right

1386
01:03:51,610 --> 01:03:54,970
if that makes sense

1387
01:03:52,449 --> 01:03:57,099
so if you say size of you can't pass it

1388
01:03:54,969 --> 01:03:59,349
the member of a struct you could pass it

1389
01:03:57,099 --> 01:04:01,599
a type just like int and you could say

1390
01:03:59,349 --> 01:04:03,909
you could pass a type like game input

1391
01:04:01,599 --> 01:04:06,639
and how big that is but you can't ask

1392
01:04:03,909 --> 01:04:09,759
hoops you can't ask for just one member

1393
01:04:06,639 --> 01:04:13,449
now why I have no idea it makes no sense

1394
01:04:09,760 --> 01:04:16,030
to me that you can't do that but you

1395
01:04:13,449 --> 01:04:18,879
can't so since you can't actually do

1396
01:04:16,030 --> 01:04:20,730
that what I'm doing here is pretending

1397
01:04:18,880 --> 01:04:23,230
that I have a pointer to something and

1398
01:04:20,730 --> 01:04:24,730
asking how big the controllers things

1399
01:04:23,230 --> 01:04:26,679
would have been off of that pointer

1400
01:04:24,730 --> 01:04:29,110
because we know we can always say like

1401
01:04:26,679 --> 01:04:31,329
size of some value that I might have

1402
01:04:29,110 --> 01:04:32,860
like camera P in this case right I know

1403
01:04:31,329 --> 01:04:34,389
that I could say if I had a world

1404
01:04:32,860 --> 01:04:36,250
position camera key I could ask for what

1405
01:04:34,389 --> 01:04:40,049
the size of that was so what I'm doing

1406
01:04:36,250 --> 01:04:42,760
is saying pretend I just have a value

1407
01:04:40,050 --> 01:04:44,380
which you know in I don't have an actual

1408
01:04:42,760 --> 01:04:47,680
pointer to a game instructor but I can

1409
01:04:44,380 --> 01:04:49,680
cast zero to it for free right pretend I

1410
01:04:47,679 --> 01:04:51,960
have that how big would it be since

1411
01:04:49,679 --> 01:04:54,088
see will never actually evaluate this

1412
01:04:51,960 --> 01:04:56,608
instruction it's never this expression

1413
01:04:54,088 --> 01:04:58,440
it's never gonna evaluate the actual

1414
01:04:56,608 --> 01:04:59,789
value of the expression so I don't have

1415
01:04:58,440 --> 01:05:00,900
to worry about dereferencing the null

1416
01:04:59,789 --> 01:05:02,460
pointer because it's never gonna look at

1417
01:05:00,900 --> 01:05:04,530
the value it's just gonna look at the

1418
01:05:02,460 --> 01:05:06,838
type because what size-up does is it

1419
01:05:04,530 --> 01:05:08,940
says what is the type of the thing on

1420
01:05:06,838 --> 01:05:10,170
the inside so since this only needs to

1421
01:05:08,940 --> 01:05:12,480
look at the type it says okay well

1422
01:05:10,170 --> 01:05:14,250
what's the type of a player to a game

1423
01:05:12,480 --> 01:05:15,449
input and looking off that adds

1424
01:05:14,250 --> 01:05:17,550
controllers member what's the type of

1425
01:05:15,449 --> 01:05:18,868
that right it's gonna go look and say oh

1426
01:05:17,550 --> 01:05:23,550
well I know what the type of that is

1427
01:05:18,869 --> 01:05:25,410
right the type of that is I'm gonna go

1428
01:05:23,550 --> 01:05:27,030
look up at the struct game input right

1429
01:05:25,409 --> 01:05:28,889
I'm gonna look here I moved four

1430
01:05:27,030 --> 01:05:30,450
controllers I'm gonna see what the type

1431
01:05:28,889 --> 01:05:32,848
of that is game controller input okay

1432
01:05:30,449 --> 01:05:34,500
that's the type so it will never

1433
01:05:32,849 --> 01:05:36,269
actually be reference that null pointer

1434
01:05:34,500 --> 01:05:38,730
it's strictly constructing a synthetic

1435
01:05:36,269 --> 01:05:42,000
value that has the right type because

1436
01:05:38,730 --> 01:05:45,690
that's what C allows you to do right and

1437
01:05:42,000 --> 01:05:47,880
C++ it up until very recently so that's

1438
01:05:45,690 --> 01:05:49,588
you know that's how that works I don't

1439
01:05:47,880 --> 01:05:52,588
know why I've still got changes here

1440
01:05:49,588 --> 01:05:54,828
undo undo undo back to the beginning

1441
01:05:52,588 --> 01:05:54,828
please

1442
01:06:00,309 --> 01:06:05,028
there yeah all right so that's all

1443
01:06:03,980 --> 01:06:07,389
that's going on there hopefully that

1444
01:06:05,028 --> 01:06:07,389
makes some sense

1445
01:06:18,559 --> 01:06:21,889
well the space enemies be used for the

1446
01:06:20,750 --> 01:06:23,119
collision optimization you were talking

1447
01:06:21,889 --> 01:06:28,699
about in an earlier stream

1448
01:06:23,119 --> 01:06:30,380
oh and squared stuff probably not

1449
01:06:28,699 --> 01:06:34,129
they aren't super suited to that because

1450
01:06:30,380 --> 01:06:37,789
they're more about defining the

1451
01:06:34,130 --> 01:06:41,059
locations of things so we could choose

1452
01:06:37,789 --> 01:06:42,889
to do that but if we did would probably

1453
01:06:41,059 --> 01:06:43,429
break those up more and that's not a bad

1454
01:06:42,889 --> 01:06:49,929
idea

1455
01:06:43,429 --> 01:06:53,269
like the way like the way that we would

1456
01:06:49,929 --> 01:06:56,539
the way that we could envision the

1457
01:06:53,269 --> 01:06:59,480
structure of the world is we could start

1458
01:06:56,539 --> 01:07:01,400
thinking about instead of having those

1459
01:06:59,480 --> 01:07:03,500
spatial things be entities they could be

1460
01:07:01,400 --> 01:07:05,329
sort of a superstructure that gets

1461
01:07:03,500 --> 01:07:09,559
divided up and is used as a spatial

1462
01:07:05,329 --> 01:07:11,480
partition we could go that route so I

1463
01:07:09,559 --> 01:07:13,159
don't know but we probably wouldn't use

1464
01:07:11,480 --> 01:07:14,389
them if we did go that route they

1465
01:07:13,159 --> 01:07:15,739
wouldn't be entities anymore they'd be a

1466
01:07:14,389 --> 01:07:17,539
special-purpose kind of structure I

1467
01:07:15,739 --> 01:07:19,219
think but that's totally fine and

1468
01:07:17,539 --> 01:07:20,719
someone's saying the size of game and

1469
01:07:19,219 --> 01:07:23,059
put controllers works for you with G+

1470
01:07:20,719 --> 01:07:26,379
that may be because that's a valid

1471
01:07:23,059 --> 01:07:29,150
extension in in G + + G + + has

1472
01:07:26,380 --> 01:07:31,070
extensions it should have been something

1473
01:07:29,150 --> 01:07:35,389
that they allow and see but of course

1474
01:07:31,070 --> 01:07:46,570
you can't actually do it in regular C++

1475
01:07:35,389 --> 01:07:51,259
right you know I'm saying so that's just

1476
01:07:46,570 --> 01:07:52,490
the way it goes but G but good news C++

1477
01:07:51,260 --> 01:07:54,470
has extensions and some of those

1478
01:07:52,489 --> 01:07:56,329
tensions are good that would be a good

1479
01:07:54,469 --> 01:07:58,279
one I think that should have worked

1480
01:07:56,329 --> 01:08:01,489
right I think that should have been how

1481
01:07:58,280 --> 01:08:04,450
how sighs have worked it just

1482
01:08:01,489 --> 01:08:04,449
unfortunately doesn't

1483
01:08:09,210 --> 01:08:12,990
I noticed that you tend to mostly skip

1484
01:08:11,429 --> 01:08:14,519
over questions past the first question

1485
01:08:12,989 --> 01:08:16,529
mark is it because you just parsed that

1486
01:08:14,519 --> 01:08:19,859
way or the rest tends to not be much

1487
01:08:16,529 --> 01:08:22,529
interesting well I see the whole

1488
01:08:19,859 --> 01:08:26,460
question well Mike what my parser does

1489
01:08:22,529 --> 01:08:28,769
is it pulls out the question the the the

1490
01:08:26,460 --> 01:08:31,170
IRC line from Q : through to the end of

1491
01:08:28,770 --> 01:08:33,540
the line so that means that as long as

1492
01:08:31,170 --> 01:08:35,819
the question fits in one ir c comment i

1493
01:08:33,539 --> 01:08:39,750
see the whole thing if it's too long i

1494
01:08:35,819 --> 01:08:43,019
won't see the second part so that

1495
01:08:39,750 --> 01:08:44,250
sometimes happens but in general no i

1496
01:08:43,020 --> 01:08:45,950
read the whole question and then just

1497
01:08:44,250 --> 01:08:48,600
answer the part that I think is

1498
01:08:45,949 --> 01:08:50,789
interesting the answer but sometimes I

1499
01:08:48,600 --> 01:08:52,079
also just forget to look back in answer

1500
01:08:50,789 --> 01:08:53,430
the second part if the question if my

1501
01:08:52,079 --> 01:08:54,720
answer kind of goes kind of long I might

1502
01:08:53,430 --> 01:08:56,490
just forget so it could just mean me

1503
01:08:54,720 --> 01:09:04,170
being forgetful I may have seen it and

1504
01:08:56,489 --> 01:09:05,579
then forgot but yeah for things like the

1505
01:09:04,170 --> 01:09:06,989
projectiles are we going to extend their

1506
01:09:05,579 --> 01:09:08,369
bounding boxes in the z-axis so they

1507
01:09:06,989 --> 01:09:10,139
will always hit enemies that are below

1508
01:09:08,369 --> 01:09:12,840
them or are we going to handle that in

1509
01:09:10,140 --> 01:09:15,210
screen space somehow so I think that'll

1510
01:09:12,840 --> 01:09:17,489
depend on whether we want bullets you

1511
01:09:15,210 --> 01:09:21,510
know style things to be able to fly over

1512
01:09:17,489 --> 01:09:23,789
or under entities like you know I'm not

1513
01:09:21,510 --> 01:09:25,680
sure is the answer to that that'll be a

1514
01:09:23,789 --> 01:09:26,970
gameplay concern when we actually are in

1515
01:09:25,680 --> 01:09:30,810
there playing it a little more and

1516
01:09:26,970 --> 01:09:32,490
seeing what we like about that so yeah

1517
01:09:30,810 --> 01:09:36,180
and I should add speaking of that I

1518
01:09:32,489 --> 01:09:40,079
should add a note to fix that bug we

1519
01:09:36,180 --> 01:09:42,900
have with projectiles fix swerved

1520
01:09:40,079 --> 01:09:44,369
collisions so when we're cleaning up our

1521
01:09:42,899 --> 01:09:45,869
predicate sigh suspect our predicates

1522
01:09:44,369 --> 01:09:47,699
are step wrong now and the predicates

1523
01:09:45,869 --> 01:09:50,130
are kind of a mess right now so when we

1524
01:09:47,699 --> 01:09:52,970
go to do that clean up I'd like to fix

1525
01:09:50,130 --> 01:09:52,970
the swords as well

1526
01:10:04,390 --> 01:10:11,450
do you dislike templates yes I do

1527
01:10:07,279 --> 01:10:12,739
just like templates and I've talked

1528
01:10:11,449 --> 01:10:14,510
about that skill times before really the

1529
01:10:12,739 --> 01:10:16,670
short answer so I don't have to rehash

1530
01:10:14,510 --> 01:10:18,079
it again is just I don't like templates

1531
01:10:16,670 --> 01:10:21,140
because I really like meta programming

1532
01:10:18,079 --> 01:10:22,850
and I feel like templates are so bad at

1533
01:10:21,140 --> 01:10:24,560
it that I just get frustrated if I ever

1534
01:10:22,850 --> 01:10:26,720
try to use them I'm like these are awful

1535
01:10:24,560 --> 01:10:28,370
like everything you might want to do is

1536
01:10:26,720 --> 01:10:31,820
done in the worst possible way you know

1537
01:10:28,369 --> 01:10:33,170
and so I probably wouldn't be so angry

1538
01:10:31,819 --> 01:10:34,519
at templates if it weren't for the fact

1539
01:10:33,170 --> 01:10:36,260
that I actually really like meta

1540
01:10:34,520 --> 01:10:38,210
programming and I'm like seriously guys

1541
01:10:36,260 --> 01:10:40,280
this is the way you did it

1542
01:10:38,210 --> 01:10:41,480
so it really just gets me angry because

1543
01:10:40,279 --> 01:10:43,189
I'm like okay it's clear that whoever

1544
01:10:41,479 --> 01:10:44,719
made templates has no idea how to matte

1545
01:10:43,189 --> 01:10:46,759
a program like they were just like

1546
01:10:44,720 --> 01:10:48,380
they'd never done it before they don't

1547
01:10:46,760 --> 01:10:52,039
understand it they were thinking of it

1548
01:10:48,380 --> 01:10:54,680
from a very abstract you know not I

1549
01:10:52,039 --> 01:10:56,359
don't you know not not the perspective

1550
01:10:54,680 --> 01:10:57,770
of someone who ships software using meta

1551
01:10:56,359 --> 01:10:59,449
programming they were coming in from at

1552
01:10:57,770 --> 01:11:01,280
from some weird like language design

1553
01:10:59,449 --> 01:11:03,500
thing where which is never a good place

1554
01:11:01,279 --> 01:11:05,779
to start and so I just get frustrated

1555
01:11:03,500 --> 01:11:07,039
and angry and I'm like ah and so I don't

1556
01:11:05,779 --> 01:11:12,159
use them anymore

1557
01:11:07,039 --> 01:11:12,159
pretty much at all because of that

1558
01:11:16,859 --> 01:11:20,279
how will you handle something like an

1559
01:11:18,750 --> 01:11:22,139
explosion that affects all things in an

1560
01:11:20,279 --> 01:11:25,500
area then it's not one entity colliding

1561
01:11:22,139 --> 01:11:27,480
with another no it is right basically

1562
01:11:25,500 --> 01:11:30,050
every time that you handle something

1563
01:11:27,479 --> 01:11:32,009
there's no such thing in computers as

1564
01:11:30,050 --> 01:11:35,279
something affecting a bunch of things

1565
01:11:32,010 --> 01:11:38,369
simultaneously you can only operate on

1566
01:11:35,279 --> 01:11:42,300
two variables at once that's just the

1567
01:11:38,368 --> 01:11:44,189
nature of a CPU basically right and so

1568
01:11:42,300 --> 01:11:45,570
what ends up happening is even if you

1569
01:11:44,189 --> 01:11:47,779
have the concept of an entity that's

1570
01:11:45,569 --> 01:11:51,389
affecting lots of entities it's still

1571
01:11:47,779 --> 01:11:52,920
doing it piecewise so if you do an

1572
01:11:51,389 --> 01:11:54,719
explosion that's affecting a bunch of

1573
01:11:52,920 --> 01:11:56,250
entities you're still looping through

1574
01:11:54,719 --> 01:11:59,100
each of the entities and having them

1575
01:11:56,250 --> 01:12:00,329
collide and so you know it would be the

1576
01:11:59,100 --> 01:12:02,340
same way that it works right now where

1577
01:12:00,329 --> 01:12:04,380
you loop over all of the things that the

1578
01:12:02,340 --> 01:12:10,650
explosion touches and update them

1579
01:12:04,380 --> 01:12:12,389
individually right and as for the person

1580
01:12:10,649 --> 01:12:14,339
who's asking about what I think about

1581
01:12:12,389 --> 01:12:15,690
the Vulcan API again there's I've

1582
01:12:14,340 --> 01:12:21,510
already answered that on a previous

1583
01:12:15,689 --> 01:12:23,158
stream and the not to rehash it again

1584
01:12:21,510 --> 01:12:25,050
the very short answer is they haven't

1585
01:12:23,158 --> 01:12:29,609
released the API so I can't actually

1586
01:12:25,050 --> 01:12:33,630
discuss it in any detail because I

1587
01:12:29,609 --> 01:12:37,859
haven't had the opportunity to see its

1588
01:12:33,630 --> 01:12:39,359
actual design once I have the API in

1589
01:12:37,859 --> 01:12:40,679
front of me and I'm able to evaluate it

1590
01:12:39,359 --> 01:12:41,149
I will be able to give a better opinion

1591
01:12:40,679 --> 01:12:45,449
about it

1592
01:12:41,149 --> 01:12:47,750
but until then it's nothing really you

1593
01:12:45,448 --> 01:12:47,750
can say

1594
01:12:59,488 --> 01:13:10,559
so looks like we're at the end looks

1595
01:13:07,800 --> 01:13:12,600
like we're at the end of the questions

1596
01:13:10,560 --> 01:13:17,489
which is good because it's right about

1597
01:13:12,600 --> 01:13:20,940
the end of the stream - all right well I

1598
01:13:17,488 --> 01:13:23,729
guess I will wrap things up then let's

1599
01:13:20,939 --> 01:13:26,519
go ahead and close down good thing here

1600
01:13:23,729 --> 01:13:30,059
maybe save our mischief I think I forgot

1601
01:13:26,520 --> 01:13:33,090
to do that the other day and so I like

1602
01:13:30,060 --> 01:13:36,360
it so the mischief file ends up in the

1603
01:13:33,090 --> 01:13:39,329
handmade misc directory it's blackboard

1604
01:13:36,359 --> 01:13:40,799
art and so I try to save that

1605
01:13:39,329 --> 01:13:42,479
periodically so that when people

1606
01:13:40,800 --> 01:13:43,860
download the source code they can open

1607
01:13:42,479 --> 01:13:47,488
up the drawings file if they want to

1608
01:13:43,859 --> 01:13:51,569
that's the that's the thought anyway so

1609
01:13:47,488 --> 01:13:55,979
yeah all right let's go ahead and end

1610
01:13:51,569 --> 01:13:57,449
the stream that brings us to the end of

1611
01:13:55,979 --> 01:13:59,309
another episode of handmade hero thank

1612
01:13:57,449 --> 01:14:00,840
you very much for joining me this this

1613
01:13:59,310 --> 01:14:02,640
morning even if it was a bit of a sleepy

1614
01:14:00,840 --> 01:14:05,219
morning we did some reasonable coding it

1615
01:14:02,640 --> 01:14:05,969
worked out okay so thank you very much

1616
01:14:05,219 --> 01:14:07,739
for joining me for the pleasure of

1617
01:14:05,969 --> 01:14:12,510
coding with you as always even if we are

1618
01:14:07,738 --> 01:14:14,669
a little bit sleepy if you would like to

1619
01:14:12,510 --> 01:14:16,170
follow along at home obviously like I

1620
01:14:14,670 --> 01:14:17,909
say you can pre-order the game on

1621
01:14:16,170 --> 01:14:20,399
handmade hero org and it comes with the

1622
01:14:17,909 --> 01:14:22,229
source code so even now before we've

1623
01:14:20,399 --> 01:14:23,339
really done much of the game you can

1624
01:14:22,229 --> 01:14:25,649
start playing around with it yourself

1625
01:14:23,340 --> 01:14:27,119
and learning from the source code

1626
01:14:25,649 --> 01:14:28,920
playing around that making your own

1627
01:14:27,119 --> 01:14:30,420
experiments in there and changing things

1628
01:14:28,920 --> 01:14:31,859
and see how it works that's a pretty

1629
01:14:30,420 --> 01:14:33,810
good way to variable things so if you

1630
01:14:31,859 --> 01:14:35,369
pre-order the game you get that and it's

1631
01:14:33,810 --> 01:14:37,260
updated every night after I'm done

1632
01:14:35,369 --> 01:14:39,689
coding so you can follow along with

1633
01:14:37,260 --> 01:14:42,300
stuff literally as I do it if you'd like

1634
01:14:39,689 --> 01:14:43,619
to we also have a patreon if you want to

1635
01:14:42,300 --> 01:14:45,360
support the video series you can always

1636
01:14:43,619 --> 01:14:47,159
subscribe to that very much appreciated

1637
01:14:45,359 --> 01:14:48,659
we also have a news and forum site

1638
01:14:47,159 --> 01:14:49,949
that's got a bunch of information from

1639
01:14:48,659 --> 01:14:51,389
the community about handmade hero it's

1640
01:14:49,949 --> 01:14:53,130
got ports to Mac and Linux got a great

1641
01:14:51,390 --> 01:14:55,170
annotated episode guide I highly

1642
01:14:53,130 --> 01:14:57,090
recommend checking out just a lot of

1643
01:14:55,170 --> 01:14:57,989
good stuff on there so if you're trying

1644
01:14:57,090 --> 01:14:59,880
to learn for the series that's

1645
01:14:57,988 --> 01:15:01,709
definitely the place to go we also have

1646
01:14:59,880 --> 01:15:04,289
a tweet bot that tweets the schedule to

1647
01:15:01,710 --> 01:15:06,060
you newly freshly updated so that it's

1648
01:15:04,289 --> 01:15:08,130
even daylight savings time aware ladies

1649
01:15:06,060 --> 01:15:11,700
and gentlemen that's how how fancy it is

1650
01:15:08,130 --> 01:15:16,859
it changes between PST and PDT

1651
01:15:11,699 --> 01:15:18,510
you know no y2k bugs here man so yeah if

1652
01:15:16,859 --> 01:15:21,329
you want to know when the streams gonna

1653
01:15:18,510 --> 01:15:24,060
be and you want to know in advance every

1654
01:15:21,329 --> 01:15:25,949
day what time the streams gonna air and

1655
01:15:24,060 --> 01:15:27,450
also on the weekends it post schedule

1656
01:15:25,949 --> 01:15:28,079
for the coming week so on that sort of

1657
01:15:27,449 --> 01:15:30,300
stuff

1658
01:15:28,079 --> 01:15:32,939
that's the place to check it out and you

1659
01:15:30,300 --> 01:15:35,340
can also follow that bots on Twitter if

1660
01:15:32,939 --> 01:15:38,460
you want to have it sort of integrate

1661
01:15:35,340 --> 01:15:42,659
into your feed so that's it everyone I

1662
01:15:38,460 --> 01:15:47,130
think speaking of the schedule I think I

1663
01:15:42,659 --> 01:15:48,630
may have to to do only three days next

1664
01:15:47,130 --> 01:15:51,060
week it may be just Wednesday Thursday

1665
01:15:48,630 --> 01:15:54,210
Friday because I will be out of town

1666
01:15:51,060 --> 01:16:00,150
potentially Monday Tuesday depending on

1667
01:15:54,210 --> 01:16:02,699
how the business trip falls out so yeah

1668
01:16:00,149 --> 01:16:04,949
I I would say definitely double-check

1669
01:16:02,699 --> 01:16:07,739
that schedule and and take a look at the

1670
01:16:04,949 --> 01:16:09,000
tweet bot Sunday to figure out when the

1671
01:16:07,739 --> 01:16:10,679
streams gonna be if you want to catch it

1672
01:16:09,000 --> 01:16:12,810
because the first stream may actually be

1673
01:16:10,680 --> 01:16:16,020
Wednesday next week that'll probably the

1674
01:16:12,810 --> 01:16:17,670
end of the bit of the traveling again I

1675
01:16:16,020 --> 01:16:19,080
traveled last week and I got to travel a

1676
01:16:17,670 --> 01:16:20,850
little bit more this week but after that

1677
01:16:19,079 --> 01:16:22,380
should be pretty clear sailing for a

1678
01:16:20,850 --> 01:16:25,530
while and we should be back to being

1679
01:16:22,380 --> 01:16:27,810
able to do five streams a week no no

1680
01:16:25,529 --> 01:16:29,369
problem although people often are very

1681
01:16:27,810 --> 01:16:31,830
happy when I take a day off because they

1682
01:16:29,369 --> 01:16:33,149
like to catch up so you'll have two more

1683
01:16:31,829 --> 01:16:35,519
days potentially next week to catch up

1684
01:16:33,149 --> 01:16:37,979
but then after that probably not for a

1685
01:16:35,520 --> 01:16:41,100
little while so anyway keep an eye on

1686
01:16:37,979 --> 01:16:45,539
that and I think probably I will see you

1687
01:16:41,100 --> 01:16:49,260
next on Wednesday so so until then have

1688
01:16:45,539 --> 01:16:51,380
a great weekend and I will see you next

1689
01:16:49,260 --> 01:16:51,380
week

