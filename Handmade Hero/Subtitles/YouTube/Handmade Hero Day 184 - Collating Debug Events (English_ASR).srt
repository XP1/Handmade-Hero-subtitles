1
00:00:00,140 --> 00:00:04,830
start growing hello everyone and welcome

2
00:00:03,569 --> 00:00:09,119
to handmade heroes sure we could a

3
00:00:04,830 --> 00:00:11,910
complete game live on stream and part of

4
00:00:09,119 --> 00:00:13,169
programming an engine which we do since

5
00:00:11,910 --> 00:00:14,939
we're doing everything from scratch we

6
00:00:13,169 --> 00:00:17,910
have everything from the very lowest of

7
00:00:14,939 --> 00:00:21,358
low-level codes to the highest of high

8
00:00:17,910 --> 00:00:23,969
level bits well shouldn't say high level

9
00:00:21,359 --> 00:00:25,800
we have all the code you can assign

10
00:00:23,969 --> 00:00:27,479
whatever level to it do you want the

11
00:00:25,800 --> 00:00:29,310
part of that is definitely debugging and

12
00:00:27,480 --> 00:00:31,589
performance analysis and one of the

13
00:00:29,309 --> 00:00:33,479
things that we wanted to do now that we

14
00:00:31,589 --> 00:00:35,429
sort of have our basic stuff all working

15
00:00:33,479 --> 00:00:36,869
is we wanted to get some visibility into

16
00:00:35,429 --> 00:00:40,350
how the code works so we're making a

17
00:00:36,869 --> 00:00:42,808
little debug system where we can

18
00:00:40,350 --> 00:00:44,219
annotate our code with some markup and

19
00:00:42,808 --> 00:00:45,659
then while the game is running it will

20
00:00:44,219 --> 00:00:48,058
display for us a bunch of information

21
00:00:45,659 --> 00:00:50,009
about what it's doing and we've done a

22
00:00:48,058 --> 00:00:51,959
bunch of work to record that information

23
00:00:50,009 --> 00:00:53,519
but we haven't done too much work to

24
00:00:51,960 --> 00:00:55,500
visualize it and that's sort of what we

25
00:00:53,520 --> 00:00:58,680
want to work on today so today's a

26
00:00:55,500 --> 00:01:00,269
coding day for sure's so it's day 184 if

27
00:00:58,679 --> 00:01:03,119
you want to follow along at home and you

28
00:01:00,270 --> 00:01:05,338
preorder the game take a look at day 183

29
00:01:03,119 --> 00:01:06,750
source code unpack that to a directory

30
00:01:05,338 --> 00:01:07,829
that's what I'm starting with here so if

31
00:01:06,750 --> 00:01:10,680
you want to follow along with what I'm

32
00:01:07,829 --> 00:01:14,519
about to do that is the source code with

33
00:01:10,680 --> 00:01:18,090
which to start now where we left off is

34
00:01:14,519 --> 00:01:21,269
we have the platform layer and the game

35
00:01:18,090 --> 00:01:23,130
together running through the same debug

36
00:01:21,269 --> 00:01:24,839
system which is nice even though they're

37
00:01:23,129 --> 00:01:27,259
on either sides of that DLL boundary

38
00:01:24,840 --> 00:01:30,540
they're running together which is great

39
00:01:27,259 --> 00:01:32,909
so you can actually see it all happening

40
00:01:30,540 --> 00:01:34,290
here right and we're sort of getting a

41
00:01:32,909 --> 00:01:35,700
bunch of readouts these are the

42
00:01:34,290 --> 00:01:36,990
functions that are all there some of

43
00:01:35,700 --> 00:01:40,200
them are in the platform layer some of

44
00:01:36,989 --> 00:01:41,908
them are not etc etc and so what we'd

45
00:01:40,200 --> 00:01:44,460
like to do now is we'd like to start

46
00:01:41,909 --> 00:01:46,320
working on how we can actually view this

47
00:01:44,459 --> 00:01:53,459
information in a way that's going to be

48
00:01:46,319 --> 00:01:56,899
you know more exciting right we'd like

49
00:01:53,459 --> 00:02:02,519
to be able to do something where we can

50
00:01:56,899 --> 00:02:04,409
we can explore we can investigate what's

51
00:02:02,519 --> 00:02:05,968
actually happening in a way that doesn't

52
00:02:04,409 --> 00:02:07,829
involve us trying to make sense of just

53
00:02:05,968 --> 00:02:10,079
a giant tableau of numbers which you

54
00:02:07,828 --> 00:02:13,280
know admittedly would be pretty hardcore

55
00:02:10,080 --> 00:02:14,990
of us to do but why do something our

56
00:02:13,280 --> 00:02:18,349
selves when we can program a computer to

57
00:02:14,990 --> 00:02:20,240
do it right that's kind of why we

58
00:02:18,349 --> 00:02:22,039
program computers in the first place so

59
00:02:20,240 --> 00:02:24,800
what we're gonna do today is start

60
00:02:22,039 --> 00:02:26,929
looking at how we could sort of collate

61
00:02:24,800 --> 00:02:29,150
this information and and sort of use it

62
00:02:26,930 --> 00:02:31,280
in a way to to make something more

63
00:02:29,150 --> 00:02:33,640
accessible and more readily

64
00:02:31,280 --> 00:02:37,610
understandable for us so that we can

65
00:02:33,639 --> 00:02:40,609
explore it easily right so what I'd like

66
00:02:37,610 --> 00:02:42,520
to do is start by having going back to

67
00:02:40,610 --> 00:02:45,140
some of that concept that I had before

68
00:02:42,520 --> 00:02:46,700
where we've got sort of a bar chart

69
00:02:45,139 --> 00:02:49,458
thing so we can see on every frame what

70
00:02:46,699 --> 00:02:50,629
the bar breakdown is and then I want to

71
00:02:49,459 --> 00:02:52,759
be able to do something where we can

72
00:02:50,629 --> 00:02:54,620
sort of drill down into it right so we

73
00:02:52,759 --> 00:02:56,870
can kind of drill down into the bar in

74
00:02:54,620 --> 00:02:58,370
some kind of a way so we can start by

75
00:02:56,870 --> 00:02:59,750
looking at what's taking the time very

76
00:02:58,370 --> 00:03:02,450
quickly at a glance and then sort of

77
00:02:59,750 --> 00:03:04,459
refine and refine downward to sort of

78
00:03:02,449 --> 00:03:06,709
get more of an opinion about what is

79
00:03:04,459 --> 00:03:09,140
going on now there's some tough parts

80
00:03:06,709 --> 00:03:10,640
about this obviously and I'll just

81
00:03:09,139 --> 00:03:12,019
briefly mention what they are and we'll

82
00:03:10,639 --> 00:03:13,458
we're gonna have to try and kind of

83
00:03:12,020 --> 00:03:15,530
maybe think about what the best

84
00:03:13,459 --> 00:03:17,599
interface would be in terms of being

85
00:03:15,530 --> 00:03:19,299
able eyes that stuff so let me just

86
00:03:17,599 --> 00:03:24,340
quickly say what that is

87
00:03:19,299 --> 00:03:31,680
here's day 184 and this is like perf

88
00:03:24,340 --> 00:03:35,039
counter visualization right

89
00:03:31,680 --> 00:03:37,200
so one style is very very simple for us

90
00:03:35,039 --> 00:03:38,729
to do and well I shouldn't say very

91
00:03:37,199 --> 00:03:39,780
simple for us to do I mean we had to do

92
00:03:38,729 --> 00:03:40,949
a bunch of work now just to collect all

93
00:03:39,780 --> 00:03:42,329
this stuff and all that but so I'm not

94
00:03:40,949 --> 00:03:43,919
because a simpler work up get it all I'm

95
00:03:42,329 --> 00:03:45,930
saying is it's pretty straightforward to

96
00:03:43,919 --> 00:03:50,009
envision if I have something that's like

97
00:03:45,930 --> 00:03:51,510
you know a graph of the time where I've

98
00:03:50,009 --> 00:03:55,199
got some different things in like you

99
00:03:51,509 --> 00:03:57,719
know routine a B C D and E are all

100
00:03:55,199 --> 00:03:59,639
represented here and these are like the

101
00:03:57,719 --> 00:04:00,989
five top level functions of the program

102
00:03:59,639 --> 00:04:03,208
or whatever they could called

103
00:04:00,989 --> 00:04:04,769
then if I want to investigate one

104
00:04:03,209 --> 00:04:07,219
further I could know I could click on it

105
00:04:04,769 --> 00:04:11,129
or something and then it would open up

106
00:04:07,219 --> 00:04:12,959
that and show me what its breakdown was

107
00:04:11,128 --> 00:04:13,919
right like what were all the things that

108
00:04:12,959 --> 00:04:18,030
took time for it

109
00:04:13,919 --> 00:04:20,579
you know I and the problem with this is

110
00:04:18,029 --> 00:04:22,500
that let's say there's some common thing

111
00:04:20,579 --> 00:04:28,500
right so let's say that I do that for D

112
00:04:22,500 --> 00:04:31,589
and I also do it for a right and then

113
00:04:28,500 --> 00:04:37,579
I've got in here I've got you know f g h

114
00:04:31,589 --> 00:04:42,269
i j k and then here I've got L M G n o P

115
00:04:37,579 --> 00:04:45,659
right when I look at D and when I look

116
00:04:42,269 --> 00:04:49,469
at a what I will see is the fact that G

117
00:04:45,660 --> 00:04:50,909
the function is not taking an

118
00:04:49,470 --> 00:04:53,370
appreciable amount of the time

119
00:04:50,908 --> 00:04:55,348
necessarily right it's like it's not

120
00:04:53,370 --> 00:04:57,840
like I would single that guy out as

121
00:04:55,348 --> 00:05:00,779
being like greatly more than anyone else

122
00:04:57,839 --> 00:05:02,638
on here but if I start seeing this G in

123
00:05:00,779 --> 00:05:05,069
a lot of places then I'm like oh it

124
00:05:02,639 --> 00:05:06,329
actually turns out that in aggregate G

125
00:05:05,069 --> 00:05:07,649
is taking a lot of time because it's

126
00:05:06,329 --> 00:05:08,939
taking a bunch of time from Deen is

127
00:05:07,649 --> 00:05:10,638
taking a bunch of time from a and maybe

128
00:05:08,939 --> 00:05:14,788
taking a bunch of time from E and so on

129
00:05:10,639 --> 00:05:17,340
so we kind of need two ways of viewing

130
00:05:14,788 --> 00:05:20,370
things right we kind of want to be able

131
00:05:17,339 --> 00:05:23,848
to know two sides of the same question

132
00:05:20,370 --> 00:05:25,379
we want to know hierarchically who's

133
00:05:23,848 --> 00:05:27,990
taking the time so if we're trying to

134
00:05:25,379 --> 00:05:30,000
optimize D and we're thinking about D we

135
00:05:27,990 --> 00:05:32,280
want to know how much time G is taking

136
00:05:30,000 --> 00:05:34,168
up of D potentially so that's one thing

137
00:05:32,279 --> 00:05:36,179
I want to know but we also might want to

138
00:05:34,168 --> 00:05:38,728
know how much time does G take up of the

139
00:05:36,180 --> 00:05:41,069
frame in general without having to drill

140
00:05:38,728 --> 00:05:42,658
down all the way to every single one of

141
00:05:41,069 --> 00:05:45,990
them and then mentally try to add up in

142
00:05:42,658 --> 00:05:50,740
our heads how much that is

143
00:05:45,990 --> 00:05:54,129
that's no good right so I feel like we

144
00:05:50,740 --> 00:06:00,129
kind of want two ways of viewing it we

145
00:05:54,129 --> 00:06:03,009
want one way which is sort of like we

146
00:06:00,129 --> 00:06:08,439
want one way that's hierarchical right

147
00:06:03,009 --> 00:06:10,810
so we want like a hierarchy view which

148
00:06:08,439 --> 00:06:16,750
is this kind then I think we also want a

149
00:06:10,810 --> 00:06:20,560
like top top slow people or something

150
00:06:16,750 --> 00:06:23,170
right something which then says okay I

151
00:06:20,560 --> 00:06:25,329
don't care about the call graph I don't

152
00:06:23,170 --> 00:06:28,090
care who calls who don't matter all I

153
00:06:25,329 --> 00:06:31,120
want to know is this routine whatever

154
00:06:28,089 --> 00:06:33,639
this routine is I want to take how much

155
00:06:31,120 --> 00:06:34,870
time it's spent say exclusively of its

156
00:06:33,639 --> 00:06:36,069
children so I'm not going to count as

157
00:06:34,870 --> 00:06:39,750
children I was going to tell this time

158
00:06:36,069 --> 00:06:43,000
spent in that routine and I want to know

159
00:06:39,750 --> 00:06:44,860
sort like all of the functions and put

160
00:06:43,000 --> 00:06:45,220
them in here right or something like

161
00:06:44,860 --> 00:06:46,449
that

162
00:06:45,220 --> 00:06:48,520
or you don't even necessarily have to

163
00:06:46,449 --> 00:06:50,110
sort them just draw them all in the bar

164
00:06:48,519 --> 00:06:51,189
graph and the ones that are don't to

165
00:06:50,110 --> 00:06:52,449
give me time will be tiny and the ones

166
00:06:51,189 --> 00:06:56,230
take up a lot of time will be big or

167
00:06:52,449 --> 00:06:58,870
something right

168
00:06:56,230 --> 00:07:00,580
so that's that's what I would like

169
00:06:58,870 --> 00:07:02,500
that's that's what I would like to see

170
00:07:00,579 --> 00:07:04,029
and I think that that's probably good

171
00:07:02,500 --> 00:07:05,319
enough at the moment is just being able

172
00:07:04,029 --> 00:07:06,750
to view it in these two different ways

173
00:07:05,319 --> 00:07:11,709
so I'd want to be able to like pick

174
00:07:06,750 --> 00:07:20,110
between those two and and that really be

175
00:07:11,709 --> 00:07:21,639
it for now okay so that's what I'm going

176
00:07:20,110 --> 00:07:25,780
to try I'm going to try to make

177
00:07:21,639 --> 00:07:28,360
something that works like that and so

178
00:07:25,779 --> 00:07:29,649
let's just get started right let's just

179
00:07:28,360 --> 00:07:32,860
see what we can do

180
00:07:29,649 --> 00:07:34,509
pushing towards that and that'll be the

181
00:07:32,860 --> 00:07:36,009
goal for next week is getting a nice

182
00:07:34,509 --> 00:07:37,060
view thing in so today we'll just get

183
00:07:36,009 --> 00:07:38,620
started on that so if you only have one

184
00:07:37,060 --> 00:07:39,790
day where you know before the end of the

185
00:07:38,620 --> 00:07:43,439
week we're not gonna probably get that

186
00:07:39,790 --> 00:07:48,280
far but we'll just do what we can so

187
00:07:43,439 --> 00:07:50,350
here we are in the debug code and we

188
00:07:48,279 --> 00:07:52,119
have sort of our collate debug records

189
00:07:50,350 --> 00:07:54,189
thing I'm pretty sure update debug

190
00:07:52,120 --> 00:07:57,370
records is not used anymore right look

191
00:07:54,189 --> 00:07:58,468
we don't even do this thing at all so

192
00:07:57,370 --> 00:08:00,329
I'm just going to go ahead and delete

193
00:07:58,468 --> 00:08:04,468
right it never gets called by anyone

194
00:08:00,329 --> 00:08:05,818
it's it's old and so what we'd like to

195
00:08:04,468 --> 00:08:10,639
do is kind of revamp what we're doing

196
00:08:05,819 --> 00:08:13,528
here we've got these hex get hex things

197
00:08:10,639 --> 00:08:15,838
what is that oh this is so this is for

198
00:08:13,528 --> 00:08:17,879
that sort of weird debug text-align

199
00:08:15,838 --> 00:08:20,399
thing where I indulge people's fantasies

200
00:08:17,879 --> 00:08:21,509
of weird text on lines and stuff like

201
00:08:20,399 --> 00:08:23,579
that

202
00:08:21,509 --> 00:08:24,538
all right so I'm gonna skip that stuff

203
00:08:23,579 --> 00:08:26,459
for now because that's not super

204
00:08:24,538 --> 00:08:28,438
relevant so we have here we've got these

205
00:08:26,459 --> 00:08:30,509
debug statistics I don't know that I

206
00:08:28,439 --> 00:08:34,110
super care about those debug statistics

207
00:08:30,509 --> 00:08:35,310
at the moment so I'm gonna leave them I

208
00:08:34,110 --> 00:08:37,408
mean there's nothing wrong with it as it

209
00:08:35,309 --> 00:08:39,658
is but I'd say but I don't think we care

210
00:08:37,408 --> 00:08:41,250
about that too much so in the debug

211
00:08:39,658 --> 00:08:44,929
overlay I'm just gonna start here and

212
00:08:41,250 --> 00:08:44,929
I'm gonna sort of pretend that we can

213
00:08:47,269 --> 00:08:53,789
you know kind of do whatever we want to

214
00:08:50,039 --> 00:08:57,120
do here I'm gonna pretend I have

215
00:08:53,789 --> 00:08:59,188
whatever I want and I'm gonna draw it as

216
00:08:57,120 --> 00:09:02,370
if I had the data structures I want and

217
00:08:59,188 --> 00:09:03,929
then I will go like reverse engineer

218
00:09:02,370 --> 00:09:07,110
essentially what those data structures

219
00:09:03,929 --> 00:09:09,989
would have to be and then I will make

220
00:09:07,110 --> 00:09:13,409
the collation functions make them for me

221
00:09:09,990 --> 00:09:20,389
right that's my that's my thought on

222
00:09:13,409 --> 00:09:20,389
that so what I want to do at the outset

223
00:09:21,919 --> 00:09:29,669
is I want to have two modes right I said

224
00:09:27,089 --> 00:09:33,509
I wanted two modes so I'm gonna want

225
00:09:29,669 --> 00:09:35,399
like one mode well I'm drawing a bar

226
00:09:33,509 --> 00:09:37,110
graph but I have two sources for the bar

227
00:09:35,399 --> 00:09:39,149
graph so I might just say that I've just

228
00:09:37,110 --> 00:09:41,909
got the bar graph so maybe the collate

229
00:09:39,149 --> 00:09:45,448
whatever the collate does produces a

230
00:09:41,909 --> 00:09:47,808
structure that I can walk that is what

231
00:09:45,448 --> 00:09:51,929
the bar graph should look like right

232
00:09:47,808 --> 00:09:55,139
something like this and so what I do is

233
00:09:51,929 --> 00:09:57,508
I'd say okay instead of any of this

234
00:09:55,139 --> 00:09:59,100
stuff I don't even know I don't I don't

235
00:09:57,509 --> 00:10:01,709
want to really know what this does I

236
00:09:59,100 --> 00:10:04,308
don't care I'm just gonna like get rid

237
00:10:01,708 --> 00:10:07,619
of it temporarily

238
00:10:04,308 --> 00:10:10,610
zero yeah I don't care about any of that

239
00:10:07,620 --> 00:10:14,460
stuff that's gonna go away for now

240
00:10:10,610 --> 00:10:23,639
so I'm gonna come in here and I'm going

241
00:10:14,460 --> 00:10:26,040
to say that yeah I'm gonna say that this

242
00:10:23,639 --> 00:10:28,080
is essentially going to run very similar

243
00:10:26,039 --> 00:10:30,329
to the way that it ran before so we've

244
00:10:28,080 --> 00:10:31,800
got you know the settings here we have

245
00:10:30,330 --> 00:10:33,389
like how high were charts gonna be this

246
00:10:31,799 --> 00:10:34,969
is all you know can just remain the same

247
00:10:33,389 --> 00:10:37,769
cuz we're just making that chart right

248
00:10:34,970 --> 00:10:40,889
then we've got this snapshot index thing

249
00:10:37,769 --> 00:10:44,309
and it's gonna run over however many of

250
00:10:40,889 --> 00:10:46,500
these we want and again the snapshot

251
00:10:44,309 --> 00:10:48,259
count I think at this point is now going

252
00:10:46,500 --> 00:10:50,580
to mean something slightly differently

253
00:10:48,259 --> 00:10:53,039
really what that's gonna do is like the

254
00:10:50,580 --> 00:10:55,139
frame look back is what that's more

255
00:10:53,039 --> 00:10:57,449
gonna mean right how many frames have

256
00:10:55,139 --> 00:10:59,580
looked back we have and so these these

257
00:10:57,450 --> 00:11:01,680
snapshots and stuff this is not gonna be

258
00:10:59,580 --> 00:11:05,060
a meaningful thing anymore and I'm gonna

259
00:11:01,679 --> 00:11:08,429
kind of get rid of that temporarily I

260
00:11:05,059 --> 00:11:18,359
thought I think T bucks take to the

261
00:11:08,429 --> 00:11:19,500
counter states yeah yeah in fact this

262
00:11:18,360 --> 00:11:21,990
stuff doesn't really even need to be

263
00:11:19,500 --> 00:11:24,509
stored over time but that's a separate

264
00:11:21,990 --> 00:11:26,430
issue all right so what I want to do

265
00:11:24,509 --> 00:11:28,679
here is I want to say we've got some

266
00:11:26,429 --> 00:11:31,709
number of frames right so we've got

267
00:11:28,679 --> 00:11:33,839
frames from zero to something which is

268
00:11:31,710 --> 00:11:36,060
going to be like something in a frame

269
00:11:33,840 --> 00:11:38,330
count so this is gonna be like debug

270
00:11:36,059 --> 00:11:41,819
state frame count or something like that

271
00:11:38,330 --> 00:11:44,280
and then for each frame I'm gonna go

272
00:11:41,820 --> 00:11:48,810
grab whatever that frame is I'm gonna

273
00:11:44,279 --> 00:11:55,199
say debug state frames plus frame index

274
00:11:48,809 --> 00:11:57,689
like so and then inside here I'm just

275
00:11:55,200 --> 00:11:59,460
gonna go ahead and do like for the frame

276
00:11:57,690 --> 00:12:01,280
I'm gonna say that there's like some

277
00:11:59,460 --> 00:12:05,970
number of elements in the frame right

278
00:12:01,279 --> 00:12:12,980
and I will just go frame elements count

279
00:12:05,970 --> 00:12:15,240
and I will what did I call this before

280
00:12:12,980 --> 00:12:16,860
well they were events I guess it's not

281
00:12:15,240 --> 00:12:19,080
really so it's not only an element it's

282
00:12:16,860 --> 00:12:21,470
more like a region index let's call it a

283
00:12:19,080 --> 00:12:25,580
region index

284
00:12:21,470 --> 00:12:33,350
feel like a region index is good region

285
00:12:25,580 --> 00:12:35,270
index is good okay that sounds

286
00:12:33,350 --> 00:12:44,840
reasonable

287
00:12:35,269 --> 00:12:45,980
yeah okay and so the scale here we're

288
00:12:44,840 --> 00:12:50,149
gonna have to work on the scale a little

289
00:12:45,980 --> 00:12:51,950
bit talk about that in a second so when

290
00:12:50,149 --> 00:12:54,319
I come through these regions I have a

291
00:12:51,950 --> 00:12:56,660
debug frame region I'm gonna call that

292
00:12:54,320 --> 00:12:59,090
region I don't know what it means I'm

293
00:12:56,659 --> 00:13:00,909
just drawing it right because I'm gonna

294
00:12:59,090 --> 00:13:03,440
use the same bar chart drawing code

295
00:13:00,909 --> 00:13:05,269
regardless of which of the view types

296
00:13:03,440 --> 00:13:07,970
remember I said I kind of want hierarchy

297
00:13:05,269 --> 00:13:10,970
and and top people I don't want to have

298
00:13:07,970 --> 00:13:13,639
to like write to so code for the same

299
00:13:10,970 --> 00:13:15,710
thing so I'm just gonna say that I just

300
00:13:13,639 --> 00:13:17,809
don't know so I just got region

301
00:13:15,710 --> 00:13:20,269
so whatever the frame is its regions

302
00:13:17,809 --> 00:13:24,049
plus the region index is gonna get me

303
00:13:20,269 --> 00:13:27,559
out whatever that that region was right

304
00:13:24,049 --> 00:13:30,319
and so that's fine and then in there I

305
00:13:27,559 --> 00:13:33,559
will have something that will tell me

306
00:13:30,320 --> 00:13:46,030
how big you know this thing was supposed

307
00:13:33,559 --> 00:13:46,029
to be does that make sense so there is

308
00:13:46,230 --> 00:13:54,070
there is sort of one additional factor

309
00:13:50,649 --> 00:14:00,639
that I'm not sure how I want to handle

310
00:13:54,070 --> 00:14:02,620
and that is also the fact that I I kind

311
00:14:00,639 --> 00:14:05,620
of need these things to be able to

312
00:14:02,620 --> 00:14:08,980
support I suppose multi-threaded sorts

313
00:14:05,620 --> 00:14:11,289
of stuff so I'm not sure how I want to

314
00:14:08,980 --> 00:14:13,360
do that like you know if we're single

315
00:14:11,289 --> 00:14:15,189
threaded we can just use the bar but if

316
00:14:13,360 --> 00:14:17,379
we're multi threaded we really have kind

317
00:14:15,190 --> 00:14:19,180
of like multiple tracks right so a

318
00:14:17,379 --> 00:14:22,570
single bar you could almost think of as

319
00:14:19,179 --> 00:14:26,739
having like multiple tracks so in there

320
00:14:22,570 --> 00:14:31,778
you know you might have a thing that was

321
00:14:26,740 --> 00:14:33,129
like doing this sort of nonsense where

322
00:14:31,778 --> 00:14:36,009
you sort of have like this thread is

323
00:14:33,129 --> 00:14:37,389
doing stuff you know and and and then I

324
00:14:36,009 --> 00:14:40,120
guess we would you know we'd want to

325
00:14:37,389 --> 00:14:42,549
have sort of a notion of when a thread

326
00:14:40,120 --> 00:14:44,649
was not doing anything so we could mark

327
00:14:42,549 --> 00:14:46,299
it it's not actually being used or

328
00:14:44,649 --> 00:14:48,450
something like this but there's

329
00:14:46,299 --> 00:14:50,708
definitely sort of this this notion that

330
00:14:48,450 --> 00:14:52,810
when in trying to give like a nice

331
00:14:50,708 --> 00:14:54,789
coherent snapshot of what's happening

332
00:14:52,809 --> 00:14:57,278
it's a little bit tricky because you can

333
00:14:54,789 --> 00:14:59,439
have sort of multiple different regions

334
00:14:57,278 --> 00:15:01,929
of the code being active at the same

335
00:14:59,440 --> 00:15:03,399
time because there's multiple processor

336
00:15:01,929 --> 00:15:06,458
cores that could be executing those

337
00:15:03,399 --> 00:15:14,828
regions so I'm not sure exactly how to

338
00:15:06,458 --> 00:15:17,919
handle that maybe I'll just do it by

339
00:15:14,828 --> 00:15:20,409
segmenting the bar if that makes sense

340
00:15:17,919 --> 00:15:22,929
that seems like probably the right thing

341
00:15:20,409 --> 00:15:24,429
to do but I don't know it might be too

342
00:15:22,929 --> 00:15:26,500
much information kind of crammed into

343
00:15:24,429 --> 00:15:28,059
one space maybe the smarter thing to do

344
00:15:26,500 --> 00:15:30,220
is to have a different chart per

345
00:15:28,059 --> 00:15:31,599
processor or something like this but I

346
00:15:30,220 --> 00:15:36,759
feel like you kind of want to see them

347
00:15:31,600 --> 00:15:38,620
on there it's just my thought just so

348
00:15:36,759 --> 00:15:40,838
you can have sort of that quick visual

349
00:15:38,620 --> 00:15:42,789
idea of what's happening per frame and

350
00:15:40,839 --> 00:15:46,000
we don't have to have that many frames

351
00:15:42,789 --> 00:15:47,769
of look back actually displayed like we

352
00:15:46,000 --> 00:15:49,208
might want to store 60 frames to look

353
00:15:47,769 --> 00:15:50,679
back or however many we can afford to

354
00:15:49,208 --> 00:15:54,159
store without taking up too much memory

355
00:15:50,679 --> 00:15:55,719
in the machine right we maybe restore

356
00:15:54,159 --> 00:15:57,189
that many but that doesn't necessarily

357
00:15:55,720 --> 00:15:59,269
mean we have to show that many so we

358
00:15:57,190 --> 00:16:01,459
could make the bar is fairly thick

359
00:15:59,269 --> 00:16:03,259
right we could make the bars be fairly

360
00:16:01,458 --> 00:16:05,119
thick as they go across and at that

361
00:16:03,259 --> 00:16:07,129
point it would be pretty easy for us to

362
00:16:05,120 --> 00:16:08,830
show more in there so I think I'm gonna

363
00:16:07,129 --> 00:16:11,958
just try that that's gonna be my first

364
00:16:08,830 --> 00:16:14,899
sort of thing that we try so I'll do

365
00:16:11,958 --> 00:16:18,049
something like you know channel width or

366
00:16:14,899 --> 00:16:20,389
something like this or like core width

367
00:16:18,049 --> 00:16:23,899
or something like that laying with maybe

368
00:16:20,389 --> 00:16:25,939
and the lane width is going to be let's

369
00:16:23,899 --> 00:16:27,589
say four pixels or something like that

370
00:16:25,940 --> 00:16:29,690
or maybe it's eight pixels maybe it's

371
00:16:27,589 --> 00:16:32,750
how wide it was before and then the lane

372
00:16:29,690 --> 00:16:34,580
count is probably gonna be something

373
00:16:32,750 --> 00:16:36,259
that actually comes from the debug state

374
00:16:34,580 --> 00:16:39,050
so we'll just say that there's a lane

375
00:16:36,259 --> 00:16:40,879
count that that's set there and so the

376
00:16:39,049 --> 00:16:44,088
bar width is whatever the lane width is

377
00:16:40,879 --> 00:16:47,870
times whatever the lane count is you

378
00:16:44,089 --> 00:16:50,899
know and so we come through here and we

379
00:16:47,870 --> 00:16:53,360
say alright that then gives us what we

380
00:16:50,899 --> 00:16:55,059
needed to now which is you know how big

381
00:16:53,360 --> 00:16:59,028
the chart should be and all that stuff

382
00:16:55,059 --> 00:17:01,099
and the bar spacing the bar spacing

383
00:16:59,028 --> 00:17:02,419
should really be based on the bar width

384
00:17:01,100 --> 00:17:04,880
so it should really be the bar width

385
00:17:02,419 --> 00:17:07,129
plus however much space we want however

386
00:17:04,880 --> 00:17:10,970
much space we want in between bars so we

387
00:17:07,130 --> 00:17:14,000
can leave that as something like that so

388
00:17:10,970 --> 00:17:16,338
there we go chart height chart with that

389
00:17:14,000 --> 00:17:19,939
stuff all stays the same I think and

390
00:17:16,338 --> 00:17:23,029
that looks fine to me the scale again is

391
00:17:19,939 --> 00:17:25,429
something that we would need to worry

392
00:17:23,029 --> 00:17:28,160
about sort of separately I think that

393
00:17:25,429 --> 00:17:31,519
might be something that we want to put

394
00:17:28,160 --> 00:17:33,259
in here right so we'd have like a scale

395
00:17:31,519 --> 00:17:34,819
value in there and I don't know what we

396
00:17:33,259 --> 00:17:41,329
want to call that we want to call that

397
00:17:34,819 --> 00:17:42,558
like the the frame bar scale right and

398
00:17:41,329 --> 00:17:47,589
this is I guess would be the frame bar

399
00:17:42,558 --> 00:17:47,589
Lane count it's not like that okay

400
00:17:49,529 --> 00:18:00,759
so this is going to be the frame count

401
00:17:55,710 --> 00:18:03,400
and the rest of this is pretty similar

402
00:18:00,759 --> 00:18:05,170
so we come in here we've got the frame

403
00:18:03,400 --> 00:18:07,000
we've got this stuff we don't need the

404
00:18:05,170 --> 00:18:08,289
pre-second seni more we're not doing

405
00:18:07,000 --> 00:18:14,109
that kind of dipping or anything like

406
00:18:08,289 --> 00:18:16,808
that so in here we can just say oops

407
00:18:14,109 --> 00:18:19,808
is that out and here we can just say

408
00:18:16,808 --> 00:18:23,079
okay we've got the colors we take a look

409
00:18:19,808 --> 00:18:26,859
at whatever the region index is I guess

410
00:18:23,079 --> 00:18:28,329
and we just use that color so that we

411
00:18:26,859 --> 00:18:33,909
just tried alternate colors as much as

412
00:18:28,329 --> 00:18:37,359
possible even though we really don't

413
00:18:33,910 --> 00:18:40,769
know exactly what's going on there and

414
00:18:37,359 --> 00:18:45,990
so you know we also kind of want to know

415
00:18:40,769 --> 00:18:45,990
we kind of want to do these per Lane I

416
00:18:49,410 --> 00:18:57,308
feel like we kind of want to do these

417
00:18:51,490 --> 00:19:00,429
per Lane I'm not sure I'm not sure how

418
00:18:57,308 --> 00:19:01,799
to do this part exactly we'll see so I

419
00:19:00,429 --> 00:19:04,240
don't know how to grab out the color

420
00:19:01,799 --> 00:19:06,159
because I don't really know I mean I

421
00:19:04,240 --> 00:19:07,599
guess I could use the lane index plus

422
00:19:06,160 --> 00:19:09,880
the region index or some weird thing

423
00:19:07,599 --> 00:19:12,549
like that but I guess we'll just use the

424
00:19:09,880 --> 00:19:14,010
region index for now and we'll see we'll

425
00:19:12,549 --> 00:19:17,619
see what we have to do to make that work

426
00:19:14,009 --> 00:19:19,890
in terms of the proportion what we need

427
00:19:17,619 --> 00:19:22,299
to do is just take whatever the thing is

428
00:19:19,890 --> 00:19:24,429
you know the proportion the height that

429
00:19:22,299 --> 00:19:26,049
sort of stuff we need to basically say

430
00:19:24,429 --> 00:19:28,420
that whatever the region is that's going

431
00:19:26,049 --> 00:19:30,549
to have the information in it then we

432
00:19:28,420 --> 00:19:33,850
need to figure out where we're at now

433
00:19:30,549 --> 00:19:36,519
it's worth noting that all of this stuff

434
00:19:33,849 --> 00:19:39,699
is pretty much constant right so this is

435
00:19:36,519 --> 00:19:42,129
going to be like a stack X that sort of

436
00:19:39,700 --> 00:19:47,019
Val value I assume so we can just do

437
00:19:42,130 --> 00:19:51,460
that right where we can say okay we've

438
00:19:47,019 --> 00:19:53,769
got where we should be on the X on the X

439
00:19:51,460 --> 00:19:55,779
for this bar and then all we really have

440
00:19:53,769 --> 00:19:58,240
to do here is add in whatever the lane

441
00:19:55,779 --> 00:20:00,519
index is so wherever this is Lane index

442
00:19:58,240 --> 00:20:01,859
wise that's gonna have that Lane width

443
00:20:00,519 --> 00:20:04,619
added to it

444
00:20:01,859 --> 00:20:09,309
right so that way we can kind of move

445
00:20:04,619 --> 00:20:12,609
the thing over so that should be it for

446
00:20:09,309 --> 00:20:13,929
that and then the bar width instead of

447
00:20:12,609 --> 00:20:16,629
being the whole bar width is just the

448
00:20:13,930 --> 00:20:18,940
lane width now and in fact I guess this

449
00:20:16,630 --> 00:20:25,270
is also just the lane width now as well

450
00:20:18,940 --> 00:20:28,840
right so that's good so all we really

451
00:20:25,269 --> 00:20:31,960
need to do is figure out what the height

452
00:20:28,839 --> 00:20:34,089
is I guess and now the problem is our

453
00:20:31,960 --> 00:20:39,069
stack Y is actually gonna be whatever

454
00:20:34,089 --> 00:20:42,159
the excuse me the max debug lane count

455
00:20:39,069 --> 00:20:44,740
is I suppose right

456
00:20:42,160 --> 00:20:47,980
so whatever the like whatever the lane

457
00:20:44,740 --> 00:20:51,039
count is for these bars we need to keep

458
00:20:47,980 --> 00:20:52,089
a separate stack Y for each of them does

459
00:20:51,039 --> 00:20:54,190
that make sense

460
00:20:52,089 --> 00:20:56,919
because as we stack those things up we

461
00:20:54,190 --> 00:20:59,890
kind of need to make sure of that now I

462
00:20:56,920 --> 00:21:03,640
suppose we could force the calling code

463
00:20:59,890 --> 00:21:05,110
to sort things into lanes but III don't

464
00:21:03,640 --> 00:21:07,509
know like I said we can make that

465
00:21:05,109 --> 00:21:11,319
decision later I suppose so we can go

466
00:21:07,509 --> 00:21:13,299
through the lane index to be like

467
00:21:11,319 --> 00:21:17,649
whatever this is I guess a red count

468
00:21:13,299 --> 00:21:20,109
stack y plus lane index so we can make

469
00:21:17,650 --> 00:21:22,540
the stack Y for all the ladies Nexus

470
00:21:20,109 --> 00:21:25,029
start out at the min and then we would

471
00:21:22,539 --> 00:21:27,670
always just increment whichever one the

472
00:21:25,029 --> 00:21:29,500
lane index tells us to increment right

473
00:21:27,670 --> 00:21:30,970
we could always just make it go up I

474
00:21:29,500 --> 00:21:32,890
guess the other thing we could do is

475
00:21:30,970 --> 00:21:35,740
just store if we're gonna know begin and

476
00:21:32,890 --> 00:21:40,590
end times we could just store those in

477
00:21:35,740 --> 00:21:42,849
there as well I'd have to think about I

478
00:21:40,589 --> 00:21:45,970
guess there's really no reason not to do

479
00:21:42,849 --> 00:21:48,099
it that way because then we wouldn't

480
00:21:45,970 --> 00:21:51,430
need anything right then we wouldn't

481
00:21:48,099 --> 00:21:59,679
need this at all we just use the chart

482
00:21:51,430 --> 00:22:03,490
min like so and we just have it so that

483
00:21:59,680 --> 00:22:06,610
the region itself has its min and Max so

484
00:22:03,490 --> 00:22:11,679
essentially what we do is we'd say you

485
00:22:06,609 --> 00:22:14,829
know this this Y and this height it's

486
00:22:11,679 --> 00:22:19,650
just going to be or this min Y and this

487
00:22:14,829 --> 00:22:23,559
max why is just going to be the stack y+

488
00:22:19,650 --> 00:22:26,170
whatever our scale is times whatever the

489
00:22:23,559 --> 00:22:27,460
region's min Y was and then this one's

490
00:22:26,170 --> 00:22:29,920
going to be the same thing plus the

491
00:22:27,460 --> 00:22:33,519
scale times whatever the region's max Y

492
00:22:29,920 --> 00:22:35,680
was right or max I don't know what we

493
00:22:33,519 --> 00:22:37,180
want to call it max P I guess cuz we

494
00:22:35,680 --> 00:22:41,470
don't it doesn't have it's not

495
00:22:37,180 --> 00:22:44,799
specifically Y or anything else so max P

496
00:22:41,470 --> 00:22:48,640
maybe I don't know

497
00:22:44,799 --> 00:22:50,109
so whatever we've got there should be

498
00:22:48,640 --> 00:22:51,940
sufficient because then the thing can

499
00:22:50,109 --> 00:22:54,159
just put regions wherever it wants to

500
00:22:51,940 --> 00:22:57,640
put the regions and it has the ability

501
00:22:54,160 --> 00:23:02,620
to kind of represent that data in as so

502
00:22:57,640 --> 00:23:04,270
much as it needs to and so yeah then we

503
00:23:02,619 --> 00:23:05,859
just added that laned index and that

504
00:23:04,269 --> 00:23:07,740
that all looks like it would be pretty

505
00:23:05,859 --> 00:23:11,469
sane and then we don't care about this

506
00:23:07,740 --> 00:23:14,259
and we just have to make it use these so

507
00:23:11,470 --> 00:23:16,900
it would be in order to get the center

508
00:23:14,259 --> 00:23:19,750
of that right we just all we do is we do

509
00:23:16,900 --> 00:23:24,460
this min Y Plus this max Y that would

510
00:23:19,750 --> 00:23:26,769
give us the center and then the lane

511
00:23:24,460 --> 00:23:28,690
width Lane height thing we now know that

512
00:23:26,769 --> 00:23:34,420
the height is just the max Y minus the

513
00:23:28,690 --> 00:23:37,840
min Y right so that should draw the

514
00:23:34,420 --> 00:23:44,170
chart right I mean a match that should

515
00:23:37,839 --> 00:23:45,159
do it I would think so yeah that looks

516
00:23:44,170 --> 00:23:47,800
good

517
00:23:45,160 --> 00:23:49,660
so at that point I think we have the

518
00:23:47,799 --> 00:23:50,980
drawing down and now we just need to

519
00:23:49,660 --> 00:23:53,980
figure out what that would actually

520
00:23:50,980 --> 00:23:55,720
entail so inside our debug state what

521
00:23:53,980 --> 00:23:59,620
that suggests is what we would need to

522
00:23:55,720 --> 00:24:03,309
store is the sort of debug frame region

523
00:23:59,619 --> 00:24:06,939
things write debug frame region we need

524
00:24:03,309 --> 00:24:17,279
to store those regions we would need to

525
00:24:06,940 --> 00:24:17,279
do a debug let's see we had debug frames

526
00:24:17,669 --> 00:24:30,288
and that it looks like it

527
00:24:26,209 --> 00:24:44,129
we just need to store those and so those

528
00:24:30,288 --> 00:24:46,219
debug frame debug frame region those are

529
00:24:44,128 --> 00:24:49,558
going to be exactly what they imply here

530
00:24:46,219 --> 00:24:51,838
so we know that we inside our debug

531
00:24:49,558 --> 00:24:56,128
frame we know that we've got a region

532
00:24:51,838 --> 00:25:03,298
count we know we know that we've got

533
00:24:56,128 --> 00:25:05,998
regions we know that there's nothing

534
00:25:03,298 --> 00:25:09,118
else at the moment so then we've got the

535
00:25:05,999 --> 00:25:13,709
region the put that in the wrong place

536
00:25:09,118 --> 00:25:18,838
we know that we've got the region that

537
00:25:13,709 --> 00:25:31,798
has a minty and a max T and also a lane

538
00:25:18,838 --> 00:25:34,408
index yeah so doesn't look like it has

539
00:25:31,798 --> 00:25:38,759
anything else does it that looks like it

540
00:25:34,409 --> 00:25:42,659
for now just for the drawing purposes so

541
00:25:38,759 --> 00:25:46,409
yeah let's see how that goes

542
00:25:42,659 --> 00:25:49,589
so if we were to do this thing where is

543
00:25:46,409 --> 00:25:51,929
the deal what is the debug states it is

544
00:25:49,588 --> 00:25:56,009
it even get that it just gets it from

545
00:25:51,929 --> 00:26:01,709
here right yeah it does so these can

546
00:25:56,009 --> 00:26:07,169
just be this is kind of nonsense right I

547
00:26:01,709 --> 00:26:09,119
think that's true in fact in fact these

548
00:26:07,169 --> 00:26:14,769
can actually just be pushed and popped

549
00:26:09,118 --> 00:26:19,608
onto there I think I think

550
00:26:14,769 --> 00:26:22,249
that's probably safe because that's our

551
00:26:19,608 --> 00:26:24,710
memory right we can do what we want to

552
00:26:22,249 --> 00:26:26,358
do with it so we can probably just say

553
00:26:24,710 --> 00:26:28,009
all right we've got the debug state it's

554
00:26:26,358 --> 00:26:29,689
just got a pointer to the frames the

555
00:26:28,009 --> 00:26:31,878
frames have pointers to the regions and

556
00:26:29,690 --> 00:26:34,190
everything's fine and this stuff is just

557
00:26:31,878 --> 00:26:35,748
we don't even care about this stuff at

558
00:26:34,190 --> 00:26:38,690
all in fact can we get rid of this at

559
00:26:35,749 --> 00:26:41,569
the moment does anyone gonna complain

560
00:26:38,690 --> 00:26:43,100
about that all right so our debug state

561
00:26:41,569 --> 00:26:48,528
needs to have a few things added to it

562
00:26:43,099 --> 00:26:55,548
it needs to have the lane count it needs

563
00:26:48,528 --> 00:27:00,548
to have the frame count and it needs to

564
00:26:55,548 --> 00:27:04,339
have the frame bar scale and now it does

565
00:27:00,548 --> 00:27:07,940
when we're doing collation we don't

566
00:27:04,339 --> 00:27:13,009
actually want I think to do a lot of

567
00:27:07,940 --> 00:27:14,419
this stuff at the moment actually I'm

568
00:27:13,009 --> 00:27:16,038
gonna just turn this off for now because

569
00:27:14,419 --> 00:27:17,600
we need to rewrite this function to

570
00:27:16,038 --> 00:27:19,249
produce the data we actually care about

571
00:27:17,599 --> 00:27:24,138
so we don't actually care about that at

572
00:27:19,249 --> 00:27:28,839
all counter count all right so this

573
00:27:24,138 --> 00:27:28,839
stuff is all pretty much done as well

574
00:27:30,398 --> 00:27:38,569
okay so I think that should give us what

575
00:27:36,888 --> 00:27:40,608
we want for the drawing routine and it's

576
00:27:38,569 --> 00:27:43,908
given us the specs so I think all we

577
00:27:40,608 --> 00:27:45,288
have to do now is actually fill it out

578
00:27:43,909 --> 00:27:47,659
because obviously it's not going to do

579
00:27:45,288 --> 00:27:50,989
anything until we know until we fill it

580
00:27:47,659 --> 00:27:52,519
out so all right let's go ahead and make

581
00:27:50,989 --> 00:27:54,700
a kool-aid collating thing that will

582
00:27:52,519 --> 00:27:57,700
actually fill that out to some degree

583
00:27:54,700 --> 00:27:57,700
yeah

584
00:28:01,740 --> 00:28:07,660
okay so I don't really remember how our

585
00:28:05,410 --> 00:28:08,769
debug storage stuff was working I'll be

586
00:28:07,660 --> 00:28:13,509
completely honest with you I have

587
00:28:08,769 --> 00:28:15,789
absolutely no idea so how was that

588
00:28:13,509 --> 00:28:17,890
working these are the only two places we

589
00:28:15,789 --> 00:28:21,819
actually get it when we told the overlay

590
00:28:17,890 --> 00:28:29,200
and when we update the records it looks

591
00:28:21,819 --> 00:28:32,250
like that's the case so I think that's

592
00:28:29,200 --> 00:28:32,250
just how it goes

593
00:28:32,579 --> 00:28:41,529
apparently yeah so that means we can

594
00:28:39,970 --> 00:28:44,350
just full-on use this as a scratch pad

595
00:28:41,529 --> 00:28:47,649
every time through we can just go ahead

596
00:28:44,349 --> 00:28:49,449
and recreate it and that is fine so

597
00:28:47,650 --> 00:28:54,940
that's good that makes it really easy on

598
00:28:49,450 --> 00:28:59,830
us our work is simple all right

599
00:28:54,940 --> 00:29:03,190
so yeah let's go ahead and do that the

600
00:28:59,829 --> 00:29:05,949
way we would do that here is by just

601
00:29:03,190 --> 00:29:07,750
using the I just use the mandala system

602
00:29:05,950 --> 00:29:12,069
for that right I just use our I just use

603
00:29:07,750 --> 00:29:15,579
our arena this stuff so I think what we

604
00:29:12,069 --> 00:29:18,279
would want to do there is inside the the

605
00:29:15,579 --> 00:29:23,559
debug state who initializes the debug

606
00:29:18,279 --> 00:29:24,910
state might be one thing I guess it

607
00:29:23,559 --> 00:29:26,500
never really gets explicitly initialize

608
00:29:24,910 --> 00:29:27,880
it's just initialize to zero so

609
00:29:26,500 --> 00:29:29,980
presumably what we want in here is

610
00:29:27,880 --> 00:29:32,920
something that sets that to zero right

611
00:29:29,980 --> 00:29:35,589
so in oops in here we have something

612
00:29:32,920 --> 00:29:38,200
like you know initialized and that gets

613
00:29:35,589 --> 00:29:39,849
set to zero normally and so in here we

614
00:29:38,200 --> 00:29:42,009
just go like you know assuming that we

615
00:29:39,849 --> 00:29:47,289
have a debug state if debug state

616
00:29:42,009 --> 00:29:50,079
initialized is not set we know we've got

617
00:29:47,289 --> 00:29:54,309
to do some work to get things up and and

618
00:29:50,079 --> 00:29:56,230
you know properly initialized and so in

619
00:29:54,309 --> 00:29:57,789
here what I want to do is I want to get

620
00:29:56,230 --> 00:29:59,559
a memory arena that's our debug arena

621
00:29:57,789 --> 00:30:02,250
and we'll just call this you know

622
00:29:59,559 --> 00:30:08,279
whatever this guy is it's gonna be

623
00:30:02,250 --> 00:30:08,279
probably like our our collation arena

624
00:30:08,409 --> 00:30:15,500
so what I'll do there is I'll initialize

625
00:30:11,599 --> 00:30:20,709
that arena like we do everywhere else

626
00:30:15,500 --> 00:30:24,380
right let's see where that comes in here

627
00:30:20,710 --> 00:30:27,528
initialize arena so when we come in here

628
00:30:24,380 --> 00:30:33,110
I will initialize that arena debug state

629
00:30:27,528 --> 00:30:34,548
collate arena I don't even know if I'm

630
00:30:33,109 --> 00:30:36,408
spelling that right I don't know how

631
00:30:34,548 --> 00:30:45,440
many how many ELLs does collate have

632
00:30:36,409 --> 00:30:50,720
should we just ask that question it was

633
00:30:45,440 --> 00:30:54,200
too good I win the spelling bee so how

634
00:30:50,720 --> 00:30:56,179
about that so for now I don't know how

635
00:30:54,200 --> 00:30:58,220
much space we want this to have I

636
00:30:56,179 --> 00:31:01,730
suppose we can just use whatever the

637
00:30:58,220 --> 00:31:04,429
storage size is minus the size that we

638
00:31:01,730 --> 00:31:07,730
already took for the debug state I

639
00:31:04,429 --> 00:31:10,278
suppose we could just do that and maybe

640
00:31:07,730 --> 00:31:11,599
later we'll decide we need to parcel

641
00:31:10,278 --> 00:31:13,730
this out differently but for now that's

642
00:31:11,599 --> 00:31:16,009
probably fine so then we'll just say

643
00:31:13,730 --> 00:31:17,630
okay it's it's whatever the debug state

644
00:31:16,009 --> 00:31:19,099
+1 is that's where we'll stick this data

645
00:31:17,630 --> 00:31:21,230
so now we just have the ability to kind

646
00:31:19,099 --> 00:31:23,689
of like allocate whatever we want

647
00:31:21,230 --> 00:31:28,819
allocate inside our debug pool which is

648
00:31:23,690 --> 00:31:30,558
what we want so that gets us started and

649
00:31:28,819 --> 00:31:33,619
then what we want to do I think is we

650
00:31:30,558 --> 00:31:35,839
want to have a temporary memory write a

651
00:31:33,619 --> 00:31:37,459
begin and end temporary memory sort of

652
00:31:35,839 --> 00:31:39,139
thing and so I'm gonna do here is just

653
00:31:37,460 --> 00:31:41,090
say begin temporary memory and I'm gonna

654
00:31:39,140 --> 00:31:46,850
begin that into the debug state like

655
00:31:41,089 --> 00:31:48,619
collate temp and the idea here is every

656
00:31:46,849 --> 00:31:50,329
frame I'm just gonna rewrite all this

657
00:31:48,619 --> 00:31:52,548
memory every time because we're reco

658
00:31:50,329 --> 00:31:54,918
leading like everything basically which

659
00:31:52,548 --> 00:31:56,619
I don't know how like I don't know if we

660
00:31:54,919 --> 00:32:01,460
want to try and do something clever or

661
00:31:56,619 --> 00:32:04,148
than that we probably should but for the

662
00:32:01,460 --> 00:32:06,500
moment I'm not going to just because

663
00:32:04,148 --> 00:32:08,449
it's gonna be a lot harder to do it that

664
00:32:06,500 --> 00:32:10,669
way so if it turned out that this was

665
00:32:08,450 --> 00:32:12,159
somehow fast enough we'd just use it

666
00:32:10,669 --> 00:32:15,740
this way it probably won't be

667
00:32:12,159 --> 00:32:18,230
unfortunately but you know we'll start

668
00:32:15,740 --> 00:32:19,279
this way and then we'll look at ok now

669
00:32:18,230 --> 00:32:21,200
we got to do something a little more

670
00:32:19,279 --> 00:32:23,119
clever where we you know

671
00:32:21,200 --> 00:32:25,700
we collate incrementally or something

672
00:32:23,119 --> 00:32:27,648
like this anyway so if we do our

673
00:32:25,700 --> 00:32:31,460
kool-aid temp and we do begin temporary

674
00:32:27,648 --> 00:32:34,158
memory then what we can do is every

675
00:32:31,460 --> 00:32:43,269
Frank here we will just go ahead and do

676
00:32:34,159 --> 00:32:43,269
n temporary memory and begin it anew

677
00:32:44,019 --> 00:32:50,179
like so so that's that's all I'm talking

678
00:32:48,319 --> 00:32:52,009
about something that allows us to

679
00:32:50,179 --> 00:32:54,230
rewrite everything every frame it just

680
00:32:52,009 --> 00:33:04,058
kind of vaporizes the thing that we had

681
00:32:54,230 --> 00:33:07,308
before and that's this yeah no I'm not

682
00:33:04,058 --> 00:33:09,230
and that is all I'm talking that's

683
00:33:07,308 --> 00:33:10,538
that's all I was that's all I was trying

684
00:33:09,230 --> 00:33:14,329
to say really

685
00:33:10,538 --> 00:33:15,980
so handmade debug needs to be able to

686
00:33:14,329 --> 00:33:18,500
use that stuff and of course it's up

687
00:33:15,980 --> 00:33:20,569
here so I needed to kind of be a little

688
00:33:18,500 --> 00:33:23,000
bit below this stuff which is a bit of a

689
00:33:20,569 --> 00:33:26,359
problem actually to be honest with you

690
00:33:23,000 --> 00:33:28,819
because the memory arena stuff we want

691
00:33:26,359 --> 00:33:31,908
to add debugging into there as well

692
00:33:28,819 --> 00:33:34,398
so it's kind of tricky the fact that

693
00:33:31,909 --> 00:33:37,278
these things want to also be defined so

694
00:33:34,398 --> 00:33:39,048
I'm literally just gonna move just these

695
00:33:37,278 --> 00:33:41,000
above there because I want to leave

696
00:33:39,048 --> 00:33:43,970
everything else below it I think that's

697
00:33:41,000 --> 00:33:48,679
my that's my feeling that's my feeling

698
00:33:43,970 --> 00:33:50,538
on that but that's that's just how I'm

699
00:33:48,679 --> 00:33:56,090
feeling about it I feel like it's

700
00:33:50,538 --> 00:33:57,619
important so that should do it and then

701
00:33:56,089 --> 00:34:01,490
I'm gonna go ahead and call this collate

702
00:33:57,619 --> 00:34:05,839
debug records thing I'm initialize these

703
00:34:01,490 --> 00:34:08,539
other things so yeah so this stuff

704
00:34:05,839 --> 00:34:10,519
should all be set to zero I think I'm

705
00:34:08,539 --> 00:34:13,250
gonna say debug state frame bar lame

706
00:34:10,519 --> 00:34:15,289
count equals zero debug state frame

707
00:34:13,250 --> 00:34:17,449
count equals zero cubic state frame

708
00:34:15,289 --> 00:34:20,199
Barras scale equals like one point I

709
00:34:17,449 --> 00:34:23,230
wear something equally stupid or zero

710
00:34:20,199 --> 00:34:27,289
and then I'm just going to call collate

711
00:34:23,230 --> 00:34:29,769
debug records maybe I'll even put that

712
00:34:27,289 --> 00:34:29,769
in there

713
00:34:32,150 --> 00:34:36,289
maybe we'll say that it looks like that

714
00:34:38,599 --> 00:34:45,480
who knows all right so when I call

715
00:34:42,599 --> 00:34:47,099
collate and I call it with the debug

716
00:34:45,480 --> 00:34:49,019
state in the events and whatever that

717
00:34:47,099 --> 00:34:52,500
puts me in a good position to like start

718
00:34:49,019 --> 00:34:55,349
setting the stuff up right I think right

719
00:34:52,500 --> 00:34:57,059
that's all good yeah and so now we are

720
00:34:55,349 --> 00:34:58,319
running just fine and in theory we've

721
00:34:57,059 --> 00:34:59,820
got that memory that's kind of like

722
00:34:58,320 --> 00:35:01,769
sitting there being ping pong a bowl for

723
00:34:59,820 --> 00:35:05,210
debug and that's all good too so now I

724
00:35:01,769 --> 00:35:10,230
just actually have to do some work here

725
00:35:05,210 --> 00:35:12,780
to actually produce some some type of

726
00:35:10,230 --> 00:35:15,150
collation for these guys now the way

727
00:35:12,780 --> 00:35:20,010
that I had it set up before if you

728
00:35:15,150 --> 00:35:22,829
remember in platformer dot H I've got

729
00:35:20,010 --> 00:35:34,410
basically a set of arrays of these

730
00:35:22,829 --> 00:35:36,420
values right so every time we have a

731
00:35:34,409 --> 00:35:38,069
debug event what it's doing inside the

732
00:35:36,420 --> 00:35:41,930
stay bug table is it's going ahead and

733
00:35:38,070 --> 00:35:45,180
like putting it in here and every time

734
00:35:41,929 --> 00:35:48,299
we go to like read stuff out of the

735
00:35:45,179 --> 00:35:50,429
debug we you know we flip that event

736
00:35:48,300 --> 00:35:57,740
counter you know and now that I think

737
00:35:50,429 --> 00:36:00,629
about that and I am thinking about that

738
00:35:57,739 --> 00:36:02,579
now that I think about that it seems

739
00:36:00,630 --> 00:36:05,960
like the more intelligent place to do

740
00:36:02,579 --> 00:36:05,960
that is at the frame marker

741
00:36:13,199 --> 00:36:19,689
I'm gonna leave it like it is anyway

742
00:36:17,639 --> 00:36:21,789
so when we come in here we've got this

743
00:36:19,690 --> 00:36:24,849
array of events and these actually go in

744
00:36:21,789 --> 00:36:26,529
order they and in fact in some sense

745
00:36:24,849 --> 00:36:27,760
this was stupid I don't know why I kept

746
00:36:26,530 --> 00:36:28,960
that code in there I was like oh I

747
00:36:27,760 --> 00:36:31,420
should keep that code in there but that

748
00:36:28,960 --> 00:36:32,650
was actually not true because what I

749
00:36:31,420 --> 00:36:33,880
actually want to do in the kuwaiti buy

750
00:36:32,650 --> 00:36:36,760
records is I want to actually look at

751
00:36:33,880 --> 00:36:38,349
all the events so what I actually want

752
00:36:36,760 --> 00:36:40,240
to pass to collate debug records is I

753
00:36:38,349 --> 00:36:43,660
actually want to pass dacoity records

754
00:36:40,239 --> 00:36:46,419
what range of events it should be

755
00:36:43,659 --> 00:36:54,730
considering when it is considering the

756
00:36:46,420 --> 00:36:58,869
events that it considers and in addition

757
00:36:54,730 --> 00:37:01,269
to that I need some way of storing how

758
00:36:58,869 --> 00:37:03,280
many of those there are so in here I

759
00:37:01,269 --> 00:37:07,509
also need something that's like event

760
00:37:03,280 --> 00:37:09,519
count right and I need the same of key I

761
00:37:07,510 --> 00:37:12,400
need the same in each of these so we

762
00:37:09,519 --> 00:37:20,909
need something that's like here as well

763
00:37:12,400 --> 00:37:27,599
max debug frame or max debug frame count

764
00:37:20,909 --> 00:37:27,598
something like that and that's in here

765
00:37:28,119 --> 00:37:35,739
so then when we come through here every

766
00:37:31,630 --> 00:37:37,630
time we have the end of an event every

767
00:37:35,739 --> 00:37:41,019
time every every time we have the end of

768
00:37:37,630 --> 00:37:43,000
a like a notification on the end I'm

769
00:37:41,019 --> 00:37:45,579
going to know how many events we had

770
00:37:43,000 --> 00:37:48,880
because it's this right here and what I

771
00:37:45,579 --> 00:37:49,869
need to do is I need to store that piece

772
00:37:48,880 --> 00:37:53,140
of information

773
00:37:49,869 --> 00:37:56,650
so whatever the event array index was at

774
00:37:53,139 --> 00:38:00,000
the time I need to go into the global

775
00:37:56,650 --> 00:38:02,889
debug table take the event count there

776
00:38:00,000 --> 00:38:06,250
right and set it to what I now know the

777
00:38:02,889 --> 00:38:09,039
event count to be so it's actually you

778
00:38:06,250 --> 00:38:10,690
know just keeping track of that as we go

779
00:38:09,039 --> 00:38:12,630
because otherwise we have no idea how

780
00:38:10,690 --> 00:38:25,960
many actually got filled out in there

781
00:38:12,630 --> 00:38:28,750
yeah so yeah and it also brings up the

782
00:38:25,960 --> 00:38:30,760
fact that really we could have just you

783
00:38:28,750 --> 00:38:33,309
could just have pointers into that thing

784
00:38:30,760 --> 00:38:34,570
it doesn't matter but there's some other

785
00:38:33,309 --> 00:38:36,219
ways we could have structured that as

786
00:38:34,570 --> 00:38:37,660
well it sort of starts to become clear

787
00:38:36,219 --> 00:38:39,219
like how things could be done

788
00:38:37,659 --> 00:38:41,379
no no that's necessarily any better but

789
00:38:39,219 --> 00:38:44,079
it's like okay there's some reasons why

790
00:38:41,380 --> 00:38:46,570
you might do it a different way anyway

791
00:38:44,079 --> 00:38:47,980
so when we go ahead and do the rest of

792
00:38:46,570 --> 00:38:49,360
this stuff when we call collate debug

793
00:38:47,980 --> 00:38:52,510
records what we want to do now is say

794
00:38:49,360 --> 00:38:55,329
okay I know what event array index we

795
00:38:52,510 --> 00:38:59,230
just ended on right so this is the one

796
00:38:55,329 --> 00:39:01,299
this is the one that's done so I need to

797
00:38:59,230 --> 00:39:06,250
pass that to collate debug records so it

798
00:39:01,300 --> 00:39:09,460
knows that everything other than the one

799
00:39:06,250 --> 00:39:11,349
that's right after that one is the one

800
00:39:09,460 --> 00:39:15,820
that we could do right so I'm going to

801
00:39:11,349 --> 00:39:19,690
pass it the one that we just finished

802
00:39:15,820 --> 00:39:22,480
and then also the one that we now that

803
00:39:19,690 --> 00:39:24,460
is now being used right in fact that's

804
00:39:22,480 --> 00:39:29,019
probably just the thing to pass it is

805
00:39:24,460 --> 00:39:31,449
just global debug table whatever the one

806
00:39:29,019 --> 00:39:33,730
is that you no longer can use it needs

807
00:39:31,449 --> 00:39:36,129
to know that and then add what the heck

808
00:39:33,730 --> 00:39:39,329
I'll also pass right the one that's

809
00:39:36,130 --> 00:39:42,480
that's just finished

810
00:39:39,329 --> 00:39:43,110
so inside here we would say most recent

811
00:39:42,480 --> 00:39:46,500
event

812
00:39:43,110 --> 00:39:48,599
array index and here is the one we say

813
00:39:46,500 --> 00:39:53,940
invalid event

814
00:39:48,599 --> 00:39:58,019
array index okay and so what that's

815
00:39:53,940 --> 00:39:59,909
doing is I'm saying I I have essentially

816
00:39:58,019 --> 00:40:03,480
what is a circularbuffer of a rent

817
00:39:59,909 --> 00:40:05,190
arrays right each one of these things is

818
00:40:03,480 --> 00:40:07,320
like an event array that has like tons

819
00:40:05,190 --> 00:40:09,659
of stuff in it and what I'm saying is

820
00:40:07,320 --> 00:40:13,800
all right I just got finished writing

821
00:40:09,659 --> 00:40:17,420
this one right so that's I want to know

822
00:40:13,800 --> 00:40:17,420
which one that is that's the most recent

823
00:40:18,019 --> 00:40:26,280
yeah and then I have one that I'm

824
00:40:22,050 --> 00:40:29,100
writing to this one right here and so

825
00:40:26,280 --> 00:40:32,490
you can't use that one that one cannot

826
00:40:29,099 --> 00:40:34,799
be included because some like a variety

827
00:40:32,489 --> 00:40:36,929
of different threads could be writing to

828
00:40:34,800 --> 00:40:38,940
that right now while we're used

829
00:40:36,929 --> 00:40:40,919
something else so what we want to do is

830
00:40:38,940 --> 00:40:45,360
we want to assume that the one

831
00:40:40,920 --> 00:40:48,030
immediately after that one is the one to

832
00:40:45,360 --> 00:40:51,349
start with and that we would eat all the

833
00:40:48,030 --> 00:40:54,060
rest of these up to the most recent one

834
00:40:51,349 --> 00:40:57,179
so that's how we want to process these

835
00:40:54,059 --> 00:40:59,340
event arrays as we go hopefully that

836
00:40:57,179 --> 00:40:59,730
makes some sense if it doesn't make some

837
00:40:59,340 --> 00:41:03,059
sense

838
00:40:59,730 --> 00:41:05,250
well sometimes programming just doesn't

839
00:41:03,059 --> 00:41:08,159
make sense I mean what are you gonna do

840
00:41:05,250 --> 00:41:12,900
right I think this is actually gonna be

841
00:41:08,159 --> 00:41:15,629
a wild it I think possibly now you know

842
00:41:12,900 --> 00:41:17,400
what it could be a for loop so I'm gonna

843
00:41:15,630 --> 00:41:19,470
go event

844
00:41:17,400 --> 00:41:21,510
array index I am going to start just

845
00:41:19,469 --> 00:41:24,480
like we said with whatever the one right

846
00:41:21,510 --> 00:41:29,360
after the invalid index is so this one

847
00:41:24,480 --> 00:41:33,150
right here I'm gonna start with that one

848
00:41:29,360 --> 00:41:36,030
I'm going to say if the event array

849
00:41:33,150 --> 00:41:39,019
index well I guess I should also I have

850
00:41:36,030 --> 00:41:44,269
to do the wrap did I can roll the wrap

851
00:41:39,019 --> 00:41:46,070
there though you know what I think it's

852
00:41:44,269 --> 00:41:51,079
gonna be a while loop I think it's gonna

853
00:41:46,070 --> 00:41:54,320
be one so we'll just do or rather one of

854
00:41:51,079 --> 00:41:55,819
these like infinity guys so I can do

855
00:41:54,320 --> 00:41:59,690
this in here but I'm not going to

856
00:41:55,820 --> 00:42:02,780
actually have a condition for exit right

857
00:41:59,690 --> 00:42:05,420
so plus plus event array index is in

858
00:42:02,780 --> 00:42:07,100
there and the condition for exit

859
00:42:05,420 --> 00:42:09,559
unfortunately I can't actually write in

860
00:42:07,099 --> 00:42:12,170
there and you'll see why it's because

861
00:42:09,559 --> 00:42:14,329
whatever it is that I'm here I have to

862
00:42:12,170 --> 00:42:16,940
first check to see if the event

863
00:42:14,329 --> 00:42:25,250
array index equals the the max event

864
00:42:16,940 --> 00:42:26,150
array count right so whatever no I

865
00:42:25,250 --> 00:42:30,440
didn't put that in there

866
00:42:26,150 --> 00:42:33,349
whatever this is if it equals that then

867
00:42:30,440 --> 00:42:36,590
I have to set it to zero because that's

868
00:42:33,349 --> 00:42:40,730
a wrap as it increments and then I have

869
00:42:36,590 --> 00:42:43,510
to check if it equals the invalid array

870
00:42:40,730 --> 00:42:46,610
index at that point then I would break

871
00:42:43,510 --> 00:42:49,940
because that means I stepped past the

872
00:42:46,610 --> 00:42:51,740
most recent one so again this is why I

873
00:42:49,940 --> 00:42:53,929
was saying we really only need one which

874
00:42:51,739 --> 00:42:55,639
is the invalid entry index that's the

875
00:42:53,929 --> 00:42:58,759
only one we actually that we actually

876
00:42:55,639 --> 00:43:01,609
need and so what I could do is just say

877
00:42:58,760 --> 00:43:03,050
yeah don't bother passing this one just

878
00:43:01,610 --> 00:43:07,970
pass whatever is the one that you can't

879
00:43:03,050 --> 00:43:14,030
use right now so that steps through all

880
00:43:07,969 --> 00:43:16,369
of the event arrays right so we were

881
00:43:14,030 --> 00:43:17,840
guaranteed to visit them all and we're

882
00:43:16,369 --> 00:43:20,480
guaranteed to visit them in the order of

883
00:43:17,840 --> 00:43:22,190
oldest to newest which is what we want

884
00:43:20,480 --> 00:43:24,849
because we want to go in temporal order

885
00:43:22,190 --> 00:43:24,849
right

886
00:43:28,599 --> 00:43:35,059
okay so now inside each of these we now

887
00:43:33,349 --> 00:43:38,930
need to loop over all of the actual

888
00:43:35,059 --> 00:43:42,559
events that they have because each one

889
00:43:38,929 --> 00:43:44,629
of these has has events so each one of

890
00:43:42,559 --> 00:43:48,889
these can have max debug event count

891
00:43:44,630 --> 00:43:52,369
events like so and we need to take a

892
00:43:48,889 --> 00:43:59,449
look at what what each of them does so

893
00:43:52,369 --> 00:44:01,460
each one of these debug events can be

894
00:43:59,449 --> 00:44:07,449
accessed pretty trivially it's just

895
00:44:01,460 --> 00:44:12,380
going to be the global table events

896
00:44:07,449 --> 00:44:15,139
event array index plus event index and

897
00:44:12,380 --> 00:44:16,700
then we have the event and the events of

898
00:44:15,139 --> 00:44:18,618
course has all of this information in it

899
00:44:16,699 --> 00:44:20,929
and they're really the thing that we

900
00:44:18,619 --> 00:44:23,568
care about here is the type so we need

901
00:44:20,929 --> 00:44:25,039
to take a look at what the type is and

902
00:44:23,568 --> 00:44:30,349
we need to do whatever it is we're going

903
00:44:25,039 --> 00:44:32,690
to do based on what that type is okay so

904
00:44:30,349 --> 00:44:34,940
we see the event type and we take an

905
00:44:32,690 --> 00:44:42,608
action and again we know that we are now

906
00:44:34,940 --> 00:44:47,059
seeing the events in their order roughly

907
00:44:42,608 --> 00:44:48,440
from earliest to latest now on any given

908
00:44:47,059 --> 00:44:50,659
thread we know that they're definitely

909
00:44:48,440 --> 00:44:53,119
from earliest to latest but when

910
00:44:50,659 --> 00:44:55,909
multi-threaded is taken into account we

911
00:44:53,119 --> 00:44:58,338
don't necessarily know that exactly but

912
00:44:55,909 --> 00:45:02,299
we do know that for the most part they

913
00:44:58,338 --> 00:45:05,150
happen in the buffer in order I just

914
00:45:02,300 --> 00:45:09,140
don't know how serialized are DTSC is in

915
00:45:05,150 --> 00:45:11,920
that sense I suspect on the current

916
00:45:09,139 --> 00:45:16,098
processors it's pretty darn serialized

917
00:45:11,920 --> 00:45:19,010
but that's kind of a separate issue so

918
00:45:16,099 --> 00:45:20,780
as we come through here obviously when

919
00:45:19,010 --> 00:45:21,950
the frame marker when we hit a frame

920
00:45:20,780 --> 00:45:25,760
marker we know we're going to kind of

921
00:45:21,949 --> 00:45:30,529
latch over to a new set of a new set of

922
00:45:25,760 --> 00:45:31,670
bars right if that makes sense so every

923
00:45:30,530 --> 00:45:34,790
time we see those we're going to switch

924
00:45:31,670 --> 00:45:37,519
over to like a new set of bars so we had

925
00:45:34,789 --> 00:45:41,329
the idea there of that being like frames

926
00:45:37,519 --> 00:45:45,259
we had this concept here of a debug

927
00:45:41,329 --> 00:45:48,069
and so we kind of have this concept of

928
00:45:45,260 --> 00:45:50,300
debug frame you know current frame and

929
00:45:48,070 --> 00:45:56,500
that's going to be like the very first

930
00:45:50,300 --> 00:45:56,500
frame and so what we need to do there is

931
00:46:00,849 --> 00:46:07,339
need to have a way of like doing you

932
00:46:03,260 --> 00:46:10,520
know you know a next frame or something

933
00:46:07,340 --> 00:46:14,269
like this so that when we come in here

934
00:46:10,519 --> 00:46:16,730
or like an add frame you know so that

935
00:46:14,269 --> 00:46:18,650
when we come in here and we get to a

936
00:46:16,730 --> 00:46:21,400
frame marker we can just move to like

937
00:46:18,650 --> 00:46:25,490
the next frame you know I'm saying

938
00:46:21,400 --> 00:46:27,289
something like that and then in a begin

939
00:46:25,489 --> 00:46:29,989
block and an end block we need to be

940
00:46:27,289 --> 00:46:32,210
able to use that debug information that

941
00:46:29,989 --> 00:46:36,289
we have here to sort of see what was

942
00:46:32,210 --> 00:46:38,150
going on we don't actually know a core

943
00:46:36,289 --> 00:46:40,880
index at the moment but we do know a

944
00:46:38,150 --> 00:46:42,889
thread index the thread index is not

945
00:46:40,880 --> 00:46:44,480
necessarily numbered in a way that we

946
00:46:42,889 --> 00:46:48,259
want so we would have to look it up

947
00:46:44,480 --> 00:46:49,699
unfortunately but that's just kind of

948
00:46:48,260 --> 00:46:53,240
the nature of the beast

949
00:46:49,699 --> 00:46:54,049
that makes sense also there are some

950
00:46:53,239 --> 00:46:55,899
ways we could

951
00:46:54,050 --> 00:47:02,210
there are ways we could probably make

952
00:46:55,900 --> 00:47:04,220
the threads be a little more be numbered

953
00:47:02,210 --> 00:47:06,740
sequentially and that would be to use

954
00:47:04,219 --> 00:47:08,809
sort of Windows declared thread local

955
00:47:06,739 --> 00:47:09,739
storage or something like this but so if

956
00:47:08,809 --> 00:47:11,210
we don't know that we can necessarily

957
00:47:09,739 --> 00:47:12,619
count on that on all the platforms and

958
00:47:11,210 --> 00:47:14,090
we might want to have our profiler work

959
00:47:12,619 --> 00:47:16,309
everywhere instead of just on Windows or

960
00:47:14,090 --> 00:47:17,930
something like that I don't know we

961
00:47:16,309 --> 00:47:23,659
might want to have the lookup sort of be

962
00:47:17,929 --> 00:47:25,669
based in here right but so when we do a

963
00:47:23,659 --> 00:47:27,949
begin block or an end block like either

964
00:47:25,670 --> 00:47:29,900
of those two things we're going to be

965
00:47:27,949 --> 00:47:33,889
doing more or less the same stuff in

966
00:47:29,900 --> 00:47:37,160
fact to some degree we may want to sort

967
00:47:33,889 --> 00:47:40,309
of have like we might want to kind of

968
00:47:37,159 --> 00:47:43,670
have this stuff be relatively pulled out

969
00:47:40,309 --> 00:47:46,940
here right so maybe at the top before we

970
00:47:43,670 --> 00:47:49,940
switch on the event type maybe we do

971
00:47:46,940 --> 00:47:53,420
some stuff here right

972
00:47:49,940 --> 00:47:56,720
like so so in order to pull out the

973
00:47:53,420 --> 00:47:58,400
proper debug record that should actually

974
00:47:56,719 --> 00:48:01,068
be relatively straightforward right

975
00:47:58,400 --> 00:48:06,349
because that's just gonna be whatever

976
00:48:01,068 --> 00:48:09,440
the look at that there was a record

977
00:48:06,349 --> 00:48:10,880
count oh that's a record count let's go

978
00:48:09,440 --> 00:48:11,838
say not the event count it's okay there

979
00:48:10,880 --> 00:48:12,430
was already there but that was a

980
00:48:11,838 --> 00:48:16,338
different thing

981
00:48:12,429 --> 00:48:18,348
totally fine so we would just do this

982
00:48:16,338 --> 00:48:22,248
right we just do the thing that allows

983
00:48:18,349 --> 00:48:27,019
us to go from an event to the source for

984
00:48:22,248 --> 00:48:29,179
whatever it was so that's the source and

985
00:48:27,018 --> 00:48:30,768
it's got the translation unit in there

986
00:48:29,179 --> 00:48:32,748
and it's got the debug record index

987
00:48:30,768 --> 00:48:33,949
which is what it uses to figure out

988
00:48:32,748 --> 00:48:36,230
which one we were looking at for the

989
00:48:33,949 --> 00:48:40,909
source so now we know both the debug

990
00:48:36,230 --> 00:48:43,068
record and the event both hit counts

991
00:48:40,909 --> 00:48:44,538
cycle count is not a thing anymore right

992
00:48:43,068 --> 00:48:47,869
so I don't even know why me that's there

993
00:48:44,539 --> 00:48:52,430
I have absolutely no idea that's just

994
00:48:47,869 --> 00:48:54,950
garbage at the moment I guess so we've

995
00:48:52,429 --> 00:48:56,179
got those two things and then we got to

996
00:48:54,949 --> 00:48:57,318
look up some of this other stuff so we

997
00:48:56,179 --> 00:49:01,308
have the clock but that's not

998
00:48:57,318 --> 00:49:05,480
particularly relevant to us at the

999
00:49:01,309 --> 00:49:07,249
moment so we should look at event clock

1000
00:49:05,480 --> 00:49:08,719
in a second but then we've got event

1001
00:49:07,248 --> 00:49:10,788
thread index and what we want to do is

1002
00:49:08,719 --> 00:49:12,980
turn that into a lane index so you want

1003
00:49:10,789 --> 00:49:16,099
to do something like get Lane from

1004
00:49:12,980 --> 00:49:19,219
thread index or something like this

1005
00:49:16,099 --> 00:49:20,480
right the core index at the moment we're

1006
00:49:19,219 --> 00:49:21,348
just going to ignore because we don't

1007
00:49:20,480 --> 00:49:23,498
even have a way of getting it

1008
00:49:21,349 --> 00:49:25,910
unfortunately and we've used these two

1009
00:49:23,498 --> 00:49:28,009
so that just leaves us to the clock and

1010
00:49:25,909 --> 00:49:31,368
what I would argue as far as the clock

1011
00:49:28,009 --> 00:49:33,259
is concerned is until we act and you

1012
00:49:31,369 --> 00:49:35,989
know what in fact this is true until we

1013
00:49:33,259 --> 00:49:37,519
actually see a frame marker we probably

1014
00:49:35,989 --> 00:49:41,088
just want to throw away all the events

1015
00:49:37,518 --> 00:49:45,018
because we don't actually have any way

1016
00:49:41,088 --> 00:49:47,210
of knowing how much of a frame we're

1017
00:49:45,018 --> 00:49:52,008
seeing until we actually see a frame

1018
00:49:47,210 --> 00:49:53,199
marker right so we actually want this to

1019
00:49:52,009 --> 00:49:56,719
be zero

1020
00:49:53,199 --> 00:49:59,868
so at the outset we just throw away

1021
00:49:56,719 --> 00:50:01,578
events we just throw them away until we

1022
00:49:59,869 --> 00:50:04,460
actually see

1023
00:50:01,579 --> 00:50:07,548
a frame marker I think that's probably

1024
00:50:04,460 --> 00:50:10,220
what we want to do that seems likely to

1025
00:50:07,548 --> 00:50:12,559
me and so as we come through here we

1026
00:50:10,219 --> 00:50:17,629
just do something like okay you know

1027
00:50:12,559 --> 00:50:19,490
when we get an event well okay I'll do

1028
00:50:17,630 --> 00:50:21,380
we'll do it a little bit we'll take it

1029
00:50:19,489 --> 00:50:23,268
one step at a time but point being when

1030
00:50:21,380 --> 00:50:25,730
we have the current frame thing we could

1031
00:50:23,268 --> 00:50:28,518
then say that the frame the that that

1032
00:50:25,730 --> 00:50:32,150
frame structure we could say that that

1033
00:50:28,518 --> 00:50:37,669
has in it the clock

1034
00:50:32,150 --> 00:50:40,700
the initial clock right in fact it could

1035
00:50:37,670 --> 00:50:43,099
even have like a begin clock and an end

1036
00:50:40,699 --> 00:50:43,879
clock because we actually know what

1037
00:50:43,099 --> 00:50:45,349
those will be

1038
00:50:43,880 --> 00:50:48,289
after we've sort of looked at this stuff

1039
00:50:45,349 --> 00:50:51,950
right so what we can do there is say

1040
00:50:48,289 --> 00:50:53,450
that we have a relative clock right and

1041
00:50:51,949 --> 00:50:55,250
the relative clock is going to be

1042
00:50:53,449 --> 00:50:59,358
whatever the events clock is - the

1043
00:50:55,250 --> 00:51:01,639
current frames begin clock that's the

1044
00:50:59,358 --> 00:51:06,469
relative clock for this event inside the

1045
00:51:01,639 --> 00:51:08,358
frame right pretty straightforward how

1046
00:51:06,469 --> 00:51:11,239
much time I got left five minutes of the

1047
00:51:08,358 --> 00:51:13,038
five-minute warning yeah okay then we've

1048
00:51:11,239 --> 00:51:16,608
got the lane index which we're gonna get

1049
00:51:13,039 --> 00:51:17,930
from somewhere and that would give us

1050
00:51:16,608 --> 00:51:20,630
what we need to know now like I was

1051
00:51:17,929 --> 00:51:23,149
saying I think we want to make sure that

1052
00:51:20,630 --> 00:51:25,608
that we kind of guard this stuff off so

1053
00:51:23,150 --> 00:51:27,440
this stuff will work no matter what but

1054
00:51:25,608 --> 00:51:30,108
this this relative clock thing will only

1055
00:51:27,440 --> 00:51:32,659
work if we have a violent valid current

1056
00:51:30,108 --> 00:51:35,389
frame so what I think we want to do is

1057
00:51:32,659 --> 00:51:40,129
do something like if event type equals

1058
00:51:35,389 --> 00:51:41,808
debug event frame marker then we do

1059
00:51:40,130 --> 00:51:45,619
whatever has to happen there otherwise

1060
00:51:41,809 --> 00:51:47,089
we just do here a switch on the event

1061
00:51:45,619 --> 00:51:50,318
type and if there's not going to be that

1062
00:51:47,088 --> 00:51:53,630
many event types you know honestly maybe

1063
00:51:50,318 --> 00:51:58,210
we don't really do anything else here

1064
00:51:53,630 --> 00:51:58,210
maybe we just make this be event type

1065
00:51:58,929 --> 00:52:08,179
let's debug event begin block else

1066
00:52:04,509 --> 00:52:10,978
assert event type

1067
00:52:08,179 --> 00:52:28,288
well you know I'll just for sake of

1068
00:52:10,978 --> 00:52:32,308
completion completeness okay I like how

1069
00:52:28,289 --> 00:52:34,259
that completed - nothing's found in

1070
00:52:32,309 --> 00:52:40,170
handmade that CPP is that from the

1071
00:52:34,259 --> 00:52:45,358
fountain awesome there you go

1072
00:52:40,170 --> 00:52:46,039
alright so begin block end block it's

1073
00:52:45,358 --> 00:52:48,778
all good

1074
00:52:46,039 --> 00:52:54,150
everyone is happy everyone is smiling

1075
00:52:48,778 --> 00:53:00,088
and excited about life and so then I can

1076
00:52:54,150 --> 00:53:02,449
just put that stuff in here right and I

1077
00:53:00,088 --> 00:53:07,068
know that I have a valid current frame

1078
00:53:02,449 --> 00:53:11,099
in that case so that's good

1079
00:53:07,068 --> 00:53:16,739
so in here what I do is I'd have the new

1080
00:53:11,099 --> 00:53:18,539
frame thing and that's going to equal

1081
00:53:16,739 --> 00:53:20,880
however we get a new frame which will

1082
00:53:18,539 --> 00:53:23,900
work on a second and then what we'll do

1083
00:53:20,880 --> 00:53:26,608
is say okay the current frames and clock

1084
00:53:23,900 --> 00:53:32,789
is going to be equal to whatever the

1085
00:53:26,608 --> 00:53:37,708
clock was here yeah

1086
00:53:32,789 --> 00:53:39,150
the reagent count well is just whatever

1087
00:53:37,708 --> 00:53:42,208
it is at the moment so that's pretty

1088
00:53:39,150 --> 00:53:43,858
much finalizes that frame right the fact

1089
00:53:42,208 --> 00:53:45,739
we can just do it like this and then we

1090
00:53:43,858 --> 00:53:50,088
can just say okay then current frame

1091
00:53:45,739 --> 00:53:52,708
equals however we get the new frame and

1092
00:53:50,088 --> 00:53:54,538
which will be trivial in fact I already

1093
00:53:52,708 --> 00:54:00,048
know what it is actually it's just going

1094
00:53:54,539 --> 00:54:00,049
to be right it's just going to be frames

1095
00:54:04,199 --> 00:54:13,599
frame count there it is yeah debugs

1096
00:54:08,829 --> 00:54:15,460
eight frame count plus plus so the

1097
00:54:13,599 --> 00:54:22,420
current frame is just going to be equal

1098
00:54:15,460 --> 00:54:24,639
to do you both state frames and that

1099
00:54:22,420 --> 00:54:27,070
just gets a new one off off of our I

1100
00:54:24,639 --> 00:54:28,539
think this one is going to say okay

1101
00:54:27,070 --> 00:54:30,970
assuming that there was a current frame

1102
00:54:28,539 --> 00:54:34,779
we said it's M clock once we have a new

1103
00:54:30,969 --> 00:54:38,409
one we want to set its begin clock equal

1104
00:54:34,780 --> 00:54:41,500
to the event clock and it's n clock

1105
00:54:38,409 --> 00:54:43,839
equal to I don't know what probably some

1106
00:54:41,500 --> 00:54:46,090
kind of value that lets us know that it

1107
00:54:43,840 --> 00:54:51,519
hasn't had an end yet and then its

1108
00:54:46,090 --> 00:54:55,860
region count is going to be equal to

1109
00:54:51,519 --> 00:54:59,070
zero all right

1110
00:54:55,860 --> 00:54:59,070
seems fair

1111
00:55:04,818 --> 00:55:09,989
I'll go ahead and compile this just to

1112
00:55:07,079 --> 00:55:12,028
make sure that it's all kosher looks

1113
00:55:09,989 --> 00:55:17,338
like it is and we'll make it not

1114
00:55:12,028 --> 00:55:18,119
implemented for this inline get Blaine

1115
00:55:17,338 --> 00:55:22,949
some thread

1116
00:55:18,119 --> 00:55:24,660
there's thread index and we will I

1117
00:55:22,949 --> 00:55:26,159
assume also probably have to do

1118
00:55:24,659 --> 00:55:30,889
something where we've got like a debug

1119
00:55:26,159 --> 00:55:36,798
state here to pass that and for now

1120
00:55:30,889 --> 00:55:39,298
we'll just return 0 and say to do

1121
00:55:36,798 --> 00:55:46,079
implement read ID

1122
00:55:39,298 --> 00:55:49,318
lookup okay so we're getting there we

1123
00:55:46,079 --> 00:55:52,349
got a ways to go before we have all this

1124
00:55:49,318 --> 00:55:53,940
sorted but we're getting there and I

1125
00:55:52,349 --> 00:55:57,329
think next week we'll be in very good

1126
00:55:53,940 --> 00:55:59,880
shape to make that happen it is

1127
00:55:57,329 --> 00:56:02,039
extremely hot here at handmade hero

1128
00:55:59,880 --> 00:56:05,130
studios I probably shouldn't be wearing

1129
00:56:02,039 --> 00:56:07,769
a sweater that was a poor choice of of

1130
00:56:05,130 --> 00:56:10,140
garment it's true but poor choice of

1131
00:56:07,768 --> 00:56:12,719
garment or no I'm going to go to the Q&amp;A

1132
00:56:10,139 --> 00:56:16,078
anyway so if you have a question please

1133
00:56:12,719 --> 00:56:21,500
go ahead and post it with aq : in front

1134
00:56:16,079 --> 00:56:21,500
of it and I will attempt to answer it

1135
00:56:56,960 --> 00:57:03,420
and a/c says you could have made your

1136
00:57:01,199 --> 00:57:05,579
loop this way for you 32 event area

1137
00:57:03,420 --> 00:57:07,409
index equals invalid event array indexes

1138
00:57:05,579 --> 00:57:09,690
one been erroneous is not equal to

1139
00:57:07,409 --> 00:57:12,629
invalid or minority mix event traitor

1140
00:57:09,690 --> 00:57:14,460
sequels it smacks you before yeah I did

1141
00:57:12,630 --> 00:57:18,300
want to save the modulo which is why I

1142
00:57:14,460 --> 00:57:19,320
didn't do it that way it's probably not

1143
00:57:18,300 --> 00:57:22,019
a big deal anymore

1144
00:57:19,320 --> 00:57:24,720
right like some of those things are kind

1145
00:57:22,019 --> 00:57:27,360
of habit habitual that there's really no

1146
00:57:24,719 --> 00:57:29,639
need to get out of the habit of so I

1147
00:57:27,360 --> 00:57:31,380
don't but it's true that a lot of things

1148
00:57:29,639 --> 00:57:35,759
like modulo are not really a big deal

1149
00:57:31,380 --> 00:57:37,710
anymore but it's like a part of you know

1150
00:57:35,760 --> 00:57:41,370
growing up with a certain set of things

1151
00:57:37,710 --> 00:57:45,750
being expensive like modulus is very

1152
00:57:41,369 --> 00:57:47,730
very very expensive in the old days you

1153
00:57:45,750 --> 00:57:50,039
would tend not to use it unless you knew

1154
00:57:47,730 --> 00:57:54,690
that the compiler or you could optimize

1155
00:57:50,039 --> 00:57:56,429
that modulus to something else and so I

1156
00:57:54,690 --> 00:57:58,050
still tend to not write things that way

1157
00:57:56,429 --> 00:57:59,849
I tend to write them in ways that don't

1158
00:57:58,050 --> 00:58:03,690
require a modulus when I know that one

1159
00:57:59,849 --> 00:58:04,829
was not necessary and I suspect that

1160
00:58:03,690 --> 00:58:06,869
that's something that people nowadays

1161
00:58:04,829 --> 00:58:09,239
probably don't do like people who grew

1162
00:58:06,869 --> 00:58:10,920
up programming you know over the past

1163
00:58:09,239 --> 00:58:12,599
five years was their first experience of

1164
00:58:10,920 --> 00:58:14,789
programming or something are not gonna

1165
00:58:12,599 --> 00:58:17,279
be afraid of modulus right they're just

1166
00:58:14,789 --> 00:58:19,230
gonna throw it around and that's fine

1167
00:58:17,280 --> 00:58:21,060
too but it's definitely something that I

1168
00:58:19,230 --> 00:58:22,409
avoid in cases where there really was

1169
00:58:21,059 --> 00:58:24,809
not necessarily you need to avoid it

1170
00:58:22,409 --> 00:58:26,789
like is it going to be a huge problem to

1171
00:58:24,809 --> 00:58:30,480
have a modulus in this loop I don't know

1172
00:58:26,789 --> 00:58:32,039
but probably not I wasn't in my head

1173
00:58:30,480 --> 00:58:35,449
thinking oh my god mod is gonna be a

1174
00:58:32,039 --> 00:58:35,449
problem it's just I tend to avoid it

1175
00:58:39,239 --> 00:58:46,000
kronole dragon says the track was a bit

1176
00:58:41,500 --> 00:58:47,889
distracted it happens elven what would

1177
00:58:46,000 --> 00:58:49,929
be the most important things you'd look

1178
00:58:47,889 --> 00:58:52,389
at when hiring a programmer what type of

1179
00:58:49,929 --> 00:58:55,599
questions would you ask does he have to

1180
00:58:52,389 --> 00:59:00,940
have like 20 plus years of experience if

1181
00:58:55,599 --> 00:59:03,940
I was gonna hire a programmer I don't

1182
00:59:00,940 --> 00:59:05,889
know that's a good question and it

1183
00:59:03,940 --> 00:59:08,380
depends on what I would want to be doing

1184
00:59:05,889 --> 00:59:10,509
if they're supposed to be programming in

1185
00:59:08,380 --> 00:59:11,860
parallel with me meaning they're gonna

1186
00:59:10,510 --> 00:59:15,790
go do something while I'm doing

1187
00:59:11,860 --> 00:59:19,980
something then yeah they would have to

1188
00:59:15,789 --> 00:59:22,480
have 20 years of experience probably if

1189
00:59:19,980 --> 00:59:24,250
it was the case that I was gonna have

1190
00:59:22,480 --> 00:59:26,019
somebody who was kind of gonna be like a

1191
00:59:24,250 --> 00:59:27,880
utility programmer for me where it's

1192
00:59:26,019 --> 00:59:30,070
like I'm programming stuff and then I'm

1193
00:59:27,880 --> 00:59:31,690
just telling them I want you to go make

1194
00:59:30,070 --> 00:59:33,580
this thing for me right now and then

1195
00:59:31,690 --> 00:59:34,349
like at the end of the day you give it

1196
00:59:33,579 --> 00:59:36,639
back to me

1197
00:59:34,349 --> 00:59:38,980
then that would be someone who I could

1198
00:59:36,639 --> 00:59:40,420
hire who I just thought was a good

1199
00:59:38,980 --> 00:59:41,619
programmer like that's like okay this

1200
00:59:40,420 --> 00:59:42,700
person is pretty good they don't maybe

1201
00:59:41,619 --> 00:59:43,690
have very much experience I don't

1202
00:59:42,699 --> 00:59:45,039
necessarily notice that what they're

1203
00:59:43,690 --> 00:59:46,300
doing all the time but like it's okay

1204
00:59:45,039 --> 00:59:48,130
because I'm gonna sort of like drive

1205
00:59:46,300 --> 00:59:51,010
that process and they just need to like

1206
00:59:48,130 --> 00:59:53,230
not make code that's bad which is itself

1207
00:59:51,010 --> 00:59:54,520
a total order but they don't have to

1208
00:59:53,230 --> 00:59:56,829
have 20 plus years experience cuz I'm

1209
00:59:54,519 --> 00:59:58,509
not expecting to make decisions I'm

1210
00:59:56,829 --> 01:00:00,730
expecting them to if I make the decision

1211
00:59:58,510 --> 01:00:03,940
be able to execute that decision and

1212
01:00:00,730 --> 01:00:05,559
that's a very different thing and so I

1213
01:00:03,940 --> 01:00:06,849
don't know these days the way I would

1214
01:00:05,559 --> 01:00:08,679
probably look for hiring a programmer

1215
01:00:06,849 --> 01:00:10,360
like that is now that people are

1216
01:00:08,679 --> 01:00:11,980
streaming programming I just say I want

1217
01:00:10,360 --> 01:00:13,240
to see your twist streams I want to see

1218
01:00:11,980 --> 01:00:15,219
your program on Twitch and I'm gonna

1219
01:00:13,239 --> 01:00:16,359
watch them and if I watch them in a

1220
01:00:15,219 --> 01:00:17,980
while I think you know what you're doing

1221
01:00:16,360 --> 01:00:19,390
then I'm okay with that if not that I'm

1222
01:00:17,980 --> 01:00:21,159
not because that's way better than

1223
01:00:19,389 --> 01:00:22,629
anything else because there at least now

1224
01:00:21,159 --> 01:00:24,849
I see how your programming I can watch

1225
01:00:22,630 --> 01:00:26,619
you program for a long time not in some

1226
01:00:24,849 --> 01:00:29,139
weird interview setting you're on your

1227
01:00:26,619 --> 01:00:31,029
computer with your editor doing code you

1228
01:00:29,139 --> 01:00:33,609
feel comfortable with and then I can

1229
01:00:31,030 --> 01:00:34,600
watch you write so I probably like show

1230
01:00:33,610 --> 01:00:35,740
me your twitch stream if you don't have

1231
01:00:34,599 --> 01:00:36,940
a Twitter stream I'd be like well why

1232
01:00:35,739 --> 01:00:41,259
don't you have a twist you get a twist

1233
01:00:36,940 --> 01:00:43,769
stream and call me back it don't gotta

1234
01:00:41,260 --> 01:00:43,770
be public

1235
01:00:44,719 --> 01:00:47,419
you could have it be private and you

1236
01:00:46,159 --> 01:00:50,869
don't have to talk you can just code

1237
01:00:47,420 --> 01:00:56,300
like pseudonym 73 does and then I'd be

1238
01:00:50,869 --> 01:00:57,559
able to see right Gary Johansson do you

1239
01:00:56,300 --> 01:00:59,240
think you do not need to ever worry

1240
01:00:57,559 --> 01:01:01,279
about modulus or divides any more um

1241
01:00:59,239 --> 01:01:02,869
it's not that you don't ever have

1242
01:01:01,280 --> 01:01:05,870
there's nothing that you don't ever have

1243
01:01:02,869 --> 01:01:09,380
to worry about it's more just like in

1244
01:01:05,869 --> 01:01:11,779
the context of what we are doing here

1245
01:01:09,380 --> 01:01:13,099
the amount of like data that we're

1246
01:01:11,780 --> 01:01:15,470
spinning through and the amount of

1247
01:01:13,099 --> 01:01:18,079
operations we're doing are probably such

1248
01:01:15,469 --> 01:01:20,419
that one modulus per loop iteration is

1249
01:01:18,079 --> 01:01:22,159
just not going to add up to very many

1250
01:01:20,420 --> 01:01:24,349
cycles by comparison to the total number

1251
01:01:22,159 --> 01:01:26,359
of cycles for the loop whereas in the

1252
01:01:24,349 --> 01:01:28,789
old days when you were talking about

1253
01:01:26,360 --> 01:01:30,380
like everything you know might have been

1254
01:01:28,789 --> 01:01:34,699
like one or two instructions that you

1255
01:01:30,380 --> 01:01:37,460
were doing but a modulus took like 40 or

1256
01:01:34,699 --> 01:01:39,589
more and memory accesses took like one

1257
01:01:37,460 --> 01:01:42,260
cycle as well or something like this

1258
01:01:39,590 --> 01:01:44,510
right that was a big deal nowadays a

1259
01:01:42,260 --> 01:01:48,320
modulus doesn't take nearly as long as a

1260
01:01:44,510 --> 01:01:50,030
cache miss right so it's just a

1261
01:01:48,320 --> 01:01:52,039
different set of trade-offs in your head

1262
01:01:50,030 --> 01:01:55,250
so habitually avoiding modulus is

1263
01:01:52,039 --> 01:01:57,349
definitely not though like it used to be

1264
01:01:55,250 --> 01:01:59,269
it doesn't mean you don't have to think

1265
01:01:57,349 --> 01:02:01,819
about it because just like everything

1266
01:01:59,269 --> 01:02:04,130
else it costs something but it does mean

1267
01:02:01,820 --> 01:02:06,440
that thinking about it as this big scary

1268
01:02:04,130 --> 01:02:08,510
thing doesn't really need to happen

1269
01:02:06,440 --> 01:02:10,670
anymore because it's not any more scary

1270
01:02:08,510 --> 01:02:15,650
than a bunch of other things that I

1271
01:02:10,670 --> 01:02:18,099
don't avoid right so that's really more

1272
01:02:15,650 --> 01:02:18,099
what I meant

1273
01:02:22,269 --> 01:02:33,559
which Linux debugger is closest to not

1274
01:02:24,800 --> 01:02:38,180
sucking and what is it missing I don't

1275
01:02:33,559 --> 01:02:42,220
even know man I don't know I don't have

1276
01:02:38,179 --> 01:02:45,169
a good answer for that I really don't I

1277
01:02:42,219 --> 01:02:47,709
wish it did but I they're all pretty bad

1278
01:02:45,170 --> 01:02:47,710
I don't know

1279
01:02:54,940 --> 01:02:58,599
original name 67 on a scale of 1 to

1280
01:02:57,670 --> 01:03:01,059
Visual Studio

1281
01:02:58,599 --> 01:03:06,390
why is he max of 1 and when will you

1282
01:03:01,059 --> 01:03:14,559
join the visual studio master race so

1283
01:03:06,389 --> 01:03:17,679
not to be too brutal about it but of the

1284
01:03:14,559 --> 01:03:22,380
good programmers I know I can only think

1285
01:03:17,679 --> 01:03:27,368
of one who uses Visual Studio only one

1286
01:03:22,380 --> 01:03:30,338
and he is somebody it's Shawn Barrett

1287
01:03:27,369 --> 01:03:34,420
and he is somebody who has in the past

1288
01:03:30,338 --> 01:03:35,969
used das command line edit for editing

1289
01:03:34,420 --> 01:03:39,730
and been fine with it

1290
01:03:35,969 --> 01:03:41,500
so I don't necessarily tend to take his

1291
01:03:39,730 --> 01:03:44,650
opinion of editor particularly seriously

1292
01:03:41,500 --> 01:03:46,449
or his selection other than him I

1293
01:03:44,650 --> 01:03:48,099
literally know zero good programmers to

1294
01:03:46,449 --> 01:03:50,500
program in Visual Studio there probably

1295
01:03:48,099 --> 01:03:53,740
are some out there but none of the ones

1296
01:03:50,500 --> 01:03:56,139
I know they all use something else Emacs

1297
01:03:53,739 --> 01:03:57,578
is not particularly good but it's a lot

1298
01:03:56,139 --> 01:03:59,108
better than Visual Studio because visual

1299
01:03:57,579 --> 01:04:02,920
studio is pretty bad

1300
01:03:59,108 --> 01:04:05,889
it's better than it was well it kind of

1301
01:04:02,920 --> 01:04:11,829
got better and then it got worse but

1302
01:04:05,889 --> 01:04:13,000
it's still pretty bad sorry this has

1303
01:04:11,829 --> 01:04:14,950
been asked before what keyboard using

1304
01:04:13,000 --> 01:04:16,000
this is a Das Keyboard 3 which

1305
01:04:14,949 --> 01:04:16,929
unfortunately I don't know if they even

1306
01:04:16,000 --> 01:04:19,719
make anymore

1307
01:04:16,929 --> 01:04:22,210
I liked the Das Keyboard 3 a lot I don't

1308
01:04:19,719 --> 01:04:24,879
like the Das Keyboard 4 so I'm kind of

1309
01:04:22,210 --> 01:04:27,068
been looking for a new keyboard a new

1310
01:04:24,880 --> 01:04:29,079
go-to keyboard I just ordered actually a

1311
01:04:27,068 --> 01:04:34,088
on someone's Twitter recommendation a

1312
01:04:29,079 --> 01:04:35,140
Razer BlackWidow stealth and I was gonna

1313
01:04:34,088 --> 01:04:37,480
try it out so I don't know how that's

1314
01:04:35,139 --> 01:04:39,129
gonna work but I'm still trying I try to

1315
01:04:37,480 --> 01:04:40,659
keep up labs 1 and it was a really well

1316
01:04:39,130 --> 01:04:43,318
made keyboard but just the keys were too

1317
01:04:40,659 --> 01:04:43,318
darn stiff for me

1318
01:04:48,619 --> 01:04:54,269
how did you get into game development

1319
01:04:50,309 --> 01:05:02,509
you know there's a big long story about

1320
01:04:54,269 --> 01:05:04,710
that if you're interested I think gosh I

1321
01:05:02,510 --> 01:05:06,180
think it was like all the way at the

1322
01:05:04,710 --> 01:05:07,320
beginning of handmade hero let's let's

1323
01:05:06,179 --> 01:05:12,230
see I don't know if the annotated

1324
01:05:07,320 --> 01:05:16,789
episode guide has it in there it might

1325
01:05:12,230 --> 01:05:24,420
so in the episode guide it might be here

1326
01:05:16,789 --> 01:05:28,858
but I'm not 100% certain no it's it's

1327
01:05:24,420 --> 01:05:32,880
not it's not there oh wait it might be

1328
01:05:28,858 --> 01:05:38,130
in the QA yeah yeah yeah so here it is

1329
01:05:32,880 --> 01:05:40,619
so you can go right here for that

1330
01:05:38,130 --> 01:05:43,410
actually this is it so

1331
01:05:40,619 --> 01:05:45,809
so intro to see on windows day 5 QA has

1332
01:05:43,409 --> 01:05:49,679
it and if you use the episode guide you

1333
01:05:45,809 --> 01:05:51,210
can get the little time markers so if

1334
01:05:49,679 --> 01:05:52,739
you go to what's your life story that

1335
01:05:51,210 --> 01:05:56,460
tells the whole story it's like a half

1336
01:05:52,739 --> 01:05:58,979
hour long and it has the whole whole

1337
01:05:56,460 --> 01:06:01,349
situation it's kind of a weird and

1338
01:05:58,980 --> 01:06:02,760
twisted odd path certainly it's not like

1339
01:06:01,349 --> 01:06:03,930
I woke up one day and was like I'm gonna

1340
01:06:02,760 --> 01:06:06,560
be a game developer and then went out

1341
01:06:03,929 --> 01:06:06,559
and developed games

1342
01:06:08,269 --> 01:06:12,030
Stevan last my girlfriend wanted to let

1343
01:06:10,588 --> 01:06:14,190
you know that she has the same water

1344
01:06:12,030 --> 01:06:16,290
bubbles you well

1345
01:06:14,190 --> 01:06:21,510
that is both good and bad for your

1346
01:06:16,289 --> 01:06:24,989
girlfriend good because I feel like the

1347
01:06:21,510 --> 01:06:27,150
glass bottle is nice for taste I feel

1348
01:06:24,989 --> 01:06:30,088
like things taste good and glass to me

1349
01:06:27,150 --> 01:06:33,570
but you know what the bad thing about

1350
01:06:30,088 --> 01:06:36,989
these is this this right here this is a

1351
01:06:33,570 --> 01:06:38,369
bad design all around a it's very hard

1352
01:06:36,989 --> 01:06:40,319
to make sure it's actually sealed

1353
01:06:38,369 --> 01:06:41,940
properly I have to like turn them over

1354
01:06:40,320 --> 01:06:44,220
and shake them in the sink to make sure

1355
01:06:41,940 --> 01:06:46,588
they're sealed properly because the the

1356
01:06:44,219 --> 01:06:48,239
ceiling onto the glass is often fraught

1357
01:06:46,588 --> 01:06:50,159
with peril and it won't get on there

1358
01:06:48,239 --> 01:06:53,250
exactly right and the other problem is

1359
01:06:50,159 --> 01:06:55,889
this part tends to break the like I've

1360
01:06:53,250 --> 01:06:57,949
had the rubber break like on here for me

1361
01:06:55,889 --> 01:06:59,900
so I'm not a huge fan

1362
01:06:57,949 --> 01:07:02,929
it's close to what I want but it's not

1363
01:06:59,900 --> 01:07:04,880
there yet they need a better top if they

1364
01:07:02,929 --> 01:07:06,349
fix the top then this would be like my

1365
01:07:04,880 --> 01:07:09,050
favorite water bottle but until then

1366
01:07:06,349 --> 01:07:10,880
it's got problems if your girlfriend

1367
01:07:09,050 --> 01:07:12,980
ever finds a better water bottle that's

1368
01:07:10,880 --> 01:07:15,619
glass please let me tell tell her to let

1369
01:07:12,980 --> 01:07:24,650
me know or you let me know

1370
01:07:15,619 --> 01:07:26,179
one or the other what decision process

1371
01:07:24,650 --> 01:07:28,220
you used to choose the color of sweater

1372
01:07:26,179 --> 01:07:31,099
to wear on a particular day it's

1373
01:07:28,219 --> 01:07:33,230
whatever is like the top of my laundry

1374
01:07:31,099 --> 01:07:35,480
basket because I just take when I take

1375
01:07:33,230 --> 01:07:37,039
the clothes out of the dryer I just put

1376
01:07:35,480 --> 01:07:38,210
them in oh I have like a few laundry

1377
01:07:37,039 --> 01:07:40,130
baskets I just take them out and I put

1378
01:07:38,210 --> 01:07:41,990
them in whatever like bin I have

1379
01:07:40,130 --> 01:07:50,480
available and then I just take clothes

1380
01:07:41,989 --> 01:07:52,069
off the top of it a slams here will you

1381
01:07:50,480 --> 01:07:54,909
please sign the contracts with twitch so

1382
01:07:52,070 --> 01:07:57,410
we can get good Casey emotes in chat

1383
01:07:54,909 --> 01:08:03,289
next time I talk to twixt which I will

1384
01:07:57,409 --> 01:08:04,940
ask them Elvan have you seen the poker

1385
01:08:03,289 --> 01:08:06,559
keyboard series it's very interesting in

1386
01:08:04,940 --> 01:08:08,210
that it has all the keys in the center

1387
01:08:06,559 --> 01:08:11,539
of the keyboard you never have to leave

1388
01:08:08,210 --> 01:08:14,119
the center row I don't know what that is

1389
01:08:11,539 --> 01:08:17,300
I have not seen it Steve unless we'll

1390
01:08:14,119 --> 01:08:18,859
keep you updated thank you very much see

1391
01:08:17,300 --> 01:08:21,529
x00 still using three-bin system for

1392
01:08:18,859 --> 01:08:22,969
clothes yes I am Elvan doesn't ever

1393
01:08:21,529 --> 01:08:24,859
happen to you when you sleep on a

1394
01:08:22,970 --> 01:08:26,329
problem and then wake up with a solution

1395
01:08:24,859 --> 01:08:27,979
we're just clicking your head yes that

1396
01:08:26,329 --> 01:08:29,329
happens to me all the time I've often

1397
01:08:27,979 --> 01:08:31,069
said that it's important to make sure

1398
01:08:29,329 --> 01:08:32,449
you get a good night's sleep because I

1399
01:08:31,069 --> 01:08:35,210
feel like you do a lot of programming

1400
01:08:32,449 --> 01:08:37,909
problem solving in your sleep if you're

1401
01:08:35,210 --> 01:08:39,680
anything like me anyway so yeah it's

1402
01:08:37,909 --> 01:08:41,630
it's a good it's a good thing to do I

1403
01:08:39,680 --> 01:08:44,060
highly recommend making sure that you

1404
01:08:41,630 --> 01:08:45,920
get a good night's sleep and let your

1405
01:08:44,060 --> 01:08:51,440
brain have some time to like work on

1406
01:08:45,920 --> 01:08:54,430
problems like my my pocket theory for

1407
01:08:51,439 --> 01:08:58,129
like how brains work is that at night

1408
01:08:54,430 --> 01:09:02,030
they do a lot of intentionally random

1409
01:08:58,130 --> 01:09:03,440
neuron firing which tries to build it's

1410
01:09:02,029 --> 01:09:05,509
it's like basically like if you've ever

1411
01:09:03,439 --> 01:09:09,829
seen a rapidly exploring random tree and

1412
01:09:05,510 --> 01:09:11,859
re arty like daytime is the drive to

1413
01:09:09,829 --> 01:09:14,568
point four

1414
01:09:11,859 --> 01:09:18,259
it's the drive to point phase for

1415
01:09:14,569 --> 01:09:20,870
concrete ideas and then sleep time is

1416
01:09:18,259 --> 01:09:22,909
the drive to point for random ideas so

1417
01:09:20,869 --> 01:09:25,729
like during the day you are trying to

1418
01:09:22,909 --> 01:09:27,979
get your brain to like build a path to a

1419
01:09:25,729 --> 01:09:30,829
particular solution of some kind and at

1420
01:09:27,979 --> 01:09:33,468
night what it's doing is it's randomly

1421
01:09:30,829 --> 01:09:36,019
going to places so that when you wake up

1422
01:09:33,469 --> 01:09:39,170
the neuron paths are already built there

1423
01:09:36,020 --> 01:09:41,060
for those states so that they're just

1424
01:09:39,170 --> 01:09:42,109
there all of a sudden and so when you go

1425
01:09:41,060 --> 01:09:44,029
to think about the problem again you

1426
01:09:42,109 --> 01:09:45,710
find oh there's one right next to it and

1427
01:09:44,029 --> 01:09:48,049
I can just hop right to the solution

1428
01:09:45,710 --> 01:09:57,590
from there right so it's like I feel

1429
01:09:48,048 --> 01:09:58,930
like it's one of these things you know

1430
01:09:57,590 --> 01:10:03,590
I'm talking about

1431
01:09:58,930 --> 01:10:06,800
and so like during the you know the

1432
01:10:03,590 --> 01:10:09,529
night time you are essentially building

1433
01:10:06,800 --> 01:10:11,150
new random paths onto your random tree

1434
01:10:09,529 --> 01:10:12,469
so that like when you wake up in the

1435
01:10:11,149 --> 01:10:14,929
morning you're like I'm trying to find a

1436
01:10:12,469 --> 01:10:17,090
solution that's like out here during the

1437
01:10:14,930 --> 01:10:18,949
day like you couldn't get to it but then

1438
01:10:17,090 --> 01:10:20,360
after a night sleep

1439
01:10:18,948 --> 01:10:21,710
it built all these extra ones for you

1440
01:10:20,359 --> 01:10:22,969
and so then like right there it's like

1441
01:10:21,710 --> 01:10:24,350
oh yeah it turns out it's like right

1442
01:10:22,969 --> 01:10:28,000
next to something I can toys you how to

1443
01:10:24,350 --> 01:10:28,000
get there I'm done right

1444
01:10:37,550 --> 01:10:41,400
let's see

1445
01:10:39,390 --> 01:10:42,930
Ashby igniter just for your sleeping I

1446
01:10:41,399 --> 01:10:45,359
don't know I'm not a neuroscientist so

1447
01:10:42,930 --> 01:10:48,420
this is just my theory based on what

1448
01:10:45,359 --> 01:10:50,969
I've observed myself how like it feels

1449
01:10:48,420 --> 01:10:53,310
so it's not really a science so I have

1450
01:10:50,970 --> 01:10:55,079
no idea it's just a purely random theory

1451
01:10:53,310 --> 01:11:04,350
that has no data to back it up

1452
01:10:55,079 --> 01:11:06,199
other than anecdotal all right I got to

1453
01:11:04,350 --> 01:11:09,300
wind it down I got to go soon

1454
01:11:06,199 --> 01:11:13,889
what time you usually go to sleep 10:30

1455
01:11:09,300 --> 01:11:15,180
I usually wake up at 7

1456
01:11:13,890 --> 01:11:16,530
could you please expand on what you

1457
01:11:15,180 --> 01:11:17,789
meant by in the future there won't be

1458
01:11:16,529 --> 01:11:19,319
dedicated hard for graphics you mean

1459
01:11:17,789 --> 01:11:21,720
it'll be more CPU cores and ridges and

1460
01:11:19,319 --> 01:11:26,250
said yeah my assumption will be my

1461
01:11:21,720 --> 01:11:27,900
assumption is that either everything

1462
01:11:26,250 --> 01:11:32,130
falls apart and they can't keep making

1463
01:11:27,899 --> 01:11:34,049
things faster which could happen or if

1464
01:11:32,130 --> 01:11:37,319
they keep figuring out ways to like make

1465
01:11:34,050 --> 01:11:39,270
better CPUs eventually the GPU cores

1466
01:11:37,319 --> 01:11:41,219
will just collapse into CPU cores and

1467
01:11:39,270 --> 01:11:42,990
we'll just have a mini core machine and

1468
01:11:41,220 --> 01:11:45,990
that'll be that

1469
01:11:42,989 --> 01:11:48,269
and so like yet maybe you still have

1470
01:11:45,989 --> 01:11:49,679
OpenGL or something but it's OpenGL

1471
01:11:48,270 --> 01:11:50,760
that's just implemented on those cores

1472
01:11:49,680 --> 01:11:54,329
but you could use them for something

1473
01:11:50,760 --> 01:11:56,940
else it's already very close to that it

1474
01:11:54,329 --> 01:11:58,920
just needs to take one big industry

1475
01:11:56,939 --> 01:12:01,559
consolidation phase for that to like

1476
01:11:58,920 --> 01:12:02,760
become a reality and so it won't

1477
01:12:01,560 --> 01:12:04,590
necessarily be ray tracing could still

1478
01:12:02,760 --> 01:12:06,900
be rasterization but it would be

1479
01:12:04,590 --> 01:12:09,779
rasterization on course that are more

1480
01:12:06,899 --> 01:12:12,329
are basically CPU cores and maybe

1481
01:12:09,779 --> 01:12:14,099
they'll be there still might be core

1482
01:12:12,329 --> 01:12:15,840
types in the sense of like what their

1483
01:12:14,100 --> 01:12:17,430
cache is optimized for or how their

1484
01:12:15,840 --> 01:12:19,230
memory is optimized or something there

1485
01:12:17,430 --> 01:12:21,000
might be certain things that still

1486
01:12:19,229 --> 01:12:22,559
change like there could be in order and

1487
01:12:21,000 --> 01:12:25,170
out of order cores or something like

1488
01:12:22,560 --> 01:12:27,720
this but in general they'll still be

1489
01:12:25,170 --> 01:12:33,579
programmable pretty much completely it's

1490
01:12:27,720 --> 01:12:35,720
my guess all right

1491
01:12:33,579 --> 01:12:37,309
would you think in the next five to ten

1492
01:12:35,720 --> 01:12:38,750
years they'll move us from 64 a bit to

1493
01:12:37,310 --> 01:12:44,000
hunch running 8-bit dude

1494
01:12:38,750 --> 01:12:45,649
they're already 256 bit Intel x64

1495
01:12:44,000 --> 01:12:48,500
processors are now - in a video 6 bit

1496
01:12:45,649 --> 01:12:53,359
and we're using hundred 28 bit registers

1497
01:12:48,500 --> 01:12:56,770
on the stream already but yeah alright

1498
01:12:53,359 --> 01:13:00,649
I'm gonna wind it down light it on down

1499
01:12:56,770 --> 01:13:07,370
yeah I'm saying little wind down the old

1500
01:13:00,649 --> 01:13:11,389
wind down alrighty thank you everyone

1501
01:13:07,369 --> 01:13:12,559
for joining me for another episode of

1502
01:13:11,390 --> 01:13:14,390
handmade hero it's been a pleasure

1503
01:13:12,560 --> 01:13:15,890
coding with you as always if you would

1504
01:13:14,390 --> 01:13:17,600
like to follow along at home you can

1505
01:13:15,890 --> 01:13:19,250
always pee order the game on handmade

1506
01:13:17,600 --> 01:13:21,610
here at work and it comes with a source

1507
01:13:19,250 --> 01:13:23,270
code so you can play around with it

1508
01:13:21,609 --> 01:13:25,189
definitely check that out if you're

1509
01:13:23,270 --> 01:13:28,100
interested in experimenting or doing

1510
01:13:25,189 --> 01:13:29,659
whatever sorts of crazy experiments you

1511
01:13:28,100 --> 01:13:32,450
have cooked up don't need to know about

1512
01:13:29,659 --> 01:13:33,680
it whatever you do you know like if you

1513
01:13:32,449 --> 01:13:34,819
want to do some weird things with source

1514
01:13:33,680 --> 01:13:36,829
code that's between you and the source

1515
01:13:34,819 --> 01:13:39,229
code right

1516
01:13:36,829 --> 01:13:41,630
anyway we also have a forum site you can

1517
01:13:39,229 --> 01:13:44,119
go to ask questions or get me an episode

1518
01:13:41,630 --> 01:13:45,859
guide I have a patreon page the patreon

1519
01:13:44,119 --> 01:13:46,880
page allows you to pledge the video

1520
01:13:45,859 --> 01:13:49,099
series just want to support the video

1521
01:13:46,880 --> 01:13:50,390
series that's place to do it we also

1522
01:13:49,100 --> 01:13:51,829
have a tweet bot the tweets the schedule

1523
01:13:50,390 --> 01:13:53,360
you and little reminders during the day

1524
01:13:51,829 --> 01:13:55,130
if you wanna catch the stream live it

1525
01:13:53,359 --> 01:13:56,299
helps you know when that's gonna be so

1526
01:13:55,130 --> 01:13:58,579
check that out if you're interested and

1527
01:13:56,300 --> 01:14:02,720
speaking of that we will be back here

1528
01:13:58,579 --> 01:14:05,238
next week on Monday to finish up our viz

1529
01:14:02,720 --> 01:14:07,340
code we got a couple days worth of work

1530
01:14:05,238 --> 01:14:08,659
to do to make some nice debug this stuff

1531
01:14:07,340 --> 01:14:10,310
there so that's what we're gonna be

1532
01:14:08,659 --> 01:14:12,470
doing so I hope to see you back here for

1533
01:14:10,310 --> 01:14:13,640
that and again check the tweet bot if

1534
01:14:12,470 --> 01:14:15,020
you wanted the exact time for Monday

1535
01:14:13,640 --> 01:14:18,289
because the schedule get posted sometime

1536
01:14:15,020 --> 01:14:19,910
this weekend so that's it for today have

1537
01:14:18,289 --> 01:14:23,029
a good weekend everyone I'll see you

1538
01:14:19,909 --> 01:14:23,630
back here on Monday until then where is

1539
01:14:23,029 --> 01:14:26,029
my thing

1540
01:14:23,630 --> 01:14:29,440
have fun coding and I'll see you on the

1541
01:14:26,029 --> 01:14:29,439
Internet viki's everyone

