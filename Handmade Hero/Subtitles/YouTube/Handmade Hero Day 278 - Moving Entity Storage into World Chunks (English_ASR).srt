1
00:00:00,230 --> 00:00:04,620
start recording hello everyone and

2
00:00:02,609 --> 00:00:08,099
welcome to hand made here of the code

3
00:00:04,620 --> 00:00:09,809
the code where we I was not trying to

4
00:00:08,099 --> 00:00:11,219
forget how to reflux as least as I said

5
00:00:09,808 --> 00:00:15,329
the wrong where to first see if I could

6
00:00:11,218 --> 00:00:18,000
be written the code where we stream a

7
00:00:15,330 --> 00:00:19,618
complete game live okay I can't even do

8
00:00:18,000 --> 00:00:23,070
it forget it we'll start over again

9
00:00:19,618 --> 00:00:26,070
welcome to him make sure the stream

10
00:00:23,070 --> 00:00:27,810
where we code a complete game live here

11
00:00:26,070 --> 00:00:29,939
on Twitch which showed us some ads

12
00:00:27,809 --> 00:00:30,948
earlier what are you gonna do I guess

13
00:00:29,939 --> 00:00:33,238
they have to make money somehow

14
00:00:30,949 --> 00:00:34,920
hopefully you've paid for some kind of a

15
00:00:33,238 --> 00:00:36,659
twitch turbo or something like that

16
00:00:34,920 --> 00:00:38,789
whatever it was that I paid for it that

17
00:00:36,659 --> 00:00:40,049
made me not see ads otherwise you got

18
00:00:38,789 --> 00:00:42,628
some nice ads in there and what are you

19
00:00:40,049 --> 00:00:45,599
gonna do about it that's that's just the

20
00:00:42,628 --> 00:00:48,420
way of the internet anyway today we are

21
00:00:45,600 --> 00:00:50,910
going to be working on the entity system

22
00:00:48,420 --> 00:00:53,460
now which will actually sort of be an

23
00:00:50,909 --> 00:00:54,718
actual entity system we've gotten to

24
00:00:53,460 --> 00:00:58,140
that point where it's time to sort of

25
00:00:54,719 --> 00:00:59,969
make it a real thing and it went over

26
00:00:58,140 --> 00:01:02,939
yesterday my harebrained scheme for how

27
00:00:59,969 --> 00:01:04,859
I was going to try that and you can't

28
00:01:02,939 --> 00:01:07,228
stop me it's my code and if I want to do

29
00:01:04,859 --> 00:01:09,569
something crazy I'm gonna do it and so

30
00:01:07,228 --> 00:01:13,438
that's what's about to happen so you

31
00:01:09,569 --> 00:01:18,118
know buckle up and and quiet down so

32
00:01:13,438 --> 00:01:20,188
today is day 278 and and I am going to

33
00:01:18,118 --> 00:01:21,989
be working so the code base you should

34
00:01:20,188 --> 00:01:26,728
start with this day 277 if you want to

35
00:01:21,989 --> 00:01:29,519
play along at home with your own very

36
00:01:26,728 --> 00:01:32,819
own self and and so on and so forth so

37
00:01:29,519 --> 00:01:35,969
here is where we're at in the code base

38
00:01:32,819 --> 00:01:38,669
right now we have these this concept of

39
00:01:35,969 --> 00:01:40,319
a simulation region and this dates way

40
00:01:38,670 --> 00:01:41,310
back from when we start first started

41
00:01:40,319 --> 00:01:43,048
playing around with how we were going to

42
00:01:41,310 --> 00:01:45,930
handle infinitely large worlds

43
00:01:43,049 --> 00:01:48,110
effectively because I wanted to be able

44
00:01:45,930 --> 00:01:51,960
to use floating point values not doubles

45
00:01:48,109 --> 00:01:54,118
because a you know we still might at

46
00:01:51,959 --> 00:01:55,709
some point want to do this on a platform

47
00:01:54,118 --> 00:01:57,390
that doesn't super support doubles very

48
00:01:55,709 --> 00:01:59,938
well like a Raspberry Pi which didn't

49
00:01:57,390 --> 00:02:01,019
have them chances are you know maybe we

50
00:01:59,938 --> 00:02:02,908
could get away with that I don't know

51
00:02:01,019 --> 00:02:05,519
because they Rev the Raspberry Pi

52
00:02:02,909 --> 00:02:06,930
periodically so you know when we finally

53
00:02:05,519 --> 00:02:08,878
get to doing something like that you

54
00:02:06,930 --> 00:02:10,909
know maybe it'd be fine who knows but I

55
00:02:08,878 --> 00:02:13,109
wanted to avoid that for two reasons one

56
00:02:10,909 --> 00:02:13,829
because we don't really know if we'll

57
00:02:13,110 --> 00:02:15,570
always have

58
00:02:13,830 --> 00:02:18,600
two fast doubles and the other one is

59
00:02:15,569 --> 00:02:20,549
that I wanted to show how you could

60
00:02:18,599 --> 00:02:22,769
think about these sorts of problems in a

61
00:02:20,550 --> 00:02:24,840
way that guarantees precision without

62
00:02:22,770 --> 00:02:26,790
relying on the CPU to have to save your

63
00:02:24,840 --> 00:02:28,530
bacon meaning if you actually want to do

64
00:02:26,789 --> 00:02:30,989
all your math in a way that guarantees

65
00:02:28,530 --> 00:02:33,479
that its robust without having a

66
00:02:30,990 --> 00:02:35,760
sacrifice being able to have really

67
00:02:33,479 --> 00:02:37,739
really giant worlds how might you do

68
00:02:35,759 --> 00:02:39,120
that and so we sort of wanted to look at

69
00:02:37,740 --> 00:02:41,820
that cuz it's a more cut it's a more

70
00:02:39,120 --> 00:02:43,530
intricate a problem to try and solve and

71
00:02:41,819 --> 00:02:46,349
I'm actually relatively pleased so far

72
00:02:43,530 --> 00:02:48,689
with the way that we solved this problem

73
00:02:46,349 --> 00:02:50,129
but I feel like we can take it a lot

74
00:02:48,689 --> 00:02:51,719
further now that we're gonna start

75
00:02:50,129 --> 00:02:55,439
thinking about this part of you know the

76
00:02:51,719 --> 00:02:56,969
actual game code stuff more seriously I

77
00:02:55,439 --> 00:02:58,889
feel like we can take this a little bit

78
00:02:56,969 --> 00:03:00,359
further and it was always sort of

79
00:02:58,889 --> 00:03:02,759
something that was in you know kind of

80
00:03:00,360 --> 00:03:05,520
in the back of our minds when we were

81
00:03:02,759 --> 00:03:08,340
working on this I can't remember what it

82
00:03:05,520 --> 00:03:09,780
was handmade world I guess right I like

83
00:03:08,340 --> 00:03:10,890
that we left these introspection things

84
00:03:09,780 --> 00:03:14,550
from that time I did the introspection

85
00:03:10,889 --> 00:03:18,869
stream anyway so if you take a look at

86
00:03:14,550 --> 00:03:20,370
how our sort of architecture that we

87
00:03:18,870 --> 00:03:23,189
built at the beginning just for playing

88
00:03:20,370 --> 00:03:25,200
around worked it's actually kind of very

89
00:03:23,189 --> 00:03:27,000
harmonious I think now when we want to

90
00:03:25,199 --> 00:03:28,889
come back here and finally kind of get

91
00:03:27,000 --> 00:03:32,159
everything into what you might call a

92
00:03:28,889 --> 00:03:34,379
proper entity simulation architecture

93
00:03:32,159 --> 00:03:36,269
and that is we sort of have this notion

94
00:03:34,379 --> 00:03:38,669
of a world position here and a world

95
00:03:36,269 --> 00:03:41,459
position has these sort of chunk up

96
00:03:38,669 --> 00:03:43,679
things on it and has an offset inside

97
00:03:41,459 --> 00:03:45,090
the chunk and then we've got these world

98
00:03:43,680 --> 00:03:47,159
entity blocks and these are things that

99
00:03:45,090 --> 00:03:49,409
just store a bunch of entities which

100
00:03:47,159 --> 00:03:51,180
ones are in that block and then we've

101
00:03:49,409 --> 00:03:52,650
got this sort of concept of a world and

102
00:03:51,180 --> 00:03:56,430
the world you know you can query and say

103
00:03:52,650 --> 00:03:57,959
give me back you know this this for this

104
00:03:56,430 --> 00:03:59,159
region what are all the chunks that are

105
00:03:57,959 --> 00:04:00,810
involved so that I can decompress them

106
00:03:59,159 --> 00:04:02,789
right blah blah blah and so the way that

107
00:04:00,810 --> 00:04:04,469
we worked with our sim entity stuff is

108
00:04:02,789 --> 00:04:06,659
we say okay let's begin simulation of a

109
00:04:04,469 --> 00:04:09,120
region it will go and it pulls out all

110
00:04:06,659 --> 00:04:11,039
of the entities that it seems reference

111
00:04:09,120 --> 00:04:13,349
in the area now this was a double sort

112
00:04:11,039 --> 00:04:15,509
of indirect system the way that it was

113
00:04:13,349 --> 00:04:19,319
working before and the way that that

114
00:04:15,509 --> 00:04:21,120
happened if you if you recall is when

115
00:04:19,319 --> 00:04:23,060
you look at the world mode I believe we

116
00:04:21,120 --> 00:04:25,620
moved it out to world mode subsequently

117
00:04:23,060 --> 00:04:27,209
when you look at the world mode we kind

118
00:04:25,620 --> 00:04:27,629
of had this idea that there's just this

119
00:04:27,209 --> 00:04:29,609
John

120
00:04:27,629 --> 00:04:31,139
table of entities that's all the

121
00:04:29,610 --> 00:04:33,270
entities that exist in the world we're

122
00:04:31,139 --> 00:04:35,159
sitting there right and that's fine for

123
00:04:33,269 --> 00:04:37,349
what we were doing but you know I don't

124
00:04:35,160 --> 00:04:38,970
really love that and it's also kind of

125
00:04:37,350 --> 00:04:40,560
stupid it's like this weird constant

126
00:04:38,970 --> 00:04:43,620
that's in there and it's not it's not

127
00:04:40,560 --> 00:04:45,569
fabulous and so what I want to try and

128
00:04:43,620 --> 00:04:49,680
do is something a little more brazen

129
00:04:45,569 --> 00:04:52,259
right and I want to say look what if we

130
00:04:49,680 --> 00:04:54,750
just can't ever talk about entities in

131
00:04:52,259 --> 00:04:57,149
the absolute sense other than by their

132
00:04:54,750 --> 00:04:59,790
ID and you can't actually look up

133
00:04:57,149 --> 00:05:03,449
necessarily an item by its ID in that

134
00:04:59,790 --> 00:05:05,550
way okay and this is a little weird like

135
00:05:03,449 --> 00:05:07,620
I said there's a lot of really crazy

136
00:05:05,550 --> 00:05:10,680
off-the-wall things that I'm doing in

137
00:05:07,620 --> 00:05:11,879
this entity system because I can and you

138
00:05:10,680 --> 00:05:16,439
know some of them may work some of them

139
00:05:11,879 --> 00:05:21,269
won't work that's okay so anyway here on

140
00:05:16,439 --> 00:05:23,009
date 278 what I want to talk about here

141
00:05:21,269 --> 00:05:25,289
is so the way this thing was working is

142
00:05:23,009 --> 00:05:27,389
you know we have this simulation region

143
00:05:25,290 --> 00:05:28,890
and it had like an apron around it too

144
00:05:27,389 --> 00:05:30,810
and we sort of pulled in all the

145
00:05:28,889 --> 00:05:32,550
entities that were related to this

146
00:05:30,810 --> 00:05:34,290
region but it doesn't really matter

147
00:05:32,550 --> 00:05:36,150
about that part of it so much what we

148
00:05:34,290 --> 00:05:38,819
really care about is there is some box

149
00:05:36,149 --> 00:05:40,769
and we query that box and we get all of

150
00:05:38,819 --> 00:05:43,589
the entities that were in that box out

151
00:05:40,769 --> 00:05:45,299
right and what we do is we were sort of

152
00:05:43,589 --> 00:05:48,419
saying well there's this there's this

153
00:05:45,300 --> 00:05:49,949
store there's this flat array that's you

154
00:05:48,420 --> 00:05:51,810
know we were calling the low-fidelity

155
00:05:49,949 --> 00:05:53,729
entities or whatever and then what we

156
00:05:51,810 --> 00:05:56,100
were doing is using this box as the

157
00:05:53,730 --> 00:05:57,810
query region we were pulling out like

158
00:05:56,100 --> 00:06:00,060
whoever the people were who were in

159
00:05:57,810 --> 00:06:02,759
there and we were moving them over into

160
00:06:00,060 --> 00:06:04,560
the sim region right and the sim region

161
00:06:02,759 --> 00:06:06,629
is a smaller set but with bigger

162
00:06:04,560 --> 00:06:08,220
entities in theory we never really did

163
00:06:06,629 --> 00:06:11,759
that part but that was kind of what we

164
00:06:08,220 --> 00:06:13,560
were thinking right and so what I want

165
00:06:11,759 --> 00:06:17,219
to do or at least want to try to do

166
00:06:13,560 --> 00:06:19,379
until I determined that it's crazy is I

167
00:06:17,220 --> 00:06:21,120
want to just get rid of this entirely so

168
00:06:19,379 --> 00:06:23,850
what I'd like to do is say there is no

169
00:06:21,120 --> 00:06:26,579
more low na storage at all there is only

170
00:06:23,850 --> 00:06:28,200
the sim region they use the giant sparse

171
00:06:26,579 --> 00:06:29,819
entity concept that I introduced

172
00:06:28,199 --> 00:06:33,360
yesterday that I'm going to try for

173
00:06:29,819 --> 00:06:38,719
entities that's all there is that's it

174
00:06:33,360 --> 00:06:41,120
and then what happens is when you go to

175
00:06:38,720 --> 00:06:43,580
right out these things they are stored

176
00:06:41,120 --> 00:06:45,350
directly in the world chunks so if this

177
00:06:43,579 --> 00:06:46,819
region is broken up I mean who knows how

178
00:06:45,350 --> 00:06:48,020
many world chunks are overlapped here

179
00:06:46,819 --> 00:06:50,149
but let's say there are some world

180
00:06:48,019 --> 00:06:53,539
chunks overlapped like this kind of a

181
00:06:50,149 --> 00:06:56,719
thing right let's say there are four of

182
00:06:53,540 --> 00:06:58,580
them or something like this if we wanted

183
00:06:56,720 --> 00:07:00,290
to work it out this way for example if

184
00:06:58,579 --> 00:07:02,240
there were four world chunks then all of

185
00:07:00,290 --> 00:07:04,430
the entities that were in you know this

186
00:07:02,240 --> 00:07:06,050
region would get stored into this world

187
00:07:04,430 --> 00:07:09,259
chunk actually stored in the world trunk

188
00:07:06,050 --> 00:07:11,360
so instead of it being a just in the

189
00:07:09,259 --> 00:07:13,550
world entity block instead of that world

190
00:07:11,360 --> 00:07:15,379
block storing indices into the low

191
00:07:13,550 --> 00:07:16,790
entity table we actually just packed the

192
00:07:15,379 --> 00:07:19,879
entities and they are written out in

193
00:07:16,790 --> 00:07:21,830
there right so basically like we open up

194
00:07:19,879 --> 00:07:23,540
the entity block we write out all the

195
00:07:21,829 --> 00:07:24,319
things into it we close the entity block

196
00:07:23,540 --> 00:07:27,220
and we're done

197
00:07:24,319 --> 00:07:32,689
that's how we store the entities right

198
00:07:27,220 --> 00:07:35,630
and and then when we want to pull them

199
00:07:32,689 --> 00:07:37,310
in again we open up the entity block we

200
00:07:35,629 --> 00:07:38,709
read them all out and we're in there we

201
00:07:37,310 --> 00:07:41,480
are okay

202
00:07:38,709 --> 00:07:43,879
this is basically just like a streaming

203
00:07:41,480 --> 00:07:46,040
system right we stream it in you modify

204
00:07:43,879 --> 00:07:47,899
it we stream it back out again and we

205
00:07:46,040 --> 00:07:49,879
don't care because of the way that I'll

206
00:07:47,899 --> 00:07:51,349
end up writing it in terms of being sort

207
00:07:49,879 --> 00:07:52,790
of chunked right because it's already

208
00:07:51,350 --> 00:07:54,590
we've already written it that way right

209
00:07:52,790 --> 00:07:56,510
so imagine this now instead of being a

210
00:07:54,589 --> 00:07:58,759
set of indices imagine this is just a

211
00:07:56,509 --> 00:08:01,099
block of data that's like however big we

212
00:07:58,759 --> 00:08:03,949
want a world chunk to be let's say 64 K

213
00:08:01,100 --> 00:08:05,420
or something right we just stream as

214
00:08:03,949 --> 00:08:07,759
much as we can and then when we get to

215
00:08:05,420 --> 00:08:11,240
the end we use another block if we need

216
00:08:07,759 --> 00:08:12,980
to right so when we stream in all those

217
00:08:11,240 --> 00:08:15,590
rocks are blocks are considered freed

218
00:08:12,980 --> 00:08:17,540
when we stream out we pull those blocks

219
00:08:15,589 --> 00:08:18,829
back in and overwrite whatever was in

220
00:08:17,540 --> 00:08:21,050
there with the new state-of-the entities

221
00:08:18,829 --> 00:08:22,699
so it's basically just the cyclical

222
00:08:21,050 --> 00:08:24,770
streaming system and basically you just

223
00:08:22,699 --> 00:08:26,240
stream in that window you constantly

224
00:08:24,769 --> 00:08:29,569
stream entities in and out as you kind

225
00:08:26,240 --> 00:08:33,200
of go through and also obviously this is

226
00:08:29,569 --> 00:08:35,689
pretty much completely compatible with

227
00:08:33,200 --> 00:08:37,370
if you had wanted to be out of core for

228
00:08:35,690 --> 00:08:38,960
some reason so if you wanted it for some

229
00:08:37,370 --> 00:08:40,580
reason habit so that this stuff was so

230
00:08:38,960 --> 00:08:42,440
huge can't even fit in system memory

231
00:08:40,580 --> 00:08:44,210
which is absurd cuz I don't even want to

232
00:08:42,440 --> 00:08:45,800
know how long it would take you in

233
00:08:44,210 --> 00:08:50,690
infinite amount of time to ever play

234
00:08:45,799 --> 00:08:52,129
that game right that's just crazy but if

235
00:08:50,690 --> 00:08:53,540
you for some reason did

236
00:08:52,129 --> 00:08:55,759
you could imagine this being the

237
00:08:53,539 --> 00:08:58,370
primitive because now all right if you

238
00:08:55,759 --> 00:08:59,809
run on a storage you just say okay

239
00:08:58,370 --> 00:09:01,429
entity blocks just get flushed to this

240
00:08:59,809 --> 00:09:07,189
now and we load them back in when we

241
00:09:01,429 --> 00:09:08,629
need to problem solved right so you know

242
00:09:07,190 --> 00:09:10,430
we could if we wanted to make this out

243
00:09:08,629 --> 00:09:12,320
of core at that point and it would be

244
00:09:10,429 --> 00:09:14,299
totally workable and maybe someday we

245
00:09:12,320 --> 00:09:17,390
will just so we can save we did because

246
00:09:14,299 --> 00:09:19,159
we're stupid and ridiculous all right so

247
00:09:17,389 --> 00:09:20,929
that's the way I want the system to work

248
00:09:19,159 --> 00:09:23,120
and so the first thing that I'm going to

249
00:09:20,929 --> 00:09:26,389
do is I'm going to try obliterating the

250
00:09:23,120 --> 00:09:28,190
low entity array entirely and see if I

251
00:09:26,389 --> 00:09:30,169
can get away with that how many things

252
00:09:28,190 --> 00:09:32,870
that I will have that will be

253
00:09:30,169 --> 00:09:34,969
problematic right and you can already

254
00:09:32,870 --> 00:09:37,460
think of one thing that's problematic

255
00:09:34,970 --> 00:09:39,139
right and that is when we have the

256
00:09:37,460 --> 00:09:41,570
entities that reference each other so

257
00:09:39,139 --> 00:09:44,149
for example in the current system we

258
00:09:41,570 --> 00:09:45,920
might have this is a real example right

259
00:09:44,149 --> 00:09:47,659
that we already have in the system we

260
00:09:45,919 --> 00:09:49,219
have the head and the body of the hero

261
00:09:47,659 --> 00:09:51,860
because they can be disaggregated if we

262
00:09:49,220 --> 00:09:53,899
want them to be they point to each other

263
00:09:51,860 --> 00:09:56,570
right they've each got sort of a notion

264
00:09:53,899 --> 00:09:58,699
of hey I've got like a pointer to either

265
00:09:56,570 --> 00:10:00,410
view but we already know that those get

266
00:09:58,700 --> 00:10:02,870
converted to pointers during sim and

267
00:10:00,409 --> 00:10:04,939
converted back to indices when we end

268
00:10:02,870 --> 00:10:06,350
right so we already know that there's a

269
00:10:04,940 --> 00:10:08,060
translation that happens there the head

270
00:10:06,350 --> 00:10:09,529
stores in the low end units of the body

271
00:10:08,059 --> 00:10:12,229
the body chars ellonija is at the head

272
00:10:09,529 --> 00:10:13,429
so that they can know which one and

273
00:10:12,230 --> 00:10:16,730
think about where each other are asked

274
00:10:13,429 --> 00:10:18,529
questions about about each other what

275
00:10:16,730 --> 00:10:22,639
I'm gonna do is I'm just gonna replace

276
00:10:18,529 --> 00:10:24,529
that with a hash in the sim region so

277
00:10:22,639 --> 00:10:28,789
what will happen is as the entities are

278
00:10:24,529 --> 00:10:32,029
streamed out right rather streamed in to

279
00:10:28,789 --> 00:10:33,589
the the sim region their unique IDs

280
00:10:32,029 --> 00:10:35,329
which will just stick that can just be

281
00:10:33,590 --> 00:10:37,730
some random 32-bit number that we

282
00:10:35,330 --> 00:10:39,500
monetize increment their unique IDs will

283
00:10:37,730 --> 00:10:41,480
be in their enemies as they get unpacked

284
00:10:39,500 --> 00:10:45,169
that unique ID will go into the hash

285
00:10:41,480 --> 00:10:47,090
table right and when somebody else is

286
00:10:45,169 --> 00:10:49,759
looking for that ID when they're

287
00:10:47,090 --> 00:10:51,170
unpacked they will get it out right now

288
00:10:49,759 --> 00:10:52,549
there's a little bit of a nastiness

289
00:10:51,169 --> 00:10:54,319
there which is this is kind of have to

290
00:10:52,549 --> 00:10:55,699
be done in two passes because until

291
00:10:54,320 --> 00:10:57,680
you've unpacked everything you don't

292
00:10:55,700 --> 00:10:59,960
actually know what all the IDS are that

293
00:10:57,679 --> 00:11:01,219
you might want right and that's a little

294
00:10:59,960 --> 00:11:04,220
inefficient and it's kind of unfortunate

295
00:11:01,220 --> 00:11:06,000
but we can do ourselves one better if we

296
00:11:04,220 --> 00:11:08,100
want to and make it so that it actually

297
00:11:06,000 --> 00:11:09,419
isn't inefficient at all and the way

298
00:11:08,100 --> 00:11:10,589
that we can do that is since we are

299
00:11:09,419 --> 00:11:12,958
going to be writing these things out

300
00:11:10,589 --> 00:11:14,670
what we could choose to do first is we

301
00:11:12,958 --> 00:11:16,409
know all of the entities that are going

302
00:11:14,669 --> 00:11:18,448
to get packed into a region so if we

303
00:11:16,409 --> 00:11:22,110
wanted to make packing take a little bit

304
00:11:18,448 --> 00:11:25,948
more thinking we could make packing pack

305
00:11:22,110 --> 00:11:27,750
the indices into a separate part of that

306
00:11:25,948 --> 00:11:29,789
stream at buffer so for example when we

307
00:11:27,750 --> 00:11:32,068
stream things out to a real chunk we

308
00:11:29,789 --> 00:11:34,399
could put all the indices first and then

309
00:11:32,068 --> 00:11:36,870
all of the data right we could do that

310
00:11:34,399 --> 00:11:41,220
now I don't know if that would put too

311
00:11:36,870 --> 00:11:42,929
much of an onerous sort of weight on to

312
00:11:41,220 --> 00:11:45,089
our streaming system because now we have

313
00:11:42,929 --> 00:11:48,179
to do two passes over the writing

314
00:11:45,089 --> 00:11:53,819
portion right and I don't know if that's

315
00:11:48,179 --> 00:11:58,528
a bad thing or not it's really hard to

316
00:11:53,818 --> 00:12:00,179
say what we could do potentially is keep

317
00:11:58,528 --> 00:12:02,100
things sorted by chunk or something like

318
00:12:00,179 --> 00:12:04,500
that but I just don't know it's just a

319
00:12:02,100 --> 00:12:07,290
little bit dicey so what I'm gonna do at

320
00:12:04,500 --> 00:12:08,850
the outset is I'm not gonna do either of

321
00:12:07,289 --> 00:12:10,558
those things I'm just gonna say there's

322
00:12:08,850 --> 00:12:14,790
two passes so there's the unpacked pass

323
00:12:10,558 --> 00:12:16,769
and the pointer fix-up pass right I'm

324
00:12:14,789 --> 00:12:19,019
gonna just have that be the way that it

325
00:12:16,769 --> 00:12:20,639
works and we'll see how bad it is and

326
00:12:19,019 --> 00:12:21,919
then if it's too bad we'll you know

327
00:12:20,639 --> 00:12:26,549
we'll try to figure out something

328
00:12:21,919 --> 00:12:31,198
smarter as we go okay and that's that's

329
00:12:26,549 --> 00:12:32,429
the that's the idea here we go this is

330
00:12:31,198 --> 00:12:33,568
gonna be a lot of edits I don't know

331
00:12:32,429 --> 00:12:36,388
that they'll finished today probably

332
00:12:33,568 --> 00:12:37,828
they won't so you know this will

333
00:12:36,389 --> 00:12:39,568
probably be a Today Tomorrow thing to

334
00:12:37,828 --> 00:12:42,799
sort of get this core code or

335
00:12:39,568 --> 00:12:45,509
organization sort of a little bit more

336
00:12:42,799 --> 00:12:47,669
you know robust if you will the first

337
00:12:45,509 --> 00:12:49,500
thing I'm gonna do just I'm gonna try to

338
00:12:47,669 --> 00:12:50,909
take this in steps you've seen us do

339
00:12:49,500 --> 00:12:53,278
this very many times I've handmade here

340
00:12:50,909 --> 00:12:54,509
oh and I'm gonna do it again which is

341
00:12:53,278 --> 00:12:56,208
that I don't want to break everything in

342
00:12:54,509 --> 00:12:58,829
the architecture at once because again

343
00:12:56,208 --> 00:13:00,649
even when you've done tons and tons and

344
00:12:58,828 --> 00:13:03,239
tons of architecture work like I have

345
00:13:00,649 --> 00:13:04,649
your brain is simply not really a

346
00:13:03,240 --> 00:13:05,759
computer right and there's things that

347
00:13:04,649 --> 00:13:07,708
you'll forget and there's things that

348
00:13:05,759 --> 00:13:09,209
you can't predict so when you are

349
00:13:07,708 --> 00:13:10,888
working on things you always have the

350
00:13:09,208 --> 00:13:12,239
sort of treat as an experiment don't

351
00:13:10,889 --> 00:13:14,250
assume that the thing that you're doing

352
00:13:12,240 --> 00:13:15,659
is right you have to go well I think

353
00:13:14,250 --> 00:13:17,490
it's gonna be right but I need to sort

354
00:13:15,659 --> 00:13:18,659
of experiment to make sure and so I'm

355
00:13:17,490 --> 00:13:19,269
taking it gonna take it once I was

356
00:13:18,659 --> 00:13:21,339
saying make sure

357
00:13:19,269 --> 00:13:23,289
that my assumptions don't appear to be

358
00:13:21,340 --> 00:13:25,170
completely invalid at any given stage

359
00:13:23,289 --> 00:13:27,549
before I get too far down there right so

360
00:13:25,169 --> 00:13:30,069
first can they do and we taking a world

361
00:13:27,549 --> 00:13:33,159
entity block and I'm just gonna make it

362
00:13:30,070 --> 00:13:34,390
a fixed size so I'm gonna have some data

363
00:13:33,159 --> 00:13:36,909
at the end of it that I could have used

364
00:13:34,389 --> 00:13:40,539
to written so let's say that I want that

365
00:13:36,909 --> 00:13:41,889
sort of data block to be we just want to

366
00:13:40,539 --> 00:13:43,959
call this entity de there whatever here

367
00:13:41,889 --> 00:13:46,149
let's see that that entity data block

368
00:13:43,960 --> 00:13:48,430
that I want to read and write is going

369
00:13:46,149 --> 00:13:51,850
to be 64 K like I said right

370
00:13:48,429 --> 00:13:54,729
so I basically want to have 64 K of

371
00:13:51,850 --> 00:13:56,440
bytes right in this data block and that

372
00:13:54,730 --> 00:13:58,240
is what I will use to like stream in and

373
00:13:56,440 --> 00:14:00,190
out right and then instead of an enemy

374
00:13:58,240 --> 00:14:03,460
count the entity count is not gonna be

375
00:14:00,190 --> 00:14:05,320
involved here it anyway instead what I'm

376
00:14:03,460 --> 00:14:07,150
gonna have well actually you know what I

377
00:14:05,320 --> 00:14:08,800
probably would still keep it right to be

378
00:14:07,149 --> 00:14:10,360
honest I probably would keep an enemy

379
00:14:08,799 --> 00:14:12,699
count so the entity count would probably

380
00:14:10,360 --> 00:14:14,350
still be there because that might aid in

381
00:14:12,700 --> 00:14:16,210
allocation if I can grab the world

382
00:14:14,350 --> 00:14:19,060
entity blocks out and figure out what

383
00:14:16,210 --> 00:14:26,290
the other cats first like it might well

384
00:14:19,059 --> 00:14:29,500
I mean when we unpack these things I

385
00:14:26,289 --> 00:14:30,909
guess is all I'm thinking now you know

386
00:14:29,500 --> 00:14:32,559
what it's not gonna be there the other

387
00:14:30,909 --> 00:14:33,639
knee cap we probably don't need so I'm

388
00:14:32,559 --> 00:14:35,109
just gonna say we don't have the enemy

389
00:14:33,639 --> 00:14:37,419
camp so probably nothing they count well

390
00:14:35,110 --> 00:14:39,730
what I have instead is just how much

391
00:14:37,419 --> 00:14:41,740
data there is right so we'll just say

392
00:14:39,730 --> 00:14:44,080
like any data size and that's just how

393
00:14:41,740 --> 00:14:45,730
much of the 64 K do we actually use now

394
00:14:44,080 --> 00:14:48,310
obviously we don't actually need 32 bits

395
00:14:45,730 --> 00:14:49,360
to say how much of 64 K we used but it

396
00:14:48,309 --> 00:14:51,159
doesn't really matter because in this

397
00:14:49,360 --> 00:14:53,440
case this is the majority and this is

398
00:14:51,159 --> 00:14:54,519
not that interesting so we're gonna have

399
00:14:53,440 --> 00:14:56,020
something like this and that's going to

400
00:14:54,519 --> 00:14:57,639
pack or any theta all I'm gonna do now

401
00:14:56,019 --> 00:15:00,789
is compile the program and see if it

402
00:14:57,639 --> 00:15:02,980
explodes right like I don't really know

403
00:15:00,789 --> 00:15:04,089
because I don't remember exactly how

404
00:15:02,980 --> 00:15:05,379
those things are being processed I think

405
00:15:04,090 --> 00:15:06,730
they were allocated on demand so I

406
00:15:05,379 --> 00:15:08,529
wouldn't expect anything to really

407
00:15:06,730 --> 00:15:10,779
explode here but let's double check

408
00:15:08,529 --> 00:15:12,699
right so there you go

409
00:15:10,779 --> 00:15:15,039
already we did explode specifically

410
00:15:12,700 --> 00:15:16,800
because when we create worlds we were

411
00:15:15,039 --> 00:15:19,649
having some kind of a

412
00:15:16,799 --> 00:15:23,569
of a size size problem here so what's

413
00:15:19,649 --> 00:15:23,569
what's happening what's the complaint

414
00:15:23,690 --> 00:15:28,650
let's see

415
00:15:25,529 --> 00:15:32,779
do you falter Rena params size in it who

416
00:15:28,649 --> 00:15:35,519
is allocating this the world struct why

417
00:15:32,779 --> 00:15:38,699
why am I out of space my realtor is that

418
00:15:35,519 --> 00:15:40,079
just because there were chunks and you

419
00:15:38,700 --> 00:15:41,970
can see exactly why I put that in there

420
00:15:40,080 --> 00:15:44,310
right it was defined specifically that

421
00:15:41,970 --> 00:15:47,340
thing so let's take a look quickly at

422
00:15:44,309 --> 00:15:50,219
what that actually is where am I looking

423
00:15:47,340 --> 00:15:54,899
here okay so that is I'm doing a push

424
00:15:50,220 --> 00:15:56,490
struct of the create world ah that's

425
00:15:54,899 --> 00:15:59,569
because the chunk cache does not operate

426
00:15:56,490 --> 00:16:09,480
on pointers it's just a static set of

427
00:15:59,570 --> 00:16:12,030
4096 of those that's hmm hmm so I don't

428
00:16:09,480 --> 00:16:15,750
know that I want that to be true anymore

429
00:16:12,029 --> 00:16:18,389
I mean maybe we do because hey whatever

430
00:16:15,750 --> 00:16:24,860
that amount is we would keep it

431
00:16:18,389 --> 00:16:24,860
allocated I guess at that time but yeah

432
00:16:29,299 --> 00:16:36,179
how do I want to deal with that I'm not

433
00:16:34,679 --> 00:16:37,979
really sure cuz this is basically gonna

434
00:16:36,179 --> 00:16:40,259
take I mean this is the majority of our

435
00:16:37,980 --> 00:16:42,600
memory but we don't want to if nothing

436
00:16:40,259 --> 00:16:45,990
is is sitting in that hash lot we don't

437
00:16:42,600 --> 00:16:48,330
want to use a space for it right

438
00:16:45,990 --> 00:16:51,750
so that just seems like probably not

439
00:16:48,330 --> 00:16:53,970
such a useful idea in general so I'm

440
00:16:51,750 --> 00:16:56,730
thinking more like we probably want to

441
00:16:53,970 --> 00:16:59,340
make this so that when there's nothing

442
00:16:56,730 --> 00:17:01,110
in the hash lot it's just empty and that

443
00:16:59,340 --> 00:17:02,730
seems like probably a better idea to me

444
00:17:01,110 --> 00:17:05,009
so I feel like we would want to do

445
00:17:02,730 --> 00:17:07,680
something like this probably and only

446
00:17:05,009 --> 00:17:08,789
have them be replaced there yeah I feel

447
00:17:07,680 --> 00:17:13,980
like that's probably better

448
00:17:08,789 --> 00:17:15,269
that's just my assumption so yeah so

449
00:17:13,980 --> 00:17:18,000
what that would basically mean is we'd

450
00:17:15,269 --> 00:17:20,279
grab it out here and I and this would be

451
00:17:18,000 --> 00:17:22,920
changed to a you know a wild chunk

452
00:17:20,279 --> 00:17:25,139
situation and to be honest that's a

453
00:17:22,920 --> 00:17:26,880
cleaner loop anyway I mean I know why we

454
00:17:25,140 --> 00:17:29,580
did it originally because we didn't want

455
00:17:26,880 --> 00:17:30,360
there to be any sort of weirdness there

456
00:17:29,579 --> 00:17:33,388
oops

457
00:17:30,359 --> 00:17:34,558
with we wanted to like be more cash

458
00:17:33,388 --> 00:17:36,808
friendly so we didn't have to sort of

459
00:17:34,558 --> 00:17:38,278
doubly indirect but I'm not too worried

460
00:17:36,808 --> 00:17:40,408
about the moment because our lookups

461
00:17:38,278 --> 00:17:41,999
generally only happen that one time when

462
00:17:40,409 --> 00:17:43,860
we pull things out of it so I'm not sure

463
00:17:41,999 --> 00:17:45,868
that we really care too much about that

464
00:17:43,859 --> 00:17:50,849
so I'm gonna go ahead and put this in

465
00:17:45,868 --> 00:17:54,589
here where we where we'll loop through

466
00:17:50,849 --> 00:17:58,730
our chunks in that fashion

467
00:17:54,589 --> 00:17:58,730
and let's see what else we got

468
00:18:01,128 --> 00:18:08,459
so it looks like we should just do

469
00:18:04,519 --> 00:18:13,528
results and incurable say results equals

470
00:18:08,460 --> 00:18:17,340
chunk and soul people chunk right I

471
00:18:13,528 --> 00:18:20,179
think that's what we're looking for and

472
00:18:17,339 --> 00:18:20,178
let's see here

473
00:18:23,240 --> 00:18:29,099
well in this case if the arena's not no

474
00:18:26,940 --> 00:18:31,590
we allocate so we do have a slight

475
00:18:29,099 --> 00:18:34,859
problem which is that if we run out of

476
00:18:31,589 --> 00:18:39,298
chunks we want to allocate an additional

477
00:18:34,859 --> 00:18:42,269
chunk right so what we probably want to

478
00:18:39,298 --> 00:18:43,888
do here is get rid of this concept of

479
00:18:42,269 --> 00:18:47,099
chunk and initialize because we don't

480
00:18:43,888 --> 00:18:48,599
need that anymore right and kind of we

481
00:18:47,099 --> 00:18:50,878
can actually clean this up quite a bit

482
00:18:48,599 --> 00:18:53,509
that was all written because of the way

483
00:18:50,878 --> 00:18:56,339
we wanted to do that sort of initial

484
00:18:53,509 --> 00:18:58,499
initial bit there and so the tiled chunk

485
00:18:56,339 --> 00:19:01,589
uninitialized is probably okay to just

486
00:18:58,499 --> 00:19:04,589
delete at this point so if I run through

487
00:19:01,589 --> 00:19:06,658
my chunks and I don't find anything in

488
00:19:04,589 --> 00:19:08,908
the hash table that matches it right

489
00:19:06,659 --> 00:19:11,549
this is the this is the match criteria

490
00:19:08,909 --> 00:19:13,559
here so if I don't find anything then

491
00:19:11,548 --> 00:19:15,418
that is just this code nap that this

492
00:19:13,558 --> 00:19:19,769
code only runs under that circumstance

493
00:19:15,419 --> 00:19:21,720
right in fact what we could say is well

494
00:19:19,769 --> 00:19:23,308
I'll leave it like this for now and so

495
00:19:21,720 --> 00:19:27,058
then in here we'll say well okay if

496
00:19:23,308 --> 00:19:30,210
there's an arena right and I didn't find

497
00:19:27,058 --> 00:19:32,428
the result so you know I'm want to

498
00:19:30,210 --> 00:19:34,379
always insert this because they pass an

499
00:19:32,429 --> 00:19:36,899
arena and there isn't actually one that

500
00:19:34,378 --> 00:19:38,998
I've located then what I want to do is I

501
00:19:36,898 --> 00:19:41,278
want to create one of these right so the

502
00:19:38,999 --> 00:19:43,139
ones that I'm going to return you know

503
00:19:41,278 --> 00:19:45,179
is this this new world chunk that I've

504
00:19:43,138 --> 00:19:46,408
created and then what I want to do is I

505
00:19:45,179 --> 00:19:48,119
just want to make sure that it gets

506
00:19:46,409 --> 00:19:51,139
pushed onto the hash table in the

507
00:19:48,118 --> 00:19:54,178
correct location right so the trunk hash

508
00:19:51,138 --> 00:19:56,758
here at this hash slot I want that

509
00:19:54,179 --> 00:19:58,409
whatever is in that hash lot I'm gonna

510
00:19:56,759 --> 00:20:03,480
make that be my next pointer so I'm

511
00:19:58,409 --> 00:20:04,860
gonna like keep it around like so but

512
00:20:03,480 --> 00:20:06,659
then what I'm gonna do is say well now

513
00:20:04,859 --> 00:20:08,459
that that first thing in the hash lot is

514
00:20:06,659 --> 00:20:10,619
neat so it's just a singly linked list

515
00:20:08,460 --> 00:20:12,150
that I'm sort of pushing things onto as

516
00:20:10,618 --> 00:20:14,009
they get added to the

517
00:20:12,150 --> 00:20:16,980
right and then I don't care about this

518
00:20:14,009 --> 00:20:19,950
anymore so that created you know the

519
00:20:16,980 --> 00:20:21,990
what I actually needed but I also need

520
00:20:19,950 --> 00:20:24,180
to initialize the other data in it cure

521
00:20:21,990 --> 00:20:25,950
because it you know obviously that's not

522
00:20:24,180 --> 00:20:28,080
initialized so let's put that in there

523
00:20:25,950 --> 00:20:29,910
and I believe that that will it clear it

524
00:20:28,079 --> 00:20:31,889
to zero which I don't want it to do

525
00:20:29,910 --> 00:20:33,720
right because it's a lot of memory and I

526
00:20:31,890 --> 00:20:36,060
don't want that memory to be cleared to

527
00:20:33,720 --> 00:20:37,920
zero if it doesn't have to be so what I

528
00:20:36,059 --> 00:20:40,079
want to do here is go in and say well

529
00:20:37,920 --> 00:20:42,259
alright whatever the world chunk stuff

530
00:20:40,079 --> 00:20:42,259
is

531
00:20:42,299 --> 00:20:48,619
I'm sorry not whatever the world Trek

532
00:20:43,799 --> 00:20:53,399
stuff is what hand-made let's see

533
00:20:48,619 --> 00:20:55,919
handmade that age whatever the the

534
00:20:53,400 --> 00:20:57,960
push-truck does I want to pass the flag

535
00:20:55,920 --> 00:20:59,940
at the end of this right that says hey

536
00:20:57,960 --> 00:21:01,710
don't clear this memory so I'm just

537
00:20:59,940 --> 00:21:03,539
gonna say like don't clear it when it

538
00:21:01,710 --> 00:21:05,670
comes back to me because I'm gonna do

539
00:21:03,539 --> 00:21:09,269
the clearing myself so then when I have

540
00:21:05,670 --> 00:21:12,990
that I need to go ahead and specify in

541
00:21:09,269 --> 00:21:18,559
my result here that the rest of this

542
00:21:12,990 --> 00:21:21,000
stuff is actually okay so let's see here

543
00:21:18,559 --> 00:21:24,000
let's see we're going to block first

544
00:21:21,000 --> 00:21:25,470
block that's fine and we've got the

545
00:21:24,000 --> 00:21:27,359
chunk exposed either next in half that's

546
00:21:25,470 --> 00:21:30,240
all initialized so all I really have to

547
00:21:27,359 --> 00:21:33,240
do here is say well that that world that

548
00:21:30,240 --> 00:21:35,400
first block there that block needs to be

549
00:21:33,240 --> 00:21:42,930
initialized so the first block enemy

550
00:21:35,400 --> 00:21:47,370
camp has to be 0 the first block enemy

551
00:21:42,930 --> 00:21:51,539
data size has to be zero and the first

552
00:21:47,369 --> 00:21:53,969
block next has to be zero but I feel

553
00:21:51,539 --> 00:21:55,529
like that stuff that we should have been

554
00:21:53,970 --> 00:21:57,900
doing before in a sense in some kind of

555
00:21:55,529 --> 00:21:59,759
a centralized initialization phase so I

556
00:21:57,900 --> 00:22:03,960
feel like there should be something that

557
00:21:59,759 --> 00:22:05,190
does you know let's just take a look so

558
00:22:03,960 --> 00:22:07,470
we don't actually have that anywhere

559
00:22:05,190 --> 00:22:09,029
oddly enough so I'm gonna say just for

560
00:22:07,470 --> 00:22:10,140
now because I feel like this should be a

561
00:22:09,029 --> 00:22:12,660
thing that's concrete

562
00:22:10,140 --> 00:22:17,820
I'm gonna say that there's a you know

563
00:22:12,660 --> 00:22:20,279
clear world entity block right so that

564
00:22:17,819 --> 00:22:22,589
basically I don't have to remember you

565
00:22:20,279 --> 00:22:25,289
know what it takes to initialize one of

566
00:22:22,589 --> 00:22:27,089
these because it's not clear to

567
00:22:25,289 --> 00:22:28,559
zero clear two zeros very convenient cuz

568
00:22:27,089 --> 00:22:30,329
then you know anyone can just go to zero

569
00:22:28,559 --> 00:22:31,859
and you're done when I start wanting to

570
00:22:30,329 --> 00:22:33,359
actually have initializer then you're in

571
00:22:31,859 --> 00:22:34,979
a more constructor eland where you're

572
00:22:33,359 --> 00:22:37,229
like I want to know that this thing is

573
00:22:34,980 --> 00:22:39,210
getting created in a specific way so I

574
00:22:37,230 --> 00:22:39,630
just want to make a place where that can

575
00:22:39,210 --> 00:22:43,350
happen

576
00:22:39,630 --> 00:22:45,540
clearly right so when I'm doing this

577
00:22:43,349 --> 00:22:46,980
world entity block clear I know that the

578
00:22:45,539 --> 00:22:49,079
entity count has to be set to zero again

579
00:22:46,980 --> 00:22:50,610
that will probably go away I know that

580
00:22:49,079 --> 00:22:52,679
the next coroner has to be set to zero

581
00:22:50,609 --> 00:22:53,909
and I know that the entity data size has

582
00:22:52,680 --> 00:22:55,980
to be set to zero but everything else

583
00:22:53,910 --> 00:22:58,200
can be uninitialized which is what I

584
00:22:55,980 --> 00:22:59,940
want so here I'll just change this to be

585
00:22:58,200 --> 00:23:01,230
clear world entity block and I'll change

586
00:22:59,940 --> 00:23:02,640
that to be saying that whatever that

587
00:23:01,230 --> 00:23:05,940
first lock is that's a thing

588
00:23:02,640 --> 00:23:08,310
that has got to go now tiled chunk

589
00:23:05,940 --> 00:23:12,480
uninitialized again in here this is sort

590
00:23:08,309 --> 00:23:14,009
of a separate thing that's talk about

591
00:23:12,480 --> 00:23:16,079
these role positions these role business

592
00:23:14,009 --> 00:23:18,269
are going to go but since the tile chunk

593
00:23:16,079 --> 00:23:19,740
uninitialized thing I guess I should

594
00:23:18,269 --> 00:23:21,690
probably leave it in here child chunk

595
00:23:19,740 --> 00:23:23,009
initialized just temporarily because

596
00:23:21,690 --> 00:23:24,120
this is a separate part of the code that

597
00:23:23,009 --> 00:23:26,009
will also be getting rid of I don't want

598
00:23:24,119 --> 00:23:28,019
to get rid of it yet so we'll say that

599
00:23:26,009 --> 00:23:32,269
the null position in the is valsa tile

600
00:23:28,019 --> 00:23:32,269
chunk initialized that's going to be

601
00:23:34,309 --> 00:23:40,859
whatever it was before in 32 max or

602
00:23:36,839 --> 00:23:44,399
whatever so that's fine okay

603
00:23:40,859 --> 00:23:45,899
so let's see world chunk next is not a

604
00:23:44,400 --> 00:23:48,690
member of Road truck it's not I thought

605
00:23:45,900 --> 00:23:56,040
we just said that it was next in hash

606
00:23:48,690 --> 00:23:58,400
sorry there we go there's our chunk

607
00:23:56,039 --> 00:24:04,710
return that's actually called result now

608
00:23:58,400 --> 00:24:07,530
and here are our exes okay so what's

609
00:24:04,710 --> 00:24:08,759
this in create world this initializes

610
00:24:07,529 --> 00:24:10,740
this well this doesn't have to be

611
00:24:08,759 --> 00:24:12,589
initialized anymore it's just zero now

612
00:24:10,740 --> 00:24:14,970
so we don't care about any of this stuff

613
00:24:12,589 --> 00:24:19,619
right that's just totally fine

614
00:24:14,970 --> 00:24:22,440
so that doesn't matter now this world

615
00:24:19,619 --> 00:24:24,869
arena with the parent arena stuff I

616
00:24:22,440 --> 00:24:26,880
don't really remember what happens when

617
00:24:24,869 --> 00:24:28,379
we do sub arena whether the sub arena

618
00:24:26,880 --> 00:24:31,050
gets cleared or not but I'm going to see

619
00:24:28,380 --> 00:24:32,220
does it yeah so I don't actually want to

620
00:24:31,049 --> 00:24:34,730
clear that anymore either

621
00:24:32,220 --> 00:24:37,190
oops

622
00:24:34,730 --> 00:24:40,849
all right so now I want to actually run

623
00:24:37,190 --> 00:24:43,640
let's see what happens here so there's

624
00:24:40,849 --> 00:24:46,339
our there's our standard stuff our we're

625
00:24:43,640 --> 00:24:47,540
basically totally fine so good deal

626
00:24:46,339 --> 00:24:50,689
everyone's happy

627
00:24:47,539 --> 00:24:53,420
everyone is smiling alright so now that

628
00:24:50,690 --> 00:24:55,190
we've got that under control and I know

629
00:24:53,420 --> 00:24:57,940
that I can put a bunch of data into

630
00:24:55,190 --> 00:25:01,610
those chunks the next step now is

631
00:24:57,940 --> 00:25:03,830
getting rid of I think the sword because

632
00:25:01,609 --> 00:25:05,479
I don't really that's a separate sort of

633
00:25:03,829 --> 00:25:07,759
thing that existed in a null space I

634
00:25:05,480 --> 00:25:11,839
have other ways that I'll probably think

635
00:25:07,759 --> 00:25:13,400
about and deal with those later and so

636
00:25:11,839 --> 00:25:15,289
I'm gonna just go ahead and get rid of

637
00:25:13,400 --> 00:25:17,300
those now because I don't even really

638
00:25:15,289 --> 00:25:18,920
want to consider those because they're

639
00:25:17,299 --> 00:25:20,539
really not necessary for this stage of

640
00:25:18,920 --> 00:25:21,890
the development so what I'm going to do

641
00:25:20,539 --> 00:25:23,659
is I'm going to take out the sword

642
00:25:21,890 --> 00:25:25,759
situation entirely

643
00:25:23,660 --> 00:25:28,880
so inside some region where we have this

644
00:25:25,759 --> 00:25:31,009
entity and in add this concept of the

645
00:25:28,880 --> 00:25:33,620
the sword thing in here where was it

646
00:25:31,009 --> 00:25:35,960
sword sword is going to go away goodbye

647
00:25:33,619 --> 00:25:37,759
sword and now all of the things that

648
00:25:35,960 --> 00:25:42,610
we're sword related are also going to go

649
00:25:37,759 --> 00:25:47,809
away those are just gone so goodbye

650
00:25:42,609 --> 00:25:49,759
goodbye and this this sort of creation

651
00:25:47,809 --> 00:25:52,369
of the sword this add sword nonsense

652
00:25:49,759 --> 00:25:53,750
this is all going away because of course

653
00:25:52,369 --> 00:25:56,029
our here doesn't have a sword anyway

654
00:25:53,750 --> 00:25:59,180
that was just an example we used a long

655
00:25:56,029 --> 00:26:01,220
time ago all right so I'm gonna search

656
00:25:59,180 --> 00:26:04,220
for sword in general and just you just

657
00:26:01,220 --> 00:26:06,769
excise it at the moment from the code

658
00:26:04,220 --> 00:26:09,440
base see what we've got here there is a

659
00:26:06,769 --> 00:26:10,910
sword collision and I don't know if

660
00:26:09,440 --> 00:26:13,400
we've got any more uses of the word

661
00:26:10,910 --> 00:26:14,990
sword we've got this concept of d sword

662
00:26:13,400 --> 00:26:17,030
B sword could stay cuz we're actually

663
00:26:14,990 --> 00:26:18,529
using that we just probably want to

664
00:26:17,029 --> 00:26:20,899
rename it to something other than B

665
00:26:18,529 --> 00:26:22,789
sword at some point so here is this

666
00:26:20,900 --> 00:26:27,920
nonsense here that's all going to go

667
00:26:22,789 --> 00:26:31,279
away goodbye and off we go alright so

668
00:26:27,920 --> 00:26:33,890
now we're still running okay at least it

669
00:26:31,279 --> 00:26:36,589
would appear our little new shrunken fat

670
00:26:33,890 --> 00:26:39,320
here I was there and we're all good so

671
00:26:36,589 --> 00:26:41,839
now I'm going to flip back and and

672
00:26:39,319 --> 00:26:45,019
actually do mmm the thing I was talking

673
00:26:41,839 --> 00:26:47,240
about with the with the low entities so

674
00:26:45,019 --> 00:26:48,339
here's that table of low entities where

675
00:26:47,240 --> 00:26:51,370
they're all stored

676
00:26:48,339 --> 00:26:53,199
in this array and so what I want to do

677
00:26:51,369 --> 00:26:56,319
now is move them out of that array and

678
00:26:53,200 --> 00:26:58,720
into the other system so the first thing

679
00:26:56,319 --> 00:27:00,730
I'm going to do is I'm just going to

680
00:26:58,720 --> 00:27:03,038
take that low entity I'm literally just

681
00:27:00,730 --> 00:27:05,679
gonna put the entities into those chunks

682
00:27:03,038 --> 00:27:07,869
just verbatim and that's gonna take a

683
00:27:05,679 --> 00:27:09,730
lot of doing right because I have to

684
00:27:07,869 --> 00:27:13,769
modify it in both the sim region and the

685
00:27:09,730 --> 00:27:16,630
creation stuff that we're actually doing

686
00:27:13,769 --> 00:27:18,690
in sort of the world mode if that makes

687
00:27:16,630 --> 00:27:22,059
sense so let's go ahead and delete that

688
00:27:18,690 --> 00:27:25,028
for for a moment and now we've got like

689
00:27:22,058 --> 00:27:26,500
a total you know we've got a we've got a

690
00:27:25,028 --> 00:27:28,450
total disaster on our hands we're gonna

691
00:27:26,500 --> 00:27:31,148
have to fix but that's fine that's what

692
00:27:28,450 --> 00:27:36,009
we wanted so now let's see what's going

693
00:27:31,148 --> 00:27:37,629
on here and and sort of clean everything

694
00:27:36,009 --> 00:27:39,369
up so the first thing that we need is in

695
00:27:37,630 --> 00:27:42,309
our sim region right when we're doing

696
00:27:39,369 --> 00:27:44,259
our simulation we need that hash table

697
00:27:42,308 --> 00:27:46,629
but that remaps things and in fact I

698
00:27:44,259 --> 00:27:50,220
guess now I think about it we already

699
00:27:46,630 --> 00:27:53,110
have that hash for mapping our ourselves

700
00:27:50,220 --> 00:27:56,589
when we when we sort of move things

701
00:27:53,109 --> 00:27:59,109
around I'm not wearing this to map

702
00:27:56,589 --> 00:28:00,849
things in the simulation set we already

703
00:27:59,109 --> 00:28:03,490
sort of had this hash here so I'm

704
00:28:00,849 --> 00:28:08,408
assuming that we actually use that let's

705
00:28:03,490 --> 00:28:10,599
see if that's actually true yeah so we

706
00:28:08,409 --> 00:28:13,778
have again edited by storage index right

707
00:28:10,599 --> 00:28:16,389
and we're actually already doing that so

708
00:28:13,778 --> 00:28:20,589
we're already we already have our hash

709
00:28:16,390 --> 00:28:22,210
function working which is pretty great

710
00:28:20,589 --> 00:28:24,339
so we don't even have to do that it's

711
00:28:22,210 --> 00:28:26,769
like we already sort of did a little bit

712
00:28:24,339 --> 00:28:30,759
of that work for us which is pretty

713
00:28:26,769 --> 00:28:32,589
great okay

714
00:28:30,759 --> 00:28:35,879
I'll be honest it's been so long I don't

715
00:28:32,589 --> 00:28:40,569
remember why we really needed that

716
00:28:35,880 --> 00:28:45,240
I guess because cemento T's and lo

717
00:28:40,569 --> 00:28:48,220
entities technically word the same thing

718
00:28:45,240 --> 00:28:49,778
so I guess it's just because I was

719
00:28:48,220 --> 00:28:51,730
always thinking I was gonna do this

720
00:28:49,778 --> 00:28:53,140
because I guess that's why we even did

721
00:28:51,730 --> 00:28:55,110
the copy because otherwise we could have

722
00:28:53,140 --> 00:28:58,809
avoided the copy

723
00:28:55,109 --> 00:29:01,469
all right so hey past me thank you for

724
00:28:58,808 --> 00:29:05,668
doing some extra work for future me

725
00:29:01,470 --> 00:29:07,669
that was nice of you very nice of you so

726
00:29:05,669 --> 00:29:09,929
anyway here we are at ludendi reference

727
00:29:07,669 --> 00:29:11,580
and this is obviously the place that's

728
00:29:09,929 --> 00:29:15,150
going to take a reference to andy and

729
00:29:11,579 --> 00:29:17,339
convert it you know to something that is

730
00:29:15,150 --> 00:29:19,409
a direct pointer to one of the simin

731
00:29:17,339 --> 00:29:21,269
indies so what we have to do now is we

732
00:29:19,409 --> 00:29:23,760
have to go ahead and make sure that this

733
00:29:21,269 --> 00:29:26,279
works properly now the main change that

734
00:29:23,759 --> 00:29:29,970
we're gonna make here is these loads

735
00:29:26,279 --> 00:29:31,829
used to pull like almost like a you know

736
00:29:29,970 --> 00:29:34,860
pulling a piece of string and unraveling

737
00:29:31,829 --> 00:29:38,009
a sweater right what we used to do here

738
00:29:34,859 --> 00:29:40,349
is if we didn't find the entity we would

739
00:29:38,009 --> 00:29:42,029
go get it out of low entity storage but

740
00:29:40,349 --> 00:29:44,369
from now on we don't want to do that

741
00:29:42,029 --> 00:29:45,808
anymore the rule is if you don't find

742
00:29:44,369 --> 00:29:48,119
the entity in the region then your

743
00:29:45,808 --> 00:29:49,788
pointer gets nulled right that's

744
00:29:48,119 --> 00:29:52,558
actually what's supposed to happen

745
00:29:49,788 --> 00:29:54,750
so our enemy references are now going to

746
00:29:52,558 --> 00:29:56,190
be things which basically say you have a

747
00:29:54,750 --> 00:29:58,950
reference to an entity it tells you

748
00:29:56,190 --> 00:30:01,620
uniquely what the entities ID is so if

749
00:29:58,950 --> 00:30:05,130
it is within your simulation region you

750
00:30:01,619 --> 00:30:11,658
can see it and access it but if it is

751
00:30:05,130 --> 00:30:11,659
not you can't make sense

752
00:30:16,089 --> 00:30:21,158
I hope it does anyway so here we are in

753
00:30:19,630 --> 00:30:23,890
load entity reference so the big change

754
00:30:21,159 --> 00:30:25,929
here is that we're not going to do this

755
00:30:23,890 --> 00:30:28,059
pull there's got gonna be any pull

756
00:30:25,929 --> 00:30:30,009
what's going to happen instead is we're

757
00:30:28,058 --> 00:30:33,609
just gonna have the same entity hash

758
00:30:30,009 --> 00:30:36,190
gets out of the hash what this index

759
00:30:33,609 --> 00:30:38,798
would correspond to and then it tries to

760
00:30:36,190 --> 00:30:40,900
grant get the pointer out of that now if

761
00:30:38,798 --> 00:30:43,058
the entry is null that we simply will

762
00:30:40,900 --> 00:30:47,890
set it to null and there just won't be

763
00:30:43,058 --> 00:30:49,359
any pointer set ok and that's it so that

764
00:30:47,890 --> 00:30:51,309
makes that easy it also means we don't

765
00:30:49,359 --> 00:30:53,769
have to pre declare identity anymore

766
00:30:51,308 --> 00:30:56,048
because this can't force identity to be

767
00:30:53,769 --> 00:30:57,369
added now here we are in our giant loop

768
00:30:56,048 --> 00:30:59,440
where these things kind of get pulled

769
00:30:57,369 --> 00:31:00,849
out and you can see here in the block

770
00:30:59,440 --> 00:31:03,940
we're pulling out the low in the index

771
00:31:00,849 --> 00:31:05,709
so we'll really all we have to do now is

772
00:31:03,940 --> 00:31:08,798
we just have to go ahead and say well

773
00:31:05,710 --> 00:31:11,019
instead of keeping entity indices let's

774
00:31:08,798 --> 00:31:13,109
just store the actual entities in here

775
00:31:11,019 --> 00:31:15,668
right because we have the loan entity

776
00:31:13,109 --> 00:31:19,808
structure there and what we can do is

777
00:31:15,669 --> 00:31:22,179
just say that that big data array is

778
00:31:19,808 --> 00:31:24,369
just going to keep those low entities in

779
00:31:22,179 --> 00:31:26,830
it right and now I don't really remember

780
00:31:24,369 --> 00:31:29,079
exactly how big a low entity is but it's

781
00:31:26,829 --> 00:31:31,329
pretty big unfortunately right and you

782
00:31:29,079 --> 00:31:32,528
can kind of see here if it's gonna have

783
00:31:31,329 --> 00:31:34,240
a simonetti in it because we haven't

784
00:31:32,528 --> 00:31:35,769
done any of the packing stuff you can

785
00:31:34,240 --> 00:31:36,970
see the destruct I mean I don't know how

786
00:31:35,769 --> 00:31:39,089
big it is but it looks like it's

787
00:31:36,970 --> 00:31:41,140
probably something that's I don't know

788
00:31:39,089 --> 00:31:44,648
you know that's probably that's probably

789
00:31:41,140 --> 00:31:46,330
a good you know that's probably a good 5

790
00:31:44,648 --> 00:31:48,398
to 12 bytes or something there you know

791
00:31:46,329 --> 00:31:49,720
that's that's that's big that's a that's

792
00:31:48,398 --> 00:31:51,089
a big way I don't know how big some of

793
00:31:49,720 --> 00:31:53,649
these are but that's that's pretty

794
00:31:51,089 --> 00:31:56,109
sizable right so you figure we can only

795
00:31:53,648 --> 00:31:57,729
keep about a hundred and you know 20 to

796
00:31:56,109 --> 00:31:59,589
200 of those in a chunk right now maybe

797
00:31:57,730 --> 00:32:02,169
less because again we're not doing

798
00:31:59,589 --> 00:32:04,808
anything smart with them and we kind of

799
00:32:02,169 --> 00:32:07,570
haven't gotten to that point yet so I

800
00:32:04,808 --> 00:32:09,250
don't know if this will work exactly as

801
00:32:07,569 --> 00:32:10,750
is we'll see what we hit an assertion

802
00:32:09,250 --> 00:32:14,038
but the first thing I'm going to do is

803
00:32:10,750 --> 00:32:17,319
not even try to think about expanding or

804
00:32:14,038 --> 00:32:19,720
compressing blocks at all on right out

805
00:32:17,319 --> 00:32:21,548
probably I'm just gonna go ahead and

806
00:32:19,720 --> 00:32:23,528
assume that we only use the first world

807
00:32:21,548 --> 00:32:25,029
block and then I'm gonna go ahead and

808
00:32:23,528 --> 00:32:27,579
upgrade it so that when we're doing

809
00:32:25,029 --> 00:32:28,509
write outs if we need to we'll we'll

810
00:32:27,579 --> 00:32:30,069
blow it out now the

811
00:32:28,509 --> 00:32:32,199
code doesn't have to change the read

812
00:32:30,069 --> 00:32:35,918
codes the same either way so that's all

813
00:32:32,199 --> 00:32:37,389
fine but the write code you know we will

814
00:32:35,919 --> 00:32:39,009
have to introduced sort of a recycle

815
00:32:37,388 --> 00:32:39,848
list there and that's gonna be in

816
00:32:39,009 --> 00:32:42,278
something but we want to think about

817
00:32:39,848 --> 00:32:43,628
little more so here's our code we say

818
00:32:42,278 --> 00:32:45,249
how many enemies there are in the block

819
00:32:43,628 --> 00:32:47,798
again we probably won't specify that

820
00:32:45,249 --> 00:32:49,749
eventually we'll unpack in a more direct

821
00:32:47,798 --> 00:32:52,538
fashion but for now that can so totally

822
00:32:49,749 --> 00:32:54,249
stay and so when we do low entity index

823
00:32:52,538 --> 00:32:55,569
here and do this block linear thing we

824
00:32:54,249 --> 00:32:57,729
can get rid of that the low ending the

825
00:32:55,569 --> 00:33:00,939
ax is no longer a thing right low entity

826
00:32:57,729 --> 00:33:02,769
index is not going to be there and so

827
00:33:00,940 --> 00:33:04,419
what we can do is say alright and we

828
00:33:02,769 --> 00:33:07,088
don't care about this non-spatial thing

829
00:33:04,419 --> 00:33:08,769
either until we actually load the thing

830
00:33:07,088 --> 00:33:11,469
in fact how were we what was happening

831
00:33:08,769 --> 00:33:13,989
here we're grabbing out the low entity

832
00:33:11,469 --> 00:33:15,999
this way where are we putting it it

833
00:33:13,989 --> 00:33:18,578
looks like we're passing it in here and

834
00:33:15,999 --> 00:33:20,199
we're calling this a Danity bit let me

835
00:33:18,578 --> 00:33:21,908
go look at that first I want to take a

836
00:33:20,199 --> 00:33:24,369
little bit of a look at that identity

837
00:33:21,909 --> 00:33:26,379
call and see what that's doing

838
00:33:24,368 --> 00:33:29,828
so identity is basically saying well

839
00:33:26,378 --> 00:33:33,398
okay if I was able to add one then chest

840
00:33:29,828 --> 00:33:36,459
it I guess set it whether it's updatable

841
00:33:33,398 --> 00:33:37,148
based on its its situation here and

842
00:33:36,459 --> 00:33:39,519
that's fine

843
00:33:37,148 --> 00:33:42,608
but let's take a look at that out of the

844
00:33:39,519 --> 00:33:49,269
row what's that doing so additi raw is

845
00:33:42,608 --> 00:33:53,259
looking to see whether this entity hmmm

846
00:33:49,269 --> 00:33:54,818
I guess we're just looking to place it

847
00:33:53,259 --> 00:33:58,709
in the hash at the appropriate location

848
00:33:54,818 --> 00:33:58,709
that's what it looks like to me

849
00:34:00,058 --> 00:34:09,048
yeah

850
00:34:02,710 --> 00:34:11,000
that looks like it so I think we might

851
00:34:09,048 --> 00:34:14,288
change the way this works a little bit

852
00:34:11,000 --> 00:34:17,510
right I'm gonna kind of keep it this way

853
00:34:14,289 --> 00:34:20,359
just so that things don't get too wonky

854
00:34:17,510 --> 00:34:22,639
but we're gonna probably change all of

855
00:34:20,358 --> 00:34:24,078
this actually to be a little bit more

856
00:34:22,639 --> 00:34:26,059
serious all right

857
00:34:24,079 --> 00:34:27,528
so what I'm gonna do here is I guess

858
00:34:26,059 --> 00:34:30,379
I'll keep this working the way that it

859
00:34:27,528 --> 00:34:34,789
was by basically I'm just gonna cast

860
00:34:30,378 --> 00:34:38,898
right to the low entity star I'm gonna

861
00:34:34,789 --> 00:34:40,609
cast that data block that's inside you

862
00:34:38,898 --> 00:34:44,088
know this system right that's the data

863
00:34:40,608 --> 00:34:46,190
block there I'm gonna take that what did

864
00:34:44,088 --> 00:34:47,509
I call it entity data I think I'm gonna

865
00:34:46,190 --> 00:34:49,369
take that and assume it's array of low

866
00:34:47,510 --> 00:34:51,200
entities and just get the Edit II index

867
00:34:49,369 --> 00:34:53,899
off of it right by looking exactly in

868
00:34:51,199 --> 00:34:55,578
the entity in fact this now is an actual

869
00:34:53,898 --> 00:34:58,368
entity index not an index index it's

870
00:34:55,579 --> 00:35:00,920
actually the index inside the enemy

871
00:34:58,369 --> 00:35:03,260
struck right let me get that out and

872
00:35:00,920 --> 00:35:05,630
then I'm gonna just continue as as is

873
00:35:03,260 --> 00:35:10,010
right so we're gonna use that that data

874
00:35:05,630 --> 00:35:11,720
directly let's go ahead and and in fact

875
00:35:10,010 --> 00:35:13,460
you know what this this doesn't have to

876
00:35:11,719 --> 00:35:15,469
be here at all right that's that's gone

877
00:35:13,460 --> 00:35:18,170
so it's really just that and that pulls

878
00:35:15,469 --> 00:35:20,509
out that low entity pointer and so the

879
00:35:18,170 --> 00:35:23,088
low entity index here I don't really

880
00:35:20,510 --> 00:35:25,819
know what that's used for because what

881
00:35:23,088 --> 00:35:26,838
we want is that storage index which is

882
00:35:25,818 --> 00:35:30,679
good enough to be something that's

883
00:35:26,838 --> 00:35:33,798
inside the low entity as an actual thing

884
00:35:30,679 --> 00:35:36,409
right as a let's take a look here inside

885
00:35:33,798 --> 00:35:38,358
some region this this storage index is

886
00:35:36,409 --> 00:35:40,639
actually the thing that we want and so

887
00:35:38,358 --> 00:35:43,400
I'm just gonna pass that and use that

888
00:35:40,639 --> 00:35:45,798
everywhere for whose indexes who's right

889
00:35:43,400 --> 00:35:47,180
so we're just gonna pass that this way

890
00:35:45,798 --> 00:35:48,528
does that make sense

891
00:35:47,179 --> 00:35:51,409
but that's gonna probably go away a

892
00:35:48,528 --> 00:35:52,309
little bit in a second here oops and I

893
00:35:51,409 --> 00:35:56,808
didn't want low

894
00:35:52,309 --> 00:35:58,700
I just want soon okay so now we come in

895
00:35:56,809 --> 00:35:59,839
here let's see where we're at

896
00:35:58,699 --> 00:36:01,368
we've got low any of these is not a

897
00:35:59,838 --> 00:36:01,818
member of game railroad you're right it

898
00:36:01,369 --> 00:36:04,250
isn't

899
00:36:01,818 --> 00:36:06,170
and so this stored bit here is not

900
00:36:04,250 --> 00:36:08,389
actually what the way we want to do this

901
00:36:06,170 --> 00:36:10,548
what we want to do is repack these

902
00:36:08,389 --> 00:36:13,429
entities into those world blocks right

903
00:36:10,548 --> 00:36:15,889
now fortunately for me I can super

904
00:36:13,429 --> 00:36:18,199
double plus extra cheat

905
00:36:15,889 --> 00:36:20,329
in here a little bit I suppose well no I

906
00:36:18,199 --> 00:36:22,039
guess I can so I've got to actually do

907
00:36:20,329 --> 00:36:23,449
this for real because when things move

908
00:36:22,039 --> 00:36:25,730
around they're gonna change where their

909
00:36:23,449 --> 00:36:28,489
locations are I guess if I don't move

910
00:36:25,730 --> 00:36:31,070
anything then it would be okay so I

911
00:36:28,489 --> 00:36:33,159
could in theory try to run without doing

912
00:36:31,070 --> 00:36:35,450
this code first and just see what breaks

913
00:36:33,159 --> 00:36:44,920
which would basically be something like

914
00:36:35,449 --> 00:36:44,919
this right you see what I'm saying here

915
00:36:47,829 --> 00:36:52,929
hopefully that makes some sense yeah

916
00:36:55,119 --> 00:36:59,659
yeah and in fact you know there's gonna

917
00:36:57,320 --> 00:37:01,250
be this is I'm really liking this so far

918
00:36:59,659 --> 00:37:02,539
this is I'm thinking of all these nice

919
00:37:01,250 --> 00:37:04,039
things that are gonna happen I think

920
00:37:02,539 --> 00:37:06,940
eventually maybe that's only my wishful

921
00:37:04,039 --> 00:37:09,769
thinking but anyway so so point being

922
00:37:06,940 --> 00:37:12,409
when we add stuff as is the case here

923
00:37:09,769 --> 00:37:14,630
what we have to do now is we have to

924
00:37:12,409 --> 00:37:16,129
start when we because that's the same

925
00:37:14,630 --> 00:37:17,090
region stuff and it's you know like we

926
00:37:16,130 --> 00:37:19,519
said we gotta kind of do some more

927
00:37:17,090 --> 00:37:21,079
passes over it but here out in the

928
00:37:19,519 --> 00:37:22,670
regular game code when we're actually

929
00:37:21,079 --> 00:37:27,069
adding things now we have to do is make

930
00:37:22,670 --> 00:37:29,119
sure we actually add them to basically

931
00:37:27,070 --> 00:37:31,850
we have to add them to the actual

932
00:37:29,119 --> 00:37:33,949
physical location where they exist if

933
00:37:31,849 --> 00:37:36,529
that makes sense so what we want to do

934
00:37:33,949 --> 00:37:39,710
here is say okay let's create a low

935
00:37:36,530 --> 00:37:42,110
entity instead of doing it this way what

936
00:37:39,710 --> 00:37:44,809
we want to do instead is is basically

937
00:37:42,110 --> 00:37:48,650
create a little entity and then pack it

938
00:37:44,809 --> 00:37:51,049
into its its actual position location

939
00:37:48,650 --> 00:37:55,309
right that's how we actually want this

940
00:37:51,050 --> 00:38:00,620
code to work and so we want some way of

941
00:37:55,309 --> 00:38:05,809
of getting a low entity description like

942
00:38:00,619 --> 00:38:07,849
an actual unpack well I mean I guess I

943
00:38:05,809 --> 00:38:10,099
should say I'm assuming us I won't do it

944
00:38:07,849 --> 00:38:12,139
technically I suppose if we want to

945
00:38:10,099 --> 00:38:14,150
create an entity we could just stream

946
00:38:12,139 --> 00:38:16,609
out exactly the right compressed bytes

947
00:38:14,150 --> 00:38:18,740
to create that enemy which might be good

948
00:38:16,610 --> 00:38:20,150
as well but I kind of feel like we might

949
00:38:18,739 --> 00:38:22,219
want to just go through one path for

950
00:38:20,150 --> 00:38:24,200
packing everything at first it seems

951
00:38:22,219 --> 00:38:25,459
like a better idea to me just you know

952
00:38:24,199 --> 00:38:27,529
the brain why is that

953
00:38:25,460 --> 00:38:30,548
I'm thinking that simplifies things a

954
00:38:27,530 --> 00:38:33,710
little bit I don't know that's my

955
00:38:30,548 --> 00:38:35,449
assumption if that makes sense so what I

956
00:38:33,710 --> 00:38:37,699
want to do here is kind of I don't

957
00:38:35,449 --> 00:38:38,598
really want this to work the way that

958
00:38:37,699 --> 00:38:42,348
it's working at all

959
00:38:38,599 --> 00:38:44,930
so in here where we do ad low entity you

960
00:38:42,349 --> 00:38:46,338
can see that we kind of do that in a

961
00:38:44,929 --> 00:38:48,379
bunch of places here where we kind of

962
00:38:46,338 --> 00:38:50,000
have this sort of cascading thing what I

963
00:38:48,380 --> 00:38:52,039
want to do is I want to change these to

964
00:38:50,000 --> 00:38:55,130
a thing which basically does like a

965
00:38:52,039 --> 00:38:57,380
beginning end entity creation so you

966
00:38:55,130 --> 00:38:59,539
begin entity creation you do some work

967
00:38:57,380 --> 00:39:01,220
on the env that's trying to create and

968
00:38:59,539 --> 00:39:03,259
then you end an occasion and it packs it

969
00:39:01,219 --> 00:39:06,169
right that's what I actually want to

970
00:39:03,259 --> 00:39:08,480
have happen here so what I'm gonna do is

971
00:39:06,170 --> 00:39:11,358
I'm gonna change this to be more like

972
00:39:08,480 --> 00:39:13,608
you know begin low entity in it and it

973
00:39:11,358 --> 00:39:17,739
passes back one of these or whatever and

974
00:39:13,608 --> 00:39:17,739
then there's an end low in ax be

975
00:39:19,389 --> 00:39:28,009
something like this and this will be

976
00:39:23,268 --> 00:39:32,479
like a low end 'ti or entity creation or

977
00:39:28,009 --> 00:39:34,670
something like this right I that's what

978
00:39:32,480 --> 00:39:37,039
I think I actually want to do now this

979
00:39:34,670 --> 00:39:40,009
is gonna be full banana cakes at the

980
00:39:37,039 --> 00:39:42,140
moment because probably the weight you

981
00:39:40,009 --> 00:39:43,880
know we could do this on the stack or

982
00:39:42,139 --> 00:39:45,379
something I don't know there's ways we

983
00:39:43,880 --> 00:39:47,240
could do this full big net cake slice I

984
00:39:45,380 --> 00:39:49,700
guess I won't do it full banana cakes at

985
00:39:47,239 --> 00:39:51,048
the moment instead what I'll do is I'll

986
00:39:49,699 --> 00:39:54,618
still do something that's actually not

987
00:39:51,048 --> 00:39:57,259
not super great but it is not it's it's

988
00:39:54,619 --> 00:39:58,640
not the best for threading basically but

989
00:39:57,259 --> 00:40:00,108
you know I just don't know what our

990
00:39:58,639 --> 00:40:01,219
speed profile is gonna be like and I

991
00:40:00,108 --> 00:40:02,598
don't know whether we'll have multiple

992
00:40:01,219 --> 00:40:04,788
threads adding things yet or any of that

993
00:40:02,599 --> 00:40:06,289
stuff so for right now since its wrapped

994
00:40:04,789 --> 00:40:08,028
and I can change it to something else in

995
00:40:06,289 --> 00:40:10,579
the future I'm just gonna say that in

996
00:40:08,028 --> 00:40:13,900
here we have the concept of a low entity

997
00:40:10,579 --> 00:40:17,450
and this is just the creation buffer

998
00:40:13,900 --> 00:40:20,660
okay and what happens is anytime you go

999
00:40:17,449 --> 00:40:25,189
to create one of these things the the

1000
00:40:20,659 --> 00:40:27,078
result here is going to be such that you

1001
00:40:25,190 --> 00:40:29,380
get a pointer back up to that creation

1002
00:40:27,079 --> 00:40:29,380
buffer

1003
00:40:32,179 --> 00:40:36,299
right and I can even put a little thing

1004
00:40:34,800 --> 00:40:52,440
in here that's like creation buffer

1005
00:40:36,300 --> 00:40:55,320
locked if I want to catch bugs okay so

1006
00:40:52,440 --> 00:40:56,849
in here I've got this concept of that

1007
00:40:55,320 --> 00:41:00,570
lock and so what I'm going to do is I'm

1008
00:40:56,849 --> 00:41:02,639
going to assert that when I come here to

1009
00:41:00,570 --> 00:41:04,860
use the creation buffer I'm gonna cert

1010
00:41:02,639 --> 00:41:07,710
that that creation buffer is not blocked

1011
00:41:04,860 --> 00:41:09,630
right nobody else has it and then when I

1012
00:41:07,710 --> 00:41:11,909
finish I'm going to assert that it is

1013
00:41:09,630 --> 00:41:13,950
locked and that way I can just tell that

1014
00:41:11,909 --> 00:41:15,000
you know no two people are using this at

1015
00:41:13,949 --> 00:41:16,799
once because right now I haven't

1016
00:41:15,000 --> 00:41:18,690
designed it to support that concept and

1017
00:41:16,800 --> 00:41:20,970
so if in the future I forget what I was

1018
00:41:18,690 --> 00:41:22,019
doing and I do that I want to have an

1019
00:41:20,969 --> 00:41:23,939
assertion that comes up unless we know

1020
00:41:22,019 --> 00:41:26,250
hey that is not what you're supposed to

1021
00:41:23,940 --> 00:41:27,389
do so I'm gonna start the that creation

1022
00:41:26,250 --> 00:41:29,940
buffers locked I'm going to create one

1023
00:41:27,389 --> 00:41:31,650
of these energy creation results and I'm

1024
00:41:29,940 --> 00:41:34,619
going to go ahead and assume that we've

1025
00:41:31,650 --> 00:41:38,309
got sort of this this storage index

1026
00:41:34,619 --> 00:41:40,529
concept here that says where these folks

1027
00:41:38,309 --> 00:41:42,269
are now previously we did this sort of

1028
00:41:40,530 --> 00:41:43,590
low index thing I don't think that's

1029
00:41:42,269 --> 00:41:45,690
necessary because our sim region has

1030
00:41:43,590 --> 00:41:47,130
storage index in it and to be honest

1031
00:41:45,690 --> 00:41:49,289
with you I don't if you look at what

1032
00:41:47,130 --> 00:41:54,030
happens here it's a world position P and

1033
00:41:49,289 --> 00:41:57,509
a sim entity same thing and I don't

1034
00:41:54,030 --> 00:41:58,590
really know to what extent we need to

1035
00:41:57,510 --> 00:42:01,080
worry about that anymore because we're

1036
00:41:58,590 --> 00:42:03,960
not really doing again like I said we're

1037
00:42:01,079 --> 00:42:06,449
gonna be doing a compression step so at

1038
00:42:03,960 --> 00:42:08,940
the moment this world chunk old chunk

1039
00:42:06,449 --> 00:42:10,469
thing I like we could just pack the

1040
00:42:08,940 --> 00:42:12,300
stuff in here and stop thinking about

1041
00:42:10,469 --> 00:42:13,949
low entities at all right there would

1042
00:42:12,300 --> 00:42:15,269
only be semaine of these or rather I

1043
00:42:13,949 --> 00:42:17,219
should say they're only the entity

1044
00:42:15,269 --> 00:42:19,920
there's no concept of anything else

1045
00:42:17,219 --> 00:42:21,539
it would just be entity right and so we

1046
00:42:19,920 --> 00:42:22,980
could rename this from sim entity to

1047
00:42:21,539 --> 00:42:24,119
just anity if we wanted to because there

1048
00:42:22,980 --> 00:42:25,579
is no other type of any there's just a

1049
00:42:24,119 --> 00:42:28,230
sim initi and a packed

1050
00:42:25,579 --> 00:42:30,679
you know version that it isn't a struct

1051
00:42:28,230 --> 00:42:33,389
so you couldn't access it anyway right

1052
00:42:30,679 --> 00:42:37,409
so what I might do here is just say I

1053
00:42:33,389 --> 00:42:38,789
forget about all that right that's let's

1054
00:42:37,409 --> 00:42:40,409
just forget about this whole concept

1055
00:42:38,789 --> 00:42:42,090
here where we pass the lowness or any of

1056
00:42:40,409 --> 00:42:43,449
that stuff we don't care about that at

1057
00:42:42,090 --> 00:42:45,309
all

1058
00:42:43,449 --> 00:42:47,139
because really all we have is just the

1059
00:42:45,309 --> 00:42:50,139
low entity right that's all that there

1060
00:42:47,139 --> 00:42:52,569
actually is and so in some sense I could

1061
00:42:50,139 --> 00:42:54,609
say well there's any creation thing that

1062
00:42:52,570 --> 00:42:56,680
doesn't really even need to be a block

1063
00:42:54,610 --> 00:42:58,210
block like that I could just make it so

1064
00:42:56,679 --> 00:43:00,099
that we pass back a pointer to the low

1065
00:42:58,210 --> 00:43:01,720
entity and then when we're done with it

1066
00:43:00,099 --> 00:43:03,969
when we're when we're finished with that

1067
00:43:01,719 --> 00:43:08,199
low and anything then weari come then

1068
00:43:03,969 --> 00:43:10,809
it'll compress right here and so all we

1069
00:43:08,199 --> 00:43:12,699
need to do to change this to having only

1070
00:43:10,809 --> 00:43:14,199
one entity is eventually will change

1071
00:43:12,699 --> 00:43:15,699
these from Goodloe entity to actually

1072
00:43:14,199 --> 00:43:17,649
just begin entity and will will strip

1073
00:43:15,699 --> 00:43:19,750
all that out move the world location in

1074
00:43:17,650 --> 00:43:22,780
and it'll be beautiful and wonderful all

1075
00:43:19,750 --> 00:43:24,070
right so assuming that this is what

1076
00:43:22,780 --> 00:43:27,040
we're doing where we do the low entity

1077
00:43:24,070 --> 00:43:28,809
here we do our assertion that their

1078
00:43:27,039 --> 00:43:30,489
creation buffer is not locked we then

1079
00:43:28,809 --> 00:43:32,340
take the lock on the creation buffer and

1080
00:43:30,489 --> 00:43:34,989
again this is purely for debugging

1081
00:43:32,340 --> 00:43:37,930
doesn't do anything else it's just for

1082
00:43:34,989 --> 00:43:40,629
debugging then we come in here and say

1083
00:43:37,929 --> 00:43:44,019
all right let's go ahead and get one of

1084
00:43:40,630 --> 00:43:46,329
these low entities by taking the

1085
00:43:44,019 --> 00:43:50,050
creation buffer as the temporary place

1086
00:43:46,329 --> 00:43:53,469
where it's going to go right and here's

1087
00:43:50,050 --> 00:43:55,539
the the result there we go we don't care

1088
00:43:53,469 --> 00:43:58,149
about any of this stuff at all this is

1089
00:43:55,539 --> 00:44:03,159
no longer relevant and so in here in our

1090
00:43:58,150 --> 00:44:05,559
sin storage index we're gonna do that

1091
00:44:03,159 --> 00:44:08,049
sort of entity we now need that sort of

1092
00:44:05,559 --> 00:44:11,380
concept of a storage ID that's unique

1093
00:44:08,050 --> 00:44:14,050
right and there are some things that we

1094
00:44:11,380 --> 00:44:16,030
have to worry about cure that you know

1095
00:44:14,050 --> 00:44:20,500
we're gonna have to reckon with at some

1096
00:44:16,030 --> 00:44:22,570
point and I'm not exactly sure how we

1097
00:44:20,500 --> 00:44:23,889
want to handle them we'll see when we

1098
00:44:22,570 --> 00:44:27,490
get to a place where they're a little

1099
00:44:23,889 --> 00:44:30,759
bit more relevant but basically if we

1100
00:44:27,489 --> 00:44:33,099
create new entities and destroy old

1101
00:44:30,760 --> 00:44:37,300
entities we will eventually run out of

1102
00:44:33,099 --> 00:44:40,059
unique IDs right for after four billion

1103
00:44:37,300 --> 00:44:44,769
will run out and wrap and that would be

1104
00:44:40,059 --> 00:44:51,340
bad right so here there's a u32 that's

1105
00:44:44,769 --> 00:44:53,860
like the next available storage index

1106
00:44:51,340 --> 00:44:56,079
and we could make this a 64-bit

1107
00:44:53,860 --> 00:44:57,200
identifier if we wanted to and then it

1108
00:44:56,079 --> 00:44:59,420
never would

1109
00:44:57,199 --> 00:45:02,960
but we might want to think about how

1110
00:44:59,420 --> 00:45:04,220
we're gonna do this exactly and and sort

1111
00:45:02,960 --> 00:45:06,230
of upgrade that in the future so I'm

1112
00:45:04,219 --> 00:45:09,529
gonna put it to do here as well

1113
00:45:06,230 --> 00:45:12,500
worried about this wrapping free list

1114
00:45:09,530 --> 00:45:15,200
for IDs where we might actually try to

1115
00:45:12,500 --> 00:45:17,539
recycle free IDs and so that this is not

1116
00:45:15,199 --> 00:45:21,379
just a thing that monotonically

1117
00:45:17,539 --> 00:45:24,380
increases if that makes sense all right

1118
00:45:21,380 --> 00:45:28,599
so here we go with my begin low entity

1119
00:45:24,380 --> 00:45:32,119
situation I'm gonna go in here and say

1120
00:45:28,599 --> 00:45:34,759
VIPs my results in storage index is

1121
00:45:32,119 --> 00:45:39,529
going to be whatever this next available

1122
00:45:34,760 --> 00:45:43,510
storage index is and maybe I'll call

1123
00:45:39,530 --> 00:45:43,510
this next available energy storage index

1124
00:45:43,869 --> 00:45:51,259
and I want that to be one so if there

1125
00:45:47,750 --> 00:45:53,210
have never been any initialized or I

1126
00:45:51,260 --> 00:45:59,530
guess I should say instead of that I'll

1127
00:45:53,210 --> 00:46:02,900
say like last use entity storage index

1128
00:45:59,530 --> 00:46:04,280
and that way clear to zero will

1129
00:46:02,900 --> 00:46:06,410
initialize it properly and I just

1130
00:46:04,280 --> 00:46:07,490
increment it before storing it right so

1131
00:46:06,409 --> 00:46:09,500
there's it storage of dicks and that

1132
00:46:07,489 --> 00:46:10,909
leaves zero as a whole so that people

1133
00:46:09,500 --> 00:46:14,150
can use zero to say I don't I'm not

1134
00:46:10,909 --> 00:46:16,909
referencing any entity right so we don't

1135
00:46:14,150 --> 00:46:18,680
need this anymore we just if we want to

1136
00:46:16,909 --> 00:46:23,389
clear this thing that we would have to

1137
00:46:18,679 --> 00:46:27,829
do a zero struct on it so there it is

1138
00:46:23,389 --> 00:46:32,929
and I'm gonna do what to do here worry

1139
00:46:27,829 --> 00:46:38,809
about this taking a while once the

1140
00:46:32,929 --> 00:46:40,399
entities are large sparse clear and then

1141
00:46:38,809 --> 00:46:42,590
we've got this stuff that sets up the

1142
00:46:40,400 --> 00:46:44,990
basics so we don't need entity low

1143
00:46:42,590 --> 00:46:48,470
anymore really because just result but

1144
00:46:44,989 --> 00:46:50,449
I'll call it that for now just to avoid

1145
00:46:48,469 --> 00:46:54,049
changing that code since we're going to

1146
00:46:50,449 --> 00:46:56,299
change it all anyway so there's my enemy

1147
00:46:54,050 --> 00:47:02,530
low stuff that we this stuff can all

1148
00:46:56,300 --> 00:47:02,530
sort of stay the same right temporarily

1149
00:47:06,000 --> 00:47:11,079
but we're gonna have to we're gonna have

1150
00:47:08,380 --> 00:47:14,380
to obviously well you know what

1151
00:47:11,079 --> 00:47:17,380
no really that is gonna go down here so

1152
00:47:14,380 --> 00:47:20,440
anyway here we go so we set all this

1153
00:47:17,380 --> 00:47:23,650
stuff up the entity position P that is

1154
00:47:20,440 --> 00:47:26,079
going to go in here the ad lo entity

1155
00:47:23,650 --> 00:47:28,539
result goes away

1156
00:47:26,079 --> 00:47:29,799
and oh hey look do we need to begin end

1157
00:47:28,539 --> 00:47:31,150
paradigm for ending it so that they can

1158
00:47:29,800 --> 00:47:34,769
be brought into the main high set and

1159
00:47:31,150 --> 00:47:37,570
then added as its yeah hey guess what

1160
00:47:34,769 --> 00:47:38,829
all to do is eventually get done even if

1161
00:47:37,570 --> 00:47:40,630
you don't remember the two dues because

1162
00:47:38,829 --> 00:47:41,769
hey it's like you were going to do that

1163
00:47:40,630 --> 00:47:44,200
that's why you put it to do in there

1164
00:47:41,769 --> 00:47:46,269
it's kind of funny anyway so here's

1165
00:47:44,199 --> 00:47:48,339
Enslow entity this is gonna Pat take the

1166
00:47:46,269 --> 00:47:50,590
entity that's getting ended obviously

1167
00:47:48,340 --> 00:47:53,260
and what it needs to do is it needs to

1168
00:47:50,590 --> 00:47:55,630
actually pack the entity into the

1169
00:47:53,260 --> 00:47:58,120
correct world chunk right into wherever

1170
00:47:55,630 --> 00:48:00,190
that needs to act it to be so I'm just

1171
00:47:58,119 --> 00:48:07,839
gonna introduce a function here called

1172
00:48:00,190 --> 00:48:10,059
pack entity into chunk and that's gonna

1173
00:48:07,840 --> 00:48:12,519
take the entity and compress it down at

1174
00:48:10,059 --> 00:48:14,739
the location where it currently exists

1175
00:48:12,519 --> 00:48:17,289
now obviously since these are stored in

1176
00:48:14,739 --> 00:48:20,979
there that that location P is stored in

1177
00:48:17,289 --> 00:48:21,820
there I don't really need to passing

1178
00:48:20,980 --> 00:48:23,230
this stuff anymore

1179
00:48:21,820 --> 00:48:24,760
and I certainly don't need to pass the

1180
00:48:23,230 --> 00:48:27,010
entity index because there is no such

1181
00:48:24,760 --> 00:48:28,540
thing the storage index is used for hash

1182
00:48:27,010 --> 00:48:31,000
lookups but it's not necessary for

1183
00:48:28,539 --> 00:48:33,039
anybody else so here's the pack entity

1184
00:48:31,000 --> 00:48:35,500
into chunk code and we've got this

1185
00:48:33,039 --> 00:48:38,980
entity low here so I'm gonna go ahead

1186
00:48:35,500 --> 00:48:40,360
and and just leave it like that and say

1187
00:48:38,980 --> 00:48:43,119
that this is a new function that's going

1188
00:48:40,360 --> 00:48:45,430
to happen okay

1189
00:48:43,119 --> 00:48:47,230
deleting low entities at the moment is

1190
00:48:45,429 --> 00:48:49,629
not something that's ever going to exist

1191
00:48:47,230 --> 00:48:51,190
here that's not a thing anymore the

1192
00:48:49,630 --> 00:48:52,809
reason for that is you can imagine right

1193
00:48:51,190 --> 00:48:56,260
now how this is gonna happen if we

1194
00:48:52,809 --> 00:48:59,170
always do a stream where we load in up

1195
00:48:56,260 --> 00:49:02,230
and then stream out for every sim cycle

1196
00:48:59,170 --> 00:49:04,150
all will do you just don't stream out

1197
00:49:02,230 --> 00:49:05,800
anyone who got deleted so we don't need

1198
00:49:04,150 --> 00:49:07,720
a deletion strategy anymore

1199
00:49:05,800 --> 00:49:09,760
we just don't stream them out anymore

1200
00:49:07,719 --> 00:49:11,529
they come in and then oops they never

1201
00:49:09,760 --> 00:49:12,940
get streamed out so they'll just be a

1202
00:49:11,530 --> 00:49:14,200
marker that's like this entity got

1203
00:49:12,940 --> 00:49:15,159
killed or removed

1204
00:49:14,199 --> 00:49:21,489
and then doesn't get streamed out

1205
00:49:15,159 --> 00:49:22,210
anymore okay uh let's see lo not much

1206
00:49:21,489 --> 00:49:26,019
time left

1207
00:49:22,210 --> 00:49:28,000
unfortunately let's see and lo entities

1208
00:49:26,019 --> 00:49:36,869
gonna have to take the world mode

1209
00:49:28,000 --> 00:49:36,869
obviously so and entity lo oh nice

1210
00:49:37,710 --> 00:49:41,889
there we go

1211
00:49:39,300 --> 00:49:44,170
so pack entity into chunk we need to

1212
00:49:41,889 --> 00:49:49,299
write and for the moment I'll just

1213
00:49:44,170 --> 00:49:53,380
internal it here right but I won't

1214
00:49:49,300 --> 00:49:54,700
actually implement it do we have a not

1215
00:49:53,380 --> 00:49:56,800
implemented I don't even remember if we

1216
00:49:54,699 --> 00:49:59,469
ever made one of those so pack entity

1217
00:49:56,800 --> 00:50:01,050
into chunk I don't know what that's

1218
00:49:59,469 --> 00:50:07,299
going to take probably just the world

1219
00:50:01,050 --> 00:50:11,019
I'm thinking and oops Dennis already got

1220
00:50:07,300 --> 00:50:19,930
that probably just the world and the

1221
00:50:11,019 --> 00:50:20,909
entity so we don't have a not

1222
00:50:19,929 --> 00:50:29,828
implemented huh

1223
00:50:20,909 --> 00:50:32,639
too bad I often define a macro that's

1224
00:50:29,829 --> 00:50:34,810
like not implemented which just asserts

1225
00:50:32,639 --> 00:50:38,679
it's like if you got to this code you're

1226
00:50:34,809 --> 00:50:40,809
sad because nobody wrote it so missing

1227
00:50:38,679 --> 00:50:43,809
semicolon before identifier add grounded

1228
00:50:40,809 --> 00:50:45,880
entity that is true so this is just

1229
00:50:43,809 --> 00:50:51,039
gonna be exactly the same thing

1230
00:50:45,880 --> 00:50:54,660
essentially it's just a pass-through

1231
00:50:51,039 --> 00:50:54,659
that does a little bit of extra work

1232
00:50:54,989 --> 00:50:58,259
there we go

1233
00:50:58,760 --> 00:51:11,030
and world bow type add low entity is

1234
00:51:04,250 --> 00:51:13,760
peak in their entity entity here's an ad

1235
00:51:11,030 --> 00:51:15,440
grounded entity or I should say is now

1236
00:51:13,760 --> 00:51:17,480
begin grounded entity right because I

1237
00:51:15,440 --> 00:51:19,159
don't know is there any such thing as

1238
00:51:17,480 --> 00:51:21,079
add ground an entity that isn't called

1239
00:51:19,159 --> 00:51:24,379
from inside somebody who edit the entity

1240
00:51:21,079 --> 00:51:27,440
right I'm assuming the answer is no but

1241
00:51:24,380 --> 00:51:29,720
don't really know and it's not so that's

1242
00:51:27,440 --> 00:51:33,858
good so this is really begin grab that

1243
00:51:29,719 --> 00:51:35,379
entity and not to go and I'm just going

1244
00:51:33,858 --> 00:51:40,130
to call this identity actually for now

1245
00:51:35,380 --> 00:51:45,230
okay so there's our return of the entity

1246
00:51:40,130 --> 00:51:48,829
hoops which is wrong because it needs a

1247
00:51:45,230 --> 00:51:51,500
pointer here is where we start to

1248
00:51:48,829 --> 00:51:56,090
actually use this stuff so here we have

1249
00:51:51,500 --> 00:51:57,889
to do a low end of the entity we're just

1250
00:51:56,090 --> 00:52:01,400
going to begin grab it under the on it

1251
00:51:57,889 --> 00:52:06,949
and then we're gonna do and entity and

1252
00:52:01,400 --> 00:52:12,230
that'll be it right we're gonna come

1253
00:52:06,949 --> 00:52:17,299
through here and add wall so now when

1254
00:52:12,230 --> 00:52:19,280
you do something like add wall we really

1255
00:52:17,300 --> 00:52:21,050
if you're the only thing that you can do

1256
00:52:19,280 --> 00:52:23,450
with these when they get returned and

1257
00:52:21,050 --> 00:52:25,940
I'm gonna look to see what anyone does

1258
00:52:23,449 --> 00:52:27,139
do with them I'm gonna see if anyone

1259
00:52:25,940 --> 00:52:29,150
needs stuff back

1260
00:52:27,139 --> 00:52:30,469
so for now when you add stuff I'm not

1261
00:52:29,150 --> 00:52:33,260
going to return anything but we could

1262
00:52:30,469 --> 00:52:35,750
return the storage index if we wanted to

1263
00:52:33,260 --> 00:52:38,270
right but I'm gonna get rid of those

1264
00:52:35,750 --> 00:52:42,039
temporarily for the ones we don't care

1265
00:52:38,269 --> 00:52:44,599
about right because that because I can

1266
00:52:42,039 --> 00:52:47,590
because I will and we'll worry about

1267
00:52:44,599 --> 00:52:51,259
that later so here we've added you know

1268
00:52:47,590 --> 00:52:54,559
the entity and we wanted to add flags to

1269
00:52:51,260 --> 00:52:58,010
it so then what I'm gonna do is just end

1270
00:52:54,559 --> 00:53:02,299
it here and now we've added that wall

1271
00:52:58,010 --> 00:53:05,690
exactly as before add grounded entity in

1272
00:53:02,300 --> 00:53:08,320
this case is been changed to begin

1273
00:53:05,690 --> 00:53:08,320
grounded entity

1274
00:53:08,780 --> 00:53:13,130
and let's see low is undeclared

1275
00:53:11,269 --> 00:53:18,650
identifier that's true because it's

1276
00:53:13,130 --> 00:53:20,630
empty add low entity results again I

1277
00:53:18,650 --> 00:53:23,289
think I've got a few minutes left but I

1278
00:53:20,630 --> 00:53:25,940
started like five minutes later so I

1279
00:53:23,289 --> 00:53:30,710
remember correctly so I'm gonna go right

1280
00:53:25,940 --> 00:53:32,480
up till the end and again this is really

1281
00:53:30,710 --> 00:53:33,920
just mechanical edits here right I mean

1282
00:53:32,480 --> 00:53:35,630
you can see what I'm doing it's not

1283
00:53:33,920 --> 00:53:37,039
mysterious I'm just doing the things

1284
00:53:35,630 --> 00:53:42,260
that I need to do just kind of maneuver

1285
00:53:37,039 --> 00:53:46,099
this into place let's see

1286
00:53:42,260 --> 00:53:49,580
okay so add player I don't really know

1287
00:53:46,099 --> 00:53:52,880
that might require some degree yeah you

1288
00:53:49,579 --> 00:53:55,519
can see that it wants to to know that

1289
00:53:52,880 --> 00:53:58,730
information so this is going to have to

1290
00:53:55,519 --> 00:54:00,679
take an entity index back and so what

1291
00:53:58,730 --> 00:54:03,260
I'm going to do here is one of the

1292
00:54:00,679 --> 00:54:05,299
problems I think that we had before sort

1293
00:54:03,260 --> 00:54:07,880
of that we just didn't know about is we

1294
00:54:05,300 --> 00:54:09,710
we really want that index to not be a

1295
00:54:07,880 --> 00:54:11,750
bear index we want people to be able to

1296
00:54:09,710 --> 00:54:15,800
see that this is basically like an

1297
00:54:11,750 --> 00:54:17,780
entity ID right and I just want to wrap

1298
00:54:15,800 --> 00:54:19,820
that up so that people know that it's a

1299
00:54:17,780 --> 00:54:21,890
special thing you can't you can't do

1300
00:54:19,820 --> 00:54:23,960
anything with it you can't add to it you

1301
00:54:21,889 --> 00:54:26,449
can't modify the value it gets created

1302
00:54:23,960 --> 00:54:29,090
at creation time and it never touched so

1303
00:54:26,449 --> 00:54:32,750
I'm gonna make that be a specific thing

1304
00:54:29,090 --> 00:54:36,410
at the moment right and so I want that

1305
00:54:32,750 --> 00:54:37,670
to to be very explicit right so what I'm

1306
00:54:36,409 --> 00:54:42,129
going to say is that all right we've got

1307
00:54:37,670 --> 00:54:42,130
this entity ID oops and that's not good

1308
00:54:42,980 --> 00:54:48,860
we've got this entity ID and the entity

1309
00:54:45,860 --> 00:54:50,840
ID is going to be the thing that's used

1310
00:54:48,860 --> 00:54:52,490
here for this like the storage index

1311
00:54:50,840 --> 00:54:54,050
right and I'll probably change storage

1312
00:54:52,489 --> 00:54:55,309
next to be named ID later but again

1313
00:54:54,050 --> 00:54:57,320
there's so many edits in flight right

1314
00:54:55,309 --> 00:55:01,639
now I don't want to add anymore other

1315
00:54:57,320 --> 00:55:03,410
than the basic ones that we have so yeah

1316
00:55:01,639 --> 00:55:04,969
so the storage index for example is you

1317
00:55:03,409 --> 00:55:07,549
know anywhere that we were using it it's

1318
00:55:04,969 --> 00:55:10,699
not a big deal it can just be changed to

1319
00:55:07,550 --> 00:55:12,350
something very straightforward where is

1320
00:55:10,699 --> 00:55:14,299
storage index so like something like

1321
00:55:12,349 --> 00:55:17,949
this like these will all just be entity

1322
00:55:14,300 --> 00:55:17,950
IDs that could pass through right

1323
00:55:20,519 --> 00:55:26,090
get hash from storage index let's see

1324
00:55:23,849 --> 00:55:26,089
here

1325
00:55:32,630 --> 00:55:41,670
right and we'll clean this code up when

1326
00:55:39,869 --> 00:55:43,139
we have time but again we're sort of

1327
00:55:41,670 --> 00:55:45,869
like I said you know with an hour it's

1328
00:55:43,139 --> 00:55:48,150
always real hard to do the big edits

1329
00:55:45,869 --> 00:55:50,069
like this but you got to do them they're

1330
00:55:48,150 --> 00:55:57,090
very important so you know it you don't

1331
00:55:50,070 --> 00:56:06,150
you don't want to not alright

1332
00:55:57,090 --> 00:56:07,950
Oh entity reference index so that also

1333
00:56:06,150 --> 00:56:10,289
so the concept of an entity reference

1334
00:56:07,949 --> 00:56:19,639
wherever that ended up being should also

1335
00:56:10,289 --> 00:56:19,639
be an enemy ID yeah

1336
00:56:21,889 --> 00:56:26,309
only two minutes left we're not we're

1337
00:56:24,360 --> 00:56:28,079
not gonna be able to give it make it to

1338
00:56:26,309 --> 00:56:34,039
there alright see you here good any

1339
00:56:28,079 --> 00:56:34,039
reference okay

1340
00:56:34,159 --> 00:56:42,509
storage index is the ID entry index so

1341
00:56:38,579 --> 00:56:50,069
an entry index here in our case should

1342
00:56:42,510 --> 00:56:52,970
probably also be where is the hash right

1343
00:56:50,070 --> 00:57:02,460
there this should also be an ID

1344
00:56:52,969 --> 00:57:07,519
all right um so yeah there we go

1345
00:57:02,460 --> 00:57:07,519
and Adam did you raw

1346
00:57:09,500 --> 00:57:17,719
it is still taking one of these so let's

1347
00:57:11,659 --> 00:57:32,509
get rid of that any ID these can be done

1348
00:57:17,719 --> 00:57:36,199
on value as well I don't know about

1349
00:57:32,510 --> 00:57:39,440
these these we can probably yeah these

1350
00:57:36,199 --> 00:57:43,960
these are probably not even collision

1351
00:57:39,440 --> 00:57:47,659
rules will probably clean up as well but

1352
00:57:43,960 --> 00:57:50,230
anyway so there we go alright so now

1353
00:57:47,659 --> 00:57:52,639
we're back to normal and that's all fine

1354
00:57:50,230 --> 00:57:55,280
so inside here what I'm going to say is

1355
00:57:52,639 --> 00:57:58,639
I'm going to return an entity ID right

1356
00:57:55,280 --> 00:58:00,650
and there's my AB player code so I come

1357
00:57:58,639 --> 00:58:03,079
in through here and I add all this stuff

1358
00:58:00,650 --> 00:58:05,030
now I have to do a couple things just to

1359
00:58:03,079 --> 00:58:08,239
change this to working in the simpler

1360
00:58:05,030 --> 00:58:15,320
way that we've created now where you

1361
00:58:08,239 --> 00:58:19,009
just get back the pointer there we go

1362
00:58:15,320 --> 00:58:22,580
but I also then have to sort of do the

1363
00:58:19,010 --> 00:58:25,880
return properly here so when we come

1364
00:58:22,579 --> 00:58:29,059
through and set up this code and it's

1365
00:58:25,880 --> 00:58:31,309
all happy and fine when we set up the

1366
00:58:29,059 --> 00:58:34,059
camera following code and all this other

1367
00:58:31,309 --> 00:58:38,480
sort of sort of stuff I have to now have

1368
00:58:34,059 --> 00:58:40,489
some notion of what these storages were

1369
00:58:38,480 --> 00:58:43,719
right so what I want to do now is say

1370
00:58:40,489 --> 00:58:52,519
like oh yeah that's my storage index

1371
00:58:43,719 --> 00:58:54,169
right and same here and my storage index

1372
00:58:52,519 --> 00:58:56,509
has already been set so then when I do

1373
00:58:54,170 --> 00:58:59,329
and entity here right and I do entity

1374
00:58:56,510 --> 00:59:01,910
body and entity head now I can't access

1375
00:58:59,329 --> 00:59:05,719
that anymore so before I go I have to do

1376
00:59:01,909 --> 00:59:07,460
like a result equals whichever one I was

1377
00:59:05,719 --> 00:59:08,719
returning I guess is the body is the one

1378
00:59:07,460 --> 00:59:10,579
I'm returning but the head is really the

1379
00:59:08,719 --> 00:59:13,099
player so I think it's the head that I'm

1380
00:59:10,579 --> 00:59:15,769
supposed to return really right I would

1381
00:59:13,099 --> 00:59:18,049
think so anyway so the K is the heads

1382
00:59:15,769 --> 00:59:21,500
what we move around so I'm going to do

1383
00:59:18,050 --> 00:59:22,789
head sim storage index and I guess these

1384
00:59:21,500 --> 00:59:23,869
have to be sim as well

1385
00:59:22,789 --> 00:59:25,099
it'll be nice to get rid of that sin

1386
00:59:23,869 --> 00:59:27,588
thing we won't have to do that anymore

1387
00:59:25,099 --> 00:59:32,959
soon - this is gonna be so nice I'm

1388
00:59:27,588 --> 00:59:35,268
looking forward to this anyway all right

1389
00:59:32,958 --> 00:59:36,828
so these are all begin calls and then

1390
00:59:35,268 --> 00:59:41,688
we've got our end calls there and that's

1391
00:59:36,829 --> 00:59:43,969
all fine that can go away and what is

1392
00:59:41,688 --> 00:59:45,828
the problem following it can be index so

1393
00:59:43,969 --> 00:59:48,318
this entity felt this camera following

1394
00:59:45,829 --> 00:59:50,719
entity and next thing that really in the

1395
00:59:48,318 --> 00:59:52,369
world mode should be an NBA idea now

1396
00:59:50,719 --> 00:59:57,880
because anywhere that we restoring an

1397
00:59:52,369 --> 01:00:03,229
index should be actually using an ND ID

1398
00:59:57,880 --> 01:00:04,818
like so and eventually we should might

1399
01:00:03,228 --> 01:00:06,228
want to have a is valid that but I think

1400
01:00:04,818 --> 01:00:08,469
zero is fine it doesn't really matter

1401
01:00:06,228 --> 01:00:13,278
because we're never going to change that

1402
01:00:08,469 --> 01:00:17,329
aspect of it certainly okay so there's

1403
01:00:13,278 --> 01:00:20,208
our situation we'll put our result in

1404
01:00:17,329 --> 01:00:23,869
there I think Monstar probably doesn't

1405
01:00:20,208 --> 01:00:25,458
have to return anything in particular so

1406
01:00:23,869 --> 01:00:28,849
we should be able to basically treat

1407
01:00:25,458 --> 01:00:33,288
this as a straightforward conversion

1408
01:00:28,849 --> 01:00:39,019
there's our entity and our end entity

1409
01:00:33,289 --> 01:00:42,009
world mode unique and the same is true

1410
01:00:39,018 --> 01:00:42,008
for our familiar

1411
01:00:46,719 --> 01:01:07,509
and entity and all that so that's yeah

1412
01:00:55,730 --> 01:01:07,510
that's about right into the there we go

1413
01:01:07,579 --> 01:01:16,009
and these are course are begins and okay

1414
01:01:12,550 --> 01:01:18,859
so let's see where we're at now

1415
01:01:16,010 --> 01:01:20,300
ad low entity obviously that's true that

1416
01:01:18,858 --> 01:01:21,799
there is no ID but we don't have to do

1417
01:01:20,300 --> 01:01:23,720
this anymore because we don't need to

1418
01:01:21,800 --> 01:01:26,300
reserve a slot so that's gone because

1419
01:01:23,719 --> 01:01:29,868
there is no such thing as a slot we come

1420
01:01:26,300 --> 01:01:32,150
in here we've got our entity index when

1421
01:01:29,869 --> 01:01:37,750
that comes out it can go right into here

1422
01:01:32,150 --> 01:01:43,930
our con hero struct our controlled hero

1423
01:01:37,750 --> 01:01:46,760
that's in handmade right so let's see

1424
01:01:43,929 --> 01:01:54,608
controlled here oh there it is this

1425
01:01:46,760 --> 01:01:54,609
should really be an entity ID and so we

1426
01:01:55,840 --> 01:02:04,670
change this around alright when we do a

1427
01:02:02,809 --> 01:02:07,460
delete little entity on this we're gonna

1428
01:02:04,670 --> 01:02:10,450
have to do it to do on this right

1429
01:02:07,460 --> 01:02:12,440
because this is it's not implemented yet

1430
01:02:10,449 --> 01:02:15,789
I'm gonna leave that in there for a

1431
01:02:12,440 --> 01:02:15,789
second let's see what else we got

1432
01:02:16,199 --> 01:02:27,159
entity debug IDs game world mode clear

1433
01:02:24,880 --> 01:02:28,990
coalition rules for energy storage and

1434
01:02:27,159 --> 01:02:31,690
so yes at those collision rules stuff we

1435
01:02:28,989 --> 01:02:33,099
have to upgrade slightly we're mostly

1436
01:02:31,690 --> 01:02:37,260
there though there's really not much

1437
01:02:33,099 --> 01:02:40,480
else left here this could be a value

1438
01:02:37,260 --> 01:02:42,850
certainly there's really not that much

1439
01:02:40,480 --> 01:02:44,380
left let's recompile this so we've got

1440
01:02:42,849 --> 01:02:47,349
delete low entity we haven't done that

1441
01:02:44,380 --> 01:02:50,430
yet we've got this clearing game thing

1442
01:02:47,349 --> 01:02:55,029
that happens and that's fine

1443
01:02:50,429 --> 01:02:59,139
we've got low entities this debug ID

1444
01:02:55,030 --> 01:03:01,240
thing I don't know how we'll really get

1445
01:02:59,139 --> 01:03:02,619
around that we want the debug ID to be

1446
01:03:01,239 --> 01:03:08,500
something unique but we don't have a

1447
01:03:02,619 --> 01:03:13,589
real way to do it so I don't know to do

1448
01:03:08,500 --> 01:03:18,519
KC we don't really have a way to unique

1449
01:03:13,590 --> 01:03:26,500
defy these at the moment it's not to

1450
01:03:18,519 --> 01:03:29,400
think about that I'm not really sure

1451
01:03:26,500 --> 01:03:32,619
yeah I'm not sure what we would do here

1452
01:03:29,400 --> 01:03:34,329
it's do we have a debug just you ain't

1453
01:03:32,619 --> 01:03:37,679
ID I mean I guess if I did this I could

1454
01:03:34,329 --> 01:03:37,679
just say well okay it's a void star

1455
01:03:38,070 --> 01:03:42,630
let's see cannot convert from

1456
01:03:46,760 --> 01:03:55,880
these are just straight ahead comparison

1457
01:03:50,909 --> 01:03:57,960
so that's good clear collision rules for

1458
01:03:55,880 --> 01:03:59,460
probably just needs to take one of these

1459
01:03:57,960 --> 01:04:04,829
but eventually that'll be fixed as well

1460
01:03:59,460 --> 01:04:07,079
and then low entities tebow pointer ID

1461
01:04:04,829 --> 01:04:08,250
again so that storage thing we don't

1462
01:04:07,079 --> 01:04:15,630
really have a way to deal with

1463
01:04:08,250 --> 01:04:16,949
unfortunately all right so really the

1464
01:04:15,630 --> 01:04:18,539
only thing we have to do here is have a

1465
01:04:16,949 --> 01:04:21,539
way of marking one of these entities is

1466
01:04:18,539 --> 01:04:23,429
deleted right and we don't quite have a

1467
01:04:21,539 --> 01:04:25,469
way to do that yet in the sim region

1468
01:04:23,429 --> 01:04:28,139
sits stuff so what we don't want to do

1469
01:04:25,469 --> 01:04:39,449
is do delete low entity so I'm just

1470
01:04:28,139 --> 01:04:47,190
going to put an assertion here add mark

1471
01:04:39,449 --> 01:04:49,889
this and delete in sim but all right

1472
01:04:47,190 --> 01:04:51,869
we're at least compiling so I'm gonna

1473
01:04:49,889 --> 01:04:54,239
call it for today because I have to go

1474
01:04:51,869 --> 01:04:58,710
early actually today I've got to go in

1475
01:04:54,239 --> 01:05:01,649
about four minutes so I'm gonna call it

1476
01:04:58,710 --> 01:05:09,480
there I could maybe take a brief Q&amp;A but

1477
01:05:01,650 --> 01:05:11,340
I would say hold hold off on any lengthy

1478
01:05:09,480 --> 01:05:13,409
ones I will probably put postponed until

1479
01:05:11,340 --> 01:05:15,890
tomorrow when we finish with this if

1480
01:05:13,409 --> 01:05:15,889
that makes sense

1481
01:05:18,559 --> 01:05:21,639
hello Milton

1482
01:05:49,920 --> 01:05:53,010
Ranga this is more of a meta question

1483
01:05:51,599 --> 01:05:54,509
but I found myself faced introduced in

1484
01:05:53,010 --> 01:05:55,770
my code at places that I don't want to

1485
01:05:54,510 --> 01:05:57,600
deal with while I work on something else

1486
01:05:55,769 --> 01:06:00,570
however as we all procrastinate how come

1487
01:05:57,599 --> 01:06:04,219
back to the do's so what I do is once I

1488
01:06:00,570 --> 01:06:15,780
get into like ship mode on something I

1489
01:06:04,219 --> 01:06:17,849
go I have like something like this right

1490
01:06:15,780 --> 01:06:21,210
which just prints out where all the two

1491
01:06:17,849 --> 01:06:24,150
dudes are and what I do is I go through

1492
01:06:21,210 --> 01:06:26,099
them all and I assess way at that point

1493
01:06:24,150 --> 01:06:28,500
in the you know in the process before I

1494
01:06:26,099 --> 01:06:30,989
go into like serious ship mode I assess

1495
01:06:28,500 --> 01:06:32,760
which ones are actually to dues I want

1496
01:06:30,989 --> 01:06:34,619
to do before shipping which ones are to

1497
01:06:32,760 --> 01:06:36,330
dues that I'll maybe do in some future

1498
01:06:34,619 --> 01:06:37,739
version and maybe it's for soapy both

1499
01:06:36,329 --> 01:06:39,029
owned and which ones are just

1500
01:06:37,739 --> 01:06:41,219
superfluous now because they don't make

1501
01:06:39,030 --> 01:06:43,530
any sense with the way the code ended up

1502
01:06:41,219 --> 01:06:45,329
and I do that big call and that's like

1503
01:06:43,530 --> 01:06:46,950
what helps me generate part of my like

1504
01:06:45,329 --> 01:06:54,719
shipping list of things I need to do

1505
01:06:46,949 --> 01:06:55,829
that makes sense our beady jellyfish

1506
01:06:54,719 --> 01:06:57,149
what's the highest number of errors

1507
01:06:55,829 --> 01:06:58,980
you've ever had compiling well it's

1508
01:06:57,150 --> 01:07:02,039
capped at 100 on most compiles if you

1509
01:06:58,980 --> 01:07:03,929
don't turn it off so like on m/s BC

1510
01:07:02,039 --> 01:07:11,039
you'll just it was won't print past 100

1511
01:07:03,929 --> 01:07:12,029
so mid blow I arrived too late to the

1512
01:07:11,039 --> 01:07:13,529
pre stream to let you know that

1513
01:07:12,030 --> 01:07:17,490
yesterday's episode hasn't made its way

1514
01:07:13,530 --> 01:07:19,230
to YouTube oh yeah YouTube's been real

1515
01:07:17,489 --> 01:07:21,599
bad for uploading lately it's probably

1516
01:07:19,230 --> 01:07:24,949
just sitting there like in a weird bad

1517
01:07:21,599 --> 01:07:24,949
state I'll take a look at it

1518
01:07:29,909 --> 01:07:36,298
all right so I'm gonna go ahead and wrap

1519
01:07:33,989 --> 01:07:39,118
it up and tomorrow we'll kind of go

1520
01:07:36,298 --> 01:07:40,530
through this and and finish up because

1521
01:07:39,119 --> 01:07:42,869
we're in a good state right now I'm

1522
01:07:40,530 --> 01:07:44,789
really excited for this I'm I'm really

1523
01:07:42,869 --> 01:07:48,390
excited for this entity system I have to

1524
01:07:44,789 --> 01:07:50,220
tell you but anyway thank you everybody

1525
01:07:48,389 --> 01:07:51,420
for joining me for this toda handmade

1526
01:07:50,219 --> 01:07:52,828
hero it's been a pleasure coding with

1527
01:07:51,420 --> 01:07:55,318
you as always if you want to follow

1528
01:07:52,829 --> 01:07:56,789
along the series at home you can do so

1529
01:07:55,318 --> 01:07:58,619
by pre-ordering the game at handmade

1530
01:07:56,789 --> 01:08:00,420
hero organs a little handy dandy button

1531
01:07:58,619 --> 01:08:01,650
there and it comes to the source code so

1532
01:08:00,420 --> 01:08:03,180
you can follow along we also have a

1533
01:08:01,650 --> 01:08:05,430
forum site you can go to if you want to

1534
01:08:03,179 --> 01:08:06,538
ask questions we have a patreon page you

1535
01:08:05,429 --> 01:08:08,129
want support the video serious and we

1536
01:08:06,539 --> 01:08:09,630
have a tweet bot that tweets the

1537
01:08:08,130 --> 01:08:11,910
schedule for Monica series live there's

1538
01:08:09,630 --> 01:08:14,940
also an episode guide for catching up on

1539
01:08:11,909 --> 01:08:19,079
past episodes and if you would like to

1540
01:08:14,940 --> 01:08:20,609
see the exciting conclusion of well the

1541
01:08:19,079 --> 01:08:22,409
first step in our energy system rewrite

1542
01:08:20,609 --> 01:08:23,670
that will be tomorrow and I think it'll

1543
01:08:22,409 --> 01:08:25,229
be pretty awesome but it'll continue to

1544
01:08:23,670 --> 01:08:26,909
get awesome basically the next couple

1545
01:08:25,229 --> 01:08:29,548
weeks are gonna be pretty awesome just

1546
01:08:26,909 --> 01:08:31,710
in a general awesomeness so prepare for

1547
01:08:29,548 --> 01:08:33,000
a lot of Awesomeness and if you can't

1548
01:08:31,710 --> 01:08:34,739
heil awesomeness I would not recommend

1549
01:08:33,000 --> 01:08:35,789
turning tuning back into the stream over

1550
01:08:34,738 --> 01:08:38,909
the next couple of weeks so it's gonna

1551
01:08:35,789 --> 01:08:42,600
just it's going to be absurd that's

1552
01:08:38,909 --> 01:08:43,858
about it until tomorrow have a good time

1553
01:08:42,600 --> 01:08:44,250
programming and I'll see you guys on the

1554
01:08:43,859 --> 01:08:46,940
Internet

1555
01:08:44,250 --> 01:08:46,939
take it easy everyone

