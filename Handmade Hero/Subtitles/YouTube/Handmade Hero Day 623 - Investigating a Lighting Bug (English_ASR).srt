1
00:00:01,520 --> 00:00:05,439
hello everyone and welcome back to

2
00:00:03,839 --> 00:00:06,560
handmade hero the show where we go to

3
00:00:05,440 --> 00:00:09,839
complete game live

4
00:00:06,559 --> 00:00:10,879
on stream we uh have been away for a

5
00:00:09,839 --> 00:00:12,879
while

6
00:00:10,880 --> 00:00:14,480
but you know there's nothing in

7
00:00:12,880 --> 00:00:16,640
particularly magical about

8
00:00:14,480 --> 00:00:18,399
being away from a while oh except for

9
00:00:16,640 --> 00:00:22,160
the fact that apparently

10
00:00:18,399 --> 00:00:24,159
um we need to figure out why our four

11
00:00:22,160 --> 00:00:25,839
coder isn't building other than that

12
00:00:24,160 --> 00:00:27,359
we're fine looks like as long as i'm in

13
00:00:25,839 --> 00:00:30,800
that directory it works all right

14
00:00:27,359 --> 00:00:32,960
who knows uh anyway um when we left off

15
00:00:30,800 --> 00:00:33,840
we had just modified the tag system i

16
00:00:32,960 --> 00:00:36,160
think we still

17
00:00:33,840 --> 00:00:37,920
maybe had some debugging we wanted to do

18
00:00:36,159 --> 00:00:39,119
but we had just changed the tag system

19
00:00:37,920 --> 00:00:40,480
over to something simpler

20
00:00:39,119 --> 00:00:41,759
uh we're basically at the point now

21
00:00:40,479 --> 00:00:42,878
where you know most of the things we

22
00:00:41,759 --> 00:00:46,079
need to do are

23
00:00:42,878 --> 00:00:47,439
for the most part done um and we're

24
00:00:46,079 --> 00:00:49,679
really just trying to figure out like

25
00:00:47,439 --> 00:00:52,238
what sorts of stuff we want to be doing

26
00:00:49,679 --> 00:00:52,960
uh with gameplay and so we're kind of

27
00:00:52,238 --> 00:00:55,439
going through

28
00:00:52,960 --> 00:00:56,480
and just trying to make sure that we

29
00:00:55,439 --> 00:00:59,358
have a decent

30
00:00:56,479 --> 00:00:59,919
sort of setup uh where everything is is

31
00:00:59,359 --> 00:01:03,359
kind of

32
00:00:59,920 --> 00:01:06,640
um a streamline for putting gameplay in

33
00:01:03,359 --> 00:01:08,640
and i don't actually know uh what i

34
00:01:06,640 --> 00:01:10,719
thought we had a little bit of debugging

35
00:01:08,640 --> 00:01:13,840
to do left on the tag update

36
00:01:10,719 --> 00:01:14,560
uh you know it's working but it i think

37
00:01:13,840 --> 00:01:16,880
there were still

38
00:01:14,560 --> 00:01:18,079
a couple things in there that weren't uh

39
00:01:16,879 --> 00:01:20,158
right if i run it in

40
00:01:18,079 --> 00:01:21,438
retail mode now let me just see if i'm

41
00:01:20,159 --> 00:01:25,280
right about that

42
00:01:21,438 --> 00:01:27,199
um yeah so so okay

43
00:01:25,280 --> 00:01:29,840
like right like we saw some stuff like

44
00:01:27,200 --> 00:01:34,159
that that we had not seen previously

45
00:01:29,840 --> 00:01:36,719
um like where where the lighting gets

46
00:01:34,159 --> 00:01:40,079
screwed up

47
00:01:36,719 --> 00:01:42,640
right um i i remember some of this

48
00:01:40,078 --> 00:01:44,798
now it's all coming back to me now so

49
00:01:42,640 --> 00:01:46,960
there's some weird things in here like

50
00:01:44,799 --> 00:01:48,320
you know the lighting just kind of stops

51
00:01:46,959 --> 00:01:51,039
working properly

52
00:01:48,319 --> 00:01:52,639
for no for no good reason right we don't

53
00:01:51,040 --> 00:01:54,799
have an explanation for that

54
00:01:52,640 --> 00:01:55,680
and it sometimes works and sometimes

55
00:01:54,799 --> 00:01:58,000
doesn't so

56
00:01:55,680 --> 00:02:00,159
there's like something where we we like

57
00:01:58,000 --> 00:02:01,920
something isn't getting loaded properly

58
00:02:00,159 --> 00:02:02,560
we don't know right like we just don't

59
00:02:01,920 --> 00:02:05,040
know

60
00:02:02,560 --> 00:02:06,240
uh we've got a bug though and you can

61
00:02:05,040 --> 00:02:08,959
see like that

62
00:02:06,239 --> 00:02:10,959
kind of weirdly there like the it seems

63
00:02:08,959 --> 00:02:14,239
like when we run

64
00:02:10,959 --> 00:02:14,959
uh in debug mode we don't have this

65
00:02:14,239 --> 00:02:17,599
problem

66
00:02:14,959 --> 00:02:18,560
right so so here's like me running in

67
00:02:17,598 --> 00:02:20,878
debug mode

68
00:02:18,560 --> 00:02:23,598
and you can see that there's there's

69
00:02:20,878 --> 00:02:26,159
nothing weird going on with the lighting

70
00:02:23,598 --> 00:02:27,759
and so something's up right we've got a

71
00:02:26,159 --> 00:02:30,799
weird bug because the lighting is

72
00:02:27,759 --> 00:02:31,598
is in debug mode we don't see any

73
00:02:30,800 --> 00:02:34,560
weirdness

74
00:02:31,598 --> 00:02:36,959
right there it looks it looks like what

75
00:02:34,560 --> 00:02:39,680
you would expect it to look like

76
00:02:36,959 --> 00:02:41,120
so we know that something bizarre is

77
00:02:39,680 --> 00:02:44,319
happening here

78
00:02:41,120 --> 00:02:46,159
and the question is what uh

79
00:02:44,318 --> 00:02:48,159
we've got to figure out like what we

80
00:02:46,159 --> 00:02:50,719
broke when we were

81
00:02:48,159 --> 00:02:51,919
messing around or you know it could be

82
00:02:50,719 --> 00:02:52,878
that we didn't break something when we

83
00:02:51,919 --> 00:02:55,679
were messing around

84
00:02:52,878 --> 00:02:56,479
that all we did was like uncover another

85
00:02:55,680 --> 00:02:59,280
bug

86
00:02:56,479 --> 00:02:59,598
that you know that had just been lurking

87
00:02:59,280 --> 00:03:01,519
and

88
00:02:59,598 --> 00:03:03,359
what we're seeing here is the

89
00:03:01,519 --> 00:03:06,400
manifestation of a bug

90
00:03:03,360 --> 00:03:07,040
that otherwise would not um you know was

91
00:03:06,400 --> 00:03:10,158
kind of

92
00:03:07,039 --> 00:03:13,120
hidden or something was masked by

93
00:03:10,158 --> 00:03:14,799
uh something that we were doing

94
00:03:13,120 --> 00:03:17,200
previously and then when we kind of

95
00:03:14,800 --> 00:03:18,319
jiggled things around we ended up in a

96
00:03:17,199 --> 00:03:20,719
situation where

97
00:03:18,318 --> 00:03:21,759
we couldn't actually uh yeah where we

98
00:03:20,719 --> 00:03:23,519
didn't actually get to work

99
00:03:21,759 --> 00:03:25,120
now here's another thing right like

100
00:03:23,519 --> 00:03:27,360
where's that where's that guy

101
00:03:25,120 --> 00:03:28,878
so that's another tag bug we have which

102
00:03:27,360 --> 00:03:31,760
is presumably that the

103
00:03:28,878 --> 00:03:33,598
um and also the down one doesn't work

104
00:03:31,759 --> 00:03:35,679
right so we've got a bunch of bugs in

105
00:03:33,598 --> 00:03:37,359
the tag stuff that we reported

106
00:03:35,680 --> 00:03:39,120
and so really probably all we want to do

107
00:03:37,360 --> 00:03:41,680
today is just get back into it

108
00:03:39,120 --> 00:03:42,480
and go fix those bugs so try to try to

109
00:03:41,680 --> 00:03:44,640
get um

110
00:03:42,479 --> 00:03:46,238
these sort of weird bugs we introduced

111
00:03:44,639 --> 00:03:49,039
back out of here which

112
00:03:46,239 --> 00:03:50,158
is probably mostly about streamlining

113
00:03:49,039 --> 00:03:52,400
what we've done

114
00:03:50,158 --> 00:03:53,199
and cleaning up any rough edges and

115
00:03:52,400 --> 00:03:54,799
looking for

116
00:03:53,199 --> 00:03:57,039
you know mistakes the mistakes that were

117
00:03:54,799 --> 00:04:00,640
made uh because it is weird

118
00:03:57,039 --> 00:04:02,239
that works in debug but not release and

119
00:04:00,639 --> 00:04:04,000
so on like that's just kind of weird so

120
00:04:02,239 --> 00:04:15,840
you know that there's something funky

121
00:04:04,000 --> 00:04:15,840
uh going on if that makes sense

122
00:04:19,040 --> 00:04:25,759
all right um so let's take a look

123
00:04:22,240 --> 00:04:29,040
at first of all um maybe some of these

124
00:04:25,759 --> 00:04:32,400
these basic tag situations so

125
00:04:29,040 --> 00:04:35,680
we we kind of had a

126
00:04:32,399 --> 00:04:37,439
when we were creating those monstars

127
00:04:35,680 --> 00:04:39,120
we know that uh there should have been

128
00:04:37,439 --> 00:04:41,199
like a little skull with the monster

129
00:04:39,120 --> 00:04:43,360
so maybe the easiest thing for us to do

130
00:04:41,199 --> 00:04:46,400
first is just take a look and see

131
00:04:43,360 --> 00:04:48,080
why we're not getting any of those those

132
00:04:46,399 --> 00:04:50,478
monstars anymore

133
00:04:48,079 --> 00:04:51,359
so if we take a look at where those are

134
00:04:50,478 --> 00:04:53,599
being added

135
00:04:51,360 --> 00:04:55,759
you can see that we've got sort of this

136
00:04:53,600 --> 00:04:57,040
this create entity stuff going on and i

137
00:04:55,759 --> 00:05:00,319
believe

138
00:04:57,040 --> 00:05:02,800
that the enemies are added via

139
00:05:00,319 --> 00:05:03,599
this routine right so you know they get

140
00:05:02,800 --> 00:05:05,520
added

141
00:05:03,600 --> 00:05:07,199
um much like the cat and the orphans and

142
00:05:05,519 --> 00:05:08,959
so on

143
00:05:07,199 --> 00:05:10,240
they get added by these little callbacks

144
00:05:08,959 --> 00:05:13,599
that just like build

145
00:05:10,240 --> 00:05:14,800
little um little creatures right they

146
00:05:13,600 --> 00:05:17,840
build they build whatever

147
00:05:14,800 --> 00:05:20,879
sorry i gotta turn that off um

148
00:05:17,839 --> 00:05:22,719
battery there we go uh

149
00:05:20,879 --> 00:05:24,478
we're still in the in a weird place with

150
00:05:22,720 --> 00:05:27,280
four coder right now um

151
00:05:24,478 --> 00:05:28,719
waiting for alan to update it or maybe

152
00:05:27,279 --> 00:05:30,399
he has i haven't heard from him so i'm

153
00:05:28,720 --> 00:05:32,000
not sure what the status is but there's

154
00:05:30,399 --> 00:05:35,918
a couple weird things that

155
00:05:32,000 --> 00:05:37,680
uh are are you know just kind of

156
00:05:35,918 --> 00:05:38,799
waiting for a four coder update and i

157
00:05:37,680 --> 00:05:40,639
don't really know what the status of

158
00:05:38,800 --> 00:05:43,918
because i haven't been programming

159
00:05:40,639 --> 00:05:46,240
in it um as you know i've been away so

160
00:05:43,918 --> 00:05:47,839
if we take a look here at i think add

161
00:05:46,240 --> 00:05:49,918
snake is what's going on

162
00:05:47,839 --> 00:05:52,879
and uh right now those are those are

163
00:05:49,918 --> 00:05:56,159
technically snakes they just don't have

164
00:05:52,879 --> 00:05:57,918
uh multiple pieces because

165
00:05:56,160 --> 00:05:59,919
we you know we're just when we put this

166
00:05:57,918 --> 00:06:03,359
in we were just testing with that

167
00:05:59,918 --> 00:06:06,318
so this right here is what

168
00:06:03,360 --> 00:06:08,639
should have been uh working you know

169
00:06:06,319 --> 00:06:12,160
this is this is what should have been

170
00:06:08,639 --> 00:06:14,319
um creating the snakehead which is this

171
00:06:12,160 --> 00:06:15,919
asset headpiece here right and then we

172
00:06:14,319 --> 00:06:17,680
have this base asset

173
00:06:15,918 --> 00:06:19,599
uh which was a thing that should have

174
00:06:17,680 --> 00:06:22,160
been uh passed in

175
00:06:19,600 --> 00:06:23,520
and and it's like what kind of snake uh

176
00:06:22,160 --> 00:06:26,479
you wanted it to be

177
00:06:23,519 --> 00:06:27,279
and so presumably the problem here is

178
00:06:26,478 --> 00:06:29,918
that when we

179
00:06:27,279 --> 00:06:31,038
did the add snake we ended up in a

180
00:06:29,918 --> 00:06:34,159
situation

181
00:06:31,038 --> 00:06:37,839
um oops

182
00:06:34,160 --> 00:06:41,280
snake um we ended up in a situation

183
00:06:37,839 --> 00:06:45,279
where whatever the base asset was

184
00:06:41,279 --> 00:06:47,918
was not correct somehow

185
00:06:45,279 --> 00:06:48,799
so you can see here that it's got a tag

186
00:06:47,918 --> 00:06:51,839
bones

187
00:06:48,800 --> 00:06:53,598
on it and other than that it doesn't

188
00:06:51,839 --> 00:06:57,279
look like it has anything else

189
00:06:53,598 --> 00:06:59,839
so i don't actually know what those

190
00:06:57,279 --> 00:07:02,000
bones things were but it could be that

191
00:06:59,839 --> 00:07:02,879
we just need to add the other tags that

192
00:07:02,000 --> 00:07:05,918
we need

193
00:07:02,879 --> 00:07:09,199
uh to specify the um

194
00:07:05,918 --> 00:07:10,399
the sort of head piece skull

195
00:07:09,199 --> 00:07:12,400
thing i don't know whatever you want to

196
00:07:10,399 --> 00:07:13,839
call that so i'm going to go ahead and

197
00:07:12,399 --> 00:07:16,959
look for that

198
00:07:13,839 --> 00:07:19,359
we don't want mummy so it looks like

199
00:07:16,959 --> 00:07:20,000
looks like undead is probably was the

200
00:07:19,360 --> 00:07:22,400
thing we need

201
00:07:20,000 --> 00:07:23,839
wanted there so it's so in terms of this

202
00:07:22,399 --> 00:07:26,959
this is undead bones

203
00:07:23,839 --> 00:07:31,598
so i assume you want like

204
00:07:26,959 --> 00:07:33,680
that kind of a thing um

205
00:07:31,598 --> 00:07:34,639
uh and and i'm just gonna see if this if

206
00:07:33,680 --> 00:07:38,000
this makes

207
00:07:34,639 --> 00:07:40,240
uh that part any any better

208
00:07:38,000 --> 00:07:41,519
and so off we go to

209
00:07:40,240 --> 00:07:43,519
[Music]

210
00:07:41,519 --> 00:07:44,799
the wow that is weird that lighting

211
00:07:43,519 --> 00:07:46,079
stuff is very strange i'm going to be

212
00:07:44,800 --> 00:07:47,199
interested to see what's going on with

213
00:07:46,079 --> 00:07:50,240
that bug

214
00:07:47,199 --> 00:07:53,038
uh but we'll see so

215
00:07:50,240 --> 00:07:53,840
off we go hopping down to the you can

216
00:07:53,038 --> 00:07:55,279
tell it's like a

217
00:07:53,839 --> 00:07:57,038
it's like an overflowy kind of a

218
00:07:55,279 --> 00:07:58,399
situation but there okay there's our

219
00:07:57,038 --> 00:08:00,240
fellow there

220
00:07:58,399 --> 00:08:01,598
so it looks like the problem that we're

221
00:08:00,240 --> 00:08:04,160
having um

222
00:08:01,598 --> 00:08:04,878
you know now we've got the the skull is

223
00:08:04,160 --> 00:08:08,000
fine

224
00:08:04,879 --> 00:08:09,759
uh so that's all good but the it looks

225
00:08:08,000 --> 00:08:12,560
to me like the problem we're having

226
00:08:09,759 --> 00:08:15,520
uh the last thing i can see that's

227
00:08:12,560 --> 00:08:18,319
obviously wrong about the tags

228
00:08:15,519 --> 00:08:20,000
is that as we're moving around here the

229
00:08:18,319 --> 00:08:22,080
downward facing direction

230
00:08:20,000 --> 00:08:24,560
tag is not looking up properly it's not

231
00:08:22,079 --> 00:08:27,038
really a tag it's it's more of a number

232
00:08:24,560 --> 00:08:28,240
so the downward facing number is not

233
00:08:27,038 --> 00:08:30,560
working

234
00:08:28,240 --> 00:08:31,759
and you can see that both in terms of

235
00:08:30,560 --> 00:08:33,200
the hero so if i

236
00:08:31,759 --> 00:08:35,278
punch in any direction you can see the

237
00:08:33,200 --> 00:08:38,959
hero switches to facing that direction

238
00:08:35,278 --> 00:08:40,080
except for down right the the heroes

239
00:08:38,958 --> 00:08:42,639
sprites don't change

240
00:08:40,080 --> 00:08:43,919
direction for down and you can see that

241
00:08:42,639 --> 00:08:45,759
that's also true

242
00:08:43,918 --> 00:08:47,120
of like the skeleton so the skeleton

243
00:08:45,759 --> 00:08:48,559
changes to face the direction the

244
00:08:47,120 --> 00:08:52,480
skeleton's hopping

245
00:08:48,559 --> 00:08:55,759
but never for down right

246
00:08:52,480 --> 00:08:58,560
so we know that the down directional

247
00:08:55,759 --> 00:09:00,319
like uh whatever you want to call that

248
00:08:58,559 --> 00:09:02,799
the downward facing direction

249
00:09:00,320 --> 00:09:04,000
is not working but we don't necessarily

250
00:09:02,799 --> 00:09:05,599
know why

251
00:09:04,000 --> 00:09:07,600
now it probably has something to do with

252
00:09:05,600 --> 00:09:10,320
how we're mapping the numbers

253
00:09:07,600 --> 00:09:10,879
but who knows so let's take a look and

254
00:09:10,320 --> 00:09:13,519
see

255
00:09:10,879 --> 00:09:15,679
what those numbers actually are or what

256
00:09:13,519 --> 00:09:17,759
they should be

257
00:09:15,679 --> 00:09:19,919
the downward facing one is the one that

258
00:09:17,759 --> 00:09:23,278
goes is basically the furthest

259
00:09:19,919 --> 00:09:25,120
all the way around so you've got zero

260
00:09:23,278 --> 00:09:27,838
is facing to the right i believe is how

261
00:09:25,120 --> 00:09:30,720
we do it so zero is facing to the right

262
00:09:27,839 --> 00:09:31,360
pi over two is facing up pi is facing

263
00:09:30,720 --> 00:09:34,839
left

264
00:09:31,360 --> 00:09:38,639
and three over two pi

265
00:09:34,839 --> 00:09:40,480
um it is down right

266
00:09:38,639 --> 00:09:42,080
i think that's how it was done but i

267
00:09:40,480 --> 00:09:43,200
don't remember it might have mapped zero

268
00:09:42,080 --> 00:09:47,040
to one

269
00:09:43,200 --> 00:09:47,680
i have no idea so we and we also do it

270
00:09:47,039 --> 00:09:51,199
cyclical

271
00:09:47,679 --> 00:09:52,399
so if you keep going if you keep going

272
00:09:51,200 --> 00:09:56,160
past

273
00:09:52,399 --> 00:10:00,639
uh three halves pi

274
00:09:56,159 --> 00:10:00,639
plus a quarter pi which would be

275
00:10:01,278 --> 00:10:08,320
seven quarters pi i guess

276
00:10:04,879 --> 00:10:12,000
um if you go seven quarters pi

277
00:10:08,320 --> 00:10:15,839
you would you would get uh a wrap around

278
00:10:12,000 --> 00:10:17,759
back to um the zero

279
00:10:15,839 --> 00:10:19,519
direction right because it's you know we

280
00:10:17,759 --> 00:10:20,480
wanted it to be cyclical so that as you

281
00:10:19,519 --> 00:10:23,278
got

282
00:10:20,480 --> 00:10:25,360
back around that's where you would go uh

283
00:10:23,278 --> 00:10:27,120
and i don't actually

284
00:10:25,360 --> 00:10:28,320
think that would be implicated here

285
00:10:27,120 --> 00:10:29,839
although if we screwed up that

286
00:10:28,320 --> 00:10:32,879
calculation somehow

287
00:10:29,839 --> 00:10:34,640
you know then it could be so

288
00:10:32,879 --> 00:10:36,399
we can probably debug this pretty easily

289
00:10:34,639 --> 00:10:36,879
by just looking at the selection process

290
00:10:36,399 --> 00:10:38,720
for it

291
00:10:36,879 --> 00:10:40,958
however i just want to look at that

292
00:10:38,720 --> 00:10:44,079
routine first because i want to re

293
00:10:40,958 --> 00:10:45,199
i want to familiarize myself um

294
00:10:44,078 --> 00:10:46,958
because we haven't looked at this code

295
00:10:45,200 --> 00:10:50,320
in a while which just like what we ended

296
00:10:46,958 --> 00:10:52,719
up deciding to do here and you can see

297
00:10:50,320 --> 00:10:54,480
so here's uh the routine that actually

298
00:10:52,720 --> 00:10:57,600
looks for assets so what it does

299
00:10:54,480 --> 00:10:59,759
when it comes in here is it asks for uh

300
00:10:57,600 --> 00:11:01,519
based on the the hash so that's the

301
00:10:59,759 --> 00:11:02,720
thing that says like oh this is like an

302
00:11:01,519 --> 00:11:07,039
undead whatever

303
00:11:02,720 --> 00:11:10,160
right um is you can

304
00:11:07,039 --> 00:11:12,838
in here you can go ahead and

305
00:11:10,159 --> 00:11:14,639
grab that out grab like that series of

306
00:11:12,839 --> 00:11:16,480
sprites which is just the different

307
00:11:14,639 --> 00:11:18,720
facing directions or whatever

308
00:11:16,480 --> 00:11:19,759
uh and then it'll go through here it'll

309
00:11:18,720 --> 00:11:23,120
look through the

310
00:11:19,759 --> 00:11:24,879
the slots and it'll try to match um

311
00:11:23,120 --> 00:11:26,639
whatever the match vector is and the

312
00:11:24,879 --> 00:11:30,799
match vector is the thing

313
00:11:26,639 --> 00:11:31,439
uh that actually has oh weird why is my

314
00:11:30,799 --> 00:11:35,278
cpm

315
00:11:31,440 --> 00:11:36,959
so high what's going on are we in power

316
00:11:35,278 --> 00:11:40,078
mode

317
00:11:36,958 --> 00:11:42,078
oh my god ryan

318
00:11:40,078 --> 00:11:45,278
how are we in power mode right now i

319
00:11:42,078 --> 00:11:45,278
haven't even been typing

320
00:11:51,360 --> 00:11:57,839
what's going on

321
00:12:01,759 --> 00:12:04,159
what

322
00:12:06,399 --> 00:12:11,839
power mode should not be implemented yet

323
00:12:08,639 --> 00:12:11,839
should it

324
00:12:15,440 --> 00:12:22,800
well you know um

325
00:12:19,120 --> 00:12:25,600
i do like power mode uh but we're gonna

326
00:12:22,799 --> 00:12:29,919
have to sideline it for now sorry folks

327
00:12:25,600 --> 00:12:32,399
um f4

328
00:12:29,919 --> 00:12:34,479
power mode disallow that that breaks my

329
00:12:32,399 --> 00:12:38,000
heart turning off power mode you know

330
00:12:34,480 --> 00:12:39,839
i don't mind telling you um

331
00:12:38,000 --> 00:12:41,919
but everyone you know you can blame you

332
00:12:39,839 --> 00:12:43,040
can blame ryan he's on the he's on the

333
00:12:41,919 --> 00:12:46,078
chat

334
00:12:43,039 --> 00:12:49,439
you know the power mode i did my part

335
00:12:46,078 --> 00:12:50,838
the sound plays back correctly for power

336
00:12:49,440 --> 00:12:53,600
mode

337
00:12:50,839 --> 00:12:55,920
um

338
00:12:53,600 --> 00:12:57,839
so so you know i i consider myself

339
00:12:55,919 --> 00:13:00,559
blameless here the cpm counter

340
00:12:57,839 --> 00:13:01,440
you know that was ryan so i'm just

341
00:13:00,559 --> 00:13:05,278
saying

342
00:13:01,440 --> 00:13:08,720
you know i'm just saying ryan uh

343
00:13:05,278 --> 00:13:08,720
you know this is this is it

344
00:13:08,879 --> 00:13:12,958
what what happened there what what

345
00:13:10,480 --> 00:13:16,399
happened right the cpm decay

346
00:13:12,958 --> 00:13:18,958
not working um you know that that was

347
00:13:16,399 --> 00:13:21,360
out of my purview

348
00:13:18,958 --> 00:13:22,399
i think we all agree that power mode is

349
00:13:21,360 --> 00:13:23,759
a critical feature

350
00:13:22,399 --> 00:13:25,919
and that there's no way we can finish

351
00:13:23,759 --> 00:13:27,838
handmade hero without it so

352
00:13:25,919 --> 00:13:30,078
i'm just i don't want to say that

353
00:13:27,839 --> 00:13:33,200
everything's riding on you

354
00:13:30,078 --> 00:13:35,838
but everything's riding on you okay so

355
00:13:33,200 --> 00:13:37,920
uh what we're seeing here is just that

356
00:13:35,839 --> 00:13:41,600
we're getting some kind of a problem

357
00:13:37,919 --> 00:13:43,039
with matching these these directions

358
00:13:41,600 --> 00:13:45,120
and you can see here the way that we're

359
00:13:43,039 --> 00:13:47,198
doing it is we're doing this uh

360
00:13:45,120 --> 00:13:49,759
absolute value differencing nonsense

361
00:13:47,198 --> 00:13:50,958
here right to try and match the circular

362
00:13:49,759 --> 00:13:54,240
pattern

363
00:13:50,958 --> 00:13:58,638
uh to you know to the correct uh

364
00:13:54,240 --> 00:14:00,959
series of things and you know this is

365
00:13:58,639 --> 00:14:03,039
uh i think what happened if i remember

366
00:14:00,958 --> 00:14:03,759
correctly is i was like well this is

367
00:14:03,039 --> 00:14:04,958
dumb

368
00:14:03,759 --> 00:14:07,278
we shouldn't bother doing this we should

369
00:14:04,958 --> 00:14:08,958
just match linear and then

370
00:14:07,278 --> 00:14:11,600
i was like ah now well let's keep using

371
00:14:08,958 --> 00:14:15,359
it whatever and all that was stupid

372
00:14:11,600 --> 00:14:19,440
uh because honestly like

373
00:14:15,360 --> 00:14:23,360
i'm not sure why we don't just add

374
00:14:19,440 --> 00:14:26,160
a duplicate reference to

375
00:14:23,360 --> 00:14:26,159
the asset

376
00:14:26,559 --> 00:14:30,000
at 2 pi because that would just solve

377
00:14:29,759 --> 00:14:33,759
the

378
00:14:30,000 --> 00:14:36,078
problem right and then you wouldn't need

379
00:14:33,759 --> 00:14:37,519
what's going on here right you just add

380
00:14:36,078 --> 00:14:40,799
the asset twice

381
00:14:37,519 --> 00:14:43,919
now maybe there's some like overwhelming

382
00:14:40,799 --> 00:14:44,399
ali obvious reason why you don't want to

383
00:14:43,919 --> 00:14:47,838
add an

384
00:14:44,399 --> 00:14:50,720
asset twice and

385
00:14:47,839 --> 00:14:51,120
i mean if i went and looked at the code

386
00:14:50,720 --> 00:14:54,000
i

387
00:14:51,120 --> 00:14:54,639
i might find that right and if that's

388
00:14:54,000 --> 00:14:56,559
the case

389
00:14:54,639 --> 00:14:59,360
then you can see why we need to do this

390
00:14:56,559 --> 00:15:01,278
range-based mapping here

391
00:14:59,360 --> 00:15:04,560
but it feels to me like we could

392
00:15:01,278 --> 00:15:07,679
probably eliminate this

393
00:15:04,559 --> 00:15:10,159
entirely just by adding uh

394
00:15:07,679 --> 00:15:11,359
that additional feature now what i want

395
00:15:10,159 --> 00:15:14,000
to do first

396
00:15:11,360 --> 00:15:14,879
because i want to start removing prob

397
00:15:14,000 --> 00:15:17,839
pieces of this

398
00:15:14,879 --> 00:15:20,000
problem slowly is i'd like to get rid of

399
00:15:17,839 --> 00:15:22,720
the range mapping

400
00:15:20,000 --> 00:15:24,639
because i want to start by just looking

401
00:15:22,720 --> 00:15:28,000
at the basics here

402
00:15:24,639 --> 00:15:29,919
so i want to say that let's just do

403
00:15:28,000 --> 00:15:31,360
this first um

404
00:15:29,919 --> 00:15:35,519
[Music]

405
00:15:31,360 --> 00:15:35,519
in fact let's just do this

406
00:15:36,000 --> 00:15:39,519
and i want to get rid of that range

407
00:15:37,919 --> 00:15:40,000
mapping and then i want to see if we can

408
00:15:39,519 --> 00:15:41,600
maybe just

409
00:15:40,000 --> 00:15:43,519
remove that range mapping entirely

410
00:15:41,600 --> 00:15:44,560
because it's just extra stuff that has

411
00:15:43,519 --> 00:15:47,519
to happen

412
00:15:44,559 --> 00:15:49,599
uh for no reason in there um and so i

413
00:15:47,519 --> 00:15:52,240
don't because we already have a bug

414
00:15:49,600 --> 00:15:54,399
in that stuff there i don't anticipate

415
00:15:52,240 --> 00:15:56,159
any problems with this because i mean

416
00:15:54,399 --> 00:15:57,600
hey we've already got a bug there so we

417
00:15:56,159 --> 00:16:00,000
shouldn't

418
00:15:57,600 --> 00:16:00,879
uh cni and it looks all fine to me right

419
00:16:00,000 --> 00:16:04,159
so it looks like

420
00:16:00,879 --> 00:16:05,120
it looks like there's nothing weird

421
00:16:04,159 --> 00:16:08,480
happening there

422
00:16:05,120 --> 00:16:11,600
in particular right um

423
00:16:08,480 --> 00:16:13,440
so that all seems fine uh so i'm going

424
00:16:11,600 --> 00:16:14,399
to go ahead and say that we can just

425
00:16:13,440 --> 00:16:16,880
yank this

426
00:16:14,399 --> 00:16:18,480
and then we can go see what's going on

427
00:16:16,879 --> 00:16:21,439
with that circular

428
00:16:18,480 --> 00:16:22,000
system to find out why we're not getting

429
00:16:21,440 --> 00:16:23,920
that final

430
00:16:22,000 --> 00:16:25,198
match that we expect to have and we can

431
00:16:23,919 --> 00:16:28,319
add one more

432
00:16:25,198 --> 00:16:30,879
at the rotation point if we need to

433
00:16:28,320 --> 00:16:32,160
um we may never actually need it in

434
00:16:30,879 --> 00:16:34,240
which case we can just ignore it

435
00:16:32,159 --> 00:16:36,719
entirely

436
00:16:34,240 --> 00:16:38,240
so what we would basically do is is is

437
00:16:36,720 --> 00:16:40,399
push this out of here

438
00:16:38,240 --> 00:16:42,320
uh the difference part here would now

439
00:16:40,399 --> 00:16:45,440
take this d0

440
00:16:42,320 --> 00:16:48,639
um and it would put that in here

441
00:16:45,440 --> 00:16:49,040
right and the only problem that we would

442
00:16:48,639 --> 00:16:52,320
have

443
00:16:49,039 --> 00:16:55,360
is we have to map this zero to one

444
00:16:52,320 --> 00:16:55,600
so it wouldn't be zero to three to two

445
00:16:55,360 --> 00:16:59,759
pi

446
00:16:55,600 --> 00:17:02,879
anymore i don't know it to what extent

447
00:16:59,759 --> 00:17:04,880
that matters uh

448
00:17:02,879 --> 00:17:06,400
but in order to make this always work

449
00:17:04,880 --> 00:17:10,160
properly we would want

450
00:17:06,400 --> 00:17:11,600
um we would want to make sure that we

451
00:17:10,160 --> 00:17:13,519
you know we always tracked the

452
00:17:11,599 --> 00:17:16,480
difference

453
00:17:13,519 --> 00:17:17,199
that way so i'm going to go ahead and

454
00:17:16,480 --> 00:17:18,720
say that's

455
00:17:17,199 --> 00:17:21,360
that's what we're doing here i'm going

456
00:17:18,720 --> 00:17:21,759
to pull that tag range stuff out because

457
00:17:21,359 --> 00:17:23,599
i

458
00:17:21,759 --> 00:17:25,038
haven't liked it for a while and i kind

459
00:17:23,599 --> 00:17:26,879
of chickened out

460
00:17:25,038 --> 00:17:28,160
um on pulling it before but we're just

461
00:17:26,880 --> 00:17:30,880
going to pull it because

462
00:17:28,160 --> 00:17:31,440
i don't like it um so we're going to get

463
00:17:30,880 --> 00:17:34,640
rid

464
00:17:31,440 --> 00:17:37,759
of the tag rain stuff

465
00:17:34,640 --> 00:17:39,520
entirely um i'm going to go ahead and

466
00:17:37,759 --> 00:17:43,038
even just pull the variable

467
00:17:39,519 --> 00:17:46,240
and it's gone and now again

468
00:17:43,038 --> 00:17:47,279
i suspect that now we may introduce a

469
00:17:46,240 --> 00:17:48,798
bug with that because i don't think

470
00:17:47,279 --> 00:17:50,798
we're mapping on the zero to one range

471
00:17:48,798 --> 00:17:53,440
so we might have one okay we don't

472
00:17:50,798 --> 00:17:54,480
so it's still fine uh even with that

473
00:17:53,440 --> 00:17:58,798
change

474
00:17:54,480 --> 00:18:02,240
um and so now let me go ahead and go to

475
00:17:58,798 --> 00:18:05,200
uh the entity code where we're actually

476
00:18:02,240 --> 00:18:05,599
drawing this stuff so where we draw this

477
00:18:05,200 --> 00:18:08,160
stuff

478
00:18:05,599 --> 00:18:08,879
here um you can see this is the code for

479
00:18:08,160 --> 00:18:10,880
entity

480
00:18:08,880 --> 00:18:11,919
output which is massively over

481
00:18:10,880 --> 00:18:13,039
complicated at this point and we

482
00:18:11,919 --> 00:18:15,200
probably should streamline it at some

483
00:18:13,038 --> 00:18:19,038
point but you know what are you gonna do

484
00:18:15,200 --> 00:18:21,679
um water under the bridge so if we

485
00:18:19,038 --> 00:18:22,798
take a look at how this is mapped you

486
00:18:21,679 --> 00:18:25,840
can see it here

487
00:18:22,798 --> 00:18:26,480
uh the facing direction coming through

488
00:18:25,839 --> 00:18:28,399
here

489
00:18:26,480 --> 00:18:30,798
if we want this to be mapped in a

490
00:18:28,400 --> 00:18:32,000
regular pattern so zero to you know zero

491
00:18:30,798 --> 00:18:35,279
to one

492
00:18:32,000 --> 00:18:39,200
uh what we'd wanna do there is in the

493
00:18:35,279 --> 00:18:41,918
so in the actual

494
00:18:39,200 --> 00:18:42,558
asset import stuff right so when we

495
00:18:41,919 --> 00:18:46,640
actually

496
00:18:42,558 --> 00:18:50,079
import these um we presumably have

497
00:18:46,640 --> 00:18:52,000
like a like a tau you know um

498
00:18:50,079 --> 00:18:53,599
going on here you can see when we do

499
00:18:52,000 --> 00:18:55,599
import body

500
00:18:53,599 --> 00:18:57,199
there's this facing direction nonsense

501
00:18:55,599 --> 00:19:00,639
and then we do a y

502
00:18:57,200 --> 00:19:11,840
index mod 4 times tau 32 right go in

503
00:19:00,640 --> 00:19:11,840
and wait what

504
00:19:12,558 --> 00:19:15,440
what is that about

505
00:19:15,919 --> 00:19:22,640
why index mod 4

506
00:19:19,038 --> 00:19:22,640
times tau 32

507
00:19:23,279 --> 00:19:30,480
how is that makes sense

508
00:19:27,038 --> 00:19:34,160
and that's going to be 0 1 2 or 3.

509
00:19:30,480 --> 00:19:37,120
and then we multiply by tau 32

510
00:19:34,160 --> 00:19:38,558
isn't that wrong by 2x like that that

511
00:19:37,119 --> 00:19:41,038
would have to be pi

512
00:19:38,558 --> 00:19:41,038
wouldn't it

513
00:19:43,038 --> 00:19:46,319
is that anyone

514
00:19:47,599 --> 00:19:53,839
am i the only person who thinks that's

515
00:19:50,839 --> 00:19:53,839
weird

516
00:19:54,079 --> 00:20:02,240
because because i think that's weird

517
00:19:57,919 --> 00:20:02,240
folks i don't i don't love it

518
00:20:02,720 --> 00:20:08,720
chat hello is anyone paying attention

519
00:20:08,960 --> 00:20:13,120
i mean correct me if i'm wrong right if

520
00:20:11,440 --> 00:20:16,480
this is supposed to be facing direction

521
00:20:13,119 --> 00:20:20,000
and it was supposed to be mapped in

522
00:20:16,480 --> 00:20:23,279
the stupid world where where people

523
00:20:20,000 --> 00:20:25,119
use for some reason pi and tau to

524
00:20:23,279 --> 00:20:27,279
describe circles

525
00:20:25,119 --> 00:20:28,719
which by the way i would never do today

526
00:20:27,279 --> 00:20:31,038
we did that because when we started

527
00:20:28,720 --> 00:20:33,279
handmade hero we were

528
00:20:31,038 --> 00:20:34,960
not really being smart about it and we

529
00:20:33,279 --> 00:20:37,200
used the stupid

530
00:20:34,960 --> 00:20:38,880
math way of representing a circle which

531
00:20:37,200 --> 00:20:41,809
sucks

532
00:20:38,880 --> 00:20:47,280
um but town 32

533
00:20:41,809 --> 00:20:50,960
[Laughter]

534
00:20:47,279 --> 00:20:54,480
oh that was great oh that's so good

535
00:20:50,960 --> 00:20:58,640
it was just just off the screen

536
00:20:54,480 --> 00:20:58,640
oh that's beautiful so okay

537
00:20:59,119 --> 00:21:03,918
that's so good look at that because i'm

538
00:21:01,759 --> 00:21:05,200
like what were we doing like that's not

539
00:21:03,919 --> 00:21:09,919
gonna work

540
00:21:05,200 --> 00:21:12,960
um so that's fine that's fine

541
00:21:09,919 --> 00:21:15,759
uh yeah we need the uh

542
00:21:12,960 --> 00:21:16,000
line overflow indicators right like we

543
00:21:15,759 --> 00:21:17,200
need

544
00:21:16,000 --> 00:21:18,319
a little thing that says there's more

545
00:21:17,200 --> 00:21:21,519
there of course i could have told that

546
00:21:18,319 --> 00:21:21,519
because there's no semicolon but

547
00:21:22,240 --> 00:21:31,279
okay we're fine now

548
00:21:27,599 --> 00:21:33,199
uh yeah

549
00:21:31,279 --> 00:21:35,200
it's in it's in star code galaxy the

550
00:21:33,200 --> 00:21:35,919
circle stuff's in sarco galaxy so i

551
00:21:35,200 --> 00:21:37,519
finally

552
00:21:35,919 --> 00:21:39,200
like star code galaxy is my excuse to

553
00:21:37,519 --> 00:21:40,480
record all the things that i ever wanted

554
00:21:39,200 --> 00:21:41,919
to record where i'm just like this is

555
00:21:40,480 --> 00:21:43,279
dumb don't do it this way do it the

556
00:21:41,919 --> 00:21:45,679
right way and here's the right way right

557
00:21:43,279 --> 00:21:48,798
so it's all in there

558
00:21:45,679 --> 00:21:52,000
um but anyway uh

559
00:21:48,798 --> 00:21:55,038
so yeah uh this part right here

560
00:21:52,000 --> 00:21:56,480
is like again so

561
00:21:55,038 --> 00:21:58,480
we don't really have any reason since

562
00:21:56,480 --> 00:22:00,240
everything else is encoded zero to one

563
00:21:58,480 --> 00:22:01,519
we might as well just encode this zero

564
00:22:00,240 --> 00:22:04,319
to one as well

565
00:22:01,519 --> 00:22:05,599
right uh like i can't see any reason not

566
00:22:04,319 --> 00:22:08,399
to do that

567
00:22:05,599 --> 00:22:09,839
so we might as well just have these go

568
00:22:08,400 --> 00:22:12,720
zero to one and then we can just

569
00:22:09,839 --> 00:22:13,199
map out of the tau range on the other

570
00:22:12,720 --> 00:22:17,120
end

571
00:22:13,200 --> 00:22:19,840
right so to me it seems way smarter

572
00:22:17,119 --> 00:22:20,399
uh instead of doing this just just don't

573
00:22:19,839 --> 00:22:22,798
right

574
00:22:20,400 --> 00:22:24,080
like just don't don't actually do that

575
00:22:22,798 --> 00:22:26,400
multiplication

576
00:22:24,079 --> 00:22:27,199
because there's no point to it right it

577
00:22:26,400 --> 00:22:31,200
doesn't do

578
00:22:27,200 --> 00:22:34,558
anything for us so if we just do

579
00:22:31,200 --> 00:22:37,759
y index mod four over four uh

580
00:22:34,558 --> 00:22:41,279
that seems like a way better

581
00:22:37,759 --> 00:22:43,038
deal right uh like like

582
00:22:41,279 --> 00:22:45,440
you know i i just don't see what the

583
00:22:43,038 --> 00:22:49,599
point is of mapping these out

584
00:22:45,440 --> 00:22:50,880
uh to tau 32. so to me that seems like

585
00:22:49,599 --> 00:22:53,839
the right solution

586
00:22:50,880 --> 00:22:54,559
um and so everywhere that we're doing

587
00:22:53,839 --> 00:22:56,399
that

588
00:22:54,558 --> 00:22:59,119
that kind of garbage i think we should

589
00:22:56,400 --> 00:23:00,480
just stop so let's just stop

590
00:22:59,119 --> 00:23:02,479
uh because it makes things a little

591
00:23:00,480 --> 00:23:06,640
simpler for us so

592
00:23:02,480 --> 00:23:10,640
you know off we go now this

593
00:23:06,640 --> 00:23:10,640
what what is this about

594
00:23:11,519 --> 00:23:18,158
this looks like a just incompetence here

595
00:23:15,359 --> 00:23:19,359
right because this this doesn't look

596
00:23:18,159 --> 00:23:22,400
right at all

597
00:23:19,359 --> 00:23:25,279
um this this looks like it's just wrong

598
00:23:22,400 --> 00:23:25,679
because this this should have been just

599
00:23:25,279 --> 00:23:29,678
that

600
00:23:25,679 --> 00:23:31,360
right i mean i'm not sure

601
00:23:29,679 --> 00:23:32,640
i'm not sure what's going on there

602
00:23:31,359 --> 00:23:34,839
because the facing direction should

603
00:23:32,640 --> 00:23:37,679
should never have been

604
00:23:34,839 --> 00:23:39,199
um time should

605
00:23:37,679 --> 00:23:40,880
oh i guess i know what's going on it

606
00:23:39,200 --> 00:23:41,600
doesn't need to do a mod four because it

607
00:23:40,880 --> 00:23:44,720
only does

608
00:23:41,599 --> 00:23:47,439
four so okay nope that's fine

609
00:23:44,720 --> 00:23:49,360
um and then we've got one more down here

610
00:23:47,440 --> 00:23:53,200
i'll get rid of that one as well

611
00:23:49,359 --> 00:23:55,629
there we go uh so yeah our tau 32s

612
00:23:53,200 --> 00:23:57,038
have now been sort of exercised

613
00:23:55,630 --> 00:23:59,440
[Music]

614
00:23:57,038 --> 00:24:00,879
and i think that's all fine so if we

615
00:23:59,440 --> 00:24:02,720
recompile this now

616
00:24:00,880 --> 00:24:04,159
we will be mapping those tags the

617
00:24:02,720 --> 00:24:07,200
problem is it won't

618
00:24:04,159 --> 00:24:11,039
update our actual asset files

619
00:24:07,200 --> 00:24:11,679
so that's a problem and i don't actually

620
00:24:11,038 --> 00:24:14,558
remember

621
00:24:11,679 --> 00:24:16,159
to what extent we do reprocessing on

622
00:24:14,558 --> 00:24:18,720
here

623
00:24:16,159 --> 00:24:20,159
i think if we change the hht file it

624
00:24:18,720 --> 00:24:24,159
will reprocess those

625
00:24:20,159 --> 00:24:27,039
probably um but i don't actually know

626
00:24:24,159 --> 00:24:27,760
like like uh i don't remember to what

627
00:24:27,038 --> 00:24:29,200
extent we

628
00:24:27,759 --> 00:24:30,960
we tried to make that work i know that

629
00:24:29,200 --> 00:24:32,880
if we change the tags

630
00:24:30,960 --> 00:24:34,240
uh that it will actually try to change

631
00:24:32,880 --> 00:24:35,200
it but i don't know to what extent it

632
00:24:34,240 --> 00:24:38,720
actually does the

633
00:24:35,200 --> 00:24:39,038
hha modification stuff um properly there

634
00:24:38,720 --> 00:24:41,519
so

635
00:24:39,038 --> 00:24:42,879
i'm not sure because we you know we

636
00:24:41,519 --> 00:24:45,278
spent some time on getting the stuff to

637
00:24:42,880 --> 00:24:47,919
work properly so it's not completely

638
00:24:45,278 --> 00:24:49,278
stupid but it's also not you know a

639
00:24:47,919 --> 00:24:54,320
particularly

640
00:24:49,278 --> 00:24:57,240
exciting asset system so yeah

641
00:24:54,319 --> 00:24:58,399
uh so anyway if we go into the

642
00:24:57,240 --> 00:25:00,079
basegame.hht

643
00:24:58,400 --> 00:25:02,159
and i just like make a slight change to

644
00:25:00,079 --> 00:25:03,839
it like that so it appears slightly

645
00:25:02,159 --> 00:25:07,520
different

646
00:25:03,839 --> 00:25:09,278
i don't know if we now run um

647
00:25:07,519 --> 00:25:10,960
if that will actually work yeah so it

648
00:25:09,278 --> 00:25:12,240
doesn't look like it really remapped

649
00:25:10,960 --> 00:25:13,360
that as well you know i guess we don't

650
00:25:12,240 --> 00:25:14,079
know because we didn't change the input

651
00:25:13,359 --> 00:25:17,199
code yet so

652
00:25:14,079 --> 00:25:18,960
you know maybe it did i doubt it um so

653
00:25:17,200 --> 00:25:20,480
let's say we can actually go check the

654
00:25:18,960 --> 00:25:22,880
actual values too and see

655
00:25:20,480 --> 00:25:24,240
but if these entity facing direction

656
00:25:22,880 --> 00:25:25,919
things right now are still

657
00:25:24,240 --> 00:25:28,798
on the tau front what we can do is just

658
00:25:25,919 --> 00:25:30,720
divide by tau 32

659
00:25:28,798 --> 00:25:32,240
and that will give us and you know we

660
00:25:30,720 --> 00:25:32,960
don't even really need to divide we can

661
00:25:32,240 --> 00:25:36,720
just do

662
00:25:32,960 --> 00:25:39,440
a pre-inverted tau 32 here

663
00:25:36,720 --> 00:25:41,200
multiply by the facing direction and off

664
00:25:39,440 --> 00:25:43,200
we go

665
00:25:41,200 --> 00:25:44,319
uh and so that'll map that from zero to

666
00:25:43,200 --> 00:25:46,960
one uh

667
00:25:44,319 --> 00:25:48,079
as well so now we you know we have the

668
00:25:46,960 --> 00:25:51,120
whole thing mapped

669
00:25:48,079 --> 00:25:53,038
on the zero to one range um and and

670
00:25:51,119 --> 00:25:55,439
it looks good right it looks like it's

671
00:25:53,038 --> 00:25:57,759
it's working so i guess we do

672
00:25:55,440 --> 00:25:59,600
re-map the tabs the tags i guess we're

673
00:25:57,759 --> 00:26:01,759
better than we thought we were

674
00:25:59,599 --> 00:26:03,759
so now the only thing we have to do is

675
00:26:01,759 --> 00:26:06,879
go back in and figure out why

676
00:26:03,759 --> 00:26:10,319
the downward facing dog um

677
00:26:06,880 --> 00:26:14,320
is not downward facing and uh

678
00:26:10,319 --> 00:26:14,960
and by the way i like how hope pushing

679
00:26:14,319 --> 00:26:18,000
the alt

680
00:26:14,960 --> 00:26:19,200
key makes that happen like what is going

681
00:26:18,000 --> 00:26:21,519
on

682
00:26:19,200 --> 00:26:21,519
um

683
00:26:23,599 --> 00:26:26,879
it'll be interesting to find out what

684
00:26:25,038 --> 00:26:28,400
that bug is like those are weird things

685
00:26:26,880 --> 00:26:31,039
right they don't happen in debug mode

686
00:26:28,400 --> 00:26:33,120
something weird is going on if this

687
00:26:31,038 --> 00:26:34,558
turns out to be a visual studio compiler

688
00:26:33,119 --> 00:26:37,278
bug

689
00:26:34,558 --> 00:26:52,639
i sure hope not because if it is there's

690
00:26:37,278 --> 00:26:55,839
going to be a big old rant

691
00:26:52,640 --> 00:26:57,840
uh so anyway we

692
00:26:55,839 --> 00:26:59,199
just want to know why our downward

693
00:26:57,839 --> 00:27:02,399
facing direction

694
00:26:59,200 --> 00:27:03,200
isn't working and so our downward facing

695
00:27:02,400 --> 00:27:07,278
direction

696
00:27:03,200 --> 00:27:10,880
we would expect uh it to be

697
00:27:07,278 --> 00:27:12,960
uh 0.75 right is what we would expect we

698
00:27:10,880 --> 00:27:15,679
would expect its facing direction to be

699
00:27:12,960 --> 00:27:18,720
0.75

700
00:27:15,679 --> 00:27:21,278
when the hero is is facing downward and

701
00:27:18,720 --> 00:27:22,720
our question is just like why isn't that

702
00:27:21,278 --> 00:27:24,720
happening now if we

703
00:27:22,720 --> 00:27:26,640
go first of all just to reacquaint

704
00:27:24,720 --> 00:27:28,480
ourselves with what's supposed to be

705
00:27:26,640 --> 00:27:30,080
happening

706
00:27:28,480 --> 00:27:32,960
we would expect inside our source

707
00:27:30,079 --> 00:27:35,038
directory where we have the actual art

708
00:27:32,960 --> 00:27:36,480
that if we look at a particular orphan

709
00:27:35,038 --> 00:27:37,679
they're all they all should be the same

710
00:27:36,480 --> 00:27:39,120
i mean in this case we're talking about

711
00:27:37,679 --> 00:27:41,278
the hero

712
00:27:39,119 --> 00:27:42,158
uh it's supposed to be like going down

713
00:27:41,278 --> 00:27:46,159
from the top

714
00:27:42,159 --> 00:27:49,679
so that's 0 that's 0.25 that's 0.5

715
00:27:46,159 --> 00:27:51,520
and that's 7.75 right so those are the

716
00:27:49,679 --> 00:27:54,159
directions that the hero is supposed to

717
00:27:51,519 --> 00:27:54,158
be facing

718
00:27:54,398 --> 00:27:58,079
and i don't actually

719
00:27:59,278 --> 00:28:02,480
really okay so people in the chat are

720
00:28:01,038 --> 00:28:04,240
actually telling me that there are some

721
00:28:02,480 --> 00:28:05,679
big code gen bugs reported and fixed

722
00:28:04,240 --> 00:28:10,399
lately

723
00:28:05,679 --> 00:28:13,840
ugh um all right well that'll be fun

724
00:28:10,398 --> 00:28:17,759
anyway uh so the point

725
00:28:13,839 --> 00:28:19,759
here is just that we

726
00:28:17,759 --> 00:28:22,960
we would like to start verifying a few

727
00:28:19,759 --> 00:28:25,519
things so first of all we want to see

728
00:28:22,960 --> 00:28:26,558
we want to make sure that when we are

729
00:28:25,519 --> 00:28:29,679
facing downward

730
00:28:26,558 --> 00:28:32,240
we're properly filling in 0.75

731
00:28:29,679 --> 00:28:34,240
for the match element facing direction

732
00:28:32,240 --> 00:28:36,480
so that's one thing we have to verify

733
00:28:34,240 --> 00:28:38,159
and then we have to verify that in our

734
00:28:36,480 --> 00:28:42,880
actual get asset table

735
00:28:38,159 --> 00:28:46,559
so in get best asset

736
00:28:42,880 --> 00:28:49,840
uh so here

737
00:28:46,558 --> 00:28:52,798
we have to verify that we actually

738
00:28:49,839 --> 00:28:53,839
have an entry for that right we have to

739
00:28:52,798 --> 00:28:58,079
have an actual

740
00:28:53,839 --> 00:29:00,959
entry for the uh the asset facing that

741
00:28:58,079 --> 00:29:05,359
direction so the 0.75 asset has to be

742
00:29:00,960 --> 00:29:06,558
in here as well and then we have to see

743
00:29:05,359 --> 00:29:08,558
that you know make sure that it's

744
00:29:06,558 --> 00:29:10,000
matching the best which it should

745
00:29:08,558 --> 00:29:12,720
because it should be

746
00:29:10,000 --> 00:29:14,079
a match index of 0.75 minus the match

747
00:29:12,720 --> 00:29:15,919
index of 0.75

748
00:29:14,079 --> 00:29:17,199
right so it should produce an absolute

749
00:29:15,919 --> 00:29:18,240
value of zero which will be the highest

750
00:29:17,200 --> 00:29:21,360
possible thing

751
00:29:18,240 --> 00:29:21,839
right because it'll be minus zero um and

752
00:29:21,359 --> 00:29:24,398
so

753
00:29:21,839 --> 00:29:26,639
presumably that will just work right i

754
00:29:24,398 --> 00:29:29,918
mean that's the theory anyway

755
00:29:26,640 --> 00:29:31,600
and uh we don't know like

756
00:29:29,919 --> 00:29:33,038
what's going on here but but that's the

757
00:29:31,599 --> 00:29:34,719
hope

758
00:29:33,038 --> 00:29:36,398
so there are some of the things that

759
00:29:34,720 --> 00:29:37,919
could be intervening like

760
00:29:36,398 --> 00:29:40,959
we're doing a total match difference

761
00:29:37,919 --> 00:29:44,080
here so if for some reason like that

762
00:29:40,960 --> 00:29:46,000
that one particular body sprite import

763
00:29:44,079 --> 00:29:48,158
if there was some other bug on the

764
00:29:46,000 --> 00:29:50,720
importing where it was setting the tags

765
00:29:48,159 --> 00:29:52,080
where it set some other tags on that one

766
00:29:50,720 --> 00:29:54,240
that it shouldn't have set

767
00:29:52,079 --> 00:29:56,639
then the total match value might be

768
00:29:54,240 --> 00:30:00,159
wrong or it might just not even be

769
00:29:56,640 --> 00:30:02,480
in this hash line right

770
00:30:00,159 --> 00:30:03,840
so there's definitely some things that

771
00:30:02,480 --> 00:30:06,640
could be busted

772
00:30:03,839 --> 00:30:09,839
uh that you know we don't know so we

773
00:30:06,640 --> 00:30:09,840
have really no idea

774
00:30:10,079 --> 00:30:13,359
uh uh what's broken and we just have to

775
00:30:12,880 --> 00:30:16,080
start

776
00:30:13,359 --> 00:30:16,798
looking through uh these these various

777
00:30:16,079 --> 00:30:20,480
pieces

778
00:30:16,798 --> 00:30:22,398
now i hope and i could be wrong about

779
00:30:20,480 --> 00:30:24,240
this because if there really are a bunch

780
00:30:22,398 --> 00:30:24,879
of new code gen bugs in visual studio

781
00:30:24,240 --> 00:30:26,880
because

782
00:30:24,880 --> 00:30:28,159
you know it's that microsoft quality

783
00:30:26,880 --> 00:30:31,039
shining through

784
00:30:28,159 --> 00:30:31,039
um we

785
00:30:31,440 --> 00:30:35,120
we don't know if maybe that's a problem

786
00:30:33,599 --> 00:30:36,879
here i mean i don't think it is because

787
00:30:35,119 --> 00:30:37,278
we're messing with the asset tag system

788
00:30:36,880 --> 00:30:39,840
so

789
00:30:37,278 --> 00:30:41,278
it should be our bug is my that's my

790
00:30:39,839 --> 00:30:42,079
assumption going into it is that it's

791
00:30:41,278 --> 00:30:45,679
our bug

792
00:30:42,079 --> 00:30:47,359
not not some weird compiler thing uh

793
00:30:45,679 --> 00:30:49,278
but that means we should be able to to

794
00:30:47,359 --> 00:30:50,639
build in debug mode right we should be

795
00:30:49,278 --> 00:30:52,880
able to build in debug mode because this

796
00:30:50,640 --> 00:30:56,240
is not like the weird lighting thing

797
00:30:52,880 --> 00:30:58,799
where it's only happening in release

798
00:30:56,240 --> 00:30:59,278
that we noticed there so in debug mode

799
00:30:58,798 --> 00:31:03,038
here

800
00:30:59,278 --> 00:31:05,278
right uh i should see when i when i uh

801
00:31:03,038 --> 00:31:07,599
swing the the the fist downward what it

802
00:31:05,278 --> 00:31:10,398
looks like uh

803
00:31:07,599 --> 00:31:12,558
just just trying here yeah so when the

804
00:31:10,398 --> 00:31:13,759
hero is facing downward you can see that

805
00:31:12,558 --> 00:31:16,558
you still get this

806
00:31:13,759 --> 00:31:18,158
scenario where it's not it's not

807
00:31:16,558 --> 00:31:19,839
happening even in debug mode

808
00:31:18,159 --> 00:31:22,080
which means that we should be able to

809
00:31:19,839 --> 00:31:23,439
take a look and see what happens in that

810
00:31:22,079 --> 00:31:26,480
matching process

811
00:31:23,440 --> 00:31:27,919
uh by by checking out the the entity now

812
00:31:26,480 --> 00:31:30,079
there's a lot of ways we could do this

813
00:31:27,919 --> 00:31:32,320
but i'm just going to use like code

814
00:31:30,079 --> 00:31:33,839
aided debugging here because it's going

815
00:31:32,319 --> 00:31:36,000
to be the fastest thing i think for

816
00:31:33,839 --> 00:31:38,240
debugging this which is to say

817
00:31:36,000 --> 00:31:39,519
that i'm just going to go ahead and say

818
00:31:38,240 --> 00:31:41,759
well look

819
00:31:39,519 --> 00:31:42,720
why don't we just first right off the

820
00:31:41,759 --> 00:31:45,919
bat

821
00:31:42,720 --> 00:31:47,038
uh ask for a facing direction that's

822
00:31:45,919 --> 00:31:51,038
greater than

823
00:31:47,038 --> 00:31:53,038
0.6 right

824
00:31:51,038 --> 00:31:55,599
um and that will allow me to just set a

825
00:31:53,038 --> 00:31:55,599
breakpoint

826
00:31:58,000 --> 00:32:01,278
so that i know that you know there's a

827
00:31:59,599 --> 00:32:02,558
bunch of entities being rendered and i

828
00:32:01,278 --> 00:32:03,919
don't really want to have to worry about

829
00:32:02,558 --> 00:32:05,359
like getting to a particular one

830
00:32:03,919 --> 00:32:06,880
or or stepping through this a bunch of

831
00:32:05,359 --> 00:32:08,079
times and finding it i just want a thing

832
00:32:06,880 --> 00:32:09,679
that'll like stop

833
00:32:08,079 --> 00:32:11,519
on somebody who's trying to look this

834
00:32:09,679 --> 00:32:13,120
thing up right

835
00:32:11,519 --> 00:32:14,720
uh and so what i'm going to do is i'm

836
00:32:13,119 --> 00:32:15,599
just going to make a piece of code there

837
00:32:14,720 --> 00:32:17,038
that i know

838
00:32:15,599 --> 00:32:18,798
checks for the things that i want to

839
00:32:17,038 --> 00:32:20,879
check specifically

840
00:32:18,798 --> 00:32:22,639
and then i'm going to go try and you

841
00:32:20,880 --> 00:32:25,039
know let me see here

842
00:32:22,640 --> 00:32:25,038
entity

843
00:32:26,079 --> 00:32:29,519
uh and and then i'm just gonna try and

844
00:32:27,599 --> 00:32:30,240
and set a break point there and step

845
00:32:29,519 --> 00:32:32,159
through and see

846
00:32:30,240 --> 00:32:33,599
like how that matching is happening and

847
00:32:32,159 --> 00:32:35,039
you know i highly recommend that kind of

848
00:32:33,599 --> 00:32:38,240
coding if you've never done it before

849
00:32:35,038 --> 00:32:40,480
inserting code into the actual project

850
00:32:38,240 --> 00:32:42,319
that does a bunch of sophisticated

851
00:32:40,480 --> 00:32:43,519
detection potentially and then has a

852
00:32:42,319 --> 00:32:46,158
place to pre

853
00:32:43,519 --> 00:32:46,720
put a break point is just really handy

854
00:32:46,159 --> 00:32:48,080
right

855
00:32:46,720 --> 00:32:50,880
and there's really no downside to it you

856
00:32:48,079 --> 00:32:52,480
can always remove it later

857
00:32:50,880 --> 00:32:54,080
after you're done debugging so it

858
00:32:52,480 --> 00:32:57,519
doesn't really matter

859
00:32:54,079 --> 00:32:58,079
uh of course that that assumes i guess

860
00:32:57,519 --> 00:33:00,880
that there

861
00:32:58,079 --> 00:33:01,599
is a way to actually stop the code here

862
00:33:00,880 --> 00:33:04,720
so

863
00:33:01,599 --> 00:33:08,319
that is bad uh

864
00:33:04,720 --> 00:33:12,240
do we need an update or something

865
00:33:08,319 --> 00:33:15,599
um did they break pdbs again

866
00:33:12,240 --> 00:33:16,159
george anyone it looks like we can't

867
00:33:15,599 --> 00:33:20,959
actually

868
00:33:16,159 --> 00:33:24,559
load um for some reason

869
00:33:20,960 --> 00:33:25,120
i don't know why like debug-wise that's

870
00:33:24,558 --> 00:33:29,839
not

871
00:33:25,119 --> 00:33:29,839
that ain't happening um

872
00:33:31,359 --> 00:33:35,359
yeah so did they break wow

873
00:33:35,919 --> 00:33:40,880
they broke pdbs too are you kidding me

874
00:33:46,240 --> 00:33:53,519
so this is why for actual work

875
00:33:50,480 --> 00:33:55,919
like on my main dev machine

876
00:33:53,519 --> 00:33:58,399
i just don't update the compiler i just

877
00:33:55,919 --> 00:33:59,919
have a static copy of it

878
00:33:58,398 --> 00:34:03,839
that i like pulled out the compiler

879
00:33:59,919 --> 00:34:03,840
piece from and i just never update it

880
00:34:04,839 --> 00:34:07,839
right

881
00:34:10,639 --> 00:34:14,159
so george if i update remedy will i be

882
00:34:13,440 --> 00:34:17,358
able to set

883
00:34:14,159 --> 00:34:17,358
a breakpoint or not

884
00:34:18,398 --> 00:34:21,838
this is not the latest

885
00:34:23,838 --> 00:34:28,159
do you think if i updated to the new one

886
00:34:26,878 --> 00:34:30,559
we would be okay because i can do that

887
00:34:28,159 --> 00:34:30,559
right now

888
00:34:31,599 --> 00:34:35,838
should be able to okay great

889
00:34:39,838 --> 00:34:51,759
let's do that

890
00:34:49,199 --> 00:34:52,319
all right i am going to go ahead and

891
00:34:51,760 --> 00:34:56,399
grab

892
00:34:52,320 --> 00:34:59,119
a new remedy then

893
00:34:56,398 --> 00:35:01,598
that is as soon as i remember where the

894
00:34:59,119 --> 00:35:04,720
thumb drive is here it is

895
00:35:01,599 --> 00:35:08,160
uh so i apologize

896
00:35:04,719 --> 00:35:11,279
for taking a quick break

897
00:35:08,159 --> 00:35:15,000
but we will need to grab a new

898
00:35:11,280 --> 00:35:18,000
remedy bg from the illustrious

899
00:35:15,000 --> 00:35:18,000
itch.io

900
00:35:20,400 --> 00:35:24,160
always a pleasure

901
00:35:28,838 --> 00:35:31,838
and

902
00:35:33,920 --> 00:35:45,838
let's see

903
00:35:49,199 --> 00:35:53,759
this is the music by the way that goes

904
00:35:51,679 --> 00:35:58,199
with handmade hero

905
00:35:53,760 --> 00:36:03,599
da da

906
00:35:58,199 --> 00:36:07,039
[Music]

907
00:36:03,599 --> 00:36:08,559
okay so i have now downloaded

908
00:36:07,039 --> 00:36:10,000
i also grabbed the new copy of four

909
00:36:08,559 --> 00:36:11,759
coder because i saw ryan saying

910
00:36:10,000 --> 00:36:12,239
something about the fact that it exists

911
00:36:11,760 --> 00:36:16,000
now

912
00:36:12,239 --> 00:36:19,519
i guess i don't actually know

913
00:36:16,000 --> 00:36:22,320
um so

914
00:36:19,519 --> 00:36:22,960
i tried to grab both of those and now i

915
00:36:22,320 --> 00:36:27,110
will

916
00:36:22,960 --> 00:36:28,880
will put over to the other machine

917
00:36:27,110 --> 00:36:32,000
[Music]

918
00:36:28,880 --> 00:36:33,920
let's see here if this worked i don't

919
00:36:32,000 --> 00:36:38,320
know if it did

920
00:36:33,920 --> 00:36:39,200
um and we can try to grab i won't try to

921
00:36:38,320 --> 00:36:41,200
grab

922
00:36:39,199 --> 00:36:43,439
four coder because that's working fine

923
00:36:41,199 --> 00:36:47,598
like we don't need to

924
00:36:43,440 --> 00:36:52,159
mess with that um but i will try to grab

925
00:36:47,599 --> 00:36:52,160
the new remedy so here we are

926
00:36:52,838 --> 00:36:59,920
in apps

927
00:36:56,559 --> 00:37:03,838
remedy and

928
00:36:59,920 --> 00:37:03,838
we will close that down

929
00:37:04,559 --> 00:37:10,000
and we will

930
00:37:07,599 --> 00:37:10,800
delete this one because we don't need it

931
00:37:10,000 --> 00:37:14,719
anymore

932
00:37:10,800 --> 00:37:16,480
and we will overwrite those replace

933
00:37:14,719 --> 00:37:18,159
and now we have a new version of remedy

934
00:37:16,480 --> 00:37:21,280
in theory anyway

935
00:37:18,159 --> 00:37:25,519
and we'll deal with this later

936
00:37:21,280 --> 00:37:28,960
so now possibly

937
00:37:25,519 --> 00:37:31,280
uh if i re-run remedy maybe

938
00:37:28,960 --> 00:37:33,760
we will be in a good state i don't

939
00:37:31,280 --> 00:37:33,760
actually know

940
00:37:34,838 --> 00:37:40,400
um

941
00:37:36,880 --> 00:37:43,280
looks like i have to open my save file

942
00:37:40,400 --> 00:37:43,280
for some reason

943
00:37:49,358 --> 00:37:53,679
okay for some reason everything has been

944
00:37:52,239 --> 00:37:56,959
rearranged

945
00:37:53,679 --> 00:37:58,559
and i don't know uh why that is

946
00:37:56,960 --> 00:38:00,800
but we'll just assume there's some

947
00:37:58,559 --> 00:38:04,480
reason why that is

948
00:38:00,800 --> 00:38:06,720
um and

949
00:38:04,480 --> 00:38:08,320
i'll try to reconstruct this stuff at

950
00:38:06,719 --> 00:38:11,358
some point i guess

951
00:38:08,320 --> 00:38:12,640
i don't remember how we had it uh but at

952
00:38:11,358 --> 00:38:14,880
the very least it's probably something

953
00:38:12,639 --> 00:38:17,679
like this

954
00:38:14,880 --> 00:38:19,358
the watch window was up here presumably

955
00:38:17,679 --> 00:38:21,838
this stuff was down here

956
00:38:19,358 --> 00:38:23,358
and then i had the disassembly somewhere

957
00:38:21,838 --> 00:38:26,239
there it is

958
00:38:23,358 --> 00:38:27,920
um and that was like probably down here

959
00:38:26,239 --> 00:38:33,838
would be my guess

960
00:38:27,920 --> 00:38:33,838
uh and

961
00:38:34,239 --> 00:38:39,679
i don't know that we ever used the

962
00:38:36,320 --> 00:38:39,680
register window

963
00:38:39,838 --> 00:38:42,239
um

964
00:38:43,760 --> 00:38:50,079
on stream very often but you know

965
00:38:46,960 --> 00:38:51,679
all right um maybe i'll put that down

966
00:38:50,079 --> 00:38:52,240
here all right so that seems good i

967
00:38:51,679 --> 00:38:55,039
don't know how

968
00:38:52,239 --> 00:38:57,039
how do i save this uh can i because it i

969
00:38:55,039 --> 00:38:57,440
guess it got you know can i save this

970
00:38:57,039 --> 00:39:01,838
here

971
00:38:57,440 --> 00:39:04,800
or something save

972
00:39:01,838 --> 00:39:04,799
handmade hero

973
00:39:07,599 --> 00:39:10,079
like that

974
00:39:10,639 --> 00:39:15,279
all right so we're just gonna assume

975
00:39:13,920 --> 00:39:17,760
that that's good

976
00:39:15,280 --> 00:39:19,280
uh we don't know but we're gonna assume

977
00:39:17,760 --> 00:39:22,640
that that's fine

978
00:39:19,280 --> 00:39:26,320
and we are then going to go uh

979
00:39:22,639 --> 00:39:28,719
try to get this thing to break

980
00:39:26,320 --> 00:39:29,838
uh in the piece of code that i created

981
00:39:28,719 --> 00:39:34,399
that is the breakpoint

982
00:39:29,838 --> 00:39:36,880
so right there um and it doesn't work

983
00:39:34,400 --> 00:39:36,880
apparently

984
00:39:38,000 --> 00:39:44,239
so i guess i guess we're just

985
00:39:41,119 --> 00:39:46,400
i guess that's the end of it um

986
00:39:44,239 --> 00:39:48,078
and and that means we don't really know

987
00:39:46,400 --> 00:39:51,358
that that could be

988
00:39:48,079 --> 00:39:54,079
visual studio i guess um

989
00:39:51,358 --> 00:39:55,119
because we're running the right remedy

990
00:39:54,079 --> 00:39:58,560
now

991
00:39:55,119 --> 00:40:02,320
right this is 333 so

992
00:39:58,559 --> 00:40:02,320
i don't know um

993
00:40:04,400 --> 00:40:11,039
i can force it to break there

994
00:40:07,760 --> 00:40:14,480
by just doing a you know

995
00:40:11,039 --> 00:40:14,880
an n3 or something but the problem with

996
00:40:14,480 --> 00:40:18,000
that

997
00:40:14,880 --> 00:40:19,519
is presumably if the pdb isn't working

998
00:40:18,000 --> 00:40:20,400
properly we wouldn't be able to step

999
00:40:19,519 --> 00:40:24,559
through the code

1000
00:40:20,400 --> 00:40:28,000
so it doesn't actually matter um

1001
00:40:24,559 --> 00:40:28,480
that that that's the case so i'm not

1002
00:40:28,000 --> 00:40:30,719
sure

1003
00:40:28,480 --> 00:40:31,760
that that'll help but i mean i can try

1004
00:40:30,719 --> 00:40:32,569
it

1005
00:40:31,760 --> 00:40:34,880
right um

1006
00:40:32,570 --> 00:40:37,359
[Music]

1007
00:40:34,880 --> 00:40:38,160
i think that's the msvc intrinsic for

1008
00:40:37,358 --> 00:40:41,199
that

1009
00:40:38,159 --> 00:40:41,199
i don't i don't actually know

1010
00:40:42,000 --> 00:40:47,039
um it's been a while since i've typed it

1011
00:40:44,880 --> 00:40:47,039
in

1012
00:40:50,960 --> 00:40:58,000
whoa what is going on

1013
00:40:55,920 --> 00:41:00,240
there's just some really weird things

1014
00:40:58,000 --> 00:41:03,519
happening

1015
00:41:00,239 --> 00:41:03,519
that are just super strange

1016
00:41:04,000 --> 00:41:11,039
so the debug break there

1017
00:41:07,760 --> 00:41:13,839
does not trigger even though i would

1018
00:41:11,039 --> 00:41:13,838
think it would

1019
00:41:18,838 --> 00:41:21,920
um

1020
00:41:20,000 --> 00:41:24,239
mean unless it was actually getting set

1021
00:41:21,920 --> 00:41:26,480
to like negative

1022
00:41:24,239 --> 00:41:28,559
pi so it never actually goes over five

1023
00:41:26,480 --> 00:41:31,679
which which could be possible

1024
00:41:28,559 --> 00:41:35,199
um so so i guess i'll

1025
00:41:31,679 --> 00:41:35,759
i'll just mean let's let's just make

1026
00:41:35,199 --> 00:41:38,879
sure that

1027
00:41:35,760 --> 00:41:40,720
anything's working so this should

1028
00:41:38,880 --> 00:41:44,000
you know any time if any entity can

1029
00:41:40,719 --> 00:41:44,000
render at all it should break

1030
00:41:44,318 --> 00:41:50,719
right okay um

1031
00:41:48,480 --> 00:41:50,719
so

1032
00:41:51,519 --> 00:41:55,519
oh hey look and i can actually so so it

1033
00:41:54,400 --> 00:41:58,240
looks like i can

1034
00:41:55,519 --> 00:42:00,000
actually debug this now if i debug break

1035
00:41:58,239 --> 00:42:03,039
in it

1036
00:42:00,000 --> 00:42:04,800
well that's a good sign right i mean

1037
00:42:03,039 --> 00:42:07,039
that's a plus

1038
00:42:04,800 --> 00:42:08,960
so let's take a look here so for some

1039
00:42:07,039 --> 00:42:11,599
reason we never actually break

1040
00:42:08,960 --> 00:42:13,119
in this uh routine which would explain

1041
00:42:11,599 --> 00:42:16,640
why we're never picking

1042
00:42:13,119 --> 00:42:18,880
um why we're never picking that

1043
00:42:16,639 --> 00:42:20,960
element so i guess the next question

1044
00:42:18,880 --> 00:42:21,838
would be like how is facing direction

1045
00:42:20,960 --> 00:42:24,960
getting set

1046
00:42:21,838 --> 00:42:26,719
in that case right like like what are we

1047
00:42:24,960 --> 00:42:27,838
doing for facing direction it must be

1048
00:42:26,719 --> 00:42:31,759
getting set in a

1049
00:42:27,838 --> 00:42:35,759
to like a negative value or something

1050
00:42:31,760 --> 00:42:38,240
such that you know it we can't ever

1051
00:42:35,760 --> 00:42:39,040
pick the higher values so so let's find

1052
00:42:38,239 --> 00:42:41,838
out

1053
00:42:39,039 --> 00:42:43,279
uh because i don't know um what's going

1054
00:42:41,838 --> 00:42:45,838
on there

1055
00:42:43,280 --> 00:42:45,839
so

1056
00:42:46,639 --> 00:42:51,708
facing direction

1057
00:42:48,420 --> 00:42:51,709
[Music]

1058
00:42:52,480 --> 00:42:59,838
facing direction

1059
00:43:01,838 --> 00:43:05,279
i mean that's pretty obviously setting

1060
00:43:03,519 --> 00:43:07,679
it to what we want for

1061
00:43:05,280 --> 00:43:08,319
like the orphans for example and you

1062
00:43:07,679 --> 00:43:10,480
know what

1063
00:43:08,318 --> 00:43:11,599
so strictly out of curiosity what's

1064
00:43:10,480 --> 00:43:15,519
happening

1065
00:43:11,599 --> 00:43:15,519
with those orphans um

1066
00:43:21,199 --> 00:43:28,239
like how how is it possible that

1067
00:43:24,719 --> 00:43:29,598
if we set this to 0.75 times tau

1068
00:43:28,239 --> 00:43:31,919
how is it possible that we're not

1069
00:43:29,599 --> 00:43:33,519
getting that like what if we

1070
00:43:31,920 --> 00:43:35,440
what if we hop over to one of those

1071
00:43:33,519 --> 00:43:38,800
orphans like what's

1072
00:43:35,440 --> 00:43:41,838
what did the or what do we see

1073
00:43:38,800 --> 00:43:41,839
like now i'd have no idea

1074
00:43:56,400 --> 00:44:00,720
and like the orphans aren't there

1075
00:44:03,119 --> 00:44:07,680
curiouser and curiouser like that's

1076
00:44:06,239 --> 00:44:10,799
where the orphan

1077
00:44:07,679 --> 00:44:14,480
would be right

1078
00:44:10,800 --> 00:44:14,960
um and so that's pretty weird did we

1079
00:44:14,480 --> 00:44:19,119
turn

1080
00:44:14,960 --> 00:44:19,119
off orphan placement or something

1081
00:44:19,199 --> 00:44:24,318
because right that that would be this

1082
00:44:22,079 --> 00:44:27,440
this would produce

1083
00:44:24,318 --> 00:44:29,039
the orphan and the fact that we have a

1084
00:44:27,440 --> 00:44:32,318
conversation

1085
00:44:29,039 --> 00:44:35,039
area right

1086
00:44:32,318 --> 00:44:36,880
would seem to suggest that the orphan

1087
00:44:35,039 --> 00:44:41,119
must have gotten placed

1088
00:44:36,880 --> 00:44:45,599
right like like some something's pretty

1089
00:44:41,119 --> 00:44:49,440
off there um

1090
00:44:45,599 --> 00:44:52,480
if i go to add orphan which uh

1091
00:44:49,440 --> 00:44:56,318
is in the entity gen

1092
00:44:52,480 --> 00:44:59,480
so uh this code here

1093
00:44:56,318 --> 00:45:04,960
it sure looks like there should be one

1094
00:44:59,480 --> 00:45:07,760
right um i don't know man

1095
00:45:04,960 --> 00:45:09,440
this is getting weirder and weirder uh

1096
00:45:07,760 --> 00:45:11,760
so all right

1097
00:45:09,440 --> 00:45:12,800
so that seems weird because we should be

1098
00:45:11,760 --> 00:45:15,680
at least getting

1099
00:45:12,800 --> 00:45:16,119
orphans placed at facing directions 0.0

1100
00:45:15,679 --> 00:45:18,879
uh

1101
00:45:16,119 --> 00:45:21,358
0.75 times tau which should have mapped

1102
00:45:18,880 --> 00:45:22,800
to 0.75 when you multiply back out tau

1103
00:45:21,358 --> 00:45:26,239
again

1104
00:45:22,800 --> 00:45:27,599
um well we divide by tau right like

1105
00:45:26,239 --> 00:45:30,959
effectively

1106
00:45:27,599 --> 00:45:32,960
so that's very suspicious

1107
00:45:30,960 --> 00:45:34,639
like i don't know what to make of that

1108
00:45:32,960 --> 00:45:37,599
um

1109
00:45:34,639 --> 00:45:38,400
but it's weird and i don't like it so

1110
00:45:37,599 --> 00:45:41,760
let's

1111
00:45:38,400 --> 00:45:44,960
go ahead and and i guess uh

1112
00:45:41,760 --> 00:45:48,480
look at what the actual uh hero code

1113
00:45:44,960 --> 00:45:48,480
sets the facing direction too

1114
00:45:49,199 --> 00:45:56,078
so okay so that that

1115
00:45:52,239 --> 00:45:59,598
would be the explanation there

1116
00:45:56,079 --> 00:46:01,519
probably right for no real reason we're

1117
00:45:59,599 --> 00:46:03,760
calling a tan two which will which would

1118
00:46:01,519 --> 00:46:06,960
map to like a negative

1119
00:46:03,760 --> 00:46:10,400
right um because

1120
00:46:06,960 --> 00:46:13,440
a tan two's range is not is not zero to

1121
00:46:10,400 --> 00:46:16,318
to tau it's it's uh

1122
00:46:13,440 --> 00:46:16,318
it's negative

1123
00:46:17,599 --> 00:46:24,240
it's negative pi to pi usually

1124
00:46:21,199 --> 00:46:27,358
um so that's probably why that

1125
00:46:24,239 --> 00:46:28,318
isn't working but why the orphans aren't

1126
00:46:27,358 --> 00:46:31,440
there

1127
00:46:28,318 --> 00:46:34,880
that i don't know so we're gonna have to

1128
00:46:31,440 --> 00:46:36,400
figure out why we don't see any orphans

1129
00:46:34,880 --> 00:46:39,760
that that doesn't really make

1130
00:46:36,400 --> 00:46:43,838
make good sense so yeah

1131
00:46:39,760 --> 00:46:43,839
facing direction wise

1132
00:46:48,318 --> 00:46:54,079
i guess that to me suggests that if

1133
00:46:51,838 --> 00:46:54,719
we're going to treat that as our facing

1134
00:46:54,079 --> 00:46:58,079
direction

1135
00:46:54,719 --> 00:47:01,919
range which is fine um

1136
00:46:58,079 --> 00:47:05,760
then this needs to be uh remapped

1137
00:47:01,920 --> 00:47:11,838
so that basically like you know there's

1138
00:47:05,760 --> 00:47:11,839
something along the lines of

1139
00:47:13,280 --> 00:47:16,079
probably this

1140
00:47:18,800 --> 00:47:26,720
so we'd we'd take this thing and

1141
00:47:23,599 --> 00:47:29,599
we would check to see if the facing is

1142
00:47:26,719 --> 00:47:29,598
less than zero

1143
00:47:32,000 --> 00:47:35,358
and then assuming that the facing is

1144
00:47:34,400 --> 00:47:37,358
less than zero

1145
00:47:35,358 --> 00:47:38,639
we know that we actually want to map

1146
00:47:37,358 --> 00:47:42,400
that area

1147
00:47:38,639 --> 00:47:45,519
right that was less than zero to

1148
00:47:42,400 --> 00:47:49,358
the um the region that leads

1149
00:47:45,519 --> 00:47:51,280
up to one right so assuming it's less

1150
00:47:49,358 --> 00:47:54,078
than zero we know that now

1151
00:47:51,280 --> 00:47:54,720
um because we did 1 over tau 32 we're

1152
00:47:54,079 --> 00:47:59,280
going to get

1153
00:47:54,719 --> 00:48:02,480
like 0 to 0.5 and that'll work properly

1154
00:47:59,280 --> 00:48:04,400
but then instead of getting 0.5 to 1

1155
00:48:02,480 --> 00:48:06,000
we're actually going to get 0 to

1156
00:48:04,400 --> 00:48:09,519
negative 0.5

1157
00:48:06,000 --> 00:48:13,358
so we just need to start right

1158
00:48:09,519 --> 00:48:14,880
at 1 and subtract what we were doing

1159
00:48:13,358 --> 00:48:16,159
before or i guess i should say add

1160
00:48:14,880 --> 00:48:19,200
because it's negative

1161
00:48:16,159 --> 00:48:20,318
so as you get more and more negative

1162
00:48:19,199 --> 00:48:24,000
you're just sort of

1163
00:48:20,318 --> 00:48:27,119
uh subtracting away from one right

1164
00:48:24,000 --> 00:48:28,639
and i believe that should be what we

1165
00:48:27,119 --> 00:48:32,240
actually need

1166
00:48:28,639 --> 00:48:36,879
um to make the facing direction be

1167
00:48:32,239 --> 00:48:36,879
be proper there right um

1168
00:48:38,159 --> 00:48:41,358
what's the warning

1169
00:48:41,760 --> 00:48:49,839
oh sorry

1170
00:48:55,929 --> 00:49:02,318
[Music]

1171
00:48:59,920 --> 00:49:03,920
so that was all we needed um and now you

1172
00:49:02,318 --> 00:49:06,960
can see that it's correct

1173
00:49:03,920 --> 00:49:09,358
uh in debug mode here

1174
00:49:06,960 --> 00:49:11,599
um so that's all good but we still don't

1175
00:49:09,358 --> 00:49:14,639
know why we're not seeing any orphans

1176
00:49:11,599 --> 00:49:15,280
right so where did our orphans go so so

1177
00:49:14,639 --> 00:49:18,719
let's

1178
00:49:15,280 --> 00:49:20,960
before we go any further uh let's

1179
00:49:18,719 --> 00:49:22,719
let's go in there and see like where all

1180
00:49:20,960 --> 00:49:24,720
our orphans done gone

1181
00:49:22,719 --> 00:49:26,558
um because you know there's orphans in

1182
00:49:24,719 --> 00:49:27,519
each one of these rooms in theory has an

1183
00:49:26,559 --> 00:49:29,760
orphan in it

1184
00:49:27,519 --> 00:49:31,519
but we don't see any orphan now that

1185
00:49:29,760 --> 00:49:33,839
could because the tags on the orphans

1186
00:49:31,519 --> 00:49:37,280
are wrong

1187
00:49:33,838 --> 00:49:39,599
in a sense meaning that like

1188
00:49:37,280 --> 00:49:39,599
you know

1189
00:49:41,280 --> 00:49:44,640
that would be why they wouldn't be

1190
00:49:42,400 --> 00:49:45,119
drawing anything but we had a debug

1191
00:49:44,639 --> 00:49:48,879
break

1192
00:49:45,119 --> 00:49:50,640
in here and we didn't actually ever see

1193
00:49:48,880 --> 00:49:53,119
it hit even though their facing

1194
00:49:50,639 --> 00:49:57,039
direction clearly should have been

1195
00:49:53,119 --> 00:50:00,160
uh possible for that to occur

1196
00:49:57,039 --> 00:50:01,759
so that's a little bit weird so i'm

1197
00:50:00,159 --> 00:50:02,799
going to try setting another debug break

1198
00:50:01,760 --> 00:50:06,000
in here

1199
00:50:02,800 --> 00:50:07,280
uh just for fun what i'm going to do is

1200
00:50:06,000 --> 00:50:10,719
i just want to see

1201
00:50:07,280 --> 00:50:12,400
if we get a a orphan

1202
00:50:10,719 --> 00:50:14,239
something that we can identify as an

1203
00:50:12,400 --> 00:50:18,160
orphan so

1204
00:50:14,239 --> 00:50:21,439
when we do um trying to think of

1205
00:50:18,159 --> 00:50:22,318
how to do this the brain when we when we

1206
00:50:21,440 --> 00:50:26,079
set the brain

1207
00:50:22,318 --> 00:50:28,400
of these in the the place orphan call so

1208
00:50:26,079 --> 00:50:32,559
or add orphan i should say

1209
00:50:28,400 --> 00:50:34,400
um when we place the orphan here

1210
00:50:32,559 --> 00:50:36,400
so there's a there's even more things

1211
00:50:34,400 --> 00:50:37,200
that are weird so this is supposed to be

1212
00:50:36,400 --> 00:50:41,200
a collider

1213
00:50:37,199 --> 00:50:43,519
so you're it's supposed to take up space

1214
00:50:41,199 --> 00:50:44,558
right uh and you're not supposed to be

1215
00:50:43,519 --> 00:50:47,838
able to walk

1216
00:50:44,559 --> 00:50:48,960
like where it is so that's a little

1217
00:50:47,838 --> 00:50:51,599
weird too

1218
00:50:48,960 --> 00:50:53,199
i don't know what to make of that either

1219
00:50:51,599 --> 00:50:54,000
there's so there's just a lot of weird

1220
00:50:53,199 --> 00:50:56,399
stuff going on

1221
00:50:54,000 --> 00:50:58,400
here and i'm not sure how to assess it

1222
00:50:56,400 --> 00:51:01,440
it's it's very strange

1223
00:50:58,400 --> 00:51:02,240
so uh we want to probably look at this

1224
00:51:01,440 --> 00:51:03,760
code and see

1225
00:51:02,239 --> 00:51:05,519
like maybe we just set a breakpoint at

1226
00:51:03,760 --> 00:51:07,359
orphan assuming we can step into it i

1227
00:51:05,519 --> 00:51:11,039
don't know if we can or not

1228
00:51:07,358 --> 00:51:15,920
um but assuming we can step into it we

1229
00:51:11,039 --> 00:51:18,079
probably want to uh

1230
00:51:15,920 --> 00:51:20,000
just see why we can why can we walk on

1231
00:51:18,079 --> 00:51:22,160
that square as well so that we might

1232
00:51:20,000 --> 00:51:24,400
have other bugs but we'll see

1233
00:51:22,159 --> 00:51:26,480
so let's start by assessing the tags

1234
00:51:24,400 --> 00:51:29,280
first so what would the tags be here

1235
00:51:26,480 --> 00:51:31,039
there's an asset body and an asset head

1236
00:51:29,280 --> 00:51:33,760
for the orphans and if we look at the

1237
00:51:31,039 --> 00:51:36,079
place orphan call

1238
00:51:33,760 --> 00:51:38,319
it looks like the way this works is it

1239
00:51:36,079 --> 00:51:39,519
has that orphan tag name associated with

1240
00:51:38,318 --> 00:51:42,719
it

1241
00:51:39,519 --> 00:51:47,039
it adds the orphan tag and

1242
00:51:42,719 --> 00:51:51,838
then it doesn't add the orphan

1243
00:51:47,039 --> 00:51:51,838
name tag anywhere

1244
00:51:55,199 --> 00:51:59,439
okay it does at the very end so it adds

1245
00:51:58,559 --> 00:52:02,960
the orphan

1246
00:51:59,440 --> 00:52:05,280
tag and then the orphan name tag and so

1247
00:52:02,960 --> 00:52:08,079
when we're doing a place orphan you can

1248
00:52:05,280 --> 00:52:11,200
see that there's like a bunch of them

1249
00:52:08,079 --> 00:52:11,519
so if we look back at the hht i'm i'm

1250
00:52:11,199 --> 00:52:14,558
now

1251
00:52:11,519 --> 00:52:19,199
just gonna look to see um

1252
00:52:14,559 --> 00:52:23,519
what's actually going on here so for the

1253
00:52:19,199 --> 00:52:23,519
okay i think i see what's going on here

1254
00:52:25,280 --> 00:52:29,280
so the problem here is is actually

1255
00:52:27,599 --> 00:52:29,920
pretty simple so i think what we're

1256
00:52:29,280 --> 00:52:33,440
seeing

1257
00:52:29,920 --> 00:52:36,159
is the actual bodies so here are the

1258
00:52:33,440 --> 00:52:37,760
heads right but the bodies don't line up

1259
00:52:36,159 --> 00:52:40,480
with those

1260
00:52:37,760 --> 00:52:43,280
right so we probably just need the

1261
00:52:40,480 --> 00:52:47,280
bodies to be the same names as the heads

1262
00:52:43,280 --> 00:52:51,040
is probably what we need to do here so

1263
00:52:47,280 --> 00:52:53,280
what we want to do is go to

1264
00:52:51,039 --> 00:52:53,279
like

1265
00:52:55,760 --> 00:52:59,599
i'm assuming that they're numbered the

1266
00:52:57,440 --> 00:53:01,358
same i don't actually know

1267
00:52:59,599 --> 00:53:03,119
but if they're numbered the same then

1268
00:53:01,358 --> 00:53:03,679
probably what we do is we just go to

1269
00:53:03,119 --> 00:53:06,480
like

1270
00:53:03,679 --> 00:53:07,519
head orphan and we just look at what we

1271
00:53:06,480 --> 00:53:10,480
labeled those

1272
00:53:07,519 --> 00:53:11,119
so like head orphan one is sunny so we

1273
00:53:10,480 --> 00:53:16,240
just say

1274
00:53:11,119 --> 00:53:20,480
sunny two is lambert

1275
00:53:16,239 --> 00:53:20,479
uh then we have carla

1276
00:53:22,159 --> 00:53:29,838
cassidy drew

1277
00:53:30,079 --> 00:53:33,809
cline

1278
00:53:30,730 --> 00:53:33,809
[Music]

1279
00:53:37,280 --> 00:53:43,839
giles slade

1280
00:53:44,960 --> 00:53:50,329
baby viva

1281
00:53:49,838 --> 00:53:53,469
dylan

1282
00:53:50,329 --> 00:53:53,469
[Music]

1283
00:53:54,838 --> 00:54:00,159
rhoda

1284
00:53:57,358 --> 00:54:00,159
and laird

1285
00:54:01,760 --> 00:54:08,800
all right um

1286
00:54:05,199 --> 00:54:10,558
so yeah so assuming okay cannot find

1287
00:54:08,800 --> 00:54:11,280
build.bat i don't know why we're having

1288
00:54:10,559 --> 00:54:15,599
trouble

1289
00:54:11,280 --> 00:54:18,000
with that either uh with the build.bat

1290
00:54:15,599 --> 00:54:19,039
but it must be because it's not in the

1291
00:54:18,000 --> 00:54:22,079
right i don't know

1292
00:54:19,039 --> 00:54:25,838
who knows um so anyway

1293
00:54:22,079 --> 00:54:25,839
if we uh

1294
00:54:27,039 --> 00:54:31,358
if we go ahead now and run it i would

1295
00:54:30,480 --> 00:54:36,000
suspect

1296
00:54:31,358 --> 00:54:36,000
that we probably will have orphans um

1297
00:54:37,280 --> 00:54:43,680
i want to take a look though at uh

1298
00:54:40,559 --> 00:54:43,680
at this in release mode

1299
00:54:45,599 --> 00:54:48,400
and then we kind of still have the

1300
00:54:46,960 --> 00:54:49,838
problem of like what's the weird stuff

1301
00:54:48,400 --> 00:54:51,200
that's going on with the lighting so

1302
00:54:49,838 --> 00:54:52,400
we don't we don't really know like where

1303
00:54:51,199 --> 00:54:52,960
that's coming from so we're going to

1304
00:54:52,400 --> 00:54:55,039
have to

1305
00:54:52,960 --> 00:54:56,400
take a look at that obviously but um so

1306
00:54:55,039 --> 00:54:59,519
if we take a look here

1307
00:54:56,400 --> 00:54:59,760
um that's so strange i don't know what's

1308
00:54:59,519 --> 00:55:01,759
going

1309
00:54:59,760 --> 00:55:03,040
it must just be a really bad bug so now

1310
00:55:01,760 --> 00:55:06,559
we should have orphans and

1311
00:55:03,039 --> 00:55:10,000
and luckily we do have orphans um

1312
00:55:06,559 --> 00:55:11,760
right you can see them there and if we

1313
00:55:10,000 --> 00:55:13,119
look the only weird part is they're

1314
00:55:11,760 --> 00:55:15,280
facing the wrong direction

1315
00:55:13,119 --> 00:55:16,240
so so that's a little strange and i

1316
00:55:15,280 --> 00:55:17,680
don't know

1317
00:55:16,239 --> 00:55:18,719
why that would be because we looked and

1318
00:55:17,679 --> 00:55:20,480
it looked like they were pointing the

1319
00:55:18,719 --> 00:55:22,719
right direction

1320
00:55:20,480 --> 00:55:24,159
so something's up with that that place

1321
00:55:22,719 --> 00:55:25,519
orphan thing is placing them in the

1322
00:55:24,159 --> 00:55:27,819
wrong direction

1323
00:55:25,519 --> 00:55:30,239
we also now in theory um

1324
00:55:27,820 --> 00:55:34,559
[Music]

1325
00:55:30,239 --> 00:55:38,479
so if we want to uh

1326
00:55:34,559 --> 00:55:40,720
to actually add the proper connections

1327
00:55:38,480 --> 00:55:41,679
here we can so they can have the heads

1328
00:55:40,719 --> 00:55:48,480
as well

1329
00:55:41,679 --> 00:55:50,480
uh if we do an ad and we we do a

1330
00:55:48,480 --> 00:55:52,240
placement so i i don't even really

1331
00:55:50,480 --> 00:55:55,599
remember how this stuff works

1332
00:55:52,239 --> 00:55:59,838
um so this is base of neck right

1333
00:55:55,599 --> 00:56:03,680
and we can like adjust where it is

1334
00:55:59,838 --> 00:56:06,480
um i like i said don't really remember

1335
00:56:03,679 --> 00:56:07,440
very much about how this stuff works uh

1336
00:56:06,480 --> 00:56:09,358
but if we

1337
00:56:07,440 --> 00:56:11,119
if we swap between these right we can

1338
00:56:09,358 --> 00:56:14,000
add the

1339
00:56:11,119 --> 00:56:16,000
i guess is it top of head no it's it's

1340
00:56:14,000 --> 00:56:18,318
just default uh

1341
00:56:16,000 --> 00:56:20,480
for this one so i don't remember how

1342
00:56:18,318 --> 00:56:24,798
this stuff works at all

1343
00:56:20,480 --> 00:56:26,880
i guess the this is like the connection

1344
00:56:24,798 --> 00:56:28,079
on the thing but i i feel like we had i

1345
00:56:26,880 --> 00:56:31,280
thought we had a way

1346
00:56:28,079 --> 00:56:32,880
where we could see it um right where we

1347
00:56:31,280 --> 00:56:34,480
could we could actually look

1348
00:56:32,880 --> 00:56:36,480
and see but it looks like we're not

1349
00:56:34,480 --> 00:56:38,000
drawing those squares properly that's

1350
00:56:36,480 --> 00:56:39,760
probably part of the weird rendering

1351
00:56:38,000 --> 00:56:41,920
bugs we're experiencing

1352
00:56:39,760 --> 00:56:43,520
um but so we don't really know like

1353
00:56:41,920 --> 00:56:46,559
where the placement point

1354
00:56:43,519 --> 00:56:49,920
is on this thing which is a problem

1355
00:56:46,559 --> 00:56:52,000
so we're going to have to debug that but

1356
00:56:49,920 --> 00:56:54,880
like i said we can actually have orphans

1357
00:56:52,000 --> 00:56:58,400
now which is nice

1358
00:56:54,880 --> 00:57:02,318
so the problem uh at the moment

1359
00:56:58,400 --> 00:57:04,240
anyway is separate from all of that

1360
00:57:02,318 --> 00:57:05,679
the facing direction here is like

1361
00:57:04,239 --> 00:57:08,479
obviously wrong

1362
00:57:05,679 --> 00:57:09,480
you know what i'm saying so we said that

1363
00:57:08,480 --> 00:57:12,240
they were supposed to be

1364
00:57:09,480 --> 00:57:13,920
0.75 but that's not the facing direction

1365
00:57:12,239 --> 00:57:16,318
they actually have

1366
00:57:13,920 --> 00:57:18,000
so something's up with that and i have

1367
00:57:16,318 --> 00:57:20,239
no idea what

1368
00:57:18,000 --> 00:57:21,760
um if we look at place orphan and

1369
00:57:20,239 --> 00:57:22,879
there's this result facing direction

1370
00:57:21,760 --> 00:57:25,920
thing here

1371
00:57:22,880 --> 00:57:27,358
i don't know if if like maybe this is

1372
00:57:25,920 --> 00:57:31,838
getting overwritten

1373
00:57:27,358 --> 00:57:31,838
somehow right um

1374
00:57:31,920 --> 00:57:38,079
you know who knows so

1375
00:57:35,119 --> 00:57:39,039
when this gets set and i don't know

1376
00:57:38,079 --> 00:57:41,359
maybe it gets

1377
00:57:39,039 --> 00:57:42,480
the place entity stuff overwrites it or

1378
00:57:41,358 --> 00:57:45,119
something

1379
00:57:42,480 --> 00:57:45,838
we could try stepping through this and

1380
00:57:45,119 --> 00:57:49,358
seeing

1381
00:57:45,838 --> 00:57:53,119
does does somebody get

1382
00:57:49,358 --> 00:57:54,960
um does somebody like overwrite that

1383
00:57:53,119 --> 00:57:56,880
in some way when it actually goes to

1384
00:57:54,960 --> 00:57:57,599
place the entity like does it even use

1385
00:57:56,880 --> 00:57:59,200
that

1386
00:57:57,599 --> 00:58:00,720
and and you know or does it forget to

1387
00:57:59,199 --> 00:58:02,960
use that or something

1388
00:58:00,719 --> 00:58:04,078
so i believe in the room gen that's

1389
00:58:02,960 --> 00:58:06,000
where this happens

1390
00:58:04,079 --> 00:58:07,839
um where it goes through and places the

1391
00:58:06,000 --> 00:58:11,039
entities uh

1392
00:58:07,838 --> 00:58:12,639
there's like right like in here

1393
00:58:11,039 --> 00:58:14,798
you can see it finds a place to place

1394
00:58:12,639 --> 00:58:16,879
entity puts the entity down

1395
00:58:14,798 --> 00:58:18,880
uh here's where the the thing happens

1396
00:58:16,880 --> 00:58:23,838
right the entity gets placed

1397
00:58:18,880 --> 00:58:23,838
and you know yeah like it doesn't

1398
00:58:24,559 --> 00:58:30,000
it doesn't seem like anybody does that

1399
00:58:31,760 --> 00:58:37,839
right um

1400
00:58:44,559 --> 00:58:50,319
so yeah it adds the entity

1401
00:58:48,559 --> 00:58:52,480
it sets the facing direction but you

1402
00:58:50,318 --> 00:58:54,239
know this is this is already an

1403
00:58:52,480 --> 00:58:56,559
entity so it feels like the facing

1404
00:58:54,239 --> 00:59:00,479
direction should just be

1405
00:58:56,559 --> 00:59:01,839
used there is it possible that the

1406
00:59:00,480 --> 00:59:05,838
facing direction is not

1407
00:59:01,838 --> 00:59:05,838
packed is not saved

1408
00:59:10,079 --> 00:59:13,359
i mean i suppose that's possible

1409
00:59:14,000 --> 00:59:19,838
so if we look at like

1410
00:59:25,920 --> 00:59:29,639
if we look at where this is actually

1411
00:59:27,679 --> 00:59:30,838
being processed

1412
00:59:29,639 --> 00:59:33,440
[Music]

1413
00:59:30,838 --> 00:59:37,039
so

1414
00:59:33,440 --> 00:59:39,679
it looks like we're we're really not

1415
00:59:37,039 --> 00:59:42,159
talking about this value in very many

1416
00:59:39,679 --> 00:59:42,159
places

1417
00:59:43,679 --> 00:59:48,399
this right here

1418
00:59:49,358 --> 00:59:56,960
so that's not used

1419
00:59:52,559 --> 01:00:00,798
right so that's wouldn't be an issue

1420
00:59:56,960 --> 01:00:03,199
we don't care about this or that

1421
01:00:00,798 --> 01:00:04,798
so yeah i mean i don't know why that

1422
01:00:03,199 --> 01:00:08,879
would get overwritten anywhere

1423
01:00:04,798 --> 01:00:08,880
this all looks like basically

1424
01:00:11,119 --> 01:00:15,519
that's that's for the snake so we don't

1425
01:00:13,199 --> 01:00:18,639
care about that

1426
01:00:15,519 --> 01:00:18,639
this is for the hero

1427
01:00:23,838 --> 01:00:27,039
yeah so so i mean i don't know why that

1428
01:00:26,159 --> 01:00:30,318
would not

1429
01:00:27,039 --> 01:00:31,679
be set properly right because no one

1430
01:00:30,318 --> 01:00:33,920
clears it

1431
01:00:31,679 --> 01:00:36,318
and i don't see any reason why it

1432
01:00:33,920 --> 01:00:39,760
wouldn't

1433
01:00:36,318 --> 01:00:42,318
just work right

1434
01:00:39,760 --> 01:00:44,160
like i don't see i don't see the point i

1435
01:00:42,318 --> 01:00:45,759
don't i don't see you

1436
01:00:44,159 --> 01:00:48,000
i don't see the point where that would

1437
01:00:45,760 --> 01:00:49,599
get undone so so i would have been

1438
01:00:48,000 --> 01:00:53,119
expecting that to come through

1439
01:00:49,599 --> 01:00:55,920
properly uh and it's obviously not

1440
01:00:53,119 --> 01:00:57,200
because if it were we would be seeing

1441
01:00:55,920 --> 01:01:01,838
the entity pointing

1442
01:00:57,199 --> 01:01:05,118
downward i don't really see

1443
01:01:01,838 --> 01:01:05,119
much of a way around that

1444
01:01:06,000 --> 01:01:09,358
so let's go ahead and see if we can find

1445
01:01:08,960 --> 01:01:12,480
out

1446
01:01:09,358 --> 01:01:14,880
what the heck's going on there uh

1447
01:01:12,480 --> 01:01:15,599
let's switch to debug mode and let's

1448
01:01:14,880 --> 01:01:19,200
step through

1449
01:01:15,599 --> 01:01:21,359
if we can uh the the place orphan call

1450
01:01:19,199 --> 01:01:22,399
for example just you know step through

1451
01:01:21,358 --> 01:01:24,078
some of this if we can

1452
01:01:22,400 --> 01:01:25,519
you know i don't know if we can yeah so

1453
01:01:24,079 --> 01:01:28,000
it's like only that file

1454
01:01:25,519 --> 01:01:29,759
uh or only the setting breakpoints in

1455
01:01:28,000 --> 01:01:31,440
that particular file was a problem which

1456
01:01:29,760 --> 01:01:33,599
i'm not sure why but it just looks like

1457
01:01:31,440 --> 01:01:36,960
something was wrong with that

1458
01:01:33,599 --> 01:01:40,400
um so in here

1459
01:01:36,960 --> 01:01:40,400
here's us setting this thing

1460
01:01:41,440 --> 01:01:45,920
if we look at the entity that we create

1461
01:01:43,039 --> 01:01:49,039
it's got a facing direction right there

1462
01:01:45,920 --> 01:01:50,240
you know it's setting it

1463
01:01:49,039 --> 01:01:52,159
pretty much exactly the way you would

1464
01:01:50,239 --> 01:01:54,879
expect so there isn't anything

1465
01:01:52,159 --> 01:01:56,480
particularly weird going on there uh and

1466
01:01:54,880 --> 01:01:58,318
then when we place the entity

1467
01:01:56,480 --> 01:01:59,838
it doesn't look like it it modified it

1468
01:01:58,318 --> 01:02:03,038
at all um

1469
01:01:59,838 --> 01:02:06,239
so that you know still looks pretty much

1470
01:02:03,039 --> 01:02:06,960
correct right like i mean it i just

1471
01:02:06,239 --> 01:02:08,639
don't see

1472
01:02:06,960 --> 01:02:11,070
anything particularly weird happening

1473
01:02:08,639 --> 01:02:14,179
there uh

1474
01:02:11,070 --> 01:02:14,179
[Music]

1475
01:02:18,838 --> 01:02:22,558
so

1476
01:02:20,480 --> 01:02:25,119
i can't say i would know what would be

1477
01:02:22,559 --> 01:02:27,119
going on

1478
01:02:25,119 --> 01:02:29,280
i i can't have any idea like why that

1479
01:02:27,119 --> 01:02:32,880
would be a problem

1480
01:02:29,280 --> 01:02:33,839
so if we go back here and try to set a

1481
01:02:32,880 --> 01:02:36,798
break

1482
01:02:33,838 --> 01:02:37,759
um inside the entity drawing routines

1483
01:02:36,798 --> 01:02:41,038
now

1484
01:02:37,760 --> 01:02:43,599
uh and and we just look i guess so

1485
01:02:41,039 --> 01:02:44,160
somebody is is like wiping that facing

1486
01:02:43,599 --> 01:02:47,039
direction

1487
01:02:44,159 --> 01:02:48,078
at some point somebody's clearing it out

1488
01:02:47,039 --> 01:02:50,000
right

1489
01:02:48,079 --> 01:02:51,920
and so i'm assuming that if we went in

1490
01:02:50,000 --> 01:02:56,480
here and

1491
01:02:51,920 --> 01:02:59,519
we set a check where we said if facing

1492
01:02:56,480 --> 01:03:01,280
is greater than 0.5 debug break

1493
01:02:59,519 --> 01:03:02,798
this is what we did before and i'm just

1494
01:03:01,280 --> 01:03:06,400
assuming we would even

1495
01:03:02,798 --> 01:03:08,880
though we know we should see it we never

1496
01:03:06,400 --> 01:03:11,760
we never see that right we never see

1497
01:03:08,880 --> 01:03:11,760
that case get hit

1498
01:03:14,400 --> 01:03:17,920
and so i have to push downward to get it

1499
01:03:16,239 --> 01:03:20,239
to go which is what we would expect

1500
01:03:17,920 --> 01:03:20,240
right

1501
01:03:24,559 --> 01:03:27,760
so now let's try hopping up i won't push

1502
01:03:26,480 --> 01:03:29,599
downward let's try hopping up to an

1503
01:03:27,760 --> 01:03:30,640
orphan and we won't see that case get

1504
01:03:29,599 --> 01:03:32,640
hit i assume

1505
01:03:30,639 --> 01:03:34,400
and so then at that point i don't know

1506
01:03:32,639 --> 01:03:36,639
maybe we set a data break point and see

1507
01:03:34,400 --> 01:03:38,318
who clears it

1508
01:03:36,639 --> 01:03:39,519
because i don't know why it's getting

1509
01:03:38,318 --> 01:03:40,558
clear doesn't look like anyone should be

1510
01:03:39,519 --> 01:03:43,679
able to clear it

1511
01:03:40,559 --> 01:03:45,519
i mean and you know um and there's our

1512
01:03:43,679 --> 01:03:48,480
orphans right there right there

1513
01:03:45,519 --> 01:03:50,000
and we can see that they're pointing uh

1514
01:03:48,480 --> 01:03:53,679
the wrong direction

1515
01:03:50,000 --> 01:03:59,838
so uh so something is weird

1516
01:03:53,679 --> 01:04:03,199
there um

1517
01:03:59,838 --> 01:04:06,000
yeah that's a mystery so

1518
01:04:03,199 --> 01:04:07,759
what we need to do now is yeah just see

1519
01:04:06,000 --> 01:04:10,719
if there's some way that i can

1520
01:04:07,760 --> 01:04:11,520
uh check to see why we're getting that

1521
01:04:10,719 --> 01:04:13,199
clear

1522
01:04:11,519 --> 01:04:15,920
what i might do like i said is to see if

1523
01:04:13,199 --> 01:04:18,480
i can set a data break point there

1524
01:04:15,920 --> 01:04:21,440
where we can go in here we can look at

1525
01:04:18,480 --> 01:04:24,559
the result facing direction

1526
01:04:21,440 --> 01:04:27,920
which is this and just see if anyone

1527
01:04:24,559 --> 01:04:30,798
wipes it out um so i'm going to try

1528
01:04:27,920 --> 01:04:34,000
sending a breakpoint

1529
01:04:30,798 --> 01:04:36,719
and let's see

1530
01:04:34,000 --> 01:04:38,079
i need to know i mean i need to know the

1531
01:04:36,719 --> 01:04:39,679
address i don't know

1532
01:04:38,079 --> 01:04:41,280
if i can actually take the address here

1533
01:04:39,679 --> 01:04:44,719
let's see

1534
01:04:41,280 --> 01:04:49,440
if i can so uh result

1535
01:04:44,719 --> 01:04:52,959
facing direction did that work

1536
01:04:49,440 --> 01:04:55,838
uh i mean it

1537
01:04:52,960 --> 01:04:55,838
might have

1538
01:04:57,039 --> 01:05:01,039
the only problem is i i need that to be

1539
01:04:59,280 --> 01:05:01,280
well hopefully it just kind of snaps it

1540
01:05:01,039 --> 01:05:09,839
and

1541
01:05:01,280 --> 01:05:09,839
stays so um i'll try

1542
01:05:11,599 --> 01:05:16,880
okay so

1543
01:05:15,199 --> 01:05:18,399
it does get cleared and so you know what

1544
01:05:16,880 --> 01:05:21,440
i think i know what this clear is

1545
01:05:18,400 --> 01:05:22,079
didn't we introduce a clear um in the

1546
01:05:21,440 --> 01:05:25,358
entity

1547
01:05:22,079 --> 01:05:27,200
system so you can see uh if you

1548
01:05:25,358 --> 01:05:30,239
look at the entities did we put that

1549
01:05:27,199 --> 01:05:30,239
below the line

1550
01:05:30,559 --> 01:05:37,839
perhaps because here's the clear right

1551
01:05:38,000 --> 01:05:41,760
no it looks like that's above the clear

1552
01:05:39,519 --> 01:05:41,759
though

1553
01:05:42,079 --> 01:05:48,480
so all right well so who is this

1554
01:05:45,119 --> 01:05:51,920
let's look at the call stack um

1555
01:05:48,480 --> 01:05:54,159
here's zero size push size

1556
01:05:51,920 --> 01:05:54,159
so

1557
01:05:56,798 --> 01:06:04,239
so this is just reclaiming so this

1558
01:06:00,318 --> 01:06:07,519
this memory is getting vaped

1559
01:06:04,239 --> 01:06:08,798
which makes uh you know it makes sense

1560
01:06:07,519 --> 01:06:12,400
right because

1561
01:06:08,798 --> 01:06:14,719
that just gets pushed

1562
01:06:12,400 --> 01:06:16,318
into permanent store like that's just

1563
01:06:14,719 --> 01:06:16,639
temporary scratch storage and it's gonna

1564
01:06:16,318 --> 01:06:19,920
get

1565
01:06:16,639 --> 01:06:24,159
moved it's gonna get copied right into

1566
01:06:19,920 --> 01:06:25,280
the um into the backing store the world

1567
01:06:24,159 --> 01:06:26,719
chunks

1568
01:06:25,280 --> 01:06:28,720
and when it copies it into the world

1569
01:06:26,719 --> 01:06:32,798
chunks you know we

1570
01:06:28,719 --> 01:06:34,480
we don't

1571
01:06:32,798 --> 01:06:36,000
at that point the this version of it

1572
01:06:34,480 --> 01:06:36,719
will just get thrown away so this is

1573
01:06:36,000 --> 01:06:38,719
actually

1574
01:06:36,719 --> 01:06:39,919
exactly what you would expect so that

1575
01:06:38,719 --> 01:06:41,118
method of tracking it's not really going

1576
01:06:39,920 --> 01:06:42,559
to work

1577
01:06:41,119 --> 01:06:45,440
uh we would need something that actually

1578
01:06:42,559 --> 01:06:47,359
followed it through right

1579
01:06:45,440 --> 01:06:48,960
but at least we know you know that is

1580
01:06:47,358 --> 01:06:49,838
happening there so you know do we have

1581
01:06:48,960 --> 01:06:53,280
some kind of

1582
01:06:49,838 --> 01:06:55,599
bug in the chunk stuff maybe like

1583
01:06:53,280 --> 01:06:57,440
where we forgot about something we were

1584
01:06:55,599 --> 01:06:59,280
doing where the chunks get pushed on

1585
01:06:57,440 --> 01:07:01,280
and they're like not copying the whole

1586
01:06:59,280 --> 01:07:04,640
thing or something

1587
01:07:01,280 --> 01:07:08,000
uh so like the packed entity size

1588
01:07:04,639 --> 01:07:10,318
right um something like that

1589
01:07:08,000 --> 01:07:11,039
so i don't know that's like one option

1590
01:07:10,318 --> 01:07:16,239
you can see

1591
01:07:11,039 --> 01:07:16,240
discard everything after is like

1592
01:07:16,400 --> 01:07:20,480
it's right here and it's just getting

1593
01:07:18,239 --> 01:07:23,439
rid of this stuff

1594
01:07:20,480 --> 01:07:25,199
so really yeah it doesn't look like

1595
01:07:23,440 --> 01:07:29,838
there'd be anything

1596
01:07:25,199 --> 01:07:29,838
strange going on there

1597
01:07:30,639 --> 01:07:33,519
doesn't look likely

1598
01:07:40,838 --> 01:07:46,078
hmm all right

1599
01:07:43,838 --> 01:07:46,078
so

1600
01:07:50,880 --> 01:07:54,798
i can't think of any easy way to debug

1601
01:07:53,039 --> 01:07:56,880
this

1602
01:07:54,798 --> 01:07:59,519
other than to start to track the entity

1603
01:07:56,880 --> 01:07:59,920
through to see what actually happens to

1604
01:07:59,519 --> 01:08:02,400
it

1605
01:07:59,920 --> 01:08:02,400
so like

1606
01:08:06,400 --> 01:08:11,599
like we track it on when it gets packed

1607
01:08:08,400 --> 01:08:13,280
back up

1608
01:08:11,599 --> 01:08:14,640
and we look at what the facing direction

1609
01:08:13,280 --> 01:08:17,199
was i guess

1610
01:08:14,639 --> 01:08:18,399
right i mean i can't i can't think of

1611
01:08:17,198 --> 01:08:20,079
anything else to do

1612
01:08:18,399 --> 01:08:24,158
you'd track it you'd see what the face

1613
01:08:20,079 --> 01:08:27,439
interaction was

1614
01:08:24,158 --> 01:08:29,439
um when it gets packed

1615
01:08:27,439 --> 01:08:31,599
and then when you unpack it again so

1616
01:08:29,439 --> 01:08:36,479
each each individual time right

1617
01:08:31,600 --> 01:08:38,239
we would we would do that and

1618
01:08:36,479 --> 01:08:40,238
so i'm just gonna do that because i

1619
01:08:38,238 --> 01:08:43,198
don't see i don't see a shortcut here

1620
01:08:40,238 --> 01:08:44,079
we're just gonna have to check so i'm

1621
01:08:43,198 --> 01:08:48,238
gonna go ahead

1622
01:08:44,079 --> 01:08:48,238
and and just do like you know

1623
01:08:48,798 --> 01:08:56,238
that and when we go to create an

1624
01:08:53,039 --> 01:08:56,960
orphan uh since all of the orphans are

1625
01:08:56,238 --> 01:08:59,358
broken

1626
01:08:56,960 --> 01:09:02,640
right there's no there's no it's not

1627
01:08:59,359 --> 01:09:02,640
like only one of them

1628
01:09:02,798 --> 01:09:08,158
is bugged out i'm just gonna say when we

1629
01:09:06,000 --> 01:09:12,000
go through and add these orphans they're

1630
01:09:08,158 --> 01:09:15,519
all just going to have debug set to true

1631
01:09:12,000 --> 01:09:17,838
so any orphan that you know

1632
01:09:15,520 --> 01:09:17,839
um

1633
01:09:19,520 --> 01:09:26,000
oh it is oh

1634
01:09:23,439 --> 01:09:27,358
it is a fake entity okay well that's the

1635
01:09:26,000 --> 01:09:30,960
whole bug right there then

1636
01:09:27,359 --> 01:09:32,640
okay so those do create gen entities

1637
01:09:30,960 --> 01:09:34,000
which just have a temporary facing

1638
01:09:32,640 --> 01:09:36,798
direction which we

1639
01:09:34,000 --> 01:09:37,119
didn't copy when we actually create the

1640
01:09:36,798 --> 01:09:39,759
thing

1641
01:09:37,119 --> 01:09:41,198
all right well so that was stupid it's

1642
01:09:39,759 --> 01:09:44,158
just been too long

1643
01:09:41,198 --> 01:09:44,719
just been too long uh since we since we

1644
01:09:44,158 --> 01:09:49,519
did this

1645
01:09:44,719 --> 01:09:52,960
that's pretty much it so never mind

1646
01:09:49,520 --> 01:09:54,320
never mind about it uh so that's all

1647
01:09:52,960 --> 01:09:56,640
it's just when we're placing these

1648
01:09:54,319 --> 01:09:58,238
entities uh when we look at these gen

1649
01:09:56,640 --> 01:10:01,440
entities here

1650
01:09:58,238 --> 01:10:03,839
uh get entity at traversible

1651
01:10:01,439 --> 01:10:03,839
i guess

1652
01:10:05,119 --> 01:10:09,359
this picks it wait but when does this

1653
01:10:08,319 --> 01:10:12,960
actually work so

1654
01:10:09,359 --> 01:10:14,880
we go through the entities we find place

1655
01:10:12,960 --> 01:10:18,560
to put an entity group

1656
01:10:14,880 --> 01:10:22,640
we query we loop through them we

1657
01:10:18,560 --> 01:10:22,640
then try to get the entity

1658
01:10:23,679 --> 01:10:27,119
at traversable but

1659
01:10:28,079 --> 01:10:34,880
what does how does that work

1660
01:10:31,119 --> 01:10:34,880
pending entity creator

1661
01:10:37,520 --> 01:10:43,040
oh it's gen entity wow

1662
01:10:41,119 --> 01:10:44,238
so i thought that said get my like my

1663
01:10:43,039 --> 01:10:47,039
eyesight's so bad

1664
01:10:44,238 --> 01:10:48,399
at this point so that was the whole

1665
01:10:47,039 --> 01:10:49,760
thing when i read that i thought it was

1666
01:10:48,399 --> 01:10:51,198
just queer unity but that's actually the

1667
01:10:49,760 --> 01:10:54,400
thing that generates sanity

1668
01:10:51,198 --> 01:10:57,198
so that's the problem right

1669
01:10:54,399 --> 01:10:57,519
so when this says gen an idiot traverse

1670
01:10:57,198 --> 01:11:02,559
at

1671
01:10:57,520 --> 01:11:12,159
traversible it does the generator right

1672
01:11:02,560 --> 01:11:14,960
and it's supposed to i assume do this

1673
01:11:12,158 --> 01:11:14,960
and it just wasn't

1674
01:11:15,520 --> 01:11:18,960
right um

1675
01:11:19,119 --> 01:11:22,719
it's it's the gen entity call though so

1676
01:11:21,679 --> 01:11:23,760
it looks like we don't have to actually

1677
01:11:22,719 --> 01:11:25,439
even pass that

1678
01:11:23,760 --> 01:11:27,840
so i guess i guess it has to be done out

1679
01:11:25,439 --> 01:11:27,839
here

1680
01:11:31,439 --> 01:11:33,919
like that

1681
01:11:39,198 --> 01:11:41,839
looks like

1682
01:11:46,719 --> 01:11:54,158
okay so i think

1683
01:11:50,640 --> 01:11:56,239
that solidar quote-unquote bug which was

1684
01:11:54,158 --> 01:11:59,039
just us being stupid it's not much of a

1685
01:11:56,238 --> 01:11:59,039
bug um

1686
01:11:59,840 --> 01:12:04,159
so i think now we're just down to the

1687
01:12:02,000 --> 01:12:08,319
whatever that very strange

1688
01:12:04,158 --> 01:12:12,399
sort of spooky lighting

1689
01:12:08,319 --> 01:12:14,319
bug that only happens in release mode um

1690
01:12:12,399 --> 01:12:16,158
the people on the chat are saying visual

1691
01:12:14,319 --> 01:12:18,238
studio might be implicated in which i

1692
01:12:16,158 --> 01:12:20,079
hope not i hope it's just our bug

1693
01:12:18,238 --> 01:12:22,000
if it's a video visual studio bug i

1694
01:12:20,079 --> 01:12:25,279
don't know what we would do about that

1695
01:12:22,000 --> 01:12:26,158
exactly um but i guess that's where

1696
01:12:25,279 --> 01:12:29,519
we're at so

1697
01:12:26,158 --> 01:12:32,559
we will go and start looking at that uh

1698
01:12:29,520 --> 01:12:34,800
but yeah since it only happens in

1699
01:12:32,560 --> 01:12:37,120
release mode that's going to be a real

1700
01:12:34,800 --> 01:12:38,480
pain in the butt but that's where we're

1701
01:12:37,119 --> 01:12:42,880
at

1702
01:12:38,479 --> 01:12:42,879
um okay

1703
01:12:47,920 --> 01:12:51,520
so now we're good that's actually the

1704
01:12:50,079 --> 01:12:56,719
correct thing

1705
01:12:51,520 --> 01:12:56,719
um let me take a look and see

1706
01:12:57,119 --> 01:13:05,840
if i can

1707
01:13:06,079 --> 01:13:12,479
so there's the base of of uh neck

1708
01:13:09,359 --> 01:13:15,198
put in there um again the problem that i

1709
01:13:12,479 --> 01:13:17,119
have here is i just don't know

1710
01:13:15,198 --> 01:13:18,879
i can't see the little squares so we

1711
01:13:17,119 --> 01:13:19,439
should probably go debug why we're not

1712
01:13:18,880 --> 01:13:21,760
drawing

1713
01:13:19,439 --> 01:13:22,639
why we're not seeing those little cubes

1714
01:13:21,760 --> 01:13:24,079
um oh

1715
01:13:22,640 --> 01:13:26,159
right you just have to turn to debug

1716
01:13:24,079 --> 01:13:27,840
camera that's it okay so let's go

1717
01:13:26,158 --> 01:13:29,519
through and like actually put in the

1718
01:13:27,840 --> 01:13:30,960
alignment points for our orphans so that

1719
01:13:29,520 --> 01:13:34,239
when we hop around we actually have our

1720
01:13:30,960 --> 01:13:36,470
orphans because you know why not

1721
01:13:34,238 --> 01:13:37,759
so i'm going to go in here i'm going to

1722
01:13:36,470 --> 01:13:41,119
[Music]

1723
01:13:37,760 --> 01:13:44,960
i'm going to edit this

1724
01:13:41,119 --> 01:13:49,119
and so if i add the alignment point

1725
01:13:44,960 --> 01:13:51,039
here that's the alignment point

1726
01:13:49,119 --> 01:13:53,198
i should be able to place it like right

1727
01:13:51,039 --> 01:13:56,399
at the base of the neck which is like

1728
01:13:53,198 --> 01:13:58,799
there right uh

1729
01:13:56,399 --> 01:13:58,799
and

1730
01:13:59,520 --> 01:14:05,760
this one

1731
01:14:02,800 --> 01:14:06,640
uh now needs like a top of head

1732
01:14:05,760 --> 01:14:10,400
placement

1733
01:14:06,640 --> 01:14:13,039
right uh and that goes to the parent

1734
01:14:10,399 --> 01:14:13,039
doesn't it right

1735
01:14:14,880 --> 01:14:21,440
oh not top of head sorry default yeah

1736
01:14:18,640 --> 01:14:22,079
and those should be aligned kind of like

1737
01:14:21,439 --> 01:14:25,678
that

1738
01:14:22,079 --> 01:14:29,119
probably i don't know

1739
01:14:25,679 --> 01:14:33,279
probably like that i don't know

1740
01:14:29,119 --> 01:14:37,840
um and then we can save

1741
01:14:33,279 --> 01:14:37,840
this stuff right so we just hit save

1742
01:14:39,439 --> 01:14:44,319
yeah um and now so i think

1743
01:14:42,880 --> 01:14:46,239
like that little built-in editor that we

1744
01:14:44,319 --> 01:14:46,880
made you know that seems to have worked

1745
01:14:46,238 --> 01:14:50,000
okay

1746
01:14:46,880 --> 01:14:52,239
right does look about right um

1747
01:14:50,000 --> 01:14:54,640
and and now we have we have our orphan

1748
01:14:52,238 --> 01:14:56,479
right it looks like that's a little off

1749
01:14:54,640 --> 01:14:58,079
though right like the place where the

1750
01:14:56,479 --> 01:14:59,919
head is placed looks a little

1751
01:14:58,079 --> 01:15:01,600
off because you can see the neck doesn't

1752
01:14:59,920 --> 01:15:02,158
quite work there so i feel like we want

1753
01:15:01,600 --> 01:15:11,840
it

1754
01:15:02,158 --> 01:15:11,839
to be down a little bit maybe so let me

1755
01:15:19,520 --> 01:15:25,840
i'm not sure who's more the problem

1756
01:15:21,840 --> 01:15:25,840
there but probably this one

1757
01:15:49,520 --> 01:15:53,280
i'm not sure how we're going to deal

1758
01:15:51,039 --> 01:15:54,719
with that it looks like

1759
01:15:53,279 --> 01:15:58,319
you know they're gonna slide a little

1760
01:15:54,719 --> 01:15:59,679
bit too much relative to each other

1761
01:15:58,319 --> 01:16:01,439
we haven't really thought much about

1762
01:15:59,679 --> 01:16:06,800
this right but

1763
01:16:01,439 --> 01:16:11,279
oh and that looks

1764
01:16:06,800 --> 01:16:13,360
yeah that looks like that's too high

1765
01:16:11,279 --> 01:16:14,719
as well so like yeah okay so i probably

1766
01:16:13,359 --> 01:16:18,839
screwed this up a little bit

1767
01:16:14,719 --> 01:16:22,079
so that's the placement there

1768
01:16:18,840 --> 01:16:24,880
this maybe needs to be

1769
01:16:22,079 --> 01:16:28,399
done slightly differently i'm not sure

1770
01:16:24,880 --> 01:16:28,400
how that's supposed to work though

1771
01:16:29,920 --> 01:16:34,158
yeah i think i don't quite get it like

1772
01:16:32,800 --> 01:16:38,640
this is

1773
01:16:34,158 --> 01:16:38,639
offset a little too much isn't it

1774
01:16:38,880 --> 01:16:44,319
or maybe not my recollection of how this

1775
01:16:42,640 --> 01:16:45,600
system works is not great but you know

1776
01:16:44,319 --> 01:16:49,279
these two points are for

1777
01:16:45,600 --> 01:16:51,760
aligning um

1778
01:16:49,279 --> 01:16:52,479
the the the different boxes here right

1779
01:16:51,760 --> 01:16:56,079
so

1780
01:16:52,479 --> 01:16:58,639
you can see me showing the uh

1781
01:16:56,079 --> 01:17:00,479
the different pieces of this so this is

1782
01:16:58,640 --> 01:17:02,719
the base of neck point which is where

1783
01:17:00,479 --> 01:17:05,119
that's supposed to like attach

1784
01:17:02,719 --> 01:17:06,000
this is the attach point for this thing

1785
01:17:05,119 --> 01:17:09,920
and the

1786
01:17:06,000 --> 01:17:12,079
offset is for uh making sure they move

1787
01:17:09,920 --> 01:17:16,560
at sort of slightly different

1788
01:17:12,079 --> 01:17:17,920
uh rates but i just don't know

1789
01:17:16,560 --> 01:17:19,679
like it seems like there's it seems like

1790
01:17:17,920 --> 01:17:20,960
you also need like an offset parameter

1791
01:17:19,679 --> 01:17:24,319
which we don't actually have

1792
01:17:20,960 --> 01:17:26,960
but i don't know um

1793
01:17:24,319 --> 01:17:27,759
so i'm not sure what we really do about

1794
01:17:26,960 --> 01:17:29,600
that

1795
01:17:27,760 --> 01:17:31,360
like it may be that this was just not

1796
01:17:29,600 --> 01:17:34,800
quite right i don't know it may be that

1797
01:17:31,359 --> 01:17:34,799
that needs to be lowered more

1798
01:17:39,760 --> 01:17:42,880
but again it seems like it seems doesn't

1799
01:17:41,520 --> 01:17:44,880
seem like this would work properly

1800
01:17:42,880 --> 01:17:47,119
because no matter what i would do here

1801
01:17:44,880 --> 01:17:50,239
i don't see how that's ever going to

1802
01:17:47,119 --> 01:17:52,559
produce a reliably aligned thing

1803
01:17:50,238 --> 01:17:52,559
and

1804
01:17:55,359 --> 01:18:01,198
you know because as you move to the side

1805
01:17:57,279 --> 01:18:12,399
right i mean that that looks pretty good

1806
01:18:01,198 --> 01:18:15,198
i guess i don't know

1807
01:18:12,399 --> 01:18:15,519
but it's tough fake fake 3d is hard

1808
01:18:15,198 --> 01:18:18,000
right

1809
01:18:15,520 --> 01:18:19,520
i mean hard from an art standpoint

1810
01:18:18,000 --> 01:18:24,479
because it's hard to make it

1811
01:18:19,520 --> 01:18:24,480
look 3d when it's not um

1812
01:18:24,840 --> 01:18:27,840
so

1813
01:18:32,399 --> 01:18:41,839
all right um

1814
01:18:53,520 --> 01:18:57,199
and we don't know maybe that's good

1815
01:18:59,920 --> 01:19:02,560
seems okay

1816
01:19:07,119 --> 01:19:23,840
gonna need more light can't see our

1817
01:19:09,600 --> 01:19:23,840
orphans they're in the dark

1818
01:19:35,840 --> 01:19:37,920
you

1819
01:19:54,158 --> 01:20:05,839
all right i mean it sort of works

1820
01:19:57,279 --> 01:20:05,840
i'm not complaining much too much

1821
01:20:16,840 --> 01:20:19,840
okay

1822
01:20:23,039 --> 01:20:26,399
all right um

1823
01:20:26,880 --> 01:20:35,039
yeah save okay

1824
01:20:31,520 --> 01:20:38,080
so yeah did that work did it not work

1825
01:20:35,039 --> 01:20:41,198
who the heck knows um

1826
01:20:38,079 --> 01:20:47,840
but that's what we're going with and

1827
01:20:41,198 --> 01:20:47,839
oh it looks like there's more

1828
01:20:49,600 --> 01:20:53,120
i feel like the scale is not right on

1829
01:20:51,840 --> 01:20:57,600
some of these two so we

1830
01:20:53,119 --> 01:20:57,599
probably should um

1831
01:20:58,000 --> 01:21:01,198
we probably should also be like setting

1832
01:20:59,840 --> 01:21:03,039
the scale

1833
01:21:01,198 --> 01:21:04,399
of some of these differently than they

1834
01:21:03,039 --> 01:21:06,719
are

1835
01:21:04,399 --> 01:21:06,719
um

1836
01:21:09,600 --> 01:21:12,719
which i'm not exactly sure i think the

1837
01:21:11,920 --> 01:21:15,679
scale of

1838
01:21:12,719 --> 01:21:16,960
the actual orphan gets set in the actual

1839
01:21:15,679 --> 01:21:18,960
code somewhere because

1840
01:21:16,960 --> 01:21:20,239
it's it's like how big the entity is

1841
01:21:18,960 --> 01:21:22,480
supposed to be

1842
01:21:20,238 --> 01:21:23,359
um i don't really remember but you know

1843
01:21:22,479 --> 01:21:26,000
that

1844
01:21:23,359 --> 01:21:29,839
that seems like maybe something we need

1845
01:21:26,000 --> 01:21:29,840
to do but anyway

1846
01:21:44,079 --> 01:21:50,319
yeah that seems fine uh

1847
01:21:47,198 --> 01:21:51,759
and so there's some more orphans how

1848
01:21:50,319 --> 01:21:53,599
many orphans did we actually place in

1849
01:21:51,760 --> 01:21:55,520
here we placed a lot of orphans

1850
01:21:53,600 --> 01:21:57,280
so wait did i miss a bunch of orphans

1851
01:21:55,520 --> 01:22:00,320
then potentially did were there orphans

1852
01:21:57,279 --> 01:22:00,319
down in these rooms too

1853
01:22:04,399 --> 01:22:06,638
no

1854
01:22:08,079 --> 01:22:11,840
so there are not orphans

1855
01:22:12,800 --> 01:22:16,400
there are not orphans in a bunch of

1856
01:22:14,238 --> 01:22:17,439
these places for what that

1857
01:22:16,399 --> 01:22:25,839
or whatever that's worth which is

1858
01:22:17,439 --> 01:22:25,839
probably very little

1859
01:22:27,119 --> 01:22:31,039
so where are the other orphans wasn't

1860
01:22:29,439 --> 01:22:32,638
there like a baby didn't we

1861
01:22:31,039 --> 01:22:34,000
place a didn't it say place a baby

1862
01:22:32,639 --> 01:22:34,880
somewhere maybe we didn't actually place

1863
01:22:34,000 --> 01:22:36,880
the baby anywhere

1864
01:22:34,880 --> 01:22:39,840
i thought the baby was placed somewhere

1865
01:22:36,880 --> 01:22:39,840
so i'm not sure

1866
01:22:47,279 --> 01:22:55,599
all right

1867
01:22:52,158 --> 01:22:56,638
there we go so i think we've got our

1868
01:22:55,600 --> 01:22:59,199
orphans though now

1869
01:22:56,639 --> 01:23:01,039
so that's nice um and that should all be

1870
01:22:59,198 --> 01:23:01,919
saved out so in theory now that'll just

1871
01:23:01,039 --> 01:23:07,840
work

1872
01:23:01,920 --> 01:23:07,840
um and it'll be good uh

1873
01:23:10,639 --> 01:23:14,159
and oddly now similarly like for some

1874
01:23:13,600 --> 01:23:17,840
reason

1875
01:23:14,158 --> 01:23:20,079
we don't have the light bug happening

1876
01:23:17,840 --> 01:23:22,400
is there some weird thing where like the

1877
01:23:20,079 --> 01:23:25,279
fact that we were picking

1878
01:23:22,399 --> 01:23:26,799
on a non-existent bitmap forced the

1879
01:23:25,279 --> 01:23:28,399
graphics card to do something bad and

1880
01:23:26,800 --> 01:23:31,360
that's why the lighting was busted

1881
01:23:28,399 --> 01:23:32,638
i mean it's possible to see you know i'm

1882
01:23:31,359 --> 01:23:34,399
not gonna

1883
01:23:32,639 --> 01:23:36,480
say that that's particularly likely but

1884
01:23:34,399 --> 01:23:39,519
you know i mean it could be

1885
01:23:36,479 --> 01:23:42,000
right so it

1886
01:23:39,520 --> 01:23:42,639
looks like everything is nominally

1887
01:23:42,000 --> 01:23:44,479
working

1888
01:23:42,639 --> 01:23:46,719
we have our orphans we have our weird

1889
01:23:44,479 --> 01:23:49,119
little you know skull dudes we have some

1890
01:23:46,719 --> 01:23:53,600
crappy lights

1891
01:23:49,119 --> 01:23:53,599
that we have placed there and

1892
01:23:54,000 --> 01:24:03,840
you know that all seems fine

1893
01:24:12,399 --> 01:24:17,839
yeah all right i mean seems all right

1894
01:24:20,800 --> 01:24:31,840
everything seems to be working okay

1895
01:24:42,840 --> 01:24:47,279
so

1896
01:24:45,279 --> 01:24:48,960
how much time is left in this stream

1897
01:24:47,279 --> 01:24:50,479
that i may wrap it up for today because

1898
01:24:48,960 --> 01:24:52,000
i guess that's basically everything that

1899
01:24:50,479 --> 01:24:54,000
we were trying to do

1900
01:24:52,000 --> 01:24:56,800
um is there a way i can provoke this

1901
01:24:54,000 --> 01:24:56,800
lighting bug again

1902
01:24:56,840 --> 01:24:59,840
though

1903
01:25:01,840 --> 01:25:05,520
somehow i don't seem to there we go

1904
01:25:07,198 --> 01:25:11,279
so i guess we can start looking at that

1905
01:25:09,600 --> 01:25:12,000
uh in the time we have remaining because

1906
01:25:11,279 --> 01:25:14,319
i'm like i don't

1907
01:25:12,000 --> 01:25:16,158
we didn't do like it should not have

1908
01:25:14,319 --> 01:25:17,039
fixed that right like it that seemed

1909
01:25:16,158 --> 01:25:18,719
weird

1910
01:25:17,039 --> 01:25:20,238
um and so i don't understand what's

1911
01:25:18,719 --> 01:25:22,158
going on there and

1912
01:25:20,238 --> 01:25:24,718
it's very peculiar like now it's just in

1913
01:25:22,158 --> 01:25:24,719
that state

1914
01:25:24,800 --> 01:25:30,800
and now it's not

1915
01:25:27,840 --> 01:25:32,159
right like like what is going on it's

1916
01:25:30,800 --> 01:25:36,480
very strange

1917
01:25:32,158 --> 01:25:38,319
um so i'm not sure exactly what's

1918
01:25:36,479 --> 01:25:40,158
happening there but i do think that you

1919
01:25:38,319 --> 01:25:42,000
know that might be something that where

1920
01:25:40,158 --> 01:25:44,479
we would benefit from running under

1921
01:25:42,000 --> 01:25:46,238
a graphics debugger so we could see like

1922
01:25:44,479 --> 01:25:46,799
who what is happening there there might

1923
01:25:46,238 --> 01:25:49,359
be some

1924
01:25:46,800 --> 01:25:51,039
some fairly obvious stuff uh that's

1925
01:25:49,359 --> 01:25:54,158
going on there that we could fix

1926
01:25:51,039 --> 01:25:54,880
right um but it's definitely like a

1927
01:25:54,158 --> 01:25:56,479
weird kind of

1928
01:25:54,880 --> 01:25:58,480
intermittent thing that that i don't

1929
01:25:56,479 --> 01:26:00,158
know what is actually happening

1930
01:25:58,479 --> 01:26:01,759
like like why is that happening

1931
01:26:00,158 --> 01:26:02,559
sometimes and it's it's very very

1932
01:26:01,760 --> 01:26:04,239
strange

1933
01:26:02,560 --> 01:26:05,760
and you can see that it's like a

1934
01:26:04,238 --> 01:26:06,879
massively over bright so it's like the

1935
01:26:05,760 --> 01:26:09,280
lighting has and

1936
01:26:06,880 --> 01:26:11,600
it has air like nan's in it or something

1937
01:26:09,279 --> 01:26:13,759
like something weird is happening there

1938
01:26:11,600 --> 01:26:14,960
uh and and i don't actually know what

1939
01:26:13,760 --> 01:26:22,719
that's from

1940
01:26:14,960 --> 01:26:25,600
what time how much time do we have

1941
01:26:22,719 --> 01:26:25,600
i think we have like

1942
01:26:26,079 --> 01:26:28,719
30 minutes

1943
01:26:31,279 --> 01:26:37,840
it's time to stretch everyone's stretch

1944
01:26:34,399 --> 01:26:37,839
stretch right away

1945
01:26:38,800 --> 01:26:51,840
stretch stretch

1946
01:26:42,000 --> 01:26:51,840
everyone stretch um

1947
01:27:07,760 --> 01:27:10,880
fred and luck said if i remember

1948
01:27:09,520 --> 01:27:14,080
correctly this bug was introduced when

1949
01:27:10,880 --> 01:27:17,679
you added the fade on load

1950
01:27:14,079 --> 01:27:21,039
what fade on load there there is

1951
01:27:17,679 --> 01:27:21,039
no fade on load is there

1952
01:27:24,000 --> 01:27:27,039
i i literally have no idea what you're

1953
01:27:25,679 --> 01:27:33,840
talking about we don't have a fade on

1954
01:27:27,039 --> 01:27:33,840
load do we

1955
01:27:52,960 --> 01:27:57,600
it also kind of seems to like

1956
01:27:57,840 --> 01:28:01,199
yeah i mean there's a number of ways we

1957
01:27:59,279 --> 01:28:15,840
can now start to to

1958
01:28:01,198 --> 01:28:15,839
track this down right

1959
01:28:16,479 --> 01:28:18,799
um

1960
01:28:19,520 --> 01:28:25,600
so let's see so uh we

1961
01:28:22,639 --> 01:28:26,480
don't anymore store any lighting stuff

1962
01:28:25,600 --> 01:28:28,880
in the end of these

1963
01:28:26,479 --> 01:28:29,759
as far as i know right you can see that

1964
01:28:28,880 --> 01:28:31,520
that this stuff

1965
01:28:29,760 --> 01:28:32,800
we don't really have anything stored in

1966
01:28:31,520 --> 01:28:36,080
there

1967
01:28:32,800 --> 01:28:38,239
um and if we look at like

1968
01:28:36,079 --> 01:28:41,198
where the sim region and world chunk

1969
01:28:38,238 --> 01:28:44,959
stuff like pulls stuff in

1970
01:28:41,198 --> 01:28:49,039
um i'm pretty sure we don't have any

1971
01:28:44,960 --> 01:28:53,279
like we got rid of the stupid stuff

1972
01:28:49,039 --> 01:28:54,840
where we were uh

1973
01:28:53,279 --> 01:28:56,399
where we were tracking like lighting

1974
01:28:54,840 --> 01:28:59,360
entities

1975
01:28:56,399 --> 01:29:00,559
i think um i don't know maybe we didn't

1976
01:28:59,359 --> 01:29:05,519
but but i hope we did

1977
01:29:00,560 --> 01:29:05,520
because i thought we were we did that um

1978
01:29:06,079 --> 01:29:11,840
so then like begin world change

1979
01:29:12,000 --> 01:29:25,840
uh ensure region is unpacked

1980
01:29:36,158 --> 01:29:39,839
so it looks like

1981
01:29:40,719 --> 01:29:44,319
yeah it looks like we don't do any of

1982
01:29:42,880 --> 01:29:48,079
the like stable

1983
01:29:44,319 --> 01:29:51,198
entity slotting or any of that stuff

1984
01:29:48,079 --> 01:29:52,319
anymore right so so don't think there's

1985
01:29:51,198 --> 01:29:56,158
anything

1986
01:29:52,319 --> 01:29:57,519
implicated like you know

1987
01:29:56,158 --> 01:30:00,079
i don't think there's anything

1988
01:29:57,520 --> 01:30:00,080
implicated

1989
01:30:00,158 --> 01:30:05,920
with storing these entities or like

1990
01:30:03,600 --> 01:30:07,199
having them persist stuff because we got

1991
01:30:05,920 --> 01:30:11,279
rid of that stuff

1992
01:30:07,198 --> 01:30:11,279
because we don't actually need um

1993
01:30:12,399 --> 01:30:16,238
for our lighting system no longer

1994
01:30:13,920 --> 01:30:19,039
requires any of that

1995
01:30:16,238 --> 01:30:20,559
uh so i think that's all gone and so

1996
01:30:19,039 --> 01:30:22,319
we're really just talking about the

1997
01:30:20,560 --> 01:30:26,480
lighting

1998
01:30:22,319 --> 01:30:26,479
uh being you know

1999
01:30:27,840 --> 01:30:30,800
being in the re in the in the standard

2000
01:30:29,520 --> 01:30:32,639
way that's getting pushed down like

2001
01:30:30,800 --> 01:30:33,440
something is getting screwed up in there

2002
01:30:32,639 --> 01:30:38,239
somehow

2003
01:30:33,439 --> 01:30:38,238
right and we just don't know

2004
01:30:46,840 --> 01:30:49,840
how

2005
01:31:05,600 --> 01:31:08,800
so yeah i guess what we should probably

2006
01:31:07,520 --> 01:31:12,400
do here is just

2007
01:31:08,800 --> 01:31:16,239
add a bunch of debug checks to

2008
01:31:12,399 --> 01:31:19,039
put in debug breakpoints wherever we see

2009
01:31:16,238 --> 01:31:20,000
like a lighting value go to some

2010
01:31:19,039 --> 01:31:23,840
ridiculous

2011
01:31:20,000 --> 01:31:31,840
thing so like maybe

2012
01:31:23,840 --> 01:31:31,840
check like

2013
01:31:32,479 --> 01:31:35,519
maybe we just want to start like adding

2014
01:31:34,479 --> 01:31:38,000
some some

2015
01:31:35,520 --> 01:31:40,639
lighting debug checking where we can

2016
01:31:38,000 --> 01:31:40,639
look through it

2017
01:31:41,439 --> 01:31:59,839
and just see you know what

2018
01:31:44,479 --> 01:31:59,839
is there weird stuff happening right

2019
01:32:00,800 --> 01:32:04,960
so i don't know uh so let's take a look

2020
01:32:10,840 --> 01:32:13,840
um

2021
01:32:21,039 --> 01:32:24,399
so i guess i don't know yet you can see

2022
01:32:23,119 --> 01:32:25,599
us here

2023
01:32:24,399 --> 01:32:27,599
one thing that would be interesting to

2024
01:32:25,600 --> 01:32:28,639
know is like does this is this have any

2025
01:32:27,600 --> 01:32:30,239
differences

2026
01:32:28,639 --> 01:32:32,719
in terms of like whether or not it's

2027
01:32:30,238 --> 01:32:36,479
threading

2028
01:32:32,719 --> 01:32:37,359
or not right um because this is the type

2029
01:32:36,479 --> 01:32:39,519
of code

2030
01:32:37,359 --> 01:32:41,439
where you could have threading bugs

2031
01:32:39,520 --> 01:32:43,280
pretty easily

2032
01:32:41,439 --> 01:32:45,279
uh if we take a look at like where we

2033
01:32:43,279 --> 01:32:48,559
call internal lighting core

2034
01:32:45,279 --> 01:32:50,559
uh you can see here where it passes

2035
01:32:48,560 --> 01:32:52,639
uh the lighting queue right here if we

2036
01:32:50,560 --> 01:32:55,840
were to like vaporize that

2037
01:32:52,639 --> 01:32:58,000
that would prevent uh any

2038
01:32:55,840 --> 01:32:59,679
multi-threading so we could also see to

2039
01:32:58,000 --> 01:33:00,238
what extent it might have something to

2040
01:32:59,679 --> 01:33:01,679
do with

2041
01:33:00,238 --> 01:33:04,000
with the light you know with a

2042
01:33:01,679 --> 01:33:07,520
multi-threading issue

2043
01:33:04,000 --> 01:33:09,279
um i'm not sure why it would because the

2044
01:33:07,520 --> 01:33:10,000
threads don't really communicate with

2045
01:33:09,279 --> 01:33:12,800
each other

2046
01:33:10,000 --> 01:33:14,000
in any particular way so i feel like we

2047
01:33:12,800 --> 01:33:15,920
should be able to get this to reproduce

2048
01:33:14,000 --> 01:33:16,319
itself even without the multithreading

2049
01:33:15,920 --> 01:33:19,199
but

2050
01:33:16,319 --> 01:33:21,279
you never know so if we do do letting q

2051
01:33:19,198 --> 01:33:22,960
equals zero here

2052
01:33:21,279 --> 01:33:24,960
and recompile this will single thread

2053
01:33:22,960 --> 01:33:29,198
the lighting

2054
01:33:24,960 --> 01:33:29,198
and so it will be much slower as well

2055
01:33:34,840 --> 01:33:37,840
but

2056
01:33:37,920 --> 01:33:41,279
and you know like yeah i could believe

2057
01:33:40,319 --> 01:33:42,799
that there was some kind of weird

2058
01:33:41,279 --> 01:33:45,198
threading thing going on there

2059
01:33:42,800 --> 01:33:47,039
uh because the reason i say that is just

2060
01:33:45,198 --> 01:33:49,198
because

2061
01:33:47,039 --> 01:33:50,639
you know one there's a couple different

2062
01:33:49,198 --> 01:33:51,439
things that can happen in debug versus

2063
01:33:50,639 --> 01:33:53,039
release builds

2064
01:33:51,439 --> 01:33:54,799
so one thing that can happen in debug

2065
01:33:53,039 --> 01:33:56,238
versus a release build is that there's

2066
01:33:54,800 --> 01:33:57,840
actually just a cogen difference and

2067
01:33:56,238 --> 01:33:59,519
that's the problem the other thing is

2068
01:33:57,840 --> 01:34:02,800
that a debug build is much slower

2069
01:33:59,520 --> 01:34:03,520
right so if you're talking about some

2070
01:34:02,800 --> 01:34:06,560
kind of a

2071
01:34:03,520 --> 01:34:07,840
of an obscure multi-threaded problem

2072
01:34:06,560 --> 01:34:10,480
that occurs

2073
01:34:07,840 --> 01:34:12,560
you can see how maybe you would end up

2074
01:34:10,479 --> 01:34:14,879
in a situation where

2075
01:34:12,560 --> 01:34:16,800
if your code runs slow enough the

2076
01:34:14,880 --> 01:34:19,279
multi-threading race condition

2077
01:34:16,800 --> 01:34:20,880
doesn't ever actually happen because the

2078
01:34:19,279 --> 01:34:22,719
code is too slow to ever

2079
01:34:20,880 --> 01:34:24,400
actually have it be a probability that

2080
01:34:22,719 --> 01:34:27,119
it will occur but when you

2081
01:34:24,399 --> 01:34:28,319
then run the code more quickly you find

2082
01:34:27,119 --> 01:34:31,599
that it does

2083
01:34:28,319 --> 01:34:32,479
right um so it could be something like

2084
01:34:31,600 --> 01:34:35,280
that

2085
01:34:32,479 --> 01:34:36,718
uh but we don't know because it's an

2086
01:34:35,279 --> 01:34:38,639
intermittent bug we can't

2087
01:34:36,719 --> 01:34:39,760
we can't reproduce it when okay so there

2088
01:34:38,639 --> 01:34:42,079
you go

2089
01:34:39,760 --> 01:34:44,000
so running the lighting single threaded

2090
01:34:42,079 --> 01:34:47,359
doesn't change this

2091
01:34:44,000 --> 01:34:48,719
right we know that so so that more or

2092
01:34:47,359 --> 01:34:51,519
less proves

2093
01:34:48,719 --> 01:34:54,319
uh that it isn't that because if we turn

2094
01:34:51,520 --> 01:35:01,840
off the lighting queue

2095
01:34:54,319 --> 01:35:01,840
it still happens

2096
01:35:05,679 --> 01:35:09,359
yeah there needs to be so someone needs

2097
01:35:07,359 --> 01:35:13,118
to modify

2098
01:35:09,359 --> 01:35:16,719
insobot so that anytime

2099
01:35:13,118 --> 01:35:20,079
anyone mentions rust

2100
01:35:16,719 --> 01:35:21,439
uh it it just times that person out for

2101
01:35:20,079 --> 01:35:23,679
60 seconds

2102
01:35:21,439 --> 01:35:24,559
right so if you say rust you just get a

2103
01:35:23,679 --> 01:35:29,840
60 second

2104
01:35:24,560 --> 01:35:29,840
auto timeout right

2105
01:35:30,880 --> 01:35:36,319
um so it doesn't

2106
01:35:34,238 --> 01:35:38,238
look like threading is particularly

2107
01:35:36,319 --> 01:35:40,840
implicated there

2108
01:35:38,238 --> 01:35:42,158
it looks like some kind of computation

2109
01:35:40,840 --> 01:35:45,520
initialization

2110
01:35:42,158 --> 01:35:47,599
problem is happening uh

2111
01:35:45,520 --> 01:35:49,920
or maybe like an accumulation problem

2112
01:35:47,600 --> 01:35:52,159
where if the time step is too large

2113
01:35:49,920 --> 01:35:53,039
you get some kind of a weird you know

2114
01:35:52,158 --> 01:35:57,839
state happening

2115
01:35:53,039 --> 01:35:57,840
i don't know uh

2116
01:35:59,118 --> 01:36:02,960
when we look at how the blending works

2117
01:36:00,960 --> 01:36:05,039
and so on right it looks like that's

2118
01:36:02,960 --> 01:36:07,039
just set to a fixed value we're not even

2119
01:36:05,039 --> 01:36:08,079
basing it on the frame rate or anything

2120
01:36:07,039 --> 01:36:10,960
at this point

2121
01:36:08,079 --> 01:36:12,559
it's literally just blending at a noise

2122
01:36:10,960 --> 01:36:15,600
threshold

2123
01:36:12,560 --> 01:36:17,440
so like it shouldn't matter what the

2124
01:36:15,600 --> 01:36:20,480
frame rate was there because

2125
01:36:17,439 --> 01:36:23,118
it's not actually using that um you know

2126
01:36:20,479 --> 01:36:25,839
it doesn't actually care

2127
01:36:23,118 --> 01:36:27,439
so that also not does not seem

2128
01:36:25,840 --> 01:36:30,480
particularly implemented

2129
01:36:27,439 --> 01:36:33,599
uh sorry does not seem particularly

2130
01:36:30,479 --> 01:36:36,638
implicated so i'm again

2131
01:36:33,600 --> 01:36:39,840
not really sure where to start looking

2132
01:36:36,639 --> 01:36:41,679
so what i guess i will do is try to add

2133
01:36:39,840 --> 01:36:45,760
something

2134
01:36:41,679 --> 01:36:48,399
in here that just can look through

2135
01:36:45,760 --> 01:36:50,840
and try to see if there's anything

2136
01:36:48,399 --> 01:36:53,839
particularly strange

2137
01:36:50,840 --> 01:36:53,840
um

2138
01:37:06,560 --> 01:37:10,320
i mean i suppose one thing that's

2139
01:37:08,319 --> 01:37:12,000
interesting is like in the update

2140
01:37:10,319 --> 01:37:13,118
lighting call you can see that there's

2141
01:37:12,000 --> 01:37:16,560
sort of like a

2142
01:37:13,118 --> 01:37:19,599
a case here right where

2143
01:37:16,560 --> 01:37:21,039
it does this every so often it does this

2144
01:37:19,600 --> 01:37:23,679
when

2145
01:37:21,039 --> 01:37:24,079
um the grid or the fundamental unit

2146
01:37:23,679 --> 01:37:27,359
stuff

2147
01:37:24,079 --> 01:37:28,719
changes and you assume that only happens

2148
01:37:27,359 --> 01:37:30,399
once at startup but you know

2149
01:37:28,719 --> 01:37:32,079
if that was happening multiple times

2150
01:37:30,399 --> 01:37:32,399
maybe something weird was going on i

2151
01:37:32,079 --> 01:37:35,840
don't know

2152
01:37:32,399 --> 01:37:40,158
even that doesn't seem it doesn't seem

2153
01:37:35,840 --> 01:37:43,440
super plausible to me um

2154
01:37:40,158 --> 01:37:45,759
so so i don't know about that

2155
01:37:43,439 --> 01:37:45,759
um

2156
01:37:46,800 --> 01:37:51,440
so yeah so if we look at where the

2157
01:37:49,039 --> 01:37:55,198
lighting information is stored

2158
01:37:51,439 --> 01:37:58,399
right we've got a thing um

2159
01:37:55,198 --> 01:38:01,599
in here where we're like okay we've

2160
01:37:58,399 --> 01:38:03,198
got uh

2161
01:38:01,600 --> 01:38:06,400
when we call the internal lighting core

2162
01:38:03,198 --> 01:38:08,319
right we've got the light atlases

2163
01:38:06,399 --> 01:38:10,399
that we're writing into and what we want

2164
01:38:08,319 --> 01:38:12,559
to do you know

2165
01:38:10,399 --> 01:38:15,359
is we would want to look at the spec

2166
01:38:12,560 --> 01:38:19,360
atlas or the diffuse atlas

2167
01:38:15,359 --> 01:38:21,679
and i guess we want like a spec

2168
01:38:19,359 --> 01:38:22,799
like we want a thing that will loop

2169
01:38:21,679 --> 01:38:27,118
through the spec atlas

2170
01:38:22,800 --> 01:38:29,520
and the diffuse atlas any time we want

2171
01:38:27,118 --> 01:38:31,359
and just see if anyone's written

2172
01:38:29,520 --> 01:38:34,480
anything absurd in there

2173
01:38:31,359 --> 01:38:38,319
right so we should be able to do

2174
01:38:34,479 --> 01:38:38,319
something like

2175
01:38:38,719 --> 01:38:44,319
in light atlas have a debug

2176
01:38:42,319 --> 01:38:46,399
function right so you know we've got

2177
01:38:44,319 --> 01:38:49,759
these light atlases right and they're

2178
01:38:46,399 --> 01:38:51,920
called the texels um

2179
01:38:49,760 --> 01:38:53,920
have something in the light atlas where

2180
01:38:51,920 --> 01:38:59,840
it would just say

2181
01:38:53,920 --> 01:38:59,840
look um

2182
01:39:01,118 --> 01:39:04,319
if you call this function we go through

2183
01:39:03,039 --> 01:39:07,359
the entire atlas

2184
01:39:04,319 --> 01:39:09,039
we know that's slow and stupid but it's

2185
01:39:07,359 --> 01:39:11,679
just for debugging

2186
01:39:09,039 --> 01:39:12,399
we'll make a function that will just do

2187
01:39:11,679 --> 01:39:16,719
a

2188
01:39:12,399 --> 01:39:19,279
uh validate atlas or something

2189
01:39:16,719 --> 01:39:20,880
um where it will just go through and

2190
01:39:19,279 --> 01:39:24,000
just check everything

2191
01:39:20,880 --> 01:39:24,639
and then we can just like spam calls to

2192
01:39:24,000 --> 01:39:27,359
this

2193
01:39:24,639 --> 01:39:28,800
like everywhere and so we should be able

2194
01:39:27,359 --> 01:39:32,238
to find the place

2195
01:39:28,800 --> 01:39:35,520
uh where it where it porks out

2196
01:39:32,238 --> 01:39:38,479
right um

2197
01:39:35,520 --> 01:39:40,000
so if we do like a thing that just as

2198
01:39:38,479 --> 01:39:44,079
dumb as possible

2199
01:39:40,000 --> 01:39:48,079
right just loops through everything um

2200
01:39:44,079 --> 01:39:51,039
like the entire atlas the whole thing

2201
01:39:48,079 --> 01:39:51,760
uh which you know i don't even remember

2202
01:39:51,039 --> 01:39:53,118
how to do

2203
01:39:51,760 --> 01:39:54,960
at this point but if we just loop

2204
01:39:53,118 --> 01:39:58,319
through the whole thing

2205
01:39:54,960 --> 01:40:01,760
and we say something like uh

2206
01:39:58,319 --> 01:40:05,118
get light atlas texels uh

2207
01:40:01,760 --> 01:40:09,679
for a particular location so

2208
01:40:05,118 --> 01:40:13,759
i mean maybe like this sort of thing

2209
01:40:09,679 --> 01:40:17,840
right here oops like get tile

2210
01:40:13,760 --> 01:40:20,000
uh unclamped yeah

2211
01:40:17,840 --> 01:40:21,520
so we can do something like get tile

2212
01:40:20,000 --> 01:40:22,880
unclamped although actually i suppose we

2213
01:40:21,520 --> 01:40:24,639
don't even really need to do that

2214
01:40:22,880 --> 01:40:25,920
we could just say look we know how large

2215
01:40:24,639 --> 01:40:28,960
it is

2216
01:40:25,920 --> 01:40:30,000
uh so if we just do like get light atlas

2217
01:40:28,960 --> 01:40:31,520
texels

2218
01:40:30,000 --> 01:40:33,679
we should be able to just loop through

2219
01:40:31,520 --> 01:40:37,840
however many textuals there are

2220
01:40:33,679 --> 01:40:37,840
right so if we say like

2221
01:40:38,079 --> 01:40:42,399
taxal counts equals tell me how many

2222
01:40:40,880 --> 01:40:45,600
there are

2223
01:40:42,399 --> 01:40:48,399
uh and then say like texel index is zero

2224
01:40:45,600 --> 01:40:53,440
textile index is less than textile count

2225
01:40:48,399 --> 01:40:53,439
plus plus textile index right um

2226
01:40:54,880 --> 01:40:58,719
so if we just leave through all the

2227
01:40:56,000 --> 01:41:05,840
texels and

2228
01:40:58,719 --> 01:41:05,840
we look at them

2229
01:41:09,920 --> 01:41:14,319
uh if we assume that these texels are

2230
01:41:13,359 --> 01:41:16,880
all

2231
01:41:14,319 --> 01:41:19,519
this like atlas texel which you would

2232
01:41:16,880 --> 01:41:24,880
think they would be

2233
01:41:19,520 --> 01:41:28,159
right so if we get all these

2234
01:41:24,880 --> 01:41:28,159
and we just loop through them

2235
01:41:28,319 --> 01:41:33,840
uh i mean

2236
01:41:38,000 --> 01:41:41,600
that should do it right so now we've got

2237
01:41:40,800 --> 01:41:44,840
our texel

2238
01:41:41,600 --> 01:41:47,840
we can just do like all right

2239
01:41:44,840 --> 01:41:47,840
so

2240
01:41:55,840 --> 01:42:00,880
if we look at the red the green and the

2241
01:41:57,359 --> 01:42:04,399
blue channel each

2242
01:42:00,880 --> 01:42:08,880
we should be able to check to see

2243
01:42:04,399 --> 01:42:08,879
if these values are sane right

2244
01:42:13,760 --> 01:42:20,639
so we pass a component here and

2245
01:42:17,039 --> 01:42:22,479
we can just say like if c is less than

2246
01:42:20,639 --> 01:42:25,520
zero

2247
01:42:22,479 --> 01:42:30,718
or c is greater than you know

2248
01:42:25,520 --> 01:42:30,719
a thousand right

2249
01:42:31,520 --> 01:42:36,480
if either of those two things is true uh

2250
01:42:34,479 --> 01:42:39,759
then we can

2251
01:42:36,479 --> 01:42:42,638
stop right like i think we have a

2252
01:42:39,760 --> 01:42:44,159
where's our assertion i don't even know

2253
01:42:42,639 --> 01:42:48,319
um

2254
01:42:44,158 --> 01:42:52,000
yeah then i'll just do assert

2255
01:42:48,319 --> 01:42:56,639
horrible very lousy

2256
01:42:52,000 --> 01:42:59,840
stupid code you are

2257
01:42:56,639 --> 01:42:59,840
not programmer

2258
01:42:59,920 --> 01:43:05,600
learn the variable um

2259
01:43:03,039 --> 01:43:08,840
and so in here we can just say all right

2260
01:43:05,600 --> 01:43:13,760
let's validate these components

2261
01:43:08,840 --> 01:43:16,639
um each of the components of the texel

2262
01:43:13,760 --> 01:43:16,639
something like this

2263
01:43:17,439 --> 01:43:21,279
and in theory that should just die

2264
01:43:19,439 --> 01:43:25,839
immediately whenever we

2265
01:43:21,279 --> 01:43:25,840
hit something um that's broken

2266
01:43:26,800 --> 01:43:31,840
it is value

2267
01:43:32,238 --> 01:43:38,319
um oh wait so

2268
01:43:35,279 --> 01:43:40,800
that's not quite right sorry so light

2269
01:43:38,319 --> 01:43:43,840
atlas texel here

2270
01:43:40,800 --> 01:43:45,440
is actually a thing that it retrieves

2271
01:43:43,840 --> 01:43:47,520
when you do this so actually these are

2272
01:43:45,439 --> 01:43:51,039
just v3s

2273
01:43:47,520 --> 01:43:54,239
um it's more like that

2274
01:43:51,039 --> 01:43:56,560
right um

2275
01:43:54,238 --> 01:43:57,519
so i don't know i think that is roughly

2276
01:43:56,560 --> 01:44:00,080
what

2277
01:43:57,520 --> 01:44:00,080
we would want

2278
01:44:01,118 --> 01:44:04,639
uh not 100 sure because i just kind of

2279
01:44:03,198 --> 01:44:06,079
hacked that in there

2280
01:44:04,639 --> 01:44:07,520
it's been a long time since we looked at

2281
01:44:06,079 --> 01:44:09,679
it but basically what we want is

2282
01:44:07,520 --> 01:44:12,800
something like that

2283
01:44:09,679 --> 01:44:15,118
i can now go in here and throw that in

2284
01:44:12,800 --> 01:44:18,239
and just see i mean we could just now

2285
01:44:15,118 --> 01:44:18,238
say like all right

2286
01:44:18,840 --> 01:44:21,840
so

2287
01:44:24,560 --> 01:44:28,800
take the spec atlas and the diffuse

2288
01:44:26,238 --> 01:44:28,799
atlas

2289
01:44:29,359 --> 01:44:32,319
do a little builds

2290
01:44:33,279 --> 01:44:40,079
run the codes uh and now

2291
01:44:36,800 --> 01:44:41,440
yeah so

2292
01:44:40,079 --> 01:44:43,359
you know i don't actually know if this

2293
01:44:41,439 --> 01:44:44,238
is working or not but hey it just

2294
01:44:43,359 --> 01:44:48,639
triggered

2295
01:44:44,238 --> 01:44:52,399
right uh which is good

2296
01:44:48,639 --> 01:44:54,319
and so in theory we can see uh

2297
01:44:52,399 --> 01:44:55,679
like we have the ability to detect when

2298
01:44:54,319 --> 01:44:58,238
it actually happens

2299
01:44:55,679 --> 01:44:59,600
right now we don't actually know that

2300
01:44:58,238 --> 01:45:00,879
that's true because

2301
01:44:59,600 --> 01:45:02,960
we don't know if maybe that just

2302
01:45:00,880 --> 01:45:05,279
triggered unnecessarily here but

2303
01:45:02,960 --> 01:45:06,880
but it looks like it at least sort of

2304
01:45:05,279 --> 01:45:17,599
did

2305
01:45:06,880 --> 01:45:19,840
so another thing we could do

2306
01:45:17,600 --> 01:45:19,840
um

2307
01:45:22,560 --> 01:45:26,960
is make it so that we can continue

2308
01:45:24,238 --> 01:45:31,839
running after that happens

2309
01:45:26,960 --> 01:45:31,840
so that we can see uh

2310
01:45:33,279 --> 01:45:37,279
i mean i guess here's what i would say

2311
01:45:34,960 --> 01:45:40,399
like like maybe we change this slightly

2312
01:45:37,279 --> 01:45:45,198
so this is like a b32

2313
01:45:40,399 --> 01:45:48,158
uh and the results is like

2314
01:45:45,198 --> 01:45:48,158
something like this

2315
01:45:53,760 --> 01:46:02,000
uh and then we say okay

2316
01:45:59,600 --> 01:46:02,000
oops

2317
01:46:06,479 --> 01:46:10,000
i don't think you can actually do that

2318
01:46:07,840 --> 01:46:13,840
but um

2319
01:46:10,000 --> 01:46:13,840
i can do this

2320
01:46:17,439 --> 01:46:22,879
so we just like and all this crap

2321
01:46:19,520 --> 01:46:22,880
together and then we return

2322
01:46:25,600 --> 01:46:30,960
so now what we would do is

2323
01:46:28,800 --> 01:46:31,840
when we do oop i don't know why i typed

2324
01:46:30,960 --> 01:46:33,520
that in

2325
01:46:31,840 --> 01:46:36,480
so now we would do is when we validate

2326
01:46:33,520 --> 01:46:36,480
one of these things

2327
01:46:38,840 --> 01:46:41,840
um

2328
01:46:44,079 --> 01:46:50,639
it's basically just gonna say okay

2329
01:46:47,359 --> 01:46:52,639
uh tell me one way or the other if this

2330
01:46:50,639 --> 01:46:54,560
worked or if it didn't work

2331
01:46:52,639 --> 01:46:57,199
and then we can take some action based

2332
01:46:54,560 --> 01:46:58,800
on that so like if validate atlas

2333
01:46:57,198 --> 01:47:00,719
right like if you can't validate the

2334
01:46:58,800 --> 01:47:04,079
atlas

2335
01:47:00,719 --> 01:47:06,960
we do something um and

2336
01:47:04,079 --> 01:47:08,000
so one of the things i could do here is

2337
01:47:06,960 --> 01:47:11,039
just add some

2338
01:47:08,000 --> 01:47:15,439
kind of like you know

2339
01:47:11,039 --> 01:47:15,439
break right um

2340
01:47:16,880 --> 01:47:20,000
that's not right it needs to be in both

2341
01:47:19,279 --> 01:47:23,279
of those

2342
01:47:20,000 --> 01:47:26,880
okay so if we can't validate the atlas

2343
01:47:23,279 --> 01:47:27,920
uh we need to like maybe we could just

2344
01:47:26,880 --> 01:47:29,679
print something out

2345
01:47:27,920 --> 01:47:31,279
you know we could do like an output

2346
01:47:29,679 --> 01:47:34,399
debug string i don't know if i can

2347
01:47:31,279 --> 01:47:34,399
actually do that here can i

2348
01:47:34,560 --> 01:47:41,199
no i can't um

2349
01:47:38,158 --> 01:47:44,238
if we just put forth something

2350
01:47:41,198 --> 01:47:47,359
uh that says that the atlas is busted

2351
01:47:44,238 --> 01:47:51,279
like using a debug uh out

2352
01:47:47,359 --> 01:47:53,519
of some kind right

2353
01:47:51,279 --> 01:47:55,439
so in here we could do a debug value

2354
01:47:53,520 --> 01:47:57,199
which is just do you think the atlas is

2355
01:47:55,439 --> 01:48:01,118
valid or not

2356
01:47:57,198 --> 01:48:04,479
um and

2357
01:48:01,118 --> 01:48:04,960
you know like some stuff happens and

2358
01:48:04,479 --> 01:48:08,479
then

2359
01:48:04,960 --> 01:48:10,719
a thing and whatever so

2360
01:48:08,479 --> 01:48:10,718
uh

2361
01:48:13,600 --> 01:48:17,199
if we for example put in the lighting

2362
01:48:16,560 --> 01:48:20,560
panel

2363
01:48:17,198 --> 01:48:22,879
just like a thing that was like could

2364
01:48:20,560 --> 01:48:26,880
you validate the atlas

2365
01:48:22,880 --> 01:48:30,840
or something like suppose we did

2366
01:48:26,880 --> 01:48:33,840
this um spec

2367
01:48:30,840 --> 01:48:33,840
valid

2368
01:48:36,238 --> 01:48:39,599
diffuse valid

2369
01:48:40,158 --> 01:48:47,679
and again all i'm trying to do here is

2370
01:48:44,079 --> 01:48:52,079
uh is just make sure that this trigger

2371
01:48:47,679 --> 01:48:54,639
actually does work so i can visually see

2372
01:48:52,079 --> 01:48:55,198
that the trigger happens at the same

2373
01:48:54,639 --> 01:48:58,159
time

2374
01:48:55,198 --> 01:49:00,479
that the bug happens that's all i'm

2375
01:48:58,158 --> 01:49:03,920
looking for

2376
01:49:00,479 --> 01:49:06,479
so now in theory like if i look

2377
01:49:03,920 --> 01:49:08,639
at the lighting system you can see that

2378
01:49:06,479 --> 01:49:11,279
it says that it's valid

2379
01:49:08,639 --> 01:49:12,159
right and it just switched to non-valid

2380
01:49:11,279 --> 01:49:14,399
just like that

2381
01:49:12,158 --> 01:49:17,279
and of course the bug hasn't happened so

2382
01:49:14,399 --> 01:49:17,279
that seems bad

2383
01:49:17,920 --> 01:49:20,158
um

2384
01:49:22,079 --> 01:49:26,479
so i don't know what to make of that

2385
01:49:24,960 --> 01:49:30,000
there's two

2386
01:49:26,479 --> 01:49:33,678
possible reasons for that

2387
01:49:30,000 --> 01:49:36,800
one reason is that uh

2388
01:49:33,679 --> 01:49:37,520
actually these bounds are too too tight

2389
01:49:36,800 --> 01:49:39,920
like maybe

2390
01:49:37,520 --> 01:49:41,040
like it's occasionally negative here or

2391
01:49:39,920 --> 01:49:44,239
something

2392
01:49:41,039 --> 01:49:46,000
right um the other

2393
01:49:44,238 --> 01:49:47,839
possibility is that there's actually

2394
01:49:46,000 --> 01:49:49,039
invalid values floating around

2395
01:49:47,840 --> 01:49:50,480
out there and they just don't

2396
01:49:49,039 --> 01:49:52,079
contaminate things normally so it

2397
01:49:50,479 --> 01:49:55,279
actually was

2398
01:49:52,079 --> 01:49:57,039
that actually is catching a problem uh

2399
01:49:55,279 --> 01:49:59,039
that is actually related and we should

2400
01:49:57,039 --> 01:50:03,679
pay attention to it and i don't know

2401
01:49:59,039 --> 01:50:07,039
which of the two it is uh unfortunately

2402
01:50:03,679 --> 01:50:07,760
what i will do here is widen the zero

2403
01:50:07,039 --> 01:50:09,679
bound

2404
01:50:07,760 --> 01:50:11,679
more i'll i'll make these more

2405
01:50:09,679 --> 01:50:14,880
ridiculous just to see

2406
01:50:11,679 --> 01:50:18,000
if it still happens right

2407
01:50:14,880 --> 01:50:18,480
and so i'm just trying to provoke it

2408
01:50:18,000 --> 01:50:25,840
there

2409
01:50:18,479 --> 01:50:25,839
a little bit uh and we'll see

2410
01:50:27,439 --> 01:50:29,839
all right

2411
01:50:31,679 --> 01:50:35,920
so literally just doing that

2412
01:50:37,359 --> 01:50:42,479
it changes sometimes right you saw it

2413
01:50:39,679 --> 01:50:42,480
change to zero

2414
01:50:43,118 --> 01:50:47,279
and i have no idea why right

2415
01:50:47,920 --> 01:50:51,920
but we really should not be seeing

2416
01:50:49,599 --> 01:50:52,319
lighting values in that range i don't

2417
01:50:51,920 --> 01:50:56,639
think

2418
01:50:52,319 --> 01:50:58,639
unless i'm misremembering like

2419
01:50:56,639 --> 01:51:00,719
how this system is actually functioning

2420
01:50:58,639 --> 01:51:03,599
it is true that the spec atlas

2421
01:51:00,719 --> 01:51:03,599
is like

2422
01:51:04,319 --> 01:51:07,759
i feel like the spec atlas is is no the

2423
01:51:07,198 --> 01:51:09,919
second

2424
01:51:07,760 --> 01:51:10,960
is persistent so i feel like it should

2425
01:51:09,920 --> 01:51:15,279
never

2426
01:51:10,960 --> 01:51:17,599
be out in that kind of ridiculous range

2427
01:51:15,279 --> 01:51:17,599
um

2428
01:51:19,359 --> 01:51:24,158
so i do i do think that's indicative of

2429
01:51:21,920 --> 01:51:26,480
the fact that there's probably something

2430
01:51:24,158 --> 01:51:28,879
bad going on where some values like on

2431
01:51:26,479 --> 01:51:35,839
the edges or something maybe

2432
01:51:28,880 --> 01:51:35,840
uh are are busted

2433
01:51:42,719 --> 01:51:49,198
so let's suppose we do again like

2434
01:51:46,000 --> 01:52:03,840
maybe we check a tighter bound now

2435
01:51:49,198 --> 01:52:03,839
and see it should be zero more often

2436
01:52:10,479 --> 01:52:13,678
uh so there's a couple of things going

2437
01:52:12,238 --> 01:52:17,039
on there so so

2438
01:52:13,679 --> 01:52:18,079
yeah maybe the check is bad the other

2439
01:52:17,039 --> 01:52:20,000
thing i was thinking is you know it

2440
01:52:18,079 --> 01:52:22,479
might be that the entire we don't

2441
01:52:20,000 --> 01:52:25,198
compute the entire atlas every time

2442
01:52:22,479 --> 01:52:26,158
either like i don't remember if we

2443
01:52:25,198 --> 01:52:29,359
intentionally leave

2444
01:52:26,158 --> 01:52:34,399
some of the atlas unprocessed but it is

2445
01:52:29,359 --> 01:52:34,399
kind of true that

2446
01:52:36,560 --> 01:52:40,159
it is kind of true that like

2447
01:52:40,238 --> 01:52:43,439
assuming that i'm checking this properly

2448
01:52:42,560 --> 01:52:46,320
it seems like we

2449
01:52:43,439 --> 01:52:49,039
maybe aren't processing all of our

2450
01:52:46,319 --> 01:52:52,719
textiles the way we should be

2451
01:52:49,039 --> 01:52:52,719
like something seems busted there

2452
01:52:53,359 --> 01:53:00,158
uh and i'm not exactly sure i know

2453
01:52:58,479 --> 01:53:02,479
you know why we would ever be actually

2454
01:53:00,158 --> 01:53:04,960
getting those problems

2455
01:53:02,479 --> 01:53:06,959
like it doesn't seem like that's that

2456
01:53:04,960 --> 01:53:10,480
doesn't seem sane

2457
01:53:06,960 --> 01:53:14,560
um and so so something's up

2458
01:53:10,479 --> 01:53:14,559
with that and i don't know what

2459
01:53:14,960 --> 01:53:18,560
yeah yeah i don't really know

2460
01:53:19,679 --> 01:53:23,679
uh also our trees are missing i should

2461
01:53:22,158 --> 01:53:28,799
guess so we should go fix that

2462
01:53:23,679 --> 01:53:28,800
part of the um for the tags as well

2463
01:53:35,359 --> 01:53:41,839
does our intro still work by the way

2464
01:53:46,639 --> 01:53:49,760
i haven't checked it in a while

2465
01:53:53,118 --> 01:53:56,799
it doesn't look like it does so our tags

2466
01:53:55,760 --> 01:53:59,039
for the intro

2467
01:53:56,800 --> 01:54:00,239
are also busted so we we should probably

2468
01:53:59,039 --> 01:54:01,679
finish the tag stuff

2469
01:54:00,238 --> 01:54:03,839
we can do that sorry in this wait so the

2470
01:54:01,679 --> 01:54:05,118
trees and the and this are both missing

2471
01:54:03,840 --> 01:54:07,199
and then we have the lighting bug and

2472
01:54:05,118 --> 01:54:11,279
then i think we're back to good

2473
01:54:07,198 --> 01:54:12,799
um and hey we also have our orphans now

2474
01:54:11,279 --> 01:54:13,359
we should also put our furniture in and

2475
01:54:12,800 --> 01:54:16,400
such

2476
01:54:13,359 --> 01:54:19,920
and start decorating the orphanage

2477
01:54:16,399 --> 01:54:21,359
um so yeah so i don't know those tags

2478
01:54:19,920 --> 01:54:25,199
don't look like they're working right

2479
01:54:21,359 --> 01:54:26,639
on the intro as well so

2480
01:54:25,198 --> 01:54:37,839
so we'll have to take a look at that

2481
01:54:26,639 --> 01:54:37,840
let's go ahead and do q a for now

2482
01:54:48,840 --> 01:54:51,840
stretching

2483
01:55:13,840 --> 01:55:18,880
yes the uh well so it depends what you

2484
01:55:17,198 --> 01:55:22,000
mean max trucks

2485
01:55:18,880 --> 01:55:22,000
about um

2486
01:55:22,079 --> 01:55:25,118
about rendering the computed light

2487
01:55:23,599 --> 01:55:27,520
bounce into texture

2488
01:55:25,118 --> 01:55:28,479
so at the moment we just do the lighting

2489
01:55:27,520 --> 01:55:31,040
on the cpu

2490
01:55:28,479 --> 01:55:32,000
we haven't ported it over to the gpu yet

2491
01:55:31,039 --> 01:55:35,198
because

2492
01:55:32,000 --> 01:55:36,800
it's not really quite as good as we

2493
01:55:35,198 --> 01:55:38,638
probably would want it to be before

2494
01:55:36,800 --> 01:55:41,039
moving it over there

2495
01:55:38,639 --> 01:55:43,039
um although obviously we would get a

2496
01:55:41,039 --> 01:55:46,639
pretty massive speed increase probably

2497
01:55:43,039 --> 01:55:50,079
if we did but um

2498
01:55:46,639 --> 01:55:51,520
so we don't render the computed light

2499
01:55:50,079 --> 01:55:54,079
bounces into a texture

2500
01:55:51,520 --> 01:55:55,040
in the sense that we don't use the gpu

2501
01:55:54,079 --> 01:55:57,118
to do it

2502
01:55:55,039 --> 01:55:59,198
but we do render computer light bounces

2503
01:55:57,118 --> 01:56:02,000
into a texture in the sense that we do

2504
01:55:59,198 --> 01:56:03,678
use the cpu to generate a texture that

2505
01:56:02,000 --> 01:56:06,560
has the light bounces

2506
01:56:03,679 --> 01:56:07,520
right so depending on what you mean by

2507
01:56:06,560 --> 01:56:10,639
the question

2508
01:56:07,520 --> 01:56:11,440
the answer might be yes or no but but

2509
01:56:10,639 --> 01:56:15,359
the process

2510
01:56:11,439 --> 01:56:18,158
is we have cpu side lighting that

2511
01:56:15,359 --> 01:56:19,279
does a bunch of bounce lighting and then

2512
01:56:18,158 --> 01:56:22,000
it renders

2513
01:56:19,279 --> 01:56:23,359
uh it produces a texture that it sends

2514
01:56:22,000 --> 01:56:26,079
to the graphics card

2515
01:56:23,359 --> 01:56:29,598
that the graphics card then samples for

2516
01:56:26,079 --> 01:56:31,679
the lighting

2517
01:56:29,599 --> 01:56:33,199
uh and there's no reason we can't do

2518
01:56:31,679 --> 01:56:35,359
that on the gpu

2519
01:56:33,198 --> 01:56:36,879
we just don't yet because as soon as you

2520
01:56:35,359 --> 01:56:38,559
move something to the gpu it becomes

2521
01:56:36,880 --> 01:56:40,840
even harder to debug

2522
01:56:38,560 --> 01:56:42,239
so you know typically for something like

2523
01:56:40,840 --> 01:56:43,360
this

2524
01:56:42,238 --> 01:56:45,198
i'm always going to do a cpu

2525
01:56:43,359 --> 01:56:46,719
implementation first and i'm only ever

2526
01:56:45,198 --> 01:56:49,279
going to move it to the gpu like at the

2527
01:56:46,719 --> 01:56:51,760
end when i when i want to like

2528
01:56:49,279 --> 01:56:53,519
uh provide the po the most optimized

2529
01:56:51,760 --> 01:56:57,039
possible

2530
01:56:53,520 --> 01:56:57,760
path uh but you know so for right now we

2531
01:56:57,039 --> 01:57:01,039
just do

2532
01:56:57,760 --> 01:57:03,199
a cpu uh implementation

2533
01:57:01,039 --> 01:57:05,439
and it is slower it is slower than it

2534
01:57:03,198 --> 01:57:08,559
would be if it was on the gpu

2535
01:57:05,439 --> 01:57:10,960
uh that said the cpu side one is

2536
01:57:08,560 --> 01:57:12,080
not too slow right now and it's much

2537
01:57:10,960 --> 01:57:14,560
slower than it

2538
01:57:12,079 --> 01:57:16,238
will be because even the cpu side one

2539
01:57:14,560 --> 01:57:17,360
can be sped up by probably a factor of

2540
01:57:16,238 --> 01:57:20,399
four

2541
01:57:17,359 --> 01:57:22,479
at this point because we're it's like uh

2542
01:57:20,399 --> 01:57:23,598
it's still operating on floating point

2543
01:57:22,479 --> 01:57:26,879
textile values

2544
01:57:23,599 --> 01:57:29,520
which are just completely unnecessary uh

2545
01:57:26,880 --> 01:57:31,760
and and massively like cash inefficient

2546
01:57:29,520 --> 01:57:31,760
right

2547
01:57:32,000 --> 01:57:39,359
so uh when we decide to kind of bake

2548
01:57:35,920 --> 01:57:41,359
some of that stuff a little bit more

2549
01:57:39,359 --> 01:57:42,399
for shipping even the cpu side one could

2550
01:57:41,359 --> 01:57:44,319
probably be made to

2551
01:57:42,399 --> 01:57:45,920
run fast enough when we when we trim out

2552
01:57:44,319 --> 01:57:49,198
the fat

2553
01:57:45,920 --> 01:57:53,840
um but we haven't like

2554
01:57:49,198 --> 01:57:53,839
done any of that

2555
01:58:04,840 --> 01:58:07,840
um

2556
01:58:20,819 --> 01:58:29,978
[Music]

2557
01:58:32,840 --> 01:58:42,939
uh

2558
01:58:33,890 --> 01:58:42,939
[Music]

2559
01:58:51,118 --> 01:58:54,639
do i ever suffer from decision paralysis

2560
01:58:53,039 --> 01:58:58,639
when making a new feature

2561
01:58:54,639 --> 01:59:01,440
uh not really no um

2562
01:58:58,639 --> 01:59:04,079
i do have problems when if i'm trying to

2563
01:59:01,439 --> 01:59:08,319
like get a really high quality results

2564
01:59:04,079 --> 01:59:11,840
on something though of a similar thing

2565
01:59:08,319 --> 01:59:14,960
which is just that if you

2566
01:59:11,840 --> 01:59:14,960
if you imagine like

2567
01:59:15,439 --> 01:59:22,399
if you imagine the equivalent

2568
01:59:18,800 --> 01:59:26,159
of of decision paralysis

2569
01:59:22,399 --> 01:59:28,238
for exploratory coding where you're like

2570
01:59:26,158 --> 01:59:29,198
trying lots of stuff and nothing seems

2571
01:59:28,238 --> 01:59:33,439
to be

2572
01:59:29,198 --> 01:59:36,399
good enough right um

2573
01:59:33,439 --> 01:59:37,519
that is sort of similar it's just it's

2574
01:59:36,399 --> 01:59:40,079
happening

2575
01:59:37,520 --> 01:59:41,440
in the actual act of programming as

2576
01:59:40,079 --> 01:59:43,279
opposed to

2577
01:59:41,439 --> 01:59:45,198
the act of sitting around thinking about

2578
01:59:43,279 --> 01:59:48,238
it right

2579
01:59:45,198 --> 01:59:50,079
um and the

2580
01:59:48,238 --> 01:59:52,799
problem with stuff like that is there

2581
01:59:50,079 --> 01:59:54,639
really isn't a solution for it

2582
01:59:52,800 --> 01:59:55,840
the only thing you can do is just keep

2583
01:59:54,639 --> 01:59:57,520
working on the problem

2584
01:59:55,840 --> 01:59:59,599
or like you know shake up your thinking

2585
01:59:57,520 --> 02:00:00,960
you know try some crazy stuff or or

2586
01:59:59,599 --> 02:00:02,800
leave it for a week and then come back

2587
02:00:00,960 --> 02:00:03,599
to it and see you know you can do stuff

2588
02:00:02,800 --> 02:00:05,199
like that

2589
02:00:03,599 --> 02:00:07,840
but your only other option is to just

2590
02:00:05,198 --> 02:00:09,678
lower your standards right

2591
02:00:07,840 --> 02:00:10,960
so if you have to ship something and you

2592
02:00:09,679 --> 02:00:11,599
just have to lower your standards you

2593
02:00:10,960 --> 02:00:13,920
can do that

2594
02:00:11,599 --> 02:00:15,119
but there's no really other solution the

2595
02:00:13,920 --> 02:00:17,359
solution to

2596
02:00:15,118 --> 02:00:18,960
decision paralysis is just start typing

2597
02:00:17,359 --> 02:00:20,158
like like pick something and implement

2598
02:00:18,960 --> 02:00:22,079
it because you'll learn something

2599
02:00:20,158 --> 02:00:24,799
right so there's a solution to decision

2600
02:00:22,079 --> 02:00:27,679
paralysis there's no real solution to i

2601
02:00:24,800 --> 02:00:30,960
can't find an answer that satisfies me

2602
02:00:27,679 --> 02:00:32,560
um even with exploration there's really

2603
02:00:30,960 --> 02:00:34,560
not a lot you can do you can you know

2604
02:00:32,560 --> 02:00:36,320
you can ask other people for advice you

2605
02:00:34,560 --> 02:00:38,960
can

2606
02:00:36,319 --> 02:00:39,920
uh try some random experiments that are

2607
02:00:38,960 --> 02:00:42,319
wackier than what you're

2608
02:00:39,920 --> 02:00:44,000
doing you can read a book you know you

2609
02:00:42,319 --> 02:00:46,000
can you can try to like shake your brain

2610
02:00:44,000 --> 02:00:47,760
into different places to see

2611
02:00:46,000 --> 02:00:49,439
to force you to think about the problem

2612
02:00:47,760 --> 02:00:50,880
from different angles but you know if

2613
02:00:49,439 --> 02:00:52,158
it's not coming together it's not coming

2614
02:00:50,880 --> 02:00:55,359
together so i have

2615
02:00:52,158 --> 02:00:56,799
that happen sometimes um

2616
02:00:55,359 --> 02:00:59,279
and when you're working on a hard

2617
02:00:56,800 --> 02:01:08,560
problem you know that happens sometimes

2618
02:00:59,279 --> 02:01:09,840
and so so you know

2619
02:01:08,560 --> 02:01:11,760
when do i plan on releasing stroke

2620
02:01:09,840 --> 02:01:14,960
galaxy um as soon as it's ready

2621
02:01:11,760 --> 02:01:17,199
i mean you know was the bug mostly

2622
02:01:14,960 --> 02:01:18,239
in the start area once you start walking

2623
02:01:17,198 --> 02:01:21,519
it was better um

2624
02:01:18,238 --> 02:01:24,718
i don't know it seems like it's more

2625
02:01:21,520 --> 02:01:27,679
uh random and hiccuppy

2626
02:01:24,719 --> 02:01:27,679
so i don't know

2627
02:01:32,639 --> 02:01:36,400
george says for the breakpoint handmade

2628
02:01:34,319 --> 02:01:39,039
entity.cbp in

2629
02:01:36,399 --> 02:01:41,598
line 295. i believe what we're seeing

2630
02:01:39,039 --> 02:01:43,679
was the dll wasn't yet loaded

2631
02:01:41,599 --> 02:01:45,520
yeah i don't know if i believe you but

2632
02:01:43,679 --> 02:01:49,279
we can check

2633
02:01:45,520 --> 02:01:52,480
um so like here's it running right

2634
02:01:49,279 --> 02:01:52,479
um let's see

2635
02:01:53,118 --> 02:01:57,039
uh and so

2636
02:01:57,279 --> 02:02:01,759
maybe it was just like we were in a bad

2637
02:01:59,520 --> 02:02:05,840
state just then uh so where was that

2638
02:02:01,760 --> 02:02:05,840
code i don't remember it was right here

2639
02:02:07,840 --> 02:02:10,800
all right so it's working now so it

2640
02:02:09,198 --> 02:02:12,719
might have just been i don't know why we

2641
02:02:10,800 --> 02:02:15,039
were seeing a question mark

2642
02:02:12,719 --> 02:02:16,880
on it the entire time because it should

2643
02:02:15,039 --> 02:02:20,000
have loaded like right away

2644
02:02:16,880 --> 02:02:21,920
but either way um

2645
02:02:20,000 --> 02:02:24,238
it seems like it has worked itself out

2646
02:02:21,920 --> 02:02:24,239
of that

2647
02:02:24,560 --> 02:02:29,760
at least to a certain degree so so that

2648
02:02:27,198 --> 02:02:29,759
seems good

2649
02:02:30,840 --> 02:02:33,840
right

2650
02:02:48,719 --> 02:02:51,520
can you please go into more detail about

2651
02:02:50,158 --> 02:02:52,238
the lighting floating point and caching

2652
02:02:51,520 --> 02:02:54,880
efficiency

2653
02:02:52,238 --> 02:02:56,799
um sure so what i was trying to say

2654
02:02:54,880 --> 02:02:59,039
there was just that

2655
02:02:56,800 --> 02:03:00,239
uh while we're working on developing the

2656
02:02:59,039 --> 02:03:02,079
lighting

2657
02:03:00,238 --> 02:03:03,439
and until we're like okay we're pretty

2658
02:03:02,079 --> 02:03:04,719
much done with whatever we're gonna do

2659
02:03:03,439 --> 02:03:07,279
there

2660
02:03:04,719 --> 02:03:09,039
i didn't want to try to use a more

2661
02:03:07,279 --> 02:03:12,399
compact representation

2662
02:03:09,039 --> 02:03:12,399
for the lighting values

2663
02:03:13,679 --> 02:03:19,199
because like floating point i mean

2664
02:03:16,960 --> 02:03:20,960
f32 i mean obviously you could be even

2665
02:03:19,198 --> 02:03:23,439
sloppier and use doubles

2666
02:03:20,960 --> 02:03:24,079
but like f32 is like the laziest

2667
02:03:23,439 --> 02:03:26,638
encoding

2668
02:03:24,079 --> 02:03:28,639
you can use right because it takes 32

2669
02:03:26,639 --> 02:03:31,679
bits to represent a value that

2670
02:03:28,639 --> 02:03:35,118
honestly needs probably at most

2671
02:03:31,679 --> 02:03:38,319
10 or 12 16 tops

2672
02:03:35,118 --> 02:03:41,439
right so you know that

2673
02:03:38,319 --> 02:03:42,079
when you're storing rgb as three 32-bit

2674
02:03:41,439 --> 02:03:45,359
values

2675
02:03:42,079 --> 02:03:48,399
you're placing at least a 2x multiplier

2676
02:03:45,359 --> 02:03:50,158
on the cache usage right

2677
02:03:48,399 --> 02:03:51,679
every time a text has to be read in

2678
02:03:50,158 --> 02:03:52,319
you're reading at least twice as much

2679
02:03:51,679 --> 02:03:55,679
data

2680
02:03:52,319 --> 02:03:57,439
possibly more because if you just use 10

2681
02:03:55,679 --> 02:04:01,920
bits for everything you could fit them

2682
02:03:57,439 --> 02:04:05,198
into a single 32-bit value even right

2683
02:04:01,920 --> 02:04:06,639
so the way in which the lighting system

2684
02:04:05,198 --> 02:04:09,359
is running right now

2685
02:04:06,639 --> 02:04:11,039
is sort of intentionally probably

2686
02:04:09,359 --> 02:04:13,598
significantly slower than it needs to be

2687
02:04:11,039 --> 02:04:14,639
simply because we're forcing it to

2688
02:04:13,599 --> 02:04:16,960
process

2689
02:04:14,639 --> 02:04:18,800
massively more memory for for no real

2690
02:04:16,960 --> 02:04:19,760
reason other than because we don't want

2691
02:04:18,800 --> 02:04:23,119
to worry

2692
02:04:19,760 --> 02:04:23,599
about encoding problems we we don't want

2693
02:04:23,118 --> 02:04:25,519
to

2694
02:04:23,599 --> 02:04:26,800
have artifacts from the way that we

2695
02:04:25,520 --> 02:04:28,400
encode our textures

2696
02:04:26,800 --> 02:04:30,159
at the same time that we're working on

2697
02:04:28,399 --> 02:04:31,039
like lighting quality stuff and whatever

2698
02:04:30,158 --> 02:04:33,359
so

2699
02:04:31,039 --> 02:04:34,960
it's basically just a way of of reducing

2700
02:04:33,359 --> 02:04:36,078
the amount of possible places where you

2701
02:04:34,960 --> 02:04:37,599
can have bugs

2702
02:04:36,078 --> 02:04:39,519
and so that's why the lighting is

2703
02:04:37,599 --> 02:04:42,400
currently it's very piggy in terms of

2704
02:04:39,520 --> 02:04:42,400
cache usage there

2705
02:04:47,520 --> 02:04:51,040
what's the best game soundtrack you've

2706
02:04:49,520 --> 02:04:54,719
ever listened to i mean

2707
02:04:51,039 --> 02:04:54,719
probably monkey island too

2708
02:04:55,920 --> 02:04:58,239
um

2709
02:05:03,279 --> 02:05:11,039
like legend of zeldas is pretty good

2710
02:05:07,679 --> 02:05:12,078
like koji kondo music is very good but

2711
02:05:11,039 --> 02:05:14,880
sometimes it's hard to get like a

2712
02:05:12,078 --> 02:05:16,158
soundtrack to it per se

2713
02:05:14,880 --> 02:05:17,599
monkey island 2 is kind of hard of a

2714
02:05:16,158 --> 02:05:18,399
soundtrack as well because it's dynamic

2715
02:05:17,599 --> 02:05:22,319
you know both

2716
02:05:18,399 --> 02:05:22,319
both of those are dynamic scores so

2717
02:05:27,679 --> 02:05:31,199
so the koji condo and michael z land i

2718
02:05:30,238 --> 02:05:33,839
think

2719
02:05:31,198 --> 02:05:36,319
uh might be the person who the monkey

2720
02:05:33,840 --> 02:05:36,319
island one

2721
02:05:46,319 --> 02:05:52,799
uh verona chorus says hey you mentioned

2722
02:05:49,679 --> 02:05:54,399
programs used uh to do

2723
02:05:52,800 --> 02:05:55,840
port usage could you name some so i can

2724
02:05:54,399 --> 02:05:57,679
check them out i can explain the extra

2725
02:05:55,840 --> 02:06:00,960
report notation on ups

2726
02:05:57,679 --> 02:06:02,800
example one times pox for c-mob l

2727
02:06:00,960 --> 02:06:03,920
uh yeah i mean i think we've gone over

2728
02:06:02,800 --> 02:06:05,360
this before so i would search the

2729
02:06:03,920 --> 02:06:08,560
archive

2730
02:06:05,359 --> 02:06:10,799
um but it's pretty straightforward uh

2731
02:06:08,560 --> 02:06:11,840
to to do this stuff you just it just

2732
02:06:10,800 --> 02:06:15,199
takes a little learning

2733
02:06:11,840 --> 02:06:18,480
so um

2734
02:06:15,198 --> 02:06:20,799
if you go to ups dot info

2735
02:06:18,479 --> 02:06:22,559
uh that's where you can get all your

2736
02:06:20,800 --> 02:06:26,159
micro op tables from

2737
02:06:22,560 --> 02:06:28,159
right so uh if you take a look

2738
02:06:26,158 --> 02:06:30,078
uh if you go to upside info and you

2739
02:06:28,158 --> 02:06:31,839
bring up the table

2740
02:06:30,078 --> 02:06:34,639
and you look at something like you just

2741
02:06:31,840 --> 02:06:38,159
said see marvel right

2742
02:06:34,639 --> 02:06:40,880
uh the instructions will be listed

2743
02:06:38,158 --> 02:06:42,238
on the side they'll be listed for each

2744
02:06:40,880 --> 02:06:45,520
type of instruction because

2745
02:06:42,238 --> 02:06:48,238
for example like because uh

2746
02:06:45,520 --> 02:06:49,360
the x64 is not really a risk

2747
02:06:48,238 --> 02:06:51,759
architecture

2748
02:06:49,359 --> 02:06:52,559
like it is sort of a risk architecture

2749
02:06:51,760 --> 02:06:54,159
internally

2750
02:06:52,560 --> 02:06:56,880
in the sense that the micro ops are kind

2751
02:06:54,158 --> 02:06:57,118
of risk but the actual instructions that

2752
02:06:56,880 --> 02:07:00,239
you

2753
02:06:57,118 --> 02:07:02,319
feed it are are fairly complicated so

2754
02:07:00,238 --> 02:07:04,000
for example in a typical risk

2755
02:07:02,319 --> 02:07:05,759
architecture

2756
02:07:04,000 --> 02:07:07,039
you know and i'm not a hardware person

2757
02:07:05,760 --> 02:07:07,840
so you know take this with a grain of

2758
02:07:07,039 --> 02:07:09,118
salt but

2759
02:07:07,840 --> 02:07:11,599
if someone says to me that this

2760
02:07:09,118 --> 02:07:13,679
architecture's risk then i usually don't

2761
02:07:11,599 --> 02:07:14,800
think of instructions as being able to

2762
02:07:13,679 --> 02:07:19,199
like

2763
02:07:14,800 --> 02:07:21,599
use a memory address as a location

2764
02:07:19,198 --> 02:07:23,279
i mean as an operand for anything other

2765
02:07:21,599 --> 02:07:26,000
than just like a loader store

2766
02:07:23,279 --> 02:07:27,039
so so you wouldn't expect like an ad for

2767
02:07:26,000 --> 02:07:29,520
example

2768
02:07:27,039 --> 02:07:32,319
to be able to take a memory address that

2769
02:07:29,520 --> 02:07:33,920
you're using to add from

2770
02:07:32,319 --> 02:07:35,679
um but like something like x64 you can

2771
02:07:33,920 --> 02:07:39,359
do that like almost every

2772
02:07:35,679 --> 02:07:42,399
instruction that does anything

2773
02:07:39,359 --> 02:07:45,439
like that like an ad or something

2774
02:07:42,399 --> 02:07:47,039
can have an operand that's like not a

2775
02:07:45,439 --> 02:07:48,479
register it can have an operand that's

2776
02:07:47,039 --> 02:07:50,880
like an address in memory

2777
02:07:48,479 --> 02:07:52,638
right and not just an address in memory

2778
02:07:50,880 --> 02:07:54,719
but like an address in memory encoded

2779
02:07:52,639 --> 02:07:56,719
with actual like offsets and stuff

2780
02:07:54,719 --> 02:07:58,399
right so it's it's fairly complicated so

2781
02:07:56,719 --> 02:08:02,560
so xcz4 is kind of a

2782
02:07:58,399 --> 02:08:05,039
sisk instruction set kind of right

2783
02:08:02,560 --> 02:08:06,000
and so when you talk about a particular

2784
02:08:05,039 --> 02:08:07,359
instruction

2785
02:08:06,000 --> 02:08:10,000
you can't really talk about what

2786
02:08:07,359 --> 02:08:12,238
microops the instruction has

2787
02:08:10,000 --> 02:08:13,198
you have to talk about how many micro

2788
02:08:12,238 --> 02:08:16,238
ops

2789
02:08:13,198 --> 02:08:17,839
um and which types of micro ops a

2790
02:08:16,238 --> 02:08:21,198
particular instruction

2791
02:08:17,840 --> 02:08:22,400
and operand set have because even though

2792
02:08:21,198 --> 02:08:24,238
you take something like c

2793
02:08:22,399 --> 02:08:26,238
mob l and you say well that's an

2794
02:08:24,238 --> 02:08:28,000
instruction called cmov l

2795
02:08:26,238 --> 02:08:29,919
it's actually many different types of

2796
02:08:28,000 --> 02:08:31,279
instructions depending on what the

2797
02:08:29,920 --> 02:08:33,679
addresses were

2798
02:08:31,279 --> 02:08:35,118
right what the operands were so what you

2799
02:08:33,679 --> 02:08:36,560
can see here is

2800
02:08:35,118 --> 02:08:38,319
this lists all of the possible

2801
02:08:36,560 --> 02:08:38,800
combinations of operands that you might

2802
02:08:38,319 --> 02:08:41,118
have

2803
02:08:38,800 --> 02:08:42,320
like 32-bit register 32-bit memory

2804
02:08:41,118 --> 02:08:43,759
location

2805
02:08:42,319 --> 02:08:46,238
and what you can see is that the

2806
02:08:43,760 --> 02:08:47,679
micro-op breakdown is actually different

2807
02:08:46,238 --> 02:08:49,118
depending on which one there are and you

2808
02:08:47,679 --> 02:08:51,440
can see the difference

2809
02:08:49,118 --> 02:08:52,880
the difference is that in general if

2810
02:08:51,439 --> 02:08:55,919
there's a memory operand

2811
02:08:52,880 --> 02:08:58,078
it has a another part to it right so so

2812
02:08:55,920 --> 02:08:59,359
there's one part that's always there

2813
02:08:58,078 --> 02:09:01,359
and then depending on whether there's a

2814
02:08:59,359 --> 02:09:05,359
memory operand as the second operand

2815
02:09:01,359 --> 02:09:07,598
then there's another you know one here

2816
02:09:05,359 --> 02:09:08,399
so you first have to look at the side

2817
02:09:07,599 --> 02:09:10,560
and decide

2818
02:09:08,399 --> 02:09:12,319
what you're actually calling so if for

2819
02:09:10,560 --> 02:09:16,480
example you happen to be calling

2820
02:09:12,319 --> 02:09:20,078
a 64-bit register um cmov so that so the

2821
02:09:16,479 --> 02:09:21,279
the destination is going to be a 64-bit

2822
02:09:20,078 --> 02:09:23,840
register

2823
02:09:21,279 --> 02:09:24,719
and the source the second source operand

2824
02:09:23,840 --> 02:09:28,639
is going to be

2825
02:09:24,719 --> 02:09:30,560
a uh a memory location that's 64 bits

2826
02:09:28,639 --> 02:09:32,159
then you're looking at this particular

2827
02:09:30,560 --> 02:09:33,840
one right

2828
02:09:32,158 --> 02:09:35,920
and then the way to read this which is

2829
02:09:33,840 --> 02:09:37,679
the question like how do i read the port

2830
02:09:35,920 --> 02:09:40,480
usage

2831
02:09:37,679 --> 02:09:41,520
uh the so you've got a couple different

2832
02:09:40,479 --> 02:09:44,879
pieces

2833
02:09:41,520 --> 02:09:47,679
you can separate them by the plus each

2834
02:09:44,880 --> 02:09:48,078
part of this that's separated by a plus

2835
02:09:47,679 --> 02:09:51,279
is

2836
02:09:48,078 --> 02:09:53,840
its own micro-op right

2837
02:09:51,279 --> 02:09:54,319
so when you see this plus this these are

2838
02:09:53,840 --> 02:09:56,000
two

2839
02:09:54,319 --> 02:09:57,920
separate micro-ops that we're talking

2840
02:09:56,000 --> 02:10:01,118
about here

2841
02:09:57,920 --> 02:10:04,239
the one in both cases and the times is

2842
02:10:01,118 --> 02:10:07,679
how many micro ops we're talking about

2843
02:10:04,238 --> 02:10:09,678
in this particular category

2844
02:10:07,679 --> 02:10:10,719
so we're talking about one micro op

2845
02:10:09,679 --> 02:10:13,760
being issued from

2846
02:10:10,719 --> 02:10:15,039
this category and one micro app being

2847
02:10:13,760 --> 02:10:17,520
issued from this category

2848
02:10:15,039 --> 02:10:20,319
and they will both be issued right so it

2849
02:10:17,520 --> 02:10:22,400
requires both of them

2850
02:10:20,319 --> 02:10:24,399
then you get the little p notation here

2851
02:10:22,399 --> 02:10:25,359
the p notation tells you which ports it

2852
02:10:24,399 --> 02:10:28,399
goes on

2853
02:10:25,359 --> 02:10:30,799
so this is saying one micro op

2854
02:10:28,399 --> 02:10:32,960
that can issue on and this is read as

2855
02:10:30,800 --> 02:10:34,239
either so the p with the numbers is

2856
02:10:32,960 --> 02:10:36,639
either

2857
02:10:34,238 --> 02:10:37,519
one micro op that can issue on either

2858
02:10:36,639 --> 02:10:40,400
port zero

2859
02:10:37,520 --> 02:10:42,639
or port six your choice so if either one

2860
02:10:40,399 --> 02:10:45,920
is free it could issue

2861
02:10:42,639 --> 02:10:50,159
plus one micro op issued on either

2862
02:10:45,920 --> 02:10:53,760
port two or port three right

2863
02:10:50,158 --> 02:10:56,479
so that is how you read those

2864
02:10:53,760 --> 02:10:57,440
so if you want to know what is required

2865
02:10:56,479 --> 02:10:59,919
to execute this

2866
02:10:57,439 --> 02:11:00,719
you know that the front end will turn

2867
02:10:59,920 --> 02:11:04,239
this c-mob

2868
02:11:00,719 --> 02:11:07,039
l into two micro-ops

2869
02:11:04,238 --> 02:11:07,598
one of those micro-ops will be able to

2870
02:11:07,039 --> 02:11:10,000
issue

2871
02:11:07,599 --> 02:11:11,679
on ports two or three and the other one

2872
02:11:10,000 --> 02:11:12,639
we'll be able to issue on ports zero and

2873
02:11:11,679 --> 02:11:17,840
six

2874
02:11:12,639 --> 02:11:21,679
i believe but i don't know

2875
02:11:17,840 --> 02:11:26,400
that this is not in any particular

2876
02:11:21,679 --> 02:11:29,679
order the reason i say that is because

2877
02:11:26,399 --> 02:11:33,279
like logically speaking

2878
02:11:29,679 --> 02:11:37,039
this cmov l would have to load

2879
02:11:33,279 --> 02:11:38,719
the memory operand first i would assume

2880
02:11:37,039 --> 02:11:40,399
before it can do anything i mean i don't

2881
02:11:38,719 --> 02:11:43,760
really know that that's true

2882
02:11:40,399 --> 02:11:43,759
um so don't quote me on that

2883
02:11:44,158 --> 02:11:49,279
but you would expect so i can just tell

2884
02:11:47,920 --> 02:11:51,359
you ports two and three

2885
02:11:49,279 --> 02:11:52,719
on a skylake processor which is what's

2886
02:11:51,359 --> 02:11:54,799
checked here

2887
02:11:52,719 --> 02:11:55,920
ports two and three are memory

2888
02:11:54,800 --> 02:11:58,560
processing ports

2889
02:11:55,920 --> 02:11:59,760
so the ports two and three are used to

2890
02:11:58,560 --> 02:12:01,440
do the load

2891
02:11:59,760 --> 02:12:03,280
right there they used to like load the

2892
02:12:01,439 --> 02:12:06,960
information

2893
02:12:03,279 --> 02:12:10,479
into the processor and so you wouldn't

2894
02:12:06,960 --> 02:12:12,158
expect it to execute this micro up first

2895
02:12:10,479 --> 02:12:13,839
the zero six which is the one that's

2896
02:12:12,158 --> 02:12:17,118
actually doing the cmov

2897
02:12:13,840 --> 02:12:20,319
right you would expect this to execute

2898
02:12:17,118 --> 02:12:23,439
first and yet this is written second

2899
02:12:20,319 --> 02:12:26,158
so i i don't think

2900
02:12:23,439 --> 02:12:27,759
that that these are like when they write

2901
02:12:26,158 --> 02:12:28,638
it out i don't think that these are

2902
02:12:27,760 --> 02:12:31,280
written in

2903
02:12:28,639 --> 02:12:33,440
order they're just saying these are the

2904
02:12:31,279 --> 02:12:35,920
two things that will have to happen

2905
02:12:33,439 --> 02:12:37,678
right and they'll happen in whatever

2906
02:12:35,920 --> 02:12:39,118
order the processor thinks they have to

2907
02:12:37,679 --> 02:12:49,440
happen in but i don't think they're

2908
02:12:39,118 --> 02:12:52,559
trying to tell you that order here

2909
02:12:49,439 --> 02:12:54,000
right so

2910
02:12:52,560 --> 02:12:55,599
uh hopefully that answers that part of

2911
02:12:54,000 --> 02:12:57,118
the question and then the other part of

2912
02:12:55,599 --> 02:12:59,920
the question was like

2913
02:12:57,118 --> 02:13:02,238
how do i analyze these so like if you go

2914
02:12:59,920 --> 02:13:05,679
to godbolts uh

2915
02:13:02,238 --> 02:13:09,519
i can quickly show you what you set

2916
02:13:05,679 --> 02:13:11,599
um for that uh so if we take a look at

2917
02:13:09,520 --> 02:13:14,639
godbolt and we just say

2918
02:13:11,599 --> 02:13:16,960
okay like i wanna know what the port

2919
02:13:14,639 --> 02:13:18,800
usage is for one of these things

2920
02:13:16,960 --> 02:13:21,279
um the easiest way to do it because

2921
02:13:18,800 --> 02:13:22,000
intel has now decided to stop supporting

2922
02:13:21,279 --> 02:13:24,000
ayaka

2923
02:13:22,000 --> 02:13:25,439
unfortunately even though it was better

2924
02:13:24,000 --> 02:13:26,399
than this thing because this thing is

2925
02:13:25,439 --> 02:13:28,158
kind of crappy

2926
02:13:26,399 --> 02:13:30,000
i don't know if they've got it made it

2927
02:13:28,158 --> 02:13:33,039
better yet but if you select

2928
02:13:30,000 --> 02:13:34,560
a modern version of clang so x86 64

2929
02:13:33,039 --> 02:13:37,760
clang

2930
02:13:34,560 --> 02:13:38,560
version 9 and up probably has it i would

2931
02:13:37,760 --> 02:13:41,840
i would think

2932
02:13:38,560 --> 02:13:42,560
i don't really know um but if you go on

2933
02:13:41,840 --> 02:13:44,560
here

2934
02:13:42,560 --> 02:13:47,119
and you select a version of clang and

2935
02:13:44,560 --> 02:13:50,480
you're compiling for clang

2936
02:13:47,118 --> 02:13:52,719
you should then be able to add a tool

2937
02:13:50,479 --> 02:13:55,439
so in this little drop down here where

2938
02:13:52,719 --> 02:13:58,880
you do add tool

2939
02:13:55,439 --> 02:14:00,078
this llvm mca thing that stands for like

2940
02:13:58,880 --> 02:14:01,359
probably i you know i don't really know

2941
02:14:00,078 --> 02:14:02,238
what stands for but i think it stands

2942
02:14:01,359 --> 02:14:04,960
something like micro

2943
02:14:02,238 --> 02:14:07,039
micro code analysis or micro

2944
02:14:04,960 --> 02:14:08,480
architecture code analysis or something

2945
02:14:07,039 --> 02:14:12,158
like that

2946
02:14:08,479 --> 02:14:14,158
um if you add that tool

2947
02:14:12,158 --> 02:14:15,359
that will actually give you the port

2948
02:14:14,158 --> 02:14:17,279
breakdown

2949
02:14:15,359 --> 02:14:19,118
and it's not as easy as i'm making it

2950
02:14:17,279 --> 02:14:22,238
look because actually it's not

2951
02:14:19,118 --> 02:14:22,559
quite what you think it is over here and

2952
02:14:22,238 --> 02:14:26,158
we

2953
02:14:22,560 --> 02:14:29,920
talk about that in a second um but

2954
02:14:26,158 --> 02:14:34,000
for just just in terms of like

2955
02:14:29,920 --> 02:14:37,279
what you just in terms of of like

2956
02:14:34,000 --> 02:14:41,920
looking at how the port breakdown goes

2957
02:14:37,279 --> 02:14:43,840
just to start with this is what you know

2958
02:14:41,920 --> 02:14:45,359
this is what you were asking for right

2959
02:14:43,840 --> 02:14:48,719
so this is the thing

2960
02:14:45,359 --> 02:14:51,839
that goes and says okay um

2961
02:14:48,719 --> 02:14:52,719
here are the uh here are the

2962
02:14:51,840 --> 02:14:55,760
instructions

2963
02:14:52,719 --> 02:14:56,880
and this first part here uh and it will

2964
02:14:55,760 --> 02:15:00,000
tell you some stuff

2965
02:14:56,880 --> 02:15:02,960
about like you know stats basically

2966
02:15:00,000 --> 02:15:03,439
so this instruction it's saying uh is

2967
02:15:02,960 --> 02:15:06,639
going to

2968
02:15:03,439 --> 02:15:08,158
need three micro ops to issue

2969
02:15:06,639 --> 02:15:10,078
it's going gonna have a latency of two

2970
02:15:08,158 --> 02:15:11,920
cycles it's gonna have reciprocal

2971
02:15:10,078 --> 02:15:14,238
throughput of one cycle

2972
02:15:11,920 --> 02:15:15,599
uh and in terms of whether or not it

2973
02:15:14,238 --> 02:15:18,078
uses loads or stores

2974
02:15:15,599 --> 02:15:19,840
it does not use a load it does

2975
02:15:18,078 --> 02:15:21,920
potentially use a store

2976
02:15:19,840 --> 02:15:24,078
um and does not have any side effects

2977
02:15:21,920 --> 02:15:27,118
right and you can see here

2978
02:15:24,078 --> 02:15:28,399
like the the may store and may load

2979
02:15:27,118 --> 02:15:31,198
you know these are all going to load

2980
02:15:28,399 --> 02:15:34,879
they're loading because of this right

2981
02:15:31,198 --> 02:15:37,359
and so on so that's the first part

2982
02:15:34,880 --> 02:15:39,039
not super useful but you know it's like

2983
02:15:37,359 --> 02:15:42,399
a heads up view

2984
02:15:39,039 --> 02:15:43,920
or whatever uh then you get down to here

2985
02:15:42,399 --> 02:15:46,158
and this is one of the most annoying

2986
02:15:43,920 --> 02:15:48,399
things in the world and i have no idea

2987
02:15:46,158 --> 02:15:50,078
why they did this but you've got ports

2988
02:15:48,399 --> 02:15:52,799
numbered zero through seven

2989
02:15:50,078 --> 02:15:53,439
on skylake and they helpfully labeled

2990
02:15:52,800 --> 02:15:56,239
those

2991
02:15:53,439 --> 02:15:58,158
two through nine like all you guys had

2992
02:15:56,238 --> 02:16:00,638
to do was put the skx divider and the

2993
02:15:58,158 --> 02:16:04,000
xsp divider at the end

2994
02:16:00,639 --> 02:16:06,880
and this would have worked but no so you

2995
02:16:04,000 --> 02:16:10,158
get to mentally in your head

2996
02:16:06,880 --> 02:16:13,118
translate the actual listing

2997
02:16:10,158 --> 02:16:14,158
here like as if it was shifted down by

2998
02:16:13,118 --> 02:16:18,880
two

2999
02:16:14,158 --> 02:16:22,319
right um so it's like

3000
02:16:18,880 --> 02:16:23,920
right um

3001
02:16:22,319 --> 02:16:26,238
but basically what you do then is you

3002
02:16:23,920 --> 02:16:28,560
can read this and these are the ports

3003
02:16:26,238 --> 02:16:31,039
across here and they line up with these

3004
02:16:28,560 --> 02:16:33,120
so port zero is actually two

3005
02:16:31,039 --> 02:16:36,879
so the numbers that are in here are all

3006
02:16:33,120 --> 02:16:40,160
shifted so p06 is actually p28

3007
02:16:36,879 --> 02:16:42,558
on this right so sucky

3008
02:16:40,159 --> 02:16:43,519
um but that's just the way it is this is

3009
02:16:42,558 --> 02:16:45,199
why i say

3010
02:16:43,519 --> 02:16:46,960
iaco is way better it's way easier to

3011
02:16:45,200 --> 02:16:48,800
read this thing's really hard to read

3012
02:16:46,959 --> 02:16:51,119
for this reason

3013
02:16:48,799 --> 02:16:53,119
and no one cares but so we go over here

3014
02:16:51,120 --> 02:16:56,479
to resource pressure per iteration

3015
02:16:53,120 --> 02:16:58,320
and what you see is these

3016
02:16:56,478 --> 02:16:59,599
numbers here

3017
02:16:58,319 --> 02:17:03,039
[Music]

3018
02:16:59,599 --> 02:17:05,679
what they represent is like the chance

3019
02:17:03,040 --> 02:17:06,559
that the micro op got shoved into this

3020
02:17:05,679 --> 02:17:08,558
port

3021
02:17:06,558 --> 02:17:10,159
is usually sort of the way to look at it

3022
02:17:08,558 --> 02:17:10,959
i mean it's again it's kind of hard to

3023
02:17:10,159 --> 02:17:14,000
explain

3024
02:17:10,959 --> 02:17:15,358
what it's trying to show you um but

3025
02:17:14,000 --> 02:17:17,200
but just to kind of make it a little

3026
02:17:15,359 --> 02:17:19,679
more concrete

3027
02:17:17,200 --> 02:17:22,000
um what they're trying to say is like if

3028
02:17:19,679 --> 02:17:23,519
we were to just keep running this code

3029
02:17:22,000 --> 02:17:24,879
like all the time like we're just

3030
02:17:23,519 --> 02:17:25,840
running in this code running and running

3031
02:17:24,879 --> 02:17:28,159
and running it running it running it

3032
02:17:25,840 --> 02:17:32,000
running it running it running it

3033
02:17:28,159 --> 02:17:34,959
um where would we end up assigning

3034
02:17:32,000 --> 02:17:35,519
these things like and it's not really

3035
02:17:34,959 --> 02:17:37,438
it's not

3036
02:17:35,519 --> 02:17:38,559
a percentage chance because you can see

3037
02:17:37,439 --> 02:17:41,760
it's greater than one

3038
02:17:38,558 --> 02:17:42,000
and it's called resource pressure right

3039
02:17:41,760 --> 02:17:43,599
so

3040
02:17:42,000 --> 02:17:45,519
what that's basically saying is if we

3041
02:17:43,599 --> 02:17:48,318
ran it and ran it and ran it and ran

3042
02:17:45,519 --> 02:17:48,880
it right how much is it like lined up

3043
02:17:48,318 --> 02:17:51,920
behind

3044
02:17:48,879 --> 02:17:55,039
this port so it would max out like port

3045
02:17:51,920 --> 02:17:56,799
six and nine right uh and

3046
02:17:55,040 --> 02:17:59,920
and to the lesser extent these other

3047
02:17:56,799 --> 02:18:02,398
ports that's what the one in there means

3048
02:17:59,920 --> 02:18:03,519
right and it's kind of hard to

3049
02:18:02,398 --> 02:18:05,279
understand with something like this

3050
02:18:03,519 --> 02:18:07,679
because it's not a loop

3051
02:18:05,280 --> 02:18:08,319
and this is where the next part comes in

3052
02:18:07,679 --> 02:18:10,719
so

3053
02:18:08,318 --> 02:18:12,799
this is meant for analyzing loops and

3054
02:18:10,718 --> 02:18:15,358
you can see that up here you can see

3055
02:18:12,799 --> 02:18:16,478
like iterations right well iterations of

3056
02:18:15,359 --> 02:18:18,800
what like this is

3057
02:18:16,478 --> 02:18:20,159
not a loop it's going to treat your code

3058
02:18:18,799 --> 02:18:21,759
as a loop whether you like it or not

3059
02:18:20,159 --> 02:18:22,959
because it's made for analyzing loops

3060
02:18:21,760 --> 02:18:23,519
and it's going to tell you a bunch of

3061
02:18:22,959 --> 02:18:25,678
stuff

3062
02:18:23,519 --> 02:18:26,639
like the reciprocal throughput of the

3063
02:18:25,679 --> 02:18:29,280
loop right

3064
02:18:26,638 --> 02:18:30,079
which again you're trying to get that up

3065
02:18:29,280 --> 02:18:31,840
to

3066
02:18:30,079 --> 02:18:33,200
you're trying to get that down to the

3067
02:18:31,840 --> 02:18:34,239
lowest number of cycles you can and

3068
02:18:33,200 --> 02:18:37,760
you're trying to get the instructions

3069
02:18:34,239 --> 02:18:40,638
per clock up as high as you can

3070
02:18:37,760 --> 02:18:42,478
micro ops per cycle like like i said you

3071
02:18:40,638 --> 02:18:43,199
can usually execute four micro ups per

3072
02:18:42,478 --> 02:18:44,799
cycle

3073
02:18:43,200 --> 02:18:47,519
sometimes you can execute even more than

3074
02:18:44,799 --> 02:18:50,000
that um if they're fused

3075
02:18:47,519 --> 02:18:50,960
but uh in general four is where a

3076
02:18:50,000 --> 02:18:54,558
skylight is going to top

3077
02:18:50,959 --> 02:18:56,159
out so 1.61 means you could

3078
02:18:54,558 --> 02:18:58,000
you know you could potentially if you

3079
02:18:56,159 --> 02:18:59,280
really happen to really luck out and you

3080
02:18:58,000 --> 02:19:00,558
hit something the pros can do perfectly

3081
02:18:59,280 --> 02:19:01,599
and you wrote the code really well

3082
02:19:00,558 --> 02:19:03,599
you could get that all the way up to

3083
02:19:01,599 --> 02:19:06,079
four right

3084
02:19:03,599 --> 02:19:06,960
so let's see how to do the actual loop

3085
02:19:06,079 --> 02:19:11,760
constructs

3086
02:19:06,959 --> 02:19:16,159
um lvm mca i never remember

3087
02:19:11,760 --> 02:19:16,159
what the pound defines our um

3088
02:19:17,120 --> 02:19:25,280
uh they're in here somewhere

3089
02:19:21,760 --> 02:19:28,318
here it is uh

3090
02:19:25,280 --> 02:19:31,519
all right so in here you have to do

3091
02:19:28,318 --> 02:19:35,760
like a thing where you you stick this

3092
02:19:31,519 --> 02:19:38,079
garbage um in here

3093
02:19:35,760 --> 02:19:39,040
so let's suppose we actually want to do

3094
02:19:38,079 --> 02:19:41,120
this for real

3095
02:19:39,040 --> 02:19:42,479
uh what we would end up with is like

3096
02:19:41,120 --> 02:19:45,679
some kind of a for loop

3097
02:19:42,478 --> 02:19:48,959
right um so

3098
02:19:45,679 --> 02:19:52,398
and and the for loop usually you know

3099
02:19:48,959 --> 02:19:52,398
usually it looks something like this

3100
02:19:56,159 --> 02:20:06,478
uh and

3101
02:20:03,680 --> 02:20:08,880
so let's suppose we're doing uh some

3102
02:20:06,478 --> 02:20:14,079
something straightforward so account

3103
02:20:08,879 --> 02:20:14,079
um and value i don't know

3104
02:20:15,200 --> 02:20:22,319
and we do a while count minus minus like

3105
02:20:18,478 --> 02:20:24,559
float results equals zero

3106
02:20:22,318 --> 02:20:26,959
and this is result plus equals you know

3107
02:20:24,559 --> 02:20:26,959
value

3108
02:20:28,959 --> 02:20:32,639
uh so this is just like returning like a

3109
02:20:30,719 --> 02:20:36,398
running sum or something

3110
02:20:32,639 --> 02:20:38,000
right um and so we basically just wrote

3111
02:20:36,398 --> 02:20:38,639
something you know that was gonna have a

3112
02:20:38,000 --> 02:20:41,840
loop

3113
02:20:38,639 --> 02:20:44,719
um and you can see the loop here and

3114
02:20:41,840 --> 02:20:46,318
uh you know it's got like the setup code

3115
02:20:44,719 --> 02:20:47,920
or whatever's gonna happen

3116
02:20:46,318 --> 02:20:49,840
and then it just kind of like goes

3117
02:20:47,920 --> 02:20:52,879
through and does like

3118
02:20:49,840 --> 02:20:56,079
uh repeated edition right so

3119
02:20:52,879 --> 02:20:57,519
um we come in here we

3120
02:20:56,079 --> 02:20:58,959
we do the check to make sure we should

3121
02:20:57,520 --> 02:20:59,600
enter the loop assuming that we do enter

3122
02:20:58,959 --> 02:21:02,799
the loop

3123
02:20:59,600 --> 02:21:04,800
uh we do some garbage uh

3124
02:21:02,799 --> 02:21:05,840
we grab the thing we're gonna do we we

3125
02:21:04,799 --> 02:21:07,119
add it um

3126
02:21:05,840 --> 02:21:08,719
and then we store it back out to the

3127
02:21:07,120 --> 02:21:09,439
stack and of course this is unoptimized

3128
02:21:08,719 --> 02:21:10,559
code so

3129
02:21:09,439 --> 02:21:12,079
it's just gonna generate a bunch of

3130
02:21:10,559 --> 02:21:13,439
unnecessary instructions so you know we

3131
02:21:12,079 --> 02:21:14,000
can just tell it you know you can clean

3132
02:21:13,439 --> 02:21:16,079
that up

3133
02:21:14,000 --> 02:21:17,439
you know don't don't do that uh do

3134
02:21:16,079 --> 02:21:18,559
something more sensible and now you can

3135
02:21:17,439 --> 02:21:21,359
see like a fairly

3136
02:21:18,559 --> 02:21:21,840
reasonable loot it's not great um but

3137
02:21:21,359 --> 02:21:24,559
it's

3138
02:21:21,840 --> 02:21:25,680
you know it's reasonable you can see

3139
02:21:24,559 --> 02:21:28,559
we're just adding

3140
02:21:25,680 --> 02:21:29,439
from a memory location we're bumping you

3141
02:21:28,559 --> 02:21:32,559
know the

3142
02:21:29,439 --> 02:21:35,840
the uh the memory offset

3143
02:21:32,559 --> 02:21:37,439
each time and we are then checking to

3144
02:21:35,840 --> 02:21:41,600
see if we need to exit the loop

3145
02:21:37,439 --> 02:21:42,398
right okay um so now we got to get this

3146
02:21:41,600 --> 02:21:45,439
thing working

3147
02:21:42,398 --> 02:21:49,680
um this is supposed to be

3148
02:21:45,439 --> 02:21:52,880
over here yeah

3149
02:21:49,680 --> 02:21:54,000
there we go hopefully that's maybe sort

3150
02:21:52,879 --> 02:21:56,318
of right

3151
02:21:54,000 --> 02:21:56,318
um

3152
02:21:57,840 --> 02:22:01,760
and i'm not sure did i do that wrong

3153
02:22:00,318 --> 02:22:04,159
it's saying that it's not

3154
02:22:01,760 --> 02:22:04,159
valid

3155
02:22:04,879 --> 02:22:08,239
but but what what's invalid what did i

3156
02:22:06,799 --> 02:22:10,000
do wrong there is that not isn't that

3157
02:22:08,239 --> 02:22:12,250
what you wanted

3158
02:22:10,000 --> 02:22:14,159
oh um right i've got to do

3159
02:22:12,250 --> 02:22:17,439
[Music]

3160
02:22:14,159 --> 02:22:17,439
like a foo on both of them

3161
02:22:17,920 --> 02:22:23,840
so is it that

3162
02:22:28,398 --> 02:22:33,920
it's beginfu enfu right did that not

3163
02:22:32,239 --> 02:22:35,840
does that not work did i do something

3164
02:22:33,920 --> 02:22:38,079
wrong would it what have i done wrong

3165
02:22:35,840 --> 02:22:39,359
i never remember how to get this part

3166
02:22:38,079 --> 02:22:42,478
working

3167
02:22:39,359 --> 02:22:44,318
um i would love for it to work but but i

3168
02:22:42,478 --> 02:22:45,279
never really know why it doesn't work

3169
02:22:44,318 --> 02:22:47,119
and

3170
02:22:45,280 --> 02:22:48,800
you know like i said i i was much more

3171
02:22:47,120 --> 02:22:50,560
happy with ayaka

3172
02:22:48,799 --> 02:22:52,159
and i don't know why this didn't work

3173
02:22:50,559 --> 02:22:55,760
but it's supposed to work

3174
02:22:52,159 --> 02:22:57,200
um somehow that way let's try a real

3175
02:22:55,760 --> 02:23:00,079
search engine

3176
02:22:57,200 --> 02:23:00,079
i.e not bing

3177
02:23:00,719 --> 02:23:05,840
looks like the same crap though

3178
02:23:16,879 --> 02:23:20,239
i'm just going to search for those

3179
02:23:18,239 --> 02:23:22,000
strings and see if i can find

3180
02:23:20,239 --> 02:23:24,639
an example because what does it say it

3181
02:23:22,000 --> 02:23:26,799
says found an invalid region

3182
02:23:24,639 --> 02:23:28,559
end directive but what's invalid about

3183
02:23:26,799 --> 02:23:33,840
it did it not

3184
02:23:28,559 --> 02:23:33,840
does it not like my begin one

3185
02:23:34,799 --> 02:23:38,398
i also don't know why i can't see them

3186
02:23:36,559 --> 02:23:40,799
on here like shouldn't they be on here

3187
02:23:38,398 --> 02:23:40,799
somewhere

3188
02:23:44,840 --> 02:23:47,840
uh

3189
02:23:55,200 --> 02:23:57,680
oh you think i have to write the

3190
02:23:56,478 --> 02:24:01,840
function why would i have to write the

3191
02:23:57,680 --> 02:24:01,840
function name

3192
02:24:05,040 --> 02:24:09,040
i mean i don't see why i just write the

3193
02:24:06,478 --> 02:24:09,039
function name

3194
02:24:09,600 --> 02:24:12,640
this is just all this is an identifier

3195
02:24:12,239 --> 02:24:16,318
that

3196
02:24:12,639 --> 02:24:20,000
that tells it what the output is right

3197
02:24:16,318 --> 02:24:20,000
you know what i'm saying um

3198
02:24:20,398 --> 02:24:23,920
so let's take a look and see if i can

3199
02:24:21,920 --> 02:24:25,680
find like something

3200
02:24:23,920 --> 02:24:27,520
that shows how this is supposed to

3201
02:24:25,680 --> 02:24:31,200
happen because

3202
02:24:27,520 --> 02:24:32,560
you know they probably just changed it

3203
02:24:31,200 --> 02:24:35,280
or something since they wrote the docs

3204
02:24:32,559 --> 02:24:35,279
or who knows what

3205
02:24:38,719 --> 02:24:44,959
this is the ubuntu man page okay

3206
02:24:43,280 --> 02:24:57,840
that's the same example and that

3207
02:24:44,959 --> 02:24:57,839
definitely didn't work

3208
02:25:15,840 --> 02:25:19,520
so i don't know i don't know why we're

3209
02:25:17,760 --> 02:25:25,840
not getting any love here from

3210
02:25:19,520 --> 02:25:25,840
lvm mca begin um

3211
02:25:27,280 --> 02:25:31,359
i mean does it is it needed to be inside

3212
02:25:30,239 --> 02:25:38,000
the brackets

3213
02:25:31,359 --> 02:25:39,840
it does what

3214
02:25:38,000 --> 02:25:41,280
so it just wanted them to be inside the

3215
02:25:39,840 --> 02:25:44,079
brackets but that's

3216
02:25:41,280 --> 02:25:45,600
not good right it needs to be outside

3217
02:25:44,079 --> 02:25:48,959
the brackets

3218
02:25:45,600 --> 02:25:49,680
um because if it's not outside the

3219
02:25:48,959 --> 02:25:52,478
brackets

3220
02:25:49,680 --> 02:25:54,159
then you don't include the port usage

3221
02:25:52,478 --> 02:25:57,119
for the comp jump

3222
02:25:54,159 --> 02:25:57,920
uh so it needs to be there so i'm not

3223
02:25:57,120 --> 02:25:59,760
sure

3224
02:25:57,920 --> 02:26:01,200
like and if i put it here then it

3225
02:25:59,760 --> 02:26:04,639
includes it

3226
02:26:01,200 --> 02:26:08,880
it would include the enter

3227
02:26:04,639 --> 02:26:10,398
code which you don't want it to do um

3228
02:26:08,879 --> 02:26:12,239
so i don't understand and it looks like

3229
02:26:10,398 --> 02:26:13,920
even that doesn't work so like i can

3230
02:26:12,239 --> 02:26:16,239
you know if i put that here i have to

3231
02:26:13,920 --> 02:26:18,318
put the other one inside the brackets

3232
02:26:16,239 --> 02:26:21,840
i don't know maybe i can do this just

3233
02:26:18,318 --> 02:26:21,840
putting more brackets around it help

3234
02:26:22,559 --> 02:26:27,840
yeah this is why i say i don't like lvm

3235
02:26:25,680 --> 02:26:29,120
mca i don't really you know maybe it's

3236
02:26:27,840 --> 02:26:30,639
just that i don't understand it as well

3237
02:26:29,120 --> 02:26:31,840
enough but like this is a pretty simple

3238
02:26:30,639 --> 02:26:35,279
thing i'm asked to do

3239
02:26:31,840 --> 02:26:37,439
it doesn't give me any constructive

3240
02:26:35,280 --> 02:26:39,520
advice on why i'm just trying to say

3241
02:26:37,439 --> 02:26:40,239
please do this loop like that's all i

3242
02:26:39,520 --> 02:26:42,720
want it to do

3243
02:26:40,239 --> 02:26:44,239
right but it doesn't seem capable of of

3244
02:26:42,719 --> 02:26:47,119
doing that

3245
02:26:44,239 --> 02:26:48,000
uh and i don't actually know why right

3246
02:26:47,120 --> 02:26:50,399
so

3247
02:26:48,000 --> 02:26:50,398
um

3248
02:26:59,520 --> 02:27:02,560
yeah so just to be clear the reason so

3249
02:27:02,079 --> 02:27:04,639
this

3250
02:27:02,559 --> 02:27:06,398
doesn't really help you because that's

3251
02:27:04,639 --> 02:27:07,680
not going to time the loop

3252
02:27:06,398 --> 02:27:09,039
that's not going to show the loop right

3253
02:27:07,680 --> 02:27:11,120
so you can see that the only thing

3254
02:27:09,040 --> 02:27:13,520
that's captured there is the add ss

3255
02:27:11,120 --> 02:27:14,560
but the problem is the loop is actually

3256
02:27:13,520 --> 02:27:17,840
this

3257
02:27:14,559 --> 02:27:19,119
right so you need you need it to have

3258
02:27:17,840 --> 02:27:22,719
the end marker

3259
02:27:19,120 --> 02:27:25,520
has to be outside the loop right

3260
02:27:22,719 --> 02:27:25,840
now we can be a saucy salamander and

3261
02:27:25,520 --> 02:27:29,200
just

3262
02:27:25,840 --> 02:27:30,000
get rid of the loop right um so for

3263
02:27:29,200 --> 02:27:33,920
example

3264
02:27:30,000 --> 02:27:37,040
like we could do this couldn't we um

3265
02:27:33,920 --> 02:27:39,520
and and then we would just say hey

3266
02:27:37,040 --> 02:27:40,399
like i know how is programming work a

3267
02:27:39,520 --> 02:27:43,920
lot

3268
02:27:40,398 --> 02:27:45,119
and i could just say like loop top here

3269
02:27:43,920 --> 02:27:48,719
right

3270
02:27:45,120 --> 02:27:50,880
and then i just say like okay

3271
02:27:48,719 --> 02:27:52,639
you know if if you're really going to be

3272
02:27:50,879 --> 02:27:54,318
that way and you don't understand a loop

3273
02:27:52,639 --> 02:27:56,478
well i know how to write a loop because

3274
02:27:54,318 --> 02:27:58,559
i am programmer right

3275
02:27:56,478 --> 02:28:00,000
um so what i could do is i could just

3276
02:27:58,559 --> 02:28:02,799
say okay put the

3277
02:28:00,000 --> 02:28:03,600
analysis on this end of the thing and

3278
02:28:02,799 --> 02:28:06,159
make it like

3279
02:28:03,600 --> 02:28:07,680
go back up to the loop top like that

3280
02:28:06,159 --> 02:28:09,680
right

3281
02:28:07,680 --> 02:28:10,880
and have it just do ads and then what

3282
02:28:09,680 --> 02:28:13,760
we'll do is we'll just

3283
02:28:10,879 --> 02:28:15,358
branch around the loop jump right we'll

3284
02:28:13,760 --> 02:28:17,280
just say okay

3285
02:28:15,359 --> 02:28:19,200
um if that's what you want then inside

3286
02:28:17,280 --> 02:28:21,790
here we'll say

3287
02:28:19,200 --> 02:28:23,200
if count minus minus

3288
02:28:21,790 --> 02:28:25,840
[Music]

3289
02:28:23,200 --> 02:28:27,439
you know is greater than zero then go to

3290
02:28:25,840 --> 02:28:32,318
the loop top

3291
02:28:27,439 --> 02:28:32,318
right or something um

3292
02:28:32,959 --> 02:28:37,199
so now we've got it actually working

3293
02:28:35,840 --> 02:28:38,239
right even though it's not what i was

3294
02:28:37,200 --> 02:28:42,159
trying to do

3295
02:28:38,239 --> 02:28:42,639
but you know at least it it maybe did

3296
02:28:42,159 --> 02:28:46,719
something

3297
02:28:42,639 --> 02:28:48,799
i guess right um

3298
02:28:46,719 --> 02:28:49,760
and if we look here at what it actually

3299
02:28:48,799 --> 02:28:53,599
ended up putting

3300
02:28:49,760 --> 02:28:56,639
out uh for some reason

3301
02:28:53,600 --> 02:28:57,439
it it actually took these two so somehow

3302
02:28:56,639 --> 02:29:00,559
this floated

3303
02:28:57,439 --> 02:29:02,239
up above here

3304
02:29:00,559 --> 02:29:04,079
i don't know it just seems like this is

3305
02:29:02,239 --> 02:29:05,760
kind of busted like

3306
02:29:04,079 --> 02:29:08,559
like that's not what we wanted we wanted

3307
02:29:05,760 --> 02:29:10,960
it to start uh

3308
02:29:08,559 --> 02:29:12,639
below there so i don't know can we make

3309
02:29:10,959 --> 02:29:14,799
it do that there we go

3310
02:29:12,639 --> 02:29:16,639
so that's correct now but this is

3311
02:29:14,799 --> 02:29:18,719
annoying so you can see this is annoying

3312
02:29:16,639 --> 02:29:23,680
i don't love it ayaka was better

3313
02:29:18,719 --> 02:29:25,358
but it's discontinued so oh well um

3314
02:29:23,680 --> 02:29:26,880
but now if you look at it you can

3315
02:29:25,359 --> 02:29:30,079
understand the port pressure

3316
02:29:26,879 --> 02:29:31,759
part a little bit better right um so now

3317
02:29:30,079 --> 02:29:34,318
you can see like all right

3318
02:29:31,760 --> 02:29:34,880
add right if we take a look at what

3319
02:29:34,318 --> 02:29:38,159
happens

3320
02:29:34,879 --> 02:29:39,759
on the ad um if you go back here you can

3321
02:29:38,159 --> 02:29:40,959
see that it's an ad ss call

3322
02:29:39,760 --> 02:29:43,040
that means we're going to have to turn

3323
02:29:40,959 --> 02:29:45,839
on sse right because it's a

3324
02:29:43,040 --> 02:29:46,479
it's an sse call what you can see here

3325
02:29:45,840 --> 02:29:49,520
is that

3326
02:29:46,478 --> 02:29:51,039
ads operate right

3327
02:29:49,520 --> 02:29:53,200
these are the ports that they can issue

3328
02:29:51,040 --> 02:29:55,200
on so ads can issue on zero

3329
02:29:53,200 --> 02:29:56,479
or one this floating point add condition

3330
02:29:55,200 --> 02:29:58,240
on zero one

3331
02:29:56,478 --> 02:29:59,679
and you know is it a memory operand or

3332
02:29:58,239 --> 02:30:01,520
isn't it a memory operand well you can

3333
02:29:59,680 --> 02:30:03,200
see right here it's a d word pointer rsi

3334
02:30:01,520 --> 02:30:04,560
so obviously a memory operand so it's

3335
02:30:03,200 --> 02:30:07,200
obviously going to be this

3336
02:30:04,559 --> 02:30:09,039
right so it's going to have to issue one

3337
02:30:07,200 --> 02:30:10,720
thing on port zero and one and one thing

3338
02:30:09,040 --> 02:30:11,840
on port two and three and like that's

3339
02:30:10,719 --> 02:30:15,840
exactly what we see

3340
02:30:11,840 --> 02:30:19,120
right so what you can see here is

3341
02:30:15,840 --> 02:30:21,200
there's no actual full port pressure

3342
02:30:19,120 --> 02:30:22,399
uh a third of the time it expects it to

3343
02:30:21,200 --> 02:30:23,840
issue on port two

3344
02:30:22,398 --> 02:30:27,358
and the rest of the time it expects it

3345
02:30:23,840 --> 02:30:31,280
to issue on port three

3346
02:30:27,359 --> 02:30:33,439
for the load i'm sorry for the add

3347
02:30:31,280 --> 02:30:34,800
because that's actually port zero and

3348
02:30:33,439 --> 02:30:37,439
one

3349
02:30:34,799 --> 02:30:37,840
right which is where the add can happen

3350
02:30:37,439 --> 02:30:39,600
um

3351
02:30:37,840 --> 02:30:42,000
and then half the time it will be

3352
02:30:39,600 --> 02:30:43,840
loading on port

3353
02:30:42,000 --> 02:30:45,359
two and half of the time it will be

3354
02:30:43,840 --> 02:30:47,600
loading on port three

3355
02:30:45,359 --> 02:30:48,640
right but at no time does it actually

3356
02:30:47,600 --> 02:30:51,520
exceed the full

3357
02:30:48,639 --> 02:30:52,559
1.0 so we're totally like it should just

3358
02:30:51,520 --> 02:30:56,640
always execute

3359
02:30:52,559 --> 02:30:56,639
right um

3360
02:30:57,359 --> 02:31:01,439
we get here and we say like again the

3361
02:31:00,000 --> 02:31:04,639
port pressure

3362
02:31:01,439 --> 02:31:06,239
uh looking at where this is distributed

3363
02:31:04,639 --> 02:31:07,599
it doesn't look like anything sums over

3364
02:31:06,239 --> 02:31:08,879
one here so look again it looks like

3365
02:31:07,600 --> 02:31:10,720
we're totally fine

3366
02:31:08,879 --> 02:31:12,799
um in terms of the percentage time that

3367
02:31:10,719 --> 02:31:15,438
it's actually gonna um

3368
02:31:12,799 --> 02:31:17,039
execute here you can see that this is an

3369
02:31:15,439 --> 02:31:18,880
add an integer add

3370
02:31:17,040 --> 02:31:20,240
and integer ads can execute like

3371
02:31:18,879 --> 02:31:23,119
everywhere 0 1

3372
02:31:20,239 --> 02:31:24,398
5 and 6 can all do it and that's exactly

3373
02:31:23,120 --> 02:31:27,520
what you see so there's 0

3374
02:31:24,398 --> 02:31:30,079
1 5 and 6 so it would just distribute

3375
02:31:27,520 --> 02:31:33,600
out across those like this

3376
02:31:30,079 --> 02:31:35,359
um same with this ad right uh and then

3377
02:31:33,600 --> 02:31:38,479
you get the test

3378
02:31:35,359 --> 02:31:39,200
uh which is again can can be exited on

3379
02:31:38,478 --> 02:31:42,719
all those

3380
02:31:39,200 --> 02:31:47,200
and then the jump right

3381
02:31:42,719 --> 02:31:47,199
now if you look at these um

3382
02:31:47,520 --> 02:31:50,479
i have questions

3383
02:31:51,520 --> 02:31:57,840
to say the least uh

3384
02:32:06,000 --> 02:32:11,840
so let's start by changing this to a

3385
02:32:07,680 --> 02:32:11,840
jump not equal

3386
02:32:15,920 --> 02:32:21,920
yeah um so because i wanted this to go

3387
02:32:19,920 --> 02:32:26,719
down to a comp jump

3388
02:32:21,920 --> 02:32:26,719
right which you can see it doing here

3389
02:32:30,000 --> 02:32:32,879
at this point

3390
02:32:37,040 --> 02:32:40,640
let me just restate some of this stuff

3391
02:32:39,200 --> 02:32:41,359
and then say why this is a little

3392
02:32:40,639 --> 02:32:44,478
annoying so

3393
02:32:41,359 --> 02:32:45,359
okay so again what's happening here well

3394
02:32:44,478 --> 02:32:46,799
this is a loop

3395
02:32:45,359 --> 02:32:48,559
so we're running it over and over and

3396
02:32:46,799 --> 02:32:50,159
over and over again

3397
02:32:48,559 --> 02:32:52,079
if you look at these instructions this

3398
02:32:50,159 --> 02:32:56,159
ad this ad

3399
02:32:52,079 --> 02:32:58,000
this comp and this jump have to happen

3400
02:32:56,159 --> 02:33:00,799
every time through the loop

3401
02:32:58,000 --> 02:33:02,959
the ad here this is completely

3402
02:33:00,799 --> 02:33:06,159
independent of this stuff

3403
02:33:02,959 --> 02:33:08,799
so the add comp jump is like a

3404
02:33:06,159 --> 02:33:11,760
completely separate thing from this

3405
02:33:08,799 --> 02:33:12,398
so the first time we hit this loop it's

3406
02:33:11,760 --> 02:33:15,680
going to pick

3407
02:33:12,398 --> 02:33:17,840
port 2 well port 0 or 1

3408
02:33:15,680 --> 02:33:19,920
to issue the first part of the add and

3409
02:33:17,840 --> 02:33:20,398
port 2 or 3 to issue the second part of

3410
02:33:19,920 --> 02:33:22,000
the ad

3411
02:33:20,398 --> 02:33:23,599
i probably said that right wrong way

3412
02:33:22,000 --> 02:33:23,920
around you probably think of it as it'll

3413
02:33:23,600 --> 02:33:25,359
pick

3414
02:33:23,920 --> 02:33:27,600
port two or three issue the first part

3415
02:33:25,359 --> 02:33:30,960
the load and zero or one to

3416
02:33:27,600 --> 02:33:33,280
issue the actual ad right

3417
02:33:30,959 --> 02:33:34,559
so we're going to the first time through

3418
02:33:33,280 --> 02:33:38,159
port say

3419
02:33:34,559 --> 02:33:41,199
say port 0 and port 2

3420
02:33:38,159 --> 02:33:44,478
are used the first time through

3421
02:33:41,200 --> 02:33:47,920
that means now we come down to this ad

3422
02:33:44,478 --> 02:33:48,478
right this ad needs to issue on a port

3423
02:33:47,920 --> 02:33:50,719
well

3424
02:33:48,478 --> 02:33:51,840
we know we just issued something on this

3425
02:33:50,719 --> 02:33:53,199
port right

3426
02:33:51,840 --> 02:33:54,960
and we haven't even gone to the next

3427
02:33:53,200 --> 02:33:56,640
cycle yet we're still on one cycle we

3428
02:33:54,959 --> 02:33:59,119
can issue these on the same cycle

3429
02:33:56,639 --> 02:34:00,000
so we would issue this ad probably on

3430
02:33:59,120 --> 02:34:01,840
this port

3431
02:34:00,000 --> 02:34:03,600
because we know we just used this port

3432
02:34:01,840 --> 02:34:05,359
before um

3433
02:34:03,600 --> 02:34:07,120
and this port's free so maybe we issue

3434
02:34:05,359 --> 02:34:09,760
it on this so we issue

3435
02:34:07,120 --> 02:34:11,040
one on this port one on this port one on

3436
02:34:09,760 --> 02:34:13,600
this port

3437
02:34:11,040 --> 02:34:14,800
right potentially on the same cycle now

3438
02:34:13,600 --> 02:34:16,079
again i don't actually know if that's

3439
02:34:14,799 --> 02:34:17,840
true for the ad because i

3440
02:34:16,079 --> 02:34:19,120
feel like the ad probably has to wait

3441
02:34:17,840 --> 02:34:20,559
for the memory to come back

3442
02:34:19,120 --> 02:34:22,720
to start the ad because you know how

3443
02:34:20,559 --> 02:34:24,398
else would it work so really what

3444
02:34:22,719 --> 02:34:25,438
probably happened is it issued something

3445
02:34:24,398 --> 02:34:27,599
on this port

3446
02:34:25,439 --> 02:34:29,680
then it issued the ad on the same cycle

3447
02:34:27,600 --> 02:34:31,520
as the load the first time through

3448
02:34:29,680 --> 02:34:35,200
because it couldn't have issued an ad

3449
02:34:31,520 --> 02:34:37,680
right yet the rss

3450
02:34:35,200 --> 02:34:38,479
um so probably issued the load not the

3451
02:34:37,680 --> 02:34:40,000
rss

3452
02:34:38,478 --> 02:34:41,599
then the ad so probably this port in

3453
02:34:40,000 --> 02:34:45,600
this port let's say

3454
02:34:41,600 --> 02:34:48,960
and then the comp has to wait for this

3455
02:34:45,600 --> 02:34:51,280
right so the comp jump are now blocked

3456
02:34:48,959 --> 02:34:52,959
right however this actually it's in one

3457
02:34:51,280 --> 02:34:56,880
cycle so on the next

3458
02:34:52,959 --> 02:34:58,000
cycle right if this happened to be in

3459
02:34:56,879 --> 02:35:00,478
the l1 cache which

3460
02:34:58,000 --> 02:35:01,680
let's say it was then that load will

3461
02:35:00,478 --> 02:35:03,840
have completed which means

3462
02:35:01,680 --> 02:35:04,800
now it can issue the add ss which it

3463
02:35:03,840 --> 02:35:07,680
will do

3464
02:35:04,799 --> 02:35:08,639
on say this port because it will have

3465
02:35:07,680 --> 02:35:12,239
issued the

3466
02:35:08,639 --> 02:35:13,599
ad before on this port right

3467
02:35:12,239 --> 02:35:14,959
um although i guess that's out of that

3468
02:35:13,600 --> 02:35:16,159
port now so it could probably issue it

3469
02:35:14,959 --> 02:35:16,719
on either one now i think about it

3470
02:35:16,159 --> 02:35:18,719
because

3471
02:35:16,719 --> 02:35:19,920
that will have already finished so now

3472
02:35:18,719 --> 02:35:20,879
it's going to issue something on one of

3473
02:35:19,920 --> 02:35:24,318
these ports

3474
02:35:20,879 --> 02:35:26,478
um and it will start the comp

3475
02:35:24,318 --> 02:35:28,079
right because the comp can happen now so

3476
02:35:26,478 --> 02:35:30,159
this is the comp on one of these ports

3477
02:35:28,079 --> 02:35:33,840
and the add ss on one of these ports

3478
02:35:30,159 --> 02:35:33,840
right makes sense

3479
02:35:34,959 --> 02:35:39,438
and then it will go ahead and when it

3480
02:35:36,559 --> 02:35:41,039
finishes the comp um it will like

3481
02:35:39,439 --> 02:35:44,000
well actually before it completes it'll

3482
02:35:41,040 --> 02:35:47,520
predict this jump so this

3483
02:35:44,000 --> 02:35:50,719
honestly this is nonsense i i

3484
02:35:47,520 --> 02:35:53,040
i i don't that's not i don't know what

3485
02:35:50,719 --> 02:35:55,519
that is

3486
02:35:53,040 --> 02:35:57,120
i i just i what i don't know what that

3487
02:35:55,520 --> 02:35:58,399
is uh that looks just completely

3488
02:35:57,120 --> 02:36:02,479
erroneous

3489
02:35:58,398 --> 02:36:02,478
um this this is not

3490
02:36:02,639 --> 02:36:07,199
you know that that's not an instruction

3491
02:36:04,559 --> 02:36:10,478
i i i don't know what that means

3492
02:36:07,200 --> 02:36:12,079
because uh that's just a front end

3493
02:36:10,478 --> 02:36:14,079
thing it's just a that's just a branch

3494
02:36:12,079 --> 02:36:16,879
predict it doesn't it doesn't

3495
02:36:14,079 --> 02:36:23,200
go like like it doesn't go to an

3496
02:36:16,879 --> 02:36:25,119
execution port um

3497
02:36:23,200 --> 02:36:28,479
so so i i'm sorry i just i just don't

3498
02:36:25,120 --> 02:36:28,479
know what that is trying to tell me

3499
02:36:29,280 --> 02:36:34,479
that just looks like a bug or something

3500
02:36:32,478 --> 02:36:36,639
um somebody who spends a lot of time

3501
02:36:34,478 --> 02:36:40,719
with llvm mca tel you know

3502
02:36:36,639 --> 02:36:40,719
it's if anyone out there knows um

3503
02:36:41,120 --> 02:36:44,560
what why is it printing that i mean that

3504
02:36:42,559 --> 02:36:48,159
that's just not that's just false

3505
02:36:44,559 --> 02:36:48,159
i think um

3506
02:36:49,359 --> 02:36:54,318
right uh

3507
02:36:56,000 --> 02:37:00,639
so so i don't know i don't know

3508
02:37:02,239 --> 02:37:05,680
i don't know how to get this over like

3509
02:37:04,318 --> 02:37:10,000
maybe i can make this

3510
02:37:05,680 --> 02:37:10,000
a little shrinkier so you can see it

3511
02:37:15,439 --> 02:37:23,040
there so that just looks like

3512
02:37:19,680 --> 02:37:26,318
completely wrong uh the jne

3513
02:37:23,040 --> 02:37:27,600
would be fused with the comp uh it would

3514
02:37:26,318 --> 02:37:28,639
just be something that happens in the

3515
02:37:27,600 --> 02:37:30,880
front end

3516
02:37:28,639 --> 02:37:33,279
and it would be branch predicted so

3517
02:37:30,879 --> 02:37:35,438
either it will be completely free

3518
02:37:33,280 --> 02:37:38,079
or when it's the one time it's not

3519
02:37:35,439 --> 02:37:41,439
predicted at the end of the loop

3520
02:37:38,079 --> 02:37:44,959
it'll cost you 16 cycles right

3521
02:37:41,439 --> 02:37:46,800
so so this is just nonsense like i don't

3522
02:37:44,959 --> 02:37:49,438
i mean i'm not a microarchitecture guy

3523
02:37:46,799 --> 02:37:51,599
so don't take my word for it but but

3524
02:37:49,439 --> 02:37:54,079
that just looks completely erroneous

3525
02:37:51,600 --> 02:37:55,280
and wrong which is unfortunate because

3526
02:37:54,079 --> 02:37:56,559
it means it will throw off the rest of

3527
02:37:55,280 --> 02:37:58,079
this as well because it will assume that

3528
02:37:56,559 --> 02:38:00,000
these ports were being used by the jne

3529
02:37:58,079 --> 02:38:02,959
which they wouldn't have been

3530
02:38:00,000 --> 02:38:05,040
so but anyway but you get the idea so

3531
02:38:02,959 --> 02:38:06,079
basically each one of these is kind of

3532
02:38:05,040 --> 02:38:08,960
showing you

3533
02:38:06,079 --> 02:38:10,719
how clogged it thinks the port will be

3534
02:38:08,959 --> 02:38:15,039
when it goes to issue this thing

3535
02:38:10,719 --> 02:38:17,358
where it stuck it right

3536
02:38:15,040 --> 02:38:17,359
um

3537
02:38:18,159 --> 02:38:22,000
and that's about the best you get i

3538
02:38:19,680 --> 02:38:22,398
don't love these there's way better ways

3539
02:38:22,000 --> 02:38:26,079
to

3540
02:38:22,398 --> 02:38:27,119
view this in my opinion i i don't like

3541
02:38:26,079 --> 02:38:28,639
that

3542
02:38:27,120 --> 02:38:31,359
i don't think this is a constructive way

3543
02:38:28,639 --> 02:38:33,279
to view it uh but you can see why

3544
02:38:31,359 --> 02:38:34,399
it allows you to like spot check sort of

3545
02:38:33,280 --> 02:38:36,640
how the parts are

3546
02:38:34,398 --> 02:38:38,799
so it's not useless it's easier than

3547
02:38:36,639 --> 02:38:41,519
writing it out by hand probably

3548
02:38:38,799 --> 02:38:42,239
modulo the fact that this stupid thing

3549
02:38:41,520 --> 02:38:44,640
uh

3550
02:38:42,239 --> 02:38:45,680
doesn't number the ports by their actual

3551
02:38:44,639 --> 02:38:48,959
number

3552
02:38:45,680 --> 02:38:57,840
right but there you go does that answer

3553
02:38:48,959 --> 02:38:57,839
the question

3554
02:39:01,520 --> 02:39:09,280
uh so i generally use ayaka

3555
02:39:05,520 --> 02:39:11,359
uh the older version of ayaka uh

3556
02:39:09,280 --> 02:39:13,120
and then a lot of times i just do it by

3557
02:39:11,359 --> 02:39:16,000
hand now

3558
02:39:13,120 --> 02:39:16,840
i i don't even bother um i have a

3559
02:39:16,000 --> 02:39:20,159
version of

3560
02:39:16,840 --> 02:39:23,520
llvmmca that i use to spot check

3561
02:39:20,159 --> 02:39:25,359
uh but it's just not very good

3562
02:39:23,520 --> 02:39:27,280
i i don't know i hope at some point

3563
02:39:25,359 --> 02:39:29,600
someone makes a better one

3564
02:39:27,280 --> 02:39:31,359
but i i you know i don't know at some

3565
02:39:29,600 --> 02:39:34,000
point i'll have to make my own

3566
02:39:31,359 --> 02:39:35,439
it doesn't matter anyway it's less it's

3567
02:39:34,000 --> 02:39:38,559
less relevant now anyway

3568
02:39:35,439 --> 02:39:40,398
because who cares like intel

3569
02:39:38,559 --> 02:39:41,920
like there won't be any intel chips next

3570
02:39:40,398 --> 02:39:43,680
year anyway like the only things anyone

3571
02:39:41,920 --> 02:39:46,079
will be optimizing for are

3572
02:39:43,680 --> 02:39:47,040
amd because the intel chips don't

3573
02:39:46,079 --> 02:39:51,280
actually work

3574
02:39:47,040 --> 02:39:53,040
so you know who cares um

3575
02:39:51,280 --> 02:39:54,399
we can just switch the architecture here

3576
02:39:53,040 --> 02:39:58,560
to to be a

3577
02:39:54,398 --> 02:40:01,119
amd or something right um and uh

3578
02:39:58,559 --> 02:40:02,719
and off we go there's an open source

3579
02:40:01,120 --> 02:40:06,240
tool called osaka really that's

3580
02:40:02,719 --> 02:40:09,879
oh um i would be interested in that

3581
02:40:06,239 --> 02:40:12,719
osaka micro

3582
02:40:09,879 --> 02:40:15,519
architecture

3583
02:40:12,719 --> 02:40:15,519
analysis

3584
02:40:15,760 --> 02:40:24,239
um that's cool

3585
02:40:20,159 --> 02:40:27,760
uh i have never seen this

3586
02:40:24,239 --> 02:40:34,478
but if it's any good that would be great

3587
02:40:27,760 --> 02:40:37,840
um here it is

3588
02:40:34,478 --> 02:40:42,639
um didn't want to see that

3589
02:40:37,840 --> 02:40:42,639
in my life uh

3590
02:40:42,799 --> 02:40:46,840
jesus okay so that's like a non-starter

3591
02:40:45,600 --> 02:40:49,840
right

3592
02:40:46,840 --> 02:40:49,840
like

3593
02:40:50,719 --> 02:40:56,398
like like i ain't installing python

3594
02:40:54,318 --> 02:40:57,760
um but it looks like it's integrated

3595
02:40:56,398 --> 02:40:59,199
into god bolts so

3596
02:40:57,760 --> 02:41:00,800
you know if you're using god bolt you

3597
02:40:59,200 --> 02:41:01,439
can you can just get rid of the ickiness

3598
02:41:00,799 --> 02:41:05,599
there by

3599
02:41:01,439 --> 02:41:08,880
by letting mr godbolt

3600
02:41:05,600 --> 02:41:12,000
install python for you uh i don't know

3601
02:41:08,879 --> 02:41:15,519
where that it would be here it is

3602
02:41:12,000 --> 02:41:17,680
um so well

3603
02:41:15,520 --> 02:41:18,560
you know there you go off to a great

3604
02:41:17,680 --> 02:41:22,159
start

3605
02:41:18,559 --> 02:41:31,359
so yeah

3606
02:41:22,159 --> 02:41:34,639
all right let's wrap it up

3607
02:41:31,359 --> 02:41:36,640
let's wrap it up

3608
02:41:34,639 --> 02:41:39,039
good progress today though we're in good

3609
02:41:36,639 --> 02:41:40,239
shape um

3610
02:41:39,040 --> 02:41:42,840
i'll have to start taking a look at that

3611
02:41:40,239 --> 02:41:44,318
lightning bug more seriously next

3612
02:41:42,840 --> 02:41:45,920
weekend

3613
02:41:44,318 --> 02:41:47,039
anyway thanks everyone for joining me

3614
02:41:45,920 --> 02:41:48,239
for the episode of handmade hero it's

3615
02:41:47,040 --> 02:41:49,439
been a pleasure coding with you as

3616
02:41:48,239 --> 02:41:50,719
always if you would like to follow the

3617
02:41:49,439 --> 02:41:52,398
series at home you can always pre-order

3618
02:41:50,719 --> 02:41:53,840
the game on handmadehero.org and it

3619
02:41:52,398 --> 02:41:56,159
comes with a source code

3620
02:41:53,840 --> 02:41:57,520
so you can play around with it yourself

3621
02:41:56,159 --> 02:41:59,039
you can go find that lightning bug

3622
02:41:57,520 --> 02:42:02,000
if you want for example you got all week

3623
02:41:59,040 --> 02:42:04,240
to find it beat me to it

3624
02:42:02,000 --> 02:42:05,680
um i'll be back here next weekend when

3625
02:42:04,239 --> 02:42:07,119
that is exactly what we will be doing

3626
02:42:05,680 --> 02:42:09,760
until then have fun programming

3627
02:42:07,120 --> 02:42:13,840
everybody and i will see you all

3628
02:42:09,760 --> 02:42:13,840
on the internet take it easy folks

