1
00:00:03,290 --> 00:00:08,370
hello everyone and welcome to handmade

2
00:00:05,790 --> 00:00:12,629
Hero show recode a complete-game live on

3
00:00:08,369 --> 00:00:15,838
stream let's go ahead and take a look we

4
00:00:12,630 --> 00:00:19,439
were doing lighting last weekend and I

5
00:00:15,839 --> 00:00:22,079
think we have I want to say we actually

6
00:00:19,439 --> 00:00:25,439
made some good progress we just did some

7
00:00:22,079 --> 00:00:28,469
tight fitting of the actual sort of

8
00:00:25,439 --> 00:00:31,710
lighting bounds to where we were

9
00:00:28,469 --> 00:00:34,109
actually looking so basically we all we

10
00:00:31,710 --> 00:00:36,570
really did we didn't even optimize it at

11
00:00:34,109 --> 00:00:41,700
all all we did is just fit the lighting

12
00:00:36,570 --> 00:00:44,100
bounds to the the total viewable area

13
00:00:41,700 --> 00:00:48,660
more accurately and and I believe you

14
00:00:44,100 --> 00:00:50,280
can actually see if I pull out you can

15
00:00:48,659 --> 00:00:52,468
sort of see what's happening here so

16
00:00:50,280 --> 00:00:55,859
only like the region that was actually

17
00:00:52,469 --> 00:00:57,030
visible plus a little like apron so that

18
00:00:55,859 --> 00:00:58,738
we make sure you don't see it kind of

19
00:00:57,030 --> 00:01:00,359
page in the lighting because you know

20
00:00:58,738 --> 00:01:01,979
the lighting needs 10 frames the startup

21
00:01:00,359 --> 00:01:04,350
time or so something along those lines

22
00:01:01,979 --> 00:01:06,030
right you can see it kind of just like

23
00:01:04,349 --> 00:01:08,368
follows you around pretty pretty

24
00:01:06,030 --> 00:01:11,189
carefully now and so when you're

25
00:01:08,368 --> 00:01:14,549
actually in the game we more or less got

26
00:01:11,188 --> 00:01:16,408
rid of any weird lighting anomalies that

27
00:01:14,549 --> 00:01:19,200
were due to the fact that we you know

28
00:01:16,409 --> 00:01:22,020
we're not properly aligning the visual

29
00:01:19,200 --> 00:01:24,000
region and we also improve the speed

30
00:01:22,019 --> 00:01:25,649
dramatically because we could use at

31
00:01:24,000 --> 00:01:27,750
that now we can at this point we can use

32
00:01:25,650 --> 00:01:29,340
a much tighter bound on the lighting

33
00:01:27,750 --> 00:01:31,680
region which means a lot less lighting

34
00:01:29,340 --> 00:01:33,478
samples have to get sent out and again

35
00:01:31,680 --> 00:01:35,759
that really helps us keep the frame rate

36
00:01:33,478 --> 00:01:40,469
up so even though we've done like

37
00:01:35,759 --> 00:01:43,680
literally no work to optimize our full

38
00:01:40,469 --> 00:01:46,200
cast here we've already gotten our speed

39
00:01:43,680 --> 00:01:48,030
within striking distance of 30 frames a

40
00:01:46,200 --> 00:01:52,590
second which is pretty great because

41
00:01:48,030 --> 00:01:55,259
that just makes our work load that much

42
00:01:52,590 --> 00:01:57,149
easier it gives us a running start if

43
00:01:55,259 --> 00:01:58,228
you will towards making the lighting be

44
00:01:57,149 --> 00:02:00,359
something that we don't have to worry

45
00:01:58,228 --> 00:02:02,009
too much about and again we haven't even

46
00:02:00,359 --> 00:02:03,989
put it on the GPU or anything this is

47
00:02:02,009 --> 00:02:07,290
actually just running entirely CPU side

48
00:02:03,989 --> 00:02:10,689
so we can probably start I think to

49
00:02:07,290 --> 00:02:12,129
upgrade the like lighting

50
00:02:10,689 --> 00:02:13,900
rate caster now to try and make it a

51
00:02:12,129 --> 00:02:16,900
little bit faster and I'd like to do

52
00:02:13,900 --> 00:02:19,659
that today and tomorrow and we'll see

53
00:02:16,900 --> 00:02:21,700
how far we can get with that but then I

54
00:02:19,659 --> 00:02:23,949
think our last big push is gonna have to

55
00:02:21,699 --> 00:02:26,019
be like you know working on the lighting

56
00:02:23,949 --> 00:02:27,939
equations and the perhaps some tone

57
00:02:26,020 --> 00:02:29,770
mapping to get the lighting looking

58
00:02:27,939 --> 00:02:30,909
really good it already looks okay but

59
00:02:29,770 --> 00:02:32,680
you can see we got some there's some

60
00:02:30,909 --> 00:02:34,539
rectangular interpolation that still

61
00:02:32,680 --> 00:02:36,099
kind of is in there I don't like I'd

62
00:02:34,539 --> 00:02:39,159
like to fuzz that out a little bit more

63
00:02:36,099 --> 00:02:41,349
the actual bounce equations and what

64
00:02:39,159 --> 00:02:44,710
we're putting in for reflectors isn't

65
00:02:41,349 --> 00:02:46,569
actually right at the moment so we want

66
00:02:44,710 --> 00:02:48,070
to kind of clean that up we want to put

67
00:02:46,569 --> 00:02:50,919
in reflectors for large objects like

68
00:02:48,069 --> 00:02:52,299
trees for example too so that those

69
00:02:50,919 --> 00:02:53,619
collect light right now they're not

70
00:02:52,300 --> 00:02:55,270
collecting any light you know there

71
00:02:53,620 --> 00:02:56,920
should be some light reflecting off of

72
00:02:55,270 --> 00:02:58,540
here and onto the ground and that sort

73
00:02:56,919 --> 00:03:01,719
of stuff and that's really just a world

74
00:02:58,539 --> 00:03:04,539
Jen issue so that we can control what

75
00:03:01,719 --> 00:03:06,250
we're pushing down there so a lot of

76
00:03:04,539 --> 00:03:07,750
things like that that was in a quality

77
00:03:06,250 --> 00:03:09,400
pass on the lighting but for right now

78
00:03:07,750 --> 00:03:11,289
what I'd like to do is again focus on on

79
00:03:09,400 --> 00:03:13,480
that bottom line number so I'd like to

80
00:03:11,289 --> 00:03:14,949
focus on getting this full cast down and

81
00:03:13,479 --> 00:03:17,049
what I'd like to do is basically say

82
00:03:14,949 --> 00:03:18,909
look let's try to get it down to like 60

83
00:03:17,050 --> 00:03:20,710
frames a second on like a beefy machine

84
00:03:18,909 --> 00:03:22,210
like this one this machine isn't like

85
00:03:20,710 --> 00:03:23,560
the fastest machine out there anything

86
00:03:22,210 --> 00:03:26,050
but it's you know it's a pretty fast

87
00:03:23,560 --> 00:03:27,789
machine so I'd like it to run at 60

88
00:03:26,050 --> 00:03:28,960
frames a second so that worse machines

89
00:03:27,789 --> 00:03:30,429
like machines that aren't as good as

90
00:03:28,960 --> 00:03:33,129
this one could run it the game at a

91
00:03:30,430 --> 00:03:36,879
reasonable 30 frames a second just you

92
00:03:33,129 --> 00:03:38,199
know as a baseline there and again

93
00:03:36,879 --> 00:03:39,549
another thing is you can also drop the

94
00:03:38,199 --> 00:03:40,659
resolution down a little bit too but

95
00:03:39,550 --> 00:03:42,730
that won't help the lighting

96
00:03:40,659 --> 00:03:43,719
particularly I mean we could drop the

97
00:03:42,729 --> 00:03:46,149
resolution of the lighting down

98
00:03:43,719 --> 00:03:47,379
obviously as well and that would help it

99
00:03:46,150 --> 00:03:49,840
but I don't know that we really want to

100
00:03:47,379 --> 00:03:51,579
go that route so what I want to do today

101
00:03:49,840 --> 00:03:54,550
is just look at what we've got for that

102
00:03:51,580 --> 00:03:58,590
lighting routine and and I want to go

103
00:03:54,550 --> 00:04:01,560
ahead and and in handmade prj here I

104
00:03:58,590 --> 00:04:07,259
want to go ahead and look what we've

105
00:04:01,560 --> 00:04:11,830
what what was that about

106
00:04:07,259 --> 00:04:14,169
did I not switch projects oh I didn't

107
00:04:11,830 --> 00:04:15,280
switch projects sorry somebody go ahead

108
00:04:14,169 --> 00:04:16,899
and switch projects there to handmade

109
00:04:15,280 --> 00:04:18,759
here him just go ahead and run the build

110
00:04:16,899 --> 00:04:21,548
I'm gonna jump over to the lighting and

111
00:04:18,759 --> 00:04:23,199
what I want to do is we just want to

112
00:04:21,548 --> 00:04:23,979
start looking again and re familiarize

113
00:04:23,199 --> 00:04:26,409
itself with what

114
00:04:23,980 --> 00:04:28,120
we're doing in the raycast take some

115
00:04:26,410 --> 00:04:32,080
statistics I believe we had a little

116
00:04:28,120 --> 00:04:33,519
lighting statistics dump and I I don't

117
00:04:32,079 --> 00:04:34,959
know that we're still drawing that but

118
00:04:33,519 --> 00:04:37,569
what we should do is like reenable that

119
00:04:34,959 --> 00:04:40,599
in case we don't have it actually we do

120
00:04:37,569 --> 00:04:43,149
so you can see here we have a bunch of

121
00:04:40,600 --> 00:04:44,890
information now I think now is a good

122
00:04:43,149 --> 00:04:46,659
time to say look lighting probes are out

123
00:04:44,889 --> 00:04:49,509
we're just not going to use them because

124
00:04:46,660 --> 00:04:51,760
we've gotten really good baseline

125
00:04:49,509 --> 00:04:53,469
example running with no light probes and

126
00:04:51,759 --> 00:04:56,439
that'll save me a bunch of code so maybe

127
00:04:53,470 --> 00:04:58,210
the first thing that we'll do oh that's

128
00:04:56,439 --> 00:05:00,430
nice maybe the first thing we'll do is

129
00:04:58,209 --> 00:05:01,959
just pull that out completely cuz we're

130
00:05:00,430 --> 00:05:03,400
done with that I'm just not going to try

131
00:05:01,959 --> 00:05:04,959
and do it we're gonna accept whatever

132
00:05:03,399 --> 00:05:06,849
quality we can do without them because

133
00:05:04,959 --> 00:05:11,169
it looks like using the Vox directly is

134
00:05:06,850 --> 00:05:13,720
just better right it's simpler and we

135
00:05:11,170 --> 00:05:16,569
know that we're always aligned so let me

136
00:05:13,720 --> 00:05:19,150
go ahead and pull that out of everywhere

137
00:05:16,569 --> 00:05:22,599
that it existed so for example in the

138
00:05:19,149 --> 00:05:24,279
world we have this notion here of light

139
00:05:22,600 --> 00:05:26,470
probe slots and this was just a huge

140
00:05:24,279 --> 00:05:28,479
pain in the butt and what I want to do

141
00:05:26,470 --> 00:05:31,240
is get rid of that entirely so

142
00:05:28,480 --> 00:05:33,600
everywhere we were doing light probe

143
00:05:31,240 --> 00:05:36,430
assignment is just gonna go away

144
00:05:33,600 --> 00:05:38,920
so it just makes it easier for us to

145
00:05:36,430 --> 00:05:40,780
work with so everywhere we were doing

146
00:05:38,920 --> 00:05:42,490
like an is light probe that sort of

147
00:05:40,779 --> 00:05:44,769
thing that's just gonna get out of out

148
00:05:42,490 --> 00:05:47,470
of here entirely and so this idea of

149
00:05:44,769 --> 00:05:50,799
assigning indices and removing indices

150
00:05:47,470 --> 00:05:53,350
can just go away and so again just

151
00:05:50,800 --> 00:05:56,740
really simplifies our code and gets rid

152
00:05:53,350 --> 00:06:00,879
of an entire unnecessary pass and which

153
00:05:56,740 --> 00:06:02,410
could cause like you know bugs as well

154
00:06:00,879 --> 00:06:03,819
because this this whole are the thing

155
00:06:02,410 --> 00:06:05,439
that had to happen and had to happen

156
00:06:03,819 --> 00:06:07,839
properly and so again it just

157
00:06:05,439 --> 00:06:10,629
simplifying the entity system getting

158
00:06:07,839 --> 00:06:12,849
rid of stuff that we don't need that was

159
00:06:10,629 --> 00:06:14,680
just you know we thought we needed to

160
00:06:12,850 --> 00:06:16,420
try it and then we tried it and it turns

161
00:06:14,680 --> 00:06:17,860
out it wasn't really necessary so at

162
00:06:16,420 --> 00:06:20,439
that point I don't want to leave it

163
00:06:17,860 --> 00:06:23,319
lying around because it's way better if

164
00:06:20,439 --> 00:06:25,480
we just don't have it so let's go ahead

165
00:06:23,319 --> 00:06:27,519
and keep going with this just pull all

166
00:06:25,480 --> 00:06:29,379
of this stuff out of there you can see

167
00:06:27,519 --> 00:06:31,750
that we had a few places where that was

168
00:06:29,379 --> 00:06:33,909
sort of tied in and I'm just gonna get

169
00:06:31,750 --> 00:06:36,040
rid of any place that was talking about

170
00:06:33,910 --> 00:06:37,560
that because we just don't need it

171
00:06:36,040 --> 00:06:40,150
anymore

172
00:06:37,560 --> 00:06:42,459
let's go ahead and take a look there's

173
00:06:40,149 --> 00:06:44,769
our light probe index check to actually

174
00:06:42,459 --> 00:06:46,629
push the light probes on and we can get

175
00:06:44,769 --> 00:06:49,379
rid of those now and I believe that also

176
00:06:46,629 --> 00:06:54,100
means that the entire push light probe

177
00:06:49,379 --> 00:06:57,909
system there can go away as well so

178
00:06:54,100 --> 00:06:58,420
basically the and you know here's the

179
00:06:57,910 --> 00:07:00,400
thing though

180
00:06:58,420 --> 00:07:01,840
I might leave global lighting show

181
00:07:00,399 --> 00:07:06,310
probes in there because we actually

182
00:07:01,839 --> 00:07:09,219
could still draw the voxel and so that

183
00:07:06,310 --> 00:07:10,569
might still be worth it at some point so

184
00:07:09,220 --> 00:07:12,100
maybe I'll leave the control in there

185
00:07:10,569 --> 00:07:15,699
and we can try to wire that up at some

186
00:07:12,100 --> 00:07:17,560
point if we are so inclined so I'm going

187
00:07:15,699 --> 00:07:20,439
to go ahead and get rid of any more

188
00:07:17,560 --> 00:07:22,269
mentions of the the lighting here and

189
00:07:20,439 --> 00:07:26,079
I'm also gonna get rid of push light

190
00:07:22,269 --> 00:07:27,399
probe this code right here so this whole

191
00:07:26,079 --> 00:07:29,500
thing where we've got commands light

192
00:07:27,399 --> 00:07:32,469
probe position again gonna go ahead and

193
00:07:29,500 --> 00:07:35,019
and nerf all of that stuff so every

194
00:07:32,470 --> 00:07:36,990
place that was previously using like

195
00:07:35,019 --> 00:07:40,500
light probe buffer and all that stuff

196
00:07:36,990 --> 00:07:42,819
again just really making it easier to

197
00:07:40,500 --> 00:07:44,829
you know just getting rid of complexity

198
00:07:42,819 --> 00:07:46,180
in the code and making the code more

199
00:07:44,829 --> 00:07:47,800
flexible as well because now you don't

200
00:07:46,180 --> 00:07:50,670
have to worry about a light limit or

201
00:07:47,800 --> 00:07:53,230
anything like that a light probe limit

202
00:07:50,670 --> 00:07:56,530
you just get the lighting that is the

203
00:07:53,230 --> 00:08:00,310
voxel and off you go so I think that's

204
00:07:56,529 --> 00:08:02,349
great and I'm psyched about that again

205
00:08:00,310 --> 00:08:05,079
just really helps us in a lot of a lot

206
00:08:02,350 --> 00:08:07,540
of places so let's go ahead and and get

207
00:08:05,079 --> 00:08:11,109
rid of any mention of these light probes

208
00:08:07,540 --> 00:08:14,590
just so they're gone this is great it

209
00:08:11,110 --> 00:08:15,850
takes out a lot of ugly code that really

210
00:08:14,589 --> 00:08:19,000
we just didn't want to have right

211
00:08:15,850 --> 00:08:20,290
there's there's no reason for it we

212
00:08:19,000 --> 00:08:20,889
don't actually want that where was that

213
00:08:20,290 --> 00:08:23,620
coming from

214
00:08:20,889 --> 00:08:28,689
max light probe count I don't even know

215
00:08:23,620 --> 00:08:30,310
where that specified maybe we've already

216
00:08:28,689 --> 00:08:35,860
got rid of it

217
00:08:30,310 --> 00:08:37,299
so anyway create world yeah you could

218
00:08:35,860 --> 00:08:40,600
see this was getting like passed through

219
00:08:37,299 --> 00:08:44,919
a bunch of people which again so really

220
00:08:40,600 --> 00:08:47,800
nice that it goes away because it's just

221
00:08:44,919 --> 00:08:51,039
nasty it's just it's just ugly and

222
00:08:47,799 --> 00:08:54,519
there's no point to it so I'm also gonna

223
00:08:51,039 --> 00:08:57,519
search for light probe here and I'm

224
00:08:54,519 --> 00:08:59,379
gonna go ahead and just look to see if

225
00:08:57,519 --> 00:09:01,778
there's anywhere where we're still doing

226
00:08:59,379 --> 00:09:04,120
that and try to get rid of that so

227
00:09:01,778 --> 00:09:06,970
there's some here's an is light probe

228
00:09:04,120 --> 00:09:08,560
call I'm gonna get rid of that looks

229
00:09:06,970 --> 00:09:09,899
like there's a brain light probe I'll

230
00:09:08,559 --> 00:09:12,909
get that on the second pass through

231
00:09:09,899 --> 00:09:14,919
here's some light probes that we're

232
00:09:12,909 --> 00:09:17,860
adding here let's get rid of that

233
00:09:14,919 --> 00:09:20,139
because we don't want those let's get

234
00:09:17,860 --> 00:09:22,120
rid of these light probe positions let's

235
00:09:20,139 --> 00:09:24,549
get rid of these add light probes and

236
00:09:22,120 --> 00:09:26,470
now I'm also gonna do a search for light

237
00:09:24,549 --> 00:09:28,750
underscore probe just so we can see

238
00:09:26,470 --> 00:09:32,350
anywhere that was doing we're gonna get

239
00:09:28,750 --> 00:09:36,370
rid of the light probe counter and the

240
00:09:32,350 --> 00:09:38,500
light probe brain so that pulls light

241
00:09:36,370 --> 00:09:40,839
probes out of the system entirely and

242
00:09:38,500 --> 00:09:43,778
now we don't do any of that bookkeeping

243
00:09:40,839 --> 00:09:45,070
or any of that work and we just get the

244
00:09:43,778 --> 00:09:47,200
exact same result right and that's

245
00:09:45,070 --> 00:09:48,670
really great because I don't really want

246
00:09:47,200 --> 00:09:51,339
to have to deal with any of that stuff

247
00:09:48,669 --> 00:09:54,669
right it's just extra work that I don't

248
00:09:51,339 --> 00:09:59,079
want to do so you can see here what

249
00:09:54,669 --> 00:10:02,110
we're doing in the sort of in the I

250
00:09:59,078 --> 00:10:05,500
don't know how look at this but if you

251
00:10:02,110 --> 00:10:08,050
look at the costs here there's a lot of

252
00:10:05,500 --> 00:10:09,940
stuff now that I think that we want to

253
00:10:08,049 --> 00:10:14,500
start working our way through to

254
00:10:09,940 --> 00:10:17,589
simplify this code and so what I might

255
00:10:14,500 --> 00:10:19,629
do to start with today before actually

256
00:10:17,589 --> 00:10:22,240
trying to optimize it I might just try

257
00:10:19,629 --> 00:10:24,159
to simplify it so in other words it's

258
00:10:22,240 --> 00:10:25,778
you know it's been through a lot we've

259
00:10:24,159 --> 00:10:27,278
done so many experiments with lighting

260
00:10:25,778 --> 00:10:28,778
trying to figure out like a good system

261
00:10:27,278 --> 00:10:30,759
and we finally kind of I think got to a

262
00:10:28,778 --> 00:10:31,539
place where I'm really happy with how

263
00:10:30,759 --> 00:10:33,100
it's turning out

264
00:10:31,539 --> 00:10:36,129
so I'm ready to start turning the crank

265
00:10:33,100 --> 00:10:38,920
on it and I think this is actually like

266
00:10:36,129 --> 00:10:41,588
something we can ship right so what I

267
00:10:38,919 --> 00:10:43,240
want to do is say can we go through here

268
00:10:41,589 --> 00:10:44,740
and simplify everything that's happening

269
00:10:43,240 --> 00:10:48,639
so that we're down to like the bare

270
00:10:44,740 --> 00:10:53,019
minimum of stuff so we can focus on just

271
00:10:48,639 --> 00:10:54,519
what we need and so you know before

272
00:10:53,019 --> 00:10:56,948
looking at these numbers and I'm glad

273
00:10:54,519 --> 00:10:58,810
that I have them now before looking at

274
00:10:56,948 --> 00:11:01,389
these numbers what I want to do is go

275
00:10:58,809 --> 00:11:03,039
and for example

276
00:11:01,389 --> 00:11:04,929
we changed the way that we're generating

277
00:11:03,039 --> 00:11:05,349
like our sphere tests and stuff like

278
00:11:04,929 --> 00:11:07,539
that

279
00:11:05,350 --> 00:11:14,620
and the reason I want to change that is

280
00:11:07,539 --> 00:11:17,589
because if you look at how we're picking

281
00:11:14,620 --> 00:11:19,299
our Rea directions we were picking our

282
00:11:17,590 --> 00:11:23,290
Rea directions before we knew about our

283
00:11:19,299 --> 00:11:26,139
octahedral map right so we didn't

284
00:11:23,289 --> 00:11:31,539
actually have an octahedral map when we

285
00:11:26,139 --> 00:11:34,120
did our light relaxation stuff and it I

286
00:11:31,539 --> 00:11:35,589
think probably at least my guess is that

287
00:11:34,120 --> 00:11:39,279
now that we know that we're doing an

288
00:11:35,590 --> 00:11:42,610
octahedral map and it's 8 by 8 we might

289
00:11:39,279 --> 00:11:46,809
just want to say look we do 64 ray casts

290
00:11:42,610 --> 00:11:49,000
per light probe or something and that's

291
00:11:46,809 --> 00:11:50,799
just how it goes we send one out of each

292
00:11:49,000 --> 00:11:53,649
Texel each time or something like that

293
00:11:50,799 --> 00:11:57,009
right and then what we would know is

294
00:11:53,649 --> 00:11:58,720
when we load up the Rays we could load

295
00:11:57,009 --> 00:12:01,419
them up in such a way that we know we're

296
00:11:58,720 --> 00:12:06,550
loading up a specific like set that gets

297
00:12:01,419 --> 00:12:08,829
used exactly in a specific way right so

298
00:12:06,549 --> 00:12:11,409
we could actually make the so we don't

299
00:12:08,830 --> 00:12:13,480
have to do like oh we're we're in the

300
00:12:11,409 --> 00:12:14,769
octahedral map is this ray or let's make

301
00:12:13,480 --> 00:12:16,240
sure that these are evenly distribute

302
00:12:14,769 --> 00:12:18,970
across the sphere because we know like

303
00:12:16,240 --> 00:12:22,720
each time we're just updating one of our

304
00:12:18,970 --> 00:12:24,190
octahedral positions and we know which

305
00:12:22,720 --> 00:12:28,680
one it is because it's always the same

306
00:12:24,190 --> 00:12:30,790
one since the probes don't rotate right

307
00:12:28,679 --> 00:12:33,819
so I think I'd like to kind of go

308
00:12:30,789 --> 00:12:36,159
through and and start that process and

309
00:12:33,820 --> 00:12:39,100
again just to simplify sort of the way

310
00:12:36,159 --> 00:12:41,589
that that full cast process is working

311
00:12:39,100 --> 00:12:44,440
so if we go into the lighting system and

312
00:12:41,590 --> 00:12:45,990
I go to the full cast you can see the

313
00:12:44,440 --> 00:12:49,840
function here that we're talking about

314
00:12:45,990 --> 00:12:52,060
and what I mean to say is so you can see

315
00:12:49,840 --> 00:12:55,330
here we do our ray bundle count right

316
00:12:52,059 --> 00:12:57,609
and I think our a bundle count actually

317
00:12:55,330 --> 00:13:00,580
I think we actually are doing 64 casts

318
00:12:57,610 --> 00:13:06,190
currently I'm not sure so let's go ahead

319
00:13:00,580 --> 00:13:08,200
and print that out in the the actual

320
00:13:06,190 --> 00:13:09,610
system here so if we want to we can

321
00:13:08,200 --> 00:13:11,950
actually print out our array bundle

322
00:13:09,610 --> 00:13:13,750
count because we know the rate bundle

323
00:13:11,950 --> 00:13:14,259
count is always equal to the array count

324
00:13:13,750 --> 00:13:16,570
of

325
00:13:14,259 --> 00:13:19,960
it's this value right so when we

326
00:13:16,570 --> 00:13:22,240
actually do the dump at the end where we

327
00:13:19,960 --> 00:13:26,259
print out our statistics which is right

328
00:13:22,240 --> 00:13:30,070
here what I can do here is say like

329
00:13:26,259 --> 00:13:35,529
raise per probe or something like this

330
00:13:30,070 --> 00:13:39,100
right I can go ahead and compute that by

331
00:13:35,529 --> 00:13:40,600
saying that the Ray bundle count is it's

332
00:13:39,100 --> 00:13:42,430
just gonna be four cuz that's how wide

333
00:13:40,600 --> 00:13:45,540
that's how many is in each bundle times

334
00:13:42,429 --> 00:13:48,819
however big the sandbox here is right

335
00:13:45,539 --> 00:13:50,980
and the sampling sphere I think is just

336
00:13:48,820 --> 00:13:54,600
in the solution if I'm not mistaken

337
00:13:50,980 --> 00:13:57,670
so like the sampling sphere excuse me

338
00:13:54,600 --> 00:13:58,990
it's just one of these things so I

339
00:13:57,669 --> 00:14:08,349
should be able to say like all right

340
00:13:58,990 --> 00:14:16,440
like you know that so however many there

341
00:14:08,350 --> 00:14:21,129
are oops in there and off we go

342
00:14:16,440 --> 00:14:23,800
okay so if I take a look at what that's

343
00:14:21,129 --> 00:14:28,210
printing out there are ways for probe

344
00:14:23,799 --> 00:14:30,759
currently says 72 so basically I pretty

345
00:14:28,210 --> 00:14:33,040
much want that value I think to be 64 so

346
00:14:30,759 --> 00:14:36,970
each frame I want to send out 64 raised

347
00:14:33,039 --> 00:14:39,759
one out of each of the 8x8 voxels and I

348
00:14:36,970 --> 00:14:42,310
think that's basically what I want to do

349
00:14:39,759 --> 00:14:45,460
so that's effectively going to be a

350
00:14:42,309 --> 00:14:47,399
stratified sampling and we can just

351
00:14:45,460 --> 00:14:52,710
generate like lots of like sort of

352
00:14:47,399 --> 00:14:52,709
fairly even coverages in there now

353
00:14:58,059 --> 00:15:04,119
one thing I don't know is if we did a

354
00:15:02,559 --> 00:15:06,579
stratified sampling so that we're

355
00:15:04,120 --> 00:15:10,389
basically just always casting out of a

356
00:15:06,580 --> 00:15:14,410
particular piece of the act of the

357
00:15:10,389 --> 00:15:17,500
Octagon there of the octagonal map what

358
00:15:14,409 --> 00:15:23,799
I don't exactly know is I don't exactly

359
00:15:17,500 --> 00:15:25,570
know where how the Rays should be

360
00:15:23,799 --> 00:15:29,259
distributed inside that stratified

361
00:15:25,570 --> 00:15:32,100
sample so from frame to frame I don't

362
00:15:29,259 --> 00:15:36,330
actually know if what we want to do is

363
00:15:32,100 --> 00:15:39,399
just pure rant pure white noise out of

364
00:15:36,330 --> 00:15:42,070
each individual voxel each individual

365
00:15:39,399 --> 00:15:43,899
Texel or whether we still want blue

366
00:15:42,070 --> 00:15:47,980
noise out of each individual Texel

367
00:15:43,899 --> 00:15:50,139
because I would my gut says blue noise

368
00:15:47,980 --> 00:15:53,110
but since it's already confined to the

369
00:15:50,139 --> 00:15:57,000
bounds of the voxel itself I'm not sure

370
00:15:53,110 --> 00:15:57,000
what that actually means and

371
00:16:03,070 --> 00:16:18,610
I mean I guess I guess what I was what I

372
00:16:10,149 --> 00:16:23,740
would think gosh I guess my thinking

373
00:16:18,610 --> 00:16:26,139
there is like you walk blue noise over

374
00:16:23,740 --> 00:16:35,709
the sphere and then you want to have

375
00:16:26,139 --> 00:16:38,459
bucket the blue noise into like you want

376
00:16:35,708 --> 00:16:40,958
like something that's blue noise but

377
00:16:38,458 --> 00:16:46,000
constrained so that only each one is

378
00:16:40,958 --> 00:16:48,369
only in the Texel of the octahedral map

379
00:16:46,000 --> 00:16:54,909
and I'm not sure exactly how to get that

380
00:16:48,370 --> 00:16:56,620
right that seems kind of confusing so

381
00:16:54,909 --> 00:17:01,689
maybe I don't know maybe we'll start

382
00:16:56,620 --> 00:17:06,548
with some randomness like maybe we'll

383
00:17:01,690 --> 00:17:09,250
start with just white noise and we'll

384
00:17:06,548 --> 00:17:15,808
try to figure out how to work with that

385
00:17:09,250 --> 00:17:19,838
later as we go because I really like my

386
00:17:15,808 --> 00:17:23,289
in my brain I'm I'm not coming upon like

387
00:17:19,838 --> 00:17:25,509
the instant answer to how we would want

388
00:17:23,289 --> 00:17:28,119
those sampling spheres to go we know

389
00:17:25,509 --> 00:17:31,298
that like we want to modify the sampling

390
00:17:28,119 --> 00:17:34,289
sphere slightly from what it actually is

391
00:17:31,298 --> 00:17:38,200
right now so if you look like the

392
00:17:34,289 --> 00:17:39,759
sampling spheres you can see that

393
00:17:38,200 --> 00:17:41,980
there's a sample Direction that's like

394
00:17:39,759 --> 00:17:44,919
here's how many of these bundles purse

395
00:17:41,980 --> 00:17:48,250
fear there are and in this case like you

396
00:17:44,919 --> 00:17:51,100
know 18 is not what we want we want less

397
00:17:48,250 --> 00:17:52,839
you know if we're doing four times this

398
00:17:51,099 --> 00:17:57,279
number then we want this to be 16 so

399
00:17:52,839 --> 00:18:04,000
that we have 64 of them oh so we already

400
00:17:57,279 --> 00:18:08,889
computed this value too so you know what

401
00:18:04,000 --> 00:18:12,490
I want to do is I want to in addition to

402
00:18:08,890 --> 00:18:16,360
this also have which indices you write

403
00:18:12,490 --> 00:18:19,569
into with each of the results here

404
00:18:16,359 --> 00:18:23,500
so what I want to do is inside the full

405
00:18:19,569 --> 00:18:25,869
cast you can see that when it goes to

406
00:18:23,500 --> 00:18:28,089
update the voxel it has to do the get

407
00:18:25,869 --> 00:18:30,308
octahedral offset for the incoming light

408
00:18:28,089 --> 00:18:32,259
direction but I don't actually want to

409
00:18:30,308 --> 00:18:41,798
do that I want to be able to just sort

410
00:18:32,259 --> 00:18:43,629
of sum the voxel directly right so I

411
00:18:41,798 --> 00:18:45,429
almost don't even want to do it this way

412
00:18:43,630 --> 00:18:46,870
I want to just it I don't even want to

413
00:18:45,429 --> 00:18:48,730
be random access I want to basically

414
00:18:46,869 --> 00:18:53,369
just do a thing where like load up

415
00:18:48,730 --> 00:18:53,370
whatever was currently in the in the

416
00:18:53,669 --> 00:18:59,980
texels do the raycast and add it back

417
00:18:58,058 --> 00:19:03,548
right so it's like it's a very

418
00:18:59,980 --> 00:19:05,429
straightforward procedure yeah that I

419
00:19:03,548 --> 00:19:09,359
want that I want to be able to do there

420
00:19:05,429 --> 00:19:09,360
so yeah

421
00:19:18,288 --> 00:19:24,690
so I think what I want is this would

422
00:19:22,319 --> 00:19:27,720
change a little bit and what we would

423
00:19:24,690 --> 00:19:29,419
actually do here is we'd actually just

424
00:19:27,720 --> 00:19:34,339
[Music]

425
00:19:29,419 --> 00:19:34,340
we'd actually just go ahead and walk the

426
00:19:36,558 --> 00:19:41,038
we'd actually just go ahead and walk the

427
00:19:38,669 --> 00:19:43,020
texels so in much the same way that we

428
00:19:41,038 --> 00:19:46,408
were previously doing like our you know

429
00:19:43,019 --> 00:19:49,589
our weight updates here like this sort

430
00:19:46,409 --> 00:19:51,990
of stuff right it would be more or less

431
00:19:49,589 --> 00:19:56,699
this sort of code so in here we would

432
00:19:51,990 --> 00:20:00,298
say like let's walk the texels that

433
00:19:56,700 --> 00:20:03,330
we're looking at right and for each one

434
00:20:00,298 --> 00:20:04,798
of those in the thing we're actually

435
00:20:03,329 --> 00:20:10,460
updating and in this case it's going to

436
00:20:04,798 --> 00:20:10,460
be the spec atlas not that a few setlist

437
00:20:20,148 --> 00:20:30,298
so for each one of these I'm then going

438
00:20:23,849 --> 00:20:36,408
to go ahead and get like the I'm gonna

439
00:20:30,298 --> 00:20:41,579
go ahead and do two ray casts right and

440
00:20:36,409 --> 00:20:49,830
so instead of ray bundles we'd actually

441
00:20:41,579 --> 00:20:54,599
do this right so we'd step through the

442
00:20:49,829 --> 00:20:57,960
spec atlas tile each time we would go

443
00:20:54,599 --> 00:21:03,178
ahead and keep the Ray bundle index as

444
00:20:57,960 --> 00:21:07,919
something that just kind of increments

445
00:21:03,179 --> 00:21:09,240
along right and you know we don't even

446
00:21:07,919 --> 00:21:15,630
really need it we could just reconstruct

447
00:21:09,240 --> 00:21:17,519
it from the TTX 40y right so we could do

448
00:21:15,630 --> 00:21:23,430
that too but we'll look at that in a

449
00:21:17,519 --> 00:21:28,170
second we do the ray cast

450
00:21:23,430 --> 00:21:30,930
we update the voxels but here instead of

451
00:21:28,170 --> 00:21:34,170
like doing this stuff where the update

452
00:21:30,930 --> 00:21:38,990
voxel call was we can actually just grab

453
00:21:34,170 --> 00:21:45,480
this directly and do it to the Texel in

454
00:21:38,990 --> 00:21:47,609
question right so because we'd already

455
00:21:45,480 --> 00:22:00,630
know what this is so it would be

456
00:21:47,609 --> 00:22:03,719
something like you know like this and we

457
00:22:00,630 --> 00:22:05,700
wouldn't probably we wouldn't even

458
00:22:03,720 --> 00:22:08,490
really need this part of it and we could

459
00:22:05,700 --> 00:22:16,620
probably step that Texel yeah more

460
00:22:08,490 --> 00:22:20,490
directly so basically the T update blend

461
00:22:16,619 --> 00:22:30,959
I think I would just say is a variable

462
00:22:20,490 --> 00:22:36,420
we pull out at the top and boobs and we

463
00:22:30,960 --> 00:22:48,509
know that we've got like the transfer

464
00:22:36,420 --> 00:22:50,160
PPS here and that's it so it would be

465
00:22:48,509 --> 00:22:52,799
something like this where we just always

466
00:22:50,160 --> 00:22:59,180
know what the desk Texel is because we

467
00:22:52,799 --> 00:23:02,960
just have that information right and so

468
00:22:59,180 --> 00:23:02,960
you know would just be this

469
00:23:18,589 --> 00:23:28,289
probably again we probably want to do

470
00:23:26,009 --> 00:23:35,910
this a little bit more cleanly because

471
00:23:28,289 --> 00:23:42,119
this is not the best but something like

472
00:23:35,910 --> 00:23:44,910
that and then what we would require is

473
00:23:42,119 --> 00:23:47,489
that for each of these when we pull out

474
00:23:44,910 --> 00:23:49,650
this Ray bundle we want each ray

475
00:23:47,490 --> 00:23:56,279
direction for the sphere to know that it

476
00:23:49,650 --> 00:23:57,600
goes out that particular Texel right so

477
00:23:56,279 --> 00:24:00,089
then when we go through our subarrays

478
00:23:57,599 --> 00:24:01,649
again we know that each so we know that

479
00:24:00,089 --> 00:24:07,039
each sub right should go by four

480
00:24:01,650 --> 00:24:07,040
actually so in this particular case I

481
00:24:12,859 --> 00:24:19,709
guess I take it back that cuz we yeah we

482
00:24:16,799 --> 00:24:26,819
would want to do that right as for

483
00:24:19,710 --> 00:24:31,460
rights as well so really like you'd

484
00:24:26,819 --> 00:24:44,039
probably want to pack that down anyway

485
00:24:31,460 --> 00:24:45,509
mmm so hmm yeah here's what I'd say

486
00:24:44,039 --> 00:24:47,759
about this I think we want to do this

487
00:24:45,509 --> 00:24:51,180
even more explicitly because if we know

488
00:24:47,759 --> 00:24:53,609
that we've got a bundle of four rays

489
00:24:51,180 --> 00:24:55,950
that we cast that's four different

490
00:24:53,609 --> 00:24:59,069
texels we can update right at the same

491
00:24:55,950 --> 00:25:02,100
time and so really all we need to do is

492
00:24:59,069 --> 00:25:08,429
make a V 3 for X here that's our

493
00:25:02,099 --> 00:25:11,909
transfer PPS right and so instead of

494
00:25:08,430 --> 00:25:15,600
doing that each time what we would do

495
00:25:11,910 --> 00:25:19,860
here instead is in the slow part here

496
00:25:15,599 --> 00:25:22,259
the part that's non sended we would grab

497
00:25:19,859 --> 00:25:28,439
the transfer PPS

498
00:25:22,259 --> 00:25:32,079
for each one of our subarrays like this

499
00:25:28,440 --> 00:25:35,710
you know I'm saying and then the update

500
00:25:32,079 --> 00:25:37,829
could happen fully wide like we don't

501
00:25:35,710 --> 00:25:45,309
actually need the update to do anything

502
00:25:37,829 --> 00:25:48,000
slowly because we know we're doing four

503
00:25:45,309 --> 00:25:50,649
times three we know we're doing 12 ads

504
00:25:48,000 --> 00:25:55,180
here and those can be done entirely

505
00:25:50,650 --> 00:25:56,920
linearly like entirely SIM need right so

506
00:25:55,180 --> 00:26:00,490
what we would want to do is like load

507
00:25:56,920 --> 00:26:03,940
the all the stuff up and romp all this

508
00:26:00,490 --> 00:26:05,349
stuff out you know I'm saying and so

509
00:26:03,940 --> 00:26:09,330
let's go ahead and structure the loop

510
00:26:05,349 --> 00:26:09,329
more that way I think that's just better

511
00:26:09,509 --> 00:26:18,129
so in here like where we were previously

512
00:26:13,150 --> 00:26:19,330
doing our sort of updates right so I

513
00:26:18,130 --> 00:26:20,710
think what we want to do is something

514
00:26:19,329 --> 00:26:23,439
more like this

515
00:26:20,710 --> 00:26:27,069
so you know here you can see us pulling

516
00:26:23,440 --> 00:26:28,630
out these spec Texel sets and what we

517
00:26:27,069 --> 00:26:30,939
want to do is just update those spec

518
00:26:28,630 --> 00:26:33,220
Texel sets right so we want to be able

519
00:26:30,940 --> 00:26:34,930
to just load the T update blend in there

520
00:26:33,220 --> 00:26:36,759
and then romp the blend so it's just

521
00:26:34,930 --> 00:26:38,470
gonna be like a replicated T update

522
00:26:36,759 --> 00:26:40,869
blend and then we're just gonna go ahead

523
00:26:38,470 --> 00:26:43,569
and do it fully wide so I think what we

524
00:26:40,869 --> 00:26:49,959
want is literally this like we want

525
00:26:43,569 --> 00:26:52,869
exactly this load behavior here and so

526
00:26:49,960 --> 00:26:54,430
we can we can actually I think just copy

527
00:26:52,869 --> 00:26:56,559
this so I think maybe I started with

528
00:26:54,430 --> 00:26:59,200
like sort of the wrong template loop so

529
00:26:56,559 --> 00:27:03,190
maybe let's just not do that let's do

530
00:26:59,200 --> 00:27:08,860
this instead like this where we load

531
00:27:03,190 --> 00:27:11,259
each of these up right like this and so

532
00:27:08,859 --> 00:27:14,039
what I want to do here is say let's do

533
00:27:11,259 --> 00:27:18,720
the loads then let's do the stores and

534
00:27:14,039 --> 00:27:18,720
write them back here and I'm saying

535
00:27:24,880 --> 00:27:40,710
and looking at that looking at that we

536
00:27:34,839 --> 00:27:48,549
probably only want to do four of these

537
00:27:40,710 --> 00:27:51,880
at a time which would be three because

538
00:27:48,549 --> 00:27:54,069
we probably don't want to do eight wide

539
00:27:51,880 --> 00:27:57,160
ray casting although we could and that

540
00:27:54,069 --> 00:27:58,869
would also probably a lot well yeah

541
00:27:57,160 --> 00:28:00,759
maybe we do want to do that

542
00:27:58,869 --> 00:28:03,669
so another way to look at that would ya

543
00:28:00,759 --> 00:28:06,549
be like look don't do this just do this

544
00:28:03,670 --> 00:28:11,460
one loop of why I kind of like the sound

545
00:28:06,549 --> 00:28:18,460
of that so if we just did one loop of Y

546
00:28:11,460 --> 00:28:21,220
and then we did and then we just pulled

547
00:28:18,460 --> 00:28:24,100
out two ray directions did - ray casts

548
00:28:21,220 --> 00:28:26,470
and then rode everything back that seems

549
00:28:24,099 --> 00:28:28,990
better because again if we wanted to

550
00:28:26,470 --> 00:28:32,759
switch to a VX eventually you'd want the

551
00:28:28,990 --> 00:28:32,759
eight wide path to happen here

552
00:28:34,799 --> 00:28:39,389
so I'm actually I'm actually fine with

553
00:28:38,079 --> 00:28:41,740
that

554
00:28:39,390 --> 00:28:44,560
so what we want to do here is we want to

555
00:28:41,740 --> 00:28:46,980
do a store f/32 for X you know so what

556
00:28:44,559 --> 00:28:50,409
we'd want to do here is basically this

557
00:28:46,980 --> 00:28:56,500
so after we like update these variables

558
00:28:50,410 --> 00:29:02,350
which we have to do we would want to do

559
00:28:56,500 --> 00:29:04,269
a store which I assume we have yeah so

560
00:29:02,349 --> 00:29:05,709
we have a load F 32 X but we don't have

561
00:29:04,269 --> 00:29:08,400
a store after new 2x so we're gonna have

562
00:29:05,710 --> 00:29:08,400
to add that guy

563
00:29:10,970 --> 00:29:17,900
so there's that address and we just want

564
00:29:13,940 --> 00:29:23,210
to know like what's the actual f32 Forex

565
00:29:17,900 --> 00:29:31,009
that we have and that's just gonna be a

566
00:29:23,210 --> 00:29:36,680
store you and it's literally just gonna

567
00:29:31,009 --> 00:29:44,930
be like whatever this a dot p-value is

568
00:29:36,680 --> 00:29:47,990
right all right so if I want to do a

569
00:29:44,930 --> 00:29:50,330
store there these would just be store F

570
00:29:47,990 --> 00:29:52,190
32x I'm gonna get rid of this and we

571
00:29:50,329 --> 00:29:55,039
would basically like look right s 0 back

572
00:29:52,190 --> 00:29:57,070
to the zero location and so on right so

573
00:29:55,039 --> 00:30:00,559
it would just be something like this

574
00:29:57,069 --> 00:30:03,529
right so we do a loads we do stores so

575
00:30:00,559 --> 00:30:06,019
at the end after we update everything so

576
00:30:03,529 --> 00:30:09,230
like after the lerp s-- we would just do

577
00:30:06,019 --> 00:30:13,940
the stores and the lips in this case i

578
00:30:09,230 --> 00:30:15,620
think we could just do yeah i mean i

579
00:30:13,940 --> 00:30:22,340
think we could just do this as like you

580
00:30:15,619 --> 00:30:25,339
know s0 equals lerp from from s 0 to

581
00:30:22,339 --> 00:30:27,559
whatever the transfer PPS was kind of a

582
00:30:25,339 --> 00:30:31,689
thing the problem we're gonna have here

583
00:30:27,559 --> 00:30:39,079
is that when we've loaded these up right

584
00:30:31,690 --> 00:30:42,590
it's RGB r g b RG right so these are

585
00:30:39,079 --> 00:30:45,500
like strided across so the transfer PPS

586
00:30:42,589 --> 00:30:48,109
is that we get are actually gonna have

587
00:30:45,500 --> 00:30:50,200
to be strided in the same way right like

588
00:30:48,109 --> 00:30:53,089
we're gonna have to actually have those

589
00:30:50,200 --> 00:30:55,789
come across lined up so you know it's

590
00:30:53,089 --> 00:30:57,679
gonna be something like this you know

591
00:30:55,789 --> 00:30:59,659
i'm saying to you

592
00:30:57,680 --> 00:31:03,080
which makes it a little bit harder for

593
00:30:59,660 --> 00:31:06,279
us to work with but that's how it has to

594
00:31:03,079 --> 00:31:10,029
be packed to do the load to do the

595
00:31:06,279 --> 00:31:10,029
storage eventually

596
00:31:11,669 --> 00:31:19,179
so we're gonna have to make sure that we

597
00:31:13,630 --> 00:31:20,860
put things in here correctly and again

598
00:31:19,179 --> 00:31:22,720
I'm not really sure how we want to do

599
00:31:20,859 --> 00:31:25,839
that we might do that the cheesy way

600
00:31:22,720 --> 00:31:27,819
first and then you know cuz the cheesy

601
00:31:25,839 --> 00:31:31,178
way to do it would just be like look

602
00:31:27,819 --> 00:31:33,849
we've got you know a certain number of F

603
00:31:31,179 --> 00:31:36,190
32s here and then what we're gonna do in

604
00:31:33,849 --> 00:31:37,569
each of these cases is just we're gonna

605
00:31:36,190 --> 00:31:41,860
just load up out of that so you know

606
00:31:37,569 --> 00:31:43,689
it'd be it'd be this right you'd go

607
00:31:41,859 --> 00:31:46,869
through and load them up and then you

608
00:31:43,690 --> 00:31:50,980
would load out of that array to get your

609
00:31:46,869 --> 00:32:02,918
transfer PPS like so right so you know

610
00:31:50,980 --> 00:32:08,620
you just do that and here's that

611
00:32:02,919 --> 00:32:14,250
transfer PPS and that's gonna load you

612
00:32:08,619 --> 00:32:14,250
know six times four values which is

613
00:32:16,140 --> 00:32:22,270
which is how many this would have to

614
00:32:18,220 --> 00:32:23,620
have in it right so here's the RGB we

615
00:32:22,269 --> 00:32:26,349
know that I sorry it's eight of these

616
00:32:23,619 --> 00:32:28,389
right so three times eight is the same

617
00:32:26,349 --> 00:32:30,759
as 6 times four so that would load

618
00:32:28,390 --> 00:32:33,220
correctly across the top this T update

619
00:32:30,759 --> 00:32:35,769
blend now we need to be able to do this

620
00:32:33,220 --> 00:32:37,690
wide and again that's not particularly

621
00:32:35,769 --> 00:32:41,650
difficult so what we do here is we'd

622
00:32:37,690 --> 00:32:43,720
make our basically our blend value and

623
00:32:41,650 --> 00:32:47,798
our inverse blend value so we'd have our

624
00:32:43,720 --> 00:32:51,339
blend and our in blends right and this

625
00:32:47,798 --> 00:32:55,319
would just be load F 32 I guess I don't

626
00:32:51,339 --> 00:32:55,319
know load F 3/2

627
00:32:55,799 --> 00:33:00,629
this so this would just be something

628
00:32:57,960 --> 00:33:03,809
where we you know replicate the value

629
00:33:00,630 --> 00:33:08,040
across so in this case we'd have a blend

630
00:33:03,809 --> 00:33:10,950
and an inverse blend and the inverse

631
00:33:08,039 --> 00:33:13,680
blend is just you know 1.0 - the the

632
00:33:10,950 --> 00:33:15,390
blend value so in order to do our lerp

633
00:33:13,680 --> 00:33:18,890
it's pretty simple so for each of these

634
00:33:15,390 --> 00:33:23,910
it's just going to be like blend times

635
00:33:18,890 --> 00:33:31,530
the T zero plus I'm sorry in the blend

636
00:33:23,910 --> 00:33:36,350
times the T zero plus blend times the no

637
00:33:31,529 --> 00:33:36,349
sorry was s zero so T update blend I

638
00:33:37,160 --> 00:33:42,090
don't know what T update blend actually

639
00:33:40,380 --> 00:33:49,440
represented so let me just make sure

640
00:33:42,089 --> 00:33:51,689
we've got that right T update blend all

641
00:33:49,440 --> 00:33:53,640
right so T update blend is how much

642
00:33:51,690 --> 00:33:55,350
we're going towards so that means the

643
00:33:53,640 --> 00:33:57,180
inverse blend should be on whatever the

644
00:33:55,349 --> 00:34:00,539
old value would just is that and the new

645
00:33:57,180 --> 00:34:02,730
value should get the T zero right so

646
00:34:00,539 --> 00:34:07,170
that's the entirety of our update right

647
00:34:02,730 --> 00:34:09,059
one two three four five and so that

648
00:34:07,170 --> 00:34:12,570
updates are our sort of lighting

649
00:34:09,059 --> 00:34:15,119
template there and I think this would do

650
00:34:12,570 --> 00:34:18,240
everything that we needed right now this

651
00:34:15,119 --> 00:34:20,219
will not be correct because we haven't

652
00:34:18,239 --> 00:34:22,199
changed our spheres to be sorted the way

653
00:34:20,219 --> 00:34:26,428
that I just said right so it's not

654
00:34:22,199 --> 00:34:30,658
actually correct let me go ahead and say

655
00:34:26,429 --> 00:34:32,429
oh also this this spec atlas here we

656
00:34:30,659 --> 00:34:34,320
don't actually want offset from textile

657
00:34:32,429 --> 00:34:35,309
respect I'll probably well actually

658
00:34:34,320 --> 00:34:44,370
maybe we do

659
00:34:35,309 --> 00:34:48,269
it's just tile right so so I think

660
00:34:44,369 --> 00:34:50,069
that's what we would need here so when

661
00:34:48,269 --> 00:34:53,099
we go through and we're trying to set up

662
00:34:50,070 --> 00:34:55,710
our PBS here we now have like sort of a

663
00:34:53,099 --> 00:34:58,259
double loop if we do want to load all of

664
00:34:55,710 --> 00:34:59,519
these at once eight wide where we

665
00:34:58,260 --> 00:35:01,770
basically say like okay we're doing a

666
00:34:59,519 --> 00:35:03,960
ray cast here's our you know our ray

667
00:35:01,769 --> 00:35:05,909
cast it's only going to return four

668
00:35:03,960 --> 00:35:07,860
things you know rather than eight and

669
00:35:05,909 --> 00:35:10,019
like I said we may want to go ahead and

670
00:35:07,860 --> 00:35:14,280
start just doing it eight wide

671
00:35:10,019 --> 00:35:16,800
the problem we would have here too is I

672
00:35:14,280 --> 00:35:20,190
don't actually know if we want to split

673
00:35:16,800 --> 00:35:23,610
this into two halves because the other

674
00:35:20,190 --> 00:35:25,500
thing that's a little bit ugly is when

675
00:35:23,610 --> 00:35:28,410
we do our ray cast we probably want to

676
00:35:25,500 --> 00:35:30,719
do the ray cast for we want those four

677
00:35:28,409 --> 00:35:35,549
to be as close as possible and if we

678
00:35:30,719 --> 00:35:37,079
actually ray cast four in a row those

679
00:35:35,550 --> 00:35:39,570
are going to be spread out more than if

680
00:35:37,079 --> 00:35:45,000
we did four like right in a little

681
00:35:39,570 --> 00:35:46,440
square pattern right so that part's kind

682
00:35:45,000 --> 00:35:48,599
of annoying and that's just because

683
00:35:46,440 --> 00:35:51,349
again the like the hierarchy what you

684
00:35:48,599 --> 00:35:54,929
load out of the hierarchy is different

685
00:35:51,349 --> 00:35:56,880
and so it's hard to say usually if you

686
00:35:54,929 --> 00:35:59,190
trace ray bundles that are near each

687
00:35:56,880 --> 00:36:01,740
other I mean that's usually more

688
00:35:59,190 --> 00:36:05,849
coherent but you know you can't really

689
00:36:01,739 --> 00:36:08,339
guarantee it so it's hard to say but

690
00:36:05,849 --> 00:36:09,960
anyway if we were to do it this way then

691
00:36:08,340 --> 00:36:11,730
we would essentially do two ray cast

692
00:36:09,960 --> 00:36:16,470
right and then we would do this for each

693
00:36:11,730 --> 00:36:18,449
of the ray casts so for example when

694
00:36:16,469 --> 00:36:20,399
we're pulling out the sub braze here and

695
00:36:18,449 --> 00:36:23,159
we're doing like the getcomponent calls

696
00:36:20,400 --> 00:36:25,139
and all this garbage what we need to be

697
00:36:23,159 --> 00:36:31,379
able to do here is actually have this

698
00:36:25,139 --> 00:36:33,239
code be sort of usable if we're going to

699
00:36:31,380 --> 00:36:37,430
do eight of these and the only thing

700
00:36:33,239 --> 00:36:37,429
that I would say here is I'm not sure

701
00:36:41,389 --> 00:36:49,650
I'm not sure if that shouldn't maybe be

702
00:36:43,739 --> 00:36:51,149
done let me take a look here I'm not

703
00:36:49,650 --> 00:36:55,559
sure if maybe that shouldn't just be

704
00:36:51,150 --> 00:36:57,630
done at the end of this routine you know

705
00:36:55,559 --> 00:37:01,619
I'm saying because rather than return

706
00:36:57,630 --> 00:37:04,349
this information back it seems like you

707
00:37:01,619 --> 00:37:08,250
would just it seems like you would just

708
00:37:04,349 --> 00:37:10,440
want to have this be handled rather than

709
00:37:08,250 --> 00:37:12,449
returning the result this way because

710
00:37:10,440 --> 00:37:15,599
since we don't ever do a ray cast for

711
00:37:12,449 --> 00:37:18,539
any other reason you might as well just

712
00:37:15,599 --> 00:37:21,199
compute the diffuse irradiance

713
00:37:18,539 --> 00:37:21,199
right there

714
00:37:24,409 --> 00:37:30,269
and just allow the optimizer Morse to

715
00:37:27,690 --> 00:37:32,909
see more stuff so I'm not actually sure

716
00:37:30,269 --> 00:37:35,460
that that is the right thing to do there

717
00:37:32,909 --> 00:37:39,179
either because it just seems like it's

718
00:37:35,460 --> 00:37:45,179
kind of just wasting effort to a certain

719
00:37:39,179 --> 00:37:48,599
degree and again that way it would just

720
00:37:45,179 --> 00:37:52,799
it wouldn't have to return anything it

721
00:37:48,599 --> 00:37:56,670
would just literally return the emission

722
00:37:52,800 --> 00:38:10,110
information and that seems maybe it may

723
00:37:56,670 --> 00:38:14,159
be better to me yeah that seems maybe

724
00:38:10,110 --> 00:38:16,019
better so so I actually don't know if

725
00:38:14,159 --> 00:38:19,139
maybe this should just be welded right

726
00:38:16,019 --> 00:38:20,489
in here you and I'm Sam

727
00:38:19,139 --> 00:38:22,829
we're basically we're just saying we

728
00:38:20,489 --> 00:38:25,979
just have the transfers what gets

729
00:38:22,829 --> 00:38:28,920
computed here so that all can be welded

730
00:38:25,980 --> 00:38:31,740
together so when it does that raycast

731
00:38:28,920 --> 00:38:35,760
you get back the transmission that you

732
00:38:31,739 --> 00:38:40,559
want and then the outer code can do the

733
00:38:35,760 --> 00:38:47,430
blend for you that seems more sane to me

734
00:38:40,559 --> 00:38:49,860
probably yeah so I'm going to go ahead

735
00:38:47,429 --> 00:38:52,559
and say that that that's what we're

736
00:38:49,860 --> 00:38:55,740
going to do here and I'll go ahead and

737
00:38:52,559 --> 00:38:58,940
throw this debug code in here as well

738
00:38:55,739 --> 00:38:58,939
like so

739
00:39:04,280 --> 00:39:08,519
just because I don't know if we're gonna

740
00:39:06,179 --> 00:39:09,389
need that someday but we'll believe it

741
00:39:08,519 --> 00:39:11,489
in there in case we need it

742
00:39:09,389 --> 00:39:13,259
so this is more what I'd like this to

743
00:39:11,489 --> 00:39:16,829
look like we just loop over you know

744
00:39:13,260 --> 00:39:18,390
just going over each one and then you

745
00:39:16,829 --> 00:39:19,980
know I won't even bother with the

746
00:39:18,389 --> 00:39:24,210
transfer people yes here what we'll say

747
00:39:19,980 --> 00:39:33,599
is that raycast results we just get back

748
00:39:24,210 --> 00:39:45,240
a transmission right maybe something

749
00:39:33,599 --> 00:39:46,710
like sorry I'm just trying to think this

750
00:39:45,239 --> 00:39:50,989
through what I want here but I think I

751
00:39:46,710 --> 00:39:50,990
do want just this so you know it's just

752
00:39:51,320 --> 00:39:56,789
this stuff doesn't really get get used

753
00:39:54,690 --> 00:40:00,500
that way anymore I guess what I'm

754
00:39:56,789 --> 00:40:00,500
thinking is maybe you just give it I

755
00:40:02,360 --> 00:40:07,170
mean another way to do this would be we

756
00:40:04,590 --> 00:40:10,050
don't even do that we just we just weld

757
00:40:07,170 --> 00:40:12,869
this whole thing in you know I mean the

758
00:40:10,050 --> 00:40:15,030
reason the Ray caster is separate at the

759
00:40:12,869 --> 00:40:19,199
moment is because I like to be able to

760
00:40:15,030 --> 00:40:21,390
call it for debug purposes you know but

761
00:40:19,199 --> 00:40:25,199
it may be that it just wants to work on

762
00:40:21,389 --> 00:40:28,159
the size of a tile anyway and this stuff

763
00:40:25,199 --> 00:40:28,159
just gets welded in

764
00:40:35,329 --> 00:40:42,930
so it's like you just sample a sphere

765
00:40:39,679 --> 00:40:56,239
that's just what happens you know what I

766
00:40:42,929 --> 00:40:56,239
mean hmm we don't care about Rea weight

767
00:40:56,989 --> 00:41:14,960
or any of this stuff yeah I'm thinking

768
00:41:06,509 --> 00:41:14,960
that smite might be what I want actually

769
00:41:20,400 --> 00:41:25,239
so if that were the case here's what

770
00:41:22,989 --> 00:41:29,889
that would look like essentially you

771
00:41:25,239 --> 00:41:31,949
would pass the raycast routine here and

772
00:41:29,889 --> 00:41:34,420
I don't know what debugging was doing

773
00:41:31,949 --> 00:41:37,538
looks like it pushed the debug box on

774
00:41:34,420 --> 00:41:40,088
there yeah so essentially what you do is

775
00:41:37,539 --> 00:41:41,709
you tell the raycast routine and the

776
00:41:40,088 --> 00:41:44,739
raycast routine would not return things

777
00:41:41,708 --> 00:41:48,219
so that's out of here right so raycast

778
00:41:44,739 --> 00:41:49,420
result just kind of goes away and so

779
00:41:48,219 --> 00:41:51,369
then what you would do is you'd say the

780
00:41:49,420 --> 00:41:53,469
raycast routine you actually tell the

781
00:41:51,369 --> 00:41:55,630
raycast routine what to update and the

782
00:41:53,469 --> 00:41:59,650
raycast just does the update in place

783
00:41:55,630 --> 00:42:01,599
right so essentially you know you don't

784
00:41:59,650 --> 00:42:04,838
get to just get Rea information back

785
00:42:01,599 --> 00:42:09,369
instead what happens is it does it does

786
00:42:04,838 --> 00:42:12,759
the load and store and you just give it

787
00:42:09,369 --> 00:42:16,088
like here's the Rea bundle and here's

788
00:42:12,759 --> 00:42:21,670
the taxol to update and it would do like

789
00:42:16,088 --> 00:42:25,509
this code right so that's at the opening

790
00:42:21,670 --> 00:42:29,829
you know it would do this it was loaded

791
00:42:25,509 --> 00:42:33,818
up you would pass in this value and the

792
00:42:29,829 --> 00:42:36,818
spec Texel right so the sampling sphere

793
00:42:33,818 --> 00:42:44,009
this part would still be up to you like

794
00:42:36,818 --> 00:42:48,369
here but you know you would pass in that

795
00:42:44,009 --> 00:42:53,289
which you already are so you would pass

796
00:42:48,369 --> 00:42:55,900
recast work the Ray origin here is just

797
00:42:53,289 --> 00:42:59,019
you know whatever whatever the light

798
00:42:55,900 --> 00:43:05,259
probe P is I believe so

799
00:42:59,018 --> 00:43:08,818
ray origin and Ray direction and then

800
00:43:05,259 --> 00:43:08,818
you would pass the speck Texel

801
00:43:11,550 --> 00:43:15,480
then it would actually update the

802
00:43:13,650 --> 00:43:16,860
lighting in place for that thing so

803
00:43:15,480 --> 00:43:19,199
really we're just calling this thing a

804
00:43:16,860 --> 00:43:29,190
few times and it's doing its its

805
00:43:19,199 --> 00:43:30,119
business right yeah so I think that's

806
00:43:29,190 --> 00:43:32,760
more what I want

807
00:43:30,119 --> 00:43:38,099
so then what it does is it right it does

808
00:43:32,760 --> 00:43:40,860
the load up of the the samples and then

809
00:43:38,099 --> 00:43:51,119
it does the right back of the samples

810
00:43:40,860 --> 00:43:52,620
and I think I like that better because

811
00:43:51,119 --> 00:43:54,449
now I can sort of see what's happening

812
00:43:52,619 --> 00:43:56,250
easier and I can start to optimize this

813
00:43:54,449 --> 00:44:02,699
routine as a whole which I like better

814
00:43:56,250 --> 00:44:04,289
and Jimmy and so this stuff here where

815
00:44:02,699 --> 00:44:07,589
we're using like hit normal and all that

816
00:44:04,289 --> 00:44:12,889
stuff I can also then you know make that

817
00:44:07,590 --> 00:44:18,600
be more coherent with what's going on so

818
00:44:12,889 --> 00:44:22,589
yeah that that seems more thing to me

819
00:44:18,599 --> 00:44:23,909
that seems more saying to me when we're

820
00:44:22,590 --> 00:44:28,970
actually doing this and we're doing it

821
00:44:23,909 --> 00:44:31,589
for why though if we're loading up these

822
00:44:28,969 --> 00:44:37,230
again doing eight at a time seems good

823
00:44:31,590 --> 00:44:39,950
but maybe again like maybe we'll just to

824
00:44:37,230 --> 00:44:41,849
make it a little easier on ourselves

825
00:44:39,949 --> 00:44:46,699
because everything was written for a

826
00:44:41,849 --> 00:44:50,599
wire to begin with we will just only do

827
00:44:46,699 --> 00:45:00,119
four so we'll call this twice

828
00:44:50,599 --> 00:45:04,159
essentially like that so we'll do one

829
00:45:00,119 --> 00:45:07,789
through four and then five through nine

830
00:45:04,159 --> 00:45:07,789
I'm sorry five

831
00:45:08,539 --> 00:45:14,359
one two and three and then four right

832
00:45:11,869 --> 00:45:15,108
five six seven eight nine yes no sorry

833
00:45:14,358 --> 00:45:17,838
that's correct

834
00:45:15,108 --> 00:45:21,818
five six seven eight five through eight

835
00:45:17,838 --> 00:45:21,818
one through four and five through eight

836
00:45:22,028 --> 00:45:30,159
like this that seems reasonable to me

837
00:45:37,028 --> 00:45:43,969
and that way yeah we just know that the

838
00:45:41,900 --> 00:45:46,429
spheres are set up correctly we have a

839
00:45:43,969 --> 00:45:49,608
nice little simple loop here that goes

840
00:45:46,429 --> 00:45:51,650
through each individual place we want to

841
00:45:49,608 --> 00:45:56,058
cast from does the cast and off we go

842
00:45:51,650 --> 00:45:58,309
right that seems fine and then we just

843
00:45:56,059 --> 00:46:00,528
have to make sure this routine can work

844
00:45:58,309 --> 00:46:02,269
that way right so it's gonna go ahead

845
00:46:00,528 --> 00:46:03,650
and load up those I guess it doesn't

846
00:46:02,268 --> 00:46:05,568
really need them till the end so we

847
00:46:03,650 --> 00:46:07,999
might as well just put them down here so

848
00:46:05,568 --> 00:46:11,268
it loads up the s zeroes it loads up the

849
00:46:07,998 --> 00:46:15,768
T zeroes it does the blend and then it

850
00:46:11,268 --> 00:46:18,158
writes them back out right that seems

851
00:46:15,768 --> 00:46:18,158
totally reasonable

852
00:46:29,539 --> 00:46:35,000
I don't know

853
00:46:32,630 --> 00:46:41,840
yeah so I guess for now we'll just go

854
00:46:35,000 --> 00:47:01,460
ahead and do the four I loop here on the

855
00:46:41,840 --> 00:47:06,320
sub-array and then we'll go ahead and

856
00:47:01,460 --> 00:47:11,179
try to make that better later because

857
00:47:06,320 --> 00:47:13,400
this code is terrible right not entirely

858
00:47:11,179 --> 00:47:16,539
our fault lookups like compute Vox

859
00:47:13,400 --> 00:47:22,280
already and syrup are bad for that but

860
00:47:16,539 --> 00:47:27,349
anyway so here's our little cheat sheet

861
00:47:22,280 --> 00:47:36,019
here so for each ray we want tea ray and

862
00:47:27,349 --> 00:47:36,819
that's just this apparently so that's

863
00:47:36,019 --> 00:47:41,809
good

864
00:47:36,820 --> 00:47:46,519
t raise T ray emission direction this we

865
00:47:41,809 --> 00:47:51,529
already know right let's see hit we're

866
00:47:46,519 --> 00:47:56,920
pulling out their probe sample P R a dot

867
00:47:51,530 --> 00:47:56,920
P that's just hit P this is it normal

868
00:47:57,409 --> 00:48:04,569
ref color is hit ref color and emission

869
00:48:01,730 --> 00:48:04,570
is hit emission

870
00:48:09,929 --> 00:48:16,659
so looking at here I assume that the

871
00:48:15,369 --> 00:48:18,489
problem is we don't have the solution

872
00:48:16,659 --> 00:48:21,789
pulled out how do we do what's the

873
00:48:18,489 --> 00:48:23,379
problem there diffuse Atlas so we're

874
00:48:21,789 --> 00:48:25,809
gonna have to pull out the diffuse Atlas

875
00:48:23,380 --> 00:48:33,490
as well which we can do here

876
00:48:25,809 --> 00:48:46,090
I assume oh you know what though I guess

877
00:48:33,489 --> 00:48:58,199
we just can pass those down let's just

878
00:48:46,090 --> 00:48:58,200
do that for now there we go

879
00:49:00,929 --> 00:49:15,909
so probe sample P probe sample and

880
00:49:08,909 --> 00:49:17,679
emission direction where is emission

881
00:49:15,909 --> 00:49:19,420
direction is up here so what's the

882
00:49:17,679 --> 00:49:27,219
problem compute Vox right oh it's we

883
00:49:19,420 --> 00:49:35,530
just jumped we jumped over it now just

884
00:49:27,219 --> 00:49:37,989
grab these and put them up above here so

885
00:49:35,530 --> 00:49:42,970
in this case we need to write back the

886
00:49:37,989 --> 00:49:45,579
transfer PPS correctly and I think if we

887
00:49:42,969 --> 00:49:47,379
just do it this way we will so again

888
00:49:45,579 --> 00:49:50,440
this just loads them out in the opposite

889
00:49:47,380 --> 00:49:52,180
format so I think that's all fine and

890
00:49:50,440 --> 00:49:53,740
then we just need to do our hard-coded

891
00:49:52,179 --> 00:49:56,319
moondoor nonsense we just have to move

892
00:49:53,739 --> 00:49:59,229
that in there and we want to figure out

893
00:49:56,320 --> 00:50:01,900
what our long term strategy is for that

894
00:49:59,230 --> 00:50:04,300
I don't actually know what we're gonna

895
00:50:01,900 --> 00:50:06,160
do but eventually we want the moon to

896
00:50:04,300 --> 00:50:08,019
only affect outdoor areas and stuff like

897
00:50:06,159 --> 00:50:13,000
that so we're gonna have to do something

898
00:50:08,019 --> 00:50:16,920
with that eventually anyway but if we go

899
00:50:13,000 --> 00:50:18,599
ahead here and grab that out for now

900
00:50:16,920 --> 00:50:31,800
we can just go ahead and put that in the

901
00:50:18,599 --> 00:50:34,559
raycast for now all right so T update

902
00:50:31,800 --> 00:50:36,030
blend is again just something we

903
00:50:34,559 --> 00:50:38,489
probably want to pull out of the

904
00:50:36,030 --> 00:50:41,730
solution here so when we actually are

905
00:50:38,489 --> 00:50:44,879
doing the raycast we just grab RT update

906
00:50:41,730 --> 00:50:47,519
blend then we don't need to do the extra

907
00:50:44,880 --> 00:50:51,960
blends for stuff we didn't load and then

908
00:50:47,519 --> 00:50:55,050
I think we're good so here in our test

909
00:50:51,960 --> 00:50:59,340
caster we can't actually do this one

910
00:50:55,050 --> 00:51:04,380
anymore which is fine that's that's no

911
00:50:59,340 --> 00:51:07,340
biggie but I think I may just remove the

912
00:51:04,380 --> 00:51:07,340
test caster entirely

913
00:51:20,068 --> 00:51:24,190
should this wait what happened there

914
00:51:23,010 --> 00:51:30,480
okay

915
00:51:24,190 --> 00:51:38,679
so we actually want here is this right

916
00:51:30,480 --> 00:51:40,869
there yeah all right so now we've got

917
00:51:38,679 --> 00:51:43,838
the Ray caster going and this is going

918
00:51:40,869 --> 00:51:46,240
to be a complete disaster because what's

919
00:51:43,838 --> 00:51:51,489
happening now is we're casting off of

920
00:51:46,239 --> 00:51:54,759
spheres that are not correctly put that

921
00:51:51,489 --> 00:51:59,798
they're not correctly aligned to those

922
00:51:54,760 --> 00:52:01,390
octahedral maps but we're writing them

923
00:51:59,798 --> 00:52:02,829
as if they were right so we're casting

924
00:52:01,389 --> 00:52:04,179
raised in arbitrary directions and then

925
00:52:02,829 --> 00:52:08,079
writing to anywhere in the map so

926
00:52:04,179 --> 00:52:11,230
obviously that's wrong but otherwise

927
00:52:08,079 --> 00:52:12,670
we're fine and this this will allow us

928
00:52:11,230 --> 00:52:15,400
to just look at this one routine and

929
00:52:12,670 --> 00:52:21,099
simplify it down exactly however it

930
00:52:15,400 --> 00:52:22,990
needs to be so the other thing that I

931
00:52:21,099 --> 00:52:26,859
would note is if we take a look at

932
00:52:22,989 --> 00:52:30,338
what's going on here and we look at why

933
00:52:26,858 --> 00:52:32,108
we need for example the like some of the

934
00:52:30,338 --> 00:52:34,000
most expensive stuff we're doing here is

935
00:52:32,108 --> 00:52:35,019
for computing the normal like you can

936
00:52:34,000 --> 00:52:37,358
see how simple it is to compute

937
00:52:35,019 --> 00:52:43,150
everything else but computing the normal

938
00:52:37,358 --> 00:52:49,480
is a huge pain in the butt right and our

939
00:52:43,150 --> 00:52:55,298
compute voxel irradiance at like that's

940
00:52:49,480 --> 00:53:00,179
the thing that uses it right our compute

941
00:52:55,298 --> 00:53:04,239
voxel irradiance at is doing the lerp

942
00:53:00,179 --> 00:53:07,808
based on what we're using that value

943
00:53:04,239 --> 00:53:11,409
that that hit normal right to look up

944
00:53:07,809 --> 00:53:14,980
into the octahedral map and the

945
00:53:11,409 --> 00:53:18,670
octahedral map is a txt why we're only

946
00:53:14,980 --> 00:53:22,750
ever going to be sampling from certain

947
00:53:18,670 --> 00:53:25,889
of those tx2 eyes right because our

948
00:53:22,750 --> 00:53:28,010
normal our surface normals there's only

949
00:53:25,889 --> 00:53:32,449
six of them

950
00:53:28,010 --> 00:53:34,670
that there can be right and so another

951
00:53:32,449 --> 00:53:36,319
way to look at this would just be look

952
00:53:34,670 --> 00:53:38,420
we don't actually have to do all this

953
00:53:36,320 --> 00:53:41,180
work instead what we can do is just know

954
00:53:38,420 --> 00:53:43,430
that there's only four lookups we could

955
00:53:41,179 --> 00:53:46,309
possibly do and let's just load

956
00:53:43,429 --> 00:53:50,859
whichever of those four lookups is the

957
00:53:46,309 --> 00:53:50,860
one we need right

958
00:53:51,130 --> 00:53:56,900
so the T X and T Y values we can just

959
00:53:54,530 --> 00:53:59,269
get we can just get back directly from

960
00:53:56,900 --> 00:54:03,519
that I think and avoid doing this so I'm

961
00:53:59,269 --> 00:54:03,519
not gonna change it now but you know

962
00:54:26,769 --> 00:54:31,190
probably the short end of the stick

963
00:54:28,849 --> 00:54:34,309
because it only happens at the end but

964
00:54:31,190 --> 00:54:35,900
I'm just you know going to note all of

965
00:54:34,309 --> 00:54:38,000
the places where we can improve things

966
00:54:35,900 --> 00:54:40,610
because we don't know how hardcore we're

967
00:54:38,000 --> 00:54:40,969
gonna have to get on this thing all

968
00:54:40,610 --> 00:54:43,130
right

969
00:54:40,969 --> 00:54:44,599
so I think this should roughly do

970
00:54:43,130 --> 00:54:46,490
exactly the same thing as we were doing

971
00:54:44,599 --> 00:54:48,319
before the only difference like I said

972
00:54:46,489 --> 00:54:50,149
is that we're not actually sending

973
00:54:48,320 --> 00:54:53,030
things out the octahedral map at the

974
00:54:50,150 --> 00:54:55,250
moment so what I might suggest is look

975
00:54:53,030 --> 00:54:57,890
let's just actually generate noise

976
00:54:55,250 --> 00:55:04,369
temporarily or not even noise let's just

977
00:54:57,889 --> 00:55:07,639
generate exact outcasts out from the

978
00:55:04,369 --> 00:55:09,859
Centers let's say and use that just to

979
00:55:07,639 --> 00:55:13,069
verify that that we can get everything

980
00:55:09,860 --> 00:55:15,230
working right so in here instead of

981
00:55:13,070 --> 00:55:17,539
grabbing these out so I'm gonna go ahead

982
00:55:15,230 --> 00:55:21,880
temporarily and say we've got a 33 for X

983
00:55:17,539 --> 00:55:25,579
it's like sampled er a and it's this

984
00:55:21,880 --> 00:55:29,920
oops and then a V 3 for X that's sampled

985
00:55:25,579 --> 00:55:29,920
Derbe and it's this

986
00:55:33,699 --> 00:55:39,019
what I want to do here is just let's

987
00:55:35,989 --> 00:55:41,389
overwrite those right let's just

988
00:55:39,019 --> 00:55:43,940
overwrite those entirely so what I'd

989
00:55:41,389 --> 00:55:51,109
like to do is overwrite sample dirt a

990
00:55:43,940 --> 00:55:56,630
and sample their B with actually with

991
00:55:51,110 --> 00:55:59,329
voxels that with with with direct output

992
00:55:56,630 --> 00:56:02,269
directions from the voxel right so we

993
00:55:59,329 --> 00:56:04,069
want to do like this kind of thing where

994
00:56:02,269 --> 00:56:08,300
we just say like alright whatever the s

995
00:56:04,070 --> 00:56:10,610
y-value is we're gonna use that and then

996
00:56:08,300 --> 00:56:16,580
we're gonna get the directions here you

997
00:56:10,610 --> 00:56:24,710
know like this right and we're gonna

998
00:56:16,579 --> 00:56:26,269
stuff these in to the the v3 for X like

999
00:56:24,710 --> 00:56:28,460
so so we're gonna we're gonna basically

1000
00:56:26,269 --> 00:56:38,030
do like sample dirt a gets overwritten

1001
00:56:28,460 --> 00:56:41,000
by a direct load and sampled your B gets

1002
00:56:38,030 --> 00:56:42,470
overwritten by a direct load so now we

1003
00:56:41,000 --> 00:56:46,940
know that these things are going

1004
00:56:42,469 --> 00:56:51,769
directly out the texels in question

1005
00:56:46,940 --> 00:56:56,329
right and if we do direction from

1006
00:56:51,769 --> 00:57:00,530
consuming mmm if we do direction from

1007
00:56:56,329 --> 00:57:02,569
text Y what I'd like to do here is we

1008
00:57:00,530 --> 00:57:07,180
need to pass the X Y coefficient I think

1009
00:57:02,570 --> 00:57:12,650
we can get that directly from the Atlas

1010
00:57:07,179 --> 00:57:16,159
right so we shouldn't have to do any

1011
00:57:12,650 --> 00:57:19,430
work there there we go

1012
00:57:16,159 --> 00:57:23,170
and so now hopefully we're at least

1013
00:57:19,429 --> 00:57:31,069
sending things out the correct direction

1014
00:57:23,170 --> 00:57:33,079
I don't know so it's close it's at least

1015
00:57:31,070 --> 00:57:35,559
looking sort of right we may still have

1016
00:57:33,079 --> 00:57:38,630
some bugs in there but remember remember

1017
00:57:35,559 --> 00:57:40,699
currently there's no jitter right so

1018
00:57:38,630 --> 00:57:43,250
it's now not picking up any light that

1019
00:57:40,699 --> 00:57:43,699
it doesn't just happen to hit with that

1020
00:57:43,250 --> 00:57:47,750
one

1021
00:57:43,699 --> 00:57:49,309
rection right but of course yeah it's

1022
00:57:47,750 --> 00:57:51,489
nice and stable and everything else is

1023
00:57:49,309 --> 00:57:51,489
fine

1024
00:57:52,000 --> 00:57:55,519
what I don't know however is if we're

1025
00:57:54,170 --> 00:57:58,700
missing anything like with the right

1026
00:57:55,519 --> 00:58:00,650
back right we may be missing something

1027
00:57:58,699 --> 00:58:03,439
there it's hard to say

1028
00:58:00,650 --> 00:58:05,240
so without the jitter to get us back to

1029
00:58:03,440 --> 00:58:08,510
our previous lighting solution I don't

1030
00:58:05,239 --> 00:58:11,868
actually know if this is correct or not

1031
00:58:08,510 --> 00:58:15,950
we'll see so what I'd like to do now is

1032
00:58:11,869 --> 00:58:21,070
maybe let's pong back to the nuts of the

1033
00:58:15,949 --> 00:58:26,799
actual sphere code and what we can do is

1034
00:58:21,070 --> 00:58:30,890
we can make our spheres always go out

1035
00:58:26,800 --> 00:58:33,769
the correct voxels now right and these

1036
00:58:30,889 --> 00:58:36,529
this code here where we've got direction

1037
00:58:33,769 --> 00:58:38,838
from T X Y and get octahedral offset I

1038
00:58:36,530 --> 00:58:43,130
think that can go in the math now the

1039
00:58:38,838 --> 00:58:44,539
layer two because now that we've got

1040
00:58:43,130 --> 00:58:47,690
octahedral from unit vector and unit

1041
00:58:44,539 --> 00:58:51,380
vector from octahedral these could also

1042
00:58:47,690 --> 00:58:54,230
be the these also would work because

1043
00:58:51,380 --> 00:58:58,039
these coefficients are now just regular

1044
00:58:54,230 --> 00:58:59,599
variables right they don't require you

1045
00:58:58,039 --> 00:59:05,750
to have like an Atlas pointer or

1046
00:58:59,599 --> 00:59:07,338
anything like that so if we want to

1047
00:59:05,750 --> 00:59:09,139
update our sphere generator that would

1048
00:59:07,338 --> 00:59:11,900
allow us in theory to make this work

1049
00:59:09,139 --> 00:59:13,818
properly because now we would just make

1050
00:59:11,900 --> 00:59:17,269
sure that the sphere data that we're

1051
00:59:13,818 --> 00:59:19,639
outputting happens to have things

1052
00:59:17,269 --> 00:59:22,849
aligned with those voxels properly let's

1053
00:59:19,639 --> 00:59:28,279
go ahead and try that so if I go ahead

1054
00:59:22,849 --> 00:59:32,660
and and nerf this and go to our HH

1055
00:59:28,280 --> 00:59:34,760
sphere code what you can see here is

1056
00:59:32,659 --> 00:59:36,559
when we do our output sphere you can see

1057
00:59:34,760 --> 00:59:39,589
it outputting the sampling sphere here I

1058
00:59:36,559 --> 00:59:41,299
don't know where we got the idea that

1059
00:59:39,588 --> 00:59:43,099
there was going to be 18 I guess that's

1060
00:59:41,300 --> 00:59:48,200
just how many we were using before or

1061
00:59:43,099 --> 00:59:51,380
something because like like 18 times 4

1062
00:59:48,199 --> 00:59:54,489
is 72 and I don't know why 72 was the

1063
00:59:51,380 --> 00:59:54,490
number that we were doing

1064
00:59:55,030 --> 01:00:01,760
it's confusing but I guess that's what

1065
00:59:57,469 --> 01:00:08,539
we typed in right we typed in an 18 here

1066
01:00:01,760 --> 01:00:11,690
for some reason I don't know so when you

1067
01:00:08,539 --> 01:00:13,550
look at what output sphere INL does that

1068
01:00:11,690 --> 01:00:15,380
outputs everything that we wanted and it

1069
01:00:13,550 --> 01:00:17,990
does it exactly the way that we want we

1070
01:00:15,380 --> 01:00:20,480
don't need to change that at all so I

1071
01:00:17,989 --> 01:00:23,959
think we can keep this exactly the same

1072
01:00:20,480 --> 01:00:25,820
what we will have to do is for generate

1073
01:00:23,960 --> 01:00:28,699
lighting pattern we're gonna need to do

1074
01:00:25,820 --> 01:00:30,590
something different so in here what I

1075
01:00:28,699 --> 01:00:33,259
would say is this can be generated like

1076
01:00:30,590 --> 01:00:35,570
Hasaan lighting pattern and then we'll

1077
01:00:33,260 --> 01:00:38,750
have another generate lighting pattern

1078
01:00:35,570 --> 01:00:42,140
that's that's a different thing

1079
01:00:38,750 --> 01:00:50,090
so we'll have generate octahedral

1080
01:00:42,139 --> 01:00:52,759
lighting pattern and so we want to do

1081
01:00:50,090 --> 01:00:56,090
here is be able to output the sample

1082
01:00:52,760 --> 01:00:58,490
directions exactly as we were doing

1083
01:00:56,090 --> 01:01:00,490
before and you can see here we've got a

1084
01:00:58,489 --> 01:01:04,569
thing that like produces the bundles

1085
01:01:00,489 --> 01:01:04,569
from the directions right

1086
01:01:11,849 --> 01:01:17,278
so we probably want to make that be just

1087
01:01:14,699 --> 01:01:20,189
a utility because we're gonna want to do

1088
01:01:17,278 --> 01:01:21,509
that in both cases so in this case here

1089
01:01:20,190 --> 01:01:23,329
where we're doing Durr from directions

1090
01:01:21,509 --> 01:01:25,469
I'm assuming what we want to do is

1091
01:01:23,329 --> 01:01:26,548
generate all the directions the same way

1092
01:01:25,469 --> 01:01:28,728
we were direct generating directions

1093
01:01:26,548 --> 01:01:43,199
before and then use this piece of code

1094
01:01:28,728 --> 01:01:54,058
right so this is like something like

1095
01:01:43,199 --> 01:01:58,379
this so you pass the sphere count you

1096
01:01:54,059 --> 01:02:01,640
pass the directions and you pass the

1097
01:01:58,380 --> 01:02:04,528
sphere you're trying to write to right

1098
01:02:01,639 --> 01:02:07,889
of the sphere array and it just goes

1099
01:02:04,528 --> 01:02:11,068
through and copies the directions into

1100
01:02:07,889 --> 01:02:13,379
the series for you right and we would

1101
01:02:11,068 --> 01:02:18,719
need Ray bundles purse fear as well in

1102
01:02:13,380 --> 01:02:27,170
this case like so but otherwise that

1103
01:02:18,719 --> 01:02:27,170
would do it I think

1104
01:02:31,699 --> 01:02:34,699
yeah

1105
01:02:36,679 --> 01:02:44,458
so that seems fine and this would do the

1106
01:02:40,289 --> 01:02:46,650
same thing right Jimmy and so all we

1107
01:02:44,458 --> 01:02:48,838
need here is that the directions like

1108
01:02:46,650 --> 01:02:52,289
this stuff we would want to do the exact

1109
01:02:48,838 --> 01:02:53,880
same thing I don't know what the used

1110
01:02:52,289 --> 01:02:56,940
thing is for I probably don't care about

1111
01:02:53,880 --> 01:02:58,469
this at all at the moment but we would

1112
01:02:56,940 --> 01:03:02,969
say all right that's total directions

1113
01:02:58,469 --> 01:03:04,048
here's the directions we don't care

1114
01:03:02,969 --> 01:03:07,528
about this and we don't care about that

1115
01:03:04,048 --> 01:03:11,038
so we would just go through and for each

1116
01:03:07,528 --> 01:03:13,708
sphere we would just like we'll just use

1117
01:03:11,039 --> 01:03:20,759
noise for now right so what we'll do is

1118
01:03:13,708 --> 01:03:24,358
we'll say the I guess in this case to

1119
01:03:20,759 --> 01:03:26,489
the these two values are kind of

1120
01:03:24,358 --> 01:03:29,538
hard-coded right meaning you don't

1121
01:03:26,489 --> 01:03:34,108
actually get to choose them so really

1122
01:03:29,539 --> 01:03:38,160
what happens here hmm oh sorry not the

1123
01:03:34,108 --> 01:03:41,728
severe account the severe account is

1124
01:03:38,159 --> 01:03:45,478
it's the Ray bundles purse fear that you

1125
01:03:41,728 --> 01:03:51,088
don't get to choose right it has to

1126
01:03:45,478 --> 01:03:53,939
basically be well no you know what

1127
01:03:51,088 --> 01:03:55,650
that's not true so we can't leave it

1128
01:03:53,940 --> 01:04:01,979
like this what we would do is we'll just

1129
01:03:55,650 --> 01:04:05,009
keep wrapping around right so that seems

1130
01:04:01,978 --> 01:04:08,189
fine so then what we would say is okay

1131
01:04:05,009 --> 01:04:12,079
for each sphere right because we've got

1132
01:04:08,190 --> 01:04:15,559
to initialize all of our spheres right

1133
01:04:12,079 --> 01:04:15,559
also why

1134
01:04:18,869 --> 01:04:23,039
okay so this pulled the spheres out of

1135
01:04:21,210 --> 01:04:25,079
that alright I don't think we care about

1136
01:04:23,039 --> 01:04:30,360
a lot of the stuff but anyway so what we

1137
01:04:25,079 --> 01:04:34,199
want to do is for each sphere so you

1138
01:04:30,360 --> 01:04:40,620
know what I'm starting to get a sense

1139
01:04:34,199 --> 01:04:44,059
for how this would work in fact I think

1140
01:04:40,619 --> 01:04:44,059
I see exactly how this would work so

1141
01:04:45,409 --> 01:04:50,039
what we would want to do is we'd want to

1142
01:04:48,630 --> 01:04:52,470
do exactly the same thing as we were

1143
01:04:50,039 --> 01:04:55,230
doing in the other one meaning this

1144
01:04:52,469 --> 01:04:59,059
routine actually I think is more or less

1145
01:04:55,230 --> 01:04:59,059
correct now I think about it

1146
01:05:11,210 --> 01:05:17,280
it's just it would get a little more

1147
01:05:13,170 --> 01:05:19,260
complicated right so what we want to do

1148
01:05:17,280 --> 01:05:22,080
I think we do want to generate a blue

1149
01:05:19,260 --> 01:05:24,420
noise fear but what we want to do is we

1150
01:05:22,079 --> 01:05:28,710
want the blue noise to be evaluated only

1151
01:05:24,420 --> 01:05:33,090
inside each individual tile now the

1152
01:05:28,710 --> 01:05:34,380
ultimate thing to do and unfortunately I

1153
01:05:33,090 --> 01:05:37,400
just don't know anyway you would

1154
01:05:34,380 --> 01:05:37,400
actually do this

1155
01:05:44,119 --> 01:05:47,730
I'm not sure how you would actually

1156
01:05:46,409 --> 01:05:50,460
write the algorithm to do this I'm

1157
01:05:47,730 --> 01:05:52,260
trying to think but so what you would

1158
01:05:50,460 --> 01:05:54,420
want is you would want to be able to

1159
01:05:52,260 --> 01:05:57,420
generate a light you'd want to be able

1160
01:05:54,420 --> 01:05:59,130
to generate a sphere that was a plus on

1161
01:05:57,420 --> 01:06:00,510
distribution exactly like we were doing

1162
01:05:59,130 --> 01:06:04,460
so you could literally run the exact

1163
01:06:00,510 --> 01:06:08,250
same code generator Poisson sphere and

1164
01:06:04,460 --> 01:06:12,449
then you would just want to pull out for

1165
01:06:08,250 --> 01:06:15,389
each sphere that you write out you'd

1166
01:06:12,449 --> 01:06:19,649
pull out one point from the evenly

1167
01:06:15,389 --> 01:06:25,259
distributed Poisson sphere one point per

1168
01:06:19,650 --> 01:06:27,329
octahedral tile now the problem because

1169
01:06:25,260 --> 01:06:31,140
I could just write that and that'd be it

1170
01:06:27,329 --> 01:06:35,849
the problem is you how do you guarantee

1171
01:06:31,139 --> 01:06:37,259
that you always have you know however

1172
01:06:35,849 --> 01:06:40,009
many spheres let's say you want to

1173
01:06:37,260 --> 01:06:42,810
generate 64 spheres

1174
01:06:40,010 --> 01:06:45,570
how do you generate a plus on

1175
01:06:42,809 --> 01:06:48,210
distribution that guarantees that each

1176
01:06:45,570 --> 01:06:57,960
octahedral tile always has 64 points in

1177
01:06:48,210 --> 01:07:00,059
it I don't think you can so my

1178
01:06:57,960 --> 01:07:03,900
suggestion would be maybe what we do is

1179
01:07:00,059 --> 01:07:08,429
we generate the Poisson sphere then we

1180
01:07:03,900 --> 01:07:14,369
pull out one per tile right and we just

1181
01:07:08,429 --> 01:07:16,969
use white noise to fill in the gaps you

1182
01:07:14,369 --> 01:07:16,969
know i'm santi

1183
01:07:19,550 --> 01:07:34,340
I mean right I mean that seems like the

1184
01:07:29,630 --> 01:07:36,769
same as thing to me so yeah I think

1185
01:07:34,340 --> 01:07:39,170
that's correct so I guess what I would

1186
01:07:36,769 --> 01:07:41,599
say is we probably want to do the

1187
01:07:39,170 --> 01:07:54,710
generate plus on lighting pattern as a

1188
01:07:41,599 --> 01:07:58,099
thing you call and what that does is it

1189
01:07:54,710 --> 01:08:01,610
just returns you like the district you

1190
01:07:58,099 --> 01:08:08,329
know the distribution so the direct like

1191
01:08:01,610 --> 01:08:11,420
this thing right so you call it and you

1192
01:08:08,329 --> 01:08:20,960
know it does whatever random crap it's

1193
01:08:11,420 --> 01:08:25,819
going to do here and what does it care

1194
01:08:20,960 --> 01:08:30,770
about does it care about just total

1195
01:08:25,819 --> 01:08:32,510
Direction count probably yeah so what we

1196
01:08:30,770 --> 01:08:35,930
do here is we'd pull out this total

1197
01:08:32,510 --> 01:08:39,588
Direction count and we just say all

1198
01:08:35,930 --> 01:08:42,079
right so in each case you compute the

1199
01:08:39,588 --> 01:08:47,689
total direction count but then you know

1200
01:08:42,079 --> 01:08:50,329
you don't do any of this stuff right you

1201
01:08:47,689 --> 01:08:52,699
just call this routine which does the

1202
01:08:50,329 --> 01:08:55,818
Poisson distribution so you you pass

1203
01:08:52,699 --> 01:08:58,338
total direction count to it it just does

1204
01:08:55,819 --> 01:09:01,039
whatever it's gonna do to generate the

1205
01:08:58,338 --> 01:09:02,329
sphere and that's fine and everyone

1206
01:09:01,039 --> 01:09:03,859
loves it in this great and like

1207
01:09:02,329 --> 01:09:06,350
everyone's dancing in the streets and

1208
01:09:03,859 --> 01:09:11,450
having a party and you know getting

1209
01:09:06,350 --> 01:09:15,289
coronavirus so then we just get the

1210
01:09:11,449 --> 01:09:18,679
directions back by calling that function

1211
01:09:15,289 --> 01:09:21,170
and then in the case where we want to

1212
01:09:18,680 --> 01:09:23,030
actually just generate the simple plus

1213
01:09:21,170 --> 01:09:25,430
on lighting pattern we do the

1214
01:09:23,029 --> 01:09:27,289
interleaved directions call which I was

1215
01:09:25,430 --> 01:09:29,960
totally wrong that's not the thing we

1216
01:09:27,289 --> 01:09:32,930
probably actually want to call here but

1217
01:09:29,960 --> 01:09:33,750
you know whatever it's fine so in there

1218
01:09:32,930 --> 01:09:35,700
we would call it really

1219
01:09:33,750 --> 01:09:37,529
directions after calling whatever this

1220
01:09:35,699 --> 01:09:44,639
is generate Poisson distribution with

1221
01:09:37,529 --> 01:09:46,740
the total direction count and then for

1222
01:09:44,640 --> 01:09:48,779
our generate octahedral lighting pattern

1223
01:09:46,739 --> 01:09:51,269
what we would do is we would go through

1224
01:09:48,779 --> 01:09:58,800
right and now what we want to do is

1225
01:09:51,270 --> 01:10:01,080
split out we'd want to split out by

1226
01:09:58,800 --> 01:10:06,980
basically using this used again probably

1227
01:10:01,079 --> 01:10:08,880
right we would want to split out the I

1228
01:10:06,979 --> 01:10:11,759
guess we don't really need that we can

1229
01:10:08,880 --> 01:10:14,220
just set the things to 0 0 0 actually we

1230
01:10:11,760 --> 01:10:18,300
would we would gather essentially each

1231
01:10:14,220 --> 01:10:20,310
individual thing by grabbing one point

1232
01:10:18,300 --> 01:10:22,560
from the octahedral region we were

1233
01:10:20,310 --> 01:10:28,310
talking about so we would effectively do

1234
01:10:22,560 --> 01:10:33,840
like all right we go through each sphere

1235
01:10:28,310 --> 01:10:40,640
we still do want to do this probably do

1236
01:10:33,840 --> 01:10:40,640
we probably not probably we just do this

1237
01:10:51,380 --> 01:10:58,500
and so what we need to do is we need to

1238
01:10:53,489 --> 01:11:01,829
like write these things out purse fear

1239
01:10:58,500 --> 01:11:03,329
and so when we do this we would have to

1240
01:11:01,829 --> 01:11:04,649
go through the Ray bundles and what we'd

1241
01:11:03,329 --> 01:11:09,510
want to do is just kind of loop through

1242
01:11:04,649 --> 01:11:13,229
the octagonal sets pulling out ones that

1243
01:11:09,510 --> 01:11:16,710
we find so how we can do this well what

1244
01:11:13,229 --> 01:11:18,089
we want to do here is instead of instead

1245
01:11:16,710 --> 01:11:20,220
of just thinking this strictly as bun

1246
01:11:18,090 --> 01:11:23,250
ray bundles for sphere what we want to

1247
01:11:20,220 --> 01:11:27,570
do is think of it in terms of like txt Y

1248
01:11:23,250 --> 01:11:28,710
right and so you know these I guess are

1249
01:11:27,569 --> 01:11:31,739
going to be well they're gonna be

1250
01:11:28,710 --> 01:11:34,710
whatever they are but as we step through

1251
01:11:31,739 --> 01:11:36,630
here what we do is we'd say after each

1252
01:11:34,710 --> 01:11:39,390
time we record a direction we're gonna

1253
01:11:36,630 --> 01:11:41,789
plus plus the TX if the TX is greater

1254
01:11:39,390 --> 01:11:44,460
than and we could you need to have the

1255
01:11:41,789 --> 01:11:47,010
like the dimension in here right if the

1256
01:11:44,460 --> 01:11:48,390
TX gets up to be too high it goes back

1257
01:11:47,010 --> 01:11:53,190
to

1258
01:11:48,390 --> 01:11:55,739
and the T Y increments right and the

1259
01:11:53,189 --> 01:11:58,738
same thing happens with T Y like if the

1260
01:11:55,738 --> 01:12:01,859
t y is greater than however much the max

1261
01:11:58,738 --> 01:12:08,789
is it goes back to 1 so we just say like

1262
01:12:01,859 --> 01:12:10,679
look the the the the maps here and maybe

1263
01:12:08,789 --> 01:12:12,869
we just put in the offset separately so

1264
01:12:10,680 --> 01:12:17,820
maybe we just say it's an 8 by 8 and we

1265
01:12:12,869 --> 01:12:21,180
use 0 based here just to be a little bit

1266
01:12:17,819 --> 01:12:22,559
fancier right so we loop through we go

1267
01:12:21,180 --> 01:12:25,909
through pulling out bundles and each

1268
01:12:22,560 --> 01:12:29,969
bundle goes into subsequent slots in the

1269
01:12:25,909 --> 01:12:32,010
map dimension generating the octahedral

1270
01:12:29,969 --> 01:12:35,609
lighting pattern and so all we then need

1271
01:12:32,010 --> 01:12:38,310
to do is figure out whether or not a

1272
01:12:35,609 --> 01:12:41,849
particular thing falls into that region

1273
01:12:38,310 --> 01:12:44,960
right and so in order to do that we

1274
01:12:41,850 --> 01:12:51,239
already have the function which is like

1275
01:12:44,960 --> 01:12:53,939
the get octahedral offset right so if we

1276
01:12:51,238 --> 01:13:04,468
call get octahedral offset is that the

1277
01:12:53,939 --> 01:13:06,809
right thing yeah so if we call get

1278
01:13:04,469 --> 01:13:10,859
octahedral offset got get octahedral

1279
01:13:06,810 --> 01:13:15,180
offset tells us the like the because the

1280
01:13:10,859 --> 01:13:18,119
the XY of this thing whatever sample

1281
01:13:15,180 --> 01:13:20,630
we're gonna look at here right so you

1282
01:13:18,119 --> 01:13:20,630
have to blow my nose

1283
01:13:25,539 --> 01:13:32,769
and so each one of those that we pull

1284
01:13:28,779 --> 01:13:35,199
out we need to match against the txt Y

1285
01:13:32,770 --> 01:13:37,360
that we have so this is going to be a

1286
01:13:35,199 --> 01:13:39,189
loop over all the directions we're gonna

1287
01:13:37,359 --> 01:13:40,689
go ahead and get the octahedral offset

1288
01:13:39,189 --> 01:13:41,739
of the direction and we could cache if

1289
01:13:40,689 --> 01:13:44,500
we cared about how fast this thing run

1290
01:13:41,739 --> 01:13:45,789
which we don't we could cache it but

1291
01:13:44,500 --> 01:13:47,590
we're gonna loop over each of them we're

1292
01:13:45,789 --> 01:13:51,399
gonna get the octahedral offset and see

1293
01:13:47,590 --> 01:13:53,319
if it maps to anywhere we actually care

1294
01:13:51,399 --> 01:13:57,309
about assuming that it does we would

1295
01:13:53,319 --> 01:14:05,170
then go ahead and use this so if the o

1296
01:13:57,310 --> 01:14:08,920
XY x equals the TX and the o XY y equals

1297
01:14:05,170 --> 01:14:10,449
the T Y then what we would do is we

1298
01:14:08,920 --> 01:14:15,460
would say all right we've found to match

1299
01:14:10,449 --> 01:14:18,279
and in this case like the derp is going

1300
01:14:15,460 --> 01:14:22,180
to be this would be some random thing

1301
01:14:18,279 --> 01:14:29,409
that goes off in that direction so you

1302
01:14:22,180 --> 01:14:31,270
know something like this I might call

1303
01:14:29,409 --> 01:14:33,880
this the match X Y because this has to

1304
01:14:31,270 --> 01:14:48,610
sort of be updated so the match X Y is

1305
01:14:33,880 --> 01:14:50,319
is actually this right so the direction

1306
01:14:48,609 --> 01:14:56,710
that we actually want to pick or maybe

1307
01:14:50,319 --> 01:14:57,939
we'll just call this pick so we loop

1308
01:14:56,710 --> 01:14:59,380
through each thing and we check them

1309
01:14:57,939 --> 01:15:01,629
assuming that we found one that matched

1310
01:14:59,380 --> 01:15:04,090
we'd pick it right and what we'd also

1311
01:15:01,630 --> 01:15:07,569
want to do there I think is we would

1312
01:15:04,090 --> 01:15:14,770
want to say that you know maybe we do it

1313
01:15:07,569 --> 01:15:21,639
like this and so that way we could also

1314
01:15:14,770 --> 01:15:26,400
say look if the if the check value if

1315
01:15:21,640 --> 01:15:26,400
all of the check values is 0 right

1316
01:15:32,328 --> 01:15:36,538
then we know that that we're not going

1317
01:15:35,189 --> 01:15:39,000
to use it in fact we could do that even

1318
01:15:36,538 --> 01:15:42,090
simpler we could just say look there's a

1319
01:15:39,000 --> 01:15:43,800
magic value you know called used and

1320
01:15:42,090 --> 01:15:45,809
that's just something that can never

1321
01:15:43,800 --> 01:15:48,840
happen right you can't have a normal

1322
01:15:45,809 --> 01:15:50,579
with a with a 10x value we're just going

1323
01:15:48,840 --> 01:15:57,360
to go ahead and say that when we do that

1324
01:15:50,578 --> 01:16:00,328
right the the check X is going to get

1325
01:15:57,359 --> 01:16:03,118
set to used so we we can only use each

1326
01:16:00,328 --> 01:16:03,679
point once when we grab it out and off

1327
01:16:03,118 --> 01:16:06,269
we go

1328
01:16:03,679 --> 01:16:08,158
and here what we're gonna do is say look

1329
01:16:06,270 --> 01:16:09,869
we're gonna just feel we're gonna have a

1330
01:16:08,158 --> 01:16:11,788
fill in direction here so when we run

1331
01:16:09,868 --> 01:16:14,279
out of points in that particular

1332
01:16:11,788 --> 01:16:16,019
octahedral region we'll just fill them

1333
01:16:14,279 --> 01:16:21,059
in with direction here and I might say

1334
01:16:16,020 --> 01:16:26,460
like to do perturbed this right so get

1335
01:16:21,059 --> 01:16:29,699
give me you know give me something

1336
01:16:26,460 --> 01:16:31,319
that's a little bit off from there right

1337
01:16:29,698 --> 01:16:34,379
but for now we'll we'll actually leave

1338
01:16:31,319 --> 01:16:36,689
it so this would be what we're talking

1339
01:16:34,380 --> 01:16:38,699
about we would loop through all of the

1340
01:16:36,689 --> 01:16:41,669
directions we have so it would be like

1341
01:16:38,698 --> 01:16:42,118
the derp index less than total Direction

1342
01:16:41,670 --> 01:16:47,730
count

1343
01:16:42,118 --> 01:16:52,019
oops and then our directions plus stir

1344
01:16:47,729 --> 01:16:53,729
index would be our check vector so this

1345
01:16:52,020 --> 01:16:55,619
loops through every direction that we

1346
01:16:53,729 --> 01:16:57,419
have it looks to see whether we've used

1347
01:16:55,618 --> 01:16:59,130
it or not it gets where it would be in

1348
01:16:57,420 --> 01:17:01,440
the octahedron it looks to see whether

1349
01:16:59,130 --> 01:17:04,650
it matches the octahedron if it does we

1350
01:17:01,439 --> 01:17:06,299
use it if it doesn't we don't and if we

1351
01:17:04,649 --> 01:17:08,460
don't find anything to use meaning we

1352
01:17:06,300 --> 01:17:10,079
went through this entire thing and we

1353
01:17:08,460 --> 01:17:13,710
had a break if this is in the wrong part

1354
01:17:10,078 --> 01:17:17,460
of thing we would drop out of the dirt

1355
01:17:13,710 --> 01:17:20,969
check loop but and just use whatever the

1356
01:17:17,460 --> 01:17:26,420
pick the random pick was right does that

1357
01:17:20,969 --> 01:17:29,849
make sense yeah so we need to do this

1358
01:17:26,420 --> 01:17:31,618
for you know to produce our bundles and

1359
01:17:29,849 --> 01:17:35,219
just looking at it I think what we would

1360
01:17:31,618 --> 01:17:36,929
probably want to do here is say okay I

1361
01:17:35,219 --> 01:17:38,788
will go ahead and use the interleave

1362
01:17:36,929 --> 01:17:42,618
because I already wrote it and we'll

1363
01:17:38,788 --> 01:17:42,618
just make an output directions

1364
01:17:45,738 --> 01:17:49,678
so here where we have directions I'm

1365
01:17:48,090 --> 01:17:52,440
going to do two things I'm going to do

1366
01:17:49,679 --> 01:18:02,788
like input directions and output

1367
01:17:52,439 --> 01:18:04,049
directions and I output directions is

1368
01:18:02,788 --> 01:18:05,819
going to be allocated exactly the same

1369
01:18:04,050 --> 01:18:15,420
way so these directions here that we've

1370
01:18:05,819 --> 01:18:19,578
got we now have an input and an output

1371
01:18:15,420 --> 01:18:22,109
and so as we go through I just want to I

1372
01:18:19,578 --> 01:18:25,139
just want to write to that output

1373
01:18:22,109 --> 01:18:26,639
direction so I'm gonna call this outdoor

1374
01:18:25,139 --> 01:18:29,460
and that's just gonna start at output

1375
01:18:26,639 --> 01:18:35,550
directions as we go through this we're

1376
01:18:29,460 --> 01:18:40,920
not gonna be doing this at all so as we

1377
01:18:35,550 --> 01:18:43,110
go through each individual sphere we're

1378
01:18:40,920 --> 01:18:45,269
gonna actually go through four times the

1379
01:18:43,109 --> 01:18:47,009
rate bundles for sphere for each one of

1380
01:18:45,269 --> 01:18:49,860
these we're gonna write out an outdoor

1381
01:18:47,010 --> 01:18:52,110
right so each time through here when we

1382
01:18:49,859 --> 01:18:56,149
get to this we're gonna do like you know

1383
01:18:52,109 --> 01:18:58,589
outdoor plus plus equals pick like so

1384
01:18:56,149 --> 01:19:00,058
right then at the end we're gonna take

1385
01:18:58,590 --> 01:19:02,610
the output directions we're gonna

1386
01:19:00,059 --> 01:19:04,889
interleave those out and I think that's

1387
01:19:02,609 --> 01:19:10,529
roughly what I want now I don't think we

1388
01:19:04,889 --> 01:19:14,239
build this anymore we remand it but I'm

1389
01:19:10,529 --> 01:19:17,368
gonna go ahead and start building it and

1390
01:19:14,238 --> 01:19:20,998
we now need our atlases we need those

1391
01:19:17,368 --> 01:19:23,488
capri computed Atlas values so I'm gonna

1392
01:19:20,998 --> 01:19:25,198
go ahead and do that but in the meantime

1393
01:19:23,488 --> 01:19:28,228
let me just finish the other things we

1394
01:19:25,198 --> 01:19:33,419
can do there there we go so I'm going to

1395
01:19:28,229 --> 01:19:36,900
call this generate octahedral lighting

1396
01:19:33,420 --> 01:19:38,760
pattern here and then I think we're good

1397
01:19:36,899 --> 01:19:43,948
so let me go ahead and grab the light

1398
01:19:38,760 --> 01:19:46,760
Atlas and what we're gonna do here is

1399
01:19:43,948 --> 01:19:48,808
we're gonna call that make Atlas call

1400
01:19:46,760 --> 01:19:51,349
because that computes the values we

1401
01:19:48,809 --> 01:19:51,349
actually need

1402
01:19:57,579 --> 01:20:03,430
and our voxel dim in this case I don't

1403
01:20:01,390 --> 01:20:04,170
actually know how we call this there we

1404
01:20:03,430 --> 01:20:07,390
go

1405
01:20:04,170 --> 01:20:10,619
we don't care what that is but our tile

1406
01:20:07,390 --> 01:20:10,619
dim we do

1407
01:20:11,340 --> 01:20:15,900
so the tyldum has to be 10 10 I believe

1408
01:20:23,100 --> 01:20:30,090
yep so we just pass in the 10 10 tiled

1409
01:20:26,649 --> 01:20:38,579
in there and then we can do in the dupes

1410
01:20:30,090 --> 01:20:45,340
direction from CX CY the XY coefficient

1411
01:20:38,579 --> 01:20:53,769
and in here we can do the ops dim

1412
01:20:45,340 --> 01:20:59,610
coefficient oh no wow I'd seen that in a

1413
01:20:53,770 --> 01:20:59,610
while don't know what we did wrong there

1414
01:21:01,090 --> 01:21:04,789
to be fair this is like an interim I

1415
01:21:03,380 --> 01:21:08,179
really have to switch to the new for

1416
01:21:04,789 --> 01:21:28,359
coder it's been a long time

1417
01:21:08,179 --> 01:21:28,359
just having gotten around to it alright

1418
01:21:30,369 --> 01:21:36,409
so I think we now have our generator I

1419
01:21:33,469 --> 01:21:40,069
think that's roughly what I want again

1420
01:21:36,409 --> 01:21:46,639
not 100% sure but let's give it a shot

1421
01:21:40,069 --> 01:21:52,488
if I call build h8 sphere we should be

1422
01:21:46,640 --> 01:21:56,480
able to just try it so let's say we want

1423
01:21:52,488 --> 01:22:05,448
you know 16 spheres we want 16 ray

1424
01:21:56,479 --> 01:22:08,869
bundles is that true no so we know we're

1425
01:22:05,448 --> 01:22:11,178
going to do 2 ray bundles per row and

1426
01:22:08,869 --> 01:22:14,779
there's 8 rows yeah no it is 6 exactly

1427
01:22:11,179 --> 01:22:19,090
16 ray bundles right yeah so it's 16 ray

1428
01:22:14,779 --> 01:22:25,399
bundles and then like I don't know

1429
01:22:19,090 --> 01:22:28,250
feared tests I know yeah so this goes

1430
01:22:25,399 --> 01:22:36,170
ahead and tries to get down to the

1431
01:22:28,250 --> 01:22:38,539
minimum error there and presumably this

1432
01:22:36,170 --> 01:22:40,730
will actually output a sphere test we

1433
01:22:38,539 --> 01:22:45,219
can actually use now we probably we're

1434
01:22:40,729 --> 01:22:45,218
gonna have to actually print like the

1435
01:22:46,090 --> 01:22:51,860
we're gonna have to to print like draw

1436
01:22:49,640 --> 01:22:53,719
the sphere or something just so we can

1437
01:22:51,859 --> 01:22:54,679
make sure I mean hey it works but we

1438
01:22:53,719 --> 01:22:55,279
don't actually know if it's doing the

1439
01:22:54,679 --> 01:22:58,609
right thing

1440
01:22:55,279 --> 01:23:01,899
so we're gonna have to go ahead and copy

1441
01:22:58,609 --> 01:23:01,899
that in if I look

1442
01:23:07,408 --> 01:23:17,229
so I should be able to do a copy right

1443
01:23:14,859 --> 01:23:21,609
on to that handmade code handmade

1444
01:23:17,229 --> 01:23:22,988
sampling spheres and now we should

1445
01:23:21,609 --> 01:23:26,799
actually be able to build handmade Hira

1446
01:23:22,988 --> 01:23:28,750
with those new sampling spheres and we

1447
01:23:26,800 --> 01:23:31,329
just need a way to like now inspect them

1448
01:23:28,750 --> 01:23:34,109
which we sort of have but not to inspect

1449
01:23:31,329 --> 01:23:37,210
them quite the way that we want right

1450
01:23:34,109 --> 01:23:38,619
now if I go into the lighting code we'll

1451
01:23:37,210 --> 01:23:44,789
have to turn on some inspection I can

1452
01:23:38,619 --> 01:23:51,760
also try using the spheres which happens

1453
01:23:44,789 --> 01:23:57,640
in here oh wait that is using the

1454
01:23:51,760 --> 01:23:58,989
spheres so something must be wrong with

1455
01:23:57,640 --> 01:24:01,090
the way we're out putting those spheres

1456
01:23:58,988 --> 01:24:04,629
because that means the spheres are 100%

1457
01:24:01,090 --> 01:24:08,770
stable like it's not changing the

1458
01:24:04,630 --> 01:24:10,779
spheres at all right so I must have had

1459
01:24:08,770 --> 01:24:17,350
a bug in there like I'm not maybe I'm

1460
01:24:10,779 --> 01:24:19,899
not like I must be picking the same

1461
01:24:17,350 --> 01:24:21,929
things for every sphere does that make

1462
01:24:19,899 --> 01:24:21,929
sense

1463
01:24:22,859 --> 01:24:29,639
hmm that's all

1464
01:24:30,719 --> 01:24:48,520
all right um let's go ahead and real

1465
01:24:34,630 --> 01:24:51,578
quick rerun this so build HH sphere 1616

1466
01:24:48,520 --> 01:24:54,820
and we want to do handmade sampling

1467
01:24:51,578 --> 01:24:56,710
spheres so I'm gonna go ahead and rerun

1468
01:24:54,819 --> 01:25:01,988
this that was a mistake

1469
01:24:56,710 --> 01:25:04,868
obviously we we were previously just

1470
01:25:01,988 --> 01:25:06,789
literally just using this so now it

1471
01:25:04,868 --> 01:25:11,229
should hopefully actually pick some

1472
01:25:06,789 --> 01:25:13,719
spheres some of the samples and we

1473
01:25:11,229 --> 01:25:15,098
should get noise now and then what we

1474
01:25:13,719 --> 01:25:18,149
need to do is inspect these spheres by

1475
01:25:15,099 --> 01:25:18,150
drawing them to see if they're correct

1476
01:25:27,639 --> 01:25:38,050
all right so if we now recompile this

1477
01:25:32,889 --> 01:25:44,559
like so what I hope to see I don't know

1478
01:25:38,050 --> 01:25:44,559
is we should now see noise reappear

1479
01:25:44,800 --> 01:25:48,070
although I'm not

1480
01:25:49,599 --> 01:25:55,729
if check not to use our see if accident

1481
01:25:52,639 --> 01:26:00,050
check x equals used pic equals check and

1482
01:25:55,729 --> 01:26:01,309
I mean that should work right we're

1483
01:26:00,050 --> 01:26:07,748
looking through all of the directions

1484
01:26:01,309 --> 01:26:10,130
that we have which I think should work

1485
01:26:07,748 --> 01:26:16,309
we're looking at any one that hasn't

1486
01:26:10,130 --> 01:26:18,650
been used yet we're looking to see if it

1487
01:26:16,309 --> 01:26:25,719
equals the thing the place we're trying

1488
01:26:18,649 --> 01:26:25,719
to find and if it is we should write it

1489
01:26:29,380 --> 01:26:36,670
yeah seems right anyway

1490
01:26:49,359 --> 01:26:54,289
all right so that's much better because

1491
01:26:52,698 --> 01:26:55,579
now we're getting like a complete

1492
01:26:54,289 --> 01:26:58,099
disaster there which is what I would

1493
01:26:55,579 --> 01:27:00,079
have expected so or not what I would

1494
01:26:58,099 --> 01:27:02,510
have expected but at least it means okay

1495
01:27:00,079 --> 01:27:04,609
we're getting closer to what we actually

1496
01:27:02,510 --> 01:27:06,260
wanted here all right so let's take a

1497
01:27:04,609 --> 01:27:07,698
look at those fears so what I want to do

1498
01:27:06,260 --> 01:27:09,230
now is rien a below the thing where we

1499
01:27:07,698 --> 01:27:12,678
drew the spheres which I believe we

1500
01:27:09,229 --> 01:27:15,468
still have and the only question is we

1501
01:27:12,679 --> 01:27:17,569
yeah I guess we I guess we even did have

1502
01:27:15,469 --> 01:27:21,020
a way to look at the different pieces of

1503
01:27:17,569 --> 01:27:23,029
them as well lo so let me go ahead and

1504
01:27:21,020 --> 01:27:25,909
try and resurrect that code hopefully we

1505
01:27:23,029 --> 01:27:29,630
didn't delete it entirely but we may

1506
01:27:25,908 --> 01:27:32,238
have in which case bad on us because we

1507
01:27:29,630 --> 01:27:41,449
would like to draw it so let's take a

1508
01:27:32,238 --> 01:27:43,879
look see if we've still got it here that

1509
01:27:41,448 --> 01:27:50,210
draws our debug lines not really gonna

1510
01:27:43,880 --> 01:27:55,000
help us yeah unfortunately it looks like

1511
01:27:50,210 --> 01:27:55,000
we got rid of that's maybe

1512
01:27:59,569 --> 01:28:06,939
not sure why but I'm not seeing it

1513
01:28:07,210 --> 01:28:17,029
tests fear yeah I said when I just kind

1514
01:28:14,719 --> 01:28:18,980
of saved that you know lying around but

1515
01:28:17,029 --> 01:28:21,469
doesn't look like I did looks like we

1516
01:28:18,979 --> 01:28:23,259
got rid of it well that's alright so if

1517
01:28:21,469 --> 01:28:26,149
we want to draw it's pretty easy to do

1518
01:28:23,260 --> 01:28:28,579
inside and lightning computation I guess

1519
01:28:26,149 --> 01:28:30,198
would be the best way to do it where we

1520
01:28:28,578 --> 01:28:34,460
can just go ahead and push debug boxes

1521
01:28:30,198 --> 01:28:36,919
at the very end that seems like the best

1522
01:28:34,460 --> 01:28:40,130
thing to do so in here what I can do is

1523
01:28:36,920 --> 01:28:41,658
I can go through each sphere do we have

1524
01:28:40,130 --> 01:28:43,010
a way to push points I don't know if we

1525
01:28:41,658 --> 01:28:44,569
actually have a way to push points on

1526
01:28:43,010 --> 01:28:50,619
there although I could actually just

1527
01:28:44,569 --> 01:28:50,618
push them directly so maybe I'll do this

1528
01:28:50,679 --> 01:28:59,000
hmmm so if I just push one of these on

1529
01:28:54,500 --> 01:29:05,179
here this should be fairly

1530
01:28:59,000 --> 01:29:10,670
straightforward actually so I'll get

1531
01:29:05,179 --> 01:29:14,090
debug color for the sphere index and

1532
01:29:10,670 --> 01:29:15,739
actually guess that's all we need so if

1533
01:29:14,090 --> 01:29:18,500
I was to push cubes on here what I

1534
01:29:15,738 --> 01:29:20,799
should be able to do is push on cubes

1535
01:29:18,500 --> 01:29:23,328
for each one so for each sphere index

1536
01:29:20,800 --> 01:29:25,909
and we'll go through like however many

1537
01:29:23,328 --> 01:29:28,670
spheres there are so if we go to that

1538
01:29:25,908 --> 01:29:34,960
and made lighting spheres we know that

1539
01:29:28,670 --> 01:29:38,989
they'll be a your account here like so

1540
01:29:34,960 --> 01:29:42,698
and when we go through rate bundles this

1541
01:29:38,988 --> 01:29:42,698
should be can I revert this buffer

1542
01:29:47,000 --> 01:29:56,579
let me load that again so when we go

1543
01:29:54,390 --> 01:30:05,840
through here and we do the Ray bundles

1544
01:29:56,579 --> 01:30:10,649
first fear here's the bundle index and

1545
01:30:05,840 --> 01:30:17,850
for each bundle I'm gonna go for each

1546
01:30:10,649 --> 01:30:20,159
ray so that would draw all of our

1547
01:30:17,850 --> 01:30:22,020
learning spheres and all we need to do

1548
01:30:20,159 --> 01:30:23,670
now is extract the P and the radius the

1549
01:30:22,020 --> 01:30:27,090
radius is just a known quantity it's how

1550
01:30:23,670 --> 01:30:28,289
big we want the points to be when we're

1551
01:30:27,090 --> 01:30:30,329
drawing them so that's not a

1552
01:30:28,289 --> 01:30:32,909
particularly big deal so all we really

1553
01:30:30,329 --> 01:30:34,409
need to do is extract that P so what we

1554
01:30:32,909 --> 01:30:37,979
want to do here is say like alright

1555
01:30:34,409 --> 01:30:41,430
whatever the sampling spheres are for a

1556
01:30:37,979 --> 01:30:45,750
particular sphere index I then need to

1557
01:30:41,430 --> 01:30:49,789
get the sampling Direction for whatever

1558
01:30:45,750 --> 01:30:54,270
bundle I'm on right

1559
01:30:49,789 --> 01:30:58,019
oops sorry sample Direction for

1560
01:30:54,270 --> 01:31:02,910
whichever bundle I'm on and then I just

1561
01:30:58,020 --> 01:31:04,830
used the Ray index as the component if I

1562
01:31:02,909 --> 01:31:07,948
use that I should be able to draw all of

1563
01:31:04,829 --> 01:31:09,420
the spheres and I just need that white

1564
01:31:07,948 --> 01:31:10,738
texture cuz we're not gonna we don't

1565
01:31:09,420 --> 01:31:15,270
actually want it putting a texture on

1566
01:31:10,738 --> 01:31:19,639
that we just want to be solid where's

1567
01:31:15,270 --> 01:31:27,469
the if oops

1568
01:31:19,640 --> 01:31:27,469
thank you compiler alright

1569
01:31:28,479 --> 01:31:31,959
and so now what we need is we need to

1570
01:31:30,340 --> 01:31:33,640
place that somewhere and size that you

1571
01:31:31,960 --> 01:31:37,689
can see it's there right I mean that's

1572
01:31:33,640 --> 01:31:39,490
that's the actual thing so what we now

1573
01:31:37,689 --> 01:31:40,809
need to do is place that somewhere and

1574
01:31:39,489 --> 01:31:43,479
make it a little larger just so we can

1575
01:31:40,810 --> 01:31:45,300
see it easily so I think this those

1576
01:31:43,479 --> 01:31:47,529
radii are that's a little bit too much

1577
01:31:45,300 --> 01:31:49,210
so we'll go ahead and drop that down a

1578
01:31:47,529 --> 01:31:52,389
little bit and then what I want to do is

1579
01:31:49,210 --> 01:31:55,659
just take the Z and I'm just gonna lift

1580
01:31:52,390 --> 01:32:08,770
it up a few meters so it's in a place

1581
01:31:55,659 --> 01:32:11,349
that's easier to see right all right so

1582
01:32:08,770 --> 01:32:12,550
there's our sampling spheres I don't

1583
01:32:11,350 --> 01:32:27,550
know that I'm drawing it correctly yet

1584
01:32:12,550 --> 01:32:30,730
but whoa what the heck wow that's total

1585
01:32:27,550 --> 01:32:33,070
nonsense alright so now that we've got

1586
01:32:30,729 --> 01:32:34,869
that I should be able to go debug our HH

1587
01:32:33,069 --> 01:32:36,069
sphere because we should be able to

1588
01:32:34,869 --> 01:32:42,510
figure out what we're doing wrong and

1589
01:32:36,069 --> 01:32:42,509
you know make the stuff work properly oh

1590
01:32:44,909 --> 01:32:51,599
that's good we slammed that 10 in there

1591
01:32:49,340 --> 01:32:53,590
[Laughter]

1592
01:32:51,600 --> 01:32:56,970
do you think that might have something

1593
01:32:53,590 --> 01:33:00,010
to do with it yeah before we actually

1594
01:32:56,970 --> 01:33:02,710
before we overwrite the X component with

1595
01:33:00,010 --> 01:33:04,780
10 we may want to copy the value out

1596
01:33:02,710 --> 01:33:07,810
that was a bit of a mistake all right

1597
01:33:04,779 --> 01:33:08,889
so hopefully now we can we can take a

1598
01:33:07,810 --> 01:33:11,680
look at these spheres see if they make

1599
01:33:08,890 --> 01:33:15,310
any sense I don't know if they will or

1600
01:33:11,680 --> 01:33:19,450
not but we'll see and then we can we can

1601
01:33:15,310 --> 01:33:22,000
try and go from there so let's go ahead

1602
01:33:19,449 --> 01:33:23,979
and generate our sphere let's recompile

1603
01:33:22,000 --> 01:33:27,189
the game so that now it's using that

1604
01:33:23,979 --> 01:33:29,349
sphere data set that we just generated

1605
01:33:27,189 --> 01:33:32,049
hopefully without the weird bug in it

1606
01:33:29,350 --> 01:33:36,670
and now I'll run the game and now we can

1607
01:33:32,050 --> 01:33:39,279
inspect like our sphere so it at least

1608
01:33:36,670 --> 01:33:40,779
looks like a sphere so you know I think

1609
01:33:39,279 --> 01:33:43,899
that's a plus

1610
01:33:40,779 --> 01:33:46,119
the only question I have now is we kind

1611
01:33:43,899 --> 01:33:48,489
of need to now have some way of seeing

1612
01:33:46,119 --> 01:33:51,159
whether or not these things are

1613
01:33:48,489 --> 01:33:54,689
correctly like lined up right because we

1614
01:33:51,159 --> 01:33:58,359
don't actually know right now if they're

1615
01:33:54,689 --> 01:34:00,609
if they're actually in the octahedrons

1616
01:33:58,359 --> 01:34:02,679
that we think they should be so what I

1617
01:34:00,609 --> 01:34:04,389
want to do you can see you know from the

1618
01:34:02,680 --> 01:34:06,760
cars that the cars look reasonably

1619
01:34:04,390 --> 01:34:08,680
distributed but you know that's telling

1620
01:34:06,760 --> 01:34:12,909
us for each sphere so what I want to do

1621
01:34:08,680 --> 01:34:16,390
now is say look let's actually look at

1622
01:34:12,909 --> 01:34:17,979
the bundle index ray index and let's see

1623
01:34:16,390 --> 01:34:19,660
if we can make the debug color line up

1624
01:34:17,979 --> 01:34:21,039
with that instead so what I'm going to

1625
01:34:19,659 --> 01:34:22,960
do is I'm going to say look for the

1626
01:34:21,039 --> 01:34:25,420
debug color I want to get the bundle

1627
01:34:22,960 --> 01:34:27,720
index plus the Ray index so like four

1628
01:34:25,420 --> 01:34:32,140
times bundle index plus Ray index right

1629
01:34:27,720 --> 01:34:34,750
and now I should see colors clustering

1630
01:34:32,140 --> 01:34:37,900
around the sphere right so if we look at

1631
01:34:34,750 --> 01:34:40,689
where each cluster is each color should

1632
01:34:37,899 --> 01:34:43,479
sort of be a region of the sphere and

1633
01:34:40,689 --> 01:34:46,839
that does look like what's happening

1634
01:34:43,479 --> 01:34:49,329
right so that does look pretty good like

1635
01:34:46,840 --> 01:34:50,380
I think that's probably you know you

1636
01:34:49,329 --> 01:34:53,979
could make a good argument that that's

1637
01:34:50,380 --> 01:34:56,560
correct so I think we're in good shape

1638
01:34:53,979 --> 01:34:59,079
now right now it looks like we still got

1639
01:34:56,560 --> 01:35:02,050
some bugs here so I think our ray cast

1640
01:34:59,079 --> 01:35:03,100
routine is still a little bit buggy but

1641
01:35:02,050 --> 01:35:08,470
I'm gonna go ahead and go and turn off

1642
01:35:03,100 --> 01:35:09,850
the sphere render temporarily and I'm

1643
01:35:08,470 --> 01:35:11,800
gonna go look at the ray caster scene

1644
01:35:09,850 --> 01:35:13,360
and see if I can clean that up a little

1645
01:35:11,800 --> 01:35:19,510
bit now although maybe we should save

1646
01:35:13,359 --> 01:35:20,979
that for tomorrow alright so here is us

1647
01:35:19,510 --> 01:35:24,280
hopping around and you can see the

1648
01:35:20,979 --> 01:35:26,379
lighting sort of works but it looks like

1649
01:35:24,279 --> 01:35:28,719
there's still some bugs right it's it

1650
01:35:26,380 --> 01:35:31,329
looks like maybe there's some bugs in

1651
01:35:28,720 --> 01:35:33,930
the way that it's working at the moment

1652
01:35:31,329 --> 01:35:33,930
right

1653
01:35:37,270 --> 01:35:42,730
in other news if we take a look at the

1654
01:35:39,159 --> 01:35:44,619
profile we can see we're hovering around

1655
01:35:42,729 --> 01:35:48,159
our 30 frames a second pretty easily

1656
01:35:44,619 --> 01:35:50,409
there right not able to get down into

1657
01:35:48,159 --> 01:35:54,449
the 60 frames a second but we're you

1658
01:35:50,409 --> 01:35:54,449
know we're in much better shape so

1659
01:36:01,309 --> 01:36:06,809
all right so now we got to figure out

1660
01:36:03,538 --> 01:36:09,238
what exactly is going on there why are

1661
01:36:06,809 --> 01:36:10,860
we getting that weird behavior so here's

1662
01:36:09,238 --> 01:36:12,448
our sphere indices bundle as we drew

1663
01:36:10,859 --> 01:36:13,679
those those look to correct so we know

1664
01:36:12,448 --> 01:36:15,238
we should be able to loop over these

1665
01:36:13,679 --> 01:36:17,279
things pretty much the way that they're

1666
01:36:15,238 --> 01:36:19,379
being looped over now we just take a

1667
01:36:17,279 --> 01:36:20,670
quick look and then we'll save any heavy

1668
01:36:19,380 --> 01:36:22,319
debugging for tomorrow so I won't dive

1669
01:36:20,670 --> 01:36:34,800
too far into it but I just want to take

1670
01:36:22,319 --> 01:36:36,149
a look so yeah after we're doing our ray

1671
01:36:34,800 --> 01:36:38,909
cast here you can see us doing our

1672
01:36:36,149 --> 01:36:40,229
transfer PPS let's see where do we pull

1673
01:36:38,908 --> 01:36:55,908
out the sampling sphere so let's make

1674
01:36:40,229 --> 01:37:03,288
sure where do we get that sphere so this

1675
01:36:55,908 --> 01:37:08,629
seems right we're masking out there

1676
01:37:03,288 --> 01:37:11,460
we're taking sample directions here I

1677
01:37:08,630 --> 01:37:19,920
guess are we making sure we're filled as

1678
01:37:11,460 --> 01:37:27,809
much as we think we should be so I might

1679
01:37:19,920 --> 01:37:32,010
say a double check that the the light

1680
01:37:27,809 --> 01:37:36,949
sampling rate bundles Purse fear assert

1681
01:37:32,010 --> 01:37:36,949
that this never goes above that right

1682
01:37:43,880 --> 01:37:48,690
because we don't ever want that - yeah

1683
01:37:47,340 --> 01:37:50,219
we don't want that to overwrite that

1684
01:37:48,689 --> 01:37:53,158
buffer right so we want to make sure

1685
01:37:50,219 --> 01:38:02,670
that that's in bounds and similarly we

1686
01:37:53,158 --> 01:38:04,289
should have started this one as well and

1687
01:38:02,670 --> 01:38:06,210
that just means you know let's make sure

1688
01:38:04,289 --> 01:38:08,250
we're not sampling off of the array or

1689
01:38:06,210 --> 01:38:10,170
something like that it's just just basic

1690
01:38:08,250 --> 01:38:13,380
bounds checking and get in place there

1691
01:38:10,170 --> 01:38:15,149
okay so assuming we have the basic

1692
01:38:13,380 --> 01:38:18,000
bounds checking in place now let's just

1693
01:38:15,149 --> 01:38:20,448
make sure okay our spec texels we're

1694
01:38:18,000 --> 01:38:23,850
going in X which is what we would expect

1695
01:38:20,448 --> 01:38:30,529
we're looping over the tiled my and that

1696
01:38:23,850 --> 01:38:36,750
seems right so that this here was wrong

1697
01:38:30,529 --> 01:38:38,130
incidentally because that +1 oh no it

1698
01:38:36,750 --> 01:38:43,948
wasn't it was that was right that's fine

1699
01:38:38,130 --> 01:38:51,000
um so yeah I don't see anything

1700
01:38:43,948 --> 01:38:53,908
obviously busted there so I think that's

1701
01:38:51,000 --> 01:38:56,189
fine I do think my transfer PPS code may

1702
01:38:53,908 --> 01:38:57,929
be wrong and we should look at that real

1703
01:38:56,189 --> 01:38:59,849
quick because that was another big

1704
01:38:57,929 --> 01:39:03,929
change we made so looking at the raycast

1705
01:38:59,850 --> 01:39:06,929
here well that's probably fine right

1706
01:39:03,929 --> 01:39:08,989
this looks like sample ders would

1707
01:39:06,929 --> 01:39:11,609
probably come out of the right place

1708
01:39:08,988 --> 01:39:16,169
they're the ones for this particular row

1709
01:39:11,609 --> 01:39:17,849
and spec texels probably right there so

1710
01:39:16,170 --> 01:39:20,420
let's take a look at the raycast part of

1711
01:39:17,850 --> 01:39:20,420
things here

1712
01:39:21,750 --> 01:39:26,670
so really it's this part here that we're

1713
01:39:24,779 --> 01:39:29,550
looking at so if you look at what

1714
01:39:26,670 --> 01:39:34,920
happens for our transfer PPS we're

1715
01:39:29,550 --> 01:39:36,390
producing RGB RGB RGB RGB and I think

1716
01:39:34,920 --> 01:39:39,960
this should work properly like we're

1717
01:39:36,390 --> 01:39:49,409
loading the spec texels that's RGB RGB

1718
01:39:39,960 --> 01:39:54,418
RGB so that's loading 3 oh that's

1719
01:39:49,408 --> 01:40:01,259
just wrong no it's not no it's not

1720
01:39:54,418 --> 01:40:05,569
that's really RGB r g b r g b RGB right

1721
01:40:01,260 --> 01:40:11,269
and so is this so those should both load

1722
01:40:05,569 --> 01:40:15,408
for wide times three or three times four

1723
01:40:11,269 --> 01:40:19,469
worth of ops we load in the blends

1724
01:40:15,408 --> 01:40:29,158
values and we blend them together oh and

1725
01:40:19,469 --> 01:40:31,439
we never change those variables um so

1726
01:40:29,158 --> 01:40:34,768
yeah I mean that could have been our

1727
01:40:31,439 --> 01:40:41,909
only bug but it's doubtful all right but

1728
01:40:34,769 --> 01:40:42,239
that looks much more like it right all

1729
01:40:41,908 --> 01:40:44,308
right

1730
01:40:42,238 --> 01:40:47,279
um so that's a good place to end it for

1731
01:40:44,309 --> 01:40:48,840
today again we're not really done at all

1732
01:40:47,279 --> 01:40:50,819
with what we want to do to this routine

1733
01:40:48,840 --> 01:40:52,319
but at least now we're at least now

1734
01:40:50,819 --> 01:40:54,299
we're operating in order and we're not

1735
01:40:52,319 --> 01:40:56,368
like calling a bunch of random crap we

1736
01:40:54,300 --> 01:40:58,469
don't need to because since we compute

1737
01:40:56,368 --> 01:41:00,208
the sampling spheres there's no reason

1738
01:40:58,469 --> 01:41:02,340
for us not to know exactly where to

1739
01:41:00,208 --> 01:41:04,198
write for each sampling sphere and this

1740
01:41:02,340 --> 01:41:05,998
way we also know we update the map

1741
01:41:04,198 --> 01:41:09,828
relatively uniformly which also I think

1742
01:41:05,998 --> 01:41:14,819
is a good idea so every Texel gets a

1743
01:41:09,828 --> 01:41:19,158
refresh value once per frame which I

1744
01:41:14,819 --> 01:41:22,469
like right so I think that's good I

1745
01:41:19,158 --> 01:41:25,009
think that's good let's go go ahead and

1746
01:41:22,469 --> 01:41:25,010
go to brief Q&amp;A

1747
01:42:05,069 --> 01:42:13,989
when programming returned um I don't

1748
01:42:10,060 --> 01:42:16,210
know like at some point I may do a real

1749
01:42:13,989 --> 01:42:19,420
one I just need to rehearse one first at

1750
01:42:16,210 --> 01:42:21,689
some point and so I can it's hard to do

1751
01:42:19,420 --> 01:42:25,630
it and not make mistakes in the code and

1752
01:42:21,689 --> 01:42:27,549
remember to say weird stuff so at some

1753
01:42:25,630 --> 01:42:29,760
point I'll try to record one and put it

1754
01:42:27,550 --> 01:42:29,760
up

1755
01:42:41,908 --> 01:42:52,978
uh so you don't have to use static so

1756
01:42:48,779 --> 01:42:56,099
here's what happens when you don't mark

1757
01:42:52,979 --> 01:42:57,030
a function as static because that's what

1758
01:42:56,099 --> 01:42:59,819
we're talking about because I don't

1759
01:42:57,029 --> 01:43:01,018
really use static much otherwise cuz the

1760
01:42:59,819 --> 01:43:04,768
only other time you would use it is for

1761
01:43:01,019 --> 01:43:12,780
like a global variable maybe I don't use

1762
01:43:04,769 --> 01:43:17,219
static for pretty much ever inside like

1763
01:43:12,779 --> 01:43:18,599
inside actual to have local persistent

1764
01:43:17,219 --> 01:43:20,368
variables I don't ever use it for that

1765
01:43:18,599 --> 01:43:21,748
cuz it doesn't really work very well

1766
01:43:20,368 --> 01:43:26,998
with multi-threading usually so it's

1767
01:43:21,748 --> 01:43:28,498
just I'm out of the habit right but the

1768
01:43:26,998 --> 01:43:30,448
reason that I use static is because

1769
01:43:28,498 --> 01:43:33,238
anytime you don't use static the

1770
01:43:30,448 --> 01:43:37,948
function is by default external so it

1771
01:43:33,238 --> 01:43:41,399
goes into the linker at that point and

1772
01:43:37,948 --> 01:43:42,988
the linker is notoriously like the

1773
01:43:41,399 --> 01:43:46,529
slowest part of the compilation process

1774
01:43:42,988 --> 01:43:49,288
typically especially if you're not doing

1775
01:43:46,529 --> 01:43:53,009
random crap like weird templates and

1776
01:43:49,288 --> 01:43:59,788
huge amounts of header files so the

1777
01:43:53,010 --> 01:44:01,380
problem is like I just don't ever want

1778
01:43:59,788 --> 01:44:05,609
to put more stuff in the linker than I

1779
01:44:01,380 --> 01:44:08,340
have to so it's only for optimizing

1780
01:44:05,609 --> 01:44:10,348
build times you don't need to do it to

1781
01:44:08,340 --> 01:44:14,668
make your code work because it doesn't

1782
01:44:10,349 --> 01:44:16,319
matter right so that's what I would say

1783
01:44:14,668 --> 01:44:19,590
I would heavily encourage you to use it

1784
01:44:16,319 --> 01:44:21,719
because it does help build times but I

1785
01:44:19,590 --> 01:44:23,610
would say if you don't use it

1786
01:44:21,719 --> 01:44:26,840
there's nothing oh the only thing that's

1787
01:44:23,609 --> 01:44:28,799
the problem is the linker can get slower

1788
01:44:26,840 --> 01:44:31,429
largely because linkers seem to be

1789
01:44:28,800 --> 01:44:31,429
written very poorly

1790
01:44:41,630 --> 01:44:48,000
he's a 3d shear transformation useful in

1791
01:44:45,810 --> 01:44:56,910
graphics programming for games how do

1792
01:44:48,000 --> 01:44:58,710
you construct a 4x4 shear matrix so the

1793
01:44:56,909 --> 01:45:04,500
second part of your question is easy the

1794
01:44:58,710 --> 01:45:07,319
first part of your question is hard let

1795
01:45:04,500 --> 01:45:12,779
me try to take the hard part first is it

1796
01:45:07,319 --> 01:45:16,769
useful um I mean it's hard to say it can

1797
01:45:12,779 --> 01:45:25,289
be uh it can sometimes help your artists

1798
01:45:16,770 --> 01:45:27,540
get squash and stretch you know it's

1799
01:45:25,289 --> 01:45:29,640
just the problem with it is it causes a

1800
01:45:27,539 --> 01:45:30,989
lot of headaches you can no longer treat

1801
01:45:29,640 --> 01:45:33,570
things as just a position in a

1802
01:45:30,989 --> 01:45:35,760
quaternion right so it's no longer v3

1803
01:45:33,569 --> 01:45:44,489
before you now have to actually have a

1804
01:45:35,760 --> 01:45:49,380
scale shear addenda to that and so you

1805
01:45:44,489 --> 01:45:53,099
know it's it's hard to say whether it's

1806
01:45:49,380 --> 01:45:54,930
useful it may or may not be useful as

1807
01:45:53,100 --> 01:45:56,520
but probably the best answer I can give

1808
01:45:54,930 --> 01:45:59,700
it really depends on what you're doing

1809
01:45:56,520 --> 01:46:02,600
and what your animation system has for

1810
01:45:59,699 --> 01:46:05,069
support for like mesh morphing and

1811
01:46:02,600 --> 01:46:06,750
whether or not you can attack those kind

1812
01:46:05,069 --> 01:46:09,960
of squash and stretch animation problems

1813
01:46:06,750 --> 01:46:12,199
in a different way right so I really

1814
01:46:09,960 --> 01:46:14,130
just couldn't tell you it can be useful

1815
01:46:12,199 --> 01:46:16,470
but it really depends on what you're

1816
01:46:14,130 --> 01:46:19,380
doing it may just be over complicating

1817
01:46:16,470 --> 01:46:23,190
things and you don't need it so I'm like

1818
01:46:19,380 --> 01:46:24,840
that's just a really hard question the

1819
01:46:23,189 --> 01:46:26,699
easy part of your question which is how

1820
01:46:24,840 --> 01:46:28,890
to construct it is well you all you have

1821
01:46:26,699 --> 01:46:31,170
to do is just make the when you make the

1822
01:46:28,890 --> 01:46:33,660
matrix don't try to make the basis

1823
01:46:31,170 --> 01:46:39,710
vectors be orthogonal that's it so if

1824
01:46:33,659 --> 01:46:39,710
you imagine we just draw up for you here

1825
01:46:59,389 --> 01:47:02,368
so the important thing to remember and

1826
01:47:01,590 --> 01:47:04,679
we've talked about this a lot on

1827
01:47:02,368 --> 01:47:06,719
handmade hero so go back and look at

1828
01:47:04,679 --> 01:47:09,989
matrix stuff if you don't understand

1829
01:47:06,719 --> 01:47:11,849
what I'm saying here but again if you

1830
01:47:09,988 --> 01:47:13,289
just always remember the fundamental

1831
01:47:11,849 --> 01:47:15,960
construction for an object placement

1832
01:47:13,289 --> 01:47:17,760
matrix it should be obvious how you

1833
01:47:15,960 --> 01:47:18,899
create a shear matrix so I'm just going

1834
01:47:17,760 --> 01:47:22,219
to reiterate that again

1835
01:47:18,899 --> 01:47:22,219
here's your matrix

1836
01:47:30,828 --> 01:47:36,319
and if you're a longtime handmade hero

1837
01:47:33,918 --> 01:47:38,088
viewer you should be able to look at

1838
01:47:36,319 --> 01:47:41,148
this bag of numbers which is a four by

1839
01:47:38,088 --> 01:47:42,708
four matrix here right and you should be

1840
01:47:41,149 --> 01:47:45,679
able to say if this is something that

1841
01:47:42,708 --> 01:47:47,238
takes a object and places it in the

1842
01:47:45,679 --> 01:47:49,399
world which is where you'd be doing your

1843
01:47:47,238 --> 01:47:52,878
shears or whatever you should be able to

1844
01:47:49,399 --> 01:47:56,269
pull out for me exactly what that

1845
01:47:52,878 --> 01:47:59,569
objects XY and z axes are and what its

1846
01:47:56,269 --> 01:48:02,958
origin is right and so what you would

1847
01:47:59,569 --> 01:48:05,408
expect to see is this down here MN o P

1848
01:48:02,958 --> 01:48:09,588
would be and if I I'll draw it over here

1849
01:48:05,408 --> 01:48:12,319
would be 0 0 0 1 right because this is

1850
01:48:09,588 --> 01:48:16,399
the part of the matrix that deals with

1851
01:48:12,319 --> 01:48:19,368
the W parameter of your input and so

1852
01:48:16,399 --> 01:48:21,139
it's not really participating in placing

1853
01:48:19,368 --> 01:48:23,529
this object unless you're doing things

1854
01:48:21,139 --> 01:48:26,059
like trying to move things into the

1855
01:48:23,529 --> 01:48:27,378
output W which is for you know

1856
01:48:26,059 --> 01:48:29,689
perspective transforms and things like

1857
01:48:27,378 --> 01:48:31,309
that so you're looking at this bag of

1858
01:48:29,689 --> 01:48:33,469
twelve numbers right here where's the

1859
01:48:31,309 --> 01:48:34,969
position all right everyone who watches

1860
01:48:33,469 --> 01:48:36,889
handmade here regularly you should be

1861
01:48:34,969 --> 01:48:38,748
able to pull this out if you don't I'm

1862
01:48:36,889 --> 01:48:44,269
gonna have to go programming on you

1863
01:48:38,748 --> 01:48:47,269
again so it's right here right this is

1864
01:48:44,269 --> 01:48:50,918
the position this right here is the

1865
01:48:47,269 --> 01:48:54,168
vector that is the position of the

1866
01:48:50,918 --> 01:48:59,689
object that you're placing so it's a px

1867
01:48:54,168 --> 01:49:03,849
py PZ right is these three and then

1868
01:48:59,689 --> 01:49:10,609
where's the XY and z axes of this object

1869
01:49:03,849 --> 01:49:13,578
okay it's here here and here so that

1870
01:49:10,609 --> 01:49:18,139
means we have our x axis x or x axis y

1871
01:49:13,578 --> 01:49:23,418
our x axis Z our Y axis X our Y axis Y

1872
01:49:18,139 --> 01:49:28,819
and our y axis Z our z axis X or z axis

1873
01:49:23,418 --> 01:49:32,238
Y our z axis Z okay and so now we can

1874
01:49:28,819 --> 01:49:33,349
see that for any bag of four by four

1875
01:49:32,238 --> 01:49:35,628
numbers you've given us if you're

1876
01:49:33,349 --> 01:49:38,088
telling us hey this is an object

1877
01:49:35,628 --> 01:49:40,099
transform we can immediately tell you

1878
01:49:38,088 --> 01:49:43,099
that these are the parameters for it

1879
01:49:40,099 --> 01:49:43,989
right so that tells us exactly like

1880
01:49:43,099 --> 01:49:45,880
exact

1881
01:49:43,988 --> 01:49:50,259
just by pulling the numbers out no work

1882
01:49:45,880 --> 01:49:53,078
on the numbers exactly this here's the

1883
01:49:50,260 --> 01:49:58,659
origin here's the y axis x axis z axis

1884
01:49:53,078 --> 01:50:04,118
they are literally these right here all

1885
01:49:58,658 --> 01:50:06,179
right so if you know that now you should

1886
01:50:04,118 --> 01:50:10,389
be able to make your sheer matrix

1887
01:50:06,179 --> 01:50:13,210
trivially all you have to do is well

1888
01:50:10,389 --> 01:50:18,730
assure matrix doesn't move anybody right

1889
01:50:13,210 --> 01:50:21,399
so the p values are just 0 0 0 and the

1890
01:50:18,729 --> 01:50:22,928
bottom obviously is 0 0 1 right so we

1891
01:50:21,399 --> 01:50:24,908
can start off there because we're not

1892
01:50:22,929 --> 01:50:27,849
trying to place the thing anywhere we're

1893
01:50:24,908 --> 01:50:29,439
just trying to share it so then we could

1894
01:50:27,849 --> 01:50:32,828
say well what kind of shear are we

1895
01:50:29,439 --> 01:50:34,178
trying to do right and I guess I don't

1896
01:50:32,828 --> 01:50:36,130
know what kind of sure you're trying to

1897
01:50:34,179 --> 01:50:38,828
do but let's say you were trying to

1898
01:50:36,130 --> 01:50:40,300
shear the y axis so what you want to do

1899
01:50:38,828 --> 01:50:42,788
is you want it to kind of look more like

1900
01:50:40,300 --> 01:50:44,739
that right so you're shearing this over

1901
01:50:42,788 --> 01:50:47,889
so what you're going to do there is just

1902
01:50:44,738 --> 01:50:49,658
say okay my z axis and my x axis are not

1903
01:50:47,889 --> 01:50:52,690
going to change so I'm gonna put my x

1904
01:50:49,658 --> 01:50:56,198
axis in here right which is 1 0 0 that's

1905
01:50:52,689 --> 01:50:57,460
just you know the x axis unchanged my Y

1906
01:50:56,198 --> 01:50:59,198
axis I'm gonna shear so I'll leave that

1907
01:50:57,460 --> 01:51:02,139
out for now and the z axis is also gonna

1908
01:50:59,198 --> 01:51:04,868
be unchanged right so now I want my

1909
01:51:02,139 --> 01:51:07,659
sheared Y axis well what would a sheared

1910
01:51:04,868 --> 01:51:09,219
y axis look like well if I wanted to

1911
01:51:07,658 --> 01:51:12,248
produce a thing that you know sheared

1912
01:51:09,219 --> 01:51:15,609
like that then my Y axis should just be

1913
01:51:12,248 --> 01:51:17,380
set to I don't know 1 1 let's say that

1914
01:51:15,609 --> 01:51:22,179
would be that point there right that

1915
01:51:17,380 --> 01:51:24,159
would shear me over by 1 okay and again

1916
01:51:22,179 --> 01:51:26,260
you can just conceptualize it by saying

1917
01:51:24,158 --> 01:51:27,759
what did you want these to do right

1918
01:51:26,260 --> 01:51:29,409
maybe you wanted to shear and why as

1919
01:51:27,760 --> 01:51:32,260
well in which case maybe you would put a

1920
01:51:29,408 --> 01:51:33,609
1 you know I'm sorry a 1 there right I

1921
01:51:32,260 --> 01:51:36,130
don't know I don't know what kind of

1922
01:51:33,609 --> 01:51:38,198
steer you're trying to do right but

1923
01:51:36,130 --> 01:51:40,328
however much for this for example if you

1924
01:51:38,198 --> 01:51:41,888
just want to do a Y shear however much Y

1925
01:51:40,328 --> 01:51:43,479
sure you wanted would go right there

1926
01:51:41,889 --> 01:51:45,849
right and we know that because this is

1927
01:51:43,479 --> 01:51:48,609
the y axis so if you want to do an X

1928
01:51:45,849 --> 01:51:50,590
here on the y axis right or Y shear I

1929
01:51:48,609 --> 01:51:53,558
don't know why you describe these things

1930
01:51:50,590 --> 01:51:56,170
but if you want to share your Y in the X

1931
01:51:53,559 --> 01:51:57,520
direction then that's just that value

1932
01:51:56,170 --> 01:52:01,659
and we know that because

1933
01:51:57,520 --> 01:52:04,170
that's where the y-axis goes right so

1934
01:52:01,659 --> 01:52:04,170
does that make sense

1935
01:52:37,550 --> 01:52:46,159
okay cool a couple other questions you

1936
01:52:42,890 --> 01:52:48,740
may see which kind of light does

1937
01:52:46,159 --> 01:52:50,420
hand-made hero support did I assume

1938
01:52:48,739 --> 01:52:52,340
right it support any as long as you put

1939
01:52:50,420 --> 01:52:53,960
like correctly maybe moonlight can be a

1940
01:52:52,340 --> 01:52:57,260
planar light put over rooms marked as

1941
01:52:53,960 --> 01:52:59,180
outside yes we certainly can we pretty

1942
01:52:57,260 --> 01:53:02,119
much don't have any restrictions on the

1943
01:52:59,180 --> 01:53:05,570
light at the moment we could just put

1944
01:53:02,119 --> 01:53:08,720
any anything we can evaluate for a ray

1945
01:53:05,569 --> 01:53:11,689
cast can be in there so if we want to

1946
01:53:08,720 --> 01:53:13,789
like you say we could totally just put a

1947
01:53:11,689 --> 01:53:16,639
fake light that's like a roof over

1948
01:53:13,789 --> 01:53:18,409
outdoor rooms and it just says if you

1949
01:53:16,640 --> 01:53:19,360
hit this thing computer moonlight we

1950
01:53:18,409 --> 01:53:22,550
could totally do that

1951
01:53:19,359 --> 01:53:25,250
and that may very well be what we do we

1952
01:53:22,550 --> 01:53:27,590
just haven't we don't really have any

1953
01:53:25,250 --> 01:53:30,319
need to do that until we actually have

1954
01:53:27,590 --> 01:53:31,970
everything else correct but putting in

1955
01:53:30,319 --> 01:53:33,710
types of lights yet is pretty much free

1956
01:53:31,970 --> 01:53:35,690
because since we're using Ray casting it

1957
01:53:33,710 --> 01:53:37,819
means that anything you can compute a

1958
01:53:35,689 --> 01:53:42,049
ray cast for which is literally all

1959
01:53:37,819 --> 01:53:46,219
lights that exist period pretty much we

1960
01:53:42,050 --> 01:53:48,380
can do could you check how much slower

1961
01:53:46,220 --> 01:53:52,100
the build is if you define internal to

1962
01:53:48,380 --> 01:53:53,270
nothing I can although it's probably not

1963
01:53:52,100 --> 01:53:55,490
a particularly good check

1964
01:53:53,270 --> 01:53:58,040
because handmade Heroes codebase is

1965
01:53:55,489 --> 01:54:01,489
fairly small so I wouldn't really expect

1966
01:53:58,039 --> 01:54:04,430
it to save that much time on a very

1967
01:54:01,489 --> 01:54:07,849
small codebase right because there's

1968
01:54:04,430 --> 01:54:11,390
just not that many functions so we

1969
01:54:07,850 --> 01:54:14,000
certainly can take a look at it if I go

1970
01:54:11,390 --> 01:54:18,770
here and run the builds we can take a

1971
01:54:14,000 --> 01:54:21,229
look at how long that takes and you know

1972
01:54:18,770 --> 01:54:24,620
see if that's a consistent number four

1973
01:54:21,229 --> 01:54:27,409
point eight eight seven and and you know

1974
01:54:24,619 --> 01:54:28,970
we may want to do two is say look the

1975
01:54:27,409 --> 01:54:31,970
debug build is the one that's gonna be

1976
01:54:28,970 --> 01:54:34,850
fastest and would you know possibly be

1977
01:54:31,970 --> 01:54:37,699
the one to look at there so if I do a

1978
01:54:34,850 --> 01:54:41,260
build for debug and look at how much

1979
01:54:37,699 --> 01:54:45,649
time is that's two point two oh three

1980
01:54:41,260 --> 01:54:47,119
two point four oh six two point zero

1981
01:54:45,649 --> 01:54:49,969
three right so it's gonna be kind of

1982
01:54:47,119 --> 01:54:51,498
hard to measure something that small but

1983
01:54:49,970 --> 01:54:53,420
it's in the two point three two

1984
01:54:51,498 --> 01:54:56,599
two point two two two point three area

1985
01:54:53,420 --> 01:54:59,510
right yeah

1986
01:54:56,599 --> 01:55:04,130
so I can go and take a look at internal

1987
01:54:59,510 --> 01:55:12,409
and I can try I don't know if we'll

1988
01:55:04,130 --> 01:55:15,828
compile without that but we can try so

1989
01:55:12,408 --> 01:55:20,689
it looks like yeah the problem there is

1990
01:55:15,828 --> 01:55:23,899
we're getting some unresolved externals

1991
01:55:20,689 --> 01:55:25,248
there that's really only cut at h8

1992
01:55:23,899 --> 01:55:27,288
sphere so I could get rid of that but it

1993
01:55:25,248 --> 01:55:29,420
looks like like I said they're hand

1994
01:55:27,288 --> 01:55:30,800
meters cuz isn't that big so I wouldn't

1995
01:55:29,420 --> 01:55:34,479
expect this to really make a difference

1996
01:55:30,800 --> 01:55:44,050
here and I don't think it really does

1997
01:55:34,479 --> 01:55:46,070
let's try that again so that's you know

1998
01:55:44,050 --> 01:55:48,889
roughly two seconds

1999
01:55:46,069 --> 01:55:50,689
and now I'll put it in and my assumption

2000
01:55:48,889 --> 01:56:00,109
is you know it'll basically be the same

2001
01:55:50,689 --> 01:56:02,839
I mean it you know we're not even

2002
01:56:00,109 --> 01:56:05,738
measuring I think it so yeah I mean even

2003
01:56:02,840 --> 01:56:07,998
there I guess it is slightly faster

2004
01:56:05,738 --> 01:56:10,939
looks like it's fairly consistently

2005
01:56:07,998 --> 01:56:14,029
slightly faster but again like not in a

2006
01:56:10,939 --> 01:56:15,859
meaningful way so you know again with a

2007
01:56:14,029 --> 01:56:20,569
code base of this size I don't know that

2008
01:56:15,859 --> 01:56:21,799
you'd really care about it but it does

2009
01:56:20,569 --> 01:56:23,868
look like it's slightly slower

2010
01:56:21,800 --> 01:56:25,340
oddly enough I wouldn't necessarily have

2011
01:56:23,868 --> 01:56:27,319
thought that but it does look like it's

2012
01:56:25,340 --> 01:56:32,119
pretty consistently slightly slower

2013
01:56:27,319 --> 01:56:34,340
right looking at the release build my

2014
01:56:32,118 --> 01:56:36,288
assumption is that the percentage of the

2015
01:56:34,340 --> 01:56:38,860
time that it would take there would be

2016
01:56:36,288 --> 01:56:41,238
even less I could be wrong about that

2017
01:56:38,859 --> 01:56:42,859
but you know if we take a look at that's

2018
01:56:41,238 --> 01:56:44,299
just because release bills tend to be

2019
01:56:42,859 --> 01:56:46,368
longer so the amount of time it's doing

2020
01:56:44,300 --> 01:56:48,440
resolving the names would take up less

2021
01:56:46,368 --> 01:56:53,078
of the time but again so looking at a

2022
01:56:48,439 --> 01:56:56,109
like a 4.3 to 4.4 range in there and

2023
01:56:53,078 --> 01:56:59,448
then if I go ahead and get rid of that

2024
01:56:56,109 --> 01:57:02,308
and I do a build we can see if it's any

2025
01:56:59,448 --> 01:57:07,888
different and

2026
01:57:02,309 --> 01:57:07,889
looks like we're failing there though

2027
01:57:08,698 --> 01:57:26,319
with it with an unresolved symbol men

2028
01:57:12,099 --> 01:57:28,239
copied their so hold on a second so not

2029
01:57:26,319 --> 01:57:42,250
really sure why we're getting that mem

2030
01:57:28,238 --> 01:57:51,968
copy we don't call mem copy so I'm not

2031
01:57:42,250 --> 01:57:55,179
sure why that would actually mmmm that's

2032
01:57:51,969 --> 01:58:01,989
just in the preprocessor mm-hmm so it

2033
01:57:55,179 --> 01:58:09,399
looks like checksum of for whatever

2034
01:58:01,988 --> 01:58:11,848
reason if we call checksum of here we're

2035
01:58:09,399 --> 01:58:11,848
getting

2036
01:58:22,020 --> 01:58:29,350
that's actually generating a mem copy

2037
01:58:24,899 --> 01:58:39,699
for this I would assume and I don't know

2038
01:58:29,350 --> 01:58:42,130
why it may just be because okay so it

2039
01:58:39,699 --> 01:58:45,869
may just be because since it can't see

2040
01:58:42,130 --> 01:58:48,340
it or thin since it thinks it's external

2041
01:58:45,869 --> 01:58:56,409
gosh I don't I don't really know why

2042
01:58:48,340 --> 01:58:58,860
it's doing that though let me just see

2043
01:58:56,409 --> 01:58:58,859
what happens

2044
01:59:03,859 --> 01:59:23,500
I don't really know I don't know why

2045
01:59:14,630 --> 01:59:23,500
it's why it's happening that you got me

2046
01:59:26,319 --> 01:59:33,609
the compiler is putting in like we're

2047
01:59:29,239 --> 01:59:36,769
not calling it but for some reason and

2048
01:59:33,609 --> 01:59:39,619
and I I would have to investigate more

2049
01:59:36,770 --> 01:59:42,040
closely so so I don't know exactly why

2050
01:59:39,619 --> 01:59:42,039
it's doing that

2051
01:59:43,300 --> 01:59:47,690
but for some reason it looks like in the

2052
01:59:45,859 --> 01:59:49,670
optimized build if you don't include

2053
01:59:47,689 --> 01:59:52,419
that it can't actually do the build

2054
01:59:49,670 --> 01:59:55,819
because it inserts a spurious mem copy

2055
01:59:52,420 --> 01:59:59,289
and and I don't know why so I guess

2056
01:59:55,819 --> 01:59:59,289
that's another reason to always use it

2057
02:00:05,560 --> 02:00:09,470
no it's not going to be REM something

2058
02:00:07,550 --> 02:00:12,440
out the that's just the sphere build and

2059
02:00:09,470 --> 02:00:12,710
we don't need to do that so so I don't

2060
02:00:12,439 --> 02:00:15,799
know

2061
02:00:12,710 --> 02:00:16,909
that's not a reason I would think it so

2062
02:00:15,800 --> 02:00:18,470
as you can see it does actually even get

2063
02:00:16,909 --> 02:00:19,849
slower even for our code base which is a

2064
02:00:18,470 --> 02:00:24,170
little bit surprising but that's the

2065
02:00:19,850 --> 02:00:25,460
case and so yeah I don't know how much

2066
02:00:24,170 --> 02:00:27,050
lower the release build gets though

2067
02:00:25,460 --> 02:00:29,800
because it was hard for to tell since it

2068
02:00:27,050 --> 02:00:29,800
can't complete it

2069
02:00:44,738 --> 02:00:48,839
alright let's go ahead and wrap it up

2070
02:00:53,429 --> 02:00:56,500
thank you everyone for joining me for

2071
02:00:55,300 --> 02:00:58,360
those that a handmade hero it's when I

2072
02:00:56,500 --> 02:00:59,710
pleasure coding with you as always if

2073
02:00:58,359 --> 02:01:02,380
you would like to follow on the series

2074
02:00:59,710 --> 02:01:04,840
at home you can always go to handmade

2075
02:01:02,380 --> 02:01:06,159
hero org and pre-order the game and it

2076
02:01:04,840 --> 02:01:08,590
comes to the source code so you can do

2077
02:01:06,158 --> 02:01:10,569
your own experiments with it maybe you'd

2078
02:01:08,590 --> 02:01:11,679
like to try optimizing our lighting code

2079
02:01:10,569 --> 02:01:13,238
which is what we're gonna start on

2080
02:01:11,679 --> 02:01:15,789
tomorrow you can see if you can make a

2081
02:01:13,238 --> 02:01:18,609
dent in it I think there's a lot of fat

2082
02:01:15,789 --> 02:01:19,510
in there we can start to trim so we'll

2083
02:01:18,609 --> 02:01:20,799
go ahead and do that

2084
02:01:19,510 --> 02:01:21,969
hope to see you back here tomorrow for

2085
02:01:20,800 --> 02:01:23,529
that till then have fun programming

2086
02:01:21,969 --> 02:01:26,279
everyone and I'll see you on the

2087
02:01:23,529 --> 02:01:26,279
Internet take it easy everybody

