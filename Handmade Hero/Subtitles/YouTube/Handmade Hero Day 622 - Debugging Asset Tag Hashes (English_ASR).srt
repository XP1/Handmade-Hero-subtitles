1
00:00:02,720 --> 00:00:06,560
hello everyone

2
00:00:04,000 --> 00:00:07,759
and welcome to handmade hero co came

3
00:00:06,559 --> 00:00:11,919
where we code to complete

4
00:00:07,759 --> 00:00:12,798
oh wow show where we go to complete came

5
00:00:11,919 --> 00:00:14,240
on stream

6
00:00:12,798 --> 00:00:16,239
yeah it's gonna be that kind of day i

7
00:00:14,240 --> 00:00:18,399
can tell um

8
00:00:16,239 --> 00:00:19,519
we are right in the middle right now of

9
00:00:18,399 --> 00:00:22,320
just uh

10
00:00:19,519 --> 00:00:23,118
fixing up sort of the way we do asset

11
00:00:22,320 --> 00:00:24,879
lookups

12
00:00:23,118 --> 00:00:26,160
we never really had anything in

13
00:00:24,879 --> 00:00:30,079
particular for this

14
00:00:26,160 --> 00:00:33,119
uh we made sort of a tag lookup system

15
00:00:30,079 --> 00:00:36,079
at the very early like very early on

16
00:00:33,119 --> 00:00:36,640
uh and we never really revisited it and

17
00:00:36,079 --> 00:00:39,520
so

18
00:00:36,640 --> 00:00:40,399
now that i'd like to start kind of being

19
00:00:39,520 --> 00:00:44,000
able to put

20
00:00:40,399 --> 00:00:46,960
um the like i'd like to be able

21
00:00:44,000 --> 00:00:48,000
to go through really uh

22
00:00:46,960 --> 00:00:50,719
straightforwardly

23
00:00:48,000 --> 00:00:52,238
adding asset stuff and there was just a

24
00:00:50,719 --> 00:00:53,280
bunch of things that were obviously not

25
00:00:52,238 --> 00:00:55,919
very good

26
00:00:53,280 --> 00:00:57,120
um about how it was working and so all i

27
00:00:55,920 --> 00:00:59,120
really wanted to do

28
00:00:57,119 --> 00:01:01,679
was take a look at what would be

29
00:00:59,119 --> 00:01:04,158
required to simplify

30
00:01:01,679 --> 00:01:06,159
you know just make it uh easy for us to

31
00:01:04,159 --> 00:01:07,439
add lots of assets and make it easy for

32
00:01:06,159 --> 00:01:09,680
stuff to work

33
00:01:07,438 --> 00:01:11,919
the way we want it to work and so all

34
00:01:09,680 --> 00:01:14,560
we're doing right now is changing to us

35
00:01:11,920 --> 00:01:15,680
from a system where we passed very like

36
00:01:14,560 --> 00:01:18,879
um

37
00:01:15,680 --> 00:01:22,159
like very large floating point vectors

38
00:01:18,879 --> 00:01:23,920
if this makes sense um which were just

39
00:01:22,159 --> 00:01:25,600
completely generalized into something

40
00:01:23,920 --> 00:01:26,879
that's much simpler so now what we're

41
00:01:25,599 --> 00:01:28,798
doing is we're basically passing

42
00:01:26,879 --> 00:01:32,319
something that's going to be

43
00:01:28,799 --> 00:01:34,240
uh very discreet and which is

44
00:01:32,319 --> 00:01:36,478
you know tailored to the assets we

45
00:01:34,239 --> 00:01:37,839
actually have rather than bef when we

46
00:01:36,478 --> 00:01:38,478
first started where we didn't have any

47
00:01:37,840 --> 00:01:39,759
idea

48
00:01:38,478 --> 00:01:41,679
so we just had to kind of put something

49
00:01:39,759 --> 00:01:43,519
in to get started um

50
00:01:41,680 --> 00:01:45,759
and that was of course why we didn't do

51
00:01:43,519 --> 00:01:47,118
anything fancy with it originally was

52
00:01:45,759 --> 00:01:49,439
just because

53
00:01:47,118 --> 00:01:50,560
before you actually know what's going on

54
00:01:49,438 --> 00:01:52,959
with your assets

55
00:01:50,560 --> 00:01:54,799
you don't want to spend a lot of time

56
00:01:52,959 --> 00:01:57,280
like trying to optimize the system

57
00:01:54,799 --> 00:01:58,880
to like look them up or whatever because

58
00:01:57,280 --> 00:02:01,519
if you spend all that time

59
00:01:58,879 --> 00:02:03,118
once you then find out what your assets

60
00:02:01,519 --> 00:02:04,798
actually look like in the end

61
00:02:03,118 --> 00:02:06,879
you're going to find that you optimize

62
00:02:04,799 --> 00:02:08,399
the wrong thing right

63
00:02:06,879 --> 00:02:10,159
so now that we have some idea of what

64
00:02:08,399 --> 00:02:12,639
we're doing we kind of know

65
00:02:10,159 --> 00:02:14,079
what we would need in terms of like and

66
00:02:12,639 --> 00:02:17,519
we saw this last time

67
00:02:14,080 --> 00:02:20,800
we we more or less know what we need

68
00:02:17,520 --> 00:02:23,040
in terms of flexible lookup versus

69
00:02:20,800 --> 00:02:25,599
rigid lookup right so we have sort of

70
00:02:23,039 --> 00:02:27,519
two types of things we need to do

71
00:02:25,598 --> 00:02:29,519
one type of thing is like a very

72
00:02:27,520 --> 00:02:32,159
concrete discrete

73
00:02:29,520 --> 00:02:32,560
exact lookup and that's just something

74
00:02:32,159 --> 00:02:34,479
like

75
00:02:32,560 --> 00:02:35,759
okay i know that i'm making the walls of

76
00:02:34,479 --> 00:02:37,359
the orphanage

77
00:02:35,759 --> 00:02:39,840
so i want to be able to uniquely

78
00:02:37,360 --> 00:02:40,800
identify things that are from the wall

79
00:02:39,840 --> 00:02:43,759
of the orphanage

80
00:02:40,800 --> 00:02:46,400
right and so the way we do that is we

81
00:02:43,759 --> 00:02:48,560
use the asset tag hash now and you can

82
00:02:46,400 --> 00:02:50,640
see if i center my keyboard properly

83
00:02:48,560 --> 00:02:53,840
here asset tag hash

84
00:02:50,639 --> 00:02:58,399
um you can see that these are just

85
00:02:53,840 --> 00:03:01,439
now 64-bit values and the 64-bit values

86
00:02:58,400 --> 00:03:03,439
they come from a

87
00:03:01,439 --> 00:03:05,359
a set of functions here that can

88
00:03:03,439 --> 00:03:08,239
generate those

89
00:03:05,360 --> 00:03:09,599
by taking a bunch of tags so we used to

90
00:03:08,239 --> 00:03:11,519
have these various tags

91
00:03:09,598 --> 00:03:13,119
it can take a bunch of tags and it will

92
00:03:11,519 --> 00:03:16,480
uh sort of

93
00:03:13,120 --> 00:03:19,680
conglomerate them into a single u64

94
00:03:16,479 --> 00:03:22,959
uh and produce this this you know

95
00:03:19,680 --> 00:03:22,959
value directly from that

96
00:03:28,878 --> 00:03:33,120
and so when you think about what's going

97
00:03:31,360 --> 00:03:34,879
on here we're replacing a system where

98
00:03:33,120 --> 00:03:36,959
we used to pass these very large vectors

99
00:03:34,878 --> 00:03:39,840
with like ones in a few places and

100
00:03:36,959 --> 00:03:41,360
it had to be weighted and so on by just

101
00:03:39,840 --> 00:03:43,039
saying okay what we're going to do

102
00:03:41,360 --> 00:03:45,120
instead is we're just going to use

103
00:03:43,039 --> 00:03:47,199
ordered sets of tags we're going to mush

104
00:03:45,120 --> 00:03:49,280
those into a 64-bit value that 64.5 is

105
00:03:47,199 --> 00:03:52,479
going to be a unique identifier

106
00:03:49,280 --> 00:03:55,120
for a family of uh assets and those

107
00:03:52,479 --> 00:03:55,518
assets are then going to be matched so

108
00:03:55,120 --> 00:03:57,599
we

109
00:03:55,519 --> 00:03:59,599
will spin over a few assets there we're

110
00:03:57,598 --> 00:04:00,639
gonna we are going to look at the assets

111
00:03:59,598 --> 00:04:04,238
that match

112
00:04:00,639 --> 00:04:07,598
this 64-bit value for matching

113
00:04:04,239 --> 00:04:09,599
in one or two other categories that are

114
00:04:07,598 --> 00:04:12,000
more flexible meaning we don't know

115
00:04:09,598 --> 00:04:14,399
exactly what's in there

116
00:04:12,000 --> 00:04:15,598
and those will be things like facing

117
00:04:14,400 --> 00:04:18,639
direction

118
00:04:15,598 --> 00:04:20,560
and um variant

119
00:04:18,639 --> 00:04:22,160
are two of the things that we know will

120
00:04:20,560 --> 00:04:23,360
have we might have others but we know

121
00:04:22,160 --> 00:04:25,439
we'll have those

122
00:04:23,360 --> 00:04:27,120
uh and in fact at the moment we we

123
00:04:25,439 --> 00:04:27,759
already have those defined here as you

124
00:04:27,120 --> 00:04:30,399
can see

125
00:04:27,759 --> 00:04:32,240
in this asset match vector element we

126
00:04:30,399 --> 00:04:34,319
currently only use two floating point

127
00:04:32,240 --> 00:04:35,759
values now and we don't necessarily even

128
00:04:34,319 --> 00:04:36,240
use both of them right but we're going

129
00:04:35,759 --> 00:04:39,600
to use

130
00:04:36,240 --> 00:04:43,280
up to two and those get matched

131
00:04:39,600 --> 00:04:43,680
in a fuzzy way so the artist for example

132
00:04:43,279 --> 00:04:46,000
can

133
00:04:43,680 --> 00:04:46,720
make these as dense as they want them to

134
00:04:46,000 --> 00:04:50,240
be

135
00:04:46,720 --> 00:04:52,400
so if an artist wants to input

136
00:04:50,240 --> 00:04:54,319
more facing directions for a character

137
00:04:52,399 --> 00:04:56,478
like this like if a character

138
00:04:54,319 --> 00:04:57,439
wanted eight facing directions instead

139
00:04:56,478 --> 00:04:58,959
of four

140
00:04:57,439 --> 00:05:00,399
instead of one right you could have a

141
00:04:58,959 --> 00:05:01,839
thing that can only ever face one

142
00:05:00,399 --> 00:05:03,679
direction right so no matter what

143
00:05:01,839 --> 00:05:05,839
direction it's moving you don't have

144
00:05:03,680 --> 00:05:07,519
we want the ability to like dynamically

145
00:05:05,839 --> 00:05:09,359
change that resolution

146
00:05:07,519 --> 00:05:11,758
without the game having to think about

147
00:05:09,360 --> 00:05:15,120
it so we don't want the game code

148
00:05:11,759 --> 00:05:16,800
uh essentially to know um

149
00:05:15,120 --> 00:05:18,478
anything about that right we don't want

150
00:05:16,800 --> 00:05:21,759
the game code to have to think

151
00:05:18,478 --> 00:05:24,800
oh for each art asset i have to have

152
00:05:21,759 --> 00:05:27,120
a like knowledge in the code of

153
00:05:24,800 --> 00:05:28,960
how its facing directions were laid out

154
00:05:27,120 --> 00:05:29,918
so what we've essentially done here

155
00:05:28,959 --> 00:05:33,519
right is we've

156
00:05:29,918 --> 00:05:37,120
condensed those uh the sort of

157
00:05:33,519 --> 00:05:39,038
fuzzy entirely fuzzy matching

158
00:05:37,120 --> 00:05:40,240
from the previous way we were doing it

159
00:05:39,038 --> 00:05:41,120
ever since the beginning of handmade

160
00:05:40,240 --> 00:05:43,038
hero

161
00:05:41,120 --> 00:05:45,280
we've condensed that down into now a

162
00:05:43,038 --> 00:05:48,560
very specific way of looking up

163
00:05:45,279 --> 00:05:49,038
assets and then still retained a little

164
00:05:48,560 --> 00:05:51,519
bit

165
00:05:49,038 --> 00:05:52,879
just just the amount of the fuzzy

166
00:05:51,519 --> 00:05:55,439
matching

167
00:05:52,879 --> 00:05:57,279
that we think we will actually use and

168
00:05:55,439 --> 00:05:59,120
the reason we wanted to do that

169
00:05:57,279 --> 00:06:00,478
was because a it's much more

170
00:05:59,120 --> 00:06:02,720
straightforward so

171
00:06:00,478 --> 00:06:04,560
now when i'm coding those parts of the

172
00:06:02,720 --> 00:06:05,680
game which is what we're about to do

173
00:06:04,560 --> 00:06:08,079
like we're going to want to start

174
00:06:05,680 --> 00:06:08,478
putting all these assets in right and

175
00:06:08,079 --> 00:06:10,079
like

176
00:06:08,478 --> 00:06:11,439
i want to be able to like start putting

177
00:06:10,079 --> 00:06:13,120
stuff around the orphanage and the

178
00:06:11,439 --> 00:06:14,319
different characters different monsters

179
00:06:13,120 --> 00:06:17,680
i want to be able to put those in the

180
00:06:14,319 --> 00:06:20,000
game i don't want to be sitting around

181
00:06:17,680 --> 00:06:21,918
trying to make these huge vectors and

182
00:06:20,000 --> 00:06:23,600
match them with fuzzy like i just want

183
00:06:21,918 --> 00:06:25,918
to know okay i'm specifying this

184
00:06:23,600 --> 00:06:27,600
thing uniquely and then the only things

185
00:06:25,918 --> 00:06:29,439
i want to be fuzzy are things that i

186
00:06:27,600 --> 00:06:31,919
legitimately don't care

187
00:06:29,439 --> 00:06:33,120
what they map to right so facing

188
00:06:31,918 --> 00:06:35,038
direction and variant

189
00:06:33,120 --> 00:06:36,319
are examples of not caring what

190
00:06:35,038 --> 00:06:38,159
something maps to

191
00:06:36,319 --> 00:06:39,759
because we know that it's just look

192
00:06:38,160 --> 00:06:41,520
we're telling you

193
00:06:39,759 --> 00:06:44,000
some random number between zero and one

194
00:06:41,519 --> 00:06:47,680
for the variant and a facing direction

195
00:06:44,000 --> 00:06:49,360
between zero and pi uh probably 2 pi i

196
00:06:47,680 --> 00:06:52,720
think that's what we did 0 to 2 pi

197
00:06:49,360 --> 00:06:53,360
for facing direction so when we pass

198
00:06:52,720 --> 00:06:56,639
those

199
00:06:53,360 --> 00:06:59,919
down right what we know

200
00:06:56,639 --> 00:07:02,800
is that we're sending the data we need

201
00:06:59,918 --> 00:07:04,159
exactly what we exactly what the game

202
00:07:02,800 --> 00:07:06,478
code knows

203
00:07:04,160 --> 00:07:10,160
and wants is being specified to the

204
00:07:06,478 --> 00:07:12,879
asset system and then the asset system

205
00:07:10,160 --> 00:07:13,599
will take care of the rest and so that's

206
00:07:12,879 --> 00:07:16,159
makes it

207
00:07:13,598 --> 00:07:18,000
exactly split the way i want so that's

208
00:07:16,160 --> 00:07:21,599
one reason the second reason

209
00:07:18,000 --> 00:07:24,079
is because this will be much faster so

210
00:07:21,598 --> 00:07:25,199
once we start piling tons of assets into

211
00:07:24,079 --> 00:07:27,439
the game

212
00:07:25,199 --> 00:07:29,038
the list of assets will get very long

213
00:07:27,439 --> 00:07:31,038
and before we were literally walking

214
00:07:29,038 --> 00:07:33,360
through like all of the body

215
00:07:31,038 --> 00:07:34,079
assets and match matching it's right it

216
00:07:33,360 --> 00:07:37,038
was it was like an

217
00:07:34,079 --> 00:07:39,439
o n per lookup and it just wouldn't have

218
00:07:37,038 --> 00:07:42,318
scaled very well right

219
00:07:39,439 --> 00:07:44,160
now we have a hash table that will cut

220
00:07:42,319 --> 00:07:47,360
down the actual identification

221
00:07:44,160 --> 00:07:50,240
of which subsets of assets might match

222
00:07:47,360 --> 00:07:52,479
into a very small number so depending on

223
00:07:50,240 --> 00:07:54,079
how wide we make that hash table we can

224
00:07:52,478 --> 00:07:56,959
cut it down dramatically

225
00:07:54,079 --> 00:07:58,000
to basically only assets that are in

226
00:07:56,959 --> 00:08:00,478
that facing direction

227
00:07:58,000 --> 00:08:01,839
or that variant set and since we know

228
00:08:00,478 --> 00:08:03,038
we're only ever going to have four

229
00:08:01,839 --> 00:08:06,079
facing directions

230
00:08:03,038 --> 00:08:08,159
maybe eight tops if for some particular

231
00:08:06,079 --> 00:08:10,318
monster type that really has a lot of

232
00:08:08,160 --> 00:08:12,000
face direction or something and no more

233
00:08:10,319 --> 00:08:15,680
than say like 16 variants

234
00:08:12,000 --> 00:08:16,959
of anything and we don't really do

235
00:08:15,680 --> 00:08:17,598
variance for facing direction at the

236
00:08:16,959 --> 00:08:19,198
moment

237
00:08:17,598 --> 00:08:20,639
we know that we're not going to have to

238
00:08:19,199 --> 00:08:22,478
loop through many elements

239
00:08:20,639 --> 00:08:24,720
right we're going to be able to look at

240
00:08:22,478 --> 00:08:27,680
elements very quickly

241
00:08:24,720 --> 00:08:29,280
and furthermore because we have control

242
00:08:27,680 --> 00:08:32,560
over that hash table it gets built

243
00:08:29,279 --> 00:08:34,158
at load time we should also be able to

244
00:08:32,559 --> 00:08:36,879
accelerate that if we needed to

245
00:08:34,158 --> 00:08:37,759
so we can make it just be a linked list

246
00:08:36,879 --> 00:08:40,719
that hops through

247
00:08:37,759 --> 00:08:41,360
assets in a fairly slow way and that may

248
00:08:40,719 --> 00:08:43,760
not

249
00:08:41,360 --> 00:08:45,839
ever cost us much because we just don't

250
00:08:43,759 --> 00:08:48,879
have to hop through very many elements

251
00:08:45,839 --> 00:08:51,600
but if we find that there are

252
00:08:48,879 --> 00:08:53,039
you know 32 or 64 elements in some of

253
00:08:51,600 --> 00:08:56,959
these

254
00:08:53,039 --> 00:09:00,159
chains what we can do is we can

255
00:08:56,958 --> 00:09:03,439
we can aggregate the

256
00:09:00,159 --> 00:09:06,719
matching values for those into

257
00:09:03,440 --> 00:09:07,360
arrays that we pre-allocate that are all

258
00:09:06,720 --> 00:09:10,800
together

259
00:09:07,360 --> 00:09:15,440
we can load up the entire

260
00:09:10,799 --> 00:09:18,319
set of match values in like two or three

261
00:09:15,440 --> 00:09:19,600
cmd block reads right so just like you

262
00:09:18,320 --> 00:09:22,640
know literally

263
00:09:19,600 --> 00:09:26,399
three or four memory accesses

264
00:09:22,639 --> 00:09:28,319
one cache line right of 64 bytes

265
00:09:26,399 --> 00:09:31,120
could have all the values like quantized

266
00:09:28,320 --> 00:09:34,480
or something then we could do the match

267
00:09:31,120 --> 00:09:36,399
right there in one

268
00:09:34,480 --> 00:09:37,839
operation that produces the correct

269
00:09:36,399 --> 00:09:40,159
index out of there

270
00:09:37,839 --> 00:09:43,279
and then we just look that one up right

271
00:09:40,159 --> 00:09:45,120
so the fuzzy matching

272
00:09:43,278 --> 00:09:48,000
condensing that down so that we're

273
00:09:45,120 --> 00:09:51,759
matching only against

274
00:09:48,000 --> 00:09:55,360
a set of very well-known

275
00:09:51,759 --> 00:09:56,559
discrete groups uh means that i don't

276
00:09:55,360 --> 00:09:59,039
have any concerns

277
00:09:56,559 --> 00:10:00,479
about scaling this up at all because we

278
00:09:59,039 --> 00:10:02,559
should be able to handle

279
00:10:00,480 --> 00:10:03,839
any amount of asset complexity dumped

280
00:10:02,559 --> 00:10:06,559
into this system

281
00:10:03,839 --> 00:10:09,279
because now we know that for all of the

282
00:10:06,559 --> 00:10:12,399
complexity that occurs on the side of

283
00:10:09,278 --> 00:10:14,720
what asset you're loading

284
00:10:12,399 --> 00:10:16,399
that is now effectively can be made

285
00:10:14,720 --> 00:10:18,560
instant and then the matching

286
00:10:16,399 --> 00:10:20,639
is also arranged in a way that i'm not

287
00:10:18,559 --> 00:10:24,239
scared about scaling it up to

288
00:10:20,639 --> 00:10:25,199
32 64 possible entries which should be

289
00:10:24,240 --> 00:10:26,639
more than enough

290
00:10:25,200 --> 00:10:28,879
uh because we can always make the hash

291
00:10:26,639 --> 00:10:30,078
table wider so any given asset match

292
00:10:28,879 --> 00:10:34,399
shouldn't really get

293
00:10:30,078 --> 00:10:37,278
much above that right so

294
00:10:34,399 --> 00:10:38,159
uh off we go um so now what we want to

295
00:10:37,278 --> 00:10:39,838
do is just finish

296
00:10:38,159 --> 00:10:41,439
we what we did is we created some code

297
00:10:39,839 --> 00:10:42,959
for doing all this stuff we haven't

298
00:10:41,440 --> 00:10:45,600
finished actually porting stuff that

299
00:10:42,958 --> 00:10:48,159
uses it so here you can kind of see

300
00:10:45,600 --> 00:10:49,680
in here we've got this adding tags to

301
00:10:48,159 --> 00:10:50,480
the entity here where it's putting these

302
00:10:49,679 --> 00:10:53,278
on there

303
00:10:50,480 --> 00:10:53,600
i do like the way that that's working

304
00:10:53,278 --> 00:10:55,278
but

305
00:10:53,600 --> 00:10:56,399
i don't necessarily like the fact that

306
00:10:55,278 --> 00:10:57,439
it's happening on the entity

307
00:10:56,399 --> 00:10:59,120
specifically

308
00:10:57,440 --> 00:11:01,279
and the reason for that is because

309
00:10:59,120 --> 00:11:02,399
entities are not really where these tags

310
00:11:01,278 --> 00:11:04,399
get stored anymore

311
00:11:02,399 --> 00:11:06,559
the reason for that is we no longer

312
00:11:04,399 --> 00:11:08,078
actually want to specify per

313
00:11:06,559 --> 00:11:09,679
entity tags what we want to do is

314
00:11:08,078 --> 00:11:11,120
specify per piece tags

315
00:11:09,679 --> 00:11:12,958
because we want entities to be able to

316
00:11:11,120 --> 00:11:15,278
grab pieces from multiple different

317
00:11:12,958 --> 00:11:16,479
asset types right because pieces of

318
00:11:15,278 --> 00:11:18,078
entities uh

319
00:11:16,480 --> 00:11:20,000
you know it's fine if you want to say

320
00:11:18,078 --> 00:11:22,879
that all of the pieces in an entity are

321
00:11:20,000 --> 00:11:24,799
all the same asset type

322
00:11:22,879 --> 00:11:26,159
but we don't really want to force that

323
00:11:24,799 --> 00:11:28,399
we want to be able to have like an

324
00:11:26,159 --> 00:11:29,759
entity comprised of pieces that come

325
00:11:28,399 --> 00:11:33,039
from anywhere

326
00:11:29,759 --> 00:11:36,480
is this a puss eye here oh my goodness

327
00:11:33,039 --> 00:11:37,759
oh my goodness hello sweet plus what's

328
00:11:36,480 --> 00:11:40,720
going on

329
00:11:37,759 --> 00:11:43,838
what's going on come on up do you want

330
00:11:40,720 --> 00:11:47,600
to say hi to everyone on the stream

331
00:11:43,839 --> 00:11:50,959
do you want to say hi hmm how you doing

332
00:11:47,600 --> 00:11:52,480
what's going on you just mousing around

333
00:11:50,958 --> 00:11:54,479
this morning you came up here you opened

334
00:11:52,480 --> 00:11:55,920
the door all by yourself

335
00:11:54,480 --> 00:11:58,320
i think you've done a good job learning

336
00:11:55,919 --> 00:12:02,479
how to open that door

337
00:11:58,320 --> 00:12:07,760
yeah that's a good puss

338
00:12:02,480 --> 00:12:07,759
that's a good puss what's going on

339
00:12:09,440 --> 00:12:11,839
hmm

340
00:12:12,720 --> 00:12:16,720
what do you think you know i can't

341
00:12:15,440 --> 00:12:18,399
really program

342
00:12:16,720 --> 00:12:20,800
uh when you're on my shoulder though

343
00:12:18,399 --> 00:12:22,839
unfortunately and this is really this is

344
00:12:20,799 --> 00:12:25,919
a problem with task chairs

345
00:12:22,839 --> 00:12:29,120
so let me just

346
00:12:25,919 --> 00:12:32,240
say one thing out there for anybody

347
00:12:29,120 --> 00:12:32,720
who has product design experience this

348
00:12:32,240 --> 00:12:35,680
is

349
00:12:32,720 --> 00:12:36,959
a product that i desperately want and i

350
00:12:35,679 --> 00:12:38,958
do not know anything about product

351
00:12:36,958 --> 00:12:42,559
design so i cannot make it

352
00:12:38,958 --> 00:12:45,439
but i need a chair like a task chair

353
00:12:42,559 --> 00:12:46,879
attachment or just a task chair itself

354
00:12:45,440 --> 00:12:50,079
that i can buy

355
00:12:46,879 --> 00:12:53,278
that has like a thing right here

356
00:12:50,078 --> 00:12:54,879
to support the puss even just like just

357
00:12:53,278 --> 00:12:55,360
like a little thing that comes in here

358
00:12:54,879 --> 00:12:59,200
oh no

359
00:12:55,360 --> 00:13:02,000
don't edit the code molly um

360
00:12:59,200 --> 00:13:02,879
um so basically when the puss is up here

361
00:13:02,000 --> 00:13:05,278
right

362
00:13:02,879 --> 00:13:06,078
i could actually start working but i

363
00:13:05,278 --> 00:13:08,000
need to support

364
00:13:06,078 --> 00:13:09,599
her legs right you see how i'm doing

365
00:13:08,000 --> 00:13:12,480
this with my shoulder

366
00:13:09,600 --> 00:13:13,600
like right here i have to keep my arm up

367
00:13:12,480 --> 00:13:16,320
so i could do

368
00:13:13,600 --> 00:13:17,200
something one-handed just fine with my

369
00:13:16,320 --> 00:13:20,079
left hand

370
00:13:17,200 --> 00:13:20,480
but i can't type with two hands because

371
00:13:20,078 --> 00:13:24,479
one

372
00:13:20,480 --> 00:13:27,759
arm is is dedicated to support the puss

373
00:13:24,480 --> 00:13:28,159
you know what i'm saying and so what i

374
00:13:27,759 --> 00:13:31,600
want

375
00:13:28,159 --> 00:13:34,319
is i want some way of

376
00:13:31,600 --> 00:13:36,000
supporting the puss so she can stay on

377
00:13:34,320 --> 00:13:36,639
my shoulder which is where she always

378
00:13:36,000 --> 00:13:38,799
wants to be

379
00:13:36,639 --> 00:13:40,560
if she can she would she would just like

380
00:13:38,799 --> 00:13:43,679
live on the shoulder

381
00:13:40,559 --> 00:13:46,159
um support the puss's

382
00:13:43,679 --> 00:13:48,078
hind legs so she can just stay on my

383
00:13:46,159 --> 00:13:48,559
shoulder while i code and then she's

384
00:13:48,078 --> 00:13:51,278
happy

385
00:13:48,559 --> 00:13:52,559
i'm happy everything's good um and i'd

386
00:13:51,278 --> 00:13:54,000
probably code better because it's great

387
00:13:52,559 --> 00:13:56,239
having a puss around

388
00:13:54,000 --> 00:13:57,039
they they help with your with your

389
00:13:56,240 --> 00:13:59,120
coding

390
00:13:57,039 --> 00:14:00,078
when you can actually code you know what

391
00:13:59,120 --> 00:14:01,919
i'm saying

392
00:14:00,078 --> 00:14:03,359
so it just needs it needs to be

393
00:14:01,919 --> 00:14:06,639
something that would support

394
00:14:03,360 --> 00:14:08,720
you know the puss out out there

395
00:14:06,639 --> 00:14:09,919
yeah i thought about a baby pouch but i

396
00:14:08,720 --> 00:14:13,920
don't know if it would work

397
00:14:09,919 --> 00:14:15,039
because um it's not it's not really on a

398
00:14:13,919 --> 00:14:18,799
shoulder

399
00:14:15,039 --> 00:14:20,319
right um so i don't know if it would

400
00:14:18,799 --> 00:14:22,159
satisfy her i could try

401
00:14:20,320 --> 00:14:23,600
ordering a baby pouch and she could she

402
00:14:22,159 --> 00:14:25,519
could be like here

403
00:14:23,600 --> 00:14:27,278
or something but i don't i don't know if

404
00:14:25,519 --> 00:14:29,519
a baby pouch would do it

405
00:14:27,278 --> 00:14:30,399
i've had that same thought believe me i

406
00:14:29,519 --> 00:14:32,240
just don't

407
00:14:30,399 --> 00:14:33,759
it's not really putting her in the

408
00:14:32,240 --> 00:14:35,440
position she wanted to be in so i don't

409
00:14:33,759 --> 00:14:38,319
think she would stay

410
00:14:35,440 --> 00:14:40,000
um but i don't know another thing would

411
00:14:38,320 --> 00:14:41,440
be if it was back here she could curl

412
00:14:40,000 --> 00:14:43,278
around your neck she would probably do

413
00:14:41,440 --> 00:14:46,240
that too but she likes being up

414
00:14:43,278 --> 00:14:47,838
you know so i don't know don't eat my oh

415
00:14:46,240 --> 00:14:50,959
baby those are my headphones

416
00:14:47,839 --> 00:14:52,240
don't eat my headphones okay go go go

417
00:14:50,958 --> 00:14:53,599
see they gotta put the headphones away

418
00:14:52,240 --> 00:14:59,839
she always eats my headphones if they're

419
00:14:53,600 --> 00:14:59,839
left out

420
00:15:03,120 --> 00:15:06,799
anyway that is a product i very much

421
00:15:05,198 --> 00:15:07,198
would love to have so if somebody out

422
00:15:06,799 --> 00:15:09,278
there

423
00:15:07,198 --> 00:15:11,278
knows how to make that happen i will be

424
00:15:09,278 --> 00:15:15,120
your very first customer

425
00:15:11,278 --> 00:15:18,159
um i will i when the kickstarter goes up

426
00:15:15,120 --> 00:15:21,198
for like task cat

427
00:15:18,159 --> 00:15:23,198
or whatever it's going to be um

428
00:15:21,198 --> 00:15:26,958
i will i will be the very first backer

429
00:15:23,198 --> 00:15:30,879
and i will back like the highest level

430
00:15:26,958 --> 00:15:32,319
um okay so um

431
00:15:30,879 --> 00:15:34,240
thank you in advance whoever's gonna

432
00:15:32,320 --> 00:15:36,079
make that that's great we need that

433
00:15:34,240 --> 00:15:38,399
so what i was saying here is what i want

434
00:15:36,078 --> 00:15:41,439
is effectively an asset tag

435
00:15:38,399 --> 00:15:43,440
uh like aggregator so

436
00:15:41,440 --> 00:15:44,480
what i want to be able to do here is

437
00:15:43,440 --> 00:15:46,720
just say okay

438
00:15:44,480 --> 00:15:48,240
so like when we're doing generation code

439
00:15:46,720 --> 00:15:50,000
like we're doing here

440
00:15:48,240 --> 00:15:51,680
um what i'd like to be able to do is do

441
00:15:50,000 --> 00:15:54,720
something

442
00:15:51,679 --> 00:15:55,198
where uh and we and we sort of have in

443
00:15:54,720 --> 00:15:57,519
the gen

444
00:15:55,198 --> 00:15:59,758
code right there's this like gen entity

445
00:15:57,519 --> 00:16:02,320
idea and there's this gen entity tagged

446
00:15:59,759 --> 00:16:02,800
with with tags of four and you could see

447
00:16:02,320 --> 00:16:05,040
here

448
00:16:02,799 --> 00:16:07,439
like it was kind of set up to push these

449
00:16:05,039 --> 00:16:10,399
things on in the first place

450
00:16:07,440 --> 00:16:11,040
what i don't super understand though is

451
00:16:10,399 --> 00:16:12,879
why

452
00:16:11,039 --> 00:16:14,799
it's baked in here i guess because we

453
00:16:12,879 --> 00:16:16,480
never really needed to pull it out

454
00:16:14,799 --> 00:16:18,319
this is something that i think we just

455
00:16:16,480 --> 00:16:21,199
want to have right

456
00:16:18,320 --> 00:16:22,000
in general we don't need these f32

457
00:16:21,198 --> 00:16:25,599
values here

458
00:16:22,000 --> 00:16:29,360
anymore really um to

459
00:16:25,600 --> 00:16:29,360
uh well i mean maybe we do

460
00:16:29,440 --> 00:16:34,079
that's a little bit harder to say um but

461
00:16:32,078 --> 00:16:38,078
what what i'm basically suggesting here

462
00:16:34,078 --> 00:16:41,120
is inside this like instead of having it

463
00:16:38,078 --> 00:16:44,239
be raw we want like a gen entity

464
00:16:41,120 --> 00:16:47,278
uh tag bundle

465
00:16:44,240 --> 00:16:47,278
i don't know uh

466
00:16:48,159 --> 00:16:55,439
something like this where these are

467
00:16:53,039 --> 00:16:55,439
placed

468
00:16:57,278 --> 00:17:00,480
something like this and that way when we

469
00:16:59,839 --> 00:17:03,440
go through

470
00:17:00,480 --> 00:17:04,318
and build these tags we can create one

471
00:17:03,440 --> 00:17:06,160
of these

472
00:17:04,318 --> 00:17:08,078
like this is what i want to do right i

473
00:17:06,160 --> 00:17:11,519
want to create one of these

474
00:17:08,078 --> 00:17:14,480
uh and then i just want to push

475
00:17:11,519 --> 00:17:14,879
like tags on it incrementally so when i

476
00:17:14,480 --> 00:17:18,160
do

477
00:17:14,880 --> 00:17:20,559
add tag in here when i have this

478
00:17:18,160 --> 00:17:21,199
tag builder it would be more like this

479
00:17:20,558 --> 00:17:23,038
right

480
00:17:21,199 --> 00:17:25,519
so this is how i actually wanted to do

481
00:17:23,038 --> 00:17:25,759
it um where instead of pushing it onto

482
00:17:25,519 --> 00:17:27,918
an

483
00:17:25,759 --> 00:17:29,440
entity which is now not really a thing

484
00:17:27,919 --> 00:17:32,559
we would do

485
00:17:29,440 --> 00:17:35,759
instead we're going to push it onto

486
00:17:32,558 --> 00:17:37,599
a tag builder and then when we actually

487
00:17:35,759 --> 00:17:39,839
are done so when we have

488
00:17:37,599 --> 00:17:40,719
all of the tags on this thing that we

489
00:17:39,839 --> 00:17:43,359
need

490
00:17:40,720 --> 00:17:44,160
then we would just you know finalize

491
00:17:43,359 --> 00:17:49,038
those tags

492
00:17:44,160 --> 00:17:49,038
effectively right so we

493
00:17:49,279 --> 00:17:52,879
we would push the tags on we would then

494
00:17:52,079 --> 00:17:55,599
go

495
00:17:52,880 --> 00:17:57,280
to here where we're about to build them

496
00:17:55,599 --> 00:18:00,399
and we would just say like

497
00:17:57,279 --> 00:18:02,960
you know finalize tags here so it'd just

498
00:18:00,400 --> 00:18:02,960
be like

499
00:18:03,279 --> 00:18:05,519
this

500
00:18:08,319 --> 00:18:10,639
oops

501
00:18:11,519 --> 00:18:18,480
now the only thing i'm not sure about is

502
00:18:15,200 --> 00:18:21,840
where exactly the asset type would

503
00:18:18,480 --> 00:18:24,798
flow in here when you do add piece

504
00:18:21,839 --> 00:18:25,519
you're supposed to pass it the full the

505
00:18:24,798 --> 00:18:29,839
entity piece

506
00:18:25,519 --> 00:18:31,599
asset thing

507
00:18:29,839 --> 00:18:33,519
and you can see that that's like the

508
00:18:31,599 --> 00:18:36,959
hash plus the variant

509
00:18:33,519 --> 00:18:38,400
right and so in this case we don't

510
00:18:36,960 --> 00:18:41,600
really have a variant

511
00:18:38,400 --> 00:18:43,280
um and so

512
00:18:41,599 --> 00:18:45,199
we would need something that produces

513
00:18:43,279 --> 00:18:48,639
the tags like this

514
00:18:45,200 --> 00:18:51,279
right or maybe this and it would

515
00:18:48,640 --> 00:18:51,280
presumably

516
00:18:52,319 --> 00:18:56,000
be able to do that so you can see we

517
00:18:54,000 --> 00:18:58,000
have here the helper function

518
00:18:56,000 --> 00:19:00,880
that does that from these we would just

519
00:18:58,000 --> 00:19:05,038
have one an equivalent one

520
00:19:00,880 --> 00:19:07,120
that generates it from in addition to

521
00:19:05,038 --> 00:19:08,960
uh generating it from the tags laid out

522
00:19:07,119 --> 00:19:11,918
like this it would generate it from

523
00:19:08,960 --> 00:19:13,840
the tag builder so when we say get piece

524
00:19:11,919 --> 00:19:16,000
asset what we need to do here is

525
00:19:13,839 --> 00:19:17,678
we need to also say what you know in

526
00:19:16,000 --> 00:19:19,279
this case i believe it's always scenery

527
00:19:17,679 --> 00:19:21,200
so we would say like that it's

528
00:19:19,279 --> 00:19:22,798
asset scenery we would pass the tag

529
00:19:21,200 --> 00:19:23,759
builder and then we would pass the

530
00:19:22,798 --> 00:19:25,759
variant here

531
00:19:23,759 --> 00:19:27,440
except i don't think that we have

532
00:19:25,759 --> 00:19:28,960
variance in this part of the code

533
00:19:27,440 --> 00:19:33,279
meaning this part of the code never

534
00:19:28,960 --> 00:19:35,840
bothers passing down a variant anyway

535
00:19:33,279 --> 00:19:37,759
one thing that i would suggest is it

536
00:19:35,839 --> 00:19:38,079
probably just we never thought of that

537
00:19:37,759 --> 00:19:41,279
but

538
00:19:38,079 --> 00:19:42,319
we probably want there to be one so we

539
00:19:41,279 --> 00:19:44,639
probably want

540
00:19:42,319 --> 00:19:46,960
this to be like a random unilateral here

541
00:19:44,640 --> 00:19:49,520
that takes the entropy

542
00:19:46,960 --> 00:19:50,240
the uh the world entropy stream and just

543
00:19:49,519 --> 00:19:53,599
sets

544
00:19:50,240 --> 00:19:54,319
like these pieces to have random

545
00:19:53,599 --> 00:19:57,359
variants

546
00:19:54,319 --> 00:20:00,000
because that way if the artist

547
00:19:57,359 --> 00:20:01,119
sticks more for any piece of scenery

548
00:20:00,000 --> 00:20:03,359
that we ask for

549
00:20:01,119 --> 00:20:04,719
if the artist happens to stick variants

550
00:20:03,359 --> 00:20:07,839
into the system

551
00:20:04,720 --> 00:20:07,839
they'll be used

552
00:20:14,640 --> 00:20:17,759
i have to trim molly's back nails really

553
00:20:16,400 --> 00:20:19,679
need a trim check out

554
00:20:17,759 --> 00:20:21,038
she tried to crawl up on me look at i've

555
00:20:19,679 --> 00:20:24,159
got the like scratch

556
00:20:21,038 --> 00:20:27,440
bleed to prove it

557
00:20:24,159 --> 00:20:30,080
um she's a very sweet puss and

558
00:20:27,440 --> 00:20:32,000
she never scratches you on purse purpose

559
00:20:30,079 --> 00:20:34,240
but sometimes when she slips

560
00:20:32,000 --> 00:20:35,038
she extends her like you know back or

561
00:20:34,240 --> 00:20:37,679
front

562
00:20:35,038 --> 00:20:38,558
uh nails and she tries to grab to not

563
00:20:37,679 --> 00:20:40,798
slip

564
00:20:38,558 --> 00:20:41,678
and and you get a a good old scratch on

565
00:20:40,798 --> 00:20:44,720
you

566
00:20:41,679 --> 00:20:48,559
um we try to keep her nails

567
00:20:44,720 --> 00:20:50,558
trimmed short but you know they

568
00:20:48,558 --> 00:20:52,399
she sharpens them quickly let's put it

569
00:20:50,558 --> 00:20:55,200
that way

570
00:20:52,400 --> 00:20:55,759
um so i think this is roughly what we

571
00:20:55,200 --> 00:20:58,080
want here

572
00:20:55,759 --> 00:20:59,759
my only question about it uh at this

573
00:20:58,079 --> 00:21:03,038
point is whether or not

574
00:20:59,759 --> 00:21:06,319
we actually have to um

575
00:21:03,038 --> 00:21:08,240
order these in any particular way so you

576
00:21:06,319 --> 00:21:09,759
can kind of see here that we've got them

577
00:21:08,240 --> 00:21:12,960
ordered pretty strongly

578
00:21:09,759 --> 00:21:15,919
it's always like wall or floor

579
00:21:12,960 --> 00:21:16,480
comes first and then like wood stone or

580
00:21:15,919 --> 00:21:19,038
grass

581
00:21:16,480 --> 00:21:19,759
comes next and so we're actually already

582
00:21:19,038 --> 00:21:22,879
adding them

583
00:21:19,759 --> 00:21:24,879
in the order they appear um and

584
00:21:22,880 --> 00:21:27,280
like i said before we could do work in

585
00:21:24,880 --> 00:21:30,400
the asset system to de-order tags

586
00:21:27,279 --> 00:21:31,839
meaning that any set of tags can match

587
00:21:30,400 --> 00:21:33,280
in any order meaning

588
00:21:31,839 --> 00:21:35,918
you don't have to put them in the same

589
00:21:33,279 --> 00:21:39,599
order they appear in here

590
00:21:35,919 --> 00:21:44,559
but actually i think i want it this way

591
00:21:39,599 --> 00:21:45,199
because i may want this to be i may want

592
00:21:44,558 --> 00:21:48,399
to use

593
00:21:45,200 --> 00:21:51,840
order as a thing at some point i don't

594
00:21:48,400 --> 00:21:54,880
know that i will but i might

595
00:21:51,839 --> 00:21:57,119
so i'm not going to add that in yet

596
00:21:54,880 --> 00:21:58,720
and i'm going to see whether it's fine

597
00:21:57,119 --> 00:22:02,399
doing it this way

598
00:21:58,720 --> 00:22:04,640
um in other words if you said like

599
00:22:02,400 --> 00:22:05,759
orphan earth was different than earth

600
00:22:04,640 --> 00:22:08,960
orphan

601
00:22:05,759 --> 00:22:12,079
like in english word order matters

602
00:22:08,960 --> 00:22:15,200
in this case maybe the tag order should

603
00:22:12,079 --> 00:22:17,279
should also have that um

604
00:22:15,200 --> 00:22:18,720
and and i just don't know so i don't

605
00:22:17,279 --> 00:22:19,440
want to say for sure that that's the

606
00:22:18,720 --> 00:22:22,798
right thing

607
00:22:19,440 --> 00:22:25,519
because i don't know but uh i do

608
00:22:22,798 --> 00:22:26,000
just kind of want to yeah i just i kind

609
00:22:25,519 --> 00:22:29,279
of want

610
00:22:26,000 --> 00:22:31,279
to um uh

611
00:22:29,279 --> 00:22:33,279
leave that be for now like i wanna i

612
00:22:31,279 --> 00:22:34,960
wanna i don't wanna push that

613
00:22:33,279 --> 00:22:36,879
so you can see we've got a tag builder

614
00:22:34,960 --> 00:22:38,159
here and this tag builder was in the

615
00:22:36,880 --> 00:22:41,360
asset system

616
00:22:38,159 --> 00:22:43,840
right uh and we may be able to

617
00:22:41,359 --> 00:22:46,399
regularize these we may be able to

618
00:22:43,839 --> 00:22:48,000
to bake these together uh i'm not

619
00:22:46,400 --> 00:22:49,759
actually sure but i don't care about

620
00:22:48,000 --> 00:22:50,960
that right now so i'm not going to

621
00:22:49,759 --> 00:22:53,359
really look at that

622
00:22:50,960 --> 00:22:57,279
um i just want to take a look at the

623
00:22:53,359 --> 00:22:59,359
various add tag functions we have here

624
00:22:57,279 --> 00:23:00,480
so this is the gen entity one this is

625
00:22:59,359 --> 00:23:03,038
the one that we're

626
00:23:00,480 --> 00:23:05,038
we're presumably not really going to be

627
00:23:03,038 --> 00:23:06,640
using anymore so instead this is the one

628
00:23:05,038 --> 00:23:09,038
that would take the tag builder so this

629
00:23:06,640 --> 00:23:11,280
would take

630
00:23:09,038 --> 00:23:11,279
um

631
00:23:15,119 --> 00:23:18,879
sorry i'm so slow today uh so that would

632
00:23:17,599 --> 00:23:20,798
this is the one that would take

633
00:23:18,880 --> 00:23:22,159
the gen eddie tag builder so this one

634
00:23:20,798 --> 00:23:25,279
right here

635
00:23:22,159 --> 00:23:28,400
that will always use this

636
00:23:25,279 --> 00:23:30,158
like so and it doesn't need the f32

637
00:23:28,400 --> 00:23:32,559
value because that's just not

638
00:23:30,159 --> 00:23:33,200
related right so it will take the

639
00:23:32,558 --> 00:23:36,720
builder

640
00:23:33,200 --> 00:23:40,319
it will use the builder

641
00:23:36,720 --> 00:23:42,240
to push a tag on to the set like so

642
00:23:40,319 --> 00:23:44,079
and it doesn't need the value here

643
00:23:42,240 --> 00:23:45,200
because there is no such thing as the

644
00:23:44,079 --> 00:23:47,599
value

645
00:23:45,200 --> 00:23:48,480
now we may want to do something like

646
00:23:47,599 --> 00:23:50,399
this

647
00:23:48,480 --> 00:23:52,319
and that would just be something that

648
00:23:50,400 --> 00:23:55,440
allows you to snuggle the variant

649
00:23:52,319 --> 00:23:57,119
in here um so we could do something like

650
00:23:55,440 --> 00:23:58,480
you know oh there's facing direction and

651
00:23:57,119 --> 00:24:01,119
variant or in here

652
00:23:58,480 --> 00:24:02,319
but i don't think we really want that

653
00:24:01,119 --> 00:24:05,519
necessarily uh

654
00:24:02,319 --> 00:24:07,519
i mean maybe we do sometimes we do want

655
00:24:05,519 --> 00:24:11,839
to specify that facing direction

656
00:24:07,519 --> 00:24:15,918
and so uh you know i'm not sure

657
00:24:11,839 --> 00:24:18,079
it's hard to say if you go look um

658
00:24:15,919 --> 00:24:19,600
at the way we would have to do that

659
00:24:18,079 --> 00:24:21,119
facing direction is kind of tricky

660
00:24:19,599 --> 00:24:22,879
because it kind of wants to come

661
00:24:21,119 --> 00:24:25,199
from the entity itself but you can

662
00:24:22,880 --> 00:24:28,159
imagine wanting facing directions

663
00:24:25,200 --> 00:24:28,798
to be specified rigidly for things like

664
00:24:28,159 --> 00:24:30,960
scenery

665
00:24:28,798 --> 00:24:33,038
assets that can face multiple directions

666
00:24:30,960 --> 00:24:34,400
that are just stationary

667
00:24:33,038 --> 00:24:36,000
and so i don't really know what you

668
00:24:34,400 --> 00:24:37,360
would do with that but i suspect what we

669
00:24:36,000 --> 00:24:39,278
would want to do with that

670
00:24:37,359 --> 00:24:41,038
is you would actually want that not to

671
00:24:39,278 --> 00:24:43,519
be specified on the tag builder

672
00:24:41,038 --> 00:24:44,480
but rather to be specified on the entity

673
00:24:43,519 --> 00:24:45,918
so in other words

674
00:24:44,480 --> 00:24:47,599
you would probably do something like

675
00:24:45,919 --> 00:24:48,559
this where you have the facing direction

676
00:24:47,599 --> 00:24:50,879
specified

677
00:24:48,558 --> 00:24:52,798
and then the entity type itself when you

678
00:24:50,880 --> 00:24:55,039
look at that

679
00:24:52,798 --> 00:24:56,558
is going to have a facing direction and

680
00:24:55,038 --> 00:24:57,679
that facing direction would just be

681
00:24:56,558 --> 00:24:59,839
specified here

682
00:24:57,679 --> 00:25:01,120
you know specifically right at some

683
00:24:59,839 --> 00:25:04,798
point we've gotta like port

684
00:25:01,119 --> 00:25:08,959
fully to like f32s instead of r32s right

685
00:25:04,798 --> 00:25:11,839
so yeah um but anyway

686
00:25:08,960 --> 00:25:13,200
uh so if you imagine moving forward from

687
00:25:11,839 --> 00:25:15,359
here we would say that the facing

688
00:25:13,200 --> 00:25:18,798
direction went on the gen entity

689
00:25:15,359 --> 00:25:19,759
um i'm not sure why gen create entity is

690
00:25:18,798 --> 00:25:21,200
oh because it's a

691
00:25:19,759 --> 00:25:23,119
pound of fine it's like that's not why

692
00:25:21,200 --> 00:25:25,440
it's not highlighted um

693
00:25:23,119 --> 00:25:26,158
so the genetic tag builder we would have

694
00:25:25,440 --> 00:25:30,080
one of those

695
00:25:26,159 --> 00:25:33,760
plus a facing direction in here

696
00:25:30,079 --> 00:25:35,759
like so uh and then any time anyone was

697
00:25:33,759 --> 00:25:37,119
specifying something from that they

698
00:25:35,759 --> 00:25:38,720
would specify it

699
00:25:37,119 --> 00:25:40,319
by specifically targeting the tag

700
00:25:38,720 --> 00:25:41,440
builder right

701
00:25:40,319 --> 00:25:43,759
so in this case where we're doing

702
00:25:41,440 --> 00:25:44,720
something like place cat and this needs

703
00:25:43,759 --> 00:25:48,158
to add a tag

704
00:25:44,720 --> 00:25:52,000
for cat on here right instead of result

705
00:25:48,159 --> 00:25:54,159
it's going to be like result tags

706
00:25:52,000 --> 00:25:55,359
but that's it uh and oh then of course

707
00:25:54,159 --> 00:25:58,240
we don't need

708
00:25:55,359 --> 00:25:59,678
the 1.0 anymore and that would be true

709
00:25:58,240 --> 00:26:01,200
for any of these things

710
00:25:59,679 --> 00:26:02,640
and then when we have facing direction

711
00:26:01,200 --> 00:26:03,919
like this where you're going to specify

712
00:26:02,640 --> 00:26:04,559
the facing direction like i saying

713
00:26:03,919 --> 00:26:06,640
before

714
00:26:04,558 --> 00:26:07,678
that would actually be like a tag

715
00:26:06,640 --> 00:26:09,679
specifier

716
00:26:07,679 --> 00:26:10,798
so the facing direction would actually

717
00:26:09,679 --> 00:26:14,240
be

718
00:26:10,798 --> 00:26:16,400
specified thus right so

719
00:26:14,240 --> 00:26:17,919
i think that's basically what we would

720
00:26:16,400 --> 00:26:20,320
need

721
00:26:17,919 --> 00:26:21,200
is not a member that's a good point i

722
00:26:20,319 --> 00:26:24,240
meant

723
00:26:21,200 --> 00:26:25,840
that so i think that's all we would

724
00:26:24,240 --> 00:26:26,400
really need and now it's just a question

725
00:26:25,839 --> 00:26:27,839
of of

726
00:26:26,400 --> 00:26:29,759
turning through the code uh and

727
00:26:27,839 --> 00:26:30,158
basically porting this old code that we

728
00:26:29,759 --> 00:26:33,440
had

729
00:26:30,159 --> 00:26:36,880
and making it work uh properly right

730
00:26:33,440 --> 00:26:39,120
okay um i think that's it

731
00:26:36,880 --> 00:26:40,159
i don't know why that looks like this we

732
00:26:39,119 --> 00:26:42,239
don't need the gen

733
00:26:40,159 --> 00:26:43,520
to be passed anymore so all of that

734
00:26:42,240 --> 00:26:46,480
should be fine

735
00:26:43,519 --> 00:26:47,839
um in fact all of these are now more

736
00:26:46,480 --> 00:26:48,880
simple because they don't actually

737
00:26:47,839 --> 00:26:52,000
require

738
00:26:48,880 --> 00:26:54,480
uh any of that stuff the orphan name tag

739
00:26:52,000 --> 00:26:56,079
here does go second so again i'm i'm

740
00:26:54,480 --> 00:26:59,839
seeing mostly what's happening

741
00:26:56,079 --> 00:27:02,158
is the tags are already um

742
00:26:59,839 --> 00:27:03,038
they already appear to be going in the

743
00:27:02,159 --> 00:27:05,679
order uh

744
00:27:03,038 --> 00:27:07,599
that we would want them to appear so it

745
00:27:05,679 --> 00:27:08,240
seems like we don't really have much

746
00:27:07,599 --> 00:27:10,399
work to do

747
00:27:08,240 --> 00:27:12,240
there and so that again suggests that

748
00:27:10,400 --> 00:27:15,600
maybe we just don't care

749
00:27:12,240 --> 00:27:18,798
about making the order non-specific

750
00:27:15,599 --> 00:27:20,639
so that seems fine uh we've got some

751
00:27:18,798 --> 00:27:21,278
like test code here that was adding some

752
00:27:20,640 --> 00:27:24,399
scenery

753
00:27:21,278 --> 00:27:26,960
uh we'll go ahead and put that in there

754
00:27:24,398 --> 00:27:27,918
i really do want to know and i and you

755
00:27:26,960 --> 00:27:31,200
know

756
00:27:27,919 --> 00:27:32,960
at this point i've got a

757
00:27:31,200 --> 00:27:35,840
oops this one is actually just a facing

758
00:27:32,960 --> 00:27:35,840
direction

759
00:27:37,839 --> 00:27:42,319
i really do have to take a look at my

760
00:27:40,240 --> 00:27:44,880
list of things here

761
00:27:42,319 --> 00:27:45,439
i don't remember where it ended up but i

762
00:27:44,880 --> 00:27:47,600
had

763
00:27:45,440 --> 00:27:48,640
a set of things that needed to get

764
00:27:47,599 --> 00:27:51,439
looked at

765
00:27:48,640 --> 00:27:52,000
here it is uh and i just have to make

766
00:27:51,440 --> 00:27:55,278
sure

767
00:27:52,000 --> 00:27:58,720
that all of that it looks like the mark

768
00:27:55,278 --> 00:28:02,398
vertical got done already but i need to

769
00:27:58,720 --> 00:28:03,839
uh i need to go ahead and turn through

770
00:28:02,398 --> 00:28:07,119
my list here

771
00:28:03,839 --> 00:28:11,519
of four coder things that are still uh

772
00:28:07,119 --> 00:28:11,519
still there and

773
00:28:11,599 --> 00:28:14,798
it looks like

774
00:28:15,839 --> 00:28:18,079
um

775
00:28:20,079 --> 00:28:25,839
it looks like yeah i've got this on my

776
00:28:21,919 --> 00:28:25,840
list with the token movements

777
00:28:28,839 --> 00:28:34,879
um

778
00:28:31,759 --> 00:28:36,720
so the token movements

779
00:28:34,880 --> 00:28:40,159
are still kind of busted so when i

780
00:28:36,720 --> 00:28:46,159
delete something it deletes way too much

781
00:28:40,159 --> 00:28:46,159
yeah but i've done most of these

782
00:28:53,200 --> 00:28:57,038
so we're almost there on the editor side

783
00:28:55,278 --> 00:28:59,759
of things we're almost there

784
00:28:57,038 --> 00:29:02,480
but not quite um i'll have to remember

785
00:28:59,759 --> 00:29:03,839
to look at some of those

786
00:29:02,480 --> 00:29:05,519
i'll talk to ryan about it we're still

787
00:29:03,839 --> 00:29:06,720
waiting for allen to ship the new four

788
00:29:05,519 --> 00:29:09,839
coder

789
00:29:06,720 --> 00:29:10,880
um beta so i think ryan and i are both

790
00:29:09,839 --> 00:29:14,079
kind of waiting

791
00:29:10,880 --> 00:29:15,600
um we both contributed some code uh some

792
00:29:14,079 --> 00:29:17,439
new code stuff

793
00:29:15,599 --> 00:29:19,599
to it and uh we're just waiting for that

794
00:29:17,440 --> 00:29:21,759
to to actually get baked

795
00:29:19,599 --> 00:29:22,879
um so i don't know what the status is of

796
00:29:21,759 --> 00:29:26,158
that hopefully

797
00:29:22,880 --> 00:29:29,840
not too long for a new four coder but

798
00:29:26,159 --> 00:29:31,440
uh we'll see anyway uh so again just

799
00:29:29,839 --> 00:29:33,439
these are pretty straightforward right

800
00:29:31,440 --> 00:29:34,240
we're just gonna change these so that

801
00:29:33,440 --> 00:29:36,159
the tags

802
00:29:34,240 --> 00:29:38,159
get added on these little tag builder

803
00:29:36,159 --> 00:29:42,960
things um

804
00:29:38,159 --> 00:29:42,960
you can see here like so

805
00:29:53,038 --> 00:29:56,558
uh and i think that's all we really

806
00:29:54,640 --> 00:30:01,360
needed this now needs to get

807
00:29:56,558 --> 00:30:01,359
written because it hasn't been right um

808
00:30:04,640 --> 00:30:10,399
i'm not sure what this is about i don't

809
00:30:08,079 --> 00:30:13,918
know why this got highlighted actually

810
00:30:10,398 --> 00:30:13,918
does anybody else know why

811
00:30:15,119 --> 00:30:18,798
i have to go over there to read it

812
00:30:16,960 --> 00:30:21,120
although i just read it at the bottom i

813
00:30:18,798 --> 00:30:22,639
shouldn't have done that um function

814
00:30:21,119 --> 00:30:25,278
does not take three arguments

815
00:30:22,640 --> 00:30:27,038
get entity at traversable does not take

816
00:30:25,278 --> 00:30:29,359
three arguments

817
00:30:27,038 --> 00:30:29,359
really

818
00:30:30,720 --> 00:30:33,679
where is that function

819
00:30:34,159 --> 00:30:39,039
so somehow get entity at traversible is

820
00:30:36,398 --> 00:30:39,038
not found

821
00:30:42,159 --> 00:30:45,440
how is that possible that there can be

822
00:30:43,759 --> 00:30:46,480
no matches when it's actually

823
00:30:45,440 --> 00:30:50,798
highlighted

824
00:30:46,480 --> 00:30:53,519
like it has to be somewhere right

825
00:30:50,798 --> 00:30:54,639
so it seems a little weird that there

826
00:30:53,519 --> 00:30:57,839
isn't one

827
00:30:54,640 --> 00:31:00,480
um one would assume that

828
00:30:57,839 --> 00:31:01,439
get entity at traversible exists in here

829
00:31:00,480 --> 00:31:03,120
somewhere

830
00:31:01,440 --> 00:31:19,840
like in the sim region for example is

831
00:31:03,119 --> 00:31:19,839
where i'd probably expect it to be um

832
00:31:21,919 --> 00:31:24,960
that's really strange

833
00:31:28,319 --> 00:31:32,319
so how is it possible that this is found

834
00:31:31,119 --> 00:31:35,518
by the indexor

835
00:31:32,319 --> 00:31:38,639
but four coder literally can't find it

836
00:31:35,519 --> 00:31:42,159
right is that just a bug

837
00:31:38,640 --> 00:31:47,840
um so let's

838
00:31:42,159 --> 00:31:47,840
let's take a look

839
00:31:55,839 --> 00:32:01,839
what's the actual code hold on a second

840
00:32:04,319 --> 00:32:11,119
the strings and then the path

841
00:32:07,839 --> 00:32:14,158
right get

842
00:32:11,119 --> 00:32:16,879
entity at

843
00:32:14,159 --> 00:32:16,880
traversible

844
00:32:17,359 --> 00:32:25,038
well it didn't find it so how so what

845
00:32:20,798 --> 00:32:25,038
so this must not actually

846
00:32:25,440 --> 00:32:28,720
it's but it says right there c

847
00:32:26,880 --> 00:32:33,679
declaration

848
00:32:28,720 --> 00:32:33,679
of get entity at traversible right

849
00:32:33,839 --> 00:32:38,959
i'm so confused right now also this one

850
00:32:36,398 --> 00:32:38,959
compiled

851
00:32:40,240 --> 00:32:43,839
oh wow i'm typing it wrong

852
00:32:44,640 --> 00:32:50,320
about slow day uh

853
00:32:48,720 --> 00:32:51,919
all right so the question here is just

854
00:32:50,319 --> 00:32:52,879
what does it actually need and it needs

855
00:32:51,919 --> 00:32:57,840
in this case

856
00:32:52,880 --> 00:32:57,840
um a uh

857
00:32:58,398 --> 00:33:04,879
rip uh so anyway uh

858
00:33:02,079 --> 00:33:06,879
this needs the base hash so it's just

859
00:33:04,880 --> 00:33:11,360
wants

860
00:33:06,880 --> 00:33:13,039
in addition to the uh in addition to the

861
00:33:11,359 --> 00:33:14,558
thing it's standing on right when it

862
00:33:13,038 --> 00:33:17,038
actually does a gen

863
00:33:14,558 --> 00:33:18,480
entity at that it needs to know what the

864
00:33:17,038 --> 00:33:20,398
actual tags are

865
00:33:18,480 --> 00:33:21,679
so you can see here like the get tree

866
00:33:20,398 --> 00:33:25,038
tags bit

867
00:33:21,679 --> 00:33:27,200
is going on um we don't actually

868
00:33:25,038 --> 00:33:29,440
so the only thing about that is it

869
00:33:27,200 --> 00:33:30,650
doesn't use that

870
00:33:29,440 --> 00:33:32,720
right um

871
00:33:30,650 --> 00:33:35,360
[Music]

872
00:33:32,720 --> 00:33:36,079
so we actually don't care what this

873
00:33:35,359 --> 00:33:37,918
passes

874
00:33:36,079 --> 00:33:40,158
as far as i know because it doesn't

875
00:33:37,919 --> 00:33:43,360
actually add oh it does no it does

876
00:33:40,159 --> 00:33:45,440
add tag lamp so it does actually uh

877
00:33:43,359 --> 00:33:46,959
want that so we can actually do we can

878
00:33:45,440 --> 00:33:51,360
say uh

879
00:33:46,960 --> 00:33:53,600
get asset piece or get peace asset right

880
00:33:51,359 --> 00:33:55,918
so that's that's not true we can say

881
00:33:53,599 --> 00:33:59,038
look we wanted a tag lamp

882
00:33:55,919 --> 00:34:00,720
um it's scenery

883
00:33:59,038 --> 00:34:02,398
uh and we just didn't have anything else

884
00:34:00,720 --> 00:34:05,600
there wasn't anything else in here right

885
00:34:02,398 --> 00:34:06,959
so it was just just a tag lamp uh and

886
00:34:05,599 --> 00:34:10,799
off it goes

887
00:34:06,960 --> 00:34:12,960
now the there is one sort of uh

888
00:34:10,800 --> 00:34:14,000
there is one sort of weirdness there

889
00:34:12,960 --> 00:34:18,800
which is to say

890
00:34:14,000 --> 00:34:22,159
that i don't actually know

891
00:34:18,800 --> 00:34:25,519
the the tags file right so

892
00:34:22,159 --> 00:34:27,119
if we go into base game and we look at

893
00:34:25,519 --> 00:34:29,519
what lamp has

894
00:34:27,119 --> 00:34:32,399
so we look here you can see that it's

895
00:34:29,519 --> 00:34:34,239
the orphan lamp that's being placed here

896
00:34:32,398 --> 00:34:35,519
um so there's orphan lamp and orphan

897
00:34:34,239 --> 00:34:39,118
lamp large

898
00:34:35,519 --> 00:34:42,000
for example um and

899
00:34:39,119 --> 00:34:44,240
so i don't know to what extent we want

900
00:34:42,000 --> 00:34:47,039
that to remain but presumably

901
00:34:44,239 --> 00:34:48,158
we do want to specify that in its

902
00:34:47,039 --> 00:34:50,000
entirety

903
00:34:48,159 --> 00:34:51,519
in its entirety and whether we want to

904
00:34:50,000 --> 00:34:55,280
be large or not i suppose

905
00:34:51,519 --> 00:34:56,960
is irrelevant but um

906
00:34:55,280 --> 00:34:58,400
we at least need to specify those two

907
00:34:56,960 --> 00:35:01,599
things

908
00:34:58,400 --> 00:35:03,519
if we then look over here uh at

909
00:35:01,599 --> 00:35:05,200
the next problem we've got we don't want

910
00:35:03,519 --> 00:35:06,639
that one um these should all be

911
00:35:05,199 --> 00:35:10,239
basically the same so here

912
00:35:06,639 --> 00:35:12,239
we're placing um we're placing the

913
00:35:10,239 --> 00:35:15,039
actual entities in here

914
00:35:12,239 --> 00:35:15,439
this again this part which was being

915
00:35:15,039 --> 00:35:18,079
done

916
00:35:15,440 --> 00:35:19,280
previously is now like doesn't even need

917
00:35:18,079 --> 00:35:21,680
to exist anymore

918
00:35:19,280 --> 00:35:22,720
because we can do it in one go so this

919
00:35:21,679 --> 00:35:26,319
is just going to do

920
00:35:22,719 --> 00:35:29,759
be a a get piece asset call that

921
00:35:26,320 --> 00:35:33,838
passes in the that tag

922
00:35:29,760 --> 00:35:36,400
builder right so the pending entity

923
00:35:33,838 --> 00:35:36,880
tags will get placed we'll get passed to

924
00:35:36,400 --> 00:35:40,400
that

925
00:35:36,880 --> 00:35:40,960
for get piece asset and that's all we'll

926
00:35:40,400 --> 00:35:43,280
need

927
00:35:40,960 --> 00:35:44,000
the only thing we don't know here is

928
00:35:43,280 --> 00:35:48,079
what type

929
00:35:44,000 --> 00:35:51,358
of entity this actually is right so

930
00:35:48,079 --> 00:35:54,079
that part is a little confusing like

931
00:35:51,358 --> 00:35:56,559
when we do gen entity at traversible

932
00:35:54,079 --> 00:35:58,000
and it passes that in it doesn't know

933
00:35:56,559 --> 00:36:00,799
which one this is

934
00:35:58,000 --> 00:36:01,199
so presumably for this case we would

935
00:36:00,800 --> 00:36:04,400
pass

936
00:36:01,199 --> 00:36:07,358
asset none and then the asset itself

937
00:36:04,400 --> 00:36:09,760
gets filled in right late by the actual

938
00:36:07,358 --> 00:36:12,078
gen code when it puts in the different

939
00:36:09,760 --> 00:36:14,400
asset base types like the body and the

940
00:36:12,079 --> 00:36:15,760
head or whatever else it needs

941
00:36:14,400 --> 00:36:17,838
so i think that's more or less what

942
00:36:15,760 --> 00:36:20,400
we're doing

943
00:36:17,838 --> 00:36:21,279
uh and so then the only question here is

944
00:36:20,400 --> 00:36:22,880
like

945
00:36:21,280 --> 00:36:24,880
where you know we got to write this

946
00:36:22,880 --> 00:36:25,599
function but that's but that's basically

947
00:36:24,880 --> 00:36:29,039
it

948
00:36:25,599 --> 00:36:33,359
so ingen entity where that code is here

949
00:36:29,039 --> 00:36:36,880
um oops gen or entitygen

950
00:36:33,358 --> 00:36:39,279
uh and we've got that

951
00:36:36,880 --> 00:36:40,160
that call to do get piece asset we kind

952
00:36:39,280 --> 00:36:43,440
of just need

953
00:36:40,159 --> 00:36:46,399
entity piece asset here again uh

954
00:36:43,440 --> 00:36:47,599
and this it's the same code as this it's

955
00:36:46,400 --> 00:36:52,000
just

956
00:36:47,599 --> 00:36:52,000
it needs and it also needs the variant

957
00:36:52,838 --> 00:36:58,719
right

958
00:36:55,440 --> 00:37:01,599
um so that get piece asset call

959
00:36:58,719 --> 00:37:01,598
which exists here

960
00:37:04,239 --> 00:37:07,598
will default to being the zero variant

961
00:37:06,320 --> 00:37:10,720
doesn't matter

962
00:37:07,599 --> 00:37:12,000
um so when we actually have the call

963
00:37:10,719 --> 00:37:16,078
that passes

964
00:37:12,000 --> 00:37:19,599
the uh the asset basic category

965
00:37:16,079 --> 00:37:22,640
and then the uh the tag builder

966
00:37:19,599 --> 00:37:25,680
so the gen entity tag builder uh

967
00:37:22,639 --> 00:37:28,239
and then the variant oh no the variant's

968
00:37:25,679 --> 00:37:28,239
already on there

969
00:37:28,480 --> 00:37:31,760
uh all we need to do is just sort of

970
00:37:30,239 --> 00:37:34,399
feed this forward

971
00:37:31,760 --> 00:37:36,640
right so we just need to say like okay

972
00:37:34,400 --> 00:37:39,440
if this is what you're producing

973
00:37:36,639 --> 00:37:41,598
uh then the result is just going to be a

974
00:37:39,440 --> 00:37:44,800
call to the more explicit version

975
00:37:41,599 --> 00:37:45,838
that passes cat and then passes the four

976
00:37:44,800 --> 00:37:49,280
tags

977
00:37:45,838 --> 00:37:51,838
that exist right and since those tags

978
00:37:49,280 --> 00:37:53,839
will be initialized to asset none anyway

979
00:37:51,838 --> 00:37:55,199
uh we don't actually have to worry about

980
00:37:53,838 --> 00:37:58,000
that part

981
00:37:55,199 --> 00:37:59,358
uh because we'll just be passing you

982
00:37:58,000 --> 00:38:01,920
know the zero value through

983
00:37:59,358 --> 00:38:01,920
as we go

984
00:38:03,199 --> 00:38:09,118
so that's pretty much it and uh

985
00:38:06,400 --> 00:38:10,000
yeah if four coder is completely broken

986
00:38:09,119 --> 00:38:11,519
right now like i said we're still

987
00:38:10,000 --> 00:38:14,079
waiting for allen to fix it

988
00:38:11,519 --> 00:38:15,519
uh so we you know we the indentation is

989
00:38:14,079 --> 00:38:18,800
just completely broken

990
00:38:15,519 --> 00:38:20,960
um and i have no idea why uh

991
00:38:18,800 --> 00:38:22,480
i believe ryan said it had something to

992
00:38:20,960 --> 00:38:26,079
do with the fact that like

993
00:38:22,480 --> 00:38:27,920
there was some call that it was making

994
00:38:26,079 --> 00:38:30,640
about parentheses that was

995
00:38:27,920 --> 00:38:31,440
like that maybe the four code or flurry

996
00:38:30,639 --> 00:38:34,239
code was

997
00:38:31,440 --> 00:38:35,679
not returning the right value so it may

998
00:38:34,239 --> 00:38:37,199
actually not be the four code is broken

999
00:38:35,679 --> 00:38:39,039
it's like the customization layers

1000
00:38:37,199 --> 00:38:40,719
broker and i i still don't know

1001
00:38:39,039 --> 00:38:42,320
um so again waiting for that i was

1002
00:38:40,719 --> 00:38:44,159
really hoping for that this week but

1003
00:38:42,320 --> 00:38:47,838
maybe next week i'll i'll bug out about

1004
00:38:44,159 --> 00:38:47,838
see where we're at

1005
00:38:50,159 --> 00:38:59,358
um so i think that's

1006
00:38:54,079 --> 00:39:02,960
all we need for that um we've got

1007
00:38:59,358 --> 00:39:02,960
some complaint here

1008
00:39:04,239 --> 00:39:10,239
about oh so we don't need these

1009
00:39:07,838 --> 00:39:11,279
to be indirected anymore these can just

1010
00:39:10,239 --> 00:39:14,399
be direct

1011
00:39:11,280 --> 00:39:16,160
right um

1012
00:39:14,400 --> 00:39:18,480
so when we're actually doing these gen

1013
00:39:16,159 --> 00:39:20,960
entity tags none of this

1014
00:39:18,480 --> 00:39:22,719
this is all nonsense right that doesn't

1015
00:39:20,960 --> 00:39:25,280
have to happen anymore

1016
00:39:22,719 --> 00:39:27,598
uh and so when we're adding tags to the

1017
00:39:25,280 --> 00:39:32,400
tag builder we can just

1018
00:39:27,599 --> 00:39:32,400
add them right so we can just do this

1019
00:39:34,239 --> 00:39:38,639
and we don't need it to be fancy anymore

1020
00:39:40,838 --> 00:39:46,480
and so

1021
00:39:43,440 --> 00:39:49,838
in theory

1022
00:39:46,480 --> 00:39:53,119
this will just work now

1023
00:39:49,838 --> 00:39:56,320
um get piece asset it has a

1024
00:39:53,119 --> 00:39:57,119
basic category the tag builder oh and i

1025
00:39:56,320 --> 00:40:00,240
forgot

1026
00:39:57,119 --> 00:40:02,559
the variant override so in this case

1027
00:40:00,239 --> 00:40:03,919
we we do want a way to override the

1028
00:40:02,559 --> 00:40:06,000
variant probably

1029
00:40:03,920 --> 00:40:07,838
although actually no why would we do

1030
00:40:06,000 --> 00:40:09,599
that we don't really need that

1031
00:40:07,838 --> 00:40:11,119
so instead what we should do here is

1032
00:40:09,599 --> 00:40:13,280
just set that variant

1033
00:40:11,119 --> 00:40:14,480
right so we should say like tag builder

1034
00:40:13,280 --> 00:40:16,640
variant equals

1035
00:40:14,480 --> 00:40:18,480
random unilateral right like if we want

1036
00:40:16,639 --> 00:40:19,440
that we should just set it before we

1037
00:40:18,480 --> 00:40:22,480
make the call

1038
00:40:19,440 --> 00:40:25,679
that seems better right

1039
00:40:22,480 --> 00:40:27,119
okay with entity visible piece here

1040
00:40:25,679 --> 00:40:29,838
where we're adding this piece

1041
00:40:27,119 --> 00:40:31,599
in um again this is just pretty

1042
00:40:29,838 --> 00:40:32,400
straightforward i think this just wants

1043
00:40:31,599 --> 00:40:34,318
to be

1044
00:40:32,400 --> 00:40:36,000
reorganized slightly so that we add the

1045
00:40:34,318 --> 00:40:38,000
piece after the fact

1046
00:40:36,000 --> 00:40:40,079
here we can get the asset tag directly

1047
00:40:38,000 --> 00:40:41,599
we don't have to use a builder for any

1048
00:40:40,079 --> 00:40:42,160
particular reason so what we can

1049
00:40:41,599 --> 00:40:45,359
actually do is

1050
00:40:42,159 --> 00:40:46,639
roll these all into this the one call uh

1051
00:40:45,358 --> 00:40:50,318
so we can just say like

1052
00:40:46,639 --> 00:40:53,679
get uh get peace asset it's a block

1053
00:40:50,318 --> 00:40:58,318
that's a floor grass block

1054
00:40:53,679 --> 00:40:58,318
um and that's it right

1055
00:40:58,480 --> 00:41:02,880
and we can pass variants to these if we

1056
00:41:01,358 --> 00:41:04,400
want later but at the moment i suppose

1057
00:41:02,880 --> 00:41:07,440
we don't really need to

1058
00:41:04,400 --> 00:41:08,000
um although maybe we should if we look

1059
00:41:07,440 --> 00:41:11,358
here

1060
00:41:08,000 --> 00:41:14,800
at adding the tree tags uh that's

1061
00:41:11,358 --> 00:41:16,799
been replaced by get tree tags and so if

1062
00:41:14,800 --> 00:41:19,119
we do a get tree tags

1063
00:41:16,800 --> 00:41:20,720
and pass that along that just produces

1064
00:41:19,119 --> 00:41:24,000
the thing we actually needed

1065
00:41:20,719 --> 00:41:27,279
so when we do gen entity at

1066
00:41:24,000 --> 00:41:29,280
p we just pass that

1067
00:41:27,280 --> 00:41:30,480
result of that that produces the tags we

1068
00:41:29,280 --> 00:41:35,040
wanted uh

1069
00:41:30,480 --> 00:41:37,280
and then we're done we

1070
00:41:35,039 --> 00:41:38,719
need to now look at anything else that's

1071
00:41:37,280 --> 00:41:40,640
all our compile errors

1072
00:41:38,719 --> 00:41:42,639
um we're not out of the woods yet

1073
00:41:40,639 --> 00:41:44,078
because we haven't actually written all

1074
00:41:42,639 --> 00:41:46,799
the code that we need

1075
00:41:44,079 --> 00:41:48,240
uh that's like a nominal port but the

1076
00:41:46,800 --> 00:41:50,560
asset system

1077
00:41:48,239 --> 00:41:51,838
is not actually going to be putting

1078
00:41:50,559 --> 00:41:54,639
anything into this

1079
00:41:51,838 --> 00:41:55,440
tag hash so if we ran the game now it

1080
00:41:54,639 --> 00:41:57,838
would just

1081
00:41:55,440 --> 00:41:59,519
roll over and die because it doesn't

1082
00:41:57,838 --> 00:42:03,358
have any way to access

1083
00:41:59,519 --> 00:42:06,159
like any assets at all right

1084
00:42:03,358 --> 00:42:06,799
so if you imagine us you know running it

1085
00:42:06,159 --> 00:42:10,000
here

1086
00:42:06,800 --> 00:42:11,599
uh all we're gonna do is yeah and you

1087
00:42:10,000 --> 00:42:14,639
can you can see

1088
00:42:11,599 --> 00:42:15,519
um we're just gonna get garbage out of

1089
00:42:14,639 --> 00:42:18,639
here

1090
00:42:15,519 --> 00:42:22,159
and we're not going to find any assets

1091
00:42:18,639 --> 00:42:24,879
for anything so uh

1092
00:42:22,159 --> 00:42:26,559
let me let me switch to a debug build

1093
00:42:24,880 --> 00:42:31,200
here

1094
00:42:26,559 --> 00:42:33,679
um just so we can get our

1095
00:42:31,199 --> 00:42:35,279
our errors better uh but what we're

1096
00:42:33,679 --> 00:42:37,440
gonna have to do now is

1097
00:42:35,280 --> 00:42:38,560
when we start loading assets we have to

1098
00:42:37,440 --> 00:42:41,358
actually put them

1099
00:42:38,559 --> 00:42:45,838
into the hash you know what i'm saying

1100
00:42:41,358 --> 00:42:45,838
so let's go ahead and do that

1101
00:42:52,329 --> 00:42:55,400
[Music]

1102
00:42:56,838 --> 00:42:59,838
uh

1103
00:43:01,679 --> 00:43:04,078
okay

1104
00:43:09,599 --> 00:43:12,960
so i'm not sure exactly why this is

1105
00:43:12,400 --> 00:43:15,119
failing

1106
00:43:12,960 --> 00:43:17,280
in this way so it might be interesting

1107
00:43:15,119 --> 00:43:19,920
to just kind of

1108
00:43:17,280 --> 00:43:20,480
look at what's happening here it could

1109
00:43:19,920 --> 00:43:24,000
be

1110
00:43:20,480 --> 00:43:27,039
that somebody's not properly returning

1111
00:43:24,000 --> 00:43:29,519
like a a cleared value when they should

1112
00:43:27,039 --> 00:43:31,519
so it might be nice to just you know

1113
00:43:29,519 --> 00:43:33,519
take a quick look at that

1114
00:43:31,519 --> 00:43:35,280
uh and figure out what's going on just

1115
00:43:33,519 --> 00:43:37,280
to remove a bug

1116
00:43:35,280 --> 00:43:39,440
even though we know that this shouldn't

1117
00:43:37,280 --> 00:43:41,839
work it shouldn't fail

1118
00:43:39,440 --> 00:43:42,559
in quite that way i don't think so i'd

1119
00:43:41,838 --> 00:43:46,480
rather

1120
00:43:42,559 --> 00:43:49,279
just be uh clear about it right

1121
00:43:46,480 --> 00:43:50,719
um so if we take a look here when it

1122
00:43:49,280 --> 00:43:53,440
passes the peace cube

1123
00:43:50,719 --> 00:43:54,078
uv layout uh into here that's going to

1124
00:43:53,440 --> 00:43:57,358
call get

1125
00:43:54,079 --> 00:43:59,280
bitmap with this id uh

1126
00:43:57,358 --> 00:44:00,639
and that id is the second thing passed

1127
00:43:59,280 --> 00:44:02,960
right so the thing that it's looking for

1128
00:44:00,639 --> 00:44:05,199
here is this bitmap id

1129
00:44:02,960 --> 00:44:05,199
um

1130
00:44:07,599 --> 00:44:14,000
so it's passing a zero bitmap id so it

1131
00:44:10,880 --> 00:44:16,720
what in here where it says

1132
00:44:14,000 --> 00:44:17,358
get bitmap with an id of zero i feel

1133
00:44:16,719 --> 00:44:19,759
like that

1134
00:44:17,358 --> 00:44:21,279
texture handle is should not be

1135
00:44:19,760 --> 00:44:24,720
returning

1136
00:44:21,280 --> 00:44:24,720
a is valid

1137
00:44:25,280 --> 00:44:32,480
um because 0 should never be valid

1138
00:44:28,960 --> 00:44:35,119
to be fair i suppose it should never

1139
00:44:32,480 --> 00:44:36,000
actually be calling this like if the id

1140
00:44:35,119 --> 00:44:39,760
0 it should just

1141
00:44:36,000 --> 00:44:41,280
skip this all together presumably but

1142
00:44:39,760 --> 00:44:44,319
now that we have a case where that's

1143
00:44:41,280 --> 00:44:47,280
actually happening i kind of want to

1144
00:44:44,318 --> 00:44:49,519
figure out what this should do and do it

1145
00:44:47,280 --> 00:44:49,519
right

1146
00:44:49,679 --> 00:44:54,559
so if we look at what's going on with

1147
00:44:52,079 --> 00:44:57,920
this and we call get asset with

1148
00:44:54,559 --> 00:45:01,279
zero right um the if

1149
00:44:57,920 --> 00:45:04,318
asset call here should

1150
00:45:01,280 --> 00:45:07,359
should this should produce hopefully a

1151
00:45:04,318 --> 00:45:09,039
a null pointer is what we would want

1152
00:45:07,358 --> 00:45:11,119
so what you can see here is it wouldn't

1153
00:45:09,039 --> 00:45:13,759
do that because it's actually

1154
00:45:11,119 --> 00:45:15,440
passing a get asset of zero will

1155
00:45:13,760 --> 00:45:17,599
actually just give you the zero with

1156
00:45:15,440 --> 00:45:20,639
asset

1157
00:45:17,599 --> 00:45:22,720
which presumably i don't know

1158
00:45:20,639 --> 00:45:24,719
why we necessarily do that maybe we

1159
00:45:22,719 --> 00:45:27,199
wanted to produce a null

1160
00:45:24,719 --> 00:45:28,959
asset the problem with producing a null

1161
00:45:27,199 --> 00:45:32,239
asset is i'm not sure what happens

1162
00:45:28,960 --> 00:45:33,838
at that point when you then ask for like

1163
00:45:32,239 --> 00:45:35,279
the texture handle right which would be

1164
00:45:33,838 --> 00:45:37,119
this thing

1165
00:45:35,280 --> 00:45:38,880
but presumably it should just be all

1166
00:45:37,119 --> 00:45:42,559
zeros there

1167
00:45:38,880 --> 00:45:46,240
anyway so we may what we may want to do

1168
00:45:42,559 --> 00:45:49,358
um in this case

1169
00:45:46,239 --> 00:45:49,759
is we may want to spend a little bit of

1170
00:45:49,358 --> 00:45:52,159
time

1171
00:45:49,760 --> 00:45:54,319
making sure like if we actually return a

1172
00:45:52,159 --> 00:45:56,159
null asset that it actually works

1173
00:45:54,318 --> 00:45:58,079
so what probably happened here was

1174
00:45:56,159 --> 00:45:59,039
somebody like loaded one of these things

1175
00:45:58,079 --> 00:46:01,839
in

1176
00:45:59,039 --> 00:46:01,838
um

1177
00:46:11,358 --> 00:46:18,799
so like i'm gonna do this real quick

1178
00:46:15,358 --> 00:46:22,639
because i want to see what happens uh

1179
00:46:18,800 --> 00:46:22,640
just to see right and

1180
00:46:24,880 --> 00:46:29,838
just eliminating the union part of this

1181
00:46:34,239 --> 00:46:40,399
yeah so i think the problem here

1182
00:46:37,358 --> 00:46:42,559
is that uh the null so you can see where

1183
00:46:40,400 --> 00:46:43,680
we run into trouble if we make these a

1184
00:46:42,559 --> 00:46:46,400
union

1185
00:46:43,679 --> 00:46:47,759
then the problem is that the null asset

1186
00:46:46,400 --> 00:46:51,519
being the zero with asset

1187
00:46:47,760 --> 00:46:54,800
always creates a problem for us

1188
00:46:51,519 --> 00:46:57,440
specifically because of the fact that

1189
00:46:54,800 --> 00:46:58,720
it is doesn't know which of these you're

1190
00:46:57,440 --> 00:47:01,358
actually using

1191
00:46:58,719 --> 00:47:02,719
so it can't produce the correct null

1192
00:47:01,358 --> 00:47:05,759
version of each of these

1193
00:47:02,719 --> 00:47:07,199
which is probably what we need so i'm

1194
00:47:05,760 --> 00:47:09,839
going to go ahead and say

1195
00:47:07,199 --> 00:47:11,199
that for now we'll just let that stand

1196
00:47:09,838 --> 00:47:12,960
because it's totally fine

1197
00:47:11,199 --> 00:47:14,639
they're they're not particularly large

1198
00:47:12,960 --> 00:47:16,159
uh like if you look at loaded font i

1199
00:47:14,639 --> 00:47:19,118
don't think it's yeah it's like

1200
00:47:16,159 --> 00:47:20,159
there's really not much in there so

1201
00:47:19,119 --> 00:47:21,280
having this be the asset control

1202
00:47:20,159 --> 00:47:24,960
structure is fine with me

1203
00:47:21,280 --> 00:47:28,559
uh i do think like to do uh

1204
00:47:24,960 --> 00:47:32,240
in the end we probably want to make

1205
00:47:28,559 --> 00:47:35,760
separate asset structs

1206
00:47:32,239 --> 00:47:40,639
uh for each of these because they are

1207
00:47:35,760 --> 00:47:45,920
handled so differently now

1208
00:47:40,639 --> 00:47:45,920
it may not make a whole lot of sense

1209
00:47:46,239 --> 00:47:53,838
to have a single

1210
00:47:49,519 --> 00:47:53,838
large asset type

1211
00:47:54,159 --> 00:48:00,480
um but that seems fine uh

1212
00:47:57,519 --> 00:48:02,239
there's really not a lot else uh that

1213
00:48:00,480 --> 00:48:04,079
needs to happen

1214
00:48:02,239 --> 00:48:06,000
in order for us to run because now we

1215
00:48:04,079 --> 00:48:07,680
run just fine right

1216
00:48:06,000 --> 00:48:09,440
so i think that was all that the problem

1217
00:48:07,679 --> 00:48:11,519
was and we'll leave it at that

1218
00:48:09,440 --> 00:48:12,960
all right so now we need to actually add

1219
00:48:11,519 --> 00:48:16,079
assets into the

1220
00:48:12,960 --> 00:48:19,199
asset hash table because if we don't do

1221
00:48:16,079 --> 00:48:22,000
that then we're not actually

1222
00:48:19,199 --> 00:48:25,039
going to be able to do anything right

1223
00:48:22,000 --> 00:48:28,000
like if we don't add

1224
00:48:25,039 --> 00:48:28,000
uh the asset

1225
00:48:28,318 --> 00:48:32,318
if if we don't add assets into the

1226
00:48:31,039 --> 00:48:35,358
assets by tag

1227
00:48:32,318 --> 00:48:38,480
hash then

1228
00:48:35,358 --> 00:48:39,519
we won't ever find any when we look so

1229
00:48:38,480 --> 00:48:41,119
that's the

1230
00:48:39,519 --> 00:48:42,639
the part that we need to actually take

1231
00:48:41,119 --> 00:48:44,318
care of

1232
00:48:42,639 --> 00:48:45,920
i don't know why this says does this

1233
00:48:44,318 --> 00:48:48,000
need to be a prime hash

1234
00:48:45,920 --> 00:48:51,440
because we know that it doesn't need to

1235
00:48:48,000 --> 00:48:54,800
be a prime hash since we're using

1236
00:48:51,440 --> 00:48:57,440
uh an actual hash function now right uh

1237
00:48:54,800 --> 00:48:57,440
we're using

1238
00:48:58,880 --> 00:49:05,280
we're using a strong hash function

1239
00:49:02,079 --> 00:49:08,000
very strong this should be pretty close

1240
00:49:05,280 --> 00:49:12,079
to random bit distribution

1241
00:49:08,000 --> 00:49:12,079
and we can verify that but

1242
00:49:12,559 --> 00:49:19,200
you know we

1243
00:49:16,239 --> 00:49:19,919
we know we can make this be basically

1244
00:49:19,199 --> 00:49:21,759
random bit

1245
00:49:19,920 --> 00:49:24,079
distribution so we shouldn't need this

1246
00:49:21,760 --> 00:49:26,720
to be a prime hash

1247
00:49:24,079 --> 00:49:27,680
for any reason because the only reason

1248
00:49:26,719 --> 00:49:29,439
you make

1249
00:49:27,679 --> 00:49:30,960
the only reason you ever would make a

1250
00:49:29,440 --> 00:49:33,838
hash table be

1251
00:49:30,960 --> 00:49:35,199
a prime number of entries is if your

1252
00:49:33,838 --> 00:49:37,279
hash function itself

1253
00:49:35,199 --> 00:49:40,078
is weak so if the thing that you're

1254
00:49:37,280 --> 00:49:41,680
using to hash the inputs is weak

1255
00:49:40,079 --> 00:49:43,680
then the bits won't be randomly

1256
00:49:41,679 --> 00:49:44,000
distributed and so having there be a

1257
00:49:43,679 --> 00:49:46,159
prime

1258
00:49:44,000 --> 00:49:48,480
number of entries in the hash makes it

1259
00:49:46,159 --> 00:49:52,078
so that when you do the modulus

1260
00:49:48,480 --> 00:49:53,199
you're not uh biasing towards certain

1261
00:49:52,079 --> 00:49:57,039
bits

1262
00:49:53,199 --> 00:49:58,879
in the uh in the input

1263
00:49:57,039 --> 00:50:00,239
but if you know that all of your bits

1264
00:49:58,880 --> 00:50:02,559
are evenly distributed

1265
00:50:00,239 --> 00:50:03,759
in the hash anyway then you don't ever

1266
00:50:02,559 --> 00:50:05,519
need that so

1267
00:50:03,760 --> 00:50:08,319
how do you verify that well it's pretty

1268
00:50:05,519 --> 00:50:12,239
easy for us to later we could count

1269
00:50:08,318 --> 00:50:13,199
how many assets go into each uh of these

1270
00:50:12,239 --> 00:50:15,358
and we can

1271
00:50:13,199 --> 00:50:17,118
actually look and see if we can just

1272
00:50:15,358 --> 00:50:20,159
take a histogram basically

1273
00:50:17,119 --> 00:50:26,880
and see uh if they are

1274
00:50:20,159 --> 00:50:28,480
right so we can verify that later

1275
00:50:26,880 --> 00:50:29,920
um so what we want to do is fill out

1276
00:50:28,480 --> 00:50:33,119
this assets by tag

1277
00:50:29,920 --> 00:50:34,159
so in this first asset of type nonsense

1278
00:50:33,119 --> 00:50:37,440
here

1279
00:50:34,159 --> 00:50:40,639
what we want to do um is in first assets

1280
00:50:37,440 --> 00:50:41,039
uh first asset of type let me just look

1281
00:50:40,639 --> 00:50:44,480
for

1282
00:50:41,039 --> 00:50:47,440
first asset of type um

1283
00:50:44,480 --> 00:50:48,079
what we're doing is inserting like we're

1284
00:50:47,440 --> 00:50:51,280
inserting

1285
00:50:48,079 --> 00:50:55,119
into that right so if you look at

1286
00:50:51,280 --> 00:50:58,960
uh like set asset type for example

1287
00:50:55,119 --> 00:51:02,000
we want this to now be a more general

1288
00:50:58,960 --> 00:51:05,280
version right and you can see here

1289
00:51:02,000 --> 00:51:05,280
we're talking about it right

1290
00:51:05,358 --> 00:51:08,480
and so what we want to do is actually

1291
00:51:07,199 --> 00:51:12,480
just have a like

1292
00:51:08,480 --> 00:51:14,719
update hash you know uh

1293
00:51:12,480 --> 00:51:15,519
we want like an update hash for this

1294
00:51:14,719 --> 00:51:17,838
thing

1295
00:51:15,519 --> 00:51:19,599
right that's what we want so we want to

1296
00:51:17,838 --> 00:51:23,119
get rid of first asset

1297
00:51:19,599 --> 00:51:24,960
uh and the only place that that was

1298
00:51:23,119 --> 00:51:27,200
being used in the asset lookup

1299
00:51:24,960 --> 00:51:28,559
so now what we want to do is some way of

1300
00:51:27,199 --> 00:51:30,318
of making this

1301
00:51:28,559 --> 00:51:32,079
uh look we want to look at all the

1302
00:51:30,318 --> 00:51:34,400
places that use it right so we want to

1303
00:51:32,079 --> 00:51:35,359
look at all the call sites for set asset

1304
00:51:34,400 --> 00:51:37,358
type

1305
00:51:35,358 --> 00:51:38,960
uh and we want to figure out how to make

1306
00:51:37,358 --> 00:51:41,039
that work so you can see

1307
00:51:38,960 --> 00:51:43,039
here like here's where we're loading

1308
00:51:41,039 --> 00:51:45,358
right so this just is where we load all

1309
00:51:43,039 --> 00:51:47,838
of the asset metadata

1310
00:51:45,358 --> 00:51:49,119
so in here this is one place where we

1311
00:51:47,838 --> 00:51:52,558
would do it

1312
00:51:49,119 --> 00:51:55,599
right we've loaded all the tags

1313
00:51:52,559 --> 00:51:57,680
and you know off off we would go

1314
00:51:55,599 --> 00:51:59,838
and then here's another place where we

1315
00:51:57,679 --> 00:52:03,759
would do it and this is where we update

1316
00:51:59,838 --> 00:52:07,039
the actual asset metadata where we say

1317
00:52:03,760 --> 00:52:09,040
you know here's what's going on so

1318
00:52:07,039 --> 00:52:10,480
i think what we want to do is just

1319
00:52:09,039 --> 00:52:15,199
change this

1320
00:52:10,480 --> 00:52:20,480
um and we want to do something like this

1321
00:52:15,199 --> 00:52:20,480
we want to say like um update

1322
00:52:20,880 --> 00:52:26,800
update asset hash table right

1323
00:52:24,639 --> 00:52:28,558
and we want to pass the assets we want

1324
00:52:26,800 --> 00:52:30,000
to pass the asset index that we're

1325
00:52:28,559 --> 00:52:32,319
trying to update

1326
00:52:30,000 --> 00:52:33,679
and then we need some way of sending it

1327
00:52:32,318 --> 00:52:35,440
like tags

1328
00:52:33,679 --> 00:52:38,719
we need to send it the tags that we

1329
00:52:35,440 --> 00:52:41,440
actually have right

1330
00:52:38,719 --> 00:52:42,399
and what you can see here is this

1331
00:52:41,440 --> 00:52:44,880
actually does

1332
00:52:42,400 --> 00:52:45,599
a bunch of tag appending here like you

1333
00:52:44,880 --> 00:52:48,640
can see it

1334
00:52:45,599 --> 00:52:51,920
you know doing doing this thing and

1335
00:52:48,639 --> 00:52:52,960
uh it looks to see whether the tags

1336
00:52:51,920 --> 00:52:55,358
differ

1337
00:52:52,960 --> 00:52:56,400
and then it does some updating to like

1338
00:52:55,358 --> 00:53:00,558
add the tags

1339
00:52:56,400 --> 00:53:03,760
in uh like here right

1340
00:53:00,559 --> 00:53:05,200
and so what we may want uh and i don't

1341
00:53:03,760 --> 00:53:07,200
really know

1342
00:53:05,199 --> 00:53:09,759
but what we may want to do here is

1343
00:53:07,199 --> 00:53:12,879
remove an asset from the hash table

1344
00:53:09,760 --> 00:53:15,520
at the head of this and then insert it

1345
00:53:12,880 --> 00:53:16,079
to the hash table later so what we may

1346
00:53:15,519 --> 00:53:19,759
want

1347
00:53:16,079 --> 00:53:24,640
is two calls um remove

1348
00:53:19,760 --> 00:53:28,720
asset from hash like so

1349
00:53:24,639 --> 00:53:31,679
uh and we would say this right

1350
00:53:28,719 --> 00:53:33,519
we can preserve this error check because

1351
00:53:31,679 --> 00:53:34,399
apparently this is an error check we

1352
00:53:33,519 --> 00:53:37,759
care about

1353
00:53:34,400 --> 00:53:39,358
right so we'd say remove this asset from

1354
00:53:37,760 --> 00:53:40,880
the hash table

1355
00:53:39,358 --> 00:53:43,039
and if it doesn't exist in the hash

1356
00:53:40,880 --> 00:53:47,358
table at the moment that's fine too

1357
00:53:43,039 --> 00:53:47,920
right and then later down here what we

1358
00:53:47,358 --> 00:53:50,239
can do

1359
00:53:47,920 --> 00:53:53,119
is say once we're done with all of it

1360
00:53:50,239 --> 00:53:53,118
add it back in

1361
00:53:54,838 --> 00:53:58,159
right

1362
00:53:56,000 --> 00:54:00,159
so we can remove it from the hash table

1363
00:53:58,159 --> 00:54:02,318
we can add it to the hash table

1364
00:54:00,159 --> 00:54:04,399
and then what we would do is the other

1365
00:54:02,318 --> 00:54:08,558
place that this gets called

1366
00:54:04,400 --> 00:54:08,559
we would only add it right

1367
00:54:08,639 --> 00:54:11,759
and this is the global asset index is

1368
00:54:10,880 --> 00:54:14,880
what we cared about

1369
00:54:11,760 --> 00:54:18,559
there and off we go so

1370
00:54:14,880 --> 00:54:20,880
now we just need that function right

1371
00:54:18,559 --> 00:54:22,400
um we need to be able to instead of

1372
00:54:20,880 --> 00:54:25,200
doing set asset type

1373
00:54:22,400 --> 00:54:27,358
which is not a thing we would do anymore

1374
00:54:25,199 --> 00:54:31,358
we have a remove asset from hash

1375
00:54:27,358 --> 00:54:35,759
which takes the you know asset index

1376
00:54:31,358 --> 00:54:37,519
uh and an an an ad asset to hash

1377
00:54:35,760 --> 00:54:39,200
and these are like you know functions

1378
00:54:37,519 --> 00:54:43,519
that work together

1379
00:54:39,199 --> 00:54:43,519
uh and so

1380
00:54:43,920 --> 00:54:51,358
we remove asset from hash

1381
00:54:48,000 --> 00:54:53,280
there we go uh and so then our only

1382
00:54:51,358 --> 00:54:55,039
problem is we now have to actually

1383
00:54:53,280 --> 00:54:57,519
figure out how to write this function

1384
00:54:55,039 --> 00:54:59,759
which is nominally pretty easy but there

1385
00:54:57,519 --> 00:55:02,079
is one sort of nasty

1386
00:54:59,760 --> 00:55:03,760
element to it which is that we've never

1387
00:55:02,079 --> 00:55:07,440
actually tried to load

1388
00:55:03,760 --> 00:55:08,960
tags out of the tag set for an asset and

1389
00:55:07,440 --> 00:55:12,639
actually build

1390
00:55:08,960 --> 00:55:14,798
um one of our internal tag hashes from

1391
00:55:12,639 --> 00:55:17,920
it so we need to kind of go

1392
00:55:14,798 --> 00:55:20,159
learn how that works uh

1393
00:55:17,920 --> 00:55:21,280
and so when we remove an asset from a

1394
00:55:20,159 --> 00:55:22,879
hash you know

1395
00:55:21,280 --> 00:55:25,760
or when we add an ass to the hash

1396
00:55:22,880 --> 00:55:28,960
they're both going to use presumably

1397
00:55:25,760 --> 00:55:30,960
uh the same function to compute the hash

1398
00:55:28,960 --> 00:55:33,119
offset uh which is to say they're going

1399
00:55:30,960 --> 00:55:36,798
to spin through the asset set

1400
00:55:33,119 --> 00:55:40,960
and find that asset hash so

1401
00:55:36,798 --> 00:55:40,960
when we look and and this

1402
00:55:42,239 --> 00:55:46,879
get asset from this right here where we

1403
00:55:45,838 --> 00:55:50,000
do

1404
00:55:46,880 --> 00:55:53,039
the hash 32 mod assets by tag so that

1405
00:55:50,000 --> 00:55:53,440
right there um presumably also wants to

1406
00:55:53,039 --> 00:55:57,039
be

1407
00:55:53,440 --> 00:56:00,240
a value like get asset

1408
00:55:57,039 --> 00:56:02,239
hash slot like that and

1409
00:56:00,239 --> 00:56:03,279
this function here would be something

1410
00:56:02,239 --> 00:56:06,639
that takes

1411
00:56:03,280 --> 00:56:06,640
one of these tag hashes

1412
00:56:11,519 --> 00:56:17,519
like this and produces the hash slot in

1413
00:56:15,119 --> 00:56:21,200
question

1414
00:56:17,519 --> 00:56:21,199
so that probably wants to be

1415
00:56:24,639 --> 00:56:29,279
this sort of thing we would return

1416
00:56:29,760 --> 00:56:35,520
the result is the hash slot and that way

1417
00:56:33,358 --> 00:56:37,199
everyone's using the same computation

1418
00:56:35,519 --> 00:56:39,119
right so we know that it's uniform we

1419
00:56:37,199 --> 00:56:40,639
don't have to worry about like how

1420
00:56:39,119 --> 00:56:42,798
that's working

1421
00:56:40,639 --> 00:56:44,480
um so everyone here would do the same

1422
00:56:42,798 --> 00:56:46,318
thing right we'd all

1423
00:56:44,480 --> 00:56:48,559
say well if we're going to add an asset

1424
00:56:46,318 --> 00:56:49,358
to the hash we need to get the asset

1425
00:56:48,559 --> 00:56:51,040
hash lot

1426
00:56:49,358 --> 00:56:53,358
but what you can see is we don't have

1427
00:56:51,039 --> 00:56:56,838
one of these so the other piece of the

1428
00:56:53,358 --> 00:56:59,838
puzzle is we need a way to get that hash

1429
00:56:56,838 --> 00:56:59,838
slot

1430
00:57:00,559 --> 00:57:03,920
from an actual asset

1431
00:57:09,519 --> 00:57:16,719
something like that right so

1432
00:57:12,880 --> 00:57:16,720
we would expect this to do something

1433
00:57:17,838 --> 00:57:21,119
probably it will call this

1434
00:57:22,880 --> 00:57:27,838
from like this tag hash right

1435
00:57:28,159 --> 00:57:31,440
this is the part we don't know

1436
00:57:36,880 --> 00:57:41,838
and everyone's going to call this

1437
00:57:44,400 --> 00:57:47,519
so again i'm just setting this up so

1438
00:57:45,920 --> 00:57:50,480
that everyone can share the code so we

1439
00:57:47,519 --> 00:57:50,480
only have to write it once

1440
00:57:51,838 --> 00:57:55,279
and in both these cases what we need to

1441
00:57:54,000 --> 00:57:58,880
do is

1442
00:57:55,280 --> 00:58:01,760
modify the uh hash itself

1443
00:57:58,880 --> 00:58:02,160
so when we say get asset from hash lot

1444
00:58:01,760 --> 00:58:04,640
um

1445
00:58:02,159 --> 00:58:05,838
we're then going to loop through and we

1446
00:58:04,639 --> 00:58:08,719
can see that code

1447
00:58:05,838 --> 00:58:09,440
in fact right here when it's doing the

1448
00:58:08,719 --> 00:58:12,719
checking

1449
00:58:09,440 --> 00:58:23,358
right um

1450
00:58:12,719 --> 00:58:26,639
so it would look a little bit like this

1451
00:58:23,358 --> 00:58:29,920
we'd load out the first one we would

1452
00:58:26,639 --> 00:58:31,199
loop through like so exactly the way

1453
00:58:29,920 --> 00:58:33,920
this was doing

1454
00:58:31,199 --> 00:58:35,039
um oops this is in the wrong function

1455
00:58:33,920 --> 00:58:37,358
there we go

1456
00:58:35,039 --> 00:58:38,318
um so we looped through and we would try

1457
00:58:37,358 --> 00:58:41,920
to find

1458
00:58:38,318 --> 00:58:45,199
the asset that we're looking for right

1459
00:58:41,920 --> 00:58:48,798
now we would know that

1460
00:58:45,199 --> 00:58:51,439
we only need to find the we only need to

1461
00:58:48,798 --> 00:58:53,039
find the asset

1462
00:58:51,440 --> 00:58:55,119
that we're actually like that we're

1463
00:58:53,039 --> 00:58:56,798
pointing to right

1464
00:58:55,119 --> 00:58:58,400
so because like we're just looking for

1465
00:58:56,798 --> 00:59:00,239
this and we just want to

1466
00:58:58,400 --> 00:59:02,000
undo the like this is basically a chain

1467
00:59:00,239 --> 00:59:04,078
right so the hash table

1468
00:59:02,000 --> 00:59:05,280
is basically just a chain of assets that

1469
00:59:04,079 --> 00:59:06,880
fall into that slot

1470
00:59:05,280 --> 00:59:08,720
so all we're trying to do is like get

1471
00:59:06,880 --> 00:59:10,720
rid of it right we're just trying to

1472
00:59:08,719 --> 00:59:13,919
like get it out of that chain

1473
00:59:10,719 --> 00:59:15,118
so we just need like a pointer to the

1474
00:59:13,920 --> 00:59:18,720
previous

1475
00:59:15,119 --> 00:59:22,400
like index slot

1476
00:59:18,719 --> 00:59:22,399
right or the previous slot

1477
00:59:23,039 --> 00:59:29,199
uh and so if we say this is what we're

1478
00:59:26,239 --> 00:59:29,199
actually looking for

1479
00:59:30,880 --> 00:59:33,920
so we want the previous slot here to

1480
00:59:33,119 --> 00:59:36,318
point to

1481
00:59:33,920 --> 00:59:37,200
whatever this thing is right we want to

1482
00:59:36,318 --> 00:59:39,920
look and say

1483
00:59:37,199 --> 00:59:41,679
while the previous slot is not equal to

1484
00:59:39,920 --> 00:59:45,200
the asset index

1485
00:59:41,679 --> 00:59:47,199
we're good right

1486
00:59:45,199 --> 00:59:49,679
um and we also want to make sure that

1487
00:59:47,199 --> 00:59:52,719
previous slot actually exists

1488
00:59:49,679 --> 00:59:54,159
right because if we get to zero um

1489
00:59:52,719 --> 00:59:55,919
i mean another way to do this was is

1490
00:59:54,159 --> 00:59:59,118
while there's a previous slot

1491
00:59:55,920 --> 01:00:01,358
and um

1492
00:59:59,119 --> 01:00:02,400
it's not equal to asset index we keep

1493
01:00:01,358 --> 01:00:07,279
going

1494
01:00:02,400 --> 01:00:07,280
right and so i think

1495
01:00:07,599 --> 01:00:15,200
we just want this and if we

1496
01:00:11,199 --> 01:00:18,159
at the end if the preview slot is not

1497
01:00:15,199 --> 01:00:19,679
a zero value then all we would have to

1498
01:00:18,159 --> 01:00:24,159
do and we kind of want to pre

1499
01:00:19,679 --> 01:00:28,318
we we kind of want to grab this as well

1500
01:00:24,159 --> 01:00:31,519
again right we can see what i'm doing so

1501
01:00:28,318 --> 01:00:32,239
take a pointer to whatever this previous

1502
01:00:31,519 --> 01:00:36,719
slot

1503
01:00:32,239 --> 01:00:39,838
is the location of the previous slot

1504
01:00:36,719 --> 01:00:41,439
um we then say while there is something

1505
01:00:39,838 --> 01:00:44,159
there so while it is pointing to an

1506
01:00:41,440 --> 01:00:47,119
asset and it's not pointing to the asset

1507
01:00:44,159 --> 01:00:50,078
we actually want to remove

1508
01:00:47,119 --> 01:00:50,400
then what we do is we go one forward and

1509
01:00:50,079 --> 01:00:54,160
we

1510
01:00:50,400 --> 01:00:57,599
point to the the next pointer

1511
01:00:54,159 --> 01:01:00,879
the next index in the slot

1512
01:00:57,599 --> 01:01:00,880
the one more down the chain

1513
01:01:00,960 --> 01:01:04,880
eventually we're either going to run out

1514
01:01:03,280 --> 01:01:06,960
of links in the chain

1515
01:01:04,880 --> 01:01:08,318
meaning this asset was never in the ash

1516
01:01:06,960 --> 01:01:10,880
to begin with

1517
01:01:08,318 --> 01:01:11,920
or we're going to find somebody's next

1518
01:01:10,880 --> 01:01:15,200
pointer

1519
01:01:11,920 --> 01:01:18,880
that points to this asset and if we

1520
01:01:15,199 --> 01:01:20,719
found that then what we need to do

1521
01:01:18,880 --> 01:01:22,798
uh first of all if we found that it

1522
01:01:20,719 --> 01:01:23,279
should only if we if we claim we found

1523
01:01:22,798 --> 01:01:24,798
it

1524
01:01:23,280 --> 01:01:26,480
it should always be the one we were

1525
01:01:24,798 --> 01:01:28,239
looking for because that's the only way

1526
01:01:26,480 --> 01:01:29,920
we should have been able to end without

1527
01:01:28,239 --> 01:01:33,759
it being zero

1528
01:01:29,920 --> 01:01:36,480
we will then um look up the asset

1529
01:01:33,760 --> 01:01:39,839
that uh oh we don't even need to do that

1530
01:01:36,480 --> 01:01:39,838
so then we will just say

1531
01:01:45,039 --> 01:01:49,920
the asset that we're pointing to we want

1532
01:01:48,079 --> 01:01:52,160
to just take its next pointer and

1533
01:01:49,920 --> 01:01:53,039
blast it over uh the thing that was

1534
01:01:52,159 --> 01:01:55,598
pointing to it

1535
01:01:53,039 --> 01:01:56,960
right so we're removing it from the the

1536
01:01:55,599 --> 01:01:59,200
chain

1537
01:01:56,960 --> 01:01:59,199
so

1538
01:02:00,239 --> 01:02:07,279
this is presumably all we need to remove

1539
01:02:03,920 --> 01:02:08,559
ourselves from the hash right

1540
01:02:07,280 --> 01:02:11,599
and if we weren't in the hash no big

1541
01:02:08,559 --> 01:02:14,480
deal to add to the hash it's way

1542
01:02:11,599 --> 01:02:16,160
way way way simpler right all we have to

1543
01:02:14,480 --> 01:02:17,760
do is see whether there's anything we

1544
01:02:16,159 --> 01:02:20,000
need to link

1545
01:02:17,760 --> 01:02:22,160
and if there is we link otherwise we

1546
01:02:20,000 --> 01:02:26,480
just cold write it

1547
01:02:22,159 --> 01:02:29,199
so let's suppose we say all right um

1548
01:02:26,480 --> 01:02:31,039
we've got the the hash slot in question

1549
01:02:29,199 --> 01:02:33,759
is there something in there

1550
01:02:31,039 --> 01:02:34,640
if there is uh then we have to chain

1551
01:02:33,760 --> 01:02:36,400
ourselves

1552
01:02:34,639 --> 01:02:37,759
uh oops i guess we'll close next then we

1553
01:02:36,400 --> 01:02:38,720
have to chain it in here so what we

1554
01:02:37,760 --> 01:02:41,920
would say is like

1555
01:02:38,719 --> 01:02:41,919
okay um

1556
01:02:42,798 --> 01:02:46,559
let's get the asset to which that

1557
01:02:45,440 --> 01:02:50,559
corresponds

1558
01:02:46,559 --> 01:02:50,559
this by the way should be that

1559
01:03:01,199 --> 01:03:06,798
oh no we don't have to do this what am i

1560
01:03:02,639 --> 01:03:06,798
talking about let me just do this one

1561
01:03:08,159 --> 01:03:11,440
so we'll just get the asset that we're

1562
01:03:09,679 --> 01:03:13,440
adding right

1563
01:03:11,440 --> 01:03:14,880
um and we should probably assert that

1564
01:03:13,440 --> 01:03:17,599
asset

1565
01:03:14,880 --> 01:03:18,480
index is not equal to zero because we

1566
01:03:17,599 --> 01:03:20,559
don't ever wanna

1567
01:03:18,480 --> 01:03:22,400
uh insert the null like the null asset

1568
01:03:20,559 --> 01:03:24,079
should never really be in the hash

1569
01:03:22,400 --> 01:03:25,440
so unless we wanna do that sometime in

1570
01:03:24,079 --> 01:03:27,200
the future i'd like to know

1571
01:03:25,440 --> 01:03:28,639
if anyone tries to do that because that

1572
01:03:27,199 --> 01:03:30,239
would just be

1573
01:03:28,639 --> 01:03:32,000
presumably indicative that somebody

1574
01:03:30,239 --> 01:03:33,279
failed upstream that we

1575
01:03:32,000 --> 01:03:35,039
shouldn't have allowed to get here so i

1576
01:03:33,280 --> 01:03:37,839
just want to know about that

1577
01:03:35,039 --> 01:03:38,720
but we'll get this asset um we know that

1578
01:03:37,838 --> 01:03:40,159
the asset

1579
01:03:38,719 --> 01:03:41,759
in fact now that i think about it all

1580
01:03:40,159 --> 01:03:42,399
this stuff is useless i was thinking

1581
01:03:41,760 --> 01:03:43,599
about

1582
01:03:42,400 --> 01:03:45,599
that we were linking the other way

1583
01:03:43,599 --> 01:03:48,400
around um so

1584
01:03:45,599 --> 01:03:48,880
the next asset in the hash is just going

1585
01:03:48,400 --> 01:03:51,838
to be

1586
01:03:48,880 --> 01:03:54,880
whatever the head entry was and then the

1587
01:03:51,838 --> 01:03:54,880
head entry is going to be us

1588
01:03:57,599 --> 01:04:00,720
so that's it um there really isn't

1589
01:04:00,079 --> 01:04:04,798
anything

1590
01:04:00,719 --> 01:04:04,798
more complicated than that uh

1591
01:04:05,199 --> 01:04:10,558
the hash slot needs to come out of here

1592
01:04:10,838 --> 01:04:13,838
though

1593
01:04:15,039 --> 01:04:18,799
uh and that's it so now we're just left

1594
01:04:17,920 --> 01:04:20,159
with the problem i was talking about

1595
01:04:18,798 --> 01:04:21,358
before which is we don't really know how

1596
01:04:20,159 --> 01:04:24,639
to build a tag hash

1597
01:04:21,358 --> 01:04:26,880
from an asset and so

1598
01:04:24,639 --> 01:04:27,679
how this i think would have to work is

1599
01:04:26,880 --> 01:04:30,720
if we look

1600
01:04:27,679 --> 01:04:33,358
in here uh we've got all this

1601
01:04:30,719 --> 01:04:34,798
nonsense specified but we've never

1602
01:04:33,358 --> 01:04:37,038
actually loaded it

1603
01:04:34,798 --> 01:04:38,639
so this is the part that is going to be

1604
01:04:37,039 --> 01:04:40,319
the problem for us

1605
01:04:38,639 --> 01:04:42,879
which is to say that we need to be able

1606
01:04:40,318 --> 01:04:46,239
to find the tags

1607
01:04:42,880 --> 01:04:49,519
um that come

1608
01:04:46,239 --> 01:04:52,798
like the tags that this asset

1609
01:04:49,519 --> 01:04:53,599
uh is actually using right i want to say

1610
01:04:52,798 --> 01:04:56,559
i

1611
01:04:53,599 --> 01:04:56,559
this isn't really

1612
01:04:56,798 --> 01:05:09,838
we don't really need that

1613
01:05:00,079 --> 01:05:09,839
anymore do we

1614
01:05:11,358 --> 01:05:14,480
because we just this doesn't matter

1615
01:05:13,679 --> 01:05:16,399
anymore

1616
01:05:14,480 --> 01:05:17,838
because it will just pick the closest

1617
01:05:16,400 --> 01:05:21,119
one anyway

1618
01:05:17,838 --> 01:05:24,239
right so so i

1619
01:05:21,119 --> 01:05:26,400
i don't think this i

1620
01:05:24,239 --> 01:05:27,358
i don't think this is means anything

1621
01:05:26,400 --> 01:05:30,000
anymore

1622
01:05:27,358 --> 01:05:31,440
so i'm gonna say i'm gonna pull that

1623
01:05:30,000 --> 01:05:34,400
match any flags

1624
01:05:31,440 --> 01:05:35,599
stuff out of there for now um and if we

1625
01:05:34,400 --> 01:05:37,680
need it for some reason

1626
01:05:35,599 --> 01:05:38,880
later you know we can put it back in but

1627
01:05:37,679 --> 01:05:42,879
i'm going to say that's

1628
01:05:38,880 --> 01:05:45,119
not relevant right uh

1629
01:05:42,880 --> 01:05:46,960
like that just doesn't seem like that

1630
01:05:45,119 --> 01:05:50,318
would be necessary

1631
01:05:46,960 --> 01:05:52,960
anyway uh so

1632
01:05:50,318 --> 01:05:54,000
get asset hash lock here this get asset

1633
01:05:52,960 --> 01:05:56,720
from

1634
01:05:54,000 --> 01:05:57,199
uh is presumably not able to find that

1635
01:05:56,719 --> 01:06:01,439
because

1636
01:05:57,199 --> 01:06:01,439
it's in uh we didn't like

1637
01:06:01,838 --> 01:06:05,838
we didn't put it up in here

1638
01:06:09,440 --> 01:06:15,280
so that would need to be there

1639
01:06:13,599 --> 01:06:19,838
unfortunately it's behind my head there

1640
01:06:15,280 --> 01:06:19,839
you go

1641
01:06:22,719 --> 01:06:26,388
um

1642
01:06:23,099 --> 01:06:26,389
[Music]

1643
01:06:28,559 --> 01:06:34,480
and so and this is not a function

1644
01:06:32,079 --> 01:06:34,480
anymore

1645
01:06:36,239 --> 01:06:40,399
yeah and so i think we're pretty much

1646
01:06:38,639 --> 01:06:40,960
done with everything other than figuring

1647
01:06:40,400 --> 01:06:42,880
out

1648
01:06:40,960 --> 01:06:44,318
how we're going to update these tag

1649
01:06:42,880 --> 01:06:47,039
hashes

1650
01:06:44,318 --> 01:06:49,119
so at the moment like writing this

1651
01:06:47,039 --> 01:06:50,720
particular function now i think about it

1652
01:06:49,119 --> 01:06:53,039
is actually trivial because we're

1653
01:06:50,719 --> 01:06:53,358
expecting the assets to have this in

1654
01:06:53,039 --> 01:06:57,119
there

1655
01:06:53,358 --> 01:06:58,000
themselves um so really the problem was

1656
01:06:57,119 --> 01:06:59,920
more that

1657
01:06:58,000 --> 01:07:01,358
it's more how are we gonna fill these

1658
01:06:59,920 --> 01:07:03,838
out because they're expected to be

1659
01:07:01,358 --> 01:07:07,038
filled out for any asset

1660
01:07:03,838 --> 01:07:15,838
that we load in the first place right

1661
01:07:07,039 --> 01:07:15,839
um so that's a little trickier

1662
01:07:20,239 --> 01:07:25,118
did someone in the chat just call this a

1663
01:07:22,318 --> 01:07:28,159
vim color scheme

1664
01:07:25,119 --> 01:07:31,680
this is it's

1665
01:07:28,159 --> 01:07:33,920
it's not vim it's for coder

1666
01:07:31,679 --> 01:07:33,919
um

1667
01:07:40,838 --> 01:07:46,480
see

1668
01:07:42,639 --> 01:07:48,239
uh anyway so the

1669
01:07:46,480 --> 01:07:50,079
the problem that we are going to have is

1670
01:07:48,239 --> 01:07:51,759
not that we have to build it here

1671
01:07:50,079 --> 01:07:53,920
because this is actually trivial and in

1672
01:07:51,760 --> 01:07:56,880
fact we probably didn't really need

1673
01:07:53,920 --> 01:07:57,440
to do any of this as this this hash that

1674
01:07:56,880 --> 01:08:00,240
from

1675
01:07:57,440 --> 01:08:01,039
nonsense actually can just go away uh

1676
01:08:00,239 --> 01:08:02,719
because

1677
01:08:01,039 --> 01:08:04,319
what we would do is we just get the

1678
01:08:02,719 --> 01:08:06,719
asset like we were doing here

1679
01:08:04,318 --> 01:08:08,480
and then we would say okay the asset tag

1680
01:08:06,719 --> 01:08:10,480
hash just gets passed directly

1681
01:08:08,480 --> 01:08:11,920
from it right and the same thing would

1682
01:08:10,480 --> 01:08:13,838
be true here because we know we're going

1683
01:08:11,920 --> 01:08:14,639
to need the asset to compare at the end

1684
01:08:13,838 --> 01:08:16,238
anyway

1685
01:08:14,639 --> 01:08:18,479
so what we would do is we'd just say all

1686
01:08:16,238 --> 01:08:19,358
right you know let's just do it like

1687
01:08:18,479 --> 01:08:23,519
that

1688
01:08:19,359 --> 01:08:26,000
right so it's pretty straightforward

1689
01:08:23,520 --> 01:08:26,799
we we just call the the function we had

1690
01:08:26,000 --> 01:08:29,198
before so

1691
01:08:26,798 --> 01:08:31,119
the problem is actually not that the

1692
01:08:29,198 --> 01:08:34,158
problem is that in the two places where

1693
01:08:31,119 --> 01:08:37,679
we add the asset to the hash

1694
01:08:34,158 --> 01:08:41,039
we need to uh

1695
01:08:37,679 --> 01:08:43,119
go ahead and add asset to hash

1696
01:08:41,039 --> 01:08:44,798
um in the two places that we add the

1697
01:08:43,119 --> 01:08:48,238
asset to the hash

1698
01:08:44,798 --> 01:08:51,359
we need it to know about

1699
01:08:48,238 --> 01:08:54,718
the um so here's one

1700
01:08:51,359 --> 01:08:56,159
we need the asset hash tag hash to have

1701
01:08:54,719 --> 01:08:58,079
been updated so like

1702
01:08:56,158 --> 01:09:01,278
this would be a place where we would

1703
01:08:58,079 --> 01:09:02,798
need to do that for example

1704
01:09:01,279 --> 01:09:04,319
and then we'd need to do the same thing

1705
01:09:02,798 --> 01:09:06,880
in the importer

1706
01:09:04,319 --> 01:09:07,600
you know what i'm saying so in both

1707
01:09:06,880 --> 01:09:10,319
places

1708
01:09:07,600 --> 01:09:10,640
we need to make sure that the hash part

1709
01:09:10,319 --> 01:09:13,679
is

1710
01:09:10,640 --> 01:09:16,159
updated before we try to add this thing

1711
01:09:13,679 --> 01:09:19,359
to the hash because otherwise it'll just

1712
01:09:16,158 --> 01:09:20,960
fail now you can see here

1713
01:09:19,359 --> 01:09:22,880
where we're pulling out the basic

1714
01:09:20,960 --> 01:09:25,838
category um

1715
01:09:22,880 --> 01:09:27,199
by looking for that particular piece of

1716
01:09:25,838 --> 01:09:28,798
information

1717
01:09:27,198 --> 01:09:30,479
um so you can see that like that's

1718
01:09:28,798 --> 01:09:34,238
stored as a tag value

1719
01:09:30,479 --> 01:09:35,599
right and blah blah um

1720
01:09:34,238 --> 01:09:37,439
but what we really need to do here is

1721
01:09:35,600 --> 01:09:39,920
now is be a little bit more broad

1722
01:09:37,439 --> 01:09:40,639
right so what we need to do here is we

1723
01:09:39,920 --> 01:09:46,000
need to

1724
01:09:40,640 --> 01:09:46,000
to create a more coherent

1725
01:09:46,838 --> 01:09:50,399
um

1726
01:09:48,399 --> 01:09:51,599
version of the like like probably by

1727
01:09:50,399 --> 01:09:54,799
using like one of these

1728
01:09:51,600 --> 01:09:55,360
right so this tag builder type thing is

1729
01:09:54,800 --> 01:09:57,600
probably

1730
01:09:55,359 --> 01:09:59,279
mostly what we would want here right we

1731
01:09:57,600 --> 01:10:01,199
want to be able to push these tags on

1732
01:09:59,279 --> 01:10:02,800
one after the other

1733
01:10:01,198 --> 01:10:04,399
um and you can see here that we're

1734
01:10:02,800 --> 01:10:08,000
actually storing the asset type

1735
01:10:04,399 --> 01:10:10,479
as a thing we probably should

1736
01:10:08,000 --> 01:10:11,439
just take in the file and store the

1737
01:10:10,479 --> 01:10:13,198
asset tag

1738
01:10:11,439 --> 01:10:14,960
itself like that would probably be the

1739
01:10:13,198 --> 01:10:18,238
smarter thing to do anyway

1740
01:10:14,960 --> 01:10:21,679
um which is to say like

1741
01:10:18,238 --> 01:10:25,119
we probably want to just store

1742
01:10:21,679 --> 01:10:27,760
tag hashes so that when we load

1743
01:10:25,119 --> 01:10:29,359
stuff out we don't have tag sets but

1744
01:10:27,760 --> 01:10:30,880
since we have this entire system working

1745
01:10:29,359 --> 01:10:33,039
already

1746
01:10:30,880 --> 01:10:34,159
it seems like just patching them here is

1747
01:10:33,039 --> 01:10:37,439
probably the right thing to do

1748
01:10:34,158 --> 01:10:40,879
for the immediate moment right

1749
01:10:37,439 --> 01:10:43,759
um if that makes sense so

1750
01:10:40,880 --> 01:10:45,119
if we look at the the tag builder or

1751
01:10:43,760 --> 01:10:46,960
something like that we could use that

1752
01:10:45,119 --> 01:10:48,238
here for example and push the tags on

1753
01:10:46,960 --> 01:10:49,840
one at a time

1754
01:10:48,238 --> 01:10:52,158
uh so we could do something like this

1755
01:10:49,840 --> 01:10:54,880
where we just said like tag builder

1756
01:10:52,158 --> 01:10:58,079
right um and we just look at the the

1757
01:10:54,880 --> 01:11:01,279
tags and for each tag we would just oops

1758
01:10:58,079 --> 01:11:03,039
um we'd just look and see if it's not

1759
01:11:01,279 --> 01:11:04,800
one of the other things like facing

1760
01:11:03,039 --> 01:11:06,640
direction

1761
01:11:04,800 --> 01:11:09,440
or that sort of stuff then we just set

1762
01:11:06,640 --> 01:11:11,679
it in here right

1763
01:11:09,439 --> 01:11:12,719
the only reason i don't think we want to

1764
01:11:11,679 --> 01:11:15,199
do that

1765
01:11:12,719 --> 01:11:16,000
is because i feel like we probably want

1766
01:11:15,198 --> 01:11:19,279
this to be

1767
01:11:16,000 --> 01:11:21,439
a little more generic than that so we

1768
01:11:19,279 --> 01:11:23,599
probably want to be able to push these

1769
01:11:21,439 --> 01:11:25,039
tags into a thing that then kind of like

1770
01:11:23,600 --> 01:11:27,039
regularizes them

1771
01:11:25,039 --> 01:11:28,399
if that makes sense because the other

1772
01:11:27,039 --> 01:11:30,399
piece of code

1773
01:11:28,399 --> 01:11:32,399
is going to have to do the same thing

1774
01:11:30,399 --> 01:11:35,119
right so like in here

1775
01:11:32,399 --> 01:11:36,158
right you can see it doing like the tags

1776
01:11:35,119 --> 01:11:38,960
build

1777
01:11:36,158 --> 01:11:40,158
on this thing uh and we're gonna need

1778
01:11:38,960 --> 01:11:43,198
this to work

1779
01:11:40,158 --> 01:11:45,039
in the same way so you can see the tag

1780
01:11:43,198 --> 01:11:46,879
builder thing where we do begin tags

1781
01:11:45,039 --> 01:11:50,000
here

1782
01:11:46,880 --> 01:11:51,600
and it's doing this nonsense so you know

1783
01:11:50,000 --> 01:11:54,079
presumably we need that to work

1784
01:11:51,600 --> 01:11:55,760
again like i said before it i don't know

1785
01:11:54,079 --> 01:11:57,519
maybe we should just go full pull and

1786
01:11:55,760 --> 01:11:59,440
change the asset file

1787
01:11:57,520 --> 01:12:00,640
uh if we were to look at the way these

1788
01:11:59,439 --> 01:12:04,079
are are done

1789
01:12:00,640 --> 01:12:09,840
you know uh and we look at uh

1790
01:12:04,079 --> 01:12:09,840
like the hha header

1791
01:12:12,158 --> 01:12:16,158
so there's this tag count and the asset

1792
01:12:14,158 --> 01:12:17,359
count if we were just to say like these

1793
01:12:16,158 --> 01:12:19,839
are going to go away now

1794
01:12:17,359 --> 01:12:20,559
so there are no tags it's just an array

1795
01:12:19,840 --> 01:12:23,840
of assets

1796
01:12:20,560 --> 01:12:25,679
and annotations on the assets um and we

1797
01:12:23,840 --> 01:12:26,239
had to imagine what was going to happen

1798
01:12:25,679 --> 01:12:29,039
in there

1799
01:12:26,238 --> 01:12:29,678
and we just have these tag hashes right

1800
01:12:29,039 --> 01:12:32,880
uh

1801
01:12:29,679 --> 01:12:36,880
then each asset you know would have

1802
01:12:32,880 --> 01:12:40,719
the match vector and it would have the

1803
01:12:36,880 --> 01:12:42,640
the tag right and that would be a much

1804
01:12:40,719 --> 01:12:44,480
better way to do the file format the

1805
01:12:42,640 --> 01:12:45,920
problem is that it's not particularly

1806
01:12:44,479 --> 01:12:46,639
flexible right like the way we have it

1807
01:12:45,920 --> 01:12:48,079
right now

1808
01:12:46,640 --> 01:12:52,000
where you can just stick as many tags on

1809
01:12:48,079 --> 01:12:53,439
there as you want is a little bit nicer

1810
01:12:52,000 --> 01:12:55,760
so i think we're just going to do this

1811
01:12:53,439 --> 01:12:57,678
at import time it's a little sloppy

1812
01:12:55,760 --> 01:13:00,320
but i think that would probably just be

1813
01:12:57,679 --> 01:13:00,800
better so i think what we probably want

1814
01:13:00,319 --> 01:13:03,198
here

1815
01:13:00,800 --> 01:13:05,679
is a thing that just takes the asset

1816
01:13:03,198 --> 01:13:09,198
range and builds the tag hash from it

1817
01:13:05,679 --> 01:13:12,319
so when we have an add asset to hash

1818
01:13:09,198 --> 01:13:12,319
and only then

1819
01:13:12,960 --> 01:13:16,640
so when we actually add asset to hash

1820
01:13:15,679 --> 01:13:20,158
what i'm going to do

1821
01:13:16,640 --> 01:13:23,199
is say at that time we will rebuild

1822
01:13:20,158 --> 01:13:25,039
the tag the hash like

1823
01:13:23,198 --> 01:13:26,559
we'll rebuild what we expect to have

1824
01:13:25,039 --> 01:13:30,079
happen

1825
01:13:26,560 --> 01:13:33,679
there so we'll have

1826
01:13:30,079 --> 01:13:38,559
an asset match vector

1827
01:13:33,679 --> 01:13:38,560
and we'll have an asset um

1828
01:13:39,198 --> 01:13:43,359
tag hash and we'll produce those two

1829
01:13:41,679 --> 01:13:47,039
things

1830
01:13:43,359 --> 01:13:50,639
we will get the asset we will like

1831
01:13:47,039 --> 01:13:52,640
loop over the tags um and we will

1832
01:13:50,640 --> 01:13:54,719
i guess in here what we could also say

1833
01:13:52,640 --> 01:13:58,800
is so these

1834
01:13:54,719 --> 01:14:00,719
uh these are like the new hash

1835
01:13:58,800 --> 01:14:03,039
or maybe just yeah we'll just call it

1836
01:14:00,719 --> 01:14:06,239
the hash

1837
01:14:03,039 --> 01:14:08,800
and the vector so

1838
01:14:06,238 --> 01:14:09,759
we'll just start out with these being

1839
01:14:08,800 --> 01:14:12,800
nothing

1840
01:14:09,760 --> 01:14:15,840
right and then at the end we'll

1841
01:14:12,800 --> 01:14:15,840
apply them

1842
01:14:16,399 --> 01:14:21,119
so we will set them in here

1843
01:14:23,679 --> 01:14:29,679
i'll name these the same as we're

1844
01:14:24,960 --> 01:14:33,359
calling them on the outside

1845
01:14:29,679 --> 01:14:35,039
okay um so what we'll do is we'll

1846
01:14:33,359 --> 01:14:36,479
make a thing that just when we add

1847
01:14:35,039 --> 01:14:37,679
something to the hash it does the

1848
01:14:36,479 --> 01:14:40,559
refresh right there

1849
01:14:37,679 --> 01:14:42,960
so it loops through the tags and tries

1850
01:14:40,560 --> 01:14:45,520
to do the right thing

1851
01:14:42,960 --> 01:14:46,079
what that also means is that if we go

1852
01:14:45,520 --> 01:14:49,840
look

1853
01:14:46,079 --> 01:14:55,198
at the import code so you know

1854
01:14:49,840 --> 01:15:00,000
um that's an asset that's cpp

1855
01:14:55,198 --> 01:15:00,000
uh where's that's right

1856
01:15:01,279 --> 01:15:06,559
add asset to hash so

1857
01:15:04,560 --> 01:15:08,000
in here where it has to produce the type

1858
01:15:06,560 --> 01:15:11,199
id now this

1859
01:15:08,000 --> 01:15:13,760
is not necessary right

1860
01:15:11,198 --> 01:15:14,399
um so if something didn't have one of

1861
01:15:13,760 --> 01:15:16,800
these

1862
01:15:14,399 --> 01:15:18,639
this is where it should complain so this

1863
01:15:16,800 --> 01:15:23,039
doesn't have to happen anymore

1864
01:15:18,640 --> 01:15:26,640
right um it would really be

1865
01:15:23,039 --> 01:15:26,640
this right

1866
01:15:26,719 --> 01:15:30,319
so what we want to do is assert that the

1867
01:15:29,439 --> 01:15:32,799
type id

1868
01:15:30,319 --> 01:15:34,880
is not equal to zero because that would

1869
01:15:32,800 --> 01:15:38,000
mean that like the importer was broken

1870
01:15:34,880 --> 01:15:40,560
or something and then

1871
01:15:38,000 --> 01:15:41,119
in here is where we would want to do the

1872
01:15:40,560 --> 01:15:42,880
build

1873
01:15:41,119 --> 01:15:45,039
so you can see here that this is where

1874
01:15:42,880 --> 01:15:47,840
we'll extract the type id

1875
01:15:45,039 --> 01:15:49,279
this really probably you know wants to

1876
01:15:47,840 --> 01:15:52,719
be a switch statement

1877
01:15:49,279 --> 01:15:53,920
so we would take this id and we would

1878
01:15:52,719 --> 01:15:56,880
switch on it

1879
01:15:53,920 --> 01:15:57,760
we know what we do in the case of basic

1880
01:15:56,880 --> 01:16:00,400
category

1881
01:15:57,760 --> 01:16:02,320
where that's you know uh gonna be where

1882
01:16:00,399 --> 01:16:04,000
we're gonna get the type id from

1883
01:16:02,319 --> 01:16:06,559
but then we also have a couple other

1884
01:16:04,000 --> 01:16:07,359
things that we expect to find and treat

1885
01:16:06,560 --> 01:16:10,239
specially

1886
01:16:07,359 --> 01:16:11,439
right so we know that tag variant is a

1887
01:16:10,238 --> 01:16:13,279
thing that we're going to tweet

1888
01:16:11,439 --> 01:16:14,719
especially and we know that tag facing

1889
01:16:13,279 --> 01:16:15,679
direction is also a thing that we're

1890
01:16:14,719 --> 01:16:19,039
going to

1891
01:16:15,679 --> 01:16:19,760
treat especially and so those are going

1892
01:16:19,039 --> 01:16:23,039
to set

1893
01:16:19,760 --> 01:16:25,199
elements of the match vector uh

1894
01:16:23,039 --> 01:16:26,399
since we're you know playing around with

1895
01:16:25,198 --> 01:16:29,678
this here

1896
01:16:26,399 --> 01:16:33,920
um the the tag array in the han

1897
01:16:29,679 --> 01:16:35,279
in the asset uh in the game assets type

1898
01:16:33,920 --> 01:16:38,480
right

1899
01:16:35,279 --> 01:16:41,359
man i really need this to tell me

1900
01:16:38,479 --> 01:16:42,639
which one of these it is like that is

1901
01:16:41,359 --> 01:16:45,920
not helpful

1902
01:16:42,640 --> 01:16:46,719
right um you need to know which of these

1903
01:16:45,920 --> 01:16:49,840
is the thing

1904
01:16:46,719 --> 01:16:49,840
did i write that down

1905
01:16:49,920 --> 01:16:56,960
jay needs to

1906
01:16:53,520 --> 01:17:01,440
show which our

1907
01:16:56,960 --> 01:17:03,600
forward declares

1908
01:17:01,439 --> 01:17:05,439
i'll send an email this after the stream

1909
01:17:03,600 --> 01:17:06,960
um because that's the way mine used to

1910
01:17:05,439 --> 01:17:10,238
work but when we switched

1911
01:17:06,960 --> 01:17:12,960
over to like using the

1912
01:17:10,238 --> 01:17:14,639
the sort of merged one it doesn't have

1913
01:17:12,960 --> 01:17:16,158
that so it's like i have no idea which

1914
01:17:14,640 --> 01:17:18,000
of those is the forward declaration

1915
01:17:16,158 --> 01:17:20,079
in which of those is the actual type

1916
01:17:18,000 --> 01:17:23,039
declaration so i'll be jumping all day

1917
01:17:20,079 --> 01:17:24,640
and i never get there right um it's it's

1918
01:17:23,039 --> 01:17:28,079
like totally useless

1919
01:17:24,640 --> 01:17:29,679
so the uh

1920
01:17:28,079 --> 01:17:32,000
what we want to do here is say all right

1921
01:17:29,679 --> 01:17:33,279
we've got this tag array with the hha

1922
01:17:32,000 --> 01:17:35,279
tags in it right

1923
01:17:33,279 --> 01:17:36,559
so let's pull that out so we can

1924
01:17:35,279 --> 01:17:39,198
actually see it

1925
01:17:36,560 --> 01:17:40,400
um and reference it a little bit easier

1926
01:17:39,198 --> 01:17:42,238
right so we're looking at this

1927
01:17:40,399 --> 01:17:45,839
particular

1928
01:17:42,238 --> 01:17:48,718
tag index right and then we can switch

1929
01:17:45,840 --> 01:17:48,719
on the tag id

1930
01:17:50,000 --> 01:17:55,279
and we can use the value here uh to like

1931
01:17:53,439 --> 01:17:57,599
basically decrypt these tags

1932
01:17:55,279 --> 01:17:59,840
into something that we know how to work

1933
01:17:57,600 --> 01:17:59,840
with

1934
01:18:00,479 --> 01:18:04,079
so we know we want facing direction to

1935
01:18:02,238 --> 01:18:05,678
be pulled out like this

1936
01:18:04,079 --> 01:18:07,119
and we know we want variant to be pulled

1937
01:18:05,679 --> 01:18:10,719
out like this

1938
01:18:07,119 --> 01:18:12,158
and then everything else unless there's

1939
01:18:10,719 --> 01:18:13,679
some tags that we want to like

1940
01:18:12,158 --> 01:18:15,519
specifically avoid

1941
01:18:13,679 --> 01:18:17,600
so we're trying to like filter them out

1942
01:18:15,520 --> 01:18:20,400
or something but assuming that we

1943
01:18:17,600 --> 01:18:20,880
actually want to have something specific

1944
01:18:20,399 --> 01:18:23,599
go

1945
01:18:20,880 --> 01:18:24,000
on here what we would then do is say all

1946
01:18:23,600 --> 01:18:27,120
right

1947
01:18:24,000 --> 01:18:29,840
in that case now we want to take

1948
01:18:27,119 --> 01:18:31,439
any tag that's in here and add it to our

1949
01:18:29,840 --> 01:18:36,960
list of tags

1950
01:18:31,439 --> 01:18:39,759
so we would have a asset tag id

1951
01:18:36,960 --> 01:18:40,960
tags we know that this is only allowed

1952
01:18:39,760 --> 01:18:43,920
to have four

1953
01:18:40,960 --> 01:18:44,960
right and uh we know that we've got um

1954
01:18:43,920 --> 01:18:47,199
our tag count

1955
01:18:44,960 --> 01:18:48,319
which we'd start with here and so what

1956
01:18:47,198 --> 01:18:51,119
we do here is say

1957
01:18:48,319 --> 01:18:52,399
look uh we know that the tag count in

1958
01:18:51,119 --> 01:18:55,519
this case has to be

1959
01:18:52,399 --> 01:18:57,839
uh less than the tag size

1960
01:18:55,520 --> 01:19:01,440
in this particular case what we really

1961
01:18:57,840 --> 01:19:01,440
want to do is produce an error here

1962
01:19:01,520 --> 01:19:05,679
um and we want to produce an error on

1963
01:19:04,319 --> 01:19:07,679
the asset system

1964
01:19:05,679 --> 01:19:10,158
so what we probably want is not an

1965
01:19:07,679 --> 01:19:13,279
assertion we want like this

1966
01:19:10,158 --> 01:19:14,479
right like something like that um and i

1967
01:19:13,279 --> 01:19:17,039
don't know

1968
01:19:14,479 --> 01:19:17,519
to what extent we want to actually print

1969
01:19:17,039 --> 01:19:20,840
that

1970
01:19:17,520 --> 01:19:23,840
but you know we could do something like

1971
01:19:20,840 --> 01:19:23,840
this

1972
01:19:25,439 --> 01:19:37,839
right i

1973
01:19:28,560 --> 01:19:37,840
i don't know

1974
01:19:38,238 --> 01:19:43,439
yeah um so if we end up in a situation

1975
01:19:42,560 --> 01:19:45,360
like this

1976
01:19:43,439 --> 01:19:47,359
where we have the source file name and

1977
01:19:45,359 --> 01:19:49,599
all that stuff like you can see here

1978
01:19:47,359 --> 01:19:50,799
right and we've grabbed it uh then what

1979
01:19:49,600 --> 01:19:54,320
we probably want to do

1980
01:19:50,800 --> 01:19:56,880
is say like uh like invalid tag set

1981
01:19:54,319 --> 01:19:56,880
or something

1982
01:20:02,479 --> 01:20:06,000
right and then what we could do is since

1983
01:20:04,319 --> 01:20:07,759
we don't really want this function to be

1984
01:20:06,000 --> 01:20:09,840
doing something like printing an error

1985
01:20:07,760 --> 01:20:13,360
from the inside we can just say like

1986
01:20:09,840 --> 01:20:19,840
errors or you know hat errors

1987
01:20:13,359 --> 01:20:19,839
um or or uh

1988
01:20:20,719 --> 01:20:23,840
maybe we'll just call it result

1989
01:20:24,000 --> 01:20:26,639
in this case

1990
01:20:28,479 --> 01:20:32,319
uh and what we'll do is we'll say like

1991
01:20:30,238 --> 01:20:34,879
look in the case where

1992
01:20:32,319 --> 01:20:36,399
you know any of these things didn't

1993
01:20:34,880 --> 01:20:39,359
happen

1994
01:20:36,399 --> 01:20:42,399
so if the type id is zero uh we're going

1995
01:20:39,359 --> 01:20:42,399
to complain about that

1996
01:20:42,560 --> 01:20:46,080
if we can't get the right number of tags

1997
01:20:45,198 --> 01:20:49,119
we're going to complain about

1998
01:20:46,079 --> 01:20:53,039
that and then we'll just assume we

1999
01:20:49,119 --> 01:20:54,559
succeeded otherwise something like this

2000
01:20:53,039 --> 01:20:56,800
uh so assuming we can get this what

2001
01:20:54,560 --> 01:20:59,280
we'll do is we'll just say like okay

2002
01:20:56,800 --> 01:21:00,560
then for the tags we will take the tag

2003
01:20:59,279 --> 01:21:03,759
and we'll produce

2004
01:21:00,560 --> 01:21:04,719
the rounded value of that tag oh we

2005
01:21:03,760 --> 01:21:05,760
don't have to round it it's just

2006
01:21:04,719 --> 01:21:08,158
whatever the tag id

2007
01:21:05,760 --> 01:21:09,199
actually is and we'll throw away the

2008
01:21:08,158 --> 01:21:12,799
value

2009
01:21:09,198 --> 01:21:14,960
right when we're done uh we know how to

2010
01:21:12,800 --> 01:21:16,159
produce the tag hash and in fact now we

2011
01:21:14,960 --> 01:21:19,600
don't really need

2012
01:21:16,158 --> 01:21:20,879
that so we know how to produce the tag

2013
01:21:19,600 --> 01:21:24,000
hash because it's just

2014
01:21:20,880 --> 01:21:29,840
a get tag hash with the type id

2015
01:21:24,000 --> 01:21:32,399
of the asset and then the tags

2016
01:21:29,840 --> 01:21:34,000
right and since we don't want to have to

2017
01:21:32,399 --> 01:21:35,198
know we don't want to have to clear them

2018
01:21:34,000 --> 01:21:36,238
at the end we'll just clear them at the

2019
01:21:35,198 --> 01:21:37,599
beginning

2020
01:21:36,238 --> 01:21:40,638
to make it easier on ourselves so we

2021
01:21:37,600 --> 01:21:43,840
don't care so that adds to the hash

2022
01:21:40,639 --> 01:21:46,960
i believe uh properly we

2023
01:21:43,840 --> 01:21:48,880
want to change it to have a

2024
01:21:46,960 --> 01:21:50,399
boolean return type again just for error

2025
01:21:48,880 --> 01:21:53,600
reporting

2026
01:21:50,399 --> 01:21:57,198
um and we probably want to pro

2027
01:21:53,600 --> 01:22:00,480
to report those errors at export time

2028
01:21:57,198 --> 01:22:03,839
as well or import time i should say

2029
01:22:00,479 --> 01:22:07,279
uh so that seems relevant

2030
01:22:03,840 --> 01:22:11,840
uh as well so or on a second asset

2031
01:22:07,279 --> 01:22:11,840
tag id

2032
01:22:12,880 --> 01:22:17,920
get tag hash in this case may be defined

2033
01:22:15,279 --> 01:22:17,920
somewhere else

2034
01:22:18,880 --> 01:22:22,000
so i'm going to go ahead and move these

2035
01:22:22,840 --> 01:22:27,679
up

2036
01:22:24,880 --> 01:22:29,119
i don't think get variant count should

2037
01:22:27,679 --> 01:22:30,158
have be happening anymore so we should

2038
01:22:29,119 --> 01:22:38,238
probably get rid of that

2039
01:22:30,158 --> 01:22:40,960
as well

2040
01:22:38,238 --> 01:22:40,959
conflict

2041
01:22:41,359 --> 01:22:45,359
uh let's see we don't need any of this

2042
01:22:43,920 --> 01:22:48,158
anymore so let's fix that

2043
01:22:45,359 --> 01:22:50,839
so source file grid expert y we don't

2044
01:22:48,158 --> 01:22:53,839
need any of these

2045
01:22:50,840 --> 01:22:53,840
um

2046
01:22:53,920 --> 01:22:57,199
we probably want

2047
01:22:57,279 --> 01:23:01,039
asset index and file maybe well maybe we

2048
01:22:59,920 --> 01:23:02,480
don't i don't know we'll just leave it

2049
01:23:01,039 --> 01:23:06,639
like this

2050
01:23:02,479 --> 01:23:09,839
for now um so is get variant count

2051
01:23:06,639 --> 01:23:14,239
used anywhere um

2052
01:23:09,840 --> 01:23:14,239
because i don't think we would want that

2053
01:23:14,800 --> 01:23:21,600
yeah so so this we we recovered

2054
01:23:18,479 --> 01:23:25,519
uh we don't need to do that anymore so

2055
01:23:21,600 --> 01:23:29,280
so that should be fine um

2056
01:23:25,520 --> 01:23:29,280
so get variant count can go away

2057
01:23:29,600 --> 01:23:33,280
as well and things are looking

2058
01:23:32,238 --> 01:23:35,039
relatively clean here

2059
01:23:33,279 --> 01:23:36,399
um there's more we could do and probably

2060
01:23:35,039 --> 01:23:38,639
more we should do

2061
01:23:36,399 --> 01:23:40,238
but we're closing in on on this being

2062
01:23:38,639 --> 01:23:43,840
relatively sane

2063
01:23:40,238 --> 01:23:47,439
uh like i said we may want a

2064
01:23:43,840 --> 01:23:49,600
an out f here where we do like um

2065
01:23:47,439 --> 01:23:51,279
report on there being something wrong

2066
01:23:49,600 --> 01:23:54,400
with this asset

2067
01:23:51,279 --> 01:23:54,800
uh so you know something where we do

2068
01:23:54,399 --> 01:23:58,238
like

2069
01:23:54,800 --> 01:24:03,840
if not um

2070
01:23:58,238 --> 01:24:03,839
there we go and i think

2071
01:24:05,600 --> 01:24:08,719
that was also done properly here right

2072
01:24:07,760 --> 01:24:11,440
so if not

2073
01:24:08,719 --> 01:24:12,560
yeah so if we can't add it to the hash

2074
01:24:11,439 --> 01:24:14,960
for some reason

2075
01:24:12,560 --> 01:24:17,840
uh then we'll just say you know invalid

2076
01:24:14,960 --> 01:24:17,840
tag set

2077
01:24:20,880 --> 01:24:24,000
and so now we've reported the error on

2078
01:24:22,960 --> 01:24:26,960
import and

2079
01:24:24,000 --> 01:24:28,238
on load so in both places that could use

2080
01:24:26,960 --> 01:24:32,319
it

2081
01:24:28,238 --> 01:24:33,279
um we can tell the person that they

2082
01:24:32,319 --> 01:24:34,880
screwed up

2083
01:24:33,279 --> 01:24:36,960
when they define the tags in the tag

2084
01:24:34,880 --> 01:24:39,039
file right and the reason i'm doing it

2085
01:24:36,960 --> 01:24:41,039
that way instead of an assert is because

2086
01:24:39,039 --> 01:24:42,960
if somebody in a tag file just types the

2087
01:24:41,039 --> 01:24:44,880
wrong tags we want to just report that

2088
01:24:42,960 --> 01:24:46,560
so they can fix it we don't want to just

2089
01:24:44,880 --> 01:24:47,840
crash the program with an assert

2090
01:24:46,560 --> 01:24:50,080
dialogue or something

2091
01:24:47,840 --> 01:24:50,079
right

2092
01:24:51,679 --> 01:24:55,840
all right so uh we have to now kind of

2093
01:24:54,399 --> 01:24:59,679
step through this code

2094
01:24:55,840 --> 01:25:02,800
and figure out what's not working

2095
01:24:59,679 --> 01:25:05,199
um surprisingly that's actually

2096
01:25:02,800 --> 01:25:06,400
more working than i would have expected

2097
01:25:05,198 --> 01:25:08,399
uh

2098
01:25:06,399 --> 01:25:11,039
that's like quite a bit of working

2099
01:25:08,399 --> 01:25:12,000
actually so it looks like the only thing

2100
01:25:11,039 --> 01:25:13,840
that didn't really

2101
01:25:12,000 --> 01:25:14,960
quite load properly because even our

2102
01:25:13,840 --> 01:25:15,920
little sprites look like they're

2103
01:25:14,960 --> 01:25:19,279
important is the

2104
01:25:15,920 --> 01:25:20,960
uh cube maps uh

2105
01:25:19,279 --> 01:25:22,719
cube wrappings they're not cube maps in

2106
01:25:20,960 --> 01:25:23,920
the like lookup sense of the term cube

2107
01:25:22,719 --> 01:25:27,840
map but

2108
01:25:23,920 --> 01:25:27,840
so that's surprisingly close

2109
01:25:32,560 --> 01:25:36,480
and it looks like the only thing that we

2110
01:25:34,319 --> 01:25:39,599
weren't finding there

2111
01:25:36,479 --> 01:25:41,519
was the uh

2112
01:25:39,600 --> 01:25:43,280
in the so maybe in the gen code like

2113
01:25:41,520 --> 01:25:47,199
when we're generating rooms or whatever

2114
01:25:43,279 --> 01:25:50,319
we're like we're putting together

2115
01:25:47,198 --> 01:25:52,559
uh tag sets that don't like

2116
01:25:50,319 --> 01:25:53,679
work properly for some reason you know

2117
01:25:52,560 --> 01:25:56,719
what i mean

2118
01:25:53,679 --> 01:25:58,639
so in the hht like if we imagine trying

2119
01:25:56,719 --> 01:25:59,679
to find some of these things like we've

2120
01:25:58,639 --> 01:26:03,600
got like a cube

2121
01:25:59,679 --> 01:26:03,600
one of these like blocks right

2122
01:26:03,760 --> 01:26:07,440
so if you imagine what a wall would have

2123
01:26:05,760 --> 01:26:10,320
right it's wall

2124
01:26:07,439 --> 01:26:11,439
wood and then man-made was like over

2125
01:26:10,319 --> 01:26:14,880
here

2126
01:26:11,439 --> 01:26:16,719
right um now

2127
01:26:14,880 --> 01:26:18,719
i don't know what the point of that is

2128
01:26:16,719 --> 01:26:20,960
exactly uh

2129
01:26:18,719 --> 01:26:22,079
i guess i could kind of see why that is

2130
01:26:20,960 --> 01:26:24,399
the way it is

2131
01:26:22,079 --> 01:26:26,000
uh because you're like well it's a wall

2132
01:26:24,399 --> 01:26:27,679
versus a floor and then it's like

2133
01:26:26,000 --> 01:26:29,760
man-made or not and then it's made out

2134
01:26:27,679 --> 01:26:36,079
of this thing

2135
01:26:29,760 --> 01:26:38,079
but it seems like uh

2136
01:26:36,079 --> 01:26:39,600
it seems like man-made is kind of like

2137
01:26:38,079 --> 01:26:42,800
are we outdoors or not

2138
01:26:39,600 --> 01:26:44,639
it's more of a primal thing

2139
01:26:42,800 --> 01:26:46,480
it really should be like maybe up at the

2140
01:26:44,639 --> 01:26:49,520
top or something

2141
01:26:46,479 --> 01:26:51,359
um whereas like this part is like

2142
01:26:49,520 --> 01:26:52,400
more specific so i kind of almost feel

2143
01:26:51,359 --> 01:26:54,000
like these are kind of in the wrong

2144
01:26:52,399 --> 01:26:56,960
order a little bit

2145
01:26:54,000 --> 01:26:57,359
but even if we assume not right also the

2146
01:26:56,960 --> 01:27:00,239
wood

2147
01:26:57,359 --> 01:27:01,839
versus stone bit like seems like it

2148
01:27:00,238 --> 01:27:03,599
wants to be separate so

2149
01:27:01,840 --> 01:27:06,159
i do kind of feel like these are maybe a

2150
01:27:03,600 --> 01:27:09,679
little bit wrongly ordered

2151
01:27:06,158 --> 01:27:12,559
maybe right but that's

2152
01:27:09,679 --> 01:27:14,480
why it was failing so somehow all of our

2153
01:27:12,560 --> 01:27:16,239
code probably worked correctly

2154
01:27:14,479 --> 01:27:17,519
and now we just it's this the order

2155
01:27:16,238 --> 01:27:20,879
dependence of these

2156
01:27:17,520 --> 01:27:21,360
i guess these tags are just not very

2157
01:27:20,880 --> 01:27:24,079
good

2158
01:27:21,359 --> 01:27:25,679
so i don't really know how i want to

2159
01:27:24,079 --> 01:27:29,359
deal with them

2160
01:27:25,679 --> 01:27:33,760
um if that makes any sense but

2161
01:27:29,359 --> 01:27:36,479
yeah if you look here like

2162
01:27:33,760 --> 01:27:37,600
if you're outdoors it ends up being

2163
01:27:36,479 --> 01:27:40,718
grass

2164
01:27:37,600 --> 01:27:42,880
it's just over specified right

2165
01:27:40,719 --> 01:27:43,920
like i almost just don't care about the

2166
01:27:42,880 --> 01:27:47,039
man-made thing

2167
01:27:43,920 --> 01:27:49,119
it doesn't do anything like

2168
01:27:47,039 --> 01:27:50,560
it's just kind of dumb you know what i

2169
01:27:49,119 --> 01:27:52,960
mean

2170
01:27:50,560 --> 01:27:54,719
so i kind of just want it to not be

2171
01:27:52,960 --> 01:27:55,520
there because i'm not sure why you would

2172
01:27:54,719 --> 01:28:01,840
ever care

2173
01:27:55,520 --> 01:28:01,840
what it was um

2174
01:28:03,439 --> 01:28:08,319
i guess to just you know just to

2175
01:28:05,039 --> 01:28:08,319
distinguish between like

2176
01:28:13,359 --> 01:28:20,079
yeah i don't know i mean this is like a

2177
01:28:17,039 --> 01:28:21,840
wood floor wood wall you know

2178
01:28:20,079 --> 01:28:23,519
and maybe if you argue that you want to

2179
01:28:21,840 --> 01:28:26,079
know man-made or not

2180
01:28:23,520 --> 01:28:27,040
as to whether or not like a a wall of

2181
01:28:26,079 --> 01:28:29,198
wood

2182
01:28:27,039 --> 01:28:30,399
i mean we don't even call it a wall of

2183
01:28:29,198 --> 01:28:32,719
wood elsewhere

2184
01:28:30,399 --> 01:28:33,679
probably just because we were stupid but

2185
01:28:32,719 --> 01:28:36,600
like tree

2186
01:28:33,679 --> 01:28:39,199
is just called tree it's not a

2187
01:28:36,600 --> 01:28:40,840
non-man-made wood wall which is what a

2188
01:28:39,198 --> 01:28:44,559
tree is

2189
01:28:40,840 --> 01:28:47,440
right so i don't know

2190
01:28:44,560 --> 01:28:48,159
we should think about that harder at

2191
01:28:47,439 --> 01:28:50,079
some point

2192
01:28:48,158 --> 01:28:51,679
for right now i want to see what happens

2193
01:28:50,079 --> 01:28:54,960
if we just say

2194
01:28:51,679 --> 01:28:56,000
this is not constructive so we're

2195
01:28:54,960 --> 01:28:59,198
getting rid of these for

2196
01:28:56,000 --> 01:29:01,039
now um and we'll we'll think about this

2197
01:28:59,198 --> 01:29:02,638
a little harder later

2198
01:29:01,039 --> 01:29:04,399
and i think what we want to do is do

2199
01:29:02,639 --> 01:29:05,600
this the opposite of the way that we

2200
01:29:04,399 --> 01:29:07,759
were doing it

2201
01:29:05,600 --> 01:29:09,520
um in the sense that what we really want

2202
01:29:07,760 --> 01:29:12,719
is we want this code

2203
01:29:09,520 --> 01:29:14,880
to have the tags lined up based on the

2204
01:29:12,719 --> 01:29:16,719
way it's actually generating indoors

2205
01:29:14,880 --> 01:29:19,199
versus outdoors

2206
01:29:16,719 --> 01:29:21,039
you know wall versus floor and then

2207
01:29:19,198 --> 01:29:23,039
these tags should just correspond to

2208
01:29:21,039 --> 01:29:24,960
which part of this code you're using

2209
01:29:23,039 --> 01:29:28,238
right that's what i think should be

2210
01:29:24,960 --> 01:29:28,239
happening personally

2211
01:29:28,719 --> 01:29:39,840
so we'll take a look at that in a little

2212
01:29:30,158 --> 01:29:39,839
bit but

2213
01:29:44,399 --> 01:29:48,079
okay um so we have to kind of look at

2214
01:29:46,719 --> 01:29:49,679
assets a little bit here

2215
01:29:48,079 --> 01:29:51,439
which i'll be completely honest i don't

2216
01:29:49,679 --> 01:29:54,158
really remember much about how this

2217
01:29:51,439 --> 01:29:56,399
this stuff works it's been so long um

2218
01:29:54,158 --> 01:29:58,799
since we've looked at any of this stuff

2219
01:29:56,399 --> 01:30:00,238
uh in terms of like assets and and all

2220
01:29:58,800 --> 01:30:03,920
sorts of things like that

2221
01:30:00,238 --> 01:30:05,599
um so i don't really know anymore like

2222
01:30:03,920 --> 01:30:06,719
we've got like sort of asset inspection

2223
01:30:05,600 --> 01:30:09,199
stuff on here but

2224
01:30:06,719 --> 01:30:10,319
i don't think that i don't know if that

2225
01:30:09,198 --> 01:30:12,319
works if you

2226
01:30:10,319 --> 01:30:14,079
if the asset doesn't exist right it

2227
01:30:12,319 --> 01:30:16,639
probably gets knocked out

2228
01:30:14,079 --> 01:30:17,439
so we can't unfortunately look at assets

2229
01:30:16,639 --> 01:30:21,359
that didn't

2230
01:30:17,439 --> 01:30:24,960
actually like get matched

2231
01:30:21,359 --> 01:30:26,000
so um uh

2232
01:30:24,960 --> 01:30:27,920
what i think i want to do is step

2233
01:30:26,000 --> 01:30:29,840
through that code i don't know i don't

2234
01:30:27,920 --> 01:30:31,679
even know basic stuff anymore because we

2235
01:30:29,840 --> 01:30:34,079
haven't done this in so long

2236
01:30:31,679 --> 01:30:34,719
i don't know if i need to like ask it to

2237
01:30:34,079 --> 01:30:36,960
rebuild

2238
01:30:34,719 --> 01:30:37,920
or if it would automatically rebuild

2239
01:30:36,960 --> 01:30:41,119
because of

2240
01:30:37,920 --> 01:30:44,719
the fact that the uh

2241
01:30:41,119 --> 01:30:47,679
asset files have changed i think we

2242
01:30:44,719 --> 01:30:49,439
we do it manually so it may also be that

2243
01:30:47,679 --> 01:30:53,119
all i really have to do here

2244
01:30:49,439 --> 01:30:54,158
is do like a reload um you can see here

2245
01:30:53,119 --> 01:30:57,679
like reload

2246
01:30:54,158 --> 01:31:01,279
so what i might do is is try that

2247
01:30:57,679 --> 01:31:02,000
um because it may be that we just want

2248
01:31:01,279 --> 01:31:03,439
to do a reload

2249
01:31:02,000 --> 01:31:05,279
and a save and that's it because we

2250
01:31:03,439 --> 01:31:07,439
don't automatically update

2251
01:31:05,279 --> 01:31:09,039
i think we consciously decided not to do

2252
01:31:07,439 --> 01:31:10,638
that because we wanted to like be able

2253
01:31:09,039 --> 01:31:13,760
to do a reload

2254
01:31:10,639 --> 01:31:15,359
uh to refresh and then we wanted to save

2255
01:31:13,760 --> 01:31:17,199
only if we thought that it worked

2256
01:31:15,359 --> 01:31:20,479
properly right

2257
01:31:17,198 --> 01:31:22,000
so doing a reload of the hhts doesn't

2258
01:31:20,479 --> 01:31:25,839
seem to have done anything

2259
01:31:22,000 --> 01:31:27,039
right um so i you know we do have to

2260
01:31:25,840 --> 01:31:28,800
kind of step through and debug this and

2261
01:31:27,039 --> 01:31:30,000
figure out what is going on there right

2262
01:31:28,800 --> 01:31:33,440
because it doesn't look like

2263
01:31:30,000 --> 01:31:35,198
anything actually happened um and

2264
01:31:33,439 --> 01:31:37,439
you can see it incrementing the load

2265
01:31:35,198 --> 01:31:40,879
number and nothing actually occurs

2266
01:31:37,439 --> 01:31:43,439
so i do think that actually

2267
01:31:40,880 --> 01:31:44,880
you know i mean it did whatever updating

2268
01:31:43,439 --> 01:31:47,839
it was going to do

2269
01:31:44,880 --> 01:31:49,600
and we don't see any difference here so

2270
01:31:47,840 --> 01:31:53,279
i'm going to do a save

2271
01:31:49,600 --> 01:31:55,440
on that to save the hhts um

2272
01:31:53,279 --> 01:31:57,840
and it looks like yeah it looks like no

2273
01:31:55,439 --> 01:32:00,238
changes

2274
01:31:57,840 --> 01:32:01,360
i don't know if that means that it did

2275
01:32:00,238 --> 01:32:04,879
actually load

2276
01:32:01,359 --> 01:32:05,759
the hhts automatically when we ran the

2277
01:32:04,880 --> 01:32:07,679
game

2278
01:32:05,760 --> 01:32:08,960
i guess it did because we definitely

2279
01:32:07,679 --> 01:32:13,279
changed them

2280
01:32:08,960 --> 01:32:15,039
um so i don't know so so i guess we just

2281
01:32:13,279 --> 01:32:16,479
have a matching error there and so what

2282
01:32:15,039 --> 01:32:19,679
we need to do now is go

2283
01:32:16,479 --> 01:32:21,519
find out what's what's wrong right

2284
01:32:19,679 --> 01:32:22,719
okay so we know we're trying to match

2285
01:32:21,520 --> 01:32:25,600
like wall wood

2286
01:32:22,719 --> 01:32:26,960
for example right and what you see here

2287
01:32:25,600 --> 01:32:30,079
is that when we come

2288
01:32:26,960 --> 01:32:30,719
through through this thing and we say on

2289
01:32:30,079 --> 01:32:34,000
wall

2290
01:32:30,719 --> 01:32:37,279
you know add the wall add the wood

2291
01:32:34,000 --> 01:32:41,359
uh or you know or floor in this case

2292
01:32:37,279 --> 01:32:44,238
and and then uh wood or snown

2293
01:32:41,359 --> 01:32:44,238
right or grass

2294
01:32:45,359 --> 01:32:49,920
all of those tags look right and then

2295
01:32:47,359 --> 01:32:50,319
we're saying okay we want to add a piece

2296
01:32:49,920 --> 01:32:52,960
here

2297
01:32:50,319 --> 01:32:55,279
which is a cube piece and we want to do

2298
01:32:52,960 --> 01:32:57,920
a scenery asset

2299
01:32:55,279 --> 01:32:59,759
um and we want to do this tag this set

2300
01:32:57,920 --> 01:33:02,800
of tags from the tag builder

2301
01:32:59,760 --> 01:33:05,600
that we that we made here right

2302
01:33:02,800 --> 01:33:06,400
and so we expect that to to have just

2303
01:33:05,600 --> 01:33:07,760
worked because

2304
01:33:06,399 --> 01:33:10,799
it should have just built something that

2305
01:33:07,760 --> 01:33:13,920
matches like floor wood or something

2306
01:33:10,800 --> 01:33:17,039
and off we go our question is why

2307
01:33:13,920 --> 01:33:21,199
didn't that happen and

2308
01:33:17,039 --> 01:33:23,679
one question i have is

2309
01:33:21,198 --> 01:33:25,759
i guess i don't know about whether these

2310
01:33:23,679 --> 01:33:27,920
are set to scenery i assume they must be

2311
01:33:25,760 --> 01:33:30,560
because of block

2312
01:33:27,920 --> 01:33:37,840
you know so i'm assuming that block

2313
01:33:30,560 --> 01:33:37,840
automatically sets that

2314
01:33:46,399 --> 01:33:50,079
uh and so what i probably want to do

2315
01:33:49,439 --> 01:33:53,678
here

2316
01:33:50,079 --> 01:33:57,279
is just step through the match

2317
01:33:53,679 --> 01:34:01,199
probably and find out

2318
01:33:57,279 --> 01:34:04,399
why we're not matching any assets

2319
01:34:01,198 --> 01:34:07,039
so what i probably want to do for this

2320
01:34:04,399 --> 01:34:08,319
is the easiest place to start would be

2321
01:34:07,039 --> 01:34:12,079
in the entity

2322
01:34:08,319 --> 01:34:14,319
uh rendering code where we actually push

2323
01:34:12,079 --> 01:34:17,439
a cube on

2324
01:34:14,319 --> 01:34:18,079
um to look at what the tags were that

2325
01:34:17,439 --> 01:34:19,839
were actually

2326
01:34:18,079 --> 01:34:22,399
trying to be matched in the first place

2327
01:34:19,840 --> 01:34:25,119
and then maybe back that out

2328
01:34:22,399 --> 01:34:26,079
and go look at when we actually did the

2329
01:34:25,119 --> 01:34:29,279
matching

2330
01:34:26,079 --> 01:34:33,679
right and so uh

2331
01:34:29,279 --> 01:34:37,920
in this case

2332
01:34:33,679 --> 01:34:37,920
so you can see us pushing a cube on here

2333
01:34:42,399 --> 01:34:46,079
so we should be able to just say look

2334
01:34:44,560 --> 01:34:49,760
it's it's going to be

2335
01:34:46,079 --> 01:34:49,760
it's going to be having been this call

2336
01:34:49,840 --> 01:34:55,920
for the uh bitmap asset let's let's

2337
01:34:53,039 --> 01:34:56,719
start here and just see what the piece

2338
01:34:55,920 --> 01:35:00,719
even has

2339
01:34:56,719 --> 01:35:02,399
on it at all um and we'll go from there

2340
01:35:00,719 --> 01:35:04,960
for some reason i am not able to set a

2341
01:35:02,399 --> 01:35:08,399
breakpoint there

2342
01:35:04,960 --> 01:35:08,399
which doesn't make a lot of sense

2343
01:35:12,840 --> 01:35:15,840
um

2344
01:35:16,000 --> 01:35:19,679
what is the reasoning behind that

2345
01:35:24,079 --> 01:35:29,840
so for some reason this doesn't let me

2346
01:35:26,079 --> 01:35:29,840
set any break points

2347
01:35:32,880 --> 01:35:36,319
is that just a remedy problem

2348
01:35:40,158 --> 01:35:47,039
what's the deal there

2349
01:35:43,520 --> 01:35:50,400
i feel like uh george was here

2350
01:35:47,039 --> 01:35:51,760
wasn't he at some point

2351
01:35:50,399 --> 01:35:54,158
george you happen to know what's going

2352
01:35:51,760 --> 01:35:54,159
on there

2353
01:35:55,679 --> 01:36:00,079
i wonder what we're doing wrong this is

2354
01:35:58,238 --> 01:36:03,439
a debug build

2355
01:36:00,079 --> 01:36:05,279
right so it should have full access to

2356
01:36:03,439 --> 01:36:09,039
all the debug information but it

2357
01:36:05,279 --> 01:36:11,840
looks like no such luck

2358
01:36:09,039 --> 01:36:11,840
you know what i'm saying

2359
01:36:15,118 --> 01:36:19,359
now i wonder if this is

2360
01:36:20,319 --> 01:36:23,359
oh we need three one three all right we

2361
01:36:22,560 --> 01:36:25,840
can update

2362
01:36:23,359 --> 01:36:25,839
our remedy

2363
01:36:26,399 --> 01:36:29,599
i don't know if i have a later version

2364
01:36:28,000 --> 01:36:30,639
of visual studio but let's just see

2365
01:36:29,600 --> 01:36:33,039
let's make sure

2366
01:36:30,639 --> 01:36:34,239
i don't think i updated but let's just

2367
01:36:33,039 --> 01:36:38,639
make sure

2368
01:36:34,238 --> 01:36:42,799
about that um

2369
01:36:38,639 --> 01:36:42,800
okay so let me grab a remedy

2370
01:36:45,439 --> 01:36:50,879
from itch io

2371
01:36:51,039 --> 01:36:54,800
which always has like the worst user

2372
01:36:53,920 --> 01:36:59,118
interface for

2373
01:36:54,800 --> 01:36:59,119
getting stuff you already own um

2374
01:36:59,359 --> 01:37:07,839
let's grab remedy

2375
01:37:03,920 --> 01:37:07,840
and save it

2376
01:37:18,840 --> 01:37:22,239
too

2377
01:37:20,000 --> 01:37:22,238
okay

2378
01:37:26,000 --> 01:37:32,238
so i've grabbed a new version of remedy

2379
01:37:29,279 --> 01:37:34,079
and let us see let's find out if that is

2380
01:37:32,238 --> 01:37:37,279
our problem

2381
01:37:34,079 --> 01:37:41,359
uh i mean sure you can save

2382
01:37:37,279 --> 01:37:44,880
the session um so let's grab a three one

2383
01:37:41,359 --> 01:37:48,479
the three one four five nine seven

2384
01:37:44,880 --> 01:37:53,118
let's grab the latest latest action

2385
01:37:48,479 --> 01:37:53,118
and we'll go ahead and drop that in here

2386
01:38:01,198 --> 01:38:05,118
and we'll see if we can break point

2387
01:38:06,479 --> 01:38:13,279
so in uh i guess i don't

2388
01:38:10,238 --> 01:38:14,718
really need these anymore um so

2389
01:38:13,279 --> 01:38:16,238
back in the same code i'm just going to

2390
01:38:14,719 --> 01:38:17,920
try and set a breakpoint in exactly the

2391
01:38:16,238 --> 01:38:19,118
same place and if it works this time

2392
01:38:17,920 --> 01:38:22,399
then it does look like it was

2393
01:38:19,118 --> 01:38:24,319
updated vc debug information yep

2394
01:38:22,399 --> 01:38:25,839
that looks like what it was because that

2395
01:38:24,319 --> 01:38:28,238
set just fine

2396
01:38:25,840 --> 01:38:29,840
weird i guess they changed it huh is

2397
01:38:28,238 --> 01:38:32,158
that what happened

2398
01:38:29,840 --> 01:38:32,159
um

2399
01:38:33,760 --> 01:38:40,960
i should probably also uh

2400
01:38:37,760 --> 01:38:43,039
update my work computer with that

2401
01:38:40,960 --> 01:38:46,319
i haven't run into that i i tend to keep

2402
01:38:43,039 --> 01:38:47,679
things very old on my work computer like

2403
01:38:46,319 --> 01:38:49,599
i don't plug it into the internet i

2404
01:38:47,679 --> 01:38:51,199
don't update the software because stuff

2405
01:38:49,600 --> 01:38:53,920
usually works if you don't update it

2406
01:38:51,198 --> 01:38:55,519
when you update things break like that

2407
01:38:53,920 --> 01:38:57,359
right because you have like

2408
01:38:55,520 --> 01:38:59,040
visual studio decides to update

2409
01:38:57,359 --> 01:39:01,279
something like

2410
01:38:59,039 --> 01:39:02,639
new debug info and then all your tools

2411
01:39:01,279 --> 01:39:03,840
that used to work the old debug info

2412
01:39:02,639 --> 01:39:06,079
won't work anymore

2413
01:39:03,840 --> 01:39:07,440
and you're like thanks for that what did

2414
01:39:06,079 --> 01:39:09,840
you why did you do that

2415
01:39:07,439 --> 01:39:11,839
and usually the answer is no reason

2416
01:39:09,840 --> 01:39:12,800
other than weird internal organization

2417
01:39:11,840 --> 01:39:14,319
garbage

2418
01:39:12,800 --> 01:39:15,760
because there's never any new features

2419
01:39:14,319 --> 01:39:17,118
or anything like they don't actually

2420
01:39:15,760 --> 01:39:19,039
improve anything they just

2421
01:39:17,118 --> 01:39:22,559
change the debug format and make

2422
01:39:19,039 --> 01:39:22,560
everyone's lives difficult

2423
01:39:22,800 --> 01:39:27,920
anyway so uh let's see what happened

2424
01:39:26,158 --> 01:39:28,479
here so we're assuming this bitmap id is

2425
01:39:27,920 --> 01:39:30,000
zero

2426
01:39:28,479 --> 01:39:32,399
right because it won't have found

2427
01:39:30,000 --> 01:39:33,359
anything and so what we want to do now

2428
01:39:32,399 --> 01:39:35,599
is look and see

2429
01:39:33,359 --> 01:39:37,359
like are we asking for the right tags

2430
01:39:35,600 --> 01:39:39,280
before we start

2431
01:39:37,359 --> 01:39:41,039
investigating the asset system to see

2432
01:39:39,279 --> 01:39:44,559
like what's wrong

2433
01:39:41,039 --> 01:39:45,519
um we want to see if like the asset hash

2434
01:39:44,560 --> 01:39:47,600
itself

2435
01:39:45,520 --> 01:39:49,679
has something filled out sensibly so

2436
01:39:47,600 --> 01:39:51,520
here's a randomized variant value that's

2437
01:39:49,679 --> 01:39:55,039
what we would expect to see

2438
01:39:51,520 --> 01:39:59,119
um in here we've got a packed

2439
01:39:55,039 --> 01:40:00,960
hashtag right you can see it here

2440
01:39:59,118 --> 01:40:03,599
um and we'd like a way to be able to

2441
01:40:00,960 --> 01:40:06,880
decrypt that

2442
01:40:03,600 --> 01:40:10,239
if we can so let's just take a look um

2443
01:40:06,880 --> 01:40:11,359
at the get tag hash function and you can

2444
01:40:10,238 --> 01:40:13,919
see us packing

2445
01:40:11,359 --> 01:40:15,679
this stuff in here so if we look the

2446
01:40:13,920 --> 01:40:18,399
like asset category

2447
01:40:15,679 --> 01:40:19,600
is in the bottom eight bits of this

2448
01:40:18,399 --> 01:40:22,158
thing

2449
01:40:19,600 --> 01:40:23,119
so if we take a look at what's in the

2450
01:40:22,158 --> 01:40:25,920
bottom

2451
01:40:23,118 --> 01:40:26,719
eight bits of this thing it's like one

2452
01:40:25,920 --> 01:40:30,960
eight

2453
01:40:26,719 --> 01:40:30,960
hacks right it's

2454
01:40:31,359 --> 01:40:39,118
that um which i don't even know

2455
01:40:35,520 --> 01:40:42,159
what value that is it's 24 apparently

2456
01:40:39,118 --> 01:40:42,158
um and

2457
01:40:46,479 --> 01:40:51,839
uh if we that's not what i wanted

2458
01:40:54,000 --> 01:40:59,840
um so if we take a look at which of

2459
01:40:57,359 --> 01:41:00,799
these in the basic category we're

2460
01:40:59,840 --> 01:41:04,159
talking about

2461
01:41:00,800 --> 01:41:07,760
like zero one two three four five

2462
01:41:04,158 --> 01:41:11,519
six seven eight nine 10 11 12 13 14 15

2463
01:41:07,760 --> 01:41:13,840
16 17 18 19 20 21 22 23 24

2464
01:41:11,520 --> 01:41:15,600
it's exactly what we'd expect i suppose

2465
01:41:13,840 --> 01:41:19,840
i probably could have done this huh

2466
01:41:15,600 --> 01:41:19,840
can i in the remedy

2467
01:41:26,238 --> 01:41:34,158
so i guess i can't um

2468
01:41:29,920 --> 01:41:34,158
i'm not even sure what that's doing

2469
01:41:34,880 --> 01:41:38,719
that's a bit wonky so i was just gonna

2470
01:41:37,039 --> 01:41:39,840
see if it would tell me the name of this

2471
01:41:38,719 --> 01:41:44,319
thing

2472
01:41:39,840 --> 01:41:47,840
um if i cast something to it

2473
01:41:44,319 --> 01:41:47,840
but it doesn't look like it

2474
01:41:48,399 --> 01:41:52,960
uh that would be a nice feature to have

2475
01:41:50,399 --> 01:41:55,359
if there's a remedy feature request

2476
01:41:52,960 --> 01:41:56,719
um but it is correctly asked asking for

2477
01:41:55,359 --> 01:41:58,238
asset scenery

2478
01:41:56,719 --> 01:42:00,000
and then we've got these other ones so

2479
01:41:58,238 --> 01:42:01,599
like through from eight to so if we

2480
01:42:00,000 --> 01:42:03,439
shift down eight

2481
01:42:01,600 --> 01:42:05,199
i mean we know exactly what we're doing

2482
01:42:03,439 --> 01:42:08,638
here right we shift down eight

2483
01:42:05,198 --> 01:42:12,479
and then we mask off

2484
01:42:08,639 --> 01:42:15,600
um the 14 bits that are

2485
01:42:12,479 --> 01:42:18,079
there we should be able to you know

2486
01:42:15,600 --> 01:42:19,679
look at the other values as well so the

2487
01:42:18,079 --> 01:42:29,840
piece oops

2488
01:42:19,679 --> 01:42:29,840
peace hash

2489
01:42:30,719 --> 01:42:34,800
uh if we actually take a look at this

2490
01:42:32,960 --> 01:42:35,198
and we look at it more specifically so

2491
01:42:34,800 --> 01:42:38,480
we

2492
01:42:35,198 --> 01:42:40,638
shift it down by eight um

2493
01:42:38,479 --> 01:42:42,399
we're looking at just this portion now

2494
01:42:40,639 --> 01:42:43,920
it just so happens that this is a zero

2495
01:42:42,399 --> 01:42:47,198
value out here anyway

2496
01:42:43,920 --> 01:42:50,239
so it looks like ox12 is like the next

2497
01:42:47,198 --> 01:42:53,439
tag in the set um

2498
01:42:50,238 --> 01:42:56,638
so what would that be and i don't know

2499
01:42:53,439 --> 01:43:00,000
um is that plausible right

2500
01:42:56,639 --> 01:43:04,319
so like 0 1 2 3 4 5 6

2501
01:43:00,000 --> 01:43:07,840
7 8 9 10 11 12 13

2502
01:43:04,319 --> 01:43:10,399
14 15 16 17 18. so that's floor

2503
01:43:07,840 --> 01:43:12,079
right so these do seem to be i mean they

2504
01:43:10,399 --> 01:43:15,679
seem to be built correctly

2505
01:43:12,079 --> 01:43:16,880
right like it it's looks like it's using

2506
01:43:15,679 --> 01:43:20,719
the right hash

2507
01:43:16,880 --> 01:43:22,960
value for all intents and purposes right

2508
01:43:20,719 --> 01:43:24,399
um let's just double check the last one

2509
01:43:22,960 --> 01:43:27,359
so if we

2510
01:43:24,399 --> 01:43:27,599
shift it down 22 it's 19 so that would

2511
01:43:27,359 --> 01:43:29,359
be

2512
01:43:27,600 --> 01:43:32,800
[Music]

2513
01:43:29,359 --> 01:43:35,198
floor grass so floor grass

2514
01:43:32,800 --> 01:43:37,360
is a totally valid thing to expect to

2515
01:43:35,198 --> 01:43:37,359
see

2516
01:43:37,679 --> 01:43:43,118
would be this and

2517
01:43:40,800 --> 01:43:44,000
honestly though you know that one thing

2518
01:43:43,118 --> 01:43:46,158
that does

2519
01:43:44,000 --> 01:43:47,198
concern me a little bit about that so

2520
01:43:46,158 --> 01:43:51,279
suppose we

2521
01:43:47,198 --> 01:43:55,039
keep going here um

2522
01:43:51,279 --> 01:43:59,359
just uh look at it is you know

2523
01:43:55,039 --> 01:44:04,000
the grass part seems to be there

2524
01:43:59,359 --> 01:44:07,519
actually doesn't it

2525
01:44:04,000 --> 01:44:09,520
so floor grass is looking up properly

2526
01:44:07,520 --> 01:44:12,800
because hey look at that

2527
01:44:09,520 --> 01:44:13,440
uh there's often the area where the

2528
01:44:12,800 --> 01:44:15,679
lighting

2529
01:44:13,439 --> 01:44:16,719
is like out of bounds because you can't

2530
01:44:15,679 --> 01:44:18,239
see over here

2531
01:44:16,719 --> 01:44:20,639
at the moment but if i zoom over there

2532
01:44:18,238 --> 01:44:23,118
the debug camera

2533
01:44:20,639 --> 01:44:23,679
it looks like floor grass is kind of

2534
01:44:23,118 --> 01:44:27,679
there

2535
01:44:23,679 --> 01:44:29,600
potentially i i don't know for sure but

2536
01:44:27,679 --> 01:44:31,520
i mean it's not completely missing it's

2537
01:44:29,600 --> 01:44:35,039
not zeroed

2538
01:44:31,520 --> 01:44:37,119
um so that makes me a little bit nervous

2539
01:44:35,039 --> 01:44:39,198
because then it's like hmm okay so floor

2540
01:44:37,118 --> 01:44:41,359
grass works but floor wood does not

2541
01:44:39,198 --> 01:44:44,399
that's a bit strange

2542
01:44:41,359 --> 01:44:46,399
right um and that suggests almost that

2543
01:44:44,399 --> 01:44:47,679
the tags weren't actually updated or

2544
01:44:46,399 --> 01:44:51,439
something because

2545
01:44:47,679 --> 01:44:53,600
this one we didn't change i don't think

2546
01:44:51,439 --> 01:44:55,359
so the one we didn't change is looking

2547
01:44:53,600 --> 01:44:58,960
at properly the one we did change

2548
01:44:55,359 --> 01:45:02,158
isn't i don't want to call that

2549
01:44:58,960 --> 01:45:02,639
a problem yet but i mean so one thing

2550
01:45:02,158 --> 01:45:04,879
too

2551
01:45:02,639 --> 01:45:07,920
is like let's suppose we compile and

2552
01:45:04,880 --> 01:45:17,840
release mode real quick

2553
01:45:07,920 --> 01:45:17,840
and like hopped over there

2554
01:45:20,158 --> 01:45:24,879
yeah i mean that looks like it's there

2555
01:45:21,679 --> 01:45:28,880
right it's really weird

2556
01:45:24,880 --> 01:45:28,880
all right what's going on with that

2557
01:45:29,760 --> 01:45:32,800
that is some weird stuff

2558
01:45:39,760 --> 01:45:42,880
so actually no

2559
01:45:43,439 --> 01:45:49,439
that does not work because that's where

2560
01:45:45,760 --> 01:45:49,440
flora grass would actually be

2561
01:45:49,760 --> 01:45:53,600
these are actually places that got

2562
01:45:51,679 --> 01:45:56,000
filled in

2563
01:45:53,600 --> 01:45:56,840
that's in the like landfill section

2564
01:45:56,000 --> 01:46:00,560
thing

2565
01:45:56,840 --> 01:46:03,840
right apron the apron code

2566
01:46:00,560 --> 01:46:07,440
so in the apron code the apron code

2567
01:46:03,840 --> 01:46:11,520
aha that's the problem

2568
01:46:07,439 --> 01:46:14,960
these are blocks not scenery

2569
01:46:11,520 --> 01:46:17,360
okay lesson learned i forgot

2570
01:46:14,960 --> 01:46:18,719
how our own code works this happens all

2571
01:46:17,359 --> 01:46:21,039
the time

2572
01:46:18,719 --> 01:46:22,319
uh when you only program once a week on

2573
01:46:21,039 --> 01:46:26,719
something

2574
01:46:22,319 --> 01:46:29,359
um so actually this that may be most of

2575
01:46:26,719 --> 01:46:29,359
it i don't know

2576
01:46:29,679 --> 01:46:32,000
oops

2577
01:46:35,600 --> 01:46:39,679
so this right here where we're doing

2578
01:46:37,359 --> 01:46:41,920
acid scenery

2579
01:46:39,679 --> 01:46:41,920
um

2580
01:46:43,118 --> 01:46:48,319
this would have to be asset block

2581
01:46:45,760 --> 01:46:48,320
actually

2582
01:46:50,639 --> 01:46:55,199
and now it could find it because it was

2583
01:46:52,158 --> 01:46:58,238
looking for the wrong type of asset

2584
01:46:55,198 --> 01:46:59,039
um and we're still a little screwed you

2585
01:46:58,238 --> 01:47:02,000
can see like

2586
01:46:59,039 --> 01:47:04,719
there's some weird thing that happens as

2587
01:47:02,000 --> 01:47:07,439
soon as we start going like the lighting

2588
01:47:04,719 --> 01:47:08,639
dies uh somehow right so there's

2589
01:47:07,439 --> 01:47:12,319
something still

2590
01:47:08,639 --> 01:47:15,520
uh really weird happening there

2591
01:47:12,319 --> 01:47:17,439
um at the moment so i have no idea what

2592
01:47:15,520 --> 01:47:18,480
that problem is but some kind of weird

2593
01:47:17,439 --> 01:47:20,559
like feeding a nan

2594
01:47:18,479 --> 01:47:22,079
into the system kind of a thing right

2595
01:47:20,560 --> 01:47:26,880
furthermore our

2596
01:47:22,079 --> 01:47:29,920
hero sprite is gone so that's also wrong

2597
01:47:26,880 --> 01:47:31,440
uh so like bodies and heads

2598
01:47:29,920 --> 01:47:33,199
look like they're not being looked up

2599
01:47:31,439 --> 01:47:36,479
properly either

2600
01:47:33,198 --> 01:47:37,039
um but the glove is and the ground is

2601
01:47:36,479 --> 01:47:39,919
now

2602
01:47:37,039 --> 01:47:40,479
and so we only have a few only have a

2603
01:47:39,920 --> 01:47:42,639
few

2604
01:47:40,479 --> 01:47:43,759
issues going on here i don't know what's

2605
01:47:42,639 --> 01:47:46,319
going on that lighting

2606
01:47:43,760 --> 01:47:48,400
bug though that's like a weird something

2607
01:47:46,319 --> 01:47:50,799
must be getting fed in that's like

2608
01:47:48,399 --> 01:47:51,599
uh highly erroneous and and poisoning

2609
01:47:50,800 --> 01:47:53,520
the system

2610
01:47:51,600 --> 01:47:55,840
especially it's especially weird because

2611
01:47:53,520 --> 01:47:58,159
it only happens when we move

2612
01:47:55,840 --> 01:47:58,960
like the lighting is running as it

2613
01:47:58,158 --> 01:48:02,000
should

2614
01:47:58,960 --> 01:48:03,520
right now and then moving um

2615
01:48:02,000 --> 01:48:05,600
well i guess not moving just changing

2616
01:48:03,520 --> 01:48:08,000
facing direction

2617
01:48:05,600 --> 01:48:08,000
was it

2618
01:48:09,118 --> 01:48:12,719
okay now i'm super confused

2619
01:48:13,920 --> 01:48:17,440
what caused that because that was a

2620
01:48:16,399 --> 01:48:20,399
really bizarre bug

2621
01:48:17,439 --> 01:48:20,399
something caused that

2622
01:48:20,960 --> 01:48:24,639
all right so we've got some we still got

2623
01:48:22,800 --> 01:48:28,000
some weird bugs going on here

2624
01:48:24,639 --> 01:48:29,920
um which is to be expected when we

2625
01:48:28,000 --> 01:48:32,158
change this much stuff

2626
01:48:29,920 --> 01:48:33,118
but we gotta go find out what's

2627
01:48:32,158 --> 01:48:36,399
happening

2628
01:48:33,118 --> 01:48:39,759
so let's take a look at the tag files

2629
01:48:36,399 --> 01:48:42,399
uh i guess that's the hht files

2630
01:48:39,760 --> 01:48:44,320
for things like body hero it's orphan

2631
01:48:42,399 --> 01:48:46,000
hero

2632
01:48:44,319 --> 01:48:47,679
is what's in there and then it's got

2633
01:48:46,000 --> 01:48:49,760
like facing direction tags

2634
01:48:47,679 --> 01:48:52,079
on it but i think that's the only other

2635
01:48:49,760 --> 01:48:55,280
thing that it has on it right

2636
01:48:52,079 --> 01:48:55,920
so orphan hero with an asset type of

2637
01:48:55,279 --> 01:48:59,039
body

2638
01:48:55,920 --> 01:49:00,319
is what we would expect for um for

2639
01:48:59,039 --> 01:49:02,000
creating the player

2640
01:49:00,319 --> 01:49:04,399
right like we want to actually create a

2641
01:49:02,000 --> 01:49:06,479
player in the world

2642
01:49:04,399 --> 01:49:07,759
um so here's the function for add player

2643
01:49:06,479 --> 01:49:10,879
and you can see it

2644
01:49:07,760 --> 01:49:13,199
doing the piece asset thing it's calling

2645
01:49:10,880 --> 01:49:14,560
change hash to take like the orphan hero

2646
01:49:13,198 --> 01:49:16,079
hash and modify it

2647
01:49:14,560 --> 01:49:17,599
my guess is like the change hash

2648
01:49:16,079 --> 01:49:19,679
function probably just

2649
01:49:17,599 --> 01:49:21,279
doesn't work like we probably just like

2650
01:49:19,679 --> 01:49:25,118
threw that in there and it's broken

2651
01:49:21,279 --> 01:49:27,279
right um so

2652
01:49:25,118 --> 01:49:29,039
if we look and see how this works you

2653
01:49:27,279 --> 01:49:32,000
can see the basic category here

2654
01:49:29,039 --> 01:49:32,399
it's saying get tag hash by passing the

2655
01:49:32,000 --> 01:49:33,840
type

2656
01:49:32,399 --> 01:49:36,079
and then whatever the source piece

2657
01:49:33,840 --> 01:49:39,360
assets original hash was

2658
01:49:36,079 --> 01:49:40,719
um so that probably that code probably

2659
01:49:39,359 --> 01:49:43,759
isn't broken

2660
01:49:40,719 --> 01:49:48,800
um but this code

2661
01:49:43,760 --> 01:49:48,800
probably is so this right here right

2662
01:49:54,840 --> 01:50:00,719
um

2663
01:49:56,880 --> 01:50:02,960
it doesn't look particularly broken to

2664
01:50:00,719 --> 01:50:02,960
me

2665
01:50:08,840 --> 01:50:11,840
um

2666
01:50:19,198 --> 01:50:28,000
i i can't say i know

2667
01:50:22,880 --> 01:50:28,000
what would be wrong about that

2668
01:50:36,800 --> 01:50:40,800
so i mean you're just taking the

2669
01:50:38,158 --> 01:50:44,158
category and you're oring it in

2670
01:50:40,800 --> 01:50:47,199
to this other tags system

2671
01:50:44,158 --> 01:50:50,399
and you're you're knocking out

2672
01:50:47,198 --> 01:50:52,559
everything but the bottom

2673
01:50:50,399 --> 01:50:54,719
eight bits which is exactly what you

2674
01:50:52,560 --> 01:50:57,679
need to or in there

2675
01:50:54,719 --> 01:51:00,319
so you know that doesn't seem

2676
01:50:57,679 --> 01:51:04,800
particularly suspicious

2677
01:51:00,319 --> 01:51:07,920
does it i mean seems

2678
01:51:04,800 --> 01:51:10,560
like what you would expect so

2679
01:51:07,920 --> 01:51:10,560
hard to

2680
01:51:12,319 --> 01:51:14,569
hard to think about where that would be

2681
01:51:14,158 --> 01:51:16,079
going

2682
01:51:14,569 --> 01:51:20,479
[Music]

2683
01:51:16,079 --> 01:51:23,840
pear-shaped you know um

2684
01:51:20,479 --> 01:51:25,439
doesn't seem doesn't seem super

2685
01:51:23,840 --> 01:51:28,480
plausible

2686
01:51:25,439 --> 01:51:34,479
that that's broken so

2687
01:51:28,479 --> 01:51:36,158
it would be nice to know

2688
01:51:34,479 --> 01:51:38,079
it would be nice to know if those tags

2689
01:51:36,158 --> 01:51:40,799
were wrong or right

2690
01:51:38,079 --> 01:51:41,359
um there's a sort of separate thing here

2691
01:51:40,800 --> 01:51:43,760
that i'm

2692
01:51:41,359 --> 01:51:44,960
thinking about as well that's worth

2693
01:51:43,760 --> 01:51:48,000
noting

2694
01:51:44,960 --> 01:51:51,520
um so i'm going to point it out so

2695
01:51:48,000 --> 01:51:54,560
if we just said that the asset

2696
01:51:51,520 --> 01:51:58,400
basic category is just another

2697
01:51:54,560 --> 01:52:01,440
tag id you know what i'm saying

2698
01:51:58,399 --> 01:52:02,559
um then this whole thing would be a lot

2699
01:52:01,439 --> 01:52:04,879
more straightforward

2700
01:52:02,560 --> 01:52:06,639
it would just be the category would be

2701
01:52:04,880 --> 01:52:09,199
the first tag

2702
01:52:06,639 --> 01:52:11,039
and then off you would go i wanted to

2703
01:52:09,198 --> 01:52:11,919
bug this first but i think the next

2704
01:52:11,039 --> 01:52:13,599
thing i want to do

2705
01:52:11,920 --> 01:52:15,599
is just get rid of basic category

2706
01:52:13,599 --> 01:52:16,800
altogether and it's just another tag

2707
01:52:15,599 --> 01:52:18,400
so if you want to say that something's a

2708
01:52:16,800 --> 01:52:19,520
block you just put block as the first

2709
01:52:18,399 --> 01:52:22,319
tag

2710
01:52:19,520 --> 01:52:23,920
right and that could be automatically

2711
01:52:22,319 --> 01:52:26,000
added by the asset system

2712
01:52:23,920 --> 01:52:28,079
so we could just automatically include

2713
01:52:26,000 --> 01:52:29,359
that thing as the first tag always so

2714
01:52:28,079 --> 01:52:31,760
you don't have to do it

2715
01:52:29,359 --> 01:52:32,799
it's the same thing but the code on the

2716
01:52:31,760 --> 01:52:35,760
inside doesn't

2717
01:52:32,800 --> 01:52:37,840
think about basic categories as being

2718
01:52:35,760 --> 01:52:40,239
special

2719
01:52:37,840 --> 01:52:42,159
because they're not asset type is

2720
01:52:40,238 --> 01:52:44,079
special like is it a sound or a bitmap

2721
01:52:42,158 --> 01:52:46,638
that we actually have to know about

2722
01:52:44,079 --> 01:52:48,158
but basic category doesn't mean anything

2723
01:52:46,639 --> 01:52:50,480
like

2724
01:52:48,158 --> 01:52:52,638
it's just a texture one way or the other

2725
01:52:50,479 --> 01:52:56,079
we don't care

2726
01:52:52,639 --> 01:52:56,400
what the category is right so i do think

2727
01:52:56,079 --> 01:53:00,079
that

2728
01:52:56,399 --> 01:53:03,118
probably wants to get uh

2729
01:53:00,079 --> 01:53:05,599
replaced but that still

2730
01:53:03,118 --> 01:53:07,359
doesn't answer the question of why these

2731
01:53:05,599 --> 01:53:09,279
tags aren't being matched here

2732
01:53:07,359 --> 01:53:11,598
uh and so what i'd like to do is take a

2733
01:53:09,279 --> 01:53:14,880
look at why that's happening

2734
01:53:11,599 --> 01:53:16,480
so let's go ahead over to uh debug build

2735
01:53:14,880 --> 01:53:20,239
and just step through and see

2736
01:53:16,479 --> 01:53:24,000
like what is going on with the body head

2737
01:53:20,238 --> 01:53:24,559
hat uh all that stuff why is that not

2738
01:53:24,000 --> 01:53:27,840
working

2739
01:53:24,560 --> 01:53:27,840
like what's the problem

2740
01:53:31,439 --> 01:53:35,039
and uh i don't know so what is the

2741
01:53:34,238 --> 01:53:41,839
problem

2742
01:53:35,039 --> 01:53:41,840
if we

2743
01:53:46,238 --> 01:53:49,519
maybe i'll go into that add player

2744
01:53:48,399 --> 01:53:52,559
function

2745
01:53:49,520 --> 01:53:54,719
maybe this is the best way to do it um

2746
01:53:52,560 --> 01:53:56,560
so when we add the player we'll just

2747
01:53:54,719 --> 01:53:58,158
look at what the pieces what the

2748
01:53:56,560 --> 01:54:01,199
individual pieces are

2749
01:53:58,158 --> 01:54:05,679
that end up getting looked at so

2750
01:54:01,198 --> 01:54:05,678
you know if we look through here um

2751
01:54:05,920 --> 01:54:09,840
let's look at like the hero tags

2752
01:54:10,960 --> 01:54:17,840
so here's the hash value

2753
01:54:14,319 --> 01:54:22,238
and as expected like the bottom is zero

2754
01:54:17,840 --> 01:54:25,279
and then we've got ox26 and

2755
01:54:22,238 --> 01:54:28,718
oxa are probably the two

2756
01:54:25,279 --> 01:54:29,118
things um so let's let's just act but

2757
01:54:28,719 --> 01:54:33,439
you know

2758
01:54:29,118 --> 01:54:38,238
let's actually do these correctly

2759
01:54:33,439 --> 01:54:38,238
so there's the first tag and

2760
01:54:40,158 --> 01:54:43,598
there's the second tag so it's actually

2761
01:54:42,158 --> 01:54:46,960
not shifted up differently sorry

2762
01:54:43,599 --> 01:54:50,480
um so if we want to know

2763
01:54:46,960 --> 01:54:55,039
what ox 26 and ox 28

2764
01:54:50,479 --> 01:54:58,479
are uh they're 38 and 40.

2765
01:54:55,039 --> 01:55:01,599
so looking at uh the asset

2766
01:54:58,479 --> 01:55:01,598
tag id oops

2767
01:55:02,238 --> 01:55:08,479
uh 38 and 40 zero one two three

2768
01:55:05,520 --> 01:55:09,280
four five six seven eight nine ten

2769
01:55:08,479 --> 01:55:12,479
eleven twelve

2770
01:55:09,279 --> 01:55:18,479
thirteen seventeen eighteen nineteen

2771
01:55:12,479 --> 01:55:19,839
twenty twenty one two two

2772
01:55:18,479 --> 01:55:21,759
twenty eight twenty nine thirty three

2773
01:55:19,840 --> 01:55:25,039
one three two three three four three

2774
01:55:21,760 --> 01:55:25,039
six three seven thirty eight

2775
01:55:25,439 --> 01:55:32,960
and forty so we're producing

2776
01:55:29,039 --> 01:55:36,519
the correct tags for that

2777
01:55:32,960 --> 01:55:40,319
um so

2778
01:55:36,520 --> 01:55:43,679
20x26 and ox28 are the correct

2779
01:55:40,319 --> 01:55:47,439
you know hero tags um

2780
01:55:43,679 --> 01:55:50,560
when we go to body piece

2781
01:55:47,439 --> 01:55:54,399
let's just see if that hash gets

2782
01:55:50,560 --> 01:55:57,360
is then the same hash value

2783
01:55:54,399 --> 01:56:00,238
only with the bottom bits modified and

2784
01:55:57,359 --> 01:56:02,319
so you can see it is so it's just the oa

2785
01:56:00,238 --> 01:56:04,158
got inserted there which is exactly what

2786
01:56:02,319 --> 01:56:07,599
we would expect

2787
01:56:04,158 --> 01:56:10,799
and for ox uh oops o

2788
01:56:07,599 --> 01:56:14,079
x o a uh the only question is

2789
01:56:10,800 --> 01:56:18,159
is 10 right uh the

2790
01:56:14,079 --> 01:56:22,000
right asset type for for this

2791
01:56:18,158 --> 01:56:25,439
you know um and so let's see 0

2792
01:56:22,000 --> 01:56:28,560
1 2 3 4 5 6 7 8 9

2793
01:56:25,439 --> 01:56:33,198
10. so like it

2794
01:56:28,560 --> 01:56:33,199
seems to be asking for the correct piece

2795
01:56:34,560 --> 01:56:41,280
um so the only thing i can think of

2796
01:56:38,319 --> 01:56:43,439
is that somehow so unless something more

2797
01:56:41,279 --> 01:56:44,559
subtle is going wrong like the tags that

2798
01:56:43,439 --> 01:56:47,678
are built for this

2799
01:56:44,560 --> 01:56:50,560
thing like aren't working

2800
01:56:47,679 --> 01:56:51,199
uh the only thing other thing i could

2801
01:56:50,560 --> 01:56:54,080
think of

2802
01:56:51,198 --> 01:56:54,719
is like is the matching code borked

2803
01:56:54,079 --> 01:56:58,000
right

2804
01:56:54,719 --> 01:57:00,639
so when we do the load asset although if

2805
01:56:58,000 --> 01:57:02,719
it was how would the glove be working

2806
01:57:00,639 --> 01:57:04,079
right that's the only thing like if we

2807
01:57:02,719 --> 01:57:08,000
run this

2808
01:57:04,079 --> 01:57:10,079
what we see is that uh

2809
01:57:08,000 --> 01:57:11,439
we do have something where facing

2810
01:57:10,079 --> 01:57:14,238
direction is working

2811
01:57:11,439 --> 01:57:15,759
the glove right so if we change the

2812
01:57:14,238 --> 01:57:18,799
facing direction of the glove

2813
01:57:15,760 --> 01:57:20,960
you can see that it actually does pick a

2814
01:57:18,800 --> 01:57:23,760
facing direction for the glove

2815
01:57:20,960 --> 01:57:24,719
um at least it doesn't the downward

2816
01:57:23,760 --> 01:57:27,280
glove

2817
01:57:24,719 --> 01:57:29,439
doesn't pick the correct one but all the

2818
01:57:27,279 --> 01:57:32,719
rest appear to

2819
01:57:29,439 --> 01:57:34,079
um so it is picking a facing direction

2820
01:57:32,719 --> 01:57:38,000
for the glove

2821
01:57:34,079 --> 01:57:40,719
just not the hero

2822
01:57:38,000 --> 01:57:43,679
so what's going on there like let's look

2823
01:57:40,719 --> 01:57:43,679
for some clues

2824
01:57:47,039 --> 01:57:50,880
so if we were to look at the body data

2825
01:57:50,319 --> 01:57:54,079
file

2826
01:57:50,880 --> 01:57:56,400
this is it right and

2827
01:57:54,079 --> 01:57:57,198
so there is other stuff in here we don't

2828
01:57:56,399 --> 01:58:00,638
know

2829
01:57:57,198 --> 01:58:03,118
um you know we don't load those at all

2830
01:58:00,639 --> 01:58:04,239
at the moment um here's the glove data

2831
01:58:03,118 --> 01:58:06,479
file

2832
01:58:04,238 --> 01:58:08,079
right and they they line up in the sense

2833
01:58:06,479 --> 01:58:10,959
that these are the same

2834
01:58:08,079 --> 01:58:13,198
uh inputs for all intents and purposes

2835
01:58:10,960 --> 01:58:16,319
right

2836
01:58:13,198 --> 01:58:17,118
so the only question is like okay so our

2837
01:58:16,319 --> 01:58:20,158
body

2838
01:58:17,118 --> 01:58:22,079
and and hand is there something like

2839
01:58:20,158 --> 01:58:25,118
materially different happening

2840
01:58:22,079 --> 01:58:26,319
in in there right and there might be i

2841
01:58:25,118 --> 01:58:29,039
don't know

2842
01:58:26,319 --> 01:58:29,039
um oh

2843
01:58:32,840 --> 01:58:38,079
well

2844
01:58:35,039 --> 01:58:40,880
there there actually might be so

2845
01:58:38,079 --> 01:58:41,679
let's take a look at where asset body is

2846
01:58:40,880 --> 01:58:44,719
used

2847
01:58:41,679 --> 01:58:48,158
in the importer which is here

2848
01:58:44,719 --> 01:58:51,439
um what very well may be happening

2849
01:58:48,158 --> 01:58:53,759
is these and

2850
01:58:51,439 --> 01:58:55,678
yeah so it's the other things you can

2851
01:58:53,760 --> 01:58:58,719
see these things getting added

2852
01:58:55,679 --> 01:58:59,440
right the tag attack uh and stuff like

2853
01:58:58,719 --> 01:59:02,480
that

2854
01:58:59,439 --> 01:59:06,000
so actually probably what's happening

2855
01:59:02,479 --> 01:59:10,638
is this case one here so

2856
01:59:06,000 --> 01:59:15,118
zero is idle one is dodge left and right

2857
01:59:10,639 --> 01:59:18,319
uh three is move

2858
01:59:15,118 --> 01:59:21,519
hit attack one and two

2859
01:59:18,319 --> 01:59:22,079
uh but actually so in anything in case

2860
01:59:21,520 --> 01:59:25,280
zero

2861
01:59:22,079 --> 01:59:25,679
tag idle is being added that's probably

2862
01:59:25,279 --> 01:59:30,719
the

2863
01:59:25,679 --> 01:59:34,639
problem actually

2864
01:59:30,719 --> 01:59:34,639
right um

2865
01:59:34,880 --> 01:59:38,800
so let's just not do that

2866
01:59:40,639 --> 01:59:46,319
let's just not do that uh because if tag

2867
01:59:44,238 --> 01:59:49,678
idle's not there

2868
01:59:46,319 --> 01:59:51,519
then i think that would work uh because

2869
01:59:49,679 --> 01:59:53,440
tag idle is probably what's producing

2870
01:59:51,520 --> 01:59:55,679
the problem now we could

2871
01:59:53,439 --> 01:59:57,839
shove tag idle on there but i don't

2872
01:59:55,679 --> 02:00:00,239
think we want to do that

2873
01:59:57,840 --> 02:00:02,159
so for dynamic tags we would probably do

2874
02:00:00,238 --> 02:00:04,000
something slightly different than this

2875
02:00:02,158 --> 02:00:06,079
so we're probably going to want to fix

2876
02:00:04,000 --> 02:00:07,920
this actually

2877
02:00:06,079 --> 02:00:09,118
eventually but you know just not right

2878
02:00:07,920 --> 02:00:12,239
now

2879
02:00:09,118 --> 02:00:15,920
but that's probably the only issue

2880
02:00:12,238 --> 02:00:27,839
would be my guess is it's just there's

2881
02:00:15,920 --> 02:00:27,840
tags on there that we don't want

2882
02:00:28,158 --> 02:00:34,158
yep that's exactly what it was um

2883
02:00:31,840 --> 02:00:34,960
and so i don't really know what happens

2884
02:00:34,158 --> 02:00:37,439
with that

2885
02:00:34,960 --> 02:00:38,719
that load thing that occurs there it

2886
02:00:37,439 --> 02:00:40,719
looks like it's probably just because

2887
02:00:38,719 --> 02:00:41,599
things get reloaded because the tags

2888
02:00:40,719 --> 02:00:43,520
changed

2889
02:00:41,599 --> 02:00:45,199
and when you actually go and save them

2890
02:00:43,520 --> 02:00:45,760
you won't have that happen so my guess

2891
02:00:45,198 --> 02:00:48,638
is

2892
02:00:45,760 --> 02:00:50,400
this is just uh because of like tag

2893
02:00:48,639 --> 02:00:51,840
reloading or something right and once

2894
02:00:50,399 --> 02:00:53,118
all the tags have been straightened out

2895
02:00:51,840 --> 02:00:55,360
then you're good

2896
02:00:53,118 --> 02:00:57,279
that's my guess anyway okay so head is

2897
02:00:55,359 --> 02:01:01,679
probably the same problem

2898
02:00:57,279 --> 02:01:04,880
right uh so in here

2899
02:01:01,679 --> 02:01:05,920
it's probably the same thing this wants

2900
02:01:04,880 --> 02:01:09,118
no tag

2901
02:01:05,920 --> 02:01:11,840
to be added um

2902
02:01:09,118 --> 02:01:11,839
and off you go

2903
02:01:14,158 --> 02:01:23,598
yeah um so then i think we're all good

2904
02:01:20,000 --> 02:01:26,560
i think

2905
02:01:23,599 --> 02:01:26,560
it's really interesting

2906
02:01:26,800 --> 02:01:31,599
so now i'm just wondering like yeah so

2907
02:01:28,319 --> 02:01:31,599
if i go in here and do

2908
02:01:32,238 --> 02:01:41,919
reload save says no changes

2909
02:01:37,118 --> 02:01:43,519
so what is that what is that weirdness

2910
02:01:41,920 --> 02:01:45,599
it's like if i change the facing

2911
02:01:43,520 --> 02:01:47,679
direction there's some kind of weird

2912
02:01:45,599 --> 02:01:48,719
like load time bug there that we need to

2913
02:01:47,679 --> 02:01:51,039
fix

2914
02:01:48,719 --> 02:01:52,960
um with the lighting that i don't know

2915
02:01:51,039 --> 02:01:54,560
what is i have no idea what is actually

2916
02:01:52,960 --> 02:01:55,760
causing it but there's some kind of like

2917
02:01:54,560 --> 02:01:57,679
weird like

2918
02:01:55,760 --> 02:01:59,199
submission error like a texture that

2919
02:01:57,679 --> 02:02:00,079
doesn't get submitted properly or

2920
02:01:59,198 --> 02:02:03,279
something like that

2921
02:02:00,079 --> 02:02:05,920
right um

2922
02:02:03,279 --> 02:02:07,359
and i just don't know i don't know what

2923
02:02:05,920 --> 02:02:09,679
it is

2924
02:02:07,359 --> 02:02:10,960
um but we're almost there and as we

2925
02:02:09,679 --> 02:02:12,560
clean up more of this it should be

2926
02:02:10,960 --> 02:02:15,760
easier for us to find

2927
02:02:12,560 --> 02:02:16,719
uh those problems anyway let me take

2928
02:02:15,760 --> 02:02:20,079
another look

2929
02:02:16,719 --> 02:02:21,840
at uh some of the stuff so

2930
02:02:20,079 --> 02:02:24,880
facing direction wise let's take a look

2931
02:02:21,840 --> 02:02:27,279
at facing direction

2932
02:02:24,880 --> 02:02:28,400
uh in the generator real quick not in

2933
02:02:27,279 --> 02:02:32,210
base game

2934
02:02:28,399 --> 02:02:35,420
um so

2935
02:02:32,210 --> 02:02:35,420
[Music]

2936
02:02:36,158 --> 02:02:38,638
entity

2937
02:02:39,439 --> 02:02:46,238
world gen probably this

2938
02:02:42,560 --> 02:02:49,199
so when we add orphan here

2939
02:02:46,238 --> 02:02:49,678
and we're doing this stuff i i kind of

2940
02:02:49,198 --> 02:02:52,158
want

2941
02:02:49,679 --> 02:02:53,679
to make the our orphans fix fix our

2942
02:02:52,158 --> 02:02:57,519
orphans

2943
02:02:53,679 --> 02:03:00,560
you can see us adding orphan to this

2944
02:02:57,520 --> 02:03:01,119
uh right we're we're adding the tag

2945
02:03:00,560 --> 02:03:03,440
orphan

2946
02:03:01,118 --> 02:03:04,719
but we don't specify like which orphan

2947
02:03:03,439 --> 02:03:08,000
it is

2948
02:03:04,719 --> 02:03:11,439
um it's it's this i guess

2949
02:03:08,000 --> 02:03:14,079
is the problem which we're not using so

2950
02:03:11,439 --> 02:03:14,638
i feel like what we want to do here and

2951
02:03:14,079 --> 02:03:19,279
also

2952
02:03:14,639 --> 02:03:22,800
if you look at at this

2953
02:03:19,279 --> 02:03:26,000
when we're doing our entity

2954
02:03:22,800 --> 02:03:29,840
work we you can see here like these

2955
02:03:26,000 --> 02:03:33,840
things get added to the result tags

2956
02:03:29,840 --> 02:03:33,840
and i'm not sure that that

2957
02:03:36,639 --> 02:03:40,400
check this room to see if it meets other

2958
02:03:40,840 --> 02:03:48,400
criteria

2959
02:03:43,679 --> 02:03:52,800
so we add the orphan tag

2960
02:03:48,399 --> 02:03:57,759
we add the name tag and then we return

2961
02:03:52,800 --> 02:04:00,000
that result the gen entity right

2962
02:03:57,760 --> 02:04:00,000
and

2963
02:04:01,118 --> 02:04:04,238
i guess the only thing i'm kind of

2964
02:04:02,719 --> 02:04:10,158
confused about is is that so

2965
02:04:04,238 --> 02:04:14,000
is that what why wouldn't that work

2966
02:04:10,158 --> 02:04:14,000
it should shouldn't it should it

2967
02:04:22,158 --> 02:04:28,479
well actually no so

2968
02:04:26,639 --> 02:04:32,400
how does it know like is it where does

2969
02:04:28,479 --> 02:04:39,839
it add like body and head and stuff

2970
02:04:32,399 --> 02:04:39,839
right uh

2971
02:04:43,359 --> 02:04:48,158
so it calls the add orphan function

2972
02:04:45,920 --> 02:04:48,158
right

2973
02:04:49,198 --> 02:04:53,839
so where is that

2974
02:04:55,039 --> 02:04:59,519
so it it calls the add orphan function

2975
02:04:57,520 --> 02:05:02,239
when it wants to actually do this

2976
02:04:59,520 --> 02:05:04,239
it it uses the two things that gets

2977
02:05:02,238 --> 02:05:07,359
passed from base asset which should have

2978
02:05:04,238 --> 02:05:10,638
been right i think

2979
02:05:07,359 --> 02:05:13,839
um and it adds those pieces

2980
02:05:10,639 --> 02:05:18,840
in here so i feel like that

2981
02:05:13,840 --> 02:05:21,840
should probably work um at least in

2982
02:05:18,840 --> 02:05:21,840
theory

2983
02:05:22,639 --> 02:05:26,880
so that why why is this not working is

2984
02:05:25,359 --> 02:05:27,839
is the only thing i want to kind of

2985
02:05:26,880 --> 02:05:31,440
finish up on so

2986
02:05:27,840 --> 02:05:35,520
is this somehow wrong like

2987
02:05:31,439 --> 02:05:37,439
is it not orphan with the name tag uh

2988
02:05:35,520 --> 02:05:39,360
is that not working for some reason like

2989
02:05:37,439 --> 02:05:42,078
why is that not working

2990
02:05:39,359 --> 02:05:43,759
so i'm gonna break in that function just

2991
02:05:42,078 --> 02:05:47,599
because i i want to see like what it

2992
02:05:43,760 --> 02:05:47,599
actually produces for the tag set there

2993
02:05:47,679 --> 02:05:51,118
and then we'll go from there so in add

2994
02:05:50,158 --> 02:05:54,238
orphan

2995
02:05:51,118 --> 02:05:55,439
let's go ahead and run uh and we'll just

2996
02:05:54,238 --> 02:05:57,039
see

2997
02:05:55,439 --> 02:05:58,638
what what this is actually adding

2998
02:05:57,039 --> 02:06:00,960
because i have no idea

2999
02:05:58,639 --> 02:06:02,319
like what's in base asset for starters

3000
02:06:00,960 --> 02:06:05,118
right

3001
02:06:02,319 --> 02:06:06,479
what did that actually entail and in

3002
02:06:05,118 --> 02:06:07,598
fact we can even look at this a little

3003
02:06:06,479 --> 02:06:09,919
bit easier because we assume these

3004
02:06:07,599 --> 02:06:12,719
functions are working properly now

3005
02:06:09,920 --> 02:06:14,000
um so if we look at the thing that made

3006
02:06:12,719 --> 02:06:16,000
this piece hash

3007
02:06:14,000 --> 02:06:17,118
like where this was actually created you

3008
02:06:16,000 --> 02:06:22,078
can see that it's

3009
02:06:17,118 --> 02:06:25,839
calling um this like pending entity tags

3010
02:06:22,078 --> 02:06:28,399
bit so if i just look at pending entity

3011
02:06:25,840 --> 02:06:32,159
tags that should tell me like what this

3012
02:06:28,399 --> 02:06:32,158
was supposed to have in it right

3013
02:06:32,238 --> 02:06:38,799
so it's supposed to have orphan baby

3014
02:06:35,520 --> 02:06:41,119
and and that feels like it should work

3015
02:06:38,800 --> 02:06:42,840
right orphan baby and then nothing

3016
02:06:41,118 --> 02:06:46,559
afterward

3017
02:06:42,840 --> 02:06:49,360
um and so when it calls uh

3018
02:06:46,560 --> 02:06:51,119
when it smushes that down you know well

3019
02:06:49,359 --> 02:06:54,000
i mean we can double check but it should

3020
02:06:51,118 --> 02:06:57,759
have produced orphan baby as the two

3021
02:06:54,000 --> 02:07:02,319
um pieces here as well so

3022
02:06:57,760 --> 02:07:05,599
you know um and i and 26 ox26

3023
02:07:02,319 --> 02:07:07,840
is orphan and presumably 9c is baby

3024
02:07:05,599 --> 02:07:07,840
um

3025
02:07:11,520 --> 02:07:17,280
so it sure seems right so i don't know

3026
02:07:15,439 --> 02:07:20,238
why those aren't being found

3027
02:07:17,279 --> 02:07:21,439
uh so that's like a little weird because

3028
02:07:20,238 --> 02:07:22,959
in the hht

3029
02:07:21,439 --> 02:07:25,439
all of those should be there right so

3030
02:07:22,960 --> 02:07:29,279
like orphan baby

3031
02:07:25,439 --> 02:07:31,519
uh is right here there's the body

3032
02:07:29,279 --> 02:07:33,198
um and so we'd at least see the body and

3033
02:07:31,520 --> 02:07:34,159
the head should also be here as well

3034
02:07:33,198 --> 02:07:38,479
right there it is

3035
02:07:34,158 --> 02:07:41,839
just saw it so it's really kind of a

3036
02:07:38,479 --> 02:07:41,839
little confusing

3037
02:07:44,319 --> 02:07:47,118
i don't get it

3038
02:07:51,520 --> 02:07:57,840
i do not get it maybe we'll save this

3039
02:07:55,118 --> 02:07:57,839
for next weekend

3040
02:08:06,840 --> 02:08:10,159
maybe

3041
02:08:08,479 --> 02:08:12,158
yeah so i don't know why it's not

3042
02:08:10,158 --> 02:08:15,920
finding that um because

3043
02:08:12,158 --> 02:08:19,039
uh again we removed the idle

3044
02:08:15,920 --> 02:08:20,840
from from the body import so in theory

3045
02:08:19,039 --> 02:08:24,158
that shouldn't be there anymore

3046
02:08:20,840 --> 02:08:25,599
right um you know and maybe it still is

3047
02:08:24,158 --> 02:08:26,399
and maybe that's part of the problem i

3048
02:08:25,599 --> 02:08:28,960
don't know

3049
02:08:26,399 --> 02:08:31,039
um but let's save that for next time and

3050
02:08:28,960 --> 02:08:34,960
we'll kind of continue down this road

3051
02:08:31,039 --> 02:08:37,840
for now we'll do brief q a um

3052
02:08:34,960 --> 02:08:37,840
and we'll go from there

3053
02:08:54,399 --> 02:09:01,519
um so a question about

3054
02:08:58,399 --> 02:09:03,359
uh reading knr to learn c

3055
02:09:01,520 --> 02:09:04,639
and the question is do you think i

3056
02:09:03,359 --> 02:09:06,559
should be able to solve all the

3057
02:09:04,639 --> 02:09:08,078
exercises one by one or could i skip

3058
02:09:06,560 --> 02:09:09,360
them and continue with the text and get

3059
02:09:08,078 --> 02:09:11,279
back to them later

3060
02:09:09,359 --> 02:09:13,439
for example before chapter one there's

3061
02:09:11,279 --> 02:09:14,319
an exercise to remove comments from a c

3062
02:09:13,439 --> 02:09:15,919
program

3063
02:09:14,319 --> 02:09:17,439
and i'm having trouble to solve it at

3064
02:09:15,920 --> 02:09:22,158
this stage

3065
02:09:17,439 --> 02:09:22,158
um so i would say yeah the

3066
02:09:22,560 --> 02:09:26,239
there's two things to say about that one

3067
02:09:24,800 --> 02:09:29,679
would be

3068
02:09:26,238 --> 02:09:33,598
that in my experience exercises

3069
02:09:29,679 --> 02:09:35,599
in books should have been written

3070
02:09:33,599 --> 02:09:37,440
so that you should do them all because

3071
02:09:35,599 --> 02:09:39,920
practice is very important

3072
02:09:37,439 --> 02:09:41,439
but my recollection from most

3073
02:09:39,920 --> 02:09:43,279
programming books that i've read

3074
02:09:41,439 --> 02:09:45,039
is that the exercises are not

3075
02:09:43,279 --> 02:09:46,880
particularly well architected

3076
02:09:45,039 --> 02:09:49,039
to actually guarantee that you could

3077
02:09:46,880 --> 02:09:51,599
possibly solve them at that stage

3078
02:09:49,039 --> 02:09:52,560
and more importantly at the point where

3079
02:09:51,599 --> 02:09:54,960
you are

3080
02:09:52,560 --> 02:09:55,840
trying them it doesn't offer the right

3081
02:09:54,960 --> 02:09:59,679
kind of help

3082
02:09:55,840 --> 02:10:01,520
to like get you to be able to solve them

3083
02:09:59,679 --> 02:10:03,840
so i think what i would probably say is

3084
02:10:01,520 --> 02:10:06,079
try the exercises

3085
02:10:03,840 --> 02:10:06,960
but if one of them seems like way too

3086
02:10:06,078 --> 02:10:08,799
hard

3087
02:10:06,960 --> 02:10:10,158
then definitely skip it and try to come

3088
02:10:08,800 --> 02:10:13,760
back to it later

3089
02:10:10,158 --> 02:10:15,679
because i i don't think that

3090
02:10:13,760 --> 02:10:17,360
most programming books especially ones

3091
02:10:15,679 --> 02:10:20,158
that are that old

3092
02:10:17,359 --> 02:10:22,559
but even today they usually don't have

3093
02:10:20,158 --> 02:10:25,118
particularly well thought out exercises

3094
02:10:22,560 --> 02:10:26,840
so it's entirely possible that there's

3095
02:10:25,118 --> 02:10:28,158
an exercise in there that's like way too

3096
02:10:26,840 --> 02:10:29,599
difficult

3097
02:10:28,158 --> 02:10:31,198
for the level of programming that you

3098
02:10:29,599 --> 02:10:32,239
would be at if you'd read the book up to

3099
02:10:31,198 --> 02:10:43,839
that point that's

3100
02:10:32,238 --> 02:10:43,839
probably quite common

3101
02:10:47,039 --> 02:10:52,399
do you think that possibly optional

3102
02:10:50,560 --> 02:10:54,159
memory safety features are desirable to

3103
02:10:52,399 --> 02:10:57,519
have in a language or should it be the

3104
02:10:54,158 --> 02:11:01,519
programmer's job

3105
02:10:57,520 --> 02:11:01,520
i guess what i would say is

3106
02:11:02,560 --> 02:11:05,920
i don't really think

3107
02:11:08,000 --> 02:11:11,439
so i have two things to say about that

3108
02:11:10,319 --> 02:11:14,960
the first one

3109
02:11:11,439 --> 02:11:16,078
is that 99 of all memory safety features

3110
02:11:14,960 --> 02:11:18,399
that people talk about

3111
02:11:16,078 --> 02:11:19,198
only exist because the way that people

3112
02:11:18,399 --> 02:11:22,559
write code

3113
02:11:19,198 --> 02:11:24,799
is bad so the idea that you just malloc

3114
02:11:22,560 --> 02:11:26,719
tons of stuff and then like right around

3115
02:11:24,800 --> 02:11:28,239
or whatever is just a terrible way to

3116
02:11:26,719 --> 02:11:30,078
program and so

3117
02:11:28,238 --> 02:11:31,678
there's tons of like memory errors that

3118
02:11:30,078 --> 02:11:33,198
occur because the way that the programs

3119
02:11:31,679 --> 02:11:34,880
were written was bad

3120
02:11:33,198 --> 02:11:36,879
having a bunch of stuff in your language

3121
02:11:34,880 --> 02:11:38,639
to try to paper over that problem

3122
02:11:36,880 --> 02:11:39,920
isn't interesting to me and is kind of a

3123
02:11:38,639 --> 02:11:41,679
waste of time

3124
02:11:39,920 --> 02:11:43,279
so things like rust or whatever are kind

3125
02:11:41,679 --> 02:11:44,158
of just garbage in my opinion and that

3126
02:11:43,279 --> 02:11:47,118
don't think they have

3127
02:11:44,158 --> 02:11:48,559
any real future other than if people

3128
02:11:47,118 --> 02:11:51,039
continue to pursue

3129
02:11:48,560 --> 02:11:52,560
poor programming practices then maybe

3130
02:11:51,039 --> 02:11:53,920
languages like rust are interesting

3131
02:11:52,560 --> 02:11:57,199
because they try to help you

3132
02:11:53,920 --> 02:12:00,560
not be as bad at bad programming

3133
02:11:57,198 --> 02:12:02,719
that said there are actual things that

3134
02:12:00,560 --> 02:12:07,119
languages can do

3135
02:12:02,719 --> 02:12:09,439
that can make it much easier for you to

3136
02:12:07,118 --> 02:12:10,799
catch errors that you will have in

3137
02:12:09,439 --> 02:12:12,319
programs that are not written

3138
02:12:10,800 --> 02:12:14,960
exceedingly poorly

3139
02:12:12,319 --> 02:12:15,359
so just because lots of memory checking

3140
02:12:14,960 --> 02:12:18,480
stuff

3141
02:12:15,359 --> 02:12:19,679
only applies to very poor ideas about

3142
02:12:18,479 --> 02:12:21,118
programming in the first place

3143
02:12:19,679 --> 02:12:22,800
doesn't mean there aren't plenty of

3144
02:12:21,118 --> 02:12:24,719
memory errors

3145
02:12:22,800 --> 02:12:26,400
that aren't about bad programming that

3146
02:12:24,719 --> 02:12:27,679
we're about you know

3147
02:12:26,399 --> 02:12:29,598
actually trying to program something

3148
02:12:27,679 --> 02:12:30,880
properly but then you know it's just

3149
02:12:29,599 --> 02:12:33,840
hard

3150
02:12:30,880 --> 02:12:35,760
and usually what those boil down to is

3151
02:12:33,840 --> 02:12:39,119
indexing problems

3152
02:12:35,760 --> 02:12:39,840
and indexing problems in c are very

3153
02:12:39,118 --> 02:12:42,960
difficult

3154
02:12:39,840 --> 02:12:45,920
to check for because it requires you to

3155
02:12:42,960 --> 02:12:48,319
manually add assertions everywhere

3156
02:12:45,920 --> 02:12:50,239
and go through like help or functions to

3157
02:12:48,319 --> 02:12:51,118
like check to see that the indexing that

3158
02:12:50,238 --> 02:12:54,399
you're doing

3159
02:12:51,118 --> 02:12:56,399
is proper there are definitely features

3160
02:12:54,399 --> 02:12:58,000
languages could add to make those things

3161
02:12:56,399 --> 02:13:01,039
work better

3162
02:12:58,000 --> 02:13:03,760
and obviously some languages uh

3163
02:13:01,039 --> 02:13:05,599
already have the ability to do more uh

3164
02:13:03,760 --> 02:13:07,280
robust index checking

3165
02:13:05,599 --> 02:13:10,400
and they do that unfortunately by

3166
02:13:07,279 --> 02:13:12,238
requiring you to use certain types

3167
02:13:10,399 --> 02:13:14,479
that do that index checking for you

3168
02:13:12,238 --> 02:13:14,479
right

3169
02:13:14,800 --> 02:13:20,480
so one could imagine a better language

3170
02:13:18,319 --> 02:13:22,000
would be one that allows the user to

3171
02:13:20,479 --> 02:13:24,799
construct types

3172
02:13:22,000 --> 02:13:25,679
that get the same kind of compile time

3173
02:13:24,800 --> 02:13:29,039
checking

3174
02:13:25,679 --> 02:13:29,840
for indexing use that a built-in type

3175
02:13:29,039 --> 02:13:31,840
would have

3176
02:13:29,840 --> 02:13:33,440
in a language that forces you to use

3177
02:13:31,840 --> 02:13:35,360
their built-in types

3178
02:13:33,439 --> 02:13:38,078
to get the memory checking that you

3179
02:13:35,359 --> 02:13:38,078
wanted right

3180
02:13:39,118 --> 02:13:43,679
so there's definitely things languages

3181
02:13:40,880 --> 02:13:46,800
could do some languages are doing them

3182
02:13:43,679 --> 02:13:49,840
most aren't and most languages focus

3183
02:13:46,800 --> 02:13:52,560
on problems that you just wouldn't have

3184
02:13:49,840 --> 02:13:53,679
if you weren't using already bad ideas

3185
02:13:52,560 --> 02:13:59,840
in that language

3186
02:13:53,679 --> 02:13:59,840
right that's about all i could say

3187
02:14:11,279 --> 02:14:16,559
would you like to participate in our

3188
02:14:14,078 --> 02:14:18,158
regular competition for javascript and

3189
02:14:16,560 --> 02:14:21,280
typescript developers

3190
02:14:18,158 --> 02:14:25,198
prize fund 100

3191
02:14:21,279 --> 02:14:29,439
okay i'd just like to point out the fact

3192
02:14:25,198 --> 02:14:32,719
that like i don't know

3193
02:14:29,439 --> 02:14:35,839
of like anywhere maybe

3194
02:14:32,719 --> 02:14:36,639
maybe if you specifically went to a

3195
02:14:35,840 --> 02:14:39,440
country

3196
02:14:36,639 --> 02:14:41,920
who's that was whose currency was

3197
02:14:39,439 --> 02:14:44,479
economically depressed

3198
02:14:41,920 --> 02:14:45,118
maybe you could find no i still don't

3199
02:14:44,479 --> 02:14:47,118
think you could

3200
02:14:45,118 --> 02:14:48,158
i simply don't think it's possible to

3201
02:14:47,118 --> 02:14:51,118
find a game

3202
02:14:48,158 --> 02:14:51,679
engine developer who would ever think it

3203
02:14:51,118 --> 02:14:53,759
was worth

3204
02:14:51,679 --> 02:14:55,279
any to worth it to do anything for a

3205
02:14:53,760 --> 02:14:57,280
hundred dollars

3206
02:14:55,279 --> 02:14:59,679
game engine developers get paid

3207
02:14:57,279 --> 02:15:03,118
fantastically large amounts of money

3208
02:14:59,679 --> 02:15:05,039
to do what they do a hundred dollars is

3209
02:15:03,118 --> 02:15:08,399
absolutely absurd

3210
02:15:05,039 --> 02:15:10,399
like that's a ridiculous number

3211
02:15:08,399 --> 02:15:12,799
to throw out for a prize fund for game

3212
02:15:10,399 --> 02:15:15,118
engine developers

3213
02:15:12,800 --> 02:15:16,719
i i don't even know what to say not

3214
02:15:15,118 --> 02:15:18,960
trying to be snooty it's just like

3215
02:15:16,719 --> 02:15:20,239
come on man who what game engine

3216
02:15:18,960 --> 02:15:21,359
developers ever going to want to

3217
02:15:20,238 --> 02:15:23,678
participate

3218
02:15:21,359 --> 02:15:25,198
in a competition for a hundred dollars

3219
02:15:23,679 --> 02:15:28,560
it's nonsense

3220
02:15:25,198 --> 02:15:28,559
it's absolutely nonsense

3221
02:15:28,719 --> 02:15:31,679
it doesn't make any sense

3222
02:15:32,399 --> 02:15:35,439
do you think that using void star as

3223
02:15:33,920 --> 02:15:38,158
some blank data

3224
02:15:35,439 --> 02:15:39,359
is good okay sorry this is i can't quite

3225
02:15:38,158 --> 02:15:42,319
translate this sentence out

3226
02:15:39,359 --> 02:15:44,000
do you think that using void star as

3227
02:15:42,319 --> 02:15:45,359
blank data is good practice

3228
02:15:44,000 --> 02:15:46,800
for example if you have some generic

3229
02:15:45,359 --> 02:15:49,198
struct called item and then based on

3230
02:15:46,800 --> 02:15:51,520
what item type it is is void

3231
02:15:49,198 --> 02:15:54,399
star uh points to different destructed

3232
02:15:51,520 --> 02:15:55,679
okay i think i think

3233
02:15:54,399 --> 02:15:57,359
maybe i understand what you're saying

3234
02:15:55,679 --> 02:15:58,399
are you just saying do you think void

3235
02:15:57,359 --> 02:16:01,279
pointer like

3236
02:15:58,399 --> 02:16:02,559
do you think having a point a typeless

3237
02:16:01,279 --> 02:16:06,238
pointer

3238
02:16:02,560 --> 02:16:06,239
is useful um

3239
02:16:07,520 --> 02:16:13,119
not particularly often so

3240
02:16:11,039 --> 02:16:14,479
i do think occasionally you need

3241
02:16:13,118 --> 02:16:16,000
pointers that point to something where

3242
02:16:14,479 --> 02:16:17,279
you don't know what it is and then later

3243
02:16:16,000 --> 02:16:18,560
you turn it into something that you do

3244
02:16:17,279 --> 02:16:21,840
know what it is

3245
02:16:18,560 --> 02:16:22,239
um it's kind of a way to do things that

3246
02:16:21,840 --> 02:16:25,360
have

3247
02:16:22,238 --> 02:16:26,158
that have like some polymorphic uh or

3248
02:16:25,359 --> 02:16:27,920
pass-through

3249
02:16:26,158 --> 02:16:29,359
things to it so like for example in c

3250
02:16:27,920 --> 02:16:30,960
plus plus sometimes people will make an

3251
02:16:29,359 --> 02:16:32,718
inheritance hierarchy to do what you're

3252
02:16:30,960 --> 02:16:35,760
talking about

3253
02:16:32,718 --> 02:16:39,039
um i do think void star

3254
02:16:35,760 --> 02:16:41,599
is useful in certain circumstances but

3255
02:16:39,040 --> 02:16:42,479
i don't tend to use it that often so

3256
02:16:41,599 --> 02:16:45,040
it's

3257
02:16:42,478 --> 02:16:46,558
it's a relatively rare thing to do but

3258
02:16:45,040 --> 02:16:47,519
there's nothing wrong with it you just

3259
02:16:46,558 --> 02:16:50,718
have to make sure that

3260
02:16:47,519 --> 02:16:53,200
you actually want that exact behavior

3261
02:16:50,718 --> 02:16:54,079
i will oftentimes rather than that use

3262
02:16:53,200 --> 02:16:56,000
unions

3263
02:16:54,079 --> 02:16:57,679
so i'll put a discriminated union in

3264
02:16:56,000 --> 02:17:00,478
there

3265
02:16:57,679 --> 02:17:01,679
and the main reason for that is because

3266
02:17:00,478 --> 02:17:04,000
avoid star

3267
02:17:01,679 --> 02:17:05,200
so there's a difference between a void

3268
02:17:04,000 --> 02:17:08,478
star

3269
02:17:05,200 --> 02:17:10,319
and a discriminated union

3270
02:17:08,478 --> 02:17:11,679
in both cases someone needs to know the

3271
02:17:10,318 --> 02:17:12,879
type of the thing eventually or they

3272
02:17:11,679 --> 02:17:14,558
can't do anything with it

3273
02:17:12,879 --> 02:17:17,039
so in both cases you probably have an

3274
02:17:14,558 --> 02:17:19,199
enum that says like what is the thing

3275
02:17:17,040 --> 02:17:21,280
the reason i tend to like the union case

3276
02:17:19,200 --> 02:17:24,399
more than the void star case is because

3277
02:17:21,280 --> 02:17:26,159
it tends to be if you put all of your

3278
02:17:24,398 --> 02:17:26,558
stuff together in a union and then use

3279
02:17:26,159 --> 02:17:28,478
the

3280
02:17:26,558 --> 02:17:29,840
the enum to say which one of the things

3281
02:17:28,478 --> 02:17:32,079
you're actually storing

3282
02:17:29,840 --> 02:17:34,478
you know that you'll automatically get a

3283
02:17:32,079 --> 02:17:37,439
nice uniformly sized chunk that you can

3284
02:17:34,478 --> 02:17:40,398
work with in memory very easily

3285
02:17:37,439 --> 02:17:41,280
like void star is usually about i don't

3286
02:17:40,398 --> 02:17:44,239
want to ever

3287
02:17:41,280 --> 02:17:45,120
waste some memory here use for things

3288
02:17:44,239 --> 02:17:46,879
that i don't use

3289
02:17:45,120 --> 02:17:48,319
and that's why i didn't make a union

3290
02:17:46,879 --> 02:17:51,438
right but

3291
02:17:48,318 --> 02:17:53,760
most of the time i find that it's

3292
02:17:51,439 --> 02:17:55,599
better to make everything be a uniform

3293
02:17:53,760 --> 02:17:57,760
size even if there's some wastage

3294
02:17:55,599 --> 02:17:59,359
because then you can make your memory

3295
02:17:57,760 --> 02:18:02,639
allocation

3296
02:17:59,359 --> 02:18:05,280
and clearing and organization all work

3297
02:18:02,638 --> 02:18:06,000
with fixed known sizes and that's just

3298
02:18:05,280 --> 02:18:08,479
usually like

3299
02:18:06,000 --> 02:18:10,159
way more efficient and the little bit of

3300
02:18:08,478 --> 02:18:11,279
wastage that you tend to have in those

3301
02:18:10,159 --> 02:18:13,920
cases

3302
02:18:11,280 --> 02:18:16,000
is actually just fine because memory is

3303
02:18:13,920 --> 02:18:17,439
usually not what you care about you just

3304
02:18:16,000 --> 02:18:20,239
care about cash

3305
02:18:17,439 --> 02:18:24,880
right so typically it just really

3306
02:18:20,239 --> 02:18:25,199
doesn't matter the one other thing i'd

3307
02:18:24,879 --> 02:18:28,000
say

3308
02:18:25,200 --> 02:18:29,760
is that in the case where it does matter

3309
02:18:28,000 --> 02:18:32,159
so when i actually get to a point where

3310
02:18:29,760 --> 02:18:33,679
i do need to know this

3311
02:18:32,159 --> 02:18:35,280
that implies that it's a very high

3312
02:18:33,679 --> 02:18:36,719
throughput thing where the cache would

3313
02:18:35,280 --> 02:18:38,800
matter and in that case

3314
02:18:36,718 --> 02:18:40,799
void star is usually also not the right

3315
02:18:38,799 --> 02:18:42,000
decision because usually what you want

3316
02:18:40,799 --> 02:18:44,879
to do is have

3317
02:18:42,000 --> 02:18:46,558
segregated lists by type and then just

3318
02:18:44,879 --> 02:18:48,000
go straight over the list without having

3319
02:18:46,558 --> 02:18:51,679
to do any tests at all

3320
02:18:48,000 --> 02:18:53,679
right so typically that's why you don't

3321
02:18:51,679 --> 02:18:56,239
see me using the void star

3322
02:18:53,679 --> 02:18:57,840
thing and then change it into a real

3323
02:18:56,239 --> 02:18:59,519
type later at some later

3324
02:18:57,840 --> 02:19:01,200
that's why you don't see me do that very

3325
02:18:59,519 --> 02:19:04,398
often is because it's usually just

3326
02:19:01,200 --> 02:19:07,599
not the right answer to

3327
02:19:04,398 --> 02:19:09,760
any particular problem um

3328
02:19:07,599 --> 02:19:11,200
but that said once in a while it is so i

3329
02:19:09,760 --> 02:19:12,559
don't want to make it sound like you

3330
02:19:11,200 --> 02:19:15,359
never use it it's just

3331
02:19:12,558 --> 02:19:16,159
most of the time discriminated union or

3332
02:19:15,359 --> 02:19:19,359
separate

3333
02:19:16,159 --> 02:19:22,638
arrays of type by

3334
02:19:19,359 --> 02:19:24,800
type those are usually preferable

3335
02:19:22,638 --> 02:19:26,398
solutions to that solution

3336
02:19:24,799 --> 02:19:27,759
and by the way those two things are

3337
02:19:26,398 --> 02:19:29,760
usually preferable solutions to the

3338
02:19:27,760 --> 02:19:31,840
inheritance hierarchy solution as well

3339
02:19:29,760 --> 02:19:33,120
so tip like typically the most common

3340
02:19:31,840 --> 02:19:34,719
thing that people do which is inherent

3341
02:19:33,120 --> 02:19:36,719
hierarchies or something similar

3342
02:19:34,718 --> 02:19:38,318
is almost always wrong i'll just go out

3343
02:19:36,718 --> 02:19:40,239
and say it's always wrong

3344
02:19:38,318 --> 02:19:42,478
um it's never the right solution of the

3345
02:19:40,239 --> 02:19:47,519
problem either discriminated union

3346
02:19:42,478 --> 02:19:50,719
or separate lists of uh identical types

3347
02:19:47,519 --> 02:19:52,478
is usually the correct solution to

3348
02:19:50,719 --> 02:19:56,000
either of those two

3349
02:19:52,478 --> 02:19:56,559
and that maybe hopefully will give you

3350
02:19:56,000 --> 02:19:59,359
some

3351
02:19:56,559 --> 02:20:01,439
clarification there do game engines use

3352
02:19:59,359 --> 02:20:01,760
a common library to import assets from

3353
02:20:01,439 --> 02:20:05,120
say

3354
02:20:01,760 --> 02:20:07,200
maya and blender uh well i guess they

3355
02:20:05,120 --> 02:20:08,960
don't all use a common library but

3356
02:20:07,200 --> 02:20:10,720
they usually do license that from

3357
02:20:08,959 --> 02:20:11,839
somebody whether it's an open source

3358
02:20:10,719 --> 02:20:15,519
thing

3359
02:20:11,840 --> 02:20:18,639
um or like a commercial thing in fact i

3360
02:20:15,520 --> 02:20:20,000
did one of the main commercial ones that

3361
02:20:18,639 --> 02:20:22,719
is used today

3362
02:20:20,000 --> 02:20:22,719
which is this

3363
02:20:28,000 --> 02:20:33,840
uh so this is a you know

3364
02:20:31,439 --> 02:20:35,120
i guess over 5000 titles use this

3365
02:20:33,840 --> 02:20:38,159
apparently

3366
02:20:35,120 --> 02:20:41,200
um this is one that i wrote and

3367
02:20:38,159 --> 02:20:43,439
it does that so it it imports from like

3368
02:20:41,200 --> 02:20:47,439
max and maya and stuff like that

3369
02:20:43,439 --> 02:20:48,800
uh and tons and tons and tons of people

3370
02:20:47,439 --> 02:20:52,239
use that

3371
02:20:48,799 --> 02:20:54,318
there's at least some open source ones i

3372
02:20:52,239 --> 02:20:55,199
don't know like colada was one at one

3373
02:20:54,318 --> 02:20:58,398
time

3374
02:20:55,200 --> 02:21:00,479
um i honestly don't know

3375
02:20:58,398 --> 02:21:03,439
like i think autodesk now ships like a

3376
02:21:00,478 --> 02:21:03,438
film box one

3377
02:21:03,680 --> 02:21:05,920
uh

3378
02:21:09,680 --> 02:21:15,200
uh like this thing

3379
02:21:13,680 --> 02:21:17,040
it's from autodesk so it's almost

3380
02:21:15,200 --> 02:21:18,159
certainly horrible because every piece

3381
02:21:17,040 --> 02:21:21,680
of software they ever ship

3382
02:21:18,159 --> 02:21:25,520
is horrible um but like it's there

3383
02:21:21,680 --> 02:21:26,000
right so uh this is another example of

3384
02:21:25,520 --> 02:21:28,079
one that

3385
02:21:26,000 --> 02:21:29,520
people might use i don't know to what

3386
02:21:28,079 --> 02:21:34,318
extent people do

3387
02:21:29,520 --> 02:21:36,399
use it but it's there uh

3388
02:21:34,318 --> 02:21:38,318
and and i'm sure there are others i just

3389
02:21:36,398 --> 02:21:41,840
i don't know what they are

3390
02:21:38,318 --> 02:21:41,840
right um

3391
02:21:50,559 --> 02:21:52,879
watch your design chat with john which

3392
02:21:51,840 --> 02:21:54,318
is really cool are you moving into

3393
02:21:52,879 --> 02:21:56,959
designing the gameplay for handmade hero

3394
02:21:54,318 --> 02:21:59,840
uh no handbag hero like i mean we are

3395
02:21:56,959 --> 02:22:00,559
doing that now but handmade hero like i

3396
02:21:59,840 --> 02:22:02,398
i don't

3397
02:22:00,559 --> 02:22:03,600
really plan to do much in the way of

3398
02:22:02,398 --> 02:22:05,199
game design for it

3399
02:22:03,600 --> 02:22:06,720
it's it's not that kind of thing right

3400
02:22:05,200 --> 02:22:07,920
it's just was to make the engine which

3401
02:22:06,719 --> 02:22:09,438
is basically done so we're just going to

3402
02:22:07,920 --> 02:22:10,079
put some stuff in there so you can play

3403
02:22:09,439 --> 02:22:13,840
it

3404
02:22:10,079 --> 02:22:15,520
and then that's the end of it right um

3405
02:22:13,840 --> 02:22:16,880
but the reason i was asking john was

3406
02:22:15,520 --> 02:22:18,479
just because

3407
02:22:16,879 --> 02:22:21,519
of some star code galaxy stuff i was

3408
02:22:18,478 --> 02:22:23,760
doing and i was just curious

3409
02:22:21,520 --> 02:22:25,280
it was sort of it was sort of a separate

3410
02:22:23,760 --> 02:22:27,120
sort of spare time thing i was thinking

3411
02:22:25,280 --> 02:22:28,399
of

3412
02:22:27,120 --> 02:22:30,000
if i wanted to make a game with modding

3413
02:22:28,398 --> 02:22:30,799
interface or a lot of items how should i

3414
02:22:30,000 --> 02:22:32,639
go about it

3415
02:22:30,799 --> 02:22:33,759
in both cases union based polymorphism

3416
02:22:32,639 --> 02:22:35,279
that you just described doesn't seem the

3417
02:22:33,760 --> 02:22:39,439
best solution

3418
02:22:35,280 --> 02:22:39,439
um i mean

3419
02:22:40,719 --> 02:22:45,119
the the question you have to ask

3420
02:22:42,159 --> 02:22:46,959
yourself is in what way do you expect

3421
02:22:45,120 --> 02:22:50,560
this thing to be modded

3422
02:22:46,959 --> 02:22:54,159
right um

3423
02:22:50,559 --> 02:22:58,318
if you want things to be modded

3424
02:22:54,159 --> 02:23:01,280
then you have to ask

3425
02:22:58,318 --> 02:23:02,719
what level of modding is happening do

3426
02:23:01,280 --> 02:23:05,200
you expect people to be like

3427
02:23:02,719 --> 02:23:07,119
shipping dlls that do their own like

3428
02:23:05,200 --> 02:23:08,880
processing so you can really have very

3429
02:23:07,120 --> 02:23:12,640
flexible

3430
02:23:08,879 --> 02:23:15,438
uh changes to what's going on

3431
02:23:12,639 --> 02:23:16,159
or are you expecting people to do things

3432
02:23:15,439 --> 02:23:20,318
more like

3433
02:23:16,159 --> 02:23:22,398
provide pseudoscript sort of things that

3434
02:23:20,318 --> 02:23:24,000
expect the back end of the game engine

3435
02:23:22,398 --> 02:23:26,799
to do stuff like figure out how these

3436
02:23:24,000 --> 02:23:29,920
things are stored or whatever right

3437
02:23:26,799 --> 02:23:33,358
and in terms of how you adapt to that

3438
02:23:29,920 --> 02:23:35,760
with your code internally

3439
02:23:33,359 --> 02:23:38,000
uh i guess what i would say is i'd still

3440
02:23:35,760 --> 02:23:39,520
absolutely go the union route

3441
02:23:38,000 --> 02:23:41,840
that would that would absolutely be what

3442
02:23:39,520 --> 02:23:44,800
i would do um

3443
02:23:41,840 --> 02:23:45,439
and what i would do is i would just say

3444
02:23:44,799 --> 02:23:48,559
well

3445
02:23:45,439 --> 02:23:50,720
at startup time all of the mod

3446
02:23:48,559 --> 02:23:51,840
all of the mods are just queried for how

3447
02:23:50,719 --> 02:23:54,318
large

3448
02:23:51,840 --> 02:23:56,239
their stuff is and we just guarantee

3449
02:23:54,318 --> 02:23:59,279
blocks of that size

3450
02:23:56,239 --> 02:24:02,799
right um and i might

3451
02:23:59,280 --> 02:24:03,920
go so far as to also do the other way

3452
02:24:02,799 --> 02:24:06,079
because if i was

3453
02:24:03,920 --> 02:24:07,840
going to bother with that system i would

3454
02:24:06,079 --> 02:24:10,719
say well at that point

3455
02:24:07,840 --> 02:24:12,799
because the mod system people are just

3456
02:24:10,719 --> 02:24:14,719
adding all this stuff to it

3457
02:24:12,799 --> 02:24:15,840
i now know that i will probably have to

3458
02:24:14,719 --> 02:24:18,799
spend some time

3459
02:24:15,840 --> 02:24:20,398
doing work with the mods to support that

3460
02:24:18,799 --> 02:24:22,398
what i might do is switch

3461
02:24:20,398 --> 02:24:24,079
to go to the more efficient way anyway

3462
02:24:22,398 --> 02:24:27,519
and just say okay in that case

3463
02:24:24,079 --> 02:24:28,000
everything's its own array um and i

3464
02:24:27,520 --> 02:24:31,359
expect

3465
02:24:28,000 --> 02:24:33,120
the mod to basically it only operates on

3466
02:24:31,359 --> 02:24:36,960
its array of stuff

3467
02:24:33,120 --> 02:24:36,960
that's probably what i would do right

3468
02:24:37,120 --> 02:24:42,880
so so if i was doing modding i would

3469
02:24:41,120 --> 02:24:45,600
probably i would probably pre

3470
02:24:42,879 --> 02:24:46,799
pre-do like segregated arrays of uniform

3471
02:24:45,600 --> 02:24:49,040
types

3472
02:24:46,799 --> 02:24:49,039
right

3473
02:24:54,559 --> 02:24:57,359
do you remember reading a book about

3474
02:24:55,680 --> 02:25:00,960
wednesday about to begin uh yeah it was

3475
02:24:57,359 --> 02:25:00,960
pet sold was the first one i read

3476
02:25:07,280 --> 02:25:10,079
do you already have something on your

3477
02:25:08,398 --> 02:25:10,879
agenda after you finish handmade hero

3478
02:25:10,079 --> 02:25:13,200
well i mean i

3479
02:25:10,879 --> 02:25:14,719
already have like you know what three

3480
02:25:13,200 --> 02:25:17,120
separate projects i'd have to do

3481
02:25:14,719 --> 02:25:18,559
for my day job so i'm not sure what you

3482
02:25:17,120 --> 02:25:20,079
mean like have something on my gender

3483
02:25:18,559 --> 02:25:25,840
after finish hammer here handmade hero's

3484
02:25:20,079 --> 02:25:25,840
just something i do on the weekend

3485
02:25:46,799 --> 02:25:51,119
all right that looks like about it um so

3486
02:25:49,280 --> 02:25:53,040
i think we're more or less done with our

3487
02:25:51,120 --> 02:25:54,319
asset tag port which is great

3488
02:25:53,040 --> 02:25:56,240
and now it's just a question of like

3489
02:25:54,318 --> 02:25:57,439
finishing like the debugging and

3490
02:25:56,239 --> 02:25:59,280
and then maybe going through a little

3491
02:25:57,439 --> 02:26:01,840
bit of cleanup um

3492
02:25:59,280 --> 02:26:03,120
in just how we use the tags because now

3493
02:26:01,840 --> 02:26:04,318
that we kind of know what we're doing i

3494
02:26:03,120 --> 02:26:07,439
think we can sort of like

3495
02:26:04,318 --> 02:26:10,318
clean that stuff out right

3496
02:26:07,439 --> 02:26:11,600
um and and just kind of like say okay

3497
02:26:10,318 --> 02:26:15,279
now we're good

3498
02:26:11,600 --> 02:26:16,880
uh we we've got uh

3499
02:26:15,280 --> 02:26:18,640
we've got a coherent strategy this is

3500
02:26:16,879 --> 02:26:20,639
how tags work all the assets will just

3501
02:26:18,639 --> 02:26:24,079
be tagged this way and off we go

3502
02:26:20,639 --> 02:26:25,519
right um so that's about it uh

3503
02:26:24,079 --> 02:26:27,120
i'll be back here next weekend to

3504
02:26:25,520 --> 02:26:28,800
continue on that uh if you go to

3505
02:26:27,120 --> 02:26:30,560
handmadehero.org it's got all the stuff

3506
02:26:28,799 --> 02:26:31,920
it says what the schedule is obviously

3507
02:26:30,559 --> 02:26:32,959
and also if you want to follow along

3508
02:26:31,920 --> 02:26:34,079
with the source code at home you can

3509
02:26:32,959 --> 02:26:35,358
always pre-order the game and it comes

3510
02:26:34,079 --> 02:26:36,079
with the source code so you can download

3511
02:26:35,359 --> 02:26:37,920
it

3512
02:26:36,079 --> 02:26:39,920
day by day and follow along with me as i

3513
02:26:37,920 --> 02:26:42,398
code uh also we've got

3514
02:26:39,920 --> 02:26:44,879
uh the episode guide is going now you

3515
02:26:42,398 --> 02:26:46,639
can click this little full screen button

3516
02:26:44,879 --> 02:26:48,079
and if you want to look at past episodes

3517
02:26:46,639 --> 02:26:49,599
it's it's pretty handy right you can

3518
02:26:48,079 --> 02:26:50,239
look at stuff oh you know where does

3519
02:26:49,600 --> 02:26:53,520
casey do

3520
02:26:50,239 --> 02:26:56,079
like cmd programming or whatever um

3521
02:26:53,520 --> 02:26:57,760
and you can like you know say oh let's

3522
02:26:56,079 --> 02:26:59,439
let's see what he says about this or

3523
02:26:57,760 --> 02:27:02,159
whatever and it'll jump right there

3524
02:26:59,439 --> 02:27:02,800
um and you can you know watch like any

3525
02:27:02,159 --> 02:27:04,318
any

3526
02:27:02,799 --> 02:27:06,000
part of like an old part of handmade

3527
02:27:04,318 --> 02:27:08,879
hero really easily

3528
02:27:06,000 --> 02:27:10,079
right uh it also has other stuff on

3529
02:27:08,879 --> 02:27:13,119
there that's pretty good now

3530
02:27:10,079 --> 02:27:14,559
uh like for example there's if you go up

3531
02:27:13,120 --> 02:27:16,399
to this little window there's there's

3532
02:27:14,559 --> 02:27:20,559
other stuff it's got the uh

3533
02:27:16,398 --> 02:27:22,478
the uh handmade um

3534
02:27:20,559 --> 02:27:23,760
are they in the handmade chat well they

3535
02:27:22,478 --> 02:27:26,559
used they used to be here

3536
02:27:23,760 --> 02:27:28,159
the handmade there's the handmade con

3537
02:27:26,559 --> 02:27:31,519
stuff that was in here before

3538
02:27:28,159 --> 02:27:34,239
i don't know i thought it was in here

3539
02:27:31,520 --> 02:27:35,760
miblo where did it go i don't know where

3540
02:27:34,239 --> 02:27:39,119
it is

3541
02:27:35,760 --> 02:27:42,239
um so i don't know

3542
02:27:39,120 --> 02:27:46,800
where handmade

3543
02:27:42,239 --> 02:27:46,799
con stuff went uh

3544
02:27:48,478 --> 02:27:53,279
but it was on here and so i guess i'll

3545
02:27:51,760 --> 02:27:55,690
have to find out where it actually went

3546
02:27:53,280 --> 02:27:57,760
i don't do i don't maintain the guide

3547
02:27:55,690 --> 02:28:00,319
[Music]

3548
02:27:57,760 --> 02:28:03,600
miblo maintains the guide so i i don't

3549
02:28:00,318 --> 02:28:03,600
really remember like how

3550
02:28:04,239 --> 02:28:08,639
how to get those let me see are they

3551
02:28:06,079 --> 02:28:12,559
just on here is it that you can't

3552
02:28:08,639 --> 02:28:14,239
highlight them from the thing

3553
02:28:12,559 --> 02:28:16,639
yeah it does seem that way so there they

3554
02:28:14,239 --> 02:28:18,239
are right

3555
02:28:16,639 --> 02:28:19,920
here's all the handmade con stuff so

3556
02:28:18,239 --> 02:28:21,199
like if you want to go see like ron

3557
02:28:19,920 --> 02:28:25,040
gilbert's

3558
02:28:21,200 --> 02:28:27,680
interview right um so i don't know why

3559
02:28:25,040 --> 02:28:29,280
it's not there i'll have to ask miblo

3560
02:28:27,680 --> 02:28:30,800
you can see it kind of like does a weird

3561
02:28:29,280 --> 02:28:32,239
thing here where you can't i don't know

3562
02:28:30,799 --> 02:28:33,840
how you get back

3563
02:28:32,239 --> 02:28:35,920
uh so i'll have to ask him about that

3564
02:28:33,840 --> 02:28:38,318
but there's the two handmade con

3565
02:28:35,920 --> 02:28:39,280
sets too as well so check that out if

3566
02:28:38,318 --> 02:28:41,199
you haven't and you're

3567
02:28:39,280 --> 02:28:43,040
if you're interested in old video stuff

3568
02:28:41,200 --> 02:28:44,479
this is by far the best way to get at it

3569
02:28:43,040 --> 02:28:45,439
it's a lot better than trying to go

3570
02:28:44,478 --> 02:28:48,879
through it on youtube

3571
02:28:45,439 --> 02:28:50,159
directly yourself um using youtube links

3572
02:28:48,879 --> 02:28:52,318
only really good if you want to like

3573
02:28:50,159 --> 02:28:53,760
subscribe to be notified like if you if

3574
02:28:52,318 --> 02:28:55,439
you subscribe on here

3575
02:28:53,760 --> 02:28:56,800
it'll notify you like when the new

3576
02:28:55,439 --> 02:28:59,040
videos are posted

3577
02:28:56,799 --> 02:29:00,879
and that's useful but finding old

3578
02:28:59,040 --> 02:29:02,800
episodes on youtube their search

3579
02:29:00,879 --> 02:29:04,318
is crappy this is way better so if

3580
02:29:02,799 --> 02:29:06,639
you're looking for a particular old

3581
02:29:04,318 --> 02:29:09,680
episode this is definitely the place

3582
02:29:06,639 --> 02:29:13,279
to do it um all right

3583
02:29:09,680 --> 02:29:16,398
that's about it um

3584
02:29:13,280 --> 02:29:19,040
i have nothing else to say right now

3585
02:29:16,398 --> 02:29:19,920
uh so have a good weekend and i'll see

3586
02:29:19,040 --> 02:29:23,840
you next time

3587
02:29:19,920 --> 02:29:23,840
take it as everybody

