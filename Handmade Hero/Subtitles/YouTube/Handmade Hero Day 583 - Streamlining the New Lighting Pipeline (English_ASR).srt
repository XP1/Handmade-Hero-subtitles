1
00:00:03,830 --> 00:00:07,439
hello everybody and welcome to hand made

2
00:00:06,299 --> 00:00:11,309
here oh sure we could a complete-game

3
00:00:07,440 --> 00:00:15,420
live on stream i am going to take a look

4
00:00:11,308 --> 00:00:17,429
at the lighting we did yesterday i think

5
00:00:15,419 --> 00:00:20,278
we actually have our diffuse lighting

6
00:00:17,429 --> 00:00:22,198
sort of working correctly now we may

7
00:00:20,278 --> 00:00:24,990
have some bugs in our four-wide

8
00:00:22,199 --> 00:00:27,599
implementation of it so we may need to

9
00:00:24,989 --> 00:00:28,948
take a closer look at that and there's a

10
00:00:27,599 --> 00:00:31,500
number of ways that we can do that

11
00:00:28,949 --> 00:00:32,820
obviously we can just do some testing in

12
00:00:31,500 --> 00:00:35,130
place to make sure that the four-wide

13
00:00:32,820 --> 00:00:37,920
version works the same as the scalar

14
00:00:35,130 --> 00:00:40,020
version would work but really where

15
00:00:37,920 --> 00:00:42,570
we're at now is just time to start

16
00:00:40,020 --> 00:00:44,280
cleaning this code up and debugging any

17
00:00:42,570 --> 00:00:48,899
kind of lightning bugs that might exist

18
00:00:44,280 --> 00:00:51,320
therein and so I think we're more or

19
00:00:48,899 --> 00:00:54,149
less done with the heavy lifting of

20
00:00:51,320 --> 00:00:55,439
trying to figure out what's going on now

21
00:00:54,149 --> 00:00:57,179
it doesn't mean we're out of the woods

22
00:00:55,439 --> 00:01:00,140
yet because we have to get this thing

23
00:00:57,179 --> 00:01:02,460
running at a reasonable rate certainly

24
00:01:00,140 --> 00:01:03,869
and we've got a lot of work ahead of us

25
00:01:02,460 --> 00:01:05,308
in order to make sure all of that kind

26
00:01:03,869 --> 00:01:07,408
of works well and a lot of debugging

27
00:01:05,308 --> 00:01:08,670
because lighting is notoriously finicky

28
00:01:07,409 --> 00:01:10,680
so we're probably to rig up some test

29
00:01:08,670 --> 00:01:12,390
cases where we can actually determine

30
00:01:10,680 --> 00:01:14,700
whether this stuff is working properly

31
00:01:12,390 --> 00:01:16,890
right look I got to make a fake little

32
00:01:14,700 --> 00:01:18,719
Cornell box we can hop into and just

33
00:01:16,890 --> 00:01:20,759
watch to make sure color bleeding is

34
00:01:18,719 --> 00:01:22,560
happening and you know put some lights

35
00:01:20,759 --> 00:01:24,390
and strategic places and make sure that

36
00:01:22,560 --> 00:01:26,579
they're shining on things properly so

37
00:01:24,390 --> 00:01:27,719
we're gonna have to like go through sort

38
00:01:26,579 --> 00:01:29,789
of the motions here but at least we've

39
00:01:27,719 --> 00:01:32,938
got an architecture in place we can turn

40
00:01:29,790 --> 00:01:35,759
the crank on that architecture and well

41
00:01:32,938 --> 00:01:38,188
we don't really know whether this was a

42
00:01:35,759 --> 00:01:40,560
good solution or not I think weeper you

43
00:01:38,188 --> 00:01:42,149
know we stuck with it right we tried a

44
00:01:40,560 --> 00:01:43,950
bunch of stuff and that is really what I

45
00:01:42,150 --> 00:01:46,590
wanted to show on the on hand made hero

46
00:01:43,950 --> 00:01:48,180
because that's what lighting is you know

47
00:01:46,590 --> 00:01:50,040
there's there's basically members of

48
00:01:48,180 --> 00:01:53,520
triple-a graphics teams who just do this

49
00:01:50,040 --> 00:01:55,649
all day right all they do is work on

50
00:01:53,519 --> 00:01:57,118
lighting algorithms and how to make them

51
00:01:55,649 --> 00:01:58,890
run reasonably how to improve the

52
00:01:57,118 --> 00:02:00,899
quality how to give artists more control

53
00:01:58,890 --> 00:02:02,909
over them all that sort of stuff it's an

54
00:02:00,899 --> 00:02:04,680
entire field right like you can

55
00:02:02,909 --> 00:02:06,590
literally go get a job where most of

56
00:02:04,680 --> 00:02:09,509
what you will do is work on the lighting

57
00:02:06,590 --> 00:02:11,370
for like 10 years right

58
00:02:09,508 --> 00:02:13,649
and that's again because it's such a

59
00:02:11,370 --> 00:02:16,080
complicated problem

60
00:02:13,650 --> 00:02:17,789
while its underlying definition to write

61
00:02:16,080 --> 00:02:21,480
a raytracer that actually rate traces

62
00:02:17,789 --> 00:02:23,489
the world you know quite beautifully but

63
00:02:21,479 --> 00:02:25,619
very very slowly well that may not be

64
00:02:23,490 --> 00:02:27,210
particularly hard to do and you know in

65
00:02:25,620 --> 00:02:31,140
a couple months most people can probably

66
00:02:27,210 --> 00:02:33,180
write one that's actually quite good in

67
00:02:31,139 --> 00:02:35,159
terms of quality by just making sure you

68
00:02:33,180 --> 00:02:36,870
implement all light transfer stuff very

69
00:02:35,159 --> 00:02:38,659
carefully you know test it test it well

70
00:02:36,870 --> 00:02:41,039
and stuff and that takes a little while

71
00:02:38,659 --> 00:02:42,150
but then it would just be right you know

72
00:02:41,039 --> 00:02:44,459
and you'd have a gorgeous-looking

73
00:02:42,150 --> 00:02:46,140
renderer problem is it would take like

74
00:02:44,459 --> 00:02:49,500
three hours to render a scene or

75
00:02:46,139 --> 00:02:51,629
something right and so it's all of that

76
00:02:49,500 --> 00:02:54,659
figuring out how you get from three

77
00:02:51,629 --> 00:02:58,859
hours to 60 frames a second or 30 frames

78
00:02:54,659 --> 00:03:03,150
a second at the very least that's the

79
00:02:58,860 --> 00:03:05,489
trick right and so you know it's a hard

80
00:03:03,150 --> 00:03:11,640
job it's getting easier as graphics

81
00:03:05,489 --> 00:03:13,920
cards get more powerful and Nvidia at

82
00:03:11,639 --> 00:03:16,859
all start to take on more of the work

83
00:03:13,919 --> 00:03:18,149
for us where they're baking into

84
00:03:16,860 --> 00:03:20,700
hardware some of these things that we

85
00:03:18,150 --> 00:03:22,830
used to have to do obviously it's a

86
00:03:20,699 --> 00:03:24,829
nicer world and believe me no one is

87
00:03:22,830 --> 00:03:27,540
looking forward to hardware accelerated

88
00:03:24,830 --> 00:03:29,010
ubiquitous ray tracing more than me if

89
00:03:27,539 --> 00:03:31,769
they can actually make that work that

90
00:03:29,009 --> 00:03:33,599
would be great because ray tracing is

91
00:03:31,769 --> 00:03:35,250
kind of the fundamental operation that

92
00:03:33,599 --> 00:03:39,000
you need to be fast if you want to do

93
00:03:35,250 --> 00:03:42,750
bounce lighting for obvious reasons and

94
00:03:39,000 --> 00:03:44,009
so you know maybe hopefully these sorts

95
00:03:42,750 --> 00:03:47,639
of things will get better and instead of

96
00:03:44,009 --> 00:03:50,579
taking you know 100 hours on handmade

97
00:03:47,639 --> 00:03:52,859
hero to do lighting it'll get down to 20

98
00:03:50,580 --> 00:03:54,299
hours or 15 hours or something right

99
00:03:52,860 --> 00:03:55,530
it'll start to get like less and less

100
00:03:54,299 --> 00:03:56,939
and less and that would be great

101
00:03:55,530 --> 00:04:00,180
you still have to know all these

102
00:03:56,939 --> 00:04:01,789
concepts so please learn them but you

103
00:04:00,180 --> 00:04:03,930
know hopefully like the the

104
00:04:01,789 --> 00:04:06,298
experimentation and the iteration all

105
00:04:03,930 --> 00:04:08,760
that stuff much like rasterization is

106
00:04:06,299 --> 00:04:10,409
now a more or less solved problem in

107
00:04:08,759 --> 00:04:12,389
terms of like if you want to implement

108
00:04:10,409 --> 00:04:13,590
it in your game well you really just

109
00:04:12,389 --> 00:04:14,729
have to learn how to call a graphics

110
00:04:13,590 --> 00:04:16,918
card because it's built into the

111
00:04:14,729 --> 00:04:18,988
hardware much like how that is the case

112
00:04:16,918 --> 00:04:20,339
and you really just have to learn how it

113
00:04:18,988 --> 00:04:21,750
works and then you can go forward you

114
00:04:20,339 --> 00:04:23,339
don't have to spend a ton time

115
00:04:21,750 --> 00:04:25,829
experimenting and oh what's the fastest

116
00:04:23,339 --> 00:04:27,060
way to rasterize this triangle hopefully

117
00:04:25,829 --> 00:04:29,399
some day lighting will be more

118
00:04:27,060 --> 00:04:31,019
like that but at the moment it's not and

119
00:04:29,399 --> 00:04:32,310
it's not gonna be anytime soon like it

120
00:04:31,019 --> 00:04:34,829
probably won't be in the next year or

121
00:04:32,310 --> 00:04:36,600
two right it's gonna be at best

122
00:04:34,829 --> 00:04:38,399
something that's like ten years from now

123
00:04:36,600 --> 00:04:42,300
maybe we can start taking it for granted

124
00:04:38,399 --> 00:04:44,579
you know if we're if we're lucky so you

125
00:04:42,300 --> 00:04:46,800
know oh well you know you can't have you

126
00:04:44,579 --> 00:04:48,418
can't have everything done for you but

127
00:04:46,800 --> 00:04:50,310
you know at least you know it's like I

128
00:04:48,418 --> 00:04:52,918
said it's getting easier not harder and

129
00:04:50,310 --> 00:04:54,240
that's that's nice for a while it was

130
00:04:52,918 --> 00:04:56,219
just getting harder because that's

131
00:04:54,240 --> 00:04:57,629
graphics cards got better but didn't

132
00:04:56,220 --> 00:04:59,460
really have any way to calculate any

133
00:04:57,629 --> 00:05:01,019
lighting things for you it was actually

134
00:04:59,459 --> 00:05:03,388
harder because doing reasonable lighting

135
00:05:01,019 --> 00:05:05,370
became this thing that you kind of had

136
00:05:03,389 --> 00:05:07,889
to just do all these learn all these

137
00:05:05,370 --> 00:05:09,840
crazy hacks and work all these you know

138
00:05:07,889 --> 00:05:11,519
magic things to get some reasonable

139
00:05:09,839 --> 00:05:12,959
lighting in there right and so you know

140
00:05:11,519 --> 00:05:16,649
it definitely was the kind of thing that

141
00:05:12,959 --> 00:05:18,149
was was was more difficult all right so

142
00:05:16,649 --> 00:05:21,269
if we take a look at where we're at

143
00:05:18,149 --> 00:05:22,799
right now were you know I would say look

144
00:05:21,269 --> 00:05:25,199
at like I said I'm not sure we got all

145
00:05:22,800 --> 00:05:28,410
the bugs out of this particular thing

146
00:05:25,199 --> 00:05:30,000
but it's it's not bad right we've got a

147
00:05:28,410 --> 00:05:31,890
sort of specular bounce happening here

148
00:05:30,000 --> 00:05:34,529
but it's specular bounce on diffused

149
00:05:31,889 --> 00:05:36,089
surfaces in a sense so I'm not sure how

150
00:05:34,529 --> 00:05:37,049
to say that exactly weird using the

151
00:05:36,089 --> 00:05:38,489
reflection vector to look up the

152
00:05:37,050 --> 00:05:43,050
incoming light source but we're using

153
00:05:38,490 --> 00:05:45,780
this correctly some light for that and I

154
00:05:43,050 --> 00:05:47,280
think it's it's reasonable right we have

155
00:05:45,779 --> 00:05:49,679
to think a little bit harder about how

156
00:05:47,279 --> 00:05:51,089
we want to actually sample these in the

157
00:05:49,680 --> 00:05:53,699
pixel shader and we also have to do a

158
00:05:51,089 --> 00:05:55,049
bunch more work on what are you know

159
00:05:53,699 --> 00:05:57,240
what do we want to represent these are

160
00:05:55,050 --> 00:05:59,250
in terms of units because you know we

161
00:05:57,240 --> 00:06:00,449
have to do a quantization and also our

162
00:05:59,250 --> 00:06:02,639
stuff so we have we have a bunch of

163
00:06:00,449 --> 00:06:05,060
details to work out but we're more or

164
00:06:02,639 --> 00:06:08,310
less in in a reasonable position here

165
00:06:05,060 --> 00:06:10,829
right now one of the things that we

166
00:06:08,310 --> 00:06:13,978
probably should do relatively soon is if

167
00:06:10,829 --> 00:06:15,959
you look here we can't really view our

168
00:06:13,978 --> 00:06:17,370
profiler right you see how I can I can

169
00:06:15,959 --> 00:06:18,870
open sup we can't really view our

170
00:06:17,370 --> 00:06:21,538
profiler and the reason for that is at

171
00:06:18,870 --> 00:06:27,720
the moment anyway we don't actually have

172
00:06:21,538 --> 00:06:29,668
a way of turning off our like there's no

173
00:06:27,720 --> 00:06:32,039
way to tell it hey we don't want

174
00:06:29,668 --> 00:06:32,969
lighting anymore right like we don't

175
00:06:32,038 --> 00:06:36,060
need that

176
00:06:32,970 --> 00:06:37,289
stop stop having the lighting go so when

177
00:06:36,060 --> 00:06:39,269
we get something like this it's just

178
00:06:37,288 --> 00:06:40,199
like black because it's computing

179
00:06:39,269 --> 00:06:41,399
lighting on something

180
00:06:40,199 --> 00:06:44,129
that can't really have any lighting

181
00:06:41,399 --> 00:06:46,799
computing for computed for it and so

182
00:06:44,129 --> 00:06:48,120
obviously it's just garbage now as we

183
00:06:46,800 --> 00:06:49,650
move forward we're gonna want this and

184
00:06:48,120 --> 00:06:51,329
so one of the things we might want to do

185
00:06:49,649 --> 00:06:54,149
today just as a start maybe the thing we

186
00:06:51,329 --> 00:06:56,310
should do is just go put so that there

187
00:06:54,149 --> 00:06:59,009
can be a secondary pass in here put in

188
00:06:56,310 --> 00:07:01,800
something that allows us to just you

189
00:06:59,009 --> 00:07:03,360
know turn off lighting for our overlay

190
00:07:01,800 --> 00:07:04,620
pass right some we probably should've

191
00:07:03,360 --> 00:07:06,629
done a long time ago but just has never

192
00:07:04,620 --> 00:07:08,639
been a real issue it's finally enough of

193
00:07:06,629 --> 00:07:10,980
an issue that that's probably something

194
00:07:08,639 --> 00:07:16,560
we should do and and you know we can

195
00:07:10,980 --> 00:07:17,640
move on from there all right so I want

196
00:07:16,560 --> 00:07:20,040
to do that the other thing I'd like to

197
00:07:17,639 --> 00:07:22,589
do is we probably should get this thing

198
00:07:20,040 --> 00:07:25,050
set up to do its multi-threading more

199
00:07:22,589 --> 00:07:28,199
properly so I think I might want to do

200
00:07:25,050 --> 00:07:30,509
that first just for fun and you know

201
00:07:28,199 --> 00:07:33,360
just because I I don't like kind of the

202
00:07:30,509 --> 00:07:35,490
way it's sitting at the moment so let me

203
00:07:33,360 --> 00:07:37,710
show you what I mean by that so if you

204
00:07:35,490 --> 00:07:42,050
notice the way we had multi-threading

205
00:07:37,709 --> 00:07:45,389
working before we have this sort of like

206
00:07:42,050 --> 00:07:47,370
lighting computation code and the way

207
00:07:45,389 --> 00:07:51,300
that it works is when we actually do the

208
00:07:47,370 --> 00:07:53,370
lighting computation and we it should be

209
00:07:51,300 --> 00:07:55,319
an end lighting app so in in lighting

210
00:07:53,370 --> 00:07:56,970
what we do is we just say like look

211
00:07:55,319 --> 00:08:00,089
we're gonna build the spatial partition

212
00:07:56,970 --> 00:08:02,160
that happens and I believe that builds

213
00:08:00,089 --> 00:08:03,899
spatial partition isn't threaded I don't

214
00:08:02,160 --> 00:08:07,140
actually yet so build spatial partition

215
00:08:03,899 --> 00:08:11,489
just does its thing right and that's not

216
00:08:07,139 --> 00:08:13,560
threaded at the moment and we compute a

217
00:08:11,490 --> 00:08:15,389
lighting lookup as well we may never

218
00:08:13,560 --> 00:08:16,889
need that well it depends on whether we

219
00:08:15,389 --> 00:08:18,120
end up doing light source biasing so we

220
00:08:16,889 --> 00:08:21,599
may be able to remove that but that's a

221
00:08:18,120 --> 00:08:24,120
separate issue we then go ahead and call

222
00:08:21,600 --> 00:08:26,160
compute light propagation here and

223
00:08:24,120 --> 00:08:28,829
that's a multi-threaded algorithm and

224
00:08:26,160 --> 00:08:30,600
what we've got that nerfed out right now

225
00:08:28,829 --> 00:08:31,680
and we've got test light sphere in there

226
00:08:30,600 --> 00:08:34,800
okay

227
00:08:31,680 --> 00:08:36,930
now compute light propagation is the

228
00:08:34,799 --> 00:08:38,159
thing that actually has the threading in

229
00:08:36,929 --> 00:08:40,439
it you can see this is the thread

230
00:08:38,159 --> 00:08:42,779
dispatch we've got one branch here

231
00:08:40,440 --> 00:08:44,760
that's turned off that does a work

232
00:08:42,779 --> 00:08:46,439
distribution and then we've got one

233
00:08:44,759 --> 00:08:49,409
branch here that we're actually using

234
00:08:46,440 --> 00:08:51,510
that just does it on one and what I want

235
00:08:49,409 --> 00:08:53,899
to do now is move all the code to work

236
00:08:51,509 --> 00:08:57,470
in this line right

237
00:08:53,899 --> 00:09:00,000
so I want everything to work in here and

238
00:08:57,470 --> 00:09:02,370
when I say everything what I mean is

239
00:09:00,000 --> 00:09:05,250
this part too so do you see how we've

240
00:09:02,370 --> 00:09:08,460
got like Z slices Y slices X slices

241
00:09:05,250 --> 00:09:12,000
these slices are independent so for

242
00:09:08,460 --> 00:09:14,850
example we've got 32 Z slices to compute

243
00:09:12,000 --> 00:09:22,019
I could just send one out to each thread

244
00:09:14,850 --> 00:09:25,350
right that would be really easy for me

245
00:09:22,019 --> 00:09:29,720
to do and so I want something that works

246
00:09:25,350 --> 00:09:33,840
more like that and in order to do that

247
00:09:29,720 --> 00:09:37,139
we have one major issue that we would

248
00:09:33,840 --> 00:09:38,910
need to address but only one and that

249
00:09:37,139 --> 00:09:42,240
major issue is when you look at how

250
00:09:38,909 --> 00:09:45,269
compute light propagation works what you

251
00:09:42,240 --> 00:09:47,009
can see here is we have light probes and

252
00:09:45,269 --> 00:09:51,000
those light probes are sort of strewn

253
00:09:47,009 --> 00:09:53,370
throughout the world and the idea was

254
00:09:51,000 --> 00:09:55,110
that previously we didn't really know

255
00:09:53,370 --> 00:09:56,220
how we were gonna sample the world but

256
00:09:55,110 --> 00:09:57,210
we didn't know much about the lighting

257
00:09:56,220 --> 00:09:58,379
we just knew we were gonna have some

258
00:09:57,210 --> 00:10:00,750
light Pro so we actually have these

259
00:09:58,379 --> 00:10:05,580
light probes and they kind of come

260
00:10:00,750 --> 00:10:07,710
through the world you can actually see

261
00:10:05,580 --> 00:10:09,780
them I believe if we go in and draw

262
00:10:07,710 --> 00:10:13,860
theirs we had like some code that would

263
00:10:09,779 --> 00:10:20,970
draw the light probes actually in here I

264
00:10:13,860 --> 00:10:23,639
think it's this code so like these are

265
00:10:20,970 --> 00:10:26,009
examples of I think where the light no

266
00:10:23,639 --> 00:10:28,919
actually those are the voxels never mind

267
00:10:26,009 --> 00:10:30,389
those are the voxels themselves so we

268
00:10:28,919 --> 00:10:33,629
don't actually currently draw the light

269
00:10:30,389 --> 00:10:46,559
probes there let me see if we've got

270
00:10:33,629 --> 00:10:51,659
them an entity so so global lighting

271
00:10:46,559 --> 00:10:53,129
show probes actually controls this that

272
00:10:51,659 --> 00:10:56,100
actually means that although we can't

273
00:10:53,129 --> 00:10:58,519
see it it should be in here somewhere

274
00:10:56,100 --> 00:10:58,519
right

275
00:11:01,240 --> 00:11:11,409
looks like that's actually not not

276
00:11:05,889 --> 00:11:13,120
listed in here hmm well either way it

277
00:11:11,409 --> 00:11:22,269
doesn't really matter because I can just

278
00:11:13,120 --> 00:11:26,639
set it here so global lighting show

279
00:11:22,269 --> 00:11:28,720
probes I'm gonna set to false hmm I

280
00:11:26,639 --> 00:11:29,649
might have to rerun for that but I don't

281
00:11:28,720 --> 00:11:32,370
know yeah there it is

282
00:11:29,649 --> 00:11:35,980
so these are where the light probes are

283
00:11:32,370 --> 00:11:38,289
and these are actually entities in the

284
00:11:35,980 --> 00:11:39,610
world so if you look at them they're

285
00:11:38,289 --> 00:11:41,439
just kind of strewn throughout the world

286
00:11:39,610 --> 00:11:45,100
and the idea here was they were placed

287
00:11:41,440 --> 00:11:49,800
such that they would be like contained

288
00:11:45,100 --> 00:11:55,509
in voxel cells appropriately right so

289
00:11:49,799 --> 00:11:58,839
here's the thing when I look at that I'm

290
00:11:55,509 --> 00:12:01,929
just thinking well I don't know that we

291
00:11:58,840 --> 00:12:05,110
need these right because all we really

292
00:12:01,929 --> 00:12:09,159
need out of this system is to make sure

293
00:12:05,110 --> 00:12:12,840
that for a given cell that we always

294
00:12:09,159 --> 00:12:16,000
take casts at least somewhere that isn't

295
00:12:12,840 --> 00:12:20,730
underground right or contained inside

296
00:12:16,000 --> 00:12:24,129
them so I don't really know that we need

297
00:12:20,730 --> 00:12:25,769
to do anything in particular with these

298
00:12:24,129 --> 00:12:28,779
probes I feel like we could just

299
00:12:25,769 --> 00:12:30,189
actually use the geometry we're given to

300
00:12:28,779 --> 00:12:32,350
figure out where we should place our

301
00:12:30,190 --> 00:12:34,360
probes and cast and the reason I think

302
00:12:32,350 --> 00:12:37,180
this is important is because these

303
00:12:34,360 --> 00:12:39,700
things come in in an arbitrary order so

304
00:12:37,179 --> 00:12:41,679
even if we did nothing else we would at

305
00:12:39,700 --> 00:12:43,750
least have to sort them into say Z

306
00:12:41,679 --> 00:12:49,479
slices to figure out where the heck to

307
00:12:43,750 --> 00:12:52,419
cast right so I'm thinking that we

308
00:12:49,480 --> 00:12:55,960
should probably just try to get away

309
00:12:52,419 --> 00:12:57,759
without them right because I'm not sure

310
00:12:55,960 --> 00:13:01,509
we I'm not sure we're gonna actually

311
00:12:57,759 --> 00:13:03,220
need these anymore since we're doing a

312
00:13:01,509 --> 00:13:05,230
fair lighting interpolation across all

313
00:13:03,220 --> 00:13:09,850
the voxels it seems like we could just

314
00:13:05,230 --> 00:13:12,850
maybe just do it right and when we're

315
00:13:09,850 --> 00:13:14,830
taking our lighting samples we could

316
00:13:12,850 --> 00:13:18,070
just say all right yeah

317
00:13:14,830 --> 00:13:20,170
like take the lighting samples and if

318
00:13:18,070 --> 00:13:24,460
you if the thing happens to be inside a

319
00:13:20,169 --> 00:13:26,979
box just ignore that ignore that box

320
00:13:24,460 --> 00:13:29,830
right and I think that just kind of

321
00:13:26,980 --> 00:13:31,899
works so I'm gonna go ahead and pull the

322
00:13:29,830 --> 00:13:34,870
probes like they're just gonna go away

323
00:13:31,899 --> 00:13:36,850
and we're gonna loop over voxel centers

324
00:13:34,870 --> 00:13:39,820
instead that's that's what I think we're

325
00:13:36,850 --> 00:13:42,460
gonna do so I'm gonna go into the

326
00:13:39,820 --> 00:13:45,370
lighting here and we're we're doing

327
00:13:42,460 --> 00:13:46,600
probes I'm just gonna pull that because

328
00:13:45,370 --> 00:13:48,850
I think we just don't need them anymore

329
00:13:46,600 --> 00:13:51,340
so much like we've got this I'm just

330
00:13:48,850 --> 00:13:52,899
gonna say alright that's gone and then

331
00:13:51,340 --> 00:13:55,389
I'm gonna clean up the code that use

332
00:13:52,899 --> 00:13:58,090
that so you can see here that actually

333
00:13:55,389 --> 00:14:00,460
if you look at where that's happening

334
00:13:58,090 --> 00:14:01,930
it's very limited right there's very

335
00:14:00,460 --> 00:14:04,870
little that actually does anything with

336
00:14:01,929 --> 00:14:07,449
that I can eliminate this for trivially

337
00:14:04,870 --> 00:14:09,129
because all that is is storage here's

338
00:14:07,450 --> 00:14:12,700
the thing we actual in a modify this

339
00:14:09,129 --> 00:14:14,350
part here the work system is just gonna

340
00:14:12,700 --> 00:14:16,210
have to pass something else so one pass

341
00:14:14,350 --> 00:14:18,820
last light probe index what I'll

342
00:14:16,210 --> 00:14:23,470
probably do there for now again just for

343
00:14:18,820 --> 00:14:25,420
now instead of one pass last light probe

344
00:14:23,470 --> 00:14:27,190
index I think what I'll do is send which

345
00:14:25,419 --> 00:14:32,729
slice of the voxel I want to work on

346
00:14:27,190 --> 00:14:36,490
right and this is tricky okay

347
00:14:32,730 --> 00:14:45,029
so currently and this is unfortunate but

348
00:14:36,490 --> 00:14:49,149
currently I think we made a mistake and

349
00:14:45,029 --> 00:14:53,439
the mistake was we made Z be the primal

350
00:14:49,149 --> 00:14:56,309
slice through our voxel so if you look

351
00:14:53,440 --> 00:15:00,820
at the way our stuff is structured Z

352
00:14:56,309 --> 00:15:04,329
comes first so each row of light maps in

353
00:15:00,820 --> 00:15:07,450
our light map image is one sheet of Z

354
00:15:04,330 --> 00:15:10,300
and as we go down the light map we go

355
00:15:07,450 --> 00:15:13,900
down sheets of Z or up sheets of Z maybe

356
00:15:10,299 --> 00:15:15,039
you might say as we go up the light map

357
00:15:13,899 --> 00:15:16,480
we go up sheets and see it's probably

358
00:15:15,039 --> 00:15:23,610
the right way to say it because Y is up

359
00:15:16,480 --> 00:15:26,440
in both cases so given that

360
00:15:23,610 --> 00:15:28,450
it means that if we wanted to do the

361
00:15:26,440 --> 00:15:33,610
most natural thread distribution of the

362
00:15:28,450 --> 00:15:36,520
32z slices we would have each of our

363
00:15:33,610 --> 00:15:38,919
threads work on a Z slice the problem is

364
00:15:36,519 --> 00:15:41,439
there may be nothing on that z slice to

365
00:15:38,919 --> 00:15:43,539
light because a lot of places in our

366
00:15:41,440 --> 00:15:45,940
world just won't have multiple Z slices

367
00:15:43,539 --> 00:15:49,139
that will force all the work onto one

368
00:15:45,940 --> 00:15:53,200
thread and that's no good

369
00:15:49,139 --> 00:15:56,199
so what we'd rather do is have Z slices

370
00:15:53,200 --> 00:15:57,700
packed next to each other and why be the

371
00:15:56,200 --> 00:16:00,720
thing because we know there's always

372
00:15:57,700 --> 00:16:04,830
stuff in Y or X doesn't matter which one

373
00:16:00,720 --> 00:16:08,290
we'd rather have that be the thread

374
00:16:04,830 --> 00:16:10,330
distribution right so in terms of a

375
00:16:08,289 --> 00:16:14,679
locality what we'd really rather have is

376
00:16:10,330 --> 00:16:17,889
one row represent all the X's and Z's of

377
00:16:14,679 --> 00:16:22,059
a particular Y slice or all the Y's and

378
00:16:17,889 --> 00:16:25,449
Z's of a particular X slice that would

379
00:16:22,059 --> 00:16:31,019
be much better than what we've got

380
00:16:25,450 --> 00:16:33,970
currently which is the other way round

381
00:16:31,019 --> 00:16:35,829
so I guess what I would say is I'm gonna

382
00:16:33,970 --> 00:16:38,110
remove this but then I'm gonna assume

383
00:16:35,830 --> 00:16:39,759
I'm gonna first do some testing I'm

384
00:16:38,110 --> 00:16:42,399
gonna assume that the first thing we

385
00:16:39,759 --> 00:16:44,500
want to do is reverse the packing so

386
00:16:42,399 --> 00:16:46,059
that the packing of our texture goes in

387
00:16:44,500 --> 00:16:48,309
the order we actually want to do thread

388
00:16:46,059 --> 00:16:49,509
distribution so when we do lighting work

389
00:16:48,309 --> 00:16:51,879
here I'm going to say that we're

390
00:16:49,509 --> 00:16:54,580
actually gonna have here a voxel slice

391
00:16:51,879 --> 00:16:56,559
that we want it to work on the voxel

392
00:16:54,580 --> 00:17:00,220
slice is gonna be something like oh I

393
00:16:56,559 --> 00:17:03,969
don't know do I want to do X or Y I mean

394
00:17:00,220 --> 00:17:06,660
actually X or Y being the the Sheep

395
00:17:03,970 --> 00:17:06,660
major

396
00:17:12,470 --> 00:17:19,828
anybody got any ideas X or Y which one's

397
00:17:16,890 --> 00:17:24,150
better if the Vox low remains a cube it

398
00:17:19,828 --> 00:17:27,000
won't matter if it gets changed because

399
00:17:24,150 --> 00:17:29,250
we're wider than we are high in terms of

400
00:17:27,000 --> 00:17:33,299
x and y because of the aspect ratio of

401
00:17:29,250 --> 00:17:37,109
the screen that would mean it would

402
00:17:33,299 --> 00:17:41,549
break the work up more granularly to go

403
00:17:37,109 --> 00:17:43,979
by X because X there would be more X's

404
00:17:41,549 --> 00:17:47,190
than there are wise so I'm gonna say X X

405
00:17:43,980 --> 00:17:52,470
will be the major divider in our texture

406
00:17:47,190 --> 00:17:59,940
so X will be a row let's just say that's

407
00:17:52,470 --> 00:18:02,720
true so this is the core piece of

408
00:17:59,940 --> 00:18:05,580
information I'm actually going to pass

409
00:18:02,720 --> 00:18:07,289
when we do light probe count here that's

410
00:18:05,579 --> 00:18:09,359
not what we actually want to do what I

411
00:18:07,289 --> 00:18:13,950
actually want to do here is say now

412
00:18:09,359 --> 00:18:17,039
which voxel thing we're doing and so I

413
00:18:13,950 --> 00:18:18,960
think I want to change this entirely

414
00:18:17,039 --> 00:18:21,720
because this was kind of dumb there was

415
00:18:18,960 --> 00:18:23,370
no reason to do this this way we didn't

416
00:18:21,720 --> 00:18:26,519
really need to do that what we should

417
00:18:23,369 --> 00:18:28,859
have done is just put all the work onto

418
00:18:26,519 --> 00:18:31,980
one person's queue and then call it or

419
00:18:28,859 --> 00:18:33,389
something like that right so it's

420
00:18:31,980 --> 00:18:37,789
unfortunately we happen to do it this

421
00:18:33,390 --> 00:18:40,590
way I'm not sure why we did it this way

422
00:18:37,789 --> 00:18:42,649
to explain a little more carefully so I

423
00:18:40,589 --> 00:18:44,369
think I'm gonna do is delete this right

424
00:18:42,650 --> 00:18:48,150
put it on here

425
00:18:44,369 --> 00:18:50,009
get rid of probes / work and in here

426
00:18:48,150 --> 00:18:57,870
where we say like okay we've got done

427
00:18:50,009 --> 00:18:59,609
equals false this is not actually

428
00:18:57,869 --> 00:19:01,859
necessary either now so all of this is

429
00:18:59,609 --> 00:19:03,299
we know exactly what this is so what we

430
00:19:01,859 --> 00:19:07,079
want to do is say all right we've got an

431
00:19:03,299 --> 00:19:10,940
X index for our voxel well I guess we

432
00:19:07,079 --> 00:19:13,769
can still call it work index that's fine

433
00:19:10,940 --> 00:19:15,240
so we want to do is say how big is the

434
00:19:13,769 --> 00:19:17,730
thing that we're trying to light and

435
00:19:15,240 --> 00:19:20,640
it's gonna be that hot dim right so it's

436
00:19:17,730 --> 00:19:22,679
we're trying to do we don't want to

437
00:19:20,640 --> 00:19:24,900
light the large voxel because the large

438
00:19:22,679 --> 00:19:28,890
voxel is just for storage we

439
00:19:24,900 --> 00:19:30,990
want to do just the hot portion the part

440
00:19:28,890 --> 00:19:33,060
that we actually update every frame

441
00:19:30,990 --> 00:19:37,289
which is a subset of the part that we're

442
00:19:33,059 --> 00:19:41,179
storing so we want the hot dim which I

443
00:19:37,289 --> 00:19:45,409
don't know where that's actually stated

444
00:19:41,180 --> 00:19:45,410
because this doesn't look like it is I

445
00:19:47,930 --> 00:20:00,360
mean it it's it's that but it would have

446
00:19:59,279 --> 00:20:01,619
been nice without stage somewhere else

447
00:20:00,359 --> 00:20:05,129
so we may want to replace that with a

448
00:20:01,619 --> 00:20:08,369
local that comes in here but a separate

449
00:20:05,130 --> 00:20:09,810
issue so anyway we come through here and

450
00:20:08,369 --> 00:20:11,339
we say all right we've got a work index

451
00:20:09,809 --> 00:20:13,710
this is how many work orders we're going

452
00:20:11,339 --> 00:20:15,149
to do we place these work orders in here

453
00:20:13,710 --> 00:20:19,220
you can see here that we've got sort of

454
00:20:15,150 --> 00:20:22,530
a works thing listed in here this and

455
00:20:19,220 --> 00:20:31,860
again this we know what this dimension

456
00:20:22,529 --> 00:20:35,879
actually is right we know that this is 1

457
00:20:31,859 --> 00:20:37,859
/ X right so we don't know if I'll have

458
00:20:35,880 --> 00:20:40,290
to change that in the future but that's

459
00:20:37,859 --> 00:20:41,699
what it is at the moment so we know

460
00:20:40,289 --> 00:20:43,680
we're going to create a series of work

461
00:20:41,700 --> 00:20:48,200
structures those work structures are

462
00:20:43,680 --> 00:20:52,670
going to be based on this we know that

463
00:20:48,200 --> 00:20:57,029
it's basically assigned directly like so

464
00:20:52,670 --> 00:20:58,019
I'm not sure what this was for I guess

465
00:20:57,029 --> 00:20:59,789
this is just to make sure they're

466
00:20:58,019 --> 00:21:01,829
aligned because we didn't want false

467
00:20:59,789 --> 00:21:05,759
sharing of those structures so all right

468
00:21:01,829 --> 00:21:07,649
I'll leave that in we clear it we set up

469
00:21:05,759 --> 00:21:09,569
the information in here instead of first

470
00:21:07,650 --> 00:21:12,180
probe index last probe Elek all that

471
00:21:09,569 --> 00:21:14,399
nonsense all we need is this so that

472
00:21:12,180 --> 00:21:16,799
means this goes away and we don't really

473
00:21:14,400 --> 00:21:19,620
need anything else right because we're

474
00:21:16,799 --> 00:21:22,500
gonna distribute one voxel slice per so

475
00:21:19,619 --> 00:21:24,419
really the big pad is gonna have to pad

476
00:21:22,500 --> 00:21:28,259
a little more right because we're not

477
00:21:24,420 --> 00:21:29,820
actually gonna use that information

478
00:21:28,259 --> 00:21:32,490
anywhere so it's gonna look more like

479
00:21:29,819 --> 00:21:34,619
this and then the big pad will have to

480
00:21:32,490 --> 00:21:35,549
be 36 because we actually have 5 in here

481
00:21:34,619 --> 00:21:38,319
now

482
00:21:35,549 --> 00:21:42,639
so we don't need this all we need is the

483
00:21:38,319 --> 00:21:44,439
voxel X and we can get that directly

484
00:21:42,640 --> 00:21:45,550
from the work index we don't need any of

485
00:21:44,440 --> 00:21:48,299
this

486
00:21:45,549 --> 00:21:54,700
we don't need done we don't need this

487
00:21:48,299 --> 00:22:00,549
and yeah it's like just much simpler

488
00:21:54,700 --> 00:22:02,620
right so that's all we need and I don't

489
00:22:00,549 --> 00:22:04,990
like I said I don't know why we did this

490
00:22:02,619 --> 00:22:07,750
the way we did it we really didn't need

491
00:22:04,990 --> 00:22:09,880
to do that to have the if zero I guess I

492
00:22:07,750 --> 00:22:11,019
just wasn't thinking if you look in here

493
00:22:09,880 --> 00:22:13,360
we're gonna go through each of these

494
00:22:11,019 --> 00:22:15,609
work indexes and prepare it instead of

495
00:22:13,359 --> 00:22:17,500
adding it to a queue the way to do this

496
00:22:15,609 --> 00:22:20,019
properly and I didn't do it I don't know

497
00:22:17,500 --> 00:22:24,069
why is just to use the exact same code

498
00:22:20,019 --> 00:22:29,129
and instead of having the if you just

499
00:22:24,069 --> 00:22:33,339
put the call to do the work right so

500
00:22:29,130 --> 00:22:35,560
right here we just say do that work you

501
00:22:33,339 --> 00:22:37,389
know I'm saying now I don't know what

502
00:22:35,559 --> 00:22:42,339
compute light propagation actually takes

503
00:22:37,390 --> 00:22:51,700
cuz it's one of these callbacks platform

504
00:22:42,339 --> 00:22:53,279
work queue call back it looks like it

505
00:22:51,700 --> 00:22:58,630
just takes a work queue and the data

506
00:22:53,279 --> 00:23:01,990
mm-hmm so basically this queue and the

507
00:22:58,630 --> 00:23:03,430
data that's all we need and then we can

508
00:23:01,990 --> 00:23:04,870
just say whether or not we want to be

509
00:23:03,430 --> 00:23:07,120
multi-threaded by changing that switch

510
00:23:04,869 --> 00:23:08,919
now complete all work lighting cues

511
00:23:07,119 --> 00:23:11,500
should just do nothing if we've never

512
00:23:08,920 --> 00:23:13,029
put anything on it so I'm pretty sure we

513
00:23:11,500 --> 00:23:14,789
can just keep calling that in either

514
00:23:13,029 --> 00:23:16,930
case it doesn't actually matter but

515
00:23:14,789 --> 00:23:18,009
that's a much cleaner way to do the

516
00:23:16,930 --> 00:23:19,450
distribution you can see how much nicer

517
00:23:18,009 --> 00:23:21,609
that is so that's the way we should have

518
00:23:19,450 --> 00:23:24,759
done it it's just not what we did but

519
00:23:21,609 --> 00:23:26,649
we're doing it now so that's okay so

520
00:23:24,759 --> 00:23:28,390
once we have that then we just need to

521
00:23:26,650 --> 00:23:30,160
modify this routine to no longer work on

522
00:23:28,390 --> 00:23:31,450
light probes and so the way that this is

523
00:23:30,160 --> 00:23:35,610
gonna work is this just gonna loop over

524
00:23:31,450 --> 00:23:35,610
the actual stuff we've got right

525
00:23:39,240 --> 00:23:46,769
and here's the real bonus I believe I

526
00:23:44,730 --> 00:23:48,720
could be very much wrong about this but

527
00:23:46,769 --> 00:23:51,359
I believe this will make things a lot

528
00:23:48,720 --> 00:23:54,960
more cash friendly for us because if we

529
00:23:51,359 --> 00:23:55,979
do our casting updates for all of the

530
00:23:54,960 --> 00:23:58,500
Rays that are gonna be cast in

531
00:23:55,980 --> 00:24:05,009
particular boxes so and immediately

532
00:23:58,500 --> 00:24:07,470
after we update the actual in the-- all

533
00:24:05,009 --> 00:24:10,109
of the dependent information everything

534
00:24:07,470 --> 00:24:13,019
stays in the cache right instead of like

535
00:24:10,109 --> 00:24:15,058
scattering all of our probe scattering

536
00:24:13,019 --> 00:24:17,250
our rights to this texture all over the

537
00:24:15,058 --> 00:24:19,589
place then having to loop through it and

538
00:24:17,250 --> 00:24:21,960
grab the information in it again to do

539
00:24:19,589 --> 00:24:23,459
our updating it makes this a lot more

540
00:24:21,960 --> 00:24:25,230
cash friendly now whether we can take

541
00:24:23,460 --> 00:24:27,690
advantage of that cash friendliness I

542
00:24:25,230 --> 00:24:28,980
don't know because that in order to take

543
00:24:27,690 --> 00:24:31,470
advantage of cash friendliness you have

544
00:24:28,980 --> 00:24:33,289
to be able to write your math in such a

545
00:24:31,470 --> 00:24:36,390
way that it's fast enough that it can't

546
00:24:33,289 --> 00:24:39,839
that it's faster than the prefetcher

547
00:24:36,390 --> 00:24:42,929
right but you know it at least puts us

548
00:24:39,839 --> 00:24:44,189
in position to do good work where if we

549
00:24:42,929 --> 00:24:46,740
can figure out ways to make the math

550
00:24:44,190 --> 00:24:48,390
fast enough the memory accesses aren't

551
00:24:46,740 --> 00:24:51,120
going to kill us because otherwise they

552
00:24:48,390 --> 00:24:53,580
would I think so that's kind of a nice

553
00:24:51,119 --> 00:24:55,678
thing alright so how are we gonna do

554
00:24:53,579 --> 00:24:59,759
that well we're gonna do that by saying

555
00:24:55,679 --> 00:25:04,140
alright let's go into our lighting code

556
00:24:59,759 --> 00:25:07,769
here and you need this where's my

557
00:25:04,140 --> 00:25:12,150
where's my routine just got to grab the

558
00:25:07,769 --> 00:25:16,289
lighting competition end yeah so here

559
00:25:12,150 --> 00:25:20,040
we've got the hot dim right and we need

560
00:25:16,289 --> 00:25:23,000
to grab that again like so and then we

561
00:25:20,039 --> 00:25:23,000
need to do this loop

562
00:25:27,019 --> 00:25:40,259
not there right here so what I want to

563
00:25:37,710 --> 00:25:41,940
do is I want to move this loop here I

564
00:25:40,259 --> 00:25:43,410
want to you know with all of this stuff

565
00:25:41,940 --> 00:25:46,799
where does the trance all of that stuff

566
00:25:43,410 --> 00:25:52,019
I want this to move into this work unit

567
00:25:46,799 --> 00:26:01,609
so basically I want this to happen all

568
00:25:52,019 --> 00:26:04,139
of this tap it in here so let's do that

569
00:26:01,609 --> 00:26:07,229
we'll start by putting it down here and

570
00:26:04,140 --> 00:26:08,640
what I'm gonna do at the initial moment

571
00:26:07,230 --> 00:26:12,390
is I'm just gonna do it in a separate

572
00:26:08,640 --> 00:26:14,759
pass here right so basically we're gonna

573
00:26:12,390 --> 00:26:17,310
do exactly this we're just going to do

574
00:26:14,759 --> 00:26:19,410
it in a different location so that that

575
00:26:17,309 --> 00:26:22,049
way it can be threaded eventually right

576
00:26:19,410 --> 00:26:23,540
so again exactly the same thing we're

577
00:26:22,049 --> 00:26:26,789
just gonna do it in a different place

578
00:26:23,539 --> 00:26:29,909
now I'm also not sure why we were doing

579
00:26:26,789 --> 00:26:31,559
these in two separate passes here that

580
00:26:29,910 --> 00:26:33,570
doesn't really make much sense so we can

581
00:26:31,559 --> 00:26:38,009
weld those together as well which again

582
00:26:33,569 --> 00:26:39,869
improves the caching dramatically so you

583
00:26:38,009 --> 00:26:41,250
know we got a ton of fat trim off here

584
00:26:39,869 --> 00:26:43,109
so I was saying like I don't really care

585
00:26:41,250 --> 00:26:44,549
how its fastest running right now that

586
00:26:43,109 --> 00:26:45,809
doesn't really tell us anything we're

587
00:26:44,549 --> 00:26:47,609
gonna have to see how fast it runs once

588
00:26:45,809 --> 00:26:48,869
we get rid of all the obvious cruft and

589
00:26:47,609 --> 00:26:50,849
then we can start actually profiling it

590
00:26:48,869 --> 00:26:52,529
and see what our chances are of making

591
00:26:50,849 --> 00:26:54,149
it run at a reasonable speed cuz it's so

592
00:26:52,529 --> 00:26:55,859
garbagey right now because it's been

593
00:26:54,150 --> 00:26:57,060
through so many iterations as we now

594
00:26:55,859 --> 00:26:57,929
start to clean up this code and like

595
00:26:57,059 --> 00:27:00,119
polish it up a bit

596
00:26:57,930 --> 00:27:02,549
it's gonna get naturally a little bit

597
00:27:00,119 --> 00:27:05,729
faster just from not doing anything

598
00:27:02,549 --> 00:27:07,200
stupid so and then at that point we can

599
00:27:05,730 --> 00:27:08,759
go all right now starting to profile

600
00:27:07,200 --> 00:27:10,950
this and see where what we're actually

601
00:27:08,759 --> 00:27:12,420
gonna have to turn the crank on all

602
00:27:10,950 --> 00:27:14,430
right so when we come through here we've

603
00:27:12,420 --> 00:27:16,800
got the light probes and again like this

604
00:27:14,430 --> 00:27:18,539
is not useful here we've got the probe

605
00:27:16,799 --> 00:27:20,519
the casting that we actually need to do

606
00:27:18,539 --> 00:27:27,629
and what I'm gonna say it's like all

607
00:27:20,519 --> 00:27:30,509
right so here's us going through our our

608
00:27:27,630 --> 00:27:34,920
voxel right and here's us doing the the

609
00:27:30,509 --> 00:27:36,599
transfer on this thing and we you know

610
00:27:34,920 --> 00:27:37,890
as we're doing that transfer yeah again

611
00:27:36,599 --> 00:27:39,149
like I said I'm not sure why this isn't

612
00:27:37,890 --> 00:27:39,710
welded in here so I'm just going to go

613
00:27:39,150 --> 00:27:42,649
ahead and weld

614
00:27:39,710 --> 00:27:44,929
and right now it's no reason not to so

615
00:27:42,648 --> 00:27:46,428
there's our edge coloring so you can see

616
00:27:44,929 --> 00:27:49,278
like right here this is only operating

617
00:27:46,429 --> 00:27:56,509
inside one of these textures so I can

618
00:27:49,278 --> 00:27:59,630
just grab this code directly and in here

619
00:27:56,509 --> 00:28:02,210
after this tx4 update is done I can just

620
00:27:59,630 --> 00:28:04,250
drop that right here right so that's the

621
00:28:02,210 --> 00:28:06,110
thing that ops there's no reason at the

622
00:28:04,250 --> 00:28:07,548
iterate over the voxel twice I don't

623
00:28:06,109 --> 00:28:09,048
even think I remembered we were doing

624
00:28:07,548 --> 00:28:11,089
that I thought we were just doing it in

625
00:28:09,048 --> 00:28:12,740
one pass there's no reason not to but we

626
00:28:11,089 --> 00:28:15,769
weren't so this is what needs to happen

627
00:28:12,740 --> 00:28:18,710
here here's the diffuse right we update

628
00:28:15,769 --> 00:28:20,269
the diffuse here and then here's the you

629
00:28:18,710 --> 00:28:22,850
know right immediately after the fuse

630
00:28:20,269 --> 00:28:26,658
we've got the lighting voxel updates

631
00:28:22,849 --> 00:28:29,480
happening for the edges right so I think

632
00:28:26,659 --> 00:28:32,000
that should just work and that'll

633
00:28:29,480 --> 00:28:33,769
operate here on this thread so then we

634
00:28:32,000 --> 00:28:36,259
just need the casting to be welded in

635
00:28:33,769 --> 00:28:38,329
line with that as well so much like

636
00:28:36,259 --> 00:28:40,250
we've got the light probe iteration here

637
00:28:38,329 --> 00:28:43,009
where we're doing all this stuff what I

638
00:28:40,250 --> 00:28:46,460
really want is to just say oh okay

639
00:28:43,009 --> 00:28:50,148
inside here where we got like Z Y X and

640
00:28:46,460 --> 00:28:52,880
so on when we actually grab out this

641
00:28:50,148 --> 00:28:55,250
cell before we do any of the other work

642
00:28:52,880 --> 00:28:58,159
on it inside that same loop I want to do

643
00:28:55,250 --> 00:28:59,808
my casting so my casting here instead of

644
00:28:58,159 --> 00:29:01,100
looping over a light probe index which

645
00:28:59,808 --> 00:29:04,038
is not actually something we need to do

646
00:29:01,099 --> 00:29:08,990
anymore we're actually just gonna like

647
00:29:04,038 --> 00:29:11,808
loop over array count right so in fact

648
00:29:08,990 --> 00:29:14,450
the Rae bundle this part right here is

649
00:29:11,808 --> 00:29:16,879
really all we need right

650
00:29:14,450 --> 00:29:20,269
so I guess actually it's just that can

651
00:29:16,880 --> 00:29:22,580
go away so we're gonna need some way to

652
00:29:20,269 --> 00:29:26,089
get the voxel location out here but

653
00:29:22,579 --> 00:29:27,798
other than that we're good and so this

654
00:29:26,089 --> 00:29:30,048
code can just operate directly in line

655
00:29:27,798 --> 00:29:32,210
it can update all of the information

656
00:29:30,048 --> 00:29:34,490
that we have we then run through here

657
00:29:32,210 --> 00:29:38,329
produce the edge output and everything's

658
00:29:34,490 --> 00:29:39,649
nice in line and clean right so you can

659
00:29:38,329 --> 00:29:41,418
see how this is going to be a nice

660
00:29:39,648 --> 00:29:42,648
well-oiled machine at some point the

661
00:29:41,419 --> 00:29:44,538
question is is going to be a fast enough

662
00:29:42,648 --> 00:29:46,099
machine we don't know but at least this

663
00:29:44,538 --> 00:29:48,349
all this data can be made to flow

664
00:29:46,099 --> 00:29:50,388
through very cleanly we don't have to do

665
00:29:48,349 --> 00:29:52,879
much and it's perfectly sliced here

666
00:29:50,388 --> 00:29:53,569
because it's not nobody it's never

667
00:29:52,880 --> 00:29:57,490
touching

668
00:29:53,569 --> 00:29:57,490
data that anyone else is touching right

669
00:30:00,220 --> 00:30:06,680
and if we go by rows we also don't even

670
00:30:04,400 --> 00:30:08,180
have any false sharing no other thread

671
00:30:06,680 --> 00:30:11,720
is ever gonna have to look at even this

672
00:30:08,180 --> 00:30:13,610
row because the whole row is ours and so

673
00:30:11,720 --> 00:30:17,900
we'd never have any false sharing either

674
00:30:13,609 --> 00:30:20,209
because the whole giant row we're only

675
00:30:17,900 --> 00:30:23,480
looking inside our own row if we were

676
00:30:20,210 --> 00:30:24,950
doing it where hey this 10 by 10 is

677
00:30:23,480 --> 00:30:29,690
yours and the one right next to it is

678
00:30:24,950 --> 00:30:32,509
mine well 10 is not a cache line size at

679
00:30:29,690 --> 00:30:33,920
all so we would be stepping all each

680
00:30:32,509 --> 00:30:34,220
thread would be stepping all over each

681
00:30:33,920 --> 00:30:36,769
other

682
00:30:34,220 --> 00:30:38,930
right because it'd be 40 bytes per and

683
00:30:36,769 --> 00:30:40,519
they would be fighting for cache lines

684
00:30:38,930 --> 00:30:42,620
because they'd be talking you know

685
00:30:40,519 --> 00:30:44,839
they'd be looking at stuff that's 40

686
00:30:42,619 --> 00:30:46,819
bytes away from another person another

687
00:30:44,839 --> 00:30:48,199
thread and that would just be their beef

688
00:30:46,819 --> 00:30:51,289
all sharing all over the place

689
00:30:48,200 --> 00:30:53,180
so the CPU would keep thinking it had to

690
00:30:51,289 --> 00:30:55,369
send information from one thread to

691
00:30:53,180 --> 00:30:57,860
another to avoid having the cache lines

692
00:30:55,369 --> 00:30:59,029
get written wrong but actually we won't

693
00:30:57,859 --> 00:31:00,319
don't care about that at all because

694
00:30:59,029 --> 00:31:02,629
these two things are never using the

695
00:31:00,319 --> 00:31:04,009
same part of a cache line and so we're

696
00:31:02,630 --> 00:31:08,090
just basically forced to CBG a ton of

697
00:31:04,009 --> 00:31:13,430
work that doesn't need to do all right

698
00:31:08,089 --> 00:31:15,529
so that's roughly what I want and now we

699
00:31:13,430 --> 00:31:17,690
just need this thing to I don't know

700
00:31:15,529 --> 00:31:19,099
what this is here for we don't actually

701
00:31:17,690 --> 00:31:22,670
need this anymore right

702
00:31:19,099 --> 00:31:24,740
so that's not even relevant anymore but

703
00:31:22,670 --> 00:31:25,370
do I need any of that in here I don't

704
00:31:24,740 --> 00:31:27,079
think so

705
00:31:25,369 --> 00:31:28,939
later see like now that's all that's

706
00:31:27,079 --> 00:31:30,859
garbage

707
00:31:28,940 --> 00:31:33,529
so that's roughly what we're looking at

708
00:31:30,859 --> 00:31:34,939
and when we come through here we're

709
00:31:33,529 --> 00:31:38,960
gonna probably need some of this stuff

710
00:31:34,940 --> 00:31:43,190
like you know the information about the

711
00:31:38,960 --> 00:31:44,660
voxel that goes on in here so I'm not

712
00:31:43,190 --> 00:31:46,640
sure how much of this we need but I'm

713
00:31:44,660 --> 00:31:47,750
pretty sure like none of this gets used

714
00:31:46,640 --> 00:31:50,690
in here anymore so I'm pretty sure all

715
00:31:47,750 --> 00:31:53,359
this can move out to the other side of

716
00:31:50,690 --> 00:32:00,950
things so I think all of this can go in

717
00:31:53,359 --> 00:32:03,859
here right probably and then when we

718
00:32:00,950 --> 00:32:06,830
have the random series in here you can

719
00:32:03,859 --> 00:32:08,149
see how this thing was working and

720
00:32:06,829 --> 00:32:10,339
to be completely honest with you I'm not

721
00:32:08,150 --> 00:32:13,460
sure that this is a very good way to do

722
00:32:10,339 --> 00:32:15,889
this in fact I could pretty much tell

723
00:32:13,460 --> 00:32:17,180
you it's not there's no real reason for

724
00:32:15,890 --> 00:32:20,570
these people to be writing to the series

725
00:32:17,180 --> 00:32:22,400
cash line that doesn't even really make

726
00:32:20,569 --> 00:32:23,269
any sense so if you take a look at

727
00:32:22,400 --> 00:32:26,330
what's going on here

728
00:32:23,269 --> 00:32:29,299
we need an entropy source in in this

729
00:32:26,329 --> 00:32:30,919
case right we need an entropy source so

730
00:32:29,299 --> 00:32:33,889
that each of these things when it's

731
00:32:30,920 --> 00:32:37,370
doing its randomization it needs to be

732
00:32:33,890 --> 00:32:39,080
able to do random choices I think I'm

733
00:32:37,369 --> 00:32:40,789
not sure if it actually still does

734
00:32:39,079 --> 00:32:41,949
although if it actually doesn't do that

735
00:32:40,789 --> 00:32:44,450
I guess we don't care

736
00:32:41,950 --> 00:32:45,740
all right so never mind we have to care

737
00:32:44,450 --> 00:32:47,390
about that that's gonna say we need the

738
00:32:45,740 --> 00:32:50,809
random series but we actually don't at

739
00:32:47,390 --> 00:32:53,030
this point um so forget I said that

740
00:32:50,809 --> 00:32:56,629
so now all we really need is just the

741
00:32:53,029 --> 00:32:58,490
location to do our sampling from and we

742
00:32:56,630 --> 00:32:59,960
should probably be good to go all right

743
00:32:58,490 --> 00:33:03,920
so let's get rid of some stuff we don't

744
00:32:59,960 --> 00:33:08,210
need this we do need the commands so

745
00:33:03,920 --> 00:33:10,519
these two things we probably need for

746
00:33:08,210 --> 00:33:12,319
this although the light voxel dim thing

747
00:33:10,519 --> 00:33:15,109
again I think I'm just gonna nerf that

748
00:33:12,319 --> 00:33:19,819
for now I'm gonna say this is actually

749
00:33:15,109 --> 00:33:21,859
gonna be the light voxel dim and I think

750
00:33:19,819 --> 00:33:23,929
we're gonna need to run through this

751
00:33:21,859 --> 00:33:26,299
code and clean up where people are

752
00:33:23,930 --> 00:33:27,500
getting their constants from just

753
00:33:26,299 --> 00:33:28,639
because there's so much of it now and

754
00:33:27,500 --> 00:33:30,259
now that we know what it is we should be

755
00:33:28,640 --> 00:33:31,700
able to do a nicer job on that so that's

756
00:33:30,259 --> 00:33:33,640
kind of a little to do that should be in

757
00:33:31,700 --> 00:33:35,990
the back of our heads

758
00:33:33,640 --> 00:33:37,640
so here's us looking at the light probe

759
00:33:35,990 --> 00:33:39,049
again we don't actually want that so I

760
00:33:37,640 --> 00:33:41,300
think what I'm gonna do instead is just

761
00:33:39,049 --> 00:33:49,309
say all right for the light probe we're

762
00:33:41,299 --> 00:33:51,230
gonna actually ask for we're just gonna

763
00:33:49,309 --> 00:33:52,759
ask for whatever the center of the voxel

764
00:33:51,230 --> 00:33:54,680
is right now which may not be a great

765
00:33:52,759 --> 00:33:57,279
place to ask so I'm gonna put a little

766
00:33:54,680 --> 00:33:57,279
to do here like

767
00:34:05,489 --> 00:34:09,699
so that light propane needs to be needs

768
00:34:08,139 --> 00:34:12,519
to come from somewhere where we actually

769
00:34:09,699 --> 00:34:14,408
know where the voxel is right and test

770
00:34:12,519 --> 00:34:19,000
light square is one easy way to do that

771
00:34:14,409 --> 00:34:20,289
so I think in Vox Center P here so we

772
00:34:19,000 --> 00:34:22,989
should be able to do something like that

773
00:34:20,289 --> 00:34:25,750
now that's not the actual center right I

774
00:34:22,989 --> 00:34:27,848
mean that's that's we need the this to

775
00:34:25,750 --> 00:34:30,369
actually produce the UVW of the voxel

776
00:34:27,849 --> 00:34:32,500
and so on so we don't really want that

777
00:34:30,369 --> 00:34:34,298
we probably want the test castrum probes

778
00:34:32,500 --> 00:34:41,168
so you can see in test cast from probes

779
00:34:34,298 --> 00:34:42,699
right we say in here this cast well no

780
00:34:41,168 --> 00:34:43,628
that's actually also using the probes we

781
00:34:42,699 --> 00:34:45,428
need something that tells us where the

782
00:34:43,628 --> 00:34:48,159
voxel is right I mean that's what we

783
00:34:45,429 --> 00:34:53,950
actually need and so it would really be

784
00:34:48,159 --> 00:34:57,358
this right this part right here so we

785
00:34:53,949 --> 00:34:57,358
probably want to do something like this

786
00:34:58,619 --> 00:35:04,088
where we say all right the Box Center P

787
00:35:01,210 --> 00:35:08,199
is whatever the min corner is and then

788
00:35:04,088 --> 00:35:12,159
we add to the min corner like the voxel

789
00:35:08,199 --> 00:35:14,169
D times the XY of it right and then the

790
00:35:12,159 --> 00:35:18,098
light probe is just gonna be for now

791
00:35:14,170 --> 00:35:23,950
it's gonna be that directly something

792
00:35:18,099 --> 00:35:27,630
like that right yeah we don't do this

793
00:35:23,949 --> 00:35:30,750
light probe index probing anymore right

794
00:35:27,630 --> 00:35:35,588
but we probably want to keep this code

795
00:35:30,750 --> 00:35:37,088
first for some somehow right and so we

796
00:35:35,588 --> 00:35:39,880
probably want to have a way of pushing

797
00:35:37,088 --> 00:35:41,289
debug lines for something what we'll do

798
00:35:39,880 --> 00:35:43,720
is we'll leave the code if zero it out

799
00:35:41,289 --> 00:35:47,019
and in here we'll maybe say like oh if

800
00:35:43,719 --> 00:35:50,669
you know this will eventually do be like

801
00:35:47,019 --> 00:35:53,108
some kind of if we'll do that has to

802
00:35:50,670 --> 00:35:55,690
what we'll do an if here that is based

803
00:35:53,108 --> 00:35:58,630
on which voxel it is or something right

804
00:35:55,690 --> 00:36:04,990
so we'd do something like oh if like x

805
00:35:58,630 --> 00:36:09,068
equals blah and like y equals blah and Z

806
00:36:04,989 --> 00:36:11,500
equals blah then do it right so we will

807
00:36:09,068 --> 00:36:12,940
do something like this but it just won't

808
00:36:11,500 --> 00:36:17,949
be exactly this

809
00:36:12,940 --> 00:36:21,068
you know all right so moving forwards

810
00:36:17,949 --> 00:36:22,750
the der sample index like it's not going

811
00:36:21,068 --> 00:36:26,289
to be a light probe index anymore

812
00:36:22,750 --> 00:36:34,809
because we don't really have that and so

813
00:36:26,289 --> 00:36:36,699
we're gonna need some kind of so we are

814
00:36:34,809 --> 00:36:38,739
using this series up here so I think

815
00:36:36,699 --> 00:36:40,689
this just needs to be sent down with it

816
00:36:38,739 --> 00:36:42,368
so what I'm gonna do is say look those

817
00:36:40,690 --> 00:36:51,809
are the only two places we get it I want

818
00:36:42,369 --> 00:36:58,180
to put those in the work order like so

819
00:36:51,809 --> 00:37:02,440
so we're gonna say is there's going to

820
00:36:58,179 --> 00:37:07,629
be an entropy seed right and the entropy

821
00:37:02,440 --> 00:37:09,909
seed needs to needs to somehow be like a

822
00:37:07,630 --> 00:37:11,380
mud version of something that these

823
00:37:09,909 --> 00:37:13,299
people can get their entropy from I

824
00:37:11,380 --> 00:37:19,930
guess if we only need two maybe I'll

825
00:37:13,300 --> 00:37:27,390
just put them both in there is light

826
00:37:19,929 --> 00:37:27,389
point entropy even used it's it used for

827
00:37:27,750 --> 00:37:32,818
okay well all right let's put the mouth

828
00:37:30,489 --> 00:37:32,818
in there

829
00:37:39,268 --> 00:37:44,258
would love a thing and see we can just

830
00:37:41,528 --> 00:37:56,648
say I want a pad structure here that

831
00:37:44,259 --> 00:38:00,548
pads out to this mini which is not the

832
00:37:56,648 --> 00:38:04,409
same as alignment by the way because I

833
00:38:00,548 --> 00:38:04,409
may want to address that pad in a way

834
00:38:06,509 --> 00:38:10,269
and ask how big it isn't tough like that

835
00:38:09,159 --> 00:38:11,769
and you can't really do that very

836
00:38:10,268 --> 00:38:13,478
effectively with just an a-line thing

837
00:38:11,768 --> 00:38:16,148
anyway

838
00:38:13,478 --> 00:38:18,938
so inside lighting work I want these two

839
00:38:16,148 --> 00:38:23,199
things I'm gonna pull those out right so

840
00:38:18,938 --> 00:38:25,598
I'm gonna do this in the work

841
00:38:23,199 --> 00:38:29,889
distribution I'm gonna get this series

842
00:38:25,599 --> 00:38:34,568
there so we're gonna say this sort of

843
00:38:29,889 --> 00:38:37,028
right get those two entropy s by looking

844
00:38:34,568 --> 00:38:39,130
at the random series in the solution

845
00:38:37,028 --> 00:38:41,168
we're going to pass those down so that

846
00:38:39,130 --> 00:38:44,380
in here where we actually get this we

847
00:38:41,168 --> 00:38:47,888
can just pull them out and that way

848
00:38:44,380 --> 00:38:52,959
nobody is bottlenecking on sharing that

849
00:38:47,889 --> 00:38:56,439
entropy source anywhere right so that's

850
00:38:52,958 --> 00:38:58,298
much nicer then in here we could say

851
00:38:56,438 --> 00:39:01,588
well light probe index isn't really what

852
00:38:58,298 --> 00:39:07,239
we want obviously but we can do like a

853
00:39:01,588 --> 00:39:10,478
you know Z times hot dim plus X or

854
00:39:07,239 --> 00:39:13,989
something like that right so we can look

855
00:39:10,478 --> 00:39:17,468
into the sample index by doing some kind

856
00:39:13,989 --> 00:39:21,688
of a you know weird you know fancy thing

857
00:39:17,469 --> 00:39:26,548
here right where we actually just do Y

858
00:39:21,688 --> 00:39:32,618
where we you know do generate a point

859
00:39:26,548 --> 00:39:35,349
index for entropy sake right all right

860
00:39:32,619 --> 00:39:36,699
so whether we're doing a debug or not

861
00:39:35,349 --> 00:39:38,459
should probably be something that we set

862
00:39:36,699 --> 00:39:44,829
up here so it should probably be like

863
00:39:38,458 --> 00:39:47,480
debug this and we set that in in sort of

864
00:39:44,829 --> 00:39:50,460
a more constant way

865
00:39:47,480 --> 00:39:54,510
like so and that way inside the subway

866
00:39:50,460 --> 00:39:55,800
thing we can look at the same thing at

867
00:39:54,510 --> 00:39:56,850
the moment that's gonna be nerfed out

868
00:39:55,800 --> 00:39:58,950
because again I don't really want to

869
00:39:56,849 --> 00:40:01,319
look at raycasting yet that's sort of a

870
00:39:58,949 --> 00:40:06,989
getting ahead of ourselves to say the

871
00:40:01,320 --> 00:40:10,080
least so let's go ahead and just clean

872
00:40:06,989 --> 00:40:13,319
that up a little bit and see what else

873
00:40:10,079 --> 00:40:15,809
we got all right so we now have to write

874
00:40:13,320 --> 00:40:18,500
out to the voxel C so that doesn't mean

875
00:40:15,809 --> 00:40:20,789
we do need the command structure in here

876
00:40:18,500 --> 00:40:23,190
we need some way of addressing the

877
00:40:20,789 --> 00:40:25,469
texture I don't know that we actually

878
00:40:23,190 --> 00:40:27,210
want to send the whole command structure

879
00:40:25,469 --> 00:40:32,250
down we may just want to send down the

880
00:40:27,210 --> 00:40:35,220
pointers - what - right - so it's hard

881
00:40:32,250 --> 00:40:44,610
to say like I'm not sure which we want

882
00:40:35,219 --> 00:40:48,209
about that so that's a good question

883
00:40:44,610 --> 00:40:52,320
I don't know yeah I don't know exactly

884
00:40:48,210 --> 00:40:57,179
what we want to do about that for now I

885
00:40:52,320 --> 00:40:58,410
guess I'll send it down but maybe I

886
00:40:57,179 --> 00:41:00,480
don't know that we want to do that long

887
00:40:58,409 --> 00:41:04,319
term it's hard to say I don't want to I

888
00:41:00,480 --> 00:41:05,550
don't want to commit so anyway let's say

889
00:41:04,320 --> 00:41:07,170
that we're gonna send it down so that

890
00:41:05,550 --> 00:41:10,650
the command structure does come through

891
00:41:07,170 --> 00:41:15,990
so this is going to be in the work order

892
00:41:10,650 --> 00:41:19,829
so it'll be like here and and we'll just

893
00:41:15,989 --> 00:41:23,119
grab that out so when we set up the work

894
00:41:19,829 --> 00:41:26,369
we'll have to put that in so in compute

895
00:41:23,119 --> 00:41:31,139
light propagation we need to pass that

896
00:41:26,369 --> 00:41:33,089
down so when we call compute light

897
00:41:31,139 --> 00:41:38,279
propagation which by the way we need to

898
00:41:33,090 --> 00:41:40,620
start calling we'll pass that down so

899
00:41:38,280 --> 00:41:43,440
compute light propagation will now kind

900
00:41:40,619 --> 00:41:45,900
of always be called and test light

901
00:41:43,440 --> 00:41:48,750
sphere is actually something that we

902
00:41:45,900 --> 00:41:50,970
would call in a different way now so

903
00:41:48,750 --> 00:41:53,880
test light like this should just always

904
00:41:50,969 --> 00:41:56,099
work this way where we compute light

905
00:41:53,880 --> 00:41:57,480
propagation multi-threaded always if we

906
00:41:56,099 --> 00:41:58,949
want I mean we turn off threading

907
00:41:57,480 --> 00:42:00,599
anytime we want to test it without that

908
00:41:58,949 --> 00:42:03,480
but he's going through that

909
00:42:00,599 --> 00:42:05,849
and so the test lights for your call I

910
00:42:03,480 --> 00:42:09,869
actually want to be inside the thread

911
00:42:05,849 --> 00:42:13,170
part so basically when we do our compute

912
00:42:09,869 --> 00:42:18,539
light propagation we can choose to or

913
00:42:13,170 --> 00:42:21,840
not to do the sphere version as test

914
00:42:18,539 --> 00:42:25,829
code separately right so the test light

915
00:42:21,840 --> 00:42:30,870
sphere would actually go in here right

916
00:42:25,829 --> 00:42:33,329
and be a way of obviating whatever was

917
00:42:30,869 --> 00:42:35,420
happening with the raycasting so for

918
00:42:33,329 --> 00:42:45,739
example it could just look like this

919
00:42:35,420 --> 00:42:51,539
where we have like you know if zero else

920
00:42:45,739 --> 00:42:55,019
test sphere like that that's what we

921
00:42:51,539 --> 00:42:57,840
want to do there so all right we have to

922
00:42:55,019 --> 00:43:01,530
have our game commands our game render

923
00:42:57,840 --> 00:43:03,780
commands pulled out of the work order we

924
00:43:01,530 --> 00:43:12,590
need to set that when we do our lighting

925
00:43:03,780 --> 00:43:12,590
there we don't need this anymore

926
00:43:12,739 --> 00:43:25,439
and let's see got the block copy voxel

927
00:43:17,849 --> 00:43:26,969
begin landing computation I don't

928
00:43:25,440 --> 00:43:29,240
actually know what this was designed to

929
00:43:26,969 --> 00:43:29,239
do

930
00:43:34,599 --> 00:43:48,949
so I'm just gonna remove that all right

931
00:43:45,010 --> 00:43:50,540
so we've got our test cast from probes

932
00:43:48,949 --> 00:43:55,009
that would be another thing that would

933
00:43:50,539 --> 00:44:08,029
happen up in the all of this stuff would

934
00:43:55,010 --> 00:44:13,370
be happening up in here now so our test

935
00:44:08,030 --> 00:44:17,030
lightsphere same thing and let's take a

936
00:44:13,369 --> 00:44:18,889
look at now we've got so in our compute

937
00:44:17,030 --> 00:44:21,530
light propagation call which is now

938
00:44:18,889 --> 00:44:22,789
multi-threaded I think I'm gonna go

939
00:44:21,530 --> 00:44:25,190
ahead and weld that into the other

940
00:44:22,789 --> 00:44:26,809
routine so that we don't like call out

941
00:44:25,190 --> 00:44:29,510
to it for no reason like basically this

942
00:44:26,809 --> 00:44:32,059
is the main workhorse now I'm just going

943
00:44:29,510 --> 00:44:42,050
to put that directly into that other

944
00:44:32,059 --> 00:44:48,500
call so right here there's no need to

945
00:44:42,050 --> 00:44:50,240
call out to a function for that so

946
00:44:48,500 --> 00:44:53,269
instead of calling compute light

947
00:44:50,239 --> 00:44:55,549
propagation I'm just gonna delete that

948
00:44:53,269 --> 00:44:57,769
and have this work distribution happen

949
00:44:55,550 --> 00:44:59,870
in like it's very small it's most of

950
00:44:57,769 --> 00:45:01,369
what we're doing here anyway so I feel

951
00:44:59,869 --> 00:45:02,989
like that should just be directly in

952
00:45:01,369 --> 00:45:05,420
line that's because that's really I mean

953
00:45:02,989 --> 00:45:06,649
that's everything we're doing that's

954
00:45:05,420 --> 00:45:09,019
what this the whole point of this

955
00:45:06,650 --> 00:45:10,519
routine even is so calling out something

956
00:45:09,019 --> 00:45:13,039
to do the only thing you do doesn't

957
00:45:10,519 --> 00:45:17,659
really make much sense so I'm gonna go

958
00:45:13,039 --> 00:45:19,279
ahead and compile that in test cast from

959
00:45:17,659 --> 00:45:21,139
probes you can see us still doing the

960
00:45:19,280 --> 00:45:23,210
probe here what I want to do is just

961
00:45:21,139 --> 00:45:26,179
have this be something that works with

962
00:45:23,210 --> 00:45:28,070
the voxel directly so basically test

963
00:45:26,179 --> 00:45:30,079
cast from probes is going to change to

964
00:45:28,070 --> 00:45:33,730
something else it's going to be

965
00:45:30,079 --> 00:45:33,730
something like this

966
00:45:36,099 --> 00:45:41,089
it's just gonna be test cast and there's

967
00:45:38,900 --> 00:45:41,570
gonna be like a Rey position kind of a

968
00:45:41,090 --> 00:45:44,510
thing

969
00:45:41,570 --> 00:45:47,240
right so you're gonna pass the hoops

970
00:45:44,510 --> 00:45:52,450
you're gonna pass the cast be in there

971
00:45:47,239 --> 00:45:52,449
and this is just gonna do a test cast

972
00:45:54,639 --> 00:45:59,869
like that so if we want to do a test

973
00:45:58,190 --> 00:46:02,030
cast it's pretty easy we just call it

974
00:45:59,869 --> 00:46:04,250
with the casting location so that means

975
00:46:02,030 --> 00:46:07,670
in here right where we've sort of got

976
00:46:04,250 --> 00:46:09,139
our platform work you call back and

977
00:46:07,670 --> 00:46:12,320
we've got various things we can have it

978
00:46:09,139 --> 00:46:13,849
do we want the raycast

979
00:46:12,320 --> 00:46:15,530
to be one of them we might want to move

980
00:46:13,849 --> 00:46:16,699
that into its own routine but basically

981
00:46:15,530 --> 00:46:19,030
what we want to do is something like

982
00:46:16,699 --> 00:46:19,029
this

983
00:46:22,030 --> 00:46:26,960
have a way of doing the actual cast have

984
00:46:25,309 --> 00:46:31,759
a way of doing the test cast and have a

985
00:46:26,960 --> 00:46:33,590
way of doing the test sphere right so we

986
00:46:31,760 --> 00:46:35,540
can sort of define what we want here

987
00:46:33,590 --> 00:46:37,550
like you know which one of these we want

988
00:46:35,539 --> 00:46:42,250
and that's the one that will actually

989
00:46:37,550 --> 00:46:47,140
get done so we can have like test cast

990
00:46:42,250 --> 00:46:47,139
tests fear you know this sort of thing

991
00:46:50,710 --> 00:46:59,750
maybe this something like that and we

992
00:46:58,159 --> 00:47:03,679
gonna switch which ones of these we do

993
00:46:59,750 --> 00:47:06,320
and go from there so then at the end

994
00:47:03,679 --> 00:47:08,149
this one is the actual ray cast and like

995
00:47:06,320 --> 00:47:09,920
I said I might because it's just it'll

996
00:47:08,150 --> 00:47:12,079
get welded in probably by the compiler

997
00:47:09,920 --> 00:47:14,000
anyway and even if it doesn't there's so

998
00:47:12,079 --> 00:47:15,380
much work that it does I don't think it

999
00:47:14,000 --> 00:47:19,760
will matter if it was a call or not

1000
00:47:15,380 --> 00:47:24,440
because it's got just a huge crap ton of

1001
00:47:19,760 --> 00:47:26,030
stuff it's got to do sadly you know I

1002
00:47:24,440 --> 00:47:27,470
wish it was smaller so I'm going to go

1003
00:47:26,030 --> 00:47:30,890
ahead and pull that out and just put

1004
00:47:27,469 --> 00:47:32,269
that in here and you know we'll see if

1005
00:47:30,889 --> 00:47:37,039
it becomes a problem we can weld it in

1006
00:47:32,269 --> 00:47:42,019
later and so we just have like really do

1007
00:47:37,039 --> 00:47:44,500
a test cast a test sphere or our actual

1008
00:47:42,019 --> 00:47:44,500
ray cast

1009
00:47:46,699 --> 00:47:51,750
and those are the three things that we

1010
00:47:48,659 --> 00:47:53,399
want so then we just need to call them

1011
00:47:51,750 --> 00:47:56,460
with the right parameters but otherwise

1012
00:47:53,400 --> 00:48:02,910
we're good let's take a look at what

1013
00:47:56,460 --> 00:48:04,769
they actually need so test cast just

1014
00:48:02,909 --> 00:48:06,118
needs a solution in a cast fee I don't

1015
00:48:04,769 --> 00:48:07,409
know that it needs anything else because

1016
00:48:06,119 --> 00:48:11,340
it's not actually doing anything else

1017
00:48:07,409 --> 00:48:17,029
right so to do the test cast we would

1018
00:48:11,340 --> 00:48:33,930
just do solution and that Caspi location

1019
00:48:17,030 --> 00:48:35,220
so it is right here and this is kind of

1020
00:48:33,929 --> 00:48:37,679
nice too because it means this will kind

1021
00:48:35,219 --> 00:48:41,368
of feed forward properly so there's us

1022
00:48:37,679 --> 00:48:42,868
producing the centering information so

1023
00:48:41,369 --> 00:48:45,809
we're gonna say test cast from the Box

1024
00:48:42,869 --> 00:48:50,490
Center we'll say full cast from the Box

1025
00:48:45,809 --> 00:48:58,920
Center and the test sphere will do the

1026
00:48:50,489 --> 00:49:06,329
same thing all right um let's see what

1027
00:48:58,920 --> 00:49:11,990
do we want to do here too much code to

1028
00:49:06,329 --> 00:49:17,039
move around and too much to simplify so

1029
00:49:11,989 --> 00:49:21,059
when we do these test casts we want

1030
00:49:17,039 --> 00:49:22,440
these to just give us back well we

1031
00:49:21,059 --> 00:49:26,489
really just want these to just do

1032
00:49:22,440 --> 00:49:31,349
they're right you know what I mean so we

1033
00:49:26,489 --> 00:49:33,419
want these to do the writing for us this

1034
00:49:31,349 --> 00:49:35,880
voxel offset C&amp;D stuff needs to be

1035
00:49:33,420 --> 00:49:37,289
simplified and made cleaner obviously so

1036
00:49:35,880 --> 00:49:41,400
we want to take care of that at some

1037
00:49:37,289 --> 00:49:44,519
point and we'll get there but let's go

1038
00:49:41,400 --> 00:49:47,460
ahead and finish up the rest of this so

1039
00:49:44,519 --> 00:49:50,570
if I have full cast here this does the

1040
00:49:47,460 --> 00:49:53,099
full ray cast set that's going to need

1041
00:49:50,570 --> 00:49:56,119
everything that this thing needs so that

1042
00:49:53,099 --> 00:49:56,118
needs the lighting solution

1043
00:49:56,940 --> 00:50:02,579
it's gonna need the light probe pee

1044
00:50:09,088 --> 00:50:14,108
actually so as we'll just leave it that

1045
00:50:12,760 --> 00:50:15,609
way

1046
00:50:14,108 --> 00:50:17,588
and it's gonna need any of the sort of

1047
00:50:15,608 --> 00:50:19,509
dependency stuff so it's gonna need like

1048
00:50:17,588 --> 00:50:22,659
the sample point entropy like all that

1049
00:50:19,510 --> 00:50:28,660
stuff so I think we probably want to

1050
00:50:22,659 --> 00:50:36,098
pass the work down so we can grab that

1051
00:50:28,659 --> 00:50:36,909
stuff out like so and other folks might

1052
00:50:36,099 --> 00:50:39,730
need that too

1053
00:50:36,909 --> 00:50:42,670
we'll see we don't know what they're

1054
00:50:39,730 --> 00:50:45,969
gonna require for writing and that sort

1055
00:50:42,670 --> 00:50:49,480
of stuff but we'll get there all right

1056
00:50:45,969 --> 00:50:54,338
so this gets passed don't know why did

1057
00:50:49,480 --> 00:50:58,568
that solution gets passed we don't need

1058
00:50:54,338 --> 00:51:02,619
that I suppose technically we don't need

1059
00:50:58,568 --> 00:51:06,550
the solution then because you can just

1060
00:51:02,619 --> 00:51:08,140
get it out of the work structure so here

1061
00:51:06,550 --> 00:51:12,130
you can see us we need this sort of

1062
00:51:08,139 --> 00:51:14,019
point index for the entropy and I

1063
00:51:12,130 --> 00:51:18,869
suppose we need the voxel location in

1064
00:51:14,019 --> 00:51:18,869
general for other things potentially I

1065
00:51:19,769 --> 00:51:24,849
guess I'm not 100% sure that we really

1066
00:51:23,500 --> 00:51:27,068
need them because we could just pass

1067
00:51:24,849 --> 00:51:30,550
down the location that you're writing to

1068
00:51:27,068 --> 00:51:32,230
as a pointer which might be smarter and

1069
00:51:30,550 --> 00:51:36,359
then you're just gonna do like offsets

1070
00:51:32,230 --> 00:51:36,358
of that to think about that

1071
00:51:40,780 --> 00:51:45,970
yeah so thinking about that I think we

1072
00:51:43,989 --> 00:51:48,669
just need the voxel cell itself for that

1073
00:51:45,969 --> 00:51:51,309
for these parts anyway because when you

1074
00:51:48,670 --> 00:51:54,090
do like spam voxel is not really what we

1075
00:51:51,309 --> 00:51:56,949
want right so if you look at spam voxel

1076
00:51:54,090 --> 00:52:00,430
it's doing a bunch of crap that we don't

1077
00:51:56,949 --> 00:52:02,949
actually want it to do and so when it's

1078
00:52:00,429 --> 00:52:05,889
doing this update step we really just

1079
00:52:02,949 --> 00:52:08,319
want that update step to be baked into

1080
00:52:05,889 --> 00:52:11,170
here right we want that update set to be

1081
00:52:08,320 --> 00:52:14,890
baked in here so from now on this is

1082
00:52:11,170 --> 00:52:21,700
really not doing any of this it's really

1083
00:52:14,889 --> 00:52:24,730
just gonna do a like update voxel step

1084
00:52:21,699 --> 00:52:26,980
it's gonna take the light voxel cell

1085
00:52:24,730 --> 00:52:29,650
that you're talking about like this and

1086
00:52:26,980 --> 00:52:31,090
then it's gonna blend in the light C and

1087
00:52:29,650 --> 00:52:40,780
the light D that you were talking about

1088
00:52:31,090 --> 00:52:43,300
right so it's really this I think is all

1089
00:52:40,780 --> 00:52:46,060
we're actually looking at now so update

1090
00:52:43,300 --> 00:52:51,340
voxels gonna take the cell in question

1091
00:52:46,059 --> 00:52:52,449
it doesn't need anything other than just

1092
00:52:51,340 --> 00:52:57,280
the information for writing into that

1093
00:52:52,449 --> 00:53:01,059
cell and I think we're good right I

1094
00:52:57,280 --> 00:53:02,290
might change the order here so I might

1095
00:53:01,059 --> 00:53:04,269
just say look give me the information

1096
00:53:02,289 --> 00:53:13,960
about writing first and then we'll do

1097
00:53:04,269 --> 00:53:15,969
the other part second all right I think

1098
00:53:13,960 --> 00:53:17,829
we're good so I think that's what I want

1099
00:53:15,969 --> 00:53:19,989
and that means the lighting cell itself

1100
00:53:17,829 --> 00:53:21,699
should probably pass the light voxel

1101
00:53:19,989 --> 00:53:26,649
cell should come down here right so it

1102
00:53:21,699 --> 00:53:28,869
should be like light voxel cell cell and

1103
00:53:26,650 --> 00:53:31,660
then in here where we do this we need

1104
00:53:28,869 --> 00:53:35,009
that entropy index so I might make that

1105
00:53:31,659 --> 00:53:35,009
a thing that we pass down to

1106
00:53:40,110 --> 00:53:46,599
something like that

1107
00:53:43,079 --> 00:53:50,139
and that'll just be something that we

1108
00:53:46,599 --> 00:53:52,690
keep track of for entropy seed in here

1109
00:53:50,139 --> 00:53:59,559
and I don't know how exactly we want to

1110
00:53:52,690 --> 00:54:03,610
do that but it's like something we want

1111
00:53:59,559 --> 00:54:17,230
this thing to keep track of right not

1112
00:54:03,610 --> 00:54:21,640
you but you all right so something more

1113
00:54:17,230 --> 00:54:23,740
like this so we have the entropy index

1114
00:54:21,639 --> 00:54:27,819
the center PE the cell blah blah blah

1115
00:54:23,739 --> 00:54:30,819
right I think all that seems reasonable

1116
00:54:27,820 --> 00:54:32,350
test cast test fearful cast all right we

1117
00:54:30,820 --> 00:54:36,280
got some work to do here but we're all

1118
00:54:32,349 --> 00:54:38,139
right still going relatively okay so

1119
00:54:36,280 --> 00:54:39,610
when we then go look at some of these

1120
00:54:38,139 --> 00:54:42,579
other guys well let me just see if that

1121
00:54:39,610 --> 00:54:44,920
got rid of our errors for this what is

1122
00:54:42,579 --> 00:54:48,639
this the T update blend yes so the T

1123
00:54:44,920 --> 00:54:52,440
update blend hmm I think we're just

1124
00:54:48,639 --> 00:54:58,239
gonna want a hard code in here for now

1125
00:54:52,440 --> 00:55:07,710
an update voxel so I think that wants to

1126
00:54:58,239 --> 00:55:07,709
probably be in passed in like this

1127
00:55:10,269 --> 00:55:21,110
so when we do our Jimmy when we do our

1128
00:55:15,710 --> 00:55:24,769
voxel updates in the full cast I'm going

1129
00:55:21,110 --> 00:55:25,940
to just pass that Qi update blend in

1130
00:55:24,769 --> 00:55:29,440
there I don't think this thing needs to

1131
00:55:25,940 --> 00:55:34,490
be looking up in the light solution

1132
00:55:29,440 --> 00:55:36,380
alright so yeah then we want to call

1133
00:55:34,489 --> 00:55:41,779
update Vox the same way in our test cast

1134
00:55:36,380 --> 00:55:44,180
or the acht offset and all that stuff

1135
00:55:41,780 --> 00:55:46,580
just needs to get rearranged here but

1136
00:55:44,179 --> 00:55:50,389
otherwise it's the same we've got the

1137
00:55:46,579 --> 00:55:53,000
light see the hit D we've got all that

1138
00:55:50,389 --> 00:55:55,519
stuff right so we have all that and we

1139
00:55:53,000 --> 00:55:57,079
just need to pass the T update blend

1140
00:55:55,519 --> 00:56:01,909
which again come from exactly the same

1141
00:55:57,079 --> 00:56:02,329
place for some reason this is out of

1142
00:56:01,909 --> 00:56:06,139
order

1143
00:56:02,329 --> 00:56:11,090
I don't know why that's the case here we

1144
00:56:06,139 --> 00:56:17,719
go let me fix this now what's the

1145
00:56:11,090 --> 00:56:19,850
problem I see the problem okay so now in

1146
00:56:17,719 --> 00:56:24,289
here we also need to pass the light

1147
00:56:19,849 --> 00:56:25,819
voxel cell again and that's again just

1148
00:56:24,289 --> 00:56:27,619
because we got to blend in to that

1149
00:56:25,820 --> 00:56:32,870
particular cell so we're going to do

1150
00:56:27,619 --> 00:56:42,859
that here our entropy index plus sample

1151
00:56:32,869 --> 00:56:44,750
point entropy so that really is just for

1152
00:56:42,860 --> 00:56:49,579
each individual sample point so that's

1153
00:56:44,750 --> 00:56:51,889
actually should be masked where did that

1154
00:56:49,579 --> 00:56:56,079
sample point entropy come in it's

1155
00:56:51,889 --> 00:56:57,980
supposed to come in right at the yeah

1156
00:56:56,079 --> 00:56:59,599
supposed to come in right here so that

1157
00:56:57,980 --> 00:57:02,389
should actually I should have cut and

1158
00:56:59,599 --> 00:57:03,769
pasted that whole thing out here that's

1159
00:57:02,389 --> 00:57:06,829
the complete equation for the entropy

1160
00:57:03,769 --> 00:57:08,750
index at the moment all right so now we

1161
00:57:06,829 --> 00:57:10,699
need to know where is the moon

1162
00:57:08,750 --> 00:57:12,800
obviously something everyone always asks

1163
00:57:10,699 --> 00:57:14,539
themselves let's grab that put it in

1164
00:57:12,800 --> 00:57:17,940
here because the moon only exists inside

1165
00:57:14,539 --> 00:57:21,809
the full ray cast or

1166
00:57:17,940 --> 00:57:23,220
what else we got alright so now since

1167
00:57:21,809 --> 00:57:25,170
we're gonna run our test sphere through

1168
00:57:23,219 --> 00:57:33,179
this particular path I need to make sure

1169
00:57:25,170 --> 00:57:35,159
the tests fear actually works and so

1170
00:57:33,179 --> 00:57:36,509
that's gonna require me passing looks

1171
00:57:35,159 --> 00:57:40,858
like the solution in the group down

1172
00:57:36,510 --> 00:57:44,880
right and when I look at that I'm like

1173
00:57:40,858 --> 00:57:47,670
no mmm I don't love that I don't think

1174
00:57:44,880 --> 00:57:49,760
we really want to do that so I think

1175
00:57:47,670 --> 00:57:52,829
what we'd rather do is like you know

1176
00:57:49,760 --> 00:57:56,720
take the late lookup voxel dim get rid

1177
00:57:52,829 --> 00:58:05,849
of the group do it this way and then

1178
00:57:56,719 --> 00:58:07,289
when we get rid of all this stuff figure

1179
00:58:05,849 --> 00:58:09,480
out what sort of things were actually

1180
00:58:07,289 --> 00:58:11,130
looking up here like Vox in total dim

1181
00:58:09,480 --> 00:58:12,900
and stuff like what's fair out why we

1182
00:58:11,130 --> 00:58:14,970
need to get that from the setup let's

1183
00:58:12,900 --> 00:58:17,250
stop getting from the setup and then

1184
00:58:14,969 --> 00:58:18,659
when we actually call that test light

1185
00:58:17,250 --> 00:58:20,880
sphere I want to probably do it in a

1186
00:58:18,659 --> 00:58:22,980
slightly different way so when we call

1187
00:58:20,880 --> 00:58:25,440
the test sphere I don't want to loop

1188
00:58:22,980 --> 00:58:30,300
over the voxel this way I want to loop

1189
00:58:25,440 --> 00:58:38,099
over the voxel in the outer code right

1190
00:58:30,300 --> 00:58:42,589
and just call in here we probably wants

1191
00:58:38,099 --> 00:58:45,690
the debug code to get placed into the

1192
00:58:42,588 --> 00:58:49,828
routine for drawing so we probably also

1193
00:58:45,690 --> 00:58:51,630
want that here right and we have the Box

1194
00:58:49,829 --> 00:58:53,339
Center P already so we could just leave

1195
00:58:51,630 --> 00:58:56,670
that code in here so this is just if we

1196
00:58:53,338 --> 00:59:00,389
want to see those debug voxels so I'm

1197
00:58:56,670 --> 00:59:02,159
going to leave that there and and then

1198
00:59:00,389 --> 00:59:04,828
work on the this code the test sphere

1199
00:59:02,159 --> 00:59:08,449
code up here so we only need to do

1200
00:59:04,829 --> 00:59:11,730
looping over the interior texture and

1201
00:59:08,449 --> 00:59:15,299
then I think we're good so taking a look

1202
00:59:11,730 --> 00:59:17,849
at the equations here we we probably

1203
00:59:15,300 --> 00:59:22,410
don't need a lot of this stuff so like

1204
00:59:17,849 --> 00:59:25,338
the light uvw is really just mapping the

1205
00:59:22,409 --> 00:59:25,338
light in there

1206
00:59:27,869 --> 00:59:34,789
I'm pretty sure the in total dim is

1207
00:59:30,150 --> 00:59:41,639
actually in the solution itself right so

1208
00:59:34,789 --> 00:59:45,360
we have that code don't we I guess we

1209
00:59:41,639 --> 00:59:47,699
only have the cell dim but the inverse

1210
00:59:45,360 --> 00:59:50,400
Vox will sell dim right like we can

1211
00:59:47,699 --> 00:59:56,789
compute both of these things the voxel

1212
00:59:50,400 --> 00:59:58,230
min corner is definitely in here so

1213
00:59:56,789 --> 01:00:00,090
looking at the way this is working yeah

1214
00:59:58,230 --> 01:00:03,240
I think we can just change this around a

1215
01:00:00,090 --> 01:00:04,950
little bit let's let's not do this in

1216
01:00:03,239 --> 01:00:05,519
light in UV space it doesn't make any

1217
01:00:04,949 --> 01:00:08,460
sense

1218
01:00:05,519 --> 01:00:12,690
let's just have this past us in the box

1219
01:00:08,460 --> 01:00:17,369
Center or P well delete this will come

1220
01:00:12,690 --> 01:00:21,240
in here and say okay let me know you

1221
01:00:17,369 --> 01:00:23,969
know when we're doing our light normal

1222
01:00:21,239 --> 01:00:25,949
we just need to know which direction

1223
01:00:23,969 --> 01:00:28,589
it's facing the distance is going to be

1224
01:00:25,949 --> 01:00:30,179
a little bit weird here because it's in

1225
01:00:28,590 --> 01:00:31,860
gonna be in world space to study of UV

1226
01:00:30,179 --> 01:00:33,929
space now so we're gonna have to adjust

1227
01:00:31,860 --> 01:00:37,110
the brightness of it but other than that

1228
01:00:33,929 --> 01:00:43,429
we should be okay so what we're gonna do

1229
01:00:37,110 --> 01:00:48,000
is say alright come through here light P

1230
01:00:43,429 --> 01:00:51,179
minus box Center P that's all we

1231
01:00:48,000 --> 01:00:54,840
actually need we don't care about the

1232
01:00:51,179 --> 01:00:59,299
Vox UV W at all we already have the

1233
01:00:54,840 --> 01:00:59,300
voxel cell that we're writing into

1234
01:00:59,960 --> 01:01:06,539
because the outer code is computed it so

1235
01:01:03,510 --> 01:01:08,760
we can get rid of all of this and Plus

1236
01:01:06,539 --> 01:01:11,039
this right here is actually a voxel

1237
01:01:08,760 --> 01:01:12,420
update so we could actually just call

1238
01:01:11,039 --> 01:01:14,969
update voxel but we're not going to

1239
01:01:12,420 --> 01:01:20,909
right now because we're using the test

1240
01:01:14,969 --> 01:01:25,019
fear so that's fine but eventually we

1241
01:01:20,909 --> 01:01:28,739
probably will okay so now let's clean

1242
01:01:25,019 --> 01:01:29,099
this code up from here let's see what

1243
01:01:28,739 --> 01:01:33,659
we've got

1244
01:01:29,099 --> 01:01:37,230
so here's our T y loop here's our T X

1245
01:01:33,659 --> 01:01:39,000
loop and it looks like we pasted this in

1246
01:01:37,230 --> 01:01:39,909
a little too early so this was actually

1247
01:01:39,000 --> 01:01:44,980
supposed to have

1248
01:01:39,909 --> 01:01:52,118
clothes on it like there and then the

1249
01:01:44,980 --> 01:01:52,528
these two loops were separate and off we

1250
01:01:52,119 --> 01:01:55,539
go

1251
01:01:52,528 --> 01:01:57,909
okay so ton of major changes there so we

1252
01:01:55,539 --> 01:02:00,579
probably have to do like at least one

1253
01:01:57,909 --> 01:02:02,739
more pass on this now to clean this up

1254
01:02:00,579 --> 01:02:05,680
and get rid of like stupid mistakes that

1255
01:02:02,739 --> 01:02:15,278
we just made but now you can kind of see

1256
01:02:05,679 --> 01:02:22,358
we're getting closer to reasonable okay

1257
01:02:15,278 --> 01:02:24,630
so let's see what we have here code is

1258
01:02:22,358 --> 01:02:36,400
getting smaller and that's very good

1259
01:02:24,630 --> 01:02:37,930
right looking much nicer we don't really

1260
01:02:36,400 --> 01:02:41,740
have to test if we're inside things

1261
01:02:37,929 --> 01:02:49,210
anymore because we only step through

1262
01:02:41,739 --> 01:02:50,469
things to begin with that seems good in

1263
01:02:49,210 --> 01:02:52,619
fact none of this stuff is necessary

1264
01:02:50,469 --> 01:02:52,618
anymore

1265
01:03:02,449 --> 01:03:10,439
all right um I'm not sure so I don't

1266
01:03:07,619 --> 01:03:13,409
know what this I don't know what this

1267
01:03:10,440 --> 01:03:15,480
get irradiance bid is here look up Fox

1268
01:03:13,409 --> 01:03:16,739
clamp so I mean you can see like we can

1269
01:03:15,480 --> 01:03:18,119
just remove all this code because now

1270
01:03:16,739 --> 01:03:19,319
we're just gonna step through the voxels

1271
01:03:18,119 --> 01:03:21,029
directly and we never have to ask

1272
01:03:19,320 --> 01:03:23,820
whether inside them and that's pretty

1273
01:03:21,030 --> 01:03:26,250
valuable right because we can just avoid

1274
01:03:23,820 --> 01:03:30,890
a ton of work by just knowing that we'd

1275
01:03:26,250 --> 01:03:33,360
never have to actually do that right so

1276
01:03:30,889 --> 01:03:38,339
I think we should be okay

1277
01:03:33,360 --> 01:03:47,789
Oh mmm I lied so when we actually do the

1278
01:03:38,340 --> 01:03:53,490
sampling so that's not true we will have

1279
01:03:47,789 --> 01:03:56,090
to where's that clamped we still don't

1280
01:03:53,489 --> 01:03:56,089
need this one

1281
01:04:00,108 --> 01:04:05,608
but we do need lookup box with lamped so

1282
01:04:04,199 --> 01:04:07,348
we still need to get lookup voxel

1283
01:04:05,608 --> 01:04:10,380
clamped and we need that for the reason

1284
01:04:07,349 --> 01:04:12,380
that we do do the blending in the voxel

1285
01:04:10,380 --> 01:04:15,119
for when we have to do our radiance

1286
01:04:12,380 --> 01:04:18,630
lookup when we cast rays to see what we

1287
01:04:15,119 --> 01:04:22,318
hit right so we do have a little bit

1288
01:04:18,630 --> 01:04:25,369
there but otherwise we're otherwise we

1289
01:04:22,318 --> 01:04:25,369
could still get rid of the rest of it

1290
01:04:26,690 --> 01:04:37,950
and so are we not using the get

1291
01:04:30,150 --> 01:04:39,778
irradiance anymore yeah so this was just

1292
01:04:37,949 --> 01:04:41,250
us doing that sampling so it looks like

1293
01:04:39,778 --> 01:04:43,380
what we're doing currently is just

1294
01:04:41,250 --> 01:04:48,028
sampling the light color without

1295
01:04:43,380 --> 01:04:51,750
actually doing any kind of bounce

1296
01:04:48,028 --> 01:04:53,309
computation so we probably do sort of

1297
01:04:51,750 --> 01:04:56,539
want this at some point but it'll

1298
01:04:53,309 --> 01:05:02,849
probably just get welded into here so

1299
01:04:56,539 --> 01:05:08,250
I'm just gonna go ahead and say this is

1300
01:05:02,849 --> 01:05:16,170
an f0 in here and we'll we'll move it

1301
01:05:08,250 --> 01:05:19,018
back so sine square root is also not

1302
01:05:16,170 --> 01:05:23,599
used anymore so we get rid of that I'd

1303
01:05:19,018 --> 01:05:23,598
like looks fishy looks fishy is awesome

1304
01:05:23,659 --> 01:05:30,118
all right so I think we're good now so

1305
01:05:28,679 --> 01:05:31,528
now we just have to go through and start

1306
01:05:30,119 --> 01:05:36,450
debugging this which is going to take a

1307
01:05:31,528 --> 01:05:40,250
while right but it looks alright and if

1308
01:05:36,449 --> 01:05:40,250
I remove a bunch of this dead code here

1309
01:05:41,389 --> 01:05:45,858
we can sort of see it start to take

1310
01:05:43,619 --> 01:05:45,858
shape

1311
01:05:48,769 --> 01:05:52,820
I'm going to move in it lighting down so

1312
01:05:51,050 --> 01:05:56,810
that we basically have our flow here so

1313
01:05:52,820 --> 01:05:58,280
we call in it then begin then end so the

1314
01:05:56,809 --> 01:06:00,259
last three functions or the functions

1315
01:05:58,280 --> 01:06:02,330
people call in from the outside and

1316
01:06:00,260 --> 01:06:04,310
everything else is something different

1317
01:06:02,329 --> 01:06:08,079
right

1318
01:06:04,309 --> 01:06:10,338
our irradiance pack by normal and normal

1319
01:06:08,079 --> 01:06:11,960
these are not really used at the moment

1320
01:06:10,338 --> 01:06:14,779
and I think they're probably gonna have

1321
01:06:11,960 --> 01:06:15,980
to get written differently but we'll

1322
01:06:14,780 --> 01:06:17,089
leave them in for now because we don't

1323
01:06:15,980 --> 01:06:20,838
know if we might want to use something

1324
01:06:17,088 --> 01:06:22,159
similar so we might just keep them we

1325
01:06:20,838 --> 01:06:31,759
got the rest of our stuff here spatial

1326
01:06:22,159 --> 01:06:35,299
partition all that stuff looks good our

1327
01:06:31,760 --> 01:06:39,140
work you call back all of our different

1328
01:06:35,300 --> 01:06:43,250
types of updating now got our test cast

1329
01:06:39,139 --> 01:06:50,299
our test sphere and then we got our

1330
01:06:43,250 --> 01:06:53,900
lookup code looks pretty good I'm

1331
01:06:50,300 --> 01:06:56,359
totally fine with that I'm happy with

1332
01:06:53,900 --> 01:06:59,000
that all right so now we gotta actually

1333
01:06:56,358 --> 01:07:05,420
fix this stuff and get it working

1334
01:06:59,000 --> 01:07:07,429
properly I don't know why this is

1335
01:07:05,420 --> 01:07:13,430
declared external is there any reason to

1336
01:07:07,429 --> 01:07:15,069
do that no I also don't know why any of

1337
01:07:13,429 --> 01:07:18,259
this stuff is to clear it up here either

1338
01:07:15,070 --> 01:07:20,830
there's any of this stuff necessary to

1339
01:07:18,260 --> 01:07:24,010
be cleared up here I don't think so

1340
01:07:20,829 --> 01:07:24,009
just see

1341
01:07:25,969 --> 01:07:41,179
so I think we're good all right I am now

1342
01:07:38,210 --> 01:07:44,389
ready to say this is a light pipeline

1343
01:07:41,179 --> 01:07:46,129
that we can start to get behind and now

1344
01:07:44,389 --> 01:07:48,980
we just need to kind of like focus on it

1345
01:07:46,130 --> 01:07:51,829
and start to turn the crank right we

1346
01:07:48,980 --> 01:07:56,570
gotta like get serious here so first

1347
01:07:51,829 --> 01:07:58,549
thing let's just fix crash bugs right so

1348
01:07:56,570 --> 01:08:00,140
anywhere where we get an assertion or a

1349
01:07:58,550 --> 01:08:01,160
crash let's just clean that up first

1350
01:08:00,139 --> 01:08:03,739
just to make sure we're working on

1351
01:08:01,159 --> 01:08:04,759
something that's actually running you

1352
01:08:03,739 --> 01:08:09,889
can see here that looks like our work

1353
01:08:04,760 --> 01:08:11,930
size is not correct oh you know what so

1354
01:08:09,889 --> 01:08:14,358
I remove the thing where we actually

1355
01:08:11,929 --> 01:08:17,088
allocate those I probably shouldn't have

1356
01:08:14,358 --> 01:08:19,100
done that we probably should still do

1357
01:08:17,088 --> 01:08:22,399
that because we want the alignment I

1358
01:08:19,100 --> 01:08:25,730
failed to think about that so in the

1359
01:08:22,399 --> 01:08:27,349
init lighting let's continue to allocate

1360
01:08:25,729 --> 01:08:29,809
those work units even though there's no

1361
01:08:27,350 --> 01:08:32,680
real reason for it let's just do that

1362
01:08:29,810 --> 01:08:38,029
anyway so we'll just say look push array

1363
01:08:32,680 --> 01:08:42,680
arena light lookup of whatever these

1364
01:08:38,029 --> 01:08:47,390
things are lighting work and will align

1365
01:08:42,680 --> 01:08:51,739
I don't know what that true is what's

1366
01:08:47,390 --> 01:08:57,950
that Oh whether we want it cleared we

1367
01:08:51,738 --> 01:08:59,298
don't need it cleared so then we got

1368
01:08:57,949 --> 01:09:02,358
some other stuff here we've got an

1369
01:08:59,298 --> 01:09:02,960
accumulate PPS we don't need that

1370
01:09:02,359 --> 01:09:05,000
anymore

1371
01:09:02,960 --> 01:09:06,739
so let's just get rid of this crap we

1372
01:09:05,000 --> 01:09:09,469
got memory getting allocated here for

1373
01:09:06,738 --> 01:09:13,548
stuff that we don't even do so that

1374
01:09:09,469 --> 01:09:15,850
doesn't have to happen right stay the

1375
01:09:13,548 --> 01:09:15,850
least

1376
01:09:22,069 --> 01:09:34,650
and I guess I need to specify false

1377
01:09:27,448 --> 01:09:40,979
there okay back to checking for crashes

1378
01:09:34,649 --> 01:09:42,988
and other assorted fun misses so we're

1379
01:09:40,979 --> 01:09:44,838
having a really slow run here but I'm

1380
01:09:42,988 --> 01:09:51,198
not sure why so something's something's

1381
01:09:44,838 --> 01:09:51,198
confused see what's going on there so

1382
01:09:54,050 --> 01:10:02,420
we're running the tests fear code yeah

1383
01:09:57,510 --> 01:10:05,280
oh I know why sorry

1384
01:10:02,420 --> 01:10:07,828
we also now need to stop looping over

1385
01:10:05,279 --> 01:10:12,389
everything right so we need to only loop

1386
01:10:07,828 --> 01:10:14,158
over one of our of our rows so you can

1387
01:10:12,389 --> 01:10:16,949
see here in the work you call back we do

1388
01:10:14,158 --> 01:10:18,839
the entire voxel and then we do it 32

1389
01:10:16,948 --> 01:10:22,859
more times because we're calling this 32

1390
01:10:18,840 --> 01:10:24,630
times from the work queue right so this

1391
01:10:22,859 --> 01:10:27,420
needs to get fixed what I'm going to do

1392
01:10:24,630 --> 01:10:28,980
here is instead of actually slicing

1393
01:10:27,420 --> 01:10:31,050
along X because that's a pretty big

1394
01:10:28,979 --> 01:10:32,848
change I want to do that change as a

1395
01:10:31,050 --> 01:10:36,480
separate change so I'm going to do it

1396
01:10:32,849 --> 01:10:39,179
just fix the the Z to the voxel X since

1397
01:10:36,479 --> 01:10:41,729
they're symmetric and we'll just only do

1398
01:10:39,179 --> 01:10:44,250
that Z slice again that's not what I

1399
01:10:41,729 --> 01:10:46,979
want to do at the end of it all I

1400
01:10:44,250 --> 01:10:50,538
actually want to do it along X's but

1401
01:10:46,979 --> 01:10:50,538
again that's sort of a separate thing

1402
01:10:52,069 --> 01:10:55,069
okay

1403
01:10:57,118 --> 01:11:00,738
so again not seeing anything so we've

1404
01:10:59,038 --> 01:11:02,849
got some you know we got something

1405
01:11:00,738 --> 01:11:04,138
crappy going on here which is fine

1406
01:11:02,849 --> 01:11:07,349
because we're going to debug this like I

1407
01:11:04,139 --> 01:11:10,500
said but actually it's running okay so

1408
01:11:07,349 --> 01:11:14,000
we don't have any issues with that so at

1409
01:11:10,500 --> 01:11:17,038
the moment we you know looks reasonable

1410
01:11:14,000 --> 01:11:19,590
no crashes just to figure out why we're

1411
01:11:17,038 --> 01:11:22,500
not getting a light update there so we

1412
01:11:19,590 --> 01:11:26,699
should be going through everything in

1413
01:11:22,500 --> 01:11:28,050
order and doing our test spear so now we

1414
01:11:26,698 --> 01:11:31,368
have to figure out why would the test

1415
01:11:28,050 --> 01:11:35,760
fear isn't writing anything out there

1416
01:11:31,368 --> 01:11:38,179
you can sort of see us pulling out the

1417
01:11:35,760 --> 01:11:40,340
cell lights here and writing them back

1418
01:11:38,179 --> 01:11:44,460
so I'm pretty sure that's happening

1419
01:11:40,340 --> 01:11:45,840
correctly or at least should be so I'm

1420
01:11:44,460 --> 01:11:49,800
just gonna go to test fear and see

1421
01:11:45,840 --> 01:11:51,748
what's up with that because again we

1422
01:11:49,800 --> 01:11:55,498
modify this and also like the intensity

1423
01:11:51,748 --> 01:11:59,219
might stuff is wrong now and so on so

1424
01:11:55,498 --> 01:12:02,429
let's like figure that out in here we've

1425
01:11:59,219 --> 01:12:05,248
got sort of our light position I don't

1426
01:12:02,429 --> 01:12:14,578
know the in hot dim even used in here no

1427
01:12:05,248 --> 01:12:16,229
it's not yeah so if we start to look at

1428
01:12:14,578 --> 01:12:18,179
what's going on here I'm gonna also you

1429
01:12:16,229 --> 01:12:20,368
know it let's just do this where we're

1430
01:12:18,179 --> 01:12:22,109
gonna set whatever the direction is

1431
01:12:20,368 --> 01:12:24,509
we'll use that as the light just to see

1432
01:12:22,109 --> 01:12:27,960
if that shows up it's a good idea

1433
01:12:24,510 --> 01:12:32,248
actually there we go so here you can see

1434
01:12:27,960 --> 01:12:33,389
us running the code right and we're

1435
01:12:32,248 --> 01:12:34,078
running it the code still running

1436
01:12:33,389 --> 01:12:35,998
single-threaded

1437
01:12:34,078 --> 01:12:38,518
and we're using the test spheres like

1438
01:12:35,998 --> 01:12:40,889
directional clamp so it's just setting

1439
01:12:38,519 --> 01:12:42,809
in whichever direction we're going you

1440
01:12:40,889 --> 01:12:45,118
know that's that's what we get now

1441
01:12:42,809 --> 01:12:45,779
remember we're doing a diffuse sum over

1442
01:12:45,118 --> 01:12:48,359
this thing

1443
01:12:45,779 --> 01:12:49,859
so what we probably want to do here is

1444
01:12:48,359 --> 01:12:52,679
make sure that we set these two lower

1445
01:12:49,859 --> 01:12:54,779
values in general because the diffuse

1446
01:12:52,679 --> 01:12:58,559
sums gonna put a lot more power into the

1447
01:12:54,779 --> 01:13:03,288
system so what I might do is say look

1448
01:12:58,559 --> 01:13:07,320
let's actually set this to be sort of a

1449
01:13:03,288 --> 01:13:09,090
much less bright debug pattern because

1450
01:13:07,319 --> 01:13:11,689
as the diffuse gets blown out we're

1451
01:13:09,090 --> 01:13:14,010
gonna get those different colors right

1452
01:13:11,689 --> 01:13:16,049
so this is more like what we would

1453
01:13:14,010 --> 01:13:19,079
expect right and you can see then now in

1454
01:13:16,050 --> 01:13:22,800
the the directional the direction to the

1455
01:13:19,078 --> 01:13:24,868
light is getting placed in there now

1456
01:13:22,800 --> 01:13:26,849
one thing you'll notice that's not good

1457
01:13:24,868 --> 01:13:28,229
is we are running the test fear those

1458
01:13:26,849 --> 01:13:29,788
things don't ever look like they're

1459
01:13:28,229 --> 01:13:37,018
changing they should be changing and

1460
01:13:29,788 --> 01:13:39,029
they're not and so this oh well no

1461
01:13:37,019 --> 01:13:40,380
actually that nevermind that's not true

1462
01:13:39,029 --> 01:13:41,728
because it looks like that's just based

1463
01:13:40,380 --> 01:13:43,310
on where they are on the texture so

1464
01:13:41,729 --> 01:13:45,510
that's fine

1465
01:13:43,310 --> 01:13:47,060
all right so now I want to see if I can

1466
01:13:45,510 --> 01:13:50,150
call this multi-threaded properly

1467
01:13:47,060 --> 01:13:52,170
because I think we should be able to

1468
01:13:50,149 --> 01:13:53,159
because you know I'm just wanna make

1469
01:13:52,170 --> 01:13:55,619
sure we didn't screw anything up there

1470
01:13:53,159 --> 01:13:57,989
in terms of the distribution and who's

1471
01:13:55,619 --> 01:13:59,430
running to what so I should now be able

1472
01:13:57,989 --> 01:14:01,409
to in the letting computation code

1473
01:13:59,430 --> 01:14:03,060
switch to adding these into a work queue

1474
01:14:01,409 --> 01:14:11,880
and it shouldn't crash right if it does

1475
01:14:03,060 --> 01:14:13,590
we've got problems alright so here's

1476
01:14:11,880 --> 01:14:15,840
that running the code multi-threaded and

1477
01:14:13,590 --> 01:14:17,250
again it's all working nicely the only

1478
01:14:15,840 --> 01:14:20,090
difference is now it's like much faster

1479
01:14:17,250 --> 01:14:22,770
right so the codes running much better

1480
01:14:20,090 --> 01:14:26,130
but otherwise it looks effectively the

1481
01:14:22,770 --> 01:14:28,770
same we now don't need those light

1482
01:14:26,130 --> 01:14:30,390
probes by the way so I'm going to turn

1483
01:14:28,770 --> 01:14:44,700
those the rendering of those off and

1484
01:14:30,390 --> 01:14:46,230
eventually we'll remove them and that'll

1485
01:14:44,699 --> 01:14:46,710
also save us a ton of work in other

1486
01:14:46,229 --> 01:14:49,699
places

1487
01:14:46,710 --> 01:14:49,699
oops that was wrong

1488
01:14:55,399 --> 01:15:14,000
first the draw the light probe thing oh

1489
01:14:58,670 --> 01:15:16,340
it's the show probes okay so now we just

1490
01:15:14,000 --> 01:15:17,689
need to since we know we can write into

1491
01:15:16,340 --> 01:15:20,989
this thing properly and that our code is

1492
01:15:17,689 --> 01:15:24,399
not like totally busted we need to do

1493
01:15:20,989 --> 01:15:27,019
something where we can fix the system to

1494
01:15:24,399 --> 01:15:28,609
write the test sphere in and verify that

1495
01:15:27,020 --> 01:15:33,140
we actually get our test fear properly

1496
01:15:28,609 --> 01:15:46,880
right cuz this all looks like it's

1497
01:15:33,140 --> 01:15:48,619
working why do we have a hole that that

1498
01:15:46,880 --> 01:15:53,779
seems bad I'm not sure why we're not

1499
01:15:48,619 --> 01:15:56,599
filling in part of that texture we're

1500
01:15:53,779 --> 01:15:59,229
gonna have to debug that that looks like

1501
01:15:56,600 --> 01:15:59,230
a bug right

1502
01:16:07,899 --> 01:16:13,939
I'm not sure what's going on there our

1503
01:16:11,619 --> 01:16:17,510
frame time isn't horrible right now it's

1504
01:16:13,939 --> 01:16:19,129
not good but it's not horrible

1505
01:16:17,510 --> 01:16:20,869
but you can't see everything is in get

1506
01:16:19,130 --> 01:16:22,760
is in the compute light propagation work

1507
01:16:20,869 --> 01:16:26,750
function so that's good right that's the

1508
01:16:22,760 --> 01:16:29,180
part we're working on so that's a good

1509
01:16:26,750 --> 01:16:31,399
thing if we take a look at our thread

1510
01:16:29,180 --> 01:16:35,990
distribution you can see that we've got

1511
01:16:31,399 --> 01:16:36,589
like six of those fellows kind of doing

1512
01:16:35,989 --> 01:16:38,960
their thing

1513
01:16:36,590 --> 01:16:51,650
here's them doing each slice of the

1514
01:16:38,960 --> 01:16:54,770
voxel right okay so now let's think

1515
01:16:51,649 --> 01:16:56,349
about this a little bit more let's go to

1516
01:16:54,770 --> 01:17:04,670
the tests fear and try to get that

1517
01:16:56,350 --> 01:17:07,070
running this should work we have a

1518
01:17:04,670 --> 01:17:09,980
global light position and we have a

1519
01:17:07,069 --> 01:17:12,380
center P that's in world space right

1520
01:17:09,979 --> 01:17:16,609
so this should all work the only thing

1521
01:17:12,380 --> 01:17:19,550
that might not work is this part because

1522
01:17:16,609 --> 01:17:22,670
we change from UV W to just using the

1523
01:17:19,550 --> 01:17:27,260
center to just using the world space

1524
01:17:22,670 --> 01:17:30,100
rather so the light distance is the

1525
01:17:27,260 --> 01:17:33,500
fall-off here is probably way too large

1526
01:17:30,100 --> 01:17:35,600
we probably don't actually want that to

1527
01:17:33,500 --> 01:17:39,229
be the case in fact none of this stuff

1528
01:17:35,600 --> 01:17:41,690
looks like it should be the case anyway

1529
01:17:39,229 --> 01:17:43,839
this is just um whole thing looks pretty

1530
01:17:41,689 --> 01:17:45,949
stupid actually if I'm honest about it

1531
01:17:43,840 --> 01:17:49,279
so we probably want to do is say look

1532
01:17:45,949 --> 01:17:51,050
the light intensity starts here we're

1533
01:17:49,279 --> 01:17:55,639
gonna have a fall-off it looks like that

1534
01:17:51,050 --> 01:17:56,960
I don't know what the max bright this

1535
01:17:55,640 --> 01:17:59,450
light should be doesn't matter right now

1536
01:17:56,960 --> 01:18:03,670
so we're gonna clamp that and then we're

1537
01:17:59,449 --> 01:18:05,960
gonna use that to output our value and

1538
01:18:03,670 --> 01:18:08,260
what we probably want is this light

1539
01:18:05,960 --> 01:18:14,000
distance to have a light fall-off factor

1540
01:18:08,260 --> 01:18:16,489
so we we can basically tweak it to

1541
01:18:14,000 --> 01:18:19,100
whatever we want so I'm gonna call this

1542
01:18:16,489 --> 01:18:21,289
light fall-off

1543
01:18:19,100 --> 01:18:23,390
and I'm gonna put that as a multiplier

1544
01:18:21,289 --> 01:18:26,409
around the distance and so if we want to

1545
01:18:23,390 --> 01:18:28,640
we can say like look the fall-off factor

1546
01:18:26,409 --> 01:18:31,849
gets higher as you want the light to

1547
01:18:28,640 --> 01:18:35,210
fall off quicker so we'll call it light

1548
01:18:31,850 --> 01:18:43,610
fall-off rate and then I think we should

1549
01:18:35,210 --> 01:18:45,470
be okay yeah all right so as I suspected

1550
01:18:43,609 --> 01:18:48,859
like it looks like our light sphere code

1551
01:18:45,470 --> 01:18:50,390
is still fine we just the main problem

1552
01:18:48,859 --> 01:18:53,449
was that when we were working with it

1553
01:18:50,390 --> 01:18:55,250
before we were in UV space and we

1554
01:18:53,449 --> 01:18:57,229
changed it to not be in UV space anymore

1555
01:18:55,250 --> 01:19:02,239
so then we end up with sort of this yeah

1556
01:18:57,229 --> 01:19:06,529
you know exactly as you would expect the

1557
01:19:02,239 --> 01:19:08,420
situation is that the lighting was being

1558
01:19:06,529 --> 01:19:09,859
computed with two tighter radius because

1559
01:19:08,420 --> 01:19:11,840
in UV space so it wasn't lighting

1560
01:19:09,859 --> 01:19:14,089
anything so now we're getting our

1561
01:19:11,840 --> 01:19:17,539
lighting it looks right for the most

1562
01:19:14,090 --> 01:19:19,400
part I do think we have some work we

1563
01:19:17,539 --> 01:19:22,250
could do to clean up our edges a little

1564
01:19:19,399 --> 01:19:23,210
bit here you can see our edges are very

1565
01:19:22,250 --> 01:19:24,619
vox alized

1566
01:19:23,210 --> 01:19:26,859
and i think that's again because we're

1567
01:19:24,619 --> 01:19:31,519
not we don't put any negatives in there

1568
01:19:26,859 --> 01:19:34,069
so I think that's you know a little bit

1569
01:19:31,520 --> 01:19:36,680
of an issue so I don't know like you

1570
01:19:34,069 --> 01:19:39,920
know I just want to see sorry you have

1571
01:19:36,680 --> 01:19:41,630
to indulge me for a second here if we

1572
01:19:39,920 --> 01:19:45,829
just clip the lighting down a little

1573
01:19:41,630 --> 01:19:47,380
so if inside the fragment shader where

1574
01:19:45,829 --> 01:19:50,630
we're actually computing the lighting

1575
01:19:47,380 --> 01:19:52,609
where we do this interpolation I'm just

1576
01:19:50,630 --> 01:19:56,420
wondering if we clamp it down a bit if

1577
01:19:52,609 --> 01:20:00,019
that will again clean up those edges so

1578
01:19:56,420 --> 01:20:03,859
inside the light sampling you can see us

1579
01:20:00,020 --> 01:20:05,360
getting our texture sample we sample all

1580
01:20:03,859 --> 01:20:07,699
these we interpolate them and then we

1581
01:20:05,359 --> 01:20:11,479
output the results basically I just want

1582
01:20:07,699 --> 01:20:13,639
to clamp that down a little bit so

1583
01:20:11,479 --> 01:20:15,109
rather than falling off at zero we're

1584
01:20:13,640 --> 01:20:16,850
gonna fall off at like point one or

1585
01:20:15,109 --> 01:20:19,309
something I just want to see what that

1586
01:20:16,850 --> 01:20:24,740
does so after this loop where we produce

1587
01:20:19,310 --> 01:20:27,770
the s what I want to do here is say that

1588
01:20:24,739 --> 01:20:33,829
let's drop that s down so let's say like

1589
01:20:27,770 --> 01:20:40,190
s minus equals V for like one

1590
01:20:33,829 --> 01:20:43,699
a 100 101 0 or something right so drop

1591
01:20:40,189 --> 01:20:54,549
that light down and then clamp it right

1592
01:20:43,699 --> 01:20:54,550
so clamp s no if that works it might not

1593
01:20:57,909 --> 01:21:12,970
oops so I guess we want that light

1594
01:21:00,319 --> 01:21:12,969
fall-off rate to actually be 1 o or not

1595
01:21:19,930 --> 01:21:26,390
so you know it's still it's a little

1596
01:21:22,640 --> 01:21:29,020
lumpy so me you know I'm just gonna play

1597
01:21:26,390 --> 01:21:29,020
with this a little bit

1598
01:21:38,500 --> 01:21:42,010
I don't know if there's any amount you

1599
01:21:40,720 --> 01:21:43,600
can drop it down by that would remove

1600
01:21:42,010 --> 01:21:45,100
the lumpiness but you can see it looks

1601
01:21:43,600 --> 01:21:48,150
like way better already right it looks

1602
01:21:45,100 --> 01:21:48,150
like way less fox alized

1603
01:21:56,738 --> 01:22:05,759
I mean it just looks way better right so

1604
01:22:01,899 --> 01:22:08,949
never never ever interpolate to zero

1605
01:22:05,760 --> 01:22:10,119
right always bad you always want to

1606
01:22:08,949 --> 01:22:11,859
interpolate something slightly other

1607
01:22:10,119 --> 01:22:14,019
than zero because you're gonna get

1608
01:22:11,859 --> 01:22:16,000
looking nicer result there something I

1609
01:22:14,020 --> 01:22:23,350
never really thought of till handmade

1610
01:22:16,000 --> 01:22:25,060
hero you know so alright and again we're

1611
01:22:23,350 --> 01:22:26,410
still doing that specular sample so I'm

1612
01:22:25,060 --> 01:22:29,289
kind of moving around to see how how it

1613
01:22:26,409 --> 01:22:30,849
plays it out right so it's like right

1614
01:22:29,289 --> 01:22:33,159
here bounces up hits the light source

1615
01:22:30,850 --> 01:22:36,969
it's looking pretty accurate actually I

1616
01:22:33,159 --> 01:22:39,819
like that results we don't want to

1617
01:22:36,969 --> 01:22:41,230
switch that lighting up until we until

1618
01:22:39,819 --> 01:22:43,899
we really get to a point where we're

1619
01:22:41,229 --> 01:22:45,879
done because again without the specular

1620
01:22:43,899 --> 01:22:47,769
bounce it's hard to really see if the

1621
01:22:45,880 --> 01:22:52,569
diffuse is working so I think that's

1622
01:22:47,770 --> 01:22:55,680
like a little too I think I think we

1623
01:22:52,569 --> 01:23:00,880
need more like point two on that

1624
01:22:55,680 --> 01:23:03,369
reduction in order to really like clean

1625
01:23:00,880 --> 01:23:07,000
up those edges I don't know if three is

1626
01:23:03,369 --> 01:23:09,430
the best answer but but I think that

1627
01:23:07,000 --> 01:23:12,090
yeah that looks really nice I'll clean

1628
01:23:09,430 --> 01:23:12,090
that serious

1629
01:23:16,969 --> 01:23:22,069
all right um so I'm going to consider

1630
01:23:19,819 --> 01:23:23,899
that a pretty good success story there

1631
01:23:22,069 --> 01:23:26,960
because that's actually working really

1632
01:23:23,899 --> 01:23:29,929
nicely with the test sphere we can now

1633
01:23:26,960 --> 01:23:31,399
try our test cast as well just to see if

1634
01:23:29,930 --> 01:23:33,140
that works

1635
01:23:31,399 --> 01:23:34,159
might as well have both of these working

1636
01:23:33,140 --> 01:23:37,579
because we're probably gonna need both

1637
01:23:34,159 --> 01:23:39,649
of them as we do our debugging so let's

1638
01:23:37,579 --> 01:23:40,819
go ahead and get that working just gonna

1639
01:23:39,649 --> 01:23:42,289
make sure I'm passing the right things

1640
01:23:40,819 --> 01:23:45,369
here so it needs a cell in the center

1641
01:23:42,289 --> 01:23:45,369
just like everybody else

1642
01:23:45,760 --> 01:23:52,940
and and let's see what that does

1643
01:23:49,279 --> 01:23:55,719
if that does so oh we got an is test

1644
01:23:52,939 --> 01:23:58,988
case what is happening here

1645
01:23:55,720 --> 01:23:58,989
[Music]

1646
01:24:02,109 --> 01:24:09,979
so is test gateway but his test case

1647
01:24:06,439 --> 01:24:13,579
should always be false for his test cast

1648
01:24:09,979 --> 01:24:15,799
rather where is the where is that where

1649
01:24:13,579 --> 01:24:20,979
was not happening get light leaf for P

1650
01:24:15,800 --> 01:24:20,980
oh it was sending down true for that

1651
01:24:21,488 --> 01:24:30,109
interesting so one thing I don't know is

1652
01:24:28,090 --> 01:24:31,960
it's push debug line actually

1653
01:24:30,109 --> 01:24:35,719
thread-safe

1654
01:24:31,960 --> 01:24:37,909
so push debug line is not thread safe so

1655
01:24:35,719 --> 01:24:40,279
we really don't want anybody to pass

1656
01:24:37,909 --> 01:24:42,198
true always look we want to make sure

1657
01:24:40,279 --> 01:24:44,630
only one thread is calling that or we go

1658
01:24:42,198 --> 01:24:47,689
make it thread safe by just using a

1659
01:24:44,630 --> 01:24:51,550
locked increment of some kind but yeah

1660
01:24:47,689 --> 01:24:51,549
that was not supposed to happen that way

1661
01:24:52,060 --> 01:24:57,739
all right so here's our test shadow code

1662
01:24:55,569 --> 01:24:59,329
we're gonna need this light to be a

1663
01:24:57,738 --> 01:25:03,099
little bit brighter other than that I

1664
01:24:59,329 --> 01:25:03,100
think it looks like it's sort of working

1665
01:25:07,399 --> 01:25:14,198
this will be way too bright probably but

1666
01:25:11,539 --> 01:25:14,198
off we go

1667
01:25:39,289 --> 01:25:44,850
couldn't like a lot of popping there on

1668
01:25:42,359 --> 01:25:48,448
the Z like I think we have some weird

1669
01:25:44,850 --> 01:25:49,770
like we still have that Z that we're

1670
01:25:48,448 --> 01:25:51,329
using for interpolation is still not

1671
01:25:49,770 --> 01:26:00,840
stable in the way that I want to be for

1672
01:25:51,329 --> 01:26:03,329
the Alpha so I don't see any obvious

1673
01:26:00,840 --> 01:26:05,850
bugs in the test caster the test caster

1674
01:26:03,329 --> 01:26:08,309
seems to be producing fairly reliable

1675
01:26:05,850 --> 01:26:09,870
results you can see that our voxel is

1676
01:26:08,310 --> 01:26:12,989
not aligned properly like when we hop

1677
01:26:09,869 --> 01:26:15,420
over here we're having some issues with

1678
01:26:12,988 --> 01:26:17,908
that voxel like the light voxel is now

1679
01:26:15,420 --> 01:26:19,969
in a place where it it cuts off right

1680
01:26:17,908 --> 01:26:22,049
here so we're gonna have to arrange

1681
01:26:19,969 --> 01:26:24,810
place the light box a little more

1682
01:26:22,050 --> 01:26:28,140
carefully we knew that was the case

1683
01:26:24,810 --> 01:26:30,179
already but you know now it's you know

1684
01:26:28,140 --> 01:26:31,860
pretty obvious because the lighting

1685
01:26:30,179 --> 01:26:33,390
works just fine but then the voxel ends

1686
01:26:31,859 --> 01:26:38,639
and you don't get any lighting and

1687
01:26:33,390 --> 01:26:45,630
that's not good right but otherwise

1688
01:26:38,640 --> 01:26:47,640
pretty good looks pretty stable so I

1689
01:26:45,630 --> 01:26:51,719
think all of that looks pretty

1690
01:26:47,640 --> 01:26:55,530
reasonable to me that's probably a good

1691
01:26:51,719 --> 01:26:57,989
place to stop for today honestly because

1692
01:26:55,529 --> 01:27:02,039
the next step would be to start working

1693
01:26:57,988 --> 01:27:05,839
on the actual caster performance-wise

1694
01:27:02,039 --> 01:27:09,510
it's not great at the moment right and

1695
01:27:05,840 --> 01:27:13,440
we don't really know why I mean we kind

1696
01:27:09,510 --> 01:27:15,810
of us can assume there's a number of

1697
01:27:13,439 --> 01:27:17,639
things that are reasons that probably

1698
01:27:15,810 --> 01:27:19,650
would be slow especially like you know

1699
01:27:17,640 --> 01:27:22,739
all of this code where we're doing tons

1700
01:27:19,649 --> 01:27:24,539
of loops and stuff like this so it's not

1701
01:27:22,738 --> 01:27:27,750
like it's a mystery as to why it would

1702
01:27:24,539 --> 01:27:29,880
be slow but we haven't actually profiled

1703
01:27:27,750 --> 01:27:31,948
anything so although we kind of more or

1704
01:27:29,880 --> 01:27:37,079
less could guess why it was slow we

1705
01:27:31,948 --> 01:27:39,779
probably don't want to just assume so

1706
01:27:37,079 --> 01:27:42,350
that's you know the next step for us

1707
01:27:39,779 --> 01:27:46,759
obviously would be to start to look at

1708
01:27:42,350 --> 01:27:46,760
what we can do to speed this stuff up

1709
01:27:46,988 --> 01:27:53,569
Jimmy so yeah but otherwise pretty happy

1710
01:27:52,550 --> 01:27:55,998
with that I'm gonna go ahead and go to

1711
01:27:53,569 --> 01:27:57,319
QA cuz I don't want to start anything

1712
01:27:55,998 --> 01:28:00,948
next weekend would be when we would

1713
01:27:57,319 --> 01:28:08,208
start on this stuff I think how come I

1714
01:28:00,948 --> 01:28:11,328
can't type what's going on here how come

1715
01:28:08,208 --> 01:28:13,418
I can't type into this window there we

1716
01:28:11,328 --> 01:28:13,418
go

1717
01:28:38,198 --> 01:28:44,069
I do unassigned the clamp of s back to s

1718
01:28:41,170 --> 01:28:44,069
oh sorry about that

1719
01:28:47,010 --> 01:28:53,230
shouldn't we have seen some artifacts

1720
01:28:49,420 --> 01:28:57,300
for that kind of weird that we didn't

1721
01:28:53,229 --> 01:28:57,299
shouldn't we have seen some artifacts

1722
01:28:57,539 --> 01:29:03,909
due to that I feel like we should have

1723
01:29:01,810 --> 01:29:07,410
seen some but I guess I guess not

1724
01:29:03,909 --> 01:29:07,409
that's kind of surprising right

1725
01:29:32,789 --> 01:29:46,149
shouldn't wall side be in light state

1726
01:29:38,010 --> 01:29:52,630
what is light state well I have no idea

1727
01:29:46,149 --> 01:29:55,149
what that question means by the way if

1728
01:29:52,630 --> 01:29:55,539
we like the voxel eyes light can we keep

1729
01:29:55,149 --> 01:29:59,799
it

1730
01:29:55,539 --> 01:30:02,618
you mean if you if you like not

1731
01:29:59,800 --> 01:30:13,690
interpolating it so meaning if you would

1732
01:30:02,618 --> 01:30:17,289
rather do like you mean to say if you if

1733
01:30:13,689 --> 01:30:19,269
you just don't want that smooth edge so

1734
01:30:17,289 --> 01:30:25,630
you want it to to show the grid like

1735
01:30:19,270 --> 01:30:26,889
this more directly like that is that

1736
01:30:25,630 --> 01:30:30,880
what you mean I mean you can do whatever

1737
01:30:26,889 --> 01:30:34,079
you want man like you know when you

1738
01:30:30,880 --> 01:30:36,069
write your own you'd use whatever

1739
01:30:34,079 --> 01:30:44,050
algorithm looks best to you

1740
01:30:36,069 --> 01:30:45,729
it's your call can you show the

1741
01:30:44,050 --> 01:30:48,429
disassembly of transpose in an optimized

1742
01:30:45,729 --> 01:30:51,399
well sure I mean the transpose is is

1743
01:30:48,429 --> 01:31:03,190
just six shuffles right that's all we

1744
01:30:51,399 --> 01:31:05,138
did so it's not interesting it may

1745
01:31:03,189 --> 01:31:07,178
require some like we didn't necessarily

1746
01:31:05,139 --> 01:31:08,590
do it perfectly like we didn't think

1747
01:31:07,179 --> 01:31:11,109
about how it would have to happen in

1748
01:31:08,590 --> 01:31:16,480
registers so if it doesn't insert a

1749
01:31:11,109 --> 01:31:19,089
Visha it may have a like a problem with

1750
01:31:16,479 --> 01:31:21,698
having to copy but that's not an actual

1751
01:31:19,090 --> 01:31:28,420
operation so it's fine but yeah sure I

1752
01:31:21,698 --> 01:31:31,019
can show that it probably never gets

1753
01:31:28,420 --> 01:31:33,130
called it's just in lined right so

1754
01:31:31,020 --> 01:31:35,310
remedy probably can't break point on

1755
01:31:33,130 --> 01:31:35,310
that

1756
01:31:46,300 --> 01:31:56,920
where is it where is it there it is why

1757
01:31:55,430 --> 01:32:01,690
can't I

1758
01:31:56,920 --> 01:32:03,949
how can I not set a breakpoint oh I

1759
01:32:01,689 --> 01:32:13,729
didn't realize I was scrolled over yeah

1760
01:32:03,949 --> 01:32:19,279
so I was trying to so you can kind of

1761
01:32:13,729 --> 01:32:21,379
see some weird stuff happening here and

1762
01:32:19,279 --> 01:32:24,649
I'm not really sure why I generated the

1763
01:32:21,380 --> 01:32:26,949
code exactly the way that it did

1764
01:32:24,649 --> 01:32:30,109
but it's interleaved these instructions

1765
01:32:26,949 --> 01:32:32,059
but if you want to look at where what

1766
01:32:30,109 --> 01:32:35,750
happens with the light seed transpose

1767
01:32:32,060 --> 01:32:41,930
you can see here we've got the chef's

1768
01:32:35,750 --> 01:32:45,109
there they are so it does a chef PS here

1769
01:32:41,930 --> 01:32:47,480
and here it clones one of the variables

1770
01:32:45,109 --> 01:32:50,589
again this is not this instruction is

1771
01:32:47,479 --> 01:32:56,119
free it's just a register rename and

1772
01:32:50,590 --> 01:32:59,360
we're not these each take one cycle and

1773
01:32:56,119 --> 01:33:01,550
they can they can't be executed in

1774
01:32:59,359 --> 01:33:02,389
parallel so this is free it just like

1775
01:33:01,550 --> 01:33:04,610
this doesn't count

1776
01:33:02,390 --> 01:33:08,300
it just gets executed a simultaneous

1777
01:33:04,609 --> 01:33:13,519
with like this in the front end so it's

1778
01:33:08,300 --> 01:33:17,079
one cycle one cycle one cycle I don't

1779
01:33:13,520 --> 01:33:17,080
know what the heck this is doing

1780
01:33:23,630 --> 01:33:27,539
I'll be completely honestly I have

1781
01:33:25,979 --> 01:33:34,319
absolutely no idea why that's there it

1782
01:33:27,539 --> 01:33:36,420
doesn't really make any sense well you

1783
01:33:34,319 --> 01:33:39,988
know what it probably just wants to get

1784
01:33:36,420 --> 01:33:41,789
the rights started is my guess so it's

1785
01:33:39,988 --> 01:33:50,669
probably just trying to get these stores

1786
01:33:41,789 --> 01:33:51,930
started it probably just thinks it's

1787
01:33:50,670 --> 01:33:54,000
better to put them up in there I guess

1788
01:33:51,930 --> 01:33:55,820
so it's mixed it's taking this code and

1789
01:33:54,000 --> 01:33:59,550
shoved it up in there that's fine

1790
01:33:55,819 --> 01:34:01,590
anyway here's the next chef free

1791
01:33:59,550 --> 01:34:03,989
register rename and the two more chefs

1792
01:34:01,590 --> 01:34:07,350
and that's it these are just these

1793
01:34:03,988 --> 01:34:10,319
rights from down here I don't know what

1794
01:34:07,350 --> 01:34:14,810
that is cuz that's an aligned right and

1795
01:34:10,319 --> 01:34:20,519
I told it not to do that so I'm not sure

1796
01:34:14,810 --> 01:34:23,640
what that actually is that may be a

1797
01:34:20,520 --> 01:34:26,280
different thing it's trying to store for

1798
01:34:23,640 --> 01:34:31,340
some other reason there should only be

1799
01:34:26,279 --> 01:34:31,340
four of these and you can kind of see

1800
01:34:31,819 --> 01:34:50,460
one two three four so these that and

1801
01:34:43,969 --> 01:34:53,310
that I don't know what it's doing that's

1802
01:34:50,460 --> 01:34:55,609
not part of our chef that's some other

1803
01:34:53,310 --> 01:34:55,610
thing

1804
01:34:59,050 --> 01:35:01,940
like I literally have no idea what that

1805
01:35:01,520 --> 01:35:06,170
is

1806
01:35:01,939 --> 01:35:09,549
I'm going to guess because it's on our

1807
01:35:06,170 --> 01:35:14,869
SP that what it's doing here is it's

1808
01:35:09,550 --> 01:35:19,550
going to use for so it had to spill the

1809
01:35:14,869 --> 01:35:22,939
stack there but why it had to do that I

1810
01:35:19,550 --> 01:35:25,130
don't know like why it would do that

1811
01:35:22,939 --> 01:35:25,969
every time through this loop that seems

1812
01:35:25,130 --> 01:35:30,010
really dumb

1813
01:35:25,970 --> 01:35:30,010
like it should have done that out here

1814
01:35:35,350 --> 01:35:39,260
that's so all I can say is that look

1815
01:35:38,210 --> 01:35:41,750
stupid to me

1816
01:35:39,260 --> 01:35:45,079
these these look stupid to me these two

1817
01:35:41,750 --> 01:35:47,000
right here but they may not I'm a man

1818
01:35:45,079 --> 01:35:49,909
analyze this code for more in 16 seconds

1819
01:35:47,000 --> 01:35:51,260
so you know take away the grand stuff

1820
01:35:49,909 --> 01:35:53,979
that looks dumb those look like they

1821
01:35:51,260 --> 01:35:58,520
should be getting done somewhere else

1822
01:35:53,979 --> 01:36:03,919
actually because all that looks like

1823
01:35:58,520 --> 01:36:09,080
it's doing is just saving its all that's

1824
01:36:03,920 --> 01:36:12,079
doing is just saving the the the Const

1825
01:36:09,079 --> 01:36:13,159
of those registers and that doesn't seem

1826
01:36:12,079 --> 01:36:15,380
like something you would be wanting to

1827
01:36:13,159 --> 01:36:19,279
do inside the loop you'd do that outside

1828
01:36:15,380 --> 01:36:22,100
the loop right so unless it's actually

1829
01:36:19,279 --> 01:36:23,149
using yet no I mean and you should looks

1830
01:36:22,100 --> 01:36:24,770
like you have enough registers for what

1831
01:36:23,149 --> 01:36:28,359
you know it is what that looks like it's

1832
01:36:24,770 --> 01:36:28,360
ill placed to me but maybe I'm wrong

1833
01:36:39,149 --> 01:36:44,219
can we zoom out on the octahedral debug

1834
01:36:42,090 --> 01:36:48,628
drawing yeah but it's just more of the

1835
01:36:44,219 --> 01:36:50,429
same thing why does the clamped light

1836
01:36:48,628 --> 01:36:52,050
have a kind of heart shape from those

1837
01:36:50,429 --> 01:36:54,208
angle it from some angles with the

1838
01:36:52,050 --> 01:36:56,038
sphere lighting two lobes jutting out

1839
01:36:54,208 --> 01:36:59,998
behind the hero to his left and right

1840
01:36:56,038 --> 01:37:01,590
when viewing from a low angle so I'm not

1841
01:36:59,998 --> 01:37:04,648
really prepared to say exactly what's

1842
01:37:01,590 --> 01:37:05,519
causing that because we want to

1843
01:37:04,649 --> 01:37:06,628
investigate the lighting a little bit

1844
01:37:05,519 --> 01:37:09,748
further but I believe that's just

1845
01:37:06,628 --> 01:37:14,179
because the octahedral map is on a

1846
01:37:09,748 --> 01:37:17,208
diamond pattern and so when you get

1847
01:37:14,179 --> 01:37:19,679
you're going to get the interpolation on

1848
01:37:17,208 --> 01:37:23,179
diagonals like that so it's going to

1849
01:37:19,679 --> 01:37:26,929
naturally form heart shapes rather than

1850
01:37:23,179 --> 01:37:26,929
well any other shape

1851
01:37:33,779 --> 01:37:37,118
maybe you fix it up already but I think

1852
01:37:35,828 --> 01:37:38,679
you might have a copy-paste air in the

1853
01:37:37,118 --> 01:37:40,868
border fill if you look at the sphere

1854
01:37:38,679 --> 01:37:42,248
test the octal map show weird black line

1855
01:37:40,868 --> 01:37:52,839
on each yeah that I mentioned that we

1856
01:37:42,248 --> 01:37:58,569
were there I'm not sure what that is how

1857
01:37:52,840 --> 01:38:03,578
come this isn't run running run how do I

1858
01:37:58,569 --> 01:38:15,518
make this run run why is the program

1859
01:38:03,578 --> 01:38:18,189
suspended what's going on there we go if

1860
01:38:15,519 --> 01:38:20,050
we try to force ourselves into an area

1861
01:38:18,189 --> 01:38:22,960
where we should see some border copies

1862
01:38:20,050 --> 01:38:25,409
which I don't know where exactly that

1863
01:38:22,960 --> 01:38:25,408
would be

1864
01:38:47,340 --> 01:38:51,639
so I'm not sure what I would say is

1865
01:38:50,019 --> 01:38:56,590
maybe we should just turn on one of the

1866
01:38:51,639 --> 01:39:00,069
tests the test copies like the edge

1867
01:38:56,590 --> 01:39:04,479
coloring right so you know we could

1868
01:39:00,069 --> 01:39:05,889
force it to do an edge color test looks

1869
01:39:04,479 --> 01:39:08,820
like we don't have our edge coloring oh

1870
01:39:05,889 --> 01:39:08,819
yeah we do

1871
01:39:14,439 --> 01:39:25,299
I guess we don't have a way to quickly

1872
01:39:23,738 --> 01:39:27,189
test that I don't really want to look at

1873
01:39:25,300 --> 01:39:33,699
that yet right like I want to look at

1874
01:39:27,189 --> 01:39:34,598
these more carefully what on on when

1875
01:39:33,698 --> 01:39:38,728
we're actually going through and doing

1876
01:39:34,599 --> 01:39:38,729
the debugging but I'll make a note like

1877
01:40:29,890 --> 01:40:41,380
how will you like the top of the walls

1878
01:40:32,569 --> 01:40:41,380
but make them lock light in the middle

1879
01:40:42,399 --> 01:40:50,899
so do you mean like like that like this

1880
01:40:47,960 --> 01:40:53,289
part of the thing or I'm not sure what

1881
01:40:50,899 --> 01:40:53,289
you mean by that

1882
01:41:02,779 --> 01:41:08,328
and yet does seem like the walls sides

1883
01:41:05,609 --> 01:41:16,828
are the wrong color for some reason

1884
01:41:08,328 --> 01:41:20,399
which I'm not sure why that seems odd to

1885
01:41:16,828 --> 01:41:23,578
me but I'm not sure where that's coming

1886
01:41:20,399 --> 01:41:25,649
from like I said we've got a bunch of

1887
01:41:23,578 --> 01:41:28,529
stuff we have to do like test wise I

1888
01:41:25,649 --> 01:41:39,689
don't really want to look at it at this

1889
01:41:28,529 --> 01:41:41,819
point I think it's probably my guess is

1890
01:41:39,689 --> 01:41:43,919
that it's has it's not actually a bug at

1891
01:41:41,819 --> 01:41:47,639
all I think the reason we're seeing that

1892
01:41:43,920 --> 01:41:49,889
mostly is probably just because of the

1893
01:41:47,639 --> 01:41:52,859
way the test cast works so the test

1894
01:41:49,889 --> 01:41:56,639
sphere which puts light in the whole

1895
01:41:52,859 --> 01:42:00,750
hemisphere that one works properly for

1896
01:41:56,639 --> 01:42:03,319
those directions right well properly in

1897
01:42:00,750 --> 01:42:06,000
so much as you can call the test proper

1898
01:42:03,319 --> 01:42:09,840
so that when you could have seen them I

1899
01:42:06,000 --> 01:42:11,130
think it's working like okay right so if

1900
01:42:09,840 --> 01:42:14,849
you imagine like where the light

1901
01:42:11,130 --> 01:42:18,569
actually is you know it's probably at

1902
01:42:14,849 --> 01:42:22,380
least within a stone's throw of correct

1903
01:42:18,569 --> 01:42:26,698
although not probably correct the other

1904
01:42:22,380 --> 01:42:28,618
the test cast does not it just knows if

1905
01:42:26,698 --> 01:42:32,129
it hits the light or not so it doesn't

1906
01:42:28,618 --> 01:42:34,920
actually properly tell you any other

1907
01:42:32,130 --> 01:42:37,920
direction of incoming light so when you

1908
01:42:34,920 --> 01:42:42,270
switch to the test cast it's like can

1909
01:42:37,920 --> 01:42:44,908
this wall ever hit the light or not and

1910
01:42:42,270 --> 01:42:47,849
the answer is probably like no all the

1911
01:42:44,908 --> 01:42:50,578
time right you can even see like it's

1912
01:42:47,849 --> 01:42:52,230
not updating any of that part of the

1913
01:42:50,578 --> 01:42:55,609
texture because it never takes any

1914
01:42:52,229 --> 01:42:55,609
samples in that direction right

1915
01:43:00,670 --> 01:43:06,769
so the problem here is it's just it

1916
01:43:03,859 --> 01:43:09,018
never note right it's always casting

1917
01:43:06,769 --> 01:43:12,469
towards the light it never can find the

1918
01:43:09,019 --> 01:43:15,710
light in that direction because there

1919
01:43:12,469 --> 01:43:18,920
are no like actual pieces taken for that

1920
01:43:15,710 --> 01:43:23,179
direction right so I think that's mostly

1921
01:43:18,920 --> 01:43:26,690
what we're getting but again not sure

1922
01:43:23,179 --> 01:43:28,868
yet so we'll see when we look at it more

1923
01:43:26,689 --> 01:43:28,868
carefully

1924
01:43:44,880 --> 01:43:50,170
um for lighting the wooden top I'm not

1925
01:43:47,649 --> 01:43:52,479
sure what we'll do about that but

1926
01:43:50,170 --> 01:43:56,220
remember the lights may be like up

1927
01:43:52,479 --> 01:43:59,589
higher we don't know what we're gonna do

1928
01:43:56,220 --> 01:44:01,570
we may like make the walls taller there

1929
01:43:59,590 --> 01:44:04,770
there our clue ders may be taller than

1930
01:44:01,569 --> 01:44:04,769
they are for example

1931
01:44:20,930 --> 01:44:28,740
um in terms of what the next step is we

1932
01:44:24,689 --> 01:44:30,149
just need to actually track our light

1933
01:44:28,739 --> 01:44:32,010
values all the way through test

1934
01:44:30,149 --> 01:44:34,049
everything make sure that with test

1935
01:44:32,010 --> 01:44:36,390
cases now in the fused version

1936
01:44:34,050 --> 01:44:38,880
everything flows properly and the copies

1937
01:44:36,390 --> 01:44:41,070
are proper and like like quantities or

1938
01:44:38,880 --> 01:44:43,710
proper and that sort of stuff and then

1939
01:44:41,069 --> 01:44:46,649
we switch to the actual ray caster which

1940
01:44:43,710 --> 01:44:48,930
we have and make sure that that works

1941
01:44:46,649 --> 01:44:52,279
properly and then then we've got just

1942
01:44:48,930 --> 01:44:52,280
optimization ahead of us after that

1943
01:45:12,140 --> 01:45:20,070
am i planning and putting in tone

1944
01:45:14,159 --> 01:45:22,439
mapping I don't know probably nothing

1945
01:45:20,069 --> 01:45:25,769
fancy but we might put in some halation

1946
01:45:22,439 --> 01:45:28,339
I don't know that we put in any tone

1947
01:45:25,770 --> 01:45:28,340
mapping though

1948
01:45:52,449 --> 01:45:55,429
does it take a significant amount of

1949
01:45:54,289 --> 01:45:56,569
time to switch headspace between

1950
01:45:55,430 --> 01:45:58,550
different programming projects for you

1951
01:45:56,569 --> 01:46:00,920
and do you have any techniques that you

1952
01:45:58,550 --> 01:46:03,199
used to reforming yourselves no it

1953
01:46:00,920 --> 01:46:05,869
doesn't really take me any time to

1954
01:46:03,199 --> 01:46:07,849
switch the head spaces but what I would

1955
01:46:05,869 --> 01:46:09,319
say is I don't really like the fact that

1956
01:46:07,850 --> 01:46:14,180
I have to work on handmade Hiro because

1957
01:46:09,319 --> 01:46:15,829
it occupies background thought time that

1958
01:46:14,180 --> 01:46:24,230
should probably be spent another project

1959
01:46:15,829 --> 01:46:25,909
so that's been annoying so basically

1960
01:46:24,229 --> 01:46:27,529
means you're spending less mental energy

1961
01:46:25,909 --> 01:46:28,729
on your other projects because they're

1962
01:46:27,529 --> 01:46:31,929
getting less background time because

1963
01:46:28,729 --> 01:46:31,929
Hammond Hiro is taking some of it

1964
01:46:57,010 --> 01:47:06,610
all right Matt looks like it thanks

1965
01:47:05,529 --> 01:47:07,599
everyone for joining me for the episode

1966
01:47:06,609 --> 01:47:09,339
of handmade here it's when it pleasure

1967
01:47:07,600 --> 01:47:10,270
coating with you as always I think the

1968
01:47:09,340 --> 01:47:13,060
legging is in a pretty good state right

1969
01:47:10,270 --> 01:47:15,430
now actually the system's looking pretty

1970
01:47:13,060 --> 01:47:17,440
good so I think next weekend we can

1971
01:47:15,430 --> 01:47:19,780
start to dive in and just test all the

1972
01:47:17,439 --> 01:47:21,729
paths put some debug values in

1973
01:47:19,779 --> 01:47:23,469
everywhere and make sure we get out what

1974
01:47:21,729 --> 01:47:27,459
we expect basically just run through a

1975
01:47:23,470 --> 01:47:29,560
full due diligence lock it down and then

1976
01:47:27,460 --> 01:47:34,029
say okay now it's time to get the

1977
01:47:29,560 --> 01:47:36,700
raycast err outputting good data and I

1978
01:47:34,029 --> 01:47:38,199
think we're we're thumbs up right we do

1979
01:47:36,699 --> 01:47:41,109
have some optimization challenges but

1980
01:47:38,199 --> 01:47:43,659
even just looking at it now running

1981
01:47:41,109 --> 01:47:45,639
relatively fast using the multi-threaded

1982
01:47:43,659 --> 01:47:47,109
version I do think that's nice because

1983
01:47:45,640 --> 01:47:49,030
if everything's segregated by threads

1984
01:47:47,109 --> 01:47:52,210
like that it means at the very least it

1985
01:47:49,029 --> 01:47:54,369
will get faster with new chips right if

1986
01:47:52,210 --> 01:47:56,140
it's a single-threaded slowness that's a

1987
01:47:54,369 --> 01:47:58,119
problem because that doesn't get faster

1988
01:47:56,140 --> 01:47:59,380
but a multi-threaded slowness does get

1989
01:47:58,119 --> 01:48:02,079
faster with new chips so that's a good

1990
01:47:59,380 --> 01:48:04,569
good place to be so I think we're in

1991
01:48:02,079 --> 01:48:07,239
good shape so I'll be back here next

1992
01:48:04,569 --> 01:48:08,409
weekend to start that in the meantime if

1993
01:48:07,239 --> 01:48:09,369
you do want to follow along at home this

1994
01:48:08,409 --> 01:48:11,079
series you can always pre-order the game

1995
01:48:09,369 --> 01:48:12,510
on hami here or get comes the source

1996
01:48:11,079 --> 01:48:14,920
code so you can play around with it

1997
01:48:12,510 --> 01:48:18,610
yourself try out your own lighting

1998
01:48:14,920 --> 01:48:20,949
solutions if you have got some ideas so

1999
01:48:18,609 --> 01:48:22,509
I guess that's about it for this week

2000
01:48:20,949 --> 01:48:24,550
I'll see you back here next week until

2001
01:48:22,510 --> 01:48:27,360
then have fun everyone I'll see you on

2002
01:48:24,550 --> 01:48:27,360
the Internet take it easy

