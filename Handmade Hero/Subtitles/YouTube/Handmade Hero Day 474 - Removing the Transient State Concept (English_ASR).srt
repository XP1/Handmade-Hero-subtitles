1
00:00:00,500 --> 00:00:04,290
hello everyone welcome to handmade Hero

2
00:00:02,790 --> 00:00:06,990
show recode a complete game live on

3
00:00:04,290 --> 00:00:10,199
stream we're doing some API stuff today

4
00:00:06,990 --> 00:00:12,059
which i think is good and important I

5
00:00:10,199 --> 00:00:15,359
know it's probably not the most exciting

6
00:00:12,058 --> 00:00:19,079
thing you know everyone would rather

7
00:00:15,359 --> 00:00:21,089
code explosions or something but API

8
00:00:19,079 --> 00:00:23,729
design is probably one of the least well

9
00:00:21,089 --> 00:00:25,410
done things in the entire industry most

10
00:00:23,730 --> 00:00:28,560
api's that people ship are just

11
00:00:25,410 --> 00:00:30,480
absolutely terrible and so spending time

12
00:00:28,559 --> 00:00:33,780
learning about how you would brush

13
00:00:30,480 --> 00:00:37,079
something up and rework parts of it in

14
00:00:33,780 --> 00:00:39,689
order to create a good design for an API

15
00:00:37,079 --> 00:00:42,210
is valuable not just because if you're

16
00:00:39,689 --> 00:00:44,519
ever in the position to release a tool

17
00:00:42,210 --> 00:00:46,530
to the public it's very nice to have

18
00:00:44,520 --> 00:00:48,059
some experience designing API so that

19
00:00:46,530 --> 00:00:51,149
you release something that's usable and

20
00:00:48,058 --> 00:00:54,738
good that's certainly the case but also

21
00:00:51,149 --> 00:00:57,270
just even for your own purposes like

22
00:00:54,738 --> 00:00:58,890
like I kind of said pulling out this

23
00:00:57,270 --> 00:01:01,440
render is good because someone else

24
00:00:58,890 --> 00:01:03,090
might get a chance to use it but the

25
00:01:01,439 --> 00:01:04,978
other part that's really important is

26
00:01:03,090 --> 00:01:07,710
that it just makes it easier for us to

27
00:01:04,978 --> 00:01:09,929
use so when you spend a few hours going

28
00:01:07,709 --> 00:01:13,379
through and cleaning up a piece of the

29
00:01:09,930 --> 00:01:15,240
code surface boundary right like between

30
00:01:13,379 --> 00:01:17,579
the renderer and the game or something

31
00:01:15,239 --> 00:01:21,449
by cleaning that up it gives you a

32
00:01:17,579 --> 00:01:22,890
chance to do that polish work that can

33
00:01:21,450 --> 00:01:24,868
then pay dividends because now

34
00:01:22,890 --> 00:01:28,978
everything is more well thought through

35
00:01:24,868 --> 00:01:30,840
is more well specified right so you've

36
00:01:28,978 --> 00:01:32,789
decided things like do you specify

37
00:01:30,840 --> 00:01:34,500
things from the center outward or do you

38
00:01:32,790 --> 00:01:37,079
specify them from the bottom up and like

39
00:01:34,500 --> 00:01:40,859
by bringing that extra layer of

40
00:01:37,078 --> 00:01:44,219
consistency into the API it just reduces

41
00:01:40,859 --> 00:01:45,959
frustration it reduces simple mistakes

42
00:01:44,219 --> 00:01:47,219
that people might make because now are

43
00:01:45,959 --> 00:01:51,569
things consistent they don't have to

44
00:01:47,219 --> 00:01:54,118
learn lots of different things so it

45
00:01:51,569 --> 00:01:58,048
really does help if it pays dividends in

46
00:01:54,118 --> 00:02:00,868
more than just code reuse when you spend

47
00:01:58,049 --> 00:02:03,990
time improving an API it also helps you

48
00:02:00,868 --> 00:02:06,599
understand how the code works better

49
00:02:03,989 --> 00:02:09,359
what was involved in it you learn it

50
00:02:06,599 --> 00:02:12,030
better and then you also can use it more

51
00:02:09,360 --> 00:02:13,780
easily because you've done the extra

52
00:02:12,030 --> 00:02:15,849
work necessary to make sure

53
00:02:13,780 --> 00:02:18,219
that you're not doing anything stupid

54
00:02:15,849 --> 00:02:20,889
that it is easiest to use as it can be

55
00:02:18,219 --> 00:02:22,810
that the it's efficient all of those

56
00:02:20,889 --> 00:02:25,509
things that you've done will pay you

57
00:02:22,810 --> 00:02:26,979
dividends going forwards so that I feel

58
00:02:25,509 --> 00:02:29,769
like is really important to underscore

59
00:02:26,979 --> 00:02:33,519
here as we go into this it is important

60
00:02:29,770 --> 00:02:35,230
to learn and important to get right for

61
00:02:33,520 --> 00:02:37,090
two different reasons

62
00:02:35,229 --> 00:02:40,479
and I think that is something worth

63
00:02:37,090 --> 00:02:43,060
noting now what I'd like to do is pop

64
00:02:40,479 --> 00:02:44,889
back to our win32 render test for those

65
00:02:43,060 --> 00:02:46,659
of you just joining us let me just show

66
00:02:44,889 --> 00:02:48,819
you what this is this is an outside

67
00:02:46,659 --> 00:02:51,129
handmade hero that just compiles in the

68
00:02:48,819 --> 00:02:53,859
handmade hero renderer it's very small

69
00:02:51,129 --> 00:02:55,740
so let me go ahead and show you the code

70
00:02:53,860 --> 00:02:58,440
here right

71
00:02:55,740 --> 00:03:03,090
I can't because we're in the wrong

72
00:02:58,439 --> 00:03:05,310
project there we go

73
00:03:03,090 --> 00:03:07,680
so really here's just some simple code

74
00:03:05,310 --> 00:03:09,870
that puts together a simple scene again

75
00:03:07,680 --> 00:03:11,969
not using the API at all so all this

76
00:03:09,870 --> 00:03:13,439
stuff is not part of the API here is

77
00:03:11,969 --> 00:03:15,659
where we start using the render API you

78
00:03:13,439 --> 00:03:18,900
can see very simple it just got a few

79
00:03:15,659 --> 00:03:21,689
simple calls cube sprite right that's

80
00:03:18,900 --> 00:03:25,230
all you need to know to use it that

81
00:03:21,689 --> 00:03:26,609
renders the entire scene basically and

82
00:03:25,229 --> 00:03:28,949
then here's what a render loop looks

83
00:03:26,610 --> 00:03:31,470
like again for start-up mostly windows

84
00:03:28,949 --> 00:03:33,419
code here is the initialization for the

85
00:03:31,469 --> 00:03:35,609
OpenGL layer that you need to call for

86
00:03:33,419 --> 00:03:38,489
our renderer that's really it right

87
00:03:35,610 --> 00:03:42,330
there here is the memory allocation so

88
00:03:38,490 --> 00:03:43,830
you and allocate the memory for the you

89
00:03:42,330 --> 00:03:45,420
don't have to call us to do it you

90
00:03:43,830 --> 00:03:47,120
allocate the memory we may change that a

91
00:03:45,419 --> 00:03:49,199
little if we want this buffer to be

92
00:03:47,120 --> 00:03:53,370
something special but that's a separate

93
00:03:49,199 --> 00:03:56,060
issue so there's that so anyway that's

94
00:03:53,370 --> 00:03:58,680
one thing and then this is all just

95
00:03:56,060 --> 00:04:00,900
initialization for the test scene right

96
00:03:58,680 --> 00:04:02,340
again not really late to the API and

97
00:04:00,900 --> 00:04:04,680
then here's the use of the API again

98
00:04:02,340 --> 00:04:06,000
very simple this is just utility

99
00:04:04,680 --> 00:04:07,560
functions you don't really need to use

100
00:04:06,000 --> 00:04:10,259
this this is just giving you a way to

101
00:04:07,560 --> 00:04:12,180
figure out what region to draw on if you

102
00:04:10,259 --> 00:04:14,399
want a sixteen by nine window rights are

103
00:04:12,180 --> 00:04:16,500
very simple something that steps up the

104
00:04:14,400 --> 00:04:18,899
camera again this is not really using

105
00:04:16,500 --> 00:04:20,160
the API per se you could use anything to

106
00:04:18,899 --> 00:04:22,349
generate as long as you can generate a

107
00:04:20,160 --> 00:04:24,720
camera matrix so in terms of our render

108
00:04:22,350 --> 00:04:26,490
API it's really just this very very

109
00:04:24,720 --> 00:04:28,020
straightforward you initialize the

110
00:04:26,490 --> 00:04:28,829
command buffer that's gonna have

111
00:04:28,019 --> 00:04:30,509
everything in it

112
00:04:28,829 --> 00:04:32,159
you say here's a group of render

113
00:04:30,509 --> 00:04:33,719
commands I'm going to issue here is the

114
00:04:32,160 --> 00:04:36,360
camera transforms that I'm going to use

115
00:04:33,720 --> 00:04:38,430
for them here is the def peel marker

116
00:04:36,360 --> 00:04:40,770
here's the scene end of the death -

117
00:04:38,430 --> 00:04:42,930
marker end of the render group and then

118
00:04:40,769 --> 00:04:45,269
you issued it to OpenGL so again very

119
00:04:42,930 --> 00:04:46,920
very simple you're talking about an API

120
00:04:45,269 --> 00:04:49,019
that basically just that is just that

121
00:04:46,920 --> 00:04:58,080
for your entire render loop which i

122
00:04:49,019 --> 00:05:00,689
think is pretty good so I think that's

123
00:04:58,079 --> 00:05:04,709
all good but we can still do better and

124
00:05:00,689 --> 00:05:06,300
we can also make utility functions for

125
00:05:04,709 --> 00:05:08,879
some of these things that will simplify

126
00:05:06,300 --> 00:05:09,480
this so one of the things that I often

127
00:05:08,879 --> 00:05:13,110
like to say

128
00:05:09,480 --> 00:05:15,060
is you want granularity to be something

129
00:05:13,110 --> 00:05:17,730
that the user is in control of of

130
00:05:15,060 --> 00:05:19,470
whatever your API is so for example in

131
00:05:17,730 --> 00:05:22,410
this case you can see we have a very

132
00:05:19,470 --> 00:05:25,980
high level of granularity here so very

133
00:05:22,410 --> 00:05:28,890
very fine granularity where basically

134
00:05:25,980 --> 00:05:30,660
the user is making their own four by

135
00:05:28,889 --> 00:05:35,039
four camera matrix and has control over

136
00:05:30,660 --> 00:05:37,260
all of this stuff right the dolly the

137
00:05:35,040 --> 00:05:39,420
shift the pitch the orbit right they're

138
00:05:37,259 --> 00:05:44,129
creating their own matrix all this stuff

139
00:05:39,420 --> 00:05:46,470
and that's great and you want that never

140
00:05:44,129 --> 00:05:48,689
get rid of the ability in an API for

141
00:05:46,470 --> 00:05:53,910
someone to micromanage what they're

142
00:05:48,689 --> 00:05:57,000
doing however you also want to provide

143
00:05:53,910 --> 00:05:58,830
high level calls that do all those

144
00:05:57,000 --> 00:06:02,370
things together for people who don't

145
00:05:58,829 --> 00:06:04,829
know or don't care about how that thing

146
00:06:02,370 --> 00:06:07,259
works so for example when I look at all

147
00:06:04,829 --> 00:06:09,750
this code I see an opportunity for us to

148
00:06:07,259 --> 00:06:12,329
provide some utility functions that

149
00:06:09,750 --> 00:06:14,250
again don't get rid of this make sure

150
00:06:12,329 --> 00:06:16,289
this code path still works because you

151
00:06:14,250 --> 00:06:18,629
definitely want the person to be able to

152
00:06:16,290 --> 00:06:20,340
make their own matrices and be able to

153
00:06:18,629 --> 00:06:23,279
position the camera very specifically

154
00:06:20,339 --> 00:06:25,560
like that however they want to but we

155
00:06:23,279 --> 00:06:27,629
also should just make some nice camera

156
00:06:25,560 --> 00:06:29,639
utilities that allow you to just do this

157
00:06:27,629 --> 00:06:31,589
automatically because a lot of the times

158
00:06:29,639 --> 00:06:33,419
that's all you're gonna want to do is

159
00:06:31,589 --> 00:06:35,489
just say here's the point I'm looking at

160
00:06:33,420 --> 00:06:37,770
I want to like spin around it this much

161
00:06:35,490 --> 00:06:39,750
and up this much and here's the ship

162
00:06:37,769 --> 00:06:41,310
let's just make something where these

163
00:06:39,750 --> 00:06:46,379
parameters you just feed those

164
00:06:41,310 --> 00:06:48,569
parameters in and it works right so

165
00:06:46,379 --> 00:06:50,639
something like that seems like a really

166
00:06:48,569 --> 00:06:53,790
good addition to what we have made

167
00:06:50,639 --> 00:06:55,889
because at that point we could get rid

168
00:06:53,790 --> 00:06:58,020
of all this code - for people who again

169
00:06:55,889 --> 00:07:01,829
don't want to know how camera code

170
00:06:58,019 --> 00:07:03,599
necessarily works they can they can sort

171
00:07:01,829 --> 00:07:08,149
of take advantage of the fact that we do

172
00:07:03,600 --> 00:07:08,150
know and off we go right

173
00:07:10,199 --> 00:07:17,579
all right so I think that's one thing we

174
00:07:14,670 --> 00:07:18,990
should look at the other thing that I

175
00:07:17,579 --> 00:07:23,669
think we should look at is this depth

176
00:07:18,990 --> 00:07:26,129
field stuff so I don't necessarily know

177
00:07:23,670 --> 00:07:28,379
to what extent we need the depth field

178
00:07:26,129 --> 00:07:33,719
to be as explicitly programmable as it

179
00:07:28,379 --> 00:07:36,839
currently is I think one thing we could

180
00:07:33,720 --> 00:07:38,370
do is just always def appeal and then

181
00:07:36,839 --> 00:07:40,589
just have some things that are outside

182
00:07:38,370 --> 00:07:43,920
the Deaf peel like I don't know that we

183
00:07:40,589 --> 00:07:47,489
need multiple depth peel groups so it

184
00:07:43,920 --> 00:07:51,390
may simplify the renderer as well as the

185
00:07:47,490 --> 00:07:53,040
API if we just said look render groups

186
00:07:51,389 --> 00:07:55,919
are either depth peeled or they're not

187
00:07:53,040 --> 00:07:59,280
and you don't have to use a begin depth

188
00:07:55,920 --> 00:08:00,960
peel and depth peel you just say when

189
00:07:59,279 --> 00:08:07,289
you begin a render group whether it's

190
00:08:00,959 --> 00:08:13,379
def peeled right that seems pretty easy

191
00:08:07,290 --> 00:08:15,360
to do and I feel like we could do that

192
00:08:13,379 --> 00:08:16,980
really simply here by just actually

193
00:08:15,360 --> 00:08:19,139
adding that into the render group

194
00:08:16,980 --> 00:08:21,330
already and not really doing any

195
00:08:19,139 --> 00:08:23,819
optimization around it meaning actually

196
00:08:21,329 --> 00:08:27,649
just call begin depth you end up peel

197
00:08:23,819 --> 00:08:34,279
for you in the render group for example

198
00:08:27,649 --> 00:08:34,279
I think that might make things easier

199
00:08:35,929 --> 00:08:42,539
since the DEF peels are cleared I mean

200
00:08:40,259 --> 00:08:44,639
the way we have the API now because the

201
00:08:42,539 --> 00:08:47,309
depth peels themselves have a clear

202
00:08:44,639 --> 00:08:48,899
involved I feel like that also means you

203
00:08:47,309 --> 00:08:51,239
really couldn't use multiple of them

204
00:08:48,899 --> 00:08:53,370
anyway so we would have to change this

205
00:08:51,240 --> 00:08:54,500
API to support multiple def peels in the

206
00:08:53,370 --> 00:08:57,810
first place

207
00:08:54,500 --> 00:09:00,059
so I kind of feel like we could simplify

208
00:08:57,809 --> 00:09:02,039
that down because our render really

209
00:09:00,059 --> 00:09:05,509
doesn't support multiple def peel passes

210
00:09:02,039 --> 00:09:08,250
so why bother with this part of it right

211
00:09:05,509 --> 00:09:10,919
so I think we want to do that let's go

212
00:09:08,250 --> 00:09:12,330
ahead and start down this path so there

213
00:09:10,919 --> 00:09:14,039
you go I've now said everything I'm

214
00:09:12,330 --> 00:09:16,310
going to do this is not going to be very

215
00:09:14,039 --> 00:09:18,659
complicated we're just gonna basically

216
00:09:16,309 --> 00:09:21,539
start down the path I said and do as

217
00:09:18,659 --> 00:09:23,610
much as we can today that's really it so

218
00:09:21,539 --> 00:09:26,219
if I jump here to the render

219
00:09:23,610 --> 00:09:28,050
Loup I'm gonna start with the DEF peel

220
00:09:26,220 --> 00:09:29,940
stuff because it's pretty basic I'm

221
00:09:28,049 --> 00:09:33,990
gonna hop over here into the rendered

222
00:09:29,940 --> 00:09:38,510
rib code and I'm gonna I'm just gonna

223
00:09:33,990 --> 00:09:41,339
look at that begin def peel stuff

224
00:09:38,509 --> 00:09:44,220
so here's begin def peel and depth peel

225
00:09:41,339 --> 00:09:46,320
I'm gonna jump to the render group and

226
00:09:44,220 --> 00:09:48,810
I'm just gonna put this in here so we

227
00:09:46,320 --> 00:09:50,970
can kind of look at what they do so if

228
00:09:48,809 --> 00:09:53,639
you look at begin render group yer you

229
00:09:50,970 --> 00:09:56,100
can sort of see in the command structure

230
00:09:53,639 --> 00:09:57,838
as we're doing this you can see that

231
00:09:56,100 --> 00:09:59,550
normally we call begin render group this

232
00:09:57,839 --> 00:10:01,769
way I don't know if we're still using

233
00:09:59,549 --> 00:10:04,620
these generation IDs I actually am very

234
00:10:01,769 --> 00:10:06,350
curious about that I don't know to what

235
00:10:04,620 --> 00:10:13,700
extent we care about this stuff anymore

236
00:10:06,350 --> 00:10:16,909
I feel like we should have been able to

237
00:10:13,700 --> 00:10:19,320
actually get rid of that at some point I

238
00:10:16,909 --> 00:10:23,759
feel like those generation IDs can go

239
00:10:19,320 --> 00:10:25,230
and unfortunately I don't quite know if

240
00:10:23,759 --> 00:10:27,629
they can yet because we're sort of still

241
00:10:25,230 --> 00:10:29,370
relying on them the generation ideas

242
00:10:27,629 --> 00:10:31,559
were just there to avoid having assets

243
00:10:29,370 --> 00:10:34,528
being evicted on a frame where they were

244
00:10:31,559 --> 00:10:36,569
getting used and I don't think we

245
00:10:34,528 --> 00:10:39,448
actually really need to do that anymore

246
00:10:36,570 --> 00:10:41,339
because I'm pretty sure we can just make

247
00:10:39,448 --> 00:10:45,479
our asset eviction happen at a specific

248
00:10:41,339 --> 00:10:46,250
time nowadays and I should state that a

249
00:10:45,480 --> 00:10:49,560
little differently

250
00:10:46,250 --> 00:10:52,289
we kind of know already that the assets

251
00:10:49,559 --> 00:10:55,889
are evicted at a specific time anyway so

252
00:10:52,289 --> 00:11:01,078
if you look at the like the OpenGL

253
00:10:55,889 --> 00:11:03,208
renderer for example so here's 1/32

254
00:11:01,078 --> 00:11:05,789
handmade up in jail and what you can see

255
00:11:03,208 --> 00:11:09,619
is if I jump down to the place where we

256
00:11:05,789 --> 00:11:12,360
actually look at a particular texture oh

257
00:11:09,620 --> 00:11:14,850
sorry now I'm in the wrong file I meant

258
00:11:12,360 --> 00:11:16,050
actually render open jail we're not

259
00:11:14,850 --> 00:11:18,089
talking with you we're talking about the

260
00:11:16,049 --> 00:11:21,088
platform nonspecific OpenGL code not

261
00:11:18,089 --> 00:11:22,620
that platform feel good so if we look in

262
00:11:21,089 --> 00:11:25,110
here when we actually render something

263
00:11:22,620 --> 00:11:28,649
what you can see is when we actually

264
00:11:25,110 --> 00:11:30,389
grab it we don't care anymore about the

265
00:11:28,649 --> 00:11:31,828
loaded bitmap right remember we were

266
00:11:30,389 --> 00:11:35,068
passing loading bitmap down here

267
00:11:31,828 --> 00:11:37,019
originally if you look we care not at

268
00:11:35,068 --> 00:11:39,209
all about loaded bitmaps any

269
00:11:37,019 --> 00:11:44,340
more and the reason for that is we now

270
00:11:39,210 --> 00:11:46,980
process are open Jill our textures we

271
00:11:44,340 --> 00:11:48,960
now process those at an own time which

272
00:11:46,980 --> 00:11:51,029
is right when open Jill manage textures

273
00:11:48,960 --> 00:11:54,870
is called now what we could very easily

274
00:11:51,029 --> 00:11:57,629
do and we may actually want to do is say

275
00:11:54,870 --> 00:12:01,340
that that happens actually on render so

276
00:11:57,629 --> 00:12:04,919
meaning textured transfers are it are

277
00:12:01,340 --> 00:12:16,110
started at that time and so for example

278
00:12:04,919 --> 00:12:18,419
let's suppose I did this right this

279
00:12:16,110 --> 00:12:20,389
would be exactly what we want to do mean

280
00:12:18,419 --> 00:12:23,339
we process these at this time

281
00:12:20,389 --> 00:12:31,860
unfortunately there is a one downside to

282
00:12:23,340 --> 00:12:35,129
this that we may not want I'll fix this

283
00:12:31,860 --> 00:12:37,740
now to I might as well so what I'd like

284
00:12:35,129 --> 00:12:39,419
to do you know what I can also do it

285
00:12:37,740 --> 00:12:41,399
this way and then we can do it in two

286
00:12:39,419 --> 00:12:42,449
stages but let me continue what I was

287
00:12:41,399 --> 00:12:43,679
saying first and then we could talk

288
00:12:42,450 --> 00:12:45,780
about that because this is something we

289
00:12:43,679 --> 00:12:48,659
wanted to get to next weekend is going

290
00:12:45,779 --> 00:12:50,339
to texture race anyway but so let's

291
00:12:48,659 --> 00:12:52,740
suppose we just call opengl managed

292
00:12:50,340 --> 00:12:55,320
textures right here so basically at this

293
00:12:52,740 --> 00:13:00,180
time we know that we're gonna manage our

294
00:12:55,320 --> 00:13:01,740
textures so we take the lock get

295
00:13:00,179 --> 00:13:04,409
everything off the cue process at all

296
00:13:01,740 --> 00:13:06,930
and off we go right so if we know we've

297
00:13:04,409 --> 00:13:08,939
done all of those changes at this point

298
00:13:06,929 --> 00:13:11,149
we know that we really don't need to

299
00:13:08,940 --> 00:13:13,890
worry anymore I think about those

300
00:13:11,149 --> 00:13:16,799
generation IDs because we know that

301
00:13:13,889 --> 00:13:20,009
we're never going to do any evictions

302
00:13:16,799 --> 00:13:22,349
except at a very specific time right

303
00:13:20,009 --> 00:13:29,210
before we start the render process now I

304
00:13:22,350 --> 00:13:31,529
think since those evictions happen like

305
00:13:29,210 --> 00:13:36,540
since those evictions are going to

306
00:13:31,529 --> 00:13:39,959
happen when we're rendering they're

307
00:13:36,539 --> 00:13:42,240
gonna reuse a texture slot technically

308
00:13:39,960 --> 00:13:45,360
speaking I don't know if really what you

309
00:13:42,240 --> 00:13:47,220
want to do is put them here meaning we

310
00:13:45,360 --> 00:13:49,500
don't want to evict anything - we're

311
00:13:47,220 --> 00:13:51,379
done rendering that particular frame

312
00:13:49,500 --> 00:13:54,419
right

313
00:13:51,379 --> 00:13:56,879
because any textures we may have used on

314
00:13:54,419 --> 00:14:00,870
this frame we want to use them first and

315
00:13:56,879 --> 00:14:02,549
then we want to evict them right so I

316
00:14:00,870 --> 00:14:04,230
think we may want the code to look more

317
00:14:02,549 --> 00:14:04,589
like that but once it looks more like

318
00:14:04,230 --> 00:14:06,690
that

319
00:14:04,590 --> 00:14:09,450
I think generation IDs become irrelevant

320
00:14:06,690 --> 00:14:12,870
right I don't think you really need them

321
00:14:09,450 --> 00:14:17,990
because I think most of the time the

322
00:14:12,870 --> 00:14:20,549
generation ID is is really not relevant

323
00:14:17,990 --> 00:14:24,600
let's find out what it it gets used for

324
00:14:20,549 --> 00:14:31,349
just in general so let's suppose I get

325
00:14:24,600 --> 00:14:36,740
rid of that what happens so here we

326
00:14:31,350 --> 00:14:42,560
update them whenever we load here we

327
00:14:36,740 --> 00:14:47,220
let's see here we check when we evict

328
00:14:42,559 --> 00:14:50,789
and that's it so really if we just don't

329
00:14:47,220 --> 00:14:52,620
do that right if we just don't check

330
00:14:50,789 --> 00:14:56,309
generation has completed I think we're

331
00:14:52,620 --> 00:14:58,620
done right so I think that's that's

332
00:14:56,309 --> 00:15:10,679
basically it

333
00:14:58,620 --> 00:15:13,860
yeah hold on one second sorry I just

334
00:15:10,679 --> 00:15:18,750
want to close the door there um so let's

335
00:15:13,860 --> 00:15:20,639
take a look at what happens in in the

336
00:15:18,750 --> 00:15:22,740
generation ID stuff if I just remove

337
00:15:20,639 --> 00:15:24,419
this entirely I think we'd be fine and

338
00:15:22,740 --> 00:15:25,620
then we can get rid of that because we

339
00:15:24,419 --> 00:15:27,689
don't really need that anymore because

340
00:15:25,620 --> 00:15:29,750
we do update the textures at a known

341
00:15:27,690 --> 00:15:32,340
time so in theory we should be able to

342
00:15:29,750 --> 00:15:36,529
ignore that but I you know you never

343
00:15:32,340 --> 00:15:38,460
know with with with multi-threaded code

344
00:15:36,529 --> 00:15:39,809
we're gonna have to double check and

345
00:15:38,460 --> 00:15:41,970
make sure everything's kosher first

346
00:15:39,809 --> 00:15:44,099
before we make that kind of a bold

347
00:15:41,970 --> 00:15:46,950
statement so anyway let me go ahead and

348
00:15:44,100 --> 00:15:52,100
and get rid of that stuff here make sure

349
00:15:46,950 --> 00:15:59,280
that it's not involved anywhere anymore

350
00:15:52,100 --> 00:16:00,840
and then we can test it lightly it will

351
00:15:59,279 --> 00:16:03,679
not really be a definitive test for

352
00:16:00,840 --> 00:16:03,680
obvious reasons

353
00:16:05,589 --> 00:16:11,319
where is that generation ID from there's

354
00:16:09,528 --> 00:16:13,278
another one there let me get rid of it

355
00:16:11,318 --> 00:16:19,490
it's from that it's from the render

356
00:16:13,278 --> 00:16:21,828
group let me just get rid of the one in

357
00:16:19,490 --> 00:16:33,318
the render group that'll generate there

358
00:16:21,828 --> 00:16:41,169
we go that'll generate other ones so we

359
00:16:33,318 --> 00:16:43,278
go no sorry

360
00:16:41,169 --> 00:16:45,438
and again not doing anything interesting

361
00:16:43,278 --> 00:16:47,269
here just removing vestige will remain

362
00:16:45,438 --> 00:16:58,669
to make sure that everything is is

363
00:16:47,269 --> 00:17:04,279
kosher now for sounds as far as when

364
00:16:58,669 --> 00:17:06,349
sounds are evicted it looks like we load

365
00:17:04,279 --> 00:17:08,029
them right when we use them so in theory

366
00:17:06,349 --> 00:17:11,029
that should make it impossible to ever

367
00:17:08,029 --> 00:17:13,308
evict enough in time so I think those

368
00:17:11,029 --> 00:17:15,649
don't care and also those were never

369
00:17:13,308 --> 00:17:17,269
checked in the first place

370
00:17:15,650 --> 00:17:22,929
so those generation I needs weren't

371
00:17:17,269 --> 00:17:31,639
doing anything for us anyway all right

372
00:17:22,929 --> 00:17:33,230
let's see generation ID let me take a

373
00:17:31,640 --> 00:17:35,870
look at render group there and make sure

374
00:17:33,230 --> 00:17:38,079
that we don't actually ask for that

375
00:17:35,869 --> 00:17:38,079
anymore

376
00:17:51,549 --> 00:18:13,579
oops hey that's a good to do we got rid

377
00:18:11,059 --> 00:18:16,490
of sorry ice to take it so long

378
00:18:13,579 --> 00:18:19,059
sometimes you gotta do a little

379
00:18:16,490 --> 00:18:22,730
housecleaning and it's kind of mundane

380
00:18:19,059 --> 00:18:24,619
so we don't really yeah in fact these

381
00:18:22,730 --> 00:18:26,000
two do's I'll say pull this out so

382
00:18:24,619 --> 00:18:29,349
that's a pretty good indication that

383
00:18:26,000 --> 00:18:29,349
maybe it should get pulled out

384
00:18:40,460 --> 00:18:48,019
so in flight generations that should go

385
00:18:45,750 --> 00:18:48,019
away

386
00:18:51,859 --> 00:19:15,449
this should go away operation lock so

387
00:19:10,859 --> 00:19:18,000
I'm not 100% sure what that asset lock

388
00:19:15,450 --> 00:19:19,769
was actually bothering to do but we'll

389
00:19:18,000 --> 00:19:23,548
check it out because I don't want to

390
00:19:19,769 --> 00:19:28,798
remove that lock yeah let's take a quick

391
00:19:23,548 --> 00:19:31,410
look here that gets rid of all of the

392
00:19:28,798 --> 00:19:33,119
generation ID code I want to take a look

393
00:19:31,410 --> 00:19:35,870
at the beginner satlok code though

394
00:19:33,119 --> 00:19:43,379
because that we may actually care about

395
00:19:35,869 --> 00:19:46,019
yes so that we need we can eventually

396
00:19:43,380 --> 00:19:50,160
get rid of this I think because I think

397
00:19:46,019 --> 00:19:51,720
we probably would be able to once we

398
00:19:50,160 --> 00:19:55,200
switch to the different texture system

399
00:19:51,720 --> 00:19:59,669
we may be able to keep things more

400
00:19:55,200 --> 00:20:02,850
straightforward there but the asset lock

401
00:19:59,669 --> 00:20:04,230
for updating the memory headers that we

402
00:20:02,849 --> 00:20:06,689
don't want to get rid of that would

403
00:20:04,230 --> 00:20:08,970
cause us issues for sure

404
00:20:06,690 --> 00:20:10,798
so anyway all right so here's that

405
00:20:08,970 --> 00:20:15,000
render test let me go ahead and make

406
00:20:10,798 --> 00:20:17,639
sure our game is working as well because

407
00:20:15,000 --> 00:20:19,200
that's gonna that person puts more

408
00:20:17,640 --> 00:20:20,910
stress on the asset system certainly

409
00:20:19,200 --> 00:20:23,039
because it's actually loading things

410
00:20:20,910 --> 00:20:25,980
all right so debug build the game works

411
00:20:23,039 --> 00:20:27,359
okay I might try the optimized version

412
00:20:25,980 --> 00:20:29,039
of the game too

413
00:20:27,359 --> 00:20:30,558
we don't have any really good way of

414
00:20:29,039 --> 00:20:33,480
testing about by threading we don't have

415
00:20:30,558 --> 00:20:36,389
really severe like burning kind of test

416
00:20:33,480 --> 00:20:37,860
that we would do which is fine we don't

417
00:20:36,390 --> 00:20:41,280
need to do that kind of testing during

418
00:20:37,859 --> 00:20:42,599
this phase of diliman anyway but I'm

419
00:20:41,279 --> 00:20:45,960
just gonna make sure that there's no

420
00:20:42,599 --> 00:20:49,308
obvious hang-ups like that we didn't

421
00:20:45,960 --> 00:20:52,980
break anything that is immediately clear

422
00:20:49,308 --> 00:20:55,170
so anyway back to where we're going

423
00:20:52,980 --> 00:20:57,920
so that begin render group and render

424
00:20:55,170 --> 00:21:00,029
group now that we pulled out that

425
00:20:57,920 --> 00:21:01,590
Generation Next we don't need any more

426
00:21:00,029 --> 00:21:03,149
because we have a specific asset up to

427
00:21:01,589 --> 00:21:06,629
update time I think we want to keep that

428
00:21:03,150 --> 00:21:08,460
especially for OpenGL output we you can

429
00:21:06,630 --> 00:21:10,020
get fancier with other ApS open jail

430
00:21:08,460 --> 00:21:13,019
really hates multi-threaded texture

431
00:21:10,019 --> 00:21:22,230
transfer it's super hard to get it to

432
00:21:13,019 --> 00:21:23,759
work reliably across systems just

433
00:21:22,230 --> 00:21:25,289
multi-threading in general with OpenGL

434
00:21:23,759 --> 00:21:27,569
just doesn't work

435
00:21:25,289 --> 00:21:30,950
not enough drivers support it well

436
00:21:27,569 --> 00:21:34,349
enough you can't do it and if you're on

437
00:21:30,950 --> 00:21:39,120
certain cards it will work just fine but

438
00:21:34,349 --> 00:21:39,869
it's just not it's got issues buyer

439
00:21:39,119 --> 00:21:42,659
beware

440
00:21:39,869 --> 00:21:44,099
anyway so as far as deafness is

441
00:21:42,660 --> 00:21:46,920
concerned sort of what I was suggesting

442
00:21:44,099 --> 00:21:48,689
we might do is just weld these together

443
00:21:46,920 --> 00:21:53,400
with the beginning of the render group

444
00:21:48,690 --> 00:21:55,740
so for example in here if we were to say

445
00:21:53,400 --> 00:21:59,610
look I do want to begin a render group

446
00:21:55,740 --> 00:22:03,779
with a depth peel maybe that's just a

447
00:21:59,609 --> 00:22:06,659
thing we do explicitly I'm gonna I don't

448
00:22:03,779 --> 00:22:08,399
know what the missing resource count is

449
00:22:06,660 --> 00:22:11,570
for here I think that would just say

450
00:22:08,400 --> 00:22:14,160
look we don't want to render this frame

451
00:22:11,569 --> 00:22:15,990
we count missing resources and see if we

452
00:22:14,160 --> 00:22:18,720
want to delay the frame by one frame or

453
00:22:15,990 --> 00:22:20,160
not which we didn't do here we could do

454
00:22:18,720 --> 00:22:21,680
that that's kind of interesting actually

455
00:22:20,160 --> 00:22:24,330
maybe we should look at that later

456
00:22:21,680 --> 00:22:25,980
anyway when we do begin render group

457
00:22:24,329 --> 00:22:28,909
what we could do is have two ways of

458
00:22:25,980 --> 00:22:31,230
beginning render group we could do

459
00:22:28,910 --> 00:22:36,350
basically a def peeled render group and

460
00:22:31,230 --> 00:22:40,920
a non def peeled render group and so I

461
00:22:36,349 --> 00:22:43,759
guess what I'd say here is we could just

462
00:22:40,920 --> 00:22:43,759
say

463
00:22:47,269 --> 00:22:52,519
I mean we could just weld this together

464
00:22:49,429 --> 00:22:56,450
and be like do you want to clear do you

465
00:22:52,519 --> 00:22:59,150
want a depth feel and when you begin the

466
00:22:56,450 --> 00:23:03,039
render group you say which of those you

467
00:22:59,150 --> 00:23:05,600
want I don't know that that that's great

468
00:23:03,039 --> 00:23:12,440
but I'm gonna try it and we're gonna see

469
00:23:05,599 --> 00:23:14,539
what happens so let's suppose that this

470
00:23:12,440 --> 00:23:16,730
begin render group just takes some flags

471
00:23:14,539 --> 00:23:19,279
and it says what you want to do with it

472
00:23:16,730 --> 00:23:21,170
I'm just gonna try that and see if I

473
00:23:19,279 --> 00:23:26,230
like it I don't know if I will I might

474
00:23:21,170 --> 00:23:32,420
not so let's just say I have an enum

475
00:23:26,230 --> 00:23:41,920
rendered group flags and I'll have

476
00:23:32,420 --> 00:23:41,920
render clear do you want to clear guess

477
00:23:45,940 --> 00:24:03,009
candle prints lucency or I guess like

478
00:23:55,390 --> 00:24:03,009
Auto sort sort

479
00:24:08,250 --> 00:24:11,369
something like that

480
00:24:11,619 --> 00:24:16,929
meaning do something that handles the

481
00:24:13,509 --> 00:24:26,289
sort automatically or like handle

482
00:24:16,930 --> 00:24:36,330
overlapping transparency or I don't know

483
00:24:26,289 --> 00:24:36,329
I don't know something like that

484
00:24:40,359 --> 00:24:57,129
I got nothing I don't know what to call

485
00:24:54,339 --> 00:24:59,740
that but we're just gonna go with that

486
00:24:57,130 --> 00:25:01,120
for now so if you want to do a clear you

487
00:24:59,740 --> 00:25:04,558
can specify that if you want to help

488
00:25:01,119 --> 00:25:08,829
transparency you can specify that I and

489
00:25:04,558 --> 00:25:10,869
maybe I'll also say like there's sort of

490
00:25:08,829 --> 00:25:17,759
a third kind of thing that I might want

491
00:25:10,869 --> 00:25:17,759
to do in the future which is that so I

492
00:25:17,909 --> 00:25:30,010
don't know for sure but I may just want

493
00:25:23,558 --> 00:25:32,589
to have the ability to to do like 3d

494
00:25:30,009 --> 00:25:37,388
shapes versus 2d shapes so I feel like

495
00:25:32,589 --> 00:25:47,949
we may also want to do like something

496
00:25:37,388 --> 00:25:51,908
like anti-alias edges because to a

497
00:25:47,950 --> 00:25:58,000
certain extent we don't really need to

498
00:25:51,909 --> 00:26:00,970
run the we don't need to run the multi

499
00:25:58,000 --> 00:26:06,730
sampling path on anything other than the

500
00:26:00,970 --> 00:26:11,649
cubes right so like when we do our

501
00:26:06,730 --> 00:26:18,669
render group we could choose to do no

502
00:26:11,648 --> 00:26:21,959
depth feeling and anti-aliasing on the

503
00:26:18,669 --> 00:26:24,970
cubes and then we could choose to do

504
00:26:21,960 --> 00:26:27,009
anti-aliasing and I'm sorry def peeling

505
00:26:24,970 --> 00:26:29,139
but no anti-aliasing on the things that

506
00:26:27,009 --> 00:26:31,329
aren't the cubes you know what I mean

507
00:26:29,138 --> 00:26:33,278
I don't really know if we want to do

508
00:26:31,329 --> 00:26:38,558
that because it seems like maybe it's

509
00:26:33,278 --> 00:26:42,269
better to just allow everything to maybe

510
00:26:38,558 --> 00:26:42,269
that just gets too complicated you know

511
00:26:44,029 --> 00:26:52,879
I don't know I'll just leave it like

512
00:26:50,240 --> 00:26:55,059
this for now we'll see how it goes all

513
00:26:52,880 --> 00:26:59,090
right so here in the render group I want

514
00:26:55,059 --> 00:27:01,730
one of these to base to say what the

515
00:26:59,089 --> 00:27:04,129
flags are and what I'm gonna do here

516
00:27:01,730 --> 00:27:05,630
again for the benefit of people who

517
00:27:04,130 --> 00:27:09,770
maybe don't necessarily know what's

518
00:27:05,630 --> 00:27:12,980
going on I'm gonna also have a render

519
00:27:09,769 --> 00:27:15,500
like default and that's gonna be one

520
00:27:12,980 --> 00:27:20,750
that does both of these right so it's

521
00:27:15,500 --> 00:27:22,730
this or this and that's what you'll get

522
00:27:20,750 --> 00:27:26,029
if you just so that way if you're just

523
00:27:22,730 --> 00:27:29,360
doing one render group here you would

524
00:27:26,029 --> 00:27:31,129
get the thing that works you know for

525
00:27:29,359 --> 00:27:32,059
just a game scene if you don't know what

526
00:27:31,130 --> 00:27:33,560
you're doing you can just slam

527
00:27:32,059 --> 00:27:36,230
everything through that path and it will

528
00:27:33,559 --> 00:27:37,789
work it may not be the best thing for

529
00:27:36,230 --> 00:27:41,240
later when you're trying to do something

530
00:27:37,789 --> 00:27:44,720
more specific but it will work right so

531
00:27:41,240 --> 00:27:47,210
then what we can do is put this stuff on

532
00:27:44,720 --> 00:27:50,240
here I am trying to think of like for

533
00:27:47,210 --> 00:27:52,850
depth clear and full clear I don't know

534
00:27:50,240 --> 00:27:59,059
to what extent we were actually doing

535
00:27:52,849 --> 00:28:04,369
those I don't know when we do like depth

536
00:27:59,059 --> 00:28:06,769
clear versus full clear but maybe I'll

537
00:28:04,369 --> 00:28:09,009
put here like maybe I could put those in

538
00:28:06,769 --> 00:28:09,009
here

539
00:28:38,940 --> 00:28:45,190
yeah so I'm gonna look at when we're

540
00:28:41,650 --> 00:28:52,419
using that I'm assuming it's for the

541
00:28:45,190 --> 00:28:58,679
debug it is so what would happen is here

542
00:28:52,419 --> 00:28:58,679
we would do that depth clear right and

543
00:29:00,210 --> 00:29:05,789
so I think that's probably just fine

544
00:29:14,900 --> 00:29:22,759
I don't know if we have to make sure

545
00:29:20,059 --> 00:29:24,470
that we push a camera transform first

546
00:29:22,759 --> 00:29:27,470
before the clear in order to make sure

547
00:29:24,470 --> 00:29:33,230
the scissor rect is not messed up but

548
00:29:27,470 --> 00:29:41,420
that's kind of a separate issue as far

549
00:29:33,230 --> 00:29:45,230
as full clear is concerned that's not

550
00:29:41,420 --> 00:29:48,050
really used other than in the same way

551
00:29:45,230 --> 00:29:49,670
yeah so that's just what we would do at

552
00:29:48,049 --> 00:29:51,349
the beginning of that render group for

553
00:29:49,670 --> 00:29:54,529
clearing the screen anyway is not

554
00:29:51,349 --> 00:29:56,959
particularly relevant either way so I

555
00:29:54,529 --> 00:29:58,700
think we're good I think we don't really

556
00:29:56,960 --> 00:30:01,700
have to worry too much about this so I'm

557
00:29:58,700 --> 00:30:04,539
gonna go ahead and say that that'll work

558
00:30:01,700 --> 00:30:07,490
I'm gonna arbitrarily say that and

559
00:30:04,539 --> 00:30:09,379
obviously I don't actually know but

560
00:30:07,490 --> 00:30:12,380
that's fine so then I'm gonna get rid of

561
00:30:09,380 --> 00:30:15,550
those debt to Def peel pieces so those

562
00:30:12,380 --> 00:30:20,150
depth peel part things will go away and

563
00:30:15,549 --> 00:30:25,159
I'm gonna weld those in for now so let's

564
00:30:20,150 --> 00:30:31,370
put these up in here as well as these so

565
00:30:25,160 --> 00:30:34,269
if the render group is a depth filled

566
00:30:31,369 --> 00:30:37,519
render group we need to remember that

567
00:30:34,269 --> 00:30:39,950
and probably the easiest thing to do

568
00:30:37,519 --> 00:30:45,799
here is just store the flags that that

569
00:30:39,950 --> 00:30:49,519
were used for us you know so what I can

570
00:30:45,799 --> 00:30:54,259
do is say when we put this on here the

571
00:30:49,519 --> 00:30:59,059
flags will be remembered and that way we

572
00:30:54,259 --> 00:31:01,569
can test them later as necessary I think

573
00:30:59,059 --> 00:31:04,339
that should do it

574
00:31:01,569 --> 00:31:07,460
yeah so then what I'm going to do is

575
00:31:04,339 --> 00:31:11,379
minitest these flags and I'm gonna see

576
00:31:07,460 --> 00:31:17,000
whether we need to do like a clear color

577
00:31:11,380 --> 00:31:21,020
or a clear depth and I'm gonna see

578
00:31:17,000 --> 00:31:23,319
whether or not we want to do a death

579
00:31:21,019 --> 00:31:23,319
feel

580
00:31:23,500 --> 00:31:31,880
so the way that I want to do this is say

581
00:31:27,400 --> 00:31:34,580
that at the moment if we're doing handle

582
00:31:31,880 --> 00:31:38,060
transparency you have to clear

583
00:31:34,579 --> 00:31:41,929
everything that's just how we require it

584
00:31:38,059 --> 00:31:49,059
to be done I believe at the moment so in

585
00:31:41,930 --> 00:32:00,080
this case I will say like assert that

586
00:31:49,059 --> 00:32:01,579
both of these are true I think that's

587
00:32:00,079 --> 00:32:04,759
what we want to do meaning we want to

588
00:32:01,579 --> 00:32:07,309
say hey right now if you're gonna do a

589
00:32:04,759 --> 00:32:10,309
transparency pass you have you have to

590
00:32:07,309 --> 00:32:11,929
clear and if you didn't specify clear

591
00:32:10,309 --> 00:32:16,909
then that's just an error and you will

592
00:32:11,930 --> 00:32:18,380
have you will be sad panda in the future

593
00:32:16,910 --> 00:32:20,870
we could try to figure out a way to

594
00:32:18,380 --> 00:32:25,490
support that because you could actually

595
00:32:20,869 --> 00:32:29,119
copy the depth buffer or the color

596
00:32:25,490 --> 00:32:32,799
buffer into the first def peel layer so

597
00:32:29,119 --> 00:32:35,239
you could technically do that and

598
00:32:32,799 --> 00:32:38,990
actually have that work I just don't

599
00:32:35,240 --> 00:32:40,309
know that we want to write so again I'm

600
00:32:38,990 --> 00:32:43,329
just experimenting with this I may

601
00:32:40,309 --> 00:32:47,079
decide this is not good we'll see but

602
00:32:43,329 --> 00:32:52,480
I'm gonna at least try it first so

603
00:32:47,079 --> 00:32:52,480
here's my depth heal

604
00:32:58,079 --> 00:33:11,250
so in that case that's all we needed to

605
00:33:01,289 --> 00:33:13,230
do in this case I think we also don't

606
00:33:11,250 --> 00:33:18,890
have and I'm gonna grab these two right

607
00:33:13,230 --> 00:33:25,049
here we currently don't have a way to

608
00:33:18,890 --> 00:33:31,259
clear just the color so we're also going

609
00:33:25,049 --> 00:33:33,240
to assert here and again these are just

610
00:33:31,259 --> 00:33:35,069
to make sure that no one tries to use it

611
00:33:33,240 --> 00:33:36,509
in that way yet because we don't support

612
00:33:35,069 --> 00:33:37,950
it we don't want them to be confused

613
00:33:36,509 --> 00:33:40,829
about why it's not working we could

614
00:33:37,950 --> 00:33:42,390
start to try and support those later for

615
00:33:40,829 --> 00:33:47,000
people who want to do something fancier

616
00:33:42,390 --> 00:33:47,000
right but at the moment we're not gonna

617
00:33:47,329 --> 00:34:07,250
so here's our clear depth and here's our

618
00:33:54,000 --> 00:34:07,250
full clear and I think that's mostly it

619
00:34:10,639 --> 00:34:14,869
this should really be now

620
00:34:18,690 --> 00:34:30,418
okay let's yeah so we got here semicolon

621
00:34:27,489 --> 00:34:33,459
missing flags are off the render groups

622
00:34:30,418 --> 00:34:36,068
drop the render group why this isn't

623
00:34:33,460 --> 00:34:37,240
just about group I don't know cuz I

624
00:34:36,068 --> 00:34:38,710
guess I really like typewriter grip

625
00:34:37,239 --> 00:34:42,278
every time it's like what other group

626
00:34:38,710 --> 00:34:45,309
would be in this function that we would

627
00:34:42,278 --> 00:34:46,898
need to differentiate those two so now

628
00:34:45,309 --> 00:34:50,169
what we want to do is make sure people

629
00:34:46,898 --> 00:34:52,179
aren't calling these manually and so

630
00:34:50,168 --> 00:34:54,038
what we want to do is give them a name

631
00:34:52,179 --> 00:34:55,710
that will make sure that doesn't happen

632
00:34:54,039 --> 00:34:58,089
so I'm just gonna go ahead and

633
00:34:55,710 --> 00:35:00,579
underscore these so that basically

634
00:34:58,088 --> 00:35:04,179
everybody who is calling them cannot

635
00:35:00,579 --> 00:35:06,880
call them and only the internal code

636
00:35:04,179 --> 00:35:08,649
will call them and we may well these

637
00:35:06,880 --> 00:35:10,240
together later on so like I'm

638
00:35:08,650 --> 00:35:12,190
anticipating also kind of sort of

639
00:35:10,239 --> 00:35:13,750
getting rid of those right so I just

640
00:35:12,190 --> 00:35:17,769
want them give them a name that no one

641
00:35:13,750 --> 00:35:20,829
will use and then what I can do is pull

642
00:35:17,768 --> 00:35:23,588
this stuff apart into a you know make

643
00:35:20,829 --> 00:35:25,420
this stuff a little bit more specific

644
00:35:23,588 --> 00:35:31,139
here as to how it's it's working right

645
00:35:25,420 --> 00:35:31,139
so we don't need this anymore

646
00:35:34,480 --> 00:35:52,210
now it's just that and this should be

647
00:35:42,900 --> 00:35:54,670
rendered default actually okay and now

648
00:35:52,210 --> 00:35:56,889
for the game the background color is

649
00:35:54,670 --> 00:36:00,119
just going to be for the render group

650
00:35:56,889 --> 00:36:04,170
and how are we so is this render group

651
00:36:00,119 --> 00:36:06,730
how are we getting this render group who

652
00:36:04,170 --> 00:36:09,909
makes the start of the render group

653
00:36:06,730 --> 00:36:11,829
because I'm not sure what's happening

654
00:36:09,909 --> 00:36:20,440
there let me look at update and render

655
00:36:11,829 --> 00:36:29,170
world so the render group actually gets

656
00:36:20,440 --> 00:36:31,599
created like outside and I don't really

657
00:36:29,170 --> 00:36:34,690
know why

658
00:36:31,599 --> 00:36:34,690
[Music]

659
00:36:44,159 --> 00:36:48,629
that that yeah I don't know what really

660
00:36:46,829 --> 00:36:49,980
is going on there so let's take a look

661
00:36:48,630 --> 00:36:52,500
at a couple of things here first of all

662
00:36:49,980 --> 00:36:57,019
what is draw buffer supposed to be doing

663
00:36:52,500 --> 00:36:57,019
here like what's going on there

664
00:37:00,679 --> 00:37:17,489
what is that for yeah that's that's just

665
00:37:15,599 --> 00:37:19,650
garbage it's it's really just there to

666
00:37:17,489 --> 00:37:21,088
get the width in like one thing like

667
00:37:19,650 --> 00:37:24,088
let's let's that we got to get rid of

668
00:37:21,088 --> 00:37:29,578
that as well like the eliminate this in

669
00:37:24,088 --> 00:37:31,500
these entirely all of this stuff you

670
00:37:29,579 --> 00:37:34,318
know that that couldn't that comment

671
00:37:31,500 --> 00:37:36,858
could not be truer I don't know what

672
00:37:34,318 --> 00:37:40,099
that's doing there let's let's hose that

673
00:37:36,858 --> 00:37:40,098
right away

674
00:37:47,190 --> 00:37:52,869
all right so now as far as depth

675
00:37:50,170 --> 00:37:54,849
clearing is concerned so on here when we

676
00:37:52,869 --> 00:38:02,559
go to do these commands we really want a

677
00:37:54,849 --> 00:38:05,469
depth clear right here and that should

678
00:38:02,559 --> 00:38:07,449
be fine for depth peeling we want that

679
00:38:05,469 --> 00:38:10,329
to be done on the outside we can look at

680
00:38:07,449 --> 00:38:13,299
that in a second in here I feel like

681
00:38:10,329 --> 00:38:16,590
this wants to be its own push-pull like

682
00:38:13,300 --> 00:38:19,510
this should be its own open closed and

683
00:38:16,590 --> 00:38:21,880
the same would be true of here so when

684
00:38:19,510 --> 00:38:24,640
this does rendered layered seen that

685
00:38:21,880 --> 00:38:28,329
clear should have been just at the

686
00:38:24,639 --> 00:38:30,429
outset I don't know why I guess it's

687
00:38:28,329 --> 00:38:31,900
only if the layer count was zero that we

688
00:38:30,429 --> 00:38:34,389
want to but we kind of want to do it at

689
00:38:31,900 --> 00:38:35,950
all times anyway in case there's a

690
00:38:34,389 --> 00:38:38,559
little bit of something missing in there

691
00:38:35,949 --> 00:38:41,169
I don't know or we just don't want to do

692
00:38:38,559 --> 00:38:44,469
it at all so I'm not sure this is a

693
00:38:41,170 --> 00:38:48,490
little bit strange I'm not sure why

694
00:38:44,469 --> 00:38:52,419
that's there yeah it doesn't make a

695
00:38:48,489 --> 00:39:01,539
whole lot of sense let's see here so I'm

696
00:38:52,420 --> 00:39:03,309
gonna get rid of this entirely I'd like

697
00:39:01,539 --> 00:39:05,469
to get rid of draw buffer as well I mean

698
00:39:03,309 --> 00:39:10,090
I'm just gonna start icing that

699
00:39:05,469 --> 00:39:15,539
everywhere I see it I think that's a

700
00:39:10,090 --> 00:39:15,539
vestige will remain from the old days

701
00:39:22,550 --> 00:39:26,340
that's all stuff I wanna update in a

702
00:39:24,630 --> 00:39:32,519
second here's draw buffer I'm just

703
00:39:26,340 --> 00:39:33,840
getting rid of it and I that I think

704
00:39:32,519 --> 00:39:35,519
that was just from the software renderer

705
00:39:33,840 --> 00:39:38,730
we just never got rid of it it's not

706
00:39:35,519 --> 00:39:44,759
necessary anymore but it was still

707
00:39:38,730 --> 00:39:49,909
getting passed through all the time so

708
00:39:44,760 --> 00:39:49,910
let's take a look here at cutscene dot H

709
00:39:50,360 --> 00:40:00,990
update and render title screen well see

710
00:39:59,250 --> 00:40:04,139
where else that draw buffers still still

711
00:40:00,989 --> 00:40:10,349
hanging around like I don't want that in

712
00:40:04,139 --> 00:40:13,619
there anywhere so we need the width

713
00:40:10,349 --> 00:40:15,980
there you know that's true and that's

714
00:40:13,619 --> 00:40:15,980
fine

715
00:40:22,260 --> 00:40:30,420
so I think that's all good and we just

716
00:40:27,269 --> 00:40:32,420
need a way of getting the width in into

717
00:40:30,420 --> 00:40:34,980
here so it's some way of figuring out

718
00:40:32,420 --> 00:40:39,030
how big it is to get this so we can get

719
00:40:34,980 --> 00:40:40,920
the standard camera parameters and let

720
00:40:39,030 --> 00:40:42,750
me just look at what we're doing with

721
00:40:40,920 --> 00:40:47,880
the standard camera parameters to make

722
00:40:42,750 --> 00:40:58,139
sure we even really need to do that soon

723
00:40:47,880 --> 00:41:02,340
that's in the renderer hey not a lot of

724
00:40:58,139 --> 00:41:12,779
using of width in pixels there so I

725
00:41:02,340 --> 00:41:18,869
guess that's the end of that that's

726
00:41:12,780 --> 00:41:20,700
pretty funny I guess

727
00:41:18,869 --> 00:41:22,170
that's again the bonus of cleaning up

728
00:41:20,699 --> 00:41:25,500
the code you're like hey do I need to

729
00:41:22,170 --> 00:41:29,030
pass this it's not even used and then

730
00:41:25,500 --> 00:41:31,590
you can just get rid of it alright so

731
00:41:29,030 --> 00:41:34,710
now I think what I'd like to do is stop

732
00:41:31,590 --> 00:41:36,119
with the passing in of that because I

733
00:41:34,710 --> 00:41:38,880
want people to be able to open their own

734
00:41:36,119 --> 00:41:41,430
render blocks pretty much as necessary

735
00:41:38,880 --> 00:41:44,820
so this code right here that does the

736
00:41:41,429 --> 00:41:47,549
begin render group stuff I kind of want

737
00:41:44,820 --> 00:41:50,970
that to be something that you use

738
00:41:47,550 --> 00:41:54,240
directly and so I feel like these will

739
00:41:50,969 --> 00:41:59,189
now be able to open their own and you

740
00:41:54,239 --> 00:42:01,500
know you're really so now you can really

741
00:41:59,190 --> 00:42:03,119
think of the render commands structure

742
00:42:01,500 --> 00:42:05,639
as really the thing that gets plat

743
00:42:03,119 --> 00:42:07,858
passed around that's the thing you're

744
00:42:05,639 --> 00:42:09,809
actually adding to and render groups are

745
00:42:07,858 --> 00:42:10,259
just things you open and close as you

746
00:42:09,809 --> 00:42:11,730
wish

747
00:42:10,260 --> 00:42:15,660
which is kind of what they were supposed

748
00:42:11,730 --> 00:42:21,030
to be so this I'm just gonna say look we

749
00:42:15,659 --> 00:42:24,000
passed down the render commands and you

750
00:42:21,030 --> 00:42:26,369
do whatever you want to do with that we

751
00:42:24,000 --> 00:42:28,469
don't pass down the render group anymore

752
00:42:26,369 --> 00:42:32,180
you create your own render group as

753
00:42:28,469 --> 00:42:32,179
necessary right

754
00:42:33,559 --> 00:42:39,480
and I think that's all we really need to

755
00:42:36,539 --> 00:42:42,269
do so anyone who wants to make one of

756
00:42:39,480 --> 00:42:44,219
these now can just do it anyone who

757
00:42:42,269 --> 00:42:48,389
wants to do it right can just do this

758
00:42:44,219 --> 00:42:50,489
and the other thing we could do is if we

759
00:42:48,389 --> 00:42:52,199
wanted to we could actually use this as

760
00:42:50,489 --> 00:42:54,209
a pointer in the render group could it

761
00:42:52,199 --> 00:42:55,379
in fact return a pointer the reason

762
00:42:54,210 --> 00:42:56,789
we're not doing that is it's kind of

763
00:42:55,380 --> 00:42:58,289
just easier to put it on the stack and

764
00:42:56,789 --> 00:43:00,269
the compiler probably has an easier time

765
00:42:58,289 --> 00:43:02,909
understanding what's going on so this

766
00:43:00,269 --> 00:43:03,869
code is just written this way so that

767
00:43:02,909 --> 00:43:06,000
you don't have to keep taking the

768
00:43:03,869 --> 00:43:09,630
address of it I don't know how valuable

769
00:43:06,000 --> 00:43:13,019
that really is to be completely honest

770
00:43:09,630 --> 00:43:19,220
but you know all right

771
00:43:13,019 --> 00:43:19,219
so let's go in here and get that going I

772
00:43:20,179 --> 00:43:35,190
don't remember what this is called

773
00:43:23,480 --> 00:43:38,579
render commands okay so what I'd like to

774
00:43:35,190 --> 00:43:42,599
do here is just open up a render group

775
00:43:38,579 --> 00:43:44,250
when I actually need one so right here

776
00:43:42,599 --> 00:43:45,450
is sort of where it starts although I

777
00:43:44,250 --> 00:43:46,829
don't think it really needs to start

778
00:43:45,449 --> 00:43:50,399
here so we can probably actually move

779
00:43:46,829 --> 00:43:54,000
this some are else but point being in

780
00:43:50,400 --> 00:43:57,389
here we want to say is okay we're gonna

781
00:43:54,000 --> 00:44:01,019
do a render handle transparency and we

782
00:43:57,389 --> 00:44:06,449
want to do a render clear color and a

783
00:44:01,019 --> 00:44:12,179
render depth clear so we're gonna do all

784
00:44:06,449 --> 00:44:15,118
three for this render group and we are

785
00:44:12,179 --> 00:44:19,348
gonna pass that background color and

786
00:44:15,119 --> 00:44:21,599
clear this so then whenever we use these

787
00:44:19,349 --> 00:44:22,800
I don't really remember where we use

788
00:44:21,599 --> 00:44:25,859
these what we actually do start right

789
00:44:22,800 --> 00:44:29,960
there so that's fine so then after we

790
00:44:25,858 --> 00:44:29,960
push all the rendering on here

791
00:44:36,269 --> 00:44:43,329
that's pretty much the end of our render

792
00:44:39,039 --> 00:44:45,489
group and I suppose what I might well

793
00:44:43,329 --> 00:44:48,819
we'll we'll take let's take a look at

794
00:44:45,489 --> 00:44:50,500
that in a second so then in here if we

795
00:44:48,820 --> 00:44:56,349
actually wanted to render something else

796
00:44:50,500 --> 00:44:58,358
I think if we wanted to render something

797
00:44:56,349 --> 00:45:01,809
else we would just open the render group

798
00:44:58,358 --> 00:45:07,239
again in here right so what I want to do

799
00:45:01,809 --> 00:45:18,969
is say okay this it's gonna do the same

800
00:45:07,239 --> 00:45:25,659
thing again and this time it's going to

801
00:45:18,969 --> 00:45:29,429
do no transparency probably I don't know

802
00:45:25,659 --> 00:45:29,429
how we want to do this exactly but I

803
00:45:32,400 --> 00:45:37,590
don't really know exactly but we don't

804
00:45:35,139 --> 00:45:37,589
need to do

805
00:45:43,059 --> 00:45:51,409
Yeah right so that seems totally

806
00:45:49,250 --> 00:45:54,079
reasonable and that way you just open

807
00:45:51,409 --> 00:46:01,929
and close render groups as you want them

808
00:45:54,079 --> 00:46:06,469
okay bat and so for the title screen and

809
00:46:01,929 --> 00:46:08,690
then we've also got the cutscenes those

810
00:46:06,469 --> 00:46:13,969
are both things that again can open

811
00:46:08,690 --> 00:46:16,579
their own as they wish and those don't

812
00:46:13,969 --> 00:46:23,719
need to use the duck dealer at all

813
00:46:16,579 --> 00:46:25,579
I don't think so anyway I suppose

814
00:46:23,719 --> 00:46:27,379
actually nice look at it it looks like

815
00:46:25,579 --> 00:46:36,769
we actually only need to open it if

816
00:46:27,380 --> 00:46:45,650
we're gonna do this so there's our

817
00:46:36,769 --> 00:46:47,449
background color we don't have a title

818
00:46:45,650 --> 00:46:49,160
screen yet so really this is sort of

819
00:46:47,449 --> 00:46:52,849
putting the cart before the horse I

820
00:46:49,159 --> 00:46:55,039
suppose there's nothing to render but

821
00:46:52,849 --> 00:46:56,360
hey we're clearing the screen I guess so

822
00:46:55,039 --> 00:46:58,789
we can see that the title screen would

823
00:46:56,360 --> 00:47:01,820
go here we don't need a handle

824
00:46:58,789 --> 00:47:05,000
transparency on this we just need to

825
00:47:01,820 --> 00:47:08,660
clear and that's what we're gonna do and

826
00:47:05,000 --> 00:47:12,860
the same would be true for this although

827
00:47:08,659 --> 00:47:14,269
I think this doesn't need to clear so it

828
00:47:12,860 --> 00:47:16,070
doesn't need to clear and it doesn't

829
00:47:14,269 --> 00:47:17,869
really need to use the death buffer so

830
00:47:16,070 --> 00:47:19,820
we can just clear just the depth buffer

831
00:47:17,869 --> 00:47:22,849
even though we don't really need it to

832
00:47:19,820 --> 00:47:28,550
use the depth buffer which is a little

833
00:47:22,849 --> 00:47:30,949
complicated but yeah we don't really

834
00:47:28,550 --> 00:47:38,530
have multimodal rendering in that sense

835
00:47:30,949 --> 00:47:38,529
so at the moment anyway we don't have a

836
00:47:39,639 --> 00:47:46,639
way of saying just turn we don't have a

837
00:47:43,489 --> 00:47:50,689
way of saying turnoff depth testing we

838
00:47:46,639 --> 00:47:54,469
could actually put that in here and

839
00:47:50,690 --> 00:47:55,420
maybe we should we probably don't need

840
00:47:54,469 --> 00:48:08,989
to

841
00:47:55,420 --> 00:48:11,869
but I'll put it to do so this way at

842
00:48:08,989 --> 00:48:14,808
least we know you know if we want to do

843
00:48:11,869 --> 00:48:17,028
it we can and I don't know that we ever

844
00:48:14,809 --> 00:48:18,440
would care because the title screens

845
00:48:17,028 --> 00:48:20,900
just probably aren't particularly

846
00:48:18,440 --> 00:48:23,539
interesting in that sense but for the

847
00:48:20,900 --> 00:48:25,818
software renderer you know maybe we

848
00:48:23,539 --> 00:48:27,740
would want to put that in there someday

849
00:48:25,818 --> 00:48:33,288
so that it could kind of say like hey

850
00:48:27,739 --> 00:48:36,048
look this thing really would help if we

851
00:48:33,289 --> 00:48:37,430
didn't have to check a z-buffer so let's

852
00:48:36,048 --> 00:48:39,798
tell it that you don't need to check a

853
00:48:37,429 --> 00:48:44,659
z-buffer for putting these right and so

854
00:48:39,798 --> 00:48:48,159
that that could come into play for

855
00:48:44,659 --> 00:48:49,818
hardware rendering no it's no good

856
00:48:48,159 --> 00:48:51,679
hardware won't care at all

857
00:48:49,818 --> 00:48:54,469
hardware's too fast it's gonna render a

858
00:48:51,679 --> 00:48:56,719
layered cutscene no problem right so I

859
00:48:54,469 --> 00:48:58,998
think that's all we really needed to do

860
00:48:56,719 --> 00:49:00,798
I don't know to what extent this is

861
00:48:58,998 --> 00:49:02,659
working so we have to go ahead and make

862
00:49:00,798 --> 00:49:04,278
sure that it actually is I want to test

863
00:49:02,659 --> 00:49:06,798
both projects to make sure that we

864
00:49:04,278 --> 00:49:08,599
haven't broken anything I also don't

865
00:49:06,798 --> 00:49:14,358
know okay so we have broken something

866
00:49:08,599 --> 00:49:16,609
okay so you were wondering spatial

867
00:49:14,358 --> 00:49:18,699
lighting where is my call stack there it

868
00:49:16,608 --> 00:49:18,699
is

869
00:49:20,170 --> 00:49:27,460
[Music]

870
00:49:22,599 --> 00:49:27,460
inside lighting test who calls that Oh

871
00:49:41,409 --> 00:49:56,659
hmm hmm I say um okay okay well let's

872
00:49:55,489 --> 00:49:58,549
think about this a little bit more

873
00:49:56,659 --> 00:50:01,039
because our lighting is a little bit

874
00:49:58,550 --> 00:50:03,110
oops because I know it's a little bit

875
00:50:01,039 --> 00:50:05,029
janky right now so I hadn't really

876
00:50:03,110 --> 00:50:06,710
considered how that might flow through

877
00:50:05,030 --> 00:50:08,510
the pipeline we may have to make a

878
00:50:06,710 --> 00:50:17,210
little bit of a special concession for

879
00:50:08,510 --> 00:50:21,590
that so looking here the root box is

880
00:50:17,210 --> 00:50:24,349
zero I believe that the root box is zero

881
00:50:21,590 --> 00:50:26,300
because there are no boxes and I believe

882
00:50:24,349 --> 00:50:28,159
the reason there are no boxes is because

883
00:50:26,300 --> 00:50:31,010
we started the render group fresh right

884
00:50:28,159 --> 00:50:33,469
here so I believe what actually has to

885
00:50:31,010 --> 00:50:37,850
happen is this begin render group has to

886
00:50:33,469 --> 00:50:41,089
be moved down in a sense right so for

887
00:50:37,849 --> 00:50:46,940
example in here what we would need to do

888
00:50:41,090 --> 00:50:49,640
is when this you know with this stuff

889
00:50:46,940 --> 00:50:53,990
set up the way that it is the lighting

890
00:50:49,639 --> 00:50:58,129
test actually has to be placed sort of

891
00:50:53,989 --> 00:51:00,729
here unfortunately right so we need to

892
00:50:58,130 --> 00:51:03,320
kind of do that it needs to happen as

893
00:51:00,730 --> 00:51:05,240
something that happens before you close

894
00:51:03,320 --> 00:51:09,670
the render group that you were working

895
00:51:05,239 --> 00:51:09,669
with and

896
00:51:16,800 --> 00:51:22,810
for output lighting points and output

897
00:51:19,989 --> 00:51:26,289
lighting textures I guess I don't

898
00:51:22,809 --> 00:51:29,340
remember when the lighting so the

899
00:51:26,289 --> 00:51:31,360
lighting already got pushed on here

900
00:51:29,340 --> 00:51:33,400
yeah the lighting is kind of a bit

901
00:51:31,360 --> 00:51:34,690
broken we really want to clean up how

902
00:51:33,400 --> 00:51:41,950
that's working because as you can see

903
00:51:34,690 --> 00:51:49,440
it's kind of a little janky here so

904
00:51:41,949 --> 00:51:52,629
really an output lighting textures is

905
00:51:49,440 --> 00:51:59,559
always gonna be done as well so I guess

906
00:51:52,630 --> 00:52:03,160
you just want to do like you can see

907
00:51:59,559 --> 00:52:08,799
this this is very messy you want to do

908
00:52:03,159 --> 00:52:11,829
this I think and then for here you want

909
00:52:08,800 --> 00:52:15,670
to say if you were gonna show the

910
00:52:11,829 --> 00:52:17,739
lighting then you clear everything and

911
00:52:15,670 --> 00:52:25,090
just make a render pass that does

912
00:52:17,739 --> 00:52:28,629
nothing to that right something like

913
00:52:25,090 --> 00:52:30,789
this and again I think that the lighting

914
00:52:28,630 --> 00:52:32,559
is not finished yet right the lighting

915
00:52:30,789 --> 00:52:36,849
is kind of a work in progress so it's

916
00:52:32,559 --> 00:52:38,710
not I don't want to make much of a big

917
00:52:36,849 --> 00:52:40,809
deal about that I want just leave it and

918
00:52:38,710 --> 00:52:48,280
I think that will kind of sort itself

919
00:52:40,809 --> 00:52:51,210
out over time also we don't do we

920
00:52:48,280 --> 00:52:51,210
actually have

921
00:52:55,429 --> 00:53:02,269
I want to take a look what what happens

922
00:53:00,349 --> 00:53:03,769
to for our title screen we haven't

923
00:53:02,269 --> 00:53:05,269
really done that in a while so we should

924
00:53:03,769 --> 00:53:07,000
probably look at that too it looks like

925
00:53:05,269 --> 00:53:09,769
we don't have a clean exit path for that

926
00:53:07,000 --> 00:53:12,039
play title screen what's that going to

927
00:53:09,769 --> 00:53:12,039
do

928
00:53:29,500 --> 00:53:33,699
so I might want to clean these up Lily

929
00:53:32,108 --> 00:53:35,170
could see these are kind of ugly too

930
00:53:33,699 --> 00:53:37,269
we're kind of going down a little bit of

931
00:53:35,170 --> 00:53:39,880
a rat hole here but its a rat hole that

932
00:53:37,269 --> 00:53:41,349
has a rat that's been bothering us so I

933
00:53:39,880 --> 00:53:46,720
feel like it's a hole that you want to

934
00:53:41,349 --> 00:53:49,180
go into to get the rat out of to a

935
00:53:46,719 --> 00:53:52,750
certain extent so if you look at the way

936
00:53:49,179 --> 00:53:55,239
that we've got this set up as far as the

937
00:53:52,750 --> 00:53:57,369
transient state is concerned right oh

938
00:53:55,239 --> 00:54:12,250
hey there's still the main generation ID

939
00:53:57,369 --> 00:54:13,930
there I don't really want that if you

940
00:54:12,250 --> 00:54:18,039
look at the way this is set up we have

941
00:54:13,929 --> 00:54:19,569
like game modes here right and you can

942
00:54:18,039 --> 00:54:22,509
kind of see the different game modes

943
00:54:19,570 --> 00:54:24,609
that we've got each one of these and

944
00:54:22,510 --> 00:54:30,970
they have their arena on it

945
00:54:24,608 --> 00:54:35,429
I don't know like why we still even have

946
00:54:30,969 --> 00:54:39,250
this anymore we don't really need that

947
00:54:35,429 --> 00:54:41,618
and so I do wonder a little bit about

948
00:54:39,250 --> 00:54:45,550
this structure to what extent this is

949
00:54:41,619 --> 00:54:47,140
actually relevant anymore I kind of feel

950
00:54:45,550 --> 00:54:50,349
like it doesn't really need to be there

951
00:54:47,139 --> 00:54:54,338
and we can kind of we could collapse it

952
00:54:50,349 --> 00:54:57,039
down just into something more specific I

953
00:54:54,338 --> 00:54:59,049
mean it cuz it gets they'll stay named

954
00:54:57,039 --> 00:55:07,420
transient State if it wants to but like

955
00:54:59,050 --> 00:55:12,000
really it's just going to be these

956
00:55:07,420 --> 00:55:12,000
pointers and not this

957
00:55:16,329 --> 00:55:20,559
so what to think about that a little bit

958
00:55:20,949 --> 00:55:24,828
but a lot of these things again can be

959
00:55:23,210 --> 00:55:26,690
made simpler now that we know how things

960
00:55:24,829 --> 00:55:31,640
work we can simplify things down into

961
00:55:26,690 --> 00:55:35,210
stuff that doesn't actually require as

962
00:55:31,639 --> 00:55:38,480
much fancy footwork so as far as the

963
00:55:35,210 --> 00:55:41,858
game you know you can see here we've got

964
00:55:38,480 --> 00:55:46,539
this arena stuff for the game state I

965
00:55:41,858 --> 00:55:46,538
feel like that stuff can sort of just be

966
00:55:47,079 --> 00:55:54,589
it Systema sized a little bit more and I

967
00:55:52,429 --> 00:55:57,529
feel like these things like the trainer

968
00:55:54,588 --> 00:55:59,509
like let's just do it I I'm in a clean

969
00:55:57,530 --> 00:56:01,280
up mood let's just get rid of that and I

970
00:55:59,510 --> 00:56:08,839
want to see where what's actually going

971
00:56:01,280 --> 00:56:15,859
in there right so we've got the assets

972
00:56:08,838 --> 00:56:18,250
are going in there the Lighting's going

973
00:56:15,858 --> 00:56:18,250
in there

974
00:56:26,920 --> 00:56:33,349
yeah it's just not much stuff I I I'm

975
00:56:31,159 --> 00:56:35,029
gonna I'm gonna nuke that I know this is

976
00:56:33,349 --> 00:56:36,380
a lot of changes at once and I apologize

977
00:56:35,030 --> 00:56:37,550
but it's just like sometimes if you're

978
00:56:36,380 --> 00:56:39,050
in a cleanup mode and you're cleaning up

979
00:56:37,550 --> 00:56:40,220
the code it's just getting rid of stuff

980
00:56:39,050 --> 00:56:42,170
feels really good because you could

981
00:56:40,219 --> 00:56:45,078
simplify things and make it more

982
00:56:42,170 --> 00:56:47,318
reasonable which is just always fun

983
00:56:45,079 --> 00:56:47,318
right

984
00:56:47,389 --> 00:56:55,098
so okay look also do we actually need

985
00:56:50,088 --> 00:56:59,239
the struct here yeah I don't think so

986
00:56:55,099 --> 00:57:03,140
so let's kind of move along and see

987
00:56:59,239 --> 00:57:06,739
what's actually happening so in here we

988
00:57:03,139 --> 00:57:08,980
are allocating our game assets right and

989
00:57:06,739 --> 00:57:14,989
that we get past the transient state and

990
00:57:08,980 --> 00:57:20,300
we use the transient state to allocate

991
00:57:14,989 --> 00:57:23,868
these sort of temporary buffers right we

992
00:57:20,300 --> 00:57:28,068
don't really need to do that because we

993
00:57:23,869 --> 00:57:30,140
can't now our ability to do temporary

994
00:57:28,068 --> 00:57:34,369
ops is actually a lot better than it

995
00:57:30,139 --> 00:57:37,219
used to be we can just make temporary

996
00:57:34,369 --> 00:57:42,769
memory and have it go away in the middle

997
00:57:37,219 --> 00:57:45,078
of a in the middle of a function pretty

998
00:57:42,769 --> 00:57:46,909
easily right especially in an init

999
00:57:45,079 --> 00:57:51,260
function we wouldn't really need to pass

1000
00:57:46,909 --> 00:57:56,239
a transient Arena there for any of this

1001
00:57:51,260 --> 00:58:02,900
stuff we didn't want to for lighting

1002
00:57:56,239 --> 00:58:09,169
memory the game mode which is you know

1003
00:58:02,900 --> 00:58:11,470
this stuff here I feel like I feel like

1004
00:58:09,170 --> 00:58:15,260
pretty much there should just be a temp

1005
00:58:11,469 --> 00:58:17,298
here so we've got the mode arena I don't

1006
00:58:15,260 --> 00:58:19,460
really know why we probably we broke

1007
00:58:17,298 --> 00:58:21,980
these down a little bit earlier before

1008
00:58:19,460 --> 00:58:25,159
right so I feel like you know these

1009
00:58:21,980 --> 00:58:27,769
arenas can be segmented pretty easily

1010
00:58:25,159 --> 00:58:31,989
here and you could just say look there's

1011
00:58:27,769 --> 00:58:31,989
a temporary arena like this

1012
00:58:38,110 --> 00:58:43,610
and we could say that this just

1013
00:58:41,690 --> 00:58:45,740
automatically gets cleared once per

1014
00:58:43,610 --> 00:58:49,640
frame and then you wouldn't even have to

1015
00:58:45,739 --> 00:58:50,679
bracket the temporary lighting stuff at

1016
00:58:49,639 --> 00:58:54,079
all

1017
00:58:50,679 --> 00:58:57,889
right you could just say like oh okay

1018
00:58:54,079 --> 00:59:01,759
you know the gamestate a it just uses

1019
00:58:57,889 --> 00:59:04,069
the frame arena for that and off you go

1020
00:59:01,760 --> 00:59:06,050
I assume we know the game stayed in here

1021
00:59:04,070 --> 00:59:09,170
because yeah we would have to the

1022
00:59:06,050 --> 00:59:12,140
transient State on the other hand I

1023
00:59:09,170 --> 00:59:16,940
don't even know what that's for is it

1024
00:59:12,139 --> 00:59:18,980
just for the asset pointer I guess it's

1025
00:59:16,940 --> 00:59:20,840
for the queues and stuff so really that

1026
00:59:18,980 --> 00:59:23,269
becomes more of a work distribution

1027
00:59:20,840 --> 00:59:24,980
thing you know what I mean this this

1028
00:59:23,269 --> 00:59:27,559
will probably not be called transient

1029
00:59:24,980 --> 00:59:28,849
state eventually is what it's looking

1030
00:59:27,559 --> 00:59:33,949
like to me because it won't really be

1031
00:59:28,849 --> 00:59:38,449
necessary um so when we do allocate game

1032
00:59:33,949 --> 00:59:40,489
assets I'm interested to know is who I

1033
00:59:38,449 --> 00:59:41,839
want to skip that for now because I'm

1034
00:59:40,489 --> 00:59:44,089
interested to know who calls that and

1035
00:59:41,840 --> 00:59:47,420
what what I want to do exactly that but

1036
00:59:44,090 --> 00:59:50,420
we can get rid of this now and similarly

1037
00:59:47,420 --> 00:59:53,599
like most of this stuff that's that's

1038
00:59:50,420 --> 00:59:56,090
being put on that temporary arena like

1039
00:59:53,599 --> 00:59:59,029
it can just it doesn't really need to be

1040
00:59:56,090 --> 01:00:02,180
doing that anymore right okay let me

1041
00:59:59,030 --> 01:00:05,120
just take a look what else we got so in

1042
01:00:02,179 --> 01:00:07,909
terms of the world Sims here right same

1043
01:00:05,119 --> 01:00:10,309
deal so that transient arena this can

1044
01:00:07,909 --> 01:00:12,230
just be the frame arena and similarly

1045
01:00:10,309 --> 01:00:14,690
like again it doesn't really have to be

1046
01:00:12,230 --> 01:00:17,179
cleared like it could be but doesn't

1047
01:00:14,690 --> 01:00:23,630
have to be so you know if you wanted to

1048
01:00:17,179 --> 01:00:26,149
have begin sim and sim not really reset

1049
01:00:23,630 --> 01:00:28,400
that memory it totally could I also

1050
01:00:26,150 --> 01:00:32,650
don't know to what extent it actually

1051
01:00:28,400 --> 01:00:32,650
already automatically does that

1052
01:00:46,010 --> 01:01:06,410
so the sim arena it doesn't really

1053
01:00:59,019 --> 01:01:18,530
bracket that so this does right here

1054
01:01:06,409 --> 01:01:20,739
because it knows the can yeah and off

1055
01:01:18,530 --> 01:01:20,740
you go

1056
01:01:32,369 --> 01:01:39,159
so if we wanted to we could make this

1057
01:01:36,730 --> 01:01:46,900
even more aggressive and not even have

1058
01:01:39,159 --> 01:01:49,359
that and not even have that clear until

1059
01:01:46,900 --> 01:01:51,280
the end of the frame I don't know that

1060
01:01:49,360 --> 01:01:53,559
we want to do that but there are reasons

1061
01:01:51,280 --> 01:01:55,390
we might want to do that eventually like

1062
01:01:53,559 --> 01:02:00,579
if we don't if we want to be able to

1063
01:01:55,389 --> 01:02:03,279
access stuff and know that it lasts for

1064
01:02:00,579 --> 01:02:05,500
the entire frame we could start actually

1065
01:02:03,280 --> 01:02:16,830
just not clearing that arena at all

1066
01:02:05,500 --> 01:02:16,829
right and that's kind of interesting

1067
01:02:34,360 --> 01:02:36,990
yeah

1068
01:02:38,489 --> 01:02:55,479
so let me inspect this a little bit so

1069
01:02:53,710 --> 01:03:03,460
what I would like to do here I guess to

1070
01:02:55,480 --> 01:03:05,829
is say okay so when we do when we come

1071
01:03:03,460 --> 01:03:07,960
in here to game update and render when

1072
01:03:05,829 --> 01:03:13,110
we actually have a functioning game

1073
01:03:07,960 --> 01:03:25,240
state what I'd like to do is make sure

1074
01:03:13,110 --> 01:03:27,970
that we end up with we end up with

1075
01:03:25,239 --> 01:03:31,869
something yeah so like the transient

1076
01:03:27,969 --> 01:03:33,489
state doesn't really need to be done in

1077
01:03:31,869 --> 01:03:39,759
the way that it's being done at the

1078
01:03:33,489 --> 01:03:42,699
moment right yeah so what I'd like to do

1079
01:03:39,760 --> 01:03:45,730
here is once we actually have the game

1080
01:03:42,699 --> 01:03:51,250
mode going whatever the game with

1081
01:03:45,730 --> 01:03:52,539
whatever this game state is here I'd

1082
01:03:51,250 --> 01:03:56,829
like to go ahead and say all right

1083
01:03:52,539 --> 01:04:03,570
that game state arena is just gonna be

1084
01:03:56,829 --> 01:04:03,569
like it's gonna be snapped

1085
01:04:11,360 --> 01:04:15,829
as a begin temporary right

1086
01:04:20,150 --> 01:04:38,670
and then we will clear it at the end

1087
01:04:24,300 --> 01:04:43,620
before we conclude and the render memory

1088
01:04:38,670 --> 01:04:48,389
is not gonna be a thing like that goes

1089
01:04:43,619 --> 01:04:50,369
away and so now anyone who wants to use

1090
01:04:48,389 --> 01:04:54,269
the frame arena for rendering should

1091
01:04:50,369 --> 01:04:56,969
just go ahead and do so and that's gonna

1092
01:04:54,269 --> 01:04:59,429
be cleared every frame I'm also gonna

1093
01:04:56,969 --> 01:05:02,579
assert that the frame arena has nothing

1094
01:04:59,429 --> 01:05:04,019
in it so like I should be able to do

1095
01:05:02,579 --> 01:05:08,610
that right by looking at the memory

1096
01:05:04,019 --> 01:05:14,820
arena and seeing if the platform memory

1097
01:05:08,610 --> 01:05:17,670
block is there I assume that once we

1098
01:05:14,820 --> 01:05:25,890
clear I don't know if we really give

1099
01:05:17,670 --> 01:05:30,650
those blocks back we do so basically I

1100
01:05:25,889 --> 01:05:30,650
can assert that the frame arena tent I

1101
01:05:33,800 --> 01:05:43,190
can assert that the current block has

1102
01:05:36,030 --> 01:05:43,190
nothing in it right

1103
01:05:44,588 --> 01:05:51,828
so yeah continuing down that road having

1104
01:05:48,909 --> 01:05:54,078
the transient thing have an arena is

1105
01:05:51,829 --> 01:05:56,329
really now only relevant because it

1106
01:05:54,079 --> 01:05:58,220
wants to allocate one of these transient

1107
01:05:56,329 --> 01:06:01,160
stay things but I really don't care

1108
01:05:58,219 --> 01:06:04,488
about that

1109
01:06:01,159 --> 01:06:06,618
and furthermore I don't really like the

1110
01:06:04,489 --> 01:06:08,298
way the game mode thing is working here

1111
01:06:06,619 --> 01:06:13,608
because we can't have multiple of them

1112
01:06:08,298 --> 01:06:24,949
which is a little weird so really yeah

1113
01:06:13,608 --> 01:06:26,748
like it's not fabulous I guess is what

1114
01:06:24,949 --> 01:06:29,028
I'm saying

1115
01:06:26,748 --> 01:06:31,548
I don't I don't love how this ended up

1116
01:06:29,028 --> 01:06:35,960
because I feel like we want the game

1117
01:06:31,548 --> 01:06:38,150
mode to have its own arenas like this

1118
01:06:35,960 --> 01:06:40,608
mode arena should be owned by whoever is

1119
01:06:38,150 --> 01:06:42,079
in here so that we can have multiple of

1120
01:06:40,608 --> 01:06:44,538
these exist at the same time if we

1121
01:06:42,079 --> 01:06:48,470
wanted to you know there's no real

1122
01:06:44,539 --> 01:06:50,569
reason not to do that and so you know

1123
01:06:48,469 --> 01:06:54,788
the place where these get their memory

1124
01:06:50,568 --> 01:06:58,369
from should really be coming from a more

1125
01:06:54,789 --> 01:07:00,829
specific place and then this stuff just

1126
01:06:58,369 --> 01:07:04,970
gets flattened together right so game

1127
01:07:00,829 --> 01:07:07,190
state just has this stuff in it there's

1128
01:07:04,969 --> 01:07:10,449
no point to this stuff right like this

1129
01:07:07,190 --> 01:07:10,450
would just come down here

1130
01:07:18,108 --> 01:07:24,230
and everyone just uses the gamestate for

1131
01:07:20,900 --> 01:07:26,269
that and then the game-mode itself it

1132
01:07:24,230 --> 01:07:28,159
can have its own arena in there that

1133
01:07:26,269 --> 01:07:32,480
would just get cleared out when it's

1134
01:07:28,159 --> 01:07:34,639
done you know I'm Sam and we sort of do

1135
01:07:32,480 --> 01:07:36,650
that with this but you couldn't keep

1136
01:07:34,639 --> 01:07:38,929
both of them at that point so you'd

1137
01:07:36,650 --> 01:07:43,460
rather have it so that the game-mode is

1138
01:07:38,929 --> 01:07:46,250
like a flushable thing that you can keep

1139
01:07:43,460 --> 01:07:52,220
around if you wish like this should go

1140
01:07:46,250 --> 01:08:00,889
in there I'm gonna real quick do this we

1141
01:07:52,219 --> 01:08:02,480
don't need that I don't know why we need

1142
01:08:00,889 --> 01:08:06,019
the task with memory up there but that's

1143
01:08:02,480 --> 01:08:09,230
okay maybe cuz gets used in there so I'm

1144
01:08:06,019 --> 01:08:12,588
gonna go ahead and say that whenever we

1145
01:08:09,230 --> 01:08:14,690
look at you know stuff like this that

1146
01:08:12,588 --> 01:08:16,789
operation lock do we even know if the

1147
01:08:14,690 --> 01:08:18,500
operation lock should be on there and

1148
01:08:16,789 --> 01:08:21,259
not on the assets like I don't know if

1149
01:08:18,500 --> 01:08:24,880
we even know that really but maybe we do

1150
01:08:21,259 --> 01:08:27,979
but anyway point being inside the assets

1151
01:08:24,880 --> 01:08:29,869
structure we can really just store the

1152
01:08:27,979 --> 01:08:31,579
gamestate pointer than if that's what we

1153
01:08:29,869 --> 01:08:33,559
really need although let's take a look

1154
01:08:31,579 --> 01:08:40,039
at everyone who calls on the operation

1155
01:08:33,560 --> 01:08:44,270
lock so the operation lock is only

1156
01:08:40,039 --> 01:08:46,548
called on is only called on the assets

1157
01:08:44,270 --> 01:08:48,710
anyway so that's yeah okay fantastic

1158
01:08:46,548 --> 01:08:50,838
so that is just dumb to begin with right

1159
01:08:48,710 --> 01:08:51,949
that should not have been in here that's

1160
01:08:50,838 --> 01:08:54,079
probably because of again old

1161
01:08:51,949 --> 01:08:55,939
architectural things so this is pretty

1162
01:08:54,079 --> 01:08:57,859
great like there's a lot of stuff we can

1163
01:08:55,939 --> 01:08:59,028
clean up in here and if there is a lot

1164
01:08:57,859 --> 01:09:02,450
of stuff you can clean up then you

1165
01:08:59,029 --> 01:09:04,520
should right so I'm gonna put this in

1166
01:09:02,449 --> 01:09:08,179
here and I'm gonna leave that to do

1167
01:09:04,520 --> 01:09:09,650
because I think we may want to get rid

1168
01:09:08,180 --> 01:09:15,560
of it entirely but anyway point being

1169
01:09:09,649 --> 01:09:19,369
this now can be done thusly I don't know

1170
01:09:15,560 --> 01:09:21,380
why this wasn't marked volatile probably

1171
01:09:19,369 --> 01:09:24,380
because you only ever use it in an

1172
01:09:21,380 --> 01:09:25,579
atomic compare exchange which will treat

1173
01:09:24,380 --> 01:09:27,250
it as volatile but I'm just gonna mark

1174
01:09:25,579 --> 01:09:38,259
it that way just so everyone know

1175
01:09:27,250 --> 01:09:40,298
is that it is so in here I think the low

1176
01:09:38,259 --> 01:09:42,338
priority queue needs to be accessible so

1177
01:09:40,298 --> 01:09:44,979
the assets would have to be able to get

1178
01:09:42,338 --> 01:09:49,149
back to the game State there I can leave

1179
01:09:44,979 --> 01:09:51,929
this in here because I am still not

1180
01:09:49,149 --> 01:09:51,929
thrilled about it

1181
01:10:05,609 --> 01:10:17,380
any chance you're gonna give me begin

1182
01:10:08,199 --> 01:10:23,260
tasks with memory probably not huh so

1183
01:10:17,380 --> 01:10:29,560
this is just game state and actually

1184
01:10:23,260 --> 01:10:35,289
trans State oops trans state and game

1185
01:10:29,560 --> 01:10:40,320
state here just the same and really this

1186
01:10:35,289 --> 01:10:40,319
is going to be the same everywhere

1187
01:10:49,170 --> 01:11:00,489
so this transient estate here in the

1188
01:10:52,899 --> 01:11:07,539
memory structure this is just that and

1189
01:11:00,489 --> 01:11:11,500
inside handmade H you can see kind of

1190
01:11:07,539 --> 01:11:13,449
why this change occurs right the reason

1191
01:11:11,500 --> 01:11:15,159
that the change occurs is because we now

1192
01:11:13,449 --> 01:11:17,439
have the ability to articulate from the

1193
01:11:15,159 --> 01:11:19,479
game to the platform layer what isn't is

1194
01:11:17,439 --> 01:11:22,079
not transient before it was the other

1195
01:11:19,479 --> 01:11:25,719
way around the platform layer

1196
01:11:22,079 --> 01:11:27,609
articulated forwards what that was

1197
01:11:25,720 --> 01:11:30,070
whereas now we just say when we create

1198
01:11:27,609 --> 01:11:32,349
an arena is it restored or isn't it you

1199
01:11:30,069 --> 01:11:35,949
know what I mean so now you don't need

1200
01:11:32,350 --> 01:11:37,360
to pass information about what is the

1201
01:11:35,949 --> 01:11:39,760
transient state and what is the game

1202
01:11:37,359 --> 01:11:43,809
state that's not necessary

1203
01:11:39,760 --> 01:11:47,350
right so this is not necessary you only

1204
01:11:43,810 --> 01:11:49,720
need that and then the arena's

1205
01:11:47,350 --> 01:11:55,450
themselves say whether or not they were

1206
01:11:49,720 --> 01:11:57,640
restored per block so yeah you know it's

1207
01:11:55,449 --> 01:12:04,920
just again six of one half dozen at the

1208
01:11:57,640 --> 01:12:04,920
other but now we got to do some type in

1209
01:12:10,869 --> 01:12:27,619
particularly now okay

1210
01:12:23,930 --> 01:12:32,180
so put on your track shoes or track

1211
01:12:27,619 --> 01:12:36,260
finger tip something and just replace

1212
01:12:32,180 --> 01:12:37,579
these as we go eventually we might be

1213
01:12:36,260 --> 01:12:39,619
able to figure out what to do with those

1214
01:12:37,579 --> 01:12:41,449
low part accuse maybe they get stuck on

1215
01:12:39,619 --> 01:12:43,369
the asset system permanently you know

1216
01:12:41,449 --> 01:12:46,789
for all I know that's that's entirely

1217
01:12:43,369 --> 01:12:48,859
feasible as a potential thing you know

1218
01:12:46,789 --> 01:12:54,220
maybe that stuff can be made clearer

1219
01:12:48,859 --> 01:12:54,219
will certainly see but oops

1220
01:12:58,159 --> 01:13:08,180
for right now I just have to okay so

1221
01:13:03,859 --> 01:13:11,539
this is actually as far as the arena's

1222
01:13:08,180 --> 01:13:17,200
are concerned here you can see that we

1223
01:13:11,539 --> 01:13:17,199
have our non restored memory and then we

1224
01:13:17,229 --> 01:13:24,049
we sort of create all of our stuff in

1225
01:13:21,380 --> 01:13:26,060
the non restored memory pool for our

1226
01:13:24,050 --> 01:13:28,930
assets because it doesn't get saved to

1227
01:13:26,060 --> 01:13:28,930
disk right

1228
01:13:41,090 --> 01:13:54,300
so for these these are just places where

1229
01:13:43,890 --> 01:13:57,030
we temporarily push something on and we

1230
01:13:54,300 --> 01:14:03,710
don't do any allocations in here at all

1231
01:13:57,029 --> 01:14:03,710
right well we come through here

1232
01:14:03,770 --> 01:14:11,190
so these want to be done in a in a

1233
01:14:08,670 --> 01:14:13,859
temporary way and so I guess I will just

1234
01:14:11,189 --> 01:14:14,969
say these are going to be you know

1235
01:14:13,859 --> 01:14:18,449
they're just going to use that frame

1236
01:14:14,970 --> 01:14:20,840
arena because we don't care what happens

1237
01:14:18,449 --> 01:14:20,840
to them

1238
01:14:32,029 --> 01:14:36,029
and I feel like this stuff can be

1239
01:14:34,050 --> 01:14:38,579
simplified down quite a bit it's just a

1240
01:14:36,029 --> 01:14:40,408
unfortunate thing of untangling a little

1241
01:14:38,578 --> 01:14:41,849
bit of how we were doing it originally

1242
01:14:40,408 --> 01:14:44,538
that we don't really need to do anymore

1243
01:14:41,849 --> 01:14:44,538
right

1244
01:14:57,960 --> 01:15:07,880
um create worlds show me create worlds I

1245
01:15:14,659 --> 01:15:23,250
don't actually know what create world

1246
01:15:21,239 --> 01:15:26,069
needs to do does it actually use this it

1247
01:15:23,250 --> 01:15:30,529
doesn't so really create worlds can just

1248
01:15:26,069 --> 01:15:30,529
be that looks like

1249
01:15:42,039 --> 01:15:45,238
[Music]

1250
01:15:49,840 --> 01:16:00,020
okay so this stuff is a lot of pretty

1251
01:15:53,868 --> 01:16:05,448
wrote that these can get rid of these

1252
01:16:00,020 --> 01:16:16,489
things entirely just again simplifies

1253
01:16:05,448 --> 01:16:19,339
things and this is really all I am

1254
01:16:16,488 --> 01:16:21,948
literally doing is just getting rid of

1255
01:16:19,340 --> 01:16:23,960
that separation because now the arena's

1256
01:16:21,948 --> 01:16:25,939
remember that separation internally

1257
01:16:23,960 --> 01:16:37,939
which is just a feature we just didn't

1258
01:16:25,939 --> 01:16:38,988
have originally right and there's a

1259
01:16:37,939 --> 01:16:40,698
couple other things we're gonna have to

1260
01:16:38,988 --> 01:16:44,359
do in terms of making sure the code

1261
01:16:40,698 --> 01:16:46,839
reloading works but otherwise it should

1262
01:16:44,359 --> 01:16:46,839
be pretty simple

1263
01:16:55,069 --> 01:16:58,869
what's going on why aren't we jumping

1264
01:17:26,039 --> 01:17:30,639
sorry this is kind of just taking a

1265
01:17:28,750 --> 01:17:34,829
while and is going to be boring that's

1266
01:17:30,639 --> 01:17:34,829
just the nature of pulling something out

1267
01:17:35,368 --> 01:17:46,149
it's easy to do but you know not

1268
01:17:41,500 --> 01:17:57,090
particularly exciting especially since

1269
01:17:46,149 --> 01:18:00,098
most people were past this thing so we

1270
01:17:57,090 --> 01:18:03,369
in terms of debug get game assets we can

1271
01:18:00,099 --> 01:18:04,630
really just do this yeah and get it that

1272
01:18:03,368 --> 01:18:06,339
way that's what I meant to do before I

1273
01:18:04,630 --> 01:18:08,460
just didn't change the actual point of

1274
01:18:06,340 --> 01:18:08,460
there

1275
01:18:33,010 --> 01:18:43,550
so yeah so for this we don't care about

1276
01:18:40,340 --> 01:18:46,720
this at all so it should be sufficient

1277
01:18:43,550 --> 01:18:46,720
to do this

1278
01:18:47,130 --> 01:18:50,220
[Music]

1279
01:18:50,770 --> 01:19:16,160
this stuff is all not what we want and

1280
01:18:58,180 --> 01:19:17,869
this is just basic very simple basics so

1281
01:19:16,159 --> 01:19:19,819
the only thing that's a little annoying

1282
01:19:17,869 --> 01:19:23,210
is that when we allocate the game assets

1283
01:19:19,819 --> 01:19:25,549
we would like to do so I am gonna go

1284
01:19:23,210 --> 01:19:27,920
ahead and just make this do an end

1285
01:19:25,550 --> 01:19:33,380
temporary here just to make sure that it

1286
01:19:27,920 --> 01:19:37,659
has something it can use basically to

1287
01:19:33,380 --> 01:19:40,600
get rid of whatever it's you know

1288
01:19:37,659 --> 01:19:43,939
happens to use this temporary memory

1289
01:19:40,600 --> 01:19:46,070
although I suppose it's I think about it

1290
01:19:43,939 --> 01:19:47,599
I suppose it actually is doing that

1291
01:19:46,069 --> 01:19:50,139
itself so I suppose I don't really even

1292
01:19:47,600 --> 01:19:50,140
need to do that

1293
01:19:57,989 --> 01:20:05,460
now the key game assets presumably also

1294
01:20:09,569 --> 01:20:14,349
presumably also this stuff can go now

1295
01:20:12,430 --> 01:20:16,119
because since we have grobel arenas we

1296
01:20:14,350 --> 01:20:19,630
don't really need to lock a maximum size

1297
01:20:16,119 --> 01:20:21,359
on that either

1298
01:20:19,630 --> 01:20:29,680
[Music]

1299
01:20:21,359 --> 01:20:33,579
yeah there's a lot of stuff we could

1300
01:20:29,680 --> 01:20:35,170
simplify now because the arena's are

1301
01:20:33,579 --> 01:20:56,729
just a lot more powerful than they used

1302
01:20:35,170 --> 01:20:56,730
to be think that should mostly do it

1303
01:21:10,840 --> 01:21:13,440
yeah

1304
01:21:32,579 --> 01:21:41,170
so I don't actually know yeah I don't

1305
01:21:39,399 --> 01:21:43,960
actually know how we want to proceed on

1306
01:21:41,170 --> 01:21:48,010
this but we'll kind of play it by ear so

1307
01:21:43,960 --> 01:21:51,579
at this point now we have the we sort of

1308
01:21:48,010 --> 01:21:54,789
have the transient arena as merged in

1309
01:21:51,579 --> 01:21:57,670
now with our frame and the problem that

1310
01:21:54,789 --> 01:22:01,899
we're gonna have is that now we just

1311
01:21:57,670 --> 01:22:06,539
need to make sure that our sort of coat

1312
01:22:01,899 --> 01:22:12,369
our memory flashing will work properly

1313
01:22:06,539 --> 01:22:17,859
when we reload things so if we go back

1314
01:22:12,369 --> 01:22:21,819
to the win32 side of things when you're

1315
01:22:17,859 --> 01:22:22,420
in the platform this game memory stuff

1316
01:22:21,819 --> 01:22:25,449
right

1317
01:22:22,420 --> 01:22:27,940
we don't really provide anything

1318
01:22:25,449 --> 01:22:31,719
specific with game memory anymore on the

1319
01:22:27,939 --> 01:22:34,619
win32 side of things so if you look at

1320
01:22:31,719 --> 01:22:36,969
game state right we never touch it and

1321
01:22:34,619 --> 01:22:39,309
the reason for that is the fat

1322
01:22:36,969 --> 01:22:45,130
allocation is something that happens

1323
01:22:39,310 --> 01:22:47,830
inside like that's something that

1324
01:22:45,130 --> 01:22:51,699
happens inside the game and gets set

1325
01:22:47,829 --> 01:22:55,630
there as something that the game you

1326
01:22:51,699 --> 01:22:58,029
know cares about right so in terms of

1327
01:22:55,630 --> 01:23:01,319
what we need to make sure work when you

1328
01:22:58,029 --> 01:23:04,429
do something like loop life code editing

1329
01:23:01,319 --> 01:23:04,429
[Music]

1330
01:23:04,890 --> 01:23:10,270
in theory what we've got now would kind

1331
01:23:08,500 --> 01:23:15,250
of just work but there are some issues

1332
01:23:10,270 --> 01:23:19,060
with it like as far as the as far as

1333
01:23:15,250 --> 01:23:20,649
anything that's non restored so if we

1334
01:23:19,060 --> 01:23:22,690
look here and we look at what's non

1335
01:23:20,649 --> 01:23:24,819
restored you can see that it's like only

1336
01:23:22,689 --> 01:23:27,289
the asset system that is non restored

1337
01:23:24,819 --> 01:23:30,469
memory and so what happened

1338
01:23:27,289 --> 01:23:33,399
is anytime this stuff is doing anything

1339
01:23:30,470 --> 01:23:35,930
it's going into the non restored pool

1340
01:23:33,399 --> 01:23:38,359
what that means is that all of the

1341
01:23:35,930 --> 01:23:42,010
things in the game asset structure that

1342
01:23:38,359 --> 01:23:45,229
get allocated into the non restored pool

1343
01:23:42,010 --> 01:23:47,480
themselves should not actually get

1344
01:23:45,229 --> 01:23:49,849
restored either so the game asset

1345
01:23:47,479 --> 01:23:55,250
pointer needs to not get restored

1346
01:23:49,850 --> 01:23:58,070
it needs to stay the same if that's

1347
01:23:55,250 --> 01:24:01,279
actually true which it looks like it is

1348
01:23:58,069 --> 01:24:04,189
in most cases then we should be okay

1349
01:24:01,279 --> 01:24:04,729
because it won't restore any of this at

1350
01:24:04,189 --> 01:24:07,129
all

1351
01:24:04,729 --> 01:24:11,149
so the fact that it's all non-responder

1352
01:24:07,130 --> 01:24:13,579
stored memory should be fine I don't

1353
01:24:11,149 --> 01:24:15,769
know if the tasks cause a problem I

1354
01:24:13,579 --> 01:24:17,420
think we shut down all running tasks

1355
01:24:15,770 --> 01:24:22,370
before we start so in theory that should

1356
01:24:17,420 --> 01:24:25,310
be fine too but I'm not 100% sure so I

1357
01:24:22,369 --> 01:24:27,319
want to check so let's start with some

1358
01:24:25,310 --> 01:24:32,420
basics to see if we work at all

1359
01:24:27,319 --> 01:24:36,229
right so here we are in the the game and

1360
01:24:32,420 --> 01:24:38,270
I'm gonna go into the world mode and

1361
01:24:36,229 --> 01:24:40,219
just play like I'll change the clear

1362
01:24:38,270 --> 01:24:45,890
color or something right just to make

1363
01:24:40,220 --> 01:24:48,530
sure that we can reload this background

1364
01:24:45,890 --> 01:24:51,950
color here so just to make sure that we

1365
01:24:48,529 --> 01:24:53,719
can reload this I'm gonna set the

1366
01:24:51,949 --> 01:24:56,210
background color to be like some kind of

1367
01:24:53,720 --> 01:25:00,260
red or something and just see whether it

1368
01:24:56,210 --> 01:25:00,920
reloads properly and doesn't grind to a

1369
01:25:00,260 --> 01:25:02,539
screaming halt

1370
01:25:00,920 --> 01:25:03,529
right and it didn't it didn't flash the

1371
01:25:02,539 --> 01:25:06,109
screen either so you could tell the

1372
01:25:03,529 --> 01:25:11,719
assets were non reloaded I'm gonna do it

1373
01:25:06,109 --> 01:25:17,469
again again looks pretty clear I'm gonna

1374
01:25:11,720 --> 01:25:17,470
switch to debug from debug to release

1375
01:25:19,659 --> 01:25:24,769
there's our framerate jump and that all

1376
01:25:22,670 --> 01:25:26,779
seems good I should try a loop I don't

1377
01:25:24,770 --> 01:25:28,960
remember how to do a loop but let's try

1378
01:25:26,779 --> 01:25:28,960
one

1379
01:25:46,109 --> 01:25:49,649
and as far as memory blocks are

1380
01:25:47,520 --> 01:25:53,220
concerned I don't really

1381
01:25:49,649 --> 01:25:54,359
also remember so one of the things that

1382
01:25:53,220 --> 01:25:56,250
we have had a problem with and you could

1383
01:25:54,359 --> 01:25:58,859
see it there is our debug system is not

1384
01:25:56,250 --> 01:26:01,109
very good at avoiding string usage

1385
01:25:58,859 --> 01:26:03,630
that's in the unrelated blocks one thing

1386
01:26:01,109 --> 01:26:07,500
that some people do and we could do is

1387
01:26:03,630 --> 01:26:08,760
just not unload the DLLs and you get

1388
01:26:07,500 --> 01:26:10,560
into a little bit of a problem there

1389
01:26:08,760 --> 01:26:12,270
where if you'd never unload dll's maybe

1390
01:26:10,560 --> 01:26:15,750
eventually get too many dll's or

1391
01:26:12,270 --> 01:26:19,730
something but it would be nice if we

1392
01:26:15,750 --> 01:26:22,020
could avoid having to do that right like

1393
01:26:19,729 --> 01:26:23,969
so one thing we might consider doing

1394
01:26:22,020 --> 01:26:26,160
there is just getting rid of that

1395
01:26:23,970 --> 01:26:27,630
because this part this stuff doesn't

1396
01:26:26,159 --> 01:26:29,939
really work correctly with that because

1397
01:26:27,630 --> 01:26:31,650
specifically we aren't careful enough

1398
01:26:29,939 --> 01:26:35,279
about making sure our strings get copied

1399
01:26:31,649 --> 01:26:37,049
right anyway that's neither here nor

1400
01:26:35,279 --> 01:26:39,899
there I just wanted to make sure that

1401
01:26:37,050 --> 01:26:44,730
was okay and it all is looks like at the

1402
01:26:39,899 --> 01:26:46,289
moment so that's fine now let's go back

1403
01:26:44,729 --> 01:26:48,869
to debugging what I wanted to bug before

1404
01:26:46,289 --> 01:26:52,529
which is how those cutscenes are working

1405
01:26:48,869 --> 01:26:54,260
if those cutscenes are working so going

1406
01:26:52,529 --> 01:26:58,529
in here you can see we get a problem

1407
01:26:54,260 --> 01:26:59,909
we've got a render group this oh just to

1408
01:26:58,529 --> 01:27:01,979
be clear since you can't see that forgot

1409
01:26:59,909 --> 01:27:07,889
you can't see what I'm doing when I hit

1410
01:27:01,979 --> 01:27:09,539
escape on the keyboard you end up going

1411
01:27:07,890 --> 01:27:10,829
through a code path that puts us out to

1412
01:27:09,539 --> 01:27:14,100
cutscene mode which we haven't

1413
01:27:10,829 --> 01:27:16,079
maintained and we should it was just

1414
01:27:14,100 --> 01:27:20,160
been in there kind of sitting around it

1415
01:27:16,079 --> 01:27:22,140
doesn't get used but we should and so

1416
01:27:20,159 --> 01:27:27,149
what I wanted to do was if you look here

1417
01:27:22,140 --> 01:27:29,880
if we hit escape what's gonna happen is

1418
01:27:27,149 --> 01:27:31,619
the it's gonna delete the player who hit

1419
01:27:29,880 --> 01:27:33,539
escape and there's only one player in

1420
01:27:31,619 --> 01:27:34,859
the game if you know we can put in more

1421
01:27:33,539 --> 01:27:37,199
than one player and then it wouldn't but

1422
01:27:34,859 --> 01:27:38,429
if we hit escape we get rid of the

1423
01:27:37,199 --> 01:27:40,229
player in the game and so then it'll

1424
01:27:38,430 --> 01:27:41,909
switch to the title screen here so I can

1425
01:27:40,229 --> 01:27:44,099
show you that happening I hit escape

1426
01:27:41,909 --> 01:27:45,899
we're gonna go to play title screen and

1427
01:27:44,100 --> 01:27:48,900
play title screen is gonna go to set

1428
01:27:45,899 --> 01:27:51,509
game mode so what that does right is it

1429
01:27:48,899 --> 01:27:52,649
looks here to see if there are tasks

1430
01:27:51,510 --> 01:27:54,119
that we're still running that our

1431
01:27:52,649 --> 01:27:56,879
opponent of game mode again that's

1432
01:27:54,119 --> 01:27:59,609
something we could probably fix by by

1433
01:27:56,880 --> 01:28:02,819
striding those things if we need to wait

1434
01:27:59,609 --> 01:28:04,349
we look and well okay I probably

1435
01:28:02,819 --> 01:28:09,539
shouldn't have hit run because you

1436
01:28:04,350 --> 01:28:11,789
jumped over that let's try it again so

1437
01:28:09,539 --> 01:28:14,159
there is no work that had to get done so

1438
01:28:11,789 --> 01:28:18,210
it comes up here and it's gonna clear

1439
01:28:14,159 --> 01:28:21,479
the mode arena for this game mode there

1440
01:28:18,210 --> 01:28:23,369
it goes and then it's gonna switch the

1441
01:28:21,479 --> 01:28:27,949
game mode to a different game mode right

1442
01:28:23,369 --> 01:28:36,689
and the problem with that is again like

1443
01:28:27,949 --> 01:28:39,599
when we actually go then to when we go

1444
01:28:36,689 --> 01:28:42,809
to render the actual frame so when the

1445
01:28:39,600 --> 01:28:45,360
render commands get issued they're bogus

1446
01:28:42,810 --> 01:28:47,160
because some of them are pointing into

1447
01:28:45,359 --> 01:28:52,859
something that actually exists on the

1448
01:28:47,159 --> 01:29:02,460
world mode stack right it's it's

1449
01:28:52,859 --> 01:29:03,989
actually here so to be honest fixing

1450
01:29:02,460 --> 01:29:06,420
that the way that that should have

1451
01:29:03,989 --> 01:29:10,079
happened is the lighting textures should

1452
01:29:06,420 --> 01:29:15,140
actually come back from the push so

1453
01:29:10,079 --> 01:29:19,529
really that's just kind of a screw up in

1454
01:29:15,140 --> 01:29:22,500
general so I don't think I want to fix

1455
01:29:19,529 --> 01:29:24,809
this by going down the game mode route

1456
01:29:22,500 --> 01:29:27,239
yet I'm happy we got rid of the

1457
01:29:24,810 --> 01:29:28,860
transient Arina it wasn't none of that

1458
01:29:27,239 --> 01:29:31,319
stuff Ness was needed to be in there

1459
01:29:28,859 --> 01:29:33,179
really any more because our arenas are

1460
01:29:31,319 --> 01:29:35,689
smarter than they used to be and could

1461
01:29:33,180 --> 01:29:35,690
do that themselves

1462
01:29:35,899 --> 01:29:43,319
but this is not proper

1463
01:29:39,510 --> 01:29:46,500
this should come back from the render

1464
01:29:43,319 --> 01:29:48,359
system so these pieces of light data

1465
01:29:46,500 --> 01:29:53,970
should be coming back from the render

1466
01:29:48,359 --> 01:29:55,829
system and and they're not so what we

1467
01:29:53,970 --> 01:29:58,619
want to do is get rid of this like that

1468
01:29:55,829 --> 01:30:02,880
should not be there and anyone who was

1469
01:29:58,619 --> 01:30:03,689
using that needs to stop what I would

1470
01:30:02,880 --> 01:30:05,850
recommend

1471
01:30:03,689 --> 01:30:09,500
is that the test textures so the

1472
01:30:05,850 --> 01:30:09,500
lighting textures here

1473
01:30:10,179 --> 01:30:14,510
those should come back from push

1474
01:30:12,229 --> 01:30:16,309
lighting is what should happen right

1475
01:30:14,510 --> 01:30:20,780
push lighting should give us back the

1476
01:30:16,310 --> 01:30:23,539
police where we write our lighting to

1477
01:30:20,779 --> 01:30:25,279
and we might do that a little bit

1478
01:30:23,539 --> 01:30:27,408
differently in the future but for the

1479
01:30:25,279 --> 01:30:29,149
moment we definitely want the renderer

1480
01:30:27,408 --> 01:30:35,899
to tell us where do we put our lighting

1481
01:30:29,149 --> 01:30:47,750
textures right push lighting should be

1482
01:30:35,899 --> 01:30:50,689
in here summer there is insu in here

1483
01:30:47,750 --> 01:30:52,969
right when when we get this stuff out

1484
01:30:50,689 --> 01:30:55,879
this going onto the temporary nough is

1485
01:30:52,969 --> 01:30:57,800
fine and when we call that push lighting

1486
01:30:55,880 --> 01:30:59,239
call here and we passed a frame arena

1487
01:30:57,800 --> 01:31:02,989
that would work just fine so what we can

1488
01:30:59,238 --> 01:31:06,079
do temporarily is we can just go ahead

1489
01:31:02,988 --> 01:31:08,629
and when we push these on this source

1490
01:31:06,079 --> 01:31:12,529
here I'm just gonna say that's actually

1491
01:31:08,630 --> 01:31:14,690
gonna get allocated itself so that'll

1492
01:31:12,529 --> 01:31:17,149
just be push direct lighting textures

1493
01:31:14,689 --> 01:31:19,698
and we can then play with this later

1494
01:31:17,149 --> 01:31:22,819
but that's exactly what we want there

1495
01:31:19,698 --> 01:31:24,710
something more like this so now that

1496
01:31:22,819 --> 01:31:29,090
will persist properly throughout the

1497
01:31:24,710 --> 01:31:30,618
frame and we just have to do a little

1498
01:31:29,090 --> 01:31:33,650
bit more work to make sure that it's

1499
01:31:30,618 --> 01:31:35,238
actually valid at render time in fact

1500
01:31:33,649 --> 01:31:36,829
yeah I think about this still won't work

1501
01:31:35,238 --> 01:31:39,738
because this frame is clean this is

1502
01:31:36,829 --> 01:31:41,420
cleared before the render finishes so we

1503
01:31:39,738 --> 01:31:45,049
actually want to do that slightly

1504
01:31:41,420 --> 01:31:48,489
differently than we were before so I'll

1505
01:31:45,050 --> 01:31:48,489
show you how we can do that in a second

1506
01:31:48,760 --> 01:31:54,949
alright so I want to return these so

1507
01:31:53,029 --> 01:31:57,609
that they can get pushed onto in that

1508
01:31:54,948 --> 01:31:57,609
temporary arena

1509
01:32:03,099 --> 01:32:16,750
what did I call that light textures like

1510
01:32:14,328 --> 01:32:16,750
so

1511
01:32:25,750 --> 01:32:30,619
okay so those light textures if I run

1512
01:32:29,720 --> 01:32:33,619
out I'm still gonna have the same

1513
01:32:30,619 --> 01:32:35,390
problem which is that they will go away

1514
01:32:33,619 --> 01:32:37,039
only this time they'll definitely go

1515
01:32:35,390 --> 01:32:39,260
away because instead of being allocated

1516
01:32:37,039 --> 01:32:43,579
being in the permanent or they get freed

1517
01:32:39,260 --> 01:32:45,140
right before we exit and the renderer

1518
01:32:43,579 --> 01:32:46,750
hasn't been invoked yet right because

1519
01:32:45,140 --> 01:32:50,930
that gets invoked on the platform side

1520
01:32:46,750 --> 01:32:55,130
but that's really no big deal what we

1521
01:32:50,930 --> 01:32:59,720
can do pretty easily is inside the the

1522
01:32:55,130 --> 01:33:02,750
handmade CTP code right we have two

1523
01:32:59,720 --> 01:33:05,000
choices we can if we want to make the

1524
01:33:02,750 --> 01:33:10,039
frame arena be something who's temporary

1525
01:33:05,000 --> 01:33:12,890
actually lasts one round right so that's

1526
01:33:10,039 --> 01:33:15,640
one option the other option is we just

1527
01:33:12,890 --> 01:33:20,500
get our lighting space passed in to us

1528
01:33:15,640 --> 01:33:20,500
which also seems like a good idea right

1529
01:33:20,529 --> 01:33:24,920
I don't know which one of those I want

1530
01:33:22,880 --> 01:33:27,680
to do let me show you what this would

1531
01:33:24,920 --> 01:33:31,359
look like so what we want to do here is

1532
01:33:27,680 --> 01:33:34,520
say okay the frame arena

1533
01:33:31,359 --> 01:33:38,409
instead of getting cleared here it

1534
01:33:34,520 --> 01:33:40,700
doesn't this is not where that happens

1535
01:33:38,409 --> 01:33:43,130
so the mode arena gets cleared every

1536
01:33:40,699 --> 01:33:46,010
time round but the frame arena actually

1537
01:33:43,130 --> 01:33:50,720
gets cleared only when it goes to get

1538
01:33:46,010 --> 01:33:52,520
used again right and this is then

1539
01:33:50,720 --> 01:33:54,500
something that actually exists in the

1540
01:33:52,520 --> 01:33:57,670
game State and it just gets cleared at a

1541
01:33:54,500 --> 01:33:59,779
strobe point right so it lasts outside

1542
01:33:57,670 --> 01:34:01,539
and we can totally do that

1543
01:33:59,779 --> 01:34:04,399
and it just depends which one we want

1544
01:34:01,539 --> 01:34:06,079
since we don't really need to use this

1545
01:34:04,399 --> 01:34:08,109
for anything else I would lean towards

1546
01:34:06,079 --> 01:34:11,239
moving the lighting into the renderer

1547
01:34:08,109 --> 01:34:13,729
commands buffer proper that seems like a

1548
01:34:11,239 --> 01:34:15,739
better idea but I just want to show how

1549
01:34:13,729 --> 01:34:20,719
we would have done it if we wanted to do

1550
01:34:15,739 --> 01:34:25,550
it here it's not complicated right so

1551
01:34:20,720 --> 01:34:28,159
here what we would do I just realized I

1552
01:34:25,550 --> 01:34:30,739
gotta clear this so I can't call this

1553
01:34:28,159 --> 01:34:35,460
the first time around

1554
01:34:30,738 --> 01:34:42,299
how do I want to you know I probably do

1555
01:34:35,460 --> 01:34:45,239
this so the first time we allocate set

1556
01:34:42,300 --> 01:34:48,630
it up there and that way from then on it

1557
01:34:45,238 --> 01:34:50,789
will always get checked it'll always

1558
01:34:48,630 --> 01:34:53,130
have a clue to always be able to clear

1559
01:34:50,789 --> 01:34:58,079
itself or however you want to and say

1560
01:34:53,130 --> 01:35:01,730
that right so then that structure

1561
01:34:58,079 --> 01:35:04,619
doesn't exist in a bogus place right

1562
01:35:01,729 --> 01:35:08,178
okay so now let's go ahead and try to

1563
01:35:04,619 --> 01:35:14,819
get our title screen stuff working I

1564
01:35:08,179 --> 01:35:16,140
yeah I don't actually know how much work

1565
01:35:14,819 --> 01:35:17,670
it would be to get all those things

1566
01:35:16,140 --> 01:35:20,179
working so I'm gonna take a little look

1567
01:35:17,670 --> 01:35:23,510
at them but I don't promise anything

1568
01:35:20,179 --> 01:35:26,210
because I got to go on time today

1569
01:35:23,510 --> 01:35:29,039
what time is it it's like one o'clock

1570
01:35:26,210 --> 01:35:31,679
one twelve yeah I can't be too late

1571
01:35:29,039 --> 01:35:33,890
today I have something happening later

1572
01:35:31,679 --> 01:35:33,890
today

1573
01:35:41,279 --> 01:35:54,789
should be in the title screen here we're

1574
01:35:44,170 --> 01:35:57,220
not seeing the clear right and that I'm

1575
01:35:54,789 --> 01:35:58,630
not 100% sure if that's just because we

1576
01:35:57,220 --> 01:36:01,449
need to be going through the def peeler

1577
01:35:58,630 --> 01:36:07,359
to see the clear which is kind of a

1578
01:36:01,449 --> 01:36:09,250
slightly slightly different thing I'm

1579
01:36:07,359 --> 01:36:11,069
gonna go ahead and just check that part

1580
01:36:09,250 --> 01:36:20,260
cuz I don't know if that's render

1581
01:36:11,069 --> 01:36:22,029
related or not so this stuff here I'm

1582
01:36:20,260 --> 01:36:32,110
just gonna quickly change this to render

1583
01:36:22,029 --> 01:36:33,399
defaults and same up here instead of

1584
01:36:32,109 --> 01:36:38,109
this I'm gonna change it to render

1585
01:36:33,399 --> 01:36:42,189
default and that's just a check because

1586
01:36:38,109 --> 01:36:44,319
I don't know to what extent the the

1587
01:36:42,189 --> 01:36:45,159
rendering subsystem is doing something

1588
01:36:44,319 --> 01:36:47,859
stupid right now

1589
01:36:45,159 --> 01:36:50,079
and doesn't let sighs yeah so it's just

1590
01:36:47,859 --> 01:36:54,549
that we don't actually support a lack of

1591
01:36:50,079 --> 01:36:57,899
depth peels at the moment so that's I

1592
01:36:54,550 --> 01:37:05,860
think probably where are where we're at

1593
01:36:57,899 --> 01:37:10,689
so yeah the cutscenes seem like they're

1594
01:37:05,859 --> 01:37:12,460
working okay otherwise but we really

1595
01:37:10,689 --> 01:37:16,769
don't need cutscenes to go through the

1596
01:37:12,460 --> 01:37:16,770
depth feeling so I I want to fix that

1597
01:37:35,979 --> 01:37:39,879
yeah this all looks pretty good

1598
01:38:03,319 --> 01:38:07,000
all right let's go to Q&amp;A

1599
01:38:16,170 --> 01:38:23,020
if I use a wrist support while typing

1600
01:38:18,520 --> 01:38:28,900
and using a mouse I do for typing I use

1601
01:38:23,020 --> 01:38:34,660
this in front of the keyboard it's just

1602
01:38:28,899 --> 01:38:37,119
a you know thick sort of foam pad I do

1603
01:38:34,659 --> 01:38:39,340
find it helps I don't use one from

1604
01:38:37,119 --> 01:38:43,479
mousing but that's probably like I don't

1605
01:38:39,340 --> 01:38:50,560
use the mouse that much so I you know

1606
01:38:43,479 --> 01:38:51,849
don't really need one can you go through

1607
01:38:50,560 --> 01:38:53,110
the rendering pipeline briefly again

1608
01:38:51,850 --> 01:38:55,570
what are the render commands and render

1609
01:38:53,109 --> 01:38:57,039
groups what are they used for and when

1610
01:38:55,569 --> 01:38:59,439
do they get initialized then what

1611
01:38:57,039 --> 01:39:01,090
exactly is OpenGL doing with them so

1612
01:38:59,439 --> 01:39:03,399
that's a little bit broad I mean that's

1613
01:39:01,090 --> 01:39:08,380
you know multiple days worth of stuff

1614
01:39:03,399 --> 01:39:10,719
that we've done but briefly render

1615
01:39:08,380 --> 01:39:12,430
commands is a structure that is the

1616
01:39:10,720 --> 01:39:14,800
thing that you provide to the renderer

1617
01:39:12,430 --> 01:39:18,970
whatever it is so it basically gets

1618
01:39:14,800 --> 01:39:21,010
initialized in the platform layer and it

1619
01:39:18,970 --> 01:39:22,570
can be specific to the platform layer so

1620
01:39:21,010 --> 01:39:24,190
you know you can allocate the memory

1621
01:39:22,569 --> 01:39:25,809
wherever you want you can allocate the

1622
01:39:24,189 --> 01:39:29,500
memory in graphics card memory if you

1623
01:39:25,810 --> 01:39:32,740
want you can do whatever you want if the

1624
01:39:29,500 --> 01:39:35,079
platform for that platform right that

1625
01:39:32,739 --> 01:39:38,109
gets passed to the game and render

1626
01:39:35,079 --> 01:39:40,750
groups are then buckets of commands that

1627
01:39:38,109 --> 01:39:42,849
go into the render command structure but

1628
01:39:40,750 --> 01:39:45,130
the render group is just a utility

1629
01:39:42,850 --> 01:39:46,900
struct you use to not have to store

1630
01:39:45,130 --> 01:39:49,510
stuff like where in the render commands

1631
01:39:46,899 --> 01:39:53,189
you were or what kind of group you're

1632
01:39:49,510 --> 01:39:56,460
using at the time things like this right

1633
01:39:53,189 --> 01:39:59,049
so render group is just a utility

1634
01:39:56,460 --> 01:40:03,359
wrapper around the render commands that

1635
01:39:59,050 --> 01:40:07,600
people use and that's it

1636
01:40:03,359 --> 01:40:10,929
OpenGL in specifically takes the render

1637
01:40:07,600 --> 01:40:12,940
commands that you have built and execute

1638
01:40:10,930 --> 01:40:15,659
them in order so it just goes through

1639
01:40:12,939 --> 01:40:17,919
and actually C really does them and

1640
01:40:15,659 --> 01:40:19,930
right now it's not very efficient and

1641
01:40:17,920 --> 01:40:22,319
that's because we haven't done texture

1642
01:40:19,930 --> 01:40:22,320
packing

1643
01:40:34,550 --> 01:40:38,420
so that's one of the big things we need

1644
01:40:36,380 --> 01:40:40,659
to do is is the texture packing sort of

1645
01:40:38,420 --> 01:40:40,659
stuff

1646
01:41:12,630 --> 01:41:15,970
[Music]

1647
01:41:49,329 --> 01:41:54,850
hidden triforces on the orphanage so i

1648
01:41:52,720 --> 01:41:58,440
are there I mean I don't really know

1649
01:41:54,850 --> 01:41:58,440
that I didn't request any

1650
01:42:11,460 --> 01:42:15,908
let's see how can I start in game

1651
01:42:14,679 --> 01:42:18,699
development without knowing much about

1652
01:42:15,908 --> 01:42:20,469
C++ well it depends what you want to do

1653
01:42:18,698 --> 01:42:24,158
right like if you want to be an engine

1654
01:42:20,469 --> 01:42:27,489
program or you got to learn that stuff

1655
01:42:24,158 --> 01:42:29,198
because that's there are no such things

1656
01:42:27,488 --> 01:42:31,269
as engines not written in C++ I mean

1657
01:42:29,198 --> 01:42:33,428
there's like maybe one successful one

1658
01:42:31,270 --> 01:42:39,070
that I know of which would be minecraft

1659
01:42:33,429 --> 01:42:41,050
was written in Java but you know it's

1660
01:42:39,069 --> 01:42:42,698
Minecraft it's not a particularly good

1661
01:42:41,050 --> 01:42:44,529
looking game and not a particularly

1662
01:42:42,698 --> 01:42:46,299
performant game either so it kind of

1663
01:42:44,529 --> 01:42:48,250
just is lucky that you happen to be able

1664
01:42:46,300 --> 01:42:51,579
to do a world of blocks with a very

1665
01:42:48,250 --> 01:42:55,300
short draw distance in Java right but

1666
01:42:51,579 --> 01:42:56,890
that's sort of a separate issue um so

1667
01:42:55,300 --> 01:42:59,050
yeah I mean if essence you want to do if

1668
01:42:56,890 --> 01:43:01,179
you just want to make a game you know I

1669
01:42:59,050 --> 01:43:03,100
don't know you can do things of

1670
01:43:01,179 --> 01:43:06,819
different degrees of simplicity right

1671
01:43:03,100 --> 01:43:08,289
like you can go I want to say like you

1672
01:43:06,819 --> 01:43:11,259
could start with something very simple

1673
01:43:08,289 --> 01:43:12,670
like RPG Maker or game maker right like

1674
01:43:11,260 --> 01:43:14,320
these are things designed for people who

1675
01:43:12,670 --> 01:43:16,899
don't on a program and it can get you

1676
01:43:14,319 --> 01:43:18,880
started so it really just depends on

1677
01:43:16,899 --> 01:43:21,069
what you want to do if you want to

1678
01:43:18,880 --> 01:43:23,230
actually work on serious game technology

1679
01:43:21,069 --> 01:43:25,840
that is a long learning process and it's

1680
01:43:23,229 --> 01:43:27,729
a dedicated field and that's the stuff

1681
01:43:25,840 --> 01:43:29,949
we do on handmade hero I don't cover how

1682
01:43:27,729 --> 01:43:31,299
to do like simple game like I want to

1683
01:43:29,948 --> 01:43:33,939
script a game in unity or whatever

1684
01:43:31,300 --> 01:43:35,380
that's there's plenty of tutorials out

1685
01:43:33,939 --> 01:43:40,629
there for that sort of thing and you can

1686
01:43:35,380 --> 01:43:42,250
go grab them and furthermore like things

1687
01:43:40,630 --> 01:43:43,719
like game maker come with example games

1688
01:43:42,250 --> 01:43:48,579
you can look at right like you don't

1689
01:43:43,719 --> 01:43:50,350
need much to use those tools to make

1690
01:43:48,579 --> 01:43:52,779
games of the form that the tools

1691
01:43:50,350 --> 01:43:54,400
supports right if you want to make like

1692
01:43:52,779 --> 01:43:56,170
a platformer game makers got like the

1693
01:43:54,399 --> 01:43:57,670
stuff you need in there for it and it's

1694
01:43:56,170 --> 01:43:59,529
pretty straightforward and it works and

1695
01:43:57,670 --> 01:44:04,510
people have shipped games with it that

1696
01:43:59,529 --> 01:44:05,979
are popular right like I can't think of

1697
01:44:04,510 --> 01:44:07,659
what game maker ones would be off the

1698
01:44:05,979 --> 01:44:09,939
top of my head but like I think like

1699
01:44:07,658 --> 01:44:12,689
chasm probably was gaming or was it I

1700
01:44:09,939 --> 01:44:12,689
don't know if that's true

1701
01:44:17,130 --> 01:44:24,369
yeah I shouldn't say cuz I yeah I don't

1702
01:44:22,600 --> 01:44:26,020
know off the top of my head like what's

1703
01:44:24,369 --> 01:44:27,579
made in what but like you know you can

1704
01:44:26,020 --> 01:44:38,170
point to popular games that were made

1705
01:44:27,579 --> 01:44:40,750
and like game maker and and and you know

1706
01:44:38,170 --> 01:44:44,199
it's it's it's not an impediment to

1707
01:44:40,750 --> 01:44:46,630
commercial success necessarily what it

1708
01:44:44,199 --> 01:44:49,029
is though you know one of the problems

1709
01:44:46,630 --> 01:44:51,279
that you do face nowadays is if you just

1710
01:44:49,029 --> 01:44:55,539
if you're just someone who doesn't

1711
01:44:51,279 --> 01:44:58,809
really know much about programming and

1712
01:44:55,539 --> 01:45:00,430
you use you know unity or game maker or

1713
01:44:58,810 --> 01:45:02,440
something to make a game one of the

1714
01:45:00,430 --> 01:45:04,090
problems that you do have is what's the

1715
01:45:02,439 --> 01:45:06,939
difference between your game and

1716
01:45:04,090 --> 01:45:09,489
everyone else there's literally 7,000

1717
01:45:06,939 --> 01:45:09,789
people a year doing exactly what you're

1718
01:45:09,488 --> 01:45:12,819
doing

1719
01:45:09,789 --> 01:45:14,829
7,000 teams a year doing exactly what

1720
01:45:12,819 --> 01:45:17,460
you're doing so if you can't program

1721
01:45:14,829 --> 01:45:20,229
anything new and differentiate yourself

1722
01:45:17,460 --> 01:45:21,699
you'd better have good art I guess is

1723
01:45:20,229 --> 01:45:23,529
what I would say like you need like

1724
01:45:21,699 --> 01:45:25,899
because you can't just be like bad art

1725
01:45:23,529 --> 01:45:27,880
and bad programming and hey we just

1726
01:45:25,899 --> 01:45:31,439
downloaded unity and used it that you're

1727
01:45:27,880 --> 01:45:37,119
just gonna be no one's gonna care right

1728
01:45:31,439 --> 01:45:39,069
so you need to have a plan for that and

1729
01:45:37,119 --> 01:45:43,899
it's important to understand right

1730
01:45:39,069 --> 01:45:46,119
and so you gotta have something that

1731
01:45:43,899 --> 01:45:48,129
differentiates you and maybe you're like

1732
01:45:46,119 --> 01:45:49,960
an amazing game designer and you you

1733
01:45:48,130 --> 01:45:51,310
just have like these ideas that people

1734
01:45:49,960 --> 01:45:53,980
haven't had before about how to design

1735
01:45:51,310 --> 01:45:55,480
game 99% of the people who think they're

1736
01:45:53,979 --> 01:45:56,709
great if that are actually not very good

1737
01:45:55,479 --> 01:45:59,319
and you're just gonna design something

1738
01:45:56,710 --> 01:46:02,710
exactly like everyone else right and so

1739
01:45:59,319 --> 01:46:04,329
again like you know you have to be

1740
01:46:02,710 --> 01:46:05,560
realistic and so one of the things you

1741
01:46:04,329 --> 01:46:09,369
have to understand is like what are you

1742
01:46:05,560 --> 01:46:12,070
trying to build why is anyone gonna care

1743
01:46:09,369 --> 01:46:14,199
about that because the number 7,000 was

1744
01:46:12,069 --> 01:46:17,710
not arbitrary there literally are 7,000

1745
01:46:14,199 --> 01:46:19,659
new games on Steam every year now why is

1746
01:46:17,710 --> 01:46:21,460
anyone going to buy your game it can't

1747
01:46:19,659 --> 01:46:22,869
just be because you downloaded unity and

1748
01:46:21,460 --> 01:46:25,300
put something together because that's

1749
01:46:22,869 --> 01:46:27,300
not good enough right you have to have

1750
01:46:25,300 --> 01:46:30,289
something else you have to

1751
01:46:27,300 --> 01:46:32,940
and what you are bringing to the table

1752
01:46:30,289 --> 01:46:34,319
that's one of the reasons I think game

1753
01:46:32,939 --> 01:46:38,009
engine programming is a very good

1754
01:46:34,319 --> 01:46:40,078
discipline to be involved in because

1755
01:46:38,010 --> 01:46:41,550
people always need it

1756
01:46:40,078 --> 01:46:44,578
there are very few people who know how

1757
01:46:41,550 --> 01:46:46,739
to do it and you can't just download

1758
01:46:44,578 --> 01:46:49,289
unity or download error because those

1759
01:46:46,738 --> 01:46:53,098
companies themselves need to make the

1760
01:46:49,289 --> 01:46:55,019
engine so you can always have a job even

1761
01:46:53,099 --> 01:46:57,090
if it's just working on one of those

1762
01:46:55,020 --> 01:46:59,460
engines if you are a good engine

1763
01:46:57,090 --> 01:47:07,199
programmer if all you know how to do is

1764
01:46:59,460 --> 01:47:08,969
script games good luck right I feel like

1765
01:47:07,198 --> 01:47:10,469
your employment prospects if that's all

1766
01:47:08,969 --> 01:47:13,020
you know how to do are pretty darn

1767
01:47:10,469 --> 01:47:14,670
limited because anyone can learn how to

1768
01:47:13,020 --> 01:47:18,510
write a script in unity pretty quickly

1769
01:47:14,670 --> 01:47:20,219
and if they don't know all the core

1770
01:47:18,510 --> 01:47:22,230
fundamentals if they're not really good

1771
01:47:20,219 --> 01:47:23,819
with vector math if they don't have all

1772
01:47:22,229 --> 01:47:25,769
the things they would need to be like a

1773
01:47:23,819 --> 01:47:28,078
really outstanding unity programmer for

1774
01:47:25,770 --> 01:47:31,380
example then what's the point like why a

1775
01:47:28,078 --> 01:47:34,229
good engine programmer can also make a

1776
01:47:31,380 --> 01:47:36,118
big difference on a Unity game or on a

1777
01:47:34,229 --> 01:47:38,399
Unreal game because they can write all

1778
01:47:36,118 --> 01:47:43,710
this custom code that nobody else can do

1779
01:47:38,399 --> 01:47:45,479
right so it's just I feel like there's a

1780
01:47:43,710 --> 01:47:47,698
lot to understand there when you're

1781
01:47:45,479 --> 01:47:49,078
thinking about it and people who don't

1782
01:47:47,698 --> 01:47:50,819
understand the value of learning how to

1783
01:47:49,078 --> 01:47:53,118
program games for real I think they're

1784
01:47:50,819 --> 01:47:55,259
in for a pretty rude awakening because

1785
01:47:53,118 --> 01:47:58,738
your competition is fierce

1786
01:47:55,260 --> 01:48:00,900
out there and if you think you're just

1787
01:47:58,738 --> 01:48:01,888
gonna download an engine and not know

1788
01:48:00,899 --> 01:48:03,689
what you're doing and put together

1789
01:48:01,889 --> 01:48:05,400
something that anyone cares about well I

1790
01:48:03,689 --> 01:48:08,368
can say is you better have great artists

1791
01:48:05,399 --> 01:48:11,129
right because they can they can pull it

1792
01:48:08,368 --> 01:48:13,908
out for you right really great artists

1793
01:48:11,130 --> 01:48:16,260
can differentiate your game with the art

1794
01:48:13,908 --> 01:48:18,769
but if you don't have that you're in a

1795
01:48:16,260 --> 01:48:18,770
lot of trouble

1796
01:48:28,390 --> 01:48:31,360
can you recommend any game engine the

1797
01:48:30,159 --> 01:48:33,279
source code that would be helpful to

1798
01:48:31,359 --> 01:48:36,099
look over for general architecture for

1799
01:48:33,279 --> 01:48:40,619
example the doom engine etc I feel like

1800
01:48:36,100 --> 01:48:45,460
quake is probably good for old school

1801
01:48:40,619 --> 01:48:46,449
for new school like the problem with

1802
01:48:45,460 --> 01:48:48,609
quake is it's not gonna be

1803
01:48:46,449 --> 01:48:51,579
multi-threaded so game architecture in

1804
01:48:48,609 --> 01:48:54,039
the new in new days is gonna have at

1805
01:48:51,579 --> 01:48:56,619
least some multi-threading and I don't

1806
01:48:54,039 --> 01:48:57,760
know what to look for for that I mean

1807
01:48:56,619 --> 01:49:00,340
obviously you can look at the Unreal

1808
01:48:57,760 --> 01:49:04,239
Engine if you want to but good luck

1809
01:49:00,340 --> 01:49:06,010
right because it's massive so I don't

1810
01:49:04,239 --> 01:49:09,869
know how realistic that really is in

1811
01:49:06,010 --> 01:49:09,869
terms of an educational process but

1812
01:49:32,479 --> 01:49:36,469
as reference can you disclose how much

1813
01:49:34,340 --> 01:49:40,010
you paid the artist for handmade here no

1814
01:49:36,470 --> 01:49:42,050
like generally I wouldn't probably give

1815
01:49:40,010 --> 01:49:47,930
out the details of someone else's

1816
01:49:42,050 --> 01:49:51,170
contract I would not necessarily be

1817
01:49:47,930 --> 01:49:54,380
adverse to them giving out the details

1818
01:49:51,170 --> 01:49:58,460
of their contract for a contractor but

1819
01:49:54,380 --> 01:50:03,949
like a contractor is their own business

1820
01:49:58,460 --> 01:50:08,359
basically and you know if you tell

1821
01:50:03,949 --> 01:50:11,510
people what they gave you on their game

1822
01:50:08,359 --> 01:50:13,909
or whatever it's maybe a little unfair

1823
01:50:11,510 --> 01:50:15,320
to them in terms of negotiating

1824
01:50:13,909 --> 01:50:18,859
you know maybe they charged you less

1825
01:50:15,319 --> 01:50:21,859
than they should have or you know maybe

1826
01:50:18,859 --> 01:50:24,799
they charge you more and it's fine we

1827
01:50:21,859 --> 01:50:27,380
try to pay well so we probably paid good

1828
01:50:24,800 --> 01:50:31,250
relative to other jobs that person had

1829
01:50:27,380 --> 01:50:32,810
done but you know again I don't really

1830
01:50:31,250 --> 01:50:34,399
want to do that for an independent

1831
01:50:32,810 --> 01:50:36,500
contractor I don't think that's

1832
01:50:34,399 --> 01:50:37,949
appropriate for the rest of the art so

1833
01:50:36,500 --> 01:50:39,189
that was young-shin

1834
01:50:37,949 --> 01:50:41,599
[Music]

1835
01:50:39,189 --> 01:50:43,250
for the cutscenes and she was did the

1836
01:50:41,600 --> 01:50:45,380
initial concept work and stuff and I

1837
01:50:43,250 --> 01:50:50,539
took it over after she was working at

1838
01:50:45,380 --> 01:50:52,369
Molly full-time I and so she now you

1839
01:50:50,539 --> 01:50:55,760
couldn't it would be hard to say what

1840
01:50:52,369 --> 01:50:57,710
the budget would be because she just

1841
01:50:55,760 --> 01:51:03,079
does it like part-time as we need stuff

1842
01:50:57,710 --> 01:51:05,510
as part of her work here which isn't the

1843
01:51:03,079 --> 01:51:08,170
same as like billable hours on a

1844
01:51:05,510 --> 01:51:08,170
contractor

1845
01:51:08,979 --> 01:51:14,500
I mean one thing I can say is that in

1846
01:51:12,579 --> 01:51:17,619
terms of looking at the market I would

1847
01:51:14,500 --> 01:51:21,479
say contract art tends to run somewhere

1848
01:51:17,619 --> 01:51:23,769
between 35 and 65 dollars an hour

1849
01:51:21,479 --> 01:51:27,339
depending on the experience of the

1850
01:51:23,770 --> 01:51:36,540
contractor and where they are located

1851
01:51:27,340 --> 01:51:39,699
and where you are located for us prices

1852
01:51:36,539 --> 01:51:43,238
outside us things can be totally

1853
01:51:39,699 --> 01:51:45,639
different right 65 dollars an hour is

1854
01:51:43,238 --> 01:51:52,359
probably an insanely high contractor

1855
01:51:45,640 --> 01:51:54,910
rate in Argentina right I pick Argentina

1856
01:51:52,359 --> 01:51:58,029
because I happen to know some contract

1857
01:51:54,909 --> 01:51:59,769
prices there and like the dollar is much

1858
01:51:58,029 --> 01:52:01,988
more depressed there in terms of

1859
01:51:59,770 --> 01:52:07,480
economics so that would be like a

1860
01:52:01,988 --> 01:52:09,159
ludicrously high contract salary if it

1861
01:52:07,479 --> 01:52:15,309
was an argentinian company paying an

1862
01:52:09,159 --> 01:52:17,170
argentinian contractor right so I guess

1863
01:52:15,310 --> 01:52:18,789
what I would say is I can't really give

1864
01:52:17,170 --> 01:52:20,560
broad advice on something that but I

1865
01:52:18,789 --> 01:52:22,300
would say that from what I've seen when

1866
01:52:20,560 --> 01:52:27,730
people quote prices they tend to quote

1867
01:52:22,300 --> 01:52:31,900
prices around that range but that's for

1868
01:52:27,729 --> 01:52:33,699
2d art and I couldn't tell you much

1869
01:52:31,899 --> 01:52:35,909
about 3d art because we don't really use

1870
01:52:33,699 --> 01:52:35,909
any

1871
01:52:45,010 --> 01:52:49,570
click two is pretty interesting to go

1872
01:52:47,920 --> 01:52:51,069
through does it matter that much that it

1873
01:52:49,569 --> 01:52:53,500
is not multi-threaded because at least

1874
01:52:51,069 --> 01:52:55,808
it is only around 120,000 lines of code

1875
01:52:53,500 --> 01:52:58,179
and with Fabian overview is it a pretty

1876
01:52:55,809 --> 01:53:02,590
good selling point I mean here's what I

1877
01:52:58,179 --> 01:53:04,300
would say multi-threading is very

1878
01:53:02,590 --> 01:53:06,279
important and you would you will need to

1879
01:53:04,300 --> 01:53:07,690
learn it you'll need to learn probably

1880
01:53:06,279 --> 01:53:08,768
even more than anything that we've done

1881
01:53:07,689 --> 01:53:09,969
in hand-made here because we've pretty

1882
01:53:08,769 --> 01:53:12,099
done pretty simple stuff so if you're

1883
01:53:09,969 --> 01:53:14,019
talking about like hard core like full

1884
01:53:12,099 --> 01:53:15,788
engine multi-threading stuff we haven't

1885
01:53:14,019 --> 01:53:20,230
really done much of that on handmade

1886
01:53:15,788 --> 01:53:21,639
hero and probably won't so that's a

1887
01:53:20,229 --> 01:53:23,288
little bit of a missing area that you

1888
01:53:21,639 --> 01:53:24,760
would have to get into for full triple-a

1889
01:53:23,288 --> 01:53:25,868
kind of stuff and that again that's if

1890
01:53:24,760 --> 01:53:27,010
you're doing whole engine architecture

1891
01:53:25,868 --> 01:53:34,479
or not you wouldn't necessarily need to

1892
01:53:27,010 --> 01:53:39,039
know as far as learning goes I would say

1893
01:53:34,479 --> 01:53:41,859
definitely look at quick - because you

1894
01:53:39,038 --> 01:53:43,960
know some things never get old like the

1895
01:53:41,859 --> 01:53:46,359
way that quake was - was architected is

1896
01:53:43,960 --> 01:53:48,429
probably relevant to everybody it's

1897
01:53:46,359 --> 01:53:50,078
interesting probably to see the

1898
01:53:48,429 --> 01:53:51,969
decisions that were made there and how

1899
01:53:50,078 --> 01:53:54,368
it looked and how it was rendered and

1900
01:53:51,969 --> 01:53:58,179
how it was structured for network play

1901
01:53:54,368 --> 01:54:01,359
and everything else right so my opinion

1902
01:53:58,179 --> 01:54:03,940
is that like what I was trying to say is

1903
01:54:01,359 --> 01:54:05,738
you probably need more than that if

1904
01:54:03,939 --> 01:54:10,089
you're really trying to understand a

1905
01:54:05,738 --> 01:54:13,089
modern game architecture but it still

1906
01:54:10,090 --> 01:54:15,929
would be a great exercise regardless to

1907
01:54:13,090 --> 01:54:15,929
go through quake 2

1908
01:54:31,600 --> 01:54:35,440
a super off-topic but as someone who's

1909
01:54:34,090 --> 01:54:36,970
older and perhaps a lot more experienced

1910
01:54:35,439 --> 01:54:38,259
than someone like me is younger do you

1911
01:54:36,970 --> 01:54:40,630
have anything to say regarding

1912
01:54:38,260 --> 01:54:42,190
interpersonal issues ever encounter

1913
01:54:40,630 --> 01:54:46,270
people giving you issues or being rude

1914
01:54:42,189 --> 01:54:48,009
yes of course even absolute bullies do

1915
01:54:46,270 --> 01:54:49,780
you have any advice for that if what

1916
01:54:48,010 --> 01:54:55,320
encounters that even as an adult in a

1917
01:54:49,779 --> 01:54:57,519
university or at their job not really I

1918
01:54:55,319 --> 01:54:58,750
would say that generally speaking the

1919
01:54:57,520 --> 01:55:00,100
reason I like computer programming is

1920
01:54:58,750 --> 01:55:05,380
because I don't have to interact with

1921
01:55:00,100 --> 01:55:07,800
people and I don't find interacting with

1922
01:55:05,380 --> 01:55:11,949
people rewarding and I generally don't

1923
01:55:07,800 --> 01:55:13,930
find most people I interact with to be

1924
01:55:11,949 --> 01:55:16,989
worth interacting with because I guess I

1925
01:55:13,930 --> 01:55:22,240
would how I would put it so I don't have

1926
01:55:16,989 --> 01:55:25,420
a lot of advice as far as like how to

1927
01:55:22,239 --> 01:55:27,639
interact with people productively that's

1928
01:55:25,420 --> 01:55:30,220
something for a person who has a higher

1929
01:55:27,640 --> 01:55:36,220
opinion of humanity to answer that makes

1930
01:55:30,220 --> 01:55:41,710
sense like like I like programming

1931
01:55:36,220 --> 01:55:44,199
specifically because it is a mental

1932
01:55:41,710 --> 01:55:47,109
activity that it only matters whether

1933
01:55:44,199 --> 01:55:50,729
you are right about what you did and not

1934
01:55:47,109 --> 01:55:53,619
about what other people's opinions are

1935
01:55:50,729 --> 01:55:55,869
and I find that generally speaking

1936
01:55:53,619 --> 01:55:58,239
humans don't form opinions particularly

1937
01:55:55,869 --> 01:56:01,119
well they also don't tend to care about

1938
01:55:58,239 --> 01:56:03,909
data and they don't tend to care about

1939
01:56:01,119 --> 01:56:06,269
validating their opinions so interacting

1940
01:56:03,909 --> 01:56:09,399
with them is generally a pretty

1941
01:56:06,270 --> 01:56:12,460
disappointing experience unless you just

1942
01:56:09,399 --> 01:56:15,989
happen to agree on things or happen to

1943
01:56:12,460 --> 01:56:15,989
have a similar outlook on things right

1944
01:56:16,680 --> 01:56:22,000
the good news is the better you are at

1945
01:56:19,390 --> 01:56:24,730
programming the less you need to do it

1946
01:56:22,000 --> 01:56:27,189
if you're a very good programmer you can

1947
01:56:24,729 --> 01:56:29,799
get paid just a program you can even get

1948
01:56:27,189 --> 01:56:32,619
paid just a program on contract not in

1949
01:56:29,800 --> 01:56:35,529
an office so you don't even have to

1950
01:56:32,619 --> 01:56:39,840
interact with anybody who isn't your

1951
01:56:35,529 --> 01:56:39,840
friend on a daily basis or which is nice

1952
01:56:41,619 --> 01:56:57,908
in the mean time yet can't really help

1953
01:56:44,590 --> 01:56:59,500
you in terms of advice on that I'll go

1954
01:56:57,908 --> 01:57:01,029
ahead and recommend doom 3 as learning

1955
01:56:59,500 --> 01:57:02,710
engine since from what I can tell it

1956
01:57:01,029 --> 01:57:04,960
meets all the criteria to suggested on a

1957
01:57:02,710 --> 01:57:06,460
modern API has multi-threading you know

1958
01:57:04,960 --> 01:57:07,869
I didn't know that they released the

1959
01:57:06,460 --> 01:57:10,090
source code to doom three that's pretty

1960
01:57:07,869 --> 01:57:12,189
cool now that I think about it I

1961
01:57:10,090 --> 01:57:15,880
probably did read that and looks like oh

1962
01:57:12,189 --> 01:57:18,309
that's cool but I I didn't really

1963
01:57:15,880 --> 01:57:21,219
remember that that would be cool I

1964
01:57:18,310 --> 01:57:23,590
haven't looked at doom 3 I also think

1965
01:57:21,219 --> 01:57:25,239
Doom 3 like you know my feelings on

1966
01:57:23,590 --> 01:57:27,550
opportunity programming I don't like it

1967
01:57:25,238 --> 01:57:30,158
but the reality is a lot of triple-a

1968
01:57:27,550 --> 01:57:31,360
Studios use at least some of it some use

1969
01:57:30,158 --> 01:57:36,369
way too much of it

1970
01:57:31,359 --> 01:57:37,839
um but I believe Doom 3 has opted rated

1971
01:57:36,369 --> 01:57:40,420
program in it because John Carmack

1972
01:57:37,840 --> 01:57:43,480
wasn't the only programmer on it so I

1973
01:57:40,420 --> 01:57:45,460
think there's C++ in there more C++ than

1974
01:57:43,479 --> 01:57:48,789
there used to be in like quake 2 for

1975
01:57:45,460 --> 01:57:51,640
example so doom 3 might also be valuable

1976
01:57:48,789 --> 01:57:53,560
because you can see the kinds of oop

1977
01:57:51,640 --> 01:57:55,600
stuff that starts to come in a little

1978
01:57:53,560 --> 01:57:57,190
more it probably doesn't have me like it

1979
01:57:55,600 --> 01:58:00,400
you know engines like source 2 or

1980
01:57:57,189 --> 01:58:06,519
something are like ooh out into the

1981
01:58:00,399 --> 01:58:07,809
disaster zone right but you know so you

1982
01:58:06,520 --> 01:58:10,000
don't want to start there because just

1983
01:58:07,810 --> 01:58:12,070
be like what is going on whereas I think

1984
01:58:10,000 --> 01:58:13,779
doom probably has a little bit of OOP

1985
01:58:12,069 --> 01:58:18,090
going on and that would get you warmed

1986
01:58:13,779 --> 01:58:18,090
up to that as well which is probably

1987
01:58:18,210 --> 01:58:23,698
useful you know

1988
01:58:29,569 --> 01:58:41,449
all right I'm gonna wrap it up do you

1989
01:58:37,789 --> 01:58:43,640
think the performance of the game would

1990
01:58:41,449 --> 01:58:48,639
be fine on the Intel a cheapy or in

1991
01:58:43,640 --> 01:58:51,140
general the integrated GPU at the moment

1992
01:58:48,640 --> 01:58:54,680
well we do need to fix our texture

1993
01:58:51,140 --> 01:59:00,220
dispatch issue so there like I'd like to

1994
01:58:54,680 --> 01:59:02,810
put that aside but at the moment we

1995
01:59:00,220 --> 01:59:04,880
until our lighting is a little more

1996
01:59:02,810 --> 01:59:08,539
flexible probably it's not very like

1997
01:59:04,880 --> 01:59:10,400
right now the lighting is kind of does

1998
01:59:08,539 --> 01:59:12,460
this weird summation per pixel thing

1999
01:59:10,399 --> 01:59:15,639
that we probably don't want to do and

2000
01:59:12,460 --> 01:59:17,899
it's a little too scatter gallery like

2001
01:59:15,640 --> 01:59:19,520
right now the lighting would I think

2002
01:59:17,899 --> 01:59:27,159
prevent it from running particularly

2003
01:59:19,520 --> 01:59:32,330
well on an on an i GPU from Intel I

2004
01:59:27,159 --> 01:59:35,359
think so I would say in the long term we

2005
01:59:32,329 --> 01:59:37,699
will probably be have a good shot at

2006
01:59:35,359 --> 01:59:40,729
running reasonably on integrated

2007
01:59:37,699 --> 01:59:42,409
graphics part from Intel or for AMD

2008
01:59:40,729 --> 01:59:46,669
obviously which tends to have better

2009
01:59:42,409 --> 01:59:48,920
integrated graphics parts on at on the

2010
01:59:46,670 --> 01:59:52,399
current version the renderer probably I

2011
01:59:48,920 --> 01:59:54,350
think you would have problems right now

2012
01:59:52,399 --> 01:59:58,759
we have problems with with just with the

2013
01:59:54,350 --> 02:00:00,289
lighting you can see that right like in

2014
01:59:58,760 --> 02:00:04,250
a cutscene we're spending all of our

2015
02:00:00,289 --> 02:00:06,470
time waiting for the graphics card and a

2016
02:00:04,250 --> 02:00:09,859
lot of it's like like if we turn off the

2017
02:00:06,470 --> 02:00:11,659
debugger all this stuff we almost spend

2018
02:00:09,859 --> 02:00:12,619
no time at all right we're just sitting

2019
02:00:11,659 --> 02:00:16,059
there waiting for the graphics card

2020
02:00:12,619 --> 02:00:19,640
entirely but when we are in the game

2021
02:00:16,060 --> 02:00:21,740
right know how we'd get into the game

2022
02:00:19,640 --> 02:00:24,740
here we go but when we are in the game

2023
02:00:21,739 --> 02:00:26,359
you can also see like I mean we're in I

2024
02:00:24,739 --> 02:00:28,399
think we're in debug mode at the moment

2025
02:00:26,359 --> 02:00:32,899
so it's a little bit of a of a non test

2026
02:00:28,399 --> 02:00:34,729
but when we're running the game right

2027
02:00:32,899 --> 02:00:36,829
now our lighting which we run on the CPU

2028
02:00:34,729 --> 02:00:40,729
is actually very slow as well so it's

2029
02:00:36,829 --> 02:00:42,960
again pretty hard to tell but even that

2030
02:00:40,729 --> 02:00:47,459
you can see

2031
02:00:42,960 --> 02:00:50,100
in the current situation if you ignore

2032
02:00:47,460 --> 02:00:52,289
the light propagation stuff and just

2033
02:00:50,100 --> 02:00:55,070
focus on what the GPU has to do you can

2034
02:00:52,289 --> 02:00:58,710
see that fill rate is in fact a problem

2035
02:00:55,069 --> 02:01:00,659
I'm not sure if we can shrink down the

2036
02:00:58,710 --> 02:01:09,529
amount of processing we do and still

2037
02:01:00,659 --> 02:01:09,529
read anything not really

2038
02:01:15,760 --> 02:01:20,260
oh you know what that's not going to

2039
02:01:18,579 --> 02:01:29,439
matter because we did we don't change

2040
02:01:20,260 --> 02:01:35,130
the render resolution anyway no if we

2041
02:01:29,439 --> 02:01:37,659
have any way to really yeah we don't I

2042
02:01:35,130 --> 02:01:39,609
mean you can just see like so there's

2043
02:01:37,659 --> 02:01:41,529
the multi sampling if I turn that on up

2044
02:01:39,609 --> 02:01:44,139
you can just see like our fill rate is

2045
02:01:41,529 --> 02:01:53,289
an issue right it's all I'm trying to

2046
02:01:44,140 --> 02:01:56,800
say that will be really bad on Intel

2047
02:01:53,289 --> 02:01:59,260
GPUs and so that is I think you know

2048
02:01:56,800 --> 02:02:01,920
when we fix that up I think we'd be in

2049
02:01:59,260 --> 02:02:01,920
much better position

2050
02:02:08,979 --> 02:02:14,820
alright I'm gonna shut it down there

2051
02:02:22,889 --> 02:02:26,349
alright thank you everyone for joining

2052
02:02:24,788 --> 02:02:28,389
me further episode of handmade hero it's

2053
02:02:26,349 --> 02:02:31,449
a pleasure coding me with you as always

2054
02:02:28,389 --> 02:02:34,328
if you would like to pre-order the game

2055
02:02:31,448 --> 02:02:36,038
on hand me here at org you can get the

2056
02:02:34,328 --> 02:02:39,969
source code for it right now and play

2057
02:02:36,038 --> 02:02:42,158
around with it if you would like we

2058
02:02:39,969 --> 02:02:44,498
didn't quite get to what I wanted to get

2059
02:02:42,158 --> 02:02:47,109
to today in terms of finishing the I

2060
02:02:44,498 --> 02:02:49,478
wanted to check out those bright push

2061
02:02:47,109 --> 02:02:53,049
calls so we'll probably do that next

2062
02:02:49,479 --> 02:02:55,030
weekend next weekend we will hopefully

2063
02:02:53,050 --> 02:02:58,779
have time to do both things

2064
02:02:55,029 --> 02:02:59,978
so sprite push just clean up those calls

2065
02:02:58,779 --> 02:03:01,179
and make them a little bit more

2066
02:02:59,979 --> 02:03:02,619
understandable and a little more

2067
02:03:01,179 --> 02:03:04,899
flexible and probably a little faster

2068
02:03:02,618 --> 02:03:08,828
too at the moment I think they're kind

2069
02:03:04,899 --> 02:03:11,049
of a little bit too slow but then also

2070
02:03:08,828 --> 02:03:12,578
start down the road towards packed

2071
02:03:11,050 --> 02:03:13,869
textures and texture arrays because

2072
02:03:12,578 --> 02:03:17,259
that's really gonna hold back our

2073
02:03:13,868 --> 02:03:18,639
performance a lot and so just getting

2074
02:03:17,260 --> 02:03:19,840
that out of the way I feel like for a

2075
02:03:18,639 --> 02:03:23,109
lot of those things like ground cover

2076
02:03:19,840 --> 02:03:26,050
and things like that that we want we

2077
02:03:23,109 --> 02:03:28,630
want to have ways of making those things

2078
02:03:26,050 --> 02:03:30,159
work quickly and easily so that we can

2079
02:03:28,630 --> 02:03:32,590
put nice effects into the game as

2080
02:03:30,158 --> 02:03:36,339
necessary so that's really what I want

2081
02:03:32,590 --> 02:03:38,949
to start focusing on is to get that into

2082
02:03:36,340 --> 02:03:40,809
position so that we can sort of have a

2083
02:03:38,948 --> 02:03:42,458
more realistic picture about where our

2084
02:03:40,809 --> 02:03:43,719
render slowness is and I suspect it'll

2085
02:03:42,458 --> 02:03:45,189
all end up being in that sort of

2086
02:03:43,719 --> 02:03:46,840
lighting summation stuff which we can

2087
02:03:45,189 --> 02:03:49,388
then work on and try to figure out how

2088
02:03:46,840 --> 02:03:50,920
we're going to mitigate in terms of of

2089
02:03:49,389 --> 02:03:53,739
making sure the lighting is efficient

2090
02:03:50,920 --> 02:03:57,038
enough so that's it I'll be back next

2091
02:03:53,738 --> 02:03:59,678
weekend with that as always if you want

2092
02:03:57,038 --> 02:04:01,208
to check out what we've got on the hand

2093
02:03:59,679 --> 02:04:03,940
made here at that org page is a bunch of

2094
02:04:01,208 --> 02:04:06,069
resources here the watch page will show

2095
02:04:03,939 --> 02:04:07,388
the schedule at all times so you know

2096
02:04:06,069 --> 02:04:09,429
when we're going to be live-streaming it

2097
02:04:07,389 --> 02:04:10,809
also will show the livestream so you can

2098
02:04:09,429 --> 02:04:14,019
really just do everything from that page

2099
02:04:10,809 --> 02:04:15,670
if you want to it's pretty handy it also

2100
02:04:14,019 --> 02:04:17,469
has the episode guide so if you want to

2101
02:04:15,670 --> 02:04:18,939
watch old episodes that's it on there

2102
02:04:17,469 --> 02:04:20,920
too it has everything you need to watch

2103
02:04:18,939 --> 02:04:21,969
this series right there there's also the

2104
02:04:20,920 --> 02:04:22,840
handmade fun if you want to support

2105
02:04:21,969 --> 02:04:24,550
people who are

2106
02:04:22,840 --> 02:04:26,829
doing work related to the series like

2107
02:04:24,550 --> 02:04:29,050
the episode guide that gets paid for out

2108
02:04:26,829 --> 02:04:30,698
of a handmade fund it's a fun thing to

2109
02:04:29,050 --> 02:04:32,500
do if you want to continue the community

2110
02:04:30,698 --> 02:04:34,178
and it comes with a bunch of bonus stuff

2111
02:04:32,500 --> 02:04:35,948
for me that I put in a little bonus pack

2112
02:04:34,179 --> 02:04:40,359
for people who want to support community

2113
02:04:35,948 --> 02:04:41,948
efforts obviously if we also have the

2114
02:04:40,359 --> 02:04:43,689
special handmade hero head you can click

2115
02:04:41,948 --> 02:04:45,129
on if you want to get two of the other

2116
02:04:43,689 --> 02:04:47,079
sites from Maya Rocket and check out

2117
02:04:45,130 --> 02:04:48,489
what we're doing you can always click on

2118
02:04:47,079 --> 02:04:50,198
the handmade here a head or sign up for

2119
02:04:48,488 --> 02:04:51,459
our mailing list down here all that

2120
02:04:50,198 --> 02:04:53,198
stuff again is on handmade hero dog

2121
02:04:51,460 --> 02:04:55,118
works pretty easy to get to if you want

2122
02:04:53,198 --> 02:04:58,359
check it out that's it for this week

2123
02:04:55,118 --> 02:05:00,969
I'll be back next week when we hopefully

2124
02:04:58,359 --> 02:05:02,439
can like I said start down the path of

2125
02:05:00,969 --> 02:05:03,849
just cleaning up that render performance

2126
02:05:02,439 --> 02:05:05,618
stuff for the texture race that's a

2127
02:05:03,849 --> 02:05:08,289
really big thorn in our side right now

2128
02:05:05,618 --> 02:05:11,319
in terms of saying that the renderer is

2129
02:05:08,289 --> 02:05:13,569
real because it's it's too amateur hour

2130
02:05:11,319 --> 02:05:15,099
with a texture change for quad we don't

2131
02:05:13,569 --> 02:05:17,618
want to we don't want to be going into

2132
02:05:15,099 --> 02:05:20,050
the homestretch of actually developing

2133
02:05:17,618 --> 02:05:22,420
the gameplay with that kind of nonsense

2134
02:05:20,050 --> 02:05:25,270
in place so it'll be good to get that

2135
02:05:22,420 --> 02:05:26,800
out of there thanks for joining me see

2136
02:05:25,270 --> 02:05:29,099
you all next week have a good one

2137
02:05:26,800 --> 02:05:29,099
everybody

