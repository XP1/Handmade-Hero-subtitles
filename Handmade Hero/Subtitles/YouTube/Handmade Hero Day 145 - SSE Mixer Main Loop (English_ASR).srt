1
00:00:00,949 --> 00:00:04,500
hello everyone and welcome to handmade

2
00:00:03,178 --> 00:00:07,318
here the show recode a complete game

3
00:00:04,500 --> 00:00:10,199
live on stream no engines no libraries

4
00:00:07,318 --> 00:00:13,199
just us and what we're doing right now

5
00:00:10,199 --> 00:00:15,000
actually is we are finishing up some

6
00:00:13,199 --> 00:00:17,309
work from Friday we had dropped our

7
00:00:15,000 --> 00:00:18,629
sound mixer into Cindy but we didn't

8
00:00:17,309 --> 00:00:21,929
have a chance to do the inside of the

9
00:00:18,629 --> 00:00:24,390
loop largely because I completely forgot

10
00:00:21,929 --> 00:00:25,858
how's tues comp well I guess I didn't

11
00:00:24,390 --> 00:00:28,289
forget how two's complement worked I

12
00:00:25,859 --> 00:00:30,179
forgot how chip adding worked for some

13
00:00:28,289 --> 00:00:32,368
reason and so we kind of went down a

14
00:00:30,178 --> 00:00:33,449
little rat hole of me remembering and I

15
00:00:32,368 --> 00:00:36,000
guess the good news is that I did

16
00:00:33,450 --> 00:00:37,350
remember and was able to show what I was

17
00:00:36,000 --> 00:00:39,238
trying to show on the string but the bad

18
00:00:37,350 --> 00:00:40,710
news is that took way too long and so

19
00:00:39,238 --> 00:00:42,570
basically Friday stream instead of being

20
00:00:40,710 --> 00:00:44,789
about writing a cindy mixer actually was

21
00:00:42,570 --> 00:00:47,308
mostly about me not remembering a bunch

22
00:00:44,789 --> 00:00:51,600
of stuff from when I was a little baby

23
00:00:47,308 --> 00:00:52,679
anyway and if you didn't see that

24
00:00:51,600 --> 00:00:54,989
episode you stuck it out actually did

25
00:00:52,679 --> 00:00:56,579
draw a little baby me it wasn't a good

26
00:00:54,988 --> 00:00:58,259
drawing but it was a drawing nonetheless

27
00:00:56,579 --> 00:01:00,270
so anyway what I like to do today is

28
00:00:58,259 --> 00:01:02,878
pick up where we left off it is

29
00:01:00,270 --> 00:01:05,250
extraordinarily swelteringly hot here in

30
00:01:02,878 --> 00:01:07,978
Seattle as it tends to get in the summer

31
00:01:05,250 --> 00:01:11,010
so i am going to be sweating this entire

32
00:01:07,978 --> 00:01:12,539
program and so i think we just want to

33
00:01:11,010 --> 00:01:14,460
focus on writing this MV and getting it

34
00:01:12,540 --> 00:01:17,700
done as soon as possible and trying to

35
00:01:14,459 --> 00:01:20,819
ignore the fact that we are overheating

36
00:01:17,700 --> 00:01:22,020
because honestly if the more i think

37
00:01:20,819 --> 00:01:25,618
about it the more uncomfortable i will

38
00:01:22,019 --> 00:01:28,199
be so that said let's go ahead and

39
00:01:25,618 --> 00:01:29,368
remind everyone that today is day 1 45

40
00:01:28,200 --> 00:01:33,450
so if you want to follow along at home

41
00:01:29,368 --> 00:01:35,609
you want day 144 source code and that is

42
00:01:33,450 --> 00:01:39,810
what i am starting with here so you know

43
00:01:35,609 --> 00:01:41,578
keep it in mind so yeah the way that we

44
00:01:39,810 --> 00:01:43,978
had left things nothing particularly

45
00:01:41,578 --> 00:01:46,408
broken everything still works the way

46
00:01:43,978 --> 00:01:47,909
that you would expect you know our sound

47
00:01:46,409 --> 00:01:51,420
mixer code is still running playing

48
00:01:47,909 --> 00:01:53,640
music and other things but we did not

49
00:01:51,420 --> 00:01:55,350
quite finish with the simdi part of it

50
00:01:53,640 --> 00:01:57,930
and so there's a bunch of things that we

51
00:01:55,349 --> 00:01:59,658
want to be able to do there that we have

52
00:01:57,930 --> 00:02:03,210
not done so i'm going to go ahead and

53
00:01:59,659 --> 00:02:05,820
get that going the first thing that we

54
00:02:03,209 --> 00:02:08,669
want to do is finish up that inside loop

55
00:02:05,819 --> 00:02:10,228
vicinity and then i'm assuming that what

56
00:02:08,669 --> 00:02:12,089
we would like to do as well in addition

57
00:02:10,229 --> 00:02:13,470
to just keep everything nice and simple

58
00:02:12,090 --> 00:02:15,210
in this mix

59
00:02:13,469 --> 00:02:18,659
code as a writing it is we'll probably

60
00:02:15,210 --> 00:02:21,480
wants to change our sort of thinking

61
00:02:18,659 --> 00:02:23,849
elsewhere in the application to think of

62
00:02:21,479 --> 00:02:25,079
for samples as one sample so that we

63
00:02:23,849 --> 00:02:26,669
know that everything is always going to

64
00:02:25,080 --> 00:02:29,940
be a line because right now we allow

65
00:02:26,669 --> 00:02:31,979
things to basically be on individual

66
00:02:29,939 --> 00:02:33,300
16-bit sample boundaries for Channel and

67
00:02:31,979 --> 00:02:36,000
I think what we would like to do

68
00:02:33,300 --> 00:02:38,550
probably further on down the line is

69
00:02:36,000 --> 00:02:40,650
think of things in terms of either four

70
00:02:38,550 --> 00:02:42,000
or eight samples even perhaps and the

71
00:02:40,650 --> 00:02:43,650
reason that I say eight samples is

72
00:02:42,000 --> 00:02:46,770
because eight samples in 16-bit

73
00:02:43,650 --> 00:02:49,349
obviously would be one full width

74
00:02:46,770 --> 00:02:51,570
register if you think about you know 16

75
00:02:49,349 --> 00:02:53,419
right times eight of those is 128 bits

76
00:02:51,569 --> 00:02:56,039
which is the width of those sse2

77
00:02:53,419 --> 00:02:58,829
registers and so we may want to go ahead

78
00:02:56,039 --> 00:03:03,120
and do it that way just to make it a

79
00:02:58,830 --> 00:03:04,380
little bit cleaner right so what I'm

80
00:03:03,120 --> 00:03:05,969
going to do first is I'm going to go

81
00:03:04,379 --> 00:03:07,109
ahead and write this routine pretending

82
00:03:05,969 --> 00:03:09,000
that we can do anything like that that

83
00:03:07,110 --> 00:03:11,070
we want but without actually doing it

84
00:03:09,000 --> 00:03:15,719
and then we will sort of bubble back up

85
00:03:11,069 --> 00:03:17,159
again to the code outside and you know

86
00:03:15,719 --> 00:03:18,509
make that work right so if you take a

87
00:03:17,159 --> 00:03:20,939
look at here you know I've got sample

88
00:03:18,509 --> 00:03:22,500
count a line for and we go ahead and do

89
00:03:20,939 --> 00:03:24,050
that sample count line for stuff so what

90
00:03:22,500 --> 00:03:26,430
I could do here is change us and say we

91
00:03:24,050 --> 00:03:28,769
actually want to do sample count align

92
00:03:26,430 --> 00:03:30,420
eight meaning that we expect sample

93
00:03:28,769 --> 00:03:33,209
buffers to always be aligned to eight

94
00:03:30,419 --> 00:03:36,359
samples instead of four and we can even

95
00:03:33,209 --> 00:03:39,239
make our own little you know alignment

96
00:03:36,360 --> 00:03:40,950
code here for those in in handmade

97
00:03:39,239 --> 00:03:42,989
platform I think of somewhere those guys

98
00:03:40,949 --> 00:03:45,719
actually live right we could make a

99
00:03:42,989 --> 00:03:49,349
align it here something that's you know

100
00:03:45,719 --> 00:03:50,789
just a wines value eight like so so if

101
00:03:49,349 --> 00:03:52,409
we want to we can just say you know what

102
00:03:50,789 --> 00:03:54,599
there's always going to be a multiple of

103
00:03:52,409 --> 00:03:56,699
eight samples and that's just a

104
00:03:54,599 --> 00:03:58,949
requirement now so when you call output

105
00:03:56,699 --> 00:04:00,719
playing sounds you just have to give it

106
00:03:58,949 --> 00:04:03,089
that and so I feel like that's the

107
00:04:00,719 --> 00:04:04,349
easiest thing to do and if for some

108
00:04:03,090 --> 00:04:08,580
reason you really don't want that

109
00:04:04,349 --> 00:04:10,079
meaning you really need something else

110
00:04:08,580 --> 00:04:11,820
to happen then I guess you would modify

111
00:04:10,080 --> 00:04:14,190
this routine but I feel like that's what

112
00:04:11,819 --> 00:04:17,370
I would what I would like to see happen

113
00:04:14,189 --> 00:04:20,279
if that makes sense so let's let's go

114
00:04:17,370 --> 00:04:23,009
ahead and make it that way and I'm going

115
00:04:20,279 --> 00:04:25,529
to go ahead and allocate these guys so

116
00:04:23,009 --> 00:04:27,269
if we have sample count eight here what

117
00:04:25,529 --> 00:04:28,859
that means is that our real channel

118
00:04:27,269 --> 00:04:31,728
buffers will have to be a little bit

119
00:04:28,860 --> 00:04:34,229
bigger right they would have to be

120
00:04:31,728 --> 00:04:36,500
larger they'd have to be twice the size

121
00:04:34,228 --> 00:04:40,348
of whatever the sample count it is right

122
00:04:36,500 --> 00:04:42,389
and what i could do is also say that you

123
00:04:40,348 --> 00:04:44,728
know i could have the sample count for

124
00:04:42,389 --> 00:04:47,728
here as well which is just going to be

125
00:04:44,728 --> 00:04:49,199
two times that sample count forward for

126
00:04:47,728 --> 00:04:51,029
these other guys and I don't know how

127
00:04:49,199 --> 00:04:53,159
this is always kind of annoying with

128
00:04:51,029 --> 00:04:54,719
simdi see just isn't really that

129
00:04:53,160 --> 00:04:57,390
equipped to handle it no languages

130
00:04:54,720 --> 00:04:58,890
really are it's really more of a meta

131
00:04:57,389 --> 00:05:01,379
programming thing where you kind of want

132
00:04:58,889 --> 00:05:03,889
lots of different conceptualizations of

133
00:05:01,379 --> 00:05:06,120
sort of the width of that things work at

134
00:05:03,889 --> 00:05:07,288
but for well you know we'll muddle

135
00:05:06,120 --> 00:05:08,459
through it and usually it just means

136
00:05:07,288 --> 00:05:09,478
there's a little more debugging time

137
00:05:08,459 --> 00:05:11,609
because usually you make a mistake

138
00:05:09,478 --> 00:05:13,348
somewhere with one of these counts and

139
00:05:11,610 --> 00:05:14,788
then you're like I you know so it's not

140
00:05:13,348 --> 00:05:16,469
really a huge deal but it just means

141
00:05:14,788 --> 00:05:17,728
it's a little more inconvenient a little

142
00:05:16,470 --> 00:05:21,750
more stumbly as you kind of go through

143
00:05:17,728 --> 00:05:22,860
things so all right I guess actually

144
00:05:21,750 --> 00:05:24,538
these are the same these are still

145
00:05:22,860 --> 00:05:26,038
sample count for right these guys we're

146
00:05:24,538 --> 00:05:27,269
all cleaning out sample count for so

147
00:05:26,038 --> 00:05:30,300
they're going through and they're just

148
00:05:27,269 --> 00:05:33,689
clearing out those real buffers then we

149
00:05:30,300 --> 00:05:35,840
go in here right as we pull these things

150
00:05:33,689 --> 00:05:38,848
in and we're going to iterate over

151
00:05:35,839 --> 00:05:40,769
samples in here what we'll do is we'll

152
00:05:38,848 --> 00:05:43,978
lock these guys to sample count eight

153
00:05:40,769 --> 00:05:45,389
and then when we come through down at

154
00:05:43,978 --> 00:05:48,240
the bottom we're still using sample

155
00:05:45,389 --> 00:05:49,649
count for although actually so I guess

156
00:05:48,240 --> 00:05:51,538
at the bottom we wouldn't wanna do that

157
00:05:49,649 --> 00:05:53,370
the bottom we do want to use sample

158
00:05:51,538 --> 00:05:57,719
count eight because what we'd like to do

159
00:05:53,370 --> 00:06:00,870
is well no I guess that's not true I

160
00:05:57,720 --> 00:06:03,930
guess since we're reading since we're

161
00:06:00,870 --> 00:06:05,848
writing in lr 0 and lr 1 then that's

162
00:06:03,930 --> 00:06:09,000
fine so I think the only person who

163
00:06:05,848 --> 00:06:12,629
really needs to worry about eight wide

164
00:06:09,000 --> 00:06:15,180
loads is going to be in here where we're

165
00:06:12,629 --> 00:06:16,408
loading from channel buffers that have

166
00:06:15,180 --> 00:06:21,720
eight thing you know that that are

167
00:06:16,408 --> 00:06:26,038
packed 16s that are not interleaved

168
00:06:21,720 --> 00:06:27,100
right so yeah so let's see here let me

169
00:06:26,038 --> 00:06:30,120
go ahead and

170
00:06:27,100 --> 00:06:32,740
and let's see if this runs at all yeah

171
00:06:30,120 --> 00:06:34,569
so that's fine even though right now

172
00:06:32,740 --> 00:06:37,480
we're not actually doing the work of

173
00:06:34,569 --> 00:06:40,569
making sure that that actually does do

174
00:06:37,480 --> 00:06:42,520
the alignment I guess we could make sure

175
00:06:40,569 --> 00:06:47,170
that that's going to happen by going

176
00:06:42,519 --> 00:06:52,049
into handmade win32 see your groups code

177
00:06:47,170 --> 00:06:54,730
win32 and sample count is presumably

178
00:06:52,050 --> 00:06:57,819
already being or are we actually doing

179
00:06:54,730 --> 00:07:01,629
this yet bites to write can get samples

180
00:06:57,819 --> 00:07:04,959
so it looks like it looks like we are

181
00:07:01,629 --> 00:07:06,939
not yet actually we're giving it the

182
00:07:04,959 --> 00:07:09,939
sample count so I guess the only thing

183
00:07:06,939 --> 00:07:12,009
we really did was we just made sure that

184
00:07:09,939 --> 00:07:14,620
when we allocated the size of the thing

185
00:07:12,009 --> 00:07:15,879
we used maximum possible overrun here to

186
00:07:14,620 --> 00:07:19,360
make sure we had room for it to kind of

187
00:07:15,879 --> 00:07:21,939
right over uh but that's not you know

188
00:07:19,360 --> 00:07:24,910
that's not really what we want it to do

189
00:07:21,939 --> 00:07:27,759
at the end of the day that's that's

190
00:07:24,910 --> 00:07:31,210
really not not really correct and the

191
00:07:27,759 --> 00:07:32,860
reason that I say that is because we we

192
00:07:31,209 --> 00:07:34,839
always want the number of samples we

193
00:07:32,860 --> 00:07:36,970
actually asked for to line up with this

194
00:07:34,839 --> 00:07:39,399
so I think that's something that we kind

195
00:07:36,970 --> 00:07:41,230
of need to do here so we we do want to

196
00:07:39,399 --> 00:07:44,560
make sure that we have extra room there

197
00:07:41,230 --> 00:07:45,640
perhaps for overrun things although I

198
00:07:44,560 --> 00:07:47,680
don't know that that's restricted

199
00:07:45,639 --> 00:07:49,629
s-sorry either but basically what we

200
00:07:47,680 --> 00:07:50,949
want to be able to do in fact I really

201
00:07:49,629 --> 00:07:52,779
don't know that this code I don't know

202
00:07:50,949 --> 00:07:55,060
really why I put this in here maybe just

203
00:07:52,779 --> 00:07:59,699
because it was a stupid day like before

204
00:07:55,060 --> 00:08:02,050
but really we could say you know remove

205
00:07:59,699 --> 00:08:03,879
max possible overrun because I don't

206
00:08:02,050 --> 00:08:06,340
think that's really necessary what is

207
00:08:03,879 --> 00:08:09,459
more necessary is in here when we're

208
00:08:06,339 --> 00:08:11,799
actually doing sort of this work where

209
00:08:09,459 --> 00:08:14,379
we're trying to figure out how many

210
00:08:11,800 --> 00:08:15,939
samples we want to write you can see

211
00:08:14,379 --> 00:08:18,699
that we've got this this bites to write

212
00:08:15,939 --> 00:08:20,500
value here right and bites to write is

213
00:08:18,699 --> 00:08:25,209
computed by figuring out where we want

214
00:08:20,500 --> 00:08:28,360
that target cursor to be right and the

215
00:08:25,209 --> 00:08:30,459
problem that we have is that that bites

216
00:08:28,360 --> 00:08:32,469
to write might not line up on an eight

217
00:08:30,459 --> 00:08:35,379
sample boundary and we want it to so I

218
00:08:32,469 --> 00:08:39,940
think what we would rather do right is

219
00:08:35,379 --> 00:08:43,090
we would rather force that down too

220
00:08:39,940 --> 00:08:44,770
you know whatever the you know the next

221
00:08:43,090 --> 00:08:46,210
lowest power of eight actually was and

222
00:08:44,769 --> 00:08:48,340
that's how much we would I'm not the

223
00:08:46,210 --> 00:08:49,660
most part the next lowest multiple of

224
00:08:48,340 --> 00:08:51,280
eight so I'm just gonna take a quick

225
00:08:49,659 --> 00:08:53,169
scan through here this code obviously

226
00:08:51,279 --> 00:08:54,669
isn't just test code we you know we

227
00:08:53,169 --> 00:08:56,649
haven't shipped a win32 platform layer

228
00:08:54,669 --> 00:08:58,990
but I just want to go through and look

229
00:08:56,649 --> 00:09:00,459
at it here we look at bites to lock we

230
00:08:58,990 --> 00:09:02,950
look at how many things we expect to

231
00:09:00,460 --> 00:09:04,480
have till the flip we see where the safe

232
00:09:02,950 --> 00:09:07,390
right cursor is and we see whether or

233
00:09:04,480 --> 00:09:09,310
not we would hit it we try to determine

234
00:09:07,389 --> 00:09:12,159
whether or not so low latency audio

235
00:09:09,309 --> 00:09:14,469
situation assuming it is a low latency

236
00:09:12,159 --> 00:09:16,089
one we take a look at where we should

237
00:09:14,470 --> 00:09:19,960
write it otherwise we just put it at the

238
00:09:16,090 --> 00:09:22,360
safe location and that target cursor is

239
00:09:19,960 --> 00:09:25,240
where we are thinking that I guess we

240
00:09:22,360 --> 00:09:34,360
would like to to leave our rights at

241
00:09:25,240 --> 00:09:36,879
right okay so let's see here so if the

242
00:09:34,360 --> 00:09:40,840
bite to lock is greater than the target

243
00:09:36,879 --> 00:09:42,549
cursor versus not so it looks like it

244
00:09:40,840 --> 00:09:45,190
looks like the but normally this is the

245
00:09:42,549 --> 00:09:46,899
case where we're not rapping whereas

246
00:09:45,190 --> 00:09:49,660
this is the case where we are wrapping

247
00:09:46,899 --> 00:09:51,610
right and it's going to do to rights so

248
00:09:49,659 --> 00:09:54,399
I think all we would really have to do

249
00:09:51,610 --> 00:09:57,789
here is make sure that when we actually

250
00:09:54,399 --> 00:10:01,689
do do this bites to write that we're

251
00:09:57,789 --> 00:10:03,099
going to round it right and I the only

252
00:10:01,690 --> 00:10:04,870
reason I'm not sure about that it's in

253
00:10:03,100 --> 00:10:06,850
that one hat shirt I don't remember what

254
00:10:04,870 --> 00:10:10,480
happens when we actually go to output

255
00:10:06,850 --> 00:10:11,889
the audio back in there so what I want

256
00:10:10,480 --> 00:10:14,860
to do is see when we do win through to

257
00:10:11,889 --> 00:10:16,929
sound buffer what happens in there as

258
00:10:14,860 --> 00:10:18,550
long as Phil sound over can accept any

259
00:10:16,929 --> 00:10:22,120
value four bytes to write than I think

260
00:10:18,549 --> 00:10:23,769
we're fine and it looks like it does so

261
00:10:22,120 --> 00:10:27,190
that's that looks like that's just

262
00:10:23,769 --> 00:10:31,139
totally totally fine and if we take a

263
00:10:27,190 --> 00:10:35,620
look here it looks like it also updates

264
00:10:31,139 --> 00:10:40,990
sort of the the the samples here for us

265
00:10:35,620 --> 00:10:42,310
a sample count unlock well so how does

266
00:10:40,990 --> 00:10:46,600
it know

267
00:10:42,309 --> 00:10:49,229
oh so I guess it doesn't actually all

268
00:10:46,600 --> 00:10:51,159
right well I think we're okay though I

269
00:10:49,230 --> 00:10:52,509
think that should probably be fine

270
00:10:51,159 --> 00:10:55,689
because we don't ever actually ask for

271
00:10:52,509 --> 00:10:57,370
that so yeah that that's fine so yeah so

272
00:10:55,690 --> 00:10:59,170
what we want to do here I think is just

273
00:10:57,370 --> 00:11:01,289
take bites to write and make sure bites

274
00:10:59,169 --> 00:11:04,209
to write ends up getting rounded up

275
00:11:01,289 --> 00:11:07,809
essentially so what we want to do is say

276
00:11:04,210 --> 00:11:09,879
okay place to write minus divided by the

277
00:11:07,809 --> 00:11:11,799
bytes per sample is how many samples we

278
00:11:09,879 --> 00:11:15,399
want to write what we want to do is we

279
00:11:11,799 --> 00:11:17,019
want to align that to the eight sample

280
00:11:15,399 --> 00:11:18,970
boundary right to make sure that we're

281
00:11:17,019 --> 00:11:20,230
actually going to do an eight sample

282
00:11:18,970 --> 00:11:23,379
boundary and then we want to do is

283
00:11:20,230 --> 00:11:28,120
change bytes to write back to whatever

284
00:11:23,379 --> 00:11:30,370
it would have been right if it had come

285
00:11:28,120 --> 00:11:33,700
out correctly in the first place right

286
00:11:30,370 --> 00:11:35,560
like this and so we're just going to go

287
00:11:33,700 --> 00:11:38,259
ahead and actually just force that value

288
00:11:35,559 --> 00:11:39,909
to always be aligned by eight and so

289
00:11:38,259 --> 00:11:42,039
then what I can do there is I can

290
00:11:39,909 --> 00:11:46,600
instead of doing this now I can just

291
00:11:42,039 --> 00:11:49,088
assert that that this is always going to

292
00:11:46,600 --> 00:11:52,360
be true right I can just say you know

293
00:11:49,089 --> 00:11:53,980
what this sound buffer always has to

294
00:11:52,360 --> 00:11:56,740
play in chunks of eight that's just a

295
00:11:53,980 --> 00:12:00,370
requirement so we can just assert that

296
00:11:56,740 --> 00:12:05,710
you know this those bottom bits are

297
00:12:00,370 --> 00:12:09,159
never set right of the sample count so I

298
00:12:05,710 --> 00:12:11,610
think that should be good let's let's

299
00:12:09,159 --> 00:12:11,610
find out

300
00:12:13,899 --> 00:12:15,959
you

301
00:12:20,200 --> 00:12:25,840
seems pretty reasonable and so what I'd

302
00:12:23,559 --> 00:12:29,109
like to do in addition now is i'd like

303
00:12:25,840 --> 00:12:31,000
to go ahead and ensure that sounds

304
00:12:29,110 --> 00:12:33,310
themselves always get updated in

305
00:12:31,000 --> 00:12:37,289
multiples of eight samples and that's

306
00:12:33,309 --> 00:12:39,429
actually not difficult to do in terms of

307
00:12:37,289 --> 00:12:41,740
the way that we structure the code here

308
00:12:39,429 --> 00:12:44,829
with the exception of the fact that this

309
00:12:41,740 --> 00:12:48,070
samples to mix thing is all in terms of

310
00:12:44,830 --> 00:12:52,180
individual samples and that's kind of a

311
00:12:48,070 --> 00:12:54,129
little bit of a mistake right what we

312
00:12:52,179 --> 00:12:56,889
want to do is think of all of these

313
00:12:54,129 --> 00:12:59,139
values in terms of multiples of eight

314
00:12:56,889 --> 00:13:02,230
and similarly what we could do in here

315
00:12:59,139 --> 00:13:04,120
when we talk about loaded sounds and

316
00:13:02,230 --> 00:13:08,200
that sort of stuff so if we go into you

317
00:13:04,120 --> 00:13:10,480
know handmade asset dot H if what we do

318
00:13:08,200 --> 00:13:13,330
here is just say sample County we could

319
00:13:10,480 --> 00:13:16,629
say note Casey this is the sample count

320
00:13:13,330 --> 00:13:18,850
/ 8 what we could do is just make

321
00:13:16,629 --> 00:13:21,399
absolutely everything always work that

322
00:13:18,850 --> 00:13:24,310
way meaning no matter what the sound is

323
00:13:21,399 --> 00:13:27,730
it has to be sort of in that that sort

324
00:13:24,309 --> 00:13:29,709
of chunked you know in that chunked it

325
00:13:27,730 --> 00:13:31,060
has to line up on on those those eight

326
00:13:29,710 --> 00:13:33,310
boundaries right that's just a

327
00:13:31,059 --> 00:13:36,519
requirement that we're going to say that

328
00:13:33,309 --> 00:13:38,229
you have to do and you know that might

329
00:13:36,519 --> 00:13:42,189
create some problems for people who want

330
00:13:38,230 --> 00:13:44,080
to make looping sounds right but I've

331
00:13:42,190 --> 00:13:48,340
never been a huge fan of doing looping

332
00:13:44,080 --> 00:13:52,629
sounds anyway that makes sense I kind of

333
00:13:48,340 --> 00:13:54,790
hate looping sounds I I try very very

334
00:13:52,629 --> 00:13:57,689
hard to never actually use looping

335
00:13:54,789 --> 00:14:00,459
sounds I instead just compose lots of

336
00:13:57,690 --> 00:14:03,510
overlapping sounds to make longer to

337
00:14:00,460 --> 00:14:07,360
make things that go on forever mmm

338
00:14:03,509 --> 00:14:09,639
because looping sounds just you hear it

339
00:14:07,360 --> 00:14:11,320
you know you hear it so I don't care

340
00:14:09,639 --> 00:14:12,580
about giving that up at all other people

341
00:14:11,320 --> 00:14:13,870
might and they could make a different

342
00:14:12,580 --> 00:14:15,490
decision there I would not hold it

343
00:14:13,870 --> 00:14:19,240
against them but you know my code base

344
00:14:15,490 --> 00:14:21,100
my rules so I am totally fine with not

345
00:14:19,240 --> 00:14:23,500
having any looping sounds at all because

346
00:14:21,100 --> 00:14:26,500
as far as I'm concerned I don't ever

347
00:14:23,500 --> 00:14:31,149
want to hear a looping sound ever pretty

348
00:14:26,500 --> 00:14:33,759
much all right so let's see here if we

349
00:14:31,149 --> 00:14:35,169
have sample count eight in

350
00:14:33,759 --> 00:14:37,000
sample count you can see what we were

351
00:14:35,169 --> 00:14:38,709
doing here is we were actually taking a

352
00:14:37,000 --> 00:14:41,409
look at how big the data was and then we

353
00:14:38,710 --> 00:14:43,300
were doing this sort of copy here and so

354
00:14:41,409 --> 00:14:45,399
we need to be able to do is we need to

355
00:14:43,299 --> 00:14:47,799
be able to change this here so that in

356
00:14:45,399 --> 00:14:51,519
the case where we load a file which

357
00:14:47,799 --> 00:14:53,379
might have had more I'm sorry not a

358
00:14:51,519 --> 00:14:56,230
multiple of 8 which is probably fairly

359
00:14:53,379 --> 00:14:59,110
common just randomly we want to Pat it

360
00:14:56,230 --> 00:15:01,360
out basically so when we do all this

361
00:14:59,110 --> 00:15:03,460
right you can see us doing it here we we

362
00:15:01,360 --> 00:15:04,899
set all this stuff up where we we create

363
00:15:03,460 --> 00:15:06,730
you know whatever we need to create we

364
00:15:04,899 --> 00:15:10,870
do the D Swizzle and all that sort of

365
00:15:06,730 --> 00:15:13,090
stuff right and you know we sort of swap

366
00:15:10,870 --> 00:15:14,980
that sample data out and it looks like

367
00:15:13,090 --> 00:15:17,500
we're just doing that essentially in

368
00:15:14,980 --> 00:15:19,060
place right we're just we're totally

369
00:15:17,500 --> 00:15:22,000
keeping that sample data entirely in

370
00:15:19,059 --> 00:15:23,259
place at the moment and so what we want

371
00:15:22,000 --> 00:15:25,539
to do is just go ahead and force that

372
00:15:23,259 --> 00:15:27,069
out to eight now that's a little tricky

373
00:15:25,539 --> 00:15:29,889
because in this case we don't really

374
00:15:27,070 --> 00:15:31,390
know since the file it's almost like I

375
00:15:29,889 --> 00:15:34,120
think in this case we would probably

376
00:15:31,389 --> 00:15:37,269
want to allocate some additional space

377
00:15:34,120 --> 00:15:41,049
and copy the stuff in but it's kind of

378
00:15:37,269 --> 00:15:43,360
annoying to do that just because if we

379
00:15:41,049 --> 00:15:45,909
were to do that if you think about it in

380
00:15:43,360 --> 00:15:48,129
me the once we have these things p plus

381
00:15:45,909 --> 00:15:49,449
an asset file there wouldn't be any need

382
00:15:48,129 --> 00:15:51,159
for that so we'd be introducing

383
00:15:49,450 --> 00:15:53,080
something in here that's sort of an

384
00:15:51,159 --> 00:15:55,389
artificial need that this thing has

385
00:15:53,080 --> 00:15:59,020
which is the ability to allocate memory

386
00:15:55,389 --> 00:16:00,309
and I don't want to make that be

387
00:15:59,019 --> 00:16:01,360
something that people are thinking about

388
00:16:00,309 --> 00:16:04,389
meaning I don't want to be thinking

389
00:16:01,360 --> 00:16:06,759
about that as we're doing the work on

390
00:16:04,389 --> 00:16:09,059
stuff here so what I'd rather do I think

391
00:16:06,759 --> 00:16:12,069
is just again cheese it out here and

392
00:16:09,059 --> 00:16:13,689
assume that we can just Pat out and you

393
00:16:12,070 --> 00:16:15,190
know if we have to we can always make

394
00:16:13,690 --> 00:16:16,900
sure that there's padding on the end of

395
00:16:15,190 --> 00:16:18,340
debug platform read entire file or

396
00:16:16,899 --> 00:16:19,840
something to make sure that we don't

397
00:16:18,340 --> 00:16:22,540
have overruns but what I want to do is

398
00:16:19,840 --> 00:16:24,250
make this work as closely as possible to

399
00:16:22,539 --> 00:16:26,439
how it would be working in terms of

400
00:16:24,250 --> 00:16:28,480
engine requirements to when we actually

401
00:16:26,440 --> 00:16:31,780
have everything pre-processed properly

402
00:16:28,480 --> 00:16:36,399
right so what I want to do here is just

403
00:16:31,779 --> 00:16:39,000
say ok when we load in this stuff it

404
00:16:36,399 --> 00:16:39,000
looks like

405
00:16:39,299 --> 00:16:49,409
let's see looks like what we would want

406
00:16:42,990 --> 00:16:51,990
to do here is just at the end we would

407
00:16:49,409 --> 00:16:55,169
want to Pat it out if the sample count

408
00:16:51,990 --> 00:16:58,799
was not correct so basically in here

409
00:16:55,169 --> 00:17:01,679
we've got a sample you know pad samples

410
00:16:58,799 --> 00:17:05,058
and pad samples is just going to be the

411
00:17:01,679 --> 00:17:08,629
result sample count whatever that was

412
00:17:05,058 --> 00:17:12,838
it's going to be a line eight of that

413
00:17:08,630 --> 00:17:14,040
and minus you know the the actual sample

414
00:17:12,838 --> 00:17:17,039
count I guess the other way we could do

415
00:17:14,039 --> 00:17:19,678
it is just do sample count eight equals

416
00:17:17,039 --> 00:17:22,199
the line eight like so and then we could

417
00:17:19,679 --> 00:17:24,120
say that we're going to set the sample

418
00:17:22,199 --> 00:17:26,519
capped at that and all we need to do

419
00:17:24,119 --> 00:17:30,359
here is just make sure that we set those

420
00:17:26,519 --> 00:17:32,308
ending samples to 0 for all of the

421
00:17:30,359 --> 00:17:34,199
channels that actually exist which of

422
00:17:32,308 --> 00:17:36,240
course I think only one channel can

423
00:17:34,200 --> 00:17:37,500
exist at the moment so I don't even know

424
00:17:36,240 --> 00:17:46,109
why we're bothering but that's a

425
00:17:37,500 --> 00:17:49,259
separate issue okay all right so what we

426
00:17:46,109 --> 00:17:53,849
want to do here is say for each channel

427
00:17:49,259 --> 00:17:56,400
we want to go over sort of the the

428
00:17:53,849 --> 00:17:59,099
samples that are missing if that makes

429
00:17:56,400 --> 00:18:03,150
sense we want to say that we that from

430
00:17:59,099 --> 00:18:07,109
the sample count eight or i should say

431
00:18:03,150 --> 00:18:09,179
sample count a line eight right from

432
00:18:07,109 --> 00:18:13,529
sample count a line aight i want to go

433
00:18:09,179 --> 00:18:16,019
from there up to or i should say that

434
00:18:13,529 --> 00:18:17,609
was so it's like Miss speak there I want

435
00:18:16,019 --> 00:18:20,279
to go from whatever the sample count was

436
00:18:17,609 --> 00:18:23,399
to the new aligned eight sample count

437
00:18:20,279 --> 00:18:30,269
and I wanted to stick into the actual

438
00:18:23,400 --> 00:18:32,640
sample area I want to stick in the zeros

439
00:18:30,269 --> 00:18:34,109
that we would need to Pat it out and

440
00:18:32,640 --> 00:18:36,470
then when we're done we would just set

441
00:18:34,109 --> 00:18:41,039
the sample count equal to sample count

442
00:18:36,470 --> 00:18:42,660
align eight right like so but since we

443
00:18:41,039 --> 00:18:44,399
want to store this I think a sample

444
00:18:42,660 --> 00:18:46,500
count eight which is the divided version

445
00:18:44,400 --> 00:18:49,110
we would go ahead and divide that by

446
00:18:46,500 --> 00:18:51,089
eight right and so then what I'll do

447
00:18:49,109 --> 00:18:53,069
here is take result sample count and

448
00:18:51,089 --> 00:18:55,888
turn that into just an actual

449
00:18:53,069 --> 00:18:57,298
thing instead of using result sample

450
00:18:55,888 --> 00:18:58,619
counts as there is no result sample

451
00:18:57,298 --> 00:19:01,138
count anymore it's only example count

452
00:18:58,619 --> 00:19:04,008
eight so changing all of these it's to

453
00:19:01,138 --> 00:19:07,398
sample count which is now a local thing

454
00:19:04,009 --> 00:19:11,009
and then in here rank we just still use

455
00:19:07,398 --> 00:19:14,388
sample count every any everywhere let's

456
00:19:11,009 --> 00:19:17,610
see here sample count sample count

457
00:19:14,388 --> 00:19:19,500
sample count and then at the end is the

458
00:19:17,609 --> 00:19:23,209
only place now that we would set it

459
00:19:19,500 --> 00:19:28,919
right that's that's about it I think

460
00:19:23,210 --> 00:19:30,480
let's take a look okay so now we know

461
00:19:28,919 --> 00:19:33,090
the sample counts are always aligned

462
00:19:30,480 --> 00:19:35,399
eight then we should now be able to do

463
00:19:33,089 --> 00:19:37,230
just about everything in that aligned in

464
00:19:35,398 --> 00:19:38,489
in the math where everything is divided

465
00:19:37,230 --> 00:19:40,259
by eight which is what I would like to

466
00:19:38,490 --> 00:19:43,919
be doing so that just everything is in

467
00:19:40,259 --> 00:19:46,079
these little 8 wide chunks so let's see

468
00:19:43,919 --> 00:19:48,870
how we would do that total samples to

469
00:19:46,079 --> 00:19:50,788
mix right what we want to do is for

470
00:19:48,869 --> 00:19:53,729
total samples to mix we're going to be

471
00:19:50,788 --> 00:19:54,960
using that sample count eight that's how

472
00:19:53,730 --> 00:19:58,500
many we're starting with we're assuming

473
00:19:54,960 --> 00:20:02,038
we're doing the whole buffer right and

474
00:19:58,500 --> 00:20:03,329
now we're also going to be well I guess

475
00:20:02,038 --> 00:20:06,058
we'll do one thing at the time so I'll

476
00:20:03,329 --> 00:20:07,918
still use I'll still use these things as

477
00:20:06,058 --> 00:20:11,668
reals for now and then we'll switch up

478
00:20:07,919 --> 00:20:15,000
later so total samples to mix is now

479
00:20:11,669 --> 00:20:16,740
total samples to mix eight right and so

480
00:20:15,000 --> 00:20:18,750
what we want to do is sort of propagate

481
00:20:16,740 --> 00:20:20,069
that change through again I'm using the

482
00:20:18,750 --> 00:20:22,288
fact that i'm adding the eighth to the

483
00:20:20,069 --> 00:20:24,750
end to show me all of the places it was

484
00:20:22,288 --> 00:20:26,940
used and kind of guide me through the

485
00:20:24,750 --> 00:20:30,138
process of updating everything that

486
00:20:26,940 --> 00:20:33,600
would therefore need to be updated right

487
00:20:30,138 --> 00:20:35,158
so in here now we have a real sample

488
00:20:33,599 --> 00:20:38,519
remaining and sound again this is going

489
00:20:35,159 --> 00:20:40,379
to be by eight I guess and we would say

490
00:20:38,519 --> 00:20:42,509
that there's the sample count for the

491
00:20:40,378 --> 00:20:44,699
loaded sound it's going to be eight and

492
00:20:42,509 --> 00:20:46,579
we're going to take a look at the

493
00:20:44,700 --> 00:20:54,319
samples played which is also going to be

494
00:20:46,579 --> 00:20:54,319
by eight right and let's see here

495
00:21:02,500 --> 00:21:06,849
you know there's going to be something

496
00:21:04,369 --> 00:21:09,558
that's going to be kind of tricky here

497
00:21:06,849 --> 00:21:12,408
now that i think about it which is that

498
00:21:09,558 --> 00:21:16,668
the pitch shifting which wants to go in

499
00:21:12,409 --> 00:21:22,190
the middle of samples is going to force

500
00:21:16,669 --> 00:21:24,230
us essentially to it's going to force us

501
00:21:22,190 --> 00:21:29,058
to have this kind of weird shift that

502
00:21:24,230 --> 00:21:31,669
goes on if that makes sense let me think

503
00:21:29,058 --> 00:21:33,740
about exactly before I do this let me

504
00:21:31,669 --> 00:21:38,419
think about exactly how this has to

505
00:21:33,740 --> 00:21:40,099
occur right because I think the pitch

506
00:21:38,419 --> 00:21:43,610
shifting makes it so that we have a

507
00:21:40,099 --> 00:21:47,148
problem keeping things aligned as nicely

508
00:21:43,609 --> 00:21:49,849
as we would like them to be aligned if

509
00:21:47,148 --> 00:21:51,739
that makes sense so maybe this is

510
00:21:49,849 --> 00:21:53,599
actually not necessary what I'm doing or

511
00:21:51,740 --> 00:21:56,628
I shouldn't say not necessary but it

512
00:21:53,599 --> 00:21:59,740
would mean that if we wanted to do if we

513
00:21:56,628 --> 00:22:05,528
wanted to actually keep things aligned

514
00:21:59,740 --> 00:22:08,419
we wouldn't actually be able to like we

515
00:22:05,528 --> 00:22:10,700
we would not actually be able to do

516
00:22:08,419 --> 00:22:12,379
things in nicely aligned chunks we would

517
00:22:10,700 --> 00:22:14,929
have to basically always read on the

518
00:22:12,378 --> 00:22:18,378
line so here's the reason I'm saying

519
00:22:14,929 --> 00:22:20,750
that right is because if you take a look

520
00:22:18,378 --> 00:22:23,599
at how this is going to happen if

521
00:22:20,750 --> 00:22:25,398
everything was playing at its normal one

522
00:22:23,599 --> 00:22:27,980
to one rate then we're totally perfect

523
00:22:25,398 --> 00:22:30,859
right because what would happen is you

524
00:22:27,980 --> 00:22:33,528
know you have a 128-bit read here at a

525
00:22:30,859 --> 00:22:37,038
128-bit read here and what's in there is

526
00:22:33,528 --> 00:22:43,579
basically eight sound samples right like

527
00:22:37,038 --> 00:22:48,169
0 1 2 3 4 5 6 7 2 and have another 10 1

528
00:22:43,579 --> 00:22:50,028
2 3 4 5 6 7 right and so as we come

529
00:22:48,169 --> 00:22:55,100
through you've got the output buffer and

530
00:22:50,028 --> 00:23:00,798
it's you know going along and it's going

531
00:22:55,099 --> 00:23:03,500
to have you know L 0r0 l1 r1 l2 r to l

532
00:23:00,798 --> 00:23:05,179
three are three and so on and so when

533
00:23:03,500 --> 00:23:06,829
you're coming in you're just loading in

534
00:23:05,179 --> 00:23:09,560
one of these guys right you're

535
00:23:06,829 --> 00:23:11,419
processing 8 wide essentially you're

536
00:23:09,559 --> 00:23:15,379
you're doing 24 wide paths right we do

537
00:23:11,420 --> 00:23:18,140
we do this half in float and then this

538
00:23:15,380 --> 00:23:20,030
half and float right and then we would

539
00:23:18,140 --> 00:23:21,500
output them into one of these buffers

540
00:23:20,029 --> 00:23:22,940
and everything would stay nicely aligned

541
00:23:21,500 --> 00:23:25,970
as we played through because the next

542
00:23:22,940 --> 00:23:27,680
time we you know the next sample would

543
00:23:25,970 --> 00:23:31,339
essentially be here and we do the exact

544
00:23:27,680 --> 00:23:33,320
same thing again aligned right but the

545
00:23:31,339 --> 00:23:35,569
problem is if we are actually playing

546
00:23:33,319 --> 00:23:36,859
along at some other sample rates so

547
00:23:35,569 --> 00:23:38,779
instead of one point oh we're playing

548
00:23:36,859 --> 00:23:40,909
around at one point nine or something

549
00:23:38,779 --> 00:23:42,799
like this that becomes really

550
00:23:40,910 --> 00:23:46,610
problematic because now instead of

551
00:23:42,799 --> 00:23:49,159
advancing from here to here the next one

552
00:23:46,609 --> 00:23:51,349
is actually going to be like from here

553
00:23:49,160 --> 00:23:53,000
to here right so it's going to it's

554
00:23:51,349 --> 00:23:56,449
going to first do this and then it's

555
00:23:53,000 --> 00:24:00,049
going to do that and so it's it's it's

556
00:23:56,450 --> 00:24:02,000
got this nasty problem where if I want

557
00:24:00,049 --> 00:24:07,879
to support that variable samplerate I

558
00:24:02,000 --> 00:24:12,109
can't have things nicely aligned and I

559
00:24:07,880 --> 00:24:15,080
can't really think of any of any real

560
00:24:12,109 --> 00:24:19,849
way I could avoid that right like if I

561
00:24:15,079 --> 00:24:21,109
want to support the pitch Bend I it just

562
00:24:19,849 --> 00:24:23,089
doesn't seem like there's any way to

563
00:24:21,109 --> 00:24:25,669
keep it aligned you're going to end up

564
00:24:23,089 --> 00:24:34,369
having to do on aligned reads from the

565
00:24:25,670 --> 00:24:36,890
sample buffers and yeah I don't I don't

566
00:24:34,369 --> 00:24:38,629
know what we could do about that so I

567
00:24:36,890 --> 00:24:41,540
wonder if maybe we just have to bite

568
00:24:38,630 --> 00:24:43,160
them we have to bite the unaligned reeds

569
00:24:41,539 --> 00:24:45,559
and there's really not much we can do

570
00:24:43,160 --> 00:24:52,930
about it and we'd always process aight

571
00:24:45,559 --> 00:24:55,129
output samples at a time but yeah I

572
00:24:52,930 --> 00:24:57,289
don't know I don't think we can do it

573
00:24:55,130 --> 00:24:58,670
guys I don't think so maybe think about

574
00:24:57,289 --> 00:25:00,980
that a little bit see if you can think

575
00:24:58,670 --> 00:25:02,600
about it but it seems like we wouldn't

576
00:25:00,980 --> 00:25:04,610
actually be able to do that and so I

577
00:25:02,599 --> 00:25:06,889
think we still want to keep doing

578
00:25:04,609 --> 00:25:09,259
roughly what we're doing here but it

579
00:25:06,890 --> 00:25:11,570
does mean that that we it's never going

580
00:25:09,259 --> 00:25:13,400
to be aligned so meaning this stuff

581
00:25:11,569 --> 00:25:15,679
right here is not actually going to be a

582
00:25:13,400 --> 00:25:17,230
line samples to mix will still be

583
00:25:15,680 --> 00:25:21,310
aligned to eight and we'll move along

584
00:25:17,230 --> 00:25:22,819
but real sample remaining and sound uh

585
00:25:21,309 --> 00:25:26,599
yeah

586
00:25:22,819 --> 00:25:28,490
no this parts going to be this parts

587
00:25:26,599 --> 00:25:31,490
going to have to be all of aligned and

588
00:25:28,490 --> 00:25:34,009
weird so yes so I think that's just the

589
00:25:31,490 --> 00:25:36,710
way it goes I don't know what else to do

590
00:25:34,009 --> 00:25:38,778
so I guess we keep it this way it's on a

591
00:25:36,710 --> 00:25:40,669
line but who cares and we'll keep

592
00:25:38,778 --> 00:25:42,798
everything in multiples of eight for now

593
00:25:40,669 --> 00:25:45,860
and we'll see how that goes so we've got

594
00:25:42,798 --> 00:25:47,929
samples remaining and sound equals you

595
00:25:45,859 --> 00:25:49,609
know whatever the when we round this

596
00:25:47,929 --> 00:25:52,278
real samples meaning and sound again

597
00:25:49,609 --> 00:25:53,959
this is all in units that are divided by

598
00:25:52,278 --> 00:25:56,750
eight we then look to see whether the

599
00:25:53,960 --> 00:25:59,360
samples to mix so that the eight counts

600
00:25:56,750 --> 00:26:01,038
is going to stop early and if so we

601
00:25:59,359 --> 00:26:02,028
stopped at early like this so we're

602
00:26:01,038 --> 00:26:05,329
really doing exact same thing just

603
00:26:02,028 --> 00:26:08,359
everything's / 8 now we then do the same

604
00:26:05,329 --> 00:26:10,339
thing here with volume ended eight and

605
00:26:08,359 --> 00:26:11,959
when we come through here we've got the

606
00:26:10,339 --> 00:26:13,548
both volumes at the same time bye baby

607
00:26:11,960 --> 00:26:14,480
we'll take a look at the end but we

608
00:26:13,548 --> 00:26:16,038
don't really care about that at the

609
00:26:14,480 --> 00:26:17,899
moment but we'd like to fix that to do

610
00:26:16,038 --> 00:26:20,028
eventually as well come through the

611
00:26:17,898 --> 00:26:22,250
channel indices and let's see what we've

612
00:26:20,028 --> 00:26:23,628
got here so we want to do exactly the

613
00:26:22,250 --> 00:26:25,460
same thing that we've been doing we want

614
00:26:23,628 --> 00:26:27,980
everything to be on an eight count now

615
00:26:25,460 --> 00:26:29,899
so if we've got the Delta volume we have

616
00:26:27,980 --> 00:26:32,569
the target volume minus the regular

617
00:26:29,898 --> 00:26:34,788
volume that's the difference right and

618
00:26:32,569 --> 00:26:36,378
then we've got the sample count so we

619
00:26:34,788 --> 00:26:38,569
want to do is figure out in counts of

620
00:26:36,378 --> 00:26:40,759
eight how much is that going to be right

621
00:26:38,569 --> 00:26:44,269
so we would have the Delta volume

622
00:26:40,759 --> 00:26:46,819
divided by the the d volume here and we

623
00:26:44,269 --> 00:26:50,538
drowned that out right but before we

624
00:26:46,819 --> 00:26:53,240
cast it down to a u32 what we would want

625
00:26:50,538 --> 00:26:56,230
to do here is again divide that by eight

626
00:26:53,240 --> 00:27:00,950
right so we would want to essentially

627
00:26:56,230 --> 00:27:03,769
multiply on the headend 1 over 8 to get

628
00:27:00,950 --> 00:27:07,360
that to get that sort of contraction

629
00:27:03,769 --> 00:27:11,929
there right how do I do that one over

630
00:27:07,359 --> 00:27:15,048
8.1 25 right like so so we want to do

631
00:27:11,929 --> 00:27:17,350
this so now that's the volume sample

632
00:27:15,048 --> 00:27:20,658
County and again we do the same clamping

633
00:27:17,349 --> 00:27:21,859
that we were doing up ahead right I

634
00:27:20,659 --> 00:27:23,210
don't know why I said this is volume

635
00:27:21,859 --> 00:27:25,849
ended eight that was kind of stupid

636
00:27:23,210 --> 00:27:27,649
that's not it's just a boolean all right

637
00:27:25,849 --> 00:27:29,418
so then we come through here we have our

638
00:27:27,648 --> 00:27:31,939
sample position right and that's going

639
00:27:29,419 --> 00:27:34,970
to be samples played and we're going to

640
00:27:31,940 --> 00:27:36,529
again make that be at eight you know a

641
00:27:34,970 --> 00:27:38,480
multiple of 8 thing the

642
00:27:36,529 --> 00:27:40,789
only difference is its floating point so

643
00:27:38,480 --> 00:27:42,730
really when we multiply it out we're

644
00:27:40,789 --> 00:27:45,230
going to actually respect its sub

645
00:27:42,730 --> 00:27:47,329
position instead of rounding it to a

646
00:27:45,230 --> 00:27:49,339
multiple of eight so we're pulling we're

647
00:27:47,329 --> 00:27:51,319
going to have to load unaligned from the

648
00:27:49,339 --> 00:27:53,389
sound and that again is just to make

649
00:27:51,319 --> 00:27:59,210
sure that we can support that variable

650
00:27:53,390 --> 00:28:01,910
pitch right so off we go we take our

651
00:27:59,210 --> 00:28:05,630
sample index and our sample index is

652
00:28:01,910 --> 00:28:07,460
going to be floor real 32 to n 32 of the

653
00:28:05,630 --> 00:28:09,410
sample position eight right we're going

654
00:28:07,460 --> 00:28:10,519
to multiply that by eight to get it back

655
00:28:09,410 --> 00:28:14,390
up and then we're going to floor it

656
00:28:10,519 --> 00:28:20,750
right so that's all good that's all well

657
00:28:14,390 --> 00:28:23,480
and good right frack works the same we

658
00:28:20,750 --> 00:28:25,579
then have our samples here and the

659
00:28:23,480 --> 00:28:27,950
samples are going to be done sort of

660
00:28:25,579 --> 00:28:30,069
eight wide if you will and so what we

661
00:28:27,950 --> 00:28:33,950
probably want to do here is actually

662
00:28:30,069 --> 00:28:38,000
emulate that in in our loop so we can we

663
00:28:33,950 --> 00:28:41,120
could emulate doing them eight wide if

664
00:28:38,000 --> 00:28:42,380
you will and then I'll kind of jump over

665
00:28:41,119 --> 00:28:45,789
that loop since that's the main thing

666
00:28:42,380 --> 00:28:50,090
that we got to work on here let's see

667
00:28:45,789 --> 00:28:51,470
let's do that and then we'll fix this

668
00:28:50,089 --> 00:28:54,559
loop by moving it into simdi if that

669
00:28:51,470 --> 00:28:57,440
makes sense so yes so the volume right

670
00:28:54,559 --> 00:28:59,779
is going to be something that gets

671
00:28:57,440 --> 00:29:03,470
incremented now by eight times the Delta

672
00:28:59,779 --> 00:29:06,730
volume if that makes sense in fact I

673
00:29:03,470 --> 00:29:09,589
guess what we could do is this d volume

674
00:29:06,730 --> 00:29:13,039
we could just have the eight you

675
00:29:09,589 --> 00:29:14,869
multiply into that right so that way

676
00:29:13,039 --> 00:29:16,940
when we increment it as well it works

677
00:29:14,869 --> 00:29:19,099
the same way right so we have D volume

678
00:29:16,940 --> 00:29:23,210
here this is actually going to be d

679
00:29:19,099 --> 00:29:25,429
volume 8 so it's eight times the rate of

680
00:29:23,210 --> 00:29:29,180
change that we were expecting to see

681
00:29:25,430 --> 00:29:31,910
right so yeah I think that's good and d

682
00:29:29,180 --> 00:29:34,640
sample would presumably be handled the

683
00:29:31,910 --> 00:29:38,590
exact same way so this is actually eight

684
00:29:34,640 --> 00:29:41,990
times the increment of the sample right

685
00:29:38,589 --> 00:29:47,000
so let's take a look what else we got

686
00:29:41,990 --> 00:29:53,359
here so this is divided by D sample so

687
00:29:47,000 --> 00:29:57,410
oh I guess the problem with that though

688
00:29:53,359 --> 00:30:04,699
is that this calculation wants to know

689
00:29:57,410 --> 00:30:12,380
about that movement right it wants to

690
00:30:04,700 --> 00:30:16,809
know about this not not x 8 it would

691
00:30:12,380 --> 00:30:19,430
seem right because you want to know

692
00:30:16,809 --> 00:30:21,710
because you've already pre divided these

693
00:30:19,430 --> 00:30:26,000
guys by eight which I suppose we could

694
00:30:21,710 --> 00:30:27,680
just not / ain't not pre / 8 and since

695
00:30:26,000 --> 00:30:29,299
we're already dividing by D sample maybe

696
00:30:27,680 --> 00:30:30,920
this is just an excuse to say oh you

697
00:30:29,299 --> 00:30:32,149
didn't really have to change that you

698
00:30:30,920 --> 00:30:34,039
still need to do the padding so you

699
00:30:32,150 --> 00:30:37,160
don't overrun when you do your your wide

700
00:30:34,039 --> 00:30:42,409
read but maybe you can just leave these

701
00:30:37,160 --> 00:30:46,519
guys as they were trying to think of how

702
00:30:42,410 --> 00:30:48,140
that would play out right I think that

703
00:30:46,519 --> 00:30:52,250
would work right you could do it this

704
00:30:48,140 --> 00:30:56,180
way and then that would produce real

705
00:30:52,250 --> 00:30:59,859
sample remaining and sound right I guess

706
00:30:56,180 --> 00:30:59,860
this should be samples remaining in sand

707
00:31:02,140 --> 00:31:07,400
yeah I don't dislike that that seems

708
00:31:05,480 --> 00:31:09,710
that seems somewhat reasonable to me

709
00:31:07,400 --> 00:31:12,050
that seems too unreasonable to me maybe

710
00:31:09,710 --> 00:31:15,170
it's just the intense heat here but that

711
00:31:12,049 --> 00:31:19,299
seems somewhat reasonable to me so okay

712
00:31:15,170 --> 00:31:23,450
we've got volume ended here we've got

713
00:31:19,299 --> 00:31:24,619
the stuff working Delta volume we're

714
00:31:23,450 --> 00:31:28,700
gonna have to step through this a little

715
00:31:24,619 --> 00:31:29,989
bit more carefully and see everything

716
00:31:28,700 --> 00:31:31,450
because I'm making a bunch of changes

717
00:31:29,990 --> 00:31:33,680
and sort of change in my mind as we go

718
00:31:31,450 --> 00:31:34,640
through things and so that's always the

719
00:31:33,680 --> 00:31:36,500
case where you going to have to kind of

720
00:31:34,640 --> 00:31:38,840
scrutinize a little bit later but that's

721
00:31:36,500 --> 00:31:40,970
fine so becoming here we've got our

722
00:31:38,839 --> 00:31:45,079
sample position stuff working the way

723
00:31:40,970 --> 00:31:47,210
that we would think samples played if we

724
00:31:45,079 --> 00:31:48,829
were to actually make that B naught

725
00:31:47,210 --> 00:31:52,400
divided by eight now we would end up

726
00:31:48,829 --> 00:31:54,949
with just sample position right and if d

727
00:31:52,400 --> 00:31:56,780
sample eight wordy sample eight then

728
00:31:54,950 --> 00:32:02,048
that means that now sample position just

729
00:31:56,779 --> 00:32:04,399
actually is x d sample

730
00:32:02,048 --> 00:32:06,740
I'm sorry just gets moved by B sample a

731
00:32:04,400 --> 00:32:07,940
and is just a regular value and then we

732
00:32:06,740 --> 00:32:10,130
wouldn't have to multiply them here so

733
00:32:07,940 --> 00:32:12,320
that does seem like maybe that's just

734
00:32:10,130 --> 00:32:13,789
the smarter way to do it I'm totally

735
00:32:12,319 --> 00:32:18,649
willing to believe that that's just a

736
00:32:13,788 --> 00:32:21,558
smarter idea they're right so let's keep

737
00:32:18,650 --> 00:32:24,230
going with all of that nonsense when we

738
00:32:21,558 --> 00:32:26,119
get to the end here we look at the

739
00:32:24,230 --> 00:32:28,099
current volume we can still set it the

740
00:32:26,119 --> 00:32:29,808
way that we were setting it before we

741
00:32:28,099 --> 00:32:32,389
can still do these endings the way we're

742
00:32:29,808 --> 00:32:34,339
doing before those don't change we can

743
00:32:32,390 --> 00:32:36,380
still assert that the total samples to

744
00:32:34,339 --> 00:32:39,019
mix 8 is greater than the samples to mix

745
00:32:36,380 --> 00:32:40,760
8 or equal we can still say that the

746
00:32:39,019 --> 00:32:44,000
samples played equals the sample

747
00:32:40,759 --> 00:32:47,150
position and we can still subtract out

748
00:32:44,000 --> 00:32:50,480
the samples to mix 8 this is probably

749
00:32:47,150 --> 00:32:54,740
more properly written like that all

750
00:32:50,480 --> 00:32:57,019
right so let's see slaying sound samples

751
00:32:54,740 --> 00:33:00,140
played equals loaded sound sample count

752
00:32:57,019 --> 00:33:03,379
that's all fine and we could as the

753
00:33:00,140 --> 00:33:05,720
samples played advances it may advance

754
00:33:03,380 --> 00:33:07,280
past the end so what we really want to

755
00:33:05,720 --> 00:33:10,850
say if it's if it's greater than or

756
00:33:07,279 --> 00:33:14,119
equal to the sample count then what we

757
00:33:10,849 --> 00:33:19,819
want to do is is see about that having

758
00:33:14,119 --> 00:33:26,288
that next one in there right yeah so

759
00:33:19,819 --> 00:33:31,240
that's also I guess sort of got the same

760
00:33:26,288 --> 00:33:31,240
issue that we would have had before

761
00:33:36,049 --> 00:33:43,519
so we do have one other thing that's

762
00:33:39,759 --> 00:33:47,329
actually kind of tricky here this is the

763
00:33:43,519 --> 00:33:51,259
exact same thing as our bilinear

764
00:33:47,329 --> 00:33:52,399
filtering without edges case right and I

765
00:33:51,259 --> 00:33:55,519
didn't even think about this week we

766
00:33:52,400 --> 00:33:56,780
actually had this problem before and we

767
00:33:55,519 --> 00:33:57,920
probably just didn't notice it but I

768
00:33:56,779 --> 00:33:59,809
think it would get worse when we're

769
00:33:57,920 --> 00:34:00,830
doing it in chunks of eight so if you

770
00:33:59,809 --> 00:34:03,049
remember the one we were doing our

771
00:34:00,829 --> 00:34:04,309
bilinear filtering we had this thing

772
00:34:03,049 --> 00:34:07,759
where we wanted to make seamless

773
00:34:04,309 --> 00:34:09,739
textures right where we wanted it to be

774
00:34:07,759 --> 00:34:11,570
so that you know we'd have these things

775
00:34:09,739 --> 00:34:13,159
on the seam if this is the seemed like

776
00:34:11,570 --> 00:34:17,360
we had like this was a ground chunk

777
00:34:13,159 --> 00:34:19,190
right and here's a ground chunk we had

778
00:34:17,360 --> 00:34:21,110
things where we had like two things one

779
00:34:19,190 --> 00:34:23,329
on either side of the chunk wrote one of

780
00:34:21,110 --> 00:34:25,820
the one in either side of a scene in

781
00:34:23,329 --> 00:34:27,529
different chunks and what I was saying

782
00:34:25,820 --> 00:34:28,910
is when we were drawing this chunk we

783
00:34:27,530 --> 00:34:30,769
didn't know what this chunk would

784
00:34:28,909 --> 00:34:33,259
actually be and the bilinear filtering

785
00:34:30,769 --> 00:34:35,360
would fail across this edge and so what

786
00:34:33,260 --> 00:34:37,370
we did to solve that problem right is we

787
00:34:35,360 --> 00:34:40,099
actually introduced an extra set of

788
00:34:37,369 --> 00:34:44,480
pixels along the edge so that when you

789
00:34:40,099 --> 00:34:47,960
have a here you actually insert be into

790
00:34:44,480 --> 00:34:50,090
the edge of the other chunk right and I

791
00:34:47,960 --> 00:34:52,369
think that's exactly what we would need

792
00:34:50,090 --> 00:34:54,410
to do here for those streaming chunks

793
00:34:52,369 --> 00:34:57,109
right what we want to do is make sure

794
00:34:54,409 --> 00:34:59,750
that we can blend over the edge so that

795
00:34:57,110 --> 00:35:01,610
when we take eight samples and we're

796
00:34:59,750 --> 00:35:03,320
doing that by linear and we're stepping

797
00:35:01,610 --> 00:35:05,630
anywhere inside the eight samples we

798
00:35:03,320 --> 00:35:09,530
know that as we hit the end of one of

799
00:35:05,630 --> 00:35:12,500
our streaming sounds we will blend

800
00:35:09,530 --> 00:35:14,240
properly between the two right so we

801
00:35:12,500 --> 00:35:18,110
would have had this this problem before

802
00:35:14,239 --> 00:35:19,789
right if you imagine here is a the sort

803
00:35:18,110 --> 00:35:23,180
of a scene in the sound if you will

804
00:35:19,789 --> 00:35:25,340
right so here's one loaded piece of the

805
00:35:23,179 --> 00:35:29,629
sound and here's another loaded piece

806
00:35:25,340 --> 00:35:32,300
right and if you look at what's going to

807
00:35:29,630 --> 00:35:34,610
happen here the same problem would occur

808
00:35:32,300 --> 00:35:36,740
if here is a sample a and here's a

809
00:35:34,610 --> 00:35:38,390
sample be when we would get to the end

810
00:35:36,739 --> 00:35:40,729
if we were trying to sample from right

811
00:35:38,389 --> 00:35:42,469
here we would pick up a zero that was

812
00:35:40,730 --> 00:35:45,530
like the padding at the end of this

813
00:35:42,469 --> 00:35:47,239
sounds buffer because uh you know that's

814
00:35:45,530 --> 00:35:49,080
just whatever is actually after in

815
00:35:47,239 --> 00:35:51,389
memory but what we wanted to play

816
00:35:49,079 --> 00:35:54,449
with us actually be right so we want to

817
00:35:51,389 --> 00:35:58,409
do is pad the end of this loaded sample

818
00:35:54,449 --> 00:35:59,730
with whatever comes next right and so

819
00:35:58,409 --> 00:36:02,399
that's actually what would just

820
00:35:59,730 --> 00:36:05,070
automatically happen right that's

821
00:36:02,400 --> 00:36:06,630
actually what would happen if we just

822
00:36:05,070 --> 00:36:10,110
didn't do anything and that's probably

823
00:36:06,630 --> 00:36:12,059
why was working before and we didn't

824
00:36:10,110 --> 00:36:13,920
hear an error although it may have just

825
00:36:12,059 --> 00:36:15,590
been because we never hit a case where

826
00:36:13,920 --> 00:36:18,180
you could actually hear it very well

827
00:36:15,590 --> 00:36:19,710
because since we were loading the whole

828
00:36:18,179 --> 00:36:22,739
sound every time so it was debug code

829
00:36:19,710 --> 00:36:24,720
would naturally have had that padding at

830
00:36:22,739 --> 00:36:28,079
the end of it and so what we want to do

831
00:36:24,719 --> 00:36:30,719
here for padding I think really in the

832
00:36:28,079 --> 00:36:33,389
asset in the asset stuff where we do

833
00:36:30,719 --> 00:36:35,219
this padding here we don't want to do we

834
00:36:33,389 --> 00:36:41,670
do not want to do that padding right we

835
00:36:35,219 --> 00:36:43,349
want to leave that padding undone and we

836
00:36:41,670 --> 00:36:49,019
have to just put it to do in here which

837
00:36:43,349 --> 00:36:56,819
is like all sounds have to be padded you

838
00:36:49,019 --> 00:37:02,030
know with their subsequent sound you

839
00:36:56,820 --> 00:37:06,930
know out to eight samples past their end

840
00:37:02,030 --> 00:37:09,630
right we don't really care anymore about

841
00:37:06,929 --> 00:37:11,759
a line eight a line eight is simply not

842
00:37:09,630 --> 00:37:16,349
interesting anymore what's actually

843
00:37:11,760 --> 00:37:18,690
interesting is and I'll sort of get rid

844
00:37:16,349 --> 00:37:20,699
of this for now because well I guess we

845
00:37:18,690 --> 00:37:23,010
could do is say in the case where we

846
00:37:20,699 --> 00:37:27,779
weren't one of those long running sounds

847
00:37:23,010 --> 00:37:31,200
right what we would want to do is we

848
00:37:27,780 --> 00:37:32,910
would want to do this padding only in in

849
00:37:31,199 --> 00:37:34,710
that case right in the case where we

850
00:37:32,909 --> 00:37:37,049
yeah in the case where we weren't doing

851
00:37:34,710 --> 00:37:39,690
it so so we can just go ahead and say

852
00:37:37,050 --> 00:37:48,360
we've got the actual results sample camp

853
00:37:39,690 --> 00:37:50,280
in here go count sample camp and so when

854
00:37:48,360 --> 00:37:53,360
we're not in that like reloading out a

855
00:37:50,280 --> 00:37:53,360
little bit of a chunk

856
00:37:53,639 --> 00:37:59,859
yeah we would want to yeah we would want

857
00:37:58,570 --> 00:38:05,470
to do this so you know what I think we

858
00:37:59,860 --> 00:38:08,440
want to do it probably always if the the

859
00:38:05,469 --> 00:38:10,209
end is us if we are the end of the sound

860
00:38:08,440 --> 00:38:11,710
so if the first sample index plus the

861
00:38:10,210 --> 00:38:15,190
section sample count meaning where we

862
00:38:11,710 --> 00:38:16,690
would actually get to is equal to the

863
00:38:15,190 --> 00:38:23,470
sample count we're at the end of the

864
00:38:16,690 --> 00:38:27,570
buffer right I and yeah yeah we're at

865
00:38:23,469 --> 00:38:27,569
meeting we're at the end of the buffer

866
00:38:27,630 --> 00:38:33,849
but that's going to be true no matter

867
00:38:29,949 --> 00:38:38,639
what happens here because we're over

868
00:38:33,849 --> 00:38:43,719
writing it all right so how do I do that

869
00:38:38,639 --> 00:38:49,779
how do i do that i think i do something

870
00:38:43,719 --> 00:38:54,159
like um i guess i just do something like

871
00:38:49,780 --> 00:38:57,450
if you know add end i think i just do

872
00:38:54,159 --> 00:39:00,129
something like this add n equals false

873
00:38:57,449 --> 00:39:02,439
or i guess i should say Adams is

874
00:39:00,130 --> 00:39:06,250
probably always true except in this case

875
00:39:02,440 --> 00:39:08,349
where we say addend is if we were going

876
00:39:06,250 --> 00:39:11,139
to be at the very end of this sort of

877
00:39:08,349 --> 00:39:12,460
thing that was streamed in peace mail so

878
00:39:11,139 --> 00:39:14,289
assuming that we're at the end of

879
00:39:12,460 --> 00:39:17,530
something meaning either this thing was

880
00:39:14,289 --> 00:39:21,190
not a streamed in guy so he's going to

881
00:39:17,530 --> 00:39:23,350
be he's an entire sound in himself or in

882
00:39:21,190 --> 00:39:25,269
the case where we are streamed and sound

883
00:39:23,349 --> 00:39:29,049
but were at the very end what we want to

884
00:39:25,269 --> 00:39:30,759
do here is pad with the subsequent we

885
00:39:29,050 --> 00:39:32,080
want to pad the zeroes right because

886
00:39:30,760 --> 00:39:33,130
this the fact that we're loading the

887
00:39:32,079 --> 00:39:35,199
whole sound will take care of the

888
00:39:33,130 --> 00:39:36,670
padding in the other cases but here we

889
00:39:35,199 --> 00:39:37,779
want to take care of that padding again

890
00:39:36,670 --> 00:39:39,010
this will all be handling the asset

891
00:39:37,780 --> 00:39:40,690
preprocessor normally so we really don't

892
00:39:39,010 --> 00:39:43,330
care but we might as well just try to

893
00:39:40,690 --> 00:39:47,470
emulate to a certain degree here so when

894
00:39:43,329 --> 00:39:49,840
we do this what we want to do we want to

895
00:39:47,469 --> 00:39:53,049
do something like this right where we'd

896
00:39:49,840 --> 00:39:55,059
say essentially the sample count eight

897
00:39:53,050 --> 00:39:56,740
past the sample count we will pad that

898
00:39:55,059 --> 00:39:58,299
with zeros just to make sure that anyone

899
00:39:56,739 --> 00:40:00,819
who reads off there isn't get any actual

900
00:39:58,300 --> 00:40:03,130
data and then I think we're okay I think

901
00:40:00,820 --> 00:40:04,539
that's really all we needed to do since

902
00:40:03,130 --> 00:40:05,059
we have to be unaligned all the time

903
00:40:04,539 --> 00:40:07,009
anyway

904
00:40:05,059 --> 00:40:10,250
I think that's all we really need to do

905
00:40:07,010 --> 00:40:12,560
and now we can load right off the end

906
00:40:10,250 --> 00:40:15,230
and that's fine so let's go ahead and

907
00:40:12,559 --> 00:40:18,049
here and say you're in three two sample

908
00:40:15,230 --> 00:40:21,019
offset equals zero sample offset is less

909
00:40:18,050 --> 00:40:24,289
than eight sample offset + + now we have

910
00:40:21,019 --> 00:40:26,840
a way to offset our sample and so our

911
00:40:24,289 --> 00:40:28,940
sample index is always going to sort of

912
00:40:26,840 --> 00:40:30,710
the jittered it's going to be that I

913
00:40:28,940 --> 00:40:34,670
shouldn't say jittered but offset by

914
00:40:30,710 --> 00:40:37,309
whatever that sample offset is if that

915
00:40:34,670 --> 00:40:41,780
makes sense and so when we go ahead and

916
00:40:37,309 --> 00:40:47,210
do this here I think everything else

917
00:40:41,780 --> 00:40:48,620
should be fine I think if we were using

918
00:40:47,210 --> 00:40:52,400
the other path we could do that as well

919
00:40:48,619 --> 00:40:54,349
and I think that's really it so this

920
00:40:52,400 --> 00:40:56,539
would this would do that that movement

921
00:40:54,349 --> 00:40:57,860
by eight there right that would that

922
00:40:56,539 --> 00:41:01,090
would do the movement by eight for us

923
00:40:57,860 --> 00:41:05,390
it's all good so let's take a look here

924
00:41:01,090 --> 00:41:07,610
if d vol.8 what else we got alright so

925
00:41:05,389 --> 00:41:10,069
we've made a lot of changes there some

926
00:41:07,610 --> 00:41:12,240
of its kind of janky so let's see where

927
00:41:10,070 --> 00:41:26,338
we're at

928
00:41:12,239 --> 00:41:29,529
surprisingly we still play sound alright

929
00:41:26,338 --> 00:41:31,989
so now that we're moving by eight it

930
00:41:29,530 --> 00:41:34,150
should be possible for us right to drop

931
00:41:31,989 --> 00:41:37,209
this this portion into simdi relatively

932
00:41:34,150 --> 00:41:39,730
easily because this is all happening on

933
00:41:37,210 --> 00:41:41,019
actual eights right so if you take a

934
00:41:39,730 --> 00:41:44,019
look at what's happening here we're

935
00:41:41,019 --> 00:41:45,699
doing some fairly basic stuff we've got

936
00:41:44,019 --> 00:41:48,250
some multiplies we've got some rights

937
00:41:45,699 --> 00:41:50,289
and we could start by doing the simpler

938
00:41:48,250 --> 00:41:53,530
case first I'll go ahead and get rid of

939
00:41:50,289 --> 00:41:55,900
the bilinear blend for now right first

940
00:41:53,530 --> 00:41:59,650
write the linear blend right so we've

941
00:41:55,900 --> 00:42:02,289
got just a regular case what one Sophie

942
00:41:59,650 --> 00:42:06,180
coming here you know what we also aren't

943
00:42:02,289 --> 00:42:10,568
really testing variable speeds I suppose

944
00:42:06,179 --> 00:42:13,809
so we could also say that d sample eight

945
00:42:10,568 --> 00:42:19,318
times one point you know or 0 point nine

946
00:42:13,809 --> 00:42:19,318
or something like this right 43.9 f

947
00:42:27,690 --> 00:42:33,480
sounds a little janky so think we might

948
00:42:31,659 --> 00:42:38,858
still have some some problems in there

949
00:42:33,480 --> 00:42:40,449
yeah you can kind of here so i'm not

950
00:42:38,858 --> 00:42:42,219
sure that we've quite got that working

951
00:42:40,449 --> 00:42:47,259
properly although i guess i also don't

952
00:42:42,219 --> 00:42:49,179
know how much we tested those guys

953
00:42:47,260 --> 00:43:02,559
before let me take a quick look at this

954
00:42:49,179 --> 00:43:05,139
one as well oh duh so sample offset here

955
00:43:02,559 --> 00:43:07,630
is actually not going to be correct is

956
00:43:05,139 --> 00:43:10,568
it because the sample offset has to

957
00:43:07,630 --> 00:43:12,970
actually be a real value right so it's

958
00:43:10,568 --> 00:43:15,219
actually the sample index here the

959
00:43:12,969 --> 00:43:17,679
sample position is what actually has to

960
00:43:15,219 --> 00:43:25,348
get changed right sample position has to

961
00:43:17,679 --> 00:43:28,358
be a you know sample offset right times

962
00:43:25,349 --> 00:43:31,119
whatever d sample would have been right

963
00:43:28,358 --> 00:43:34,838
it has to be it has to be just regular d

964
00:43:31,119 --> 00:43:37,809
sample like that so that's that's why

965
00:43:34,838 --> 00:43:38,949
that was was janky right hopefully you

966
00:43:37,809 --> 00:43:42,940
can see what I'm talking about there

967
00:43:38,949 --> 00:43:45,098
alright so yeah I don't I don't think

968
00:43:42,940 --> 00:43:47,650
that's probably too much of a problem

969
00:43:45,099 --> 00:43:50,230
and we have to deal with that Miss md

970
00:43:47,650 --> 00:43:52,420
stuff anyway we have 50 minutes since we

971
00:43:50,230 --> 00:43:55,409
started late today so ignore the QA

972
00:43:52,420 --> 00:43:58,930
begins now part of things so there's the

973
00:43:55,409 --> 00:44:02,259
oops I didn't want to duplicate that I

974
00:43:58,929 --> 00:44:15,789
want you to hate this so yeah so we've

975
00:44:02,260 --> 00:44:18,069
got that in both forms here we go still

976
00:44:15,789 --> 00:44:21,009
a little wrong sounding so we've got d

977
00:44:18,068 --> 00:44:23,949
sample and we've got d sample eight so

978
00:44:21,010 --> 00:44:27,819
that's all good we've got sample

979
00:44:23,949 --> 00:44:30,779
indexical sample position plus sample

980
00:44:27,818 --> 00:44:36,269
offset times d sample which is what i

981
00:44:30,780 --> 00:44:36,269
think it should be we've got

982
00:44:36,610 --> 00:44:44,980
fractional value being what I think it

983
00:44:39,349 --> 00:44:48,500
would be sampled value yeah that looks

984
00:44:44,980 --> 00:44:50,329
relatively good so I'm gonna have to

985
00:44:48,500 --> 00:44:59,329
think a little harder about where that

986
00:44:50,329 --> 00:45:01,099
bug is yeah so this part is not

987
00:44:59,329 --> 00:45:04,279
particularly interesting we don't care

988
00:45:01,099 --> 00:45:07,460
about that I think it's just this guy

989
00:45:04,280 --> 00:45:09,890
who's problematic let's see when we

990
00:45:07,460 --> 00:45:15,639
update our samples played for samples

991
00:45:09,889 --> 00:45:18,019
position that's all fine so yeah I don't

992
00:45:15,639 --> 00:45:19,730
I'm not seeing it I wonder if I'm

993
00:45:18,019 --> 00:45:22,250
staring right at it but I'm not seeing

994
00:45:19,730 --> 00:45:27,519
what the bug is there we want to do

995
00:45:22,250 --> 00:45:32,690
eight samples at a time we are doing

996
00:45:27,519 --> 00:45:36,559
that we want to offset them by however

997
00:45:32,690 --> 00:45:40,970
much a single d sample step is which we

998
00:45:36,559 --> 00:45:43,340
are doing ah but sample position

999
00:45:40,969 --> 00:45:45,169
actually needs to be this this is not

1000
00:45:43,340 --> 00:45:47,780
actually correct here right because this

1001
00:45:45,170 --> 00:45:48,829
frack would be wrong I don't think

1002
00:45:47,780 --> 00:45:51,470
that's probably what's causing the

1003
00:45:48,829 --> 00:45:59,509
problem though so this is offset sample

1004
00:45:51,469 --> 00:46:02,269
position I guess right yeah yes that's

1005
00:45:59,510 --> 00:46:06,770
right so there's our offset sample

1006
00:46:02,269 --> 00:46:14,210
position and then we would we would do

1007
00:46:06,769 --> 00:46:15,500
it that way and that looks better well I

1008
00:46:14,210 --> 00:46:18,010
take a fact that does seem to be what

1009
00:46:15,500 --> 00:46:18,010
was causing it

1010
00:46:20,440 --> 00:46:28,130
alright so at this point I think we can

1011
00:46:25,130 --> 00:46:30,289
drop this into simdi okay so what we

1012
00:46:28,130 --> 00:46:32,000
would like to do in terms of making this

1013
00:46:30,289 --> 00:46:34,220
work with simdi is we've got a plus

1014
00:46:32,000 --> 00:46:39,380
equals here so obviously we're going to

1015
00:46:34,219 --> 00:46:42,949
have an mm load PS to load in our desk

1016
00:46:39,380 --> 00:46:44,778
right again just standard sim do stuff

1017
00:46:42,949 --> 00:46:52,608
that we're doing here so we've got our

1018
00:46:44,778 --> 00:46:55,068
d0 like so and our d1 and we are going

1019
00:46:52,608 --> 00:46:56,900
to have to load those guys in now we're

1020
00:46:55,068 --> 00:47:00,528
doing eight samples at a time so we

1021
00:46:56,900 --> 00:47:02,358
actually have I guess something that's

1022
00:47:00,528 --> 00:47:05,028
actually a little bit more confusing

1023
00:47:02,358 --> 00:47:10,880
we've got it looking more like this

1024
00:47:05,028 --> 00:47:13,059
right we've got a load in more samples

1025
00:47:10,880 --> 00:47:16,548
than that we've got we've got a load in

1026
00:47:13,059 --> 00:47:17,750
two destinations because each one holds

1027
00:47:16,548 --> 00:47:20,480
four floats and we're doing eight

1028
00:47:17,750 --> 00:47:22,489
samples at a time right so actually what

1029
00:47:20,480 --> 00:47:25,639
we're doing is we're loading something

1030
00:47:22,489 --> 00:47:30,679
more like this right we're loading

1031
00:47:25,639 --> 00:47:39,409
something probably should write it like

1032
00:47:30,679 --> 00:47:40,699
this desk 00 01 just 10 best 11 and of

1033
00:47:39,409 --> 00:47:44,210
course we have to cast these two floats

1034
00:47:40,699 --> 00:47:47,509
for reasons that only Intel knows and so

1035
00:47:44,210 --> 00:47:50,240
when we load these guys out then after

1036
00:47:47,509 --> 00:47:52,219
we are done loading them we would do our

1037
00:47:50,239 --> 00:47:54,828
work and then at the end we would go

1038
00:47:52,219 --> 00:47:57,980
ahead and add two to them right we would

1039
00:47:54,829 --> 00:48:00,380
advance them by two and here's the work

1040
00:47:57,980 --> 00:48:03,099
that we would do in there so yeah and

1041
00:48:00,380 --> 00:48:06,079
then afterwards we would do you know

1042
00:48:03,099 --> 00:48:10,568
after loading them we would do something

1043
00:48:06,079 --> 00:48:13,269
where we would store them out like so

1044
00:48:10,568 --> 00:48:17,058
and again these are going to be aligned

1045
00:48:13,268 --> 00:48:19,459
loads and stores because unlike the the

1046
00:48:17,059 --> 00:48:21,349
pitch stuff unlike what we're reading

1047
00:48:19,460 --> 00:48:23,630
from which cannot be I think we've

1048
00:48:21,349 --> 00:48:27,019
determined that that probably can't be

1049
00:48:23,630 --> 00:48:28,789
aligned we can't align all of these

1050
00:48:27,018 --> 00:48:30,739
these these should remain a lion I don't

1051
00:48:28,789 --> 00:48:31,400
see any particular reason why they

1052
00:48:30,739 --> 00:48:37,819
couldn't

1053
00:48:31,400 --> 00:48:37,820
aligned always so that should be fine uh

1054
00:48:39,769 --> 00:48:50,670
yeah so let's see we'll do our loads

1055
00:48:47,369 --> 00:48:55,140
from desk we'll do our stores back to

1056
00:48:50,670 --> 00:48:59,250
test and I guess I gotta put some a

1057
00:48:55,139 --> 00:49:01,920
dressers in here there we go and our

1058
00:48:59,250 --> 00:49:07,289
desk itself we would like that to

1059
00:49:01,920 --> 00:49:11,730
actually point to M 128s now get rid of

1060
00:49:07,289 --> 00:49:14,159
that passing and yeah so those will be

1061
00:49:11,730 --> 00:49:16,349
advancing by two which is eight floats

1062
00:49:14,159 --> 00:49:18,509
which is eight samples which is how much

1063
00:49:16,349 --> 00:49:22,319
we're doing them by we can get rid of

1064
00:49:18,510 --> 00:49:24,540
our sort of outer sample work there and

1065
00:49:22,320 --> 00:49:27,059
the volume and sample position stuff

1066
00:49:24,539 --> 00:49:29,429
still would be advancing pretty much the

1067
00:49:27,059 --> 00:49:31,889
same way so now we've got this stuff in

1068
00:49:29,429 --> 00:49:33,750
here that we need to do right we need to

1069
00:49:31,889 --> 00:49:37,019
multiply by the volume we need to

1070
00:49:33,750 --> 00:49:38,519
multiply by the master volume and then

1071
00:49:37,019 --> 00:49:40,800
we would need to write it back so we can

1072
00:49:38,519 --> 00:49:43,259
do that pretty easily I can just

1073
00:49:40,800 --> 00:49:47,220
essentially do all of these guys could

1074
00:49:43,260 --> 00:49:49,680
just be mmole PS and we would assume we

1075
00:49:47,219 --> 00:49:52,079
have a master volume for essentially

1076
00:49:49,679 --> 00:49:54,569
that's replicated I guess I'll just call

1077
00:49:52,079 --> 00:49:57,630
that master volume and that we'd also

1078
00:49:54,570 --> 00:49:59,970
have a volume 4 will do it this way we

1079
00:49:57,630 --> 00:50:05,010
can multiply these two together and then

1080
00:49:59,969 --> 00:50:07,049
we can multiply yes the result by

1081
00:50:05,010 --> 00:50:11,220
whatever the sample value is right and

1082
00:50:07,050 --> 00:50:13,230
that sample value we would add we would

1083
00:50:11,219 --> 00:50:14,819
then add the same so I guess I should

1084
00:50:13,230 --> 00:50:18,389
probably call this a little bit

1085
00:50:14,820 --> 00:50:21,390
something else let me think about how I

1086
00:50:18,389 --> 00:50:24,239
want to do this so we have the sample

1087
00:50:21,389 --> 00:50:26,699
value and then we're going to compute

1088
00:50:24,239 --> 00:50:28,349
its attenuated version so this is like

1089
00:50:26,699 --> 00:50:31,049
the volume version and then we're just

1090
00:50:28,349 --> 00:50:32,549
going to add it in right we could do it

1091
00:50:31,050 --> 00:50:34,109
all in one step I just don't know if

1092
00:50:32,550 --> 00:50:36,030
that's getting a little bit too verbose

1093
00:50:34,108 --> 00:50:38,639
right but you can see I have to do the

1094
00:50:36,030 --> 00:50:41,660
ad as well right so I have to do and add

1095
00:50:38,639 --> 00:50:44,019
you know basically adding to d 00

1096
00:50:41,659 --> 00:50:48,789
whatever the mole here is

1097
00:50:44,019 --> 00:50:50,110
for these guys right so multiply the

1098
00:50:48,789 --> 00:50:51,840
master plan by the volume and that by

1099
00:50:50,110 --> 00:50:54,130
the sample value and that would give us

1100
00:50:51,840 --> 00:50:57,610
the results that we would actually want

1101
00:50:54,130 --> 00:51:01,240
right and this is pretty much all the

1102
00:50:57,610 --> 00:51:04,960
same right so we would just need to now

1103
00:51:01,239 --> 00:51:07,239
have these master volumes the master

1104
00:51:04,960 --> 00:51:08,710
volume is going to be in two flavors

1105
00:51:07,239 --> 00:51:12,419
right there's going to be one for

1106
00:51:08,710 --> 00:51:17,889
channel 0 and 1 for channel 1 I guess

1107
00:51:12,420 --> 00:51:20,320
and the volume itself is going to be the

1108
00:51:17,889 --> 00:51:25,029
same way right so both of these have

1109
00:51:20,320 --> 00:51:26,470
essentially to you know two versions one

1110
00:51:25,030 --> 00:51:29,290
for the left channel 14 the right

1111
00:51:26,469 --> 00:51:31,569
channel all right so that seems

1112
00:51:29,289 --> 00:51:33,309
reasonable right that all seems pretty

1113
00:51:31,570 --> 00:51:36,430
good and the sample value is the same in

1114
00:51:33,309 --> 00:51:37,630
all cases just gets loaded out so really

1115
00:51:36,429 --> 00:51:40,449
all we have to worry about now is

1116
00:51:37,630 --> 00:51:42,720
loading the actual sample value right

1117
00:51:40,449 --> 00:51:46,089
that's the primer the primary part of it

1118
00:51:42,719 --> 00:51:49,539
and then we would have to worry about of

1119
00:51:46,090 --> 00:51:52,920
course also getting these volume samples

1120
00:51:49,539 --> 00:51:52,920
and all that stuff initialize properly

1121
00:51:53,789 --> 00:52:01,420
okay so if we want to do that what we

1122
00:51:58,989 --> 00:52:03,759
need to do first I guess let's try doing

1123
00:52:01,420 --> 00:52:06,930
it without the bilinear case so in this

1124
00:52:03,760 --> 00:52:09,550
case we have to do this this stuff right

1125
00:52:06,929 --> 00:52:10,899
so we have to figure out what our what

1126
00:52:09,550 --> 00:52:13,630
our sample value is by doing this with

1127
00:52:10,900 --> 00:52:16,780
this round here so we have our sample

1128
00:52:13,630 --> 00:52:18,250
position and our sample position right

1129
00:52:16,780 --> 00:52:19,960
is now going to be something that's

1130
00:52:18,250 --> 00:52:22,420
actually going to be 8 wide if that

1131
00:52:19,960 --> 00:52:24,699
makes sense we're going to actually have

1132
00:52:22,420 --> 00:52:28,539
sort of a you know a sample position

1133
00:52:24,699 --> 00:52:31,049
that's that's that's that's got eight

1134
00:52:28,539 --> 00:52:31,050
separate

1135
00:52:35,090 --> 00:52:39,300
well no now I think about it we don't

1136
00:52:37,500 --> 00:52:41,849
really have to do that well we'll be

1137
00:52:39,300 --> 00:52:48,260
able to do only one load but it's

1138
00:52:41,849 --> 00:52:48,259
unclear exactly how we would want to to

1139
00:52:48,469 --> 00:52:56,250
index into it right this is kind of

1140
00:52:53,309 --> 00:53:03,210
bizarre so think about this for a second

1141
00:52:56,250 --> 00:53:05,369
right what we know is we have a sample

1142
00:53:03,210 --> 00:53:06,900
yeah this is kind of ugly actually not I

1143
00:53:05,369 --> 00:53:08,969
think about it because man the

1144
00:53:06,900 --> 00:53:10,050
difference between when your pitch

1145
00:53:08,969 --> 00:53:13,230
bending and when you're not pitch

1146
00:53:10,050 --> 00:53:16,350
bending is pretty drastic in terms of

1147
00:53:13,230 --> 00:53:18,690
how bad it would be how much uglier the

1148
00:53:16,349 --> 00:53:20,069
code is uglier is probably the wrong

1149
00:53:18,690 --> 00:53:23,369
word but how much more work the code

1150
00:53:20,070 --> 00:53:24,809
would actually have to do so one way we

1151
00:53:23,369 --> 00:53:27,960
could do this is by doing 60 and

1152
00:53:24,809 --> 00:53:29,400
separate fetches right but that's really

1153
00:53:27,960 --> 00:53:31,170
kind of a waste I'm sorry eight

1154
00:53:29,400 --> 00:53:32,550
different fetches but that's really kind

1155
00:53:31,170 --> 00:53:34,200
of a waste of time because most of time

1156
00:53:32,550 --> 00:53:35,580
most of the time like let's say you're

1157
00:53:34,199 --> 00:53:37,649
playing back at speed of one point oh

1158
00:53:35,579 --> 00:53:42,719
all of the samples you want are right

1159
00:53:37,650 --> 00:53:45,750
there in one single load so it's kind of

1160
00:53:42,719 --> 00:53:48,539
janky it seems almost like we would want

1161
00:53:45,750 --> 00:53:51,539
to actually special case that and have

1162
00:53:48,539 --> 00:53:54,539
two different loops one that does it you

1163
00:53:51,539 --> 00:53:55,889
know per per sample or something for the

1164
00:53:54,539 --> 00:53:57,719
pitch bend case and one that doesn't

1165
00:53:55,889 --> 00:54:00,239
because man the difference between those

1166
00:53:57,719 --> 00:54:02,250
two is going to be vicious right like

1167
00:54:00,239 --> 00:54:04,349
I'm just trying to think if you imagine

1168
00:54:02,250 --> 00:54:06,150
going at a rate let's say you pitch bend

1169
00:54:04,349 --> 00:54:09,420
it at a rate of 0 point 9 or something

1170
00:54:06,150 --> 00:54:11,039
right then the actual samples are going

1171
00:54:09,420 --> 00:54:14,369
to blend between or like you know these

1172
00:54:11,039 --> 00:54:18,090
two these two these two I'm sorry it's

1173
00:54:14,369 --> 00:54:21,329
like those to those to those to those to

1174
00:54:18,090 --> 00:54:23,910
those two and then like those two again

1175
00:54:21,329 --> 00:54:28,349
and then those two and then those two

1176
00:54:23,909 --> 00:54:32,309
and so on right so inside that loop it's

1177
00:54:28,349 --> 00:54:36,259
really kind of nasty because there's no

1178
00:54:32,309 --> 00:54:40,380
way to really shift the buffers around

1179
00:54:36,260 --> 00:54:42,270
yeah I don't really know and that's even

1180
00:54:40,380 --> 00:54:45,019
even in the non by linear case it's kind

1181
00:54:42,269 --> 00:54:46,139
of annoying right because I do this load

1182
00:54:45,019 --> 00:54:47,639
from

1183
00:54:46,139 --> 00:54:53,969
sound and I guess let me draw it out

1184
00:54:47,639 --> 00:55:00,239
explicitly so here's the sound and here

1185
00:54:53,969 --> 00:55:01,949
are the samples like so right and if I'm

1186
00:55:00,239 --> 00:55:03,538
pulling from them at a rate of one point

1187
00:55:01,949 --> 00:55:05,608
oh I could just read this whole thing in

1188
00:55:03,539 --> 00:55:08,190
and do ops on it directly it's exactly

1189
00:55:05,608 --> 00:55:10,259
what I want right I'd load this part of

1190
00:55:08,190 --> 00:55:13,650
it into float I'd load this part of it

1191
00:55:10,260 --> 00:55:15,390
into float I do my ops right and then

1192
00:55:13,650 --> 00:55:18,269
I'd write them out to the buffer right

1193
00:55:15,389 --> 00:55:25,798
so this is like float conversion here

1194
00:55:18,268 --> 00:55:29,729
this is like volume add and then you

1195
00:55:25,798 --> 00:55:30,838
store it right so be super simple it

1196
00:55:29,730 --> 00:55:32,849
would be just be just really really

1197
00:55:30,838 --> 00:55:34,349
straightforward but as soon as I

1198
00:55:32,849 --> 00:55:36,480
introduce the concept that the speed

1199
00:55:34,349 --> 00:55:39,539
might be different then we get this

1200
00:55:36,480 --> 00:55:42,539
problem of like okay even without by lab

1201
00:55:39,539 --> 00:55:44,460
even without linear blending I might end

1202
00:55:42,539 --> 00:55:45,869
up in a situation where this is what i'm

1203
00:55:44,460 --> 00:55:50,400
reading but what i want to actually

1204
00:55:45,869 --> 00:55:54,028
operate on is like 0 0 0 1 1 1 2 2 or

1205
00:55:50,400 --> 00:56:04,829
something right and that's just a really

1206
00:55:54,028 --> 00:56:06,449
hard thing to make happen I mean it

1207
00:56:04,829 --> 00:56:08,579
almost seems like there's just no way to

1208
00:56:06,449 --> 00:56:10,409
make that happen any faster than just

1209
00:56:08,579 --> 00:56:13,829
reading the things piece mail out of the

1210
00:56:10,409 --> 00:56:16,980
out of the buffer right I mean I really

1211
00:56:13,829 --> 00:56:19,318
just don't see how you would do it so I

1212
00:56:16,980 --> 00:56:21,000
mean if that was the case we could not

1213
00:56:19,318 --> 00:56:22,500
bother going by eights and actually just

1214
00:56:21,000 --> 00:56:24,869
go by forest because if we're not able

1215
00:56:22,500 --> 00:56:26,518
to load ate at a time then there's that

1216
00:56:24,869 --> 00:56:29,400
but you can see that's that's kind of

1217
00:56:26,518 --> 00:56:32,358
nasty right that's that's pretty ugly in

1218
00:56:29,400 --> 00:56:32,358
my opinion

1219
00:56:35,900 --> 00:56:39,960
yeah that is just that's really

1220
00:56:38,280 --> 00:56:41,130
unfortunate because it means that I just

1221
00:56:39,960 --> 00:56:42,960
don't know if there's anything you could

1222
00:56:41,130 --> 00:56:44,730
really do here that would be

1223
00:56:42,960 --> 00:56:47,039
particularly clever without just special

1224
00:56:44,730 --> 00:56:48,960
casing the loop a couple times for cases

1225
00:56:47,039 --> 00:56:53,420
where you did know that you were doing

1226
00:56:48,960 --> 00:56:56,610
relatively consistent reads from there

1227
00:56:53,420 --> 00:57:00,000
so yeah so I don't know so this part

1228
00:56:56,610 --> 00:57:03,480
really easy right that part is is

1229
00:57:00,000 --> 00:57:06,210
trivial the other part not so easy it's

1230
00:57:03,480 --> 00:57:09,150
least not so easy to make go fast what

1231
00:57:06,210 --> 00:57:10,800
it would actually look like if we don't

1232
00:57:09,150 --> 00:57:12,180
actually try to make it go through the

1233
00:57:10,800 --> 00:57:14,250
Cindy path and just pack it at the end

1234
00:57:12,179 --> 00:57:16,289
we would essentially have something

1235
00:57:14,250 --> 00:57:19,019
looks like this we have sample value

1236
00:57:16,289 --> 00:57:21,989
right and that's going to be an M and

1237
00:57:19,019 --> 00:57:23,789
set PS and then what we would do is we

1238
00:57:21,989 --> 00:57:37,369
would load the sample indices out here

1239
00:57:23,789 --> 00:57:41,550
write something like this right and

1240
00:57:37,369 --> 00:57:47,940
these guys obviously we didn't quite do

1241
00:57:41,550 --> 00:57:49,710
all of their and yeah it just looks like

1242
00:57:47,940 --> 00:57:52,559
at that point you just don't care about

1243
00:57:49,710 --> 00:57:54,030
eight eighths at all eighths is just not

1244
00:57:52,559 --> 00:57:57,750
that useful you might as well go by

1245
00:57:54,030 --> 00:58:00,840
fours right least I can't see any reason

1246
00:57:57,750 --> 00:58:02,940
why you would so anyway yeah you got

1247
00:58:00,840 --> 00:58:04,640
these guys and then you would just

1248
00:58:02,940 --> 00:58:07,039
actually have to load them separately

1249
00:58:04,639 --> 00:58:11,339
you know you would have to load them

1250
00:58:07,039 --> 00:58:13,110
basically using this this exact equation

1251
00:58:11,340 --> 00:58:17,900
here so I think I might actually just go

1252
00:58:13,110 --> 00:58:17,900
ahead and copy that in like so

1253
00:58:20,989 --> 00:58:31,619
what did that do that is some weird

1254
00:58:25,349 --> 00:58:33,179
piece of code there we go oops so we

1255
00:58:31,619 --> 00:58:35,579
take the sand position we load the

1256
00:58:33,179 --> 00:58:37,589
sample office times the D sample and

1257
00:58:35,579 --> 00:58:40,170
that's X the sample index that we would

1258
00:58:37,590 --> 00:58:44,760
use and we would have to literally do

1259
00:58:40,170 --> 00:58:50,970
that and load it in in order so we would

1260
00:58:44,760 --> 00:58:59,510
go like this and I think that's just you

1261
00:58:50,969 --> 00:59:02,759
know 0.01 point O two point oh three

1262
00:58:59,510 --> 00:59:06,240
point oh right so we would literally

1263
00:59:02,760 --> 00:59:09,960
load the samples out like this and then

1264
00:59:06,239 --> 00:59:15,899
the second set would would load it out

1265
00:59:09,960 --> 00:59:18,030
like that and yet just not again really

1266
00:59:15,900 --> 00:59:22,050
kind of annoying i but i just don't

1267
00:59:18,030 --> 00:59:26,310
really see you know just to be honest i

1268
00:59:22,050 --> 00:59:28,560
just don't see what the alternative is

1269
00:59:26,309 --> 00:59:30,750
there right i don't know what we could

1270
00:59:28,559 --> 00:59:34,199
do that would be all that much smarter

1271
00:59:30,750 --> 00:59:36,389
than that so let's go ahead and wrap

1272
00:59:34,199 --> 00:59:37,829
that up well think about this maybe for

1273
00:59:36,389 --> 00:59:39,750
tomorrow see if there's anything that we

1274
00:59:37,829 --> 00:59:42,840
can think of that would be better

1275
00:59:39,750 --> 00:59:47,369
where's my M 128 there it is so for

1276
00:59:42,840 --> 00:59:49,410
setting these two guys up front our

1277
00:59:47,369 --> 00:59:52,380
master volume and our volume for the

1278
00:59:49,409 --> 00:59:55,170
master volume is always constant right

1279
00:59:52,380 --> 00:59:59,099
it's not changing so the master volume

1280
00:59:55,170 --> 01:00:01,139
is is easier that's just whatever audio

1281
00:59:59,099 --> 01:00:04,199
state master volume is that's just a

1282
01:00:01,139 --> 01:00:10,859
replicated value right that's an mm set

1283
01:00:04,199 --> 01:00:12,419
1 p.s but the volume for this one is

1284
01:00:10,860 --> 01:00:14,490
actually a little trickier because you

1285
01:00:12,420 --> 01:00:17,869
think about it it needs to be ramping

1286
01:00:14,489 --> 01:00:22,289
like the first value that in it and the

1287
01:00:17,869 --> 01:00:26,989
it's it's actually operating I guess I

1288
01:00:22,289 --> 01:00:29,440
should should jump over here let's see

1289
01:00:26,989 --> 01:00:31,189
to the whiteboard

1290
01:00:29,440 --> 01:00:33,139
if you think about what's going to

1291
01:00:31,190 --> 01:00:36,528
happen there right you've got this

1292
01:00:33,139 --> 01:00:39,440
volume and in it it's got v-0 v1 v2 v3

1293
01:00:36,528 --> 01:00:41,900
right because we are multiplying by this

1294
01:00:39,440 --> 01:00:43,639
guy right we're multiplying this as we

1295
01:00:41,900 --> 01:00:47,210
go with our samples so we'd have sample

1296
01:00:43,639 --> 01:00:49,699
one you know to like so on right and

1297
01:00:47,210 --> 01:00:51,318
when we multiply these down this can't

1298
01:00:49,699 --> 01:00:53,389
be constant because each individual

1299
01:00:51,318 --> 01:00:56,838
sample is supposed to be ramping up or

1300
01:00:53,389 --> 01:01:00,798
down its volume over time potentially so

1301
01:00:56,838 --> 01:01:02,690
we need the values inside the volume to

1302
01:01:00,798 --> 01:01:05,059
actually be pre incremented like this

1303
01:01:02,690 --> 01:01:08,420
should be the base volume level and then

1304
01:01:05,059 --> 01:01:11,359
it should go up by the d volume at each

1305
01:01:08,420 --> 01:01:13,880
individual you know at each location

1306
01:01:11,358 --> 01:01:16,670
right so that when we multiply them

1307
01:01:13,880 --> 01:01:19,730
together we're getting a volume ramp in

1308
01:01:16,670 --> 01:01:23,150
wide so these guys actually have to be

1309
01:01:19,730 --> 01:01:26,659
set ps2 something that's a little more

1310
01:01:23,150 --> 01:01:31,278
clever right it needs to be set to

1311
01:01:26,659 --> 01:01:34,429
whatever the the let's see here we would

1312
01:01:31,278 --> 01:01:40,429
need to do the volume regular again get

1313
01:01:34,429 --> 01:01:47,690
that out so the volume and so in here we

1314
01:01:40,429 --> 01:01:50,389
want something like the volume and it

1315
01:01:47,690 --> 01:01:55,519
would be the first one right and then I

1316
01:01:50,389 --> 01:01:59,048
guess oops the first one plus what

1317
01:01:55,519 --> 01:02:04,278
nothing times the d volume right and

1318
01:01:59,048 --> 01:02:12,230
then the next one is going to be 1 point

1319
01:02:04,278 --> 01:02:14,960
0 times the d volume right and then 2.0

1320
01:02:12,230 --> 01:02:17,650
then three-point oh right so we step we

1321
01:02:14,960 --> 01:02:21,528
like it's like pre stepped that volume

1322
01:02:17,650 --> 01:02:24,048
ramp is right and so then when we come

1323
01:02:21,528 --> 01:02:28,548
through here and we actually do that

1324
01:02:24,048 --> 01:02:30,318
that volume edition right you know the

1325
01:02:28,548 --> 01:02:33,798
the actual volume I guess I don't know

1326
01:02:30,318 --> 01:02:37,159
do we actually ever use that that does

1327
01:02:33,798 --> 01:02:38,989
that guy do yeah so we actually do use

1328
01:02:37,159 --> 01:02:40,489
it we can probably just make it cheaper

1329
01:02:38,989 --> 01:02:42,250
to extract this guy out here but then

1330
01:02:40,489 --> 01:02:45,750
what we would do is say

1331
01:02:42,250 --> 01:02:49,170
okay we've got our d volume four and

1332
01:02:45,750 --> 01:02:52,570
that's actually equal to or i should say

1333
01:02:49,170 --> 01:02:54,570
84 we need a better naming this is this

1334
01:02:52,570 --> 01:02:57,100
this is getting way too hairy for naming

1335
01:02:54,570 --> 01:03:00,850
if it wasn't the end of the stream here

1336
01:02:57,099 --> 01:03:06,599
we rename things probably right now but

1337
01:03:00,849 --> 01:03:10,029
anyway so we've got the d volume like so

1338
01:03:06,599 --> 01:03:11,679
right and we cut and paste these guys

1339
01:03:10,030 --> 01:03:15,450
because we've also got the version for

1340
01:03:11,679 --> 01:03:17,889
the other channel right so there we go

1341
01:03:15,449 --> 01:03:18,909
yeah we really need a good naming we're

1342
01:03:17,889 --> 01:03:20,259
going to have to go through here and

1343
01:03:18,909 --> 01:03:22,269
rename these these names are awful

1344
01:03:20,260 --> 01:03:25,240
there's so many different permutations

1345
01:03:22,269 --> 01:03:26,559
of things that we need some way of like

1346
01:03:25,239 --> 01:03:28,389
making this naming a little bit more

1347
01:03:26,559 --> 01:03:30,369
consistent now that we actually know

1348
01:03:28,389 --> 01:03:31,929
what it is that we need to do and we

1349
01:03:30,369 --> 01:03:32,949
could simplify things a little bit by

1350
01:03:31,929 --> 01:03:34,329
the fact that we don't have step by

1351
01:03:32,949 --> 01:03:36,789
eight Boyett step by four so we're gonna

1352
01:03:34,329 --> 01:03:40,480
have the same problem permutation wise

1353
01:03:36,789 --> 01:03:44,800
if that makes sense so yeah so if we

1354
01:03:40,480 --> 01:03:47,860
have these guys in here I think that's

1355
01:03:44,800 --> 01:03:50,740
pretty much all we would need to do so

1356
01:03:47,860 --> 01:04:00,210
in here we would have our our volume for

1357
01:03:50,739 --> 01:04:03,069
right it gets added the same way like so

1358
01:04:00,210 --> 01:04:06,220
and so those are actually track now

1359
01:04:03,070 --> 01:04:07,720
right and the master volume of course

1360
01:04:06,219 --> 01:04:10,869
like I said doesn't actually ever need

1361
01:04:07,719 --> 01:04:15,059
to to to be tracked in any way although

1362
01:04:10,869 --> 01:04:15,059
we do need to do both versions again

1363
01:04:15,929 --> 01:04:23,839
yeah

1364
01:04:17,840 --> 01:04:26,269
uh so okay let's see here oops and these

1365
01:04:23,840 --> 01:04:40,930
guys are obviously wide editions now so

1366
01:04:26,269 --> 01:04:40,929
those are mm add PS is and there we go

1367
01:04:41,170 --> 01:04:47,480
alright so yet not quite done yet

1368
01:04:44,989 --> 01:04:49,479
unfortunately and we're five minutes

1369
01:04:47,480 --> 01:04:53,300
over so we got to end soon unfortunately

1370
01:04:49,480 --> 01:04:56,690
but let's just make sure we left things

1371
01:04:53,300 --> 01:05:00,140
in a semi usable state so we we read all

1372
01:04:56,690 --> 01:05:05,510
the samples out here and put pack them

1373
01:05:00,139 --> 01:05:07,099
in we load out of the dest into two

1374
01:05:05,510 --> 01:05:09,190
different channels and two different

1375
01:05:07,099 --> 01:05:11,569
sets we really need to switch back

1376
01:05:09,190 --> 01:05:12,860
switching away from doing eight is going

1377
01:05:11,570 --> 01:05:14,360
to be crucial here to cut down on the

1378
01:05:12,860 --> 01:05:17,420
number of the denominator since we know

1379
01:05:14,360 --> 01:05:19,370
we don't need to do it anymore so then

1380
01:05:17,420 --> 01:05:23,360
we go ahead and do our moles here it

1381
01:05:19,369 --> 01:05:26,000
looks like these these are correct but

1382
01:05:23,360 --> 01:05:30,250
this guy has to be done in two portions

1383
01:05:26,000 --> 01:05:35,199
right this guy is is actually d volume

1384
01:05:30,250 --> 01:05:38,300
40 if that makes sense or I should say

1385
01:05:35,199 --> 01:05:42,919
yeah like this this guy is actually that

1386
01:05:38,300 --> 01:05:45,050
it's it's an ad of these two that makes

1387
01:05:42,920 --> 01:05:47,900
sense because of the fact that we're

1388
01:05:45,050 --> 01:05:50,650
stepping like we are so again super

1389
01:05:47,900 --> 01:05:52,880
janky and we could get rid of this man

1390
01:05:50,650 --> 01:05:55,610
sometimes I just hate programming on the

1391
01:05:52,880 --> 01:05:57,800
screen because you know I want to like

1392
01:05:55,610 --> 01:05:59,599
actually go do this properly I want to

1393
01:05:57,800 --> 01:06:01,250
remove the the fact that we're going by

1394
01:05:59,599 --> 01:06:03,860
eights and then I want to change all

1395
01:06:01,250 --> 01:06:05,420
these names so they make sense and I

1396
01:06:03,860 --> 01:06:07,730
don't have the luxury of doing that on

1397
01:06:05,420 --> 01:06:14,000
the stream and it's it's very

1398
01:06:07,730 --> 01:06:19,909
disappointing so anyway yeah so let's

1399
01:06:14,000 --> 01:06:22,730
see I think that's it for that yeah and

1400
01:06:19,909 --> 01:06:26,839
it's kind of all annoying in a really

1401
01:06:22,730 --> 01:06:29,329
annoying way so I can drastically

1402
01:06:26,840 --> 01:06:31,309
simplify all this I just don't have the

1403
01:06:29,329 --> 01:06:33,559
luxury of being able to do it today

1404
01:06:31,309 --> 01:06:34,699
and that's unfortunate but you know

1405
01:06:33,559 --> 01:06:36,679
we'll least try to leave things in a

1406
01:06:34,699 --> 01:06:39,199
compiling state they just won't be in a

1407
01:06:36,679 --> 01:06:42,169
working state so I think all that's good

1408
01:06:39,199 --> 01:06:44,750
we can do our remote we do our multiply

1409
01:06:42,170 --> 01:06:46,550
ads here those all seem reasonable we

1410
01:06:44,750 --> 01:06:48,889
track our volume still which is correct

1411
01:06:46,550 --> 01:06:52,130
we advance our destination which is

1412
01:06:48,889 --> 01:06:59,960
correct yeah we're just going to not be

1413
01:06:52,130 --> 01:07:01,160
playing anything reasonable let's see it

1414
01:06:59,960 --> 01:07:04,250
wasn't as bad as I thought we were going

1415
01:07:01,159 --> 01:07:08,199
to be I'll admit that so let's go ahead

1416
01:07:04,250 --> 01:07:08,199
and change it back to the normal speed

1417
01:07:10,679 --> 01:07:15,480
so you can kind of hear we messed up

1418
01:07:13,349 --> 01:07:18,929
some stuff right which is exactly what I

1419
01:07:15,480 --> 01:07:21,329
would expect to happen certainly but

1420
01:07:18,929 --> 01:07:22,289
again we're completely out of time so

1421
01:07:21,329 --> 01:07:24,150
I'm going to have to leave it there and

1422
01:07:22,289 --> 01:07:27,059
then tomorrow what I'd like to do is go

1423
01:07:24,150 --> 01:07:29,849
through here remove the by 8 and turn it

1424
01:07:27,059 --> 01:07:31,230
to just being by 4 because again the

1425
01:07:29,849 --> 01:07:32,579
only reason I wanted to do it by eight

1426
01:07:31,230 --> 01:07:34,619
it so I thought we'd be able to load ate

1427
01:07:32,579 --> 01:07:36,840
at a time out of the 16 bits and

1428
01:07:34,619 --> 01:07:40,619
blubbers but really we can't do that

1429
01:07:36,840 --> 01:07:42,240
because I mean we could only do that in

1430
01:07:40,619 --> 01:07:45,449
a very specific case which is where

1431
01:07:42,239 --> 01:07:47,279
we're not changing the pitch so that's

1432
01:07:45,449 --> 01:07:50,309
unfortunate but that's just the way it

1433
01:07:47,280 --> 01:07:51,900
is and so we'll go through and we'll

1434
01:07:50,309 --> 01:07:54,360
remove that which will clean up a lot of

1435
01:07:51,900 --> 01:07:56,700
this kind of ugliness in terms of the

1436
01:07:54,360 --> 01:07:59,940
notation and then we can tomorrow go

1437
01:07:56,699 --> 01:08:01,529
through it and actually clean up you

1438
01:07:59,940 --> 01:08:02,550
know go carefully through the code now

1439
01:08:01,530 --> 01:08:04,710
that we know everything that it actually

1440
01:08:02,550 --> 01:08:08,430
is going to do and that should hopefully

1441
01:08:04,710 --> 01:08:09,480
help us as well clean you know get rid

1442
01:08:08,429 --> 01:08:12,269
of some of the errors and that sort of

1443
01:08:09,480 --> 01:08:14,130
thing and debug it so again not in bad

1444
01:08:12,269 --> 01:08:15,449
shape but again really wish we could

1445
01:08:14,130 --> 01:08:16,890
just go an hour hit another hour here

1446
01:08:15,449 --> 01:08:19,349
and then we could finish all this stuff

1447
01:08:16,890 --> 01:08:23,160
but we'll have to wait till tomorrow and

1448
01:08:19,350 --> 01:08:27,030
so with that in mind we will put we will

1449
01:08:23,159 --> 01:08:32,519
put this episode to bed and and go to

1450
01:08:27,029 --> 01:08:34,559
the QA yeah so please if you have any

1451
01:08:32,520 --> 01:08:38,750
questions prefix them with q colon and I

1452
01:08:34,560 --> 01:08:40,890
will answer them now and yeah hopefully

1453
01:08:38,750 --> 01:08:43,470
I mean there really isn't much left to

1454
01:08:40,890 --> 01:08:45,810
do here we're mostly done so really we

1455
01:08:43,470 --> 01:08:47,039
need to do is gank out the x 8 thing and

1456
01:08:45,810 --> 01:08:52,710
then just clean up you know this this

1457
01:08:47,039 --> 01:08:54,000
stuff is is typo tastic right it's so we

1458
01:08:52,710 --> 01:08:59,220
just need to clean that up and make this

1459
01:08:54,000 --> 01:09:02,819
not be so so ridiculously weird there if

1460
01:08:59,220 --> 01:09:06,270
that makes sense see if this is reading

1461
01:09:02,819 --> 01:09:09,179
a sample position yeah so that reads out

1462
01:09:06,270 --> 01:09:13,100
the samples by going along d sample so

1463
01:09:09,180 --> 01:09:13,100
that's that's all nice

1464
01:09:14,000 --> 01:09:19,909
and the volume stuff isn't changing

1465
01:09:18,588 --> 01:09:23,568
right now so I feel like that should

1466
01:09:19,909 --> 01:09:27,048
actually not be really affecting us so

1467
01:09:23,569 --> 01:09:30,130
i'm not sure where our actual bug is but

1468
01:09:27,048 --> 01:09:33,890
i'm assuming that it would be will be

1469
01:09:30,130 --> 01:09:36,609
relatively clear tomorrow where the bug

1470
01:09:33,890 --> 01:09:36,609
is that make sense

1471
01:09:47,869 --> 01:09:54,319
uh oh thank you for someone on stream

1472
01:09:52,579 --> 01:09:56,000
already caught lot of typos these guys I

1473
01:09:54,319 --> 01:10:02,960
didn't actually change when I put them

1474
01:09:56,000 --> 01:10:06,340
in there okay I guess that was the

1475
01:10:02,960 --> 01:10:06,340
primary problem

1476
01:10:07,149 --> 01:10:10,908
it's always nice to have people watching

1477
01:10:09,380 --> 01:10:20,779
on the stream they catch all my typos

1478
01:10:10,908 --> 01:10:23,269
it's pretty nice yeah what's in the

1479
01:10:20,779 --> 01:10:26,779
eight bits we've been working on is it

1480
01:10:23,270 --> 01:10:29,719
frequency and volume yeah if you missed

1481
01:10:26,779 --> 01:10:32,329
previous streams so what we're doing in

1482
01:10:29,719 --> 01:10:33,469
the sound sampler is we have D sample is

1483
01:10:32,329 --> 01:10:35,420
the speed at which things are playing

1484
01:10:33,469 --> 01:10:37,429
back so it's basically you know the

1485
01:10:35,420 --> 01:10:39,380
sample location so that changes the

1486
01:10:37,429 --> 01:10:46,850
pitch if you change it and then volume

1487
01:10:39,380 --> 01:10:49,579
is just how loud it is why is there a

1488
01:10:46,850 --> 01:10:52,460
command override 0d with auteur it's

1489
01:10:49,579 --> 01:10:55,939
it's OD and 02 so what's happening there

1490
01:10:52,460 --> 01:10:59,899
is just that because we wanted to be

1491
01:10:55,939 --> 01:11:01,519
able to keep the renderer running in

1492
01:10:59,899 --> 01:11:03,349
optimized mode because since the

1493
01:11:01,520 --> 01:11:05,270
renderer does so much work and is

1494
01:11:03,350 --> 01:11:08,060
carefully well not carefully but is

1495
01:11:05,270 --> 01:11:11,300
designed to run particularly quickly

1496
01:11:08,060 --> 01:11:13,580
right now we wanted to always run with

1497
01:11:11,300 --> 01:11:15,199
it in optimized mode so it's broken out

1498
01:11:13,579 --> 01:11:18,198
in its own line here and you can see it

1499
01:11:15,198 --> 01:11:20,359
uses minus 0 2 and so I just want to

1500
01:11:18,198 --> 01:11:22,339
keep using common compiler flags which

1501
01:11:20,359 --> 01:11:24,769
are set to either debug or release one

1502
01:11:22,340 --> 01:11:27,639
of the other and then I just over wrote

1503
01:11:24,770 --> 01:11:32,320
it with an 02 so that only this one file

1504
01:11:27,639 --> 01:11:35,630
gets gets compiled without my visions

1505
01:11:32,319 --> 01:11:37,729
can you skip the 0 point 0 times D

1506
01:11:35,630 --> 01:11:39,350
sample and only do one two and three yes

1507
01:11:37,729 --> 01:11:41,359
you can but the compiler will usually

1508
01:11:39,350 --> 01:11:43,699
automatically remove that so i usually

1509
01:11:41,359 --> 01:11:44,779
don't bother i usually leave it so you

1510
01:11:43,698 --> 01:11:51,379
can see what's supposed to be happening

1511
01:11:44,779 --> 01:11:55,359
there that makes sense not sure if it

1512
01:11:51,380 --> 01:11:55,359
does or not but that's the idea

1513
01:12:07,170 --> 01:12:15,399
any other questions since we went a

1514
01:12:13,689 --> 01:12:17,199
started late today I guess it's a good

1515
01:12:15,399 --> 01:12:20,099
day not to have too many questions

1516
01:12:17,199 --> 01:12:20,099
because we can end on time

1517
01:12:26,500 --> 01:12:31,460
what does minus OD do that's not when

1518
01:12:29,300 --> 01:12:34,279
I've come across before it simply

1519
01:12:31,460 --> 01:12:37,210
disables optimizations so it's basically

1520
01:12:34,279 --> 01:12:39,469
telling the compiler don't do anything

1521
01:12:37,210 --> 01:12:41,510
pretty much at all to the code just

1522
01:12:39,469 --> 01:12:44,300
literally straight translate it into

1523
01:12:41,510 --> 01:12:45,889
assembly and the reason that that's a

1524
01:12:44,300 --> 01:12:48,980
useful switch is because it means that

1525
01:12:45,889 --> 01:12:51,230
if you want to go look at something in

1526
01:12:48,979 --> 01:12:53,988
the debugger nothing has been moved

1527
01:12:51,229 --> 01:12:56,178
around or optimized or changed it's all

1528
01:12:53,988 --> 01:13:00,138
extremely straightforward and does

1529
01:12:56,179 --> 01:13:02,210
exactly what you typed in and so when

1530
01:13:00,139 --> 01:13:04,609
you're doing development it often helps

1531
01:13:02,210 --> 01:13:09,609
to have minus OD on because that means

1532
01:13:04,609 --> 01:13:12,618
debugging is is usually pretty easy and

1533
01:13:09,609 --> 01:13:14,509
we can do that for most of handmade hero

1534
01:13:12,618 --> 01:13:18,618
because we don't have a lot of speed

1535
01:13:14,510 --> 01:13:20,960
critical stuff in in it right now but

1536
01:13:18,618 --> 01:13:23,750
the renderer just processes a ton of

1537
01:13:20,960 --> 01:13:27,020
pixels right it's doing a huge workload

1538
01:13:23,750 --> 01:13:29,210
and so it needs to be on Oh to all the

1539
01:13:27,020 --> 01:13:35,239
time or our frame rate at 1920 x 1080

1540
01:13:29,210 --> 01:13:38,380
isn't good enough so and that's what

1541
01:13:35,238 --> 01:13:40,789
handmade optimized is all about gasto 5

1542
01:13:38,380 --> 01:13:44,359
it's just about making sure that the

1543
01:13:40,789 --> 01:13:46,969
renderer which does the vast vast

1544
01:13:44,359 --> 01:13:49,399
majority of the work is always built

1545
01:13:46,969 --> 01:13:52,310
with 02 so that we get a nice fast 1920

1546
01:13:49,399 --> 01:13:54,198
x 1080 frame rate and we don't have to

1547
01:13:52,310 --> 01:13:55,520
constantly switch between debug and

1548
01:13:54,198 --> 01:13:59,109
release build we can always just have a

1549
01:13:55,520 --> 01:13:59,110
debug build that's still fast enough so

1550
01:14:10,050 --> 01:14:14,739
what do you think about the engine used

1551
01:14:12,368 --> 01:14:17,679
at overgrowth and its sound capabilities

1552
01:14:14,738 --> 01:14:25,779
I have not actually looked at what it

1553
01:14:17,679 --> 01:14:28,349
sound capabilities are so I don't

1554
01:14:25,779 --> 01:14:28,349
actually know

1555
01:14:46,289 --> 01:14:50,489
I'm guessing that without specifying

1556
01:14:48,479 --> 01:14:52,109
some sort of optimization flag there

1557
01:14:50,489 --> 01:14:54,449
will still be some optimizations done

1558
01:14:52,109 --> 01:14:57,509
which you want to explicitly not do yeah

1559
01:14:54,449 --> 01:14:58,619
I mean the idea behind it is just that

1560
01:14:57,510 --> 01:15:01,140
you're specifying to the compiler

1561
01:14:58,619 --> 01:15:04,920
definitely don't do any optimizations

1562
01:15:01,140 --> 01:15:06,720
right and so the compiler may have been

1563
01:15:04,920 --> 01:15:08,369
defaulting to do some optimizations or

1564
01:15:06,720 --> 01:15:09,780
maybe it wouldn't be I guess it could

1565
01:15:08,369 --> 01:15:11,659
depend on the version of the compiler

1566
01:15:09,779 --> 01:15:13,889
you're using or what its default

1567
01:15:11,659 --> 01:15:16,590
environment variables were set to or who

1568
01:15:13,890 --> 01:15:18,720
knows what right and so really all the

1569
01:15:16,590 --> 01:15:21,409
minus OD does it says no matter what you

1570
01:15:18,720 --> 01:15:24,320
were going to do by default don't

1571
01:15:21,409 --> 01:15:27,180
instead just straight translate the code

1572
01:15:24,319 --> 01:15:30,960
with no optimization thought put into it

1573
01:15:27,180 --> 01:15:33,000
whatsoever cast 05 is this the last

1574
01:15:30,960 --> 01:15:40,230
stream for audio no we've got to clean

1575
01:15:33,000 --> 01:15:42,300
up this mixing code tomorrow and just

1576
01:15:40,229 --> 01:15:47,189
set it up to go by fours instead of by

1577
01:15:42,300 --> 01:15:49,489
eight so we got to do that but then then

1578
01:15:47,189 --> 01:15:52,979
we'll be done and we can go back to

1579
01:15:49,489 --> 01:15:56,250
finish up the asset stuff which really

1580
01:15:52,979 --> 01:15:57,659
is just about memory management and then

1581
01:15:56,250 --> 01:16:00,470
we should be able to convert over to

1582
01:15:57,659 --> 01:16:02,279
asset files which would be really nice

1583
01:16:00,470 --> 01:16:03,630
looking forward to that that's going to

1584
01:16:02,279 --> 01:16:05,969
be nice so hopefully by the end of the

1585
01:16:03,630 --> 01:16:08,850
week we will have like an asset file

1586
01:16:05,970 --> 01:16:11,670
formats pecked out you know something

1587
01:16:08,850 --> 01:16:12,980
that we can say this is going to be how

1588
01:16:11,670 --> 01:16:17,569
the assets are shipped from now on

1589
01:16:12,979 --> 01:16:17,569
instead of as like bmps and webs

1590
01:16:20,159 --> 01:16:26,939
all right I'm gonna go ahead and wrap

1591
01:16:23,640 --> 01:16:29,280
things up since we still got more work

1592
01:16:26,939 --> 01:16:31,139
to do tonight figuring out how we're

1593
01:16:29,279 --> 01:16:34,529
going to do this this whole github

1594
01:16:31,140 --> 01:16:43,260
situation all right I'm going to close

1595
01:16:34,529 --> 01:16:44,039
this damn save all right thank you

1596
01:16:43,260 --> 01:16:45,270
everyone for joining me for another

1597
01:16:44,039 --> 01:16:47,010
episode of handmade hero it's been a

1598
01:16:45,270 --> 01:16:49,740
pleasure coding with you as always if

1599
01:16:47,010 --> 01:16:51,539
you want to follow along at home you can

1600
01:16:49,739 --> 01:16:54,029
always pure to the game at handmade hero

1601
01:16:51,539 --> 01:16:56,039
org and it comes to the source code so

1602
01:16:54,029 --> 01:16:58,559
you can play around with it learn from

1603
01:16:56,039 --> 01:17:01,199
it experiment with it which is good way

1604
01:16:58,560 --> 01:17:03,150
to learn you can also ask questions on

1605
01:17:01,199 --> 01:17:04,739
our forum site and take a look at anti

1606
01:17:03,149 --> 01:17:06,809
depa sewed guys get porch to mac and

1607
01:17:04,739 --> 01:17:08,039
linux that sort of thing we also have a

1608
01:17:06,810 --> 01:17:09,480
patreon page you want to support the

1609
01:17:08,039 --> 01:17:11,460
video series you could subscribe there

1610
01:17:09,479 --> 01:17:12,959
and finally we have a tweet bot which

1611
01:17:11,460 --> 01:17:13,890
will tweet the schedule so every weekend

1612
01:17:12,960 --> 01:17:16,079
you can find out when we're going to be

1613
01:17:13,890 --> 01:17:17,970
live that week and it will also tweet

1614
01:17:16,079 --> 01:17:19,890
during the day when the stream is coming

1615
01:17:17,970 --> 01:17:21,210
up so you can make sure not to miss it

1616
01:17:19,890 --> 01:17:23,340
so if you're trying to get to stream

1617
01:17:21,210 --> 01:17:25,619
live that's a great way to do it that's

1618
01:17:23,340 --> 01:17:27,930
about it for today I have a bunch of

1619
01:17:25,619 --> 01:17:29,550
work I got to do tonight and probably

1620
01:17:27,930 --> 01:17:32,970
all week trying to figure out exactly

1621
01:17:29,550 --> 01:17:35,520
how we're going to get community github

1622
01:17:32,970 --> 01:17:36,840
repository stuff going we're trying to

1623
01:17:35,520 --> 01:17:38,670
make that happen since enough people

1624
01:17:36,840 --> 01:17:40,920
have requested it but it's going to be

1625
01:17:38,670 --> 01:17:42,149
it's going to take a little while and

1626
01:17:40,920 --> 01:17:43,529
there's so much things we have to sort

1627
01:17:42,149 --> 01:17:45,000
out but we're working on it and

1628
01:17:43,529 --> 01:17:47,939
hopefully there'll be some more news

1629
01:17:45,000 --> 01:17:50,670
about that maybe next week or sometime

1630
01:17:47,939 --> 01:17:51,899
soon so thanks everybody who's been

1631
01:17:50,670 --> 01:17:54,960
helping out with that I really

1632
01:17:51,899 --> 01:17:56,219
appreciate it and you know i look

1633
01:17:54,960 --> 01:17:57,329
forward to hopefully getting everything

1634
01:17:56,220 --> 01:18:00,000
resolved so that there's something

1635
01:17:57,329 --> 01:18:03,750
usable at least as usable as github can

1636
01:18:00,000 --> 01:18:04,920
be for people who want to work with the

1637
01:18:03,750 --> 01:18:07,500
source that way instead of downloading

1638
01:18:04,920 --> 01:18:10,619
zips all right everyone take it easy and

1639
01:18:07,500 --> 01:18:13,109
i will catch you I will catch you

1640
01:18:10,619 --> 01:18:16,079
tomorrow same time same place 5 p.m.

1641
01:18:13,109 --> 01:18:19,099
pacific daylight time so until then have

1642
01:18:16,079 --> 01:18:19,100
a good one and i'll see you online

