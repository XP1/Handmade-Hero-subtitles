1
00:00:00,620 --> 00:00:04,889
hello everyone and welcome to handmade

2
00:00:02,939 --> 00:00:06,750
hero the show where we code a complete

3
00:00:04,889 --> 00:00:08,219
game live on stream we want to do a

4
00:00:06,750 --> 00:00:10,410
little preamble at the beginning of this

5
00:00:08,220 --> 00:00:12,269
stream we're gonna do a regular

6
00:00:10,410 --> 00:00:13,589
programming as we normally do but there

7
00:00:12,269 --> 00:00:15,059
is one thing that we wanted to do with

8
00:00:13,589 --> 00:00:16,368
the outset which is take a look at some

9
00:00:15,058 --> 00:00:18,570
debugger projects that have been ongoing

10
00:00:16,368 --> 00:00:19,890
one of the things that I've said often

11
00:00:18,570 --> 00:00:21,570
times is I'd like to get rid of the

12
00:00:19,890 --> 00:00:25,230
Microsoft products that are involved in

13
00:00:21,570 --> 00:00:27,510
building games on Windows or anywhere

14
00:00:25,230 --> 00:00:29,969
else that reason is just because they're

15
00:00:27,510 --> 00:00:31,349
they're continuing to get worse and so

16
00:00:29,969 --> 00:00:32,640
you know the writing is kind of on the

17
00:00:31,349 --> 00:00:33,630
wall I would like to replace them with

18
00:00:32,640 --> 00:00:35,850
things that we're going to get better

19
00:00:33,630 --> 00:00:37,710
and that worse much like I replaced

20
00:00:35,850 --> 00:00:41,308
Emacs with for coder and kind of saved

21
00:00:37,710 --> 00:00:42,660
myself from that sinking ship so one of

22
00:00:41,308 --> 00:00:44,820
the things we'd like to do on handmade

23
00:00:42,659 --> 00:00:46,319
hero is replace Microsoft's visual

24
00:00:44,820 --> 00:00:47,939
studio debugger which is the one that

25
00:00:46,320 --> 00:00:49,859
we're currently using with a debugger

26
00:00:47,939 --> 00:00:52,439
that's actually built by people who want

27
00:00:49,859 --> 00:00:54,869
to make debugging better faster easier

28
00:00:52,439 --> 00:00:57,269
quicker with more visibility into the

29
00:00:54,869 --> 00:00:59,578
things we care about rather than making

30
00:00:57,270 --> 00:01:03,000
it bloated and more slow and take more

31
00:00:59,579 --> 00:01:04,650
space and take 50 million gigabytes on

32
00:01:03,000 --> 00:01:06,359
your hard drive and install an SQL

33
00:01:04,650 --> 00:01:08,010
Server and all the other things none of

34
00:01:06,359 --> 00:01:12,180
which I max exaggerating it actually

35
00:01:08,010 --> 00:01:14,700
does to this day so we want to do these

36
00:01:12,180 --> 00:01:16,290
things and I want to talk briefly a

37
00:01:14,700 --> 00:01:18,659
little bit about I'm going to try to on

38
00:01:16,290 --> 00:01:20,580
stream today code clap and cdbg they're

39
00:01:18,659 --> 00:01:22,740
both handmade network projects and I'm

40
00:01:20,579 --> 00:01:24,750
really happy that people have been

41
00:01:22,739 --> 00:01:27,719
trying this I want to say a brief thing

42
00:01:24,750 --> 00:01:29,188
about coding tools and just a little bit

43
00:01:27,719 --> 00:01:31,048
of I think what the problem with coding

44
00:01:29,188 --> 00:01:32,519
tools is these days I just wanted to

45
00:01:31,049 --> 00:01:35,009
quickly say some things about it and

46
00:01:32,519 --> 00:01:37,438
also just address some things about open

47
00:01:35,009 --> 00:01:40,079
source that some people may want to hear

48
00:01:37,438 --> 00:01:43,889
some perspectives on from people like me

49
00:01:40,078 --> 00:01:47,250
who program in the industry one thing

50
00:01:43,890 --> 00:01:48,780
that I think is a huge problem and I

51
00:01:47,250 --> 00:01:51,540
think this has a lot to do with open

52
00:01:48,780 --> 00:01:53,939
source right now is that while open

53
00:01:51,540 --> 00:01:55,560
source is a good thing in certain ways

54
00:01:53,938 --> 00:01:57,449
it allows people to contribute to

55
00:01:55,560 --> 00:01:58,890
projects and fix bugs and projects and

56
00:01:57,450 --> 00:02:01,530
it allows a lot of collaboration that

57
00:01:58,890 --> 00:02:05,759
works pretty well so I feel like there's

58
00:02:01,530 --> 00:02:07,439
a lot to be said for it it has a problem

59
00:02:05,759 --> 00:02:10,739
which is that people don't get paid a

60
00:02:07,438 --> 00:02:12,900
lot of the time and you know that

61
00:02:10,739 --> 00:02:13,770
there's two ways of looking at that one

62
00:02:12,900 --> 00:02:16,050
way of looking at

63
00:02:13,770 --> 00:02:17,250
is like well you know maybe if they if

64
00:02:16,050 --> 00:02:19,020
they wanted to get paid they shouldn't

65
00:02:17,250 --> 00:02:20,340
have put it up as open-source or you

66
00:02:19,020 --> 00:02:21,750
know maybe they should get paid in some

67
00:02:20,340 --> 00:02:23,580
anti way or maybe people don't deserve

68
00:02:21,750 --> 00:02:27,330
to get paid program I don't know what

69
00:02:23,580 --> 00:02:31,380
your philosophy is on it but filosophy

70
00:02:27,330 --> 00:02:33,570
aside what the end result is is that a

71
00:02:31,379 --> 00:02:36,659
lot of tools that fall into the

72
00:02:33,569 --> 00:02:37,739
programming niche aren't very good and

73
00:02:36,659 --> 00:02:40,259
the reason they're not very good is

74
00:02:37,740 --> 00:02:41,960
because there is no money there to

75
00:02:40,259 --> 00:02:46,169
support people making alternatives and

76
00:02:41,960 --> 00:02:47,849
that's the problem right there are

77
00:02:46,169 --> 00:02:50,189
people right now in fact one of the

78
00:02:47,849 --> 00:02:52,259
buggers that we're gonna look at CDBG is

79
00:02:50,189 --> 00:02:53,520
being worked on by somebody who would

80
00:02:52,259 --> 00:02:54,719
work on it full time if they could

81
00:02:53,520 --> 00:02:58,950
figure out a way to get paid to do so

82
00:02:54,719 --> 00:03:00,689
right and that's a failure of the

83
00:02:58,949 --> 00:03:03,329
economic model because we desperately

84
00:03:00,689 --> 00:03:05,939
need new debuggers the debuggers we have

85
00:03:03,330 --> 00:03:07,020
are garbage right but a debugger is a

86
00:03:05,939 --> 00:03:08,789
big undertaking

87
00:03:07,020 --> 00:03:10,320
you can't expect somebody to come out

88
00:03:08,789 --> 00:03:11,819
with a debugger tomorrow that's better

89
00:03:10,319 --> 00:03:13,979
than Visual Studio and then start

90
00:03:11,819 --> 00:03:17,280
selling it there needs to be capital

91
00:03:13,979 --> 00:03:19,709
invested and there to be payouts waiting

92
00:03:17,280 --> 00:03:21,419
for people who are gonna go do the work

93
00:03:19,709 --> 00:03:23,129
of doing these things and they need ways

94
00:03:21,419 --> 00:03:24,439
to survive in the meantime the capital

95
00:03:23,129 --> 00:03:27,240
has to be there form to do it

96
00:03:24,439 --> 00:03:30,180
so we need to find ways to fund these

97
00:03:27,240 --> 00:03:31,770
projects right they need to we need to

98
00:03:30,180 --> 00:03:34,740
find better ways of funding these

99
00:03:31,770 --> 00:03:37,020
projects and I feel like open-source

100
00:03:34,740 --> 00:03:39,810
needs to find better ways to address

101
00:03:37,020 --> 00:03:43,770
those problems because the open source

102
00:03:39,810 --> 00:03:46,409
part ends up producing lots of tools for

103
00:03:43,770 --> 00:03:48,300
free most of which are bad right and

104
00:03:46,409 --> 00:03:50,669
once in a while I produces something

105
00:03:48,300 --> 00:03:51,750
good but a lot of times the only reason

106
00:03:50,669 --> 00:03:54,089
it produces something good is because

107
00:03:51,750 --> 00:03:57,840
people are paid to work on it the Linux

108
00:03:54,090 --> 00:03:59,670
kernel clang these things have massive

109
00:03:57,840 --> 00:04:01,080
monetary pushes behind them now and

110
00:03:59,669 --> 00:04:04,500
there's people getting employed to work

111
00:04:01,080 --> 00:04:07,469
on them right smaller products just

112
00:04:04,500 --> 00:04:10,110
don't have that option right there is no

113
00:04:07,469 --> 00:04:11,819
giant Google fund that's just gonna give

114
00:04:10,110 --> 00:04:14,040
somebody money to work on this debugger

115
00:04:11,819 --> 00:04:16,199
or if there is it's not currently doing

116
00:04:14,039 --> 00:04:18,719
that and the question is how do we get

117
00:04:16,199 --> 00:04:20,608
it to do that right so I do think

118
00:04:18,720 --> 00:04:22,710
there's a bit of an economics problem

119
00:04:20,608 --> 00:04:27,419
that we have and that economics problem

120
00:04:22,709 --> 00:04:28,680
is why our tools are crappy I don't

121
00:04:27,420 --> 00:04:30,210
I have a suggestion for solving the

122
00:04:28,680 --> 00:04:31,769
problem and I'm not trying to throw

123
00:04:30,209 --> 00:04:34,409
shade on anyone's existing economic

124
00:04:31,769 --> 00:04:36,029
models or open source because I don't

125
00:04:34,410 --> 00:04:37,530
have the answer to it I just want to

126
00:04:36,029 --> 00:04:40,409
point out that there's a problem there

127
00:04:37,529 --> 00:04:43,139
that we kind of need to solve because I

128
00:04:40,410 --> 00:04:45,450
don't know how we're gonna get good

129
00:04:43,139 --> 00:04:46,769
tools otherwise people end up having to

130
00:04:45,449 --> 00:04:48,240
kill themselves to try and get these

131
00:04:46,769 --> 00:04:50,549
things done in their spare time this is

132
00:04:48,240 --> 00:04:52,620
it's just it's not fair they should be

133
00:04:50,550 --> 00:04:55,860
getting paid to do this work it's work

134
00:04:52,620 --> 00:04:58,860
we need done and we don't have money to

135
00:04:55,860 --> 00:05:01,230
fund right and I might say we I don't

136
00:04:58,860 --> 00:05:03,330
mean me personally in some specific way

137
00:05:01,230 --> 00:05:06,060
I mean the community that needs these

138
00:05:03,329 --> 00:05:09,060
tools right game developers low level

139
00:05:06,060 --> 00:05:11,819
programmers whatever and so I don't know

140
00:05:09,060 --> 00:05:13,800
how you address that problem we have the

141
00:05:11,819 --> 00:05:16,139
handmade fund which when we have money

142
00:05:13,800 --> 00:05:18,569
we give it to people but it doesn't

143
00:05:16,139 --> 00:05:19,860
collect very much money it kicks a few

144
00:05:18,569 --> 00:05:22,769
hundred dollars like seven eight hundred

145
00:05:19,860 --> 00:05:24,900
dollars a month and we pay that out to

146
00:05:22,769 --> 00:05:26,669
handmade network for hosting and midlow

147
00:05:24,899 --> 00:05:29,399
for doing the NTA the episode guide and

148
00:05:26,670 --> 00:05:30,900
so on we just don't have the kind of

149
00:05:29,399 --> 00:05:33,419
money necessary to pay full-time

150
00:05:30,899 --> 00:05:34,679
programmers on any project let alone a

151
00:05:33,420 --> 00:05:36,960
number of products that would be

152
00:05:34,680 --> 00:05:41,480
important so that's not really an answer

153
00:05:36,959 --> 00:05:41,479
and I don't know what is an answer right

154
00:05:42,769 --> 00:05:49,439
that's about all I have to say on that

155
00:05:45,870 --> 00:05:51,500
front and I think it's an issue that

156
00:05:49,439 --> 00:05:55,800
people need to address at some point

157
00:05:51,500 --> 00:05:57,540
that's all because open-source currently

158
00:05:55,800 --> 00:06:02,100
is really bad at getting over that hump

159
00:05:57,540 --> 00:06:04,680
and I don't know how you fix it to be

160
00:06:02,100 --> 00:06:07,770
able to do that but but it needs to do

161
00:06:04,680 --> 00:06:11,670
that somehow and I and you know that's

162
00:06:07,769 --> 00:06:13,589
and it can be closed source too right so

163
00:06:11,670 --> 00:06:16,230
anyway that's that's per day and Part B

164
00:06:13,589 --> 00:06:17,849
is the knock on from that is I've

165
00:06:16,230 --> 00:06:20,040
definitely been asked a couple times by

166
00:06:17,850 --> 00:06:22,650
people about whether they think whether

167
00:06:20,040 --> 00:06:23,700
I think they should that it's like they

168
00:06:22,649 --> 00:06:25,439
should release their thing as open

169
00:06:23,699 --> 00:06:26,550
source or not and the thing that I say

170
00:06:25,439 --> 00:06:27,719
is if you've put a lot of programming

171
00:06:26,550 --> 00:06:30,360
time with something people should have

172
00:06:27,720 --> 00:06:33,300
to pay for it you should you should get

173
00:06:30,360 --> 00:06:36,150
paid for your programming so there are

174
00:06:33,300 --> 00:06:37,889
ways of doing open source projects that

175
00:06:36,149 --> 00:06:39,209
still involve getting paid I would

176
00:06:37,889 --> 00:06:41,189
HIGHLY encourage looking into one of

177
00:06:39,209 --> 00:06:42,689
them for example you can do a private or

178
00:06:41,189 --> 00:06:44,699
posit Ori that everyone that buys the

179
00:06:42,689 --> 00:06:47,240
thing gets access to right we do that on

180
00:06:44,699 --> 00:06:49,259
handmade hero for example if you

181
00:06:47,240 --> 00:06:51,090
pre-order the game you get access to the

182
00:06:49,259 --> 00:06:53,399
source code right that's a perfectly

183
00:06:51,089 --> 00:06:55,619
reasonable compromise between open

184
00:06:53,399 --> 00:06:58,500
source and paid this still allows you to

185
00:06:55,620 --> 00:07:00,030
sell something and get money for it but

186
00:06:58,500 --> 00:07:03,000
also provide access to the source code

187
00:07:00,029 --> 00:07:04,619
for people who need it right and so I

188
00:07:03,000 --> 00:07:06,870
would highly encourage people to not

189
00:07:04,620 --> 00:07:08,579
feel bad about charging for their work

190
00:07:06,870 --> 00:07:10,949
if you feel bad about charging for your

191
00:07:08,579 --> 00:07:12,990
work that's not a good situation you

192
00:07:10,949 --> 00:07:16,769
should always feel like good programming

193
00:07:12,990 --> 00:07:18,210
deserves to be paid for and any ideology

194
00:07:16,769 --> 00:07:21,359
that doesn't believe that has a

195
00:07:18,209 --> 00:07:23,129
significant issue if we eventually move

196
00:07:21,360 --> 00:07:25,379
to a world where people all just have

197
00:07:23,129 --> 00:07:27,480
their needs met and they can all just go

198
00:07:25,379 --> 00:07:30,600
get food for free or whatever in some

199
00:07:27,480 --> 00:07:32,100
kind of you know socialist utopia great

200
00:07:30,600 --> 00:07:33,870
nobody needs to get paid for PIRG

201
00:07:32,100 --> 00:07:36,780
anymore but when you still need to put

202
00:07:33,870 --> 00:07:39,329
food on the table for your family or

203
00:07:36,779 --> 00:07:41,309
just your even yourself you need to get

204
00:07:39,329 --> 00:07:43,409
paid for your work and this is real work

205
00:07:41,310 --> 00:07:48,168
it's hard work to do you should get paid

206
00:07:43,410 --> 00:07:48,169
for it so never feel bad about that ever

207
00:07:48,230 --> 00:07:51,750
everyone else gets paid for their work

208
00:07:50,189 --> 00:07:53,250
you should get paid for yours it's that

209
00:07:51,750 --> 00:07:55,529
simple that's how society currently

210
00:07:53,250 --> 00:07:57,529
functions and until they change the rest

211
00:07:55,529 --> 00:08:00,629
of it and people don't get paid for

212
00:07:57,529 --> 00:08:02,819
driving cars or building buildings or

213
00:08:00,629 --> 00:08:06,930
anything else you should get paid for

214
00:08:02,819 --> 00:08:08,909
doing programming work alright so that

215
00:08:06,930 --> 00:08:10,740
public service message aside let's talk

216
00:08:08,910 --> 00:08:13,500
about the two debuggers that we've got

217
00:08:10,740 --> 00:08:15,600
today they're in very different states I

218
00:08:13,500 --> 00:08:17,339
would say I've played with them just

219
00:08:15,600 --> 00:08:19,530
only slightly so we'll kind of be

220
00:08:17,339 --> 00:08:20,699
exploring them mostly on stream just a

221
00:08:19,529 --> 00:08:21,779
little bit and I'm gonna move over to

222
00:08:20,699 --> 00:08:23,009
regular programming so we're not gonna

223
00:08:21,779 --> 00:08:24,089
try to switch to either Maday we're just

224
00:08:23,009 --> 00:08:26,490
gonna see what state they're in just

225
00:08:24,089 --> 00:08:27,839
taking a quick little look what I would

226
00:08:26,490 --> 00:08:31,470
say is from briefly looking at them I

227
00:08:27,839 --> 00:08:35,299
would say that CDBG is the less mature

228
00:08:31,470 --> 00:08:39,418
in terms of features debugging features

229
00:08:35,299 --> 00:08:42,629
but is very very usable the human

230
00:08:39,418 --> 00:08:43,348
factors are there it's clean runs really

231
00:08:42,629 --> 00:08:46,500
well

232
00:08:43,349 --> 00:08:48,750
and it's immediately usable I was really

233
00:08:46,500 --> 00:08:51,629
impressed by how close they are to

234
00:08:48,750 --> 00:08:53,250
having something that's just drop in and

235
00:08:51,629 --> 00:08:54,240
you never think about Visual Studio

236
00:08:53,250 --> 00:08:56,159
again

237
00:08:54,240 --> 00:08:57,480
code clap is sort of the opposite it

238
00:08:56,159 --> 00:09:00,719
looks like it's got a lot more features

239
00:08:57,480 --> 00:09:03,089
debugging wise it's got disassembly it's

240
00:09:00,720 --> 00:09:05,309
got a lot of things that CDBG doesn't

241
00:09:03,089 --> 00:09:07,649
have yet but it's the opposite in terms

242
00:09:05,308 --> 00:09:09,629
of human factors it's it's it's almost

243
00:09:07,649 --> 00:09:13,078
impenetrable I would say in terms of

244
00:09:09,629 --> 00:09:14,730
trying to start using it it takes a very

245
00:09:13,078 --> 00:09:17,758
big upfront investment to even figure

246
00:09:14,730 --> 00:09:19,589
out how to get it to work and so I feel

247
00:09:17,759 --> 00:09:22,019
like they're both at different very

248
00:09:19,589 --> 00:09:24,119
different places where they each have

249
00:09:22,019 --> 00:09:26,278
something that's kind of far a little

250
00:09:24,119 --> 00:09:29,360
bit far behind where a finished product

251
00:09:26,278 --> 00:09:31,889
would be but both have shown remarkable

252
00:09:29,360 --> 00:09:35,699
progress in terms of what they've got

253
00:09:31,889 --> 00:09:37,528
and so I think you'll see as we go into

254
00:09:35,698 --> 00:09:39,028
them they both have different strengths

255
00:09:37,528 --> 00:09:40,198
and weaknesses but they've both gotten

256
00:09:39,028 --> 00:09:43,708
the point where you can debug programs

257
00:09:40,198 --> 00:09:45,118
which is pretty cool and especially CDBG

258
00:09:43,708 --> 00:09:46,229
I was impressed with because my

259
00:09:45,119 --> 00:09:49,290
understanding is they don't even use

260
00:09:46,230 --> 00:09:51,869
Microsoft's PDB parser they actually use

261
00:09:49,289 --> 00:09:55,349
their own which is kind of awesome

262
00:09:51,869 --> 00:09:59,220
because that means you could parse the

263
00:09:55,350 --> 00:10:00,600
PDB completely independent of having any

264
00:09:59,220 --> 00:10:01,709
sort of Microsoft help I don't know if

265
00:10:00,600 --> 00:10:03,298
that's really true but it sounded like

266
00:10:01,708 --> 00:10:07,048
that was true which is pretty pretty

267
00:10:03,298 --> 00:10:10,350
hardcore anyway so to the best of my

268
00:10:07,048 --> 00:10:11,669
knowledge CDBG is publicly available you

269
00:10:10,350 --> 00:10:13,110
can download it from here by network so

270
00:10:11,669 --> 00:10:15,568
if you want to try it yourself you just

271
00:10:13,110 --> 00:10:17,579
can code clap to the best my knowledge

272
00:10:15,568 --> 00:10:20,009
is not publicly available but I think it

273
00:10:17,578 --> 00:10:21,628
will eventually be sold I think it's

274
00:10:20,009 --> 00:10:23,339
gonna be sold on each i/o don't quote me

275
00:10:21,629 --> 00:10:25,409
on that but that's where I got mine from

276
00:10:23,339 --> 00:10:27,540
like sort of an early access thing so I

277
00:10:25,409 --> 00:10:28,980
believe code clap will be available for

278
00:10:27,539 --> 00:10:31,289
purchase on each i/o one sheet is ready

279
00:10:28,980 --> 00:10:32,699
to go I don't know when that is exactly

280
00:10:31,289 --> 00:10:34,349
again like I said from beginning a

281
00:10:32,698 --> 00:10:37,078
stream I would highly encourage both

282
00:10:34,350 --> 00:10:38,699
teams well I think City Beach made by

283
00:10:37,078 --> 00:10:40,888
one person I don't know how many people

284
00:10:38,698 --> 00:10:42,149
work on code clap I would highly

285
00:10:40,889 --> 00:10:43,740
encourage both of them to charge for

286
00:10:42,149 --> 00:10:46,078
your work you've both done a lot of work

287
00:10:43,740 --> 00:10:47,600
and you're both on the verge of having a

288
00:10:46,078 --> 00:10:50,068
debugger that people could really use

289
00:10:47,600 --> 00:10:52,499
get paid for it you should get paid for

290
00:10:50,068 --> 00:10:54,719
it alright so let's go ahead and take a

291
00:10:52,499 --> 00:10:56,548
look at these two I'm gonna start with

292
00:10:54,720 --> 00:10:59,278
CDBG first because it's I think it's

293
00:10:56,548 --> 00:11:01,528
much easier to use then code clap is and

294
00:10:59,278 --> 00:11:03,389
but it's a little less far along terms

295
00:11:01,528 --> 00:11:06,418
of debugging so let's just take a look

296
00:11:03,389 --> 00:11:08,310
at that and see where it's at right so I

297
00:11:06,418 --> 00:11:10,829
if you want to launch it

298
00:11:08,309 --> 00:11:12,809
I believe it's the same exact way that

299
00:11:10,830 --> 00:11:14,490
you would launch Visual Studio you can

300
00:11:12,809 --> 00:11:16,319
just type it from the command line and

301
00:11:14,490 --> 00:11:18,480
it should launch we should be able to

302
00:11:16,320 --> 00:11:19,920
basically pass command line I think I

303
00:11:18,480 --> 00:11:21,720
don't remember so it may be that you

304
00:11:19,919 --> 00:11:23,459
have to fill out in the actual program

305
00:11:21,720 --> 00:11:26,009
so we'll try launching it but I don't

306
00:11:23,460 --> 00:11:27,960
know if you can do that or not

307
00:11:26,009 --> 00:11:31,559
we'll see oops sorry it's not in him

308
00:11:27,960 --> 00:11:33,420
it's and build win32 handmade exe so I'm

309
00:11:31,559 --> 00:11:36,000
going to try and launch that and we'll

310
00:11:33,419 --> 00:11:37,769
see so here you can see that even just

311
00:11:36,000 --> 00:11:39,929
right off the bat they've done a nice

312
00:11:37,769 --> 00:11:42,840
thing here which is they've made the

313
00:11:39,929 --> 00:11:46,049
interface look roughly similar to visual

314
00:11:42,840 --> 00:11:47,550
studio or you know another standard

315
00:11:46,049 --> 00:11:52,019
bugger like Qt creator or something

316
00:11:47,549 --> 00:11:53,459
again this is pretty nice because if you

317
00:11:52,019 --> 00:11:56,519
want to do something like fundamentally

318
00:11:53,460 --> 00:11:57,690
change the user interface I you're going

319
00:11:56,519 --> 00:12:00,360
to incur an overhead for people to

320
00:11:57,690 --> 00:12:01,470
switch to it now you may have a really

321
00:12:00,360 --> 00:12:02,580
good reason of change interface maybe

322
00:12:01,470 --> 00:12:04,170
you've got some really great ideas on

323
00:12:02,580 --> 00:12:07,050
how to make the interface way better in

324
00:12:04,169 --> 00:12:08,490
that case go for it but if you don't

325
00:12:07,049 --> 00:12:10,979
have any ideas on how to make the

326
00:12:08,490 --> 00:12:12,269
interface way better maybe you only have

327
00:12:10,980 --> 00:12:13,830
ideas to make it a little bit better or

328
00:12:12,269 --> 00:12:15,689
maybe you just want to make it different

329
00:12:13,830 --> 00:12:18,150
because you want to do it not a great

330
00:12:15,690 --> 00:12:19,589
idea why make people relearn how to

331
00:12:18,149 --> 00:12:20,850
debug a program in order to switch to

332
00:12:19,589 --> 00:12:22,170
your thing just give them the same

333
00:12:20,850 --> 00:12:23,879
interface they're used to on Visual

334
00:12:22,169 --> 00:12:26,759
Studio and just make it better to bugger

335
00:12:23,879 --> 00:12:27,689
right and add to it you know so one of

336
00:12:26,759 --> 00:12:30,029
the things you have to remember is don't

337
00:12:27,690 --> 00:12:32,160
change things unless you have a way of

338
00:12:30,029 --> 00:12:34,019
making them way better don't change

339
00:12:32,159 --> 00:12:35,189
something just to change it right in

340
00:12:34,019 --> 00:12:36,870
terms of user interface that doesn't

341
00:12:35,190 --> 00:12:38,730
really make any sense all you're doing

342
00:12:36,870 --> 00:12:39,990
is adding a barrier to entry there so

343
00:12:38,730 --> 00:12:41,550
like what they've done here they

344
00:12:39,990 --> 00:12:43,919
basically look it's to come up the same

345
00:12:41,549 --> 00:12:46,709
way as Visual Studio we even have the

346
00:12:43,919 --> 00:12:49,349
the keys bound the same f5 starts the

347
00:12:46,710 --> 00:12:51,750
process f10 steps over it now lets us do

348
00:12:49,350 --> 00:12:55,470
great I don't even have to relearn key

349
00:12:51,750 --> 00:12:56,639
combinations fantastic right that's a

350
00:12:55,470 --> 00:12:58,740
great idea

351
00:12:56,639 --> 00:13:01,740
there's also Kilda to access the console

352
00:12:58,740 --> 00:13:04,259
I don't know what the console is so that

353
00:13:01,740 --> 00:13:06,210
doesn't really help me but we'll play

354
00:13:04,259 --> 00:13:09,000
around and see what happens it says here

355
00:13:06,210 --> 00:13:10,650
that I can do LS keys to list a bunch of

356
00:13:09,000 --> 00:13:12,809
keys so there they are

357
00:13:10,649 --> 00:13:14,069
so don't know how to use this again but

358
00:13:12,809 --> 00:13:16,379
you know we'll we'll play around a

359
00:13:14,070 --> 00:13:18,270
little alright so I don't know if I was

360
00:13:16,379 --> 00:13:19,830
able to pass my excuse on the command

361
00:13:18,269 --> 00:13:21,360
line but I'll tell you what it's

362
00:13:19,830 --> 00:13:22,000
printing out here in the title bar so it

363
00:13:21,360 --> 00:13:23,950
looks like it

364
00:13:22,000 --> 00:13:27,100
we did that's great if that's actually

365
00:13:23,950 --> 00:13:29,860
true I'm gonna hit f11 to step here we

366
00:13:27,100 --> 00:13:33,279
are at the start of our program now my

367
00:13:29,860 --> 00:13:36,430
understanding I thought that the

368
00:13:33,279 --> 00:13:39,759
developer of this said that he didn't

369
00:13:36,429 --> 00:13:43,329
support parsing of optimized code in the

370
00:13:39,759 --> 00:13:45,970
PDB which i think is what we're looking

371
00:13:43,330 --> 00:13:49,389
at right now so I may have to compile in

372
00:13:45,970 --> 00:13:52,509
debug mode but so far what he did is

373
00:13:49,389 --> 00:13:55,449
working when I hit step in I landed at

374
00:13:52,509 --> 00:13:57,159
our startup kidding f10 is stepping

375
00:13:55,450 --> 00:14:00,280
through the code exactly as Visual

376
00:13:57,159 --> 00:14:02,709
Studio would probably have done so he

377
00:14:00,279 --> 00:14:04,269
may have been under selling it maybe he

378
00:14:02,710 --> 00:14:06,970
means that like the inspection doesn't

379
00:14:04,269 --> 00:14:08,199
work or something I'm not sure but I'll

380
00:14:06,970 --> 00:14:09,610
be honest with you the inspection

381
00:14:08,200 --> 00:14:12,100
doesn't work in Visual Studio in release

382
00:14:09,610 --> 00:14:15,730
mode either so not sure that's something

383
00:14:12,100 --> 00:14:17,200
I can really talk about but yes so for

384
00:14:15,730 --> 00:14:18,610
example I don't know that we would be

385
00:14:17,200 --> 00:14:20,140
able to find instance even in Visual

386
00:14:18,610 --> 00:14:23,080
Studio so I wouldn't hold that against

387
00:14:20,139 --> 00:14:25,569
tickler program I hit shift f5 to stop

388
00:14:23,080 --> 00:14:27,970
and it stopped again really love that

389
00:14:25,570 --> 00:14:29,680
feature I don't have to learn anything

390
00:14:27,970 --> 00:14:31,389
to use this thing it just feels like the

391
00:14:29,679 --> 00:14:33,370
same debugger I'm used to only guess

392
00:14:31,389 --> 00:14:35,169
what when I hit the step key I have to

393
00:14:33,370 --> 00:14:37,539
wait 12 seconds for it to go to the next

394
00:14:35,169 --> 00:14:39,579
line excellent work here really really

395
00:14:37,539 --> 00:14:42,250
liked it it feels great

396
00:14:39,580 --> 00:14:44,650
let's compile handmade hero in debug

397
00:14:42,250 --> 00:14:45,940
mode so that we can do a test of this in

398
00:14:44,649 --> 00:14:49,600
the way that we would normally do bug

399
00:14:45,940 --> 00:14:51,400
because Visual Studio doesn't handle nan

400
00:14:49,600 --> 00:14:53,139
doesn't handle release mode executables

401
00:14:51,399 --> 00:14:54,819
anyway even though we passed a switch

402
00:14:53,139 --> 00:14:56,649
that supposedly allows it to do so it

403
00:14:54,820 --> 00:14:57,879
doesn't handle them anyway so let's just

404
00:14:56,649 --> 00:14:59,470
a bug the way we would normally do bug

405
00:14:57,879 --> 00:15:02,049
which is with the debug PDB and let's

406
00:14:59,470 --> 00:15:04,029
take a look at how this does so here we

407
00:15:02,049 --> 00:15:04,870
go I'm gonna step in here and now I'm

408
00:15:04,029 --> 00:15:06,819
gonna try and take a look at one of

409
00:15:04,870 --> 00:15:08,740
these it looks like it parsed this

410
00:15:06,820 --> 00:15:10,240
instance just fine I'm looking at the

411
00:15:08,740 --> 00:15:12,330
value here again don't know if these are

412
00:15:10,240 --> 00:15:15,399
correct but they certainly look correct

413
00:15:12,330 --> 00:15:17,710
here we're gonna step in - sorry that's

414
00:15:15,399 --> 00:15:18,699
actually a macro I guess so

415
00:15:17,710 --> 00:15:19,750
you'll notice the one thing that's

416
00:15:18,700 --> 00:15:21,790
missing from this and I said this before

417
00:15:19,750 --> 00:15:23,589
you can't look at this assembly that's

418
00:15:21,789 --> 00:15:24,789
the big thing I would probably the

419
00:15:23,589 --> 00:15:27,640
reason I couldn't switch this right now

420
00:15:24,789 --> 00:15:29,620
would be that so we can't do that

421
00:15:27,639 --> 00:15:31,509
otherwise I'm like doing some hover

422
00:15:29,620 --> 00:15:34,060
stuff here and it's it's working pretty

423
00:15:31,509 --> 00:15:35,080
well it looks like in terms of hovering

424
00:15:34,059 --> 00:15:36,969
over stuff I have over

425
00:15:35,080 --> 00:15:39,370
variable it does show me what it

426
00:15:36,970 --> 00:15:41,230
actually is that's pretty great let's

427
00:15:39,370 --> 00:15:41,590
take a look at query performance counter

428
00:15:41,230 --> 00:15:44,470
here

429
00:15:41,590 --> 00:15:46,090
I'm sorry parents frequency you can see

430
00:15:44,470 --> 00:15:51,580
it kind of output emitter so let me let

431
00:15:46,090 --> 00:15:59,530
me take a look at that so that got UPS I

432
00:15:51,580 --> 00:16:00,910
typed that wrong okay so here's the per

433
00:15:59,529 --> 00:16:03,579
if count frequency result I'm gonna open

434
00:16:00,909 --> 00:16:06,309
it up I don't really know what that is

435
00:16:03,580 --> 00:16:07,990
that looks like that might be some kind

436
00:16:06,309 --> 00:16:10,779
of a bug I don't think there's really

437
00:16:07,990 --> 00:16:13,930
any particular reason why there should

438
00:16:10,779 --> 00:16:15,789
be an uninspected a variable there so

439
00:16:13,929 --> 00:16:17,259
that may just be a PDB parsing error or

440
00:16:15,789 --> 00:16:20,409
something that they don't quite parse

441
00:16:17,259 --> 00:16:23,559
yet so I really couldn't tell you this

442
00:16:20,409 --> 00:16:24,870
looks probably correct otherwise let's

443
00:16:23,559 --> 00:16:27,369
go ahead and step in here

444
00:16:24,870 --> 00:16:28,960
step in seems to work just fine here's

445
00:16:27,370 --> 00:16:32,919
one through to build eggsy path file

446
00:16:28,960 --> 00:16:35,530
name let's take a look at the state that

447
00:16:32,919 --> 00:16:38,079
looks totally and I by the way I just

448
00:16:35,529 --> 00:16:39,189
like that to emphasize you but you can't

449
00:16:38,080 --> 00:16:42,070
really feel this because you're watching

450
00:16:39,190 --> 00:16:46,300
out stream but this is so much snappier

451
00:16:42,070 --> 00:16:48,490
than Visual Studio like already this one

452
00:16:46,299 --> 00:16:52,000
person NYX lifts I believe is his name

453
00:16:48,490 --> 00:16:55,000
who wrote this has bested the entire

454
00:16:52,000 --> 00:16:58,419
visual studio team which is dozens of

455
00:16:55,000 --> 00:17:00,490
people over decades has completely

456
00:16:58,419 --> 00:17:02,529
trounced them in terms of actually

457
00:17:00,490 --> 00:17:06,940
writing a program that inspects their

458
00:17:02,529 --> 00:17:08,230
own format right and so excellent work

459
00:17:06,940 --> 00:17:10,570
here I mean this feels great

460
00:17:08,230 --> 00:17:12,959
it's like way better than Visual Studio

461
00:17:10,569 --> 00:17:14,980
already way better than Visual Studio

462
00:17:12,959 --> 00:17:17,039
and that's a product that they charge

463
00:17:14,980 --> 00:17:20,380
thousands of dollars for right

464
00:17:17,039 --> 00:17:21,789
alright so let's step into cat strings

465
00:17:20,380 --> 00:17:23,770
let's try to stepping through some

466
00:17:21,789 --> 00:17:25,599
things here again everything looks like

467
00:17:23,769 --> 00:17:28,150
it's working really well I'm having no

468
00:17:25,599 --> 00:17:30,069
trouble using it it's updating it

469
00:17:28,150 --> 00:17:32,890
updates instantaneously I mean just

470
00:17:30,069 --> 00:17:35,559
again so much better look at that I mean

471
00:17:32,890 --> 00:17:37,240
this is really quality work here I mean

472
00:17:35,559 --> 00:17:42,909
this is great if I had money I would

473
00:17:37,240 --> 00:17:45,180
just hire this person right John are you

474
00:17:42,910 --> 00:17:45,180
out there

475
00:17:45,849 --> 00:17:55,719
hey John you want a debugger 4ji well

476
00:17:50,250 --> 00:17:56,380
higher Nick all right so anyway this

477
00:17:55,720 --> 00:18:00,279
looks great

478
00:17:56,380 --> 00:18:02,170
let me try stepping out that's harder so

479
00:18:00,279 --> 00:18:04,629
I don't know how to step out maybe there

480
00:18:02,170 --> 00:18:06,519
is no step out I tried getting shift at

481
00:18:04,630 --> 00:18:09,400
11:00 and it doesn't do anything so that

482
00:18:06,519 --> 00:18:13,569
key either there is no step out of or

483
00:18:09,400 --> 00:18:16,330
there or it's not bound to that now I

484
00:18:13,569 --> 00:18:18,069
don't know how to use the console but

485
00:18:16,329 --> 00:18:20,230
but it did tell us how to list those

486
00:18:18,069 --> 00:18:24,730
keys so I'm just gonna use that and see

487
00:18:20,230 --> 00:18:26,890
if I can figure out where step out of

488
00:18:24,730 --> 00:18:28,329
might be if there is something which

489
00:18:26,890 --> 00:18:29,770
there might not be right

490
00:18:28,329 --> 00:18:31,269
so I'm looking here just like a step

491
00:18:29,769 --> 00:18:39,009
into step over there is no step out of

492
00:18:31,269 --> 00:18:40,119
that I can see so I'm gonna go ahead and

493
00:18:39,009 --> 00:18:41,829
assume that that feature isn't

494
00:18:40,119 --> 00:18:43,599
implemented yet that'd be a good one to

495
00:18:41,829 --> 00:18:45,419
implement out of the things that's

496
00:18:43,599 --> 00:18:50,049
missing that probably a big one for me

497
00:18:45,420 --> 00:18:52,750
step out of step out of and again

498
00:18:50,049 --> 00:18:57,909
disassembly only two things I've noticed

499
00:18:52,750 --> 00:19:00,279
so far that I really would that I would

500
00:18:57,910 --> 00:19:02,590
really be missing um so let's try and

501
00:19:00,279 --> 00:19:05,799
set a breakpoint I don't know how to set

502
00:19:02,589 --> 00:19:08,409
a breakpoint in this program control B

503
00:19:05,799 --> 00:19:10,750
looks like it switches buffers to look

504
00:19:08,410 --> 00:19:12,340
at things so that's probably not super

505
00:19:10,750 --> 00:19:16,150
helpful I want to set a breakpoint by

506
00:19:12,339 --> 00:19:17,980
name I don't know how to do that or even

507
00:19:16,150 --> 00:19:24,870
if it can do that so let's just again

508
00:19:17,980 --> 00:19:24,870
take a look we've got let's see

509
00:19:35,460 --> 00:19:40,269
so I don't know let me see

510
00:19:38,500 --> 00:19:44,308
is there tabbed is there like a

511
00:19:40,269 --> 00:19:44,308
breakpoint command or anything

512
00:19:46,650 --> 00:19:54,160
there's a data break so this I'm not

513
00:19:52,000 --> 00:19:55,720
sure this wouldn't may support and I

514
00:19:54,160 --> 00:20:02,100
just don't necessarily know how to do it

515
00:19:55,720 --> 00:20:02,100
is the thing so I I really couldn't say

516
00:20:02,190 --> 00:20:08,440
it's got a data break menu which is

517
00:20:05,109 --> 00:20:13,899
awesome by the way but we don't really

518
00:20:08,440 --> 00:20:18,160
need that at the moment that's good all

519
00:20:13,900 --> 00:20:20,259
this stuff is good so yeah I just can't

520
00:20:18,160 --> 00:20:21,580
figure out how I'd set a breakpoint by

521
00:20:20,259 --> 00:20:24,990
name you might not have that

522
00:20:21,579 --> 00:20:24,990
functionality yet I don't know

523
00:20:26,250 --> 00:20:37,000
again just really hard to say because we

524
00:20:28,299 --> 00:20:39,428
didn't make this thing let's see I like

525
00:20:37,000 --> 00:20:43,589
the phrase pluck and select and pluck I

526
00:20:39,429 --> 00:20:43,590
don't know what they do but I like them

527
00:20:53,450 --> 00:20:57,569
yes oh I guess like I said don't really

528
00:20:56,069 --> 00:20:59,819
know what to do about that

529
00:20:57,569 --> 00:21:01,888
not sure how to set a breakpoint on that

530
00:20:59,819 --> 00:21:03,720
now if I was at a particular line it's

531
00:21:01,888 --> 00:21:07,829
pretty clear that I can just set the

532
00:21:03,720 --> 00:21:10,528
breakpoint however I want so the only

533
00:21:07,829 --> 00:21:12,839
reason I care about the type of

534
00:21:10,528 --> 00:21:14,398
breakpoint that I was talking about it's

535
00:21:12,839 --> 00:21:16,528
just that you've seen me on him a here a

536
00:21:14,398 --> 00:21:18,209
lot of times I'll do that I want to be

537
00:21:16,528 --> 00:21:20,099
able to set a breakpoint on a function

538
00:21:18,210 --> 00:21:22,740
because it's just an easier way to do it

539
00:21:20,099 --> 00:21:25,500
than having to find it right so I really

540
00:21:22,740 --> 00:21:33,388
want a good way to quickly sort of set

541
00:21:25,500 --> 00:21:36,750
the breakpoint in that way so yeah I

542
00:21:33,388 --> 00:21:39,240
just don't know and I can't really look

543
00:21:36,750 --> 00:21:40,740
up any buffers that haven't been loaded

544
00:21:39,240 --> 00:21:44,490
yet probably right I mean I could go

545
00:21:40,740 --> 00:21:46,200
open the file I suppose and look at it

546
00:21:44,490 --> 00:21:48,720
but that's really yeah so that's really

547
00:21:46,200 --> 00:21:51,058
the biggest problem now let's let's take

548
00:21:48,720 --> 00:21:53,038
a look at some of the advanced features

549
00:21:51,058 --> 00:21:55,500
here because I feel like I've read some

550
00:21:53,038 --> 00:21:58,470
stuff in the readme let me just go ahead

551
00:21:55,500 --> 00:21:59,970
and I feel like there's a thing that was

552
00:21:58,470 --> 00:22:01,649
pretty interesting you could like

553
00:21:59,970 --> 00:22:05,129
apparently just view like images and

554
00:22:01,648 --> 00:22:16,878
stuff even so let's take a look at some

555
00:22:05,128 --> 00:22:16,878
of that so let's see there's here we go

556
00:22:18,599 --> 00:22:25,089
so these features like in particular

557
00:22:22,089 --> 00:22:26,619
this one is one of the smartest features

558
00:22:25,089 --> 00:22:27,879
I think I've seen in the debugger I

559
00:22:26,619 --> 00:22:30,059
don't know who came up with that maybe

560
00:22:27,880 --> 00:22:33,160
it's a visual studio guys don't do it

561
00:22:30,059 --> 00:22:35,319
but I love that basically what you can

562
00:22:33,160 --> 00:22:38,529
say is hey I've got a linked list I want

563
00:22:35,319 --> 00:22:40,329
to see the linked list clearly so here

564
00:22:38,529 --> 00:22:41,980
is how we need to go and here's the

565
00:22:40,329 --> 00:22:45,309
field that contains the next pointer

566
00:22:41,980 --> 00:22:48,730
that's just great there are so many

567
00:22:45,309 --> 00:22:51,700
times when I would like that right again

568
00:22:48,730 --> 00:22:54,910
just really really good oh here it is F

569
00:22:51,700 --> 00:22:58,150
break places a breakpoint starts by

570
00:22:54,910 --> 00:23:00,700
function so it does have it so basically

571
00:22:58,150 --> 00:23:03,310
I would just say F break and which

572
00:23:00,700 --> 00:23:05,319
function I want to go into so for

573
00:23:03,309 --> 00:23:07,419
example let's suppose that I want to

574
00:23:05,319 --> 00:23:12,490
stop at I have to imagine the bugging

575
00:23:07,420 --> 00:23:16,779
sir scenario here what might we want to

576
00:23:12,490 --> 00:23:19,720
break that I don't know maybe something

577
00:23:16,779 --> 00:23:22,750
with a linked list so let's look at a

578
00:23:19,720 --> 00:23:31,660
handmade asset here let's try a choir

579
00:23:22,750 --> 00:23:33,609
asset memory right so oops I don't know

580
00:23:31,660 --> 00:23:35,320
how to actually tell it to keep going

581
00:23:33,609 --> 00:23:42,969
maybe I just say that five looks like

582
00:23:35,319 --> 00:23:44,980
maybe there it is all right so that's

583
00:23:42,970 --> 00:23:46,509
pretty cool I need to set our executable

584
00:23:44,980 --> 00:23:48,519
path properly in order for us to be able

585
00:23:46,509 --> 00:23:51,129
to run and ever get to that function so

586
00:23:48,519 --> 00:23:54,190
let's go to go ahead and say handmade

587
00:23:51,130 --> 00:23:58,060
that's the startup oops I guess you have

588
00:23:54,190 --> 00:24:04,059
to do that why is that an invalid path

589
00:23:58,059 --> 00:24:07,809
oh I see because it didn't populate I'm

590
00:24:04,059 --> 00:24:14,169
sorry I edited the wrong thing my bad

591
00:24:07,809 --> 00:24:16,869
let's do that again build win32 handmade

592
00:24:14,170 --> 00:24:20,710
and then this is I this is why I said it

593
00:24:16,869 --> 00:24:22,509
handmade there we go okay so now what I

594
00:24:20,710 --> 00:24:23,920
want to do is run it and see if we get

595
00:24:22,509 --> 00:24:26,529
to that thing I don't know how to list

596
00:24:23,920 --> 00:24:30,360
breakpoints so I don't know what

597
00:24:26,529 --> 00:24:31,950
breakpoints are actively there

598
00:24:30,359 --> 00:24:33,329
the way they do that in Visual Studio is

599
00:24:31,950 --> 00:24:35,370
I've got a little window that lists the

600
00:24:33,329 --> 00:24:38,069
breakpoints I don't know if you can get

601
00:24:35,369 --> 00:24:40,559
one of those in here in terms of the

602
00:24:38,069 --> 00:24:46,279
view I'm not sure what exactly we have

603
00:24:40,559 --> 00:24:49,169
four options in in that - that - that I

604
00:24:46,279 --> 00:24:51,119
did that to the fact there's like a

605
00:24:49,170 --> 00:24:54,600
bunch of stuff here like call stack and

606
00:24:51,119 --> 00:24:55,889
so on I don't know like if I hit alt 0

607
00:24:54,599 --> 00:24:57,750
there's the debug out but you can you

608
00:24:55,890 --> 00:24:59,160
can see I can sort of selective which by

609
00:24:57,750 --> 00:25:00,390
the way it's great the hotkeys to move

610
00:24:59,160 --> 00:25:02,580
to these windows is awesome I would

611
00:25:00,390 --> 00:25:04,110
learn those and start using them um so I

612
00:25:02,579 --> 00:25:05,909
don't know if I can view the breakpoints

613
00:25:04,109 --> 00:25:09,149
it might be here that I could do like a

614
00:25:05,910 --> 00:25:10,290
list command or something that would

615
00:25:09,150 --> 00:25:12,990
show me on my breakpoints

616
00:25:10,289 --> 00:25:16,289
I don't know how to see all of the

617
00:25:12,990 --> 00:25:20,759
things that I can do either so that's a

618
00:25:16,289 --> 00:25:22,349
little bit confusing maybe this is all

619
00:25:20,759 --> 00:25:25,609
of them oops all right

620
00:25:22,349 --> 00:25:25,609
maybe this is all of them I don't know

621
00:25:28,460 --> 00:25:39,740
that's pretty cool right all right so

622
00:25:35,460 --> 00:25:42,509
let me step in yeah that's really cool

623
00:25:39,740 --> 00:25:45,210
this thing is really impressive I mean

624
00:25:42,509 --> 00:25:50,210
this is a very this is a very very good

625
00:25:45,210 --> 00:25:50,210
project here um I'm impressed with this

626
00:25:57,269 --> 00:26:05,829
so there's my answer right it looks like

627
00:26:02,829 --> 00:26:08,259
maybe this isn't quite working it says

628
00:26:05,829 --> 00:26:10,898
that this breakpoint is inactive but I'm

629
00:26:08,259 --> 00:26:12,788
not sure why because it's on a function

630
00:26:10,898 --> 00:26:14,319
so there may be something in here that

631
00:26:12,788 --> 00:26:16,629
needs to get fixed which is that

632
00:26:14,319 --> 00:26:19,119
breakpoints on functions need to remain

633
00:26:16,630 --> 00:26:21,970
on functions let me just see what

634
00:26:19,119 --> 00:26:24,869
happens if I do F break and paste again

635
00:26:21,970 --> 00:26:28,600
acquire asset memory and now I do in

636
00:26:24,869 --> 00:26:29,949
when I'm here it seems like I don't know

637
00:26:28,599 --> 00:26:34,778
it seems like this may be a little bit

638
00:26:29,950 --> 00:26:39,850
broken I'm not sure because it's like it

639
00:26:34,778 --> 00:26:42,490
worked right so it is setting it here

640
00:26:39,849 --> 00:26:44,579
but the listing isn't right

641
00:26:42,490 --> 00:26:48,009
but again pretty minor because it worked

642
00:26:44,579 --> 00:26:50,230
so stepping through here this is great I

643
00:26:48,009 --> 00:26:57,538
mean it looks like it's totally working

644
00:26:50,230 --> 00:26:59,980
I can look at everything yeah I mean

645
00:26:57,538 --> 00:27:02,679
it's really great let's try some of the

646
00:26:59,980 --> 00:27:04,329
advanced features now so we know here

647
00:27:02,679 --> 00:27:08,048
for example this block has a next

648
00:27:04,329 --> 00:27:09,939
pointer right and so when we go ahead

649
00:27:08,048 --> 00:27:11,679
and insert this block we should give us

650
00:27:09,940 --> 00:27:13,659
an opportunity here to look at that

651
00:27:11,679 --> 00:27:16,690
linked list so taking a look at the

652
00:27:13,659 --> 00:27:19,539
linked list here we we can say like okay

653
00:27:16,690 --> 00:27:21,429
here's the block and here's the next

654
00:27:19,538 --> 00:27:23,619
pointer for the block that's pointing to

655
00:27:21,429 --> 00:27:26,080
something else let's say that we want to

656
00:27:23,619 --> 00:27:27,189
look at several of these this is again

657
00:27:26,079 --> 00:27:28,689
something that I'm gonna try and learn

658
00:27:27,190 --> 00:27:31,808
here I don't know how to do this

659
00:27:28,690 --> 00:27:33,580
it says LT a will list a linked list set

660
00:27:31,808 --> 00:27:35,528
for me so let's go ahead and give it a

661
00:27:33,579 --> 00:27:38,439
pointer to the first thing which would

662
00:27:35,528 --> 00:27:40,298
be block in this case next is the field

663
00:27:38,440 --> 00:27:42,038
I don't know if I need to quote that I

664
00:27:40,298 --> 00:27:44,379
probably do so it's probably something

665
00:27:42,038 --> 00:27:46,298
more like that and then we've got a

666
00:27:44,380 --> 00:27:49,778
number to traverse which is going to be

667
00:27:46,298 --> 00:27:51,609
let's say five so I don't know if this

668
00:27:49,778 --> 00:27:55,659
actually will work we'll see if it does

669
00:27:51,609 --> 00:27:58,449
or if it doesn't work on the way down so

670
00:27:55,659 --> 00:28:01,899
here we go here's the first block it's

671
00:27:58,450 --> 00:28:04,659
21 c-deck right and it's got a 8 at the

672
00:28:01,898 --> 00:28:07,569
end there it is right there so this is

673
00:28:04,659 --> 00:28:08,990
the the first one you can see that the

674
00:28:07,569 --> 00:28:13,819
pointers

675
00:28:08,990 --> 00:28:15,799
for it are see here are what they should

676
00:28:13,819 --> 00:28:19,159
be right then we can look at the next

677
00:28:15,799 --> 00:28:23,178
one down and that would be under here

678
00:28:19,160 --> 00:28:25,429
oops sorry that would be where would

679
00:28:23,179 --> 00:28:27,470
that be confusing my own self here so

680
00:28:25,429 --> 00:28:33,200
there's the first one there's the next

681
00:28:27,470 --> 00:28:36,769
one right under blocks that's zero zero

682
00:28:33,200 --> 00:28:45,110
that's this here's the next one it's 110

683
00:28:36,769 --> 00:28:46,250
48 yeah um so again just to underscore

684
00:28:45,109 --> 00:28:49,039
how awesome this is

685
00:28:46,250 --> 00:28:51,710
you saw how confusing it was for me to

686
00:28:49,039 --> 00:28:53,869
even try to verify it but this is so

687
00:28:51,710 --> 00:28:56,779
clean right now you can just see the

688
00:28:53,869 --> 00:28:58,939
array the linked list as if it was just

689
00:28:56,779 --> 00:29:06,019
a list of items exactly what you want

690
00:28:58,940 --> 00:29:07,670
right so good right just so good really

691
00:29:06,019 --> 00:29:09,589
great work there I mean that's just

692
00:29:07,670 --> 00:29:12,050
fantastic right I mean absolutely

693
00:29:09,589 --> 00:29:15,339
fantastic let's try another advanced

694
00:29:12,049 --> 00:29:20,569
feature I'm gonna go ahead here and say

695
00:29:15,339 --> 00:29:22,428
let's run to finalize asset bitmap so I

696
00:29:20,569 --> 00:29:25,308
set a breakpoint there I'm gonna turn

697
00:29:22,429 --> 00:29:27,710
off this breakpoint when we get here now

698
00:29:25,308 --> 00:29:30,950
we've got a texture app that texture app

699
00:29:27,710 --> 00:29:34,190
has an image in it you can actually see

700
00:29:30,950 --> 00:29:36,500
the texture here it's 512 by 512 and

701
00:29:34,190 --> 00:29:39,320
it's got a data pointer to it let's see

702
00:29:36,500 --> 00:29:41,329
if we can actually inspect it here is

703
00:29:39,319 --> 00:29:43,819
the image call so I'm gonna go ahead and

704
00:29:41,329 --> 00:29:45,079
say image and again this is something

705
00:29:43,819 --> 00:29:51,558
that in order to do in Visual Studio you

706
00:29:45,079 --> 00:29:54,379
need to install a plugin right so let's

707
00:29:51,558 --> 00:29:59,029
go ahead and look at image I'm gonna say

708
00:29:54,380 --> 00:30:00,590
op texture data which is a big ask here

709
00:29:59,029 --> 00:30:02,899
like we're asking to do so much stuff

710
00:30:00,589 --> 00:30:05,750
we're asking to like dereference this

711
00:30:02,900 --> 00:30:07,130
whole thing and all this stuff so I'm

712
00:30:05,750 --> 00:30:08,539
gonna try it first this way and if it

713
00:30:07,130 --> 00:30:09,860
doesn't work I'll put in things mostly

714
00:30:08,539 --> 00:30:13,039
so we're just we're giving it the

715
00:30:09,859 --> 00:30:15,169
maximal challenge here if you will so we

716
00:30:13,039 --> 00:30:16,849
need the number that that's always for

717
00:30:15,170 --> 00:30:18,019
we don't need to pass that but now we

718
00:30:16,849 --> 00:30:22,399
need the width and the height so that's

719
00:30:18,019 --> 00:30:25,579
update texture with update

720
00:30:22,400 --> 00:30:28,900
texture height and again this may be too

721
00:30:25,579 --> 00:30:34,579
much to ask we'll see so let's find out

722
00:30:28,900 --> 00:30:37,160
unbelievable look at that this is just I

723
00:30:34,579 --> 00:30:37,720
mean this is just brilliant this is just

724
00:30:37,160 --> 00:30:41,269
great

725
00:30:37,720 --> 00:30:43,759
that's me I mean that's just awesome now

726
00:30:41,269 --> 00:30:46,940
I don't know what that actually does in

727
00:30:43,759 --> 00:30:49,400
terms of launching that I'm gonna leave

728
00:30:46,940 --> 00:30:52,880
this preview open and what I'm gonna do

729
00:30:49,400 --> 00:30:55,190
here I don't know is that like a okay so

730
00:30:52,880 --> 00:30:58,040
I can I I click preview in the pre visit

731
00:30:55,190 --> 00:31:02,900
if I hit f5 to run right a different one

732
00:30:58,039 --> 00:31:08,869
now and I don't know if I can still

733
00:31:02,900 --> 00:31:11,450
preview it I can that's just I mean this

734
00:31:08,869 --> 00:31:17,509
is just phenomenal I mean that's just

735
00:31:11,450 --> 00:31:20,110
that's just really really good so here's

736
00:31:17,509 --> 00:31:20,109
what I would say

737
00:31:20,420 --> 00:31:27,860
it needs a breakpoint list a I would

738
00:31:25,849 --> 00:31:31,539
like to be able to hit f9 to toggle

739
00:31:27,859 --> 00:31:34,250
breakpoints I'd like a breakpoint list

740
00:31:31,539 --> 00:31:36,019
somewhere maybe the console is fine but

741
00:31:34,250 --> 00:31:40,910
it would just have to work and I'd like

742
00:31:36,019 --> 00:31:43,099
disassembly barring that this is I just

743
00:31:40,910 --> 00:31:44,810
switch I'd switch if it had those things

744
00:31:43,099 --> 00:31:46,879
I would switch already I mean this is

745
00:31:44,809 --> 00:31:48,859
way better than Visual Studio way better

746
00:31:46,880 --> 00:31:52,850
than minutes to do faster than Visual

747
00:31:48,859 --> 00:31:54,229
Studio launches immediately it's got

748
00:31:52,849 --> 00:31:56,240
features without having to install

749
00:31:54,230 --> 00:32:01,190
plugins that vigil studio just doesn't

750
00:31:56,240 --> 00:32:04,630
even have out of the box I mean it's

751
00:32:01,190 --> 00:32:07,340
just better it's just better so yeah

752
00:32:04,630 --> 00:32:09,010
disassembly in a register window to

753
00:32:07,339 --> 00:32:11,720
solve that side of things

754
00:32:09,009 --> 00:32:13,369
breakpoints maybe some hotkey changes

755
00:32:11,720 --> 00:32:16,670
and this thing is a drop-in replacement

756
00:32:13,369 --> 00:32:20,169
I mean excellent work just excellent

757
00:32:16,670 --> 00:32:20,170
work across the board

758
00:32:21,380 --> 00:32:28,010
I would pay in me I would pay several

759
00:32:26,119 --> 00:32:30,079
hundred dollars for that product by the

760
00:32:28,009 --> 00:32:31,660
way we would be we would definitely

761
00:32:30,079 --> 00:32:38,058
license it and that's what I would use

762
00:32:31,660 --> 00:32:39,350
so alright um so let's try code clap I

763
00:32:38,058 --> 00:32:41,029
think code cops gonna be a little harder

764
00:32:39,349 --> 00:32:43,699
because again like I said the interface

765
00:32:41,029 --> 00:32:45,859
was pretty challenging but it had a lot

766
00:32:43,700 --> 00:32:47,090
of features as well looks like it has

767
00:32:45,859 --> 00:32:49,369
more features in Visual Studio as well

768
00:32:47,089 --> 00:32:50,720
so we'll try it but I can't promise I'll

769
00:32:49,369 --> 00:32:52,428
get as far as in CD because again the

770
00:32:50,720 --> 00:32:54,079
interface is kind of tricky so I feel

771
00:32:52,429 --> 00:32:55,429
like it's one of those things that the

772
00:32:54,079 --> 00:32:57,009
devs probably to work on the interface

773
00:32:55,429 --> 00:32:58,970
or at least provide some pretty

774
00:32:57,009 --> 00:33:02,419
significant documentation as to how to

775
00:32:58,970 --> 00:33:04,669
use it so I'm gonna go ahead and run it

776
00:33:02,419 --> 00:33:06,200
here I'm gonna try to run it the same

777
00:33:04,669 --> 00:33:08,809
way I ran the other one but again I

778
00:33:06,200 --> 00:33:12,440
don't know if it supports that usage

779
00:33:08,808 --> 00:33:18,950
necessarily so here's code clap

780
00:33:12,440 --> 00:33:21,950
launching I'm launching it on my my

781
00:33:18,950 --> 00:33:24,500
hammy executable we haven't set the

782
00:33:21,950 --> 00:33:25,940
working directory so we need to figure

783
00:33:24,500 --> 00:33:28,069
out a way to do that because that will

784
00:33:25,940 --> 00:33:32,048
be wrong just like it wasn't CDBG we had

785
00:33:28,069 --> 00:33:34,428
to change it right so as you can see

786
00:33:32,048 --> 00:33:36,440
there's a little bit that's the same so

787
00:33:34,429 --> 00:33:38,000
it's got you know two windows over here

788
00:33:36,440 --> 00:33:41,150
that kind of feel a little bit similar

789
00:33:38,000 --> 00:33:42,980
but otherwise it's kind of bizarre like

790
00:33:41,150 --> 00:33:44,780
you know even just this right here I can

791
00:33:42,980 --> 00:33:47,329
sort of see what it is it's a it's a

792
00:33:44,779 --> 00:33:48,980
resizer but a lot of the stuff is kind

793
00:33:47,329 --> 00:33:50,629
of non-standard like I don't know what a

794
00:33:48,980 --> 00:33:55,819
lot of this stuff would necessarily do I

795
00:33:50,630 --> 00:33:58,010
guess that closes it maybe okay so

796
00:33:55,819 --> 00:33:58,639
that's like key by like this is like

797
00:33:58,009 --> 00:34:00,470
settings

798
00:33:58,640 --> 00:34:02,150
it just it's it's you right it's it's

799
00:34:00,470 --> 00:34:04,850
pretty non-standard so it's gonna take

800
00:34:02,150 --> 00:34:07,970
us a little bit to get into right but

801
00:34:04,849 --> 00:34:10,699
we'll try to work around it so I let's

802
00:34:07,970 --> 00:34:14,148
see so the also the stepping is

803
00:34:10,699 --> 00:34:18,230
different so f8 steps a line in f9 steps

804
00:34:14,148 --> 00:34:21,618
in to f7 steps out ugh alright so you

805
00:34:18,230 --> 00:34:23,269
know working through here so I'll tell

806
00:34:21,619 --> 00:34:25,010
you right off the bat really nice

807
00:34:23,269 --> 00:34:26,690
feature is this display you can see what

808
00:34:25,010 --> 00:34:30,830
they're doing here they're just showing

809
00:34:26,690 --> 00:34:33,858
you the values of things add as you move

810
00:34:30,829 --> 00:34:34,819
through so it's pretty great because you

811
00:34:33,858 --> 00:34:36,380
know that save

812
00:34:34,820 --> 00:34:38,269
the trouble of having to add things or

813
00:34:36,380 --> 00:34:39,919
look at a window it's just showing right

814
00:34:38,269 --> 00:34:42,590
in there what the thing is that's a

815
00:34:39,918 --> 00:34:43,009
great feature right I mean why not do

816
00:34:42,590 --> 00:34:44,329
that

817
00:34:43,010 --> 00:34:46,340
there's your you know what I mean

818
00:34:44,329 --> 00:34:49,099
there's no reason not to just show me

819
00:34:46,340 --> 00:34:52,720
what the values are you've got room so

820
00:34:49,099 --> 00:34:52,719
do it right that's brilliant

821
00:34:54,730 --> 00:35:10,130
really really nice what I do yeah so

822
00:35:08,030 --> 00:35:13,460
that's that's really nice

823
00:35:10,130 --> 00:35:18,440
let's try stepping into something step

824
00:35:13,460 --> 00:35:21,230
into is f9 so seemed like it worked

825
00:35:18,440 --> 00:35:24,170
flawlessly there it looks like an output

826
00:35:21,230 --> 00:35:27,110
window has been created for us I kind of

827
00:35:24,170 --> 00:35:32,300
like that translucent thing that's

828
00:35:27,110 --> 00:35:33,740
pretty cool actually I don't know what

829
00:35:32,300 --> 00:35:35,690
it's telling me though that's not

830
00:35:33,739 --> 00:35:39,379
something we output I don't think we

831
00:35:35,690 --> 00:35:42,679
ever print child created do we so I

832
00:35:39,380 --> 00:35:45,579
assume that's a actual output from the

833
00:35:42,679 --> 00:35:47,509
debugger telling us that a child thread

834
00:35:45,579 --> 00:35:48,860
because like that it's something that

835
00:35:47,510 --> 00:35:52,130
would potentially happen in the X input

836
00:35:48,860 --> 00:35:56,120
library for example I don't really know

837
00:35:52,130 --> 00:35:58,160
though so stepping through again here

838
00:35:56,119 --> 00:35:59,960
we're looking at the X input so let's

839
00:35:58,159 --> 00:36:04,190
take a look at can I inspect something

840
00:35:59,960 --> 00:36:05,269
let's look at X input get state I love

841
00:36:04,190 --> 00:36:07,070
the fact that it's got command

842
00:36:05,269 --> 00:36:10,219
completion there right did you see that

843
00:36:07,070 --> 00:36:12,500
how that's doing that now X input get

844
00:36:10,219 --> 00:36:15,259
state unfortunately is not in the

845
00:36:12,500 --> 00:36:17,719
completion so it would be nice if it

846
00:36:15,260 --> 00:36:19,550
actually was able to complete things

847
00:36:17,719 --> 00:36:21,769
that were in the scope it doesn't look

848
00:36:19,550 --> 00:36:24,050
like it is unfortunately but you know

849
00:36:21,769 --> 00:36:26,449
that's what I wanted to do it's saying

850
00:36:24,050 --> 00:36:28,730
that X input get state is undefined but

851
00:36:26,449 --> 00:36:32,989
it is defined so I'm not sure what's

852
00:36:28,730 --> 00:36:34,789
going on there exactly I don't think

853
00:36:32,989 --> 00:36:38,379
that's a pound to fine

854
00:36:34,789 --> 00:36:38,380
but maybe it is

855
00:36:46,739 --> 00:36:52,569
so I don't know I can't seem to get it

856
00:36:49,090 --> 00:36:53,950
to show that we know X input library

857
00:36:52,570 --> 00:36:58,930
since is defined right there is

858
00:36:53,949 --> 00:37:01,750
obviously a real variable and it found

859
00:36:58,929 --> 00:37:04,659
that so I don't know why X input get

860
00:37:01,750 --> 00:37:07,059
state wasn't able to be expanded it may

861
00:37:04,659 --> 00:37:10,269
be a macro is the only thing I can think

862
00:37:07,059 --> 00:37:11,980
of and so if it is a macro then that's

863
00:37:10,269 --> 00:37:13,840
just yeah like something that you know

864
00:37:11,980 --> 00:37:15,929
most debuggers can't handle that so it's

865
00:37:13,840 --> 00:37:19,900
no big deal right

866
00:37:15,929 --> 00:37:22,750
alright so step line is what f8 here

867
00:37:19,900 --> 00:37:24,369
let's try to keep doing that so one

868
00:37:22,750 --> 00:37:26,590
thing that I will say is like it doesn't

869
00:37:24,369 --> 00:37:28,509
step line doesn't seem to quite be

870
00:37:26,590 --> 00:37:30,940
working right like I have to hit it a

871
00:37:28,510 --> 00:37:34,930
lot of times it doesn't seem to actually

872
00:37:30,940 --> 00:37:42,190
be able to step a line also like this

873
00:37:34,929 --> 00:37:44,139
like I can't seem to scroll properly not

874
00:37:42,190 --> 00:37:49,980
really sure what's going on there this

875
00:37:44,139 --> 00:37:49,980
might just be slowness can't quite tell

876
00:37:52,199 --> 00:37:56,549
yeah so I think it's just gotten himself

877
00:37:54,340 --> 00:37:58,360
into a state where it's it's really

878
00:37:56,550 --> 00:38:00,910
struggling with something I'm not sure

879
00:37:58,360 --> 00:38:03,579
what so you can see here it's it's

880
00:38:00,909 --> 00:38:09,279
pegged CPU usage wise right that's a

881
00:38:03,579 --> 00:38:19,150
full peg on some core basically but I'm

882
00:38:09,280 --> 00:38:20,350
not sure what's wrong I don't know yeah

883
00:38:19,150 --> 00:38:24,400
I think it's just kind of a little bit

884
00:38:20,349 --> 00:38:30,659
busted if I try to stop the program

885
00:38:24,400 --> 00:38:30,660
completely see if it can recover

886
00:38:33,559 --> 00:38:42,358
you can't really seem to yeah so I guess

887
00:38:40,409 --> 00:38:46,829
what I would say here is again like it

888
00:38:42,358 --> 00:38:50,779
doesn't it doesn't quite seem to be at

889
00:38:46,829 --> 00:38:56,130
the point in terms of usability that CG

890
00:38:50,780 --> 00:39:00,420
cdbg is it's like not really able to to

891
00:38:56,130 --> 00:39:02,730
reliably debug a program right maybe in

892
00:39:00,420 --> 00:39:03,869
terms of you differently I don't know it

893
00:39:02,730 --> 00:39:06,990
seems like it's got some nice features

894
00:39:03,869 --> 00:39:08,400
kind of like CDBG is looking beyond what

895
00:39:06,989 --> 00:39:09,929
the basic things are that happened in

896
00:39:08,400 --> 00:39:12,240
Visual Studio like putting all the

897
00:39:09,929 --> 00:39:14,159
things into the program to look at

898
00:39:12,239 --> 00:39:16,829
what's really pretty cool but again the

899
00:39:14,159 --> 00:39:18,449
usability is just not there yet so I

900
00:39:16,829 --> 00:39:21,569
feel like that's what needs the work on

901
00:39:18,449 --> 00:39:25,980
code clap I think code clap does support

902
00:39:21,570 --> 00:39:29,250
disassembly so when it is working it's

903
00:39:25,980 --> 00:39:32,909
pretty easy I think to get more features

904
00:39:29,250 --> 00:39:35,190
out of it I'm not sure again because it

905
00:39:32,909 --> 00:39:38,519
is a little bit non-standard it's hard

906
00:39:35,190 --> 00:39:43,170
to know like what how to get to various

907
00:39:38,519 --> 00:39:47,159
things that you might want to do you see

908
00:39:43,170 --> 00:39:48,750
if there's anything in here I thought it

909
00:39:47,159 --> 00:39:51,588
had disassembly but I don't know how to

910
00:39:48,750 --> 00:39:51,588
access it

911
00:40:07,059 --> 00:40:12,789
ah there it is so this little drop-down

912
00:40:10,570 --> 00:40:15,700
here says I can look at the various

913
00:40:12,789 --> 00:40:18,250
kinds all right so it looks like yeah it

914
00:40:15,699 --> 00:40:20,649
looks like mixed isn't really working at

915
00:40:18,250 --> 00:40:25,179
the moment so again I think that one

916
00:40:20,650 --> 00:40:26,829
it just needs reliability testing polish

917
00:40:25,179 --> 00:40:28,419
get it to the point where it doesn't

918
00:40:26,829 --> 00:40:32,380
crash doesn't slow down right it's

919
00:40:28,420 --> 00:40:34,059
really that is step one but it looks

920
00:40:32,380 --> 00:40:35,940
again looks promising like it seems like

921
00:40:34,059 --> 00:40:39,219
it sort of is on the way

922
00:40:35,940 --> 00:40:41,289
cdbg definitely way further along right

923
00:40:39,219 --> 00:40:42,759
now I would say in terms usually I could

924
00:40:41,289 --> 00:40:45,309
I can see myself switching CVB's

925
00:40:42,760 --> 00:40:49,570
probably pretty soon depending on the

926
00:40:45,309 --> 00:40:51,840
situation so there you have it both of

927
00:40:49,570 --> 00:40:54,340
those products seem pretty promising

928
00:40:51,840 --> 00:40:56,519
again I wish I had some way to provide

929
00:40:54,340 --> 00:40:59,829
significant funding to them like I said

930
00:40:56,519 --> 00:41:01,300
CDBG I feel like I would buy for a

931
00:40:59,829 --> 00:41:05,460
significant amount of money right now

932
00:41:01,300 --> 00:41:10,860
actually if it just had a couple things

933
00:41:05,460 --> 00:41:10,860
disassembly reliable breakpoint list

934
00:41:11,250 --> 00:41:16,539
maybe the ability to rebind some the

935
00:41:13,599 --> 00:41:18,219
keys or add a few keys that make it

936
00:41:16,539 --> 00:41:22,059
functionally identical to the things I

937
00:41:18,219 --> 00:41:24,869
click in Visual Studio that's a couple

938
00:41:22,059 --> 00:41:30,099
hundred dollar product for me easily I

939
00:41:24,869 --> 00:41:35,259
would buy that tomorrow I can't I can't

940
00:41:30,099 --> 00:41:39,849
see for other people but again very nice

941
00:41:35,260 --> 00:41:41,800
work so pretty optimistic that those

942
00:41:39,849 --> 00:41:45,179
look like products that are going right

943
00:41:41,800 --> 00:41:47,350
those are going and hopefully they will

944
00:41:45,179 --> 00:41:51,309
come to fruition both of them

945
00:41:47,349 --> 00:41:54,250
we need more debuggers that's all I can

946
00:41:51,309 --> 00:41:57,730
say so anyway thank you very much to

947
00:41:54,250 --> 00:42:00,250
both teams for sending me those and let

948
00:41:57,730 --> 00:42:02,619
me play around with them I wish you both

949
00:42:00,250 --> 00:42:04,239
the best of luck and I hope that you're

950
00:42:02,619 --> 00:42:06,039
able to finish those projects or at

951
00:42:04,239 --> 00:42:07,929
least get them to a version state where

952
00:42:06,039 --> 00:42:09,730
they can be used because I am really

953
00:42:07,929 --> 00:42:12,819
looking forward to being able to use one

954
00:42:09,730 --> 00:42:15,849
or both of them in the future instead of

955
00:42:12,820 --> 00:42:21,240
Visual Studio that said let's go ahead

956
00:42:15,849 --> 00:42:23,670
and move on to actually debugging here

957
00:42:21,239 --> 00:42:25,139
and also for code clap if you want me to

958
00:42:23,670 --> 00:42:26,789
try that against it's like I said it was

959
00:42:25,139 --> 00:42:28,829
looks like it was kind of on the edge of

960
00:42:26,789 --> 00:42:30,509
it just needs some polishing of it I'm

961
00:42:28,829 --> 00:42:32,579
happy to try that again once things are

962
00:42:30,510 --> 00:42:34,530
more stabilized because it looked like I

963
00:42:32,579 --> 00:42:36,539
mean it looked pretty full-featured

964
00:42:34,530 --> 00:42:40,440
right so if it just clean gets cleaned

965
00:42:36,539 --> 00:42:41,670
up it looked like it had most of the

966
00:42:40,440 --> 00:42:43,650
features we wanted like if the mixed

967
00:42:41,670 --> 00:42:46,619
assembly and so on so feel free to ping

968
00:42:43,650 --> 00:42:48,289
me again when it's ready to go and I'll

969
00:42:46,619 --> 00:42:50,519
give it another shot

970
00:42:48,289 --> 00:42:51,960
obviously same with cdbg but I think

971
00:42:50,519 --> 00:42:53,309
like I said that one's pretty close I

972
00:42:51,960 --> 00:42:54,449
think all you really have to do is tell

973
00:42:53,309 --> 00:42:58,739
me this assembly was in there and I just

974
00:42:54,449 --> 00:43:00,960
switch already and that's it all right

975
00:42:58,739 --> 00:43:03,899
I'm gonna go ahead and move those guys

976
00:43:00,960 --> 00:43:06,630
out for now and we will keep a watch on

977
00:43:03,900 --> 00:43:09,960
them and hopefully be able to switch to

978
00:43:06,630 --> 00:43:13,440
one of them someday let's go back to

979
00:43:09,960 --> 00:43:18,960
programming the game we was programming

980
00:43:13,440 --> 00:43:21,059
and if I remember correctly we were

981
00:43:18,960 --> 00:43:23,070
probably at a point where we should

982
00:43:21,059 --> 00:43:28,110
think about fixing the graphics on our

983
00:43:23,070 --> 00:43:30,750
characters because like right now we're

984
00:43:28,110 --> 00:43:32,610
still using ancient art assets right

985
00:43:30,750 --> 00:43:35,639
like ones that don't even match the

986
00:43:32,610 --> 00:43:38,490
perspective so we should probably try to

987
00:43:35,639 --> 00:43:41,069
start doing some stuff there I don't

988
00:43:38,489 --> 00:43:42,719
even know this is gonna like we're

989
00:43:41,070 --> 00:43:44,789
really soon getting into the part where

990
00:43:42,719 --> 00:43:46,409
it's gameplay programming I know John

991
00:43:44,789 --> 00:43:53,130
blow is too busy watching counter-strike

992
00:43:46,409 --> 00:43:55,739
today and and stream sniping us but if

993
00:43:53,130 --> 00:43:57,539
he's listening out there you know like

994
00:43:55,739 --> 00:43:59,309
this is really your problem dude

995
00:43:57,539 --> 00:44:00,840
he's the game designer I'm not a game

996
00:43:59,309 --> 00:44:04,259
designer so he should really have to

997
00:44:00,840 --> 00:44:09,269
come on the stream and design design the

998
00:44:04,260 --> 00:44:11,760
game but you know if if wishes were

999
00:44:09,269 --> 00:44:15,179
horses everyone would have a stable so

1000
00:44:11,760 --> 00:44:17,040
anyway we pretty much did what we wanted

1001
00:44:15,179 --> 00:44:19,829
to do and we can put our assets in the

1002
00:44:17,039 --> 00:44:21,360
game now pretty easily and did we want

1003
00:44:19,829 --> 00:44:22,329
to work on our lighting obviously we

1004
00:44:21,360 --> 00:44:27,059
don't really need to that right

1005
00:44:22,329 --> 00:44:30,190
now let's go ahead and just try to get a

1006
00:44:27,059 --> 00:44:33,639
little further down the the our tacit

1007
00:44:30,190 --> 00:44:37,539
road just because you know I want to

1008
00:44:33,639 --> 00:44:39,940
shake that system out and I would like

1009
00:44:37,539 --> 00:44:43,289
to figure out you know essentially how

1010
00:44:39,940 --> 00:44:46,929
we're gonna do all of those other little

1011
00:44:43,289 --> 00:44:48,519
entity placement things and so on so

1012
00:44:46,929 --> 00:44:50,469
what I'd like to do here is let's just

1013
00:44:48,519 --> 00:44:52,090
try and replace the hero's art assets

1014
00:44:50,469 --> 00:44:55,209
this is gonna be a little bit annoying

1015
00:44:52,090 --> 00:44:57,039
because we kind of have some code in

1016
00:44:55,210 --> 00:44:59,679
there for like warping the assets around

1017
00:44:57,039 --> 00:45:01,960
those were based on a fully upright

1018
00:44:59,679 --> 00:45:03,549
drawing character we have a more

1019
00:45:01,960 --> 00:45:05,530
top-down drawing character now so it's

1020
00:45:03,550 --> 00:45:07,920
not really gonna apply but we can do

1021
00:45:05,530 --> 00:45:10,480
some basic things like change the head

1022
00:45:07,920 --> 00:45:13,090
and that that's a pretty straightforward

1023
00:45:10,480 --> 00:45:14,889
thing and we can also do things like put

1024
00:45:13,090 --> 00:45:16,420
the gloves in properly and a lot of

1025
00:45:14,889 --> 00:45:18,129
other stuff so we can actually start to

1026
00:45:16,420 --> 00:45:20,800
the back we can also populate the world

1027
00:45:18,130 --> 00:45:22,720
with some more characters now and so we

1028
00:45:20,800 --> 00:45:24,850
should just do those things the other

1029
00:45:22,719 --> 00:45:27,189
thing it would be nice to do soon is you

1030
00:45:24,849 --> 00:45:29,259
can see there's a bug with the fog and

1031
00:45:27,190 --> 00:45:30,880
alpha it's not alpha thing fog properly

1032
00:45:29,260 --> 00:45:32,590
uh you might not be able to see that but

1033
00:45:30,880 --> 00:45:35,079
there's like cruft in here you see that

1034
00:45:32,590 --> 00:45:36,850
those are mild alpha pixels just things

1035
00:45:35,079 --> 00:45:39,250
the artist didn't clean up this is

1036
00:45:36,849 --> 00:45:41,170
junctions just prototype artwork so it

1037
00:45:39,250 --> 00:45:42,579
was not cleaned up or anything um

1038
00:45:41,170 --> 00:45:44,019
and normally you'll see that so if I

1039
00:45:42,579 --> 00:45:46,059
switch to a mode where there's no fog

1040
00:45:44,019 --> 00:45:47,289
you'll notice you don't see it the

1041
00:45:46,059 --> 00:45:49,360
reason for that is when fog is not

1042
00:45:47,289 --> 00:45:51,219
enabled we don't have the premultiplied

1043
00:45:49,360 --> 00:45:52,570
alpha mismatch so basically what we've

1044
00:45:51,219 --> 00:45:55,119
got is we've kind of bug in the shader

1045
00:45:52,570 --> 00:45:57,100
that's making fog turn our alpha wrong

1046
00:45:55,119 --> 00:45:58,980
so again just part of this process of

1047
00:45:57,099 --> 00:46:01,029
just getting the game looking right and

1048
00:45:58,980 --> 00:46:04,289
making the world look like something you

1049
00:46:01,030 --> 00:46:08,140
might want to explore is just gonna be

1050
00:46:04,289 --> 00:46:10,929
it's just gonna be cleaning up all these

1051
00:46:08,139 --> 00:46:12,699
little little bits right so let's go

1052
00:46:10,929 --> 00:46:14,679
ahead and think a little bit harder

1053
00:46:12,699 --> 00:46:17,079
about what we're doing here I'm gonna go

1054
00:46:14,679 --> 00:46:19,659
ahead and look in that art directory

1055
00:46:17,079 --> 00:46:22,690
that we've got so here's all the stuff

1056
00:46:19,659 --> 00:46:25,449
we know we've got block walls and floors

1057
00:46:22,690 --> 00:46:28,179
we named those properly and they are

1058
00:46:25,449 --> 00:46:31,089
imported here is a very long list of

1059
00:46:28,179 --> 00:46:33,699
characters we've got we have a template

1060
00:46:31,090 --> 00:46:35,480
here I'm going to rename the way we do

1061
00:46:33,699 --> 00:46:38,809
templates so that they get ignored

1062
00:46:35,480 --> 00:46:41,000
right now we kind of want it to look

1063
00:46:38,809 --> 00:46:43,369
more like this so here is the template

1064
00:46:41,000 --> 00:46:45,349
for a character here is the template for

1065
00:46:43,369 --> 00:46:47,089
an item and we want those to get ignored

1066
00:46:45,349 --> 00:46:49,039
by the system so I'm intentionally not

1067
00:46:47,090 --> 00:46:51,500
be fixing them with a recognized prefix

1068
00:46:49,039 --> 00:46:53,630
right so the template character and

1069
00:46:51,500 --> 00:46:55,610
template item are two things that we

1070
00:46:53,630 --> 00:46:57,170
know we will never read but they're here

1071
00:46:55,610 --> 00:47:01,280
just to remind us of how they're laid

1072
00:46:57,170 --> 00:47:04,340
out right and then we've got I don't

1073
00:47:01,280 --> 00:47:06,380
think any other template specific things

1074
00:47:04,340 --> 00:47:07,760
all the rest of templates are implicit

1075
00:47:06,380 --> 00:47:10,369
and things that we can figure out on our

1076
00:47:07,760 --> 00:47:12,470
own okay so let's take a look at what we

1077
00:47:10,369 --> 00:47:15,559
have four characters so what you can see

1078
00:47:12,469 --> 00:47:17,539
here is and of course it's all busted

1079
00:47:15,559 --> 00:47:24,650
because Microsoft doesn't know how to

1080
00:47:17,539 --> 00:47:27,469
write a picture viewer but what you can

1081
00:47:24,650 --> 00:47:32,030
see here is we have various characters

1082
00:47:27,469 --> 00:47:34,219
here's a cat three cats actually Fred

1083
00:47:32,030 --> 00:47:37,910
Hannah and I think Molly isn't here -

1084
00:47:34,219 --> 00:47:40,369
yeah there's Molly so we've got three

1085
00:47:37,909 --> 00:47:42,529
cats like everything else in the game

1086
00:47:40,369 --> 00:47:46,159
there's a body and a head and you can

1087
00:47:42,530 --> 00:47:48,560
kind of see that all the characters are

1088
00:47:46,159 --> 00:47:51,099
structured the same way and you can see

1089
00:47:48,559 --> 00:47:54,739
in the template for the character

1090
00:47:51,099 --> 00:47:56,719
they've got default dodge move hit

1091
00:47:54,739 --> 00:47:58,549
attack and so on it can be filled in

1092
00:47:56,719 --> 00:48:00,230
here and they've got some facial

1093
00:47:58,550 --> 00:48:02,240
expressions - and you can see like the

1094
00:48:00,230 --> 00:48:04,789
hero for example has some other people

1095
00:48:02,239 --> 00:48:06,889
don't and there's nothing in those right

1096
00:48:04,789 --> 00:48:09,650
and that's allowed because we don't want

1097
00:48:06,889 --> 00:48:11,750
to force the artist to make too many art

1098
00:48:09,650 --> 00:48:14,150
assets so we don't want them to have to

1099
00:48:11,750 --> 00:48:15,349
fill in this grid we want them to just

1100
00:48:14,150 --> 00:48:17,630
fill in the parks the grid they care

1101
00:48:15,349 --> 00:48:21,019
about and that's what Anna's done here

1102
00:48:17,630 --> 00:48:24,440
so for example most simple NPCs don't

1103
00:48:21,019 --> 00:48:26,119
have things like expressions but maybe

1104
00:48:24,440 --> 00:48:27,170
the hero does right and maybe some of

1105
00:48:26,119 --> 00:48:28,969
these other characters will get

1106
00:48:27,170 --> 00:48:30,470
expressed at some time and you can see

1107
00:48:28,969 --> 00:48:34,039
them all here separate it out the way

1108
00:48:30,469 --> 00:48:37,149
that they should be I'd like to put

1109
00:48:34,039 --> 00:48:37,150
these characters in the game now

1110
00:48:40,159 --> 00:48:52,139
but in order to do that we need to think

1111
00:48:48,389 --> 00:48:55,889
about how they're gonna be tagged so one

1112
00:48:52,139 --> 00:48:59,670
aspect of the tagging list for almost

1113
00:48:55,889 --> 00:49:01,819
everybody but the hero we know only this

1114
00:48:59,670 --> 00:49:11,700
parts filled in because they're basic

1115
00:49:01,820 --> 00:49:15,030
they don't have much extra stuff so the

1116
00:49:11,699 --> 00:49:17,879
grid addition of tags is actually pretty

1117
00:49:15,030 --> 00:49:20,670
easy and the reason it is even if they

1118
00:49:17,880 --> 00:49:24,720
were filled out is because the grid tags

1119
00:49:20,670 --> 00:49:25,200
are actually all defined by the grid

1120
00:49:24,719 --> 00:49:27,449
itself

1121
00:49:25,199 --> 00:49:29,599
we know that the tag hit will apply to

1122
00:49:27,449 --> 00:49:31,679
everything in this column that the tag

1123
00:49:29,599 --> 00:49:34,529
for facing direction will apply to

1124
00:49:31,679 --> 00:49:35,730
everything this column body and head tag

1125
00:49:34,530 --> 00:49:38,519
will apply to everything in these

1126
00:49:35,730 --> 00:49:40,230
sections so the tags for what these are

1127
00:49:38,519 --> 00:49:45,179
- that's define can actually just be

1128
00:49:40,230 --> 00:49:46,409
read off of this the grid itself and I

1129
00:49:45,179 --> 00:49:50,519
don't think that's going to be much a

1130
00:49:46,409 --> 00:49:56,190
problem the problem is going to be here

1131
00:49:50,519 --> 00:49:58,349
so in here we sort of have a collection

1132
00:49:56,190 --> 00:50:02,210
of things that are all somewhat

1133
00:49:58,349 --> 00:50:06,440
interchangeable in terms of characters

1134
00:50:02,210 --> 00:50:08,429
all of these orphans can be

1135
00:50:06,440 --> 00:50:11,010
interchangeable in terms they're artists

1136
00:50:08,429 --> 00:50:13,139
that's for example you could trivially

1137
00:50:11,010 --> 00:50:15,450
put the head of this character on the

1138
00:50:13,139 --> 00:50:17,339
body for this character if you've wanted

1139
00:50:15,449 --> 00:50:20,689
to and so on so what we're really

1140
00:50:17,340 --> 00:50:25,320
talking about here is ways of tagging

1141
00:50:20,690 --> 00:50:28,829
these ways of tagging these characters

1142
00:50:25,320 --> 00:50:33,090
with tags that we would use to identify

1143
00:50:28,829 --> 00:50:34,139
them and there's multiple ways that we

1144
00:50:33,090 --> 00:50:36,570
could do that

1145
00:50:34,139 --> 00:50:40,650
right one way is to just tag them with

1146
00:50:36,570 --> 00:50:46,080
their name but another is to tag them

1147
00:50:40,650 --> 00:50:47,730
with their sort of attributes you know

1148
00:50:46,079 --> 00:50:50,549
for example if this one was tagged with

1149
00:50:47,730 --> 00:50:52,670
a sports attribute for example because

1150
00:50:50,550 --> 00:50:55,970
and you know

1151
00:50:52,670 --> 00:50:58,829
can't really there we go

1152
00:50:55,969 --> 00:51:01,379
you know things like that I don't know

1153
00:50:58,829 --> 00:51:03,090
to what extent we really want to go down

1154
00:51:01,380 --> 00:51:07,190
that route because I don't know how much

1155
00:51:03,090 --> 00:51:13,019
we're going to want to interchange them

1156
00:51:07,190 --> 00:51:20,159
but it's like it's just worth noting

1157
00:51:13,019 --> 00:51:21,989
right so the heads themselves yeah I

1158
00:51:20,159 --> 00:51:25,649
don't know I really just don't know how

1159
00:51:21,989 --> 00:51:26,699
we want to categorize them exactly some

1160
00:51:25,650 --> 00:51:30,420
of them are obvious I mean this is

1161
00:51:26,699 --> 00:51:37,859
obviously for baking right and this is a

1162
00:51:30,420 --> 00:51:42,180
tailor but the heads I mean you know

1163
00:51:37,860 --> 00:51:44,460
they're just faces so there's no real

1164
00:51:42,179 --> 00:51:48,139
way to tag faces in a way that the game

1165
00:51:44,460 --> 00:51:48,139
would care about what the face is

1166
00:51:58,309 --> 00:52:02,099
so that's really tough and that's the

1167
00:52:00,599 --> 00:52:05,069
part that I'm not really sure about I'm

1168
00:52:02,099 --> 00:52:06,299
not sure what to do there and this has

1169
00:52:05,070 --> 00:52:08,460
nothing to do with programming right

1170
00:52:06,300 --> 00:52:16,140
this is just how we won our game to talk

1171
00:52:08,460 --> 00:52:19,280
about these various these various

1172
00:52:16,139 --> 00:52:19,279
components that can be put together

1173
00:52:23,068 --> 00:52:27,650
I'm just going to go ahead and do like

1174
00:52:28,670 --> 00:52:31,969
yeah like

1175
00:52:36,548 --> 00:52:44,568
just trying to think I mean what we

1176
00:52:39,079 --> 00:52:46,849
could do is tag the heads with the names

1177
00:52:44,568 --> 00:52:56,778
of the characters but the bodies with

1178
00:52:46,849 --> 00:52:58,579
not with that and I guess the other

1179
00:52:56,778 --> 00:53:00,980
question is would do we ever actually

1180
00:52:58,579 --> 00:53:03,890
use the bodies for other person I mean

1181
00:53:00,980 --> 00:53:09,940
you know what I guess for now we could

1182
00:53:03,889 --> 00:53:13,909
just name the characters and tag them

1183
00:53:09,940 --> 00:53:19,909
both I really wish I had a solid idea

1184
00:53:13,909 --> 00:53:20,828
about which one I wanted to do but I

1185
00:53:19,909 --> 00:53:27,348
just don't

1186
00:53:20,829 --> 00:53:28,519
so on these in terms of like the enemies

1187
00:53:27,349 --> 00:53:32,480
they're a lot more straightforward

1188
00:53:28,518 --> 00:53:34,098
because they probably have elements that

1189
00:53:32,480 --> 00:53:36,949
we would actually care about like for

1190
00:53:34,099 --> 00:53:40,838
example you know a mummy is maybe undead

1191
00:53:36,949 --> 00:53:47,298
and skeletal you know things like that

1192
00:53:40,838 --> 00:53:51,429
and and a skeleton is you know undead

1193
00:53:47,298 --> 00:53:51,429
these sorts of things we could probably

1194
00:53:53,588 --> 00:53:58,639
just codify which we sort of did like

1195
00:53:56,778 --> 00:54:03,710
skeleton and dark skeleton broken and

1196
00:53:58,639 --> 00:54:07,868
just regular skeleton right and a mummy

1197
00:54:03,710 --> 00:54:07,869
is also a skeleton so

1198
00:54:13,320 --> 00:54:18,559
so I guess here's how I'd say it so

1199
00:54:15,750 --> 00:54:27,809
let's start with the easy ones I'm gonna

1200
00:54:18,559 --> 00:54:30,630
talk about character dead and a mummy

1201
00:54:27,809 --> 00:54:33,420
sort of has skin so I would say it's

1202
00:54:30,630 --> 00:54:43,260
dead with skin this is dead without skin

1203
00:54:33,420 --> 00:54:46,829
maybe this is dead and broken this is

1204
00:54:43,260 --> 00:54:50,970
dead and dark right so we would have you

1205
00:54:46,829 --> 00:54:54,960
know a dead character a dead broken

1206
00:54:50,969 --> 00:54:57,209
character a dead dark character and a

1207
00:54:54,960 --> 00:54:59,880
dead one that actually has skin so right

1208
00:54:57,210 --> 00:55:09,990
because you can sort of see or I guess

1209
00:54:59,880 --> 00:55:10,440
we could call it wrap or wrapped like

1210
00:55:09,989 --> 00:55:12,299
that

1211
00:55:10,440 --> 00:55:15,420
so tagging out that one is pretty easy

1212
00:55:12,300 --> 00:55:22,110
and it's really these that are harder so

1213
00:55:15,420 --> 00:55:25,349
we have like cat here and we have a

1214
00:55:22,110 --> 00:55:29,670
couple of those that we can tag as cats

1215
00:55:25,349 --> 00:55:33,389
and then how we want to describe the

1216
00:55:29,670 --> 00:55:37,920
cats is a little bit different so Fred

1217
00:55:33,389 --> 00:55:41,099
is a tabby but his brown molly is at

1218
00:55:37,920 --> 00:55:44,190
Abbey but is gray and Hannah is a

1219
00:55:41,099 --> 00:55:46,739
Behrman and a ghost because

1220
00:55:44,190 --> 00:55:51,929
unfortunately Hannah died which is sad I

1221
00:55:46,739 --> 00:55:55,319
wish she had not died but she is only a

1222
00:55:51,929 --> 00:56:04,199
ghost now unfortunately so Hannah is

1223
00:55:55,320 --> 00:56:09,000
actually a ghost and a Behrman Fred is a

1224
00:56:04,199 --> 00:56:14,009
cat through his brown tabby and Molly is

1225
00:56:09,000 --> 00:56:19,170
a gray tabby so those are property eyes

1226
00:56:14,010 --> 00:56:20,670
here I don't know if these would be

1227
00:56:19,170 --> 00:56:23,639
considered ghosts I don't think they

1228
00:56:20,670 --> 00:56:25,200
would they're they're sort of like and

1229
00:56:23,639 --> 00:56:26,889
and you know maybe dead is the wrong

1230
00:56:25,199 --> 00:56:30,098
word maybe here like Undead

1231
00:56:26,889 --> 00:56:32,108
is the correct word right because dead

1232
00:56:30,099 --> 00:56:33,250
sort of implies that they're not gonna

1233
00:56:32,108 --> 00:56:36,670
move around

1234
00:56:33,250 --> 00:56:38,829
whereas undead probably is better okay

1235
00:56:36,670 --> 00:56:42,039
so we've got those in there we've got

1236
00:56:38,829 --> 00:56:44,859
cats we've got undead so that's all the

1237
00:56:42,039 --> 00:56:51,010
characters that are clear and easy to

1238
00:56:44,858 --> 00:56:53,318
name krampus and so yeah so the rest of

1239
00:56:51,010 --> 00:56:56,730
these I guess what I would say is

1240
00:56:53,318 --> 00:56:59,380
Krampus and the orphans and the hero

1241
00:56:56,730 --> 00:57:01,929
Krampus and the hero are probably

1242
00:56:59,380 --> 00:57:03,190
somewhat specific honestly the hero and

1243
00:57:01,929 --> 00:57:04,598
the orphans really probably aren't

1244
00:57:03,190 --> 00:57:06,039
because you know you probably want to be

1245
00:57:04,599 --> 00:57:13,630
able to play as the other orphans at

1246
00:57:06,039 --> 00:57:21,220
some point so I think this might just

1247
00:57:13,630 --> 00:57:22,838
more be like orphan zero-zero right so

1248
00:57:21,219 --> 00:57:24,788
these are all the different orphan body

1249
00:57:22,838 --> 00:57:28,028
parts and the question is just how do we

1250
00:57:24,789 --> 00:57:32,940
name these because they're really not

1251
00:57:28,028 --> 00:57:36,039
necessarily all that descript you know

1252
00:57:32,940 --> 00:57:37,659
and especially because the heads and the

1253
00:57:36,039 --> 00:57:40,650
bodies you know it may have been a

1254
00:57:37,659 --> 00:57:46,389
mistake to put those in the same file

1255
00:57:40,650 --> 00:57:49,900
because the heads are just heads they're

1256
00:57:46,389 --> 00:57:52,389
not really very specific I mean you

1257
00:57:49,900 --> 00:57:54,389
could say one has you know brown hair or

1258
00:57:52,389 --> 00:57:58,150
black hair red hair or something but

1259
00:57:54,389 --> 00:58:00,940
that's not really like important you

1260
00:57:58,150 --> 00:58:04,720
know it doesn't it's just the face you

1261
00:58:00,940 --> 00:58:06,159
would recognize it whereas the bodies

1262
00:58:04,719 --> 00:58:08,469
are a little bit more Civic like you

1263
00:58:06,159 --> 00:58:10,719
know this one's wearing a sports Jersey

1264
00:58:08,469 --> 00:58:13,778
and this one's wearing a dress or a

1265
00:58:10,719 --> 00:58:15,429
skirt rather and this one's wearing a

1266
00:58:13,778 --> 00:58:16,949
bandanna and so you could kind of think

1267
00:58:15,429 --> 00:58:19,629
of those and this was wearing an apron

1268
00:58:16,949 --> 00:58:21,518
you could kind of think of those as

1269
00:58:19,630 --> 00:58:24,519
being important tags that go with the

1270
00:58:21,518 --> 00:58:29,558
body and the head just doesn't really

1271
00:58:24,518 --> 00:58:31,989
have that you know so I do wonder if

1272
00:58:29,559 --> 00:58:35,819
maybe what we want to do sort of longer

1273
00:58:31,989 --> 00:58:39,868
term is just put those in separate files

1274
00:58:35,818 --> 00:58:39,869
that would have separate tags

1275
00:58:46,179 --> 00:58:53,449
and I really couldn't tell you but that

1276
00:58:50,900 --> 00:58:54,829
seems like what we want to do so I think

1277
00:58:53,449 --> 00:58:58,159
I'm going to do is I meant tag the

1278
00:58:54,829 --> 00:58:59,568
bodies I'm gonna ignore the heads so the

1279
00:58:58,159 --> 00:59:01,670
heads we'll just get the tags at the

1280
00:58:59,568 --> 00:59:04,730
bodies half and then maybe we'll talk to

1281
00:59:01,670 --> 00:59:09,400
Anna and just say look let's change how

1282
00:59:04,730 --> 00:59:11,568
we're doing this let's go ahead and

1283
00:59:09,400 --> 00:59:16,838
split them out in two separate files

1284
00:59:11,568 --> 00:59:20,588
that don't have that property right and

1285
00:59:16,838 --> 00:59:23,480
then the heads can just be named

1286
00:59:20,588 --> 00:59:25,578
probably because I don't think there's

1287
00:59:23,480 --> 00:59:31,338
really gonna be a lot of other ways you

1288
00:59:25,579 --> 00:59:33,798
can you know really talk about a head in

1289
00:59:31,338 --> 00:59:37,250
a gameplay sense I mean even things like

1290
00:59:33,798 --> 00:59:38,929
hair color skin color eye color the game

1291
00:59:37,250 --> 00:59:43,519
doesn't care they wouldn't affect the

1292
00:59:38,929 --> 00:59:45,500
gameplay in any way so unless there was

1293
00:59:43,519 --> 00:59:48,349
something about the head like with the

1294
00:59:45,500 --> 00:59:51,829
kid with you know with the NPC's this is

1295
00:59:48,349 --> 00:59:52,519
an undead character versus a dark undead

1296
00:59:51,829 --> 00:59:54,680
character

1297
00:59:52,519 --> 00:59:56,480
those are gameplay related the

1298
00:59:54,679 --> 00:59:58,578
characters don't have that their head

1299
00:59:56,480 --> 01:00:00,500
could just be whatever it is and that's

1300
00:59:58,579 --> 01:00:01,880
just sort of the identity of the

1301
01:00:00,500 --> 01:00:04,519
character in the sense that like oh

1302
01:00:01,880 --> 01:00:07,608
that's Lisa from the orphanage versus

1303
01:00:04,519 --> 01:00:08,960
Carl from the orphanage is the only real

1304
01:00:07,608 --> 01:00:10,909
way that the head would come into play

1305
01:00:08,960 --> 01:00:13,039
which makes me think that the head is

1306
01:00:10,909 --> 01:00:14,750
just specific right the head is just

1307
01:00:13,039 --> 01:00:17,390
gonna be named something and like

1308
01:00:14,750 --> 01:00:19,940
there'll be an instance of Lisa in the

1309
01:00:17,389 --> 01:00:22,308
orphanage and that's her head but the

1310
01:00:19,940 --> 01:00:25,970
body you could be a little freer with

1311
01:00:22,309 --> 01:00:27,500
because since it is representational you

1312
01:00:25,969 --> 01:00:29,058
could say that you know someone puts an

1313
01:00:27,500 --> 01:00:31,519
apron on they get the apron body I don't

1314
01:00:29,059 --> 01:00:33,559
know right so that's you know again it's

1315
01:00:31,519 --> 01:00:35,210
really hard to say and maybe the answer

1316
01:00:33,559 --> 01:00:37,278
is you don't really ever want to switch

1317
01:00:35,210 --> 01:00:39,470
it maybe like you know Lee if this is

1318
01:00:37,278 --> 01:00:41,659
Lisa and that's her body and head maybe

1319
01:00:39,469 --> 01:00:45,858
the only time they ever appear together

1320
01:00:41,659 --> 01:00:48,469
is with her and they never can you can

1321
01:00:45,858 --> 01:00:50,929
never swap out or anything right

1322
01:00:48,469 --> 01:00:52,009
and and I don't know so i think the

1323
01:00:50,929 --> 01:00:54,619
bodies need to be

1324
01:00:52,010 --> 01:00:56,900
visited also you know we've kind of got

1325
01:00:54,619 --> 01:00:58,909
to sort of bodies they're stout there's

1326
01:00:56,900 --> 01:01:01,099
Sauter bodies and more slender bodies

1327
01:00:58,909 --> 01:01:03,859
you could really think of those as just

1328
01:01:01,099 --> 01:01:07,279
two types of body and then having

1329
01:01:03,860 --> 01:01:09,920
different outfits on them right and so I

1330
01:01:07,280 --> 01:01:13,220
would rather categorize it that way

1331
01:01:09,920 --> 01:01:15,170
I think that would just be a more sense

1332
01:01:13,219 --> 01:01:16,579
way to do it because then again you

1333
01:01:15,170 --> 01:01:18,710
could sort of have like the concept of

1334
01:01:16,579 --> 01:01:22,299
changing the outfits so so just looking

1335
01:01:18,710 --> 01:01:24,559
at I think that's a better way to go and

1336
01:01:22,300 --> 01:01:27,590
I think we should probably make that

1337
01:01:24,559 --> 01:01:30,019
change looking at the cat's on the other

1338
01:01:27,590 --> 01:01:32,809
hand cats don't work that way

1339
01:01:30,019 --> 01:01:35,239
cats you can't really swap you can't put

1340
01:01:32,809 --> 01:01:38,150
a tabby head on a Behrman body it

1341
01:01:35,239 --> 01:01:39,829
doesn't work that way so they're a

1342
01:01:38,150 --> 01:01:41,570
little more sensible because the bodies

1343
01:01:39,829 --> 01:01:43,130
are not clothed so they are like

1344
01:01:41,570 --> 01:01:47,600
naturally going to go with the head in a

1345
01:01:43,130 --> 01:01:50,119
very specific way so that's a little bit

1346
01:01:47,599 --> 01:01:57,019
more specific so what I may do for now

1347
01:01:50,119 --> 01:01:59,929
is say let's go ahead and and maybe have

1348
01:01:57,019 --> 01:02:03,590
these art assets get changed out before

1349
01:01:59,929 --> 01:02:12,889
we start playing with them and we'll

1350
01:02:03,590 --> 01:02:16,120
replace them with other ones and yeah

1351
01:02:12,889 --> 01:02:16,119
and maybe we can

1352
01:02:18,369 --> 01:02:22,809
I mean I think that's what I'd rather do

1353
01:02:21,280 --> 01:02:23,920
so what I think I'm gonna do here is I'm

1354
01:02:22,809 --> 01:02:26,829
just gonna create a new folder

1355
01:02:23,920 --> 01:02:29,740
temporarily and I'm gonna call this

1356
01:02:26,829 --> 01:02:32,500
pending and I'm just gonna shunt all of

1357
01:02:29,739 --> 01:02:34,869
the orphan stuff into there and we're

1358
01:02:32,500 --> 01:02:39,070
just gonna concentrate just on this part

1359
01:02:34,869 --> 01:02:45,969
right and so here we know that we've got

1360
01:02:39,070 --> 01:02:49,450
Krampus and Krampus is pretty specific

1361
01:02:45,969 --> 01:02:51,069
I think Krampus is just Krampus and

1362
01:02:49,449 --> 01:02:53,109
there's probably not going to ever be

1363
01:02:51,070 --> 01:02:57,789
another Krampus so I think character

1364
01:02:53,110 --> 01:03:00,940
Krampus is pretty much it I don't think

1365
01:02:57,789 --> 01:03:03,659
we need to specify anything more it's

1366
01:03:00,940 --> 01:03:05,470
just Krampus Krampus default and that

1367
01:03:03,659 --> 01:03:06,759
should do it

1368
01:03:05,469 --> 01:03:07,989
we're not gonna look at the rest of

1369
01:03:06,760 --> 01:03:09,580
these right now we're just gonna look at

1370
01:03:07,989 --> 01:03:12,429
these so this should at least allow us

1371
01:03:09,579 --> 01:03:14,889
to put cats in the orphanage which allow

1372
01:03:12,429 --> 01:03:16,659
us to Bakr and puss in there and we

1373
01:03:14,889 --> 01:03:19,929
could even have some monsters right

1374
01:03:16,659 --> 01:03:22,029
because those are in there so let's

1375
01:03:19,929 --> 01:03:24,909
start by just implementing that because

1376
01:03:22,030 --> 01:03:27,040
that's what we can implement and then I

1377
01:03:24,909 --> 01:03:30,699
think we might change this out a little

1378
01:03:27,039 --> 01:03:32,800
bit again you know maybe I guess the

1379
01:03:30,699 --> 01:03:34,599
other thing we could do is put a pause

1380
01:03:32,800 --> 01:03:39,460
on all of these and have them all get

1381
01:03:34,599 --> 01:03:41,860
separated out I don't think we won't do

1382
01:03:39,460 --> 01:03:45,159
that so I think what we want to do is is

1383
01:03:41,860 --> 01:03:46,390
maybe yeah ma mi overcomplicate like

1384
01:03:45,159 --> 01:03:47,739
that's the other thing is like I don't

1385
01:03:46,389 --> 01:03:49,389
know maybe we should just keep all the

1386
01:03:47,739 --> 01:03:50,979
characters together and and you know you

1387
01:03:49,389 --> 01:03:54,250
just they are named what they're named

1388
01:03:50,980 --> 01:03:55,570
and we don't really put much more on it

1389
01:03:54,250 --> 01:03:57,699
than that and then we could just proceed

1390
01:03:55,570 --> 01:04:00,010
as as giving and you just have

1391
01:03:57,699 --> 01:04:06,000
characters just all you know go in the

1392
01:04:00,010 --> 01:04:06,000
same files

1393
01:04:09,809 --> 01:04:23,339
I really just don't know it just really

1394
01:04:20,130 --> 01:04:27,180
kind of feels to me like the heads want

1395
01:04:23,338 --> 01:04:28,288
to be different so I'm gonna I'm gonna

1396
01:04:27,179 --> 01:04:32,489
stick with that I'm just gonna say

1397
01:04:28,289 --> 01:04:34,439
that's what that is because these are

1398
01:04:32,489 --> 01:04:37,559
all based on properties and the other

1399
01:04:34,438 --> 01:04:39,568
ones just really aren't and so I feel

1400
01:04:37,559 --> 01:04:44,309
like we want to try to stick to that as

1401
01:04:39,568 --> 01:04:45,929
best we can and and go from there all

1402
01:04:44,309 --> 01:04:47,969
right so let's go ahead and define the

1403
01:04:45,929 --> 01:04:49,919
tags that we're talking about so that

1404
01:04:47,969 --> 01:04:53,338
these can be imported into the system

1405
01:04:49,920 --> 01:04:59,400
and we can start using them so we've got

1406
01:04:53,338 --> 01:05:01,308
a in the asset import system I think

1407
01:04:59,400 --> 01:05:03,568
right now we sort of have character

1408
01:05:01,309 --> 01:05:06,109
stubbed-out so you can see that like

1409
01:05:03,568 --> 01:05:09,748
hands for example do you get imported

1410
01:05:06,108 --> 01:05:11,248
characters do not write and so what we

1411
01:05:09,748 --> 01:05:14,098
want to do is we want to set up this

1412
01:05:11,248 --> 01:05:16,528
exact same thing for characters but

1413
01:05:14,099 --> 01:05:20,160
we've got a change the way that this

1414
01:05:16,528 --> 01:05:22,108
stuff is set up pretty dramatically here

1415
01:05:20,159 --> 01:05:24,058
because we've got a lot more tags we

1416
01:05:22,108 --> 01:05:26,880
have to apply we have to apply tags

1417
01:05:24,059 --> 01:05:32,278
based on both the column and the row so

1418
01:05:26,880 --> 01:05:35,309
we need a way of looking at both of

1419
01:05:32,278 --> 01:05:36,869
those things together so let's start by

1420
01:05:35,309 --> 01:05:39,660
looking at the character template sheet

1421
01:05:36,869 --> 01:05:42,150
so here it is and what you can see here

1422
01:05:39,659 --> 01:05:44,308
is that going down we've got the facing

1423
01:05:42,150 --> 01:05:47,929
directions working exactly as they did

1424
01:05:44,309 --> 01:05:51,359
with the hands but it happens twice

1425
01:05:47,929 --> 01:05:53,278
right so really instead of Y index less

1426
01:05:51,358 --> 01:05:56,880
than four what we want to do is

1427
01:05:53,278 --> 01:06:00,838
everywhere in the Y index at all we want

1428
01:05:56,880 --> 01:06:08,309
to add that tag right and so we want to

1429
01:06:00,838 --> 01:06:10,288
sort of look at the tags this way and

1430
01:06:08,309 --> 01:06:11,819
say first of all no matter what happens

1431
01:06:10,289 --> 01:06:13,920
you're gonna get a facing Direction tag

1432
01:06:11,818 --> 01:06:16,739
it's gonna be the Y index times to our

1433
01:06:13,920 --> 01:06:18,449
four but this is actually gonna wrap now

1434
01:06:16,739 --> 01:06:21,329
so it's really going to be mobbed four

1435
01:06:18,449 --> 01:06:21,818
so basically we do for each one of the

1436
01:06:21,329 --> 01:06:23,199
one

1437
01:06:21,818 --> 01:06:26,619
that we're looking at we get a facing

1438
01:06:23,199 --> 01:06:35,548
direction in there and it gets specified

1439
01:06:26,619 --> 01:06:38,019
that way now I one thing that's sort of

1440
01:06:35,548 --> 01:06:39,639
important to remember here is that this

1441
01:06:38,018 --> 01:06:43,268
goes in the direction of the file we

1442
01:06:39,639 --> 01:06:45,879
don't flip the file we flip the tiles so

1443
01:06:43,268 --> 01:06:48,848
even though the PNG goes down but

1444
01:06:45,880 --> 01:06:50,739
graphics goes up for us we're still

1445
01:06:48,849 --> 01:06:53,048
going down here which means that this is

1446
01:06:50,739 --> 01:06:54,159
the zero zero tile which is kind of nice

1447
01:06:53,048 --> 01:06:57,548
because it makes it easier to think

1448
01:06:54,159 --> 01:06:59,649
about here so here's where we add the

1449
01:06:57,548 --> 01:07:03,130
facing direction now what we need to do

1450
01:06:59,650 --> 01:07:05,048
is add body for anything in this here

1451
01:07:03,130 --> 01:07:08,440
and head for everything up in here and

1452
01:07:05,048 --> 01:07:09,818
then we just need to do these ok so the

1453
01:07:08,440 --> 01:07:12,608
first thing I want to do is I want to

1454
01:07:09,818 --> 01:07:15,608
bifurcate this we've got an if Y index

1455
01:07:12,608 --> 01:07:17,828
is less than four here and then if Y

1456
01:07:15,608 --> 01:07:20,259
index is greater than four and that's

1457
01:07:17,829 --> 01:07:22,719
exactly what we want so we need in here

1458
01:07:20,259 --> 01:07:25,059
to be able to specify whether something

1459
01:07:22,719 --> 01:07:27,458
is a head or a body if it's less than

1460
01:07:25,059 --> 01:07:29,739
four it's a body if it's greater than

1461
01:07:27,458 --> 01:07:32,169
four it's a head and we don't have any

1462
01:07:29,739 --> 01:07:34,838
real percentages here they're just

1463
01:07:32,170 --> 01:07:36,519
either are or aren't right so it's

1464
01:07:34,838 --> 01:07:39,699
pretty straightforward we can just say

1465
01:07:36,518 --> 01:07:42,698
look that's what this is and that's you

1466
01:07:39,699 --> 01:07:44,920
know all there is to it right so the

1467
01:07:42,699 --> 01:07:47,409
next thing we need to do after that is

1468
01:07:44,920 --> 01:07:49,838
start to talk about the specific tags

1469
01:07:47,409 --> 01:07:51,788
that we want for each of these so then

1470
01:07:49,838 --> 01:07:56,380
what we do is say well ok if we're

1471
01:07:51,789 --> 01:07:57,969
inside Y index less than four then we're

1472
01:07:56,380 --> 01:08:00,309
talking about a body which means this is

1473
01:07:57,969 --> 01:08:02,858
what we've got one two three four five

1474
01:08:00,309 --> 01:08:06,009
six seven right so what we want to do

1475
01:08:02,858 --> 01:08:08,018
here is do a switch on the X index and

1476
01:08:06,009 --> 01:08:10,599
we probably want to switch again to be

1477
01:08:08,018 --> 01:08:12,608
part of the specifics so in here we

1478
01:08:10,599 --> 01:08:14,440
probably want to do this where we say

1479
01:08:12,608 --> 01:08:18,130
all right always add that tag and then

1480
01:08:14,440 --> 01:08:20,529
add maybe some other tags so here I want

1481
01:08:18,130 --> 01:08:22,838
to say if we're in case zero which is to

1482
01:08:20,529 --> 01:08:25,020
say the first one we're gonna add a tag

1483
01:08:22,838 --> 01:08:26,920
of some kind here which is tag whatever

1484
01:08:25,020 --> 01:08:29,170
and off we go

1485
01:08:26,920 --> 01:08:31,149
and we want to do a break at the end

1486
01:08:29,170 --> 01:08:32,559
right so this just allows us to put a

1487
01:08:31,149 --> 01:08:35,229
little cracker in there that basically

1488
01:08:32,559 --> 01:08:36,909
says look at which column you're in

1489
01:08:35,229 --> 01:08:38,500
we're gonna apply various tags that are

1490
01:08:36,909 --> 01:08:40,180
just based on our knowledge of what the

1491
01:08:38,500 --> 01:08:42,880
template type is that this person said

1492
01:08:40,180 --> 01:08:45,460
the file was there's a default template

1493
01:08:42,880 --> 01:08:47,588
for zero which means that I think we

1494
01:08:45,460 --> 01:08:49,029
want to just call that an idol so if

1495
01:08:47,588 --> 01:08:51,460
you're looking for idol that's what's in

1496
01:08:49,029 --> 01:08:54,520
this room if you're looking for dodge

1497
01:08:51,460 --> 01:08:59,020
left it's here if you're looking at

1498
01:08:54,520 --> 01:09:09,489
Dodge right it's here then we've got

1499
01:08:59,020 --> 01:09:12,910
move then we've got hit attack and

1500
01:09:09,488 --> 01:09:15,278
nothing in the final one right so this

1501
01:09:12,909 --> 01:09:17,500
is just I like to be determined so

1502
01:09:15,279 --> 01:09:19,270
anything that comes in in there but

1503
01:09:17,500 --> 01:09:21,430
really shouldn't have anything what that

1504
01:09:19,270 --> 01:09:24,489
means is I think we want to just not

1505
01:09:21,430 --> 01:09:26,440
have that occur meaning we don't want to

1506
01:09:24,488 --> 01:09:30,179
set any tags in there we want to leave

1507
01:09:26,439 --> 01:09:33,669
those unset so I would say actually here

1508
01:09:30,180 --> 01:09:36,220
in fact how did we do that beforehand

1509
01:09:33,670 --> 01:09:37,509
yeah we just only set them for those so

1510
01:09:36,220 --> 01:09:40,739
what I'd like to do here is just say

1511
01:09:37,509 --> 01:09:44,079
look even just around this whole thing

1512
01:09:40,738 --> 01:09:46,238
we want to prevent that we what we could

1513
01:09:44,079 --> 01:09:49,930
do is prevent it here by just saying

1514
01:09:46,238 --> 01:09:55,869
look we only want to go up to number

1515
01:09:49,930 --> 01:09:57,100
oops up to number seven right or a

1516
01:09:55,869 --> 01:09:58,599
better way to say that might be lesser

1517
01:09:57,100 --> 01:10:02,200
you go to 6 because that's the only

1518
01:09:58,600 --> 01:10:04,270
cases we actually have right and the

1519
01:10:02,199 --> 01:10:06,429
rest of them student at attack could be

1520
01:10:04,270 --> 01:10:08,860
that I think it's a little bit more

1521
01:10:06,430 --> 01:10:10,869
compelling to do this because since we

1522
01:10:08,859 --> 01:10:12,729
have different numbers of acceptable

1523
01:10:10,869 --> 01:10:15,340
ones depending on which temperature in I

1524
01:10:12,729 --> 01:10:17,769
think what I want to do is something a

1525
01:10:15,340 --> 01:10:20,289
little bit more specific here which is

1526
01:10:17,770 --> 01:10:22,060
maybe to say look let's actually start

1527
01:10:20,289 --> 01:10:26,079
this stuff a little bit more

1528
01:10:22,060 --> 01:10:31,450
specifically where we begin and end

1529
01:10:26,079 --> 01:10:40,750
inside these so that we can we can

1530
01:10:31,449 --> 01:10:44,349
actually tag these like so only if they

1531
01:10:40,750 --> 01:10:46,590
actually exist right only if there are

1532
01:10:44,350 --> 01:10:50,020
things that exist in the

1533
01:10:46,590 --> 01:10:52,719
in the template so one two three four

1534
01:10:50,020 --> 01:10:54,639
five six seven of those right so it

1535
01:10:52,719 --> 01:10:55,868
should be like that another way to write

1536
01:10:54,639 --> 01:11:00,250
it like that this should be less than

1537
01:10:55,868 --> 01:11:03,639
seven of them right

1538
01:11:00,250 --> 01:11:05,560
I used to say there should be less than

1539
01:11:03,639 --> 01:11:11,440
eight of them which is less than seven

1540
01:11:05,560 --> 01:11:14,469
that's okay write it like that okay and

1541
01:11:11,439 --> 01:11:17,229
in here we have even less so in here

1542
01:11:14,469 --> 01:11:20,020
you're actually not allowed to get past

1543
01:11:17,229 --> 01:11:22,618
the third one right so it's got to be

1544
01:11:20,020 --> 01:11:25,060
less than equal to two as an index and

1545
01:11:22,618 --> 01:11:32,319
the switch statement is correspondingly

1546
01:11:25,060 --> 01:11:35,080
simpler right so in here I can say well

1547
01:11:32,319 --> 01:11:43,079
I want to do a switch case their default

1548
01:11:35,079 --> 01:11:46,090
surprised anger something like that

1549
01:11:43,079 --> 01:11:47,889
right so now when we import one of these

1550
01:11:46,090 --> 01:11:50,980
they'll all get tagged properly and

1551
01:11:47,889 --> 01:11:53,679
they'll get shoved into the thing what

1552
01:11:50,979 --> 01:11:55,448
they won't have is anything from the

1553
01:11:53,679 --> 01:11:57,460
filename and we need them to have

1554
01:11:55,448 --> 01:11:58,359
something from the file name because

1555
01:11:57,460 --> 01:12:01,448
otherwise they won't be able to

1556
01:11:58,359 --> 01:12:03,009
different be differentiated so when we

1557
01:12:01,448 --> 01:12:05,229
actually go to parse these we need to

1558
01:12:03,010 --> 01:12:07,300
add to our kind of global tag table now

1559
01:12:05,229 --> 01:12:10,149
we also need to I mean we can sell right

1560
01:12:07,300 --> 01:12:12,610
here that we need to add the tag these

1561
01:12:10,149 --> 01:12:16,029
all these tags need to be set up in our

1562
01:12:12,609 --> 01:12:18,939
asset tag system that's inside file

1563
01:12:16,029 --> 01:12:20,738
format set age so we need to add tags

1564
01:12:18,939 --> 01:12:28,719
here for each of those things so we've

1565
01:12:20,738 --> 01:12:34,809
got a tag how does this work so we've

1566
01:12:28,719 --> 01:12:41,520
got basic category here and I guess

1567
01:12:34,810 --> 01:12:41,520
basic category for a head and body I

1568
01:12:43,289 --> 01:12:47,130
guess we never cross that phase of

1569
01:12:45,550 --> 01:12:50,500
category so those are not really

1570
01:12:47,130 --> 01:12:54,670
appropriate tags in that sense they

1571
01:12:50,500 --> 01:12:56,760
should just be basic category so let's

1572
01:12:54,670 --> 01:12:59,289
go ahead and fix that

1573
01:12:56,760 --> 01:13:00,070
so in here look those are all legitimate

1574
01:12:59,289 --> 01:13:01,809
tang

1575
01:13:00,069 --> 01:13:04,750
and those are all legitimate types these

1576
01:13:01,809 --> 01:13:06,969
are not legitimate tags so what we

1577
01:13:04,750 --> 01:13:11,288
really want to do here is say this is an

1578
01:13:06,969 --> 01:13:13,420
asset body don't need out of tag and

1579
01:13:11,288 --> 01:13:17,469
here we want to say this is an asset

1580
01:13:13,420 --> 01:13:19,840
head now we don't have any more it's

1581
01:13:17,469 --> 01:13:22,719
with specificity there we don't for

1582
01:13:19,840 --> 01:13:24,639
example have asset torso or cape and

1583
01:13:22,719 --> 01:13:28,809
these sorts of things so I'm gonna

1584
01:13:24,639 --> 01:13:31,179
change this to be body and a head are

1585
01:13:28,809 --> 01:13:33,579
the two that we'll use and Cape will go

1586
01:13:31,179 --> 01:13:35,769
away eventually as we start to clean

1587
01:13:33,578 --> 01:13:37,929
those up right so really what we need

1588
01:13:35,769 --> 01:13:39,639
are these here to be added to the tag

1589
01:13:37,929 --> 01:13:42,969
set let's go ahead and do that we've got

1590
01:13:39,639 --> 01:13:45,699
an idol we've got a Dodge left

1591
01:13:42,969 --> 01:13:51,730
we've got Dodge right we've got to move

1592
01:13:45,698 --> 01:14:05,678
we have a hit we have an attack and so

1593
01:13:51,729 --> 01:14:06,759
on idle hips surprise and anger right so

1594
01:14:05,679 --> 01:14:08,230
we've got all those tags and now we

1595
01:14:06,760 --> 01:14:10,510
should be able to compile this properly

1596
01:14:08,229 --> 01:14:13,058
again we have to change anywhere that

1597
01:14:10,510 --> 01:14:33,730
was using torso should now be doing body

1598
01:14:13,059 --> 01:14:34,079
right and that's fine all right there we

1599
01:14:33,729 --> 01:14:36,788
go

1600
01:14:34,078 --> 01:14:38,408
and so we mad at all those tanks and

1601
01:14:36,788 --> 01:14:40,420
then we need to update our tag table

1602
01:14:38,408 --> 01:14:41,618
again because C and C++ toast for an

1603
01:14:40,420 --> 01:14:42,969
introspection why would they they've

1604
01:14:41,618 --> 01:14:45,698
only have 30 years to have that feature

1605
01:14:42,969 --> 01:14:47,109
can't expect miracles let's go ahead and

1606
01:14:45,698 --> 01:14:55,169
take a look at what we define to be in

1607
01:14:47,109 --> 01:14:55,170
here and copy them in there we go

1608
01:14:58,250 --> 01:15:06,368
and so here we just have all of these

1609
01:15:00,578 --> 01:15:06,368
different types so your title

1610
01:15:06,670 --> 01:15:19,750
here's dodge left oops that's right

1611
01:15:20,689 --> 01:15:30,888
move its attack one to surprise anger

1612
01:15:29,539 --> 01:15:33,380
and then we're gonna need to add even

1613
01:15:30,889 --> 01:15:34,789
more tags here in a second by the way in

1614
01:15:33,380 --> 01:15:36,889
case you haven't noticed you can see how

1615
01:15:34,789 --> 01:15:38,510
many tags we're adding this is why I was

1616
01:15:36,889 --> 01:15:40,819
saying we need to deal with tags

1617
01:15:38,510 --> 01:15:42,980
sparsely it's just it's a requirement

1618
01:15:40,819 --> 01:15:44,840
because we're gonna have you know

1619
01:15:42,979 --> 01:15:46,519
hundred tags by the time this game is

1620
01:15:44,840 --> 01:15:48,170
done

1621
01:15:46,520 --> 01:15:50,150
and so that thing we're doing now with

1622
01:15:48,170 --> 01:15:52,760
the matching not gonna cut it

1623
01:15:50,149 --> 01:15:54,888
I said that before and you know I'm not

1624
01:15:52,760 --> 01:15:56,900
lying the tag matching is gonna have to

1625
01:15:54,889 --> 01:16:00,500
be much better but that's not that hard

1626
01:15:56,899 --> 01:16:01,698
to do we'll be able to do it so now we

1627
01:16:00,500 --> 01:16:06,939
have to look through here and add all of

1628
01:16:01,698 --> 01:16:06,939
these so we have a you know cat

1629
01:16:10,520 --> 01:16:19,329
we've got Behrman we've got ghost we've

1630
01:16:15,349 --> 01:16:19,328
got tabby and brown

1631
01:16:19,429 --> 01:16:29,649
we've got grey we've got

1632
01:16:25,970 --> 01:16:29,649
[Music]

1633
01:16:29,899 --> 01:16:43,460
Krampus I'm dead broken and so

1634
01:16:40,050 --> 01:16:50,850
interesting thing is bones here right

1635
01:16:43,460 --> 01:16:51,840
the way that we were doing hand bones so

1636
01:16:50,850 --> 01:17:08,940
I feel like these should probably have

1637
01:16:51,840 --> 01:17:15,199
bones in them and if furthermore I feel

1638
01:17:08,939 --> 01:17:15,199
like this should probably be Undead

1639
01:17:24,079 --> 01:17:27,199
something like that

1640
01:17:30,960 --> 01:17:34,770
all right so anyway continuing on that

1641
01:17:34,020 --> 01:17:36,930
Trent

1642
01:17:34,770 --> 01:17:41,310
we've got undead we've got broken we

1643
01:17:36,930 --> 01:17:50,400
already have dark and dark energy there

1644
01:17:41,310 --> 01:17:51,080
we've got wrapped and I think that's all

1645
01:17:50,399 --> 01:17:56,579
of them

1646
01:17:51,079 --> 01:17:58,369
so there's cat Berman ghost tabby Brown

1647
01:17:56,579 --> 01:18:03,239
ray

1648
01:17:58,369 --> 01:18:06,239
Krampus Undead broken and wrapped all of

1649
01:18:03,239 --> 01:18:09,079
this extra meaningless typing brought to

1650
01:18:06,239 --> 01:18:11,550
you by by the C++ standards committee

1651
01:18:09,079 --> 01:18:13,019
because if there's one thing they love

1652
01:18:11,550 --> 01:18:15,090
more than anything in the world it's

1653
01:18:13,020 --> 01:18:18,720
making programmers type a bunch of

1654
01:18:15,090 --> 01:18:28,199
useless garbage so here we are manually

1655
01:18:18,720 --> 01:18:30,570
copying none of which would have been

1656
01:18:28,199 --> 01:18:42,210
necessary in Ji or any other language

1657
01:18:30,569 --> 01:18:46,349
for that matter and built so that's our

1658
01:18:42,210 --> 01:18:49,739
tag importing we should now be able to

1659
01:18:46,350 --> 01:18:53,190
import those characters in I don't

1660
01:18:49,739 --> 01:18:55,050
actually know that I'm right about that

1661
01:18:53,189 --> 01:18:58,379
but let's just go ahead and run it

1662
01:18:55,050 --> 01:19:00,600
anyway here's me running the import

1663
01:18:58,380 --> 01:19:04,890
process and that should just import them

1664
01:19:00,600 --> 01:19:12,180
into our local HHA file and be done with

1665
01:19:04,890 --> 01:19:14,430
it right okay

1666
01:19:12,180 --> 01:19:17,159
so that looks like our multi tile

1667
01:19:14,430 --> 01:19:18,780
imports a little bit buggy to me to say

1668
01:19:17,159 --> 01:19:24,059
the least

1669
01:19:18,779 --> 01:19:26,899
I also like the fact that we're getting

1670
01:19:24,060 --> 01:19:31,650
a cat body and head right now that's

1671
01:19:26,899 --> 01:19:33,629
awesome so but I'd like to go ahead and

1672
01:19:31,649 --> 01:19:35,129
debug our multi tile import because it

1673
01:19:33,630 --> 01:19:39,690
looks like you can see that it's it's

1674
01:19:35,130 --> 01:19:41,789
got a weird like split happening with

1675
01:19:39,689 --> 01:19:44,318
the way that the textures are lined up

1676
01:19:41,789 --> 01:19:46,059
there and so I'd like

1677
01:19:44,319 --> 01:19:48,639
so go ahead and find out what's going on

1678
01:19:46,059 --> 01:19:50,889
there cuz I don't really know I don't

1679
01:19:48,639 --> 01:19:53,439
really know what's up in there we have a

1680
01:19:50,889 --> 01:19:54,788
number of things we have to address to

1681
01:19:53,439 --> 01:19:56,289
get this stuff working properly why does

1682
01:19:54,788 --> 01:19:58,378
we have to debug the multi tile import

1683
01:19:56,288 --> 01:20:01,929
because it looks like it's importing the

1684
01:19:58,378 --> 01:20:03,639
Stride wrong but the other thing that we

1685
01:20:01,929 --> 01:20:05,469
have to do that we have that we didn't

1686
01:20:03,639 --> 01:20:08,139
have to do for the environment importing

1687
01:20:05,469 --> 01:20:10,929
is we need to be able to set hot like

1688
01:20:08,139 --> 01:20:12,609
the alignment on the sprites remember we

1689
01:20:10,929 --> 01:20:14,639
got an align point to figure out where

1690
01:20:12,609 --> 01:20:18,309
we're gonna like place sprites when we

1691
01:20:14,639 --> 01:20:19,538
place them the world.i we're gonna have

1692
01:20:18,309 --> 01:20:20,798
to do something for that because right

1693
01:20:19,538 --> 01:20:22,509
now we don't have that right now just

1694
01:20:20,798 --> 01:20:24,158
get set to a default and there's no way

1695
01:20:22,510 --> 01:20:25,869
to change it and obviously we can't put

1696
01:20:24,158 --> 01:20:27,848
in the PNG cuz Photoshop doesn't really

1697
01:20:25,868 --> 01:20:29,198
provide a way for artists to do that in

1698
01:20:27,849 --> 01:20:30,519
any way that artists understand there

1699
01:20:29,198 --> 01:20:33,038
are actually some ways you could like

1700
01:20:30,519 --> 01:20:34,329
add text to a PNG in Photoshop and stuff

1701
01:20:33,038 --> 01:20:36,068
like that but that's we don't really

1702
01:20:34,328 --> 01:20:40,168
want artists to have to figure that out

1703
01:20:36,069 --> 01:20:40,169
it's it's done very poorly

1704
01:20:40,319 --> 01:20:43,780
again Photoshop Adobe and the C puzzle

1705
01:20:42,998 --> 01:20:45,818
Standards Committee would love each

1706
01:20:43,779 --> 01:20:47,948
other they're basically like people who

1707
01:20:45,819 --> 01:20:49,869
seem to completely ignore the needs of

1708
01:20:47,948 --> 01:20:52,148
the people who actually use their

1709
01:20:49,868 --> 01:20:56,048
products they should have like some kind

1710
01:20:52,149 --> 01:20:59,649
of a like aggressively we don't want you

1711
01:20:56,048 --> 01:21:00,998
to use our stuff conference that they go

1712
01:20:59,649 --> 01:21:02,409
to each yours to talk about new ways

1713
01:21:00,998 --> 01:21:04,029
they can ignore obvious things that

1714
01:21:02,408 --> 01:21:08,548
everyone has to work around in their

1715
01:21:04,029 --> 01:21:11,408
products alright so let's go ahead and

1716
01:21:08,548 --> 01:21:13,599
work on the bug you met because we

1717
01:21:11,408 --> 01:21:16,748
probably are fine for the rest of our

1718
01:21:13,599 --> 01:21:18,788
stuff let's double check that the rest

1719
01:21:16,748 --> 01:21:21,878
of the tagging and that stuff went okay

1720
01:21:18,788 --> 01:21:26,048
I suspect it probably did but neveress

1721
01:21:21,878 --> 01:21:27,939
to be careful so I'm gonna go ahead and

1722
01:21:26,048 --> 01:21:31,349
use HHA edit and remember we've got a

1723
01:21:27,939 --> 01:21:35,159
dump thing here we can I can take local

1724
01:21:31,349 --> 01:21:38,219
HHA and export it to a text file that

1725
01:21:35,158 --> 01:21:41,318
allows us to use for example tab view

1726
01:21:38,219 --> 01:21:47,109
which I have to actually pull out the

1727
01:21:41,319 --> 01:21:50,949
bonus pack here and use it on local dot

1728
01:21:47,109 --> 01:21:52,959
text so if that lets me just see in here

1729
01:21:50,948 --> 01:21:55,418
what the tags are for all the assets so

1730
01:21:52,958 --> 01:21:58,168
what I could do is look at all the stuff

1731
01:21:55,418 --> 01:21:58,168
that's in here

1732
01:21:58,680 --> 01:22:03,250
obviously we have all our flora stuff

1733
01:22:00,550 --> 01:22:05,850
then we here's like a bunch of hand

1734
01:22:03,250 --> 01:22:08,949
stuff the gun port here's the character

1735
01:22:05,850 --> 01:22:12,789
stuff that got imported so for example

1736
01:22:08,949 --> 01:22:16,449
the the Bourbon ghost cat here we can

1737
01:22:12,789 --> 01:22:17,170
take a look at here it's cat Burman

1738
01:22:16,449 --> 01:22:21,670
ghost

1739
01:22:17,170 --> 01:22:25,420
it's an idol I mean looks stacked like

1740
01:22:21,670 --> 01:22:26,560
what we want so you know guess that I

1741
01:22:25,420 --> 01:22:29,819
think it worked just fine let's look at

1742
01:22:26,560 --> 01:22:32,950
the gray tabby cat great tabby

1743
01:22:29,819 --> 01:22:34,809
so you know looks like the imports

1744
01:22:32,949 --> 01:22:38,380
working is fine you know Krampus is

1745
01:22:34,810 --> 01:22:42,460
Krampus and that's just true in general

1746
01:22:38,380 --> 01:22:44,079
so I feel like this is probably fine so

1747
01:22:42,460 --> 01:22:49,420
our problem is just that when we do

1748
01:22:44,079 --> 01:22:52,390
these imports here where we know that

1749
01:22:49,420 --> 01:22:54,880
our normal path that imports just a

1750
01:22:52,390 --> 01:22:56,200
block seems are working properly because

1751
01:22:54,880 --> 01:22:59,079
we haven't any trouble and bring those

1752
01:22:56,199 --> 01:23:01,479
in but our sort of newly modified

1753
01:22:59,079 --> 01:23:02,859
version that does the multi tile because

1754
01:23:01,479 --> 01:23:04,659
remember we had another tile working but

1755
01:23:02,859 --> 01:23:06,809
we modify little bit it looks like it

1756
01:23:04,659 --> 01:23:09,489
doesn't get the stride right necessarily

1757
01:23:06,810 --> 01:23:11,110
and so we'd like to do is go look at

1758
01:23:09,489 --> 01:23:14,679
what's happening there why is that

1759
01:23:11,109 --> 01:23:17,799
airing out and in what cases is there

1760
01:23:14,680 --> 01:23:21,039
now because it looks like there's some

1761
01:23:17,800 --> 01:23:23,020
some funny business going on there so

1762
01:23:21,039 --> 01:23:25,119
I'm gonna go ahead and just inspect that

1763
01:23:23,020 --> 01:23:27,430
code path I'm also take a look at it in

1764
01:23:25,119 --> 01:23:29,590
the de fire I'm gonna delete the local

1765
01:23:27,430 --> 01:23:31,810
about HHA because I want to force a

1766
01:23:29,590 --> 01:23:34,060
complete re-export so I'm gonna do a

1767
01:23:31,810 --> 01:23:36,400
create for a new local HHA which means

1768
01:23:34,060 --> 01:23:39,070
now I can just force it to report

1769
01:23:36,399 --> 01:23:41,469
everything into that file from the

1770
01:23:39,069 --> 01:23:43,750
source materials that'll allow us to

1771
01:23:41,470 --> 01:23:44,920
debug the export that already happen or

1772
01:23:43,750 --> 01:23:48,729
sirs say the import that already

1773
01:23:44,920 --> 01:23:50,500
happened which is what we want to do I'm

1774
01:23:48,729 --> 01:23:51,989
gonna go to the build here and switch

1775
01:23:50,500 --> 01:23:54,489
the debug mode so I can step through it

1776
01:23:51,989 --> 01:23:56,050
I'm also going to take a brief look to

1777
01:23:54,489 --> 01:23:57,460
read familiarize ourselves with exactly

1778
01:23:56,050 --> 01:23:59,619
what's happening in that code path make

1779
01:23:57,460 --> 01:24:01,539
sure that there's nothing obviously

1780
01:23:59,619 --> 01:24:04,119
wrong before I start debugging it and

1781
01:24:01,539 --> 01:24:06,519
looking at it in more detail now the

1782
01:24:04,119 --> 01:24:09,090
part that's failing specifically is

1783
01:24:06,520 --> 01:24:11,619
process multi tile in port right here

1784
01:24:09,090 --> 01:24:14,949
this part is working prop

1785
01:24:11,618 --> 01:24:17,618
as far as we know single tile import has

1786
01:24:14,948 --> 01:24:19,658
not seen any particular eros so we're

1787
01:24:17,618 --> 01:24:21,549
really talking about this right here you

1788
01:24:19,658 --> 01:24:23,228
can see here when we start down at what

1789
01:24:21,550 --> 01:24:27,038
we do is we take the tile dimensions

1790
01:24:23,229 --> 01:24:32,168
that we're told to use which is the 1024

1791
01:24:27,038 --> 01:24:35,018
tile and we we specify the size for the

1792
01:24:32,168 --> 01:24:37,628
test there what we are doing here is

1793
01:24:35,019 --> 01:24:40,269
saying look if we took a tile dimension

1794
01:24:37,628 --> 01:24:42,819
of 1024 how far should we scale it down

1795
01:24:40,269 --> 01:24:45,189
and we get a down sample count there

1796
01:24:42,819 --> 01:24:47,618
that's just so we scale all the sprites

1797
01:24:45,189 --> 01:24:50,260
uniformly because we are gonna pick out

1798
01:24:47,618 --> 01:24:52,299
a region of the sprite based on how much

1799
01:24:50,260 --> 01:24:54,309
is used we don't want the amount we

1800
01:24:52,300 --> 01:24:56,739
scale it down to be based on that actual

1801
01:24:54,309 --> 01:24:58,719
size of the of the used portion of the

1802
01:24:56,738 --> 01:25:00,968
rectangle and the reason that we don't

1803
01:24:58,719 --> 01:25:03,189
want to do that is because if we were to

1804
01:25:00,969 --> 01:25:04,929
do that we would scale some things down

1805
01:25:03,189 --> 01:25:07,599
and something's not inside the same

1806
01:25:04,929 --> 01:25:09,368
sprite which would lead to weird sizing

1807
01:25:07,599 --> 01:25:12,219
artifacts so we really don't want to go

1808
01:25:09,368 --> 01:25:14,469
that way so the down sample count has to

1809
01:25:12,219 --> 01:25:16,510
be based on the general size of things

1810
01:25:14,469 --> 01:25:18,729
that's what that's doing and we save

1811
01:25:16,510 --> 01:25:21,849
that for use later we come through here

1812
01:25:18,729 --> 01:25:24,458
and say look here's how many x and y

1813
01:25:21,849 --> 01:25:27,099
tiles there can be at maximum based on

1814
01:25:24,458 --> 01:25:29,648
the tag information we were paid past in

1815
01:25:27,099 --> 01:25:31,599
we're not gonna look beyond that so then

1816
01:25:29,649 --> 01:25:34,780
here we look to make sure that the size

1817
01:25:31,599 --> 01:25:36,729
of the file itself isn't larger than the

1818
01:25:34,779 --> 01:25:39,248
maximum number of contemplated rows in

1819
01:25:36,729 --> 01:25:41,860
our system and we output areas in that

1820
01:25:39,248 --> 01:25:43,898
case we need at some point actually

1821
01:25:41,859 --> 01:25:45,488
print these errors that would be nice

1822
01:25:43,899 --> 01:25:46,570
we haven't done that yet and that's

1823
01:25:45,488 --> 01:25:48,878
something that we probably should put

1824
01:25:46,569 --> 01:25:51,878
onto it with we then loop through the

1825
01:25:48,878 --> 01:25:53,738
tiles looking for pixels in any of them

1826
01:25:51,878 --> 01:25:56,050
when we find pixels in them we sort of

1827
01:25:53,738 --> 01:26:00,339
remember the bounding box that was used

1828
01:25:56,050 --> 01:26:03,090
you can see us picking out a min/max for

1829
01:26:00,340 --> 01:26:03,090
wine x there

1830
01:26:06,868 --> 01:26:14,019
all right and what we want to do here is

1831
01:26:10,868 --> 01:26:15,609
say okay if we actually found anything

1832
01:26:14,020 --> 01:26:20,050
in which case we're gonna need at least

1833
01:26:15,609 --> 01:26:22,689
some dimension here if we found

1834
01:26:20,050 --> 01:26:24,969
something then we can proceed what we do

1835
01:26:22,689 --> 01:26:27,488
here is we first look to see whether the

1836
01:26:24,969 --> 01:26:30,578
the minimum is sufficiently outside the

1837
01:26:27,488 --> 01:26:33,279
border and if it is we expand it if it's

1838
01:26:30,578 --> 01:26:35,078
not we say hey this was a little bit too

1839
01:26:33,279 --> 01:26:37,210
big for comfort when this thing gets

1840
01:26:35,078 --> 01:26:40,359
down scaled it might not have enough of

1841
01:26:37,210 --> 01:26:43,000
a border to prevent some aliasing

1842
01:26:40,359 --> 01:26:47,948
artifacts on some anti aliasing

1843
01:26:43,000 --> 01:26:50,920
artifacts that's all we're doing here so

1844
01:26:47,948 --> 01:26:54,819
we either expand or snap to a particular

1845
01:26:50,920 --> 01:27:01,029
tile dimension now here's one thing I

1846
01:26:54,819 --> 01:27:03,939
will say these are all relative to the

1847
01:27:01,029 --> 01:27:05,828
tile important remember that as we flow

1848
01:27:03,939 --> 01:27:11,859
through here right so we're looking at

1849
01:27:05,828 --> 01:27:15,158
the min x max X min Y max Y and we're

1850
01:27:11,859 --> 01:27:17,019
processing all of those when we get down

1851
01:27:15,158 --> 01:27:18,368
to the end what we want to do is call

1852
01:27:17,020 --> 01:27:21,280
extract him and share and what that's

1853
01:27:18,368 --> 01:27:26,399
going to do is copy this out now extract

1854
01:27:21,279 --> 01:27:28,509
image is a prime candidate for a bug

1855
01:27:26,399 --> 01:27:30,789
we're gonna want to look at that closely

1856
01:27:28,510 --> 01:27:32,679
the reason I say it's a prime candidate

1857
01:27:30,789 --> 01:27:34,960
for a bug is when we look at what

1858
01:27:32,679 --> 01:27:37,510
happens in here these are happening the

1859
01:27:34,960 --> 01:27:39,489
same in both paths it doesn't mean the

1860
01:27:37,510 --> 01:27:39,969
bug isn't there the bug still could be

1861
01:27:39,488 --> 01:27:41,289
there

1862
01:27:39,969 --> 01:27:42,819
the reason the bug could still be

1863
01:27:41,289 --> 01:27:45,130
somewhere in there is because we could

1864
01:27:42,819 --> 01:27:48,578
be seeing something where if for example

1865
01:27:45,130 --> 01:27:52,719
we pass a specific type of dimension to

1866
01:27:48,578 --> 01:27:55,500
the down sampler it screws up right we

1867
01:27:52,719 --> 01:27:57,789
know we aren't passing any weird

1868
01:27:55,500 --> 01:28:00,429
dimensions to the down sampler in the

1869
01:27:57,789 --> 01:28:03,130
other case because we're only extracting

1870
01:28:00,429 --> 01:28:05,949
the amount of the image that is the

1871
01:28:03,130 --> 01:28:10,420
entire we're only ever picking out

1872
01:28:05,948 --> 01:28:11,710
entire 1024 by 1024 source art or

1873
01:28:10,420 --> 01:28:14,319
whatever it why don't matter what it was

1874
01:28:11,710 --> 01:28:16,689
2048 but whatever it was we're only

1875
01:28:14,319 --> 01:28:18,579
picking out that one size for

1876
01:28:16,689 --> 01:28:21,549
environment tiles so

1877
01:28:18,579 --> 01:28:23,649
would never see a bug if there was a bug

1878
01:28:21,550 --> 01:28:27,640
in the down sampler where say non power

1879
01:28:23,649 --> 01:28:31,179
of two sizes caused a bug on even sizes

1880
01:28:27,640 --> 01:28:32,740
cause de bug things like that so we

1881
01:28:31,180 --> 01:28:34,000
don't know that the down sampler is

1882
01:28:32,739 --> 01:28:36,670
right and we're gonna have to look at

1883
01:28:34,000 --> 01:28:38,350
that but extract image is possibly the

1884
01:28:36,670 --> 01:28:41,500
more likely candidate because we know

1885
01:28:38,350 --> 01:28:43,030
that that's completely different none

1886
01:28:41,500 --> 01:28:45,880
III don't think extracting whichever

1887
01:28:43,029 --> 01:28:47,649
happens or does well no I lied extract

1888
01:28:45,880 --> 01:28:49,569
image does happen so nope

1889
01:28:47,649 --> 01:28:50,829
take back everything I just said so it

1890
01:28:49,569 --> 01:28:54,309
has to be something with how we're

1891
01:28:50,829 --> 01:28:56,470
passing down the information then these

1892
01:28:54,310 --> 01:28:59,260
things must behave poorly on certain

1893
01:28:56,470 --> 01:29:03,010
parameters because we are calling

1894
01:28:59,260 --> 01:29:05,920
extract image in both cases okay so

1895
01:29:03,010 --> 01:29:07,900
let's go look at these two we assume the

1896
01:29:05,920 --> 01:29:09,520
bug is in one of them we don't know

1897
01:29:07,899 --> 01:29:11,769
which one it is

1898
01:29:09,520 --> 01:29:14,170
maybe it's an either but we're about to

1899
01:29:11,770 --> 01:29:16,090
find out so let's take a look at extract

1900
01:29:14,170 --> 01:29:18,250
image that's what runs first first thing

1901
01:29:16,090 --> 01:29:20,500
it does is push an image onto the

1902
01:29:18,250 --> 01:29:21,909
temporary processing stack which is just

1903
01:29:20,500 --> 01:29:24,399
scratch memory that we're using for the

1904
01:29:21,909 --> 01:29:26,139
purposes of an individual import and

1905
01:29:24,399 --> 01:29:28,479
what you can see here is it takes the

1906
01:29:26,140 --> 01:29:31,510
dimensions out here by looking at one

1907
01:29:28,479 --> 01:29:33,159
pass the x and y maximum subtracting the

1908
01:29:31,510 --> 01:29:35,350
minimums from it perfectly reasonable

1909
01:29:33,159 --> 01:29:38,019
way to get the size of the image don't

1910
01:29:35,350 --> 01:29:39,940
expect a lot of trouble over there we

1911
01:29:38,020 --> 01:29:42,070
then pull out the destination pixels

1912
01:29:39,939 --> 01:29:44,769
from whatever got allocated during the

1913
01:29:42,069 --> 01:29:47,349
push image call we get the source row by

1914
01:29:44,770 --> 01:29:50,920
looking at where we actually wanted to

1915
01:29:47,350 --> 01:29:52,840
start at the end because remember I want

1916
01:29:50,920 --> 01:29:56,619
to flip the image since they come in

1917
01:29:52,840 --> 01:30:00,420
backwards so we intentionally advance in

1918
01:29:56,619 --> 01:30:00,420
that way now looking at this

1919
01:30:06,760 --> 01:30:12,309
I also don't see any particular reason

1920
01:30:10,809 --> 01:30:14,920
why that would be causing the problem

1921
01:30:12,309 --> 01:30:16,329
that we're seeing offhand we know we're

1922
01:30:14,920 --> 01:30:19,328
gonna be writing this much stuff in

1923
01:30:16,328 --> 01:30:20,768
there because here's the result width

1924
01:30:19,328 --> 01:30:23,859
and height that our views during that

1925
01:30:20,769 --> 01:30:26,130
extraction process so it certainly seems

1926
01:30:23,859 --> 01:30:30,549
reasonable we're stepping to the last

1927
01:30:26,130 --> 01:30:33,069
row and we're using the source image

1928
01:30:30,550 --> 01:30:35,679
width as the stride which is what we

1929
01:30:33,069 --> 01:30:39,429
would use and the MINIX is pushing us

1930
01:30:35,679 --> 01:30:41,559
forward to the exposition looping over

1931
01:30:39,429 --> 01:30:43,538
the x and y we're just starting the

1932
01:30:41,559 --> 01:30:46,150
source pixels running through them on

1933
01:30:43,538 --> 01:30:49,118
each time we step backwards one whole

1934
01:30:46,149 --> 01:30:51,308
row that is what we would expect we're

1935
01:30:49,118 --> 01:30:52,929
copying up as many of them as there are

1936
01:30:51,309 --> 01:30:56,860
here so death pixels should line up

1937
01:30:52,929 --> 01:31:00,340
properly each time again really not

1938
01:30:56,859 --> 01:31:03,578
seeing a lot of explanation about why

1939
01:31:00,340 --> 01:31:04,960
something to be wrong there now one

1940
01:31:03,578 --> 01:31:06,460
thing I would say is do we check make

1941
01:31:04,960 --> 01:31:09,368
sure we're actually passing the image

1942
01:31:06,460 --> 01:31:11,828
that we prepped so for example here

1943
01:31:09,368 --> 01:31:13,238
we've got a tile image or we make sure

1944
01:31:11,828 --> 01:31:16,389
passing it we are passing it to down

1945
01:31:13,238 --> 01:31:18,759
sample we then take the dest image here

1946
01:31:16,389 --> 01:31:20,559
and pass that again that's what we want

1947
01:31:18,760 --> 01:31:22,090
to see happening I just want to make

1948
01:31:20,559 --> 01:31:26,590
sure we weren't then turning around and

1949
01:31:22,090 --> 01:31:28,210
like passing the wrong thing in so we're

1950
01:31:26,590 --> 01:31:29,529
gonna be calling down sample we can see

1951
01:31:28,210 --> 01:31:32,139
if there's any obvious bugs and down

1952
01:31:29,529 --> 01:31:33,939
sample here let's take a look here's the

1953
01:31:32,139 --> 01:31:35,380
down sample call the down sample call

1954
01:31:33,939 --> 01:31:39,759
takes the image to this web you down

1955
01:31:35,380 --> 01:31:49,859
sampling and it returns as far as I can

1956
01:31:39,760 --> 01:31:49,860
tell this we no longer do

1957
01:31:51,460 --> 01:31:59,210
as far as I can tell it's doing the

1958
01:31:54,489 --> 01:32:01,309
downsample in place so it's it's ruining

1959
01:31:59,210 --> 01:32:04,670
whatever the input image that you give

1960
01:32:01,310 --> 01:32:06,080
it is that should be fine but we would

1961
01:32:04,670 --> 01:32:08,119
kind of have to think about is there any

1962
01:32:06,079 --> 01:32:10,279
reason why that wouldn't be in this case

1963
01:32:08,119 --> 01:32:12,409
I don't think so because it's the tile

1964
01:32:10,279 --> 01:32:14,929
image that got passed in so it should

1965
01:32:12,409 --> 01:32:16,550
just be able to ruin it because it's not

1966
01:32:14,930 --> 01:32:18,409
getting used for anything else I don't

1967
01:32:16,550 --> 01:32:21,529
think anyway why there would be a reason

1968
01:32:18,409 --> 01:32:23,239
for that so let's take a look at what's

1969
01:32:21,529 --> 01:32:27,889
going on here we come into the down

1970
01:32:23,239 --> 01:32:29,659
sampler Jimmy and each one of these runs

1971
01:32:27,890 --> 01:32:31,310
is going to do one step of the down

1972
01:32:29,659 --> 01:32:36,170
sampling the first thing we do is we

1973
01:32:31,310 --> 01:32:38,510
snap however much the dimensions of the

1974
01:32:36,170 --> 01:32:41,329
image were originally we go ahead and

1975
01:32:38,510 --> 01:32:44,930
have both of those so we're going to cut

1976
01:32:41,329 --> 01:32:54,979
them down in half we then go through and

1977
01:32:44,930 --> 01:32:57,829
do our down sample here by two and let's

1978
01:32:54,979 --> 01:32:59,479
see how we do that we have the

1979
01:32:57,829 --> 01:33:02,269
destination pixel source pixel zero

1980
01:32:59,479 --> 01:33:04,009
source pixel one we advance by whatever

1981
01:33:02,270 --> 01:33:05,510
the width was to get to the next row and

1982
01:33:04,010 --> 01:33:09,260
otherwise we're just going to be doing

1983
01:33:05,510 --> 01:33:11,960
down sampling directly and exactly how

1984
01:33:09,260 --> 01:33:14,869
you would expect it to do and I don't

1985
01:33:11,960 --> 01:33:18,800
see a lot there we're writing into the

1986
01:33:14,869 --> 01:33:21,050
same place as we're reading so that's a

1987
01:33:18,800 --> 01:33:22,760
little something to watch out for but in

1988
01:33:21,050 --> 01:33:24,199
this particular case there isn't a lot

1989
01:33:22,760 --> 01:33:27,440
of reason why that would cause a problem

1990
01:33:24,199 --> 01:33:28,789
because we're always reading first and

1991
01:33:27,439 --> 01:33:30,319
then writing and we're writing a smaller

1992
01:33:28,789 --> 01:33:31,699
thing than we're reading so we shouldn't

1993
01:33:30,319 --> 01:33:35,210
be having a lot of problems with that

1994
01:33:31,699 --> 01:33:37,340
that I can think of anyway but we'll

1995
01:33:35,210 --> 01:33:39,140
have to be on the lookout for it so the

1996
01:33:37,340 --> 01:33:40,640
first thing we do is we lift up pixels

1997
01:33:39,140 --> 01:33:42,829
from both of our source and destination

1998
01:33:40,640 --> 01:33:45,050
we read two pixels at a time from both

1999
01:33:42,829 --> 01:33:46,970
the current row and the next row and we

2000
01:33:45,050 --> 01:33:51,110
record those we then convert them to

2001
01:33:46,970 --> 01:33:52,909
color information we can actually use

2002
01:33:51,109 --> 01:33:57,859
it's because you just unpack and then

2003
01:33:52,909 --> 01:34:00,439
linearize right we blend weari srgb them

2004
01:33:57,859 --> 01:34:03,579
into a single piece of information there

2005
01:34:00,439 --> 01:34:04,779
we can pack down well we pack down

2006
01:34:03,579 --> 01:34:08,199
and we write on a single destination

2007
01:34:04,779 --> 01:34:09,550
pixel for each of those what that means

2008
01:34:08,199 --> 01:34:13,590
is we're going to write out with worth

2009
01:34:09,550 --> 01:34:15,640
of those which is what we would expect

2010
01:34:13,590 --> 01:34:28,510
because we go ahead and write the result

2011
01:34:15,640 --> 01:34:30,490
width and height at the end of that so

2012
01:34:28,510 --> 01:34:32,949
what I will say is this looks completely

2013
01:34:30,489 --> 01:34:39,219
broken to me

2014
01:34:32,949 --> 01:34:42,909
I don't even slightly understand how

2015
01:34:39,220 --> 01:34:46,720
this was working because if you look at

2016
01:34:42,909 --> 01:34:49,779
what's going on here source pixel should

2017
01:34:46,720 --> 01:34:52,990
really be source row because adding the

2018
01:34:49,779 --> 01:34:56,399
width is going to skip a line but this

2019
01:34:52,989 --> 01:34:56,399
already read a whole line

2020
01:35:04,408 --> 01:35:09,339
so it assumes yes oh so really this

2021
01:35:07,448 --> 01:35:11,198
needs to be and I can see we were being

2022
01:35:09,340 --> 01:35:16,029
clever we were being way too clever

2023
01:35:11,198 --> 01:35:18,419
there we were assuming that we would

2024
01:35:16,029 --> 01:35:21,939
always read the whole line but we won't

2025
01:35:18,420 --> 01:35:26,440
because if this number is odd then we

2026
01:35:21,939 --> 01:35:28,059
will have missed one pixel right so

2027
01:35:26,439 --> 01:35:31,089
that's almost certainly where our bug is

2028
01:35:28,060 --> 01:35:31,659
coming from just sloppy I shouldn't have

2029
01:35:31,090 --> 01:35:34,810
done that

2030
01:35:31,658 --> 01:35:39,429
so what we really want to do here is

2031
01:35:34,810 --> 01:35:43,170
this we want to call this source row and

2032
01:35:39,429 --> 01:35:47,140
we want to call this source row like so

2033
01:35:43,170 --> 01:35:49,060
right and what we can do because we only

2034
01:35:47,140 --> 01:35:51,010
really need one source row pointer

2035
01:35:49,060 --> 01:35:54,640
because we can probably just do this

2036
01:35:51,010 --> 01:35:56,650
because that will be accurate and that

2037
01:35:54,640 --> 01:35:59,679
way we know we can get to pixel pointers

2038
01:35:56,649 --> 01:36:01,299
out of one base pointer but basically

2039
01:35:59,679 --> 01:36:03,819
what I'm saying here is let's take the

2040
01:36:01,300 --> 01:36:05,650
road that way where we're starting off

2041
01:36:03,819 --> 01:36:07,389
at the top and then when we go here what

2042
01:36:05,649 --> 01:36:10,359
we want to do is advance by two rows

2043
01:36:07,390 --> 01:36:12,219
every time so we want to go ahead and do

2044
01:36:10,359 --> 01:36:14,948
that and that will be correct every time

2045
01:36:12,219 --> 01:36:16,569
even when this fails to read an entire

2046
01:36:14,948 --> 01:36:18,579
row which will be whenever this is odd

2047
01:36:16,569 --> 01:36:21,698
so that was almost certainly what was

2048
01:36:18,579 --> 01:36:24,729
happening there and so hopefully I've

2049
01:36:21,698 --> 01:36:27,939
corrected that now don't forget to Like

2050
01:36:24,729 --> 01:36:30,009
and subscribe so let's go ahead and and

2051
01:36:27,939 --> 01:36:30,460
try running a report and this will

2052
01:36:30,010 --> 01:36:32,619
reinforce

2053
01:36:30,460 --> 01:36:35,198
is good because we can see whether we

2054
01:36:32,619 --> 01:36:37,960
broke the other case as well remember we

2055
01:36:35,198 --> 01:36:39,428
have two cases like our saying we've got

2056
01:36:37,960 --> 01:36:41,890
the case where we're importing something

2057
01:36:39,429 --> 01:36:43,420
that's an entire PNG that just gets

2058
01:36:41,890 --> 01:36:45,070
shoved into a texture after down

2059
01:36:43,420 --> 01:36:48,190
sampling we had the other case we've got

2060
01:36:45,069 --> 01:36:50,049
tiles those tiles are extracted that's

2061
01:36:48,189 --> 01:36:51,488
just to provide the artist with a little

2062
01:36:50,050 --> 01:36:53,920
bit of an easier export path so you

2063
01:36:51,488 --> 01:36:57,309
don't have to do as much funny business

2064
01:36:53,920 --> 01:36:58,539
there so now we're running me a spry 3 X

2065
01:36:57,310 --> 01:37:00,760
4 would be very slow because we're in

2066
01:36:58,539 --> 01:37:02,439
debug mode and debug mode is very slow a

2067
01:37:00,760 --> 01:37:04,840
lot of our stuff doesn't seem to get

2068
01:37:02,439 --> 01:37:07,689
optimized properly in debug like doesn't

2069
01:37:04,840 --> 01:37:08,920
seem to be Co gen very efficiently so I

2070
01:37:07,689 --> 01:37:10,719
probably should have switched to debug

2071
01:37:08,920 --> 01:37:12,429
to release mode to run it but hey it's

2072
01:37:10,719 --> 01:37:13,569
not that big of a deal so this is going

2073
01:37:12,429 --> 01:37:15,969
through right now and doing it and you

2074
01:37:13,569 --> 01:37:18,000
can kind of see it hopefully here you

2075
01:37:15,969 --> 01:37:21,239
can see us chewing through these file

2076
01:37:18,000 --> 01:37:22,560
here bouncing around on the CPU as we

2077
01:37:21,239 --> 01:37:25,159
load and go

2078
01:37:22,560 --> 01:37:29,550
of course there we go and now we're back

2079
01:37:25,159 --> 01:37:30,960
so looking at what we've created here oh

2080
01:37:29,550 --> 01:37:37,320
my goodness

2081
01:37:30,960 --> 01:37:41,520
okay well we fixed the striding bug I

2082
01:37:37,319 --> 01:37:44,699
can tell you that it's a little bit of a

2083
01:37:41,520 --> 01:37:49,260
large cat if we're honest a little bit

2084
01:37:44,699 --> 01:37:54,179
maybe um bigger than I was expecting

2085
01:37:49,260 --> 01:38:00,420
huh that's fine

2086
01:37:54,180 --> 01:38:04,909
all right so let's go ahead and see

2087
01:38:00,420 --> 01:38:07,920
about the rest of it so here's the cat

2088
01:38:04,909 --> 01:38:11,729
it's now the correct everything except

2089
01:38:07,920 --> 01:38:15,000
for size I think and so I think we've we

2090
01:38:11,729 --> 01:38:18,719
fixed that problem and so we can now

2091
01:38:15,000 --> 01:38:22,289
have arbitrary cats in the game as we

2092
01:38:18,720 --> 01:38:24,780
wish but we will have a couple issues

2093
01:38:22,289 --> 01:38:27,029
that we have to address so as you can

2094
01:38:24,779 --> 01:38:30,329
already see the cat is not lined up

2095
01:38:27,029 --> 01:38:34,229
properly although we can switch the

2096
01:38:30,329 --> 01:38:36,359
cat's direction just fine but the cat is

2097
01:38:34,229 --> 01:38:39,149
not lined up directory and lined up

2098
01:38:36,359 --> 01:38:41,609
correctly specifically because we don't

2099
01:38:39,149 --> 01:38:45,439
actually have any Hotpoint specified so

2100
01:38:41,609 --> 01:38:49,619
it's just centered around the middle of

2101
01:38:45,439 --> 01:38:51,479
wherever the the point was that you said

2102
01:38:49,619 --> 01:38:52,920
you wanted things placed which means

2103
01:38:51,479 --> 01:38:54,269
that the code that we've got in there

2104
01:38:52,920 --> 01:38:56,190
right now to deal with the hero's

2105
01:38:54,270 --> 01:38:58,710
placement which was all just kind of add

2106
01:38:56,189 --> 01:39:02,639
a hawk for whatever the random sprite

2107
01:38:58,710 --> 01:39:06,600
hero was that stuff now needs to get

2108
01:39:02,640 --> 01:39:09,600
fixed right we need to have a way of

2109
01:39:06,600 --> 01:39:10,560
specifying those alignments and that's

2110
01:39:09,600 --> 01:39:13,170
probably what we want to do tomorrow

2111
01:39:10,560 --> 01:39:16,530
right but for the moment it's pretty

2112
01:39:13,170 --> 01:39:18,149
easy for us to switch which cat we are

2113
01:39:16,529 --> 01:39:21,509
for example like we're the Birman right

2114
01:39:18,149 --> 01:39:23,969
now maybe we don't want to be the Birman

2115
01:39:21,510 --> 01:39:27,239
anymore for example and so since that's

2116
01:39:23,970 --> 01:39:28,770
the hero in this particular case what we

2117
01:39:27,239 --> 01:39:31,139
can do well you know what why even

2118
01:39:28,770 --> 01:39:31,560
bother why not just strew some cats

2119
01:39:31,140 --> 01:39:33,780
around

2120
01:39:31,560 --> 01:39:35,280
Orphanage we can put each of the cats

2121
01:39:33,779 --> 01:39:38,219
around the orphanage if we want to it's

2122
01:39:35,279 --> 01:39:39,630
pretty easy for us to do actually so

2123
01:39:38,220 --> 01:39:41,550
maybe you want to play some cats in the

2124
01:39:39,630 --> 01:39:43,199
orphanage again haven't really worked on

2125
01:39:41,550 --> 01:39:45,210
that part of the code much the placement

2126
01:39:43,199 --> 01:39:47,189
code but we can hack something in just

2127
01:39:45,210 --> 01:39:50,420
to place some cats just because we want

2128
01:39:47,189 --> 01:39:52,199
to that's actually pretty easy to do

2129
01:39:50,420 --> 01:39:54,480
well you know what we'll do it tomorrow

2130
01:39:52,199 --> 01:39:56,550
if it's we're at the QA no sense

2131
01:39:54,479 --> 01:39:57,929
belaboring it so I think we're good it

2132
01:39:56,550 --> 01:40:00,570
seems like everything worked just fine

2133
01:39:57,930 --> 01:40:01,680
and we fixed the one bug that we had so

2134
01:40:00,569 --> 01:40:04,859
we're in good shape tomorrow to be on

2135
01:40:01,680 --> 01:40:05,820
the place characters around and I think

2136
01:40:04,859 --> 01:40:08,189
what we're gonna want to do tomorrow

2137
01:40:05,819 --> 01:40:09,599
then is just place some cats around to

2138
01:40:08,189 --> 01:40:11,129
make sure that we can set their tags

2139
01:40:09,600 --> 01:40:13,260
properly we could put Krampus in there

2140
01:40:11,130 --> 01:40:15,000
to just put those characters around and

2141
01:40:13,260 --> 01:40:17,130
they're all going to be disjoint and

2142
01:40:15,000 --> 01:40:19,470
discombobulated so that'll give us a

2143
01:40:17,130 --> 01:40:22,109
good motivation to make a little way

2144
01:40:19,470 --> 01:40:25,860
inside the game that we can update the

2145
01:40:22,109 --> 01:40:29,179
HHA to just reflect the hot spot of the

2146
01:40:25,859 --> 01:40:29,179
individual characters right

2147
01:40:54,189 --> 01:40:58,150
so tariffs oh I don't really understand

2148
01:40:56,559 --> 01:40:59,529
the size bug don't you ask for a

2149
01:40:58,149 --> 01:41:05,529
specific science when you push the hero

2150
01:40:59,529 --> 01:41:07,238
sprites yes so here's some stuff that's

2151
01:41:05,529 --> 01:41:09,069
just been in the game for a long time

2152
01:41:07,238 --> 01:41:11,319
because you know we just been making

2153
01:41:09,069 --> 01:41:12,908
engine stuff and our goal was not really

2154
01:41:11,319 --> 01:41:17,408
looking at art assets but we've switched

2155
01:41:12,908 --> 01:41:22,569
now so we have to think about them the

2156
01:41:17,408 --> 01:41:25,089
hero sprites that were imported

2157
01:41:22,569 --> 01:41:27,609
originally we didn't even write any

2158
01:41:25,090 --> 01:41:30,788
import code to actually clean up the

2159
01:41:27,609 --> 01:41:33,848
boundaries on them so what happened was

2160
01:41:30,788 --> 01:41:36,788
the hero sprites were giant blank like

2161
01:41:33,849 --> 01:41:39,099
huge empty space and then a little

2162
01:41:36,788 --> 01:41:42,328
sprite in the middle of it so actually

2163
01:41:39,099 --> 01:41:45,279
we've been drawing huge blank

2164
01:41:42,328 --> 01:41:47,488
transparent nothing with a little sprite

2165
01:41:45,279 --> 01:41:51,279
in the middle of it for the hero right

2166
01:41:47,488 --> 01:41:52,868
now our import path properly looks for

2167
01:41:51,279 --> 01:41:55,719
you know for all the new stuff we've

2168
01:41:52,868 --> 01:41:57,219
done it's like a real you know real in

2169
01:41:55,719 --> 01:41:58,840
quotes obviously it's still pretty

2170
01:41:57,219 --> 01:42:00,760
simplistic because it's just to the

2171
01:41:58,840 --> 01:42:02,679
importing but it does a lot of stuff now

2172
01:42:00,760 --> 01:42:04,418
right it looks through packed our assets

2173
01:42:02,679 --> 01:42:06,788
it picks out the rectangle that's

2174
01:42:04,418 --> 01:42:09,668
actually being used it down samples it

2175
01:42:06,788 --> 01:42:13,899
doesn't stuff as a result the actual

2176
01:42:09,668 --> 01:42:17,319
region of the sprite is now just the

2177
01:42:13,899 --> 01:42:20,049
just filled with stuff so the big empty

2178
01:42:17,319 --> 01:42:22,840
size right that we were drawing for is

2179
01:42:20,050 --> 01:42:24,820
now filled entirely with cat so the cat

2180
01:42:22,840 --> 01:42:26,349
is like twice as large as the hero

2181
01:42:24,819 --> 01:42:28,808
because this doesn't have any blank

2182
01:42:26,349 --> 01:42:31,989
border units right like it used to right

2183
01:42:28,809 --> 01:42:33,519
so that's where that's coming from but

2184
01:42:31,988 --> 01:42:35,228
that's good because now it means when we

2185
01:42:33,519 --> 01:42:36,969
specify a size that the actual size

2186
01:42:35,229 --> 01:42:38,949
we'll get we don't have to make big

2187
01:42:36,969 --> 01:42:43,078
empty sprites to account for the fact

2188
01:42:38,948 --> 01:42:43,078
that most of its empty space right

2189
01:42:46,210 --> 01:42:49,719
I'm having trouble understanding the

2190
01:42:48,189 --> 01:42:52,449
difference between a tag and a basic

2191
01:42:49,719 --> 01:42:54,909
type so there is no difference between

2192
01:42:52,449 --> 01:42:56,829
any of them they were kind of an

2193
01:42:54,909 --> 01:42:59,439
arbitrary thing that we decided and how

2194
01:42:56,829 --> 01:43:01,329
we wanted to do stuff there is no such

2195
01:42:59,439 --> 01:43:04,149
thing as a basic type it's just another

2196
01:43:01,329 --> 01:43:06,729
tag the only reason that we decided to

2197
01:43:04,149 --> 01:43:08,738
make it special was because we wanted to

2198
01:43:06,729 --> 01:43:11,439
have one thing that was sort of

2199
01:43:08,738 --> 01:43:14,889
immutable meaning it can't be Fuzzle II

2200
01:43:11,439 --> 01:43:17,109
picked so for example if you want a body

2201
01:43:14,890 --> 01:43:18,969
it has to be a body spray if you want a

2202
01:43:17,109 --> 01:43:21,339
head it has to be a head sprite we

2203
01:43:18,969 --> 01:43:25,359
decided to treat that tag specially and

2204
01:43:21,340 --> 01:43:28,119
never allow cross selection whereas all

2205
01:43:25,359 --> 01:43:30,779
the other tags can be cross selected so

2206
01:43:28,119 --> 01:43:36,099
if for example you say you want a floor

2207
01:43:30,779 --> 01:43:39,039
right you might get any kind of floor

2208
01:43:36,100 --> 01:43:41,020
right or sorry a block or something

2209
01:43:39,039 --> 01:43:42,909
right you might get any kind of block

2210
01:43:41,020 --> 01:43:45,130
like grass or stone or whatever can be

2211
01:43:42,909 --> 01:43:47,469
matched across but you'll always get a

2212
01:43:45,130 --> 01:43:49,270
block you won't get like a heads right

2213
01:43:47,469 --> 01:43:51,850
instead of a block because it's tags

2214
01:43:49,270 --> 01:43:54,160
matched better right so it's just a way

2215
01:43:51,850 --> 01:43:59,500
of simplifying how we were designed to

2216
01:43:54,159 --> 01:44:00,639
structure those things Felix just wanted

2217
01:43:59,500 --> 01:44:02,199
to thank you for the link to pseudo

2218
01:44:00,640 --> 01:44:04,719
band-limited pixel art filter it was

2219
01:44:02,199 --> 01:44:06,189
Eckley I needed excellent someone

2220
01:44:04,719 --> 01:44:07,600
emailed me separately and was asking so

2221
01:44:06,189 --> 01:44:09,789
I mean I was like here's what I want to

2222
01:44:07,600 --> 01:44:10,329
read and I guess that worked for them so

2223
01:44:09,789 --> 01:44:13,269
that was great

2224
01:44:10,329 --> 01:44:15,340
Pope user when a issue in OpenGL DirectX

2225
01:44:13,270 --> 01:44:17,260
call creating for example that takes a

2226
01:44:15,340 --> 01:44:18,760
while to complete will the CPU be busy

2227
01:44:17,260 --> 01:44:20,170
while the GPU makes it happen or will

2228
01:44:18,760 --> 01:44:25,780
the thread be suspended so that Windows

2229
01:44:20,170 --> 01:44:27,579
can schedule something else so it's

2230
01:44:25,779 --> 01:44:28,840
impossible to really know what's going

2231
01:44:27,579 --> 01:44:32,469
on there without looking into it

2232
01:44:28,840 --> 01:44:37,360
specifically usually OpenGL and DirectX

2233
01:44:32,469 --> 01:44:39,969
calls don't block based on the GPU they

2234
01:44:37,359 --> 01:44:43,509
usually block based on the CPU but not

2235
01:44:39,969 --> 01:44:46,239
always so most of the time if a OpenGL

2236
01:44:43,510 --> 01:44:50,140
DirectX call is taking some time it's

2237
01:44:46,238 --> 01:44:51,849
actually the CPU doing something for

2238
01:44:50,140 --> 01:44:53,289
example when creating a vertex buffer it

2239
01:44:51,850 --> 01:44:55,060
may be playing with like where how it's

2240
01:44:53,289 --> 01:44:56,920
mapping memory and deciding where you

2241
01:44:55,060 --> 01:44:59,409
should put that particular vertex buffer

2242
01:44:56,920 --> 01:45:01,179
and things like this so

2243
01:44:59,408 --> 01:45:03,158
usually you're not waiting around on the

2244
01:45:01,179 --> 01:45:04,958
GPU usually waiting on the GPU requires

2245
01:45:03,158 --> 01:45:06,668
you to actually ask to wait for it such

2246
01:45:04,958 --> 01:45:09,578
as calling swap buffers which may wait

2247
01:45:06,668 --> 01:45:10,988
if you're too many frames ahead or some

2248
01:45:09,578 --> 01:45:12,279
kind of a sync call like if you're

2249
01:45:10,988 --> 01:45:14,799
waiting on a fence or something like

2250
01:45:12,279 --> 01:45:17,590
that so usually they try not to wait but

2251
01:45:14,800 --> 01:45:20,019
sometimes they do when you do have to

2252
01:45:17,590 --> 01:45:22,929
wait yes usually your thread would have

2253
01:45:20,019 --> 01:45:24,489
been suspended if the drivers support

2254
01:45:22,929 --> 01:45:27,399
that sort of thing as far as I know I

2255
01:45:24,488 --> 01:45:28,658
don't think you will spin lock but again

2256
01:45:27,399 --> 01:45:31,538
that kind of depends a little bit on the

2257
01:45:28,658 --> 01:45:32,738
driver I don't really know in all cases

2258
01:45:31,538 --> 01:45:34,478
whether you can be scheduled for

2259
01:45:32,738 --> 01:45:36,218
something else or not that's probably a

2260
01:45:34,479 --> 01:45:41,559
little bit drivers specific and

2261
01:45:36,219 --> 01:45:42,609
implementation specific but the first

2262
01:45:41,559 --> 01:45:43,689
day correctly says the sprites are

2263
01:45:42,609 --> 01:45:44,889
clamped depending on the space that's

2264
01:45:43,689 --> 01:45:46,300
actually occupied doesn't that mean

2265
01:45:44,889 --> 01:45:47,889
you'll need to adapt the sprite

2266
01:45:46,300 --> 01:45:53,918
dimensions to the sprite that is being

2267
01:45:47,889 --> 01:45:55,300
drawn not really well I guess I'm not

2268
01:45:53,918 --> 01:45:57,399
sure I understand the question I'm sorry

2269
01:45:55,300 --> 01:45:58,900
can you be more specific about what

2270
01:45:57,399 --> 01:46:02,518
you're actually asking about I can try

2271
01:45:58,899 --> 01:46:11,828
to answer that can you pet the cats

2272
01:46:02,519 --> 01:46:13,389
possibly cereal PBM why not make the HHA

2273
01:46:11,828 --> 01:46:17,738
file generator also load the files and

2274
01:46:13,389 --> 01:46:19,389
generate the tags I so I do think I

2275
01:46:17,738 --> 01:46:20,918
would probably add that I probably

2276
01:46:19,389 --> 01:46:22,418
compound to both but I want it compiled

2277
01:46:20,918 --> 01:46:23,859
in the game as well and that's just so

2278
01:46:22,418 --> 01:46:26,050
the artist can do something like hit f5

2279
01:46:23,859 --> 01:46:30,038
and reload art assets so I want it in

2280
01:46:26,050 --> 01:46:31,570
the game as well but I would also like

2281
01:46:30,038 --> 01:46:32,800
what you're saying I would like the HSA

2282
01:46:31,569 --> 01:46:35,498
to compile that in as well at some point

2283
01:46:32,800 --> 01:46:39,788
it's not a high priority right now but I

2284
01:46:35,498 --> 01:46:42,279
would like that OpenGL or Vulcan for a

2285
01:46:39,788 --> 01:46:44,139
complete beginner OpenGL Volken it has

2286
01:46:42,279 --> 01:46:48,300
no reason to exist I just skipped Vulcan

2287
01:46:44,139 --> 01:46:52,319
entirely learn OpenGL direct3d or metal

2288
01:46:48,300 --> 01:46:54,369
but never never Vulcan Vulcan is useless

2289
01:46:52,319 --> 01:46:56,078
what would it look like if you activated

2290
01:46:54,368 --> 01:46:58,089
the snake code now and make them cats

2291
01:46:56,078 --> 01:46:59,708
just seeing cats walk around randomly in

2292
01:46:58,090 --> 01:47:01,599
the rooms will be so cool just adding

2293
01:46:59,708 --> 01:47:04,029
random stop and lick your paw calls and

2294
01:47:01,599 --> 01:47:06,189
you basically have created life or I

2295
01:47:04,029 --> 01:47:07,958
should just deal with halfway from okay

2296
01:47:06,189 --> 01:47:09,668
I just wait for having to wait for mark

2297
01:47:07,958 --> 01:47:12,059
cuz the snake code isn't even still in

2298
01:47:09,668 --> 01:47:12,059
there really

2299
01:47:12,920 --> 01:47:23,949
I mean not the snake behavior is but I

2300
01:47:20,029 --> 01:47:23,949
mean the like placement code isn't

2301
01:47:24,579 --> 01:47:28,519
advice on logging events or dumping in

2302
01:47:27,170 --> 01:47:29,869
case of games crash in a customer's

2303
01:47:28,520 --> 01:47:30,770
machine I guess questions how to prepare

2304
01:47:29,869 --> 01:47:34,399
for Alden customers who had the game

2305
01:47:30,770 --> 01:47:39,080
crashed I okay so I thought that steam

2306
01:47:34,399 --> 01:47:40,789
would do that for you but I then also

2307
01:47:39,079 --> 01:47:43,430
think that there was some weirdness like

2308
01:47:40,789 --> 01:47:53,840
they didn't update it for 64-bit or

2309
01:47:43,430 --> 01:47:55,520
something so now I'm not sure my answer

2310
01:47:53,840 --> 01:48:05,569
should be steam will do that for you but

2311
01:47:55,520 --> 01:48:07,520
I don't actually know if it does the

2312
01:48:05,569 --> 01:48:09,349
tifinagh says I mean if the idle sprite

2313
01:48:07,520 --> 01:48:10,940
body sprite will be smaller in pixels

2314
01:48:09,350 --> 01:48:12,289
than the dodge left for example so if

2315
01:48:10,939 --> 01:48:13,369
the sprite dimensions you send to the

2316
01:48:12,289 --> 01:48:17,960
graphics cards are the same

2317
01:48:13,369 --> 01:48:23,779
will the dodge less right be squashed so

2318
01:48:17,960 --> 01:48:25,609
yes and no the thing that makes that not

2319
01:48:23,779 --> 01:48:32,619
happen or rather that will allow us to

2320
01:48:25,609 --> 01:48:41,299
make that not happen is that in the

2321
01:48:32,619 --> 01:48:44,989
texture itself we actually store the

2322
01:48:41,300 --> 01:48:47,420
width and height in pixels remember

2323
01:48:44,989 --> 01:48:48,729
where the texture definition is there it

2324
01:48:47,420 --> 01:48:51,980
is

2325
01:48:48,729 --> 01:48:55,699
so when we go to render it we actually

2326
01:48:51,979 --> 01:48:59,599
can adjust for how many pixels it was

2327
01:48:55,699 --> 01:49:04,039
and that will allow us to prevent that

2328
01:48:59,600 --> 01:49:05,539
problem right so you're not wrong we do

2329
01:49:04,039 --> 01:49:10,100
need to make sure we handle it properly

2330
01:49:05,539 --> 01:49:12,970
but I believe we will be able to we'll

2331
01:49:10,100 --> 01:49:12,970
see we get there

2332
01:49:15,010 --> 01:49:19,070
let's see what's wrong with Vulcan

2333
01:49:16,760 --> 01:49:22,310
search the archives I think I've ranted

2334
01:49:19,069 --> 01:49:24,380
about it on the stream before Thank You

2335
01:49:22,310 --> 01:49:25,940
KC for giving both the buggers a try

2336
01:49:24,380 --> 01:49:27,949
even though it failed really bath time

2337
01:49:25,939 --> 01:49:31,419
I'll give it best through sport I don't

2338
01:49:27,948 --> 01:49:35,089
know about the vs as a standard thing

2339
01:49:31,420 --> 01:49:37,010
yeah so basically I guess what I would

2340
01:49:35,090 --> 01:49:41,329
say is it should come with visual studio

2341
01:49:37,010 --> 01:49:42,500
key bindings by default as an option you

2342
01:49:41,329 --> 01:49:46,158
can be able to select that because it's

2343
01:49:42,500 --> 01:49:48,140
pretty easy to provide that feature and

2344
01:49:46,158 --> 01:49:49,639
then it just needs to yeah like it's it

2345
01:49:48,140 --> 01:49:52,070
seems a bit crashing right now so it

2346
01:49:49,640 --> 01:49:53,840
needs to like be cleaned up and reliable

2347
01:49:52,069 --> 01:49:55,609
your debugger can't crash right you need

2348
01:49:53,840 --> 01:49:58,550
to not have even Visual Studio managed

2349
01:49:55,609 --> 01:50:01,009
to not crash most of time it needs to be

2350
01:49:58,550 --> 01:50:02,690
reliable right so but failing fixing

2351
01:50:01,010 --> 01:50:05,480
those two things and I would love to

2352
01:50:02,689 --> 01:50:06,589
give it another shot how do you approach

2353
01:50:05,479 --> 01:50:08,658
a bitmap that needs to be generated

2354
01:50:06,590 --> 01:50:10,190
frequently on the fly would you add it

2355
01:50:08,658 --> 01:50:11,420
to your asset system and reference it

2356
01:50:10,189 --> 01:50:14,389
through your asset system or would you

2357
01:50:11,420 --> 01:50:15,980
skip the asset system in that case well

2358
01:50:14,390 --> 01:50:18,350
if it's generated then you don't really

2359
01:50:15,979 --> 01:50:20,599
need it to be in in the asset system

2360
01:50:18,350 --> 01:50:22,130
probably although it probably still

2361
01:50:20,600 --> 01:50:23,659
wants to go through at least some layer

2362
01:50:22,130 --> 01:50:25,880
of the asset system to make sure that it

2363
01:50:23,658 --> 01:50:31,009
knows that it's occupying a texture slot

2364
01:50:25,880 --> 01:50:32,000
right I don't know I mean one way to

2365
01:50:31,010 --> 01:50:34,100
answer that question would be our

2366
01:50:32,000 --> 01:50:37,929
lighting fits that description and it's

2367
01:50:34,100 --> 01:50:37,929
got its own special path right so

2368
01:50:38,079 --> 01:50:41,569
between directx and opengl which one

2369
01:50:40,729 --> 01:50:47,839
would you recommend for a beginner

2370
01:50:41,569 --> 01:50:49,099
probably direct3d 11 super off topic can

2371
01:50:47,840 --> 01:50:51,079
you offer me an exhibition as to why

2372
01:50:49,100 --> 01:50:53,120
there have never been ps2 based PC

2373
01:50:51,079 --> 01:51:00,109
controllers since it's the specific

2374
01:50:53,119 --> 01:51:04,219
input port that sends CPU interrupts I

2375
01:51:00,109 --> 01:51:09,559
don't understand what you mean like the

2376
01:51:04,219 --> 01:51:11,359
plug isn't even compatible but oh oh do

2377
01:51:09,560 --> 01:51:18,260
you not talking about PlayStation 2

2378
01:51:11,359 --> 01:51:20,238
you're talking about the actual ps2 plug

2379
01:51:18,260 --> 01:51:22,750
on the back of some motherboards from

2380
01:51:20,238 --> 01:51:25,759
the old days like for keyboards and mice

2381
01:51:22,750 --> 01:51:28,719
an explanation as to why they've never

2382
01:51:25,760 --> 01:51:32,498
been ps2 based PC controllers for

2383
01:51:28,719 --> 01:51:35,019
those ports I don't know enough about

2384
01:51:32,498 --> 01:51:37,738
the ports but my suspicion is that they

2385
01:51:35,019 --> 01:51:45,369
don't get pulled frequently enough I

2386
01:51:37,738 --> 01:51:47,828
don't know I don't know there are ps2

2387
01:51:45,368 --> 01:51:50,469
based keyboard controller things aren't

2388
01:51:47,828 --> 01:51:55,630
there that are pulled frequently in some

2389
01:51:50,469 --> 01:51:57,158
special motherboard way I thought so I

2390
01:51:55,630 --> 01:51:58,659
don't know I don't know the answer to

2391
01:51:57,158 --> 01:51:59,859
your question it's an interesting idea I

2392
01:51:58,658 --> 01:52:02,288
just don't know how many motherboards

2393
01:51:59,859 --> 01:52:07,569
support it but support high enough

2394
01:52:02,288 --> 01:52:08,948
frequency polling of those how long is

2395
01:52:07,569 --> 01:52:12,759
the vada episode usually take come

2396
01:52:08,948 --> 01:52:15,009
online about a day I upload them pretty

2397
01:52:12,760 --> 01:52:16,630
soon usually after and then you know

2398
01:52:15,010 --> 01:52:18,219
YouTube posts them several hours later

2399
01:52:16,630 --> 01:52:22,828
after the like frostings finished or

2400
01:52:18,219 --> 01:52:22,828
whatever so

2401
01:52:25,878 --> 01:52:48,519
yeah all right looks like the end of the

2402
01:52:46,639 --> 01:52:56,569
questions

2403
01:52:48,519 --> 01:52:57,590
so I think we're good one more will

2404
01:52:56,569 --> 01:52:59,538
close on how do you like the progress of

2405
01:52:57,590 --> 01:53:00,769
human here so far um it's pretty good

2406
01:52:59,538 --> 01:53:02,719
you know I mean for something where I

2407
01:53:00,769 --> 01:53:07,128
only get to work on it a very few hours

2408
01:53:02,719 --> 01:53:11,469
I think we build some pretty nice stuff

2409
01:53:07,128 --> 01:53:16,309
in the engine it's it's in fact maybe

2410
01:53:11,469 --> 01:53:21,800
getting to the point where it's where

2411
01:53:16,309 --> 01:53:25,038
it's a little bit too it's a little too

2412
01:53:21,800 --> 01:53:27,219
far along so we're kind of getting into

2413
01:53:25,038 --> 01:53:29,268
stuff that's game design II now and

2414
01:53:27,219 --> 01:53:33,139
that's that's not really my area of

2415
01:53:29,269 --> 01:53:34,429
expertise so I guess what I would say is

2416
01:53:33,139 --> 01:53:38,179
hand-made here has progressed to the

2417
01:53:34,429 --> 01:53:39,708
point where it is going to exceed what I

2418
01:53:38,179 --> 01:53:43,908
would have liked to have taught on

2419
01:53:39,708 --> 01:53:47,868
stream you know I'd like to get the game

2420
01:53:43,908 --> 01:53:49,578
running reasonably well as a game just

2421
01:53:47,868 --> 01:53:53,148
to like go through and wreak lean up

2422
01:53:49,578 --> 01:53:56,448
engine things and fix things that never

2423
01:53:53,149 --> 01:53:59,389
quite got finished and you know to just

2424
01:53:56,448 --> 01:54:01,188
like do an entity system a nice entity

2425
01:53:59,389 --> 01:54:02,689
system in there you know the things that

2426
01:54:01,189 --> 01:54:06,439
are only game related which is kind of

2427
01:54:02,689 --> 01:54:07,989
what we're starting to do now so

2428
01:54:06,439 --> 01:54:11,209
obviously you want to do those things

2429
01:54:07,988 --> 01:54:12,138
but you know again like we've kind of

2430
01:54:11,208 --> 01:54:13,429
progressed to the point where it's

2431
01:54:12,139 --> 01:54:17,599
definitely crossing over into game

2432
01:54:13,429 --> 01:54:20,029
design territory now which is you know

2433
01:54:17,599 --> 01:54:22,069
not really my thing so I guess what I

2434
01:54:20,029 --> 01:54:25,518
would say is we're sort of starting to

2435
01:54:22,069 --> 01:54:27,349
transition over to a place where I'll

2436
01:54:25,519 --> 01:54:28,668
start having a lot of disclaimers the

2437
01:54:27,349 --> 01:54:30,649
begin the screen I'll be like all right

2438
01:54:28,668 --> 01:54:32,809
we're gonna do some stuff that's more or

2439
01:54:30,649 --> 01:54:36,820
less just game design today and I don't

2440
01:54:32,809 --> 01:54:38,958
do game design so ignore this episode

2441
01:54:36,819 --> 01:54:41,288
except for the parts where we touch the

2442
01:54:38,958 --> 01:54:41,288
engine

2443
01:54:53,050 --> 01:55:05,210
alright alright I'm gonna go ahead and

2444
01:54:57,979 --> 01:55:06,289
wrap up the string okay thank you

2445
01:55:05,210 --> 01:55:07,340
everyone for joining me for the episode

2446
01:55:06,289 --> 01:55:09,590
of hand made here it's been a pleasure

2447
01:55:07,340 --> 01:55:10,940
coding with you as always if you would

2448
01:55:09,590 --> 01:55:12,260
like to follow along series at home you

2449
01:55:10,939 --> 01:55:14,839
can always peer into the game on

2450
01:55:12,260 --> 01:55:17,239
handmade hair org and it comes with the

2451
01:55:14,840 --> 01:55:21,590
source code so you can play around with

2452
01:55:17,239 --> 01:55:23,420
it too and learn some stuff hopefully

2453
01:55:21,590 --> 01:55:26,470
hopefully some learn some game

2454
01:55:23,420 --> 01:55:31,460
programming stuff that's it for today

2455
01:55:26,470 --> 01:55:32,600
we'll be back tomorrow for I guess what

2456
01:55:31,460 --> 01:55:34,189
I'd like to do is start playing with

2457
01:55:32,600 --> 01:55:35,870
that hotspot editing stuff that's the

2458
01:55:34,189 --> 01:55:38,989
last part of the importing I can think

2459
01:55:35,869 --> 01:55:40,849
of that we haven't handled yet most of

2460
01:55:38,989 --> 01:55:43,550
the other things it seems like we've

2461
01:55:40,850 --> 01:55:46,070
done and so I'd really like to take a

2462
01:55:43,550 --> 01:55:49,880
look at how we want do that just

2463
01:55:46,069 --> 01:55:52,969
basically being able to modify the HHA

2464
01:55:49,880 --> 01:55:56,569
to have our own hotspots that we sort of

2465
01:55:52,970 --> 01:55:59,449
adjust in the game and go from there so

2466
01:55:56,569 --> 01:56:02,659
we'll take a look at that and then after

2467
01:55:59,449 --> 01:56:04,309
that I think we're kind of back to room

2468
01:56:02,659 --> 01:56:07,250
Jen lighting sorts of stuff where we're

2469
01:56:04,310 --> 01:56:08,120
gonna have to start looking at bringing

2470
01:56:07,250 --> 01:56:09,979
the world together

2471
01:56:08,119 --> 01:56:11,960
you know adding features we want there

2472
01:56:09,979 --> 01:56:15,409
ground cover those sorts of things that

2473
01:56:11,960 --> 01:56:17,899
we will now want to do and other things

2474
01:56:15,409 --> 01:56:19,609
like that so that's it for today hope

2475
01:56:17,899 --> 01:56:20,750
see you back here for tomorrow till then

2476
01:56:19,609 --> 01:56:24,069
have fun programming I'll see you guys

2477
01:56:20,750 --> 01:56:24,069
on the Internet take it easy everybody

