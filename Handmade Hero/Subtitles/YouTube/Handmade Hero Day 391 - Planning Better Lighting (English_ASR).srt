1
00:00:00,079 --> 00:00:05,910
okay hello everybody and welcome to hand

2
00:00:04,410 --> 00:00:09,570
made here the show recode a complete

3
00:00:05,910 --> 00:00:14,429
game live on stream we did some work on

4
00:00:09,570 --> 00:00:16,618
lighting last weekend and today is day

5
00:00:14,429 --> 00:00:19,769
391 so if you're following along at home

6
00:00:16,618 --> 00:00:23,550
you want to grab day 392 source code if

7
00:00:19,769 --> 00:00:25,528
you take a look at where we left off we

8
00:00:23,550 --> 00:00:28,589
actually were in a pretty good place in

9
00:00:25,528 --> 00:00:32,939
terms of just really basic kind of you

10
00:00:28,589 --> 00:00:37,859
know the rudimentary lighting now if I

11
00:00:32,939 --> 00:00:43,769
go ahead and build here there we go and

12
00:00:37,859 --> 00:00:45,329
I run the game it seems like code excel

13
00:00:43,770 --> 00:00:47,910
has kind of permanently destroyed our

14
00:00:45,329 --> 00:00:49,558
original studio in some way it's like

15
00:00:47,909 --> 00:00:52,439
now when we launch Visual Studio it

16
00:00:49,558 --> 00:00:55,649
takes like eons for it to load and we

17
00:00:52,439 --> 00:00:57,269
have no idea why just who knows maybe

18
00:00:55,649 --> 00:01:02,698
that's just how the dual studio is

19
00:00:57,270 --> 00:01:06,420
because you'll see was amazing but we

20
00:01:02,698 --> 00:01:08,429
had done the work for lighting the world

21
00:01:06,420 --> 00:01:10,579
from a single light source like this and

22
00:01:08,430 --> 00:01:12,960
we played around with the specular

23
00:01:10,579 --> 00:01:14,548
effect of it this is like kind of tight

24
00:01:12,959 --> 00:01:18,059
specular highlight here and there right

25
00:01:14,549 --> 00:01:20,280
now the effect the light position is

26
00:01:18,060 --> 00:01:23,009
locked to the hero's head so we could

27
00:01:20,280 --> 00:01:24,659
move it around those the experiment and

28
00:01:23,009 --> 00:01:28,650
you can see we've got kind of a specular

29
00:01:24,659 --> 00:01:33,000
highlight here that travels around and

30
00:01:28,650 --> 00:01:36,000
bounces off shapes as if it was a fairly

31
00:01:33,000 --> 00:01:39,840
mirrored shape a little bit glossy

32
00:01:36,000 --> 00:01:42,899
obviously compared to a real mirror but

33
00:01:39,840 --> 00:01:47,270
that's you know basic Phong lighting and

34
00:01:42,899 --> 00:01:49,829
it works mostly the way you expect now

35
00:01:47,269 --> 00:01:51,840
what we talked about last week at the

36
00:01:49,828 --> 00:01:54,419
end though was of course that you know

37
00:01:51,840 --> 00:01:56,909
we have a lot of things that we might

38
00:01:54,420 --> 00:01:58,618
want to do now in order to make this

39
00:01:56,909 --> 00:02:02,420
lighting useful in the general game

40
00:01:58,618 --> 00:02:05,819
sense so two things kind of come to mind

41
00:02:02,420 --> 00:02:10,560
rather immediately right one is that we

42
00:02:05,819 --> 00:02:13,818
would potentially like to set these

43
00:02:10,560 --> 00:02:17,150
responses to the light of

44
00:02:13,818 --> 00:02:21,169
per surface right so if you take a look

45
00:02:17,150 --> 00:02:23,569
at what you know as we sort of travel

46
00:02:21,169 --> 00:02:26,389
around you can see that this light

47
00:02:23,568 --> 00:02:29,619
behaves the same on all surfaces so each

48
00:02:26,389 --> 00:02:32,358
one of these cubes as well as the hero

49
00:02:29,620 --> 00:02:38,469
himself or any other sprite in the world

50
00:02:32,359 --> 00:02:38,469
is all behaving with one particular

51
00:02:39,039 --> 00:02:44,509
reflection model even though we are only

52
00:02:42,139 --> 00:02:51,769
in this case we only did like a very

53
00:02:44,509 --> 00:02:53,899
simple fog model for example and we'll

54
00:02:51,769 --> 00:02:57,560
probably talk a little bit more about

55
00:02:53,900 --> 00:02:58,969
lighting models in a bit but even though

56
00:02:57,560 --> 00:03:00,469
we only did a very simple thing which is

57
00:02:58,969 --> 00:03:03,530
just like a specular and a diffused

58
00:03:00,469 --> 00:03:05,509
coefficient if we wanted to make the

59
00:03:03,530 --> 00:03:08,419
world appear a little more varied in

60
00:03:05,509 --> 00:03:11,658
terms of its surfaces we could already

61
00:03:08,419 --> 00:03:14,090
do that just by allowing the parameters

62
00:03:11,658 --> 00:03:16,848
on the phone model to vary per surface

63
00:03:14,090 --> 00:03:19,908
rather than having every surface need to

64
00:03:16,848 --> 00:03:24,138
use the exact same Phong parameters

65
00:03:19,908 --> 00:03:26,840
right so for example if we wanted this

66
00:03:24,139 --> 00:03:29,000
to cube to appear very diffuse and this

67
00:03:26,840 --> 00:03:31,098
one to appear very mirrored all we would

68
00:03:29,000 --> 00:03:32,299
have to do is change the coefficients

69
00:03:31,098 --> 00:03:33,619
for the final model between the two of

70
00:03:32,299 --> 00:03:35,780
them and you would immediately see a

71
00:03:33,620 --> 00:03:37,989
difference there right now we can't do

72
00:03:35,780 --> 00:03:40,789
that because we have no way of varying

73
00:03:37,989 --> 00:03:42,799
the parameters per surface we don't

74
00:03:40,789 --> 00:03:45,168
specify any kind of additional

75
00:03:42,799 --> 00:03:48,319
information with the services that would

76
00:03:45,169 --> 00:03:50,030
allow the game in the renderer to know

77
00:03:48,318 --> 00:03:54,530
what kind of surface it was looking at

78
00:03:50,030 --> 00:03:58,789
right so that's one thing another thing

79
00:03:54,530 --> 00:04:03,438
is that we don't really have any idea at

80
00:03:58,789 --> 00:04:07,399
the moment how we would do like more of

81
00:04:03,438 --> 00:04:09,590
them right we just hard-coded a simple

82
00:04:07,400 --> 00:04:14,719
Phong reflection model into our shader

83
00:04:09,590 --> 00:04:20,269
we don't have any idea how we would you

84
00:04:14,719 --> 00:04:23,538
know do something more like ten lights

85
00:04:20,269 --> 00:04:25,370
20 lights 30 lights we could make a for

86
00:04:23,538 --> 00:04:26,899
loop in the shader right it loops over

87
00:04:25,370 --> 00:04:28,490
the constant store and the

88
00:04:26,899 --> 00:04:31,099
door has that many lights entered or

89
00:04:28,490 --> 00:04:32,840
something so there are criminal

90
00:04:31,100 --> 00:04:34,400
extensions of it we could do but you

91
00:04:32,839 --> 00:04:36,739
know is that really going to be an

92
00:04:34,399 --> 00:04:39,019
efficient way lot to do our lighting is

93
00:04:36,740 --> 00:04:41,660
that feasible or is that going to be

94
00:04:39,019 --> 00:04:43,849
cost prohibitive and so on so that's

95
00:04:41,660 --> 00:04:46,610
another thing and then finally we also

96
00:04:43,850 --> 00:04:48,800
obviously have no indirect lighting so

97
00:04:46,610 --> 00:04:50,479
we're only computing lighting from a

98
00:04:48,800 --> 00:04:53,720
particular light source where the light

99
00:04:50,478 --> 00:04:56,360
source shining off of something there's

100
00:04:53,720 --> 00:04:58,070
also some ancillary things we can do for

101
00:04:56,360 --> 00:04:59,960
example now that we have lighting you

102
00:04:58,069 --> 00:05:01,939
can see things like radial banding where

103
00:04:59,959 --> 00:05:04,459
the color fidelity isn't high enough so

104
00:05:01,939 --> 00:05:07,339
differing there would improve the visual

105
00:05:04,459 --> 00:05:08,959
quality of that for example so there are

106
00:05:07,339 --> 00:05:10,849
some other like cleanup kinds of things

107
00:05:08,959 --> 00:05:13,159
we can do but that has that's like

108
00:05:10,850 --> 00:05:17,840
really a fairly minor thing compared to

109
00:05:13,160 --> 00:05:20,150
the other aspects of it which are kind

110
00:05:17,839 --> 00:05:21,739
of more critical right you can ship a

111
00:05:20,149 --> 00:05:26,629
game with banding but you can't ship a

112
00:05:21,740 --> 00:05:30,939
game with one light mmm I guess you

113
00:05:26,629 --> 00:05:33,259
could but it'd be kind of questionable

114
00:05:30,939 --> 00:05:34,969
so we kind of get a start to attack

115
00:05:33,259 --> 00:05:38,478
these and obviously you know we don't

116
00:05:34,970 --> 00:05:42,440
want to spend in an infinite amount of

117
00:05:38,478 --> 00:05:45,110
time working on the lighting because you

118
00:05:42,439 --> 00:05:47,389
could write lighting algorithms are

119
00:05:45,110 --> 00:05:50,060
still an open area of study you know

120
00:05:47,389 --> 00:05:52,400
every new triple-a game that comes out

121
00:05:50,060 --> 00:05:54,829
or I should say engine for Triple A

122
00:05:52,399 --> 00:05:58,310
games that comes out whether it's you

123
00:05:54,829 --> 00:06:01,250
know unity or unreal or if it's one of

124
00:05:58,310 --> 00:06:03,709
the more custom ones like frostbite or

125
00:06:01,250 --> 00:06:06,259
snowflake or snowdrop or whatever that

126
00:06:03,709 --> 00:06:09,288
one is from Ubisoft blah blah blah

127
00:06:06,259 --> 00:06:11,360
they all have ways of doing lighting

128
00:06:09,288 --> 00:06:13,848
that vary dramatically right like

129
00:06:11,360 --> 00:06:19,550
everybody comes up with new ways to do

130
00:06:13,848 --> 00:06:25,779
it in fact I even like it it tech engine

131
00:06:19,550 --> 00:06:25,780
the new one for Doom

132
00:06:26,300 --> 00:06:31,939
did a totally like you know new take I

133
00:06:30,439 --> 00:06:37,459
mean it was not totally new take it was

134
00:06:31,939 --> 00:06:39,949
like a consortium of the chequered like

135
00:06:37,459 --> 00:06:41,839
like gridded voxels rendering

136
00:06:39,949 --> 00:06:43,579
that you break up the scene into sort of

137
00:06:41,839 --> 00:06:45,349
like small pieces and render them

138
00:06:43,579 --> 00:06:47,000
separately so that you can break down

139
00:06:45,350 --> 00:06:51,710
what lights contribute where and stuff

140
00:06:47,000 --> 00:06:54,170
like this so you know every time a new

141
00:06:51,709 --> 00:06:55,219
engine comes out or there's a new

142
00:06:54,170 --> 00:06:57,069
upgrade to the engine

143
00:06:55,220 --> 00:07:01,280
lighting is something that's typically

144
00:06:57,069 --> 00:07:04,159
improved or is a very least changed to

145
00:07:01,279 --> 00:07:06,619
attempt to find like sort of the holy

146
00:07:04,160 --> 00:07:08,450
grail of like it just magically works

147
00:07:06,620 --> 00:07:11,590
she put lights in the theme and they

148
00:07:08,449 --> 00:07:16,129
like the scene the way life light scenes

149
00:07:11,589 --> 00:07:18,649
and you know none of them is perfect and

150
00:07:16,129 --> 00:07:21,050
none of them quite works right they all

151
00:07:18,649 --> 00:07:23,449
have drawbacks or weirdnesses or things

152
00:07:21,050 --> 00:07:24,829
but they keep getting better and so

153
00:07:23,449 --> 00:07:27,079
there's kind of just an infinite

154
00:07:24,829 --> 00:07:29,719
sinkhole there at the moment that you

155
00:07:27,079 --> 00:07:32,359
could go down in terms of how you know

156
00:07:29,720 --> 00:07:34,400
what you want to do to try to make the

157
00:07:32,360 --> 00:07:36,740
best possible lighting for any game

158
00:07:34,399 --> 00:07:39,560
regardless and we're not going to try

159
00:07:36,740 --> 00:07:42,220
and do that but we are going to see you

160
00:07:39,560 --> 00:07:46,639
know what could we do that's something

161
00:07:42,220 --> 00:07:49,100
reasonable here that would improve some

162
00:07:46,639 --> 00:07:50,659
of the aspects of our lighting so for

163
00:07:49,100 --> 00:07:52,640
example one of the things that I think

164
00:07:50,660 --> 00:07:55,939
would be probably useful for us to

165
00:07:52,639 --> 00:07:59,990
explore is rather than getting our

166
00:07:55,939 --> 00:08:04,850
lighting from something like a piece a

167
00:07:59,990 --> 00:08:06,710
single vector in the cosmos or of the

168
00:08:04,850 --> 00:08:09,500
shader that just says this is the

169
00:08:06,709 --> 00:08:12,799
location of the light what we would

170
00:08:09,500 --> 00:08:16,370
rather do is have some sort of a way of

171
00:08:12,800 --> 00:08:21,259
producing lighting information in the

172
00:08:16,370 --> 00:08:24,430
same way that we produce our actual like

173
00:08:21,259 --> 00:08:28,789
the actual game information for review

174
00:08:24,430 --> 00:08:30,829
and that is to say that we have a

175
00:08:28,790 --> 00:08:33,830
pipeline now that we can use to render

176
00:08:30,829 --> 00:08:35,689
things right we have a pipeline we can

177
00:08:33,830 --> 00:08:38,270
use to render the game world and we are

178
00:08:35,690 --> 00:08:41,330
rendering the game world it would be

179
00:08:38,269 --> 00:08:45,980
probably advisable to do something in

180
00:08:41,330 --> 00:08:48,139
that system that allows us to render the

181
00:08:45,980 --> 00:08:51,920
lighting of the world and what I mean by

182
00:08:48,139 --> 00:08:52,970
render the lighting is produce some kind

183
00:08:51,919 --> 00:08:55,818
of intermedia

184
00:08:52,970 --> 00:08:57,769
get lookup structure that allows us to

185
00:08:55,818 --> 00:08:59,899
query what the lighting should be at

186
00:08:57,769 --> 00:09:02,060
various places in the world without

187
00:08:59,899 --> 00:09:12,289
having to recompute the lighting in its

188
00:09:02,059 --> 00:09:16,969
entirety so for example one very common

189
00:09:12,289 --> 00:09:20,240
way of doing lighting these days is a

190
00:09:16,970 --> 00:09:22,430
method called light probes and let me

191
00:09:20,240 --> 00:09:25,698
sort of give a brief sort of idea of

192
00:09:22,429 --> 00:09:27,620
what a light probe system looks like and

193
00:09:25,698 --> 00:09:30,909
then you can hopefully see more what I

194
00:09:27,620 --> 00:09:37,100
mean about creating an intermediate

195
00:09:30,909 --> 00:09:40,309
structure so uh here we go so I make

196
00:09:37,100 --> 00:09:50,319
sure my Milton is working and it is here

197
00:09:40,309 --> 00:09:50,318
we are in day 391 so let's talk about

198
00:09:51,549 --> 00:10:01,609
light rendering so one of the things

199
00:09:58,220 --> 00:10:03,079
that we haven't talked about yet right

200
00:10:01,610 --> 00:10:05,409
is we sort of talk about the basics of

201
00:10:03,078 --> 00:10:07,578
lighting we gave this sort of you know

202
00:10:05,409 --> 00:10:09,828
discussion about like alright so we have

203
00:10:07,578 --> 00:10:11,750
these surfaces and the surface has a

204
00:10:09,828 --> 00:10:14,269
particular normal and there's all this

205
00:10:11,750 --> 00:10:16,669
sort of light that's incoming to the

206
00:10:14,269 --> 00:10:18,409
surface right all of this light is

207
00:10:16,669 --> 00:10:21,049
incident light on the surface and that

208
00:10:18,409 --> 00:10:23,179
light is collected if the surface is not

209
00:10:21,049 --> 00:10:24,740
transmitted so you know you can have

210
00:10:23,179 --> 00:10:27,758
services where light comes from the back

211
00:10:24,740 --> 00:10:31,419
like a rice paper screen or glass and

212
00:10:27,759 --> 00:10:33,350
light from the back comes through right

213
00:10:31,419 --> 00:10:35,208
but if we're talking strictly about

214
00:10:33,350 --> 00:10:37,579
reflective surfaces at least for the

215
00:10:35,208 --> 00:10:41,149
moment we're talking about a hemisphere

216
00:10:37,578 --> 00:10:42,919
here of light that comes in so there's

217
00:10:41,149 --> 00:10:45,350
you know if you if you looked at it in

218
00:10:42,919 --> 00:10:49,188
three dimensions instead of two

219
00:10:45,350 --> 00:10:52,339
dimensions there's a hemisphere of light

220
00:10:49,188 --> 00:10:55,549
here where every direction conceivable

221
00:10:52,339 --> 00:10:58,459
on the front side of the surface life is

222
00:10:55,549 --> 00:11:00,049
coming into it and similarly there's an

223
00:10:58,458 --> 00:11:03,948
entire hemisphere of light that's

224
00:11:00,049 --> 00:11:06,240
bouncing out of it right and fortunately

225
00:11:03,948 --> 00:11:08,039
for us all we really care about for

226
00:11:06,240 --> 00:11:09,389
the individual pixel that we're

227
00:11:08,039 --> 00:11:10,618
rendering not the world because the

228
00:11:09,389 --> 00:11:12,629
world will meet we care about how the

229
00:11:10,619 --> 00:11:14,249
light bounces around its entirety but

230
00:11:12,629 --> 00:11:16,619
all we really care about is that that

231
00:11:14,249 --> 00:11:18,899
one light bounce that goes out towards

232
00:11:16,619 --> 00:11:22,528
the camera from that particular location

233
00:11:18,899 --> 00:11:25,558
on the screen right so what we want to

234
00:11:22,528 --> 00:11:27,360
know typically speaking is for all the

235
00:11:25,558 --> 00:11:32,428
incident light across the entire

236
00:11:27,360 --> 00:11:35,369
hemisphere right what actually bounces

237
00:11:32,428 --> 00:11:37,110
out in the direction of the eye now

238
00:11:35,369 --> 00:11:39,089
obviously you can get extremely

239
00:11:37,110 --> 00:11:41,129
complicated versions of this and if

240
00:11:39,089 --> 00:11:43,829
you're talking about a more forward

241
00:11:41,129 --> 00:11:46,589
scheme like a sorry backward scheme like

242
00:11:43,828 --> 00:11:48,719
a ray tracer where we start here and we

243
00:11:46,589 --> 00:11:52,019
come out we hit this point and we go oh

244
00:11:48,720 --> 00:11:53,759
let's collect samples at by shooting out

245
00:11:52,019 --> 00:11:56,730
from the hemisphere into various places

246
00:11:53,759 --> 00:12:00,058
and see what we get it's a little more

247
00:11:56,730 --> 00:12:02,639
easy to understand how you might take a

248
00:12:00,058 --> 00:12:03,868
reflectance function so some idea of how

249
00:12:02,639 --> 00:12:06,959
the surface is supposed to behave

250
00:12:03,869 --> 00:12:09,119
where just light bounce from into in

251
00:12:06,958 --> 00:12:10,739
some kind of coherent way it's a little

252
00:12:09,119 --> 00:12:12,749
more easy to understand how you might

253
00:12:10,740 --> 00:12:14,938
implement that because you're literally

254
00:12:12,749 --> 00:12:16,980
doing the operation of the reflectance

255
00:12:14,938 --> 00:12:19,139
function just in Reverse you're going oh

256
00:12:16,980 --> 00:12:22,139
I come out to the surface I hit a

257
00:12:19,139 --> 00:12:24,178
particular point I can then go out and

258
00:12:22,139 --> 00:12:26,850
sample the light in various directions

259
00:12:24,178 --> 00:12:29,578
and I could pick which directions I

260
00:12:26,850 --> 00:12:31,499
sample based on how I know that surface

261
00:12:29,578 --> 00:12:33,298
reflects light if it reflects a lot of

262
00:12:31,499 --> 00:12:35,490
light from over here in that direction

263
00:12:33,298 --> 00:12:37,350
but not much from over here I can take a

264
00:12:35,490 --> 00:12:39,869
lot of samples in that direction right

265
00:12:37,350 --> 00:12:42,298
and furthermore for every sample I take

266
00:12:39,869 --> 00:12:44,009
I know how it should be weighted because

267
00:12:42,298 --> 00:12:46,350
I know how what the reflection

268
00:12:44,009 --> 00:12:47,759
coefficient is for that bounce right

269
00:12:46,350 --> 00:12:51,290
because I usually have something called

270
00:12:47,759 --> 00:12:56,129
a brdf or something or BRS

271
00:12:51,289 --> 00:12:59,458
I think there would be SSDs there's

272
00:12:56,129 --> 00:13:02,548
there's all kinds of Nimes names to this

273
00:12:59,458 --> 00:13:04,138
but by a bi-directional reflections

274
00:13:02,548 --> 00:13:05,129
distribution function I believe is this

275
00:13:04,139 --> 00:13:07,860
one

276
00:13:05,129 --> 00:13:09,539
bi-directional subsurface distribution

277
00:13:07,860 --> 00:13:11,579
function is this one which allows

278
00:13:09,539 --> 00:13:14,278
bouncing in here and stuff like this I

279
00:13:11,578 --> 00:13:16,128
don't know this might be BRS SPF I don't

280
00:13:14,278 --> 00:13:18,870
even know it doesn't matter the point is

281
00:13:16,129 --> 00:13:22,170
there's a bunch of four-dimensional

282
00:13:18,870 --> 00:13:24,029
and people even take real services like

283
00:13:22,169 --> 00:13:25,110
they'll take these real services and

284
00:13:24,029 --> 00:13:27,179
they'll put them in a thing called a

285
00:13:25,110 --> 00:13:29,370
doneö reflectometer or other kind of

286
00:13:27,179 --> 00:13:31,620
like ridiculous machine designed to

287
00:13:29,370 --> 00:13:33,210
measure their reflectance and they

288
00:13:31,620 --> 00:13:35,549
actually come up with transfer functions

289
00:13:33,210 --> 00:13:37,830
that say for each individual incoming

290
00:13:35,549 --> 00:13:40,319
light Direction sample at some

291
00:13:37,830 --> 00:13:42,300
discretization here is what the outbound

292
00:13:40,320 --> 00:13:43,710
light you know in what other direction

293
00:13:42,299 --> 00:13:45,120
is so it's really the four-dimensional

294
00:13:43,710 --> 00:13:46,889
function you can active transference

295
00:13:45,120 --> 00:13:48,570
right so you can actually simulate real

296
00:13:46,889 --> 00:13:50,639
services this way by saying here's the

297
00:13:48,570 --> 00:13:52,860
actual way that this surface reflects

298
00:13:50,639 --> 00:13:54,929
life and I'll actually simulated in my

299
00:13:52,860 --> 00:13:58,409
renderer by going what's the incoming

300
00:13:54,929 --> 00:14:00,629
angle what's the outgoing angle use the

301
00:13:58,409 --> 00:14:02,929
coefficient of transfer that we actually

302
00:14:00,629 --> 00:14:06,860
measured from the real world right so

303
00:14:02,929 --> 00:14:10,049
that's like you know the the sort of

304
00:14:06,860 --> 00:14:12,720
ridiculous high end we've got a render

305
00:14:10,049 --> 00:14:17,069
node cluster rendering these things and

306
00:14:12,720 --> 00:14:18,600
we don't care how long it takes we just

307
00:14:17,070 --> 00:14:23,100
want to produce a really accurate image

308
00:14:18,600 --> 00:14:24,779
right well you can do that but the

309
00:14:23,100 --> 00:14:26,730
question becomes I want to now do this

310
00:14:24,779 --> 00:14:29,039
in a game and I want to do you know I

311
00:14:26,730 --> 00:14:30,990
want surface properties in a game in you

312
00:14:29,039 --> 00:14:34,079
know if you're somebody again like let's

313
00:14:30,990 --> 00:14:36,680
say you are the the team working on

314
00:14:34,080 --> 00:14:39,480
something like you know frostbite or

315
00:14:36,679 --> 00:14:41,309
unreal one of the higher end rendering

316
00:14:39,480 --> 00:14:43,200
engines what you're trying to do is

317
00:14:41,309 --> 00:14:47,669
basically this you know you still want

318
00:14:43,200 --> 00:14:52,950
to have these surface parameters that

319
00:14:47,669 --> 00:14:54,599
give you something like a brdf that's

320
00:14:52,950 --> 00:14:56,460
actually been sampled but maybe it's you

321
00:14:54,600 --> 00:14:59,430
know not quite as detailed as that it's

322
00:14:56,460 --> 00:15:00,780
more approximate like you print you know

323
00:14:59,429 --> 00:15:03,179
you bake it down to some reasonable

324
00:15:00,779 --> 00:15:06,120
number of parameters that kind of just

325
00:15:03,179 --> 00:15:08,429
shape the reflective functions so it can

326
00:15:06,120 --> 00:15:10,740
be fit to real data or you know

327
00:15:08,429 --> 00:15:14,370
approximate the kinds of real services

328
00:15:10,740 --> 00:15:17,879
that you commonly have in games and you

329
00:15:14,370 --> 00:15:20,340
know you you can come up with some

330
00:15:17,879 --> 00:15:22,350
reflectance functions that make sense

331
00:15:20,340 --> 00:15:24,480
here but the question is well what do

332
00:15:22,350 --> 00:15:26,730
you do in the rendering context because

333
00:15:24,480 --> 00:15:29,310
you don't necessarily have the ability

334
00:15:26,730 --> 00:15:31,720
to shoot Ray's around anymore that's not

335
00:15:29,309 --> 00:15:33,250
a thing that the graphics card necessary

336
00:15:31,720 --> 00:15:34,449
is going to do and then there are some

337
00:15:33,250 --> 00:15:37,299
systems that even try to do that right

338
00:15:34,448 --> 00:15:40,568
like voxel cone tracing renderers for

339
00:15:37,299 --> 00:15:45,519
example do this it's not ray tracing is

340
00:15:40,568 --> 00:15:48,278
actually not not not done these days

341
00:15:45,519 --> 00:15:50,110
because GPUs are so nuts you might

342
00:15:48,278 --> 00:15:51,850
actually do something that allows you to

343
00:15:50,110 --> 00:15:55,778
do that you don't tend to do it the same

344
00:15:51,850 --> 00:15:57,430
way that a strict Ray trader does those

345
00:15:55,778 --> 00:15:59,948
tend to use things more like KD trees

346
00:15:57,429 --> 00:16:01,299
for acceleration and stuff like this in

347
00:15:59,948 --> 00:16:03,669
this case you're talking about something

348
00:16:01,299 --> 00:16:05,139
that needs to be handled in a forward

349
00:16:03,669 --> 00:16:06,370
process so you're talking about

350
00:16:05,139 --> 00:16:08,919
something that usually works more with

351
00:16:06,370 --> 00:16:10,778
voxels something that the GPU itself can

352
00:16:08,919 --> 00:16:15,958
produce for acceleration structures in

353
00:16:10,778 --> 00:16:15,958
terms of lookup but all that being said

354
00:16:16,169 --> 00:16:23,378
despite those facts the rendering

355
00:16:20,318 --> 00:16:24,698
process still might do some ray tracing

356
00:16:23,379 --> 00:16:26,110
in there we're not going to really

357
00:16:24,698 --> 00:16:28,539
consider that because that's going a

358
00:16:26,110 --> 00:16:30,399
little bit to banana cakes like I sent

359
00:16:28,539 --> 00:16:33,610
down that rat hole you can go down it

360
00:16:30,399 --> 00:16:35,708
and people do but you know we're not

361
00:16:33,610 --> 00:16:37,629
going to go that nuts so we're talking

362
00:16:35,708 --> 00:16:38,859
about a more traditional version of the

363
00:16:37,629 --> 00:16:40,750
render here where we just want to do

364
00:16:38,860 --> 00:16:42,399
some kind of forward rendering but we

365
00:16:40,750 --> 00:16:44,139
want to be able to have our surfaces

366
00:16:42,399 --> 00:16:46,990
perhaps do something a little more

367
00:16:44,139 --> 00:16:48,959
interesting here so what we Ori did is

368
00:16:46,990 --> 00:16:51,278
something that kind of looks like a Fong

369
00:16:48,958 --> 00:16:52,659
reflectance model and what a following

370
00:16:51,278 --> 00:16:55,870
reflectance model does the following

371
00:16:52,659 --> 00:16:59,828
reflectance model assumes a couple of

372
00:16:55,870 --> 00:17:02,980
very drastic I would say and rightfully

373
00:16:59,828 --> 00:17:05,168
so for the era in which fog was created

374
00:17:02,980 --> 00:17:07,179
because remember we're talking decades

375
00:17:05,169 --> 00:17:09,549
ago when computing power was very even

376
00:17:07,179 --> 00:17:12,009
offline rendering was very limited and

377
00:17:09,548 --> 00:17:15,298
you couldn't go nuts with things flan

378
00:17:12,009 --> 00:17:17,798
makes a very important simplification

379
00:17:15,298 --> 00:17:20,078
that's very drastic and that

380
00:17:17,798 --> 00:17:22,150
simplification specifically is that

381
00:17:20,078 --> 00:17:25,418
while it does not really simplify the

382
00:17:22,150 --> 00:17:28,538
concept of the eye much we're still

383
00:17:25,419 --> 00:17:30,009
talking about a point I source a lot of

384
00:17:28,538 --> 00:17:31,269
the times sometimes you get a little

385
00:17:30,009 --> 00:17:33,339
more complicated where you have a lens

386
00:17:31,269 --> 00:17:36,279
aperture but you're still it does the

387
00:17:33,339 --> 00:17:38,079
eye is usually not the hard part unless

388
00:17:36,279 --> 00:17:39,490
you start talking about four-dimensional

389
00:17:38,079 --> 00:17:40,898
like motion blur kinds of things stuff

390
00:17:39,490 --> 00:17:43,798
like that so assuming the eye we're just

391
00:17:40,898 --> 00:17:43,798
talking about stationary eye

392
00:17:44,039 --> 00:17:48,589
a point approximation for an AI doesn't

393
00:17:46,890 --> 00:17:50,610
lose you that much

394
00:17:48,589 --> 00:17:53,009
especially not with surface reflectance

395
00:17:50,609 --> 00:17:55,109
and so when we take a look at the eye

396
00:17:53,009 --> 00:17:56,039
here and we're talking about this

397
00:17:55,109 --> 00:17:57,719
approximation

398
00:17:56,039 --> 00:17:59,339
yeah we're approximating some things so

399
00:17:57,720 --> 00:18:00,690
first of all we're not taking into

400
00:17:59,339 --> 00:18:02,699
account the fact that the eye is really

401
00:18:00,690 --> 00:18:05,130
a lens that focuses a cone to a point

402
00:18:02,700 --> 00:18:07,069
and we're not talking about the fact

403
00:18:05,130 --> 00:18:09,180
that that focusing process actually has

404
00:18:07,069 --> 00:18:11,909
depth of field to it stuff like that so

405
00:18:09,180 --> 00:18:13,170
we lose some effects at the eye but in

406
00:18:11,910 --> 00:18:13,920
terms of service focus we don't lose a

407
00:18:13,170 --> 00:18:17,850
huge amount

408
00:18:13,920 --> 00:18:19,350
other than that cone but what song does

409
00:18:17,849 --> 00:18:21,119
in terms of approximation that's so much

410
00:18:19,349 --> 00:18:24,119
more drastic than probably what we would

411
00:18:21,119 --> 00:18:27,209
want is it assumes that the light is a

412
00:18:24,119 --> 00:18:29,699
point right and I'm not talking about

413
00:18:27,210 --> 00:18:31,230
just the light meaning a light in the

414
00:18:29,700 --> 00:18:33,990
world I'm talking about it assumes all

415
00:18:31,230 --> 00:18:36,240
lighting incident on the surface comes

416
00:18:33,990 --> 00:18:38,640
from a point light source and even if

417
00:18:36,240 --> 00:18:42,240
you want to extend it to multiple point

418
00:18:38,640 --> 00:18:44,400
like multiple lights you're talking

419
00:18:42,240 --> 00:18:46,920
about multiple single points of light

420
00:18:44,400 --> 00:18:50,040
and the reason that this is such a

421
00:18:46,920 --> 00:18:53,430
drastic simplification of the lighting

422
00:18:50,039 --> 00:18:57,299
model is just because most surfaces get

423
00:18:53,430 --> 00:19:01,009
their look from the fact that light

424
00:18:57,299 --> 00:19:05,879
comes from a tremendous array of sources

425
00:19:01,009 --> 00:19:08,759
around around it you know most surfaces

426
00:19:05,880 --> 00:19:11,100
are going to get at least fifty percent

427
00:19:08,759 --> 00:19:15,509
of the light that you see coming off of

428
00:19:11,099 --> 00:19:17,459
them from indirect light because you

429
00:19:15,509 --> 00:19:20,490
know light sources tend to be very small

430
00:19:17,460 --> 00:19:22,980
and they tend to be very few whereas

431
00:19:20,490 --> 00:19:24,750
that light even though the light source

432
00:19:22,980 --> 00:19:28,519
is very small bounces all around

433
00:19:24,750 --> 00:19:31,769
something like a room for example and

434
00:19:28,519 --> 00:19:34,589
you know it will mean that any

435
00:19:31,769 --> 00:19:36,269
individual surface that's trying to that

436
00:19:34,589 --> 00:19:39,029
you're looking at is going to be getting

437
00:19:36,269 --> 00:19:42,359
light from so many more places than just

438
00:19:39,029 --> 00:19:44,039
the actual light source itself never

439
00:19:42,359 --> 00:19:46,289
mind the fact that you've shrunk that

440
00:19:44,039 --> 00:19:49,319
light source from an actual shape to a

441
00:19:46,289 --> 00:19:50,849
point the real simplification here is

442
00:19:49,319 --> 00:19:53,299
that you're not collecting light from

443
00:19:50,849 --> 00:19:56,549
everywhere else right

444
00:19:53,299 --> 00:19:57,230
and this goes double for outdoors even

445
00:19:56,549 --> 00:19:59,690
though this

446
00:19:57,230 --> 00:20:01,400
is the closest thing to a point light

447
00:19:59,690 --> 00:20:03,080
source you're probably ever going to get

448
00:20:01,400 --> 00:20:05,780
it's very small

449
00:20:03,079 --> 00:20:07,759
from our perspective right like yes the

450
00:20:05,779 --> 00:20:11,808
Sun may be huge but from where we can

451
00:20:07,759 --> 00:20:14,450
see it it's really tiny and it's so far

452
00:20:11,808 --> 00:20:16,819
away as to be highly correlated so like

453
00:20:14,450 --> 00:20:19,279
it's light is almost directional right

454
00:20:16,819 --> 00:20:22,490
so it's kind of easy to extract it comes

455
00:20:19,279 --> 00:20:25,750
late start however the atmospheric

456
00:20:22,490 --> 00:20:29,808
scattering being what it is in the earth

457
00:20:25,750 --> 00:20:34,339
the light actually during the day comes

458
00:20:29,808 --> 00:20:38,960
from a huge canopy of blue a you know

459
00:20:34,339 --> 00:20:41,359
sort of light white whitish blue sky

460
00:20:38,960 --> 00:20:45,440
dome right it's a big hemisphere of blue

461
00:20:41,359 --> 00:20:47,928
that's lighting up the world I and so

462
00:20:45,440 --> 00:20:52,190
again there really is no circumstance

463
00:20:47,929 --> 00:20:54,798
that you ever really look at you know

464
00:20:52,190 --> 00:20:57,410
you'd have to construct a really strange

465
00:20:54,798 --> 00:21:00,918
sort of flashlight holding kind of a

466
00:20:57,410 --> 00:21:02,540
thing to really get anything even close

467
00:21:00,919 --> 00:21:05,419
to what a fond lighting model is going

468
00:21:02,539 --> 00:21:08,899
to give you specifically because it just

469
00:21:05,419 --> 00:21:12,080
doesn't take into account the sort of

470
00:21:08,900 --> 00:21:15,530
broad reception of light that you can

471
00:21:12,079 --> 00:21:22,730
get from the the way the real world does

472
00:21:15,529 --> 00:21:25,369
its lighting so that's the really huge

473
00:21:22,730 --> 00:21:28,160
simplification that you get with a fog

474
00:21:25,369 --> 00:21:30,558
light model and the problem that we

475
00:21:28,160 --> 00:21:33,019
would have in handmade hero is if we

476
00:21:30,558 --> 00:21:38,690
want to move past that we would need

477
00:21:33,019 --> 00:21:41,509
some kind of way to take the you know

478
00:21:38,690 --> 00:21:43,880
take the hemisphere of light that's

479
00:21:41,509 --> 00:21:45,349
being ignored by the fog model and say

480
00:21:43,880 --> 00:21:45,919
if we want to step up to something

481
00:21:45,349 --> 00:21:48,918
better

482
00:21:45,919 --> 00:21:50,990
the problem here is not the fog model

483
00:21:48,919 --> 00:21:52,669
per se it's that simplification of the

484
00:21:50,990 --> 00:21:56,720
fog model and that simplification of the

485
00:21:52,669 --> 00:22:00,740
fog model is what gives us the ability

486
00:21:56,720 --> 00:22:02,539
to compute it with just the with the all

487
00:22:00,740 --> 00:22:04,250
the information being where the light is

488
00:22:02,539 --> 00:22:07,730
we have no other information than just

489
00:22:04,250 --> 00:22:09,380
where is the light so if we wanted to

490
00:22:07,730 --> 00:22:10,940
step up from that we now need

491
00:22:09,380 --> 00:22:13,700
information about what the whole

492
00:22:10,940 --> 00:22:16,009
hemisphere of light is right what's all

493
00:22:13,700 --> 00:22:17,840
the light coming in across small

494
00:22:16,009 --> 00:22:20,150
hemisphere and once we have that

495
00:22:17,839 --> 00:22:21,889
information we could even just use

496
00:22:20,150 --> 00:22:24,380
something like a fog light model and

497
00:22:21,890 --> 00:22:27,170
take lots of samples and produce perhaps

498
00:22:24,380 --> 00:22:28,940
a better result so the actual concept of

499
00:22:27,170 --> 00:22:30,350
a diffuse specular coefficient or

500
00:22:28,940 --> 00:22:34,519
something fat with a fog lighting model

501
00:22:30,349 --> 00:22:35,959
that's not so bad necessarily what the

502
00:22:34,519 --> 00:22:38,980
really the thing that makes it look

503
00:22:35,960 --> 00:22:42,170
really unnatural and weird is less that

504
00:22:38,980 --> 00:22:43,880
although that is important to have more

505
00:22:42,170 --> 00:22:46,970
robust ways of shaping reflectance

506
00:22:43,880 --> 00:22:48,500
certainly what's more important is the

507
00:22:46,970 --> 00:22:50,390
fact that we're just not taking into

508
00:22:48,500 --> 00:22:51,710
account how the light flows around the

509
00:22:50,390 --> 00:22:57,020
scene at all and all that that

510
00:22:51,710 --> 00:23:00,500
hemisphere of of input so one thing we

511
00:22:57,019 --> 00:23:02,629
can do in terms of storing and looking

512
00:23:00,500 --> 00:23:04,759
up that information there there are some

513
00:23:02,630 --> 00:23:05,930
interesting ways we can do that the hard

514
00:23:04,759 --> 00:23:08,930
part is going to be figuring out how to

515
00:23:05,930 --> 00:23:11,600
produce those in the first place for a

516
00:23:08,930 --> 00:23:13,850
game that is generated on the fly right

517
00:23:11,599 --> 00:23:16,519
but let's talk about that for a second

518
00:23:13,849 --> 00:23:19,759
so what would we do if we wanted to

519
00:23:16,519 --> 00:23:21,950
improve this lighting model by you know

520
00:23:19,759 --> 00:23:23,869
ignore the the lighting model so for a

521
00:23:21,950 --> 00:23:25,789
second but just say we know we're going

522
00:23:23,869 --> 00:23:28,759
to move away from something that treats

523
00:23:25,789 --> 00:23:30,379
life as idealized point sources and we

524
00:23:28,759 --> 00:23:35,869
want to move towards something that has

525
00:23:30,380 --> 00:23:38,660
more sort of global information about

526
00:23:35,869 --> 00:23:40,369
the in radiance a light at a particular

527
00:23:38,660 --> 00:23:43,009
point in the world that we're trying to

528
00:23:40,369 --> 00:23:45,500
simulate the lighting and the answer

529
00:23:43,009 --> 00:23:46,609
there is that like there are some simple

530
00:23:45,500 --> 00:23:47,990
techniques you can use

531
00:23:46,609 --> 00:23:51,019
I mentioned light probing and that's

532
00:23:47,990 --> 00:23:53,809
probably the easiest one and it's really

533
00:23:51,019 --> 00:23:57,200
easy to describe what that means is well

534
00:23:53,809 --> 00:23:58,579
let's assume temporarily and again this

535
00:23:57,200 --> 00:24:00,200
is the hard part of the problem for

536
00:23:58,579 --> 00:24:02,419
something like light probing so it's not

537
00:24:00,200 --> 00:24:04,610
a easy thing to assume but we'll talk

538
00:24:02,420 --> 00:24:07,480
about that second let's assume

539
00:24:04,609 --> 00:24:10,969
temporarily that you could do something

540
00:24:07,480 --> 00:24:12,559
to calculate the lighting but it was

541
00:24:10,970 --> 00:24:15,440
pretty expensive and you certainly

542
00:24:12,559 --> 00:24:17,990
weren't going to do it per pixel what

543
00:24:15,440 --> 00:24:20,630
would you do if you could afford to say

544
00:24:17,990 --> 00:24:24,289
do that 20 or 30 times but you can't

545
00:24:20,630 --> 00:24:29,950
afford to do it 1920 x 1080

546
00:24:24,289 --> 00:24:31,639
time's right so you can do a few

547
00:24:29,950 --> 00:24:37,069
determinations of what the lighting

548
00:24:31,640 --> 00:24:43,009
might be in a few places but then you

549
00:24:37,069 --> 00:24:54,649
can't do it everywhere right so what

550
00:24:43,009 --> 00:24:57,559
would you do well light probes are one

551
00:24:54,650 --> 00:24:59,390
way that people have a taxes problem and

552
00:24:57,559 --> 00:25:00,919
they're pretty straightforward they rely

553
00:24:59,390 --> 00:25:04,690
on what I always say is the most

554
00:25:00,920 --> 00:25:04,690
important equation in all computer games

555
00:25:05,230 --> 00:25:12,589
linear interpolation and how they work

556
00:25:10,640 --> 00:25:15,890
as they say okay suppose I'm looking

557
00:25:12,589 --> 00:25:19,069
down for game world here you know here's

558
00:25:15,890 --> 00:25:22,130
my hero and I know the hero is going to

559
00:25:19,069 --> 00:25:23,689
move around the screen and I need to be

560
00:25:22,130 --> 00:25:25,220
able to life the hero no matter where

561
00:25:23,690 --> 00:25:26,990
they go and I also need to light

562
00:25:25,220 --> 00:25:29,029
everybody else so you know we've got the

563
00:25:26,990 --> 00:25:30,529
little snake dude who's coming in here

564
00:25:29,029 --> 00:25:35,329
or whatever and everybody needs to get

565
00:25:30,529 --> 00:25:38,509
with coming into it well let's say we

566
00:25:35,329 --> 00:25:40,339
have enough horsepower to compute what

567
00:25:38,509 --> 00:25:44,839
the lighting Hemisphere and that sort of

568
00:25:40,339 --> 00:25:48,289
stuff would be at you know let's say 12

569
00:25:44,839 --> 00:25:52,659
places right well what I can do is I can

570
00:25:48,289 --> 00:25:52,659
scatter those 12 places in a grid

571
00:25:57,440 --> 00:26:05,990
like so right and if I scattered these

572
00:26:02,920 --> 00:26:07,130
places around and I compute what that

573
00:26:05,990 --> 00:26:09,079
lighting is going to be at each

574
00:26:07,130 --> 00:26:11,990
individual place what I can do is I can

575
00:26:09,079 --> 00:26:15,949
produce some intermediate structure for

576
00:26:11,990 --> 00:26:18,410
storing it and in this case because GPUs

577
00:26:15,950 --> 00:26:20,299
tend to have this built in they usually

578
00:26:18,410 --> 00:26:21,740
use a thing called a cube map now you

579
00:26:20,299 --> 00:26:26,079
can use other sorts of things like

580
00:26:21,740 --> 00:26:29,240
there's a various ways of storing a like

581
00:26:26,079 --> 00:26:30,949
spherical harmonic style reduced

582
00:26:29,240 --> 00:26:32,829
coordinate versions of lighting there's

583
00:26:30,950 --> 00:26:34,940
others all sorts of things you might do

584
00:26:32,829 --> 00:26:38,049
but one thing that's very common is the

585
00:26:34,940 --> 00:26:42,289
sort what's called a cube map a cube map

586
00:26:38,049 --> 00:26:45,740
is literally a cube with a texture map

587
00:26:42,289 --> 00:26:48,529
on each of its faces so it's really it's

588
00:26:45,740 --> 00:26:53,809
just a glorified way of saying I have 6

589
00:26:48,529 --> 00:26:56,720
square textures and the only thing that

590
00:26:53,809 --> 00:27:00,619
makes it a cube map per se rather than

591
00:26:56,720 --> 00:27:03,289
just making six square textures is that

592
00:27:00,619 --> 00:27:06,589
it's fast to do lookups into it based on

593
00:27:03,289 --> 00:27:08,930
a normal so basically the the computer

594
00:27:06,589 --> 00:27:10,279
graphics hardware before it was more

595
00:27:08,930 --> 00:27:11,720
programmable nowadays you could write

596
00:27:10,279 --> 00:27:13,609
your own cube map look up function so

597
00:27:11,720 --> 00:27:14,720
it's really not a big deal but in the

598
00:27:13,609 --> 00:27:16,009
old days it was a big deal because they

599
00:27:14,720 --> 00:27:18,980
basically put a special reverse Hardware

600
00:27:16,009 --> 00:27:21,440
just to do this and it was to say that

601
00:27:18,980 --> 00:27:23,509
if I have a normal that's pointing in a

602
00:27:21,440 --> 00:27:26,900
particular direction I can figure out

603
00:27:23,509 --> 00:27:29,750
what pixel I get or textile I should say

604
00:27:26,900 --> 00:27:31,250
on the feud map so it will look at which

605
00:27:29,750 --> 00:27:33,589
direction the normal is pointing

606
00:27:31,250 --> 00:27:34,970
whichever face that would have hit if

607
00:27:33,589 --> 00:27:38,779
you started in the center of the cube

608
00:27:34,970 --> 00:27:40,670
and went out it picks that face and then

609
00:27:38,779 --> 00:27:42,559
it picks the pixel but it would have or

610
00:27:40,670 --> 00:27:43,880
Texel it would have hit I should say for

611
00:27:42,559 --> 00:27:46,159
textile because it will still do a

612
00:27:43,880 --> 00:27:49,640
bilinear sample if you want to right so

613
00:27:46,160 --> 00:27:51,320
it can smoothly do it but that's a cube

614
00:27:49,640 --> 00:27:52,970
map very simple concept it's basically

615
00:27:51,319 --> 00:27:55,250
those six textures you can look up in a

616
00:27:52,970 --> 00:27:58,069
special way and the interesting thing

617
00:27:55,250 --> 00:28:02,569
about this cube map is that this cube

618
00:27:58,069 --> 00:28:04,639
map is a good way to store the inbound

619
00:28:02,569 --> 00:28:07,609
lighting at a point right because if I

620
00:28:04,640 --> 00:28:09,500
take a particular point and I rendered

621
00:28:07,609 --> 00:28:10,178
the world let's say I literally just use

622
00:28:09,500 --> 00:28:12,579
my same

623
00:28:10,179 --> 00:28:16,059
graphics pipeline to render the world in

624
00:28:12,579 --> 00:28:18,339
each of six directions I would get an

625
00:28:16,058 --> 00:28:22,778
image that told me the inbound light at

626
00:28:18,339 --> 00:28:26,109
that point right and then I can use

627
00:28:22,778 --> 00:28:28,359
these cube Maps to light something so if

628
00:28:26,109 --> 00:28:31,298
somebody's right here I can do a

629
00:28:28,359 --> 00:28:34,209
bilinear sample between my cube maps

630
00:28:31,298 --> 00:28:36,878
right I would simply say what is each of

631
00:28:34,210 --> 00:28:37,778
these cube maps say the lighting is in a

632
00:28:36,878 --> 00:28:40,298
particular direction

633
00:28:37,778 --> 00:28:44,378
if I want to know and then I just buy

634
00:28:40,298 --> 00:28:46,778
linearly filter that based on where I

635
00:28:44,378 --> 00:28:49,058
ambulators the cube maps and now I've

636
00:28:46,778 --> 00:28:52,628
got interpolated lighting it's not

637
00:28:49,058 --> 00:28:54,730
perfect but it's useful right it can

638
00:28:52,628 --> 00:28:56,829
give you a proximate lighting when you

639
00:28:54,730 --> 00:28:59,319
can afford to compute the lighting in

640
00:28:56,829 --> 00:29:01,868
certain places but not everywhere right

641
00:28:59,319 --> 00:29:03,730
and furthermore if you want to if

642
00:29:01,868 --> 00:29:05,558
depending on your circumstances if you

643
00:29:03,730 --> 00:29:06,730
have additional knowledge you can

644
00:29:05,558 --> 00:29:08,918
leverage that additional knowledge

645
00:29:06,730 --> 00:29:11,110
meaning that if you happen to know

646
00:29:08,919 --> 00:29:13,570
places where the lighting changes a lot

647
00:29:11,109 --> 00:29:16,028
you could put more cube maps down in

648
00:29:13,569 --> 00:29:19,089
that area I could more densely put them

649
00:29:16,028 --> 00:29:20,769
here for example if this were an area

650
00:29:19,089 --> 00:29:23,528
where the lighting was very finicky and

651
00:29:20,769 --> 00:29:25,499
I could leave them sparser over here

652
00:29:23,528 --> 00:29:27,909
where the lighting is maybe not so

653
00:29:25,499 --> 00:29:29,379
variable maybe there's no real there's

654
00:29:27,909 --> 00:29:31,690
no light sources over here for example

655
00:29:29,378 --> 00:29:33,158
maybe all the lights are over here and

656
00:29:31,690 --> 00:29:34,629
so the lighting changes a lot in this

657
00:29:33,159 --> 00:29:36,730
area but over here it's just kind of

658
00:29:34,628 --> 00:29:41,469
smoothly decaying so you don't really

659
00:29:36,730 --> 00:29:44,470
need to know much about it right so

660
00:29:41,470 --> 00:29:45,940
that's you know one example and you can

661
00:29:44,470 --> 00:29:47,919
see why that's that's kind of useful

662
00:29:45,940 --> 00:29:49,749
because basically what it does is even

663
00:29:47,919 --> 00:29:51,429
though that can be kind of expensive so

664
00:29:49,749 --> 00:29:55,509
obviously producing all these cube Maps

665
00:29:51,429 --> 00:29:57,700
would be expensive it is a way of

666
00:29:55,509 --> 00:30:00,700
reducing the cost down to a fixed number

667
00:29:57,700 --> 00:30:02,860
right so you can just say how many Cube

668
00:30:00,700 --> 00:30:06,639
apps can I afford to make if that number

669
00:30:02,859 --> 00:30:08,229
is 16 well I put 16 down and now my

670
00:30:06,638 --> 00:30:10,868
performance is consistent because it's

671
00:30:08,230 --> 00:30:12,639
only 16 x cube mapping whatever that

672
00:30:10,868 --> 00:30:15,699
amount of render and cube map is and

673
00:30:12,638 --> 00:30:18,459
then I know I always have a constant

674
00:30:15,700 --> 00:30:20,499
time per pixel from then on no matter

675
00:30:18,460 --> 00:30:22,140
how complicated the lighting is it's

676
00:30:20,499 --> 00:30:28,500
never going to produce more

677
00:30:22,140 --> 00:30:30,840
complicated per-pixel lighting right so

678
00:30:28,500 --> 00:30:32,039
that's a pretty interesting way to kind

679
00:30:30,839 --> 00:30:34,439
of look at lighting in the world

680
00:30:32,039 --> 00:30:36,269
certainly and it's a pretty simple

681
00:30:34,440 --> 00:30:38,340
caching mechanism right it's a way of

682
00:30:36,269 --> 00:30:41,069
sort of caching what the lights doing in

683
00:30:38,339 --> 00:30:43,079
various areas and then reusing that to

684
00:30:41,069 --> 00:30:45,629
predict you know to sort of up sample it

685
00:30:43,079 --> 00:30:47,819
so that it's as if you kind of had it in

686
00:30:45,630 --> 00:30:49,020
all the places but you don't have to

687
00:30:47,819 --> 00:30:51,029
actually compute it in all the places

688
00:30:49,019 --> 00:30:53,579
will it be accurate no will it be good

689
00:30:51,029 --> 00:30:55,440
enough probably now the interesting

690
00:30:53,579 --> 00:30:56,879
thing about this though is that it

691
00:30:55,440 --> 00:30:59,309
doesn't solve the problem completely

692
00:30:56,880 --> 00:31:01,080
it's just a step in solving the problem

693
00:30:59,309 --> 00:31:03,359
it's a way to cache intermediate

694
00:31:01,079 --> 00:31:04,529
lighting information that the useful

695
00:31:03,359 --> 00:31:06,149
might be useful for us some handmade

696
00:31:04,529 --> 00:31:09,660
here us useful be aware of this kind of

697
00:31:06,150 --> 00:31:12,000
game certainly and why does it only

698
00:31:09,660 --> 00:31:15,120
solve part of the problem well part of

699
00:31:12,000 --> 00:31:17,970
the problem that we have here on

700
00:31:15,119 --> 00:31:22,769
handmade hero is we don't have a pre

701
00:31:17,970 --> 00:31:26,549
pass so a lot of times where you'll see

702
00:31:22,769 --> 00:31:29,940
light probing being used it doesn't

703
00:31:26,549 --> 00:31:32,490
solve the problem completely right you

704
00:31:29,940 --> 00:31:34,620
know if you have a game ask us today it

705
00:31:32,490 --> 00:31:35,490
might be that that solves completely why

706
00:31:34,619 --> 00:31:39,299
is that solve the problem completely

707
00:31:35,490 --> 00:31:42,599
well because you have an offline step so

708
00:31:39,299 --> 00:31:46,950
what will often happen in a more simple

709
00:31:42,599 --> 00:31:49,889
renderer for example is that the level

710
00:31:46,950 --> 00:31:54,150
designers create levels those levels are

711
00:31:49,890 --> 00:31:55,710
baked offline and some scheme that

712
00:31:54,150 --> 00:31:58,950
actually does accurate lighting

713
00:31:55,710 --> 00:32:02,009
computation produces cube maps for these

714
00:31:58,950 --> 00:32:05,340
light probes so for example you will go

715
00:32:02,009 --> 00:32:07,619
okay done with the level baked the

716
00:32:05,339 --> 00:32:12,959
lighting it'll go around dropping cube

717
00:32:07,619 --> 00:32:15,239
maps down it will do a raytrace render

718
00:32:12,960 --> 00:32:17,940
to calculate what the lighting is at

719
00:32:15,240 --> 00:32:21,240
each textile in the cube map using some

720
00:32:17,940 --> 00:32:24,240
kind of a ray tracing scheme and then

721
00:32:21,240 --> 00:32:25,829
when you go to run the game you have all

722
00:32:24,240 --> 00:32:27,750
the information you need you just got

723
00:32:25,829 --> 00:32:29,429
these cube maps that tell you what the

724
00:32:27,750 --> 00:32:31,380
lighting is and the only problem is you

725
00:32:29,430 --> 00:32:33,420
can't really do dynamic lighting with

726
00:32:31,380 --> 00:32:34,890
that so you have to compensate by adding

727
00:32:33,420 --> 00:32:36,900
the dynamic lighting in somehow

728
00:32:34,890 --> 00:32:38,280
now but since those are usually minor

729
00:32:36,900 --> 00:32:40,110
for these types of games which have

730
00:32:38,279 --> 00:32:41,399
usually don't have that many moving

731
00:32:40,109 --> 00:32:42,779
light sources or if they do they're like

732
00:32:41,400 --> 00:32:45,170
explosions or things that don't actually

733
00:32:42,779 --> 00:32:48,000
super accurate they're just temporary

734
00:32:45,170 --> 00:32:49,800
that solves the problem right because

735
00:32:48,000 --> 00:32:52,109
the offline version can just use

736
00:32:49,799 --> 00:32:54,059
whatever slow random ray tracing thing

737
00:32:52,109 --> 00:32:56,909
you want and the online version just has

738
00:32:54,059 --> 00:33:01,829
the cube maps that it needs and that's

739
00:32:56,910 --> 00:33:03,960
all good the problem with our situation

740
00:33:01,829 --> 00:33:07,740
is we don't have any ability to do

741
00:33:03,960 --> 00:33:09,509
offline lighting so we still have the

742
00:33:07,740 --> 00:33:11,400
problem of how to produce the lighting

743
00:33:09,509 --> 00:33:14,640
in the first place and this is a real

744
00:33:11,400 --> 00:33:16,259
problem it's a real problem because we

745
00:33:14,640 --> 00:33:18,000
don't know what the lighting of the

746
00:33:16,259 --> 00:33:20,309
scene is until we create the lighting of

747
00:33:18,000 --> 00:33:22,130
the scene this is the eternal problem of

748
00:33:20,309 --> 00:33:24,779
ray tracing it sounds like a circular

749
00:33:22,130 --> 00:33:26,610
statement but it is a circular problem

750
00:33:24,779 --> 00:33:29,460
the statement is accurate what do I mean

751
00:33:26,609 --> 00:33:34,529
by Matt well ok let's think about this

752
00:33:29,460 --> 00:33:38,819
for a second I've got two surfaces there

753
00:33:34,529 --> 00:33:41,759
in the world here is surface a and here

754
00:33:38,819 --> 00:33:45,109
is surface B right and I just said what

755
00:33:41,759 --> 00:33:48,150
I want to do is I want to create a

756
00:33:45,109 --> 00:33:50,669
hemisphere of incident light so that I

757
00:33:48,150 --> 00:33:53,250
can light this surface properly and hey

758
00:33:50,670 --> 00:33:53,880
guess what I also want that over here

759
00:33:53,250 --> 00:33:56,309
right

760
00:33:53,880 --> 00:33:58,080
I want a hemisphere of incident light so

761
00:33:56,309 --> 00:33:59,519
I can figure out what the lighting of

762
00:33:58,079 --> 00:34:00,000
this surface is in any particular

763
00:33:59,519 --> 00:34:03,450
direction

764
00:34:00,000 --> 00:34:05,460
well I start by saying ok I'm going to

765
00:34:03,450 --> 00:34:07,319
create that for surface a I need to

766
00:34:05,460 --> 00:34:09,780
create a hemisphere of incident light

767
00:34:07,319 --> 00:34:10,860
let's see what the incident light is in

768
00:34:09,780 --> 00:34:12,929
this direction

769
00:34:10,860 --> 00:34:15,809
well hey guess what in that direction

770
00:34:12,929 --> 00:34:18,780
the light comes from light reflected off

771
00:34:15,809 --> 00:34:20,969
of surface B ok what's the color of

772
00:34:18,780 --> 00:34:23,159
surface B what colour light and how

773
00:34:20,969 --> 00:34:24,839
bright does it reflect in that direction

774
00:34:23,159 --> 00:34:28,140
that's the information I need to know

775
00:34:24,840 --> 00:34:30,390
right well in order to do that I've got

776
00:34:28,139 --> 00:34:32,219
to produce a hemisphere of light let's

777
00:34:30,389 --> 00:34:33,599
produce a hemisphere of light well in

778
00:34:32,219 --> 00:34:36,389
order to produce atmosphere of light I

779
00:34:33,599 --> 00:34:38,039
need to know what light came in from

780
00:34:36,389 --> 00:34:40,349
this direction what light comes in that

781
00:34:38,039 --> 00:34:41,039
direction well it's whatever a reflected

782
00:34:40,349 --> 00:34:43,049
in that direction

783
00:34:41,039 --> 00:34:44,550
okay let's compute what a reflects in

784
00:34:43,050 --> 00:34:46,560
that direction in order to do that I

785
00:34:44,550 --> 00:34:48,010
have to produce a hemisphere of light in

786
00:34:46,559 --> 00:34:50,380
order to produce atmosphere of light I

787
00:34:48,010 --> 00:34:52,690
have to know what light is incident on a

788
00:34:50,380 --> 00:34:56,050
for example in this direction and it's B

789
00:34:52,690 --> 00:35:01,659
na NB n a and B na and it wouldn't even

790
00:34:56,050 --> 00:35:04,710
ever terminate right so one of the

791
00:35:01,659 --> 00:35:08,710
classic problems of light transport is

792
00:35:04,710 --> 00:35:11,679
very specifically that because the

793
00:35:08,710 --> 00:35:13,809
real-world activity of light is a bunch

794
00:35:11,679 --> 00:35:15,789
of photons that bounce around the room

795
00:35:13,809 --> 00:35:20,110
ad infinitum until they hit something

796
00:35:15,789 --> 00:35:24,460
like an eye or a camera or get absorbed

797
00:35:20,110 --> 00:35:26,860
by a surface it's incredibly difficult

798
00:35:24,460 --> 00:35:29,829
to produce the initial lighting for a

799
00:35:26,860 --> 00:35:34,000
scene because it's a very dynamic highly

800
00:35:29,829 --> 00:35:37,569
diffusive process that really defies any

801
00:35:34,000 --> 00:35:39,639
kind of exhausted computation you cannot

802
00:35:37,570 --> 00:35:42,430
simulate the lighting for a scene in

803
00:35:39,639 --> 00:35:44,409
reality photon tracing just doesn't work

804
00:35:42,429 --> 00:35:45,909
there's been scheme to do it but it's

805
00:35:44,409 --> 00:35:53,289
just it's way too expensive the number

806
00:35:45,909 --> 00:35:54,819
of photons you have to shoot and so any

807
00:35:53,289 --> 00:35:58,360
photon scheme that has ever really done

808
00:35:54,820 --> 00:36:04,090
anything useful massively approximates

809
00:35:58,360 --> 00:36:09,030
the photons in a lot of ways right so

810
00:36:04,090 --> 00:36:13,030
what we need is some way of producing a

811
00:36:09,030 --> 00:36:16,690
very approximated solution that is still

812
00:36:13,030 --> 00:36:18,850
related to the actual solution that

813
00:36:16,690 --> 00:36:20,260
involves this sort of infinite bouncing

814
00:36:18,849 --> 00:36:22,739
of things around and infinite's the

815
00:36:20,260 --> 00:36:25,300
wrong word it's not really infinite

816
00:36:22,739 --> 00:36:27,279
because obviously photons don't bounce

817
00:36:25,300 --> 00:36:29,950
around forever eventually they get

818
00:36:27,280 --> 00:36:31,990
absorbed somewhere but if you ever have

819
00:36:29,949 --> 00:36:34,089
held two mirrors up next to each other

820
00:36:31,989 --> 00:36:36,369
and seen the sort of what appears to be

821
00:36:34,090 --> 00:36:38,289
an infinite copy of images well that's

822
00:36:36,369 --> 00:36:42,099
how many times those photons were

823
00:36:38,289 --> 00:36:44,380
bouncing back and forth right so while

824
00:36:42,099 --> 00:36:45,730
it's not infinite in the real sense of

825
00:36:44,380 --> 00:36:48,250
the word infinite it's certainly

826
00:36:45,730 --> 00:36:49,630
infinite related to today's computing

827
00:36:48,250 --> 00:36:51,400
power because when you think about how

828
00:36:49,630 --> 00:36:53,289
many billions of photons there are or

829
00:36:51,400 --> 00:36:56,079
trillions of photons that are bouncing

830
00:36:53,289 --> 00:36:58,869
around the scene and the fact that some

831
00:36:56,079 --> 00:37:01,569
of them may bounce hundreds thousands I

832
00:36:58,869 --> 00:37:02,980
don't know millions of times

833
00:37:01,570 --> 00:37:04,539
before they're absorbed I don't know

834
00:37:02,980 --> 00:37:07,420
what's the average life of a photon is

835
00:37:04,539 --> 00:37:10,630
in that sense from a light source but

836
00:37:07,420 --> 00:37:12,789
it's a lot this it's just it's a

837
00:37:10,630 --> 00:37:14,740
completely intractable problem in terms

838
00:37:12,789 --> 00:37:16,269
of the computing resources we have so

839
00:37:14,739 --> 00:37:20,199
what we're typically trying to figure

840
00:37:16,269 --> 00:37:22,809
out is what are approximate algorithms

841
00:37:20,199 --> 00:37:24,579
we can use that tend to get similar

842
00:37:22,809 --> 00:37:26,139
results as what would happen if you

843
00:37:24,579 --> 00:37:28,329
bounced all the hotels around like that

844
00:37:26,139 --> 00:37:31,739
but but absolutely in no way involved

845
00:37:28,329 --> 00:37:34,449
bouncing those jumps around like that

846
00:37:31,739 --> 00:37:39,849
and so the typical way that these are

847
00:37:34,449 --> 00:37:48,669
solved offline is always what are called

848
00:37:39,849 --> 00:37:50,529
Monte Carlo schemes and Monte Carlo

849
00:37:48,670 --> 00:37:53,320
schemes that it's called Monte Carlo

850
00:37:50,530 --> 00:37:56,800
integration and really obviously Monte

851
00:37:53,320 --> 00:38:00,700
Carlo refers to sort of the gambling

852
00:37:56,800 --> 00:38:03,100
aspect of it but really all that it

853
00:38:00,699 --> 00:38:05,859
means is they're randomized integration

854
00:38:03,099 --> 00:38:07,719
schemes what randomized integration

855
00:38:05,860 --> 00:38:10,930
schemes are is they're saying well ok so

856
00:38:07,719 --> 00:38:13,079
I've got some function that I know is

857
00:38:10,929 --> 00:38:16,599
simply impossible for me to actually

858
00:38:13,079 --> 00:38:18,369
compute right so for example in this

859
00:38:16,599 --> 00:38:22,230
case we're talking my integration we

860
00:38:18,369 --> 00:38:26,529
have an integral right over a hemisphere

861
00:38:22,230 --> 00:38:28,960
and we know that there's no closed-form

862
00:38:26,530 --> 00:38:32,010
way to produce that integral we can't

863
00:38:28,960 --> 00:38:35,650
even sample the integral densely enough

864
00:38:32,010 --> 00:38:37,360
forget it because at every every

865
00:38:35,650 --> 00:38:39,280
function that goes out from the

866
00:38:37,360 --> 00:38:41,760
hemisphere itself bounces around on

867
00:38:39,280 --> 00:38:45,190
hemispheres so the dimensionality of

868
00:38:41,760 --> 00:38:46,690
this function is just huge is to forget

869
00:38:45,190 --> 00:38:50,710
right there's no way we can even

870
00:38:46,690 --> 00:38:55,030
consider solving it directly so don't

871
00:38:50,710 --> 00:38:56,559
try and what these schemes you know the

872
00:38:55,030 --> 00:38:58,420
reason that they're called amount of

873
00:38:56,559 --> 00:39:00,670
concentration schemes is because what

874
00:38:58,420 --> 00:39:02,650
they do is say well ok if we have

875
00:39:00,670 --> 00:39:07,599
something that's too high dimensional

876
00:39:02,650 --> 00:39:11,889
for us to really solve we can still take

877
00:39:07,599 --> 00:39:13,869
randomised samples and combine them in

878
00:39:11,889 --> 00:39:14,829
ways that produce an approximate result

879
00:39:13,869 --> 00:39:16,900
and that's what

880
00:39:14,829 --> 00:39:20,159
pretty much all high end rate racers

881
00:39:16,900 --> 00:39:23,230
these days are they are all Monte Carlo

882
00:39:20,159 --> 00:39:27,039
integration schemes and they range from

883
00:39:23,230 --> 00:39:30,699
incredibly stupid such as pure Monte

884
00:39:27,039 --> 00:39:34,300
Carlo like pure random selection of rays

885
00:39:30,699 --> 00:39:36,069
with only a slight buy the only real

886
00:39:34,300 --> 00:39:37,420
modification being looking at the

887
00:39:36,070 --> 00:39:39,190
lighting equation for the surface and

888
00:39:37,420 --> 00:39:40,630
biasing in directions where the lighting

889
00:39:39,190 --> 00:39:44,260
contribution is going to be the highest

890
00:39:40,630 --> 00:39:46,180
right that's about it

891
00:39:44,260 --> 00:39:48,510
so those are like kind of more pure

892
00:39:46,179 --> 00:39:52,210
Monte Carlo pure random I should say

893
00:39:48,510 --> 00:39:53,770
integration schemes all the way to ones

894
00:39:52,210 --> 00:39:55,480
that are actually incredibly

895
00:39:53,769 --> 00:39:57,340
sophisticated and complicated to

896
00:39:55,480 --> 00:40:01,840
understand such as metropolis light

897
00:39:57,340 --> 00:40:05,019
transport or metropolis manifold tracing

898
00:40:01,840 --> 00:40:08,920
things like this that involve very

899
00:40:05,019 --> 00:40:12,159
complicated analysis of how paths behave

900
00:40:08,920 --> 00:40:13,809
and how we can assign probabilities and

901
00:40:12,159 --> 00:40:15,909
properly combine probabilities along

902
00:40:13,809 --> 00:40:17,980
those paths to produce the highest

903
00:40:15,909 --> 00:40:19,359
accuracy integrals that we can and know

904
00:40:17,980 --> 00:40:21,099
that will always converge to a fair

905
00:40:19,360 --> 00:40:24,880
solution no matter how many samples we

906
00:40:21,099 --> 00:40:26,739
take and bla bla bla bla bla right so

907
00:40:24,880 --> 00:40:28,930
there's a wide range of these schemes

908
00:40:26,739 --> 00:40:32,409
that they all boil down to basically the

909
00:40:28,929 --> 00:40:34,690
same concept which is that we know we

910
00:40:32,409 --> 00:40:37,029
can't actually sample the function

911
00:40:34,690 --> 00:40:38,440
densely enough to produce an answer so

912
00:40:37,030 --> 00:40:41,140
instead what we're going to do is

913
00:40:38,440 --> 00:40:43,059
randomly sample it and we'll just try to

914
00:40:41,139 --> 00:40:45,639
come up with schemes that put those

915
00:40:43,059 --> 00:40:50,739
random samples to the best use possible

916
00:40:45,639 --> 00:40:52,389
but that's all we're doing right so that

917
00:40:50,739 --> 00:40:55,029
tends to be how these things are worked

918
00:40:52,389 --> 00:40:56,739
out and so the answer to the question of

919
00:40:55,030 --> 00:40:59,230
how do you solve a problem where the

920
00:40:56,739 --> 00:41:01,809
light bounces around infinitely the

921
00:40:59,230 --> 00:41:05,110
answer is you just kind of use a

922
00:41:01,809 --> 00:41:08,049
termination criteria so what will

923
00:41:05,110 --> 00:41:10,780
typically happen in this situation for

924
00:41:08,050 --> 00:41:15,550
example is what you'll say is all right

925
00:41:10,780 --> 00:41:17,830
let's pick because of the the Montecarlo

926
00:41:15,550 --> 00:41:20,800
nature let's pick a number of bounces

927
00:41:17,829 --> 00:41:23,139
ahead of time out of a hat sort of if

928
00:41:20,800 --> 00:41:27,430
you will right so we'll say that this is

929
00:41:23,139 --> 00:41:28,900
going to be a 7 bounce pass right we

930
00:41:27,429 --> 00:41:31,059
pick 7 out of a hat

931
00:41:28,900 --> 00:41:32,050
random number why did we take it out of

932
00:41:31,059 --> 00:41:34,090
a hat

933
00:41:32,050 --> 00:41:38,350
well if we didn't pick it out of a hat

934
00:41:34,090 --> 00:41:40,809
we would be biasing ourselves towards a

935
00:41:38,349 --> 00:41:42,880
particular number of bounces which will

936
00:41:40,809 --> 00:41:44,679
affect the lighting solution so if we

937
00:41:42,880 --> 00:41:46,630
want to try and produce a fair lighting

938
00:41:44,679 --> 00:41:48,699
solution we need to pick everything

939
00:41:46,630 --> 00:41:50,289
randomly right and this is an

940
00:41:48,699 --> 00:41:52,509
interesting aspect of Monte Carlo

941
00:41:50,289 --> 00:41:54,550
generation that I'm not really qualified

942
00:41:52,510 --> 00:41:56,890
even to give you a good explanation of

943
00:41:54,550 --> 00:41:59,260
it I don't study probabilistic light

944
00:41:56,889 --> 00:42:02,589
transport and it's a very touchy field

945
00:41:59,260 --> 00:42:04,510
so I it's easy to think you wrote an

946
00:42:02,590 --> 00:42:09,789
unbiased Monte Carlo integration

947
00:42:04,510 --> 00:42:11,020
renderer and you didn't so I will leave

948
00:42:09,789 --> 00:42:14,429
that kind of explanation for the

949
00:42:11,019 --> 00:42:16,750
exercise simply say that you need to

950
00:42:14,429 --> 00:42:17,919
study this stuff a little more carefully

951
00:42:16,750 --> 00:42:20,800
and make sure that when you are

952
00:42:17,920 --> 00:42:23,079
producing a ray tracer of this nature

953
00:42:20,800 --> 00:42:24,940
you have to really understand where you

954
00:42:23,079 --> 00:42:27,190
might introduce bias into the system

955
00:42:24,940 --> 00:42:30,309
bias of course will then produce you

956
00:42:27,190 --> 00:42:32,470
know brighter or darker images in places

957
00:42:30,309 --> 00:42:34,299
and things like this because you have

958
00:42:32,469 --> 00:42:37,239
biased towards a particular type of

959
00:42:34,300 --> 00:42:38,950
solution that is not really fairly

960
00:42:37,239 --> 00:42:42,669
sampling the high dimensional integral

961
00:42:38,949 --> 00:42:45,159
in a truly random way because the truly

962
00:42:42,670 --> 00:42:47,889
random way of sampling it of course will

963
00:42:45,159 --> 00:42:50,139
not bias it it will produce on average

964
00:42:47,889 --> 00:42:54,460
the correct result this is why we talk

965
00:42:50,139 --> 00:43:01,359
about you'll often see is this an

966
00:42:54,460 --> 00:43:04,329
unbiased or biased right renderer and

967
00:43:01,360 --> 00:43:09,970
these are terms used more or less

968
00:43:04,329 --> 00:43:12,279
exclusively in the offline or some some

969
00:43:09,969 --> 00:43:15,819
of our not our kind of sort of off-white

970
00:43:12,280 --> 00:43:23,680
like Brigade from octane for example is

971
00:43:15,820 --> 00:43:26,160
a real-time ish ray tracer that uh sorry

972
00:43:23,679 --> 00:43:29,710
not from what they call their hello toy

973
00:43:26,159 --> 00:43:34,059
OTO why I think octane is a real-time

974
00:43:29,710 --> 00:43:36,940
ray tracer for example that is tries to

975
00:43:34,059 --> 00:43:38,409
be I think largely unbiased I don't know

976
00:43:36,940 --> 00:43:42,599
if it actually succeeds what I think it

977
00:43:38,409 --> 00:43:42,599
does but anyway so these things are uh

978
00:43:42,619 --> 00:43:49,960
are used largely because in the offline

979
00:43:47,150 --> 00:43:52,430
world you actually care about converging

980
00:43:49,960 --> 00:43:53,960
reasonably after some number of samples

981
00:43:52,429 --> 00:43:57,679
to a solution that correctly

982
00:43:53,960 --> 00:43:59,659
approximates the light on average a bias

983
00:43:57,679 --> 00:44:02,598
render will not necessarily do that an

984
00:43:59,659 --> 00:44:04,190
unbiased renderer will the way to look

985
00:44:02,599 --> 00:44:05,390
at this probably and this is kind of

986
00:44:04,190 --> 00:44:10,159
getting a little off-topic here

987
00:44:05,389 --> 00:44:16,748
certainly but if you imagine I'll give

988
00:44:10,159 --> 00:44:20,899
you a case here's two graphs suppose

989
00:44:16,748 --> 00:44:23,598
that this is the brightness that a

990
00:44:20,900 --> 00:44:29,298
particular pixels would be in either

991
00:44:23,599 --> 00:44:31,400
case so this brightness is some number

992
00:44:29,298 --> 00:44:36,199
of lumens right some color value

993
00:44:31,400 --> 00:44:40,548
whatever it is if I am a unbiased

994
00:44:36,199 --> 00:44:42,649
renderer then as I take samples to

995
00:44:40,548 --> 00:44:47,989
produce my solution for a particular

996
00:44:42,650 --> 00:44:54,278
pixel my my lighting value looks like

997
00:44:47,989 --> 00:44:57,559
this right my lighting value sort of

998
00:44:54,278 --> 00:45:00,798
converges on the correct sample on

999
00:44:57,559 --> 00:45:04,009
average so as I take samples they're

1000
00:45:00,798 --> 00:45:11,838
going to be you know and is that's

1001
00:45:04,009 --> 00:45:13,909
probably the wrong way to do it right so

1002
00:45:11,838 --> 00:45:17,088
as I go through this I'm going to kind

1003
00:45:13,909 --> 00:45:19,338
of narrow in I'm going to start off kind

1004
00:45:17,088 --> 00:45:21,440
of wrong and then as I take more samples

1005
00:45:19,338 --> 00:45:24,980
I'm going to converge on average towards

1006
00:45:21,440 --> 00:45:28,548
the correct solution right on the other

1007
00:45:24,980 --> 00:45:32,748
hand a bias renderer usually looks more

1008
00:45:28,548 --> 00:45:35,088
like this right eventually we'll get to

1009
00:45:32,748 --> 00:45:37,639
the correct answer but it starts off in

1010
00:45:35,088 --> 00:45:39,940
the wrong direction and is never going

1011
00:45:37,639 --> 00:45:42,048
to be on the other side of the wrong

1012
00:45:39,940 --> 00:45:44,539
it's never going to be wrong in the

1013
00:45:42,048 --> 00:45:46,248
other way so it tends to be wrong like

1014
00:45:44,539 --> 00:45:48,319
strictly undervaluing or strictly

1015
00:45:46,248 --> 00:45:50,389
overvaluing the lighting contribution at

1016
00:45:48,318 --> 00:45:52,489
a pixel and then the more samples you

1017
00:45:50,389 --> 00:45:56,440
take it may eventually converge to the

1018
00:45:52,489 --> 00:46:00,440
right result but it will

1019
00:45:56,440 --> 00:46:01,849
always approach from one side now you

1020
00:46:00,440 --> 00:46:03,829
may ask why you would care about this

1021
00:46:01,849 --> 00:46:05,420
the reason you would care about this is

1022
00:46:03,829 --> 00:46:08,480
because if you look at an unbiased

1023
00:46:05,420 --> 00:46:10,548
rendered image because you know that

1024
00:46:08,480 --> 00:46:12,199
you're taking random samples and you're

1025
00:46:10,548 --> 00:46:15,469
going to go like this

1026
00:46:12,199 --> 00:46:18,469
a rather the two random samples are

1027
00:46:15,469 --> 00:46:21,889
truly distributed around the the

1028
00:46:18,469 --> 00:46:23,689
lighting of the of the point what you're

1029
00:46:21,889 --> 00:46:25,818
going to see on the screen is a true

1030
00:46:23,690 --> 00:46:27,559
representation at all times of the

1031
00:46:25,818 --> 00:46:30,230
lighting it's just going to be very

1032
00:46:27,559 --> 00:46:33,319
noisy and as you take more samples the

1033
00:46:30,230 --> 00:46:34,818
noise will go away so you'll start with

1034
00:46:33,318 --> 00:46:37,038
an image that looks like the correct

1035
00:46:34,818 --> 00:46:40,278
image but it's very noisy and it will

1036
00:46:37,039 --> 00:46:42,710
get less and less less noisy why because

1037
00:46:40,278 --> 00:46:44,358
any two neighboring pixels while they

1038
00:46:42,710 --> 00:46:46,249
will both be quite wrong at the

1039
00:46:44,358 --> 00:46:48,909
beginning they will be quite wrong in

1040
00:46:46,248 --> 00:46:51,288
opposite directions potentially right

1041
00:46:48,909 --> 00:46:52,969
and not only in opposite directions but

1042
00:46:51,289 --> 00:46:54,980
different magnitudes right because

1043
00:46:52,969 --> 00:46:57,318
you're all over the place on the other

1044
00:46:54,980 --> 00:46:59,239
hand a biased version will just be like

1045
00:46:57,318 --> 00:47:01,579
a really over bright image the whole

1046
00:46:59,239 --> 00:47:03,559
image will be over bright or the whole

1047
00:47:01,579 --> 00:47:07,309
image will be dark and then it will get

1048
00:47:03,559 --> 00:47:10,039
brighter as it goes right so at no time

1049
00:47:07,309 --> 00:47:12,410
until the final convergence will you

1050
00:47:10,039 --> 00:47:14,450
ever really see an accurate version of

1051
00:47:12,409 --> 00:47:16,219
the image the reason this is kind of

1052
00:47:14,449 --> 00:47:17,899
nice is because a you can stop at any

1053
00:47:16,219 --> 00:47:19,699
time and have an image that looks sort

1054
00:47:17,900 --> 00:47:22,849
of right it's just much more noisy than

1055
00:47:19,699 --> 00:47:25,480
it should be and be it helps pretty well

1056
00:47:22,849 --> 00:47:27,890
with previewing because even the first

1057
00:47:25,480 --> 00:47:29,358
thing that comes up on the screen after

1058
00:47:27,889 --> 00:47:31,639
very little computation time with an

1059
00:47:29,358 --> 00:47:33,469
unbiased render is at least sort of

1060
00:47:31,639 --> 00:47:35,778
representative of the overall image

1061
00:47:33,469 --> 00:47:38,449
lighting right whereas this one may be

1062
00:47:35,778 --> 00:47:40,248
nothing like it you may start the render

1063
00:47:38,449 --> 00:47:41,629
and it appears like you can't see hardly

1064
00:47:40,248 --> 00:47:43,368
anything at all and it's way too dark

1065
00:47:41,630 --> 00:47:45,410
like ah should crank up the light values

1066
00:47:43,369 --> 00:47:47,930
but in reality if you'd let it run to

1067
00:47:45,409 --> 00:47:50,389
completion after seven hours it would

1068
00:47:47,929 --> 00:47:51,949
have been quite bright and fine that's

1069
00:47:50,389 --> 00:47:55,578
not something that will happen with an

1070
00:47:51,949 --> 00:47:56,899
unbiased renderer right all right so

1071
00:47:55,579 --> 00:47:59,390
again sorry to get too far off topic

1072
00:47:56,900 --> 00:48:00,499
there just was try to like touch on

1073
00:47:59,389 --> 00:48:02,629
various subjects when we talk about

1074
00:48:00,498 --> 00:48:04,788
things so that people who are interested

1075
00:48:02,630 --> 00:48:07,369
in various s with us know that the stuff

1076
00:48:04,789 --> 00:48:08,190
out there that they can go read about or

1077
00:48:07,369 --> 00:48:09,420
find out about it

1078
00:48:08,190 --> 00:48:12,750
something that sounds interesting to

1079
00:48:09,420 --> 00:48:15,750
them okay so you know given that we've

1080
00:48:12,750 --> 00:48:17,010
got this situation let me go back to

1081
00:48:15,750 --> 00:48:18,719
what I was really trying playing which

1082
00:48:17,010 --> 00:48:21,359
is how do you how do you break this

1083
00:48:18,719 --> 00:48:23,399
problem like how this seems kind of some

1084
00:48:21,358 --> 00:48:25,980
you know like a relatively intractable

1085
00:48:23,400 --> 00:48:28,260
problem how are we ever going to fix

1086
00:48:25,980 --> 00:48:29,250
this infinite bounce nastiness of not

1087
00:48:28,260 --> 00:48:33,089
knowing what to do

1088
00:48:29,250 --> 00:48:34,769
well Monte Carlo sound sells this rather

1089
00:48:33,088 --> 00:48:37,828
nicely by saying we'll just pick a

1090
00:48:34,769 --> 00:48:39,119
number of bounces ahead of time who

1091
00:48:37,829 --> 00:48:41,609
knows what it is it's just any number

1092
00:48:39,119 --> 00:48:42,690
about this does not matter and then what

1093
00:48:41,608 --> 00:48:45,058
we're going to do you know here's my

1094
00:48:42,690 --> 00:48:48,119
services in the world here's my camera

1095
00:48:45,059 --> 00:48:50,130
or whatever is we're just going to do it

1096
00:48:48,119 --> 00:48:53,579
right we're just going to say all right

1097
00:48:50,130 --> 00:48:57,180
send it out that's a really bad light

1098
00:48:53,579 --> 00:48:59,609
ray there we go send it out right bounce

1099
00:48:57,179 --> 00:49:07,199
it around when I pick seven right so

1100
00:48:59,608 --> 00:49:11,639
seven one two three four five six right

1101
00:49:07,199 --> 00:49:13,649
there's my light pass and now I'm here

1102
00:49:11,639 --> 00:49:16,379
and I know that this will be a seven

1103
00:49:13,650 --> 00:49:20,430
bounce pass so what do I do now I go

1104
00:49:16,380 --> 00:49:22,858
where is an actual emitter right where

1105
00:49:20,429 --> 00:49:25,318
is a light source and now trace to the

1106
00:49:22,858 --> 00:49:27,929
light source and now I have picked on

1107
00:49:25,318 --> 00:49:31,139
that seventh bounce I've connected it up

1108
00:49:27,929 --> 00:49:34,649
I've connected the AI with the light and

1109
00:49:31,139 --> 00:49:39,269
can compute a lighting contribution for

1110
00:49:34,650 --> 00:49:41,160
this path right so that's the way you

1111
00:49:39,269 --> 00:49:42,119
break it is yes these things can bounce

1112
00:49:41,159 --> 00:49:43,920
around forever

1113
00:49:42,119 --> 00:49:45,900
but if we pre pick ahead of time

1114
00:49:43,920 --> 00:49:48,000
basically a kill number where we

1115
00:49:45,900 --> 00:49:50,278
basically say after this number of

1116
00:49:48,000 --> 00:49:54,028
bounces we will specifically target the

1117
00:49:50,278 --> 00:49:55,798
light source and see what's there that's

1118
00:49:54,028 --> 00:49:58,289
the way that you break that cycle

1119
00:49:55,798 --> 00:49:59,759
now again doing that in a very in an

1120
00:49:58,289 --> 00:50:01,980
unbiased way can be very difficult

1121
00:49:59,760 --> 00:50:03,420
because the fact that you're picking

1122
00:50:01,980 --> 00:50:06,630
intentionally something is the light

1123
00:50:03,420 --> 00:50:09,108
source at some point can be rough but

1124
00:50:06,630 --> 00:50:10,650
again you know that's sort of a separate

1125
00:50:09,108 --> 00:50:13,108
topic of study

1126
00:50:10,650 --> 00:50:15,329
similarly enough they can do is at every

1127
00:50:13,108 --> 00:50:17,130
bounce you can check the light source so

1128
00:50:15,329 --> 00:50:19,289
I could say every time I hit a surface

1129
00:50:17,130 --> 00:50:20,820
let me see what the light source would

1130
00:50:19,289 --> 00:50:24,280
contribute to the surface

1131
00:50:20,820 --> 00:50:26,559
we'll add that in then I'll do the

1132
00:50:24,280 --> 00:50:28,269
bounce and then I'll do the light right

1133
00:50:26,559 --> 00:50:29,920
and I'll keep doing that for every

1134
00:50:28,269 --> 00:50:31,630
bounce I'll figure out what the lytic

1135
00:50:29,920 --> 00:50:36,159
contribution is for the partial path as

1136
00:50:31,630 --> 00:50:38,349
well right and so in this way you just

1137
00:50:36,159 --> 00:50:40,359
build up a collection of light path

1138
00:50:38,349 --> 00:50:43,449
contributions throughout the scene and

1139
00:50:40,360 --> 00:50:45,220
that gives you an approximation to what

1140
00:50:43,449 --> 00:50:47,649
the light is actually doing that is good

1141
00:50:45,219 --> 00:50:51,699
enough for full lighting now if you want

1142
00:50:47,650 --> 00:50:54,190
to see these in action again because

1143
00:50:51,699 --> 00:50:56,710
we're not writing a one of these because

1144
00:50:54,190 --> 00:50:58,450
we can't actually really write one

1145
00:50:56,710 --> 00:51:01,510
because we need something that runs in

1146
00:50:58,449 --> 00:51:05,069
real time unreasonable hardware but you

1147
00:51:01,510 --> 00:51:15,190
can take a look at say Maxwell render

1148
00:51:05,070 --> 00:51:17,610
and octane render here are some sort of

1149
00:51:15,190 --> 00:51:21,010
more state-of-the-art offline renders

1150
00:51:17,610 --> 00:51:24,809
and you can take a look at what they

1151
00:51:21,010 --> 00:51:28,360
look like I don't know if there's a good

1152
00:51:24,809 --> 00:51:30,400
you can you can kind of see the kinds of

1153
00:51:28,360 --> 00:51:32,380
images they produce here obviously I

1154
00:51:30,400 --> 00:51:35,200
don't know if we've got me here well

1155
00:51:32,380 --> 00:51:38,710
here's a demo oh wait no oh

1156
00:51:35,199 --> 00:51:40,659
so you can actually try these I guess

1157
00:51:38,710 --> 00:51:41,500
right I don't even know what this is

1158
00:51:40,659 --> 00:51:43,239
going to do this is probably going to

1159
00:51:41,500 --> 00:51:45,599
crash my machine I don't really want to

1160
00:51:43,239 --> 00:51:48,699
do that I would rather just see a video

1161
00:51:45,599 --> 00:51:56,429
here let's see if octane render has a

1162
00:51:48,699 --> 00:51:56,429
youtube video let's see here

1163
00:51:56,800 --> 00:52:02,019
go ahead and just mute the sound here so

1164
00:52:00,400 --> 00:52:04,900
here's somebody running octane render on

1165
00:52:02,019 --> 00:52:06,579
a machine that's really beefy right but

1166
00:52:04,900 --> 00:52:09,070
you can see that you know it's pretty

1167
00:52:06,579 --> 00:52:10,599
fast right here's Tim pushing the or

1168
00:52:09,070 --> 00:52:16,120
whoever this person is going over they

1169
00:52:10,599 --> 00:52:17,529
are pressing the render button and yeah

1170
00:52:16,119 --> 00:52:19,329
you could you can see them kind of drag

1171
00:52:17,530 --> 00:52:21,220
the scene around right and you can see

1172
00:52:19,329 --> 00:52:22,900
that you know with that kind of GPU

1173
00:52:21,219 --> 00:52:24,579
power it computes the lighting pretty

1174
00:52:22,900 --> 00:52:26,440
quickly and you can also see like I was

1175
00:52:24,579 --> 00:52:28,000
saying how it kind of like it starts off

1176
00:52:26,440 --> 00:52:29,800
pretty noisy and then converge a little

1177
00:52:28,000 --> 00:52:31,690
bit I don't know if this is an unbiased

1178
00:52:29,800 --> 00:52:33,640
render it looks to me like it starts off

1179
00:52:31,690 --> 00:52:36,039
a little dark obviously so it might be

1180
00:52:33,639 --> 00:52:37,779
more of a bias render I'm not sure but

1181
00:52:36,039 --> 00:52:39,309
you can kind of see how an offline

1182
00:52:37,780 --> 00:52:41,050
render works and with that much GPU

1183
00:52:39,309 --> 00:52:44,769
power you can also see this it's not

1184
00:52:41,050 --> 00:52:48,000
real time but it's close you know it's

1185
00:52:44,769 --> 00:52:52,659
like maybe 1/10 real-time or something

1186
00:52:48,000 --> 00:52:55,539
to produce an image right and so that's

1187
00:52:52,659 --> 00:52:58,149
pretty good Maxwell render is is less of

1188
00:52:55,539 --> 00:53:01,239
a real-time in that sense it's more

1189
00:52:58,150 --> 00:53:05,079
about accuracy and I don't know if we've

1190
00:53:01,239 --> 00:53:08,099
got a Maxwell render video I don't know

1191
00:53:05,079 --> 00:53:08,099
if we've got one here

1192
00:53:08,519 --> 00:53:14,759
let's see you next year under 4.1 let me

1193
00:53:11,380 --> 00:53:19,900
see if there's a video of that happening

1194
00:53:14,760 --> 00:53:20,650
let's see I don't know there's pride I

1195
00:53:19,900 --> 00:53:25,269
don't know if there's anything

1196
00:53:20,650 --> 00:53:30,369
particularly good here for Maxwell oops

1197
00:53:25,269 --> 00:53:41,889
I have videos I want to have a YouTube

1198
00:53:30,369 --> 00:53:45,099
good be Maxwell render 4.1 all right

1199
00:53:41,889 --> 00:53:48,000
let's take a look here all right or we

1200
00:53:45,099 --> 00:53:52,599
could just watch an ad for something

1201
00:53:48,000 --> 00:53:56,920
instead okay here we go I yes you can

1202
00:53:52,599 --> 00:53:58,750
see here like this is they've got sort

1203
00:53:56,920 --> 00:54:04,059
of a preview window thing going here and

1204
00:53:58,750 --> 00:54:06,869
onofre getting good shots of them

1205
00:54:04,059 --> 00:54:06,869
actually rendering

1206
00:54:08,360 --> 00:54:13,380
yeah I don't know well point being you

1207
00:54:11,369 --> 00:54:14,969
can go find these yourself and most of

1208
00:54:13,380 --> 00:54:16,349
them have demo versions as well so you

1209
00:54:14,969 --> 00:54:20,099
could probably download them and play

1210
00:54:16,349 --> 00:54:21,929
with them but I don't want to waste any

1211
00:54:20,099 --> 00:54:24,420
more time like looking for good videos

1212
00:54:21,929 --> 00:54:26,489
of them point being there are plenty of

1213
00:54:24,420 --> 00:54:28,380
rendered renderers out there that are

1214
00:54:26,489 --> 00:54:30,359
this way there's also some free ones

1215
00:54:28,380 --> 00:54:33,900
I don't think indigo is free anymore

1216
00:54:30,360 --> 00:54:35,849
indigo used to be one that was free and

1217
00:54:33,900 --> 00:54:37,680
there's one that's kind of crappy called

1218
00:54:35,849 --> 00:54:40,409
cycles that's built into blender for

1219
00:54:37,679 --> 00:54:45,539
example that was lastly also free it's

1220
00:54:40,409 --> 00:54:47,569
real bad but it's free but you could you

1221
00:54:45,539 --> 00:54:50,639
know take a look at one of those as well

1222
00:54:47,570 --> 00:54:51,750
so there's a lot of stuff out there that

1223
00:54:50,639 --> 00:54:54,089
you can look at if you're more

1224
00:54:51,750 --> 00:54:55,530
interested in learning about sort of

1225
00:54:54,090 --> 00:54:57,210
this sort of light propagation stuff and

1226
00:54:55,530 --> 00:55:00,390
you can read papers on it there's

1227
00:54:57,210 --> 00:55:02,130
hundreds of papers every year written on

1228
00:55:00,389 --> 00:55:04,980
this topic because light transport is

1229
00:55:02,130 --> 00:55:06,420
just a tough problem and it gets easier

1230
00:55:04,980 --> 00:55:09,119
every year is they give us more and more

1231
00:55:06,420 --> 00:55:10,829
CPU and GPU power to play with thanks to

1232
00:55:09,119 --> 00:55:12,619
Hardware adding more and more cores

1233
00:55:10,829 --> 00:55:16,230
light transport is a very parallel

1234
00:55:12,619 --> 00:55:18,920
parallelizable problem so it becomes

1235
00:55:16,230 --> 00:55:21,480
very nicely - huge amounts of flops

1236
00:55:18,920 --> 00:55:23,159
which is why GPUs have been such a big

1237
00:55:21,480 --> 00:55:24,630
boon for it and you can get things like

1238
00:55:23,159 --> 00:55:26,339
that octane render where you're kind of

1239
00:55:24,630 --> 00:55:28,289
almost real-time like transporting

1240
00:55:26,340 --> 00:55:33,870
around fairly complicated light

1241
00:55:28,289 --> 00:55:35,489
transport certainly awesome but all that

1242
00:55:33,869 --> 00:55:38,579
being said that is the offline version

1243
00:55:35,489 --> 00:55:40,349
and unfortunately unless you are doing

1244
00:55:38,579 --> 00:55:41,849
it you know if you're working on a your

1245
00:55:40,349 --> 00:55:43,230
own product at home that might be very

1246
00:55:41,849 --> 00:55:45,569
relevant to you because you might be

1247
00:55:43,230 --> 00:55:48,929
able to just do a little offline Monte

1248
00:55:45,570 --> 00:55:51,539
Carlo a pacer that can produce a totally

1249
00:55:48,929 --> 00:55:54,919
reasonable thing set of light probes for

1250
00:55:51,539 --> 00:55:56,789
your game and then you're done right and

1251
00:55:54,920 --> 00:55:59,460
incidentally I believe that's pretty

1252
00:55:56,789 --> 00:56:01,050
much how the witness' worked I didn't do

1253
00:55:59,460 --> 00:56:05,010
the renderer for the witness that was

1254
00:56:01,050 --> 00:56:07,320
Ignacio Castagna did it so I don't

1255
00:56:05,010 --> 00:56:08,880
really know very much about how it works

1256
00:56:07,320 --> 00:56:10,559
but I believe it was a light probe based

1257
00:56:08,880 --> 00:56:14,369
renderer and the way that it did that

1258
00:56:10,559 --> 00:56:16,440
was it produced light Maps for surfaces

1259
00:56:14,369 --> 00:56:20,279
and light probes using an offline ray

1260
00:56:16,440 --> 00:56:22,829
tracing process I don't know that it was

1261
00:56:20,280 --> 00:56:25,880
exactly ray-tracing I think it used GPU

1262
00:56:22,829 --> 00:56:28,889
acceleration to actually just render

1263
00:56:25,880 --> 00:56:31,710
successive versions of the scene or

1264
00:56:28,889 --> 00:56:34,529
something if I'm not really sure exactly

1265
00:56:31,710 --> 00:56:37,050
how it did it because again I didn't

1266
00:56:34,530 --> 00:56:38,820
write that part of it but it was offline

1267
00:56:37,050 --> 00:56:45,840
so it basically produced light probes

1268
00:56:38,820 --> 00:56:48,390
and surface lighting offline using

1269
00:56:45,840 --> 00:56:51,200
basically a light map baking machine a

1270
00:56:48,389 --> 00:56:54,059
light probe generating machine and then

1271
00:56:51,199 --> 00:56:56,819
during gameplay it would sample from

1272
00:56:54,059 --> 00:56:59,309
those offline produced results to give

1273
00:56:56,820 --> 00:57:02,100
you the final render and plenty of

1274
00:56:59,309 --> 00:57:03,420
things worked this way right so that's a

1275
00:57:02,099 --> 00:57:04,769
very common technique but it's not

1276
00:57:03,420 --> 00:57:06,659
really going to work on handmade here

1277
00:57:04,769 --> 00:57:09,480
because we don't have a pre pass I wish

1278
00:57:06,659 --> 00:57:11,250
we did but we don't and so we have to

1279
00:57:09,480 --> 00:57:13,409
come up with some way of producing some

1280
00:57:11,250 --> 00:57:15,389
lighting without the advantage of being

1281
00:57:13,409 --> 00:57:18,299
able to spend a lot of time producing

1282
00:57:15,389 --> 00:57:19,949
that lighting in an offline scenario so

1283
00:57:18,300 --> 00:57:22,470
we have to do something that propagates

1284
00:57:19,949 --> 00:57:24,149
light around our scene online and

1285
00:57:22,469 --> 00:57:27,389
whether or not we use something like

1286
00:57:24,150 --> 00:57:30,950
cube maps to store the result we need

1287
00:57:27,389 --> 00:57:35,009
some way of producing something

1288
00:57:30,949 --> 00:57:39,329
reasonable right so what we need is

1289
00:57:35,010 --> 00:57:52,190
something that you know takes n light

1290
00:57:39,329 --> 00:57:52,190
sources bounces them around some degree

1291
00:57:54,110 --> 00:58:14,570
and produces approximate in radiance at

1292
00:58:08,320 --> 00:58:16,190
places right that's what we're looking

1293
00:58:14,570 --> 00:58:18,680
for we want to be able to throw some

1294
00:58:16,190 --> 00:58:20,360
light sources into this bonus points if

1295
00:58:18,679 --> 00:58:25,699
those light sources can be creative like

1296
00:58:20,360 --> 00:58:27,230
sky dome right but if they can't oh well

1297
00:58:25,699 --> 00:58:28,699
you know point light sources you can

1298
00:58:27,230 --> 00:58:30,170
always just the fungus can handle a

1299
00:58:28,699 --> 00:58:31,789
reasonable number of them you can always

1300
00:58:30,170 --> 00:58:41,960
approximate most lighting by just

1301
00:58:31,789 --> 00:58:43,699
throwing in more point oh we need to

1302
00:58:41,960 --> 00:58:47,300
throw some light sources we need to sort

1303
00:58:43,699 --> 00:58:48,980
of diffuse themselves and then we need

1304
00:58:47,300 --> 00:58:50,960
to be able to produce some kind of

1305
00:58:48,980 --> 00:58:55,449
approximate idea about how the lighting

1306
00:58:50,960 --> 00:59:01,070
is working at any particular point right

1307
00:58:55,449 --> 00:59:03,139
and I don't have a pre I don't have any

1308
00:59:01,070 --> 00:59:04,640
kind of like preconceived idea about how

1309
00:59:03,139 --> 00:59:10,759
this should work in a game like handmade

1310
00:59:04,639 --> 00:59:14,059
hero the sort of bounce is the hard part

1311
00:59:10,760 --> 00:59:17,420
I think taking in a bunch of light

1312
00:59:14,059 --> 00:59:21,320
sources and just rendering from the

1313
00:59:17,420 --> 00:59:24,500
light sources isn't particularly tough

1314
00:59:21,320 --> 00:59:28,100
right it's not particularly tough

1315
00:59:24,500 --> 00:59:32,539
primarily because if we just rendered to

1316
00:59:28,099 --> 00:59:34,819
you maps directly like every frame or

1317
00:59:32,539 --> 00:59:37,639
every few frames you know update our

1318
00:59:34,820 --> 00:59:41,030
cube map sort of gradually or something

1319
00:59:37,639 --> 00:59:46,159
if we have to uh even if you had like a

1320
00:59:41,030 --> 00:59:50,390
thousand lights in in there I mean how

1321
00:59:46,159 --> 00:59:53,259
hard would it really be right rendering

1322
00:59:50,389 --> 00:59:56,960
a thousand light flaps into a cube map

1323
00:59:53,260 --> 00:59:59,960
is trivial I mean that's you know a

1324
00:59:56,960 --> 01:00:01,760
thousand little you don't even need

1325
00:59:59,960 --> 01:00:03,050
texture samples to render a light source

1326
01:00:01,760 --> 01:00:06,450
because the light source is just a

1327
01:00:03,050 --> 01:00:12,450
little point right I

1328
01:00:06,449 --> 01:00:15,029
so you know something where we're just

1329
01:00:12,449 --> 01:00:18,989
renting a bunch of lights into a cube

1330
01:00:15,030 --> 01:00:21,900
map is pretty easy I think and so

1331
01:00:18,989 --> 01:00:25,919
producing that element of it is

1332
01:00:21,900 --> 01:00:29,660
shouldn't be too hard the hard part is

1333
01:00:25,920 --> 01:00:34,559
the bounces and the bounces are

1334
01:00:29,659 --> 01:00:36,838
problematic primarily because I they

1335
01:00:34,559 --> 01:00:39,449
involve this sort of traversal of the

1336
01:00:36,838 --> 01:00:42,449
scene right if there's one thing that a

1337
01:00:39,449 --> 01:00:44,848
GPU is awful at its traversing a scene

1338
01:00:42,449 --> 01:00:46,799
why is it awful at it because we added

1339
01:00:44,849 --> 01:00:48,088
we would have to send the scene down to

1340
01:00:46,800 --> 01:00:53,670
it in the first place which you don't

1341
01:00:48,088 --> 01:00:55,440
really want to have to do right and yet

1342
01:00:53,670 --> 01:00:57,349
we have to send the scene down to it and

1343
01:00:55,440 --> 01:00:59,429
it has to do a bunch of like

1344
01:00:57,349 --> 01:01:01,380
intersections and searches through JIT

1345
01:00:59,429 --> 01:01:04,139
which exactly it doesn't want to do like

1346
01:01:01,380 --> 01:01:07,710
like GPUs hate traversing memory

1347
01:01:04,139 --> 01:01:11,068
randomly they like having everything run

1348
01:01:07,710 --> 01:01:13,920
in a very like methodical consistent way

1349
01:01:11,068 --> 01:01:19,050
I'm always sampling from nearby stuff

1350
01:01:13,920 --> 01:01:20,338
and whatever right so GPUs actually hate

1351
01:01:19,050 --> 01:01:27,630
ray-tracing it's like their least

1352
01:01:20,338 --> 01:01:30,449
favorite thing typically so the bounce

1353
01:01:27,630 --> 01:01:33,869
is a problem now one thing that's

1354
01:01:30,449 --> 01:01:38,399
interesting and I'll point this out is

1355
01:01:33,869 --> 01:01:42,750
that in general it's usually possible to

1356
01:01:38,400 --> 01:01:47,430
turn to turn if to transform if you will

1357
01:01:42,750 --> 01:01:50,789
a aerial lighting problem into a point

1358
01:01:47,429 --> 01:01:56,009
lighting problem just by using more

1359
01:01:50,789 --> 01:02:00,630
points right and what do I mean by that

1360
01:01:56,010 --> 01:02:06,060
well let's suppose that we take a very

1361
01:02:00,630 --> 01:02:08,430
very simple scenario I want to know

1362
01:02:06,059 --> 01:02:11,519
I've got like a cube or something that's

1363
01:02:08,429 --> 01:02:15,719
floating above a giant plane and up in

1364
01:02:11,519 --> 01:02:16,269
the sky there is going to be a Sun of

1365
01:02:15,719 --> 01:02:21,369
some kind

1366
01:02:16,269 --> 01:02:23,590
find shining down right and I know that

1367
01:02:21,369 --> 01:02:25,719
I can compute the lighting from the Sun

1368
01:02:23,590 --> 01:02:27,490
very accurately very easily because

1369
01:02:25,719 --> 01:02:29,919
again it's sort of a point light source

1370
01:02:27,489 --> 01:02:31,869
it's sort of easy to deal with we

1371
01:02:29,920 --> 01:02:34,900
already did the phone version there you

1372
01:02:31,869 --> 01:02:37,150
can imagine us doing sort of more

1373
01:02:34,900 --> 01:02:38,829
creative things with it it's not very

1374
01:02:37,150 --> 01:02:42,160
complicated when you're just talking

1375
01:02:38,829 --> 01:02:44,739
about one point of light and so the

1376
01:02:42,159 --> 01:02:47,469
question is well what if I wanted to

1377
01:02:44,739 --> 01:02:48,389
extend to this scenario to include the

1378
01:02:47,469 --> 01:02:51,279
backscatter

1379
01:02:48,389 --> 01:02:53,289
from this plane so this Sun is also

1380
01:02:51,280 --> 01:02:57,310
shining all on the plane maybe this

1381
01:02:53,289 --> 01:03:00,309
plane so the Sun let's say is yellow the

1382
01:02:57,309 --> 01:03:02,889
plane let's say is green and so we would

1383
01:03:00,309 --> 01:03:04,690
expect to see some green under lighting

1384
01:03:02,889 --> 01:03:06,309
on this cube so like down here it should

1385
01:03:04,690 --> 01:03:07,599
be kind of green the underside surface

1386
01:03:06,309 --> 01:03:09,759
should be almost completely green

1387
01:03:07,599 --> 01:03:13,269
because the only thing can hit it is the

1388
01:03:09,760 --> 01:03:15,970
bounce light of the green so we want to

1389
01:03:13,269 --> 01:03:18,579
see a yellow top green bottom right

1390
01:03:15,969 --> 01:03:21,219
something like this well one thing that

1391
01:03:18,579 --> 01:03:24,789
we can do is say all right before we

1392
01:03:21,219 --> 01:03:29,649
start let's shoot a few rays not too

1393
01:03:24,789 --> 01:03:32,289
many maybe 10 right maybe 50 not very

1394
01:03:29,650 --> 01:03:34,750
many shoot some rays out from the light

1395
01:03:32,289 --> 01:03:37,570
source and see what they hit wherever

1396
01:03:34,750 --> 01:03:41,139
they hit we will add a new pretend

1397
01:03:37,570 --> 01:03:43,870
temporary light source with the color of

1398
01:03:41,139 --> 01:03:48,489
whatever the reflected light is from

1399
01:03:43,869 --> 01:03:51,099
that surface so it's basically just

1400
01:03:48,489 --> 01:03:54,939
produces a bunch of point light sources

1401
01:03:51,099 --> 01:03:57,009
from a single point light source we then

1402
01:03:54,940 --> 01:04:01,030
light the scene with 50 point light

1403
01:03:57,010 --> 01:04:04,000
sources and we're done these will all be

1404
01:04:01,030 --> 01:04:08,290
green so this will see a bunch of green

1405
01:04:04,000 --> 01:04:11,590
light sources this will see the yellow

1406
01:04:08,289 --> 01:04:18,309
light source and and that's that's the

1407
01:04:11,590 --> 01:04:22,350
end of it right so you know there is a

1408
01:04:18,309 --> 01:04:25,090
right of way to sort of turn a

1409
01:04:22,349 --> 01:04:28,509
complicated lighting problem that

1410
01:04:25,090 --> 01:04:29,690
appears to involve more than just point

1411
01:04:28,510 --> 01:04:31,370
lighting

1412
01:04:29,690 --> 01:04:34,849
is something that only involves point

1413
01:04:31,369 --> 01:04:37,730
lighting and so you know that to me

1414
01:04:34,849 --> 01:04:42,230
sounds kind of enticing because what I

1415
01:04:37,730 --> 01:04:46,699
could do for example is every frame on

1416
01:04:42,230 --> 01:04:50,360
the CPU I could do some ray tracing to

1417
01:04:46,699 --> 01:04:52,899
spread out my lights to various parts of

1418
01:04:50,360 --> 01:04:58,160
the scene in a sort of homogeneous way

1419
01:04:52,900 --> 01:05:00,920
and then I could treat each of those as

1420
01:04:58,159 --> 01:05:02,869
a point that I then render into my cube

1421
01:05:00,920 --> 01:05:05,269
maps and as long as I keep that number

1422
01:05:02,869 --> 01:05:10,099
like I said to something saying like a

1423
01:05:05,269 --> 01:05:12,650
thousand rendering even you know thirty

1424
01:05:10,099 --> 01:05:15,019
or forty cube maps of a low resolution

1425
01:05:12,650 --> 01:05:19,070
when the only thing I'm rendering into

1426
01:05:15,019 --> 01:05:23,389
those cube maps are some points seems

1427
01:05:19,070 --> 01:05:27,320
pretty doable right now there's a little

1428
01:05:23,389 --> 01:05:29,089
bit more to it than that and and so the

1429
01:05:27,320 --> 01:05:31,730
you know it's not quite as rosy a

1430
01:05:29,090 --> 01:05:33,559
picture as I painted and the reason that

1431
01:05:31,730 --> 01:05:36,740
it's not quite as rosy of a picture is

1432
01:05:33,559 --> 01:05:41,420
because in order to make the lighting

1433
01:05:36,739 --> 01:05:44,179
work in in a way that implies shadowing

1434
01:05:41,420 --> 01:05:45,829
which we would like and we don't have to

1435
01:05:44,179 --> 01:05:49,159
again we're you know we're not trying to

1436
01:05:45,829 --> 01:05:52,670
be a Pixar movie here we're not trying

1437
01:05:49,159 --> 01:05:54,349
to light the scene in a 50 hour

1438
01:05:52,670 --> 01:05:55,820
offline render well they don't allow 50

1439
01:05:54,349 --> 01:06:04,659
our offline renders out like a Pixar but

1440
01:05:55,820 --> 01:06:04,660
12 hour of line render we don't want to

1441
01:06:05,199 --> 01:06:09,649
try to compete with that but we do want

1442
01:06:07,820 --> 01:06:12,350
to capture as many lighting elements as

1443
01:06:09,650 --> 01:06:14,780
we can and one of the useful ones is

1444
01:06:12,349 --> 01:06:19,480
occlusion of the light sources so for

1445
01:06:14,780 --> 01:06:22,010
example if I have in this same scenario

1446
01:06:19,480 --> 01:06:23,929
let's suppose that I did something

1447
01:06:22,010 --> 01:06:26,150
slightly more complicated but again

1448
01:06:23,929 --> 01:06:28,759
still not particularly unusual so you

1449
01:06:26,150 --> 01:06:33,019
can easily imagine the scenario in which

1450
01:06:28,760 --> 01:06:35,690
it exists suppose I have a something

1451
01:06:33,019 --> 01:06:38,869
that's just a simple thin here and then

1452
01:06:35,690 --> 01:06:39,690
I'm talking about the lighting on the

1453
01:06:38,869 --> 01:06:41,608
cube

1454
01:06:39,690 --> 01:06:45,179
with the Sun so all I've done is I've

1455
01:06:41,608 --> 01:06:47,369
split my plane in half and now what I'm

1456
01:06:45,179 --> 01:06:51,289
going to say is this side is red this

1457
01:06:47,369 --> 01:06:53,940
side is green right and this is yellow

1458
01:06:51,289 --> 01:06:56,880
right and I really don't need the fin in

1459
01:06:53,940 --> 01:07:00,300
fact really I probably overcomplicated

1460
01:06:56,880 --> 01:07:02,789
it here in a large to large extent let's

1461
01:07:00,300 --> 01:07:05,220
just say it's just two things a red and

1462
01:07:02,789 --> 01:07:07,318
a green well now I would expect this

1463
01:07:05,219 --> 01:07:09,029
side this underside of the cube to be

1464
01:07:07,318 --> 01:07:10,380
more red this side of the underside to

1465
01:07:09,030 --> 01:07:13,019
be more green in the middle it should be

1466
01:07:10,380 --> 01:07:15,450
more of a wash right because you know

1467
01:07:13,019 --> 01:07:17,099
especially this side of it is really

1468
01:07:15,449 --> 01:07:18,868
only seeing the green it can't see the

1469
01:07:17,099 --> 01:07:20,160
red at all so this should be more green

1470
01:07:18,869 --> 01:07:21,660
and the famous tree over here this one

1471
01:07:20,159 --> 01:07:22,920
should have some red contribution the

1472
01:07:21,659 --> 01:07:29,368
bottom should up the competition from

1473
01:07:22,920 --> 01:07:32,338
both right so in that scenario right you

1474
01:07:29,369 --> 01:07:35,730
can see why it's important to do some

1475
01:07:32,338 --> 01:07:37,858
basic occlusion now one kind of

1476
01:07:35,730 --> 01:07:41,608
occlusion is just the hemisphere

1477
01:07:37,858 --> 01:07:43,889
occlusion so for this scenario it's

1478
01:07:41,608 --> 01:07:46,828
sufficient to simply say well only

1479
01:07:43,889 --> 01:07:48,920
sample from the hemisphere that would

1480
01:07:46,829 --> 01:07:52,650
get me the occlusion that I want right

1481
01:07:48,920 --> 01:07:56,358
but now if I go and I add the thing that

1482
01:07:52,650 --> 01:07:59,670
I was talking about let's say I put in a

1483
01:07:56,358 --> 01:08:03,299
blocking plate here right and this is

1484
01:07:59,670 --> 01:08:07,858
black it doesn't reflect light at all

1485
01:08:03,300 --> 01:08:09,060
right now well that's a bad example

1486
01:08:07,858 --> 01:08:11,159
because the lights coming from this

1487
01:08:09,059 --> 01:08:16,500
direction okay I can't quite do that

1488
01:08:11,159 --> 01:08:17,729
here's the blocking plate here right so

1489
01:08:16,500 --> 01:08:19,319
now this blocking plate doesn't

1490
01:08:17,729 --> 01:08:21,149
intercept the light at all the light

1491
01:08:19,319 --> 01:08:22,650
still Falls everywhere it would have

1492
01:08:21,149 --> 01:08:23,519
because this blocking plate is just

1493
01:08:22,649 --> 01:08:25,528
under the cube

1494
01:08:23,520 --> 01:08:28,020
well now the underside of the cube

1495
01:08:25,529 --> 01:08:29,730
should get much darker right and the

1496
01:08:28,020 --> 01:08:31,410
closer I move the blocking plate to the

1497
01:08:29,729 --> 01:08:34,889
cube but you get extremely dark because

1498
01:08:31,409 --> 01:08:37,349
it can't see hardly any of the light but

1499
01:08:34,890 --> 01:08:40,619
if all I was doing was rendering these

1500
01:08:37,350 --> 01:08:43,529
point light sources into the cube maps

1501
01:08:40,619 --> 01:08:45,329
or or just leave and forget to Maps no

1502
01:08:43,529 --> 01:08:47,160
matter what I'm doing if I'm only

1503
01:08:45,329 --> 01:08:48,960
considering the point light sources and

1504
01:08:47,159 --> 01:08:51,599
I don't see whether the point light

1505
01:08:48,960 --> 01:08:53,009
source has occluding geometry in between

1506
01:08:51,600 --> 01:08:55,039
it

1507
01:08:53,009 --> 01:08:59,969
won't pick up that shadowing effect

1508
01:08:55,038 --> 01:09:03,179
right so in that scenario I've got a

1509
01:08:59,969 --> 01:09:05,009
really nasty problem which is that while

1510
01:09:03,179 --> 01:09:06,838
it would be very efficient to like do

1511
01:09:05,009 --> 01:09:09,000
something like produce cubemap strictly

1512
01:09:06,838 --> 01:09:12,658
from point light sources what do I do

1513
01:09:09,000 --> 01:09:16,078
about the fact that my surfaces will

1514
01:09:12,658 --> 01:09:19,018
intercede now the interesting thing

1515
01:09:16,078 --> 01:09:21,118
about this is it may still be for a game

1516
01:09:19,019 --> 01:09:26,069
like handmade hero that it's actually

1517
01:09:21,118 --> 01:09:30,389
okay if you actually just wanted to

1518
01:09:26,069 --> 01:09:31,679
produce the lighting by rendering all

1519
01:09:30,389 --> 01:09:35,519
the services and all the point light

1520
01:09:31,679 --> 01:09:37,440
sources every frame it might still work

1521
01:09:35,519 --> 01:09:41,159
why because there just aren't that many

1522
01:09:37,439 --> 01:09:42,808
surfaces right and most of the problem

1523
01:09:41,158 --> 01:09:45,358
that we have right now is the fact that

1524
01:09:42,809 --> 01:09:47,219
we do def peeling that makes the cost of

1525
01:09:45,359 --> 01:09:49,440
a render four times more than it should

1526
01:09:47,219 --> 01:09:50,908
be there would be no depth peeling and

1527
01:09:49,439 --> 01:09:52,500
producing the lighting because remember

1528
01:09:50,908 --> 01:09:54,420
we're not trying to get pixel accurate

1529
01:09:52,500 --> 01:09:56,368
transparency or anything like that we're

1530
01:09:54,420 --> 01:09:57,840
just trying to get an approximation for

1531
01:09:56,368 --> 01:09:59,788
the light furthermore the cube map

1532
01:09:57,840 --> 01:10:03,239
doesn't have to be particularly high-res

1533
01:09:59,788 --> 01:10:08,250
the cube map could be 64 by 64 128 by

1534
01:10:03,238 --> 01:10:12,000
128 a drastically smaller size than what

1535
01:10:08,250 --> 01:10:14,880
we would be using to render the actual

1536
01:10:12,000 --> 01:10:17,460
game and so really the only problem that

1537
01:10:14,880 --> 01:10:19,230
we would have is the fact that we've got

1538
01:10:17,460 --> 01:10:22,109
sprites in the world and we would have

1539
01:10:19,229 --> 01:10:25,138
to sample from their textures in order

1540
01:10:22,109 --> 01:10:27,448
to correctly produce the occlusion

1541
01:10:25,139 --> 01:10:34,739
necessary for you know the fact that

1542
01:10:27,448 --> 01:10:39,029
things are silhouetted we could even use

1543
01:10:34,738 --> 01:10:40,828
that if we had texture atlas so we may

1544
01:10:39,029 --> 01:10:44,779
have to go to a texture atlas to do that

1545
01:10:40,828 --> 01:10:46,859
if that makes sense because in order to

1546
01:10:44,779 --> 01:10:49,309
get the speed up for something like that

1547
01:10:46,859 --> 01:10:51,988
we can't be switching textures every

1548
01:10:49,309 --> 01:10:54,119
quad like we are right now we know that

1549
01:10:51,988 --> 01:10:55,468
that probably has to go and it would

1550
01:10:54,118 --> 01:10:58,049
definitely have to go once we're doing

1551
01:10:55,469 --> 01:11:00,809
even more passes than we are right now

1552
01:10:58,050 --> 01:11:02,730
because of things like the lighting but

1553
01:11:00,809 --> 01:11:04,349
this is a pretty reasonable scheme right

1554
01:11:02,729 --> 01:11:06,519
I could convince myself that this would

1555
01:11:04,349 --> 01:11:15,220
produce a fairly read

1556
01:11:06,520 --> 01:11:16,980
results and you know I don't know it

1557
01:11:15,220 --> 01:11:19,750
seems like something we could try

1558
01:11:16,979 --> 01:11:22,029
basically did the algorithm is pretty

1559
01:11:19,750 --> 01:11:24,609
straightforward right it's just scatter

1560
01:11:22,029 --> 01:11:27,069
point lights throughout the world based

1561
01:11:24,609 --> 01:11:29,289
on wherever we think they need to be for

1562
01:11:27,069 --> 01:11:32,109
the current simulation steps gather up

1563
01:11:29,289 --> 01:11:34,869
all the light sources in the region

1564
01:11:32,109 --> 01:11:37,389
let's say that's 100 multiply that

1565
01:11:34,869 --> 01:11:41,229
number by like at least 10 by just

1566
01:11:37,390 --> 01:11:43,420
shooting 10 random rays out from each

1567
01:11:41,229 --> 01:11:45,309
light source and seeing what they hit

1568
01:11:43,420 --> 01:11:47,880
and sticking a light source there and

1569
01:11:45,310 --> 01:11:53,940
then rendering those into cube maps

1570
01:11:47,880 --> 01:12:01,650
that's the entirety of the scheme right

1571
01:11:53,939 --> 01:12:06,909
and so we could take that a set of of

1572
01:12:01,649 --> 01:12:10,269
lights we could you know again push it

1573
01:12:06,909 --> 01:12:12,399
through as as points that render it to

1574
01:12:10,270 --> 01:12:15,000
these cube maps and then we would just

1575
01:12:12,399 --> 01:12:18,939
sample our lighting from the cube map

1576
01:12:15,000 --> 01:12:22,689
that that'd be it I you know would that

1577
01:12:18,939 --> 01:12:25,329
work I have no idea it's purely me just

1578
01:12:22,689 --> 01:12:29,859
randomly guessing about something that

1579
01:12:25,329 --> 01:12:33,189
could work I have no idea whether it

1580
01:12:29,859 --> 01:12:37,119
would be efficient or not it could be it

1581
01:12:33,189 --> 01:12:39,460
might not be we also could consider ways

1582
01:12:37,119 --> 01:12:41,619
that are more reverse than that people

1583
01:12:39,460 --> 01:12:46,060
actually do sort of like weak radiosity

1584
01:12:41,619 --> 01:12:50,349
origins there we have a weak sort of ray

1585
01:12:46,060 --> 01:12:52,030
tracing in the on the GPU as well and we

1586
01:12:50,350 --> 01:12:54,340
could do something like that one of the

1587
01:12:52,029 --> 01:12:56,649
advantages that we certainly have we

1588
01:12:54,340 --> 01:13:00,579
don't have very many primitives so doing

1589
01:12:56,649 --> 01:13:02,529
something like voxel cone tracing on our

1590
01:13:00,579 --> 01:13:05,409
scene would not be very difficult

1591
01:13:02,529 --> 01:13:08,769
probably I'm guessing because there just

1592
01:13:05,409 --> 01:13:11,260
isn't a lot there so I don't know so

1593
01:13:08,770 --> 01:13:14,640
it's possible that that maybe is a more

1594
01:13:11,260 --> 01:13:16,690
sensible way to do something like that

1595
01:13:14,640 --> 01:13:19,050
because that's something that operates

1596
01:13:16,689 --> 01:13:22,589
entirely on the GPU doesn't actually

1597
01:13:19,050 --> 01:13:27,329
are any CPU participation whatsoever

1598
01:13:22,590 --> 01:13:29,130
however like I said I don't know the

1599
01:13:27,329 --> 01:13:33,559
accuracy of something like voxel code

1600
01:13:29,130 --> 01:13:35,390
tracing can be kind of iffy because a

1601
01:13:33,560 --> 01:13:37,860
voxels are very expensive

1602
01:13:35,390 --> 01:13:39,570
three-dimensional things eat up memory

1603
01:13:37,859 --> 01:13:42,630
very quickly and eat up processing power

1604
01:13:39,569 --> 01:13:44,460
very quickly much more so than 2d things

1605
01:13:42,630 --> 01:13:45,690
and so you do end up in a situation

1606
01:13:44,460 --> 01:13:47,730
where something like box eco interest

1607
01:13:45,689 --> 01:13:49,559
and can be pretty tough to get not

1608
01:13:47,729 --> 01:13:56,149
working in any reasonable sense because

1609
01:13:49,560 --> 01:14:00,180
specifically because of that nasty cubed

1610
01:13:56,149 --> 01:14:01,649
element of everything that you do so you

1611
01:14:00,180 --> 01:14:04,320
know again something like that might be

1612
01:14:01,649 --> 01:14:06,210
more sensible because again we do have a

1613
01:14:04,319 --> 01:14:09,899
very low primitive count because we're a

1614
01:14:06,210 --> 01:14:14,119
sprite game so it keeps the number of

1615
01:14:09,899 --> 01:14:17,009
things we're doing much more bounded and

1616
01:14:14,119 --> 01:14:18,449
presumably you know we would have more

1617
01:14:17,010 --> 01:14:20,340
flexibility there to do something like

1618
01:14:18,449 --> 01:14:23,729
voxel eyes things or whatever else we

1619
01:14:20,340 --> 01:14:29,630
might want to do to them is not going to

1620
01:14:23,729 --> 01:14:29,629
be as costly but I don't know

1621
01:14:38,850 --> 01:14:43,539
it's a tough call because I don't really

1622
01:14:41,920 --> 01:14:45,960
want to like I said I don't want to

1623
01:14:43,539 --> 01:14:49,869
spend a huge amount of time going down

1624
01:14:45,960 --> 01:14:54,220
the path of like doing lighting I just

1625
01:14:49,869 --> 01:14:56,229
want to do a scheme and then say that's

1626
01:14:54,220 --> 01:14:57,820
the lighting and we'll just you know it

1627
01:14:56,229 --> 01:15:00,069
might have some drawbacks that we use it

1628
01:14:57,819 --> 01:15:04,659
and so I don't know which scheme is the

1629
01:15:00,069 --> 01:15:09,639
one that's going to be the most likely

1630
01:15:04,659 --> 01:15:11,380
to succeed reasonably and you know that

1631
01:15:09,640 --> 01:15:13,000
normally the course of action that you

1632
01:15:11,380 --> 01:15:15,819
take when you're working on a render as

1633
01:15:13,000 --> 01:15:17,199
you try a bunch of things and you pick

1634
01:15:15,819 --> 01:15:20,920
the one that seems to work the best

1635
01:15:17,199 --> 01:15:26,800
that's not really an option for us here

1636
01:15:20,920 --> 01:15:34,380
so we kind of have to make it get a good

1637
01:15:26,800 --> 01:15:34,380
guess ahead of time hmm

1638
01:15:36,170 --> 01:15:39,279
[Music]

1639
01:16:11,500 --> 01:16:14,500
well

1640
01:16:18,649 --> 01:16:26,319
I guess one thing that I could say is

1641
01:16:23,590 --> 01:16:33,699
that there certainly is some

1642
01:16:26,319 --> 01:16:33,699
attractiveness to using a system that

1643
01:16:35,020 --> 01:16:45,320
doesn't involve the CPU or rather

1644
01:16:39,829 --> 01:16:48,500
doesn't involve the bifurcation of the

1645
01:16:45,319 --> 01:16:50,779
renderer into two parts one part that

1646
01:16:48,500 --> 01:16:54,319
does the light propagation like ray

1647
01:16:50,779 --> 01:16:58,279
tracing in this case and another part

1648
01:16:54,319 --> 01:17:04,429
that does the actual rendering which in

1649
01:16:58,279 --> 01:17:07,960
this case would be on the GPU so a

1650
01:17:04,430 --> 01:17:13,039
scheme where we rasterize the light and

1651
01:17:07,960 --> 01:17:15,920
then use some kind of sampling from from

1652
01:17:13,039 --> 01:17:20,289
that rasterization like something that

1653
01:17:15,920 --> 01:17:20,289
is voxel cone tracing esque

1654
01:17:20,800 --> 01:17:30,320
certainly seems attractive right like

1655
01:17:28,090 --> 01:17:32,720
because that allows it to be

1656
01:17:30,319 --> 01:17:36,109
compartmentalized in the renderer which

1657
01:17:32,720 --> 01:17:38,780
also allows people who want to do a port

1658
01:17:36,109 --> 01:17:40,309
of hand made hero that is to a platform

1659
01:17:38,779 --> 01:17:44,500
that can't afford to do anything

1660
01:17:40,310 --> 01:17:44,500
particularly nuts

1661
01:17:50,109 --> 01:17:59,000
you know they could basically cut out a

1662
01:17:54,229 --> 01:18:02,689
lot of that stuff in the port whoo-hoo

1663
01:17:59,000 --> 01:18:04,729
so you know I feel like there is some

1664
01:18:02,689 --> 01:18:07,129
there there is some architectural

1665
01:18:04,729 --> 01:18:10,129
niceness to saying the renderer does the

1666
01:18:07,130 --> 01:18:17,539
lighting and it doesn't however it wants

1667
01:18:10,130 --> 01:18:19,430
right so it's hard for me to say but

1668
01:18:17,539 --> 01:18:23,899
that that does seem kind of attractive

1669
01:18:19,430 --> 01:18:25,640
so it's sort of a lighting scheme that

1670
01:18:23,899 --> 01:18:27,829
just sort of did something on the GPU

1671
01:18:25,640 --> 01:18:32,060
that rasterized the light into some kind

1672
01:18:27,829 --> 01:18:39,640
of a lookup system and then from there

1673
01:18:32,060 --> 01:18:39,640
produced you know whatever the the

1674
01:18:40,720 --> 01:18:52,820
whatever the approximate lighting

1675
01:18:42,710 --> 01:18:59,840
version is uh but yeah it's stuff I

1676
01:18:52,819 --> 01:19:03,380
can't really think of of I can't really

1677
01:18:59,840 --> 01:19:07,909
think of what the right way to progress

1678
01:19:03,380 --> 01:19:09,680
is I know that for example on like a

1679
01:19:07,909 --> 01:19:16,609
little big planet they did something

1680
01:19:09,680 --> 01:19:21,079
like that Alex Evans I believe is the

1681
01:19:16,609 --> 01:19:24,439
fellow's name who did the render for

1682
01:19:21,079 --> 01:19:28,840
that and they did something that was

1683
01:19:24,439 --> 01:19:31,939
kind of a scheme on the ps3 that did

1684
01:19:28,840 --> 01:19:33,890
lighting in sort of a rasp restaurant

1685
01:19:31,939 --> 01:19:36,649
that was not full voxel Cohen tracing

1686
01:19:33,890 --> 01:19:40,060
but that sort of did a similar situation

1687
01:19:36,649 --> 01:19:40,059
I don't remember

1688
01:19:49,649 --> 01:19:56,609
this is not what I wanted can I go to

1689
01:19:53,069 --> 01:20:03,090
scholar.google.com there are more for

1690
01:19:56,609 --> 01:20:14,719
that no it's probably no one's written

1691
01:20:03,090 --> 01:20:14,720
the paper on it yeah

1692
01:20:18,229 --> 01:20:23,399
[Applause]

1693
01:20:27,349 --> 01:20:37,739
well let's put it this way there is a

1694
01:20:32,908 --> 01:20:40,799
lecture out there by Alex Evans on maybe

1695
01:20:37,738 --> 01:20:44,328
I could stew it plugs and then Red River

1696
01:20:40,800 --> 01:20:44,329
lecture me that would work

1697
01:20:58,908 --> 01:21:01,898
so

1698
01:21:14,868 --> 01:21:23,109
this might be what we want

1699
01:21:18,498 --> 01:21:23,109
although except same Alex Evans

1700
01:21:35,300 --> 01:21:46,460
I guess what I would say is I feel like

1701
01:21:39,289 --> 01:21:48,260
we kind of want to we kind of want to

1702
01:21:46,460 --> 01:21:52,510
have some idea of what we're going into

1703
01:21:48,260 --> 01:21:52,510
first yeah okay so it is

1704
01:22:02,529 --> 01:22:10,380
this is a this is a 20 great slide has a

1705
01:22:07,868 --> 01:22:10,380
lot of that

1706
01:22:28,989 --> 01:22:33,369
so this is yet this is the thing that I

1707
01:22:31,689 --> 01:22:36,549
was talking about the thing about for a

1708
01:22:33,369 --> 01:22:38,619
little bit clinic because like I said

1709
01:22:36,550 --> 01:22:40,300
you know we we have sort of a similar

1710
01:22:38,619 --> 01:22:43,869
situation to LittleBigPlanet in a lot of

1711
01:22:40,300 --> 01:22:46,840
ways we don't have really long view

1712
01:22:43,869 --> 01:22:49,019
distances for example we're just talking

1713
01:22:46,840 --> 01:22:51,730
about a couple of slices at the level is

1714
01:22:49,020 --> 01:22:55,120
all we ever look at and it's pretty

1715
01:22:51,729 --> 01:22:56,379
clearly bounded and so you can see here

1716
01:22:55,119 --> 01:22:58,269
like they're talking about sort of the

1717
01:22:56,380 --> 01:22:59,890
box going to kind of approach they have

1718
01:22:58,270 --> 01:23:01,390
volume textures that they store the

1719
01:22:59,890 --> 01:23:05,980
licen I talked about this a long time

1720
01:23:01,390 --> 01:23:15,760
ago on handmade here and so they kind of

1721
01:23:05,979 --> 01:23:17,379
go through like okay so they yeah so

1722
01:23:15,760 --> 01:23:22,989
they talk about irradiance places and

1723
01:23:17,380 --> 01:23:25,150
they basically say like okay I these are

1724
01:23:22,989 --> 01:23:26,529
some I like how these are like draw them

1725
01:23:25,149 --> 01:23:29,189
look like magic marker or some things

1726
01:23:26,529 --> 01:23:29,189
and I like that a lot

1727
01:23:29,789 --> 01:23:35,789
so basically what they do is they take a

1728
01:23:32,289 --> 01:23:38,680
light source and they slice the world

1729
01:23:35,789 --> 01:23:40,930
into slices based on light source and

1730
01:23:38,680 --> 01:23:43,170
you know that's basically going to make

1731
01:23:40,930 --> 01:23:46,000
a box where it's going to make a 3d

1732
01:23:43,170 --> 01:23:48,909
thing of information about the light and

1733
01:23:46,000 --> 01:23:52,000
you can see that like what they do is

1734
01:23:48,909 --> 01:23:55,899
they say well alright I want to

1735
01:23:52,000 --> 01:23:59,350
basically store a lighting information

1736
01:23:55,899 --> 01:24:02,710
into these slices so that I can

1737
01:23:59,350 --> 01:24:05,200
accelerate rendering and not have to

1738
01:24:02,710 --> 01:24:08,109
actually trace lice around now how they

1739
01:24:05,199 --> 01:24:11,769
do the actual tracing I'm not sure let

1740
01:24:08,109 --> 01:24:13,509
me see here so here you go

1741
01:24:11,770 --> 01:24:16,840
render a front and back z-buffer for

1742
01:24:13,510 --> 01:24:20,050
each slice so that's basically taking

1743
01:24:16,840 --> 01:24:23,650
the the range like of the figure out

1744
01:24:20,050 --> 01:24:26,159
what's in that place right of as far as

1745
01:24:23,649 --> 01:24:26,159
geometry is concerned

1746
01:24:38,180 --> 01:24:43,300
and minimax these are tracing today is

1747
01:24:40,189 --> 01:24:45,349
just a matter of comparing lots of Z's

1748
01:24:43,300 --> 01:24:47,239
okay I see so they're basically just

1749
01:24:45,350 --> 01:24:49,720
saying like okay we're trying to retrace

1750
01:24:47,239 --> 01:24:49,719
in a slice

1751
01:24:58,380 --> 01:25:05,039
we can write directly to volume textures

1752
01:25:00,920 --> 01:25:09,270
so we can probably avoid some of the

1753
01:25:05,039 --> 01:25:11,039
hassle here find the nearest point in

1754
01:25:09,270 --> 01:25:14,330
the slice volume and sample will become

1755
01:25:11,039 --> 01:25:14,329
more efficient abuser Othar doe

1756
01:25:26,710 --> 01:25:30,640
so that all makes good sense except yeah

1757
01:25:29,229 --> 01:25:32,109
like they were saying there that's for

1758
01:25:30,640 --> 01:25:35,050
one light which isn't really going to

1759
01:25:32,109 --> 01:25:47,609
help us so I'm kind of interested to

1760
01:25:35,050 --> 01:25:47,610
know here's a surface function

1761
01:26:02,288 --> 01:26:18,158
so this is more like what we want right

1762
01:26:07,170 --> 01:26:20,649
we are sort of 2.5 D and this is sort of

1763
01:26:18,158 --> 01:26:22,569
talking similar to what we were talking

1764
01:26:20,649 --> 01:26:25,179
about where we're saying like yet you

1765
01:26:22,569 --> 01:26:27,038
know we could do cube maps in here some

1766
01:26:25,179 --> 01:26:29,078
like this based on a grid an example

1767
01:26:27,038 --> 01:26:30,518
from those or who knows what

1768
01:26:29,078 --> 01:26:35,679
so this is their technique which is

1769
01:26:30,519 --> 01:26:37,389
different from this we're going to clean

1770
01:26:35,679 --> 01:26:38,529
up slides GPU at low resolution based on

1771
01:26:37,389 --> 01:26:40,210
pictures are some good light emitters

1772
01:26:38,529 --> 01:26:44,828
yes that's what exactly what we want to

1773
01:26:40,210 --> 01:26:53,349
do computing in screen space also seems

1774
01:26:44,828 --> 01:26:54,849
reasonable I see here added the

1775
01:26:53,349 --> 01:26:56,409
composite these visual aids on by

1776
01:26:54,849 --> 01:26:58,869
intersecting it's oriented very much of

1777
01:26:56,408 --> 01:27:00,009
the slice of the volume okay that's

1778
01:26:58,868 --> 01:27:02,529
pretty easy to do they're just saying

1779
01:27:00,010 --> 01:27:04,389
like blob in the light sources to the

1780
01:27:02,529 --> 01:27:06,340
volume that we're tracking dependence on

1781
01:27:04,389 --> 01:27:07,449
direction of the irradiance at a given

1782
01:27:06,340 --> 01:27:09,190
point is off from sort of use for

1783
01:27:07,448 --> 01:27:13,569
Akamai's okay so we could get into

1784
01:27:09,189 --> 01:27:15,158
something like that it looks like they

1785
01:27:13,569 --> 01:27:17,500
did something even simpler which is

1786
01:27:15,158 --> 01:27:22,348
which is not even sure if our Mac they

1787
01:27:17,500 --> 01:27:30,179
just have a basic like a basic idea of

1788
01:27:22,349 --> 01:27:30,179
the light contribution see here

1789
01:27:39,380 --> 01:27:43,970
this is just figuring out how they're

1790
01:27:41,630 --> 01:27:48,109
actually using the gradient but that's a

1791
01:27:43,970 --> 01:27:51,579
little bit more specific so that's

1792
01:27:48,109 --> 01:27:51,579
pretty cool right like

1793
01:28:01,920 --> 01:28:08,670
and we don't care too much about shadows

1794
01:28:05,698 --> 01:28:09,928
right like again occluder is this sort

1795
01:28:08,670 --> 01:28:12,649
of something we'll have to think about a

1796
01:28:09,929 --> 01:28:12,649
little bit but

1797
01:28:24,770 --> 01:28:29,190
but yeah I mean that's the kind of thing

1798
01:28:27,599 --> 01:28:32,069
that I'm just thinking like I don't know

1799
01:28:29,189 --> 01:28:34,828
if we went down a road that looked more

1800
01:28:32,069 --> 01:28:36,868
like that it seems like maybe that's

1801
01:28:34,828 --> 01:28:38,399
smarter thing to do because we do know

1802
01:28:36,868 --> 01:28:40,969
we can kind of slice the road up

1803
01:28:38,399 --> 01:28:45,238
relatively predictably

1804
01:28:40,969 --> 01:28:47,698
and it's fairly confined so producing

1805
01:28:45,238 --> 01:28:49,109
the lighting in that sense if we did

1806
01:28:47,698 --> 01:28:50,399
something that was more about Surrey

1807
01:28:49,109 --> 01:28:51,839
environment I think I talked about this

1808
01:28:50,399 --> 01:28:54,868
when we originally talked about lighting

1809
01:28:51,840 --> 01:28:57,300
way back when on handmade hero talking

1810
01:28:54,868 --> 01:29:02,219
about propagating light around in the

1811
01:28:57,300 --> 01:29:04,079
grid I just wonder if that might be sort

1812
01:29:02,219 --> 01:29:08,819
of a more feasible way to do it than to

1813
01:29:04,078 --> 01:29:19,979
try to do something fancier and I don't

1814
01:29:08,819 --> 01:29:22,439
know I it's really hard to say you now

1815
01:29:19,979 --> 01:29:23,968
know basically all I know about like

1816
01:29:22,439 --> 01:29:31,319
what we maybe should should or shouldn't

1817
01:29:23,969 --> 01:29:33,630
be doing and so I don't know if we

1818
01:29:31,319 --> 01:29:37,500
should just flip a coin about what we

1819
01:29:33,630 --> 01:29:41,250
try it what we end up trying haha it's a

1820
01:29:37,500 --> 01:29:43,170
good question and like everything else

1821
01:29:41,250 --> 01:29:44,760
right it's annoying because the only way

1822
01:29:43,170 --> 01:29:47,010
to know which is the right solution is

1823
01:29:44,760 --> 01:29:48,960
to try everything and see what ends up

1824
01:29:47,010 --> 01:29:51,869
being the most cost effective for you

1825
01:29:48,960 --> 01:29:54,868
know getting good results and not being

1826
01:29:51,868 --> 01:29:59,460
too you know compute-intensive

1827
01:29:54,868 --> 01:30:07,229
so I don't know I really don't I don't

1828
01:29:59,460 --> 01:30:08,760
have I don't have a good plan it feels

1829
01:30:07,229 --> 01:30:10,049
like one of those flipper coin kind of

1830
01:30:08,760 --> 01:30:11,400
situations and I don't know if there's

1831
01:30:10,050 --> 01:30:17,219
any way we can really narrow down any

1832
01:30:11,399 --> 01:30:20,819
further I like the idea of feeding life

1833
01:30:17,219 --> 01:30:23,130
as a volume and I like the idea of box

1834
01:30:20,819 --> 01:30:26,908
realizing things I just don't know how

1835
01:30:23,130 --> 01:30:29,159
well it works out in practice you know

1836
01:30:26,908 --> 01:30:33,569
one of the things is if we were to take

1837
01:30:29,158 --> 01:30:35,308
let's say a you know fairly high res

1838
01:30:33,569 --> 01:30:35,828
sample of the world so let's say we took

1839
01:30:35,309 --> 01:30:39,189
a ten

1840
01:30:35,828 --> 01:30:41,858
four by five twelve or something sample

1841
01:30:39,189 --> 01:30:43,809
of the world right and I don't know how

1842
01:30:41,859 --> 01:30:45,399
much information we'll need in order to

1843
01:30:43,809 --> 01:30:47,199
store some useful lighting information

1844
01:30:45,399 --> 01:30:53,409
in that that's but that's a very

1845
01:30:47,198 --> 01:30:55,748
high-res version so let's say it was you

1846
01:30:53,408 --> 01:31:00,118
know still we're still talking about you

1847
01:30:55,748 --> 01:31:03,578
know maybe four bytes per sample there

1848
01:31:00,118 --> 01:31:11,529
so that's going to be let's see that's

1849
01:31:03,578 --> 01:31:13,328
going to be what two megabytes per slice

1850
01:31:11,529 --> 01:31:14,768
of a thing and so if we wanted to do a

1851
01:31:13,328 --> 01:31:18,009
certain number of slices through the

1852
01:31:14,769 --> 01:31:19,809
world even such a high resolution what

1853
01:31:18,010 --> 01:31:23,289
would be the you know what would be the

1854
01:31:19,809 --> 01:31:25,329
cost for that kind of thing well you

1855
01:31:23,288 --> 01:31:27,338
know we could afford quite a few slices

1856
01:31:25,328 --> 01:31:30,158
at that point like let's say you wanted

1857
01:31:27,338 --> 01:31:33,069
to spend 256 megabytes on lighting which

1858
01:31:30,158 --> 01:31:35,828
is not a huge amount we could do it that

1859
01:31:33,069 --> 01:31:41,648
would give us 128 slices through the

1860
01:31:35,828 --> 01:31:43,808
world which is a lot of slices right so

1861
01:31:41,649 --> 01:31:45,609
it seems to me like the voxel izing

1862
01:31:43,809 --> 01:31:47,559
techniques just just

1863
01:31:45,609 --> 01:31:51,189
back-of-the-envelope the problem would

1864
01:31:47,559 --> 01:31:53,439
only be if if the computation was too

1865
01:31:51,189 --> 01:31:55,119
expensive in them because it really

1866
01:31:53,439 --> 01:31:57,219
doesn't seem like the memory is going to

1867
01:31:55,118 --> 01:31:59,708
be a problem for what we're doing right

1868
01:31:57,219 --> 01:32:05,708
it seems like the memory for what we're

1869
01:31:59,708 --> 01:32:08,800
doing would be fine so you know it might

1870
01:32:05,708 --> 01:32:12,219
be that something let's just take a look

1871
01:32:08,800 --> 01:32:13,838
here let me see what we would have for

1872
01:32:12,219 --> 01:32:16,260
if we were to do something like box with

1873
01:32:13,838 --> 01:32:16,260
on tracing

1874
01:32:21,560 --> 01:32:33,200
oh my goodness this is not a very fast

1875
01:32:27,100 --> 01:32:36,890
server is it it's run a pretty fast

1876
01:32:33,199 --> 01:32:43,880
connection here this is a one gigabit

1877
01:32:36,890 --> 01:32:45,680
connection here but that is I guess it's

1878
01:32:43,880 --> 01:32:50,020
from France maybe it's got to travel all

1879
01:32:45,680 --> 01:32:50,020
the way around the world right

1880
01:32:56,930 --> 01:33:02,240
so if we were to do something more like

1881
01:32:58,819 --> 01:33:07,699
this where we actually kind of you know

1882
01:33:02,239 --> 01:33:13,880
went went nuts you know this kind of

1883
01:33:07,699 --> 01:33:16,939
technique is it's kind of amusing right

1884
01:33:13,880 --> 01:33:18,289
so the idea here is that you know if you

1885
01:33:16,939 --> 01:33:20,839
are to produce something that's

1886
01:33:18,289 --> 01:33:23,810
relatively seems kind of expensive voxel

1887
01:33:20,840 --> 01:33:29,029
wise right so let's say that we produce

1888
01:33:23,810 --> 01:33:33,380
something of our world that was like

1889
01:33:29,029 --> 01:33:35,899
1024 by 512 by 128 or something right

1890
01:33:33,380 --> 01:33:37,670
the idea is well once you produce

1891
01:33:35,899 --> 01:33:41,389
something like that you can then pretty

1892
01:33:37,670 --> 01:33:44,449
cheaply filter it down right to submit

1893
01:33:41,390 --> 01:33:46,820
map versions so you can then do you know

1894
01:33:44,449 --> 01:33:52,279
when you have a 1024 by 512 by 128 one

1895
01:33:46,819 --> 01:33:57,199
you can then do your 512 by 256 right by

1896
01:33:52,279 --> 01:34:03,259
64 one and your 256 by 128 by 32 and

1897
01:33:57,199 --> 01:34:06,319
your 128 by 64 or 16 right and it

1898
01:34:03,260 --> 01:34:10,190
contracts down each time and so what you

1899
01:34:06,319 --> 01:34:12,259
do when you talk about sampling the

1900
01:34:10,189 --> 01:34:14,659
lighting for something like this is you

1901
01:34:12,260 --> 01:34:18,250
can kind of sample everything that's out

1902
01:34:14,659 --> 01:34:21,470
in a direction light wise by just

1903
01:34:18,250 --> 01:34:25,819
sampling from successively lower res

1904
01:34:21,470 --> 01:34:27,380
versions of the voxel you know because

1905
01:34:25,819 --> 01:34:29,389
tracing through the voxel would be way

1906
01:34:27,380 --> 01:34:32,869
too expensive per pixel but we could

1907
01:34:29,390 --> 01:34:36,829
take only a few samples one really close

1908
01:34:32,869 --> 01:34:39,439
to us one further away one further away

1909
01:34:36,829 --> 01:34:43,850
from that that are from higher and

1910
01:34:39,439 --> 01:34:48,529
higher coarseness or I should say lower

1911
01:34:43,850 --> 01:34:51,770
and lower resolution to do something

1912
01:34:48,529 --> 01:34:55,309
reasonable like that right I and you can

1913
01:34:51,770 --> 01:34:57,050
kind of see like they get good results

1914
01:34:55,310 --> 01:35:01,520
for things like this it's a bit finicky

1915
01:34:57,050 --> 01:35:02,869
of a process but yeah so you can see I'm

1916
01:35:01,520 --> 01:35:05,480
just this is the part that I want to

1917
01:35:02,869 --> 01:35:08,390
look at so if you want to do indirect

1918
01:35:05,479 --> 01:35:11,259
illumination here I what's interesting

1919
01:35:08,390 --> 01:35:13,430
is I really don't know I've never I

1920
01:35:11,260 --> 01:35:16,820
haven't read this paper and implemented

1921
01:35:13,430 --> 01:35:20,210
or anything so I'm curious to know what

1922
01:35:16,819 --> 01:35:22,189
they do for indirect light I I guess so

1923
01:35:20,210 --> 01:35:24,260
it says here the computer a location of

1924
01:35:22,189 --> 01:35:26,179
a point light is more involved in it we

1925
01:35:24,260 --> 01:35:28,430
use a two-step approach first we capture

1926
01:35:26,180 --> 01:35:30,260
the incoming radiance for light starts

1927
01:35:28,430 --> 01:35:32,480
in the leaves of our senior Association

1928
01:35:30,260 --> 01:35:34,369
storing incoming radiance not outgoing

1929
01:35:32,479 --> 01:35:36,349
will ask to me like cloud services we

1930
01:35:34,369 --> 01:35:39,319
filter industry distribute the incoming

1931
01:35:36,350 --> 01:35:40,940
radiance over all levels of our octree

1932
01:35:39,319 --> 01:35:43,189
finally we prefer approximate current

1933
01:35:40,939 --> 01:35:44,389
ratings to make light transport writing

1934
01:35:43,189 --> 01:35:45,710
the incoming radiance in the actually

1935
01:35:44,390 --> 01:35:47,900
structures complex therefore we will for

1936
01:35:45,710 --> 01:35:49,010
moment assume it's already present in

1937
01:35:47,899 --> 01:35:53,960
the architecture before detailing the

1938
01:35:49,010 --> 01:35:55,909
process all right so where is that here

1939
01:35:53,960 --> 01:35:57,409
we go a very simplified explanation

1940
01:35:55,909 --> 01:35:59,779
we'll consider that our oak tree is

1941
01:35:57,409 --> 01:36:02,689
complete so that we can then launch one

1942
01:35:59,779 --> 01:36:06,069
thread per leaf dude okay we'll perform

1943
01:36:02,689 --> 01:36:08,239
six passes blah blah blah

1944
01:36:06,069 --> 01:36:10,069
just remember levels at this point we

1945
01:36:08,239 --> 01:36:11,420
have coherent friction a simple solution

1946
01:36:10,069 --> 01:36:12,799
would be to launch one thread for each

1947
01:36:11,420 --> 01:36:14,109
Fox will the higher level officiated

1948
01:36:12,800 --> 01:36:16,579
from the lower level nonetheless

1949
01:36:14,109 --> 01:36:18,789
advantage for shared voxels blah blah

1950
01:36:16,579 --> 01:36:18,789
blah

1951
01:36:30,850 --> 01:36:35,719
so I'm not sure without reading some

1952
01:36:33,649 --> 01:36:36,679
more detail I really know exactly what

1953
01:36:35,719 --> 01:36:39,109
they're doing here but it sounds like

1954
01:36:36,679 --> 01:36:40,850
what they end up doing is the volume

1955
01:36:39,109 --> 01:36:46,488
transfer what you can kind of see the

1956
01:36:40,850 --> 01:36:48,670
diagram here actually the volume

1957
01:36:46,488 --> 01:36:53,149
transfer is kind of just like a

1958
01:36:48,670 --> 01:36:55,579
propagation through the octree so you

1959
01:36:53,149 --> 01:36:57,738
kind of like take services and you splat

1960
01:36:55,579 --> 01:36:59,630
it looks it is basically photon tracing

1961
01:36:57,738 --> 01:37:01,488
right in fact Harry said after photon

1962
01:36:59,630 --> 01:37:04,819
flooding you just kind of like propagate

1963
01:37:01,488 --> 01:37:09,769
a little bit out to give you some amount

1964
01:37:04,819 --> 01:37:11,238
of bleed and off you go right and I

1965
01:37:09,770 --> 01:37:15,409
assume they did this in a somewhat

1966
01:37:11,238 --> 01:37:17,529
multi-resolution fashion but I don't

1967
01:37:15,408 --> 01:37:17,529
know

1968
01:37:30,819 --> 01:37:36,009
so you can see here what they do is they

1969
01:37:33,220 --> 01:37:39,940
take the light position and they

1970
01:37:36,010 --> 01:37:41,260
basically treat the light as they render

1971
01:37:39,939 --> 01:37:44,139
the world from the light source and

1972
01:37:41,260 --> 01:37:48,280
treat that as basically like a where to

1973
01:37:44,140 --> 01:37:52,800
sort of shine where to sort of speed the

1974
01:37:48,279 --> 01:37:52,800
lights into the voxel right

1975
01:38:12,470 --> 01:38:22,350
so I feel like we would want an approach

1976
01:38:18,510 --> 01:38:24,030
that's simpler than that just because I

1977
01:38:22,350 --> 01:38:26,970
feel like that's going to really be

1978
01:38:24,029 --> 01:38:38,670
fairly demanding that's going to require

1979
01:38:26,970 --> 01:38:41,119
Atomics even so yeah it's really tough

1980
01:38:38,670 --> 01:38:41,119
to say

1981
01:38:54,640 --> 01:39:00,949
so I want to get a decision by the time

1982
01:38:59,000 --> 01:39:04,279
we end the stream today because you know

1983
01:39:00,948 --> 01:39:05,509
I walking through this process and again

1984
01:39:04,279 --> 01:39:06,979
the reason I include this on the stream

1985
01:39:05,510 --> 01:39:08,000
is just because this is what actually

1986
01:39:06,979 --> 01:39:09,079
happens when you're doing game

1987
01:39:08,000 --> 01:39:10,760
development right you have to make

1988
01:39:09,079 --> 01:39:12,529
decisions like this like I said the

1989
01:39:10,760 --> 01:39:13,760
decision here probably would be we want

1990
01:39:12,529 --> 01:39:18,380
to try a couple different things and I

1991
01:39:13,760 --> 01:39:22,909
don't really want to do that but just

1992
01:39:18,380 --> 01:39:24,319
thinking it through despite the fact

1993
01:39:22,909 --> 01:39:27,710
that it seems like there's more

1994
01:39:24,319 --> 01:39:30,619
information in the area of sort of the

1995
01:39:27,710 --> 01:39:36,469
spreading splatting LittleBigPlanet

1996
01:39:30,619 --> 01:39:41,420
Boskone tracing kind of thing I feel

1997
01:39:36,469 --> 01:39:43,630
like I actually like the point light

1998
01:39:41,420 --> 01:39:46,460
propagation model a little bit better

1999
01:39:43,630 --> 01:39:50,319
and the reason that I like that model a

2000
01:39:46,460 --> 01:39:54,640
little bit better is it just feels more

2001
01:39:50,319 --> 01:39:58,099
coherent to me like the voxel thing

2002
01:39:54,640 --> 01:39:59,989
feels a little too imprecise and I feel

2003
01:39:58,100 --> 01:40:03,140
like I would constantly be wrestling

2004
01:39:59,988 --> 01:40:04,968
with the discretization of that voxel

2005
01:40:03,140 --> 01:40:09,520
and what gets stored in a particular

2006
01:40:04,969 --> 01:40:13,069
node in like ways that are problematic

2007
01:40:09,520 --> 01:40:21,170
so it kind of feels like to me doing

2008
01:40:13,069 --> 01:40:22,519
something where we've got you know where

2009
01:40:21,170 --> 01:40:25,399
we've got those point lights seems a

2010
01:40:22,520 --> 01:40:28,280
little more st. in and the first step of

2011
01:40:25,399 --> 01:40:30,889
the voxel cone tracing process is

2012
01:40:28,279 --> 01:40:34,429
basically that step that I described

2013
01:40:30,890 --> 01:40:35,800
before totally without having looked at

2014
01:40:34,429 --> 01:40:38,359
the voxel under thing which is that

2015
01:40:35,800 --> 01:40:40,880
taking the light source and splatting

2016
01:40:38,359 --> 01:40:42,679
out point lights is actually the first

2017
01:40:40,880 --> 01:40:45,679
step of their process that the photon

2018
01:40:42,679 --> 01:40:49,520
feeding right that they were talking

2019
01:40:45,679 --> 01:40:55,069
about so that step has to happen one way

2020
01:40:49,520 --> 01:41:00,500
or the other and so to a certain extent

2021
01:40:55,069 --> 01:41:01,969
I feel like I might want to start with

2022
01:41:00,500 --> 01:41:03,529
the idea that that's going to happen

2023
01:41:01,969 --> 01:41:07,789
regardless so we're basically going to

2024
01:41:03,529 --> 01:41:10,699
produce a series of points and we're

2025
01:41:07,789 --> 01:41:12,739
talking about how were then going to use

2026
01:41:10,699 --> 01:41:14,029
those points but at the beginning we're

2027
01:41:12,739 --> 01:41:15,289
going to produce a series of point

2028
01:41:14,029 --> 01:41:36,319
lights one way or the other

2029
01:41:15,289 --> 01:41:39,439
really it would seem and so when you

2030
01:41:36,319 --> 01:41:40,639
produce that series of point lights it's

2031
01:41:39,439 --> 01:41:42,649
really a question of what are we going

2032
01:41:40,640 --> 01:41:44,570
to do with them after that rendering

2033
01:41:42,649 --> 01:41:46,129
cube Maps was one option and then the

2034
01:41:44,569 --> 01:41:50,119
other option is well we do something

2035
01:41:46,130 --> 01:41:51,500
more like the voxel or the splatting and

2036
01:41:50,119 --> 01:41:53,029
that would basically say we take those

2037
01:41:51,500 --> 01:41:54,890
light sources and we splat them into

2038
01:41:53,029 --> 01:41:57,859
some kind of a volume texture and then

2039
01:41:54,890 --> 01:42:00,350
we we sort of let the volume texture do

2040
01:41:57,859 --> 01:42:03,579
something interesting in terms of

2041
01:42:00,350 --> 01:42:07,670
propagation and so my question is is it

2042
01:42:03,579 --> 01:42:11,269
worth that does that actually get us

2043
01:42:07,670 --> 01:42:12,500
something or are we just wasting our

2044
01:42:11,270 --> 01:42:15,490
time and we should have just rendered

2045
01:42:12,500 --> 01:42:15,489
cube Maps everywhere

2046
01:42:16,180 --> 01:42:22,070
or if not cube maps then something else

2047
01:42:19,100 --> 01:42:30,890
right should we just render some other

2048
01:42:22,069 --> 01:42:32,380
thing that captures what those point

2049
01:42:30,890 --> 01:42:38,600
let's our lights are actually

2050
01:42:32,380 --> 01:42:40,960
representing and again it's kind of hard

2051
01:42:38,600 --> 01:42:40,960
to say

2052
01:42:43,850 --> 01:42:50,930
but I feel I feel like if we can produce

2053
01:42:48,020 --> 01:42:53,030
those point lights relatively quickly

2054
01:42:50,930 --> 01:42:56,119
and who knows maybe the right answer is

2055
01:42:53,029 --> 01:42:59,889
to produce those point lights in more

2056
01:42:56,119 --> 01:43:02,779
the fashion they were talking about but

2057
01:42:59,890 --> 01:43:05,329
for example I'm not really sure how they

2058
01:43:02,779 --> 01:43:07,369
how they do something like a skylight at

2059
01:43:05,329 --> 01:43:08,600
that point because the skylight you know

2060
01:43:07,369 --> 01:43:10,789
I know exactly how we would do a

2061
01:43:08,600 --> 01:43:12,110
skylight with our scheme are they

2062
01:43:10,789 --> 01:43:13,460
suggesting that if they were going to do

2063
01:43:12,109 --> 01:43:15,019
a skylight in the voxel code racing

2064
01:43:13,460 --> 01:43:16,579
world they would have to render from

2065
01:43:15,020 --> 01:43:20,060
many different points on the skylight

2066
01:43:16,579 --> 01:43:24,199
and then feed the light out that way

2067
01:43:20,060 --> 01:43:26,590
that seems rough to say the least I

2068
01:43:24,199 --> 01:43:28,609
don't know that that would really work

2069
01:43:26,590 --> 01:43:32,000
it seems like that might be cost

2070
01:43:28,609 --> 01:43:34,759
prohibitive whereas rate racing from

2071
01:43:32,000 --> 01:43:36,590
different points on the skylight is kind

2072
01:43:34,760 --> 01:43:39,579
of a more constant time manageable

2073
01:43:36,590 --> 01:43:39,579
process right

2074
01:44:02,770 --> 01:44:05,820
so what way

2075
01:44:17,559 --> 01:44:35,279
suppose we were to CPU raytrace light

2076
01:44:32,738 --> 01:44:35,279
propagation

2077
01:44:39,500 --> 01:45:06,939
and generate to generate point life okay

2078
01:44:53,350 --> 01:45:13,850
to render cube Maps at low res

2079
01:45:06,939 --> 01:45:19,449
throughout world and let's say we maybe

2080
01:45:13,850 --> 01:45:19,450
do something like you know 64 of these

2081
01:45:20,319 --> 01:45:35,389
three render um so look at those two

2082
01:45:32,840 --> 01:45:38,150
scuffs I don't think they're that

2083
01:45:35,390 --> 01:45:41,539
complicated right and I feel like

2084
01:45:38,149 --> 01:45:45,500
furthermore because we keep textures on

2085
01:45:41,539 --> 01:45:53,090
the CPU side anyway because we want to

2086
01:45:45,500 --> 01:45:54,350
support software rendering and that

2087
01:45:53,090 --> 01:45:55,789
doesn't seem prohibitive expensive

2088
01:45:54,350 --> 01:45:57,410
because CPUs always have more memory

2089
01:45:55,789 --> 01:46:01,130
than GPUs anyway and we don't use that

2090
01:45:57,409 --> 01:46:03,470
memory for anything else so keeping the

2091
01:46:01,130 --> 01:46:06,170
textures on the CPU side doesn't seem

2092
01:46:03,470 --> 01:46:12,320
problematic so when we trace we will

2093
01:46:06,170 --> 01:46:16,069
know what color we hit so CPU ray

2094
01:46:12,319 --> 01:46:17,929
tracing doesn't seem to be something

2095
01:46:16,069 --> 01:46:22,460
that would be prohibitive especially

2096
01:46:17,930 --> 01:46:24,980
because we don't have that many

2097
01:46:22,460 --> 01:46:28,789
primitives in the scene so I feel like

2098
01:46:24,979 --> 01:46:35,269
the biggest stumbling block here is what

2099
01:46:28,789 --> 01:46:37,460
is the acceleration structure because

2100
01:46:35,270 --> 01:46:39,290
right now our world is not really sorted

2101
01:46:37,460 --> 01:46:43,100
into anything that we can Ray trace into

2102
01:46:39,289 --> 01:46:44,930
particularly coherently you know we

2103
01:46:43,100 --> 01:46:49,310
don't have them sorted by anything

2104
01:46:44,930 --> 01:46:51,380
particularly convenient I guess we've

2105
01:46:49,310 --> 01:46:54,110
got world chunks and we can keep the

2106
01:46:51,380 --> 01:46:57,350
world chunks relatively small and maybe

2107
01:46:54,109 --> 01:46:58,729
that is sufficient but I don't remember

2108
01:46:57,350 --> 01:47:01,130
what the actual size of those world

2109
01:46:58,729 --> 01:47:02,719
Trump's are so maybe that's good enough

2110
01:47:01,130 --> 01:47:05,600
maybe the world chunks would be

2111
01:47:02,720 --> 01:47:07,730
sufficient to keep the computation cost

2112
01:47:05,600 --> 01:47:10,280
down but that would really be the

2113
01:47:07,729 --> 01:47:13,959
question there would just be you know

2114
01:47:10,279 --> 01:47:13,960
how Spencer would that be right

2115
01:47:17,859 --> 01:47:22,279
producing the point lights from that

2116
01:47:20,260 --> 01:47:24,199
process then is pretty straightforward

2117
01:47:22,279 --> 01:47:28,009
whenever we have a hit we just sample

2118
01:47:24,199 --> 01:47:29,689
the texture and we produce the point

2119
01:47:28,010 --> 01:47:34,130
light color based on its reflectance

2120
01:47:29,689 --> 01:47:36,439
right based on its color so that seems

2121
01:47:34,130 --> 01:47:38,659
pretty straightforward rendering the

2122
01:47:36,439 --> 01:47:40,879
cube maps at that point is real easy you

2123
01:47:38,659 --> 01:47:43,430
just take the array of point lights and

2124
01:47:40,880 --> 01:47:45,949
the current scene geometry and you

2125
01:47:43,430 --> 01:47:51,940
render it with the z-buffer

2126
01:47:45,949 --> 01:47:51,939
and you let it occlude that's about it

2127
01:47:52,000 --> 01:47:59,989
where I don't think there's much more to

2128
01:47:53,960 --> 01:48:02,439
it than that and that would produce the

2129
01:47:59,989 --> 01:48:02,439
cube Maps

2130
01:48:06,179 --> 01:48:11,100
so the real question is just is there

2131
01:48:08,488 --> 01:48:15,839
enough GPU power to render you know

2132
01:48:11,100 --> 01:48:17,219
these these cube maps and I guess yeah

2133
01:48:15,840 --> 01:48:18,750
like I said we would definitely have to

2134
01:48:17,219 --> 01:48:21,000
have a texture atlas or something it's

2135
01:48:18,750 --> 01:48:22,350
not going to fly with the number of

2136
01:48:21,000 --> 01:48:25,710
texture changes that are in there now

2137
01:48:22,350 --> 01:48:27,870
but that's not you know an impossible

2138
01:48:25,710 --> 01:48:37,649
thing to do we could we could just use a

2139
01:48:27,869 --> 01:48:40,260
texture array and be done with it so I

2140
01:48:37,649 --> 01:48:42,509
don't know that seems like what I would

2141
01:48:40,260 --> 01:48:44,550
probably say is the best approach to

2142
01:48:42,510 --> 01:48:47,039
getting some reasonable lighting without

2143
01:48:44,550 --> 01:48:50,390
too much this is the only thing that

2144
01:48:47,039 --> 01:48:53,488
scares me a little bit about it is I

2145
01:48:50,390 --> 01:48:55,260
don't want the game to have to do a lot

2146
01:48:53,488 --> 01:48:58,919
of work maintaining a separate

2147
01:48:55,260 --> 01:49:07,159
acceleration structure in order to do

2148
01:48:58,920 --> 01:49:07,158
the the raytrace acceleration but

2149
01:49:12,630 --> 01:49:18,039
it might be that since we've got the

2150
01:49:16,329 --> 01:49:19,420
world chunked up already that's the

2151
01:49:18,039 --> 01:49:24,250
vision because there just isn't that

2152
01:49:19,420 --> 01:49:25,329
much stuff in it but I don't know so I'm

2153
01:49:24,250 --> 01:49:28,630
going to go ahead and go to the Q&amp;A

2154
01:49:25,329 --> 01:49:31,720
you've heard my thoughts on this kind of

2155
01:49:28,630 --> 01:49:34,630
my just exploration of it and so if

2156
01:49:31,720 --> 01:49:35,320
you've got opinions on it or questions

2157
01:49:34,630 --> 01:49:37,569
about it

2158
01:49:35,319 --> 01:49:39,670
now would be a good time to air them

2159
01:49:37,569 --> 01:49:42,969
because tomorrow I will probably start

2160
01:49:39,670 --> 01:49:46,329
coding something so if you have a

2161
01:49:42,970 --> 01:49:50,140
notable objection or idea that needs

2162
01:49:46,329 --> 01:49:54,269
considering now is the time to get it in

2163
01:49:50,140 --> 01:49:54,270
there before the typing begins

2164
01:50:21,819 --> 01:50:26,869
MTS mocks says don't we already need

2165
01:50:25,130 --> 01:50:30,350
acceleration because the lookups for the

2166
01:50:26,869 --> 01:50:32,960
closest traversable is already slow yes

2167
01:50:30,350 --> 01:50:36,770
but unfortunately and this is the this

2168
01:50:32,960 --> 01:50:41,239
is the eternal bummer right is that the

2169
01:50:36,770 --> 01:50:44,120
acceleration is a different kind right

2170
01:50:41,238 --> 01:50:46,069
and so maybe this is why I'm saying like

2171
01:50:44,119 --> 01:50:47,390
maybe it turns out that they can be the

2172
01:50:46,069 --> 01:50:49,429
same because if the world chunks just

2173
01:50:47,390 --> 01:50:54,619
work for both of these or something then

2174
01:50:49,430 --> 01:51:04,039
maybe it's fine but the problem is that

2175
01:50:54,619 --> 01:51:05,059
one is a closest point query kind of a

2176
01:51:04,039 --> 01:51:13,519
thing

2177
01:51:05,060 --> 01:51:17,840
and one is a line query right I so in

2178
01:51:13,520 --> 01:51:19,880
the case of wanting to accelerate the

2179
01:51:17,840 --> 01:51:21,800
closest traversals which we definitely

2180
01:51:19,880 --> 01:51:24,590
want to do what we're looking at doing

2181
01:51:21,800 --> 01:51:27,590
there is saying well okay we've got the

2182
01:51:24,590 --> 01:51:30,529
world jumped up in some way a straight

2183
01:51:27,590 --> 01:51:33,140
up voxel ization of the world that just

2184
01:51:30,529 --> 01:51:34,789
deals with chunks will just work because

2185
01:51:33,140 --> 01:51:38,239
we know we just want to search for

2186
01:51:34,789 --> 01:51:41,149
whatever is in the closest area right so

2187
01:51:38,238 --> 01:51:43,218
we know this will work for that just

2188
01:51:41,149 --> 01:51:44,569
fine and that's all we want to do and we

2189
01:51:43,219 --> 01:51:46,250
already sort of have that so all you

2190
01:51:44,569 --> 01:51:48,409
have to do is actually start to preserve

2191
01:51:46,250 --> 01:51:50,029
it in the same region when we bring

2192
01:51:48,409 --> 01:51:53,090
things into some region we want to keep

2193
01:51:50,029 --> 01:51:55,969
that but for line queries is a little

2194
01:51:53,090 --> 01:51:58,789
bit different because line queries want

2195
01:51:55,969 --> 01:52:01,159
to do this sort of thing and they need

2196
01:51:58,789 --> 01:52:02,960
to be able to figure out what's the you

2197
01:52:01,159 --> 01:52:07,819
know what's the thing they will first

2198
01:52:02,960 --> 01:52:10,609
hit and so the problem with that is that

2199
01:52:07,819 --> 01:52:12,019
if you have a voxel ization and the

2200
01:52:10,609 --> 01:52:13,429
first thing you're going to hit is way

2201
01:52:12,020 --> 01:52:16,310
on the other side of it you're

2202
01:52:13,430 --> 01:52:19,010
traversing like tons of voxels to get to

2203
01:52:16,310 --> 01:52:24,890
the answer and it ends up not being

2204
01:52:19,010 --> 01:52:29,270
particularly um it ends up not being a

2205
01:52:24,890 --> 01:52:32,210
particularly fast solution right and so

2206
01:52:29,270 --> 01:52:33,660
the question is just will that kind of

2207
01:52:32,210 --> 01:52:37,170
solution be fast enough

2208
01:52:33,659 --> 01:52:39,569
and if it isn't great because like you

2209
01:52:37,170 --> 01:52:41,699
say we know that we will be taking

2210
01:52:39,569 --> 01:52:44,759
advantage of some acceleration structure

2211
01:52:41,699 --> 01:52:46,349
probably something based on the world

2212
01:52:44,760 --> 01:52:47,520
chunks because we're already packing and

2213
01:52:46,350 --> 01:52:49,440
unpacking things from them so we'll

2214
01:52:47,520 --> 01:52:50,640
probably just keep things we pull them

2215
01:52:49,439 --> 01:52:56,250
in the sim region will keep them

2216
01:52:50,640 --> 01:52:58,200
arranged in a spatially coherent way but

2217
01:52:56,250 --> 01:53:03,720
the question is just does that produce a

2218
01:52:58,199 --> 01:53:07,769
fast enough line query and I don't know

2219
01:53:03,720 --> 01:53:09,840
but even if it doesn't produce the best

2220
01:53:07,770 --> 01:53:11,640
online query we may still be saved by

2221
01:53:09,840 --> 01:53:13,619
the fact that perhaps we can put

2222
01:53:11,640 --> 01:53:15,539
something on top of it that does so that

2223
01:53:13,619 --> 01:53:17,250
we don't need to acceleration structures

2224
01:53:15,539 --> 01:53:19,470
we just augment our existing

2225
01:53:17,250 --> 01:53:22,949
acceleration structure with one more

2226
01:53:19,470 --> 01:53:26,369
thing for example we might put a

2227
01:53:22,949 --> 01:53:30,119
secondary layer on top of our of our

2228
01:53:26,369 --> 01:53:33,000
grid our world grid that's a little more

2229
01:53:30,119 --> 01:53:35,180
like an octree so four nodes four times

2230
01:53:33,000 --> 01:53:38,460
when there's just empty space there will

2231
01:53:35,180 --> 01:53:40,829
record the bigger empty space nosov it

2232
01:53:38,460 --> 01:53:47,250
so that the raytracer can skip through

2233
01:53:40,829 --> 01:53:57,000
it what are these called as they have a

2234
01:53:47,250 --> 01:53:58,829
name can't remember the name so there's

2235
01:53:57,000 --> 01:54:06,020
a name for this process where you

2236
01:53:58,829 --> 01:54:09,210
basically have a world rid let's say

2237
01:54:06,020 --> 01:54:11,160
like we will have and I need to draw a

2238
01:54:09,210 --> 01:54:13,220
fairly dense one here to get the point

2239
01:54:11,159 --> 01:54:13,220
across

2240
01:54:16,899 --> 01:54:22,909
right so we got the world oh you know

2241
01:54:21,710 --> 01:54:24,619
what now I think about it

2242
01:54:22,909 --> 01:54:27,189
this works in 2d too so there I can I

2243
01:54:24,619 --> 01:54:29,779
can make a simpler diagram for you I

2244
01:54:27,189 --> 01:54:31,309
forgot this is this is not something

2245
01:54:29,779 --> 01:54:39,380
that requires the full volume to

2246
01:54:31,310 --> 01:54:42,920
understand how it works so the idea here

2247
01:54:39,380 --> 01:54:45,949
is well okay I'm going to write trace

2248
01:54:42,920 --> 01:54:47,899
through a grid the slowness of ray

2249
01:54:45,949 --> 01:54:50,420
tracing through a good comes when you

2250
01:54:47,899 --> 01:54:51,829
don't hit something so if I start my ray

2251
01:54:50,420 --> 01:54:54,739
trace here and I start tracing through

2252
01:54:51,829 --> 01:54:58,609
the grid if this cell contains the thing

2253
01:54:54,739 --> 01:55:00,889
I hit right that's great because I'm

2254
01:54:58,609 --> 01:55:02,869
going to get the answer right away the

2255
01:55:00,890 --> 01:55:04,730
problem comes when there's nothing in

2256
01:55:02,869 --> 01:55:06,800
that area and I end up having to go all

2257
01:55:04,729 --> 01:55:12,500
the way out here because now I'm looking

2258
01:55:06,800 --> 01:55:13,760
through 1 2 3 4 5 6 7 8 9 10 11 ish I

2259
01:55:12,500 --> 01:55:16,279
don't know how many they're exactly to

2260
01:55:13,760 --> 01:55:19,180
be something like that 11 fells for the

2261
01:55:16,279 --> 01:55:23,569
answer which is a lot of iteration right

2262
01:55:19,180 --> 01:55:25,840
and so what what acceleration structure

2263
01:55:23,569 --> 01:55:29,899
you can use for this is to store

2264
01:55:25,840 --> 01:55:32,300
basically empty space specifically so in

2265
01:55:29,899 --> 01:55:36,139
every cell that doesn't have something

2266
01:55:32,300 --> 01:55:38,600
in it you store a sort of you don't have

2267
01:55:36,140 --> 01:55:40,010
to do it per cell you can do it as sort

2268
01:55:38,600 --> 01:55:42,350
of a separate region on top which is

2269
01:55:40,010 --> 01:55:44,480
basically just you store cubes or I

2270
01:55:42,350 --> 01:55:48,910
should say not cubes right rectangular

2271
01:55:44,479 --> 01:55:52,549
prisms so like rectangular shapes in 2d

2272
01:55:48,909 --> 01:55:55,189
that are empty and you test against

2273
01:55:52,550 --> 01:55:58,430
those as you pass through them so you go

2274
01:55:55,189 --> 01:56:00,799
here you go oh I hit this thing I know I

2275
01:55:58,430 --> 01:56:02,960
can skip all the way to here and start

2276
01:56:00,800 --> 01:56:04,400
my ray tracing there which stops you

2277
01:56:02,960 --> 01:56:05,840
from mapping to consider any of these

2278
01:56:04,399 --> 01:56:08,059
cells because you already know they're

2279
01:56:05,840 --> 01:56:09,739
all in the empty area so we might be

2280
01:56:08,060 --> 01:56:11,480
able to pile something on top that

2281
01:56:09,739 --> 01:56:13,340
doesn't really conflict that's just an

2282
01:56:11,479 --> 01:56:15,259
augmentation of the data structure that

2283
01:56:13,340 --> 01:56:17,900
would allow us to do the ray tracing

2284
01:56:15,260 --> 01:56:21,320
faster on it right so it's entirely

2285
01:56:17,899 --> 01:56:24,469
possible that we could do something that

2286
01:56:21,319 --> 01:56:26,090
it just builds on the stream scheme that

2287
01:56:24,470 --> 01:56:28,159
we already have so that we don't have

2288
01:56:26,090 --> 01:56:28,940
two schemes which starts to get a little

2289
01:56:28,159 --> 01:56:30,979
long in the tooth

2290
01:56:28,939 --> 01:56:33,619
my opinion if we have to have one for

2291
01:56:30,979 --> 01:56:35,599
our closest point queries and one for

2292
01:56:33,619 --> 01:56:37,159
our rate racing if that starts to get

2293
01:56:35,600 --> 01:56:39,310
like how many explorers detectors are we

2294
01:56:37,159 --> 01:56:45,760
really going to have here folks

2295
01:56:39,310 --> 01:56:45,760
right so that's something

2296
01:56:55,149 --> 01:57:02,089
Jerzy says why not use a single distance

2297
01:56:59,689 --> 01:57:06,198
field I assume you mean signed distance

2298
01:57:02,090 --> 01:57:08,420
fields but I'm not 100% sure if single

2299
01:57:06,198 --> 01:57:10,279
distance field is a thing I don't know

2300
01:57:08,420 --> 01:57:12,980
what it is but if signed distance field

2301
01:57:10,279 --> 01:57:14,750
is the question why don't you just use

2302
01:57:12,979 --> 01:57:17,959
scientific fields there best for line

2303
01:57:14,750 --> 01:57:24,649
queries sorry a bit of context just

2304
01:57:17,960 --> 01:57:26,210
joining the stream so yeah that's a good

2305
01:57:24,649 --> 01:57:29,210
question scientists and fields obviously

2306
01:57:26,210 --> 01:57:34,730
are pretty popular in like the demo

2307
01:57:29,210 --> 01:57:36,560
scene right and they have kind of a nice

2308
01:57:34,729 --> 01:57:39,169
process that they're relatively easy to

2309
01:57:36,560 --> 01:57:41,239
raytrace through because at any time you

2310
01:57:39,170 --> 01:57:43,880
can figure out roughly how far away you

2311
01:57:41,238 --> 01:57:45,979
are from the nearest surface so you know

2312
01:57:43,880 --> 01:57:49,430
how far you can step along the Ray

2313
01:57:45,979 --> 01:57:50,389
without hitting anything right and just

2314
01:57:49,430 --> 01:57:51,980
for those of you who aren't familiar

2315
01:57:50,390 --> 01:58:00,860
with these I'll I'll sort of give you a

2316
01:57:51,979 --> 01:58:02,929
little bit of a breakdown actually I

2317
01:58:00,859 --> 01:58:04,880
guess I don't really want to draw it

2318
01:58:02,930 --> 01:58:09,050
quite that way so I'll just pretend this

2319
01:58:04,880 --> 01:58:10,670
is a very dense grid right so let's say

2320
01:58:09,050 --> 01:58:12,050
that I wanted to retrace and let's say

2321
01:58:10,670 --> 01:58:13,699
for sake of argument because it's the

2322
01:58:12,050 --> 01:58:15,770
easiest thing to talk about in a signed

2323
01:58:13,698 --> 01:58:20,569
distance field let's say I've got some

2324
01:58:15,770 --> 01:58:22,670
spheres right so I've got a sphere

2325
01:58:20,569 --> 01:58:25,039
that's sitting here and I've got a

2326
01:58:22,670 --> 01:58:29,930
sphere that's sitting here and I've got

2327
01:58:25,039 --> 01:58:33,289
a sphere that's sitting here right and

2328
01:58:29,930 --> 01:58:34,880
now I want a ray trace and this is what

2329
01:58:33,289 --> 01:58:36,319
I'm doing so I'm looking from here and

2330
01:58:34,880 --> 01:58:38,029
I'm looking that direction so obviously

2331
01:58:36,319 --> 01:58:40,759
the thing I'm looking for is the Ray

2332
01:58:38,029 --> 01:58:44,809
trace of that sphere right I want that

2333
01:58:40,760 --> 01:58:47,780
intersection point well if I take a look

2334
01:58:44,810 --> 01:58:52,600
at this I could say all right if I

2335
01:58:47,779 --> 01:58:54,319
wanted to produce some kind of a

2336
01:58:52,600 --> 01:58:56,690
acceleration structure of this I could

2337
01:58:54,319 --> 01:58:58,880
produce a signed distance field

2338
01:58:56,689 --> 01:58:59,988
acceleration search for a grid and we'll

2339
01:58:58,880 --> 01:59:02,600
see in a minute that you can actually

2340
01:58:59,988 --> 01:59:04,968
get rid of the grid entirely but I could

2341
01:59:02,600 --> 01:59:06,900
say for any particular point I could

2342
01:59:04,969 --> 01:59:10,380
imagine computing what the

2343
01:59:06,899 --> 01:59:13,769
distance is to every object in the scene

2344
01:59:10,380 --> 01:59:17,670
from that point and storing whatever the

2345
01:59:13,770 --> 01:59:19,500
one is that's the closest right so at

2346
01:59:17,670 --> 01:59:21,630
this point in the grid right at these

2347
01:59:19,500 --> 01:59:24,448
points in the grid I would say oh well

2348
01:59:21,630 --> 01:59:30,449
the closest thing in this case is there

2349
01:59:24,448 --> 01:59:32,579
so this this the point in my textile or

2350
01:59:30,448 --> 01:59:34,948
whatever would be that distance right

2351
01:59:32,579 --> 01:59:36,479
and when I got closer to say to this one

2352
01:59:34,948 --> 01:59:39,869
which was here it would be that distance

2353
01:59:36,479 --> 01:59:41,669
right so at every point in my texture or

2354
01:59:39,869 --> 01:59:44,340
my volume or whatever I would just store

2355
01:59:41,670 --> 01:59:46,859
the distance to the closest object now

2356
01:59:44,340 --> 01:59:48,840
what would happen is when I look and say

2357
01:59:46,859 --> 01:59:51,750
okay I want to start retracing from here

2358
01:59:48,840 --> 01:59:53,670
I would look up into the textile at that

2359
01:59:51,750 --> 01:59:55,469
location and say what is the closest

2360
01:59:53,670 --> 01:59:58,170
thing well the closest thing is like

2361
01:59:55,469 --> 02:00:01,590
probably that far away which means I can

2362
01:59:58,170 --> 02:00:04,500
step that far along the Ray right and

2363
02:00:01,590 --> 02:00:05,760
now I can do it again what's the closest

2364
02:00:04,500 --> 02:00:07,079
thing here well the closest thing here

2365
02:00:05,760 --> 02:00:09,360
is there okay can step that far along

2366
02:00:07,079 --> 02:00:10,800
the Ray and eventually I look in the

2367
02:00:09,359 --> 02:00:16,529
signed distance field and I find the

2368
02:00:10,800 --> 02:00:18,420
distance is small enough that I no

2369
02:00:16,529 --> 02:00:20,069
longer want to step any further I'm like

2370
02:00:18,420 --> 02:00:21,300
I basically hit something right I'm

2371
02:00:20,069 --> 02:00:25,049
close enough to an object that I can

2372
02:00:21,300 --> 02:00:27,000
consider it ahead right so that's how

2373
02:00:25,050 --> 02:00:29,850
sinusoidal works and the nice part about

2374
02:00:27,000 --> 02:00:32,279
them is if you have surfaces whose

2375
02:00:29,850 --> 02:00:34,079
distances can be computed relatively

2376
02:00:32,279 --> 02:00:36,210
efficiently you don't need an

2377
02:00:34,079 --> 02:00:40,260
acceleration structure almost at all

2378
02:00:36,210 --> 02:00:43,230
right you can use a very simple binning

2379
02:00:40,260 --> 02:00:45,810
to just kind of go what objects do I

2380
02:00:43,229 --> 02:00:48,149
need to look at but for example here if

2381
02:00:45,810 --> 02:00:50,130
I just have three spheres rather than

2382
02:00:48,149 --> 02:00:52,679
ever computing any kind of grid or

2383
02:00:50,130 --> 02:00:54,600
anything I can just say well whatever

2384
02:00:52,679 --> 02:00:58,109
point I'm at just compute the distance

2385
02:00:54,600 --> 02:01:01,590
to each of the three spheres right and

2386
02:00:58,109 --> 02:01:04,469
it's exact now it doesn't have any kind

2387
02:01:01,590 --> 02:01:06,929
of discretization or anything and so at

2388
02:01:04,469 --> 02:01:08,969
that point you end up going well all

2389
02:01:06,929 --> 02:01:11,819
right now I just have an acceleration

2390
02:01:08,969 --> 02:01:16,319
structure that lets me know which rough

2391
02:01:11,819 --> 02:01:18,238
objects I need to consider the reason

2392
02:01:16,319 --> 02:01:21,069
I'm not a huge fan of slime distance

2393
02:01:18,238 --> 02:01:24,789
field is that they tend to

2394
02:01:21,069 --> 02:01:26,500
a kind of special case like it's sort of

2395
02:01:24,789 --> 02:01:28,810
hard to do polygamous things of signed

2396
02:01:26,500 --> 02:01:31,929
distance fields in a particularly useful

2397
02:01:28,810 --> 02:01:36,159
way because you end up having to do the

2398
02:01:31,929 --> 02:01:38,050
polygons sorting into some kind of

2399
02:01:36,158 --> 02:01:39,698
acceleration structure anyway at that

2400
02:01:38,050 --> 02:01:44,020
point it's unclear why you weren't just

2401
02:01:39,698 --> 02:01:49,839
ray tracing it right and the same person

2402
02:01:44,020 --> 02:01:55,780
suggested KD tree afterwards and I guess

2403
02:01:49,840 --> 02:01:58,090
what I would say is the the KD tree is

2404
02:01:55,779 --> 02:02:01,059
the primary way you accelerate ray

2405
02:01:58,090 --> 02:02:03,520
tracing and what I was trying to say

2406
02:02:01,060 --> 02:02:06,550
before is that's the part I don't like

2407
02:02:03,520 --> 02:02:09,579
about this idea is I don't want to have

2408
02:02:06,550 --> 02:02:12,070
two KD tree my scene just for the light

2409
02:02:09,578 --> 02:02:15,069
propagation step it feels like adding a

2410
02:02:12,069 --> 02:02:16,809
lot of complexity KD trees are what you

2411
02:02:15,069 --> 02:02:19,000
use for ray tracing acceleration

2412
02:02:16,810 --> 02:02:23,320
normally you don't typically use sighing

2413
02:02:19,000 --> 02:02:25,750
distance fields scientists and fields

2414
02:02:23,319 --> 02:02:35,649
are usually if you have very special

2415
02:02:25,750 --> 02:02:37,090
purpose kinds of shapes not polygons Kim

2416
02:02:35,649 --> 02:02:38,799
Jorgen said shouldn't we get the frame

2417
02:02:37,090 --> 02:02:40,510
rate to reasonable range before adding

2418
02:02:38,800 --> 02:02:43,150
more complexity how do we knew our

2419
02:02:40,510 --> 02:02:49,659
budget but our frame rates excellent

2420
02:02:43,149 --> 02:02:55,029
right now isn't it what's wrong with our

2421
02:02:49,658 --> 02:02:57,189
frame rate this is this machine is like

2422
02:02:55,029 --> 02:03:02,069
what eight years old now at this point

2423
02:02:57,189 --> 02:03:02,069
seven years old something like that and

2424
02:03:02,520 --> 02:03:13,869
if I compile our game in you know a

2425
02:03:13,210 --> 02:03:18,969
release

2426
02:03:13,868 --> 02:03:21,189
configuration the I'm pretty sure the

2427
02:03:18,969 --> 02:03:26,469
frame rate is totally usable right like

2428
02:03:21,189 --> 02:03:28,419
I mean I what's wrong with that frame

2429
02:03:26,469 --> 02:03:31,029
rate would be my first question like

2430
02:03:28,420 --> 02:03:34,658
what what do you feel like you need to

2431
02:03:31,029 --> 02:03:34,969
fix I'm pretty sure we already run at

2432
02:03:34,658 --> 02:03:36,618
six

2433
02:03:34,969 --> 02:03:39,170
frame the second we definitely run it 30

2434
02:03:36,618 --> 02:03:46,368
even in debug so I'm not sure what the

2435
02:03:39,170 --> 02:03:48,880
problem with the frame rate would be if

2436
02:03:46,368 --> 02:03:48,880
that makes sense

2437
02:03:50,448 --> 02:03:59,328
are there obvious visual differences in

2438
02:03:52,639 --> 02:04:04,038
these different lighting methods well I

2439
02:03:59,328 --> 02:04:05,719
mean yes and no so all of them are kind

2440
02:04:04,038 --> 02:04:09,288
of approximate and it's hard to know

2441
02:04:05,719 --> 02:04:12,679
what the differences will be a parent in

2442
02:04:09,288 --> 02:04:14,658
any particular game without doing it

2443
02:04:12,679 --> 02:04:16,399
especially a sprite based game like

2444
02:04:14,658 --> 02:04:18,109
handmade arrow is pretty different from

2445
02:04:16,399 --> 02:04:20,719
the kinds of scenes you typically would

2446
02:04:18,109 --> 02:04:23,328
see these lighting models tested on so

2447
02:04:20,719 --> 02:04:27,800
we're a bit in uncharted territory to a

2448
02:04:23,328 --> 02:04:30,380
certain extent because we don't even

2449
02:04:27,800 --> 02:04:31,909
have 3d geometry so I'm not really I

2450
02:04:30,380 --> 02:04:35,659
mean the cubes are but the rest of it

2451
02:04:31,908 --> 02:04:36,828
isn't so I really don't know what the

2452
02:04:35,658 --> 02:04:44,268
visual quality difference would be

2453
02:04:36,828 --> 02:04:46,788
between them Valdis I'm not planning on

2454
02:04:44,269 --> 02:04:49,849
putting in shadows I don't tend to like

2455
02:04:46,788 --> 02:04:52,099
hard shadowy looks I like the softer

2456
02:04:49,849 --> 02:04:56,150
kind of just sort of ambient lighting

2457
02:04:52,099 --> 02:04:58,599
look so I only care about light

2458
02:04:56,149 --> 02:05:02,268
occlusion like we talked about already

2459
02:04:58,599 --> 02:05:03,860
but like hard shadows I don't want so

2460
02:05:02,269 --> 02:05:05,690
those will just be baked into the art

2461
02:05:03,859 --> 02:05:08,238
assets as a little like ambient

2462
02:05:05,689 --> 02:05:13,219
occlusion kind of ground thing that's

2463
02:05:08,238 --> 02:05:18,768
there but I don't want shadows in the in

2464
02:05:13,219 --> 02:05:21,309
the hard shadows sense so that I am just

2465
02:05:18,769 --> 02:05:24,670
not putting into the renderer in any way

2466
02:05:21,309 --> 02:05:24,670
if that makes sense

2467
02:05:34,470 --> 02:05:38,880
Illume e25 do you know if your

2468
02:05:37,050 --> 02:05:43,789
broadcasts have inspired improvements in

2469
02:05:38,880 --> 02:05:49,510
popular game engines out there um I

2470
02:05:43,789 --> 02:05:50,689
don't know I guess what I would say is I

2471
02:05:49,510 --> 02:05:52,949
[Applause]

2472
02:05:50,689 --> 02:05:55,049
you know certainly for something like

2473
02:05:52,949 --> 02:05:57,119
rendering the answer is definitely going

2474
02:05:55,050 --> 02:05:59,150
to be no because we're you know they're

2475
02:05:57,119 --> 02:06:07,349
doing stuff that's way more complicated

2476
02:05:59,149 --> 02:06:13,619
and a 3d based than what we're doing but

2477
02:06:07,350 --> 02:06:15,180
I guess what I would say is I I have

2478
02:06:13,619 --> 02:06:16,559
heard from experienced developers who've

2479
02:06:15,180 --> 02:06:18,180
seen stuff on the stream like the

2480
02:06:16,560 --> 02:06:20,550
dynamic code loading or stuff like that

2481
02:06:18,180 --> 02:06:22,680
our loop-de-loop like coding stuff for

2482
02:06:20,550 --> 02:06:24,390
example is what common one occasionally

2483
02:06:22,680 --> 02:06:27,930
we will do so technique that they had

2484
02:06:24,390 --> 02:06:31,140
not thought of or something that they

2485
02:06:27,930 --> 02:06:33,480
then go and do I don't know that that's

2486
02:06:31,140 --> 02:06:35,850
led to any improvements in game engines

2487
02:06:33,479 --> 02:06:42,179
like unreal or unity or something like

2488
02:06:35,850 --> 02:06:44,039
that I have no idea but you know those

2489
02:06:42,180 --> 02:06:46,350
are probably going to be few and far

2490
02:06:44,039 --> 02:06:50,250
between because this is a very

2491
02:06:46,350 --> 02:06:53,460
educational scroot stream and most of

2492
02:06:50,250 --> 02:06:54,750
the time I would suspect that the things

2493
02:06:53,460 --> 02:06:56,640
I talked about are things that

2494
02:06:54,750 --> 02:06:59,640
experience engine programmers should

2495
02:06:56,640 --> 02:07:01,850
already know and so the chance that I'm

2496
02:06:59,640 --> 02:07:08,010
covering something that they have not

2497
02:07:01,850 --> 02:07:12,150
already had to do is not high that would

2498
02:07:08,010 --> 02:07:14,940
be what I would say so once in a while

2499
02:07:12,149 --> 02:07:17,699
we do cover something that kind of may

2500
02:07:14,939 --> 02:07:19,919
be something that that is a little bit

2501
02:07:17,699 --> 02:07:25,319
more special in that sense but that's

2502
02:07:19,920 --> 02:07:27,569
the rare case right and the sorts of

2503
02:07:25,319 --> 02:07:30,269
things that we could do on the show that

2504
02:07:27,569 --> 02:07:32,369
might be pretty interesting like you

2505
02:07:30,270 --> 02:07:36,540
know building with a build dot bat file

2506
02:07:32,369 --> 02:07:38,369
very quickly and architecting the game

2507
02:07:36,539 --> 02:07:40,079
so it's a very hard separation between

2508
02:07:38,369 --> 02:07:42,779
the platform layer in the game layer or

2509
02:07:40,079 --> 02:07:44,909
things like this a lot of those are

2510
02:07:42,779 --> 02:07:46,469
things that you know modern engines

2511
02:07:44,909 --> 02:07:47,119
can't even do at this point because

2512
02:07:46,470 --> 02:07:49,100
there's

2513
02:07:47,119 --> 02:07:52,539
so overweight and massive they're like

2514
02:07:49,100 --> 02:07:52,539
these you know 3 million lines

2515
02:07:52,600 --> 02:07:56,660
monstrosity and so either they thought

2516
02:07:55,039 --> 02:07:59,689
of at the beginning and it works that

2517
02:07:56,659 --> 02:08:00,199
way or they didn't and they ain't fixing

2518
02:07:59,689 --> 02:08:04,129
it now

2519
02:08:00,199 --> 02:08:05,779
right so you know architectural things

2520
02:08:04,130 --> 02:08:07,900
we may do on the stream that might be

2521
02:08:05,779 --> 02:08:10,670
particularly good or better than average

2522
02:08:07,899 --> 02:08:12,289
I think there's a pretty limited degree

2523
02:08:10,670 --> 02:08:14,600
to which that can have an effect on an

2524
02:08:12,289 --> 02:08:17,239
existing engine because either they

2525
02:08:14,600 --> 02:08:20,660
already knew how to do it well and it's

2526
02:08:17,239 --> 02:08:22,130
done well or they didn't and seeing it

2527
02:08:20,659 --> 02:08:26,920
on this stream ain't going to help them

2528
02:08:22,130 --> 02:08:29,539
because they're already so far down a

2529
02:08:26,920 --> 02:08:33,010
tangled path that it would be very hard

2530
02:08:29,539 --> 02:08:33,010
to untangle

2531
02:08:42,479 --> 02:08:47,529
valve booths so all of this is still not

2532
02:08:45,488 --> 02:08:50,799
a physically based rendering renderer

2533
02:08:47,529 --> 02:08:53,309
correct so we are not trying to do any

2534
02:08:50,800 --> 02:08:57,480
kind of physically based rendering

2535
02:08:53,310 --> 02:09:01,690
physically based rendering is trying to

2536
02:08:57,479 --> 02:09:07,979
take into account the actual laws of

2537
02:09:01,689 --> 02:09:11,079
physical light transport you know the

2538
02:09:07,979 --> 02:09:14,109
way in which photons actually have to

2539
02:09:11,079 --> 02:09:19,539
behave to conserve energy you know for

2540
02:09:14,109 --> 02:09:23,189
now sorts of stuff a spectrum crowd

2541
02:09:19,539 --> 02:09:23,189
criteria all these other sorts of things

2542
02:09:23,429 --> 02:09:29,050
we don't have any of that information in

2543
02:09:27,010 --> 02:09:32,789
our assets anyway they're just

2544
02:09:29,050 --> 02:09:35,310
hand-painted cartoon sprites so

2545
02:09:32,789 --> 02:09:37,600
physically based rendering makes like

2546
02:09:35,310 --> 02:09:41,080
almost no sense at all

2547
02:09:37,600 --> 02:09:43,360
for something like handmade hero so what

2548
02:09:41,079 --> 02:09:46,689
we want is not physically based

2549
02:09:43,359 --> 02:09:49,630
rendering but we do want some of the

2550
02:09:46,689 --> 02:09:52,779
physics of rendering to come into play

2551
02:09:49,630 --> 02:09:54,369
to give us a nice look right and that is

2552
02:09:52,779 --> 02:10:00,939
why I care about things like bounce

2553
02:09:54,369 --> 02:10:03,969
lighting and I would like those things

2554
02:10:00,939 --> 02:10:06,729
to be in the game the reason for that is

2555
02:10:03,969 --> 02:10:10,510
because they lead to a softer satisfying

2556
02:10:06,729 --> 02:10:13,209
look that's more like real light we

2557
02:10:10,510 --> 02:10:16,570
don't need to simulate the real physics

2558
02:10:13,210 --> 02:10:18,730
of light because our art is itself

2559
02:10:16,569 --> 02:10:23,469
impressionistic and is not meant to look

2560
02:10:18,729 --> 02:10:25,089
realistic but we do want the ability to

2561
02:10:23,469 --> 02:10:28,359
get some of the physical aspects of

2562
02:10:25,090 --> 02:10:30,819
light because they produce a nice look

2563
02:10:28,359 --> 02:10:37,569
for the game and bouncing bounce light

2564
02:10:30,819 --> 02:10:39,069
is one of those things right so yeah

2565
02:10:37,569 --> 02:10:44,349
it's important to draw a distinction

2566
02:10:39,069 --> 02:10:46,599
between a completely physics based

2567
02:10:44,350 --> 02:10:48,280
renderer which is one that every stage

2568
02:10:46,600 --> 02:10:51,659
has to take into account the real

2569
02:10:48,279 --> 02:10:54,189
physical behavior of the light and

2570
02:10:51,658 --> 02:10:56,259
cherry-picking certain aspects of light

2571
02:10:54,189 --> 02:11:01,929
that are important to how light

2572
02:10:56,260 --> 02:11:03,789
skills and looks but not hat but leaving

2573
02:11:01,930 --> 02:11:06,940
other parts of the physics of light out

2574
02:11:03,789 --> 02:11:10,720
write a proper physically based

2575
02:11:06,939 --> 02:11:12,849
rendering into account throughout we are

2576
02:11:10,720 --> 02:11:15,070
talking about taking specific aspects of

2577
02:11:12,850 --> 02:11:18,360
the physics of light and using them but

2578
02:11:15,069 --> 02:11:26,319
only those aspects that we actually want

2579
02:11:18,359 --> 02:11:29,380
all right I didn't hear but so Kim you

2580
02:11:26,319 --> 02:11:31,689
didn't post again though so did you talk

2581
02:11:29,380 --> 02:11:32,980
about that what you were at like what is

2582
02:11:31,689 --> 02:11:40,329
the frame rate problem that you were

2583
02:11:32,979 --> 02:11:44,189
talking about did you have something

2584
02:11:40,329 --> 02:11:44,189
particular in mind or

2585
02:12:03,710 --> 02:12:11,770
I just I just haven't seen that follow

2586
02:12:06,319 --> 02:12:11,769
up on that so I don't know I was curious

2587
02:12:19,699 --> 02:12:22,510
nothing

2588
02:12:41,039 --> 02:12:45,090
concurrences really slow on my opt-in

2589
02:12:42,810 --> 02:12:46,020
debug mode did you look to see though if

2590
02:12:45,090 --> 02:12:52,529
that has anything to do with the

2591
02:12:46,020 --> 02:12:54,690
rendering right and if so is it just the

2592
02:12:52,529 --> 02:12:55,889
texture changes because right now we

2593
02:12:54,689 --> 02:12:58,019
spend a lot of time in the texture

2594
02:12:55,890 --> 02:12:59,520
changes if you run on a modern Nvidia

2595
02:12:58,020 --> 02:13:02,250
card which has no cost for texture

2596
02:12:59,520 --> 02:13:04,130
changes it's like a very flat profile

2597
02:13:02,250 --> 02:13:08,100
for rendering actually it's pretty good

2598
02:13:04,130 --> 02:13:09,480
as well and old PCs I don't really care

2599
02:13:08,100 --> 02:13:13,380
about particularly much either right

2600
02:13:09,479 --> 02:13:19,349
it's like you know we can set our

2601
02:13:13,380 --> 02:13:20,819
minimum platform to whatever we want yes

2602
02:13:19,350 --> 02:13:24,360
but if your question is more how do we

2603
02:13:20,819 --> 02:13:26,460
know our budget the answer is that we

2604
02:13:24,359 --> 02:13:29,219
don't and with rendering you never do

2605
02:13:26,460 --> 02:13:33,090
right so one of the problems with

2606
02:13:29,220 --> 02:13:36,270
producing rendering it renders in

2607
02:13:33,090 --> 02:13:38,909
general is you don't know what the cost

2608
02:13:36,270 --> 02:13:41,130
will be for a scheme you have no idea

2609
02:13:38,909 --> 02:13:43,199
that is why renderers are you know what

2610
02:13:41,130 --> 02:13:45,359
makes them difficult is there's a lot of

2611
02:13:43,199 --> 02:13:46,859
trade-offs you could make and there's a

2612
02:13:45,359 --> 02:13:48,630
lot of approximations you can make and

2613
02:13:46,859 --> 02:13:52,259
there's a lot of schemes you can use and

2614
02:13:48,630 --> 02:13:56,010
you don't know ahead of time which one

2615
02:13:52,260 --> 02:13:59,449
of them is going to be the one that

2616
02:13:56,010 --> 02:14:04,020
produces the best visual quality for the

2617
02:13:59,449 --> 02:14:06,510
time budget you can afford and so that's

2618
02:14:04,020 --> 02:14:08,730
why you use if achill II have on a game

2619
02:14:06,510 --> 02:14:10,650
somebody working at least one person

2620
02:14:08,729 --> 02:14:13,759
oftentimes more than one on rendering

2621
02:14:10,649 --> 02:14:15,599
for the entire time because

2622
02:14:13,760 --> 02:14:23,909
experimentation is the only way to

2623
02:14:15,600 --> 02:14:26,579
produce a good quality render on modern

2624
02:14:23,909 --> 02:14:30,239
hardware right there is no way to know

2625
02:14:26,579 --> 02:14:31,079
ahead of time here's what we can afford

2626
02:14:30,239 --> 02:14:34,380
to do for lighting

2627
02:14:31,079 --> 02:14:35,550
we have no idea right and we don't know

2628
02:14:34,380 --> 02:14:36,989
what the slow part of that lighting

2629
02:14:35,550 --> 02:14:37,470
process will be maybe it's the ray

2630
02:14:36,989 --> 02:14:38,760
tracing

2631
02:14:37,470 --> 02:14:42,510
maybe it's the rendering of the tube

2632
02:14:38,760 --> 02:14:45,600
maps maybe it's just the act of doing

2633
02:14:42,510 --> 02:14:48,180
the changes of the render targets to

2634
02:14:45,600 --> 02:14:49,710
target different cube maps and how many

2635
02:14:48,180 --> 02:14:50,880
things we render doesn't matter it's

2636
02:14:49,710 --> 02:14:51,309
time to cube master your render that

2637
02:14:50,880 --> 02:14:53,679
matter

2638
02:14:51,309 --> 02:14:57,340
and like all that sort of stuff is just

2639
02:14:53,679 --> 02:14:59,440
really difficult to ever know without

2640
02:14:57,340 --> 02:15:03,460
trying you can make guesses but you

2641
02:14:59,439 --> 02:15:05,259
can't know so I'm really talking more

2642
02:15:03,460 --> 02:15:09,908
about hey here's an example of a letting

2643
02:15:05,260 --> 02:15:12,639
scheme let's try it if it doesn't work

2644
02:15:09,908 --> 02:15:14,288
then we'll back off or if it's too slow

2645
02:15:12,639 --> 02:15:17,260
back off but I don't think it will be

2646
02:15:14,288 --> 02:15:20,979
because we can always just say well you

2647
02:15:17,260 --> 02:15:23,800
know if we need to we just have a switch

2648
02:15:20,979 --> 02:15:25,328
that turns off lighting effectively and

2649
02:15:23,800 --> 02:15:26,949
if you're running on a really crappy

2650
02:15:25,328 --> 02:15:28,719
machine turn it off if you're running on

2651
02:15:26,948 --> 02:15:34,029
some key ports Titan machine you turn it

2652
02:15:28,719 --> 02:15:36,250
on right so it's a PC there's a wide

2653
02:15:34,029 --> 02:15:37,750
spectrum there's no chance that what we

2654
02:15:36,250 --> 02:15:38,979
do for lighting will be so slow that a

2655
02:15:37,750 --> 02:15:41,800
high-end PC you can't do it because

2656
02:15:38,979 --> 02:15:43,089
high-end pcs are orders of magnitude

2657
02:15:41,800 --> 02:15:50,610
faster than the thing I'm using right

2658
02:15:43,090 --> 02:15:50,610
now all right

2659
02:15:56,689 --> 02:16:00,210
all right thank you everyone for joining

2660
02:15:58,590 --> 02:16:01,440
me for an episode of handmade hero it's

2661
02:16:00,210 --> 02:16:03,390
been a pleasure coding with you as

2662
02:16:01,439 --> 02:16:04,889
always if you would like to follow along

2663
02:16:03,390 --> 02:16:06,600
at home you can always peer to the game

2664
02:16:04,890 --> 02:16:08,130
on handmade hero or again it comes with

2665
02:16:06,600 --> 02:16:10,920
a source code so you can play around

2666
02:16:08,130 --> 02:16:12,119
with it yourself we also have a form so

2667
02:16:10,920 --> 02:16:13,949
you can go to to want to ask questions

2668
02:16:12,119 --> 02:16:15,539
we have a patreon page you can go to if

2669
02:16:13,949 --> 02:16:17,369
you want to support our video series a

2670
02:16:15,539 --> 02:16:18,569
schedule bot that tells you when we're

2671
02:16:17,369 --> 02:16:21,420
going to be live to want to catch us

2672
02:16:18,569 --> 02:16:24,059
live and an episode guide where you can

2673
02:16:21,420 --> 02:16:26,460
catch up on old versions of the series

2674
02:16:24,060 --> 02:16:28,740
if you had a topic you wanted to go

2675
02:16:26,460 --> 02:16:32,059
catch up on it's really easy to do now

2676
02:16:28,739 --> 02:16:34,409
they've done a great job putting in

2677
02:16:32,059 --> 02:16:35,850
search in there now so you can actually

2678
02:16:34,409 --> 02:16:38,700
go search for different topics you want

2679
02:16:35,850 --> 02:16:40,110
pretty awesome that's about it for today

2680
02:16:38,700 --> 02:16:44,219
I'll be back here tomorrow same time

2681
02:16:40,110 --> 02:16:45,750
same place for starting to play around

2682
02:16:44,218 --> 02:16:47,849
with that lighting stuff we'll see what

2683
02:16:45,750 --> 02:16:49,760
we would have to do maybe try to figure

2684
02:16:47,850 --> 02:16:53,670
out how to get that ray-tracing working

2685
02:16:49,760 --> 02:16:55,739
to produce our initial seed set of point

2686
02:16:53,670 --> 02:16:59,370
light sources that seems like probably

2687
02:16:55,739 --> 02:17:00,718
the best thing to do until then have fun

2688
02:16:59,370 --> 02:17:01,230
programming and I'll see you on the

2689
02:17:00,718 --> 02:17:03,799
Internet

2690
02:17:01,229 --> 02:17:03,799
take it easy everybody

