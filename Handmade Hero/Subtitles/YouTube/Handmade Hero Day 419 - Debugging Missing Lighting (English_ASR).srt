1
00:00:00,560 --> 00:00:04,619
hello everyone and welcome to handmade

2
00:00:02,908 --> 00:00:08,250
Hero show recode a complete game live on

3
00:00:04,620 --> 00:00:10,410
stream I coming back after the holiday

4
00:00:08,250 --> 00:00:13,349
break we did not have episodes last

5
00:00:10,410 --> 00:00:16,859
weekend but have them this weekend we

6
00:00:13,349 --> 00:00:19,140
are kind of getting close to lighting

7
00:00:16,859 --> 00:00:21,118
I'm happy with actually we've done a

8
00:00:19,140 --> 00:00:22,800
pretty good job of sort of navigating

9
00:00:21,118 --> 00:00:25,948
through the rather difficult waters of

10
00:00:22,800 --> 00:00:28,830
real-time lighting and I think that

11
00:00:25,949 --> 00:00:31,230
we've kind of gotten to a point where I

12
00:00:28,829 --> 00:00:34,949
can see this being the thing that we

13
00:00:31,230 --> 00:00:38,509
would ship right so the key components

14
00:00:34,950 --> 00:00:41,250
of it are smoothing over time and

15
00:00:38,509 --> 00:00:44,099
specifying what light gathers go with

16
00:00:41,250 --> 00:00:46,109
which rendered objects seems to be the

17
00:00:44,100 --> 00:00:48,929
crucial aspects of the lighting model

18
00:00:46,109 --> 00:00:50,460
that make it work for us and so what

19
00:00:48,929 --> 00:00:52,320
we're really trying to do now is now

20
00:00:50,460 --> 00:00:53,969
start to solidify things down into a

21
00:00:52,320 --> 00:00:57,210
shippable system that's like reliable

22
00:00:53,969 --> 00:00:58,859
and not too slow and so on right and so

23
00:00:57,210 --> 00:01:01,049
we only just hit upon all of these

24
00:00:58,859 --> 00:01:05,040
things kind of coming together last time

25
00:01:01,049 --> 00:01:07,019
we program so two weeks ago and so we've

26
00:01:05,040 --> 00:01:10,320
got some bugs in there that already we

27
00:01:07,019 --> 00:01:12,269
just have to fix the assignment we had

28
00:01:10,319 --> 00:01:16,228
just added the ability to assign

29
00:01:12,269 --> 00:01:19,408
specific lighting samples to elements in

30
00:01:16,228 --> 00:01:22,679
the in the world and I believe that

31
00:01:19,409 --> 00:01:25,049
stable assignment is broken at the

32
00:01:22,680 --> 00:01:28,110
moment so we gotta actually solve that

33
00:01:25,049 --> 00:01:29,430
problem it's you know it's just gonna be

34
00:01:28,109 --> 00:01:33,739
some bugs in there that we've got to fix

35
00:01:29,430 --> 00:01:36,630
and then we have to start moving our

36
00:01:33,739 --> 00:01:38,280
like locking down how that stuff gets

37
00:01:36,629 --> 00:01:40,949
transmitted to the renderer and actually

38
00:01:38,280 --> 00:01:43,228
put in the ability to do sort of a multi

39
00:01:40,950 --> 00:01:45,600
resolution approach and on the GPU as

40
00:01:43,228 --> 00:01:47,069
well so we basically just have like a

41
00:01:45,599 --> 00:01:48,750
bunch of finishing work to do now but

42
00:01:47,069 --> 00:01:51,629
I'm pretty happy with sort of what we

43
00:01:48,750 --> 00:01:52,978
have discovered in terms of a reasonable

44
00:01:51,629 --> 00:01:56,609
way to do some lighting in real time

45
00:01:52,978 --> 00:01:58,349
that gets the sort of flow of lighting

46
00:01:56,609 --> 00:02:00,810
out into the world that I wanted for the

47
00:01:58,349 --> 00:02:03,059
game I think it'll be sufficient and you

48
00:02:00,810 --> 00:02:04,759
know I'm I'm happy enough with it so far

49
00:02:03,060 --> 00:02:08,098
that I think it could be what we go with

50
00:02:04,759 --> 00:02:10,110
the game does not require super advanced

51
00:02:08,098 --> 00:02:13,139
lighting for any particular gameplay

52
00:02:10,110 --> 00:02:13,470
things it just wants to be able to have

53
00:02:13,139 --> 00:02:15,599
an

54
00:02:13,469 --> 00:02:17,159
nice coherent lighting environment and

55
00:02:15,599 --> 00:02:18,930
so I think that this will accomplish

56
00:02:17,159 --> 00:02:21,060
that certainly if the game was really

57
00:02:18,930 --> 00:02:22,710
about specific reflections or seeing

58
00:02:21,060 --> 00:02:24,479
people and mirrors and things like this

59
00:02:22,710 --> 00:02:26,219
you know we haven't taken it to those

60
00:02:24,479 --> 00:02:28,349
kinds of extremes at all

61
00:02:26,219 --> 00:02:30,180
so if you were trying to do a game that

62
00:02:28,349 --> 00:02:33,509
had really specific lighting concerns

63
00:02:30,180 --> 00:02:34,800
you know this is maybe not the lighting

64
00:02:33,509 --> 00:02:36,599
solution that goes as far as you would

65
00:02:34,800 --> 00:02:37,890
want but again this is not what we

66
00:02:36,599 --> 00:02:41,250
needed for this game but we needed for

67
00:02:37,889 --> 00:02:42,449
us atmospherics sort of effects that are

68
00:02:41,250 --> 00:02:43,949
going to make you feel like you're

69
00:02:42,449 --> 00:02:45,419
really in the world things that sort of

70
00:02:43,949 --> 00:02:47,219
give you information about where things

71
00:02:45,419 --> 00:02:48,979
are like you know fires that are lit and

72
00:02:47,219 --> 00:02:51,359
kind of glowing and things like this

73
00:02:48,979 --> 00:02:53,429
maybe things like carrying a lantern

74
00:02:51,360 --> 00:02:55,709
around might be nice etcetera and that's

75
00:02:53,430 --> 00:02:58,409
the thing sort of thing that we can do

76
00:02:55,709 --> 00:03:01,560
with the system that we have now so I'm

77
00:02:58,409 --> 00:03:05,099
gonna say that that's what what what I'm

78
00:03:01,560 --> 00:03:07,650
happy sort of turning the crank on and

79
00:03:05,099 --> 00:03:09,090
shipping so let's just revisit where we

80
00:03:07,650 --> 00:03:12,120
were because I just said we had some

81
00:03:09,090 --> 00:03:13,979
bugs but for those of you who type the

82
00:03:12,120 --> 00:03:17,370
wrong thing there for those of you who

83
00:03:13,979 --> 00:03:19,469
may have been you know working on other

84
00:03:17,370 --> 00:03:20,969
stuff for the past few weeks and don't

85
00:03:19,469 --> 00:03:23,159
remember where we were in handmade hero

86
00:03:20,969 --> 00:03:24,689
which for some reason doesn't include me

87
00:03:23,159 --> 00:03:24,959
even though I was working I happen to

88
00:03:24,689 --> 00:03:26,430
remember

89
00:03:24,959 --> 00:03:28,140
I guess because hey I'm the one who has

90
00:03:26,430 --> 00:03:31,050
to program it it's my responsibility to

91
00:03:28,139 --> 00:03:32,849
remember I will refresh your memory as

92
00:03:31,050 --> 00:03:34,110
to what I mean by there were some bugs

93
00:03:32,849 --> 00:03:35,459
and the thing that we added that we

94
00:03:34,110 --> 00:03:38,250
needed to fix at the end of the last

95
00:03:35,459 --> 00:03:40,560
episode specifically what we were doing

96
00:03:38,250 --> 00:03:42,060
is we were adding some smoothing and in

97
00:03:40,560 --> 00:03:44,189
order to smooth the light samples over

98
00:03:42,060 --> 00:03:48,810
time there were two ways that we could

99
00:03:44,189 --> 00:03:53,549
have approached this and each of the two

100
00:03:48,810 --> 00:03:54,870
ways of approaching this were well you

101
00:03:53,549 --> 00:03:58,920
know what that's interesting because I

102
00:03:54,870 --> 00:04:00,599
thought we had did we just turn us so I

103
00:03:58,919 --> 00:04:02,569
guess I need to refresh my memory too

104
00:04:00,599 --> 00:04:05,909
because I actually don't remember us

105
00:04:02,569 --> 00:04:12,000
having a black screen here I remember us

106
00:04:05,909 --> 00:04:14,310
having a smoother like I remember us

107
00:04:12,000 --> 00:04:15,989
having some lighting running here and

108
00:04:14,310 --> 00:04:18,358
the lighting was only working on half

109
00:04:15,989 --> 00:04:22,918
the grid so I don't actually remember

110
00:04:18,358 --> 00:04:24,379
this being a problem so maybe I am not

111
00:04:22,918 --> 00:04:26,639
remembering either but point being

112
00:04:24,379 --> 00:04:29,038
whether I'm remembering

113
00:04:26,639 --> 00:04:31,650
that part correctly or not it was

114
00:04:29,038 --> 00:04:33,870
already buggy and we needed to sort of

115
00:04:31,649 --> 00:04:35,848
fix it so the first thing that we need

116
00:04:33,870 --> 00:04:39,899
to do today is get those lighting

117
00:04:35,848 --> 00:04:43,168
assignment points working correctly and

118
00:04:39,899 --> 00:04:45,508
I believe we left a big to-do as well in

119
00:04:43,168 --> 00:04:47,848
the render group stuff that sort of

120
00:04:45,509 --> 00:04:50,340
talked about the problem where was that

121
00:04:47,848 --> 00:04:51,449
guy was here so you'll see very

122
00:04:50,339 --> 00:04:52,918
important finish in planning and

123
00:04:51,449 --> 00:04:54,090
debugging lighting index assignment in

124
00:04:52,918 --> 00:04:56,218
the render group before doing anything

125
00:04:54,089 --> 00:04:57,568
else with lighting and you can see this

126
00:04:56,218 --> 00:05:01,889
is the thing that I left at the end

127
00:04:57,569 --> 00:05:03,389
which we definitely need to do right so

128
00:05:01,889 --> 00:05:05,968
anyway I'm gonna go ahead and proceed

129
00:05:03,389 --> 00:05:07,560
under the assumption that the bugs that

130
00:05:05,968 --> 00:05:09,149
we had in this system that we're causing

131
00:05:07,560 --> 00:05:10,589
it to only partially work are probably

132
00:05:09,149 --> 00:05:12,478
the same things that are causing us on

133
00:05:10,589 --> 00:05:13,888
fresh reboot to not work because we're

134
00:05:12,478 --> 00:05:15,300
probably just not initializing things

135
00:05:13,889 --> 00:05:17,668
properly or not sending down the right

136
00:05:15,300 --> 00:05:19,588
stuff and so we're probably it was just

137
00:05:17,668 --> 00:05:21,810
accidental that we it was half working

138
00:05:19,588 --> 00:05:25,468
before and we really have to go ahead

139
00:05:21,810 --> 00:05:27,899
and make it work properly right so let

140
00:05:25,468 --> 00:05:29,699
me just go over what we were doing we

141
00:05:27,899 --> 00:05:32,338
have these things called entity pieces

142
00:05:29,699 --> 00:05:33,960
that's just the way of allowing a

143
00:05:32,338 --> 00:05:36,028
particular entity in the game to have a

144
00:05:33,959 --> 00:05:38,788
couple different like sprite components

145
00:05:36,028 --> 00:05:41,310
for example with it and what you can see

146
00:05:38,788 --> 00:05:44,158
about these entity pieces is that they

147
00:05:41,310 --> 00:05:46,769
have a way of assigning lights now to

148
00:05:44,158 --> 00:05:49,228
themselves and lights is the wrong way

149
00:05:46,769 --> 00:05:52,068
sorry a lighting like sample point to

150
00:05:49,228 --> 00:05:55,168
themselves so the way that it works is

151
00:05:52,069 --> 00:05:57,330
inside the lighting system we have

152
00:05:55,168 --> 00:06:00,028
things that emit light and then we also

153
00:05:57,329 --> 00:06:02,639
have things that occlude light and

154
00:06:00,028 --> 00:06:05,579
things that pick up light as sort of

155
00:06:02,639 --> 00:06:06,899
sensors in the world and so occluders

156
00:06:05,579 --> 00:06:08,399
are things that can block light from

157
00:06:06,899 --> 00:06:11,370
being transmitted around so those are

158
00:06:08,399 --> 00:06:12,598
things like our cubes or whatever that

159
00:06:11,370 --> 00:06:16,588
are going to create obstacles that the

160
00:06:12,598 --> 00:06:18,750
light cannot flow through and then we've

161
00:06:16,588 --> 00:06:20,449
got emitters that are sort of the same

162
00:06:18,750 --> 00:06:22,408
thing as obstacles only instead of

163
00:06:20,449 --> 00:06:25,139
preventing light from going through them

164
00:06:22,408 --> 00:06:27,538
they're sending light out and then

165
00:06:25,139 --> 00:06:29,158
finally we've got light actual lighting

166
00:06:27,538 --> 00:06:32,009
points and these are points that are

167
00:06:29,158 --> 00:06:34,560
trying to collect what light they will

168
00:06:32,009 --> 00:06:36,658
see from where they are right and so

169
00:06:34,560 --> 00:06:38,370
what happens is for each entity visible

170
00:06:36,658 --> 00:06:40,319
piece we have a lighting index and that

171
00:06:38,370 --> 00:06:43,019
lighting index tells us the

172
00:06:40,319 --> 00:06:46,110
first light in a range of lights that

173
00:06:43,019 --> 00:06:47,639
will sorry the first lighting sample in

174
00:06:46,110 --> 00:06:50,520
a range of letting samples that will be

175
00:06:47,639 --> 00:06:51,659
used to light this piece and the reason

176
00:06:50,519 --> 00:06:53,729
that that's stored in the entity

177
00:06:51,660 --> 00:06:56,610
structure is that's because it has to be

178
00:06:53,730 --> 00:07:00,230
coherent from frame to frame meaning

179
00:06:56,610 --> 00:07:02,460
that on frame zero if we say that this

180
00:07:00,230 --> 00:07:05,370
particular piece identity is getting lit

181
00:07:02,459 --> 00:07:08,279
by these and samples then on frame one

182
00:07:05,370 --> 00:07:10,019
we have to say the same and samples now

183
00:07:08,279 --> 00:07:12,659
the reason for that is because we don't

184
00:07:10,019 --> 00:07:18,149
want to deal with trying to interpolate

185
00:07:12,660 --> 00:07:24,870
the lighting based on the location of

186
00:07:18,149 --> 00:07:26,219
things because in order to interpolate

187
00:07:24,870 --> 00:07:29,060
the lighting based on the location of

188
00:07:26,220 --> 00:07:32,520
things we would run into a situation

189
00:07:29,060 --> 00:07:34,259
where things have to do spatial lookups

190
00:07:32,519 --> 00:07:35,639
and one of the things that I'm trying to

191
00:07:34,259 --> 00:07:37,829
avoid is though spatial lookups because

192
00:07:35,639 --> 00:07:40,439
having to deal with the voxel was kind

193
00:07:37,829 --> 00:07:42,359
of annoying it just added a lot of

194
00:07:40,439 --> 00:07:44,129
complexity and we had problems about the

195
00:07:42,360 --> 00:07:44,850
fact that you know voxel cells we'd have

196
00:07:44,129 --> 00:07:46,199
to make sure that they were always

197
00:07:44,850 --> 00:07:47,790
filled and if there wasn't any

198
00:07:46,199 --> 00:07:50,579
particular thing in that voxel cell then

199
00:07:47,790 --> 00:07:51,840
what would we fill it with and how do we

200
00:07:50,579 --> 00:07:54,930
interpolate between them it kind of

201
00:07:51,839 --> 00:07:57,000
starts to exponentially grow you know a

202
00:07:54,930 --> 00:07:59,699
cubed number of samples that we have to

203
00:07:57,000 --> 00:08:01,199
take and blah blah blah so I really just

204
00:07:59,699 --> 00:08:03,120
thought it was a better way to actually

205
00:08:01,199 --> 00:08:05,699
do frame to frame direct assignment

206
00:08:03,120 --> 00:08:09,060
rather than some things being based on

207
00:08:05,699 --> 00:08:10,349
spatial map matching and so that's kind

208
00:08:09,060 --> 00:08:13,379
of the way that we were going with it

209
00:08:10,350 --> 00:08:15,390
now when this actually happens this

210
00:08:13,379 --> 00:08:17,730
light index here that the entity visible

211
00:08:15,389 --> 00:08:19,500
piece is responsible for sending down

212
00:08:17,730 --> 00:08:22,530
what you can kind of see is that that

213
00:08:19,500 --> 00:08:24,000
light index when you do a push light or

214
00:08:22,529 --> 00:08:25,709
a push cube which are the two things

215
00:08:24,000 --> 00:08:26,550
that are currently getting sent down to

216
00:08:25,709 --> 00:08:29,219
the lighting system

217
00:08:26,550 --> 00:08:32,039
I don't think push bitmap does it yeah

218
00:08:29,220 --> 00:08:35,160
it doesn't those are basically

219
00:08:32,039 --> 00:08:39,029
specifying these lighting indexes which

220
00:08:35,159 --> 00:08:40,860
are saying where these these things

221
00:08:39,029 --> 00:08:41,879
should go right we're into the lighting

222
00:08:40,860 --> 00:08:43,560
array these things should go that

223
00:08:41,879 --> 00:08:46,620
actually reminds me what happens in push

224
00:08:43,559 --> 00:08:47,849
bitmap that presumably sends down a lady

225
00:08:46,620 --> 00:08:50,850
next to 0 which means that bitmaps

226
00:08:47,850 --> 00:08:52,800
aren't lit which I think is the correct

227
00:08:50,850 --> 00:08:54,000
thing that we're observing here what you

228
00:08:52,799 --> 00:08:56,609
can see that bitmaps are

229
00:08:54,000 --> 00:08:58,440
lit right now and that's by design at

230
00:08:56,610 --> 00:09:00,389
the moment they will be lit later will

231
00:08:58,440 --> 00:09:02,580
actually scatter points on them or

232
00:09:00,389 --> 00:09:04,110
something similar to that but so you can

233
00:09:02,580 --> 00:09:06,000
see that only lights and cubes are sus

234
00:09:04,110 --> 00:09:10,159
to be participating in it so what we

235
00:09:06,000 --> 00:09:12,840
expect to see right is we expect to see

236
00:09:10,159 --> 00:09:14,879
our light here that's floating right

237
00:09:12,840 --> 00:09:16,110
here we want that to be scattering light

238
00:09:14,879 --> 00:09:17,399
out to our cubes and we're not seeing

239
00:09:16,110 --> 00:09:19,500
that right now so that's the immediate

240
00:09:17,399 --> 00:09:21,840
bug that we are seeing the bug that we

241
00:09:19,500 --> 00:09:23,370
saw before that when we were working on

242
00:09:21,840 --> 00:09:25,110
this last week was that we were only

243
00:09:23,370 --> 00:09:26,610
getting like half of our world was

244
00:09:25,110 --> 00:09:28,740
getting lit and the other half wasn't

245
00:09:26,610 --> 00:09:31,590
properly and so on so our goal is to

246
00:09:28,740 --> 00:09:33,240
debug this thing right here and if we

247
00:09:31,590 --> 00:09:34,920
look inside the render group to see

248
00:09:33,240 --> 00:09:37,950
where that was actually taking effect

249
00:09:34,919 --> 00:09:39,059
what you can see is that uh they go

250
00:09:37,950 --> 00:09:41,520
ahead and search for that first cube

251
00:09:39,059 --> 00:09:43,139
there it is we've got sort of this

252
00:09:41,519 --> 00:09:45,090
lighting index store thing that's what

253
00:09:43,139 --> 00:09:46,649
was getting passed here what happens is

254
00:09:45,090 --> 00:09:51,990
when we come down through here at the

255
00:09:46,649 --> 00:09:54,179
light index store if it is valid meaning

256
00:09:51,990 --> 00:09:56,970
we actually got a pointer which again we

257
00:09:54,179 --> 00:09:58,049
wouldn't understand we when we're doing

258
00:09:56,970 --> 00:10:00,120
things like push fit that we don't get

259
00:09:58,049 --> 00:10:02,009
any but when we do something like a push

260
00:10:00,120 --> 00:10:03,929
cube and if we see a light index store

261
00:10:02,009 --> 00:10:06,179
what we do is we say how many lights

262
00:10:03,929 --> 00:10:09,120
were going to be putting on this

263
00:10:06,179 --> 00:10:10,909
particular thing then we in the in this

264
00:10:09,120 --> 00:10:14,399
case light count is per face of the cube

265
00:10:10,909 --> 00:10:16,799
we then say okay if the thing that's

266
00:10:14,399 --> 00:10:17,579
already there in the address that we're

267
00:10:16,799 --> 00:10:20,399
going to be storing the light

268
00:10:17,580 --> 00:10:21,810
information the storing the light index

269
00:10:20,399 --> 00:10:23,519
back to if there's something that's

270
00:10:21,809 --> 00:10:25,619
already in there I mean if it was non

271
00:10:23,519 --> 00:10:27,088
zero then we're gonna assume that it's

272
00:10:25,620 --> 00:10:28,759
this it's one that got assigned in a

273
00:10:27,089 --> 00:10:30,990
previous frame and we're gonna use it

274
00:10:28,759 --> 00:10:33,389
otherwise what we're gonna do is just a

275
00:10:30,990 --> 00:10:35,129
sign it one and again you can see here

276
00:10:33,389 --> 00:10:36,990
that this is already a to do this won't

277
00:10:35,129 --> 00:10:38,730
work when things are moving in and out

278
00:10:36,990 --> 00:10:40,470
of the active set so what we actually

279
00:10:38,730 --> 00:10:43,529
need is some kind of a thing that that

280
00:10:40,470 --> 00:10:44,910
that takes chunks and reassigns them

281
00:10:43,529 --> 00:10:47,699
it's just got to be like a free list

282
00:10:44,909 --> 00:10:49,259
sort of a thing that's not gonna be hard

283
00:10:47,700 --> 00:10:50,580
to implement but I don't think that's

284
00:10:49,259 --> 00:10:52,139
our bug right now because right now

285
00:10:50,580 --> 00:10:53,700
we're just looking at something that's

286
00:10:52,139 --> 00:10:55,649
not really getting reassigned I don't

287
00:10:53,700 --> 00:10:57,210
think now maybe it is and maybe that's

288
00:10:55,649 --> 00:10:58,559
why this is happening so it could be

289
00:10:57,210 --> 00:11:01,470
that I'm actually pretty stupid for

290
00:10:58,559 --> 00:11:02,338
saying that so maybe we should go ahead

291
00:11:01,470 --> 00:11:04,529
and fix that first

292
00:11:02,339 --> 00:11:05,880
I don't know but point being I want to

293
00:11:04,529 --> 00:11:07,319
investigate the bug first before jumping

294
00:11:05,879 --> 00:11:08,639
to any conclusions about what is

295
00:11:07,320 --> 00:11:11,180
and isn't the problem but point thing

296
00:11:08,639 --> 00:11:14,190
that has to get fixed eventually as well

297
00:11:11,179 --> 00:11:16,289
so then what we see is that hey whenever

298
00:11:14,190 --> 00:11:18,540
this happens we also sort of advanced

299
00:11:16,289 --> 00:11:20,789
the light index by the light count times

300
00:11:18,539 --> 00:11:22,349
six which is six face to the cube that's

301
00:11:20,789 --> 00:11:24,120
just so that when we go through we're

302
00:11:22,350 --> 00:11:27,329
putting things in places that are

303
00:11:24,120 --> 00:11:30,179
ostensibly named when we go ahead and do

304
00:11:27,328 --> 00:11:32,099
our our push quad you can see that we

305
00:11:30,179 --> 00:11:34,138
send down the light index so whatever

306
00:11:32,100 --> 00:11:37,949
the lighting index was we send it down

307
00:11:34,139 --> 00:11:38,850
here and we we increment it as we go now

308
00:11:37,948 --> 00:11:40,109
one of the things that's a little bit

309
00:11:38,850 --> 00:11:45,600
busted about that is that means that

310
00:11:40,110 --> 00:11:47,129
anything that was not getting lit it's

311
00:11:45,600 --> 00:11:48,720
gonna be kind of wrong because it will

312
00:11:47,129 --> 00:11:50,129
actually still assign lights to it it

313
00:11:48,720 --> 00:11:52,860
should assign zero this whole time but

314
00:11:50,129 --> 00:11:54,448
it wouldn't oh no that's not true

315
00:11:52,860 --> 00:11:56,399
light count would be still set to zero

316
00:11:54,448 --> 00:11:58,169
so that's fine so it would pass a zero

317
00:11:56,399 --> 00:12:00,990
in all these so that's fine I take it

318
00:11:58,169 --> 00:12:02,759
back there's not a bug there so anyway

319
00:12:00,990 --> 00:12:04,440
when we go up to push quad what you can

320
00:12:02,759 --> 00:12:07,470
see here it's the light index just flows

321
00:12:04,440 --> 00:12:08,940
through to the actual push quad which

322
00:12:07,470 --> 00:12:12,110
you can see here has like the emission

323
00:12:08,940 --> 00:12:14,069
value the light count the light index

324
00:12:12,110 --> 00:12:15,360
let me just make sure those getting

325
00:12:14,068 --> 00:12:18,269
passed in the correct order down here

326
00:12:15,360 --> 00:12:20,399
let count let me ask yep so when we go

327
00:12:18,269 --> 00:12:21,629
through impact go to push quad we can

328
00:12:20,399 --> 00:12:23,970
see is that the light a sunlight count

329
00:12:21,629 --> 00:12:25,860
are stored in each vertex again that's

330
00:12:23,970 --> 00:12:27,629
wasteful it's in it's a to do inside our

331
00:12:25,860 --> 00:12:29,850
vertex structure we we just did that

332
00:12:27,629 --> 00:12:31,528
because in getting it working I didn't

333
00:12:29,850 --> 00:12:34,110
want to bother adding a new vertex

334
00:12:31,528 --> 00:12:36,720
stream to pass down that information but

335
00:12:34,110 --> 00:12:39,870
we can actually optimize that out and

336
00:12:36,720 --> 00:12:43,949
pass just one light index and count for

337
00:12:39,870 --> 00:12:45,240
each primitive so this can be simplified

338
00:12:43,948 --> 00:12:47,039
but at the moment we're just passing

339
00:12:45,240 --> 00:12:49,440
every vertex so it will always be there

340
00:12:47,039 --> 00:12:52,559
no matter which vertex are looking at so

341
00:12:49,440 --> 00:12:52,980
that's probably fine so that's how this

342
00:12:52,559 --> 00:12:56,188
works

343
00:12:52,980 --> 00:12:59,519
and that information just goes into the

344
00:12:56,188 --> 00:13:01,588
stream to be used later on now that gets

345
00:12:59,519 --> 00:13:03,990
picked up eventually by the lighting

346
00:13:01,589 --> 00:13:06,720
code so if we take a look inside where

347
00:13:03,990 --> 00:13:08,850
the light actually happens you can see

348
00:13:06,720 --> 00:13:11,519
that in extract reflectors from quads we

349
00:13:08,850 --> 00:13:13,589
kind of come through here and we build

350
00:13:11,519 --> 00:13:15,149
you know this this code will go away

351
00:13:13,589 --> 00:13:16,290
eventually this will just be welded into

352
00:13:15,149 --> 00:13:18,179
the thing that's actually outputting

353
00:13:16,289 --> 00:13:19,110
manatees in the first place but what

354
00:13:18,179 --> 00:13:21,029
we're doing is we're going through and

355
00:13:19,110 --> 00:13:22,440
we're putting points on the surf

356
00:13:21,029 --> 00:13:25,470
of these quads proportional to the

357
00:13:22,440 --> 00:13:26,670
number that we were asked to do now we

358
00:13:25,470 --> 00:13:28,200
didn't actually write this code because

359
00:13:26,669 --> 00:13:29,969
like I said it's not real it's just here

360
00:13:28,200 --> 00:13:33,300
for its placeholder so it's actually

361
00:13:29,970 --> 00:13:34,740
just locked to them always use the same

362
00:13:33,299 --> 00:13:37,109
pattern because we know where are we

363
00:13:34,740 --> 00:13:38,370
sending down for but in the future will

364
00:13:37,110 --> 00:13:39,720
be scatting you know scattering these

365
00:13:38,370 --> 00:13:41,700
lights more intelligently Scott

366
00:13:39,720 --> 00:13:44,610
scattering sent sample points more

367
00:13:41,700 --> 00:13:46,080
intelligently presumably anyway so what

368
00:13:44,610 --> 00:13:48,060
we then do is we come through here we

369
00:13:46,080 --> 00:13:50,700
output all of our lighting information

370
00:13:48,059 --> 00:13:53,939
into these little solution elements we

371
00:13:50,700 --> 00:13:56,009
then run our compute light propagation

372
00:13:53,940 --> 00:13:58,620
function and it goes through and it

373
00:13:56,009 --> 00:14:01,019
propagates the lights all around to

374
00:13:58,620 --> 00:14:03,659
these light samples and when it's done

375
00:14:01,019 --> 00:14:06,269
with that it goes ahead and says all

376
00:14:03,659 --> 00:14:08,669
right I I'm gonna go through and I'm

377
00:14:06,269 --> 00:14:12,090
gonna normalize all of my results right

378
00:14:08,669 --> 00:14:14,939
and I'm going to linearly interpolate my

379
00:14:12,090 --> 00:14:18,300
results that I got meaning the results I

380
00:14:14,940 --> 00:14:19,970
got this time I'm gonna linearly

381
00:14:18,299 --> 00:14:23,370
linearly interpolate

382
00:14:19,970 --> 00:14:25,920
from what I started with which is the

383
00:14:23,370 --> 00:14:27,509
last emission here right I'm gonna

384
00:14:25,919 --> 00:14:30,149
interpolate from what I started with

385
00:14:27,509 --> 00:14:35,189
toward my solution every time so that

386
00:14:30,149 --> 00:14:37,679
it's slowly it will slowly sort of

387
00:14:35,190 --> 00:14:39,930
interpolate there now what we do to

388
00:14:37,679 --> 00:14:43,500
avoid startup problems is if we have

389
00:14:39,929 --> 00:14:46,259
never gotten a valid lighting solution

390
00:14:43,500 --> 00:14:48,750
so meaning on frame zero where there

391
00:14:46,259 --> 00:14:51,360
wasn't anything beforehand we don't want

392
00:14:48,750 --> 00:14:53,759
to lurk because we're looping from bogus

393
00:14:51,360 --> 00:14:55,950
values so you want to just set the value

394
00:14:53,759 --> 00:14:58,200
equal to whatever it would be on this

395
00:14:55,950 --> 00:14:59,280
frame and the way that we do that is we

396
00:14:58,200 --> 00:15:01,290
just look to see whether this solution

397
00:14:59,279 --> 00:15:03,120
was ever marked as valid if it's never

398
00:15:01,289 --> 00:15:05,659
been marked as valid then we just assume

399
00:15:03,120 --> 00:15:08,610
that we can linearly interpolate between

400
00:15:05,659 --> 00:15:10,439
the value in itself and so it will

401
00:15:08,610 --> 00:15:15,090
always get itself no matter what the

402
00:15:10,440 --> 00:15:17,090
value of T is right so that's how we're

403
00:15:15,090 --> 00:15:19,170
working at the moment

404
00:15:17,090 --> 00:15:20,550
now what we have to do is investigate

405
00:15:19,169 --> 00:15:23,789
this and find out where we're going

406
00:15:20,549 --> 00:15:26,549
wrong and why everything is coming out

407
00:15:23,789 --> 00:15:28,620
black so the first thing we can do here

408
00:15:26,549 --> 00:15:33,649
is let's go ahead and switch back to a

409
00:15:28,620 --> 00:15:33,649
debug build let me go ahead and

410
00:15:33,730 --> 00:15:41,600
switch to the OD here and if I go ahead

411
00:15:38,330 --> 00:15:46,009
and run the program now it should still

412
00:15:41,600 --> 00:15:47,720
be yet does seem it does seem like maybe

413
00:15:46,009 --> 00:15:50,450
we're just not getting any emission

414
00:15:47,720 --> 00:15:52,700
honestly because you can notice how fast

415
00:15:50,450 --> 00:15:54,170
it's running - that's how fast I think

416
00:15:52,700 --> 00:15:59,180
it would be running if you just weren't

417
00:15:54,169 --> 00:16:01,599
emitting anything right which is kind of

418
00:15:59,179 --> 00:16:01,599
bizarre

419
00:16:15,068 --> 00:16:20,979
yeah it's kind of weird and lighting

420
00:16:17,028 --> 00:16:23,928
disabled should always be false anyway

421
00:16:20,980 --> 00:16:25,100
anyway sorry I lost my train of thought

422
00:16:23,928 --> 00:16:28,119
there as I was looking at her a little

423
00:16:25,100 --> 00:16:30,079
menu thing here um so anyway point being

424
00:16:28,119 --> 00:16:31,160
since all these things are coming up

425
00:16:30,078 --> 00:16:33,138
black what we need to do is kind of go

426
00:16:31,159 --> 00:16:36,519
up the chain and just take a look at

427
00:16:33,139 --> 00:16:39,470
where we you know what sorts of things

428
00:16:36,519 --> 00:16:41,480
we're seeing in terms of stepping into

429
00:16:39,470 --> 00:16:43,850
the debug code why we're never getting

430
00:16:41,480 --> 00:16:46,428
any emitters in meeting anything here

431
00:16:43,850 --> 00:16:48,439
because it looks to me like we're never

432
00:16:46,428 --> 00:16:50,178
getting any emission at all the reason

433
00:16:48,438 --> 00:16:53,629
that I say that is because currently our

434
00:16:50,178 --> 00:16:56,328
algorithm will slow down proportional to

435
00:16:53,629 --> 00:16:59,389
how much emission there is and the fact

436
00:16:56,328 --> 00:17:01,039
that this is running in debug mode right

437
00:16:59,389 --> 00:17:03,379
now meaning the code is not even running

438
00:17:01,039 --> 00:17:06,678
through the optimizer and it's running

439
00:17:03,379 --> 00:17:08,360
it at close to 60 frames a second that

440
00:17:06,679 --> 00:17:10,339
just suggests to me that we're not

441
00:17:08,359 --> 00:17:12,369
really getting any lighting happening at

442
00:17:10,338 --> 00:17:15,408
all like nothing is actually starting

443
00:17:12,369 --> 00:17:17,239
the emission process so one of the

444
00:17:15,409 --> 00:17:19,789
things that I can do here is maybe I

445
00:17:17,240 --> 00:17:20,808
kind of come through here and I first of

446
00:17:19,788 --> 00:17:24,490
all just make sure we're actually

447
00:17:20,808 --> 00:17:26,658
pushing a light on to the stack at all

448
00:17:24,490 --> 00:17:29,089
but you know here it looks like we are

449
00:17:26,659 --> 00:17:30,799
see what the emission value is so there

450
00:17:29,089 --> 00:17:35,148
is here's the light that has an emission

451
00:17:30,798 --> 00:17:37,908
value on it and let's make sure that

452
00:17:35,148 --> 00:17:39,949
that gets assigned some proper light

453
00:17:37,909 --> 00:17:49,490
indexes here you know what I should just

454
00:17:39,950 --> 00:17:56,769
do step into o or I won't so here in the

455
00:17:49,490 --> 00:17:56,769
push tube function just looking through

456
00:18:01,089 --> 00:18:12,649
it does correctly assign a light index

457
00:18:05,390 --> 00:18:14,900
here yep so it's doing what I think it

458
00:18:12,650 --> 00:18:17,720
should be doing right there's no there's

459
00:18:14,900 --> 00:18:20,930
nothing weird going on here that I can

460
00:18:17,720 --> 00:18:24,110
see so far and what I can do is I can

461
00:18:20,930 --> 00:18:28,880
take a look now in the lighting code

462
00:18:24,109 --> 00:18:30,529
just to see whether or not I don't know

463
00:18:28,880 --> 00:18:30,920
why I just typed render group that's

464
00:18:30,529 --> 00:18:33,529
good

465
00:18:30,920 --> 00:18:36,529
I wanted to switch to render group and I

466
00:18:33,529 --> 00:18:39,769
forgot that the the command that what I

467
00:18:36,529 --> 00:18:41,480
mean in visual studio is not that where

468
00:18:39,769 --> 00:18:44,180
is the render group can I grab it here

469
00:18:41,480 --> 00:18:48,230
there we go so what I want to do here is

470
00:18:44,180 --> 00:18:50,930
I just want to set a breakpoint in the

471
00:18:48,230 --> 00:18:54,650
lighting so I can actually see what's

472
00:18:50,930 --> 00:18:55,970
going on in terms of whether we get any

473
00:18:54,650 --> 00:18:58,009
emitters and why they're not getting

474
00:18:55,970 --> 00:18:59,299
pushed out into the world at all because

475
00:18:58,009 --> 00:19:00,920
it looks like the lighting isn't even

476
00:18:59,299 --> 00:19:02,149
running on them that's what it looks

477
00:19:00,920 --> 00:19:09,380
like because we're not getting a

478
00:19:02,150 --> 00:19:10,940
framerate hit from it so here it looks

479
00:19:09,380 --> 00:19:14,720
like we're not running extract

480
00:19:10,940 --> 00:19:17,650
reflectors from quads right so we must

481
00:19:14,720 --> 00:19:20,450
have the lighting turned off in some way

482
00:19:17,650 --> 00:19:22,550
maybe I just forgot how we were running

483
00:19:20,450 --> 00:19:24,470
the lighting or something like this at

484
00:19:22,549 --> 00:19:27,859
the end of last episode maybe I just

485
00:19:24,470 --> 00:19:30,500
turned it off really quickly you can see

486
00:19:27,859 --> 00:19:33,259
we're not even calling lighting tests so

487
00:19:30,500 --> 00:19:36,680
if I jump back to handmade worlds that

488
00:19:33,259 --> 00:19:40,129
would probably answer the question as to

489
00:19:36,680 --> 00:19:42,769
what it is I forgot so recompute

490
00:19:40,130 --> 00:19:50,590
lighting is false if the F key is

491
00:19:42,769 --> 00:19:50,589
pressed five six one four

492
00:20:01,549 --> 00:20:05,480
update lighting is serum

493
00:20:08,109 --> 00:20:12,538
so it looks like if I just press f4

494
00:20:19,038 --> 00:20:25,108
okay so there we go I was not on crack

495
00:20:22,980 --> 00:20:29,489
I just forgot that we had bound it to a

496
00:20:25,108 --> 00:20:31,499
key so that's good this is the problem

497
00:20:29,489 --> 00:20:34,528
with binding things two keys sometimes

498
00:20:31,499 --> 00:20:36,690
you forget what those keys actually are

499
00:20:34,528 --> 00:20:39,419
so instead of f 1 we had bound that to F

500
00:20:36,690 --> 00:20:42,210
4 maybe I should go ahead and take that

501
00:20:39,419 --> 00:20:45,389
out and put that on the default so

502
00:20:42,210 --> 00:20:46,980
there's us sort of running the thing

503
00:20:45,388 --> 00:20:48,808
that I was saying before but that still

504
00:20:46,980 --> 00:20:50,009
has bugs you can see that the leg

505
00:20:48,808 --> 00:20:53,190
interpolation is actually working quite

506
00:20:50,009 --> 00:20:55,679
nicely down on the bottom there it's

507
00:20:53,190 --> 00:20:57,359
kind of flicker free and tracks me

508
00:20:55,679 --> 00:21:00,090
relatively well it's still it's not

509
00:20:57,358 --> 00:21:01,918
great right but remember this is running

510
00:21:00,089 --> 00:21:03,269
on software sauron if we ran it in GPU

511
00:21:01,919 --> 00:21:05,759
we'd get even better results and it

512
00:21:03,269 --> 00:21:08,149
could update much more quickly so you

513
00:21:05,759 --> 00:21:10,618
know I think this is totally plausible

514
00:21:08,148 --> 00:21:11,729
totally plausible and and I'm not too

515
00:21:10,618 --> 00:21:13,230
worried about it right I'm not too

516
00:21:11,730 --> 00:21:15,118
worried about where that's going what I

517
00:21:13,230 --> 00:21:16,528
am worried about is the thing that I was

518
00:21:15,118 --> 00:21:20,548
saying before which is that you'll

519
00:21:16,528 --> 00:21:22,470
notice that for whatever reason you know

520
00:21:20,548 --> 00:21:24,929
when I'm moving the main light around

521
00:21:22,470 --> 00:21:27,118
you can kind of see that everything sort

522
00:21:24,929 --> 00:21:30,690
of seems like it's working properly like

523
00:21:27,118 --> 00:21:33,509
you know it's like yeah this seems like

524
00:21:30,690 --> 00:21:35,308
pretty sane lighting if we assume that

525
00:21:33,509 --> 00:21:38,399
these guys are lighting that up or

526
00:21:35,308 --> 00:21:40,528
whatever right but you know before our

527
00:21:38,398 --> 00:21:43,709
snake got stuck in the corner backed

528
00:21:40,528 --> 00:21:45,388
himself into the corner what hopefully

529
00:21:43,710 --> 00:21:47,579
you can see here is that you know with

530
00:21:45,388 --> 00:21:49,258
the faster-moving guy yeah the trails

531
00:21:47,579 --> 00:21:51,989
behind looks much but look at what

532
00:21:49,259 --> 00:21:56,220
happens right here when the snake moves

533
00:21:51,989 --> 00:21:59,879
into the upper corner it stops it's

534
00:21:56,220 --> 00:22:03,210
light stops working it just stopped

535
00:21:59,878 --> 00:22:05,219
right and we have no explanation for

536
00:22:03,210 --> 00:22:06,720
that so I'm assuming that the problem

537
00:22:05,220 --> 00:22:07,940
that we're seeing there has to do with

538
00:22:06,720 --> 00:22:12,028
how we are assigning

539
00:22:07,940 --> 00:22:15,840
these light outputs like something to do

540
00:22:12,028 --> 00:22:18,690
with what happens when the the draw

541
00:22:15,839 --> 00:22:20,608
order changes for those lights you get

542
00:22:18,690 --> 00:22:22,859
some kind of really erroneous results

543
00:22:20,608 --> 00:22:24,178
again we haven't implemented the whole

544
00:22:22,858 --> 00:22:25,378
lighting assignment scheme so it could

545
00:22:24,179 --> 00:22:27,989
even just be the thing I was talking

546
00:22:25,378 --> 00:22:29,759
about before where we you know that

547
00:22:27,989 --> 00:22:31,769
thing doesn't have a proper alligator in

548
00:22:29,759 --> 00:22:33,960
there I'm not 100% certain

549
00:22:31,769 --> 00:22:35,879
so the important thing to remember there

550
00:22:33,960 --> 00:22:37,769
is just that yeah that that could easily

551
00:22:35,880 --> 00:22:39,809
be that or could be something else but

552
00:22:37,769 --> 00:22:40,470
that was the bug that we wanted to track

553
00:22:39,808 --> 00:22:44,490
down

554
00:22:40,470 --> 00:22:46,230
now since the updating lighting stuff

555
00:22:44,490 --> 00:22:49,799
already bit me once they're not turning

556
00:22:46,230 --> 00:22:52,529
on I'm gonna just turn it on at startup

557
00:22:49,799 --> 00:22:54,839
by default because it already runs fast

558
00:22:52,529 --> 00:22:57,480
enough even without being optimized on

559
00:22:54,839 --> 00:23:00,480
the GPU at the moment for us to go ahead

560
00:22:57,480 --> 00:23:03,179
and and keep it running all the time so

561
00:23:00,480 --> 00:23:05,490
we don't really have to worry about

562
00:23:03,179 --> 00:23:06,990
turning that off at the moment so what

563
00:23:05,490 --> 00:23:10,349
I'm going to do there is take this

564
00:23:06,990 --> 00:23:14,160
updating lighting boolean here and when

565
00:23:10,349 --> 00:23:16,230
we create the the game world for the

566
00:23:14,160 --> 00:23:19,110
first time I'm just gonna set that equal

567
00:23:16,230 --> 00:23:24,690
to true for now so that way we will have

568
00:23:19,109 --> 00:23:26,849
a yeah one of these that's on by default

569
00:23:24,690 --> 00:23:28,710
so you can see here where we do our set

570
00:23:26,849 --> 00:23:30,119
game mode and we push the struck for

571
00:23:28,710 --> 00:23:32,400
world mode on here I'm just gonna go

572
00:23:30,119 --> 00:23:34,259
ahead and say that updating lighting is

573
00:23:32,400 --> 00:23:35,940
equal to true here and then we can

574
00:23:34,259 --> 00:23:37,440
always delete that line if we go back to

575
00:23:35,940 --> 00:23:39,210
doing something slow with the lighting

576
00:23:37,440 --> 00:23:41,130
that we're worried about running right

577
00:23:39,210 --> 00:23:44,130
but now when we boot up we've at least

578
00:23:41,130 --> 00:23:45,720
got the lighting running and so now we

579
00:23:44,130 --> 00:23:48,630
just have to figure out why when our

580
00:23:45,720 --> 00:23:52,980
when our little saucy snake gentleman

581
00:23:48,630 --> 00:23:55,500
here hops up onto this you know whatever

582
00:23:52,980 --> 00:23:59,579
you want to call this the top half of

583
00:23:55,500 --> 00:24:01,440
the arena why the lights no longer take

584
00:23:59,579 --> 00:24:04,230
effect the way that they are when it's

585
00:24:01,440 --> 00:24:05,789
on the lower part and again the fact

586
00:24:04,230 --> 00:24:07,920
that it's leaving a long trail is not

587
00:24:05,789 --> 00:24:11,308
concerning that's just the slow blend

588
00:24:07,920 --> 00:24:15,080
over a hundred frames we can trivially

589
00:24:11,308 --> 00:24:18,149
make that not happen by switching the

590
00:24:15,079 --> 00:24:20,099
blend coefficient here to something

591
00:24:18,150 --> 00:24:22,200
higher so if we if we only blend it over

592
00:24:20,099 --> 00:24:25,169
ten frames for example we would get much

593
00:24:22,200 --> 00:24:26,340
more flickering lighting you can kind of

594
00:24:25,170 --> 00:24:28,230
see that the lighting is sort of a

595
00:24:26,339 --> 00:24:30,329
little flickering now but now you can

596
00:24:28,230 --> 00:24:34,980
see that the light cleans up much more

597
00:24:30,329 --> 00:24:38,730
quickly as the snake moves along so

598
00:24:34,980 --> 00:24:40,529
that's like you know quite a bit more

599
00:24:38,730 --> 00:24:43,410
reasonable right and it has much more

600
00:24:40,529 --> 00:24:45,329
quick response to you know as I'm moving

601
00:24:43,410 --> 00:24:47,670
this light around as well so the

602
00:24:45,329 --> 00:24:52,259
seems pretty good and I'm you know again

603
00:24:47,670 --> 00:24:54,090
relatively happy with that but again the

604
00:24:52,259 --> 00:24:56,069
problem here is just that we don't know

605
00:24:54,089 --> 00:24:59,189
why when it comes up on here it's not

606
00:24:56,069 --> 00:25:00,779
working properly so there's two things

607
00:24:59,190 --> 00:25:03,059
that could be happening there

608
00:25:00,779 --> 00:25:05,490
one is that something's happening with

609
00:25:03,059 --> 00:25:07,859
the assignment of the receivers in the

610
00:25:05,490 --> 00:25:09,569
top half and the other is that

611
00:25:07,859 --> 00:25:12,869
something's happening with assignments

612
00:25:09,569 --> 00:25:15,689
of the transmitters in the upper half

613
00:25:12,869 --> 00:25:18,419
and we don't actually know which one of

614
00:25:15,690 --> 00:25:20,340
those is happening so what I'd like to

615
00:25:18,420 --> 00:25:22,740
do is try to figure out which one is

616
00:25:20,339 --> 00:25:25,349
happening I'm gonna start by assuming

617
00:25:22,740 --> 00:25:28,559
that it's assignment of the emitter

618
00:25:25,349 --> 00:25:31,079
right that it's these that are getting

619
00:25:28,559 --> 00:25:33,359
assigned erroneously and the reason that

620
00:25:31,079 --> 00:25:38,309
I want to start with that assumption is

621
00:25:33,359 --> 00:25:40,709
because it seems like my my main cube

622
00:25:38,309 --> 00:25:43,019
light here that I move around is not

623
00:25:40,710 --> 00:25:45,480
having the problem so if it was a

624
00:25:43,019 --> 00:25:47,160
circumstance where it was the receivers

625
00:25:45,480 --> 00:25:49,620
that were getting assigned improperly

626
00:25:47,160 --> 00:25:53,400
then I would have expected it to be the

627
00:25:49,619 --> 00:25:55,789
case that the lighting would not work in

628
00:25:53,400 --> 00:25:58,769
the upper half for my cube light either

629
00:25:55,789 --> 00:26:00,509
however since I'm seeing it work for my

630
00:25:58,769 --> 00:26:02,279
cube light I'm assuming that that's got

631
00:26:00,509 --> 00:26:05,180
to be something specific to these

632
00:26:02,279 --> 00:26:08,930
emitters that's causing the problem

633
00:26:05,180 --> 00:26:14,940
ergo my assumption is that when this

634
00:26:08,930 --> 00:26:16,799
remember these when we simulate the

635
00:26:14,940 --> 00:26:18,720
world we simulate a subset of the world

636
00:26:16,799 --> 00:26:20,970
that's the world we can see at the

637
00:26:18,720 --> 00:26:23,100
current time and the way that that works

638
00:26:20,970 --> 00:26:25,259
is we take entities that are packed into

639
00:26:23,099 --> 00:26:27,209
world storage we unpack them into a

640
00:26:25,259 --> 00:26:29,640
simulation region do our simulation and

641
00:26:27,210 --> 00:26:31,380
then pack them back what that means is

642
00:26:29,640 --> 00:26:33,210
that the order in which they were are

643
00:26:31,380 --> 00:26:35,220
rendered is based on where they are

644
00:26:33,210 --> 00:26:36,990
spatially in the world because we pull

645
00:26:35,220 --> 00:26:39,390
out all of the world storage chunks that

646
00:26:36,990 --> 00:26:41,670
we can see in a in a region do our

647
00:26:39,390 --> 00:26:44,640
computations and then put them back so

648
00:26:41,670 --> 00:26:48,180
it's entirely plausible that for this

649
00:26:44,640 --> 00:26:50,580
person to hop up into this region of the

650
00:26:48,180 --> 00:26:53,789
screen I should say this region of the

651
00:26:50,579 --> 00:26:56,339
world that would change their assignment

652
00:26:53,789 --> 00:26:58,589
in such a way that they got different

653
00:26:56,339 --> 00:27:00,359
draw order and hence some kind of

654
00:26:58,589 --> 00:27:03,649
for an thing happening with their

655
00:27:00,359 --> 00:27:03,649
lighting indices and not sure what

656
00:27:06,169 --> 00:27:12,419
now since lighting indices are stored

657
00:27:09,329 --> 00:27:13,949
with the entity I'm not 100% sure why we

658
00:27:12,419 --> 00:27:15,990
would ever see this bud because in

659
00:27:13,950 --> 00:27:18,028
theory all of the entities have been

660
00:27:15,990 --> 00:27:20,460
seen at this point they should all have

661
00:27:18,028 --> 00:27:22,169
light indices assigned to them and so

662
00:27:20,460 --> 00:27:24,210
they should be always outputting the

663
00:27:22,169 --> 00:27:28,200
same light indices no matter where they

664
00:27:24,210 --> 00:27:29,850
hop in the world however again we're

665
00:27:28,200 --> 00:27:31,528
dealing with something that's buggy so

666
00:27:29,849 --> 00:27:32,730
obviously my assumptions about what's

667
00:27:31,528 --> 00:27:35,190
happening there's something wrong

668
00:27:32,730 --> 00:27:36,839
somewhere so I'm choosing to assume that

669
00:27:35,190 --> 00:27:39,659
that something wrong happens to be in

670
00:27:36,839 --> 00:27:41,519
there somewhere in that set of

671
00:27:39,659 --> 00:27:45,659
assumptions it might be somewhere else

672
00:27:41,519 --> 00:27:47,369
let's find out so the first thing I'm

673
00:27:45,659 --> 00:27:51,169
going to do is I want to go ahead and

674
00:27:47,369 --> 00:27:54,209
take the the lighting index of that

675
00:27:51,169 --> 00:27:57,120
piece there I want to see what those

676
00:27:54,210 --> 00:27:59,519
learning indices are and I think the

677
00:27:57,119 --> 00:28:01,788
easiest way to do that is just to take a

678
00:27:59,519 --> 00:28:03,990
look at that push light call again

679
00:28:01,788 --> 00:28:05,908
because the only entities that are

680
00:28:03,990 --> 00:28:10,288
actually having their lights pushed on

681
00:28:05,909 --> 00:28:12,179
there is one of these are these people

682
00:28:10,288 --> 00:28:14,519
right here now why that did not stop by

683
00:28:12,179 --> 00:28:20,730
DOE because we're not in debug mode

684
00:28:14,519 --> 00:28:23,190
sorry that function probably got

685
00:28:20,730 --> 00:28:27,778
optimized out because it's just a little

686
00:28:23,190 --> 00:28:29,308
tiny so here's that push light call and

687
00:28:27,778 --> 00:28:33,538
what you can see from the push light

688
00:28:29,308 --> 00:28:35,579
call is that if we go up the stack the

689
00:28:33,538 --> 00:28:37,619
place where that's getting called is

690
00:28:35,579 --> 00:28:39,148
specifically when there's one of those

691
00:28:37,619 --> 00:28:40,859
lights that's happening here and you

692
00:28:39,148 --> 00:28:42,658
know what I can do - let's actually take

693
00:28:40,859 --> 00:28:44,069
one more step before we do byte just to

694
00:28:42,659 --> 00:28:46,679
make things a little bit easier on

695
00:28:44,069 --> 00:28:49,769
ourselves let's go ahead and take out as

696
00:28:46,679 --> 00:28:51,630
many parts of the equation as we can so

697
00:28:49,769 --> 00:28:54,538
that we're going to be able to most

698
00:28:51,630 --> 00:28:55,860
easily zero in on the particular cause

699
00:28:54,538 --> 00:28:57,450
of the problem so what I'm going to do

700
00:28:55,859 --> 00:28:59,788
is I'm going to comment out this push

701
00:28:57,450 --> 00:29:02,159
light call so that I no longer control

702
00:28:59,788 --> 00:29:06,119
light right so for starters I got rid of

703
00:29:02,159 --> 00:29:09,360
that we now only have the little snake

704
00:29:06,119 --> 00:29:10,949
gentleman hopping around as you can see

705
00:29:09,359 --> 00:29:12,299
and the other thing that I'm going to do

706
00:29:10,950 --> 00:29:15,029
is I'm going to go

707
00:29:12,299 --> 00:29:17,129
take out the push light calls that are

708
00:29:15,029 --> 00:29:19,740
happening on behalf of the other parts

709
00:29:17,130 --> 00:29:23,460
of snake so actually when you add the

710
00:29:19,740 --> 00:29:26,009
snake in instead of it always getting an

711
00:29:23,460 --> 00:29:28,309
ad piece light like it does here what

712
00:29:26,009 --> 00:29:33,299
I'm gonna do is say if the segment index

713
00:29:28,309 --> 00:29:34,470
is zero then sure otherwise no and I

714
00:29:33,299 --> 00:29:36,680
don't know if I have to make that one or

715
00:29:34,470 --> 00:29:40,350
not I'm not sure if the snake segment

716
00:29:36,680 --> 00:29:44,549
happens if it's if it's a snake segment

717
00:29:40,349 --> 00:29:45,689
zero or not let's let's find out so

718
00:29:44,549 --> 00:29:47,639
there we go

719
00:29:45,690 --> 00:29:50,309
now you can kind of see that the segment

720
00:29:47,640 --> 00:29:53,130
index it's only the head that is

721
00:29:50,309 --> 00:29:55,200
currently a light source now and you can

722
00:29:53,130 --> 00:29:58,080
see that the bug persists so we have

723
00:29:55,200 --> 00:30:01,049
only one light now and that should give

724
00:29:58,079 --> 00:30:04,740
me what I need to make this work so if

725
00:30:01,049 --> 00:30:08,399
we go into the running code here and now

726
00:30:04,740 --> 00:30:09,930
I that push light breakpoint right we

727
00:30:08,400 --> 00:30:12,840
can see that we're in a state where we

728
00:30:09,930 --> 00:30:14,880
do have the light working properly so I

729
00:30:12,839 --> 00:30:16,980
can come in here and I can look and see

730
00:30:14,880 --> 00:30:18,420
oops let me use this step into I try

731
00:30:16,980 --> 00:30:22,980
this before it's gonna work this time

732
00:30:18,420 --> 00:30:24,480
right right there it is oh it's just

733
00:30:22,980 --> 00:30:26,039
show ah that's interesting instead of

734
00:30:24,480 --> 00:30:30,150
showing up over here it's showing up

735
00:30:26,039 --> 00:30:31,889
over here don't know why because there's

736
00:30:30,150 --> 00:30:34,890
the arrow so it should show up over here

737
00:30:31,890 --> 00:30:37,890
but you know visual studio has its own

738
00:30:34,890 --> 00:30:40,860
special way of enriching our lives every

739
00:30:37,890 --> 00:30:43,080
day and that's just one of them so let's

740
00:30:40,859 --> 00:30:44,069
go into the push cube call and let's

741
00:30:43,079 --> 00:30:45,569
take a look at what we're actually

742
00:30:44,069 --> 00:30:48,990
storing in terms of the volume indices

743
00:30:45,569 --> 00:30:51,329
here we go you can see that we do have

744
00:30:48,990 --> 00:30:53,759
one here we should have one in here

745
00:30:51,329 --> 00:30:56,279
already we do we pull it out and so

746
00:30:53,759 --> 00:30:58,259
we're storing two light index 1033 a

747
00:30:56,279 --> 00:31:01,109
fantastic number if ever there was one

748
00:30:58,259 --> 00:31:02,970
there it is right there in fact so we're

749
00:31:01,109 --> 00:31:08,179
storing two 1033 and then that means

750
00:31:02,970 --> 00:31:12,180
we're gonna start a 1033 1037 1041 1045

751
00:31:08,180 --> 00:31:15,630
1049 right 1053 so those are now all

752
00:31:12,180 --> 00:31:18,090
stored in there that's all great and so

753
00:31:15,630 --> 00:31:21,120
what I want to do now is verify that we

754
00:31:18,089 --> 00:31:23,789
keep using that same light index every

755
00:31:21,119 --> 00:31:26,069
time we come through here that's what I

756
00:31:23,789 --> 00:31:28,950
would like to do so there's that 1033

757
00:31:26,069 --> 00:31:31,259
I can set the breakpoint out here and

758
00:31:28,950 --> 00:31:36,930
inspect that value totally easily right

759
00:31:31,259 --> 00:31:38,700
1033 1033 1033 1033 right always good so

760
00:31:36,930 --> 00:31:41,400
let's go ahead and disable this

761
00:31:38,700 --> 00:31:45,029
breakpoint and let's go ahead and wait

762
00:31:41,400 --> 00:31:47,550
till the the dude is up in a place where

763
00:31:45,029 --> 00:31:49,920
he's not lighting anything right which

764
00:31:47,549 --> 00:31:51,899
is right now so now I've set it and you

765
00:31:49,920 --> 00:31:53,970
can see he's hopped up in here where

766
00:31:51,900 --> 00:31:56,700
he's not he's not actually emitting

767
00:31:53,970 --> 00:31:58,110
light to these surfaces so what I want

768
00:31:56,700 --> 00:32:00,090
to see now is is anything weird

769
00:31:58,109 --> 00:32:02,939
happening so you could see 1033 that's

770
00:32:00,089 --> 00:32:06,629
still the same light that's been

771
00:32:02,940 --> 00:32:13,650
assigned here right and when I come

772
00:32:06,630 --> 00:32:15,270
through yeah

773
00:32:13,650 --> 00:32:20,070
presumably all of this stuff is

774
00:32:15,269 --> 00:32:23,369
functioning as normal I assume white

775
00:32:20,069 --> 00:32:25,319
count is four let me say 33 and we're

776
00:32:23,369 --> 00:32:34,769
assigning these to the exact same lights

777
00:32:25,319 --> 00:32:36,659
1037 1041 1045 1049 1053 so I'm not

778
00:32:34,769 --> 00:32:44,250
really sure why we're not lighting those

779
00:32:36,660 --> 00:32:45,390
but let's let's just push through and

780
00:32:44,250 --> 00:32:48,720
see what the lighting code actually does

781
00:32:45,390 --> 00:32:52,050
I mean another possibility somehow the

782
00:32:48,720 --> 00:32:55,440
light propagation is not propagating two

783
00:32:52,049 --> 00:32:59,460
lights that are far away and integers I

784
00:32:55,440 --> 00:33:00,960
don't know I uh no idea why that's

785
00:32:59,460 --> 00:33:03,600
happening so this ought to be

786
00:33:00,960 --> 00:33:07,079
entertaining so if we come down here do

787
00:33:03,599 --> 00:33:08,129
it extract reflectors from quads if I

788
00:33:07,079 --> 00:33:10,019
and you know what the other interesting

789
00:33:08,130 --> 00:33:12,420
thing is too you can kind of see here it

790
00:33:10,019 --> 00:33:16,950
looks like this could just be the blend

791
00:33:12,420 --> 00:33:18,930
happening but what you can kind of see

792
00:33:16,950 --> 00:33:23,039
there too is I think the light is still

793
00:33:18,930 --> 00:33:26,759
able to light this stuff so this light

794
00:33:23,039 --> 00:33:28,950
is emitting light into the world it's

795
00:33:26,759 --> 00:33:31,680
just not emitting light into the upper

796
00:33:28,950 --> 00:33:34,970
half of the world so it must have

797
00:33:31,680 --> 00:33:38,580
something to do with why an emitter at

798
00:33:34,970 --> 00:33:39,480
10:33 cannot spread light two emitters

799
00:33:38,579 --> 00:33:43,288
in certain

800
00:33:39,480 --> 00:33:48,740
index ranges or something but I'm not

801
00:33:43,288 --> 00:33:50,849
sure I know how that's really possible

802
00:33:48,740 --> 00:33:53,700
so we're gonna have to dig a little

803
00:33:50,849 --> 00:33:55,589
deeper to really even get a clue as to

804
00:33:53,700 --> 00:33:57,960
what this bug is I honestly can't think

805
00:33:55,589 --> 00:34:03,470
of what it could be I'm a bit stumpy

806
00:33:57,960 --> 00:34:12,780
I'm stumpy right now so taking a look at

807
00:34:03,470 --> 00:34:14,878
what we're extracting here so the stuff

808
00:34:12,780 --> 00:34:16,950
for extracting is exactly what we would

809
00:34:14,878 --> 00:34:20,909
think for you know light we have a light

810
00:34:16,949 --> 00:34:22,408
index in and I count to four right and

811
00:34:20,909 --> 00:34:28,849
we're putting these guys out in there

812
00:34:22,409 --> 00:34:31,200
we're filling in the emit and direction

813
00:34:28,849 --> 00:34:33,210
information here I'm assuming we've got

814
00:34:31,199 --> 00:34:39,838
a lighting solution right so it should

815
00:34:33,210 --> 00:34:41,849
be the solution again visual studio

816
00:34:39,838 --> 00:34:45,119
enriching our lives

817
00:34:41,849 --> 00:34:48,629
should have lasted adds up to one does

818
00:34:45,119 --> 00:34:50,309
again the point count is 177 so 1033 is

819
00:34:48,628 --> 00:34:52,618
kind of Falls sort of in the middle

820
00:34:50,309 --> 00:34:57,750
there we don't have a lot of ideas about

821
00:34:52,619 --> 00:35:00,780
what precisely well you know what now

822
00:34:57,750 --> 00:35:03,210
that I think about it another thing we

823
00:35:00,780 --> 00:35:04,619
probably should do soon is color the

824
00:35:03,210 --> 00:35:06,119
world based on light index because we

825
00:35:04,619 --> 00:35:08,150
did do something like that before we

826
00:35:06,119 --> 00:35:10,740
know there's a hundred and seventeen

827
00:35:08,150 --> 00:35:14,068
hundred and seventy seven different

828
00:35:10,739 --> 00:35:15,929
lighting points in the world and so one

829
00:35:14,068 --> 00:35:22,019
thing that we should do is go ahead and

830
00:35:15,929 --> 00:35:25,318
see if we can't color the world from

831
00:35:22,019 --> 00:35:27,900
from one to one 777 in terms of shades

832
00:35:25,318 --> 00:35:31,679
and that way we can kind of see where

833
00:35:27,900 --> 00:35:34,019
the indices are assigned and see if

834
00:35:31,679 --> 00:35:35,250
there is some coherent thing that's

835
00:35:34,019 --> 00:35:38,280
getting that's happening to the light

836
00:35:35,250 --> 00:35:40,588
indices in that top area because that

837
00:35:38,280 --> 00:35:44,670
might give us again a clue as to why

838
00:35:40,588 --> 00:35:46,349
they're having a problem so in here we

839
00:35:44,670 --> 00:35:47,818
sort of look through and we we try to

840
00:35:46,349 --> 00:35:49,619
figure out what our point count is going

841
00:35:47,818 --> 00:35:52,730
to be presumably as we come through

842
00:35:49,619 --> 00:35:56,570
these light indices here

843
00:35:52,730 --> 00:35:59,449
we will have some idea of what the

844
00:35:56,570 --> 00:36:06,200
maximum value is once we're done running

845
00:35:59,449 --> 00:36:06,710
it we find we have 444 services I don't

846
00:36:06,199 --> 00:36:09,139
know

847
00:36:06,710 --> 00:36:11,360
how many vertices we have processed

848
00:36:09,139 --> 00:36:23,299
because I can't verify that number here

849
00:36:11,360 --> 00:36:28,340
but what I could do is say here is the

850
00:36:23,300 --> 00:36:31,280
base pointer here's the current pointer

851
00:36:28,340 --> 00:36:36,920
so if we've retired nineteen hundred and

852
00:36:31,280 --> 00:36:41,600
sixty-four vertices right so the quad

853
00:36:36,920 --> 00:36:42,050
count should be roughly a quarter of

854
00:36:41,599 --> 00:36:45,259
that

855
00:36:42,050 --> 00:36:49,030
so 1964 divided by four is exactly what

856
00:36:45,260 --> 00:36:52,550
you would expect so if each quad had

857
00:36:49,030 --> 00:36:55,040
four light samples

858
00:36:52,550 --> 00:36:58,910
I'm sorry sixteen light light samples

859
00:36:55,039 --> 00:37:03,800
mmm if each quad had four light samples

860
00:36:58,909 --> 00:37:06,199
on it we would have expected 1964 points

861
00:37:03,800 --> 00:37:09,380
but we're not seeing that now that's

862
00:37:06,199 --> 00:37:10,759
possibly okay because again a bunch of

863
00:37:09,380 --> 00:37:12,980
in fact it's definitely okay because a

864
00:37:10,760 --> 00:37:15,230
bunch of our quads are sprites and those

865
00:37:12,980 --> 00:37:17,929
sprites don't have lighting so that's

866
00:37:15,230 --> 00:37:20,389
totally okay that those would be skipped

867
00:37:17,929 --> 00:37:22,429
there I'm just trying to think if

868
00:37:20,389 --> 00:37:26,109
somehow those getting skipped might

869
00:37:22,429 --> 00:37:26,109
somehow miss a sign

870
00:37:33,070 --> 00:37:39,440
you know I'm just trying to figure out

871
00:37:35,119 --> 00:37:41,690
if somehow those getting skipped can

872
00:37:39,440 --> 00:37:44,300
miss assign the indices so that maybe

873
00:37:41,690 --> 00:37:49,010
they're looking at parts of the lighting

874
00:37:44,300 --> 00:37:52,400
array that are not getting filled and I

875
00:37:49,010 --> 00:37:55,820
don't really know how exactly that would

876
00:37:52,400 --> 00:37:57,710
happen because you can see here we grab

877
00:37:55,820 --> 00:38:00,050
our lighting index off of zero slight

878
00:37:57,710 --> 00:38:03,920
index that's the same thing

879
00:38:00,050 --> 00:38:07,910
that the code in the shader should be

880
00:38:03,920 --> 00:38:09,200
grabbing from and so I'm not sure why we

881
00:38:07,909 --> 00:38:11,210
would be getting something weird

882
00:38:09,199 --> 00:38:13,539
happening there now I gotta go look to

883
00:38:11,210 --> 00:38:15,860
make sure that's true maybe the vertex

884
00:38:13,539 --> 00:38:17,449
shader is actually assigning things

885
00:38:15,860 --> 00:38:20,870
incorrectly there in which case that

886
00:38:17,449 --> 00:38:23,119
would be you know fairly important part

887
00:38:20,869 --> 00:38:26,199
of why things were working wrong but I'm

888
00:38:23,119 --> 00:38:28,339
assuming that that's working correctly

889
00:38:26,199 --> 00:38:29,899
so when we come through here we're

890
00:38:28,340 --> 00:38:31,490
looking at solution points that are

891
00:38:29,900 --> 00:38:33,369
based off that light index that lighting

892
00:38:31,489 --> 00:38:36,079
X is pulled directly out of the vertex

893
00:38:33,369 --> 00:38:38,179
record and the surface light index

894
00:38:36,079 --> 00:38:40,699
itself is also driven off of that so

895
00:38:38,179 --> 00:38:42,199
that again should correctly say that

896
00:38:40,699 --> 00:38:44,899
this particular surface corresponds with

897
00:38:42,199 --> 00:38:47,629
this particular range of light indices

898
00:38:44,900 --> 00:38:50,420
which are you know matched to the vertex

899
00:38:47,630 --> 00:38:54,200
so it's it's what that quad will pull

900
00:38:50,420 --> 00:38:55,730
from when it is done now after we do

901
00:38:54,199 --> 00:38:58,730
compute light propagation which I'll

902
00:38:55,730 --> 00:39:00,050
check later when we do that compute

903
00:38:58,730 --> 00:39:01,789
light propagation and we output the

904
00:39:00,050 --> 00:39:07,070
points you can see that we go through

905
00:39:01,789 --> 00:39:10,699
the points here and we pull out these

906
00:39:07,070 --> 00:39:12,710
values oh wait this is our debug output

907
00:39:10,699 --> 00:39:15,139
letting points know we want to link

908
00:39:12,710 --> 00:39:17,000
textures so outputting textures we go

909
00:39:15,139 --> 00:39:22,069
through here and we use the point

910
00:39:17,000 --> 00:39:24,019
indices and we put back the the arrays

911
00:39:22,070 --> 00:39:26,090
that we're sending down based on just

912
00:39:24,019 --> 00:39:27,949
the point indices so what that means is

913
00:39:26,090 --> 00:39:30,110
the point indices have to line up with

914
00:39:27,949 --> 00:39:33,049
the light indices so let's see if that's

915
00:39:30,110 --> 00:39:35,450
true right so is solution points point

916
00:39:33,050 --> 00:39:39,019
index is that going to line up properly

917
00:39:35,449 --> 00:39:41,179
right with the light indices what that

918
00:39:39,019 --> 00:39:44,360
means is that the light index as we come

919
00:39:41,179 --> 00:39:45,769
through this loop up here should be used

920
00:39:44,360 --> 00:39:47,599
to access the pointer

921
00:39:45,769 --> 00:39:49,039
and what you can see here is it does

922
00:39:47,599 --> 00:39:50,359
appear to be the case so there's

923
00:39:49,039 --> 00:39:54,199
lighting point right you can see it

924
00:39:50,358 --> 00:39:55,730
doing its thing here and similarly emit

925
00:39:54,199 --> 00:39:59,000
0 and average direction of light also

926
00:39:55,730 --> 00:40:00,829
driven off the light index so it does

927
00:39:59,000 --> 00:40:03,889
look like everything is driven off the

928
00:40:00,829 --> 00:40:07,338
light index there properly as it should

929
00:40:03,889 --> 00:40:12,079
be so the other question is well you

930
00:40:07,338 --> 00:40:14,389
know when we're outputting them are we

931
00:40:12,079 --> 00:40:16,489
actually correctly outputting all of

932
00:40:14,389 --> 00:40:19,400
them so what you can see here is when we

933
00:40:16,489 --> 00:40:23,929
do point index loops we're going to

934
00:40:19,400 --> 00:40:26,240
solution point count which again is 1777

935
00:40:23,929 --> 00:40:28,098
which is I think probably the correct

936
00:40:26,239 --> 00:40:31,519
number to be doing here since again

937
00:40:28,099 --> 00:40:32,720
we're skipping sprites which have

938
00:40:31,519 --> 00:40:35,088
bitmaps on them at the moment

939
00:40:32,719 --> 00:40:41,980
just the bitmap sprites we're only doing

940
00:40:35,088 --> 00:40:41,980
the cubes so yeah

941
00:40:49,360 --> 00:40:52,999
[Music]

942
00:40:53,019 --> 00:40:58,869
again not not having the stroke of

943
00:40:56,079 --> 00:41:02,460
inspiration here in terms of telling me

944
00:40:58,869 --> 00:41:02,460
maybe some to Jionni I'm too tired

945
00:41:18,300 --> 00:41:24,190
so I'm gonna go ahead and say that I

946
00:41:22,150 --> 00:41:26,170
think my next step is just to gain some

947
00:41:24,190 --> 00:41:28,240
insight into how those lighting indices

948
00:41:26,170 --> 00:41:30,789
are assigned so I can see if something

949
00:41:28,239 --> 00:41:32,679
weird is going on so let's just take a

950
00:41:30,789 --> 00:41:34,750
brief moment because I do want to keep

951
00:41:32,679 --> 00:41:36,399
pushing the debugging more but I feel

952
00:41:34,750 --> 00:41:37,869
like I'm a little bit too aimless in my

953
00:41:36,400 --> 00:41:39,820
debugging right now I don't know where

954
00:41:37,869 --> 00:41:41,739
to focus my efforts and so what I'm

955
00:41:39,820 --> 00:41:44,410
gonna try and do is find a clue to how

956
00:41:41,739 --> 00:41:48,250
to focus those efforts by changing the

957
00:41:44,409 --> 00:41:49,690
way the OpenGL shader is shading so that

958
00:41:48,250 --> 00:41:53,289
it shows me what the light indices

959
00:41:49,690 --> 00:41:55,780
actually are that's what I would like to

960
00:41:53,289 --> 00:41:57,219
do so here's the Z bias program you can

961
00:41:55,780 --> 00:41:59,710
see in here the way that we're doing the

962
00:41:57,219 --> 00:42:02,409
lighting we grab the light index out

963
00:41:59,710 --> 00:42:04,780
here and we loop through the light count

964
00:42:02,409 --> 00:42:08,190
like this fetching the light values and

965
00:42:04,780 --> 00:42:12,310
doing the ops on those light values

966
00:42:08,190 --> 00:42:14,079
right here right so if I wanted to do

967
00:42:12,309 --> 00:42:18,130
things differently than this what I

968
00:42:14,079 --> 00:42:20,400
could do instead is rather than textile

969
00:42:18,130 --> 00:42:23,710
fetching this information off of light I

970
00:42:20,400 --> 00:42:27,010
the way that we're doing it here I can

971
00:42:23,710 --> 00:42:30,970
come down here and say well instead of

972
00:42:27,010 --> 00:42:33,040
that value let's instead make lb equal

973
00:42:30,969 --> 00:42:35,859
to something based off of the fried

974
00:42:33,039 --> 00:42:39,610
light index and the way that we would do

975
00:42:35,860 --> 00:42:44,680
that is say okay let's perhaps say that

976
00:42:39,610 --> 00:42:49,300
the red value is going to be maybe the

977
00:42:44,679 --> 00:42:50,730
the low part of the frag well you know I

978
00:42:49,300 --> 00:42:52,990
could start by just doing grayscale

979
00:42:50,730 --> 00:42:59,289
since I know that this is how many I've

980
00:42:52,989 --> 00:43:02,099
got what I could do is say maybe maybe

981
00:42:59,289 --> 00:43:02,099
something like this

982
00:43:08,530 --> 00:43:13,750
so I know that now my grayscale value

983
00:43:11,019 --> 00:43:16,989
that I get here will actually just tell

984
00:43:13,750 --> 00:43:22,150
me what it is that I want to know and

985
00:43:16,989 --> 00:43:25,899
similarly I can do something more like

986
00:43:22,150 --> 00:43:28,599
this in fact I can leave these even on

987
00:43:25,900 --> 00:43:30,639
right and what I do is I just I just

988
00:43:28,599 --> 00:43:32,529
clobber the value that I was gonna use

989
00:43:30,639 --> 00:43:35,679
before with an actual direct lighting

990
00:43:32,530 --> 00:43:41,560
value that just tells me exactly what

991
00:43:35,679 --> 00:43:43,118
the lighting index is assigned right so

992
00:43:41,559 --> 00:43:45,880
what you can see out of this is you know

993
00:43:43,119 --> 00:43:49,660
lo and behold my suspicion is at least

994
00:43:45,880 --> 00:43:51,640
somewhat correct the the values of the

995
00:43:49,659 --> 00:43:54,549
lights that are being assigned here are

996
00:43:51,639 --> 00:43:57,339
definitely coherent with this spatial

997
00:43:54,550 --> 00:43:59,700
location in the world right so low

998
00:43:57,340 --> 00:44:02,950
lighting indices are down on the bottom

999
00:43:59,699 --> 00:44:05,409
highlighting high light indices are up

1000
00:44:02,949 --> 00:44:07,629
at the top and so what we're basically

1001
00:44:05,409 --> 00:44:11,759
seeing is that the higher the light

1002
00:44:07,630 --> 00:44:14,500
index gets the the closer we get to

1003
00:44:11,760 --> 00:44:17,580
failing to compute the light correctly

1004
00:44:14,500 --> 00:44:20,710
so it looks like about the halfway point

1005
00:44:17,579 --> 00:44:25,150
you know give or take somewhere around

1006
00:44:20,710 --> 00:44:28,869
there we stopped producing lighting for

1007
00:44:25,150 --> 00:44:33,130
the snake now remember we still produce

1008
00:44:28,869 --> 00:44:34,720
lighting for the moving Cube and that's

1009
00:44:33,130 --> 00:44:36,309
the really weird part about it right

1010
00:44:34,719 --> 00:44:38,618
it's not like the lighting doesn't work

1011
00:44:36,309 --> 00:44:41,019
at all yeah it's just that the moving

1012
00:44:38,619 --> 00:44:43,960
cube light doesn't work in this

1013
00:44:41,019 --> 00:44:45,880
particular case there so that's

1014
00:44:43,960 --> 00:44:49,210
particularly strange I'm gonna watch one

1015
00:44:45,880 --> 00:44:51,670
other thing here so what you can see is

1016
00:44:49,210 --> 00:44:53,590
there's the light index of this guy and

1017
00:44:51,670 --> 00:44:55,480
it never changes that's just I'm just

1018
00:44:53,590 --> 00:44:57,940
trying to verify there that it's always

1019
00:44:55,480 --> 00:44:59,710
the same and it is or at least it

1020
00:44:57,940 --> 00:45:01,510
appears to be that was what I was trying

1021
00:44:59,710 --> 00:45:05,409
to verify before numerically we always

1022
00:45:01,510 --> 00:45:07,270
saw it being 1033 so that's good like we

1023
00:45:05,409 --> 00:45:09,730
kind of get the idea there so I'm gonna

1024
00:45:07,269 --> 00:45:12,849
do one other check here what I'm gonna

1025
00:45:09,730 --> 00:45:14,139
do is it want to see a breaking point so

1026
00:45:12,849 --> 00:45:16,089
I can get a little bit of a better idea

1027
00:45:14,139 --> 00:45:17,980
of what's going on there rather than

1028
00:45:16,090 --> 00:45:18,789
assigning it based on grace fate scale

1029
00:45:17,980 --> 00:45:23,559
I'm going

1030
00:45:18,789 --> 00:45:29,949
say okay services liked RGB is going to

1031
00:45:23,559 --> 00:45:32,949
equal something like green unless of

1032
00:45:29,949 --> 00:45:36,009
course the frag light like index is

1033
00:45:32,949 --> 00:45:39,130
greater than 1033 which is our lights

1034
00:45:36,009 --> 00:45:42,338
value and then I'm going to change it to

1035
00:45:39,130 --> 00:45:45,699
red so red values will be ones that are

1036
00:45:42,338 --> 00:45:49,538
above 1033 green values are ones that

1037
00:45:45,699 --> 00:45:51,639
are below 1033 so the reason I did this

1038
00:45:49,539 --> 00:45:55,900
and you'll see a very suspicious pattern

1039
00:45:51,639 --> 00:45:58,900
emerging here all of the places where we

1040
00:45:55,900 --> 00:46:03,160
are not getting light contribution from

1041
00:45:58,900 --> 00:46:06,880
our 1033 light source happen to all be

1042
00:46:03,159 --> 00:46:08,528
above 1033 now why did I think to do

1043
00:46:06,880 --> 00:46:10,419
this well a because it's just a

1044
00:46:08,528 --> 00:46:13,630
convenient number that is sort of in the

1045
00:46:10,418 --> 00:46:15,068
middle ish of the range so I kind of got

1046
00:46:13,630 --> 00:46:17,709
a little bit of sinking suspicion about

1047
00:46:15,068 --> 00:46:20,228
that and the second reason I did it was

1048
00:46:17,708 --> 00:46:21,578
because the difference in my mind that I

1049
00:46:20,228 --> 00:46:22,808
was when I was thinking about what the

1050
00:46:21,579 --> 00:46:24,579
difference is between the light that

1051
00:46:22,809 --> 00:46:26,469
worked and the light that doesn't work

1052
00:46:24,579 --> 00:46:28,298
is the light that doesn't work happen to

1053
00:46:26,469 --> 00:46:30,278
got pushed on last remember it's a push

1054
00:46:28,298 --> 00:46:35,679
like that deed that cube that that I was

1055
00:46:30,278 --> 00:46:37,568
moving around is a light is a as a light

1056
00:46:35,679 --> 00:46:39,400
cube that gets pushed on by the world

1057
00:46:37,568 --> 00:46:40,989
code at the end of the render which

1058
00:46:39,400 --> 00:46:43,630
means it would have had a very high if

1059
00:46:40,989 --> 00:46:45,699
not the highest light index value and

1060
00:46:43,630 --> 00:46:48,219
that one was working so in my mind I'm

1061
00:46:45,699 --> 00:46:50,048
thinking maybe I have a bug where light

1062
00:46:48,219 --> 00:46:52,229
only gets distributed to things that are

1063
00:46:50,048 --> 00:46:56,018
lower than the value of the light source

1064
00:46:52,228 --> 00:46:57,759
and not higher than it low and behold

1065
00:46:56,018 --> 00:46:59,139
that looks like exactly what's happening

1066
00:46:57,759 --> 00:47:01,929
so that tells me that my light

1067
00:46:59,139 --> 00:47:02,679
propagation loop probably has a bug in

1068
00:47:01,929 --> 00:47:07,179
it somewhere

1069
00:47:02,679 --> 00:47:09,519
where I'm not looping over lights I'm

1070
00:47:07,179 --> 00:47:11,619
not able to transmit two lights that are

1071
00:47:09,518 --> 00:47:14,018
say higher than the emitter index so you

1072
00:47:11,619 --> 00:47:15,759
can see right here the way this loop

1073
00:47:14,018 --> 00:47:18,129
works for example let's just start with

1074
00:47:15,759 --> 00:47:20,248
this one and see I'm not sure it's in

1075
00:47:18,130 --> 00:47:22,749
this loop I'm just starting here

1076
00:47:20,248 --> 00:47:25,389
randomly but you can see here I've got

1077
00:47:22,748 --> 00:47:28,748
my emitter index and I'm looping between

1078
00:47:25,389 --> 00:47:30,548
the from from one to the point count and

1079
00:47:28,748 --> 00:47:31,939
then I'm going through here and I'm

1080
00:47:30,548 --> 00:47:35,750
doing my emission

1081
00:47:31,940 --> 00:47:37,429
from these points right as we go so when

1082
00:47:35,750 --> 00:47:40,280
I'm going through here at the emitter

1083
00:47:37,429 --> 00:47:42,589
index to start with would have been 1033

1084
00:47:40,280 --> 00:47:44,990
that's what we're looking at in terms of

1085
00:47:42,590 --> 00:47:46,550
where we're starting and presumably we

1086
00:47:44,989 --> 00:47:49,399
come down to this code and presumably

1087
00:47:46,550 --> 00:47:50,810
this this actually does execute why do I

1088
00:47:49,400 --> 00:47:52,309
think it executes well I think it

1089
00:47:50,809 --> 00:47:54,949
executes because this light is

1090
00:47:52,309 --> 00:47:58,009
propagating to other surfaces just not

1091
00:47:54,949 --> 00:47:59,839
ones that are higher than 1033 so when I

1092
00:47:58,010 --> 00:48:01,430
look down in here I see okay then I'm

1093
00:47:59,840 --> 00:48:03,650
gonna start doing ray casting I'm gonna

1094
00:48:01,429 --> 00:48:05,779
sample the hemisphere here I'm gonna do

1095
00:48:03,650 --> 00:48:07,760
my ray casts and then I'm gonna look to

1096
00:48:05,780 --> 00:48:10,519
see whether the hit index that comes

1097
00:48:07,760 --> 00:48:15,350
back is less than the surface count that

1098
00:48:10,519 --> 00:48:17,389
I've got for the solution now the

1099
00:48:15,349 --> 00:48:19,400
surface count let's make sure that ray

1100
00:48:17,389 --> 00:48:21,139
cast actually returns surfaces and not

1101
00:48:19,400 --> 00:48:23,570
points but it must because again it's

1102
00:48:21,139 --> 00:48:26,269
only looping over surfaces so that is

1103
00:48:23,570 --> 00:48:27,980
what it what it sends back here that's

1104
00:48:26,269 --> 00:48:29,719
what we would expect so result in X

1105
00:48:27,980 --> 00:48:31,940
equal source index that source index is

1106
00:48:29,719 --> 00:48:33,289
gonna be within the surfaces so if it

1107
00:48:31,940 --> 00:48:36,110
hits something that's what it's going to

1108
00:48:33,289 --> 00:48:38,420
get that seems fine when I come through

1109
00:48:36,110 --> 00:48:41,000
here I then say all right let's pull out

1110
00:48:38,420 --> 00:48:43,220
that hit surface using the hit index

1111
00:48:41,000 --> 00:48:45,380
here it is then we'll say okay let's go

1112
00:48:43,219 --> 00:48:48,230
from zero to however many the hit

1113
00:48:45,380 --> 00:48:49,760
surface had and we'll go say the point

1114
00:48:48,230 --> 00:48:51,170
index we're gonna distribute to is going

1115
00:48:49,760 --> 00:48:52,660
to be equal to the hit surface like this

1116
00:48:51,170 --> 00:48:55,159
plus the service point index right

1117
00:48:52,659 --> 00:48:56,719
that's what we would expect cuz in here

1118
00:48:55,159 --> 00:48:59,029
we're storing an index and array where

1119
00:48:56,719 --> 00:49:01,009
this guy starts we're coming through the

1120
00:48:59,030 --> 00:49:02,480
hit points on this guy by saying okay

1121
00:49:01,010 --> 00:49:06,560
for each of those point indexes let's

1122
00:49:02,480 --> 00:49:08,480
loop over them right and look at the

1123
00:49:06,559 --> 00:49:14,659
distance between them so the distance

1124
00:49:08,480 --> 00:49:16,280
between where we hit and where the point

1125
00:49:14,659 --> 00:49:18,619
on the surface that we're looking at and

1126
00:49:16,280 --> 00:49:20,600
where we hit we're gonna find whichever

1127
00:49:18,619 --> 00:49:22,849
the closest one was so if the closest

1128
00:49:20,599 --> 00:49:24,199
distance squared here it's greater than

1129
00:49:22,849 --> 00:49:25,699
distance car we're gonna use it right

1130
00:49:24,199 --> 00:49:27,529
and then what we're gonna do is we're

1131
00:49:25,699 --> 00:49:29,359
going to accumulate the sample if we

1132
00:49:27,530 --> 00:49:32,540
found one of these closest point indices

1133
00:49:29,360 --> 00:49:37,010
right I don't see anything immediately

1134
00:49:32,539 --> 00:49:41,469
in there that is biasing us towards not

1135
00:49:37,010 --> 00:49:41,470
counting stuff higher than our emitter

1136
00:49:51,760 --> 00:49:56,810
so I don't immediately see what's going

1137
00:49:54,320 --> 00:49:59,690
on but what I can do is I can step into

1138
00:49:56,809 --> 00:50:04,519
this code and watch what it does on

1139
00:49:59,690 --> 00:50:06,829
number 1033 and then I guess I will see

1140
00:50:04,519 --> 00:50:15,590
why we are not distributing to any

1141
00:50:06,829 --> 00:50:18,079
surfaces above there and one of the

1142
00:50:15,590 --> 00:50:20,960
things that you know I would mention

1143
00:50:18,079 --> 00:50:25,219
sort of in passing is when one of the

1144
00:50:20,960 --> 00:50:28,970
biggest source of problems in graphics

1145
00:50:25,219 --> 00:50:31,579
programming programming and general

1146
00:50:28,969 --> 00:50:34,159
McGrath specifically is that you tend to

1147
00:50:31,579 --> 00:50:36,590
have a lot of these sort of disparate

1148
00:50:34,159 --> 00:50:39,679
arrays that all pull together to create

1149
00:50:36,590 --> 00:50:42,200
some solution to something right whether

1150
00:50:39,679 --> 00:50:45,019
it's vertices on a mesh or lighting

1151
00:50:42,199 --> 00:50:46,399
sample points or anything else you tend

1152
00:50:45,019 --> 00:50:49,250
to have a lot of indices and they all

1153
00:50:46,400 --> 00:50:51,519
have to line up at the end and it's

1154
00:50:49,250 --> 00:50:57,199
really easy to get into a situation

1155
00:50:51,519 --> 00:50:58,880
where something isn't lining up right or

1156
00:50:57,199 --> 00:51:01,069
something's doing something wrong with

1157
00:50:58,880 --> 00:51:04,250
these indices and so we're probably

1158
00:51:01,070 --> 00:51:06,920
looking at a situation like that and

1159
00:51:04,250 --> 00:51:08,329
they do take a while to debug the reason

1160
00:51:06,920 --> 00:51:10,550
they take a while to the bug is because

1161
00:51:08,329 --> 00:51:12,619
debuggers are garbage so they don't

1162
00:51:10,550 --> 00:51:14,810
allow you to do things like trace back

1163
00:51:12,619 --> 00:51:17,719
points easily through all the things

1164
00:51:14,809 --> 00:51:19,820
that affected them and go oh okay I see

1165
00:51:17,719 --> 00:51:21,889
how this data flowed through here and

1166
00:51:19,820 --> 00:51:23,360
why we got the wrong result here so you

1167
00:51:21,889 --> 00:51:26,690
end up having to do a lot of staged

1168
00:51:23,360 --> 00:51:28,849
debugging like I'm doing now in the

1169
00:51:26,690 --> 00:51:30,470
future in fact I made a tool for

1170
00:51:28,849 --> 00:51:32,119
debugging this stuff at rad one time

1171
00:51:30,469 --> 00:51:34,579
called mustache that used to make

1172
00:51:32,119 --> 00:51:35,889
debugging problems like this basically

1173
00:51:34,579 --> 00:51:38,569
like shooting fish in a barrel

1174
00:51:35,889 --> 00:51:41,480
unfortunately and it was for doing video

1175
00:51:38,570 --> 00:51:43,789
debugging unfortunately we don't have

1176
00:51:41,480 --> 00:51:45,440
those tools in the general case yet

1177
00:51:43,789 --> 00:51:47,239
because people don't innovate on

1178
00:51:45,440 --> 00:51:49,700
debugging anymore but someday when they

1179
00:51:47,239 --> 00:51:51,319
start to again trust me these tools are

1180
00:51:49,699 --> 00:51:55,219
not hard to build people just don't

1181
00:51:51,320 --> 00:51:58,070
build them anyway moving on so in here

1182
00:51:55,219 --> 00:51:59,569
we've got this that situation occurring

1183
00:51:58,070 --> 00:52:02,000
something's wrong with our with our

1184
00:51:59,570 --> 00:52:03,890
indices there so let's go ahead and step

1185
00:52:02,000 --> 00:52:06,139
into it now it's gonna be hard to step

1186
00:52:03,889 --> 00:52:07,759
into this at the right time so rather

1187
00:52:06,139 --> 00:52:09,500
than try to do that what I'm gonna do

1188
00:52:07,760 --> 00:52:12,560
instead is add some code that will allow

1189
00:52:09,500 --> 00:52:14,750
me to trigger specifically when I think

1190
00:52:12,559 --> 00:52:16,699
the bug is happening starting from most

1191
00:52:14,750 --> 00:52:18,530
specific case and working our way

1192
00:52:16,699 --> 00:52:25,489
backwards for more general cases as I

1193
00:52:18,530 --> 00:52:27,769
see them so the most specific case would

1194
00:52:25,489 --> 00:52:29,809
be if at some point we actually were

1195
00:52:27,769 --> 00:52:32,509
about to do the operation I'm saying I

1196
00:52:29,809 --> 00:52:37,489
don't think happens so if the emission

1197
00:52:32,510 --> 00:52:40,250
index is equal to 1033 right so I'm in

1198
00:52:37,489 --> 00:52:41,689
meeting from 1033 that emitter and what

1199
00:52:40,250 --> 00:52:49,489
I can really do is say well if it's

1200
00:52:41,690 --> 00:52:52,579
greater than 1033 or or start and it's

1201
00:52:49,489 --> 00:52:54,439
less than or equal to you know what are

1202
00:52:52,579 --> 00:52:57,889
we saying that there's basically on that

1203
00:52:54,440 --> 00:53:01,039
you know on that cube of emission if

1204
00:52:57,889 --> 00:53:02,449
it's 1033 then we've got six sides of

1205
00:53:01,039 --> 00:53:04,759
the cube each which have force there's

1206
00:53:02,449 --> 00:53:06,469
24 on there so we're actually gonna go

1207
00:53:04,760 --> 00:53:09,410
up to ten fifty-seven which I think we

1208
00:53:06,469 --> 00:53:11,719
inspected before as well so let's say

1209
00:53:09,409 --> 00:53:16,609
we're looking at the emission being in

1210
00:53:11,719 --> 00:53:19,009
that range right so if the emission is

1211
00:53:16,610 --> 00:53:20,630
in that range then we know we are trying

1212
00:53:19,010 --> 00:53:22,790
to transmit from the thing that we're

1213
00:53:20,630 --> 00:53:26,090
saying isn't transmitting properly then

1214
00:53:22,789 --> 00:53:28,880
let's see if the point index that we're

1215
00:53:26,090 --> 00:53:33,559
testing at this point happens to pun

1216
00:53:28,880 --> 00:53:40,760
intended happens to be above the 10:57

1217
00:53:33,559 --> 00:53:43,610
range right so if it's a point if it's a

1218
00:53:40,760 --> 00:53:47,630
point that we think we shouldn't be

1219
00:53:43,610 --> 00:53:49,670
seeing any transmission from because we

1220
00:53:47,630 --> 00:53:51,590
know there's a bug there that's not

1221
00:53:49,670 --> 00:53:53,570
getting transferred if it's a point that

1222
00:53:51,590 --> 00:53:56,800
we think is buggy and we are trying to

1223
00:53:53,570 --> 00:54:01,340
emit from this the emitter which really

1224
00:53:56,800 --> 00:54:04,970
probably yeah it doesn't matter let's go

1225
00:54:01,340 --> 00:54:07,850
find out why this is this isn't

1226
00:54:04,969 --> 00:54:09,799
triggering so either we hit here and we

1227
00:54:07,849 --> 00:54:11,779
trace out to see what's going on or we

1228
00:54:09,800 --> 00:54:16,450
don't even hit here which means

1229
00:54:11,780 --> 00:54:22,580
move this up one stage of the loop right

1230
00:54:16,449 --> 00:54:27,710
all right so let me go ahead and set

1231
00:54:22,579 --> 00:54:33,019
this to OD here and let me come through

1232
00:54:27,710 --> 00:54:37,670
and run it and so as this is is running

1233
00:54:33,019 --> 00:54:39,710
along I'm gonna go switch to find that

1234
00:54:37,670 --> 00:54:42,500
location and just go ahead and take a

1235
00:54:39,710 --> 00:54:45,530
break point there so what we can see

1236
00:54:42,500 --> 00:54:48,920
here is unless I've really mistaken the

1237
00:54:45,530 --> 00:54:50,960
situation I did have now correctly

1238
00:54:48,920 --> 00:54:53,869
captured apart point where we're trying

1239
00:54:50,960 --> 00:54:57,110
to do an emission from one of the points

1240
00:54:53,869 --> 00:54:59,179
on the snake emitter right and we're

1241
00:54:57,110 --> 00:55:01,610
trying to emit to something that is not

1242
00:54:59,179 --> 00:55:04,429
get gathering any emission from that

1243
00:55:01,610 --> 00:55:06,650
from the snake right so we've hit a

1244
00:55:04,429 --> 00:55:08,569
point where we would say that that's

1245
00:55:06,650 --> 00:55:11,150
what we wanted to do right closest point

1246
00:55:08,570 --> 00:55:16,760
index is above 1033 closest distance

1247
00:55:11,150 --> 00:55:18,980
squared is just 1.05 right so off we go

1248
00:55:16,760 --> 00:55:21,350
looking at this here finding that

1249
00:55:18,980 --> 00:55:23,360
closest point it looks like we found a

1250
00:55:21,349 --> 00:55:25,639
new closest point again still above

1251
00:55:23,360 --> 00:55:28,849
range but that one was closer so that's

1252
00:55:25,639 --> 00:55:31,909
probably the hit and now we have

1253
00:55:28,849 --> 00:55:35,000
finished right so we found a point we

1254
00:55:31,909 --> 00:55:37,069
want to distribute some emission to we

1255
00:55:35,000 --> 00:55:40,099
go through the closest point index we're

1256
00:55:37,070 --> 00:55:42,830
gonna call in to accumulate sample with

1257
00:55:40,099 --> 00:55:47,329
this closest point index so we go in

1258
00:55:42,829 --> 00:55:49,549
there let me do that step into again I'm

1259
00:55:47,329 --> 00:55:53,389
you stop coming out the back now I know

1260
00:55:49,550 --> 00:55:56,210
to look right so accumulate sample comes

1261
00:55:53,389 --> 00:55:58,909
in we compute the angular fall-off which

1262
00:55:56,210 --> 00:56:00,679
is not going to nullify it we compute

1263
00:55:58,909 --> 00:56:03,109
the power again not going to nullify it

1264
00:56:00,679 --> 00:56:05,000
the weight not going to nullify it we

1265
00:56:03,110 --> 00:56:14,000
generate our result which is a regional

1266
00:56:05,000 --> 00:56:17,059
value we have our destiny at C value

1267
00:56:14,000 --> 00:56:19,130
here which we can sort of check to see

1268
00:56:17,059 --> 00:56:24,019
what's going on in terms of where that

1269
00:56:19,130 --> 00:56:25,550
is in our loop it's a little bit hard to

1270
00:56:24,019 --> 00:56:27,559
do at the moment but we can

1271
00:56:25,550 --> 00:56:29,660
just snap this pointer value here there

1272
00:56:27,559 --> 00:56:31,789
we go just we can remember which one it

1273
00:56:29,659 --> 00:56:36,739
is and we can even go through here and

1274
00:56:31,789 --> 00:56:38,750
this is a v3 pointer array so we can

1275
00:56:36,739 --> 00:56:41,299
take a look at what it's actually set to

1276
00:56:38,750 --> 00:56:42,829
so what we can do is watch that

1277
00:56:41,300 --> 00:56:45,289
accumulation happen so there we've

1278
00:56:42,829 --> 00:56:47,150
accumulated some lighting in there and

1279
00:56:45,289 --> 00:56:50,570
we've returned our result out that's

1280
00:56:47,150 --> 00:56:55,240
going to subtract away the lighting

1281
00:56:50,570 --> 00:56:58,850
right there Maria's gonna keep doing it

1282
00:56:55,239 --> 00:57:02,299
so what we should see there is yeah

1283
00:56:58,849 --> 00:57:04,299
every all of that light just gets it is

1284
00:57:02,300 --> 00:57:06,740
getting distributed in there properly

1285
00:57:04,300 --> 00:57:09,980
let's see what happens at the end of the

1286
00:57:06,739 --> 00:57:13,909
loop so if I jump out to the end of the

1287
00:57:09,980 --> 00:57:17,000
loop so what you can see here is by the

1288
00:57:13,909 --> 00:57:19,750
time we get to the end of the loop all

1289
00:57:17,000 --> 00:57:22,309
of its light has been dissipated so

1290
00:57:19,750 --> 00:57:24,860
something is happening where all of the

1291
00:57:22,309 --> 00:57:27,529
light that should have was a and we saw

1292
00:57:24,860 --> 00:57:29,690
getting accumulated right is getting

1293
00:57:27,530 --> 00:57:33,410
wiped out and the only real way it can

1294
00:57:29,690 --> 00:57:37,220
get wiped out there is in this line here

1295
00:57:33,409 --> 00:57:49,670
where the retained light where where it

1296
00:57:37,219 --> 00:57:54,699
essentially gets okay so there's our

1297
00:57:49,670 --> 00:57:54,700
answer that's just dumb

1298
00:57:54,809 --> 00:58:02,039
so what you can see here is us being

1299
00:57:57,509 --> 00:58:05,130
fairly stupid this needs to be a plus

1300
00:58:02,039 --> 00:58:07,469
equals not in equals we're taking an

1301
00:58:05,130 --> 00:58:09,689
amount of source light and we're saying

1302
00:58:07,469 --> 00:58:12,329
any amount of source light that did not

1303
00:58:09,688 --> 00:58:14,879
get transmitted needs to get added back

1304
00:58:12,329 --> 00:58:16,140
in however instead of adding it back

1305
00:58:14,880 --> 00:58:17,338
into the light that's already been

1306
00:58:16,139 --> 00:58:19,650
accumulated for this point we're just

1307
00:58:17,338 --> 00:58:24,028
coal dropping it right over the top

1308
00:58:19,650 --> 00:58:30,869
right that is almost certainly the

1309
00:58:24,028 --> 00:58:33,179
entirety of the bug so it wasn't really

1310
00:58:30,869 --> 00:58:35,909
even indexed I mean it happens to be

1311
00:58:33,179 --> 00:58:38,699
indexed base because of the that meant

1312
00:58:35,909 --> 00:58:41,608
that you could only transmit light sort

1313
00:58:38,699 --> 00:58:45,168
of earlier to people who were earlier

1314
00:58:41,608 --> 00:58:45,168
than you who hadn't wrapped already

1315
00:58:46,429 --> 00:58:57,389
pretty simple fix as it turns out so

1316
00:58:50,248 --> 00:58:59,129
let's take a look at how that goes now I

1317
00:58:57,389 --> 00:59:01,048
guess I'm also gonna have to change the

1318
00:58:59,130 --> 00:59:04,079
shader in here to no longer be

1319
00:59:01,048 --> 00:59:11,150
outputting in debug mode so let's go

1320
00:59:04,079 --> 00:59:11,150
ahead and do this stuff here yeah okay

1321
00:59:16,409 --> 00:59:26,548
so now our lighting transmission should

1322
00:59:18,659 --> 00:59:31,619
should work when it gets up there and lo

1323
00:59:26,548 --> 00:59:33,958
and behold it does alright so now I can

1324
00:59:31,619 --> 00:59:36,919
go in here and in theory return things

1325
00:59:33,958 --> 00:59:39,418
to semi normal and we should see

1326
00:59:36,918 --> 00:59:42,028
everything kind of playing nicely

1327
00:59:39,418 --> 00:59:45,719
together I can go back into the world

1328
00:59:42,028 --> 00:59:50,639
mode and add another at our lights back

1329
00:59:45,719 --> 00:59:53,458
in I can go into the debug light and

1330
00:59:50,639 --> 00:59:55,078
turn that back on and now in theory all

1331
00:59:53,458 --> 00:59:57,528
of these should be working correctly

1332
00:59:55,079 --> 00:59:57,528
right

1333
01:00:14,519 --> 01:00:20,259
so that looks pretty clean and now I'm

1334
01:00:18,760 --> 01:00:22,869
not seeing anymore of those artifacts

1335
01:00:20,260 --> 01:00:25,690
our light transmission should also be

1336
01:00:22,869 --> 01:00:27,820
better and more stable now because now

1337
01:00:25,690 --> 01:00:29,769
we're not having this forward only

1338
01:00:27,820 --> 01:00:31,539
transmission so each iteration of our

1339
01:00:29,769 --> 01:00:34,480
lighting is doing better work now than

1340
01:00:31,539 --> 01:00:36,849
it was before and so we're also probably

1341
01:00:34,480 --> 01:00:39,179
getting a better light solution even for

1342
01:00:36,849 --> 01:00:42,309
the things that we're already working

1343
01:00:39,179 --> 01:00:45,929
because that was just reducing the

1344
01:00:42,309 --> 01:00:45,929
effectiveness of our light propagation

1345
01:00:51,960 --> 01:00:57,750
so that's looking pretty nice I'm pretty

1346
01:00:55,269 --> 01:00:57,750
happy with that

1347
01:01:14,250 --> 01:01:21,809
I will say there's still a little

1348
01:01:17,039 --> 01:01:26,579
weirdness I think maybe I'm not 100%

1349
01:01:21,809 --> 01:01:29,429
sure it's a little hard to say but I'm

1350
01:01:26,579 --> 01:01:31,170
not 100% positive oh no I think that's

1351
01:01:29,429 --> 01:01:33,929
right never mind I was gonna say I'm not

1352
01:01:31,170 --> 01:01:37,710
positive these should be lit but they

1353
01:01:33,929 --> 01:01:39,899
they definitely are in fact it's it's

1354
01:01:37,710 --> 01:01:41,880
doing the leg just right it can't light

1355
01:01:39,900 --> 01:01:44,450
that surface but it can light this one

1356
01:01:41,880 --> 01:01:44,450
and it is

1357
01:02:13,389 --> 01:02:18,579
so that seems pretty good I'm relatively

1358
01:02:15,880 --> 01:02:21,760
happy with that and the other thing that

1359
01:02:18,579 --> 01:02:23,349
I would point out here that at least

1360
01:02:21,760 --> 01:02:25,450
that I'm hoping will happen and I don't

1361
01:02:23,349 --> 01:02:26,949
really know if it will or not but it's

1362
01:02:25,449 --> 01:02:29,559
the way that I'm sort of approaching

1363
01:02:26,949 --> 01:02:31,839
this is for example you know the

1364
01:02:29,559 --> 01:02:34,150
difference in lighting on these on these

1365
01:02:31,840 --> 01:02:36,519
squares is desirable because one of the

1366
01:02:34,150 --> 01:02:41,440
things that I wanted to have happen in

1367
01:02:36,519 --> 01:02:43,239
the game is you know I want to have it

1368
01:02:41,440 --> 01:02:45,220
emphasized the fact that the game is

1369
01:02:43,239 --> 01:02:47,919
square based because you hop from square

1370
01:02:45,219 --> 01:02:49,750
to square but other times we may not

1371
01:02:47,920 --> 01:02:51,159
want to emphasize that so for example

1372
01:02:49,750 --> 01:02:53,710
when you have two surfaces that are

1373
01:02:51,159 --> 01:02:56,440
right up next to each other in a flat

1374
01:02:53,710 --> 01:03:00,250
wall like this here we may not want to

1375
01:02:56,440 --> 01:03:02,200
have that lighting discontinuity now in

1376
01:03:00,250 --> 01:03:03,610
order to sample the light enough times

1377
01:03:02,199 --> 01:03:04,960
to make sure there's no discontinuity

1378
01:03:03,610 --> 01:03:07,000
there we'd have to do way too much work

1379
01:03:04,960 --> 01:03:09,010
and that's just not going to happen

1380
01:03:07,000 --> 01:03:10,599
so what we can do though is the reason

1381
01:03:09,010 --> 01:03:13,060
that I architected the system the way

1382
01:03:10,599 --> 01:03:14,589
that I did now when I sort of said oh

1383
01:03:13,059 --> 01:03:17,049
let's make it so we passed down those

1384
01:03:14,590 --> 01:03:19,240
lighting indices is when we do our world

1385
01:03:17,050 --> 01:03:20,530
Jen it would be free for us as long as

1386
01:03:19,239 --> 01:03:22,750
we put the logic in that generator

1387
01:03:20,530 --> 01:03:25,090
properly to say that when we have a

1388
01:03:22,750 --> 01:03:28,510
situation like this share the lighting

1389
01:03:25,090 --> 01:03:30,100
samples across the seam right because

1390
01:03:28,510 --> 01:03:32,080
what we can do is place lighting samples

1391
01:03:30,099 --> 01:03:33,849
across the surface and the lighting

1392
01:03:32,079 --> 01:03:36,099
samples can be placed right on the seam

1393
01:03:33,849 --> 01:03:37,989
and both of these two faces can share

1394
01:03:36,099 --> 01:03:39,309
them that way when we interpolate the

1395
01:03:37,989 --> 01:03:41,679
lighting across the seam should

1396
01:03:39,309 --> 01:03:42,849
relatively disappear right now we may

1397
01:03:41,679 --> 01:03:45,159
have to do some special work with our

1398
01:03:42,849 --> 01:03:46,690
interpreters to make that really be

1399
01:03:45,159 --> 01:03:49,179
seamless because interpolating scattered

1400
01:03:46,690 --> 01:03:51,039
point sources is kind of difficult so

1401
01:03:49,179 --> 01:03:53,049
you know it's easier said than done but

1402
01:03:51,039 --> 01:03:56,110
in terms of computing the information we

1403
01:03:53,050 --> 01:04:00,850
need I think we can't do it and that'll

1404
01:03:56,110 --> 01:04:01,660
give us smoother washes there right so

1405
01:04:00,849 --> 01:04:02,860
we have some work to do with the

1406
01:04:01,659 --> 01:04:04,119
interpolation and we definitely will

1407
01:04:02,860 --> 01:04:06,280
have some work to do at World Gym time

1408
01:04:04,119 --> 01:04:06,579
but now I think we're in pretty good

1409
01:04:06,280 --> 01:04:09,070
shape

1410
01:04:06,579 --> 01:04:10,539
as far as as that's concerned because

1411
01:04:09,070 --> 01:04:12,400
I'm getting the kind of results that I

1412
01:04:10,539 --> 01:04:15,849
want from the lighting system and

1413
01:04:12,400 --> 01:04:17,139
everything is fine right now it's worth

1414
01:04:15,849 --> 01:04:19,000
noting that we still have a lot of

1415
01:04:17,139 --> 01:04:20,559
problems to deal with if I was to make

1416
01:04:19,000 --> 01:04:22,090
the world slightly bigger it's going to

1417
01:04:20,559 --> 01:04:24,429
get too slow so like I said we kind of

1418
01:04:22,090 --> 01:04:27,400
need to start taking more steps now to

1419
01:04:24,429 --> 01:04:30,368
sort of make this into a solution

1420
01:04:27,400 --> 01:04:33,338
that's scalable to to things that are as

1421
01:04:30,369 --> 01:04:34,568
large as we might be using so if I kind

1422
01:04:33,338 --> 01:04:36,219
of go into world mode now what I'd like

1423
01:04:34,568 --> 01:04:39,730
to do is take a look at what happens

1424
01:04:36,219 --> 01:04:41,919
when we start to build out things to as

1425
01:04:39,730 --> 01:04:43,630
big as we're going to kind of let them

1426
01:04:41,920 --> 01:04:46,000
fail and be too slow and then we'll sort

1427
01:04:43,630 --> 01:04:48,910
of try to start to push forwards from

1428
01:04:46,000 --> 01:04:50,619
there okay

1429
01:04:48,909 --> 01:04:56,879
so let's take a look at what's gonna

1430
01:04:50,619 --> 01:04:56,880
happen there when I do add standard room

1431
01:05:08,639 --> 01:05:12,578
what we can see here is we're only

1432
01:05:10,778 --> 01:05:19,059
adding like one of them let's say we

1433
01:05:12,579 --> 01:05:22,390
added two of them you can see how much

1434
01:05:19,059 --> 01:05:24,609
more our solution slows down right

1435
01:05:22,389 --> 01:05:27,068
because it doesn't have any scalability

1436
01:05:24,608 --> 01:05:31,058
built into it now I'm pretty sure that

1437
01:05:27,068 --> 01:05:31,960
it's not the the actual rendering that's

1438
01:05:31,059 --> 01:05:34,329
taking the time

1439
01:05:31,960 --> 01:05:36,338
however we probably want to verify that

1440
01:05:34,329 --> 01:05:37,690
that's the case so what I'm gonna do is

1441
01:05:36,338 --> 01:05:39,519
I'm gonna go well actually I don't even

1442
01:05:37,690 --> 01:05:43,240
have to do that let me just go ahead and

1443
01:05:39,519 --> 01:05:45,159
turn it off temporarily so here I have

1444
01:05:43,239 --> 01:05:48,519
turned off updating of the lighting

1445
01:05:45,159 --> 01:05:50,379
solution and what you can see from the

1446
01:05:48,519 --> 01:05:52,119
results is that it's really just that

1447
01:05:50,380 --> 01:05:53,710
lighting update which is what we would

1448
01:05:52,119 --> 01:05:54,519
expect but we want to make sure that's

1449
01:05:53,710 --> 01:05:55,900
true

1450
01:05:54,519 --> 01:05:57,670
and so what you can see is it's just the

1451
01:05:55,900 --> 01:06:00,190
lighting update that takes the time so

1452
01:05:57,670 --> 01:06:02,829
once you have the lighting solution

1453
01:06:00,190 --> 01:06:05,048
submitted the per pixel interpolators

1454
01:06:02,829 --> 01:06:08,019
are not causing a problem right I'm I'm

1455
01:06:05,048 --> 01:06:10,719
spinning this around here just fine

1456
01:06:08,019 --> 01:06:12,969
and you know the framerate is is not a

1457
01:06:10,719 --> 01:06:14,139
problem at the moment but once I tell it

1458
01:06:12,969 --> 01:06:15,399
to start recalculating the lighting

1459
01:06:14,139 --> 01:06:17,558
solution you can see we go up to a

1460
01:06:15,400 --> 01:06:18,910
really expensive amount of time and then

1461
01:06:17,559 --> 01:06:21,278
when I turn it back off we're right back

1462
01:06:18,909 --> 01:06:23,858
down to a reasonable frame rate now we

1463
01:06:21,278 --> 01:06:26,048
we're not complete great because we

1464
01:06:23,858 --> 01:06:28,659
still have the weird like too many we do

1465
01:06:26,048 --> 01:06:31,358
too much work still in our renderer

1466
01:06:28,659 --> 01:06:33,969
because we do the multi pass nonsense

1467
01:06:31,358 --> 01:06:35,348
and and stuff like that so you know

1468
01:06:33,969 --> 01:06:37,269
there's stuff that we still want to do

1469
01:06:35,349 --> 01:06:41,080
to optimize a renderer probably quite a

1470
01:06:37,269 --> 01:06:44,050
bit of stuff we want to do but you

1471
01:06:41,079 --> 01:06:46,029
no this is still totally usable at this

1472
01:06:44,050 --> 01:06:48,820
stage of development no question right

1473
01:06:46,030 --> 01:06:50,920
um and so what we see here is just that

1474
01:06:48,820 --> 01:06:52,300
it's that lighting update that's taking

1475
01:06:50,920 --> 01:06:55,950
the time so what we're gonna have to do

1476
01:06:52,300 --> 01:06:58,360
in order to start scaling out some more

1477
01:06:55,949 --> 01:06:59,919
rooms because obviously like you know we

1478
01:06:58,360 --> 01:07:02,559
get up to two something like four it

1479
01:06:59,920 --> 01:07:04,900
will be completely unusable in terms of

1480
01:07:02,559 --> 01:07:08,340
real time wedding right so you can kind

1481
01:07:04,900 --> 01:07:10,740
of see here here is a thing that's got

1482
01:07:08,340 --> 01:07:18,340
rooms stacked on top of each other I

1483
01:07:10,739 --> 01:07:21,969
thought I said four oh right we only can

1484
01:07:18,340 --> 01:07:25,110
see three of them we fade out when we

1485
01:07:21,969 --> 01:07:28,779
get to the bottom is that correct

1486
01:07:25,110 --> 01:07:32,380
am I right about that we need to add a

1487
01:07:28,780 --> 01:07:35,620
weighted to debug move down you know

1488
01:07:32,380 --> 01:07:40,920
currently have a way to do that and why

1489
01:07:35,619 --> 01:07:40,920
is the world small let's fix that

1490
01:07:57,900 --> 01:08:03,180
all right so now I should also be able

1491
01:08:01,108 --> 01:08:04,710
to kind of go down the stairs I think

1492
01:08:03,179 --> 01:08:06,419
although did we make the rooms I think

1493
01:08:04,710 --> 01:08:08,010
we made the rooms too high as well so

1494
01:08:06,420 --> 01:08:10,730
you can't actually get down them anymore

1495
01:08:08,010 --> 01:08:13,799
because you the the steps were like too

1496
01:08:10,730 --> 01:08:16,619
far apart or something of this nature

1497
01:08:13,798 --> 01:08:17,789
right but here we can see the lighting

1498
01:08:16,619 --> 01:08:20,908
operating on sort of a more

1499
01:08:17,789 --> 01:08:22,769
three-dimensional level and you again

1500
01:08:20,908 --> 01:08:24,379
can see that it really is starting to

1501
01:08:22,770 --> 01:08:28,230
work the way that I wanted it to work

1502
01:08:24,380 --> 01:08:32,009
where you know if we do do an update on

1503
01:08:28,229 --> 01:08:34,139
it it does produce pretty much exactly

1504
01:08:32,009 --> 01:08:36,479
what I would have wanted now of course

1505
01:08:34,140 --> 01:08:38,009
the problem is the update only kind of

1506
01:08:36,479 --> 01:08:39,750
blends in over time so you have to do

1507
01:08:38,009 --> 01:08:41,390
several updates to get a real solution

1508
01:08:39,750 --> 01:08:44,189
you can kind of see how slow it is

1509
01:08:41,390 --> 01:08:45,690
updating the lighting right but if we

1510
01:08:44,189 --> 01:08:48,119
were to speed that up which I think we

1511
01:08:45,689 --> 01:08:50,068
can really easily do well easily

1512
01:08:48,119 --> 01:08:52,048
I think there's direct ways of us

1513
01:08:50,069 --> 01:08:55,679
getting to that point I think we'll be

1514
01:08:52,048 --> 01:08:57,479
in good shape and so you know again

1515
01:08:55,679 --> 01:09:02,850
looking at this I think we're I think

1516
01:08:57,479 --> 01:09:04,108
we're almost there this is again sort of

1517
01:09:02,850 --> 01:09:05,489
more representative of what you'll be

1518
01:09:04,109 --> 01:09:07,529
looking at on the screen when you'd

1519
01:09:05,488 --> 01:09:10,408
actually be playing modular the fact

1520
01:09:07,529 --> 01:09:12,120
that the you know the artwork is not

1521
01:09:10,408 --> 01:09:14,608
really what we would be normally doing

1522
01:09:12,119 --> 01:09:15,479
but if you take a look at with what

1523
01:09:14,609 --> 01:09:18,088
you're seeing on the screen right now

1524
01:09:15,479 --> 01:09:20,968
that's sort of more representative to

1525
01:09:18,088 --> 01:09:22,439
the level of complexity on the screen

1526
01:09:20,969 --> 01:09:24,088
that you would be looking at and what

1527
01:09:22,439 --> 01:09:25,948
you can see here again is that you know

1528
01:09:24,088 --> 01:09:27,838
we're still at 30 frames a second even

1529
01:09:25,948 --> 01:09:31,108
without the optimized without any

1530
01:09:27,838 --> 01:09:33,210
optimizations really in the renderer so

1531
01:09:31,109 --> 01:09:34,560
we're pretty good like I really just

1532
01:09:33,210 --> 01:09:36,810
don't think we have too much to worry

1533
01:09:34,560 --> 01:09:37,890
about so this scheme I think will be

1534
01:09:36,810 --> 01:09:39,960
fine

1535
01:09:37,890 --> 01:09:41,310
and it again captures a lot of the stuff

1536
01:09:39,960 --> 01:09:44,009
that I wanted to capture you know you

1537
01:09:41,310 --> 01:09:46,020
can get lighting that kind of plays off

1538
01:09:44,009 --> 01:09:49,948
various places here and you get you know

1539
01:09:46,020 --> 01:09:52,650
all sorts of nice sort of effects

1540
01:09:49,948 --> 01:09:54,298
happening there if I go ahead and sort

1541
01:09:52,649 --> 01:09:55,529
of stop it at the beginning where you

1542
01:09:54,298 --> 01:09:57,119
can kind of see that people are in this

1543
01:09:55,529 --> 01:09:58,679
you know the places where they're light

1544
01:09:57,119 --> 01:10:02,599
sources actually are let me go ahead and

1545
01:09:58,679 --> 01:10:02,600
turn the lighting off or try to

1546
01:10:07,819 --> 01:10:14,479
why am I not able to turn the lighting

1547
01:10:09,439 --> 01:10:18,469
up there we go well that was really

1548
01:10:14,479 --> 01:10:21,729
weird what's going on I got some weird

1549
01:10:18,469 --> 01:10:21,730
hotkeys stuff set up here

1550
01:10:34,010 --> 01:10:40,340
oh I'm pushing f5 instead of f4 so all I

1551
01:10:38,659 --> 01:10:44,869
was doing was reducing the number of

1552
01:10:40,340 --> 01:10:47,090
bounces ah that's awesome alright so

1553
01:10:44,869 --> 01:10:48,979
anyway back to what I was saying so you

1554
01:10:47,090 --> 01:10:50,720
can kind of see that if you know if you

1555
01:10:48,979 --> 01:10:53,359
just take a look at the initial solution

1556
01:10:50,720 --> 01:10:55,220
it's doing roughly what I want you're

1557
01:10:53,359 --> 01:10:57,049
getting bounce light off of this from

1558
01:10:55,220 --> 01:10:58,670
here and you're doing all this stuff

1559
01:10:57,050 --> 01:11:01,310
that you know exactly what I want to

1560
01:10:58,670 --> 01:11:03,949
have happen you look down here you can

1561
01:11:01,310 --> 01:11:05,690
kind of see illumination happening in

1562
01:11:03,949 --> 01:11:07,639
kind of a cave-like environment where

1563
01:11:05,689 --> 01:11:09,469
there's no you know up here we've got

1564
01:11:07,640 --> 01:11:11,420
the the main light debug like going

1565
01:11:09,470 --> 01:11:13,909
there down here you can see we've got

1566
01:11:11,420 --> 01:11:16,399
kind of the sort of this sort of

1567
01:11:13,909 --> 01:11:20,149
localized effect happening here so I

1568
01:11:16,399 --> 01:11:22,149
think that that is is all good like I

1569
01:11:20,149 --> 01:11:25,309
think we're in good shape here

1570
01:11:22,149 --> 01:11:28,549
yeah and off we go if I was to generate

1571
01:11:25,310 --> 01:11:32,060
a lot more of these and allowed them to

1572
01:11:28,550 --> 01:11:33,980
generate any way they wanted to so you

1573
01:11:32,060 --> 01:11:36,380
know in here where we do our random

1574
01:11:33,979 --> 01:11:43,129
choice stuff maybe re-enable the thing

1575
01:11:36,380 --> 01:11:45,529
that lets us go any way that we want not

1576
01:11:43,130 --> 01:11:49,369
sure we haven't worked on that generator

1577
01:11:45,529 --> 01:11:51,979
code in a while but here's a lighting

1578
01:11:49,369 --> 01:11:54,970
solution for example that is operating

1579
01:11:51,979 --> 01:11:54,969
well

1580
01:12:02,420 --> 01:12:08,369
doesn't seem like it actually picked any

1581
01:12:05,609 --> 01:12:09,809
we gotta move on to world generations

1582
01:12:08,369 --> 01:12:12,479
sometime soon just so we have this this

1583
01:12:09,810 --> 01:12:16,080
routine so so broken

1584
01:12:12,479 --> 01:12:27,359
okay so here's this this guy right here

1585
01:12:16,079 --> 01:12:29,039
is the problem yes you can see here what

1586
01:12:27,359 --> 01:12:31,229
I kind of expected to happen before but

1587
01:12:29,039 --> 01:12:34,500
that didn't actually happen you can see

1588
01:12:31,229 --> 01:12:36,509
that we've got too many points like too

1589
01:12:34,500 --> 01:12:38,130
many lighting points so what I'm gonna

1590
01:12:36,510 --> 01:12:41,039
do is I'm just gonna up you know that

1591
01:12:38,130 --> 01:12:43,020
lighting count and again my goal here is

1592
01:12:41,039 --> 01:12:44,970
just to stress out the system so that we

1593
01:12:43,020 --> 01:12:49,410
have a good example of you know what

1594
01:12:44,970 --> 01:12:52,340
it's gonna look like so I'll just go

1595
01:12:49,409 --> 01:12:54,809
ahead and and 2x how much we've got here

1596
01:12:52,340 --> 01:12:57,090
again these are 1d textures so it's

1597
01:12:54,810 --> 01:12:59,580
really just not a problem in terms of

1598
01:12:57,090 --> 01:13:01,289
the storage or transmission of these per

1599
01:12:59,579 --> 01:13:07,979
frame the problem is just in the

1600
01:13:01,289 --> 01:13:09,449
lighting computation right so if we take

1601
01:13:07,979 --> 01:13:12,779
a look at what the lighting computed

1602
01:13:09,449 --> 01:13:14,220
here again it does pretty much exactly

1603
01:13:12,779 --> 01:13:16,079
what we want like all the lighting is

1604
01:13:14,220 --> 01:13:24,000
localized to where those lights were

1605
01:13:16,079 --> 01:13:26,430
actually yeah and you know this game

1606
01:13:24,000 --> 01:13:30,000
takes place at night and so I think this

1607
01:13:26,430 --> 01:13:32,970
is kind of right roughly what we want so

1608
01:13:30,000 --> 01:13:34,770
yeah let me see how much time we have

1609
01:13:32,970 --> 01:13:39,810
here so we've got about a half hour left

1610
01:13:34,770 --> 01:13:44,550
I think if I'm not mistaken so looking

1611
01:13:39,810 --> 01:13:45,930
at this we've got we can now sort of

1612
01:13:44,550 --> 01:13:50,850
build a list of the things that we're

1613
01:13:45,930 --> 01:13:55,350
gonna have to do to make make the final

1614
01:13:50,850 --> 01:13:56,789
lighting stuff and again like I said I'm

1615
01:13:55,350 --> 01:13:58,410
really pleased with the speed of

1616
01:13:56,789 --> 01:13:59,939
everything here it's just this is

1617
01:13:58,409 --> 01:14:04,649
running on a really good graphics card

1618
01:13:59,939 --> 01:14:07,079
so that fact that as you get in here you

1619
01:14:04,649 --> 01:14:09,569
I guess a couple things that aren't

1620
01:14:07,079 --> 01:14:11,519
obvious potentially that I'm just

1621
01:14:09,569 --> 01:14:12,929
knowing in my head that that we I'm not

1622
01:14:11,520 --> 01:14:15,659
singing loud

1623
01:14:12,929 --> 01:14:20,429
so I want you to take a look at the

1624
01:14:15,658 --> 01:14:21,960
frame rate up here and what you can see

1625
01:14:20,429 --> 01:14:29,579
is we're actually getting 60 frames a

1626
01:14:21,960 --> 01:14:33,448
second right now but if i zoom in we are

1627
01:14:29,579 --> 01:14:36,269
not getting 60 frames a second right and

1628
01:14:33,448 --> 01:14:38,879
so you may wonder what is going on there

1629
01:14:36,270 --> 01:14:40,679
right because nothing has changed about

1630
01:14:38,880 --> 01:14:43,289
the world when i zoom that like

1631
01:14:40,679 --> 01:14:46,500
nothing's changing the camera does not

1632
01:14:43,289 --> 01:14:49,289
do anything to the world when it's in

1633
01:14:46,500 --> 01:14:52,170
debug mode right when the camera moves

1634
01:14:49,289 --> 01:14:54,119
in in this mode things can come in and

1635
01:14:52,170 --> 01:14:55,380
out of the active simulation said and

1636
01:14:54,119 --> 01:14:58,738
all sorts of things could happen so

1637
01:14:55,380 --> 01:15:00,359
obviously moving the camera in this mode

1638
01:14:58,738 --> 01:15:02,218
we would expect to see frame rate

1639
01:15:00,359 --> 01:15:03,299
fluctuations potentially if we've got

1640
01:15:02,219 --> 01:15:04,560
something that's not working

1641
01:15:03,300 --> 01:15:07,920
particularly well or that's unoptimized

1642
01:15:04,560 --> 01:15:10,440
or whatever but looking at the game here

1643
01:15:07,920 --> 01:15:12,449
this camera is not affecting anything

1644
01:15:10,439 --> 01:15:15,719
the game is running exactly the same way

1645
01:15:12,448 --> 01:15:18,689
so why is it slowing down when i zoom in

1646
01:15:15,719 --> 01:15:20,158
and the answer is although I guess I

1647
01:15:18,689 --> 01:15:21,689
can't prove this immediately because we

1648
01:15:20,158 --> 01:15:30,539
didn't look into it but I'm assuming the

1649
01:15:21,689 --> 01:15:35,939
answer is this happens when the fill

1650
01:15:30,539 --> 01:15:40,158
rate right the the per pixel cost of the

1651
01:15:35,939 --> 01:15:45,539
GPU is something that is slowing down

1652
01:15:40,158 --> 01:15:48,539
the frame rate as i zoom in more pixels

1653
01:15:45,539 --> 01:15:52,529
on the screen are filled right when I'm

1654
01:15:48,539 --> 01:15:55,050
out here the whole world occupies very

1655
01:15:52,529 --> 01:15:57,658
few pixels right and the smaller the

1656
01:15:55,050 --> 01:16:00,960
less number of pixels it fills right

1657
01:15:57,658 --> 01:16:05,029
the less I am seeing the framerate hit

1658
01:16:00,960 --> 01:16:11,869
right if that makes sense

1659
01:16:05,029 --> 01:16:15,590
as i zoom in I get slower and slower

1660
01:16:11,869 --> 01:16:15,590
that's what I was seeing for

1661
01:16:18,479 --> 01:16:21,909
although I'll be honest that's not

1662
01:16:20,260 --> 01:16:25,440
happening now I'm not entirely sure why

1663
01:16:21,909 --> 01:16:25,439
it was happening for

1664
01:16:41,979 --> 01:16:45,689
let's take a look here maybe I'm wrong

1665
01:16:53,219 --> 01:17:01,359
so I'm assuming that peak message being

1666
01:16:56,829 --> 01:17:04,448
the thing that is taking all the time

1667
01:17:01,359 --> 01:17:07,389
would have to be because that's where

1668
01:17:04,448 --> 01:17:12,069
we're actually getting the OpenGL render

1669
01:17:07,390 --> 01:17:15,880
time where we're actually seeing that I

1670
01:17:12,069 --> 01:17:25,559
could be wrong about that let me run

1671
01:17:15,880 --> 01:17:28,719
this again and see so here we are

1672
01:17:25,560 --> 01:17:31,330
muster to debug camera can see we're

1673
01:17:28,719 --> 01:17:36,130
running at 20 frames a second here 16

1674
01:17:31,329 --> 01:17:38,289
frames a second here so that's

1675
01:17:36,130 --> 01:17:42,940
interesting peak message actually starts

1676
01:17:38,289 --> 01:17:46,439
taking more time later we must have a

1677
01:17:42,939 --> 01:17:46,439
bug in our windows message loop

1678
01:18:08,279 --> 01:18:12,199
I mean look at it eating up this time

1679
01:18:22,119 --> 01:18:25,529
and look at where it is now

1680
01:18:34,929 --> 01:18:47,859
hmm okay really really don't want to

1681
01:18:46,448 --> 01:18:49,359
know when I'm gonna find when I dig in

1682
01:18:47,859 --> 01:18:50,319
here I'm hoping that it's just hey

1683
01:18:49,359 --> 01:18:53,349
that's where the times getting

1684
01:18:50,319 --> 01:18:55,869
attributed to wall stuff is happening on

1685
01:18:53,350 --> 01:18:57,820
the other threads because of rendering

1686
01:18:55,869 --> 01:19:00,130
or something if this turns out to be

1687
01:18:57,819 --> 01:19:04,269
another one of those windows 10 Dinges

1688
01:19:00,130 --> 01:19:10,869
maneuvers I am just gonna be a sad sad

1689
01:19:04,270 --> 01:19:14,320
panda so if you remember we had this

1690
01:19:10,869 --> 01:19:16,448
problem where we were getting Windows 10

1691
01:19:14,319 --> 01:19:21,039
sending us a bunch of junk messages

1692
01:19:16,448 --> 01:19:23,678
right and we were doing stuff where we

1693
01:19:21,039 --> 01:19:26,140
would say okay if the thing we needed to

1694
01:19:23,679 --> 01:19:35,890
do was if we needed to skip a message

1695
01:19:26,140 --> 01:19:37,989
right then we would so I would like to

1696
01:19:35,890 --> 01:19:40,770
know which messages were getting here

1697
01:19:37,988 --> 01:19:44,619
where cuz you can see this is the block

1698
01:19:40,770 --> 01:19:48,130
the peek message block here this is

1699
01:19:44,619 --> 01:19:51,519
where we're hanging up behind sucking

1700
01:19:48,130 --> 01:19:54,429
down all this extra time and I have no

1701
01:19:51,520 --> 01:19:57,449
idea why now let me just double check

1702
01:19:54,429 --> 01:19:57,449
something real quick

1703
01:20:11,609 --> 01:20:16,689
as you can see we're holding pretty

1704
01:20:14,020 --> 01:20:21,450
stable in terms of memory usage let's

1705
01:20:16,689 --> 01:20:21,449
just double check that assumption

1706
01:20:29,659 --> 01:20:32,899
we're still

1707
01:20:37,619 --> 01:20:42,630
where's the resource monitor thinking me

1708
01:20:43,319 --> 01:20:49,059
here it is they always move these things

1709
01:20:47,590 --> 01:20:51,300
around I never know where everything

1710
01:20:49,060 --> 01:20:51,300
goes

1711
01:21:01,368 --> 01:21:10,948
so you can see here that we're pretty

1712
01:21:03,599 --> 01:21:13,559
stable we're not doing anything weird

1713
01:21:10,948 --> 01:21:22,428
right we're hardly taking any memory

1714
01:21:13,559 --> 01:21:27,079
really in terms of what we're touching

1715
01:21:22,429 --> 01:21:27,078
we do still do that weird thing where we

1716
01:21:28,908 --> 01:21:32,638
reserved a bunch of memory we don't use

1717
01:21:31,109 --> 01:21:34,018
which we should probably stop doing

1718
01:21:32,639 --> 01:21:38,909
because we don't really need to do it

1719
01:21:34,019 --> 01:21:40,289
anymore but you can see the stuff that's

1720
01:21:38,908 --> 01:21:42,799
in the working set is mostly not

1721
01:21:40,288 --> 01:21:42,800
changing

1722
01:21:54,470 --> 01:21:59,639
so yeah

1723
01:21:56,560 --> 01:21:59,639
[Music]

1724
01:22:12,979 --> 01:22:22,279
you know it could just be me but it sort

1725
01:22:17,210 --> 01:22:27,949
of seems like the more I do stuff in the

1726
01:22:22,279 --> 01:22:38,899
window the more peak message starts to

1727
01:22:27,949 --> 01:22:43,420
show up I'm not sure I managed to get it

1728
01:22:38,899 --> 01:22:43,420
all the way to the top before

1729
01:22:49,658 --> 01:22:54,518
but I would really like to know what was

1730
01:22:51,920 --> 01:22:54,519
going on there

1731
01:22:59,179 --> 01:23:03,170
see how it's crawling up again

1732
01:23:17,219 --> 01:23:20,029
see that

1733
01:23:20,520 --> 01:23:30,540
you see in this so with it up at the top

1734
01:23:28,020 --> 01:23:31,980
there I'm gonna go ahead and just set a

1735
01:23:30,539 --> 01:23:34,920
breakpoint in there and see if I can

1736
01:23:31,979 --> 01:23:36,449
figure out what is happening now

1737
01:23:34,920 --> 01:23:38,130
unfortunately we're not in debug mode so

1738
01:23:36,449 --> 01:23:39,779
I may need to change back to debug mode

1739
01:23:38,130 --> 01:23:41,640
at some point and disable the lighting

1740
01:23:39,779 --> 01:23:51,689
just so I can be able to like inspect

1741
01:23:41,640 --> 01:23:54,260
more stuff in the in the loop here but

1742
01:23:51,689 --> 01:23:54,259
we can see

1743
01:24:25,640 --> 01:24:41,510
I mean that doesn't really look like

1744
01:24:33,529 --> 01:24:45,019
it's hitting very often and you'll

1745
01:24:41,510 --> 01:24:58,789
notice now it got sent back down to the

1746
01:24:45,020 --> 01:25:02,710
bottom I wonder if there's some thing

1747
01:24:58,789 --> 01:25:02,710
getting done with our cue

1748
01:25:22,399 --> 01:25:27,799
so there we go I've gotten it back to

1749
01:25:24,649 --> 01:25:29,569
the top right holdin steady right there

1750
01:25:27,800 --> 01:25:34,329
at 25 percent of the time in the peek

1751
01:25:29,569 --> 01:25:36,039
message loop let's just alt tab alt tab

1752
01:25:34,329 --> 01:25:41,529
and it's gone

1753
01:25:36,039 --> 01:25:46,159
so all tabbing away must make windows

1754
01:25:41,529 --> 01:26:01,219
stop doing whatever spam it was spamming

1755
01:25:46,159 --> 01:26:05,109
us with right and then it wasn't as I

1756
01:26:01,220 --> 01:26:05,110
spamming us it could just be that it was

1757
01:26:06,100 --> 01:26:09,860
well in fact we know it's not spamming

1758
01:26:08,390 --> 01:26:12,470
us cuz they can look at what this must

1759
01:26:09,859 --> 01:26:14,710
mean so let's just go ahead and and look

1760
01:26:12,470 --> 01:26:17,500
at what we're talking about here so

1761
01:26:14,710 --> 01:26:21,529
here's where I entered the time block I

1762
01:26:17,500 --> 01:26:24,020
go through this loop skip index only

1763
01:26:21,529 --> 01:26:30,439
this many times right paint mouse move o

1764
01:26:24,020 --> 01:26:36,140
X 7 3 8 and ffffff right now we then

1765
01:26:30,439 --> 01:26:40,609
exit the timed block right so it's only

1766
01:26:36,140 --> 01:26:43,390
timing this thing in here not the outer

1767
01:26:40,609 --> 01:26:48,589
code like we're not counting any of this

1768
01:26:43,390 --> 01:26:55,300
operations at all and it's gonna tell us

1769
01:26:48,590 --> 01:26:55,300
the count so if we look in here right

1770
01:27:00,238 --> 01:27:05,559
if we look in here

1771
01:27:03,399 --> 01:27:07,750
when peak message shows up on here which

1772
01:27:05,560 --> 01:27:09,639
it doesn't at the moment but we can make

1773
01:27:07,750 --> 01:27:16,090
it show up I suppose or try to make it

1774
01:27:09,639 --> 01:27:18,940
show up there it is it has a 1 next to

1775
01:27:16,090 --> 01:27:23,679
it right so it means it only went

1776
01:27:18,939 --> 01:27:28,439
through that loop one time you know I'm

1777
01:27:23,679 --> 01:27:35,560
saying so it just went through here once

1778
01:27:28,439 --> 01:27:42,960
got the message and left which means it

1779
01:27:35,560 --> 01:27:42,960
didn't get a message at all right

1780
01:27:50,099 --> 01:27:56,989
yeah I mean it just didn't process any

1781
01:27:52,529 --> 01:27:59,340
messages so then if I come through here

1782
01:27:56,988 --> 01:28:01,738
on these frames that should be getting a

1783
01:27:59,340 --> 01:28:04,170
mouse message right so if I was to do

1784
01:28:01,738 --> 01:28:10,138
let's say right when it hits about here

1785
01:28:04,170 --> 01:28:12,029
I'll do a mouse message right and then I

1786
01:28:10,139 --> 01:28:17,310
pause I should be able to go back here

1787
01:28:12,029 --> 01:28:19,920
and see peek message being done with a -

1788
01:28:17,310 --> 01:28:24,289
and there you can so that's me clicking

1789
01:28:19,920 --> 01:28:24,289
the mouse right I got the message right

1790
01:28:26,149 --> 01:28:29,839
this is so cool

1791
01:28:32,448 --> 01:28:40,710
so we know that we're not even getting

1792
01:28:38,310 --> 01:28:42,929
any messages when this says one that's

1793
01:28:40,710 --> 01:28:44,520
just the exit condition so that's just

1794
01:28:42,929 --> 01:28:46,590
how long it took witness to tell us that

1795
01:28:44,520 --> 01:28:48,210
we don't have any messages the four

1796
01:28:46,590 --> 01:28:52,560
times or whatever we call peek message

1797
01:28:48,210 --> 01:28:54,868
right so let's go ahead and and just

1798
01:28:52,560 --> 01:28:58,760
spam this thing with tons and tons of

1799
01:28:54,868 --> 01:28:58,759
mouse movement like we were doing before

1800
01:29:15,599 --> 01:29:24,279
and now what we see is that peak message

1801
01:29:21,219 --> 01:29:30,309
is taking 30 some-odd percent of the

1802
01:29:24,279 --> 01:29:33,309
time right to do nothing so it's not

1803
01:29:30,309 --> 01:29:34,480
returning us a message it's saying we

1804
01:29:33,309 --> 01:29:38,230
didn't get one

1805
01:29:34,479 --> 01:29:42,879
and yet it's taking 34% 36% whatever at

1806
01:29:38,229 --> 01:29:47,939
the time to not do something so it must

1807
01:29:42,880 --> 01:29:47,940
be doing something during those calls

1808
01:29:48,238 --> 01:29:58,149
that you know we that we can't see right

1809
01:29:55,380 --> 01:30:01,889
now one thing we could do here is be

1810
01:29:58,149 --> 01:30:04,328
more specific about the profiling right

1811
01:30:01,889 --> 01:30:07,269
so what we could do here is say all

1812
01:30:04,328 --> 01:30:10,118
right let's put the time block in in the

1813
01:30:07,269 --> 01:30:12,539
actual loop so we should see it be

1814
01:30:10,118 --> 01:30:15,368
called you know four times or whatever

1815
01:30:12,538 --> 01:30:16,359
to do the four ranges so zero dope

1816
01:30:15,368 --> 01:30:17,558
they're gonna paint having picked a

1817
01:30:16,359 --> 01:30:22,089
mouse move Mouse from seven three eight

1818
01:30:17,559 --> 01:30:25,179
seven three eight dev ffs right so now

1819
01:30:22,090 --> 01:30:30,900
our default value of peek message while

1820
01:30:25,179 --> 01:30:34,719
we're running should be for all the time

1821
01:30:30,899 --> 01:30:37,509
right and hey it is that's what we would

1822
01:30:34,719 --> 01:30:42,300
expect so then I come in here and I and

1823
01:30:37,510 --> 01:30:46,170
I you know wangle around a bunch right

1824
01:30:42,300 --> 01:30:46,170
wranglin wranglin wang lin

1825
01:30:57,100 --> 01:31:03,020
like so and now we can see is yeah we've

1826
01:31:01,100 --> 01:31:06,770
we've worked peak message all the way to

1827
01:31:03,020 --> 01:31:11,990
four right and it's taking 26% of the

1828
01:31:06,770 --> 01:31:13,520
time so we've definitely verified that

1829
01:31:11,989 --> 01:31:16,519
we're just calling it four times for

1830
01:31:13,520 --> 01:31:21,170
each one of those ranges and calling it

1831
01:31:16,520 --> 01:31:25,670
those four times has caused us to have a

1832
01:31:21,170 --> 01:31:33,560
20 to 30% ding on our frame rate which

1833
01:31:25,670 --> 01:31:36,199
is huge right absolutely huge it's nuts

1834
01:31:33,560 --> 01:31:39,890
it's taking as much time as the graphics

1835
01:31:36,199 --> 01:31:43,309
is taking right like do all this GP

1836
01:31:39,890 --> 01:31:45,110
unoptimized GPU work we're doing it's

1837
01:31:43,310 --> 01:31:48,050
all taking the same amount of time is

1838
01:31:45,109 --> 01:31:55,699
the peak message basically if we just

1839
01:31:48,050 --> 01:31:58,510
wiggle the mouse enough look at that so

1840
01:31:55,699 --> 01:32:04,300
something is seriously messed up here

1841
01:31:58,510 --> 01:32:07,789
and I don't know what only this sort of

1842
01:32:04,300 --> 01:32:09,170
you know rocket science came over at

1843
01:32:07,789 --> 01:32:12,229
Microsoft that can't figure out how to

1844
01:32:09,170 --> 01:32:15,800
deliver a message and less than what was

1845
01:32:12,229 --> 01:32:18,579
that it's multiple milliseconds know

1846
01:32:15,800 --> 01:32:21,680
what's going on with that special sauce

1847
01:32:18,579 --> 01:32:24,189
I'm imagining that part of the problem

1848
01:32:21,680 --> 01:32:28,850
might be because we are trying to avoid

1849
01:32:24,189 --> 01:32:29,960
this bad situation from happening where

1850
01:32:28,850 --> 01:32:32,510
we're getting spammed with these

1851
01:32:29,960 --> 01:32:35,960
messages

1852
01:32:32,510 --> 01:32:39,110
maybe that is causing some kind of an

1853
01:32:35,960 --> 01:32:43,250
odd problem to occur I'm not sure what

1854
01:32:39,109 --> 01:32:46,549
we can do is we can test some theories

1855
01:32:43,250 --> 01:32:50,119
here right so if we put the time block

1856
01:32:46,550 --> 01:32:53,029
back where we had it before right so

1857
01:32:50,119 --> 01:32:54,800
we're timing the peek message on the

1858
01:32:53,029 --> 01:32:59,649
interior what I can do is say well

1859
01:32:54,800 --> 01:32:59,650
alright if I go ahead and do a

1860
01:33:01,939 --> 01:33:09,009
bracket around this and then just you

1861
01:33:05,479 --> 01:33:12,529
know say give me all the messages that

1862
01:33:09,010 --> 01:33:16,820
that you know you you might be inclined

1863
01:33:12,529 --> 01:33:22,489
to give me and maybe call this in in a

1864
01:33:16,819 --> 01:33:25,969
way that's more more consistent with

1865
01:33:22,489 --> 01:33:27,979
what it normally would do right so I

1866
01:33:25,970 --> 01:33:32,949
believe it's just yeah it's just zero

1867
01:33:27,979 --> 01:33:32,949
and zero here we'll we'll just do that

1868
01:33:36,970 --> 01:33:42,289
and this will allow me to test the sort

1869
01:33:40,670 --> 01:33:44,480
of more straightforward path see if

1870
01:33:42,289 --> 01:33:48,229
anything weird is happening about the

1871
01:33:44,479 --> 01:33:51,049
call pattern that we were using to try

1872
01:33:48,229 --> 01:33:57,500
and avoid spurious messages which we

1873
01:33:51,050 --> 01:33:59,989
were getting so here's the profile

1874
01:33:57,500 --> 01:34:01,819
there's peak message and what you can

1875
01:33:59,989 --> 01:34:03,949
see now is just moving the mouse will

1876
01:34:01,819 --> 01:34:05,869
cause a to the reason for that is we're

1877
01:34:03,949 --> 01:34:08,029
now getting mousemove messages so

1878
01:34:05,869 --> 01:34:09,949
mousemove messages we are not skipping

1879
01:34:08,029 --> 01:34:16,340
the mousemove message which we didn't

1880
01:34:09,949 --> 01:34:18,789
want and so let's see if the same thing

1881
01:34:16,340 --> 01:34:18,789
happens again

1882
01:34:38,229 --> 01:34:48,019
so it looks to me like you can't skip

1883
01:34:44,000 --> 01:34:52,340
those mousemove messages right it looks

1884
01:34:48,020 --> 01:34:55,370
to me like you something about calling

1885
01:34:52,340 --> 01:35:00,319
it that way is making Windows get very

1886
01:34:55,369 --> 01:35:01,849
confused about what it should do we had

1887
01:35:00,319 --> 01:35:03,769
changed it to this way based on a

1888
01:35:01,850 --> 01:35:06,440
suggestion from a viewer who was saying

1889
01:35:03,770 --> 01:35:09,590
maybe we could avoid getting a spurious

1890
01:35:06,439 --> 01:35:11,539
masters messages however I'm gonna go

1891
01:35:09,590 --> 01:35:13,489
ahead and say that that's maybe not such

1892
01:35:11,539 --> 01:35:16,100
a good idea after all based on what I

1893
01:35:13,489 --> 01:35:21,170
just saw now let's take a look and see

1894
01:35:16,100 --> 01:35:23,390
how accurate that actually is I'm gonna

1895
01:35:21,170 --> 01:35:26,000
go ahead in here and say well alright

1896
01:35:23,390 --> 01:35:28,940
let's rename all this path maybe let's

1897
01:35:26,000 --> 01:35:32,239
take out the WM mouse move or the WM

1898
01:35:28,939 --> 01:35:35,059
paint and see if it's one specific one

1899
01:35:32,239 --> 01:35:38,510
of these that is causing the problem

1900
01:35:35,060 --> 01:35:42,440
right so I've put us back to doing the

1901
01:35:38,510 --> 01:35:45,079
range based query and I'm gonna take a

1902
01:35:42,439 --> 01:35:48,229
look now to see if I come in here and

1903
01:35:45,079 --> 01:35:51,019
take a look at the profile I'm gonna

1904
01:35:48,229 --> 01:35:53,959
make sure that I can generate the same

1905
01:35:51,020 --> 01:35:56,570
bad case just by rapid mouse movements

1906
01:35:53,960 --> 01:35:58,130
and already it's you know doing sort of

1907
01:35:56,569 --> 01:36:00,109
worse than it was before with peak

1908
01:35:58,130 --> 01:36:03,380
message moving up to 25 percent of the

1909
01:36:00,109 --> 01:36:05,059
time we zoom out and get it to take up

1910
01:36:03,380 --> 01:36:06,980
even more percent of the time right a

1911
01:36:05,060 --> 01:36:09,830
ridiculous number of cycles here being

1912
01:36:06,979 --> 01:36:11,000
taken by peak message so let's go ahead

1913
01:36:09,829 --> 01:36:14,569
I mean you're gonna get that it's

1914
01:36:11,000 --> 01:36:16,880
that's a another swear yeah all

1915
01:36:14,569 --> 01:36:18,889
right one more episode of swears in it

1916
01:36:16,880 --> 01:36:20,539
got it like bleep you need to let me a

1917
01:36:18,890 --> 01:36:22,460
little sensor somebody's just feel to

1918
01:36:20,539 --> 01:36:27,739
push to the like of that little button

1919
01:36:22,460 --> 01:36:29,840
that's like um I grew up to like six now

1920
01:36:27,739 --> 01:36:31,909
or something like that six episodes that

1921
01:36:29,840 --> 01:36:35,060
have curses in it something like that

1922
01:36:31,909 --> 01:36:36,970
it's not great I mean compared to the

1923
01:36:35,060 --> 01:36:39,770
amount that I swear normally it's

1924
01:36:36,970 --> 01:36:42,530
fantastic but you know what do you do

1925
01:36:39,770 --> 01:36:47,120
anyway so look at that it's it's

1926
01:36:42,529 --> 01:36:50,630
ridiculous right it's it's I mean I

1927
01:36:47,119 --> 01:36:52,939
don't know how that's even remotely

1928
01:36:50,630 --> 01:36:55,670
justifiable amount of time to be spend d

1929
01:36:52,939 --> 01:36:59,419
queueing a message and more specifically

1930
01:36:55,670 --> 01:37:01,460
not D queueing a message that's how long

1931
01:36:59,420 --> 01:37:04,789
it's taking to tell us it doesn't have

1932
01:37:01,460 --> 01:37:06,619
anything right

1933
01:37:04,789 --> 01:37:11,840
Microsoft window is the only thing that

1934
01:37:06,619 --> 01:37:17,359
can take you know 19 million cycles to

1935
01:37:11,840 --> 01:37:19,640
say I don't have anything for you so we

1936
01:37:17,359 --> 01:37:21,019
need to address that again now that I

1937
01:37:19,640 --> 01:37:25,869
know that I can produce that again with

1938
01:37:21,020 --> 01:37:25,870
reliably let's comment out the paint

1939
01:37:43,670 --> 01:37:49,220
looks like peak message is slowly moving

1940
01:37:46,100 --> 01:37:51,320
up exactly as you would expect and the

1941
01:37:49,220 --> 01:37:53,300
fact that it seems to be triggered by

1942
01:37:51,319 --> 01:37:55,519
moving the mouse does suggest that you

1943
01:37:53,300 --> 01:37:58,340
know Mouse move is an obvious sort of

1944
01:37:55,520 --> 01:38:01,070
potential culprit let's go ahead and

1945
01:37:58,340 --> 01:38:04,930
take it out the mouse move so now we

1946
01:38:01,069 --> 01:38:09,549
will be sampling mouse move messages

1947
01:38:04,930 --> 01:38:09,550
oops in the actual loop here

1948
01:38:24,460 --> 01:38:41,050
and looks to me like that is indeed the

1949
01:38:30,819 --> 01:38:48,279
culprit so as I kind of yeah as I kind

1950
01:38:41,050 --> 01:38:50,440
of suspected you can't leave those WMS

1951
01:38:48,279 --> 01:38:51,009
moves in the queue so paint can be

1952
01:38:50,439 --> 01:38:55,239
skipped

1953
01:38:51,010 --> 01:38:59,579
Oh x7 3:8 can be skipped

1954
01:38:55,239 --> 01:38:59,579
but mousemove can't miss get

1955
01:40:03,420 --> 01:40:09,850
so that you know not exactly what I

1956
01:40:08,619 --> 01:40:12,760
wanted to do at the end of today's

1957
01:40:09,850 --> 01:40:14,350
episode but definitely good that we

1958
01:40:12,760 --> 01:40:16,000
found that and I guess what I would say

1959
01:40:14,350 --> 01:40:17,350
just to reinforce something that I said

1960
01:40:16,000 --> 01:40:19,239
originally back when we built the

1961
01:40:17,350 --> 01:40:21,880
profiler what I originally built the

1962
01:40:19,239 --> 01:40:23,500
profiler I was actually asked the

1963
01:40:21,880 --> 01:40:26,050
question specifically why was building

1964
01:40:23,500 --> 01:40:27,369
the profiler and the debug system when I

1965
01:40:26,050 --> 01:40:30,159
didn't really have a need from the time

1966
01:40:27,369 --> 01:40:33,159
and the answer is you know specifically

1967
01:40:30,159 --> 01:40:35,889
this that is an example of a really

1968
01:40:33,159 --> 01:40:37,510
really problematic scenario if we had

1969
01:40:35,890 --> 01:40:39,160
started to do some profiling on

1970
01:40:37,510 --> 01:40:41,530
particular pieces of code or just looked

1971
01:40:39,159 --> 01:40:42,909
at a framerate counter and saw that we

1972
01:40:41,529 --> 01:40:44,559
were getting these slow frame rates

1973
01:40:42,909 --> 01:40:46,989
there we would have jumped to the

1974
01:40:44,560 --> 01:40:48,580
conclusion that it was us and we would

1975
01:40:46,989 --> 01:40:51,760
have been weirded out by this or maybe

1976
01:40:48,579 --> 01:40:53,920
never even known it at all but because I

1977
01:40:51,760 --> 01:40:56,170
happen to have that profiler running all

1978
01:40:53,920 --> 01:40:58,600
the time it makes it easy for me to see

1979
01:40:56,170 --> 01:41:00,579
that it's not our code that's causing

1980
01:40:58,600 --> 01:41:02,140
the problem it's we knows that's causing

1981
01:41:00,579 --> 01:41:04,180
the problem and we could quickly

1982
01:41:02,140 --> 01:41:06,250
identify the fact that that where that

1983
01:41:04,180 --> 01:41:07,750
problem was and how to mitigate it so

1984
01:41:06,250 --> 01:41:10,239
now our frame rate is not affected by us

1985
01:41:07,750 --> 01:41:14,260
we can go back to using those frame rate

1986
01:41:10,239 --> 01:41:16,719
measurements more reliably now why this

1987
01:41:14,260 --> 01:41:18,640
is happening I have no idea maybe

1988
01:41:16,720 --> 01:41:21,880
someone who works for Microsoft can go

1989
01:41:18,640 --> 01:41:24,660
heaven help you go into the code for

1990
01:41:21,880 --> 01:41:30,760
peak message and find out what kind of

1991
01:41:24,659 --> 01:41:35,199
special let's let's just say what what

1992
01:41:30,760 --> 01:41:37,480
kind of remarkable procedures are

1993
01:41:35,199 --> 01:41:39,260
occurring in there that are causing it

1994
01:41:37,479 --> 01:41:42,018
to take five million cycles per call

1995
01:41:39,260 --> 01:41:44,119
to tell us that nothing happened and if

1996
01:41:42,019 --> 01:41:47,300
we ask for our mouths move messages all

1997
01:41:44,118 --> 01:41:48,859
of a sudden that's fine I'm guessing

1998
01:41:47,300 --> 01:41:51,409
that something happens like there's a

1999
01:41:48,859 --> 01:41:54,288
mouse move q and if you don't drain the

2000
01:41:51,408 --> 01:41:55,908
mouse move Q it fills up to a point

2001
01:41:54,288 --> 01:41:58,038
where it causes a spillover scenario

2002
01:41:55,908 --> 01:42:00,379
that's somehow slow I don't really know

2003
01:41:58,038 --> 01:42:02,118
I'm really making stuff up at this point

2004
01:42:00,380 --> 01:42:05,840
but it kind of looks like something like

2005
01:42:02,118 --> 01:42:07,969
that is happening now I'm concerned I'm

2006
01:42:05,840 --> 01:42:10,869
worried about what might be happening

2007
01:42:07,969 --> 01:42:13,578
here and so what I would also like to do

2008
01:42:10,868 --> 01:42:15,979
is I'd like to try and check to see

2009
01:42:13,578 --> 01:42:20,630
whether a similar scenario can happen

2010
01:42:15,979 --> 01:42:22,339
with paint so I'm gonna go ahead and try

2011
01:42:20,630 --> 01:42:24,800
to trigger lots and lots of paint

2012
01:42:22,340 --> 01:42:27,159
messages and see if the same thing

2013
01:42:24,800 --> 01:42:27,159
happens

2014
01:43:04,719 --> 01:43:11,390
so it doesn't look to me like paint has

2015
01:43:08,659 --> 01:43:14,029
the same kind of drawback there

2016
01:43:11,390 --> 01:43:18,050
I may just not be able to generate

2017
01:43:14,029 --> 01:43:20,000
enough paint messages I'm not sure it's

2018
01:43:18,050 --> 01:43:21,590
hard to know how many paint messages are

2019
01:43:20,000 --> 01:43:23,960
actually being generated by various

2020
01:43:21,590 --> 01:43:26,270
mouse movements you can see that paint

2021
01:43:23,960 --> 01:43:28,310
messages are sort of would be generated

2022
01:43:26,270 --> 01:43:29,480
here I'm pretty sure and I think they're

2023
01:43:28,310 --> 01:43:31,160
generated all through this whole

2024
01:43:29,479 --> 01:43:34,639
procedure

2025
01:43:31,159 --> 01:43:36,979
I believe anyway but I I mean I couldn't

2026
01:43:34,640 --> 01:43:38,719
tell you for sure the other thing is

2027
01:43:36,979 --> 01:43:43,849
paint messages may be getting dispatched

2028
01:43:38,719 --> 01:43:46,449
directly to the window on drag so it may

2029
01:43:43,850 --> 01:43:50,930
be that they are getting handled anyway

2030
01:43:46,449 --> 01:43:58,819
I'm not sure let me let me go ahead and

2031
01:43:50,930 --> 01:44:00,610
see to what extent that's true yeah so

2032
01:43:58,819 --> 01:44:05,988
you can see that those are getting

2033
01:44:00,609 --> 01:44:11,679
dispatched directly in this case so if I

2034
01:44:05,988 --> 01:44:11,679
go ahead and move up here like this

2035
01:44:18,340 --> 01:44:22,670
yeah you can see they get dispatched

2036
01:44:20,389 --> 01:44:25,429
directly so the fact that we're not

2037
01:44:22,670 --> 01:44:30,559
asking for them is not really changing

2038
01:44:25,429 --> 01:44:33,649
the situation pretty much at all and in

2039
01:44:30,559 --> 01:44:35,119
fact I'm not sure why yeah again I think

2040
01:44:33,649 --> 01:44:36,558
this may have just been a bad suggestion

2041
01:44:35,118 --> 01:44:39,649
from the person who suggested that this

2042
01:44:36,559 --> 01:44:42,679
was the case because I think they were

2043
01:44:39,649 --> 01:44:45,259
just wrong about what happens with like

2044
01:44:42,679 --> 01:44:46,880
the paint generation because as you saw

2045
01:44:45,260 --> 01:44:50,030
they get dispatch directly to the window

2046
01:44:46,880 --> 01:44:52,400
anyway and I'm pretty sure that that

2047
01:44:50,029 --> 01:44:55,189
they don't actually get generated in any

2048
01:44:52,399 --> 01:44:56,779
other circumstance right so if you look

2049
01:44:55,189 --> 01:45:01,488
at what's happening here you know we're

2050
01:44:56,779 --> 01:45:03,078
not getting we're not getting any

2051
01:45:01,488 --> 01:45:05,078
messages till the circumstances where we

2052
01:45:03,078 --> 01:45:07,698
were where we were getting the messages

2053
01:45:05,078 --> 01:45:09,828
so I think that might just be bad right

2054
01:45:07,698 --> 01:45:16,908
that might have just been not not the

2055
01:45:09,828 --> 01:45:18,319
right thing to do so I I guess what I

2056
01:45:16,908 --> 01:45:24,618
would say is I still don't know about

2057
01:45:18,319 --> 01:45:27,759
this though this 7:38 does seem like a

2058
01:45:24,618 --> 01:45:27,759
bad situation

2059
01:45:32,868 --> 01:45:36,979
so we may keep skipping that one I'm

2060
01:45:35,329 --> 01:45:40,029
going to go ahead and see what happens

2061
01:45:36,979 --> 01:45:40,029
if I turn that off

2062
01:45:53,100 --> 01:45:56,550
and I don't remember the exact

2063
01:45:55,079 --> 01:45:59,369
circumstances under which we were

2064
01:45:56,550 --> 01:46:08,970
getting lots of these messages

2065
01:45:59,369 --> 01:46:09,359
maybe they fixed that so it's hard to

2066
01:46:08,970 --> 01:46:12,710
say

2067
01:46:09,359 --> 01:46:12,710
I really can't test that one

2068
01:47:01,939 --> 01:47:05,119
all right

2069
01:47:11,219 --> 01:47:20,649
let's go ahead to the Q&amp;A says did you

2070
01:47:19,029 --> 01:47:24,609
notice that the annotation search

2071
01:47:20,649 --> 01:47:29,589
doesn't seem to be working anymore no I

2072
01:47:24,609 --> 01:47:31,479
did not know that I generally don't test

2073
01:47:29,590 --> 01:47:36,369
it or anything because I don't maintain

2074
01:47:31,479 --> 01:47:41,169
it but I agree with you that does not

2075
01:47:36,368 --> 01:47:42,880
see any working at all if someone could

2076
01:47:41,170 --> 01:47:44,440
remind me well you know what no you

2077
01:47:42,880 --> 01:47:45,039
don't have to because I can just do it

2078
01:47:44,439 --> 01:47:47,908
right here

2079
01:47:45,039 --> 01:47:47,908
I will send a mail

2080
01:48:26,779 --> 01:48:32,880
all right

2081
01:48:28,409 --> 01:48:34,229
I send me about that yeah I don't know

2082
01:48:32,880 --> 01:48:39,119
anything about this system obviously

2083
01:48:34,229 --> 01:48:42,259
this is just the hard work of both mid

2084
01:48:39,119 --> 01:48:45,300
blow and the folks at handmade Network

2085
01:48:42,260 --> 01:48:49,470
in terms of the hosting of it I would

2086
01:48:45,300 --> 01:48:51,510
suspect I know that the way that this

2087
01:48:49,470 --> 01:48:54,539
works is mid blow wrote a system for

2088
01:48:51,510 --> 01:48:56,480
doing annotations and it gets like

2089
01:48:54,539 --> 01:49:01,140
munched into the handmade Network

2090
01:48:56,479 --> 01:49:02,929
something and probably in that munging

2091
01:49:01,140 --> 01:49:06,420
something has gotten lost in translation

2092
01:49:02,930 --> 01:49:09,720
it would would be my guess so

2093
01:49:06,420 --> 01:49:12,149
such that the search stops working I

2094
01:49:09,720 --> 01:49:14,220
don't really know but that'd be my guess

2095
01:49:12,149 --> 01:49:15,809
so hopefully it's something simple that

2096
01:49:14,220 --> 01:49:19,070
wouldn't that that's not going to cause

2097
01:49:15,810 --> 01:49:19,070
them a huge headache I don't know

2098
01:49:31,479 --> 01:49:34,599
Khaos come why do you call peak message

2099
01:49:33,460 --> 01:49:35,800
once for each element the skip list

2100
01:49:34,600 --> 01:49:37,390
instead of retrieving the message once

2101
01:49:35,800 --> 01:49:39,340
if any and comparing it against the

2102
01:49:37,390 --> 01:49:41,320
message you want skip the reason for

2103
01:49:39,340 --> 01:49:43,930
that is because what we were trying to

2104
01:49:41,319 --> 01:49:47,739
avoid was Windows generating messages on

2105
01:49:43,930 --> 01:49:49,869
demand so the way that Windows works is

2106
01:49:47,739 --> 01:49:52,630
that some messages get generated

2107
01:49:49,869 --> 01:49:53,769
apparently when you ask for them and if

2108
01:49:52,630 --> 01:49:58,300
you don't ask for them they don't get

2109
01:49:53,770 --> 01:50:00,640
generated right and so we were trying to

2110
01:49:58,300 --> 01:50:02,380
avoid ever asking for the things in the

2111
01:50:00,640 --> 01:50:03,430
Skip list we weren't trying to skip them

2112
01:50:02,380 --> 01:50:05,199
because we don't actually need to skip

2113
01:50:03,430 --> 01:50:07,119
them we're okay if we get it mouths me

2114
01:50:05,199 --> 01:50:08,289
message back it's fine we'll just ignore

2115
01:50:07,119 --> 01:50:09,909
it

2116
01:50:08,289 --> 01:50:11,109
so that was what we're trying to do

2117
01:50:09,909 --> 01:50:16,149
there but I think that may have just

2118
01:50:11,109 --> 01:50:18,989
been incorrect advice on the part of the

2119
01:50:16,149 --> 01:50:18,989
people who suggested it

2120
01:50:26,969 --> 01:50:30,448
possibly so you've got that messages

2121
01:50:28,800 --> 01:50:31,650
while debugging with the NVIDIA GPU dev

2122
01:50:30,448 --> 01:50:33,769
thinking correct

2123
01:50:31,649 --> 01:50:39,539
thank you for refreshing my memory yes

2124
01:50:33,770 --> 01:50:42,380
that is exactly what was happening I'm

2125
01:50:39,539 --> 01:50:42,380
gonna add that in here

2126
01:50:57,479 --> 01:51:02,459
so let's see if that is actually what's

2127
01:50:59,800 --> 01:51:02,460
going on here

2128
01:51:46,469 --> 01:52:01,489
where's my where's my my hood for some

2129
01:51:57,689 --> 01:52:01,488
reason my fonts are not here

2130
01:52:08,210 --> 01:52:17,119
that's weird I would say that makes a

2131
01:52:14,390 --> 01:52:37,220
little harder to test but I guess it's

2132
01:52:17,119 --> 01:52:38,930
not impossible still I'll just do so

2133
01:52:37,220 --> 01:52:42,010
I'll just go ahead and break on the

2134
01:52:38,930 --> 01:52:42,010
situation where

2135
01:52:53,340 --> 01:52:58,119
wait a minute

2136
01:52:55,619 --> 01:53:02,439
sir no way to actually oh right

2137
01:52:58,119 --> 01:53:14,050
mmm it's not gonna like that

2138
01:53:02,439 --> 01:53:17,619
so okay what I could do is say I know a

2139
01:53:14,050 --> 01:53:36,970
cheap maneuver but the optimizer won't

2140
01:53:17,619 --> 01:53:44,430
see it coming maybe maybe it will try

2141
01:53:36,970 --> 01:53:48,720
one more time I'm not having any luck

2142
01:53:44,430 --> 01:53:48,720
all right fine

2143
01:54:03,130 --> 01:54:17,150
so I am getting that message even

2144
01:54:06,170 --> 01:54:19,329
without n site running which is kind of

2145
01:54:17,149 --> 01:54:19,329
interesting

2146
01:54:25,319 --> 01:54:33,179
I wish we knew who sent it to us yes so

2147
01:54:30,179 --> 01:54:44,670
this is correctly preventing that from

2148
01:54:33,179 --> 01:54:48,090
occurring right so this is not really

2149
01:54:44,670 --> 01:54:51,859
true but it does look like it's not

2150
01:54:48,090 --> 01:54:51,860
creating enough of a problem I guess

2151
01:55:33,539 --> 01:55:39,869
oh I heard you've talked about already

2152
01:55:38,760 --> 01:55:41,579
but do you have any comments you would

2153
01:55:39,869 --> 01:55:43,470
like to make about melt inspector on the

2154
01:55:41,579 --> 01:55:44,789
record I missed the pre stream yeah I

2155
01:55:43,470 --> 01:55:45,560
could summarize so I send the pre stream

2156
01:55:44,789 --> 01:55:52,710
really easily

2157
01:55:45,560 --> 01:55:56,820
basically my pain is that currently if a

2158
01:55:52,710 --> 01:56:02,640
machine is running an executable of any

2159
01:55:56,819 --> 01:56:08,909
kind really JavaScript x64 native

2160
01:56:02,640 --> 01:56:10,710
whatever it's an insecure machine the

2161
01:56:08,909 --> 01:56:12,840
only way you can have security is to

2162
01:56:10,710 --> 01:56:14,609
actually know that all of those things

2163
01:56:12,840 --> 01:56:16,920
were written by you or people you trust

2164
01:56:14,609 --> 01:56:23,609
and that they don't that they weren't

2165
01:56:16,920 --> 01:56:26,579
trying to compromise your machine so the

2166
01:56:23,609 --> 01:56:31,259
current state of affairs is that I don't

2167
01:56:26,579 --> 01:56:34,439
know that meltdown or Spectre really

2168
01:56:31,260 --> 01:56:38,940
change that at all because they're just

2169
01:56:34,439 --> 01:56:42,359
yet another way to do some slight you

2170
01:56:38,939 --> 01:56:43,529
know compromising of something but you

2171
01:56:42,359 --> 01:56:45,899
already could have done that

2172
01:56:43,529 --> 01:56:48,659
compromising you know thousands of other

2173
01:56:45,899 --> 01:56:56,629
ways if you are running any kind of code

2174
01:56:48,659 --> 01:56:59,279
on a machine so I just see them as as

2175
01:56:56,630 --> 01:57:01,590
bugs that need to get fixed in the

2176
01:56:59,279 --> 01:57:04,199
hardware because we do want the hardware

2177
01:57:01,590 --> 01:57:07,520
to eventually be stable and secure I

2178
01:57:04,199 --> 01:57:10,050
don't see them as changing the software

2179
01:57:07,520 --> 01:57:13,680
landscape at all because the software is

2180
01:57:10,050 --> 01:57:17,610
currently insecure and simply remain so

2181
01:57:13,680 --> 01:57:19,530
after meltdown inspector if I thought

2182
01:57:17,609 --> 01:57:21,210
there was any way to secure a machine

2183
01:57:19,529 --> 01:57:23,939
that was running foreign executables on

2184
01:57:21,210 --> 01:57:25,350
it then these would be concerning

2185
01:57:23,939 --> 01:57:28,679
because they would be the first ways

2186
01:57:25,350 --> 01:57:30,720
that people could have done something to

2187
01:57:28,680 --> 01:57:32,369
that machine but that is just simply so

2188
01:57:30,720 --> 01:57:33,930
far from the case that I think it's kind

2189
01:57:32,369 --> 01:57:37,979
of laughable to think that they change

2190
01:57:33,930 --> 01:57:40,260
the landscape at all I mean I just

2191
01:57:37,979 --> 01:57:42,059
assumed that like I assume the handmade

2192
01:57:40,260 --> 01:57:43,949
hero machine is easily compromisable

2193
01:57:42,060 --> 01:57:46,350
because you know it's got steam

2194
01:57:43,949 --> 01:57:47,460
installed on it and people can pay

2195
01:57:46,350 --> 01:57:50,400
hundred dollars in post next

2196
01:57:47,460 --> 01:57:52,800
on Steam and I download it and I run it

2197
01:57:50,399 --> 01:57:55,759
and it's my machine right I'm just

2198
01:57:52,800 --> 01:57:57,900
assuming that can easily happen right I

2199
01:57:55,760 --> 01:57:59,190
assume that if I run a web browser on a

2200
01:57:57,899 --> 01:58:02,250
machine it can easily be compromised

2201
01:57:59,189 --> 01:58:06,509
right I just assume that

2202
01:58:02,250 --> 01:58:08,310
so those assumptions don't change in the

2203
01:58:06,510 --> 01:58:09,690
face of meltdown inspector so I don't

2204
01:58:08,310 --> 01:58:14,610
that's why I'm not particularly

2205
01:58:09,689 --> 01:58:15,960
concerned about them if we got to a

2206
01:58:14,609 --> 01:58:18,589
world where that wasn't true then I

2207
01:58:15,960 --> 01:58:21,869
think they would be more concerning

2208
01:58:18,590 --> 01:58:23,190
Dragoon x6 what is your opinion what in

2209
01:58:21,869 --> 01:58:26,069
your opinion is the biggest lie myth

2210
01:58:23,189 --> 01:58:28,289
most programmers follow or believe in I

2211
01:58:26,069 --> 01:58:31,920
think I would say that generally it's

2212
01:58:28,289 --> 01:58:35,550
just that there's such a thing as like

2213
01:58:31,920 --> 01:58:41,670
clean or elegant code that isn't about

2214
01:58:35,550 --> 01:58:43,650
measuring something in the code right so

2215
01:58:41,670 --> 01:58:47,279
that seems to be kind of the root of

2216
01:58:43,649 --> 01:58:49,019
most bad things in programming it's it's

2217
01:58:47,279 --> 01:58:51,840
people who think there is something

2218
01:58:49,020 --> 01:58:54,540
about code that makes it good that is

2219
01:58:51,840 --> 01:59:00,420
not something they have measured or

2220
01:58:54,539 --> 01:59:03,090
tried to measure and that drives a lot

2221
01:59:00,420 --> 01:59:05,850
of the stupidity around programming

2222
01:59:03,090 --> 01:59:09,630
practices that are counterproductive

2223
01:59:05,850 --> 01:59:11,400
what makes code good is the total time

2224
01:59:09,630 --> 01:59:15,090
of maintenance on that code from

2225
01:59:11,399 --> 01:59:17,670
creation to shipment to updating right

2226
01:59:15,090 --> 01:59:21,029
and if you're not measuring that and

2227
01:59:17,670 --> 01:59:24,810
tracking it back to actual persons then

2228
01:59:21,029 --> 01:59:29,909
you're just kind of making stuff up

2229
01:59:24,810 --> 01:59:32,039
right to make yourself feel good and so

2230
01:59:29,909 --> 01:59:33,960
a lot of what I see that's talked about

2231
01:59:32,039 --> 01:59:36,269
in terms of when people say things like

2232
01:59:33,960 --> 01:59:39,000
best practices or what they look for in

2233
01:59:36,270 --> 01:59:42,270
code reviews are things that they

2234
01:59:39,000 --> 01:59:44,520
actually have never really done any due

2235
01:59:42,270 --> 01:59:51,090
diligence to determine are actually

2236
01:59:44,520 --> 01:59:52,680
effective and also furthermore what is

2237
01:59:51,090 --> 01:59:55,199
or is not an effective programming

2238
01:59:52,680 --> 01:59:57,860
practice is not universal it depends on

2239
01:59:55,199 --> 02:00:00,479
the programmers who are deploying it

2240
01:59:57,859 --> 02:00:02,399
programmers make different kinds of

2241
02:00:00,479 --> 02:00:04,979
mistakes I will make different mistakes

2242
02:00:02,399 --> 02:00:06,929
than you will some programmers make more

2243
02:00:04,979 --> 02:00:09,389
mistakes than others some teams make

2244
02:00:06,930 --> 02:00:11,490
more mistakes than others things that

2245
02:00:09,390 --> 02:00:13,710
you're doing encode to help prevent make

2246
02:00:11,489 --> 02:00:15,479
mistakes had better be targeted at the

2247
02:00:13,710 --> 02:00:17,100
people who are actually maintaining that

2248
02:00:15,479 --> 02:00:19,049
code otherwise they are a waste of time

2249
02:00:17,100 --> 02:00:24,740
guarding against mistakes your team

2250
02:00:19,050 --> 02:00:28,560
won't make is a waste of time right and

2251
02:00:24,739 --> 02:00:32,579
so talking about a programming practice

2252
02:00:28,560 --> 02:00:34,710
as if it is universally good is often

2253
02:00:32,579 --> 02:00:36,720
also misguided because usually things

2254
02:00:34,710 --> 02:00:38,220
are only locally good there are probably

2255
02:00:36,720 --> 02:00:40,530
some program practice that extend to all

2256
02:00:38,220 --> 02:00:42,390
programmers however a lot of programming

2257
02:00:40,529 --> 02:00:45,479
practices are only extend to some

2258
02:00:42,390 --> 02:00:47,820
programmers a subset of programmers and

2259
02:00:45,479 --> 02:00:50,459
not knowing which programmer you are or

2260
02:00:47,819 --> 02:00:52,079
your team is is also going to mean you

2261
02:00:50,460 --> 02:00:53,310
can't really make any kinds of

2262
02:00:52,079 --> 02:01:05,760
statements about what you should or

2263
02:00:53,310 --> 02:01:07,620
should not be looking for hey Casey June

2264
02:01:05,760 --> 02:01:10,909
about SF ml if so what is your opinion

2265
02:01:07,619 --> 02:01:10,909
about it no I do not

2266
02:01:15,630 --> 02:01:20,170
nice field Oh what do you mean mean you

2267
02:01:17,889 --> 02:01:22,150
mentioned browser security is a concern

2268
02:01:20,170 --> 02:01:23,618
these days should the OS be secure

2269
02:01:22,149 --> 02:01:28,359
instead of the browser or something like

2270
02:01:23,618 --> 02:01:30,488
that so in my opinion I don't think

2271
02:01:28,359 --> 02:01:32,439
security would be particularly difficult

2272
02:01:30,488 --> 02:01:35,799
to achieve actually in practice or

2273
02:01:32,439 --> 02:01:37,388
rather I don't think a fairly high level

2274
02:01:35,800 --> 02:01:39,159
of security that's much higher than what

2275
02:01:37,389 --> 02:01:45,010
we currently can achieve would be

2276
02:01:39,158 --> 02:01:46,210
difficult in practice if you took all of

2277
02:01:45,010 --> 02:01:47,829
what we're doing right now and

2278
02:01:46,210 --> 02:01:51,130
completely threw it out and just said

2279
02:01:47,828 --> 02:01:53,408
this is all wrong and went back to the

2280
02:01:51,130 --> 02:01:56,920
drawing board and said the goal of us

2281
02:01:53,408 --> 02:01:59,769
creating a computer is to have it run

2282
02:01:56,920 --> 02:02:02,859
one thing at a time and that thing can

2283
02:01:59,770 --> 02:02:06,610
only you know communicate effectively by

2284
02:02:02,859 --> 02:02:08,618
like packets sent back and forth then I

2285
02:02:06,609 --> 02:02:11,529
think we could achieve a much more same

2286
02:02:08,618 --> 02:02:14,198
level of security right the concept that

2287
02:02:11,529 --> 02:02:16,809
when I run a game on my machine then it

2288
02:02:14,198 --> 02:02:19,569
can even see or think about the other

2289
02:02:16,809 --> 02:02:22,029
things on the machine at all is nuts and

2290
02:02:19,569 --> 02:02:26,288
yet that's just the standard behavior

2291
02:02:22,029 --> 02:02:28,328
right there isn't a single operating

2292
02:02:26,288 --> 02:02:32,139
system that I know of right now that

2293
02:02:28,328 --> 02:02:34,118
even considers it the important to make

2294
02:02:32,139 --> 02:02:37,000
those kinds of hard deletions right but

2295
02:02:34,118 --> 02:02:38,889
they do so yeah of course like the

2296
02:02:37,000 --> 02:02:41,288
concept that I have a web browser and

2297
02:02:38,889 --> 02:02:43,659
the web browser opens multiple tabs and

2298
02:02:41,288 --> 02:02:46,448
those tabs are all running in the same

2299
02:02:43,658 --> 02:02:47,859
you know conceptual space to a large

2300
02:02:46,448 --> 02:02:49,509
extent is nuts

2301
02:02:47,859 --> 02:02:50,828
and yeah browser manufacturers are doing

2302
02:02:49,510 --> 02:02:52,630
a better job now if at least spinning

2303
02:02:50,828 --> 02:02:54,759
them to separate processes but the point

2304
02:02:52,630 --> 02:02:56,889
is why are those things even considered

2305
02:02:54,760 --> 02:02:59,230
in the same space why do they even have

2306
02:02:56,889 --> 02:03:02,078
access to the same things why are they

2307
02:02:59,229 --> 02:03:04,959
even seeing the same hard drive right it

2308
02:03:02,078 --> 02:03:06,429
doesn't make sense to me so I think the

2309
02:03:04,960 --> 02:03:08,260
way you would achieve real security is

2310
02:03:06,429 --> 02:03:10,359
the same way I achieve it some

2311
02:03:08,260 --> 02:03:11,829
Magisterium practice I have a machine

2312
02:03:10,359 --> 02:03:13,569
for development and a machine for

2313
02:03:11,828 --> 02:03:16,179
browsing the web and never the two shall

2314
02:03:13,569 --> 02:03:18,038
meet I transfer data between them in the

2315
02:03:16,179 --> 02:03:19,960
most secure ways I can possibly think of

2316
02:03:18,038 --> 02:03:23,319
but that's just how machines should have

2317
02:03:19,960 --> 02:03:25,538
been architected right like they're you

2318
02:03:23,319 --> 02:03:27,210
should be able to run a machine such

2319
02:03:25,538 --> 02:03:29,488
that it's essentially running only

2320
02:03:27,210 --> 02:03:31,500
thing and you know let's say I put two

2321
02:03:29,488 --> 02:03:33,718
hard drives in my machine one is for

2322
02:03:31,500 --> 02:03:35,219
development I boot on that hard drive I

2323
02:03:33,719 --> 02:03:36,719
should be able to switch that machine

2324
02:03:35,219 --> 02:03:38,520
over to then running a separate hard

2325
02:03:36,719 --> 02:03:40,140
drive for when I'm doing my web browsing

2326
02:03:38,520 --> 02:03:42,450
and that should be fairly instantaneous

2327
02:03:40,140 --> 02:03:44,880
right like that's how things should be

2328
02:03:42,449 --> 02:03:47,399
design physical actual separate security

2329
02:03:44,880 --> 02:03:50,550
and that way the only thing you're

2330
02:03:47,399 --> 02:03:54,259
trying to secure is just the very small

2331
02:03:50,550 --> 02:03:56,789
transfer part between those gaskets

2332
02:03:54,260 --> 02:03:59,310
whereas right now it's everything whoo

2333
02:03:56,789 --> 02:04:01,409
the same kernels mapped into the address

2334
02:03:59,310 --> 02:04:03,060
space of all the processes it's running

2335
02:04:01,409 --> 02:04:06,599
them all at the same time I don't even

2336
02:04:03,060 --> 02:04:07,860
know what's running on this machine what

2337
02:04:06,600 --> 02:04:10,940
is all this crap

2338
02:04:07,859 --> 02:04:14,099
none of this should be happening right

2339
02:04:10,939 --> 02:04:17,069
this the fact that like wit that

2340
02:04:14,100 --> 02:04:20,730
Microsoft even says the word security

2341
02:04:17,069 --> 02:04:22,979
when this is what a tab of currently

2342
02:04:20,729 --> 02:04:26,609
active things looks like on their

2343
02:04:22,979 --> 02:04:29,339
operating system is ludicrous there this

2344
02:04:26,609 --> 02:04:30,238
is not secure at all there are so many

2345
02:04:29,340 --> 02:04:31,770
backdoors

2346
02:04:30,238 --> 02:04:33,539
I don't even need to know anything about

2347
02:04:31,770 --> 02:04:36,360
the code in here I guarantee you that

2348
02:04:33,539 --> 02:04:39,029
just the fact that the number of things

2349
02:04:36,359 --> 02:04:40,559
on this list this is a default install

2350
02:04:39,029 --> 02:04:46,009
of Windows 10 that's have almost nothing

2351
02:04:40,560 --> 02:04:46,010
installed it's like Visual Studio right

2352
02:04:46,250 --> 02:04:53,310
that the list is this long alone tells

2353
02:04:51,390 --> 02:04:55,289
me that there are backdoors upon

2354
02:04:53,310 --> 02:04:57,810
backdoors upon backdoors in this

2355
02:04:55,289 --> 02:04:58,469
operating system just waiting to be

2356
02:04:57,810 --> 02:05:02,400
found

2357
02:04:58,469 --> 02:05:05,609
and they will never find them all forget

2358
02:05:02,399 --> 02:05:09,299
it right so all we're doing right now is

2359
02:05:05,609 --> 02:05:11,579
having a big old fun rat race to see

2360
02:05:09,300 --> 02:05:14,100
whether the people at windows and other

2361
02:05:11,579 --> 02:05:17,340
security research firms who are white

2362
02:05:14,100 --> 02:05:19,200
hat can find all the hundreds of

2363
02:05:17,340 --> 02:05:21,930
thousands of bugs that are in this list

2364
02:05:19,199 --> 02:05:23,789
alone right let alone all the other

2365
02:05:21,930 --> 02:05:26,340
stuff that's running when I cope this is

2366
02:05:23,789 --> 02:05:29,930
just the services panel right how about

2367
02:05:26,340 --> 02:05:35,680
the process panel what's all this stuff

2368
02:05:29,930 --> 02:05:38,890
right it's nuts

2369
02:05:35,680 --> 02:05:42,850
so just this that the size of this list

2370
02:05:38,890 --> 02:05:47,140
should be one thing right and you know

2371
02:05:42,850 --> 02:05:48,730
maybe in this case two or three because

2372
02:05:47,140 --> 02:05:50,200
I'm running three things that are

2373
02:05:48,729 --> 02:05:51,669
actually talking to each other so this

2374
02:05:50,199 --> 02:05:54,340
list should have three things on it

2375
02:05:51,670 --> 02:05:57,909
right and that's it

2376
02:05:54,340 --> 02:06:00,130
and until then talking about security is

2377
02:05:57,909 --> 02:06:01,779
a joke and thinking that cash timing

2378
02:06:00,130 --> 02:06:03,670
attacks are your primary problem and

2379
02:06:01,779 --> 02:06:07,479
that oh my god like we've got these cash

2380
02:06:03,670 --> 02:06:09,550
of it come on man like yeah cash timing

2381
02:06:07,479 --> 02:06:11,049
attacks are a problem do I want Intel

2382
02:06:09,550 --> 02:06:15,190
the to start designing hardware that

2383
02:06:11,050 --> 02:06:18,039
doesn't have them yes obviously are they

2384
02:06:15,189 --> 02:06:20,049
relevant to how many billions of ways

2385
02:06:18,039 --> 02:06:22,359
Microsoft has already dropped in here

2386
02:06:20,050 --> 02:06:25,800
for us for our people just slide right

2387
02:06:22,359 --> 02:06:27,460
in and compromise your machine no

2388
02:06:25,800 --> 02:06:28,989
absolutely not

2389
02:06:27,460 --> 02:06:30,609
they're gonna fix these cash timing

2390
02:06:28,989 --> 02:06:33,489
attacks and then there's still gonna be

2391
02:06:30,609 --> 02:06:35,289
eight hundred thousand different ways to

2392
02:06:33,489 --> 02:06:38,019
pone your machine by sending the right

2393
02:06:35,289 --> 02:06:39,460
gift to some stupid thing in here that's

2394
02:06:38,020 --> 02:06:39,880
in the photo viewing service or

2395
02:06:39,460 --> 02:06:45,539
something

2396
02:06:39,880 --> 02:06:45,539
right so it's pointless

2397
02:06:50,760 --> 02:06:55,119
jageun do you think code reviews and our

2398
02:06:53,469 --> 02:06:56,948
writing tests helps with that and that

2399
02:06:55,119 --> 02:07:00,488
meaning be the Lima that most

2400
02:06:56,948 --> 02:07:01,960
programmers are forced to or aren't

2401
02:07:00,488 --> 02:07:06,759
thinking about what's actually effective

2402
02:07:01,960 --> 02:07:08,230
um I guess I would say is it's just a

2403
02:07:06,760 --> 02:07:10,300
meta statement right

2404
02:07:08,229 --> 02:07:13,000
I don't think code reviews or writing

2405
02:07:10,300 --> 02:07:15,909
tests help or don't help in an absolute

2406
02:07:13,000 --> 02:07:18,430
sense almost everything you might do in

2407
02:07:15,909 --> 02:07:20,800
code that is not directly producing code

2408
02:07:18,430 --> 02:07:22,570
you use so I'm literally writing a

2409
02:07:20,800 --> 02:07:23,820
routine here and optimizing this routine

2410
02:07:22,569 --> 02:07:26,409
or something

2411
02:07:23,819 --> 02:07:28,899
everything you do putting in Const

2412
02:07:26,409 --> 02:07:31,510
putting code reviews in place writing

2413
02:07:28,899 --> 02:07:33,519
test code stepping through things in the

2414
02:07:31,510 --> 02:07:36,400
debugger that aren't for finding bugs

2415
02:07:33,520 --> 02:07:37,930
just to watch them right talking with

2416
02:07:36,399 --> 02:07:40,149
people on a whiteboard bla bla bla bla

2417
02:07:37,930 --> 02:07:43,480
bla bla bla right all of those things

2418
02:07:40,149 --> 02:07:46,059
are not good or bad in the absolute

2419
02:07:43,479 --> 02:07:48,129
sense they have effects on your

2420
02:07:46,060 --> 02:07:50,050
productivity sometimes positive

2421
02:07:48,130 --> 02:07:51,550
sometimes negative and whether or not

2422
02:07:50,050 --> 02:07:53,560
they're generally good practices can

2423
02:07:51,550 --> 02:07:56,110
depends on the circumstance and the team

2424
02:07:53,560 --> 02:08:00,699
some teams would be better off never

2425
02:07:56,109 --> 02:08:02,469
doing a single code review other teams

2426
02:08:00,698 --> 02:08:03,819
might be better off doing code reviews

2427
02:08:02,469 --> 02:08:06,460
fairly frequently

2428
02:08:03,819 --> 02:08:08,170
other times I suspect this is often the

2429
02:08:06,460 --> 02:08:10,390
case code reviews might be a good idea

2430
02:08:08,170 --> 02:08:12,699
when you're bringing new people on but

2431
02:08:10,390 --> 02:08:14,079
become not such a good idea later when

2432
02:08:12,698 --> 02:08:17,859
everyone kind of knows what's going on

2433
02:08:14,079 --> 02:08:20,969
right and again that all depends on it's

2434
02:08:17,859 --> 02:08:25,238
a it's a time for a trade-off that

2435
02:08:20,969 --> 02:08:27,579
you're making if you spend a thousand

2436
02:08:25,238 --> 02:08:30,879
hours doing code reviews to save a

2437
02:08:27,579 --> 02:08:33,579
hundred hours of debugging you're making

2438
02:08:30,880 --> 02:08:35,050
a huge mistake if you spend a hundred

2439
02:08:33,579 --> 02:08:37,238
dollars of code reviews to spend a

2440
02:08:35,050 --> 02:08:42,909
thousand hours hours of debugging you're

2441
02:08:37,238 --> 02:08:46,119
not right and so you have to tailor

2442
02:08:42,909 --> 02:08:48,309
things to what your gains are right

2443
02:08:46,119 --> 02:08:50,349
similarly there's risk forward trade-off

2444
02:08:48,310 --> 02:08:52,480
some software goes out the door if

2445
02:08:50,350 --> 02:08:54,489
there's a bug in it it doesn't matter

2446
02:08:52,479 --> 02:08:56,379
it's not that big a deal that bug is

2447
02:08:54,488 --> 02:08:59,379
relatively harmless it can be patched

2448
02:08:56,380 --> 02:09:00,640
it's just not that critical other

2449
02:08:59,380 --> 02:09:02,789
software goes out the doors is a bug in

2450
02:09:00,640 --> 02:09:05,429
it it could cause a catastrophic failure

2451
02:09:02,789 --> 02:09:09,279
but the classic example

2452
02:09:05,429 --> 02:09:10,479
launching a rocket into space if there's

2453
02:09:09,279 --> 02:09:12,878
a bug in some piece of software there

2454
02:09:10,479 --> 02:09:16,090
could mean the entire you know 100

2455
02:09:12,878 --> 02:09:18,248
million dollar rocket gets lost well you

2456
02:09:16,090 --> 02:09:19,869
know do I want to spend a lot more time

2457
02:09:18,248 --> 02:09:23,828
reviewing the code and testing it in

2458
02:09:19,868 --> 02:09:28,418
that scenario absolutely and so again

2459
02:09:23,828 --> 02:09:31,238
you always have to go back to think

2460
02:09:28,418 --> 02:09:33,069
about what I am trying to do we are

2461
02:09:31,238 --> 02:09:34,418
trying to be more productive we're

2462
02:09:33,069 --> 02:09:37,208
trying to produce the same quality

2463
02:09:34,418 --> 02:09:39,849
software with the same number of

2464
02:09:37,208 --> 02:09:42,698
features in the least amount of time are

2465
02:09:39,849 --> 02:09:44,409
these things that I'm doing making that

2466
02:09:42,698 --> 02:09:46,988
happen are they really making that

2467
02:09:44,408 --> 02:09:49,719
happen or am I just doing them because I

2468
02:09:46,988 --> 02:09:51,368
watched some stupid video on YouTube

2469
02:09:49,719 --> 02:09:52,748
where some engineer didn't know what

2470
02:09:51,368 --> 02:09:55,898
they were talking about told me it was a

2471
02:09:52,748 --> 02:09:57,309
good idea right or to be slightly more

2472
02:09:55,899 --> 02:09:58,929
generous some Engineer who did know what

2473
02:09:57,309 --> 02:10:00,128
they were talking about talked about

2474
02:09:58,929 --> 02:10:01,779
something that they did on their team

2475
02:10:00,128 --> 02:10:05,738
but that just just doesn't apply to your

2476
02:10:01,779 --> 02:10:07,628
team or you right and so that's really

2477
02:10:05,738 --> 02:10:09,308
the thing that's really crucial to get

2478
02:10:07,628 --> 02:10:12,038
into your head is like it is all

2479
02:10:09,309 --> 02:10:14,409
relative there is no such thing as a

2480
02:10:12,038 --> 02:10:16,898
universally good programming practice

2481
02:10:14,408 --> 02:10:17,738
except possibly in the very smallest

2482
02:10:16,899 --> 02:10:22,829
cases right

2483
02:10:17,738 --> 02:10:22,828
it's like talking about you know all of

2484
02:10:22,948 --> 02:10:27,158
you know all of the things that you

2485
02:10:25,118 --> 02:10:28,839
might do in a day like which ones of

2486
02:10:27,158 --> 02:10:31,118
those are good habits and bad habits

2487
02:10:28,840 --> 02:10:33,128
right well who are you you know which

2488
02:10:31,118 --> 02:10:36,038
which person are you what's your goals

2489
02:10:33,128 --> 02:10:37,929
in life what you know all of these are

2490
02:10:36,038 --> 02:10:40,898
how old are you like all of these things

2491
02:10:37,929 --> 02:10:43,179
change what is the right advice to give

2492
02:10:40,899 --> 02:10:46,059
someone right and the same is true from

2493
02:10:43,179 --> 02:10:48,998
programming you just can't boil it down

2494
02:10:46,059 --> 02:10:51,128
to this is what everyone should do and

2495
02:10:48,998 --> 02:10:55,658
so you have to be willing to be flexible

2496
02:10:51,128 --> 02:11:01,569
and you have to be willing to go how do

2497
02:10:55,658 --> 02:11:03,518
I analyze my choices all the time to see

2498
02:11:01,569 --> 02:11:05,288
whether what we're doing really makes

2499
02:11:03,519 --> 02:11:09,849
sense for us or whether we're just

2500
02:11:05,288 --> 02:11:11,228
wasting our time right and it's the same

2501
02:11:09,849 --> 02:11:12,878
answer for everything when people ask me

2502
02:11:11,229 --> 02:11:14,739
about test-driven development or all

2503
02:11:12,878 --> 02:11:16,569
their other buzzwords right agile

2504
02:11:14,738 --> 02:11:17,738
programming Bob about whatever it is the

2505
02:11:16,569 --> 02:11:18,719
answer is always the same

2506
02:11:17,738 --> 02:11:20,809
some of

2507
02:11:18,720 --> 02:11:25,770
practices are good some of the time

2508
02:11:20,810 --> 02:11:28,200
right and and you have to develop the

2509
02:11:25,770 --> 02:11:30,630
skills to critically assess whether you

2510
02:11:28,199 --> 02:11:32,069
are wasting your time or not and it

2511
02:11:30,630 --> 02:11:33,690
usually is pretty obvious if you

2512
02:11:32,069 --> 02:11:35,250
actually take a bird's-eye view of it

2513
02:11:33,689 --> 02:11:37,259
you know what you're spending your time

2514
02:11:35,250 --> 02:11:39,930
doing and you know whether that's it's

2515
02:11:37,260 --> 02:11:41,789
finding bugs or producing better code if

2516
02:11:39,930 --> 02:11:44,100
you actually measure something you care

2517
02:11:41,789 --> 02:11:45,810
about right how long it took you to

2518
02:11:44,100 --> 02:11:47,820
write the code how many bugs got found

2519
02:11:45,810 --> 02:11:49,230
in that code how easy it was for someone

2520
02:11:47,819 --> 02:11:50,699
else to maintain the code all of those

2521
02:11:49,229 --> 02:11:52,259
things are actually things you can sort

2522
02:11:50,699 --> 02:11:54,720
of get a handle on not that hard if you

2523
02:11:52,260 --> 02:11:57,630
look but if what you always assume is

2524
02:11:54,720 --> 02:12:00,600
someone told me X or clean code means X

2525
02:11:57,630 --> 02:12:01,890
or whatever and so I think that this was

2526
02:12:00,600 --> 02:12:04,770
better because we ended up with this

2527
02:12:01,890 --> 02:12:07,980
thing that's an abstract concept the

2528
02:12:04,770 --> 02:12:09,690
answer is no that's wrong right that did

2529
02:12:07,979 --> 02:12:12,419
not tell you anything because you didn't

2530
02:12:09,689 --> 02:12:14,699
actually measure or observe anything

2531
02:12:12,420 --> 02:12:17,279
that actually matters to the code that

2532
02:12:14,699 --> 02:12:18,869
you're shipping right and that's the

2533
02:12:17,279 --> 02:12:21,899
crucial part that you have to make sure

2534
02:12:18,869 --> 02:12:25,079
you develop all the time right you have

2535
02:12:21,899 --> 02:12:27,569
to always be thinking about this am i

2536
02:12:25,079 --> 02:12:31,050
doing stuff right now that it's just

2537
02:12:27,569 --> 02:12:33,420
wasting my time and the converse is if

2538
02:12:31,050 --> 02:12:35,250
I'm identifying things that are taking

2539
02:12:33,420 --> 02:12:37,350
too much time or other programming

2540
02:12:35,250 --> 02:12:41,670
practice out there that can catch that

2541
02:12:37,350 --> 02:12:44,250
can fix that waste of time right and

2542
02:12:41,670 --> 02:12:46,170
that's a good example right the simplest

2543
02:12:44,250 --> 02:12:50,310
possible thing is with Const right

2544
02:12:46,170 --> 02:12:52,859
there's two examples so let's say you

2545
02:12:50,310 --> 02:12:54,660
find yourself having a lot of bugs in

2546
02:12:52,859 --> 02:12:56,130
your code where you're modifying things

2547
02:12:54,659 --> 02:12:58,680
that we're not supposed to be modified

2548
02:12:56,130 --> 02:13:01,920
add more Const

2549
02:12:58,680 --> 02:13:04,740
that's what cost is for add more Const

2550
02:13:01,920 --> 02:13:07,980
right on the other hand if you find that

2551
02:13:04,739 --> 02:13:10,679
you're never having Const errors right

2552
02:13:07,979 --> 02:13:13,169
in the compiler but you've been adding

2553
02:13:10,680 --> 02:13:14,490
cost all the time that's a good thing to

2554
02:13:13,170 --> 02:13:16,140
say hey maybe I shouldn't be using

2555
02:13:14,489 --> 02:13:18,750
constants so much because it's obviously

2556
02:13:16,140 --> 02:13:21,570
not catching any bugs for me right so

2557
02:13:18,750 --> 02:13:23,550
you can always figure out ways to look

2558
02:13:21,569 --> 02:13:25,439
for are these things that I've been told

2559
02:13:23,550 --> 02:13:27,600
are good or that I think might be good

2560
02:13:25,439 --> 02:13:29,639
or are they actually saving me anything

2561
02:13:27,600 --> 02:13:32,640
and by the converse you can usually say

2562
02:13:29,640 --> 02:13:34,200
am i finding myself having problems

2563
02:13:32,640 --> 02:13:35,700
that there is a coding practice out

2564
02:13:34,199 --> 02:13:38,279
there or something that's been advocated

2565
02:13:35,699 --> 02:13:39,899
that might address in that case let me

2566
02:13:38,279 --> 02:13:42,719
experiment with it and see if it does

2567
02:13:39,899 --> 02:13:45,539
address it right and so you can usually

2568
02:13:42,720 --> 02:13:48,420
figure out a way to check both sides of

2569
02:13:45,539 --> 02:13:49,890
something right in and you should

2570
02:13:48,420 --> 02:13:52,050
whichever one you're doing if you are

2571
02:13:49,890 --> 02:13:53,730
doing it practice there usually is a way

2572
02:13:52,050 --> 02:13:55,650
to start checking is this practice

2573
02:13:53,729 --> 02:13:56,909
actually doing something for me and if

2574
02:13:55,649 --> 02:13:58,769
you're not doing it practice there

2575
02:13:56,909 --> 02:14:01,170
usually is also a thing to say is there

2576
02:13:58,770 --> 02:14:03,660
some canary in the mine shaft that is

2577
02:14:01,170 --> 02:14:05,279
telling me hey I'm having this problem

2578
02:14:03,659 --> 02:14:06,960
maybe I should start doing this code

2579
02:14:05,279 --> 02:14:09,800
practice to help fix it in these

2580
02:14:06,960 --> 02:14:09,800
circumstances right

2581
02:14:24,368 --> 02:14:28,189
only just clicked you anymore I watched

2582
02:14:26,630 --> 02:14:29,239
the first 50 episodes of Hamid here a

2583
02:14:28,189 --> 02:14:30,678
quick question about the cursor things

2584
02:14:29,238 --> 02:14:32,988
GP OpenGL shader is part of the product

2585
02:14:30,679 --> 02:14:34,010
now yes there is a GPU accelerated

2586
02:14:32,988 --> 02:14:41,118
renderer the practice that's what we've

2587
02:14:34,010 --> 02:14:42,619
been playing with recently when do you

2588
02:14:41,118 --> 02:14:45,319
plan on showing adding in the new art

2589
02:14:42,618 --> 02:14:46,609
just as soon as I'm comfortable with

2590
02:14:45,319 --> 02:14:49,969
where everything is in terms of

2591
02:14:46,609 --> 02:14:52,130
rendering a opinion of the dotnet

2592
02:14:49,969 --> 02:14:54,349
framework platform it's garbage

2593
02:14:52,130 --> 02:14:56,389
one argument I get from people that use

2594
02:14:54,349 --> 02:14:58,520
advanced with less features is that the

2595
02:14:56,389 --> 02:15:03,590
resulting code is more secure and robust

2596
02:14:58,520 --> 02:15:05,449
do you agree with that nope and the

2597
02:15:03,590 --> 02:15:07,130
reason is because the advanced C++

2598
02:15:05,448 --> 02:15:11,719
features as far as I can tell are rarely

2599
02:15:07,130 --> 02:15:13,038
about doing any of such thing right C++

2600
02:15:11,719 --> 02:15:17,658
is not a language that's designed for

2601
02:15:13,038 --> 02:15:19,130
robustness and I've never seen them at a

2602
02:15:17,658 --> 02:15:23,779
high level construct that was effective

2603
02:15:19,130 --> 02:15:25,639
at achieving it so I mean I could talk

2604
02:15:23,779 --> 02:15:32,689
about a specific advanced feature but

2605
02:15:25,639 --> 02:15:34,969
you know I mean the obvious things that

2606
02:15:32,689 --> 02:15:36,678
improve code robustness are things like

2607
02:15:34,969 --> 02:15:39,230
meta programming and they don't really

2608
02:15:36,679 --> 02:15:40,699
support them I mean they don't even this

2609
02:15:39,229 --> 02:15:42,019
for an introspection yet right that was

2610
02:15:40,698 --> 02:15:44,948
like a brand new thing they're adding

2611
02:15:42,020 --> 02:15:47,300
and the in the latest stuff and you know

2612
02:15:44,948 --> 02:15:50,529
simple things that create secure and

2613
02:15:47,300 --> 02:15:54,529
robust code are things that allow wide

2614
02:15:50,529 --> 02:15:56,538
application of solid principles and the

2615
02:15:54,529 --> 02:15:58,729
modification of those principles and C++

2616
02:15:56,538 --> 02:16:00,408
is doesn't have it oh it really does

2617
02:15:58,729 --> 02:16:04,549
have any features for that to be honest

2618
02:16:00,408 --> 02:16:09,638
it's it's almost feature void in terms

2619
02:16:04,550 --> 02:16:09,639
of that so

2620
02:16:15,739 --> 02:16:24,929
all right I'm gonna go ahead and close

2621
02:16:19,140 --> 02:16:25,860
this down all right thank you everyone

2622
02:16:24,930 --> 02:16:26,909
for joining me for the left side

2623
02:16:25,859 --> 02:16:30,119
handmade hero it's been a pleasure

2624
02:16:26,909 --> 02:16:31,139
coding with you as always if you want to

2625
02:16:30,119 --> 02:16:33,209
follow along the series at home you can

2626
02:16:31,140 --> 02:16:37,710
always peer to the game on handmade hero

2627
02:16:33,209 --> 02:16:39,329
org we also have replaced the patreon

2628
02:16:37,709 --> 02:16:40,468
page with a contribution page where you

2629
02:16:39,329 --> 02:16:43,440
can contribute to things like the

2630
02:16:40,468 --> 02:16:45,089
episode guide which funds development on

2631
02:16:43,440 --> 02:16:46,290
things like that so if you're interested

2632
02:16:45,090 --> 02:16:48,120
in contributing series that's the place

2633
02:16:46,290 --> 02:16:49,530
to go for that and of course the episode

2634
02:16:48,120 --> 02:16:51,450
guide is is always there we also have a

2635
02:16:49,530 --> 02:16:52,349
schedule bot if you would like to go and

2636
02:16:51,450 --> 02:16:54,030
find out when the series going to be

2637
02:16:52,349 --> 02:16:57,179
live but I tell you right now it's gonna

2638
02:16:54,030 --> 02:16:59,639
be live again tomorrow in 21 hours 29

2639
02:16:57,179 --> 02:17:07,079
seconds and I'm sorry 21 hours 29

2640
02:16:59,638 --> 02:17:08,939
minutes and 5 4 3 2 1 0 seconds so hope

2641
02:17:07,079 --> 02:17:11,039
see you back here for that we are going

2642
02:17:08,940 --> 02:17:14,790
to take some next steps in our lighting

2643
02:17:11,040 --> 02:17:16,679
to try and get us to a place where we're

2644
02:17:14,790 --> 02:17:18,540
sort of happy with how that's going

2645
02:17:16,679 --> 02:17:20,159
again the goal there now is to just sort

2646
02:17:18,540 --> 02:17:22,380
of scale out this solution clean

2647
02:17:20,159 --> 02:17:24,329
everything up and wrap it up in a nice

2648
02:17:22,379 --> 02:17:26,759
bow so that we can have lighting

2649
02:17:24,329 --> 02:17:28,138
wherever we want it in the game and not

2650
02:17:26,760 --> 02:17:29,790
worry about it slowing down our

2651
02:17:28,138 --> 02:17:31,109
performance so we have some work to do

2652
02:17:29,790 --> 02:17:32,790
there but thankfully we've kind of

2653
02:17:31,110 --> 02:17:34,349
cracked I think the lighting problem in

2654
02:17:32,790 --> 02:17:36,000
terms of what's appropriate for our game

2655
02:17:34,349 --> 02:17:37,200
in terms of the architecture so I'm

2656
02:17:36,000 --> 02:17:38,879
pretty happy with that and I think we'll

2657
02:17:37,200 --> 02:17:42,780
have some success there as we move

2658
02:17:38,879 --> 02:17:44,638
forwards that's about it for today hope

2659
02:17:42,780 --> 02:17:46,380
to see Becker tomorrow till then have

2660
02:17:44,638 --> 02:17:48,598
fun programming everyone and I'll see

2661
02:17:46,379 --> 02:17:50,869
you on the Internet take it easy

2662
02:17:48,599 --> 02:17:50,870
everybody

