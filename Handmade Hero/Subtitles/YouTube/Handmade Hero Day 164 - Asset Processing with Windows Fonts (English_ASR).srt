1
00:00:00,000 --> 00:00:05,099
start recording hello everyone and

2
00:00:03,540 --> 00:00:08,580
welcome to handmade Hero the show we

3
00:00:05,099 --> 00:00:12,029
code a complete game live on stream no

4
00:00:08,580 --> 00:00:14,339
engines no libraries here although we

5
00:00:12,029 --> 00:00:16,350
did do our one and only library stream

6
00:00:14,339 --> 00:00:18,329
yesterday for the asset processor

7
00:00:16,350 --> 00:00:21,630
because some people wanted to see how to

8
00:00:18,329 --> 00:00:24,929
use sdb TrueType so I showed how to use

9
00:00:21,629 --> 00:00:27,299
that so if you are interested in the one

10
00:00:24,929 --> 00:00:28,890
and only time on handmade hero that we

11
00:00:27,300 --> 00:00:31,679
will probably ever use a library that

12
00:00:28,890 --> 00:00:33,329
was the day to do it so what are we

13
00:00:31,678 --> 00:00:36,539
gonna do today today I'm going to show

14
00:00:33,329 --> 00:00:45,000
you how to do the same thing without a

15
00:00:36,539 --> 00:00:46,259
library just because why not maybe it

16
00:00:45,000 --> 00:00:49,558
will make you appreciate us to be

17
00:00:46,259 --> 00:00:54,210
TrueType even more so let's take a look

18
00:00:49,558 --> 00:00:57,419
today is day 164 so if you want to keep

19
00:00:54,210 --> 00:00:59,520
up if you want to do do if you want to

20
00:00:57,420 --> 00:01:01,410
code along with me on the stream if you

21
00:00:59,520 --> 00:01:03,270
will then you're gonna want to unpack

22
00:01:01,409 --> 00:01:04,259
day 163 source code because that is the

23
00:01:03,270 --> 00:01:06,689
source code that I'm going to be

24
00:01:04,260 --> 00:01:07,890
starting with here and so if you

25
00:01:06,688 --> 00:01:11,250
pre-ordered the game on handmade hero

26
00:01:07,890 --> 00:01:14,000
org unzip day 163 and you will be right

27
00:01:11,250 --> 00:01:17,579
in line you'll be right in line with me

28
00:01:14,000 --> 00:01:18,900
so let's take a look here like I said

29
00:01:17,579 --> 00:01:21,000
don't allow any libraries in handmade

30
00:01:18,900 --> 00:01:22,859
here a button the asset processor I'm

31
00:01:21,000 --> 00:01:24,209
okay with it because that's not

32
00:01:22,859 --> 00:01:26,969
something that ships on the end-users

33
00:01:24,209 --> 00:01:28,469
machine so it's okay we can do that so

34
00:01:26,969 --> 00:01:29,908
if you want to use this you can use this

35
00:01:28,469 --> 00:01:31,560
right here s to be true type of

36
00:01:29,909 --> 00:01:33,150
implementation s to be true type you

37
00:01:31,560 --> 00:01:36,469
want to do that don't have a problem

38
00:01:33,150 --> 00:01:38,700
with it go go for it go nuts and

39
00:01:36,469 --> 00:01:45,140
and use all the libraries you want in

40
00:01:38,700 --> 00:01:47,310
your asset processor and you know I

41
00:01:45,140 --> 00:01:48,868
guess what I would say is even though

42
00:01:47,310 --> 00:01:49,890
it's in sort of this offline asset

43
00:01:48,868 --> 00:01:50,879
processor like well the reasons I don't

44
00:01:49,890 --> 00:01:52,079
like using libraries I'd like to be able

45
00:01:50,879 --> 00:01:53,429
to keep my code running I like to keep

46
00:01:52,078 --> 00:01:54,298
it portable and I can do all sorts of

47
00:01:53,430 --> 00:01:56,399
things

48
00:01:54,299 --> 00:01:57,659
efficiency blah blah blah right there's

49
00:01:56,399 --> 00:02:01,649
all these good reasons not to use

50
00:01:57,659 --> 00:02:04,259
libraries for me in in the game and some

51
00:02:01,649 --> 00:02:05,549
of those are lessened when you talk

52
00:02:04,259 --> 00:02:07,950
about the asset processor because really

53
00:02:05,549 --> 00:02:10,140
the asset processor doesn't have to run

54
00:02:07,950 --> 00:02:13,348
on a variety of machines it doesn't have

55
00:02:10,139 --> 00:02:16,468
to run 64-bit 32-bit it doesn't have to

56
00:02:13,348 --> 00:02:18,149
be portable right and all these sorts of

57
00:02:16,468 --> 00:02:19,438
things that doesn't necessarily have to

58
00:02:18,150 --> 00:02:22,079
do because yes that processor just runs

59
00:02:19,438 --> 00:02:23,908
on your machine to process the yard

60
00:02:22,079 --> 00:02:28,200
assets before shipping the game and then

61
00:02:23,908 --> 00:02:29,699
you're done right but even so if you

62
00:02:28,199 --> 00:02:31,018
think about it you know if you want that

63
00:02:29,699 --> 00:02:32,848
asset processor to be something that's

64
00:02:31,019 --> 00:02:34,980
like a tool that you rely on and that

65
00:02:32,848 --> 00:02:36,479
you know maybe you can work on no matter

66
00:02:34,979 --> 00:02:38,250
what platform you're working out at that

67
00:02:36,479 --> 00:02:40,619
time or whatever sometimes it makes

68
00:02:38,250 --> 00:02:42,870
sense to apply the same sorts of rules

69
00:02:40,620 --> 00:02:45,629
to your asset processor as you would

70
00:02:42,870 --> 00:02:47,849
apply to to the game and so I actually

71
00:02:45,628 --> 00:02:50,098
tend to even if I'm in an asset

72
00:02:47,848 --> 00:02:52,979
processor if I'm gonna use a library I

73
00:02:50,098 --> 00:02:55,108
still tend to only really allow

74
00:02:52,979 --> 00:02:56,688
libraries that would be like SDB

75
00:02:55,109 --> 00:02:58,620
TrueType where they were well engineered

76
00:02:56,688 --> 00:03:00,448
by a programmer who knew what they were

77
00:02:58,620 --> 00:03:02,009
doing and they're really convenient to

78
00:03:00,449 --> 00:03:03,840
implement and work cross-platform and

79
00:03:02,009 --> 00:03:05,459
all these are the things don't require a

80
00:03:03,840 --> 00:03:07,319
build process bla bla bla just because

81
00:03:05,459 --> 00:03:10,199
the asset processor eventually does

82
00:03:07,318 --> 00:03:12,208
become a fairly sort of heavyweight

83
00:03:10,199 --> 00:03:14,790
thing especially if you extend your game

84
00:03:12,209 --> 00:03:16,319
to 3d eventually or things like this the

85
00:03:14,789 --> 00:03:19,888
asset processor can be a fairly serious

86
00:03:16,318 --> 00:03:21,149
endeavor and so you know as much as on

87
00:03:19,889 --> 00:03:22,500
handmade here I've decided that the

88
00:03:21,150 --> 00:03:23,549
asset processor is kind of the separate

89
00:03:22,500 --> 00:03:26,430
thing that we're not really going to be

90
00:03:23,549 --> 00:03:28,079
too concerned about you know in a real

91
00:03:26,430 --> 00:03:31,049
game project it can be a fairly

92
00:03:28,079 --> 00:03:32,129
formidable beasts and sort of you know

93
00:03:31,049 --> 00:03:32,609
you gotta kind of think along those

94
00:03:32,128 --> 00:03:36,358
lines

95
00:03:32,609 --> 00:03:38,040
so I'll just say that first seven think

96
00:03:36,359 --> 00:03:40,079
about but what I wanted to show today

97
00:03:38,039 --> 00:03:41,548
was if you didn't want to use a library

98
00:03:40,079 --> 00:03:43,430
right because I'm handmade here we don't

99
00:03:41,549 --> 00:03:45,780
use any libraries in the main code base

100
00:03:43,430 --> 00:03:46,739
if we didn't want to use a library how

101
00:03:45,780 --> 00:03:47,969
would you have gone about extracting

102
00:03:46,739 --> 00:03:49,079
these fonts would you have to written

103
00:03:47,969 --> 00:03:50,549
your own TrueType font that's right

104
00:03:49,079 --> 00:03:53,909
that's one thing you could do the other

105
00:03:50,549 --> 00:03:57,299
thing you can do I'm not necessarily

106
00:03:53,908 --> 00:03:59,608
saying it's better in fact it's probably

107
00:03:57,299 --> 00:04:01,530
worse than choosing SUV trooper but

108
00:03:59,609 --> 00:04:02,759
misses gonna say what you can do is you

109
00:04:01,530 --> 00:04:04,229
can rely on the operating system to get

110
00:04:02,758 --> 00:04:05,488
this information because every operating

111
00:04:04,229 --> 00:04:06,930
system no matter what absolute you run

112
00:04:05,489 --> 00:04:08,759
out you're going to have a way to

113
00:04:06,930 --> 00:04:10,680
extract fonts out of that operating

114
00:04:08,758 --> 00:04:13,408
system so another thing that you could

115
00:04:10,680 --> 00:04:17,548
do with the asset processor is get the

116
00:04:13,408 --> 00:04:21,439
fonts from windows right and so how do

117
00:04:17,548 --> 00:04:25,168
you do that right well in Windows

118
00:04:21,439 --> 00:04:26,370
Windows actually has a bunch of calls

119
00:04:25,168 --> 00:04:29,490
for

120
00:04:26,370 --> 00:04:32,240
Fonts right for example this is the text

121
00:04:29,490 --> 00:04:35,030
out function the textile function is

122
00:04:32,240 --> 00:04:38,579
something that can take any string and

123
00:04:35,029 --> 00:04:40,500
rasterize it into an htc now we worked

124
00:04:38,579 --> 00:04:43,560
with HTC's in handmade hero before

125
00:04:40,500 --> 00:04:45,149
you've seen those back in the early days

126
00:04:43,560 --> 00:04:48,418
when we first set up our window and

127
00:04:45,149 --> 00:04:50,388
wanted to blip our you know our drawing

128
00:04:48,418 --> 00:04:53,250
to it

129
00:04:50,389 --> 00:04:55,410
it stands for handle to a device context

130
00:04:53,250 --> 00:04:59,310
a device context is what they called

131
00:04:55,410 --> 00:05:02,220
sort of the the context for drawing the

132
00:04:59,310 --> 00:05:04,680
context for doing graphics work in the

133
00:05:02,220 --> 00:05:08,280
graphics device interface for windows

134
00:05:04,680 --> 00:05:10,319
and so what we do know is if we wanted

135
00:05:08,279 --> 00:05:12,239
to start extracting fonts out of windows

136
00:05:10,319 --> 00:05:13,620
we could just call this text out

137
00:05:12,240 --> 00:05:16,288
function and we know that we could get

138
00:05:13,620 --> 00:05:18,720
it to draw to an HDC so the question is

139
00:05:16,288 --> 00:05:21,750
just could we figure out a way to get

140
00:05:18,720 --> 00:05:24,780
one of these HDC s to draw into a bitmap

141
00:05:21,750 --> 00:05:28,889
of our choosing right like a bitmap that

142
00:05:24,779 --> 00:05:31,939
we are okay with looking at behind sort

143
00:05:28,889 --> 00:05:33,840
of the back of windows if you will right

144
00:05:31,939 --> 00:05:35,519
because if we could do that we can just

145
00:05:33,839 --> 00:05:37,379
have windows draw the fonts and then we

146
00:05:35,519 --> 00:05:38,939
can grab the fonts out of there and this

147
00:05:37,379 --> 00:05:40,620
is the same principle you can follow in

148
00:05:38,939 --> 00:05:42,870
just about any operating system whatever

149
00:05:40,620 --> 00:05:46,199
the thing is they have that would draw

150
00:05:42,870 --> 00:05:53,879
fonts we could just go ahead and and use

151
00:05:46,199 --> 00:05:55,079
that thing right okay so there's

152
00:05:53,879 --> 00:05:57,209
actually a couple ways we could do this

153
00:05:55,079 --> 00:05:59,819
we could start by doing the absolute

154
00:05:57,209 --> 00:06:03,448
slowest way I believe it's called get

155
00:05:59,819 --> 00:06:05,098
pixel the absolute slowest way and

156
00:06:03,449 --> 00:06:06,990
probably not a particularly good way to

157
00:06:05,098 --> 00:06:10,168
go but we could try it just to make the

158
00:06:06,990 --> 00:06:12,418
the sort of a note Ron called the

159
00:06:10,168 --> 00:06:15,240
absolute the absolute slowest but

160
00:06:12,418 --> 00:06:18,299
absolute simplest way would be this way

161
00:06:15,240 --> 00:06:19,620
which would be that if we didn't want to

162
00:06:18,300 --> 00:06:22,889
try and figure out how to create any

163
00:06:19,620 --> 00:06:26,819
kind of a special HDC at all we could

164
00:06:22,889 --> 00:06:28,530
just use a any old HDC right like no

165
00:06:26,819 --> 00:06:30,360
matter any HDC we could create so we

166
00:06:28,529 --> 00:06:33,089
just look at how we created any old HDC

167
00:06:30,360 --> 00:06:35,009
use that and then we can call get pixel

168
00:06:33,089 --> 00:06:36,538
sequentially to literally read out each

169
00:06:35,009 --> 00:06:38,310
pixel in order and since this is the

170
00:06:36,538 --> 00:06:39,418
asset processor we could just be fine

171
00:06:38,310 --> 00:06:40,110
with that we could just be like you know

172
00:06:39,418 --> 00:06:41,399
what we

173
00:06:40,110 --> 00:06:42,689
kara takes a long time we're only gonna

174
00:06:41,399 --> 00:06:46,289
do it once to extract the thigh and

175
00:06:42,689 --> 00:06:47,569
spine right so we could do that that's

176
00:06:46,290 --> 00:06:49,830
not entirely out of the question right

177
00:06:47,569 --> 00:06:51,360
so maybe let's start with that

178
00:06:49,829 --> 00:06:52,859
and then we could see after we're done

179
00:06:51,360 --> 00:06:54,720
with that if we want to push a little

180
00:06:52,860 --> 00:06:58,590
further and be a little bit more fancy

181
00:06:54,720 --> 00:07:01,020
about how we do our HDC so if we have if

182
00:06:58,589 --> 00:07:03,629
we have to get one of these HTC's the

183
00:07:01,019 --> 00:07:07,109
way that we would want to do that is by

184
00:07:03,629 --> 00:07:08,759
using a create DC call usually the way

185
00:07:07,110 --> 00:07:11,189
that you would probably do that is call

186
00:07:08,759 --> 00:07:13,349
and create compatible DC and we would

187
00:07:11,189 --> 00:07:16,769
just use a DC that was one that we knew

188
00:07:13,350 --> 00:07:19,140
about like one that was you know maybe

189
00:07:16,769 --> 00:07:24,419
one that was for lack of better term

190
00:07:19,139 --> 00:07:25,889
like the screen like the screen that

191
00:07:24,420 --> 00:07:27,720
we're running on for example something

192
00:07:25,889 --> 00:07:29,039
like this but there's a lot of ways that

193
00:07:27,720 --> 00:07:32,640
we can do that right so you can take a

194
00:07:29,040 --> 00:07:35,490
look in here and you can see these we

195
00:07:32,639 --> 00:07:37,949
can't do a create DC call just raw here

196
00:07:35,490 --> 00:07:40,439
right and you can you can pass sort of

197
00:07:37,949 --> 00:07:42,599
all the different things and and sort of

198
00:07:40,439 --> 00:07:46,110
speck out more explicitly what you want

199
00:07:42,600 --> 00:07:47,490
to do right but that just again seems

200
00:07:46,110 --> 00:07:49,259
like a lot of work because if you do

201
00:07:47,490 --> 00:07:51,629
create compatible DC as long as you know

202
00:07:49,259 --> 00:07:53,939
that you have a DC that roughly fits the

203
00:07:51,629 --> 00:07:55,769
kind of device context that you want we

204
00:07:53,939 --> 00:07:57,209
could just use that right another thing

205
00:07:55,769 --> 00:07:58,919
we could do is we could also create a

206
00:07:57,209 --> 00:08:00,149
window and use each DC you know blah

207
00:07:58,920 --> 00:08:03,780
blah blah so there's lots of different

208
00:08:00,149 --> 00:08:06,989
things that we could do there right and

209
00:08:03,779 --> 00:08:10,229
I'm assuming I can't quite remember it's

210
00:08:06,990 --> 00:08:12,180
been a long time but I'm assuming that

211
00:08:10,230 --> 00:08:13,500
we would have to have a bitmap yeah and

212
00:08:12,180 --> 00:08:15,120
it says right here before an application

213
00:08:13,500 --> 00:08:17,220
can use a memory DC for drawing

214
00:08:15,120 --> 00:08:19,319
operations it must select a bitmap of

215
00:08:17,220 --> 00:08:21,930
the correct width and height into the DC

216
00:08:19,319 --> 00:08:23,519
to select a bitmap into a DC use the

217
00:08:21,930 --> 00:08:25,410
create compatible bitmap function

218
00:08:23,519 --> 00:08:27,990
specifying the height width and color

219
00:08:25,410 --> 00:08:29,550
organization required so we kind of know

220
00:08:27,990 --> 00:08:31,920
what we would be doing we'd be creating

221
00:08:29,550 --> 00:08:34,560
compatible DC we then be creating a

222
00:08:31,920 --> 00:08:39,050
compatible bitmap with that DC and we

223
00:08:34,559 --> 00:08:43,109
would be putting it into the HDC right

224
00:08:39,049 --> 00:08:45,769
and that's that's what we would do so

225
00:08:43,110 --> 00:08:48,960
let's take a look let's just do that

226
00:08:45,769 --> 00:08:52,350
let's create a pound to find here which

227
00:08:48,960 --> 00:08:53,490
is like use fonts from windows or

228
00:08:52,350 --> 00:08:56,100
something like that

229
00:08:53,490 --> 00:08:57,659
and we will define that to be one we

230
00:08:56,100 --> 00:08:59,850
will then come in here and say if you

231
00:08:57,659 --> 00:09:05,879
sponsor windows pound include windows

232
00:08:59,850 --> 00:09:07,830
dot H right otherwise we will use STV

233
00:09:05,879 --> 00:09:09,419
TrueType and so this way you can choose

234
00:09:07,830 --> 00:09:11,730
whether you want to use the library or

235
00:09:09,419 --> 00:09:13,889
not just kind of an example of what's

236
00:09:11,730 --> 00:09:17,159
happening there and then the STB tree

237
00:09:13,889 --> 00:09:21,600
type part of things we will sort of make

238
00:09:17,159 --> 00:09:26,969
a version of load glyph bitmap that does

239
00:09:21,600 --> 00:09:30,000
not need that does not need SD be true

240
00:09:26,970 --> 00:09:31,170
type so base will say okay if you use

241
00:09:30,000 --> 00:09:33,809
fonts from windows we're going to use

242
00:09:31,169 --> 00:09:39,708
the windows path otherwise we're going

243
00:09:33,809 --> 00:09:39,708
to use this path here okay there we go

244
00:09:39,740 --> 00:09:42,799
all right

245
00:09:47,059 --> 00:09:53,969
okay so if we're going to do this like I

246
00:09:52,080 --> 00:09:55,589
said before we want to start with the

247
00:09:53,970 --> 00:09:58,200
text out function this is the function

248
00:09:55,589 --> 00:10:02,220
that we would want to call right and

249
00:09:58,200 --> 00:10:04,740
this function we would want to have that

250
00:10:02,220 --> 00:10:07,350
that DC so this would be our device

251
00:10:04,740 --> 00:10:09,089
context right and we would want to

252
00:10:07,350 --> 00:10:10,860
presumably just draw into the top of the

253
00:10:09,089 --> 00:10:13,950
bitmaps we don't really need any offsets

254
00:10:10,860 --> 00:10:15,629
for the text right and then when we do

255
00:10:13,950 --> 00:10:17,269
the code point unfortunately we kind of

256
00:10:15,629 --> 00:10:20,759
have a nasty issue here which is that

257
00:10:17,269 --> 00:10:24,179
windows always wants code points always

258
00:10:20,759 --> 00:10:25,679
wants utf-16 so we can just cold Cassatt

259
00:10:24,179 --> 00:10:28,500
I guess but that's probably not really

260
00:10:25,679 --> 00:10:30,899
the quite correct thing to do like

261
00:10:28,500 --> 00:10:36,419
technically if you wanted to convert to

262
00:10:30,899 --> 00:10:38,159
like a double you care T right if you

263
00:10:36,419 --> 00:10:40,528
want to convert to a utf-16 character

264
00:10:38,159 --> 00:10:43,319
you kind of need to do a utf-32 code

265
00:10:40,528 --> 00:10:45,208
point to utf-16 conversion so we'll call

266
00:10:43,320 --> 00:10:48,959
this a cheese point because it's not

267
00:10:45,208 --> 00:10:50,009
really correct I don't think but it'll

268
00:10:48,958 --> 00:10:52,409
be correct for any of the ANSI

269
00:10:50,009 --> 00:10:54,360
characters that we were doing and

270
00:10:52,409 --> 00:10:56,699
probably a lot of characters but you

271
00:10:54,360 --> 00:10:58,230
know like I said not really correct so

272
00:10:56,700 --> 00:11:00,450
if we did it that way

273
00:10:58,230 --> 00:11:02,100
first just to get things started then

274
00:11:00,450 --> 00:11:03,778
what we would do is say okay pass the

275
00:11:02,100 --> 00:11:06,690
cheese point this is also gonna be text

276
00:11:03,778 --> 00:11:09,899
out W right so we'd pass the cheese

277
00:11:06,690 --> 00:11:12,779
point and we would say it's a one

278
00:11:09,899 --> 00:11:16,139
character string that would draw the

279
00:11:12,778 --> 00:11:18,600
text like so and presumably we can

280
00:11:16,139 --> 00:11:19,620
actually compile that but the problem of

281
00:11:18,600 --> 00:11:22,050
course will be that we don't have a

282
00:11:19,620 --> 00:11:23,759
device context yet okay so we got to get

283
00:11:22,049 --> 00:11:26,250
a device context here's our device

284
00:11:23,759 --> 00:11:30,389
context we want to create compatible DC

285
00:11:26,250 --> 00:11:32,009
right and I assume that the easiest way

286
00:11:30,389 --> 00:11:35,639
to do it would be to do a create

287
00:11:32,009 --> 00:11:38,069
compatible DC 0 at least that's my

288
00:11:35,639 --> 00:11:39,778
assumption create compatible DC 0 I

289
00:11:38,070 --> 00:11:43,980
believe is the easiest way to say like

290
00:11:39,778 --> 00:11:45,448
just copy the just copy the screens you

291
00:11:43,980 --> 00:11:48,778
see I don't know if we need to do a get

292
00:11:45,448 --> 00:11:50,669
DC 0 I don't think we do but then again

293
00:11:48,778 --> 00:11:52,439
I'm not sure so I'm gonna try that first

294
00:11:50,669 --> 00:11:55,559
again with Windows it's easy to forget

295
00:11:52,440 --> 00:11:57,120
this stuff I often forget this stuff but

296
00:11:55,559 --> 00:11:59,338
then we want to create compatible bitmap

297
00:11:57,120 --> 00:12:00,659
as well and we want to select that in

298
00:11:59,339 --> 00:12:02,100
again like I don't know if

299
00:12:00,659 --> 00:12:04,379
remember way back when we did window

300
00:12:02,100 --> 00:12:05,579
stuff these device context you select

301
00:12:04,379 --> 00:12:07,920
objects into them and those are the

302
00:12:05,578 --> 00:12:09,479
objects that you are going here so for

303
00:12:07,919 --> 00:12:10,889
example you thought you would select

304
00:12:09,480 --> 00:12:13,649
into the thing it's kind of like saying

305
00:12:10,889 --> 00:12:15,480
set the active one so this is like set

306
00:12:13,649 --> 00:12:16,980
the active bitmap set the active fonts

307
00:12:15,480 --> 00:12:18,480
at the active pants at the active brush

308
00:12:16,980 --> 00:12:20,819
blah blah blah blah right that's how it

309
00:12:18,480 --> 00:12:23,789
works so let's take a look create

310
00:12:20,818 --> 00:12:26,519
compatible bitmap here this one we're

311
00:12:23,789 --> 00:12:29,188
just going to use the HDC that we've

312
00:12:26,519 --> 00:12:30,600
already created and we're gonna say what

313
00:12:29,188 --> 00:12:32,730
the width and height is since we know

314
00:12:30,600 --> 00:12:33,810
that we have a certain size size that

315
00:12:32,730 --> 00:12:35,789
we're doing let's just create something

316
00:12:33,809 --> 00:12:38,399
large enough that we know that we'll

317
00:12:35,789 --> 00:12:39,629
always pretty much fill will always have

318
00:12:38,399 --> 00:12:44,909
plenty of room for any character we're

319
00:12:39,629 --> 00:12:48,360
gonna make right and that will return to

320
00:12:44,909 --> 00:12:50,159
us an H bitmap right so here's our

321
00:12:48,360 --> 00:12:53,970
bitmap we go ahead and grab that we

322
00:12:50,159 --> 00:12:56,250
select a bitmap in now we of course want

323
00:12:53,970 --> 00:12:58,860
to be able to make sure that we only do

324
00:12:56,250 --> 00:13:01,259
this once right I mean we don't want to

325
00:12:58,860 --> 00:13:02,730
be doing this all the time so really I

326
00:13:01,259 --> 00:13:04,589
think probably what we want to be doing

327
00:13:02,730 --> 00:13:06,569
is is you know something like this I

328
00:13:04,589 --> 00:13:11,910
don't know what device context actually

329
00:13:06,568 --> 00:13:14,610
returns and fails I assume that let's

330
00:13:11,909 --> 00:13:16,318
take a look here create compatible D see

331
00:13:14,610 --> 00:13:18,509
if there's so the term values the handle

332
00:13:16,318 --> 00:13:20,818
and see if it is just no okay so

333
00:13:18,509 --> 00:13:22,350
basically we can do device context 0 and

334
00:13:20,818 --> 00:13:23,759
we can make that a static again we're in

335
00:13:22,350 --> 00:13:25,139
the asset processor here so anything

336
00:13:23,759 --> 00:13:27,509
goes we don't have to worry at all about

337
00:13:25,139 --> 00:13:29,430
that sort of stuff so if the device

338
00:13:27,509 --> 00:13:33,289
context is not initialized we will just

339
00:13:29,429 --> 00:13:36,568
initialize it right we'll create it so

340
00:13:33,289 --> 00:13:38,099
we'll create a bitmap with that we will

341
00:13:36,568 --> 00:13:41,879
select the bitmap into our device

342
00:13:38,100 --> 00:13:45,740
context like so and then we can draw our

343
00:13:41,879 --> 00:13:51,899
text right so that should do it

344
00:13:45,740 --> 00:13:54,120
of course I need to actually close that

345
00:13:51,899 --> 00:13:56,610
block there we go

346
00:13:54,120 --> 00:13:58,589
and now we're actually you know we're in

347
00:13:56,610 --> 00:14:01,169
some sense we're sort of now extracting

348
00:13:58,589 --> 00:14:03,000
a font but we're not extracting the

349
00:14:01,169 --> 00:14:05,250
right font even because we have not

350
00:14:03,000 --> 00:14:07,350
actually tried to set the font to be

351
00:14:05,250 --> 00:14:09,589
Arial right was the font we were using

352
00:14:07,350 --> 00:14:09,589
before

353
00:14:10,229 --> 00:14:17,619
we didn't even do that hmm right and we

354
00:14:15,278 --> 00:14:19,418
also don't know right we don't even know

355
00:14:17,619 --> 00:14:21,428
how big that font should be we've got we

356
00:14:19,418 --> 00:14:25,509
got all kinds of weird stuff going on

357
00:14:21,428 --> 00:14:27,970
here right so this is this is really a

358
00:14:25,509 --> 00:14:30,339
zygote of a thing it is not really fully

359
00:14:27,970 --> 00:14:32,079
happening and of course we have not yet

360
00:14:30,339 --> 00:14:34,539
actually tried to extract anything

361
00:14:32,078 --> 00:14:38,258
either so we've got a bunch more work to

362
00:14:34,538 --> 00:14:41,229
do here to say the least so let's start

363
00:14:38,259 --> 00:14:43,418
by going all right we've got a couple

364
00:14:41,229 --> 00:14:45,278
things we got to know first of all right

365
00:14:43,418 --> 00:14:47,139
and you remember how easy it was with

366
00:14:45,278 --> 00:14:49,808
Sean's thing right Sean's thing was like

367
00:14:47,139 --> 00:14:51,849
this and that right that was it there's

368
00:14:49,808 --> 00:14:54,098
like two things two calls and we have

369
00:14:51,849 --> 00:14:56,049
the whole thing right we could just

370
00:14:54,099 --> 00:14:57,879
extract everything we wanted all this

371
00:14:56,048 --> 00:15:00,188
code is just our code to like basically

372
00:14:57,879 --> 00:15:04,058
you know turn his bitmap into our format

373
00:15:00,188 --> 00:15:06,548
that was it not not gonna be true for

374
00:15:04,058 --> 00:15:09,009
Windows right windows pre tortured API

375
00:15:06,548 --> 00:15:11,558
even back then it's only gotten worse

376
00:15:09,009 --> 00:15:13,028
but it's pretty tortured so what we need

377
00:15:11,558 --> 00:15:14,948
to do now is we need to do kind of all

378
00:15:13,028 --> 00:15:16,928
the accoutrement first of all we got to

379
00:15:14,948 --> 00:15:20,408
figure out how much space did that text

380
00:15:16,928 --> 00:15:21,578
take up right because Sean told us right

381
00:15:20,408 --> 00:15:23,769
he said here's the width here is the

382
00:15:21,578 --> 00:15:25,598
height but when we draw a text in in

383
00:15:23,769 --> 00:15:27,428
Windows it never did we have no idea

384
00:15:25,599 --> 00:15:29,349
right we have no idea how big it is so

385
00:15:27,428 --> 00:15:31,958
if we want to do that what we have to do

386
00:15:29,349 --> 00:15:34,899
is we have to get some information about

387
00:15:31,958 --> 00:15:36,998
it it doesn't look like they showed it

388
00:15:34,899 --> 00:15:38,470
in the related here but there is a font

389
00:15:36,999 --> 00:15:44,339
and text function called get text

390
00:15:38,470 --> 00:15:46,658
metrics and there's also one called font

391
00:15:44,339 --> 00:15:48,970
well I'm sure I'll see you in here I'm

392
00:15:46,658 --> 00:15:50,619
not remembering it right off the bat but

393
00:15:48,970 --> 00:15:53,109
there's there's basically functions that

394
00:15:50,619 --> 00:15:55,689
will we can query sort of if you will

395
00:15:53,109 --> 00:15:58,959
what the sizes of strings are and that

396
00:15:55,688 --> 00:16:00,519
sort of thing so let's see get text

397
00:15:58,958 --> 00:16:03,608
metrics tells us some of the stuff about

398
00:16:00,519 --> 00:16:05,198
the font that's like how tall it is and

399
00:16:03,609 --> 00:16:07,149
stuff like that so we probably will need

400
00:16:05,198 --> 00:16:08,769
that at some point so I'm gonna just

401
00:16:07,149 --> 00:16:10,509
grab that and put that in there because

402
00:16:08,769 --> 00:16:11,859
we're gonna have to call that once we

403
00:16:10,509 --> 00:16:13,389
get to the part in fonts where we're

404
00:16:11,859 --> 00:16:14,949
actually trying to do like alignment for

405
00:16:13,389 --> 00:16:17,438
the fonts and that sort of thing right

406
00:16:14,948 --> 00:16:20,019
so we got cat text metrics that's gonna

407
00:16:17,438 --> 00:16:22,808
have to happen device context and that

408
00:16:20,019 --> 00:16:24,190
like takes one of these LP text metric

409
00:16:22,808 --> 00:16:26,169
things right

410
00:16:24,190 --> 00:16:32,380
we're gonna want to get that out so

411
00:16:26,169 --> 00:16:35,620
we've got text metric we will ask it to

412
00:16:32,379 --> 00:16:38,379
return us a filled out structure for the

413
00:16:35,620 --> 00:16:41,649
text metrics and eventually we'll kind

414
00:16:38,379 --> 00:16:44,439
of use we'll use that for something okay

415
00:16:41,649 --> 00:16:46,899
so we nakir what else we got

416
00:16:44,440 --> 00:16:50,710
we don't care about that we probably

417
00:16:46,899 --> 00:16:52,870
want get text extent point 32 that does

418
00:16:50,710 --> 00:16:54,460
sound like the function I was thinking

419
00:16:52,870 --> 00:16:55,750
of so let's take a look

420
00:16:54,460 --> 00:16:57,220
computes the width and height to the

421
00:16:55,750 --> 00:16:58,570
specified string of text that's exactly

422
00:16:57,220 --> 00:17:01,990
what we wanted so we're gonna need that

423
00:16:58,570 --> 00:17:05,460
guy right and what this will do is when

424
00:17:01,990 --> 00:17:05,460
we do our text out oops

425
00:17:06,039 --> 00:17:09,849
when we do our text out we want to know

426
00:17:07,838 --> 00:17:12,429
how big it's going to be so we can just

427
00:17:09,849 --> 00:17:14,318
say okay get text extent point 32 here's

428
00:17:12,430 --> 00:17:16,120
the device context here's our cheese

429
00:17:14,318 --> 00:17:19,899
point here's the length of our cheese

430
00:17:16,119 --> 00:17:23,469
point and and then we're gonna have to

431
00:17:19,900 --> 00:17:26,250
actually get that that size parameter

432
00:17:23,470 --> 00:17:31,900
right and that's one of these guys right

433
00:17:26,250 --> 00:17:33,609
hello hello I would like to show the

434
00:17:31,900 --> 00:17:37,180
people on the stream the size parameter

435
00:17:33,609 --> 00:17:38,829
please thank you so this is one of those

436
00:17:37,180 --> 00:17:40,420
and all it is is a structure that has

437
00:17:38,829 --> 00:17:43,839
basically width and height in it that's

438
00:17:40,420 --> 00:17:46,060
all it is right so it's that we would

439
00:17:43,839 --> 00:17:47,919
just say fill that out please and that

440
00:17:46,059 --> 00:17:51,159
would give us the width and the height

441
00:17:47,920 --> 00:17:55,570
right so we can basically say okay but

442
00:17:51,160 --> 00:18:00,759
width is size DX the height is size dots

443
00:17:55,569 --> 00:18:02,859
- I have a party it's all good right so

444
00:18:00,759 --> 00:18:04,750
now at least we would know the region

445
00:18:02,859 --> 00:18:07,329
that the text occupied after we did our

446
00:18:04,750 --> 00:18:12,099
text out so we know kind of what region

447
00:18:07,329 --> 00:18:16,119
we want to grab right so we can start to

448
00:18:12,099 --> 00:18:17,259
do the extraction of the font okay so

449
00:18:16,119 --> 00:18:19,119
that gives us all the information we

450
00:18:17,259 --> 00:18:20,579
need for that but we have a few more

451
00:18:19,119 --> 00:18:22,659
things we kind of need to do here

452
00:18:20,579 --> 00:18:24,009
obviously we're using the same device

453
00:18:22,660 --> 00:18:26,680
kind of search so one thing we have to

454
00:18:24,009 --> 00:18:28,509
do is clear write that region first

455
00:18:26,680 --> 00:18:30,940
right because if we're going to draw the

456
00:18:28,509 --> 00:18:32,980
font into it if look the fit map will be

457
00:18:30,940 --> 00:18:36,539
called for every code point we want to

458
00:18:32,980 --> 00:18:40,500
draw the font right

459
00:18:36,539 --> 00:18:42,779
into a clean bitmap so you want to be

460
00:18:40,500 --> 00:18:45,809
able to clear the background to like

461
00:18:42,779 --> 00:18:47,940
black or something right and then draw a

462
00:18:45,809 --> 00:18:50,549
white bitmap on top of it so that we can

463
00:18:47,940 --> 00:18:52,799
see what the actual values are going to

464
00:18:50,549 --> 00:18:54,869
be and not have the font the glyphs like

465
00:18:52,799 --> 00:18:58,049
pile up on top of each other so we need

466
00:18:54,869 --> 00:19:00,149
some way of clearing this right and I

467
00:18:58,049 --> 00:19:01,829
think we've gone over this long time ago

468
00:19:00,150 --> 00:19:04,530
on the window screen fill rect is the

469
00:19:01,829 --> 00:19:07,230
way in Windows that you can sort of just

470
00:19:04,529 --> 00:19:08,579
clear something out there's a you know

471
00:19:07,230 --> 00:19:10,380
that gives you a rectangle and you can

472
00:19:08,579 --> 00:19:14,759
fill it there's also another one which

473
00:19:10,380 --> 00:19:16,880
is called padlet right which is a little

474
00:19:14,759 --> 00:19:20,119
bit faster and doesn't use a brush right

475
00:19:16,880 --> 00:19:23,160
and so I'm gonna go ahead and use padlet

476
00:19:20,119 --> 00:19:24,569
and you know I shouldn't even say it's a

477
00:19:23,160 --> 00:19:27,000
little bit faster it doesn't use a brush

478
00:19:24,569 --> 00:19:28,710
it's not a little bit faster anymore in

479
00:19:27,000 --> 00:19:30,480
the old days it would have been nowadays

480
00:19:28,710 --> 00:19:31,590
this is all slow because if you want

481
00:19:30,480 --> 00:19:33,839
something fast you have to go through

482
00:19:31,589 --> 00:19:36,000
direct3d or something right

483
00:19:33,839 --> 00:19:40,679
so you know when I say that that's kind

484
00:19:36,000 --> 00:19:43,470
of me offhandedly talking about 1992 so

485
00:19:40,680 --> 00:19:45,990
anyway if we go ahead here and and we

486
00:19:43,470 --> 00:19:47,339
want to do our clear we know the device

487
00:19:45,990 --> 00:19:48,990
counts for clearing honest States we're

488
00:19:47,339 --> 00:19:50,519
drawing our fonts into we know the left

489
00:19:48,990 --> 00:19:51,930
in the right are zero zero because we're

490
00:19:50,519 --> 00:19:53,519
not positioning anything we know the

491
00:19:51,930 --> 00:19:55,410
width and the height because we just did

492
00:19:53,519 --> 00:19:57,210
it and so all we need to know is how do

493
00:19:55,410 --> 00:19:59,490
we set this thing to black right how do

494
00:19:57,210 --> 00:20:02,850
we get a black in there and we've got DW

495
00:19:59,490 --> 00:20:04,200
Rob that's the raster op blackness

496
00:20:02,849 --> 00:20:05,909
happens to be one of them we can

497
00:20:04,200 --> 00:20:07,259
literally just say we want you to fill

498
00:20:05,910 --> 00:20:09,750
the area with black that's one of the

499
00:20:07,259 --> 00:20:11,879
raster operations it knows how to do by

500
00:20:09,750 --> 00:20:14,430
default so we can just full-on clear the

501
00:20:11,880 --> 00:20:17,910
thing that way and now we're just gonna

502
00:20:14,430 --> 00:20:20,190
write in every time right and that's all

503
00:20:17,910 --> 00:20:23,790
good that is all good

504
00:20:20,190 --> 00:20:27,809
however we've still got more nonsense

505
00:20:23,789 --> 00:20:29,279
coming because when we Pat lit the

506
00:20:27,809 --> 00:20:31,710
blackness in there remember when we do

507
00:20:29,279 --> 00:20:34,440
the text out we haven't said what color

508
00:20:31,710 --> 00:20:36,210
the text should be and so the text could

509
00:20:34,440 --> 00:20:37,920
very easily come out black because I

510
00:20:36,210 --> 00:20:39,809
think the default vertex may even be

511
00:20:37,920 --> 00:20:42,090
black so we'd end up with black text on

512
00:20:39,809 --> 00:20:45,480
a black background that will not help us

513
00:20:42,089 --> 00:20:47,459
extract this font in any way so we need

514
00:20:45,480 --> 00:20:50,519
to do something to change that font

515
00:20:47,460 --> 00:20:52,950
color and wouldn't you know it it

516
00:20:50,519 --> 00:20:56,690
actually called set text color fairly

517
00:20:52,950 --> 00:20:59,549
reasonably named function SEC text color

518
00:20:56,690 --> 00:21:01,529
allows us to say what we want our text

519
00:20:59,549 --> 00:21:04,019
color to be so we can say set text color

520
00:21:01,529 --> 00:21:06,779
of the device context we can set that

521
00:21:04,019 --> 00:21:09,240
color to a color F which is just white

522
00:21:06,779 --> 00:21:12,059
and windows actually has a thing for

523
00:21:09,240 --> 00:21:14,519
that which is it's RGB it's a little

524
00:21:12,059 --> 00:21:16,799
macro which you can just say RGB to to

525
00:21:14,519 --> 00:21:18,809
52525 right that's one way of quickly

526
00:21:16,799 --> 00:21:20,879
specifying one of those color F

527
00:21:18,809 --> 00:21:23,909
structures which is just a way of saying

528
00:21:20,880 --> 00:21:26,430
I want you know ffffff to be what you

529
00:21:23,910 --> 00:21:30,480
write in all the pixels where the text

530
00:21:26,430 --> 00:21:32,549
is okay so that will write white text on

531
00:21:30,480 --> 00:21:35,430
top of a black backdrop which means we

532
00:21:32,549 --> 00:21:37,710
could now if we wanted to try doing some

533
00:21:35,430 --> 00:21:41,580
extraction that code is going to look

534
00:21:37,710 --> 00:21:43,980
exactly the same as it did in the case

535
00:21:41,579 --> 00:21:46,679
with Shawn's right we are going to want

536
00:21:43,980 --> 00:21:49,079
to allocate some memory do the little

537
00:21:46,680 --> 00:21:50,700
dance of fun right we're going to want

538
00:21:49,079 --> 00:21:52,289
to extract stuff but instead of

539
00:21:50,700 --> 00:21:54,720
extracting it from a mono a bitmap this

540
00:21:52,289 --> 00:21:56,879
time since we're going to be doing the

541
00:21:54,720 --> 00:21:58,529
slow path there the dead pixel path what

542
00:21:56,880 --> 00:22:01,050
we need to do is actually replace this

543
00:21:58,529 --> 00:22:03,660
call where we get the Alpha we what we

544
00:22:01,049 --> 00:22:04,889
need to do is replace that with the get

545
00:22:03,660 --> 00:22:06,750
pixel call that I was talking about

546
00:22:04,890 --> 00:22:08,580
before where we ask the device context

547
00:22:06,750 --> 00:22:10,680
what the pixel is at a particular

548
00:22:08,579 --> 00:22:16,409
location so we go in there and say okay

549
00:22:10,680 --> 00:22:18,420
that pixel here it is you know taking a

550
00:22:16,410 --> 00:22:20,460
look at it it needs the HDC the X and

551
00:22:18,420 --> 00:22:22,350
the y pose right and we've got those we

552
00:22:20,460 --> 00:22:27,930
know we're extracting this if x and y

553
00:22:22,349 --> 00:22:31,230
right and yeah and so that's all pretty

554
00:22:27,930 --> 00:22:32,640
much good right everything's fine we may

555
00:22:31,230 --> 00:22:35,160
I don't remember whether this will come

556
00:22:32,640 --> 00:22:36,420
in upside down or right side up so we

557
00:22:35,160 --> 00:22:37,680
don't know whether we want to keep the

558
00:22:36,420 --> 00:22:40,470
flipping that we were doing in Shawn's

559
00:22:37,680 --> 00:22:42,390
path because I don't remember what it

560
00:22:40,470 --> 00:22:43,650
will do by default what the X&amp;Y

561
00:22:42,390 --> 00:22:45,090
coordinates are where they'll start in

562
00:22:43,650 --> 00:22:46,650
the bottom left or the top right it's

563
00:22:45,089 --> 00:22:48,869
been way too long

564
00:22:46,650 --> 00:22:50,610
so I don't know but point being that get

565
00:22:48,869 --> 00:22:53,759
pixel call will return us a color rest

566
00:22:50,609 --> 00:22:57,689
structure and so we're gonna get back a

567
00:22:53,759 --> 00:22:59,069
color ref this is the pixel and so what

568
00:22:57,690 --> 00:23:01,230
we can do there is take a look at that

569
00:22:59,069 --> 00:23:03,029
it's a D word right and since we're

570
00:23:01,230 --> 00:23:04,059
writing white in there and we know it's

571
00:23:03,029 --> 00:23:05,980
B bgg

572
00:23:04,059 --> 00:23:07,539
our our we could take any one of these

573
00:23:05,980 --> 00:23:09,970
three and treat that as the alphas are

574
00:23:07,539 --> 00:23:12,460
all going to be the same vbg grr so we

575
00:23:09,970 --> 00:23:15,069
can literally for our u8 alpha we can

576
00:23:12,460 --> 00:23:17,829
just take the pixel we can end it with

577
00:23:15,069 --> 00:23:21,429
echo X FF that extracts the red Channel

578
00:23:17,829 --> 00:23:27,519
cast it to a u8 and that is all she

579
00:23:21,430 --> 00:23:30,940
wrote right so that's all good what is

580
00:23:27,519 --> 00:23:34,559
the problem cannot convert ah right

581
00:23:30,940 --> 00:23:37,900
that's probably a W function yes it is

582
00:23:34,559 --> 00:23:38,799
all right so let's take a look at what

583
00:23:37,900 --> 00:23:41,470
we've got now

584
00:23:38,799 --> 00:23:44,230
I think that's roughly the outline of

585
00:23:41,470 --> 00:23:45,940
something that extracts a font we are

586
00:23:44,230 --> 00:23:52,049
not setting the font yet so we're not

587
00:23:45,940 --> 00:23:54,850
gonna get Arial but that is roughly

588
00:23:52,049 --> 00:23:58,389
modulo bugs what we would love to have

589
00:23:54,849 --> 00:24:02,259
to do create a compatible DC select a

590
00:23:58,390 --> 00:24:04,750
compatible bitmap into that this is kind

591
00:24:02,259 --> 00:24:08,410
of waiting around for later figure out

592
00:24:04,750 --> 00:24:12,430
how big it's going to be clear it draw

593
00:24:08,410 --> 00:24:14,590
it in white extract each PI pixel by

594
00:24:12,430 --> 00:24:15,670
pixel and again this is very slow way to

595
00:24:14,589 --> 00:24:16,959
do it because we're not reading them we

596
00:24:15,670 --> 00:24:18,820
are making an operating system call

597
00:24:16,960 --> 00:24:23,200
every time to get that pixel so super

598
00:24:18,819 --> 00:24:26,589
slow but you know will should in theory

599
00:24:23,200 --> 00:24:30,430
work pack it back up as usual and that

600
00:24:26,589 --> 00:24:32,409
is the end of of the party right so

601
00:24:30,430 --> 00:24:34,960
that's basically everything okay so

602
00:24:32,410 --> 00:24:37,090
let's go ahead and and test that out

603
00:24:34,960 --> 00:24:39,819
we'll see if that works at all remember

604
00:24:37,089 --> 00:24:44,679
using the current stuff that we've got

605
00:24:39,819 --> 00:24:46,869
using s DB Lib for our font extraction

606
00:24:44,680 --> 00:24:50,049
this is what things should look like

607
00:24:46,869 --> 00:24:53,229
right it's it's sort of sprays nothing's

608
00:24:50,049 --> 00:24:55,509
all over the place and so if we wanted

609
00:24:53,230 --> 00:24:59,829
to test this we should be able to

610
00:24:55,509 --> 00:25:02,950
rebuild the asset library rank by going

611
00:24:59,829 --> 00:25:05,439
build test asset builder right that

612
00:25:02,950 --> 00:25:07,509
should rewrite all of our asset files we

613
00:25:05,440 --> 00:25:10,390
can look and see that we have rewriting

614
00:25:07,509 --> 00:25:14,890
them for today which is the 5th of

615
00:25:10,390 --> 00:25:17,830
August right and now we can run and see

616
00:25:14,890 --> 00:25:19,660
if we did anything at all

617
00:25:17,829 --> 00:25:22,509
which we don't know if we did or not

618
00:25:19,660 --> 00:25:26,110
right we have no idea where is our Emma

619
00:25:22,509 --> 00:25:28,150
step there it is right so there we go

620
00:25:26,109 --> 00:25:31,389
not great you can see that it's just

621
00:25:28,150 --> 00:25:35,500
solid which is not at all what we want

622
00:25:31,390 --> 00:25:37,630
to see right but it doesn't look totally

623
00:25:35,500 --> 00:25:39,880
wrong in the sense that the sizes seem

624
00:25:37,630 --> 00:25:43,330
right so we're not you know we're not

625
00:25:39,880 --> 00:25:46,809
catastrophic ly bad we're just not good

626
00:25:43,329 --> 00:25:50,829
right so now we get to try and figure

627
00:25:46,808 --> 00:25:52,178
out what went wrong and maybe that first

628
00:25:50,829 --> 00:25:59,339
involves me taking another drink of my

629
00:25:52,179 --> 00:26:02,019
lemonade like so okay so what exactly

630
00:25:59,339 --> 00:26:03,548
could be the culprits here it seems to

631
00:26:02,019 --> 00:26:06,789
me like it's you know it's pretty clear

632
00:26:03,548 --> 00:26:10,119
from looking at that that the Alpha is

633
00:26:06,789 --> 00:26:14,740
always we're always getting white right

634
00:26:10,119 --> 00:26:17,979
we're always getting back to 55 which is

635
00:26:14,740 --> 00:26:20,710
not what we want to see so even though

636
00:26:17,980 --> 00:26:22,329
when we call get text extent point 32 W

637
00:26:20,710 --> 00:26:25,509
it looks like it's returning us the

638
00:26:22,329 --> 00:26:27,699
correct size for the character for some

639
00:26:25,509 --> 00:26:31,480
reason are either our patent lit to

640
00:26:27,700 --> 00:26:35,019
blackness is not working right or our

641
00:26:31,480 --> 00:26:37,900
set text color is not setting it to

642
00:26:35,019 --> 00:26:39,519
white or something like this right

643
00:26:37,900 --> 00:26:41,820
well no that can't be it because it

644
00:26:39,519 --> 00:26:44,500
pretty much has to be this guy because

645
00:26:41,819 --> 00:26:51,789
you know if we were to take a look at

646
00:26:44,500 --> 00:26:52,660
doing nothing right I know who's at

647
00:26:51,789 --> 00:26:58,418
fault here

648
00:26:52,660 --> 00:26:59,740
I know exactly who's at fault here I'm

649
00:26:58,419 --> 00:27:03,340
gonna run a little test

650
00:26:59,740 --> 00:27:08,230
I'm gonna run tests what if we set the

651
00:27:03,339 --> 00:27:09,970
text color to black mm-hmm what if what

652
00:27:08,230 --> 00:27:13,599
do you guys think would happen if I set

653
00:27:09,970 --> 00:27:17,798
the text color to black I'm a little

654
00:27:13,599 --> 00:27:19,750
test for y'all well surprise surprise

655
00:27:17,798 --> 00:27:22,569
all the letters show up and they're

656
00:27:19,750 --> 00:27:25,359
inverse video what happened here well

657
00:27:22,569 --> 00:27:26,740
I'll tell you what happened here that's

658
00:27:25,359 --> 00:27:28,539
one of those hey I've been programming

659
00:27:26,740 --> 00:27:30,190
window so long I even remember all the

660
00:27:28,539 --> 00:27:31,778
bugs I used to have and this is

661
00:27:30,190 --> 00:27:33,190
one of them that you always have because

662
00:27:31,778 --> 00:27:36,398
you would not think that this would be

663
00:27:33,190 --> 00:27:39,278
the default but it is the default when

664
00:27:36,398 --> 00:27:44,398
you draw text in Windows there is like a

665
00:27:39,278 --> 00:27:49,808
set text became owed or set became owed

666
00:27:44,398 --> 00:27:52,148
nonsense this function right this

667
00:27:49,808 --> 00:27:55,528
function determines whether or not

668
00:27:52,148 --> 00:27:59,258
drawing actually leaves the background

669
00:27:55,528 --> 00:28:01,298
in its original state or whether it will

670
00:27:59,259 --> 00:28:05,980
fill it with the background brush when

671
00:28:01,298 --> 00:28:10,388
it draws right so what we can do we have

672
00:28:05,980 --> 00:28:12,819
two choices we can set VK mode to be

673
00:28:10,388 --> 00:28:15,369
transparent and then this would work

674
00:28:12,819 --> 00:28:17,439
fine but what was basically happening

675
00:28:15,369 --> 00:28:21,069
there right was it was drawing the font

676
00:28:17,440 --> 00:28:23,110
in in white but filling the whole region

677
00:28:21,069 --> 00:28:24,939
around the font in white as well because

678
00:28:23,109 --> 00:28:27,369
that's what it's Specter to do right

679
00:28:24,940 --> 00:28:30,009
it's it's obliterating the background

680
00:28:27,369 --> 00:28:32,619
behind it which was black so we could

681
00:28:30,009 --> 00:28:35,528
select in a black brush as the

682
00:28:32,619 --> 00:28:37,268
background color right and that would

683
00:28:35,528 --> 00:28:39,220
fix it as well that seems a little

684
00:28:37,269 --> 00:28:41,259
clever because then we can get rid of

685
00:28:39,220 --> 00:28:45,419
Pat black right we could turn off Pat

686
00:28:41,259 --> 00:28:49,298
plet select in a background brush right

687
00:28:45,419 --> 00:28:51,278
and that seems kind of Supes kind of

688
00:28:49,298 --> 00:28:53,019
creative right it seems kind of creative

689
00:28:51,278 --> 00:28:55,240
rather than setting the mode to

690
00:28:53,019 --> 00:28:58,240
transparent we could just do it that way

691
00:28:55,240 --> 00:29:01,058
right I feel like that's I feel like

692
00:28:58,240 --> 00:29:02,319
that's you know possibility I'm just

693
00:29:01,058 --> 00:29:04,359
gonna I don't even remember how to do

694
00:29:02,319 --> 00:29:09,308
background brushes I'm just gonna search

695
00:29:04,359 --> 00:29:14,369
and see hey let's see windows set

696
00:29:09,308 --> 00:29:23,589
background brush let's take a look let's

697
00:29:14,369 --> 00:29:25,119
take look do what do you do the system

698
00:29:23,589 --> 00:29:27,009
feeds the background for window organs I

699
00:29:25,119 --> 00:29:28,569
don't care about any of this I don't I

700
00:29:27,009 --> 00:29:31,538
want I don't want the window but I don't

701
00:29:28,569 --> 00:29:33,788
want the window background I want I want

702
00:29:31,538 --> 00:29:40,319
the device I want that HDC I want the

703
00:29:33,788 --> 00:29:40,319
DC's background background color

704
00:29:40,799 --> 00:29:52,678
set DC brush color how about that set DC

705
00:29:46,359 --> 00:29:56,379
brush color set DC brush color

706
00:29:52,679 --> 00:29:58,630
let's see set DC brush color function

707
00:29:56,380 --> 00:30:00,010
sets the device current device contacts

708
00:29:58,630 --> 00:30:01,300
each brush for the specified color value

709
00:30:00,009 --> 00:30:03,910
it's advise cannot represents medical

710
00:30:01,299 --> 00:30:05,859
records there's physical color let's see

711
00:30:03,910 --> 00:30:07,330
when the stock DC brushless active you

712
00:30:05,859 --> 00:30:09,339
see this UPS controlling one with the DC

713
00:30:07,329 --> 00:30:12,129
brush color the default EC brush color

714
00:30:09,339 --> 00:30:15,129
is white that is our problem we want it

715
00:30:12,130 --> 00:30:17,790
to be black let's just give this a shot

716
00:30:15,130 --> 00:30:22,450
ladies and gentlemen Windows GDI

717
00:30:17,789 --> 00:30:25,420
let is let us just see what it does if

718
00:30:22,450 --> 00:30:30,220
we full-on say the background is now

719
00:30:25,420 --> 00:30:35,160
black alright will it work will it not

720
00:30:30,220 --> 00:30:35,160
work we don't know but off we go

721
00:30:35,779 --> 00:30:41,420
that does not look very reassuring that

722
00:30:39,650 --> 00:30:44,420
is exactly where we were before

723
00:30:41,420 --> 00:30:47,720
I am unimpressed I am unimpressed by

724
00:30:44,420 --> 00:30:49,670
that so set Dec brush color does not see

725
00:30:47,720 --> 00:30:53,390
is there a D is there a background blush

726
00:30:49,670 --> 00:30:55,310
color let's take a look let's take a

727
00:30:53,390 --> 00:30:56,630
look at the device context reference

728
00:30:55,309 --> 00:30:57,500
this is something that if you programmed

729
00:30:56,630 --> 00:30:59,630
Windows GDI

730
00:30:57,500 --> 00:31:01,910
like when I used to program a gel I

731
00:30:59,630 --> 00:31:06,020
would just know this so it's not like

732
00:31:01,910 --> 00:31:08,120
it's that hard but anyway set DC brush

733
00:31:06,019 --> 00:31:10,759
color set to see pen color sat layout

734
00:31:08,119 --> 00:31:16,759
release DC get stock object I was a type

735
00:31:10,759 --> 00:31:22,009
gonna play out I don't know here I'm not

736
00:31:16,759 --> 00:31:25,279
sure this doesn't have set text color in

737
00:31:22,009 --> 00:31:30,140
it which is a little bit weird why

738
00:31:25,279 --> 00:31:32,980
doesn't it set text color it's a little

739
00:31:30,140 --> 00:31:36,860
bit fishy wouldn't you say I would say

740
00:31:32,980 --> 00:31:37,960
font and text functions oh it's right

741
00:31:36,859 --> 00:31:41,509
there

742
00:31:37,960 --> 00:31:42,620
okay set PG colorist functions the

743
00:31:41,509 --> 00:31:43,789
current bar color use special color

744
00:31:42,619 --> 00:31:45,679
value where's the nearest color in it so

745
00:31:43,789 --> 00:31:47,599
okay blah blah blah so actually fills

746
00:31:45,680 --> 00:31:48,680
the gaps between styled lines drawings

747
00:31:47,599 --> 00:31:50,449
you append creating the create pen

748
00:31:48,680 --> 00:31:53,120
function does not fill the gas swing

749
00:31:50,450 --> 00:31:54,860
styled lines so you think this is what

750
00:31:53,119 --> 00:31:56,209
the font does if the FOB arm is opaque

751
00:31:54,859 --> 00:31:57,859
the back encourage you to feel gasping

752
00:31:56,210 --> 00:31:59,269
style I bet this is just it's just using

753
00:31:57,859 --> 00:32:03,609
this so we don't even need the brush

754
00:31:59,269 --> 00:32:08,750
it's just set DK color man oh man

755
00:32:03,609 --> 00:32:11,079
alright set BK color let's try it one

756
00:32:08,750 --> 00:32:11,079
more time

757
00:32:14,509 --> 00:32:22,640
there we go so there we go that's how

758
00:32:19,589 --> 00:32:22,639
you extract the pond with Windows

759
00:32:23,529 --> 00:32:32,089
and again you can choose kind of how you

760
00:32:27,740 --> 00:32:33,079
want to do that on the operate system

761
00:32:32,089 --> 00:32:34,159
there's different operating systems

762
00:32:33,079 --> 00:32:36,139
different options different ways to do

763
00:32:34,160 --> 00:32:39,560
it but you can do the same thing in

764
00:32:36,140 --> 00:32:41,630
other platforms as well it's just a more

765
00:32:39,559 --> 00:32:43,759
Byzantine nonsense like what I just went

766
00:32:41,630 --> 00:32:45,260
through in a different way so anyway

767
00:32:43,759 --> 00:32:46,670
that extracts the fonts from windows the

768
00:32:45,259 --> 00:32:49,759
problem that we have right now is we are

769
00:32:46,670 --> 00:32:51,710
unable to pick the font that we want and

770
00:32:49,759 --> 00:32:54,140
we would like to be able to pick the

771
00:32:51,710 --> 00:32:57,259
font that we want right we would like to

772
00:32:54,140 --> 00:33:00,680
be able to create a font and render with

773
00:32:57,259 --> 00:33:02,480
that font so there is a way to do that

774
00:33:00,680 --> 00:33:04,370
it is unsurprisingly called create font

775
00:33:02,480 --> 00:33:07,329
and also create font in direct there are

776
00:33:04,369 --> 00:33:12,109
different ways of creating fonts and

777
00:33:07,329 --> 00:33:14,029
they are really really really annoying

778
00:33:12,109 --> 00:33:17,029
the reason they are annoying is because

779
00:33:14,029 --> 00:33:18,559
you know and I I want to say I've never

780
00:33:17,029 --> 00:33:20,359
even figured out a way to do this I

781
00:33:18,559 --> 00:33:22,609
didn't try admittedly I've never tried

782
00:33:20,359 --> 00:33:25,759
particularly hard but in my recollection

783
00:33:22,609 --> 00:33:29,750
I don't think I ever really knew a way

784
00:33:25,759 --> 00:33:32,839
to create a font from just a file on the

785
00:33:29,750 --> 00:33:35,599
drive right like just hey here's a file

786
00:33:32,839 --> 00:33:39,759
name man I just want to create a font

787
00:33:35,599 --> 00:33:42,109
that's this file name never never

788
00:33:39,759 --> 00:33:44,710
figured out a way to do that and if you

789
00:33:42,109 --> 00:33:46,909
look at the font text reference it's not

790
00:33:44,710 --> 00:33:47,660
it's not straightforward how to do that

791
00:33:46,910 --> 00:33:50,269
right

792
00:33:47,660 --> 00:33:52,700
you've kind of got these things here for

793
00:33:50,269 --> 00:33:56,240
creating fonts I I don't actually

794
00:33:52,700 --> 00:33:58,340
remember you know it might be add font

795
00:33:56,240 --> 00:34:01,819
resource maybe is this a new thing that

796
00:33:58,339 --> 00:34:03,470
this adds went from a file name right so

797
00:34:01,819 --> 00:34:09,440
this looks like it I don't know if that

798
00:34:03,470 --> 00:34:10,820
adds permanently or not I'm not sure any

799
00:34:09,440 --> 00:34:12,170
application that as removes fonts from

800
00:34:10,820 --> 00:34:14,960
the system font Oh should notify their

801
00:34:12,170 --> 00:34:16,789
windows of the change when application

802
00:34:14,960 --> 00:34:18,470
no longer needs a font resource that is

803
00:34:16,789 --> 00:34:21,739
loaded by ad font research your move

804
00:34:18,469 --> 00:34:24,169
font resource so yeah so I don't think I

805
00:34:21,739 --> 00:34:25,669
ever figured out a way to just say I

806
00:34:24,170 --> 00:34:27,800
want to create a font from a file I

807
00:34:25,670 --> 00:34:29,510
don't want it to be loaded into Windows

808
00:34:27,800 --> 00:34:32,570
I just want to draw some text with just

809
00:34:29,510 --> 00:34:34,850
that font and then I'm gonna be done I'm

810
00:34:32,570 --> 00:34:36,260
pretty sure the only way you can do

811
00:34:34,849 --> 00:34:39,949
something approximating that

812
00:34:36,260 --> 00:34:44,050
is by using ad font resource which kind

813
00:34:39,949 --> 00:34:46,849
of adds it like to the whole thing right

814
00:34:44,050 --> 00:34:48,769
it sort of makes it like pulls it into

815
00:34:46,849 --> 00:34:51,500
Windows as a system rather than just

816
00:34:48,769 --> 00:34:53,239
privately to you but I'm pretty sure

817
00:34:51,500 --> 00:34:56,809
that's the only way you can actually do

818
00:34:53,239 --> 00:34:58,669
it yeah people who program GDI more

819
00:34:56,809 --> 00:35:01,039
these days might know of a better way

820
00:34:58,670 --> 00:35:03,500
but I don't I don't think there was a

821
00:35:01,039 --> 00:35:05,539
way so if we take a look at this guy

822
00:35:03,500 --> 00:35:07,519
it's it's roughly what we do want though

823
00:35:05,539 --> 00:35:08,779
I think and again this is this is

824
00:35:07,519 --> 00:35:11,119
supported pretty much everywhere at this

825
00:35:08,780 --> 00:35:12,950
point so that's fine ad font resource ax

826
00:35:11,119 --> 00:35:16,849
that will be the thing that would allow

827
00:35:12,949 --> 00:35:19,159
us to you know sort of give it a TTFN

828
00:35:16,849 --> 00:35:21,589
that it would add into Windows and then

829
00:35:19,159 --> 00:35:23,329
we could say for example private which

830
00:35:21,590 --> 00:35:26,660
is that like we don't actually want you

831
00:35:23,329 --> 00:35:28,130
to share this with anybody so I'm gonna

832
00:35:26,659 --> 00:35:31,069
go that route I think that's probably

833
00:35:28,130 --> 00:35:33,769
the easiest way to go this will get the

834
00:35:31,070 --> 00:35:38,200
font into Windows so add font resource

835
00:35:33,769 --> 00:35:40,880
DX right we'll pass it that filename

836
00:35:38,199 --> 00:35:47,299
then we'll pass it that private flag

837
00:35:40,880 --> 00:35:50,960
right if our private like so and we will

838
00:35:47,300 --> 00:35:53,330
pass it the zero out there right so that

839
00:35:50,960 --> 00:35:56,389
would that would add that font resource

840
00:35:53,329 --> 00:35:58,429
the problem is I don't know how I get

841
00:35:56,389 --> 00:36:01,750
out the font from that like meaning once

842
00:35:58,429 --> 00:36:04,519
we add one how do I and how does it know

843
00:36:01,750 --> 00:36:07,099
which one let's see maybe font memories

844
00:36:04,519 --> 00:36:09,800
just probably uses one from font yeah it

845
00:36:07,099 --> 00:36:12,139
does that's loading for memory so if I

846
00:36:09,800 --> 00:36:14,240
get back one from ad font IX I'm gonna

847
00:36:12,139 --> 00:36:15,679
get back an integer here and it just

848
00:36:14,239 --> 00:36:17,329
tells me how many fonts were added I

849
00:36:15,679 --> 00:36:20,710
don't actually know how I actually get

850
00:36:17,329 --> 00:36:22,670
those fonts the font will not be present

851
00:36:20,710 --> 00:36:24,019
thoughtless in the registry you install

852
00:36:22,670 --> 00:36:25,460
a to location other than the window

853
00:36:24,019 --> 00:36:28,759
fonts folder cannot be modified later

854
00:36:25,460 --> 00:36:30,949
replaced blah blah blah but there's

855
00:36:28,760 --> 00:36:32,570
nowhere to actually use that font is

856
00:36:30,949 --> 00:36:34,460
there like there's just no way to

857
00:36:32,570 --> 00:36:37,970
actually say I want to use I want to

858
00:36:34,460 --> 00:36:39,349
create font that font right I mean am I

859
00:36:37,969 --> 00:36:41,719
missing it but I don't I don't think

860
00:36:39,349 --> 00:36:45,739
there is so we would also have to know

861
00:36:41,719 --> 00:36:47,689
what the font that we were going to use

862
00:36:45,739 --> 00:36:48,989
was actually called right we'd have to

863
00:36:47,690 --> 00:36:51,780
know the name

864
00:36:48,989 --> 00:36:59,129
and so let me double check ad font

865
00:36:51,780 --> 00:37:03,269
resource the X example just to see if

866
00:36:59,130 --> 00:37:04,019
anyone knows how to do something like

867
00:37:03,269 --> 00:37:11,809
that

868
00:37:04,019 --> 00:37:18,320
and it looks like they don't they just

869
00:37:11,809 --> 00:37:18,320
don't know how to do it so I'm guessing

870
00:37:20,780 --> 00:37:25,440
the Internet does not seem to know so

871
00:37:23,940 --> 00:37:27,929
I'm guessing you just can't do it so

872
00:37:25,440 --> 00:37:29,670
after you add the font resource you need

873
00:37:27,929 --> 00:37:32,730
an additional piece of information right

874
00:37:29,670 --> 00:37:34,889
which is the font name now SPB doesn't

875
00:37:32,730 --> 00:37:36,119
need that although you might argue that

876
00:37:34,889 --> 00:37:38,159
it doesn't need that if you wanted to

877
00:37:36,119 --> 00:37:40,710
actually search through TTF files and

878
00:37:38,159 --> 00:37:42,449
pick a specific font but in Windows we

879
00:37:40,710 --> 00:37:44,070
absolutely need that because the only

880
00:37:42,449 --> 00:37:46,559
way we can do it is to first add the

881
00:37:44,070 --> 00:37:48,510
file name into the font set in Windows

882
00:37:46,559 --> 00:37:51,509
but then we have to pull out that font

883
00:37:48,510 --> 00:37:53,490
again right we have to have know what

884
00:37:51,510 --> 00:37:55,890
the actual face is called not the file

885
00:37:53,489 --> 00:37:58,679
name to tell it which font we're

886
00:37:55,889 --> 00:38:02,069
creating here right so if we were to do

887
00:37:58,679 --> 00:38:05,659
create font now at this point to make

888
00:38:02,070 --> 00:38:08,370
one of these fonts right we have to

889
00:38:05,659 --> 00:38:10,199
specify all this nonsense and then at

890
00:38:08,369 --> 00:38:14,099
the end this is the part that's actually

891
00:38:10,199 --> 00:38:16,469
the business end there the LPC - LPC

892
00:38:14,099 --> 00:38:19,949
Teamster part that's the part where we

893
00:38:16,469 --> 00:38:22,589
would pass the font name in to the

894
00:38:19,949 --> 00:38:25,409
system right so now we've got to fill

895
00:38:22,590 --> 00:38:27,510
out all this stuff but that's just kind

896
00:38:25,409 --> 00:38:29,879
of a grind through the docs nothing

897
00:38:27,510 --> 00:38:32,040
particularly weird happening height if

898
00:38:29,880 --> 00:38:33,809
you set a negative value it's just a

899
00:38:32,039 --> 00:38:38,119
little convention here greater than zero

900
00:38:33,809 --> 00:38:38,119
I believe it's a match

901
00:38:42,250 --> 00:38:47,780
yeah so if you use zero it uses the

902
00:38:45,800 --> 00:38:49,670
default if you use greater than zero it

903
00:38:47,780 --> 00:38:51,200
transforms it into device units and

904
00:38:49,670 --> 00:38:52,789
matches it against the cell height

905
00:38:51,199 --> 00:38:54,289
availa fonts if you use it less than

906
00:38:52,789 --> 00:38:56,529
zero it transforms valuations that

907
00:38:54,289 --> 00:38:58,789
matches matches its absolute value

908
00:38:56,530 --> 00:39:01,190
against character height so I guess it's

909
00:38:58,789 --> 00:39:03,259
like kind of saying hey if I if the

910
00:39:01,190 --> 00:39:05,980
thing was upside down or something like

911
00:39:03,260 --> 00:39:08,840
that I don't even know I'm not even sure

912
00:39:05,980 --> 00:39:15,079
what even that's trying to say let's see

913
00:39:08,840 --> 00:39:16,400
here for the M text mapping boutique use

914
00:39:15,079 --> 00:39:20,509
the flying for I specify a height or a

915
00:39:16,400 --> 00:39:21,800
font with a specified point size I don't

916
00:39:20,510 --> 00:39:26,750
really care about that I actually wanted

917
00:39:21,800 --> 00:39:28,220
to just use pixels the character a photo

918
00:39:26,750 --> 00:39:29,780
also knows the am height is the

919
00:39:28,219 --> 00:39:31,639
character of cell height value minus the

920
00:39:29,780 --> 00:39:32,960
internal leading value the flat member

921
00:39:31,639 --> 00:39:36,259
trivia suppose in the following manner

922
00:39:32,960 --> 00:39:38,119
yeah so I don't know what to play with

923
00:39:36,260 --> 00:39:40,160
that a little bit I feel like we may

924
00:39:38,119 --> 00:39:41,929
have to do a transformation to get out

925
00:39:40,159 --> 00:39:43,909
to actually figure out what value we

926
00:39:41,929 --> 00:39:48,469
want to pass here to get the right pixel

927
00:39:43,909 --> 00:39:51,920
size yeah cuz we don't want points we

928
00:39:48,469 --> 00:39:53,149
want pixels anyway no big deal we'll

929
00:39:51,920 --> 00:39:55,820
figure out the height in a second height

930
00:39:53,150 --> 00:39:57,440
we'll just say for now is is I don't

931
00:39:55,820 --> 00:40:00,500
even remember what we were specifying in

932
00:39:57,440 --> 00:40:02,860
Jin Shawn's 1 128 or something like that

933
00:40:00,500 --> 00:40:06,619
is that correct

934
00:40:02,860 --> 00:40:09,280
128 yeah so I don't know we'll just say

935
00:40:06,619 --> 00:40:13,309
it's 128 for now but we'll do it to do a

936
00:40:09,280 --> 00:40:17,930
see you figure out how to specify pixels

937
00:40:13,309 --> 00:40:20,210
properly here so in the height will just

938
00:40:17,929 --> 00:40:22,759
say height the width of the font we

939
00:40:20,210 --> 00:40:24,800
don't actually care because we don't

940
00:40:22,760 --> 00:40:27,410
want to specify any kind of stretching

941
00:40:24,800 --> 00:40:29,240
or anything like that the escapement in

942
00:40:27,409 --> 00:40:31,670
fonts is just a sort of way of saying

943
00:40:29,239 --> 00:40:33,079
how rotated you want the font to be like

944
00:40:31,670 --> 00:40:35,930
if you're trying to do text on an angle

945
00:40:33,079 --> 00:40:39,170
we don't really want any of that right

946
00:40:35,929 --> 00:40:41,960
we want it to be to be 0 which is the

947
00:40:39,170 --> 00:40:44,090
it's the angle between the x-axis and

948
00:40:41,960 --> 00:40:45,880
the angle of the font so we want to just

949
00:40:44,090 --> 00:40:50,120
run straight across the x-axis so that's

950
00:40:45,880 --> 00:40:55,450
0 if that makes sense so anyway

951
00:40:50,119 --> 00:40:55,449
same is true use me same is true of the

952
00:40:55,690 --> 00:41:00,740
orientation which is saying how the

953
00:40:57,949 --> 00:41:05,298
letters are spun the escapements like

954
00:41:00,739 --> 00:41:07,338
the escapements like the running of the

955
00:41:05,298 --> 00:41:10,130
actual text right but then the letters

956
00:41:07,338 --> 00:41:12,558
themselves can can be sort of rotated

957
00:41:10,130 --> 00:41:15,019
similarly so we don't want the letters

958
00:41:12,559 --> 00:41:16,789
rotated either because we can always

959
00:41:15,018 --> 00:41:19,239
rotate them ourselves in the game right

960
00:41:16,789 --> 00:41:25,339
so we just want them upright standard

961
00:41:19,239 --> 00:41:29,568
for the FN weight I think we don't care

962
00:41:25,338 --> 00:41:31,818
we probably want normal I would say if

963
00:41:29,568 --> 00:41:35,599
we have a choice that would be my guess

964
00:41:31,818 --> 00:41:37,969
so let's just do normal for italic we

965
00:41:35,599 --> 00:41:38,869
don't want italics right maybe I'll

966
00:41:37,969 --> 00:41:48,798
label these

967
00:41:38,869 --> 00:41:56,500
this is italic this is weight right

968
00:41:48,798 --> 00:41:56,500
this is underlined this is strikeout

969
00:41:57,429 --> 00:42:04,730
whoever uses strikeout man it's so weird

970
00:42:00,230 --> 00:42:08,690
okay so character set I don't know what

971
00:42:04,730 --> 00:42:10,789
we want for character set probably we

972
00:42:08,690 --> 00:42:13,460
could just use an C at this point

973
00:42:10,789 --> 00:42:15,799
although if we're using Unicode code

974
00:42:13,460 --> 00:42:20,059
points you would think that we would be

975
00:42:15,798 --> 00:42:21,318
able to say you know that we wanted that

976
00:42:20,059 --> 00:42:22,548
I suppose it probably doesn't matter

977
00:42:21,318 --> 00:42:24,288
because the carrots that's probably only

978
00:42:22,548 --> 00:42:26,480
used if you use the ASCII function calls

979
00:42:24,289 --> 00:42:28,700
that's my guess so I don't think it

980
00:42:26,480 --> 00:42:32,028
matters because we're actually using the

981
00:42:28,699 --> 00:42:34,719
Unicode versions when we do text out so

982
00:42:32,028 --> 00:42:37,670
I feel like that's probably fine

983
00:42:34,719 --> 00:42:38,899
alright so output precision how closely

984
00:42:37,670 --> 00:42:40,068
the output must match the requested

985
00:42:38,900 --> 00:42:42,528
fonts height width character education

986
00:42:40,068 --> 00:42:46,639
segment I don't know that we care too

987
00:42:42,528 --> 00:42:49,670
much about that honestly so we can just

988
00:42:46,639 --> 00:42:51,739
probably do default because again I

989
00:42:49,670 --> 00:42:53,869
don't think we necessarily care clip

990
00:42:51,739 --> 00:42:56,659
precision I think probably also

991
00:42:53,869 --> 00:42:58,190
similarly we don't care these are all

992
00:42:56,659 --> 00:42:59,868
things if we were actually using this to

993
00:42:58,190 --> 00:43:01,490
render our fonts like in lots of

994
00:42:59,869 --> 00:43:04,608
circumstances and all that sort of stuff

995
00:43:01,489 --> 00:43:08,389
but we probably want anti-aliasing on

996
00:43:04,608 --> 00:43:11,150
right we don't want clear text

997
00:43:08,389 --> 00:43:13,098
would say would be my guess so we

998
00:43:11,150 --> 00:43:14,930
probably want because because clear text

999
00:43:13,099 --> 00:43:17,059
is going to introduce that sort of thing

1000
00:43:14,929 --> 00:43:20,659
that's you know only appropriate for a

1001
00:43:17,059 --> 00:43:23,390
specific LCD panel kind of a thing and

1002
00:43:20,659 --> 00:43:26,899
then pitch family I think we probably

1003
00:43:23,389 --> 00:43:28,670
want don't care I would guess let's see

1004
00:43:26,900 --> 00:43:29,869
the pitch and family thought jewellery

1005
00:43:28,670 --> 00:43:31,250
but specify the pitch of the font could

1006
00:43:29,869 --> 00:43:34,490
be one of the flies default pitch fixed

1007
00:43:31,250 --> 00:43:39,588
pitch variable pitch so we could just do

1008
00:43:34,489 --> 00:43:42,048
default pitch like so default pitch and

1009
00:43:39,588 --> 00:43:42,980
the fight for higher bits or so the font

1010
00:43:42,048 --> 00:43:46,009
family can be one of the following

1011
00:43:42,980 --> 00:43:50,920
values decorative don't care probably

1012
00:43:46,010 --> 00:43:54,230
don't care you my guess so there we go

1013
00:43:50,920 --> 00:43:56,318
that's would create our fonts provided

1014
00:43:54,230 --> 00:43:59,659
that we actually had a font name right

1015
00:43:56,318 --> 00:44:02,630
and I think that's basically it we would

1016
00:43:59,659 --> 00:44:06,379
just need to say what the source font

1017
00:44:02,630 --> 00:44:08,900
name actually was which adds a little

1018
00:44:06,380 --> 00:44:10,369
complexity to our thing here right just

1019
00:44:08,900 --> 00:44:12,950
font name it's this additional thing

1020
00:44:10,369 --> 00:44:15,410
down at the bottom again it's really

1021
00:44:12,949 --> 00:44:17,328
annoying but that's just what happens

1022
00:44:15,409 --> 00:44:19,969
when you're dealing with something

1023
00:44:17,329 --> 00:44:24,380
that's not as good as sed s DB true type

1024
00:44:19,969 --> 00:44:27,618
so if we go back to the point where we

1025
00:44:24,380 --> 00:44:29,838
do our aerial here and we say okay I

1026
00:44:27,619 --> 00:44:32,990
added aerial tvf I want you to find the

1027
00:44:29,838 --> 00:44:35,358
font aerial unsurprisingly right then we

1028
00:44:32,989 --> 00:44:37,939
need our add character asset function to

1029
00:44:35,358 --> 00:44:40,818
have font file and face name or whatever

1030
00:44:37,940 --> 00:44:42,528
right or font name I should say right

1031
00:44:40,818 --> 00:44:44,989
and so then in here when we set that

1032
00:44:42,528 --> 00:44:48,679
that will set set the code point we also

1033
00:44:44,989 --> 00:44:52,669
set the font name to be font name and

1034
00:44:48,679 --> 00:44:54,919
that's really it so that's all we need

1035
00:44:52,670 --> 00:44:58,130
to do to actually create the fonts in

1036
00:44:54,920 --> 00:45:01,608
theory but just creating the font

1037
00:44:58,130 --> 00:45:03,798
actually isn't enough because we are not

1038
00:45:01,608 --> 00:45:05,808
actually using that font right we're

1039
00:45:03,798 --> 00:45:09,018
creating a font handle but we have not

1040
00:45:05,809 --> 00:45:10,250
told this d this VC to use it but we can

1041
00:45:09,018 --> 00:45:12,558
do that the same way we did with the

1042
00:45:10,250 --> 00:45:15,619
bitmap by just selecting that as an

1043
00:45:12,559 --> 00:45:17,269
object selecting that object into the DC

1044
00:45:15,619 --> 00:45:21,380
it's saying make this font the active

1045
00:45:17,268 --> 00:45:22,519
font and that may be everything famous

1046
00:45:21,380 --> 00:45:25,730
last words

1047
00:45:22,519 --> 00:45:27,289
we'll see there we go

1048
00:45:25,730 --> 00:45:33,670
and that looks that looks a lot more

1049
00:45:27,289 --> 00:45:33,670
Arial to me I think hard to say

1050
00:45:44,010 --> 00:45:48,660
you know maybe we should set it to

1051
00:45:46,719 --> 00:45:56,169
something a little more recognizable

1052
00:45:48,659 --> 00:45:57,969
like warrior you know I'm saying so if

1053
00:45:56,170 --> 00:46:02,590
for example we were to say you know what

1054
00:45:57,969 --> 00:46:06,419
don't use that use quarry or new and I

1055
00:46:02,590 --> 00:46:21,150
guess I don't know dirty windows fonts

1056
00:46:06,420 --> 00:46:23,260
courier 4.2 ETF maybe maybe courier new

1057
00:46:21,150 --> 00:46:26,860
so we should be able to see something

1058
00:46:23,260 --> 00:46:29,770
significantly different here right if we

1059
00:46:26,860 --> 00:46:35,289
run the asset processor now and look at

1060
00:46:29,769 --> 00:46:37,449
the output of its fonts right yeah so

1061
00:46:35,289 --> 00:46:39,579
that's definitely working it's just I

1062
00:46:37,449 --> 00:46:43,089
feel like the fonts are kind of thin and

1063
00:46:39,579 --> 00:46:45,069
anemic to some degree and I don't know

1064
00:46:43,090 --> 00:46:46,930
if that's just because we're generating

1065
00:46:45,070 --> 00:46:48,920
too large or generating them too small

1066
00:46:46,929 --> 00:46:51,289
so we definitely have

1067
00:46:48,920 --> 00:46:53,389
you know some some questions there

1068
00:46:51,289 --> 00:46:57,170
because let's do something else here

1069
00:46:53,389 --> 00:47:00,469
right let's also switch it back to using

1070
00:46:57,170 --> 00:47:03,289
the SDB fonts right let's let's try that

1071
00:47:00,469 --> 00:47:06,980
and see how that goes

1072
00:47:03,289 --> 00:47:09,920
we'll run the asset build and then run

1073
00:47:06,980 --> 00:47:12,679
the game again so you see it's just so

1074
00:47:09,920 --> 00:47:15,289
much nicer in the SDV library just so

1075
00:47:12,679 --> 00:47:17,359
much nicer there and so I think there's

1076
00:47:15,289 --> 00:47:20,349
a couple reasons for that one is I think

1077
00:47:17,360 --> 00:47:26,140
that we're the STB library is actually

1078
00:47:20,349 --> 00:47:30,889
getting just the text rectangle right I

1079
00:47:26,139 --> 00:47:33,109
think I think when we asked for the text

1080
00:47:30,889 --> 00:47:35,089
extent point of that letter I think it's

1081
00:47:33,110 --> 00:47:37,370
giving us back more than just the pixels

1082
00:47:35,090 --> 00:47:38,900
so so Shawn's library is actually doing

1083
00:47:37,369 --> 00:47:41,779
a better job of giving us back the

1084
00:47:38,900 --> 00:47:43,990
rectangle I would suspect we could

1085
00:47:41,780 --> 00:47:46,970
double check by looking at some of these

1086
00:47:43,989 --> 00:47:50,089
and in fact I guess one way of doing it

1087
00:47:46,969 --> 00:47:52,459
might be to to keep sort of the border

1088
00:47:50,090 --> 00:47:54,320
in there like so for example what we

1089
00:47:52,460 --> 00:47:57,289
could do is instead of doing the Alpha

1090
00:47:54,320 --> 00:47:59,809
thing in test asset builder right what

1091
00:47:57,289 --> 00:48:01,759
we could do is when we build our when we

1092
00:47:59,809 --> 00:48:03,909
when we actually use the Alpha here what

1093
00:48:01,760 --> 00:48:06,590
we could do is say ah you know what

1094
00:48:03,909 --> 00:48:09,469
that's not the one I meant in here I

1095
00:48:06,590 --> 00:48:13,490
should say maybe we do something like

1096
00:48:09,469 --> 00:48:15,049
right we do color and alpha and normally

1097
00:48:13,489 --> 00:48:18,129
alpha equals color but here we'll just

1098
00:48:15,050 --> 00:48:22,220
set it you know two to five straight up

1099
00:48:18,130 --> 00:48:27,680
and so you know I guess I'll do Gray's

1100
00:48:22,219 --> 00:48:30,409
probably better term for that so and now

1101
00:48:27,679 --> 00:48:32,239
you know that way I'm forcing the Alpha

1102
00:48:30,409 --> 00:48:37,279
to be solid so now we'll see the actual

1103
00:48:32,239 --> 00:48:44,809
bitmap in all of its glory here is or

1104
00:48:37,280 --> 00:48:50,300
not but we would have what did I do

1105
00:48:44,809 --> 00:48:53,659
wrong there alpha is Oh X F F that

1106
00:48:50,300 --> 00:48:56,840
should have been of course we've got two

1107
00:48:53,659 --> 00:48:58,460
of these routines yep

1108
00:48:56,840 --> 00:49:00,349
you should probably should try to share

1109
00:48:58,460 --> 00:49:05,289
a little of that source potentially you

1110
00:49:00,349 --> 00:49:10,580
know I'm saying great so let's do that

1111
00:49:05,289 --> 00:49:12,320
alpha equals 4x FF and then we'll just

1112
00:49:10,579 --> 00:49:19,848
say okay the rest of it's gray gray gray

1113
00:49:12,320 --> 00:49:24,769
gray okay we're on the asset builder

1114
00:49:19,849 --> 00:49:25,970
take a look at Shawn's there we go and

1115
00:49:24,769 --> 00:49:28,039
you can kind of see exactly what I was

1116
00:49:25,969 --> 00:49:31,399
saying as I suspected right like Shawn's

1117
00:49:28,039 --> 00:49:33,259
it's perfectly tight bounding box around

1118
00:49:31,400 --> 00:49:35,750
that letter there's no empty space there

1119
00:49:33,260 --> 00:49:37,310
right and I suspect that what we're

1120
00:49:35,750 --> 00:49:38,960
gonna find when we take a look at the

1121
00:49:37,309 --> 00:49:41,570
windows one is that is that we're not

1122
00:49:38,960 --> 00:49:43,400
getting that right so if I switch back

1123
00:49:41,570 --> 00:49:46,519
to using fonts extracted from Windows

1124
00:49:43,400 --> 00:49:51,430
without the STP library and I go ahead

1125
00:49:46,519 --> 00:49:54,409
and run test asset builder right then

1126
00:49:51,429 --> 00:49:56,989
yeah you can already see right you can

1127
00:49:54,409 --> 00:49:58,639
see how its kind of got all this empty

1128
00:49:56,989 --> 00:50:02,449
space on the top and the bottom and so

1129
00:49:58,639 --> 00:50:05,179
on right so get text extent point is

1130
00:50:02,449 --> 00:50:07,909
really not it's not giving us the actual

1131
00:50:05,179 --> 00:50:10,009
thing we wanted then I can for the

1132
00:50:07,909 --> 00:50:12,319
moment I can certainly also go into a

1133
00:50:10,010 --> 00:50:15,770
handmade hero and force those things to

1134
00:50:12,320 --> 00:50:18,080
be a little bit bigger right particle on

1135
00:50:15,769 --> 00:50:20,630
our particle system here when we push

1136
00:50:18,079 --> 00:50:23,389
the bitmap and I set that size I can

1137
00:50:20,630 --> 00:50:25,380
make those much larger temporarily like

1138
00:50:23,389 --> 00:50:27,819
so

1139
00:50:25,380 --> 00:50:30,849
right and you can kind of see how much

1140
00:50:27,820 --> 00:50:34,000
how much empty space there is there it's

1141
00:50:30,849 --> 00:50:37,029
it's pretty tight left to right but up

1142
00:50:34,000 --> 00:50:39,400
and down it's just plain ism

1143
00:50:37,030 --> 00:50:43,990
you know so it makes me think that maybe

1144
00:50:39,400 --> 00:50:46,660
get text extent point is is not doing

1145
00:50:43,989 --> 00:50:51,250
the the vertical spacing it's only doing

1146
00:50:46,659 --> 00:50:53,199
the horizontal spacing so yeah I guess

1147
00:50:51,250 --> 00:50:55,300
what I would say about that is that to

1148
00:50:53,199 --> 00:50:56,859
you know easily fixable by priests camp

1149
00:50:55,300 --> 00:50:58,780
I don't know if there's an easier way to

1150
00:50:56,860 --> 00:51:02,940
do it by maybe trying to convince

1151
00:50:58,780 --> 00:51:06,490
Windows not to do that kind of nonsense

1152
00:51:02,940 --> 00:51:11,769
there might be a way with some other

1153
00:51:06,489 --> 00:51:14,559
text extent thing let's quickly check

1154
00:51:11,769 --> 00:51:16,179
but then I'll just do a scan and that

1155
00:51:14,559 --> 00:51:22,000
would solve the problem right text

1156
00:51:16,179 --> 00:51:25,480
extent point let's take a look

1157
00:51:22,000 --> 00:51:34,780
ladies and gentlemen and see what it

1158
00:51:25,480 --> 00:51:36,059
says get text extent point hello no rush

1159
00:51:34,780 --> 00:51:38,590
here people

1160
00:51:36,059 --> 00:51:51,730
no rush it's not like we have to go to

1161
00:51:38,590 --> 00:52:00,000
Q&amp;A or anything come on there we go so

1162
00:51:51,730 --> 00:52:02,289
let's see it remarks remarks let's see

1163
00:52:00,000 --> 00:52:06,610
string with knives recomputed blah blah

1164
00:52:02,289 --> 00:52:08,079
blah blah blah blah blah the cafe string

1165
00:52:06,610 --> 00:52:11,039
that takes account they took our spacing

1166
00:52:08,079 --> 00:52:13,900
okay that's totally fine

1167
00:52:11,039 --> 00:52:18,340
the calculus room with we don't it's not

1168
00:52:13,900 --> 00:52:20,590
the width as a problem when this

1169
00:52:18,340 --> 00:52:22,750
function function returns the Texas sent

1170
00:52:20,590 --> 00:52:24,190
extremes of Texas for us on all the same

1171
00:52:22,750 --> 00:52:26,260
ways always zero that's true for both

1172
00:52:24,190 --> 00:52:27,639
the horizontal dimension the text it's

1173
00:52:26,260 --> 00:52:30,940
on the Sooners do statement so it's

1174
00:52:27,639 --> 00:52:32,889
basically just broken the graphics

1175
00:52:30,940 --> 00:52:34,420
murder is set to do GM advanced

1176
00:52:32,889 --> 00:52:36,789
courtesies and whose blah blah blah blah

1177
00:52:34,420 --> 00:52:39,130
blah blah I don't see anything that

1178
00:52:36,789 --> 00:52:42,449
really talks about

1179
00:52:39,130 --> 00:52:46,410
sort of that that other kind of width

1180
00:52:42,449 --> 00:52:46,409
spacing so I'm just going to scan it

1181
00:52:46,619 --> 00:52:53,680
making our slope get pixel loop even

1182
00:52:50,079 --> 00:52:56,589
slower but obviously pretty easy to do

1183
00:52:53,679 --> 00:53:00,038
all we need to do here is say you know

1184
00:52:56,588 --> 00:53:02,768
what get text extent point super super

1185
00:53:00,039 --> 00:53:05,079
not relevant don't care at this point so

1186
00:53:02,768 --> 00:53:06,399
we can just even full-on say doesn't

1187
00:53:05,079 --> 00:53:09,999
matter right we're not gonna do that

1188
00:53:06,400 --> 00:53:14,680
anymore and then we are going to set the

1189
00:53:09,998 --> 00:53:15,998
width and height this way okay and we

1190
00:53:14,679 --> 00:53:19,268
need to do a little bit more work there

1191
00:53:15,998 --> 00:53:20,709
if we do it so so we'll see so okay so

1192
00:53:19,268 --> 00:53:22,838
first of all oh you know what though I

1193
00:53:20,710 --> 00:53:24,940
take it back we do want to do that just

1194
00:53:22,838 --> 00:53:27,159
to bound the region we actually have to

1195
00:53:24,940 --> 00:53:28,838
search so that would be good right

1196
00:53:27,159 --> 00:53:30,788
so it's start with the width and height

1197
00:53:28,838 --> 00:53:35,739
this way and what I'll do is I'll say

1198
00:53:30,789 --> 00:53:38,589
okay we've got am in X right min Y and

1199
00:53:35,739 --> 00:53:40,719
these are going to be equal to the the

1200
00:53:38,588 --> 00:53:45,909
the total width so you know something

1201
00:53:40,719 --> 00:53:47,858
like some really huge value right these

1202
00:53:45,909 --> 00:53:53,348
are going to be equal to incorrect

1203
00:53:47,858 --> 00:53:56,679
things right something like that so as

1204
00:53:53,349 --> 00:54:00,729
we go through here when we do our our

1205
00:53:56,679 --> 00:54:04,268
loop whenever I see a pixel right if the

1206
00:54:00,728 --> 00:54:06,879
pixel is not equal to zero so it's not a

1207
00:54:04,268 --> 00:54:09,939
black pixel then I know that this is in

1208
00:54:06,880 --> 00:54:14,068
bounds right so what I can do here is

1209
00:54:09,940 --> 00:54:16,838
say you know if the Y value you know is

1210
00:54:14,068 --> 00:54:18,670
is less than the min Y or I should say

1211
00:54:16,838 --> 00:54:23,759
if the min Y is greater than the Y value

1212
00:54:18,670 --> 00:54:26,229
the min y equals the Y value right

1213
00:54:23,759 --> 00:54:30,059
if the mean x value is greater than the

1214
00:54:26,228 --> 00:54:33,879
x value right just this kind of nonsense

1215
00:54:30,059 --> 00:54:37,079
something like this right probably do X

1216
00:54:33,880 --> 00:54:40,450
first tend to use X first by convention

1217
00:54:37,079 --> 00:54:42,880
and so we'll do if the X if the max is

1218
00:54:40,449 --> 00:54:44,919
less than right just picking out the

1219
00:54:42,880 --> 00:54:47,440
maximum values and that will give me

1220
00:54:44,920 --> 00:54:52,349
right just by every time I take a look

1221
00:54:47,440 --> 00:54:57,849
here oops that will give me

1222
00:54:52,349 --> 00:55:00,778
the specific minimum and maximum XY

1223
00:54:57,849 --> 00:55:04,059
coordinates of this of this block right

1224
00:55:00,778 --> 00:55:05,679
that makes sense so we don't need to

1225
00:55:04,059 --> 00:55:07,210
record anything we actually wouldn't

1226
00:55:05,679 --> 00:55:10,179
need to record anything if we didn't

1227
00:55:07,210 --> 00:55:12,970
find any pixels that were set right so

1228
00:55:10,179 --> 00:55:17,108
what we can do is say if the MINIX if

1229
00:55:12,969 --> 00:55:19,328
min X is greater than or equal to max X

1230
00:55:17,108 --> 00:55:22,358
then we're good right so we found some

1231
00:55:19,329 --> 00:55:24,490
pixels and that's all good we can then

1232
00:55:22,358 --> 00:55:28,750
go through and actually do something

1233
00:55:24,489 --> 00:55:30,489
here right like so so if that's the case

1234
00:55:28,750 --> 00:55:32,139
then we can go through and do something

1235
00:55:30,489 --> 00:55:34,509
we need to figure out our width and

1236
00:55:32,139 --> 00:55:38,259
height our width and height is obviously

1237
00:55:34,510 --> 00:55:42,910
just going to be with equals max X minus

1238
00:55:38,260 --> 00:55:46,329
min X height equals max Y minus min Y

1239
00:55:42,909 --> 00:55:48,639
now it's not quite right because

1240
00:55:46,329 --> 00:55:50,769
remember the max X is the maximum x

1241
00:55:48,639 --> 00:55:52,750
value that's filled and the min X is the

1242
00:55:50,769 --> 00:55:55,538
minimum x value that's filled so let's

1243
00:55:52,750 --> 00:55:58,329
say there was just a pixel the fifth

1244
00:55:55,539 --> 00:56:00,339
pixel in was set you would get a 5 for

1245
00:55:58,329 --> 00:56:01,839
max x and a 5 for min X well the width

1246
00:56:00,338 --> 00:56:04,750
should not be zero in that case it

1247
00:56:01,838 --> 00:56:07,269
should be one right so we really want to

1248
00:56:04,750 --> 00:56:09,818
add one here to get the correct width

1249
00:56:07,269 --> 00:56:11,619
from that subtraction right does that

1250
00:56:09,818 --> 00:56:12,969
make sense that's just a little fence

1251
00:56:11,619 --> 00:56:14,980
posting or not a fence posting and

1252
00:56:12,969 --> 00:56:16,328
off-by-one kind of thing you know you've

1253
00:56:14,980 --> 00:56:20,318
got to make sure that you understand

1254
00:56:16,329 --> 00:56:25,420
width is not max minus min it's 1 past

1255
00:56:20,318 --> 00:56:26,949
max minus min technically okay so if we

1256
00:56:25,420 --> 00:56:29,619
do that now we've got the width and

1257
00:56:26,949 --> 00:56:32,649
height problem of course is that this is

1258
00:56:29,619 --> 00:56:34,480
now this is set wrong but we've actually

1259
00:56:32,650 --> 00:56:37,150
computed these so we can really just do

1260
00:56:34,480 --> 00:56:38,798
it this way now and know that we've got

1261
00:56:37,150 --> 00:56:41,588
the right ranges because we've kind of

1262
00:56:38,798 --> 00:56:43,659
computed what our min X and Max X and

1263
00:56:41,588 --> 00:56:45,548
min Y and max Y are and all that stuff

1264
00:56:43,659 --> 00:56:49,239
right so that should give us what we

1265
00:56:45,548 --> 00:56:51,969
want to get that bound back in there you

1266
00:56:49,239 --> 00:56:53,949
know so that's a good thing I don't know

1267
00:56:51,969 --> 00:56:56,558
why destro is in there destro should not

1268
00:56:53,949 --> 00:56:58,348
be in there so there we go just a quick

1269
00:56:56,559 --> 00:57:01,000
and dirty little bounce checker

1270
00:56:58,349 --> 00:57:02,480
hopefully I programmed it correctly who

1271
00:57:01,000 --> 00:57:04,519
knows

1272
00:57:02,480 --> 00:57:06,980
there we go and that does look quite a

1273
00:57:04,519 --> 00:57:09,079
bit better right that does look like now

1274
00:57:06,980 --> 00:57:11,960
we're getting kind of right up to the

1275
00:57:09,079 --> 00:57:13,039
edges it still looks kind of awful I

1276
00:57:11,960 --> 00:57:14,809
don't know if you can see that but

1277
00:57:13,039 --> 00:57:16,840
there's just a lot of jaggies in there I

1278
00:57:14,809 --> 00:57:23,119
don't know why we're not seeing any

1279
00:57:16,840 --> 00:57:25,490
anti-aliasing from Windows that's kind

1280
00:57:23,119 --> 00:57:28,400
of weird right that's just a little bit

1281
00:57:25,489 --> 00:57:31,699
on and I'm not sure I'm not sure why

1282
00:57:28,400 --> 00:57:33,740
that's happening I don't know if that's

1283
00:57:31,699 --> 00:57:36,189
something we're doing or something we're

1284
00:57:33,739 --> 00:57:42,409
not doing you know that we need to do

1285
00:57:36,190 --> 00:57:44,119
better right so yeah so that's all good

1286
00:57:42,409 --> 00:57:45,349
for the fonts of course there is one

1287
00:57:44,119 --> 00:57:46,490
more thing that we need to take into

1288
00:57:45,349 --> 00:57:48,679
account which is the fact that we

1289
00:57:46,489 --> 00:57:51,169
actually want a one pixel empty border

1290
00:57:48,679 --> 00:57:53,269
around everything because that is sort

1291
00:57:51,170 --> 00:57:55,880
of what's necessary for our fill

1292
00:57:53,269 --> 00:57:59,539
routines right and so what we'd like to

1293
00:57:55,880 --> 00:58:01,400
do here even maybe perhaps in a sorted

1294
00:57:59,539 --> 00:58:03,529
forward of forward-looking sense we'd

1295
00:58:01,400 --> 00:58:06,139
want to insert a border around there

1296
00:58:03,530 --> 00:58:08,300
which is something like you know okay we

1297
00:58:06,139 --> 00:58:10,219
want the MINIX to actually be one less

1298
00:58:08,300 --> 00:58:14,600
than it would normally be right we want

1299
00:58:10,219 --> 00:58:16,009
everything to be a little bit wider we

1300
00:58:14,599 --> 00:58:17,659
want to have that one pixel border so

1301
00:58:16,010 --> 00:58:20,180
that would give us our one pixel border

1302
00:58:17,659 --> 00:58:26,579
and that would pretty much be everything

1303
00:58:20,179 --> 00:58:30,210
that we would need for our for our fonts

1304
00:58:26,579 --> 00:58:31,559
and that should just about do it I think

1305
00:58:30,210 --> 00:58:33,750
that's that's pretty good for now

1306
00:58:31,559 --> 00:58:35,250
so why the anti-aliasing isn't working

1307
00:58:33,750 --> 00:58:37,369
I'm not sure I don't know if there's

1308
00:58:35,250 --> 00:58:41,400
something we have to do device context

1309
00:58:37,369 --> 00:58:44,339
anti-aliasing I'm not sure if there's

1310
00:58:41,400 --> 00:58:47,420
any kind of specific thing that needs to

1311
00:58:44,340 --> 00:58:52,440
that needs to happen there anti-aliasing

1312
00:58:47,420 --> 00:58:58,710
aliasing no windows

1313
00:58:52,440 --> 00:59:00,420
let's do text out anti-alias all right I

1314
00:58:58,710 --> 00:59:03,110
don't know if there's anything in

1315
00:59:00,420 --> 00:59:07,920
particular that we have to do for that I

1316
00:59:03,110 --> 00:59:09,210
don't actually know it might be okay it

1317
00:59:07,920 --> 00:59:11,340
might be that there's some other thing

1318
00:59:09,210 --> 00:59:12,720
that we have to set in there it looks

1319
00:59:11,340 --> 00:59:15,180
like they're setting the BK mode to

1320
00:59:12,719 --> 00:59:18,959
transparent I don't know if that's

1321
00:59:15,179 --> 00:59:22,980
actually necessary or not but you know

1322
00:59:18,960 --> 00:59:25,170
we're not doing that right I don't know

1323
00:59:22,980 --> 00:59:27,389
if we would need to do a something where

1324
00:59:25,170 --> 00:59:28,740
we actually create our own backing

1325
00:59:27,389 --> 00:59:31,529
bitmap if there's something wrong with

1326
00:59:28,739 --> 00:59:32,939
our backing bitmap I don't know but

1327
00:59:31,530 --> 00:59:35,100
that's probably something better left

1328
00:59:32,940 --> 00:59:42,929
for another time now it's probably a

1329
00:59:35,099 --> 00:59:46,440
better time to go to the Q &amp; A right all

1330
00:59:42,929 --> 00:59:48,210
right so yeah if you have any questions

1331
00:59:46,440 --> 00:59:50,280
about what we did today again that was

1332
00:59:48,210 --> 00:59:57,019
just showing how to not use a library to

1333
00:59:50,280 --> 01:00:01,980
extract fonts that's all really and I

1334
00:59:57,019 --> 01:00:02,989
feel like I feel like there shouldn't

1335
01:00:01,980 --> 01:00:05,369
have been really much mystery there

1336
01:00:02,989 --> 01:00:07,709
right it's just a little bit of harkens

1337
01:00:05,369 --> 01:00:09,079
back to the whole windows API nonsense

1338
01:00:07,710 --> 01:00:14,750
which of course is always a little weird

1339
01:00:09,079 --> 01:00:14,750
but nothing too too out of the ordinary

1340
01:00:19,498 --> 01:00:27,879
can the fonts have outlines you mean you

1341
01:00:26,228 --> 01:00:29,858
mean like if you wanted to add an

1342
01:00:27,880 --> 01:00:33,670
outline to the font that a font that

1343
01:00:29,858 --> 01:00:34,598
does not normally have an outline I'm

1344
01:00:33,670 --> 01:00:37,950
not I'm not

1345
01:00:34,599 --> 01:00:37,950
wonder-percent sure what you mean there

1346
01:00:43,588 --> 01:00:48,929
what did you mean by backing bitmap what

1347
01:00:46,599 --> 01:00:52,059
I mean by backing bitmap is that a

1348
01:00:48,929 --> 01:00:55,719
device context always draws into an

1349
01:00:52,059 --> 01:00:57,880
actual bitmap right that's well I

1350
01:00:55,719 --> 01:01:01,929
shouldn't say always a device context

1351
01:00:57,880 --> 01:01:04,358
has the notion of having a bitmap set in

1352
01:01:01,929 --> 01:01:09,038
it and that is the bitmap to which it

1353
01:01:04,358 --> 01:01:11,528
will draw that bitmap in our case we did

1354
01:01:09,039 --> 01:01:13,839
not really create one ourselves manually

1355
01:01:11,528 --> 01:01:15,278
we just said create some bitmap that

1356
01:01:13,838 --> 01:01:18,880
would be compatible with this device

1357
01:01:15,278 --> 01:01:20,798
context right and so the backing bitmap

1358
01:01:18,880 --> 01:01:22,838
just means like the bitmap that's you

1359
01:01:20,798 --> 01:01:25,809
know backing this device context it's

1360
01:01:22,838 --> 01:01:27,969
the one it's this one right and what I

1361
01:01:25,809 --> 01:01:30,009
didn't know is do we have to create one

1362
01:01:27,969 --> 01:01:32,739
ourselves with specific parameters in

1363
01:01:30,009 --> 01:01:34,690
order to get that anti-aliasing right

1364
01:01:32,739 --> 01:01:36,999
that's what I did that's what I don't

1365
01:01:34,690 --> 01:01:40,088
know right and I you know I really don't

1366
01:01:36,998 --> 01:01:43,419
know obviously we can do some

1367
01:01:40,088 --> 01:01:45,518
experiments to see we could do we could

1368
01:01:43,420 --> 01:01:49,659
double check to see what happens if we

1369
01:01:45,518 --> 01:01:55,268
do turn on padlet instead and do set VK

1370
01:01:49,659 --> 01:01:58,478
mode device context transparent right we

1371
01:01:55,268 --> 01:02:00,578
can try that first and see if that

1372
01:01:58,478 --> 01:02:03,038
improves if that actually leads to the

1373
01:02:00,579 --> 01:02:05,729
font actually being anti aliased or not

1374
01:02:03,039 --> 01:02:05,729
right

1375
01:02:05,989 --> 01:02:10,098
the other thing is maybe we're drawing

1376
01:02:07,579 --> 01:02:11,869
it too big it might be anti aliased and

1377
01:02:10,099 --> 01:02:14,780
it's just our down shrinking that makes

1378
01:02:11,869 --> 01:02:15,680
it not anti aliased and to do that and

1379
01:02:14,780 --> 01:02:17,359
you know what this would be nice too

1380
01:02:15,679 --> 01:02:20,659
because it was slowed down and made here

1381
01:02:17,358 --> 01:02:22,308
oh if I were to write this would slow

1382
01:02:20,659 --> 01:02:31,818
down our renderer a ton so we could see

1383
01:02:22,309 --> 01:02:34,329
them before easily no those really just

1384
01:02:31,818 --> 01:02:36,409
don't look anti aliased at all to me

1385
01:02:34,329 --> 01:02:40,280
that doesn't look like it has anything

1386
01:02:36,409 --> 01:02:44,629
to do with us that's just four on that's

1387
01:02:40,280 --> 01:02:46,579
just full-on garbage right there so yeah

1388
01:02:44,630 --> 01:02:50,800
I don't know so it doesn't look like

1389
01:02:46,579 --> 01:02:53,390
it's that BK mode thing so maybe it is

1390
01:02:50,800 --> 01:02:55,460
the problem with the backing bitmap I'm

1391
01:02:53,389 --> 01:02:58,279
not sure you know GDI is a mysterious

1392
01:02:55,460 --> 01:03:00,619
beast it's pretty random most of the

1393
01:02:58,280 --> 01:03:02,540
time so I don't know so I was thinking

1394
01:03:00,619 --> 01:03:05,450
that maybe we have to create a different

1395
01:03:02,539 --> 01:03:08,529
kind of backing bitmap to to make that

1396
01:03:05,449 --> 01:03:08,529
anti-alias properly

1397
01:03:16,230 --> 01:03:20,280
Cooper Caleb I love how I see trippy is

1398
01:03:18,989 --> 01:03:21,868
easier and arguably better than the

1399
01:03:20,280 --> 01:03:28,290
windows API version yeah it's not

1400
01:03:21,869 --> 01:03:30,420
surprising really vote on the straw poll

1401
01:03:28,289 --> 01:03:32,969
what is the straw poll Oh for the

1402
01:03:30,420 --> 01:03:35,010
handmade hero's domain name have you

1403
01:03:32,969 --> 01:03:38,399
guys been working on a domain name for

1404
01:03:35,010 --> 01:03:40,950
handmade Heroes is that is that what's

1405
01:03:38,400 --> 01:03:42,568
going on throw it on the straw poll what

1406
01:03:40,949 --> 01:03:44,399
are the names that you guys have

1407
01:03:42,568 --> 01:03:48,259
selected handmade heroes that are

1408
01:03:44,400 --> 01:03:52,349
handmade coders calm handmade dev calm

1409
01:03:48,260 --> 01:03:54,270
artists okay you don't want you don't

1410
01:03:52,349 --> 01:03:56,910
want anything that sort of has the sound

1411
01:03:54,269 --> 01:03:58,548
Anil in it like artisanal software is

1412
01:03:56,909 --> 01:04:02,779
just a bad idea

1413
01:03:58,548 --> 01:04:08,789
HMF set website code crafters card org I

1414
01:04:02,780 --> 01:04:12,359
don't know handmade dev comm handmade

1415
01:04:08,789 --> 01:04:13,980
coders comm both sound good I would say

1416
01:04:12,358 --> 01:04:17,250
maybe like are we sure these are the

1417
01:04:13,980 --> 01:04:18,838
best ones like should you try should we

1418
01:04:17,250 --> 01:04:21,929
try again for a couple another round

1419
01:04:18,838 --> 01:04:27,078
right or is the magic went in here so

1420
01:04:21,929 --> 01:04:29,190
I'm not gonna vote I'm not gonna vote

1421
01:04:27,079 --> 01:04:31,500
handmade heroes comm is currently

1422
01:04:29,190 --> 01:04:33,179
leading yeah I think the problem with

1423
01:04:31,500 --> 01:04:35,548
that one is people will make it get

1424
01:04:33,179 --> 01:04:36,899
confused they'll go to handmade hero org

1425
01:04:35,548 --> 01:04:38,130
and wonder why they're not seeing the

1426
01:04:36,900 --> 01:04:41,900
products they were trying to find it's

1427
01:04:38,130 --> 01:04:41,900
my guess but I could be wrong about that

1428
01:04:42,980 --> 01:04:48,599
does does have Windows font have

1429
01:04:46,619 --> 01:04:51,450
subscript and superscript support and

1430
01:04:48,599 --> 01:04:53,160
therefore so much over bounding also is

1431
01:04:51,449 --> 01:04:56,068
the anti alias only stored in the alpha

1432
01:04:53,159 --> 01:04:57,989
value by Windows after seeing a pro like

1433
01:04:56,068 --> 01:04:59,429
you struggle with this API I understand

1434
01:04:57,989 --> 01:05:02,189
the burden you go through with it having

1435
01:04:59,429 --> 01:05:04,889
seen SDB yesterday yeah so I mean like

1436
01:05:02,190 --> 01:05:06,358
you know I I got that done relatively

1437
01:05:04,889 --> 01:05:09,358
quickly because I already knew it all

1438
01:05:06,358 --> 01:05:10,798
but imagine coming to that as someone

1439
01:05:09,358 --> 01:05:12,269
who had no idea what was going on you'd

1440
01:05:10,798 --> 01:05:13,739
go nuts you wouldn't even know what to

1441
01:05:12,269 --> 01:05:15,000
look for you'd be like you'd never would

1442
01:05:13,739 --> 01:05:16,529
have known the opaque thing you never

1443
01:05:15,000 --> 01:05:18,150
would have known after step right the

1444
01:05:16,530 --> 01:05:20,220
the anti aliased stuff I don't remember

1445
01:05:18,150 --> 01:05:21,750
I think you know so like I don't even

1446
01:05:20,219 --> 01:05:25,169
remember what you need to do to do that

1447
01:05:21,750 --> 01:05:27,780
I have done that before so it's just

1448
01:05:25,170 --> 01:05:29,400
like it's it's really it's really pretty

1449
01:05:27,780 --> 01:05:31,140
rough and then

1450
01:05:29,400 --> 01:05:34,590
is one of Windows better api's like the

1451
01:05:31,139 --> 01:05:39,619
newer AP is like direct2d for example

1452
01:05:34,590 --> 01:05:43,410
which they introduced is ten times worse

1453
01:05:39,619 --> 01:05:45,480
w WPF or whatever the thing there is the

1454
01:05:43,409 --> 01:05:47,639
the other graphics library ten times

1455
01:05:45,480 --> 01:05:50,639
worse so this is the best that gets to

1456
01:05:47,639 --> 01:05:55,769
as you go up in years to get worse and

1457
01:05:50,639 --> 01:05:58,920
worse ask for superscript and subscript

1458
01:05:55,769 --> 01:06:02,070
I don't think they do I think normally

1459
01:05:58,920 --> 01:06:03,450
you just draw the font smaller do we

1460
01:06:02,070 --> 01:06:04,620
have the ability but it's probably just

1461
01:06:03,449 --> 01:06:05,879
in leaving room for the sender's and

1462
01:06:04,619 --> 01:06:07,319
ascenders or stuff like that it was

1463
01:06:05,880 --> 01:06:08,970
probably the line height like it gets

1464
01:06:07,320 --> 01:06:11,640
that text extent point probably always

1465
01:06:08,969 --> 01:06:12,689
returns the line height to clarify I do

1466
01:06:11,639 --> 01:06:14,129
we have the ability to create flat

1467
01:06:12,690 --> 01:06:15,480
bitmaps without lines on the characters

1468
01:06:14,130 --> 01:06:20,789
that could maybe be colored separately

1469
01:06:15,480 --> 01:06:22,199
well we have the ability to we could

1470
01:06:20,789 --> 01:06:25,409
pretty easily do that if the font had

1471
01:06:22,199 --> 01:06:28,019
that in it and and really all we would

1472
01:06:25,409 --> 01:06:33,329
need I guess you know what I don't think

1473
01:06:28,019 --> 01:06:38,219
stb supports that though does it I don't

1474
01:06:33,329 --> 01:06:39,119
know if STP supports that because you

1475
01:06:38,219 --> 01:06:41,399
know what I don't think TrueType

1476
01:06:39,119 --> 01:06:44,309
supports that to be completely honest

1477
01:06:41,400 --> 01:06:47,190
with you I don't think TrueType supports

1478
01:06:44,309 --> 01:06:49,320
that I think fonts that look like they

1479
01:06:47,190 --> 01:06:51,000
have outlines in TrueType are actually

1480
01:06:49,320 --> 01:06:55,200
just they fill the outline as a shape

1481
01:06:51,000 --> 01:06:57,360
and the insides actually Hollow so I

1482
01:06:55,199 --> 01:07:01,230
think no we really can't support that

1483
01:06:57,360 --> 01:07:03,300
without probably some other font file

1484
01:07:01,230 --> 01:07:06,480
format do you know what I mean that

1485
01:07:03,300 --> 01:07:07,920
would right but our system the rest of

1486
01:07:06,480 --> 01:07:09,659
our system doesn't care so we could you

1487
01:07:07,920 --> 01:07:12,360
know if you action drew individual font

1488
01:07:09,659 --> 01:07:14,159
characters for us they could have

1489
01:07:12,360 --> 01:07:16,079
outlines because they're just bitmaps in

1490
01:07:14,159 --> 01:07:18,719
our system so we can have full color

1491
01:07:16,079 --> 01:07:20,009
whatever we want right but as far as

1492
01:07:18,719 --> 01:07:23,989
Windows is concerned I don't think they

1493
01:07:20,010 --> 01:07:27,360
have it which one is worse

1494
01:07:23,989 --> 01:07:30,119
GDI her direct input 8 probably a

1495
01:07:27,360 --> 01:07:35,579
toss-up probably direct input 8 just cuz

1496
01:07:30,119 --> 01:07:36,839
it has comm quarter tries today a good

1497
01:07:35,579 --> 01:07:38,429
example of why sometimes using a

1498
01:07:36,840 --> 01:07:40,410
libraries okay

1499
01:07:38,429 --> 01:07:42,059
I don't know that today is a good

1500
01:07:40,409 --> 01:07:44,690
example or a bad example of that it's

1501
01:07:42,059 --> 01:07:49,828
more just

1502
01:07:44,690 --> 01:07:52,048
it's more just using a library is always

1503
01:07:49,829 --> 01:07:54,240
okay if you know enough about the

1504
01:07:52,048 --> 01:07:56,400
problem and understand enough about what

1505
01:07:54,239 --> 01:07:58,618
you're doing to know that the library

1506
01:07:56,400 --> 01:08:00,780
won't create problems for you right

1507
01:07:58,619 --> 01:08:03,119
usually the problem with using a library

1508
01:08:00,780 --> 01:08:05,040
is that people use libraries that they

1509
01:08:03,119 --> 01:08:05,970
don't understand and then it goes

1510
01:08:05,039 --> 01:08:08,279
horribly wrong

1511
01:08:05,969 --> 01:08:09,629
right because they don't know how to

1512
01:08:08,280 --> 01:08:10,769
maintain that library they don't know

1513
01:08:09,630 --> 01:08:12,088
what to do if the library has bugs and

1514
01:08:10,769 --> 01:08:13,409
if they don't know how to get the

1515
01:08:12,088 --> 01:08:16,500
library ported to a different platform

1516
01:08:13,409 --> 01:08:18,179
they don't know you know even why the

1517
01:08:16,500 --> 01:08:19,380
library might be slow or fast and

1518
01:08:18,179 --> 01:08:22,739
certain circumstance they have no idea

1519
01:08:19,380 --> 01:08:26,190
right and so using a library is actually

1520
01:08:22,738 --> 01:08:32,459
always okay as long as you know what you

1521
01:08:26,189 --> 01:08:36,509
are doing right so I don't think using a

1522
01:08:32,460 --> 01:08:39,929
library as a problem not knowing what

1523
01:08:36,509 --> 01:08:41,488
you're doing is the problem now the sort

1524
01:08:39,929 --> 01:08:43,289
of the corollary to that is when you do

1525
01:08:41,488 --> 01:08:45,659
know what you're doing you will pretty

1526
01:08:43,289 --> 01:08:48,448
rapidly find that most libraries aren't

1527
01:08:45,659 --> 01:08:51,000
worth using they are worse than doing it

1528
01:08:48,448 --> 01:08:52,259
yourself and so one of the reasons that

1529
01:08:51,000 --> 01:08:53,338
I don't use a lot of libraries because

1530
01:08:52,259 --> 01:08:56,238
there really aren't very many libraries

1531
01:08:53,338 --> 01:08:59,250
that are any good the STB libraries are

1532
01:08:56,238 --> 01:09:01,528
definitely a break in that trend FCB

1533
01:08:59,250 --> 01:09:03,659
libraries are so good that they usually

1534
01:09:01,529 --> 01:09:06,509
do legitimately save you a considerable

1535
01:09:03,659 --> 01:09:08,039
amount of time and they don't create

1536
01:09:06,509 --> 01:09:10,529
huge headaches for you down the line

1537
01:09:08,039 --> 01:09:14,548
when you use a less SCB library you are

1538
01:09:10,529 --> 01:09:16,739
often going to save total time on your

1539
01:09:14,548 --> 01:09:20,969
project and that is not true of most

1540
01:09:16,738 --> 01:09:23,250
libraries so you know if you're talking

1541
01:09:20,969 --> 01:09:25,250
about an s-u-v library yeah a lot of

1542
01:09:23,250 --> 01:09:27,689
times that ends up being a good choice

1543
01:09:25,250 --> 01:09:29,609
other libraries oftentimes not so much

1544
01:09:27,689 --> 01:09:31,710
but in either case the important thing

1545
01:09:29,609 --> 01:09:34,289
is to be confident enough in the domain

1546
01:09:31,710 --> 01:09:35,789
of the library and familiar enough with

1547
01:09:34,289 --> 01:09:37,619
how the library is constructed and how

1548
01:09:35,789 --> 01:09:41,069
it works to know that you are not making

1549
01:09:37,619 --> 01:09:43,108
a mistake and so that's what I would say

1550
01:09:41,069 --> 01:09:44,460
and on handmade hero the reason we don't

1551
01:09:43,109 --> 01:09:45,480
use libraries is not because there

1552
01:09:44,460 --> 01:09:46,948
aren't libraries we could use it would

1553
01:09:45,479 --> 01:09:50,009
be good because like I showed you stb

1554
01:09:46,948 --> 01:09:51,178
library is good the reason we don't use

1555
01:09:50,009 --> 01:09:53,009
libraries on them right here is because

1556
01:09:51,179 --> 01:09:54,390
part of the point of a Mahiro is to show

1557
01:09:53,009 --> 01:09:56,130
people how to code all the parts of the

1558
01:09:54,390 --> 01:09:56,869
game and if we just use some library to

1559
01:09:56,130 --> 01:09:58,369
do it

1560
01:09:56,869 --> 01:09:59,809
then we wouldn't know that and so that's

1561
01:09:58,369 --> 01:10:01,369
why I wanted to restrict the use of

1562
01:09:59,810 --> 01:10:02,810
libraries to only being in the asset

1563
01:10:01,369 --> 01:10:11,779
processor because in the game itself I

1564
01:10:02,810 --> 01:10:13,130
wanted to show all of it would direct

1565
01:10:11,779 --> 01:10:15,319
right or ClearType help out the it with

1566
01:10:13,130 --> 01:10:16,760
the engine the anti-icing does work

1567
01:10:15,319 --> 01:10:17,989
through this path I've done it before I

1568
01:10:16,760 --> 01:10:27,440
think you just need to do a couple other

1569
01:10:17,989 --> 01:10:29,149
settings ignore this if you're already

1570
01:10:27,439 --> 01:10:30,919
doing this but why not ship the mono

1571
01:10:29,149 --> 01:10:34,189
bitmap as part of the asset file instead

1572
01:10:30,920 --> 01:10:36,260
of the much larger RGB bitmap because do

1573
01:10:34,189 --> 01:10:40,250
we care like do we care about that

1574
01:10:36,260 --> 01:10:42,980
footprint space right that is a space

1575
01:10:40,250 --> 01:10:45,409
optimization and it's a space

1576
01:10:42,979 --> 01:10:47,359
optimization that that makes our code

1577
01:10:45,409 --> 01:10:50,180
more complex because now every time you

1578
01:10:47,359 --> 01:10:52,699
load a bitmap you have to know whether

1579
01:10:50,180 --> 01:10:55,340
it's a mono bitmap or regular bitmap and

1580
01:10:52,699 --> 01:10:57,979
you have to either then add code to our

1581
01:10:55,340 --> 01:11:00,350
renderer to handle mono or you have to

1582
01:10:57,979 --> 01:11:04,549
convert onload which takes more time and

1583
01:11:00,350 --> 01:11:05,900
makes your loading code slower so all of

1584
01:11:04,550 --> 01:11:08,390
those trade-offs you would have to go

1585
01:11:05,899 --> 01:11:10,309
okay am I making a good decision here

1586
01:11:08,390 --> 01:11:12,740
when I add this optimization for model

1587
01:11:10,310 --> 01:11:14,000
bitmaps and I would suggest that since

1588
01:11:12,739 --> 01:11:15,559
fonts are pretty much the only place

1589
01:11:14,000 --> 01:11:17,229
we'll probably use them there may be a

1590
01:11:15,560 --> 01:11:19,970
couple other like maybe particle systems

1591
01:11:17,229 --> 01:11:22,250
it would just be a really bad idea more

1592
01:11:19,970 --> 01:11:24,020
code complexity slower potential load

1593
01:11:22,250 --> 01:11:26,869
times or more complexity in the renderer

1594
01:11:24,020 --> 01:11:32,920
for what pay off slightly fault smaller

1595
01:11:26,869 --> 01:11:35,809
asset file size not feeling it right and

1596
01:11:32,920 --> 01:11:37,489
plus if we run our code through an LZ

1597
01:11:35,810 --> 01:11:40,760
compressor it would probably eliminate

1598
01:11:37,489 --> 01:11:43,399
it would shrink it down to a mono bitmap

1599
01:11:40,760 --> 01:11:47,030
automatically because every entry is

1600
01:11:43,399 --> 01:11:48,469
going to be 544 replicated values right

1601
01:11:47,029 --> 01:11:50,889
so the LZ compressor would eat that for

1602
01:11:48,470 --> 01:11:50,890
breakfast

1603
01:11:56,239 --> 01:12:02,159
I'm a cornbread people are liking the

1604
01:11:58,949 --> 01:12:06,409
idea of handmade dev yeah it sounds kind

1605
01:12:02,159 --> 01:12:09,239
of cool handmade dough dev seems pretty

1606
01:12:06,409 --> 01:12:14,279
rememberable and distinct from the main

1607
01:12:09,239 --> 01:12:18,170
hammy hero org site got a good name got

1608
01:12:14,279 --> 01:12:18,170
a good ring to it hammy dev I like it

1609
01:12:35,520 --> 01:12:40,950
how often do you regret using API

1610
01:12:38,819 --> 01:12:43,139
library and backup writing your own

1611
01:12:40,949 --> 01:12:44,670
implementation when you are fast paced

1612
01:12:43,140 --> 01:12:46,079
as you may be this sometimes is better

1613
01:12:44,670 --> 01:12:49,140
when your knowledge of the problem is

1614
01:12:46,079 --> 01:12:50,729
sufficient I basically always write

1615
01:12:49,140 --> 01:12:53,820
everything myself these days because my

1616
01:12:50,729 --> 01:12:56,250
experience in my programming career has

1617
01:12:53,819 --> 01:12:56,759
been that I have always regretted using

1618
01:12:56,250 --> 01:13:00,000
third-party

1619
01:12:56,760 --> 01:13:02,310
anything software tools libraries

1620
01:13:00,000 --> 01:13:05,880
everything I pretty much find they're

1621
01:13:02,310 --> 01:13:09,510
all garbage the STB libraries are like

1622
01:13:05,880 --> 01:13:12,300
one singular shining example of things I

1623
01:13:09,510 --> 01:13:16,310
have not regretted using but they are

1624
01:13:12,300 --> 01:13:18,690
few and far between so like you know I

1625
01:13:16,310 --> 01:13:21,180
pretty much regret every third-party

1626
01:13:18,689 --> 01:13:23,429
thing I've ever used right up until

1627
01:13:21,180 --> 01:13:24,780
today using like Microsoft's compiler if

1628
01:13:23,430 --> 01:13:27,270
I had time to read a compiler I'd

1629
01:13:24,779 --> 01:13:29,130
replace it right and the debugger I'd

1630
01:13:27,270 --> 01:13:32,070
like I'd replace la so it's just not

1631
01:13:29,130 --> 01:13:33,630
good enough I don't like the lying on

1632
01:13:32,069 --> 01:13:37,859
them and they get worse over time is the

1633
01:13:33,630 --> 01:13:39,510
other thing right like every time I go

1634
01:13:37,859 --> 01:13:41,849
and have to move to a new version for

1635
01:13:39,510 --> 01:13:43,500
some reason everything breaks and it's

1636
01:13:41,850 --> 01:13:45,690
weird and they broke something and it's

1637
01:13:43,500 --> 01:13:49,829
slower and all this stuff right so yeah

1638
01:13:45,689 --> 01:13:52,469
I have total I have total NIH but it's

1639
01:13:49,829 --> 01:13:54,659
not like I was born with it like I I got

1640
01:13:52,470 --> 01:13:57,449
it from having been so disappointed in

1641
01:13:54,659 --> 01:14:00,029
so many things for so long so now my

1642
01:13:57,449 --> 01:14:04,079
rule is basically the things that I have

1643
01:14:00,029 --> 01:14:06,389
right now I use I never add new things

1644
01:14:04,079 --> 01:14:08,159
into the mix and I'm slowly trying to

1645
01:14:06,390 --> 01:14:09,720
replace all of the things that I

1646
01:14:08,159 --> 01:14:13,139
currently have to use that a third party

1647
01:14:09,720 --> 01:14:14,640
with my own stuff with the possible

1648
01:14:13,140 --> 01:14:15,960
exception of the SDB libraries because

1649
01:14:14,640 --> 01:14:18,270
like I said they've been like one of the

1650
01:14:15,960 --> 01:14:22,850
few things where I've been pretty darn

1651
01:14:18,270 --> 01:14:22,850
happy about my decision to use them

1652
01:14:28,859 --> 01:14:33,489
what GUI toolkit do you recommend I

1653
01:14:31,779 --> 01:14:39,189
don't know I don't have very much

1654
01:14:33,488 --> 01:14:41,648
experience with them I do know that one

1655
01:14:39,189 --> 01:14:45,699
of the guys I can't remember I think was

1656
01:14:41,649 --> 01:14:47,739
from Media Molecule maybe recently

1657
01:14:45,698 --> 01:14:49,418
opened sourced in immediate mode

1658
01:14:47,738 --> 01:14:52,088
graphical user interface library that he

1659
01:14:49,418 --> 01:14:53,979
said was kind of following the idea that

1660
01:14:52,088 --> 01:14:55,599
I had put forth for how to do immediate

1661
01:14:53,979 --> 01:14:58,599
mode graphical user interfaces as a

1662
01:14:55,599 --> 01:15:04,029
thing and people seem to really like it

1663
01:14:58,599 --> 01:15:05,078
so you know maybe that's good but I

1664
01:15:04,029 --> 01:15:07,329
don't have much preference to experience

1665
01:15:05,078 --> 01:15:13,478
it so I couldn't say but people seem to

1666
01:15:07,328 --> 01:15:14,978
like it so I suppose the kid would

1667
01:15:13,479 --> 01:15:16,239
ClearType quality instead of anti-us

1668
01:15:14,979 --> 01:15:18,069
play make a difference

1669
01:15:16,238 --> 01:15:20,228
well ClearType quality isn't what we

1670
01:15:18,069 --> 01:15:26,979
want that actually plays with the color

1671
01:15:20,229 --> 01:15:35,739
channels like right clear type is so you

1672
01:15:26,979 --> 01:15:38,199
know an LCD panel so you know an LCD

1673
01:15:35,738 --> 01:15:41,948
panel it typically has like a little

1674
01:15:38,198 --> 01:15:43,778
pixel right a pixel element is actually

1675
01:15:41,948 --> 01:15:46,748
like looks something like maybe this or

1676
01:15:43,779 --> 01:15:49,059
something like RGB where it's actually

1677
01:15:46,748 --> 01:15:50,648
got like a bar of red a bar of green and

1678
01:15:49,059 --> 01:15:52,418
a bar of blue or something and this is

1679
01:15:50,649 --> 01:15:55,929
not really right like but there's

1680
01:15:52,418 --> 01:15:58,208
various ways that this is done right so

1681
01:15:55,929 --> 01:16:00,819
what happens is it means that when you

1682
01:15:58,208 --> 01:16:05,168
have two pixels together you actually

1683
01:16:00,819 --> 01:16:07,569
have some sub pixel precision in the

1684
01:16:05,168 --> 01:16:10,448
color channels meaning if I wanted to

1685
01:16:07,569 --> 01:16:13,959
render a font that was aligned like this

1686
01:16:10,448 --> 01:16:18,578
I could actually make a blue fringe here

1687
01:16:13,958 --> 01:16:20,858
and then fill the RG and B here and get

1688
01:16:18,578 --> 01:16:23,139
a font that was in that looked like it

1689
01:16:20,859 --> 01:16:25,510
was positioned at a greater horizontal

1690
01:16:23,139 --> 01:16:28,118
fidelity than the number of pixels like

1691
01:16:25,510 --> 01:16:30,958
so in some sense you have 3x the

1692
01:16:28,118 --> 01:16:33,338
resolution right horizontally

1693
01:16:30,958 --> 01:16:35,408
that's what ClearType does that'd be

1694
01:16:33,338 --> 01:16:37,628
awful for what we do because remember

1695
01:16:35,408 --> 01:16:38,558
we're resizing bitmaps and stuff we

1696
01:16:37,628 --> 01:16:40,059
don't want any

1697
01:16:38,559 --> 01:16:42,219
they're fringing or those will pop out

1698
01:16:40,059 --> 01:16:44,729
like a sore thumb so we really really

1699
01:16:42,219 --> 01:16:47,198
really don't want cleartype to happen

1700
01:16:44,729 --> 01:16:51,628
under any circumstances in our Baker

1701
01:16:47,198 --> 01:16:51,628
that would be like really really bad I

1702
01:17:11,819 --> 01:17:21,309
guess we're done I guess that's it for

1703
01:17:15,128 --> 01:17:24,118
the day folks that is it for the day and

1704
01:17:21,309 --> 01:17:26,128
you know what that's it for the week

1705
01:17:24,118 --> 01:17:29,259
that's all she wrote

1706
01:17:26,128 --> 01:17:32,019
we're off tomorrow and Friday it's a

1707
01:17:29,260 --> 01:17:35,409
short week on hand mahira what are you

1708
01:17:32,019 --> 01:17:37,569
gonna do alright everyone thank you very

1709
01:17:35,408 --> 01:17:42,279
much for joining me for another episode

1710
01:17:37,569 --> 01:17:43,629
of handmade hero hopefully that gave you

1711
01:17:42,279 --> 01:17:46,478
some perspective on just how good the

1712
01:17:43,628 --> 01:17:48,068
STD libraries are extracting fonts with

1713
01:17:46,479 --> 01:17:49,958
windows looks about like it probably

1714
01:17:48,069 --> 01:17:53,079
would look using other font libraries as

1715
01:17:49,958 --> 01:17:54,519
well just kind of a mess and tons of

1716
01:17:53,078 --> 01:17:58,958
function calls and all these other sorts

1717
01:17:54,519 --> 01:18:00,909
of things right STB library is always

1718
01:17:58,958 --> 01:18:02,168
good and of course in this situation

1719
01:18:00,908 --> 01:18:03,878
also they're purpose-built for what we

1720
01:18:02,168 --> 01:18:05,979
need so that's an even bigger bonus it

1721
01:18:03,878 --> 01:18:08,378
means that you know we don't have to

1722
01:18:05,979 --> 01:18:10,269
fuss with with sort of setting up things

1723
01:18:08,378 --> 01:18:12,818
like drawing context and stuff right so

1724
01:18:10,269 --> 01:18:14,248
there you go that's how to do it so now

1725
01:18:12,819 --> 01:18:19,149
you know how to extract fonts as well

1726
01:18:14,248 --> 01:18:20,588
and maybe on Monday I'll do some will

1727
01:18:19,149 --> 01:18:22,030
fix the anti-icing so it's kind of done

1728
01:18:20,588 --> 01:18:24,338
so you can actually switch the pass and

1729
01:18:22,029 --> 01:18:26,318
maybe also the font size thing we can do

1730
01:18:24,338 --> 01:18:27,698
just so it's it's pretty symmetric

1731
01:18:26,319 --> 01:18:29,859
between both paths for anyone who wants

1732
01:18:27,698 --> 01:18:31,808
to play with either one so that's about

1733
01:18:29,859 --> 01:18:33,909
it and like I said I'm off for the week

1734
01:18:31,809 --> 01:18:36,998
so I will see you guys back here on

1735
01:18:33,908 --> 01:18:40,088
Monday hopefully you will all have a

1736
01:18:36,998 --> 01:18:41,529
great long weekend full of coding fun I

1737
01:18:40,088 --> 01:18:42,550
know I have plenty of coding I will be

1738
01:18:41,529 --> 01:18:45,279
doing this weekend as well

1739
01:18:42,550 --> 01:18:46,569
so until Monday have fun with that in

1740
01:18:45,279 --> 01:18:48,818
the meantime if you'd like to follow

1741
01:18:46,569 --> 01:18:49,959
along with the series source code you

1742
01:18:48,819 --> 01:18:50,360
can always pre-order the game at hand

1743
01:18:49,958 --> 01:18:52,130
made here

1744
01:18:50,359 --> 01:18:53,420
it comes to the source code so you can

1745
01:18:52,130 --> 01:18:55,880
download it every night after I finished

1746
01:18:53,420 --> 01:18:57,139
coding and play around it yourself we

1747
01:18:55,880 --> 01:18:59,029
also have a patreon page you want

1748
01:18:57,139 --> 01:19:00,829
support the video series we have a forum

1749
01:18:59,029 --> 01:19:02,300
site we can get community ports to Mac

1750
01:19:00,829 --> 01:19:05,779
and Linux community annotated episode

1751
01:19:02,300 --> 01:19:07,190
guide and of course a forum where you

1752
01:19:05,779 --> 01:19:08,899
can ask questions in case you have

1753
01:19:07,189 --> 01:19:10,729
questions about the source code and then

1754
01:19:08,899 --> 01:19:13,849
we also have a tweet bot tells you when

1755
01:19:10,729 --> 01:19:15,709
the the show will be live before trying

1756
01:19:13,850 --> 01:19:17,719
to catch it live and that's pretty handy

1757
01:19:15,710 --> 01:19:19,310
because especially like with this week

1758
01:19:17,719 --> 01:19:21,319
where it's a weird schedule it's just an

1759
01:19:19,310 --> 01:19:23,300
easy way to kind of know what's going

1760
01:19:21,319 --> 01:19:26,118
down when the schedules abnormal so

1761
01:19:23,300 --> 01:19:28,100
check that out that's it for me I will

1762
01:19:26,118 --> 01:19:30,649
see you guys back here on Monday have

1763
01:19:28,100 --> 01:19:31,969
fun programming and until Monday I will

1764
01:19:30,649 --> 01:19:34,539
see you guys on the Internet take it

1765
01:19:31,969 --> 01:19:34,539
easy everyone

