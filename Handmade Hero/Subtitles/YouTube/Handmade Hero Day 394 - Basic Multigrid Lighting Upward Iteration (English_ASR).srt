1
00:00:00,050 --> 00:00:05,129
alright hello everyone and welcome to

2
00:00:03,870 --> 00:00:08,129
hand made here oh sure we could a

3
00:00:05,129 --> 00:00:13,320
complete game live on stream we decided

4
00:00:08,130 --> 00:00:17,278
on taking absolutely ludicrous paths to

5
00:00:13,320 --> 00:00:23,179
lighting yesterday because I I guess

6
00:00:17,278 --> 00:00:23,179
because I was feeling saucy and so yeah

7
00:00:24,379 --> 00:00:29,460
we are going to go in a ridiculous ride

8
00:00:26,730 --> 00:00:30,929
and probably it won't work because most

9
00:00:29,460 --> 00:00:32,340
the time when you try to do something

10
00:00:30,928 --> 00:00:34,799
with rendering that's kind of weird and

11
00:00:32,340 --> 00:00:35,910
experimental it doesn't work but that's

12
00:00:34,799 --> 00:00:37,828
just the way it goes and like I said

13
00:00:35,909 --> 00:00:39,238
yesterday we already had I had a success

14
00:00:37,829 --> 00:00:40,950
with the Deaf feeling I suppose about

15
00:00:39,238 --> 00:00:44,429
that worked out really great actually

16
00:00:40,950 --> 00:00:46,079
and I'm super happy with it so why not

17
00:00:44,429 --> 00:00:48,149
press our luck why not roll the dice

18
00:00:46,079 --> 00:00:51,929
place yeah probably it's not going to

19
00:00:48,149 --> 00:00:55,679
come up with you know double sixes every

20
00:00:51,929 --> 00:00:57,509
time but you know you can't win them all

21
00:00:55,679 --> 00:01:01,109
but you certainly not going to win if

22
00:00:57,509 --> 00:01:02,369
you never roll so let's go ahead and and

23
00:01:01,109 --> 00:01:03,570
get started because there's nothing to

24
00:01:02,369 --> 00:01:07,709
talk about we talked about it yesterday

25
00:01:03,570 --> 00:01:09,000
it's the the the die has been cast so to

26
00:01:07,709 --> 00:01:12,149
speak I suppose we just don't know what

27
00:01:09,000 --> 00:01:13,650
it's going to be coming up as so today's

28
00:01:12,150 --> 00:01:17,219
day 394 you're going to want start on

29
00:01:13,650 --> 00:01:20,340
289 3 for the source code if you're

30
00:01:17,219 --> 00:01:23,400
following along with the code at home so

31
00:01:20,340 --> 00:01:25,200
let's go ahead and open up the open up

32
00:01:23,400 --> 00:01:28,320
the project here oops

33
00:01:25,200 --> 00:01:30,659
that's not I still handmade that

34
00:01:28,319 --> 00:01:35,368
sykesville handmade and I'm going to go

35
00:01:30,659 --> 00:01:36,868
ahead and just run exterior at and we'll

36
00:01:35,368 --> 00:01:39,239
talk about what our first steps are

37
00:01:36,868 --> 00:01:41,040
going to be so right now we have a

38
00:01:39,239 --> 00:01:43,500
simple directional light source attached

39
00:01:41,040 --> 00:01:45,180
to the main character here that I can

40
00:01:43,500 --> 00:01:46,259
move around right so ignore the main

41
00:01:45,180 --> 00:01:46,649
fact that the main character is moving

42
00:01:46,259 --> 00:01:48,000
around

43
00:01:46,649 --> 00:01:50,219
we're just care about the little light

44
00:01:48,000 --> 00:01:51,719
source is moving around right and so

45
00:01:50,219 --> 00:01:53,368
what we're going to try to do like I

46
00:01:51,719 --> 00:01:55,590
said is we're trying to put in a real

47
00:01:53,368 --> 00:01:58,890
more global illumination scheme right so

48
00:01:55,590 --> 00:02:01,228
I want lighting that has some work

49
00:01:58,890 --> 00:02:02,820
characteristics of real light than a

50
00:02:01,228 --> 00:02:04,890
simple directional point light that's

51
00:02:02,819 --> 00:02:06,269
direction what I was good point light is

52
00:02:04,890 --> 00:02:10,590
not directional then a simple point

53
00:02:06,269 --> 00:02:13,049
light scheme we're not in this path

54
00:02:10,590 --> 00:02:14,420
trying to improve the quality of surface

55
00:02:13,050 --> 00:02:17,540
response room

56
00:02:14,419 --> 00:02:19,068
that's kind of two big parts of lighting

57
00:02:17,539 --> 00:02:21,679
that you want to think about one is

58
00:02:19,068 --> 00:02:23,989
surface response and that's how much a

59
00:02:21,680 --> 00:02:26,200
surface can represent like real-world

60
00:02:23,990 --> 00:02:28,280
surfaces or you know different

61
00:02:26,199 --> 00:02:30,619
properties of real-world surfaces even

62
00:02:28,280 --> 00:02:32,209
trying to be artistic such as how glossy

63
00:02:30,620 --> 00:02:33,439
they are was a very nice atrophic

64
00:02:32,209 --> 00:02:35,240
reflections whether they ship the

65
00:02:33,439 --> 00:02:37,250
reflections whether they have oily

66
00:02:35,240 --> 00:02:40,580
finish whether they produce like the

67
00:02:37,250 --> 00:02:42,889
rainbow kind of a hue right from

68
00:02:40,580 --> 00:02:45,410
incoming light those are all properties

69
00:02:42,889 --> 00:02:47,809
of how incoming light is redistributed

70
00:02:45,409 --> 00:02:50,060
on a particular surface for the benefit

71
00:02:47,810 --> 00:02:51,319
of the viewer and that is not what we're

72
00:02:50,060 --> 00:02:53,209
looking at now right that's the

73
00:02:51,319 --> 00:02:55,539
reflectance function and we're not

74
00:02:53,209 --> 00:02:58,909
really looking at that now for this game

75
00:02:55,539 --> 00:03:00,439
we probably won't do much with that it's

76
00:02:58,909 --> 00:03:03,019
not a game that cares about materials

77
00:03:00,439 --> 00:03:05,120
its hand-drawn artwork its cartoony

78
00:03:03,019 --> 00:03:08,750
there's not a lot of room for like

79
00:03:05,120 --> 00:03:10,900
here's my oil finish Chrome mech thing

80
00:03:08,750 --> 00:03:13,580
like it's not that kind of game right

81
00:03:10,900 --> 00:03:15,769
but it is a kind of gamer we're

82
00:03:13,580 --> 00:03:17,989
exploring interesting world and it would

83
00:03:15,769 --> 00:03:19,430
be nice to have interesting lighting so

84
00:03:17,989 --> 00:03:21,799
the part that I'm focusing on now is

85
00:03:19,430 --> 00:03:24,650
like the light transport part of things

86
00:03:21,799 --> 00:03:27,769
right it's the part where light is moved

87
00:03:24,650 --> 00:03:29,060
around the scene and so we could do

88
00:03:27,769 --> 00:03:31,010
something relatively simple which is

89
00:03:29,060 --> 00:03:33,289
just like the light that I've got here

90
00:03:31,009 --> 00:03:34,699
right that I'm moving around where we

91
00:03:33,289 --> 00:03:37,099
just have a bunch of those and that

92
00:03:34,699 --> 00:03:39,919
wouldn't be too hard for us to do but

93
00:03:37,099 --> 00:03:42,769
that produces kind of relatively hard

94
00:03:39,919 --> 00:03:44,689
edge stuff as you can see and isn't

95
00:03:42,769 --> 00:03:46,789
necessarily the kind of look that I want

96
00:03:44,689 --> 00:03:50,299
it's more of the flashlight in a dark

97
00:03:46,789 --> 00:03:52,849
room kind of a look they might make more

98
00:03:50,299 --> 00:03:57,200
sense in a horror game not as much sense

99
00:03:52,849 --> 00:04:00,889
in a sort of fun exploration II Zelda

100
00:03:57,199 --> 00:04:02,479
kind of a game it's not it just doesn't

101
00:04:00,889 --> 00:04:06,500
give that I kind of looking for more of

102
00:04:02,479 --> 00:04:08,419
the soft you know redistributed light

103
00:04:06,500 --> 00:04:09,709
kind of look and so it's the lighting

104
00:04:08,419 --> 00:04:11,629
transport that we're really looking at

105
00:04:09,709 --> 00:04:14,420
now and what we decided to do was the

106
00:04:11,629 --> 00:04:16,100
harebrained scheme where basically I'm

107
00:04:14,419 --> 00:04:18,738
going to essentially treat it like a

108
00:04:16,100 --> 00:04:20,629
multi grid solver multi grid solvers are

109
00:04:18,738 --> 00:04:23,179
not traditionally used for lighting as

110
00:04:20,629 --> 00:04:25,759
far as I know they're traditionally used

111
00:04:23,180 --> 00:04:27,939
for fluid dynamics and the way they work

112
00:04:25,759 --> 00:04:31,269
is they try to

113
00:04:27,939 --> 00:04:33,719
treat things sort of like admit map if

114
00:04:31,269 --> 00:04:37,419
you imagine that it's very expensive to

115
00:04:33,720 --> 00:04:40,720
get large-scale things to happen over a

116
00:04:37,420 --> 00:04:41,830
grid that's very fine so for example if

117
00:04:40,720 --> 00:04:44,980
I'm trying to compute the lighting at

118
00:04:41,829 --> 00:04:48,310
every pixel computing that could be very

119
00:04:44,980 --> 00:04:51,670
expensive so what if I just do a mipmap

120
00:04:48,310 --> 00:04:53,920
process where I look at successively

121
00:04:51,670 --> 00:04:55,620
smaller versions of the lighting all the

122
00:04:53,920 --> 00:04:58,360
way up to like a single pixel

123
00:04:55,620 --> 00:05:00,430
encompassing the whole screen compute

124
00:04:58,360 --> 00:05:03,520
the lighting progressively from there

125
00:05:00,430 --> 00:05:05,980
down and spread out the results so that

126
00:05:03,519 --> 00:05:08,939
at every stage I'm just computing some

127
00:05:05,980 --> 00:05:12,939
little local lighting but I spread out

128
00:05:08,939 --> 00:05:16,930
large effects by having that NIT pyramid

129
00:05:12,939 --> 00:05:18,459
do sort of the works the reason I think

130
00:05:16,930 --> 00:05:19,449
it's a harebrained scheme and I really

131
00:05:18,459 --> 00:05:27,879
have no idea whether it's going to work

132
00:05:19,449 --> 00:05:29,560
is because light is not a fluid and if

133
00:05:27,879 --> 00:05:31,209
there are theoretical physicists on the

134
00:05:29,560 --> 00:05:33,370
stream I apologize for saying that

135
00:05:31,209 --> 00:05:35,259
because for all I know like is a fluid I

136
00:05:33,370 --> 00:05:37,840
certainly don't want to pretend that I

137
00:05:35,259 --> 00:05:39,639
understand quantum dynamics or quantum

138
00:05:37,839 --> 00:05:42,429
mechanics I suppose I should say I don't

139
00:05:39,639 --> 00:05:44,079
however what I mean to say is the

140
00:05:42,430 --> 00:05:45,129
lighting transport problem as we

141
00:05:44,079 --> 00:05:47,439
typically look at in computer graphics

142
00:05:45,129 --> 00:05:48,969
is not a fluid simulation the reason

143
00:05:47,439 --> 00:05:50,620
it's not a fluid simulation is because

144
00:05:48,970 --> 00:05:52,720
typically the participating media is

145
00:05:50,620 --> 00:05:54,430
just not there you're talking about

146
00:05:52,720 --> 00:05:56,680
light traveling long distances in a

147
00:05:54,430 --> 00:06:01,389
straight line and you really don't have

148
00:05:56,680 --> 00:06:03,459
this sort of situation where you need to

149
00:06:01,389 --> 00:06:05,918
sort of diffuse energy the way that a

150
00:06:03,459 --> 00:06:08,918
fluid does where fluid is only really

151
00:06:05,918 --> 00:06:11,379
interacting with the fluid directly next

152
00:06:08,918 --> 00:06:13,240
to it so it's a harebrained scheme Multi

153
00:06:11,379 --> 00:06:15,219
grids not really a great fit for it

154
00:06:13,240 --> 00:06:17,019
however one of the things that is true

155
00:06:15,220 --> 00:06:19,060
in general about lighting is that

156
00:06:17,019 --> 00:06:21,159
nothing is a good fit for it it is a

157
00:06:19,060 --> 00:06:23,230
problem that defies any good solution

158
00:06:21,160 --> 00:06:25,419
Monte Carlo methods were pretty much the

159
00:06:23,230 --> 00:06:28,360
only thing used at the high end for

160
00:06:25,418 --> 00:06:30,639
accuracy and they are incredibly slow so

161
00:06:28,360 --> 00:06:32,949
it's not like we're issuing some a

162
00:06:30,639 --> 00:06:34,629
really fantastic perfect scheme that

163
00:06:32,949 --> 00:06:36,909
produces fantastic lighting in a short

164
00:06:34,629 --> 00:06:38,319
amount of time that doesn't exist so we

165
00:06:36,910 --> 00:06:40,120
are just looking for something that

166
00:06:38,319 --> 00:06:41,199
gives us an interesting artistically

167
00:06:40,120 --> 00:06:42,939
pleasing result

168
00:06:41,199 --> 00:06:45,278
that bears some resemblance to how light

169
00:06:42,939 --> 00:06:46,990
actually works that's all we really want

170
00:06:45,278 --> 00:06:54,908
and so it's something that I think would

171
00:06:46,990 --> 00:06:56,139
be fun to try few minutes all right so

172
00:06:54,908 --> 00:06:57,699
there's two halves to this problem that

173
00:06:56,139 --> 00:06:59,110
we have to solve one of them is

174
00:06:57,699 --> 00:07:01,028
incredibly easy one of them is more

175
00:06:59,110 --> 00:07:02,408
difficult the one that's incredibly easy

176
00:07:01,028 --> 00:07:05,050
is we have to get our lighting

177
00:07:02,408 --> 00:07:06,848
information down to the render in the

178
00:07:05,050 --> 00:07:08,560
first place because up until now we have

179
00:07:06,848 --> 00:07:09,968
not had lighting so there's no point in

180
00:07:08,560 --> 00:07:13,870
telling it whether things are lit up

181
00:07:09,968 --> 00:07:15,370
since nothing could light up we are now

182
00:07:13,870 --> 00:07:16,990
going to have the ability for everything

183
00:07:15,370 --> 00:07:18,278
in the game to be lit if we want and

184
00:07:16,990 --> 00:07:18,939
when I say everything I mean literally

185
00:07:18,278 --> 00:07:21,668
everything

186
00:07:18,939 --> 00:07:23,199
if this scheme works anything in the

187
00:07:21,668 --> 00:07:25,658
game could be emitting light no matter

188
00:07:23,199 --> 00:07:27,610
what shape it is even so things like the

189
00:07:25,658 --> 00:07:29,918
entire cubes that the hero is standing

190
00:07:27,610 --> 00:07:31,990
on right now could be lit up itself and

191
00:07:29,918 --> 00:07:34,359
that would actually spread light around

192
00:07:31,990 --> 00:07:36,009
to the world that would be awesome don't

193
00:07:34,360 --> 00:07:38,310
get your hopes up again harebrained

194
00:07:36,009 --> 00:07:41,348
scheme probably not going to work so

195
00:07:38,310 --> 00:07:44,139
with that in mind that is one half of

196
00:07:41,348 --> 00:07:48,278
the problem I think I hope I'm not sure

197
00:07:44,139 --> 00:07:51,430
probably I don't know we can't ignore

198
00:07:48,278 --> 00:07:54,908
that part of the problem for now because

199
00:07:51,430 --> 00:07:58,088
all we really need is one light source

200
00:07:54,908 --> 00:08:00,519
to start practicing with to get the rest

201
00:07:58,088 --> 00:08:02,829
of the team working and I suspect that

202
00:08:00,519 --> 00:08:05,198
will be the easier way to deal with it

203
00:08:02,829 --> 00:08:09,430
because that way we can isolate the

204
00:08:05,199 --> 00:08:10,990
transfer problem we're having to get

205
00:08:09,430 --> 00:08:13,028
lighting information out of our depth

206
00:08:10,990 --> 00:08:15,038
field passes will presumably be more

207
00:08:13,028 --> 00:08:16,509
difficult than just writing it directly

208
00:08:15,038 --> 00:08:18,610
into a buffer with its own separate path

209
00:08:16,509 --> 00:08:20,560
that we can verify so what I think I'm

210
00:08:18,610 --> 00:08:23,379
going to do first is take this point

211
00:08:20,560 --> 00:08:30,158
light source that we've got here and

212
00:08:23,379 --> 00:08:34,089
renders that into the system to start

213
00:08:30,158 --> 00:08:37,689
with as its own separate completely

214
00:08:34,089 --> 00:08:40,089
one-off path that feeds the lighting for

215
00:08:37,690 --> 00:08:42,190
the lighting path and the reason I want

216
00:08:40,089 --> 00:08:44,169
to do that again is because I want to

217
00:08:42,190 --> 00:08:45,819
take the rendering of the depth peels

218
00:08:44,168 --> 00:08:48,338
into the light buffer out of the

219
00:08:45,818 --> 00:08:49,809
equation first because I feel like we

220
00:08:48,339 --> 00:08:51,190
could easily have bugs and bats that

221
00:08:49,809 --> 00:08:53,768
would lead us to believe the other part

222
00:08:51,190 --> 00:08:54,610
isn't working so let's get the other

223
00:08:53,769 --> 00:08:56,919
part working as

224
00:08:54,610 --> 00:08:58,720
we can first with lights that we specify

225
00:08:56,919 --> 00:09:00,099
mechanically and precisely so that we

226
00:08:58,720 --> 00:09:02,110
can set them to someplace that we know

227
00:09:00,100 --> 00:09:04,060
with the color that we know in a very

228
00:09:02,110 --> 00:09:05,980
acidic way we can look at the bitmap and

229
00:09:04,059 --> 00:09:08,439
see that there is one light in the place

230
00:09:05,980 --> 00:09:09,820
we expect it to be at the start and then

231
00:09:08,440 --> 00:09:12,730
we can look at each successive

232
00:09:09,820 --> 00:09:15,010
resolution of our multi grid up through

233
00:09:12,730 --> 00:09:16,899
the upward propagation and then the

234
00:09:15,009 --> 00:09:18,309
downward propagation to figure out

235
00:09:16,899 --> 00:09:20,850
whether what we're doing makes any sense

236
00:09:18,309 --> 00:09:24,309
at all or whether it's just dumb right

237
00:09:20,850 --> 00:09:25,570
okay and so the second part of that that

238
00:09:24,309 --> 00:09:28,299
we have to deal with is the fact that we

239
00:09:25,570 --> 00:09:31,600
got we're going to need normals in in

240
00:09:28,299 --> 00:09:33,099
this situation as well and so that's a

241
00:09:31,600 --> 00:09:34,778
little bit harder to come by but what we

242
00:09:33,100 --> 00:09:36,070
can do is assume that everything is

243
00:09:34,778 --> 00:09:38,679
pointing upwards at the beginning and

244
00:09:36,070 --> 00:09:40,570
just do the light transport with a flat

245
00:09:38,679 --> 00:09:42,429
surface and then work our way up to

246
00:09:40,570 --> 00:09:44,769
light transport with something else so

247
00:09:42,429 --> 00:09:46,719
we have a lot of options here we'll do

248
00:09:44,769 --> 00:09:49,149
the best we can we don't know whether

249
00:09:46,720 --> 00:09:50,230
they'll work out okay but we're you know

250
00:09:49,149 --> 00:09:52,690
like I said we're going to take it one

251
00:09:50,230 --> 00:10:00,879
step at a time and we'll see what we can

252
00:09:52,690 --> 00:10:03,220
do all right so let's get started at the

253
00:10:00,879 --> 00:10:05,169
end of last screen we already created

254
00:10:03,220 --> 00:10:07,060
some scratch base for this stuff to

255
00:10:05,169 --> 00:10:08,889
occur and that was the thing called a

256
00:10:07,059 --> 00:10:10,629
light buffer and what we did in the

257
00:10:08,889 --> 00:10:11,799
light buffer is we made a structure that

258
00:10:10,629 --> 00:10:15,549
would contain the things that we

259
00:10:11,799 --> 00:10:18,399
actually need so we have 2 frame buffers

260
00:10:15,549 --> 00:10:21,609
here right I don't know why this is not

261
00:10:18,399 --> 00:10:31,899
called frame buffer it should be so

262
00:10:21,610 --> 00:10:34,329
let's go ahead and change that there we

263
00:10:31,899 --> 00:10:37,028
go so we've got two frame buffers here

264
00:10:34,328 --> 00:10:37,929
these frame buffers are not representing

265
00:10:37,028 --> 00:10:38,708
different information they're

266
00:10:37,929 --> 00:10:40,299
representing effectively the same

267
00:10:38,708 --> 00:10:41,708
informations their only difference is

268
00:10:40,299 --> 00:10:43,929
they're representing different right

269
00:10:41,708 --> 00:10:47,109
styles so one of the things that happens

270
00:10:43,929 --> 00:10:48,578
in OpenGL and it's really annoying and

271
00:10:47,110 --> 00:10:50,110
stupid but it's just the way that

272
00:10:48,578 --> 00:10:51,370
graphics cards work and they have to do

273
00:10:50,110 --> 00:10:52,449
it for validation purposes because don't

274
00:10:51,370 --> 00:10:53,560
have every direction it's a long story

275
00:10:52,448 --> 00:10:56,078
we don't need to go into right now but

276
00:10:53,559 --> 00:10:57,759
just the way things are is that you

277
00:10:56,078 --> 00:10:59,278
can't just point something at a texture

278
00:10:57,759 --> 00:11:01,179
and say that's what I'm drawing to

279
00:10:59,278 --> 00:11:03,189
instead you have to create this object

280
00:11:01,179 --> 00:11:05,739
that sort of swapped textures into it

281
00:11:03,190 --> 00:11:07,190
and then gets validated and so what that

282
00:11:05,740 --> 00:11:08,600
means is for every combination

283
00:11:07,190 --> 00:11:09,710
textures we might want to write - we

284
00:11:08,600 --> 00:11:11,659
have to create a corresponding frame

285
00:11:09,710 --> 00:11:13,129
buffer object and lock it down if we

286
00:11:11,659 --> 00:11:15,559
don't we run the risk of paying a

287
00:11:13,129 --> 00:11:19,909
extremely high upfront cost every time

288
00:11:15,559 --> 00:11:21,259
we switch to that writing scheme since

289
00:11:19,909 --> 00:11:22,969
we know that every time through the

290
00:11:21,259 --> 00:11:24,830
light buffer we will only have two

291
00:11:22,970 --> 00:11:26,180
different lighting schemes we just

292
00:11:24,830 --> 00:11:27,889
create a frame buffer for each of them

293
00:11:26,179 --> 00:11:30,379
so that the validation process can

294
00:11:27,889 --> 00:11:31,819
happen once and never again that keeps

295
00:11:30,379 --> 00:11:34,279
us from having that hiccup so that's why

296
00:11:31,820 --> 00:11:36,350
we've got these two so the right --oil

297
00:11:34,279 --> 00:11:38,329
frame buffer is the frame buffer that

298
00:11:36,350 --> 00:11:39,500
writes to these four at the same time so

299
00:11:38,330 --> 00:11:41,810
there's a frame buffer that has these

300
00:11:39,500 --> 00:11:43,549
four as color buffers which means that

301
00:11:41,809 --> 00:11:45,799
as we write in the shader we can

302
00:11:43,549 --> 00:11:48,439
actually omit one thing to each of them

303
00:11:45,799 --> 00:11:50,569
the point of that is on the upward

304
00:11:48,440 --> 00:11:52,430
process where we gather our lighting up

305
00:11:50,570 --> 00:11:53,960
and we successively swish it down to

306
00:11:52,429 --> 00:11:57,069
smaller and smaller resolution texture

307
00:11:53,960 --> 00:12:00,259
Maps to do bigger and bigger transfers

308
00:11:57,070 --> 00:12:02,240
we want to be able to average all of

309
00:12:00,259 --> 00:12:04,850
those together at once a lot of take

310
00:12:02,240 --> 00:12:07,340
basically a set of four pixels smoosh

311
00:12:04,850 --> 00:12:10,009
them together and write out one pixel in

312
00:12:07,340 --> 00:12:12,710
the lower res map every time we take

313
00:12:10,009 --> 00:12:14,509
that sampling down one step so that's

314
00:12:12,710 --> 00:12:16,400
really what that is for what the write

315
00:12:14,509 --> 00:12:18,799
all frame buffer is the upward sampling

316
00:12:16,399 --> 00:12:21,110
process which is producing coarser and

317
00:12:18,799 --> 00:12:25,039
coarser averaged versions of the

318
00:12:21,110 --> 00:12:27,950
lighting the right emit frame buffer is

319
00:12:25,039 --> 00:12:29,719
the way down so once we have that we

320
00:12:27,950 --> 00:12:33,290
know that the surface colors at any

321
00:12:29,720 --> 00:12:35,300
point and the the XY of the the

322
00:12:33,289 --> 00:12:37,819
direction and the depth at which the the

323
00:12:35,299 --> 00:12:40,370
lighting surface is being considered for

324
00:12:37,820 --> 00:12:42,770
any particular point those are not going

325
00:12:40,370 --> 00:12:45,139
to change any more because we were

326
00:12:42,769 --> 00:12:46,819
producing them whole cloth on the way up

327
00:12:45,139 --> 00:12:49,789
because remember we basically start with

328
00:12:46,820 --> 00:12:51,379
empty textures all the way in our mid

329
00:12:49,789 --> 00:12:52,429
period except for the base level which

330
00:12:51,379 --> 00:12:55,338
is the one that initially as the

331
00:12:52,429 --> 00:12:57,889
lighting written into it so what we need

332
00:12:55,339 --> 00:12:58,940
to do from there is condense those and

333
00:12:57,889 --> 00:13:00,860
creates the new ones that's where

334
00:12:58,940 --> 00:13:02,480
writing everything on the way down we

335
00:13:00,860 --> 00:13:04,669
don't need to touch the surface color or

336
00:13:02,480 --> 00:13:06,830
the position or direction of the surface

337
00:13:04,669 --> 00:13:08,539
elements because that's just known and

338
00:13:06,830 --> 00:13:10,100
it doesn't change the reflectance

339
00:13:08,539 --> 00:13:12,110
properties of a surface aren't going to

340
00:13:10,100 --> 00:13:13,580
change right they're just known now so

341
00:13:12,110 --> 00:13:15,830
now we've built the mid pyramid it's

342
00:13:13,580 --> 00:13:18,110
done what's going to change is the light

343
00:13:15,830 --> 00:13:20,720
transport so what we do on each step

344
00:13:18,110 --> 00:13:23,480
down the pyramid is we take a look

345
00:13:20,720 --> 00:13:26,810
what the emitters are nearby and we add

346
00:13:23,480 --> 00:13:28,938
in light to the front and back of the

347
00:13:26,809 --> 00:13:31,909
particular element that we are

348
00:13:28,938 --> 00:13:35,419
considering at the next level down right

349
00:13:31,909 --> 00:13:38,568
and more specifically we do it for a

350
00:13:35,419 --> 00:13:41,360
couple different ones of them right and

351
00:13:38,568 --> 00:13:42,588
so that in that in-and-out process like

352
00:13:41,360 --> 00:13:43,699
I said because it's writing very

353
00:13:42,589 --> 00:13:45,019
different things we create tube frame

354
00:13:43,698 --> 00:13:47,838
buffers because we don't want to blow a

355
00:13:45,019 --> 00:13:49,339
bunch of rights on the way down for no

356
00:13:47,839 --> 00:13:51,319
reason because remember we're going to

357
00:13:49,339 --> 00:13:52,550
want to optimize this eventually we're

358
00:13:51,318 --> 00:13:53,860
going to want to make sure that we're

359
00:13:52,549 --> 00:13:56,838
not spending about two bandwidth

360
00:13:53,860 --> 00:13:58,519
unnecessarily and if we just wrote the

361
00:13:56,839 --> 00:14:00,379
surface color texture in the NP flex

362
00:13:58,519 --> 00:14:01,850
again or even just flushed zeros out to

363
00:14:00,379 --> 00:14:03,829
them it's just bandwidth we don't need

364
00:14:01,850 --> 00:14:05,540
to spend because those textures only

365
00:14:03,828 --> 00:14:08,028
need to be read from they don't need to

366
00:14:05,539 --> 00:14:09,860
be written to at all and so that's a

367
00:14:08,028 --> 00:14:16,639
really important part of the process to

368
00:14:09,860 --> 00:14:18,199
understand okay and also I should

369
00:14:16,639 --> 00:14:20,289
mention whether things it actually also

370
00:14:18,198 --> 00:14:23,059
gives us a feature that we might want

371
00:14:20,289 --> 00:14:25,938
which is that the surface color texture

372
00:14:23,059 --> 00:14:30,378
and the NP texture for the lower level

373
00:14:25,938 --> 00:14:32,448
version is actually something that we

374
00:14:30,379 --> 00:14:35,839
could read from in the same stage right

375
00:14:32,448 --> 00:14:37,519
and that's a sort of thing that I don't

376
00:14:35,839 --> 00:14:39,350
actually know yet it may be that we

377
00:14:37,519 --> 00:14:42,620
actually need two more textures in here

378
00:14:39,350 --> 00:14:44,480
right we may need an emit up in and emit

379
00:14:42,620 --> 00:14:46,009
down and the reason is because we need

380
00:14:44,480 --> 00:14:49,819
to read from different ones that we

381
00:14:46,009 --> 00:14:53,930
write to potentially and so that I just

382
00:14:49,818 --> 00:14:55,909
don't know yet I'm not sure if I think

383
00:14:53,929 --> 00:14:57,859
we might and we'll see when we write the

384
00:14:55,909 --> 00:15:00,469
code it'll be obvious but the reason

385
00:14:57,860 --> 00:15:05,379
that I say that just to be clear is the

386
00:15:00,470 --> 00:15:09,399
way that this thing is going to work is

387
00:15:05,379 --> 00:15:09,399
essentially you can imagine

388
00:15:15,049 --> 00:15:21,568
looking at at these bitmaps right so

389
00:15:18,778 --> 00:15:23,789
here we've got a two by two and here

390
00:15:21,568 --> 00:15:26,068
we've got a four by four so in any

391
00:15:23,789 --> 00:15:27,419
particular stage of this algorithm we're

392
00:15:26,068 --> 00:15:29,429
going to be looking at two by twos that

393
00:15:27,419 --> 00:15:32,219
expand to four by fours more or less

394
00:15:29,429 --> 00:15:35,818
right and what we're going to be doing

395
00:15:32,220 --> 00:15:38,610
to it you know you got to kind of think

396
00:15:35,818 --> 00:15:40,769
of it I suppose as being a whole grid as

397
00:15:38,610 --> 00:15:42,539
well but what we're going to do is we're

398
00:15:40,769 --> 00:15:45,209
going to say something like well we need

399
00:15:42,539 --> 00:15:47,789
to update the lighting information for

400
00:15:45,208 --> 00:15:49,619
this cell right and maybe what I should

401
00:15:47,789 --> 00:15:50,969
have done is said we're going to update

402
00:15:49,620 --> 00:15:53,009
the letting information for this cell

403
00:15:50,970 --> 00:15:55,350
right and in order to do that we would

404
00:15:53,009 --> 00:15:58,079
say well what's the bilinear sample that

405
00:15:55,350 --> 00:16:00,629
takes place like right here because

406
00:15:58,078 --> 00:16:04,229
that's where that cell Maps to in the

407
00:16:00,629 --> 00:16:05,730
upper level bitmap right and so in order

408
00:16:04,230 --> 00:16:09,509
to do that we're going to look at these

409
00:16:05,730 --> 00:16:11,550
four cells worth of lighting and compute

410
00:16:09,509 --> 00:16:14,699
a lighting adjustment for this but it's

411
00:16:11,549 --> 00:16:16,588
delighting adjustment right that's the

412
00:16:14,698 --> 00:16:19,938
important part it's going to adjust the

413
00:16:16,589 --> 00:16:23,069
lighting at that point it's not going to

414
00:16:19,938 --> 00:16:25,289
overwrite it completely it's going to do

415
00:16:23,068 --> 00:16:26,639
a plus or minus at least that's my

416
00:16:25,289 --> 00:16:29,429
assumption we'll see when we talk

417
00:16:26,639 --> 00:16:32,698
experimenting so what we can do is we

418
00:16:29,429 --> 00:16:33,870
could write an add to it and if it's

419
00:16:32,698 --> 00:16:35,789
floating-point and supports

420
00:16:33,870 --> 00:16:39,480
floating-point add in as a blend mode

421
00:16:35,789 --> 00:16:43,259
then we would be able to just let that

422
00:16:39,480 --> 00:16:45,329
happen but if it doesn't support that if

423
00:16:43,259 --> 00:16:47,550
it doesn't support floating-point add is

424
00:16:45,328 --> 00:16:51,000
a blend mode which I don't know how many

425
00:16:47,549 --> 00:16:52,289
cards do then we need to read from this

426
00:16:51,000 --> 00:16:54,419
texture to figure out was there in the

427
00:16:52,289 --> 00:16:56,399
first place so we can do the add and

428
00:16:54,419 --> 00:16:59,278
then write the results out if that's the

429
00:16:56,399 --> 00:17:02,610
case we really can't read from and write

430
00:16:59,278 --> 00:17:07,828
to the same texture in the same pass

431
00:17:02,610 --> 00:17:10,259
right that's not allowed that's why we

432
00:17:07,828 --> 00:17:11,818
have a blending unit if you could if you

433
00:17:10,259 --> 00:17:13,379
could read and write from one texture in

434
00:17:11,818 --> 00:17:15,119
the same pass you wouldn't need a

435
00:17:13,380 --> 00:17:16,919
blending unit right there'd be no such

436
00:17:15,119 --> 00:17:19,349
thing as blending because if you wanted

437
00:17:16,919 --> 00:17:21,209
to blend with the result you just set

438
00:17:19,349 --> 00:17:22,980
the destination buffer as one of your

439
00:17:21,209 --> 00:17:25,169
input textures it's a much cleaner way

440
00:17:22,980 --> 00:17:25,990
to do it much more powerful problem is

441
00:17:25,169 --> 00:17:27,309
it's much more

442
00:17:25,990 --> 00:17:29,380
because now everything has to be

443
00:17:27,308 --> 00:17:31,240
serialized so that's why we have a

444
00:17:29,380 --> 00:17:33,280
blending unit so if the blending unit

445
00:17:31,240 --> 00:17:33,460
supports add great I think we're good to

446
00:17:33,279 --> 00:17:35,289
go

447
00:17:33,460 --> 00:17:38,140
if the blending units doesn't support

448
00:17:35,289 --> 00:17:40,450
add I think we're going to have done a

449
00:17:38,140 --> 00:17:42,880
separate texture that we write to so

450
00:17:40,450 --> 00:17:47,049
basically this right here would be you

451
00:17:42,880 --> 00:17:48,610
know vo you and you know final front

452
00:17:47,049 --> 00:17:52,659
commit or something right I don't know

453
00:17:48,609 --> 00:17:54,519
but it would go down in that way so

454
00:17:52,660 --> 00:17:55,540
again not a problem at all we don't care

455
00:17:54,519 --> 00:17:58,900
about that because it doesn't increase

456
00:17:55,539 --> 00:18:01,750
our bandwidth much at all because again

457
00:17:58,900 --> 00:18:04,120
we're not reading and writing from

458
00:18:01,750 --> 00:18:06,308
another set of bitmaps what we're doing

459
00:18:04,119 --> 00:18:08,939
is substituting one of the places we

460
00:18:06,308 --> 00:18:11,049
were writing to with a different thing

461
00:18:08,940 --> 00:18:13,000
so while it could affect the cache a

462
00:18:11,049 --> 00:18:14,049
little bit since these are passes I

463
00:18:13,000 --> 00:18:15,308
don't think it would cut the tummy out

464
00:18:14,049 --> 00:18:16,509
of the cache by then I don't know maybe

465
00:18:15,308 --> 00:18:20,289
the top of apartment they wouldn't be

466
00:18:16,509 --> 00:18:22,390
much hard today so chances are this

467
00:18:20,289 --> 00:18:24,639
wouldn't affect us too much but again

468
00:18:22,390 --> 00:18:26,320
you never really know obviously if we

469
00:18:24,640 --> 00:18:28,690
can do it with less sex ratio we should

470
00:18:26,319 --> 00:18:30,189
because it can't hurt but again like I

471
00:18:28,690 --> 00:18:31,509
say it could be the case that we need to

472
00:18:30,190 --> 00:18:33,429
add in there I'm not going to turn about

473
00:18:31,509 --> 00:18:35,019
that it's it's not as bad as having to

474
00:18:33,429 --> 00:18:36,550
add more that we're actually using at

475
00:18:35,019 --> 00:18:37,869
the same time because that's the thing

476
00:18:36,549 --> 00:18:39,819
that we really want to try and keep down

477
00:18:37,869 --> 00:18:41,469
because we're already pretty high here

478
00:18:39,819 --> 00:18:44,139
with 4 textures at the same time it's a

479
00:18:41,470 --> 00:18:51,429
lot of textures to write to at the same

480
00:18:44,140 --> 00:18:53,200
time and keep in mind it's going to go

481
00:18:51,429 --> 00:18:55,929
it's going to get worse

482
00:18:53,200 --> 00:18:57,789
those four textures could expand to 8

483
00:18:55,929 --> 00:18:59,290
textures or 16 textures eventually

484
00:18:57,789 --> 00:19:01,839
depending on how we choose to view the

485
00:18:59,289 --> 00:19:04,089
Deaf feeling if we choose to smush the

486
00:19:01,839 --> 00:19:06,939
depth going down into a volume texture

487
00:19:04,089 --> 00:19:09,189
so or a texture array where we just have

488
00:19:06,940 --> 00:19:10,570
one texture that has three levels that's

489
00:19:09,190 --> 00:19:12,160
probably the smartest way to go and

490
00:19:10,569 --> 00:19:14,649
that's probably how I'll try to go and

491
00:19:12,160 --> 00:19:16,480
the max case it'll always just before we

492
00:19:14,650 --> 00:19:17,650
won't have to worry about it but if we

493
00:19:16,480 --> 00:19:19,360
choose to have those be separate

494
00:19:17,650 --> 00:19:20,890
textures that becomes a little bit more

495
00:19:19,359 --> 00:19:22,349
complicated the reason it goes a little

496
00:19:20,890 --> 00:19:24,550
bit more complicated cuz at that point

497
00:19:22,349 --> 00:19:26,500
we've got a lot of texture handle

498
00:19:24,549 --> 00:19:28,299
sitting around 16 is the maximum we

499
00:19:26,500 --> 00:19:30,429
could probably expect to use we would be

500
00:19:28,299 --> 00:19:31,990
using that maximum that doesn't thrill

501
00:19:30,429 --> 00:19:35,440
me right I don't like to be up as a

502
00:19:31,990 --> 00:19:37,779
maximum number for anything if you can

503
00:19:35,440 --> 00:19:39,000
avoid it but you know if we have two

504
00:19:37,779 --> 00:19:40,980
reactors

505
00:19:39,000 --> 00:19:43,799
my suspicion would be yet these will

506
00:19:40,980 --> 00:19:45,120
probably expand to volume textures or

507
00:19:43,799 --> 00:19:46,409
texture arrays probably they don't

508
00:19:45,119 --> 00:19:47,189
really need to be volume textures for

509
00:19:46,410 --> 00:19:49,650
any particular reason

510
00:19:47,190 --> 00:19:52,110
in the sense that we don't need to look

511
00:19:49,650 --> 00:19:54,420
them up by arbitrary UVW what we really

512
00:19:52,109 --> 00:19:56,279
just need to be able to pick 0 1 &amp; 2 or

513
00:19:54,420 --> 00:20:02,300
3 we're going to read from each of the

514
00:19:56,279 --> 00:20:02,299
frame successfully so texture array

515
00:20:02,569 --> 00:20:08,639
would be fine for our purposes alright

516
00:20:06,690 --> 00:20:12,570
so anyway here we go let's let's get

517
00:20:08,640 --> 00:20:13,710
started we know what we need to do it's

518
00:20:12,569 --> 00:20:16,649
just going to be a bit of a grind to do

519
00:20:13,710 --> 00:20:18,630
it and again it'd be pretty easy to just

520
00:20:16,650 --> 00:20:19,800
write this code but in GPU land it's

521
00:20:18,630 --> 00:20:22,050
going to it's going to take a bunch of

522
00:20:19,799 --> 00:20:23,190
gyration and happy dances and weird

523
00:20:22,049 --> 00:20:24,329
shaders and all this other sorts of

524
00:20:23,190 --> 00:20:28,470
thing

525
00:20:24,329 --> 00:20:30,149
so ok let's start off by creating a very

526
00:20:28,470 --> 00:20:31,860
simple process what we want to do here

527
00:20:30,150 --> 00:20:33,900
is create a shader that's going to write

528
00:20:31,859 --> 00:20:36,569
a light source into the base level map

529
00:20:33,900 --> 00:20:38,190
of one of these maps so that and then

530
00:20:36,569 --> 00:20:39,869
draw that to the street so we just want

531
00:20:38,190 --> 00:20:41,549
to dress this case we could see it so

532
00:20:39,869 --> 00:20:43,079
that we know what it's doing because if

533
00:20:41,549 --> 00:20:44,129
we can't see these things we're never

534
00:20:43,079 --> 00:20:46,319
going to know if they're working right

535
00:20:44,130 --> 00:20:49,110
so what I want to do is I want to be

536
00:20:46,319 --> 00:20:51,389
able to look through those different

537
00:20:49,109 --> 00:20:52,740
parts of the map so in addition to that

538
00:20:51,390 --> 00:20:54,660
what I'm also going to do is I'm going

539
00:20:52,740 --> 00:20:57,720
to do something up here we're going to

540
00:20:54,660 --> 00:20:59,910
have a totally nutso crazy situation

541
00:20:57,720 --> 00:21:03,480
where inside the OpenGL renderer I'm

542
00:20:59,910 --> 00:21:06,090
going to let us pick out what we want to

543
00:21:03,480 --> 00:21:09,960
view so that we can view each level of

544
00:21:06,089 --> 00:21:13,289
those texture Maps in series as we go so

545
00:21:09,960 --> 00:21:14,970
what you can see here is at the end we

546
00:21:13,289 --> 00:21:17,069
kind of have this thing that we were

547
00:21:14,970 --> 00:21:19,170
using before where we were like here's a

548
00:21:17,069 --> 00:21:21,210
blip frame buffer right we want to look

549
00:21:19,170 --> 00:21:24,480
at what's in this this frame buffer here

550
00:21:21,210 --> 00:21:25,950
right so what I'm going to do is I'm

551
00:21:24,480 --> 00:21:28,980
essentially just going to hijack this

552
00:21:25,950 --> 00:21:31,950
code and turn it back on so that we can

553
00:21:28,980 --> 00:21:34,559
view our frame buffers directly at the

554
00:21:31,950 --> 00:21:38,299
end looking at exactly what they look

555
00:21:34,559 --> 00:21:41,579
like right and I don't really remember

556
00:21:38,299 --> 00:21:44,490
if this does a stretch but I believe it

557
00:21:41,579 --> 00:21:47,159
does I don't know that we really want

558
00:21:44,490 --> 00:21:49,109
the stretch to be changing our pixel

559
00:21:47,160 --> 00:21:50,340
values so what I'm going to do is I'm

560
00:21:49,109 --> 00:21:51,178
going to set it to nearest neighbor

561
00:21:50,339 --> 00:21:53,428
sampling

562
00:21:51,179 --> 00:21:56,038
so that we can actually see the big ol

563
00:21:53,429 --> 00:21:57,419
pixels because for this we really want

564
00:21:56,038 --> 00:21:59,729
to know exactly what's getting written

565
00:21:57,419 --> 00:22:01,169
we're not looking to produce a visually

566
00:21:59,729 --> 00:22:03,629
pleasing image right now we're looking

567
00:22:01,169 --> 00:22:06,028
to do is verify results and so I don't

568
00:22:03,628 --> 00:22:09,808
want any adulteration of the pixel

569
00:22:06,028 --> 00:22:10,979
values I know exactly what they are so

570
00:22:09,808 --> 00:22:12,058
then what I'm going to do here is we're

571
00:22:10,979 --> 00:22:14,460
going to say well we've got a light

572
00:22:12,058 --> 00:22:16,528
buffer right and we've got four things

573
00:22:14,460 --> 00:22:18,538
in the light buffer right we've got the

574
00:22:16,528 --> 00:22:21,659
front the back the surface and the NP

575
00:22:18,538 --> 00:22:24,538
text right so what I want to do here is

576
00:22:21,659 --> 00:22:27,239
I want to basically blitt those various

577
00:22:24,538 --> 00:22:29,219
things to the screen separately and I

578
00:22:27,239 --> 00:22:30,808
guess now I look about look at it maybe

579
00:22:29,219 --> 00:22:32,820
I don't really want to use the frame

580
00:22:30,808 --> 00:22:41,519
buffer buffer because that would only

581
00:22:32,819 --> 00:22:45,210
allow me to display one thing it is time

582
00:22:41,519 --> 00:22:46,649
right because I can't I can't blit I

583
00:22:45,210 --> 00:22:48,479
mean what much the same other time we

584
00:22:46,648 --> 00:22:51,748
only allow me display the color buffer

585
00:22:48,479 --> 00:22:53,460
zero right I don't know if GL it's flame

586
00:22:51,749 --> 00:22:55,889
buffer allows me to go from one frame

587
00:22:53,460 --> 00:22:57,749
buffer to the from one attachment to the

588
00:22:55,888 --> 00:22:59,459
other let's take a look if it does if it

589
00:22:57,749 --> 00:23:00,960
does then I'll use it if it doesn't I'm

590
00:22:59,460 --> 00:23:02,489
going to use an actual texture fill

591
00:23:00,960 --> 00:23:04,048
because then I could pick out whichever

592
00:23:02,489 --> 00:23:06,808
texture I want which is what I'd rather

593
00:23:04,048 --> 00:23:13,229
be able to do so let's take a look here

594
00:23:06,808 --> 00:23:15,118
at GL frame buffer and let's take a look

595
00:23:13,229 --> 00:23:23,399
at what it's going on so dip my eyes

596
00:23:15,118 --> 00:23:26,209
we're close okay color buffer bit say

597
00:23:23,398 --> 00:23:26,209
which one it does

598
00:23:40,000 --> 00:23:53,940
it does not seem to it does not seem to

599
00:23:46,720 --> 00:23:53,940
it all let's see what happens if I say

600
00:23:57,769 --> 00:24:00,980
[Applause]

601
00:24:03,930 --> 00:24:08,759
I'm just curious if anyone discusses

602
00:24:06,579 --> 00:24:08,759
this

603
00:24:17,250 --> 00:24:30,659
so you can do it it looks like okay so

604
00:24:28,859 --> 00:24:32,788
we can actually pick out anyone we want

605
00:24:30,659 --> 00:24:35,520
so that seems fine to me

606
00:24:32,788 --> 00:24:39,179
I'm fine with that so all I really need

607
00:24:35,519 --> 00:24:41,190
to do is keep that bleeding and what I

608
00:24:39,179 --> 00:24:45,080
can do here is insert a GL Reid buffer

609
00:24:41,190 --> 00:24:48,320
call where DL color attachment right

610
00:24:45,079 --> 00:24:48,319
gets added

611
00:24:48,519 --> 00:24:56,069
[Applause]

612
00:24:52,759 --> 00:24:57,929
you know something can add to that where

613
00:24:56,069 --> 00:24:59,279
we pick out which one we want so what I

614
00:24:57,929 --> 00:25:01,440
want to do curious when we're viewing

615
00:24:59,279 --> 00:25:04,440
these I want to basically be able to say

616
00:25:01,440 --> 00:25:09,350
okay buying the frame buffer whatever

617
00:25:04,440 --> 00:25:09,350
the the light buffers that we want here

618
00:25:11,240 --> 00:25:16,798
call that buff index and I want to go

619
00:25:15,119 --> 00:25:18,808
ahead and get the right all frame buffer

620
00:25:16,798 --> 00:25:22,230
because that's got all four of them in

621
00:25:18,808 --> 00:25:25,369
it right and what I want to do there is

622
00:25:22,230 --> 00:25:27,690
say okay I'm going to read from the

623
00:25:25,369 --> 00:25:30,119
right all frame buffer for whatever

624
00:25:27,690 --> 00:25:32,850
light buffer we chose I'm going to read

625
00:25:30,119 --> 00:25:36,529
out of it whichever index you know one

626
00:25:32,849 --> 00:25:38,879
through four zero through three here

627
00:25:36,529 --> 00:25:40,529
we're going to set the viewport to be

628
00:25:38,880 --> 00:25:42,500
whatever the viewport actually is that

629
00:25:40,529 --> 00:25:45,538
we can see and then we're going to blitz

630
00:25:42,500 --> 00:25:47,250
eyes of that buffer was now

631
00:25:45,538 --> 00:25:48,480
unfortunately figuring out what the size

632
00:25:47,250 --> 00:25:51,119
of that buffer was it's actually a

633
00:25:48,480 --> 00:25:58,440
little bit annoying what I might do here

634
00:25:51,119 --> 00:26:00,359
is just store those values right so if I

635
00:25:58,440 --> 00:26:02,340
wanted to know how big each light buffer

636
00:26:00,359 --> 00:26:03,869
is that's actually kind of annoying to

637
00:26:02,339 --> 00:26:06,149
figure out because it's a successively

638
00:26:03,869 --> 00:26:08,369
sample of thing so when you're on the

639
00:26:06,150 --> 00:26:09,450
ends one you have to be tracking what

640
00:26:08,369 --> 00:26:11,279
the original size wills and all these

641
00:26:09,450 --> 00:26:13,230
other sorts of things so instead of that

642
00:26:11,279 --> 00:26:16,769
what I'd rather do I guess is just have

643
00:26:13,230 --> 00:26:19,269
it so that we say like okay you know

644
00:26:16,769 --> 00:26:21,740
which one of these are beyond

645
00:26:19,269 --> 00:26:26,119
[Applause]

646
00:26:21,740 --> 00:26:30,319
which which one the buffers and then

647
00:26:26,119 --> 00:26:31,879
what I'll do is I'll just say well we'll

648
00:26:30,319 --> 00:26:35,538
look up what it's with is in the buffer

649
00:26:31,880 --> 00:26:37,570
itself and I'll tell it I so what I can

650
00:26:35,538 --> 00:26:40,940
do there is say like hey let's go ahead

651
00:26:37,569 --> 00:26:44,089
and record that when we're actually

652
00:26:40,940 --> 00:26:46,159
initializing so in here we obviously

653
00:26:44,089 --> 00:26:47,928
know it here right because we've got the

654
00:26:46,159 --> 00:26:49,880
text within the TEC type that we've

655
00:26:47,929 --> 00:26:52,519
computed by using the sort of successive

656
00:26:49,880 --> 00:27:03,620
divide process so what I want to do here

657
00:26:52,519 --> 00:27:05,750
is say okay the text with oops the text

658
00:27:03,619 --> 00:27:08,209
within text types will be stored so

659
00:27:05,750 --> 00:27:09,859
those will now be known then what we do

660
00:27:08,210 --> 00:27:14,840
is we can do this lit and that will give

661
00:27:09,859 --> 00:27:20,990
us a full-screen view of what the buffer

662
00:27:14,839 --> 00:27:28,490
looks like whichever one we pick and so

663
00:27:20,990 --> 00:27:31,490
for the moment I'll just set them both

664
00:27:28,490 --> 00:27:33,079
to zero and so when we run this we

665
00:27:31,490 --> 00:27:34,399
should just get a black screen right

666
00:27:33,079 --> 00:27:37,730
because even though we're rendering the

667
00:27:34,398 --> 00:27:39,229
game right and you know if I if I were

668
00:27:37,730 --> 00:27:42,169
to make this in a zero the game would

669
00:27:39,230 --> 00:27:44,179
just render immediately after rendering

670
00:27:42,169 --> 00:27:47,000
the image of the game we're going to

671
00:27:44,179 --> 00:27:50,419
just blow right over it just overwrite

672
00:27:47,000 --> 00:27:52,788
it with whatever is in that buffer so

673
00:27:50,419 --> 00:27:55,850
now when I write to that buffer I'll be

674
00:27:52,788 --> 00:27:59,089
able to see what is there right I'll be

675
00:27:55,849 --> 00:28:01,638
able to see what's actually going on so

676
00:27:59,089 --> 00:28:03,918
one thing I'm not sure about again I am

677
00:28:01,638 --> 00:28:11,028
assuming that she'll flip frame buffer

678
00:28:03,919 --> 00:28:16,759
will do the right thing and convert

679
00:28:11,028 --> 00:28:20,148
floating point to 8-bit I'm assuming if

680
00:28:16,759 --> 00:28:21,429
it doesn't we have a problem we're about

681
00:28:20,148 --> 00:28:26,538
to see whether we have a problem

682
00:28:21,429 --> 00:28:29,870
so off we go so let's start again let's

683
00:28:26,538 --> 00:28:32,359
start simple we need to start by

684
00:28:29,869 --> 00:28:33,859
stuffing the stream buffer and so what

685
00:28:32,359 --> 00:28:34,908
I'll do is I'll just make up some dummy

686
00:28:33,859 --> 00:28:35,719
things here I don't

687
00:28:34,909 --> 00:28:39,019
want to be on that side of screen

688
00:28:35,720 --> 00:28:43,308
because my head's in the way let's start

689
00:28:39,019 --> 00:28:45,589
must be over here what I want to do is I

690
00:28:43,308 --> 00:28:48,858
want to have some functions that I can

691
00:28:45,589 --> 00:28:50,509
use to get this leg started so probably

692
00:28:48,858 --> 00:28:51,858
what's going to happen right is we're

693
00:28:50,509 --> 00:28:53,479
going to draw a bunch of stuff to the

694
00:28:51,858 --> 00:29:00,908
lighting like the lighting prep will

695
00:28:53,479 --> 00:29:04,220
happen so let's do fake you know fake

696
00:29:00,909 --> 00:29:06,249
ski lighting or something

697
00:29:04,220 --> 00:29:08,899
so we'll see the lighting with something

698
00:29:06,249 --> 00:29:14,798
completely arbitrary like one little

699
00:29:08,898 --> 00:29:17,538
light source and we'll let that happen

700
00:29:14,798 --> 00:29:18,888
then we will go ahead and run the actual

701
00:29:17,538 --> 00:29:22,519
by the equation so then we'll actually

702
00:29:18,888 --> 00:29:29,898
do like a light transport or compute

703
00:29:22,519 --> 00:29:32,808
light transport and again all that has

704
00:29:29,898 --> 00:29:35,449
to do is just operate on the light

705
00:29:32,808 --> 00:29:37,220
buffers so the lighting happens entirely

706
00:29:35,450 --> 00:29:40,970
in these buffers nothing else has to

707
00:29:37,220 --> 00:29:45,460
occur at all so we're kind of okay at

708
00:29:40,970 --> 00:29:48,649
that point everything happens in there

709
00:29:45,460 --> 00:29:49,278
then we'll draw one of the buffers out

710
00:29:48,648 --> 00:29:53,798
right

711
00:29:49,278 --> 00:29:53,798
so our job is to write these two things

712
00:29:57,278 --> 00:30:05,528
so let's write them your sake speed

713
00:30:01,159 --> 00:30:05,528
lighting fish if you'd like transport

714
00:30:07,239 --> 00:30:11,028
and compute light transport is just

715
00:30:10,038 --> 00:30:19,489
going to be like

716
00:30:11,028 --> 00:30:23,118
I assume it's harebrained like the

717
00:30:19,489 --> 00:30:30,829
rabbit or is it harebrained like the

718
00:30:23,118 --> 00:30:32,449
follicle who knows so this we don't care

719
00:30:30,829 --> 00:30:33,798
about just yet because before we can do

720
00:30:32,450 --> 00:30:35,690
any language France where we have some

721
00:30:33,798 --> 00:30:36,829
lighting in the buffer to begin with so

722
00:30:35,690 --> 00:30:39,409
what I want to do here is I want to do

723
00:30:36,829 --> 00:30:42,769
fake seed lighting to put something into

724
00:30:39,409 --> 00:30:46,278
the lowest-level buffer buff hero to

725
00:30:42,769 --> 00:30:48,680
seed it out right so I want to fill the

726
00:30:46,278 --> 00:30:52,970
world with a

727
00:30:48,680 --> 00:30:59,750
fake version of lighting that we can

728
00:30:52,970 --> 00:31:02,120
play with right or do that I'm going to

729
00:30:59,750 --> 00:31:04,400
write a shader that shader is going to

730
00:31:02,119 --> 00:31:06,589
try to write to those four textures and

731
00:31:04,400 --> 00:31:08,710
it's going to write some procedural

732
00:31:06,589 --> 00:31:11,809
geometry that we make up in the shader

733
00:31:08,710 --> 00:31:13,400
out to those things right and again the

734
00:31:11,809 --> 00:31:15,109
whole point of doing this is because I

735
00:31:13,400 --> 00:31:17,330
want to isolate these processes because

736
00:31:15,109 --> 00:31:19,669
I'm anticipating having to do a lot of

737
00:31:17,329 --> 00:31:23,059
work to get this lighting to behave

738
00:31:19,670 --> 00:31:26,150
correctly and I don't want to worry

739
00:31:23,059 --> 00:31:28,039
about the transfer of things yet because

740
00:31:26,150 --> 00:31:29,960
that will just give me this huge

741
00:31:28,039 --> 00:31:31,609
complexity at the beginning I don't need

742
00:31:29,960 --> 00:31:33,049
I want to be able to make a shader that

743
00:31:31,609 --> 00:31:38,889
just produces something simple like a

744
00:31:33,049 --> 00:31:41,899
sphere right and check out how that

745
00:31:38,890 --> 00:31:44,750
well-understood thing is behaving with

746
00:31:41,900 --> 00:31:46,190
the lighting before I try to go okay now

747
00:31:44,750 --> 00:31:47,839
we've got the actual handmade hero

748
00:31:46,190 --> 00:31:50,809
geometry coming from death feels and I

749
00:31:47,839 --> 00:31:52,759
was above a lot a lot right so nice 2d

750
00:31:50,809 --> 00:31:56,200
simple letting transport nothing weird

751
00:31:52,759 --> 00:31:59,539
happening first and then move it up

752
00:31:56,200 --> 00:32:02,180
alright so this is going to be something

753
00:31:59,539 --> 00:32:04,190
like this right in order to do the fake

754
00:32:02,180 --> 00:32:06,620
seed lighting we actually don't need any

755
00:32:04,190 --> 00:32:12,559
active texture units so we're just going

756
00:32:06,619 --> 00:32:15,109
to do like a fake feed lighting you

757
00:32:12,559 --> 00:32:16,700
begin and program thing and we'll go

758
00:32:15,109 --> 00:32:19,729
write that program right that's printer

759
00:32:16,700 --> 00:32:21,620
we have to write in terms of what we

760
00:32:19,730 --> 00:32:24,500
want to draw it's basically the same as

761
00:32:21,619 --> 00:32:27,500
this stuff right here right there's

762
00:32:24,500 --> 00:32:30,049
really nothing else to it in fact you

763
00:32:27,500 --> 00:32:35,890
could argue that we could just pull this

764
00:32:30,049 --> 00:32:35,889
out entirely in fact let's do that

765
00:32:37,619 --> 00:32:43,088
[Applause]

766
00:32:45,490 --> 00:32:50,210
[Applause]

767
00:32:53,919 --> 00:33:04,038
not a great name but this is what I want

768
00:32:58,490 --> 00:33:11,899
to be right so it would basically be you

769
00:33:04,038 --> 00:33:18,138
give it a frame buffer handle and then

770
00:33:11,898 --> 00:33:21,619
you give it a width and height and it

771
00:33:18,138 --> 00:33:25,128
would just take it from there right and

772
00:33:21,619 --> 00:33:28,308
then you know when you come back you're

773
00:33:25,128 --> 00:33:37,730
all good so I think we probably want to

774
00:33:28,308 --> 00:33:42,759
do like begin screen fill maybe any

775
00:33:37,730 --> 00:33:45,110
screen fill something like this because

776
00:33:42,759 --> 00:33:46,628
this has to get in there as well

777
00:33:45,109 --> 00:33:50,269
[Applause]

778
00:33:46,628 --> 00:33:55,788
young Sam so let's take this out for one

779
00:33:50,269 --> 00:33:57,079
hot second just a hot little second and

780
00:33:55,788 --> 00:34:04,220
we do open jail be on screen fill em

781
00:33:57,079 --> 00:34:06,109
screen fill I I'll just test it out with

782
00:34:04,220 --> 00:34:08,378
what we're currently doing to make sure

783
00:34:06,109 --> 00:34:08,378
it still works

784
00:34:08,679 --> 00:34:16,519
[Applause]

785
00:34:17,639 --> 00:34:36,389
so that's good and then 15 lighting can

786
00:34:20,070 --> 00:34:38,490
do the exact same thing so we're going

787
00:34:36,389 --> 00:34:39,509
to pretty much only write in the fake

788
00:34:38,489 --> 00:34:40,919
seed lighting we're only going to write

789
00:34:39,510 --> 00:34:42,930
to the base level because everything

790
00:34:40,920 --> 00:34:45,150
else we filled in by the lighting

791
00:34:42,929 --> 00:34:47,069
transport process so we really only need

792
00:34:45,150 --> 00:34:48,240
to write to that bottom buffer that's

793
00:34:47,070 --> 00:34:51,690
the only one that we're going to write

794
00:34:48,239 --> 00:34:53,669
to so in order to make that work we just

795
00:34:51,690 --> 00:34:56,070
need to pick out which one of these

796
00:34:53,670 --> 00:34:57,450
we're going to use we want to write

797
00:34:56,070 --> 00:34:59,670
everything so we're going to call it the

798
00:34:57,449 --> 00:35:01,589
right all frame buffer at this point the

799
00:34:59,670 --> 00:35:03,000
width and height are specified inside

800
00:35:01,590 --> 00:35:05,100
the buffer itself so those are not a

801
00:35:03,000 --> 00:35:06,780
mystery so that's pretty much everything

802
00:35:05,099 --> 00:35:08,039
that we need to do there now again what

803
00:35:06,780 --> 00:35:10,080
I'm going to do here is I've turned off

804
00:35:08,039 --> 00:35:11,880
a call to that because I want to make

805
00:35:10,079 --> 00:35:14,670
sure that that code still works and it

806
00:35:11,880 --> 00:35:28,500
looks fine so that's good and so now we

807
00:35:14,670 --> 00:35:32,840
can turn it back on okay so this is all

808
00:35:28,500 --> 00:35:32,840
we really need to do

809
00:35:46,199 --> 00:35:53,819
I'm confused first authors I'm like that

810
00:35:50,429 --> 00:35:56,368
wallet X I kind of think maybe it needs

811
00:35:53,820 --> 00:35:58,680
to be a little clearer there we go

812
00:35:56,369 --> 00:36:00,690
I'm like what am I looking at there we

813
00:35:58,679 --> 00:36:03,960
go

814
00:36:00,690 --> 00:36:08,670
so all we really want is this GL drawer

815
00:36:03,960 --> 00:36:09,929
is here that's all we really want and so

816
00:36:08,670 --> 00:36:10,889
in this case I suppose it could probably

817
00:36:09,929 --> 00:36:13,500
do that because we don't really have

818
00:36:10,889 --> 00:36:14,699
anything else to look for but so that's

819
00:36:13,500 --> 00:36:17,219
all we need to do to fill the screen

820
00:36:14,699 --> 00:36:20,279
with something and so all we need now is

821
00:36:17,219 --> 00:36:22,769
we need to actually write an all I guess

822
00:36:20,280 --> 00:36:25,400
since this is a lot of work but yes all

823
00:36:22,769 --> 00:36:27,659
we need to do now is have an actual

824
00:36:25,400 --> 00:36:29,550
shader that will write something into

825
00:36:27,659 --> 00:36:31,078
this geometry another is going to be fun

826
00:36:29,550 --> 00:36:37,190
because we got to go look up the GLSL

827
00:36:31,079 --> 00:36:39,900
but I never remember for outputting to

828
00:36:37,190 --> 00:36:42,750
successive render buffers I don't

829
00:36:39,900 --> 00:36:45,960
remember how it corresponds output

830
00:36:42,750 --> 00:36:51,269
colors to output textures to color

831
00:36:45,960 --> 00:36:53,608
attachment I can't remember whether you

832
00:36:51,269 --> 00:36:56,489
need to use this exact array or whether

833
00:36:53,608 --> 00:37:04,739
it just lines them up in the orders are

834
00:36:56,489 --> 00:37:08,279
declared being GLSL is something weird

835
00:37:04,739 --> 00:37:11,669
as always but we just need to go look up

836
00:37:08,280 --> 00:37:16,200
what it is and then we should good

837
00:37:11,670 --> 00:37:17,369
alright so moving long before we do any

838
00:37:16,199 --> 00:37:19,409
of that of course we have to actually

839
00:37:17,369 --> 00:37:21,990
create something to compile our texture

840
00:37:19,409 --> 00:37:24,690
so let's go hunt for some texture stuff

841
00:37:21,989 --> 00:37:28,318
here we probably want something like our

842
00:37:24,690 --> 00:37:30,210
multi sample resolve because the multi

843
00:37:28,318 --> 00:37:31,650
sample resolve I think yeah as you can

844
00:37:30,210 --> 00:37:33,088
see it's the kind of thing we want

845
00:37:31,650 --> 00:37:35,880
that's just based on the text board

846
00:37:33,088 --> 00:37:39,059
doesn't take much in so let's just grab

847
00:37:35,880 --> 00:37:42,059
this multi sample resolve program and

848
00:37:39,059 --> 00:37:46,799
let's go ahead and make ourselves a new

849
00:37:42,059 --> 00:37:53,779
version of that somewhere here there we

850
00:37:46,800 --> 00:37:59,190
go okay so we want this to be compiled

851
00:37:53,780 --> 00:37:59,430
fake ease lighting and this is going to

852
00:37:59,190 --> 00:38:05,369
be

853
00:37:59,429 --> 00:38:08,129
you're the key lighting program and the

854
00:38:05,369 --> 00:38:10,650
yeah I don't know that we have any

855
00:38:08,130 --> 00:38:13,920
defines at this point that go in here

856
00:38:10,650 --> 00:38:17,190
because it doesn't use any of this stuff

857
00:38:13,920 --> 00:38:19,289
that you would normally need it's kind

858
00:38:17,190 --> 00:38:22,650
of just the version number that's it the

859
00:38:19,289 --> 00:38:26,429
vertex shader does nothing as always and

860
00:38:22,650 --> 00:38:29,068
so in this case for the fragment code it

861
00:38:26,429 --> 00:38:32,969
wouldn't be sampling from anything at

862
00:38:29,068 --> 00:38:35,400
all it wouldn't have any defines or

863
00:38:32,969 --> 00:38:44,429
anything so we're literally just looking

864
00:38:35,400 --> 00:38:51,030
at just the basics here like so so what

865
00:38:44,429 --> 00:38:52,679
I'm going to do here is just try to

866
00:38:51,030 --> 00:38:55,290
figure how to write something to each of

867
00:38:52,679 --> 00:38:58,309
these buffers right and what I'd like to

868
00:38:55,289 --> 00:39:00,289
do is essentially do something like this

869
00:38:58,309 --> 00:39:02,608
[Applause]

870
00:39:00,289 --> 00:39:05,579
I'd like to make sure that each buffer

871
00:39:02,608 --> 00:39:07,078
is getting targeted as I expect so what

872
00:39:05,579 --> 00:39:10,048
I would like to do is something like

873
00:39:07,079 --> 00:39:15,070
that corresponds here so we say okay

874
00:39:10,048 --> 00:39:16,400
there's the front emit vacum eight

875
00:39:15,070 --> 00:39:25,769
[Applause]

876
00:39:16,400 --> 00:39:28,260
surface color MP text right I would like

877
00:39:25,769 --> 00:39:30,030
each of these to be writable and I would

878
00:39:28,260 --> 00:39:32,490
like to write something to them that I

879
00:39:30,030 --> 00:39:34,980
can identify so this is just structured

880
00:39:32,489 --> 00:39:38,519
artwork folks right it's just saying hey

881
00:39:34,980 --> 00:39:42,179
I want to know that I'm targeting each

882
00:39:38,519 --> 00:39:44,670
of these bitmaps properly so I'm just

883
00:39:42,179 --> 00:39:47,940
going to output red green blue and

884
00:39:44,670 --> 00:39:48,659
yellow to each bitmap so it's filled

885
00:39:47,940 --> 00:39:51,358
with that color

886
00:39:48,659 --> 00:39:53,460
that way we can then verify that

887
00:39:51,358 --> 00:39:56,279
released writing to the buffers we think

888
00:39:53,460 --> 00:39:58,889
we're writing to basic basic basic stuff

889
00:39:56,280 --> 00:40:01,890
for step one and again what we'll have

890
00:39:58,889 --> 00:40:04,019
to do here is go look up the GLSL a

891
00:40:01,889 --> 00:40:06,088
protocol for targeting multiple color

892
00:40:04,019 --> 00:40:08,730
attachments we've not done that yet on

893
00:40:06,088 --> 00:40:09,449
handmade 0 and obviously we need to do

894
00:40:08,730 --> 00:40:13,099
that

895
00:40:09,449 --> 00:40:13,098
and I don't remember what it was so

896
00:40:13,820 --> 00:40:20,369
that's all we should need there are no

897
00:40:16,530 --> 00:40:23,070
variables to this shader at all because

898
00:40:20,369 --> 00:40:26,490
it's just creating geometry from whole

899
00:40:23,070 --> 00:40:29,369
cloth we probably will want to specify

900
00:40:26,489 --> 00:40:33,209
the light so I am going to go ahead and

901
00:40:29,369 --> 00:40:36,599
copy the the lighting stuff out of the

902
00:40:33,210 --> 00:40:39,449
depth feel sampler because we want this

903
00:40:36,599 --> 00:40:42,660
debug light P we want to specify the

904
00:40:39,449 --> 00:40:43,949
debug light P because that way we can

905
00:40:42,659 --> 00:40:46,618
move the light around we're not going to

906
00:40:43,949 --> 00:40:48,929
anything with that just yet but we will

907
00:40:46,619 --> 00:40:52,230
eventually so I'm going to in here I'm

908
00:40:48,929 --> 00:40:56,848
going to have a uniform vector II light

909
00:40:52,230 --> 00:41:02,309
P and that is just B where the light is

910
00:40:56,849 --> 00:41:05,338
right again only reason for that is so

911
00:41:02,309 --> 00:41:07,650
it'll move around with the hero

912
00:41:05,338 --> 00:41:10,320
so once we've gotten that going now we

913
00:41:07,650 --> 00:41:13,559
can compile the fake C lighting the fake

914
00:41:10,320 --> 00:41:15,930
Steve lighting program again doesn't

915
00:41:13,559 --> 00:41:17,190
really have very much in it it's pretty

916
00:41:15,929 --> 00:41:19,649
straightforward I'm going to go ahead

917
00:41:17,190 --> 00:41:22,679
and cut this out here I'll put that in

918
00:41:19,650 --> 00:41:26,250
there so this is just a speed lighting

919
00:41:22,679 --> 00:41:28,710
and all its going to have just the debug

920
00:41:26,250 --> 00:41:31,050
light P that's that's it pretty boring

921
00:41:28,710 --> 00:41:34,440
and so then down here we've got that

922
00:41:31,050 --> 00:41:37,560
actual 1 6 seed lighting take the

923
00:41:34,440 --> 00:41:47,849
lighting and when we actually compile

924
00:41:37,559 --> 00:41:54,630
our of our programs right here we also I

925
00:41:47,849 --> 00:41:57,180
think freelee's at the top here let's

926
00:41:54,630 --> 00:42:02,579
see 1 2 3 4 5 6 get we've got all those

927
00:41:57,179 --> 00:42:04,699
guys in there and that's it okay so that

928
00:42:02,579 --> 00:42:06,930
should actually compile the lighting and

929
00:42:04,699 --> 00:42:08,399
so now the only thing we need to do is

930
00:42:06,929 --> 00:42:10,348
actually use that program we're already

931
00:42:08,400 --> 00:42:11,700
calling use program with it so then we

932
00:42:10,349 --> 00:42:17,470
just need a thing that does use program

933
00:42:11,699 --> 00:42:19,629
to bind that one variable so when we

934
00:42:17,469 --> 00:42:26,919
look at this guy that should be

935
00:42:19,630 --> 00:42:30,420
basically everything there is so I think

936
00:42:26,920 --> 00:42:36,269
we just need to pass that set up to it

937
00:42:30,420 --> 00:42:39,159
and that should be all there is I think

938
00:42:36,269 --> 00:42:40,869
we need to keep that light P around

939
00:42:39,159 --> 00:42:42,339
though which makes it a little bit

940
00:42:40,869 --> 00:42:44,349
trickier because this is happening kind

941
00:42:42,340 --> 00:42:47,829
of in a debug location but that's okay

942
00:42:44,349 --> 00:42:50,920
that won't be too bad so looking at that

943
00:42:47,829 --> 00:42:52,509
again we can just delete all of this

944
00:42:50,920 --> 00:42:55,000
because that's not human used to be

945
00:42:52,510 --> 00:42:56,800
there so now we do use program begin

946
00:42:55,000 --> 00:42:59,320
here what we need to do is have some way

947
00:42:56,800 --> 00:43:02,580
of passing that render setup down now

948
00:42:59,320 --> 00:43:05,800
what we can do in the meantime is just

949
00:43:02,579 --> 00:43:08,139
capture it out of the render texture

950
00:43:05,800 --> 00:43:10,630
quads like the first one so you know

951
00:43:08,139 --> 00:43:13,539
here where we do setup that we could say

952
00:43:10,630 --> 00:43:16,869
if not debug setup we could just say to

953
00:43:13,539 --> 00:43:25,929
basic setup people set up to do KC

954
00:43:16,869 --> 00:43:27,519
remove this and then all we need to do

955
00:43:25,929 --> 00:43:30,338
is just cache this and so this is just

956
00:43:27,519 --> 00:43:37,300
taking the first one right I don't

957
00:43:30,338 --> 00:43:42,820
remember what this is defined as just

958
00:43:37,300 --> 00:43:44,740
render setup so you can see there I've

959
00:43:42,820 --> 00:43:46,570
got this debug step thing I'm going to

960
00:43:44,739 --> 00:43:49,209
set it to zero initially I'm going to go

961
00:43:46,570 --> 00:43:50,710
and set it when we see the first one and

962
00:43:49,210 --> 00:43:53,019
then at the end I'm just going to use

963
00:43:50,710 --> 00:43:54,820
that right that's the one that I'm going

964
00:43:53,019 --> 00:43:57,070
to use I'm going to check to make sure

965
00:43:54,820 --> 00:43:58,180
that we've got one of those and if we

966
00:43:57,070 --> 00:44:01,359
don't have one of those then we're not

967
00:43:58,179 --> 00:44:06,819
going to do anything but that's about it

968
00:44:01,358 --> 00:44:09,789
so let's see what should I did I not do

969
00:44:06,820 --> 00:44:17,349
that probably left to find the biased

970
00:44:09,789 --> 00:44:19,858
program there we are and succeed

971
00:44:17,349 --> 00:44:19,859
lighting

972
00:44:20,070 --> 00:44:25,639
[Applause]

973
00:44:25,650 --> 00:44:35,108
we go so in theory that will run the

974
00:44:32,349 --> 00:44:37,300
safety lighting program in theory it

975
00:44:35,108 --> 00:44:38,799
will have access to the big light and in

976
00:44:37,300 --> 00:44:40,599
theory it will show us one of the

977
00:44:38,800 --> 00:44:42,068
buffers now what we're seeing here is

978
00:44:40,599 --> 00:44:44,050
actually already kind of interesting to

979
00:44:42,068 --> 00:44:47,710
me I don't know if it's interesting to

980
00:44:44,050 --> 00:44:49,930
you but we see green screen what's

981
00:44:47,710 --> 00:44:54,900
interesting about a green screen is if

982
00:44:49,929 --> 00:44:57,098
we're looking at the first texture right

983
00:44:54,900 --> 00:44:59,349
remember what happened when we created

984
00:44:57,099 --> 00:45:01,510
these so when if we if we look back and

985
00:44:59,349 --> 00:45:06,309
maybe it maybe I'll put it up on this

986
00:45:01,510 --> 00:45:08,410
one so when we do our open gel in it I'm

987
00:45:06,309 --> 00:45:10,630
not sorry not our children are changed

988
00:45:08,409 --> 00:45:12,039
to settings when we do our settings

989
00:45:10,630 --> 00:45:13,750
change you can see we create these

990
00:45:12,039 --> 00:45:16,960
favorite prints we attach you know

991
00:45:13,750 --> 00:45:20,409
attachment 0 1 2 3 and you can see like

992
00:45:16,960 --> 00:45:20,800
front emit text is the first one all

993
00:45:20,409 --> 00:45:24,190
right

994
00:45:20,800 --> 00:45:28,269
and so if I go down here and I look at

995
00:45:24,190 --> 00:45:29,980
our fake scene lighting program you can

996
00:45:28,269 --> 00:45:34,179
see that front emit is the first thing

997
00:45:29,980 --> 00:45:38,199
we write to but we wrote read yet when

998
00:45:34,179 --> 00:45:40,719
we mu frame buffer zero texture 0 that's

999
00:45:38,199 --> 00:45:43,710
not what we see we see the back emit

1000
00:45:40,719 --> 00:45:47,439
which is actually color attachment one

1001
00:45:43,710 --> 00:45:49,240
right so I'm going to just double check

1002
00:45:47,440 --> 00:45:53,619
that we're actually picking out the read

1003
00:45:49,239 --> 00:45:55,149
buffer properly but I think we are the

1004
00:45:53,619 --> 00:45:57,579
other thing I need to probably do is

1005
00:45:55,150 --> 00:45:59,230
make sure we restore that read buffer in

1006
00:45:57,579 --> 00:46:03,390
case anyone else was camp we're counting

1007
00:45:59,230 --> 00:46:03,389
on it but yeah

1008
00:46:11,769 --> 00:46:18,429
so I think what that suggests to me is

1009
00:46:14,440 --> 00:46:20,050
again that there's probably some

1010
00:46:18,429 --> 00:46:21,129
protocol we have to look up in jail so

1011
00:46:20,050 --> 00:46:22,450
I'll tell it where to write to because

1012
00:46:21,130 --> 00:46:25,690
it's not just writing them in the order

1013
00:46:22,449 --> 00:46:27,879
that they were declared right which I'm

1014
00:46:25,690 --> 00:46:29,170
not suggesting that it should that's not

1015
00:46:27,880 --> 00:46:30,820
like something it should be doing

1016
00:46:29,170 --> 00:46:34,260
anything I would just said if it did do

1017
00:46:30,820 --> 00:46:37,360
that we wouldn't just be red not green

1018
00:46:34,260 --> 00:46:38,650
coming into that first texture unless

1019
00:46:37,360 --> 00:46:40,809
there's some other bug somewhere else

1020
00:46:38,650 --> 00:46:49,410
right in the program which there might

1021
00:46:40,809 --> 00:46:58,480
be all right so here we go

1022
00:46:49,409 --> 00:46:59,829
GLSL and up with reference card for the

1023
00:46:58,480 --> 00:47:02,710
benefit of folks at home let's go ahead

1024
00:46:59,829 --> 00:47:04,569
and zoom in on that and so what we want

1025
00:47:02,710 --> 00:47:06,789
to do here is we want to go down to the

1026
00:47:04,570 --> 00:47:09,960
OpenGL shading language 1.5 which is

1027
00:47:06,789 --> 00:47:11,980
what we were currently using I believe

1028
00:47:09,960 --> 00:47:14,889
and see if there's a way to target

1029
00:47:11,980 --> 00:47:16,900
multiple outputs from it hopefully there

1030
00:47:14,889 --> 00:47:19,809
are hopefully we won't have to bump the

1031
00:47:16,900 --> 00:47:21,639
shader version to do that so taking a

1032
00:47:19,809 --> 00:47:26,409
look here you can see we've got in our

1033
00:47:21,639 --> 00:47:28,690
fragment language right there's an out

1034
00:47:26,409 --> 00:47:32,019
float for the Frog depth there is no out

1035
00:47:28,690 --> 00:47:35,889
float anywhere for the color or out Veck

1036
00:47:32,019 --> 00:47:40,719
4 for the color I so I'm not sure

1037
00:47:35,889 --> 00:47:43,179
exactly again but this is going to tell

1038
00:47:40,719 --> 00:47:49,868
us what we want to know right I don't

1039
00:47:43,179 --> 00:47:52,179
see anything here to me I don't see

1040
00:47:49,869 --> 00:47:55,930
anything here that suggests what goes

1041
00:47:52,179 --> 00:48:06,039
where so I think that should probably

1042
00:47:55,929 --> 00:48:08,589
Drive us over to the spec I don't want

1043
00:48:06,039 --> 00:48:12,900
this one because that's a little bit too

1044
00:48:08,590 --> 00:48:12,900
late where is the spec page

1045
00:48:16,969 --> 00:48:27,989
here there it is so we want probably

1046
00:48:25,260 --> 00:48:33,750
open jail 3.2 shading language 1.5 there

1047
00:48:27,989 --> 00:48:35,338
it is and so when we look at this what I

1048
00:48:33,750 --> 00:48:36,690
want what I'm trying to get to as

1049
00:48:35,338 --> 00:48:39,769
quickly as possible is just something

1050
00:48:36,690 --> 00:48:44,309
that tells me how to line up my output

1051
00:48:39,769 --> 00:48:49,199
fragments with the bound color

1052
00:48:44,309 --> 00:48:51,599
attachments for the frame buffer and so

1053
00:48:49,199 --> 00:48:55,379
I don't know where that's going to be

1054
00:48:51,599 --> 00:49:04,740
exactly in here but we can take a scan

1055
00:48:55,380 --> 00:49:06,210
to the table of contents and see it's

1056
00:49:04,739 --> 00:49:08,358
really just a no groups so just an

1057
00:49:06,210 --> 00:49:08,358
overview

1058
00:49:08,360 --> 00:49:11,539
[Applause]

1059
00:49:18,510 --> 00:49:21,510
okay

1060
00:49:34,280 --> 00:49:37,970
I guess one question is can we write to

1061
00:49:37,010 --> 00:49:43,160
more than one at once

1062
00:49:37,969 --> 00:49:44,269
maybe we can which would be bad first

1063
00:49:43,159 --> 00:49:45,529
years everybody's the open-celled

1064
00:49:44,269 --> 00:49:50,659
pipeline is the built-in residual side

1065
00:49:45,530 --> 00:49:52,490
killer Friday almost discard oh well

1066
00:49:50,659 --> 00:49:54,440
this suggests that it was old that was

1067
00:49:52,489 --> 00:49:56,689
already deprecated so if it's already

1068
00:49:54,440 --> 00:49:58,400
been deprecated that there must be a way

1069
00:49:56,690 --> 00:50:00,980
to do it in this new language so what's

1070
00:49:58,400 --> 00:50:03,079
the new way pray tell let's yell farken

1071
00:50:00,980 --> 00:50:04,579
of FK is the preferred you simply

1072
00:50:03,079 --> 00:50:09,039
declare these outputs in the fragment

1073
00:50:04,579 --> 00:50:09,039
shader using the out storage qualifier

1074
00:50:09,699 --> 00:50:15,649
does that mean I just declare one of

1075
00:50:13,099 --> 00:50:17,509
those writing to GL fragment at n

1076
00:50:15,650 --> 00:50:18,950
specifies the fragment data that will be

1077
00:50:17,510 --> 00:50:24,500
used by the sub config function pipeline

1078
00:50:18,949 --> 00:50:42,429
for data n that's all I really want

1079
00:50:24,500 --> 00:50:45,420
so can I do that Wow typing it's hard

1080
00:50:42,429 --> 00:50:46,989
let's go shopping

1081
00:50:45,420 --> 00:50:49,610
[Applause]

1082
00:50:46,989 --> 00:50:52,459
alright so what we need to do here is

1083
00:50:49,610 --> 00:51:02,840
just say at the end of our situation

1084
00:50:52,460 --> 00:51:06,380
nope here are our buffers we are writing

1085
00:51:02,840 --> 00:51:13,370
to them 1 2 3 we've got front emit

1086
00:51:06,380 --> 00:51:15,230
vacuum it surface color empty tag and

1087
00:51:13,369 --> 00:51:17,650
we'll see if the shader compiler likes

1088
00:51:15,230 --> 00:51:23,030
it or if it thinks too bad

1089
00:51:17,650 --> 00:51:29,510
hey looks like that worked so now what

1090
00:51:23,030 --> 00:51:30,800
I'd like to do is now that it sort of

1091
00:51:29,510 --> 00:51:35,630
looks like we're writing to our frame

1092
00:51:30,800 --> 00:51:37,670
buffers properly each of those kind of

1093
00:51:35,630 --> 00:51:39,349
getting the value that we expect what

1094
00:51:37,670 --> 00:51:40,820
I'd like to do is actually double verify

1095
00:51:39,349 --> 00:51:42,380
that and of course we're going to need

1096
00:51:40,820 --> 00:51:45,500
this for the next step which is actually

1097
00:51:42,380 --> 00:51:48,170
doing something real with the fake

1098
00:51:45,500 --> 00:51:50,809
lighting real sake letting

1099
00:51:48,170 --> 00:51:53,269
is I want to be able to interactively

1100
00:51:50,809 --> 00:51:56,839
toggle between which one of the things

1101
00:51:53,269 --> 00:51:59,210
I'm viewing right so I want to be able

1102
00:51:56,838 --> 00:52:04,099
to both step up and down the myth chain

1103
00:51:59,210 --> 00:52:07,250
and I want to be able to change which

1104
00:52:04,099 --> 00:52:10,099
texture I'm looking at the the front

1105
00:52:07,250 --> 00:52:12,679
back surface emitting you know whatever

1106
00:52:10,099 --> 00:52:15,109
kind of things so I'm just going to hack

1107
00:52:12,679 --> 00:52:19,219
in something to the open jail here that

1108
00:52:15,108 --> 00:52:21,159
allows me to do that because normally

1109
00:52:19,219 --> 00:52:25,338
the open gel layer doesn't really have

1110
00:52:21,159 --> 00:52:27,858
any notion of that and the external code

1111
00:52:25,338 --> 00:52:29,210
has a new way of poking at that but I'm

1112
00:52:27,858 --> 00:52:32,119
going to let it I'm going to let it poke

1113
00:52:29,210 --> 00:52:35,358
at that so what I'm going to do there is

1114
00:52:32,119 --> 00:52:37,309
just say like okay let's suppose that

1115
00:52:35,358 --> 00:52:39,980
our lighting buffer maybe this is

1116
00:52:37,309 --> 00:52:43,298
something that can be edited in the the

1117
00:52:39,980 --> 00:52:43,298
current settings or something like this

1118
00:52:43,480 --> 00:52:57,349
so maybe in the platform layer right

1119
00:52:54,710 --> 00:53:00,079
here's the settings what I could do here

1120
00:52:57,349 --> 00:53:04,849
is just say like okay in addition we

1121
00:53:00,079 --> 00:53:09,230
could say is like debug light buffer

1122
00:53:04,849 --> 00:53:14,119
index and debug light buffered text

1123
00:53:09,230 --> 00:53:15,588
concise right and these two could be

1124
00:53:14,119 --> 00:53:25,548
something that the OpenGL layer picks up

1125
00:53:15,588 --> 00:53:28,190
if they're set to something like so do

1126
00:53:25,548 --> 00:53:30,710
we get past the settings here where it's

1127
00:53:28,190 --> 00:53:33,500
actually not that way it's actually

1128
00:53:30,710 --> 00:53:34,030
command settings right yeah if we should

1129
00:53:33,500 --> 00:53:39,510
just do this

1130
00:53:34,030 --> 00:53:39,510
[Applause]

1131
00:53:45,849 --> 00:53:53,568
[Applause]

1132
00:53:48,250 --> 00:53:54,949
all right um yeah just let the compiler

1133
00:53:53,568 --> 00:54:00,768
bring you to the correct lines they're

1134
00:53:54,949 --> 00:54:03,879
cute so once we've got that set up we

1135
00:54:00,768 --> 00:54:07,669
are free now in any part of the code to

1136
00:54:03,880 --> 00:54:09,019
push that around right and oh I thought

1137
00:54:07,670 --> 00:54:17,048
I should make sure it's clear is it not

1138
00:54:09,018 --> 00:54:19,308
cleared first are we not clearing that

1139
00:54:17,048 --> 00:54:21,079
let me verify that's actually happened

1140
00:54:19,309 --> 00:54:25,730
that looks like that's not a cleared

1141
00:54:21,079 --> 00:54:29,200
value yeah that's not a cleared value

1142
00:54:25,730 --> 00:54:32,380
apparently why is that not a clear value

1143
00:54:29,199 --> 00:54:32,379
dare I ask

1144
00:54:49,420 --> 00:54:55,599
so now what I can do is introduce some

1145
00:54:53,199 --> 00:54:57,069
debug keys pretty much anywhere I want

1146
00:54:55,599 --> 00:54:59,769
they could be in the game that could be

1147
00:54:57,070 --> 00:55:03,660
in the platform layer that basically let

1148
00:54:59,769 --> 00:55:06,639
me kind of you know swizzle around

1149
00:55:03,659 --> 00:55:08,139
between those now the game itself if I

1150
00:55:06,639 --> 00:55:11,619
remember correctly doesn't really get

1151
00:55:08,139 --> 00:55:14,429
much in the way of debug keys the

1152
00:55:11,619 --> 00:55:17,259
platform code if I remember correctly

1153
00:55:14,429 --> 00:55:19,239
just gets like what the state of the

1154
00:55:17,260 --> 00:55:41,800
controllers are and stuff like this

1155
00:55:19,239 --> 00:55:43,000
right I think see here yeah so it

1156
00:55:41,800 --> 00:55:43,840
doesn't really get that kind of stuff so

1157
00:55:43,000 --> 00:55:45,130
what I'm going to do is I'm just going

1158
00:55:43,840 --> 00:55:47,920
to put it in the win32 layer for the

1159
00:55:45,130 --> 00:55:55,230
moment I what I'm going to do is just a

1160
00:55:47,920 --> 00:55:55,230
like okay where were these

1161
00:56:01,030 --> 00:56:09,530
are getting set oh you know what I just

1162
00:56:06,980 --> 00:56:13,969
realized that's not a good place to put

1163
00:56:09,530 --> 00:56:17,180
it I take it all back the settings are

1164
00:56:13,969 --> 00:56:23,139
things that effect the compilation and

1165
00:56:17,179 --> 00:56:23,139
that's not appropriate for that purpose

1166
00:56:23,170 --> 00:56:29,630
[Applause]

1167
00:56:25,489 --> 00:56:31,069
these are compilation values so that's

1168
00:56:29,630 --> 00:56:33,260
really not appropriate place to put that

1169
00:56:31,070 --> 00:56:51,559
so we really should probably put those

1170
00:56:33,260 --> 00:56:54,980
in here okay so now what I want to do is

1171
00:56:51,559 --> 00:56:57,559
inside there I want some way of poking

1172
00:56:54,980 --> 00:56:59,630
at those values just randomly so what

1173
00:56:57,559 --> 00:57:01,989
I'll probably do is say like okay when

1174
00:56:59,630 --> 00:57:04,880
we when we access the keyboard here

1175
00:57:01,989 --> 00:57:08,479
maybe I'll just give myself some ways to

1176
00:57:04,880 --> 00:57:11,450
getting some debug keys and here you can

1177
00:57:08,480 --> 00:57:13,369
see we've got some kind of weird stuff

1178
00:57:11,449 --> 00:57:15,069
like the loop live code editing still

1179
00:57:13,369 --> 00:57:17,359
being taken care of there for example

1180
00:57:15,070 --> 00:57:23,120
and so what I want to do is I want to

1181
00:57:17,360 --> 00:57:28,220
put some extra ones in here that I could

1182
00:57:23,119 --> 00:57:31,309
use to control this so what I'm going to

1183
00:57:28,219 --> 00:57:34,489
do is I'm going to say like okay VK code

1184
00:57:31,309 --> 00:57:46,489
in this case let me use like plus and

1185
00:57:34,489 --> 00:57:47,929
minus I guess and maybe I'll just use

1186
00:57:46,489 --> 00:57:50,289
plus and minus with the shift key down

1187
00:57:47,929 --> 00:57:50,289
or not

1188
00:58:05,039 --> 00:58:12,329
[Applause]

1189
00:58:09,260 --> 00:58:15,780
by the way someone routing a bug that

1190
00:58:12,329 --> 00:58:19,619
was a good bug to write in that had to

1191
00:58:15,780 --> 00:58:23,280
do a sign extension for this gentleman

1192
00:58:19,619 --> 00:58:24,900
right here which we do need to fix it's

1193
00:58:23,280 --> 00:58:26,100
kind of interesting so I don't want to

1194
00:58:24,900 --> 00:58:27,240
fix it yet because I'm pretty sure I put

1195
00:58:26,099 --> 00:58:28,409
it on the github but I want to talk

1196
00:58:27,239 --> 00:58:31,409
about it let me just make sure that it's

1197
00:58:28,409 --> 00:58:36,690
on there I'm pretty sure I put it on

1198
00:58:31,409 --> 00:58:37,980
there yeah I want to talk about that one

1199
00:58:36,690 --> 00:58:39,960
in more detail so we're not going to fix

1200
00:58:37,980 --> 00:58:41,820
it right now we're going to fix it when

1201
00:58:39,960 --> 00:58:45,900
we look at that bug because I wanted to

1202
00:58:41,820 --> 00:58:47,820
talk about in a little more detail but

1203
00:58:45,900 --> 00:58:51,059
what I wanted to do was take a look at

1204
00:58:47,820 --> 00:58:55,910
the shift key with them I feel like

1205
00:58:51,059 --> 00:58:59,400
that's an L pram that comes in through

1206
00:58:55,909 --> 00:59:12,420
WMT down that we can just check let's

1207
00:58:59,400 --> 00:59:22,889
find out let's see is that here does not

1208
00:59:12,420 --> 00:59:26,639
appear so so I will probably use get key

1209
00:59:22,889 --> 00:59:29,639
state then I don't want to get a sync

1210
00:59:26,639 --> 00:59:33,299
keyed state and I don't want get key

1211
00:59:29,639 --> 00:59:38,789
state actually do I

1212
00:59:33,300 --> 00:59:39,660
I just want regular get Tuesday that's

1213
00:59:38,789 --> 00:59:42,119
what I'm looking for

1214
00:59:39,659 --> 00:59:45,299
thank you so I just want a thing that

1215
00:59:42,119 --> 00:59:49,079
tells me whether the this key is down or

1216
00:59:45,300 --> 00:59:50,970
not with the return value the higher two

1217
00:59:49,079 --> 00:59:52,500
bits one the key is down otherwise it's

1218
00:59:50,969 --> 00:59:54,389
up that's the only thing that I really

1219
00:59:52,500 --> 00:59:58,349
need to look for it's a short so it's

1220
00:59:54,389 --> 01:00:01,199
going to be bit 15 did we do this set

1221
00:59:58,349 --> 01:00:04,139
please gate somewhere else yes right

1222
01:00:01,199 --> 01:00:08,000
here of course it's behind my head so I

1223
01:00:04,139 --> 01:00:08,000
couldn't actually see it but oh well

1224
01:00:10,769 --> 01:00:14,980
so if we want to know if shift is down

1225
01:00:13,269 --> 01:00:18,130
we can do this I'll put this up at the

1226
01:00:14,980 --> 01:00:22,449
top so that anyone can use it here shift

1227
01:00:18,130 --> 01:00:24,280
key was down so look at DK shift and

1228
01:00:22,449 --> 01:00:25,719
whether one should set up 15 ands with

1229
01:00:24,280 --> 01:00:26,230
the properly if it is demonstrate keep

1230
01:00:25,719 --> 01:00:28,239
it down

1231
01:00:26,230 --> 01:00:39,608
so in here we can just look to see if

1232
01:00:28,239 --> 01:00:41,049
the shift keys down so this is the plus

1233
01:00:39,608 --> 01:00:45,098
so what I want to do here is say well

1234
01:00:41,050 --> 01:00:50,500
the OpenGL layers debug light buffer

1235
01:00:45,099 --> 01:00:54,119
index plus equals 1 in this case or

1236
01:00:50,500 --> 01:00:56,320
minus equals 1 and the other case I

1237
01:00:54,119 --> 01:00:59,760
think I'm probably going to want these

1238
01:00:56,320 --> 01:01:04,809
to be s 32 s so that it can wrap

1239
01:00:59,760 --> 01:01:06,550
properly and when we come through here

1240
01:01:04,809 --> 01:01:11,019
what I'm going to do is say if open jail

1241
01:01:06,550 --> 01:01:17,220
give AG light buffer index is less than

1242
01:01:11,019 --> 01:01:17,219
0 factor your nose girl just do this

1243
01:01:17,400 --> 01:01:20,519
[Applause]

1244
01:01:25,840 --> 01:01:29,010
[Applause]

1245
01:01:29,440 --> 01:01:38,980
uh hmm I guess clamp 0m is really what

1246
01:01:36,818 --> 01:01:41,889
we need here and so we want this to be

1247
01:01:38,980 --> 01:01:45,190
something that goes from zero to the

1248
01:01:41,889 --> 01:01:47,469
number of life lepers we have and in

1249
01:01:45,190 --> 01:01:49,599
this case that is specified in the

1250
01:01:47,469 --> 01:01:52,059
actual OpenGL setting itself if I

1251
01:01:49,599 --> 01:01:57,930
remember correctly it's just light

1252
01:01:52,059 --> 01:02:01,750
buffer count and this it has to be

1253
01:01:57,929 --> 01:02:03,419
between zero and three right it actually

1254
01:02:01,750 --> 01:02:11,530
should be life over account minus one

1255
01:02:03,420 --> 01:02:17,650
that's the maximum value it can be and I

1256
01:02:11,530 --> 01:02:22,420
guess in this case we can do this as

1257
01:02:17,650 --> 01:02:24,190
well so yeah if I do that clamping here

1258
01:02:22,420 --> 01:02:25,539
then we know that those will always stay

1259
01:02:24,190 --> 01:02:27,338
within bounds no matter what happens

1260
01:02:25,539 --> 01:02:29,108
with the other parts of it right and

1261
01:02:27,338 --> 01:02:33,159
then when we grab these out here we grab

1262
01:02:29,108 --> 01:02:34,690
out the embassies and use them we can

1263
01:02:33,159 --> 01:02:36,429
actually avoid probably ever actually

1264
01:02:34,690 --> 01:02:38,679
doing this because we're always going to

1265
01:02:36,429 --> 01:02:41,828
be doing it just to pull them out one

1266
01:02:38,679 --> 01:02:43,629
time like so so we can probably just do

1267
01:02:41,829 --> 01:02:45,010
that and then we just need to write the

1268
01:02:43,630 --> 01:02:48,099
clamping function and I think that's the

1269
01:02:45,010 --> 01:02:50,530
only thing left to do in this case and

1270
01:02:48,099 --> 01:02:53,260
then we can view any level of the

1271
01:02:50,530 --> 01:02:54,400
texture and any sub component of it

1272
01:02:53,260 --> 01:02:59,440
which is what we need to do for the

1273
01:02:54,400 --> 01:03:04,030
debugging purposes all right so let's go

1274
01:02:59,440 --> 01:03:06,400
ahead and write this clamp function you

1275
01:03:04,030 --> 01:03:07,990
can see right now we've got one for real

1276
01:03:06,400 --> 01:03:11,180
values but in this case we want one

1277
01:03:07,989 --> 01:03:18,178
that's going to work on s thirty twos

1278
01:03:11,179 --> 01:03:18,178
[Applause]

1279
01:03:18,250 --> 01:03:22,840
it's the same function you could

1280
01:03:20,320 --> 01:03:24,400
probably use a template for this I don't

1281
01:03:22,840 --> 01:03:33,550
see any particular reason why it

1282
01:03:24,400 --> 01:03:35,590
couldn't or Macra okay

1283
01:03:33,550 --> 01:03:41,350
and so in theory now we can like bump

1284
01:03:35,590 --> 01:03:43,900
those values so actually I'm just make

1285
01:03:41,349 --> 01:03:46,539
sure that I before I'd do that I just

1286
01:03:43,900 --> 01:03:49,300
want to look at this one more time

1287
01:03:46,539 --> 01:03:51,250
this is not what I want it should

1288
01:03:49,300 --> 01:03:53,350
actually look like this anytime you get

1289
01:03:51,250 --> 01:03:55,539
the plus key it should add so it should

1290
01:03:53,349 --> 01:04:00,849
really just be which one you're looking

1291
01:03:55,539 --> 01:04:02,440
at I think I probably want the other way

1292
01:04:00,849 --> 01:04:04,989
around actually I probably want it so

1293
01:04:02,440 --> 01:04:09,519
that plus and minus moves up and down

1294
01:04:04,989 --> 01:04:11,349
the levels of detail and then if you

1295
01:04:09,519 --> 01:04:16,989
hold down the shift key then it changes

1296
01:04:11,349 --> 01:04:28,269
which texture you're on right I think

1297
01:04:16,989 --> 01:04:30,189
that's what I want that looks

1298
01:04:28,269 --> 01:04:33,570
surprisingly ineffectual or feel

1299
01:04:30,190 --> 01:04:36,039
surprisingly ineffectual I should say

1300
01:04:33,570 --> 01:04:40,980
all right so let's take a quick second

1301
01:04:36,039 --> 01:04:43,090
to the bug this let me go ahead and run

1302
01:04:40,980 --> 01:04:45,940
now what I'm going to do here is I'm

1303
01:04:43,090 --> 01:04:48,100
going to hit plus so now I should have

1304
01:04:45,940 --> 01:04:49,329
moved to a new frame buffer which means

1305
01:04:48,099 --> 01:04:51,969
there should be nothing in the frame

1306
01:04:49,329 --> 01:04:55,210
buffer and I shouldn't be getting that

1307
01:04:51,969 --> 01:04:56,919
flit right so now if I come through here

1308
01:04:55,210 --> 01:04:59,559
and take a look at it I want to see what

1309
01:04:56,920 --> 01:05:04,920
the light buffer index is and it's still

1310
01:04:59,559 --> 01:05:04,920
zero so something's busted there

1311
01:05:11,309 --> 01:05:17,500
all right so if I get the plus key or

1312
01:05:14,289 --> 01:05:19,150
the minus key all right so I'm not

1313
01:05:17,500 --> 01:05:20,739
actually getting anything there why am I

1314
01:05:19,150 --> 01:05:23,440
not getting anything there it's handmade

1315
01:05:20,739 --> 01:05:25,119
internal not set for some reason win32

1316
01:05:23,440 --> 01:05:27,220
press is pending messages to its message

1317
01:05:25,119 --> 01:05:31,630
if we get a key down message it should

1318
01:05:27,219 --> 01:05:33,539
come in here if was down is not equal to

1319
01:05:31,630 --> 01:05:38,019
is down then we should process these

1320
01:05:33,539 --> 01:05:53,259
which should include the P the l equals

1321
01:05:38,019 --> 01:05:58,420
oh you know what do I need to use the VK

1322
01:05:53,260 --> 01:06:02,200
code for this let me look at the windows

1323
01:05:58,420 --> 01:06:05,400
VK codes I'm not sure if maybe you can't

1324
01:06:02,199 --> 01:06:05,399
use ASCII code

1325
01:06:15,320 --> 01:06:18,380
because it looks like we're coming

1326
01:06:16,639 --> 01:06:20,690
through this path we should be coming

1327
01:06:18,380 --> 01:06:28,640
through this path okay but it doesn't

1328
01:06:20,690 --> 01:06:29,720
look like we're actually getting it

1329
01:06:28,639 --> 01:06:34,579
doesn't look like we're ever actually

1330
01:06:29,719 --> 01:06:36,169
able to match the VK code of equals or

1331
01:06:34,579 --> 01:06:38,420
minus which we should be able to match I

1332
01:06:36,170 --> 01:06:40,430
would think just to verify that that's

1333
01:06:38,420 --> 01:06:42,200
true I'm going to set it to instead of

1334
01:06:40,429 --> 01:06:45,589
plus and minus I'm going to set it to

1335
01:06:42,199 --> 01:06:51,859
zero and nine just to see what happens

1336
01:06:45,590 --> 01:06:54,260
so yeah so those must just be VK codes

1337
01:06:51,860 --> 01:06:56,630
that don't line up with the ascii so

1338
01:06:54,260 --> 01:06:58,880
let's see what those actually are we

1339
01:06:56,630 --> 01:07:02,720
should be able to do that using like the

1340
01:06:58,880 --> 01:07:06,200
test project pretty easily so if i just

1341
01:07:02,719 --> 01:07:10,879
go over to who our stupid test project

1342
01:07:06,199 --> 01:07:13,849
we made go ahead and plug those hamsters

1343
01:07:10,880 --> 01:07:17,030
Visual Studio alright so if I've to VK

1344
01:07:13,849 --> 01:07:19,039
underscore I should see well okay there

1345
01:07:17,030 --> 01:07:21,410
we go I should eventually see an

1346
01:07:19,039 --> 01:07:23,929
autocomplete that shows me all the VK

1347
01:07:21,409 --> 01:07:29,109
codes so I would have thought there was

1348
01:07:23,929 --> 01:07:39,049
like a VK plus on here or a VK equals

1349
01:07:29,110 --> 01:07:42,710
again I don't know if there is see no

1350
01:07:39,050 --> 01:07:46,280
maybe not but either way let's say I

1351
01:07:42,710 --> 01:07:55,789
pick VK our control and I do go to

1352
01:07:46,280 --> 01:07:58,190
definition here is the VK code

1353
01:07:55,789 --> 01:08:01,429
definition table you can see it all

1354
01:07:58,190 --> 01:08:04,070
happening in here and they don't define

1355
01:08:01,429 --> 01:08:11,329
anything that lines up a basket code so

1356
01:08:04,070 --> 01:08:13,370
those are gone so it's only like ones

1357
01:08:11,329 --> 01:08:15,639
that you have to use specific VK codes

1358
01:08:13,369 --> 01:08:15,639
for

1359
01:08:25,579 --> 01:08:49,279
but I don't see it on there well I guess

1360
01:08:45,199 --> 01:08:51,699
one thing we could do is just see what

1361
01:08:49,279 --> 01:08:56,989
the VK code is when it comes through

1362
01:08:51,699 --> 01:08:59,088
right I mean that's easy enough so if I

1363
01:08:56,989 --> 01:09:01,219
switch back to our other project what is

1364
01:08:59,088 --> 01:09:05,989
it now I don't need to save that but

1365
01:09:01,220 --> 01:09:08,869
thank you so if I go ahead and just run

1366
01:09:05,989 --> 01:09:11,449
the program right here's the program so

1367
01:09:08,869 --> 01:09:16,069
and I hit the equals key and so what's

1368
01:09:11,449 --> 01:09:19,909
the VK code 187

1369
01:09:16,069 --> 01:09:22,670
so what's equals and what's plus so

1370
01:09:19,909 --> 01:09:25,039
equal definitely comes through as a high

1371
01:09:22,670 --> 01:09:28,338
key code it comes through as 187 all

1372
01:09:25,039 --> 01:09:31,399
right let's see are they defined so 187

1373
01:09:28,338 --> 01:09:34,189
are they defined in hex oops almost

1374
01:09:31,399 --> 01:09:35,210
knocked over my copy there well if it

1375
01:09:34,189 --> 01:09:44,079
did knock it over read spill-proof

1376
01:09:35,210 --> 01:09:44,079
thankfully so 27 there in hex

1377
01:09:53,859 --> 01:10:05,700
though yeah so we are looking for BB as

1378
01:09:59,649 --> 01:10:12,069
a value right and so what would that be

1379
01:10:05,699 --> 01:10:16,210
so it's V k OE m plus apparently is what

1380
01:10:12,069 --> 01:10:19,809
we're looking for and I guess by that by

1381
01:10:16,210 --> 01:10:35,619
that logic we're also looking for VK o

1382
01:10:19,810 --> 01:10:40,990
am comma I don't ask me why that's just

1383
01:10:35,619 --> 01:10:51,010
the way it is I guess that's not what I

1384
01:10:40,989 --> 01:11:00,550
wanted so now plus and minus should work

1385
01:10:51,010 --> 01:11:02,230
properly it does appear to + shift+ does

1386
01:11:00,550 --> 01:11:07,180
not appear to be working properly unless

1387
01:11:02,229 --> 01:11:09,059
our output code is busted so let's see

1388
01:11:07,180 --> 01:11:11,650
here

1389
01:11:09,060 --> 01:11:13,300
debug life left text index I'm going to

1390
01:11:11,649 --> 01:11:14,889
go ahead and set a breakpoint there and

1391
01:11:13,300 --> 01:11:22,810
see if that is working properly

1392
01:11:14,890 --> 01:11:26,860
so let's need to do so that is adding

1393
01:11:22,810 --> 01:11:31,300
debug life left text index plus 1 there

1394
01:11:26,859 --> 01:11:34,239
it is right and so what I should be able

1395
01:11:31,300 --> 01:11:38,650
to do now is go take a look at what

1396
01:11:34,239 --> 01:11:43,929
happens in this code the life text index

1397
01:11:38,649 --> 01:11:48,059
is 0 the text index is 1 so by setting

1398
01:11:43,930 --> 01:11:51,940
the read buffer to GL color attachment 1

1399
01:11:48,060 --> 01:11:54,520
we would think we'd be able to read out

1400
01:11:51,939 --> 01:11:58,689
of that buffer and blit it but it

1401
01:11:54,520 --> 01:12:01,090
doesn't look like we are because we're

1402
01:11:58,689 --> 01:12:04,269
just getting a black screen now what we

1403
01:12:01,090 --> 01:12:07,029
don't know is we don't know who is at

1404
01:12:04,270 --> 01:12:07,679
fault here right we don't know whether

1405
01:12:07,029 --> 01:12:11,069
the

1406
01:12:07,679 --> 01:12:13,380
is failing to target the correct texture

1407
01:12:11,069 --> 01:12:16,349
or whether the right is failing to

1408
01:12:13,380 --> 01:12:19,109
target the correct texture right we have

1409
01:12:16,350 --> 01:12:23,880
no idea which of those two things is

1410
01:12:19,109 --> 01:12:25,289
true so if I go over to our OpenGL code

1411
01:12:23,880 --> 01:12:30,390
again at least we know we're picking out

1412
01:12:25,289 --> 01:12:36,988
the right thing so if I go over here and

1413
01:12:30,390 --> 01:12:39,179
I want to take a look at what we've you

1414
01:12:36,988 --> 01:12:50,729
know what we're actually doing for our

1415
01:12:39,179 --> 01:12:52,260
right eye I don't see a lot of ways that

1416
01:12:50,729 --> 01:12:54,238
this could be wrong unless we're

1417
01:12:52,260 --> 01:12:56,909
misinterpreting what they meant by

1418
01:12:54,238 --> 01:12:59,250
defining the GL frag data to be zero to

1419
01:12:56,908 --> 01:13:01,019
the number of buffers because it's

1420
01:12:59,250 --> 01:13:06,289
pretty straight forward it's an Outback

1421
01:13:01,020 --> 01:13:10,760
four it's an array of four so I guess

1422
01:13:06,289 --> 01:13:10,760
there's a couple things I don't know

1423
01:13:12,738 --> 01:13:18,178
when outputting to multiple frame buffer

1424
01:13:16,170 --> 01:13:23,100
color attachments I don't know if they

1425
01:13:18,179 --> 01:13:25,640
have to be GL enabled so let me take a

1426
01:13:23,100 --> 01:13:25,640
quick look at that

1427
01:13:28,319 --> 01:13:31,449
[Applause]

1428
01:13:47,750 --> 01:13:52,520
framebuffer on the table of drove a

1429
01:13:49,970 --> 01:13:55,100
fixture indexed on the half-open range

1430
01:13:52,520 --> 01:13:57,650
to max draw buffers the frame buffers

1431
01:13:55,100 --> 01:14:02,829
cable maps from these indices to name

1432
01:13:57,649 --> 01:14:02,829
color buffers in the frame buffer what

1433
01:14:10,988 --> 01:14:18,179
so wait you're telling me you double

1434
01:14:13,600 --> 01:14:21,190
bind these why what is the point of that

1435
01:14:18,180 --> 01:14:23,230
so basically we have to set GL draw

1436
01:14:21,189 --> 01:14:28,379
buffers from zero to the number of

1437
01:14:23,229 --> 01:14:28,379
buffers we have to set that separately

1438
01:14:28,800 --> 01:14:33,570
in addition to having bound the buffers

1439
01:14:34,319 --> 01:14:37,988
the values in bus must names to the

1440
01:14:36,850 --> 01:14:40,000
collaboratory bearer for the default

1441
01:14:37,988 --> 01:14:44,738
frame buffer buffer next what is the

1442
01:14:40,000 --> 01:14:46,210
point of that ah okay wouldn't you just

1443
01:14:44,738 --> 01:14:48,009
create another frame buffer if you

1444
01:14:46,210 --> 01:14:51,760
wanted to swivel I don't understand

1445
01:14:48,010 --> 01:14:53,170
GL always has such weird legacy stuff in

1446
01:14:51,760 --> 01:14:55,869
it we're just like what is the point of

1447
01:14:53,170 --> 01:14:59,260
this why do you introduce indirection

1448
01:14:55,869 --> 01:15:05,170
after in direction after indirection all

1449
01:14:59,260 --> 01:15:07,510
right so yeah maybe that's all there was

1450
01:15:05,170 --> 01:15:11,649
that we have to specify the additional

1451
01:15:07,510 --> 01:15:13,539
mapping table which can we do we ask

1452
01:15:11,649 --> 01:15:20,949
that some of that per frame buffer I

1453
01:15:13,539 --> 01:15:25,510
don't know who knows

1454
01:15:20,949 --> 01:15:27,488
anyway let's assume we have to specify

1455
01:15:25,510 --> 01:15:28,719
the frame buffer because sure seems like

1456
01:15:27,488 --> 01:15:31,689
it was associated with the frame buffer

1457
01:15:28,719 --> 01:15:34,649
object making yet more work for the

1458
01:15:31,689 --> 01:15:38,579
driver of course so let's go ahead and

1459
01:15:34,649 --> 01:15:41,049
and take a look at the settings change

1460
01:15:38,579 --> 01:15:44,289
code where we actually create these

1461
01:15:41,050 --> 01:15:48,310
frame buffers and then I'll just call GL

1462
01:15:44,289 --> 01:15:55,569
draw buffers with this code so in this

1463
01:15:48,310 --> 01:15:58,890
case we want four in this case we want

1464
01:15:55,569 --> 01:16:01,880
to and in either case

1465
01:15:58,890 --> 01:16:07,820
[Music]

1466
01:16:01,880 --> 01:16:07,819
[Applause]

1467
01:16:10,630 --> 01:16:21,380
it's just going to be this all the time

1468
01:16:12,829 --> 01:16:23,149
anyway so cannot convert from GMO

1469
01:16:21,380 --> 01:16:26,750
initializer list with zero when L is

1470
01:16:23,149 --> 01:16:30,189
converted to this type good point

1471
01:16:26,750 --> 01:16:30,189
I see your point

1472
01:16:30,680 --> 01:16:39,940
and so that GL drawbars call must be

1473
01:16:32,630 --> 01:16:39,940
also an extended call I guess for ARB

1474
01:16:41,949 --> 01:16:57,220
draw buffers yeah all right here we go

1475
01:17:02,500 --> 01:17:07,090
make sure it's exactly what we want

1476
01:17:04,819 --> 01:17:07,090
first

1477
01:17:15,140 --> 01:17:20,100
all right so that looks like what we

1478
01:17:17,880 --> 01:17:22,770
want so we'll put it in here and we'll

1479
01:17:20,100 --> 01:17:24,510
just cross our fingers so if I want to

1480
01:17:22,770 --> 01:17:27,890
put that in there what I need first is I

1481
01:17:24,510 --> 01:17:30,300
need a definition of it somewhere right

1482
01:17:27,890 --> 01:17:39,210
so let's just stick that in there here's

1483
01:17:30,300 --> 01:17:53,570
type def and then we need to do the

1484
01:17:39,210 --> 01:17:55,980
little dance of acquiring it so we run

1485
01:17:53,569 --> 01:17:58,500
and we're calling it now and we can get

1486
01:17:55,979 --> 01:18:02,899
an error so that's nice but we still

1487
01:17:58,500 --> 01:18:04,500
don't know if it's working ah very nice

1488
01:18:02,899 --> 01:18:08,969
unfortunately it looks like we're

1489
01:18:04,500 --> 01:18:10,800
getting multiple pulses on that so I

1490
01:18:08,970 --> 01:18:16,380
would like if I don't know if that's

1491
01:18:10,800 --> 01:18:17,940
just a that may just be a keyboard

1492
01:18:16,380 --> 01:18:19,829
glitch or it might be because we're

1493
01:18:17,939 --> 01:18:21,869
accidentally setting like the reed

1494
01:18:19,829 --> 01:18:23,640
buffer and then that changes how things

1495
01:18:21,869 --> 01:18:26,309
behave later or something like this so

1496
01:18:23,640 --> 01:18:30,570
let's just make sure really quickly that

1497
01:18:26,310 --> 01:18:36,020
we're properly handling the pulse there

1498
01:18:30,569 --> 01:18:45,840
so in up Jill sorry inventory - handmade

1499
01:18:36,020 --> 01:18:50,370
where we actually check that for e m+ so

1500
01:18:45,840 --> 01:18:52,730
in here I think we want to make sure

1501
01:18:50,369 --> 01:18:52,729
that this

1502
01:18:56,868 --> 01:19:02,779
yes we want was done we want to make

1503
01:18:59,368 --> 01:19:02,779
sure what's done is down to this

1504
01:19:11,189 --> 01:19:17,668
so I don't really know exactly let's

1505
01:19:16,019 --> 01:19:20,219
take a look maybe this is this actually

1506
01:19:17,668 --> 01:19:21,719
could be related to the bug that we were

1507
01:19:20,219 --> 01:19:23,429
so fixed which I could have discussed

1508
01:19:21,719 --> 01:19:35,368
now as well let's just take a look at

1509
01:19:23,429 --> 01:19:40,469
what that is down tends to be so let's

1510
01:19:35,368 --> 01:19:47,609
just say we have test out and I do a

1511
01:19:40,469 --> 01:19:57,448
lisp printf and I say like is was is and

1512
01:19:47,609 --> 01:20:10,139
I just do a percent X sin x or actually

1513
01:19:57,448 --> 01:20:11,549
I do something like this so this is just

1514
01:20:10,139 --> 01:20:14,989
basically shoving it out the debug

1515
01:20:11,550 --> 01:20:14,989
course so we can take a look at it

1516
01:20:21,979 --> 01:20:31,019
yeah I and I'm going to run it so now

1517
01:20:27,238 --> 01:20:35,399
what I should be able to do is take a

1518
01:20:31,019 --> 01:20:39,869
look at what that happens to be so 0 is

1519
01:20:35,399 --> 01:20:42,170
1 1 is 0 0 is 1 1 is 0 0 is 1 1 is 0

1520
01:20:39,868 --> 01:20:44,339
that looks like what we would expect

1521
01:20:42,170 --> 01:20:46,670
let's run it in windowed so I can watch

1522
01:20:44,340 --> 01:20:59,248
it happen

1523
01:20:46,670 --> 01:21:04,739
as I click so here's the output so that

1524
01:20:59,248 --> 01:21:06,538
looks correct to me that's that's good

1525
01:21:04,738 --> 01:21:14,129
oh but you know what it's going to

1526
01:21:06,538 --> 01:21:17,368
happen two times because for all of

1527
01:21:14,130 --> 01:21:21,179
these things here we actually want like

1528
01:21:17,368 --> 01:21:27,268
these to happen only on is down so I

1529
01:21:21,179 --> 01:21:31,489
guess in this case these should actually

1530
01:21:27,269 --> 01:21:31,489
be moved into here

1531
01:21:33,500 --> 01:21:37,029
[Applause]

1532
01:21:43,130 --> 01:21:46,130
right

1533
01:22:02,069 --> 01:22:06,198
[Applause]

1534
01:22:04,329 --> 01:22:13,698
so now let's take a look at this a

1535
01:22:06,198 --> 01:22:18,799
little bit more stable there we go so

1536
01:22:13,698 --> 01:22:20,509
now we can look at every texture in

1537
01:22:18,800 --> 01:22:24,349
theories and we can also look at every

1538
01:22:20,510 --> 01:22:26,570
level of every texture right so that's

1539
01:22:24,349 --> 01:22:29,210
great so now that we have the ability to

1540
01:22:26,569 --> 01:22:30,920
debug that what we want to do is now try

1541
01:22:29,210 --> 01:22:35,060
writing some fake lighting into a bitmap

1542
01:22:30,920 --> 01:22:38,800
and again this is just a set us up so

1543
01:22:35,060 --> 01:22:38,800
that we can start this process of

1544
01:22:39,039 --> 01:22:42,469
debugging the lighting transport because

1545
01:22:41,179 --> 01:22:45,770
I'm going to write some stuff into a

1546
01:22:42,469 --> 01:22:49,550
shader and there's going to be bugs in

1547
01:22:45,770 --> 01:22:51,770
it and we're not going to know what the

1548
01:22:49,550 --> 01:22:54,050
bugs are or how to fix them unless we

1549
01:22:51,770 --> 01:22:56,780
can see very obviously what's in those

1550
01:22:54,050 --> 01:22:59,750
textures and even then it might be a

1551
01:22:56,779 --> 01:23:01,460
little bit hard but we'll do our best so

1552
01:22:59,750 --> 01:23:04,460
what we want to do now is we want to go

1553
01:23:01,460 --> 01:23:06,920
ahead and look at the dot compiled fake

1554
01:23:04,460 --> 01:23:10,279
speed lighting here this is our code so

1555
01:23:06,920 --> 01:23:13,670
what we can do here is we can start by

1556
01:23:10,279 --> 01:23:17,090
putting in to our front emit and vacuum

1557
01:23:13,670 --> 01:23:20,599
it we can start by putting in some sort

1558
01:23:17,090 --> 01:23:23,480
of information that we know to be

1559
01:23:20,599 --> 01:23:26,869
plausible so what we know about for

1560
01:23:23,479 --> 01:23:27,829
example RNP text and also one of the

1561
01:23:26,868 --> 01:23:29,960
things that we know about all these

1562
01:23:27,829 --> 01:23:33,349
frags is I guess they're all they don't

1563
01:23:29,960 --> 01:23:35,989
have an alpha value so I do know whether

1564
01:23:33,349 --> 01:23:37,429
that means I should output vectors still

1565
01:23:35,988 --> 01:23:39,408
because the shader would like to see it

1566
01:23:37,429 --> 01:23:40,670
that way or whether I can just have put

1567
01:23:39,408 --> 01:23:43,009
them exact threes because there's no

1568
01:23:40,670 --> 01:23:44,329
alpha value so I guess before you do

1569
01:23:43,010 --> 01:23:47,810
anything else maybe I'll just go ahead

1570
01:23:44,329 --> 01:23:51,079
and do that let's find out what happens

1571
01:23:47,810 --> 01:23:53,840
if I change these two vector YZ does the

1572
01:23:51,079 --> 01:23:58,029
share accept that or do you always have

1573
01:23:53,840 --> 01:23:58,029
to output an alpha value right

1574
01:24:03,229 --> 01:24:08,000
so it looks like the answer is it needs

1575
01:24:06,319 --> 01:24:16,759
to be oops

1576
01:24:08,000 --> 01:24:18,349
oh now could just be that so it looks

1577
01:24:16,760 --> 01:24:20,630
like maybe I can do that I don't I'll

1578
01:24:18,349 --> 01:24:22,489
let the Internet at large tell me

1579
01:24:20,630 --> 01:24:26,779
whether I can or cannot let other people

1580
01:24:22,488 --> 01:24:28,189
test this on other cards which they

1581
01:24:26,779 --> 01:24:30,170
often do every night when I post the

1582
01:24:28,189 --> 01:24:31,638
build I don't know if that's actually

1583
01:24:30,170 --> 01:24:33,859
legal or not but this is what we're

1584
01:24:31,639 --> 01:24:37,309
actually doing meaning none of those

1585
01:24:33,859 --> 01:24:39,259
textures have an alpha Channel so I

1586
01:24:37,309 --> 01:24:41,989
don't know whether OpenGL would be

1587
01:24:39,260 --> 01:24:44,059
happier with me explicitly saying here

1588
01:24:41,988 --> 01:24:47,058
are the RGB values there is no a value

1589
01:24:44,059 --> 01:24:49,070
or whether it would like to only see an

1590
01:24:47,059 --> 01:24:51,409
a value and throw it away

1591
01:24:49,069 --> 01:24:53,149
so I don't know which of those is more

1592
01:24:51,408 --> 01:24:54,828
appropriate but for now we'll just stick

1593
01:24:53,149 --> 01:24:56,988
with actually generating what we

1594
01:24:54,828 --> 01:24:58,759
actually have which is this there there

1595
01:24:56,988 --> 01:25:02,808
are no alpha values in these textures

1596
01:24:58,760 --> 01:25:04,159
they're just RGB textures so now when I

1597
01:25:02,809 --> 01:25:06,110
go to write this out we've got a front

1598
01:25:04,158 --> 01:25:09,170
emit in a vacuum and we've got a surface

1599
01:25:06,109 --> 01:25:12,679
color and NP Tech so what I'd like to do

1600
01:25:09,170 --> 01:25:14,149
here is I'd like to go ahead and start

1601
01:25:12,679 --> 01:25:17,809
playing with these values and put some

1602
01:25:14,149 --> 01:25:19,670
things in that might be sensible so what

1603
01:25:17,809 --> 01:25:22,760
we said we would do remember for our

1604
01:25:19,670 --> 01:25:25,849
encoding interiors we said that it would

1605
01:25:22,760 --> 01:25:27,639
be NX and z-depth right what I'm going

1606
01:25:25,849 --> 01:25:31,069
to do is I'm going to leave the depth

1607
01:25:27,639 --> 01:25:35,510
value at a constant and the NX value at

1608
01:25:31,069 --> 01:25:37,189
a constant for most of the places and

1609
01:25:35,510 --> 01:25:38,929
only where we put the light source in

1610
01:25:37,189 --> 01:25:42,710
will I change them so what am i do for

1611
01:25:38,929 --> 01:25:44,899
that as we say that the default value

1612
01:25:42,710 --> 01:25:48,710
for all of these is something that does

1613
01:25:44,899 --> 01:25:50,299
not emit any light the surface for now

1614
01:25:48,710 --> 01:25:51,770
we'll just be colorless it'll just be

1615
01:25:50,300 --> 01:25:53,929
gray

1616
01:25:51,770 --> 01:25:56,030
that reflects the light that comes back

1617
01:25:53,929 --> 01:25:58,699
to it let's say it reflects the light

1618
01:25:56,029 --> 01:26:01,038
that comes back to it at one seventh of

1619
01:25:58,698 --> 01:26:02,299
value one thing that we have to be

1620
01:26:01,038 --> 01:26:04,788
careful about let me just throw this out

1621
01:26:02,300 --> 01:26:07,010
there right away as we start moving

1622
01:26:04,788 --> 01:26:09,559
towards more physically accurate

1623
01:26:07,010 --> 01:26:11,449
lighting and by physically accurate we

1624
01:26:09,559 --> 01:26:12,619
not any huge quotes because we are in no

1625
01:26:11,448 --> 01:26:15,168
way trying to physically

1626
01:26:12,618 --> 01:26:17,948
accuracy lighting but all I mean by that

1627
01:26:15,168 --> 01:26:21,109
is as you start adding more elements of

1628
01:26:17,948 --> 01:26:23,448
physicality to your lighting you reduce

1629
01:26:21,109 --> 01:26:26,328
the ways in which you can set your

1630
01:26:23,448 --> 01:26:28,158
parameters so for example we are now

1631
01:26:26,328 --> 01:26:30,319
adding the concept that light gets

1632
01:26:28,158 --> 01:26:32,058
transported around the scene once you

1633
01:26:30,319 --> 01:26:35,748
allow light to get transported around

1634
01:26:32,059 --> 01:26:38,929
the scene a value of 1 for reflectance

1635
01:26:35,748 --> 01:26:40,760
is no longer plausible there is no such

1636
01:26:38,929 --> 01:26:41,809
thing as light that bounces around

1637
01:26:40,760 --> 01:26:44,208
forever

1638
01:26:41,809 --> 01:26:45,769
so you will start to get subtle bugs in

1639
01:26:44,208 --> 01:26:47,389
the lighting that has nothing to do with

1640
01:26:45,769 --> 01:26:49,280
the lighting transport that are actually

1641
01:26:47,389 --> 01:26:52,099
just because your values are physically

1642
01:26:49,279 --> 01:26:53,868
implausible so once you vacillate around

1643
01:26:52,099 --> 01:26:55,699
the scene it's important to respect the

1644
01:26:53,868 --> 01:26:57,918
reality of the physicality of light

1645
01:26:55,698 --> 01:26:59,839
which is that there are no objects in

1646
01:26:57,918 --> 01:27:03,889
the real world that you commonly observe

1647
01:26:59,840 --> 01:27:07,069
that about 100% of the photon bottom

1648
01:27:03,889 --> 01:27:10,699
they all absorb a little bit so even the

1649
01:27:07,069 --> 01:27:13,609
brightest white paint in a room bounces

1650
01:27:10,698 --> 01:27:16,578
photons at like 90 percent or 80 percent

1651
01:27:13,609 --> 01:27:18,918
or something it doesn't bounce 100% of

1652
01:27:16,578 --> 01:27:21,228
the photon that's why your room isn't

1653
01:27:18,918 --> 01:27:23,090
infinitely bright right if all the

1654
01:27:21,229 --> 01:27:25,519
photons always bounced off all the

1655
01:27:23,090 --> 01:27:27,619
objects all the time every surface would

1656
01:27:25,519 --> 01:27:31,760
be as bright as the light for the most

1657
01:27:27,618 --> 01:27:33,708
part right that's not actually true but

1658
01:27:31,760 --> 01:27:37,070
they would be a lot brighter that's

1659
01:27:33,708 --> 01:27:38,418
telling every surface would be a lot

1660
01:27:37,069 --> 01:27:40,578
brighter because you would never get any

1661
01:27:38,418 --> 01:27:43,429
absorption so when you look at a

1662
01:27:40,578 --> 01:27:47,058
particular part of your wall what you

1663
01:27:43,429 --> 01:27:49,429
would see is the inverse square law from

1664
01:27:47,059 --> 01:27:51,769
the light source and nothing else it

1665
01:27:49,429 --> 01:27:53,389
would just be that so everything in your

1666
01:27:51,769 --> 01:27:55,628
room would be like a uniform brightness

1667
01:27:53,389 --> 01:27:58,729
there was just inverse square law and

1668
01:27:55,628 --> 01:28:01,189
cosine angle and that's it you would see

1669
01:27:58,729 --> 01:28:03,499
no other diminutive ation of the light

1670
01:28:01,189 --> 01:28:08,840
source so something that was in shadow

1671
01:28:03,498 --> 01:28:10,998
would not really be in shadow right it

1672
01:28:08,840 --> 01:28:12,498
would be still bright because light

1673
01:28:10,998 --> 01:28:14,319
would get there eventually because it's

1674
01:28:12,498 --> 01:28:17,359
not getting absorbed by anything right

1675
01:28:14,319 --> 01:28:19,279
so even though you would still see what

1676
01:28:17,359 --> 01:28:20,808
I said initially was was way exaggerated

1677
01:28:19,279 --> 01:28:21,858
it's not true you would not see

1678
01:28:20,809 --> 01:28:23,958
everything to be as bright light source

1679
01:28:21,859 --> 01:28:26,030
but what you would see is no real

1680
01:28:23,958 --> 01:28:28,340
shadowing right because things wouldn't

1681
01:28:26,029 --> 01:28:29,269
absorbing light so the only thing is the

1682
01:28:28,340 --> 01:28:30,980
only thing that would create like a

1683
01:28:29,270 --> 01:28:32,540
shadow effect was the fact that the

1684
01:28:30,979 --> 01:28:34,309
light had to travel further to get

1685
01:28:32,539 --> 01:28:36,470
somewhere that's the only thing you

1686
01:28:34,310 --> 01:28:38,510
would see and so everything that is in

1687
01:28:36,470 --> 01:28:40,730
shadow right now would be a lot less in

1688
01:28:38,510 --> 01:28:42,980
shadow because the light would still

1689
01:28:40,729 --> 01:28:45,169
always find its way there it would just

1690
01:28:42,979 --> 01:28:46,549
be a question of it taking longer so the

1691
01:28:45,170 --> 01:28:48,980
inverse square law would be more in

1692
01:28:46,550 --> 01:28:52,130
effect right but that's it

1693
01:28:48,979 --> 01:28:53,959
normally shadows don't come only from

1694
01:28:52,130 --> 01:28:56,420
inverse square law normally shadows come

1695
01:28:53,960 --> 01:28:59,090
because every time light bounces it gets

1696
01:28:56,420 --> 01:29:00,409
significantly weaker on the bounce so

1697
01:28:59,090 --> 01:29:02,000
you're not just seeing the inverse

1698
01:29:00,409 --> 01:29:03,920
square law what you're actually saying

1699
01:29:02,000 --> 01:29:06,649
is inverse square law plus the

1700
01:29:03,920 --> 01:29:09,289
absorption so every time the latest the

1701
01:29:06,649 --> 01:29:14,539
surface you lose 30% of your light or

1702
01:29:09,289 --> 01:29:16,100
something right and that's not that's

1703
01:29:14,539 --> 01:29:17,899
not at all what would happen if the

1704
01:29:16,100 --> 01:29:19,730
light kept bouncing okay so that's it so

1705
01:29:17,899 --> 01:29:20,750
in order to prevent our scenes from an

1706
01:29:19,729 --> 01:29:23,269
officially bright I'm going to actually

1707
01:29:20,750 --> 01:29:24,909
start making them absorb a little bit

1708
01:29:23,270 --> 01:29:27,380
when you get a surface but that's all

1709
01:29:24,909 --> 01:29:29,090
then for the MP text what I want to do

1710
01:29:27,380 --> 01:29:30,770
is if we're including this is in X and Z

1711
01:29:29,090 --> 01:29:32,539
depth what I want to do is have

1712
01:29:30,770 --> 01:29:35,120
everything point upwards and I want the

1713
01:29:32,539 --> 01:29:36,739
depth let's say for the moment that

1714
01:29:35,119 --> 01:29:38,300
could be zero because we don't really

1715
01:29:36,739 --> 01:29:39,979
need to care about that right yet but I

1716
01:29:38,300 --> 01:29:42,320
would like the light source to be higher

1717
01:29:39,979 --> 01:29:43,909
than the surface so that it shines down

1718
01:29:42,319 --> 01:29:46,309
on it so what I'll do is I'll bump it up

1719
01:29:43,909 --> 01:29:48,289
for the light source so what I'm going

1720
01:29:46,310 --> 01:29:54,230
to do is create a synthetic value just

1721
01:29:48,289 --> 01:29:56,989
like if a light right else not so we're

1722
01:29:54,229 --> 01:29:59,719
going to have this buffer be surfaces

1723
01:29:56,989 --> 01:30:00,949
everywhere and light in one place so

1724
01:29:59,720 --> 01:30:03,289
what I want to do is have a way of

1725
01:30:00,949 --> 01:30:05,659
saying what the light source where the

1726
01:30:03,289 --> 01:30:07,760
light source is and one of things that

1727
01:30:05,659 --> 01:30:09,920
we specified is we specify a light P so

1728
01:30:07,760 --> 01:30:12,320
the location of the light so what I want

1729
01:30:09,920 --> 01:30:14,630
to do here is a these are B trees I

1730
01:30:12,319 --> 01:30:15,979
don't know why I'm using vector E I'm

1731
01:30:14,630 --> 01:30:20,440
going to OpenGL power lamps all of a

1732
01:30:15,979 --> 01:30:22,219
sudden for no reason so these VIII's are

1733
01:30:20,439 --> 01:30:24,109
satisfying what we're going to write the

1734
01:30:22,220 --> 01:30:25,640
service what I want to do is change them

1735
01:30:24,109 --> 01:30:27,259
if we're in light so I actually don't

1736
01:30:25,640 --> 01:30:28,490
need the else clause I suppose because I

1737
01:30:27,260 --> 01:30:30,289
set them to the default files already

1738
01:30:28,489 --> 01:30:33,139
but that if we're in the light I'm going

1739
01:30:30,289 --> 01:30:35,210
to set the front emit and the back emit

1740
01:30:33,140 --> 01:30:38,660
to do different colors I'm going to have

1741
01:30:35,210 --> 01:30:40,279
a red light coming out one side in a

1742
01:30:38,659 --> 01:30:42,949
green light coming out the

1743
01:30:40,279 --> 01:30:44,059
there why just because that way we can

1744
01:30:42,949 --> 01:30:47,859
see the difference between front and

1745
01:30:44,060 --> 01:30:52,190
backside emission I'm going to set the

1746
01:30:47,859 --> 01:30:55,369
MP Tech so this is the depth again that

1747
01:30:52,189 --> 01:30:56,750
depth is going to be kind of closer to

1748
01:30:55,369 --> 01:30:58,189
us so maybe what I'll do here is I'll

1749
01:30:56,750 --> 01:30:59,510
set this one to one and I'll set this

1750
01:30:58,189 --> 01:31:01,909
one to zero or maybe even more I'll set

1751
01:30:59,510 --> 01:31:03,739
this to like 10 and this to zero so

1752
01:31:01,909 --> 01:31:05,989
we've kind of got a lot of distance

1753
01:31:03,739 --> 01:31:07,670
specified in there and then what I'm

1754
01:31:05,989 --> 01:31:08,719
going to do is say the direction of the

1755
01:31:07,670 --> 01:31:10,670
light source is also going to be

1756
01:31:08,720 --> 01:31:12,860
different so the direction this light

1757
01:31:10,670 --> 01:31:15,230
source let's say is it's pointing 1 so

1758
01:31:12,859 --> 01:31:16,849
so it's shining a red light out the

1759
01:31:15,229 --> 01:31:19,009
right side and a green light out the

1760
01:31:16,850 --> 01:31:21,230
left side of it that's just what it's

1761
01:31:19,010 --> 01:31:25,610
doing right that's who knows I don't

1762
01:31:21,229 --> 01:31:28,519
know why this is what it's doing okay so

1763
01:31:25,609 --> 01:31:30,289
that's our our emission set up a surface

1764
01:31:28,520 --> 01:31:31,310
color for the light doesn't make any

1765
01:31:30,289 --> 01:31:33,409
difference because it can't really

1766
01:31:31,310 --> 01:31:35,390
bounce light around because it's an

1767
01:31:33,409 --> 01:31:36,859
emitter but you know so let's just say

1768
01:31:35,390 --> 01:31:39,010
it doesn't pass white it's only shines

1769
01:31:36,859 --> 01:31:46,279
light out light doesn't bounce off it

1770
01:31:39,010 --> 01:31:47,989
for now who knows why so taking all this

1771
01:31:46,279 --> 01:31:49,639
into account what we all what we need

1772
01:31:47,989 --> 01:31:50,840
now is some way of saying whether the

1773
01:31:49,640 --> 01:31:53,240
light starts what I want to do for that

1774
01:31:50,840 --> 01:31:54,529
take the distance to the light so the

1775
01:31:53,239 --> 01:31:56,869
distance to the light is going to be

1776
01:31:54,529 --> 01:32:00,590
whatever location we're at right now -

1777
01:31:56,869 --> 01:32:02,809
the light location right so what we need

1778
01:32:00,590 --> 01:32:08,829
to figure out is we need to figure out

1779
01:32:02,810 --> 01:32:08,830
like this PA - light PA right

1780
01:32:08,960 --> 01:32:13,460
I should say Delta - light and then

1781
01:32:11,720 --> 01:32:16,250
we've got a distance to light which is

1782
01:32:13,460 --> 01:32:18,170
just the length of the Delta - light at

1783
01:32:16,250 --> 01:32:19,819
that point it's a pretty easy thing to

1784
01:32:18,170 --> 01:32:23,239
say whether we're in the light we just

1785
01:32:19,819 --> 01:32:26,329
have to have a light radius how big is

1786
01:32:23,239 --> 01:32:30,800
the light swords right let's say the

1787
01:32:26,329 --> 01:32:32,689
light source is a you know a 1/2 a meter

1788
01:32:30,800 --> 01:32:36,590
what left that's pretty big a quarter

1789
01:32:32,689 --> 01:32:39,379
meter it's still pretty big tenth of a

1790
01:32:36,590 --> 01:32:42,470
meter let's say so it's a tenth of a

1791
01:32:39,380 --> 01:32:44,239
meter a decameter light source so if the

1792
01:32:42,470 --> 01:32:46,039
distance to the light source is less

1793
01:32:44,239 --> 01:32:48,019
than the light radius you are inside the

1794
01:32:46,039 --> 01:32:50,869
light and we'll set it otherwise we

1795
01:32:48,020 --> 01:32:52,610
won't and that's really all we need we

1796
01:32:50,869 --> 01:32:53,689
just need now to have some way of

1797
01:32:52,609 --> 01:32:59,659
translate

1798
01:32:53,689 --> 01:33:03,529
from the fragment p-value to a actual 3d

1799
01:32:59,659 --> 01:33:06,229
position in the world so in order to do

1800
01:33:03,529 --> 01:33:09,409
that we need some information but we've

1801
01:33:06,229 --> 01:33:11,509
got GL frag cord right we've got the GL

1802
01:33:09,409 --> 01:33:15,079
frag cord XY we know that's going to

1803
01:33:11,510 --> 01:33:16,909
range from 0 to 1080 or whatever so we

1804
01:33:15,079 --> 01:33:18,409
can just hack it again this is a totally

1805
01:33:16,909 --> 01:33:19,849
hacked lighting setup just for testing

1806
01:33:18,409 --> 01:33:20,930
purposes it doesn't have to be

1807
01:33:19,850 --> 01:33:23,990
consistent doesn't have to do anything

1808
01:33:20,930 --> 01:33:26,180
smart it can be completely dumb and

1809
01:33:23,989 --> 01:33:31,069
that's totally fine so let's just assume

1810
01:33:26,180 --> 01:33:33,440
that the the V value here let's just

1811
01:33:31,069 --> 01:33:36,649
assume that the distance from the light

1812
01:33:33,439 --> 01:33:39,289
P in this case is not going to depend on

1813
01:33:36,649 --> 01:33:41,420
these so we'll just set the disc P to be

1814
01:33:39,289 --> 01:33:43,010
whatever the light Z value actually is

1815
01:33:41,420 --> 01:33:44,810
so we know that that's not taken to

1816
01:33:43,010 --> 01:33:46,909
account and only need to do is make the

1817
01:33:44,810 --> 01:33:49,130
GL frag cord be something that roughly

1818
01:33:46,909 --> 01:33:53,630
corresponds to what we want so let's

1819
01:33:49,130 --> 01:33:56,000
take that value in two parts here let's

1820
01:33:53,630 --> 01:33:57,409
take the X and the y let's go ahead and

1821
01:33:56,000 --> 01:34:00,109
try to normalize that out so if we

1822
01:33:57,409 --> 01:34:02,960
expect to be running the GL fried cord

1823
01:34:00,109 --> 01:34:06,409
from zero to Cheney let's suppose we

1824
01:34:02,960 --> 01:34:11,480
subtract you know half of 1080 right so

1825
01:34:06,409 --> 01:34:16,430
if this was our our our situation here

1826
01:34:11,479 --> 01:34:22,489
writing something like this and the same

1827
01:34:16,430 --> 01:34:25,730
over here I guess tighten we should be

1828
01:34:22,489 --> 01:34:29,559
19:22 the x-coordinate not the

1829
01:34:25,729 --> 01:34:29,559
y-coordinate so we've got those two

1830
01:34:29,739 --> 01:34:34,760
being what they are we then want to try

1831
01:34:33,289 --> 01:34:37,550
and scale them a little bit so that's

1832
01:34:34,760 --> 01:34:39,230
just kind of like you know reese enters

1833
01:34:37,550 --> 01:34:40,699
them and then we want to scale them a

1834
01:34:39,229 --> 01:34:42,439
little bit so I guess maybe what I could

1835
01:34:40,699 --> 01:34:44,449
do instead let's do it this way let's

1836
01:34:42,439 --> 01:34:46,399
convert it to like a UV style so let's

1837
01:34:44,449 --> 01:34:48,800
divide it by the total so now range from

1838
01:34:46,399 --> 01:34:53,329
0 to 1 and then what I can do is just

1839
01:34:48,800 --> 01:34:55,640
take negative 0.5 and add you know in

1840
01:34:53,329 --> 01:35:00,289
half the value just sort of scale me to

1841
01:34:55,640 --> 01:35:02,750
a 0 to 1 range right now 0 to 1 range is

1842
01:35:00,289 --> 01:35:04,699
probably going to be too small so we

1843
01:35:02,750 --> 01:35:06,760
probably wanted to Jack that range up a

1844
01:35:04,699 --> 01:35:11,710
bit so maybe we'll say

1845
01:35:06,760 --> 01:35:13,960
like you know artificial range here and

1846
01:35:11,710 --> 01:35:16,779
will say that we are 10 in each

1847
01:35:13,960 --> 01:35:22,300
direction right so there's our art range

1848
01:35:16,779 --> 01:35:24,550
negative art range - art range negative

1849
01:35:22,300 --> 01:35:26,350
art range - our range now this is going

1850
01:35:24,550 --> 01:35:31,630
to be wrong we're going to have a weird

1851
01:35:26,350 --> 01:35:33,010
it's going to be abusing the I'm not

1852
01:35:31,630 --> 01:35:34,750
correcting for these the same way in

1853
01:35:33,010 --> 01:35:36,610
fact you know I could do it I could just

1854
01:35:34,750 --> 01:35:40,149
do them both by 1080 and then it would

1855
01:35:36,609 --> 01:35:42,399
be correct is not correct but it would

1856
01:35:40,149 --> 01:35:45,609
wouldn't be obvious or maybe I'll do

1857
01:35:42,399 --> 01:35:46,899
that so let's go ahead and and picture

1858
01:35:45,609 --> 01:35:50,139
of any compiler errors we've got here in

1859
01:35:46,899 --> 01:35:53,949
our shader read eclair built in named

1860
01:35:50,140 --> 01:35:55,990
frag data so I guess that does have to

1861
01:35:53,949 --> 01:36:00,899
be a back for right as we're looking at

1862
01:35:55,989 --> 01:36:03,250
here NP text parser so let's take a look

1863
01:36:00,899 --> 01:36:05,500
alright that requires semicolon so it

1864
01:36:03,250 --> 01:36:09,010
looks like it does want you to be before

1865
01:36:05,500 --> 01:36:13,359
it that's fine we can only we can just

1866
01:36:09,010 --> 01:36:14,650
write just to the X Y Z's of them and

1867
01:36:13,359 --> 01:36:16,269
that should be okay

1868
01:36:14,649 --> 01:36:18,609
and I guess technically if we really

1869
01:36:16,270 --> 01:36:20,170
wanted to we can say that this were RGB

1870
01:36:18,609 --> 01:36:22,359
because that's really the color output

1871
01:36:20,170 --> 01:36:25,300
that's probably more accurate way to

1872
01:36:22,359 --> 01:36:28,389
state it all right so now we've got

1873
01:36:25,300 --> 01:36:29,380
these a we're kind of right - already

1874
01:36:28,390 --> 01:36:30,850
not great

1875
01:36:29,380 --> 01:36:34,960
like I'm not seeing anything on the

1876
01:36:30,850 --> 01:36:36,400
screen which is not fantastic so what

1877
01:36:34,960 --> 01:36:39,789
that means is we're really never getting

1878
01:36:36,399 --> 01:36:43,389
inside this this distance the light here

1879
01:36:39,789 --> 01:36:48,630
is never becoming a valid value it

1880
01:36:43,390 --> 01:36:51,190
seemed we're only in time room saw time

1881
01:36:48,630 --> 01:36:52,840
so really all we have to do here is fix

1882
01:36:51,189 --> 01:36:55,149
that calculation again that probably has

1883
01:36:52,840 --> 01:36:57,670
to do with the dis key again that frag

1884
01:36:55,149 --> 01:36:59,259
cord I feel like should be roughly

1885
01:36:57,670 --> 01:37:02,380
correct but then again I don't really

1886
01:36:59,260 --> 01:37:07,869
know I feel like it should be ranging

1887
01:37:02,380 --> 01:37:11,619
from 0 to 1080 in Y and 0 to 1920 in X

1888
01:37:07,869 --> 01:37:14,319
but maybe I'm wrong about that the light

1889
01:37:11,619 --> 01:37:16,269
key again should just be you know should

1890
01:37:14,319 --> 01:37:18,439
be what it is what I can do to

1891
01:37:16,270 --> 01:37:21,530
double-check that is I can't

1892
01:37:18,439 --> 01:37:27,009
the Liedtke temple temporarily to just

1893
01:37:21,529 --> 01:37:27,009
be a zero

1894
01:37:29,949 --> 01:37:35,149
oops

1895
01:37:31,189 --> 01:37:43,839
or maybe I can can't monitor you for

1896
01:37:35,149 --> 01:37:43,839
okay let's use LP instead then

1897
01:37:54,420 --> 01:38:08,260
what happened really clear built-in

1898
01:38:00,430 --> 01:38:10,000
names you'll frag data so does that mean

1899
01:38:08,260 --> 01:38:11,829
that it doesn't that I just shouldn't

1900
01:38:10,000 --> 01:38:16,270
declare this that I should leave it

1901
01:38:11,829 --> 01:38:21,689
undeclared because it's giving me a

1902
01:38:16,270 --> 01:38:25,030
warning like it doesn't want that am i

1903
01:38:21,689 --> 01:38:26,889
interpreting that correctly would it

1904
01:38:25,029 --> 01:38:31,300
prefer that I just didn't put anything

1905
01:38:26,890 --> 01:38:34,750
there and let's let's I mean let's see I

1906
01:38:31,300 --> 01:38:36,340
guess if that's the case so if I did

1907
01:38:34,750 --> 01:38:40,380
that let me see if the surface color of

1908
01:38:36,340 --> 01:38:40,380
the MP tech got written anything to them

1909
01:38:40,500 --> 01:38:45,369
yeah they did so I guess it just wants

1910
01:38:43,390 --> 01:38:47,020
me to not declare that at all it's going

1911
01:38:45,369 --> 01:38:51,519
to take care of it and don't bother read

1912
01:38:47,020 --> 01:38:53,380
eclair in it I guess so again the only

1913
01:38:51,520 --> 01:38:55,510
problem I'm having right now as far as I

1914
01:38:53,380 --> 01:39:01,329
can tell is just I need to stabilize

1915
01:38:55,510 --> 01:39:04,659
this deal fredward better oh wait you

1916
01:39:01,329 --> 01:39:05,769
know what we started it at 12:15 so I

1917
01:39:04,659 --> 01:39:08,529
have 15 minutes left

1918
01:39:05,770 --> 01:39:11,199
I'm not almost out of time that's that's

1919
01:39:08,529 --> 01:39:12,698
not true so yeah so all I have to do is

1920
01:39:11,198 --> 01:39:13,988
just get this computation working more

1921
01:39:12,698 --> 01:39:16,809
sensibly and then we should be good to

1922
01:39:13,988 --> 01:39:18,879
go because this if this zero zero zero

1923
01:39:16,810 --> 01:39:22,660
here what am I getting wrong about these

1924
01:39:18,880 --> 01:39:26,409
these coordinates here so this P minus

1925
01:39:22,659 --> 01:39:28,569
LP take the length of the Delta to light

1926
01:39:26,409 --> 01:39:30,279
the light radius whatever the light

1927
01:39:28,569 --> 01:39:32,049
radius is then we say distance to light

1928
01:39:30,279 --> 01:39:36,488
listen light radius it should be set to

1929
01:39:32,050 --> 01:39:39,340
these values here so if we were to set

1930
01:39:36,488 --> 01:39:44,609
these just to something regular so if I

1931
01:39:39,340 --> 01:39:44,610
just said this B equals GL frag cord

1932
01:39:48,439 --> 01:39:59,960
I something like this or if I just said

1933
01:39:54,229 --> 01:40:02,000
something like that and I set the light

1934
01:39:59,960 --> 01:40:03,260
PA to something like let's say I set the

1935
01:40:02,000 --> 01:40:07,369
light radius up to something like 10

1936
01:40:03,260 --> 01:40:11,600
pixels wide I could just do all this in

1937
01:40:07,369 --> 01:40:13,250
pixels and map the light forward for

1938
01:40:11,600 --> 01:40:17,360
example and I should be able to see that

1939
01:40:13,250 --> 01:40:25,840
work the way that that would happen

1940
01:40:17,359 --> 01:40:25,839
would just be to say like this is a v2

1941
01:40:30,010 --> 01:40:40,210
that's set to the frag cord the light

1942
01:40:34,789 --> 01:40:43,279
position in this case is going to be

1943
01:40:40,210 --> 01:40:52,250
let's say half of the value we expect so

1944
01:40:43,279 --> 01:40:55,309
1080 sanction 20 community so just going

1945
01:40:52,250 --> 01:40:58,010
to be the middle pixel lines the light

1946
01:40:55,310 --> 01:40:59,630
radius is going to be 10 pixels we

1947
01:40:58,010 --> 01:41:01,640
should see a temp LexA blob and center

1948
01:40:59,630 --> 01:41:07,550
and screen right and we see in the upper

1949
01:41:01,640 --> 01:41:16,460
corner which is pretty weird so why are

1950
01:41:07,550 --> 01:41:19,369
we seeing it half size you saw that

1951
01:41:16,460 --> 01:41:22,698
right you see what I'm saying up there

1952
01:41:19,369 --> 01:41:24,890
in the corner what's it doing why is it

1953
01:41:22,698 --> 01:41:28,219
we set it at half of the screen

1954
01:41:24,890 --> 01:41:30,380
resolution so unless we're drawing

1955
01:41:28,219 --> 01:41:34,039
something twice as large as the screen

1956
01:41:30,380 --> 01:41:35,770
for some reason that shouldn't be

1957
01:41:34,039 --> 01:41:39,680
happening which you know maybe we are

1958
01:41:35,770 --> 01:41:41,980
I'm not sure but it seems like that's

1959
01:41:39,680 --> 01:41:45,140
busted am I missing something

1960
01:41:41,979 --> 01:41:48,709
Frank critics why the light position is

1961
01:41:45,140 --> 01:41:49,880
1920 1080 and we're having that so that

1962
01:41:48,710 --> 01:41:52,130
should be right in the middle of the

1963
01:41:49,880 --> 01:41:55,659
screen we're taking Delta to light and

1964
01:41:52,130 --> 01:41:55,659
we're doing this P minus LP

1965
01:41:59,079 --> 01:42:07,539
I guess if the frag cords so here's the

1966
01:42:05,260 --> 01:42:10,570
question do the frag cords actually I

1967
01:42:07,539 --> 01:42:10,989
not have the Delta offset added to them

1968
01:42:10,569 --> 01:42:14,699
yet

1969
01:42:10,989 --> 01:42:18,489
I always forget what they're actually at

1970
01:42:14,699 --> 01:42:24,369
okay so it's zero zero is the bottom

1971
01:42:18,489 --> 01:42:26,170
corner so that's what I was expecting so

1972
01:42:24,369 --> 01:42:28,930
is this a half light texture for some

1973
01:42:26,170 --> 01:42:30,250
reason so if I was to take a quarter of

1974
01:42:28,930 --> 01:42:35,530
that would I show up in the center of

1975
01:42:30,250 --> 01:42:37,359
the screen I do so what that suggests to

1976
01:42:35,529 --> 01:42:39,579
me is that this texture is smaller than

1977
01:42:37,359 --> 01:42:41,769
I think it is and I don't know why so

1978
01:42:39,579 --> 01:42:46,869
let me just do a quick check to find out

1979
01:42:41,770 --> 01:42:48,610
why because I would like to know so in

1980
01:42:46,869 --> 01:42:50,800
here we're we're creating our textures

1981
01:42:48,609 --> 01:42:52,649
you can see we've got a width and height

1982
01:42:50,800 --> 01:42:54,909
in here that are set to the render

1983
01:42:52,649 --> 01:42:56,829
within the render height and they're you

1984
01:42:54,909 --> 01:42:58,239
know we go when we start so let's go

1985
01:42:56,829 --> 01:42:59,409
ahead and jump in there when we're

1986
01:42:58,239 --> 01:43:02,050
creating these so we can see what's

1987
01:42:59,409 --> 01:43:04,329
going on I'm going to switch out a

1988
01:43:02,050 --> 01:43:08,760
hexadecimal views because we don't care

1989
01:43:04,329 --> 01:43:08,760
what that so the render width and oh

1990
01:43:09,270 --> 01:43:13,300
nevermind

1991
01:43:10,539 --> 01:43:15,729
I guess we're rendering at 960 by 540 oh

1992
01:43:13,300 --> 01:43:17,860
right probably because this card is too

1993
01:43:15,729 --> 01:43:21,159
slow to render at full resolution it's

1994
01:43:17,859 --> 01:43:21,639
rendering it half resolution okay don't

1995
01:43:21,159 --> 01:43:23,319
care

1996
01:43:21,640 --> 01:43:26,079
totally fine with me just want to make

1997
01:43:23,319 --> 01:43:28,960
sure I knew what it was all right so

1998
01:43:26,079 --> 01:43:32,170
that's all good and so let's try to get

1999
01:43:28,960 --> 01:43:34,449
again the rest of our stuff working

2000
01:43:32,170 --> 01:43:36,819
where we can actually put the the light

2001
01:43:34,449 --> 01:43:39,189
position in here so if I wanted to do

2002
01:43:36,819 --> 01:43:43,539
that what I could do is again take two

2003
01:43:39,189 --> 01:43:46,239
LP take the light position which is now

2004
01:43:43,539 --> 01:43:47,859
needs to sort of be REE centered because

2005
01:43:46,239 --> 01:43:51,250
the light position again is going to be

2006
01:43:47,859 --> 01:43:53,739
sort of in in meters and now we want it

2007
01:43:51,250 --> 01:43:58,899
to be in pixel so what I can do is

2008
01:43:53,739 --> 01:44:01,149
multiply it by this scalar here to sort

2009
01:43:58,899 --> 01:44:05,229
of say like okay let's multiply it out

2010
01:44:01,149 --> 01:44:07,449
to the correct size in in in pixels here

2011
01:44:05,229 --> 01:44:09,789
but I don't really know what the scale

2012
01:44:07,449 --> 01:44:11,139
factor should be exactly it can be very

2013
01:44:09,789 --> 01:44:11,880
approximate because again we're just

2014
01:44:11,140 --> 01:44:14,060
using this

2015
01:44:11,880 --> 01:44:16,679
I just need to be able to move it around

2016
01:44:14,060 --> 01:44:19,170
right so you can see that that's all I

2017
01:44:16,679 --> 01:44:20,429
need to be able to do is that now it's

2018
01:44:19,170 --> 01:44:21,989
not going to be centered properly as

2019
01:44:20,429 --> 01:44:25,380
well to what I would like to do is I

2020
01:44:21,988 --> 01:44:28,039
still like to do that offset so let's do

2021
01:44:25,380 --> 01:44:30,420
the offset for the center of the screen

2022
01:44:28,039 --> 01:44:46,019
and let's make this a little more

2023
01:44:30,420 --> 01:44:48,139
gradual that so like so so here this way

2024
01:44:46,020 --> 01:44:50,520
I can sort of move this light around

2025
01:44:48,139 --> 01:44:53,340
slowly which is all I really want to do

2026
01:44:50,520 --> 01:44:56,400
right and so now what we should see is

2027
01:44:53,340 --> 01:44:59,760
there's there's the the light again

2028
01:44:56,399 --> 01:45:02,969
that's kind of coming out of the light

2029
01:44:59,760 --> 01:45:05,460
source here's our front slide lighting

2030
01:45:02,969 --> 01:45:08,340
or backside lighting here's our surface

2031
01:45:05,460 --> 01:45:12,149
reflectance and here is our directional

2032
01:45:08,340 --> 01:45:14,699
vectors right so we have everything that

2033
01:45:12,149 --> 01:45:17,309
we wanted to have in place everything is

2034
01:45:14,698 --> 01:45:20,879
now correct and so what we need to build

2035
01:45:17,310 --> 01:45:22,620
next is we need to build the down

2036
01:45:20,880 --> 01:45:24,719
sampler right we need to build the thing

2037
01:45:22,619 --> 01:45:27,689
that takes and builds the like

2038
01:45:24,719 --> 01:45:28,980
progressively down sampled versions now

2039
01:45:27,689 --> 01:45:32,189
we only have ten minutes left it's

2040
01:45:28,979 --> 01:45:34,678
probably too little time to do that but

2041
01:45:32,189 --> 01:45:37,859
since this is just basic down sampling

2042
01:45:34,679 --> 01:45:40,319
we could get started on anyway it's not

2043
01:45:37,859 --> 01:45:43,259
a huge deal so let's just go ahead and

2044
01:45:40,319 --> 01:45:46,519
do that it's the it's the one that goes

2045
01:45:43,260 --> 01:45:50,460
the other direction the back propagator

2046
01:45:46,520 --> 01:45:53,370
where the the most of the smarts are

2047
01:45:50,460 --> 01:45:57,119
going to live so let's take a look at

2048
01:45:53,369 --> 01:46:00,300
the compute what do we call this thing

2049
01:45:57,119 --> 01:46:02,880
compute light transfer

2050
01:46:00,300 --> 01:46:10,619
so this compute light transport here is

2051
01:46:02,880 --> 01:46:12,929
going to be two phases so first we've

2052
01:46:10,619 --> 01:46:15,139
got the upward propagation so this is

2053
01:46:12,929 --> 01:46:15,139
like

2054
01:46:15,869 --> 01:46:19,229
[Applause]

2055
01:46:22,270 --> 01:46:56,980
and this is the downward phase so the

2056
01:46:54,859 --> 01:47:00,349
harebrained scheme begins below this

2057
01:46:56,979 --> 01:47:01,879
we've got two phases the upward phase

2058
01:47:00,350 --> 01:47:03,829
and the downward phase we're going to

2059
01:47:01,880 --> 01:47:05,510
stick it to do in here because we are

2060
01:47:03,829 --> 01:47:08,179
not going to try and do the downward

2061
01:47:05,510 --> 01:47:10,640
phase until next week we will try to

2062
01:47:08,179 --> 01:47:13,010
just sketch out briefly the upward phase

2063
01:47:10,640 --> 01:47:15,020
and you can sort of see what this is

2064
01:47:13,010 --> 01:47:17,090
going to look like so the upward phase

2065
01:47:15,020 --> 01:47:19,040
is basically to read from a larger

2066
01:47:17,090 --> 01:47:21,590
texture map and write to a smaller

2067
01:47:19,039 --> 01:47:25,039
texture map averaged values and that's

2068
01:47:21,590 --> 01:47:26,690
it that's all it's going to do so what

2069
01:47:25,039 --> 01:47:29,359
we're going to try to do here as it goes

2070
01:47:26,689 --> 01:47:31,698
down is we've got these light buffers

2071
01:47:29,359 --> 01:47:33,198
and we know how many there are so what

2072
01:47:31,698 --> 01:47:36,738
we're going to do is we're going to go

2073
01:47:33,198 --> 01:47:40,969
through and we're going to say we have a

2074
01:47:36,738 --> 01:47:43,309
desk light buff index that desk light

2075
01:47:40,969 --> 01:47:44,899
buff index is going to range not from

2076
01:47:43,310 --> 01:47:48,199
zero which is the first one that's

2077
01:47:44,899 --> 01:47:50,089
filled in by the initial fill by the

2078
01:47:48,198 --> 01:47:52,369
initial lighting capture what we're

2079
01:47:50,090 --> 01:47:53,929
going to do is we're going to take one

2080
01:47:52,369 --> 01:47:56,539
is the first we're going to write two

2081
01:47:53,929 --> 01:47:59,000
right we're then going to write it

2082
01:47:56,539 --> 01:48:01,310
successively to each greater one as we

2083
01:47:59,000 --> 01:48:03,890
go that means that the source light buff

2084
01:48:01,310 --> 01:48:05,960
index is always going to be the desk

2085
01:48:03,890 --> 01:48:08,000
light buff index minus one so we're

2086
01:48:05,960 --> 01:48:10,969
going to start on source viewer right to

2087
01:48:08,000 --> 01:48:12,859
desk one source one right to desk two

2088
01:48:10,969 --> 01:48:17,658
source two right so it just kind of goes

2089
01:48:12,859 --> 01:48:19,969
upward as it progressed it and so that's

2090
01:48:17,658 --> 01:48:23,238
how that's going to work and we are

2091
01:48:19,969 --> 01:48:26,179
essentially going to do a again another

2092
01:48:23,238 --> 01:48:28,448
full screen fill style thing where we

2093
01:48:26,179 --> 01:48:32,498
each time fill the entire

2094
01:48:28,448 --> 01:48:34,268
a texture with a new set of sample so if

2095
01:48:32,498 --> 01:48:37,059
you look at what we're doing probably

2096
01:48:34,269 --> 01:48:39,690
the opengl screen fill back and forth

2097
01:48:37,059 --> 01:48:42,849
this is probably fine for our purposes

2098
01:48:39,689 --> 01:48:44,469
actually this is exactly I think what we

2099
01:48:42,849 --> 01:48:47,110
want to do so I'll do open Jill being

2100
01:48:44,469 --> 01:48:51,849
Vince real open Jill and screen Phil

2101
01:48:47,109 --> 01:49:01,328
should do it right so let's go ahead and

2102
01:48:51,849 --> 01:49:02,979
take this so open Jill begins can you

2103
01:49:01,328 --> 01:49:04,179
fill an open Jill and screen felt in

2104
01:49:02,979 --> 01:49:06,010
this case we're going to take frame

2105
01:49:04,179 --> 01:49:07,929
buffer handles here and write to them

2106
01:49:06,010 --> 01:49:10,300
this is going to be the desk buffer

2107
01:49:07,929 --> 01:49:11,708
handle this is going to desk buff and

2108
01:49:10,300 --> 01:49:13,420
that's going to be a light buffer we're

2109
01:49:11,708 --> 01:49:15,099
going to writing everything so it's

2110
01:49:13,420 --> 01:49:16,690
going to be the right all buffer and

2111
01:49:15,099 --> 01:49:18,729
we're going to it's going to be you know

2112
01:49:16,689 --> 01:49:21,308
as big as it was and we're going to

2113
01:49:18,729 --> 01:49:24,130
write to all the pixels right we're then

2114
01:49:21,309 --> 01:49:26,529
going to do a use program begin used

2115
01:49:24,130 --> 01:49:31,708
program and it's going to be a new

2116
01:49:26,529 --> 01:49:36,849
program which is going to be the good up

2117
01:49:31,708 --> 01:49:38,319
multi grid light up so we have a multi

2118
01:49:36,849 --> 01:49:40,420
grid light up programs there's going to

2119
01:49:38,319 --> 01:49:42,130
be a multi grid light down program that

2120
01:49:40,420 --> 01:49:44,590
will do the opposite direction that's

2121
01:49:42,130 --> 01:49:46,889
going to be more complicated and in this

2122
01:49:44,590 --> 01:49:49,599
case we do have to bind some textures

2123
01:49:46,889 --> 01:49:51,429
we're going to be reading from all four

2124
01:49:49,599 --> 01:49:53,860
of these textures actually on the

2125
01:49:51,429 --> 01:49:57,969
previous level so it's going to be kind

2126
01:49:53,859 --> 01:50:01,058
of a audacious nightmare scenario that

2127
01:49:57,969 --> 01:50:03,189
looks something like this it would be

2128
01:50:01,059 --> 01:50:06,849
nice for us to probably stop doing this

2129
01:50:03,189 --> 01:50:09,339
crap because we you know there already

2130
01:50:06,849 --> 01:50:11,038
are in extended OpenGL ways of binding

2131
01:50:09,340 --> 01:50:18,340
textures directly to a slot

2132
01:50:11,038 --> 01:50:21,279
unfortunately we aren't using we aren't

2133
01:50:18,340 --> 01:50:22,989
we aren't doing that so let's just have

2134
01:50:21,279 --> 01:50:28,958
a bind texture call here which is like

2135
01:50:22,988 --> 01:50:30,578
you know slot index I guess we would

2136
01:50:28,958 --> 01:50:32,729
meet yet you know it Adam

2137
01:50:30,578 --> 01:50:35,349
I don't even wanna be with it right now

2138
01:50:32,729 --> 01:50:36,879
so anyway we could have a call to a

2139
01:50:35,349 --> 01:50:40,270
single call that has all three of these

2140
01:50:36,880 --> 01:50:48,159
in it let's let's just do it let's just

2141
01:50:40,270 --> 01:50:55,389
good I'm just getting tired of it so all

2142
01:50:48,158 --> 01:51:01,929
this would be is just a gon M slot GOP

2143
01:50:55,389 --> 01:51:11,590
num type and then gon handle so it's

2144
01:51:01,929 --> 01:51:15,460
just like slot type handle uh and then

2145
01:51:11,590 --> 01:51:31,869
so yeah what I would say is we just be

2146
01:51:15,460 --> 01:51:36,359
able to call open Joe a line text and in

2147
01:51:31,868 --> 01:51:39,539
this case we want to do the front text

2148
01:51:36,359 --> 01:51:39,539
[Applause]

2149
01:51:42,179 --> 01:51:48,130
so texted one two three

2150
01:51:45,789 --> 01:51:50,170
none of these are multi sample buffers

2151
01:51:48,130 --> 01:51:57,359
so actually we can just use do texture

2152
01:51:50,170 --> 01:51:57,359
2d and it's going to be front back

2153
01:51:59,550 --> 01:52:07,510
surface color MP type right so it's

2154
01:52:06,399 --> 01:52:10,299
gonna look something like this we bind

2155
01:52:07,510 --> 01:52:11,800
you to the textures and off we go

2156
01:52:10,300 --> 01:52:14,679
we then want something that's going to

2157
01:52:11,800 --> 01:52:16,210
clear the textures because we have this

2158
01:52:14,679 --> 01:52:19,210
sort of problem where the active texture

2159
01:52:16,210 --> 01:52:21,719
handle kind of gets set Wankel e so at

2160
01:52:19,210 --> 01:52:27,489
the end we want to do something like a

2161
01:52:21,719 --> 01:52:33,239
geo active texture you know GL texture

2162
01:52:27,488 --> 01:52:35,759
zero something like that

2163
01:52:33,239 --> 01:52:40,170
so that's it that's the entirety is of

2164
01:52:35,760 --> 01:52:42,300
that sort of like binding nonsense and

2165
01:52:40,170 --> 01:52:48,810
really that's most of what we need there

2166
01:52:42,300 --> 01:52:53,340
I need to go ahead and flush this out we

2167
01:52:48,810 --> 01:52:59,420
need the source and just like buffers

2168
01:52:53,340 --> 01:53:04,020
here so open gel light buffer the plus

2169
01:52:59,420 --> 01:53:07,829
source quick buff index and OpenGL tight

2170
01:53:04,020 --> 01:53:12,590
buffers plus just like index so those

2171
01:53:07,829 --> 01:53:20,159
are the two we have their death buff

2172
01:53:12,590 --> 01:53:20,850
should just be desk and I think that's

2173
01:53:20,159 --> 01:53:26,010
everything

2174
01:53:20,850 --> 01:53:28,530
so really at this point we need boots we

2175
01:53:26,010 --> 01:53:30,720
just need the program and then we're

2176
01:53:28,529 --> 01:53:32,009
done I'm going to go a little over time

2177
01:53:30,720 --> 01:53:34,050
because I'd like to just go ahead and

2178
01:53:32,010 --> 01:53:35,550
get that program sketched in and then

2179
01:53:34,050 --> 01:53:36,930
that will set this up next week to be

2180
01:53:35,550 --> 01:53:39,060
able to do the whole algorithm because

2181
01:53:36,930 --> 01:53:42,720
we basically could just copy this

2182
01:53:39,060 --> 01:53:46,200
routine here change the textures around

2183
01:53:42,720 --> 01:53:50,490
a little bit and be ready to start

2184
01:53:46,199 --> 01:53:55,769
fussing with our stuff right okay so

2185
01:53:50,489 --> 01:53:57,119
this is going to be kind of like not

2186
01:53:55,770 --> 01:53:58,950
sure which one this is really going to

2187
01:53:57,119 --> 01:54:03,170
be the most like I guess it's going to

2188
01:53:58,949 --> 01:54:08,189
probably the most like this one honestly

2189
01:54:03,170 --> 01:54:09,779
so compile compile final stretch we're

2190
01:54:08,189 --> 01:54:13,279
going to need some parameters here to

2191
01:54:09,779 --> 01:54:17,279
help us out but we can add those in so

2192
01:54:13,279 --> 01:54:26,179
let's make this the compiled multi light

2193
01:54:17,279 --> 01:54:32,689
up here's one as I call it multiply

2194
01:54:26,180 --> 01:54:32,690
multi grid light up oops

2195
01:54:32,890 --> 01:54:36,619
[Applause]

2196
01:54:39,779 --> 01:54:47,529
so yeah reading right sRGB is not going

2197
01:54:45,069 --> 01:54:49,118
to be on the table yet I don't think

2198
01:54:47,529 --> 01:54:50,710
because we are just going to have

2199
01:54:49,118 --> 01:54:52,149
everything in float for a while later on

2200
01:54:50,710 --> 01:54:54,460
we might have to work out whether we

2201
01:54:52,149 --> 01:54:55,779
need s RGB encoding for some things to

2202
01:54:54,460 --> 01:54:57,578
make it more efficient right now I don't

2203
01:54:55,779 --> 01:55:00,038
want that at all

2204
01:54:57,578 --> 01:55:01,899
in theory there should be no parameters

2205
01:55:00,038 --> 01:55:05,228
to this whatsoever

2206
01:55:01,899 --> 01:55:07,899
I don't think unless we do want to pass

2207
01:55:05,229 --> 01:55:09,880
using these it probably would make

2208
01:55:07,899 --> 01:55:13,348
things easier if we did because then we

2209
01:55:09,880 --> 01:55:13,349
don't need to use the frag coordinates

2210
01:55:19,590 --> 01:55:22,960
hmm

2211
01:55:20,998 --> 01:55:25,059
see the thing is I think we're going to

2212
01:55:22,960 --> 01:55:25,929
want to do our own sampling and the fact

2213
01:55:25,059 --> 01:55:29,829
that we're going to want to do our own

2214
01:55:25,929 --> 01:55:31,960
sampling makes it a little bit harder so

2215
01:55:29,828 --> 01:55:36,389
we might just want to stay out of this

2216
01:55:31,960 --> 01:55:42,819
business altogether let's see if we can

2217
01:55:36,389 --> 01:55:44,828
the problem that worries me is is what

2218
01:55:42,819 --> 01:55:48,578
we're going to do when we get down to

2219
01:55:44,828 --> 01:55:49,719
having too few text textures too gives

2220
01:55:48,578 --> 01:55:55,569
you texels

2221
01:55:49,719 --> 01:55:57,248
to do two to one so that that part

2222
01:55:55,569 --> 01:55:59,738
concerns me because if we start out at

2223
01:55:57,248 --> 01:56:01,809
1920 by 1080 eventually we get down to a

2224
01:55:59,738 --> 01:56:02,678
certain resolution there's nothing left

2225
01:56:01,809 --> 01:56:05,679
to do

2226
01:56:02,679 --> 01:56:07,690
two to one sampling on and we would end

2227
01:56:05,679 --> 01:56:11,408
up with artifacts there as as the the

2228
01:56:07,689 --> 01:56:15,848
two-to-one resolution drop bleeds in so

2229
01:56:11,408 --> 01:56:20,138
at some level we kind of want that UV to

2230
01:56:15,849 --> 01:56:21,969
work so so you know I guess I'll just do

2231
01:56:20,139 --> 01:56:24,699
it I'll just leave the UVs in there

2232
01:56:21,969 --> 01:56:26,380
we'll see if that how that does we're

2233
01:56:24,698 --> 01:56:31,089
probably going to have to be a little

2234
01:56:26,380 --> 01:56:32,229
bit careful as we go all right so in

2235
01:56:31,090 --> 01:56:34,869
this case we've got

2236
01:56:32,229 --> 01:56:38,159
sources and depths that we've got source

2237
01:56:34,868 --> 01:56:38,158
emit tech

2238
01:56:39,059 --> 01:56:44,099
front emit text we've got back

2239
01:56:46,329 --> 01:56:55,420
[Applause]

2240
01:56:49,050 --> 01:57:00,250
we've got surface colored because you

2241
01:56:55,420 --> 01:57:05,889
don't need tech on those and then source

2242
01:57:00,250 --> 01:57:07,029
okay so these are coming in and we need

2243
01:57:05,889 --> 01:57:09,130
to do the same thing we're doing before

2244
01:57:07,029 --> 01:57:12,868
which is writing to GL frag color so

2245
01:57:09,130 --> 01:57:14,949
that means this is out of the question I

2246
01:57:12,868 --> 01:57:17,078
guess we do want tech on these because

2247
01:57:14,948 --> 01:57:19,479
I'm going to sample them right away so

2248
01:57:17,078 --> 01:57:22,238
maybe we just say text and then we put

2249
01:57:19,479 --> 01:57:25,178
in here that we're going to sample from

2250
01:57:22,238 --> 01:57:30,848
them so we just say oops I guess maybe

2251
01:57:25,179 --> 01:57:40,750
I'll do it this way so we here will say

2252
01:57:30,849 --> 01:57:42,429
source front emit and each of these is

2253
01:57:40,750 --> 01:57:45,340
just again going to it's just going to

2254
01:57:42,429 --> 01:57:48,788
down sample in in the future we'll

2255
01:57:45,340 --> 01:57:52,328
probably get more fancies with how we're

2256
01:57:48,788 --> 01:57:53,738
doing these things but for right now

2257
01:57:52,328 --> 01:57:56,308
we're going to start with a simplest

2258
01:57:53,738 --> 01:57:56,308
possible thing

2259
01:57:57,850 --> 01:58:08,449
[Applause]

2260
01:58:10,399 --> 01:58:15,959
so that will sample from the textures it

2261
01:58:13,319 --> 01:58:19,469
will use the proper the proper bilinear

2262
01:58:15,958 --> 01:58:22,198
blend to do the sampling which i think

2263
01:58:19,469 --> 01:58:23,998
is probably roughly roughly what we want

2264
01:58:22,198 --> 01:58:26,458
but again we're going to have to play

2265
01:58:23,998 --> 01:58:29,128
around with it and it will probably want

2266
01:58:26,458 --> 01:58:30,809
to increase the quality of it so we'll

2267
01:58:29,128 --> 01:58:34,229
just let this do its thing and then

2268
01:58:30,809 --> 01:58:36,239
we'll write to our GL fraud data the way

2269
01:58:34,229 --> 01:58:37,289
that we were writing to it before so

2270
01:58:36,238 --> 01:58:38,688
what I'm going to do there is I'm

2271
01:58:37,288 --> 01:58:48,898
literally just going to cut and paste

2272
01:58:38,689 --> 01:58:51,209
this exact thing and what we're going to

2273
01:58:48,899 --> 01:58:58,949
do here is we're just going to literally

2274
01:58:51,208 --> 01:59:16,800
assign the desk to the source and that's

2275
01:58:58,948 --> 01:59:20,509
all we're going to do for today I don't

2276
01:59:16,800 --> 01:59:23,389
know why we stuck Tec on the end of this

2277
01:59:20,510 --> 01:59:27,179
[Applause]

2278
01:59:23,389 --> 01:59:29,578
ok so now we need to actually make these

2279
01:59:27,179 --> 01:59:31,439
programs and these programs are going to

2280
01:59:29,578 --> 01:59:33,478
be a little more complicated in terms of

2281
01:59:31,439 --> 01:59:34,918
what they actually look at then say our

2282
01:59:33,479 --> 01:59:39,599
fakes to you buddy program which didn't

2283
01:59:34,918 --> 01:59:43,109
really have to do anything so we've got

2284
01:59:39,599 --> 01:59:44,519
two of them both light red light up

2285
01:59:43,109 --> 01:59:46,738
program that's what we're gonna do now

2286
01:59:44,519 --> 01:59:48,208
multi grid light down programs that's

2287
01:59:46,738 --> 01:59:52,549
the one we're not going to look at

2288
01:59:48,208 --> 01:59:55,559
moment the multi period light up program

2289
01:59:52,550 --> 02:00:01,409
it's really just textures so it's going

2290
01:59:55,559 --> 02:00:05,689
to be like this sort of thing and so

2291
02:00:01,408 --> 02:00:08,688
let's go ahead and take a look at these

2292
02:00:05,689 --> 02:00:08,689
goods

2293
02:00:16,930 --> 02:00:22,909
so the multigrid light up program is

2294
02:00:20,539 --> 02:00:24,500
going to need to specify all of these it

2295
02:00:22,909 --> 02:00:26,479
doesn't really need anything else this

2296
02:00:24,500 --> 02:00:28,300
the frag UV that will come through but I

2297
02:00:26,479 --> 02:00:32,329
believe that's already handled in common

2298
02:00:28,300 --> 02:00:34,070
so it doesn't really need that at all so

2299
02:00:32,329 --> 02:00:35,899
I think all that we need to do is that

2300
02:00:34,069 --> 02:00:39,639
and then we should be able to just do

2301
02:00:35,899 --> 02:00:42,469
our successive lighting from there I'm

2302
02:00:39,640 --> 02:00:45,920
pretty sure that's it so let's go ahead

2303
02:00:42,470 --> 02:00:50,570
and after we do come the multigrid

2304
02:00:45,920 --> 02:00:54,409
compiled let's set those samplers and so

2305
02:00:50,569 --> 02:00:57,019
we basically want this code to happen a

2306
02:00:54,409 --> 02:01:21,829
couple times here and we want it for

2307
02:00:57,020 --> 02:01:25,220
each of these salsa gentlemen so yeah

2308
02:01:21,829 --> 02:01:28,029
each of these source front emit text

2309
02:01:25,220 --> 02:01:32,750
[Applause]

2310
02:01:28,029 --> 02:01:39,139
source vacuum it tags source surface

2311
02:01:32,750 --> 02:01:42,529
color and source and key text that

2312
02:01:39,140 --> 02:01:45,230
should give us the full compile now we

2313
02:01:42,529 --> 02:01:47,179
just need to actually bind it in there

2314
02:01:45,229 --> 02:01:57,279
and I'll put both of them in there for

2315
02:01:47,180 --> 02:01:57,280
now we'll play grid lights up program

2316
02:01:58,989 --> 02:02:06,380
like red light down so those are both in

2317
02:02:04,340 --> 02:02:10,000
there now and we need to actually call

2318
02:02:06,380 --> 02:02:14,170
them so when we have a settings change

2319
02:02:10,000 --> 02:02:14,170
they will get recompiled

2320
02:02:14,670 --> 02:02:18,729
[Applause]

2321
02:02:22,059 --> 02:02:46,189
and that will happened right here and I

2322
02:02:43,279 --> 02:02:48,550
think see use program begin multi good

2323
02:02:46,189 --> 02:02:52,070
let up yep that one needs to be fixed

2324
02:02:48,550 --> 02:02:55,029
and use for commands is usually just

2325
02:02:52,069 --> 02:03:02,058
goes the common one right

2326
02:02:55,029 --> 02:03:03,590
okay so compile multi grid light up I'm

2327
02:03:02,059 --> 02:03:15,010
going to go ahead and put compiled multi

2328
02:03:03,590 --> 02:03:17,689
grid light down in here as well and

2329
02:03:15,010 --> 02:03:19,699
let's see we thought use program begins

2330
02:03:17,689 --> 02:03:22,519
here where we're going to use the multi

2331
02:03:19,698 --> 02:03:24,708
grid light up we need to then actually

2332
02:03:22,519 --> 02:03:28,159
have that do the binding that it should

2333
02:03:24,708 --> 02:03:40,819
do and in order to do that let's see

2334
02:03:28,158 --> 02:03:47,238
where that's at it will not eat any

2335
02:03:40,819 --> 02:03:48,828
rendering setup and it should just find

2336
02:03:47,238 --> 02:03:54,948
these in order so it should just the

2337
02:03:48,828 --> 02:03:59,958
source front limit source back sort of

2338
02:03:54,948 --> 02:04:02,839
surface source NP so all it really has

2339
02:03:59,958 --> 02:04:06,260
to do is bind those samplers that's

2340
02:04:02,840 --> 02:04:08,958
that's all it does and then it should be

2341
02:04:06,260 --> 02:04:10,458
able to run the program now we probably

2342
02:04:08,958 --> 02:04:11,868
have some errors in there but like I

2343
02:04:10,458 --> 02:04:14,630
said I'd rather just finish this up for

2344
02:04:11,868 --> 02:04:18,228
now that's not a very clear error

2345
02:04:14,630 --> 02:04:20,269
message to be completely honest with you

2346
02:04:18,229 --> 02:04:24,650
did you care you know did you want to

2347
02:04:20,269 --> 02:04:27,010
tell me where you found the error by a

2348
02:04:24,649 --> 02:04:27,009
chance

2349
02:04:27,899 --> 02:04:35,460
I guess in this case maybe we need to

2350
02:04:29,640 --> 02:04:38,100
get the info out of this thing first so

2351
02:04:35,460 --> 02:04:41,880
let's see okay fine so step the next

2352
02:04:38,100 --> 02:04:48,150
statement can you give me some more info

2353
02:04:41,880 --> 02:04:54,829
here leave vertex errors fragments

2354
02:04:48,149 --> 02:04:58,469
errors program errors okay

2355
02:04:54,829 --> 02:05:01,170
so let's see a vertex shader has no

2356
02:04:58,469 --> 02:05:04,500
problems fragment shader had a bunch of

2357
02:05:01,170 --> 02:05:07,079
problems so let's take a look at this

2358
02:05:04,500 --> 02:05:09,060
probably just typos since we're not

2359
02:05:07,079 --> 02:05:13,140
really doing anything in the shader yet

2360
02:05:09,060 --> 02:05:15,830
it's just a stand-in very very simple

2361
02:05:13,140 --> 02:05:21,420
okay

2362
02:05:15,829 --> 02:05:23,460
so first of all these need to be v3 they

2363
02:05:21,420 --> 02:05:25,980
probably also need to be RGB here

2364
02:05:23,460 --> 02:05:30,510
because by default it'll sample of bogus

2365
02:05:25,979 --> 02:05:36,359
alpha so let's see float to highest

2366
02:05:30,510 --> 02:05:39,719
three components that may be it let's

2367
02:05:36,359 --> 02:05:44,549
let's see what happens under validations

2368
02:05:39,719 --> 02:05:48,000
here okay

2369
02:05:44,550 --> 02:05:52,380
so now we've got here we're looking at

2370
02:05:48,000 --> 02:05:55,219
texture cept that that initial frame

2371
02:05:52,380 --> 02:05:58,440
above zero if I look at the next one up

2372
02:05:55,219 --> 02:06:00,448
I'm not seeing anything so it doesn't

2373
02:05:58,439 --> 02:06:04,829
look like we're properly sampling from

2374
02:06:00,448 --> 02:06:06,948
these quite yet and part of that also we

2375
02:06:04,829 --> 02:06:10,130
have to make sure that we're not using

2376
02:06:06,948 --> 02:06:12,329
any miss mapping on those but otherwise

2377
02:06:10,130 --> 02:06:15,480
we might just want to leave this for

2378
02:06:12,329 --> 02:06:17,010
next week I'll do a quick check to make

2379
02:06:15,479 --> 02:06:19,649
sure that there's nothing obviously

2380
02:06:17,010 --> 02:06:21,539
broken but that should basically be it I

2381
02:06:19,649 --> 02:06:23,969
also don't know why this is set to

2382
02:06:21,539 --> 02:06:27,329
version 130 I think since we need

2383
02:06:23,969 --> 02:06:30,270
version 150 on stuff we should probably

2384
02:06:27,329 --> 02:06:37,279
just change to version 150 everywhere

2385
02:06:30,270 --> 02:06:40,500
but we haven't done that yet so you know

2386
02:06:37,279 --> 02:06:41,759
we'll see all right so anyway let's take

2387
02:06:40,500 --> 02:06:43,439
a quick look and just make sure

2388
02:06:41,760 --> 02:06:45,360
we know what's going on here we're

2389
02:06:43,439 --> 02:06:48,238
passing the fragment you view stuff in

2390
02:06:45,359 --> 02:06:49,019
here and we're sampling from that as we

2391
02:06:48,238 --> 02:06:50,909
go

2392
02:06:49,020 --> 02:06:53,580
we're pulling those out we're just

2393
02:06:50,909 --> 02:06:57,840
writing out exactly what we sample into

2394
02:06:53,579 --> 02:07:01,019
the output that's about all that's going

2395
02:06:57,840 --> 02:07:03,960
on again nothing particularly fancy so

2396
02:07:01,020 --> 02:07:06,390
we want to make sure I guess that we're

2397
02:07:03,960 --> 02:07:11,310
writing to the correct thing and reading

2398
02:07:06,390 --> 02:07:18,660
from the correct thing ah but that's

2399
02:07:11,310 --> 02:07:20,910
about it so here's the loop we have the

2400
02:07:18,659 --> 02:07:23,399
destination light buffer index as one

2401
02:07:20,909 --> 02:07:25,949
and reading from the source light buff

2402
02:07:23,399 --> 02:07:29,449
index of zero you can see us pulling out

2403
02:07:25,949 --> 02:07:31,979
the source and desk here so the source

2404
02:07:29,449 --> 02:07:35,579
we begin to screen filled to the

2405
02:07:31,979 --> 02:07:38,699
destination we're writing everything so

2406
02:07:35,579 --> 02:07:40,170
we begin right to the destination we do

2407
02:07:38,699 --> 02:07:43,500
use for going to begin on the mud-filled

2408
02:07:40,170 --> 02:07:44,670
light up we bind textures to zero one

2409
02:07:43,500 --> 02:07:47,340
two and three

2410
02:07:44,670 --> 02:07:50,489
with the front emit vacuum its source

2411
02:07:47,340 --> 02:07:55,409
color and NP from the source which is

2412
02:07:50,488 --> 02:08:01,319
what we want we then oh hi we then don't

2413
02:07:55,409 --> 02:08:05,970
draw anything so we did have at least

2414
02:08:01,319 --> 02:08:07,170
one obvious error say the least but we

2415
02:08:05,970 --> 02:08:09,570
still don't see anything else green so

2416
02:08:07,170 --> 02:08:12,210
that was not our only error right but

2417
02:08:09,569 --> 02:08:16,199
not trying anything obviously it's a

2418
02:08:12,210 --> 02:08:19,199
problem so there's that so let's again

2419
02:08:16,199 --> 02:08:20,309
just quick check because you know just

2420
02:08:19,199 --> 02:08:22,349
kind of leave things in a reasonable

2421
02:08:20,310 --> 02:08:24,600
spot let's make sure we're actually able

2422
02:08:22,350 --> 02:08:26,579
to write so what I want to do here is

2423
02:08:24,600 --> 02:08:28,890
again set these values to something

2424
02:08:26,579 --> 02:08:30,390
known so what I'm going to do is I'm

2425
02:08:28,890 --> 02:08:33,720
going to overwrite the front emitter

2426
02:08:30,390 --> 02:08:35,250
with pure red so what I should see is I

2427
02:08:33,720 --> 02:08:37,350
should see the whole screen filled red

2428
02:08:35,250 --> 02:08:41,159
but when I go to switch to the next

2429
02:08:37,350 --> 02:08:43,230
texture and I don't so what that means

2430
02:08:41,159 --> 02:08:44,909
is it's not our texture sampling we

2431
02:08:43,229 --> 02:08:47,309
actually just aren't properly writing

2432
02:08:44,909 --> 02:08:49,229
anything out right now because that

2433
02:08:47,310 --> 02:08:50,880
front emitter should get written out to

2434
02:08:49,229 --> 02:08:51,839
here and at the moment at least it

2435
02:08:50,880 --> 02:08:55,920
doesn't appear to be

2436
02:08:51,840 --> 02:08:58,679
out at all so we've got a problem with

2437
02:08:55,920 --> 02:09:01,170
just writing in general not a problem

2438
02:08:58,679 --> 02:09:03,179
with our actual shader so let me see if

2439
02:09:01,170 --> 02:09:05,520
I can track down what that actually is

2440
02:09:03,179 --> 02:09:08,849
we've got compiled multi grid light up

2441
02:09:05,520 --> 02:09:10,830
and multi grid like down both being

2442
02:09:08,849 --> 02:09:14,270
called presumably we've actually got

2443
02:09:10,829 --> 02:09:20,819
that cute like transport oops

2444
02:09:14,270 --> 02:09:22,800
cute like transport so presumably we're

2445
02:09:20,819 --> 02:09:24,238
actually okay here we in presumably

2446
02:09:22,800 --> 02:09:25,380
we're targeting this right all frame

2447
02:09:24,238 --> 02:09:28,379
buffer is the same thing that we're

2448
02:09:25,380 --> 02:09:31,880
doing in our fake sea lighting so in

2449
02:09:28,380 --> 02:09:33,810
theory anyway in our fake seed lighting

2450
02:09:31,880 --> 02:09:35,250
because we were able to write to

2451
02:09:33,810 --> 02:09:38,039
everything there we should also be able

2452
02:09:35,250 --> 02:09:40,590
to write to everything here right that's

2453
02:09:38,039 --> 02:09:42,599
the you know that is the only thing that

2454
02:09:40,590 --> 02:09:42,929
would really make any sense to say the

2455
02:09:42,599 --> 02:09:46,520
least

2456
02:09:42,929 --> 02:09:49,230
so something bizarre is going on there

2457
02:09:46,520 --> 02:09:52,889
where for some reason we are unable to

2458
02:09:49,229 --> 02:09:55,979
write to our source here even though

2459
02:09:52,889 --> 02:10:02,840
we're using substantively the same exact

2460
02:09:55,979 --> 02:10:06,089
stuff so I don't know what is wrong in

2461
02:10:02,840 --> 02:10:08,060
this case what I would like to try and

2462
02:10:06,090 --> 02:10:10,949
again this will be a little bit of a

2463
02:10:08,060 --> 02:10:18,360
oddity is what I would like to try here

2464
02:10:10,948 --> 02:10:20,729
is what if I actually use the fake food

2465
02:10:18,359 --> 02:10:23,279
lighting on every level I just want to

2466
02:10:20,729 --> 02:10:25,829
see what happens there it's going to be

2467
02:10:23,279 --> 02:10:27,448
a little bit wrong it'll it'll put it'll

2468
02:10:25,829 --> 02:10:29,519
move the thing up to the upper corner at

2469
02:10:27,448 --> 02:10:32,729
the next step because the coordinates

2470
02:10:29,520 --> 02:10:34,889
will be wrong but that's okay I think so

2471
02:10:32,729 --> 02:10:37,709
let's go ahead and and see if we can do

2472
02:10:34,889 --> 02:10:42,329
that I'm just curious what happens here

2473
02:10:37,710 --> 02:10:45,520
we go compute like transport oops

2474
02:10:42,329 --> 02:10:45,519
[Applause]

2475
02:10:47,390 --> 02:10:52,969
so there's a plus and you can see that

2476
02:10:50,390 --> 02:10:56,560
we're able to write to it so there's

2477
02:10:52,969 --> 02:10:56,560
just something wrong with our program

2478
02:10:56,710 --> 02:11:12,140
that we're not understanding in this

2479
02:10:58,969 --> 02:11:13,670
case and I don't know what it is so if

2480
02:11:12,140 --> 02:11:17,480
something's busted with the multigrid

2481
02:11:13,670 --> 02:11:19,190
light-up program where it's not actually

2482
02:11:17,479 --> 02:11:21,439
covering the pixels properly or

2483
02:11:19,189 --> 02:11:27,408
something right we don't actually know

2484
02:11:21,439 --> 02:11:29,089
what that something could be yeah at the

2485
02:11:27,408 --> 02:11:31,759
moment but we know we're targeting the

2486
02:11:29,090 --> 02:11:33,679
right frame buffer here so we just don't

2487
02:11:31,760 --> 02:11:39,170
know why we're getting into a situation

2488
02:11:33,679 --> 02:11:41,179
where we can't write to the textures

2489
02:11:39,170 --> 02:11:44,020
we're trying to write to not using this

2490
02:11:41,179 --> 02:11:46,969
program because I like I said I've set

2491
02:11:44,020 --> 02:11:50,120
or at least I thought I set in the

2492
02:11:46,969 --> 02:11:51,739
fragment code here I thought I set the

2493
02:11:50,119 --> 02:11:55,279
front emitter value so that should have

2494
02:11:51,738 --> 02:11:59,419
overwritten frag data zero with a clear

2495
02:11:55,279 --> 02:12:03,319
read image let me go ahead in this case

2496
02:11:59,420 --> 02:12:04,699
and try setting everything and we can

2497
02:12:03,319 --> 02:12:07,759
try to figure out why we're not seeing

2498
02:12:04,698 --> 02:12:10,158
anything because that doesn't make a

2499
02:12:07,760 --> 02:12:20,119
whole lot of sense to me so that means

2500
02:12:10,158 --> 02:12:21,859
we've got a stupid bug somewhere so

2501
02:12:20,119 --> 02:12:25,519
that's like no pixels are getting filled

2502
02:12:21,859 --> 02:12:30,339
whatsoever why aren't any pixels getting

2503
02:12:25,520 --> 02:12:30,340
filled what is the bug here

2504
02:12:33,488 --> 02:12:41,738
I oh you know what probably because I

2505
02:12:38,590 --> 02:12:44,800
deleted the input position so it was

2506
02:12:41,738 --> 02:12:46,839
outputting garbage that's kind of a

2507
02:12:44,800 --> 02:12:49,360
mistake you know what I'm saying

2508
02:12:46,840 --> 02:12:54,039
not not great not not really very good

2509
02:12:49,359 --> 02:12:55,618
let's try that one more time there we go

2510
02:12:54,039 --> 02:12:57,969
[Applause]

2511
02:12:55,618 --> 02:13:01,149
salary was being targeted properly all

2512
02:12:57,969 --> 02:13:03,219
right a dumb typo nicely done

2513
02:13:01,149 --> 02:13:04,808
so now let's eliminate these and

2514
02:13:03,219 --> 02:13:06,300
hopefully now we're in a position where

2515
02:13:04,809 --> 02:13:08,949
at least we're ready for next week

2516
02:13:06,300 --> 02:13:12,010
to sort of work on that filtering so

2517
02:13:08,948 --> 02:13:13,899
there we go okay so that's perfect so

2518
02:13:12,010 --> 02:13:16,360
you can see as we go up in resolution

2519
02:13:13,899 --> 02:13:20,198
we're doing exactly what we expect to do

2520
02:13:16,359 --> 02:13:22,988
now which is letting that lighting do

2521
02:13:20,198 --> 02:13:25,408
what it wants to do right it's it's

2522
02:13:22,988 --> 02:13:32,768
getting lower and lower res each time up

2523
02:13:25,408 --> 02:13:34,899
same is true for each of these not sure

2524
02:13:32,769 --> 02:13:38,230
why it looks like we're getting read in

2525
02:13:34,899 --> 02:13:43,748
both cases there what's going on with

2526
02:13:38,229 --> 02:13:45,609
that source back image so it's back your

2527
02:13:43,748 --> 02:13:52,349
mid text runs a quick test surface color

2528
02:13:45,609 --> 02:13:52,348
fried UV do we bind something wrong

2529
02:13:59,300 --> 02:14:14,050
does it look like it so let's just see

2530
02:14:10,909 --> 02:14:17,809
what happens here so here I am on the

2531
02:14:14,050 --> 02:14:20,600
texture 1 or texture 0 and you can see

2532
02:14:17,810 --> 02:14:24,980
that that looks correct Here I am on

2533
02:14:20,600 --> 02:14:31,480
let's say texture 3 and that also looks

2534
02:14:24,979 --> 02:14:35,179
correct right Here I am on texture -

2535
02:14:31,479 --> 02:14:39,529
that looks correct Here I am on texture

2536
02:14:35,180 --> 02:14:45,470
1 and that is wrong it looks like we're

2537
02:14:39,529 --> 02:14:49,039
writing out when we write to the back

2538
02:14:45,470 --> 02:14:50,630
emitter we're actually writing out the

2539
02:14:49,039 --> 02:14:53,600
wrong thing now that could just because

2540
02:14:50,630 --> 02:14:56,529
we're sampling from it incorrectly like

2541
02:14:53,600 --> 02:14:59,360
source vacuum it somehow is getting

2542
02:14:56,529 --> 02:15:00,800
something else in it so let's just

2543
02:14:59,359 --> 02:15:02,899
double check all those so that's I think

2544
02:15:00,800 --> 02:15:05,810
the only problem so far source front

2545
02:15:02,899 --> 02:15:07,939
emit source front emit source vacuum it

2546
02:15:05,810 --> 02:15:10,520
right so sort least these two look

2547
02:15:07,939 --> 02:15:16,159
correct source front source front source

2548
02:15:10,520 --> 02:15:19,700
back source back pentacles front back

2549
02:15:16,159 --> 02:15:25,639
equals back flag data zero is front back

2550
02:15:19,699 --> 02:15:27,529
data one is back so I seen nothing weird

2551
02:15:25,640 --> 02:15:38,840
there and source front admit Tech and

2552
02:15:27,529 --> 02:15:45,199
source document X in both cases I both

2553
02:15:38,840 --> 02:15:48,289
look ok as well right that all looks

2554
02:15:45,199 --> 02:15:50,800
pretty correct to me so then when we do

2555
02:15:48,289 --> 02:15:50,800
the bind

2556
02:15:56,149 --> 02:16:08,098
for a multigrid light up we do zero is

2557
02:16:02,340 --> 02:16:20,610
the front emit tech and that presumably

2558
02:16:08,099 --> 02:16:36,689
is how we said they should be right 0 1

2559
02:16:20,609 --> 02:16:46,799
2 3 0 1 2 &amp; 3 I don't see how we're

2560
02:16:36,689 --> 02:16:58,439
getting that problem B does anyone else

2561
02:16:46,799 --> 02:17:01,129
see however getting it that seems a

2562
02:16:58,439 --> 02:17:01,130
little bit weird

2563
02:17:02,898 --> 02:17:07,289
additional semicolon of G will get you

2564
02:17:04,859 --> 02:17:10,340
from a local source vacuum hit text in

2565
02:17:07,290 --> 02:17:10,340
compiled shader

2566
02:17:18,909 --> 02:17:26,239
where's the additional semicolon ah

2567
02:17:22,870 --> 02:17:28,750
thank you stream you guys have better

2568
02:17:26,239 --> 02:17:30,379
eyes than I do

2569
02:17:28,750 --> 02:17:39,260
there we go

2570
02:17:30,379 --> 02:17:41,319
so that's all we need good - good all

2571
02:17:39,260 --> 02:17:43,700
right so now we have basic up sampling

2572
02:17:41,319 --> 02:17:45,079
that setup same thing it's actually down

2573
02:17:43,700 --> 02:17:51,740
sampling but we have the basic up

2574
02:17:45,079 --> 02:17:53,058
pyramid working so I I guess that's

2575
02:17:51,739 --> 02:17:56,148
about it

2576
02:17:53,058 --> 02:18:00,670
so I'll go to a brief Q&amp;A now though

2577
02:17:56,148 --> 02:18:00,670
we're not really done the things so

2578
02:18:15,250 --> 02:18:20,809
so any questions on what we're doing we

2579
02:18:18,739 --> 02:18:23,059
said I slowed up well for next weekend I

2580
02:18:20,809 --> 02:18:25,968
think because now we've gotten sort of

2581
02:18:23,059 --> 02:18:27,649
the dredge work out of that and it

2582
02:18:25,968 --> 02:18:29,149
should be relatively straightforward to

2583
02:18:27,649 --> 02:18:32,619
now start spreading but it's going to be

2584
02:18:29,149 --> 02:18:37,670
a hard road to travel because presumably

2585
02:18:32,620 --> 02:18:39,560
when I actually try to implement the

2586
02:18:37,670 --> 02:18:40,819
lighting it's going to be a huge kind of

2587
02:18:39,559 --> 02:18:43,968
like thing like we did when we were

2588
02:18:40,819 --> 02:18:45,529
trying to get the depth stuff working

2589
02:18:43,968 --> 02:18:47,299
well and we eventually came for the best

2590
02:18:45,530 --> 02:18:48,590
feeling and it worked really well but it

2591
02:18:47,299 --> 02:18:50,209
takes some experimentation to get there

2592
02:18:48,590 --> 02:18:51,409
so if this lighting does work in the end

2593
02:18:50,209 --> 02:18:54,049
it's definitely gonna take a bunch of

2594
02:18:51,409 --> 02:18:55,280
experimentation to get there it's

2595
02:18:54,049 --> 02:18:57,849
probably not going to be the very first

2596
02:18:55,280 --> 02:18:57,850
thing we tried

2597
02:19:14,158 --> 02:19:18,609
frosty ninja is this going to be pulled

2598
02:19:16,388 --> 02:19:23,408
out of the final ship to put pull aside

2599
02:19:18,609 --> 02:19:25,658
as DLC content to charge for um yeah we

2600
02:19:23,408 --> 02:19:28,179
need we need a handmade hero season pass

2601
02:19:25,658 --> 02:19:30,668
and you if you don't buy a season pass

2602
02:19:28,179 --> 02:19:32,349
you're not going to get the debug you're

2603
02:19:30,668 --> 02:19:35,049
not gonna get the debug view man like

2604
02:19:32,349 --> 02:19:36,818
that's the debug view is like DLC you've

2605
02:19:35,049 --> 02:19:40,929
gotta you got to get the season pass for

2606
02:19:36,818 --> 02:19:44,019
that four bit lighting ideas for a good

2607
02:19:40,929 --> 02:19:46,588
IDE integrated bugger for Linux there

2608
02:19:44,019 --> 02:19:46,588
aren't any

2609
02:19:50,889 --> 02:20:00,488
you could try QT creator it's got a lot

2610
02:19:57,728 --> 02:20:04,179
of bugs like a lot of bugs in the

2611
02:20:00,488 --> 02:20:05,948
debugger which is kind of funny but it's

2612
02:20:04,180 --> 02:20:08,050
the closest thing I found because like

2613
02:20:05,949 --> 02:20:11,069
it can at least see disassembly I think

2614
02:20:08,049 --> 02:20:13,599
sort of sometimes when it's in the mood

2615
02:20:11,068 --> 02:20:15,549
and it can usually sort of inspect

2616
02:20:13,600 --> 02:20:18,369
things and it usually can sort of save

2617
02:20:15,549 --> 02:20:22,538
your breakpoints and stuff it breaks all

2618
02:20:18,369 --> 02:20:23,770
the time all the time and it crashes all

2619
02:20:22,539 --> 02:20:24,879
the time I was trying to bug and all

2620
02:20:23,770 --> 02:20:27,430
those sort of things like that so it's

2621
02:20:24,879 --> 02:20:29,649
not a good experience but it's probably

2622
02:20:27,430 --> 02:20:32,408
the best one I've seen and it lets you

2623
02:20:29,648 --> 02:20:33,908
debug things you haven't built inside QT

2624
02:20:32,408 --> 02:20:38,168
creator which is important for people

2625
02:20:33,908 --> 02:20:40,510
like me unlike a lot of there's a lot of

2626
02:20:38,168 --> 02:20:42,699
ideas you can only debug something you

2627
02:20:40,510 --> 02:20:45,879
build inside the IDE which is useless if

2628
02:20:42,699 --> 02:20:51,010
you use an editor that isn't the IDE

2629
02:20:45,879 --> 02:20:52,810
I guess not useless you could still try

2630
02:20:51,010 --> 02:20:57,418
to build you could still set up a dummy

2631
02:20:52,809 --> 02:20:57,418
build I guess or something

2632
02:21:07,600 --> 02:21:12,710
t7 samurai could you recap outline the

2633
02:21:10,609 --> 02:21:14,539
idea for this lighting scheme basically

2634
02:21:12,709 --> 02:21:17,648
just take a look at yesterday's dream

2635
02:21:14,539 --> 02:21:17,649
that's what the whole thing was about

2636
02:21:17,828 --> 02:21:23,510
the idea is just it's just going to be a

2637
02:21:20,959 --> 02:21:26,179
multi grid lighting scheme which means

2638
02:21:23,510 --> 02:21:30,078
we're going to propagate lights at a low

2639
02:21:26,180 --> 02:21:32,170
resolution version of the scene and then

2640
02:21:30,078 --> 02:21:35,148
push them down to a higher resolution

2641
02:21:32,170 --> 02:21:40,728
like light lighting versions and keep

2642
02:21:35,148 --> 02:21:43,849
going it doesn't have a high probability

2643
02:21:40,728 --> 02:21:57,728
of working I've never heard of anyone do

2644
02:21:43,850 --> 02:21:57,729
it so I didn't have a better idea

2645
02:22:17,060 --> 02:22:23,699
Zillah rezku will I be able to pay money

2646
02:22:19,979 --> 02:22:31,170
for an expansion that crashes every so

2647
02:22:23,700 --> 02:22:35,511
often yeah I think that's called a Intel

2648
02:22:31,170 --> 02:22:41,940
integrated graphics part all you have to

2649
02:22:35,511 --> 02:22:44,819
do is buy if you want your game to crash

2650
02:22:41,940 --> 02:22:50,271
every so often you just need an Intel

2651
02:22:44,819 --> 02:22:50,270
driver I think you're good to go

2652
02:22:51,261 --> 02:22:56,040
is this a single-player game or will

2653
02:22:54,899 --> 02:23:02,119
there be some networked multiplayer

2654
02:22:56,040 --> 02:23:02,120
features a single-player game

2655
02:23:32,190 --> 02:23:35,239
[Music]

2656
02:23:35,409 --> 02:23:39,970
doesn't leave us any more questions on

2657
02:23:37,640 --> 02:23:39,970
here

2658
02:24:36,059 --> 02:24:41,909
all right doesn't look like there's any

2659
02:24:38,859 --> 02:24:41,909
questions I'm gonna close down

2660
02:24:53,350 --> 02:24:58,520
all right thank you everyone for joining

2661
02:24:57,079 --> 02:25:00,020
me for Alexa to hand made here at the

2662
02:24:58,520 --> 02:25:01,250
pedicle a with you as always if you

2663
02:25:00,020 --> 02:25:03,050
would like to follow along terms at home

2664
02:25:01,250 --> 02:25:05,000
you could always peer to the game on

2665
02:25:03,049 --> 02:25:08,090
handmade hero org and it course comes

2666
02:25:05,000 --> 02:25:11,389
with the source code so you can program

2667
02:25:08,090 --> 02:25:13,850
along with me and experiment with the

2668
02:25:11,389 --> 02:25:15,319
source tree if you want to ask questions

2669
02:25:13,850 --> 02:25:17,870
we also have a forum site you can go to

2670
02:25:15,319 --> 02:25:19,610
we got a patreon page if you want to

2671
02:25:17,870 --> 02:25:21,560
support the video series we've got a

2672
02:25:19,610 --> 02:25:22,819
schedule bot you can go to if you want

2673
02:25:21,559 --> 02:25:24,889
to know when we're going to live and we

2674
02:25:22,819 --> 02:25:27,260
got an episode guide they help to catch

2675
02:25:24,889 --> 02:25:29,000
up on old episodes that's it for this

2676
02:25:27,260 --> 02:25:31,969
weekend we'll be back next weekend for

2677
02:25:29,000 --> 02:25:33,889
another four hours of handmade hero

2678
02:25:31,969 --> 02:25:35,269
coding where we will try out the

2679
02:25:33,889 --> 02:25:37,670
lighting and we'll probably have

2680
02:25:35,270 --> 02:25:39,350
something working next weekend and by

2681
02:25:37,670 --> 02:25:42,020
working on me not working but we'll have

2682
02:25:39,350 --> 02:25:44,210
something that does lighting or at least

2683
02:25:42,020 --> 02:25:47,210
computes lighting poorly and so then

2684
02:25:44,209 --> 02:25:49,279
we'll kind of have to take the next step

2685
02:25:47,209 --> 02:25:50,829
and go how do we make it really work and

2686
02:25:49,280 --> 02:25:53,600
give us something we can actually ship

2687
02:25:50,829 --> 02:25:56,120
which ought to be interesting since this

2688
02:25:53,600 --> 02:25:58,579
is the totally different algorithm then

2689
02:25:56,120 --> 02:26:00,829
I've seen done before so who knows we'll

2690
02:25:58,579 --> 02:26:02,750
see what happens until then have fun

2691
02:26:00,829 --> 02:26:03,978
programming this week and I will see

2692
02:26:02,750 --> 02:26:06,280
everyone the internet take it easy

2693
02:26:03,978 --> 02:26:06,279
everybody

