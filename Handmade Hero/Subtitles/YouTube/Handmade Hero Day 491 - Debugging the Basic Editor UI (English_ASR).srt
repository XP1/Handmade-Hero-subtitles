1
00:00:00,410 --> 00:00:04,200
hello everyone and welcome to hand made

2
00:00:02,879 --> 00:00:06,240
here the show recode a complete game

3
00:00:04,200 --> 00:00:09,539
live on stream we got another bonus

4
00:00:06,240 --> 00:00:12,449
weekend sorry weekday stream in honor of

5
00:00:09,539 --> 00:00:15,539
krampuslauf which is coming up you don't

6
00:00:12,449 --> 00:00:19,198
want to get caught behind Krampus

7
00:00:15,539 --> 00:00:23,549
Krampus obviously very dangerous for

8
00:00:19,199 --> 00:00:25,170
children likely to dismember them and so

9
00:00:23,550 --> 00:00:26,339
you want to be out in front right you

10
00:00:25,170 --> 00:00:28,140
don't want to be caught you don't want

11
00:00:26,339 --> 00:00:31,050
to be a laggard during the Krampus run

12
00:00:28,140 --> 00:00:32,299
that's just not a safe place to be so we

13
00:00:31,050 --> 00:00:35,160
want to try and be out ahead of it so

14
00:00:32,299 --> 00:00:36,780
that's what we're doing here and we've

15
00:00:35,159 --> 00:00:40,679
got some stuff on handmade here that we

16
00:00:36,780 --> 00:00:42,808
want to finish up that we did a bunch of

17
00:00:40,679 --> 00:00:44,700
the work on yesterday actually which is

18
00:00:42,808 --> 00:00:46,468
just giving ourselves some editing

19
00:00:44,700 --> 00:00:50,550
interfaces to play with just basic debug

20
00:00:46,469 --> 00:00:52,500
interface for editing and we got that

21
00:00:50,549 --> 00:00:54,179
working actually and so what we need to

22
00:00:52,500 --> 00:00:57,448
do today is just kind of clean it up and

23
00:00:54,179 --> 00:00:59,009
wire it up to the actual functions and

24
00:00:57,448 --> 00:01:01,500
then we can start playing around and see

25
00:00:59,009 --> 00:01:03,420
where we're at maybe take stock of what

26
00:01:01,500 --> 00:01:04,920
we need to do from there so I'm going to

27
00:01:03,420 --> 00:01:08,040
go ahead and launch what we had

28
00:01:04,920 --> 00:01:09,570
yesterday again we just barely we had

29
00:01:08,040 --> 00:01:12,330
finished like sort of extracting the old

30
00:01:09,569 --> 00:01:14,129
debug UI code that we had that we still

31
00:01:12,329 --> 00:01:18,030
use for for this sort of stuff for

32
00:01:14,129 --> 00:01:20,699
example and you know again like these

33
00:01:18,030 --> 00:01:22,859
things are they're kind of janky but

34
00:01:20,700 --> 00:01:25,590
they get the job done we could clean

35
00:01:22,859 --> 00:01:27,450
some of these up too while we're in the

36
00:01:25,590 --> 00:01:29,280
process but basically what we did is we

37
00:01:27,450 --> 00:01:31,409
allowed that user interface to be used

38
00:01:29,280 --> 00:01:34,049
for other purposes and we just kind of

39
00:01:31,409 --> 00:01:35,189
this is a simple rendering of the

40
00:01:34,049 --> 00:01:38,939
interface that we had kind of talked

41
00:01:35,188 --> 00:01:41,188
about before and so what I'd like to do

42
00:01:38,938 --> 00:01:43,169
now is kind of like get into this a

43
00:01:41,188 --> 00:01:45,059
little bit figure out how to make this a

44
00:01:43,170 --> 00:01:46,409
more proper thing and get it actually

45
00:01:45,060 --> 00:01:49,799
working because now that we've got it

46
00:01:46,409 --> 00:01:51,570
all like compiling such that you can

47
00:01:49,799 --> 00:01:53,640
call the user interface stuff either

48
00:01:51,569 --> 00:01:55,559
from the debug system or from this kind

49
00:01:53,640 --> 00:01:57,799
of like impromptu editor stuff that we

50
00:01:55,560 --> 00:02:00,299
wanted I want to kind of just get that

51
00:01:57,799 --> 00:02:02,100
going for real because it's just it's

52
00:02:00,299 --> 00:02:04,290
only just barely in there now it

53
00:02:02,099 --> 00:02:06,239
at the end of last stream so that's what

54
00:02:04,290 --> 00:02:08,759
I'd like to do today and I'd like to

55
00:02:06,239 --> 00:02:11,060
also use that as an excuse to test we

56
00:02:08,758 --> 00:02:14,849
actually made the editing functionality

57
00:02:11,060 --> 00:02:16,650
for the attachment points that we needed

58
00:02:14,849 --> 00:02:17,639
we just you know didn't have an

59
00:02:16,650 --> 00:02:20,489
interface for it so it didn't actually

60
00:02:17,639 --> 00:02:23,219
do anything so I'd also like to you know

61
00:02:20,489 --> 00:02:24,780
start looking at that code and see does

62
00:02:23,219 --> 00:02:27,150
it work you know do we need to debug

63
00:02:24,780 --> 00:02:29,189
that because we we wrote it and we don't

64
00:02:27,150 --> 00:02:31,620
really have any way of knowing if it

65
00:02:29,189 --> 00:02:34,739
works or if it's any good and so that

66
00:02:31,620 --> 00:02:36,840
will be another place we can start down

67
00:02:34,739 --> 00:02:39,930
if I finish what we're doing here so

68
00:02:36,840 --> 00:02:42,060
what we sort of finished up on was the

69
00:02:39,930 --> 00:02:44,790
notion that now you can use this WI

70
00:02:42,060 --> 00:02:47,759
system and we now have sort of all of it

71
00:02:44,789 --> 00:02:51,269
pulled out in here we have this WI

72
00:02:47,759 --> 00:02:52,590
system and that allows us to access all

73
00:02:51,269 --> 00:02:54,989
the stuff that we had written for the

74
00:02:52,590 --> 00:02:57,060
debug system now there's a number of

75
00:02:54,989 --> 00:02:59,400
different ways you can write user

76
00:02:57,060 --> 00:03:02,549
interface code obviously and we've shown

77
00:02:59,400 --> 00:03:04,530
some of them on the stream and one of

78
00:03:02,549 --> 00:03:05,879
the things you can see here is if if I

79
00:03:04,530 --> 00:03:07,349
wanted to and I don't know that I

80
00:03:05,879 --> 00:03:09,539
necessarily do but when I sketch this

81
00:03:07,349 --> 00:03:12,359
out I kind of did the more immediate

82
00:03:09,539 --> 00:03:13,949
mode graphic user interface style where

83
00:03:12,360 --> 00:03:15,510
you just say that you want a button and

84
00:03:13,949 --> 00:03:17,009
then you put the code for emulating the

85
00:03:15,509 --> 00:03:18,840
button right inside there and there's

86
00:03:17,009 --> 00:03:20,759
there's good and bad reasons for doing

87
00:03:18,840 --> 00:03:27,680
that there's there's pluses and minuses

88
00:03:20,759 --> 00:03:31,738
to it I guess is what I would say and

89
00:03:27,680 --> 00:03:38,040
the plus is that it gives you a

90
00:03:31,739 --> 00:03:41,939
convenient way of keeping all the code

91
00:03:38,039 --> 00:03:43,798
localized right it means that the same

92
00:03:41,939 --> 00:03:46,319
code that says how to render the button

93
00:03:43,799 --> 00:03:48,599
is the code that says how to operate on

94
00:03:46,319 --> 00:03:50,430
the button and it's all done

95
00:03:48,599 --> 00:03:53,969
procedurally so that you don't actually

96
00:03:50,430 --> 00:03:56,219
have to create a standing structure

97
00:03:53,969 --> 00:03:58,169
anywhere to process this it's entirely

98
00:03:56,219 --> 00:04:00,509
ephemeral which is can be really nice

99
00:03:58,169 --> 00:04:02,969
because it cuts down on a lot of bloat

100
00:04:00,509 --> 00:04:04,679
in the code and a lot of state

101
00:04:02,969 --> 00:04:06,479
management that you just don't have to

102
00:04:04,680 --> 00:04:08,969
do because you're never creating

103
00:04:06,479 --> 00:04:10,619
anything so if you want to save button

104
00:04:08,969 --> 00:04:12,659
on one frame you just say there is one

105
00:04:10,620 --> 00:04:14,819
if it disappears on a subsequent frame

106
00:04:12,659 --> 00:04:15,669
it just does you don't have to worry

107
00:04:14,819 --> 00:04:18,519
about oh wait

108
00:04:15,669 --> 00:04:20,168
is there a save button object that I

109
00:04:18,519 --> 00:04:21,310
created and do I have to delete it and

110
00:04:20,168 --> 00:04:23,409
all these other sorts of things it just

111
00:04:21,310 --> 00:04:25,199
kind of simplifies matters for the

112
00:04:23,410 --> 00:04:28,680
person using the code and that's nice

113
00:04:25,199 --> 00:04:33,539
what we don't necessarily get out of it

114
00:04:28,680 --> 00:04:33,540
is a lot of flexibility in terms of

115
00:04:33,810 --> 00:04:39,519
externally implementing things that can

116
00:04:36,819 --> 00:04:43,509
operate on stuff that's on the screen so

117
00:04:39,519 --> 00:04:45,189
in other words it by the it the strength

118
00:04:43,509 --> 00:04:47,740
of it being able to bind these things

119
00:04:45,189 --> 00:04:49,629
closely together being convenient for

120
00:04:47,740 --> 00:04:52,600
the programmer it's also in a sense of

121
00:04:49,629 --> 00:04:54,610
weakness because it means that you have

122
00:04:52,600 --> 00:04:56,830
a preferred way of implementing one

123
00:04:54,610 --> 00:04:58,509
thing that you could do here and it

124
00:04:56,829 --> 00:05:00,250
makes it harder to separate out code

125
00:04:58,509 --> 00:05:03,189
that's gonna operate across multiple

126
00:05:00,250 --> 00:05:04,870
things on the screen or different ways

127
00:05:03,189 --> 00:05:06,969
of operating with the same things on the

128
00:05:04,870 --> 00:05:08,860
screen and so you do have kind of like

129
00:05:06,970 --> 00:05:10,960
pluses and minuses but it's really up to

130
00:05:08,860 --> 00:05:12,669
you a lot of times to figure out what

131
00:05:10,959 --> 00:05:16,859
makes the most sense for what you have

132
00:05:12,668 --> 00:05:16,859
to be doing now in our case

133
00:05:20,990 --> 00:05:31,689
this is just our debug at-at UI so you

134
00:05:26,180 --> 00:05:34,910
know you probably don't want to optimize

135
00:05:31,689 --> 00:05:36,980
for really unusual esoteric use cases

136
00:05:34,910 --> 00:05:39,170
because I'll do those up and probably do

137
00:05:36,980 --> 00:05:45,410
come up in some kind of a professional

138
00:05:39,170 --> 00:05:46,910
tool you know I would use Photoshop as

139
00:05:45,410 --> 00:05:49,370
an example but I said professional tools

140
00:05:46,910 --> 00:05:51,230
so you know maybe not but like being

141
00:05:49,370 --> 00:05:52,519
tools that have complicated UI

142
00:05:51,230 --> 00:05:54,319
interactions you know sometimes you have

143
00:05:52,519 --> 00:05:56,539
to think more carefully about how these

144
00:05:54,319 --> 00:05:57,980
are going to work for a number of

145
00:05:56,540 --> 00:05:59,540
reasons one of them being say for

146
00:05:57,980 --> 00:06:02,000
example you need to do things like

147
00:05:59,540 --> 00:06:03,650
scripting or other stuff like that these

148
00:06:02,000 --> 00:06:04,819
sort of things stop making very much

149
00:06:03,649 --> 00:06:06,560
sense and the reason that they don't

150
00:06:04,819 --> 00:06:08,659
make a lot of sense is because if the

151
00:06:06,560 --> 00:06:11,180
only way to actually access the code

152
00:06:08,660 --> 00:06:13,010
that does something is by going through

153
00:06:11,180 --> 00:06:15,259
the code path that actually displays the

154
00:06:13,009 --> 00:06:20,180
button well that produces a very

155
00:06:15,259 --> 00:06:21,589
unwieldy workflow right it means that in

156
00:06:20,180 --> 00:06:23,900
order to do scripting you have to also

157
00:06:21,589 --> 00:06:27,619
call the renderer to execute the script

158
00:06:23,899 --> 00:06:30,620
somehow or unit right there so once you

159
00:06:27,620 --> 00:06:33,920
start getting into more advanced API

160
00:06:30,620 --> 00:06:37,069
stuff that you need your UI to be able

161
00:06:33,920 --> 00:06:38,900
to support typically you need to take a

162
00:06:37,069 --> 00:06:40,579
step you took you can still use an

163
00:06:38,899 --> 00:06:43,009
immediate mode paradigm for rendering

164
00:06:40,579 --> 00:06:45,979
your layouts and for responding to them

165
00:06:43,009 --> 00:06:49,459
in some ways but you need to start

166
00:06:45,980 --> 00:06:52,370
having a cleaner separation between the

167
00:06:49,459 --> 00:06:54,439
the act of using a particular UI element

168
00:06:52,370 --> 00:06:57,050
and what that thing does if for no other

169
00:06:54,439 --> 00:07:01,399
reason that there are more other people

170
00:06:57,050 --> 00:07:02,870
in the sphere of influence there that

171
00:07:01,399 --> 00:07:05,089
need to be able to access those same

172
00:07:02,870 --> 00:07:06,860
functions so that's why you typically

173
00:07:05,089 --> 00:07:10,669
get into situations where you need to

174
00:07:06,860 --> 00:07:12,350
kind of have okay save actually doesn't

175
00:07:10,670 --> 00:07:15,560
do anything itself

176
00:07:12,350 --> 00:07:17,420
it just has an ID that's like this is

177
00:07:15,560 --> 00:07:19,370
the save operation and then somewhere

178
00:07:17,420 --> 00:07:22,009
else there's a thing that implements all

179
00:07:19,370 --> 00:07:24,319
of your operations and the reason you

180
00:07:22,009 --> 00:07:26,779
need to do that is because if you didn't

181
00:07:24,319 --> 00:07:29,779
do that you couldn't have things like

182
00:07:26,779 --> 00:07:32,299
scripting or user bindable buttons as

183
00:07:29,779 --> 00:07:34,459
easily right because you need that layer

184
00:07:32,300 --> 00:07:34,790
of separation there and again there's

185
00:07:34,459 --> 00:07:36,199
nothing too

186
00:07:34,790 --> 00:07:38,810
do with retain mode or immediate mode

187
00:07:36,199 --> 00:07:42,079
graphic user interface API design it's

188
00:07:38,810 --> 00:07:44,470
just how the person implementing the

189
00:07:42,079 --> 00:07:47,509
actual back end like the Edit operations

190
00:07:44,470 --> 00:07:50,480
how much they can push those into the

191
00:07:47,509 --> 00:07:53,060
actual implementation of the GUI really

192
00:07:50,480 --> 00:07:54,680
depends on that and so what you're

193
00:07:53,060 --> 00:07:58,579
looking at here is you're looking at

194
00:07:54,680 --> 00:08:02,600
trying to make a clean decision about

195
00:07:58,579 --> 00:08:04,039
what you need right because you don't

196
00:08:02,600 --> 00:08:06,439
want to go implementing a bunch of stuff

197
00:08:04,040 --> 00:08:07,910
you don't need because then you're just

198
00:08:06,439 --> 00:08:09,620
wasting a lot of time now on handmade

199
00:08:07,910 --> 00:08:11,090
hero we could do that because as an

200
00:08:09,620 --> 00:08:13,850
educational series so if we were like

201
00:08:11,089 --> 00:08:15,979
look we want to show how to do this even

202
00:08:13,850 --> 00:08:17,720
though we don't need to totally valid

203
00:08:15,980 --> 00:08:19,700
and we sort of did that like we didn't

204
00:08:17,720 --> 00:08:22,490
really need these to do separate

205
00:08:19,699 --> 00:08:23,659
interactions for the way we did them we

206
00:08:22,490 --> 00:08:25,610
could have done something more quick and

207
00:08:23,660 --> 00:08:29,090
dirty like this but we did kind of show

208
00:08:25,610 --> 00:08:31,730
how to do a separated UI as one option

209
00:08:29,089 --> 00:08:33,168
right but if you're in your own code

210
00:08:31,730 --> 00:08:34,879
base you don't want to be doing things

211
00:08:33,168 --> 00:08:36,799
just to do them because you actually

212
00:08:34,879 --> 00:08:37,759
know exactly what you need and you're

213
00:08:36,799 --> 00:08:39,439
not trying to teach anybody anything

214
00:08:37,759 --> 00:08:41,479
unless we're trying to teach yourself

215
00:08:39,440 --> 00:08:41,900
which of course is a reasonable option

216
00:08:41,479 --> 00:08:44,120
as well

217
00:08:41,899 --> 00:08:45,470
so in our case we don't really care and

218
00:08:44,120 --> 00:08:47,629
you can see that this was a pretty

219
00:08:45,470 --> 00:08:50,090
convenient way to write this so you know

220
00:08:47,629 --> 00:08:53,029
least for the time being maybe this is a

221
00:08:50,090 --> 00:08:55,460
good way to do it and what's kind of

222
00:08:53,029 --> 00:08:57,799
nice about like the way that we've

223
00:08:55,460 --> 00:09:01,420
implemented it here is that if you do

224
00:08:57,799 --> 00:09:04,969
support in a basically an iamb GUI style

225
00:09:01,419 --> 00:09:07,519
for your thing it allows you sort of the

226
00:09:04,970 --> 00:09:10,279
best of both worlds because when you do

227
00:09:07,519 --> 00:09:13,970
want to have things be interactions in a

228
00:09:10,279 --> 00:09:16,759
table by ID or something like this you

229
00:09:13,970 --> 00:09:19,460
can but then you can always have one of

230
00:09:16,759 --> 00:09:22,460
those interactions just be immediate

231
00:09:19,460 --> 00:09:26,570
right so for example in this case what I

232
00:09:22,460 --> 00:09:29,180
could do is you know have a interaction

233
00:09:26,570 --> 00:09:31,940
like you know immediate button or

234
00:09:29,179 --> 00:09:34,519
whatever right I can make an interaction

235
00:09:31,940 --> 00:09:38,000
that is that thing and then I can write

236
00:09:34,519 --> 00:09:41,179
some interaction code that is as if it

237
00:09:38,000 --> 00:09:42,559
was an outboard thing as if it were a

238
00:09:41,179 --> 00:09:45,049
separate thing for all the tables and

239
00:09:42,559 --> 00:09:47,849
stuff but instead of actually doing that

240
00:09:45,049 --> 00:09:50,939
all it does is feed there is

241
00:09:47,850 --> 00:09:54,810
it's back to code like this to execute

242
00:09:50,940 --> 00:09:56,190
on the fly right so let me show you how

243
00:09:54,809 --> 00:09:57,479
to do that now and again that's why I

244
00:09:56,190 --> 00:10:00,449
see can't get the best of both worlds

245
00:09:57,480 --> 00:10:03,420
because we can for any given operation

246
00:10:00,448 --> 00:10:05,490
we want really just have either one and

247
00:10:03,419 --> 00:10:07,259
our architecture doesn't need to change

248
00:10:05,490 --> 00:10:08,669
because it's flexible enough that it can

249
00:10:07,259 --> 00:10:11,970
do either those two things and that's

250
00:10:08,669 --> 00:10:14,189
kind of nice right so what I want to do

251
00:10:11,970 --> 00:10:18,000
there is just say all right there's this

252
00:10:14,190 --> 00:10:20,100
immediate button thing right and what I

253
00:10:18,000 --> 00:10:22,589
want to do is all of these buttons that

254
00:10:20,100 --> 00:10:25,620
I've got here right that were you know

255
00:10:22,589 --> 00:10:28,829
immediate I just want them to go through

256
00:10:25,620 --> 00:10:31,259
that path so when inside the dev UI

257
00:10:28,828 --> 00:10:34,500
you're gonna make one of these things

258
00:10:31,259 --> 00:10:37,528
right so you know we've got the button

259
00:10:34,500 --> 00:10:39,120
thing here when they're doing their WI

260
00:10:37,528 --> 00:10:41,338
interaction in there couldn't you know

261
00:10:39,120 --> 00:10:43,318
constructing that what we want to do

262
00:10:41,339 --> 00:10:45,449
there is just have a way to construct

263
00:10:43,318 --> 00:10:47,549
one with this immediate button bit right

264
00:10:45,448 --> 00:10:48,899
and then what that's going to do is it's

265
00:10:47,549 --> 00:10:51,620
gonna create one of these WI

266
00:10:48,899 --> 00:10:54,120
interactions it just has some way of

267
00:10:51,620 --> 00:10:59,818
remembering what it was that you

268
00:10:54,120 --> 00:11:06,269
actually clicked on right and there's a

269
00:10:59,818 --> 00:11:09,240
number of ways we can do that and I'm

270
00:11:06,269 --> 00:11:11,909
gonna probably do the cheesiest one but

271
00:11:09,240 --> 00:11:16,399
you know whether or not you want to do

272
00:11:11,909 --> 00:11:22,139
that one is kind of a separate issue so

273
00:11:16,399 --> 00:11:23,549
what I'd like to do here is say okay you

274
00:11:22,139 --> 00:11:25,589
know I want to create one of these

275
00:11:23,549 --> 00:11:28,859
things I know that I need to construct a

276
00:11:25,589 --> 00:11:32,130
dev ID and then the rest of this stuff

277
00:11:28,860 --> 00:11:35,970
is kind of just dirigir meaning once I

278
00:11:32,129 --> 00:11:38,610
know a dev ID for this thing I'm kind of

279
00:11:35,970 --> 00:11:40,800
done because if I have a dev ID I can

280
00:11:38,610 --> 00:11:43,889
uniquely identify which button was

281
00:11:40,799 --> 00:11:45,419
pressed without any storage right I

282
00:11:43,889 --> 00:11:47,610
don't need to remember anything other

283
00:11:45,419 --> 00:11:50,789
than just that dev ID I don't need an

284
00:11:47,610 --> 00:11:53,789
instance of the button the ID will

285
00:11:50,789 --> 00:11:55,198
disambiguate it right so if I assume

286
00:11:53,789 --> 00:11:57,179
that when I'm pushing this button

287
00:11:55,198 --> 00:11:58,169
somehow I'm able to get a dev ID here

288
00:11:57,179 --> 00:12:00,239
and we'll figure out how that's gonna

289
00:11:58,169 --> 00:12:01,679
happen in a second but if I do that then

290
00:12:00,240 --> 00:12:02,759
creating this dev ID

291
00:12:01,679 --> 00:12:05,969
interaction is pretty straightforward

292
00:12:02,759 --> 00:12:07,799
right all I really need to do is say all

293
00:12:05,970 --> 00:12:09,690
right look when I create this

294
00:12:07,799 --> 00:12:11,278
interaction I'm gonna set the ID to

295
00:12:09,690 --> 00:12:14,100
something and we don't know what that is

296
00:12:11,278 --> 00:12:16,559
but the rest of it is just merely a case

297
00:12:14,100 --> 00:12:18,389
of saying that right and the rest of

298
00:12:16,559 --> 00:12:20,609
these things like the target can just be

299
00:12:18,389 --> 00:12:23,519
left null because we don't actually need

300
00:12:20,610 --> 00:12:26,339
any more information right we don't need

301
00:12:23,519 --> 00:12:30,809
any other there's nothing else that goes

302
00:12:26,339 --> 00:12:33,120
on there when we look down at the WI

303
00:12:30,809 --> 00:12:34,679
itself and we're actually processing

304
00:12:33,120 --> 00:12:36,690
these things so we've got the

305
00:12:34,679 --> 00:12:39,479
interaction the hot interaction the next

306
00:12:36,690 --> 00:12:41,490
hot interaction that sort of stuff um we

307
00:12:39,480 --> 00:12:45,240
really just need the knowledge that

308
00:12:41,490 --> 00:12:46,620
something is being executed and as long

309
00:12:45,240 --> 00:12:49,440
as we have that knowledge we can

310
00:12:46,620 --> 00:12:50,970
basically finish off this loop so all we

311
00:12:49,440 --> 00:12:54,089
really need to do here is say look

312
00:12:50,970 --> 00:12:59,370
there's gonna be a dev ID you that we're

313
00:12:54,089 --> 00:13:01,890
just gonna call you know execute or ID

314
00:12:59,370 --> 00:13:04,649
to execute and all we're gonna do here

315
00:13:01,889 --> 00:13:07,110
is see if the ID that we were going to

316
00:13:04,649 --> 00:13:08,940
use is executed that gives us a result

317
00:13:07,110 --> 00:13:10,950
of true otherwise because it results a

318
00:13:08,940 --> 00:13:13,709
false right so hopefully you can see

319
00:13:10,950 --> 00:13:15,660
when I'm starting a sketch in here we

320
00:13:13,708 --> 00:13:17,519
need a damn ID we'll figure out how to

321
00:13:15,659 --> 00:13:20,278
make one of those in a second once we

322
00:13:17,519 --> 00:13:22,079
have a dev ID we can make an interaction

323
00:13:20,278 --> 00:13:24,000
that is called this a media button

324
00:13:22,080 --> 00:13:26,509
interaction it will be a thing that just

325
00:13:24,000 --> 00:13:29,669
allows buttons to be clicked right and

326
00:13:26,509 --> 00:13:32,549
then once I know that that's happening

327
00:13:29,669 --> 00:13:37,500
if I click on a button that interaction

328
00:13:32,549 --> 00:13:40,679
will just set the ID to execute to to be

329
00:13:37,500 --> 00:13:43,110
our ID and once we know that we know

330
00:13:40,679 --> 00:13:46,049
what the result is so once we know that

331
00:13:43,110 --> 00:13:50,220
we know here that the result in this

332
00:13:46,049 --> 00:13:52,979
case is just whatever the UI says the ID

333
00:13:50,220 --> 00:13:58,740
to execute is we just want to know if

334
00:13:52,980 --> 00:14:02,278
it's equal oops having some capslock

335
00:13:58,740 --> 00:14:04,289
issues I don't mind telling you we just

336
00:14:02,278 --> 00:14:07,320
want to know if these two IDs are equal

337
00:14:04,289 --> 00:14:09,539
so if the UI says that we're supposed to

338
00:14:07,320 --> 00:14:12,420
execute a particular ID and that's also

339
00:14:09,539 --> 00:14:14,189
the ID that we have then we're good to

340
00:14:12,419 --> 00:14:17,219
go so it really just ends up

341
00:14:14,190 --> 00:14:19,950
how do we make this dev ID right how do

342
00:14:17,220 --> 00:14:23,610
we make this thing and that's all we

343
00:14:19,950 --> 00:14:26,310
would need okay I don't remember what

344
00:14:23,610 --> 00:14:28,230
the actual equal like equivalence value

345
00:14:26,309 --> 00:14:28,889
is for dev IDs to completely honest with

346
00:14:28,230 --> 00:14:31,980
you

347
00:14:28,889 --> 00:14:32,490
I know it's I know we made a function

348
00:14:31,980 --> 00:14:35,190
for it

349
00:14:32,490 --> 00:14:36,930
it's this I guess and so I want to

350
00:14:35,190 --> 00:14:38,730
change that to dev IDs or equal and

351
00:14:36,929 --> 00:14:42,269
honestly I think just are equal it's

352
00:14:38,730 --> 00:14:43,889
fine with me so you know you're passing

353
00:14:42,269 --> 00:14:46,439
it to typed values so I'm just not sure

354
00:14:43,889 --> 00:14:48,210
there's a lot of risk there in over

355
00:14:46,440 --> 00:14:50,970
naming so I'm gonna go ahead and change

356
00:14:48,210 --> 00:14:53,940
that over as well and then in here we'll

357
00:14:50,970 --> 00:14:56,190
just see the IDS or actually just a

358
00:14:53,940 --> 00:14:57,960
party cool or rather we don't know what

359
00:14:56,190 --> 00:15:01,410
that is yet and in here we'll just say

360
00:14:57,960 --> 00:15:07,080
debug IDs are equal will just be are

361
00:15:01,409 --> 00:15:09,419
equal and there we go so really again

362
00:15:07,080 --> 00:15:12,629
all I want to do now is just make sure

363
00:15:09,419 --> 00:15:15,179
that that stuff is reasonable so just

364
00:15:12,629 --> 00:15:17,820
fix that last one I just want to go

365
00:15:15,179 --> 00:15:19,319
ahead and make sure that that all this

366
00:15:17,820 --> 00:15:20,910
stuff is implemented and then we'll look

367
00:15:19,320 --> 00:15:23,940
at how we might want to create one of

368
00:15:20,909 --> 00:15:26,939
these IDs all right so what you'll

369
00:15:23,940 --> 00:15:30,750
notice is that we didn't actually do any

370
00:15:26,940 --> 00:15:34,230
sharing of the user interface execution

371
00:15:30,750 --> 00:15:37,169
code and that's kind of intentional and

372
00:15:34,230 --> 00:15:39,120
I think we may just let that live for

373
00:15:37,169 --> 00:15:42,779
now and I'll kind of show you what I

374
00:15:39,120 --> 00:15:45,330
mean by that so if we look in terms of

375
00:15:42,779 --> 00:15:47,449
when the debug system itself when it

376
00:15:45,330 --> 00:15:52,560
goes to do an end frame

377
00:15:47,450 --> 00:15:54,900
where's where is that at there is when

378
00:15:52,559 --> 00:15:57,659
it goes to do an end frame what it does

379
00:15:54,899 --> 00:16:01,259
is it calls its debug interact function

380
00:15:57,659 --> 00:16:03,719
and that's the thing that actually does

381
00:16:01,259 --> 00:16:07,649
the updating you know of what's going on

382
00:16:03,720 --> 00:16:09,930
with with you know any UI interactions

383
00:16:07,649 --> 00:16:11,909
that might make sense here right so you

384
00:16:09,929 --> 00:16:14,099
can kind of see that sketched out here

385
00:16:11,909 --> 00:16:15,750
like you know if you're not interacting

386
00:16:14,100 --> 00:16:17,519
with something then we do some of this

387
00:16:15,750 --> 00:16:20,129
stuff and in blah blah blah blah blah

388
00:16:17,519 --> 00:16:22,980
right we see whether or not you're gonna

389
00:16:20,129 --> 00:16:28,080
interact with these various mouths mouse

390
00:16:22,980 --> 00:16:29,670
buttons we actually

391
00:16:28,080 --> 00:16:32,490
we do the interactions which is

392
00:16:29,669 --> 00:16:34,259
interesting so we actually we actually

393
00:16:32,490 --> 00:16:36,840
handle multiple clicks inside a single

394
00:16:34,259 --> 00:16:39,029
frame which is a bit aggressive but you

395
00:16:36,840 --> 00:16:44,580
know all right that's fine

396
00:16:39,029 --> 00:16:47,360
and so this code here you can kind of

397
00:16:44,580 --> 00:16:51,000
say some of it is like share ish and

398
00:16:47,360 --> 00:16:55,289
some of it is it write this kind of code

399
00:16:51,000 --> 00:16:57,860
we may just want a lot of this stuff

400
00:16:55,289 --> 00:17:00,360
like you know just just looking at it a

401
00:16:57,860 --> 00:17:04,019
lot of the stuff is probably just best

402
00:17:00,360 --> 00:17:06,450
saved for in the debug system like it's

403
00:17:04,019 --> 00:17:08,369
just it looks better inside the debug

404
00:17:06,450 --> 00:17:10,680
system there's not a lot that we

405
00:17:08,369 --> 00:17:16,588
probably want to save here because all

406
00:17:10,680 --> 00:17:21,060
of its pretty specific you know this you

407
00:17:16,588 --> 00:17:23,399
know maybe is stuff that could be shared

408
00:17:21,059 --> 00:17:26,269
and if we wanted to share it we can

409
00:17:23,400 --> 00:17:31,350
always add defaults and here that call

410
00:17:26,269 --> 00:17:33,269
sort of a WI generic processing loop so

411
00:17:31,349 --> 00:17:35,819
we can choose to pull things that we

412
00:17:33,269 --> 00:17:40,500
want to share out but just looking at it

413
00:17:35,819 --> 00:17:42,869
if you look at how much is specific it

414
00:17:40,500 --> 00:17:44,599
really just doesn't look like the kind

415
00:17:42,869 --> 00:17:47,069
of thing that needs to get shared and

416
00:17:44,599 --> 00:17:49,649
the reason that I bring that up is just

417
00:17:47,069 --> 00:17:53,250
because I think what that implies for us

418
00:17:49,650 --> 00:17:57,540
is we don't really want to call the same

419
00:17:53,250 --> 00:17:59,700
function so inside our editor here which

420
00:17:57,539 --> 00:18:03,000
is using the UI system and so on right I

421
00:17:59,700 --> 00:18:05,519
think what we want to do is in our you

422
00:18:03,000 --> 00:18:07,829
know in the in the main gain area that's

423
00:18:05,519 --> 00:18:10,289
actually doing this stuff the in-game

424
00:18:07,829 --> 00:18:13,039
editor right I think what it wants to do

425
00:18:10,289 --> 00:18:15,750
is it wants to handle this UI stuff

426
00:18:13,039 --> 00:18:21,950
itself not as a part of a shared

427
00:18:15,750 --> 00:18:27,299
operation with the you know with the

428
00:18:21,950 --> 00:18:29,610
debug system this is a little

429
00:18:27,299 --> 00:18:32,009
questionable I don't really know to what

430
00:18:29,609 --> 00:18:33,959
extent we want these things shared this

431
00:18:32,009 --> 00:18:38,190
way I'm gonna leave it that way for now

432
00:18:33,960 --> 00:18:41,549
and I'm just gonna call here after that

433
00:18:38,190 --> 00:18:42,019
end UI frame I'm gonna follow the debug

434
00:18:41,549 --> 00:18:43,669
system

435
00:18:42,019 --> 00:18:46,490
lead on how this was working and just

436
00:18:43,670 --> 00:18:50,080
say look what we're gonna do is we're

437
00:18:46,490 --> 00:18:52,910
gonna insert and interact call here and

438
00:18:50,079 --> 00:18:55,009
and say like this is you know editor

439
00:18:52,910 --> 00:18:57,440
interact or whatever and we're just

440
00:18:55,009 --> 00:19:00,619
gonna pass exactly the same stuff as we

441
00:18:57,440 --> 00:19:02,960
were passing here and I'm just not gonna

442
00:19:00,619 --> 00:19:06,469
think too hard about it otherwise right

443
00:19:02,960 --> 00:19:10,460
so we're just gonna do exactly this and

444
00:19:06,470 --> 00:19:13,850
go from there now when we actually call

445
00:19:10,460 --> 00:19:15,230
this I'm gonna pass that WI as well

446
00:19:13,849 --> 00:19:16,609
through here because I think that's

447
00:19:15,230 --> 00:19:19,660
probably what should have been happening

448
00:19:16,609 --> 00:19:22,639
here too that's sort of a separate issue

449
00:19:19,660 --> 00:19:24,350
and I'm not gonna pass the mouse P and D

450
00:19:22,640 --> 00:19:26,210
mouse P because those are part of the UI

451
00:19:24,349 --> 00:19:27,889
now so we're just gonna like do this in

452
00:19:26,210 --> 00:19:29,299
a slightly more modernized way than what

453
00:19:27,890 --> 00:19:31,640
we were doing before now that we kind of

454
00:19:29,299 --> 00:19:33,139
have a better picture in the system but

455
00:19:31,640 --> 00:19:36,170
otherwise it's gonna be basically the

456
00:19:33,140 --> 00:19:39,590
same so if I go ahead and grab this

457
00:19:36,170 --> 00:19:42,529
editor interactive bit here and place

458
00:19:39,589 --> 00:19:46,849
that in side the the editor proper and

459
00:19:42,529 --> 00:19:52,180
just write that in we have our in-game

460
00:19:46,849 --> 00:19:54,500
editor here and I have our dev UI here

461
00:19:52,180 --> 00:19:56,450
I'm gonna actually stick with just

462
00:19:54,500 --> 00:19:59,390
calling that you know and then we have

463
00:19:56,450 --> 00:20:00,980
the input and so what I want to do is

464
00:19:59,390 --> 00:20:02,660
during editor interact again I'm gonna

465
00:20:00,980 --> 00:20:04,039
follow the lead of the debug system but

466
00:20:02,660 --> 00:20:05,660
I'm gonna write some pretty different

467
00:20:04,039 --> 00:20:10,519
code in here probably or handle some

468
00:20:05,660 --> 00:20:14,830
different things and then if I end up

469
00:20:10,519 --> 00:20:19,039
deciding that what we've got you know

470
00:20:14,829 --> 00:20:20,919
really should be shared I can share it

471
00:20:19,039 --> 00:20:23,569
right and that's the part I want to

472
00:20:20,920 --> 00:20:26,240
emphasize here right is all of this

473
00:20:23,569 --> 00:20:27,439
stuff if I do decide that I want it to

474
00:20:26,240 --> 00:20:30,620
work the same way

475
00:20:27,440 --> 00:20:34,910
will merge them later so what I want to

476
00:20:30,619 --> 00:20:37,839
avoid is sharing for sharing sync I want

477
00:20:34,910 --> 00:20:41,600
to see myself write the same thing twice

478
00:20:37,839 --> 00:20:44,259
in the same way and go okay I see that

479
00:20:41,599 --> 00:20:48,019
these things are really going to be

480
00:20:44,259 --> 00:20:50,720
pretty much identical so let me go ahead

481
00:20:48,019 --> 00:20:53,150
and and deal with that and merge these

482
00:20:50,720 --> 00:20:54,990
two things right so I'm gonna start by

483
00:20:53,150 --> 00:20:57,780
looking at the skeleton of this

484
00:20:54,990 --> 00:21:00,150
and editor interactor team care and just

485
00:20:57,779 --> 00:21:03,349
look at what we've got so inside here

486
00:21:00,150 --> 00:21:06,509
you know this obviously is not relevant

487
00:21:03,349 --> 00:21:08,939
I also don't really think this is

488
00:21:06,509 --> 00:21:13,500
particularly relevant so I think we're

489
00:21:08,940 --> 00:21:15,660
mostly looking at you know I guess

490
00:21:13,500 --> 00:21:19,859
really just in here that one that we've

491
00:21:15,660 --> 00:21:23,550
just that we've described so if we're

492
00:21:19,859 --> 00:21:24,959
doing a particular interaction here I

493
00:21:23,549 --> 00:21:26,970
mean you know now that I think about I

494
00:21:24,960 --> 00:21:29,789
don't even really know which one what we

495
00:21:26,970 --> 00:21:32,610
would really even be caring about very

496
00:21:29,789 --> 00:21:34,710
much in terms of implementing this

497
00:21:32,609 --> 00:21:36,000
immediate button part here but you know

498
00:21:34,710 --> 00:21:40,200
this is the only one we would really

499
00:21:36,000 --> 00:21:42,808
care about so when we're looking at this

500
00:21:40,200 --> 00:21:43,799
UI interaction type if we say okay you

501
00:21:42,808 --> 00:21:45,629
know here's what we're gonna do that I

502
00:21:43,799 --> 00:21:49,379
also think since we're switching on that

503
00:21:45,630 --> 00:21:51,750
value I guess what I would say is if we

504
00:21:49,380 --> 00:21:54,120
want to handle the none case I don't

505
00:21:51,750 --> 00:21:59,190
know why that wasn't just one of the

506
00:21:54,119 --> 00:22:00,659
cases right so that's yeah I don't I

507
00:21:59,190 --> 00:22:05,340
don't know exactly why we weren't doing

508
00:22:00,660 --> 00:22:07,380
this possibly because well I mean even I

509
00:22:05,339 --> 00:22:09,629
guess it's maybe because this click

510
00:22:07,380 --> 00:22:14,910
interaction the way that it works is it

511
00:22:09,630 --> 00:22:17,730
needs to call end and then begin maybe

512
00:22:14,910 --> 00:22:21,590
is the reason so they want to share you

513
00:22:17,730 --> 00:22:21,589
know they this wanted to get shared

514
00:22:22,429 --> 00:22:26,100
couldn't really tell you I mean that

515
00:22:24,450 --> 00:22:27,660
looks like the only real difference

516
00:22:26,099 --> 00:22:31,230
between these two things

517
00:22:27,660 --> 00:22:33,808
right is is that is the toggle so

518
00:22:31,230 --> 00:22:35,179
between begin and end and that doesn't

519
00:22:33,808 --> 00:22:36,779
seem like a particularly good reason

520
00:22:35,179 --> 00:22:37,950
especially doesn't feel like pretty good

521
00:22:36,779 --> 00:22:39,089
reason because that's something we could

522
00:22:37,950 --> 00:22:41,730
have done with a function pointer and

523
00:22:39,089 --> 00:22:44,490
just swapped so I don't know that that

524
00:22:41,730 --> 00:22:48,079
seems like a bad excuse for it

525
00:22:44,490 --> 00:22:51,299
so I'm less inclined to maybe copy that

526
00:22:48,079 --> 00:22:53,579
sort of version of events over here but

527
00:22:51,299 --> 00:22:55,319
we'll see so I guess what I would say is

528
00:22:53,579 --> 00:22:56,639
yet you know looking at these then we

529
00:22:55,319 --> 00:22:58,619
have to think about whether we want to

530
00:22:56,640 --> 00:23:03,419
copy that sort of beginning and interact

531
00:22:58,619 --> 00:23:06,750
paradigm in the first place and go for

532
00:23:03,419 --> 00:23:08,730
there so let's take a look inside the

533
00:23:06,750 --> 00:23:11,880
debug system at the like begin interact

534
00:23:08,730 --> 00:23:16,529
and interact so the thing that we're

535
00:23:11,880 --> 00:23:23,580
most closely going to be related to here

536
00:23:16,529 --> 00:23:24,990
is just I mean probably like the the

537
00:23:23,579 --> 00:23:26,789
button version that we use in here it

538
00:23:24,990 --> 00:23:30,059
didn't really even need any processing

539
00:23:26,789 --> 00:23:32,399
so it was really just you know this this

540
00:23:30,059 --> 00:23:35,759
is what happened on begin interaction

541
00:23:32,400 --> 00:23:37,080
you know when you had a transition this

542
00:23:35,759 --> 00:23:38,519
is all that we were doing is that

543
00:23:37,079 --> 00:23:40,589
whatever the interaction you were over

544
00:23:38,519 --> 00:23:44,940
becomes like the sort of active

545
00:23:40,589 --> 00:23:48,959
interaction right I and that was that

546
00:23:44,940 --> 00:23:51,930
was it so I don't really know we don't

547
00:23:48,960 --> 00:23:54,299
at least for this so far we don't really

548
00:23:51,930 --> 00:23:55,830
need much more than that that would

549
00:23:54,299 --> 00:23:58,259
really be all that would be going on

550
00:23:55,829 --> 00:24:01,470
here and we just need to be able to

551
00:23:58,259 --> 00:24:03,599
process every time we sort of stop

552
00:24:01,470 --> 00:24:05,400
interacting with something we just need

553
00:24:03,599 --> 00:24:10,039
to be able to process whatever the stop

554
00:24:05,400 --> 00:24:10,040
whatever the end of that interaction was

555
00:24:10,460 --> 00:24:15,299
so again looking through here I'm just

556
00:24:12,779 --> 00:24:22,200
not super sure we really needed to do it

557
00:24:15,299 --> 00:24:25,490
this way it seems like we could have

558
00:24:22,200 --> 00:24:25,490
done this all in just one routine

559
00:24:43,720 --> 00:24:49,509
I I mean just even just looking at it it

560
00:24:48,190 --> 00:24:51,250
just really seems like this something we

561
00:24:49,509 --> 00:24:54,490
could probably condense pretty cleanly

562
00:24:51,250 --> 00:24:56,700
and actually just make this a much much

563
00:24:54,490 --> 00:24:59,980
simpler version mm-hmm

564
00:24:56,700 --> 00:25:02,409
for example right you can see here what

565
00:24:59,980 --> 00:25:04,599
we're doing let me just try to make this

566
00:25:02,409 --> 00:25:05,860
a little clearer here so you can see

567
00:25:04,599 --> 00:25:06,398
here what we were doing is saying all

568
00:25:05,859 --> 00:25:08,918
right

569
00:25:06,398 --> 00:25:11,408
there's this concept that there's some

570
00:25:08,919 --> 00:25:14,288
number of transitions that a mouse

571
00:25:11,409 --> 00:25:16,539
button has gone through right so you

572
00:25:14,288 --> 00:25:18,940
know on a given frame if that were zero

573
00:25:16,538 --> 00:25:23,230
so you know however many transitions

574
00:25:18,940 --> 00:25:25,450
there are if that were zero and again I

575
00:25:23,230 --> 00:25:27,909
have no idea why we felt the need to

576
00:25:25,450 --> 00:25:30,220
count backwards for example right

577
00:25:27,909 --> 00:25:35,110
because this loop fundamentally speaking

578
00:25:30,220 --> 00:25:38,528
is just as simple as saying well you

579
00:25:35,109 --> 00:25:42,369
know we need to count up to the number

580
00:25:38,528 --> 00:25:44,619
of transitions right so I you know want

581
00:25:42,369 --> 00:25:49,028
to do this and if the number of

582
00:25:44,619 --> 00:25:53,079
transitions was 1 we didn't want to do

583
00:25:49,028 --> 00:25:54,369
any right at least that seemed like what

584
00:25:53,079 --> 00:26:01,439
we're doing if the half transition count

585
00:25:54,369 --> 00:26:01,439
was 0 it's greater than 1

586
00:26:02,429 --> 00:26:07,090
yeah I think if so in other words if it

587
00:26:05,319 --> 00:26:09,009
was 2 we would do one time through the

588
00:26:07,089 --> 00:26:11,048
loop if it was 1 we wouldn't do any time

589
00:26:09,009 --> 00:26:14,288
through the loop so I mean it seems like

590
00:26:11,048 --> 00:26:16,658
really all we were doing was this you

591
00:26:14,288 --> 00:26:18,579
know so I I don't really know why we

592
00:26:16,659 --> 00:26:22,720
were going to talk sort of walked that

593
00:26:18,579 --> 00:26:24,699
backwards again really kind of a little

594
00:26:22,720 --> 00:26:29,230
bit confusing you can see here right

595
00:26:24,700 --> 00:26:32,548
because let's say this was zero then we

596
00:26:29,230 --> 00:26:35,528
wouldn't do anything right if it was 1

597
00:26:32,548 --> 00:26:41,200
we wouldn't do anything and if it was 2

598
00:26:35,528 --> 00:26:44,679
we would do once so that's the same loop

599
00:26:41,200 --> 00:26:46,899
is this I mean am I missing something

600
00:26:44,679 --> 00:26:51,809
there I I don't know what the rationale

601
00:26:46,898 --> 00:26:51,808
was for sort of this rather obtuse

602
00:26:54,190 --> 00:26:58,880
for this rather obtuse way of doing

603
00:26:56,480 --> 00:27:01,400
things similarly you know you look at

604
00:26:58,880 --> 00:27:02,900
what's happening here and really that's

605
00:27:01,400 --> 00:27:06,310
just going through this loop for the

606
00:27:02,900 --> 00:27:08,780
final time and it's just this thing

607
00:27:06,309 --> 00:27:11,210
that's different there so you might also

608
00:27:08,779 --> 00:27:14,089
say look you really wanted to do that

609
00:27:11,210 --> 00:27:17,750
but what you didn't want to do is call

610
00:27:14,089 --> 00:27:19,549
this right on the on the final one so

611
00:27:17,750 --> 00:27:23,089
you're almost you you know you're almost

612
00:27:19,549 --> 00:27:40,490
just saying look if we were gonna bottom

613
00:27:23,089 --> 00:27:41,990
out here don't don't do it right I mean

614
00:27:40,490 --> 00:27:45,769
that's all we were doing there and then

615
00:27:41,990 --> 00:27:56,569
that you know it's presumably something

616
00:27:45,769 --> 00:27:57,980
you could still check right so sorry it

617
00:27:56,569 --> 00:28:04,069
looks like I've got the wrong one man

618
00:27:57,980 --> 00:28:06,230
there we go so just looking at what was

619
00:28:04,069 --> 00:28:08,470
going on in there it was something like

620
00:28:06,230 --> 00:28:08,470
this

621
00:28:17,368 --> 00:28:24,088
and so again just trying to create

622
00:28:19,440 --> 00:28:27,149
something here that that you know that

623
00:28:24,088 --> 00:28:33,808
makes sense in terms of doing begins and

624
00:28:27,148 --> 00:28:35,908
ends I just want to see if we can

625
00:28:33,808 --> 00:28:39,058
simplify that down to something less

626
00:28:35,909 --> 00:28:42,419
crazy so that we don't have to

627
00:28:39,058 --> 00:28:43,979
constantly be be you know I just feel

628
00:28:42,419 --> 00:28:47,219
like there's a lot of nonsense going on

629
00:28:43,979 --> 00:28:52,919
in there that maybe doesn't make a whole

630
00:28:47,219 --> 00:28:57,409
lot of sense right so let's say that we

631
00:28:52,919 --> 00:28:57,409
hoisted that up here

632
00:29:14,400 --> 00:29:19,060
and I guess what I'd say is let's see if

633
00:29:17,380 --> 00:29:20,740
we can make it so that we can just have

634
00:29:19,059 --> 00:29:22,720
a loop and all of the code is just

635
00:29:20,740 --> 00:29:25,900
contained in here for what we want to do

636
00:29:22,720 --> 00:29:27,610
write something a little bit more like

637
00:29:25,900 --> 00:29:29,170
single switch statement that just

638
00:29:27,609 --> 00:29:31,689
handles everything so you just put the

639
00:29:29,170 --> 00:29:35,890
code in that you wanted for whatever it

640
00:29:31,690 --> 00:29:37,539
was gonna happen here so rather than

641
00:29:35,890 --> 00:29:39,490
having to have different functions for

642
00:29:37,539 --> 00:29:41,049
each of those you could just implement

643
00:29:39,490 --> 00:29:43,000
what you wanted to have happen inside

644
00:29:41,049 --> 00:29:45,430
the switch statement or you can call out

645
00:29:43,000 --> 00:29:48,220
to a function if you'd rather implement

646
00:29:45,430 --> 00:29:52,360
there but make it so that it was easier

647
00:29:48,220 --> 00:29:54,759
to do that so when we're looking at

648
00:29:52,359 --> 00:29:58,179
what's gonna happen here when we go to

649
00:29:54,759 --> 00:30:00,640
do our interaction we're gonna look at

650
00:29:58,180 --> 00:30:02,320
how many times the clicks happened even

651
00:30:00,640 --> 00:30:04,030
if no click happens we want to give

652
00:30:02,319 --> 00:30:07,329
people a chance to process what

653
00:30:04,029 --> 00:30:10,750
effectively is a mouse move and so maybe

654
00:30:07,329 --> 00:30:14,740
we just say look you know there's mouse

655
00:30:10,750 --> 00:30:16,809
move and that's transition index 0 so at

656
00:30:14,740 --> 00:30:19,200
the first time through the loop you were

657
00:30:16,809 --> 00:30:22,629
gonna get the ability to a mouse move

658
00:30:19,200 --> 00:30:26,200
there's gonna be a like Mouse down and a

659
00:30:22,630 --> 00:30:29,350
mouse up right and those are these

660
00:30:26,200 --> 00:30:31,360
things so in terms of whether this is a

661
00:30:29,349 --> 00:30:34,059
mouse down or a mouse up event that

662
00:30:31,359 --> 00:30:35,919
you're supposed to be handling on these

663
00:30:34,059 --> 00:30:38,799
transitions I feel like we could

664
00:30:35,920 --> 00:30:41,440
probably make that be something that

665
00:30:38,799 --> 00:30:46,149
just happens in here so basically saying

666
00:30:41,440 --> 00:30:54,600
okay you know we know whether the thing

667
00:30:46,150 --> 00:30:54,600
ended down or not and so we can just say

668
00:30:56,789 --> 00:31:00,539
maybe we say look

669
00:31:03,298 --> 00:31:09,308
if the transition index is and in fact I

670
00:31:08,019 --> 00:31:12,220
guess the other thing I'd say is this if

671
00:31:09,308 --> 00:31:15,399
the transition index equals zero or not

672
00:31:12,220 --> 00:31:17,169
that tells us what's going on so the

673
00:31:15,400 --> 00:31:19,690
first time through we just process the

674
00:31:17,169 --> 00:31:22,720
mouse move the next time through that

675
00:31:19,690 --> 00:31:31,630
loop we just say well it's gonna be

676
00:31:22,720 --> 00:31:38,980
either mouse down or mouse up right and

677
00:31:31,630 --> 00:31:44,409
oops sorry and the question is just

678
00:31:38,980 --> 00:31:49,120
whether the ended down like whichever

679
00:31:44,409 --> 00:31:51,340
one this is if it ended down then we

680
00:31:49,119 --> 00:31:53,379
know that the transitions are going to

681
00:31:51,339 --> 00:31:58,899
be opposite what they would be if it

682
00:31:53,380 --> 00:32:02,760
ended up in a sense right so the I mean

683
00:31:58,900 --> 00:32:05,080
I suppose it would be nicer if we knew

684
00:32:02,759 --> 00:32:08,440
well I guess even just the transition

685
00:32:05,079 --> 00:32:10,869
counts parity tells us that right so if

686
00:32:08,440 --> 00:32:12,370
the transition count is even then it

687
00:32:10,869 --> 00:32:14,678
tells us one thing if the transition

688
00:32:12,369 --> 00:32:17,279
count is odd it tells us another great

689
00:32:14,679 --> 00:32:20,048
so we kind of have like the ability to

690
00:32:17,279 --> 00:32:25,839
reverse engineer that part of it as well

691
00:32:20,048 --> 00:32:29,798
in in the loop I want to get rid of all

692
00:32:25,839 --> 00:32:33,689
of this stuff here and I guess what I

693
00:32:29,798 --> 00:32:33,690
would say is at the end of all of this

694
00:32:34,798 --> 00:32:43,200
presumably what happens here is this

695
00:32:51,359 --> 00:33:00,729
this code here when we find that we

696
00:32:56,500 --> 00:33:06,160
don't have any current interaction if we

697
00:33:00,730 --> 00:33:10,808
are in a mouse down then we would have

698
00:33:06,160 --> 00:33:12,490
one right so you know we are generally

699
00:33:10,808 --> 00:33:14,889
speaking if we don't have an interaction

700
00:33:12,490 --> 00:33:19,120
we will take hot interactions from then

701
00:33:14,890 --> 00:33:21,120
on and if the mouse goes down then we're

702
00:33:19,119 --> 00:33:24,209
gonna create one of those right and

703
00:33:21,119 --> 00:33:28,168
that's pretty much what's gonna happen

704
00:33:24,210 --> 00:33:31,210
when the mouse goes up we probably just

705
00:33:28,169 --> 00:33:33,759
have to end our interactions but I don't

706
00:33:31,210 --> 00:33:35,529
know like you know maybe that's not

707
00:33:33,759 --> 00:33:37,798
always true I don't know it seems

708
00:33:35,529 --> 00:33:41,288
probably safer to assume that it is true

709
00:33:37,798 --> 00:33:46,839
all the time but I don't know so I guess

710
00:33:41,288 --> 00:33:58,629
you might say look if we don't have one

711
00:33:46,839 --> 00:34:01,209
here then if the mouse goes up then the

712
00:33:58,630 --> 00:34:05,919
interaction gets cleared I'm not sure

713
00:34:01,210 --> 00:34:12,059
how are we doing that before I guess we

714
00:34:05,919 --> 00:34:12,059
were doing it right here right

715
00:34:13,599 --> 00:34:18,019
so we were kind of doing this before I'm

716
00:34:16,639 --> 00:34:19,849
not sure we might want do that a little

717
00:34:18,019 --> 00:34:23,809
bit differently but it's fine

718
00:34:19,849 --> 00:34:25,399
and so you know something like this so

719
00:34:23,809 --> 00:34:27,108
then when we have immediate button then

720
00:34:25,398 --> 00:34:30,199
we kind of know what's going on right

721
00:34:27,108 --> 00:34:34,039
you know we have mouse if the mouse goes

722
00:34:30,199 --> 00:34:35,809
down if the mouse goes up and here I

723
00:34:34,039 --> 00:34:41,050
kind of want this to be sort of a

724
00:34:35,809 --> 00:34:43,369
clearing operation that we would just do

725
00:34:41,050 --> 00:34:45,109
because this is I don't really want that

726
00:34:43,369 --> 00:34:47,960
to be something that people have to call

727
00:34:45,108 --> 00:34:51,739
separately so in census this should

728
00:34:47,960 --> 00:34:54,470
probably be like clear interaction and

729
00:34:51,739 --> 00:34:57,078
that just makes this happen

730
00:34:54,469 --> 00:34:59,209
now we could that's really just a zero

731
00:34:57,079 --> 00:35:01,220
struct call but I I'm just gonna make it

732
00:34:59,210 --> 00:35:03,760
a little bit more systemic systemic here

733
00:35:01,219 --> 00:35:06,049
because I don't really want it to be

734
00:35:03,760 --> 00:35:07,910
ambiguous what's happening there so I

735
00:35:06,050 --> 00:35:10,339
want this to be something that you can

736
00:35:07,909 --> 00:35:13,789
call and just know that whatever was

737
00:35:10,338 --> 00:35:15,380
supposed to happen it will happen and

738
00:35:13,789 --> 00:35:21,380
you don't really need to know what that

739
00:35:15,380 --> 00:35:24,108
is so if this is a dev UI interaction

740
00:35:21,380 --> 00:35:27,980
here then I can I can clear it that way

741
00:35:24,108 --> 00:35:32,568
right and this I'm going to cut and

742
00:35:27,980 --> 00:35:34,119
paste in here and just say look that's

743
00:35:32,568 --> 00:35:37,730
something that everyone has access to

744
00:35:34,119 --> 00:35:43,068
the debug system will call it will call

745
00:35:37,730 --> 00:35:45,079
it here and multiple people will want to

746
00:35:43,068 --> 00:35:48,858
call it so anyone who sort of like ends

747
00:35:45,079 --> 00:35:53,300
the interaction will do it here and when

748
00:35:48,858 --> 00:35:56,119
we do this Mouse up right the we sort of

749
00:35:53,300 --> 00:35:58,940
set ourselves up here and said well we

750
00:35:56,119 --> 00:36:01,220
know that inside the WI we want the

751
00:35:58,940 --> 00:36:03,309
ability to say that there that there's

752
00:36:01,219 --> 00:36:07,959
an ID that we're executing in this case

753
00:36:03,309 --> 00:36:07,960
and so we're gonna go ahead and put that

754
00:36:10,088 --> 00:36:15,769
put that up so that it will get executed

755
00:36:12,829 --> 00:36:17,510
before we clear the interaction now you

756
00:36:15,769 --> 00:36:19,579
could argue and you wouldn't necessarily

757
00:36:17,510 --> 00:36:21,800
be wrong that this should possibly live

758
00:36:19,579 --> 00:36:24,710
inside the editor again I'm proceeding

759
00:36:21,800 --> 00:36:26,570
cautiously with these and I'm not sure

760
00:36:24,710 --> 00:36:27,679
how much they're gonna collapse

761
00:36:26,570 --> 00:36:29,750
I'm allowing there to be a lot of

762
00:36:27,679 --> 00:36:32,029
flexibility here I'm not trying to

763
00:36:29,750 --> 00:36:34,610
create any walls between these systems

764
00:36:32,030 --> 00:36:40,070
I'm like letting them be fully as

765
00:36:34,610 --> 00:36:42,950
spaghetti E as they want to be until I

766
00:36:40,070 --> 00:36:46,340
have a really clear idea of what I want

767
00:36:42,949 --> 00:36:48,079
to happen right because I find that it's

768
00:36:46,340 --> 00:36:50,450
usually the opposite way of what most

769
00:36:48,079 --> 00:36:53,569
people think like usually I don't find

770
00:36:50,449 --> 00:36:55,730
it best to keep things rigorous at the

771
00:36:53,570 --> 00:36:57,500
outset because you end up spending way

772
00:36:55,730 --> 00:36:58,969
too much time usually what you'd much

773
00:36:57,500 --> 00:37:02,599
rather do is keep things fluid at the

774
00:36:58,969 --> 00:37:05,000
outset let them be mangy and weird and

775
00:37:02,599 --> 00:37:07,519
then when you're really sure what's

776
00:37:05,000 --> 00:37:09,320
going on then you start to get rigorous

777
00:37:07,519 --> 00:37:11,869
and draw those boundaries and that's a

778
00:37:09,320 --> 00:37:13,309
much better time to do that because

779
00:37:11,869 --> 00:37:14,359
you're not wasting a lot of time on

780
00:37:13,309 --> 00:37:16,549
things that really shouldn't have

781
00:37:14,360 --> 00:37:27,470
happened because you didn't realize what

782
00:37:16,550 --> 00:37:28,730
was actually going on so if we look at

783
00:37:27,469 --> 00:37:31,819
what's gonna happen with the immediate

784
00:37:28,730 --> 00:37:36,050
button stuff now we're not gonna see the

785
00:37:31,820 --> 00:37:37,490
mouse down here really so you know

786
00:37:36,050 --> 00:37:39,560
really what's happening here is is that

787
00:37:37,489 --> 00:37:41,569
interaction is gonna start here so

788
00:37:39,559 --> 00:37:43,460
really what we're gonna see here only is

789
00:37:41,570 --> 00:37:46,730
Mouse moves we would never see Mouse

790
00:37:43,460 --> 00:37:49,460
downs because Mouse downs are gonna get

791
00:37:46,730 --> 00:37:52,699
handled by the none interaction in in

792
00:37:49,460 --> 00:37:55,760
our case right so we rolling a see mouse

793
00:37:52,699 --> 00:37:58,519
moving mouse up and for us Mouse up is

794
00:37:55,760 --> 00:38:00,140
the execute case Mouse move he's really

795
00:37:58,519 --> 00:38:02,170
just something that would the only thing

796
00:38:00,139 --> 00:38:05,839
that would really do is it would recheck

797
00:38:02,170 --> 00:38:08,710
the for lack of a better term like the

798
00:38:05,840 --> 00:38:11,450
the Box region that we were clicking in

799
00:38:08,710 --> 00:38:13,579
and so you know one thing we could do is

800
00:38:11,449 --> 00:38:14,960
inside this WI interaction we could have

801
00:38:13,579 --> 00:38:17,480
a rectangle there and we could use that

802
00:38:14,960 --> 00:38:19,280
rectangle to see whether or not we

803
00:38:17,480 --> 00:38:21,380
should be highlighting ourselves or not

804
00:38:19,280 --> 00:38:23,360
but we really don't need to so I think

805
00:38:21,380 --> 00:38:26,030
honestly the entire code for this thing

806
00:38:23,360 --> 00:38:29,150
comes down to something like this and

807
00:38:26,030 --> 00:38:33,170
and that's it right so now what we

808
00:38:29,150 --> 00:38:36,700
really need to do is say well how do we

809
00:38:33,170 --> 00:38:38,930
actually set these things you know which

810
00:38:36,699 --> 00:38:40,069
house this what's this actually going to

811
00:38:38,929 --> 00:38:42,199
look like

812
00:38:40,070 --> 00:38:44,480
and so what we need to do there is is

813
00:38:42,199 --> 00:38:47,059
come up with a scheme for figuring out

814
00:38:44,480 --> 00:38:50,750
from which transition you're on whether

815
00:38:47,059 --> 00:38:52,610
the mouse went down or up right and we

816
00:38:50,750 --> 00:38:55,130
know which one it ended I don't know if

817
00:38:52,610 --> 00:38:57,289
we know which one it started on because

818
00:38:55,130 --> 00:38:59,990
I think we passed a rather minimal set

819
00:38:57,289 --> 00:39:02,059
of things here which means that like

820
00:38:59,989 --> 00:39:05,659
ended down is probably all we've got

821
00:39:02,059 --> 00:39:07,849
yeah so you can see we only get that

822
00:39:05,659 --> 00:39:11,239
that's the only actual input we get

823
00:39:07,849 --> 00:39:13,639
there is whether it ended down so we

824
00:39:11,239 --> 00:39:17,269
kind of have to walk it backwards from

825
00:39:13,639 --> 00:39:21,170
there that's not that big a deal right

826
00:39:17,269 --> 00:39:25,179
so what we can do is we can create some

827
00:39:21,170 --> 00:39:31,579
sort of thing that's like mouse button

828
00:39:25,179 --> 00:39:34,789
and we can we can set this based on the

829
00:39:31,579 --> 00:39:37,190
transition count so and I guess we could

830
00:39:34,789 --> 00:39:39,980
all set it for this right so we can say

831
00:39:37,190 --> 00:39:43,760
look the mouse buttons if it ended down

832
00:39:39,980 --> 00:39:46,820
it's gonna be true right but then we

833
00:39:43,760 --> 00:39:49,910
want to not that if the transition count

834
00:39:46,820 --> 00:39:51,650
was odd essentially right because it

835
00:39:49,909 --> 00:39:53,420
will not have started that way if the

836
00:39:51,650 --> 00:39:55,970
transition count was on if it's even we

837
00:39:53,420 --> 00:39:59,170
have the same amount but so what we want

838
00:39:55,969 --> 00:40:05,179
to do is say if the transition counts

839
00:39:59,170 --> 00:40:06,380
mod two right so if it was odd you know

840
00:40:05,179 --> 00:40:07,639
I'm saying meaning because the

841
00:40:06,380 --> 00:40:11,809
transition counts going to be a number

842
00:40:07,639 --> 00:40:15,829
like 1 1 mod 2 would be 1 meaning true

843
00:40:11,809 --> 00:40:19,130
if it's a 2 mod 2 would be 0 meaning 0

844
00:40:15,829 --> 00:40:24,980
if it's even so if it is odd we want to

845
00:40:19,130 --> 00:40:29,660
flip it right then each time through the

846
00:40:24,980 --> 00:40:33,590
loop we just say mouse button equals not

847
00:40:29,659 --> 00:40:37,250
mouse button and that's all we have to

848
00:40:33,590 --> 00:40:40,309
say about that and so this is the state

849
00:40:37,250 --> 00:40:44,360
for this and we can also furthermore

850
00:40:40,309 --> 00:40:46,460
kind of go through this and simplify it

851
00:40:44,360 --> 00:40:48,260
by saying well if that's what it looks

852
00:40:46,460 --> 00:40:51,170
like then really all we're saying is

853
00:40:48,260 --> 00:40:53,050
Mouse down equals mouse button and Mouse

854
00:40:51,170 --> 00:40:55,840
up is not mouse button

855
00:40:53,050 --> 00:40:59,530
right so we're really just saying that

856
00:40:55,840 --> 00:41:01,720
and so that I think is a fairly concise

857
00:40:59,530 --> 00:41:04,180
way of coding everything into one loop

858
00:41:01,719 --> 00:41:05,379
and that's really pretty brief right so

859
00:41:04,179 --> 00:41:08,489
we're just gonna handle all the

860
00:41:05,380 --> 00:41:12,130
interactions right there and off we go

861
00:41:08,489 --> 00:41:13,449
so now if we debug that and get that

862
00:41:12,130 --> 00:41:15,250
work cuz I threw a lot of stuff in there

863
00:41:13,449 --> 00:41:16,449
it was fairly subtle code right so I

864
00:41:15,250 --> 00:41:19,269
don't want to pretend that that was

865
00:41:16,449 --> 00:41:21,699
simple but it is concise and it is not

866
00:41:19,269 --> 00:41:25,239
very intricate there's not a lot to it

867
00:41:21,699 --> 00:41:32,079
right and so really what we want to look

868
00:41:25,239 --> 00:41:34,299
at here is just figure out okay what do

869
00:41:32,079 --> 00:41:36,699
we need to create an ID that can

870
00:41:34,300 --> 00:41:38,260
uniquely describe one of these buttons

871
00:41:36,699 --> 00:41:41,409
because that's really the last piece of

872
00:41:38,260 --> 00:41:46,510
that puzzle let me see

873
00:41:41,409 --> 00:41:48,899
where are our our equal pit part went

874
00:41:46,510 --> 00:41:48,900
wrong here

875
00:41:50,159 --> 00:41:54,609
dev ID as you know what it's probably

876
00:41:53,380 --> 00:41:55,930
fine it's but I just took it's just

877
00:41:54,610 --> 00:42:03,370
probably that the ID was not defined

878
00:41:55,929 --> 00:42:05,699
almost again and I need to actually pass

879
00:42:03,369 --> 00:42:05,699
that

880
00:42:12,268 --> 00:42:18,398
let's see cannot give her argument three

881
00:42:15,639 --> 00:42:19,989
from debye DWI interaction that's a good

882
00:42:18,398 --> 00:42:22,509
point

883
00:42:19,989 --> 00:42:32,259
UI is an undeclared identifier that's

884
00:42:22,509 --> 00:42:34,838
another good point anything else that is

885
00:42:32,259 --> 00:42:38,048
also true it's the UI interaction that

886
00:42:34,838 --> 00:42:42,699
we're talking about here so I think

887
00:42:38,048 --> 00:42:47,048
that's everything we needed so that is

888
00:42:42,699 --> 00:42:49,298
pretty much the complete the complete

889
00:42:47,048 --> 00:42:52,329
solution we just now need a way to

890
00:42:49,298 --> 00:42:59,199
actually create an ID and then I think

891
00:42:52,329 --> 00:43:00,659
we'd be good to go so you know if I well

892
00:42:59,199 --> 00:43:04,418
that was interesting

893
00:43:00,659 --> 00:43:06,999
so it actually speaking of debugging

894
00:43:04,418 --> 00:43:11,018
that code it actually returned true for

895
00:43:06,998 --> 00:43:14,378
this oh you know why probably because

896
00:43:11,018 --> 00:43:16,178
it's set to zero right so in that code

897
00:43:14,378 --> 00:43:19,179
we should probably do something here

898
00:43:16,179 --> 00:43:22,119
where we say that this dev ID if this

899
00:43:19,179 --> 00:43:25,918
dev ID is valid right so we probably

900
00:43:22,119 --> 00:43:25,919
want to do something more like this

901
00:43:38,940 --> 00:43:45,190
something like this I don't know if

902
00:43:42,909 --> 00:43:46,389
we've gotten is valid for that but you

903
00:43:45,190 --> 00:43:48,309
know that's like if you're saying it's

904
00:43:46,389 --> 00:43:50,259
equal you kind of got to know whether or

905
00:43:48,309 --> 00:43:53,559
not it was ever set to anything valid in

906
00:43:50,260 --> 00:44:01,049
the first place and that's not something

907
00:43:53,559 --> 00:44:01,048
we actually know here so in this case

908
00:44:14,219 --> 00:44:18,368
what we want to do is say all right I

909
00:44:16,780 --> 00:44:20,048
need to compute something that says

910
00:44:18,369 --> 00:44:23,048
whether this thing's valid so what I

911
00:44:20,048 --> 00:44:25,750
want to do is to say if either of these

912
00:44:23,048 --> 00:44:27,940
two I don't know why I put about that

913
00:44:25,750 --> 00:44:31,539
way if either of these two things is set

914
00:44:27,940 --> 00:44:38,369
we assume that it is if if they're both

915
00:44:31,539 --> 00:44:43,299
zero then it's not right I can make

916
00:44:38,369 --> 00:44:46,420
these a little bit more full there I'm

917
00:44:43,298 --> 00:44:51,028
gonna pull these out and just see if I

918
00:44:46,420 --> 00:44:58,940
can get away with putting them in here I

919
00:44:51,028 --> 00:45:03,000
don't know if I can I'm gonna try yeah

920
00:44:58,940 --> 00:45:05,670
so now I think we should be able to

921
00:45:03,000 --> 00:45:07,260
launch the editor and not only that code

922
00:45:05,670 --> 00:45:08,970
will run but again we cannot check our

923
00:45:07,260 --> 00:45:10,740
buttons even though the code is now in

924
00:45:08,969 --> 00:45:13,109
there to do so because we don't actually

925
00:45:10,739 --> 00:45:16,259
have any way of telling if they're

926
00:45:13,110 --> 00:45:18,090
accurate or not and furthermore you can

927
00:45:16,260 --> 00:45:19,590
kind of see how everything lights up at

928
00:45:18,090 --> 00:45:21,390
the same time the reason for that is

929
00:45:19,590 --> 00:45:23,670
because they all have the same ID which

930
00:45:21,389 --> 00:45:25,799
is nothing and so they all light up

931
00:45:23,670 --> 00:45:27,360
whenever you hover over one of them and

932
00:45:25,800 --> 00:45:30,330
so what we want to do now is figure out

933
00:45:27,360 --> 00:45:34,440
a way to construct an ID that's going to

934
00:45:30,329 --> 00:45:36,449
be valid in you know in this case so

935
00:45:34,440 --> 00:45:38,130
when we're gonna do the button here now

936
00:45:36,449 --> 00:45:39,329
there's a lot of ways we can do that we

937
00:45:38,130 --> 00:45:40,680
played around with this a bit in the

938
00:45:39,329 --> 00:45:43,829
debug system because we wanted to be

939
00:45:40,679 --> 00:45:46,379
able to create unique settings in our

940
00:45:43,829 --> 00:45:49,349
case here we probably can do basically

941
00:45:46,380 --> 00:45:51,329
the same thing it probably wouldn't be

942
00:45:49,349 --> 00:45:56,150
that hard to just make a macro here that

943
00:45:51,329 --> 00:46:00,719
generates a unique ID in this case and

944
00:45:56,150 --> 00:46:04,019
you know I don't know whether we want to

945
00:46:00,719 --> 00:46:05,819
do that or not it's annoying this should

946
00:46:04,019 --> 00:46:08,309
be a simple matter right in other words

947
00:46:05,820 --> 00:46:09,480
what you should be able to do is inside

948
00:46:08,309 --> 00:46:10,920
the definition of a function if you

949
00:46:09,480 --> 00:46:12,719
let's say look I just need to have the

950
00:46:10,920 --> 00:46:16,800
file on line number like tell me who

951
00:46:12,719 --> 00:46:18,599
called me right pass that along should

952
00:46:16,800 --> 00:46:20,370
be really trivial to do C++ makes it

953
00:46:18,599 --> 00:46:22,380
almost impossible you have to use the

954
00:46:20,369 --> 00:46:25,440
macro browser to do it so you can no

955
00:46:22,380 --> 00:46:27,059
longer overload functions and you can no

956
00:46:25,440 --> 00:46:29,340
longer have name resolution it's really

957
00:46:27,059 --> 00:46:32,670
bad but you know that's what we would

958
00:46:29,340 --> 00:46:34,590
expect from C++ so what we want to do

959
00:46:32,670 --> 00:46:37,320
here is decide whether we want to do

960
00:46:34,590 --> 00:46:39,450
that one simple way we could do it is we

961
00:46:37,320 --> 00:46:43,710
could just use the label text that's

962
00:46:39,449 --> 00:46:47,000
passed in now there are reasons why that

963
00:46:43,710 --> 00:46:50,190
works and reasons why that doesn't work

964
00:46:47,000 --> 00:46:51,780
basically what it boils down to is does

965
00:46:50,190 --> 00:46:54,059
the compiler do string pooling or

966
00:46:51,780 --> 00:46:56,730
doesn't it and so what you can see here

967
00:46:54,059 --> 00:46:57,989
is this compiler does string pooling and

968
00:46:56,730 --> 00:47:01,309
I'll explain what's going on here in a

969
00:46:57,989 --> 00:47:05,129
second and so you can see the actual

970
00:47:01,309 --> 00:47:08,599
activity occur which is the undo redo

971
00:47:05,130 --> 00:47:11,640
and delete which are unique words all

972
00:47:08,599 --> 00:47:12,719
work properly unused

973
00:47:11,639 --> 00:47:15,598
does not

974
00:47:12,719 --> 00:47:18,209
right and the question is what's going

975
00:47:15,599 --> 00:47:20,338
on there well what's going on there is

976
00:47:18,210 --> 00:47:24,088
if I was to use the pointer to the

977
00:47:20,338 --> 00:47:27,259
string as the debug ID or developer ID

978
00:47:24,088 --> 00:47:30,000
here in this case then that only

979
00:47:27,260 --> 00:47:33,390
uniquely identifies the button insofar

980
00:47:30,000 --> 00:47:34,980
as the text itself is unique because

981
00:47:33,389 --> 00:47:38,068
when the compiler goes to build the

982
00:47:34,980 --> 00:47:40,619
string table what most compilers

983
00:47:38,068 --> 00:47:42,300
nowadays will do if assuming

984
00:47:40,619 --> 00:47:43,710
optimizations is on they might not do

985
00:47:42,300 --> 00:47:45,390
this in other cases I don't know but

986
00:47:43,710 --> 00:47:48,358
assuming you're creating an optimized

987
00:47:45,389 --> 00:47:50,730
build at least what many compilers will

988
00:47:48,358 --> 00:47:53,699
do is they'll say well if you have the

989
00:47:50,730 --> 00:47:55,769
same string I'm not gonna put it in the

990
00:47:53,699 --> 00:47:57,929
data segment for this executable twice

991
00:47:55,769 --> 00:47:59,789
right I'm just gonna put it in there

992
00:47:57,929 --> 00:48:01,588
once and then everyone who needs to use

993
00:47:59,789 --> 00:48:05,250
that string I'm just gonna point to that

994
00:48:01,588 --> 00:48:06,838
right and that's a much more efficient

995
00:48:05,250 --> 00:48:08,489
way to do it unfortunately it breaks

996
00:48:06,838 --> 00:48:12,509
anything that was counting on those

997
00:48:08,489 --> 00:48:14,909
strings being unique so what we would

998
00:48:12,510 --> 00:48:19,770
rather have in this case is something

999
00:48:14,909 --> 00:48:23,159
that allows us to uniquely identify the

1000
00:48:19,769 --> 00:48:26,608
place where this button is being used

1001
00:48:23,159 --> 00:48:29,068
maybe or you know something right we we

1002
00:48:26,608 --> 00:48:30,299
want something more and because we want

1003
00:48:29,068 --> 00:48:32,460
something more there I'm just gonna

1004
00:48:30,300 --> 00:48:36,180
suggest that probably what we need to do

1005
00:48:32,460 --> 00:48:38,220
is have this passed in so the we don't

1006
00:48:36,179 --> 00:48:39,899
know how to identify your button because

1007
00:48:38,219 --> 00:48:42,899
again it's just a little too

1008
00:48:39,900 --> 00:48:45,568
unpredictable to use this due to string

1009
00:48:42,900 --> 00:48:46,980
pooling it is a shortcut we could take I

1010
00:48:45,568 --> 00:48:49,619
just don't think it's feasible in this

1011
00:48:46,980 --> 00:48:51,690
case let's just say you've got to make

1012
00:48:49,619 --> 00:48:55,108
your own okay you've got to pass your

1013
00:48:51,690 --> 00:48:59,460
own one in there that's just what you've

1014
00:48:55,108 --> 00:49:01,588
got to do okay um so if we want to do

1015
00:48:59,460 --> 00:49:05,190
that what we could do is say well in

1016
00:49:01,588 --> 00:49:09,179
that case we know that we could make a

1017
00:49:05,190 --> 00:49:12,389
unique ID here a lot more easily we

1018
00:49:09,179 --> 00:49:16,649
could for example try doing something

1019
00:49:12,389 --> 00:49:18,598
where we try to think of what the

1020
00:49:16,650 --> 00:49:20,579
easiest thing to do is like we could do

1021
00:49:18,599 --> 00:49:22,440
something here where we use the point

1022
00:49:20,579 --> 00:49:23,920
index because we know that that's unique

1023
00:49:22,440 --> 00:49:25,778
and

1024
00:49:23,920 --> 00:49:27,519
and or you know what we could do just a

1025
00:49:25,778 --> 00:49:29,880
pointer to the point right we know that

1026
00:49:27,518 --> 00:49:32,439
that's completely unique in this case

1027
00:49:29,880 --> 00:49:34,269
nobody else is using that to create an

1028
00:49:32,440 --> 00:49:36,670
operation in this context so it should

1029
00:49:34,268 --> 00:49:38,048
just be fine you know what I mean so

1030
00:49:36,670 --> 00:49:41,048
that's one thing we could do we could

1031
00:49:38,048 --> 00:49:44,199
also create some IDs for operation types

1032
00:49:41,048 --> 00:49:47,199
that would also work just fine all of

1033
00:49:44,199 --> 00:49:49,568
those things would be fine so trying to

1034
00:49:47,199 --> 00:49:59,739
think of how we want to do that

1035
00:49:49,568 --> 00:50:02,768
I think really all we would want to do

1036
00:49:59,739 --> 00:50:04,868
here is just maybe use the line so I'm

1037
00:50:02,768 --> 00:50:06,750
gonna I'm gonna introduce a concept here

1038
00:50:04,869 --> 00:50:09,818
I think it'd be fairly straightforward

1039
00:50:06,750 --> 00:50:20,739
and that would just be like you know if

1040
00:50:09,818 --> 00:50:22,268
we want to make a dev ID we could do

1041
00:50:20,739 --> 00:50:25,028
something like this where we just say

1042
00:50:22,268 --> 00:50:27,729
all right if we're gonna get a pointer

1043
00:50:25,028 --> 00:50:30,009
here that's gonna uniquely identify the

1044
00:50:27,730 --> 00:50:34,630
thing we're editing you know so this is

1045
00:50:30,009 --> 00:50:37,568
like the pointer you know maybe we've

1046
00:50:34,630 --> 00:50:41,318
got some magic sauce that occurs here

1047
00:50:37,568 --> 00:50:42,548
that tries to give us more than that as

1048
00:50:41,318 --> 00:50:45,130
well

1049
00:50:42,548 --> 00:50:48,880
right like and so you pass us the

1050
00:50:45,130 --> 00:50:51,400
pointer we then say like you know dev ID

1051
00:50:48,880 --> 00:50:52,390
we have some function that that builds

1052
00:50:51,400 --> 00:50:54,970
these I think we've already got some of

1053
00:50:52,389 --> 00:50:56,679
that so I'll go look for them but we're

1054
00:50:54,969 --> 00:50:59,048
gonna pass like whatever the pointer is

1055
00:50:56,679 --> 00:51:00,868
that you wanted us to use and then we'll

1056
00:50:59,048 --> 00:51:03,670
pass you know maybe like the line number

1057
00:51:00,869 --> 00:51:05,440
from the file so that like all of these

1058
00:51:03,670 --> 00:51:07,509
things will be unique just based on

1059
00:51:05,440 --> 00:51:10,389
because they're calling location would

1060
00:51:07,509 --> 00:51:13,240
be unique right and we did more of that

1061
00:51:10,389 --> 00:51:16,480
in the debug interface stuff right we we

1062
00:51:13,239 --> 00:51:19,719
got pretty crazy with that here insert

1063
00:51:16,480 --> 00:51:21,608
of some annoying ways but like unique

1064
00:51:19,719 --> 00:51:23,858
file counter string right you can see

1065
00:51:21,608 --> 00:51:25,509
this thing where we just said we need a

1066
00:51:23,858 --> 00:51:29,078
name for this thing and it's like did

1067
00:51:25,509 --> 00:51:31,990
all this stuff right and so something

1068
00:51:29,079 --> 00:51:33,970
similar to that would also work for us

1069
00:51:31,989 --> 00:51:34,689
where we could have four things that get

1070
00:51:33,969 --> 00:51:36,608
concatenated

1071
00:51:34,690 --> 00:51:38,200
together to make a string that's

1072
00:51:36,608 --> 00:51:39,159
definitely gonna be unique you know what

1073
00:51:38,199 --> 00:51:41,078
I mean

1074
00:51:39,159 --> 00:51:44,679
and so we could even pick you back on

1075
00:51:41,079 --> 00:51:48,039
top of this if we were to make you know

1076
00:51:44,679 --> 00:51:53,858
and I'm just gonna take a look at where

1077
00:51:48,039 --> 00:51:56,349
that's actually used one two three four

1078
00:51:53,858 --> 00:51:59,920
right so it's only right here we could

1079
00:51:56,349 --> 00:52:03,309
just make this be a macro that's just

1080
00:51:59,920 --> 00:52:07,780
like hey compose all these things

1081
00:52:03,309 --> 00:52:09,730
together for us please right so looking

1082
00:52:07,780 --> 00:52:11,680
at this you know we've got this debug

1083
00:52:09,730 --> 00:52:14,769
name and you pass the name in here we

1084
00:52:11,679 --> 00:52:17,879
don't actually ever use the name that's

1085
00:52:14,769 --> 00:52:21,849
kind of just you know historical

1086
00:52:17,880 --> 00:52:24,490
nonsense there right the the D the you

1087
00:52:21,849 --> 00:52:26,230
know this doesn't actually ever get word

1088
00:52:24,489 --> 00:52:28,809
in I think there was some reason we

1089
00:52:26,230 --> 00:52:33,670
couldn't do that I don't really remember

1090
00:52:28,809 --> 00:52:41,500
exactly what it was to be completely

1091
00:52:33,670 --> 00:52:42,670
honest with you yeah I don't really

1092
00:52:41,500 --> 00:52:45,130
remember there was some kind of platform

1093
00:52:42,670 --> 00:52:48,039
we were just with that so you know this

1094
00:52:45,130 --> 00:52:50,289
really is just a concatenate call that

1095
00:52:48,039 --> 00:52:53,409
concatenates three things together so we

1096
00:52:50,289 --> 00:52:56,889
could just make that be what we wanted

1097
00:52:53,409 --> 00:52:58,389
there right so for example in this case

1098
00:52:56,889 --> 00:53:08,759
what I could do is say look let's just

1099
00:52:58,389 --> 00:53:08,759
make this this okay and make that work

1100
00:53:11,960 --> 00:53:18,349
and then we can make this a more generic

1101
00:53:16,010 --> 00:53:27,260
function right so this thing here we

1102
00:53:18,349 --> 00:53:29,450
could just have be like so we just have

1103
00:53:27,260 --> 00:53:31,640
this is a thing that concatenates three

1104
00:53:29,449 --> 00:53:42,009
things together

1105
00:53:31,639 --> 00:53:46,629
and then we've got this right

1106
00:53:42,010 --> 00:53:46,630
similarly what I can do here is say like

1107
00:53:48,760 --> 00:54:01,220
file I'm string and I guess you know it

1108
00:53:59,778 --> 00:54:05,750
could just have its unique thing at the

1109
00:54:01,219 --> 00:54:07,068
end too so it's got like the file the

1110
00:54:05,750 --> 00:54:11,798
line and the counter

1111
00:54:07,068 --> 00:54:11,798
it needs the pound after each of these

1112
00:54:13,869 --> 00:54:19,068
four line encounter so I guess we

1113
00:54:16,369 --> 00:54:22,180
probably would want a similar thing here

1114
00:54:19,068 --> 00:54:22,179
like on cat to

1115
00:54:29,900 --> 00:54:39,030
like that and so now these are

1116
00:54:33,409 --> 00:54:41,730
presumably just utilities we can use to

1117
00:54:39,030 --> 00:54:44,970
do this call now the fact that that one

1118
00:54:41,730 --> 00:54:45,960
gets a pound we probably need to name

1119
00:54:44,969 --> 00:54:52,049
these little more carefully because

1120
00:54:45,960 --> 00:55:00,780
they're not generic so maybe I have to

1121
00:54:52,050 --> 00:55:08,450
do like something more like that so this

1122
00:55:00,780 --> 00:55:08,450
is just file in line your end I mean

1123
00:55:15,750 --> 00:55:20,309
that seems fine to me and then I'll pull

1124
00:55:18,480 --> 00:55:22,050
that one out and that one we can use for

1125
00:55:20,309 --> 00:55:25,710
whatever else so here there would just

1126
00:55:22,050 --> 00:55:27,900
be a thing that's like file and line and

1127
00:55:25,710 --> 00:55:29,909
you don't have to pass anything and that

1128
00:55:27,900 --> 00:55:38,010
just calls filing line underscore with

1129
00:55:29,909 --> 00:55:41,339
file @y right um that all feels pretty

1130
00:55:38,010 --> 00:55:43,680
good to me and you know this maybe is

1131
00:55:41,340 --> 00:55:47,490
better served than at that point sort of

1132
00:55:43,679 --> 00:55:50,509
being a little clearer that it's just

1133
00:55:47,489 --> 00:55:54,358
for this and we'll just leave it at that

1134
00:55:50,510 --> 00:55:58,980
right I think that's good and then

1135
00:55:54,358 --> 00:56:04,650
inside you know maybe inside our types

1136
00:55:58,980 --> 00:56:07,170
here we can make this pound of fine so

1137
00:56:04,650 --> 00:56:09,869
people who need to use it and so what

1138
00:56:07,170 --> 00:56:12,960
that lets me do is inside the WI stuff

1139
00:56:09,869 --> 00:56:16,380
then we can make this be really clear so

1140
00:56:12,960 --> 00:56:19,858
if we do dev ID from pointer then we can

1141
00:56:16,380 --> 00:56:23,130
call file in line here and get a string

1142
00:56:19,858 --> 00:56:24,509
that's actually like what we want so in

1143
00:56:23,130 --> 00:56:26,338
addition to the pointer to the thing to

1144
00:56:24,510 --> 00:56:27,900
edit we can also unique based on that

1145
00:56:26,338 --> 00:56:30,420
and that gives us a pretty powerful way

1146
00:56:27,900 --> 00:56:36,950
of generating locational code locational

1147
00:56:30,420 --> 00:56:36,950
things that will be what we want right

1148
00:56:37,159 --> 00:56:45,779
and so then inside the actual code for

1149
00:56:40,440 --> 00:56:52,280
that it's quite simple the dev ID for

1150
00:56:45,780 --> 00:56:52,280
anything of that format

1151
00:56:56,190 --> 00:57:02,909
in this case - I want to make sure we

1152
00:56:59,360 --> 00:57:05,220
cast away Const there cuz C compilers

1153
00:57:02,909 --> 00:57:09,149
love to make strings constant nowadays

1154
00:57:05,219 --> 00:57:16,230
which I hate I cannot stand that I hate

1155
00:57:09,150 --> 00:57:17,610
Const in general and so I would have

1156
00:57:16,230 --> 00:57:19,469
preferred it if that was something that

1157
00:57:17,610 --> 00:57:20,820
I got to the side because some people

1158
00:57:19,469 --> 00:57:22,409
like it and they're welcome to use it

1159
00:57:20,820 --> 00:57:23,940
but I don't and don't want to have to

1160
00:57:22,409 --> 00:57:27,629
use it but you know they force you to

1161
00:57:23,940 --> 00:57:29,880
use it it's really annoying anyway so if

1162
00:57:27,630 --> 00:57:33,210
we're gonna do it this way here's our

1163
00:57:29,880 --> 00:57:34,920
results and in this case it just looked

1164
00:57:33,210 --> 00:57:40,829
like that right so you just end up with

1165
00:57:34,920 --> 00:57:43,440
a pretty easy way to you to make those

1166
00:57:40,829 --> 00:57:45,599
things unique so at that point I think

1167
00:57:43,440 --> 00:57:48,599
we're more or less done with a good way

1168
00:57:45,599 --> 00:57:51,920
to get those we can just say dev ID from

1169
00:57:48,599 --> 00:57:55,199
pointer and we can say look here's the

1170
00:57:51,920 --> 00:57:58,920
the point that we reading and each of

1171
00:57:55,199 --> 00:58:00,989
the buttons is now pretty trivial it can

1172
00:57:58,920 --> 00:58:02,460
pretty trivially do that it's so can all

1173
00:58:00,989 --> 00:58:05,009
of these editors as well which is

1174
00:58:02,460 --> 00:58:07,860
probably what we'll want to do as we go

1175
00:58:05,010 --> 00:58:10,260
so that gives us a good way to make

1176
00:58:07,860 --> 00:58:13,079
those unique in here it's a little bit

1177
00:58:10,260 --> 00:58:14,760
trickier to do but because we don't have

1178
00:58:13,079 --> 00:58:16,650
a point that we're adding but it's

1179
00:58:14,760 --> 00:58:19,500
crucial to remember well that's okay

1180
00:58:16,650 --> 00:58:22,260
because actually just the editor itself

1181
00:58:19,500 --> 00:58:24,300
is plenty because these are unique there

1182
00:58:22,260 --> 00:58:26,160
they don't get replicated multiple times

1183
00:58:24,300 --> 00:58:29,430
there's only one save only one revert

1184
00:58:26,159 --> 00:58:31,019
only one undo and one redo so really we

1185
00:58:29,429 --> 00:58:32,909
can pass any pointer here I mean we'll

1186
00:58:31,019 --> 00:58:34,650
pass the editor but we could just pass 0

1187
00:58:32,909 --> 00:58:36,869
and it would even be fine because we

1188
00:58:34,650 --> 00:58:38,849
don't need to do anything else there

1189
00:58:36,869 --> 00:58:42,449
right we don't need to do anything else

1190
00:58:38,849 --> 00:58:45,599
to make those things unique so now all

1191
00:58:42,449 --> 00:58:48,149
of our pointers should be unique and not

1192
00:58:45,599 --> 00:58:50,309
dependent on string pooling anymore

1193
00:58:48,150 --> 00:58:52,289
because we're actually creating strings

1194
00:58:50,309 --> 00:58:54,690
that are themselves unique for the

1195
00:58:52,289 --> 00:58:57,179
location that they're being used and so

1196
00:58:54,690 --> 00:58:59,820
now if I go over things I get a nice

1197
00:58:57,179 --> 00:59:01,649
clean interface exactly the way that it

1198
00:58:59,820 --> 00:59:04,470
should be working and that pretty much

1199
00:59:01,650 --> 00:59:07,110
concludes what we have to do for that

1200
00:59:04,469 --> 00:59:10,059
part of the process right

1201
00:59:07,110 --> 00:59:12,700
okay so let's move on now to some things

1202
00:59:10,059 --> 00:59:14,349
that are a little bit more specific I

1203
00:59:12,699 --> 00:59:16,539
also I don't know if this actually works

1204
00:59:14,349 --> 00:59:18,519
now like if I click on this so it does

1205
00:59:16,539 --> 00:59:20,739
so our interface is actually sort of

1206
00:59:18,519 --> 00:59:22,360
working now right like if I click on

1207
00:59:20,739 --> 00:59:24,729
this thing can see that I've added I can

1208
00:59:22,360 --> 00:59:27,309
add points to it I can also probably

1209
00:59:24,730 --> 00:59:28,539
delete points although you know you can

1210
00:59:27,309 --> 00:59:30,489
kind of see the next part of the thing

1211
00:59:28,539 --> 00:59:32,380
that we have to go through to do that is

1212
00:59:30,489 --> 00:59:35,859
actually working on the selection stuff

1213
00:59:32,380 --> 00:59:38,200
right so let me quickly do that but you

1214
00:59:35,860 --> 00:59:39,460
can kind of see that we have you know

1215
00:59:38,199 --> 00:59:42,210
we've got our interface working now so

1216
00:59:39,460 --> 00:59:46,630
we can start to debug this stuff right

1217
00:59:42,210 --> 00:59:51,490
I'm not sure what happened here what did

1218
00:59:46,630 --> 00:59:59,460
we get why did we get a bug there with

1219
00:59:51,489 --> 00:59:59,459
uh with our with our undo Sentinel oh I

1220
01:00:00,329 --> 01:00:09,849
do believe we never actually created

1221
01:00:06,519 --> 01:00:13,059
those sentinels during in it so actually

1222
01:00:09,849 --> 01:00:15,429
all of this stuff kind of has to be set

1223
01:00:13,059 --> 01:00:18,309
properly and we we didn't do that

1224
01:00:15,429 --> 01:00:19,929
so there is an initialized editor and in

1225
01:00:18,309 --> 01:00:21,519
the initialized editor one of the things

1226
01:00:19,929 --> 01:00:26,829
we need to do is just make sure these

1227
01:00:21,519 --> 01:00:33,250
sentinels are linked up and so you know

1228
01:00:26,829 --> 01:00:40,349
in order to do that we need to do this

1229
01:00:33,250 --> 01:00:40,349
code right so we want to kind of have I

1230
01:00:43,949 --> 01:00:52,559
don't know what you want to call this

1231
01:00:46,599 --> 01:00:52,559
but like it's just points itself

1232
01:00:56,280 --> 01:01:04,340
I don't know what to call that

1233
01:01:05,010 --> 01:01:11,880
but it's this and what we need to do at

1234
01:01:09,929 --> 01:01:13,829
the beginning is our two sentinels

1235
01:01:11,880 --> 01:01:15,780
actually need to be set up to point to

1236
01:01:13,829 --> 01:01:17,279
each other it's the one really annoying

1237
01:01:15,780 --> 01:01:19,950
thing about doubly-linked lists

1238
01:01:17,280 --> 01:01:22,080
implemented this way it's unfortunate

1239
01:01:19,949 --> 01:01:24,839
because clear to zero is pretty much

1240
01:01:22,079 --> 01:01:26,759
always the right solution and it's it's

1241
01:01:24,840 --> 01:01:28,980
one of those unfortunate algorithms that

1242
01:01:26,760 --> 01:01:33,060
is nice in all other ways but that way

1243
01:01:28,980 --> 01:01:36,059
not very much you know what can I say

1244
01:01:33,059 --> 01:01:40,829
not everything it doesn't all work the

1245
01:01:36,059 --> 01:01:48,869
way you might want so yeah that should

1246
01:01:40,829 --> 01:01:52,889
do us a little bit better there when

1247
01:01:48,869 --> 01:01:54,869
looking at this here so let me just go

1248
01:01:52,889 --> 01:01:59,460
ahead and like do some of these and then

1249
01:01:54,869 --> 01:02:03,829
try so undo and redo look like they're

1250
01:01:59,460 --> 01:02:08,490
not available right now for some reason

1251
01:02:03,829 --> 01:02:12,019
not sure why that is so undo available

1252
01:02:08,489 --> 01:02:12,019
and redo available

1253
01:02:18,300 --> 01:02:24,210
if this is not empty and that's an empty

1254
01:02:21,000 --> 01:02:29,809
that's correct is empty is set to result

1255
01:02:24,210 --> 01:02:35,099
this next equals list that's correct

1256
01:02:29,809 --> 01:02:36,809
so for some reason we were not it looks

1257
01:02:35,099 --> 01:02:43,049
like we were not pushing on a change

1258
01:02:36,809 --> 01:02:48,179
there is that correct you allocate the

1259
01:02:43,050 --> 01:02:49,920
edit now and we did not push it on right

1260
01:02:48,179 --> 01:02:54,529
because we've got all this stuff here

1261
01:02:49,920 --> 01:02:54,530
and we just didn't simply didn't do it

1262
01:02:56,119 --> 01:03:02,430
so here's like all of that list code

1263
01:02:58,860 --> 01:03:04,590
right that we're using here and we

1264
01:03:02,429 --> 01:03:05,849
simply did not do a push first which is

1265
01:03:04,590 --> 01:03:07,350
what we should have done right so we

1266
01:03:05,849 --> 01:03:09,389
created the edit but we never actually

1267
01:03:07,349 --> 01:03:14,368
stored it so you know we want to do a

1268
01:03:09,389 --> 01:03:22,679
push for us gonna be edit and I

1269
01:03:14,369 --> 01:03:25,350
presumably I have to here say okay and

1270
01:03:22,679 --> 01:03:27,509
and actually now think about it when you

1271
01:03:25,349 --> 01:03:30,269
allocate it editor edit it probably

1272
01:03:27,510 --> 01:03:32,010
should always go on there right I mean

1273
01:03:30,269 --> 01:03:42,570
it really probably should just do that

1274
01:03:32,010 --> 01:03:44,280
right here I would think it's hard to

1275
01:03:42,570 --> 01:03:45,900
say because maybe you want to make one

1276
01:03:44,280 --> 01:03:50,490
of these sometimes when that's not true

1277
01:03:45,900 --> 01:03:53,490
but not sure when that wouldn't be the

1278
01:03:50,489 --> 01:03:56,399
case so I kind of think that should

1279
01:03:53,489 --> 01:04:01,549
happen here and I think that's probably

1280
01:03:56,400 --> 01:04:01,550
yeah what I would prefer

1281
01:04:03,050 --> 01:04:07,650
um we really don't need to sentinel eyes

1282
01:04:06,000 --> 01:04:09,510
that either cuz if you look at what

1283
01:04:07,650 --> 01:04:10,800
happens inside push first I don't think

1284
01:04:09,510 --> 01:04:12,780
we really need to do that because it

1285
01:04:10,800 --> 01:04:14,940
when you call link on one of these

1286
01:04:12,780 --> 01:04:16,680
things you can see that it just

1287
01:04:14,940 --> 01:04:18,869
overwrites those two fields immediately

1288
01:04:16,679 --> 01:04:24,329
so really this doesn't need to do that

1289
01:04:18,869 --> 01:04:26,969
it can really just be be back so I think

1290
01:04:24,329 --> 01:04:34,710
that's all fine and we'll give that a

1291
01:04:26,969 --> 01:04:42,689
shot as well now okay so looking through

1292
01:04:34,710 --> 01:04:47,909
here now if I do this we can see what's

1293
01:04:42,690 --> 01:04:50,450
going on I did a pop first on this and I

1294
01:04:47,909 --> 01:04:55,710
didn't get back and edit for some reason

1295
01:04:50,449 --> 01:04:58,129
oh I know why that is true so another

1296
01:04:55,710 --> 01:05:02,880
thing that we didn't yet implement is

1297
01:04:58,130 --> 01:05:07,289
inside the dev UI when we are done so

1298
01:05:02,880 --> 01:05:10,890
when we end a UI frame we need to clear

1299
01:05:07,289 --> 01:05:12,840
out anyone who is executing so the ID to

1300
01:05:10,889 --> 01:05:16,639
execute has to get cleared at the end

1301
01:05:12,840 --> 01:05:18,840
because that's no longer happening right

1302
01:05:16,639 --> 01:05:20,759
so it would have just kept trying to

1303
01:05:18,840 --> 01:05:22,620
undo forever all the way back to the

1304
01:05:20,760 --> 01:05:24,420
beginning and eventually it will run out

1305
01:05:22,619 --> 01:05:27,690
of links and correctly hit the assertion

1306
01:05:24,420 --> 01:05:29,610
that says why am I being told to undo

1307
01:05:27,690 --> 01:05:31,019
right now there is nothing to undo the

1308
01:05:29,610 --> 01:05:36,150
user should not have been given that

1309
01:05:31,019 --> 01:05:38,110
option right so we gotta figure out

1310
01:05:36,150 --> 01:05:41,360
where that's Oh

1311
01:05:38,110 --> 01:05:41,360
[Music]

1312
01:05:45,190 --> 01:05:53,030
on endui frame it's actually going to be

1313
01:05:49,550 --> 01:05:59,090
inside it's gonna be right before that

1314
01:05:53,030 --> 01:06:00,590
that I need to execute got set so it's

1315
01:05:59,090 --> 01:06:01,940
really actually a little harder to

1316
01:06:00,590 --> 01:06:03,440
figure out where that would go

1317
01:06:01,940 --> 01:06:08,980
right because we need that to be

1318
01:06:03,440 --> 01:06:08,980
happening in the pin that pass so

1319
01:06:18,710 --> 01:06:28,190
I don't really love the idea of having

1320
01:06:21,949 --> 01:06:30,049
this have to be like stratified but you

1321
01:06:28,190 --> 01:06:31,849
can see what happens there right even

1322
01:06:30,050 --> 01:06:35,030
though it's ID to execute needs to last

1323
01:06:31,849 --> 01:06:38,599
one frame and one frame only so after

1324
01:06:35,030 --> 01:06:40,490
you're done executing it once you need

1325
01:06:38,599 --> 01:06:42,679
to go I can't do that an end frame

1326
01:06:40,489 --> 01:06:47,000
because it needs to go to the next frame

1327
01:06:42,679 --> 01:06:51,079
to do that you know what I mean and so

1328
01:06:47,000 --> 01:06:53,590
it's a little bit janky there how that

1329
01:06:51,079 --> 01:06:53,590
would really work

1330
01:07:02,889 --> 01:07:10,929
you know it's very much like this so

1331
01:07:07,338 --> 01:07:10,929
it's almost like you need to do this

1332
01:07:11,650 --> 01:07:27,650
right so it's like yeah on mu I frame

1333
01:07:19,039 --> 01:07:32,440
you know this becomes that and that

1334
01:07:27,650 --> 01:07:46,460
becomes that you know which isn't great

1335
01:07:32,440 --> 01:07:49,780
I don't know how I feel about that it's

1336
01:07:46,460 --> 01:07:49,780
not my favorite thing in the world

1337
01:07:59,630 --> 01:08:07,590
um but hey you know it works just fine

1338
01:08:02,849 --> 01:08:11,009
for now and are like undo/redo and

1339
01:08:07,590 --> 01:08:12,750
everything is good and off we go so

1340
01:08:11,010 --> 01:08:22,020
let's take a look at revert there

1341
01:08:12,750 --> 01:08:24,149
because we've got sort of we've got sort

1342
01:08:22,020 --> 01:08:26,400
of another thing that that's just

1343
01:08:24,149 --> 01:08:29,159
incorrectly Emma so I think our revert

1344
01:08:26,399 --> 01:08:32,639
may also pretty much be implemented okay

1345
01:08:29,159 --> 01:08:34,528
know what that's doing there when we're

1346
01:08:32,640 --> 01:08:36,298
doing this we want to pop back to

1347
01:08:34,529 --> 01:08:38,910
whatever we thought are clean undo

1348
01:08:36,298 --> 01:08:40,439
Sentinel was our clean undo Sentinel

1349
01:08:38,909 --> 01:08:43,439
therefore has get initialized at the

1350
01:08:40,439 --> 01:08:46,500
beginning as well so right now what it

1351
01:08:43,439 --> 01:08:51,329
would be is whatever you know the undo

1352
01:08:46,500 --> 01:08:54,270
Sentinel itself is so I think that's

1353
01:08:51,329 --> 01:08:56,548
just probably all we really need so in

1354
01:08:54,270 --> 01:08:58,049
terms of reverting to the state of the

1355
01:08:56,548 --> 01:09:04,199
code at the beginning I think that's all

1356
01:08:58,048 --> 01:09:06,720
we really need so yeah so I think like

1357
01:09:04,199 --> 01:09:10,759
if I do a bunch of these here and then

1358
01:09:06,720 --> 01:09:10,759
just do revert that should work right

1359
01:09:11,600 --> 01:09:17,039
yeah so basically the entire editor is

1360
01:09:15,029 --> 01:09:19,500
now implemented and working properly it

1361
01:09:17,039 --> 01:09:21,359
looks like and so what we really need to

1362
01:09:19,500 --> 01:09:25,259
do now is just work on the UI part some

1363
01:09:21,359 --> 01:09:26,910
more I will say deletion doesn't appear

1364
01:09:25,259 --> 01:09:28,859
to be working so that is one feature

1365
01:09:26,909 --> 01:09:31,528
that appears wrong because I thought you

1366
01:09:28,859 --> 01:09:33,329
could delete and I'm not seeing that

1367
01:09:31,529 --> 01:09:34,109
happen so I would be just going to know

1368
01:09:33,329 --> 01:09:36,059
why

1369
01:09:34,109 --> 01:09:40,650
delete didn't work you can see the Edit

1370
01:09:36,060 --> 01:09:43,620
align point thing happening here and it

1371
01:09:40,649 --> 01:09:51,239
should be setting that a line point to

1372
01:09:43,619 --> 01:09:53,670
none mmm but it doesn't seem to be for

1373
01:09:51,239 --> 01:09:56,460
whatever reason so something's going on

1374
01:09:53,670 --> 01:10:01,529
there let me see what's happening in

1375
01:09:56,460 --> 01:10:10,109
edit align point so it's gonna set the

1376
01:10:01,529 --> 01:10:13,609
type here it looks like let me see what

1377
01:10:10,109 --> 01:10:13,609
set a line point has to say

1378
01:10:20,989 --> 01:10:32,340
so the two-parent filled if that's set

1379
01:10:27,090 --> 01:10:33,569
to true what did we well even if it

1380
01:10:32,340 --> 01:10:37,560
isn't it doesn't really matter it's

1381
01:10:33,569 --> 01:10:40,500
still gonna be the type Ord with that so

1382
01:10:37,560 --> 01:10:43,020
in theory this should just work unless

1383
01:10:40,500 --> 01:10:47,060
we screwed up like the get type call or

1384
01:10:43,020 --> 01:10:49,260
something which does it look like we did

1385
01:10:47,060 --> 01:10:52,350
how much time do I have by the way does

1386
01:10:49,260 --> 01:10:55,079
anyone know when we start 12:45 so I got

1387
01:10:52,350 --> 01:10:57,150
what like 45 minutes something like that

1388
01:10:55,079 --> 01:10:59,210
I don't know I might assume I got like

1389
01:10:57,149 --> 01:11:02,099
45 minutes

1390
01:10:59,210 --> 01:11:04,590
so anyway inside here where we've got a

1391
01:11:02,100 --> 01:11:06,060
set a line point I I don't know if we're

1392
01:11:04,590 --> 01:11:07,770
just like like what's going on there but

1393
01:11:06,060 --> 01:11:08,970
we'll verify that it gets called because

1394
01:11:07,770 --> 01:11:10,650
you know maybe it doesn't get called for

1395
01:11:08,970 --> 01:11:13,590
some reason but and you know maybe the

1396
01:11:10,649 --> 01:11:16,799
UI is busted somehow I'm not sure but in

1397
01:11:13,590 --> 01:11:20,069
terms of what's going on here oh I see

1398
01:11:16,800 --> 01:11:24,150
why it's it should be doing that that's

1399
01:11:20,069 --> 01:11:26,659
the problem there also when we do this

1400
01:11:24,149 --> 01:11:32,609
this delete should set that to false

1401
01:11:26,659 --> 01:11:34,649
probably I would think and probably all

1402
01:11:32,609 --> 01:11:40,529
of this stuff should just be set back to

1403
01:11:34,649 --> 01:11:41,909
the default you know so that should I

1404
01:11:40,529 --> 01:11:43,559
think that was just a case of us calling

1405
01:11:41,909 --> 01:11:48,329
with the wrong things and also this was

1406
01:11:43,560 --> 01:11:49,770
a bug it should be type because

1407
01:11:48,329 --> 01:11:51,180
obviously you could still have that to

1408
01:11:49,770 --> 01:11:55,680
parent flag set and technically it's

1409
01:11:51,180 --> 01:11:59,010
still in an uninitialized point okay so

1410
01:11:55,680 --> 01:12:01,940
let's see now okay so now I can delete

1411
01:11:59,010 --> 01:12:01,940
which is good right

1412
01:12:14,229 --> 01:12:18,859
so everything looks pretty clean there

1413
01:12:16,550 --> 01:12:22,279
right and this allows us to do

1414
01:12:18,859 --> 01:12:24,199
everything that we wanted to do so what

1415
01:12:22,279 --> 01:12:27,349
we're really talking about now is is a

1416
01:12:24,199 --> 01:12:30,319
little bit more UI work because all of

1417
01:12:27,350 --> 01:12:33,110
this stuff now needs to actually be nice

1418
01:12:30,319 --> 01:12:34,489
and usable which means tracking whether

1419
01:12:33,109 --> 01:12:36,739
we're selecting something or not because

1420
01:12:34,489 --> 01:12:40,279
we need to do that and then actually

1421
01:12:36,739 --> 01:12:44,420
providing these some way to edit these

1422
01:12:40,279 --> 01:12:47,149
in a way that is usable right something

1423
01:12:44,420 --> 01:12:49,100
right we got to have something there and

1424
01:12:47,149 --> 01:12:51,339
I'm not sure what that what that's going

1425
01:12:49,100 --> 01:12:51,340
to be

1426
01:12:58,949 --> 01:13:15,659
I guess I would say that I guess I would

1427
01:13:13,140 --> 01:13:18,240
say that the most pressing concerns are

1428
01:13:15,659 --> 01:13:19,829
we'll start with selection we'll put

1429
01:13:18,239 --> 01:13:23,489
that in there

1430
01:13:19,829 --> 01:13:25,380
and then we'll go to putting this in a

1431
01:13:23,489 --> 01:13:27,569
window and placing it somewhere on the

1432
01:13:25,380 --> 01:13:29,670
screen that's not right here because

1433
01:13:27,569 --> 01:13:31,769
then it's pretty usable for the creation

1434
01:13:29,670 --> 01:13:34,649
and deletion and then we'll just work on

1435
01:13:31,770 --> 01:13:37,020
getting these interactive so some way of

1436
01:13:34,649 --> 01:13:39,239
adding those those are all the things I

1437
01:13:37,020 --> 01:13:41,460
think that I have to happen and then

1438
01:13:39,239 --> 01:13:43,710
we'd be done with the UI the final step

1439
01:13:41,460 --> 01:13:45,710
is then implanting the save features so

1440
01:13:43,710 --> 01:13:49,350
that when we save it writes it back two

1441
01:13:45,710 --> 01:13:51,899
different things right I think that's

1442
01:13:49,350 --> 01:13:54,980
really all we need to do all we need to

1443
01:13:51,899 --> 01:13:58,979
do it's fair bit of work but you know

1444
01:13:54,979 --> 01:14:01,829
all right so I think that's good so

1445
01:13:58,979 --> 01:14:04,199
moving forward I want to do something

1446
01:14:01,829 --> 01:14:05,970
here we say all right you know looking

1447
01:14:04,199 --> 01:14:09,809
at this we've got this active asset

1448
01:14:05,970 --> 01:14:12,140
index so we've already sort of set

1449
01:14:09,810 --> 01:14:15,240
ourselves up for success quote-unquote

1450
01:14:12,140 --> 01:14:17,640
because what we what we do have here is

1451
01:14:15,239 --> 01:14:22,130
just that the highlight right I mean you

1452
01:14:17,640 --> 01:14:22,130
can see here the highlight asset index

1453
01:14:22,159 --> 01:14:30,090
in any particular case is it's set to

1454
01:14:27,720 --> 01:14:32,310
the active one already and that's the

1455
01:14:30,090 --> 01:14:34,409
one that we edit so really in here where

1456
01:14:32,310 --> 01:14:36,240
we do should hit test and we come back

1457
01:14:34,409 --> 01:14:41,309
with one of these things and you know

1458
01:14:36,239 --> 01:14:48,389
whatever else that's really the place

1459
01:14:41,310 --> 01:14:51,210
where we can we can control when we set

1460
01:14:48,390 --> 01:14:54,630
these things so inside the hip test here

1461
01:14:51,210 --> 01:14:57,000
what we want to do is say don't don't do

1462
01:14:54,630 --> 01:15:02,190
this operation like this is not what we

1463
01:14:57,000 --> 01:15:04,350
wanted to do if we were in the middle of

1464
01:15:02,189 --> 01:15:08,809
actually editing something so what we

1465
01:15:04,350 --> 01:15:08,810
want to do here is say something like

1466
01:15:22,329 --> 01:15:36,948
that something like that and robably we

1467
01:15:34,399 --> 01:15:42,920
want to wait for mass down so in here I

1468
01:15:36,948 --> 01:15:51,049
think I'm not really sure what I want to

1469
01:15:42,920 --> 01:15:54,770
say about this it's a little squeaky

1470
01:15:51,050 --> 01:16:00,730
let's let's um think about this a little

1471
01:15:54,770 --> 01:16:00,730
bit more broadly so inside handmade hero

1472
01:16:01,000 --> 01:16:08,060
the main loop right here you can see us

1473
01:16:05,779 --> 01:16:10,099
doing our hip test and then we end the

1474
01:16:08,060 --> 01:16:13,580
hit test here and then we do our UI

1475
01:16:10,100 --> 01:16:17,750
stuff I think what we want in this case

1476
01:16:13,579 --> 01:16:21,170
right is we want to be able to defer any

1477
01:16:17,750 --> 01:16:23,659
activities till later so I think what we

1478
01:16:21,170 --> 01:16:30,230
want to do is say okay when we get this

1479
01:16:23,659 --> 01:16:33,649
hit test back don't take any action let

1480
01:16:30,229 --> 01:16:35,238
the action get taken later on so in the

1481
01:16:33,649 --> 01:16:39,409
code that actually is processing the UI

1482
01:16:35,238 --> 01:16:41,839
will deal with it there so in here when

1483
01:16:39,409 --> 01:16:49,309
we get the hip test back and that hip

1484
01:16:41,840 --> 01:16:52,550
test is just pointing to this right so

1485
01:16:49,310 --> 01:16:58,520
we have we don't need this piece of

1486
01:16:52,550 --> 01:17:00,770
information at all really so honestly

1487
01:16:58,520 --> 01:17:02,989
this is just it doesn't matter I don't

1488
01:17:00,770 --> 01:17:05,710
think so we can just get rid of that I

1489
01:17:02,988 --> 01:17:05,709
think

1490
01:17:10,020 --> 01:17:16,360
and so I think the right solution is

1491
01:17:14,020 --> 01:17:19,030
just put that there when we actually

1492
01:17:16,359 --> 01:17:21,130
have the the code to do stuff for editor

1493
01:17:19,029 --> 01:17:23,920
interactions what we'll do here is say

1494
01:17:21,130 --> 01:17:28,539
look when we are done with all this

1495
01:17:23,920 --> 01:17:30,908
stuff if we were gonna click on things

1496
01:17:28,539 --> 01:17:32,679
right so we come through here and we say

1497
01:17:30,908 --> 01:17:35,859
you know all right we're doing we're

1498
01:17:32,679 --> 01:17:38,590
doing our clicks if there was nothing to

1499
01:17:35,859 --> 01:17:41,500
interact with you know we can we can

1500
01:17:38,590 --> 01:17:44,289
look for this stuff here if when the

1501
01:17:41,500 --> 01:17:46,630
mouse button goes down we look for an

1502
01:17:44,289 --> 01:17:49,658
interaction and there isn't an

1503
01:17:46,630 --> 01:17:54,760
interaction to use then we can do the

1504
01:17:49,658 --> 01:17:56,888
asset pick right so meaning another way

1505
01:17:54,760 --> 01:18:00,610
of saying it is the interaction is the

1506
01:17:56,889 --> 01:18:05,319
asset pick interaction would be another

1507
01:18:00,609 --> 01:18:08,759
way of saying that so you know we could

1508
01:18:05,319 --> 01:18:15,219
even make it so that here what we say is

1509
01:18:08,760 --> 01:18:17,590
look if if the next hot interaction was

1510
01:18:15,219 --> 01:18:20,319
not said anything set it to something

1511
01:18:17,590 --> 01:18:23,800
that will do that pick I guess it's how

1512
01:18:20,319 --> 01:18:25,719
I would say it so I'm just integrating

1513
01:18:23,800 --> 01:18:29,020
these two things together in what

1514
01:18:25,719 --> 01:18:36,939
becomes a fairly clean way I think so

1515
01:18:29,020 --> 01:18:40,030
you know if the UI next hot interaction

1516
01:18:36,939 --> 01:18:43,839
isn't isn't a thing then what I could

1517
01:18:40,029 --> 01:18:51,179
say is well alright if you know what

1518
01:18:43,840 --> 01:18:53,909
what the if what we were going to do I

1519
01:18:51,179 --> 01:18:57,908
guess it's just I could even just set it

1520
01:18:53,908 --> 01:19:01,059
blindly to be the hot you know pick pick

1521
01:18:57,908 --> 01:19:03,368
the hot item right so to do this thing

1522
01:19:01,060 --> 01:19:08,920
right so then we would just have a thing

1523
01:19:03,368 --> 01:19:13,269
that's like case W I pick entity right

1524
01:19:08,920 --> 01:19:17,230
or you know pick asset and it just does

1525
01:19:13,270 --> 01:19:19,270
this and instead of getting up off of

1526
01:19:17,229 --> 01:19:22,079
that it's going to get it off of the

1527
01:19:19,270 --> 01:19:22,080
editors hot group

1528
01:19:22,250 --> 01:19:29,930
like so and so we just need to make this

1529
01:19:26,520 --> 01:19:34,200
thing be what you would do on Mouse down

1530
01:19:29,930 --> 01:19:35,940
so if you you know if you were gonna

1531
01:19:34,199 --> 01:19:38,760
pick one of these you would just it

1532
01:19:35,939 --> 01:19:40,289
would just do it and I guess more

1533
01:19:38,760 --> 01:19:41,880
correctly speaking it would be on Mouse

1534
01:19:40,289 --> 01:19:45,810
up so the mouse goes down and my mouse

1535
01:19:41,880 --> 01:19:51,900
up you picked it right I think that's

1536
01:19:45,810 --> 01:19:53,130
all we really need don't quote me on

1537
01:19:51,899 --> 01:19:55,889
that but I think that's really what

1538
01:19:53,130 --> 01:19:58,289
we're talking about here so in this case

1539
01:19:55,890 --> 01:20:02,400
we would just say alright you know we've

1540
01:19:58,289 --> 01:20:20,159
gots WI has another function here which

1541
01:20:02,399 --> 01:20:21,750
is wouldn't I call that pick asset and

1542
01:20:20,159 --> 01:20:24,000
so I just want an interaction that is

1543
01:20:21,750 --> 01:20:26,159
that interaction you know and I'm saying

1544
01:20:24,000 --> 01:20:28,500
so I just say all right next tide

1545
01:20:26,159 --> 01:20:31,559
interaction type equals pick the asset

1546
01:20:28,500 --> 01:20:33,600
that's all we really needed to do and

1547
01:20:31,560 --> 01:20:35,970
now I think that gets integrated in I

1548
01:20:33,600 --> 01:20:38,700
think don't quote me on this because

1549
01:20:35,970 --> 01:20:41,039
that may not actually be true and also I

1550
01:20:38,699 --> 01:20:42,989
don't know how we have what do we have

1551
01:20:41,039 --> 01:20:44,189
currently for checking these things but

1552
01:20:42,989 --> 01:20:47,689
I guess we don't have one of those

1553
01:20:44,189 --> 01:20:47,689
things so I'll just put one there

1554
01:20:59,800 --> 01:21:06,550
so that should allow these systems to

1555
01:21:02,079 --> 01:21:11,140
merge in a nice clean way so I want what

1556
01:21:06,550 --> 01:21:13,060
is the question here oh so I don't have

1557
01:21:11,140 --> 01:21:14,380
to like have them to go she ate with

1558
01:21:13,060 --> 01:21:16,690
each other they'll all just go through

1559
01:21:14,380 --> 01:21:17,800
the same system which i think is much

1560
01:21:16,689 --> 01:21:20,649
better right

1561
01:21:17,800 --> 01:21:22,630
and that way negotiation about who's

1562
01:21:20,649 --> 01:21:26,979
picking what and when just kind of all

1563
01:21:22,630 --> 01:21:29,829
goes in in a nice sort of clean and

1564
01:21:26,979 --> 01:21:35,500
obvious way so when I'm in this this

1565
01:21:29,829 --> 01:21:37,930
mode here you know I I pick stuff and it

1566
01:21:35,500 --> 01:21:39,310
won't change right and furthermore any

1567
01:21:37,930 --> 01:21:43,060
time I'm over these things

1568
01:21:39,310 --> 01:21:44,770
I'm not picking right at least that's

1569
01:21:43,060 --> 01:21:47,200
what should be happening I would argue

1570
01:21:44,770 --> 01:21:49,510
so if I'm over here right I shouldn't

1571
01:21:47,199 --> 01:21:51,909
actually be able to change the selection

1572
01:21:49,510 --> 01:21:56,470
the highlight part is sort of a separate

1573
01:21:51,909 --> 01:21:59,229
issue but we'll see so for example if I

1574
01:21:56,470 --> 01:22:00,730
was gonna do this it would click on

1575
01:21:59,229 --> 01:22:01,659
another one when I clicked on used it

1576
01:22:00,729 --> 01:22:14,709
shouldn't do anything and it doesn't

1577
01:22:01,659 --> 01:22:18,970
right I now need some way of getting out

1578
01:22:14,710 --> 01:22:21,279
of that interaction and yeah you know

1579
01:22:18,970 --> 01:22:26,050
like I don't know if the Escape key

1580
01:22:21,279 --> 01:22:27,699
maybe is the most same thing there or if

1581
01:22:26,050 --> 01:22:37,380
just clicking on anything else should do

1582
01:22:27,699 --> 01:22:44,800
it it's probably fine

1583
01:22:37,380 --> 01:22:46,239
probably fine as it is yeah um so anyway

1584
01:22:44,800 --> 01:22:48,220
let me just kind of play around that a

1585
01:22:46,239 --> 01:22:51,010
little bit more so when I'm actually

1586
01:22:48,220 --> 01:22:53,050
picking these things what I probably

1587
01:22:51,010 --> 01:22:56,619
want to do here also is kind of invert

1588
01:22:53,050 --> 01:22:59,650
the way that that is is happening so in

1589
01:22:56,619 --> 01:23:03,309
terms of the highlight the way that the

1590
01:22:59,649 --> 01:23:07,079
highlights going there so we've got the

1591
01:23:03,310 --> 01:23:10,150
WI you see highlight here there we go

1592
01:23:07,079 --> 01:23:15,100
that's not what I want it I wanted in

1593
01:23:10,149 --> 01:23:19,899
game editor I want this so when we're

1594
01:23:15,100 --> 01:23:24,480
doing this highlight here I don't know

1595
01:23:19,899 --> 01:23:24,479
exactly how I want that to go

1596
01:24:00,520 --> 01:24:17,950
so I think we want to be a little more

1597
01:24:11,239 --> 01:24:31,939
specific about which things are in the

1598
01:24:17,949 --> 01:24:34,699
picking set here so when we have these

1599
01:24:31,939 --> 01:24:37,369
dev IDs that are getting pushed on here

1600
01:24:34,699 --> 01:24:40,699
if I look at the editors test stuff

1601
01:24:37,369 --> 01:24:42,800
right we've got sort of the hit test

1602
01:24:40,699 --> 01:24:53,529
that happens here and we've got these

1603
01:24:42,800 --> 01:24:57,320
asset groups I do think we may want to

1604
01:24:53,529 --> 01:25:01,389
push on also some kind of an ID so that

1605
01:24:57,319 --> 01:25:01,389
they can be used for highlighting more

1606
01:25:01,420 --> 01:25:06,829
because otherwise it's just a really

1607
01:25:03,529 --> 01:25:14,059
kind of squirrely like you know like

1608
01:25:06,829 --> 01:25:17,390
this so that when those things are

1609
01:25:14,060 --> 01:25:21,190
getting pushed on and you push the asset

1610
01:25:17,390 --> 01:25:21,190
key and the you know and that stuff

1611
01:25:23,929 --> 01:25:36,289
I think this wants to take an ID that

1612
01:25:29,840 --> 01:25:39,440
can be used to control that I just think

1613
01:25:36,289 --> 01:25:51,140
we're gonna need that and so when people

1614
01:25:39,439 --> 01:25:53,448
call add hit they should pass a

1615
01:25:51,140 --> 01:25:58,429
something we can use to identify that

1616
01:25:53,448 --> 01:26:01,250
again and that's not so hard right

1617
01:25:58,429 --> 01:26:04,219
because if you think about what an enemy

1618
01:26:01,250 --> 01:26:09,698
has in it it already has an ID that is

1619
01:26:04,219 --> 01:26:09,698
used to identify it uniquely right it's

1620
01:26:10,390 --> 01:26:17,810
it's got a 32-bit value right that can

1621
01:26:13,640 --> 01:26:20,030
be used there and so when we are doing

1622
01:26:17,810 --> 01:26:22,310
the hit testing and we're gonna put an

1623
01:26:20,029 --> 01:26:27,789
ID on there I think it should be fairly

1624
01:26:22,310 --> 01:26:38,929
straightforward to just use that that ID

1625
01:26:27,789 --> 01:26:40,369
and go from there that's my argument so

1626
01:26:38,929 --> 01:26:44,319
I think we should be able to do

1627
01:26:40,369 --> 01:26:44,319
something like you know

1628
01:26:49,939 --> 01:27:00,349
you know something like this and what we

1629
01:26:56,369 --> 01:27:00,349
need is some one of these that works on

1630
01:27:01,250 --> 01:27:08,850
on you thirty twos basically right we've

1631
01:27:06,149 --> 01:27:11,879
like the Peace Index as well so I think

1632
01:27:08,850 --> 01:27:14,760
what I want to do from it's something

1633
01:27:11,880 --> 01:27:20,909
like this where we say like okay you

1634
01:27:14,760 --> 01:27:22,770
know here we've got one of those and

1635
01:27:20,909 --> 01:27:26,189
it'll use the value and the Peace Index

1636
01:27:22,770 --> 01:27:28,290
in this case to create the dev ID and in

1637
01:27:26,189 --> 01:27:33,359
the way that we would do this is say

1638
01:27:28,289 --> 01:27:37,069
that if we're doing hit testing you know

1639
01:27:33,359 --> 01:27:37,069
we'll create one of those things right

1640
01:27:37,340 --> 01:27:43,739
and I don't really want to be creating

1641
01:27:41,369 --> 01:27:51,090
it all the time so it would probably be

1642
01:27:43,739 --> 01:27:52,590
better if we place it in here so that's

1643
01:27:51,090 --> 01:27:56,730
a little unfortunate and we'll have to

1644
01:27:52,590 --> 01:28:00,779
see what we want to do about that but in

1645
01:27:56,729 --> 01:28:02,489
this case we're we're checking like the

1646
01:28:00,779 --> 01:28:05,819
bitmap buying stuff we would no longer

1647
01:28:02,489 --> 01:28:08,639
do this at all

1648
01:28:05,819 --> 01:28:17,389
instead what we would probably do is say

1649
01:28:08,640 --> 01:28:17,390
well ok if the dev ID and the hit test

1650
01:28:18,319 --> 01:28:31,529
highlight ID you know if these are equal

1651
01:28:25,640 --> 01:28:36,090
then draw the thing that seems more

1652
01:28:31,529 --> 01:28:39,469
likely I feel like that's kind of okay

1653
01:28:36,090 --> 01:28:39,470
and this here

1654
01:28:45,288 --> 01:28:53,819
is basically the same thing so it's just

1655
01:28:52,139 --> 01:28:56,159
another way of doing this code where we

1656
01:28:53,819 --> 01:28:59,569
say alright like build me some unique

1657
01:28:56,158 --> 01:29:02,819
thing out of this and so in order to

1658
01:28:59,569 --> 01:29:06,359
reinterpret that I think we have a we

1659
01:29:02,819 --> 01:29:23,219
actually have a ummm sort of like caster

1660
01:29:06,359 --> 01:29:24,688
thing here like for for pointers yeah so

1661
01:29:23,219 --> 01:29:27,618
in this case you know we've got a way of

1662
01:29:24,689 --> 01:29:30,949
converting these things and

1663
01:29:27,618 --> 01:29:34,288
unfortunately we can't really take to

1664
01:29:30,948 --> 01:29:41,428
you thirty twos and combine them into a

1665
01:29:34,288 --> 01:29:44,779
pointer if we're not on 64-bit right so

1666
01:29:41,429 --> 01:29:44,779
that's a little Squinkie

1667
01:29:56,389 --> 01:29:59,969
that's a little Squinkie and I'm not

1668
01:29:58,498 --> 01:30:02,130
sure what we want to do about that I

1669
01:29:59,969 --> 01:30:06,658
don't really want to support 32-bit

1670
01:30:02,130 --> 01:30:08,909
platform super much but you know who

1671
01:30:06,658 --> 01:30:10,920
knows if we have to for some reason so

1672
01:30:08,908 --> 01:30:12,479
since there's not a lot of places where

1673
01:30:10,920 --> 01:30:14,248
we would really need to use that it's

1674
01:30:12,479 --> 01:30:19,948
kind of hard to say whether it makes

1675
01:30:14,248 --> 01:30:22,439
sense one way or the other to required

1676
01:30:19,948 --> 01:30:32,578
or not you know what I mean for now I'm

1677
01:30:22,439 --> 01:30:35,669
gonna say we're now I'm gonna say we

1678
01:30:32,578 --> 01:30:37,408
kind of want to do yeah like I'm really

1679
01:30:35,670 --> 01:30:40,288
conflicted about this because I don't

1680
01:30:37,408 --> 01:30:42,479
really feel like we need to do much

1681
01:30:40,288 --> 01:30:47,189
there well you know what so here's one

1682
01:30:42,479 --> 01:30:54,178
thing we could do we could do something

1683
01:30:47,189 --> 01:30:57,899
like this and I think this would be

1684
01:30:54,179 --> 01:31:03,380
reasonable right so if I said instead

1685
01:30:57,899 --> 01:31:07,379
well you know really for the dev IDs

1686
01:31:03,380 --> 01:31:17,309
maybe we don't do it like this maybe we

1687
01:31:07,380 --> 01:31:22,519
do it instead more like this where we

1688
01:31:17,309 --> 01:31:22,519
say like okay so there's you know

1689
01:31:33,539 --> 01:31:57,460
actually like this right then it would

1690
01:31:53,439 --> 01:31:59,679
be like okay even on a 32-bit system we

1691
01:31:57,460 --> 01:32:02,500
actually have 64 bits there so you're

1692
01:31:59,680 --> 01:32:04,960
always allowed to do SiC up to 64 bits

1693
01:32:02,500 --> 01:32:09,220
worth of ridiculousness in terms of

1694
01:32:04,960 --> 01:32:10,659
creating these debug IDs right which is

1695
01:32:09,220 --> 01:32:12,460
what I want you know I want to be able

1696
01:32:10,659 --> 01:32:14,079
to do arbitrary ridiculousness there I

1697
01:32:12,460 --> 01:32:19,170
don't want to really be super

1698
01:32:14,079 --> 01:32:21,159
constrained by that stuff and so then

1699
01:32:19,170 --> 01:32:23,260
that maybe makes a little more sense

1700
01:32:21,159 --> 01:32:29,039
because then what I can do is say all

1701
01:32:23,260 --> 01:32:29,039
right when we're looking at these things

1702
01:32:29,939 --> 01:32:37,000
like this like you know are equal

1703
01:32:32,770 --> 01:32:39,640
whatever we can just look at the 64-bit

1704
01:32:37,000 --> 01:32:42,189
version of it and know that any other

1705
01:32:39,640 --> 01:32:46,829
types that we're in the mix will just

1706
01:32:42,189 --> 01:32:53,739
work right I think that seems reasonable

1707
01:32:46,829 --> 01:32:55,960
actually that seems like a reasonable

1708
01:32:53,739 --> 01:32:57,760
compromise because then we can still do

1709
01:32:55,960 --> 01:33:00,670
shenanigans but the shenanigans will

1710
01:32:57,760 --> 01:33:02,860
work on 32-bit as necessary because

1711
01:33:00,670 --> 01:33:04,149
these are not things that get used in

1712
01:33:02,859 --> 01:33:06,460
the gameplay part of things are only

1713
01:33:04,149 --> 01:33:08,589
used in like dev mode stuff so I don't

1714
01:33:06,460 --> 01:33:10,329
really care if they're inefficient I

1715
01:33:08,590 --> 01:33:11,619
just want them to but I don't

1716
01:33:10,329 --> 01:33:15,489
necessarily want to preclude them from

1717
01:33:11,619 --> 01:33:18,630
ever working so there's that right so I

1718
01:33:15,489 --> 01:33:22,510
think that might be a better way to go

1719
01:33:18,630 --> 01:33:25,140
if that makes sense and so that seems

1720
01:33:22,510 --> 01:33:25,140
good to me

1721
01:33:29,680 --> 01:33:38,289
furthermore yes so I think also another

1722
01:33:34,239 --> 01:33:40,630
thing I might do there is say well you

1723
01:33:38,289 --> 01:33:43,029
get two of these if you want because you

1724
01:33:40,630 --> 01:33:45,039
could fit two of them in there right and

1725
01:33:43,029 --> 01:33:46,750
so then what I could do is say okay good

1726
01:33:45,039 --> 01:33:51,810
now when I want to do this like and say

1727
01:33:46,750 --> 01:34:09,819
you know value zero you three two zero

1728
01:33:51,810 --> 01:34:12,180
equals a B and then the void is this so

1729
01:34:09,819 --> 01:34:17,829
then that lets me create kind of a more

1730
01:34:12,180 --> 01:34:19,960
explicit thing there you know that feels

1731
01:34:17,829 --> 01:34:26,850
a bit better so when we create one of

1732
01:34:19,960 --> 01:34:26,850
these what's the problem there partner

1733
01:34:27,539 --> 01:34:31,079
that's the problem

1734
01:34:32,460 --> 01:34:41,470
all right all right so that seems good

1735
01:34:39,220 --> 01:34:43,420
and then what I want to do is I want to

1736
01:34:41,470 --> 01:34:45,400
change that code in the in-game editor

1737
01:34:43,420 --> 01:34:47,079
that was sort of saying there was this

1738
01:34:45,399 --> 01:34:48,279
high light asset index that we're not

1739
01:34:47,079 --> 01:34:52,239
going to have that we're just gonna have

1740
01:34:48,279 --> 01:34:59,590
like high light ID and highlight asset

1741
01:34:52,239 --> 01:35:03,039
index is not a thing and what I would

1742
01:34:59,590 --> 01:35:05,860
then do is say well when we do this if

1743
01:35:03,039 --> 01:35:09,399
we're doing an edit mode asset if I want

1744
01:35:05,859 --> 01:35:12,039
to do a highlight asset index here what

1745
01:35:09,399 --> 01:35:15,309
I can do is say well we've got an active

1746
01:35:12,039 --> 01:35:17,739
asset index that's what we're heading

1747
01:35:15,310 --> 01:35:21,220
but we can also set a dev ID that's like

1748
01:35:17,739 --> 01:35:26,469
what we want to highlight and I'll just

1749
01:35:21,220 --> 01:35:31,570
copy that in and we could set that

1750
01:35:26,470 --> 01:35:35,050
whenever we really want to you know I

1751
01:35:31,569 --> 01:35:38,710
think that's better and that way when we

1752
01:35:35,050 --> 01:35:41,250
pick one of these things we can you know

1753
01:35:38,710 --> 01:35:41,250
take them both

1754
01:35:44,679 --> 01:35:51,139
seems better to me or at least you know

1755
01:35:49,670 --> 01:35:54,050
slightly more reasonable so I think

1756
01:35:51,139 --> 01:35:55,819
that's good so then in these when we

1757
01:35:54,050 --> 01:35:57,469
were doing things before all of this

1758
01:35:55,819 --> 01:35:59,738
should still work anything that was

1759
01:35:57,469 --> 01:36:03,590
pointer based you'll you know it just

1760
01:35:59,738 --> 01:36:06,348
you just make them out of void and that

1761
01:36:03,590 --> 01:36:08,748
just works and then in here what we were

1762
01:36:06,349 --> 01:36:11,659
doing when we were trying to get ID

1763
01:36:08,748 --> 01:36:15,349
values out of this again you 32 from

1764
01:36:11,658 --> 01:36:21,589
pointer we really didn't need to do it

1765
01:36:15,349 --> 01:36:24,319
that way we can just use the Union now

1766
01:36:21,590 --> 01:36:27,559
so in here we do you three for pointer

1767
01:36:24,319 --> 01:36:33,469
and we ask for this value and we do a

1768
01:36:27,559 --> 01:36:36,260
shift down by two I don't really know

1769
01:36:33,469 --> 01:36:38,448
that what the you 32 from pointer part

1770
01:36:36,260 --> 01:36:45,829
really was doing there little on a

1771
01:36:38,448 --> 01:36:48,228
second let me make sure yes it was cast

1772
01:36:45,828 --> 01:36:50,719
on you through two anyway so really what

1773
01:36:48,229 --> 01:36:52,940
we can do here is just not do that and

1774
01:36:50,719 --> 01:36:59,029
instead just take the bottom you 32

1775
01:36:52,939 --> 01:37:01,518
right and and that gets us out of the

1776
01:36:59,029 --> 01:37:04,929
casting business there entirely and just

1777
01:37:01,519 --> 01:37:10,400
lets the Union do to work in that case

1778
01:37:04,929 --> 01:37:12,288
which seems reasonable right all right

1779
01:37:10,399 --> 01:37:14,448
so now we want to do is figure out some

1780
01:37:12,288 --> 01:37:16,788
way to get this high light stuff working

1781
01:37:14,448 --> 01:37:22,368
a little bit better the first thing we

1782
01:37:16,788 --> 01:37:25,969
need to do there on the second is inside

1783
01:37:22,368 --> 01:37:28,788
the entity code so we only want to do a

1784
01:37:25,969 --> 01:37:34,519
push volume outline when we find that

1785
01:37:28,788 --> 01:37:36,498
these IDs are equal right and so in

1786
01:37:34,519 --> 01:37:38,630
order to do that we need to get them

1787
01:37:36,498 --> 01:37:40,728
from the NV ID and the piece index that

1788
01:37:38,630 --> 01:37:46,900
should be unique and then we need to

1789
01:37:40,729 --> 01:37:46,900
push that on when we hit which we do and

1790
01:37:50,520 --> 01:37:56,320
really we don't want this anymore

1791
01:37:53,649 --> 01:38:02,799
the highlight color thing is not really

1792
01:37:56,319 --> 01:38:14,859
a thing so really I think we just want

1793
01:38:02,800 --> 01:38:17,619
that to be this and so now we just have

1794
01:38:14,859 --> 01:38:21,639
to make sure that dev ID part works

1795
01:38:17,619 --> 01:38:32,439
actually correctly and then we can go

1796
01:38:21,640 --> 01:38:34,060
from there so highlight ID yeah what's

1797
01:38:32,439 --> 01:38:35,529
happening with active asset index it

1798
01:38:34,060 --> 01:38:37,900
should only happen there yeah which it

1799
01:38:35,529 --> 01:38:39,189
does alright so now let's take a look at

1800
01:38:37,899 --> 01:38:42,339
what's going on and we'll try to clean

1801
01:38:39,189 --> 01:38:47,789
that up a bit and figure out what what's

1802
01:38:42,340 --> 01:38:51,400
going on there so if I click on things

1803
01:38:47,789 --> 01:38:52,930
so I don't get it why is why am I

1804
01:38:51,399 --> 01:38:54,339
getting everyone highlighting there that

1805
01:38:52,930 --> 01:38:57,400
doesn't really make any sense because

1806
01:38:54,340 --> 01:39:04,840
we're explicitly comparing just only one

1807
01:38:57,399 --> 01:39:07,179
set of debug ideas there so we must be

1808
01:39:04,840 --> 01:39:08,890
building those debug ideas poorly like

1809
01:39:07,180 --> 01:39:14,289
like we're doing something weird there

1810
01:39:08,890 --> 01:39:19,530
right like something something really

1811
01:39:14,289 --> 01:39:19,529
strange is happening so for some reason

1812
01:39:21,899 --> 01:39:31,719
for some reason that that ID set is

1813
01:39:27,399 --> 01:39:35,859
being as being Squinkie and I'm not sure

1814
01:39:31,719 --> 01:39:37,390
why oh well that would do it you got to

1815
01:39:35,859 --> 01:39:42,369
build the ID properly if you want to

1816
01:39:37,390 --> 01:39:43,500
actually have it work it's shocking I

1817
01:39:42,369 --> 01:39:47,260
know

1818
01:39:43,500 --> 01:39:49,000
alright so now we have a more

1819
01:39:47,260 --> 01:39:51,750
traditional kind of selection based

1820
01:39:49,000 --> 01:39:51,750
thing here right

1821
01:39:54,368 --> 01:40:01,899
if I clicked outside in there wasn't one

1822
01:39:57,340 --> 01:40:03,909
we should probably clear it so like we

1823
01:40:01,899 --> 01:40:06,069
probably needed another way to clear

1824
01:40:03,908 --> 01:40:08,379
that as well but if the mouse went up

1825
01:40:06,069 --> 01:40:18,880
and there wasn't anything here so so

1826
01:40:08,380 --> 01:40:21,400
nobody was actually you know nobody was

1827
01:40:18,880 --> 01:40:25,710
picked by the hit test then we probably

1828
01:40:21,399 --> 01:40:25,710
just want this to be cleared right I

1829
01:40:28,439 --> 01:40:35,529
mean that's what we actually want to

1830
01:40:30,279 --> 01:40:37,809
have happen I can't remember I thought

1831
01:40:35,529 --> 01:40:39,099
there was an actual thing like that well

1832
01:40:37,810 --> 01:40:43,060
no there isn't it's just for

1833
01:40:39,099 --> 01:40:45,730
interactions I guess but you know we

1834
01:40:43,060 --> 01:40:50,010
want that where we just clear it out

1835
01:40:45,729 --> 01:41:03,098
right and similarly the asset index

1836
01:40:50,010 --> 01:41:10,389
would be cleared as well that should

1837
01:41:03,099 --> 01:41:12,639
give me some some sense of like common

1838
01:41:10,389 --> 01:41:14,949
editor feel to this right and it does

1839
01:41:12,639 --> 01:41:18,789
now right so I click on these you know

1840
01:41:14,948 --> 01:41:20,919
and if I click off they're done it also

1841
01:41:18,789 --> 01:41:22,868
gives me a fair bit of fidelity about

1842
01:41:20,920 --> 01:41:24,730
the selection so you can see here like

1843
01:41:22,868 --> 01:41:27,429
you see how it intercepted and it didn't

1844
01:41:24,729 --> 01:41:29,500
reap ick so it integrates these two

1845
01:41:27,429 --> 01:41:32,770
systems really nicely too so they're

1846
01:41:29,500 --> 01:41:34,238
just totally unified and don't step by

1847
01:41:32,770 --> 01:41:37,510
each other's toes which is really nice

1848
01:41:34,238 --> 01:41:39,158
as well I will say I'm not sure what's

1849
01:41:37,510 --> 01:41:45,340
going on there that looks like a picking

1850
01:41:39,158 --> 01:41:48,868
error of some a different kind like I

1851
01:41:45,340 --> 01:41:50,980
don't know why I can't really pick that

1852
01:41:48,868 --> 01:41:54,809
see I'm having trouble picking that

1853
01:41:50,979 --> 01:41:54,809
particular entity

1854
01:41:57,550 --> 01:42:01,250
and so I don't know if we maybe have

1855
01:41:59,779 --> 01:42:03,609
some bugs in how we're picking or

1856
01:42:01,250 --> 01:42:03,609
something

1857
01:42:11,500 --> 01:42:25,069
it just feels like the sort okay oh yeah

1858
01:42:20,948 --> 01:42:27,500
so it feels like the sort is not working

1859
01:42:25,069 --> 01:42:31,729
properly and it may well not be we

1860
01:42:27,500 --> 01:42:33,710
should probably go take a look and see

1861
01:42:31,729 --> 01:42:38,299
if we're doing that that sort

1862
01:42:33,710 --> 01:42:40,189
computation correctly so when we do Ray

1863
01:42:38,300 --> 01:42:42,020
intersects box what are we doing here

1864
01:42:40,189 --> 01:42:47,479
are we passing so we are passing the tea

1865
01:42:42,020 --> 01:42:50,210
hit it it just doesn't look for whatever

1866
01:42:47,479 --> 01:42:54,799
reason doesn't it doesn't feel like it's

1867
01:42:50,210 --> 01:42:56,539
really actually taking the close side it

1868
01:42:54,800 --> 01:42:59,440
looks like it's taking Mik like the far

1869
01:42:56,539 --> 01:42:59,439
side or something

1870
01:43:09,229 --> 01:43:13,819
and I'm not really sure what's going on

1871
01:43:11,760 --> 01:43:13,820
there

1872
01:43:20,489 --> 01:43:27,130
so it's doing the T step to get to each

1873
01:43:24,909 --> 01:43:28,720
axis separately it's like how far do I

1874
01:43:27,130 --> 01:43:30,369
have to go in access right I have to go

1875
01:43:28,720 --> 01:43:32,170
and why am I fired I have to go and Z

1876
01:43:30,369 --> 01:43:32,800
and just taken whichever one gets there

1877
01:43:32,170 --> 01:43:35,250
fastest

1878
01:43:32,800 --> 01:43:35,250
right

1879
01:43:42,380 --> 01:43:55,859
so I feel like that should be giving us

1880
01:43:44,880 --> 01:44:01,469
a point that point but I'm just not

1881
01:43:55,859 --> 01:44:08,399
seeing it it doesn't feel to me like

1882
01:44:01,469 --> 01:44:25,739
that's working properly and you know we

1883
01:44:08,399 --> 01:44:29,808
are drawing that box in theory and it

1884
01:44:25,738 --> 01:44:29,808
sure feels like it's working

1885
01:44:35,439 --> 01:44:49,469
and interestingly enough it sort of

1886
01:44:39,429 --> 01:44:51,998
seems almost like a little steep driven

1887
01:44:49,469 --> 01:44:55,059
like correct me if I'm wrong but like

1888
01:44:51,998 --> 01:44:57,188
let's say I click on this one and then I

1889
01:44:55,059 --> 01:44:59,788
go and I keep clicking and I don't

1890
01:44:57,189 --> 01:45:02,949
change over until I get to this one

1891
01:44:59,788 --> 01:45:04,988
right but if I'm on this one and I start

1892
01:45:02,948 --> 01:45:08,948
clicking I don't change until I get all

1893
01:45:04,988 --> 01:45:13,178
the way there so it's almost like what I

1894
01:45:08,948 --> 01:45:16,058
have selected actually has an effect on

1895
01:45:13,179 --> 01:45:21,429
whether or not I can select the other

1896
01:45:16,059 --> 01:45:26,498
one which seems busted so that may be

1897
01:45:21,429 --> 01:45:30,939
part of just the UI code so let's try

1898
01:45:26,498 --> 01:45:35,679
this that may just be that the editor

1899
01:45:30,939 --> 01:45:39,939
hit this stuff is wrong I mean it may be

1900
01:45:35,679 --> 01:45:41,949
that this code was borked there so when

1901
01:45:39,939 --> 01:45:44,429
I come through here and I'm looking for

1902
01:45:41,948 --> 01:45:44,428
mouse up

1903
01:45:56,479 --> 01:46:04,419
I mean what I could do is just say look

1904
01:46:04,600 --> 01:46:12,530
why don't we just set that to like

1905
01:46:07,729 --> 01:46:15,159
whatever and just verify like just see

1906
01:46:12,529 --> 01:46:15,159
if it's working

1907
01:46:22,868 --> 01:46:30,569
and it's sort of isn't sort of isn't

1908
01:46:29,859 --> 01:46:33,098
right

1909
01:46:30,569 --> 01:46:36,039
so it's just really weird like I don't

1910
01:46:33,099 --> 01:46:39,060
know what's determining when it works

1911
01:46:36,039 --> 01:46:39,060
and when it doesn't work

1912
01:46:58,710 --> 01:47:02,939
that's frustrating

1913
01:47:12,810 --> 01:47:23,770
we definitely set the highlight a tee

1914
01:47:14,979 --> 01:47:27,689
every time we go to do a head test we

1915
01:47:23,770 --> 01:47:27,690
don't really

1916
01:47:39,220 --> 01:47:43,220
yeah we don't really I mean what if I

1917
01:47:41,720 --> 01:47:56,030
set it somewhere else is there something

1918
01:47:43,220 --> 01:47:59,530
to do with that particular thing this

1919
01:47:56,029 --> 01:47:59,529
has just happens every time now

1920
01:48:09,649 --> 01:48:14,079
you see how weirdly sticky that becomes

1921
01:48:16,180 --> 01:48:20,170
such a super bizarre

1922
01:48:32,119 --> 01:48:36,019
so I'm gonna need some debugging I mean

1923
01:48:34,579 --> 01:48:38,269
cuz I don't have any theory about that

1924
01:48:36,020 --> 01:48:42,920
but it looks like it really doesn't have

1925
01:48:38,270 --> 01:48:45,980
much to do with this it looks like we've

1926
01:48:42,920 --> 01:48:49,819
just got some more like a more deeply

1927
01:48:45,979 --> 01:48:53,799
rooted bug there that is not really so

1928
01:48:49,819 --> 01:48:53,799
related to how or when that gets updated

1929
01:48:57,520 --> 01:49:04,010
so it's it's sort of like this it's

1930
01:49:00,649 --> 01:49:13,219
somehow dependent on that in a weird way

1931
01:49:04,010 --> 01:49:15,320
like I don't know I guess we could also

1932
01:49:13,220 --> 01:49:18,590
draw that picking rake and you know we

1933
01:49:15,319 --> 01:49:21,949
were drawing the picking ray back at the

1934
01:49:18,590 --> 01:49:25,699
beginning something like that we could

1935
01:49:21,949 --> 01:49:27,409
try to draw it to make sure that it's

1936
01:49:25,699 --> 01:49:30,019
still getting updated right like the

1937
01:49:27,409 --> 01:49:32,420
clip space Mouse pee part of things I

1938
01:49:30,020 --> 01:49:36,500
mean could be getting stuck and not

1939
01:49:32,420 --> 01:49:40,430
updating or something I'm not sure why

1940
01:49:36,500 --> 01:49:42,619
you know that would happen but um I

1941
01:49:40,430 --> 01:49:49,730
don't have a lot of ideas here we're

1942
01:49:42,619 --> 01:49:56,569
copying it every time you know so again

1943
01:49:49,729 --> 01:49:59,559
not really sure why would we be getting

1944
01:49:56,569 --> 01:49:59,559
an odd result there

1945
01:50:17,899 --> 01:50:23,670
so one more thing let me just try one

1946
01:50:21,569 --> 01:50:25,979
more thing because there is sort of

1947
01:50:23,670 --> 01:50:28,800
another way this could be failing I

1948
01:50:25,979 --> 01:50:32,879
guess and let me just try to eliminate

1949
01:50:28,800 --> 01:50:37,050
that first and that is in here where we

1950
01:50:32,880 --> 01:50:43,850
do the Equality testing let's actually

1951
01:50:37,050 --> 01:50:43,850
just do it here so instead of doing this

1952
01:50:43,909 --> 01:50:51,329
I'm gonna go ahead and just not ever

1953
01:50:49,770 --> 01:50:53,340
highlight what it tells us to highlight

1954
01:50:51,329 --> 01:50:57,479
and instead I'm just gonna highlight

1955
01:50:53,340 --> 01:51:08,430
what we hit so anytime we hit something

1956
01:50:57,479 --> 01:51:12,929
we're gonna highlight that and I'm just

1957
01:51:08,430 --> 01:51:14,010
gonna see if that ever gets stuck just

1958
01:51:12,930 --> 01:51:16,140
to make sure that we're at least

1959
01:51:14,010 --> 01:51:18,750
considering the set of objects we should

1960
01:51:16,140 --> 01:51:28,260
be considering and that that seems

1961
01:51:18,750 --> 01:51:30,449
pretty tight to me so I could believe

1962
01:51:28,260 --> 01:51:32,520
that this had something to do with like

1963
01:51:30,449 --> 01:51:37,859
our sort routine being screwed up or

1964
01:51:32,520 --> 01:51:41,960
something right like because this always

1965
01:51:37,859 --> 01:51:44,639
seems perfect like I'm not getting any

1966
01:51:41,960 --> 01:51:46,850
like that just seems rock-solid

1967
01:51:44,640 --> 01:51:46,850
right

1968
01:51:59,100 --> 01:52:04,890
so I feel like we're pretty clean on

1969
01:52:02,220 --> 01:52:08,550
that so the question would be maybe like

1970
01:52:04,890 --> 01:52:11,570
is the hit system is the when we're

1971
01:52:08,550 --> 01:52:13,500
actually putting these things in is that

1972
01:52:11,569 --> 01:52:18,479
actually what's causing the problem

1973
01:52:13,500 --> 01:52:21,829
right this could be the dev ID it could

1974
01:52:18,479 --> 01:52:26,779
be us right we we don't really know

1975
01:52:21,829 --> 01:52:30,840
who's who's you know at fault here so

1976
01:52:26,779 --> 01:52:33,750
let me go ahead and and do this even

1977
01:52:30,840 --> 01:52:36,960
more directly we'll drill them at the

1978
01:52:33,750 --> 01:52:39,750
same time so now we can see what our

1979
01:52:36,960 --> 01:52:41,609
hits were and then who we actually were

1980
01:52:39,750 --> 01:52:46,399
told to highlight will be done

1981
01:52:41,609 --> 01:52:46,399
separately right

1982
01:52:52,469 --> 01:53:01,020
so that's kind of nuts right like here

1983
01:52:56,609 --> 01:53:05,429
it's like we're getting we're being told

1984
01:53:01,020 --> 01:53:06,780
to highlight okay no that's fine so

1985
01:53:05,430 --> 01:53:08,430
we're seeing that those are all the

1986
01:53:06,779 --> 01:53:11,488
possible hits and we're just being told

1987
01:53:08,430 --> 01:53:16,260
to highlight that one so that's fine but

1988
01:53:11,488 --> 01:53:18,029
that's not right so now we really aren't

1989
01:53:16,260 --> 01:53:19,650
probably being told to that let me let

1990
01:53:18,029 --> 01:53:24,539
me change the width of these so that we

1991
01:53:19,649 --> 01:53:26,460
can also see more specifically what's

1992
01:53:24,539 --> 01:53:31,979
going on there so we'll make this one be

1993
01:53:26,460 --> 01:53:42,060
a little bit more will make one be wide

1994
01:53:31,979 --> 01:53:45,238
and one be not wide hopefully that makes

1995
01:53:42,060 --> 01:53:50,039
it easier to say hopefully so you can

1996
01:53:45,238 --> 01:53:53,129
see like a thin little yellow line so

1997
01:53:50,039 --> 01:53:55,859
they're like that's not even in the hit

1998
01:53:53,130 --> 01:54:00,300
list but it's the thing that we're being

1999
01:53:55,859 --> 01:54:02,880
told to to highlight so it's definitely

2000
01:54:00,300 --> 01:54:08,250
the UI systems fault that this is

2001
01:54:02,880 --> 01:54:12,000
getting screwed up right somehow so I

2002
01:54:08,250 --> 01:54:13,859
probably just messed up the it's

2003
01:54:12,000 --> 01:54:15,510
probably just that sort routine when I

2004
01:54:13,859 --> 01:54:16,799
went in there and added the dev IDs I

2005
01:54:15,510 --> 01:54:18,630
probably just screwed it up or something

2006
01:54:16,800 --> 01:54:20,909
but so that's good so we know it's not

2007
01:54:18,630 --> 01:54:23,819
that so we know that basically our

2008
01:54:20,909 --> 01:54:26,760
problem is we we screwed up the the hit

2009
01:54:23,819 --> 01:54:28,229
testing here so let's go ahead and look

2010
01:54:26,760 --> 01:54:30,800
at that real quickly before the streams

2011
01:54:28,229 --> 01:54:40,139
over and hopefully that's our only real

2012
01:54:30,800 --> 01:54:42,350
dumb maneuver yeah okay well that was

2013
01:54:40,140 --> 01:54:45,239
easy

2014
01:54:42,350 --> 01:54:48,480
once you know where the problem is it's

2015
01:54:45,238 --> 01:54:53,129
not so hard to fix it so now I think

2016
01:54:48,479 --> 01:54:55,439
we're totally good yeah so all I need to

2017
01:54:53,130 --> 01:54:56,369
do now is just undo the change I did

2018
01:54:55,439 --> 01:55:03,269
before

2019
01:54:56,369 --> 01:55:06,090
that made us always update the asset so

2020
01:55:03,270 --> 01:55:07,949
really we just need that and now now

2021
01:55:06,090 --> 01:55:13,079
I shouldn't be having those same

2022
01:55:07,948 --> 01:55:15,439
problems that I was having before now

2023
01:55:13,079 --> 01:55:15,439
we're good

2024
01:55:38,130 --> 01:55:42,359
okay um there's probably more stuff we

2025
01:55:41,250 --> 01:55:45,779
want to do there but I think that's it

2026
01:55:42,359 --> 01:55:49,559
for today we will or at least this

2027
01:55:45,779 --> 01:55:52,109
stream so I think what we will do here

2028
01:55:49,560 --> 01:55:53,310
is just leave it at that

2029
01:55:52,109 --> 01:55:54,630
and what I want to do is come through

2030
01:55:53,310 --> 01:55:55,710
and now start working on this part of

2031
01:55:54,630 --> 01:55:57,449
the UI because I think we're pretty

2032
01:55:55,710 --> 01:55:59,909
clean here now on all of this stuff we

2033
01:55:57,449 --> 01:56:02,989
have undo redo revert we can click on

2034
01:55:59,909 --> 01:56:05,309
things we can select objects it's pretty

2035
01:56:02,989 --> 01:56:06,869
reasonable now so I think all we really

2036
01:56:05,310 --> 01:56:09,500
need to do is like box that I put in the

2037
01:56:06,869 --> 01:56:12,659
corner make these little buttons work

2038
01:56:09,500 --> 01:56:15,420
and then I think we're off to the races

2039
01:56:12,659 --> 01:56:17,309
we can get back to just the basic hij

2040
01:56:15,420 --> 01:56:20,940
stuff we wanted to do like saving to and

2041
01:56:17,310 --> 01:56:23,580
from a text file and stuff like that let

2042
01:56:20,939 --> 01:56:25,229
me go ahead and go to a brief Q&amp;A here

2043
01:56:23,579 --> 01:56:28,309
so we can't see if anyone has any

2044
01:56:25,229 --> 01:56:28,309
questions on what we did

2045
01:56:58,890 --> 01:57:02,579
any questions

2046
01:57:27,408 --> 01:57:30,779
how long do you think it would take to

2047
01:57:29,488 --> 01:57:32,279
get to this level and the product if

2048
01:57:30,779 --> 01:57:35,460
you're working on it eight hours a day

2049
01:57:32,279 --> 01:57:36,719
um well it's hard to say but obviously

2050
01:57:35,460 --> 01:57:38,069
this you know you could just take the

2051
01:57:36,719 --> 01:57:39,989
amount of time divide it by eight and

2052
01:57:38,069 --> 01:57:41,609
that's the maximum because you knew I

2053
01:57:39,988 --> 01:57:45,388
you know I did do it in that number of

2054
01:57:41,609 --> 01:57:50,179
hours so I don't know how many it is

2055
01:57:45,389 --> 01:57:52,590
it's probably like eight hundred so

2056
01:57:50,179 --> 01:57:55,319
eight hours a day that be a hundred days

2057
01:57:52,590 --> 01:58:06,360
so it would be if you assume like a

2058
01:57:55,319 --> 01:58:08,630
five-day workweek probably 25 weeks does

2059
01:58:06,359 --> 01:58:08,630
that make sense

2060
01:58:14,159 --> 01:58:21,449
so not not very long I mean 25 it's like

2061
01:58:16,979 --> 01:58:24,419
half a year six six months so pretty

2062
01:58:21,449 --> 01:58:25,649
pretty brief you got to figure you'd

2063
01:58:24,420 --> 01:58:28,800
probably get a pretty big bonus not

2064
01:58:25,649 --> 01:58:31,259
having to wait like multiple days in

2065
01:58:28,800 --> 01:58:33,270
between our along streams or stuff for

2066
01:58:31,260 --> 01:58:35,039
two hour-long streams so I don't know I

2067
01:58:33,270 --> 01:58:36,090
mean I would think that would help but

2068
01:58:35,039 --> 01:58:37,739
you know you never know maybe it doesn't

2069
01:58:36,090 --> 01:58:38,550
plus you can get rid of like there's

2070
01:58:37,739 --> 01:58:40,529
tons of stuff in there I'm just

2071
01:58:38,550 --> 01:58:41,640
explaining things and not actually doing

2072
01:58:40,529 --> 01:58:42,750
any programming I'm just trying to

2073
01:58:41,640 --> 01:58:45,450
explain something on a whiteboard or

2074
01:58:42,750 --> 01:58:48,689
whatever so you know that goes away so I

2075
01:58:45,449 --> 01:58:51,319
would I would think it'd be less than 25

2076
01:58:48,689 --> 01:58:51,319
weeks probably

2077
01:59:06,300 --> 01:59:12,520
see voucher is there a reason for making

2078
01:59:08,949 --> 01:59:18,250
two lists for undo redo rather than one

2079
01:59:12,520 --> 01:59:19,900
I didn't I didn't have a reason I just

2080
01:59:18,250 --> 01:59:23,250
did them as two stacks because I thought

2081
01:59:19,899 --> 01:59:26,649
that would be them clearest in the code

2082
01:59:23,250 --> 01:59:28,119
and it's pretty free to do so like you

2083
01:59:26,649 --> 01:59:29,250
don't really cost you anything to do

2084
01:59:28,119 --> 01:59:33,220
that so I thought that would be clear

2085
01:59:29,250 --> 01:59:42,460
but you certainly can implement them

2086
01:59:33,220 --> 01:59:44,050
with only one so I didn't I mean I

2087
01:59:42,460 --> 01:59:46,060
didn't think about it too hard I don't

2088
01:59:44,050 --> 01:59:48,010
think there's a reason to prefer one of

2089
01:59:46,060 --> 01:59:50,789
the over the other I think it would just

2090
01:59:48,010 --> 01:59:53,789
be whichever one you prefer

2091
01:59:50,789 --> 01:59:53,789
probably

2092
02:00:01,029 --> 02:00:05,319
I guess all I can really say is I can't

2093
02:00:03,789 --> 02:00:07,539
think of a strong reason to prefer

2094
02:00:05,319 --> 02:00:13,090
either so I just did the one that I kind

2095
02:00:07,539 --> 02:00:15,149
of you know the one that made me feel

2096
02:00:13,090 --> 02:00:17,529
more comfortable when I was typing it in

2097
02:00:15,149 --> 02:00:19,809
but you know I I didn't have a strong

2098
02:00:17,529 --> 02:00:22,599
reason for that and I can't and I can't

2099
02:00:19,810 --> 02:00:24,370
think of a strong reason now either big

2100
02:00:22,600 --> 02:00:26,710
engine support multiple render paths d

2101
02:00:24,369 --> 02:00:29,739
3d opengl but why do these engines don't

2102
02:00:26,710 --> 02:00:31,569
use only open jules 233 that's cuz open

2103
02:00:29,739 --> 02:00:33,909
gels are very well supported by candy 3

2104
02:00:31,569 --> 02:00:38,500
on windows d 3d runs much better it's a

2105
02:00:33,909 --> 02:00:40,210
lot less bugs especially on certain

2106
02:00:38,500 --> 02:00:42,689
drivers you know like maybe nvidia has

2107
02:00:40,210 --> 02:00:46,390
very good OpenGL support but you know

2108
02:00:42,689 --> 02:00:51,069
AMD and intel typically don't depending

2109
02:00:46,390 --> 02:00:54,550
on the day depending on the year so you

2110
02:00:51,069 --> 02:00:56,769
know OpenGL would have been great if

2111
02:00:54,550 --> 02:00:59,050
everyone had bought into it and it had

2112
02:00:56,770 --> 02:01:00,610
been meticulously maintained it wasn't

2113
02:00:59,050 --> 02:01:04,390
it's kind of a sprawling mess right now

2114
02:01:00,609 --> 02:01:06,819
and while there is a subset of OpenGL

2115
02:01:04,390 --> 02:01:13,360
that if you just consider just that to

2116
02:01:06,819 --> 02:01:15,369
be OpenGL that would have been a great

2117
02:01:13,359 --> 02:01:17,739
API I kind of wish they had done that I

2118
02:01:15,369 --> 02:01:19,869
wish they had said ok OpenGL 5.0 is this

2119
02:01:17,739 --> 02:01:21,189
subset and that's all we're doing then I

2120
02:01:19,869 --> 02:01:22,809
don't think you would have needed Vulcan

2121
02:01:21,189 --> 02:01:25,419
or any of this other stuff you could

2122
02:01:22,810 --> 02:01:27,789
just been like AZ do open jail that's

2123
02:01:25,420 --> 02:01:32,230
what we're doing that's open till 5:00

2124
02:01:27,789 --> 02:01:33,670
and off we go right they didn't do that

2125
02:01:32,229 --> 02:01:36,059
unfortunately so it's still a giant

2126
02:01:33,670 --> 02:01:39,250
sprawling mess and that's just how it is

2127
02:01:36,060 --> 02:01:39,970
so on Windows you pretty much want us to

2128
02:01:39,250 --> 02:01:42,100
ship d3d

2129
02:01:39,970 --> 02:01:43,180
you know that's what you want to ship if

2130
02:01:42,100 --> 02:01:44,800
you're shipping something else you're

2131
02:01:43,180 --> 02:01:46,150
probably in danger of hitting a lot of

2132
02:01:44,800 --> 02:01:56,079
extra core driver bugs that you didn't

2133
02:01:46,149 --> 02:01:58,029
need to ship and so most graphics you

2134
02:01:56,079 --> 02:01:59,859
know backends use it by default if you

2135
02:01:58,029 --> 02:02:02,380
boot up an engine like you know like

2136
02:01:59,859 --> 02:02:04,539
unity or something that supports both

2137
02:02:02,380 --> 02:02:07,180
OpenGL and D 3d on Windows which I'm

2138
02:02:04,539 --> 02:02:08,409
pretty sure they do they're gonna

2139
02:02:07,180 --> 02:02:10,750
default to be 3d because there's just

2140
02:02:08,409 --> 02:02:12,829
less bugs and that's what you care about

2141
02:02:10,750 --> 02:02:15,920
you know when you're shipping a PC game

2142
02:02:12,829 --> 02:02:17,720
you care about less bug reports you know

2143
02:02:15,920 --> 02:02:19,850
less users who are upset because they

2144
02:02:17,720 --> 02:02:23,119
can't run your game is what you want and

2145
02:02:19,850 --> 02:02:37,400
and that's not you know that's not open

2146
02:02:23,119 --> 02:02:40,309
jail which parts of CPU do you use a CBP

2147
02:02:37,399 --> 02:02:42,979
rather do use I use operator overloading

2148
02:02:40,310 --> 02:02:48,200
for math operations and I use function

2149
02:02:42,979 --> 02:02:50,599
name overloading just in general other

2150
02:02:48,199 --> 02:02:52,849
than that I almost don't use anything

2151
02:02:50,600 --> 02:02:54,710
there may be some places like for timer

2152
02:02:52,850 --> 02:02:57,260
code that we use constructor destructor

2153
02:02:54,710 --> 02:02:58,310
pairs to make sure that you can open

2154
02:02:57,260 --> 02:02:59,780
something at the beginning of a block

2155
02:02:58,310 --> 02:03:01,700
and automatically closed at the end of

2156
02:02:59,779 --> 02:03:04,670
the block that's about the only place we

2157
02:03:01,699 --> 02:03:05,750
use constructor destructor so we could

2158
02:03:04,670 --> 02:03:08,510
just make it pretty easily get rid of

2159
02:03:05,750 --> 02:03:12,140
that so I think mostly what we use is is

2160
02:03:08,510 --> 02:03:14,360
the operator and function over function

2161
02:03:12,140 --> 02:03:16,869
name overloading we don't really use

2162
02:03:14,359 --> 02:03:16,869
anything else

2163
02:03:20,590 --> 02:03:24,289
follow-up question regarding a bejeweled

2164
02:03:22,399 --> 02:03:25,670
can you name some of the stuff of a

2165
02:03:24,289 --> 02:03:29,510
subset they should have marked as open

2166
02:03:25,670 --> 02:03:41,300
jewelry 5 yet look basically a-z do like

2167
02:03:29,510 --> 02:03:43,880
env command list a Z do you know if you

2168
02:03:41,300 --> 02:03:45,860
took a game that was using exclusively a

2169
02:03:43,880 --> 02:03:47,600
Z do and env command list and you said

2170
02:03:45,859 --> 02:03:49,609
what is that that is pretty much what

2171
02:03:47,600 --> 02:03:51,050
should have been b5 and they should have

2172
02:03:49,609 --> 02:03:53,960
been like everything else is deprecated

2173
02:03:51,050 --> 02:03:56,150
you can't use it right so if you oh if

2174
02:03:53,960 --> 02:03:58,520
you initialize OpenGL v5 you could only

2175
02:03:56,149 --> 02:03:59,929
use a CV oh that's it and if the car

2176
02:03:58,520 --> 02:04:02,060
doesn't support it it doesn't support

2177
02:03:59,930 --> 02:04:04,990
OpenGL b5 so you can put the sticker on

2178
02:04:02,060 --> 02:04:04,990
the box right

2179
02:04:09,908 --> 02:04:13,129
do you think Vulcan would not have this

2180
02:04:11,960 --> 02:04:15,559
type of problem with bugs because it's

2181
02:04:13,130 --> 02:04:16,940
more low-level no I mean low level

2182
02:04:15,559 --> 02:04:21,770
versus high level really isn't the

2183
02:04:16,939 --> 02:04:23,629
source of bugs the proliferation of

2184
02:04:21,770 --> 02:04:26,480
configuration possibilities usually is

2185
02:04:23,630 --> 02:04:28,849
what leads to bugs and so to the extent

2186
02:04:26,479 --> 02:04:33,288
that Vulcan may have limited the number

2187
02:04:28,849 --> 02:04:40,328
of configuration options it can probably

2188
02:04:33,288 --> 02:04:45,069
have less bugs in open jail but you know

2189
02:04:40,328 --> 02:04:45,069
I'm sure Vulcan has tons of bugs already

2190
02:04:51,359 --> 02:04:55,439
I mean the other way to say it is like

2191
02:04:53,460 --> 02:04:58,439
testing is really the thing that makes

2192
02:04:55,439 --> 02:05:00,658
things not have bugs and Vulcan is not

2193
02:04:58,439 --> 02:05:03,599
particularly testable I wouldn't say in

2194
02:05:00,658 --> 02:05:10,799
a way in any way that's more than other

2195
02:05:03,600 --> 02:05:12,869
things are testable I think that to the

2196
02:05:10,800 --> 02:05:14,850
extent that Vulcan was sort of designed

2197
02:05:12,868 --> 02:05:16,920
with a particular snapshot of hardware

2198
02:05:14,850 --> 02:05:19,409
in mind it will probably become

2199
02:05:16,920 --> 02:05:23,609
increasingly buggy over time would be my

2200
02:05:19,408 --> 02:05:25,229
suspicion so as graphics cards no longer

2201
02:05:23,609 --> 02:05:29,130
need you to do some of the things that

2202
02:05:25,229 --> 02:05:31,259
Vulcan requires you to do those things

2203
02:05:29,130 --> 02:05:33,239
will become emulated effectively inside

2204
02:05:31,260 --> 02:05:34,619
the driver layer it's actually already

2205
02:05:33,238 --> 02:05:37,259
going on with a number of things in

2206
02:05:34,618 --> 02:05:39,599
Vulcan even today those things will

2207
02:05:37,260 --> 02:05:41,670
become bug year in bug year because you

2208
02:05:39,600 --> 02:05:43,260
know they are now implementing the

2209
02:05:41,670 --> 02:05:44,819
driver to try to emulate behavior that

2210
02:05:43,260 --> 02:05:48,810
actually wasn't required it doesn't

2211
02:05:44,819 --> 02:05:50,609
exist anymore and then you just lead to

2212
02:05:48,810 --> 02:05:52,980
drivers having to have accurate

2213
02:05:50,609 --> 02:05:56,069
emulators which you know may or may not

2214
02:05:52,979 --> 02:05:58,198
be the case and the degree to which the

2215
02:05:56,069 --> 02:06:01,368
driver team is able to robustly test

2216
02:05:58,198 --> 02:06:07,589
those set of configurations you know is

2217
02:06:01,368 --> 02:06:11,488
implicated as well you know and I really

2218
02:06:07,590 --> 02:06:14,579
know how to how to say it any more than

2219
02:06:11,488 --> 02:06:15,809
that as for switching 2d 3d before

2220
02:06:14,579 --> 02:06:18,090
shipping the game I don't know if we

2221
02:06:15,810 --> 02:06:19,710
will or not we're in the position where

2222
02:06:18,090 --> 02:06:23,579
we may not really be pushing the

2223
02:06:19,710 --> 02:06:26,310
graphics hard enough to care like we may

2224
02:06:23,579 --> 02:06:29,609
not have enough craziness in our

2225
02:06:26,310 --> 02:06:32,550
graphics layer to need to switch to

2226
02:06:29,609 --> 02:06:36,509
something like D 3d to have better bug

2227
02:06:32,550 --> 02:06:40,440
levels like you know the degree to which

2228
02:06:36,510 --> 02:06:42,810
you exercise the GPU and its API largely

2229
02:06:40,439 --> 02:06:47,129
determine the degree to which you need

2230
02:06:42,810 --> 02:06:49,560
to worry about those those bugs and with

2231
02:06:47,130 --> 02:06:51,210
handmade hero we are I mean yeah we're a

2232
02:06:49,560 --> 02:06:53,969
little more complicated than a typical

2233
02:06:51,210 --> 02:06:57,989
2d game that's true we're certainly

2234
02:06:53,969 --> 02:06:59,819
doing more than that but the question is

2235
02:06:57,988 --> 02:07:02,009
are we doing enough more and would we be

2236
02:06:59,819 --> 02:07:04,109
able to just kind of at when we go clean

2237
02:07:02,010 --> 02:07:05,820
up our OpenGL code in the end or

2238
02:07:04,109 --> 02:07:08,069
okay this is all we're doing we're done

2239
02:07:05,819 --> 02:07:10,170
you know the game runs as we want it to

2240
02:07:08,069 --> 02:07:12,118
run and we have no more features that

2241
02:07:10,170 --> 02:07:14,460
we're trying to add in 3d when we clean

2242
02:07:12,118 --> 02:07:16,679
that up and look at it it is it likely

2243
02:07:14,460 --> 02:07:18,149
you know like if we do like a test run

2244
02:07:16,679 --> 02:07:19,980
on with people trying the hardware are

2245
02:07:18,149 --> 02:07:21,539
we finding a lot of bugs or or are we

2246
02:07:19,979 --> 02:07:23,250
just not and if the answer is we're not

2247
02:07:21,539 --> 02:07:25,289
then it's probably just not worth it

2248
02:07:23,250 --> 02:07:27,658
right because if it's working it's

2249
02:07:25,289 --> 02:07:30,000
working right however for finding that

2250
02:07:27,658 --> 02:07:31,679
we are kind of hitting OpenGL nonsense

2251
02:07:30,000 --> 02:07:33,510
and like it's not running on Intel

2252
02:07:31,679 --> 02:07:35,158
hardware for various reasons and we

2253
02:07:33,510 --> 02:07:37,199
gotta go through you know then you might

2254
02:07:35,158 --> 02:07:40,170
be like yeah I just switched to d3 d12 I

2255
02:07:37,198 --> 02:07:41,669
mean not eleven right because that works

2256
02:07:40,170 --> 02:07:44,090
pretty much everywhere that we would

2257
02:07:41,670 --> 02:07:44,090
care about

2258
02:07:52,519 --> 02:07:56,940
can you program can you program shaders

2259
02:07:55,139 --> 02:08:09,868
and assembly on Vulcan or any other

2260
02:07:56,939 --> 02:08:12,210
graphics API you you can't invoke in so

2261
02:08:09,868 --> 02:08:14,670
I guess here's what I'd say let me try

2262
02:08:12,210 --> 02:08:16,109
to explain the situation with that I got

2263
02:08:14,670 --> 02:08:17,578
to say that I am not enough of a grass

2264
02:08:16,109 --> 02:08:19,018
burger to know the answer the second

2265
02:08:17,578 --> 02:08:20,939
part of your question which is are there

2266
02:08:19,019 --> 02:08:26,190
any graphics api's that lets you program

2267
02:08:20,939 --> 02:08:28,529
in assembly language because that's a

2268
02:08:26,189 --> 02:08:30,058
very difficult question to answer and i

2269
02:08:28,529 --> 02:08:32,250
think you have to be a graphics expert

2270
02:08:30,059 --> 02:08:33,659
who's keeps up to date with all of the

2271
02:08:32,250 --> 02:08:36,260
GPU stuff to really know the answer to

2272
02:08:33,658 --> 02:08:41,578
that question what I can tell you is

2273
02:08:36,260 --> 02:08:45,000
there is a assembly ish language that

2274
02:08:41,578 --> 02:08:48,198
direct3d exposes and you can program in

2275
02:08:45,000 --> 02:08:54,090
that so if you want to you can use a

2276
02:08:48,198 --> 02:08:56,399
assembly like language the problem is

2277
02:08:54,090 --> 02:08:59,400
it's not necessarily related to the

2278
02:08:56,399 --> 02:09:03,000
assembly language of the actual GPU and

2279
02:08:59,399 --> 02:09:07,529
for good reason Nvidia and AMD have

2280
02:09:03,000 --> 02:09:09,210
different assembly languages and so you

2281
02:09:07,529 --> 02:09:10,738
can't really write a single assembly

2282
02:09:09,210 --> 02:09:14,670
language that would work on both in a

2283
02:09:10,738 --> 02:09:16,348
complete sense right not to mention the

2284
02:09:14,670 --> 02:09:18,029
fact that different cards may have

2285
02:09:16,349 --> 02:09:23,179
different instruction sets even from the

2286
02:09:18,029 --> 02:09:25,288
same vendor Vulcan I don't recall

2287
02:09:23,179 --> 02:09:27,658
defining an assembly language of any

2288
02:09:25,288 --> 02:09:31,078
kind so I think Vulcan is just a

2289
02:09:27,658 --> 02:09:35,479
straight-up no they define a thing

2290
02:09:31,078 --> 02:09:38,698
called SPI RV which is basically like a

2291
02:09:35,479 --> 02:09:40,948
intermediate representation so it's not

2292
02:09:38,698 --> 02:09:47,729
really an assembly language it's more

2293
02:09:40,948 --> 02:09:50,368
like LLVM IR like it's like a single

2294
02:09:47,729 --> 02:09:52,379
static assignment form kind of a thing

2295
02:09:50,368 --> 02:09:55,139
right if you know what that is it's it's

2296
02:09:52,380 --> 02:09:57,569
more like that it's more like here's an

2297
02:09:55,139 --> 02:09:59,969
intermediate representation that's not

2298
02:09:57,569 --> 02:10:02,670
assembly language because we don't know

2299
02:09:59,969 --> 02:10:04,590
what the actual machine code is we're

2300
02:10:02,670 --> 02:10:06,270
targeting until we run the

2301
02:10:04,590 --> 02:10:09,060
cuz we need to see what grabs card we're

2302
02:10:06,270 --> 02:10:12,060
on right so we don't really know so

2303
02:10:09,060 --> 02:10:15,179
instead we're gonna ship the IR that you

2304
02:10:12,060 --> 02:10:18,440
would probably start with to assemble to

2305
02:10:15,179 --> 02:10:25,109
like generate the code on the back end

2306
02:10:18,439 --> 02:10:26,488
so you know they've got that on Vulcan

2307
02:10:25,109 --> 02:10:29,130
and you could certainly choose to

2308
02:10:26,488 --> 02:10:31,229
program to that directly if you wanted

2309
02:10:29,130 --> 02:10:33,000
to because as far as I know they don't

2310
02:10:31,229 --> 02:10:35,459
try to prevent you from doing that

2311
02:10:33,000 --> 02:10:37,710
the specification for SBIR v is

2312
02:10:35,460 --> 02:10:40,198
available you can write your own

2313
02:10:37,710 --> 02:10:42,599
assembler that would output to it there

2314
02:10:40,198 --> 02:10:44,638
may just be assemblers already that

2315
02:10:42,599 --> 02:10:47,310
output to it I don't know because I've

2316
02:10:44,639 --> 02:10:50,489
never looked for one but I would assume

2317
02:10:47,310 --> 02:10:58,409
someone's done that it wouldn't be hard

2318
02:10:50,488 --> 02:11:00,089
right creator Lord doesn't that same

2319
02:10:58,408 --> 02:11:01,469
problem ApS growing old and unsuitable

2320
02:11:00,090 --> 02:11:05,550
for current graphic arts also applied to

2321
02:11:01,469 --> 02:11:13,859
X 12 it doesn't it doesn't so the thing

2322
02:11:05,550 --> 02:11:16,110
to remember is the thing that makes

2323
02:11:13,859 --> 02:11:18,750
things not have bugs is the testing as I

2324
02:11:16,109 --> 02:11:21,118
said before so the thing you have to

2325
02:11:18,750 --> 02:11:24,810
remember with Vulcan is nobody's testing

2326
02:11:21,118 --> 02:11:27,539
it right like Microsoft does not care at

2327
02:11:24,810 --> 02:11:30,570
all if Vulcan runs on Windows as far as

2328
02:11:27,539 --> 02:11:31,590
I know right like it does not matter to

2329
02:11:30,569 --> 02:11:33,210
them because they're like look we

2330
02:11:31,590 --> 02:11:34,469
provided you with DX 12 that's the thing

2331
02:11:33,210 --> 02:11:36,060
we're gonna test that's the thing that

2332
02:11:34,469 --> 02:11:38,460
Windows runs on that's the thing that

2333
02:11:36,060 --> 02:11:39,929
all of our stuff is using so when we do

2334
02:11:38,460 --> 02:11:42,569
compliance testing to figure out whether

2335
02:11:39,929 --> 02:11:45,359
dx12 is properly working on this range

2336
02:11:42,569 --> 02:11:48,059
of desktops in our testing lab that's

2337
02:11:45,359 --> 02:11:49,439
what we're testing we do not fire up

2338
02:11:48,060 --> 02:11:51,420
Vulcan and we don't care if it runs

2339
02:11:49,439 --> 02:11:53,368
right that would be my assumption about

2340
02:11:51,420 --> 02:11:54,868
what's generally going on now I don't

2341
02:11:53,368 --> 02:11:56,698
know maybe they're like we love Vulcan

2342
02:11:54,868 --> 02:11:58,289
and we run Vulcan all the time and we

2343
02:11:56,698 --> 02:12:00,029
actually don't care if TX 12 runs and so

2344
02:11:58,289 --> 02:12:00,840
we test Vulcan all the time I doubt

2345
02:12:00,029 --> 02:12:05,550
that's what they do

2346
02:12:00,840 --> 02:12:08,069
but you know there you go so yeah I

2347
02:12:05,550 --> 02:12:09,960
wouldn't say that the API changes at all

2348
02:12:08,069 --> 02:12:12,329
meaning I don't think dx12 is somehow

2349
02:12:09,960 --> 02:12:14,730
better suited than Vulcan to be bug free

2350
02:12:12,329 --> 02:12:15,569
and to that matter OpenGL is the same

2351
02:12:14,729 --> 02:12:18,009
way I don't think they're necessarily

2352
02:12:15,569 --> 02:12:19,929
better or worse suited right

2353
02:12:18,010 --> 02:12:22,180
it's more what I was trying to say in

2354
02:12:19,930 --> 02:12:24,670
the previous part was that they're not

2355
02:12:22,180 --> 02:12:28,150
better suited for it right so Vulcans

2356
02:12:24,670 --> 02:12:29,920
not better suited than anything else and

2357
02:12:28,149 --> 02:12:32,319
it will have bugs just like everything

2358
02:12:29,920 --> 02:12:35,109
else does because as it goes forward it

2359
02:12:32,319 --> 02:12:36,989
will atrophy so what you really want to

2360
02:12:35,109 --> 02:12:40,029
do and the reason that I said

2361
02:12:36,989 --> 02:12:42,399
specifically I and I don't know that I

2362
02:12:40,029 --> 02:12:44,529
said this on this episode I've said it

2363
02:12:42,399 --> 02:12:45,699
before the reason I don't think Vulcan

2364
02:12:44,529 --> 02:12:49,479
is very interesting unless you're an

2365
02:12:45,699 --> 02:12:51,939
Android programmer is because Apple is

2366
02:12:49,479 --> 02:12:54,939
testing metal and that's what they care

2367
02:12:51,939 --> 02:12:57,339
about if it runs Windows is testing DX

2368
02:12:54,939 --> 02:13:00,039
12 and 11 and that's what they care if

2369
02:12:57,340 --> 02:13:01,720
it runs anything else you use you're

2370
02:13:00,039 --> 02:13:04,269
just stepping on the third rail right

2371
02:13:01,720 --> 02:13:06,520
you're basically saying like look I know

2372
02:13:04,270 --> 02:13:08,560
that the platform vendor for this

2373
02:13:06,520 --> 02:13:11,080
platform isn't keeping this thing

2374
02:13:08,560 --> 02:13:14,380
running I know that they are not making

2375
02:13:11,079 --> 02:13:17,019
sure it works so I'm just rolling the

2376
02:13:14,380 --> 02:13:20,619
dice and hoping that Intel cares enough

2377
02:13:17,020 --> 02:13:22,780
to test Vulcan on their latest chips or

2378
02:13:20,619 --> 02:13:26,769
old chips to make sure they run ok with

2379
02:13:22,779 --> 02:13:30,849
it right so what's the point right you

2380
02:13:26,770 --> 02:13:32,980
don't it don't matter you know what you

2381
02:13:30,850 --> 02:13:35,520
need is reliability out of these api's

2382
02:13:32,979 --> 02:13:41,229
and using an API that is strictly

2383
02:13:35,520 --> 02:13:43,570
available on a vendor whim could be

2384
02:13:41,229 --> 02:13:45,459
useful but the only time I would really

2385
02:13:43,569 --> 02:13:47,259
say it's worth stepping on that third

2386
02:13:45,460 --> 02:13:50,350
rail there is if it was a really good

2387
02:13:47,260 --> 02:13:53,340
API and Vulcans a crap API it's not good

2388
02:13:50,350 --> 02:13:56,440
right it's very poorly designed so

2389
02:13:53,340 --> 02:13:58,090
you're just inviting a world of hurt by

2390
02:13:56,439 --> 02:14:00,219
using it there's there's no point to it

2391
02:13:58,090 --> 02:14:02,529
right you're just waiting for the other

2392
02:14:00,220 --> 02:14:04,390
shoe to drop while simultaneously doing

2393
02:14:02,529 --> 02:14:06,489
a tremendous amount of work to use an

2394
02:14:04,390 --> 02:14:08,860
API that wasn't well designed so if

2395
02:14:06,489 --> 02:14:11,319
you're going to already go through the

2396
02:14:08,859 --> 02:14:14,049
trouble of using ap is that aren't good

2397
02:14:11,319 --> 02:14:15,969
why not just use the two AP eyes that

2398
02:14:14,050 --> 02:14:17,980
aren't good that the that the actual

2399
02:14:15,970 --> 02:14:19,810
platform holders are guaranteeing will

2400
02:14:17,979 --> 02:14:28,659
work at least the extent that they can

2401
02:14:19,810 --> 02:14:30,490
right that's just basic you know herd

2402
02:14:28,659 --> 02:14:31,908
mentality strengthen numbers I'm gonna

2403
02:14:30,489 --> 02:14:33,859
cut right it's like just

2404
02:14:31,908 --> 02:14:37,429
use the thing that's getting tested by

2405
02:14:33,859 --> 02:14:44,948
your platform vendor because you know it

2406
02:14:37,429 --> 02:14:48,349
works right because you know it works

2407
02:14:44,948 --> 02:14:50,178
and and these other things who know I I

2408
02:14:48,349 --> 02:14:50,989
don't even know how long Volk and I'll

2409
02:14:50,179 --> 02:14:52,908
be around

2410
02:14:50,988 --> 02:14:55,009
you know it'll probably end up just like

2411
02:14:52,908 --> 02:14:56,839
OpenGL something that kind of works most

2412
02:14:55,010 --> 02:14:59,599
the time if you want to use it you can

2413
02:14:56,840 --> 02:15:01,788
its unwieldy and doesn't particularly

2414
02:14:59,599 --> 02:15:03,949
match anything particularly well anymore

2415
02:15:01,788 --> 02:15:06,438
right it's gonna be just like that like

2416
02:15:03,948 --> 02:15:07,759
Vulcan is just OpenGL v that they just

2417
02:15:06,439 --> 02:15:09,739
rewrote everything and said here's

2418
02:15:07,760 --> 02:15:12,860
another here's another one and we have

2419
02:15:09,738 --> 02:15:14,839
no coherent story about why this is

2420
02:15:12,859 --> 02:15:16,578
better it's not a better API it's not

2421
02:15:14,840 --> 02:15:18,260
more convenient to use it's not

2422
02:15:16,578 --> 02:15:21,408
guaranteed to be better to map to

2423
02:15:18,260 --> 02:15:24,229
Hardware forever and ever more anything

2424
02:15:21,408 --> 02:15:26,538
right it's not tested by platform

2425
02:15:24,229 --> 02:15:28,219
vendors other than Android probably in

2426
02:15:26,538 --> 02:15:30,679
the future I'm guessing so we can't

2427
02:15:28,219 --> 02:15:32,149
guarantee that for you oh and also by

2428
02:15:30,679 --> 02:15:33,918
the way we don't really have any

2429
02:15:32,149 --> 02:15:36,379
commitment to anything else about it

2430
02:15:33,918 --> 02:15:38,418
like we don't have a giant testing lab

2431
02:15:36,380 --> 02:15:39,918
guarantee you know that certifies these

2432
02:15:38,418 --> 02:15:41,090
things or ain't like like none of that's

2433
02:15:39,918 --> 02:15:43,578
true right so you're just basically

2434
02:15:41,090 --> 02:15:45,918
saying I'm using it because I like the

2435
02:15:43,578 --> 02:15:48,168
name you know I like being associated

2436
02:15:45,918 --> 02:15:51,760
with with a curing process for rubber I

2437
02:15:48,168 --> 02:15:51,760
don't know right

2438
02:15:58,488 --> 02:16:02,849
in him a hero there I saw this concept

2439
02:16:01,020 --> 02:16:04,199
of begin render n render I believe it is

2440
02:16:02,850 --> 02:16:05,850
called which reminds me of a fixed

2441
02:16:04,198 --> 02:16:07,529
function open Jill Jill begin Jill and

2442
02:16:05,850 --> 02:16:09,989
can you say how these functions and HH

2443
02:16:07,529 --> 02:16:12,448
roughly work or what is the constant

2444
02:16:09,988 --> 02:16:15,059
find it yeah they're not really similar

2445
02:16:12,448 --> 02:16:17,759
to the open GL ones at all what they are

2446
02:16:15,060 --> 02:16:21,360
used for is bracketing what has to

2447
02:16:17,760 --> 02:16:23,699
happen in the render because our

2448
02:16:21,359 --> 02:16:26,460
renderer does some things that need to

2449
02:16:23,698 --> 02:16:27,960
repeat sequences of events and also know

2450
02:16:26,460 --> 02:16:29,279
when a frame is done and stuff like that

2451
02:16:27,960 --> 02:16:31,859
so they're really just a way of

2452
02:16:29,279 --> 02:16:34,199
bracketing two so that the renderer

2453
02:16:31,859 --> 02:16:36,029
knows what isn't what's inside a

2454
02:16:34,200 --> 02:16:38,929
particular frame right because it needs

2455
02:16:36,030 --> 02:16:38,929
to do work with that

2456
02:16:49,739 --> 02:16:56,049
lo4 D says shouldn't these graphics API

2457
02:16:53,409 --> 02:16:59,530
is be made by GPU vendors or can they

2458
02:16:56,049 --> 02:17:00,909
not do that um I would vastly prefer it

2459
02:16:59,530 --> 02:17:03,849
if that's the route they had taken

2460
02:17:00,909 --> 02:17:06,039
meaning if Intel AMD and NVIDIA had just

2461
02:17:03,849 --> 02:17:07,210
released raw api's to their cards they

2462
02:17:06,040 --> 02:17:09,160
said these are the things that we

2463
02:17:07,209 --> 02:17:11,199
support I would love that that would

2464
02:17:09,159 --> 02:17:13,058
have way better unfortunately that's not

2465
02:17:11,200 --> 02:17:14,979
what happens what happens instead is

2466
02:17:13,058 --> 02:17:17,549
each platform vendor defines her own API

2467
02:17:14,978 --> 02:17:19,299
so Apple to find their own that's metal

2468
02:17:17,549 --> 02:17:21,759
Microsoft to find their own which is

2469
02:17:19,299 --> 02:17:24,009
direct3d and then vendors instead of

2470
02:17:21,760 --> 02:17:26,620
finding their own all get together and

2471
02:17:24,010 --> 02:17:28,679
define multiple of their own so now they

2472
02:17:26,620 --> 02:17:31,410
get together as a consortium with

2473
02:17:28,679 --> 02:17:34,870
Microsoft and apples feedback by the way

2474
02:17:31,409 --> 02:17:37,329
to all define Vulcan and all define

2475
02:17:34,870 --> 02:17:38,859
OpenGL which basically leads to a Vulcan

2476
02:17:37,329 --> 02:17:40,539
and OpenGL that are good for nobody

2477
02:17:38,859 --> 02:17:42,609
right because they're just this giant

2478
02:17:40,540 --> 02:17:45,420
mush of stuff that's not really under

2479
02:17:42,609 --> 02:17:48,399
anyone's really coherent

2480
02:17:45,420 --> 02:17:50,200
well-thought-out plan and without any

2481
02:17:48,398 --> 02:17:51,819
hardware target because everyone's

2482
02:17:50,200 --> 02:17:54,490
hardware has to be targeted it's got to

2483
02:17:51,819 --> 02:17:56,319
be maximally inclusive in terms of what

2484
02:17:54,489 --> 02:17:57,398
it supports because of that which means

2485
02:17:56,319 --> 02:17:59,439
that you end up in the lowest common

2486
02:17:57,398 --> 02:18:02,289
denominator denominator kind of

2487
02:17:59,439 --> 02:18:10,300
situation right so it's just it's just

2488
02:18:02,290 --> 02:18:14,109
really it ain't great right I'm sorry uh

2489
02:18:10,299 --> 02:18:16,599
I don't understand the question part I

2490
02:18:14,109 --> 02:18:18,639
mean current API is I know dx9 supports

2491
02:18:16,599 --> 02:18:21,030
it up to three point X or four point no

2492
02:18:18,638 --> 02:18:23,319
I'm not sure what you're referring to

2493
02:18:21,030 --> 02:18:24,760
case of aeschylus is what you expected

2494
02:18:23,319 --> 02:18:27,369
to learn from this series other than how

2495
02:18:24,760 --> 02:18:29,019
to make a game um actually I wouldn't

2496
02:18:27,370 --> 02:18:30,070
necessarily say that what I expect to

2497
02:18:29,019 --> 02:18:32,710
learn for the series is how to make a

2498
02:18:30,069 --> 02:18:34,779
game there's a lot of ways you can make

2499
02:18:32,709 --> 02:18:36,879
a game and you know you could you could

2500
02:18:34,780 --> 02:18:38,950
download an engine and use that or like

2501
02:18:36,879 --> 02:18:41,949
game maker or something right or RPG

2502
02:18:38,950 --> 02:18:43,599
maker so making a game is like a

2503
02:18:41,950 --> 02:18:45,519
different thing what I expect people to

2504
02:18:43,599 --> 02:18:48,728
learn from this series is sort of the

2505
02:18:45,519 --> 02:18:51,989
basics of like direct programming so

2506
02:18:48,728 --> 02:18:54,968
like learning how to make actual code

2507
02:18:51,989 --> 02:18:58,840
that does engine style or low-level

2508
02:18:54,968 --> 02:19:01,898
style features themselves so knowing how

2509
02:18:58,840 --> 02:19:03,459
to directly do a lot of stuff like

2510
02:19:01,898 --> 02:19:05,138
you know creating their own threads and

2511
02:19:03,459 --> 02:19:06,668
their own work queues and dispatching

2512
02:19:05,138 --> 02:19:08,168
work to those queues and programming

2513
02:19:06,668 --> 02:19:10,718
with Cindy and like all that sort of

2514
02:19:08,168 --> 02:19:12,218
stuff that you would never encounter if

2515
02:19:10,718 --> 02:19:14,498
you were just using someone else's

2516
02:19:12,218 --> 02:19:16,509
engine or you know programming at a

2517
02:19:14,498 --> 02:19:17,818
higher level or in JavaScript or

2518
02:19:16,510 --> 02:19:22,059
something like this right

2519
02:19:17,818 --> 02:19:24,158
so that's what I focus on in this series

2520
02:19:22,058 --> 02:19:26,648
not how to make a game per se because

2521
02:19:24,158 --> 02:19:29,228
making game is a broader topic and

2522
02:19:26,648 --> 02:19:31,658
there's a lot more things you might want

2523
02:19:29,228 --> 02:19:32,948
to think about if your only concern is

2524
02:19:31,658 --> 02:19:34,868
that you're trying to make a specific

2525
02:19:32,949 --> 02:19:36,219
game not you're trying to learn how to

2526
02:19:34,869 --> 02:19:39,010
be an engine program or a low-level

2527
02:19:36,218 --> 02:19:39,938
programmer right do I think the next

2528
02:19:39,010 --> 02:19:44,398
generation of consoles will adopt

2529
02:19:39,939 --> 02:19:47,349
retracing extensions I really don't know

2530
02:19:44,398 --> 02:19:49,448
it might be a little early for the next

2531
02:19:47,349 --> 02:19:50,828
generation of consoles remember we

2532
02:19:49,449 --> 02:19:52,779
haven't even really determined that the

2533
02:19:50,828 --> 02:19:54,189
current crop of GPUs that just came out

2534
02:19:52,779 --> 02:19:56,640
can really do ray tracing all that well

2535
02:19:54,189 --> 02:19:59,260
to begin with let's to see how that goes

2536
02:19:56,639 --> 02:20:00,998
it's it's gonna be an ongoing process

2537
02:19:59,260 --> 02:20:03,219
you know Nvidia might take a couple

2538
02:20:00,998 --> 02:20:06,279
years to really give us a card where the

2539
02:20:03,219 --> 02:20:09,488
ray tracing is really obviously great

2540
02:20:06,279 --> 02:20:11,560
so consoles probably aren't gonna get

2541
02:20:09,488 --> 02:20:12,939
there in the next generation because

2542
02:20:11,559 --> 02:20:15,930
remember that could be like next year

2543
02:20:12,939 --> 02:20:20,738
right it's been a while since the PS 5

2544
02:20:15,930 --> 02:20:23,949
Xbox one sort of style consoles came out

2545
02:20:20,738 --> 02:20:26,260
so expecting the next generation which

2546
02:20:23,949 --> 02:20:28,869
could be really soon depending on when I

2547
02:20:26,260 --> 02:20:30,340
don't know when platform vendors are

2548
02:20:28,869 --> 02:20:34,090
gonna choose to pull that trigger but

2549
02:20:30,340 --> 02:20:36,068
that could be pretty soon I don't think

2550
02:20:34,090 --> 02:20:39,850
it's safe to say that rate racing will

2551
02:20:36,068 --> 02:20:43,328
be ready by then the next next meaning

2552
02:20:39,850 --> 02:20:45,399
the PlayStation 6 or something that

2553
02:20:43,328 --> 02:20:47,350
sounds likely cuz five years from now

2554
02:20:45,398 --> 02:20:50,918
six years from now whatever that might

2555
02:20:47,350 --> 02:20:53,559
be that's given you know Nvidia and

2556
02:20:50,918 --> 02:20:57,668
probably AMD as well a lot of time to

2557
02:20:53,559 --> 02:21:00,609
like bolt on tons of ray-tracing power

2558
02:20:57,668 --> 02:21:02,889
into these chips and get it working well

2559
02:21:00,609 --> 02:21:08,229
and prove that it's useful and then

2560
02:21:02,889 --> 02:21:10,510
that's probably a more more reasonable

2561
02:21:08,228 --> 02:21:12,788
time for it why are most Triple A games

2562
02:21:10,510 --> 02:21:14,859
still running on dx11 is dx12 too new

2563
02:21:12,789 --> 02:21:15,590
and that well supported it's probably 6

2564
02:21:14,859 --> 02:21:16,880
or 6/1

2565
02:21:15,590 --> 02:21:18,648
dozen the other they probably don't want

2566
02:21:16,879 --> 02:21:20,989
to be locked in Windows 10 and I don't

2567
02:21:18,648 --> 02:21:22,639
think dx12 goes back to Windows 7 which

2568
02:21:20,989 --> 02:21:25,430
is still a platform they need to support

2569
02:21:22,639 --> 02:21:26,659
I suspect that's most of it

2570
02:21:25,430 --> 02:21:28,010
the other part of it maybe they just

2571
02:21:26,659 --> 02:21:30,439
don't really need the stuff from dx12

2572
02:21:28,010 --> 02:21:32,300
dx11 is pretty good and it's not clear

2573
02:21:30,439 --> 02:21:34,579
that you really need a lot from dx12 all

2574
02:21:32,299 --> 02:21:36,500
that much really so it's probably just

2575
02:21:34,579 --> 02:21:38,809
that that trade-off once it's clear that

2576
02:21:36,500 --> 02:21:41,090
everyone has a machine that can run dx12

2577
02:21:38,809 --> 02:21:46,219
that's probably more of a attractive

2578
02:21:41,090 --> 02:21:48,939
option right what would make a graphic

2579
02:21:46,219 --> 02:21:51,769
api great a grabs an api is great if it

2580
02:21:48,939 --> 02:21:55,609
contains a well thought-out model for

2581
02:21:51,770 --> 02:21:57,710
articulating from the game to the

2582
02:21:55,609 --> 02:22:02,000
graphics card precisely those things

2583
02:21:57,709 --> 02:22:06,049
that the game is trying to do and no

2584
02:22:02,000 --> 02:22:07,430
more your summative 5 5 5 how often do

2585
02:22:06,049 --> 02:22:08,688
you read other people's code bases

2586
02:22:07,430 --> 02:22:11,030
Chevie recommendations are good examples

2587
02:22:08,689 --> 02:22:14,300
of well Kobey's it's learned from these

2588
02:22:11,030 --> 02:22:17,180
days not too often I don't have a lot of

2589
02:22:14,299 --> 02:22:19,009
the recommendations but I would say the

2590
02:22:17,180 --> 02:22:21,409
in code bases are probably good ones to

2591
02:22:19,010 --> 02:22:23,389
look look at they have released a number

2592
02:22:21,409 --> 02:22:25,159
of them and those are you know we're

2593
02:22:23,389 --> 02:22:26,689
groundbreaking engines that you can go

2594
02:22:25,159 --> 02:22:29,809
read the source code so you know that

2595
02:22:26,689 --> 02:22:34,520
how they chose to do things was if

2596
02:22:29,809 --> 02:22:36,228
nothing else revolutionary in a sense

2597
02:22:34,520 --> 02:22:39,040
meaning you could say whatever else you

2598
02:22:36,228 --> 02:22:43,760
want to say about any of its engine code

2599
02:22:39,040 --> 02:22:45,740
they were far ahead of everyone else at

2600
02:22:43,760 --> 02:22:47,960
the time more or less so they were

2601
02:22:45,739 --> 02:22:50,000
programming in ways that were great by

2602
02:22:47,959 --> 02:22:51,500
definition whether you think their code

2603
02:22:50,000 --> 02:22:53,329
is good or not there was really

2604
02:22:51,500 --> 02:22:53,898
irrelevant the results speak for

2605
02:22:53,329 --> 02:22:55,700
themselves

2606
02:22:53,898 --> 02:22:58,219
so those would be good to look at just

2607
02:22:55,700 --> 02:23:01,609
in general I would suspect to understand

2608
02:22:58,219 --> 02:23:04,250
how that happened because it was very

2609
02:23:01,609 --> 02:23:09,729
remarkable but it did doom and quake

2610
02:23:04,250 --> 02:23:13,569
were both very very impressive things

2611
02:23:09,728 --> 02:23:13,569
technological artifacts for their time

2612
02:23:14,379 --> 02:23:26,199
was opengl 2.1 a great API mmm

2613
02:23:18,100 --> 02:23:27,280
probably not is there a good API for GUI

2614
02:23:26,200 --> 02:23:28,870
application of Windows that you would

2615
02:23:27,280 --> 02:23:31,870
suggest I don't know I've never really

2616
02:23:28,870 --> 02:23:33,939
used any of them modern ones I can tell

2617
02:23:31,870 --> 02:23:35,800
you QT is terrible so there's a negative

2618
02:23:33,939 --> 02:23:39,398
recommendation like don't ever use that

2619
02:23:35,799 --> 02:23:41,619
I do know that some people like I am GUI

2620
02:23:39,398 --> 02:23:42,219
I have a dear I am GUI I haven't used it

2621
02:23:41,620 --> 02:23:44,460
myself

2622
02:23:42,219 --> 02:23:48,340
but you know that's one to look at maybe

2623
02:23:44,459 --> 02:23:52,228
yeah so there you go all right I'm gonna

2624
02:23:48,340 --> 02:23:52,228
wrap it up we are done with questions

2625
02:23:58,950 --> 02:24:04,030
all right thank you very for joining me

2626
02:24:02,680 --> 02:24:05,829
for those sort of handmade hero sort of

2627
02:24:04,030 --> 02:24:07,149
pleasure coding with us always if you

2628
02:24:05,829 --> 02:24:09,309
would like to follow the series you can

2629
02:24:07,148 --> 02:24:11,529
always peer to the game on handmade hero

2630
02:24:09,309 --> 02:24:14,319
org it comes with a source code so you

2631
02:24:11,530 --> 02:24:17,530
can follow along with what we're doing I

2632
02:24:14,319 --> 02:24:19,539
will be back here at some undisclosed

2633
02:24:17,530 --> 02:24:22,180
point in the future because we're doing

2634
02:24:19,540 --> 02:24:26,260
surprise streams for Krampus loft this

2635
02:24:22,180 --> 02:24:30,010
week and probably next week too so I

2636
02:24:26,260 --> 02:24:32,228
will see you sometime soon check the

2637
02:24:30,010 --> 02:24:36,430
Twitter feed the handmade here on

2638
02:24:32,228 --> 02:24:39,159
Twitter feed or just this watch page for

2639
02:24:36,430 --> 02:24:44,340
more information thanks Jamie

2640
02:24:39,159 --> 02:24:44,340
I'll catch everyone next time

