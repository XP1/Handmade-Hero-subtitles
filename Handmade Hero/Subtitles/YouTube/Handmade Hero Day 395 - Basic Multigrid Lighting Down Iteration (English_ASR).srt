1
00:00:00,920 --> 00:00:05,459
hello everybody and welcome to hand made

2
00:00:03,870 --> 00:00:07,798
here on the show we code a complete game

3
00:00:05,459 --> 00:00:11,280
live on stream we are doing some

4
00:00:07,799 --> 00:00:15,210
lighting today and by lighting on me and

5
00:00:11,279 --> 00:00:17,969
my really weird nonsense idea for doing

6
00:00:15,210 --> 00:00:21,000
lighting by a multi grid simulation

7
00:00:17,969 --> 00:00:22,618
which doesn't make a whole lot of sense

8
00:00:21,000 --> 00:00:24,000
for reasons I've explained earlier but

9
00:00:22,618 --> 00:00:25,259
you know just because something doesn't

10
00:00:24,000 --> 00:00:30,899
make sense doesn't mean you shouldn't

11
00:00:25,260 --> 00:00:33,960
try it we're on day 395 here and we

12
00:00:30,899 --> 00:00:39,659
pretty much left off yesterday yes

13
00:00:33,960 --> 00:00:42,239
that's good left off last time with you

14
00:00:39,659 --> 00:00:43,919
know we could have just kept coding we

15
00:00:42,238 --> 00:00:47,488
were right in the middle of something we

16
00:00:43,920 --> 00:00:49,590
had just gotten light textures down

17
00:00:47,488 --> 00:00:51,019
sampling and so I'm just going to hop

18
00:00:49,590 --> 00:00:53,430
right back into it today because

19
00:00:51,020 --> 00:00:55,020
essentially we've just got to implement

20
00:00:53,429 --> 00:00:57,780
a bunch of stuff and test it out get

21
00:00:55,020 --> 00:01:01,289
working to see if this lady's game is at

22
00:00:57,780 --> 00:01:02,820
all interesting so today again day 395

23
00:01:01,289 --> 00:01:03,859
so if you want to follow along at home

24
00:01:02,820 --> 00:01:09,150
with what I'm doing

25
00:01:03,859 --> 00:01:12,719
you want day 394 as your your jumping

26
00:01:09,150 --> 00:01:15,450
off point alright so I'm going to go

27
00:01:12,719 --> 00:01:19,379
ahead and load up what we had here and

28
00:01:15,450 --> 00:01:21,600
just mention what it is it's currently

29
00:01:19,379 --> 00:01:22,949
we've got you know sort of the rendering

30
00:01:21,599 --> 00:01:24,688
of the game is happening in the

31
00:01:22,950 --> 00:01:28,020
background but we're drawing over it

32
00:01:24,688 --> 00:01:30,539
with just directly our textures our

33
00:01:28,019 --> 00:01:31,739
lighting textures and I made it so we

34
00:01:30,540 --> 00:01:34,290
could actually step through those

35
00:01:31,739 --> 00:01:37,169
textures and see what each of them look

36
00:01:34,290 --> 00:01:40,380
like and we're right now drawing a test

37
00:01:37,170 --> 00:01:43,769
red light into the center of them so

38
00:01:40,379 --> 00:01:45,839
what I want to point out here I just at

39
00:01:43,769 --> 00:01:48,000
the start because I wanted to test one

40
00:01:45,840 --> 00:01:50,820
thing before we get much further into it

41
00:01:48,000 --> 00:01:53,879
is that if you look at what's going on

42
00:01:50,819 --> 00:01:56,459
here with this red light you can imagine

43
00:01:53,879 --> 00:01:58,968
how far you might want that red light to

44
00:01:56,459 --> 00:02:02,099
propagate in terms of diffuse lighting

45
00:01:58,968 --> 00:02:04,259
it doesn't propagate very far even at

46
00:02:02,099 --> 00:02:06,149
the highest level so by the time we get

47
00:02:04,259 --> 00:02:08,939
out to here you know the red light has

48
00:02:06,149 --> 00:02:09,759
not gone very far and then eventually it

49
00:02:08,939 --> 00:02:13,688
averages

50
00:02:09,758 --> 00:02:16,149
- nothing and so what I wanted to take a

51
00:02:13,688 --> 00:02:19,750
look at was just thinking about what we

52
00:02:16,150 --> 00:02:23,260
would do if we wanted to make this light

53
00:02:19,750 --> 00:02:26,110
go further out and one of the things

54
00:02:23,259 --> 00:02:28,269
that is something we have to play with

55
00:02:26,110 --> 00:02:32,709
obviously we can change our algorithm

56
00:02:28,269 --> 00:02:34,840
for distributing lighting around but one

57
00:02:32,709 --> 00:02:37,750
of things I wanted to mention is the

58
00:02:34,840 --> 00:02:41,438
ratio of the numbers where a light

59
00:02:37,750 --> 00:02:44,709
source is present in the bitmap versus

60
00:02:41,438 --> 00:02:46,930
everywhere else in the bitmap is what

61
00:02:44,709 --> 00:02:49,269
will control how far it spreads to a

62
00:02:46,930 --> 00:02:51,099
certain degree so what I wanted to take

63
00:02:49,269 --> 00:02:53,709
a look at is what happens if you take

64
00:02:51,098 --> 00:02:56,108
the light source values and you make

65
00:02:53,709 --> 00:02:59,348
them much higher so for example if a

66
00:02:56,109 --> 00:03:02,040
neighboring pixel is 0 for meaning no

67
00:02:59,348 --> 00:03:05,259
light and we have one for meaning light

68
00:03:02,039 --> 00:03:07,628
then in terms of just a visible range of

69
00:03:05,259 --> 00:03:09,399
what we see which is 0 to 1 what would

70
00:03:07,628 --> 00:03:12,848
happen if we boosted those lights up

71
00:03:09,400 --> 00:03:14,709
well above the 0 to 1 range in terms of

72
00:03:12,848 --> 00:03:18,488
how far they would spread that's

73
00:03:14,709 --> 00:03:21,128
basically what I want to know you can

74
00:03:18,489 --> 00:03:23,079
see here we've got our fake like feeding

75
00:03:21,128 --> 00:03:26,168
code and our fake like feeding code is

76
00:03:23,079 --> 00:03:28,510
just going to put ones in there you can

77
00:03:26,169 --> 00:03:32,680
see so I'm just curious what happens if

78
00:03:28,509 --> 00:03:35,560
I put 100 in instead so now when I am

79
00:03:32,680 --> 00:03:37,780
creating that fake bitmap it's 100

80
00:03:35,560 --> 00:03:41,469
instead of 1 and now let's see what

81
00:03:37,780 --> 00:03:46,479
happens when it when it propagates so it

82
00:03:41,469 --> 00:03:50,128
looks to me at the moment like we're not

83
00:03:46,479 --> 00:03:52,268
really getting proper spreading either

84
00:03:50,128 --> 00:03:54,628
so I think there's something slightly

85
00:03:52,269 --> 00:03:59,109
wrong with our down sampling here

86
00:03:54,628 --> 00:04:02,858
because it might just be that we tapped

87
00:03:59,109 --> 00:04:05,709
the down sample at more than 2 X I'll

88
00:04:02,859 --> 00:04:06,760
have to think about that but that

89
00:04:05,709 --> 00:04:10,689
doesn't seem right to me either

90
00:04:06,759 --> 00:04:12,370
so when you know when this gets larger

91
00:04:10,689 --> 00:04:16,389
you can see that it's still at full

92
00:04:12,370 --> 00:04:18,879
value so when I switch each time I go up

93
00:04:16,389 --> 00:04:22,689
I should expect to see at least one

94
00:04:18,879 --> 00:04:23,810
pixel pick up that value and I'm not

95
00:04:22,689 --> 00:04:25,879
seeing that

96
00:04:23,810 --> 00:04:28,339
so that concerns me a little bit and I

97
00:04:25,879 --> 00:04:31,730
want to find out why that is because I

98
00:04:28,339 --> 00:04:33,619
don't know why that is so I think we

99
00:04:31,730 --> 00:04:41,569
just want to take a look at this here

100
00:04:33,620 --> 00:04:44,949
and see what's going on I think yeah so

101
00:04:41,569 --> 00:04:49,099
I think just looking at this code here

102
00:04:44,949 --> 00:04:51,800
we do have the problem that as we're

103
00:04:49,100 --> 00:04:54,950
going through the UVs for these things

104
00:04:51,800 --> 00:04:58,270
we may not be using the bilinear sample

105
00:04:54,949 --> 00:05:02,000
to actually do a bilinear sample right

106
00:04:58,269 --> 00:05:03,259
and so this code really probably has to

107
00:05:02,000 --> 00:05:06,199
get a little bit better now there's a

108
00:05:03,259 --> 00:05:08,029
couple things we can do here and let me

109
00:05:06,199 --> 00:05:10,519
just say what I mean by that in fact let

110
00:05:08,029 --> 00:05:14,269
me see if I can find the pen amid this

111
00:05:10,519 --> 00:05:16,969
mess that is this desk right now the pen

112
00:05:14,269 --> 00:05:18,409
for the Wacom tablet which you know you

113
00:05:16,970 --> 00:05:20,350
would think that I would have around

114
00:05:18,410 --> 00:05:31,570
there it is

115
00:05:20,350 --> 00:05:33,920
alright so allergies allergies

116
00:05:31,569 --> 00:05:34,639
everybody loves I'll actually no one

117
00:05:33,920 --> 00:05:36,290
loves allergies

118
00:05:34,639 --> 00:05:42,259
except allergists they'd be out of the

119
00:05:36,290 --> 00:05:46,180
job I suppose all right Milton has lost

120
00:05:42,259 --> 00:05:46,180
connection to tablet as is its way

121
00:05:49,980 --> 00:05:54,390
I need to add just a button there just

122
00:05:53,189 --> 00:05:56,250
needs to be a button in Milton it's like

123
00:05:54,389 --> 00:06:01,259
reconnect to the tablet that we could

124
00:05:56,250 --> 00:06:06,480
just hit there we go so here we are on

125
00:06:01,259 --> 00:06:12,870
day three ninety four and what we want

126
00:06:06,480 --> 00:06:18,170
to do here is we want to look at multi

127
00:06:12,870 --> 00:06:22,199
period up so what we have essentially is

128
00:06:18,170 --> 00:06:24,660
a texture and let's pretend it's a four

129
00:06:22,199 --> 00:06:27,810
by four texture and we're going to go to

130
00:06:24,660 --> 00:06:32,700
a two by two texture so when we do this

131
00:06:27,810 --> 00:06:36,089
sampling the most primitive version of

132
00:06:32,699 --> 00:06:39,750
the up sampling we could do would need

133
00:06:36,089 --> 00:06:44,759
to take into account at least four of

134
00:06:39,750 --> 00:06:48,240
the lower-level texels the the higher

135
00:06:44,759 --> 00:06:51,569
resolution texels if you will so if we

136
00:06:48,240 --> 00:06:55,560
have a B C and D that has to map to just

137
00:06:51,569 --> 00:06:57,870
a in this one right and the reason why

138
00:06:55,560 --> 00:07:01,290
we have to have at least four of these

139
00:06:57,870 --> 00:07:05,939
is because if we want like to be able to

140
00:07:01,290 --> 00:07:09,900
propagate two large two cells in the by

141
00:07:05,939 --> 00:07:14,009
using sort of this bigger coverage area

142
00:07:09,899 --> 00:07:16,289
at each level we can't lose any cells so

143
00:07:14,009 --> 00:07:18,480
each down sample we have to look at the

144
00:07:16,290 --> 00:07:19,980
contribution from all of the lower level

145
00:07:18,480 --> 00:07:23,850
cells when we go up to a higher level

146
00:07:19,980 --> 00:07:26,310
and the key there is that if we don't

147
00:07:23,850 --> 00:07:30,689
look at at least four then the collapse

148
00:07:26,310 --> 00:07:32,819
will be losing some cells right because

149
00:07:30,689 --> 00:07:35,040
if we just looked at say the a cell then

150
00:07:32,819 --> 00:07:38,250
the B D and C cells would not be there

151
00:07:35,040 --> 00:07:41,700
for is the smallest set you could look

152
00:07:38,250 --> 00:07:46,170
at two in each direction in order to

153
00:07:41,699 --> 00:07:48,509
produce the higher level version so when

154
00:07:46,170 --> 00:07:51,300
we do that there's two ways we can do

155
00:07:48,509 --> 00:07:54,569
that one is we can write our own the

156
00:07:51,300 --> 00:07:57,629
sampler and our own sampler would be one

157
00:07:54,569 --> 00:08:00,659
which just grabbed the texels and did

158
00:07:57,629 --> 00:08:02,639
the bi-linear ourselves now why would we

159
00:08:00,660 --> 00:08:03,390
do that well the reason we would do that

160
00:08:02,639 --> 00:08:05,189
is if

161
00:08:03,389 --> 00:08:07,079
we thought we wanted to eventually do

162
00:08:05,189 --> 00:08:10,610
something other than bi-linear which is

163
00:08:07,079 --> 00:08:13,589
fairly likely this is a weird lighting

164
00:08:10,610 --> 00:08:14,819
propagation algorithm the chances that

165
00:08:13,589 --> 00:08:16,469
we're going to want to do something

166
00:08:14,819 --> 00:08:18,779
other than just by letting your sample

167
00:08:16,470 --> 00:08:21,690
are pretty high what else could we do

168
00:08:18,779 --> 00:08:25,799
well we could just pick this center

169
00:08:21,689 --> 00:08:29,939
point 100% correctly so that when we are

170
00:08:25,800 --> 00:08:32,700
sampling a wee sample right there okay

171
00:08:29,939 --> 00:08:43,950
and then the bilinear filter would add

172
00:08:32,700 --> 00:08:51,000
those up and divide by 4 4 s awful

173
00:08:43,950 --> 00:08:53,670
allergies I don't think they are all

174
00:08:51,000 --> 00:08:55,379
that seasonal honestly I think it's more

175
00:08:53,669 --> 00:08:57,059
like there's so much construction in

176
00:08:55,379 --> 00:09:02,059
Seattle there's just tons of debris in

177
00:08:57,059 --> 00:09:02,059
the air and you breathe it all in

178
00:09:04,009 --> 00:09:13,110
progress all right I so what I would

179
00:09:10,080 --> 00:09:15,210
like to do I think is write the shader

180
00:09:13,110 --> 00:09:16,980
such that we are manually doing that

181
00:09:15,210 --> 00:09:19,290
process and the reason that I'd like to

182
00:09:16,980 --> 00:09:21,870
do that rather than try to make sure

183
00:09:19,289 --> 00:09:25,500
that we have the sample working 100%

184
00:09:21,870 --> 00:09:27,090
properly is because again I think we

185
00:09:25,500 --> 00:09:29,639
might want to fuss with the math

186
00:09:27,090 --> 00:09:30,899
eventually and if we don't want to fuss

187
00:09:29,639 --> 00:09:33,059
with the math then maybe this will be a

188
00:09:30,899 --> 00:09:35,939
little bit slower because it's not using

189
00:09:33,059 --> 00:09:38,069
the built-in bilinear filtering and so

190
00:09:35,940 --> 00:09:39,630
you know that's not a great decision in

191
00:09:38,070 --> 00:09:42,960
the end if it turns out we just end up

192
00:09:39,629 --> 00:09:45,240
with bilinear but if we do end up with

193
00:09:42,960 --> 00:09:48,060
just by linear in the end it's not a big

194
00:09:45,240 --> 00:09:50,129
deal to just turn it back whereas since

195
00:09:48,059 --> 00:09:51,539
I have to go do some debugging work now

196
00:09:50,129 --> 00:09:52,139
to make sure this propagation works in

197
00:09:51,539 --> 00:09:54,089
the first place

198
00:09:52,139 --> 00:09:55,620
I might as well do the full-bore one so

199
00:09:54,090 --> 00:10:00,060
that there's no cost to us in the future

200
00:09:55,620 --> 00:10:02,070
in changing that algorithm so what I

201
00:10:00,059 --> 00:10:05,069
want to do here you can see when we do

202
00:10:02,070 --> 00:10:10,170
the sample is I want to be able to get

203
00:10:05,070 --> 00:10:12,410
out four samples one from each of the

204
00:10:10,169 --> 00:10:15,529
corners and so what I'd like to do here

205
00:10:12,409 --> 00:10:15,529
to me

206
00:10:16,120 --> 00:10:22,210
for now is introduce my own function

207
00:10:18,850 --> 00:10:25,509
that'll do that for me so of these three

208
00:10:22,210 --> 00:10:29,889
which is like a manual trample or

209
00:10:25,509 --> 00:10:33,610
whatever and manual sample would get

210
00:10:29,889 --> 00:10:36,850
from a texture that is passed right so

211
00:10:33,610 --> 00:10:39,279
we want to pass one of these samplers

212
00:10:36,850 --> 00:10:45,639
here right so we want to pass a sampler

213
00:10:39,279 --> 00:10:49,720
2d the texture to read from your book

214
00:10:45,639 --> 00:10:52,840
called sampler and then we want to do

215
00:10:49,720 --> 00:10:57,460
this operation now to begin with again

216
00:10:52,840 --> 00:10:59,940
I'm going to start simple here's a the

217
00:10:57,460 --> 00:11:04,120
texture call I'm just going to pass in

218
00:10:59,940 --> 00:11:07,240
the sampler here we have the fragment UV

219
00:11:04,120 --> 00:11:09,879
and the fragment UV is going to get

220
00:11:07,240 --> 00:11:13,870
passed in there and then we have the RGB

221
00:11:09,879 --> 00:11:16,509
on the end so that should be about it

222
00:11:13,870 --> 00:11:18,759
and then I just return that result and

223
00:11:16,509 --> 00:11:27,210
now what I want to do is make sure that

224
00:11:18,759 --> 00:11:27,210
I'm able to do just that operation

225
00:11:33,659 --> 00:11:41,589
and if I do just that operation and I

226
00:11:40,179 --> 00:11:45,689
guess I should probably switch over here

227
00:11:41,590 --> 00:11:45,690
so I will end up behind my head again

228
00:11:46,590 --> 00:11:55,120
what I should see now is when I go look

229
00:11:50,799 --> 00:11:56,740
back at the game running after taking

230
00:11:55,120 --> 00:11:59,740
care of any compilers in the shader I

231
00:11:56,740 --> 00:12:04,659
should see exactly the same thing as I

232
00:11:59,740 --> 00:12:16,799
saw before right that's the sort of the

233
00:12:04,659 --> 00:12:18,850
expectation or the hope looks like I

234
00:12:16,799 --> 00:12:21,250
accidentally left the word texture on

235
00:12:18,850 --> 00:12:24,430
there there we go

236
00:12:21,250 --> 00:12:27,879
and so it looks like everything's fine

237
00:12:24,429 --> 00:12:29,589
here right all of these are totally fine

238
00:12:27,879 --> 00:12:32,289
so that's good

239
00:12:29,590 --> 00:12:33,970
and so now inside manual sample we want

240
00:12:32,289 --> 00:12:35,079
to be able to do the operation that I

241
00:12:33,970 --> 00:12:37,620
was just talking about now the

242
00:12:35,080 --> 00:12:43,360
interesting thing about this operation

243
00:12:37,620 --> 00:12:45,639
is that we essentially have possibly we

244
00:12:43,360 --> 00:12:47,769
may at this point not need the frag UV

245
00:12:45,639 --> 00:12:49,299
anymore because of the way that we're

246
00:12:47,769 --> 00:12:51,579
going to do the sampling here although

247
00:12:49,299 --> 00:12:54,309
I'm not really sure about that because

248
00:12:51,580 --> 00:12:58,150
again we sort of have this problem where

249
00:12:54,309 --> 00:13:03,250
we're down sampling past the point where

250
00:12:58,149 --> 00:13:05,649
we can actually guarantee that there's a

251
00:13:03,250 --> 00:13:07,659
two to one ratio I would prefer it if

252
00:13:05,649 --> 00:13:09,879
there always was a two to one ratio and

253
00:13:07,659 --> 00:13:11,709
maybe we'll have to enforce that in the

254
00:13:09,879 --> 00:13:14,019
future but right now I guess we're sort

255
00:13:11,710 --> 00:13:18,040
of still trying to get away with not

256
00:13:14,019 --> 00:13:22,149
doing that anyway so let's go ahead and

257
00:13:18,039 --> 00:13:26,879
see here what we can do about that so if

258
00:13:22,149 --> 00:13:30,480
I take a look at my open gel and Doc's

259
00:13:26,879 --> 00:13:30,480
shoulda left them open

260
00:13:33,669 --> 00:13:39,019
what you can see is that right now

261
00:13:35,990 --> 00:13:41,180
here's the page where we where we can

262
00:13:39,019 --> 00:13:44,060
see all the textile operations we have

263
00:13:41,179 --> 00:13:46,188
and the kind of texture fetching that

264
00:13:44,059 --> 00:13:47,748
we've been doing is this kind of work

265
00:13:46,188 --> 00:13:50,629
here but remember I think we mentioned

266
00:13:47,749 --> 00:13:53,058
this before because we used it for when

267
00:13:50,629 --> 00:13:54,980
we were doing the Deaf feeling stuff or

268
00:13:53,058 --> 00:13:56,659
at least try to use it at one point I

269
00:13:54,980 --> 00:13:58,850
don't remember what we ended up settling

270
00:13:56,659 --> 00:14:01,129
on for that but there's the thing called

271
00:13:58,850 --> 00:14:04,730
textile fetch and what textile fetch

272
00:14:01,129 --> 00:14:10,188
does is textile fetch will produce for

273
00:14:04,730 --> 00:14:13,009
you a specific texture sample without

274
00:14:10,188 --> 00:14:26,448
any adulteration so it'll just get back

275
00:14:13,009 --> 00:14:30,259
a texture literally and when it does

276
00:14:26,448 --> 00:14:33,019
that what we will be able to do is take

277
00:14:30,259 --> 00:14:34,850
neighboring samples and get their exact

278
00:14:33,019 --> 00:14:38,448
value so that we can average them using

279
00:14:34,850 --> 00:14:39,970
our own map if we want to right now the

280
00:14:38,448 --> 00:14:43,099
thing about this that's a little bit

281
00:14:39,970 --> 00:14:45,139
confusing right is when you do a textile

282
00:14:43,100 --> 00:14:47,120
fest you have to look up directly into

283
00:14:45,139 --> 00:14:50,389
the texture what that means is you have

284
00:14:47,120 --> 00:14:52,669
to pass as you can see here the actual

285
00:14:50,389 --> 00:14:54,289
textual textile coordinates that you

286
00:14:52,669 --> 00:14:58,039
wanted

287
00:14:54,289 --> 00:15:01,159
now that is easy to do in some sense if

288
00:14:58,039 --> 00:15:03,500
you know what the size of the thing is

289
00:15:01,159 --> 00:15:06,049
that you're looking into but harder if

290
00:15:03,500 --> 00:15:08,360
you don't and so that's why I say if

291
00:15:06,049 --> 00:15:10,578
this was only two to one it would be a

292
00:15:08,360 --> 00:15:14,720
lot easier now we can start by doing it

293
00:15:10,578 --> 00:15:17,328
just two to one and see what happens

294
00:15:14,720 --> 00:15:19,519
but the problem like I said it's just

295
00:15:17,328 --> 00:15:21,678
going to be that when you get at some

296
00:15:19,519 --> 00:15:24,799
point you get to a place where the

297
00:15:21,678 --> 00:15:27,740
downsample doesn't quite go 2 to 1 now

298
00:15:24,799 --> 00:15:30,438
what I'm as I'm sort of saying that in

299
00:15:27,740 --> 00:15:34,009
my in my head the thing I'm realizing

300
00:15:30,438 --> 00:15:37,730
too is I wonder how much of that is a

301
00:15:34,009 --> 00:15:41,149
problem here we're at some point we end

302
00:15:37,730 --> 00:15:43,639
up below the level where we're going to

303
00:15:41,149 --> 00:15:44,389
be two to one so we go into a place

304
00:15:43,639 --> 00:15:47,360
where we're

305
00:15:44,389 --> 00:15:51,799
actually not mapping exactly because

306
00:15:47,360 --> 00:15:54,110
again we know that 1920 by 1080 won't

307
00:15:51,799 --> 00:16:00,009
have that be the case what I was

308
00:15:54,110 --> 00:16:03,980
thinking is you know if we wanted to we

309
00:16:00,009 --> 00:16:06,110
could take that out of the equation by

310
00:16:03,980 --> 00:16:09,440
forcing the lighting at the moment to

311
00:16:06,110 --> 00:16:12,649
always be something that isn't 1920 by

312
00:16:09,440 --> 00:16:16,279
1080 right because when we do our

313
00:16:12,649 --> 00:16:18,169
lighting we could choose to do it on

314
00:16:16,278 --> 00:16:21,289
some other grid that's not the same as

315
00:16:18,169 --> 00:16:25,909
the resolution so if I want to for

316
00:16:21,289 --> 00:16:28,909
example I could go and what's a here it

317
00:16:25,909 --> 00:16:31,759
is I could go and force the lighting

318
00:16:28,909 --> 00:16:32,240
texture width and height to be something

319
00:16:31,759 --> 00:16:35,899
else

320
00:16:32,240 --> 00:16:39,620
right so suppose I always pick 1024 by

321
00:16:35,899 --> 00:16:41,208
512 for example in that case right now

322
00:16:39,620 --> 00:16:45,560
I've got so that I'm always down

323
00:16:41,208 --> 00:16:47,149
sampling by exactly 2 now it's not going

324
00:16:45,559 --> 00:16:49,278
to be when stretched to the screen it's

325
00:16:47,149 --> 00:16:50,809
not going to be square pixels right and

326
00:16:49,278 --> 00:16:55,220
you can kind of see that happening here

327
00:16:50,809 --> 00:16:58,039
and so as I kind of come out yes so you

328
00:16:55,220 --> 00:17:00,800
can see actually in this case exactly

329
00:16:58,039 --> 00:17:03,708
what I said would happen did happen

330
00:17:00,799 --> 00:17:06,769
actually so the problem was not the

331
00:17:03,708 --> 00:17:08,958
bilinear sample there I guess it was

332
00:17:06,769 --> 00:17:12,109
just the fact that we eventually got

333
00:17:08,959 --> 00:17:14,689
down below the 2 to 1 ratio so that's

334
00:17:12,109 --> 00:17:16,969
good to know right now what I'm not sure

335
00:17:14,689 --> 00:17:20,449
about is why we don't eventually get to

336
00:17:16,970 --> 00:17:22,490
a place where we've got the whole screen

337
00:17:20,449 --> 00:17:28,548
filled there so that's a little bit

338
00:17:22,490 --> 00:17:30,380
weird to me so I'd like to investigate

339
00:17:28,548 --> 00:17:33,048
that a little bit further but now at

340
00:17:30,380 --> 00:17:36,140
least we're propagating the light out in

341
00:17:33,048 --> 00:17:38,539
the way that I had wanted it to do so

342
00:17:36,140 --> 00:17:41,480
it's a little bit better right that's

343
00:17:38,539 --> 00:17:43,210
that's what I wanted to see is having it

344
00:17:41,480 --> 00:17:46,429
eventually go to fill the whole screen

345
00:17:43,210 --> 00:17:49,970
and so now if I go back and switch out

346
00:17:46,429 --> 00:17:55,070
of doing the 1.0 that's re the 100

347
00:17:49,970 --> 00:17:57,170
strong version and I switch back to just

348
00:17:55,069 --> 00:18:01,519
doing a emission of

349
00:17:57,170 --> 00:18:03,230
one right so now we can see how far it

350
00:18:01,519 --> 00:18:05,720
propagates we can see a little bit

351
00:18:03,230 --> 00:18:08,930
better it propagates quite far still

352
00:18:05,720 --> 00:18:11,089
right so that means the light with a

353
00:18:08,930 --> 00:18:12,710
power of ten in our made-up units

354
00:18:11,089 --> 00:18:15,230
remember these are not lumens or

355
00:18:12,710 --> 00:18:16,940
anything we're just playing with with

356
00:18:15,230 --> 00:18:20,539
just a value that means something only

357
00:18:16,940 --> 00:18:22,789
to us a light with power 10 still

358
00:18:20,539 --> 00:18:26,720
affects like that much of the screen

359
00:18:22,789 --> 00:18:28,579
right and and that's exactly what I

360
00:18:26,720 --> 00:18:32,750
wanted right that's exactly what I want

361
00:18:28,579 --> 00:18:34,460
so now the question is I guess we don't

362
00:18:32,750 --> 00:18:38,720
really need to worry too much about the

363
00:18:34,460 --> 00:18:39,799
upsample process now which is good let's

364
00:18:38,720 --> 00:18:42,289
also take a look at some of these other

365
00:18:39,799 --> 00:18:45,289
ones here so you can see these are like

366
00:18:42,289 --> 00:18:46,970
our other reflection pieces of

367
00:18:45,289 --> 00:18:50,079
reflection information and that all

368
00:18:46,970 --> 00:18:50,079
looks pretty good too right

369
00:18:50,289 --> 00:19:00,639
all right so that's all good um so yeah

370
00:18:56,000 --> 00:19:03,589
what I'd like to do now is potentially

371
00:19:00,640 --> 00:19:06,110
start fussing with that mat now again

372
00:19:03,589 --> 00:19:08,059
like I said why do we want to fuss with

373
00:19:06,109 --> 00:19:09,139
the math the reason I want to fuss with

374
00:19:08,059 --> 00:19:11,329
the math is so I think we're going to

375
00:19:09,140 --> 00:19:13,250
need our own versions of it and even

376
00:19:11,329 --> 00:19:17,000
just looking at it now I realize I think

377
00:19:13,250 --> 00:19:19,819
we we do have something already where we

378
00:19:17,000 --> 00:19:21,049
would want to fix so if you think about

379
00:19:19,819 --> 00:19:23,679
what's going on here

380
00:19:21,049 --> 00:19:26,480
we are trying to mix light sources

381
00:19:23,680 --> 00:19:29,950
together and in order to mix the light

382
00:19:26,480 --> 00:19:32,900
sources together what we need to do is

383
00:19:29,950 --> 00:19:36,049
we need to do stuff like say well if a

384
00:19:32,900 --> 00:19:37,280
surface was pointing or an emitter or

385
00:19:36,049 --> 00:19:38,720
whatever else it was pointing that

386
00:19:37,279 --> 00:19:41,059
direction escapes a submitter on the up

387
00:19:38,720 --> 00:19:43,069
path if an emitter was twenty math

388
00:19:41,059 --> 00:19:45,500
direction and another emitter was

389
00:19:43,069 --> 00:19:46,579
pointing that direction then when we

390
00:19:45,500 --> 00:19:48,589
blend those together

391
00:19:46,579 --> 00:19:50,869
if this emitter was much stronger than

392
00:19:48,589 --> 00:19:52,849
this emitter we don't want to weight

393
00:19:50,869 --> 00:19:58,609
them equally we want the stronger

394
00:19:52,849 --> 00:20:03,909
emitter to take more of that to be more

395
00:19:58,609 --> 00:20:07,879
dominant right so when we do that blend

396
00:20:03,910 --> 00:20:10,070
what we want to do is wait the blend by

397
00:20:07,880 --> 00:20:10,559
the emitter now there's two ways we can

398
00:20:10,069 --> 00:20:14,308
do that

399
00:20:10,558 --> 00:20:18,148
we can either pre multiply the values or

400
00:20:14,308 --> 00:20:19,769
we can waste them during the blend the

401
00:20:18,148 --> 00:20:22,558
reason waiting them during the blend

402
00:20:19,769 --> 00:20:27,359
might be better is because it could lead

403
00:20:22,558 --> 00:20:30,690
to smaller data for us the example is

404
00:20:27,359 --> 00:20:35,609
right now we only need an RGB texture

405
00:20:30,690 --> 00:20:37,590
for our NX and Y D which is the pack

406
00:20:35,609 --> 00:20:40,648
texture that has the normal to the

407
00:20:37,589 --> 00:20:44,158
surface x and y in it well the normal

408
00:20:40,648 --> 00:20:49,888
X&amp;Y can only be expressed in two values

409
00:20:44,159 --> 00:20:52,440
if we a you know if we a priori know

410
00:20:49,888 --> 00:20:57,118
that they are always going to be

411
00:20:52,440 --> 00:20:59,639
normalized so NX + y + Z the N Z can be

412
00:20:57,118 --> 00:21:02,158
recovered from just the n XM e and Y

413
00:20:59,638 --> 00:21:04,888
only in the circumstance where we know

414
00:21:02,159 --> 00:21:08,970
that they you know the length of these

415
00:21:04,888 --> 00:21:11,219
this thing is 1 right because then we've

416
00:21:08,970 --> 00:21:13,740
got something to solve for if we can't

417
00:21:11,220 --> 00:21:18,230
do that then we have no idea get rid of

418
00:21:13,740 --> 00:21:22,378
this milton really doesn't did not like

419
00:21:18,230 --> 00:21:24,538
having that run in the background I was

420
00:21:22,378 --> 00:21:27,319
taking if all the GPU time or CPU time

421
00:21:24,538 --> 00:21:30,058
not sure which probably GP time anyway I

422
00:21:27,319 --> 00:21:32,819
so if we want to do stuff like that then

423
00:21:30,058 --> 00:21:34,888
we have to do the blend correctly we

424
00:21:32,819 --> 00:21:36,418
can't just pre multiply these values by

425
00:21:34,888 --> 00:21:39,628
the strength of the light and have it

426
00:21:36,419 --> 00:21:43,559
come out in the wash the alternative

427
00:21:39,628 --> 00:21:47,490
again would be to do NX + y + Z D as an

428
00:21:43,558 --> 00:21:48,628
RGBA then those can be pre multiplied by

429
00:21:47,490 --> 00:21:52,769
the strength of the light and the

430
00:21:48,628 --> 00:21:54,269
blending will just work so again options

431
00:21:52,769 --> 00:21:56,759
there I'm not sure which one we want to

432
00:21:54,269 --> 00:22:02,480
do but we have to do something right and

433
00:21:56,759 --> 00:22:05,069
the same would be true for the

434
00:22:02,480 --> 00:22:07,110
reflectance of the surface I guess if

435
00:22:05,069 --> 00:22:09,628
the surfaces were bigger or smaller

436
00:22:07,109 --> 00:22:14,339
which on earth so I think it's really

437
00:22:09,628 --> 00:22:18,769
only the nxny that I can think of at

438
00:22:14,339 --> 00:22:18,769
this point that would actually need that

439
00:22:19,519 --> 00:22:23,940
so that does seem like at that point if

440
00:22:22,470 --> 00:22:26,009
that was the case if it's only

441
00:22:23,940 --> 00:22:28,980
in x and y then maybe you know for the

442
00:22:26,009 --> 00:22:30,929
sake of preserving our ability to

443
00:22:28,980 --> 00:22:38,490
potentially still use the bilinear

444
00:22:30,929 --> 00:22:40,590
hardware that does have me kind of

445
00:22:38,490 --> 00:22:44,878
thinking that maybe it would be better

446
00:22:40,589 --> 00:22:47,519
if we just expanded nxny and ZD 2 in our

447
00:22:44,878 --> 00:22:52,199
GBA because at that point we could still

448
00:22:47,519 --> 00:22:53,490
rely on the bilinear filter to do the

449
00:22:52,200 --> 00:23:05,129
work for us

450
00:22:53,490 --> 00:23:07,019
and that would be good well I'm going to

451
00:23:05,128 --> 00:23:11,250
go ahead and I think implement this in

452
00:23:07,019 --> 00:23:15,659
the bilinear downsample sense I would

453
00:23:11,250 --> 00:23:17,460
also like to know I think here's the

454
00:23:15,659 --> 00:23:19,860
other thing that probably we want to do

455
00:23:17,460 --> 00:23:21,990
to keep ourselves from being in trouble

456
00:23:19,859 --> 00:23:25,528
here and I didn't do it I wasn't careful

457
00:23:21,990 --> 00:23:27,179
about it before so the other thing that

458
00:23:25,528 --> 00:23:29,339
I think we want to do here is as the

459
00:23:27,179 --> 00:23:32,100
light indexes light buffer count stuff

460
00:23:29,339 --> 00:23:34,678
is is happening where we're going

461
00:23:32,099 --> 00:23:37,288
successively smaller here when we do

462
00:23:34,679 --> 00:23:39,389
this text whip text height we're

463
00:23:37,288 --> 00:23:42,058
dividing it by two and what you can see

464
00:23:39,388 --> 00:23:45,240
there is when we do that / - it's a

465
00:23:42,058 --> 00:23:48,569
destructive / - so what I mean by that

466
00:23:45,240 --> 00:23:51,329
is let's suppose we divide by two down

467
00:23:48,569 --> 00:23:54,839
below the level where we would be doing

468
00:23:51,329 --> 00:24:00,928
one-to-one now I did isolate it like I

469
00:23:54,839 --> 00:24:04,668
said - doing just powers of two here so

470
00:24:00,929 --> 00:24:06,840
we know that now we're not getting a

471
00:24:04,669 --> 00:24:09,570
problem where we're not taking enough

472
00:24:06,839 --> 00:24:12,240
samples at some particular level but if

473
00:24:09,569 --> 00:24:14,788
you imagine we were doing 1920 by 1080

474
00:24:12,240 --> 00:24:18,569
right then what you can see happened

475
00:24:14,788 --> 00:24:21,000
there is if I look at 1080 that's the

476
00:24:18,569 --> 00:24:24,798
one that'll blow up first I divide by 2

477
00:24:21,000 --> 00:24:28,019
I get 540 I divide by 2 I get to 70 / -

478
00:24:24,798 --> 00:24:31,589
135 this is no longer even so when I

479
00:24:28,019 --> 00:24:36,240
divide by 2 now I'll get 67.5

480
00:24:31,589 --> 00:24:39,449
now if I were to round that up to 68

481
00:24:36,240 --> 00:24:42,839
then I would still be able to divide by

482
00:24:39,450 --> 00:24:46,650
two and know that the 68 right the the

483
00:24:42,839 --> 00:24:50,519
texture that 68 long would still have at

484
00:24:46,650 --> 00:24:56,220
least one sample for every two Texas in

485
00:24:50,519 --> 00:25:00,329
the 135 texture right however if I round

486
00:24:56,220 --> 00:25:04,230
down to 67 then at least in one place

487
00:25:00,329 --> 00:25:06,058
we're going to skip a Texel right we're

488
00:25:04,230 --> 00:25:08,069
going to have a place where we're

489
00:25:06,058 --> 00:25:09,928
sampling only from one text so instead

490
00:25:08,069 --> 00:25:13,349
of two texels if that just has to be the

491
00:25:09,929 --> 00:25:16,230
case right because we don't have as many

492
00:25:13,349 --> 00:25:18,539
samples as half the number we have point

493
00:25:16,230 --> 00:25:21,000
five less instead of point five more

494
00:25:18,539 --> 00:25:24,509
right and so you can imagine you know

495
00:25:21,000 --> 00:25:28,740
how this works right let's say we took a

496
00:25:24,509 --> 00:25:31,829
4 wide text texture right we said

497
00:25:28,740 --> 00:25:34,500
instead of four wide it's five wide ok

498
00:25:31,829 --> 00:25:37,019
and now we're going to represent that in

499
00:25:34,500 --> 00:25:39,240
one of two ways one way we're going to

500
00:25:37,019 --> 00:25:41,789
round the half-up so we're going to say

501
00:25:39,240 --> 00:25:44,519
we're going to map it to three right

502
00:25:41,789 --> 00:25:50,058
well how does it map to three it Maps

503
00:25:44,519 --> 00:25:50,058
the three like roughly right like this

504
00:25:50,329 --> 00:25:57,629
okay and what you can see there is for

505
00:25:54,210 --> 00:25:59,910
any given Texel we have at least two

506
00:25:57,630 --> 00:26:03,510
things it could map to when you take

507
00:25:59,910 --> 00:26:05,970
that sample right so if we wanted to

508
00:26:03,509 --> 00:26:09,269
guarantee that we always had a new

509
00:26:05,970 --> 00:26:10,890
sample for every two samples we would so

510
00:26:09,269 --> 00:26:12,990
the thing we be introducing is some

511
00:26:10,890 --> 00:26:14,550
Texel would actually be able to touch

512
00:26:12,990 --> 00:26:16,589
three and we'd have to come up with just

513
00:26:14,549 --> 00:26:18,659
some arbitrary rule for picking which

514
00:26:16,589 --> 00:26:21,808
two it used but we would never have the

515
00:26:18,660 --> 00:26:24,769
case where it wouldn't on the other hand

516
00:26:21,808 --> 00:26:28,710
let's say we pick one where we've got

517
00:26:24,769 --> 00:26:30,000
two well in this case we've got more

518
00:26:28,710 --> 00:26:34,440
than one texel

519
00:26:30,000 --> 00:26:36,720
that has three so whatever we pick we'll

520
00:26:34,440 --> 00:26:39,539
never be able to get all of our texels

521
00:26:36,720 --> 00:26:42,900
for this one we would these two go to

522
00:26:39,539 --> 00:26:45,149
here these two go to here and these two

523
00:26:42,900 --> 00:26:47,820
go to here and we over sampled this

524
00:26:45,150 --> 00:26:49,950
Texel so the only bug is over sampling

525
00:26:47,819 --> 00:26:53,250
in this one we have the

526
00:26:49,950 --> 00:26:57,450
problem these two go to here and these

527
00:26:53,250 --> 00:27:00,599
two go to here we don't have any way of

528
00:26:57,450 --> 00:27:03,778
sampling this middle Texel this middle

529
00:27:00,599 --> 00:27:05,038
text we'll just got lost now normally

530
00:27:03,778 --> 00:27:07,200
you think that's not that big of a deal

531
00:27:05,038 --> 00:27:09,450
in our case where we're counting on this

532
00:27:07,200 --> 00:27:11,220
to propagate light it could be huge

533
00:27:09,450 --> 00:27:12,509
because if that's the only textile

534
00:27:11,220 --> 00:27:14,190
that's recording the information for a

535
00:27:12,509 --> 00:27:17,460
very powerful light in the scene and

536
00:27:14,190 --> 00:27:19,409
that isn't picked up we get a flicker on

537
00:27:17,460 --> 00:27:21,240
that frame where that light goes away

538
00:27:19,409 --> 00:27:25,278
entirely at the high level of

539
00:27:21,240 --> 00:27:25,278
propagation and we don't want that right

540
00:27:26,179 --> 00:27:31,559
so what we probably want to do here is

541
00:27:29,369 --> 00:27:35,548
well like I was saying is when we do

542
00:27:31,558 --> 00:27:37,678
this / - we probably want to do a safe /

543
00:27:35,548 --> 00:27:45,089
- so what we probably want to do is

544
00:27:37,679 --> 00:27:47,580
detect with plus 1/2 so that way we're

545
00:27:45,089 --> 00:27:50,548
always going to keep ourselves at an

546
00:27:47,579 --> 00:27:53,428
even divide down and we're never going

547
00:27:50,548 --> 00:27:56,339
to get into a situation where the

548
00:27:53,429 --> 00:28:03,929
texture would drop below that sampling

549
00:27:56,339 --> 00:28:07,048
boundary okay so here's that process

550
00:28:03,929 --> 00:28:12,059
again right that operation will not

551
00:28:07,048 --> 00:28:13,769
affect the 1024 by 512 let's go back to

552
00:28:12,058 --> 00:28:16,769
using render with render height for a

553
00:28:13,769 --> 00:28:19,919
second which is not 1920 by 1080 it's

554
00:28:16,769 --> 00:28:22,380
one drop below that because we were

555
00:28:19,919 --> 00:28:24,419
running at a lower resolution and let's

556
00:28:22,380 --> 00:28:27,389
see what happens here so yeah you can

557
00:28:24,419 --> 00:28:30,480
see now we've got it so that it's

558
00:28:27,388 --> 00:28:32,668
actually working correctly even at the

559
00:28:30,480 --> 00:28:35,490
render resolution and and that was

560
00:28:32,669 --> 00:28:37,169
exactly what I had hoped to see right so

561
00:28:35,490 --> 00:28:40,319
I think that was our only problem is

562
00:28:37,169 --> 00:28:45,480
forgetting that fact you know that we

563
00:28:40,319 --> 00:28:49,829
had sort of a problem yeah with that

564
00:28:45,480 --> 00:28:55,380
aspect of of the situation so what I'd

565
00:28:49,829 --> 00:28:58,259
like to do now is go ahead and and try

566
00:28:55,380 --> 00:29:02,220
doing this propagation

567
00:28:58,259 --> 00:29:03,210
the sort of the final down sample

568
00:29:02,220 --> 00:29:05,940
version

569
00:29:03,210 --> 00:29:09,630
we're after we propagate the stuff up we

570
00:29:05,940 --> 00:29:11,220
also propagate it back down right so now

571
00:29:09,630 --> 00:29:13,860
that we can look at the of the up

572
00:29:11,220 --> 00:29:16,350
propagation and it looks like what I

573
00:29:13,859 --> 00:29:17,939
want we could do the propagation down

574
00:29:16,349 --> 00:29:20,250
now the other thing we can do like I

575
00:29:17,940 --> 00:29:22,200
said at this point is is fix the

576
00:29:20,250 --> 00:29:24,390
blending so that lights get averaged

577
00:29:22,200 --> 00:29:25,590
properly at the moment we don't really

578
00:29:24,390 --> 00:29:27,990
have to worry about that because we only

579
00:29:25,589 --> 00:29:30,109
have one light but we will have to fix

580
00:29:27,990 --> 00:29:34,880
that when we add a second light source

581
00:29:30,109 --> 00:29:37,798
right so we can do either those I guess

582
00:29:34,880 --> 00:29:47,370
it's hard to decide I guess let's just

583
00:29:37,798 --> 00:29:54,538
go ahead and try to do let's try to do

584
00:29:47,369 --> 00:29:56,849
that process where we where we manually

585
00:29:54,538 --> 00:30:01,230
sample and we'll wait by the light

586
00:29:56,849 --> 00:30:05,428
intensity right and the way we could

587
00:30:01,230 --> 00:30:10,140
test that is so here is I believe the NZ

588
00:30:05,429 --> 00:30:13,220
map the NZD map so the MVP map is the

589
00:30:10,140 --> 00:30:15,929
thing that needs to get that weight

590
00:30:13,220 --> 00:30:18,870
distributed properly so what we could do

591
00:30:15,929 --> 00:30:22,048
is make two lights one week and one

592
00:30:18,869 --> 00:30:25,048
strong that will you know hit each other

593
00:30:22,048 --> 00:30:27,690
in the blend and we could then you know

594
00:30:25,048 --> 00:30:29,250
see if they properly combine the way

595
00:30:27,690 --> 00:30:31,798
that we think they should where the

596
00:30:29,250 --> 00:30:36,179
strong one will dominate in the

597
00:30:31,798 --> 00:30:38,220
successive blending right so what I want

598
00:30:36,179 --> 00:30:40,980
to do is my fake seed lighting here I

599
00:30:38,220 --> 00:30:42,409
want to update the fake seed lighting

600
00:30:40,980 --> 00:30:46,079
shader

601
00:30:42,409 --> 00:30:49,559
so that now when it does this business

602
00:30:46,079 --> 00:30:51,389
to light thing it can do multiple of

603
00:30:49,558 --> 00:30:53,668
those lights and so I want to be able to

604
00:30:51,390 --> 00:30:55,620
do that oops I want to be able to do

605
00:30:53,669 --> 00:30:59,399
that pretty easily so we can add lots of

606
00:30:55,619 --> 00:31:01,229
life into our test eventually because we

607
00:30:59,398 --> 00:31:03,658
want to be able to test a number of

608
00:31:01,230 --> 00:31:05,909
things before we get to the point where

609
00:31:03,659 --> 00:31:08,399
we're actually getting lights from the

610
00:31:05,909 --> 00:31:10,409
real render because again it's much

611
00:31:08,398 --> 00:31:13,439
easier for us to debug it in it sort of

612
00:31:10,409 --> 00:31:14,730
this fake way where everything is under

613
00:31:13,440 --> 00:31:16,230
our control and constructed very

614
00:31:14,730 --> 00:31:18,900
carefully that

615
00:31:16,230 --> 00:31:20,308
is once we start throwing real data into

616
00:31:18,900 --> 00:31:21,750
it because once you throw real data into

617
00:31:20,308 --> 00:31:23,519
it it's really hard to know what's right

618
00:31:21,750 --> 00:31:25,048
and what's wrong sometimes you can maybe

619
00:31:23,519 --> 00:31:27,029
think something you know if it's close

620
00:31:25,048 --> 00:31:28,710
to working but not quite right you're

621
00:31:27,029 --> 00:31:30,329
not going to be able to see those errors

622
00:31:28,710 --> 00:31:31,919
and you're just going to have subtly

623
00:31:30,329 --> 00:31:35,759
wrong lighting instead of getting to

624
00:31:31,919 --> 00:31:37,950
that really nice crisp correct point so

625
00:31:35,759 --> 00:31:40,319
what I want to do here is just make a

626
00:31:37,950 --> 00:31:44,519
function called light and what that'll

627
00:31:40,319 --> 00:31:46,079
be is it'll take this sort of data here

628
00:31:44,519 --> 00:31:48,029
we go

629
00:31:46,079 --> 00:31:49,949
and I'm going to have to make these

630
00:31:48,029 --> 00:31:51,599
Global's I believe that's allowed I

631
00:31:49,950 --> 00:31:54,058
don't know if it's actually less I hope

632
00:31:51,599 --> 00:31:56,428
it's left I'm going to make these

633
00:31:54,058 --> 00:31:58,519
Global's and what light will do is it's

634
00:31:56,429 --> 00:32:01,019
just going to do that same operation

635
00:31:58,519 --> 00:32:06,558
that we were doing before but it's going

636
00:32:01,019 --> 00:32:09,150
to do it with a you know parametric

637
00:32:06,558 --> 00:32:10,710
position for the light source size of

638
00:32:09,150 --> 00:32:16,610
the light source and strength of the

639
00:32:10,710 --> 00:32:22,319
light source so in this case we need a a

640
00:32:16,609 --> 00:32:25,619
light P and you can see that coming in

641
00:32:22,319 --> 00:32:30,269
here and it doesn't need to be X wide

642
00:32:25,619 --> 00:32:34,678
anymore so here we'll just do light it P

643
00:32:30,269 --> 00:32:36,750
and everything else here should work as

644
00:32:34,679 --> 00:32:40,650
expected we just want to sort of add

645
00:32:36,750 --> 00:32:45,089
some stuff in here so when we take a

646
00:32:40,650 --> 00:32:47,730
look at the the light radius and we want

647
00:32:45,089 --> 00:32:53,220
the light strength so we want basically

648
00:32:47,730 --> 00:32:56,339
a light radius we want a front emit we

649
00:32:53,220 --> 00:32:59,009
want to vacuum it we want a surface

650
00:32:56,339 --> 00:33:03,289
color actually we'll just leave circular

651
00:32:59,009 --> 00:33:03,289
zero and we want a

652
00:33:14,200 --> 00:33:18,850
so this is actually good that I'm

653
00:33:16,210 --> 00:33:25,179
looking at this so where there is

654
00:33:18,849 --> 00:33:28,808
lighting the surface color also you want

655
00:33:25,179 --> 00:33:30,190
to ignore anyone who has lighting

656
00:33:28,808 --> 00:33:32,918
information you want to make sure

657
00:33:30,190 --> 00:33:34,840
surface color is only blended from

658
00:33:32,919 --> 00:33:38,109
things that don't that are going to

659
00:33:34,839 --> 00:33:39,999
reflect light not just a minute right so

660
00:33:38,108 --> 00:33:42,278
that's another place that we might find

661
00:33:39,999 --> 00:33:44,739
that our up sample needs to be smart

662
00:33:42,278 --> 00:33:49,419
right so that's another good reason to

663
00:33:44,739 --> 00:33:52,778
do the up sample so anyway here's what

664
00:33:49,419 --> 00:33:56,379
we want all of these values to be so

665
00:33:52,778 --> 00:33:58,690
this is like a the light front emit the

666
00:33:56,378 --> 00:34:00,998
light back emit and the light and key

667
00:33:58,690 --> 00:34:04,499
and what we're going to do is replace

668
00:34:00,999 --> 00:34:07,749
all of those so in here where I call

669
00:34:04,499 --> 00:34:11,500
that going to look a little results

670
00:34:07,749 --> 00:34:15,240
there we're just going to pass those

671
00:34:11,500 --> 00:34:23,918
values that we were setting before

672
00:34:15,239 --> 00:34:28,469
exactly as they were and now we just

673
00:34:23,918 --> 00:34:30,638
need also that light radius so that's 10

674
00:34:28,469 --> 00:34:33,848
so now we're passing the light radius

675
00:34:30,639 --> 00:34:38,169
we're passing the front emit the back

676
00:34:33,849 --> 00:34:42,490
emit the light MP we don't need the

677
00:34:38,168 --> 00:34:46,539
surface color at the moment and there

678
00:34:42,489 --> 00:34:49,449
we've got our light we also can now say

679
00:34:46,539 --> 00:34:51,789
all right with our front emit and

680
00:34:49,449 --> 00:34:53,849
everything else I can now change this to

681
00:34:51,789 --> 00:34:57,130
using the ones that are passed in

682
00:34:53,849 --> 00:34:57,130
[Applause]

683
00:34:59,630 --> 00:35:08,349
[Applause]

684
00:35:02,219 --> 00:35:11,009
no weight side of that one's just zero

685
00:35:08,349 --> 00:35:15,219
[Applause]

686
00:35:11,009 --> 00:35:19,440
and so that's really all there is there

687
00:35:15,219 --> 00:35:25,689
so let's do ticks compile errors Matt

688
00:35:19,440 --> 00:35:27,970
what are they tell me no matching

689
00:35:25,690 --> 00:35:30,088
overloaded function for light there we

690
00:35:27,969 --> 00:35:30,088
go

691
00:35:32,650 --> 00:35:36,869
and so there's the the light source

692
00:35:37,920 --> 00:35:43,710
looks all good and now I should be able

693
00:35:40,989 --> 00:35:46,720
to freely just add a second one in here

694
00:35:43,710 --> 00:35:53,949
where maybe I'll just take whatever this

695
00:35:46,719 --> 00:35:57,098
is and add move it over slightly and

696
00:35:53,949 --> 00:35:59,588
I'll make this light significantly less

697
00:35:57,099 --> 00:36:02,489
powerful so this is like a super weak

698
00:35:59,588 --> 00:36:02,489
light or whatever

699
00:36:06,860 --> 00:36:10,019
[Applause]

700
00:36:11,789 --> 00:36:18,279
so there's my two light sources and see

701
00:36:16,659 --> 00:36:19,839
the weak one the strong one I think

702
00:36:18,280 --> 00:36:24,310
since I want them to collide rather

703
00:36:19,840 --> 00:36:30,250
violently what I want to do here

704
00:36:24,309 --> 00:36:33,730
probably is say well you know as these

705
00:36:30,250 --> 00:36:37,300
two collide let's make sure that they're

706
00:36:33,730 --> 00:36:42,429
both strong enough to be interesting so

707
00:36:37,300 --> 00:36:48,640
I'll make one 10 and 100 like so oops

708
00:36:42,429 --> 00:36:51,960
that's not right no wait I know that is

709
00:36:48,639 --> 00:36:54,609
right that was 10 and that was 100 I

710
00:36:51,960 --> 00:36:55,900
just move these up so they align there

711
00:36:54,610 --> 00:36:58,360
we go

712
00:36:55,900 --> 00:37:00,610
so yeah let's take a look at those and

713
00:36:58,360 --> 00:37:03,250
I'll also make this one have as a D

714
00:37:00,610 --> 00:37:05,620
value of 1 and I might as well make some

715
00:37:03,250 --> 00:37:15,880
different colors so I'll make the weaker

716
00:37:05,619 --> 00:37:17,289
light green and red so the the polarity

717
00:37:15,880 --> 00:37:19,030
of them basically flip or maybe I'll

718
00:37:17,289 --> 00:37:20,650
make it blue so that it's clear which

719
00:37:19,030 --> 00:37:28,290
texture we're looking at I don't get

720
00:37:20,650 --> 00:37:31,210
confused or something why did that go

721
00:37:28,289 --> 00:37:39,519
and modify that it's just a displacement

722
00:37:31,210 --> 00:37:44,760
all right so now as we go yeah so now it

723
00:37:39,519 --> 00:37:44,759
looks roughly correct in the sense that

724
00:37:45,869 --> 00:37:55,059
it appears to be propagating that light

725
00:37:49,119 --> 00:37:57,309
out reasonably well I am a little

726
00:37:55,059 --> 00:38:01,239
troubled by the green motion there but I

727
00:37:57,309 --> 00:38:04,420
guess it's ok yeah it's just because of

728
00:38:01,239 --> 00:38:10,799
the weird non power of Tunis of these

729
00:38:04,420 --> 00:38:16,119
textures but that looks pretty good so

730
00:38:10,800 --> 00:38:18,160
what you can see here is that even that

731
00:38:16,119 --> 00:38:19,779
I think they need to be a little closer

732
00:38:18,159 --> 00:38:21,789
together for me to really

733
00:38:19,780 --> 00:38:24,010
to this test because the other ones

734
00:38:21,789 --> 00:38:25,869
still a little too weak and blends out a

735
00:38:24,010 --> 00:38:28,080
little bit faster than I would need it

736
00:38:25,869 --> 00:38:28,079
to

737
00:38:44,789 --> 00:38:50,050
all right so what you can see here is

738
00:38:47,800 --> 00:38:51,640
these lights blend relatively correctly

739
00:38:50,050 --> 00:38:53,110
I mean correctly for some weird

740
00:38:51,639 --> 00:38:55,750
definition of correctly since this is a

741
00:38:53,110 --> 00:38:58,690
weird system that doesn't have units but

742
00:38:55,750 --> 00:39:00,280
you can see how that at a certain level

743
00:38:58,690 --> 00:39:03,309
they're both powerful enough when

744
00:39:00,280 --> 00:39:06,430
they're propagating to remember we can't

745
00:39:03,309 --> 00:39:07,840
visualize these light values properly so

746
00:39:06,429 --> 00:39:10,389
at this point they're both clamping off

747
00:39:07,840 --> 00:39:11,890
the end but you can see the green is

748
00:39:10,389 --> 00:39:14,829
much more dominant because as it

749
00:39:11,889 --> 00:39:16,569
continues to blend the green value is

750
00:39:14,829 --> 00:39:18,759
the one that persists and that's because

751
00:39:16,570 --> 00:39:21,039
again here you know they're both at like

752
00:39:18,760 --> 00:39:24,400
you know one of them's at 30 in one of

753
00:39:21,039 --> 00:39:29,789
them 3 or something right but as they go

754
00:39:24,400 --> 00:39:33,880
forward you can kind of get that sense

755
00:39:29,789 --> 00:39:36,730
right of the the green is the higher

756
00:39:33,880 --> 00:39:40,059
value so it continues to preserve itself

757
00:39:36,730 --> 00:39:44,619
right so what we want to do though is

758
00:39:40,059 --> 00:39:51,130
focus our attention more on like this so

759
00:39:44,619 --> 00:40:00,250
if you take a look at this I will say

760
00:39:51,130 --> 00:40:09,130
I'm not sure why so looking at this I'm

761
00:40:00,250 --> 00:40:15,820
a little confused the surface color is 0

762
00:40:09,130 --> 00:40:20,579
where the light sources are so that that

763
00:40:15,820 --> 00:40:20,580
bitmap looks like I would expect it to

764
00:40:20,969 --> 00:40:32,889
no no problem there

765
00:40:25,449 --> 00:40:35,579
but the where's my where is my actual

766
00:40:32,889 --> 00:40:40,289
editor to my editors get closed Thanks

767
00:40:35,579 --> 00:40:43,799
once they hit alt f4 once many times

768
00:40:40,289 --> 00:40:43,800
let's try that one more time

769
00:40:50,179 --> 00:40:56,368
all right so everything looks correct to

770
00:40:54,509 --> 00:41:00,119
me except for one thing that I'm little

771
00:40:56,369 --> 00:41:06,599
confused about which is looking at this

772
00:41:00,119 --> 00:41:09,630
bitmap oh I know why because everywhere

773
00:41:06,599 --> 00:41:11,789
else we are saying that the normal is

774
00:41:09,630 --> 00:41:18,088
pointing up so I need something that's

775
00:41:11,789 --> 00:41:21,150
not going to look like that so that does

776
00:41:18,088 --> 00:41:26,009
make sense however if we look at it here

777
00:41:21,150 --> 00:41:33,119
in this case my NP right my light NP

778
00:41:26,009 --> 00:41:37,318
here so I should be seeing 0 1 1 which

779
00:41:33,119 --> 00:41:40,289
is cyan is that what I normally set

780
00:41:37,318 --> 00:41:44,009
everything to by default okay I do I set

781
00:41:40,289 --> 00:41:45,960
0 1 10 all right well that's just the

782
00:41:44,009 --> 00:41:47,909
way it goes sometimes all right so let's

783
00:41:45,960 --> 00:41:50,849
suppose I wanted to sort of make

784
00:41:47,909 --> 00:41:52,649
something that would make more sense

785
00:41:50,849 --> 00:41:55,588
here what could I do

786
00:41:52,650 --> 00:41:57,389
well I guess I could set it to point the

787
00:41:55,588 --> 00:41:59,818
other direction which is like negative 1

788
00:41:57,389 --> 00:42:06,210
or something which would make it harder

789
00:41:59,818 --> 00:42:08,248
to view it but I would probably work I

790
00:42:06,210 --> 00:42:11,099
could also just say for the sake of an

791
00:42:08,248 --> 00:42:12,868
argument let's suppose I blacked out the

792
00:42:11,099 --> 00:42:21,450
rest of the area for now even though

793
00:42:12,869 --> 00:42:23,849
that's not realistic at all right all

794
00:42:21,449 --> 00:42:27,318
right so you can see how this one's

795
00:42:23,849 --> 00:42:29,940
blending and you can see how I'm getting

796
00:42:27,318 --> 00:42:32,038
exactly what I said I don't want right

797
00:42:29,940 --> 00:42:36,450
which is that I've got a bright light

798
00:42:32,039 --> 00:42:38,220
next to a less bright light and there

799
00:42:36,449 --> 00:42:40,169
unfortunately a little bit overlapping

800
00:42:38,219 --> 00:42:42,379
at the moment so maybe I shouldn't quite

801
00:42:40,170 --> 00:42:45,389
have them be that close to each other

802
00:42:42,380 --> 00:42:51,769
but I want them to be almost that close

803
00:42:45,389 --> 00:42:51,768
to each other there we go

804
00:42:52,358 --> 00:42:58,809
so when I take a look here and these

805
00:42:55,030 --> 00:43:03,190
guys intersect what I want to do is I

806
00:42:58,809 --> 00:43:06,190
don't I want that that information about

807
00:43:03,190 --> 00:43:08,769
the normals for that light to be

808
00:43:06,190 --> 00:43:19,090
persisting properly right because right

809
00:43:08,769 --> 00:43:20,829
now they're not and what I guess the the

810
00:43:19,090 --> 00:43:24,280
thing that's kind of bugging me about

811
00:43:20,829 --> 00:43:26,829
this is for surface reflectors versus

812
00:43:24,280 --> 00:43:28,750
surface lighting elements I wonder I do

813
00:43:26,829 --> 00:43:31,299
wonder a little bit about how this is

814
00:43:28,750 --> 00:43:32,980
really going to work because you know

815
00:43:31,300 --> 00:43:36,039
we're kind of treating this in such a

816
00:43:32,980 --> 00:43:38,380
weird in a such a strange fashion when

817
00:43:36,039 --> 00:43:40,480
you do the lighting transfer you know

818
00:43:38,380 --> 00:43:44,200
you're going to be looking at if the

819
00:43:40,480 --> 00:43:46,750
lights always predominate the surface

820
00:43:44,199 --> 00:43:55,118
shape then you're going to end up in

821
00:43:46,750 --> 00:43:57,400
this situation where yeah I guess maybe

822
00:43:55,119 --> 00:43:59,769
I really don't want that as much as it

823
00:43:57,400 --> 00:44:03,630
sounds weird maybe I really just want to

824
00:43:59,769 --> 00:44:03,630
keep it doing just the averaging

825
00:44:09,710 --> 00:44:14,690
see the dilemma I'm having here is that

826
00:44:12,679 --> 00:44:19,608
you know if you think about what you'd

827
00:44:14,690 --> 00:44:21,200
want to have happen is you've got you're

828
00:44:19,608 --> 00:44:24,920
sort of treating these things as you get

829
00:44:21,199 --> 00:44:27,558
further and further up the chain as more

830
00:44:24,920 --> 00:44:30,260
and more averaged versions of sort of a

831
00:44:27,559 --> 00:44:33,410
reflective of a piece of geometry almost

832
00:44:30,260 --> 00:44:35,510
right so you know as you go up you're

833
00:44:33,409 --> 00:44:37,818
trying to compute what the average

834
00:44:35,510 --> 00:44:41,210
facing direction of stuff in this area

835
00:44:37,818 --> 00:44:43,009
happens to be so that you can figure out

836
00:44:41,210 --> 00:44:46,068
how much transfer is happening to that

837
00:44:43,010 --> 00:44:50,569
area as a whole now the problem with

838
00:44:46,068 --> 00:44:53,300
that is this the light direction if you

839
00:44:50,568 --> 00:44:55,730
treat it as as one piece of geometry

840
00:44:53,300 --> 00:44:59,839
that is both trans is emitting and

841
00:44:55,730 --> 00:45:02,568
receiving light then you end up with the

842
00:44:59,838 --> 00:45:04,549
light you can't use the light direction

843
00:45:02,568 --> 00:45:05,989
and make it predominate because you

844
00:45:04,550 --> 00:45:10,910
would lose the information about the

845
00:45:05,989 --> 00:45:12,558
reflectors in that area so it makes me

846
00:45:10,909 --> 00:45:15,618
wonder a little bit whether the smarter

847
00:45:12,559 --> 00:45:17,750
way to do it is to have two textures one

848
00:45:15,619 --> 00:45:19,880
for the surface direction like we kind

849
00:45:17,750 --> 00:45:22,219
of like we have surface color and so you

850
00:45:19,880 --> 00:45:24,650
basically got you know emission color

851
00:45:22,219 --> 00:45:29,868
emission direction and surface color a

852
00:45:24,650 --> 00:45:37,059
surface direction and you know you you

853
00:45:29,869 --> 00:45:41,000
kind of you kind of sum them separately

854
00:45:37,059 --> 00:45:44,059
and I really don't know that's the best

855
00:45:41,000 --> 00:45:47,469
something I'm not super sure about like

856
00:45:44,059 --> 00:45:47,470
I don't have a good idea

857
00:46:18,530 --> 00:46:25,880
I guess what I say is since we probably

858
00:46:22,880 --> 00:46:28,490
want to try both I guess we should try

859
00:46:25,880 --> 00:46:29,660
it this way first because since we don't

860
00:46:28,489 --> 00:46:33,619
really know what we're dealing with here

861
00:46:29,659 --> 00:46:37,099
it'd be premature to say I mean you know

862
00:46:33,619 --> 00:46:39,529
they're both sort of just approximations

863
00:46:37,099 --> 00:46:43,119
to something one is a more crude

864
00:46:39,530 --> 00:46:43,120
approximation potentially

865
00:46:44,019 --> 00:46:50,449
but you know if they're already both of

866
00:46:47,539 --> 00:46:57,469
them are accrued so I don't know what to

867
00:46:50,449 --> 00:46:59,799
say about that really so I guess we'll

868
00:46:57,469 --> 00:47:03,079
just continue forward in along this path

869
00:46:59,800 --> 00:47:04,250
so I'm going to restore this to being I

870
00:47:03,079 --> 00:47:07,460
think there should be negative time

871
00:47:04,250 --> 00:47:10,460
actually and so these will be negative

872
00:47:07,460 --> 00:47:12,380
ten pointing upwards so they'll be kind

873
00:47:10,460 --> 00:47:15,500
of dropped back a bit that would also

874
00:47:12,380 --> 00:47:17,930
let me see them more clearly so there

875
00:47:15,500 --> 00:47:21,500
you can actually see the lights versus

876
00:47:17,929 --> 00:47:26,149
the backdrop and there's the surface

877
00:47:21,500 --> 00:47:29,199
reflectance there's the backside

878
00:47:26,150 --> 00:47:34,970
emission there's the front side emission

879
00:47:29,199 --> 00:47:38,329
all right okay

880
00:47:34,969 --> 00:47:39,679
so now what I want to do is I want to

881
00:47:38,329 --> 00:47:43,009
start looking at guess that the downward

882
00:47:39,679 --> 00:47:45,739
propagation part of this because we now

883
00:47:43,010 --> 00:47:47,960
do produce averaged versions we are not

884
00:47:45,739 --> 00:47:51,439
doing anything special with the multi

885
00:47:47,960 --> 00:47:53,300
with the up sampling I'm literally just

886
00:47:51,440 --> 00:47:55,280
leaving it as bilinear filtering for

887
00:47:53,300 --> 00:47:57,500
right now now in the future like I said

888
00:47:55,280 --> 00:48:00,800
we probably want to do something

889
00:47:57,500 --> 00:48:03,519
different there but at the moment that's

890
00:48:00,800 --> 00:48:03,519
what we're going to do

891
00:48:11,320 --> 00:48:19,700
okay so we need to create another shader

892
00:48:16,039 --> 00:48:23,449
now and this shader the multi light down

893
00:48:19,699 --> 00:48:25,909
shader is going to do sort of a similar

894
00:48:23,449 --> 00:48:28,099
process but it's going to have a ton

895
00:48:25,909 --> 00:48:29,989
more code in it the multi light-up

896
00:48:28,099 --> 00:48:32,569
shader is a pretty cheap pretty

897
00:48:29,989 --> 00:48:36,009
uninteresting shader the only thing

898
00:48:32,570 --> 00:48:39,890
about if it's a little bit out of the

899
00:48:36,010 --> 00:48:42,590
the that's out of the ordinary in this

900
00:48:39,889 --> 00:48:46,069
case is just the fact that it happens to

901
00:48:42,590 --> 00:48:49,490
write to more than one target so in to

902
00:48:46,070 --> 00:48:51,320
the extent where it is or to tip except

903
00:48:49,489 --> 00:48:55,179
where it has anything particularly odd

904
00:48:51,320 --> 00:48:57,890
about it at all that's what it is right

905
00:48:55,179 --> 00:49:00,889
so when we look at the compiled multiple

906
00:48:57,889 --> 00:49:02,839
light down shader this is really the one

907
00:49:00,889 --> 00:49:04,909
that's going to do all of the work and

908
00:49:02,840 --> 00:49:07,070
so this was going to be much more

909
00:49:04,909 --> 00:49:10,129
expensive although it's going to write

910
00:49:07,070 --> 00:49:11,780
two less textures so instead of having

911
00:49:10,130 --> 00:49:14,320
an out where we're going

912
00:49:11,780 --> 00:49:17,030
front emit vacuum it service color MP

913
00:49:14,320 --> 00:49:18,620
the surface color and the NP are never

914
00:49:17,030 --> 00:49:21,320
going to change we can't change the

915
00:49:18,619 --> 00:49:22,670
color of surfaces we can't change the

916
00:49:21,320 --> 00:49:25,400
direction they're pointing on the way

917
00:49:22,670 --> 00:49:29,450
down all we can change is how much light

918
00:49:25,400 --> 00:49:31,460
got sort of we're saying is bouncing off

919
00:49:29,449 --> 00:49:36,109
of them which is the front and back emit

920
00:49:31,460 --> 00:49:38,630
for those surfaces so we're going to see

921
00:49:36,110 --> 00:49:40,910
something like this where we're going to

922
00:49:38,630 --> 00:49:45,579
be writing our desk front and desk back

923
00:49:40,909 --> 00:49:49,009
and MIT out in this to these two and

924
00:49:45,579 --> 00:49:51,920
then the surface color and the NP are

925
00:49:49,010 --> 00:49:53,690
only going to be sources right so

926
00:49:51,920 --> 00:49:56,090
there's only going to be sources for

927
00:49:53,690 --> 00:49:59,139
that there's not going to be any

928
00:49:56,090 --> 00:49:59,140
anything else

929
00:50:03,260 --> 00:50:07,520
and so the way that we are going to

930
00:50:05,059 --> 00:50:11,380
propagate this down is a little bit hard

931
00:50:07,519 --> 00:50:13,699
for me to say how we want to do it but

932
00:50:11,380 --> 00:50:18,289
effectively what we want to do is we

933
00:50:13,699 --> 00:50:21,289
want to take the higher level texture

934
00:50:18,289 --> 00:50:24,320
and we want to propagate the lighting

935
00:50:21,289 --> 00:50:26,029
down to the lower level so let's think

936
00:50:24,320 --> 00:50:27,710
about this for a second so that we know

937
00:50:26,030 --> 00:50:31,130
what we're going to be try to say what

938
00:50:27,710 --> 00:50:36,800
we're going to try to sample here so if

939
00:50:31,130 --> 00:50:39,380
you imagine us having a four wide at the

940
00:50:36,800 --> 00:50:41,750
highest level if we had a four wide now

941
00:50:39,380 --> 00:50:46,820
they're technically is even a 1 wide

942
00:50:41,750 --> 00:50:50,329
version and so if you think about what

943
00:50:46,820 --> 00:50:54,890
we have to do to make this work we're

944
00:50:50,329 --> 00:50:56,989
going to be talking about something that

945
00:50:54,889 --> 00:51:02,049
goes successively down from like the 1

946
00:50:56,989 --> 00:51:08,000
to the 4 2 to the 8 our sixteen rather

947
00:51:02,050 --> 00:51:09,650
that's drawn very poorly there we go

948
00:51:08,000 --> 00:51:13,429
I'm like why does that not look like

949
00:51:09,650 --> 00:51:17,059
sixteen to me because it's not so when

950
00:51:13,429 --> 00:51:21,730
we look at what's happening here for a

951
00:51:17,059 --> 00:51:25,549
particular textile say this textile here

952
00:51:21,730 --> 00:51:27,679
we have to go figure out and maybe I'll

953
00:51:25,550 --> 00:51:29,810
make it a little bit simpler so for this

954
00:51:27,679 --> 00:51:33,250
textile here right I'm going to be

955
00:51:29,809 --> 00:51:35,480
looking up into this upper level texture

956
00:51:33,250 --> 00:51:36,980
to try and figure out what's going on

957
00:51:35,480 --> 00:51:39,769
with like the surface formation right

958
00:51:36,980 --> 00:51:41,929
and then I'm going to use that

959
00:51:39,769 --> 00:51:46,730
information to adjust what I have on my

960
00:51:41,929 --> 00:51:48,409
own texture now the thing is I really

961
00:51:46,730 --> 00:51:53,769
want to be doing some reflection at my

962
00:51:48,409 --> 00:51:53,769
own level as well I think so

963
00:51:57,358 --> 00:52:00,630
this is why I sort of was talking before

964
00:51:59,278 --> 00:52:02,818
about how we might want to have

965
00:52:00,630 --> 00:52:05,219
different textures for the for the route

966
00:52:02,818 --> 00:52:08,458
down because what I'm thinking is I'm

967
00:52:05,219 --> 00:52:12,838
thinking we probably want to actually do

968
00:52:08,458 --> 00:52:15,598
the light propagation step such that we

969
00:52:12,838 --> 00:52:18,179
read from both our level and the upper

970
00:52:15,599 --> 00:52:22,950
level so we look at the upper level and

971
00:52:18,179 --> 00:52:25,949
we suck those results down right and

972
00:52:22,949 --> 00:52:29,248
then we look at our level and we compute

973
00:52:25,949 --> 00:52:32,879
our new value from both that value we

974
00:52:29,248 --> 00:52:35,038
suck down for the wider area and looking

975
00:52:32,880 --> 00:52:39,630
at the reflectance we get from our

976
00:52:35,039 --> 00:52:41,969
neighbors right and we can do that in as

977
00:52:39,630 --> 00:52:45,539
big a kernel as we want so you know we

978
00:52:41,969 --> 00:52:52,380
could even choose to do it on a 3x3

979
00:52:45,539 --> 00:53:01,278
basically like to fetch sort of around

980
00:52:52,380 --> 00:53:01,278
the relative boundary there

981
00:53:17,969 --> 00:53:35,368
and I guess what I would say about that

982
00:53:20,309 --> 00:53:38,068
is I'm not super sure I'm not super sure

983
00:53:35,369 --> 00:53:43,010
which of those we need to do I would

984
00:53:38,068 --> 00:53:43,009
think that we would have to do them

985
00:53:50,480 --> 00:53:55,699
I mean I would think that we would have

986
00:53:52,250 --> 00:53:57,320
to do them on something that was going

987
00:53:55,699 --> 00:53:59,599
to be propagating in a neighborhood

988
00:53:57,320 --> 00:54:01,160
fashion like that right like I would

989
00:53:59,599 --> 00:54:09,710
think that we would have to do them

990
00:54:01,159 --> 00:54:13,460
where we were sampling from the you know

991
00:54:09,710 --> 00:54:15,289
we took nine samples and did the

992
00:54:13,460 --> 00:54:21,889
computation for the center sample based

993
00:54:15,289 --> 00:54:23,840
on the eight surround examples because

994
00:54:21,889 --> 00:54:26,409
otherwise I feel like you're never going

995
00:54:23,840 --> 00:54:30,070
to be able to get the propagation to be

996
00:54:26,409 --> 00:54:30,069
fair in all directions

997
00:54:38,570 --> 00:54:44,420
so that seems like what we would have to

998
00:54:40,880 --> 00:54:47,660
do so for every cell in the destination

999
00:54:44,420 --> 00:54:53,659
texture we would sample the eight

1000
00:54:47,659 --> 00:54:55,879
surrounding texels and we would use the

1001
00:54:53,659 --> 00:54:58,009
data from a surrounding texels to

1002
00:54:55,880 --> 00:55:00,789
compute the value for this Texel and

1003
00:54:58,010 --> 00:55:00,790
we'd read back

1004
00:55:15,769 --> 00:55:20,150
I don't really see anything else we

1005
00:55:17,989 --> 00:55:22,279
could do besides that so it seems to me

1006
00:55:20,150 --> 00:55:24,880
like that that's what we're looking at

1007
00:55:22,280 --> 00:55:30,650
right I mean that is that is the

1008
00:55:24,880 --> 00:55:34,160
situation and presumably from that we

1009
00:55:30,650 --> 00:55:37,030
again that computation is going to be

1010
00:55:34,159 --> 00:55:39,699
sort of following what we said was our

1011
00:55:37,030 --> 00:55:44,690
basic idea for computing the lighting

1012
00:55:39,699 --> 00:55:47,629
which is to say that we have where's

1013
00:55:44,690 --> 00:55:57,429
that little diagram how come we can't

1014
00:55:47,630 --> 00:55:57,430
get the diagrams here this is not

1015
00:55:58,239 --> 00:56:07,269
this isn't that we want how do we end up

1016
00:56:02,059 --> 00:56:07,269
on fluid flow

1017
00:56:13,230 --> 00:56:17,599
how did we end up on fluid flow folks

1018
00:56:19,400 --> 00:56:28,099
well in theory we should be able to find

1019
00:56:25,409 --> 00:56:28,099
here again

1020
00:56:35,219 --> 00:56:38,059
history

1021
00:56:49,838 --> 00:56:56,858
if it this one I mean how did we lose

1022
00:56:54,248 --> 00:56:59,528
this we had it up and now it thinks we

1023
00:56:56,858 --> 00:57:01,119
were always on that page how does it

1024
00:56:59,528 --> 00:57:04,768
think we were always on that page that

1025
00:57:01,119 --> 00:57:04,769
doesn't make any sense does it

1026
00:57:13,659 --> 00:57:24,629
here it is man I just remember Michael

1027
00:57:20,349 --> 00:57:28,180
bundle for bune L and now pronounce that

1028
00:57:24,630 --> 00:57:30,009
I so this is a computation that I said

1029
00:57:28,179 --> 00:57:35,409
we were going to try using which is just

1030
00:57:30,009 --> 00:57:37,929
the if we've got two reflectors we go

1031
00:57:35,409 --> 00:57:43,690
ahead and say here is the approximate

1032
00:57:37,929 --> 00:57:44,919
transfer between them right so you can

1033
00:57:43,690 --> 00:57:47,829
see that this is not a particularly

1034
00:57:44,920 --> 00:57:51,849
complicated expression basically what

1035
00:57:47,829 --> 00:57:56,410
they're saying here is the if you take

1036
00:57:51,849 --> 00:58:00,818
the vector that connects the two surface

1037
00:57:56,409 --> 00:58:04,420
elements that you've got then what you

1038
00:58:00,818 --> 00:58:07,058
want to do is say the cosine of the

1039
00:58:04,420 --> 00:58:08,559
angle of the emitters normal to that

1040
00:58:07,059 --> 00:58:09,910
which again is just going to be a dot

1041
00:58:08,559 --> 00:58:12,849
product right because you imagine we've

1042
00:58:09,909 --> 00:58:15,639
got this line and we've got the emitters

1043
00:58:12,849 --> 00:58:20,318
normal so basically just this is just a

1044
00:58:15,639 --> 00:58:23,739
dot product so it's 1 minus the length

1045
00:58:20,318 --> 00:58:27,369
of this line times the dot product of

1046
00:58:23,739 --> 00:58:30,758
the emitter versus the line times the

1047
00:58:27,369 --> 00:58:35,259
max of 1 and 4 times the cosine of the

1048
00:58:30,759 --> 00:58:39,429
reflector and the line divided by the

1049
00:58:35,259 --> 00:58:44,889
square root of the area over PI plus R 2

1050
00:58:39,429 --> 00:58:49,239
and so in our case the area in question

1051
00:58:44,889 --> 00:58:51,818
is like they've they are modeling the

1052
00:58:49,239 --> 00:58:53,409
area of these reflectors because they're

1053
00:58:51,818 --> 00:58:58,869
actually treating them as individual

1054
00:58:53,409 --> 00:59:01,778
points in the world we aren't so we

1055
00:58:58,869 --> 00:59:05,920
don't have an area for the emitter it's

1056
00:59:01,778 --> 00:59:07,809
just assumed to emit right like the area

1057
00:59:05,920 --> 00:59:12,970
of the emitter and the area of the

1058
00:59:07,809 --> 00:59:15,369
receiver are always the same and so we

1059
00:59:12,969 --> 00:59:19,449
don't really have a term that's going to

1060
00:59:15,369 --> 00:59:22,539
change the amount of light that gets

1061
00:59:19,449 --> 00:59:28,619
projected onto it based on that because

1062
00:59:22,539 --> 00:59:32,560
these two things scale separately right

1063
00:59:28,619 --> 00:59:35,739
now what I don't see here what I don't

1064
00:59:32,559 --> 00:59:38,909
see is that this I don't see the area of

1065
00:59:35,739 --> 00:59:38,909
the receiver anywhere

1066
00:59:46,940 --> 00:59:51,858
here we go oh wait no it's already two

1067
00:59:50,568 --> 00:59:53,538
minutes so I don't know so I guess

1068
00:59:51,858 --> 00:59:54,710
they're factoring that out of the

1069
00:59:53,539 --> 00:59:59,539
equation entirely

1070
00:59:54,710 --> 01:00:04,030
I guess because they're just computing

1071
00:59:59,539 --> 01:00:04,030
the well actually I guess I don't know

1072
01:00:09,250 --> 01:00:15,858
I'm not sure I know exactly why that

1073
01:00:12,650 --> 01:00:18,650
wouldn't be at least somewhat relevant

1074
01:00:15,858 --> 01:00:20,449
but I guess I guess the size of the

1075
01:00:18,650 --> 01:00:22,490
receiver doesn't really matter because

1076
01:00:20,449 --> 01:00:24,980
it's like well the light is falling on

1077
01:00:22,489 --> 01:00:29,239
this thing it doesn't matter how big it

1078
01:00:24,980 --> 01:00:35,000
is it just matters what angle it's

1079
01:00:29,239 --> 01:00:37,548
falling out I guess so either or in this

1080
01:00:35,000 --> 01:00:41,389
case our emitter area like I saying

1081
01:00:37,548 --> 01:00:43,519
our emitter area doesn't really mean

1082
01:00:41,389 --> 01:00:49,750
anything in this case because we don't

1083
01:00:43,519 --> 01:00:49,750
have different sizes so yeah

1084
01:01:00,599 --> 01:01:08,239
and this is a lie see never mind

1085
01:01:05,190 --> 01:01:10,889
this is their shadowing equation I

1086
01:01:08,239 --> 01:01:14,719
looking in the wrong part I was just

1087
01:01:10,889 --> 01:01:14,719
looking for their transference equation

1088
01:01:16,969 --> 01:01:21,539
but that's their shadowing equation so

1089
01:01:20,190 --> 01:01:24,409
did they talk about the transference

1090
01:01:21,539 --> 01:01:24,409
equation here or not

1091
01:01:34,559 --> 01:01:42,070
which were all okay and it is useful is

1092
01:01:37,840 --> 01:01:43,600
above above Allah it is all speculative

1093
01:01:42,070 --> 01:01:45,519
values the percentage of the hemisphere

1094
01:01:43,599 --> 01:01:48,789
above each service point not occluded by

1095
01:01:45,519 --> 01:01:50,349
geometry sure you justice we also use

1096
01:01:48,789 --> 01:01:52,750
detective the direction of the exclusion

1097
01:01:50,349 --> 01:01:54,039
coins a bit normal that normal Jews in

1098
01:01:52,750 --> 01:01:55,000
place the regular normal when shading

1099
01:01:54,039 --> 01:01:57,460
the service for more accurate

1100
01:01:55,000 --> 01:01:58,869
environment lighting so that's basically

1101
01:01:57,460 --> 01:01:59,829
saying well you should look in the

1102
01:01:58,869 --> 01:02:02,289
direction that you're not getting

1103
01:01:59,829 --> 01:02:04,710
shadowed because hey that's where most

1104
01:02:02,289 --> 01:02:11,500
of your life is going to come from

1105
01:02:04,710 --> 01:02:14,679
ensure that makes sense too but yeah I

1106
01:02:11,500 --> 01:02:16,420
just am Not sure so they're talking

1107
01:02:14,679 --> 01:02:18,190
about the shadow approximation here

1108
01:02:16,420 --> 01:02:20,730
which is to say that that's where the

1109
01:02:18,190 --> 01:02:23,530
one minus comes from right it's saying I

1110
01:02:20,730 --> 01:02:28,480
would normally have 100% of the light

1111
01:02:23,530 --> 01:02:30,850
incoming but for any given other person

1112
01:02:28,480 --> 01:02:34,269
who might be blocking me here's you know

1113
01:02:30,849 --> 01:02:36,730
what I here's the equation to see how

1114
01:02:34,269 --> 01:02:39,280
much of the angle of the sky they are

1115
01:02:36,730 --> 01:02:43,000
taking out and as they pointed out in

1116
01:02:39,280 --> 01:02:45,420
this case they don't know how much to

1117
01:02:43,000 --> 01:02:49,869
occluders may be shadowing each other

1118
01:02:45,420 --> 01:02:53,800
like this for example so given that fact

1119
01:02:49,869 --> 01:02:55,989
they try to use that too they try to use

1120
01:02:53,800 --> 01:02:58,810
how much somebody was shadowing in a

1121
01:02:55,989 --> 01:03:01,809
previous path in order to mitigate those

1122
01:02:58,809 --> 01:03:05,559
effects right so since a is shadowing B

1123
01:03:01,809 --> 01:03:08,889
in this case C would pick up less of

1124
01:03:05,559 --> 01:03:14,009
these shadowing effect for ambient

1125
01:03:08,889 --> 01:03:16,059
occlusion but again so that part is not

1126
01:03:14,010 --> 01:03:18,190
really the part I was interested in

1127
01:03:16,059 --> 01:03:20,710
indirect lighting in area lights is the

1128
01:03:18,190 --> 01:03:25,539
thing that I was more interested in

1129
01:03:20,710 --> 01:03:28,420
right so this is a part I actually

1130
01:03:25,539 --> 01:03:31,119
wanted to know which is this to this

1131
01:03:28,420 --> 01:03:32,530
form factor for approximation and what

1132
01:03:31,119 --> 01:03:34,299
they mean by form factor approximation

1133
01:03:32,530 --> 01:03:40,510
here is that's from the radiosity

1134
01:03:34,300 --> 01:03:43,720
terminology I believe which is what I

1135
01:03:40,510 --> 01:03:47,200
want to know so for two discs I wanted

1136
01:03:43,719 --> 01:03:48,338
to know what they were using for how the

1137
01:03:47,199 --> 01:03:53,338
lights

1138
01:03:48,338 --> 01:03:57,969
transfers from one disk to another okay

1139
01:03:53,338 --> 01:04:00,278
and so you can see here like they have a

1140
01:03:57,969 --> 01:04:03,460
little discussion of this justice

1141
01:04:00,278 --> 01:04:04,869
ratings transfer function we need to

1142
01:04:03,460 --> 01:04:06,869
catch the amount of light to reflect off

1143
01:04:04,869 --> 01:04:09,608
the front face of each terrorist element

1144
01:04:06,869 --> 01:04:11,769
we compute a mcruiz data first which is

1145
01:04:09,608 --> 01:04:13,179
we're not looking at that just yet if we

1146
01:04:11,768 --> 01:04:14,768
first use direct lighting from pointer

1147
01:04:13,179 --> 01:04:17,078
directions to compute the light at each

1148
01:04:14,768 --> 01:04:20,068
element just officiating service to exam

1149
01:04:17,079 --> 01:04:22,329
I think we can also do both level block

1150
01:04:20,068 --> 01:04:23,650
here's the fragment program function to

1151
01:04:22,329 --> 01:04:26,289
calculate element element radians

1152
01:04:23,650 --> 01:04:29,079
transfer and you can see the way they're

1153
01:04:26,289 --> 01:04:31,599
doing it curious they've got the two

1154
01:04:29,079 --> 01:04:33,460
normals which we have both of they have

1155
01:04:31,599 --> 01:04:36,729
the emitter area which like I said we

1156
01:04:33,460 --> 01:04:39,519
don't really have explicit but we know

1157
01:04:36,728 --> 01:04:42,669
based on the level of approximation what

1158
01:04:39,518 --> 01:04:45,248
its size would be effectively and then

1159
01:04:42,670 --> 01:04:47,680
we've got these two values they don't

1160
01:04:45,248 --> 01:04:51,038
explain here so they've got one this is

1161
01:04:47,679 --> 01:04:54,268
presumably a position and then I'm not

1162
01:04:51,039 --> 01:04:58,390
sure what d2 is so I'll have to look

1163
01:04:54,268 --> 01:05:01,268
okay so what they do is they say the

1164
01:04:58,389 --> 01:05:05,618
area of the emitter the two cosines

1165
01:05:01,268 --> 01:05:07,209
which is again just that that sort of

1166
01:05:05,619 --> 01:05:09,219
squishing that we were talking about

1167
01:05:07,210 --> 01:05:11,068
where as you get more oblique to

1168
01:05:09,219 --> 01:05:15,068
something you the shaft of light gets

1169
01:05:11,068 --> 01:05:18,038
C's less of the area so we have the area

1170
01:05:15,068 --> 01:05:21,608
of the emitter of both cosines over pi

1171
01:05:18,039 --> 01:05:23,769
times the R squared distance that's the

1172
01:05:21,608 --> 01:05:25,058
distance between the two so I guess

1173
01:05:23,768 --> 01:05:27,578
that's what this is right here that's

1174
01:05:25,059 --> 01:05:30,940
what the d2 is plus the area of the

1175
01:05:27,579 --> 01:05:34,269
admit er now they didn't put a

1176
01:05:30,940 --> 01:05:38,229
derivation in here which is a little

1177
01:05:34,268 --> 01:05:44,228
annoying but we can at least see what

1178
01:05:38,228 --> 01:05:45,818
most of it is I we can probably just

1179
01:05:44,228 --> 01:05:49,210
look up just this transfer somewhere

1180
01:05:45,818 --> 01:05:51,239
else but we can only see what most of it

1181
01:05:49,210 --> 01:05:53,528
is so if we have two surface elements

1182
01:05:51,239 --> 01:05:55,630
and we're looking at them like they have

1183
01:05:53,528 --> 01:06:00,429
their diagram before and here's our R

1184
01:05:55,630 --> 01:06:02,010
and here's our two normals right then

1185
01:06:00,429 --> 01:06:05,909
what we end up with

1186
01:06:02,010 --> 01:06:08,430
in this case is we know that if they

1187
01:06:05,909 --> 01:06:10,259
were directly facing each other so if we

1188
01:06:08,429 --> 01:06:13,349
had two disks that were directly facing

1189
01:06:10,260 --> 01:06:14,850
each other like so then we know that

1190
01:06:13,349 --> 01:06:17,690
what would happen in that scenario is

1191
01:06:14,849 --> 01:06:20,339
the full lighting transfer would occur

1192
01:06:17,690 --> 01:06:24,090
the angle would not be coming down it at

1193
01:06:20,340 --> 01:06:27,900
all but as we change the angle in both

1194
01:06:24,090 --> 01:06:31,430
cases less of the discs are seen in the

1195
01:06:27,900 --> 01:06:34,019
visible hemisphere by the receiver and

1196
01:06:31,429 --> 01:06:37,859
less of the light is emitted by the

1197
01:06:34,019 --> 01:06:40,019
emitter in that direction right so hence

1198
01:06:37,860 --> 01:06:43,110
we end up with cosines for both of these

1199
01:06:40,019 --> 01:06:45,840
in each case taking the area of the

1200
01:06:43,110 --> 01:06:48,360
emitter and scaling it down as a result

1201
01:06:45,840 --> 01:06:53,430
so that's like this is the area that it

1202
01:06:48,360 --> 01:06:55,940
would be taking up in terms of the like

1203
01:06:53,429 --> 01:06:58,949
the hemisphere of incoming light we

1204
01:06:55,940 --> 01:07:02,250
multiply it by both cosines to take out

1205
01:06:58,949 --> 01:07:06,929
the amount that the tilt is preventing

1206
01:07:02,250 --> 01:07:11,070
it from doing so and then we divide here

1207
01:07:06,929 --> 01:07:13,049
by the PI R squared plus a this is the

1208
01:07:11,070 --> 01:07:14,670
part that I'm not sure about obviously

1209
01:07:13,050 --> 01:07:17,700
what we're taking into effect there is

1210
01:07:14,670 --> 01:07:21,119
the distance that the emitter is moving

1211
01:07:17,699 --> 01:07:23,849
away from you is going to attenuate how

1212
01:07:21,119 --> 01:07:26,309
much do to the inverse square law we're

1213
01:07:23,849 --> 01:07:28,500
getting so pretty obvious here the

1214
01:07:26,309 --> 01:07:32,250
inverse square law is the R squared term

1215
01:07:28,500 --> 01:07:35,670
that's not a mystery the PI in this case

1216
01:07:32,250 --> 01:07:38,460
I assume is just because the area of the

1217
01:07:35,670 --> 01:07:42,869
thing is a disk so we end up with the PI

1218
01:07:38,460 --> 01:07:45,750
in there but this plus a bit which is

1219
01:07:42,869 --> 01:07:47,039
the area of the emitter so honestly

1220
01:07:45,750 --> 01:07:48,150
knows I can't put the PI is because the

1221
01:07:47,039 --> 01:07:50,480
area of the emitter is always going to

1222
01:07:48,150 --> 01:07:53,340
already going to have PI in there right

1223
01:07:50,480 --> 01:07:55,530
PI is already factored into there so I

1224
01:07:53,340 --> 01:07:57,720
really don't know what the PI R squared

1225
01:07:55,530 --> 01:08:01,019
is there you know PI R squared is the

1226
01:07:57,719 --> 01:08:06,629
area of a disk but it's the area of a

1227
01:08:01,019 --> 01:08:09,780
disk if this was the radius so I'm not

1228
01:08:06,630 --> 01:08:11,519
really sure where exactly they got that

1229
01:08:09,780 --> 01:08:14,240
denominator and I would have liked to

1230
01:08:11,519 --> 01:08:14,239
have seen it

1231
01:08:19,279 --> 01:08:23,540
do they reference somebody here

1232
01:08:40,708 --> 01:08:50,298
yeah so I can't really see I can't

1233
01:08:47,038 --> 01:08:50,298
really see how they got that

1234
01:09:08,489 --> 01:09:14,619
everything else makes good sense in

1235
01:09:10,390 --> 01:09:17,110
there but not that and so if we take a

1236
01:09:14,619 --> 01:09:18,880
look at how they're computing it here in

1237
01:09:17,109 --> 01:09:20,439
the actual shader where they assumed the

1238
01:09:18,880 --> 01:09:23,710
emitter area has already been divided by

1239
01:09:20,439 --> 01:09:31,889
pi then what they've got in that case is

1240
01:09:23,710 --> 01:09:41,430
they've got emitter area times cosine

1241
01:09:31,890 --> 01:09:44,410
times cosine divided by R squared plus a

1242
01:09:41,430 --> 01:09:46,300
right and so I see what they did here

1243
01:09:44,409 --> 01:09:50,559
it's a yeah if everything in here is

1244
01:09:46,300 --> 01:09:52,329
divided by pi then you could just

1245
01:09:50,560 --> 01:09:58,240
multiply through by pi course just out

1246
01:09:52,329 --> 01:10:00,220
of giving you a PI squared there I mean

1247
01:09:58,239 --> 01:10:08,380
if we have this so let's take a look

1248
01:10:00,220 --> 01:10:13,810
here so we have a cosine theta I'm going

1249
01:10:08,380 --> 01:10:17,289
to use these like that over PI R squared

1250
01:10:13,810 --> 01:10:21,340
plus a so if in this case what we're

1251
01:10:17,289 --> 01:10:28,539
saying is we assume that a was already

1252
01:10:21,340 --> 01:10:30,159
divided by the the value pi so to do

1253
01:10:28,539 --> 01:10:33,460
that we would have to divide both of

1254
01:10:30,159 --> 01:10:34,119
these by pi okay I guess I see how they

1255
01:10:33,460 --> 01:10:35,739
did it yet

1256
01:10:34,119 --> 01:10:37,899
that makes sense so in order to divide

1257
01:10:35,739 --> 01:10:41,949
both of these by PI I'll just do it out

1258
01:10:37,899 --> 01:10:44,429
so you can see it - there's the divide

1259
01:10:41,949 --> 01:10:44,429
by PI

1260
01:10:49,729 --> 01:10:57,079
so all I've done is divide all of these

1261
01:10:52,100 --> 01:10:58,970
terms by PI right because what I what

1262
01:10:57,079 --> 01:11:04,220
I'm saying I want to do is is do that

1263
01:10:58,970 --> 01:11:06,800
pre division by PI another way to think

1264
01:11:04,220 --> 01:11:10,250
of this was I multiply this by 1 over PI

1265
01:11:06,800 --> 01:11:13,279
over 1 over PI which is legal right I

1266
01:11:10,250 --> 01:11:16,520
can multiply anything by 1 and it's fine

1267
01:11:13,279 --> 01:11:20,300
so if I look at what happens here the

1268
01:11:16,520 --> 01:11:24,650
PI's cancel here and I end up with and I

1269
01:11:20,300 --> 01:11:27,380
can just associate this all right so I

1270
01:11:24,649 --> 01:11:32,809
can basically say okay I've got a over

1271
01:11:27,380 --> 01:11:36,890
PI cosine theta at cosine Phi over R

1272
01:11:32,810 --> 01:11:39,800
squared plus a over pi and hey there I'm

1273
01:11:36,890 --> 01:11:41,270
down to just my two areas over pi and

1274
01:11:39,800 --> 01:11:43,850
then we get exactly what they said they

1275
01:11:41,270 --> 01:11:46,250
would get which is the emitter area pre

1276
01:11:43,850 --> 01:11:50,780
divided by PI which is that cosine

1277
01:11:46,250 --> 01:11:53,149
cosine divided by the R squared plus the

1278
01:11:50,779 --> 01:11:55,429
emitter area already divided by PI so

1279
01:11:53,149 --> 01:11:59,179
that all checks out so literally the

1280
01:11:55,430 --> 01:12:00,530
only thing I'm not 100% happy with like

1281
01:11:59,180 --> 01:12:02,630
my understanding of what they were

1282
01:12:00,529 --> 01:12:05,119
trying to say here is the PI R squared

1283
01:12:02,630 --> 01:12:07,640
plus a part I'm just not sure what

1284
01:12:05,119 --> 01:12:09,769
that's supposed to represent and again

1285
01:12:07,640 --> 01:12:13,850
that just comes from I'm sure working

1286
01:12:09,770 --> 01:12:17,000
out the gist of this radius transfer in

1287
01:12:13,850 --> 01:12:20,840
this case the R squared makes good sense

1288
01:12:17,000 --> 01:12:24,489
to me the PI doesn't I'm guessing that

1289
01:12:20,840 --> 01:12:28,550
that must come from the solid angle

1290
01:12:24,489 --> 01:12:31,069
computation so for example you know I'm

1291
01:12:28,550 --> 01:12:32,840
imagining that this surface is looking

1292
01:12:31,069 --> 01:12:35,659
out at something and I'm trying to

1293
01:12:32,840 --> 01:12:38,900
figure out how much of this solid angle

1294
01:12:35,659 --> 01:12:42,470
of the of the hemisphere this disc is

1295
01:12:38,899 --> 01:12:44,420
taking up the R squared part tells me

1296
01:12:42,470 --> 01:12:50,740
what the projection is the PI is

1297
01:12:44,420 --> 01:12:50,739
probably coming from specifically that

1298
01:12:53,630 --> 01:12:58,730
that solid angle calculation I don't

1299
01:12:57,380 --> 01:13:10,390
know if I can quickly find something

1300
01:12:58,729 --> 01:13:10,389
that would confirm Mac how that's funny

1301
01:13:28,158 --> 01:13:31,750
can we access this

1302
01:13:41,710 --> 01:13:56,408
not very quickly well you maybe we won't

1303
01:13:53,140 --> 01:13:57,969
read that paper I just wanted to take a

1304
01:13:56,408 --> 01:14:02,198
look at it just to this radio's transfer

1305
01:13:57,969 --> 01:14:03,550
function so we could see you know if I'm

1306
01:14:02,198 --> 01:14:05,049
right about that big muscle an angular

1307
01:14:03,550 --> 01:14:12,670
part and just we could see what the plus

1308
01:14:05,050 --> 01:14:14,850
a was exactly again I'm assuming that

1309
01:14:12,670 --> 01:14:17,140
that is from the solid angle computation

1310
01:14:14,850 --> 01:14:18,400
we should probably try to work that at

1311
01:14:17,140 --> 01:14:20,199
some point just so we could reassure

1312
01:14:18,399 --> 01:14:23,799
ourselves that that is actually what's

1313
01:14:20,198 --> 01:14:25,178
going on but at least we know mostly

1314
01:14:23,800 --> 01:14:27,640
what we're doing here and can certainly

1315
01:14:25,179 --> 01:14:29,560
compute this pretty easily because we

1316
01:14:27,640 --> 01:14:31,570
know what all the terms are even if

1317
01:14:29,560 --> 01:14:33,219
we're not 100% sure why they quite

1318
01:14:31,569 --> 01:14:38,079
worked out to be what they are in the

1319
01:14:33,219 --> 01:14:40,359
radians transfer function and again this

1320
01:14:38,079 --> 01:14:42,819
is just trying to say so for a

1321
01:14:40,359 --> 01:14:46,329
hemisphere how much of the incoming

1322
01:14:42,819 --> 01:14:49,090
light of this for this surface is going

1323
01:14:46,329 --> 01:14:51,519
to come from you know whatever this disk

1324
01:14:49,090 --> 01:14:53,739
of is up in the sky the other

1325
01:14:51,520 --> 01:14:55,600
interesting thing about this is we don't

1326
01:14:53,738 --> 01:14:58,029
have to use a disk for any particular

1327
01:14:55,600 --> 01:15:01,090
reason could really use any shape we

1328
01:14:58,029 --> 01:15:02,948
want we could use a sphere we could use

1329
01:15:01,090 --> 01:15:06,880
whatever it just so happens that a disk

1330
01:15:02,948 --> 01:15:09,428
is a nice element for being able to sort

1331
01:15:06,880 --> 01:15:17,789
of just splat things in space and have

1332
01:15:09,429 --> 01:15:17,789
them have a direction okay

1333
01:15:20,738 --> 01:15:23,738
hmm

1334
01:15:24,500 --> 01:15:34,100
so thinking about this a little bit

1335
01:15:26,029 --> 01:15:35,630
further - another thing we could try a

1336
01:15:34,100 --> 01:15:37,550
little further on after we play with

1337
01:15:35,630 --> 01:15:39,890
this a little bit is having our

1338
01:15:37,550 --> 01:15:42,500
reflectors be discs and our emitter see

1339
01:15:39,890 --> 01:15:44,329
spheres if our meters were spheres and

1340
01:15:42,500 --> 01:15:49,850
it didn't hamper us too much in our

1341
01:15:44,329 --> 01:15:53,448
ability to actually create the lighting

1342
01:15:49,850 --> 01:15:54,860
that we wanted which it might then we

1343
01:15:53,448 --> 01:15:57,289
would be an interesting situation where

1344
01:15:54,859 --> 01:15:59,269
we could not have front-and-back

1345
01:15:57,289 --> 01:16:01,850
emission storage so we could just have

1346
01:15:59,270 --> 01:16:04,280
emission storage and that'd be it and

1347
01:16:01,850 --> 01:16:06,699
that would be pretty nice because that

1348
01:16:04,279 --> 01:16:09,590
would get us out of the business of

1349
01:16:06,698 --> 01:16:11,448
dealing with those extra textures and it

1350
01:16:09,590 --> 01:16:13,880
would also make it so that it was easier

1351
01:16:11,448 --> 01:16:16,069
to conceptualize what was happening when

1352
01:16:13,880 --> 01:16:17,869
we averaged lights together we would

1353
01:16:16,069 --> 01:16:20,479
just be averaging kind of like spheres

1354
01:16:17,869 --> 01:16:23,390
together which is a little easier to

1355
01:16:20,479 --> 01:16:25,909
understand then discs averaging together

1356
01:16:23,390 --> 01:16:27,289
where you end up with something pointing

1357
01:16:25,909 --> 01:16:29,750
in a direction that neither of the two

1358
01:16:27,289 --> 01:16:33,050
was pointing to before that's just kind

1359
01:16:29,750 --> 01:16:35,689
of a half way pointing so I get a some

1360
01:16:33,050 --> 01:16:37,310
of my here so you know there's something

1361
01:16:35,689 --> 01:16:39,649
to be said for thinking about alternate

1362
01:16:37,310 --> 01:16:46,090
ways of conceptualizing how the lights

1363
01:16:39,649 --> 01:16:48,979
average up as they get higher alright so

1364
01:16:46,090 --> 01:16:50,779
what we want to do here is we want to

1365
01:16:48,979 --> 01:16:54,619
start getting the compute multi light

1366
01:16:50,779 --> 01:16:56,539
down to do something and so in order to

1367
01:16:54,619 --> 01:16:58,909
do that we need to actually get it set

1368
01:16:56,539 --> 01:17:03,560
up reasonably and at the moment we don't

1369
01:16:58,909 --> 01:17:06,979
have that happening so we need two

1370
01:17:03,560 --> 01:17:11,500
things one is we've got to be able to

1371
01:17:06,979 --> 01:17:15,948
sample so let's talk about we need here

1372
01:17:11,500 --> 01:17:21,319
so we need the one level up so we need

1373
01:17:15,948 --> 01:17:24,859
basically our parent and we need to get

1374
01:17:21,319 --> 01:17:29,319
from our parent all of the values right

1375
01:17:24,859 --> 01:17:29,319
so we need our parent

1376
01:17:30,449 --> 01:17:44,800
[Applause]

1377
01:17:32,279 --> 01:17:55,768
for all of these and then we need our

1378
01:17:44,800 --> 01:17:57,610
neighbor right

1379
01:17:55,769 --> 01:17:59,139
so basically we're saying is we're going

1380
01:17:57,609 --> 01:18:00,759
to sample from the higher res version

1381
01:17:59,139 --> 01:18:03,489
and then we're going to sample from our

1382
01:18:00,760 --> 01:18:07,329
res version and then that would give us

1383
01:18:03,488 --> 01:18:11,378
all of the data that we wanted right

1384
01:18:07,328 --> 01:18:13,328
and we furthermore need to be able to do

1385
01:18:11,378 --> 01:18:14,918
that neighborhood calculation very

1386
01:18:13,328 --> 01:18:19,378
specifically so we're going to need

1387
01:18:14,918 --> 01:18:22,389
something better than frag UV here right

1388
01:18:19,378 --> 01:18:24,519
we can use frag QV to sample from our

1389
01:18:22,389 --> 01:18:26,949
parent but we can't use fried UV to

1390
01:18:24,519 --> 01:18:28,840
sample from our neighbor but that's okay

1391
01:18:26,948 --> 01:18:30,638
because the neighbor is the same

1392
01:18:28,840 --> 01:18:38,199
resolution as us so that should be the

1393
01:18:30,639 --> 01:18:39,878
easier case for us to handle right so

1394
01:18:38,198 --> 01:18:44,109
then we get into this nasty business of

1395
01:18:39,878 --> 01:18:46,658
of sampling kind of get it rid of this

1396
01:18:44,109 --> 01:18:50,948
here we get into this nasty business of

1397
01:18:46,658 --> 01:18:52,688
sampling this whole ring of data values

1398
01:18:50,948 --> 01:18:55,598
which is going to be a pain in the butt

1399
01:18:52,689 --> 01:18:57,459
but that's just how it has to go so what

1400
01:18:55,599 --> 01:19:00,458
we want to do here is say alright we've

1401
01:18:57,458 --> 01:19:04,389
got our parent front commit and that's

1402
01:19:00,458 --> 01:19:07,118
going to be sampling from the frag UV

1403
01:19:04,389 --> 01:19:11,559
and these are the only ones that have to

1404
01:19:07,118 --> 01:19:13,118
use the frag UV because these are the

1405
01:19:11,559 --> 01:19:17,639
ones that are that are going to have to

1406
01:19:13,118 --> 01:19:20,198
be blended meaning they're sampling up

1407
01:19:17,639 --> 01:19:22,328
over here they're sampling up to the

1408
01:19:20,198 --> 01:19:23,888
parent and that's not a direct sample

1409
01:19:22,328 --> 01:19:31,049
it's going to be an average of a few

1410
01:19:23,889 --> 01:19:31,050
values now in terms of the immittance

1411
01:19:34,649 --> 01:19:43,899
that upper-level immittance that we're

1412
01:19:37,300 --> 01:19:45,369
going to do there so we got to think

1413
01:19:43,899 --> 01:19:49,000
about this a little bit too this is

1414
01:19:45,369 --> 01:19:50,890
actually somewhat complicated so the

1415
01:19:49,000 --> 01:19:52,720
sampling here is going to be a little

1416
01:19:50,890 --> 01:19:54,760
bit different than what I drew

1417
01:19:52,720 --> 01:19:58,329
originally I was drawing something that

1418
01:19:54,760 --> 01:19:59,980
was a little bit sort of simpler than

1419
01:19:58,329 --> 01:20:02,649
what's actually going to go on let me

1420
01:19:59,979 --> 01:20:05,219
let me draw this one more time I had not

1421
01:20:02,649 --> 01:20:05,219
thought it through yet

1422
01:20:11,239 --> 01:20:17,010
so here we have the parent version of

1423
01:20:14,850 --> 01:20:24,539
the texture and here we have the

1424
01:20:17,010 --> 01:20:26,850
neighbour version of the texture and I

1425
01:20:24,539 --> 01:20:33,300
believe what we want to do here is say

1426
01:20:26,850 --> 01:20:36,150
well for any given person in here we

1427
01:20:33,300 --> 01:20:40,050
want them to essentially be able to

1428
01:20:36,149 --> 01:20:47,779
sample from who is going to contribute

1429
01:20:40,050 --> 01:20:51,930
light around them but also further away

1430
01:20:47,779 --> 01:20:55,679
right so in this case what you can

1431
01:20:51,930 --> 01:20:57,869
imagine is suppose I'm doing a better

1432
01:20:55,680 --> 01:21:02,789
person to talk about for example might

1433
01:20:57,869 --> 01:21:05,159
be this person right here we want them

1434
01:21:02,789 --> 01:21:07,710
to take into account all of this

1435
01:21:05,159 --> 01:21:09,689
lighting information that's right next

1436
01:21:07,710 --> 01:21:11,550
to them but we also want them to take

1437
01:21:09,689 --> 01:21:12,809
into account the lighting information of

1438
01:21:11,550 --> 01:21:15,480
all these other things that we don't

1439
01:21:12,810 --> 01:21:20,280
have the computational budget to go ask

1440
01:21:15,479 --> 01:21:21,599
about right so what we want to do is we

1441
01:21:20,279 --> 01:21:24,809
want to sample from the higher

1442
01:21:21,600 --> 01:21:27,480
resolution bitmap that's our high

1443
01:21:24,810 --> 01:21:32,220
resolution lower resolution bitmap

1444
01:21:27,479 --> 01:21:36,000
higher sort of coverage so what we kind

1445
01:21:32,220 --> 01:21:38,190
of want to do is take samples of the

1446
01:21:36,000 --> 01:21:43,220
neighbors for this pixel in the places

1447
01:21:38,189 --> 01:21:43,219
that it's not going to check on its own

1448
01:21:44,210 --> 01:21:51,180
so I think that's roughly what we want

1449
01:21:47,579 --> 01:21:56,640
to do is say let's use these three

1450
01:21:51,180 --> 01:22:02,810
emitters and these three emitters as the

1451
01:21:56,640 --> 01:22:02,810
emitters to use and if we had to do nine

1452
01:22:06,329 --> 01:22:09,329
right

1453
01:22:14,469 --> 01:22:18,489
we could do nine or we could do four

1454
01:22:16,810 --> 01:22:22,060
right we could just do the cardinal

1455
01:22:18,488 --> 01:22:23,439
directions so that's one thing we could

1456
01:22:22,060 --> 01:22:25,450
do is we could just do cardinal

1457
01:22:23,439 --> 01:22:28,809
directions but we do them on both grids

1458
01:22:25,449 --> 01:22:32,409
so we do it on the parent grid we'll do

1459
01:22:28,810 --> 01:22:34,900
it and we do it on the neighbor grid we

1460
01:22:32,409 --> 01:22:37,149
just go one texel to each side on both

1461
01:22:34,899 --> 01:22:40,149
grids and then we consider all of those

1462
01:22:37,149 --> 01:22:42,279
to be emitters and the ones in the

1463
01:22:40,149 --> 01:22:46,869
parent level are considered to be twice

1464
01:22:42,279 --> 01:22:49,479
as large as the ones in the neighbor

1465
01:22:46,869 --> 01:22:54,969
grid because they have been upsampled

1466
01:22:49,479 --> 01:22:58,629
right so there my guess is what we would

1467
01:22:54,969 --> 01:23:05,170
want to do that seems like the more

1468
01:22:58,630 --> 01:23:07,020
logical thing to me yeah so there seems

1469
01:23:05,170 --> 01:23:09,850
like what we would want to do and

1470
01:23:07,020 --> 01:23:11,560
furthermore we can if we want to we can

1471
01:23:09,850 --> 01:23:13,900
still use bilinear filtering in this

1472
01:23:11,560 --> 01:23:16,570
case if we want to for sampling the

1473
01:23:13,899 --> 01:23:22,869
parent so that we're really just talking

1474
01:23:16,569 --> 01:23:25,389
about moving a certain Delta in in terms

1475
01:23:22,869 --> 01:23:27,340
of the U and the V and then we're just

1476
01:23:25,390 --> 01:23:29,170
taking that whatever that comes out and

1477
01:23:27,340 --> 01:23:36,100
we're assuming that that's the lighting

1478
01:23:29,170 --> 01:23:40,060
contribution from there again it's very

1479
01:23:36,100 --> 01:23:44,980
sloppy but that's okay again we're just

1480
01:23:40,060 --> 01:23:46,150
playing around with it all right so if

1481
01:23:44,979 --> 01:23:49,589
you take a look at what's happening here

1482
01:23:46,149 --> 01:23:53,649
the parent front back surface and BTEC

1483
01:23:49,590 --> 01:23:58,270
bit here then when we go ahead and do

1484
01:23:53,649 --> 01:24:01,599
the sampling for that what we want to do

1485
01:23:58,270 --> 01:24:04,239
is we want to take for texture samples

1486
01:24:01,600 --> 01:24:06,310
there and so what I'd like to do is I'd

1487
01:24:04,238 --> 01:24:09,039
like to introduce a way to bundle these

1488
01:24:06,310 --> 01:24:11,260
into a struct I'm not sure to what

1489
01:24:09,039 --> 01:24:17,140
extent I have the ability to do that but

1490
01:24:11,260 --> 01:24:22,140
I'm going to try so let's say I said we

1491
01:24:17,140 --> 01:24:22,140
have a struct light

1492
01:24:24,859 --> 01:24:32,280
value and a light value is going to be

1493
01:24:29,029 --> 01:24:39,148
one of each of these things so it's the

1494
01:24:32,279 --> 01:24:45,559
front emit the back emit the surface

1495
01:24:39,149 --> 01:24:48,088
color apparent or what's on the empty

1496
01:24:45,559 --> 01:24:50,189
and what I would like is I'd like to go

1497
01:24:48,088 --> 01:24:55,010
say I want to get a light value from a

1498
01:24:50,189 --> 01:24:59,609
function that's just like you know

1499
01:24:55,010 --> 01:25:04,530
parent sample and it's from particular

1500
01:24:59,609 --> 01:25:09,749
UV and so what I'd like to do there is

1501
01:25:04,529 --> 01:25:17,458
say I have a light value result the

1502
01:25:09,748 --> 01:25:21,748
result front emit equals texture at the

1503
01:25:17,458 --> 01:25:25,119
UV and so basically I'm just going to

1504
01:25:21,748 --> 01:25:28,510
fill in each of these values by sampling

1505
01:25:25,119 --> 01:25:28,510
[Applause]

1506
01:25:29,689 --> 01:25:41,309
from the corresponding texture now

1507
01:25:38,668 --> 01:25:46,769
looking at this I don't think we need

1508
01:25:41,309 --> 01:25:49,588
the surface color for these right in

1509
01:25:46,769 --> 01:25:51,539
fact when we sample lighting values we

1510
01:25:49,588 --> 01:25:54,149
never need the surface color the surface

1511
01:25:51,538 --> 01:25:58,518
color is just for us to compute our own

1512
01:25:54,149 --> 01:26:01,409
reflection so I think at least I think

1513
01:25:58,519 --> 01:26:03,809
we're never going to do anything with

1514
01:26:01,408 --> 01:26:08,818
the surface color because that's already

1515
01:26:03,809 --> 01:26:11,389
been stored into that lighting value I

1516
01:26:08,819 --> 01:26:11,389
think

1517
01:26:14,769 --> 01:26:20,650
and you know you know what else I think

1518
01:26:17,469 --> 01:26:22,599
I think we can

1519
01:26:20,649 --> 01:26:25,058
ping-pong this as well so I think we

1520
01:26:22,599 --> 01:26:28,210
could do this in two passes the first

1521
01:26:25,059 --> 01:26:30,880
pass does the computation that transfers

1522
01:26:28,210 --> 01:26:32,349
the lighting down one level and the next

1523
01:26:30,880 --> 01:26:34,510
pass does the one that transfers it

1524
01:26:32,349 --> 01:26:37,569
within a level

1525
01:26:34,510 --> 01:26:40,150
so probably the neighbor stuff doesn't

1526
01:26:37,569 --> 01:26:42,518
have to happen right

1527
01:26:40,149 --> 01:26:47,170
so probably compute compiled multi light

1528
01:26:42,519 --> 01:26:48,670
down here o is probably what this

1529
01:26:47,170 --> 01:26:49,868
actually is or maybe we'll have it look

1530
01:26:48,670 --> 01:26:54,788
like down to because there's going to be

1531
01:26:49,868 --> 01:26:57,639
two steps to this all right

1532
01:26:54,788 --> 01:26:59,498
so in terms of taking the parent sample

1533
01:26:57,639 --> 01:27:01,328
then we're going to say is like okay

1534
01:26:59,498 --> 01:27:03,420
we're going to get all these values but

1535
01:27:01,328 --> 01:27:06,399
we don't need to know the service color

1536
01:27:03,420 --> 01:27:11,739
at all because the surface color isn't

1537
01:27:06,399 --> 01:27:13,689
used for for that transfer so really

1538
01:27:11,738 --> 01:27:18,238
only sampling from three textures the

1539
01:27:13,689 --> 01:27:20,738
two emitters and then the normal of them

1540
01:27:18,238 --> 01:27:29,109
so really this is what this looks like

1541
01:27:20,738 --> 01:27:31,748
right so if I go ahead and say there's

1542
01:27:29,109 --> 01:27:34,210
my way to take a parent sample then what

1543
01:27:31,748 --> 01:27:40,349
I can do is say well I've got a couple

1544
01:27:34,210 --> 01:27:40,349
of these I've got the left version of it

1545
01:27:41,720 --> 01:27:51,819
[Applause]

1546
01:27:52,420 --> 01:28:00,289
and in this case I don't know what the

1547
01:27:55,279 --> 01:28:23,719
UV step is so I guess what I want to do

1548
01:28:00,289 --> 01:28:25,159
is say you know something like this so

1549
01:28:23,720 --> 01:28:27,289
basically all I'm saying here is like

1550
01:28:25,159 --> 01:28:31,029
yeah we can get the neighbor you know

1551
01:28:27,289 --> 01:28:34,640
the up the left right the up the down

1552
01:28:31,029 --> 01:28:36,829
from wherever we are right now when we

1553
01:28:34,640 --> 01:28:40,640
look into our parent we can see what the

1554
01:28:36,829 --> 01:28:44,899
neighboring what the neighboring values

1555
01:28:40,640 --> 01:28:49,250
are by just looking using the U and the

1556
01:28:44,899 --> 01:28:52,009
V step now I'm going to call this UV

1557
01:28:49,250 --> 01:29:02,989
step and I'm going to do like dot view

1558
01:28:52,010 --> 01:29:04,100
dot view and dot V dot B so assuming

1559
01:29:02,989 --> 01:29:05,569
that they allow me to do that I don't

1560
01:29:04,100 --> 01:29:12,289
know if they do I guess I could just do

1561
01:29:05,569 --> 01:29:15,559
x and y so we would need to pass in

1562
01:29:12,289 --> 01:29:19,039
whatever that UV step was I believe in

1563
01:29:15,560 --> 01:29:22,070
shader version 4 you can just find out

1564
01:29:19,039 --> 01:29:25,909
what that UV step is because you know

1565
01:29:22,069 --> 01:29:28,039
the size of the texture in our case we

1566
01:29:25,909 --> 01:29:30,710
don't have that I don't think I don't

1567
01:29:28,039 --> 01:29:34,210
think shader 150 has that I mean I'll

1568
01:29:30,710 --> 01:29:34,210
double-check but I don't think it does

1569
01:29:54,238 --> 01:29:57,238
yeah

1570
01:30:03,670 --> 01:30:06,840
definitely does not

1571
01:30:10,789 --> 01:30:14,539
I helped C struct anywhere in here I

1572
01:30:12,800 --> 01:30:15,920
sure hope we can do struct

1573
01:30:14,539 --> 01:30:20,239
it's going to be super annoying if we

1574
01:30:15,920 --> 01:30:22,130
can't make us trucks it has nothing to

1575
01:30:20,239 --> 01:30:23,899
do with the graphics card whether you

1576
01:30:22,130 --> 01:30:26,949
can do a struct or not right it's just a

1577
01:30:23,899 --> 01:30:26,949
compilation language

1578
01:30:39,849 --> 01:30:43,050
yeah there we go

1579
01:30:45,849 --> 01:30:48,929
it's always hard to remember what you

1580
01:30:47,260 --> 01:30:56,980
can do in each shader language version

1581
01:30:48,929 --> 01:30:59,050
alright so we would need some way of

1582
01:30:56,979 --> 01:31:01,269
getting the few V step in so we're going

1583
01:30:59,050 --> 01:31:02,469
to probably have to pass it down like I

1584
01:31:01,270 --> 01:31:04,030
said you don't need it in shader

1585
01:31:02,469 --> 01:31:06,099
language for enough you can just get

1586
01:31:04,029 --> 01:31:08,889
this information but we will probably

1587
01:31:06,099 --> 01:31:11,260
have to just specify it so we're going

1588
01:31:08,889 --> 01:31:16,690
to have a uniform v2 here that's gonna

1589
01:31:11,260 --> 01:31:19,480
be the UV step which all that is it's

1590
01:31:16,689 --> 01:31:21,819
how far it takes you to go from one

1591
01:31:19,479 --> 01:31:24,698
texel to the next Texel in you and B

1592
01:31:21,819 --> 01:31:25,210
right that's that's all we want to be

1593
01:31:24,698 --> 01:31:28,269
able to do

1594
01:31:25,210 --> 01:31:33,340
so basically when we go up to you know

1595
01:31:28,270 --> 01:31:37,090
take a look at mmm you were we go take a

1596
01:31:33,340 --> 01:31:40,840
look at whatever our values are in the

1597
01:31:37,090 --> 01:31:43,119
parent bitmap we take where we would

1598
01:31:40,840 --> 01:31:49,260
have been for our textile and we look to

1599
01:31:43,118 --> 01:31:51,609
you know up down left right alright so

1600
01:31:49,260 --> 01:31:59,800
that's all we want to do from there we

1601
01:31:51,609 --> 01:32:01,328
can get rid of these entirely and then

1602
01:31:59,800 --> 01:32:03,039
if we want to do something really just

1603
01:32:01,328 --> 01:32:04,599
dumb here we could just average these

1604
01:32:03,039 --> 01:32:06,069
values together even though that's not

1605
01:32:04,599 --> 01:32:07,480
at all what we're going to do eventually

1606
01:32:06,069 --> 01:32:10,509
like I could say okay

1607
01:32:07,479 --> 01:32:14,078
point two five times like left front

1608
01:32:10,510 --> 01:32:18,389
commit plus right front commit plus up

1609
01:32:14,078 --> 01:32:18,389
front payment plus back front Emmitt

1610
01:32:22,739 --> 01:32:36,159
and put the live types back there yeah

1611
01:32:33,600 --> 01:32:37,810
and so that just produces another

1612
01:32:36,159 --> 01:32:38,829
averaging step which is not what we

1613
01:32:37,810 --> 01:32:40,300
actually want to do here we want to

1614
01:32:38,829 --> 01:32:42,850
actually do the lighting computation

1615
01:32:40,300 --> 01:32:44,829
here but for now we can actually test

1616
01:32:42,850 --> 01:32:48,460
this by just you know throwing some

1617
01:32:44,829 --> 01:32:51,460
arbitrary values in there it can based

1618
01:32:48,460 --> 01:32:54,939
on the averaging and so this would be

1619
01:32:51,460 --> 01:32:58,000
the way we would do the down sampling

1620
01:32:54,939 --> 01:33:00,279
from the parent and then the the

1621
01:32:58,000 --> 01:33:03,489
calculation of the of the lighting for

1622
01:33:00,279 --> 01:33:05,619
the neighborhood around us we could do

1623
01:33:03,489 --> 01:33:07,659
as a separate pass now the interesting

1624
01:33:05,619 --> 01:33:10,269
thing about this is this will still work

1625
01:33:07,659 --> 01:33:15,279
will still be able to we don't have to

1626
01:33:10,270 --> 01:33:17,650
do a neighborhood around us at the lower

1627
01:33:15,279 --> 01:33:23,170
level we could just always use larger

1628
01:33:17,649 --> 01:33:28,149
emitters and just leave it at that so we

1629
01:33:23,170 --> 01:33:29,770
don't actually have to even do that we

1630
01:33:28,149 --> 01:33:32,349
could always just take the lighting from

1631
01:33:29,770 --> 01:33:34,360
our parent and so for at the moment we

1632
01:33:32,350 --> 01:33:37,150
can run the entire algorithm just this

1633
01:33:34,359 --> 01:33:39,729
way and never use the local refinement

1634
01:33:37,149 --> 01:33:42,250
step so I'm going to leave compute no I

1635
01:33:39,729 --> 01:33:44,500
think about it I'll just leave compile

1636
01:33:42,250 --> 01:33:46,600
month elect down as the only thing

1637
01:33:44,500 --> 01:33:48,880
happening at the moment and let's just

1638
01:33:46,600 --> 01:33:52,060
get this one working so we know we have

1639
01:33:48,880 --> 01:33:56,520
to do parents back and NP and then we've

1640
01:33:52,060 --> 01:33:56,520
got the UV step so let's get that

1641
01:34:06,779 --> 01:34:13,259
we don't have this one the surface color

1642
01:34:09,659 --> 01:34:14,819
is not going to be there but what is

1643
01:34:13,260 --> 01:34:18,539
going to be there eventually so we might

1644
01:34:14,819 --> 01:34:22,319
as well just prepare for it is we do

1645
01:34:18,539 --> 01:34:28,949
need to know two of the values here we

1646
01:34:22,319 --> 01:34:31,289
need to know what our MP text is right

1647
01:34:28,949 --> 01:34:34,260
we need to know what our surface color

1648
01:34:31,289 --> 01:34:36,569
is because even though we're not using

1649
01:34:34,260 --> 01:34:41,340
those yes we will have to use them

1650
01:34:36,569 --> 01:34:42,479
eventually right so because in order to

1651
01:34:41,340 --> 01:34:43,860
compute the lighting equation in

1652
01:34:42,479 --> 01:34:45,539
addition to the lights we're checking

1653
01:34:43,859 --> 01:34:47,939
against we need to know what our

1654
01:34:45,539 --> 01:34:52,439
reflection direction is and what our

1655
01:34:47,939 --> 01:34:55,559
surface color is right so those two have

1656
01:34:52,439 --> 01:34:57,929
to you know those two have to be sampled

1657
01:34:55,560 --> 01:34:59,789
they don't have to be sampled from

1658
01:34:57,930 --> 01:35:02,490
anywhere other than the exact current

1659
01:34:59,789 --> 01:35:11,489
location so we can just use a

1660
01:35:02,489 --> 01:35:14,000
straightforward right I suppose these

1661
01:35:11,489 --> 01:35:14,000
have to be

1662
01:35:17,460 --> 01:35:24,829
[Applause]

1663
01:35:31,489 --> 01:35:35,489
so that's all the stuff we will need to

1664
01:35:34,229 --> 01:35:37,409
compute the lighting equation and then

1665
01:35:35,489 --> 01:35:40,729
what we would do in here is do to verse

1666
01:35:37,409 --> 01:35:43,529
two evaluations of the lighting equation

1667
01:35:40,729 --> 01:35:47,309
one with the front values and one with

1668
01:35:43,529 --> 01:35:52,739
the back values right that's that's all

1669
01:35:47,310 --> 01:35:54,300
we would be doing there and we can't set

1670
01:35:52,739 --> 01:35:58,309
ourselves up for slightly more success

1671
01:35:54,300 --> 01:36:05,750
there by saying something like well okay

1672
01:35:58,310 --> 01:36:10,710
you know compute light or something or

1673
01:36:05,750 --> 01:36:12,119
you know transfer a light and what we

1674
01:36:10,710 --> 01:36:16,260
want to do here is be able to

1675
01:36:12,119 --> 01:36:19,109
effectively you know evaluate each of

1676
01:36:16,260 --> 01:36:21,600
each of these things this contribution

1677
01:36:19,109 --> 01:36:23,519
so in this case we would end up with a

1678
01:36:21,600 --> 01:36:28,590
situation where we wanted to say all

1679
01:36:23,520 --> 01:36:29,750
right what's you know the reflecting the

1680
01:36:28,590 --> 01:36:36,360
reflectance color

1681
01:36:29,750 --> 01:36:39,350
what's the reflecting normal what's the

1682
01:36:36,359 --> 01:36:39,349
reflector position

1683
01:36:43,369 --> 01:36:48,239
something like this will probably pass

1684
01:36:46,199 --> 01:36:50,069
them in the other order so we've got the

1685
01:36:48,239 --> 01:36:52,019
position of the reflector is a position

1686
01:36:50,069 --> 01:36:53,899
of the asteroid the direction of the

1687
01:36:52,020 --> 01:36:58,140
reflector and the color of the reflector

1688
01:36:53,899 --> 01:37:04,920
and then we would also do like ok what's

1689
01:36:58,140 --> 01:37:08,720
the light key the light normal and the

1690
01:37:04,920 --> 01:37:11,819
light emission something like that and

1691
01:37:08,720 --> 01:37:16,520
when we do that letting transfer what we

1692
01:37:11,819 --> 01:37:16,519
want to know is you know

1693
01:37:22,939 --> 01:37:28,639
this is where the disk to disk radians

1694
01:37:25,789 --> 01:37:31,340
transfer would be computed now we're not

1695
01:37:28,640 --> 01:37:35,810
actually going to do that at the moment

1696
01:37:31,340 --> 01:37:37,850
we're just going to take the results to

1697
01:37:35,810 --> 01:37:39,670
be whatever the light emission was and

1698
01:37:37,850 --> 01:37:44,210
assume that it gets transferred entirely

1699
01:37:39,670 --> 01:37:52,399
right so the way this would break down

1700
01:37:44,210 --> 01:37:53,899
here is we would need to call that

1701
01:37:52,399 --> 01:37:58,759
transfer light for each one of these

1702
01:37:53,899 --> 01:38:02,139
functions so this is going to be kind of

1703
01:37:58,760 --> 01:38:02,140
annoying since we have no indentation

1704
01:38:09,279 --> 01:38:17,630
but it's basically going to look like

1705
01:38:11,149 --> 01:38:21,859
this right so we're going to say

1706
01:38:17,630 --> 01:38:29,630
transfer light we know we have and we

1707
01:38:21,859 --> 01:38:32,229
probably want a this is the transfer

1708
01:38:29,630 --> 01:38:34,489
light explicit where everything's been

1709
01:38:32,229 --> 01:38:44,659
broken down we probably also have a

1710
01:38:34,488 --> 01:38:53,329
transfer light where we have just the

1711
01:38:44,659 --> 01:38:56,059
emit and the NP for the light although

1712
01:38:53,329 --> 01:38:59,119
that's not really true I guess because

1713
01:38:56,060 --> 01:39:01,550
the NP has to be broken out anyway so I

1714
01:38:59,119 --> 01:39:06,590
take it back I guess we don't really

1715
01:39:01,550 --> 01:39:10,219
need that because probably what we want

1716
01:39:06,590 --> 01:39:13,670
to do here is say okay let's actually

1717
01:39:10,219 --> 01:39:16,730
break this out to the position and the

1718
01:39:13,670 --> 01:39:19,340
normal right so we're going to sample

1719
01:39:16,729 --> 01:39:23,059
the NP but then we need to compute both

1720
01:39:19,340 --> 01:39:27,230
of these values now the N is a pretty

1721
01:39:23,060 --> 01:39:30,230
easy value to compute because since we

1722
01:39:27,229 --> 01:39:33,409
know that the two values that we get in

1723
01:39:30,229 --> 01:39:36,049
the NP x and y are the actual x and y

1724
01:39:33,409 --> 01:39:41,389
values we just need to take

1725
01:39:36,050 --> 01:39:43,610
the V value and compute that somehow in

1726
01:39:41,390 --> 01:39:45,650
order to compute that we know the

1727
01:39:43,609 --> 01:39:48,049
Pythagorean theorem right we know that

1728
01:39:45,649 --> 01:39:51,799
this is a normalized vector so it's

1729
01:39:48,050 --> 01:39:52,510
pretty easy we know that this has to sum

1730
01:39:51,800 --> 01:39:57,079
to one

1731
01:39:52,510 --> 01:40:02,230
so we know that the square root of n x

1732
01:39:57,079 --> 01:40:06,380
squared plus n y squared plus NZ squared

1733
01:40:02,229 --> 01:40:09,979
has to equal one so if we square both

1734
01:40:06,380 --> 01:40:16,480
sides in this case we just end up with

1735
01:40:09,979 --> 01:40:20,589
this and because one squared is one

1736
01:40:16,479 --> 01:40:24,679
and so we just end up with NZ squared

1737
01:40:20,590 --> 01:40:30,409
equaling these two sausage gentlemen

1738
01:40:24,680 --> 01:40:33,079
transferred over to the other side right

1739
01:40:30,409 --> 01:40:36,529
so you have n Z squared equals one minus

1740
01:40:33,079 --> 01:40:38,600
NX squared minus n y squared and so it

1741
01:40:36,529 --> 01:40:45,469
just means that this simple equation

1742
01:40:38,600 --> 01:40:48,190
right here is is all there is right so

1743
01:40:45,470 --> 01:40:50,539
in order to reproduce this this

1744
01:40:48,189 --> 01:41:04,719
operation we just need to take the

1745
01:40:50,539 --> 01:41:11,210
square root of one minus NX x NX + - + y

1746
01:41:04,720 --> 01:41:14,090
x + y right so in that case we just have

1747
01:41:11,210 --> 01:41:17,119
a pretty straightforward operation to

1748
01:41:14,090 --> 01:41:20,150
reconstruct the NPV value which then we

1749
01:41:17,119 --> 01:41:23,059
do the result p value on the other hand

1750
01:41:20,149 --> 01:41:24,649
is harder to compute the reason it's

1751
01:41:23,060 --> 01:41:26,750
hard to compute is because we have to do

1752
01:41:24,649 --> 01:41:29,719
some real work there to figure out where

1753
01:41:26,750 --> 01:41:31,159
it is going to be in world space based

1754
01:41:29,720 --> 01:41:33,079
on strictly application on the screen

1755
01:41:31,159 --> 01:41:39,739
right now I'm not going to do that I'm

1756
01:41:33,079 --> 01:41:43,609
just going to say that it's the MP Z

1757
01:41:39,739 --> 01:41:46,210
value taken directly here because that's

1758
01:41:43,609 --> 01:41:49,339
the we do know that that is going to be

1759
01:41:46,210 --> 01:41:52,119
the depth of it we just don't know what

1760
01:41:49,340 --> 01:42:01,730
second wire so I put the view in there

1761
01:41:52,119 --> 01:42:03,590
compute the X&amp;Y from the flag and so

1762
01:42:01,729 --> 01:42:05,329
that's all we really need to do there

1763
01:42:03,590 --> 01:42:07,730
and then we have the P and the N

1764
01:42:05,329 --> 01:42:10,399
correctly so then that lets us do

1765
01:42:07,729 --> 01:42:12,979
transfer light as we would want to

1766
01:42:10,399 --> 01:42:16,549
actually call it right now we can just

1767
01:42:12,979 --> 01:42:19,189
say left up P left n left up front omit

1768
01:42:16,550 --> 01:42:28,670
and then we can just do recipe riff and

1769
01:42:19,189 --> 01:42:30,500
recipe right so what we want to do is

1770
01:42:28,670 --> 01:42:35,810
since the transfer light is a summation

1771
01:42:30,500 --> 01:42:39,890
in this case each of the transfer lights

1772
01:42:35,810 --> 01:42:40,700
I believe yes I'm going to can actually

1773
01:42:39,890 --> 01:42:44,530
line up like that because the

1774
01:42:40,699 --> 01:42:45,849
invitationals is never respected but

1775
01:42:44,529 --> 01:42:48,229
[Applause]

1776
01:42:45,850 --> 01:42:50,060
each of these is just going to sum

1777
01:42:48,229 --> 01:42:52,729
together we're transferring the light

1778
01:42:50,060 --> 01:42:55,430
from each of the places so there is not

1779
01:42:52,729 --> 01:42:57,649
any attenuation on it so right now we'll

1780
01:42:55,430 --> 01:43:00,680
we'll take that approximate attenuation

1781
01:42:57,649 --> 01:43:02,239
and we can throw it into here if we want

1782
01:43:00,680 --> 01:43:05,900
to but that's the only place that we

1783
01:43:02,239 --> 01:43:08,929
should put it right so this is the

1784
01:43:05,899 --> 01:43:12,189
reflectance color directly that doesn't

1785
01:43:08,930 --> 01:43:19,789
get modified but these we have to

1786
01:43:12,189 --> 01:43:22,269
compute so the recipe the ref n these

1787
01:43:19,789 --> 01:43:22,269
are the same

1788
01:43:22,640 --> 01:43:34,260
[Applause]

1789
01:43:29,750 --> 01:43:45,448
the restaurant in this case is going to

1790
01:43:34,260 --> 01:43:47,159
be and so since that's going to get done

1791
01:43:45,448 --> 01:44:13,319
in both cases I'm going to make that a

1792
01:43:47,158 --> 01:44:17,089
function so now we can do this

1793
01:44:13,319 --> 01:44:20,368
reconstruct normal step anytime we want

1794
01:44:17,090 --> 01:44:23,520
and all I have to do is just pass in the

1795
01:44:20,368 --> 01:44:25,429
texture sample like so and it will be

1796
01:44:23,520 --> 01:44:37,880
constructed furthermore I could do

1797
01:44:25,429 --> 01:44:40,260
reconstruct position and the same thing

1798
01:44:37,880 --> 01:44:44,510
so that way once we get this working

1799
01:44:40,260 --> 01:44:44,510
properly it'll just work everywhere

1800
01:44:44,929 --> 01:45:02,310
right that one will have to take a UV as

1801
01:44:54,750 --> 01:45:05,800
well so I'll pass that second

1802
01:45:02,310 --> 01:45:08,150
[Applause]

1803
01:45:05,800 --> 01:45:12,409
it doesn't need at the moment but it

1804
01:45:08,149 --> 01:45:13,969
will eventually so we then have these

1805
01:45:12,409 --> 01:45:23,809
two terms here which I'll do the same

1806
01:45:13,970 --> 01:45:26,750
way and now we have all the values that

1807
01:45:23,810 --> 01:45:34,580
we need for our lighting transfer so I

1808
01:45:26,750 --> 01:45:40,970
can do the same for both of these so now

1809
01:45:34,579 --> 01:45:43,130
front and back are both included okay so

1810
01:45:40,970 --> 01:45:46,490
I think that's what we want here again

1811
01:45:43,130 --> 01:45:48,319
we've got a six texture sample from all

1812
01:45:46,489 --> 01:45:50,269
three of the parent values that deal

1813
01:45:48,319 --> 01:45:53,449
with lighting but not the surface color

1814
01:45:50,270 --> 01:45:55,280
and then just the surface color MIMP of

1815
01:45:53,449 --> 01:45:56,510
the level that we're currently on

1816
01:45:55,279 --> 01:45:58,789
because we're going to need that and

1817
01:45:56,510 --> 01:46:03,220
then we'll write to the other two which

1818
01:45:58,789 --> 01:46:13,460
are the two emission textures so that

1819
01:46:03,220 --> 01:46:15,380
excuse me should suffice and now we just

1820
01:46:13,460 --> 01:46:19,699
need to actually get those values out

1821
01:46:15,380 --> 01:46:21,409
like the bind locations out and see with

1822
01:46:19,699 --> 01:46:23,689
all the compiler errors that I'm sure

1823
01:46:21,409 --> 01:46:25,909
that we're going to have for this shader

1824
01:46:23,689 --> 01:46:35,319
so here's all the stuff we were

1825
01:46:25,909 --> 01:46:40,220
specifying so you can see here we've got

1826
01:46:35,319 --> 01:46:43,399
parent front emit parent back parent and

1827
01:46:40,220 --> 01:46:45,619
P and then we want

1828
01:46:43,399 --> 01:46:48,439
so that's parent front emit parent back

1829
01:46:45,619 --> 01:46:57,050
identity Co that's good

1830
01:46:48,439 --> 01:46:57,929
and then we've got our Mt and our

1831
01:46:57,050 --> 01:47:04,050
surface color

1832
01:46:57,930 --> 01:47:13,650
[Applause]

1833
01:47:04,050 --> 01:47:14,970
we then have the UV step and those are

1834
01:47:13,649 --> 01:47:16,979
all the things that we would have to

1835
01:47:14,970 --> 01:47:20,699
bind for this particular one as far as I

1836
01:47:16,979 --> 01:47:26,029
can tell anyway so all that stuff has to

1837
01:47:20,699 --> 01:47:34,800
get found and it has to have its own

1838
01:47:26,029 --> 01:47:35,670
multi grid it has to have its own

1839
01:47:34,800 --> 01:47:57,449
information

1840
01:47:35,670 --> 01:48:05,239
oops I want to do so here's our UV step

1841
01:47:57,449 --> 01:48:09,029
here's our surface color here is our MP

1842
01:48:05,238 --> 01:48:14,579
and then here we just want our front

1843
01:48:09,029 --> 01:48:20,550
emit vacuum it MP and that's everybody

1844
01:48:14,579 --> 01:48:23,369
yeah so now when we actually get down to

1845
01:48:20,550 --> 01:48:27,180
using this we've got some work to do

1846
01:48:23,369 --> 01:48:29,689
there as well so when we do our multi

1847
01:48:27,180 --> 01:48:29,690
grid up

1848
01:48:41,199 --> 01:48:48,229
just here when we do our multigrid up

1849
01:48:46,670 --> 01:48:52,850
we're going to do essentially the same

1850
01:48:48,229 --> 01:48:56,239
set of process in Reverse right so

1851
01:48:52,850 --> 01:49:13,490
during the downward phase we're going to

1852
01:48:56,239 --> 01:49:19,699
want almost exactly this so what we're

1853
01:49:13,489 --> 01:49:21,289
going to do is start at the top and if

1854
01:49:19,699 --> 01:49:23,389
the light buffer counts you have to

1855
01:49:21,289 --> 01:49:24,710
think about this a little bit so the

1856
01:49:23,390 --> 01:49:25,039
light buffer counselled is how many

1857
01:49:24,710 --> 01:49:29,090
there are

1858
01:49:25,039 --> 01:49:32,390
if we actually access into that one we

1859
01:49:29,090 --> 01:49:34,760
would end up axing into a non-existent

1860
01:49:32,390 --> 01:49:38,260
light buffer right so life of our count

1861
01:49:34,760 --> 01:49:41,329
minus one is the index of the most

1862
01:49:38,260 --> 01:49:45,739
simple light buffer recomputed right

1863
01:49:41,329 --> 01:49:48,019
it's the most average up so what we want

1864
01:49:45,739 --> 01:49:51,199
to do is we want to start at that one

1865
01:49:48,020 --> 01:49:54,980
and we want to propagate down to the

1866
01:49:51,199 --> 01:49:57,079
lower level one what that means is we

1867
01:49:54,979 --> 01:50:00,469
are essentially going to be going

1868
01:49:57,079 --> 01:50:02,180
backwards and be testing for our our

1869
01:50:00,470 --> 01:50:08,150
desk light buffer index and this is

1870
01:50:02,180 --> 01:50:09,650
actually the source right now and we're

1871
01:50:08,149 --> 01:50:12,500
going to test for our source to be

1872
01:50:09,649 --> 01:50:14,239
greater than zero right because when we

1873
01:50:12,500 --> 01:50:16,220
get down to zero that means that we

1874
01:50:14,239 --> 01:50:17,840
can't go any further that that's already

1875
01:50:16,220 --> 01:50:20,990
on that you know we've already

1876
01:50:17,840 --> 01:50:22,130
propagated down as much as we can so

1877
01:50:20,989 --> 01:50:24,260
we're starting at the top one we're

1878
01:50:22,130 --> 01:50:27,470
going to propagate down so here this is

1879
01:50:24,260 --> 01:50:29,659
exactly opposite of the other of the

1880
01:50:27,470 --> 01:50:31,579
upper tasks we've got the destination

1881
01:50:29,659 --> 01:50:37,489
light buffer is whatever the source was

1882
01:50:31,579 --> 01:50:38,720
minus one right is going to go down so

1883
01:50:37,489 --> 01:50:40,340
then we've got the source and the

1884
01:50:38,720 --> 01:50:42,800
deathly buffers are both selected

1885
01:50:40,340 --> 01:50:44,600
exactly the same way and we're going to

1886
01:50:42,800 --> 01:50:46,039
do another full screen fill so all of

1887
01:50:44,600 --> 01:50:48,560
the stuff is exactly the way that you

1888
01:50:46,039 --> 01:50:51,279
would expect so the only change here is

1889
01:50:48,560 --> 01:50:54,020
what we are going to be binding right

1890
01:50:51,279 --> 01:50:56,300
and so we want to bind a couple of

1891
01:50:54,020 --> 01:50:58,250
different things here the right all

1892
01:50:56,300 --> 01:51:00,289
frame buffer is not the one we're going

1893
01:50:58,250 --> 01:51:02,449
to use because remember we're only

1894
01:51:00,289 --> 01:51:04,579
writing to the emissions now so we're

1895
01:51:02,449 --> 01:51:06,050
going to use the right emit frame buffer

1896
01:51:04,579 --> 01:51:07,309
and it's a good thing too because we

1897
01:51:06,050 --> 01:51:09,710
couldn't read from the surface plate or

1898
01:51:07,310 --> 01:51:14,780
the MP text for our for the desk which

1899
01:51:09,710 --> 01:51:17,480
we need to if we were writing to it so

1900
01:51:14,779 --> 01:51:20,329
here we go so we've got 0 1 2 3 4 5 here

1901
01:51:17,479 --> 01:51:22,279
we know we've got front emit back in it

1902
01:51:20,329 --> 01:51:24,859
we're not going to use the surface color

1903
01:51:22,279 --> 01:51:29,659
so we're just using the env tech in this

1904
01:51:24,859 --> 01:51:30,319
case from the source and then for the

1905
01:51:29,659 --> 01:51:34,430
desk

1906
01:51:30,319 --> 01:51:39,679
we do need that surface color and we do

1907
01:51:34,430 --> 01:51:42,020
need that MP tech for the destination so

1908
01:51:39,680 --> 01:51:44,869
there's our 5 textures we also need to

1909
01:51:42,020 --> 01:51:47,960
specify when we do our use program begin

1910
01:51:44,869 --> 01:51:51,079
here we also need to bind that UV step

1911
01:51:47,960 --> 01:51:52,819
value the UV step value is how far it

1912
01:51:51,079 --> 01:51:56,869
takes to get from one textile to the

1913
01:51:52,819 --> 01:51:59,239
next Texel in the particular texture

1914
01:51:56,869 --> 01:52:05,119
that we're looking at and so since these

1915
01:51:59,239 --> 01:52:07,670
things are essentially 0 to 1 mapped

1916
01:52:05,119 --> 01:52:10,099
versions of the width and the height we

1917
01:52:07,670 --> 01:52:13,520
can determine this value very easily so

1918
01:52:10,100 --> 01:52:18,770
if we take a look at how we would do the

1919
01:52:13,520 --> 01:52:19,970
the source UV step which is what this

1920
01:52:18,770 --> 01:52:21,500
really is and we probably should have

1921
01:52:19,970 --> 01:52:24,380
called it that because it's different

1922
01:52:21,500 --> 01:52:32,300
for the destination the source UV step

1923
01:52:24,380 --> 01:52:35,989
is going to be 1 over the width and

1924
01:52:32,300 --> 01:52:40,220
height of the source right because

1925
01:52:35,989 --> 01:52:42,590
that's how far one texel would be in UV

1926
01:52:40,220 --> 01:52:45,050
space I don't know if we did a 1-over

1927
01:52:42,590 --> 01:52:49,760
operator for our things I'm not sure if

1928
01:52:45,050 --> 01:52:52,930
that's true it looks like we did oops

1929
01:52:49,760 --> 01:52:52,930
[Applause]

1930
01:52:58,949 --> 01:53:05,510
exam I so we did not do them that's

1931
01:53:03,729 --> 01:53:08,708
alright

1932
01:53:05,510 --> 01:53:08,708
[Applause]

1933
01:53:11,409 --> 01:53:17,859
and so the only thing I think we should

1934
01:53:14,140 --> 01:53:20,250
have to do now what is exciting about

1935
01:53:17,859 --> 01:53:20,250
here

1936
01:53:24,779 --> 01:53:32,380
Sheila texture for is an undeclared

1937
01:53:27,579 --> 01:53:43,050
identifier that's so apparently that is

1938
01:53:32,380 --> 01:53:49,180
so well that's just ridiculous

1939
01:53:43,050 --> 01:53:52,650
give me all your textures or maybe not

1940
01:53:49,180 --> 01:53:52,650
all of them but let's take eight of them

1941
01:53:54,840 --> 01:54:01,900
okay so that takes care of most of what

1942
01:53:59,409 --> 01:54:03,639
we need to do the only thing we need to

1943
01:54:01,899 --> 01:54:07,329
do is make sure that we actually bind

1944
01:54:03,640 --> 01:54:09,579
this stuff up so we've got our used

1945
01:54:07,329 --> 01:54:12,519
program begin for multi light up we

1946
01:54:09,579 --> 01:54:17,829
basically need the same thing for multi

1947
01:54:12,520 --> 01:54:22,450
light down and in this case we now have

1948
01:54:17,829 --> 01:54:25,809
one two three four so we've got parent

1949
01:54:22,449 --> 01:54:28,679
front emit parent back admit parent and

1950
01:54:25,810 --> 01:54:28,680
key

1951
01:54:31,189 --> 01:54:37,169
[Applause]

1952
01:54:34,078 --> 01:54:39,738
and those two then we also have a Geo

1953
01:54:37,170 --> 01:54:55,309
uniform to pass

1954
01:54:39,738 --> 01:54:59,658
that's the UV step ah probably 2fv right

1955
01:54:55,309 --> 01:54:59,659
we've got one of them

1956
01:55:08,948 --> 01:55:13,788
there we go

1957
01:55:11,840 --> 01:55:16,849
so we've got lots of grid light up now

1958
01:55:13,788 --> 01:55:21,679
we've got multi grid light down we're

1959
01:55:16,849 --> 01:55:31,969
all bound up and so I think that should

1960
01:55:21,679 --> 01:55:34,639
be all we really need to do mm yeah I

1961
01:55:31,969 --> 01:55:40,010
think that's about it for doing our our

1962
01:55:34,639 --> 01:55:42,260
sort of reverse propagation now we're

1963
01:55:40,010 --> 01:55:43,909
going to have a lot of compiler errors

1964
01:55:42,260 --> 01:55:44,599
here and they're going to be hard to

1965
01:55:43,908 --> 01:55:57,288
track down

1966
01:55:44,599 --> 01:56:00,369
let me cardigan fur and okay so what are

1967
01:55:57,288 --> 01:56:03,380
you talking about undeclared in fire n

1968
01:56:00,368 --> 01:56:08,658
well I agree with you it turns out

1969
01:56:03,380 --> 01:56:11,139
there's not a lot of n there let's try

1970
01:56:08,658 --> 01:56:11,138
that one more time

1971
01:56:21,198 --> 01:56:34,629
I'm comparing in firelight and that is

1972
01:56:31,760 --> 01:56:34,630
the typo as well

1973
01:56:40,729 --> 01:56:55,139
what's next mmm okay that's not very

1974
01:56:47,189 --> 01:56:59,069
helpful let's go ahead and continue

1975
01:56:55,140 --> 01:57:07,560
stepping through there and see if we can

1976
01:56:59,069 --> 01:57:10,229
get the individual validation errors a

1977
01:57:07,560 --> 01:57:15,539
function does not return a value parent

1978
01:57:10,229 --> 01:57:17,599
sample okay that is a very true

1979
01:57:15,539 --> 01:57:17,600
statement

1980
01:57:17,819 --> 01:57:21,769
under present for a fragmovie

1981
01:57:23,060 --> 01:57:26,149
[Applause]

1982
01:57:33,229 --> 01:57:40,979
this is true I did not put in my smooth

1983
01:57:37,170 --> 01:57:42,090
I guess I must have accidentally deleted

1984
01:57:40,979 --> 01:57:45,149
that when I was deleting the other

1985
01:57:42,090 --> 01:57:50,119
things this is a smooth in Veck to frag

1986
01:57:45,149 --> 01:57:59,969
UV that should be there

1987
01:57:50,119 --> 01:58:03,739
undeclared ref see take care of that all

1988
01:57:59,970 --> 01:58:03,740
right and let's try recompiling

1989
01:58:09,329 --> 01:58:15,579
kanakam cops low-to-high p3 component

1990
01:58:12,850 --> 01:58:17,350
vector of loads that's your early

1991
01:58:15,579 --> 01:58:20,399
function to reconstruct this position

1992
01:58:17,350 --> 01:58:34,600
alright let's take a look at that as

1993
01:58:20,399 --> 01:58:36,849
well correct you are yeah and then

1994
01:58:34,600 --> 01:58:43,810
there's something where we have it where

1995
01:58:36,850 --> 01:58:47,140
we're trying to make a float become a3

1996
01:58:43,810 --> 01:58:49,480
value which should not be happening so

1997
01:58:47,140 --> 01:58:54,460
let's figure out why that's occurring as

1998
01:58:49,479 --> 01:58:57,339
well yeah all right well we're running

1999
01:58:54,460 --> 01:58:59,380
out but running is not particularly

2000
01:58:57,340 --> 01:59:02,680
helpful obviously for a number of

2001
01:58:59,380 --> 01:59:06,970
reasons as you might imagine simply

2002
01:59:02,680 --> 01:59:09,280
running is not going to get us very far

2003
01:59:06,970 --> 01:59:17,260
let's take a look real quick at what

2004
01:59:09,279 --> 01:59:18,699
these ended up being so there's our

2005
01:59:17,260 --> 01:59:21,940
upward propagation

2006
01:59:18,699 --> 01:59:25,149
these are obviously not changed by the

2007
01:59:21,939 --> 01:59:26,919
downward run so as you'd expect there

2008
01:59:25,149 --> 01:59:31,000
just fine

2009
01:59:26,920 --> 01:59:33,760
these on the other hand are quite a bit

2010
01:59:31,000 --> 01:59:35,350
different which may be correct or may be

2011
01:59:33,760 --> 01:59:37,300
incorrect we haven't thought about it

2012
01:59:35,350 --> 01:59:39,150
yet I don't have time to do any

2013
01:59:37,300 --> 01:59:41,260
debugging today or to really do anything

2014
01:59:39,149 --> 01:59:43,149
particular with them so we're going to

2015
01:59:41,260 --> 01:59:45,430
have to kind of leave it as it is but

2016
01:59:43,149 --> 01:59:47,319
tomorrow we will then be able to

2017
01:59:45,430 --> 01:59:50,610
actually play with the lighting transfer

2018
01:59:47,319 --> 01:59:54,849
and see if we can get some sort of

2019
01:59:50,609 --> 01:59:59,460
crappy version of that working at by the

2020
01:59:54,850 --> 01:59:59,460
end of the day let's go ahead and do QA

2021
02:00:01,649 --> 02:00:04,829
there we go

2022
02:00:07,380 --> 02:00:15,420
oh and yeah I did forget to do these

2023
02:00:10,680 --> 02:00:17,630
have to get replaced with left right fix

2024
02:00:15,420 --> 02:00:17,630
that

2025
02:00:20,180 --> 02:00:30,130
[Applause]

2026
02:00:49,520 --> 02:00:52,879
[Applause]

2027
02:00:59,920 --> 02:01:09,819
just used have you seen the doom 2016

2028
02:01:02,930 --> 02:01:18,619
rendering paper I saw the slide

2029
02:01:09,819 --> 02:01:31,939
presentation on it but I have not seen

2030
02:01:18,619 --> 02:01:39,430
uh I haven't up in my downline ah thank

2031
02:01:31,939 --> 02:01:43,250
you I saw the slide presentation that

2032
02:01:39,430 --> 02:01:45,789
Iago Sousa gave on it if that's what

2033
02:01:43,250 --> 02:01:45,789
you're talking about

2034
02:01:59,250 --> 02:02:04,140
let me see here Oh Oh just use this

2035
02:02:01,500 --> 02:02:06,239
isn't a paper on it this is the dude who

2036
02:02:04,140 --> 02:02:10,230
does the like reverse engineering the

2037
02:02:06,239 --> 02:02:14,399
rendering process from taking the GL

2038
02:02:10,229 --> 02:02:18,299
snapshots yes I have seen it I love this

2039
02:02:14,399 --> 02:02:20,849
disguised stuff where he just like looks

2040
02:02:18,300 --> 02:02:28,890
at each of the frame captures he's got

2041
02:02:20,850 --> 02:02:31,490
one on GTA as well that's good if you

2042
02:02:28,890 --> 02:02:31,490
haven't seen it

2043
02:02:47,409 --> 02:02:51,649
the lead tech I'm on day 18 and I'm

2044
02:02:50,270 --> 02:02:53,060
looking at the scene for the first time

2045
02:02:51,649 --> 02:02:54,859
and I'm wondering what happened I have

2046
02:02:53,060 --> 02:02:57,610
these sweet colorful gradients and sound

2047
02:02:54,859 --> 02:02:59,809
and all you have is two round circles

2048
02:02:57,609 --> 02:03:01,519
well we were playing around with

2049
02:02:59,810 --> 02:03:10,520
lighting if you want to see where we're

2050
02:03:01,520 --> 02:03:12,920
actually at we can turn off that debug

2051
02:03:10,520 --> 02:03:17,180
render and and draw actually where we

2052
02:03:12,920 --> 02:03:21,319
were at which is say that we're quite a

2053
02:03:17,180 --> 02:03:24,079
bit further along in terms of of text

2054
02:03:21,319 --> 02:03:26,719
stuff but we wanted to do some light

2055
02:03:24,079 --> 02:03:34,519
propagation work so what we're looking

2056
02:03:26,719 --> 02:03:35,779
at right now is just the the reason

2057
02:03:34,520 --> 02:03:37,640
we're looking at some dots on the screen

2058
02:03:35,779 --> 02:03:39,979
is because we wanted to play around with

2059
02:03:37,640 --> 02:03:41,480
some light propagation stuff so we're

2060
02:03:39,979 --> 02:03:45,339
just drawing those light propagation

2061
02:03:41,479 --> 02:03:45,339
textures that make sense

2062
02:04:18,109 --> 02:04:21,109
um

2063
02:04:27,640 --> 02:04:31,610
like 93 do you usually do a lot of

2064
02:04:30,140 --> 02:04:33,470
programming before you run like you did

2065
02:04:31,609 --> 02:04:35,059
today or you program a bit and then run

2066
02:04:33,470 --> 02:04:36,650
into bug is because you knew what you

2067
02:04:35,060 --> 02:04:38,690
were doing that you take big terms to

2068
02:04:36,649 --> 02:04:42,920
programming then run well I run the

2069
02:04:38,689 --> 02:04:44,479
program anytime I can but sometimes

2070
02:04:42,920 --> 02:04:47,180
you're doing stuff where you can't run

2071
02:04:44,479 --> 02:04:49,159
it to get any meaningful output right so

2072
02:04:47,180 --> 02:04:50,750
sometimes you might program for several

2073
02:04:49,159 --> 02:04:53,470
days without being able to run the

2074
02:04:50,750 --> 02:04:55,909
program because we're doing so much

2075
02:04:53,470 --> 02:04:59,810
stuff that has to get into place before

2076
02:04:55,909 --> 02:05:03,739
anything can happen so I guess what I

2077
02:04:59,810 --> 02:05:05,300
would say is I like to run the program I

2078
02:05:03,739 --> 02:05:12,979
mean it's always useful information to

2079
02:05:05,300 --> 02:05:17,000
run the program but yeah I just don't

2080
02:05:12,979 --> 02:05:20,449
think that you're always in a position

2081
02:05:17,000 --> 02:05:22,460
to sometimes it helps if you're trying

2082
02:05:20,449 --> 02:05:24,590
to get through something if it would

2083
02:05:22,460 --> 02:05:26,090
take a long time to program and without

2084
02:05:24,590 --> 02:05:28,039
running you can try to come up with

2085
02:05:26,090 --> 02:05:30,409
interim things it's good to come up with

2086
02:05:28,039 --> 02:05:32,239
like fake ways to run the program like

2087
02:05:30,409 --> 02:05:34,039
oh I could just sort of stub this out

2088
02:05:32,239 --> 02:05:35,479
and you see me do that so much times the

2089
02:05:34,039 --> 02:05:37,039
lighting you could have imagined this

2090
02:05:35,479 --> 02:05:38,629
doing this a very different way we could

2091
02:05:37,039 --> 02:05:40,189
have tried to write an entire lighting

2092
02:05:38,630 --> 02:05:43,069
propagation system without ever running

2093
02:05:40,189 --> 02:05:44,449
it and then running it right but we

2094
02:05:43,069 --> 02:05:47,750
haven't been doing that right we've been

2095
02:05:44,449 --> 02:05:50,210
drawing these little tiny steps along

2096
02:05:47,750 --> 02:05:52,699
the way and that is intentional because

2097
02:05:50,210 --> 02:05:54,770
that allows us to check the state of the

2098
02:05:52,699 --> 02:05:57,050
system much more frequently rather than

2099
02:05:54,770 --> 02:05:58,550
just doing the whole thing running it

2100
02:05:57,050 --> 02:06:00,170
it's not working and having to go back

2101
02:05:58,550 --> 02:06:04,699
and look at each component separately

2102
02:06:00,170 --> 02:06:05,630
right try running now that we fixed the

2103
02:06:04,699 --> 02:06:07,489
stupid error in the shader

2104
02:06:05,630 --> 02:06:08,779
well it's but I don't think it's really

2105
02:06:07,489 --> 02:06:10,519
gonna do anything differently I mean we

2106
02:06:08,779 --> 02:06:14,119
aren't propagating light at the moment

2107
02:06:10,520 --> 02:06:19,810
right we're we're just you know we're

2108
02:06:14,119 --> 02:06:19,809
we're just adding values together so

2109
02:06:40,979 --> 02:06:44,420
um let's see

2110
02:06:46,760 --> 02:06:52,440
sexy rage how long do you think this

2111
02:06:48,840 --> 02:06:55,170
projects gonna take I don't know since

2112
02:06:52,439 --> 02:07:02,208
it's it's a teaching stream it really

2113
02:06:55,170 --> 02:07:02,208
it's hard to guess as long as it takes

2114
02:07:02,300 --> 02:07:07,920
slag my name new here started this path

2115
02:07:06,238 --> 02:07:10,018
before if you were working on this on

2116
02:07:07,920 --> 02:07:14,399
your own time how long do you think it

2117
02:07:10,019 --> 02:07:16,440
would take you to complete well you know

2118
02:07:14,399 --> 02:07:19,529
I mean you can Ballpark it just you know

2119
02:07:16,439 --> 02:07:24,448
the upper bound right because the upper

2120
02:07:19,529 --> 02:07:27,988
bound is going to just be the total time

2121
02:07:24,448 --> 02:07:30,888
we spent on stream compressed so right

2122
02:07:27,988 --> 02:07:35,009
now we spent something like I don't know

2123
02:07:30,889 --> 02:07:37,050
450 hours so you know I mean I don't

2124
02:07:35,010 --> 02:07:39,300
know how much you want to program a day

2125
02:07:37,050 --> 02:07:40,860
I would say 6 hours a day is a good

2126
02:07:39,300 --> 02:07:45,840
amount of programming to generally do so

2127
02:07:40,859 --> 02:07:47,399
75 days if you if you assume that you

2128
02:07:45,840 --> 02:07:51,809
were working five days a week it's about

2129
02:07:47,399 --> 02:07:53,458
15 weeks he's done so far it would

2130
02:07:51,809 --> 02:07:56,159
probably go a lot faster if I was

2131
02:07:53,458 --> 02:07:58,979
programming on my own though like it's

2132
02:07:56,158 --> 02:08:00,929
probably more like 10 weeks or less

2133
02:07:58,979 --> 02:08:02,309
because if I was working myself I

2134
02:08:00,929 --> 02:08:04,229
wouldn't have to be talking explaining

2135
02:08:02,309 --> 02:08:05,639
stuff all the time and I mean we spend

2136
02:08:04,229 --> 02:08:07,650
huge amounts of time on the blackboard

2137
02:08:05,639 --> 02:08:09,538
talking about stuff and some of that

2138
02:08:07,649 --> 02:08:10,768
stuff I would still do because I'd have

2139
02:08:09,538 --> 02:08:11,939
to work it out in a notebook if it was

2140
02:08:10,769 --> 02:08:15,708
that content but most of it's just

2141
02:08:11,939 --> 02:08:15,708
explanatory and that all goes away

2142
02:08:50,099 --> 02:08:59,918
do you think that game engines have a

2143
02:08:52,689 --> 02:09:01,659
place or is it just pure evil I'm not

2144
02:08:59,918 --> 02:09:04,179
sure I understand the question I mean

2145
02:09:01,658 --> 02:09:07,868
how can you have a game without a game

2146
02:09:04,179 --> 02:09:10,199
engine every game in a sense has an

2147
02:09:07,868 --> 02:09:13,958
engine or do you just mean with the

2148
02:09:10,198 --> 02:09:16,448
reusing the engine like like something

2149
02:09:13,958 --> 02:09:18,158
isn't an engineer this gets reused did

2150
02:09:16,448 --> 02:09:24,428
you just mean the concept of reusing the

2151
02:09:18,158 --> 02:09:28,168
the code for like the the core code of

2152
02:09:24,429 --> 02:09:30,248
the game from one game in another game I

2153
02:09:28,168 --> 02:09:31,868
guess I'm just not sure where you're

2154
02:09:30,248 --> 02:09:34,238
asking because the game you know every

2155
02:09:31,868 --> 02:09:37,208
game essentially runs on an engine which

2156
02:09:34,238 --> 02:09:39,428
is the code necessary to do all the work

2157
02:09:37,208 --> 02:09:43,050
that isn't specifically gameplay code is

2158
02:09:39,429 --> 02:09:45,399
typically how that's defined so I

2159
02:09:43,050 --> 02:09:54,329
they're definitely not pure evil because

2160
02:09:45,399 --> 02:09:54,328
there's no I mean what's the alternative

2161
02:10:22,479 --> 02:10:26,859
do you have any good practice to keep

2162
02:10:24,850 --> 02:10:32,050
your brain motivated after months and

2163
02:10:26,859 --> 02:10:34,329
months of programming I don't really

2164
02:10:32,050 --> 02:10:36,369
ever have a problem being motivated to

2165
02:10:34,329 --> 02:10:38,109
program for whatever reason like I

2166
02:10:36,369 --> 02:10:44,529
really like programming so I always want

2167
02:10:38,109 --> 02:10:48,420
a program I would say the hard thing the

2168
02:10:44,529 --> 02:10:48,420
more difficult thing for me is usually

2169
02:10:48,539 --> 02:10:54,369
well it is really just keeping myself

2170
02:10:51,220 --> 02:10:57,940
programming something specific and that

2171
02:10:54,369 --> 02:11:00,819
makes money right if left to my own

2172
02:10:57,939 --> 02:11:03,179
devices I just program all day and I

2173
02:11:00,819 --> 02:11:06,399
wouldn't necessarily ever ship anything

2174
02:11:03,180 --> 02:11:08,320
or I might ship something but it

2175
02:11:06,399 --> 02:11:17,909
wouldn't be something that makes money

2176
02:11:08,319 --> 02:11:20,559
like you know I might ship utilities or

2177
02:11:17,909 --> 02:11:24,750
ship a new operating system or something

2178
02:11:20,560 --> 02:11:26,650
and you know that is completely

2179
02:11:24,750 --> 02:11:33,369
something that can't make any money

2180
02:11:26,649 --> 02:11:37,229
right so I guess I would say the only

2181
02:11:33,369 --> 02:11:40,090
part that I find hard is defining a

2182
02:11:37,229 --> 02:11:42,399
programming scope that is something that

2183
02:11:40,090 --> 02:11:47,800
when done will make money so that you

2184
02:11:42,399 --> 02:11:49,359
can keep living and programming forcing

2185
02:11:47,800 --> 02:11:53,440
yourself to always be working towards

2186
02:11:49,359 --> 02:12:01,500
that goal and I don't have a lot of good

2187
02:11:53,439 --> 02:12:03,879
solutions for that it's hard you know

2188
02:12:01,500 --> 02:12:05,409
but in terms of keeping programming I've

2189
02:12:03,880 --> 02:12:09,100
never had a problem I always want a

2190
02:12:05,409 --> 02:12:12,630
program like every day I do it and I've

2191
02:12:09,100 --> 02:12:12,630
never had to convince myself to do it

2192
02:12:25,569 --> 02:12:31,729
sharra luck 93 if we feed you sandwiches

2193
02:12:28,640 --> 02:12:33,020
and keep you alive would you work what

2194
02:12:31,729 --> 02:12:33,799
would you work on for the rest of your

2195
02:12:33,020 --> 02:12:36,290
life

2196
02:12:33,800 --> 02:12:39,529
well what I'm working on at Molly right

2197
02:12:36,289 --> 02:12:44,569
now is is pretty much what I would want

2198
02:12:39,529 --> 02:12:48,979
to do right if Molly survives as a

2199
02:12:44,569 --> 02:12:51,979
company then I will be pretty much set

2200
02:12:48,979 --> 02:12:56,539
because that's what I want to do we make

2201
02:12:51,979 --> 02:13:00,189
all our own stuff in-house and it's

2202
02:12:56,539 --> 02:13:00,189
stuff that I think needs doing

2203
02:13:26,359 --> 02:13:31,710
well it's offering to that's very

2204
02:13:28,170 --> 02:13:38,569
generous of you but we're not at that

2205
02:13:31,710 --> 02:13:43,199
point quite yet so I think we're good on

2206
02:13:38,569 --> 02:13:45,630
financing until we ship 1935 and then if

2207
02:13:43,199 --> 02:13:48,119
1935 is successful I think we're good

2208
02:13:45,630 --> 02:13:51,060
if it's not successful then we'll have

2209
02:13:48,119 --> 02:13:59,250
to think about what to do as a back-up

2210
02:13:51,060 --> 02:14:03,690
plan right so we may may come with our

2211
02:13:59,250 --> 02:14:05,340
hand out in exactly such a fashion at

2212
02:14:03,689 --> 02:14:12,229
that point at the moment where we're

2213
02:14:05,340 --> 02:14:12,230
okay but I do appreciate the concern

2214
02:14:24,720 --> 02:14:28,260
have you found the need to write certain

2215
02:14:26,609 --> 02:14:36,179
algorithms directly in assembly for

2216
02:14:28,260 --> 02:14:38,220
performance reasons no I haven't but

2217
02:14:36,180 --> 02:14:41,460
that's only because my interests tend to

2218
02:14:38,220 --> 02:14:45,199
be much broader so I tend to write large

2219
02:14:41,460 --> 02:14:48,510
systems that are very intricate and

2220
02:14:45,199 --> 02:14:53,250
that's my focus area I am NOT the kind

2221
02:14:48,510 --> 02:14:55,199
of person who tends to focus on bringing

2222
02:14:53,250 --> 02:14:57,840
the maximum performance out of a

2223
02:14:55,199 --> 02:15:00,050
particular piece of code that's like

2224
02:14:57,840 --> 02:15:02,659
what rad game tools does for example and

2225
02:15:00,050 --> 02:15:04,800
I can tell you they definitely have

2226
02:15:02,659 --> 02:15:08,369
written things directly an assembly for

2227
02:15:04,800 --> 02:15:10,470
performance reasons because they often

2228
02:15:08,369 --> 02:15:11,849
hit times when they know they can do

2229
02:15:10,470 --> 02:15:15,990
something better than what the compiler

2230
02:15:11,850 --> 02:15:20,070
is outputting with say in the intrinsic

2231
02:15:15,989 --> 02:15:22,380
and they will have to drop to assembly

2232
02:15:20,069 --> 02:15:24,059
to get it to do those things because

2233
02:15:22,380 --> 02:15:25,949
they just can't get the compiler to

2234
02:15:24,060 --> 02:15:29,640
output the right string of code or

2235
02:15:25,949 --> 02:15:31,319
whatever right and I have had that

2236
02:15:29,640 --> 02:15:33,630
situation when I was working at rad I

2237
02:15:31,319 --> 02:15:36,149
did at that situation I did do assembly

2238
02:15:33,630 --> 02:15:41,640
language optimization for some stuff on

2239
02:15:36,149 --> 02:15:44,369
the Xbox 360 for example but that was

2240
02:15:41,640 --> 02:15:45,570
the only time I really did it and that's

2241
02:15:44,369 --> 02:15:47,760
also one of the reasons that my

2242
02:15:45,569 --> 02:15:49,799
optimization knowledge for extra c4

2243
02:15:47,760 --> 02:15:52,260
isn't great is because like my

2244
02:15:49,800 --> 02:15:56,300
optimization knowledge for 360 was very

2245
02:15:52,260 --> 02:16:03,360
good like I beat the their compiler by

2246
02:15:56,300 --> 02:16:07,260
like I would I think they were twice as

2247
02:16:03,359 --> 02:16:09,089
slow or three times the slow on like

2248
02:16:07,260 --> 02:16:10,590
some filter kernel stuff I had done then

2249
02:16:09,090 --> 02:16:14,150
the assembly language that I ended up

2250
02:16:10,590 --> 02:16:18,779
generating I had like a metropolis

2251
02:16:14,149 --> 02:16:20,099
optimizer thing I wrote and that thing

2252
02:16:18,779 --> 02:16:21,659
was pretty cool so I had a lot of

2253
02:16:20,100 --> 02:16:24,690
understanding of how to optimize that

2254
02:16:21,659 --> 02:16:25,920
machine but I don't have a lot of

2255
02:16:24,689 --> 02:16:28,319
understanding of how to optimize like

2256
02:16:25,920 --> 02:16:30,449
the x64 because I just haven't done it

2257
02:16:28,319 --> 02:16:31,920
so like I have a vague recollection I

2258
02:16:30,449 --> 02:16:33,539
mean like when we did on this dream like

2259
02:16:31,920 --> 02:16:34,309
someone had to tell me about IACA I

2260
02:16:33,540 --> 02:16:38,390
didn't even know they

2261
02:16:34,309 --> 02:16:38,841
that such a thing and looking at how it

2262
02:16:38,389 --> 02:16:40,099
worked

2263
02:16:38,841 --> 02:16:42,381
took me a while to understand exactly

2264
02:16:40,100 --> 02:16:44,270
how the x64 port stuff worked and that

2265
02:16:42,380 --> 02:16:50,630
sort of thing so I just don't have a lot

2266
02:16:44,270 --> 02:16:53,239
of experience with that and and so you

2267
02:16:50,630 --> 02:16:56,059
know I I would have to be more

2268
02:16:53,239 --> 02:16:58,190
experienced to begin with in order to

2269
02:16:56,059 --> 02:16:59,569
get to the point where I felt like I

2270
02:16:58,190 --> 02:17:04,149
needed to take control away from the

2271
02:16:59,569 --> 02:17:04,149
compiler and go to assembly for x64

2272
02:17:46,629 --> 02:17:50,049
so the risk any word on getting other

2273
02:17:48,579 --> 02:17:54,218
programs to work on some code on

2274
02:17:50,049 --> 02:17:56,289
handmade hero Shawn I'm assuming based

2275
02:17:54,218 --> 02:18:06,579
on the spelling of Shawn there you're

2276
02:17:56,290 --> 02:18:07,779
talking about I not Shawn Barrett but

2277
02:18:06,579 --> 02:18:10,658
maybe you are talking about Tom Barrett

2278
02:18:07,779 --> 02:18:16,329
for graphics which Shawn are you talking

2279
02:18:10,658 --> 02:18:17,618
about anyway we said adult our Edition

2280
02:18:16,329 --> 02:18:20,158
which I guess could be either Shawn

2281
02:18:17,619 --> 02:18:22,929
because I think they did that together

2282
02:18:20,158 --> 02:18:24,968
for graphics Fabien prepetition John for

2283
02:18:22,929 --> 02:18:26,260
game design Shawn to dance oh you had

2284
02:18:24,968 --> 02:18:30,518
the other sign in there as well to dance

2285
02:18:26,260 --> 02:18:37,119
and party does Shawn Barrett dance and

2286
02:18:30,519 --> 02:18:42,189
party a lot that is news to me if that

2287
02:18:37,119 --> 02:18:46,389
is true I know he drums he plays the

2288
02:18:42,189 --> 02:18:48,670
drums I don't know that he dances he

2289
02:18:46,388 --> 02:18:51,728
could play the drums so other people

2290
02:18:48,670 --> 02:18:54,099
could dance although I know he liked odd

2291
02:18:51,728 --> 02:18:58,329
time signatures so it might be hard to

2292
02:18:54,099 --> 02:19:01,389
dance - Shawn strumming but I don't know

2293
02:18:58,329 --> 02:19:03,789
as to the actual Grothman of the

2294
02:19:01,388 --> 02:19:04,658
question there or I guess I shouldn't

2295
02:19:03,790 --> 02:19:09,519
say gravamen because you're not

2296
02:19:04,658 --> 02:19:12,789
complaining um but the heart of the

2297
02:19:09,519 --> 02:19:15,689
question let's say I don't know whether

2298
02:19:12,790 --> 02:19:19,449
people want to work on the code or not I

2299
02:19:15,689 --> 02:19:21,250
feel like in general that sort of thing

2300
02:19:19,449 --> 02:19:24,130
would probably be more comfortable for

2301
02:19:21,250 --> 02:19:25,568
other programmers to give me something I

2302
02:19:24,129 --> 02:19:30,638
could use

2303
02:19:25,568 --> 02:19:35,679
so for example if I ask you know Fabien

2304
02:19:30,638 --> 02:19:39,368
or something to give us a compressor we

2305
02:19:35,679 --> 02:19:40,238
could use to compress our art pack file

2306
02:19:39,369 --> 02:19:43,929
or something right

2307
02:19:40,238 --> 02:19:45,579
and he streamed development of that

2308
02:19:43,929 --> 02:19:47,949
compressor that might be a more

2309
02:19:45,579 --> 02:19:49,959
comfortable thing for someone to do then

2310
02:19:47,949 --> 02:19:52,600
here's a code base that's not your code

2311
02:19:49,959 --> 02:19:54,579
base and now you have to work on it all

2312
02:19:52,600 --> 02:19:59,640
of a sudden on stream while talking

2313
02:19:54,579 --> 02:20:02,890
right just seems kind of

2314
02:19:59,640 --> 02:20:05,709
like a big app you know one of the

2315
02:20:02,890 --> 02:20:07,479
reasons I'm able to do handmade hero and

2316
02:20:05,709 --> 02:20:10,300
explain it as I'm going is because I'm

2317
02:20:07,479 --> 02:20:11,680
doing all stuff the way I do it and the

2318
02:20:10,300 --> 02:20:13,510
code is all familiar to me because I

2319
02:20:11,681 --> 02:20:14,920
wrote it all right and that makes it a

2320
02:20:13,511 --> 02:20:16,511
lot easier if you're sitting here

2321
02:20:14,920 --> 02:20:19,420
reading the code trying to figure out

2322
02:20:16,511 --> 02:20:22,390
how something works all the time because

2323
02:20:19,420 --> 02:20:26,170
it's not your code and you don't you

2324
02:20:22,390 --> 02:20:31,029
know recognize it that's you know I feel

2325
02:20:26,170 --> 02:20:33,310
like that's pretty tough right I'm

2326
02:20:31,030 --> 02:20:35,681
probably not much fun because the other

2327
02:20:33,310 --> 02:20:37,479
thing right you can reading other

2328
02:20:35,681 --> 02:20:39,460
people's code is usually not not much

2329
02:20:37,479 --> 02:20:43,090
fun you do it because you have to to

2330
02:20:39,459 --> 02:20:44,439
learn from it or to modify it but it's

2331
02:20:43,090 --> 02:20:46,590
not the fun part of the problem

2332
02:20:44,440 --> 02:20:46,590
obviously

2333
02:21:04,760 --> 02:21:10,370
so you know stuff about 360 hardware how

2334
02:21:08,699 --> 02:21:13,439
much of a problem was in order execution

2335
02:21:10,370 --> 02:21:15,149
did that cause performance problems do

2336
02:21:13,439 --> 02:21:16,889
you view out of order execution as the

2337
02:21:15,148 --> 02:21:19,139
performance convenience it claims to be

2338
02:21:16,889 --> 02:21:33,299
at least with respect to instruction

2339
02:21:19,139 --> 02:21:38,039
level parallelism so I guess what I

2340
02:21:33,299 --> 02:21:43,948
would say about that is that it really

2341
02:21:38,040 --> 02:21:48,439
depends I would say that out of order

2342
02:21:43,949 --> 02:21:52,529
execution and in order execution are not

2343
02:21:48,439 --> 02:21:55,920
there is not a strict one of the two

2344
02:21:52,529 --> 02:21:57,420
that is better and the reason that

2345
02:21:55,920 --> 02:22:00,420
there's not a strict one of the two

2346
02:21:57,420 --> 02:22:02,579
that's better is because it very much

2347
02:22:00,420 --> 02:22:06,059
depends on what kind of code you're

2348
02:22:02,579 --> 02:22:08,068
running so if you are running code that

2349
02:22:06,059 --> 02:22:10,590
you understand very well and have

2350
02:22:08,068 --> 02:22:13,500
optimized very carefully and which works

2351
02:22:10,590 --> 02:22:21,329
on very predictable workloads so for

2352
02:22:13,500 --> 02:22:24,059
example shader code in the earlier days

2353
02:22:21,329 --> 02:22:26,219
when it was kind of rote sampling from

2354
02:22:24,059 --> 02:22:32,159
textures and writing to frame buffers in

2355
02:22:26,219 --> 02:22:36,329
a very understood way that is something

2356
02:22:32,159 --> 02:22:38,459
that is very easy to do as an inorder

2357
02:22:36,329 --> 02:22:40,529
execution model because there's almost

2358
02:22:38,459 --> 02:22:43,889
never a mystery as to where the memory

2359
02:22:40,529 --> 02:22:48,300
bubble is right you always know when

2360
02:22:43,889 --> 02:22:51,448
you're going to stall because you know

2361
02:22:48,299 --> 02:22:53,099
exactly where your fetches are and you

2362
02:22:51,449 --> 02:22:59,130
know exactly how long they're probably

2363
02:22:53,100 --> 02:23:01,350
going to take in most cases so in

2364
02:22:59,129 --> 02:23:03,929
circumstances where you have workloads

2365
02:23:01,350 --> 02:23:06,960
like that out of order execution is

2366
02:23:03,930 --> 02:23:08,609
strictly a waste of course base you

2367
02:23:06,959 --> 02:23:11,429
should have just stamped down more in

2368
02:23:08,609 --> 02:23:12,779
order cores if you can because out of

2369
02:23:11,430 --> 02:23:16,271
order cores are typically much more

2370
02:23:12,779 --> 02:23:18,489
complicated however

2371
02:23:16,271 --> 02:23:20,380
if instead you start looking at more

2372
02:23:18,489 --> 02:23:22,140
modern graphics workloads that involve

2373
02:23:20,379 --> 02:23:24,640
things like ray tracing and

2374
02:23:22,140 --> 02:23:26,440
unpredictable kinds of queries into the

2375
02:23:24,640 --> 02:23:28,119
memory space that are very difficult to

2376
02:23:26,440 --> 02:23:31,739
know whether something is going to

2377
02:23:28,120 --> 02:23:34,601
complete in 16 cycles or 300 cycles

2378
02:23:31,739 --> 02:23:36,729
suddenly out of order execution may

2379
02:23:34,601 --> 02:23:39,221
become a little bit more attractive

2380
02:23:36,729 --> 02:23:42,670
right because you might not be able to

2381
02:23:39,220 --> 02:23:44,890
really figure out exactly how the memory

2382
02:23:42,670 --> 02:23:49,260
bubbles are going to line up and it may

2383
02:23:44,890 --> 02:23:51,729
be that dynamic arrangement of code

2384
02:23:49,260 --> 02:23:54,370
execution is the only way to get around

2385
02:23:51,729 --> 02:23:55,600
that now that becomes even more true

2386
02:23:54,370 --> 02:23:58,420
when you start talking about things like

2387
02:23:55,601 --> 02:24:00,310
AI code and game code where we're

2388
02:23:58,420 --> 02:24:03,101
walking arbitrary structures in no

2389
02:24:00,310 --> 02:24:07,119
particular way who knows what's going on

2390
02:24:03,101 --> 02:24:10,090
right and it's very hard to predict when

2391
02:24:07,120 --> 02:24:11,110
you're going to hit a memory stall but

2392
02:24:10,090 --> 02:24:15,431
you know there's going to be a lot of

2393
02:24:11,110 --> 02:24:18,641
them again out of order execution may

2394
02:24:15,431 --> 02:24:22,649
really be a win there so I would say

2395
02:24:18,640 --> 02:24:25,600
it's very difficult to really predict

2396
02:24:22,649 --> 02:24:29,010
whether in order execution or out of

2397
02:24:25,601 --> 02:24:32,351
order execution is better for a CPU

2398
02:24:29,010 --> 02:24:35,920
without really being able to test it on

2399
02:24:32,351 --> 02:24:39,760
the workloads you want to run I think

2400
02:24:35,920 --> 02:24:41,979
that's why you see you know a console

2401
02:24:39,760 --> 02:24:47,351
can get away with in order execution and

2402
02:24:41,979 --> 02:24:51,699
a PC can't because a PC is running such

2403
02:24:47,351 --> 02:24:54,190
varied workloads and if a moving target

2404
02:24:51,700 --> 02:24:57,750
that changes over time as the processor

2405
02:24:54,190 --> 02:25:02,620
evolves asking programmers to optimize

2406
02:24:57,750 --> 02:25:04,329
memory bubbles to a moving target like

2407
02:25:02,620 --> 02:25:06,311
that I think is just going to fail and

2408
02:25:04,329 --> 02:25:08,530
so I think that's why out of order

2409
02:25:06,310 --> 02:25:13,260
execution makes sense on the PC because

2410
02:25:08,530 --> 02:25:17,530
it has to be there in order for the

2411
02:25:13,260 --> 02:25:20,351
ecosystem to work even if in isolation

2412
02:25:17,530 --> 02:25:21,931
if you just took one SKU of the chip it

2413
02:25:20,351 --> 02:25:26,110
might not make sense

2414
02:25:21,931 --> 02:25:27,460
if everyone could and all the compilers

2415
02:25:26,110 --> 02:25:29,960
and all the programmers could optimize

2416
02:25:27,459 --> 02:25:31,669
just to that one

2417
02:25:29,959 --> 02:25:34,579
ship and know that that was the only

2418
02:25:31,670 --> 02:25:36,290
chip then you know in order might

2419
02:25:34,579 --> 02:25:41,899
suddenly be okay or something like that

2420
02:25:36,290 --> 02:25:44,900
right so my my statement on that is just

2421
02:25:41,899 --> 02:25:46,670
that in order isn't that big of a deal

2422
02:25:44,899 --> 02:25:48,649
in my experience to work around if

2423
02:25:46,670 --> 02:25:50,989
you're talking about looking at a

2424
02:25:48,649 --> 02:25:53,719
specific workload optimizing to that

2425
02:25:50,989 --> 02:25:57,020
specific workload and the workload is

2426
02:25:53,719 --> 02:25:59,349
somewhat predictable and you only have

2427
02:25:57,020 --> 02:26:04,909
one chip suddenly it's pretty plausible

2428
02:25:59,350 --> 02:26:08,420
when you look at the broader case it

2429
02:26:04,909 --> 02:26:11,270
just becomes a lot less a lot less

2430
02:26:08,420 --> 02:26:13,430
tractable to do that and still get high

2431
02:26:11,270 --> 02:26:16,479
performance out of the chip if you don't

2432
02:26:13,430 --> 02:26:16,479
have those things

2433
02:26:44,748 --> 02:26:53,059
and I think so I think that's basically

2434
02:26:46,699 --> 02:26:53,630
all I had to say about 360 hardware what

2435
02:26:53,059 --> 02:26:56,328
I mean

2436
02:26:53,629 --> 02:27:03,318
the thing about the PowerPC at that time

2437
02:26:56,328 --> 02:27:09,219
was it also had the load hit store

2438
02:27:03,318 --> 02:27:09,219
penalty which is a real pain in the butt

2439
02:27:10,420 --> 02:27:16,789
so you had to be really careful with the

2440
02:27:15,020 --> 02:27:25,310
way things got written read and written

2441
02:27:16,789 --> 02:27:30,159
I would say if anything the load hit

2442
02:27:25,309 --> 02:27:30,158
store penalty was the much worse calm

2443
02:27:31,719 --> 02:27:42,198
much risk problem with that chip then in

2444
02:27:35,359 --> 02:27:46,578
order execution was because the loaded

2445
02:27:42,199 --> 02:27:50,569
store penalty was a lot like in order

2446
02:27:46,578 --> 02:27:53,629
execution in the sense that load hit

2447
02:27:50,568 --> 02:27:56,600
store panel T is easy to avoid if you

2448
02:27:53,629 --> 02:27:58,309
know specifically what workload you're

2449
02:27:56,600 --> 02:28:01,369
doing and the code that you're working

2450
02:27:58,309 --> 02:28:04,269
on but once you start talking about

2451
02:28:01,369 --> 02:28:07,010
things that operate like cross function

2452
02:28:04,270 --> 02:28:11,029
all of a sudden load hit store becomes a

2453
02:28:07,010 --> 02:28:14,328
lot harder to avoid because load hits

2454
02:28:11,029 --> 02:28:16,670
start penalties inside a particular

2455
02:28:14,328 --> 02:28:21,889
function you can analyze explicitly and

2456
02:28:16,670 --> 02:28:23,869
you can go okay I know that I once I

2457
02:28:21,889 --> 02:28:25,608
store to something I can't ever load

2458
02:28:23,869 --> 02:28:27,078
from that thing again until I can't

2459
02:28:25,609 --> 02:28:30,408
remember it was like 40 cycles or

2460
02:28:27,078 --> 02:28:33,619
something like this so I know that I

2461
02:28:30,408 --> 02:28:35,180
just need to go look at the cycle does

2462
02:28:33,619 --> 02:28:36,380
nice thing about in order execution is

2463
02:28:35,180 --> 02:28:39,260
the cycle counts are perfectly

2464
02:28:36,379 --> 02:28:41,748
predictable so you can look through the

2465
02:28:39,260 --> 02:28:44,119
assembly code and know exactly how many

2466
02:28:41,748 --> 02:28:46,578
cycles you have until you could load

2467
02:28:44,119 --> 02:28:48,350
from that address again so that's really

2468
02:28:46,578 --> 02:28:50,208
easy to avoid inside a particular

2469
02:28:48,350 --> 02:28:52,488
function because you know all the

2470
02:28:50,209 --> 02:28:54,260
parameters and easy is a little bit

2471
02:28:52,488 --> 02:28:55,850
weird because you know well easy it

2472
02:28:54,260 --> 02:28:56,898
could be hard to structure the code in

2473
02:28:55,850 --> 02:28:58,170
the right way to make sure it doesn't

2474
02:28:56,898 --> 02:28:59,549
happen but easy

2475
02:28:58,170 --> 02:29:00,989
in the sense that you know whether it's

2476
02:28:59,549 --> 02:29:02,159
happening or not and you know what you

2477
02:29:00,989 --> 02:29:05,909
need to do to fix it

2478
02:29:02,159 --> 02:29:08,219
however cross-functionally that becomes

2479
02:29:05,909 --> 02:29:10,260
a lot more annoying so now when you talk

2480
02:29:08,219 --> 02:29:13,260
about like a function calling another

2481
02:29:10,260 --> 02:29:14,250
function and you know it's going to call

2482
02:29:13,260 --> 02:29:16,228
for multiple places

2483
02:29:14,250 --> 02:29:19,649
well this function is going to load

2484
02:29:16,228 --> 02:29:21,688
something at the start in order that you

2485
02:29:19,649 --> 02:29:23,250
know from some shared thing a structure

2486
02:29:21,689 --> 02:29:25,170
global structure whatever it's going to

2487
02:29:23,250 --> 02:29:30,059
load something that might have been

2488
02:29:25,170 --> 02:29:31,860
stored by the caller recently inside the

2489
02:29:30,059 --> 02:29:33,299
40 cycle window well now you're going to

2490
02:29:31,860 --> 02:29:35,460
get that load hit store penalty and

2491
02:29:33,299 --> 02:29:36,779
that's much harder to analyze right

2492
02:29:35,459 --> 02:29:41,519
because now you have to look at a call

2493
02:29:36,780 --> 02:29:45,300
graph and you know modern programming

2494
02:29:41,520 --> 02:29:48,630
tools just aren't set up to let you do

2495
02:29:45,299 --> 02:29:50,699
stuff like quickly iterate on what the

2496
02:29:48,629 --> 02:29:52,649
assembly language layout of all the

2497
02:29:50,700 --> 02:29:54,900
things in your code that call each other

2498
02:29:52,649 --> 02:29:56,879
are and look for loaded store penalties

2499
02:29:54,899 --> 02:29:58,978
right like you're talking about really

2500
02:29:56,879 --> 02:30:00,599
special purpose tools for that sort of

2501
02:29:58,978 --> 02:30:06,000
thing to make that convenient that just

2502
02:30:00,600 --> 02:30:07,319
didn't exist and so the law of historic

2503
02:30:06,000 --> 02:30:08,850
penalty I would say was actually

2504
02:30:07,319 --> 02:30:11,039
considerably worse than the inorder

2505
02:30:08,850 --> 02:30:13,079
thing but there's sort of two sides of

2506
02:30:11,040 --> 02:30:14,640
the same thing they're both two stalls

2507
02:30:13,079 --> 02:30:17,069
that can occur than out of order

2508
02:30:14,639 --> 02:30:19,099
processor wouldn't have because when it

2509
02:30:17,069 --> 02:30:21,869
hit that stall it would just switch to

2510
02:30:19,100 --> 02:30:24,050
the next thing it could execute down the

2511
02:30:21,870 --> 02:30:24,050
road

2512
02:30:29,290 --> 02:30:36,500
last question if you have seem decode

2513
02:30:34,489 --> 02:30:39,619
for sse2 but also have the same

2514
02:30:36,500 --> 02:30:42,500
algorithm for a VX 256-bit is there a

2515
02:30:39,620 --> 02:30:43,431
way to run only the avx2 a VX in the

2516
02:30:42,500 --> 02:30:45,739
shipping version if the hardware

2517
02:30:43,431 --> 02:30:55,280
supports it must it be decided compile

2518
02:30:45,739 --> 02:30:58,310
time so the answer is yep there's two

2519
02:30:55,280 --> 02:31:00,530
ways you can do it they're both

2520
02:30:58,310 --> 02:31:05,840
basically the same but one's a little

2521
02:31:00,530 --> 02:31:15,380
more drastic on the other so when you

2522
02:31:05,840 --> 02:31:18,290
start your program you can do a check on

2523
02:31:15,379 --> 02:31:21,140
the CPU type C because they have

2524
02:31:18,290 --> 02:31:23,540
capability flags you can do a check on

2525
02:31:21,140 --> 02:31:26,629
the CPU type to see whether or not it

2526
02:31:23,540 --> 02:31:28,460
supports AV X and then you can set your

2527
02:31:26,629 --> 02:31:30,619
function pointers to point to either the

2528
02:31:28,459 --> 02:31:33,430
SSE two versions of your functions or

2529
02:31:30,620 --> 02:31:37,521
the AV X versions of your functions

2530
02:31:33,431 --> 02:31:38,960
right so you don't have to do it at

2531
02:31:37,521 --> 02:31:40,550
compile time you can compile both

2532
02:31:38,959 --> 02:31:43,759
versions and then just jump to the

2533
02:31:40,549 --> 02:31:45,680
correct version now the other thing you

2534
02:31:43,760 --> 02:31:48,170
can do if you just don't want to deal

2535
02:31:45,681 --> 02:31:50,271
with it at all is you can actually write

2536
02:31:48,170 --> 02:31:51,771
your program in two parts and so

2537
02:31:50,271 --> 02:31:55,070
handmade here is kind of already set up

2538
02:31:51,771 --> 02:31:57,561
this way right so handmade hero when we

2539
02:31:55,069 --> 02:31:59,360
launch the game that's actually a win32

2540
02:31:57,560 --> 02:32:02,090
executable that loads a dll that has the

2541
02:31:59,360 --> 02:32:03,681
game in it so the other what we could do

2542
02:32:02,090 --> 02:32:09,290
very simply on handmade hero right is

2543
02:32:03,681 --> 02:32:13,101
compile the dll in sse2 topology VV dll

2544
02:32:09,290 --> 02:32:14,660
in AV x 256 as you say and then a

2545
02:32:13,101 --> 02:32:17,480
startup we just check in the win32

2546
02:32:14,659 --> 02:32:20,690
executable which one we have and we load

2547
02:32:17,479 --> 02:32:22,879
the corresponding dll and that just lets

2548
02:32:20,690 --> 02:32:25,399
the compiler optimize everything it

2549
02:32:22,879 --> 02:32:27,829
wants to optimize even stuff you didn't

2550
02:32:25,399 --> 02:32:29,090
optimize as it wants to it can in

2551
02:32:27,829 --> 02:32:31,899
depending on your compiler whether it

2552
02:32:29,090 --> 02:32:33,920
supports anything interesting there

2553
02:32:31,899 --> 02:32:37,590
that's a way to just have everything

2554
02:32:33,920 --> 02:32:40,680
compiled sse2 and AVX and then just pick

2555
02:32:37,590 --> 02:32:44,898
run-time so you've got two ways ones

2556
02:32:40,680 --> 02:32:44,898
like fine-grained ones coarser grained

2557
02:32:45,559 --> 02:32:49,500
with the way handmade hero set up I'd

2558
02:32:47,700 --> 02:32:53,250
say just use the latter because then the

2559
02:32:49,500 --> 02:32:55,020
compiler can use avx-512 for example

2560
02:32:53,250 --> 02:32:56,309
even you could have one version for each

2561
02:32:55,020 --> 02:32:57,090
because avx-512 is a really good

2562
02:32:56,309 --> 02:32:59,609
instruction set

2563
02:32:57,090 --> 02:33:01,469
when compilers get better at making

2564
02:32:59,609 --> 02:33:09,680
avx-512 code they could do some really

2565
02:33:01,469 --> 02:33:12,478
great stuff so I would say you know

2566
02:33:09,680 --> 02:33:14,819
that's probably the easiest and best way

2567
02:33:12,478 --> 02:33:21,978
to do it is just make one dll for every

2568
02:33:14,819 --> 02:33:21,978
chip and launch the right one at startup

2569
02:33:37,270 --> 02:33:40,078
all right

2570
02:33:57,709 --> 02:34:05,278
too many windows alright thank you in

2571
02:34:04,078 --> 02:34:06,299
for joining me for another episode of

2572
02:34:05,279 --> 02:34:08,039
hand made he wrote so in pledge

2573
02:34:06,299 --> 02:34:09,648
recording with you as always if you

2574
02:34:08,039 --> 02:34:11,520
would like to follow along the theories

2575
02:34:09,648 --> 02:34:13,590
yourself you can always appear to the

2576
02:34:11,520 --> 02:34:15,270
game on handmade hero org it comes with

2577
02:34:13,590 --> 02:34:17,340
a source code so you can follow along at

2578
02:34:15,270 --> 02:34:19,439
home we also forum site and go to ask

2579
02:34:17,340 --> 02:34:21,029
questions the patreon page you can go to

2580
02:34:19,439 --> 02:34:23,639
if you want support the video series a

2581
02:34:21,029 --> 02:34:25,380
schedule about you can use the tweets to

2582
02:34:23,639 --> 02:34:26,698
schedule out use if you want to catch us

2583
02:34:25,379 --> 02:34:29,309
when we're live that's the way to find

2584
02:34:26,699 --> 02:34:31,949
out and an episode guide that you can

2585
02:34:29,309 --> 02:34:33,600
use to figure out what we've done in the

2586
02:34:31,949 --> 02:34:35,310
past very quickly it has a nice search

2587
02:34:33,600 --> 02:34:37,380
feature now too so you can just drop to

2588
02:34:35,309 --> 02:34:38,969
anywhere that we've talked about a

2589
02:34:37,379 --> 02:34:43,108
particular topic you could jump straight

2590
02:34:38,969 --> 02:34:45,568
to it that's about it I will be back

2591
02:34:43,109 --> 02:34:46,738
here tomorrow I will be back here in 23

2592
02:34:45,568 --> 02:34:50,340
hours and 9 minutes

2593
02:34:46,738 --> 02:34:55,318
as you can see tomorrow's time will be

2594
02:34:50,340 --> 02:34:56,549
noon Pacific Daylight Time we'll be

2595
02:34:55,318 --> 02:34:58,139
playing around that lighting a little

2596
02:34:56,549 --> 02:35:00,840
more start to get the lighting transfer

2597
02:34:58,139 --> 02:35:02,519
working and yeah we will end up with

2598
02:35:00,840 --> 02:35:05,100
something that's at least somewhat

2599
02:35:02,520 --> 02:35:07,050
usable possibly tomorrow we'll have

2600
02:35:05,100 --> 02:35:08,279
something that's not doing any shadowing

2601
02:35:07,049 --> 02:35:10,379
but that kind of does a little bit of

2602
02:35:08,279 --> 02:35:11,789
transfer and then the next weekend we'll

2603
02:35:10,379 --> 02:35:13,318
have to start looking at maybe doing

2604
02:35:11,789 --> 02:35:14,729
something that it's a little smarter

2605
02:35:13,318 --> 02:35:17,420
about how things get shadowed another

2606
02:35:14,728 --> 02:35:19,709
stuff like that so that's about it

2607
02:35:17,420 --> 02:35:21,539
thanks for joining me until tomorrow

2608
02:35:19,709 --> 02:35:24,679
have fun programming and I'll see you on

2609
02:35:21,539 --> 02:35:24,680
the Internet take it easy

