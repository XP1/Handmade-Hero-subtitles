1
00:00:00,000 --> 00:00:05,750
buddy welcome to handmade hero the game

2
00:00:02,339 --> 00:00:07,889
where we code a complete show on stream

3
00:00:05,750 --> 00:00:11,400
sure right side and say that backwards

4
00:00:07,889 --> 00:00:14,989
today you could really think of them as

5
00:00:11,400 --> 00:00:17,609
interchangeable I so today is a special

6
00:00:14,990 --> 00:00:19,019
to stream day there's a reason for that

7
00:00:17,609 --> 00:00:21,689
it was not an accident some people

8
00:00:19,019 --> 00:00:24,689
thought the bot malfunction it didn't it

9
00:00:21,689 --> 00:00:30,509
is intentional so today I want to do

10
00:00:24,689 --> 00:00:31,820
something because we have had a I don't

11
00:00:30,510 --> 00:00:35,520
want to necessarily call it a request

12
00:00:31,820 --> 00:00:38,759
but an opportunity it was available to

13
00:00:35,520 --> 00:00:43,129
help someone out who was a friend of

14
00:00:38,759 --> 00:00:46,409
mine and who was actually a programmer I

15
00:00:43,128 --> 00:00:48,179
highly respect and admire but somebody

16
00:00:46,409 --> 00:00:49,078
who doesn't do any 3d programming that's

17
00:00:48,179 --> 00:00:53,609
just not what they do

18
00:00:49,079 --> 00:00:54,719
right and I will keep their identity

19
00:00:53,609 --> 00:00:56,280
private I don't know if they want to

20
00:00:54,719 --> 00:00:57,929
talk about it yet or what's going on but

21
00:00:56,280 --> 00:01:02,579
so we're just gonna say it's someone who

22
00:00:57,929 --> 00:01:06,599
I respect and they have asked me

23
00:01:02,579 --> 00:01:09,390
recently about do you know anyone who's

24
00:01:06,599 --> 00:01:12,419
available to do the 3d back-end for this

25
00:01:09,390 --> 00:01:14,040
like sort of pseudo 2d 3d game it's like

26
00:01:12,420 --> 00:01:16,350
mostly sprite graphics but there's some

27
00:01:14,040 --> 00:01:17,670
stuff I want to do and I was like well

28
00:01:16,349 --> 00:01:19,919
what are you trying to make it look like

29
00:01:17,670 --> 00:01:22,170
and they sent me a screenshot that looks

30
00:01:19,920 --> 00:01:24,990
a lot like our renderer it's like blocks

31
00:01:22,170 --> 00:01:26,549
with with bitmaps on the side of them

32
00:01:24,989 --> 00:01:29,310
and then sprites in it now it's like

33
00:01:26,549 --> 00:01:30,329
well I don't know any good 3d

34
00:01:29,310 --> 00:01:32,969
programmers who are available right now

35
00:01:30,328 --> 00:01:34,618
because as usual all good 3d programmers

36
00:01:32,969 --> 00:01:37,170
are almost always at a job somewhere

37
00:01:34,618 --> 00:01:41,129
they're in very high demand and they're

38
00:01:37,170 --> 00:01:43,290
very hard to find but I said if you want

39
00:01:41,129 --> 00:01:45,890
you can try using the handmade hero

40
00:01:43,290 --> 00:01:49,110
render at least get you going and maybe

41
00:01:45,890 --> 00:01:51,170
if you know maybe that'll be enough it

42
00:01:49,109 --> 00:01:54,118
probably isn't not to ship a whole game

43
00:01:51,170 --> 00:01:56,640
but at least then if you start with that

44
00:01:54,118 --> 00:01:59,368
maybe there will be people who because a

45
00:01:56,640 --> 00:02:00,718
lot of people watch the show maybe it'll

46
00:01:59,368 --> 00:02:02,218
be easier for you to find someone who

47
00:02:00,718 --> 00:02:03,959
could do some contract work on it and

48
00:02:02,218 --> 00:02:05,640
put in features that you might want

49
00:02:03,959 --> 00:02:07,199
because hey one of the nice things about

50
00:02:05,640 --> 00:02:08,368
the handmade hero render is everyone

51
00:02:07,200 --> 00:02:10,140
watching this already knows how it works

52
00:02:08,368 --> 00:02:11,520
you not to learn anything you have to go

53
00:02:10,139 --> 00:02:11,729
into someone else's code not knowing

54
00:02:11,520 --> 00:02:13,769
that's

55
00:02:11,729 --> 00:02:18,509
going on everyone watch the shortino's

56
00:02:13,769 --> 00:02:20,939
how it works so they can just edit it to

57
00:02:18,509 --> 00:02:26,280
their heart's content and off you go

58
00:02:20,939 --> 00:02:28,229
so I said you know I would be totally

59
00:02:26,280 --> 00:02:32,430
willing I know that I said that you know

60
00:02:28,229 --> 00:02:34,649
the games source code is proprietary up

61
00:02:32,430 --> 00:02:36,680
to the point where we actually say it's

62
00:02:34,650 --> 00:02:38,700
in the public domain which we will do

63
00:02:36,680 --> 00:02:40,230
but I was just like we'll just give you

64
00:02:38,699 --> 00:02:42,328
an early license for it if you want to

65
00:02:40,229 --> 00:02:44,068
use it like we'll just sign whatever the

66
00:02:42,329 --> 00:02:45,420
document is it says look it's you know

67
00:02:44,068 --> 00:02:50,608
you can use it early you don't have to

68
00:02:45,419 --> 00:02:53,939
wait for that and so I really what I

69
00:02:50,609 --> 00:02:56,489
want to do today was just go hey let's

70
00:02:53,939 --> 00:03:00,989
spend four hours clean up the renderer

71
00:02:56,489 --> 00:03:04,140
put it in a little isolated package so

72
00:03:00,989 --> 00:03:06,959
that it's easy for our friend to take a

73
00:03:04,139 --> 00:03:09,029
look at and compile into their game

74
00:03:06,959 --> 00:03:11,939
engine there you have one that's just a

75
00:03:09,030 --> 00:03:13,979
2-d game engine and play around with to

76
00:03:11,939 --> 00:03:17,669
see if it's something that can they can

77
00:03:13,979 --> 00:03:18,959
make use of in the short term so that's

78
00:03:17,669 --> 00:03:20,549
what I want to do today and maybe

79
00:03:18,959 --> 00:03:21,959
tomorrow we've got you know the weekend

80
00:03:20,549 --> 00:03:24,629
to do it so I want to get three streams

81
00:03:21,959 --> 00:03:27,209
in six hours isn't a lot of time to do a

82
00:03:24,629 --> 00:03:29,489
good clean like API pass on things

83
00:03:27,209 --> 00:03:32,219
necessarily but we should be able to get

84
00:03:29,489 --> 00:03:34,049
like a reasonable amount done and so I

85
00:03:32,219 --> 00:03:35,879
wanted to do that because I think if I

86
00:03:34,049 --> 00:03:38,639
do that pass on it it'll be a lot easier

87
00:03:35,879 --> 00:03:40,409
to integrate in because you know we have

88
00:03:38,639 --> 00:03:42,389
never had that as a concern of ours we

89
00:03:40,409 --> 00:03:44,009
we don't consider the renderer or never

90
00:03:42,389 --> 00:03:45,810
have considered the renderer or

91
00:03:44,009 --> 00:03:47,759
something that someone else was going to

92
00:03:45,810 --> 00:03:49,469
use we just considered it something that

93
00:03:47,759 --> 00:03:51,000
would just be used by handmade hero I

94
00:03:49,469 --> 00:03:53,430
also felt like this would be a good

95
00:03:51,000 --> 00:03:56,370
opportunity to show what one might do if

96
00:03:53,430 --> 00:03:59,340
one wanted to take a portion of a game

97
00:03:56,370 --> 00:04:02,370
and reuse it in another game because

98
00:03:59,340 --> 00:04:04,590
that is good technique to learn it's

99
00:04:02,370 --> 00:04:08,609
also how you go from a game to an engine

100
00:04:04,590 --> 00:04:10,079
right is learning or a multi-use engine

101
00:04:08,609 --> 00:04:12,569
I should say every game has an engine on

102
00:04:10,079 --> 00:04:14,730
the inside right but a multi-use engine

103
00:04:12,568 --> 00:04:17,098
is learning those skills of how do we

104
00:04:14,729 --> 00:04:19,048
take the parts of this game that can be

105
00:04:17,098 --> 00:04:21,750
reused and turned them into portions

106
00:04:19,048 --> 00:04:23,519
that can be reused without having to

107
00:04:21,750 --> 00:04:24,910
have the whole game right without

108
00:04:23,519 --> 00:04:28,990
without them being

109
00:04:24,910 --> 00:04:31,240
wedded to a particular game so that's

110
00:04:28,990 --> 00:04:34,720
all we're doing today and that's why

111
00:04:31,240 --> 00:04:36,009
there's the double stream so I'm just

112
00:04:34,720 --> 00:04:38,770
gonna go ahead and get started there's

113
00:04:36,009 --> 00:04:40,449
nothing magical about doing this you've

114
00:04:38,769 --> 00:04:43,149
seen me do things sort of like it in the

115
00:04:40,449 --> 00:04:45,879
past so we're just gonna start down that

116
00:04:43,149 --> 00:04:48,129
road and there's a couple pretty easy

117
00:04:45,879 --> 00:04:51,129
things we can do to sort of set

118
00:04:48,129 --> 00:04:52,930
ourselves up for success there what I'm

119
00:04:51,129 --> 00:04:57,430
gonna start with is I'm just gonna say

120
00:04:52,930 --> 00:05:00,459
look let's make a sample program that is

121
00:04:57,430 --> 00:05:02,769
in our imagination what we would like

122
00:05:00,459 --> 00:05:05,529
this thing to look like when you're

123
00:05:02,769 --> 00:05:09,219
using it for the first time by someone

124
00:05:05,529 --> 00:05:10,629
on the outside right now I have talked

125
00:05:09,220 --> 00:05:12,040
about this before and I think we came up

126
00:05:10,629 --> 00:05:15,850
with a name for it on streem it's called

127
00:05:12,040 --> 00:05:18,490
snuffleupagus or oriented programming

128
00:05:15,850 --> 00:05:20,260
snuffleupagus oriented programming is

129
00:05:18,490 --> 00:05:21,370
just when you you know if you've ever

130
00:05:20,259 --> 00:05:23,740
watched Sesame Street there's the

131
00:05:21,370 --> 00:05:26,379
fictional snuffleupagus character that

132
00:05:23,740 --> 00:05:27,370
like no one can see but Big Bird I don't

133
00:05:26,379 --> 00:05:29,319
know if they've changed that now I don't

134
00:05:27,370 --> 00:05:30,579
know nothing is as good as it used to be

135
00:05:29,319 --> 00:05:31,779
so I don't know if people other people

136
00:05:30,579 --> 00:05:33,189
can see snuffleupagus now but the old

137
00:05:31,779 --> 00:05:34,809
days were just like an imaginary friend

138
00:05:33,189 --> 00:05:35,639
of Big Bird's that maybe it existed

139
00:05:34,810 --> 00:05:37,959
maybe it didn't

140
00:05:35,639 --> 00:05:40,649
the idea behind snuffleupagus part

141
00:05:37,959 --> 00:05:44,709
oriented programming is just to say look

142
00:05:40,649 --> 00:05:46,389
let's pretend so I got a friend who

143
00:05:44,709 --> 00:05:48,909
wants to use this renderer or might be

144
00:05:46,389 --> 00:05:51,759
able to use this renderer let's pretend

145
00:05:48,910 --> 00:05:55,030
through them and let's pretend we just

146
00:05:51,759 --> 00:05:56,620
got the best possible thing right what's

147
00:05:55,029 --> 00:05:58,719
the best possible thing what does that

148
00:05:56,620 --> 00:06:01,209
look like let's pretend we just got that

149
00:05:58,720 --> 00:06:03,970
how would we call it what would the

150
00:06:01,209 --> 00:06:07,870
magical API look like that would make us

151
00:06:03,970 --> 00:06:11,140
really happy in that circumstance right

152
00:06:07,870 --> 00:06:13,449
and so I don't know the answer to that

153
00:06:11,139 --> 00:06:16,479
question yet because it's pretty broad

154
00:06:13,449 --> 00:06:17,740
so what I want to do is start by

155
00:06:16,480 --> 00:06:20,740
actually putting myself in that

156
00:06:17,740 --> 00:06:26,410
situation writing a little sample code

157
00:06:20,740 --> 00:06:28,689
and going from there right okay so the

158
00:06:26,410 --> 00:06:32,350
first thing we have to consider let me

159
00:06:28,689 --> 00:06:33,850
go to the build up at here the first

160
00:06:32,350 --> 00:06:35,950
thing that we have to consider is the

161
00:06:33,850 --> 00:06:38,169
fact that there's a bunch of win32

162
00:06:35,949 --> 00:06:42,098
startup code that has to have

163
00:06:38,168 --> 00:06:45,728
to get your OpenGL code initialized I

164
00:06:42,098 --> 00:06:46,959
believe that the target platform for

165
00:06:45,728 --> 00:06:48,899
this on the other side the person's

166
00:06:46,959 --> 00:06:52,329
could be using it is actually on a Mac

167
00:06:48,899 --> 00:06:54,278
so that code we can't really help with

168
00:06:52,329 --> 00:06:55,418
they're gonna have to use like did

169
00:06:54,278 --> 00:06:57,550
they're gonna have to know how to start

170
00:06:55,418 --> 00:07:00,158
up in OpenGL context fortunately I'm a

171
00:06:57,550 --> 00:07:02,288
hammy hero github there already is the

172
00:07:00,158 --> 00:07:04,990
code for starting up an OpenGL context

173
00:07:02,288 --> 00:07:07,120
in that way so for our purposes we can

174
00:07:04,990 --> 00:07:11,680
be a little bit more simplistic about

175
00:07:07,120 --> 00:07:13,180
that right but what I want to do is

176
00:07:11,680 --> 00:07:14,379
start off if you look here you know we

177
00:07:13,180 --> 00:07:17,769
kind of have we have like for example

178
00:07:14,379 --> 00:07:19,749
our HHI edit build so I'm going to start

179
00:07:17,769 --> 00:07:24,639
another built here and that build is

180
00:07:19,749 --> 00:07:27,520
right here I'm gonna actually do a build

181
00:07:24,639 --> 00:07:30,900
of our win32 code I'm gonna make our own

182
00:07:27,519 --> 00:07:33,430
sort of win32 combined sample app thing

183
00:07:30,899 --> 00:07:35,938
that is separate from handmade here as a

184
00:07:33,430 --> 00:07:40,329
test so this is like the renderer test

185
00:07:35,939 --> 00:07:42,159
bed or something right and so what I

186
00:07:40,329 --> 00:07:45,418
want to do there is I'm just gonna call

187
00:07:42,158 --> 00:07:48,310
this like win32 renderer test dot CPP

188
00:07:45,418 --> 00:07:51,598
and then what I'm gonna do is I'm gonna

189
00:07:48,310 --> 00:07:54,939
go ahead and when I compile this here

190
00:07:51,598 --> 00:07:56,978
I'm gonna get rid of the new default Lib

191
00:07:54,939 --> 00:07:59,080
stuff the reason that I'm going to get

192
00:07:56,978 --> 00:08:01,870
rid of the no default Lib stuff is

193
00:07:59,079 --> 00:08:06,579
because if I don't get rid of the new

194
00:08:01,870 --> 00:08:07,899
default Lib stuff then I'm just assuming

195
00:08:06,579 --> 00:08:09,399
that the person who's using this is

196
00:08:07,899 --> 00:08:11,918
going to be using the C runtime library

197
00:08:09,399 --> 00:08:13,689
so I want to test it in that sense as

198
00:08:11,918 --> 00:08:17,799
well right so I want kind of all that

199
00:08:13,689 --> 00:08:19,509
stuff to be the way that it is right so

200
00:08:17,800 --> 00:08:21,098
I'm gonna include using the C runtime

201
00:08:19,509 --> 00:08:23,080
library there that's what that is I'm

202
00:08:21,098 --> 00:08:25,838
gonna call I'm gonna compile this render

203
00:08:23,079 --> 00:08:29,560
a test in I don't need it to output a

204
00:08:25,838 --> 00:08:31,598
map file and I don't need it to really

205
00:08:29,560 --> 00:08:34,958
output anything else besides just the

206
00:08:31,598 --> 00:08:36,338
renderer test information so then what

207
00:08:34,958 --> 00:08:39,038
I'm going to do is I'm going to load up

208
00:08:36,339 --> 00:08:42,099
and just kind of clone out our win32

209
00:08:39,038 --> 00:08:44,078
startup stuff and this is just gonna be

210
00:08:42,099 --> 00:08:47,769
strictly for the testbed and again this

211
00:08:44,078 --> 00:08:49,870
is not actually something that he's

212
00:08:47,769 --> 00:08:51,519
actually going to get used on the other

213
00:08:49,870 --> 00:08:55,509
side because

214
00:08:51,519 --> 00:08:58,389
it's the win32 version of it right see

215
00:08:55,509 --> 00:09:01,720
that's fine but it is something that I

216
00:08:58,389 --> 00:09:05,230
want to just yeah I basically just want

217
00:09:01,720 --> 00:09:07,210
to sort of pull this stuff together into

218
00:09:05,230 --> 00:09:10,210
a little test bed that I can at least

219
00:09:07,210 --> 00:09:12,250
verify myself is okay so we don't need

220
00:09:10,210 --> 00:09:16,900
any of the D input or any of that stuff

221
00:09:12,250 --> 00:09:19,149
right we just need the opengl things so

222
00:09:16,899 --> 00:09:20,980
here's a bunch of this code this is

223
00:09:19,149 --> 00:09:22,299
interesting because you know this could

224
00:09:20,980 --> 00:09:25,029
be an opportunity to sort of simplify

225
00:09:22,299 --> 00:09:27,039
this stuff out as well in fact I'm

226
00:09:25,029 --> 00:09:29,470
wondering should we kind of even maybe

227
00:09:27,039 --> 00:09:37,329
do that first because if you look at how

228
00:09:29,470 --> 00:09:39,340
this stuff is is set up if you look at

229
00:09:37,330 --> 00:09:41,259
how this stuff is set up it's possible

230
00:09:39,340 --> 00:09:44,740
that we could share this stuff so I may

231
00:09:41,259 --> 00:09:46,539
actually skip this part for now simplify

232
00:09:44,740 --> 00:09:48,490
that first on the handmade hero side and

233
00:09:46,539 --> 00:09:51,009
then pull it over so all I'm going to do

234
00:09:48,490 --> 00:09:56,279
here is I'm just gonna do the very

235
00:09:51,009 --> 00:09:58,809
basics of the startup that we have

236
00:09:56,279 --> 00:10:00,879
really really straightforward stuff so

237
00:09:58,809 --> 00:10:02,739
I'm just gonna do the very basics get a

238
00:10:00,879 --> 00:10:05,740
window up and then I'm going to go from

239
00:10:02,740 --> 00:10:10,090
there with our render tests on on this

240
00:10:05,740 --> 00:10:12,310
side right all right so here's our win

241
00:10:10,090 --> 00:10:15,190
main you know here's our here's our C

242
00:10:12,309 --> 00:10:17,229
runtime library startup stuff right this

243
00:10:15,190 --> 00:10:18,730
one is without the C runtime library so

244
00:10:17,230 --> 00:10:21,759
we kind of want to turn this into a win

245
00:10:18,730 --> 00:10:23,379
main here this wants to not be win main

246
00:10:21,759 --> 00:10:25,059
series startup anymore if this wants to

247
00:10:23,379 --> 00:10:27,309
be actually just a regular win main that

248
00:10:25,059 --> 00:10:29,439
people can use and we can get rid of

249
00:10:27,309 --> 00:10:30,909
almost all the stuff that we have here

250
00:10:29,440 --> 00:10:31,440
right we don't need any of this stuff

251
00:10:30,909 --> 00:10:33,669
anymore

252
00:10:31,440 --> 00:10:36,400
because it's just not gonna be relevant

253
00:10:33,669 --> 00:10:38,349
so most of the complex code that we're

254
00:10:36,399 --> 00:10:40,149
actually doing to do advanced stuff all

255
00:10:38,350 --> 00:10:42,790
of that stuff is is now not really

256
00:10:40,149 --> 00:10:46,120
relevant right so I can get rid of all

257
00:10:42,789 --> 00:10:48,579
this stuff this stuff is all fine we can

258
00:10:46,120 --> 00:10:50,919
go ahead and and just put this stuff in

259
00:10:48,580 --> 00:10:53,080
here we don't care what the back buffer

260
00:10:50,919 --> 00:10:57,639
sizes or any of that stuff so we can

261
00:10:53,080 --> 00:11:00,889
just set up our main here our main stuff

262
00:10:57,639 --> 00:11:04,389
here so and made hero Ren

263
00:11:00,889 --> 00:11:07,009
window clap render a test window class

264
00:11:04,389 --> 00:11:08,688
so what we want to do now just keep the

265
00:11:07,009 --> 00:11:11,629
same code exactly the way it is we're

266
00:11:08,688 --> 00:11:18,078
gonna register that class we're then

267
00:11:11,629 --> 00:11:19,639
gonna open the window in terms of

268
00:11:18,078 --> 00:11:22,188
opening the window we really don't care

269
00:11:19,639 --> 00:11:24,709
what size it is we also don't care if

270
00:11:22,188 --> 00:11:27,318
it's fullscreen or not so we can just

271
00:11:24,708 --> 00:11:31,578
open any old window again this is not

272
00:11:27,318 --> 00:11:32,719
supposed to be anything like the the

273
00:11:31,578 --> 00:11:34,039
sort of stuff we're doing in hand-made

274
00:11:32,720 --> 00:11:35,569
here where we're actually trying to open

275
00:11:34,039 --> 00:11:37,998
a full screen or mean that stuff this is

276
00:11:35,568 --> 00:11:40,998
just the basic basic stuff we would open

277
00:11:37,999 --> 00:11:42,980
we would in it open jail get rid of all

278
00:11:40,999 --> 00:11:45,168
the multi-threaded stuff get rid of the

279
00:11:42,980 --> 00:11:46,730
sound we don't care about the refresh

280
00:11:45,168 --> 00:11:49,938
rate or any of these things we're just

281
00:11:46,730 --> 00:11:52,819
just testing the render so all this code

282
00:11:49,938 --> 00:11:58,188
just goes straight out the window it's

283
00:11:52,818 --> 00:11:59,899
not relevant at all so okay this stuff

284
00:11:58,188 --> 00:12:01,159
for push buffers on stuff this again is

285
00:11:59,899 --> 00:12:03,048
stuff we're gonna probably be cleaning

286
00:12:01,159 --> 00:12:04,698
up so I'm getting rid of all of that

287
00:12:03,048 --> 00:12:07,249
we'll clean it up and hand made here a

288
00:12:04,698 --> 00:12:08,808
first don't need any of this stuff any

289
00:12:07,249 --> 00:12:10,189
of the game memory platform behind none

290
00:12:08,808 --> 00:12:12,889
of that's going to be in here right it's

291
00:12:10,188 --> 00:12:15,528
just the renderer then we come through

292
00:12:12,889 --> 00:12:17,389
here texture op cues those sorts of

293
00:12:15,528 --> 00:12:20,688
things again not really relevant to us

294
00:12:17,389 --> 00:12:26,149
in this case sample memory not important

295
00:12:20,688 --> 00:12:28,879
so cleaning it all out rid of all these

296
00:12:26,149 --> 00:12:31,009
things we don't care about any of this

297
00:12:28,879 --> 00:12:32,869
either this is base likes mouse position

298
00:12:31,009 --> 00:12:34,579
stuff we may import that in if we want

299
00:12:32,869 --> 00:12:36,918
to play with it again don't really care

300
00:12:34,578 --> 00:12:38,899
about it right now just want to open the

301
00:12:36,918 --> 00:12:40,480
window so really all this stuff is just

302
00:12:38,899 --> 00:12:43,220
not necessary we don't care about

303
00:12:40,480 --> 00:12:46,548
directional pads or any of those sorts

304
00:12:43,220 --> 00:12:48,259
of things at all all right so this stuff

305
00:12:46,548 --> 00:12:50,778
is game update render don't care about

306
00:12:48,259 --> 00:12:54,409
that so this is like our renderer test

307
00:12:50,778 --> 00:12:59,088
frame or whatever or update renderer

308
00:12:54,409 --> 00:13:02,389
test would go here we don't care about

309
00:12:59,089 --> 00:13:05,329
audio updating we don't care about any

310
00:13:02,389 --> 00:13:07,209
of this stuff not necessary again

311
00:13:05,328 --> 00:13:10,219
because we're not doing any of it right

312
00:13:07,208 --> 00:13:12,768
so then we get down to checking for

313
00:13:10,220 --> 00:13:14,329
reload again we're not doing hot code

314
00:13:12,769 --> 00:13:15,629
reloading or any of that stuff it's just

315
00:13:14,328 --> 00:13:18,609
a test bed

316
00:13:15,629 --> 00:13:20,710
so that all goes away as well

317
00:13:18,610 --> 00:13:23,620
let's see here so then we got our frame

318
00:13:20,710 --> 00:13:25,450
wait we don't need to wait we can always

319
00:13:23,620 --> 00:13:29,919
just go at the fastest possible frame

320
00:13:25,450 --> 00:13:34,870
right so that's fine - where do we wait

321
00:13:29,919 --> 00:13:37,089
where's our swap buffers though I don't

322
00:13:34,870 --> 00:13:43,060
think this is it's not in here so here's

323
00:13:37,090 --> 00:13:44,980
the frame display right here so this is

324
00:13:43,059 --> 00:13:48,129
where we call the frame display right

325
00:13:44,980 --> 00:13:50,620
here so we want to actually still do

326
00:13:48,129 --> 00:13:54,189
that right we don't care about any of

327
00:13:50,620 --> 00:13:56,639
this we do kind of want the wall clock

328
00:13:54,190 --> 00:13:59,590
stuff probably just to measure things

329
00:13:56,639 --> 00:14:01,750
but I can do that kind of more manually

330
00:13:59,590 --> 00:14:05,139
here so I think maybe what we'll do is

331
00:14:01,750 --> 00:14:08,559
we'll leave this where we do it end

332
00:14:05,139 --> 00:14:10,149
counter get wall clock and then we sort

333
00:14:08,559 --> 00:14:17,859
of do a last counter so I feel like

334
00:14:10,149 --> 00:14:20,799
maybe my large integer last counter that

335
00:14:17,860 --> 00:14:28,870
can kind of go in here wery performance

336
00:14:20,799 --> 00:14:31,149
counter so we can just sort of have that

337
00:14:28,870 --> 00:14:33,549
initialize itself properly and that

338
00:14:31,149 --> 00:14:36,189
should be fine expected frames for

339
00:14:33,549 --> 00:14:38,229
update is not relevant measured seconds

340
00:14:36,190 --> 00:14:44,130
per frame let's see let's get all this

341
00:14:38,230 --> 00:14:44,129
stuff waste we don't care about this so

342
00:14:45,659 --> 00:14:49,259
performance counter

343
00:14:56,100 --> 00:15:06,730
all right uh so where's our winter to

344
00:15:00,250 --> 00:15:22,480
get seconds elapsed there we go

345
00:15:06,730 --> 00:15:23,920
I'll just put that right in here so I

346
00:15:22,480 --> 00:15:26,980
think that's really all we need to know

347
00:15:23,919 --> 00:15:30,309
here's our global perf frequency bit

348
00:15:26,980 --> 00:15:35,710
here that's a new 64 for the quad part

349
00:15:30,309 --> 00:15:36,909
there and the get wall clock like I said

350
00:15:35,710 --> 00:15:41,379
it's just this function so I just

351
00:15:36,909 --> 00:15:42,850
expanded that out in line and that's

352
00:15:41,379 --> 00:15:45,009
what I really want so we can get this

353
00:15:42,850 --> 00:15:49,090
just gets us our frames our seconds per

354
00:15:45,009 --> 00:15:52,389
frame they're round reel 32 to int 32 is

355
00:15:49,090 --> 00:15:53,950
is just there to yeah to look at our

356
00:15:52,389 --> 00:15:55,179
target frames and I respect your frames

357
00:15:53,950 --> 00:15:57,670
again we don't care about any of that

358
00:15:55,179 --> 00:15:59,439
stuff so our measured seconds per frame

359
00:15:57,669 --> 00:16:04,299
is all we really care about that gives

360
00:15:59,440 --> 00:16:05,440
us basically a millisecond count it's in

361
00:16:04,299 --> 00:16:08,079
seconds but you know it's gonna be point

362
00:16:05,440 --> 00:16:09,550
o something it's gonna give us our count

363
00:16:08,080 --> 00:16:11,980
for each frame which we'll probably want

364
00:16:09,549 --> 00:16:13,679
to do just to see to make sure we're

365
00:16:11,980 --> 00:16:16,570
running in a reasonable frame rate right

366
00:16:13,679 --> 00:16:20,319
um so again looking at this here we're

367
00:16:16,570 --> 00:16:21,820
we're pretty good in terms of of what

368
00:16:20,320 --> 00:16:23,770
we're looking at here I'm just gonna put

369
00:16:21,820 --> 00:16:26,410
WS visible in here so that our window is

370
00:16:23,769 --> 00:16:28,990
actually visible I'm then gonna nerf the

371
00:16:26,409 --> 00:16:35,079
two things that that show up for OpenGL

372
00:16:28,990 --> 00:16:36,340
right like so and I now need if you look

373
00:16:35,080 --> 00:16:37,540
at what's gonna go on here and we can

374
00:16:36,340 --> 00:16:39,639
run we can start running this pretty

375
00:16:37,539 --> 00:16:43,719
soon but we're gonna have some some

376
00:16:39,639 --> 00:16:45,009
things like like I said we have to

377
00:16:43,720 --> 00:16:46,269
process window messages and stuff like

378
00:16:45,009 --> 00:16:47,799
that or nothing's gonna happen so we

379
00:16:46,269 --> 00:16:49,539
gots a few more things to do but I'm

380
00:16:47,799 --> 00:16:51,939
just gonna go ahead and sort of nerf

381
00:16:49,539 --> 00:16:54,909
these things out here and we'll kind of

382
00:16:51,940 --> 00:16:56,860
go it so what kind of take it as we go

383
00:16:54,909 --> 00:16:59,289
so I'm gonna go ahead and put a while

384
00:16:56,860 --> 00:17:00,970
loop in here for global running we're

385
00:16:59,289 --> 00:17:03,429
just making sort of a silly little

386
00:17:00,970 --> 00:17:04,720
program here that will never exit that

387
00:17:03,429 --> 00:17:07,259
opens window we'll just

388
00:17:04,720 --> 00:17:10,720
start there right we'll just start there

389
00:17:07,259 --> 00:17:13,000
and we'll and we'll finish you know as

390
00:17:10,720 --> 00:17:14,500
we go so all right so what do we

391
00:17:13,000 --> 00:17:15,099
actually need to complete this just to

392
00:17:14,500 --> 00:17:19,109
get things going

393
00:17:15,099 --> 00:17:19,109
we need our main window callback right

394
00:17:21,869 --> 00:17:32,048
which is this so there's our main window

395
00:17:28,960 --> 00:17:35,110
callback and when we come in here right

396
00:17:32,048 --> 00:17:37,298
we do have our WM close message and

397
00:17:35,109 --> 00:17:40,359
that's going to set that global running

398
00:17:37,298 --> 00:17:44,440
flag to false I need to actually put

399
00:17:40,359 --> 00:17:51,819
this global running flag out in the

400
00:17:44,440 --> 00:17:53,850
actual Global's well I don't need to say

401
00:17:51,819 --> 00:17:53,849
that

402
00:17:55,529 --> 00:18:01,210
so when we look at what's happening here

403
00:17:57,669 --> 00:18:04,030
you can see all of this stuff is kind of

404
00:18:01,210 --> 00:18:06,009
weird code for maintaining an aspect

405
00:18:04,029 --> 00:18:10,869
ratio we don't care about that at all

406
00:18:06,009 --> 00:18:13,419
right and so this is really not relevant

407
00:18:10,869 --> 00:18:20,379
right we can we can get rid of all this

408
00:18:13,419 --> 00:18:23,350
stuff does not matter set cursor is also

409
00:18:20,380 --> 00:18:26,580
not really relevant to us that can just

410
00:18:23,349 --> 00:18:29,558
pass through activate app not relevant

411
00:18:26,579 --> 00:18:31,869
all of this stuff is correct we do want

412
00:18:29,558 --> 00:18:34,079
to exit in all those cases don't care

413
00:18:31,869 --> 00:18:38,319
about ciske down or any of those things

414
00:18:34,079 --> 00:18:39,668
don't care about paint other than to

415
00:18:38,319 --> 00:18:42,308
just make sure that it updates the recs

416
00:18:39,669 --> 00:18:44,320
doesn't keep sending us the message so

417
00:18:42,308 --> 00:18:49,960
most things can just go straight ahead

418
00:18:44,319 --> 00:18:53,019
to our def window proc and off we go so

419
00:18:49,960 --> 00:18:54,460
I think that's all good there and then

420
00:18:53,019 --> 00:18:56,798
so really all we need is our win main

421
00:18:54,460 --> 00:18:58,298
here I don't remember I don't use win

422
00:18:56,798 --> 00:19:02,109
main very often so I don't really

423
00:18:58,298 --> 00:19:03,849
remember what the win main entry point

424
00:19:02,109 --> 00:19:09,990
signature even is so I'm just going to

425
00:19:03,849 --> 00:19:09,990
grab it we go

426
00:19:15,190 --> 00:19:19,730
oops and if you look here if you're

427
00:19:17,960 --> 00:19:21,319
actually switching back to win main we

428
00:19:19,730 --> 00:19:23,450
don't need to use this get module handle

429
00:19:21,319 --> 00:19:26,389
zero because we just have the H instance

430
00:19:23,450 --> 00:19:32,960
there so I'm just gonna go ahead and set

431
00:19:26,390 --> 00:19:35,420
it up like that turn these into things

432
00:19:32,960 --> 00:19:37,519
that humans can actually read and then

433
00:19:35,420 --> 00:19:38,870
we're good to go all right so let's

434
00:19:37,519 --> 00:19:41,690
start with a few things we need to do

435
00:19:38,869 --> 00:19:44,929
first of all we don't have any of our

436
00:19:41,690 --> 00:19:47,650
types in here so what I would like to do

437
00:19:44,930 --> 00:19:49,640
if you look at handmade platform dot H

438
00:19:47,650 --> 00:19:52,100
one thing I've been wanting to do for a

439
00:19:49,640 --> 00:19:54,290
while is those kinds of just a bunch of

440
00:19:52,099 --> 00:19:57,679
things in here that you might want to

441
00:19:54,289 --> 00:20:00,529
use in a more general sense that I kind

442
00:19:57,680 --> 00:20:02,810
of want to pull out into a handmade sort

443
00:20:00,529 --> 00:20:04,309
of types I kind of want to do this for a

444
00:20:02,809 --> 00:20:06,500
while like something like handmade types

445
00:20:04,309 --> 00:20:08,619
that age right

446
00:20:06,500 --> 00:20:15,049
and what handmade types out H would be

447
00:20:08,619 --> 00:20:16,849
is just something that has you know like

448
00:20:15,049 --> 00:20:21,409
a pretty straightforward understanding

449
00:20:16,849 --> 00:20:25,000
of all of this stuff right so you know

450
00:20:21,410 --> 00:20:25,000
we would imagine just putting it in here

451
00:20:27,009 --> 00:20:33,430
and then all of these things just kind

452
00:20:29,480 --> 00:20:40,490
of come out all of these basic calls

453
00:20:33,430 --> 00:20:48,440
right and then all of these basic math

454
00:20:40,490 --> 00:20:52,299
things like so and they're all gonna be

455
00:20:48,440 --> 00:20:55,640
out there then we have kind of our our

456
00:20:52,299 --> 00:20:57,259
understanding of how we do like asserts

457
00:20:55,640 --> 00:20:59,870
and not implemented and all that stuff

458
00:20:57,259 --> 00:21:03,259
all of this stuff is just kind of our

459
00:20:59,869 --> 00:21:08,329
basic basic information right like

460
00:21:03,259 --> 00:21:09,740
nothing super complicated here right so

461
00:21:08,329 --> 00:21:11,929
I kind of wanted to put that all that

462
00:21:09,740 --> 00:21:14,329
out there so that you can pretty

463
00:21:11,930 --> 00:21:16,370
trivially do just the basic operations

464
00:21:14,329 --> 00:21:18,049
that you might want to do we don't

465
00:21:16,369 --> 00:21:19,909
really need any of this other stuff this

466
00:21:18,049 --> 00:21:21,680
is all specific to handmade hero right

467
00:21:19,910 --> 00:21:22,550
but all this stuff actually isn't it's

468
00:21:21,680 --> 00:21:26,390
just things that you might

469
00:21:22,549 --> 00:21:28,730
want to use so I wanted to kind of put

470
00:21:26,390 --> 00:21:31,550
that out there I may want to put the the

471
00:21:28,730 --> 00:21:33,349
mutexes in as well I'm not 100% sure

472
00:21:31,549 --> 00:21:35,299
about that but we'll see

473
00:21:33,349 --> 00:21:37,069
right so then we've kind of got this way

474
00:21:35,299 --> 00:21:40,730
of just saying all right anytime we want

475
00:21:37,069 --> 00:21:42,950
to build something to that effect we can

476
00:21:40,730 --> 00:21:45,950
just say all right include handmade

477
00:21:42,950 --> 00:21:49,160
types H and then we'll get all of those

478
00:21:45,950 --> 00:21:50,930
types that we normally use now this

479
00:21:49,160 --> 00:21:52,460
stuff was for our introspection we're

480
00:21:50,930 --> 00:21:58,700
not really doing that stuff anymore so

481
00:21:52,460 --> 00:22:03,950
I'm just gonna get rid of it for now and

482
00:21:58,700 --> 00:22:06,259
go from there okay uh so I for some

483
00:22:03,950 --> 00:22:08,720
reason made global variable B the thing

484
00:22:06,259 --> 00:22:11,930
that we use here I nowadays just use

485
00:22:08,720 --> 00:22:15,079
global so I kind of want to say look

486
00:22:11,930 --> 00:22:18,019
global is variable is it's just

487
00:22:15,079 --> 00:22:20,149
redundant all this might say global and

488
00:22:18,019 --> 00:22:22,369
and then what I'll do is I'll just for

489
00:22:20,150 --> 00:22:24,650
now I'll just get rid of that usage you

490
00:22:22,369 --> 00:22:27,049
can see I put it in for coders Auto

491
00:22:24,650 --> 00:22:31,150
highlight even that's the way I used to

492
00:22:27,049 --> 00:22:31,149
talk about it is just as global right

493
00:22:35,179 --> 00:22:40,600
and so that's all I'm doing here

494
00:22:37,890 --> 00:22:52,489
[Music]

495
00:22:40,599 --> 00:22:57,918
nurse that for a second and yeah now I

496
00:22:52,489 --> 00:23:00,829
can just kind of put these out I'll do

497
00:22:57,919 --> 00:23:16,970
this in a search in place just a little

498
00:23:00,829 --> 00:23:20,168
bit faster let's see just like this one

499
00:23:16,970 --> 00:23:44,329
can also be a little faster that way

500
00:23:20,169 --> 00:23:54,549
yeah okay I so now we're good to go

501
00:23:44,329 --> 00:23:54,548
and no we're not quite good to go time

502
00:24:05,329 --> 00:24:13,079
there we go uh so also in theory you

503
00:24:11,130 --> 00:24:14,610
know again I'll just double-check but in

504
00:24:13,079 --> 00:24:16,470
theory we're not changing anything about

505
00:24:14,609 --> 00:24:19,919
the code right our game still runs just

506
00:24:16,470 --> 00:24:24,120
as as normal what I want to do here is I

507
00:24:19,920 --> 00:24:24,779
want to now get that little testbed up

508
00:24:24,119 --> 00:24:26,429
and running

509
00:24:24,779 --> 00:24:27,899
that's totally isolated so we know

510
00:24:26,430 --> 00:24:30,180
exactly what we're using and we can

511
00:24:27,900 --> 00:24:31,290
write the test code the way we want what

512
00:24:30,180 --> 00:24:32,490
I'm gonna do here is I'm gonna do

513
00:24:31,289 --> 00:24:34,230
something slightly different from how

514
00:24:32,490 --> 00:24:37,500
we've done it before this is the way

515
00:24:34,230 --> 00:24:39,599
I've been doing things now it's sort of

516
00:24:37,500 --> 00:24:42,450
a change in the way used to do it what I

517
00:24:39,599 --> 00:24:45,349
used to do and you've seen me do it is I

518
00:24:42,450 --> 00:24:48,480
just open just the bear executable right

519
00:24:45,349 --> 00:24:49,589
and this is good because you know that

520
00:24:48,480 --> 00:24:52,170
way you can just run you don't have to

521
00:24:49,589 --> 00:24:53,159
have a project or solution in Visual

522
00:24:52,170 --> 00:24:55,080
Studio but it ends up creating a

523
00:24:53,160 --> 00:24:56,100
solution on the back end anyway I don't

524
00:24:55,079 --> 00:24:58,470
know if you've noticed that but it does

525
00:24:56,099 --> 00:25:00,449
just to save the state but you can't

526
00:24:58,470 --> 00:25:02,640
actually use any of the features so for

527
00:25:00,450 --> 00:25:05,069
example I can't have multiple different

528
00:25:02,640 --> 00:25:07,110
arguments I might run with and set them

529
00:25:05,069 --> 00:25:08,579
as different configurations because when

530
00:25:07,109 --> 00:25:12,269
you just open executable you can't do

531
00:25:08,579 --> 00:25:13,439
that don't ask me why you just can't so

532
00:25:12,269 --> 00:25:15,660
what I kind of figured out is a better

533
00:25:13,440 --> 00:25:16,890
way to do this is if you actually create

534
00:25:15,660 --> 00:25:19,950
an empty project

535
00:25:16,890 --> 00:25:22,620
so if product has nothing in it what you

536
00:25:19,950 --> 00:25:27,240
can then do is say alright well look in

537
00:25:22,619 --> 00:25:28,919
handmade you know MSB C proj will just

538
00:25:27,240 --> 00:25:31,200
be some temporary directory that that

539
00:25:28,920 --> 00:25:33,690
stores this these kind of projects if I

540
00:25:31,200 --> 00:25:36,720
have win32 renderer tests as one of my

541
00:25:33,690 --> 00:25:38,610
projects right I can just and turn off

542
00:25:36,720 --> 00:25:43,650
great directorate resolution I hit OK

543
00:25:38,609 --> 00:25:45,419
here I get an actual project right and

544
00:25:43,650 --> 00:25:47,340
when we look here it keeps it isolated

545
00:25:45,420 --> 00:25:50,550
in here right

546
00:25:47,339 --> 00:25:52,109
I like how I said don't create a

547
00:25:50,549 --> 00:25:54,539
directory resolution and what does it do

548
00:25:52,109 --> 00:25:59,009
it of course creates a directory for the

549
00:25:54,539 --> 00:26:01,649
solution I did that right right I didn't

550
00:25:59,009 --> 00:26:05,490
I didn't screw it up did I let's just

551
00:26:01,650 --> 00:26:08,900
make sure because we don't need it to

552
00:26:05,490 --> 00:26:08,900
put it in directory but you know

553
00:26:09,319 --> 00:26:14,779
let's just make sure I'm not

554
00:26:10,759 --> 00:26:16,970
hallucinating project empty project do

555
00:26:14,779 --> 00:26:19,129
not create director for solution the

556
00:26:16,970 --> 00:26:26,299
location is here the project name is

557
00:26:19,130 --> 00:26:28,280
win32 renderer test right right we all

558
00:26:26,299 --> 00:26:35,359
see it okay

559
00:26:28,279 --> 00:26:39,769
I hit ok creates the project in its own

560
00:26:35,359 --> 00:26:41,689
directory it's so weird like Microsoft

561
00:26:39,769 --> 00:26:43,730
is in their own special universe where

562
00:26:41,690 --> 00:26:45,860
the checkbox for create directory for a

563
00:26:43,730 --> 00:26:46,970
project when unchecked still creates a

564
00:26:45,859 --> 00:26:49,209
director for the project they're like

565
00:26:46,970 --> 00:26:51,740
hey we'll take that under advisement and

566
00:26:49,210 --> 00:26:56,690
and then just totally ignore it anyway

567
00:26:51,740 --> 00:26:58,759
but this is what I do I delete all of

568
00:26:56,690 --> 00:27:01,190
the stuff that it puts in there right

569
00:26:58,759 --> 00:27:05,629
like basically everything and then I

570
00:27:01,190 --> 00:27:09,890
just use this fake project by saying

571
00:27:05,630 --> 00:27:13,040
properties debugging rather than this I

572
00:27:09,890 --> 00:27:14,960
just say hey I want you to use when

573
00:27:13,039 --> 00:27:20,299
three to render a test as your

574
00:27:14,960 --> 00:27:24,440
executable right then if I step in yes

575
00:27:20,299 --> 00:27:26,299
build my project right then if I step in

576
00:27:24,440 --> 00:27:28,610
it just works exactly the same as it

577
00:27:26,299 --> 00:27:32,059
used to right it's it's the same as what

578
00:27:28,609 --> 00:27:35,479
we had before but now you can actually

579
00:27:32,059 --> 00:27:37,069
make configurations of the project so if

580
00:27:35,480 --> 00:27:38,809
I want to make a bunch of different

581
00:27:37,069 --> 00:27:40,429
configurations here that have different

582
00:27:38,809 --> 00:27:42,649
command lines different execution

583
00:27:40,430 --> 00:27:44,570
directories you can so it's just a

584
00:27:42,650 --> 00:27:47,240
little bit of a way of making Visual

585
00:27:44,569 --> 00:27:49,639
Studio be a little less crappy for

586
00:27:47,240 --> 00:27:52,849
debugging external things now everything

587
00:27:49,640 --> 00:27:54,590
sort of works right anyway here's our

588
00:27:52,849 --> 00:27:56,750
window you can see I can't do anything

589
00:27:54,589 --> 00:27:58,789
with it why because we literally don't

590
00:27:56,750 --> 00:28:00,799
handle any messages because we never

591
00:27:58,789 --> 00:28:01,940
actually process messages now sometimes

592
00:28:00,799 --> 00:28:03,109
we'll get them directly sent to the

593
00:28:01,940 --> 00:28:05,480
window but other than that we'd never

594
00:28:03,109 --> 00:28:06,949
get them so let's finish that up so we

595
00:28:05,480 --> 00:28:09,440
can start actually coding the renderer

596
00:28:06,950 --> 00:28:12,049
test by just actually having a place to

597
00:28:09,440 --> 00:28:14,420
process our messages again we can just

598
00:28:12,049 --> 00:28:16,309
copy this code from the handmade hero

599
00:28:14,420 --> 00:28:21,798
side of things so we've got our peek

600
00:28:16,309 --> 00:28:24,749
message loop right I think we decided

601
00:28:21,798 --> 00:28:26,190
this stuff was kind of just nuts and we

602
00:28:24,749 --> 00:28:28,769
had no idea what Windows was actually

603
00:28:26,190 --> 00:28:32,788
doing here we still don't really know

604
00:28:28,769 --> 00:28:34,919
what Windows is doing here it's kind of

605
00:28:32,788 --> 00:28:37,169
ridiculous but I'm just going to copy

606
00:28:34,919 --> 00:28:40,799
this this process pending messages stuff

607
00:28:37,169 --> 00:28:42,269
out to here so that we can call it and

608
00:28:40,798 --> 00:28:43,798
then I'm just going to delete most of

609
00:28:42,269 --> 00:28:46,709
the stuff that we're doing so we don't

610
00:28:43,798 --> 00:28:49,499
care about keyboard or anything at the

611
00:28:46,709 --> 00:28:51,119
moment so that's gone we don't really

612
00:28:49,499 --> 00:28:53,879
care on anything other than just the

613
00:28:51,118 --> 00:28:59,368
quit message and the dispatch stuff here

614
00:28:53,878 --> 00:29:01,408
right so that should be fine okay so I

615
00:28:59,368 --> 00:29:04,378
think that's all we need we don't need

616
00:29:01,409 --> 00:29:05,519
any of this pretty sure that'll just

617
00:29:04,378 --> 00:29:08,248
work

618
00:29:05,519 --> 00:29:11,128
we don't need a time anything so I'm

619
00:29:08,249 --> 00:29:14,639
gonna go ahead and call this winter to

620
00:29:11,128 --> 00:29:23,189
process messages in our loop here as

621
00:29:14,638 --> 00:29:25,828
well okay so there we go

622
00:29:23,190 --> 00:29:28,200
and now when we run this in theory we

623
00:29:25,828 --> 00:29:29,729
should be able to kind of like size the

624
00:29:28,200 --> 00:29:31,979
window or do the other sorts of things

625
00:29:29,729 --> 00:29:33,088
you would normally do it the window so

626
00:29:31,979 --> 00:29:37,139
now we're ready to actually start

627
00:29:33,088 --> 00:29:39,328
calling the renderer right and what I'd

628
00:29:37,138 --> 00:29:42,328
like to do because then you can notice

629
00:29:39,328 --> 00:29:43,918
it closes as well which is good what I'd

630
00:29:42,328 --> 00:29:50,128
like to do here again is I'd like to

631
00:29:43,919 --> 00:29:53,329
make this sort of easy to use so I'd

632
00:29:50,128 --> 00:30:01,288
perhaps like our win32 init OpenGL I

633
00:29:53,328 --> 00:30:02,999
kind of like that to just be able to I'd

634
00:30:01,288 --> 00:30:04,229
like that too I'd like what I'd like to

635
00:30:02,999 --> 00:30:05,819
be able to do here fundamentally

636
00:30:04,229 --> 00:30:07,440
speaking also I don't know why we need

637
00:30:05,819 --> 00:30:09,538
to get a device context here when we

638
00:30:07,440 --> 00:30:12,419
already have a device context here

639
00:30:09,538 --> 00:30:15,690
seems kind of dumb so I'm just gonna

640
00:30:12,419 --> 00:30:20,219
stop doing that and say that this will

641
00:30:15,690 --> 00:30:22,288
use the OpenGL DC so what I liked it

642
00:30:20,219 --> 00:30:23,879
because remember we have CS own DC here

643
00:30:22,288 --> 00:30:26,338
so when we get that handle we can just

644
00:30:23,878 --> 00:30:28,588
keep it it's not a problem right so

645
00:30:26,338 --> 00:30:30,928
anyway what I'm gonna do in here is I

646
00:30:28,588 --> 00:30:32,608
want this init OpenGL stuff to work kind

647
00:30:30,929 --> 00:30:34,200
of cleanly so that I don't have to copy

648
00:30:32,608 --> 00:30:35,638
and paste all that code in there

649
00:30:34,200 --> 00:30:38,340
so the first thing I want to be able to

650
00:30:35,638 --> 00:30:41,368
do is pull out the OpenGL initialization

651
00:30:38,339 --> 00:30:43,108
stuff into its own separate file so for

652
00:30:41,368 --> 00:30:44,878
example in here we've kind of got if you

653
00:30:43,108 --> 00:30:46,829
look at our OpenGL there's all the

654
00:30:44,878 --> 00:30:50,158
opengl code it's the open Jellico that's

655
00:30:46,829 --> 00:30:52,249
shared across operating systems right so

656
00:30:50,159 --> 00:30:55,470
I want a win32 hand-made open jail

657
00:30:52,249 --> 00:30:58,470
that's what I want and I want to pull

658
00:30:55,470 --> 00:31:00,989
out all of that open GL code oops the

659
00:30:58,470 --> 00:31:02,579
same thing we already have I want to

660
00:31:00,989 --> 00:31:04,499
pull out all that Open GL code so that

661
00:31:02,579 --> 00:31:06,239
we can just reuse it in here and I may

662
00:31:04,499 --> 00:31:07,649
also want to simplify it so it's easier

663
00:31:06,239 --> 00:31:08,909
for people on other platforms I know

664
00:31:07,648 --> 00:31:10,079
it's been a little bit tricky because we

665
00:31:08,909 --> 00:31:12,450
haven't really thought much about that

666
00:31:10,079 --> 00:31:15,480
we haven't done anything to help those

667
00:31:12,450 --> 00:31:17,069
people who are porting and we could

668
00:31:15,480 --> 00:31:19,858
start doing stuff like that right now

669
00:31:17,069 --> 00:31:22,558
that we're taking a couple streams to

670
00:31:19,858 --> 00:31:24,599
clean this up so what I want to do is

671
00:31:22,558 --> 00:31:26,999
I'll pull all this code out we know this

672
00:31:24,599 --> 00:31:28,589
code is just for open gel nothing else

673
00:31:26,999 --> 00:31:30,450
is happening in here right this is all

674
00:31:28,589 --> 00:31:33,118
OpenGL code so it's gonna pull all that

675
00:31:30,450 --> 00:31:36,629
code out here it is I'll put it in here

676
00:31:33,118 --> 00:31:39,028
right and really this is the H file

677
00:31:36,628 --> 00:31:43,108
portion to a certain extent so we may

678
00:31:39,028 --> 00:31:44,159
kind of want to do it that way but you

679
00:31:43,108 --> 00:31:45,720
know six in one half dozen the other

680
00:31:44,159 --> 00:31:48,929
we'll see how we want to how we want

681
00:31:45,720 --> 00:31:55,889
that to be going for it I also should

682
00:31:48,929 --> 00:31:58,200
put our little boilerplate in there so

683
00:31:55,888 --> 00:32:07,769
we're gonna include this obviously right

684
00:31:58,200 --> 00:32:09,778
we're gonna include them to do him and

685
00:32:07,769 --> 00:32:13,200
if we build now we should be able to get

686
00:32:09,778 --> 00:32:14,999
this building again like not the new

687
00:32:13,200 --> 00:32:16,470
code but the old code because we're just

688
00:32:14,999 --> 00:32:17,970
we're not making any serious

689
00:32:16,470 --> 00:32:21,358
modifications to it right we're just

690
00:32:17,970 --> 00:32:23,249
doing straightforward reorganisation of

691
00:32:21,358 --> 00:32:24,569
where the code lives so it can be used

692
00:32:23,249 --> 00:32:27,569
by different people so that's pretty

693
00:32:24,569 --> 00:32:28,980
straightforward I think all right so

694
00:32:27,569 --> 00:32:32,689
where's the rest of the OpenGL code well

695
00:32:28,980 --> 00:32:37,919
we've got these Trig's here right that

696
00:32:32,690 --> 00:32:39,899
we know we might want global array we've

697
00:32:37,919 --> 00:32:42,389
got this set pixel format and load

698
00:32:39,898 --> 00:32:45,058
wiggle extensions in it opengl that's

699
00:32:42,388 --> 00:32:47,079
this whole bit here so all that stuff

700
00:32:45,058 --> 00:32:48,609
kind of wants to be you

701
00:32:47,079 --> 00:32:50,740
the open jail side so let's see what we

702
00:32:48,609 --> 00:32:52,599
have to do to pull that out it may be

703
00:32:50,740 --> 00:32:53,859
nothing it may be something you can see

704
00:32:52,599 --> 00:32:56,379
there's some stuff here that doesn't

705
00:32:53,859 --> 00:32:59,619
like right so what's going on here

706
00:32:56,380 --> 00:33:03,700
wiggle context major version ARB the

707
00:32:59,619 --> 00:33:07,839
problem here with that is those weren't

708
00:33:03,700 --> 00:33:14,640
defined anywhere I think is that because

709
00:33:07,839 --> 00:33:17,918
they're in here know where those went

710
00:33:14,640 --> 00:33:19,690
yeah uh so these really shouldn't be in

711
00:33:17,919 --> 00:33:21,580
here I don't know why they were I guess

712
00:33:19,690 --> 00:33:22,870
we just forgot that they were window

713
00:33:21,579 --> 00:33:24,638
specific because this is where the

714
00:33:22,869 --> 00:33:26,849
window specific stuff goes so let's try

715
00:33:24,638 --> 00:33:26,849
that again

716
00:33:27,210 --> 00:33:36,850
all right um so that all looks decent

717
00:33:32,730 --> 00:33:40,329
let's start here here's our open jail

718
00:33:36,849 --> 00:33:41,439
supports sRGB frame buffer this is a tag

719
00:33:40,329 --> 00:33:43,689
that we're supposed to be getting back

720
00:33:41,440 --> 00:33:45,759
from the open gel layer right and we

721
00:33:43,690 --> 00:33:47,798
don't necessarily know so that's an

722
00:33:45,759 --> 00:33:52,569
issue let's just we can think about that

723
00:33:47,798 --> 00:33:54,970
we've then got some some problems here

724
00:33:52,569 --> 00:33:56,829
where we want to sort of crack this open

725
00:33:54,970 --> 00:33:59,558
this video extension stuff where we look

726
00:33:56,829 --> 00:34:01,418
and look at wiggle extensions and

727
00:33:59,558 --> 00:34:02,710
override some things in our OpenGL

728
00:34:01,419 --> 00:34:04,269
settings right so that's a little bit of

729
00:34:02,710 --> 00:34:07,389
an issue here how are we gonna deal with

730
00:34:04,269 --> 00:34:08,619
it so just keep those in your head we're

731
00:34:07,388 --> 00:34:12,368
not looking at quite yet but we're gonna

732
00:34:08,619 --> 00:34:14,530
very shortly then we got this info

733
00:34:12,369 --> 00:34:17,950
structure where we need to look to see

734
00:34:14,530 --> 00:34:20,500
what what sorts of stuff we actually

735
00:34:17,949 --> 00:34:21,969
need to wiggle get proc address for

736
00:34:20,500 --> 00:34:24,219
right what are we using the frame buffer

737
00:34:21,969 --> 00:34:30,098
object or not those sorts of things

738
00:34:24,219 --> 00:34:34,358
right then it looks like we're kind of

739
00:34:30,099 --> 00:34:38,109
okay OpenGL in it then at that point is

740
00:34:34,358 --> 00:34:39,730
sort of the platform the platform the

741
00:34:38,108 --> 00:34:41,199
part that's that's it doesn't have

742
00:34:39,730 --> 00:34:46,858
anything to do with the wiggle section

743
00:34:41,199 --> 00:34:46,858
of things right okay

744
00:34:47,219 --> 00:34:51,269
so in order to get this working really

745
00:34:49,440 --> 00:34:53,608
all we would have to do is make sure

746
00:34:51,269 --> 00:34:57,568
that that we always install like we

747
00:34:53,608 --> 00:35:00,328
always like include the actual handmade

748
00:34:57,568 --> 00:35:01,858
OpenGL side of things and you can see

749
00:35:00,329 --> 00:35:04,260
that does some things like pulling in

750
00:35:01,858 --> 00:35:05,848
render group and stuff like that so

751
00:35:04,260 --> 00:35:07,790
we've got some stuff we're gonna have to

752
00:35:05,849 --> 00:35:10,740
do as we start to walk down this road

753
00:35:07,789 --> 00:35:11,400
but we'll we'll cross that bridge when

754
00:35:10,739 --> 00:35:13,889
we come to it

755
00:35:11,400 --> 00:35:15,510
you'll see in a second alright so for

756
00:35:13,889 --> 00:35:17,940
starters what I want to do is look

757
00:35:15,510 --> 00:35:20,880
inside win32 handmade I want to see how

758
00:35:17,940 --> 00:35:22,829
that inclusion pattern went so if we

759
00:35:20,880 --> 00:35:28,160
look here you can see we have handmade

760
00:35:22,829 --> 00:35:30,630
OpenGL is included sort of in here and

761
00:35:28,159 --> 00:35:32,848
you can you can kind of see it doing

762
00:35:30,630 --> 00:35:34,470
this like oh then I defined as a global

763
00:35:32,849 --> 00:35:36,930
and then off we go and there's sort of

764
00:35:34,469 --> 00:35:38,818
this weird like sort of alternating

765
00:35:36,929 --> 00:35:41,879
pattern that's going on here and this

766
00:35:38,818 --> 00:35:44,730
like kind of needs that to happen inside

767
00:35:41,880 --> 00:35:47,329
it and all of this stuff kind of has to

768
00:35:44,730 --> 00:35:50,130
play out a little bit more sanely there

769
00:35:47,329 --> 00:35:52,230
what I'm gonna start by doing is I just

770
00:35:50,130 --> 00:35:53,849
want to analyze what we actually do and

771
00:35:52,230 --> 00:35:58,579
don't need in these things

772
00:35:53,849 --> 00:36:02,099
more specifically okay for starters

773
00:35:58,579 --> 00:36:04,410
suppose I were to move this down here

774
00:36:02,099 --> 00:36:07,500
what happens right just to see what the

775
00:36:04,409 --> 00:36:13,289
dependencies are right and what you can

776
00:36:07,500 --> 00:36:16,108
see is actually not much this just needs

777
00:36:13,289 --> 00:36:19,289
these two functions to be provided to it

778
00:36:16,108 --> 00:36:21,210
now once it actually can see those what

779
00:36:19,289 --> 00:36:22,920
that means is we could pretty trivially

780
00:36:21,210 --> 00:36:25,380
to like move forward on this a little

781
00:36:22,920 --> 00:36:27,480
bit in sort of slow baby step fashion

782
00:36:25,380 --> 00:36:30,780
you just take those two functions that

783
00:36:27,480 --> 00:36:40,190
we actually care about here the opengl

784
00:36:30,780 --> 00:36:40,190
in it and get info this one

785
00:36:41,849 --> 00:36:52,210
it's behind my head there and the get

786
00:36:46,150 --> 00:36:55,720
info so I can leave these two modules

787
00:36:52,210 --> 00:36:57,280
talking to other this way and continue

788
00:36:55,719 --> 00:36:59,469
to move forward so what I want to do I

789
00:36:57,280 --> 00:37:03,280
want to simplify how those things come

790
00:36:59,469 --> 00:37:05,108
together so I don't like that yeah but I

791
00:37:03,280 --> 00:37:07,600
don't want to address it yet so you can

792
00:37:05,108 --> 00:37:09,730
see I'm doing this in very specific

793
00:37:07,599 --> 00:37:12,639
steps that move things around so that I

794
00:37:09,730 --> 00:37:14,769
can still run and compile and see how

795
00:37:12,639 --> 00:37:17,679
things are related more easily without

796
00:37:14,769 --> 00:37:20,829
taking a big leap right so that's a very

797
00:37:17,679 --> 00:37:23,139
intentional so now if I go look at this

798
00:37:20,829 --> 00:37:25,539
win32 ended up in GL part what you can

799
00:37:23,139 --> 00:37:27,789
see is that I now could call if I wanted

800
00:37:25,539 --> 00:37:30,279
to the same pattern of includes that's

801
00:37:27,789 --> 00:37:34,449
happening here I could actually do that

802
00:37:30,280 --> 00:37:36,130
like this and be okay now the problem is

803
00:37:34,449 --> 00:37:37,779
hand-made rendered out H and rendered

804
00:37:36,130 --> 00:37:40,450
out cbpr probably not going to work

805
00:37:37,780 --> 00:37:45,220
because of dependencies that we aren't

806
00:37:40,449 --> 00:37:49,929
doing right like well v2 was supposed to

807
00:37:45,219 --> 00:37:52,689
be defined so I'm not sure what's going

808
00:37:49,929 --> 00:37:55,389
on there hold on a second let me double

809
00:37:52,690 --> 00:38:02,010
check that types Ted H did I put that

810
00:37:55,389 --> 00:38:05,349
include in the wrong place I did sorry

811
00:38:02,010 --> 00:38:08,369
where's the wind did I just diced delete

812
00:38:05,349 --> 00:38:08,368
it it was here a minute ago

813
00:38:11,690 --> 00:38:20,798
I know what happened there um so you can

814
00:38:16,969 --> 00:38:23,209
see right like inside handmade render

815
00:38:20,798 --> 00:38:24,949
this stuff is just intermingled with

816
00:38:23,210 --> 00:38:27,019
like the game render commands and all

817
00:38:24,949 --> 00:38:29,659
that sort of stuff right and we don't

818
00:38:27,019 --> 00:38:32,059
really want that to be true

819
00:38:29,659 --> 00:38:34,159
so I don't actually know yet

820
00:38:32,059 --> 00:38:36,798
to what extent I can extricate those

821
00:38:34,159 --> 00:38:37,879
without doing more work so that's kind

822
00:38:36,798 --> 00:38:39,769
of more when I mission like for example

823
00:38:37,880 --> 00:38:43,130
if I get rid of this what do I lose

824
00:38:39,769 --> 00:38:45,079
right and you can see well it's got this

825
00:38:43,130 --> 00:38:47,210
this render settings so what I could

826
00:38:45,079 --> 00:38:49,250
very easily decide to do is move that

827
00:38:47,210 --> 00:38:51,710
render settings more into the renderer

828
00:38:49,250 --> 00:38:54,980
look into an understanding of what the

829
00:38:51,710 --> 00:38:56,690
render a proper actually is and sort of

830
00:38:54,980 --> 00:38:59,000
extricate it there so that's a really

831
00:38:56,690 --> 00:39:03,318
good sign of the first place I need to

832
00:38:59,000 --> 00:39:05,989
start making those changes right and let

833
00:39:03,318 --> 00:39:07,880
me get rid of this as well and see where

834
00:39:05,989 --> 00:39:09,500
we're at there so you can see the

835
00:39:07,880 --> 00:39:12,890
current settings seem to be the really

836
00:39:09,500 --> 00:39:15,170
big hang-up so looking in here you can

837
00:39:12,889 --> 00:39:18,219
see we also rely on sort of a printf

838
00:39:15,170 --> 00:39:22,849
because we're trying to generate there

839
00:39:18,219 --> 00:39:25,578
some basically some versions of this

840
00:39:22,849 --> 00:39:28,760
stuff that use parameters that we don't

841
00:39:25,579 --> 00:39:32,150
know so we're kind of trying to set some

842
00:39:28,760 --> 00:39:34,490
parameters here dynamically so that

843
00:39:32,150 --> 00:39:36,470
format string is kind of also something

844
00:39:34,489 --> 00:39:39,318
that we we need to address now

845
00:39:36,469 --> 00:39:42,769
fortunately we don't really need to do

846
00:39:39,318 --> 00:39:45,108
that much for that we can pretty

847
00:39:42,769 --> 00:39:47,960
trivially just say oh yeah you wanted

848
00:39:45,108 --> 00:39:55,940
format string that's fine format string

849
00:39:47,960 --> 00:39:58,338
is just printf s printf so you know the

850
00:39:55,940 --> 00:40:01,490
size and the string or the size of the

851
00:39:58,338 --> 00:40:05,298
test we just skip the size part put the

852
00:40:01,489 --> 00:40:06,979
dest in there and then put the VAR s on

853
00:40:05,298 --> 00:40:08,719
the end of it right so we can pretty

854
00:40:06,980 --> 00:40:13,329
trivially make that happen we can also

855
00:40:08,719 --> 00:40:15,618
use the size to printf if they want to

856
00:40:13,329 --> 00:40:19,309
so that really doesn't concern me that's

857
00:40:15,619 --> 00:40:20,869
gonna be pretty easy to handle but yeah

858
00:40:19,309 --> 00:40:23,510
so then we've got some of the things

859
00:40:20,869 --> 00:40:24,769
like strings are equal again those

860
00:40:23,510 --> 00:40:27,440
things we can

861
00:40:24,769 --> 00:40:43,909
we can easily nerf for the time being

862
00:40:27,440 --> 00:40:46,429
just to move forward if we want to do

863
00:40:43,909 --> 00:40:51,349
two strings that's just a string compare

864
00:40:46,429 --> 00:40:53,480
of a and B equals zero right and so

865
00:40:51,349 --> 00:40:56,449
again we can kind of keep those pretty

866
00:40:53,480 --> 00:40:58,070
much under control so let's take a look

867
00:40:56,449 --> 00:41:05,149
at what else we've got going on here

868
00:40:58,070 --> 00:41:08,150
that seems problematic it wants us to

869
00:41:05,150 --> 00:41:12,099
use sprint def s I don't know if I want

870
00:41:08,150 --> 00:41:12,099
to use sprint FS but I don't really care

871
00:41:15,730 --> 00:41:21,409
it's fine with me so it that'll take the

872
00:41:18,949 --> 00:41:24,679
size which is fine that's what we that's

873
00:41:21,409 --> 00:41:27,440
what we were doing just takes in the

874
00:41:24,679 --> 00:41:31,730
opposite order so if it wants to do that

875
00:41:27,440 --> 00:41:34,490
go nuts and so it looks like those

876
00:41:31,730 --> 00:41:38,360
settings are really most of it there

877
00:41:34,489 --> 00:41:40,399
right so so we kind of know where we're

878
00:41:38,360 --> 00:41:42,650
at here it's really not that bad

879
00:41:40,400 --> 00:41:45,950
if I don't want to include that render

880
00:41:42,650 --> 00:41:48,079
information if I'm just talking about

881
00:41:45,949 --> 00:41:50,659
these things it's not too bad

882
00:41:48,079 --> 00:41:53,630
I don't know about the sort I don't know

883
00:41:50,659 --> 00:41:55,849
if anyone actually calls that so I'd be

884
00:41:53,630 --> 00:41:58,400
interested to see if any I don't think

885
00:41:55,849 --> 00:42:01,329
anyone probably does so I think we're

886
00:41:58,400 --> 00:42:03,800
probably almost to the point where this

887
00:42:01,329 --> 00:42:05,599
would work and really what we're worried

888
00:42:03,800 --> 00:42:08,539
about here is is some of these things

889
00:42:05,599 --> 00:42:14,269
like the render settings and like that

890
00:42:08,539 --> 00:42:15,769
the loaded white bitmap sort of way of

891
00:42:14,269 --> 00:42:18,469
short-circuiting the fact that when you

892
00:42:15,769 --> 00:42:21,739
want to draw without a bitmap it

893
00:42:18,469 --> 00:42:23,929
substitutes that bad in there okay so

894
00:42:21,739 --> 00:42:28,039
looking at this stuff we've got a few

895
00:42:23,929 --> 00:42:32,869
string things here that we use when

896
00:42:28,039 --> 00:42:36,019
we're analyzing the extension stuff this

897
00:42:32,869 --> 00:42:37,339
is really really ugly and this is OpenGL

898
00:42:36,019 --> 00:42:38,150
fault make no mistake about it this is

899
00:42:37,340 --> 00:42:42,710
in no

900
00:42:38,150 --> 00:42:45,920
in no way an acceptable way to have

901
00:42:42,710 --> 00:42:47,568
people look at extensions I mean it's

902
00:42:45,920 --> 00:42:50,659
just ridiculous that you're parsing

903
00:42:47,568 --> 00:42:55,248
strings to look at extensions so

904
00:42:50,659 --> 00:42:57,048
error-prone it's just absurd right at

905
00:42:55,248 --> 00:42:58,939
the very least just say how many strings

906
00:42:57,048 --> 00:43:04,838
to heart and let me enumerate over them

907
00:42:58,940 --> 00:43:07,519
and thankfully they did do that in

908
00:43:04,838 --> 00:43:11,989
future versions of OpenGL but of course

909
00:43:07,518 --> 00:43:13,578
wiggle is old and and doesn't conform to

910
00:43:11,989 --> 00:43:15,318
that name you have to use extensions if

911
00:43:13,579 --> 00:43:18,259
you want to get things as a set of

912
00:43:15,318 --> 00:43:20,119
strings like that so anyway taking a

913
00:43:18,259 --> 00:43:23,630
look at handmade render group so we've

914
00:43:20,119 --> 00:43:25,130
got some some things here that sort of

915
00:43:23,630 --> 00:43:26,749
use like loaded bitmap so you can kind

916
00:43:25,130 --> 00:43:29,710
of see we look through here and we look

917
00:43:26,748 --> 00:43:33,498
at like what our problems are gonna be

918
00:43:29,710 --> 00:43:36,650
if we want to share if we want render

919
00:43:33,498 --> 00:43:38,358
groups definitions to sort of propagate

920
00:43:36,650 --> 00:43:40,670
through here we look at what problems

921
00:43:38,358 --> 00:43:42,380
we're probably gonna have and what

922
00:43:40,670 --> 00:43:44,809
you'll notice is there's really not a

923
00:43:42,380 --> 00:43:46,489
lot in here besides loaded bitmap that's

924
00:43:44,809 --> 00:43:49,069
really a problem for us right look

925
00:43:46,489 --> 00:43:50,809
loaded bitmaps really the only sticking

926
00:43:49,068 --> 00:43:54,108
point I don't know if anyone uses

927
00:43:50,809 --> 00:43:57,559
environment map I'm gonna look and see

928
00:43:54,108 --> 00:44:01,038
if they do so if we look down here if I

929
00:43:57,559 --> 00:44:07,609
just nurse this and say no no more

930
00:44:01,039 --> 00:44:09,890
environment so I want to see who cares

931
00:44:07,608 --> 00:44:12,619
right

932
00:44:09,889 --> 00:44:15,889
so this yeah so this stuff is just not

933
00:44:12,619 --> 00:44:18,019
used at the moment so I'm I'm gonna just

934
00:44:15,889 --> 00:44:19,969
nurse this as well we just we just

935
00:44:18,018 --> 00:44:21,348
fundamentally don't use any of this

936
00:44:19,969 --> 00:44:24,879
stuff it was some rendering experiment

937
00:44:21,349 --> 00:44:24,880
stuff we use before right

938
00:44:32,039 --> 00:44:43,119
I'm just gonna get rid of it yeah you

939
00:44:41,710 --> 00:44:44,619
can I mean you can just see this this

940
00:44:43,119 --> 00:44:53,220
stuff is just I mean it's just nonsense

941
00:44:44,619 --> 00:44:53,220
right just old stuff

942
00:44:58,860 --> 00:45:07,050
I mean this whole thing it's not

943
00:45:00,239 --> 00:45:14,599
necessary just old stuff that we never

944
00:45:07,050 --> 00:45:14,600
got rid of yeah

945
00:45:27,449 --> 00:45:33,339
all right so I think that's all good

946
00:45:31,809 --> 00:45:36,759
this is just from the renderer test

947
00:45:33,340 --> 00:45:39,280
stuff right so getting rid of that

948
00:45:36,760 --> 00:45:40,780
environment map is just fine right like

949
00:45:39,280 --> 00:45:42,340
nobody cares about that we can remove

950
00:45:40,780 --> 00:45:45,460
that entirely if we want to it's just

951
00:45:42,340 --> 00:45:46,780
not a thing I'm just gonna look through

952
00:45:45,460 --> 00:45:51,190
here and see what other sorts of stuff

953
00:45:46,780 --> 00:45:53,950
we have to deal with rectangle - I I'm

954
00:45:51,190 --> 00:45:56,200
not sure where that's defined but we can

955
00:45:53,949 --> 00:45:59,379
put that into our types because that's

956
00:45:56,199 --> 00:46:12,000
also a type sort of thing so let's grab

957
00:45:59,380 --> 00:46:15,400
that out clean these up eventually -

958
00:46:12,000 --> 00:46:21,849
let's take a look so no no care about

959
00:46:15,400 --> 00:46:32,470
that em 4 by 4 M soon that's also in

960
00:46:21,849 --> 00:46:35,139
math yeah about mmm that's just an M 4x4

961
00:46:32,469 --> 00:46:43,469
with its inverse together for

962
00:46:35,139 --> 00:46:51,279
convenience Jimmy again loaded bitmap is

963
00:46:43,469 --> 00:46:53,589
there what's this illegal use of this

964
00:46:51,280 --> 00:46:57,390
type as an expression oh that's just

965
00:46:53,590 --> 00:47:02,260
yeah no we don't care about that at all

966
00:46:57,389 --> 00:47:05,710
s 32 from Z so s 3 - from Z is our

967
00:47:02,260 --> 00:47:08,470
little parser there that can turn that

968
00:47:05,710 --> 00:47:12,550
can parse numbers again that's just a 2i

969
00:47:08,469 --> 00:47:16,169
so we can also again temporarily we can

970
00:47:12,550 --> 00:47:19,350
make that be something that we're gonna

971
00:47:16,170 --> 00:47:19,349
stub out

972
00:47:37,300 --> 00:47:42,680
okay and so then we've got some like

973
00:47:39,829 --> 00:47:44,239
calls on the rectangle to eye those

974
00:47:42,679 --> 00:47:46,000
would be nice to have we got the safe

975
00:47:44,239 --> 00:47:49,009
ratio so that's just using our math

976
00:47:46,000 --> 00:47:50,630
library now which we want to include and

977
00:47:49,010 --> 00:47:54,740
we want that to be pull out a bowl

978
00:47:50,630 --> 00:47:55,970
that'll probably our next step so then

979
00:47:54,739 --> 00:47:57,889
we've got to start thinking about like

980
00:47:55,969 --> 00:47:59,419
the texture ops for allocating textures

981
00:47:57,889 --> 00:48:02,509
those sorts of things how we want those

982
00:47:59,420 --> 00:48:04,039
to go we can think about those a little

983
00:48:02,510 --> 00:48:06,680
bit more in depth I'm just trying to

984
00:48:04,039 --> 00:48:11,630
look through here so it looks this looks

985
00:48:06,679 --> 00:48:13,219
pretty reasonable right this is all none

986
00:48:11,630 --> 00:48:16,730
of this is particularly scary to me

987
00:48:13,219 --> 00:48:17,209
everything looks looks pretty good in

988
00:48:16,730 --> 00:48:19,789
here

989
00:48:17,210 --> 00:48:21,590
alright so in order to get us back on

990
00:48:19,789 --> 00:48:24,170
track of being able to compile the win

991
00:48:21,590 --> 00:48:26,000
through to render a test without the

992
00:48:24,170 --> 00:48:29,269
rest of handmade hero what I need to

993
00:48:26,000 --> 00:48:32,000
start looking at now is taking the parts

994
00:48:29,269 --> 00:48:34,579
of the renderer that are embedded in

995
00:48:32,000 --> 00:48:36,050
other things in handmade hero and

996
00:48:34,579 --> 00:48:39,679
pulling them out into their own thing

997
00:48:36,050 --> 00:48:42,380
right so if you think about what OpenGL

998
00:48:39,679 --> 00:48:45,859
is open jail is like the back end to our

999
00:48:42,380 --> 00:48:47,240
renderer right and so we want and you

1000
00:48:45,860 --> 00:48:49,789
know what I should actually get math in

1001
00:48:47,239 --> 00:48:51,769
here as well all right so let's these

1002
00:48:49,789 --> 00:48:54,110
are things that people will use with the

1003
00:48:51,769 --> 00:48:55,610
renderer we want the type stage right

1004
00:48:54,110 --> 00:48:57,440
and you can see that that is now pretty

1005
00:48:55,610 --> 00:48:59,750
straightforward right the types of H is

1006
00:48:57,440 --> 00:49:02,570
just a very simple file that just has

1007
00:48:59,750 --> 00:49:06,199
some very basic things in it in terms of

1008
00:49:02,570 --> 00:49:09,470
I could clean up these types or they're

1009
00:49:06,199 --> 00:49:12,949
concise as well yeah some very basic

1010
00:49:09,469 --> 00:49:15,169
things in it those things are just the

1011
00:49:12,949 --> 00:49:16,699
way that we write code so anyone who's

1012
00:49:15,170 --> 00:49:19,730
going to use our stuff has to be

1013
00:49:16,699 --> 00:49:23,179
familiar with it that's totally fine and

1014
00:49:19,730 --> 00:49:24,500
so that all is reasonable I might want

1015
00:49:23,179 --> 00:49:26,419
to clean this file up a little bit into

1016
00:49:24,500 --> 00:49:27,619
wrist break into sections but it's it's

1017
00:49:26,420 --> 00:49:32,420
there's nothing really wrong with it's

1018
00:49:27,619 --> 00:49:34,170
fine as it is right so the next thing I

1019
00:49:32,420 --> 00:49:36,869
want to do is take a look at math and

1020
00:49:34,170 --> 00:49:39,599
see to what extent that is also okay

1021
00:49:36,869 --> 00:49:46,529
right um so I'm gonna take a look at the

1022
00:49:39,599 --> 00:49:52,019
math here is our math dot H and let's

1023
00:49:46,530 --> 00:49:53,760
just look through that it's pretty clean

1024
00:49:52,019 --> 00:49:58,860
just just sets of math opps there's

1025
00:49:53,760 --> 00:50:00,180
nothing weird in there really so if you

1026
00:49:58,860 --> 00:50:03,450
want to use our math I think you're

1027
00:50:00,179 --> 00:50:05,609
pretty good to go right

1028
00:50:03,449 --> 00:50:09,269
that's all seems pretty pretty fine to

1029
00:50:05,610 --> 00:50:13,430
me so let's see how that goes and so

1030
00:50:09,269 --> 00:50:13,429
these here are these are the intrinsics

1031
00:50:14,510 --> 00:50:30,510
and again that all seems pretty good too

1032
00:50:18,329 --> 00:50:31,920
so I think all of that's fine now we may

1033
00:50:30,510 --> 00:50:35,970
want to weld some of those things

1034
00:50:31,920 --> 00:50:45,180
together we'll have to think about how

1035
00:50:35,969 --> 00:50:49,980
we want to do that exactly let me go

1036
00:50:45,179 --> 00:50:54,449
ahead and grab this out here where are

1037
00:50:49,980 --> 00:51:00,469
those things where do we include X mm in

1038
00:50:54,449 --> 00:51:00,469
trim oh here no

1039
00:51:01,869 --> 00:51:11,729
it's in here because it turns out um hmm

1040
00:51:12,239 --> 00:51:18,009
well what I'm gonna do for that since I

1041
00:51:15,458 --> 00:51:21,149
want these to be out here as well I

1042
00:51:18,009 --> 00:51:27,099
think what I want to do is kind of get

1043
00:51:21,150 --> 00:51:30,160
these pieces here I think I kind of want

1044
00:51:27,099 --> 00:51:39,009
those to come out here and I want this

1045
00:51:30,159 --> 00:51:43,389
to be inside here right there we go

1046
00:51:39,009 --> 00:51:45,670
all right 32 max I'm not sure where we

1047
00:51:43,389 --> 00:51:52,659
defined that so we'll have to grab that

1048
00:51:45,670 --> 00:51:54,699
somewhere it's in platform oh so we have

1049
00:51:52,659 --> 00:51:58,748
the maxes they should all be out in that

1050
00:51:54,699 --> 00:52:08,259
type styles well yeah that stuff should

1051
00:51:58,748 --> 00:52:10,598
all be in here there we go um so again

1052
00:52:08,259 --> 00:52:12,728
that all seems pretty fair so now you

1053
00:52:10,599 --> 00:52:15,369
can use all of the mass stuff which we

1054
00:52:12,728 --> 00:52:16,928
also want we want to be able to ship the

1055
00:52:15,369 --> 00:52:20,890
mass stuff out we want to be able to

1056
00:52:16,929 --> 00:52:23,949
ship the types file and yeah all of that

1057
00:52:20,889 --> 00:52:29,998
stuff we kind of want to just work and I

1058
00:52:23,949 --> 00:52:29,999
think it should relatively good right

1059
00:52:32,300 --> 00:52:38,600
yeah um so then like I said I think

1060
00:52:36,380 --> 00:52:40,910
we're down at that point just the stuff

1061
00:52:38,599 --> 00:52:42,409
that really needs to be like like we're

1062
00:52:40,909 --> 00:52:43,969
this is all the errors that there are in

1063
00:52:42,409 --> 00:52:46,460
fact we're not even we're not even at

1064
00:52:43,969 --> 00:52:48,949
they're like 100 like you know the thing

1065
00:52:46,460 --> 00:52:58,000
where it's like more errors than I can

1066
00:52:48,949 --> 00:53:00,829
display oh no right so in this case I

1067
00:52:58,000 --> 00:53:02,300
think we're in good shape I don't know

1068
00:53:00,829 --> 00:53:04,969
how much time I have left in this stream

1069
00:53:02,300 --> 00:53:08,210
so I've got another entire hour left so

1070
00:53:04,969 --> 00:53:12,730
what I focused on here now is I want to

1071
00:53:08,210 --> 00:53:17,000
pull out the render into sort of its own

1072
00:53:12,730 --> 00:53:19,610
like more of its own proper defined

1073
00:53:17,000 --> 00:53:21,980
thing because that's what we're going

1074
00:53:19,610 --> 00:53:24,559
we're trying to extricate it from our

1075
00:53:21,980 --> 00:53:27,679
program and say it's no longer

1076
00:53:24,559 --> 00:53:28,820
intermingled it can just stand by itself

1077
00:53:27,679 --> 00:53:30,619
because it was already kind of

1078
00:53:28,820 --> 00:53:34,070
architected that way like we didn't

1079
00:53:30,619 --> 00:53:37,489
really make it particularly hard-coded

1080
00:53:34,070 --> 00:53:39,620
like it's fairly standalone as it is and

1081
00:53:37,489 --> 00:53:41,750
that was because OpenGL was kept to the

1082
00:53:39,619 --> 00:53:43,099
side like we don't sprinkle OpenGL code

1083
00:53:41,750 --> 00:53:45,920
throughout our apps so we kind of

1084
00:53:43,099 --> 00:53:49,279
already did a bunch of that anyway so

1085
00:53:45,920 --> 00:53:51,139
now the goal here is to move more more

1086
00:53:49,280 --> 00:53:54,530
towards that and so we have a couple

1087
00:53:51,139 --> 00:53:56,509
things about our renderer like so we've

1088
00:53:54,530 --> 00:53:58,190
got this notion of render group and then

1089
00:53:56,510 --> 00:54:01,310
we've also got this notion of render

1090
00:53:58,190 --> 00:54:04,940
right and you can see that they're kind

1091
00:54:01,309 --> 00:54:07,519
of weirdly like separated and I don't

1092
00:54:04,940 --> 00:54:10,610
really like too much about the way these

1093
00:54:07,519 --> 00:54:13,670
go there they're sort of they're sort of

1094
00:54:10,610 --> 00:54:15,349
flipping things there's just too much

1095
00:54:13,670 --> 00:54:17,630
kind of chaos there it's unclear who's

1096
00:54:15,349 --> 00:54:21,319
doing what and if you look at how these

1097
00:54:17,630 --> 00:54:22,940
are broken down like handmade renderer

1098
00:54:21,320 --> 00:54:25,160
is weird because handmade render

1099
00:54:22,940 --> 00:54:27,500
actually has like all this it's really

1100
00:54:25,159 --> 00:54:29,480
the software renderer that ended up in

1101
00:54:27,500 --> 00:54:31,820
here as well as some renderer stuff

1102
00:54:29,480 --> 00:54:33,380
right so it's just these two files we

1103
00:54:31,820 --> 00:54:35,780
never really cared much about figuring

1104
00:54:33,380 --> 00:54:37,490
out how they go so what I want to do is

1105
00:54:35,780 --> 00:54:40,490
I might start by like breaking these up

1106
00:54:37,489 --> 00:54:43,399
into what was actually the software

1107
00:54:40,489 --> 00:54:46,179
renderer should now be its own like file

1108
00:54:43,400 --> 00:54:50,820
that's completely isolated

1109
00:54:46,179 --> 00:54:54,279
for rendering and so much like we have

1110
00:54:50,820 --> 00:54:57,090
handmade OpenGL right what I want to do

1111
00:54:54,280 --> 00:55:02,320
there is I want to have handmade like

1112
00:54:57,090 --> 00:55:04,450
software renderer ok dot cpp or

1113
00:55:02,320 --> 00:55:06,640
something like this right so i want to

1114
00:55:04,449 --> 00:55:09,039
specifically say that the software

1115
00:55:06,639 --> 00:55:11,139
renderer lives in its own file that's

1116
00:55:09,039 --> 00:55:13,920
like a different thing and i'm just

1117
00:55:11,139 --> 00:55:18,159
gonna grab anything i see that's just

1118
00:55:13,920 --> 00:55:24,010
obviously software renderer i want those

1119
00:55:18,159 --> 00:55:25,869
things to go into this file right so we

1120
00:55:24,010 --> 00:55:29,140
know that our Ayaka stuff where we were

1121
00:55:25,869 --> 00:55:31,659
doing profiling that was obviously meant

1122
00:55:29,139 --> 00:55:36,460
for this situation so all this stuff

1123
00:55:31,659 --> 00:55:38,379
should have gone in there right I don't

1124
00:55:36,460 --> 00:55:39,760
know if global renders your living

1125
00:55:38,380 --> 00:55:43,240
samples I think that's a separate thing

1126
00:55:39,760 --> 00:55:46,930
so draw rectangle is obviously one of

1127
00:55:43,239 --> 00:55:48,729
these right bilinear sample st like all

1128
00:55:46,929 --> 00:55:49,179
the stuff sample environment map that we

1129
00:55:48,730 --> 00:55:51,940
nerfed

1130
00:55:49,179 --> 00:55:57,960
all of this is all software renderer

1131
00:55:51,940 --> 00:56:00,849
draw a bitmap right change saturation

1132
00:55:57,960 --> 00:56:03,159
was like guess some kind of a post pass

1133
00:56:00,849 --> 00:56:04,539
thing for a drum mat yeah you can see

1134
00:56:03,159 --> 00:56:06,179
all these things are back tank wickley

1135
00:56:04,539 --> 00:56:09,429
these were all saw for render features

1136
00:56:06,179 --> 00:56:17,019
that we implemented their blend render

1137
00:56:09,429 --> 00:56:22,239
target clear rectangle render commands

1138
00:56:17,019 --> 00:56:26,289
to bitmap do top render work software

1139
00:56:22,239 --> 00:56:28,419
render commands all this stuff right all

1140
00:56:26,289 --> 00:56:34,960
that stuff is actually the software

1141
00:56:28,420 --> 00:56:36,820
renderer ok um and what I might do I

1142
00:56:34,960 --> 00:56:39,190
might even do some renaming here I

1143
00:56:36,820 --> 00:56:40,870
apologize to people who like to count on

1144
00:56:39,190 --> 00:56:43,500
the names of files for things I know

1145
00:56:40,869 --> 00:56:43,500
it's not great

1146
00:56:49,039 --> 00:56:53,519
but like if we do handmade renderer

1147
00:56:51,329 --> 00:56:54,900
something handmade renderer or something

1148
00:56:53,518 --> 00:56:56,788
handmade renderer or something maybe

1149
00:56:54,900 --> 00:57:00,479
that helps to say like what's going on

1150
00:56:56,789 --> 00:57:02,729
with them so if I were to say for

1151
00:57:00,478 --> 00:57:07,318
example let me just save the stuff that

1152
00:57:02,728 --> 00:57:09,509
we just did so what I kind of want to do

1153
00:57:07,318 --> 00:57:14,068
here say okay like if I go to a handmade

1154
00:57:09,509 --> 00:57:20,219
code maybe what we do is say look the

1155
00:57:14,068 --> 00:57:21,958
OpenGL renderer and the software

1156
00:57:20,219 --> 00:57:24,420
renderer are kind of like two branches

1157
00:57:21,958 --> 00:57:26,818
of the same thing not branches really

1158
00:57:24,420 --> 00:57:28,679
but two versions of the same thing so

1159
00:57:26,818 --> 00:57:32,159
what I'm going to do is I'm actually

1160
00:57:28,679 --> 00:57:34,259
going to name them as such so this is

1161
00:57:32,159 --> 00:57:39,358
actually gonna be handmade renderer

1162
00:57:34,259 --> 00:57:49,438
software like so this is gonna be

1163
00:57:39,358 --> 00:57:51,449
handmade renderer OpenGL like so so then

1164
00:57:49,438 --> 00:57:54,048
you can kind of see like we've got the

1165
00:57:51,449 --> 00:57:57,239
OpenGL renderer the software renderer

1166
00:57:54,048 --> 00:57:59,670
and then here what we can do is say

1167
00:57:57,239 --> 00:58:02,999
these things will merge together into

1168
00:57:59,670 --> 00:58:04,979
like handmade renderer H so that there's

1169
00:58:02,998 --> 00:58:06,598
like the renderer then there's the

1170
00:58:04,978 --> 00:58:08,578
OpenGL implementation the renderer

1171
00:58:06,599 --> 00:58:10,160
there's the software you know

1172
00:58:08,579 --> 00:58:12,660
implication of the renderer and

1173
00:58:10,159 --> 00:58:14,699
eventually we can do like a D 3d version

1174
00:58:12,659 --> 00:58:23,699
of the renderer and a metal version of

1175
00:58:14,699 --> 00:58:25,528
the renderer right this is again some

1176
00:58:23,699 --> 00:58:29,099
pretty straightforward stuff right

1177
00:58:25,528 --> 00:58:30,509
nothing particularly weird about what's

1178
00:58:29,099 --> 00:58:34,019
going on there but just worth

1179
00:58:30,509 --> 00:58:37,199
understanding what I was trying to to

1180
00:58:34,018 --> 00:58:38,958
accomplish with that right so now what I

1181
00:58:37,199 --> 00:58:42,688
want to do is merge these two files

1182
00:58:38,958 --> 00:58:47,028
render and render group into a single

1183
00:58:42,688 --> 00:58:47,028
file that's just renderer dot H right

1184
00:58:53,039 --> 00:59:04,920
so I'm gonna load that up and so

1185
00:59:01,889 --> 00:59:08,639
rendered eh I'm gonna grab this whole

1186
00:59:04,920 --> 00:59:11,039
thing put it in there then I'm gonna

1187
00:59:08,639 --> 00:59:16,940
grab the CPP file and do the same thing

1188
00:59:11,039 --> 00:59:19,079
put all that in there

1189
00:59:16,940 --> 00:59:23,400
and then what I want to do is grab

1190
00:59:19,079 --> 00:59:34,700
render group and again do the same thing

1191
00:59:23,400 --> 00:59:34,700
like so and then again same thing here

1192
00:59:35,210 --> 00:59:45,300
okay so now I've just got those

1193
00:59:40,739 --> 00:59:48,118
completely sort of by themselves I want

1194
00:59:45,300 --> 00:59:50,670
to quickly switch just really do a

1195
00:59:48,119 --> 00:59:53,160
simple switch here to not compile our

1196
00:59:50,670 --> 00:59:55,740
test code now just so I can focus on

1197
00:59:53,159 --> 00:59:57,449
making sure other code builds so what

1198
00:59:55,739 --> 01:00:00,719
I'm going to do is I'm gonna change

1199
00:59:57,449 --> 01:00:05,368
these things that used to refer to the

1200
01:00:00,719 --> 01:00:11,608
old files and I'm gonna make sure that

1201
01:00:05,369 --> 01:00:19,380
we can include them here right oops like

1202
01:00:11,608 --> 01:00:21,210
so I think this is what we want to do I

1203
01:00:19,380 --> 01:00:29,150
don't actually know if we want that we

1204
01:00:21,210 --> 01:00:29,150
don't nothing yeah maybe we do find out

1205
01:00:29,670 --> 01:00:37,019
okay so what I want to do is I want to

1206
01:00:34,829 --> 01:00:45,089
get rid of everywhere that ink that

1207
01:00:37,018 --> 01:00:48,509
includes render group dot H so render

1208
01:00:45,088 --> 01:00:49,949
group dot H don't want it ever it's not

1209
01:00:48,510 --> 01:00:54,210
a thing anymore so we've got to deal

1210
01:00:49,949 --> 01:00:59,848
with that render dot H also not a thing

1211
01:00:54,210 --> 01:01:02,039
anymore so we got to deal with that so

1212
01:00:59,849 --> 01:01:04,500
anywhere that was getting included it

1213
01:01:02,039 --> 01:01:09,059
needs to stop it included and then we

1214
01:01:04,500 --> 01:01:13,349
can go from there right all right uh so

1215
01:01:09,059 --> 01:01:16,619
looking at here we just have a I think

1216
01:01:13,349 --> 01:01:20,068
this is probably just a case of get

1217
01:01:16,619 --> 01:01:22,440
bitmap not being included at the right

1218
01:01:20,068 --> 01:01:29,460
place where are we inside went through

1219
01:01:22,440 --> 01:01:32,970
handmade why isn't that just in handmade

1220
01:01:29,460 --> 01:01:38,220
renderer I thought that's what would

1221
01:01:32,969 --> 01:01:45,209
have been in here get bitmap it's not

1222
01:01:38,219 --> 01:01:55,739
where is get bitmap that's weird it's an

1223
01:01:45,210 --> 01:02:04,470
handmade asset this we will want to

1224
01:01:55,739 --> 01:02:07,288
untangle we will definitely want to

1225
01:02:04,469 --> 01:02:08,879
disentangle this and we can sort of see

1226
01:02:07,289 --> 01:02:12,839
how that's going to happen a little

1227
01:02:08,880 --> 01:02:16,220
later on but for now what I'm going to

1228
01:02:12,838 --> 01:02:16,219
do is I'm just gonna forward to clear it

1229
01:02:30,210 --> 01:02:45,199
same with load bitmap should be like

1230
01:02:41,480 --> 01:02:45,199
right here fairness

1231
01:02:50,050 --> 01:03:02,280
um and these are let me see that load

1232
01:02:57,760 --> 01:03:05,560
font again this is kind of just patching

1233
01:03:02,280 --> 01:03:08,560
so I'm I'm not really going to leave it

1234
01:03:05,559 --> 01:03:11,679
this way probably but I'm just don't I

1235
01:03:08,559 --> 01:03:19,380
don't want to disentangle those things

1236
01:03:11,679 --> 01:03:19,379
quite yet well suis got

1237
01:03:52,699 --> 01:04:04,049
okay so one problem we're gonna have

1238
01:04:00,900 --> 01:04:08,130
here is if we those were for including

1239
01:04:04,050 --> 01:04:10,230
specifically the renderer dot cpp so i

1240
01:04:08,130 --> 01:04:12,990
don't know to what extent we could just

1241
01:04:10,230 --> 01:04:16,769
not do that i'm gonna double check to

1242
01:04:12,989 --> 01:04:18,179
see what we actually need from there but

1243
01:04:16,769 --> 01:04:20,940
really we just want to disentangle those

1244
01:04:18,179 --> 01:04:23,009
things to probably eventually as well so

1245
01:04:20,940 --> 01:04:25,349
yeah so it's just it's only aspect ratio

1246
01:04:23,010 --> 01:04:27,660
fit so really what i probably want to do

1247
01:04:25,349 --> 01:04:32,579
for now is if i can get away with it and

1248
01:04:27,659 --> 01:04:33,719
let's see if i can to just not like how

1249
01:04:32,579 --> 01:04:40,049
much can i get away with not having

1250
01:04:33,719 --> 01:04:42,359
these entirely okay good so aspect ratio

1251
01:04:40,050 --> 01:04:43,740
fit we still need to have however so

1252
01:04:42,360 --> 01:04:45,420
what i'm going to do is just take aspect

1253
01:04:43,739 --> 01:04:47,250
ratio fit and since that's just a math

1254
01:04:45,420 --> 01:04:48,630
operation that's all that is i'm just

1255
01:04:47,250 --> 01:04:51,050
going to put that into the mass math

1256
01:04:48,630 --> 01:04:51,050
library

1257
01:04:56,010 --> 01:05:06,690
and then I think we're good to go right

1258
01:04:58,559 --> 01:05:09,989
okay oops that's not what I wanted to

1259
01:05:06,690 --> 01:05:12,990
run now so I just want to check to make

1260
01:05:09,989 --> 01:05:16,309
sure things still running okay and it is

1261
01:05:12,989 --> 01:05:19,769
so that's good

1262
01:05:16,309 --> 01:05:21,509
close this down oh I don't need to close

1263
01:05:19,769 --> 01:05:26,909
that down why did I do that just need to

1264
01:05:21,510 --> 01:05:28,470
switch it back to the other one so what

1265
01:05:26,909 --> 01:05:31,949
I want to do at this point is I want to

1266
01:05:28,469 --> 01:05:36,509
I want to now ping-pong back to the

1267
01:05:31,949 --> 01:05:38,989
other test bed and again sort of

1268
01:05:36,510 --> 01:05:40,200
progress down that road as I was

1269
01:05:38,989 --> 01:05:46,289
beforehand

1270
01:05:40,199 --> 01:05:51,839
right okay so here's our renderer opengl

1271
01:05:46,289 --> 01:05:55,250
includes we need also the handmade

1272
01:05:51,840 --> 01:05:58,680
renderer open field here like that

1273
01:05:55,250 --> 01:06:00,840
handmade renderer dot cpp doesn't need

1274
01:05:58,679 --> 01:06:04,108
to be included yet so we'll talk about

1275
01:06:00,840 --> 01:06:09,510
that a second that this actually should

1276
01:06:04,108 --> 01:06:11,519
be in here okay so now we need to start

1277
01:06:09,510 --> 01:06:13,590
looking at the things in handmade

1278
01:06:11,519 --> 01:06:16,550
renderer that are actually sort of

1279
01:06:13,590 --> 01:06:16,550
wedded to

1280
01:06:23,659 --> 01:06:30,629
we need to look at the things that are

1281
01:06:26,369 --> 01:06:31,889
wedded to the platform layer right and

1282
01:06:30,630 --> 01:06:33,930
we need to figure out how those are

1283
01:06:31,889 --> 01:06:36,509
gonna get pulled out and how we're gonna

1284
01:06:33,929 --> 01:06:39,899
look at them now if you remember

1285
01:06:36,510 --> 01:06:42,660
correctly inside the platform layer we

1286
01:06:39,900 --> 01:06:44,400
have these game render commands and

1287
01:06:42,659 --> 01:06:48,089
these game render settings these texture

1288
01:06:44,400 --> 01:06:51,980
artists these are all obviously just

1289
01:06:48,090 --> 01:06:51,980
renderer things right

1290
01:06:52,190 --> 01:06:57,659
these should actually be defined in the

1291
01:06:56,010 --> 01:07:00,180
renderer and as we start to simplify

1292
01:06:57,659 --> 01:07:01,949
them we'll take more charge of them so

1293
01:07:00,179 --> 01:07:05,759
these are not really in the these

1294
01:07:01,949 --> 01:07:08,069
actually should be in renderer dot H now

1295
01:07:05,760 --> 01:07:11,910
because that's actually the stuff we're

1296
01:07:08,070 --> 01:07:13,650
going to be dealing with right so as we

1297
01:07:11,909 --> 01:07:16,679
clean these things up we want to start

1298
01:07:13,650 --> 01:07:18,180
cleaning these things up - I don't know

1299
01:07:16,679 --> 01:07:21,000
about the game last screen buffer that's

1300
01:07:18,179 --> 01:07:22,500
praten that really a thing that's sort

1301
01:07:21,000 --> 01:07:23,940
of a separate part for the software

1302
01:07:22,500 --> 01:07:26,309
renderer I think so we need to kind of

1303
01:07:23,940 --> 01:07:29,159
think about why that is even out here in

1304
01:07:26,309 --> 01:07:32,369
the first place kind of a good question

1305
01:07:29,159 --> 01:07:36,690
but this stuff here wants to be moved

1306
01:07:32,369 --> 01:07:39,900
into the render definition almost

1307
01:07:36,690 --> 01:07:41,700
certainly and worked from there now

1308
01:07:39,900 --> 01:07:44,010
nothing else in here is particularly

1309
01:07:41,699 --> 01:07:47,309
related to that I don't think this is

1310
01:07:44,010 --> 01:07:49,830
all like input and memory allocation and

1311
01:07:47,309 --> 01:07:54,389
that sort of stuff things we don't care

1312
01:07:49,829 --> 01:07:56,219
about in that sense so I don't know like

1313
01:07:54,389 --> 01:07:59,519
I'm gonna go ahead and search for what

1314
01:07:56,219 --> 01:08:06,349
that off-screen buffer who uses that

1315
01:07:59,519 --> 01:08:09,929
still so it's only in win32 hand-made

1316
01:08:06,349 --> 01:08:15,980
here for this so I kind of feel like

1317
01:08:09,929 --> 01:08:15,980
that where does that get passed through

1318
01:08:19,170 --> 01:08:23,429
can't see anything my head's in the way

1319
01:08:35,149 --> 01:08:40,409
so that's a win 30th - off-screen buffer

1320
01:08:38,100 --> 01:08:42,000
so game last review no I'm just gonna go

1321
01:08:40,409 --> 01:08:43,680
ahead and see what happens if I nerf

1322
01:08:42,000 --> 01:09:04,199
that thing

1323
01:08:43,680 --> 01:09:19,289
I also need game render settings in

1324
01:09:04,199 --> 01:09:21,989
there let's do that ah so these actually

1325
01:09:19,289 --> 01:09:26,909
need to be defined somewhere and in fact

1326
01:09:21,989 --> 01:09:29,039
this is this stuff is not really where I

1327
01:09:26,909 --> 01:09:32,010
would like it to be anyway

1328
01:09:29,039 --> 01:09:34,800
I feel like this stuff should have been

1329
01:09:32,010 --> 01:09:38,280
in here to begin with so I'm gonna move

1330
01:09:34,800 --> 01:09:41,400
this out to someplace that's actually

1331
01:09:38,279 --> 01:09:44,939
doing comparison calls right and then I

1332
01:09:41,399 --> 01:09:46,139
take this hour equal bit for the game

1333
01:09:44,939 --> 01:09:48,509
render settings and I'm actually gonna

1334
01:09:46,140 --> 01:09:54,690
put that into the renderer because

1335
01:09:48,510 --> 01:09:56,039
that's where it belongs right we could

1336
01:09:54,689 --> 01:10:01,859
put it out here I don't know where we

1337
01:09:56,039 --> 01:10:04,949
want to put it exactly but right ok so

1338
01:10:01,859 --> 01:10:07,589
again this is temporarily speaking we

1339
01:10:04,949 --> 01:10:09,000
can look at that as a pre death and then

1340
01:10:07,590 --> 01:10:11,550
we can kind of go from there

1341
01:10:09,000 --> 01:10:16,109
loaded bitmaps we can also look at as a

1342
01:10:11,550 --> 01:10:21,329
pre death for the moment I don't know

1343
01:10:16,109 --> 01:10:23,069
how long that'll hold up so inside our

1344
01:10:21,329 --> 01:10:26,159
render test you can see all this still

1345
01:10:23,069 --> 01:10:28,829
works here we've got our light data with

1346
01:10:26,159 --> 01:10:34,670
stuff that was in the platform layer as

1347
01:10:28,829 --> 01:10:34,670
well should have been moved out

1348
01:10:35,310 --> 01:10:41,150
didn't we where's our light data with

1349
01:10:47,180 --> 01:10:59,240
where's that stuff to find light data

1350
01:10:52,439 --> 01:11:02,429
with ah so that's in handmade lighting

1351
01:10:59,239 --> 01:11:02,429
[Music]

1352
01:11:06,408 --> 01:11:11,210
hmm hmm I say

1353
01:11:19,149 --> 01:11:23,869
so I'm not entirely certain how we want

1354
01:11:22,100 --> 01:11:29,539
to deal with that for now I think what

1355
01:11:23,869 --> 01:11:47,149
I'll say is that is going to get put out

1356
01:11:29,539 --> 01:11:48,470
here temporarily I don't want that to

1357
01:11:47,149 --> 01:11:52,099
stick around forever but for now it's

1358
01:11:48,470 --> 01:11:54,409
totally fine so now we're mostly down

1359
01:11:52,100 --> 01:11:56,690
again to sort of things that we were

1360
01:11:54,409 --> 01:11:59,510
using in here I don't know how exactly I

1361
01:11:56,689 --> 01:12:01,729
want these to work so we're just going

1362
01:11:59,510 --> 01:12:03,440
to kind of wing these for now because I

1363
01:12:01,729 --> 01:12:09,769
don't want them to be really something

1364
01:12:03,439 --> 01:12:16,159
that we're focusing on but for memory is

1365
01:12:09,770 --> 01:12:21,850
equal size a B Y these weren't

1366
01:12:16,159 --> 01:12:29,409
capitalized this can just be a mem comp

1367
01:12:21,850 --> 01:12:32,350
zero a B sighs believe should do it is

1368
01:12:29,409 --> 01:12:41,539
whitespace drink

1369
01:12:32,350 --> 01:12:43,970
so string comp we actually I see so

1370
01:12:41,539 --> 01:12:46,010
string comp we actually have two

1371
01:12:43,970 --> 01:12:50,570
versions of one that takes a size and

1372
01:12:46,010 --> 01:12:56,860
one that doesn't right so that's

1373
01:12:50,569 --> 01:12:59,859
actually string end comp which I believe

1374
01:12:56,859 --> 01:12:59,859
exists

1375
01:13:02,510 --> 01:13:08,489
I'm not really allowed to define those

1376
01:13:05,309 --> 01:13:12,210
looks like multi define them so what

1377
01:13:08,488 --> 01:13:26,718
I'll do is I'm just gonna stub them out

1378
01:13:12,210 --> 01:13:28,920
like so so again nothing we just

1379
01:13:26,719 --> 01:13:35,939
particularly spectacular happening here

1380
01:13:28,920 --> 01:13:49,230
but I just don't want to deal with these

1381
01:13:35,939 --> 01:13:49,888
at the moment go yeah that seems what is

1382
01:13:49,229 --> 01:13:52,098
the problem

1383
01:13:49,889 --> 01:13:52,099
Oh

1384
01:14:05,340 --> 01:14:15,730
so this wants stars

1385
01:14:09,789 --> 01:14:17,739
well why it's a void star there we go so

1386
01:14:15,729 --> 01:14:22,539
we just need is white space and zero

1387
01:14:17,739 --> 01:14:25,090
struct again those are pretty easy to to

1388
01:14:22,539 --> 01:14:34,060
deal with so I'm just going to go ahead

1389
01:14:25,090 --> 01:14:35,829
and do them light buffer this instead of

1390
01:14:34,060 --> 01:14:45,100
using zero struct here I think I might

1391
01:14:35,829 --> 01:14:51,699
just do this so that we don't have to

1392
01:14:45,100 --> 01:14:57,210
worry about that and then is white space

1393
01:14:51,699 --> 01:14:57,210
is pretty straightforward as well I

1394
01:15:01,350 --> 01:15:10,450
don't know if this exists in the C

1395
01:15:06,489 --> 01:15:19,899
runtime library it might it would

1396
01:15:10,449 --> 01:15:23,369
probably be in like the care care the

1397
01:15:19,899 --> 01:15:33,689
the carrot h or whatever it's called

1398
01:15:23,369 --> 01:15:33,689
c type is space what else you got for me

1399
01:15:50,929 --> 01:15:55,118
this is the character classification

1400
01:15:52,458 --> 01:15:55,118
stuff

1401
01:16:12,948 --> 01:16:20,389
so I think that's all we really need

1402
01:16:14,719 --> 01:16:30,198
would be if space right it seems pretty

1403
01:16:20,390 --> 01:16:35,480
straightforward so what I'm gonna say is

1404
01:16:30,198 --> 01:16:37,809
is whitespace is just is space see how

1405
01:16:35,479 --> 01:16:37,809
that goes

1406
01:16:38,738 --> 01:16:45,319
so now I think we're good the only

1407
01:16:41,060 --> 01:16:47,030
problem we have here is this in handmade

1408
01:16:45,319 --> 01:16:52,670
lighting

1409
01:16:47,029 --> 01:16:54,259
I think this now

1410
01:16:52,670 --> 01:16:56,000
oh well that's including render group

1411
01:16:54,260 --> 01:16:58,460
that's a pity which is not supposed to

1412
01:16:56,000 --> 01:17:09,920
be so that's probably it

1413
01:16:58,460 --> 01:17:12,409
where is render group dot H being so

1414
01:17:09,920 --> 01:17:14,719
shouldn't that have taken care of it cuz

1415
01:17:12,409 --> 01:17:19,929
renderer H is what has it in it right

1416
01:17:14,719 --> 01:17:22,730
renderer dot H there's light data with

1417
01:17:19,929 --> 01:17:24,409
right there and it's gonna include it

1418
01:17:22,729 --> 01:17:27,649
beforehand oh you know what it's

1419
01:17:24,409 --> 01:17:29,269
probably just inside the win32 handmade

1420
01:17:27,649 --> 01:17:33,170
version just remember this get built

1421
01:17:29,270 --> 01:17:34,940
separately that's almost certainly the

1422
01:17:33,170 --> 01:17:36,440
problem right there I also don't know if

1423
01:17:34,939 --> 01:17:43,839
handmade lighting actually needs to be

1424
01:17:36,439 --> 01:17:43,839
in there does it so

1425
01:17:48,670 --> 01:18:01,609
this right here needs to allocate

1426
01:17:51,859 --> 01:18:10,569
lighting boxes and it needs to know how

1427
01:18:01,609 --> 01:18:10,569
big those are right apparently

1428
01:18:15,849 --> 01:18:20,889
which is a little weird because the

1429
01:18:18,310 --> 01:18:24,690
platform layer doesn't really need to

1430
01:18:20,889 --> 01:18:24,690
know that much about those things but

1431
01:18:26,099 --> 01:18:29,460
but okay

1432
01:18:42,510 --> 01:18:50,880
I mean I'm sort of okay with it so for

1433
01:18:49,380 --> 01:18:56,609
now I guess

1434
01:18:50,880 --> 01:19:00,809
mmm well I mean the lighting never

1435
01:18:56,609 --> 01:19:03,779
actually like this doesn't really need

1436
01:19:00,809 --> 01:19:10,889
to be here does it like this doesn't

1437
01:19:03,779 --> 01:19:15,630
flow through to the that that doesn't

1438
01:19:10,889 --> 01:19:18,090
really flow through to the actual

1439
01:19:15,630 --> 01:19:22,788
renderer like isn't that something that

1440
01:19:18,090 --> 01:19:28,979
should be done as part of the game side

1441
01:19:22,788 --> 01:19:30,448
you know because it kind of feels like

1442
01:19:28,979 --> 01:19:34,530
it like it kind of feels like that

1443
01:19:30,448 --> 01:19:48,109
really isn't part of the render in that

1444
01:19:34,529 --> 01:19:50,939
sense so if we go into the renderer here

1445
01:19:48,109 --> 01:19:59,248
and I look to see you know does anyone

1446
01:19:50,939 --> 01:20:03,708
ever look at the light box is part of

1447
01:19:59,248 --> 01:20:03,708
things I'm pretty sure the answer is no

1448
01:20:09,050 --> 01:20:13,610
it's not what's called called flipping

1449
01:20:11,189 --> 01:20:22,248
geo renderer right or sorry renderer

1450
01:20:13,609 --> 01:20:22,248
OpenGL because it never looks at those

1451
01:20:24,460 --> 01:20:38,710
so that's kind of wrong to me and I I

1452
01:20:34,060 --> 01:20:40,690
don't love that because it should it

1453
01:20:38,710 --> 01:20:43,210
should only really exist during the

1454
01:20:40,689 --> 01:20:44,679
portion of time like I think that needs

1455
01:20:43,210 --> 01:20:47,739
to get cleaned up I guess is what I'm

1456
01:20:44,680 --> 01:20:50,050
saying because at some point the light

1457
01:20:47,739 --> 01:20:58,449
data gets set and that's all there is

1458
01:20:50,050 --> 01:21:01,180
and you don't really need to look into

1459
01:20:58,449 --> 01:21:03,159
it in the way that this is having it

1460
01:21:01,180 --> 01:21:06,520
look into it so I think I'm gonna go

1461
01:21:03,159 --> 01:21:08,590
ahead and get rid of that so rather than

1462
01:21:06,520 --> 01:21:10,030
clean this one up and patch it for now I

1463
01:21:08,590 --> 01:21:12,940
think I'm gonna actually focus on

1464
01:21:10,029 --> 01:21:16,989
getting rid of that so here's the

1465
01:21:12,939 --> 01:21:19,269
renderer and we got to go through and

1466
01:21:16,989 --> 01:21:23,289
start cleaning this up but before we do

1467
01:21:19,270 --> 01:21:26,710
this light box count light boxes thing I

1468
01:21:23,289 --> 01:21:28,779
feel like that's got to go I just don't

1469
01:21:26,710 --> 01:21:31,989
feel like that's an appropriate place

1470
01:21:28,779 --> 01:21:35,979
for that I feel like the appropriate

1471
01:21:31,989 --> 01:21:38,109
place for the light boxes is actually in

1472
01:21:35,979 --> 01:21:40,750
the just the standard render group

1473
01:21:38,109 --> 01:21:42,009
that's actually having the the push you

1474
01:21:40,750 --> 01:21:47,050
know that's actually pushing stuff on

1475
01:21:42,010 --> 01:21:48,789
here I feel like this is actually where

1476
01:21:47,050 --> 01:21:52,659
that should be because it's only

1477
01:21:48,789 --> 01:21:54,760
relevant for the pack all right sorry

1478
01:21:52,659 --> 01:21:55,930
about that OBS just crashed fortunately

1479
01:21:54,760 --> 01:21:58,810
I noticed so we didn't really lose

1480
01:21:55,930 --> 01:22:01,360
anything this is where we were but like

1481
01:21:58,810 --> 01:22:04,180
okay so hopefully the recording is

1482
01:22:01,359 --> 01:22:06,009
intact I don't know if it is or not but

1483
01:22:04,180 --> 01:22:07,300
hopefully it'll actually be salvageable

1484
01:22:06,010 --> 01:22:09,030
or at least the most part salvageable

1485
01:22:07,300 --> 01:22:11,590
and these two could be welded together

1486
01:22:09,029 --> 01:22:14,590
anyway what I was saying is I wanted to

1487
01:22:11,590 --> 01:22:16,960
put the light boxes in here because they

1488
01:22:14,590 --> 01:22:19,449
really only exist for the amount of time

1489
01:22:16,960 --> 01:22:21,279
that the rep they're relevant to the

1490
01:22:19,449 --> 01:22:23,349
render group right and so what I'd like

1491
01:22:21,279 --> 01:22:26,259
to do is say when you enable lighting

1492
01:22:23,350 --> 01:22:28,150
then you can push light boxes and if you

1493
01:22:26,260 --> 01:22:29,770
don't enable lighting then you don't and

1494
01:22:28,149 --> 01:22:31,449
that's all there is to it right so the

1495
01:22:29,770 --> 01:22:36,070
light boxes I just want to have them be

1496
01:22:31,449 --> 01:22:38,260
gone so in here where the operating

1497
01:22:36,069 --> 01:22:39,819
system previously was out getting light

1498
01:22:38,260 --> 01:22:42,340
since for you I don't want it to be

1499
01:22:39,819 --> 01:22:44,710
allocating light boxes for you what I

1500
01:22:42,340 --> 01:22:51,730
want it to do instead is to have those

1501
01:22:44,710 --> 01:22:54,149
come directly from here like so so this

1502
01:22:51,729 --> 01:22:56,589
way the light box has come out of the

1503
01:22:54,149 --> 01:23:00,639
out of the render group which is where I

1504
01:22:56,590 --> 01:23:03,489
wanted them to come out of because they

1505
01:23:00,640 --> 01:23:06,520
they are computer to CPU side at the

1506
01:23:03,488 --> 01:23:08,500
moment and until we actually know what

1507
01:23:06,520 --> 01:23:11,200
we might like if we eventually do

1508
01:23:08,500 --> 01:23:12,670
computation of lighting on the GPU side

1509
01:23:11,199 --> 01:23:14,319
that's fine but we should figure that

1510
01:23:12,670 --> 01:23:16,300
out first before we start sending them

1511
01:23:14,319 --> 01:23:17,590
down the card or something we kind of

1512
01:23:16,300 --> 01:23:18,880
setup as if we're going to send these

1513
01:23:17,590 --> 01:23:21,130
down the car but we're not sending them

1514
01:23:18,880 --> 01:23:23,079
down to the card so they really should

1515
01:23:21,130 --> 01:23:27,760
not be in that part of the code at the

1516
01:23:23,079 --> 01:23:31,840
moment that's my opinion on that so this

1517
01:23:27,760 --> 01:23:34,210
right here when we do the the lighting

1518
01:23:31,840 --> 01:23:37,600
test stuff that's gonna just use the

1519
01:23:34,210 --> 01:23:40,000
group information directly so this group

1520
01:23:37,600 --> 01:23:42,910
commands thing it's not gonna have to

1521
01:23:40,000 --> 01:23:45,850
deal with that the light point index I

1522
01:23:42,909 --> 01:23:48,849
don't remember to what extent that he's

1523
01:23:45,850 --> 01:23:51,820
actually used inside the render itself

1524
01:23:48,850 --> 01:23:57,090
it might not be I'm not sure let me just

1525
01:23:51,819 --> 01:23:57,090
take a quick look at that and see so I

1526
01:23:58,859 --> 01:24:06,659
don't actually see that the light point

1527
01:24:04,270 --> 01:24:06,660
index

1528
01:24:09,630 --> 01:24:18,429
is just an index so that also can just

1529
01:24:14,289 --> 01:24:21,760
come out I think right that can just be

1530
01:24:18,429 --> 01:24:27,609
done in here and we don't have to deal

1531
01:24:21,760 --> 01:24:29,469
with it elsewhere I don't think right so

1532
01:24:27,609 --> 01:24:32,198
I believe that just means that this

1533
01:24:29,469 --> 01:24:38,289
transfers into a group thing so just

1534
01:24:32,198 --> 01:24:42,238
this says that and then that's all

1535
01:24:38,289 --> 01:24:44,229
coming out of the right place this is

1536
01:24:42,238 --> 01:24:50,709
now just looking at the group

1537
01:24:44,229 --> 01:24:52,419
exclusively which is what we want and I

1538
01:24:50,710 --> 01:25:07,658
don't even know if it needs that anymore

1539
01:24:52,420 --> 01:25:09,489
you just find out all right I so now

1540
01:25:07,658 --> 01:25:12,789
what we need to do though is actually

1541
01:25:09,488 --> 01:25:18,158
allocate those right so those do have to

1542
01:25:12,789 --> 01:25:23,380
really get used so you know we now have

1543
01:25:18,158 --> 01:25:26,619
this code when we go to start the render

1544
01:25:23,380 --> 01:25:33,880
group up so in here where we actually

1545
01:25:26,619 --> 01:25:35,738
initialize a render group so in here

1546
01:25:33,880 --> 01:25:38,020
where we actually initialize a render

1547
01:25:35,738 --> 01:25:42,519
group what we want to do in this case is

1548
01:25:38,020 --> 01:25:44,860
we want to initialize the lighting

1549
01:25:42,520 --> 01:25:48,460
information as well because otherwise

1550
01:25:44,859 --> 01:25:50,380
we'd never get any right so we can Stern

1551
01:25:48,460 --> 01:25:52,989
off with it being point to zero when you

1552
01:25:50,380 --> 01:25:55,840
do enable lighting though when you make

1553
01:25:52,988 --> 01:25:59,319
that call that's when you actually would

1554
01:25:55,840 --> 01:26:01,600
have to allocate memory for it right

1555
01:25:59,319 --> 01:26:04,840
when you come in here now you'd have to

1556
01:26:01,600 --> 01:26:07,360
set these light boxes to be something

1557
01:26:04,840 --> 01:26:11,640
where you actually are going to use the

1558
01:26:07,359 --> 01:26:11,639
memory right for them

1559
01:26:15,520 --> 01:26:21,260
problem is when we call enable lighting

1560
01:26:18,229 --> 01:26:23,269
we haven't passed it anything with which

1561
01:26:21,260 --> 01:26:25,400
it can get memory and so that's an

1562
01:26:23,270 --> 01:26:29,090
obvious problem that we need to rectify

1563
01:26:25,399 --> 01:26:30,469
here and so that's what we're gonna do

1564
01:26:29,090 --> 01:26:32,210
now

1565
01:26:30,469 --> 01:26:33,680
in world mode which is the only place

1566
01:26:32,210 --> 01:26:38,380
where enabled lighting actually gets

1567
01:26:33,680 --> 01:26:42,829
called you can see here where we do a

1568
01:26:38,380 --> 01:26:51,800
enable lighting then we put push the

1569
01:26:42,829 --> 01:26:54,409
Lighting's on and yeah whatever yeah

1570
01:26:51,800 --> 01:26:56,180
this is because we put them on the stack

1571
01:26:54,409 --> 01:26:57,409
so they're transfer at first and then

1572
01:26:56,180 --> 01:26:58,730
yeah it's kind of nuts the way that

1573
01:26:57,409 --> 01:27:00,769
happens we can probably make that a

1574
01:26:58,729 --> 01:27:03,799
little bit clearer too anyway when we do

1575
01:27:00,770 --> 01:27:05,540
enable lighting here and then the push

1576
01:27:03,800 --> 01:27:07,969
lighting call happens this should

1577
01:27:05,539 --> 01:27:09,469
probably just be one in the same when

1578
01:27:07,969 --> 01:27:12,199
you enable lighting it should just push

1579
01:27:09,469 --> 01:27:22,130
the lighting that's probably what should

1580
01:27:12,199 --> 01:27:24,769
happen because you can't do it any other

1581
01:27:22,130 --> 01:27:26,810
way right I mean that's how that has to

1582
01:27:24,770 --> 01:27:29,270
work so I think we might want to do

1583
01:27:26,810 --> 01:27:30,980
there is just just combine those two so

1584
01:27:29,270 --> 01:27:36,070
if we take a look at the push lighting

1585
01:27:30,979 --> 01:27:38,569
call which is this this part right here

1586
01:27:36,069 --> 01:27:44,059
no I push render element is defined like

1587
01:27:38,569 --> 01:27:44,479
only right there but it is so yeah there

1588
01:27:44,060 --> 01:27:47,630
you go

1589
01:27:44,479 --> 01:27:49,819
so I'm going to just take this whole bit

1590
01:27:47,630 --> 01:27:51,500
gonna move that down here I'm gonna say

1591
01:27:49,819 --> 01:27:53,719
enable lighting is just gonna be pushed

1592
01:27:51,500 --> 01:27:55,219
lighting from now on and so what you're

1593
01:27:53,719 --> 01:27:58,159
gonna do is you're gonna pass the bounce

1594
01:27:55,219 --> 01:28:01,340
and the light source there this right

1595
01:27:58,159 --> 01:28:02,988
here will happen in here and then we'll

1596
01:28:01,340 --> 01:28:07,239
get back to the part we were trying to

1597
01:28:02,988 --> 01:28:07,238
before where we were talking about the

1598
01:28:07,539 --> 01:28:11,289
where we're gonna get the memory

1599
01:28:17,050 --> 01:28:24,050
so when we do the push lady here then

1600
01:28:20,510 --> 01:28:27,800
what happens is eventually when we're

1601
01:28:24,050 --> 01:28:29,809
done we do a lighting test thing that's

1602
01:28:27,800 --> 01:28:32,619
sort of like when we retire the lighting

1603
01:28:29,809 --> 01:28:35,599
so from here to there that's sort of the

1604
01:28:32,618 --> 01:28:37,488
lifetime of it right now in here we

1605
01:28:35,599 --> 01:28:40,219
should have a transient arena that we

1606
01:28:37,488 --> 01:28:46,839
can use and we shouldn't be able to have

1607
01:28:40,219 --> 01:28:50,420
some sort of a temporary way that we can

1608
01:28:46,840 --> 01:28:56,828
allocate some some lighting on that and

1609
01:28:50,420 --> 01:28:56,828
then move along right so I believe

1610
01:29:07,689 --> 01:29:20,829
if I go look where's my begin scent all

1611
01:29:21,069 --> 01:29:28,099
yeah so I believe if I go look at my

1612
01:29:24,769 --> 01:29:30,469
begin sim call and how that works right

1613
01:29:28,099 --> 01:29:32,569
you can see how it just does a temporary

1614
01:29:30,469 --> 01:29:35,239
it starts a temporary memory thing

1615
01:29:32,569 --> 01:29:40,299
that's really all I want to do here too

1616
01:29:35,238 --> 01:29:43,158
so inside where we do our lighting I

1617
01:29:40,300 --> 01:29:46,099
want to do the same thing right I I know

1618
01:29:43,158 --> 01:29:47,719
that the transient arena is a fine place

1619
01:29:46,099 --> 01:29:49,279
to stick the memory for the lighting

1620
01:29:47,719 --> 01:29:51,920
because it's just stuff that gets used

1621
01:29:49,279 --> 01:29:54,649
temporarily so what I should be able to

1622
01:29:51,920 --> 01:29:59,149
do here is where I do a push lighting I

1623
01:29:54,649 --> 01:30:01,969
should be able to sort of do a light

1624
01:29:59,149 --> 01:30:05,319
memory like so and I should be able to

1625
01:30:01,969 --> 01:30:09,170
do an end temporary memory light memory

1626
01:30:05,319 --> 01:30:16,929
like so and this can just be trans state

1627
01:30:09,170 --> 01:30:19,158
trainer ena or whatever right yeah all

1628
01:30:16,929 --> 01:30:20,630
right so what I want to do is when I

1629
01:30:19,158 --> 01:30:22,279
push the lighting there then we come

1630
01:30:20,630 --> 01:30:24,319
down here and then we've used the

1631
01:30:22,279 --> 01:30:26,300
lighting and so we can end the temporary

1632
01:30:24,319 --> 01:30:29,090
menu feel lighter in it now this sim

1633
01:30:26,300 --> 01:30:30,769
here is actually going to have its own

1634
01:30:29,090 --> 01:30:32,479
temporary memory so this is just really

1635
01:30:30,769 --> 01:30:35,030
we could just do temporary memory for

1636
01:30:32,479 --> 01:30:36,530
this whole thing and we probably should

1637
01:30:35,029 --> 01:30:38,179
just unify those two together instead of

1638
01:30:36,529 --> 01:30:42,288
having an open and closed the temporary

1639
01:30:38,179 --> 01:30:46,130
memory like that for no real reason but

1640
01:30:42,288 --> 01:30:48,078
it's fine I thought we just looked and

1641
01:30:46,130 --> 01:30:50,679
it was oh it's it's not called bad it's

1642
01:30:48,078 --> 01:30:50,679
called rhinorrhea

1643
01:30:55,119 --> 01:30:59,750
there we go

1644
01:30:57,380 --> 01:31:01,579
so now what we need to do is make push

1645
01:30:59,750 --> 01:31:03,050
lighting actually do that allocation it

1646
01:31:01,579 --> 01:31:08,090
needs to do that allocation in a

1647
01:31:03,050 --> 01:31:10,880
sensible way if we go into the render

1648
01:31:08,090 --> 01:31:12,199
group right here we don't want to be

1649
01:31:10,880 --> 01:31:14,659
calling wind through to allocate memory

1650
01:31:12,199 --> 01:31:20,059
obviously we want to do is call push

1651
01:31:14,659 --> 01:31:23,389
array we need to pass the array size and

1652
01:31:20,060 --> 01:31:26,570
the thing that we're actually using here

1653
01:31:23,390 --> 01:31:29,869
we don't care about the not restored bit

1654
01:31:26,569 --> 01:31:33,319
at the moment that's sort of a separate

1655
01:31:29,869 --> 01:31:36,199
issue so we can put that in here and we

1656
01:31:33,319 --> 01:31:37,460
can put that to temporariness so what

1657
01:31:36,199 --> 01:31:43,699
I'm going to do here just say we've got

1658
01:31:37,460 --> 01:31:47,000
a memory arena and off we go now we need

1659
01:31:43,699 --> 01:31:53,059
to look at the pushed lighting call that

1660
01:31:47,000 --> 01:31:55,510
is defined there wait there's another

1661
01:31:53,060 --> 01:31:55,510
one

1662
01:32:03,569 --> 01:32:17,099
is that a bug that might be a bug we're

1663
01:32:15,390 --> 01:32:28,500
not supposed to be calling that twice

1664
01:32:17,100 --> 01:32:30,630
are we oh and that's in the wrong one I

1665
01:32:28,500 --> 01:32:32,069
now you know what I need to do now now

1666
01:32:30,630 --> 01:32:35,960
that we're doing this I need to get rid

1667
01:32:32,069 --> 01:32:35,960
of those other files there we go

1668
01:32:37,369 --> 01:32:44,819
that seems like a bug hold for one

1669
01:32:43,590 --> 01:32:47,340
moment while I remove those other two

1670
01:32:44,819 --> 01:32:50,009
files also I'm just gonna get rid of

1671
01:32:47,340 --> 01:32:54,659
them real quick so I don't accidentally

1672
01:32:50,010 --> 01:32:58,560
edit them again right so we want render

1673
01:32:54,659 --> 01:33:01,529
group and render we want these to go

1674
01:32:58,560 --> 01:33:03,240
away so it's gonna pop out here I do

1675
01:33:01,529 --> 01:33:09,920
this sometimes just gonna make a retired

1676
01:33:03,239 --> 01:33:09,920
folder this is where old files go to die

1677
01:33:10,189 --> 01:33:17,239
so what I want to do here is I want to

1678
01:33:12,569 --> 01:33:19,619
just go ahead and and find out if that

1679
01:33:17,239 --> 01:33:21,630
that just seems like a bug we just

1680
01:33:19,619 --> 01:33:24,920
didn't notice I don't think we're

1681
01:33:21,630 --> 01:33:24,920
supposed to be pushing those on twice

1682
01:33:28,279 --> 01:33:34,739
I'm I'm nervous about that that that

1683
01:33:31,710 --> 01:33:36,000
does not unless I'm forgetting something

1684
01:33:34,739 --> 01:33:40,760
I don't think push lighting is supposed

1685
01:33:36,000 --> 01:33:40,760
to happen twice right

1686
01:33:45,470 --> 01:33:53,010
yeah I don't I don't know what to say

1687
01:33:47,550 --> 01:33:57,539
about that I'm gonna see what happens

1688
01:33:53,010 --> 01:34:00,989
here but that just seems real bad and I

1689
01:33:57,539 --> 01:34:03,569
don't know what's going on so I'm just

1690
01:34:00,989 --> 01:34:06,599
gonna go ahead and pretend that that's

1691
01:34:03,569 --> 01:34:08,460
okay and nobody saw it and it's fine

1692
01:34:06,600 --> 01:34:11,630
we'll go ahead and debug it and see

1693
01:34:08,460 --> 01:34:14,579
what's going on but that was weird

1694
01:34:11,630 --> 01:34:16,470
okay so we know we want to analyze to

1695
01:34:14,579 --> 01:34:19,559
that flight point indexes light point

1696
01:34:16,470 --> 01:34:23,310
index 0 is an unused one I guess light

1697
01:34:19,560 --> 01:34:27,660
box count needs to get initialized to 0

1698
01:34:23,310 --> 01:34:29,520
it will be because it automatically when

1699
01:34:27,659 --> 01:34:31,559
you do a push lighting it automatically

1700
01:34:29,520 --> 01:34:32,700
initially it was initialized to 0 just

1701
01:34:31,560 --> 01:34:35,640
way back here in the group are rid

1702
01:34:32,699 --> 01:34:42,000
already so I'm just gonna assert that

1703
01:34:35,640 --> 01:34:43,440
group light box count equals 0 because I

1704
01:34:42,000 --> 01:34:44,880
don't want people calling push lighting

1705
01:34:43,439 --> 01:34:48,809
twice since obviously that's something

1706
01:34:44,880 --> 01:34:50,430
we might do and I don't think we're

1707
01:34:48,810 --> 01:34:52,500
supposed to ever push lighting twice

1708
01:34:50,430 --> 01:34:54,780
we're only supposed to push the lighting

1709
01:34:52,500 --> 01:34:56,369
once now we could do a thing that when

1710
01:34:54,779 --> 01:34:59,849
you push the lighting again it just

1711
01:34:56,369 --> 01:35:02,279
resets your lighting and that's fine but

1712
01:34:59,850 --> 01:35:06,060
at the moment since we're not ever doing

1713
01:35:02,279 --> 01:35:10,289
that I would really prefer it if we were

1714
01:35:06,060 --> 01:35:15,330
not if no one was allowed to do that

1715
01:35:10,289 --> 01:35:17,069
right alright so there's the lighting

1716
01:35:15,329 --> 01:35:24,000
it's working just fine

1717
01:35:17,069 --> 01:35:26,389
so I think we're good there so that's

1718
01:35:24,000 --> 01:35:26,390
all fine

1719
01:35:27,849 --> 01:35:41,360
okay so I am now building both things

1720
01:35:33,889 --> 01:35:44,989
correct building the renderer testbed

1721
01:35:41,359 --> 01:35:50,868
and I'm building the renderer proper

1722
01:35:44,988 --> 01:35:53,988
okay yeah okay uh so now we have to

1723
01:35:50,868 --> 01:35:55,429
start looking at these and crunching

1724
01:35:53,988 --> 01:35:56,959
them down into something that we

1725
01:35:55,429 --> 01:35:59,118
actually want because there's still

1726
01:35:56,960 --> 01:36:00,349
quite a bit of intermingling here and

1727
01:35:59,118 --> 01:36:02,929
the biggest thing that we're gonna have

1728
01:36:00,349 --> 01:36:05,090
to do you start is the texture

1729
01:36:02,929 --> 01:36:06,199
management side of things for sure the

1730
01:36:05,090 --> 01:36:09,980
reason that the biggest thing we have to

1731
01:36:06,198 --> 01:36:11,149
do is because for the most part most of

1732
01:36:09,979 --> 01:36:14,689
things that we're doing in the render

1733
01:36:11,149 --> 01:36:16,670
right now are not game specific like we

1734
01:36:14,689 --> 01:36:19,519
just have textured vertices that you

1735
01:36:16,670 --> 01:36:21,800
send down and it fills them right so

1736
01:36:19,520 --> 01:36:24,139
it's pretty straight forward and that

1737
01:36:21,800 --> 01:36:27,020
would just generalize anyone who wants

1738
01:36:24,139 --> 01:36:30,319
to call that stuff just canned there's

1739
01:36:27,020 --> 01:36:32,480
just not a lot to it so the big place

1740
01:36:30,319 --> 01:36:34,279
that right now we're tightly coupled to

1741
01:36:32,479 --> 01:36:35,779
the app and what we're gonna spend you

1742
01:36:34,279 --> 01:36:37,429
know pretty much all of next stream

1743
01:36:35,779 --> 01:36:38,408
doing we're almost done with this first

1744
01:36:37,429 --> 01:36:41,539
string

1745
01:36:38,408 --> 01:36:43,939
he's texture management because that's

1746
01:36:41,539 --> 01:36:47,738
the place where the renderer and the

1747
01:36:43,939 --> 01:36:50,868
asset system are linked together and so

1748
01:36:47,738 --> 01:36:53,299
that needs to be generalized into

1749
01:36:50,868 --> 01:36:54,948
something that will work both outside of

1750
01:36:53,300 --> 01:36:58,880
handmade hero and inside of handmade

1751
01:36:54,948 --> 01:37:02,769
hero because we don't want the renderer

1752
01:36:58,880 --> 01:37:07,270
to care where the textures came from

1753
01:37:02,770 --> 01:37:07,270
that's that's the crucial thing

1754
01:37:10,399 --> 01:37:18,019
we don't want that so that's we're gonna

1755
01:37:13,578 --> 01:37:19,488
spend the next dream doing but the first

1756
01:37:18,019 --> 01:37:20,030
thing we're gonna do here is just see

1757
01:37:19,488 --> 01:37:24,408
what we've got

1758
01:37:20,029 --> 01:37:25,578
in terms of initialization and getting

1759
01:37:24,408 --> 01:37:27,679
the render working here I just want to

1760
01:37:25,578 --> 01:37:30,918
do a quick spin through this code and

1761
01:37:27,679 --> 01:37:32,449
see what's going on so if we if we pop

1762
01:37:30,918 --> 01:37:33,889
back over to went through to hand-made I

1763
01:37:32,448 --> 01:37:37,839
want to look at that display buffer and

1764
01:37:33,889 --> 01:37:40,038
window call that's this call right here

1765
01:37:37,840 --> 01:37:43,279
so what I want to do is replace that

1766
01:37:40,038 --> 01:37:46,099
with the opengl only version that's this

1767
01:37:43,279 --> 01:37:49,458
so it's what calls OpenGL renderer

1768
01:37:46,099 --> 01:37:53,208
commands with draw region window with

1769
01:37:49,458 --> 01:37:55,998
window height I want to know what all

1770
01:37:53,208 --> 01:37:57,198
that should look like so first I'm going

1771
01:37:55,998 --> 01:37:59,059
to do is I'm going to look at what that

1772
01:37:57,198 --> 01:38:01,578
draw region is you could see that that's

1773
01:37:59,059 --> 01:38:05,840
a rectangle tool I so what I want to do

1774
01:38:01,578 --> 01:38:11,688
is fill out this rectangle to I with

1775
01:38:05,840 --> 01:38:20,510
something sensible let me just see what

1776
01:38:11,689 --> 01:38:22,309
we've got there so if I want to I can

1777
01:38:20,510 --> 01:38:26,110
kind of just use the rectum in dim

1778
01:38:22,309 --> 01:38:28,458
probably to create my rectangle to I

1779
01:38:26,109 --> 01:38:30,408
because what I know is that well I've

1780
01:38:28,458 --> 01:38:34,748
just really all I need to do is just

1781
01:38:30,408 --> 01:38:38,208
make something that's the right size for

1782
01:38:34,748 --> 01:38:39,639
my open for my window right that's

1783
01:38:38,208 --> 01:38:41,809
that's really all I need at the moment

1784
01:38:39,639 --> 01:38:51,909
so what I'm gonna do here is I'm just

1785
01:38:41,809 --> 01:38:51,909
gonna say I've got my I don't know

1786
01:38:52,689 --> 01:38:56,269
display region well you know what draw

1787
01:38:55,429 --> 01:38:59,149
region was fine

1788
01:38:56,269 --> 01:39:01,729
well you know don't if it ain't broke

1789
01:38:59,149 --> 01:39:05,599
don't fix it so I want to make a draw

1790
01:39:01,729 --> 01:39:07,999
region here that I can pass and I'm

1791
01:39:05,599 --> 01:39:11,269
gonna actually make it so that the draw

1792
01:39:07,998 --> 01:39:14,090
region is just whatever the well you

1793
01:39:11,269 --> 01:39:16,340
know what no why even do that why not

1794
01:39:14,090 --> 01:39:20,899
just use the aspect ratio it just call

1795
01:39:16,340 --> 01:39:22,609
that we're using before like we could do

1796
01:39:20,899 --> 01:39:24,199
the aspect ratio fit just to make sure

1797
01:39:22,609 --> 01:39:25,809
we're still bleeding properly

1798
01:39:24,198 --> 01:39:33,948
we could we could just do that right

1799
01:39:25,809 --> 01:39:37,849
because it's a good test so I'm still

1800
01:39:33,948 --> 01:39:40,998
gonna say aspect ratio fit and we're

1801
01:39:37,849 --> 01:39:46,550
gonna say width and height here in terms

1802
01:39:40,998 --> 01:39:47,899
of what the target is I guess and then

1803
01:39:46,550 --> 01:39:49,579
we've got the dimension width and height

1804
01:39:47,899 --> 01:39:51,679
so what I'm gonna say is look let's

1805
01:39:49,578 --> 01:39:56,569
pretend we always want a sixteen by nine

1806
01:39:51,679 --> 01:39:58,908
window like so and then let's say that

1807
01:39:56,569 --> 01:40:00,408
we've got the dimension wit and height

1808
01:39:58,908 --> 01:40:03,109
width and height that's what the window

1809
01:40:00,408 --> 01:40:05,929
actually has and I think that'll give us

1810
01:40:03,109 --> 01:40:08,118
what we want out the back

1811
01:40:05,929 --> 01:40:11,359
don't quote me on that because I don't

1812
01:40:08,118 --> 01:40:14,598
actually know if it's true

1813
01:40:11,359 --> 01:40:19,458
so here I'm going to go ahead and get my

1814
01:40:14,599 --> 01:40:25,760
window width and my window height and

1815
01:40:19,458 --> 01:40:29,988
pretend I have those and then I'm going

1816
01:40:25,760 --> 01:40:31,340
to call all this stuff so here's the

1817
01:40:29,988 --> 01:40:33,259
window width and height how do I get

1818
01:40:31,340 --> 01:40:35,840
that well for those of you who remember

1819
01:40:33,260 --> 01:40:36,979
I mean I guess I can just go look it up

1820
01:40:35,840 --> 01:40:38,538
in here but you know it's just get

1821
01:40:36,979 --> 01:40:44,780
client rect and they subtracted two it's

1822
01:40:38,538 --> 01:40:51,609
not particularly glamorous you can see

1823
01:40:44,779 --> 01:40:51,609
it here pretty straightforward right

1824
01:40:55,689 --> 01:41:11,269
not like to it alright um so our main

1825
01:41:05,510 --> 01:41:17,210
problem now is just how do I actually

1826
01:41:11,270 --> 01:41:21,470
know what you know what commands to

1827
01:41:17,210 --> 01:41:22,579
render for my test well that's now where

1828
01:41:21,470 --> 01:41:25,310
we start to get into the snuffleupagus

1829
01:41:22,579 --> 01:41:27,289
stuff right so what we're gonna do and

1830
01:41:25,310 --> 01:41:29,270
it'll probably take us tomorrow till

1831
01:41:27,289 --> 01:41:33,050
tomorrow to get there what we want to do

1832
01:41:29,270 --> 01:41:35,510
now is actually have a thing where if we

1833
01:41:33,050 --> 01:41:40,430
were to allocate these the same way that

1834
01:41:35,510 --> 01:41:41,780
we're doing in win32 hand-made where we

1835
01:41:40,430 --> 01:41:43,490
sort of say look let's allocate the

1836
01:41:41,779 --> 01:41:45,889
memory using went through to allocate or

1837
01:41:43,489 --> 01:41:48,619
whatever else we're doing if we go ahead

1838
01:41:45,890 --> 01:41:49,970
and do that code then make some things

1839
01:41:48,619 --> 01:41:51,529
that just clear the screen or something

1840
01:41:49,970 --> 01:41:53,270
let's make sure that that works or who

1841
01:41:51,529 --> 01:41:54,739
knows what right so that's all we're

1842
01:41:53,270 --> 01:41:57,230
really gonna start doing here and then

1843
01:41:54,739 --> 01:42:00,590
tomorrow if we get far enough at the end

1844
01:41:57,229 --> 01:42:04,519
of the stream that we do in in ten

1845
01:42:00,590 --> 01:42:05,569
minutes from now well we're gonna take a

1846
01:42:04,520 --> 01:42:10,070
break and then we're gonna do a stream

1847
01:42:05,569 --> 01:42:11,929
at two at two o'clock if we get far

1848
01:42:10,069 --> 01:42:13,609
enough getting everything together then

1849
01:42:11,930 --> 01:42:17,030
tomorrow we'll do is start figuring out

1850
01:42:13,609 --> 01:42:17,589
what we want for easy API access to it

1851
01:42:17,029 --> 01:42:19,909
right

1852
01:42:17,590 --> 01:42:21,529
but anyway so what I want to do here is

1853
01:42:19,909 --> 01:42:24,079
I want to actually make sure that all

1854
01:42:21,529 --> 01:42:25,699
the OpenGL stuff allocation stuff works

1855
01:42:24,079 --> 01:42:27,800
okay

1856
01:42:25,699 --> 01:42:29,960
and start to pull that stuff out into

1857
01:42:27,800 --> 01:42:34,489
something that makes reasonable sense

1858
01:42:29,960 --> 01:42:38,090
right so let's go ahead and do that I'm

1859
01:42:34,489 --> 01:42:40,399
gonna go ahead and look at where the

1860
01:42:38,090 --> 01:42:43,190
render cut so here's how we allocated

1861
01:42:40,399 --> 01:42:46,369
those render commands originally this is

1862
01:42:43,189 --> 01:42:47,899
where we did that right is right here so

1863
01:42:46,369 --> 01:42:48,800
what I want to do is is figure out how

1864
01:42:47,899 --> 01:42:50,420
to get that going

1865
01:42:48,800 --> 01:42:52,310
here's default render commands put

1866
01:42:50,420 --> 01:42:55,640
oversized push buffer with hide for

1867
01:42:52,310 --> 01:42:57,230
ticks blah blah blah right um so in

1868
01:42:55,640 --> 01:42:59,720
order to get that I need to have this

1869
01:42:57,229 --> 01:43:05,179
memory right this memory has got to come

1870
01:42:59,720 --> 01:43:07,260
from somewhere you know and and so

1871
01:43:05,180 --> 01:43:09,539
that's what I'm going to do here

1872
01:43:07,260 --> 01:43:12,210
and I need that win32 allocate memory

1873
01:43:09,538 --> 01:43:14,038
call to be available it's pretty

1874
01:43:12,210 --> 01:43:15,658
straightforward because we don't need to

1875
01:43:14,038 --> 01:43:18,689
do any of those things that we're doing

1876
01:43:15,658 --> 01:43:27,479
there we can just call virtue a like

1877
01:43:18,689 --> 01:43:31,669
ourselves so in here what we need to do

1878
01:43:27,479 --> 01:43:31,669
is just call virtual Alec as you can see

1879
01:43:34,578 --> 01:43:48,448
and so what I can do is just take this

1880
01:43:42,689 --> 01:43:51,538
basic allocation call come down here to

1881
01:43:48,448 --> 01:43:53,669
where this is happening and we don't

1882
01:43:51,538 --> 01:43:59,069
really have to do all of this shuffling

1883
01:43:53,670 --> 01:44:04,578
anymore I can just say hey textured

1884
01:43:59,069 --> 01:44:08,538
vertex equals this thing oops

1885
01:44:04,578 --> 01:44:08,538
still need the cast though

1886
01:44:15,479 --> 01:44:24,328
and we don't care about that so yeah

1887
01:44:20,310 --> 01:44:37,409
there's that allocation same thing would

1888
01:44:24,328 --> 01:44:39,179
be true here like so and let's just

1889
01:44:37,408 --> 01:44:52,649
compile that and get that down into

1890
01:44:39,179 --> 01:44:54,889
something oh I didn't do this one here

1891
01:44:52,649 --> 01:44:54,888
we go

1892
01:44:57,988 --> 01:45:02,428
and so now what I'd like to do is this

1893
01:44:59,760 --> 01:45:04,440
is I don't I can just call this every

1894
01:45:02,429 --> 01:45:06,090
time if I want to write so I can come

1895
01:45:04,439 --> 01:45:08,519
down here and when we do this draw

1896
01:45:06,090 --> 01:45:10,980
region nonsense what I can do here is

1897
01:45:08,520 --> 01:45:15,900
say oh all right let's you know make the

1898
01:45:10,979 --> 01:45:18,658
this stuff work that way

1899
01:45:15,899 --> 01:45:20,848
this will require our opengl stuff to

1900
01:45:18,658 --> 01:45:25,289
understand a little bit better how large

1901
01:45:20,849 --> 01:45:28,380
things are so when you have to actually

1902
01:45:25,289 --> 01:45:30,510
when it actually has to go deal with the

1903
01:45:28,380 --> 01:45:32,219
settings that's kind of kind of be a

1904
01:45:30,510 --> 01:45:33,659
separate issue that we'll have to look

1905
01:45:32,219 --> 01:45:37,260
at right but the rest of this stuff

1906
01:45:33,658 --> 01:45:39,929
stays the same and doesn't have to be

1907
01:45:37,260 --> 01:45:44,400
changed right so this stuff is all just

1908
01:45:39,929 --> 01:45:46,940
totally fine so let's go ahead and keep

1909
01:45:44,399 --> 01:45:46,939
going here

1910
01:45:51,529 --> 01:45:55,670
almost to the five-minute warning oh

1911
01:45:57,350 --> 01:46:11,910
that's not what I wanted I wanted to

1912
01:46:01,640 --> 01:46:13,470
call like get this okay we got a ramp to

1913
01:46:11,909 --> 01:46:15,529
take a little bit of a look at how that

1914
01:46:13,470 --> 01:46:20,460
stuff is it's playing out in the side

1915
01:46:15,529 --> 01:46:24,809
all right so I just I'm gonna start with

1916
01:46:20,460 --> 01:46:28,230
some basic stuff here I'm gonna pop over

1917
01:46:24,810 --> 01:46:30,210
to went through to render a test and

1918
01:46:28,229 --> 01:46:32,879
we're gonna start stepping through some

1919
01:46:30,210 --> 01:46:35,939
of this and taking a look at it and how

1920
01:46:32,880 --> 01:46:38,579
we want it to kind of work here right so

1921
01:46:35,939 --> 01:46:44,489
we're gonna enter in here we process our

1922
01:46:38,579 --> 01:46:46,680
messages to ask me where that came from

1923
01:46:44,489 --> 01:46:47,460
was this just something left over from

1924
01:46:46,680 --> 01:46:52,950
wait a minute

1925
01:46:47,460 --> 01:47:00,409
where was your what on earth did it just

1926
01:46:52,949 --> 01:47:00,409
do what was that breakpoint

1927
01:47:14,600 --> 01:47:21,650
I'm gonna go ahead and assume that is a

1928
01:47:18,850 --> 01:47:26,480
debug build prob that was a really weird

1929
01:47:21,649 --> 01:47:30,199
situation is that I didn't like what

1930
01:47:26,479 --> 01:47:33,319
that was doing yeah that was just a

1931
01:47:30,199 --> 01:47:36,429
release build you know em SVC can't do

1932
01:47:33,319 --> 01:47:42,349
bug release builds we know this is true

1933
01:47:36,430 --> 01:47:46,220
all right so anyway this is the draw

1934
01:47:42,350 --> 01:47:47,990
region of the screen here's the size of

1935
01:47:46,220 --> 01:47:49,520
those I have to go look to see how we

1936
01:47:47,989 --> 01:47:53,439
want to spec that stuff out so that's

1937
01:47:49,520 --> 01:47:58,790
gonna actually be more of a thing later

1938
01:47:53,439 --> 01:48:02,569
this all looks fine I'm not sure what

1939
01:47:58,789 --> 01:48:04,670
how the settings so the settings are

1940
01:48:02,569 --> 01:48:07,069
active the width and height in there and

1941
01:48:04,670 --> 01:48:09,079
this change command actually takes care

1942
01:48:07,069 --> 01:48:10,639
of that but the thing that's a little

1943
01:48:09,079 --> 01:48:17,479
weird about that is why is there another

1944
01:48:10,640 --> 01:48:20,720
so why are there two of those it's a

1945
01:48:17,479 --> 01:48:23,599
little bit weird and I want that to not

1946
01:48:20,720 --> 01:48:25,250
be weird so we kind of want to deal with

1947
01:48:23,600 --> 01:48:34,490
that a little bit better than we're

1948
01:48:25,250 --> 01:48:38,260
dealing with it now where does that come

1949
01:48:34,489 --> 01:48:38,260
from and how does it get retired

1950
01:49:03,989 --> 01:49:15,189
so this looks kind of bonkers and I

1951
01:49:13,569 --> 01:49:19,599
don't love it specifically what I'm

1952
01:49:15,189 --> 01:49:21,549
talking about here is forget all that

1953
01:49:19,600 --> 01:49:24,579
stuff get the render group you know

1954
01:49:21,550 --> 01:49:28,270
that's sort of our separate issue just

1955
01:49:24,579 --> 01:49:32,189
look into these the width and height

1956
01:49:28,270 --> 01:49:34,330
here oh okay all right no nevermind I

1957
01:49:32,189 --> 01:49:35,679
couldn't tell what was going on why we

1958
01:49:34,329 --> 01:49:37,899
had to him I thought there were two in

1959
01:49:35,680 --> 01:49:39,220
here it's not it just sets it for us so

1960
01:49:37,899 --> 01:49:40,299
this does what I want it this does

1961
01:49:39,220 --> 01:49:44,530
exactly what I wanted

1962
01:49:40,300 --> 01:49:45,130
everything's fine no need to panic we're

1963
01:49:44,529 --> 01:49:48,009
good to go

1964
01:49:45,130 --> 01:49:50,170
so my next test is just gonna be can I

1965
01:49:48,010 --> 01:49:52,960
actually do something with my render

1966
01:49:50,170 --> 01:49:57,880
commands here so I want to take a look

1967
01:49:52,960 --> 01:50:08,079
at my render group stuff here's the

1968
01:49:57,880 --> 01:50:10,869
renderer and so what I want to do is I

1969
01:50:08,079 --> 01:50:12,850
want to put in like something I can see

1970
01:50:10,869 --> 01:50:18,460
if it actually works so let's say I put

1971
01:50:12,850 --> 01:50:20,410
in a put in a push book clear not sure

1972
01:50:18,460 --> 01:50:22,920
to what extent we still support clearing

1973
01:50:20,409 --> 01:50:25,930
because it's kind of special-purpose now

1974
01:50:22,920 --> 01:50:29,140
the way the renderer works but we will

1975
01:50:25,930 --> 01:50:34,119
try I'm gonna clear to a nice wonderful

1976
01:50:29,140 --> 01:50:41,789
pink color I'm going to do a begin and

1977
01:50:34,119 --> 01:50:41,789
end render group here like so

1978
01:50:46,118 --> 01:50:50,210
I'm gonna pass null for the assets

1979
01:50:48,559 --> 01:50:53,300
because I'm not actually going to ask it

1980
01:50:50,210 --> 01:50:56,510
to load any assets and I'm gonna pass

1981
01:50:53,300 --> 01:50:59,199
zero for the generation ID

1982
01:50:56,510 --> 01:51:01,699
well we'll pass one because who knows

1983
01:50:59,198 --> 01:51:04,549
pixel width and pixel height for the

1984
01:51:01,698 --> 01:51:17,058
cliprect there that's just going to be

1985
01:51:04,550 --> 01:51:24,289
again these two right and so that should

1986
01:51:17,059 --> 01:51:33,789
be good to go and then I should be able

1987
01:51:24,289 --> 01:51:33,789
to do an end render group as well okay

1988
01:51:38,649 --> 01:51:45,948
right so this is right I think where we

1989
01:51:42,828 --> 01:51:48,019
start to run into the having to

1990
01:51:45,948 --> 01:51:50,328
extricate things which is what I said

1991
01:51:48,020 --> 01:51:54,199
we're gonna have to do next because now

1992
01:51:50,328 --> 01:51:57,049
I actually need a way of talking to the

1993
01:51:54,198 --> 01:51:59,388
renderer and that requires using this

1994
01:51:57,050 --> 01:52:03,079
code and as soon as I do that now we're

1995
01:51:59,389 --> 01:52:05,618
bound to the asset system right we're

1996
01:52:03,078 --> 01:52:10,299
instantly we instantly run up against

1997
01:52:05,618 --> 01:52:10,299
the problem where the asset system

1998
01:52:11,590 --> 01:52:18,130
becomes a necessary component since

1999
01:52:16,789 --> 01:52:22,939
we're right at the end

2000
01:52:18,130 --> 01:52:24,349
that's our miss top we have successfully

2001
01:52:22,939 --> 01:52:29,629
pulled everything out into a multi-use

2002
01:52:24,349 --> 01:52:32,389
thing and now our our goal is to sort of

2003
01:52:29,630 --> 01:52:34,760
make the texture stuff be something you

2004
01:52:32,389 --> 01:52:36,440
can use with two different asset systems

2005
01:52:34,760 --> 01:52:37,789
because I'm assuming that the person

2006
01:52:36,439 --> 01:52:42,888
who's going to use this is using their

2007
01:52:37,789 --> 01:52:47,149
own asset system not ours right I will

2008
01:52:42,889 --> 01:52:49,940
do a very brief QA probably only like 10

2009
01:52:47,149 --> 01:52:51,920
to 15 minutes so we literally we will at

2010
01:52:49,939 --> 01:52:53,419
most use the normal queue any time

2011
01:52:51,920 --> 01:52:57,600
because then we're gonna all take a

2012
01:52:53,420 --> 01:53:02,149
break and go get lunch and come back

2013
01:52:57,600 --> 01:53:02,150
after that so very brief Q&amp;A here

2014
01:53:23,720 --> 01:53:29,060
are we going to check the recording that

2015
01:53:26,119 --> 01:53:34,069
ended in an app crash yeah I can I don't

2016
01:53:29,060 --> 01:53:36,410
know if it's if it got trashed or not so

2017
01:53:34,069 --> 01:53:44,329
that would be this one here let's take a

2018
01:53:36,409 --> 01:53:45,889
look yeah it look it looks like it

2019
01:53:44,329 --> 01:53:48,559
worked

2020
01:53:45,890 --> 01:53:50,420
thankfully I switched to recording flvs

2021
01:53:48,560 --> 01:53:51,289
when I set up the new setup which

2022
01:53:50,420 --> 01:53:53,869
actually worked

2023
01:53:51,289 --> 01:53:56,060
I don't do mp4 SMR mp4s are just gone

2024
01:53:53,869 --> 01:54:00,649
when you crash so thankfully the flvs

2025
01:53:56,060 --> 01:54:05,570
are there if we have no questions we can

2026
01:54:00,649 --> 01:54:08,420
all go to lunch early and then come back

2027
01:54:05,569 --> 01:54:09,649
and take a look but I'll wait just a

2028
01:54:08,420 --> 01:54:17,569
little bit to make sure there's no

2029
01:54:09,649 --> 01:54:18,979
questions on what we did so far it's

2030
01:54:17,569 --> 01:54:20,569
fokin we're off to prison heroes jail I

2031
01:54:18,979 --> 01:54:22,879
don't think Vulcans worth well really

2032
01:54:20,569 --> 01:54:24,380
for anything but not because it doesn't

2033
01:54:22,880 --> 01:54:25,970
offer a performance gain it's because I

2034
01:54:24,380 --> 01:54:29,239
think you should just use whatever the

2035
01:54:25,970 --> 01:54:30,289
platform layer is now so I think what

2036
01:54:29,239 --> 01:54:35,239
you want to do if you're going to switch

2037
01:54:30,289 --> 01:54:39,380
away from OpenGL switch 2d 3d or metal

2038
01:54:35,239 --> 01:54:40,880
depending which one you're on because

2039
01:54:39,380 --> 01:54:42,380
I've been on this a couple times

2040
01:54:40,880 --> 01:54:45,380
Vulcan doesn't really have a reason to

2041
01:54:42,380 --> 01:54:48,680
exist anymore because since Apple is not

2042
01:54:45,380 --> 01:54:50,119
going to support anything but metal that

2043
01:54:48,680 --> 01:54:52,850
means you should write a metal layer on

2044
01:54:50,119 --> 01:54:53,840
on Mac Oz and iOS

2045
01:54:52,850 --> 01:54:55,910
that's just what you should do because

2046
01:54:53,840 --> 01:54:59,420
you want to be on the main path they are

2047
01:54:55,909 --> 01:55:01,550
not supporting anything else and so that

2048
01:54:59,420 --> 01:55:03,619
means if you have to do metal you lost

2049
01:55:01,550 --> 01:55:05,270
there's no reason to OpenGL you don't

2050
01:55:03,619 --> 01:55:07,340
get a you don't get a porting benefit

2051
01:55:05,270 --> 01:55:09,740
anymore so you might as well do metal on

2052
01:55:07,340 --> 01:55:13,610
mac us and then d 3d on on windows and

2053
01:55:09,739 --> 01:55:16,939
that's that so I don't I don't see any

2054
01:55:13,609 --> 01:55:18,859
point to to Vulcan it's now a middleman

2055
01:55:16,939 --> 01:55:21,349
so if you write to Vulcan you're

2056
01:55:18,859 --> 01:55:22,849
actually just writing on top of someone

2057
01:55:21,350 --> 01:55:25,130
else's API you should just written to

2058
01:55:22,850 --> 01:55:28,329
that API in the first place right cuz

2059
01:55:25,130 --> 01:55:28,329
you don't get a porting win anymore

2060
01:55:31,659 --> 01:55:35,359
well we take this opportunity implants

2061
01:55:33,590 --> 01:55:37,130
III back-end no we're never gonna

2062
01:55:35,359 --> 01:55:39,649
implement a d3d back until the games

2063
01:55:37,130 --> 01:55:42,859
done as long as we have one functioning

2064
01:55:39,649 --> 01:55:45,049
back-end that's fun you know we're done

2065
01:55:42,859 --> 01:55:47,000
and then only when we need to actually

2066
01:55:45,050 --> 01:55:50,300
do like finalized shipping stuff would

2067
01:55:47,000 --> 01:55:52,720
we would we implement more backends than

2068
01:55:50,300 --> 01:55:52,720
just one

2069
01:56:05,979 --> 01:56:12,189
lunch break is till about 1:45

2070
01:56:22,550 --> 01:56:27,989
are there practical solutions to

2071
01:56:25,710 --> 01:56:33,930
reducing the fill rate in a software

2072
01:56:27,989 --> 01:56:37,109
renderer yes but I'm not sure

2073
01:56:33,930 --> 01:56:40,050
I mean sure there's this all the same

2074
01:56:37,109 --> 01:56:44,159
tricks that GPUs use right like early Z

2075
01:56:40,050 --> 01:56:47,310
out and like storing blocks that have

2076
01:56:44,159 --> 01:56:50,340
their their max Z in them been Mac Z for

2077
01:56:47,310 --> 01:56:52,590
like early out testing stuff like that

2078
01:56:50,340 --> 01:56:56,239
testing whole blocks of alpha and not

2079
01:56:52,590 --> 01:56:56,239
filling them you know all that stuff

2080
01:56:58,069 --> 01:57:04,649
isn't every graphs API just a middleman

2081
01:57:00,630 --> 01:57:07,109
no metal is actually the lowest level

2082
01:57:04,649 --> 01:57:09,689
you can write to on Mac Oz you know

2083
01:57:07,109 --> 01:57:13,019
that's what drives the graphics driver

2084
01:57:09,689 --> 01:57:15,869
if you use molten v/k you're writing to

2085
01:57:13,020 --> 01:57:18,270
an API that then writes to metal so you

2086
01:57:15,869 --> 01:57:20,039
literally just introduced a second thing

2087
01:57:18,270 --> 01:57:24,420
that can go wrong a second thing that

2088
01:57:20,039 --> 01:57:25,920
can slow you down right so if you need

2089
01:57:24,420 --> 01:57:27,270
to access the hardware access the

2090
01:57:25,920 --> 01:57:29,579
hardware with something that actually

2091
01:57:27,270 --> 01:57:31,830
accesses it don't write to another thing

2092
01:57:29,579 --> 01:57:33,210
and then to another thing at that point

2093
01:57:31,829 --> 01:57:37,649
you might as well just be using a higher

2094
01:57:33,210 --> 01:57:39,750
level engine style thing right if you're

2095
01:57:37,649 --> 01:57:41,489
treating you it's nuts to think about

2096
01:57:39,750 --> 01:57:43,020
writing to Vulcan if it doesn't actually

2097
01:57:41,489 --> 01:57:44,369
talk to the hardware the only point in

2098
01:57:43,020 --> 01:57:46,110
implementing Vulcan is to talk to the

2099
01:57:44,369 --> 01:57:48,720
hardware if you're gonna be going

2100
01:57:46,109 --> 01:57:50,130
through a middleman use an API just

2101
01:57:48,720 --> 01:57:52,350
better than Vulcan because well gives a

2102
01:57:50,130 --> 01:57:54,510
terrible API right you'd never use

2103
01:57:52,350 --> 01:57:57,329
Vulcan to make your life easier it's a

2104
01:57:54,510 --> 01:58:00,000
terrible API right so the only reason

2105
01:57:57,329 --> 01:58:01,649
you would have used Vulcan is if it

2106
01:58:00,000 --> 01:58:04,350
actually lets you talk to the hardware

2107
01:58:01,649 --> 01:58:06,599
it doesn't now right it's it's only on

2108
01:58:04,350 --> 01:58:09,420
Windows would that be true on Mac Oz it

2109
01:58:06,600 --> 01:58:11,490
talks to metal which is now it's just a

2110
01:58:09,420 --> 01:58:13,020
crappy API you put in between yourself

2111
01:58:11,489 --> 01:58:15,899
and the actual API you were trying to

2112
01:58:13,020 --> 01:58:18,090
call it literally has no point in

2113
01:58:15,899 --> 01:58:22,049
existing I I they should just get rid of

2114
01:58:18,090 --> 01:58:24,079
it and save everyone the trouble right

2115
01:58:22,050 --> 01:58:29,210
it's just taking driver team time now

2116
01:58:24,079 --> 01:58:29,210
it's it's not it adds value for nobody

2117
01:58:29,390 --> 01:58:34,450
you know if you want to if you want VOC

2118
01:58:32,250 --> 01:58:37,210
and have some reason to exist then just

2119
01:58:34,449 --> 01:58:41,590
give the whole Vulcan concept and

2120
01:58:37,210 --> 01:58:43,359
project over to the Android Linux people

2121
01:58:41,590 --> 01:58:44,890
because they're the only people now who

2122
01:58:43,359 --> 01:58:46,420
could really do anything with it it's

2123
01:58:44,890 --> 01:58:49,150
it's the only place it would actually

2124
01:58:46,420 --> 01:58:50,560
have any use would be for them because

2125
01:58:49,149 --> 01:58:53,229
they don't have their own graphics API

2126
01:58:50,560 --> 01:58:55,330
right so maybe as a replacement for

2127
01:58:53,229 --> 01:58:57,219
OpenGL or something I don't know other

2128
01:58:55,329 --> 01:59:01,750
than that you know on an actual actual

2129
01:58:57,220 --> 01:59:04,000
consumer game platforms it doesn't it

2130
01:59:01,750 --> 01:59:05,560
doesn't really have any point in being

2131
01:59:04,000 --> 01:59:06,939
there how do you recommend a beginner

2132
01:59:05,560 --> 01:59:08,050
get better at writing platform layers is

2133
01:59:06,939 --> 01:59:09,279
the only way to just write a bunch of

2134
01:59:08,050 --> 01:59:11,260
them to figure out how the common

2135
01:59:09,279 --> 01:59:14,050
patterns work yeah more or less you just

2136
01:59:11,260 --> 01:59:15,550
got to practice at it understand you

2137
01:59:14,050 --> 01:59:17,289
know sort of the stuff we've been saying

2138
01:59:15,550 --> 01:59:18,789
about where you put boundaries you know

2139
01:59:17,289 --> 01:59:25,539
you want to watch people who know how to

2140
01:59:18,789 --> 01:59:27,640
do it do it and think about it but Ronan

2141
01:59:25,539 --> 01:59:30,250
says I'm one of the Linux people please

2142
01:59:27,640 --> 01:59:34,750
don't give us Vulcan yeah I'm sorry

2143
01:59:30,250 --> 01:59:36,760
I didn't mean to wish it upon you but

2144
01:59:34,750 --> 01:59:41,199
yeah I don't know Linux doesn't have

2145
01:59:36,760 --> 01:59:43,119
another graphics API really it doesn't

2146
01:59:41,199 --> 01:59:45,039
have its own low-level graph say Pat

2147
01:59:43,119 --> 01:59:48,670
does it I mean it's got sort of the

2148
01:59:45,039 --> 01:59:50,470
Weiland stuff but that's not I I thought

2149
01:59:48,670 --> 01:59:51,940
that was just a four window compositing

2150
01:59:50,470 --> 01:59:56,140
like it's and I didn't think that was

2151
01:59:51,939 --> 01:59:58,089
like a full 3d thing so there isn't like

2152
01:59:56,140 --> 02:00:01,630
the equivalent of there's like d3 t12

2153
01:59:58,090 --> 02:00:03,159
there's metal and then there's I like

2154
02:00:01,630 --> 02:00:09,340
Linux and Android I don't know what

2155
02:00:03,159 --> 02:00:12,309
they've got you know if I don't know

2156
02:00:09,340 --> 02:00:14,800
what's the native thing on on Linux

2157
02:00:12,310 --> 02:00:16,810
really I think largely because Linux

2158
02:00:14,800 --> 02:00:19,750
doesn't care like Linux is a compute

2159
02:00:16,810 --> 02:00:21,520
server platform you know it's not really

2160
02:00:19,750 --> 02:00:26,140
consumer platform so it's not the kind

2161
02:00:21,520 --> 02:00:27,520
of question you ask I would guess for

2162
02:00:26,140 --> 02:00:30,930
them probably the important things are

2163
02:00:27,520 --> 02:00:30,930
like open CL or something

2164
02:00:53,340 --> 02:00:58,470
alright that looks like we don't really

2165
02:00:56,550 --> 02:01:00,869
have any questions on the on the code

2166
02:00:58,470 --> 02:01:05,640
reorganization so I think what we will

2167
02:01:00,869 --> 02:01:12,590
do is just close it down for now and I

2168
02:01:05,640 --> 02:01:12,590
will be back at 2:00 to do the second

2169
02:01:12,770 --> 02:01:19,680
the second stream of the day hopes you

2170
02:01:17,010 --> 02:01:20,340
back here for that in the meantime go

2171
02:01:19,680 --> 02:01:22,860
have some lunch

2172
02:01:20,340 --> 02:01:25,310
or whatever the appropriate meal is for

2173
02:01:22,859 --> 02:01:25,309
your time zone

