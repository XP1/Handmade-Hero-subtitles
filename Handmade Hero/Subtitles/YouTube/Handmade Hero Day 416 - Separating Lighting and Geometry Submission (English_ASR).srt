1
00:00:01,250 --> 00:00:06,000
alright hello everyone and welcome to

2
00:00:03,720 --> 00:00:07,500
handmade hero this is the show where we

3
00:00:06,000 --> 00:00:09,029
could a complete-game live on stream

4
00:00:07,500 --> 00:00:11,160
although lately we have mostly been

5
00:00:09,029 --> 00:00:15,750
trying to work around the graphics

6
00:00:11,160 --> 00:00:17,940
driver which we have to do today we are

7
00:00:15,750 --> 00:00:20,399
trying to pass integers down to our

8
00:00:17,940 --> 00:00:22,410
shader and we are not getting them which

9
00:00:20,399 --> 00:00:25,759
means that we are making some kind of an

10
00:00:22,410 --> 00:00:27,868
incorrect call somewhere and we have the

11
00:00:25,760 --> 00:00:29,970
distinct pleasure of trying to guess

12
00:00:27,868 --> 00:00:33,780
where that might be now fortunately one

13
00:00:29,969 --> 00:00:34,890
of the folks on the chat spotted

14
00:00:33,780 --> 00:00:36,630
something that thought might be the

15
00:00:34,890 --> 00:00:39,870
problem and it did sound like a pretty

16
00:00:36,630 --> 00:00:42,660
good guess so that might be something we

17
00:00:39,869 --> 00:00:44,159
could start looking at today we don't

18
00:00:42,659 --> 00:00:46,049
really know though that might not be it

19
00:00:44,159 --> 00:00:49,049
we'll find out in a second so let's go

20
00:00:46,049 --> 00:00:59,640
ahead and and load up our code here and

21
00:00:49,049 --> 00:01:02,849
see where we're at okay and Visual

22
00:00:59,640 --> 00:01:03,870
Studio blazing speed as always there we

23
00:01:02,850 --> 00:01:06,840
go

24
00:01:03,869 --> 00:01:09,200
so if I go ahead and run it what you

25
00:01:06,840 --> 00:01:12,359
could see here is we've colored the

26
00:01:09,200 --> 00:01:14,040
surfaces in the world by what integers

27
00:01:12,359 --> 00:01:16,618
it appears to be getting from the buffer

28
00:01:14,040 --> 00:01:18,479
they should have been a nice gradient

29
00:01:16,618 --> 00:01:21,118
wash basically we should have seen

30
00:01:18,478 --> 00:01:23,400
increasingly brighter colors going from

31
00:01:21,118 --> 00:01:25,049
dark to light but as you can see we're

32
00:01:23,400 --> 00:01:27,150
just seeing kind of arbitrary garbage

33
00:01:25,049 --> 00:01:29,670
here this is probably channels that are

34
00:01:27,150 --> 00:01:32,670
all slammed to FF or something like that

35
00:01:29,670 --> 00:01:35,728
or I don't know I guess they're you in

36
00:01:32,670 --> 00:01:38,009
sixteen so you know more like FFF or

37
00:01:35,728 --> 00:01:39,810
fffe or something like this we're seeing

38
00:01:38,009 --> 00:01:42,989
lots of very bright stuff so we're

39
00:01:39,810 --> 00:01:44,939
pretty sure that the first problem with

40
00:01:42,989 --> 00:01:47,938
our system right now because this is in

41
00:01:44,938 --> 00:01:51,209
this debug visualization tells us that

42
00:01:47,938 --> 00:01:53,669
we're really just not getting the values

43
00:01:51,209 --> 00:01:55,919
we actually submitted now the suggestion

44
00:01:53,670 --> 00:02:01,890
from the stream which i think is a good

45
00:01:55,920 --> 00:02:05,700
one was that we forgot to put an eye the

46
00:02:01,890 --> 00:02:08,489
letter i' in our call i and i'll i'll

47
00:02:05,700 --> 00:02:10,439
show you what i mean by that so here are

48
00:02:08,489 --> 00:02:12,930
these vertex a trip pointer things here

49
00:02:10,439 --> 00:02:13,710
these vertex of trip pointers are ways

50
00:02:12,930 --> 00:02:16,290
of us

51
00:02:13,710 --> 00:02:20,400
fine to OpenGL where we expect to get

52
00:02:16,289 --> 00:02:25,280
our vertex data from and unfortunately

53
00:02:20,400 --> 00:02:30,960
for us we're in this situation where we

54
00:02:25,280 --> 00:02:32,909
have to make different calls depending

55
00:02:30,960 --> 00:02:35,070
on the circumstance so we want this

56
00:02:32,909 --> 00:02:38,669
vertex at trim point or sorry vertex at

57
00:02:35,069 --> 00:02:40,530
crib pointer and you can see right here

58
00:02:38,669 --> 00:02:43,169
we've got this GL vertex a trim pointer

59
00:02:40,530 --> 00:02:44,759
call this is the one we're calling and

60
00:02:43,169 --> 00:02:46,439
so if we take a look at the the

61
00:02:44,759 --> 00:02:47,459
definition for it you can see even

62
00:02:46,439 --> 00:02:49,680
though it's only listed once in the

63
00:02:47,460 --> 00:02:54,030
outside there's the secret i version

64
00:02:49,680 --> 00:02:57,270
underneath here right and the deal is I

65
00:02:54,030 --> 00:02:59,759
guess you just have to be able to call

66
00:02:57,270 --> 00:03:02,040
the right one whether you want floats or

67
00:02:59,759 --> 00:03:04,289
intz because when you pass this enum

68
00:03:02,039 --> 00:03:07,370
type right even though you're gonna

69
00:03:04,289 --> 00:03:09,719
specify that they're unsigned shorts

70
00:03:07,370 --> 00:03:11,849
instead of looking at what the shader

71
00:03:09,719 --> 00:03:14,189
has defined and what you have defined

72
00:03:11,849 --> 00:03:15,689
and matching them up I think it just

73
00:03:14,189 --> 00:03:17,400
goes and says I'm going to convert it to

74
00:03:15,689 --> 00:03:20,009
insert floats one of the other you tell

75
00:03:17,400 --> 00:03:22,920
me which here and even if the other side

76
00:03:20,009 --> 00:03:24,389
ends up asking for intz but you told me

77
00:03:22,919 --> 00:03:25,019
to convert it to floats I'm gonna send

78
00:03:24,389 --> 00:03:28,639
them as floats

79
00:03:25,020 --> 00:03:32,250
sorry my friend so it's like all right

80
00:03:28,639 --> 00:03:34,349
there you go so if that's the case what

81
00:03:32,250 --> 00:03:39,509
that means is that these have to have an

82
00:03:34,349 --> 00:03:42,449
i included like so because they have to

83
00:03:39,509 --> 00:03:44,729
be vertex at rib eye pointer in order to

84
00:03:42,449 --> 00:03:48,149
send down indices now everything else is

85
00:03:44,729 --> 00:03:49,919
the same except for normalized because

86
00:03:48,150 --> 00:03:51,569
you can't normalize something out if

87
00:03:49,919 --> 00:03:53,489
it's going to be an integer obviously

88
00:03:51,569 --> 00:03:57,449
it's just gonna get converted directly

89
00:03:53,490 --> 00:04:00,510
so this false can go away now we don't

90
00:03:57,449 --> 00:04:02,579
actually have we never grabbed a pointer

91
00:04:00,509 --> 00:04:05,340
to that function in OpenGL because we've

92
00:04:02,580 --> 00:04:07,440
never used it before so we also have to

93
00:04:05,340 --> 00:04:09,210
go ahead and put that into our win32

94
00:04:07,439 --> 00:04:12,509
platform layer so that we actually have

95
00:04:09,210 --> 00:04:17,970
the ability to call it right so we need

96
00:04:12,509 --> 00:04:20,519
to grab that ARB GL core GH or whatever

97
00:04:17,970 --> 00:04:25,160
it's called no not drugs for chronic

98
00:04:20,519 --> 00:04:25,159
heart failure that would be interesting

99
00:04:27,720 --> 00:04:37,990
all right what can you say to that

100
00:04:32,709 --> 00:04:41,168
so at rib eye pointers specification is

101
00:04:37,990 --> 00:04:45,030
right here this is what we need to call

102
00:04:41,168 --> 00:04:50,258
and so I'm gonna go ahead and grab it

103
00:04:45,029 --> 00:04:53,978
ctrl C and we obviously had a trim

104
00:04:50,259 --> 00:04:55,538
pointer as well the GL vertex a trim

105
00:04:53,978 --> 00:05:00,120
pointer is right here so I'll just put

106
00:04:55,538 --> 00:05:00,120
this right under it I will go ahead and

107
00:05:01,889 --> 00:05:06,759
make that definition there and this is

108
00:05:04,718 --> 00:05:08,560
all we really needed so then I'm just

109
00:05:06,759 --> 00:05:11,590
going to go through and see where we did

110
00:05:08,560 --> 00:05:22,780
GL vertex at rib pointer for everything

111
00:05:11,589 --> 00:05:24,579
else and just make the eye version so

112
00:05:22,779 --> 00:05:26,769
now in theory we should have a handle to

113
00:05:24,579 --> 00:05:29,529
that function that we can call and so

114
00:05:26,769 --> 00:05:30,668
now when I make the call in theory we'll

115
00:05:29,529 --> 00:05:32,439
be sending them down and it looks like

116
00:05:30,668 --> 00:05:34,478
that was the problem thank you very much

117
00:05:32,439 --> 00:05:37,000
I forget who suggested that on the

118
00:05:34,478 --> 00:05:40,918
stream let's see who we thank for that

119
00:05:37,000 --> 00:05:40,918
cuz that probably saved us a lot of time

120
00:05:44,189 --> 00:05:50,189
where is it supposed to be back a bit

121
00:05:52,370 --> 00:06:10,519
I somehow can't find this but I don't

122
00:06:03,949 --> 00:06:12,228
know why was it not a question

123
00:06:10,519 --> 00:06:14,899
did it not have a cute colon in front of

124
00:06:12,228 --> 00:06:22,029
it or something because I'm looking here

125
00:06:14,899 --> 00:06:22,029
on the chat log but I don't see it

126
00:06:26,829 --> 00:06:31,909
it was seventh chord Thank You us off

127
00:06:29,660 --> 00:06:33,740
all right so thank you seventh chord for

128
00:06:31,910 --> 00:06:36,320
that one because that probably saved us

129
00:06:33,740 --> 00:06:39,710
a heck of a lot of time so now what you

130
00:06:36,319 --> 00:06:40,310
can see here is this is more what I was

131
00:06:39,709 --> 00:06:46,009
expecting

132
00:06:40,310 --> 00:06:48,288
right I was expecting to see actual

133
00:06:46,009 --> 00:06:50,449
values in here that sort of went

134
00:06:48,288 --> 00:06:53,360
linearly upwards and you can see that

135
00:06:50,449 --> 00:06:55,220
they're sort of doing that now so that

136
00:06:53,360 --> 00:06:57,199
means now we could start to actually

137
00:06:55,220 --> 00:06:58,820
engage with the other parts of the

138
00:06:57,199 --> 00:07:01,430
problem now that we know that those

139
00:06:58,819 --> 00:07:03,168
values are coming through more correctly

140
00:07:01,430 --> 00:07:05,120
I'm going to go ahead and try before we

141
00:07:03,168 --> 00:07:09,829
do anything else I'm gonna go ahead and

142
00:07:05,120 --> 00:07:12,199
try getting rid of the unsigned value

143
00:07:09,829 --> 00:07:15,319
here as well because if these are coming

144
00:07:12,199 --> 00:07:16,519
through as integers then we should be

145
00:07:15,319 --> 00:07:18,680
able to just get rid of the word

146
00:07:16,519 --> 00:07:19,759
unsigned because the only reason we're

147
00:07:18,680 --> 00:07:22,069
using a scientist because they were

148
00:07:19,759 --> 00:07:24,288
shorts before and we wanted a little

149
00:07:22,069 --> 00:07:26,659
more range with integers there's no way

150
00:07:24,288 --> 00:07:28,788
we're ever gonna have computations for

151
00:07:26,660 --> 00:07:31,250
four billion light sources two billion

152
00:07:28,788 --> 00:07:34,189
will be just fine so we can definitely

153
00:07:31,250 --> 00:07:36,620
set those to just regular intz and not

154
00:07:34,189 --> 00:07:39,649
have a problem that also means we

155
00:07:36,620 --> 00:07:42,769
wouldn't have to do any sort of casting

156
00:07:39,649 --> 00:07:46,129
here like so and then we would end up

157
00:07:42,769 --> 00:07:46,579
pretty much in the same situation all

158
00:07:46,129 --> 00:07:51,550
right

159
00:07:46,579 --> 00:07:51,550
so in theory now we should have okay

160
00:07:51,819 --> 00:07:57,069
in theory now we should have the same

161
00:07:55,009 --> 00:07:59,538
exact results and we do so that's good

162
00:07:57,069 --> 00:08:02,060
so and hopefully that will fix anything

163
00:07:59,538 --> 00:08:05,759
that Kim was saying before that he was

164
00:08:02,060 --> 00:08:07,740
having problems with the

165
00:08:05,759 --> 00:08:09,420
compiling unsigned into the shaders that

166
00:08:07,740 --> 00:08:12,180
it was the Connecticut Potter was

167
00:08:09,420 --> 00:08:14,730
complaining about it okay so what we

168
00:08:12,180 --> 00:08:16,350
need to do here is now start moving back

169
00:08:14,730 --> 00:08:19,920
to actually testing the lighting

170
00:08:16,350 --> 00:08:21,540
information so hopefully our light count

171
00:08:19,920 --> 00:08:23,100
is now a reasonable value instead of

172
00:08:21,540 --> 00:08:25,890
before so we can actually do the loop

173
00:08:23,100 --> 00:08:27,420
over it and we can also come in here and

174
00:08:25,889 --> 00:08:29,849
try to actually call our sunlight

175
00:08:27,420 --> 00:08:32,759
function and see what actually happens

176
00:08:29,850 --> 00:08:36,029
so that should be good as well so we can

177
00:08:32,759 --> 00:08:38,879
get rid of this branch here and here

178
00:08:36,029 --> 00:08:42,959
we're just not actually ever get we're

179
00:08:38,879 --> 00:08:45,269
never using the actual light of the

180
00:08:42,960 --> 00:08:48,300
actual reflectance of the surface at all

181
00:08:45,269 --> 00:08:50,189
at the moment we're just using the pure

182
00:08:48,299 --> 00:08:52,799
light color so we're just drawing the

183
00:08:50,190 --> 00:08:56,430
lights directly and seeing what we get

184
00:08:52,799 --> 00:08:59,549
there right okay

185
00:08:56,429 --> 00:09:02,549
so already right off the bat at least

186
00:08:59,549 --> 00:09:05,669
now we're in sort of for lack of a

187
00:09:02,549 --> 00:09:07,799
better term striking distance like now

188
00:09:05,669 --> 00:09:11,729
it's actually sort of doing something

189
00:09:07,799 --> 00:09:13,889
that resembles a real result whereas

190
00:09:11,730 --> 00:09:15,330
before we had those integers were not

191
00:09:13,889 --> 00:09:17,149
being sent down properly we were

192
00:09:15,330 --> 00:09:21,330
obviously getting completely bogus

193
00:09:17,149 --> 00:09:23,909
information now at the moment we this

194
00:09:21,330 --> 00:09:25,500
like looks like our debug view is kind

195
00:09:23,909 --> 00:09:30,990
of off as well and that makes sense

196
00:09:25,500 --> 00:09:32,940
because our debug view is showing it

197
00:09:30,990 --> 00:09:36,320
probably doesn't line up the the the

198
00:09:32,940 --> 00:09:36,320
light counts and light values correctly

199
00:09:36,409 --> 00:09:41,399
but the good news is that it looks like

200
00:09:38,940 --> 00:09:44,220
now we're in San in we're insane land

201
00:09:41,399 --> 00:09:45,779
we're insane territory right so

202
00:09:44,220 --> 00:09:47,730
hopefully we can sort of push on from

203
00:09:45,779 --> 00:09:48,449
here and start to get things working

204
00:09:47,730 --> 00:09:51,570
properly

205
00:09:48,450 --> 00:09:56,820
oops I forgot that we have a camera

206
00:09:51,570 --> 00:09:58,920
thing in there that makes the the hero

207
00:09:56,820 --> 00:09:59,370
look downstairs when he stops next to

208
00:09:58,919 --> 00:10:03,809
the stairs

209
00:09:59,370 --> 00:10:06,419
I remember that anyway so yeah so this

210
00:10:03,809 --> 00:10:08,819
is what we want to focus on now and

211
00:10:06,419 --> 00:10:12,419
let's let's try to do a couple different

212
00:10:08,820 --> 00:10:14,040
things we've got a lot of work we can do

213
00:10:12,419 --> 00:10:16,799
here I think the first thing I probably

214
00:10:14,039 --> 00:10:19,659
want to address as the thing we work on

215
00:10:16,799 --> 00:10:21,639
today is at this point we're sort of

216
00:10:19,659 --> 00:10:26,049
verging on how we're gonna be doing this

217
00:10:21,639 --> 00:10:28,090
lighting stuff and in fact it's rather

218
00:10:26,049 --> 00:10:30,219
rapid as well with so many fewer

219
00:10:28,090 --> 00:10:33,009
surfaces like even on the CPU side it's

220
00:10:30,220 --> 00:10:35,019
very quick so I think we're definitely

221
00:10:33,009 --> 00:10:37,480
getting to a place where this actually

222
00:10:35,019 --> 00:10:38,829
could be something workable I'm pretty

223
00:10:37,480 --> 00:10:42,399
happy with that with how fast that's

224
00:10:38,830 --> 00:10:45,009
going as well so we've got a couple of

225
00:10:42,399 --> 00:10:46,569
things we need to do and you can see

226
00:10:45,009 --> 00:10:48,189
that like alright like for some reason

227
00:10:46,570 --> 00:10:49,900
the light sources are very blown out I'm

228
00:10:48,190 --> 00:10:51,360
not sure why that is happening I'll have

229
00:10:49,899 --> 00:10:55,090
to look I don't know are we not

230
00:10:51,360 --> 00:10:56,860
normalizing anymore or something in our

231
00:10:55,090 --> 00:11:04,509
lights um or something like this I think

232
00:10:56,860 --> 00:11:07,210
we are though yeah so not I'm not really

233
00:11:04,509 --> 00:11:10,389
sure why we're we may have nursed

234
00:11:07,210 --> 00:11:12,060
something along the way but yeah I'm not

235
00:11:10,389 --> 00:11:14,740
really sure why we're not getting

236
00:11:12,059 --> 00:11:20,319
similarly softer lighting results than

237
00:11:14,740 --> 00:11:25,269
we were before I'm not quite sure about

238
00:11:20,320 --> 00:11:29,170
that because this should still be this

239
00:11:25,269 --> 00:11:33,730
is still summing the result a the

240
00:11:29,169 --> 00:11:35,949
contribution values here and then it

241
00:11:33,730 --> 00:11:39,670
should be it should be averaging it out

242
00:11:35,950 --> 00:11:42,280
here sort of normalizing the result to a

243
00:11:39,669 --> 00:11:44,079
total contribution of one so that should

244
00:11:42,279 --> 00:11:45,939
still be doing roughly the same

245
00:11:44,080 --> 00:11:48,660
computation as doing four so I'd have to

246
00:11:45,940 --> 00:11:51,610
look to see what's actually happening

247
00:11:48,659 --> 00:11:54,159
there that makes it kind of different I

248
00:11:51,610 --> 00:11:57,190
also am a little bit curious what are we

249
00:11:54,159 --> 00:11:59,589
sending down in our world's mode push

250
00:11:57,190 --> 00:12:02,080
light call in terms of the emission

251
00:11:59,590 --> 00:12:03,610
value I don't really remember yes so

252
00:12:02,080 --> 00:12:05,110
we're only sending down in a mission

253
00:12:03,610 --> 00:12:06,909
value of one so some things a little

254
00:12:05,110 --> 00:12:09,550
book there shouldn't really be having

255
00:12:06,909 --> 00:12:12,819
such a weirdly bright scenario so we've

256
00:12:09,549 --> 00:12:14,319
still got to go fix that stuff up but at

257
00:12:12,820 --> 00:12:17,340
least now we're in a good place so

258
00:12:14,320 --> 00:12:20,470
here's the stuff that we need to do

259
00:12:17,340 --> 00:12:21,970
before we start tackling the actual like

260
00:12:20,470 --> 00:12:24,810
alright now let's optimize our lighting

261
00:12:21,970 --> 00:12:27,490
solution also you'll note that already

262
00:12:24,809 --> 00:12:30,250
we're sort of seeing what I wanted to

263
00:12:27,490 --> 00:12:33,549
see which is that the surfaces are lit

264
00:12:30,250 --> 00:12:35,500
but smooth right and we're not getting

265
00:12:33,549 --> 00:12:38,379
those blobby sort of results in there

266
00:12:35,500 --> 00:12:42,039
right and that's exactly what I wanted

267
00:12:38,379 --> 00:12:43,778
to have happen so when we when we sort

268
00:12:42,039 --> 00:12:46,419
of get this stuff a little bit more

269
00:12:43,778 --> 00:12:48,370
straightened out I think this is gonna

270
00:12:46,419 --> 00:12:51,039
solve exactly the problem that I wanted

271
00:12:48,370 --> 00:12:53,049
solved so I'm pretty pleased with that

272
00:12:51,039 --> 00:12:55,828
and I think we'll be able to do a

273
00:12:53,049 --> 00:13:00,578
reasonable job with it

274
00:12:55,828 --> 00:13:02,349
we'll see you certainly so yeah what we

275
00:13:00,578 --> 00:13:03,549
need to do now though is I want to

276
00:13:02,350 --> 00:13:05,589
figure out a couple different things

277
00:13:03,549 --> 00:13:07,120
that we need to do and they're not

278
00:13:05,589 --> 00:13:10,000
really hard they're just sort of

279
00:13:07,120 --> 00:13:12,970
organizational problems so the first

280
00:13:10,000 --> 00:13:15,490
thing we need to do is I think we need a

281
00:13:12,970 --> 00:13:16,750
way now because we've got real lighting

282
00:13:15,490 --> 00:13:19,810
that's going to be going into the

283
00:13:16,750 --> 00:13:21,578
pipeline now for real we need a way of

284
00:13:19,809 --> 00:13:23,649
specifying that things aren't going

285
00:13:21,578 --> 00:13:25,838
through the lighting pipeline right so

286
00:13:23,649 --> 00:13:28,328
right now we have the Z bias program and

287
00:13:25,839 --> 00:13:31,899
even our text goes through the Z bias

288
00:13:28,328 --> 00:13:33,879
program right that's a problem because

289
00:13:31,899 --> 00:13:36,940
it means that our text is getting lit

290
00:13:33,879 --> 00:13:40,509
right and I don't mean lit in the like

291
00:13:36,940 --> 00:13:42,370
Microsoft recruiter email like hell like

292
00:13:40,509 --> 00:13:44,889
getting lit on a Friday night or

293
00:13:42,370 --> 00:13:48,190
whatever Monday night I'm not talking

294
00:13:44,889 --> 00:13:50,620
about that I'm talking about like lit as

295
00:13:48,190 --> 00:13:53,320
in actual having lighting simulation on

296
00:13:50,620 --> 00:13:55,539
it and we don't want stuff like that

297
00:13:53,320 --> 00:13:57,610
right furthermore when I draw the Steve

298
00:13:55,539 --> 00:13:59,799
bug stuff here like I want to be able to

299
00:13:57,610 --> 00:14:01,959
draw this debug stuff in a way that says

300
00:13:59,799 --> 00:14:04,719
don't put lighting on it I'm just trying

301
00:14:01,958 --> 00:14:07,419
to draw some values here that I'm using

302
00:14:04,720 --> 00:14:09,610
as a debug display if you light it then

303
00:14:07,419 --> 00:14:11,799
it's gonna perhaps get wrong values or

304
00:14:09,610 --> 00:14:13,870
who knows what right so we need a way of

305
00:14:11,799 --> 00:14:15,549
specifying that there's a light that

306
00:14:13,870 --> 00:14:17,379
that there's a way to not light things

307
00:14:15,549 --> 00:14:19,929
now one of the interesting things about

308
00:14:17,379 --> 00:14:22,149
what we did is that it may be possible

309
00:14:19,929 --> 00:14:25,809
to do this without actually having any

310
00:14:22,149 --> 00:14:27,458
switches that we pull because since

311
00:14:25,809 --> 00:14:30,518
we're sending down primitives with an

312
00:14:27,458 --> 00:14:33,099
information about how many lights to use

313
00:14:30,519 --> 00:14:38,078
what we could do is just have one light

314
00:14:33,100 --> 00:14:39,430
at the beginning of the array or even

315
00:14:38,078 --> 00:14:42,609
just a special case in the shader that

316
00:14:39,429 --> 00:14:44,739
says if the light count is zero then

317
00:14:42,610 --> 00:14:47,339
don't light the surface or something

318
00:14:44,740 --> 00:14:50,310
right we could or if it's you

319
00:14:47,339 --> 00:14:53,490
if it's you know some really high value

320
00:14:50,309 --> 00:14:55,919
right we could have a special code that

321
00:14:53,490 --> 00:14:57,568
says don't light it and that way we can

322
00:14:55,919 --> 00:15:00,240
always send down primitives that don't

323
00:14:57,568 --> 00:15:03,979
get lit just by setting something

324
00:15:00,240 --> 00:15:03,980
special with those surfaces right

325
00:15:04,169 --> 00:15:09,360
and so that's kind of a compelling

326
00:15:05,879 --> 00:15:10,889
option one that I think I might use so

327
00:15:09,360 --> 00:15:13,379
we want to do that the second thing we

328
00:15:10,889 --> 00:15:16,230
want to do is we'd also like to be able

329
00:15:13,379 --> 00:15:20,308
to send down occluders separately from

330
00:15:16,230 --> 00:15:21,569
lighting samples right so this is

331
00:15:20,308 --> 00:15:23,370
something that's kind of gonna be a

332
00:15:21,568 --> 00:15:25,889
little bit tricky but what I'd like to

333
00:15:23,370 --> 00:15:30,629
do is figure out a way to make it so

334
00:15:25,889 --> 00:15:33,558
that we specify the same geometry and

335
00:15:30,629 --> 00:15:36,720
that's what gets rendered we specify

336
00:15:33,558 --> 00:15:39,299
occluder geometry and that is what

337
00:15:36,720 --> 00:15:41,399
bounces the light around and then we

338
00:15:39,299 --> 00:15:43,859
specify sampling geometry right and

339
00:15:41,399 --> 00:15:45,688
sampling geometry is where we take those

340
00:15:43,860 --> 00:15:52,318
lights or samples we kind of want

341
00:15:45,688 --> 00:15:55,438
control over all of this now why do we

342
00:15:52,318 --> 00:15:56,969
want control over all of this well let's

343
00:15:55,438 --> 00:15:57,688
draw this out so it's clear what I'm

344
00:15:56,970 --> 00:16:03,750
talking about

345
00:15:57,688 --> 00:16:05,159
before we try to start typing I should

346
00:16:03,750 --> 00:16:09,000
also just kill the app we don't really

347
00:16:05,159 --> 00:16:14,909
need that anymore okay I just need

348
00:16:09,000 --> 00:16:21,000
Milton okay all right so here we are on

349
00:16:14,909 --> 00:16:30,169
day four one six and we are talking

350
00:16:21,000 --> 00:16:30,169
about light and geometry

351
00:16:30,820 --> 00:16:40,100
specification so what we want to do here

352
00:16:37,509 --> 00:16:41,929
is we want to be able to control a

353
00:16:40,100 --> 00:16:44,240
couple of different things first of all

354
00:16:41,929 --> 00:16:45,409
we may want to draw something that is

355
00:16:44,240 --> 00:16:47,600
not the same as the thing that's

356
00:16:45,409 --> 00:16:49,969
collecting the light for example let's

357
00:16:47,600 --> 00:16:53,778
suppose we are drawing one of those

358
00:16:49,970 --> 00:16:59,120
trees right and so here is my tree and

359
00:16:53,778 --> 00:17:01,939
this space here is all empty right we

360
00:16:59,120 --> 00:17:05,088
don't necessarily want to go all the way

361
00:17:01,940 --> 00:17:07,519
and start actually doing like bitmap

362
00:17:05,088 --> 00:17:09,289
lookups in our ray tracing code because

363
00:17:07,519 --> 00:17:11,779
the ray tracing code is supposed to be

364
00:17:09,289 --> 00:17:14,659
very fast we may not want to do

365
00:17:11,779 --> 00:17:16,670
something like that right maybe we do we

366
00:17:14,660 --> 00:17:18,140
don't know like maybe we just maybe we

367
00:17:16,670 --> 00:17:20,000
will sample textures in the ray tracing

368
00:17:18,140 --> 00:17:22,449
code and allow the rays to pass through

369
00:17:20,000 --> 00:17:25,640
if it's alpha zero or not if it's not

370
00:17:22,449 --> 00:17:28,279
but maybe we don't right furthermore

371
00:17:25,640 --> 00:17:30,230
those cards maybe in a really weird way

372
00:17:28,279 --> 00:17:32,119
like this maybe the geometry of the

373
00:17:30,230 --> 00:17:36,110
scene and this might be where the light

374
00:17:32,119 --> 00:17:39,079
where the sprite card is being drawn but

375
00:17:36,109 --> 00:17:42,589
really conceptually the thing the tree

376
00:17:39,079 --> 00:17:46,730
is taking up this space right so we want

377
00:17:42,589 --> 00:17:48,799
this to be the occluder not this right

378
00:17:46,730 --> 00:17:51,679
this is just a fictitious drawing

379
00:17:48,799 --> 00:17:56,210
element meant to occupy the space of

380
00:17:51,679 --> 00:18:00,220
this thing here to the viewer right but

381
00:17:56,210 --> 00:18:02,630
it's not meant to actually be the thing

382
00:18:00,220 --> 00:18:05,240
that's collecting light because it's a

383
00:18:02,630 --> 00:18:06,650
nonsense geometry right and we need the

384
00:18:05,240 --> 00:18:08,509
freedom to be able to adjust this

385
00:18:06,650 --> 00:18:11,000
geometry however we want to get the

386
00:18:08,509 --> 00:18:12,140
scene to look correct with sprites so

387
00:18:11,000 --> 00:18:14,089
we're going to keep playing with that

388
00:18:12,140 --> 00:18:16,100
probably when we go to kind of finalize

389
00:18:14,089 --> 00:18:17,899
the graphics and we really just don't

390
00:18:16,099 --> 00:18:19,369
want that to affect the light we want to

391
00:18:17,900 --> 00:18:21,620
be able to do anything we want with

392
00:18:19,369 --> 00:18:29,739
geometry there right so we need to be

393
00:18:21,619 --> 00:18:34,239
able to send down occluders separate

394
00:18:29,740 --> 00:18:34,240
from sprites

395
00:18:34,789 --> 00:18:39,000
so that's the first thing we want to do

396
00:18:36,930 --> 00:18:41,190
and that's pretty easy because that's

397
00:18:39,000 --> 00:18:43,470
just basically making a separate buffer

398
00:18:41,190 --> 00:18:45,509
of occluders right so when we're doing

399
00:18:43,470 --> 00:18:48,450
pushes into things we've got a blush

400
00:18:45,509 --> 00:18:50,279
buffer that we push our sprites into and

401
00:18:48,450 --> 00:18:52,650
our cubes into and stuff that gets drawn

402
00:18:50,279 --> 00:18:54,059
on the screen and then we just have

403
00:18:52,650 --> 00:18:56,310
another buffer that we push occluders

404
00:18:54,059 --> 00:18:58,079
into and that's just for occlusion

405
00:18:56,309 --> 00:19:00,569
purposes right that's that's what

406
00:18:58,079 --> 00:19:02,399
happens so that's not difficult again

407
00:19:00,569 --> 00:19:04,950
it's just bookkeeping right this is all

408
00:19:02,400 --> 00:19:07,290
just bookkeeping I don't know if there's

409
00:19:04,950 --> 00:19:09,390
two K's in bookkeeping or one so let's

410
00:19:07,289 --> 00:19:12,690
say there's an optional Kay here this is

411
00:19:09,390 --> 00:19:14,790
optional so this is all just bookkeeping

412
00:19:12,690 --> 00:19:16,590
but we have to do it right so we want to

413
00:19:14,789 --> 00:19:19,200
we want a thing that allows us to do

414
00:19:16,589 --> 00:19:22,230
this bookkeeping where we push occluders

415
00:19:19,200 --> 00:19:25,200
and we note we can have any given thing

416
00:19:22,230 --> 00:19:28,349
can have an occluder or a light source

417
00:19:25,200 --> 00:19:30,420
that's part of it and that is it part of

418
00:19:28,349 --> 00:19:32,579
the rendered geometry it's just

419
00:19:30,420 --> 00:19:36,660
something separate and they all kind of

420
00:19:32,579 --> 00:19:39,720
go into sordid situations that allow us

421
00:19:36,660 --> 00:19:41,670
to have and sorting I mean we're like

422
00:19:39,720 --> 00:19:45,120
the Harry Potter sorting cap not sorting

423
00:19:41,670 --> 00:19:47,940
as in Z order or anything so we kind of

424
00:19:45,119 --> 00:19:49,799
want that stuff to be accurate right

425
00:19:47,940 --> 00:19:53,460
like we want that stuff to be able to be

426
00:19:49,799 --> 00:19:55,680
specified directly one or the other so

427
00:19:53,460 --> 00:20:00,750
that's one thing I do the other thing we

428
00:19:55,680 --> 00:20:03,029
got to do is like sampling control and

429
00:20:00,750 --> 00:20:09,750
that's gonna be kind of tricky as well

430
00:20:03,029 --> 00:20:12,089
so the issue that we face here is that

431
00:20:09,750 --> 00:20:15,230
we need information about the lighting

432
00:20:12,089 --> 00:20:17,639
environment and we may want that to be

433
00:20:15,230 --> 00:20:19,589
separate from occluders and it's kind of

434
00:20:17,640 --> 00:20:20,840
hard to understand exactly what we mean

435
00:20:19,589 --> 00:20:26,639
by this

436
00:20:20,839 --> 00:20:28,919
but yeah it's I'm not sure exactly how

437
00:20:26,640 --> 00:20:30,360
possible it is to have us have for us to

438
00:20:28,920 --> 00:20:32,340
have complete freedom because of the way

439
00:20:30,359 --> 00:20:33,569
that the lighting solution is going to

440
00:20:32,339 --> 00:20:36,269
work but let me just tell you what we

441
00:20:33,569 --> 00:20:38,579
would want ideally and then we can talk

442
00:20:36,269 --> 00:20:41,700
about what the chances are that we can

443
00:20:38,579 --> 00:20:44,549
actually make it happen right but I

444
00:20:41,700 --> 00:20:46,440
think we probably could so what we want

445
00:20:44,549 --> 00:20:48,119
to do here is say okay let's

446
00:20:46,440 --> 00:20:50,669
suppose that we send down an occluder

447
00:20:48,119 --> 00:20:52,648
alright and furthermore let's suppose

448
00:20:50,669 --> 00:20:54,600
this occluder is on something that is

449
00:20:52,648 --> 00:20:57,719
actually 3d geometry like one of our

450
00:20:54,599 --> 00:21:00,449
cubes that we have that's you know

451
00:20:57,720 --> 00:21:06,120
creating some kind of a geometrical

452
00:21:00,450 --> 00:21:07,379
feature in the game like so and so one

453
00:21:06,119 --> 00:21:08,729
of the things we might want to do is try

454
00:21:07,378 --> 00:21:10,319
to capture the light at a couple

455
00:21:08,730 --> 00:21:12,389
different places like at the corners of

456
00:21:10,319 --> 00:21:14,339
these things and maybe in the middle or

457
00:21:12,388 --> 00:21:15,928
something like that so that we have some

458
00:21:14,339 --> 00:21:18,689
various places that the light can be

459
00:21:15,929 --> 00:21:20,309
blending too and obviously like if this

460
00:21:18,690 --> 00:21:22,889
thing is here we may want to set these

461
00:21:20,308 --> 00:21:25,619
points so that they're at where it joins

462
00:21:22,888 --> 00:21:28,408
the next one right we don't necessarily

463
00:21:25,619 --> 00:21:30,239
want those points to be at specific

464
00:21:28,409 --> 00:21:33,840
locations all the time

465
00:21:30,240 --> 00:21:35,609
we may often want them to be at at

466
00:21:33,839 --> 00:21:37,459
things that aren't the vertex corners

467
00:21:35,609 --> 00:21:40,859
right there are different locations and

468
00:21:37,460 --> 00:21:43,048
so what we want to do is send down an

469
00:21:40,859 --> 00:21:45,269
occluder that's just this thing and not

470
00:21:43,048 --> 00:21:47,099
have to care about that and then be able

471
00:21:45,269 --> 00:21:48,899
to specify whatever lighting sample

472
00:21:47,099 --> 00:21:51,658
points we think are most logical right

473
00:21:48,898 --> 00:21:53,398
and we don't really want to have to

474
00:21:51,659 --> 00:21:55,350
break the occluder up into a grid or

475
00:21:53,398 --> 00:21:57,329
anything because when it's actually

476
00:21:55,349 --> 00:22:00,928
doing intersection testing we don't

477
00:21:57,329 --> 00:22:03,509
actually care at first whether it hits a

478
00:22:00,929 --> 00:22:06,690
particular point here we just care to

479
00:22:03,509 --> 00:22:08,669
know if it hit at all right and so we

480
00:22:06,690 --> 00:22:10,710
might want the occluders to be specified

481
00:22:08,669 --> 00:22:11,820
as one thing and the points that are

482
00:22:10,710 --> 00:22:14,460
sampled on the include err to be

483
00:22:11,819 --> 00:22:16,138
specified as another and then what we

484
00:22:14,460 --> 00:22:17,909
have to do though is we have to figure

485
00:22:16,138 --> 00:22:22,678
out a way of these lighting samples

486
00:22:17,909 --> 00:22:24,389
gaining information right based on what

487
00:22:22,679 --> 00:22:27,470
ends up happening with this occluder in

488
00:22:24,388 --> 00:22:27,469
the light computation

489
00:22:30,809 --> 00:22:35,079
so there's a couple of different ways we

490
00:22:32,740 --> 00:22:38,710
can do this one is that when light hits

491
00:22:35,079 --> 00:22:40,269
the surface here after we realize that

492
00:22:38,710 --> 00:22:43,569
it hit this surface we look for the

493
00:22:40,269 --> 00:22:46,930
closest sample point and we assign that

494
00:22:43,569 --> 00:22:51,759
hit to that sample point right so

495
00:22:46,930 --> 00:22:53,710
effectively we have as many sample

496
00:22:51,759 --> 00:22:57,250
points total as we specified are the

497
00:22:53,710 --> 00:23:00,730
other lighting elements but each element

498
00:22:57,250 --> 00:23:02,410
is assigned to an occluder that is the

499
00:23:00,730 --> 00:23:04,569
occluder that will activate that light

500
00:23:02,410 --> 00:23:06,700
element when hit right and it only

501
00:23:04,569 --> 00:23:08,289
activates one of the lighting elements

502
00:23:06,700 --> 00:23:10,360
or maybe it spreads it out to some

503
00:23:08,289 --> 00:23:13,149
within a radius so maybe like when we

504
00:23:10,359 --> 00:23:14,949
hit it'll add energy to all the lights

505
00:23:13,150 --> 00:23:15,910
in a radius of that hit or something

506
00:23:14,950 --> 00:23:17,890
right

507
00:23:15,910 --> 00:23:22,150
proportional to how far away it was who

508
00:23:17,890 --> 00:23:24,190
knows so we do kind of have to figure

509
00:23:22,150 --> 00:23:28,590
out some sort of a way of making this

510
00:23:24,190 --> 00:23:31,150
make sense but there you go so that's

511
00:23:28,589 --> 00:23:33,490
what I'm more or less talking about

512
00:23:31,150 --> 00:23:35,050
right so we want to be able to specify

513
00:23:33,490 --> 00:23:36,400
samples and we want to be able to

514
00:23:35,049 --> 00:23:38,259
specify occluders and we don't

515
00:23:36,400 --> 00:23:42,430
necessarily want those two things to be

516
00:23:38,259 --> 00:23:45,960
coupled by a rule a generation rule we

517
00:23:42,430 --> 00:23:49,509
may want those things to be hand I mean

518
00:23:45,960 --> 00:23:51,279
mmm they're got hand placed in the sense

519
00:23:49,509 --> 00:23:54,309
that you know we're not editing the

520
00:23:51,279 --> 00:23:56,139
level design putting them in but they're

521
00:23:54,309 --> 00:23:59,470
hand placed from the perspective of the

522
00:23:56,140 --> 00:24:01,509
the world generation where when things

523
00:23:59,470 --> 00:24:04,059
are created next to each other or

524
00:24:01,509 --> 00:24:07,059
anything else like this we want them to

525
00:24:04,059 --> 00:24:12,569
be able to set their sample points in a

526
00:24:07,059 --> 00:24:15,039
logical fashion right so that's

527
00:24:12,569 --> 00:24:16,960
basically what I'm talking about here

528
00:24:15,039 --> 00:24:19,480
and this is all just bookkeeping which

529
00:24:16,960 --> 00:24:21,309
we kind of need to do so I think that's

530
00:24:19,480 --> 00:24:23,829
what we want to do today and and again

531
00:24:21,309 --> 00:24:26,470
just to relist it here let's actually

532
00:24:23,829 --> 00:24:31,750
this the three things we want to do so

533
00:24:26,470 --> 00:24:34,350
we want an occluder buffer we want

534
00:24:31,750 --> 00:24:34,349
samples

535
00:24:34,990 --> 00:24:49,069
/ occluder and we want no lighting

536
00:24:43,299 --> 00:24:51,319
lighting right which is to say some way

537
00:24:49,069 --> 00:24:56,029
of specifying that a thing doesn't isn't

538
00:24:51,319 --> 00:25:01,789
supposed to get any light at all it's

539
00:24:56,029 --> 00:25:05,299
just supposed to be drawn normally all

540
00:25:01,789 --> 00:25:07,190
right so let's start on these three

541
00:25:05,299 --> 00:25:09,700
things and see how much of them we can

542
00:25:07,190 --> 00:25:09,700
get done today

543
00:25:09,819 --> 00:25:16,700
that is our goal so the first thing the

544
00:25:13,789 --> 00:25:18,230
no light lighting at the moment we don't

545
00:25:16,700 --> 00:25:19,670
really have to worry about optimization

546
00:25:18,230 --> 00:25:21,589
too much because we're still kind of in

547
00:25:19,670 --> 00:25:23,150
the experimental phase of everything so

548
00:25:21,589 --> 00:25:24,889
really let's just go ahead and for the

549
00:25:23,150 --> 00:25:26,990
moment do the simplest possible thing

550
00:25:24,890 --> 00:25:29,690
and that is that instead of calling

551
00:25:26,990 --> 00:25:31,759
sunlight on something what we can do is

552
00:25:29,690 --> 00:25:33,580
say if the light index or the light

553
00:25:31,759 --> 00:25:37,339
count or something is a special number

554
00:25:33,579 --> 00:25:39,169
then we will do no lighting so for

555
00:25:37,339 --> 00:25:43,849
example let's just say that light index

556
00:25:39,170 --> 00:25:47,090
one so you know if the frag light index

557
00:25:43,849 --> 00:25:50,029
equals zero then we will say that any

558
00:25:47,089 --> 00:25:55,669
anything that has a frag light index of

559
00:25:50,029 --> 00:25:57,980
zero does not get lit right and Pat's

560
00:25:55,670 --> 00:25:59,810
the better way to say this would be well

561
00:25:57,980 --> 00:26:02,049
since the surface reflect color coming

562
00:25:59,809 --> 00:26:04,220
through here is normally unadulterated

563
00:26:02,049 --> 00:26:06,769
what we could actually do is just put

564
00:26:04,220 --> 00:26:09,920
all of this stuff entirely within this

565
00:26:06,769 --> 00:26:11,869
here right so then we could say oh all

566
00:26:09,920 --> 00:26:13,759
right if you want to send that something

567
00:26:11,869 --> 00:26:15,319
that doesn't have any lighting then if

568
00:26:13,759 --> 00:26:17,900
the frag light index it's not equal to

569
00:26:15,319 --> 00:26:19,639
zero will do the sunlight call and we'll

570
00:26:17,900 --> 00:26:21,920
modify the surface reflectance

571
00:26:19,640 --> 00:26:29,600
in fact we could now actually put that

572
00:26:21,920 --> 00:26:32,930
in there like so right and then what

573
00:26:29,599 --> 00:26:34,669
we'll do is if you want to keep

574
00:26:32,930 --> 00:26:39,190
something unlit you just set the frag

575
00:26:34,670 --> 00:26:43,880
light index equal to zero and off you go

576
00:26:39,190 --> 00:26:46,220
right so I think that's really all there

577
00:26:43,880 --> 00:26:48,799
is to it

578
00:26:46,220 --> 00:26:51,140
I don't think there's much else so now

579
00:26:48,798 --> 00:26:53,808
when I run this of course that will mean

580
00:26:51,140 --> 00:26:56,809
that pretty much everything should say

581
00:26:53,808 --> 00:26:59,029
as normal except for one thing the very

582
00:26:56,808 --> 00:27:00,619
first thing that gets drawn will be

583
00:26:59,029 --> 00:27:03,649
unlit and you can see it right there

584
00:27:00,619 --> 00:27:05,509
right then everything else will be lit

585
00:27:03,650 --> 00:27:07,250
so then all we have to do is make sure

586
00:27:05,509 --> 00:27:10,609
that now when we actually send things

587
00:27:07,250 --> 00:27:15,409
down we correlate them properly in that

588
00:27:10,609 --> 00:27:18,349
way so when we have a render group here

589
00:27:15,409 --> 00:27:21,590
and we're sending these things down what

590
00:27:18,349 --> 00:27:25,609
we could do is now just say okay

591
00:27:21,589 --> 00:27:28,009
in the render group not sure exactly how

592
00:27:25,609 --> 00:27:31,548
we want to do this but in the render

593
00:27:28,009 --> 00:27:32,929
group we can say that we you know have a

594
00:27:31,548 --> 00:27:34,460
boolean or something that turns on

595
00:27:32,929 --> 00:27:39,679
lighting so we can have like lighting

596
00:27:34,460 --> 00:27:42,679
enabled is some you know some kind of a

597
00:27:39,679 --> 00:27:45,230
boolean that we specify here right and

598
00:27:42,679 --> 00:27:46,970
we actually we also have a render

599
00:27:45,230 --> 00:27:48,288
transform thing and maybe we can put it

600
00:27:46,970 --> 00:27:50,690
we can put it in there too if we want to

601
00:27:48,288 --> 00:27:52,279
like we do the default upright transform

602
00:27:50,690 --> 00:27:55,850
or the default flat transform those

603
00:27:52,279 --> 00:28:00,288
things those transforms had stuff in

604
00:27:55,849 --> 00:28:03,649
them that we were using before as well

605
00:28:00,288 --> 00:28:06,230
we could potentially use that I'm not

606
00:28:03,650 --> 00:28:08,780
sure which one makes more sense for now

607
00:28:06,230 --> 00:28:10,970
I think I'll use the render group and

608
00:28:08,779 --> 00:28:14,089
that will have light enabled and it'll

609
00:28:10,970 --> 00:28:17,000
also have light index in there probably

610
00:28:14,089 --> 00:28:18,829
and what we'll do is we'll just say you

611
00:28:17,000 --> 00:28:24,079
can turn the lighting on and off via

612
00:28:18,829 --> 00:28:26,808
this via the render group right all

613
00:28:24,079 --> 00:28:28,579
right so when we go in to push quad what

614
00:28:26,808 --> 00:28:30,440
we can see is that push quad had

615
00:28:28,579 --> 00:28:33,259
hard-coded a light count and a light

616
00:28:30,440 --> 00:28:35,120
index in here right and so what we want

617
00:28:33,259 --> 00:28:37,970
to do here is we want to say all right

618
00:28:35,119 --> 00:28:40,029
the light count and the light index we

619
00:28:37,970 --> 00:28:45,230
only want to set them to something

620
00:28:40,029 --> 00:28:46,849
if lighting is enabled so normally you

621
00:28:45,230 --> 00:28:48,349
know in this case we could take a look

622
00:28:46,849 --> 00:28:49,480
at the render group here somewhere right

623
00:28:48,349 --> 00:28:52,399
there it is

624
00:28:49,480 --> 00:28:54,019
so basically say if the group lighting

625
00:28:52,400 --> 00:28:56,330
enabled then we do some lighting

626
00:28:54,019 --> 00:28:58,500
otherwise we just leave these at zero

627
00:28:56,329 --> 00:29:00,538
values right

628
00:28:58,500 --> 00:29:02,519
so here we'll say okay maybe the light

629
00:29:00,538 --> 00:29:05,609
count equals four if lighting is enabled

630
00:29:02,519 --> 00:29:08,788
right and then we'll set the light index

631
00:29:05,609 --> 00:29:13,798
whatever is getting sent down that will

632
00:29:08,788 --> 00:29:16,259
be the light index for the group and

633
00:29:13,798 --> 00:29:20,730
then we'll say lighten the group light

634
00:29:16,259 --> 00:29:23,398
index gets incremented by four so that's

635
00:29:20,730 --> 00:29:25,019
just doing four lights per and what we

636
00:29:23,398 --> 00:29:28,579
want to extend this to in the future

637
00:29:25,019 --> 00:29:31,889
obviously is we want to be able to

638
00:29:28,579 --> 00:29:33,689
change this to have it so that when

639
00:29:31,890 --> 00:29:35,130
people are pushing quads down they can

640
00:29:33,690 --> 00:29:38,009
choose how many letting samples they're

641
00:29:35,130 --> 00:29:39,450
sending right but at the moment now

642
00:29:38,009 --> 00:29:41,009
we'll just have a thing that allows us

643
00:29:39,450 --> 00:29:54,480
to not do lighting if we don't want to

644
00:29:41,009 --> 00:29:57,028
do lighting right okay so now since that

645
00:29:54,480 --> 00:29:58,740
should be initialized to zero by default

646
00:29:57,028 --> 00:30:00,390
nothing should be lit right so

647
00:29:58,740 --> 00:30:02,730
everything is now not going through the

648
00:30:00,390 --> 00:30:04,950
lighting pipeline and this is nice too

649
00:30:02,730 --> 00:30:07,470
because here you know you can see when

650
00:30:04,950 --> 00:30:09,750
we are doing our debug display we can

651
00:30:07,470 --> 00:30:11,870
actually see the results that do display

652
00:30:09,750 --> 00:30:14,460
not going through lighting our debug

653
00:30:11,869 --> 00:30:17,939
stuff actually works now as well so

654
00:30:14,460 --> 00:30:20,038
that's all nice as well and everything

655
00:30:17,940 --> 00:30:23,909
is kind of happy and pleasant at that

656
00:30:20,038 --> 00:30:27,450
point so that's all good but now we want

657
00:30:23,909 --> 00:30:29,690
to kind of let me see here I have a

658
00:30:27,450 --> 00:30:29,690
question

659
00:30:34,960 --> 00:30:40,539
can we run it full res now

660
00:30:48,470 --> 00:30:56,909
yeah I was wondering why we were so

661
00:30:55,140 --> 00:30:58,500
blurry and I was like oh I forgot we

662
00:30:56,909 --> 00:30:59,700
dropped the res way down when we were

663
00:30:58,500 --> 00:31:08,400
fussing with some of the other lighting

664
00:30:59,700 --> 00:31:10,650
stuff yeah looks so much nicer at 1920

665
00:31:08,400 --> 00:31:11,730
by 1080 um maybe doesn't on the stream

666
00:31:10,650 --> 00:31:14,309
because you know compression is on

667
00:31:11,730 --> 00:31:15,480
anyway so now if we want to turn on

668
00:31:14,308 --> 00:31:19,639
lighting there's a couple of things you

669
00:31:15,480 --> 00:31:30,538
want to do so what we want to do here is

670
00:31:19,640 --> 00:31:32,070
in the render group that light index we

671
00:31:30,538 --> 00:31:35,759
kinda have a problem with we don't want

672
00:31:32,069 --> 00:31:37,579
it to be set to zero right because zero

673
00:31:35,759 --> 00:31:40,349
means we're not going to do any lighting

674
00:31:37,579 --> 00:31:42,658
so we want to make sure that the first

675
00:31:40,349 --> 00:31:45,808
thing we send down in a render group is

676
00:31:42,659 --> 00:31:52,110
gonna be a 1 or something right so when

677
00:31:45,808 --> 00:31:54,509
we initialize the render group right

678
00:31:52,109 --> 00:31:57,769
here what we want to do is make sure our

679
00:31:54,509 --> 00:32:01,619
initial set up there has the light index

680
00:31:57,769 --> 00:32:04,619
of 1 that way we always start at

681
00:32:01,619 --> 00:32:06,658
something that we'll get with and again

682
00:32:04,619 --> 00:32:08,308
it's this render setup thing here this

683
00:32:06,659 --> 00:32:10,620
is where I don't know like because this

684
00:32:08,308 --> 00:32:12,869
candles like clip recs and stuff I don't

685
00:32:10,619 --> 00:32:14,969
know if that might be a better place for

686
00:32:12,869 --> 00:32:17,250
the lighting to live I'm really not sure

687
00:32:14,970 --> 00:32:20,279
it depends on whether you tend to

688
00:32:17,250 --> 00:32:22,349
alternate lit versus unlit things and I

689
00:32:20,279 --> 00:32:24,418
really don't know so we're gonna find

690
00:32:22,349 --> 00:32:25,558
out so then what I'm going to do is I'm

691
00:32:24,419 --> 00:32:33,390
just gonna have an inline void here

692
00:32:25,558 --> 00:32:37,339
called a naval lighting and inside here

693
00:32:33,390 --> 00:32:37,340
I'm just gonna say alright like enabled

694
00:32:37,788 --> 00:32:41,029
was true

695
00:32:45,569 --> 00:32:55,450
sorry lighting enabled all right so now

696
00:32:53,259 --> 00:32:58,990
my hope is that here in the worlds mode

697
00:32:55,450 --> 00:33:02,830
when we do the begin render group for

698
00:32:58,990 --> 00:33:05,409
update and render worlds we can just

699
00:33:02,829 --> 00:33:08,288
enable the lighting here and be off with

700
00:33:05,409 --> 00:33:10,059
it now I don't actually know who should

701
00:33:08,288 --> 00:33:13,960
do it because I don't know if anyone

702
00:33:10,058 --> 00:33:14,918
wants to be able to do unlit stuff in

703
00:33:13,960 --> 00:33:18,548
there as well

704
00:33:14,919 --> 00:33:20,769
I'm not really sure but you can kind of

705
00:33:18,548 --> 00:33:23,528
see in here right we get a render group

706
00:33:20,769 --> 00:33:25,868
and we call some stuff and it looks like

707
00:33:23,528 --> 00:33:28,058
to me like it really just wants to get

708
00:33:25,868 --> 00:33:31,658
enabled in there probably I'm not

709
00:33:28,058 --> 00:33:35,618
totally sure exactly where I want that

710
00:33:31,659 --> 00:33:37,059
to be eventually but probably here is

711
00:33:35,618 --> 00:33:42,878
where we want that to happen I'm

712
00:33:37,058 --> 00:33:45,788
guessing right and then hopefully you

713
00:33:42,878 --> 00:33:49,928
know from there now you can see we've

714
00:33:45,788 --> 00:33:53,259
already kind of got one positive aspect

715
00:33:49,929 --> 00:33:55,778
of it is now our our debug stuff can

716
00:33:53,259 --> 00:33:57,849
actually be visible because we kind of

717
00:33:55,778 --> 00:34:01,179
didn't have that working before the way

718
00:33:57,849 --> 00:34:03,009
we would have hoped right and now if I

719
00:34:01,179 --> 00:34:05,288
run the lighting we get the lighting

720
00:34:03,009 --> 00:34:07,419
solution as we should and what I should

721
00:34:05,288 --> 00:34:10,599
be able to do now is in this when we're

722
00:34:07,419 --> 00:34:15,730
drawing the debug lighting I should be

723
00:34:10,599 --> 00:34:17,530
able to intentionally make debug

724
00:34:15,730 --> 00:34:21,030
lighting output like if we're in world

725
00:34:17,530 --> 00:34:26,099
mode show lighting I can just say like

726
00:34:21,030 --> 00:34:28,690
if we're not showing up lighting right

727
00:34:26,099 --> 00:34:32,379
because I don't want to enable lighting

728
00:34:28,690 --> 00:34:34,750
unless we're trying to actually let's

729
00:34:32,378 --> 00:34:36,429
show the world so now in our debug

730
00:34:34,750 --> 00:34:39,579
display lighting is turned off so we can

731
00:34:36,429 --> 00:34:42,849
actually see the real values as they

732
00:34:39,579 --> 00:34:45,849
appear which is what I wanted and then

733
00:34:42,849 --> 00:34:49,169
when we do the actual scene render we

734
00:34:45,849 --> 00:34:53,480
can see it lit by the values in question

735
00:34:49,168 --> 00:34:58,668
which again is is the goal right

736
00:34:53,480 --> 00:34:58,668
I'm gonna get that little drinky-poo

737
00:35:06,159 --> 00:35:17,348
all right um so I think that's really it

738
00:35:15,068 --> 00:35:19,858
for that part of the problem like I

739
00:35:17,349 --> 00:35:25,690
think that's all we needed

740
00:35:19,858 --> 00:35:31,119
basically that's just you know that's

741
00:35:25,690 --> 00:35:40,900
just it lighting lighting over letting

742
00:35:31,119 --> 00:35:42,700
done and so I think yeah like it sure

743
00:35:40,900 --> 00:35:44,318
seems to work okay everything that

744
00:35:42,699 --> 00:35:46,598
should be lit is lit everything that

745
00:35:44,318 --> 00:35:49,750
shouldn't be lit isn't lit so it's all

746
00:35:46,599 --> 00:35:51,220
good so I think then that would be ready

747
00:35:49,750 --> 00:35:53,500
to then start working on the lighting

748
00:35:51,219 --> 00:35:55,209
quality which again we're not going to

749
00:35:53,500 --> 00:35:56,380
do quite yet because we got to do the

750
00:35:55,210 --> 00:36:02,920
other two things we said we're going to

751
00:35:56,380 --> 00:36:04,480
do which is and I can even we have to do

752
00:36:02,920 --> 00:36:07,210
the occluder buffer and the samples for

753
00:36:04,480 --> 00:36:11,079
occlusion stuff so what we want to do

754
00:36:07,210 --> 00:36:13,199
here again is like this this seem sort

755
00:36:11,079 --> 00:36:16,720
of shows you everything you need to know

756
00:36:13,199 --> 00:36:21,129
about exactly what we need to do here so

757
00:36:16,719 --> 00:36:24,669
if I go over here and and look at what's

758
00:36:21,130 --> 00:36:26,858
happening so these trees are actually

759
00:36:24,670 --> 00:36:30,700
those like cards that are kind of

760
00:36:26,858 --> 00:36:34,598
sticking out there and that's not really

761
00:36:30,699 --> 00:36:37,449
very helpful in terms of doing lighting

762
00:36:34,599 --> 00:36:41,079
solutions it basically means that for

763
00:36:37,449 --> 00:36:43,000
example like if you look at the way in

764
00:36:41,079 --> 00:36:44,980
which these trees will block light it

765
00:36:43,000 --> 00:36:47,500
appears when you're looking at these

766
00:36:44,980 --> 00:36:50,349
trees that they're tall trees right

767
00:36:47,500 --> 00:36:51,818
they're like you know that's a tree that

768
00:36:50,349 --> 00:36:53,710
you are looking at and it should be

769
00:36:51,818 --> 00:36:55,599
fairly high I don't know if it should be

770
00:36:53,710 --> 00:36:57,699
as high as maybe one of these but it

771
00:36:55,599 --> 00:37:00,338
should be pretty high so you would

772
00:36:57,699 --> 00:37:02,528
expect it to be blocking like one tiles

773
00:37:00,338 --> 00:37:04,420
worth of light or so over here you would

774
00:37:02,528 --> 00:37:06,489
expect this tile to be shadowed and have

775
00:37:04,420 --> 00:37:08,048
a lot less light falling on it if the

776
00:37:06,489 --> 00:37:10,149
light was coming from over here

777
00:37:08,048 --> 00:37:12,278
however that is not what will actually

778
00:37:10,150 --> 00:37:14,440
happen and the reason for that is

779
00:37:12,278 --> 00:37:15,849
because the light is actually almost not

780
00:37:14,440 --> 00:37:18,039
blocked at all there's just this really

781
00:37:15,849 --> 00:37:19,289
laying down flat thin kind of thing

782
00:37:18,039 --> 00:37:21,840
right

783
00:37:19,289 --> 00:37:24,690
and so it's the opposite of what you

784
00:37:21,840 --> 00:37:28,530
would want for shadowing things on the

785
00:37:24,690 --> 00:37:31,079
other side there so that's the problem

786
00:37:28,530 --> 00:37:33,750
as it stands at the moment and what we

787
00:37:31,079 --> 00:37:35,690
want to do is we want to go ahead and be

788
00:37:33,750 --> 00:37:39,889
able to like replace stuff like that

789
00:37:35,690 --> 00:37:42,690
with little stand up you know

790
00:37:39,889 --> 00:37:45,170
rectangular prisms or something that

791
00:37:42,690 --> 00:37:49,800
will block the light as if they were

792
00:37:45,170 --> 00:37:54,059
straight up and down for the purposes of

793
00:37:49,800 --> 00:37:55,590
a lighting solution right and what we

794
00:37:54,059 --> 00:37:57,509
actually replace them with I don't know

795
00:37:55,590 --> 00:38:00,329
but we just need some way of specifying

796
00:37:57,510 --> 00:38:02,310
quads right an alternate you know we're

797
00:38:00,329 --> 00:38:04,710
drawing this one quad we want to specify

798
00:38:02,309 --> 00:38:06,150
an alternate maybe like two quads maybe

799
00:38:04,710 --> 00:38:08,820
in an X shape or something like that

800
00:38:06,150 --> 00:38:12,269
that would cut just to cut light out

801
00:38:08,820 --> 00:38:14,700
here right and furthermore we also

802
00:38:12,269 --> 00:38:17,670
probably want the ability to light this

803
00:38:14,699 --> 00:38:20,219
tree the same would be true right we

804
00:38:17,670 --> 00:38:23,519
need a surface that will collect the

805
00:38:20,219 --> 00:38:27,239
light and map that on to the tree if

806
00:38:23,519 --> 00:38:29,608
that makes sense and so we kind of need

807
00:38:27,239 --> 00:38:34,679
a way to collect those lighting samples

808
00:38:29,608 --> 00:38:38,819
which we also don't have right so I

809
00:38:34,679 --> 00:38:46,399
think that's pretty much everything we

810
00:38:38,820 --> 00:38:46,400
said I can think of yeah

811
00:38:47,690 --> 00:38:53,039
it's gonna be fun to have this working

812
00:38:50,039 --> 00:38:55,710
in real time it already sort of is

813
00:38:53,039 --> 00:38:57,779
pretty quick I'm not sure will

814
00:38:55,710 --> 00:39:03,210
I guess just because we cut down the

815
00:38:57,780 --> 00:39:05,490
number of occluders I'm curious how slow

816
00:39:03,210 --> 00:39:10,019
we run if we run it real time I don't

817
00:39:05,489 --> 00:39:24,299
actually know sorry to get distracted

818
00:39:10,019 --> 00:39:31,199
here but I kind of just want to see what

819
00:39:24,300 --> 00:39:39,570
happens if we just run it every time I'm

820
00:39:31,199 --> 00:39:45,000
gonna get rid of this so now you know

821
00:39:39,570 --> 00:39:46,830
when I run this around right I can I'm

822
00:39:45,000 --> 00:39:55,679
sure it won't run fast enough to do real

823
00:39:46,829 --> 00:39:59,909
time but I'm just curious so it's it's

824
00:39:55,679 --> 00:40:04,980
surprisingly fast compared to what I was

825
00:39:59,909 --> 00:40:07,500
expecting right and you can kind of see

826
00:40:04,980 --> 00:40:09,500
that like hey that's actually gonna be

827
00:40:07,500 --> 00:40:12,389
kind of cool as we get that smoothed out

828
00:40:09,500 --> 00:40:15,449
uh-huh and and improve the quality of

829
00:40:12,389 --> 00:40:19,619
those and that's plenty fast to run on

830
00:40:15,449 --> 00:40:21,449
the GPU as well I think but you know we

831
00:40:19,619 --> 00:40:23,159
don't we're gonna have to do work to

832
00:40:21,449 --> 00:40:24,419
smooth out the values we don't want them

833
00:40:23,159 --> 00:40:25,529
to flicker obviously it's stuff like

834
00:40:24,420 --> 00:40:27,900
that but we haven't even gotten this

835
00:40:25,530 --> 00:40:31,620
down to a real lighting solution anyway

836
00:40:27,900 --> 00:40:33,210
yet so there's that as well but that's

837
00:40:31,619 --> 00:40:35,460
gonna be kind of nice once we have that

838
00:40:33,210 --> 00:40:38,820
working because it'll really allow us to

839
00:40:35,460 --> 00:40:40,860
sort of have some cool lighting effects

840
00:40:38,820 --> 00:40:42,390
in the game that we definitely would not

841
00:40:40,860 --> 00:40:44,720
have been able to have any other way

842
00:40:42,389 --> 00:40:44,719
right

843
00:40:52,260 --> 00:41:00,070
yeah so we're definitely getting there I

844
00:40:57,130 --> 00:41:02,170
think it's been worth the trouble to try

845
00:41:00,070 --> 00:41:07,980
and figure out a good way to have our

846
00:41:02,170 --> 00:41:10,269
scene be lit in a quasi accurate way

847
00:41:07,980 --> 00:41:14,010
just so we can start to have some of

848
00:41:10,269 --> 00:41:14,009
those kind of nice interesting effects

849
00:41:21,000 --> 00:41:25,380
and yeah it just looks like most of our

850
00:41:23,250 --> 00:41:27,300
problem is gonna probably be as we

851
00:41:25,380 --> 00:41:29,010
improve the letting quality solution

852
00:41:27,300 --> 00:41:30,210
which I think we'll be able to do pretty

853
00:41:29,010 --> 00:41:32,069
easily it looks like most of our

854
00:41:30,210 --> 00:41:33,740
problems just gonna be making sure that

855
00:41:32,068 --> 00:41:36,630
our values don't flicker over time

856
00:41:33,739 --> 00:41:38,848
that's part of the part of having a

857
00:41:36,630 --> 00:41:41,519
stochastic process is that if you get

858
00:41:38,849 --> 00:41:43,109
under sampled regions they're highly

859
00:41:41,519 --> 00:41:45,150
likely to flicker because the random

860
00:41:43,108 --> 00:41:50,130
value sometimes get things in that area

861
00:41:45,150 --> 00:41:53,430
and sometimes don't right and so you

862
00:41:50,130 --> 00:41:55,740
know one way to work around that is

863
00:41:53,429 --> 00:41:57,929
fiction right you can make all of your

864
00:41:55,739 --> 00:42:00,959
lights be torches and then all of a

865
00:41:57,929 --> 00:42:02,429
sudden nobody complains right because

866
00:42:00,960 --> 00:42:05,159
it's they think it's just part of the

867
00:42:02,429 --> 00:42:07,409
effect but yeah assuming that we want

868
00:42:05,159 --> 00:42:10,108
sort of stationary lit environments that

869
00:42:07,409 --> 00:42:11,519
don't have flickering light sources but

870
00:42:10,108 --> 00:42:12,809
you know honestly I don't know that we

871
00:42:11,519 --> 00:42:14,309
have any of those I think everything we

872
00:42:12,809 --> 00:42:19,259
have is supposed to be kind of lit

873
00:42:14,309 --> 00:42:20,578
flickery so for all I know we won't

874
00:42:19,260 --> 00:42:22,710
really have to do that much work but

875
00:42:20,579 --> 00:42:25,530
yeah we will make these more stable over

876
00:42:22,710 --> 00:42:26,818
time either way just because I think

877
00:42:25,530 --> 00:42:29,069
there's a lot of stuff we can do to

878
00:42:26,818 --> 00:42:30,599
improve the sampling quality but it's

879
00:42:29,068 --> 00:42:33,269
just kind of cool that this is already

880
00:42:30,599 --> 00:42:36,568
running on the CPU in real time without

881
00:42:33,269 --> 00:42:39,088
us having optimized it at all that's

882
00:42:36,568 --> 00:42:41,159
kind of reassuring and nice because it

883
00:42:39,088 --> 00:42:44,489
means that we probably won't have a huge

884
00:42:41,159 --> 00:42:47,098
uphill battle to to make some scenes

885
00:42:44,489 --> 00:42:49,348
right now there'll be more lights in a

886
00:42:47,099 --> 00:42:50,338
scene than this but again we will be

887
00:42:49,349 --> 00:42:51,720
attacking that with some

888
00:42:50,338 --> 00:42:55,108
multi-resolution stuff because we're

889
00:42:51,719 --> 00:42:57,389
only really going to be doing bounces on

890
00:42:55,108 --> 00:42:59,549
on full geometry in areas like right

891
00:42:57,389 --> 00:43:02,699
where we are right we're not going to do

892
00:42:59,550 --> 00:43:04,560
it for everything but that's pretty cool

893
00:43:02,699 --> 00:43:08,489
actually

894
00:43:04,559 --> 00:43:12,449
so yeah so not not 60 frames a second

895
00:43:08,489 --> 00:43:15,029
but also not optimized and running on

896
00:43:12,449 --> 00:43:19,889
the CPU so that bodes well I think right

897
00:43:15,030 --> 00:43:22,490
that bodes well for when we need it to

898
00:43:19,889 --> 00:43:22,489
be 60 years

899
00:43:23,099 --> 00:43:33,309
you know if it was running it you know

900
00:43:29,079 --> 00:43:34,779
one one frame every five seconds or

901
00:43:33,309 --> 00:43:36,759
something that would that's a lot

902
00:43:34,780 --> 00:43:38,560
scarier cuz the gap that you have to

903
00:43:36,760 --> 00:43:46,210
bridge to get it to perform it is just

904
00:43:38,559 --> 00:43:47,860
so huge right okay so and that's

905
00:43:46,210 --> 00:43:49,840
probably just because we're compiling an

906
00:43:47,860 --> 00:43:51,490
optimized mode right so we're getting

907
00:43:49,840 --> 00:43:55,329
probably the compiler is doing an okay

908
00:43:51,489 --> 00:44:00,269
job of like maybe making some some good

909
00:43:55,329 --> 00:44:03,969
decisions there I don't know all right

910
00:44:00,269 --> 00:44:08,280
so what we want to do now is we want to

911
00:44:03,969 --> 00:44:11,739
go ahead and move to the sort of

912
00:44:08,280 --> 00:44:13,990
separate occluders and world geometry

913
00:44:11,739 --> 00:44:19,139
kind of mode of thinking and this is

914
00:44:13,989 --> 00:44:21,789
gonna be useful not only because not a

915
00:44:19,139 --> 00:44:24,219
not only because we don't really want to

916
00:44:21,789 --> 00:44:28,179
have too many occluders in the scene but

917
00:44:24,219 --> 00:44:30,369
the other reason we don't really want to

918
00:44:28,179 --> 00:44:31,809
lock those two together is because

919
00:44:30,369 --> 00:44:34,389
certain things you might want to draw

920
00:44:31,809 --> 00:44:36,369
there might be a lot of them and we

921
00:44:34,389 --> 00:44:38,980
don't want them to bog down the letting

922
00:44:36,369 --> 00:44:40,569
solution so for example let's say we've

923
00:44:38,980 --> 00:44:42,610
got something that that's like spewing

924
00:44:40,570 --> 00:44:44,740
out like thousands of particles right

925
00:44:42,610 --> 00:44:46,539
well thousands of particles would

926
00:44:44,739 --> 00:44:49,659
immediately tank our lighting solution

927
00:44:46,539 --> 00:44:52,389
we can't afford to light each individual

928
00:44:49,659 --> 00:44:55,799
particle as if it's it's own reflector

929
00:44:52,389 --> 00:44:58,449
or distributor kind of a thing right

930
00:44:55,800 --> 00:45:00,580
maybe in ten years we'll have that kind

931
00:44:58,449 --> 00:45:03,309
of technology our horsepower at our

932
00:45:00,579 --> 00:45:05,710
disposal but not today so we're gonna

933
00:45:03,309 --> 00:45:07,840
want to be able to put in sort of meta

934
00:45:05,710 --> 00:45:10,389
information like meta occluders for

935
00:45:07,840 --> 00:45:11,860
things like that so that particle

936
00:45:10,389 --> 00:45:16,139
systems are just broken up into regions

937
00:45:11,860 --> 00:45:19,900
and lit you know with with sort of

938
00:45:16,139 --> 00:45:22,299
approximate geometry and that sort of

939
00:45:19,900 --> 00:45:27,280
thing so because we need to do stuff

940
00:45:22,300 --> 00:45:29,320
like that we it's not just for accuracy

941
00:45:27,280 --> 00:45:31,360
purposes that we need to do this right

942
00:45:29,320 --> 00:45:34,000
it's not just so we can avoid the like

943
00:45:31,360 --> 00:45:36,370
weird slanted tree is not you know

944
00:45:34,000 --> 00:45:36,789
collecting the right light scenario it's

945
00:45:36,369 --> 00:45:40,900
all

946
00:45:36,789 --> 00:45:43,059
because even if some some things that we

947
00:45:40,900 --> 00:45:44,559
draw even if they would work correctly

948
00:45:43,059 --> 00:45:48,039
if we push them all through the lighting

949
00:45:44,559 --> 00:45:51,549
system we can't afford the the time

950
00:45:48,039 --> 00:45:53,949
budget the processing budget to actually

951
00:45:51,550 --> 00:45:57,250
compute all that lighting and so that's

952
00:45:53,949 --> 00:46:00,639
why this changes is important for those

953
00:45:57,250 --> 00:46:02,050
reasons as well so if we go in here and

954
00:46:00,639 --> 00:46:05,739
take a look at what we're gonna have to

955
00:46:02,050 --> 00:46:08,410
do to have these two things kept

956
00:46:05,739 --> 00:46:11,429
separate what we know right now is we

957
00:46:08,409 --> 00:46:14,799
sort of have a platform vertex structure

958
00:46:11,429 --> 00:46:16,149
what does it called textured vertex that

959
00:46:14,800 --> 00:46:18,880
gets communicated to the graphics

960
00:46:16,150 --> 00:46:20,650
subsystem and what you can see here is

961
00:46:18,880 --> 00:46:23,470
this thing has the light index and the

962
00:46:20,650 --> 00:46:26,889
light count value attached to it and

963
00:46:23,469 --> 00:46:31,539
then it's using the lighting textures to

964
00:46:26,889 --> 00:46:33,099
gather that information fundamentally

965
00:46:31,539 --> 00:46:35,349
this doesn't have to change at all

966
00:46:33,099 --> 00:46:37,929
what does have to change is instead of

967
00:46:35,349 --> 00:46:40,150
pulling the occluders out of this we now

968
00:46:37,929 --> 00:46:44,949
just need some other thing here which is

969
00:46:40,150 --> 00:46:48,400
a light occluder or something or maybe

970
00:46:44,949 --> 00:46:52,109
we'll just call it a lighting surface we

971
00:46:48,400 --> 00:46:52,110
were calling them lighting elements I

972
00:46:53,940 --> 00:47:05,679
don't think we actually want let's take

973
00:47:01,000 --> 00:47:08,679
a look at this so here's the lighting

974
00:47:05,679 --> 00:47:12,369
elements and what you can see from this

975
00:47:08,679 --> 00:47:15,599
is that most of the stuff that's getting

976
00:47:12,369 --> 00:47:15,599
sent down

977
00:47:23,929 --> 00:47:34,349
so it does kind of look like we could it

978
00:47:32,969 --> 00:47:35,939
does kind of look like we could just

979
00:47:34,349 --> 00:47:44,099
start talking about these lighting

980
00:47:35,940 --> 00:47:45,720
elements directly perhaps so just to

981
00:47:44,099 --> 00:47:57,299
sort of sketch out what we need to do

982
00:47:45,719 --> 00:48:01,709
here right so we kind of have surfaces

983
00:47:57,300 --> 00:48:06,390
and points right and the points if we

984
00:48:01,710 --> 00:48:08,250
were to distribute these things that if

985
00:48:06,389 --> 00:48:11,369
we were to take the things that were

986
00:48:08,250 --> 00:48:13,019
previously composed together to form a

987
00:48:11,369 --> 00:48:14,609
single lighting element and slip them up

988
00:48:13,019 --> 00:48:16,139
into the things that occur at sample

989
00:48:14,610 --> 00:48:19,019
points versus the things that are

990
00:48:16,139 --> 00:48:24,779
surface based right then what we pretty

991
00:48:19,019 --> 00:48:27,239
much see is we've got this stuff here in

992
00:48:24,780 --> 00:48:30,570
the lighting surface we have where it is

993
00:48:27,239 --> 00:48:32,750
what its normal is right whether it's

994
00:48:30,570 --> 00:48:37,860
transparent width and height it's x-axis

995
00:48:32,750 --> 00:48:39,570
and I don't really know whether the

996
00:48:37,860 --> 00:48:45,360
color should be prayer lighting point or

997
00:48:39,570 --> 00:48:50,970
not so let's just say for now that

998
00:48:45,360 --> 00:48:53,670
that's that it's this way so you've kind

999
00:48:50,969 --> 00:48:55,799
of got a lighting point which is a point

1000
00:48:53,670 --> 00:49:00,000
on one of these surfaces it's got a

1001
00:48:55,800 --> 00:49:01,650
reflector in an emitter right so this is

1002
00:49:00,000 --> 00:49:05,730
how it reflects light this is how much

1003
00:49:01,650 --> 00:49:11,610
it's emitting at the moment and then we

1004
00:49:05,730 --> 00:49:14,570
would have these would be break it

1005
00:49:11,610 --> 00:49:17,599
broken up into sort of lighting

1006
00:49:14,570 --> 00:49:17,600
immediate s--

1007
00:49:18,760 --> 00:49:24,380
intermediates rather so you know you

1008
00:49:22,429 --> 00:49:26,599
would specify the lighting services and

1009
00:49:24,380 --> 00:49:28,760
the loading points and then you would

1010
00:49:26,599 --> 00:49:30,920
specify and then it would generate

1011
00:49:28,760 --> 00:49:37,400
lighting intermediates for those which

1012
00:49:30,920 --> 00:49:39,220
are done in sort of passes right where

1013
00:49:37,400 --> 00:49:42,710
there's sort of an accumulated emission

1014
00:49:39,219 --> 00:49:45,019
and there's a direction to the light

1015
00:49:42,710 --> 00:49:51,519
source right and those things are

1016
00:49:45,019 --> 00:49:54,349
normalized later so I think that's

1017
00:49:51,519 --> 00:49:57,079
mostly what we're talking about here I

1018
00:49:54,349 --> 00:49:59,389
don't really know but that seems like it

1019
00:49:57,079 --> 00:50:05,449
may be sort of a little bit kind of

1020
00:49:59,389 --> 00:50:07,609
possibly and the only other thing we

1021
00:50:05,449 --> 00:50:10,789
need is to understand how lighting

1022
00:50:07,610 --> 00:50:13,579
points are distributed on lighting

1023
00:50:10,789 --> 00:50:19,730
services and really those are just going

1024
00:50:13,579 --> 00:50:21,650
to be this stuff right so every lighting

1025
00:50:19,730 --> 00:50:26,409
surface is going to have information

1026
00:50:21,650 --> 00:50:29,240
about how many points in the point array

1027
00:50:26,409 --> 00:50:33,319
go with it and those are going to

1028
00:50:29,239 --> 00:50:36,469
directly correspond to people who want

1029
00:50:33,320 --> 00:50:39,230
to use those here right so we would have

1030
00:50:36,469 --> 00:50:41,239
the exact same thing up here so this

1031
00:50:39,230 --> 00:50:43,219
would be our lighting surfaces and these

1032
00:50:41,239 --> 00:50:45,079
would be our lighting points these would

1033
00:50:43,219 --> 00:50:46,609
be our intermediate values that got get

1034
00:50:45,079 --> 00:50:47,779
computed by the lighting system they

1035
00:50:46,610 --> 00:50:53,510
don't necessarily need to be defined

1036
00:50:47,780 --> 00:50:55,700
here and I think that's basically it we

1037
00:50:53,510 --> 00:50:58,490
would no longer have lighting textures

1038
00:50:55,699 --> 00:51:05,059
as a thing that's not really something

1039
00:50:58,489 --> 00:51:08,209
we would need anymore because the only

1040
00:51:05,059 --> 00:51:10,099
stuff that gets put in there is the next

1041
00:51:08,210 --> 00:51:13,550
emmitt C and the average direction of

1042
00:51:10,099 --> 00:51:16,369
light so all of this stuff would kind of

1043
00:51:13,550 --> 00:51:18,260
go away and the voxel stuff would go

1044
00:51:16,369 --> 00:51:21,579
away right all of that stuff so the C

1045
00:51:18,260 --> 00:51:21,580
and the D values

1046
00:51:24,929 --> 00:51:33,119
the C value is the next omit C the D

1047
00:51:29,769 --> 00:51:37,659
value is the average direction to light

1048
00:51:33,119 --> 00:51:40,170
right so that lighting intermediate is

1049
00:51:37,659 --> 00:51:46,779
really the thing that we're computing

1050
00:51:40,170 --> 00:51:49,180
and you know we could just send it down

1051
00:51:46,780 --> 00:51:59,380
directly it depends on how feisty we're

1052
00:51:49,179 --> 00:52:02,980
feeling but obviously we could just have

1053
00:51:59,380 --> 00:52:04,180
it so that those two textures you just

1054
00:52:02,980 --> 00:52:07,079
have two floating-point textures you can

1055
00:52:04,179 --> 00:52:07,079
send them down right

1056
00:52:16,019 --> 00:52:19,989
so anyway that seems like the sameness

1057
00:52:18,219 --> 00:52:21,849
way to break those apart so let's just

1058
00:52:19,989 --> 00:52:26,349
go ahead and suggest that we're going to

1059
00:52:21,849 --> 00:52:27,880
go ahead and do that and you know maybe

1060
00:52:26,349 --> 00:52:32,199
I will send down those lighting

1061
00:52:27,880 --> 00:52:34,750
intermediates directly I'm not sure all

1062
00:52:32,199 --> 00:52:37,269
right so I think first things first

1063
00:52:34,750 --> 00:52:40,929
let's take this slowly because again

1064
00:52:37,269 --> 00:52:43,929
this is GPU code on the back end and it

1065
00:52:40,929 --> 00:52:47,409
is hard to debug GPU code right GPU code

1066
00:52:43,929 --> 00:52:50,349
you don't have a lot of visibility in it

1067
00:52:47,409 --> 00:52:55,929
so what we want to do is we want to take

1068
00:52:50,349 --> 00:53:01,259
it in in slow managed steps so that we

1069
00:52:55,929 --> 00:53:01,259
can see if we break anything you know

1070
00:53:03,510 --> 00:53:08,590
right away and and we eliminate the

1071
00:53:06,610 --> 00:53:10,510
number of things that could break in any

1072
00:53:08,590 --> 00:53:13,420
given change so that it's easier for us

1073
00:53:10,510 --> 00:53:17,440
to debug right so all I want to do here

1074
00:53:13,420 --> 00:53:19,420
is just get that compiling here and then

1075
00:53:17,440 --> 00:53:21,550
in here where we have our lighting

1076
00:53:19,420 --> 00:53:24,460
solution what I'm gonna do with that is

1077
00:53:21,550 --> 00:53:25,780
I'm gonna pretend so so before we're

1078
00:53:24,460 --> 00:53:27,460
doing is we're taking all these vertices

1079
00:53:25,780 --> 00:53:28,540
down we're extracting them out into a

1080
00:53:27,460 --> 00:53:30,340
lighting solution and then wrangling

1081
00:53:28,539 --> 00:53:32,500
solution in fact what we're doing now is

1082
00:53:30,340 --> 00:53:34,809
free when we're pushing we're gonna pre

1083
00:53:32,500 --> 00:53:36,610
make the things that we're using what I

1084
00:53:34,809 --> 00:53:39,190
want to do first is actually still run

1085
00:53:36,610 --> 00:53:42,150
the extraction pass so instead what I'm

1086
00:53:39,190 --> 00:53:48,880
gonna do here is I'm going to say oK

1087
00:53:42,150 --> 00:53:50,530
we've got these lighting surfaces that

1088
00:53:48,880 --> 00:53:53,940
we're gonna pull out we've got those

1089
00:53:50,530 --> 00:53:53,940
letting points that we're gonna put out

1090
00:53:59,139 --> 00:54:09,609
and then we've got our lighting

1091
00:54:00,400 --> 00:54:12,460
intermediates okay and then what I want

1092
00:54:09,610 --> 00:54:17,740
to do is I want to go ahead and make

1093
00:54:12,460 --> 00:54:19,750
these buffers be extracted and run the

1094
00:54:17,739 --> 00:54:24,779
letting station that we already have on

1095
00:54:19,750 --> 00:54:26,860
them okay so when we do extractor from

1096
00:54:24,780 --> 00:54:29,220
extract reflectors from quads what I'm

1097
00:54:26,860 --> 00:54:31,150
going to do is I'm just going to have

1098
00:54:29,219 --> 00:54:54,849
three things here I'm going to have

1099
00:54:31,150 --> 00:54:59,579
surface point and intermediate yeah like

1100
00:54:54,849 --> 00:54:59,579
so and then everywhere that this thing

1101
00:55:08,969 --> 00:55:14,079
all right so everywhere that this thing

1102
00:55:12,099 --> 00:55:20,980
actually was accessing a specific one of

1103
00:55:14,079 --> 00:55:25,869
these we're gonna access like we're

1104
00:55:20,980 --> 00:55:27,190
gonna access all three so in here we're

1105
00:55:25,869 --> 00:55:29,829
looping through let's just use the

1106
00:55:27,190 --> 00:55:34,920
single index for this so you know we've

1107
00:55:29,829 --> 00:55:34,920
got let's say we've got an element index

1108
00:55:57,590 --> 00:56:01,980
you know what now I think about it we're

1109
00:55:59,639 --> 00:56:03,659
these are going at different rates so I

1110
00:56:01,980 --> 00:56:05,280
guess we don't really want to even do

1111
00:56:03,659 --> 00:56:07,079
that so I guess we really do want to do

1112
00:56:05,280 --> 00:56:16,400
something like this where we just say

1113
00:56:07,079 --> 00:56:16,400
okay the surface point an intermediate

1114
00:56:17,750 --> 00:56:22,739
like so and as we come down through here

1115
00:56:21,599 --> 00:56:27,960
what we want to say is all right we're

1116
00:56:22,739 --> 00:56:29,729
going to extract a a surface and this

1117
00:56:27,960 --> 00:56:35,840
surface is going to be the whole width

1118
00:56:29,730 --> 00:56:35,840
and height right so for example here

1119
00:56:37,099 --> 00:56:51,389
we've just got that this is the P

1120
00:56:46,800 --> 00:56:54,060
equation here is actually fine but we

1121
00:56:51,389 --> 00:56:59,849
need to do the middle P equation so

1122
00:56:54,059 --> 00:57:03,469
we're gonna need something like this so

1123
00:56:59,849 --> 00:57:10,309
here's like the location of our occluder

1124
00:57:03,469 --> 00:57:10,309
or our surface rather than the X sub

1125
00:57:11,750 --> 00:57:22,519
thing here we really just want to do 0.5

1126
00:57:16,019 --> 00:57:26,030
times width and 0.5 times height right I

1127
00:57:22,519 --> 00:57:26,030
think that's right

1128
00:57:28,400 --> 00:57:31,910
let me go ahead and look at all the

1129
00:57:30,530 --> 00:57:46,070
things we need to fill out here so we

1130
00:57:31,909 --> 00:57:47,839
have to fill out P and and now I think

1131
00:57:46,070 --> 00:57:50,390
about it do we really need to fill out n

1132
00:57:47,840 --> 00:57:51,140
here or should mb per point I don't

1133
00:57:50,389 --> 00:57:53,690
really know

1134
00:57:51,139 --> 00:57:55,579
it depends on whether we want to model

1135
00:57:53,690 --> 00:57:57,530
different facing directions I don't

1136
00:57:55,579 --> 00:58:00,219
think we do so I think they all want to

1137
00:57:57,530 --> 00:58:02,390
have the same facing direction probably

1138
00:58:00,219 --> 00:58:04,689
because we need that for coming so I'm

1139
00:58:02,389 --> 00:58:18,859
gonna leave it there

1140
00:58:04,690 --> 00:58:34,329
transparency width and height x axis Y

1141
00:58:18,860 --> 00:58:34,329
axis and these two okay

1142
00:58:34,639 --> 00:58:42,498
so here we are recording the surface

1143
00:58:37,960 --> 00:58:47,630
that we actually wanted and what we need

1144
00:58:42,498 --> 00:58:49,699
to do now is we need to have for that

1145
00:58:47,630 --> 00:58:52,759
surface we need to produce a bunch of

1146
00:58:49,699 --> 00:58:54,730
points right so you can see we've got

1147
00:58:52,759 --> 00:58:57,440
this point here also we might as well

1148
00:58:54,730 --> 00:59:00,498
say at the end of this right we're doing

1149
00:58:57,440 --> 00:59:02,450
plus plus surface I don't know what bit

1150
00:59:00,498 --> 00:59:03,649
maps is doing here probably it was from

1151
00:59:02,449 --> 00:59:05,210
the old days when we were still

1152
00:59:03,650 --> 00:59:06,588
recording that we're not recording it

1153
00:59:05,210 --> 00:59:09,499
anymore so we can just get rid of that

1154
00:59:06,588 --> 00:59:09,920
that's a dead variable it's not doing

1155
00:59:09,498 --> 00:59:12,709
anything

1156
00:59:09,920 --> 00:59:17,539
so plus plus surface will advance that

1157
00:59:12,710 --> 00:59:19,460
surface for us and then we've got this

1158
00:59:17,539 --> 00:59:23,239
subdivision count and so the subdivision

1159
00:59:19,460 --> 00:59:24,528
count is going to give us our points so

1160
00:59:23,239 --> 00:59:26,349
we're basically to modify a bunch of

1161
00:59:24,528 --> 00:59:30,920
points and then do a point plus plus

1162
00:59:26,349 --> 00:59:37,430
right and on the point we also have the

1163
00:59:30,920 --> 00:59:43,009
inter meet two intermediate values like

1164
00:59:37,429 --> 00:59:46,759
so right okay although well you know

1165
00:59:43,009 --> 00:59:48,469
what honestly because we know the offset

1166
00:59:46,759 --> 00:59:49,940
of these we probably should just use it

1167
00:59:48,469 --> 00:59:53,058
so that whatever the light index is set

1168
00:59:49,940 --> 00:59:56,179
to we can actually use right we also

1169
00:59:53,059 --> 00:59:58,700
don't want to light anything that is set

1170
00:59:56,179 --> 01:00:03,409
to zero so the other thing we can do

1171
00:59:58,699 --> 01:00:08,618
here is say if vert zero light index

1172
01:00:03,409 --> 01:00:08,618
equals zero we don't do it

1173
01:00:14,139 --> 01:00:20,659
right

1174
01:00:17,090 --> 01:00:27,740
so I think that's mostly what we want

1175
01:00:20,659 --> 01:00:29,000
here seems saying so if the latex is my

1176
01:00:27,739 --> 01:00:30,379
equal to zero we pull out all the

1177
01:00:29,000 --> 01:00:32,179
information and we create the surface

1178
01:00:30,380 --> 01:00:34,670
from it and now we just need to create

1179
01:00:32,179 --> 01:00:38,319
the points from it and the point is

1180
01:00:34,670 --> 01:00:41,119
gonna be points plus surface light index

1181
01:00:38,320 --> 01:00:43,850
or I should say just maybe just light

1182
01:00:41,119 --> 01:00:46,819
index right intermediate plus light

1183
01:00:43,849 --> 01:00:50,239
index and here we're gonna do a plus

1184
01:00:46,820 --> 01:00:54,470
plus light index and that light index is

1185
01:00:50,239 --> 01:00:56,569
just going to start off late index zero

1186
01:00:54,469 --> 01:01:02,539
and then here we're going to just do an

1187
01:00:56,570 --> 01:01:06,380
assertion that light index equals the

1188
01:01:02,539 --> 01:01:07,789
light count and in in the future what

1189
01:01:06,380 --> 01:01:09,769
we're gonna do is use this light count

1190
01:01:07,789 --> 01:01:12,019
to tell how to strip how to distribute

1191
01:01:09,769 --> 01:01:13,429
points probably will say however many it

1192
01:01:12,019 --> 01:01:14,570
asks for will distribute them although

1193
01:01:13,429 --> 01:01:15,739
in the future we're probably going to

1194
01:01:14,570 --> 01:01:18,650
want them to be distributed more

1195
01:01:15,739 --> 01:01:23,059
manually or more specifically like so

1196
01:01:18,650 --> 01:01:26,119
they'll probably be the person who

1197
01:01:23,059 --> 01:01:27,920
pushes the quad will say how they're

1198
01:01:26,119 --> 01:01:30,049
distributed so this probably won't

1199
01:01:27,920 --> 01:01:33,470
distribute them in this way right this

1200
01:01:30,050 --> 01:01:36,500
routine would be hoisted up to a more

1201
01:01:33,469 --> 01:01:39,259
knowledgeable place so anyway we're

1202
01:01:36,500 --> 01:01:41,420
gonna go ahead and and write these out

1203
01:01:39,260 --> 01:01:43,790
here so we've got the point P we know we

1204
01:01:41,420 --> 01:01:46,130
want the this stuff is not relevant

1205
01:01:43,789 --> 01:01:48,679
anymore we know we want the ref color in

1206
01:01:46,130 --> 01:01:50,210
here right we don't need the

1207
01:01:48,679 --> 01:01:52,399
transparency because that can't vary so

1208
01:01:50,210 --> 01:01:55,280
it's gonna stay the same as above we've

1209
01:01:52,400 --> 01:01:56,690
got the emission amounts as well and

1210
01:01:55,280 --> 01:02:00,590
then we've got the intermediate values

1211
01:01:56,690 --> 01:02:01,670
which just need to be cleared right and

1212
01:02:00,590 --> 01:02:04,519
we could have just cleared the whole

1213
01:02:01,670 --> 01:02:06,380
buffer and maybe that's what we should

1214
01:02:04,519 --> 01:02:09,009
do in the future but that's the GP

1215
01:02:06,380 --> 01:02:09,010
you'll be doing that

1216
01:02:11,409 --> 01:02:16,449
and I think that's it right so that I

1217
01:02:14,380 --> 01:02:19,210
think should initialize the surfaces and

1218
01:02:16,449 --> 01:02:20,710
the points and everything else there

1219
01:02:19,210 --> 01:02:23,679
right

1220
01:02:20,710 --> 01:02:26,159
we need this color value to be unpacked

1221
01:02:23,679 --> 01:02:26,159
here

1222
01:02:35,989 --> 01:02:41,689
and let's see then we're yeah then we're

1223
01:02:39,289 --> 01:02:45,318
sort of good to go so now when we do ray

1224
01:02:41,690 --> 01:02:48,679
casting if the Ray casting really just

1225
01:02:45,318 --> 01:02:51,230
needs to figure out when it's doing its

1226
01:02:48,679 --> 01:02:54,558
testing it it really doesn't have to

1227
01:02:51,230 --> 01:02:56,389
test against as many services as it used

1228
01:02:54,559 --> 01:02:59,450
to right before we were forcing it to do

1229
01:02:56,389 --> 01:03:04,578
a ray cast against four times as many

1230
01:02:59,449 --> 01:03:06,169
services as we will now and that's a big

1231
01:03:04,579 --> 01:03:08,359
reason for bundling those occluders

1232
01:03:06,170 --> 01:03:10,700
together right if you have a big old

1233
01:03:08,358 --> 01:03:14,179
plane you can test against to see if you

1234
01:03:10,699 --> 01:03:16,549
hit it even if you're taking samples all

1235
01:03:14,179 --> 01:03:18,469
over that plane you'd rather just test

1236
01:03:16,550 --> 01:03:20,839
the hit on that one surface then figure

1237
01:03:18,469 --> 01:03:22,308
out where you were closest to right so

1238
01:03:20,838 --> 01:03:25,308
what we want to do here is say all right

1239
01:03:22,309 --> 01:03:26,720
go through the sources these sources are

1240
01:03:25,309 --> 01:03:33,980
specifically going to be lighting

1241
01:03:26,719 --> 01:03:38,029
services for each one of the elements

1242
01:03:33,980 --> 01:03:39,889
that we go through we really want the

1243
01:03:38,030 --> 01:03:42,019
surface count here so we're going to

1244
01:03:39,889 --> 01:03:44,269
need to record that right in the

1245
01:03:42,019 --> 01:03:46,548
lighting solution so in the lighting

1246
01:03:44,269 --> 01:03:47,030
solution we need two separate things

1247
01:03:46,548 --> 01:03:49,429
here

1248
01:03:47,030 --> 01:03:51,619
we need a surface counts that's how many

1249
01:03:49,429 --> 01:03:54,078
surfaces to test and we need a light

1250
01:03:51,619 --> 01:03:56,720
count or a point count that's how many

1251
01:03:54,079 --> 01:03:58,910
sample points there are now we don't

1252
01:03:56,719 --> 01:04:02,029
really need to know what the point count

1253
01:03:58,909 --> 01:04:03,739
is because the point count is just kind

1254
01:04:02,030 --> 01:04:06,170
of always known from the other

1255
01:04:03,739 --> 01:04:08,029
information you have but we probably

1256
01:04:06,170 --> 01:04:10,849
want to store that because eventually we

1257
01:04:08,030 --> 01:04:13,309
have to send down the point information

1258
01:04:10,849 --> 01:04:14,420
as a sub texture maybe we want to know

1259
01:04:13,309 --> 01:04:16,790
how many there were I don't know so

1260
01:04:14,420 --> 01:04:22,608
we'll keep that value for now but it's

1261
01:04:16,789 --> 01:04:24,920
not really that important right so here

1262
01:04:22,608 --> 01:04:26,750
we have solution we know what these are

1263
01:04:24,920 --> 01:04:29,358
just by default we know the surface

1264
01:04:26,750 --> 01:04:33,230
count is going to be although we don't

1265
01:04:29,358 --> 01:04:35,058
actually now I think about it no we

1266
01:04:33,230 --> 01:04:36,679
don't know that because since things can

1267
01:04:35,059 --> 01:04:39,410
be taken out of the lighting solution we

1268
01:04:36,679 --> 01:04:40,759
don't know that ahead of time so yeah so

1269
01:04:39,409 --> 01:04:43,879
we really actually do need to track

1270
01:04:40,760 --> 01:04:45,140
these now that I think about it so let's

1271
01:04:43,880 --> 01:04:46,440
go ahead and do that so here is our

1272
01:04:45,139 --> 01:04:50,829
surface count

1273
01:04:46,440 --> 01:04:52,440
here is our point count and I'm gonna

1274
01:04:50,829 --> 01:05:04,239
put these at the end

1275
01:04:52,440 --> 01:05:06,960
oops and we will go ahead and do this

1276
01:05:04,239 --> 01:05:06,959
the other way round

1277
01:05:23,010 --> 01:05:26,680
so again just because we're still using

1278
01:05:25,239 --> 01:05:27,849
so couple fixed arrays for this just

1279
01:05:26,679 --> 01:05:29,799
let's just make sure we're not out of

1280
01:05:27,849 --> 01:05:31,509
bounds for now because hey we might miss

1281
01:05:29,800 --> 01:05:36,039
something and that would be stupid

1282
01:05:31,510 --> 01:05:46,270
right so I can go ahead and and inline

1283
01:05:36,039 --> 01:05:48,699
that plus there and we could so point

1284
01:05:46,269 --> 01:05:50,860
count is harder because point count

1285
01:05:48,699 --> 01:05:54,960
could be anywhere really in the array so

1286
01:05:50,860 --> 01:05:54,960
we really just need to do a max on that

1287
01:05:57,690 --> 01:06:03,130
that value we really need to my max on

1288
01:06:01,210 --> 01:06:06,880
that every time we use the light index

1289
01:06:03,130 --> 01:06:10,480
we basically have to see okay is the

1290
01:06:06,880 --> 01:06:13,809
light index greater than the solutions

1291
01:06:10,480 --> 01:06:15,400
point count if so and maybe the right

1292
01:06:13,809 --> 01:06:18,639
way to write this actually is is it less

1293
01:06:15,400 --> 01:06:20,889
than and if it is it should become equal

1294
01:06:18,639 --> 01:06:22,629
to right so every time we use the light

1295
01:06:20,889 --> 01:06:25,629
index we check and we have to bump those

1296
01:06:22,630 --> 01:06:29,170
bounds up and we can also assert when we

1297
01:06:25,630 --> 01:06:32,640
do that that the solution point count is

1298
01:06:29,170 --> 01:06:32,639
less than the light data with

1299
01:06:35,510 --> 01:06:39,210
so that just makes sure like if there's

1300
01:06:38,070 --> 01:06:41,780
some funny business going on we were

1301
01:06:39,210 --> 01:06:44,250
overwriting that buffer during testing

1302
01:06:41,780 --> 01:06:48,420
we would see and know that we were like

1303
01:06:44,250 --> 01:06:52,170
oh yeah right you got to fix that okay

1304
01:06:48,420 --> 01:06:56,099
so let's see in here this will just be a

1305
01:06:52,170 --> 01:06:57,480
surface count well I guess it needs to

1306
01:06:56,099 --> 01:07:01,190
be point count because we're gonna tell

1307
01:06:57,480 --> 01:07:01,190
you which point you hit probably

1308
01:07:02,900 --> 01:07:13,970
probably since we don't do final gather

1309
01:07:11,309 --> 01:07:13,969
anymore

1310
01:07:31,710 --> 01:07:36,909
so I'm not sure exactly how we want to

1311
01:07:34,329 --> 01:07:39,069
do this this we don't do final gather

1312
01:07:36,909 --> 01:07:46,179
staff stuff anymore we only do forward

1313
01:07:39,070 --> 01:07:49,870
push and we might not do final gather I

1314
01:07:46,179 --> 01:07:52,809
might slightly change the way this goes

1315
01:07:49,869 --> 01:07:55,539
so maybe we only really need to return

1316
01:07:52,809 --> 01:07:58,059
the I value here and we don't need to

1317
01:07:55,539 --> 01:07:59,800
return the color value right because

1318
01:07:58,059 --> 01:08:02,019
it's not really getting used anymore

1319
01:07:59,800 --> 01:08:03,340
and if we take a look at gather final

1320
01:08:02,019 --> 01:08:06,550
lighting right all it's doing is

1321
01:08:03,340 --> 01:08:10,809
normalizing the direction so this is not

1322
01:08:06,550 --> 01:08:12,430
you know the hemisphere sampling

1323
01:08:10,809 --> 01:08:20,829
nonsense it's not really doing anything

1324
01:08:12,429 --> 01:08:23,079
for us we if spirited out so the problem

1325
01:08:20,829 --> 01:08:25,090
is yeah we still wanted a way to do the

1326
01:08:23,079 --> 01:08:27,550
skylight stuff and maybe we want to do

1327
01:08:25,090 --> 01:08:33,130
some samples take some samples for the

1328
01:08:27,550 --> 01:08:38,140
skylight stuff that's a hard I'm not

1329
01:08:33,130 --> 01:08:40,060
sure but either way I don't think we

1330
01:08:38,140 --> 01:08:41,410
want to return the color in there

1331
01:08:40,060 --> 01:08:42,940
because yeah that just doesn't make

1332
01:08:41,409 --> 01:08:52,180
sense so I think we're gonna go ahead

1333
01:08:42,939 --> 01:08:57,309
and change this slightly all right this

1334
01:08:52,180 --> 01:09:01,409
is gonna just return the u-32 so we'll

1335
01:08:57,310 --> 01:09:01,410
just say that the u32 results

1336
01:09:14,630 --> 01:09:24,000
is going to be the element counts the

1337
01:09:19,349 --> 01:09:28,170
service count rather and when we go

1338
01:09:24,000 --> 01:09:29,880
through here we'll do everything else

1339
01:09:28,170 --> 01:09:32,000
that we want to do here I guess you can

1340
01:09:29,880 --> 01:09:36,960
just kind of do write it all just works

1341
01:09:32,000 --> 01:09:39,359
and then the results will just be equal

1342
01:09:36,960 --> 01:09:42,149
to the source index in the case where we

1343
01:09:39,359 --> 01:09:49,400
we hit properly right and I think that

1344
01:09:42,149 --> 01:09:51,838
just works so now if we want to do a

1345
01:09:49,399 --> 01:09:55,289
sample accumulation here like we were

1346
01:09:51,838 --> 01:09:58,948
doing before what we need to do is we

1347
01:09:55,289 --> 01:10:04,078
need to have a way of getting like the

1348
01:09:58,948 --> 01:10:08,750
normal and also the intermediate so it

1349
01:10:04,078 --> 01:10:08,750
needs two things it needs the surface

1350
01:10:09,020 --> 01:10:12,129
[Music]

1351
01:10:12,560 --> 01:10:25,190
and it needs the intermediate so it

1352
01:10:22,139 --> 01:10:25,190
needs the surface there

1353
01:10:27,710 --> 01:10:34,239
and the intermediates they're in there

1354
01:10:31,239 --> 01:10:34,239
right

1355
01:10:37,010 --> 01:10:45,020
so in compute light propagation what

1356
01:10:43,250 --> 01:10:48,439
we're doing here again is saying like

1357
01:10:45,020 --> 01:10:51,620
alright we got a loop through all of our

1358
01:10:48,439 --> 01:10:55,099
surfaces and figure out which ones are

1359
01:10:51,619 --> 01:10:58,939
shining light out anything so for this

1360
01:10:55,100 --> 01:10:59,539
what we want to do is we want to take a

1361
01:10:58,939 --> 01:11:02,059
look

1362
01:10:59,539 --> 01:11:04,789
per surface at the lights involved now

1363
01:11:02,060 --> 01:11:08,920
this is a little bit tricky because we

1364
01:11:04,789 --> 01:11:12,560
don't have a way of going back to the

1365
01:11:08,920 --> 01:11:15,109
the surface from which we're emanating

1366
01:11:12,560 --> 01:11:18,080
the light but maybe we don't care like

1367
01:11:15,109 --> 01:11:21,969
so we've got two choices here right and

1368
01:11:18,079 --> 01:11:21,970
I'm not sure which one makes more sense

1369
01:11:23,140 --> 01:11:31,060
one is that we say that each lighting

1370
01:11:26,630 --> 01:11:34,640
point also stores its normal right eye

1371
01:11:31,060 --> 01:11:36,380
and if each lighting points toward its

1372
01:11:34,640 --> 01:11:38,000
normal we would know what the hemisphere

1373
01:11:36,380 --> 01:11:40,699
was that we were trying to sample from

1374
01:11:38,000 --> 01:11:43,880
that point and we wouldn't have to look

1375
01:11:40,699 --> 01:11:45,319
backwards at the lighting like back ref

1376
01:11:43,880 --> 01:11:48,500
to the lighting surface to figure out

1377
01:11:45,319 --> 01:11:51,920
what the normal was right

1378
01:11:48,500 --> 01:12:00,279
so that's would make it so we could just

1379
01:11:51,920 --> 01:12:02,930
do a loop directly over the points but

1380
01:12:00,279 --> 01:12:04,609
we also wouldn't know how to take each

1381
01:12:02,930 --> 01:12:06,200
lighting service out we wouldn't know

1382
01:12:04,609 --> 01:12:09,469
how to do the suppression right because

1383
01:12:06,199 --> 01:12:16,010
we wouldn't know what the index was so

1384
01:12:09,470 --> 01:12:17,690
it seems kind of tricky and it suggests

1385
01:12:16,010 --> 01:12:19,820
that we kind of need to have the sub

1386
01:12:17,689 --> 01:12:26,210
loop I'm just worried that that sub loop

1387
01:12:19,819 --> 01:12:29,840
is gonna cause problems so I wonder if

1388
01:12:26,210 --> 01:12:34,119
you just want the data duplicated in

1389
01:12:29,840 --> 01:12:34,119
there you know I'm saying

1390
01:12:34,300 --> 01:12:48,560
rather than compressing it away like I'm

1391
01:12:47,300 --> 01:12:57,199
wondering if basically it shouldn't just

1392
01:12:48,560 --> 01:12:59,360
be this because you just want to loop

1393
01:12:57,199 --> 01:13:00,949
over all of your lighting points and do

1394
01:12:59,359 --> 01:13:02,359
the lighting directly on those points

1395
01:13:00,949 --> 01:13:03,559
you don't really want to be looking back

1396
01:13:02,359 --> 01:13:05,089
at the lighting services for any

1397
01:13:03,560 --> 01:13:09,130
particular reason pulling them into the

1398
01:13:05,090 --> 01:13:09,130
cache for no reason at all right

1399
01:13:09,340 --> 01:13:13,610
although everything may be fitting in

1400
01:13:11,539 --> 01:13:15,350
the cache I don't really know so that

1401
01:13:13,609 --> 01:13:17,719
may be a poor consideration but point

1402
01:13:15,350 --> 01:13:19,430
being you still have to do that extra

1403
01:13:17,720 --> 01:13:21,920
indirection for no reason and have an

1404
01:13:19,430 --> 01:13:23,600
extra loop and all that stuff so it

1405
01:13:21,920 --> 01:13:26,899
seems like you may want those things

1406
01:13:23,600 --> 01:13:28,220
duplicated so I'm gonna duplicate them

1407
01:13:26,899 --> 01:13:42,710
for the time being and then I guess

1408
01:13:28,220 --> 01:13:44,329
we'll just have to figure out I'm gonna

1409
01:13:42,710 --> 01:13:45,710
have to figure that out later because we

1410
01:13:44,329 --> 01:13:48,680
don't really have enough information to

1411
01:13:45,710 --> 01:13:50,810
know I really don't know but obviously

1412
01:13:48,680 --> 01:13:53,320
they're pretty easy right to do it you

1413
01:13:50,810 --> 01:13:53,320
just have

1414
01:13:59,930 --> 01:14:14,850
the surface index and the normal are

1415
01:14:09,149 --> 01:14:16,439
just inherited and that's it so what

1416
01:14:14,850 --> 01:14:18,240
happens at that point is we're doing

1417
01:14:16,439 --> 01:14:20,429
compute light propagation we would just

1418
01:14:18,239 --> 01:14:26,969
be the only thing we would be iterating

1419
01:14:20,430 --> 01:14:30,720
over right is the are the points

1420
01:14:26,970 --> 01:14:32,579
themselves right so I guess we can call

1421
01:14:30,720 --> 01:14:35,039
that at the emit index and that's going

1422
01:14:32,579 --> 01:14:41,369
to loop over the point count and we're

1423
01:14:35,039 --> 01:14:43,920
just going to loop over any points in

1424
01:14:41,369 --> 01:14:46,409
theory all the points should be used

1425
01:14:43,920 --> 01:14:50,970
besides point zero right we know point

1426
01:14:46,409 --> 01:15:02,399
zero was never used but every other

1427
01:14:50,970 --> 01:15:04,680
point should be because we decided that

1428
01:15:02,399 --> 01:15:07,170
the light offset zero was was the key

1429
01:15:04,680 --> 01:15:08,909
that you weren't doing any lighting

1430
01:15:07,170 --> 01:15:11,020
right you did not want to do any

1431
01:15:08,909 --> 01:15:14,158
lighting

1432
01:15:11,020 --> 01:15:14,159
[Music]

1433
01:15:28,539 --> 01:15:40,850
all right so anyway if we go over each

1434
01:15:31,189 --> 01:15:42,589
of these lighting points like so then

1435
01:15:40,850 --> 01:15:45,650
for each one of them we can take a look

1436
01:15:42,590 --> 01:15:48,260
to see whether or not it can it has any

1437
01:15:45,649 --> 01:15:50,239
emission to spray out into the world and

1438
01:15:48,260 --> 01:15:52,130
if it does then we can do our ray cast

1439
01:15:50,239 --> 01:15:54,500
and we'll get back a hit index if the

1440
01:15:52,130 --> 01:15:56,539
hit index suggests that we've hit a

1441
01:15:54,500 --> 01:15:58,100
surface then what we need to do is

1442
01:15:56,539 --> 01:16:01,399
figure out what the lighting point is

1443
01:15:58,100 --> 01:16:03,530
that we actually hit right now this is

1444
01:16:01,399 --> 01:16:07,429
not immediate we have to then take a

1445
01:16:03,529 --> 01:16:09,920
look to see for each of the lights in

1446
01:16:07,430 --> 01:16:12,140
that surface how far they are from the

1447
01:16:09,920 --> 01:16:15,649
hit point and wait are lighting

1448
01:16:12,140 --> 01:16:17,900
contribution accordingly or we can just

1449
01:16:15,649 --> 01:16:19,579
use the closest one like I don't know

1450
01:16:17,899 --> 01:16:21,799
which of those would be better again

1451
01:16:19,579 --> 01:16:28,819
this is very approximating what we're

1452
01:16:21,800 --> 01:16:31,010
effectively saying is if I have some

1453
01:16:28,819 --> 01:16:34,939
points on the surface and I hit

1454
01:16:31,010 --> 01:16:37,310
somewhere where do I record the light

1455
01:16:34,939 --> 01:16:39,500
right which of these gets the light that

1456
01:16:37,310 --> 01:16:41,960
was hit and one thing to do would be

1457
01:16:39,500 --> 01:16:44,390
like to spread it out among couple of

1458
01:16:41,960 --> 01:16:46,279
them another thing might be just give it

1459
01:16:44,390 --> 01:16:48,170
to the closest one another one would be

1460
01:16:46,279 --> 01:16:51,859
to give it to all of them and it just

1461
01:16:48,170 --> 01:16:53,569
gets weighted as it goes that's

1462
01:16:51,859 --> 01:16:57,799
something we're just gonna have to tune

1463
01:16:53,569 --> 01:16:59,569
because again it's like well we're

1464
01:16:57,800 --> 01:17:01,190
trying to do something that we would

1465
01:16:59,569 --> 01:17:02,750
like to do at every point on the surface

1466
01:17:01,189 --> 01:17:04,699
and we're approximated by doing it a few

1467
01:17:02,750 --> 01:17:06,649
points is thereit's which approximation

1468
01:17:04,699 --> 01:17:07,970
gives the more pleasing results for the

1469
01:17:06,649 --> 01:17:09,649
types of lights that we're using in the

1470
01:17:07,970 --> 01:17:14,300
types of services you're using I don't

1471
01:17:09,649 --> 01:17:17,389
know so we are gonna have to do a little

1472
01:17:14,300 --> 01:17:21,860
bit of a loop-de-loop ear where we go

1473
01:17:17,390 --> 01:17:24,829
through each of the so we have like a

1474
01:17:21,859 --> 01:17:31,259
surface you know point index equals zero

1475
01:17:24,829 --> 01:17:33,658
surface point index is less than I guess

1476
01:17:31,260 --> 01:17:36,570
what i want to do here is say that we

1477
01:17:33,658 --> 01:17:39,569
have a hit surface and that's going to

1478
01:17:36,569 --> 01:17:45,509
be the solution surfaces plus the hit

1479
01:17:39,569 --> 01:17:51,328
index so for each surface point index up

1480
01:17:45,510 --> 01:18:03,719
to what we called this no there we go

1481
01:17:51,328 --> 01:18:08,518
it's just light count so each of these

1482
01:18:03,719 --> 01:18:10,559
surface point index each of these two

1483
01:18:08,519 --> 01:18:18,960
different nations refers to a sub point

1484
01:18:10,559 --> 01:18:24,750
on the surface so we've got sorry so

1485
01:18:18,960 --> 01:18:28,948
we've got each individual point being

1486
01:18:24,750 --> 01:18:31,229
referenced off of sort of the sub region

1487
01:18:28,948 --> 01:18:34,049
that this surface corresponds to so we

1488
01:18:31,229 --> 01:18:35,698
take its first light index we add the

1489
01:18:34,050 --> 01:18:37,230
one that we're on relative to the

1490
01:18:35,698 --> 01:18:39,178
surface point and that gives us back one

1491
01:18:37,229 --> 01:18:45,538
of the points and then we can accumulate

1492
01:18:39,179 --> 01:18:48,590
our hit sample there right now what we

1493
01:18:45,538 --> 01:18:53,130
don't know is we don't actually know

1494
01:18:48,590 --> 01:18:55,440
what the amount of I guess the light

1495
01:18:53,130 --> 01:19:02,099
power if you will that we're getting

1496
01:18:55,439 --> 01:19:04,500
here we can modify that power by the

1497
01:19:02,099 --> 01:19:07,529
distance for example to the point if we

1498
01:19:04,500 --> 01:19:09,149
wanted to so for for example what we

1499
01:19:07,529 --> 01:19:12,448
could say is that the higher that

1500
01:19:09,149 --> 01:19:14,578
distance the less it should be or

1501
01:19:12,448 --> 01:19:22,348
something else like that so we could say

1502
01:19:14,578 --> 01:19:23,819
like you know you know this power equals

1503
01:19:22,349 --> 01:19:28,559
whatever the light power should have

1504
01:19:23,819 --> 01:19:29,908
been you know divided by like 1.0 F plus

1505
01:19:28,559 --> 01:19:34,019
the distance or something like that

1506
01:19:29,908 --> 01:19:37,738
right so we could do like distance

1507
01:19:34,019 --> 01:19:39,989
squared to the point and have like a

1508
01:19:37,738 --> 01:19:42,569
fall-off so that the amount that gets

1509
01:19:39,988 --> 01:19:44,709
added is you know is it's different sort

1510
01:19:42,569 --> 01:19:48,059
of that I'm not gonna try

1511
01:19:44,710 --> 01:19:48,060
to do that yet

1512
01:19:58,090 --> 01:20:04,569
because that's a little bit too much for

1513
01:20:01,060 --> 01:20:09,360
this pass through the code alright so

1514
01:20:04,569 --> 01:20:14,399
let's take a look here so we have oops

1515
01:20:09,359 --> 01:20:14,399
that's supposed to be in it yeah

1516
01:20:17,738 --> 01:20:21,909
and that needs to take the intermediate

1517
01:20:19,779 --> 01:20:51,849
as well I guess so this is the point

1518
01:20:21,909 --> 01:20:58,630
index so now we have both of those like

1519
01:20:51,850 --> 01:21:02,020
point to letting surface oh so we don't

1520
01:20:58,630 --> 01:21:04,750
actually need the hit point at all we

1521
01:21:02,020 --> 01:21:07,360
actually just need to surf the surface

1522
01:21:04,750 --> 01:21:09,039
that got hit which we know and the

1523
01:21:07,359 --> 01:21:15,119
intermediate we don't need the point I

1524
01:21:09,039 --> 01:21:17,920
guess all right it's so for a final

1525
01:21:15,119 --> 01:21:20,559
portion through here we can see we're

1526
01:21:17,920 --> 01:21:22,029
doing here is this is actually sort of

1527
01:21:20,560 --> 01:21:24,400
collapsing the intermediates and the

1528
01:21:22,029 --> 01:21:26,399
points together so that's gonna be

1529
01:21:24,399 --> 01:21:31,179
another one of these loops that goes

1530
01:21:26,399 --> 01:21:34,349
over the emitters like so like this and

1531
01:21:31,180 --> 01:21:34,350
so this is going to be

1532
01:21:38,829 --> 01:22:03,890
between points and intermediates and as

1533
01:21:52,460 --> 01:22:07,489
we go through those rename that

1534
01:22:03,890 --> 01:22:08,780
two-point index a little clearer as we

1535
01:22:07,489 --> 01:22:10,639
go through those

1536
01:22:08,779 --> 01:22:16,550
we just need to say that whatever the

1537
01:22:10,640 --> 01:22:18,350
point is versus the intermediate in

1538
01:22:16,550 --> 01:22:20,720
which you know reference the correct one

1539
01:22:18,350 --> 01:22:27,520
of those as we pull out the values but

1540
01:22:20,720 --> 01:22:27,520
that's really it so I think

1541
01:22:38,489 --> 01:22:41,920
average direction to light is kind of a

1542
01:22:40,720 --> 01:22:45,159
little wonky and that's probably

1543
01:22:41,920 --> 01:22:46,989
something we want to look at in a little

1544
01:22:45,159 --> 01:22:49,050
more detail later but one of the things

1545
01:22:46,989 --> 01:23:08,710
that we probably should do here I think

1546
01:22:49,050 --> 01:23:10,029
is just put this at the end of this and

1547
01:23:08,710 --> 01:23:11,140
then just get rid of this scatter final

1548
01:23:10,029 --> 01:23:13,829
lighting nonsense because we're not

1549
01:23:11,140 --> 01:23:13,829
doing that anymore

1550
01:23:13,989 --> 01:23:19,779
so we should just normalize at the end

1551
01:23:15,819 --> 01:23:22,359
to be done with it all right so that's

1552
01:23:19,779 --> 01:23:24,159
pretty much all of the modifications to

1553
01:23:22,359 --> 01:23:25,420
this routine that needs to happen so now

1554
01:23:24,159 --> 01:23:29,189
we just have to deal with the stuff that

1555
01:23:25,420 --> 01:23:32,350
actually outputs any of this stuff and

1556
01:23:29,189 --> 01:23:34,149
we need to come up with ways that we can

1557
01:23:32,350 --> 01:23:38,020
visualize what we're looking at here

1558
01:23:34,149 --> 01:23:39,909
right so this is a little tricky because

1559
01:23:38,020 --> 01:23:43,260
now we sort of have two pieces of

1560
01:23:39,909 --> 01:23:45,849
information we have points and we have

1561
01:23:43,260 --> 01:23:48,760
reflectors and we probably want a way to

1562
01:23:45,850 --> 01:23:50,079
visualize either of those two things and

1563
01:23:48,760 --> 01:23:54,760
so I think what we're gonna want to do

1564
01:23:50,079 --> 01:23:57,489
here is have two two different routines

1565
01:23:54,760 --> 01:24:01,150
one that's like output the sample points

1566
01:23:57,489 --> 01:24:03,699
and one as little tiny rectangles and

1567
01:24:01,149 --> 01:24:07,960
one that's like output the surfaces as

1568
01:24:03,699 --> 01:24:09,819
what they actually are and maybe just

1569
01:24:07,960 --> 01:24:11,560
draws them with their average amount of

1570
01:24:09,819 --> 01:24:14,170
light that they have so average the

1571
01:24:11,560 --> 01:24:18,660
points together something like this

1572
01:24:14,170 --> 01:24:18,659
I'm not going to quite write those yet

1573
01:24:22,679 --> 01:24:26,219
so instead we're just gonna take a look

1574
01:24:24,149 --> 01:24:28,559
at this and see if we can have put this

1575
01:24:26,219 --> 01:24:30,118
stuff correctly I'm tempted to start

1576
01:24:28,560 --> 01:24:32,429
deleting the voxel code just so it's not

1577
01:24:30,118 --> 01:24:34,618
in the way because I'm pretty sure we're

1578
01:24:32,429 --> 01:24:38,039
just never gonna use it again I think

1579
01:24:34,618 --> 01:24:41,759
this is the better way to go but you

1580
01:24:38,039 --> 01:24:46,829
never know it's hard it's tempting but

1581
01:24:41,760 --> 01:24:48,329
you never know okay so when we come

1582
01:24:46,829 --> 01:24:49,769
through here what we need to do we don't

1583
01:24:48,329 --> 01:24:52,920
need those surfaces any more of those

1584
01:24:49,770 --> 01:24:54,239
are not relevant right so all we need to

1585
01:24:52,920 --> 01:24:55,980
do is just go through our points and

1586
01:24:54,238 --> 01:25:00,029
copy our points over so we should just

1587
01:24:55,979 --> 01:25:08,579
be able to say that the points as they

1588
01:25:00,029 --> 01:25:10,229
come over I think it's just the

1589
01:25:08,579 --> 01:25:13,170
intermediate values that we need right

1590
01:25:10,229 --> 01:25:15,738
it's just the oh no but we copy the

1591
01:25:13,170 --> 01:25:15,739
emits the in

1592
01:25:24,390 --> 01:25:30,630
so I think we just go through all of

1593
01:25:25,979 --> 01:25:32,219
these and we copy them all over right we

1594
01:25:30,630 --> 01:25:34,800
can even copy zero over even though it

1595
01:25:32,220 --> 01:25:37,110
doesn't really ever get used it doesn't

1596
01:25:34,800 --> 01:25:40,890
really matter so we go through here and

1597
01:25:37,109 --> 01:25:45,089
take all of the same measurements we're

1598
01:25:40,890 --> 01:25:50,369
taking before we don't really have to

1599
01:25:45,090 --> 01:25:52,319
look at the desk D packed stuff for the

1600
01:25:50,369 --> 01:25:53,309
P next stuff that stuff's not getting

1601
01:25:52,319 --> 01:25:55,979
used anymore right

1602
01:25:53,310 --> 01:25:58,850
so all we really have to do is just pack

1603
01:25:55,979 --> 01:25:58,849
to the point index

1604
01:26:21,469 --> 01:26:27,939
so all we should really have to do here

1605
01:26:23,238 --> 01:26:27,939
is take the intermediates and the point

1606
01:26:27,998 --> 01:26:37,219
values copy them down to the textures as

1607
01:26:32,238 --> 01:26:38,658
before can off we go all right so now we

1608
01:26:37,219 --> 01:26:41,029
got to take a look at what

1609
01:26:38,658 --> 01:26:48,819
oh wait that's not that's not gonna do

1610
01:26:41,029 --> 01:26:48,819
anything this actually needs to be

1611
01:26:50,139 --> 01:27:08,779
probably more like this go just verify

1612
01:27:06,948 --> 01:27:15,708
that we're gonna add as many as we're

1613
01:27:08,779 --> 01:27:18,380
supposed to let's try again all right

1614
01:27:15,708 --> 01:27:20,029
well not particularly good results here

1615
01:27:18,380 --> 01:27:22,729
since I'm not getting any actual

1616
01:27:20,029 --> 01:27:24,978
lighting um so let's step through and

1617
01:27:22,729 --> 01:27:30,860
see where we're at all so I'm gonna go

1618
01:27:24,979 --> 01:27:35,320
ahead and turn off the optimizer so that

1619
01:27:30,859 --> 01:27:35,319
I can step through this more easily

1620
01:27:42,960 --> 01:27:55,750
all right sir first index equals zero

1621
01:27:53,020 --> 01:28:06,670
which is what we'd expect here's our

1622
01:27:55,750 --> 01:28:14,020
first surface and looks reasonable

1623
01:28:06,670 --> 01:28:16,800
nothing particularly weird there let's

1624
01:28:14,020 --> 01:28:16,800
take a look at our lights

1625
01:28:24,500 --> 01:28:28,510
again seems pretty reasonable

1626
01:28:41,260 --> 01:28:50,610
so that all seems pretty good we got 468

1627
01:28:43,930 --> 01:28:50,610
surfaces and zero points so cap yeah

1628
01:28:54,029 --> 01:29:02,699
forgot that we were putting that in a

1629
01:28:57,939 --> 01:29:02,699
temporary variable let's try that again

1630
01:29:06,600 --> 01:29:14,950
so that looks again relatively okay so

1631
01:29:13,149 --> 01:29:18,250
that may have been our only significant

1632
01:29:14,949 --> 01:29:20,970
problem there let's go ahead and change

1633
01:29:18,250 --> 01:29:20,970
that back to Oh two

1634
01:29:27,250 --> 01:29:30,520
so there we go

1635
01:29:31,449 --> 01:29:35,409
now again this is going to be

1636
01:29:33,010 --> 01:29:38,739
drastically worse because right now

1637
01:29:35,409 --> 01:29:42,029
we're not actually correctly handling

1638
01:29:38,739 --> 01:29:44,769
the fact that we've got multiple points

1639
01:29:42,029 --> 01:29:50,529
we're not like adding that light in any

1640
01:29:44,770 --> 01:29:52,480
sane way right we're we're we're taking

1641
01:29:50,529 --> 01:29:55,809
every hit to a surface and adding it to

1642
01:29:52,479 --> 01:30:00,909
all the points on that surface which is

1643
01:29:55,810 --> 01:30:02,440
kind of busted right so anyway but what

1644
01:30:00,909 --> 01:30:05,800
you can actually see here in an amusing

1645
01:30:02,439 --> 01:30:09,519
way is that even just that change of of

1646
01:30:05,800 --> 01:30:12,520
reducing the count by four because ray

1647
01:30:09,520 --> 01:30:14,830
tracing is entirely determined the speed

1648
01:30:12,520 --> 01:30:20,140
of a ray tracer is pretty much dominated

1649
01:30:14,829 --> 01:30:21,819
by that ray cast reducing the number of

1650
01:30:20,140 --> 01:30:23,980
things I had to Ray cast against by four

1651
01:30:21,819 --> 01:30:25,509
sped up our frame rate to the point

1652
01:30:23,979 --> 01:30:27,489
where we're almost running at thirty now

1653
01:30:25,510 --> 01:30:29,710
we're not quite we're more like running

1654
01:30:27,489 --> 01:30:32,279
at fifteen right but it's pretty

1655
01:30:29,710 --> 01:30:34,899
hilarious just how much that one change

1656
01:30:32,279 --> 01:30:36,699
helps right but that's why I wanted

1657
01:30:34,899 --> 01:30:38,799
again those occluders to be things that

1658
01:30:36,699 --> 01:30:41,649
can be specified in a different way from

1659
01:30:38,800 --> 01:30:43,659
the actual geometry and the actual

1660
01:30:41,649 --> 01:30:47,079
lighting sampling because we may want to

1661
01:30:43,659 --> 01:30:49,630
sample the lighting more densely than we

1662
01:30:47,079 --> 01:30:52,210
actually do occlusions on now remember

1663
01:30:49,630 --> 01:30:55,840
we did not actually decrease the number

1664
01:30:52,210 --> 01:30:58,930
of points we were sampling we we still

1665
01:30:55,840 --> 01:31:03,400
did t-this the samples as separate

1666
01:30:58,930 --> 01:31:04,539
points we emit from points so we're

1667
01:31:03,399 --> 01:31:08,289
still looping over the same number of

1668
01:31:04,539 --> 01:31:11,760
those we just reduced the number of

1669
01:31:08,289 --> 01:31:15,850
things we can hit when we do our test

1670
01:31:11,760 --> 01:31:20,619
because we you know don't need to trip

1671
01:31:15,850 --> 01:31:22,780
to test against as many so that's kind

1672
01:31:20,619 --> 01:31:24,909
of nice and again continues to bode well

1673
01:31:22,779 --> 01:31:31,469
for the future work that we might want

1674
01:31:24,909 --> 01:31:31,470
to do here right okay so that's all good

1675
01:31:32,309 --> 01:31:37,050
and I think that lets us keep these

1676
01:31:35,279 --> 01:31:38,939
things separated now the thing that I

1677
01:31:37,050 --> 01:31:42,989
don't like about the way we had to write

1678
01:31:38,939 --> 01:31:44,578
that was I don't like the way I the

1679
01:31:42,988 --> 01:31:46,859
point of having a lighting intermediate

1680
01:31:44,578 --> 01:31:50,250
here is that you want to have something

1681
01:31:46,859 --> 01:31:52,380
that you write to all the time so I

1682
01:31:50,250 --> 01:31:54,960
think that it may be the case that the

1683
01:31:52,380 --> 01:31:56,639
lighting point information and the

1684
01:31:54,960 --> 01:31:59,489
lighting intermediate information I

1685
01:31:56,639 --> 01:32:01,859
think that maybe this needs to get

1686
01:31:59,488 --> 01:32:05,218
merged into here or something I need to

1687
01:32:01,859 --> 01:32:07,259
think about how that's working because I

1688
01:32:05,219 --> 01:32:13,408
think there needs to be like two of

1689
01:32:07,260 --> 01:32:15,690
those buffers or something like this but

1690
01:32:13,408 --> 01:32:18,960
you don't want to have to read from the

1691
01:32:15,689 --> 01:32:20,219
lighting point the solution should be

1692
01:32:18,960 --> 01:32:27,408
encapsulated in the lighting

1693
01:32:20,219 --> 01:32:27,408
intermediate I guess is the thing so

1694
01:32:47,590 --> 01:32:52,310
so it's kind of hard to say how we want

1695
01:32:50,479 --> 01:32:55,839
to do that but I think really it's

1696
01:32:52,310 --> 01:33:01,219
actually probably the case that we want

1697
01:32:55,840 --> 01:33:02,719
completely separate buffers for it I'm

1698
01:33:01,219 --> 01:33:04,340
just thinking about how this has to

1699
01:33:02,719 --> 01:33:05,899
eventually be moved down to hardware

1700
01:33:04,340 --> 01:33:07,430
right

1701
01:33:05,899 --> 01:33:09,619
nothing's not running and hardware

1702
01:33:07,430 --> 01:33:11,750
already but you know what I mean

1703
01:33:09,619 --> 01:33:13,670
and it feels like the average direction

1704
01:33:11,750 --> 01:33:16,039
to light is just an accumulation buffer

1705
01:33:13,670 --> 01:33:17,690
that constantly gets accumulated over

1706
01:33:16,039 --> 01:33:19,069
and over and over again and it never has

1707
01:33:17,689 --> 01:33:22,460
anything done to it except at the very

1708
01:33:19,069 --> 01:33:24,319
end when it gets normalized right so

1709
01:33:22,460 --> 01:33:26,060
that's pretty straightforward that that

1710
01:33:24,319 --> 01:33:27,079
would just be its own thing that doesn't

1711
01:33:26,060 --> 01:33:29,480
really have anything else to do with

1712
01:33:27,079 --> 01:33:31,609
anybody the omission on the other hand

1713
01:33:29,479 --> 01:33:32,779
ping pongs back and forth you start with

1714
01:33:31,609 --> 01:33:35,359
1 emission buffer that's the input

1715
01:33:32,779 --> 01:33:43,759
emission you write to a new emission

1716
01:33:35,359 --> 01:33:45,769
buffer as you go right and then you swap

1717
01:33:43,760 --> 01:33:48,289
them so I feel like the lighting

1718
01:33:45,770 --> 01:33:51,940
intermediate actually kind of wants to

1719
01:33:48,289 --> 01:33:51,939
be something more like this

1720
01:34:08,670 --> 01:34:19,090
that sort of thing and you would just

1721
01:34:16,329 --> 01:34:31,779
ping-pong the these two back and forth

1722
01:34:19,090 --> 01:34:38,800
right so what I want to do is I want to

1723
01:34:31,779 --> 01:34:39,880
say all right I I take average direction

1724
01:34:38,800 --> 01:34:41,199
to light that's always getting

1725
01:34:39,880 --> 01:34:43,000
accumulated until the very end gets

1726
01:34:41,198 --> 01:34:45,849
normalized I take admit see in next to

1727
01:34:43,000 --> 01:34:47,738
Mitzi and every pass through the light

1728
01:34:45,850 --> 01:34:50,020
propagation I swap which buffer I'm

1729
01:34:47,738 --> 01:34:51,849
pointing to as my source emits seed

1730
01:34:50,020 --> 01:34:55,239
right so it's kind of like source emit

1731
01:34:51,850 --> 01:34:56,500
seed estimate see and they swap I don't

1732
01:34:55,238 --> 01:34:59,678
know if she'll let me swap these two

1733
01:34:56,500 --> 01:35:00,819
pointers let me I always forget what it

1734
01:34:59,679 --> 01:35:04,329
has a problem with them what it doesn't

1735
01:35:00,819 --> 01:35:07,408
in the actual memory would work but I

1736
01:35:04,329 --> 01:35:12,550
don't remember always which of those two

1737
01:35:07,408 --> 01:35:14,649
will happen but what I do want to do

1738
01:35:12,550 --> 01:35:22,210
here is just say like okay so we need

1739
01:35:14,649 --> 01:35:25,529
the we need the clearing here to

1740
01:35:22,210 --> 01:35:25,529
basically say that

1741
01:35:31,590 --> 01:35:43,949
solution destined at sea of whatever our

1742
01:35:38,289 --> 01:35:48,010
light index is solution average light

1743
01:35:43,949 --> 01:35:50,229
direction those are both going to get

1744
01:35:48,010 --> 01:35:58,829
cleared and then this is gonna be a

1745
01:35:50,229 --> 01:35:58,829
solution sourcing it see light index

1746
01:36:00,840 --> 01:36:12,400
like that okay I guess that to do can

1747
01:36:06,640 --> 01:36:14,380
stand it's still relevant and so then in

1748
01:36:12,399 --> 01:36:17,710
here when we do these sample

1749
01:36:14,380 --> 01:36:24,100
accumulations really all we need is we

1750
01:36:17,710 --> 01:36:26,310
need the index here and then we can just

1751
01:36:24,100 --> 01:36:26,310
do

1752
01:36:38,649 --> 01:36:41,649
that

1753
01:36:44,159 --> 01:36:58,329
okay so these have to be point index

1754
01:36:49,619 --> 01:37:01,420
indexed and these intermediates here

1755
01:36:58,329 --> 01:37:01,420
[Music]

1756
01:37:03,029 --> 01:37:08,500
yeah now that I think about it I don't

1757
01:37:07,270 --> 01:37:10,600
really know I that was just kind of a

1758
01:37:08,500 --> 01:37:14,170
brain fart C's not going to do that

1759
01:37:10,600 --> 01:37:16,660
because it's gonna actually just put

1760
01:37:14,170 --> 01:37:24,550
this mini vector threes in there right

1761
01:37:16,659 --> 01:37:27,789
so these have to be pointers this one

1762
01:37:24,550 --> 01:37:29,829
can cannot be but these have to be

1763
01:37:27,789 --> 01:37:31,000
because otherwise it'll just put all the

1764
01:37:29,829 --> 01:37:36,519
vector threes in there and I just

1765
01:37:31,000 --> 01:37:40,659
actually want just a pointer right that

1766
01:37:36,520 --> 01:37:42,810
I'm referencing off of so I can flip

1767
01:37:40,659 --> 01:37:42,809
them

1768
01:37:46,630 --> 01:37:49,630
although

1769
01:37:55,340 --> 01:37:58,340
although

1770
01:38:00,439 --> 01:38:05,809
that's not entirely true I could choose

1771
01:38:04,399 --> 01:38:12,309
to still do it like this and do it

1772
01:38:05,810 --> 01:38:27,620
slightly differently what I could do is

1773
01:38:12,310 --> 01:38:30,050
say instead that and then what I could

1774
01:38:27,619 --> 01:38:32,719
do is say alright emit c0 is going to

1775
01:38:30,050 --> 01:38:35,960
get initialized to the thing emits c1 is

1776
01:38:32,719 --> 01:38:39,170
going to be the cleared one then the

1777
01:38:35,960 --> 01:38:43,310
decimate see here is actually that has

1778
01:38:39,170 --> 01:38:46,130
to get passed in right so what we would

1779
01:38:43,310 --> 01:38:50,389
do is we'd say no you don't get to do

1780
01:38:46,130 --> 01:38:52,969
that you have to actually pass me at the

1781
01:38:50,389 --> 01:38:56,569
destined at C and the average light

1782
01:38:52,969 --> 01:38:59,289
direction sorry that's just something

1783
01:38:56,569 --> 01:38:59,289
you're going to have to do

1784
01:39:11,449 --> 01:39:16,619
okay then in here instead of the

1785
01:39:14,760 --> 01:39:18,619
intermediate stuff what we do is we're

1786
01:39:16,619 --> 01:39:21,180
gonna have to pass it those two things

1787
01:39:18,619 --> 01:39:23,430
so what we want to do is we want to say

1788
01:39:21,180 --> 01:39:26,640
okay the solution average direction to

1789
01:39:23,430 --> 01:39:29,369
light that vector we know is pretty easy

1790
01:39:26,640 --> 01:39:31,110
to get always the other one is harder to

1791
01:39:29,369 --> 01:39:33,229
get because that hit intermediate there

1792
01:39:31,109 --> 01:39:37,259
that actually is going to have to be

1793
01:39:33,229 --> 01:39:39,929
whatever the desk emits E is and that

1794
01:39:37,260 --> 01:39:43,260
will be a pointer that changes each pass

1795
01:39:39,930 --> 01:39:49,860
through right so it's gonna look like

1796
01:39:43,260 --> 01:39:52,010
that instead okay so then what we do up

1797
01:39:49,859 --> 01:39:56,849
here is we have our destined at C and

1798
01:39:52,010 --> 01:40:03,600
our source in it C like so and those two

1799
01:39:56,850 --> 01:40:09,030
pointers will start out pointing to the

1800
01:40:03,600 --> 01:40:12,360
emit C 0 and the emit C 1 right so we've

1801
01:40:09,029 --> 01:40:14,519
got both of those two pointers are set

1802
01:40:12,359 --> 01:40:17,819
to the correct values and then when we

1803
01:40:14,520 --> 01:40:19,200
actually go to use them we're using one

1804
01:40:17,819 --> 01:40:21,779
of the two buffers but we can always

1805
01:40:19,199 --> 01:40:25,849
switch with which one we're using at any

1806
01:40:21,779 --> 01:40:30,829
time right what is the complaint here

1807
01:40:25,850 --> 01:40:35,220
argument oh yeah so these are pluses not

1808
01:40:30,829 --> 01:40:39,720
brackets right so anyway in here for the

1809
01:40:35,220 --> 01:40:41,280
intermediates now we have eliminated

1810
01:40:39,720 --> 01:40:42,810
those entirely so anything that was

1811
01:40:41,279 --> 01:40:44,279
doing intermediate needs to actually

1812
01:40:42,810 --> 01:40:46,620
talk about the thing it was talking

1813
01:40:44,279 --> 01:40:49,079
about directly so here where we talk

1814
01:40:46,619 --> 01:40:52,849
about the point amid C or any of this

1815
01:40:49,079 --> 01:40:57,479
stuff we don't have to do this

1816
01:40:52,850 --> 01:40:58,890
accumulation step anymore exactly on to

1817
01:40:57,479 --> 01:41:02,489
the points themselves those are between

1818
01:40:58,890 --> 01:41:05,220
the destined source emissions so instead

1819
01:41:02,489 --> 01:41:08,479
what we do is we just say okay let's get

1820
01:41:05,220 --> 01:41:13,560
rid of all this we just say that

1821
01:41:08,479 --> 01:41:15,419
whatever the whatever the source emits E

1822
01:41:13,560 --> 01:41:16,650
was and I guess we don't have to swap

1823
01:41:15,420 --> 01:41:19,069
them if we're going to do it this way

1824
01:41:16,649 --> 01:41:19,069
maybe

1825
01:41:20,149 --> 01:41:31,589
if we're actually doing a sum here which

1826
01:41:27,600 --> 01:41:33,180
is kind of odd if we actually keep doing

1827
01:41:31,590 --> 01:41:36,630
a sum here then we don't have to swap

1828
01:41:33,180 --> 01:41:38,310
them if we stop doing the sum which I

1829
01:41:36,630 --> 01:41:40,409
think we probably will then we would

1830
01:41:38,310 --> 01:41:42,090
just swap them but if we keep doing the

1831
01:41:40,409 --> 01:41:44,670
sum then we don't have to actually do

1832
01:41:42,090 --> 01:41:46,289
that right if we keep doing a sum here

1833
01:41:44,670 --> 01:41:47,819
then we're gonna have to go over them

1834
01:41:46,289 --> 01:41:54,239
every time anyway so we can't just swap

1835
01:41:47,819 --> 01:42:00,359
them and clear one of them so I guess

1836
01:41:54,239 --> 01:42:01,859
we'll have to see I guess we'll have to

1837
01:42:00,359 --> 01:42:05,309
see how that shakes out and I'm not sure

1838
01:42:01,859 --> 01:42:08,250
how it will or not right

1839
01:42:05,310 --> 01:42:10,410
but either way either we someone buffer

1840
01:42:08,250 --> 01:42:12,930
into the other or we swap them and clear

1841
01:42:10,409 --> 01:42:23,279
one of them either way it's the same

1842
01:42:12,930 --> 01:42:25,320
basic idea right except and that should

1843
01:42:23,279 --> 01:42:26,939
really be it right I don't think there's

1844
01:42:25,319 --> 01:42:29,609
much else to it than that let's take a

1845
01:42:26,939 --> 01:42:31,079
look here intermediates this is just the

1846
01:42:29,609 --> 01:42:38,269
average direction to light so that's

1847
01:42:31,079 --> 01:42:38,269
literally just going to be solution

1848
01:42:38,930 --> 01:42:47,700
equals normalize and that's it

1849
01:42:45,569 --> 01:42:53,369
and then these ones here they would

1850
01:42:47,699 --> 01:42:57,929
never read out of the point anymore so

1851
01:42:53,369 --> 01:43:02,159
there's just going to be an omit C which

1852
01:42:57,930 --> 01:43:04,640
is the solution source emit see point

1853
01:43:02,159 --> 01:43:04,639
index

1854
01:43:06,658 --> 01:43:26,559
and the average direction to the lights

1855
01:43:12,510 --> 01:43:29,679
it's pulled out there as well I and so I

1856
01:43:26,560 --> 01:43:33,699
think that should do roughly the same

1857
01:43:29,679 --> 01:43:38,319
thing that it is doing or not it's like

1858
01:43:33,698 --> 01:43:41,109
I've got some problem there so I think

1859
01:43:38,319 --> 01:43:45,840
that's roughly it I'm still not crazy

1860
01:43:41,109 --> 01:43:45,839
about how that's going it's better right

1861
01:43:46,170 --> 01:43:51,069
setup this way that is the way that it

1862
01:43:48,250 --> 01:43:52,389
was set up because at least now these

1863
01:43:51,069 --> 01:43:56,649
are more like what you would imagine

1864
01:43:52,389 --> 01:44:00,219
happening on the GPU there right which

1865
01:43:56,649 --> 01:44:03,069
is what I want but yeah it's just it's

1866
01:44:00,219 --> 01:44:04,630
still a little bit wonky I feel like

1867
01:44:03,069 --> 01:44:06,429
those want to be ping pong buffers

1868
01:44:04,630 --> 01:44:08,800
because as you're going through them

1869
01:44:06,429 --> 01:44:11,560
you're basically computing a new one

1870
01:44:08,800 --> 01:44:13,000
from the old one so it feels a little

1871
01:44:11,560 --> 01:44:14,289
weird that we don't actually use in that

1872
01:44:13,000 --> 01:44:16,270
way we never actually ping pong we're

1873
01:44:14,289 --> 01:44:20,698
always going back to the source we never

1874
01:44:16,270 --> 01:44:25,780
swapped the two of those but that's okay

1875
01:44:20,698 --> 01:44:30,069
I see what our bug is though it's that

1876
01:44:25,779 --> 01:44:33,969
typo right there so I think that's at

1877
01:44:30,069 --> 01:44:36,069
least in a better general sort of well

1878
01:44:33,969 --> 01:44:38,679
maybe not that's in a better like

1879
01:44:36,069 --> 01:44:41,948
general structure than we had before so

1880
01:44:38,679 --> 01:44:46,179
I think that's probably about right

1881
01:44:41,948 --> 01:44:47,859
okay so I'll save whether or not we want

1882
01:44:46,179 --> 01:44:50,349
a ping pong those for when we actually

1883
01:44:47,859 --> 01:44:53,589
get to like sort of figuring out exactly

1884
01:44:50,349 --> 01:44:55,719
whether the light transport always adds

1885
01:44:53,590 --> 01:44:57,159
light or whether it doesn't and then

1886
01:44:55,719 --> 01:44:58,719
maybe we don't have to ping pong them at

1887
01:44:57,158 --> 01:45:04,000
all we'll find out and then in this case

1888
01:44:58,719 --> 01:45:05,380
this was not so important but I do think

1889
01:45:04,000 --> 01:45:06,880
those still want to be separate buffers

1890
01:45:05,380 --> 01:45:09,250
so I think that was the correct thing to

1891
01:45:06,880 --> 01:45:11,618
do as far as those were concerned either

1892
01:45:09,250 --> 01:45:13,420
way all right so let's just make sure

1893
01:45:11,618 --> 01:45:15,549
this is going properly here Arum it's

1894
01:45:13,420 --> 01:45:17,289
easy Rose gets an initialize to the

1895
01:45:15,550 --> 01:45:18,570
emission hour emit c1 gets initialized

1896
01:45:17,289 --> 01:45:23,880
to zero and our average

1897
01:45:18,569 --> 01:45:27,929
direction is cleared right so all those

1898
01:45:23,880 --> 01:45:29,190
things seem correct to me and then when

1899
01:45:27,929 --> 01:45:30,270
we do our accumulation we're

1900
01:45:29,189 --> 01:45:32,158
accumulating into whatever the

1901
01:45:30,270 --> 01:45:34,980
destination one is right and that's

1902
01:45:32,158 --> 01:45:37,649
exactly right that's this is what we

1903
01:45:34,979 --> 01:45:39,479
want to do here same with the average

1904
01:45:37,649 --> 01:45:42,420
direction to light there so that all

1905
01:45:39,479 --> 01:45:45,238
seems fine then in here we're doing our

1906
01:45:42,420 --> 01:45:46,949
summation on the source and we're

1907
01:45:45,238 --> 01:45:50,339
clearing the desk that also seems fine

1908
01:45:46,948 --> 01:45:53,339
and then we're normalizing that average

1909
01:45:50,340 --> 01:45:56,429
direction to light which also seems good

1910
01:45:53,340 --> 01:46:01,770
so that seems fairly sane so I'm not

1911
01:45:56,429 --> 01:46:03,779
sure where we ran afoul there so let's

1912
01:46:01,770 --> 01:46:06,960
go ahead and step in and see what it is

1913
01:46:03,779 --> 01:46:09,210
that we're doing that that it doesn't

1914
01:46:06,960 --> 01:46:11,010
like so I'm gonna go ahead and turn off

1915
01:46:09,210 --> 01:46:15,480
optimizations for a second so it'll be

1916
01:46:11,010 --> 01:46:18,810
easier to inspect the values in the

1917
01:46:15,479 --> 01:46:20,069
debugger and then I'm just going to go

1918
01:46:18,810 --> 01:46:27,030
ahead and step through to make sure that

1919
01:46:20,069 --> 01:46:28,738
we're setting the stuff up properly all

1920
01:46:27,029 --> 01:46:31,229
right so here we are in our extraction

1921
01:46:28,738 --> 01:46:32,868
code now we didn't change the surface

1922
01:46:31,229 --> 01:46:36,059
stuff so that stuff should be the same

1923
01:46:32,868 --> 01:46:40,789
but we did change the this other

1924
01:46:36,060 --> 01:46:44,760
solution stuff here so we've got the the

1925
01:46:40,789 --> 01:46:46,439
emit c0 right and the emit c1 those are

1926
01:46:44,760 --> 01:46:48,780
both 0 for this because this is does not

1927
01:46:46,439 --> 01:46:49,979
have an emission value an average

1928
01:46:48,779 --> 01:46:51,779
direction to the light is getting clear

1929
01:46:49,979 --> 01:46:55,078
these are all on the light index which

1930
01:46:51,779 --> 01:46:58,609
all seems good so that looks like I mean

1931
01:46:55,078 --> 01:46:58,609
that looks like the right thing to me

1932
01:47:01,920 --> 01:47:05,310
let's jump down here to our light

1933
01:47:03,810 --> 01:47:06,840
propagation

1934
01:47:05,310 --> 01:47:13,590
there's our source there's our desk

1935
01:47:06,840 --> 01:47:18,270
let's take a quick look at those let's

1936
01:47:13,590 --> 01:47:21,750
just scan through them there should be

1937
01:47:18,270 --> 01:47:23,820
some meters somewhere how many point

1938
01:47:21,750 --> 01:47:32,130
counts how many points do we actually

1939
01:47:23,819 --> 01:47:33,899
have 1873 so we know there should be not

1940
01:47:32,130 --> 01:47:36,029
very many emitters at the outset there's

1941
01:47:33,899 --> 01:47:43,979
very few but we know we should be able

1942
01:47:36,029 --> 01:47:45,659
to find some so there they are they're

1943
01:47:43,979 --> 01:47:47,219
the very last lights we pushed on but

1944
01:47:45,659 --> 01:47:48,329
that's ok and there you can see them

1945
01:47:47,220 --> 01:47:53,130
they're getting pushed on with a power

1946
01:47:48,329 --> 01:47:54,479
of 10 which oh right 1.0 is the maximum

1947
01:47:53,130 --> 01:47:56,699
light emission value so it's actually a

1948
01:47:54,479 --> 01:48:00,239
power 10 light that's why it's so bright

1949
01:47:56,699 --> 01:48:03,300
okay that makes sense I looked before I

1950
01:48:00,239 --> 01:48:06,989
fooled myself and so now we're going to

1951
01:48:03,300 --> 01:48:11,310
go through here the testament see this

1952
01:48:06,989 --> 01:48:19,340
should be all zeros we're gonna go

1953
01:48:11,310 --> 01:48:21,810
through these submitters here I oh wait

1954
01:48:19,340 --> 01:48:24,949
we're still using oh we forgot to delete

1955
01:48:21,810 --> 01:48:24,950
that value there's our problem

1956
01:48:25,250 --> 01:48:30,199
we forgot to admit the emit C value from

1957
01:48:30,409 --> 01:48:36,930
from that lighting element that's that's

1958
01:48:33,079 --> 01:48:41,100
that's what we've done so the lighting

1959
01:48:36,930 --> 01:48:44,880
element here in platform dot H that emit

1960
01:48:41,100 --> 01:48:49,530
C should not have been still on there

1961
01:48:44,880 --> 01:48:52,369
right this value should not have

1962
01:48:49,529 --> 01:48:52,369
probably been on there

1963
01:48:55,840 --> 01:49:03,350
so let's take a look here we've got that

1964
01:48:59,750 --> 01:49:07,569
Hadamard product here of these two this

1965
01:49:03,350 --> 01:49:07,570
should actually be the sourcing at sea

1966
01:49:10,420 --> 01:49:16,430
like so so I think that's it

1967
01:49:14,539 --> 01:49:17,479
that was probably the the main problem

1968
01:49:16,430 --> 01:49:19,760
because we weren't getting any light

1969
01:49:17,479 --> 01:49:21,409
input so when the bounces the bounces

1970
01:49:19,760 --> 01:49:24,320
never happened right

1971
01:49:21,409 --> 01:49:27,289
alright so that's back to what we had

1972
01:49:24,319 --> 01:49:37,969
before so that's good and let's go ahead

1973
01:49:27,289 --> 01:49:46,819
and turn on the optimizer okay so now

1974
01:49:37,970 --> 01:49:48,530
we're back to sanity here and I will say

1975
01:49:46,819 --> 01:49:51,590
that a power 10 light is a bit

1976
01:49:48,529 --> 01:49:52,969
aggressive in this case but you know

1977
01:49:51,590 --> 01:49:54,829
what you're gonna do

1978
01:49:52,970 --> 01:49:58,789
we could probably try turning that down

1979
01:49:54,829 --> 01:50:00,829
flip it but this is basically what we

1980
01:49:58,789 --> 01:50:03,109
wanted and so let's just go ahead and

1981
01:50:00,829 --> 01:50:04,939
see about making those points take a

1982
01:50:03,109 --> 01:50:10,729
distribution of the light a little bit

1983
01:50:04,939 --> 01:50:12,739
more sanely so for example when we apply

1984
01:50:10,729 --> 01:50:14,149
this light if we were going to

1985
01:50:12,739 --> 01:50:16,159
accumulate the sample we could at least

1986
01:50:14,149 --> 01:50:17,149
divide by the light count and distribute

1987
01:50:16,159 --> 01:50:18,710
it fairly across her eyes that's

1988
01:50:17,149 --> 01:50:21,319
probably where the extra power is coming

1989
01:50:18,710 --> 01:50:22,609
from is that we're adding to we're sadly

1990
01:50:21,319 --> 01:50:25,039
4 times the light because we're adding

1991
01:50:22,609 --> 01:50:30,489
it to each of the parts so let's suppose

1992
01:50:25,039 --> 01:50:30,489
we have the light power here oops

1993
01:50:30,970 --> 01:50:35,990
so we're going to call this sample power

1994
01:50:33,170 --> 01:50:42,350
and I'm just gonna say that the sample

1995
01:50:35,989 --> 01:50:45,309
power is the light power divided by the

1996
01:50:42,350 --> 01:50:45,310
light count

1997
01:50:49,779 --> 01:51:01,309
like so and that way oops there we go

1998
01:50:58,448 --> 01:51:04,549
and so that way we'll we'll have sort of

1999
01:51:01,310 --> 01:51:07,070
a fairer light distribution than we had

2000
01:51:04,550 --> 01:51:10,670
before I think not entirely certain but

2001
01:51:07,069 --> 01:51:12,769
I think that should have helped although

2002
01:51:10,670 --> 01:51:21,500
I can't say that it really looks like it

2003
01:51:12,770 --> 01:51:26,380
did because that should well look it

2004
01:51:21,500 --> 01:51:26,380
lets me just test something here

2005
01:51:34,939 --> 01:51:48,179
so the light power by default let's just

2006
01:51:45,840 --> 01:51:50,520
take it and drop it down quite a bit I

2007
01:51:48,180 --> 01:51:57,150
want to see if that correctly produces

2008
01:51:50,520 --> 01:52:00,770
less light bouncing around I'm just

2009
01:51:57,149 --> 01:52:04,069
gonna jump in here and reduce it further

2010
01:52:00,770 --> 01:52:04,070
so it does

2011
01:52:12,979 --> 01:52:19,829
interesting alright so that didn't

2012
01:52:18,630 --> 01:52:21,239
really help us very much so I'm gonna

2013
01:52:19,829 --> 01:52:22,710
actually try doing a thing here where I

2014
01:52:21,239 --> 01:52:24,389
looked and see and I'm gonna just add it

2015
01:52:22,710 --> 01:52:28,859
to whatever the closest point that got

2016
01:52:24,390 --> 01:52:30,270
hit was right just for fun so what I

2017
01:52:28,859 --> 01:52:32,399
want to do here is I'm looping over the

2018
01:52:30,270 --> 01:52:33,720
surface points and instead of calling

2019
01:52:32,399 --> 01:52:35,729
accumulate sample I'm only going to call

2020
01:52:33,720 --> 01:52:40,289
queue mate sample once and I'm gonna

2021
01:52:35,729 --> 01:52:43,619
call it out here right and say alright

2022
01:52:40,289 --> 01:52:45,810
I'm gonna accumulate the power to

2023
01:52:43,619 --> 01:52:50,159
whichever point index I found that was

2024
01:52:45,810 --> 01:52:56,490
closest okay

2025
01:52:50,159 --> 01:53:00,599
so this point index like will be a

2026
01:52:56,489 --> 01:53:04,199
closest point index and that's the one

2027
01:53:00,600 --> 01:53:07,920
that will give the light to so in here

2028
01:53:04,199 --> 01:53:12,889
we'll just do we know that the point

2029
01:53:07,920 --> 01:53:16,859
where we hit because the raycast itself

2030
01:53:12,890 --> 01:53:18,450
would have been able to tell that which

2031
01:53:16,859 --> 01:53:20,250
I guess gets me back to the point where

2032
01:53:18,449 --> 01:53:23,970
we've got to return this rapey so I

2033
01:53:20,250 --> 01:53:27,380
tried rate cast results to not have this

2034
01:53:23,970 --> 01:53:27,380
returned that but it's going to have to

2035
01:53:32,909 --> 01:53:44,369
uh so yeah the index gonna be the

2036
01:53:41,670 --> 01:53:50,010
solution surface count then what we'll

2037
01:53:44,369 --> 01:53:59,250
do here is just say okay result that

2038
01:53:50,010 --> 01:54:09,780
index result dot P all right so then

2039
01:53:59,250 --> 01:54:11,550
when we do raycast result here we'll do

2040
01:54:09,779 --> 01:54:15,059
that we'll just say all right we get the

2041
01:54:11,550 --> 01:54:17,130
rate cast hit index back we do exactly

2042
01:54:15,060 --> 01:54:19,440
what we're doing before now we can do is

2043
01:54:17,130 --> 01:54:22,230
we can take the closest distance squared

2044
01:54:19,439 --> 01:54:28,339
to the point that was hit by the right

2045
01:54:22,229 --> 01:54:37,639
right so we can do here is say closest

2046
01:54:28,340 --> 01:54:40,770
distance squared and closest point index

2047
01:54:37,640 --> 01:54:46,950
and then we do is as we loop through

2048
01:54:40,770 --> 01:54:51,840
here I I guess we can say that if there

2049
01:54:46,949 --> 01:55:01,260
is no surface count if there is no light

2050
01:54:51,840 --> 01:55:03,329
count we just won't do this right that

2051
01:55:01,260 --> 01:55:05,640
seems reasonable so we can say if

2052
01:55:03,329 --> 01:55:08,069
closest point index do it otherwise

2053
01:55:05,640 --> 01:55:10,800
don't so in here what we'll say is all

2054
01:55:08,069 --> 01:55:13,380
right here's where we this is the point

2055
01:55:10,800 --> 01:55:16,590
in expert testing we don't need this

2056
01:55:13,380 --> 01:55:17,670
sample power or this hit point oh I

2057
01:55:16,590 --> 01:55:19,529
guess we do any of the hit point now

2058
01:55:17,670 --> 01:55:21,890
we're actually going to use it we're

2059
01:55:19,529 --> 01:55:26,069
gonna take a look at that letting point

2060
01:55:21,890 --> 01:55:27,680
for this point index if that log and

2061
01:55:26,069 --> 01:55:32,689
then we'll do the distance squared here

2062
01:55:27,680 --> 01:55:37,770
we'll do a length squared function on

2063
01:55:32,689 --> 01:55:40,469
the Ray point where we hit so this is

2064
01:55:37,770 --> 01:55:43,900
where we hit on the surface versus the

2065
01:55:40,470 --> 01:55:48,340
point that we're testing

2066
01:55:43,899 --> 01:55:50,139
and wherever that point is so it's gonna

2067
01:55:48,340 --> 01:55:52,029
be scattered somewhere on the surface

2068
01:55:50,140 --> 01:55:54,610
right we're gonna take the length

2069
01:55:52,029 --> 01:55:57,340
squared there and see and once we have

2070
01:55:54,609 --> 01:55:59,109
that we'll compare them and take

2071
01:55:57,340 --> 01:56:03,670
whichever one is best so if the closest

2072
01:55:59,109 --> 01:56:08,139
point that we've seen so far is actually

2073
01:56:03,670 --> 01:56:10,180
further away okay then we will go ahead

2074
01:56:08,140 --> 01:56:12,970
and record that as the new closest point

2075
01:56:10,180 --> 01:56:15,460
and that'll be the only one that gets

2076
01:56:12,970 --> 01:56:19,690
added to the only sample point that will

2077
01:56:15,460 --> 01:56:21,159
actually add to and I think that's it so

2078
01:56:19,689 --> 01:56:23,949
this will actually distribute the light

2079
01:56:21,159 --> 01:56:27,880
on the surface too depending on where it

2080
01:56:23,949 --> 01:56:30,069
hit to a more or less appropriate sample

2081
01:56:27,880 --> 01:56:31,510
in theory now and I'm looking at that

2082
01:56:30,069 --> 01:56:33,130
looking at the results here it doesn't

2083
01:56:31,510 --> 01:56:37,800
look like it doing I'm not getting any

2084
01:56:33,130 --> 01:56:40,060
gradient wash really there which is odd

2085
01:56:37,800 --> 01:56:41,829
so I feel like we're still doing

2086
01:56:40,060 --> 01:56:48,100
something a little wonky here like we're

2087
01:56:41,829 --> 01:56:53,260
not it still feels like we're adding

2088
01:56:48,100 --> 01:56:55,329
them all uniformly you know what I mean

2089
01:56:53,260 --> 01:56:57,789
or that maybe our sampler is not

2090
01:56:55,329 --> 01:57:00,159
actually using the samplers not using

2091
01:56:57,789 --> 01:57:01,569
all the samples I'm not sure let me take

2092
01:57:00,159 --> 01:57:09,909
a look and see where we're at with our

2093
01:57:01,569 --> 01:57:12,929
sunlight function it looks like we're

2094
01:57:09,909 --> 01:57:18,689
still doing our loop over the light

2095
01:57:12,930 --> 01:57:20,750
right here's that call here

2096
01:57:18,689 --> 01:57:26,399
for some of the lights together and

2097
01:57:20,750 --> 01:57:28,679
multiplying by the bad service

2098
01:57:26,399 --> 01:57:31,829
reflectance of that surface I'm gonna

2099
01:57:28,679 --> 01:57:33,359
here where we do the summation we are

2100
01:57:31,829 --> 01:57:37,170
grabbing the light count out so that all

2101
01:57:33,359 --> 01:57:38,429
looks relatively sane and let's make

2102
01:57:37,170 --> 01:57:46,609
sure when we're packing them or packing

2103
01:57:38,429 --> 01:57:46,609
them properly so here's all our points

2104
01:57:48,260 --> 01:57:54,780
and those seem to be packing down so I'm

2105
01:57:52,948 --> 01:57:57,869
not 100% certain why we're not getting

2106
01:57:54,779 --> 01:57:59,819
gradations there right we should be

2107
01:57:57,869 --> 01:58:02,809
seeing gradations there but instead we

2108
01:57:59,819 --> 01:58:07,439
really seem to be getting more of a like

2109
01:58:02,810 --> 01:58:15,360
uniform color per block and that doesn't

2110
01:58:07,439 --> 01:58:16,619
really make sense as to why since each

2111
01:58:15,359 --> 01:58:19,849
of these should have four and they

2112
01:58:16,619 --> 01:58:19,849
should be distributed separately

2113
01:58:20,689 --> 01:58:24,559
something's a little wonky there

2114
01:58:29,929 --> 01:58:34,699
let's take a quick look we can save this

2115
01:58:33,350 --> 01:58:38,090
for next weekend's debugging Alice Lee

2116
01:58:34,698 --> 01:58:40,549
that so we've got our light zero our

2117
01:58:38,090 --> 01:58:43,279
light index here in both cases we're

2118
01:58:40,550 --> 01:58:49,760
setting the emitters and these

2119
01:58:43,279 --> 01:58:51,079
separately the points should be set yeah

2120
01:58:49,760 --> 01:58:54,650
we are setting multiple points to

2121
01:58:51,079 --> 01:58:58,340
different positions so this all looks

2122
01:58:54,649 --> 01:59:00,019
reasonable right what we need to do is

2123
01:58:58,340 --> 01:59:02,539
is actually do the debug display now so

2124
01:59:00,020 --> 01:59:05,080
we can see it right let's see what's

2125
01:59:02,539 --> 01:59:05,079
going on there

2126
01:59:19,599 --> 01:59:24,190
because that all looks fairly saying to

2127
01:59:22,090 --> 01:59:26,679
me but there should be no way for us to

2128
01:59:24,189 --> 01:59:28,678
be having the same color across the

2129
01:59:26,679 --> 01:59:31,060
surface when there's four separate

2130
01:59:28,679 --> 01:59:33,849
interpolation regions right that just

2131
01:59:31,060 --> 01:59:35,679
doesn't make any sense so something is

2132
01:59:33,849 --> 01:59:37,449
busted about the way we're doing it but

2133
01:59:35,679 --> 01:59:41,109
I'm not sure what and we're only doing

2134
01:59:37,448 --> 01:59:44,198
one accumulate sample here when we get a

2135
01:59:41,109 --> 01:59:52,170
hit on a surface so that seems a bit

2136
01:59:44,198 --> 01:59:52,169
weird right doesn't make a lot of sense

2137
02:00:00,380 --> 02:00:04,730
doesn't make a lot of sense

2138
02:00:22,229 --> 02:00:26,679
well I'm gonna go ahead and go to the

2139
02:00:24,219 --> 02:00:28,418
Q&amp;A either way cuz this me what I want

2140
02:00:26,679 --> 02:00:32,139
to do I think in what is probably the

2141
02:00:28,418 --> 02:00:35,800
right thing to do is to go draw make the

2142
02:00:32,139 --> 02:00:38,199
thing that draws the sample points so we

2143
02:00:35,800 --> 02:00:40,719
can see exactly what they're showing and

2144
02:00:38,198 --> 02:00:43,268
we will go ahead and do that next time

2145
02:00:40,719 --> 02:00:44,590
for now we're at least getting closer to

2146
02:00:43,269 --> 02:00:45,668
where we wanted to be in terms of

2147
02:00:44,590 --> 02:00:48,300
separating those things out but

2148
02:00:45,668 --> 02:00:51,668
something is up with the way we're

2149
02:00:48,300 --> 02:00:53,110
sending these down or in the way that

2150
02:00:51,668 --> 02:00:55,029
we're producing because wait we almost

2151
02:00:53,109 --> 02:00:58,179
never get any gradients now occasionally

2152
02:00:55,029 --> 02:01:06,279
we get some once in a while we get a

2153
02:00:58,179 --> 02:01:13,389
little bit of a gradient but it's pretty

2154
02:01:06,279 --> 02:01:15,158
rare so I think something is up with

2155
02:01:13,389 --> 02:01:16,659
that and we will have to debug that

2156
02:01:15,158 --> 02:01:20,518
further so I'm gonna say that till next

2157
02:01:16,658 --> 02:01:20,518
time we'll do brief Q&amp;A

2158
02:01:56,368 --> 02:02:01,418
chemicals asked short of a manual

2159
02:01:59,590 --> 02:02:03,939
comparison how do you obtain an enum

2160
02:02:01,418 --> 02:02:09,038
fields name by supplying a corresponding

2161
02:02:03,939 --> 02:02:10,389
numeric value eg 1 is Sunday yeah I mean

2162
02:02:09,038 --> 02:02:13,889
metaprogramming is the only answer for

2163
02:02:10,389 --> 02:02:18,510
that because c plus plus has been so

2164
02:02:13,889 --> 02:02:21,279
derelict in supporting obvious

2165
02:02:18,510 --> 02:02:24,939
introspection abilities and reflection

2166
02:02:21,279 --> 02:02:25,929
abilities in the language I mean that

2167
02:02:24,939 --> 02:02:27,130
should be something that the compiler

2168
02:02:25,929 --> 02:02:28,538
just generates for you you should be

2169
02:02:27,130 --> 02:02:30,819
able to say generate a table that tells

2170
02:02:28,538 --> 02:02:40,569
me the names of these enums so that I

2171
02:02:30,819 --> 02:02:42,248
can look it up but it can't the other

2172
02:02:40,569 --> 02:02:43,840
gigantic struct printf of which one

2173
02:02:42,248 --> 02:02:44,828
automate in the way of not having to

2174
02:02:43,840 --> 02:02:46,149
manually missed all its fields

2175
02:02:44,828 --> 02:02:48,038
medipartner is the way to go here right

2176
02:02:46,149 --> 02:02:49,539
probably take the difference yeah I mean

2177
02:02:48,038 --> 02:02:52,300
I showed how to do that on the stream

2178
02:02:49,538 --> 02:02:55,840
right in the meta programming stream I

2179
02:02:52,300 --> 02:02:57,929
did I showed how to parse C and output

2180
02:02:55,840 --> 02:03:00,369
the struct definitions right so that's

2181
02:02:57,929 --> 02:03:02,489
gets your only choice and again it's

2182
02:03:00,368 --> 02:03:06,058
just because C++ is it absolutely

2183
02:03:02,488 --> 02:03:06,058
pathetic language

2184
02:03:10,219 --> 02:03:14,868
we're doing the ray-tracing on the GPU

2185
02:03:12,198 --> 02:03:16,958
with open sealer ku to be viable yeah

2186
02:03:14,868 --> 02:03:19,880
but I don't think we're gonna need those

2187
02:03:16,958 --> 02:03:28,578
we can do them probably just in a

2188
02:03:19,880 --> 02:03:30,469
regular shader actually do you have any

2189
02:03:28,578 --> 02:03:32,359
issues with the Microsoft C runtime

2190
02:03:30,469 --> 02:03:37,578
labor and Windows do you think memory

2191
02:03:32,359 --> 02:03:39,288
management could be improved so the

2192
02:03:37,578 --> 02:03:42,408
Microsoft C runtime library on Windows

2193
02:03:39,288 --> 02:03:45,340
is I you don't even get to memory

2194
02:03:42,408 --> 02:03:47,779
management before it's a hard no for me

2195
02:03:45,340 --> 02:03:51,139
they still have not figured out a way to

2196
02:03:47,779 --> 02:03:53,118
let you ship with the CRT reliably it's

2197
02:03:51,139 --> 02:03:55,038
a disaster I mean I can't tell you how

2198
02:03:53,118 --> 02:03:58,308
many programs have to run an installer

2199
02:03:55,038 --> 02:04:00,590
to like first install the right dll's to

2200
02:03:58,309 --> 02:04:02,150
use the CRT on windows statically

2201
02:04:00,590 --> 02:04:05,328
linking with it mitigates some of these

2202
02:04:02,149 --> 02:04:08,719
problems but not all so I just don't

2203
02:04:05,328 --> 02:04:10,998
ship things with the CRT I just don't

2204
02:04:08,719 --> 02:04:13,969
there's no point to it doesn't give you

2205
02:04:10,998 --> 02:04:16,668
anything once you replace a few

2206
02:04:13,969 --> 02:04:20,479
functions there's there's no point to

2207
02:04:16,668 --> 02:04:22,788
it's just a giant liability right so the

2208
02:04:20,479 --> 02:04:26,708
Microsoft CRT is like a hard no I don't

2209
02:04:22,788 --> 02:04:26,708
ship things with it and I don't like it

2210
02:04:35,670 --> 02:04:39,179
long boolean concerning the flickering

2211
02:04:37,439 --> 02:04:41,159
when does mixing between frames give

2212
02:04:39,179 --> 02:04:44,340
appropriate results and when not so the

2213
02:04:41,159 --> 02:04:45,809
answer is when things move mixing

2214
02:04:44,340 --> 02:04:48,719
between frames gives you incorrect

2215
02:04:45,810 --> 02:04:50,789
results right but that doesn't mean we

2216
02:04:48,719 --> 02:04:52,619
won't use it because we don't need our

2217
02:04:50,789 --> 02:04:54,329
lighting to be super accurate we're not

2218
02:04:52,619 --> 02:04:55,979
trying to capture a hard shadows with

2219
02:04:54,329 --> 02:04:57,899
this or anything this is just trying to

2220
02:04:55,979 --> 02:05:00,029
give us a general feel so that things

2221
02:04:57,899 --> 02:05:02,309
get brighter as light sources move

2222
02:05:00,029 --> 02:05:03,960
around and it properly sort of

2223
02:05:02,310 --> 02:05:09,840
illuminates the space in a pleasing way

2224
02:05:03,960 --> 02:05:13,340
so we may use frame to frame blending to

2225
02:05:09,840 --> 02:05:13,340
ill to reduce the noise

2226
02:05:19,960 --> 02:05:23,359
carried your Hansen cementery this is

2227
02:05:22,248 --> 02:05:24,260
probably a bit premature because I have

2228
02:05:23,359 --> 02:05:26,149
looked into her throw but there's the

2229
02:05:24,260 --> 02:05:27,679
CPM station of jail and directx called

2230
02:05:26,149 --> 02:05:32,089
swift shader could be useful for

2231
02:05:27,679 --> 02:05:37,399
debugging purposes yeah sometimes it can

2232
02:05:32,090 --> 02:05:43,730
be but it's hard to say right

2233
02:05:37,399 --> 02:05:45,589
sometimes it's asbestos if ik aspect of

2234
02:05:43,729 --> 02:05:47,149
the card or driver that you're working

2235
02:05:45,590 --> 02:05:50,960
with that is causing the bug and so

2236
02:05:47,149 --> 02:05:53,479
sometimes it's hard to utilize the

2237
02:05:50,960 --> 02:05:54,739
software path for debugging those things

2238
02:05:53,479 --> 02:05:55,759
and also you have to make sure the

2239
02:05:54,738 --> 02:05:57,738
software path actually supports

2240
02:05:55,760 --> 02:06:00,469
everything you're doing which it often

2241
02:05:57,738 --> 02:06:03,049
doesn't but yes if you can find a

2242
02:06:00,469 --> 02:06:06,319
complete software stack with source code

2243
02:06:03,050 --> 02:06:10,420
that you can step into sometimes that

2244
02:06:06,319 --> 02:06:13,420
can help you validate what you're doing

2245
02:06:10,420 --> 02:06:13,420
right

2246
02:06:52,439 --> 02:06:57,819
alright looks like we are free of

2247
02:06:56,079 --> 02:07:05,220
questions so I'm gonna go ahead and

2248
02:06:57,819 --> 02:07:16,090
close things down I made a change to the

2249
02:07:05,220 --> 02:07:17,289
alright I didn't think I did ok thank

2250
02:07:16,090 --> 02:07:18,550
you everyone for joining me for the

2251
02:07:17,289 --> 02:07:20,769
episode of handmade hero it's been a

2252
02:07:18,550 --> 02:07:22,150
pleasure coding with you as always if

2253
02:07:20,770 --> 02:07:23,740
you want to follow along with the

2254
02:07:22,149 --> 02:07:24,909
episodes at home you can always peer to

2255
02:07:23,739 --> 02:07:30,609
the game that comes with a source code

2256
02:07:24,909 --> 02:07:32,619
so you can follow along we have a forum

2257
02:07:30,609 --> 02:07:34,089
site and go to ask questions we have a

2258
02:07:32,619 --> 02:07:35,739
contribution page which does not use

2259
02:07:34,090 --> 02:07:37,869
patreon anymore if you'd like to

2260
02:07:35,739 --> 02:07:39,189
contribute to some of the products that

2261
02:07:37,869 --> 02:07:41,079
support the video series like the

2262
02:07:39,189 --> 02:07:43,569
episode guide and hand made network

2263
02:07:41,079 --> 02:07:45,579
where the forums are hosted we have a

2264
02:07:43,569 --> 02:07:47,289
schedule but you can use that tells you

2265
02:07:45,579 --> 02:07:48,850
we're gonna be live and of course we

2266
02:07:47,289 --> 02:07:51,340
have that aforementioned episode guide

2267
02:07:48,850 --> 02:07:53,890
which is a really great resource which

2268
02:07:51,340 --> 02:07:56,079
allows you to search through stuff for

2269
02:07:53,890 --> 02:07:57,880
terms that you might care about and it

2270
02:07:56,079 --> 02:08:01,390
tells you all of the places where those

2271
02:07:57,880 --> 02:08:04,180
are used that's about it for this

2272
02:08:01,390 --> 02:08:06,789
weekend next weekend we're heading into

2273
02:08:04,180 --> 02:08:07,510
the holiday so the holiday scheduled for

2274
02:08:06,789 --> 02:08:09,760
handmade hero

2275
02:08:07,510 --> 02:08:15,310
it's obviously Christmas time around

2276
02:08:09,760 --> 02:08:17,710
here in Washington the schedule may

2277
02:08:15,310 --> 02:08:19,420
fluctuate I'm not sure when we'll be

2278
02:08:17,710 --> 02:08:21,220
streaming or if we'll be streaming so

2279
02:08:19,420 --> 02:08:23,289
there might be some days off I'm not

2280
02:08:21,220 --> 02:08:25,390
sure so definitely check the schedule

2281
02:08:23,289 --> 02:08:26,859
bot for the schedule now if you're

2282
02:08:25,390 --> 02:08:29,890
interested in catching live streams over

2283
02:08:26,859 --> 02:08:31,389
Christmas break because they may move

2284
02:08:29,890 --> 02:08:34,539
around or who knows what will happen

2285
02:08:31,390 --> 02:08:36,130
with them that's about it until next

2286
02:08:34,539 --> 02:08:38,409
time a hero have fun program everyone

2287
02:08:36,130 --> 02:08:41,039
and I'll see you all on the Internet

2288
02:08:38,409 --> 02:08:41,039
take it easy everybody

