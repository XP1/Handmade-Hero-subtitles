1
00:00:00,060 --> 00:00:03,179
hello everyone and welcome to hand made

2
00:00:02,100 --> 00:00:06,839
here oh sure we could a complete-game

3
00:00:03,178 --> 00:00:10,800
live on stream we have to go into the

4
00:00:06,839 --> 00:00:13,798
thick of it today we are trying to add

5
00:00:10,800 --> 00:00:16,649
in some light probes to our lighting

6
00:00:13,798 --> 00:00:19,858
system so that we can give it more

7
00:00:16,649 --> 00:00:23,698
control I we're hoping this allows us to

8
00:00:19,859 --> 00:00:26,300
sample the lighting easily for all of

9
00:00:23,699 --> 00:00:29,310
our sprites as well as our 3d geometry

10
00:00:26,300 --> 00:00:31,528
just because lighting probes make it

11
00:00:29,309 --> 00:00:33,869
pretty clear how you can look things up

12
00:00:31,528 --> 00:00:36,570
and so will we want to implement that

13
00:00:33,869 --> 00:00:39,149
stuff in the shader but we also want to

14
00:00:36,570 --> 00:00:41,609
go ahead now and try to get lighting

15
00:00:39,149 --> 00:00:43,230
computed on the probes which is sort of

16
00:00:41,609 --> 00:00:45,450
a separate part of the problem because

17
00:00:43,229 --> 00:00:48,078
right now as we compute lighting Rho is

18
00:00:45,450 --> 00:00:50,489
computing lighting from actual surfaces

19
00:00:48,079 --> 00:00:52,620
in the world and what we want to

20
00:00:50,488 --> 00:00:54,988
secondly do now is sort of flip that on

21
00:00:52,619 --> 00:00:57,119
its head and say well although the

22
00:00:54,988 --> 00:00:59,578
services themselves allow you to bounce

23
00:00:57,119 --> 00:01:01,259
the light around they themselves will

24
00:00:59,579 --> 00:01:05,969
not be actually storing any lighting

25
00:01:01,259 --> 00:01:08,579
information only the probes well and so

26
00:01:05,969 --> 00:01:10,489
we're hoping this allows us to get

27
00:01:08,579 --> 00:01:14,819
better performance out of the system

28
00:01:10,489 --> 00:01:17,969
because we can sort of use these probes

29
00:01:14,819 --> 00:01:19,438
more sparingly as necessary meaning we

30
00:01:17,969 --> 00:01:22,200
can reduce the number of probes that are

31
00:01:19,438 --> 00:01:24,658
in the world arbitrarily without having

32
00:01:22,200 --> 00:01:26,400
to reduce the complexity of the actual

33
00:01:24,659 --> 00:01:30,118
geometry in the world so meaning we can

34
00:01:26,400 --> 00:01:31,950
leave world's the same but we can change

35
00:01:30,118 --> 00:01:35,219
the number of probes and their placement

36
00:01:31,950 --> 00:01:38,070
to suit our time budget we can even do

37
00:01:35,219 --> 00:01:40,228
things like put probes down more densely

38
00:01:38,069 --> 00:01:41,879
on more powerful machines and more

39
00:01:40,228 --> 00:01:43,349
sparsely on less powerful machines

40
00:01:41,879 --> 00:01:44,759
meaning the more powerful machine you

41
00:01:43,349 --> 00:01:48,030
have the more accurate lighting you get

42
00:01:44,759 --> 00:01:50,430
and things like that whereas for as long

43
00:01:48,030 --> 00:01:52,409
as the lighting computation was tied to

44
00:01:50,430 --> 00:01:53,759
the complexity of the geometry of the

45
00:01:52,409 --> 00:01:54,810
world that would never have been

46
00:01:53,759 --> 00:01:57,359
possible because you would have to

47
00:01:54,810 --> 00:01:59,719
actually just make simpler worlds and

48
00:01:57,359 --> 00:02:02,009
that doesn't seem like a very good idea

49
00:01:59,718 --> 00:02:03,839
anyway we got several weekend's worth of

50
00:02:02,009 --> 00:02:05,280
work to do this lighting is pretty

51
00:02:03,840 --> 00:02:07,049
complicated there's a lot of pieces to

52
00:02:05,280 --> 00:02:08,459
it and so it takes a while to get

53
00:02:07,049 --> 00:02:10,379
through but that's what we're doing now

54
00:02:08,459 --> 00:02:12,689
is getting through it so we're gonna go

55
00:02:10,378 --> 00:02:14,159
ahead and jump back in where we left off

56
00:02:12,689 --> 00:02:17,969
last weekend

57
00:02:14,159 --> 00:02:21,150
the basic idea right now is just we need

58
00:02:17,969 --> 00:02:23,609
to get the plumbing under control so we

59
00:02:21,150 --> 00:02:25,830
can put all of the light probes that we

60
00:02:23,610 --> 00:02:28,350
want to compute into the lighting system

61
00:02:25,830 --> 00:02:30,270
and then we also then need to switch the

62
00:02:28,349 --> 00:02:32,699
lighting system so that instead of

63
00:02:30,270 --> 00:02:34,740
casting from points that are on the

64
00:02:32,699 --> 00:02:37,199
surfaces of the things we are actually

65
00:02:34,740 --> 00:02:39,900
using for occluders we have to change

66
00:02:37,199 --> 00:02:42,479
that to be casting from the light probes

67
00:02:39,900 --> 00:02:44,610
themselves this also involves another

68
00:02:42,479 --> 00:02:47,939
change which is that previously we were

69
00:02:44,610 --> 00:02:50,640
looking at having cubes and stuff like

70
00:02:47,939 --> 00:02:52,740
this that we have multiple points on

71
00:02:50,639 --> 00:02:55,049
potentially whereas now we're just

72
00:02:52,740 --> 00:02:57,150
talking about look a probe just has six

73
00:02:55,050 --> 00:02:58,770
directions and whichever direction you

74
00:02:57,150 --> 00:03:02,280
sent the Ray out in that's where the

75
00:02:58,770 --> 00:03:04,610
summation will occur so that is sort of

76
00:03:02,280 --> 00:03:10,800
a separate part of the of the process

77
00:03:04,610 --> 00:03:18,300
now if we go let's go ahead and and jump

78
00:03:10,800 --> 00:03:21,000
back let's see here - yeah if we jump

79
00:03:18,300 --> 00:03:22,860
back to the handmade lighting code then

80
00:03:21,000 --> 00:03:24,930
the problem that I was sort of stopped

81
00:03:22,860 --> 00:03:28,650
on well I mean that I was just looking

82
00:03:24,930 --> 00:03:31,500
at I guess is one of the problems we're

83
00:03:28,650 --> 00:03:33,990
gonna have here for doing for computing

84
00:03:31,500 --> 00:03:36,000
our lighting you can see we've got a

85
00:03:33,990 --> 00:03:37,800
routine here that's it's not great but

86
00:03:36,000 --> 00:03:41,400
it's not horrible like we did a little

87
00:03:37,800 --> 00:03:43,469
bit of work to make it decent there's a

88
00:03:41,400 --> 00:03:45,510
hierarchical array caster here that

89
00:03:43,469 --> 00:03:47,609
basically ray casts against boxes and

90
00:03:45,509 --> 00:03:48,959
every time it hits a box it looks to see

91
00:03:47,610 --> 00:03:52,700
if there are children of the box and

92
00:03:48,959 --> 00:03:54,719
open looks inside those right now

93
00:03:52,699 --> 00:03:56,939
previously what we were doing is we were

94
00:03:54,719 --> 00:04:00,150
actually going through and for each

95
00:03:56,939 --> 00:04:02,340
individual box we were that we were

96
00:04:00,150 --> 00:04:05,490
going to actually record a hit we would

97
00:04:02,340 --> 00:04:07,680
look to see which surface was actually

98
00:04:05,490 --> 00:04:12,060
being hit like which one of the

99
00:04:07,680 --> 00:04:14,909
directions of the box and if you look at

100
00:04:12,060 --> 00:04:17,339
what's happening here what we then were

101
00:04:14,909 --> 00:04:20,579
sort of suggesting is well alright so we

102
00:04:17,339 --> 00:04:23,000
hit a point on the box and now we're

103
00:04:20,579 --> 00:04:27,289
gonna have to do this this work and

104
00:04:23,000 --> 00:04:27,290
literally as I was just describing it

105
00:04:27,829 --> 00:04:30,769
I thought of a much simpler solution

106
00:04:28,668 --> 00:04:32,149
just literally as I was literally just

107
00:04:30,769 --> 00:04:34,310
talking but let me describe what we were

108
00:04:32,149 --> 00:04:35,688
trying to do and then I'll say well I

109
00:04:34,310 --> 00:04:41,199
think that was probably pretty stupid

110
00:04:35,689 --> 00:04:47,479
and maybe we shouldn't do that all right

111
00:04:41,199 --> 00:04:50,240
so if you look here at the let's go over

112
00:04:47,478 --> 00:04:52,699
this carefully next time part what we're

113
00:04:50,240 --> 00:04:55,848
trying to do here is say look when we

114
00:04:52,699 --> 00:04:57,560
hit a particular box so again these

115
00:04:55,848 --> 00:04:59,569
boxes just to give you some perspective

116
00:04:57,560 --> 00:05:01,158
about what they are let me actually run

117
00:04:59,569 --> 00:05:08,270
the game and just point to what I mean

118
00:05:01,158 --> 00:05:11,418
by a box right and this is the debug

119
00:05:08,269 --> 00:05:13,098
mode build so it's gonna be slow so when

120
00:05:11,418 --> 00:05:18,318
I say box I mean like one of these

121
00:05:13,098 --> 00:05:22,339
things right so like for example if we

122
00:05:18,319 --> 00:05:24,289
were to what's going on here there we go

123
00:05:22,339 --> 00:05:26,329
so for example if we were to talk about

124
00:05:24,288 --> 00:05:28,310
this box here or you know any of these

125
00:05:26,329 --> 00:05:30,769
things they're sort of like almost like

126
00:05:28,310 --> 00:05:32,899
a Minecraft kind of world construction

127
00:05:30,769 --> 00:05:34,668
right except ours don't have to be cubes

128
00:05:32,899 --> 00:05:35,839
they can be like an arbitrary rectangle

129
00:05:34,668 --> 00:05:37,609
but you know we're just placing these

130
00:05:35,839 --> 00:05:38,778
like blocky things in the world they

131
00:05:37,610 --> 00:05:40,460
also don't have to be on a grid so I

132
00:05:38,778 --> 00:05:42,019
guess it's it's pretty different from

133
00:05:40,459 --> 00:05:44,299
Minecraft I guess but you know what I

134
00:05:42,019 --> 00:05:44,978
mean it's the world is supposed to be

135
00:05:44,300 --> 00:05:50,150
blocky

136
00:05:44,978 --> 00:05:52,189
and so these blocks in the world

137
00:05:50,149 --> 00:05:53,929
we're raycasting against those because

138
00:05:52,189 --> 00:05:56,209
they're what form the super structure

139
00:05:53,930 --> 00:05:58,668
and if we want to if we have a large

140
00:05:56,209 --> 00:06:00,620
enough thing like maybe the hero we can

141
00:05:58,668 --> 00:06:02,389
put a block that we don't actually

142
00:06:00,620 --> 00:06:03,918
render but then we use for lighting we

143
00:06:02,389 --> 00:06:05,689
can put a block where they are if we

144
00:06:03,918 --> 00:06:08,000
want them to sort of cut out a little

145
00:06:05,689 --> 00:06:09,560
bit of the light right and we may or may

146
00:06:08,000 --> 00:06:11,000
not want to do that we can try it and

147
00:06:09,560 --> 00:06:12,439
see if it looks better or worse to have

148
00:06:11,000 --> 00:06:14,149
it in there but point being that's all

149
00:06:12,439 --> 00:06:15,740
blocks are there are lighting primitive

150
00:06:14,149 --> 00:06:18,918
basically they're the thing that catches

151
00:06:15,740 --> 00:06:22,788
our shadows and prevents light from

152
00:06:18,918 --> 00:06:24,049
propagating around and so they are the

153
00:06:22,788 --> 00:06:26,180
things that if I put like a light in

154
00:06:24,050 --> 00:06:28,968
here like there is a light here it will

155
00:06:26,180 --> 00:06:30,949
not be able to like shine into this room

156
00:06:28,968 --> 00:06:33,379
because there's crap in the way right

157
00:06:30,949 --> 00:06:35,180
those blocks will stop it whereas in

158
00:06:33,379 --> 00:06:36,800
here these blocks are all low so the

159
00:06:35,180 --> 00:06:39,319
light can hit like this surface and this

160
00:06:36,800 --> 00:06:42,020
surface just fine okay so that's what

161
00:06:39,319 --> 00:06:43,908
we're talking about here

162
00:06:42,019 --> 00:06:46,188
so either actual world blocks or

163
00:06:43,908 --> 00:06:48,800
synthetic invisible blocks that we add

164
00:06:46,189 --> 00:06:50,870
on top of our sprites to catch light

165
00:06:48,800 --> 00:06:52,999
force for the largest rights that we

166
00:06:50,870 --> 00:06:55,819
want that to happen if we ever do which

167
00:06:52,999 --> 00:06:57,590
we may not but assuming that we do we

168
00:06:55,819 --> 00:07:01,340
would be adding like blocks in there as

169
00:06:57,589 --> 00:07:03,709
a as light catchers effectively so when

170
00:07:01,339 --> 00:07:05,869
we hit one of those blocks we don't

171
00:07:03,709 --> 00:07:09,589
actually care where we hit the block

172
00:07:05,870 --> 00:07:11,629
really for purposes of the shadow all we

173
00:07:09,589 --> 00:07:14,688
know all we needed to know was the light

174
00:07:11,629 --> 00:07:17,689
stopped there and so at the point where

175
00:07:14,689 --> 00:07:20,960
we enter this if statement this if any

176
00:07:17,689 --> 00:07:23,659
true here we actually have the

177
00:07:20,959 --> 00:07:25,609
information we need to finish this is

178
00:07:23,658 --> 00:07:27,228
all we really need is to say look we're

179
00:07:25,610 --> 00:07:29,960
doing four arrays at a time so we have

180
00:07:27,228 --> 00:07:33,949
to make sure we only accept those hits

181
00:07:29,959 --> 00:07:36,288
on the Rays that are ones that we cared

182
00:07:33,949 --> 00:07:38,689
about but other than that we're pretty

183
00:07:36,288 --> 00:07:41,060
much done so this you know these two

184
00:07:38,689 --> 00:07:46,400
parts here are all we really needed to

185
00:07:41,060 --> 00:07:48,829
do but we then when we go to process

186
00:07:46,399 --> 00:07:50,959
that hit like after we do all of our ray

187
00:07:48,829 --> 00:07:52,878
casting we're gonna have four hits for

188
00:07:50,959 --> 00:07:54,649
the four arrays which are the closest

189
00:07:52,879 --> 00:07:59,149
boxes that each of those rates

190
00:07:54,649 --> 00:08:01,628
intersected we then need to hand back to

191
00:07:59,149 --> 00:08:04,430
the calling routine some lighting

192
00:08:01,629 --> 00:08:05,778
because when you hit you're sending out

193
00:08:04,430 --> 00:08:07,819
a you know these are light probes

194
00:08:05,778 --> 00:08:10,158
they're sending out rays to see what the

195
00:08:07,819 --> 00:08:12,408
light looks like around them when they

196
00:08:10,158 --> 00:08:13,908
hit a surface they then need to be able

197
00:08:12,408 --> 00:08:15,379
to say what the lighting was at that

198
00:08:13,908 --> 00:08:18,978
service to contribute back to the light

199
00:08:15,379 --> 00:08:21,680
probe now how do you do that well in a

200
00:08:18,978 --> 00:08:23,418
light probe system the answer is you

201
00:08:21,680 --> 00:08:25,639
have to ask the light probes from like

202
00:08:23,418 --> 00:08:27,560
last frame so whatever your lighting

203
00:08:25,639 --> 00:08:28,939
solution was last frame you use that to

204
00:08:27,560 --> 00:08:30,110
light the services for this frame and

205
00:08:28,939 --> 00:08:34,009
create the new lighting and you

206
00:08:30,110 --> 00:08:36,259
propagate it forward right and so if

207
00:08:34,009 --> 00:08:38,838
we're doing that it means we need to

208
00:08:36,259 --> 00:08:41,208
call when we get that ray cast and we

209
00:08:38,839 --> 00:08:43,969
get that hit back we need to call the

210
00:08:41,208 --> 00:08:46,458
lighting function on the points that we

211
00:08:43,969 --> 00:08:48,410
hit and in order to call the lighting

212
00:08:46,458 --> 00:08:50,479
function on the points that we hit we

213
00:08:48,409 --> 00:08:52,789
would need to know the normals at the

214
00:08:50,480 --> 00:08:53,720
point that we hit and since we don't

215
00:08:52,789 --> 00:08:55,370
know the normal

216
00:08:53,720 --> 00:08:57,620
the point we would hit we need to add

217
00:08:55,370 --> 00:08:59,060
some code to do that now this would have

218
00:08:57,620 --> 00:09:02,028
been one way to do it but it's very

219
00:08:59,059 --> 00:09:04,250
expensive right and the question is

220
00:09:02,028 --> 00:09:06,169
because this was the old code we were

221
00:09:04,250 --> 00:09:07,458
using that actually literally came up

222
00:09:06,169 --> 00:09:08,568
with an index zero one two three four

223
00:09:07,458 --> 00:09:11,958
five right

224
00:09:08,568 --> 00:09:13,938
that said which side of the cube you hit

225
00:09:11,958 --> 00:09:16,369
it's not really a cube there are bright

226
00:09:13,938 --> 00:09:18,740
rectangular prisms because they don't

227
00:09:16,370 --> 00:09:22,459
have to have the same dimensions they

228
00:09:18,740 --> 00:09:31,250
can be arbitrarily like long on each

229
00:09:22,458 --> 00:09:33,528
axis but so call boxes so we don't need

230
00:09:31,250 --> 00:09:36,919
that actual information we don't care

231
00:09:33,528 --> 00:09:40,220
which side of the box that you hit we

232
00:09:36,919 --> 00:09:43,188
just care whether or not we just care if

233
00:09:40,220 --> 00:09:45,860
you can get them normal right and the

234
00:09:43,188 --> 00:09:49,039
problem that we have here is we don't

235
00:09:45,860 --> 00:09:51,589
know how to get that normal without sort

236
00:09:49,039 --> 00:09:58,759
of solving which direction of the box

237
00:09:51,589 --> 00:10:03,470
you had however what I was realizing

238
00:09:58,759 --> 00:10:06,169
when I was talking there right is I

239
00:10:03,470 --> 00:10:10,930
think we might be able to recreate the

240
00:10:06,169 --> 00:10:14,799
normal in sort of a more roundabout way

241
00:10:10,929 --> 00:10:14,799
let's see here we go

242
00:10:16,039 --> 00:10:20,269
and so let's let's talk about that here

243
00:10:18,589 --> 00:10:24,290
because if we can create if we can

244
00:10:20,269 --> 00:10:27,948
recreate it in a more roundabout way we

245
00:10:24,289 --> 00:10:32,539
would potentially be able to save

246
00:10:27,948 --> 00:10:34,688
ourselves some time right okay so let's

247
00:10:32,539 --> 00:10:34,688
see

248
00:10:56,049 --> 00:11:03,169
so we have a axis aligned bounding box

249
00:10:59,778 --> 00:11:05,088
or AABB right it's a thing that we know

250
00:11:03,169 --> 00:11:07,099
you know we've kept it simple for

251
00:11:05,089 --> 00:11:11,690
ourselves and we've said look we know

252
00:11:07,100 --> 00:11:14,810
that in our case we have a coordinate

253
00:11:11,690 --> 00:11:16,250
system and our boxes are always aligned

254
00:11:14,809 --> 00:11:18,229
to the coordinate system so you know

255
00:11:16,250 --> 00:11:21,080
they always look like this sort of a

256
00:11:18,230 --> 00:11:23,629
thing oh that's a really bad box there

257
00:11:21,080 --> 00:11:28,790
we go so we know that they're always

258
00:11:23,629 --> 00:11:32,088
access aligned the Y X and z axes of our

259
00:11:28,789 --> 00:11:35,990
box are always the XY and z axes of the

260
00:11:32,089 --> 00:11:37,790
world now it's not necessarily clear

261
00:11:35,990 --> 00:11:39,289
that we really needed that I mean it's

262
00:11:37,789 --> 00:11:40,669
our heart there's a little more

263
00:11:39,289 --> 00:11:42,849
computation involved if you don't do

264
00:11:40,669 --> 00:11:42,849
that

265
00:11:43,690 --> 00:11:49,880
but at the moment that's what we're

266
00:11:47,000 --> 00:11:51,200
doing and we don't really need to depart

267
00:11:49,879 --> 00:11:52,250
from that at all because rotation in

268
00:11:51,200 --> 00:11:53,870
this case it's not particularly

269
00:11:52,250 --> 00:11:55,250
important for us we don't really

270
00:11:53,870 --> 00:11:58,399
anticipate needing that in the game at

271
00:11:55,250 --> 00:12:00,708
all so what that means is we can use if

272
00:11:58,399 --> 00:12:03,320
there is something we can do with our a

273
00:12:00,708 --> 00:12:04,819
a B B's here if there is something we

274
00:12:03,320 --> 00:12:06,500
can lean on for that during this

275
00:12:04,820 --> 00:12:09,230
algorithm we're you know knowing that

276
00:12:06,500 --> 00:12:13,190
the XY and z axes happen to align with

277
00:12:09,230 --> 00:12:16,490
the world that actually can be used to

278
00:12:13,190 --> 00:12:19,279
our advantage potentially all right so

279
00:12:16,490 --> 00:12:25,250
here's what I'm thinking here's what we

280
00:12:19,278 --> 00:12:27,289
know right we know that for our

281
00:12:25,250 --> 00:12:29,839
intersection we're going to come up with

282
00:12:27,289 --> 00:12:33,019
some point on this a a B that's on the

283
00:12:29,839 --> 00:12:35,089
surface of the a a BB and we already

284
00:12:33,019 --> 00:12:38,419
know that information because we have

285
00:12:35,089 --> 00:12:42,260
the Ray origin right so we have the Ray

286
00:12:38,419 --> 00:12:48,879
origin plus T times the raid erection

287
00:12:42,259 --> 00:12:48,879
right maybe I'll do it like this

288
00:12:53,778 --> 00:13:00,989
so we've got a point that we solve for

289
00:12:57,839 --> 00:13:04,619
here during our intersection we will

290
00:13:00,989 --> 00:13:06,059
know the T these are Givens right but

291
00:13:04,619 --> 00:13:07,769
we're basically solving for the T and

292
00:13:06,058 --> 00:13:10,798
from that T we can get back the P

293
00:13:07,769 --> 00:13:13,288
trivially so we always know this number

294
00:13:10,798 --> 00:13:16,048
which is basically like if this is the

295
00:13:13,288 --> 00:13:18,149
origin of the Ray so this is oh it's

296
00:13:16,048 --> 00:13:21,119
this value and this is the direction of

297
00:13:18,149 --> 00:13:28,259
the Ray that's D that's this value so we

298
00:13:21,119 --> 00:13:30,089
know that that is T I guess I should say

299
00:13:28,259 --> 00:13:33,269
D is like the unit vector this way right

300
00:13:30,089 --> 00:13:35,249
we know this distance is T and so we

301
00:13:33,269 --> 00:13:39,058
know that o plus TD is P that's trivial

302
00:13:35,249 --> 00:13:41,548
compute it's just a mad F mad right and

303
00:13:39,058 --> 00:13:44,068
so we can get all of this stuff for free

304
00:13:41,548 --> 00:13:46,649
because just the act of doing the

305
00:13:44,068 --> 00:13:50,068
intersection testing always gives us

306
00:13:46,649 --> 00:13:52,528
this and so the question would be what

307
00:13:50,068 --> 00:13:55,428
can we do what's the simplest possible

308
00:13:52,528 --> 00:14:00,568
thing we could do to get the normal back

309
00:13:55,428 --> 00:14:03,058
given that we know that answer right so

310
00:14:00,568 --> 00:14:04,858
for a given box we know what the center

311
00:14:03,058 --> 00:14:07,228
of the box is and we know what the

312
00:14:04,859 --> 00:14:09,239
radius of the box is right so how far it

313
00:14:07,229 --> 00:14:10,829
is from the center to each side I

314
00:14:09,239 --> 00:14:13,288
believe that's the structure that we're

315
00:14:10,828 --> 00:14:15,238
using right now as opposed to like mini

316
00:14:13,288 --> 00:14:16,918
quarter max corner although I believe

317
00:14:15,239 --> 00:14:24,720
we've already computed them in quarter

318
00:14:16,918 --> 00:14:26,308
in the max corner yeah so you can see

319
00:14:24,720 --> 00:14:27,869
that happening here it does raise the

320
00:14:26,308 --> 00:14:29,278
question of whether we actually would

321
00:14:27,869 --> 00:14:34,739
rather since we have to compute it every

322
00:14:29,278 --> 00:14:38,578
time it does kind of beg the question or

323
00:14:34,739 --> 00:14:40,589
I say suggests the question that maybe

324
00:14:38,578 --> 00:14:42,628
what we should be doing there is maybe

325
00:14:40,589 --> 00:14:50,129
we should be just storing box wing box

326
00:14:42,629 --> 00:14:52,709
max but I don't know as you can see here

327
00:14:50,129 --> 00:14:55,199
we have to like do this every time why

328
00:14:52,708 --> 00:14:56,728
not just do that why not just store box

329
00:14:55,198 --> 00:15:00,149
um in the box Max and I don't really

330
00:14:56,729 --> 00:15:04,870
know why so I might say here to do

331
00:15:00,149 --> 00:15:09,370
KC should we just be storing box men

332
00:15:04,870 --> 00:15:13,929
smacks instead of computing them is

333
00:15:09,370 --> 00:15:18,879
there any real reason to use the radii

334
00:15:13,929 --> 00:15:21,939
the center radius form so you know

335
00:15:18,879 --> 00:15:24,970
that's sort of separate issue but not a

336
00:15:21,940 --> 00:15:28,240
huge impact to time I mean all we're

337
00:15:24,970 --> 00:15:30,820
doing is one subtract one AD per box

338
00:15:28,240 --> 00:15:32,500
check which you know it's not going to

339
00:15:30,820 --> 00:15:34,060
give us the masses food-based boost but

340
00:15:32,500 --> 00:15:37,200
the point is why do something you don't

341
00:15:34,059 --> 00:15:41,500
have to so we should at least check that

342
00:15:37,200 --> 00:15:43,778
for due diligence anyway so we could

343
00:15:41,500 --> 00:15:45,850
really think about having either of this

344
00:15:43,778 --> 00:15:47,950
the two things because we know that our

345
00:15:45,850 --> 00:15:53,230
collision routine currently needs sort

346
00:15:47,950 --> 00:15:55,180
of a min/max anyway right and so we you

347
00:15:53,230 --> 00:16:00,639
know we don't really need to overthink

348
00:15:55,179 --> 00:16:04,259
that so once we get our sort of position

349
00:16:00,639 --> 00:16:08,199
here there's a lot of ways that we could

350
00:16:04,259 --> 00:16:11,769
try to create the lighting normal there

351
00:16:08,200 --> 00:16:15,339
right so if we want to use a completely

352
00:16:11,769 --> 00:16:18,809
flat normal maybe we have to do a little

353
00:16:15,339 --> 00:16:21,910
bit more work but what we could say is

354
00:16:18,809 --> 00:16:25,419
what if we just pretended that this

355
00:16:21,909 --> 00:16:28,719
thing was a sphere right so instead of

356
00:16:25,419 --> 00:16:32,229
or an ellipsoid instead of saying well

357
00:16:28,720 --> 00:16:34,269
you know it's a box what if we just said

358
00:16:32,230 --> 00:16:39,370
that it was a sort of an ellipsoid sort

359
00:16:34,269 --> 00:16:41,980
of a thing right and if we knew a point

360
00:16:39,370 --> 00:16:43,269
on the ellipsoid that we hit right so if

361
00:16:41,980 --> 00:16:46,149
we've done the same thing for the

362
00:16:43,269 --> 00:16:48,299
ellipsoid or the sphere well we wouldn't

363
00:16:46,149 --> 00:16:52,569
really be sitting around stressing about

364
00:16:48,299 --> 00:16:55,479
what the normal was would we because we

365
00:16:52,570 --> 00:16:58,660
would know that the normal is always

366
00:16:55,480 --> 00:17:01,959
going to be just the direction of the

367
00:16:58,659 --> 00:17:04,029
hit from the center right so meaning

368
00:17:01,958 --> 00:17:07,599
whatever the center actually itself is

369
00:17:04,029 --> 00:17:12,328
we would just take P minus the center

370
00:17:07,599 --> 00:17:12,328
that is the direction of the normal

371
00:17:12,480 --> 00:17:18,670
right so this is kind of like our you

372
00:17:16,150 --> 00:17:19,990
know our direction well that the

373
00:17:18,670 --> 00:17:22,150
I use that for a direction solo tile

374
00:17:19,990 --> 00:17:24,130
this is the normal direction and then

375
00:17:22,150 --> 00:17:28,210
the unit length normal would just be

376
00:17:24,130 --> 00:17:31,150
that normalized right so we could pretty

377
00:17:28,210 --> 00:17:33,819
trivially find the normal for a sphere

378
00:17:31,150 --> 00:17:38,740
based version without doing any fancy

379
00:17:33,819 --> 00:17:42,849
work so the question here is will can we

380
00:17:38,740 --> 00:17:45,700
just do the same thing for our box so if

381
00:17:42,849 --> 00:17:48,369
we wanted our normals to be smooth well

382
00:17:45,700 --> 00:17:50,620
we just do that right if we just

383
00:17:48,369 --> 00:17:53,889
actually even even if the box is per to

384
00:17:50,619 --> 00:17:56,939
be particularly weirdly shaped I think

385
00:17:53,890 --> 00:17:59,200
this probably would still work right

386
00:17:56,940 --> 00:18:01,539
meaning let's suppose you were gonna

387
00:17:59,200 --> 00:18:03,819
kind of reach up to that point there

388
00:18:01,539 --> 00:18:06,279
right it's still completely smooth the

389
00:18:03,819 --> 00:18:07,659
whole way around right so when you get

390
00:18:06,279 --> 00:18:09,129
to here you're pointing off that

391
00:18:07,660 --> 00:18:11,110
direction and you get to here you're

392
00:18:09,130 --> 00:18:13,630
pointing off that direction right and so

393
00:18:11,109 --> 00:18:17,500
subtracting from the center just put

394
00:18:13,630 --> 00:18:20,530
we'll put sphere-like normals onto our

395
00:18:17,500 --> 00:18:22,450
box which let's be honest because this

396
00:18:20,529 --> 00:18:26,710
delighting is approximate anyway we

397
00:18:22,450 --> 00:18:34,049
could just use so we could we could if

398
00:18:26,710 --> 00:18:38,799
we wanted to just use P minus C as our

399
00:18:34,049 --> 00:18:39,819
as our normal right and then we could

400
00:18:38,799 --> 00:18:43,359
just normalize it later

401
00:18:39,819 --> 00:18:44,740
that's way way way simpler than what we

402
00:18:43,359 --> 00:18:47,500
were trying to do before and it does

403
00:18:44,740 --> 00:18:50,230
give us a normal for lighting and maybe

404
00:18:47,500 --> 00:18:51,849
a good normal for lighting who knows but

405
00:18:50,230 --> 00:18:54,910
now the question is well what if we

406
00:18:51,849 --> 00:18:57,189
really want to be accurate in this part

407
00:18:54,910 --> 00:18:58,960
of the process and we would like it to

408
00:18:57,190 --> 00:19:02,490
be discontinuous so we would like it to

409
00:18:58,960 --> 00:19:05,710
always point this way all along here and

410
00:19:02,490 --> 00:19:10,950
then always point this way all along

411
00:19:05,710 --> 00:19:13,360
here right what would that look like

412
00:19:10,950 --> 00:19:15,130
well as we usually do in hand-made here

413
00:19:13,359 --> 00:19:17,799
let's start with a 2d case first because

414
00:19:15,130 --> 00:19:19,900
usually in 3d you can solve in 2d and

415
00:19:17,799 --> 00:19:21,940
then that will inform the 3d solution

416
00:19:19,900 --> 00:19:25,509
there are several cases where that's not

417
00:19:21,940 --> 00:19:27,490
true but in this case I don't think I'm

418
00:19:25,509 --> 00:19:28,960
pretty sure in this case since we're

419
00:19:27,490 --> 00:19:31,930
talking about axis aligned bounding

420
00:19:28,960 --> 00:19:32,779
boxes and each one of those elements

421
00:19:31,930 --> 00:19:35,090
that

422
00:19:32,779 --> 00:19:36,859
the Y and the Z are completely

423
00:19:35,089 --> 00:19:38,869
independent in this case and we know the

424
00:19:36,859 --> 00:19:41,089
result will be a one or a negative one

425
00:19:38,869 --> 00:19:43,069
in each in one of those three

426
00:19:41,089 --> 00:19:45,039
coordinates it's pretty clear since this

427
00:19:43,069 --> 00:19:48,230
is going to be a separable problem right

428
00:19:45,039 --> 00:19:49,909
so I think we're not in a lot of risk

429
00:19:48,230 --> 00:19:51,230
here of stumbling into something where a

430
00:19:49,910 --> 00:19:52,910
solution that works in tune you won't

431
00:19:51,230 --> 00:19:54,400
work in 3d but you never know but I'm

432
00:19:52,910 --> 00:19:57,800
pretty sure we won't have that problem

433
00:19:54,400 --> 00:19:59,240
so let's just take a cross-section and

434
00:19:57,799 --> 00:20:01,639
say well let's look at some of these

435
00:19:59,240 --> 00:20:02,930
cases so what we know is that we could

436
00:20:01,640 --> 00:20:05,090
have something that's a fairly well

437
00:20:02,930 --> 00:20:06,230
balanced shape but we could also in

438
00:20:05,089 --> 00:20:07,789
theory because we're not really

439
00:20:06,230 --> 00:20:09,620
restricting our AAA B's in any

440
00:20:07,789 --> 00:20:12,789
particular way here have a very

441
00:20:09,619 --> 00:20:15,649
unbalanced shape in one of the other two

442
00:20:12,789 --> 00:20:17,839
ways which is to say it could be that

443
00:20:15,650 --> 00:20:21,019
like the X is very much larger than the

444
00:20:17,839 --> 00:20:23,179
Y or the Y is very much larger than the

445
00:20:21,019 --> 00:20:26,779
X and the reason that that matters to us

446
00:20:23,180 --> 00:20:30,740
is because you know if you were to just

447
00:20:26,779 --> 00:20:33,910
say like use you know Max or something

448
00:20:30,740 --> 00:20:36,200
like this to figure out which one to do

449
00:20:33,910 --> 00:20:37,970
you can sort of see that for something

450
00:20:36,200 --> 00:20:41,120
like a cube or something that's close to

451
00:20:37,970 --> 00:20:43,730
a cube taking the max is a pretty close

452
00:20:41,119 --> 00:20:48,829
answer because for example here is the

453
00:20:43,730 --> 00:20:51,860
45 degree right and if I just took

454
00:20:48,829 --> 00:20:54,500
whichever the max element was then I

455
00:20:51,859 --> 00:21:02,179
would sort of get this kind of a thing

456
00:20:54,500 --> 00:21:03,740
and that's almost correct right but you

457
00:21:02,180 --> 00:21:04,490
can see that there's a region where is

458
00:21:03,740 --> 00:21:06,200
incorrect

459
00:21:04,490 --> 00:21:08,269
which is here and here because as soon

460
00:21:06,200 --> 00:21:12,110
as we get past the 45 degrees the Y

461
00:21:08,269 --> 00:21:17,720
starts to be larger and when the Y is

462
00:21:12,109 --> 00:21:20,329
larger you you're going to start

463
00:21:17,720 --> 00:21:22,610
thinking that the normal is plus 1y or

464
00:21:20,329 --> 00:21:25,129
negative 1y when that's not actually

465
00:21:22,609 --> 00:21:26,689
correct it changes too early and

466
00:21:25,130 --> 00:21:28,610
therefore you can see why I drew these

467
00:21:26,690 --> 00:21:29,809
two cases with just to underscore just

468
00:21:28,609 --> 00:21:32,899
how bad that is

469
00:21:29,809 --> 00:21:35,990
because in this case here's the 45 right

470
00:21:32,900 --> 00:21:37,940
and so it would really be wrong most of

471
00:21:35,990 --> 00:21:40,460
the time and the same thing would be

472
00:21:37,940 --> 00:21:42,230
true here on the other axis right now

473
00:21:40,460 --> 00:21:45,259
it's wrong most of the time in here

474
00:21:42,230 --> 00:21:47,019
right that's all wrong or that's all

475
00:21:45,259 --> 00:21:51,019
wrong

476
00:21:47,019 --> 00:21:55,129
so it's like well you know that's a bit

477
00:21:51,019 --> 00:21:59,629
of an issue but we can still use it as

478
00:21:55,130 --> 00:22:02,330
an approximate do I love it no because

479
00:21:59,630 --> 00:22:05,810
it seems like it should be pretty simple

480
00:22:02,329 --> 00:22:08,599
for us to do better than that and if you

481
00:22:05,809 --> 00:22:11,750
look at what we're sort of saying here

482
00:22:08,599 --> 00:22:15,679
it seems like there's a pretty direct

483
00:22:11,750 --> 00:22:18,160
way to do it because we know the

484
00:22:15,680 --> 00:22:21,470
dimensions of these boxes ahead of time

485
00:22:18,160 --> 00:22:27,740
it would be pretty easy for us to store

486
00:22:21,470 --> 00:22:31,120
a inverse scale wouldn't it right so if

487
00:22:27,740 --> 00:22:35,240
you think about it after I take this

488
00:22:31,119 --> 00:22:38,059
normals you know this creates a space I

489
00:22:35,240 --> 00:22:40,009
guess it's what I'm saying and after I

490
00:22:38,059 --> 00:22:42,379
take the difference so if I have a

491
00:22:40,009 --> 00:22:44,329
p-value that's here and after I take

492
00:22:42,380 --> 00:22:47,990
that difference what have I done

493
00:22:44,329 --> 00:22:50,929
well the origin of the space after I do

494
00:22:47,990 --> 00:22:53,630
that subtraction is the center right so

495
00:22:50,930 --> 00:22:55,100
I'm now in a space where the center you

496
00:22:53,630 --> 00:22:57,320
know I could redraw this coordinate

497
00:22:55,099 --> 00:23:01,969
system and I'm now in a space where the

498
00:22:57,319 --> 00:23:03,980
center of the box is at the center of my

499
00:23:01,970 --> 00:23:06,110
coordinate system and the normal

500
00:23:03,980 --> 00:23:08,360
direction that I've computed right the P

501
00:23:06,109 --> 00:23:12,469
minus C value this is the P minus C

502
00:23:08,359 --> 00:23:15,019
value here that's pointing off in some

503
00:23:12,470 --> 00:23:17,690
direction relative to my normal and I

504
00:23:15,019 --> 00:23:20,629
know it's on the wall of one of these

505
00:23:17,690 --> 00:23:24,860
boxes so it's inside a coordinate frame

506
00:23:20,630 --> 00:23:28,690
I know the scale of so the question is

507
00:23:24,859 --> 00:23:33,649
why not just store the inverse scale

508
00:23:28,690 --> 00:23:35,600
right why not just store how long the

509
00:23:33,650 --> 00:23:37,580
box is in Y how long the box is an

510
00:23:35,599 --> 00:23:41,990
ex-model about Z that's our radius value

511
00:23:37,579 --> 00:23:44,210
store the inverse radius right because

512
00:23:41,990 --> 00:23:48,829
then what we can do is we can multiply

513
00:23:44,210 --> 00:23:50,240
our point by our start RP minus C value

514
00:23:48,829 --> 00:23:52,970
which is already around the center of

515
00:23:50,240 --> 00:23:56,470
the box by the inverse scale value and

516
00:23:52,970 --> 00:23:58,839
that will shrink it into a unit cube

517
00:23:56,470 --> 00:24:02,470
right

518
00:23:58,839 --> 00:24:06,669
now if we took the maximum element it

519
00:24:02,470 --> 00:24:08,799
would correctly go in that that that

520
00:24:06,670 --> 00:24:11,740
would be the direction that it was

521
00:24:08,799 --> 00:24:16,899
supposed to go right so if we applied an

522
00:24:11,740 --> 00:24:18,970
inverse scale we would get the the exact

523
00:24:16,900 --> 00:24:24,370
answer if we took the maximum element

524
00:24:18,970 --> 00:24:25,630
right because inside a unit cube and it

525
00:24:24,369 --> 00:24:28,719
doesn't actually have to be unit it just

526
00:24:25,630 --> 00:24:29,890
has to be this a cube it just has to

527
00:24:28,720 --> 00:24:31,299
have the same dimension all sides it has

528
00:24:29,890 --> 00:24:35,200
to be one but has to be same dimension

529
00:24:31,299 --> 00:24:36,789
all sides inside a cube what is true is

530
00:24:35,200 --> 00:24:39,549
that any cross-section that we take

531
00:24:36,789 --> 00:24:42,430
would look like a perfect like the

532
00:24:39,549 --> 00:24:45,339
perfect 45-degree switch 45 degrees

533
00:24:42,430 --> 00:24:47,320
always points at the corner which means

534
00:24:45,339 --> 00:24:52,959
that where it would switch from this to

535
00:24:47,319 --> 00:24:55,000
this is always correct right so that

536
00:24:52,960 --> 00:24:57,100
suggests to me that rather than doing

537
00:24:55,000 --> 00:24:59,980
any kind of fanciness to see which side

538
00:24:57,099 --> 00:25:01,779
we hit let's just not care and let's

539
00:24:59,980 --> 00:25:05,259
work it backwards from just the

540
00:25:01,779 --> 00:25:07,210
subtraction right so in here I guess

541
00:25:05,259 --> 00:25:09,309
what I would say is rather than doing

542
00:25:07,210 --> 00:25:12,029
any of this let's just get rid of it all

543
00:25:09,309 --> 00:25:24,519
I don't think we care about any of that

544
00:25:12,029 --> 00:25:28,829
or that or this oops so if we would like

545
00:25:24,519 --> 00:25:32,319
to make this code work correctly now

546
00:25:28,829 --> 00:25:34,990
when we take our selection here and we

547
00:25:32,319 --> 00:25:37,539
select in this mask what we want to now

548
00:25:34,990 --> 00:25:40,000
do is do a result normal that selects in

549
00:25:37,539 --> 00:25:41,559
the normal as well right like we were

550
00:25:40,000 --> 00:25:44,970
doing here

551
00:25:41,559 --> 00:25:47,230
so this this code still wants to occur

552
00:25:44,970 --> 00:25:49,900
because we got it we have to do our

553
00:25:47,230 --> 00:25:52,630
selection but what we want to do now is

554
00:25:49,900 --> 00:25:54,460
just have our normal computation here

555
00:25:52,630 --> 00:25:58,350
right so this stuff doesn't need to be

556
00:25:54,460 --> 00:25:58,350
doing that anymore we'll work it out

557
00:26:01,690 --> 00:26:06,078
so we want to do our normal XY and Z I

558
00:26:04,608 --> 00:26:07,908
don't know if we want to do them like

559
00:26:06,078 --> 00:26:12,348
dot X dot y dot Z but we'll see what

560
00:26:07,909 --> 00:26:15,199
happens to happen here as we go so let's

561
00:26:12,348 --> 00:26:20,958
work it through all right so here's our

562
00:26:15,199 --> 00:26:28,369
normal X here's our normal Y and here's

563
00:26:20,959 --> 00:26:30,259
our normal Z right okay so what we would

564
00:26:28,368 --> 00:26:32,388
like to do here is we would like to

565
00:26:30,259 --> 00:26:34,788
compute first of all our si minus p

566
00:26:32,388 --> 00:26:37,788
value right so we want to be able to

567
00:26:34,788 --> 00:26:42,068
compute you know that that vector to the

568
00:26:37,788 --> 00:26:44,959
point whatever that is so you know this

569
00:26:42,068 --> 00:26:50,328
now we know where the point is because

570
00:26:44,959 --> 00:26:56,179
we have our T value so we know this T

571
00:26:50,328 --> 00:27:00,979
min so the T min value plus so you know

572
00:26:56,179 --> 00:27:03,919
taking the origin of the Ray which is

573
00:27:00,979 --> 00:27:06,048
this value here and multiplying the team

574
00:27:03,919 --> 00:27:11,359
in in fact you can really just paste

575
00:27:06,048 --> 00:27:14,558
this right taking the origin of the Ray

576
00:27:11,358 --> 00:27:17,689
and adding the T min value times the

577
00:27:14,558 --> 00:27:27,168
Raiden that will give us the

578
00:27:17,690 --> 00:27:28,999
intersection point for each four for

579
00:27:27,169 --> 00:27:32,149
each of our four arrays we will have the

580
00:27:28,999 --> 00:27:34,009
intersection point on there the boxes

581
00:27:32,148 --> 00:27:36,648
that they hit now some of them didn't

582
00:27:34,009 --> 00:27:38,358
hit right they weren't earlier hits so

583
00:27:36,648 --> 00:27:39,888
some of them these selects will knock

584
00:27:38,358 --> 00:27:42,288
out later right because we're only

585
00:27:39,888 --> 00:27:43,519
taking the Rays which hit closer but

586
00:27:42,288 --> 00:27:45,979
doesn't matter because we can compute

587
00:27:43,519 --> 00:27:48,078
them in bulk here and then we'll just

588
00:27:45,979 --> 00:27:50,449
pick will only keep the ones we actually

589
00:27:48,078 --> 00:27:54,259
wanted so the intersection P gets

590
00:27:50,449 --> 00:27:56,149
computed here and then after we know

591
00:27:54,259 --> 00:28:01,598
what the intersection point is we can do

592
00:27:56,148 --> 00:28:02,978
our subtraction so this is our you know

593
00:28:01,598 --> 00:28:06,348
unscaled

594
00:28:02,979 --> 00:28:08,859
normal if you will that just points off

595
00:28:06,348 --> 00:28:10,638
the direction or unscaled

596
00:28:08,858 --> 00:28:12,500
direction i don't know how you want to

597
00:28:10,638 --> 00:28:14,209
say it I don't know there's an

598
00:28:12,500 --> 00:28:17,299
for that exactly but it's the

599
00:28:14,210 --> 00:28:20,900
intersection P - whatever the Box origin

600
00:28:17,299 --> 00:28:22,369
is right so this box P here the center P

601
00:28:20,900 --> 00:28:24,890
and I guess that gives us a good reason

602
00:28:22,369 --> 00:28:30,109
why we want to keep doing Fox and radius

603
00:28:24,890 --> 00:28:34,009
right so that gives us our unscaled D

604
00:28:30,109 --> 00:28:36,949
value and then once we have those values

605
00:28:34,009 --> 00:28:42,559
in place we can now go about figuring

606
00:28:36,950 --> 00:28:45,799
out what the normals need to be right

607
00:28:42,559 --> 00:28:48,470
I'm sorry we can go ahead and scale them

608
00:28:45,799 --> 00:29:03,169
so now we want to just take an unskilled

609
00:28:48,470 --> 00:29:04,730
to get our scaled normal here actually

610
00:29:03,170 --> 00:29:06,769
nope we know we need to do that we just

611
00:29:04,730 --> 00:29:10,910
need a hat a Mart product here where

612
00:29:06,769 --> 00:29:12,259
we're gonna use our inverse box scale so

613
00:29:10,910 --> 00:29:15,440
this is something we can pre-compute and

614
00:29:12,259 --> 00:29:19,849
store in the box and then we can have

615
00:29:15,440 --> 00:29:21,830
our skilled direction now I know what

616
00:29:19,849 --> 00:29:23,149
you're thinking you're like well it's

617
00:29:21,829 --> 00:29:24,799
starting to get kind of complicated here

618
00:29:23,150 --> 00:29:27,350
right because we have to compute the

619
00:29:24,799 --> 00:29:31,879
actual point and then we have to compute

620
00:29:27,349 --> 00:29:34,699
the unscaled direction in the scale

621
00:29:31,880 --> 00:29:38,030
direction left but take a look at what

622
00:29:34,700 --> 00:29:42,279
we're actually doing right let me enjoy

623
00:29:38,029 --> 00:29:42,279
the site again if we look

624
00:29:47,089 --> 00:29:51,288
I'm gonna hazard a guess here and I

625
00:29:50,089 --> 00:29:54,918
don't actually know we're gonna have to

626
00:29:51,288 --> 00:30:02,359
try and prove it but if you look here's

627
00:29:54,919 --> 00:30:06,080
the Rea origin right eye and if we took

628
00:30:02,359 --> 00:30:08,628
the Box Center and this thing kind of

629
00:30:06,079 --> 00:30:10,638
comes down and hits this thing here I

630
00:30:08,628 --> 00:30:12,349
guess I need to make sure I'm doing this

631
00:30:10,638 --> 00:30:14,089
in a way that won't pre biases I'm just

632
00:30:12,349 --> 00:30:23,109
trying forever we can get rid of some of

633
00:30:14,089 --> 00:30:23,109
this math there's our intersection point

634
00:30:25,329 --> 00:30:31,398
there's our normal we would know this as

635
00:30:30,109 --> 00:30:35,719
well I think we already actually compute

636
00:30:31,398 --> 00:30:37,908
that right okay so taking a look at what

637
00:30:35,720 --> 00:30:40,490
we actually compute here we know the box

638
00:30:37,909 --> 00:30:46,179
min and Max and then we know sort of the

639
00:30:40,490 --> 00:30:46,179
tee box min tee box max which is sort of

640
00:30:46,359 --> 00:30:56,898
for each individual for each individual

641
00:30:52,599 --> 00:30:59,209
axis that's sort of saying how close is

642
00:30:56,898 --> 00:31:03,408
it to this how close is it to this how

643
00:30:59,210 --> 00:31:04,970
close is it to this right so we know how

644
00:31:03,409 --> 00:31:06,379
far we'd have to go to hit this plane

645
00:31:04,970 --> 00:31:11,389
how far we would have to go to hit this

646
00:31:06,378 --> 00:31:13,609
plane and so on right so the question is

647
00:31:11,388 --> 00:31:16,398
like is there anything we could do here

648
00:31:13,609 --> 00:31:24,469
that would allow us to determine what

649
00:31:16,398 --> 00:31:29,898
the actual normal is faster than like

650
00:31:24,470 --> 00:31:32,058
more efficiently than actually computing

651
00:31:29,898 --> 00:31:34,609
what that point is right then actually I

652
00:31:32,058 --> 00:31:40,428
can do like the eff mad and the subtract

653
00:31:34,609 --> 00:31:46,189
I and to me like I'm just trying to

654
00:31:40,429 --> 00:31:47,840
think I guess we can't really use the

655
00:31:46,190 --> 00:31:49,820
Ray Origin directly because the Ray

656
00:31:47,839 --> 00:31:52,158
origin could really be anywhere I mean

657
00:31:49,819 --> 00:31:55,308
the the Ray origin could in theory be

658
00:31:52,159 --> 00:31:57,169
like right there right and so then when

659
00:31:55,308 --> 00:31:59,329
you actually look at and the direction

660
00:31:57,169 --> 00:32:00,920
could be like straight down right so

661
00:31:59,329 --> 00:32:02,659
then when you look at like

662
00:32:00,920 --> 00:32:04,279
where these things hit like this one

663
00:32:02,660 --> 00:32:06,170
actually hits this side and this

664
00:32:04,279 --> 00:32:08,059
actually hits the top so we can't

665
00:32:06,170 --> 00:32:14,570
necessarily just use like the direction

666
00:32:08,059 --> 00:32:16,879
back to the rate origin for example that

667
00:32:14,569 --> 00:32:26,200
doesn't seem like that would work in any

668
00:32:16,880 --> 00:32:29,210
particular way yeah I don't know

669
00:32:26,200 --> 00:32:37,430
mm-hmm-hmm maybe there is no way around

670
00:32:29,210 --> 00:32:39,860
this I'll leave it like that temporarily

671
00:32:37,430 --> 00:32:43,279
but I'm just i what I do wonder this may

672
00:32:39,859 --> 00:32:45,349
be I have a feeling this is too much

673
00:32:43,279 --> 00:32:46,490
work that we don't actually need to do

674
00:32:45,349 --> 00:32:50,899
it

675
00:32:46,490 --> 00:32:54,049
this single subtract on all the values

676
00:32:50,900 --> 00:32:56,810
and then the Hadamard on all the values

677
00:32:54,049 --> 00:32:59,599
that's one subtract one multiply for

678
00:32:56,809 --> 00:33:01,069
each value so 24 instructions total I

679
00:32:59,599 --> 00:33:02,539
think right because we have to do so

680
00:33:01,069 --> 00:33:04,879
many of them is the problem is to do

681
00:33:02,539 --> 00:33:09,170
them on the X is the Y's and aziz which

682
00:33:04,880 --> 00:33:12,740
is a real bummer right but well you know

683
00:33:09,170 --> 00:33:14,390
they're four wide so I guess yeah 24 is

684
00:33:12,740 --> 00:33:17,599
probably the wrong way right it's

685
00:33:14,390 --> 00:33:22,070
actually 6 but you get the idea so 6

686
00:33:17,599 --> 00:33:23,929
instructions so assuming that we're

687
00:33:22,069 --> 00:33:26,539
going to do these six instructions here

688
00:33:23,930 --> 00:33:27,950
that's not too bad figuring out whether

689
00:33:26,539 --> 00:33:29,569
we could get rid of some of these here

690
00:33:27,950 --> 00:33:31,819
because this is less good because it's

691
00:33:29,569 --> 00:33:33,529
another six instructions but we're

692
00:33:31,819 --> 00:33:36,470
twelve instructions isn't particularly

693
00:33:33,529 --> 00:33:39,470
many to do and what I was going to point

694
00:33:36,470 --> 00:33:41,240
out is at that point we actually have

695
00:33:39,470 --> 00:33:43,660
our answer because the only other thing

696
00:33:41,240 --> 00:33:46,970
we actually need to do with the normal

697
00:33:43,660 --> 00:33:49,070
here is to figure out which element is

698
00:33:46,970 --> 00:33:52,940
the maximum element and 0 the other ones

699
00:33:49,069 --> 00:33:55,069
and change that one to 1 right and the

700
00:33:52,940 --> 00:33:58,580
important thing to realize is we don't

701
00:33:55,069 --> 00:34:01,609
need to do that yet right we don't need

702
00:33:58,579 --> 00:34:04,579
to do that yet at all we can do all of

703
00:34:01,609 --> 00:34:08,119
our collisions and only store this much

704
00:34:04,579 --> 00:34:10,779
because after we've stored this much we

705
00:34:08,119 --> 00:34:10,779
then know

706
00:34:13,170 --> 00:34:19,289
after we've stored this much information

707
00:34:15,139 --> 00:34:22,049
when we oh okay yes thank you

708
00:34:19,289 --> 00:34:22,469
all right fine my brain finally figured

709
00:34:22,050 --> 00:34:26,430
it out

710
00:34:22,469 --> 00:34:28,699
I was like I knew that was too much

711
00:34:26,429 --> 00:34:28,699
information

712
00:34:28,949 --> 00:34:37,519
yes yes yes okay think about the runway

713
00:34:33,769 --> 00:34:39,809
remember we do a bunch of box collisions

714
00:34:37,519 --> 00:34:40,920
right let's say we do like a hundred of

715
00:34:39,809 --> 00:34:42,480
these or something right there could be

716
00:34:40,920 --> 00:34:45,030
a lot of them so we did a ton of box

717
00:34:42,480 --> 00:34:50,429
collisions and then we do like one pro

718
00:34:45,030 --> 00:34:52,890
update with the results so we do like a

719
00:34:50,429 --> 00:34:56,190
ton of these and like one of these right

720
00:34:52,889 --> 00:34:58,559
and so what we're doing here every time

721
00:34:56,190 --> 00:35:02,010
through is we're just storing who was

722
00:34:58,559 --> 00:35:04,259
the best hit and so what we want to do

723
00:35:02,010 --> 00:35:06,930
is push as much of the computation to

724
00:35:04,260 --> 00:35:09,420
the probe update as we can because all

725
00:35:06,929 --> 00:35:11,549
of the box collisions we get a huge

726
00:35:09,420 --> 00:35:13,380
multiplier on those we have to do like

727
00:35:11,550 --> 00:35:15,780
all of this code has to be done for

728
00:35:13,380 --> 00:35:17,010
every box check like all of this code

729
00:35:15,780 --> 00:35:18,630
has to be done for every box check and

730
00:35:17,010 --> 00:35:21,570
all of this code has to be done for

731
00:35:18,630 --> 00:35:23,070
every box hit so as we hit three four or

732
00:35:21,570 --> 00:35:25,440
five boxes and we're just taking the

733
00:35:23,070 --> 00:35:27,240
closest one we're wasting a ton of time

734
00:35:25,440 --> 00:35:28,440
in here if we do anything that we don't

735
00:35:27,239 --> 00:35:30,359
actually have to do well

736
00:35:28,440 --> 00:35:33,000
what's some things we could say about

737
00:35:30,360 --> 00:35:34,710
this look at these equations here look

738
00:35:33,000 --> 00:35:37,920
at what I was saying we needed to do

739
00:35:34,710 --> 00:35:39,960
right I was saying we needed to do

740
00:35:37,920 --> 00:35:42,539
origen plus t direction

741
00:35:39,960 --> 00:35:45,630
right to compute the point we then

742
00:35:42,539 --> 00:35:50,639
needed to subtract that from the center

743
00:35:45,630 --> 00:35:53,280
of the box right and then we needed to

744
00:35:50,639 --> 00:35:55,259
scale that by the inverse box scale so

745
00:35:53,280 --> 00:35:58,800
this whole thing had to have a scale

746
00:35:55,260 --> 00:36:02,130
value on it right but what do we know

747
00:35:58,800 --> 00:36:02,610
about these values that we're looking at

748
00:36:02,130 --> 00:36:08,250
here

749
00:36:02,610 --> 00:36:12,510
you know well this whole equation could

750
00:36:08,250 --> 00:36:15,840
just be done at the end on only the

751
00:36:12,510 --> 00:36:17,970
actual hit so we don't need to do it

752
00:36:15,840 --> 00:36:19,500
every time we could move this whole

753
00:36:17,969 --> 00:36:23,639
computation to the end

754
00:36:19,500 --> 00:36:26,969
why don't we well we don't because it

755
00:36:23,639 --> 00:36:31,619
depends what the sea and the

756
00:36:26,969 --> 00:36:33,719
SR correct you see I'm saying like it

757
00:36:31,619 --> 00:36:35,190
depends what those two values are if we

758
00:36:33,719 --> 00:36:36,839
don't know what those two values are we

759
00:36:35,190 --> 00:36:41,610
can't do the equation at the end so

760
00:36:36,840 --> 00:36:43,410
while we just save those right instead

761
00:36:41,610 --> 00:36:46,800
of computing this equation at all just

762
00:36:43,409 --> 00:36:48,480
save this S&amp;C value and that's it so

763
00:36:46,800 --> 00:36:52,110
instead of doing any computations in

764
00:36:48,480 --> 00:36:55,079
here all we would do is do six selects

765
00:36:52,110 --> 00:36:57,780
and that's the end of it do six selects

766
00:36:55,079 --> 00:36:59,250
to store these values now I don't know

767
00:36:57,780 --> 00:37:15,150
if there's some way to store something

768
00:36:59,250 --> 00:37:15,900
less than six that I don't know I don't

769
00:37:15,150 --> 00:37:17,579
think so

770
00:37:15,900 --> 00:37:26,190
because I think you fundamentally need

771
00:37:17,579 --> 00:37:32,179
an origin in a scale so I think those

772
00:37:26,190 --> 00:37:32,179
selects have to happen regardless right

773
00:37:32,480 --> 00:37:38,670
so we're gonna have to do a lot of

774
00:37:34,619 --> 00:37:43,980
selects that's just the nature of the

775
00:37:38,670 --> 00:37:45,690
beast I think and yeah I don't I don't

776
00:37:43,980 --> 00:37:47,099
see any way around that we're gonna need

777
00:37:45,690 --> 00:37:50,579
to select a color in here as well

778
00:37:47,099 --> 00:37:54,299
probably further reflected for the light

779
00:37:50,579 --> 00:37:57,809
reflection and so you're just gonna have

780
00:37:54,300 --> 00:37:59,550
a ton of selects but that's it you don't

781
00:37:57,809 --> 00:38:02,309
need to do any other math this stuff

782
00:37:59,550 --> 00:38:04,530
doesn't need to happen because it can

783
00:38:02,309 --> 00:38:07,460
just happen outside when you actually

784
00:38:04,530 --> 00:38:11,930
get the result back so like here right

785
00:38:07,460 --> 00:38:15,030
so this is where we can actually do that

786
00:38:11,929 --> 00:38:17,219
finalization work for each individual

787
00:38:15,030 --> 00:38:19,860
array so when we're in here and we do

788
00:38:17,219 --> 00:38:22,649
this any true here really I think this

789
00:38:19,860 --> 00:38:25,740
whole thing can just be like look like

790
00:38:22,650 --> 00:38:28,730
this so instead of normal we just do

791
00:38:25,739 --> 00:38:28,729
like box Center

792
00:38:33,039 --> 00:38:42,130
and like the box in scale and so in here

793
00:38:39,309 --> 00:38:45,279
all we would be doing is just selecting

794
00:38:42,130 --> 00:38:49,800
these out like updating them basically

795
00:38:45,280 --> 00:38:53,980
right and we don't actually need to

796
00:38:49,800 --> 00:38:55,960
compute any values at all so I think

797
00:38:53,980 --> 00:39:03,730
that gets us out of the like expensive

798
00:38:55,960 --> 00:39:07,449
business here entirely which is great so

799
00:39:03,730 --> 00:39:12,820
we already have the Box P that goes in

800
00:39:07,449 --> 00:39:25,480
here I think these are stored like that

801
00:39:12,820 --> 00:39:28,480
right can we select this whole thing can

802
00:39:25,480 --> 00:39:30,490
I do that I don't know if I can do that

803
00:39:28,480 --> 00:39:31,900
or not but I'm hoping if I can't I'll

804
00:39:30,489 --> 00:39:33,099
just write it because it'll be a lot

805
00:39:31,900 --> 00:39:35,160
more efficient to be able to write that

806
00:39:33,099 --> 00:39:35,159
here

807
00:39:37,860 --> 00:39:47,920
well that env radius for now so you can

808
00:39:45,849 --> 00:39:50,829
see that just by doing three selects

809
00:39:47,920 --> 00:39:52,059
here and three selects here I store all

810
00:39:50,829 --> 00:39:53,980
the information I needed I don't need to

811
00:39:52,059 --> 00:39:56,380
do any other computations I can do the

812
00:39:53,980 --> 00:39:59,829
computations at the end on just the

813
00:39:56,380 --> 00:40:02,349
actual like answer that I got which

814
00:39:59,829 --> 00:40:04,480
again eliminates does the minimum amount

815
00:40:02,349 --> 00:40:06,339
of work there I think because that way

816
00:40:04,480 --> 00:40:09,219
we're not computing values that we then

817
00:40:06,340 --> 00:40:10,690
throw away when we get a closer hit so

818
00:40:09,219 --> 00:40:13,329
we're just remembering the information

819
00:40:10,690 --> 00:40:15,579
about the box rather than computing

820
00:40:13,329 --> 00:40:19,420
something and storing that which i think

821
00:40:15,579 --> 00:40:20,980
is better selects are pretty cheap on

822
00:40:19,420 --> 00:40:27,070
modern there's actually a select

823
00:40:20,980 --> 00:40:30,570
instruction in modern X X X 64 I of

824
00:40:27,070 --> 00:40:30,570
course don't remember what it's called

825
00:40:35,659 --> 00:40:39,409
that's called something

826
00:40:51,500 --> 00:41:21,949
it's not called select it's not called

827
00:41:05,269 --> 00:41:23,449
extract oh man blends I forget what they

828
00:41:21,949 --> 00:41:25,429
call it blend blend blend blend blend

829
00:41:23,449 --> 00:41:30,009
sorry about that I just completely

830
00:41:25,429 --> 00:41:32,839
forgot what they called it alright so

831
00:41:30,010 --> 00:41:33,950
let's see where we're at here so this

832
00:41:32,840 --> 00:41:42,230
would be the function we're talking

833
00:41:33,949 --> 00:41:45,639
about blend PS it's SSE 4.1 let's take a

834
00:41:42,230 --> 00:41:45,639
look at where that's at these days

835
00:41:54,510 --> 00:41:59,350
there you go uh so if you take a look at

836
00:41:58,389 --> 00:42:02,859
where that's at

837
00:41:59,349 --> 00:42:04,630
you know 96.5 40 percent of things in

838
00:42:02,860 --> 00:42:07,150
the steam harbor survey at it that's a

839
00:42:04,630 --> 00:42:10,269
pretty solid number you're not knocking

840
00:42:07,150 --> 00:42:11,769
many people out by using it so and

841
00:42:10,269 --> 00:42:13,989
especially about time we ship handmade

842
00:42:11,769 --> 00:42:17,139
here right ammeter is very slow we only

843
00:42:13,989 --> 00:42:20,919
get what four hours of programming every

844
00:42:17,139 --> 00:42:22,179
week by the time we're shipping we could

845
00:42:20,920 --> 00:42:23,650
probably just count on that being

846
00:42:22,179 --> 00:42:27,730
available in most places we're gonna

847
00:42:23,650 --> 00:42:32,800
ship this game uh and so being able to

848
00:42:27,730 --> 00:42:33,789
do blending for either a blend v which i

849
00:42:32,800 --> 00:42:36,130
think is what we actually need because

850
00:42:33,789 --> 00:42:37,449
this this blend this one right here is

851
00:42:36,130 --> 00:42:39,910
an immediate blend which would not

852
00:42:37,449 --> 00:42:44,009
really be what we want we want to blend

853
00:42:39,909 --> 00:42:47,618
based on another value that we compute

854
00:42:44,010 --> 00:42:51,010
and so but this blend v that's like a

855
00:42:47,619 --> 00:42:52,780
single instruction right and it looks

856
00:42:51,010 --> 00:42:55,660
like they don't have for some reason

857
00:42:52,780 --> 00:42:58,330
they don't list the cost of mmm blend v

858
00:42:55,659 --> 00:43:00,069
and i don't know why but that's okay

859
00:42:58,329 --> 00:43:04,029
because obviously we can look it up in

860
00:43:00,070 --> 00:43:07,080
the you ops table so if we do a search

861
00:43:04,030 --> 00:43:12,570
here for that and that's a

862
00:43:07,079 --> 00:43:14,099
I see no what did what did how does this

863
00:43:12,570 --> 00:43:15,410
thing I always get confused about how

864
00:43:14,099 --> 00:43:20,509
this thing works

865
00:43:15,409 --> 00:43:20,509
it's it is SSE instruction though oh

866
00:43:20,570 --> 00:43:27,269
yeah because it's a this is this is not

867
00:43:25,739 --> 00:43:29,759
by intrinsic this is by actual

868
00:43:27,269 --> 00:43:33,269
instruction so we look at the actual

869
00:43:29,760 --> 00:43:35,370
measured cost of this thing you can see

870
00:43:33,269 --> 00:43:38,489
that it's a 2 you opt instruction it

871
00:43:35,369 --> 00:43:41,339
looks like for memory and a 1 new op

872
00:43:38,489 --> 00:43:43,859
instruction regular which is exactly

873
00:43:41,340 --> 00:43:46,980
what you'd expect in our case we would

874
00:43:43,860 --> 00:43:48,870
be in sometimes we'd be from memory

875
00:43:46,980 --> 00:43:51,360
besides we'd be so you know we would use

876
00:43:48,869 --> 00:43:53,519
both of them actually which is fine and

877
00:43:51,360 --> 00:43:56,789
then these are probably fusible to I

878
00:43:53,519 --> 00:43:58,590
would assume I don't actually know I we

879
00:43:56,789 --> 00:44:00,750
look at the actual latency and the

880
00:43:58,590 --> 00:44:03,030
throughput and it's fantastic right I

881
00:44:00,750 --> 00:44:04,260
mean this is like you can issue up to

882
00:44:03,030 --> 00:44:08,780
three of these

883
00:44:04,260 --> 00:44:10,980
per cycle if you want to it looks like

884
00:44:08,780 --> 00:44:12,510
so I don't know how many units they're

885
00:44:10,980 --> 00:44:15,210
on so that yeah you can the issue around

886
00:44:12,510 --> 00:44:18,330
0 1 &amp; 5 so yeah you can these things are

887
00:44:15,210 --> 00:44:19,740
free I guess let me put you that way we

888
00:44:18,329 --> 00:44:21,210
could just do a ton of those so we could

889
00:44:19,739 --> 00:44:23,879
get like 3 of these done in a single

890
00:44:21,210 --> 00:44:25,970
cycle so selecting our box center would

891
00:44:23,880 --> 00:44:28,710
take one cycle right so that's very good

892
00:44:25,969 --> 00:44:30,809
so I think that's all good and we would

893
00:44:28,710 --> 00:44:32,880
just need one thing here which is like a

894
00:44:30,809 --> 00:44:34,679
color value because when we bounce the

895
00:44:32,880 --> 00:44:37,349
light around we want to be able T to

896
00:44:34,679 --> 00:44:40,039
have it bounce around with color and so

897
00:44:37,349 --> 00:44:45,750
that box that we're talking about here

898
00:44:40,039 --> 00:44:47,340
we want to sort of look up in there know

899
00:44:45,750 --> 00:44:51,619
where we actually store those things

900
00:44:47,340 --> 00:44:55,530
waiting box yeah here you go

901
00:44:51,619 --> 00:45:01,519
so the ref see the reflection color

902
00:44:55,530 --> 00:45:05,720
there we want to be able to store that

903
00:45:01,519 --> 00:45:09,659
but that's three cycles in theory right

904
00:45:05,719 --> 00:45:11,489
and you know it depends here whether

905
00:45:09,659 --> 00:45:13,589
these are in the cache or not but they

906
00:45:11,489 --> 00:45:15,750
should be because they're right with the

907
00:45:13,590 --> 00:45:17,280
other information we've gathered so this

908
00:45:15,750 --> 00:45:19,980
is on the same cache line is what we

909
00:45:17,280 --> 00:45:20,790
already fetched so presumably it's just

910
00:45:19,980 --> 00:45:23,010
going to be like

911
00:45:20,789 --> 00:45:25,650
pretty much free to do this this looks

912
00:45:23,010 --> 00:45:27,030
really good right so I think that's

913
00:45:25,650 --> 00:45:29,820
great that would be pretty

914
00:45:27,030 --> 00:45:31,440
straightforward it's simple and it

915
00:45:29,820 --> 00:45:33,720
Whittle that I think that will allow us

916
00:45:31,440 --> 00:45:35,760
to do things much more quickly so if we

917
00:45:33,719 --> 00:45:47,219
got rid of those and we just went with

918
00:45:35,760 --> 00:45:51,030
this I think that gives us everything we

919
00:45:47,219 --> 00:45:53,699
need for our values to come back I don't

920
00:45:51,030 --> 00:45:58,410
know what the hit value actually is

921
00:45:53,699 --> 00:46:00,809
therefore because it feels like that's

922
00:45:58,409 --> 00:46:06,659
something that you could just use tear a

923
00:46:00,809 --> 00:46:11,039
four on the end so I kind of want to say

924
00:46:06,659 --> 00:46:14,460
that that this feels wasted to me right

925
00:46:11,039 --> 00:46:17,849
I feel like we don't need to store this

926
00:46:14,460 --> 00:46:20,519
hit value because at the end when we're

927
00:46:17,849 --> 00:46:22,980
actually using these we don't need a

928
00:46:20,519 --> 00:46:25,139
boolean for the hit value we can just

929
00:46:22,980 --> 00:46:28,230
compare the t-ray and see if it's ever

930
00:46:25,139 --> 00:46:30,960
been updated so like when we plug the T

931
00:46:28,230 --> 00:46:35,070
ray in here when we first started out

932
00:46:30,960 --> 00:46:39,059
right so this thing here when we do our

933
00:46:35,070 --> 00:46:44,250
ray or gin bit right so when we start

934
00:46:39,059 --> 00:46:47,730
the raycast that the T ray it's set to F

935
00:46:44,250 --> 00:46:50,340
32 Max and so all we have to do to

936
00:46:47,730 --> 00:46:54,449
compute our hit value is just compare it

937
00:46:50,340 --> 00:46:56,820
back to F 32 max right so what we should

938
00:46:54,449 --> 00:46:59,819
be able to do here is at the end of this

939
00:46:56,820 --> 00:47:01,410
this is just dumb on our part there was

940
00:46:59,820 --> 00:47:04,110
really no reason for us to do what we

941
00:47:01,409 --> 00:47:07,199
did we just weren't thinking that day

942
00:47:04,110 --> 00:47:10,559
this hit value that we returned can just

943
00:47:07,199 --> 00:47:12,809
be a comparison with F 32 max meaning if

944
00:47:10,559 --> 00:47:16,440
it's equal to F 32 max then it didn't

945
00:47:12,809 --> 00:47:19,610
hit right so what we want to do is just

946
00:47:16,440 --> 00:47:19,610
say something like this

947
00:47:25,489 --> 00:47:32,779
if the tea hit is not equal to f3 to max

948
00:47:29,389 --> 00:47:34,639
then it's a positive right and so that

949
00:47:32,780 --> 00:47:36,110
gets us out of this business here

950
00:47:34,639 --> 00:47:40,219
because I don't think we ever actually

951
00:47:36,110 --> 00:47:43,130
need that right look we just don't care

952
00:47:40,219 --> 00:47:45,289
about that at all so I'm pretty sure we

953
00:47:43,130 --> 00:47:47,030
can get rid of that value and as long as

954
00:47:45,289 --> 00:47:53,210
it's never used anywhere in here which I

955
00:47:47,030 --> 00:47:55,340
don't think it is right then I think

956
00:47:53,210 --> 00:48:05,000
we're fine I'm sorry it's not tea hits T

957
00:47:55,340 --> 00:48:08,960
ray Yeah right

958
00:48:05,000 --> 00:48:11,239
so that gets even less work that makes

959
00:48:08,960 --> 00:48:14,420
even less work get done in here and so

960
00:48:11,239 --> 00:48:16,369
now we're just selecting using that same

961
00:48:14,420 --> 00:48:18,470
selection mask we're just storing the

962
00:48:16,369 --> 00:48:22,219
information and we're letting the

963
00:48:18,469 --> 00:48:24,439
outside code do all of the work for us

964
00:48:22,219 --> 00:48:26,929
right and that's exactly what we want

965
00:48:24,440 --> 00:48:29,510
here now there's another thing we could

966
00:48:26,929 --> 00:48:31,009
do here which is we could just not store

967
00:48:29,510 --> 00:48:33,410
the box Center in the envy radius

968
00:48:31,010 --> 00:48:35,810
because now that I think about it since

969
00:48:33,409 --> 00:48:40,009
the raycast doesn't actually you know we

970
00:48:35,809 --> 00:48:45,980
can actually not do this we can actually

971
00:48:40,010 --> 00:48:48,200
have this come back with the normal if

972
00:48:45,980 --> 00:48:51,860
we want because we could do that here

973
00:48:48,199 --> 00:48:58,129
right so what we could do is is store

974
00:48:51,860 --> 00:49:02,599
like the hit version here right so these

975
00:48:58,130 --> 00:49:05,840
things and what we could do is just say

976
00:49:02,599 --> 00:49:09,769
look these are gonna be whatever you

977
00:49:05,840 --> 00:49:17,090
know and when we come through cure we're

978
00:49:09,769 --> 00:49:19,280
gonna update them like so and then when

979
00:49:17,090 --> 00:49:21,079
we get to the end we will actually do

980
00:49:19,280 --> 00:49:22,700
that computation that I was like we were

981
00:49:21,079 --> 00:49:24,650
gonna do on the outside we could do it

982
00:49:22,699 --> 00:49:26,480
in here and I think that's better and

983
00:49:24,650 --> 00:49:29,150
the reason is because this is the code

984
00:49:26,480 --> 00:49:30,860
that actually knows what it's doing

985
00:49:29,150 --> 00:49:32,990
so it you know the it doesn't have to

986
00:49:30,860 --> 00:49:35,180
return special information back that the

987
00:49:32,989 --> 00:49:36,568
caller has to kind of let go what was

988
00:49:35,179 --> 00:49:40,798
this for again

989
00:49:36,568 --> 00:49:44,099
so we can do this stuff here right we

990
00:49:40,798 --> 00:49:47,639
can just say all right let's do the

991
00:49:44,099 --> 00:49:49,859
computations we computed the best

992
00:49:47,639 --> 00:49:53,129
versions of the box center of the box in

993
00:49:49,858 --> 00:49:58,369
rear a radius right so I guess I'll call

994
00:49:53,130 --> 00:50:02,759
the it's like hit to differentiate them

995
00:49:58,369 --> 00:50:05,068
right like that and so once we get that

996
00:50:02,759 --> 00:50:08,179
information now we can do this stuff

997
00:50:05,068 --> 00:50:12,179
cleanly right we know what the origin is

998
00:50:08,179 --> 00:50:13,650
we know what our result T ray is and we

999
00:50:12,179 --> 00:50:16,199
know the Raider action so we can do all

1000
00:50:13,650 --> 00:50:21,869
that strict out across each do we even

1001
00:50:16,199 --> 00:50:23,188
need to return the T ray at all I don't

1002
00:50:21,869 --> 00:50:29,900
think we do

1003
00:50:23,188 --> 00:50:35,478
we could just return the point actually

1004
00:50:29,900 --> 00:50:42,719
so I feel like maybe this recast result

1005
00:50:35,478 --> 00:50:44,098
could actually also just be this because

1006
00:50:42,719 --> 00:50:47,849
that way that's the actual value that

1007
00:50:44,099 --> 00:50:50,039
the person wants so maybe we'll do that

1008
00:50:47,849 --> 00:50:52,798
furthermore like this result here like

1009
00:50:50,039 --> 00:50:54,479
this bit I feel like we just want to now

1010
00:50:52,798 --> 00:50:59,969
get this out of here so we would we

1011
00:50:54,478 --> 00:51:00,868
would say something like this and

1012
00:50:59,969 --> 00:51:11,099
compute that here

1013
00:51:00,869 --> 00:51:13,019
so our T ray value it's just a local

1014
00:51:11,099 --> 00:51:15,390
right it's not accessing off of anything

1015
00:51:13,018 --> 00:51:18,958
and then when we come through here and

1016
00:51:15,389 --> 00:51:22,618
we're doing our selection takes on that

1017
00:51:18,958 --> 00:51:25,139
we just do this and everything else

1018
00:51:22,619 --> 00:51:25,858
stays the same I think that's what we

1019
00:51:25,139 --> 00:51:30,658
want

1020
00:51:25,858 --> 00:51:33,119
missed one like so and then we just fill

1021
00:51:30,659 --> 00:51:34,919
them out here so we fill out the hip by

1022
00:51:33,119 --> 00:51:38,338
looking at T array and seeing which ones

1023
00:51:34,918 --> 00:51:43,400
with them got updated we fill out the

1024
00:51:38,338 --> 00:51:43,400
normal the ref color

1025
00:51:45,429 --> 00:51:57,559
and this is just us packing this crap

1026
00:51:48,500 --> 00:51:59,000
back up so we just fill these out and we

1027
00:51:57,559 --> 00:52:07,820
just need to solve for these other

1028
00:51:59,000 --> 00:52:16,519
pieces here all right so let's actually

1029
00:52:07,820 --> 00:52:18,680
solve for the dupes for the hit P we

1030
00:52:16,519 --> 00:52:20,840
know it's just this equation we said

1031
00:52:18,679 --> 00:52:22,940
before that's the location that the

1032
00:52:20,840 --> 00:52:26,090
intersection actually occurred based on

1033
00:52:22,940 --> 00:52:28,070
our solve again using the T value to

1034
00:52:26,090 --> 00:52:29,240
move us from the Ray origin along the

1035
00:52:28,070 --> 00:52:32,000
Ray direction to the point of

1036
00:52:29,239 --> 00:52:34,250
intersection we then can give youth the

1037
00:52:32,000 --> 00:52:37,789
unscaled direction by taking whatever

1038
00:52:34,250 --> 00:52:42,349
our hip P was and subtracting the hitbox

1039
00:52:37,789 --> 00:52:44,509
center again this is doing this for four

1040
00:52:42,349 --> 00:52:48,349
rays at a time so we're actually

1041
00:52:44,510 --> 00:52:52,970
creating four intersection points and

1042
00:52:48,349 --> 00:52:56,630
doing four centers right we then need to

1043
00:52:52,969 --> 00:52:59,659
scale these by the best boxes envious

1044
00:52:56,630 --> 00:53:01,760
inverse radius so we're effectively

1045
00:52:59,659 --> 00:53:04,039
doing this Hadamard product here to

1046
00:53:01,760 --> 00:53:06,859
scale the unscaled result that we get

1047
00:53:04,039 --> 00:53:09,380
back and then what we need to do to

1048
00:53:06,858 --> 00:53:13,098
select our normal is we now need to use

1049
00:53:09,380 --> 00:53:16,309
an element minimum and maximum to

1050
00:53:13,099 --> 00:53:21,470
effectively say let's take the highest

1051
00:53:16,309 --> 00:53:24,679
whatever the highest one is we'll keep

1052
00:53:21,469 --> 00:53:27,529
that one and the rest we want to remove

1053
00:53:24,679 --> 00:53:33,440
now this could be kind of painful to do

1054
00:53:27,530 --> 00:53:35,780
and so that's why I wanted to move it to

1055
00:53:33,440 --> 00:53:37,820
the end I don't want to do it every time

1056
00:53:35,780 --> 00:53:39,619
we hit because we might have five six

1057
00:53:37,820 --> 00:53:42,039
seven eight ten who knows how many hits

1058
00:53:39,619 --> 00:53:44,869
we could have a lot of hits in here I

1059
00:53:42,039 --> 00:53:49,639
only want to do it for the final one so

1060
00:53:44,869 --> 00:53:51,530
once per raycast and only once per red

1061
00:53:49,639 --> 00:53:54,379
cast if we cast ten thousand rays we do

1062
00:53:51,530 --> 00:53:55,550
ten thousand of these rather than 50,000

1063
00:53:54,380 --> 00:53:57,970
of these a hundred thousand of these

1064
00:53:55,550 --> 00:54:00,140
right because it's gonna be expensive

1065
00:53:57,969 --> 00:54:01,368
all right so figuring out what we've got

1066
00:54:00,139 --> 00:54:04,159
to work with here

1067
00:54:01,369 --> 00:54:07,010
I don't know that in sse we would have

1068
00:54:04,159 --> 00:54:09,980
the ability to take element mins and

1069
00:54:07,010 --> 00:54:13,849
maxes so we're pretty much going to be

1070
00:54:09,980 --> 00:54:18,318
restricted i believe just using the mins

1071
00:54:13,849 --> 00:54:22,579
and maxes of the like comparison wise

1072
00:54:18,318 --> 00:54:24,170
right and so this is a pretty that's why

1073
00:54:22,579 --> 00:54:26,869
this is a pretty tough thing to do right

1074
00:54:24,170 --> 00:54:31,369
we don't know fundamentally speaking we

1075
00:54:26,869 --> 00:54:32,720
just don't know which one of these is

1076
00:54:31,369 --> 00:54:34,309
going to be minimum which one that's

1077
00:54:32,719 --> 00:54:37,009
gonna be maximum and that's we can't

1078
00:54:34,309 --> 00:54:38,838
look inside the elements that's why you

1079
00:54:37,010 --> 00:54:41,180
can see here like we had to do this

1080
00:54:38,838 --> 00:54:43,489
before right you can see how we had to

1081
00:54:41,179 --> 00:54:46,969
do like a series of mins and maxes to

1082
00:54:43,489 --> 00:54:48,318
figure out which one was going to

1083
00:54:46,969 --> 00:54:49,789
actually be the minimum or the maximum

1084
00:54:48,318 --> 00:54:52,519
and we're gonna have to do something

1085
00:54:49,789 --> 00:55:01,789
similar here because there's no way to

1086
00:54:52,519 --> 00:55:04,159
compute there's no way for us to what am

1087
00:55:01,789 --> 00:55:08,150
i trying to say we don't have a single

1088
00:55:04,159 --> 00:55:12,379
instruction that looks at the elements

1089
00:55:08,150 --> 00:55:14,329
of a particular vector and finds which

1090
00:55:12,380 --> 00:55:18,410
one is minimum or which one is maximum

1091
00:55:14,329 --> 00:55:20,990
right oh but we're by Ray though so

1092
00:55:18,409 --> 00:55:22,639
that's actually okay nevermind we're

1093
00:55:20,989 --> 00:55:23,929
four wide by Ray so it doesn't matter

1094
00:55:22,639 --> 00:55:24,769
we're actually just gonna do what we

1095
00:55:23,929 --> 00:55:28,429
would normally do

1096
00:55:24,769 --> 00:55:30,739
alright so that's fine never mind take

1097
00:55:28,429 --> 00:55:34,098
back everything I just said we're by Ray

1098
00:55:30,739 --> 00:55:35,779
I was thinking we had the x y&amp;z packed

1099
00:55:34,099 --> 00:55:37,460
into a single sim deregister where we

1100
00:55:35,780 --> 00:55:40,010
don't so we're we actually we planned

1101
00:55:37,460 --> 00:55:42,019
ahead all right so what we want to do

1102
00:55:40,010 --> 00:55:44,180
now is take a look at that scale D and

1103
00:55:42,019 --> 00:55:45,980
what we want to do is say something you

1104
00:55:44,179 --> 00:55:50,059
know we effectively want to compute this

1105
00:55:45,980 --> 00:55:58,250
right we want to say if the you know if

1106
00:55:50,059 --> 00:55:59,900
the absolute value of scaled DX is

1107
00:55:58,250 --> 00:56:04,389
greater than the absolute value of scale

1108
00:55:59,900 --> 00:56:04,389
D Y you know then

1109
00:56:04,510 --> 00:56:12,619
pick X else pick Y right and then we

1110
00:56:10,608 --> 00:56:15,679
want to do the same thing again right we

1111
00:56:12,619 --> 00:56:19,309
want to do like if the absolute value

1112
00:56:15,679 --> 00:56:25,429
the pick thing is creating the absolute

1113
00:56:19,309 --> 00:56:29,029
value of Z then you know guess we want

1114
00:56:25,429 --> 00:56:31,338
to do that something like this right and

1115
00:56:29,030 --> 00:56:33,500
we could change this pretty easily into

1116
00:56:31,338 --> 00:56:37,940
something that just starts with the

1117
00:56:33,500 --> 00:56:40,429
first one so like it assumes that it's

1118
00:56:37,940 --> 00:56:43,159
got you know a particular value and then

1119
00:56:40,429 --> 00:56:45,230
just does checks to see if it should

1120
00:56:43,159 --> 00:56:46,818
update that value that's probably the

1121
00:56:45,230 --> 00:56:49,400
simplest way to write it well write it

1122
00:56:46,818 --> 00:56:51,800
that way first and we'll see what

1123
00:56:49,400 --> 00:56:54,230
happens so we know we want to compute a

1124
00:56:51,800 --> 00:56:57,410
hit normal and what we can do here is we

1125
00:56:54,230 --> 00:57:01,179
can say well we know that the hit normal

1126
00:56:57,409 --> 00:57:06,889
probably just wants to be set to

1127
00:57:01,179 --> 00:57:14,750
something like this I guess we don't

1128
00:57:06,889 --> 00:57:20,719
really know the sign of what we're

1129
00:57:14,750 --> 00:57:24,500
looking at here do we have sign as an

1130
00:57:20,719 --> 00:57:27,289
operator I want to look at where we talk

1131
00:57:24,500 --> 00:57:37,880
about these do we have sign in here

1132
00:57:27,289 --> 00:57:40,880
anywhere we don't this is a place where

1133
00:57:37,880 --> 00:57:43,160
the floating-point format having a sign

1134
00:57:40,880 --> 00:57:44,660
bit can be very useful to us so we want

1135
00:57:43,159 --> 00:57:46,219
to talk about the sign very explicitly

1136
00:57:44,659 --> 00:57:51,529
here because we can get speed winds

1137
00:57:46,219 --> 00:57:54,949
there the reason for that is because we

1138
00:57:51,530 --> 00:57:57,440
know that the sign bit the high bit 31

1139
00:57:54,949 --> 00:57:59,719
bit of the floating-point value is the

1140
00:57:57,440 --> 00:58:02,269
positive or negative sign is the thing

1141
00:57:59,719 --> 00:58:04,818
that tells us what that is and so we can

1142
00:58:02,269 --> 00:58:06,469
make sure that we always just directly

1143
00:58:04,818 --> 00:58:07,969
use that instead of having do any

1144
00:58:06,469 --> 00:58:09,858
comparisons there so our absolute value

1145
00:58:07,969 --> 00:58:11,750
is just going to be an and with a mass

1146
00:58:09,858 --> 00:58:16,039
that gets rid of the sign bit that's all

1147
00:58:11,750 --> 00:58:18,429
we actually have to do right in fact did

1148
00:58:16,039 --> 00:58:18,429
we ever do that

1149
00:58:20,630 --> 00:58:27,960
yeah so you can see here our absolute

1150
00:58:24,420 --> 00:58:30,269
value function does this exact thing we

1151
00:58:27,960 --> 00:58:34,079
just don't have a sign extraction but

1152
00:58:30,268 --> 00:58:36,058
it'd be the same right the sign

1153
00:58:34,079 --> 00:58:39,920
extraction would be in and with with

1154
00:58:36,059 --> 00:58:43,319
just this instead of the notthis right

1155
00:58:39,920 --> 00:58:47,190
so be pretty easy for us to copy the

1156
00:58:43,318 --> 00:58:56,869
sign of something for example you would

1157
00:58:47,190 --> 00:58:58,108
just have you know something like this

1158
00:58:56,869 --> 00:59:00,930
right

1159
00:58:58,108 --> 00:59:03,210
and so all you're doing there is anding

1160
00:59:00,929 --> 00:59:05,509
out all of the data of the floating

1161
00:59:03,210 --> 00:59:07,409
point and just keeping the sign bit

1162
00:59:05,509 --> 00:59:09,679
absolute values the opposite operation

1163
00:59:07,409 --> 00:59:12,179
you're anding out everything that's

1164
00:59:09,679 --> 00:59:15,629
you're adding out just the sign bit and

1165
00:59:12,179 --> 00:59:16,889
leaving all the data right and so you

1166
00:59:15,630 --> 00:59:18,749
know it's it's pretty straightforward

1167
00:59:16,889 --> 00:59:21,268
what happens here it's very very simple

1168
00:59:18,748 --> 00:59:22,768
but you you can see why we would want

1169
00:59:21,268 --> 00:59:24,748
both of them this one allows us to

1170
00:59:22,768 --> 00:59:27,689
extract that sign bit which allows us to

1171
00:59:24,748 --> 00:59:29,848
or it back in later to create a sign

1172
00:59:27,690 --> 00:59:31,559
that matches some other sign and

1173
00:59:29,849 --> 00:59:33,298
absolute value is just the opposite

1174
00:59:31,559 --> 00:59:36,269
thing it's just destroy that sign bit so

1175
00:59:33,298 --> 00:59:39,838
that no one has to worry whether things

1176
00:59:36,268 --> 00:59:42,419
are negative okay so what do we want to

1177
00:59:39,838 --> 00:59:44,940
actually do here well I guess what I'm

1178
00:59:42,420 --> 00:59:49,200
suggesting is we want to do something

1179
00:59:44,940 --> 00:59:53,429
like well time here but we want to do

1180
00:59:49,199 --> 00:59:57,679
something like this where we have a like

1181
00:59:53,429 --> 01:00:02,909
a Y mask or something and a Z mass and

1182
00:59:57,679 --> 01:00:07,409
what we can do here is say if we were to

1183
01:00:02,909 --> 01:00:10,409
compute the comparison of like the X and

1184
01:00:07,409 --> 01:00:17,190
the y right so let's say I was to look

1185
01:00:10,409 --> 01:00:19,228
at scaled D itself and say look if you

1186
01:00:17,190 --> 01:00:20,940
know the or maybe I wanted the other way

1187
01:00:19,228 --> 01:00:23,248
around if the y value is greater than

1188
01:00:20,940 --> 01:00:27,869
the x value I want to take the Y value

1189
01:00:23,248 --> 01:00:31,019
right and then I want to say well if

1190
01:00:27,869 --> 01:00:33,420
this scale D

1191
01:00:31,019 --> 01:00:40,619
result value or whatever the best value

1192
01:00:33,420 --> 01:00:42,630
was so if the best value i if our Z is

1193
01:00:40,619 --> 01:00:46,650
better than whichever one ended up being

1194
01:00:42,630 --> 01:00:50,970
greater of these two then I want to mask

1195
01:00:46,650 --> 01:00:53,070
in the Z for the normal right and then I

1196
01:00:50,969 --> 01:00:55,500
want to take the sign bit and I want to

1197
01:00:53,070 --> 01:00:56,670
shove the sign bit in there that's

1198
01:00:55,500 --> 01:01:03,329
basically what we're talking about

1199
01:00:56,670 --> 01:01:06,030
right okay so how do we do that well in

1200
01:01:03,329 --> 01:01:08,579
this particular case for the Y mask we

1201
01:01:06,030 --> 01:01:11,400
just need to pick whether we want Y or X

1202
01:01:08,579 --> 01:01:16,219
to start with right like which one of

1203
01:01:11,400 --> 01:01:20,010
those two do we want to actually use so

1204
01:01:16,219 --> 01:01:23,429
figuring out whether you use Y or X is

1205
01:01:20,010 --> 01:01:26,370
going to be is just going to be this and

1206
01:01:23,429 --> 01:01:30,839
so if I want to do an a select now I

1207
01:01:26,369 --> 01:01:37,679
should be able to do that by selecting X

1208
01:01:30,840 --> 01:01:41,190
or Y based on that value right let's

1209
01:01:37,679 --> 01:01:44,279
actually compute all these so we can see

1210
01:01:41,190 --> 01:01:46,260
which one which ones are which and then

1211
01:01:44,280 --> 01:01:47,310
because I mean I guess I'm just trying

1212
01:01:46,260 --> 01:01:48,930
to work this out in my head and it's not

1213
01:01:47,309 --> 01:01:50,730
going well so I kind of just want to

1214
01:01:48,929 --> 01:01:52,349
type it out because there's enough of

1215
01:01:50,730 --> 01:02:00,000
these in there that I'm just kind of

1216
01:01:52,349 --> 01:02:02,639
yeah let's do it like this let's work

1217
01:02:00,000 --> 01:02:06,059
backwards from the Select we know we're

1218
01:02:02,639 --> 01:02:10,230
going to have to select a 1 or 0 into

1219
01:02:06,059 --> 01:02:13,409
each of these right so we've got an X

1220
01:02:10,230 --> 01:02:15,840
mask a Y mask and a Z mask that's going

1221
01:02:13,409 --> 01:02:18,179
to select into our hit normal either a 1

1222
01:02:15,840 --> 01:02:25,170
or a 0 presumably something like this

1223
01:02:18,179 --> 01:02:28,369
right I and so if we have to do that it

1224
01:02:25,170 --> 01:02:28,369
would look like this

1225
01:02:30,679 --> 01:02:38,399
so for each array which that's what our

1226
01:02:34,469 --> 01:02:40,679
for white is the channel of the X mask

1227
01:02:38,400 --> 01:02:43,920
will be 1 if it's supposed to be 1 or 0

1228
01:02:40,679 --> 01:02:45,808
if it's supposed to be 0 right

1229
01:02:43,920 --> 01:02:49,289
and so we can select that floating-point

1230
01:02:45,809 --> 01:02:52,559
value in there based on which one we

1231
01:02:49,289 --> 01:02:55,528
want now it's worth noting that the X

1232
01:02:52,559 --> 01:02:59,099
mask will actually just be 0 correctly

1233
01:02:55,528 --> 01:03:01,679
and so really you might say looking at

1234
01:02:59,099 --> 01:03:04,410
this we don't really need a select

1235
01:03:01,679 --> 01:03:07,288
because all we really need to do is

1236
01:03:04,409 --> 01:03:10,710
knock out so we can actually do this

1237
01:03:07,289 --> 01:03:13,170
with an ending instruction because the

1238
01:03:10,710 --> 01:03:16,440
s-max will already be 0 where we need 0

1239
01:03:13,170 --> 01:03:19,440
and 0 in binary is 0 in floating-point

1240
01:03:16,440 --> 01:03:24,809
so we can just let that clear the

1241
01:03:19,440 --> 01:03:26,460
channel for us right furthermore we can

1242
01:03:24,809 --> 01:03:29,099
do the same thing for each of these

1243
01:03:26,460 --> 01:03:31,318
because they're the same operation so we

1244
01:03:29,099 --> 01:03:34,430
pretty much know that all we need to do

1245
01:03:31,318 --> 01:03:36,900
is is compute our channel mask and then

1246
01:03:34,429 --> 01:03:39,719
putting the one in place becomes pretty

1247
01:03:36,900 --> 01:03:42,059
trivial now it's not quite as easy as I

1248
01:03:39,719 --> 01:03:43,709
made it look the reason for that is that

1249
01:03:42,059 --> 01:03:45,930
these ones are not going in the correct

1250
01:03:43,710 --> 01:03:50,849
direction so we do need to or in our

1251
01:03:45,929 --> 01:03:51,868
sign bit here to make sure that it

1252
01:03:50,849 --> 01:03:53,910
points in the correct direction

1253
01:03:51,869 --> 01:03:56,670
now I could or it in on each one and

1254
01:03:53,909 --> 01:03:59,788
then mask it out but if we were being

1255
01:03:56,670 --> 01:04:03,778
super cheeky right if we're just being

1256
01:03:59,789 --> 01:04:06,390
real sly so-and-so's here we could

1257
01:04:03,778 --> 01:04:09,000
recognize the fact that for all intents

1258
01:04:06,389 --> 01:04:10,889
and purposes what we're gonna be doing

1259
01:04:09,000 --> 01:04:14,009
with the normal is just taking a dot

1260
01:04:10,889 --> 01:04:16,528
product with it the dot product of any

1261
01:04:14,009 --> 01:04:18,809
component with 0 whether the 0 is

1262
01:04:16,528 --> 01:04:20,849
positive or negative won't matter

1263
01:04:18,809 --> 01:04:23,880
because the 0 will knock out the actual

1264
01:04:20,849 --> 01:04:26,068
contribution of that value so I'm gonna

1265
01:04:23,880 --> 01:04:31,858
argue that we can actually just take the

1266
01:04:26,068 --> 01:04:32,969
hit normal well and actually now think

1267
01:04:31,858 --> 01:04:36,619
about it since we'd have to do it for

1268
01:04:32,969 --> 01:04:39,328
each one forget everything I just said

1269
01:04:36,619 --> 01:04:42,079
we might as well just do it on the one

1270
01:04:39,329 --> 01:04:42,079
in mind

1271
01:04:43,480 --> 01:04:49,880
because then we're gonna have to do one

1272
01:04:45,650 --> 01:04:53,240
or for each channel now that I think

1273
01:04:49,880 --> 01:04:56,390
about it so it pretty much doesn't

1274
01:04:53,239 --> 01:05:05,179
matter right so what we can do is just

1275
01:04:56,389 --> 01:05:13,609
say look sign one value I guess do it

1276
01:05:05,179 --> 01:05:16,009
this way there we go so prepare a signed

1277
01:05:13,610 --> 01:05:20,120
one value the sign one value is just

1278
01:05:16,010 --> 01:05:21,770
saying take the sign bit from our scaled

1279
01:05:20,119 --> 01:05:23,019
value because this is the direction we

1280
01:05:21,769 --> 01:05:26,090
know everything is supposed to point

1281
01:05:23,019 --> 01:05:29,239
take the sign bit from that or it with a

1282
01:05:26,090 --> 01:05:31,460
1 value and then that is the thing that

1283
01:05:29,239 --> 01:05:34,069
we want to put into our normal anywhere

1284
01:05:31,460 --> 01:05:38,000
where the mask comes out in favor of

1285
01:05:34,070 --> 01:05:40,039
this particular component right all

1286
01:05:38,000 --> 01:05:43,489
right so then we just need to actually

1287
01:05:40,039 --> 01:05:48,559
compute our masking values what we want

1288
01:05:43,489 --> 01:05:55,250
to do is start by saying look the X mask

1289
01:05:48,559 --> 01:05:57,949
is just the combination of you know

1290
01:05:55,250 --> 01:06:00,650
these values it's basically saying look

1291
01:05:57,949 --> 01:06:03,889
if the scale D X is less than the scale

1292
01:06:00,650 --> 01:06:10,670
D Y and the scale D X is less than scale

1293
01:06:03,889 --> 01:06:12,289
D Z then it's you know it's the it's the

1294
01:06:10,670 --> 01:06:15,500
X component that we want it's less than

1295
01:06:12,289 --> 01:06:22,489
both of them and we can do the same

1296
01:06:15,500 --> 01:06:28,179
thing for each of our masks so in this

1297
01:06:22,489 --> 01:06:28,179
case we just want to do

1298
01:06:34,809 --> 01:06:40,089
this all I could do the ex first time I

1299
01:06:40,869 --> 01:06:48,588
am yeah like looking at how those are

1300
01:06:46,039 --> 01:06:52,999
computed you need to do to comparison

1301
01:06:48,588 --> 01:06:54,798
one and since we know these are all

1302
01:06:52,998 --> 01:06:58,368
coming out with masks this is can just

1303
01:06:54,798 --> 01:06:59,989
be a binary end right it doesn't have we

1304
01:06:58,369 --> 01:07:03,650
don't need any kind of logical anding

1305
01:06:59,989 --> 01:07:06,670
here so we do two comparisons and one

1306
01:07:03,650 --> 01:07:09,108
and per channel that's pretty cheap

1307
01:07:06,670 --> 01:07:11,150
there might be some way to make that

1308
01:07:09,108 --> 01:07:12,768
even cheaper because when we do these

1309
01:07:11,150 --> 01:07:16,930
comparisons we've already got some

1310
01:07:12,768 --> 01:07:24,828
information that we could probably reuse

1311
01:07:16,929 --> 01:07:26,748
so I'll put to do in here because there

1312
01:07:24,829 --> 01:07:29,210
might be but at the moment it's still

1313
01:07:26,748 --> 01:07:31,868
really cheap right and since all we have

1314
01:07:29,210 --> 01:07:36,889
to do is just this one thing at the end

1315
01:07:31,869 --> 01:07:39,048
seems pretty good right so again that

1316
01:07:36,889 --> 01:07:41,449
ended up being a pretty nice concise way

1317
01:07:39,048 --> 01:07:43,548
to do that hopefully but also remember

1318
01:07:41,449 --> 01:07:45,679
we've moved it out of the hot area of

1319
01:07:43,548 --> 01:07:47,630
the code so it's even cheaper because

1320
01:07:45,679 --> 01:07:53,659
we're just not doing it very much which

1321
01:07:47,630 --> 01:07:56,650
is great right what is the problem here

1322
01:07:53,659 --> 01:08:00,038
I don't know what the problem is here

1323
01:07:56,650 --> 01:08:00,039
probably that

1324
01:08:04,039 --> 01:08:15,179
Hiep bucks in scale yep so we don't

1325
01:08:12,688 --> 01:08:20,759
store those in radiuses I don't think so

1326
01:08:15,179 --> 01:08:22,588
we're gonna have to add those the ref C

1327
01:08:20,759 --> 01:08:23,849
is in there but the in radius isn't so

1328
01:08:22,588 --> 01:08:27,000
that's one thing that's gonna have to

1329
01:08:23,849 --> 01:08:28,199
get in there let's take a look at these

1330
01:08:27,000 --> 01:08:33,929
so do we probably don't have a how to

1331
01:08:28,198 --> 01:08:35,808
Marge product yeah we don't so we're

1332
01:08:33,929 --> 01:08:39,630
gonna have to add a hat of our product

1333
01:08:35,809 --> 01:08:51,650
sign bit from is complaining but I'm not

1334
01:08:39,630 --> 01:08:51,650
sure why ah so I lied

1335
01:08:57,288 --> 01:09:08,488
since we have one per channel right x

1336
01:09:01,679 --> 01:09:10,949
y&amp;z I don't know we may have to extract

1337
01:09:08,488 --> 01:09:16,379
the sign bit separately from each one

1338
01:09:10,948 --> 01:09:25,198
right which doesn't seem great that

1339
01:09:16,380 --> 01:09:28,159
costs more to do but I'm not sure

1340
01:09:25,198 --> 01:09:28,158
there's any way around it

1341
01:09:33,788 --> 01:09:41,429
yeah I don't think there is just gonna

1342
01:09:37,809 --> 01:09:43,869
look like this sorry guys

1343
01:09:41,429 --> 01:09:45,489
thought I was being clever wasn't really

1344
01:09:43,868 --> 01:09:47,858
clever it's always hard whenever I do

1345
01:09:45,488 --> 01:09:50,618
Cindy I get confused by lanes versus

1346
01:09:47,859 --> 01:09:51,609
elements of vectors my brain doesn't

1347
01:09:50,618 --> 01:09:54,750
like that very much

1348
01:09:51,609 --> 01:09:56,590
and it makes that same mistake a lot

1349
01:09:54,750 --> 01:09:58,328
fortunately it doesn't really matter the

1350
01:09:56,590 --> 01:10:02,550
compiler will catch it for you but it's

1351
01:09:58,328 --> 01:10:07,328
still kind of annoying right we've got a

1352
01:10:02,550 --> 01:10:09,779
unbalanced if zero here somewhere not

1353
01:10:07,328 --> 01:10:09,779
sure where

1354
01:10:17,270 --> 01:10:30,500
right here alright so let's take a look

1355
01:10:27,020 --> 01:10:32,990
at what we actually need here so we've

1356
01:10:30,500 --> 01:10:35,149
got a select that's complaining but I

1357
01:10:32,989 --> 01:10:42,590
think that's just because in this

1358
01:10:35,149 --> 01:10:44,719
particular case the hit ref color like

1359
01:10:42,590 --> 01:10:46,760
this select only works on the members of

1360
01:10:44,720 --> 01:10:50,150
this so we probably want one that

1361
01:10:46,760 --> 01:10:51,590
distributes out to all three but the

1362
01:10:50,149 --> 01:10:53,479
bigger thing is we don't have an

1363
01:10:51,590 --> 01:10:55,369
invidious right now so basically like

1364
01:10:53,479 --> 01:10:57,529
our select function you can see we've

1365
01:10:55,369 --> 01:10:59,869
only got this one here what we would

1366
01:10:57,529 --> 01:11:01,849
like to do is say can we make a select

1367
01:10:59,869 --> 01:11:05,899
function that just goes out on all of

1368
01:11:01,850 --> 01:11:11,620
these right so if we have like a v3 like

1369
01:11:05,899 --> 01:11:14,839
so and we want to do is select on it

1370
01:11:11,619 --> 01:11:20,119
can we just call like this is what we

1371
01:11:14,840 --> 01:11:23,239
want here right we just want to do one

1372
01:11:20,119 --> 01:11:30,109
that just spams out you know distributed

1373
01:11:23,239 --> 01:11:34,519
property to each member it's not really

1374
01:11:30,109 --> 01:11:36,380
distributive just per element just spam

1375
01:11:34,520 --> 01:11:38,390
it out and do it for us because we don't

1376
01:11:36,380 --> 01:11:41,060
want to have to type it like you know

1377
01:11:38,390 --> 01:11:44,270
just make it happen for all the elements

1378
01:11:41,060 --> 01:11:47,050
and we'll be happy uh so I think that

1379
01:11:44,270 --> 01:11:47,050
should be okay

1380
01:11:47,890 --> 01:11:52,510
not sure what what is this complaining

1381
01:11:50,029 --> 01:11:52,509
about here

1382
01:11:58,819 --> 01:12:02,149
it already has a body I thought you were

1383
01:12:00,948 --> 01:12:15,589
just complaining that it didn't have a

1384
01:12:02,149 --> 01:12:17,689
body what are you talking about huh wait

1385
01:12:15,590 --> 01:12:24,489
so why was it complaining that we didn't

1386
01:12:17,689 --> 01:12:24,488
have one of those when we definitely did

1387
01:12:31,389 --> 01:12:42,340
right have it must have a typo in there

1388
01:12:33,559 --> 01:12:45,639
somewhere yeah that's the same function

1389
01:12:42,340 --> 01:12:45,639
what the hey

1390
01:12:52,750 --> 01:12:56,380
oh so it's not nevermind it's not

1391
01:12:55,390 --> 01:13:00,910
complaining anymore

1392
01:12:56,380 --> 01:13:02,020
it just doesn't know I guess but it is

1393
01:13:00,909 --> 01:13:02,529
complaining about this one what's the

1394
01:13:02,020 --> 01:13:05,050
deal

1395
01:13:02,529 --> 01:13:06,969
it knows hit ref color I don't know

1396
01:13:05,050 --> 01:13:08,320
let's fix the box in radius and we'll

1397
01:13:06,970 --> 01:13:12,369
see where it goes maybe this is just a

1398
01:13:08,319 --> 01:13:17,710
bad error reporting situation so in our

1399
01:13:12,369 --> 01:13:19,869
lightning box we need to put in the

1400
01:13:17,710 --> 01:13:22,210
inverse scale so we need an inverse

1401
01:13:19,869 --> 01:13:25,119
radius here like that

1402
01:13:22,210 --> 01:13:28,420
and you know we could use the reciprocal

1403
01:13:25,119 --> 01:13:31,119
here if we wanted to to compute that

1404
01:13:28,420 --> 01:13:33,520
inverse radius I don't know that we

1405
01:13:31,119 --> 01:13:36,010
really want to do that but we could I

1406
01:13:33,520 --> 01:13:37,060
think I'm gonna not do it but again like

1407
01:13:36,010 --> 01:13:39,430
it's something that we could consider

1408
01:13:37,060 --> 01:13:40,990
doing because remember when you're

1409
01:13:39,430 --> 01:13:42,909
storing these loading boxes it cost you

1410
01:13:40,989 --> 01:13:45,429
something in fact I think about it

1411
01:13:42,909 --> 01:13:48,279
it's just not because less bandwidth is

1412
01:13:45,430 --> 01:13:51,400
usually better so instead here let's

1413
01:13:48,279 --> 01:13:53,469
just do box in radius we only need to

1414
01:13:51,399 --> 01:13:55,479
use it here if we store it so let's

1415
01:13:53,470 --> 01:13:58,360
actually let's actually just roll that

1416
01:13:55,479 --> 01:14:00,489
into the computation so instead of doing

1417
01:13:58,359 --> 01:14:08,289
hitbox in radius we'll just use hitbox

1418
01:14:00,489 --> 01:14:19,029
radius like so because we know we've got

1419
01:14:08,289 --> 01:14:24,489
that let's do those things while trying

1420
01:14:19,029 --> 01:14:27,189
to match v3 for X to do okay I see was

1421
01:14:24,489 --> 01:14:32,289
complaining about we need to loft this

1422
01:14:27,189 --> 01:14:39,639
box ref C up into a v3 for X right so we

1423
01:14:32,289 --> 01:14:43,510
actually need this thing too we need

1424
01:14:39,640 --> 01:14:47,190
this thing to take that ref C and get

1425
01:14:43,510 --> 01:14:47,190
into that

1426
01:14:48,238 --> 01:14:53,039
so that's fine okay so now what we need

1427
01:14:50,819 --> 01:14:56,238
to do is this hitbox in the radius here

1428
01:14:53,039 --> 01:14:58,800
we really just need to do the divide and

1429
01:14:56,238 --> 01:15:00,928
so I'm actually okay with doing the

1430
01:14:58,800 --> 01:15:06,179
whole divide so if we take a look at div

1431
01:15:00,929 --> 01:15:09,239
right the div PS it's just not that many

1432
01:15:06,179 --> 01:15:12,658
cycles it's not great you know don't get

1433
01:15:09,238 --> 01:15:17,218
me wrong but if we started doing that

1434
01:15:12,658 --> 01:15:18,988
before well I guess everything's

1435
01:15:17,219 --> 01:15:21,000
depending on though yeah is there

1436
01:15:18,988 --> 01:15:32,549
anything problem is there's nothing we

1437
01:15:21,000 --> 01:15:34,618
could pipe line in there so I guess I

1438
01:15:32,550 --> 01:15:40,980
really don't want to do the divide I

1439
01:15:34,618 --> 01:15:42,929
guess we want to do an envelope lie you

1440
01:15:40,979 --> 01:15:48,988
see why I'm saying that because you look

1441
01:15:42,929 --> 01:15:52,469
here on skylake for example it takes 11

1442
01:15:48,988 --> 01:15:54,238
cycles to do the divide if you look at

1443
01:15:52,469 --> 01:15:55,980
all of the work that has to be done here

1444
01:15:54,238 --> 01:15:57,299
that would be fine I don't care about 11

1445
01:15:55,979 --> 01:16:02,339
cycles because we can do other work in

1446
01:15:57,300 --> 01:16:03,809
that time 3 3 puts not that bad but if

1447
01:16:02,340 --> 01:16:06,900
you look at what has to happen here at

1448
01:16:03,809 --> 01:16:08,279
that 11 cycles it'll hit this is where

1449
01:16:06,899 --> 01:16:10,109
we would do the divide instead of a hat

1450
01:16:08,279 --> 01:16:15,948
of our product we would do have our

1451
01:16:10,109 --> 01:16:18,118
quotient here do divide those 3 divides

1452
01:16:15,948 --> 01:16:21,089
nothing else can happen until they're

1453
01:16:18,118 --> 01:16:25,469
done right all of this other crap just

1454
01:16:21,090 --> 01:16:27,119
has to stall on those divides and I

1455
01:16:25,469 --> 01:16:28,349
guess there'd only be a free cycle

1456
01:16:27,118 --> 01:16:32,279
bubble cuz if through three of the

1457
01:16:28,349 --> 01:16:35,039
divides but it's a little nasty I don't

1458
01:16:32,279 --> 01:16:38,819
know it's not great it's probably ok but

1459
01:16:35,039 --> 01:16:42,439
it's just a little nasty right whereas

1460
01:16:38,819 --> 01:16:42,439
if we did the reciprocal

1461
01:16:45,949 --> 01:17:04,789
that's like way less right for cycle

1462
01:16:51,050 --> 01:17:06,590
latency it's just very approximate you

1463
01:17:04,789 --> 01:17:08,659
know in this case though you kind of

1464
01:17:06,590 --> 01:17:10,670
have to figure approximants probably

1465
01:17:08,659 --> 01:17:12,319
fine I mean we're not even using the

1466
01:17:10,670 --> 01:17:15,350
value that comes back for anything other

1467
01:17:12,319 --> 01:17:20,229
than a comparison so like in what world

1468
01:17:15,350 --> 01:17:20,230
would it ever actually matter you know

1469
01:17:35,538 --> 01:17:39,738
so I'm gonna I'm gonna have to say that

1470
01:17:37,340 --> 01:17:45,550
like probably the reciprocals the right

1471
01:17:39,738 --> 01:17:45,549
way to go here like probably the RCP PS

1472
01:17:47,769 --> 01:17:53,300
Sam and so let's take a look at this

1473
01:17:51,349 --> 01:17:55,130
part here right so if you look at what

1474
01:17:53,300 --> 01:17:58,760
happens we're taking this and then we're

1475
01:17:55,130 --> 01:18:00,800
subtracting the hitbox center off of

1476
01:17:58,760 --> 01:18:03,769
that I'm gonna argue that we probably

1477
01:18:00,800 --> 01:18:09,199
want to restructure this and say that

1478
01:18:03,769 --> 01:18:14,449
the you know the hip P here that we're

1479
01:18:09,198 --> 01:18:16,158
computing is I guess well no because we

1480
01:18:14,448 --> 01:18:18,078
need that - I was gonna say one thing we

1481
01:18:16,158 --> 01:18:20,388
could do is restructure this so that

1482
01:18:18,078 --> 01:18:22,609
this this subtraction actually happens

1483
01:18:20,389 --> 01:18:23,989
here because those two things can happen

1484
01:18:22,609 --> 01:18:26,598
in parallel the multiply and the

1485
01:18:23,988 --> 01:18:29,379
subtraction happen together but since we

1486
01:18:26,599 --> 01:18:32,659
need the hit P probably not gonna work

1487
01:18:29,380 --> 01:18:36,230
anyway while that's happening though the

1488
01:18:32,658 --> 01:18:39,018
hitbox inverse radius we can be doing

1489
01:18:36,229 --> 01:18:42,589
the inverse on that so the hitbox

1490
01:18:39,019 --> 01:18:53,210
inverse radius here can be the hitbox

1491
01:18:42,590 --> 01:18:57,889
radius approximate inverse so we need an

1492
01:18:53,210 --> 01:19:01,309
approximate inverse there and then we

1493
01:18:57,889 --> 01:19:04,038
can do the multiply here right and so

1494
01:19:01,309 --> 01:19:06,050
that should be fine the only thing is we

1495
01:19:04,038 --> 01:19:09,139
may already have that in here I'm gonna

1496
01:19:06,050 --> 01:19:11,139
look to see if we do so I'm gonna just

1497
01:19:09,139 --> 01:19:15,529
search through here and see do we have

1498
01:19:11,139 --> 01:19:17,960
the RCP instruction anywhere I don't see

1499
01:19:15,529 --> 01:19:22,788
it so we need to add one of those and

1500
01:19:17,960 --> 01:19:24,529
I'll add it to both you can see we are

1501
01:19:22,788 --> 01:19:28,448
using the approximate square root but

1502
01:19:24,529 --> 01:19:30,800
we're just not we don't use the

1503
01:19:28,448 --> 01:19:34,069
approximate reciprocal anywhere we only

1504
01:19:30,800 --> 01:19:37,159
use the approximate square root which

1505
01:19:34,069 --> 01:19:38,420
yeah again we don't really care about I

1506
01:19:37,158 --> 01:19:41,420
don't think for any particular reason

1507
01:19:38,420 --> 01:19:44,510
here all right so let's take a look at

1508
01:19:41,420 --> 01:19:45,769
the approximate square root and try to

1509
01:19:44,510 --> 01:19:46,909
make it look the same as that because

1510
01:19:45,769 --> 01:19:48,619
this is basically the same kind of

1511
01:19:46,908 --> 01:20:02,299
instruction so let's do a proc

1512
01:19:48,619 --> 01:20:04,399
in yes that and so that's all we really

1513
01:20:02,300 --> 01:20:05,840
wanted to do here and so we'll make this

1514
01:20:04,399 --> 01:20:10,250
look the same there's the art there's

1515
01:20:05,840 --> 01:20:10,670
the reciprocal and there's our view

1516
01:20:10,250 --> 01:20:14,840
there

1517
01:20:10,670 --> 01:20:16,579
turn that out and so now we're returning

1518
01:20:14,840 --> 01:20:18,170
the approximate one over that we can use

1519
01:20:16,579 --> 01:20:19,670
for anything we want and so here we can

1520
01:20:18,170 --> 01:20:21,829
just say like okay approximate one over

1521
01:20:19,670 --> 01:20:23,960
hip box radius that'll give us the box

1522
01:20:21,829 --> 01:20:25,369
inverse radius back now remember we want

1523
01:20:23,960 --> 01:20:26,600
to be able to distribute this so we just

1524
01:20:25,369 --> 01:20:28,159
got to copy this down here and say oh

1525
01:20:26,600 --> 01:20:31,280
alright well if you're doing one of

1526
01:20:28,159 --> 01:20:32,899
those and you want to do it across all

1527
01:20:31,279 --> 01:20:35,300
of your elements we need to kind of just

1528
01:20:32,899 --> 01:20:40,819
blow that out so we've got the result

1529
01:20:35,300 --> 01:20:45,560
here the result X is just the aprox one

1530
01:20:40,819 --> 01:20:47,479
over for the X oops we want to be able

1531
01:20:45,560 --> 01:20:53,210
to do that three times one for each zone

1532
01:20:47,479 --> 01:20:54,349
and one for each head dimension and then

1533
01:20:53,210 --> 01:20:57,939
that should solve our problem now the

1534
01:20:54,350 --> 01:21:00,289
Hadamard product I guess we don't have I

1535
01:20:57,939 --> 01:21:03,969
assume because we were saying it said we

1536
01:21:00,289 --> 01:21:03,970
didn't have it oops

1537
01:21:09,090 --> 01:21:21,360
so I guess we never wrote a Hadamard

1538
01:21:11,529 --> 01:21:21,359
here that seems really weird

1539
01:21:37,319 --> 01:21:46,389
so it looks like we wrote the times

1540
01:21:41,970 --> 01:21:53,860
operator instead of the Hadamard product

1541
01:21:46,390 --> 01:22:02,650
which seems nuts because I don't usually

1542
01:21:53,859 --> 01:22:09,189
do that and you can see us like calling

1543
01:22:02,649 --> 01:22:10,269
it here so I don't love that so all

1544
01:22:09,189 --> 01:22:11,739
we're really gonna do we don't have to

1545
01:22:10,270 --> 01:22:16,570
write it I'm just gonna change the name

1546
01:22:11,739 --> 01:22:17,949
of this thing so that it matches what we

1547
01:22:16,569 --> 01:22:20,079
were doing I don't know why I did that

1548
01:22:17,949 --> 01:22:24,099
I'll have to go back and look at the

1549
01:22:20,079 --> 01:22:25,689
video see that's unlike me I must have

1550
01:22:24,100 --> 01:22:30,250
had some reason but it probably wasn't

1551
01:22:25,689 --> 01:22:36,129
very good one so that's all we should

1552
01:22:30,250 --> 01:22:38,590
really need there there we go and now

1553
01:22:36,130 --> 01:22:41,170
we've got our ray caster returning

1554
01:22:38,590 --> 01:22:43,750
exactly what we want and it should be

1555
01:22:41,170 --> 01:22:47,409
actually I think considerably faster

1556
01:22:43,750 --> 01:22:52,270
than the old one because there's a lot

1557
01:22:47,409 --> 01:22:53,710
less instructions in here right so it'll

1558
01:22:52,270 --> 01:22:56,410
be a little slower because we got rid of

1559
01:22:53,710 --> 01:22:58,180
this fake early-out case that wasn't

1560
01:22:56,409 --> 01:22:59,710
that was a bug in our early one so we're

1561
01:22:58,180 --> 01:23:01,150
losing speed there but we'll gain quite

1562
01:22:59,710 --> 01:23:03,430
a bit of speed by not needing to do as

1563
01:23:01,149 --> 01:23:03,939
much stuff in here I think so that

1564
01:23:03,430 --> 01:23:05,770
should be good

1565
01:23:03,939 --> 01:23:09,939
and then this maybe isn't the most

1566
01:23:05,770 --> 01:23:11,350
efficacious way to do this but it's

1567
01:23:09,939 --> 01:23:13,899
pretty good you know it's not the

1568
01:23:11,350 --> 01:23:17,140
world's worst and so hopefully that will

1569
01:23:13,899 --> 01:23:18,969
be pretty tight as well and you know it

1570
01:23:17,140 --> 01:23:22,030
only has to happen after you've done all

1571
01:23:18,970 --> 01:23:24,640
of the collision detection for an entire

1572
01:23:22,029 --> 01:23:29,050
ray and so it's it's you know cheaper in

1573
01:23:24,640 --> 01:23:30,490
that sense all right all right so let's

1574
01:23:29,050 --> 01:23:34,659
go in here I don't know how much time I

1575
01:23:30,489 --> 01:23:40,479
got left it looks like about 15 minutes

1576
01:23:34,659 --> 01:23:44,409
or so yeah so let's just take a look at

1577
01:23:40,479 --> 01:23:46,599
this stuff too so when we actually go in

1578
01:23:44,409 --> 01:23:50,050
here now I want to say that all of this

1579
01:23:46,600 --> 01:23:52,510
should actually be symbolized as well I

1580
01:23:50,050 --> 01:23:55,420
think all of this stuff should not

1581
01:23:52,510 --> 01:23:57,369
downshift any more and do this these

1582
01:23:55,420 --> 01:24:00,850
extractions we don't I don't think want

1583
01:23:57,369 --> 01:24:03,760
to do any more so when we get the

1584
01:24:00,850 --> 01:24:06,039
raycast back what we need to do here is

1585
01:24:03,760 --> 01:24:09,430
determine like for this ray cast what is

1586
01:24:06,039 --> 01:24:11,500
the actual lighting value that we get

1587
01:24:09,430 --> 01:24:15,850
right and we already sort of sketched

1588
01:24:11,500 --> 01:24:26,859
out this routine somewhere in here that

1589
01:24:15,850 --> 01:24:29,130
was for our yeah Senor summer where'd

1590
01:24:26,859 --> 01:24:29,130
you go

1591
01:24:33,510 --> 01:24:42,180
here it is so we already had you know a

1592
01:24:37,260 --> 01:24:45,420
get probe lighting for situation and the

1593
01:24:42,180 --> 01:24:47,940
kept probe lighting for right now we had

1594
01:24:45,420 --> 01:24:50,909
working only on a v3 but I think what we

1595
01:24:47,939 --> 01:24:53,369
want to do is make that operate wide you

1596
01:24:50,909 --> 01:24:56,729
know I'm saying and it's not great

1597
01:24:53,369 --> 01:24:58,649
because the the big thing that sucks

1598
01:24:56,729 --> 01:25:02,219
about Cindy and the Cindy instruction

1599
01:24:58,649 --> 01:25:06,269
set you know it's really really bad that

1600
01:25:02,220 --> 01:25:07,829
they did this because it basically means

1601
01:25:06,270 --> 01:25:09,390
that all of your code just completely

1602
01:25:07,829 --> 01:25:11,488
falls apart as soon as it has to touch

1603
01:25:09,390 --> 01:25:14,640
memory which really just doesn't seem

1604
01:25:11,488 --> 01:25:16,649
like a very good idea but I think they

1605
01:25:14,640 --> 01:25:20,760
just fundamentally at Intel we're like

1606
01:25:16,649 --> 01:25:22,710
look we don't have enough fetching it

1607
01:25:20,760 --> 01:25:27,869
stuff here to actually make this work

1608
01:25:22,710 --> 01:25:29,609
I don't know so up until avx-512 which

1609
01:25:27,869 --> 01:25:32,579
almost nobody has so it doesn't matter

1610
01:25:29,609 --> 01:25:34,349
like we can't use it it would run on

1611
01:25:32,579 --> 01:25:37,609
like zero machines including this one

1612
01:25:34,350 --> 01:25:37,610
this one machine doesn't have it either

1613
01:25:38,300 --> 01:25:43,500
the problem is any time we need to go

1614
01:25:41,039 --> 01:25:45,390
fetch information so in the case of our

1615
01:25:43,500 --> 01:25:48,060
light probes we need to be able to go

1616
01:25:45,390 --> 01:25:50,310
fetch what the color values are so we

1617
01:25:48,060 --> 01:25:56,400
can combine them together and get like

1618
01:25:50,310 --> 01:26:01,440
the results of those colors out so we

1619
01:25:56,399 --> 01:26:03,569
can't do that at the moment wide we can

1620
01:26:01,439 --> 01:26:06,059
do all the rest of the stuff wide but

1621
01:26:03,569 --> 01:26:08,159
the fetching has to downshift and that's

1622
01:26:06,060 --> 01:26:12,510
the really really annoying part of it

1623
01:26:08,159 --> 01:26:14,909
right and so we could you know have done

1624
01:26:12,510 --> 01:26:19,500
this completely wide the entire way and

1625
01:26:14,909 --> 01:26:21,659
some all four ray casts at once and it

1626
01:26:19,500 --> 01:26:23,699
would have been really nice but we can't

1627
01:26:21,659 --> 01:26:26,220
do that and so we're gonna have to think

1628
01:26:23,699 --> 01:26:28,260
of another strategy for doing this that

1629
01:26:26,220 --> 01:26:32,840
minimizes the degree to which we have to

1630
01:26:28,260 --> 01:26:32,840
look at things quote unquote unwind

1631
01:26:37,399 --> 01:26:43,309
and my assumption is that that will

1632
01:26:40,609 --> 01:26:48,859
probably involve treating the probes as

1633
01:26:43,310 --> 01:26:51,220
wide and their raise is not I don't

1634
01:26:48,859 --> 01:26:51,219
really know

1635
01:26:57,369 --> 01:27:02,329
you know that's that's just my

1636
01:26:59,449 --> 01:27:04,309
assumption so you know I think you kind

1637
01:27:02,329 --> 01:27:06,109
of need to step through the Rays because

1638
01:27:04,310 --> 01:27:07,490
you need to do those those light lookups

1639
01:27:06,109 --> 01:27:08,809
for each individual one and you're gonna

1640
01:27:07,489 --> 01:27:13,039
have to him separately because you just

1641
01:27:08,810 --> 01:27:17,660
can't send me that I and presumably you

1642
01:27:13,039 --> 01:27:20,269
know it's also an open question if we

1643
01:27:17,659 --> 01:27:22,609
did the right thing as being per ray

1644
01:27:20,270 --> 01:27:24,140
instead of for primitive but I think we

1645
01:27:22,609 --> 01:27:26,149
did the right thing there just because

1646
01:27:24,140 --> 01:27:28,910
bounding volume hierarchies generally

1647
01:27:26,149 --> 01:27:30,710
speaking don't really lend themselves to

1648
01:27:28,909 --> 01:27:32,599
primitive because you're typically only

1649
01:27:30,710 --> 01:27:35,720
testing one primitive as you narrow

1650
01:27:32,600 --> 01:27:38,720
things down so typically you want to put

1651
01:27:35,720 --> 01:27:40,430
your Ray's in bundles and not your your

1652
01:27:38,720 --> 01:27:41,900
the primitives you're testing against

1653
01:27:40,430 --> 01:27:44,119
don't typically want to be in bundles

1654
01:27:41,899 --> 01:27:45,649
this especially gets true as you go

1655
01:27:44,119 --> 01:27:47,960
wider cuz you typically don't want to

1656
01:27:45,649 --> 01:27:49,639
test like 16 boxes against array because

1657
01:27:47,960 --> 01:27:51,520
a lot of times you just want to test one

1658
01:27:49,640 --> 01:27:54,170
box and see whether you should which

1659
01:27:51,520 --> 01:27:57,710
side of the thing you should go down you

1660
01:27:54,170 --> 01:28:00,680
know or something like that so I would

1661
01:27:57,710 --> 01:28:03,380
suspect roughly speaking you know this

1662
01:28:00,680 --> 01:28:05,030
is sort of the way it should look and so

1663
01:28:03,380 --> 01:28:09,920
when we get out of here

1664
01:28:05,029 --> 01:28:12,259
and we end up with the Ray the for Ray

1665
01:28:09,920 --> 01:28:14,060
results and we need to then do something

1666
01:28:12,260 --> 01:28:15,949
with them I'm pretty sure what we need

1667
01:28:14,060 --> 01:28:22,900
to end up doing here is we've got to go

1668
01:28:15,949 --> 01:28:27,139
ahead and and downshift to scalar and

1669
01:28:22,899 --> 01:28:29,809
then I guess what we can do is once we

1670
01:28:27,140 --> 01:28:35,200
take a look at what the scalar stuff

1671
01:28:29,810 --> 01:28:39,650
looks like we can put it back into cindy

1672
01:28:35,199 --> 01:28:45,460
as much as we can and we might just have

1673
01:28:39,649 --> 01:28:48,289
to go cindy across some other thing

1674
01:28:45,460 --> 01:28:50,449
because per ray just won't work because

1675
01:28:48,289 --> 01:28:51,050
of the lookups really right cuz you know

1676
01:28:50,449 --> 01:28:54,319
what i'm saying

1677
01:28:51,050 --> 01:28:56,300
I mean maybe because I'll do it per Ray

1678
01:28:54,319 --> 01:29:01,239
well we assemble the lookups back into a

1679
01:28:56,300 --> 01:29:03,289
4x and go from there I'm guessing but

1680
01:29:01,239 --> 01:29:04,279
that being neither here there there I

1681
01:29:03,289 --> 01:29:06,199
think I'm gonna call it for today

1682
01:29:04,279 --> 01:29:08,719
because basically the next set of things

1683
01:29:06,199 --> 01:29:09,380
we want to do is in here so I'm gonna

1684
01:29:08,720 --> 01:29:11,750
I'm gonna

1685
01:29:09,380 --> 01:29:14,029
say that's good for now and tomorrow we

1686
01:29:11,750 --> 01:29:16,399
will go back and into this part of their

1687
01:29:14,029 --> 01:29:19,880
team and write this new version for the

1688
01:29:16,399 --> 01:29:22,460
light probes and then we're getting kind

1689
01:29:19,880 --> 01:29:24,440
of close to being able to debug it at

1690
01:29:22,460 --> 01:29:26,329
that point all we really need to do is

1691
01:29:24,439 --> 01:29:29,809
go in and make sure that we're feeding

1692
01:29:26,329 --> 01:29:31,189
light probes in and then we can start to

1693
01:29:29,810 --> 01:29:34,820
actually step through the code in like

1694
01:29:31,189 --> 01:29:36,799
debug it and work it through and go from

1695
01:29:34,819 --> 01:29:38,420
there but we're getting close so that'd

1696
01:29:36,800 --> 01:29:40,130
be good and once we get to that point

1697
01:29:38,420 --> 01:29:42,319
then we're pretty happy because then

1698
01:29:40,130 --> 01:29:44,150
we're just down to figuring out how to

1699
01:29:42,319 --> 01:29:45,649
feed this down to the card in a nice way

1700
01:29:44,149 --> 01:29:49,238
which is basically just gonna be like

1701
01:29:45,649 --> 01:29:52,729
updating updating a voxel look up and

1702
01:29:49,238 --> 01:29:55,638
and setting down the light probe values

1703
01:29:52,729 --> 01:29:57,079
which shouldn't be that hard it just be

1704
01:29:55,639 --> 01:29:58,609
it's just you know hey it's GPU so

1705
01:29:57,079 --> 01:29:59,869
there's a lot of like debugging that

1706
01:29:58,609 --> 01:30:01,189
that goes on that's just because you

1707
01:29:59,869 --> 01:30:03,229
can't see what's happening and so it

1708
01:30:01,189 --> 01:30:05,059
takes you longer than it should

1709
01:30:03,229 --> 01:30:07,968
although Nsight has been pretty good

1710
01:30:05,060 --> 01:30:11,960
about making those things easier for us

1711
01:30:07,969 --> 01:30:15,819
so let's go ahead and go to QA and then

1712
01:30:11,960 --> 01:30:15,819
we will wrap it up

1713
01:31:12,199 --> 01:31:32,429
origen box Center and hit P are on the

1714
01:31:14,970 --> 01:31:36,770
same line no they're not right so I

1715
01:31:32,430 --> 01:31:45,920
guess what I would say is I disagree I

1716
01:31:36,770 --> 01:31:45,920
think I drew that here

1717
01:31:46,789 --> 01:31:54,029
so here's ray origin here's Box Center

1718
01:31:51,329 --> 01:31:59,119
and here's hit P they actually form a

1719
01:31:54,029 --> 01:32:07,920
triangle and we don't really know

1720
01:31:59,119 --> 01:32:13,619
anything about the triangle at all I

1721
01:32:07,920 --> 01:32:16,680
guess I would say or almost at all you

1722
01:32:13,619 --> 01:32:17,970
know that there really isn't I don't

1723
01:32:16,680 --> 01:32:21,600
think much you can say about that

1724
01:32:17,970 --> 01:32:24,449
triangle do you believe do you believe

1725
01:32:21,600 --> 01:32:26,850
me first let's let's do I need to go

1726
01:32:24,449 --> 01:32:33,630
into that in more detail or do you

1727
01:32:26,850 --> 01:32:35,400
believe me from the diagram LS r1 send

1728
01:32:33,630 --> 01:32:37,560
me a Q : back that says whether you

1729
01:32:35,399 --> 01:32:38,939
believe that or not I'll look it up late

1730
01:32:37,560 --> 01:32:40,200
coders question in the meantime I've

1731
01:32:38,939 --> 01:32:41,759
just added this evil so standard

1732
01:32:40,199 --> 01:32:43,439
reference to the issue type name member

1733
01:32:41,760 --> 01:32:45,539
named issue I agree it's a stupid

1734
01:32:43,439 --> 01:32:51,449
warning but there seems to be no way to

1735
01:32:45,539 --> 01:32:56,399
disable it in GCC the rate of bug

1736
01:32:51,449 --> 01:32:58,260
against GCC then I mean it's if it

1737
01:32:56,399 --> 01:33:01,460
doesn't handle the standard then it's a

1738
01:32:58,260 --> 01:33:01,460
bug and it should fix it

1739
01:33:06,689 --> 01:33:14,098
but else r1 okay so you believe me okay

1740
01:33:09,060 --> 01:33:15,869
cool uh I guess what I'd say is I would

1741
01:33:14,099 --> 01:33:17,849
have liked that to be the case exactly

1742
01:33:15,868 --> 01:33:20,399
what you said I would have hoped would

1743
01:33:17,849 --> 01:33:26,940
be true but it's just not and so the

1744
01:33:20,399 --> 01:33:32,629
problem is I can't see a shorter way of

1745
01:33:26,939 --> 01:33:36,448
determining what direction that P the

1746
01:33:32,630 --> 01:33:40,349
normal goes in other than actually

1747
01:33:36,448 --> 01:33:43,948
producing the hit point but I think we

1748
01:33:40,349 --> 01:33:48,599
did the best job here anyway because we

1749
01:33:43,948 --> 01:33:52,908
need that point later to look up the

1750
01:33:48,599 --> 01:34:02,489
light probes so it's really kind of free

1751
01:33:52,908 --> 01:34:04,439
you know what I mean I and it's really

1752
01:34:02,488 --> 01:34:05,848
kind of free to use it because we knew

1753
01:34:04,439 --> 01:34:07,678
we had to make it anyway

1754
01:34:05,849 --> 01:34:09,349
which doesn't make it entirely free but

1755
01:34:07,679 --> 01:34:12,929
since we were able to move it outside

1756
01:34:09,349 --> 01:34:14,670
the code it's almost free and the only

1757
01:34:12,929 --> 01:34:16,710
thing we would really save by using

1758
01:34:14,670 --> 01:34:19,889
something cheaper would be some of those

1759
01:34:16,710 --> 01:34:22,230
selects in there but again we can do

1760
01:34:19,889 --> 01:34:24,840
three selects per cycle on a modern

1761
01:34:22,229 --> 01:34:27,988
machine so saving them doesn't really do

1762
01:34:24,840 --> 01:34:30,949
much for us they're almost free

1763
01:34:27,988 --> 01:34:37,379
an entire vector is worth of select is

1764
01:34:30,948 --> 01:34:39,419
one cycle right so so I do think we're

1765
01:34:37,380 --> 01:34:40,529
we're not I'm not too worried about it

1766
01:34:39,420 --> 01:34:41,670
it would have been nice if we could

1767
01:34:40,529 --> 01:34:44,158
avoid it certainly because it's always

1768
01:34:41,670 --> 01:34:45,449
nice to just do something simpler but in

1769
01:34:44,158 --> 01:34:47,129
this case we happen to be using

1770
01:34:45,448 --> 01:34:50,448
something we needed anyway and so that's

1771
01:34:47,130 --> 01:34:52,409
if you can't get away with the cheat

1772
01:34:50,448 --> 01:34:54,678
using something you already needed to

1773
01:34:52,408 --> 01:34:57,299
make anyway is certainly the best

1774
01:34:54,679 --> 01:34:59,010
secondary option because hey you needed

1775
01:34:57,300 --> 01:35:00,869
to compute that anyway so you're

1776
01:34:59,010 --> 01:35:02,909
creating it's a it's a chain dependency

1777
01:35:00,868 --> 01:35:03,988
which we would hope to not have because

1778
01:35:02,908 --> 01:35:07,469
then we can't compete them in parallel

1779
01:35:03,988 --> 01:35:08,698
but you know short of that it's the next

1780
01:35:07,469 --> 01:35:13,039
best thing because we're not throwing

1781
01:35:08,698 --> 01:35:13,039
the we're not throwing it away right

1782
01:35:21,260 --> 01:35:27,469
why are the light probe cubes and not

1783
01:35:24,448 --> 01:35:32,789
spheres um so they're not really cubes

1784
01:35:27,469 --> 01:35:36,800
they're just light probes we can choose

1785
01:35:32,789 --> 01:35:40,229
to think of them however we want right

1786
01:35:36,800 --> 01:35:43,710
what I did say was that we're just gonna

1787
01:35:40,229 --> 01:35:45,479
store one color value per each of the

1788
01:35:43,710 --> 01:35:50,520
six directions cardinal directions

1789
01:35:45,479 --> 01:35:53,009
coming out of the light probe point but

1790
01:35:50,520 --> 01:35:56,489
the light probe is not a cube or a

1791
01:35:53,010 --> 01:35:58,440
sphere it's just a point right and so

1792
01:35:56,488 --> 01:36:00,779
the only decision we have to make is how

1793
01:35:58,439 --> 01:36:03,809
do we store the lighting around that

1794
01:36:00,779 --> 01:36:07,170
point you could choose to use spherical

1795
01:36:03,810 --> 01:36:10,400
harmonics you could choose to use a cube

1796
01:36:07,170 --> 01:36:14,699
map you could choose to use six lights

1797
01:36:10,399 --> 01:36:17,339
six directional lights anything we want

1798
01:36:14,698 --> 01:36:18,750
right and we may change what that is but

1799
01:36:17,340 --> 01:36:21,539
it's important to remember the light

1800
01:36:18,750 --> 01:36:24,988
probe is not a cube or a sphere it's a

1801
01:36:21,539 --> 01:36:26,698
point and it then the question is just

1802
01:36:24,988 --> 01:36:30,388
how do we want to store the irradiance

1803
01:36:26,698 --> 01:36:32,460
at that point right uplink coder says

1804
01:36:30,389 --> 01:36:34,409
GCC is following standard it's just that

1805
01:36:32,460 --> 01:36:35,670
the standard stupid okay so so what

1806
01:36:34,408 --> 01:36:38,789
you're saying is the C++ standard

1807
01:36:35,670 --> 01:36:43,618
actually is different than the c99

1808
01:36:38,789 --> 01:36:46,079
standard why am I not surprised

1809
01:36:43,618 --> 01:36:47,250
okay so it's always like if someone's

1810
01:36:46,079 --> 01:36:48,630
gonna do something right and someone's

1811
01:36:47,250 --> 01:36:50,960
gonna do something wrong C will do it

1812
01:36:48,630 --> 01:36:54,409
right and C bus to us will do it wrong

1813
01:36:50,960 --> 01:36:54,408
and I guess so

1814
01:36:57,029 --> 01:37:05,909
a name n used in a class s so is class

1815
01:37:02,489 --> 01:37:07,769
also struct here because they usually

1816
01:37:05,909 --> 01:37:11,250
isn't much of a difference between them

1817
01:37:07,770 --> 01:37:13,110
or are they different a name and used in

1818
01:37:11,250 --> 01:37:15,210
a class s should I refer to the same

1819
01:37:13,109 --> 01:37:18,119
declaration in its context and when

1820
01:37:15,210 --> 01:37:31,890
reevaluated reevaluated in the completed

1821
01:37:18,119 --> 01:37:39,619
scope of s that is not relevant here is

1822
01:37:31,890 --> 01:37:39,619
it though

1823
01:37:45,439 --> 01:37:52,489
I mean that that doesn't that doesn't

1824
01:37:48,829 --> 01:37:55,340
prohibit this we have a type outside the

1825
01:37:52,489 --> 01:37:57,920
class and a member inside the class and

1826
01:37:55,340 --> 01:38:01,730
that's fine right because the name and

1827
01:37:57,920 --> 01:38:03,590
in this case is f/32 or whatever in a

1828
01:38:01,729 --> 01:38:06,319
class s so it's inside there I refer to

1829
01:38:03,590 --> 01:38:09,230
the same declaration in its context and

1830
01:38:06,319 --> 01:38:14,289
when revalued in the completed scope of

1831
01:38:09,229 --> 01:38:14,289
s but that's inside the class s right

1832
01:38:21,469 --> 01:38:27,189
I guess because inside the class

1833
01:38:29,198 --> 01:38:34,579
first of all also is this true of strux

1834
01:38:32,090 --> 01:38:37,400
because ass class instructor vary quite

1835
01:38:34,579 --> 01:38:41,479
a bit because you write member functions

1836
01:38:37,399 --> 01:38:44,079
in a class which is inside the contact

1837
01:38:41,479 --> 01:38:46,549
inside the scope of that class but

1838
01:38:44,079 --> 01:38:50,809
nothing happens inside the scope of a

1839
01:38:46,550 --> 01:38:53,420
struct other than member lookup so I'm

1840
01:38:50,810 --> 01:38:56,060
I'm unconvinced this this this wording

1841
01:38:53,420 --> 01:38:59,020
doesn't convince me at all let me look

1842
01:38:56,060 --> 01:38:59,020
at these other parts here

1843
01:39:43,100 --> 01:39:50,960
again I don't so I'm this is not saying

1844
01:39:48,380 --> 01:39:52,609
this in my opinion so I maybe they're

1845
01:39:50,960 --> 01:39:55,399
trying to say something different here

1846
01:39:52,609 --> 01:39:58,519
because maybe completed scope means

1847
01:39:55,399 --> 01:40:01,759
something different but do they mean the

1848
01:39:58,520 --> 01:40:03,620
scope in which s exists which is not how

1849
01:40:01,760 --> 01:40:05,720
I would have said that but in the

1850
01:40:03,619 --> 01:40:08,329
completed scope of s no violations Kurt

1851
01:40:05,720 --> 01:40:13,280
sure you can't do that but this is where

1852
01:40:08,329 --> 01:40:16,039
the error happened here not here right

1853
01:40:13,279 --> 01:40:19,069
because this is illegal but that isn't

1854
01:40:16,039 --> 01:40:22,189
because you have at no time changed what

1855
01:40:19,069 --> 01:40:25,000
this meant in the scope of T it doesn't

1856
01:40:22,189 --> 01:40:25,000
mean anything right

1857
01:40:36,828 --> 01:40:41,849
so that the error should have been here

1858
01:40:39,929 --> 01:40:44,908
the fact that they created an error on

1859
01:40:41,849 --> 01:40:48,360
this is absurd because that is never an

1860
01:40:44,908 --> 01:40:50,609
error and wouldn't be it literally has

1861
01:40:48,359 --> 01:40:55,488
no issues whatsoever this is the part

1862
01:40:50,609 --> 01:40:55,488
where you've gone wrong right

1863
01:41:44,760 --> 01:41:50,579
the name and used in a class s so I

1864
01:41:48,180 --> 01:41:56,420
refer to the same declaration in its

1865
01:41:50,579 --> 01:41:56,420
context and when re-evaluating this

1866
01:42:11,948 --> 01:42:20,799
I mean I guess the way to read this if

1867
01:42:16,000 --> 01:42:24,010
that's what they intended was the name

1868
01:42:20,800 --> 01:42:26,260
and in this case is you know if I have a

1869
01:42:24,010 --> 01:42:30,369
tight foo and I'm naming a member foo

1870
01:42:26,260 --> 01:42:34,390
the name and is foo it's being defined

1871
01:42:30,369 --> 01:42:37,359
inside s and we're basically saying that

1872
01:42:34,390 --> 01:42:41,079
it can't refer to something different at

1873
01:42:37,359 --> 01:42:48,369
that point as later if we were to then

1874
01:42:41,079 --> 01:42:51,750
look at what it meant inside s so I

1875
01:42:48,369 --> 01:42:51,750
guess I do believe that

1876
01:43:06,868 --> 01:43:13,948
I mean that's like the dumbest decision

1877
01:43:09,210 --> 01:43:15,868
you could possibly make right I don't

1878
01:43:13,948 --> 01:43:17,819
even have words for how dumb that is

1879
01:43:15,868 --> 01:43:19,500
because you're basically putting an

1880
01:43:17,819 --> 01:43:22,769
error on something that you actually

1881
01:43:19,500 --> 01:43:25,050
want to write in code in anticipation of

1882
01:43:22,770 --> 01:43:26,909
someone later writing some code which

1883
01:43:25,050 --> 01:43:31,679
you could have made the error happen

1884
01:43:26,908 --> 01:43:34,289
then C++ is basically just a language

1885
01:43:31,679 --> 01:43:36,840
full of people who are absolutely stupid

1886
01:43:34,289 --> 01:43:38,849
and have no idea how to program putting

1887
01:43:36,840 --> 01:43:40,380
error messages in places because they're

1888
01:43:38,849 --> 01:43:40,679
worried that someone might do something

1889
01:43:40,380 --> 01:43:42,989
later

1890
01:43:40,679 --> 01:43:46,908
that's like 99% of what they did in the

1891
01:43:42,988 --> 01:43:49,649
design of C++ it's so freakin annoying I

1892
01:43:46,908 --> 01:43:51,738
think anyone who's ever contributed to

1893
01:43:49,649 --> 01:43:56,339
the C++ standard needs to have their

1894
01:43:51,738 --> 01:43:58,729
license to code revoked it's like it's

1895
01:43:56,340 --> 01:44:01,020
the only one thing I can say that is

1896
01:43:58,729 --> 01:44:03,658
universally bad that never had a good

1897
01:44:01,020 --> 01:44:06,480
idea in it right most languages have a

1898
01:44:03,658 --> 01:44:08,969
good idea in them somewhere and C++ is

1899
01:44:06,479 --> 01:44:11,129
the only language I can think of that

1900
01:44:08,969 --> 01:44:14,189
managed to never do anything right not

1901
01:44:11,130 --> 01:44:17,730
even a single line that they made in

1902
01:44:14,189 --> 01:44:20,638
their spec he is good every last

1903
01:44:17,729 --> 01:44:24,598
decision was wrong every single one is

1904
01:44:20,639 --> 01:44:26,550
wrong how do you even do that if I set

1905
01:44:24,599 --> 01:44:29,849
out to make a language filled with only

1906
01:44:26,550 --> 01:44:32,310
bad decisions I would accidentally get

1907
01:44:29,849 --> 01:44:33,569
one right probably because I hadn't

1908
01:44:32,310 --> 01:44:35,190
thought it through well enough and and

1909
01:44:33,569 --> 01:44:36,599
accidentally made a right decision when

1910
01:44:35,189 --> 01:44:38,309
I was trying to make the worst possible

1911
01:44:36,599 --> 01:44:41,340
decision I like actually made the

1912
01:44:38,310 --> 01:44:43,949
slightly less bad one because I didn't

1913
01:44:41,340 --> 01:44:45,389
think of the the ultimate bad one to

1914
01:44:43,948 --> 01:44:47,789
make like I never would have thought to

1915
01:44:45,389 --> 01:44:50,310
add that in there that's how bad that is

1916
01:44:47,789 --> 01:44:52,050
they find things they find bad decisions

1917
01:44:50,310 --> 01:44:56,280
no one else would have ever even thought

1918
01:44:52,050 --> 01:44:58,349
of I guess that's the best way to think

1919
01:44:56,279 --> 01:45:00,389
of the C bozo Standards Committee the

1920
01:44:58,349 --> 01:45:04,880
CSS Standards Committee is like a

1921
01:45:00,389 --> 01:45:12,150
30-plus year project to see if mankind

1922
01:45:04,880 --> 01:45:15,270
can find all the bad decisions it's like

1923
01:45:12,149 --> 01:45:20,868
to root out possibility and to leave you

1924
01:45:15,270 --> 01:45:20,869
only with sadness right

1925
01:45:21,130 --> 01:45:26,139
and congratulations committee you did a

1926
01:45:23,868 --> 01:45:26,139
great job

1927
01:45:34,149 --> 01:45:39,139
Allen Webster's totally right he said

1928
01:45:36,859 --> 01:45:43,300
the good idea and C++ was let's start

1929
01:45:39,139 --> 01:45:47,409
with C it's true right C is the only

1930
01:45:43,300 --> 01:45:47,409
part of C++ that works

1931
01:45:48,429 --> 01:45:55,149
should just change this game over to see

1932
01:45:50,479 --> 01:45:55,149
99 at this point

1933
01:46:12,520 --> 01:46:16,660
should I work on a game engine in C or

1934
01:46:14,739 --> 01:46:20,349
C++ or just put out games and unity

1935
01:46:16,659 --> 01:46:21,789
Unreal until J I comes out I mean it

1936
01:46:20,350 --> 01:46:25,780
really just depends on what your goals

1937
01:46:21,789 --> 01:46:27,909
are right I say that if your goals are

1938
01:46:25,779 --> 01:46:33,359
simply to be like a game designer and to

1939
01:46:27,909 --> 01:46:39,300
like to ship games primarily you know

1940
01:46:33,359 --> 01:46:48,939
just as a as a focus is on the like

1941
01:46:39,300 --> 01:46:50,050
production side of games I would say

1942
01:46:48,939 --> 01:46:53,139
that you probably want to use an

1943
01:46:50,050 --> 01:46:55,750
existing engine right because engine

1944
01:46:53,140 --> 01:46:59,770
programming is difficult and takes a lot

1945
01:46:55,750 --> 01:47:02,199
of work and if you're not really

1946
01:46:59,770 --> 01:47:05,560
interested or if that's not the primary

1947
01:47:02,199 --> 01:47:07,479
thing that you want to be doing then it

1948
01:47:05,560 --> 01:47:08,830
still does make sense to learn some

1949
01:47:07,479 --> 01:47:11,349
engine programming because it will

1950
01:47:08,829 --> 01:47:14,289
obviously help you when you're working

1951
01:47:11,350 --> 01:47:17,500
on someone else's engine like unity or

1952
01:47:14,289 --> 01:47:19,539
unreal or whatever but you don't want to

1953
01:47:17,500 --> 01:47:23,890
build your whole engine because that's

1954
01:47:19,539 --> 01:47:25,180
not where your tastes lie right engine

1955
01:47:23,890 --> 01:47:29,289
programming is for people who want to do

1956
01:47:25,180 --> 01:47:32,619
engine programming now it is true that

1957
01:47:29,289 --> 01:47:34,600
once in a while and you know I mean this

1958
01:47:32,619 --> 01:47:37,090
is I guess an unfortunate situation to

1959
01:47:34,600 --> 01:47:38,860
be in but once in a while maybe you're

1960
01:47:37,090 --> 01:47:41,739
somebody who doesn't really want to do

1961
01:47:38,859 --> 01:47:43,779
engine programming but the engines that

1962
01:47:41,739 --> 01:47:46,029
exist can't do the game that you want to

1963
01:47:43,779 --> 01:47:51,219
do because it's got specific like sort

1964
01:47:46,029 --> 01:47:53,349
of requirements technically or platform

1965
01:47:51,220 --> 01:47:56,650
wise or who knows what that just make it

1966
01:47:53,350 --> 01:47:59,079
so you can that's a bad position to be

1967
01:47:56,649 --> 01:48:00,579
in right and I think you really have to

1968
01:47:59,079 --> 01:48:03,460
think to yourself do I really want to go

1969
01:48:00,579 --> 01:48:06,130
down that road because if you're not

1970
01:48:03,460 --> 01:48:07,569
passionate about engine programming but

1971
01:48:06,130 --> 01:48:09,510
you put yourself in a position where you

1972
01:48:07,569 --> 01:48:12,579
have to make an engine to succeed that

1973
01:48:09,510 --> 01:48:13,930
sounds rough right and maybe you maybe

1974
01:48:12,579 --> 01:48:16,239
you're up to the task and you're just

1975
01:48:13,930 --> 01:48:18,310
gonna you know grit your teeth and do it

1976
01:48:16,239 --> 01:48:18,819
because you want to make that game that

1977
01:48:18,310 --> 01:48:20,800
badly

1978
01:48:18,819 --> 01:48:23,889
and if you do that more power to you

1979
01:48:20,800 --> 01:48:27,489
that's very commendable but obviously

1980
01:48:23,890 --> 01:48:29,740
it's a bit tricky right so I would say

1981
01:48:27,489 --> 01:48:31,809
most of the time the answer of should I

1982
01:48:29,739 --> 01:48:33,969
build an engine or not or should you use

1983
01:48:31,810 --> 01:48:37,990
an existing engine should be made more

1984
01:48:33,970 --> 01:48:40,630
about what you want to do with your life

1985
01:48:37,989 --> 01:48:41,739
and less about if there's a right answer

1986
01:48:40,630 --> 01:48:44,909
because I don't think there's a right

1987
01:48:41,739 --> 01:48:47,050
answer to that question the right answer

1988
01:48:44,909 --> 01:48:52,979
there's a right answer to the question

1989
01:48:47,050 --> 01:48:52,980
of what a particular person should do

1990
01:48:54,239 --> 01:49:00,119
and it's based on what they enjoy doing

1991
01:49:00,600 --> 01:49:03,600
right

1992
01:49:13,800 --> 01:49:16,890
is there any reading material you

1993
01:49:15,569 --> 01:49:18,479
recommend for more serious real-time

1994
01:49:16,890 --> 01:49:20,579
lighting like this papers books even

1995
01:49:18,479 --> 01:49:23,929
blog post etc I've done simple diffuse

1996
01:49:20,579 --> 01:49:23,930
lighting before but nothing beyond that

1997
01:49:24,140 --> 01:49:30,090
so I guess I I don't I'm sorry I don't

1998
01:49:28,199 --> 01:49:36,260
actually know what a good reference

1999
01:49:30,090 --> 01:49:36,260
would be but I guess what I would say is

2000
01:49:37,250 --> 01:49:46,050
the like one possible place to start

2001
01:49:44,220 --> 01:49:48,570
might be to just look at the SIGGRAPH

2002
01:49:46,050 --> 01:49:55,680
courses so every year SIGGRAPH puts out

2003
01:49:48,569 --> 01:49:57,809
a bunch of course notes and they're like

2004
01:49:55,680 --> 01:50:00,480
unlike their papers section which is

2005
01:49:57,810 --> 01:50:02,760
like here is something state-of-the-art

2006
01:50:00,479 --> 01:50:04,169
in theory right it's not always

2007
01:50:02,760 --> 01:50:06,659
sometimes it's something stupid but a

2008
01:50:04,170 --> 01:50:08,909
lot of times it's like some fairly new

2009
01:50:06,659 --> 01:50:10,590
research so you know even if it is

2010
01:50:08,909 --> 01:50:14,279
something stupid it's something new and

2011
01:50:10,590 --> 01:50:17,340
stupid right but it's more it's more

2012
01:50:14,279 --> 01:50:18,960
like at the boundaries of graphics right

2013
01:50:17,340 --> 01:50:20,819
like pushing it forwards is what the

2014
01:50:18,960 --> 01:50:25,710
papers are supposed to be but they also

2015
01:50:20,819 --> 01:50:27,539
have a thing that's like here's course

2016
01:50:25,710 --> 01:50:30,359
notes that are designed to be tutorials

2017
01:50:27,539 --> 01:50:33,659
for people who don't know something who

2018
01:50:30,359 --> 01:50:36,359
want to learn it right and you can even

2019
01:50:33,659 --> 01:50:38,460
go look at the ones for artists in some

2020
01:50:36,359 --> 01:50:39,719
cases because they have ones that are

2021
01:50:38,460 --> 01:50:41,640
introductions like understanding

2022
01:50:39,720 --> 01:50:44,310
lighting and BRTS for artists knowing

2023
01:50:41,640 --> 01:50:47,460
you can look at some of those course

2024
01:50:44,310 --> 01:50:48,360
notes and that would probably be a good

2025
01:50:47,460 --> 01:50:51,210
place to start

2026
01:50:48,359 --> 01:50:52,529
potentially because it's all

2027
01:50:51,210 --> 01:50:58,289
introductory and just kind of gets you

2028
01:50:52,529 --> 01:51:01,229
into it right as for actual like books

2029
01:50:58,289 --> 01:51:06,019
and stuff I don't know someone in the

2030
01:51:01,229 --> 01:51:06,019
chat was mentioning the the PBR book

2031
01:51:08,029 --> 01:51:13,199
it definitely covers everything it's

2032
01:51:10,619 --> 01:51:17,039
kind of obtuse the way it's written I

2033
01:51:13,199 --> 01:51:19,199
would say it doesn't

2034
01:51:17,039 --> 01:51:20,550
I don't like literate programming I

2035
01:51:19,199 --> 01:51:22,500
think it was a bad idea

2036
01:51:20,550 --> 01:51:24,720
and I don't like the way the PBR book

2037
01:51:22,500 --> 01:51:26,939
reads I just don't love it all the

2038
01:51:24,720 --> 01:51:27,640
information is in there but it's not the

2039
01:51:26,939 --> 01:51:32,649
easiest to

2040
01:51:27,640 --> 01:51:34,869
distract but hey you know check it out

2041
01:51:32,649 --> 01:51:37,000
if it works for you it works for you and

2042
01:51:34,869 --> 01:51:38,710
it's it's a very complete reference got

2043
01:51:37,000 --> 01:51:40,510
lots of stuff in their spectral lighting

2044
01:51:38,710 --> 01:51:42,039
and all that sort of stuff so it has

2045
01:51:40,510 --> 01:51:44,070
topics that are more advanced than

2046
01:51:42,039 --> 01:51:46,869
things you typically do in games as well

2047
01:51:44,069 --> 01:51:51,069
although obviously games are adding you

2048
01:51:46,869 --> 01:51:52,569
know more and more complexity to the

2049
01:51:51,069 --> 01:51:56,109
lighting year after year as they get

2050
01:51:52,569 --> 01:52:01,090
more power so you know eventually it'll

2051
01:51:56,109 --> 01:52:05,920
all be in there but I don't really know

2052
01:52:01,090 --> 01:52:09,279
what what to say beyond that there's

2053
01:52:05,920 --> 01:52:11,920
probably some good online materials for

2054
01:52:09,279 --> 01:52:14,170
introduction to lighting I just don't

2055
01:52:11,920 --> 01:52:15,940
know what they are right but they're

2056
01:52:14,170 --> 01:52:18,399
probably out there there's a lot of blog

2057
01:52:15,939 --> 01:52:20,019
posts there's a lot of tutorial material

2058
01:52:18,399 --> 01:52:21,699
on the sort of thing there's probably a

2059
01:52:20,020 --> 01:52:23,590
good one out there somewhere I just I

2060
01:52:21,699 --> 01:52:25,359
don't know what it is because I haven't

2061
01:52:23,590 --> 01:52:27,190
read it but that doesn't mean doesn't

2062
01:52:25,359 --> 01:52:31,409
exist I just I don't go looking for

2063
01:52:27,189 --> 01:52:31,409
introductory lighting stuff very often

2064
01:52:32,220 --> 01:52:39,460
so you know so I don't know and then the

2065
01:52:36,939 --> 01:52:42,719
other thing you can do which helps I

2066
01:52:39,460 --> 01:52:45,340
think is take a look at you know

2067
01:52:42,720 --> 01:52:48,579
conference proceedings from game

2068
01:52:45,340 --> 01:52:49,840
conferences like you know GDC develop or

2069
01:52:48,579 --> 01:52:51,250
I don't know I don't even know what the

2070
01:52:49,840 --> 01:52:53,680
conferences are these days all those

2071
01:52:51,250 --> 01:52:57,609
crazy conferences a lot of times those

2072
01:52:53,680 --> 01:53:00,220
also have them you know and sometimes

2073
01:52:57,609 --> 01:53:02,049
game developers put together pretty good

2074
01:53:00,220 --> 01:53:03,460
learning materials for stuff like

2075
01:53:02,050 --> 01:53:06,989
real-time lighting because you know hey

2076
01:53:03,460 --> 01:53:06,989
we're the ones who do it a lot of times

2077
01:53:09,539 --> 01:53:15,869
so you know that's that's another place

2078
01:53:13,569 --> 01:53:15,869
to look

2079
01:53:23,229 --> 01:53:29,229
and Oliver the best cat just to be clear

2080
01:53:26,770 --> 01:53:33,460
there are no good programming languages

2081
01:53:29,229 --> 01:53:37,419
today period programming language design

2082
01:53:33,460 --> 01:53:40,899
is way way way behind the capabilities

2083
01:53:37,420 --> 01:53:45,310
of current computing so the reason

2084
01:53:40,899 --> 01:53:48,399
everyone's saying that this and that is

2085
01:53:45,310 --> 01:53:50,410
terrible is because it is everything is

2086
01:53:48,399 --> 01:53:54,159
way behind it we use C++ in the game

2087
01:53:50,409 --> 01:53:55,779
industry primarily because there aren't

2088
01:53:54,159 --> 01:53:57,639
good languages available for what we

2089
01:53:55,779 --> 01:54:01,719
need it's not because it's good it's not

2090
01:53:57,640 --> 01:54:03,660
it sucks it's a piece of crap we use it

2091
01:54:01,720 --> 01:54:08,070
because we don't have a choice and

2092
01:54:03,659 --> 01:54:11,859
that's that's really all there is to it

2093
01:54:08,069 --> 01:54:14,319
so it's ok you know lots of people have

2094
01:54:11,859 --> 01:54:17,319
done things with poor tools right it's

2095
01:54:14,319 --> 01:54:19,479
alright it's not a problem it's just

2096
01:54:17,319 --> 01:54:25,779
that's what that's what you're dealing

2097
01:54:19,479 --> 01:54:27,849
with right and so it's ok you know I

2098
01:54:25,779 --> 01:54:30,759
guess I say it's it's ok we all get by

2099
01:54:27,850 --> 01:54:31,810
you can - it's fine the reason we say

2100
01:54:30,760 --> 01:54:33,280
everything sucks is just to make sure

2101
01:54:31,810 --> 01:54:35,410
everyone knows that everything sucks and

2102
01:54:33,279 --> 01:54:36,849
what we would like to have at some point

2103
01:54:35,409 --> 01:54:40,960
is better programming languages for

2104
01:54:36,850 --> 01:54:43,510
games we don't have them now we'd like

2105
01:54:40,960 --> 01:54:45,250
to have them later obviously John is

2106
01:54:43,510 --> 01:54:50,470
working on jei which is an example of

2107
01:54:45,250 --> 01:54:51,939
trying to do that and a lot of us hope

2108
01:54:50,470 --> 01:54:53,380
that it comes out well because hey then

2109
01:54:51,939 --> 01:54:57,069
there would actually be a language

2110
01:54:53,380 --> 01:54:58,359
written for game programming that maybe

2111
01:54:57,069 --> 01:54:59,739
makes it a little bit easier to do all

2112
01:54:58,359 --> 01:55:01,839
the things we typically do on a daily

2113
01:54:59,739 --> 01:55:03,250
basis instead of having to deal with C++

2114
01:55:01,840 --> 01:55:06,840
which makes everything that we don't do

2115
01:55:03,250 --> 01:55:06,840
any base is harder than it should be so

2116
01:55:10,050 --> 01:55:15,090
that's just the state of the that's just

2117
01:55:12,640 --> 01:55:15,090
the state of it

2118
01:55:21,300 --> 01:55:24,970
ji demo on macros is in an hour and a

2119
01:55:24,489 --> 01:55:28,979
half

2120
01:55:24,970 --> 01:55:31,869
oh that's good that's very good

2121
01:55:28,979 --> 01:55:33,579
so John isn't it doesn't have a stream

2122
01:55:31,869 --> 01:55:36,180
up yet though can we rate because we can

2123
01:55:33,579 --> 01:55:36,180
trade him can we

2124
01:55:47,368 --> 01:55:50,368
John

2125
01:56:04,130 --> 01:56:11,260
I would like to be able to raid John's

2126
01:56:06,560 --> 01:56:14,810
channel but unfortunately I can't

2127
01:56:11,260 --> 01:56:24,110
because I think he has to be live for

2128
01:56:14,810 --> 01:56:28,160
that to happen am I wrong about that I'm

2129
01:56:24,109 --> 01:56:29,269
probably not wrong about that so we've

2130
01:56:28,159 --> 01:56:31,369
you know we've come to the end of my

2131
01:56:29,270 --> 01:56:33,410
stream I'd like to raid John I can't

2132
01:56:31,369 --> 01:56:34,939
read John doesn't much matter because

2133
01:56:33,409 --> 01:56:40,250
almost everyone who watches this channel

2134
01:56:34,939 --> 01:56:46,210
watched a channel 2 so it's probably

2135
01:56:40,250 --> 01:56:46,210
fine but you know

2136
01:56:52,600 --> 01:56:56,750
yeah all over the musca it's just true

2137
01:56:55,010 --> 01:57:03,199
it's true these are really poorly

2138
01:56:56,750 --> 01:57:08,000
designed languages you gotta call a

2139
01:57:03,199 --> 01:57:10,279
spade a spade C++ is a really garbage

2140
01:57:08,000 --> 01:57:12,409
language and I think that will be

2141
01:57:10,279 --> 01:57:16,309
obvious you know ten years from now 20

2142
01:57:12,409 --> 01:57:18,500
years from now I think we'll have really

2143
01:57:16,310 --> 01:57:21,080
good replacement languages for doing

2144
01:57:18,500 --> 01:57:22,489
low-level programming and I think when

2145
01:57:21,079 --> 01:57:23,960
you look at those languages and you look

2146
01:57:22,489 --> 01:57:27,710
back on sleep especially like wow see

2147
01:57:23,960 --> 01:57:29,210
this this is a real piece of crap so I

2148
01:57:27,710 --> 01:57:32,480
think that will be obvious to everyone

2149
01:57:29,210 --> 01:57:34,310
eventually if it's not obvious now so

2150
01:57:32,479 --> 01:57:36,949
we're just we're just calling it like it

2151
01:57:34,310 --> 01:57:44,330
like it is again you still have to use

2152
01:57:36,949 --> 01:57:47,179
it nothing we can do about that but but

2153
01:57:44,329 --> 01:57:49,930
that's just that that's just the the

2154
01:57:47,180 --> 01:57:49,930
reality of it right

2155
01:57:58,340 --> 01:58:05,300
all right um I'm gonna go ahead and shut

2156
01:58:03,090 --> 01:58:05,300
down

2157
01:58:20,269 --> 01:58:24,469
all right thank you everyone for joining

2158
01:58:22,698 --> 01:58:25,729
me for an episode of hand made here oh

2159
01:58:24,469 --> 01:58:27,050
it's a pleasure coding with you as

2160
01:58:25,729 --> 01:58:28,218
always if you would like to follow in

2161
01:58:27,050 --> 01:58:29,840
series at home you can always pre-order

2162
01:58:28,219 --> 01:58:31,819
the game on handmade hero dot org and it

2163
01:58:29,840 --> 01:58:33,828
comes with the source code so you can

2164
01:58:31,819 --> 01:58:36,408
play around with it at home and do your

2165
01:58:33,828 --> 01:58:38,988
own educational experiments I will be

2166
01:58:36,408 --> 01:58:41,748
back here tomorrow when we will take a

2167
01:58:38,988 --> 01:58:43,879
look at the outer part of the Ray

2168
01:58:41,748 --> 01:58:49,969
casting loop where we update the light

2169
01:58:43,880 --> 01:58:54,199
probe information and that I guess will

2170
01:58:49,969 --> 01:58:55,760
be the final step in the light

2171
01:58:54,198 --> 01:58:58,098
propagation part of the system so we

2172
01:58:55,760 --> 01:59:00,800
will probably do that and then start the

2173
01:58:58,099 --> 01:59:04,489
de bugging process to try and get our

2174
01:59:00,800 --> 01:59:06,679
light probes feeling solid and and and

2175
01:59:04,488 --> 01:59:08,149
computing the right answers so I think

2176
01:59:06,679 --> 01:59:09,529
we'll try to hopefully that'll happen

2177
01:59:08,149 --> 01:59:11,170
tomorrow we'll get through that I don't

2178
01:59:09,529 --> 01:59:14,090
know maybe we won't will maybe we won't

2179
01:59:11,170 --> 01:59:17,359
and then next weekend we'll finish that

2180
01:59:14,090 --> 01:59:20,360
debugging hopefully and we can move on

2181
01:59:17,359 --> 01:59:21,408
to the GPU side of things that's it hope

2182
01:59:20,359 --> 01:59:25,009
see you back here tomorrow for that

2183
01:59:21,408 --> 01:59:27,049
until then remember J a I demo is coming

2184
01:59:25,010 --> 01:59:29,780
up in an hour and a half I'm told on Jos

2185
01:59:27,050 --> 01:59:40,219
channel that's twitch.tv slash and they

2186
01:59:29,779 --> 01:59:42,319
say or 88 right that is this channel

2187
01:59:40,219 --> 01:59:45,760
right here so check that out in an hour

2188
01:59:42,319 --> 01:59:48,018
and a half and also I would mention

2189
01:59:45,760 --> 01:59:51,619
there's been some news

2190
01:59:48,019 --> 01:59:56,389
Abner Cowan Bray is running this

2191
01:59:51,618 --> 01:59:59,479
conference in Seattle and he just

2192
01:59:56,389 --> 02:00:02,929
recently announced that fabien will be

2193
01:59:59,479 --> 02:00:05,149
speaking at it if you don't already have

2194
02:00:02,929 --> 02:00:08,059
tickets to this or you were on the fence

2195
02:00:05,149 --> 02:00:11,058
about it I would say that pretty much

2196
02:00:08,059 --> 02:00:13,159
that's an extreme rarity I don't

2197
02:00:11,059 --> 02:00:16,279
remember the last time fob Ian's given a

2198
02:00:13,158 --> 02:00:18,408
lecture I he's one of the best slow

2199
02:00:16,279 --> 02:00:21,099
level programmers that currently exists

2200
02:00:18,408 --> 02:00:25,368
in the world I would argue

2201
02:00:21,099 --> 02:00:26,900
sorry Fabien if I'm if I'm aggrandizing

2202
02:00:25,368 --> 02:00:28,399
you at this point but maybe he's not

2203
02:00:26,899 --> 02:00:29,710
listening probably won't hear this so

2204
02:00:28,399 --> 02:00:33,769
it's fine

2205
02:00:29,710 --> 02:00:36,319
so I would say like that's gonna

2206
02:00:33,770 --> 02:00:39,740
be a pretty incredible speaker line up

2207
02:00:36,319 --> 02:00:43,130
here and that's pretty awesome that he

2208
02:00:39,739 --> 02:00:45,949
agreed to do that so I'm looking forward

2209
02:00:43,130 --> 02:00:46,970
to it and I would assume that anyone

2210
02:00:45,949 --> 02:00:49,220
else out there who cares about

2211
02:00:46,970 --> 02:00:50,570
Louisville programming was is as well so

2212
02:00:49,220 --> 02:00:52,699
just wanted to point out that that

2213
02:00:50,569 --> 02:00:56,239
speaker had been updated Mike and Tom

2214
02:00:52,699 --> 02:00:58,130
had been confirmed before but Fabien

2215
02:00:56,239 --> 02:01:00,279
just got added just I don't even know

2216
02:00:58,130 --> 02:01:02,630
like two to three days ago or whatever

2217
02:01:00,279 --> 02:01:05,149
so that's kind of awesome I can't wait

2218
02:01:02,630 --> 02:01:07,310
to see what he talks about

2219
02:01:05,149 --> 02:01:10,399
I learned stuff from him all the time

2220
02:01:07,310 --> 02:01:12,770
and so I'm looking forward to that and I

2221
02:01:10,399 --> 02:01:14,359
hope you are too that's about it for

2222
02:01:12,770 --> 02:01:16,310
today I will see everyone back here

2223
02:01:14,359 --> 02:01:17,929
tomorrow where we'll start to work on

2224
02:01:16,310 --> 02:01:19,580
the light probe updating part of things

2225
02:01:17,930 --> 02:01:21,920
until then have fun programming everyone

2226
02:01:19,579 --> 02:01:24,250
and I will see you on the Internet

2227
02:01:21,920 --> 02:01:24,250
take it easy

