1
00:00:00,920 --> 00:00:05,309
hello everybody and welcome to hand made

2
00:00:03,629 --> 00:00:09,808
here sure we code a complete game live

3
00:00:05,309 --> 00:00:12,509
on stream we are going to probably move

4
00:00:09,808 --> 00:00:15,178
up a level in complexity with our

5
00:00:12,509 --> 00:00:17,190
lighting today so what we have done and

6
00:00:15,179 --> 00:00:19,410
I guess I should go ahead and run it

7
00:00:17,190 --> 00:00:22,230
here to bring everyone up to speed on

8
00:00:19,410 --> 00:00:25,469
where we are we did a simple test of the

9
00:00:22,230 --> 00:00:27,630
Ray casting and used it for debugging

10
00:00:25,469 --> 00:00:29,698
and what we have running now as you can

11
00:00:27,629 --> 00:00:31,079
see is an example where you can move a

12
00:00:29,699 --> 00:00:33,570
light through the environment and it

13
00:00:31,079 --> 00:00:36,329
will do a fairly perfect radial

14
00:00:33,570 --> 00:00:39,030
interpolation on services that it does

15
00:00:36,329 --> 00:00:41,789
hit and then a simple like you know

16
00:00:39,030 --> 00:00:43,710
binary like on/off kind of thing

17
00:00:41,789 --> 00:00:46,320
for shadowing which again is not

18
00:00:43,710 --> 00:00:47,939
something we actually wanted you know we

19
00:00:46,320 --> 00:00:49,619
don't actually want to use that effect

20
00:00:47,939 --> 00:00:52,409
in the lighting it's not something I'm

21
00:00:49,619 --> 00:00:55,198
going for but this was basically a test

22
00:00:52,409 --> 00:00:57,479
to ensure that we could get reliable ray

23
00:00:55,198 --> 00:00:59,429
casting results and it seems like we've

24
00:00:57,479 --> 00:01:02,968
done that pretty well so I feel like

25
00:00:59,429 --> 00:01:05,239
we're in a you know and a good we're in

26
00:01:02,969 --> 00:01:07,500
a good place right now in terms of

27
00:01:05,239 --> 00:01:10,169
feeling confident that our ray caster

28
00:01:07,500 --> 00:01:11,760
isn't completely broken and it's also

29
00:01:10,170 --> 00:01:13,950
running plenty fast enough at the moment

30
00:01:11,760 --> 00:01:16,080
this is not even multi-threaded right

31
00:01:13,950 --> 00:01:18,689
now this is entirely single threaded

32
00:01:16,079 --> 00:01:20,400
that that's running which is kind of

33
00:01:18,688 --> 00:01:24,059
great and it appears to be running nice

34
00:01:20,400 --> 00:01:26,130
and nice and 60-ish so basically we're

35
00:01:24,060 --> 00:01:28,019
in a good position now to say let's take

36
00:01:26,129 --> 00:01:29,280
the next jump up and start trying to do

37
00:01:28,019 --> 00:01:31,849
the lighting a little bit more

38
00:01:29,280 --> 00:01:35,000
realistically this is again also

39
00:01:31,849 --> 00:01:37,469
computing the lighting every frame

40
00:01:35,000 --> 00:01:39,569
rather than using an average over a few

41
00:01:37,469 --> 00:01:41,158
frames which we'd like to do and so what

42
00:01:39,569 --> 00:01:46,139
we want to do now is sort of start to

43
00:01:41,159 --> 00:01:49,920
move towards that more complex more

44
00:01:46,140 --> 00:01:52,469
complete solution and we have you know

45
00:01:49,920 --> 00:01:54,868
sort of three things we want to do two

46
00:01:52,469 --> 00:01:57,569
of them I think aren't so hard one of

47
00:01:54,868 --> 00:02:00,060
them is potentially hard so the three

48
00:01:57,569 --> 00:02:01,679
things that we want to do number one we

49
00:02:00,060 --> 00:02:03,390
want to start averaging across frames we

50
00:02:01,680 --> 00:02:04,920
set ourselves up to do this so that is

51
00:02:03,390 --> 00:02:07,349
really just a matter of debugging

52
00:02:04,920 --> 00:02:09,840
we've already pretty much figured out

53
00:02:07,349 --> 00:02:12,870
how that will work and we know what we

54
00:02:09,840 --> 00:02:13,950
want to do there namely our voxel is

55
00:02:12,870 --> 00:02:16,920
already set up to

56
00:02:13,949 --> 00:02:18,988
able to save across runs and we will

57
00:02:16,919 --> 00:02:20,789
just save the voxel and average it in

58
00:02:18,989 --> 00:02:22,378
the only thing that will be tricky about

59
00:02:20,789 --> 00:02:23,639
that is making sure that the voxel

60
00:02:22,378 --> 00:02:27,899
copies itself to the correct location

61
00:02:23,639 --> 00:02:29,219
during center of simulation jumps so we

62
00:02:27,900 --> 00:02:30,870
have to do that particular piece of the

63
00:02:29,219 --> 00:02:32,550
code but that's the only thing that we

64
00:02:30,870 --> 00:02:34,409
really need to do to get the averaging

65
00:02:32,550 --> 00:02:36,510
working so we want to do that that's

66
00:02:34,409 --> 00:02:37,859
number one and we might just do that

67
00:02:36,509 --> 00:02:39,329
right off the bat that may be the four

68
00:02:37,860 --> 00:02:41,730
because we can do that even with this

69
00:02:39,330 --> 00:02:43,500
right we could take this solution here

70
00:02:41,729 --> 00:02:46,619
and just smooth it over time and we

71
00:02:43,500 --> 00:02:49,500
would see like a some lag on that shadow

72
00:02:46,620 --> 00:02:52,319
right and a smoother like a gradual lag

73
00:02:49,500 --> 00:02:55,500
on that shadow or something right and so

74
00:02:52,318 --> 00:02:56,699
you can imagine that that averaging step

75
00:02:55,500 --> 00:03:00,689
is something that's pretty easy to do

76
00:02:56,699 --> 00:03:03,379
and we could totally do that the next

77
00:03:00,689 --> 00:03:06,000
thing that we have is we've got to do

78
00:03:03,379 --> 00:03:07,859
indirect bounce real indirect bounce and

79
00:03:06,000 --> 00:03:10,889
convection that's a little more

80
00:03:07,860 --> 00:03:13,049
complicated again but nothing tricky we

81
00:03:10,889 --> 00:03:15,869
already have the Ray caster we already

82
00:03:13,049 --> 00:03:17,159
have a way to sample from voxels so we

83
00:03:15,870 --> 00:03:18,719
kind of know exactly what we're writing

84
00:03:17,159 --> 00:03:21,299
there again it's not particularly tricky

85
00:03:18,719 --> 00:03:24,889
it's just gonna be a piece of code that

86
00:03:21,299 --> 00:03:28,079
says look when you hit a particular

87
00:03:24,889 --> 00:03:30,389
piece of the geometry you're gonna want

88
00:03:28,079 --> 00:03:32,129
to look up in the voxel what the

89
00:03:30,389 --> 00:03:35,909
lighting is there and and put it back

90
00:03:32,129 --> 00:03:36,840
right and the final thing that we need

91
00:03:35,909 --> 00:03:39,329
to do is the one that's really

92
00:03:36,840 --> 00:03:41,789
complicated and it affects both of these

93
00:03:39,329 --> 00:03:45,870
things which is that if we just do a

94
00:03:41,789 --> 00:03:47,608
basic addition into our lighting voxel I

95
00:03:45,870 --> 00:03:49,469
don't think we're gonna get very good

96
00:03:47,609 --> 00:03:51,209
results we would like I mean maybe we'll

97
00:03:49,469 --> 00:03:54,090
get okay results but I think we can do a

98
00:03:51,209 --> 00:03:57,269
lot better than that because basically

99
00:03:54,090 --> 00:03:58,950
our voxel allows us at 60 frames a

100
00:03:57,269 --> 00:04:01,920
second quite easily as we've determined

101
00:03:58,949 --> 00:04:04,919
to interpolate quite a bit of

102
00:04:01,919 --> 00:04:07,108
information and so the other thing that

103
00:04:04,919 --> 00:04:09,358
we need to kind of solve and this is the

104
00:04:07,109 --> 00:04:14,340
one that's that's a much harder problem

105
00:04:09,359 --> 00:04:18,000
and a much more broad I think is how do

106
00:04:14,340 --> 00:04:20,160
we best store and update this lighting

107
00:04:18,000 --> 00:04:22,108
information because we have a will have

108
00:04:20,160 --> 00:04:24,599
a fantastic amount of information coming

109
00:04:22,108 --> 00:04:27,029
into the system basically an

110
00:04:24,598 --> 00:04:27,839
embarrassment of riches in a sense we

111
00:04:27,029 --> 00:04:30,329
will have

112
00:04:27,839 --> 00:04:32,939
between four - like shouldn't say

113
00:04:30,329 --> 00:04:34,829
between four eight twelve or sixteen

114
00:04:32,939 --> 00:04:38,100
depending on what we can get away with

115
00:04:34,829 --> 00:04:42,930
in terms of speed new ray casts coming

116
00:04:38,100 --> 00:04:44,490
in at each voxel right or at each light

117
00:04:42,930 --> 00:04:47,310
probe and then spread out to voxels

118
00:04:44,490 --> 00:04:50,069
let's see how we want to do it we will

119
00:04:47,310 --> 00:04:53,668
have the previous frames complete

120
00:04:50,069 --> 00:04:56,849
information and we will then need to

121
00:04:53,668 --> 00:04:59,250
decide how we want to combine those

122
00:04:56,850 --> 00:05:02,220
results to create the new lighting for

123
00:04:59,250 --> 00:05:04,439
the the subsequent frame and while we

124
00:05:02,220 --> 00:05:06,240
know some basic things about it like

125
00:05:04,439 --> 00:05:08,279
okay we can obviously mix these together

126
00:05:06,240 --> 00:05:10,710
with a simple linear blend that updates

127
00:05:08,279 --> 00:05:14,549
it over time or whatever else right we

128
00:05:10,709 --> 00:05:16,829
we we don't have to think very hard

129
00:05:14,550 --> 00:05:19,770
about how to blend values necessarily

130
00:05:16,829 --> 00:05:21,389
but what we don't know is how are we

131
00:05:19,769 --> 00:05:23,579
storing these and how are we

132
00:05:21,389 --> 00:05:26,490
distributing them about the voxel and

133
00:05:23,579 --> 00:05:28,589
then reconstructing them what we've got

134
00:05:26,490 --> 00:05:33,060
in there right now is essentially like

135
00:05:28,589 --> 00:05:36,478
four light fields with a normal and an

136
00:05:33,060 --> 00:05:40,350
intensity / light field basically right

137
00:05:36,478 --> 00:05:43,469
and we know that that's something that

138
00:05:40,350 --> 00:05:45,390
can interpolate one light exactly right

139
00:05:43,470 --> 00:05:48,030
we can do a very good job interpolating

140
00:05:45,389 --> 00:05:50,430
a single light source exactly we proved

141
00:05:48,029 --> 00:05:53,819
that by having a perfectly spherical

142
00:05:50,430 --> 00:05:56,038
fall off that reconstructed exactly even

143
00:05:53,819 --> 00:05:57,478
though our voxel is not even close to

144
00:05:56,038 --> 00:05:58,168
the resolution that would be necessary

145
00:05:57,478 --> 00:05:59,699
to do that

146
00:05:58,168 --> 00:06:01,560
so we proved that that field

147
00:05:59,699 --> 00:06:02,610
reconstructs exactly per pixel even

148
00:06:01,560 --> 00:06:05,970
though we're not storing it anywhere

149
00:06:02,610 --> 00:06:08,850
close to per pixel but the question is

150
00:06:05,970 --> 00:06:10,289
once we introduce sort of a rich

151
00:06:08,850 --> 00:06:12,120
lighting environment where light is

152
00:06:10,288 --> 00:06:14,129
coming from everywhere the floor the

153
00:06:12,120 --> 00:06:17,610
ceiling the walls right it's bouncing

154
00:06:14,129 --> 00:06:20,399
around what is the actual fundamental

155
00:06:17,610 --> 00:06:23,939
way that we combine these values right

156
00:06:20,399 --> 00:06:25,709
and so that's the part that I feel like

157
00:06:23,939 --> 00:06:27,478
we don't really know or at least I don't

158
00:06:25,709 --> 00:06:29,189
really know and so that's the part that

159
00:06:27,478 --> 00:06:30,478
I'm not sure what to do about and so

160
00:06:29,189 --> 00:06:32,550
when we look at what we're doing going

161
00:06:30,478 --> 00:06:34,680
forward I think those first two things I

162
00:06:32,550 --> 00:06:36,449
listed are just a case of rolling up our

163
00:06:34,680 --> 00:06:38,430
sleeves and implementing them there

164
00:06:36,449 --> 00:06:40,469
isn't a lot of mystery there we know

165
00:06:38,430 --> 00:06:41,459
what we're doing and we have basic

166
00:06:40,470 --> 00:06:43,500
solutions in place

167
00:06:41,459 --> 00:06:46,139
just need to be like wired up and

168
00:06:43,500 --> 00:06:47,879
debugged and improved right and that's a

169
00:06:46,139 --> 00:06:51,539
good place to be but well we

170
00:06:47,879 --> 00:06:53,129
fundamentally don't know is a whether or

171
00:06:51,540 --> 00:06:55,590
not what we've got right now for the

172
00:06:53,129 --> 00:06:56,969
voxel is the right thing to do right

173
00:06:55,589 --> 00:06:59,639
because there's other wait you know we

174
00:06:56,970 --> 00:07:03,180
could we've we basically know our voxel

175
00:06:59,639 --> 00:07:05,069
is a way of storing literally eight four

176
00:07:03,180 --> 00:07:08,639
element things for reconstruction so we

177
00:07:05,069 --> 00:07:10,409
know we have a lot of power there we

178
00:07:08,639 --> 00:07:13,139
just don't know what to do with it and

179
00:07:10,410 --> 00:07:14,460
so we may find that like okay we need to

180
00:07:13,139 --> 00:07:16,019
fall back and do something like

181
00:07:14,459 --> 00:07:17,759
spherical harmonics or something like

182
00:07:16,019 --> 00:07:19,560
this because it turns out that there's

183
00:07:17,759 --> 00:07:21,569
really no way to update for light fields

184
00:07:19,560 --> 00:07:24,149
in in a coherent way and you need

185
00:07:21,569 --> 00:07:26,310
something else to do it maybe we need to

186
00:07:24,149 --> 00:07:30,089
just figure out like how it's feeding

187
00:07:26,310 --> 00:07:34,110
time for the puss you coming for food

188
00:07:30,089 --> 00:07:36,209
plus the puss is unsure she's kind of

189
00:07:34,110 --> 00:07:40,020
she's kind of hopping over into the food

190
00:07:36,209 --> 00:07:42,000
bowl she's looking around and so we

191
00:07:40,019 --> 00:07:44,099
don't really know and and that's really

192
00:07:42,000 --> 00:07:46,560
it's unknown things are the kinds of

193
00:07:44,100 --> 00:07:47,490
things that that usually take the

194
00:07:46,560 --> 00:07:49,920
longest because they take some

195
00:07:47,490 --> 00:07:51,210
exploration to figure out so that's the

196
00:07:49,920 --> 00:07:53,370
complete picture for what we're doing

197
00:07:51,209 --> 00:07:55,259
this weekend and who knows how far we'll

198
00:07:53,370 --> 00:07:56,910
get on it but like I said the first two

199
00:07:55,259 --> 00:07:59,939
or maybe there was to start with because

200
00:07:56,910 --> 00:08:02,610
we can we know that we can just kind of

201
00:07:59,939 --> 00:08:05,670
get to work on those and produce you

202
00:08:02,610 --> 00:08:08,819
know some some usable code just by like

203
00:08:05,670 --> 00:08:10,530
focusing on on debugging and improving

204
00:08:08,819 --> 00:08:12,240
what we already have and that's you know

205
00:08:10,529 --> 00:08:14,369
might as well get that done first

206
00:08:12,240 --> 00:08:16,230
because we know we can do it and then

207
00:08:14,370 --> 00:08:18,420
once we have those done just focus on

208
00:08:16,230 --> 00:08:19,980
like okay now that we have all the

209
00:08:18,420 --> 00:08:23,460
inputs the system how do we make the

210
00:08:19,980 --> 00:08:26,040
system actually work well so if we jump

211
00:08:23,459 --> 00:08:27,839
over to the lighting if we go ahead and

212
00:08:26,040 --> 00:08:30,360
look at this code the first thing that

213
00:08:27,839 --> 00:08:31,919
you'll notice is that like that test

214
00:08:30,360 --> 00:08:34,379
code we've got it in this thing that's

215
00:08:31,920 --> 00:08:38,340
like where it's a test cast from probe

216
00:08:34,379 --> 00:08:40,590
right so this right here so what we're

217
00:08:38,340 --> 00:08:42,300
doing curious were just you know doing

218
00:08:40,590 --> 00:08:46,889
literally a test piece of test code

219
00:08:42,299 --> 00:08:49,529
we're casting here by clearing the voxel

220
00:08:46,889 --> 00:08:51,419
then stepping through each of the light

221
00:08:49,529 --> 00:08:54,870
probes in the system of which there are

222
00:08:51,419 --> 00:08:55,769
many we're doing a test ray cast to the

223
00:08:54,870 --> 00:08:58,110
light source

224
00:08:55,769 --> 00:08:59,789
and then in addition to having some

225
00:08:58,110 --> 00:09:01,230
debug code in here which were we don't

226
00:08:59,789 --> 00:09:03,118
have enabled right now you can see here

227
00:09:01,230 --> 00:09:04,619
that we're basically turning off the

228
00:09:03,119 --> 00:09:08,369
test case but you know it's there for

229
00:09:04,619 --> 00:09:10,860
when we need it for debugging I in the

230
00:09:08,369 --> 00:09:12,778
case where we have not hit anything

231
00:09:10,860 --> 00:09:14,789
we spread out the lighting information

232
00:09:12,778 --> 00:09:16,198
that we have and call it a day now

233
00:09:14,789 --> 00:09:18,088
that's not even what we would want to do

234
00:09:16,198 --> 00:09:19,498
even if this is what we were trying to

235
00:09:18,089 --> 00:09:21,179
do permanently we would want to spam out

236
00:09:19,499 --> 00:09:22,499
to the voxel and we would want to put

237
00:09:21,178 --> 00:09:23,970
like negative lighting in there if you

238
00:09:22,499 --> 00:09:26,480
couldn't see this one to say that there

239
00:09:23,970 --> 00:09:29,100
was a shadow coming in this direction

240
00:09:26,480 --> 00:09:30,920
but again like this is not what this was

241
00:09:29,100 --> 00:09:33,899
for this was not trying to reproduce

242
00:09:30,919 --> 00:09:36,628
lighting accurately or interestingly it

243
00:09:33,899 --> 00:09:38,220
was just trying to show us definitively

244
00:09:36,629 --> 00:09:40,889
whether or not the ray casting was

245
00:09:38,220 --> 00:09:43,559
properly working and we in we did have a

246
00:09:40,889 --> 00:09:45,749
bunch of bugs it did its job nicely like

247
00:09:43,558 --> 00:09:47,639
we were able to find our bugs in a much

248
00:09:45,749 --> 00:09:49,619
faster way than if we had tried to roll

249
00:09:47,639 --> 00:09:51,298
this together and been wondering whether

250
00:09:49,619 --> 00:09:52,739
the lighting was working or not and you

251
00:09:51,298 --> 00:09:57,178
know trying to see from kind of subtle

252
00:09:52,739 --> 00:10:01,429
stuff so what we would like to move to

253
00:09:57,178 --> 00:10:04,860
now is the actual lighting calculation

254
00:10:01,428 --> 00:10:06,720
here in compute light propagation so

255
00:10:04,860 --> 00:10:10,798
what you can see here is this is set up

256
00:10:06,720 --> 00:10:14,579
for multi-threading and I guess I'm not

257
00:10:10,798 --> 00:10:19,678
sure so is this how was this compute

258
00:10:14,578 --> 00:10:21,508
propagation work so this okay so we

259
00:10:19,678 --> 00:10:23,220
basically had this set up to see if we

260
00:10:21,509 --> 00:10:25,889
wanted to be basically turn it to single

261
00:10:23,220 --> 00:10:28,139
threaded is what that was doing but

262
00:10:25,889 --> 00:10:29,999
anyway this right here this compute

263
00:10:28,139 --> 00:10:31,649
light propagation is what we're looking

264
00:10:29,999 --> 00:10:34,528
at and what the compute light

265
00:10:31,649 --> 00:10:36,568
propagation is doing is it's building a

266
00:10:34,528 --> 00:10:38,490
bunch of work structures those work

267
00:10:36,568 --> 00:10:40,528
structures are for multi-threading the

268
00:10:38,490 --> 00:10:44,009
lighting and what you can see is they

269
00:10:40,528 --> 00:10:46,350
all kind of will call called down to a

270
00:10:44,009 --> 00:10:48,449
workhorse routine which is this one here

271
00:10:46,350 --> 00:10:50,699
which is the actual compute lighting

272
00:10:48,448 --> 00:10:52,828
propagation now they should probably be

273
00:10:50,698 --> 00:10:54,058
called something different so it's a

274
00:10:52,828 --> 00:10:55,738
little easier to see which one is which

275
00:10:54,058 --> 00:10:57,749
like this right and then if I go to

276
00:10:55,739 --> 00:11:01,079
compute light propagation we should

277
00:10:57,749 --> 00:11:03,389
probably have that work thusly so you

278
00:11:01,078 --> 00:11:06,328
know we can see which one is which just

279
00:11:03,389 --> 00:11:08,068
makes it a little bit clearer so anyway

280
00:11:06,328 --> 00:11:09,328
what we want to do here is make sure

281
00:11:08,068 --> 00:11:11,719
that the

282
00:11:09,328 --> 00:11:21,988
these are working well and it looks like

283
00:11:11,720 --> 00:11:25,079
do lighting work wait a minute so what

284
00:11:21,989 --> 00:11:28,379
is going on here with with do lighting

285
00:11:25,078 --> 00:11:30,058
work do lighting work as what exactly

286
00:11:28,379 --> 00:11:33,980
sorry we haven't looked at this in a

287
00:11:30,058 --> 00:11:38,488
while ah so this callback here yeah

288
00:11:33,980 --> 00:11:41,659
there we go so anyway this I don't know

289
00:11:38,489 --> 00:11:44,100
why we don't just wrap this thing up

290
00:11:41,659 --> 00:11:46,948
actually like I'm not sure why this is

291
00:11:44,100 --> 00:11:49,798
doing a separate call out like that that

292
00:11:46,948 --> 00:11:51,719
seems unnecessary I'm gonna just take a

293
00:11:49,798 --> 00:11:54,629
quick look at platform work you call

294
00:11:51,720 --> 00:11:59,879
back just to see what that actually is

295
00:11:54,629 --> 00:12:03,449
doing so it's just a platform work queue

296
00:11:59,879 --> 00:12:05,369
and some data I don't know why it passes

297
00:12:03,448 --> 00:12:07,409
the work queue exactly I don't know if

298
00:12:05,369 --> 00:12:11,850
that queue is actually used hold on a

299
00:12:07,409 --> 00:12:14,278
second let's see so it's not so if we

300
00:12:11,850 --> 00:12:16,048
wanted to what we could do here is not

301
00:12:14,278 --> 00:12:18,178
have this double call which I think

302
00:12:16,048 --> 00:12:22,289
would be better so what we could do here

303
00:12:18,178 --> 00:12:25,828
is just make this itself be the thing we

304
00:12:22,289 --> 00:12:27,480
call like that that seems a little bit

305
00:12:25,828 --> 00:12:30,508
better to me and then we would get rid

306
00:12:27,480 --> 00:12:34,499
of this and here we would just cast down

307
00:12:30,509 --> 00:12:37,889
so our our lighting work in this case

308
00:12:34,499 --> 00:12:41,459
would just be the data getting casted

309
00:12:37,889 --> 00:12:44,249
cast down right and if we did it that

310
00:12:41,458 --> 00:12:45,988
way then this code right here could go

311
00:12:44,249 --> 00:12:48,209
away and we wouldn't have that extra

312
00:12:45,989 --> 00:12:51,149
call that you know that the compiler is

313
00:12:48,208 --> 00:12:52,738
probably gonna weld that just fine but

314
00:12:51,149 --> 00:12:56,129
I'm just not interested in having that

315
00:12:52,739 --> 00:12:57,629
extra work there and so here instead of

316
00:12:56,129 --> 00:13:02,188
calling do lighting work this will be

317
00:12:57,629 --> 00:13:05,428
like compute light propagation work and

318
00:13:02,188 --> 00:13:10,078
now we've we've kind of rerouted that so

319
00:13:05,428 --> 00:13:10,889
anyway let me just see here oops what

320
00:13:10,078 --> 00:13:12,388
that was about

321
00:13:10,889 --> 00:13:14,879
I also don't know why data is

322
00:13:12,389 --> 00:13:17,668
highlighted as a type there that doesn't

323
00:13:14,879 --> 00:13:19,740
make a lot of sense but I guess there is

324
00:13:17,668 --> 00:13:23,129
something that's data I don't know

325
00:13:19,740 --> 00:13:23,850
anyway mmm so if you take a look at

326
00:13:23,129 --> 00:13:32,250
what's going on here

327
00:13:23,850 --> 00:13:34,820
we now have our rate caster here which

328
00:13:32,250 --> 00:13:36,870
is just a thing that does ray casting

329
00:13:34,820 --> 00:13:38,460
and we have our compute light

330
00:13:36,870 --> 00:13:40,350
propagation work we've debugged the ray

331
00:13:38,460 --> 00:13:41,879
caster compute light propagation work is

332
00:13:40,350 --> 00:13:44,879
the thing that we haven't really worked

333
00:13:41,879 --> 00:13:47,570
on now we used to have it working in the

334
00:13:44,879 --> 00:13:49,799
old scheme and the old scheme did not do

335
00:13:47,570 --> 00:13:51,690
voxel based lighting so we kind of have

336
00:13:49,799 --> 00:13:56,669
to change around the way that was

337
00:13:51,690 --> 00:14:00,240
working in a sense but in here we would

338
00:13:56,669 --> 00:14:04,259
like to we would like to sort of start

339
00:14:00,240 --> 00:14:06,330
by taking stock of this routine figuring

340
00:14:04,259 --> 00:14:09,000
out what we're gonna have to do to get

341
00:14:06,330 --> 00:14:12,000
it to where we want it to be and then

342
00:14:09,000 --> 00:14:13,590
making those modifications so the

343
00:14:12,000 --> 00:14:15,809
superstructure there change should still

344
00:14:13,590 --> 00:14:18,629
be fine we're still gonna grab a work

345
00:14:15,809 --> 00:14:21,119
structure right and we're still gonna

346
00:14:18,629 --> 00:14:22,980
figure out which lighting probes we want

347
00:14:21,120 --> 00:14:25,590
to calculate given this work structure

348
00:14:22,980 --> 00:14:28,170
so when we get these light probes and

349
00:14:25,590 --> 00:14:31,050
they come into the system here what

350
00:14:28,169 --> 00:14:33,269
we're gonna want to do is say alright we

351
00:14:31,049 --> 00:14:34,349
still want it sliced by work Pro but

352
00:14:33,269 --> 00:14:36,029
that's how we're gonna distribute the

353
00:14:34,350 --> 00:14:40,759
work so we still want this

354
00:14:36,029 --> 00:14:44,159
superstructure to be in place now

355
00:14:40,759 --> 00:14:46,200
furthermore I'm not sure - to what

356
00:14:44,159 --> 00:14:47,549
extent we need to pre-filter that list

357
00:14:46,200 --> 00:14:49,860
but we'll work on that later

358
00:14:47,549 --> 00:14:52,500
meaning we you know right now we're

359
00:14:49,860 --> 00:14:54,240
gonna like we're gonna do ray casting it

360
00:14:52,500 --> 00:14:56,970
for the entire light probes and all of

361
00:14:54,240 --> 00:14:59,279
the light volume we can pre-filter that

362
00:14:56,970 --> 00:15:02,430
at push time so I'm just gonna assume

363
00:14:59,279 --> 00:15:05,069
that we can slice the the work up pretty

364
00:15:02,429 --> 00:15:07,259
much uniformly and that we won't have to

365
00:15:05,070 --> 00:15:09,060
do any sort of work stealing or figuring

366
00:15:07,259 --> 00:15:10,230
out that work actually didn't get need

367
00:15:09,059 --> 00:15:11,549
to be done in certain places so I think

368
00:15:10,230 --> 00:15:14,039
we can do this pretty straightforward

369
00:15:11,549 --> 00:15:16,329
also I feel like I'm hitting the metal

370
00:15:14,039 --> 00:15:27,579
on my shirt here

371
00:15:16,330 --> 00:15:28,900
take this off there we go all right it

372
00:15:27,580 --> 00:15:31,450
was just it was clicking on the metal

373
00:15:28,899 --> 00:15:32,860
you know I'm saying I know that's

374
00:15:31,450 --> 00:15:36,790
happened before us I want to make sure

375
00:15:32,860 --> 00:15:38,169
it's not annoying people so if we look

376
00:15:36,789 --> 00:15:40,509
at what's going on here we're gonna

377
00:15:38,169 --> 00:15:42,490
cycle over the light probes and again we

378
00:15:40,509 --> 00:15:45,009
already kind of have our test cast

379
00:15:42,490 --> 00:15:46,690
routine you can see we were doing the

380
00:15:45,009 --> 00:15:48,100
same thing here right we're cycling over

381
00:15:46,690 --> 00:15:49,930
the light probe so all we're really

382
00:15:48,100 --> 00:15:52,690
talking about is to be multi-threaded

383
00:15:49,929 --> 00:15:54,219
we're slicing it so each thread works on

384
00:15:52,690 --> 00:15:56,770
a subset of the light probes that's

385
00:15:54,220 --> 00:15:59,410
that's all what's going on here much

386
00:15:56,769 --> 00:16:02,049
like here we're pulling out the cast

387
00:15:59,409 --> 00:16:03,189
direction by grabbing whichever light

388
00:16:02,049 --> 00:16:05,740
probe it is that we're talking about

389
00:16:03,190 --> 00:16:07,510
here and then what we're trying to do is

390
00:16:05,740 --> 00:16:11,649
cast for rays at a time we're just gonna

391
00:16:07,509 --> 00:16:14,379
cast those rays in in directions based

392
00:16:11,649 --> 00:16:16,360
on our random table so what you see here

393
00:16:14,379 --> 00:16:18,429
is we're not gonna actually target the

394
00:16:16,360 --> 00:16:20,230
light source necessarily I mean one of

395
00:16:18,429 --> 00:16:22,839
the things we might we might target the

396
00:16:20,230 --> 00:16:27,730
light source with one of our ray cast

397
00:16:22,840 --> 00:16:29,170
every time or something or you know

398
00:16:27,730 --> 00:16:34,600
periodically we may check the light

399
00:16:29,169 --> 00:16:37,539
source but since generally speaking we

400
00:16:34,600 --> 00:16:39,129
won't exactly know which light sources

401
00:16:37,539 --> 00:16:41,500
we even want to target or anything like

402
00:16:39,129 --> 00:16:43,659
that it makes it a little bit harder so

403
00:16:41,500 --> 00:16:45,879
here's what I would say about this if we

404
00:16:43,659 --> 00:16:48,639
assume that we have some set of light

405
00:16:45,879 --> 00:16:50,139
sources that are that are known coming

406
00:16:48,639 --> 00:16:51,610
in maybe we want to loop those in here

407
00:16:50,139 --> 00:16:55,779
but for the moment what we're gonna do

408
00:16:51,610 --> 00:16:57,519
is ignore that part of it and instead of

409
00:16:55,779 --> 00:16:59,350
having the the light sources be

410
00:16:57,519 --> 00:17:00,850
specifically targeted off the bat we'll

411
00:16:59,350 --> 00:17:02,529
sort of we'll probably roll that in a

412
00:17:00,850 --> 00:17:03,490
little bit later or maybe we won't I

413
00:17:02,529 --> 00:17:05,500
don't know we'll see maybe that's

414
00:17:03,490 --> 00:17:07,960
something we'll do on on one of them I'm

415
00:17:05,500 --> 00:17:10,329
not sure but what you can see here is

416
00:17:07,960 --> 00:17:12,490
we're gonna compute a ray origin here

417
00:17:10,329 --> 00:17:15,730
and we're gonna compute a ray direction

418
00:17:12,490 --> 00:17:17,740
by saying well however many rays we want

419
00:17:15,730 --> 00:17:19,809
to cast here this is actually a ray

420
00:17:17,740 --> 00:17:22,120
bundle count but what we're gonna do is

421
00:17:19,809 --> 00:17:26,409
we're going to grab out for Ray's to

422
00:17:22,119 --> 00:17:28,269
cast and go from there now what I think

423
00:17:26,410 --> 00:17:30,070
I want to do like I said is I think we

424
00:17:28,269 --> 00:17:32,019
want to try targeting lights or

425
00:17:30,069 --> 00:17:34,720
maybe a little bit more than we have

426
00:17:32,019 --> 00:17:37,000
then and and that's just a way of saying

427
00:17:34,720 --> 00:17:39,309
look we know that we've got a pushin

428
00:17:37,000 --> 00:17:41,829
light caulk here where we can put lights

429
00:17:39,309 --> 00:17:43,659
into the system and we want to support

430
00:17:41,829 --> 00:17:44,919
an arbitrary number of light sources so

431
00:17:43,660 --> 00:17:46,540
we don't want to do anything that

432
00:17:44,920 --> 00:17:48,009
assumes there's only one two or three

433
00:17:46,539 --> 00:17:49,629
lights we want to assume that there

434
00:17:48,009 --> 00:17:52,569
could be hundreds of lights we want it

435
00:17:49,630 --> 00:17:54,160
to be but what we'd like to do is say

436
00:17:52,569 --> 00:17:55,689
look we want a way of targeting the

437
00:17:54,160 --> 00:17:57,310
light source occasionally so what I'm

438
00:17:55,690 --> 00:17:59,080
going to do is suggest that perhaps this

439
00:17:57,309 --> 00:18:01,450
routine needs to be changed a little bit

440
00:17:59,079 --> 00:18:02,710
and instead of calling this array index

441
00:18:01,450 --> 00:18:04,900
right we're gonna call it or a bundle

442
00:18:02,710 --> 00:18:08,230
index that's just true regardless and

443
00:18:04,900 --> 00:18:10,420
what I would like to do is proceed here

444
00:18:08,230 --> 00:18:12,460
what we're gonna do is say ray Direction

445
00:18:10,420 --> 00:18:13,660
is something that will have some start

446
00:18:12,460 --> 00:18:15,940
up to it

447
00:18:13,660 --> 00:18:18,970
so what we'll do is we'll say at the

448
00:18:15,940 --> 00:18:28,210
start right our Ray direction will

449
00:18:18,970 --> 00:18:29,769
target some light sources so at the

450
00:18:28,210 --> 00:18:31,900
start we'll fill it with four ray

451
00:18:29,769 --> 00:18:34,269
bundles that are all designed to like go

452
00:18:31,900 --> 00:18:37,300
towards light sources that we no amount

453
00:18:34,269 --> 00:18:38,740
as a way of sort of introducing a little

454
00:18:37,299 --> 00:18:41,379
bit of bias in the system towards

455
00:18:38,740 --> 00:18:42,670
hitting a light source and then in here

456
00:18:41,380 --> 00:18:46,210
what we'll do is we'll take the Ray

457
00:18:42,670 --> 00:18:49,230
direction when we're sampling this and

458
00:18:46,210 --> 00:18:52,569
we'll just move this to the end right

459
00:18:49,230 --> 00:18:53,740
and so and I'm gonna get rid of this to

460
00:18:52,569 --> 00:18:56,799
do because we're gonna take care of that

461
00:18:53,740 --> 00:18:59,710
today as well so after we have done the

462
00:18:56,799 --> 00:19:02,079
work on all of our Ray's right what I

463
00:18:59,710 --> 00:19:04,269
want to do here is basically update this

464
00:19:02,079 --> 00:19:06,699
at the end and what I'm doing there

465
00:19:04,269 --> 00:19:08,440
right is I'm just changing sort of the

466
00:19:06,700 --> 00:19:11,470
fundamental way that this is working by

467
00:19:08,440 --> 00:19:13,180
saying okay one of the things that's

468
00:19:11,470 --> 00:19:14,559
always free to do in a for loop is

469
00:19:13,180 --> 00:19:16,720
update at the end instead of the

470
00:19:14,559 --> 00:19:20,470
beginning and then it's free for you to

471
00:19:16,720 --> 00:19:22,809
make the first run of your for loop do

472
00:19:20,470 --> 00:19:24,819
something different right so in this

473
00:19:22,809 --> 00:19:27,039
case we know we want to pull things out

474
00:19:24,819 --> 00:19:28,299
of an array of sampling directions and

475
00:19:27,039 --> 00:19:30,099
in this case what we're doing is saying

476
00:19:28,299 --> 00:19:31,690
look the first time we do that instead

477
00:19:30,099 --> 00:19:34,259
of pulling it out we're gonna use some

478
00:19:31,690 --> 00:19:37,960
special thing that's not in that array

479
00:19:34,259 --> 00:19:39,940
or something like that and that's how

480
00:19:37,960 --> 00:19:41,980
we're gonna go with it so then we have

481
00:19:39,940 --> 00:19:43,380
like here our sampling sphere with the

482
00:19:41,980 --> 00:19:46,230
sample direction there right

483
00:19:43,380 --> 00:19:47,730
and then that'll kick in later and so

484
00:19:46,230 --> 00:19:50,940
what we want to do is just say the the

485
00:19:47,730 --> 00:19:52,410
REA bundle count is going to be the

486
00:19:50,940 --> 00:19:56,070
thing that we're using here I don't

487
00:19:52,410 --> 00:19:57,929
think that's actually you know this will

488
00:19:56,069 --> 00:20:00,389
not necessarily be accurate anymore

489
00:19:57,929 --> 00:20:01,740
because if we have one startup one it

490
00:20:00,390 --> 00:20:03,559
means we'd be skipping some in the REA

491
00:20:01,740 --> 00:20:05,700
bundle but you know you get the idea so

492
00:20:03,558 --> 00:20:08,428
that's something we can do very easily

493
00:20:05,700 --> 00:20:10,980
and I think we probably do want to do

494
00:20:08,429 --> 00:20:12,900
that and that way we can say well the

495
00:20:10,980 --> 00:20:17,308
REA bundle count is actually you know

496
00:20:12,900 --> 00:20:19,048
it's maybe this right but we would need

497
00:20:17,308 --> 00:20:20,190
to pad that sample direction with a fake

498
00:20:19,048 --> 00:20:21,480
one at the end anyway so that we didn't

499
00:20:20,190 --> 00:20:22,950
fetch off the end of the array so I

500
00:20:21,480 --> 00:20:23,940
think this is still probably roughly

501
00:20:22,950 --> 00:20:25,710
what we would be doing I don't know

502
00:20:23,940 --> 00:20:29,940
we'll see

503
00:20:25,710 --> 00:20:31,169
so anyway excuse me we need to set up

504
00:20:29,940 --> 00:20:34,220
all these parameters correctly and we

505
00:20:31,169 --> 00:20:37,288
need to get our sampling sphere taken in

506
00:20:34,220 --> 00:20:39,269
put put in as well yeah I suppose I

507
00:20:37,288 --> 00:20:41,700
could do is write into the sampling

508
00:20:39,269 --> 00:20:43,798
sphere itself like leave a space the

509
00:20:41,700 --> 00:20:49,558
beginning and have it cast so you know I

510
00:20:43,798 --> 00:20:50,639
could do that as well because I just

511
00:20:49,558 --> 00:20:52,259
don't think we want to bother with that

512
00:20:50,640 --> 00:20:52,740
all right so I think we're gonna leave

513
00:20:52,259 --> 00:20:54,690
like this

514
00:20:52,740 --> 00:20:57,960
we'll see we'll sort of work out as we

515
00:20:54,690 --> 00:20:59,820
go so anyway in terms of which direction

516
00:20:57,960 --> 00:21:02,190
we're going to be sampling here you can

517
00:20:59,819 --> 00:21:03,899
see our Duras ample index here that's

518
00:21:02,190 --> 00:21:09,900
just something that we're using to

519
00:21:03,900 --> 00:21:11,640
figure out sort of a stochastic version

520
00:21:09,900 --> 00:21:13,470
of the of the sphere that we're gonna

521
00:21:11,640 --> 00:21:17,340
use this is so we don't always cast the

522
00:21:13,470 --> 00:21:20,700
same direction every frame and kind of

523
00:21:17,339 --> 00:21:22,199
averaged over a larger sphere and so

524
00:21:20,700 --> 00:21:23,759
this is that look up here and then we're

525
00:21:22,200 --> 00:21:25,500
gonna you know use that this the

526
00:21:23,759 --> 00:21:27,119
particular sphere that we pick out among

527
00:21:25,500 --> 00:21:28,589
many of our random stirs that we have

528
00:21:27,119 --> 00:21:31,589
and remember we've got a thing that's

529
00:21:28,589 --> 00:21:34,048
like this sampling spheres that we

530
00:21:31,589 --> 00:21:35,879
generated and these are gonna have other

531
00:21:34,048 --> 00:21:37,139
information that we need we're gonna

532
00:21:35,880 --> 00:21:38,549
have to like update our generator

533
00:21:37,140 --> 00:21:40,020
program to do exactly what we need now

534
00:21:38,548 --> 00:21:42,210
but we basically have this code written

535
00:21:40,019 --> 00:21:43,619
as well and we verified that that sphere

536
00:21:42,210 --> 00:21:45,679
is accurate so we're you know we're in

537
00:21:43,619 --> 00:21:48,599
pretty good shape with with that stuff

538
00:21:45,679 --> 00:21:50,460
all right so what we're gonna do is

539
00:21:48,599 --> 00:21:52,709
we're gonna go through the Ray bundles

540
00:21:50,460 --> 00:21:54,808
we're going to basically raycast from

541
00:21:52,710 --> 00:21:56,700
the Ray Origin ray direction here and

542
00:21:54,808 --> 00:21:57,109
again we're updating that ray Direction

543
00:21:56,700 --> 00:21:59,559
every

544
00:21:57,109 --> 00:22:02,240
through here to a different rate bundle

545
00:21:59,559 --> 00:22:04,039
we're going to go ahead and see what we

546
00:22:02,240 --> 00:22:10,099
hit we're gonna compute that this way

547
00:22:04,039 --> 00:22:12,200
right I don't know this is actually like

548
00:22:10,099 --> 00:22:13,879
a boolean like did we hit or not so I'm

549
00:22:12,200 --> 00:22:18,110
not sure why that's called t hit

550
00:22:13,880 --> 00:22:19,550
necessarily but it's fine anyway so we

551
00:22:18,109 --> 00:22:23,109
come through here and we go through and

552
00:22:19,549 --> 00:22:25,909
do our sub raise and our sub raise here

553
00:22:23,109 --> 00:22:27,439
just look to see this is this is a thing

554
00:22:25,910 --> 00:22:29,240
for pushing debug lines if we want to

555
00:22:27,440 --> 00:22:31,009
debug one of them we can do it this way

556
00:22:29,240 --> 00:22:33,200
but at the moment we don't really need

557
00:22:31,009 --> 00:22:35,210
to worry about that code so what we're

558
00:22:33,200 --> 00:22:37,009
doing here is saying all right if we hit

559
00:22:35,210 --> 00:22:38,900
right so this is the thing that tells us

560
00:22:37,009 --> 00:22:41,029
whether or not we hit

561
00:22:38,900 --> 00:22:42,620
if we hit we're gonna try and do a

562
00:22:41,029 --> 00:22:44,000
lightning look up if we didn't we're

563
00:22:42,619 --> 00:22:45,349
just going to go ahead and put the moon

564
00:22:44,000 --> 00:22:47,930
color in there and that's all we're

565
00:22:45,349 --> 00:22:50,569
gonna do and again this code probably

566
00:22:47,930 --> 00:22:53,240
needs to be improved a bit to work with

567
00:22:50,569 --> 00:22:56,839
some kind of notion of localized ambient

568
00:22:53,240 --> 00:22:58,220
lighting you know we might so cuz we

569
00:22:56,839 --> 00:22:59,659
might want to do something like that I

570
00:22:58,220 --> 00:23:01,569
don't know if we actually need that or

571
00:22:59,660 --> 00:23:05,210
not because in theory you should always

572
00:23:01,569 --> 00:23:06,649
hit something if you cast upward you

573
00:23:05,210 --> 00:23:08,630
should hit like a done unfortunately but

574
00:23:06,650 --> 00:23:10,940
at the moment we don't really put

575
00:23:08,630 --> 00:23:13,520
ceilings on our rooms so you can see why

576
00:23:10,940 --> 00:23:14,900
we may want to it depends on how we want

577
00:23:13,519 --> 00:23:16,879
to solve that problem if we always put

578
00:23:14,900 --> 00:23:18,860
ceilings on our rooms then this just

579
00:23:16,880 --> 00:23:21,110
always kind of works if we don't then it

580
00:23:18,859 --> 00:23:23,779
doesn't so we kind of need to have some

581
00:23:21,109 --> 00:23:25,159
opinion about that and if we decide that

582
00:23:23,779 --> 00:23:28,220
we don't want to put ceilings on the

583
00:23:25,160 --> 00:23:30,950
rooms then we need to have some notion

584
00:23:28,220 --> 00:23:33,410
of localized color that basically says

585
00:23:30,950 --> 00:23:35,960
like for each light probe this is what I

586
00:23:33,410 --> 00:23:39,410
would want here as an ambient color

587
00:23:35,960 --> 00:23:41,539
value in the case where you cast upward

588
00:23:39,410 --> 00:23:45,290
and don't hit anything right so you know

589
00:23:41,539 --> 00:23:46,819
basically we could pretty trivially have

590
00:23:45,289 --> 00:23:48,680
it so that if you look you know if you

591
00:23:46,819 --> 00:23:53,869
look at what we're pushing on there in

592
00:23:48,680 --> 00:23:56,750
terms of light probe information in this

593
00:23:53,869 --> 00:23:58,099
right here it would be pretty cheap for

594
00:23:56,750 --> 00:23:59,900
us to just store an extra piece of

595
00:23:58,099 --> 00:24:03,289
information which is basically the

596
00:23:59,900 --> 00:24:06,950
emission the emission angle or something

597
00:24:03,289 --> 00:24:08,629
and you know basically a vector that

598
00:24:06,950 --> 00:24:11,420
points towards where the

599
00:24:08,630 --> 00:24:13,430
ambient light is coming from if any and

600
00:24:11,420 --> 00:24:15,769
then a color value that should be

601
00:24:13,430 --> 00:24:20,060
modulated in so it would be pretty cheap

602
00:24:15,769 --> 00:24:21,619
for us to just have that be a thing and

603
00:24:20,059 --> 00:24:23,299
I don't know whether we want to go that

604
00:24:21,619 --> 00:24:27,669
route or not but that's something we

605
00:24:23,299 --> 00:24:27,669
could certainly consider so again like

606
00:24:38,410 --> 00:24:42,440
so just sort of think about and we'll

607
00:24:40,940 --> 00:24:43,640
decide how we want to tune that lighting

608
00:24:42,440 --> 00:24:45,080
a little bit later the ambient lighting

609
00:24:43,640 --> 00:24:46,610
is not super important to us right now

610
00:24:45,079 --> 00:24:48,799
but when we're actually going to kind of

611
00:24:46,609 --> 00:24:51,319
finalize the lighting at the very end of

612
00:24:48,799 --> 00:24:53,809
this sweep we probably want to sort of

613
00:24:51,319 --> 00:24:56,659
get in there and artistically think like

614
00:24:53,809 --> 00:24:58,250
what do we want to have happen here now

615
00:24:56,660 --> 00:25:01,310
thankfully this garbage doesn't have to

616
00:24:58,250 --> 00:25:02,750
happen anymore this this update for this

617
00:25:01,309 --> 00:25:04,220
way that we were updating things doesn't

618
00:25:02,750 --> 00:25:05,660
really have to happen but we do need to

619
00:25:04,220 --> 00:25:07,819
do some updating so let's go through and

620
00:25:05,660 --> 00:25:09,620
sweep through this and feel like figure

621
00:25:07,819 --> 00:25:10,909
out what we kind of want to do here so

622
00:25:09,619 --> 00:25:12,529
if you look at what happens on the case

623
00:25:10,910 --> 00:25:14,150
where we do get a hit you can see here

624
00:25:12,529 --> 00:25:15,740
that we have a probe sample position

625
00:25:14,150 --> 00:25:17,720
that probe sample position is basically

626
00:25:15,740 --> 00:25:21,019
saying where is where are we actually

627
00:25:17,720 --> 00:25:23,360
hitting like where did we stop and then

628
00:25:21,019 --> 00:25:25,490
the normal is what was the normal on the

629
00:25:23,359 --> 00:25:27,019
surface at the point where we stopped so

630
00:25:25,490 --> 00:25:29,390
this is basically telling us like the

631
00:25:27,019 --> 00:25:31,430
surface we hit and it's in the surface

632
00:25:29,390 --> 00:25:33,650
normal so that we can compute how the

633
00:25:31,430 --> 00:25:35,450
light should have been moved right we

634
00:25:33,650 --> 00:25:37,519
also know what the reference color was

635
00:25:35,450 --> 00:25:39,170
for that occluder and that's basically

636
00:25:37,519 --> 00:25:40,700
telling us like okay what's like the

637
00:25:39,170 --> 00:25:42,740
average color of the texture at that

638
00:25:40,700 --> 00:25:44,330
point or something and we haven't really

639
00:25:42,740 --> 00:25:46,370
set those up yet I think they're all

640
00:25:44,329 --> 00:25:49,129
basically gray or something so we will

641
00:25:46,369 --> 00:25:50,899
want to go in and tune those as well

642
00:25:49,130 --> 00:25:53,030
but we know that they will come in here

643
00:25:50,900 --> 00:25:56,750
eventually so at some point we will get

644
00:25:53,029 --> 00:25:59,029
that piece of information we then also

645
00:25:56,750 --> 00:26:01,460
know what the emission was on that rate

646
00:25:59,029 --> 00:26:03,200
but I don't actually know why we're

647
00:26:01,460 --> 00:26:06,950
doing it quite that way that doesn't

648
00:26:03,200 --> 00:26:09,019
really seem like what we want because

649
00:26:06,950 --> 00:26:10,789
services won't really have a mission

650
00:26:09,019 --> 00:26:12,559
anymore I don't think in that way

651
00:26:10,789 --> 00:26:15,549
because lights are pushed separately

652
00:26:12,559 --> 00:26:15,549
from services so

653
00:26:21,400 --> 00:26:26,330
so I don't really know how we want to

654
00:26:24,049 --> 00:26:28,220
treat that I guess we do because when we

655
00:26:26,329 --> 00:26:31,069
push in lights they need to basically be

656
00:26:28,220 --> 00:26:33,319
boxes as well so I suppose we do need to

657
00:26:31,069 --> 00:26:35,389
do that the only question is why the

658
00:26:33,319 --> 00:26:53,480
sample ref color can't have that

659
00:26:35,390 --> 00:26:54,890
included in it well let's continue

660
00:26:53,480 --> 00:26:57,769
thinking this through a little bit more

661
00:26:54,890 --> 00:27:02,870
and we'll go from there so let's see

662
00:26:57,769 --> 00:27:04,460
what we need to do here so in terms of

663
00:27:02,869 --> 00:27:07,339
figuring out what the lighting actually

664
00:27:04,460 --> 00:27:10,100
is we're gonna have to do a light probe

665
00:27:07,339 --> 00:27:12,230
query at this point right and the light

666
00:27:10,099 --> 00:27:14,419
probe query is going to be some kind of

667
00:27:12,230 --> 00:27:16,549
a voxel situation where we do the gather

668
00:27:14,420 --> 00:27:18,289
exactly like we would normally do it in

669
00:27:16,549 --> 00:27:20,119
the pixel shader and some interpolation

670
00:27:18,289 --> 00:27:21,230
between them right it's gonna be a

671
00:27:20,119 --> 00:27:22,609
little bit expensive but that's

672
00:27:21,230 --> 00:27:24,079
basically what's gonna happen and we're

673
00:27:22,609 --> 00:27:27,439
gonna you know we're gonna have to call

674
00:27:24,079 --> 00:27:30,649
something like this that won't exactly

675
00:27:27,440 --> 00:27:33,559
be this let me see if if light probe

676
00:27:30,650 --> 00:27:36,320
irradiance is still in there yeah it is

677
00:27:33,559 --> 00:27:38,539
so we left this in there but it's not

678
00:27:36,319 --> 00:27:41,329
actually a valid thing like we don't

679
00:27:38,539 --> 00:27:43,009
actually want this v3 light six stuff

680
00:27:41,329 --> 00:27:44,720
that was for when we're going to do

681
00:27:43,009 --> 00:27:46,099
cubic Direction stuff and we kinda

682
00:27:44,720 --> 00:27:49,039
decided that we're not storing that

683
00:27:46,099 --> 00:27:50,629
anymore so we wouldn't actually want the

684
00:27:49,039 --> 00:27:51,950
light probe irradiance in there and

685
00:27:50,630 --> 00:27:54,320
furthermore the light probe variants

686
00:27:51,950 --> 00:27:57,470
like wouldn't go in here either

687
00:27:54,319 --> 00:27:59,629
right you know this this is not what

688
00:27:57,470 --> 00:28:00,799
would actually happen this is the actual

689
00:27:59,630 --> 00:28:02,440
lighting information and it's the

690
00:28:00,799 --> 00:28:05,450
entirety of the lighting information now

691
00:28:02,440 --> 00:28:08,029
so this stuff here like light probe

692
00:28:05,450 --> 00:28:09,740
position is still the case but light

693
00:28:08,029 --> 00:28:11,869
preparation is just not so that's

694
00:28:09,740 --> 00:28:13,549
actually there anymore so we can

695
00:28:11,869 --> 00:28:15,589
actually eliminate that entirely if we

696
00:28:13,549 --> 00:28:18,049
want to right we can actually just get

697
00:28:15,589 --> 00:28:19,549
rid of this entirely and so we're not

698
00:28:18,049 --> 00:28:21,230
gonna be returning it as something like

699
00:28:19,549 --> 00:28:23,129
that right instead we're gonna be doing

700
00:28:21,230 --> 00:28:25,779
is just like you know

701
00:28:23,130 --> 00:28:28,990
some kind of light value is gonna come

702
00:28:25,779 --> 00:28:31,359
in here we're just gonna get you know

703
00:28:28,990 --> 00:28:32,679
how much light should we have actually

704
00:28:31,359 --> 00:28:34,750
seen bouncing off the surface or

705
00:28:32,679 --> 00:28:36,250
whatever right so we're gonna want to do

706
00:28:34,750 --> 00:28:38,170
something like this and then we're gonna

707
00:28:36,250 --> 00:28:39,700
want to do the reflection so it's hard

708
00:28:38,170 --> 00:28:42,370
to say exactly what we would want to do

709
00:28:39,700 --> 00:28:44,558
in this case but we know we've got a

710
00:28:42,369 --> 00:28:47,079
probe sample and so it'd probably be

711
00:28:44,558 --> 00:28:50,039
something like this like if you assume

712
00:28:47,079 --> 00:28:52,750
that we are bouncing off of this surface

713
00:28:50,039 --> 00:28:53,980
so we know the surface normal we know

714
00:28:52,750 --> 00:28:56,319
what direction it would be because it

715
00:28:53,980 --> 00:28:57,610
would be like the reflection vector here

716
00:28:56,319 --> 00:29:00,129
so we'd have to compute the reflection

717
00:28:57,609 --> 00:29:03,399
vector around this surface normal which

718
00:29:00,130 --> 00:29:07,630
we can do what is the light coming in in

719
00:29:03,400 --> 00:29:12,540
that in that direction right and so we'd

720
00:29:07,630 --> 00:29:14,950
want to just do like get you know

721
00:29:12,539 --> 00:29:25,389
compute box the lighting or something

722
00:29:14,950 --> 00:29:27,039
like this something like that I don't

723
00:29:25,390 --> 00:29:29,530
know but we're gonna want to basically

724
00:29:27,039 --> 00:29:31,928
pass this in where we say here's our

725
00:29:29,529 --> 00:29:35,529
sample location here's the normal at

726
00:29:31,929 --> 00:29:38,080
that location and here's the vector that

727
00:29:35,529 --> 00:29:42,058
we're trying to sample out towards we

728
00:29:38,079 --> 00:29:42,058
may not actually need this

729
00:29:44,369 --> 00:29:48,909
in fact then I think about it we

730
00:29:46,660 --> 00:29:50,230
probably don't we just would compute the

731
00:29:48,910 --> 00:29:53,820
reflection vector and then say this is

732
00:29:50,230 --> 00:29:53,819
the direction we wanted to know about

733
00:29:56,308 --> 00:30:03,639
you know that's not really true because

734
00:29:59,679 --> 00:30:06,280
this is diffuse to a large extent right

735
00:30:03,640 --> 00:30:08,950
and so I guess what we would say is I

736
00:30:06,279 --> 00:30:10,480
don't really know so I guess we would

737
00:30:08,950 --> 00:30:12,220
have to have since we don't I don't know

738
00:30:10,480 --> 00:30:14,860
if we would need material parameters in

739
00:30:12,220 --> 00:30:18,610
here for this that's really kind of hard

740
00:30:14,859 --> 00:30:21,129
to say I guess but since we're computing

741
00:30:18,609 --> 00:30:23,500
the lighting very coarsely I would say

742
00:30:21,130 --> 00:30:26,650
you know we probably just want to assume

743
00:30:23,500 --> 00:30:29,440
that surfaces are diffuse so maybe we'll

744
00:30:26,650 --> 00:30:32,200
do this for now right so we'll just say

745
00:30:29,440 --> 00:30:34,240
look here's the lighting location here's

746
00:30:32,200 --> 00:30:34,529
the hemisphere that it can gather tell

747
00:30:34,240 --> 00:30:37,710
me

748
00:30:34,529 --> 00:30:40,440
what you know what do you see and we'll

749
00:30:37,710 --> 00:30:42,450
use that so then we would go in here and

750
00:30:40,440 --> 00:30:44,970
and do exactly what we would expect here

751
00:30:42,450 --> 00:30:48,059
right this this is all pretty much

752
00:30:44,970 --> 00:30:51,000
exactly the same I don't know where

753
00:30:48,059 --> 00:30:53,519
emission direction was coming from it's

754
00:30:51,000 --> 00:30:58,829
so the REA direction

755
00:30:53,519 --> 00:31:02,789
with the sub rate in particular it's

756
00:30:58,829 --> 00:31:04,529
saying it's the negative of that so yeah

757
00:31:02,789 --> 00:31:06,569
that's just doing the cosine fall-off

758
00:31:04,529 --> 00:31:10,379
it's all that's doing and that's fine as

759
00:31:06,569 --> 00:31:12,299
well so yeah I mean that's all okay I

760
00:31:10,380 --> 00:31:14,580
think and then that's gonna give us back

761
00:31:12,299 --> 00:31:21,559
what the lighting transfer should have

762
00:31:14,579 --> 00:31:24,149
been at that point right so given that

763
00:31:21,559 --> 00:31:30,179
we have a couple different things that I

764
00:31:24,150 --> 00:31:32,370
guess we would need to do here and in

765
00:31:30,180 --> 00:31:33,600
terms of how to interpolate it all again

766
00:31:32,369 --> 00:31:35,399
this is the part that it don't really

767
00:31:33,599 --> 00:31:37,139
know so now we get down to the part that

768
00:31:35,400 --> 00:31:39,620
I'm not sure how we want to do it's it's

769
00:31:37,140 --> 00:31:41,550
pretty confusing so if you look here

770
00:31:39,619 --> 00:31:43,500
this is how we were doing the update

771
00:31:41,549 --> 00:31:47,399
before it's just a straight linear blend

772
00:31:43,500 --> 00:31:51,029
that was doing like the sort of an

773
00:31:47,400 --> 00:31:52,830
accumulation where we were just you know

774
00:31:51,029 --> 00:31:55,410
accumulating everything into this this

775
00:31:52,829 --> 00:31:56,789
accumulator using weights that were

776
00:31:55,410 --> 00:31:58,470
specified as part of the sampling sphere

777
00:31:56,789 --> 00:32:00,450
but that's not we're gonna be wanting to

778
00:31:58,470 --> 00:32:02,160
do now right and this is the part that I

779
00:32:00,450 --> 00:32:04,710
don't actually know what we should be

780
00:32:02,160 --> 00:32:07,650
doing we need to spread into the voxels

781
00:32:04,710 --> 00:32:11,279
so here you know basically the test or

782
00:32:07,650 --> 00:32:13,080
you know test cast or whatever it is so

783
00:32:11,279 --> 00:32:15,420
the test cast from probes right you can

784
00:32:13,079 --> 00:32:19,980
see that we've got the spam voxel thing

785
00:32:15,420 --> 00:32:21,990
happen in here where we just like put

786
00:32:19,980 --> 00:32:25,349
forth lighting information into our

787
00:32:21,990 --> 00:32:27,569
entire voxel what that's doing right is

788
00:32:25,349 --> 00:32:29,219
just hard writing the result so it's

789
00:32:27,569 --> 00:32:33,689
just it's just writing the result in

790
00:32:29,220 --> 00:32:35,789
literally and like I said that's not

791
00:32:33,690 --> 00:32:37,350
really what we need to be doing long

792
00:32:35,789 --> 00:32:40,619
term we need to be doing kind of

793
00:32:37,349 --> 00:32:42,629
averaging and so the spam voxel part and

794
00:32:40,619 --> 00:32:45,059
in fact this part right here maybe wants

795
00:32:42,630 --> 00:32:47,610
to come out into something a little bit

796
00:32:45,059 --> 00:32:51,929
more specific so this

797
00:32:47,609 --> 00:33:01,589
is gonna be like a spam voxel call

798
00:32:51,930 --> 00:33:04,019
itself so here is our actual spam box of

799
00:33:01,589 --> 00:33:11,579
call and these are gonna be called like

800
00:33:04,019 --> 00:33:13,139
spam box a slice or something right and

801
00:33:11,579 --> 00:33:14,819
so what we're gonna need to do is every

802
00:33:13,140 --> 00:33:16,710
time we finish one of these things we're

803
00:33:14,819 --> 00:33:18,179
gonna have to spam the the voxel with

804
00:33:16,710 --> 00:33:23,400
the information now what I would like to

805
00:33:18,180 --> 00:33:25,259
do is since this is expensive spamming

806
00:33:23,400 --> 00:33:27,600
the voxel I would like to basically

807
00:33:25,259 --> 00:33:31,410
accumulate the voxel with the transfer

808
00:33:27,599 --> 00:33:33,509
PBS inside this thing right and then at

809
00:33:31,410 --> 00:33:35,850
the end spam the voxel so I'd like to

810
00:33:33,509 --> 00:33:38,849
like local accumulate and then spam the

811
00:33:35,849 --> 00:33:40,619
voxel at the very end so it would

812
00:33:38,849 --> 00:33:42,779
basically take place out here so like

813
00:33:40,619 --> 00:33:46,099
the spam voxel part would happen here

814
00:33:42,779 --> 00:33:49,769
right so I'm going to move these up

815
00:33:46,099 --> 00:33:53,309
because I want them to be used from the

816
00:33:49,769 --> 00:34:02,879
actual lighting code which is right here

817
00:33:53,309 --> 00:34:04,649
right yes so the spamming of the voxel

818
00:34:02,880 --> 00:34:06,450
wants to happen in here and the get

819
00:34:04,650 --> 00:34:09,000
voxel index and that stuff like this

820
00:34:06,450 --> 00:34:10,440
stuff is all kind of garbage we're done

821
00:34:09,000 --> 00:34:13,860
with it now I think I don't think we

822
00:34:10,440 --> 00:34:17,730
want any of this actually so this is yet

823
00:34:13,860 --> 00:34:22,349
this is all kind of incorrect there is

824
00:34:17,730 --> 00:34:24,360
the UVW part we do maybe need a little

825
00:34:22,349 --> 00:34:28,710
bit of that stuff now but of course that

826
00:34:24,360 --> 00:34:30,690
will happen that'll kind of happen

827
00:34:28,710 --> 00:34:33,480
inside here so we're we're doing this

828
00:34:30,690 --> 00:34:36,030
work we will need one that actually does

829
00:34:33,480 --> 00:34:37,980
the UVs as well and that's just gonna be

830
00:34:36,030 --> 00:34:43,019
for the for blending but we'll deal with

831
00:34:37,980 --> 00:34:44,969
that in a second all right so I think

832
00:34:43,019 --> 00:34:46,650
that's what we want this to look like so

833
00:34:44,969 --> 00:34:48,539
we'll have our spam voxel slice which

834
00:34:46,650 --> 00:34:50,130
does that part of it and we'll do we'll

835
00:34:48,539 --> 00:34:52,679
have our spam voxel which does the other

836
00:34:50,130 --> 00:34:54,510
part of it and so the spam voxel here is

837
00:34:52,679 --> 00:34:56,279
just going to say we need the solution

838
00:34:54,510 --> 00:34:58,500
and

839
00:34:56,280 --> 00:35:01,830
the you know the spam position basically

840
00:34:58,500 --> 00:35:04,320
and so we'll pass Casspi to spam voxel

841
00:35:01,829 --> 00:35:09,239
and then it will do all of the spamming

842
00:35:04,320 --> 00:35:13,740
here it means the the test like all this

843
00:35:09,239 --> 00:35:15,059
nonsense so that it can actually record

844
00:35:13,739 --> 00:35:17,219
like whether it's for having the right

845
00:35:15,059 --> 00:35:19,079
place and all that sort of thing but

846
00:35:17,219 --> 00:35:21,629
other than that it's just a direct pass

847
00:35:19,079 --> 00:35:22,769
through and you know we probably won't

848
00:35:21,630 --> 00:35:24,090
be able to leave it like that forever

849
00:35:22,769 --> 00:35:26,130
because it's probably gonna be a little

850
00:35:24,090 --> 00:35:27,809
too costly to have all this

851
00:35:26,130 --> 00:35:30,059
configurability in there in terms of

852
00:35:27,809 --> 00:35:33,750
what the compilers gonna do because this

853
00:35:30,059 --> 00:35:35,489
is pretty much the the hot path like

854
00:35:33,750 --> 00:35:36,840
this is the the spiciest path in the

855
00:35:35,489 --> 00:35:39,059
whole game it's the thing that costs the

856
00:35:36,840 --> 00:35:41,780
most runtimes so we're not gonna be able

857
00:35:39,059 --> 00:35:44,009
to do all that ad infinitum but you know

858
00:35:41,780 --> 00:35:46,380
more or less this is what we're looking

859
00:35:44,010 --> 00:35:49,080
at and we can sort of leave it like this

860
00:35:46,380 --> 00:35:52,590
until we go to do our like full

861
00:35:49,079 --> 00:35:54,690
performance optimization right alright

862
00:35:52,590 --> 00:35:56,160
so let's start cleaning up the compilers

863
00:35:54,690 --> 00:35:58,320
and move towards actually running that

864
00:35:56,159 --> 00:36:00,149
stuff for real here in the irradiance

865
00:35:58,320 --> 00:36:02,250
part of things we want to just get rid

866
00:36:00,150 --> 00:36:04,170
of this entirely it's not anything that

867
00:36:02,250 --> 00:36:06,449
we actually need so I'm just gonna get

868
00:36:04,170 --> 00:36:08,849
rid of the irradiance stuff it's just

869
00:36:06,449 --> 00:36:11,339
not necessary also set light probe

870
00:36:08,849 --> 00:36:13,049
position is now also gone I believe

871
00:36:11,340 --> 00:36:15,660
because we're just pushing light preps

872
00:36:13,050 --> 00:36:17,280
on not setting their positions anymore

873
00:36:15,659 --> 00:36:19,019
since we don't have storing that stuff

874
00:36:17,280 --> 00:36:20,970
we can actually also pull the light

875
00:36:19,019 --> 00:36:21,989
probe assignments pretty sure we just

876
00:36:20,969 --> 00:36:23,879
don't want to ever have to deal with

877
00:36:21,989 --> 00:36:26,659
that anymore the solution we came up

878
00:36:23,880 --> 00:36:29,280
with was was pretty much far superior

879
00:36:26,659 --> 00:36:30,869
you know it also I feel like I'm too

880
00:36:29,280 --> 00:36:35,360
loud in my headphones I'm annoying my

881
00:36:30,869 --> 00:36:35,359
own self can that be fixed

882
00:36:36,260 --> 00:36:47,510
I'm curious oh it does so it actually

883
00:36:41,880 --> 00:36:49,920
affects what I hear well that's annoying

884
00:36:47,510 --> 00:36:53,490
can't you do something about the can't I

885
00:36:49,920 --> 00:36:58,880
do something about that yes I can't

886
00:36:53,489 --> 00:37:02,429
oh well let goes on anyway

887
00:36:58,880 --> 00:37:05,039
assuming that I don't want to ruin my

888
00:37:02,429 --> 00:37:06,118
own ear but get my own ears with this

889
00:37:05,039 --> 00:37:07,619
I'm gonna have to figure out some way to

890
00:37:06,119 --> 00:37:13,829
fix that not really sure what to do

891
00:37:07,619 --> 00:37:16,490
about that but anyway so in in the in

892
00:37:13,829 --> 00:37:19,409
the spamming right

893
00:37:16,489 --> 00:37:21,899
we can now spam from inside the other

894
00:37:19,409 --> 00:37:23,368
routine which is good and I'm just gonna

895
00:37:21,900 --> 00:37:24,780
start cleaning up the compiler is on

896
00:37:23,369 --> 00:37:25,710
that and then we also have to actually

897
00:37:24,780 --> 00:37:28,050
figure out what we're gonna do for the

898
00:37:25,710 --> 00:37:30,240
blending inside the spamming and maybe

899
00:37:28,050 --> 00:37:33,660
we'll use our current test version to

900
00:37:30,239 --> 00:37:35,639
figure that out all right so we need the

901
00:37:33,659 --> 00:37:38,329
right bundle count here this is

902
00:37:35,639 --> 00:37:40,949
something that targets the light source

903
00:37:38,329 --> 00:37:42,690
part of things we can actually use the

904
00:37:40,949 --> 00:37:46,139
debug light for that right now if we

905
00:37:42,690 --> 00:37:51,000
want to so if I inside the lighting code

906
00:37:46,139 --> 00:37:59,848
here take the debug light P which is

907
00:37:51,000 --> 00:38:08,820
well in here here is the information in

908
00:37:59,849 --> 00:38:09,960
question and yeah so well I guess part

909
00:38:08,820 --> 00:38:12,690
of the problem too is that it won't

910
00:38:09,960 --> 00:38:14,400
actually hit the debug light yes so

911
00:38:12,690 --> 00:38:18,108
we're gonna all right so so here's what

912
00:38:14,400 --> 00:38:18,108
I here's what I would propose we do I

913
00:38:19,070 --> 00:38:27,450
would propose that what we need to do is

914
00:38:24,289 --> 00:38:29,670
take this in two steps I'm gonna put so

915
00:38:27,449 --> 00:38:35,879
in here I'm gonna take the direction to

916
00:38:29,670 --> 00:38:37,760
the light source right I'm gonna take

917
00:38:35,880 --> 00:38:40,108
the direction of light source here and

918
00:38:37,760 --> 00:38:42,570
compute that by just taking where the

919
00:38:40,108 --> 00:38:45,719
light is and subtracting delight creepy

920
00:38:42,570 --> 00:38:48,800
right I'm gonna see the Ray direction

921
00:38:45,719 --> 00:38:48,799
here with just four of those

922
00:38:50,539 --> 00:38:59,779
like so and I don't know that I actually

923
00:38:56,329 --> 00:39:01,460
need those to be normalized but just in

924
00:38:59,780 --> 00:39:05,180
case I'll normalize them here it won't

925
00:39:01,460 --> 00:39:07,820
be expensive it's only done one time the

926
00:39:05,179 --> 00:39:09,109
right bundles so it's not too bad and

927
00:39:07,820 --> 00:39:14,240
plus we're not going to doing that in

928
00:39:09,110 --> 00:39:18,079
general so what I want to do there is

929
00:39:14,239 --> 00:39:20,119
say look we have to start we have to put

930
00:39:18,079 --> 00:39:21,590
the lights into the actual casting space

931
00:39:20,119 --> 00:39:23,809
because otherwise you can't ever hit

932
00:39:21,590 --> 00:39:28,190
them and so what I'd like to do here is

933
00:39:23,809 --> 00:39:34,039
just say well let's go ahead and first

934
00:39:28,190 --> 00:39:37,220
of all try to get the lights into the

935
00:39:34,039 --> 00:39:38,179
system so that we don't pre-code where

936
00:39:37,219 --> 00:39:40,429
they're coming from

937
00:39:38,179 --> 00:39:43,099
and that we can do in our test cast

938
00:39:40,429 --> 00:39:45,289
which will debug that part of it which

939
00:39:43,099 --> 00:39:48,789
would save us some time because it'll

940
00:39:45,289 --> 00:39:52,219
make it easier for us to to figure out

941
00:39:48,789 --> 00:39:58,789
why can't where's the enlarged box at

942
00:39:52,219 --> 00:40:05,899
all there we go got to put this one with

943
00:39:58,789 --> 00:40:08,079
our sort of bundle of things we do all

944
00:40:05,900 --> 00:40:08,079
right

945
00:40:09,500 --> 00:40:12,679
so I think that's what we want to do

946
00:40:10,820 --> 00:40:14,750
first is get the lights into the REA

947
00:40:12,679 --> 00:40:16,940
castor rather than having them be

948
00:40:14,750 --> 00:40:18,409
outside in the debug thing and make our

949
00:40:16,940 --> 00:40:21,500
test code work with that so I think

950
00:40:18,409 --> 00:40:23,449
that's mostly what we want looking

951
00:40:21,500 --> 00:40:29,269
through here what is the actual

952
00:40:23,449 --> 00:40:32,299
complaint on on this guy ray index its

953
00:40:29,269 --> 00:40:35,239
ray bundle index that's all

954
00:40:32,300 --> 00:40:36,920
and then spam Vox look here yeah is what

955
00:40:35,239 --> 00:40:39,618
we we actually want to be doing we don't

956
00:40:36,920 --> 00:40:41,480
want any of this stuff so we're just

957
00:40:39,619 --> 00:40:45,829
going to be basically spamming it with

958
00:40:41,480 --> 00:40:50,059
the transfer PPS ray and so we know the

959
00:40:45,829 --> 00:40:52,329
light probe P we know the transfer

960
00:40:50,059 --> 00:40:56,719
photons per second that we want in there

961
00:40:52,329 --> 00:41:02,059
you know the light solution and what

962
00:40:56,719 --> 00:41:05,329
else do we need like position light

963
00:41:02,059 --> 00:41:13,279
color spam position uh-oh

964
00:41:05,329 --> 00:41:16,099
so okay that's for our fall off so again

965
00:41:13,280 --> 00:41:19,190
this is where we kind of have to figure

966
00:41:16,099 --> 00:41:23,750
out information we don't actually have

967
00:41:19,190 --> 00:41:26,170
right and this is why I say this is

968
00:41:23,750 --> 00:41:33,949
going to be pretty come pretty confusing

969
00:41:26,170 --> 00:41:35,119
but that's okay so for right now yeah

970
00:41:33,949 --> 00:41:37,549
I'm trying to think of how we would do

971
00:41:35,119 --> 00:41:38,630
this so you can see here why I'm saying

972
00:41:37,550 --> 00:41:41,330
this is going to be the hardest part of

973
00:41:38,630 --> 00:41:44,450
the problem so we want to be able to set

974
00:41:41,329 --> 00:41:47,179
our voxels to have nice fall-off and so

975
00:41:44,449 --> 00:41:49,519
we want the fall-off to be computed

976
00:41:47,179 --> 00:41:54,339
based on like where the light was coming

977
00:41:49,519 --> 00:41:57,530
from and so they get a nice sort of

978
00:41:54,340 --> 00:42:00,858
lighting continuous lighting sort of

979
00:41:57,530 --> 00:42:02,510
thing happening from there right and so

980
00:42:00,858 --> 00:42:05,090
what that means is we need to produce

981
00:42:02,510 --> 00:42:08,240
information about that that we don't

982
00:42:05,090 --> 00:42:09,680
actually have right because we're

983
00:42:08,239 --> 00:42:12,319
getting light from everywhere and not

984
00:42:09,679 --> 00:42:14,719
just from certain lights and so I feel

985
00:42:12,320 --> 00:42:17,660
like that's the tricky part and we're

986
00:42:14,719 --> 00:42:20,379
gonna have to like actually have some

987
00:42:17,659 --> 00:42:23,469
kind of a lighting position information

988
00:42:20,380 --> 00:42:25,269
in so I think we're gonna literally need

989
00:42:23,469 --> 00:42:27,669
that this stuff here like we're gonna

990
00:42:25,268 --> 00:42:30,989
need the like light see and the light

991
00:42:27,670 --> 00:42:32,950
key to actually come into the system and

992
00:42:30,989 --> 00:42:39,608
it's gonna be worse than that

993
00:42:32,949 --> 00:42:41,318
it's gonna actually be like a yeah it's

994
00:42:39,608 --> 00:42:42,969
gonna actually be it'd be worse than

995
00:42:41,318 --> 00:42:44,889
that but we'll see that in a second

996
00:42:42,969 --> 00:42:55,659
we're gonna actually need like some kind

997
00:42:44,889 --> 00:42:57,518
of a structure that tracks these but I'm

998
00:42:55,659 --> 00:42:59,108
starting to sort of get it now I sort of

999
00:42:57,518 --> 00:43:05,618
get what's gonna have to happen so

1000
00:42:59,108 --> 00:43:08,139
that's probably okay all right so moving

1001
00:43:05,619 --> 00:43:12,180
on what's wrong with our spam voxel here

1002
00:43:08,139 --> 00:43:12,179
let me just get that one correct oops

1003
00:43:12,329 --> 00:43:20,230
just want to I just want to clean this

1004
00:43:14,798 --> 00:43:24,009
up in kind of reverse order so the

1005
00:43:20,230 --> 00:43:28,659
transfer PPS right needs to be added

1006
00:43:24,010 --> 00:43:33,640
the light see is not actually there so

1007
00:43:28,659 --> 00:43:35,679
looking at this code it's that and so in

1008
00:43:33,639 --> 00:43:39,210
here where we actually compute the

1009
00:43:35,679 --> 00:43:39,210
transfer PPS it's like you know

1010
00:43:44,039 --> 00:43:51,699
something like this so if we actually

1011
00:43:48,730 --> 00:43:55,389
average like the location that the light

1012
00:43:51,699 --> 00:43:57,669
is coming from and the amount that's

1013
00:43:55,389 --> 00:44:00,250
coming in we could actually use the

1014
00:43:57,670 --> 00:44:01,599
amount to weight the direction as well

1015
00:44:00,250 --> 00:44:03,969
you know what I mean

1016
00:44:01,599 --> 00:44:07,839
so in other words like we could say well

1017
00:44:03,969 --> 00:44:10,209
what's the total like what's the what's

1018
00:44:07,840 --> 00:44:11,858
the total amount of power that's in this

1019
00:44:10,210 --> 00:44:20,349
thing right you know like maybe

1020
00:44:11,858 --> 00:44:23,049
something like this something like that

1021
00:44:20,349 --> 00:44:25,509
where we get the total amount can we do

1022
00:44:23,050 --> 00:44:27,690
this do we have RGB in our Vic 3 by the

1023
00:44:25,510 --> 00:44:27,690
way

1024
00:44:33,320 --> 00:44:40,910
we do so if we look at our red green and

1025
00:44:39,320 --> 00:44:42,950
blue and say look the total amount of

1026
00:44:40,909 --> 00:44:47,440
stuff that's going through here that

1027
00:44:42,949 --> 00:44:47,439
maybe is our waiting so we say like look

1028
00:44:47,679 --> 00:44:54,349
some the light the lighting that we're

1029
00:44:50,389 --> 00:44:59,029
getting incoming but wait the directions

1030
00:44:54,349 --> 00:45:01,849
right so the light or wait the locations

1031
00:44:59,030 --> 00:45:04,010
that it's coming from right so then we

1032
00:45:01,849 --> 00:45:06,170
would say all right you know this light

1033
00:45:04,010 --> 00:45:08,480
position is now some kind of a weight

1034
00:45:06,170 --> 00:45:11,030
here and we're gonna want to sum that so

1035
00:45:08,480 --> 00:45:15,289
like you know maybe this is like

1036
00:45:11,030 --> 00:45:17,210
actually this power and like total power

1037
00:45:15,289 --> 00:45:19,489
or you know plus equals this power so we

1038
00:45:17,210 --> 00:45:26,210
know how much it is and we can invert it

1039
00:45:19,489 --> 00:45:28,639
right so like power M equals zero or

1040
00:45:26,210 --> 00:45:32,570
power coefficient something like that if

1041
00:45:28,639 --> 00:45:37,190
this power is greater than zero then the

1042
00:45:32,570 --> 00:45:38,600
power coefficient is one over right we

1043
00:45:37,190 --> 00:45:40,460
just basically wanna do that we have a

1044
00:45:38,599 --> 00:45:43,610
utility function for it it's called safe

1045
00:45:40,460 --> 00:45:46,309
ratio zero and so what we can do is just

1046
00:45:43,610 --> 00:45:48,710
say look let's take the safe ratio zero

1047
00:45:46,309 --> 00:45:51,500
of the total power sorry I said this

1048
00:45:48,710 --> 00:45:54,740
karmic total power take the safe ratio 0

1049
00:45:51,500 --> 00:45:56,739
of 1 over the total power and that's

1050
00:45:54,739 --> 00:45:59,029
going to be the coefficient that

1051
00:45:56,739 --> 00:46:03,019
normalizes our position to an to a

1052
00:45:59,030 --> 00:46:04,880
location right and so that's we could

1053
00:46:03,019 --> 00:46:06,559
average the positions of the light that

1054
00:46:04,880 --> 00:46:08,300
were coming in weighted by how much

1055
00:46:06,559 --> 00:46:10,599
light we see coming in from there and we

1056
00:46:08,300 --> 00:46:13,280
could you know we could use that right

1057
00:46:10,599 --> 00:46:15,170
now that's actually not a bad averaging

1058
00:46:13,280 --> 00:46:17,330
rule I I'm like thinking in my head I'm

1059
00:46:15,170 --> 00:46:19,430
like oh that seems pretty reasonable but

1060
00:46:17,329 --> 00:46:20,929
again the only thing that's not good

1061
00:46:19,429 --> 00:46:22,129
about it is it doesn't tell us what to

1062
00:46:20,929 --> 00:46:24,259
do when we want to start making this

1063
00:46:22,130 --> 00:46:26,329
higher fidelity because remember if we

1064
00:46:24,260 --> 00:46:28,520
only had one like field so if we were

1065
00:46:26,329 --> 00:46:31,699
only if we were only providing a single

1066
00:46:28,519 --> 00:46:33,920
light field then okay right then it

1067
00:46:31,699 --> 00:46:35,419
makes sense because basically what we're

1068
00:46:33,920 --> 00:46:38,539
saying is look this is the best we can

1069
00:46:35,420 --> 00:46:40,550
do to approximate an incoming light

1070
00:46:38,539 --> 00:46:42,800
position and an incoming light amount

1071
00:46:40,550 --> 00:46:44,780
and then we can basically just say okay

1072
00:46:42,800 --> 00:46:47,539
you know spam the voxel with that

1073
00:46:44,780 --> 00:46:49,100
information that we've received how

1074
00:46:47,539 --> 00:46:50,329
in this particular case we know that we

1075
00:46:49,099 --> 00:46:52,159
could store a lot more information in

1076
00:46:50,329 --> 00:46:54,739
the back so we could store multiple

1077
00:46:52,159 --> 00:46:56,960
incoming light directions at every voxel

1078
00:46:54,739 --> 00:46:59,000
position and the question is what would

1079
00:46:56,960 --> 00:47:02,900
we then do so if we knew we could store

1080
00:46:59,000 --> 00:47:04,429
more than one we would need to do

1081
00:47:02,900 --> 00:47:06,410
something here that allowed us to take

1082
00:47:04,429 --> 00:47:10,369
whatever information was currently in

1083
00:47:06,409 --> 00:47:12,289
the voxel and say well or or I mean not

1084
00:47:10,369 --> 00:47:14,539
not so but information is in the voxel

1085
00:47:12,289 --> 00:47:16,099
but like of the Rays that we cast when

1086
00:47:14,539 --> 00:47:17,480
we have information about lighting

1087
00:47:16,099 --> 00:47:19,159
directions we would need to be able to

1088
00:47:17,480 --> 00:47:21,530
split the lighting directions up into

1089
00:47:19,159 --> 00:47:23,109
like at least four separate pieces of

1090
00:47:21,530 --> 00:47:28,400
information for the lighting directions

1091
00:47:23,110 --> 00:47:31,070
that we would then use right and how we

1092
00:47:28,400 --> 00:47:33,550
keep track of those four is pretty

1093
00:47:31,070 --> 00:47:33,550
confusing

1094
00:47:38,889 --> 00:47:46,900
yeah so that's like that's confusing we

1095
00:47:45,159 --> 00:47:54,250
could do something like having the

1096
00:47:46,900 --> 00:47:56,530
sphere information tell us that we could

1097
00:47:54,250 --> 00:48:02,530
keep a list of the highest power things

1098
00:47:56,530 --> 00:48:04,800
we saw gosh you know I just really don't

1099
00:48:02,530 --> 00:48:04,800
know

1100
00:48:12,820 --> 00:48:17,140
I just really don't know how we're gonna

1101
00:48:15,670 --> 00:48:18,490
do that I think there's a lot of

1102
00:48:17,139 --> 00:48:20,049
different ways we could try it but none

1103
00:48:18,489 --> 00:48:22,119
of them in my head seems like an

1104
00:48:20,050 --> 00:48:26,650
obviously right choice so I just don't

1105
00:48:22,119 --> 00:48:29,230
know anyway what I do know is that our

1106
00:48:26,650 --> 00:48:30,700
light information here yeah it's gonna

1107
00:48:29,230 --> 00:48:37,210
have to look something like this we need

1108
00:48:30,699 --> 00:48:39,639
the total power to be summed like so for

1109
00:48:37,210 --> 00:48:41,139
each light index there and then we we're

1110
00:48:39,639 --> 00:48:46,210
going to need some way of doing this

1111
00:48:41,139 --> 00:48:48,159
stuff here so light sample and sample

1112
00:48:46,210 --> 00:48:50,139
ref color here light sample is not a

1113
00:48:48,159 --> 00:48:52,779
thing that we actually have not sure

1114
00:48:50,139 --> 00:48:55,599
where that came from it's probably was

1115
00:48:52,780 --> 00:48:57,310
in here so we probably need this light C

1116
00:48:55,599 --> 00:48:58,509
to actually be called a light sample and

1117
00:48:57,309 --> 00:49:03,460
then that'll float through properly in

1118
00:48:58,510 --> 00:49:07,990
here so I think that's all we really

1119
00:49:03,460 --> 00:49:08,980
need and then we should be okay except

1120
00:49:07,989 --> 00:49:13,089
for the fact that we have actually

1121
00:49:08,980 --> 00:49:16,059
written this function yet and then we've

1122
00:49:13,090 --> 00:49:22,420
got this light position here right which

1123
00:49:16,059 --> 00:49:25,570
is perhaps if appeared that's actually

1124
00:49:22,420 --> 00:49:31,329
true so we do need the probe sample P in

1125
00:49:25,570 --> 00:49:33,640
this case to be sort of consistent so if

1126
00:49:31,329 --> 00:49:36,849
we have the light coming from the moon

1127
00:49:33,639 --> 00:49:39,009
we need that to be set so we kind of

1128
00:49:36,849 --> 00:49:46,029
need this to basically look more like

1129
00:49:39,010 --> 00:49:48,040
this like the probe sample P it needs to

1130
00:49:46,030 --> 00:49:49,960
be set outside and it needs to be set

1131
00:49:48,039 --> 00:49:52,719
from the moon location like wherever

1132
00:49:49,960 --> 00:49:54,670
that's going to be and we don't actually

1133
00:49:52,719 --> 00:49:57,250
know I guess where that's going to be

1134
00:49:54,670 --> 00:50:00,849
but like we need there to be like a moon

1135
00:49:57,250 --> 00:50:03,969
P right and so where we actually set up

1136
00:50:00,849 --> 00:50:05,589
the moon light we need you know

1137
00:50:03,969 --> 00:50:09,369
something here that's like where did you

1138
00:50:05,590 --> 00:50:10,900
think the moon actually was right and we

1139
00:50:09,369 --> 00:50:14,650
don't know but it's probably like way

1140
00:50:10,900 --> 00:50:16,450
the heck up there right and in order for

1141
00:50:14,650 --> 00:50:19,059
the fall-off to work properly the spam

1142
00:50:16,449 --> 00:50:20,889
voxel is going to have to have more

1143
00:50:19,059 --> 00:50:23,289
information in it as well so for example

1144
00:50:20,889 --> 00:50:25,960
if you look at what's going on here this

1145
00:50:23,289 --> 00:50:27,880
fall-off equation is not going to be

1146
00:50:25,960 --> 00:50:29,500
correct like the moon's not gonna have a

1147
00:50:27,880 --> 00:50:32,200
fall-off it's just gonna be ubiquitous

1148
00:50:29,500 --> 00:50:34,960
right so we would need this to also be

1149
00:50:32,199 --> 00:50:37,838
something that gets passed in there so

1150
00:50:34,960 --> 00:50:39,099
for example like this coefficient would

1151
00:50:37,838 --> 00:50:42,000
have to be passed as part of the

1152
00:50:39,099 --> 00:50:46,240
lighting information so for example like

1153
00:50:42,000 --> 00:50:51,400
light fall-off that would have to come

1154
00:50:46,239 --> 00:50:53,979
in here right and the light fall-off of

1155
00:50:51,400 --> 00:50:56,200
0.05 F or whatever would have to be

1156
00:50:53,980 --> 00:50:59,050
something that was just set as a

1157
00:50:56,199 --> 00:51:00,549
separate thing so you know who knows

1158
00:50:59,050 --> 00:51:02,440
what we're gonna set here I don't really

1159
00:51:00,550 --> 00:51:04,869
know but like let's say we set the light

1160
00:51:02,440 --> 00:51:06,579
fall-off to that in this case and we set

1161
00:51:04,869 --> 00:51:10,119
the light fall-off to zero and the other

1162
00:51:06,579 --> 00:51:12,039
case or something like that right and so

1163
00:51:10,119 --> 00:51:15,059
the fall-off factor would also have to

1164
00:51:12,039 --> 00:51:17,199
be averaged right across these runs so

1165
00:51:15,059 --> 00:51:22,769
we'd have like at this light fall-off

1166
00:51:17,199 --> 00:51:22,769
and it would get summed

1167
00:51:27,670 --> 00:51:39,200
again just doing a simple summation here

1168
00:51:30,400 --> 00:51:40,910
not particularly clever or anything and

1169
00:51:39,199 --> 00:51:42,439
that's just producing the rolling

1170
00:51:40,909 --> 00:51:44,269
average of how these things should be

1171
00:51:42,440 --> 00:51:46,099
falling off with distance and those are

1172
00:51:44,269 --> 00:51:48,710
things that we can set again in the

1173
00:51:46,099 --> 00:51:51,289
probes I mean in lights when we push

1174
00:51:48,710 --> 00:51:53,269
them on if we want to again it's just

1175
00:51:51,289 --> 00:51:54,558
like some light parameterization stuff

1176
00:51:53,269 --> 00:51:56,480
we're gonna have to decide as we start

1177
00:51:54,559 --> 00:51:58,339
between the lighting its arbitrary and

1178
00:51:56,480 --> 00:51:59,900
we can do whatever we want there we can

1179
00:51:58,338 --> 00:52:01,880
even have other kinds of equations if we

1180
00:51:59,900 --> 00:52:03,710
need to it's pretty flexible and that's

1181
00:52:01,880 --> 00:52:07,309
not like it's just a little computation

1182
00:52:03,710 --> 00:52:09,519
here that's not too expensive so what

1183
00:52:07,309 --> 00:52:11,869
we'd like to do here under the power

1184
00:52:09,519 --> 00:52:14,769
summation stuff the same exact way we're

1185
00:52:11,869 --> 00:52:17,930
doing it before is we need to take that

1186
00:52:14,769 --> 00:52:21,469
fall off and just normalize it out like

1187
00:52:17,929 --> 00:52:23,539
so and you know maybe we do these in two

1188
00:52:21,469 --> 00:52:26,989
steps that we can actually see so like

1189
00:52:23,539 --> 00:52:31,400
light P you know times V equals power

1190
00:52:26,989 --> 00:52:34,009
see light fall-off times equals power

1191
00:52:31,400 --> 00:52:35,358
see that way we can see what they are

1192
00:52:34,010 --> 00:52:36,799
before they get passed when we're done

1193
00:52:35,358 --> 00:52:38,328
bugging again not gonna do anything

1194
00:52:36,798 --> 00:52:39,980
different in terms of the actual code

1195
00:52:38,329 --> 00:52:44,240
generated but it's just something we can

1196
00:52:39,980 --> 00:52:45,710
kind of expect a little easier and that

1197
00:52:44,239 --> 00:52:48,348
will give us all the information that we

1198
00:52:45,710 --> 00:52:50,298
need now and we just kind of now need oh

1199
00:52:48,349 --> 00:52:53,410
and we need this fall-off to actually be

1200
00:52:50,298 --> 00:52:53,409
specified here somewhere right

1201
00:53:00,239 --> 00:53:07,000
okay so now that's all good and in here

1202
00:53:04,630 --> 00:53:09,760
we need this to be passed as well so the

1203
00:53:07,000 --> 00:53:19,210
light fall-off comes in here and the you

1204
00:53:09,760 --> 00:53:22,270
know this is a really cumbersome thing

1205
00:53:19,210 --> 00:53:26,619
to do but I'm just doing just base

1206
00:53:22,269 --> 00:53:27,909
leaves adding this one parameter and

1207
00:53:26,619 --> 00:53:29,079
again we don't really know that this is

1208
00:53:27,909 --> 00:53:30,250
the way we're gonna want to do this but

1209
00:53:29,079 --> 00:53:32,289
you know we're just trying to get things

1210
00:53:30,250 --> 00:53:34,059
working in a way that that makes sense

1211
00:53:32,289 --> 00:53:37,019
and produces reasonable result so that

1212
00:53:34,059 --> 00:53:41,049
we can worry about the speed of things

1213
00:53:37,019 --> 00:53:42,969
sort of as a second pass down all right

1214
00:53:41,050 --> 00:53:44,860
so we need the light fall-off to be

1215
00:53:42,969 --> 00:53:46,989
passed here and in this case we know

1216
00:53:44,860 --> 00:53:49,150
that it's just always 0.05 because that

1217
00:53:46,989 --> 00:53:50,619
that particular routine is the test case

1218
00:53:49,150 --> 00:53:54,700
which just is always going to have the

1219
00:53:50,619 --> 00:53:56,559
same fall-off specified for it it looks

1220
00:53:54,699 --> 00:53:58,839
like this is a little unhappy right now

1221
00:53:56,559 --> 00:54:01,420
I'm not sure why what did I forget to

1222
00:53:58,840 --> 00:54:04,990
pass we have the letting solution we

1223
00:54:01,420 --> 00:54:07,300
have the spamming location oh well it's

1224
00:54:04,989 --> 00:54:11,169
not spam P it's cast P so I suppose

1225
00:54:07,300 --> 00:54:13,330
that's probably the issue there we have

1226
00:54:11,170 --> 00:54:14,829
the lighting color the fall-off is

1227
00:54:13,329 --> 00:54:17,049
correct and then the test case passing

1228
00:54:14,829 --> 00:54:19,569
down so that's all good

1229
00:54:17,050 --> 00:54:21,850
and here we know that the irradiance

1230
00:54:19,570 --> 00:54:24,280
stuff is gone so we just need to delete

1231
00:54:21,849 --> 00:54:25,730
it and that should be fine

1232
00:54:24,280 --> 00:54:28,809
and

1233
00:54:25,730 --> 00:54:28,809
[Music]

1234
00:54:33,510 --> 00:54:39,270
I guess that's it yeah so now the only

1235
00:54:37,409 --> 00:54:41,549
thing we really need is a way to produce

1236
00:54:39,269 --> 00:54:44,429
light samples and then we would actually

1237
00:54:41,550 --> 00:54:48,300
be done quote-unquote although like I

1238
00:54:44,429 --> 00:54:49,919
said the hard part is still coming up so

1239
00:54:48,300 --> 00:54:53,220
what we need to do here is just have a

1240
00:54:49,920 --> 00:54:56,670
way of sampling the lighting instead of

1241
00:54:53,219 --> 00:54:58,799
in the shader in the actual outside code

1242
00:54:56,670 --> 00:55:02,849
right so we need a way to sample this in

1243
00:54:58,800 --> 00:55:04,920
here and so let's go ahead and get

1244
00:55:02,849 --> 00:55:06,570
started on how we're gonna sort of do

1245
00:55:04,920 --> 00:55:10,980
that but though actually at the moment I

1246
00:55:06,570 --> 00:55:12,450
might just return nothing and focus on a

1247
00:55:10,980 --> 00:55:19,980
sort of a separate part of this problem

1248
00:55:12,449 --> 00:55:22,769
so maybe I'll call the sample game

1249
00:55:19,980 --> 00:55:24,329
sample and so maybe we won't actually

1250
00:55:22,769 --> 00:55:26,059
implement this quite yet because I might

1251
00:55:24,329 --> 00:55:28,859
not really care about that part yet

1252
00:55:26,059 --> 00:55:34,108
we'll see in a second let me take a look

1253
00:55:28,858 --> 00:55:36,059
here what is the problem here that is

1254
00:55:34,108 --> 00:55:40,380
the problem this was supposed to be

1255
00:55:36,059 --> 00:55:42,088
transferred it wasn't so that's just a

1256
00:55:40,380 --> 00:55:43,318
hasty sketch of how this routine might

1257
00:55:42,088 --> 00:55:45,960
look but what I'd like to do is fall

1258
00:55:43,318 --> 00:55:47,219
back to our test case first so because I

1259
00:55:45,960 --> 00:55:48,510
think there's some things now we can do

1260
00:55:47,219 --> 00:55:51,000
in the test case having with the fad

1261
00:55:48,510 --> 00:55:52,589
that will help us out so the first thing

1262
00:55:51,000 --> 00:55:55,050
we can do is put the lighting into the

1263
00:55:52,588 --> 00:55:56,519
actual red cast and like I said that's

1264
00:55:55,050 --> 00:55:58,380
gonna have to happen because we

1265
00:55:56,519 --> 00:55:59,670
currently have the test cast hard-coded

1266
00:55:58,380 --> 00:56:01,680
to just use a hard-coded light position

1267
00:55:59,670 --> 00:56:02,909
but we now want the lights action be

1268
00:56:01,679 --> 00:56:04,739
coming from the environment and having

1269
00:56:02,909 --> 00:56:06,598
as many as we want and so in order to do

1270
00:56:04,739 --> 00:56:11,338
that let's start actually putting those

1271
00:56:06,599 --> 00:56:13,349
lights into the the the casting

1272
00:56:11,338 --> 00:56:15,179
hierarchy correctly right so that's

1273
00:56:13,349 --> 00:56:17,818
something that we want to be able to do

1274
00:56:15,179 --> 00:56:20,250
now so when we push a light in here we

1275
00:56:17,818 --> 00:56:22,259
want to actually push those lights using

1276
00:56:20,250 --> 00:56:24,000
the push light call and pick them up out

1277
00:56:22,260 --> 00:56:26,190
of the system using the push light call

1278
00:56:24,000 --> 00:56:30,750
and so the way that we want to do that

1279
00:56:26,190 --> 00:56:32,369
is you know inside there we may want to

1280
00:56:30,750 --> 00:56:34,230
put them in a separate array it's it's

1281
00:56:32,369 --> 00:56:36,599
hard to really say I'm guessing that we

1282
00:56:34,230 --> 00:56:40,219
probably do so that we would have a

1283
00:56:36,599 --> 00:56:42,420
split where we would have you know

1284
00:56:40,219 --> 00:56:44,429
occluders and lights would sort of be

1285
00:56:42,420 --> 00:56:45,690
treated a little bit separately and the

1286
00:56:44,429 --> 00:56:47,039
reason for that again is because we

1287
00:56:45,690 --> 00:56:49,260
probably want to sort

1288
00:56:47,039 --> 00:56:51,869
bias ourselves to shoot towards light

1289
00:56:49,260 --> 00:56:54,300
sources sometimes when maybe we wouldn't

1290
00:56:51,869 --> 00:56:55,920
ordinarily have done so and there's

1291
00:56:54,300 --> 00:56:57,690
different ways we can do that and you

1292
00:56:55,920 --> 00:56:58,829
know I'll be honest I'm kind of

1293
00:56:57,690 --> 00:57:01,380
interested in thinking about that a

1294
00:56:58,829 --> 00:57:03,690
little bit one of the things we could do

1295
00:57:01,380 --> 00:57:05,039
that is not something I really am super

1296
00:57:03,690 --> 00:57:06,539
familiar with I haven't heard of it

1297
00:57:05,039 --> 00:57:12,059
being done before but I'm sure someone's

1298
00:57:06,539 --> 00:57:14,969
done it is we could actually raycast and

1299
00:57:12,059 --> 00:57:20,759
then bend rays towards light sources as

1300
00:57:14,969 --> 00:57:23,480
a separate thing based on sort of the

1301
00:57:20,760 --> 00:57:28,770
spatial hierarchy calling a little bit

1302
00:57:23,480 --> 00:57:30,420
this is sort of a strange idea but you

1303
00:57:28,769 --> 00:57:31,739
know let me draw it out for you just

1304
00:57:30,420 --> 00:57:33,119
just to give you some perspective on

1305
00:57:31,739 --> 00:57:34,739
what I'm thinking because it's kind of a

1306
00:57:33,119 --> 00:57:36,389
weird idea but I'm a suspect

1307
00:57:34,739 --> 00:57:37,619
it's not weird enough that I don't think

1308
00:57:36,389 --> 00:57:39,089
someone's probably tried it before I

1309
00:57:37,619 --> 00:57:40,710
feel like someone probably has try this

1310
00:57:39,090 --> 00:57:43,920
form you know maybe it's stupid but I

1311
00:57:40,710 --> 00:57:48,269
feel like not totally ridiculous why is

1312
00:57:43,920 --> 00:57:53,539
my cord is all messed up here use the

1313
00:57:48,269 --> 00:57:53,539
drawing tablet enough all right so

1314
00:58:03,789 --> 00:58:09,590
so if we take a look at how this is you

1315
00:58:07,940 --> 00:58:11,240
know working essentially what we're

1316
00:58:09,590 --> 00:58:14,660
gonna have is we've got a spatial

1317
00:58:11,239 --> 00:58:24,949
partition and we know I guess I should

1318
00:58:14,659 --> 00:58:28,129
say spatial partition name of Lights um

1319
00:58:24,949 --> 00:58:31,039
and I'm not sure exactly how we want to

1320
00:58:28,130 --> 00:58:34,250
look at this but effectively what we

1321
00:58:31,039 --> 00:58:36,440
want is we know that lights are maybe

1322
00:58:34,250 --> 00:58:39,650
somewhat rare throughout our scene

1323
00:58:36,440 --> 00:58:41,179
unfortunately meaning that you know the

1324
00:58:39,650 --> 00:58:42,920
chances that you'll hit a light source

1325
00:58:41,179 --> 00:58:44,750
when you randomly cast array might be

1326
00:58:42,920 --> 00:58:46,400
kind of low because you know in certain

1327
00:58:44,750 --> 00:58:47,599
scenes there may only be four or five

1328
00:58:46,400 --> 00:58:49,220
lights you know maybe in some scenes

1329
00:58:47,599 --> 00:58:50,750
there's hundreds of lights and you'll

1330
00:58:49,219 --> 00:58:52,789
definitely hit one if you just randomly

1331
00:58:50,750 --> 00:58:54,860
pick directions you'll hit one pretty

1332
00:58:52,789 --> 00:58:56,389
quickly but there may be other ones

1333
00:58:54,860 --> 00:58:58,250
where like the entire light is just

1334
00:58:56,389 --> 00:58:59,719
coming from like one candle or something

1335
00:58:58,250 --> 00:59:01,550
or you know torch that the hero is

1336
00:58:59,719 --> 00:59:04,009
holding or something like that and in

1337
00:59:01,550 --> 00:59:06,200
that case most of our rays will miss and

1338
00:59:04,010 --> 00:59:08,240
so we won't be able to pick up that

1339
00:59:06,199 --> 00:59:12,319
light sources as much as we we should

1340
00:59:08,239 --> 00:59:14,239
right and so if we want to bias towards

1341
00:59:12,320 --> 00:59:15,830
making sure that we at least sample the

1342
00:59:14,239 --> 00:59:17,929
place where the light is actually coming

1343
00:59:15,829 --> 00:59:20,449
from what we need to be able to do is

1344
00:59:17,929 --> 00:59:22,159
know that for a given location where we

1345
00:59:20,449 --> 00:59:23,569
might buy us towards and if there's only

1346
00:59:22,159 --> 00:59:24,949
one light in the entire system that's

1347
00:59:23,570 --> 00:59:27,559
fine but if there's ten lights in the

1348
00:59:24,949 --> 00:59:29,210
system but one in each room then the

1349
00:59:27,559 --> 00:59:31,009
lights that we cast on particular room

1350
00:59:29,210 --> 00:59:33,949
want to bias towards the light in that

1351
00:59:31,010 --> 00:59:35,270
room and so on right and so all I was

1352
00:59:33,949 --> 00:59:36,799
saying was if you imagine how the

1353
00:59:35,269 --> 00:59:38,150
spatial partition looks you know you've

1354
00:59:36,800 --> 00:59:41,510
got something like this if we imagine

1355
00:59:38,150 --> 00:59:43,430
top-down and maybe we're casting rays

1356
00:59:41,510 --> 00:59:46,910
from here right and there's light

1357
00:59:43,429 --> 00:59:47,659
sources maybe like here here here and

1358
00:59:46,909 --> 00:59:51,529
here

1359
00:59:47,659 --> 00:59:53,809
right and all of these are may be

1360
00:59:51,530 --> 00:59:56,000
spatially partitioned maybe this room

1361
00:59:53,809 --> 00:59:58,400
right has solid walls so you're never

1362
00:59:56,000 --> 01:00:00,650
gonna hit these right and so we'd like

1363
00:59:58,400 --> 01:00:01,730
to know is if we're casting rays from

1364
01:00:00,650 --> 01:00:04,400
this location

1365
01:00:01,730 --> 01:00:05,809
when we want to buy us our rays we want

1366
01:00:04,400 --> 01:00:09,559
to bias them towards this light source

1367
01:00:05,809 --> 01:00:11,449
but we don't know that right so what we

1368
01:00:09,559 --> 01:00:13,639
would like to do is perhaps make use of

1369
01:00:11,449 --> 01:00:15,259
our spatial partition to say hey what

1370
01:00:13,639 --> 01:00:17,509
are the lights that are nearby and maybe

1371
01:00:15,260 --> 01:00:19,040
only bias towards like these too but

1372
01:00:17,510 --> 01:00:20,690
bias towards like this one for example

1373
01:00:19,039 --> 01:00:24,079
because the chance is that you're gonna

1374
01:00:20,690 --> 01:00:26,570
hit that one or actually pretty low you

1375
01:00:24,079 --> 01:00:28,789
know what I mean so what we'd like to do

1376
01:00:26,570 --> 01:00:31,400
is have a way of bending raised towards

1377
01:00:28,789 --> 01:00:33,050
light sources based on the spatial

1378
01:00:31,400 --> 01:00:34,490
partition and what we I was thinking we

1379
01:00:33,050 --> 01:00:38,480
could sort of do is something like well

1380
01:00:34,489 --> 01:00:40,039
what if we just look up in the spatial

1381
01:00:38,480 --> 01:00:45,199
partition what if our spatial partitions

1382
01:00:40,039 --> 01:00:46,909
stores like the closest light source at

1383
01:00:45,199 --> 01:00:51,189
each level of the hierarchy or something

1384
01:00:46,909 --> 01:00:55,358
like that or like some kind of a way of

1385
01:00:51,190 --> 01:00:55,358
producing that information

1386
01:01:03,079 --> 01:01:12,279
I'm not sure exactly what I mean but

1387
01:01:05,719 --> 01:01:15,559
like imagine that as we build our

1388
01:01:12,280 --> 01:01:18,410
hierarchy of bounding boxes at each

1389
01:01:15,559 --> 01:01:24,739
level of the bounding box we store what

1390
01:01:18,409 --> 01:01:31,609
the light source is that is most central

1391
01:01:24,739 --> 01:01:34,609
to this one and then as we find probe

1392
01:01:31,610 --> 01:01:41,780
locations we expand down to the point

1393
01:01:34,610 --> 01:01:45,860
where we or we look upward from where we

1394
01:01:41,780 --> 01:01:50,180
are until we gather some fixed number of

1395
01:01:45,860 --> 01:01:51,380
light sources that we bend towards does

1396
01:01:50,179 --> 01:01:53,679
that make sense do you know what I'm

1397
01:01:51,380 --> 01:01:53,680
saying

1398
01:01:59,699 --> 01:02:05,439
in other words imagine for each light

1399
01:02:02,498 --> 01:02:08,949
probe we look at where the light probe

1400
01:02:05,440 --> 01:02:12,489
is in the voxel and we walk upwards from

1401
01:02:08,949 --> 01:02:15,489
the voxel I'm not voxel spatial

1402
01:02:12,489 --> 01:02:21,519
partition we walk upwards through our

1403
01:02:15,489 --> 01:02:23,259
parents until we get to four light

1404
01:02:21,518 --> 01:02:29,258
sources and then we go gather what they

1405
01:02:23,259 --> 01:02:31,528
are is that stupid that could be pretty

1406
01:02:29,259 --> 01:02:31,528
dumb

1407
01:02:38,429 --> 01:02:42,219
so I guess what I would say is it's not

1408
01:02:40,719 --> 01:02:44,289
dumb enough that I don't think we should

1409
01:02:42,219 --> 01:02:46,000
try it but you get kind of what I'm

1410
01:02:44,289 --> 01:02:50,019
saying right so in other words we would

1411
01:02:46,000 --> 01:02:51,519
just we would just find a node that

1412
01:02:50,019 --> 01:02:54,009
contained the first node that contains

1413
01:02:51,519 --> 01:02:56,440
four light sources and why four because

1414
01:02:54,010 --> 01:03:01,210
that's how many we cast in a packet we

1415
01:02:56,440 --> 01:03:02,710
would do eight if we you know we're if

1416
01:03:01,210 --> 01:03:05,519
we were doing something else if we were

1417
01:03:02,710 --> 01:03:07,990
doing avx2

1418
01:03:05,519 --> 01:03:09,789
so we just however many we cast in a

1419
01:03:07,989 --> 01:03:11,559
bundle we'd look up that many but I

1420
01:03:09,789 --> 01:03:17,559
guess what I'm saying here is like so if

1421
01:03:11,559 --> 01:03:18,730
you imagine in our lighting work here do

1422
01:03:17,559 --> 01:03:19,570
we even use these I don't think we use

1423
01:03:18,730 --> 01:03:21,070
these anymore either

1424
01:03:19,570 --> 01:03:23,260
all right so we'll probably we can get

1425
01:03:21,070 --> 01:03:26,080
rid of a lot of code here eventually so

1426
01:03:23,260 --> 01:03:30,400
if we assume that we've got our lighting

1427
01:03:26,079 --> 01:03:31,779
is kind of packed into a this array of

1428
01:03:30,400 --> 01:03:34,090
boxes right so you have this lighting

1429
01:03:31,780 --> 01:03:35,530
box set here and if we look at the

1430
01:03:34,090 --> 01:03:36,789
lighting boxes right our spatial

1431
01:03:35,530 --> 01:03:41,440
partition is like built out of these

1432
01:03:36,789 --> 01:03:43,210
things and these are you know the these

1433
01:03:41,440 --> 01:03:44,650
are sort of the the things that we push

1434
01:03:43,210 --> 01:03:46,720
on for occluders and also what we could

1435
01:03:44,650 --> 01:03:49,030
push on for light sources and all I was

1436
01:03:46,719 --> 01:03:51,579
really suggesting is well if we actually

1437
01:03:49,030 --> 01:03:54,700
said you know maybe instead of like

1438
01:03:51,579 --> 01:03:56,769
emission right here we would basically

1439
01:03:54,699 --> 01:03:59,439
just out reference we would basically

1440
01:03:56,769 --> 01:04:01,030
say like things that have actual light

1441
01:03:59,440 --> 01:04:02,710
sources associated with them can like

1442
01:04:01,030 --> 01:04:05,200
reference those as a separate thing and

1443
01:04:02,710 --> 01:04:10,720
then when we sort of go up the hierarchy

1444
01:04:05,199 --> 01:04:13,210
maybe we say look we just store in here

1445
01:04:10,719 --> 01:04:15,189
instead of an f32 for admission and a

1446
01:04:13,210 --> 01:04:18,460
texture index like maybe you like forget

1447
01:04:15,190 --> 01:04:20,349
that we've got the you know P the radius

1448
01:04:18,460 --> 01:04:22,539
in the ref seat what if we just said

1449
01:04:20,349 --> 01:04:28,539
like all right there's you know a you

1450
01:04:22,539 --> 01:04:33,009
thirty-two of like four lights right and

1451
01:04:28,539 --> 01:04:34,630
as you sort of build the spatial Harkey

1452
01:04:33,010 --> 01:04:38,470
you propagate the lights upwards so you

1453
01:04:34,630 --> 01:04:39,820
know how many lights you have and so

1454
01:04:38,469 --> 01:04:41,109
what we would do is we'd walk up the

1455
01:04:39,820 --> 01:04:43,960
hierarchy till we get to something that

1456
01:04:41,110 --> 01:04:46,450
actually has all four lights right and

1457
01:04:43,960 --> 01:04:48,579
you can imagine doing this in sort of a

1458
01:04:46,449 --> 01:04:50,829
Squinkie er way if you limited the

1459
01:04:48,579 --> 01:04:51,909
number of lights to 65,000 which is

1460
01:04:50,829 --> 01:04:54,009
seems pretty

1461
01:04:51,909 --> 01:04:57,098
reasonable you could imagine saying

1462
01:04:54,009 --> 01:04:59,199
something like this where you just said

1463
01:04:57,099 --> 01:05:03,970
like look there's a you 64 that says

1464
01:04:59,199 --> 01:05:06,429
what the lights are and what we do is we

1465
01:05:03,969 --> 01:05:06,759
pack 16-bit indices four of them in

1466
01:05:06,429 --> 01:05:09,639
there

1467
01:05:06,759 --> 01:05:12,579
so as you come up you can just say look

1468
01:05:09,639 --> 01:05:14,618
if any part of this thing is all zeros

1469
01:05:12,579 --> 01:05:18,220
which would be a pretty easy thing for

1470
01:05:14,619 --> 01:05:23,230
us to test I guess I don't know why we

1471
01:05:18,219 --> 01:05:27,699
couldn't just do that as well just test

1472
01:05:23,230 --> 01:05:30,670
to see whether any of those are zero and

1473
01:05:27,699 --> 01:05:33,098
if they are then we know we have to keep

1474
01:05:30,670 --> 01:05:35,048
walking up the hierarchy further to try

1475
01:05:33,099 --> 01:05:41,259
and gather more lights to bias towards

1476
01:05:35,048 --> 01:05:43,900
right just an example we could go one

1477
01:05:41,259 --> 01:05:49,929
further and if these lighting boxes were

1478
01:05:43,900 --> 01:05:53,139
even spammy err we could do something

1479
01:05:49,929 --> 01:05:58,838
else where we just said look we keep

1480
01:05:53,139 --> 01:06:00,759
which for directions we have in fact so

1481
01:05:58,838 --> 01:06:04,869
we could do something like this where we

1482
01:06:00,759 --> 01:06:07,318
basically say like hey yeah there's like

1483
01:06:04,869 --> 01:06:07,318
a

1484
01:06:15,510 --> 01:06:26,550
something like this so we just say look

1485
01:06:22,889 --> 01:06:29,069
we take these lighting boxes we

1486
01:06:26,550 --> 01:06:30,900
pre-compute the bias directions towards

1487
01:06:29,070 --> 01:06:32,820
light sources and we store them into the

1488
01:06:30,900 --> 01:06:34,260
hierarchy and that way you just look up

1489
01:06:32,820 --> 01:06:35,460
in the hierarchy where you are and you

1490
01:06:34,260 --> 01:06:37,620
immediately know where your bias

1491
01:06:35,460 --> 01:06:41,550
directions are so we just do that as

1492
01:06:37,619 --> 01:06:42,929
part of the Box building pass one pass

1493
01:06:41,550 --> 01:06:47,519
through the hierarchy to just build

1494
01:06:42,929 --> 01:06:49,409
those right and then every point that

1495
01:06:47,519 --> 01:06:51,659
actually looks up in the hierarchy just

1496
01:06:49,409 --> 01:06:53,639
knows by pulling that out and the only

1497
01:06:51,659 --> 01:06:56,699
reason I put that in there you know and

1498
01:06:53,639 --> 01:06:58,650
it would look like this right and this

1499
01:06:56,699 --> 01:07:09,389
can be a you 16 as well so it would

1500
01:06:58,650 --> 01:07:11,220
really probably more like this so the

1501
01:07:09,389 --> 01:07:13,650
lighting boxes would just have this

1502
01:07:11,219 --> 01:07:17,299
information as a primary component and

1503
01:07:13,650 --> 01:07:17,300
then in cured that would actually just

1504
01:07:20,329 --> 01:07:27,119
yeah it would just store the sort of an

1505
01:07:24,900 --> 01:07:29,670
out-of-band light bias look up right and

1506
01:07:27,119 --> 01:07:32,069
then inside the lighting solution itself

1507
01:07:29,670 --> 01:07:35,039
we would just have as many of those as

1508
01:07:32,070 --> 01:07:38,700
we wanted like a buffer full of lighting

1509
01:07:35,039 --> 01:07:42,480
bias directions because we only need as

1510
01:07:38,699 --> 01:07:48,529
many as there actually are containers of

1511
01:07:42,480 --> 01:07:54,630
four light sources pretty much so I

1512
01:07:48,530 --> 01:07:56,970
don't actually know the only thing I'm

1513
01:07:54,630 --> 01:07:59,610
not sure about is what do you do sort of

1514
01:07:56,969 --> 01:08:01,769
on higher-up pieces of the Harkey but I

1515
01:07:59,610 --> 01:08:03,720
guess you don't care once you have

1516
01:08:01,769 --> 01:08:06,360
forward you don't need anything above

1517
01:08:03,719 --> 01:08:07,619
that no one would go above it anyway so

1518
01:08:06,360 --> 01:08:09,059
I think yeah I think you don't care in

1519
01:08:07,619 --> 01:08:14,670
fact this only really needs to be stored

1520
01:08:09,059 --> 01:08:16,260
at the leaves I would say so you really

1521
01:08:14,670 --> 01:08:17,789
can only have as many as you had leaves

1522
01:08:16,260 --> 01:08:20,220
in the first place and you don't need

1523
01:08:17,789 --> 01:08:22,829
even close to that many because the

1524
01:08:20,220 --> 01:08:28,039
lighting directions will not vary per

1525
01:08:22,829 --> 01:08:29,658
leaf so but point being you kind of know

1526
01:08:28,038 --> 01:08:32,238
we can get rid of a lot of this stuff

1527
01:08:29,658 --> 01:08:36,048
but we know that like you know if this

1528
01:08:32,238 --> 01:08:37,518
box table here that we have we know at

1529
01:08:36,048 --> 01:08:40,578
the very least that even though it's

1530
01:08:37,519 --> 01:08:42,289
quite piggy we could introduce a thing

1531
01:08:40,578 --> 01:08:54,318
here that was just like look we've got a

1532
01:08:42,288 --> 01:08:56,210
crap ton of these things and we could

1533
01:08:54,319 --> 01:08:58,159
even get rid of this if we had the thing

1534
01:08:56,210 --> 01:09:00,109
be that big because you could actually

1535
01:08:58,158 --> 01:09:01,578
just store it you you wouldn't have to

1536
01:09:00,109 --> 01:09:03,889
push them on you could literally just

1537
01:09:01,578 --> 01:09:07,219
know that you look up your index and

1538
01:09:03,889 --> 01:09:12,489
you'd get it right so this kind of gets

1539
01:09:07,219 --> 01:09:14,538
simpler and simpler as we go yeah and

1540
01:09:12,488 --> 01:09:20,178
really all you have to know is that the

1541
01:09:14,538 --> 01:09:21,528
number of occluders and I don't know why

1542
01:09:20,179 --> 01:09:24,920
I still call this light data with but

1543
01:09:21,529 --> 01:09:26,480
the number of occluders can't exceed

1544
01:09:24,920 --> 01:09:27,009
this value but other than that you're

1545
01:09:26,479 --> 01:09:29,358
fine

1546
01:09:27,009 --> 01:09:33,649
so alright so I think we're kind of

1547
01:09:29,359 --> 01:09:35,269
slowly walking into it here so if we

1548
01:09:33,649 --> 01:09:36,679
have the light directions to search in

1549
01:09:35,269 --> 01:09:38,750
there then really all we need now is a

1550
01:09:36,679 --> 01:09:41,779
way to encode whether something is or

1551
01:09:38,750 --> 01:09:45,738
isn't a light and so I think that's the

1552
01:09:41,779 --> 01:09:47,929
only thing that then needs to get looked

1553
01:09:45,738 --> 01:09:49,338
at a little bit more carefully and so

1554
01:09:47,929 --> 01:09:51,500
when we're actually putting these things

1555
01:09:49,338 --> 01:09:53,328
in here we need some way of saying that

1556
01:09:51,500 --> 01:09:55,578
information like is this a light or

1557
01:09:53,328 --> 01:09:57,590
isn't this a light and what we could do

1558
01:09:55,578 --> 01:09:59,630
here is like the ref see for example we

1559
01:09:57,590 --> 01:10:03,710
could just say all right

1560
01:09:59,630 --> 01:10:05,179
maybe our maybe our we just have like

1561
01:10:03,710 --> 01:10:07,279
some kind of encoding to mention or

1562
01:10:05,179 --> 01:10:09,578
maybe we just have a boolean right look

1563
01:10:07,279 --> 01:10:12,109
maybe we just have something in here

1564
01:10:09,578 --> 01:10:14,569
that says and so if you look at what's

1565
01:10:12,109 --> 01:10:17,210
going on this is nine values here right

1566
01:10:14,569 --> 01:10:22,219
and this is a tenth value so if you look

1567
01:10:17,210 --> 01:10:27,679
at like oops more speed joke yeah so

1568
01:10:22,219 --> 01:10:31,639
we've got three vector threes right so

1569
01:10:27,679 --> 01:10:34,658
that's three times three times four

1570
01:10:31,639 --> 01:10:38,529
bytes so we've got 36 bytes

1571
01:10:34,658 --> 01:10:44,078
being used up there plus we have to

1572
01:10:38,529 --> 01:10:47,319
- byte fields which gets us to 40 and so

1573
01:10:44,078 --> 01:10:48,460
you know 64 is a cache line we want

1574
01:10:47,319 --> 01:10:50,799
these things fit in the cache line we're

1575
01:10:48,460 --> 01:10:52,448
in no danger of like falling out of it

1576
01:10:50,800 --> 01:10:54,489
we could try to make it a little bit

1577
01:10:52,448 --> 01:10:56,339
more compact but I don't know to what

1578
01:10:54,488 --> 01:11:00,368
extent we could really do that

1579
01:10:56,340 --> 01:11:02,019
effectively we could certainly just keep

1580
01:11:00,368 --> 01:11:03,518
it at 40 we wouldn't have to grow it if

1581
01:11:02,019 --> 01:11:05,229
we didn't want to because although this

1582
01:11:03,519 --> 01:11:08,199
would have to be you 16 this certainly

1583
01:11:05,229 --> 01:11:10,150
doesn't have to be you 16 so we could we

1584
01:11:08,198 --> 01:11:12,399
could probably easily say that the child

1585
01:11:10,149 --> 01:11:14,198
count is you know we don't ever split

1586
01:11:12,399 --> 01:11:15,339
into that many so we could also say like

1587
01:11:14,198 --> 01:11:20,888
that

1588
01:11:15,340 --> 01:11:22,779
and that would be fine right so we could

1589
01:11:20,889 --> 01:11:25,599
sort of chart start chopping it down to

1590
01:11:22,779 --> 01:11:27,219
that and then the ref see instead of

1591
01:11:25,599 --> 01:11:28,328
being a reflection color is actually

1592
01:11:27,219 --> 01:11:30,880
just a thing that tells you where this

1593
01:11:28,328 --> 01:11:32,948
thing is the light or not the color of

1594
01:11:30,880 --> 01:11:34,719
the light right so if the is light is on

1595
01:11:32,948 --> 01:11:37,569
this thing is the color of the light is

1596
01:11:34,719 --> 01:11:39,279
light is off then it's the amount of

1597
01:11:37,569 --> 01:11:42,759
reflection that's going on right and

1598
01:11:39,279 --> 01:11:43,599
that'd be it so here when you push a

1599
01:11:42,760 --> 01:11:48,510
clue Terp

1600
01:11:43,599 --> 01:11:53,319
obviously like is light is set to zero

1601
01:11:48,510 --> 01:11:55,210
like so and then when you're pushing a

1602
01:11:53,319 --> 01:12:04,630
light source on his lights should be set

1603
01:11:55,210 --> 01:12:06,420
to true since this one's a u8 actually I

1604
01:12:04,630 --> 01:12:09,639
guess these two are both you eights

1605
01:12:06,420 --> 01:12:12,010
those should be set separated when

1606
01:12:09,639 --> 01:12:13,809
you're pushing a light source on we just

1607
01:12:12,010 --> 01:12:15,909
need to do sort of the other thing here

1608
01:12:13,809 --> 01:12:22,320
where we would you know where we

1609
01:12:15,908 --> 01:12:27,659
actually pushing that on actually know

1610
01:12:22,319 --> 01:12:30,750
so here is the push cube call but we

1611
01:12:27,659 --> 01:12:34,829
don't actually want to push a cube when

1612
01:12:30,750 --> 01:12:36,899
we push a light so that's not really

1613
01:12:34,829 --> 01:12:39,630
actually what we want and let me go to

1614
01:12:36,899 --> 01:12:41,579
the push cube call and let's let's take

1615
01:12:39,630 --> 01:12:44,430
a look at where that one actually was

1616
01:12:41,579 --> 01:12:46,409
there so this is what we want so push a

1617
01:12:44,430 --> 01:12:48,119
clue tur and push light or actually the

1618
01:12:46,409 --> 01:12:49,800
same pretty much so I'm gonna I'm going

1619
01:12:48,119 --> 01:12:52,380
to put those up it's not push Q at all

1620
01:12:49,800 --> 01:12:54,840
so it's really this so what we actually

1621
01:12:52,380 --> 01:12:57,270
want is this right here this code

1622
01:12:54,840 --> 01:12:59,039
exactly and because we don't want to

1623
01:12:57,270 --> 01:13:02,940
actually we don't do any of this this is

1624
01:12:59,039 --> 01:13:04,800
just wrong so what we want to do is when

1625
01:13:02,939 --> 01:13:08,969
we do push light we want to have this

1626
01:13:04,800 --> 01:13:10,980
video mission right it's RGB emission it

1627
01:13:08,970 --> 01:13:12,390
could be whatever you want and so in

1628
01:13:10,979 --> 01:13:14,429
here we would encode that information

1629
01:13:12,390 --> 01:13:19,230
here's the P here's the radius and

1630
01:13:14,430 --> 01:13:21,480
here's the mission right and then this

1631
01:13:19,229 --> 01:13:22,979
right here we would want to set these

1632
01:13:21,479 --> 01:13:25,679
two to zero but now we're setting this

1633
01:13:22,979 --> 01:13:32,609
one to true right or to one effectively

1634
01:13:25,680 --> 01:13:34,800
right and we don't want textures here so

1635
01:13:32,609 --> 01:13:36,929
we just really want that like that's

1636
01:13:34,800 --> 01:13:38,039
pretty much all we want and when you

1637
01:13:36,930 --> 01:13:42,210
push a light on that's what it should

1638
01:13:38,039 --> 01:13:46,439
look like and so in here let's see the

1639
01:13:42,210 --> 01:13:47,699
hit emission stuff so we'll we will work

1640
01:13:46,439 --> 01:13:49,529
with that in a second that's what we

1641
01:13:47,699 --> 01:13:51,179
want to be working towards let me just

1642
01:13:49,529 --> 01:13:55,849
figure out the rest of this stuff here

1643
01:13:51,180 --> 01:13:59,070
so source count when we do split box

1644
01:13:55,850 --> 01:14:01,260
here what does source can't actually do

1645
01:13:59,069 --> 01:14:03,389
in this case do we actually need to use

1646
01:14:01,260 --> 01:14:07,039
16 error like why is this what's this

1647
01:14:03,390 --> 01:14:10,800
doing the source count and the source

1648
01:14:07,039 --> 01:14:14,390
does the source get reduced here or what

1649
01:14:10,800 --> 01:14:14,390
happens source count too

1650
01:14:22,010 --> 01:14:26,090
that's all we actually want to do

1651
01:14:33,100 --> 01:14:38,030
wait that's not gonna work so wait how

1652
01:14:35,720 --> 01:14:39,800
did this thing work Wow so it actually

1653
01:14:38,029 --> 01:14:58,639
needed they use 16 even though you can't

1654
01:14:39,800 --> 01:15:01,090
actually keep that many children I don't

1655
01:14:58,640 --> 01:15:01,090
understand

1656
01:15:08,738 --> 01:15:16,269
oh wait no so never mind this is just as

1657
01:15:14,140 --> 01:15:19,810
the split box and either it comes up

1658
01:15:16,270 --> 01:15:21,969
with two or it comes up with some number

1659
01:15:19,810 --> 01:15:23,590
probably pretty low so I think I can do

1660
01:15:21,969 --> 01:15:25,390
what I was gonna do which is just keep

1661
01:15:23,590 --> 01:15:29,440
those like this and so here I'm gonna

1662
01:15:25,390 --> 01:15:33,060
just assert that we didn't lose any

1663
01:15:29,439 --> 01:15:33,059
information there and go from there

1664
01:15:35,550 --> 01:15:41,409
and so here with hit emission that's the

1665
01:15:40,000 --> 01:15:43,180
part we want to work on in a second

1666
01:15:41,409 --> 01:15:46,539
what's this part here oh so for push

1667
01:15:43,180 --> 01:15:49,600
light so in this case we just want to do

1668
01:15:46,539 --> 01:15:51,279
like whatever the emission was we would

1669
01:15:49,600 --> 01:15:53,620
multiply it now we don't really have to

1670
01:15:51,279 --> 01:15:58,479
do that right so we could actually just

1671
01:15:53,619 --> 01:16:01,359
say like to do KC probably can just use

1672
01:15:58,479 --> 01:16:05,879
RGB for admission and encode that

1673
01:16:01,359 --> 01:16:08,609
directly when we create the empty right

1674
01:16:05,880 --> 01:16:11,890
so that part should probably just be

1675
01:16:08,609 --> 01:16:13,449
something we can change in the future we

1676
01:16:11,890 --> 01:16:17,170
don't need to do that kind of little

1677
01:16:13,449 --> 01:16:18,729
dance there but alright so for now when

1678
01:16:17,170 --> 01:16:20,079
we do the hit emission cure right we

1679
01:16:18,729 --> 01:16:21,909
don't actually want to store hit a

1680
01:16:20,079 --> 01:16:24,488
mission because the ref color actually

1681
01:16:21,909 --> 01:16:27,159
would tell us what we need to know there

1682
01:16:24,488 --> 01:16:30,759
so we don't we don't have like an

1683
01:16:27,159 --> 01:16:32,920
emission scalar so what we actually

1684
01:16:30,760 --> 01:16:34,869
would have here right is we just need to

1685
01:16:32,920 --> 01:16:36,789
know is this thing a light source so

1686
01:16:34,869 --> 01:16:39,550
it's effectively just selecting like a

1687
01:16:36,789 --> 01:16:41,439
boolean value for like whether the thing

1688
01:16:39,550 --> 01:16:44,230
is a light or whether it isn't D'Lite

1689
01:16:41,439 --> 01:16:49,960
right because that's what we need to

1690
01:16:44,229 --> 01:16:55,659
know on the outside and because well is

1691
01:16:49,960 --> 01:17:00,369
that actually true what do we do with

1692
01:16:55,659 --> 01:17:01,960
hit right color yeah I mean I guess it

1693
01:17:00,369 --> 01:17:05,219
is true so we need we just need to know

1694
01:17:01,960 --> 01:17:05,219
that fact right

1695
01:17:12,390 --> 01:17:19,140
and so I guess we just want to store

1696
01:17:14,520 --> 01:17:23,550
that as as a mask

1697
01:17:19,140 --> 01:17:25,829
I'm gonna guess I'm just gonna go with

1698
01:17:23,550 --> 01:17:28,039
yes so when we actually do the raycast

1699
01:17:25,829 --> 01:17:33,779
result here like instead of a mission

1700
01:17:28,039 --> 01:17:36,689
being like a I mean base is gonna be a

1701
01:17:33,779 --> 01:17:39,840
boolean right this emission like it's

1702
01:17:36,689 --> 01:17:41,939
gonna be is a mission right and so in

1703
01:17:39,840 --> 01:17:45,270
here we would have like this selection

1704
01:17:41,939 --> 01:17:47,039
is still correct in a sense but this

1705
01:17:45,270 --> 01:17:49,070
emission value that we're loading up

1706
01:17:47,039 --> 01:17:52,979
here is actually gonna be like is light

1707
01:17:49,069 --> 01:17:55,979
right and so what we want to do there is

1708
01:17:52,979 --> 01:18:01,529
say look we've got an all ones vector

1709
01:17:55,979 --> 01:18:03,959
and an all zeros vector I think right to

1710
01:18:01,529 --> 01:18:12,689
be happy round I know if we actually

1711
01:18:03,960 --> 01:18:18,119
have 0 so I'm not sure I'm not sure if

1712
01:18:12,689 --> 01:18:21,569
we actually have a thing that would do

1713
01:18:18,119 --> 01:18:25,500
this but what we want to do here is for

1714
01:18:21,569 --> 01:18:28,049
the box right we are loading up the

1715
01:18:25,500 --> 01:18:30,239
information for this one box and it

1716
01:18:28,050 --> 01:18:33,239
either is a light or it isn't a light

1717
01:18:30,239 --> 01:18:35,399
right so what we need to do here is when

1718
01:18:33,239 --> 01:18:37,260
we actually hit it and we get the hit

1719
01:18:35,399 --> 01:18:41,189
emission value and here we're going to

1720
01:18:37,260 --> 01:18:42,690
be setting that value like this so this

1721
01:18:41,189 --> 01:18:44,909
is a mission is going to equal the hit

1722
01:18:42,689 --> 01:18:48,299
emission what we need to know here is

1723
01:18:44,909 --> 01:18:51,720
basically just a 1 or a 0 that goes in

1724
01:18:48,300 --> 01:18:54,060
and so you know it can basically be like

1725
01:18:51,720 --> 01:18:56,100
a emission coefficient so I mean it

1726
01:18:54,060 --> 01:18:57,330
really still is the emission value in a

1727
01:18:56,100 --> 01:18:59,579
sense I mean we could actually even just

1728
01:18:57,329 --> 01:19:02,100
keep calling it that but it's just gonna

1729
01:18:59,579 --> 01:19:05,699
be a 1 or 0 that's it's right whether or

1730
01:19:02,100 --> 01:19:10,410
not you're you're gonna have that or not

1731
01:19:05,699 --> 01:19:12,599
and so if the is light is set we want to

1732
01:19:10,409 --> 01:19:15,109
load a 1 in there right so it's kind of

1733
01:19:12,600 --> 01:19:15,110
like this

1734
01:19:20,069 --> 01:19:28,629
it's like that right and I guess this is

1735
01:19:25,319 --> 01:19:30,789
already specified so we want something

1736
01:19:28,628 --> 01:19:32,708
like this where we just conditionally

1737
01:19:30,788 --> 01:19:40,599
load one based on which one it's going

1738
01:19:32,708 --> 01:19:43,328
to be and so it kind of makes me think

1739
01:19:40,599 --> 01:19:53,828
the box wants to have that as an f32

1740
01:19:43,328 --> 01:19:56,618
I mean it's alright so I maybe kind of

1741
01:19:53,828 --> 01:19:58,628
take it back I feel like we kind of want

1742
01:19:56,618 --> 01:20:01,929
to load that as an f32

1743
01:19:58,628 --> 01:20:07,868
maybe right so in here we would say like

1744
01:20:01,929 --> 01:20:09,729
is light is actually like an f32 so

1745
01:20:07,868 --> 01:20:16,118
would either get set I mean it's just

1746
01:20:09,729 --> 01:20:19,689
it's wasteful I don't love it but you'd

1747
01:20:16,118 --> 01:20:32,518
really don't want to be like boolean all

1748
01:20:19,689 --> 01:20:32,519
over the place yeah so I take it back so

1749
01:20:36,649 --> 01:20:39,978
[Applause]

1750
01:20:43,050 --> 01:20:47,349
I guess we're gonna do it that way I

1751
01:20:45,429 --> 01:20:48,908
realize it's not the best thing in the

1752
01:20:47,349 --> 01:20:54,269
world but I want to be able to like load

1753
01:20:48,908 --> 01:20:56,588
the thing fairly directly from there and

1754
01:20:54,269 --> 01:20:58,269
maybe this is dumb because hey you could

1755
01:20:56,588 --> 01:20:59,800
just use a conditional move into a

1756
01:20:58,269 --> 01:21:03,039
register and then load the register so

1757
01:20:59,800 --> 01:21:04,869
maybe that's yeah maybe it is dumb I'm

1758
01:21:03,038 --> 01:21:08,228
so torn right now you can see how I'm

1759
01:21:04,868 --> 01:21:10,299
vacillating here but I guess we could

1760
01:21:08,229 --> 01:21:13,510
just do this with a conditional move so

1761
01:21:10,300 --> 01:21:14,949
it's not that big of a deal right but

1762
01:21:13,510 --> 01:21:17,800
basically in here we could say all right

1763
01:21:14,948 --> 01:21:20,279
look we need to first figure out what

1764
01:21:17,800 --> 01:21:22,719
the f32 is which is like is a mission

1765
01:21:20,279 --> 01:21:24,668
and is a mission is just going to be a

1766
01:21:22,719 --> 01:21:28,719
conditional move that's like look is the

1767
01:21:24,668 --> 01:21:30,039
thing a light if it is it's 1.0 if it's

1768
01:21:28,719 --> 01:21:33,279
not it's 0

1769
01:21:30,039 --> 01:21:37,090
right or something like that and then we

1770
01:21:33,279 --> 01:21:38,529
can just load that thing in via the

1771
01:21:37,090 --> 01:21:39,699
standard load I don't actually know we'd

1772
01:21:38,529 --> 01:21:41,050
have to look at what code this generates

1773
01:21:39,699 --> 01:21:52,599
but this could be bad that's all the

1774
01:21:41,050 --> 01:21:57,850
reason I'm saying it so I don't really

1775
01:21:52,600 --> 01:21:59,470
know we want something that's going to

1776
01:21:57,850 --> 01:22:01,390
generate efficient code for that loading

1777
01:21:59,470 --> 01:22:07,090
and I don't really know what it's going

1778
01:22:01,390 --> 01:22:11,980
to be let me look at the f32 4x here

1779
01:22:07,090 --> 01:22:13,719
so that's what I actually wanted so I'm

1780
01:22:11,979 --> 01:22:15,609
I just don't really know what I want to

1781
01:22:13,719 --> 01:22:17,618
do there but something that does the

1782
01:22:15,609 --> 01:22:21,158
equivalent of that which is gets one in

1783
01:22:17,618 --> 01:22:23,679
there or zero in there and then that way

1784
01:22:21,158 --> 01:22:27,129
on the way out we know what is and isn't

1785
01:22:23,679 --> 01:22:29,408
lights based on this and then that way

1786
01:22:27,130 --> 01:22:31,569
in the outside right where we get this

1787
01:22:29,408 --> 01:22:33,219
emission back it's just a multiply which

1788
01:22:31,569 --> 01:22:35,078
is what we want like we don't want to be

1789
01:22:33,219 --> 01:22:36,819
doing like if statements in here we just

1790
01:22:35,078 --> 01:22:38,920
want to be doing

1791
01:22:36,819 --> 01:22:41,019
straight ahead computations so we really

1792
01:22:38,920 --> 01:22:42,969
want like a 1 or 0 that like turns that

1793
01:22:41,020 --> 01:22:47,739
on or off right and we may want to do

1794
01:22:42,969 --> 01:22:49,929
something that like does a 1 minus for

1795
01:22:47,738 --> 01:22:51,729
this because we may want a not sample in

1796
01:22:49,929 --> 01:22:54,429
the case of a light we may not want to

1797
01:22:51,729 --> 01:22:56,979
do the light transfer here that that may

1798
01:22:54,429 --> 01:22:59,288
just be wrong and so in a sense we may

1799
01:22:56,979 --> 01:23:01,750
want to say like oh okay

1800
01:22:59,288 --> 01:23:07,689
yeah this and also this ref fall-off

1801
01:23:01,750 --> 01:23:10,029
part right I think what we want to do is

1802
01:23:07,689 --> 01:23:13,750
just just roll the emission into that

1803
01:23:10,029 --> 01:23:16,059
right so we want to say look whatever

1804
01:23:13,750 --> 01:23:18,099
the emission was if it was set to 1 so

1805
01:23:16,059 --> 01:23:22,659
it's going to be a light we want to you

1806
01:23:18,099 --> 01:23:23,949
know do this instead if it's in fact and

1807
01:23:22,658 --> 01:23:26,738
you know what we could actually do this

1808
01:23:23,948 --> 01:23:31,049
a little bit differently even we could

1809
01:23:26,738 --> 01:23:34,718
just say like yeah the ref fall-off is

1810
01:23:31,050 --> 01:23:36,639
the no no all right it is the way it

1811
01:23:34,719 --> 01:23:38,529
should be we're gonna say look if this

1812
01:23:36,639 --> 01:23:41,650
emission was set to zero then we're

1813
01:23:38,529 --> 01:23:43,328
going to use the the ref fall-off times

1814
01:23:41,649 --> 01:23:45,638
the how to market this this term will

1815
01:23:43,328 --> 01:23:47,769
come into play and it will do whatever

1816
01:23:45,639 --> 01:23:49,659
the reflected light is whereas if

1817
01:23:47,770 --> 01:23:51,730
emission was 1 then you hit a light

1818
01:23:49,658 --> 01:23:54,429
source so we're gonna provide just what

1819
01:23:51,729 --> 01:23:57,428
the light source color was right so it's

1820
01:23:54,429 --> 01:23:59,260
basically like a toggle that emission is

1821
01:23:57,429 --> 01:24:00,849
just a toggle that says which of the

1822
01:23:59,260 --> 01:24:05,500
side of the equation we use and that's

1823
01:24:00,849 --> 01:24:07,569
how I think I want it right all right so

1824
01:24:05,500 --> 01:24:09,880
I think that's roughly what I want to

1825
01:24:07,569 --> 01:24:11,799
have happened there and we can sort of

1826
01:24:09,880 --> 01:24:13,569
get a little bit further down that rat

1827
01:24:11,800 --> 01:24:15,639
hole in a second but for right now what

1828
01:24:13,569 --> 01:24:17,618
I want to do is focus on the test code

1829
01:24:15,639 --> 01:24:19,690
here and really work on the test code

1830
01:24:17,618 --> 01:24:20,859
before we start to try and use the

1831
01:24:19,689 --> 01:24:22,750
propagation version

1832
01:24:20,859 --> 01:24:24,399
and the reason I want to do that is

1833
01:24:22,750 --> 01:24:26,619
first of all this is just using the

1834
01:24:24,399 --> 01:24:28,929
debug light P what I'd like to do now is

1835
01:24:26,619 --> 01:24:31,569
switch to using that as a push call and

1836
01:24:28,930 --> 01:24:35,440
let's get that working properly as our

1837
01:24:31,569 --> 01:24:38,710
first thing we do right okay so in world

1838
01:24:35,439 --> 01:24:41,889
mode where we look and we have the debug

1839
01:24:38,710 --> 01:24:45,970
light P or whatever it is right see that

1840
01:24:41,890 --> 01:24:49,329
here in this call to push light you can

1841
01:24:45,970 --> 01:24:51,400
see that's actually what we want so we

1842
01:24:49,329 --> 01:24:54,460
want this push light call here to come

1843
01:24:51,399 --> 01:24:58,479
back into existence right and what we

1844
01:24:54,460 --> 01:25:01,600
want is for this thing now to work with

1845
01:24:58,479 --> 01:25:03,159
with our system correctly so this is the

1846
01:25:01,600 --> 01:25:05,020
light that we're pushing into the system

1847
01:25:03,159 --> 01:25:08,590
this is the location that we're pushing

1848
01:25:05,020 --> 01:25:10,270
it in and the radius right so now we

1849
01:25:08,590 --> 01:25:12,670
actually have a push light that's

1850
01:25:10,270 --> 01:25:14,710
pushing into the system and it's putting

1851
01:25:12,670 --> 01:25:17,279
an occluder in there that we should be

1852
01:25:14,710 --> 01:25:20,260
able to actually like the occluder now

1853
01:25:17,279 --> 01:25:22,989
would actually exist I don't think we're

1854
01:25:20,260 --> 01:25:24,670
drawing it at all but well you can see

1855
01:25:22,989 --> 01:25:26,289
it right you can see that it's including

1856
01:25:24,670 --> 01:25:28,510
the light source right because it's

1857
01:25:26,289 --> 01:25:30,460
there it's blocking it and when the hero

1858
01:25:28,510 --> 01:25:32,770
hops up so that it hits the light source

1859
01:25:30,460 --> 01:25:35,170
right it's it's actually putting the

1860
01:25:32,770 --> 01:25:37,090
light into it right and so on so we're

1861
01:25:35,170 --> 01:25:38,440
in good shape there like like we know

1862
01:25:37,090 --> 01:25:40,300
that that's actually being pushed in and

1863
01:25:38,439 --> 01:25:43,119
what we want to do now is say like okay

1864
01:25:40,300 --> 01:25:44,470
that's not an occluder right we know

1865
01:25:43,119 --> 01:25:46,059
it's a light because it's got the

1866
01:25:44,470 --> 01:25:47,260
lighting thing set it's not an occluder

1867
01:25:46,060 --> 01:25:49,770
it's a light source now we need to

1868
01:25:47,260 --> 01:25:52,810
actually like track that information

1869
01:25:49,770 --> 01:25:55,420
okay so in the test cast from probes

1870
01:25:52,810 --> 01:25:57,220
part of things right I'm still gonna

1871
01:25:55,420 --> 01:25:58,390
cheat and use the debug light position

1872
01:25:57,220 --> 01:26:00,909
to know that's what we're casting

1873
01:25:58,390 --> 01:26:02,619
towards but instead of doing any of this

1874
01:26:00,909 --> 01:26:04,479
stuff now we're gonna do this a little

1875
01:26:02,619 --> 01:26:07,180
bit differently so before we were doing

1876
01:26:04,479 --> 01:26:09,159
is say look the hit is whether or not we

1877
01:26:07,180 --> 01:26:10,690
got to the light source before before

1878
01:26:09,159 --> 01:26:12,970
intersecting something but now what I

1879
01:26:10,689 --> 01:26:15,309
want to say is okay we don't know we

1880
01:26:12,970 --> 01:26:17,590
just know that we did a cast that hits

1881
01:26:15,310 --> 01:26:19,720
something and so now what we want to do

1882
01:26:17,590 --> 01:26:22,210
is say is that something a light source

1883
01:26:19,720 --> 01:26:25,000
right so now what we would do is say

1884
01:26:22,210 --> 01:26:28,359
well hit for example what we could do is

1885
01:26:25,000 --> 01:26:32,159
just use alright is that emission value

1886
01:26:28,359 --> 01:26:32,159
one or zero right

1887
01:26:32,599 --> 01:26:42,949
so for example I can just do that right

1888
01:26:41,420 --> 01:26:44,899
so now we're just saying look is the

1889
01:26:42,948 --> 01:26:47,960
thing we hit an emitter or isn't it

1890
01:26:44,899 --> 01:26:49,698
right and now we would not actually be

1891
01:26:47,960 --> 01:26:50,899
testing anywhere else also I want to get

1892
01:26:49,698 --> 01:26:52,309
rid of this secondary bounce thing

1893
01:26:50,899 --> 01:26:53,448
because we're not Randi's that was

1894
01:26:52,310 --> 01:26:55,599
something that's someone asked us to add

1895
01:26:53,448 --> 01:27:00,828
in as a test we don't want that in there

1896
01:26:55,599 --> 01:27:02,719
so anyway now we're saying look we're

1897
01:27:00,828 --> 01:27:03,979
not gonna cheat and just say did we hit

1898
01:27:02,719 --> 01:27:05,960
the light source or not we're gonna do

1899
01:27:03,979 --> 01:27:07,428
is expect the ray caster to tell us if

1900
01:27:05,960 --> 01:27:10,849
we hit a light source or not and now

1901
01:27:07,429 --> 01:27:12,828
let's debug that right and so now we

1902
01:27:10,849 --> 01:27:14,360
need to do is go figure out you can see

1903
01:27:12,828 --> 01:27:16,488
it's like totally not working right

1904
01:27:14,359 --> 01:27:18,408
right you can see it's like all kind of

1905
01:27:16,488 --> 01:27:20,388
weird now so what we want to do is now

1906
01:27:18,408 --> 01:27:22,759
get this working so we need to figure

1907
01:27:20,389 --> 01:27:25,429
out a way to make it this work correctly

1908
01:27:22,760 --> 01:27:27,289
for the debug light and this will give

1909
01:27:25,429 --> 01:27:29,118
me an opportunity to debug having lights

1910
01:27:27,289 --> 01:27:32,569
in that hierarchy which is exactly what

1911
01:27:29,118 --> 01:27:34,189
we want right so when I actually hit

1912
01:27:32,569 --> 01:27:37,069
something we need this emission value to

1913
01:27:34,189 --> 01:27:38,359
be coming out correctly just want to

1914
01:27:37,069 --> 01:27:43,719
make sure I wrote this code drop really

1915
01:27:38,359 --> 01:27:43,719
that that does look correct doesn't it I

1916
01:27:43,929 --> 01:27:54,319
think so I think so I'm going to turn on

1917
01:27:50,420 --> 01:27:58,039
the line drawing as well and in this

1918
01:27:54,319 --> 01:28:00,488
case I want to the line color should be

1919
01:27:58,039 --> 01:28:06,560
based on the hit does it

1920
01:28:00,488 --> 01:28:08,149
yeah it's based on the hip and so what I

1921
01:28:06,560 --> 01:28:09,199
want to do here is make it so that it's

1922
01:28:08,149 --> 01:28:10,339
clear whether we're hitting the lights

1923
01:28:09,198 --> 01:28:13,448
are so now what I want to do is make it

1924
01:28:10,340 --> 01:28:13,449
so that if we hit something

1925
01:28:19,539 --> 01:28:26,899
this is backwards so I'm going to change

1926
01:28:23,720 --> 01:28:29,180
this to hit to hit light when I reverse

1927
01:28:26,899 --> 01:28:32,269
the meaning so if we hit a light source

1928
01:28:29,180 --> 01:28:36,140
that was here so if we hit the light we

1929
01:28:32,270 --> 01:28:41,300
will say hit light gives us a yellow

1930
01:28:36,140 --> 01:28:44,690
otherwise we get a plaque if we hit the

1931
01:28:41,300 --> 01:28:50,390
light source well this is now hit P is

1932
01:28:44,689 --> 01:28:51,649
always correct so that's good well know

1933
01:28:50,390 --> 01:28:55,730
if we didn't hit anything it's not

1934
01:28:51,649 --> 01:28:59,149
correct so if if we have a cast that's

1935
01:28:55,729 --> 01:29:01,669
like just too far right so if we if we

1936
01:28:59,149 --> 01:29:04,219
have a cast that that just went on

1937
01:29:01,670 --> 01:29:05,750
forever we wouldn't necessarily have a

1938
01:29:04,220 --> 01:29:13,000
way to draw it so what we would need to

1939
01:29:05,750 --> 01:29:18,380
do here is say well if the cast he hit

1940
01:29:13,000 --> 01:29:21,199
equals f32 max then what we would need

1941
01:29:18,380 --> 01:29:23,329
to do is say you know we didn't hit

1942
01:29:21,199 --> 01:29:25,130
anything but that shouldn't be possible

1943
01:29:23,329 --> 01:29:27,649
you know what I'm just gonna get rid of

1944
01:29:25,130 --> 01:29:29,239
that case for now because we were aiming

1945
01:29:27,649 --> 01:29:31,399
at the light so we're either gonna hit

1946
01:29:29,239 --> 01:29:32,929
the light or something else right so if

1947
01:29:31,399 --> 01:29:34,879
we don't get anything that should be a

1948
01:29:32,930 --> 01:29:37,130
bug in fact this right here is just a

1949
01:29:34,880 --> 01:29:38,989
bug so I guess this should act this is

1950
01:29:37,130 --> 01:29:41,989
what this should do this case should be

1951
01:29:38,989 --> 01:29:49,010
like something very bad happened right

1952
01:29:41,989 --> 01:29:53,149
this is an error right and so then here

1953
01:29:49,010 --> 01:29:55,250
if we hit the light then we spam the

1954
01:29:53,149 --> 01:29:58,989
voxel otherwise we don't and I think

1955
01:29:55,250 --> 01:30:01,039
that's all we really needed yeah it's

1956
01:29:58,989 --> 01:30:09,050
what is it actually

1957
01:30:01,039 --> 01:30:11,390
t ray sorry so that is something now I

1958
01:30:09,050 --> 01:30:12,619
can debug and look at right so now I can

1959
01:30:11,390 --> 01:30:14,180
look at what's actually having their eye

1960
01:30:12,619 --> 01:30:16,640
pattern lighting off so I can actually

1961
01:30:14,180 --> 01:30:17,900
see it although actually it looks like

1962
01:30:16,640 --> 01:30:20,150
it's working now that I've kind of

1963
01:30:17,899 --> 01:30:23,269
recoded it properly to talk a little bit

1964
01:30:20,149 --> 01:30:26,059
more correctly about what it's doing I

1965
01:30:23,270 --> 01:30:27,470
think we just had some some typos in the

1966
01:30:26,060 --> 01:30:29,820
code there so so I think that just

1967
01:30:27,470 --> 01:30:32,949
worked actually we don't really need

1968
01:30:29,819 --> 01:30:39,429
alright so the light is now coming from

1969
01:30:32,948 --> 01:30:40,689
the axle from the actual voxel and we

1970
01:30:39,429 --> 01:30:41,889
should be able to have multiple lights

1971
01:30:40,689 --> 01:30:43,808
with multiple shadows now also by

1972
01:30:41,889 --> 01:30:45,159
spamming the spamming a different part

1973
01:30:43,809 --> 01:30:46,690
of the voxel alright which we could we

1974
01:30:45,158 --> 01:30:49,719
could interpolate multiple light sources

1975
01:30:46,689 --> 01:30:51,819
here as well but anyway that just shows

1976
01:30:49,719 --> 01:30:53,349
that the test case is working ok and

1977
01:30:51,819 --> 01:30:54,549
that the emission stuff is working ok

1978
01:30:53,349 --> 01:30:56,050
and we know the difference between an

1979
01:30:54,550 --> 01:30:58,929
emitter and occluder now right which is

1980
01:30:56,050 --> 01:31:01,900
what we wanted so I think that's all

1981
01:30:58,929 --> 01:31:04,569
good and now if I were to take out that

1982
01:31:01,899 --> 01:31:07,658
so this this now becomes sort of the the

1983
01:31:04,569 --> 01:31:10,448
next the next thing we might want to try

1984
01:31:07,658 --> 01:31:12,879
now let's try tracking the lights so we

1985
01:31:10,448 --> 01:31:14,979
don't actually have to ever set the

1986
01:31:12,880 --> 01:31:18,069
debug light we can just pick it up from

1987
01:31:14,979 --> 01:31:20,589
what's in the box all right so we know

1988
01:31:18,069 --> 01:31:24,939
that's working what we don't know is

1989
01:31:20,590 --> 01:31:27,219
this value here right so what we want to

1990
01:31:24,939 --> 01:31:29,439
do is discover that we want to discover

1991
01:31:27,219 --> 01:31:30,939
that from the voxel I mean why do I keep

1992
01:31:29,439 --> 01:31:35,229
saying voxel we want to discover that

1993
01:31:30,939 --> 01:31:37,658
from the spatial hierarchy so in terms

1994
01:31:35,229 --> 01:31:39,908
of which light source I would want to

1995
01:31:37,658 --> 01:31:43,000
bias towards in the the spatial heart to

1996
01:31:39,908 --> 01:31:45,069
hear what I need to know looking at the

1997
01:31:43,000 --> 01:31:49,139
lighting is I need to be able to sort of

1998
01:31:45,069 --> 01:31:53,069
crawl down that spatial hierarchy that

1999
01:31:49,139 --> 01:31:55,809
that partition and I need to be able to

2000
01:31:53,069 --> 01:31:57,670
you know get down to my leaf node and

2001
01:31:55,809 --> 01:32:04,690
figure out what the light is in that

2002
01:31:57,670 --> 01:32:09,480
leaf node and so I think I guess I'm not

2003
01:32:04,689 --> 01:32:09,479
sure I think the way we were doing this

2004
01:32:09,868 --> 01:32:19,328
here you can kind of see all it does is

2005
01:32:15,340 --> 01:32:22,420
it basically just like uses this box

2006
01:32:19,328 --> 01:32:25,299
that to see which one's as it kind of

2007
01:32:22,420 --> 01:32:28,118
goes down so I'm pretty sure we can kind

2008
01:32:25,300 --> 01:32:30,309
of just gank this routine and find our

2009
01:32:28,118 --> 01:32:34,089
closest one really simply so let's just

2010
01:32:30,309 --> 01:32:36,460
kind of grab this guy this is not really

2011
01:32:34,090 --> 01:32:39,599
that necessary but like I don't really

2012
01:32:36,460 --> 01:32:42,960
need to cut copy part of any of this but

2013
01:32:39,599 --> 01:32:52,060
so if we wanted to say like

2014
01:32:42,960 --> 01:32:55,658
get leaf for p4 spatial leaf for P and

2015
01:32:52,060 --> 01:32:57,639
we pass in a position right what I want

2016
01:32:55,658 --> 01:32:59,138
to do here is say well we probably don't

2017
01:32:57,639 --> 01:33:00,909
really need a box sack for this because

2018
01:32:59,139 --> 01:33:02,560
we can only be in any one box at a time

2019
01:33:00,908 --> 01:33:04,658
so we would just open up with children

2020
01:33:02,560 --> 01:33:07,030
look at which one pick one go down it

2021
01:33:04,658 --> 01:33:10,210
right we don't have to ever actually cut

2022
01:33:07,029 --> 01:33:11,408
use both sides because a raycast needs

2023
01:33:10,210 --> 01:33:12,579
to consider both sides because if it

2024
01:33:11,408 --> 01:33:13,629
doesn't hit something in one side has to

2025
01:33:12,579 --> 01:33:15,519
go to the other side of the spatial

2026
01:33:13,630 --> 01:33:17,650
partition in our case we're just going

2027
01:33:15,520 --> 01:33:19,719
down one at a time so what we can really

2028
01:33:17,649 --> 01:33:21,729
do here is say look there's just one box

2029
01:33:19,719 --> 01:33:32,408
we don't need a stack so we can

2030
01:33:21,729 --> 01:33:34,149
basically just say you know that so we

2031
01:33:32,408 --> 01:33:42,309
start at the root box and then all we're

2032
01:33:34,149 --> 01:33:46,000
really doing is saying let's traverse

2033
01:33:42,310 --> 01:33:48,550
down what we want to do is go through

2034
01:33:46,000 --> 01:33:50,920
the children of this box and see which

2035
01:33:48,550 --> 01:33:53,469
one we're in right so we just need a

2036
01:33:50,920 --> 01:34:00,489
like a way of determining whether we're

2037
01:33:53,469 --> 01:34:08,289
inside this box I and then executing

2038
01:34:00,488 --> 01:34:10,500
this carrot I believe probably also want

2039
01:34:08,289 --> 01:34:10,500
this

2040
01:34:14,109 --> 01:34:20,569
right so what we do is say all right

2041
01:34:17,929 --> 01:34:25,189
here's the position we start at the root

2042
01:34:20,569 --> 01:34:28,549
we go in and we see for each child that

2043
01:34:25,189 --> 01:34:30,499
we have here we want to pick out a new

2044
01:34:28,550 --> 01:34:32,809
box that's the one we're in so we would

2045
01:34:30,498 --> 01:34:40,368
get the box here and we would say like

2046
01:34:32,809 --> 01:34:42,019
if inside right and off we go like that

2047
01:34:40,368 --> 01:34:44,598
kind of thing right now what we do want

2048
01:34:42,019 --> 01:34:49,030
to do is you want I guess to accept also

2049
01:34:44,599 --> 01:34:52,029
a case where there isn't one I suppose

2050
01:34:49,029 --> 01:34:52,029
so

2051
01:34:52,090 --> 01:34:57,139
because if we ask for something outside

2052
01:34:54,380 --> 01:35:03,519
the Harkey you would get nothing I would

2053
01:34:57,139 --> 01:35:03,519
assume so here we would probably do like

2054
01:35:03,788 --> 01:35:11,779
we start with the results children I

2055
01:35:07,399 --> 01:35:13,219
guess cathica how we avoid infinitely

2056
01:35:11,779 --> 01:35:15,679
looping here look if we loop over

2057
01:35:13,219 --> 01:35:20,139
everything and haven't found one that

2058
01:35:15,679 --> 01:35:46,939
we're inside then we have failed right

2059
01:35:20,139 --> 01:35:48,708
so we maybe do this perhaps so

2060
01:35:46,939 --> 01:35:51,139
essentially what we want to do here is

2061
01:35:48,708 --> 01:35:53,118
say okay start at the first child index

2062
01:35:51,139 --> 01:35:54,800
one pass the last child index we loop

2063
01:35:53,118 --> 01:35:58,880
over all of these we look to see whether

2064
01:35:54,800 --> 01:36:03,590
inside this box right assuming we are

2065
01:35:58,880 --> 01:36:06,800
inside the box if the box if the child

2066
01:36:03,590 --> 01:36:09,199
count is valid then we need to descend

2067
01:36:06,800 --> 01:36:11,809
so we just get out of the loop right

2068
01:36:09,198 --> 01:36:16,279
and we set result equal to the box in

2069
01:36:11,809 --> 01:36:19,538
question otherwise we actually just

2070
01:36:16,279 --> 01:36:22,099
returned the box directly write

2071
01:36:19,538 --> 01:36:24,248
something like this this doesn't look

2072
01:36:22,099 --> 01:36:24,248
great

2073
01:36:26,529 --> 01:36:31,788
something like that I'm not sure that's

2074
01:36:28,519 --> 01:36:33,979
very good let's think about this a

2075
01:36:31,788 --> 01:36:35,359
little bit more there's probably a

2076
01:36:33,979 --> 01:36:36,320
cleaner way to write that you can see

2077
01:36:35,359 --> 01:36:38,859
what I'm trying to do here there right

2078
01:36:36,319 --> 01:36:40,938
if we need to keep going we keep going

2079
01:36:38,859 --> 01:36:45,618
if we don't need to keep going we just

2080
01:36:40,939 --> 01:36:47,420
leave I guess this is the only return

2081
01:36:45,618 --> 01:36:52,518
point so we could actually just also say

2082
01:36:47,420 --> 01:36:54,359
this in a sense because everything else

2083
01:36:52,519 --> 01:36:57,560
is a failure

2084
01:36:54,359 --> 01:36:57,559
[Music]

2085
01:37:07,979 --> 01:37:11,159
I don't know I don't think too hard

2086
01:37:09,750 --> 01:37:13,039
about that at the moment but this is

2087
01:37:11,159 --> 01:37:15,750
basically what we're looking for right

2088
01:37:13,039 --> 01:37:18,810
so if we did a get spatial leave for P

2089
01:37:15,750 --> 01:37:20,699
we need an inside box like it is inside

2090
01:37:18,810 --> 01:37:22,560
kind of a thing here for these boxes and

2091
01:37:20,699 --> 01:37:26,250
I guess I don't know like the lighting

2092
01:37:22,560 --> 01:37:27,450
box here is a P and a radius so

2093
01:37:26,250 --> 01:37:31,439
basically what we need to do is figure

2094
01:37:27,449 --> 01:37:34,710
out like are we inside this thing and so

2095
01:37:31,439 --> 01:37:38,460
that's pretty easy for us to do we

2096
01:37:34,710 --> 01:37:41,010
already have an is is in rectangle right

2097
01:37:38,460 --> 01:37:44,430
so we can also we can already do this

2098
01:37:41,010 --> 01:37:46,350
and we just need to construct a box here

2099
01:37:44,430 --> 01:37:49,110
and that's pretty easy for us to do as

2100
01:37:46,350 --> 01:38:00,180
well cuz this is it right so it's just

2101
01:37:49,109 --> 01:38:05,939
that so I think that's all we would

2102
01:38:00,180 --> 01:38:07,470
actually need to do there it's not as

2103
01:38:05,939 --> 01:38:16,349
efficient as probably we would like but

2104
01:38:07,470 --> 01:38:18,470
I think that's it and then this we just

2105
01:38:16,350 --> 01:38:22,140
need to pass the position to its

2106
01:38:18,470 --> 01:38:23,850
position two and I think that would get

2107
01:38:22,140 --> 01:38:25,619
us which whichever spatial partition

2108
01:38:23,850 --> 01:38:27,539
were actually in at the time right so

2109
01:38:25,619 --> 01:38:30,059
that just returns to the leaf to us and

2110
01:38:27,539 --> 01:38:32,909
we're good to go so that means that if

2111
01:38:30,060 --> 01:38:36,240
we wanted to take the test case right to

2112
01:38:32,909 --> 01:38:38,869
the test cast from probes and we didn't

2113
01:38:36,239 --> 01:38:41,309
want to cheat and use this debug light P

2114
01:38:38,869 --> 01:38:44,010
thing here what we could do instead is

2115
01:38:41,310 --> 01:38:53,670
say look get us whatever the leaf were

2116
01:38:44,010 --> 01:38:59,010
in like so I don't know why this is this

2117
01:38:53,670 --> 01:39:00,750
would be that so we just say look get us

2118
01:38:59,010 --> 01:39:02,280
the leaf and then we'll get the deep

2119
01:39:00,750 --> 01:39:04,920
we'll get like the location of the light

2120
01:39:02,279 --> 01:39:07,019
from the leaf right so the the place

2121
01:39:04,920 --> 01:39:10,140
that the the place where the lights are

2122
01:39:07,020 --> 01:39:13,290
supposedly at for this leaf that we're

2123
01:39:10,140 --> 01:39:16,950
tracking let's skip those right and so

2124
01:39:13,289 --> 01:39:18,869
what I can do is say if we are actually

2125
01:39:16,949 --> 01:39:19,979
start tracking those right and we go

2126
01:39:18,869 --> 01:39:24,229
into

2127
01:39:19,979 --> 01:39:26,879
the lighting code here and we look at

2128
01:39:24,229 --> 01:39:29,119
how is proposing we store those right

2129
01:39:26,880 --> 01:39:32,850
this right here would be the lightbox

2130
01:39:29,119 --> 01:39:35,909
actually the lightbox target P or

2131
01:39:32,850 --> 01:39:38,100
something like that so this would be the

2132
01:39:35,909 --> 01:39:40,859
target positions for the lighting or the

2133
01:39:38,100 --> 01:39:43,140
the places to try to aim towards and

2134
01:39:40,859 --> 01:39:45,809
there'd be four of them for every you

2135
01:39:43,140 --> 01:39:47,730
know their before of those for every one

2136
01:39:45,810 --> 01:39:48,450
of the leaves that we would store and we

2137
01:39:47,729 --> 01:39:51,779
would look it up

2138
01:39:48,449 --> 01:39:53,609
using just wherever whichever leaf we

2139
01:39:51,779 --> 01:39:55,738
were actually in right so we could get

2140
01:39:53,609 --> 01:39:57,539
the box index and in fact I guess the

2141
01:39:55,738 --> 01:40:00,359
box index is sort of what we want to

2142
01:39:57,539 --> 01:40:02,039
return for the leaf itself we don't

2143
01:40:00,359 --> 01:40:07,738
actually need this information so I

2144
01:40:02,039 --> 01:40:09,840
guess it's more like this right and then

2145
01:40:07,738 --> 01:40:11,339
what we would do is say okay the light P

2146
01:40:09,840 --> 01:40:18,390
that we're actually interested in is

2147
01:40:11,340 --> 01:40:26,819
just the solution target P for that leaf

2148
01:40:18,390 --> 01:40:40,460
index right I think if you do a depth

2149
01:40:26,819 --> 01:40:40,460
component on that yeah

2150
01:40:41,689 --> 01:40:47,669
that's right isn't it I think that's

2151
01:40:44,099 --> 01:40:49,319
right and so that would be a way that if

2152
01:40:47,670 --> 01:40:51,270
we were actually building it we could

2153
01:40:49,319 --> 01:40:53,939
get them out pretty trivially and what

2154
01:40:51,270 --> 01:41:00,330
we need now is to get that actual leaf

2155
01:40:53,939 --> 01:41:10,049
location what did I actually call that

2156
01:41:00,329 --> 01:41:11,789
function so now what we would do is say

2157
01:41:10,050 --> 01:41:21,900
well the results I guess so in this case

2158
01:41:11,789 --> 01:41:24,090
right I guess this is starting to look a

2159
01:41:21,899 --> 01:41:25,618
little bit more sane here so we're going

2160
01:41:24,090 --> 01:41:28,590
to say look we assume the results of

2161
01:41:25,618 --> 01:41:31,529
zero while we don't have a results we

2162
01:41:28,590 --> 01:41:33,889
would go to the like parent here and

2163
01:41:31,529 --> 01:41:33,889
we'd say

2164
01:41:41,470 --> 01:41:57,260
like this parent first child index

2165
01:41:47,260 --> 01:42:00,530
parent oops first child index plus shout

2166
01:41:57,260 --> 01:42:03,140
count so that gives us our range we

2167
01:42:00,529 --> 01:42:05,779
assume that there is no more parent so

2168
01:42:03,140 --> 01:42:19,100
we could also say like wild parent and

2169
01:42:05,779 --> 01:42:21,019
not results so parent pickles box so in

2170
01:42:19,100 --> 01:42:25,550
either case here if we're inside we

2171
01:42:21,020 --> 01:42:29,210
break and the difference is just which

2172
01:42:25,550 --> 01:42:31,190
one of these two we do right so it's a

2173
01:42:29,210 --> 01:42:32,989
little bit of a nasty loops not not the

2174
01:42:31,189 --> 01:42:34,869
world's best loop in the world but you

2175
01:42:32,989 --> 01:42:37,159
know it sort of works a little bit maybe

2176
01:42:34,869 --> 01:42:38,920
so I think that gives us the cases that

2177
01:42:37,159 --> 01:42:46,939
we need and off we go

2178
01:42:38,920 --> 01:42:49,460
so now get spatial leaf for P peas

2179
01:42:46,939 --> 01:42:51,739
undeclared that is true we need the

2180
01:42:49,460 --> 01:42:54,050
light probe position so here's the cast

2181
01:42:51,739 --> 01:42:57,109
P that's what we're actually looking for

2182
01:42:54,050 --> 01:42:59,180
here and now we can sort of comment that

2183
01:42:57,109 --> 01:43:02,539
out and get the light position directly

2184
01:42:59,180 --> 01:43:05,240
from our spatial hierarchy and that's

2185
01:43:02,539 --> 01:43:06,890
what I actually want to do here we only

2186
01:43:05,239 --> 01:43:08,989
have a few minutes left but let's try to

2187
01:43:06,890 --> 01:43:13,039
actually put that information in now I

2188
01:43:08,989 --> 01:43:14,569
mean you know why not so how are we

2189
01:43:13,039 --> 01:43:19,510
gonna do that you know we've got this

2190
01:43:14,569 --> 01:43:21,859
sort of box splitting nonsense going on

2191
01:43:19,510 --> 01:43:23,810
so how are we gonna figure out where the

2192
01:43:21,859 --> 01:43:26,719
lights are and all that all that garbage

2193
01:43:23,810 --> 01:43:28,910
right so let's take a look at how that

2194
01:43:26,720 --> 01:43:31,130
code is working currently and see if we

2195
01:43:28,909 --> 01:43:35,139
can reverse engineer something or sorry

2196
01:43:31,130 --> 01:43:37,010
reverse inject I don't want to call it

2197
01:43:35,140 --> 01:43:38,539
something in here it does because right

2198
01:43:37,010 --> 01:43:40,909
now if we did this it wouldn't work

2199
01:43:38,539 --> 01:43:42,590
right right now if we did this we'd get

2200
01:43:40,909 --> 01:43:44,689
nothing because this stuff is just going

2201
01:43:42,590 --> 01:43:46,279
to be zero and so the location of the

2202
01:43:44,689 --> 01:43:48,679
light source is going to be zero right

2203
01:43:46,279 --> 01:43:50,599
there will be a light it'll just be it

2204
01:43:48,680 --> 01:43:51,590
like zero zero zero or something weird

2205
01:43:50,600 --> 01:43:54,590
like that

2206
01:43:51,590 --> 01:43:56,659
and the shadowy be computed from there

2207
01:43:54,590 --> 01:43:59,810
but the other part won't be I guess is

2208
01:43:56,659 --> 01:44:01,250
that right let me see what's actually

2209
01:43:59,810 --> 01:44:24,830
going on I don't know exactly what's

2210
01:44:01,250 --> 01:44:27,500
gonna happen there so so I guess if I'm

2211
01:44:24,829 --> 01:44:29,869
honest I'm not sure why we were seeing

2212
01:44:27,500 --> 01:44:36,649
the light move I'm kind of weirded out

2213
01:44:29,869 --> 01:44:38,390
by that I guess that's because I get

2214
01:44:36,649 --> 01:44:40,189
well you know I don't really know why

2215
01:44:38,390 --> 01:44:42,170
that's because I guess it depends on

2216
01:44:40,189 --> 01:44:44,329
whether you hit the light that seems

2217
01:44:42,170 --> 01:44:45,590
buggy to me I'm gonna go ahead and

2218
01:44:44,329 --> 01:44:47,569
finish what we were doing but I think

2219
01:44:45,590 --> 01:44:51,289
there's just a bug in there I don't know

2220
01:44:47,569 --> 01:44:53,449
I don't know why we're seeing what we're

2221
01:44:51,289 --> 01:45:02,840
seeing here that doesn't make much sense

2222
01:44:53,449 --> 01:45:04,579
at all I don't love that all right so

2223
01:45:02,840 --> 01:45:06,829
anyway I'm gonna go look at the split

2224
01:45:04,579 --> 01:45:08,269
box how this stuff works so you can see

2225
01:45:06,829 --> 01:45:10,369
our build spatial partition for lighting

2226
01:45:08,270 --> 01:45:12,260
call what this is gonna do is it's

2227
01:45:10,369 --> 01:45:15,170
running through all of the boxes here it

2228
01:45:12,260 --> 01:45:17,360
takes the total bounce right so this is

2229
01:45:15,170 --> 01:45:19,789
basically like how much space do I'm

2230
01:45:17,359 --> 01:45:22,489
actually taking up for the entire set of

2231
01:45:19,789 --> 01:45:24,319
occluders it then goes and says all

2232
01:45:22,489 --> 01:45:26,300
right let's go ahead and start splitting

2233
01:45:24,319 --> 01:45:28,969
these boxes right so it takes however

2234
01:45:26,300 --> 01:45:38,210
many boxes I guess we actually have

2235
01:45:28,970 --> 01:45:40,310
total and it says split them up right so

2236
01:45:38,210 --> 01:45:44,329
I guess in here what it says is when we

2237
01:45:40,310 --> 01:45:45,680
go to do a split box call assuming that

2238
01:45:44,329 --> 01:45:47,329
there's more than four boxes because

2239
01:45:45,680 --> 01:45:50,240
we're gonna store four boxes per leaf I

2240
01:45:47,329 --> 01:45:52,670
guess we go through some attempts and we

2241
01:45:50,239 --> 01:45:55,519
look to see like how to divide them up I

2242
01:45:52,670 --> 01:45:57,079
guess with some rectangles assuming that

2243
01:45:55,520 --> 01:45:59,990
we find some way of categorizing that

2244
01:45:57,079 --> 01:46:03,118
cleanly we go ahead and do the split box

2245
01:45:59,989 --> 01:46:05,399
and then we go through right

2246
01:46:03,118 --> 01:46:08,130
so I think all I really need to do there

2247
01:46:05,399 --> 01:46:11,279
is pass down

2248
01:46:08,130 --> 01:46:15,270
I'm sorry pass up information

2249
01:46:11,279 --> 01:46:17,609
information on the lighting right so in

2250
01:46:15,270 --> 01:46:20,010
this case if the source count is greater

2251
01:46:17,609 --> 01:46:22,710
than four we try to split if the source

2252
01:46:20,010 --> 01:46:25,650
count is less than four then we know

2253
01:46:22,710 --> 01:46:27,689
that the things inside us we want to

2254
01:46:25,649 --> 01:46:30,509
look to see if there's any lights right

2255
01:46:27,689 --> 01:46:31,948
so what we want to do is say look do any

2256
01:46:30,510 --> 01:46:34,650
or any of these things that we actually

2257
01:46:31,948 --> 01:46:45,000
have in terms of our children here which

2258
01:46:34,649 --> 01:46:55,979
I guess is is this yeah here's our

2259
01:46:45,000 --> 01:46:57,750
children so I'm not sure so we're moving

2260
01:46:55,979 --> 01:47:01,079
that point around - okay this is a weird

2261
01:46:57,750 --> 01:47:02,689
way to do this but all right um so what

2262
01:47:01,079 --> 01:47:06,179
we're doing here is we're saying look

2263
01:47:02,689 --> 01:47:09,500
for each of our child boxes is is any of

2264
01:47:06,179 --> 01:47:13,730
these alight right so it would be this

2265
01:47:09,500 --> 01:47:17,689
and if it is we want to put it in to

2266
01:47:13,729 --> 01:47:20,939
like our our light tracking if you will

2267
01:47:17,689 --> 01:47:22,408
and so if assuming that we found the

2268
01:47:20,939 --> 01:47:25,529
light here what we need to do is

2269
01:47:22,408 --> 01:47:27,689
propagate that information to all of the

2270
01:47:25,529 --> 01:47:29,880
nodes right so we need to like know

2271
01:47:27,689 --> 01:47:33,359
which lights are closest for any

2272
01:47:29,880 --> 01:47:40,050
particular situation and it's hard to

2273
01:47:33,359 --> 01:47:48,089
say I'm not really sure exactly how we

2274
01:47:40,050 --> 01:47:50,400
want to do that it'd be pretty trivial

2275
01:47:48,090 --> 01:47:53,449
for us to just for to store any four

2276
01:47:50,399 --> 01:47:53,448
lights that are

2277
01:47:54,668 --> 01:48:03,550
in the vicinity but it's considerably

2278
01:48:01,029 --> 01:48:04,988
difficult more difficult for us we would

2279
01:48:03,550 --> 01:48:06,760
have to do something more clever if we

2280
01:48:04,988 --> 01:48:10,509
wanted to actually get the closest way

2281
01:48:06,760 --> 01:48:13,208
each time so maybe we don't maybe we

2282
01:48:10,510 --> 01:48:16,599
want to actually insert these lights

2283
01:48:13,208 --> 01:48:22,510
which seems costly and I'm not really

2284
01:48:16,599 --> 01:48:24,010
sure I want to do it because it'd be Oh

2285
01:48:22,510 --> 01:48:26,429
N and the number of lights which I don't

2286
01:48:24,010 --> 01:48:26,429
want

2287
01:48:26,519 --> 01:48:36,280
so probably the better thing I mean the

2288
01:48:31,630 --> 01:48:39,519
Oh n log n in the number of lights which

2289
01:48:36,279 --> 01:48:44,668
seems bad and I think we probably just

2290
01:48:39,519 --> 01:48:48,189
want it to be the initial Oh N

2291
01:48:44,668 --> 01:48:52,559
build the o n log and build we don't

2292
01:48:48,189 --> 01:48:52,559
want another n log and Pass

2293
01:48:59,479 --> 01:49:06,500
I'm not sure so let's do this let's just

2294
01:49:03,300 --> 01:49:08,909
say look if there's a light in here

2295
01:49:06,500 --> 01:49:12,479
I'm Jonathan get well you know we still

2296
01:49:08,908 --> 01:49:14,219
but we can't really do it as a as a in

2297
01:49:12,479 --> 01:49:24,059
line here because we need to put back

2298
01:49:14,219 --> 01:49:25,429
propagate it down as well so all right

2299
01:49:24,060 --> 01:49:29,310
so I don't really know how to do this

2300
01:49:25,429 --> 01:49:33,210
without doing it as a second pass that

2301
01:49:29,310 --> 01:49:35,280
will actually work cleanly so really

2302
01:49:33,210 --> 01:49:37,889
hard to say but it seems like what we

2303
01:49:35,279 --> 01:49:43,189
would have to do here is actually have

2304
01:49:37,889 --> 01:49:47,010
the lights in this case be sort of

2305
01:49:43,189 --> 01:49:49,289
handle as a separate pass right so after

2306
01:49:47,010 --> 01:49:52,650
you split them you would go through like

2307
01:49:49,289 --> 01:49:55,710
this and you would say you know if this

2308
01:49:52,649 --> 01:50:00,689
is a light then you need to like insert

2309
01:49:55,710 --> 01:50:05,689
the light and when you do the insert

2310
01:50:00,689 --> 01:50:05,689
light it would flood through each of the

2311
01:50:06,649 --> 01:50:13,170
each of the levels of the spatial

2312
01:50:08,670 --> 01:50:16,020
partition right and figure out if it was

2313
01:50:13,170 --> 01:50:17,639
close further or figure out if it was

2314
01:50:16,020 --> 01:50:21,060
better than the lights that currently

2315
01:50:17,639 --> 01:50:22,650
were in there I mean and so thinking

2316
01:50:21,060 --> 01:50:25,820
through how that's going to work it's

2317
01:50:22,649 --> 01:50:25,819
yeah it's pretty nasty

2318
01:50:34,139 --> 01:50:39,639
the first light gets that gets inserted

2319
01:50:37,090 --> 01:50:41,199
would be the closest light at all points

2320
01:50:39,639 --> 01:50:43,868
in the hierarchy so you would touch all

2321
01:50:41,198 --> 01:50:46,268
the boxes the next one would be you know

2322
01:50:43,868 --> 01:50:52,238
like half or something depending on how

2323
01:50:46,269 --> 01:50:54,219
where the lights were and you would

2324
01:50:52,238 --> 01:50:55,689
touch less and less presumably if you

2325
01:50:54,219 --> 01:50:57,368
had a way of guaranteeing that you

2326
01:50:55,689 --> 01:51:00,748
couldn't be the closer light but that's

2327
01:50:57,368 --> 01:51:00,748
yeah this just seems terrible

2328
01:51:14,239 --> 01:51:23,359
so I don't know I don't know how we

2329
01:51:18,750 --> 01:51:23,359
should find that piece of information I

2330
01:51:29,060 --> 01:51:35,070
mean another thing we could do is write

2331
01:51:31,529 --> 01:51:37,920
them into the voxel so basically like

2332
01:51:35,069 --> 01:51:49,259
we're just storing the closest lights in

2333
01:51:37,920 --> 01:51:53,480
the voxel and you aim for those but

2334
01:51:49,260 --> 01:51:59,930
again even there you're talking about a

2335
01:51:53,479 --> 01:51:59,929
kind of a hard a hard thing to know

2336
01:52:20,119 --> 01:52:29,340
I'm not sure I think since we're out of

2337
01:52:26,699 --> 01:52:37,349
time what I'd like to do is table this

2338
01:52:29,340 --> 01:52:38,789
for tomorrow and relook at it then cuz I

2339
01:52:37,350 --> 01:52:40,500
feel like I want to think about this

2340
01:52:38,789 --> 01:52:42,779
some more and there's a lot of things we

2341
01:52:40,500 --> 01:52:44,369
could do here and I feel like we need to

2342
01:52:42,779 --> 01:52:46,609
kind of draw them out and go okay which

2343
01:52:44,369 --> 01:52:49,949
one of these is the most likely thing

2344
01:52:46,609 --> 01:52:52,019
again we could just not do this at first

2345
01:52:49,949 --> 01:52:55,199
right we could just use stochastic

2346
01:52:52,020 --> 01:52:56,670
sampling and just like see you know if

2347
01:52:55,199 --> 01:52:59,279
we hit the light source we hit the light

2348
01:52:56,670 --> 01:53:02,310
source and if we don't we don't and that

2349
01:52:59,279 --> 01:53:03,599
would work fine it's just not as good

2350
01:53:02,310 --> 01:53:05,760
right so our lighting is gonna be

2351
01:53:03,600 --> 01:53:09,900
flicker more flickery or more or

2352
01:53:05,760 --> 01:53:11,909
flickery and less you know likely to

2353
01:53:09,899 --> 01:53:15,449
pick up the lighting features than if we

2354
01:53:11,909 --> 01:53:17,309
do some sort of biasing towards lights

2355
01:53:15,449 --> 01:53:19,529
occasionally so it seems like something

2356
01:53:17,310 --> 01:53:22,860
we do want to but it how to actually

2357
01:53:19,529 --> 01:53:26,179
quickly determine which light sources to

2358
01:53:22,859 --> 01:53:30,149
biased towards is sort of something that

2359
01:53:26,180 --> 01:53:32,070
it doesn't seem exactly like there's an

2360
01:53:30,149 --> 01:53:35,909
obvious way to put it into the spatial

2361
01:53:32,069 --> 01:53:39,199
partition nicely in a way that's pretty

2362
01:53:35,909 --> 01:53:39,199
cheap to do

2363
01:53:44,819 --> 01:53:50,889
like the query for for closest lights is

2364
01:53:49,119 --> 01:53:52,630
a little tricky and there's just a lot

2365
01:53:50,890 --> 01:53:54,880
of ways we could do it and I just don't

2366
01:53:52,630 --> 01:53:57,150
have I don't have a solid idea which one

2367
01:53:54,880 --> 01:54:00,760
so I'm gonna go ahead and not do that

2368
01:53:57,149 --> 01:54:03,329
and so we're just gonna leave it as it

2369
01:54:00,760 --> 01:54:05,890
is right now and we'll pick it up later

2370
01:54:03,329 --> 01:54:09,729
what I could do although what I could do

2371
01:54:05,890 --> 01:54:11,409
here is cheat again and say look we know

2372
01:54:09,729 --> 01:54:12,908
what the D we know we're getting the

2373
01:54:11,408 --> 01:54:14,589
debug light in here so what I'll do is

2374
01:54:12,908 --> 01:54:15,908
I'll just put that in here just to make

2375
01:54:14,590 --> 01:54:17,579
sure this code is working because we

2376
01:54:15,908 --> 01:54:22,059
could get that good working properly so

2377
01:54:17,579 --> 01:54:40,179
ignore this right and instead we're just

2378
01:54:22,060 --> 01:54:44,380
gonna do this so we're gonna like loft

2379
01:54:40,179 --> 01:54:47,649
that thing up right into each of these

2380
01:54:44,380 --> 01:54:49,270
so for every box wherever you would have

2381
01:54:47,649 --> 01:54:55,509
looked it up you're you know you're

2382
01:54:49,270 --> 01:54:57,520
gonna get the target that's the debug

2383
01:54:55,510 --> 01:55:01,480
light so we're just spamming the debug

2384
01:54:57,520 --> 01:55:02,949
light out to all box lookups and so that

2385
01:55:01,479 --> 01:55:07,689
way we could just verify that this part

2386
01:55:02,948 --> 01:55:11,969
was working correctly and it does seem

2387
01:55:07,689 --> 01:55:13,839
to I'm going to turn off those test cast

2388
01:55:11,969 --> 01:55:15,789
bits there because it don't actually

2389
01:55:13,840 --> 01:55:18,340
want to see those and then we're gonna

2390
01:55:15,789 --> 01:55:20,289
go to QA and we'll think a little harder

2391
01:55:18,340 --> 01:55:24,850
about how we want to insert those lights

2392
01:55:20,289 --> 01:55:26,800
in the future so the test cast here I'm

2393
01:55:24,850 --> 01:55:29,039
just gonna get ribs I'm just gonna get

2394
01:55:26,800 --> 01:55:29,039
rid of that

2395
01:55:34,260 --> 01:55:39,199
and I'm gonna leave it like this so this

2396
01:55:36,720 --> 01:55:41,730
is now correctly executing the test code

2397
01:55:39,199 --> 01:55:44,220
but again we're not actually doing the

2398
01:55:41,729 --> 01:55:45,899
lookup so we're ignoring the look the

2399
01:55:44,220 --> 01:55:49,260
lookup will always return the correct

2400
01:55:45,899 --> 01:55:50,339
thing as it is going there and so we

2401
01:55:49,260 --> 01:55:53,730
need to figure out a way to actually

2402
01:55:50,340 --> 01:55:57,210
make that that table be filled with

2403
01:55:53,729 --> 01:55:59,779
correct answers all right let's go ahead

2404
01:55:57,210 --> 01:55:59,779
and do a QA

2405
01:56:38,039 --> 01:56:41,819
you know what I should do - while we're

2406
01:56:40,680 --> 01:56:45,000
starting this up

2407
01:56:41,819 --> 01:56:47,329
I should see about does this thing log

2408
01:56:45,000 --> 01:56:50,670
into twitch I don't even know if it is

2409
01:56:47,329 --> 01:56:54,059
if it is I should see if we need to raid

2410
01:56:50,670 --> 01:57:00,539
anybody after this you know I'm saying

2411
01:56:54,060 --> 01:57:03,210
to you how do I do that again I know

2412
01:57:00,539 --> 01:57:08,460
there's a way to do that okay follow

2413
01:57:03,210 --> 01:57:09,869
channels nope nobody streaming Johnson

2414
01:57:08,460 --> 01:57:17,189
streaming a bunch lately but he's not

2415
01:57:09,869 --> 01:57:24,359
streaming now so I cannot raid him just

2416
01:57:17,189 --> 01:57:26,039
find you check see you're returning zero

2417
01:57:24,359 --> 01:57:28,619
sort of results in the function you

2418
01:57:26,039 --> 01:57:30,479
created to find the box oh thank you for

2419
01:57:28,619 --> 01:57:35,488
that we don't actually use that at the

2420
01:57:30,479 --> 01:57:36,629
moment but we do want to do that so just

2421
01:57:35,488 --> 01:57:38,009
you know we don't want to have to go

2422
01:57:36,630 --> 01:57:39,720
hunt that down - someone already spotted

2423
01:57:38,010 --> 01:57:43,470
it because we're when we do actually

2424
01:57:39,720 --> 01:57:46,380
make it work we we would be kind of

2425
01:57:43,470 --> 01:57:48,600
grumpy about that so thanks for that

2426
01:57:46,380 --> 01:57:50,069
cash yeah if we'd probably spend some

2427
01:57:48,600 --> 01:57:53,400
time back and go wait why isn't Rick Oh

2428
01:57:50,069 --> 01:57:56,119
cuz it's zero right so saves us that

2429
01:57:53,399 --> 01:57:56,119
which is good

2430
01:58:02,310 --> 01:58:05,590
not sure I relevant but the problem

2431
01:58:04,329 --> 01:58:07,960
seems related to important sampling

2432
01:58:05,590 --> 01:58:10,329
lights in Montecarlo rate racers exactly

2433
01:58:07,960 --> 01:58:11,920
that I mean that is literally what we're

2434
01:58:10,329 --> 01:58:16,239
doing this is a Monte Carlo ray tracer

2435
01:58:11,920 --> 01:58:17,980
and it is trying to use some direct

2436
01:58:16,239 --> 01:58:23,550
light light sampling to improve the

2437
01:58:17,979 --> 01:58:26,649
results I the problem is we're not so

2438
01:58:23,550 --> 01:58:29,860
the Monte Carlo important sampling part

2439
01:58:26,649 --> 01:58:32,379
of things that part is more about

2440
01:58:29,859 --> 01:58:34,960
figuring out how to wait the results you

2441
01:58:32,380 --> 01:58:36,760
know whereas that's not what we're doing

2442
01:58:34,960 --> 01:58:38,619
here because we haven't gotten to that

2443
01:58:36,760 --> 01:58:40,150
stage yet well we're trying to just

2444
01:58:38,619 --> 01:58:43,529
figure out how do we want to look it up

2445
01:58:40,149 --> 01:58:48,670
right and so Monte Carlo rate racers

2446
01:58:43,529 --> 01:58:52,269
also have this problem but probably a

2447
01:58:48,670 --> 01:58:55,600
lot of them just use a separate spatial

2448
01:58:52,270 --> 01:58:57,460
partition for the light lookups I doubt

2449
01:58:55,600 --> 01:58:59,440
they use the KD tree for that although

2450
01:58:57,460 --> 01:59:02,289
maybe they do right I was just curious

2451
01:58:59,439 --> 01:59:06,099
we can use the same one it's hard to say

2452
01:59:02,289 --> 01:59:08,939
you know but what a typical Monte Carlo

2453
01:59:06,100 --> 01:59:13,090
red tracer will do is on every bounce as

2454
01:59:08,939 --> 01:59:15,460
its tracing out array it will randomly

2455
01:59:13,090 --> 01:59:18,460
pick a number and if that number comes

2456
01:59:15,460 --> 01:59:19,989
up you know heads or whatever it'll

2457
01:59:18,460 --> 01:59:25,989
shoot towards the light instead of the

2458
01:59:19,989 --> 01:59:28,659
bounce direction you know the direction

2459
01:59:25,989 --> 01:59:29,649
it would have chosen because it's

2460
01:59:28,659 --> 01:59:32,229
already got to pick a stochastic

2461
01:59:29,649 --> 01:59:33,729
direction in terms of sampling the BS DF

2462
01:59:32,229 --> 01:59:36,159
or whatever that's doing you know and

2463
01:59:33,729 --> 01:59:39,069
it'll like randomly like biased towards

2464
01:59:36,159 --> 01:59:44,470
the light sources or hot regions in the

2465
01:59:39,069 --> 01:59:46,029
scene what lessons you learn from

2466
01:59:44,470 --> 01:59:47,710
implementing Hammad heroes debug

2467
01:59:46,029 --> 01:59:49,869
inspection system I don't think we

2468
01:59:47,710 --> 01:59:51,970
really did I guess what I would say is

2469
01:59:49,869 --> 01:59:54,039
we have the only real reach thing I

2470
01:59:51,970 --> 01:59:56,440
learned about that was you can't really

2471
01:59:54,039 --> 01:59:59,560
work on stuff that complicated on stream

2472
01:59:56,439 --> 02:00:01,299
it doesn't really work we would need

2473
01:59:59,560 --> 02:00:02,710
another hundred hours to get that to a

2474
02:00:01,300 --> 02:00:04,420
place I think was really good and

2475
02:00:02,710 --> 02:00:06,130
probably I would need to be thinking

2476
02:00:04,420 --> 02:00:09,039
about it more deeply and not talking all

2477
02:00:06,130 --> 02:00:10,600
the time right so I think we could do a

2478
02:00:09,039 --> 02:00:12,699
good version of it but I'd need to like

2479
02:00:10,600 --> 02:00:13,720
think about it off stream I don't think

2480
02:00:12,699 --> 02:00:14,889
really complicated

2481
02:00:13,720 --> 02:00:16,420
architectures lovely that works

2482
02:00:14,890 --> 02:00:22,600
particularly well on stream that's the

2483
02:00:16,420 --> 02:00:23,949
only real lesson I learned from it it

2484
02:00:22,600 --> 02:00:25,570
just it just doesn't lend itself well

2485
02:00:23,949 --> 02:00:36,779
you need a more concentrated thought

2486
02:00:25,569 --> 02:00:36,779
time any other cues

2487
02:01:14,458 --> 02:01:27,988
there is a follow-up question okay I'm

2488
02:01:24,609 --> 02:01:27,988
waiting for the follow-up

2489
02:02:09,020 --> 02:02:13,550
are there any performance impacts to

2490
02:02:11,569 --> 02:02:22,029
storing large arrays of data as static

2491
02:02:13,550 --> 02:02:29,779
global constants no there there are not

2492
02:02:22,029 --> 02:02:32,899
I mean sometimes you don't want to do

2493
02:02:29,779 --> 02:02:35,210
that because you want a little bit more

2494
02:02:32,899 --> 02:02:37,909
control over about when and where those

2495
02:02:35,210 --> 02:02:41,029
things are created and initialized right

2496
02:02:37,909 --> 02:02:44,539
and when you store large arrays of

2497
02:02:41,029 --> 02:02:48,609
static Global's then those are going to

2498
02:02:44,539 --> 02:02:50,960
be done at you know load time by the OS

2499
02:02:48,609 --> 02:02:53,000
loader that's like partitioning your

2500
02:02:50,960 --> 02:02:54,619
memory space and you can't like place

2501
02:02:53,000 --> 02:02:55,970
them where you want them you know you

2502
02:02:54,619 --> 02:02:59,239
couldn't have a base address with

2503
02:02:55,970 --> 02:03:01,579
virtual Alec if you wanted you couldn't

2504
02:02:59,239 --> 02:03:03,050
put them near or far from something else

2505
02:03:01,579 --> 02:03:05,000
you don't really know how they're gonna

2506
02:03:03,050 --> 02:03:06,980
be aligned necessarily and let's use an

2507
02:03:05,000 --> 02:03:10,670
alignment specifier and blah blah blah

2508
02:03:06,979 --> 02:03:13,209
right so you know sometimes it's and

2509
02:03:10,670 --> 02:03:15,800
also they won't show up on your memory

2510
02:03:13,210 --> 02:03:16,909
if your memory allocator tracks things

2511
02:03:15,800 --> 02:03:19,070
they won't show up there because they

2512
02:03:16,909 --> 02:03:21,019
didn't get allocated quote/unquote by

2513
02:03:19,069 --> 02:03:25,039
your allocator they got allocated by the

2514
02:03:21,020 --> 02:03:28,010
system this allocator at startup so

2515
02:03:25,039 --> 02:03:30,649
there's reasons why I don't generally do

2516
02:03:28,010 --> 02:03:33,619
that I usually if I'm gonna have large

2517
02:03:30,649 --> 02:03:35,359
sort of arrays that are declared in C

2518
02:03:33,619 --> 02:03:37,189
I'll stick them in a struct and then

2519
02:03:35,359 --> 02:03:39,349
I'll allocate that struct just so it

2520
02:03:37,189 --> 02:03:41,089
goes through my allocator and usually

2521
02:03:39,350 --> 02:03:44,210
again that's just because it's nice to

2522
02:03:41,090 --> 02:03:47,420
not have a huge amount of data segment

2523
02:03:44,210 --> 02:03:50,359
space just getting created there unless

2524
02:03:47,420 --> 02:03:52,340
you really need it so sometimes you'll

2525
02:03:50,359 --> 02:03:53,599
do it because like in the debug system

2526
02:03:52,340 --> 02:03:55,069
for example you really need it to just

2527
02:03:53,600 --> 02:03:58,220
be a globally accessible variable or

2528
02:03:55,069 --> 02:03:59,899
something then that's fine but a lot of

2529
02:03:58,220 --> 02:04:01,369
times I just won't do it that way not

2530
02:03:59,899 --> 02:04:05,170
because there's this like some kind of

2531
02:04:01,369 --> 02:04:05,170
super bad thing but just you know

2532
02:04:09,329 --> 02:04:12,519
Jesse Meyer is a non-tree apart of

2533
02:04:11,649 --> 02:04:14,500
difficulty of the inherent limitations

2534
02:04:12,520 --> 02:04:16,630
of C you originally had to implement

2535
02:04:14,500 --> 02:04:17,890
various meta programming tooling or was

2536
02:04:16,630 --> 02:04:26,289
the ideal system you want just

2537
02:04:17,890 --> 02:04:28,000
inherently complex yeah I would say it's

2538
02:04:26,289 --> 02:04:31,899
both of those things

2539
02:04:28,000 --> 02:04:39,520
it is both complex and C doesn't do it c

2540
02:04:31,899 --> 02:04:42,219
/ c++ doesn't do it correctly so it is

2541
02:04:39,520 --> 02:04:54,880
both of those it's both both of those

2542
02:04:42,220 --> 02:04:56,079
things are true G's OpenGL unfortunately

2543
02:04:54,880 --> 02:05:01,300
yes

2544
02:04:56,079 --> 02:05:04,600
I probably wouldn't have done that today

2545
02:05:01,300 --> 02:05:07,239
but when we were showing how to

2546
02:05:04,600 --> 02:05:09,550
interface with a 3d card at the time

2547
02:05:07,239 --> 02:05:11,639
OpenGL was probably the best or I

2548
02:05:09,550 --> 02:05:16,000
thought was probably the best solution

2549
02:05:11,640 --> 02:05:19,869
the reason for that is just because I

2550
02:05:16,000 --> 02:05:21,189
wanted to have them have it be as likely

2551
02:05:19,869 --> 02:05:24,930
as possible that people could follow

2552
02:05:21,189 --> 02:05:27,969
along on their own operating system and

2553
02:05:24,930 --> 02:05:33,820
OpenGL at the time ran on Windows Mac

2554
02:05:27,970 --> 02:05:35,230
and Linux subsequent to that Mac which I

2555
02:05:33,819 --> 02:05:39,059
know a lot of people develop on for

2556
02:05:35,229 --> 02:05:41,709
reasons I'm not quite sure but they do

2557
02:05:39,060 --> 02:05:44,110
OpenGL look doesn't really run on there

2558
02:05:41,710 --> 02:05:46,329
anymore you can sort of run it but it's

2559
02:05:44,109 --> 02:05:48,250
like really deprecated and buggy and bad

2560
02:05:46,329 --> 02:05:50,199
and Apple specifically said don't ever

2561
02:05:48,250 --> 02:05:51,460
use it right there like don't use OpenGL

2562
02:05:50,199 --> 02:05:56,199
we're not supporting it anymore you have

2563
02:05:51,460 --> 02:05:58,779
to use metal so given that turn of

2564
02:05:56,199 --> 02:06:03,399
events I probably would have just used D

2565
02:05:58,779 --> 02:06:06,519
3d and and certainly if someone's like

2566
02:06:03,399 --> 02:06:08,019
writing a game that's not for

2567
02:06:06,520 --> 02:06:10,330
educational purposes I would say

2568
02:06:08,020 --> 02:06:16,180
definitely don't use open Jill I would

2569
02:06:10,329 --> 02:06:19,539
say use D 3 D 11 on Windows and use

2570
02:06:16,180 --> 02:06:22,230
metal on Mac and don't bother with Linux

2571
02:06:19,539 --> 02:06:24,640
because people don't buy games on

2572
02:06:22,229 --> 02:06:26,919
and if they do they can use like the

2573
02:06:24,640 --> 02:06:30,420
valve translation layer that does D 3d

2574
02:06:26,920 --> 02:06:30,420
translation or something right

2575
02:06:41,590 --> 02:06:47,960
you add lights separately or bundled it

2576
02:06:44,840 --> 02:06:52,940
with other objects in the scene like

2577
02:06:47,960 --> 02:06:57,230
lamps for example so they're probably

2578
02:06:52,939 --> 02:07:00,799
going to be a mixture of the two we will

2579
02:06:57,229 --> 02:07:02,779
probably have so right now entities can

2580
02:07:00,800 --> 02:07:05,570
specify that they have lighting on them

2581
02:07:02,779 --> 02:07:07,789
right so we will probably do something

2582
02:07:05,569 --> 02:07:11,750
where some entities like lamps or other

2583
02:07:07,789 --> 02:07:14,269
things are just set to have an emitter

2584
02:07:11,750 --> 02:07:19,189
on them and then that'll just happen or

2585
02:07:14,270 --> 02:07:21,500
something right and then in other cases

2586
02:07:19,189 --> 02:07:25,099
we may because again it's the it's an

2587
02:07:21,500 --> 02:07:27,529
artistic intent issue right so in other

2588
02:07:25,100 --> 02:07:35,739
cases we'll probably add lights to the

2589
02:07:27,529 --> 02:07:35,738
system there may be there to help with

2590
02:07:35,979 --> 02:07:41,448
with just coloring in areas in ways that

2591
02:07:38,930 --> 02:07:43,039
maybe don't really have a reason to be

2592
02:07:41,448 --> 02:07:46,460
there like there there may not actually

2593
02:07:43,039 --> 02:07:48,198
be like a physical thing creating the

2594
02:07:46,460 --> 02:07:50,140
light you know what I mean

2595
02:07:48,198 --> 02:07:52,609
because it's a fairly whimsical

2596
02:07:50,140 --> 02:07:55,579
environment it's you know it's cartoony

2597
02:07:52,609 --> 02:07:58,309
it's not so you know it's not like we're

2598
02:07:55,579 --> 02:08:00,350
doing something where we where we really

2599
02:07:58,310 --> 02:08:02,750
want to like push the realism and and

2600
02:08:00,350 --> 02:08:04,760
have it look really like a real scene so

2601
02:08:02,750 --> 02:08:07,310
we probably want to put in lights that

2602
02:08:04,760 --> 02:08:09,640
are not really there sometimes and stuff

2603
02:08:07,310 --> 02:08:09,640
like that

2604
02:08:13,719 --> 02:08:19,390
not a question we just want to tell you

2605
02:08:15,850 --> 02:08:21,789
I lost two daughters twins due to a

2606
02:08:19,390 --> 02:08:23,530
freak accidents and binging handmade

2607
02:08:21,789 --> 02:08:26,738
here helped a lot with managing the loss

2608
02:08:23,529 --> 02:08:28,238
during the hardest time you helped with

2609
02:08:26,738 --> 02:08:31,479
more than you probably think

2610
02:08:28,238 --> 02:08:32,979
okay so not sure how to totally respond

2611
02:08:31,479 --> 02:08:37,539
to that because that sounds very

2612
02:08:32,979 --> 02:08:39,609
horrific kind of had like this this

2613
02:08:37,539 --> 02:08:44,050
vision in my head of like The Shining or

2614
02:08:39,609 --> 02:08:46,029
something and you know like they'll -

2615
02:08:44,050 --> 02:08:47,199
two twin daughters with the crazy blood

2616
02:08:46,029 --> 02:08:52,539
flowing through or something like that

2617
02:08:47,198 --> 02:08:54,488
that was very scary and I guess I would

2618
02:08:52,539 --> 02:08:56,948
say I'm very glad we could help with

2619
02:08:54,488 --> 02:08:58,599
that but I guess that's not me right

2620
02:08:56,948 --> 02:09:00,669
that's just trying to prove

2621
02:08:58,600 --> 02:09:02,260
I suppose that's just saying look there

2622
02:09:00,670 --> 02:09:04,859
needs to be something that you can take

2623
02:09:02,260 --> 02:09:07,659
your mind off of something that horrific

2624
02:09:04,859 --> 02:09:09,789
and if we could do that for you that's

2625
02:09:07,659 --> 02:09:11,139
great but hey man that that ain't me

2626
02:09:09,789 --> 02:09:14,859
like there's nothing I can do about

2627
02:09:11,140 --> 02:09:17,020
something that bad right I guess I'm

2628
02:09:14,859 --> 02:09:19,329
just providing a good diversion which is

2629
02:09:17,020 --> 02:09:20,560
more than fine by me I mean if I can

2630
02:09:19,329 --> 02:09:24,359
help in some small way with something

2631
02:09:20,560 --> 02:09:27,130
like that then I'm I'm thumbs up but

2632
02:09:24,359 --> 02:09:31,569
yeah that sounds terrible I guess is

2633
02:09:27,130 --> 02:09:33,460
what I would say I've never had children

2634
02:09:31,569 --> 02:09:38,559
so I can't really relate directly right

2635
02:09:33,460 --> 02:09:39,789
but you know I can I can imagine that

2636
02:09:38,560 --> 02:09:41,590
that that's probably one of the worst

2637
02:09:39,789 --> 02:09:43,689
things that can happen to you as a

2638
02:09:41,590 --> 02:09:47,800
person right

2639
02:09:43,689 --> 02:09:50,469
humans are are pretty hard bound to

2640
02:09:47,800 --> 02:09:52,810
their to their offspring right that's

2641
02:09:50,469 --> 02:09:54,100
like a pretty primal survival instinct

2642
02:09:52,810 --> 02:09:55,449
so there's nothing you can really do

2643
02:09:54,100 --> 02:09:59,820
about that like your emotions are gonna

2644
02:09:55,448 --> 02:10:04,599
be really really violent in any case

2645
02:09:59,819 --> 02:10:09,210
that's that's that bad we should have

2646
02:10:04,600 --> 02:10:12,880
some kind of a distraction stream like a

2647
02:10:09,210 --> 02:10:17,189
not thinking about lost stream we can

2648
02:10:12,880 --> 02:10:20,190
have handmade hero loss diversion

2649
02:10:17,189 --> 02:10:20,189
programming

2650
02:10:23,038 --> 02:10:26,590
do you think the current trend of

2651
02:10:25,269 --> 02:10:28,958
dedicated ray-tracing hardware is the

2652
02:10:26,590 --> 02:10:31,779
right way to go for GPUs solving the

2653
02:10:28,958 --> 02:10:39,248
lighting problem is there another route

2654
02:10:31,779 --> 02:10:45,929
you would like to see I guess what I

2655
02:10:39,248 --> 02:10:49,238
would say is I don't necessarily know if

2656
02:10:45,929 --> 02:10:54,130
having dedicated ray tracing hardware is

2657
02:10:49,238 --> 02:10:55,779
the way to solve the lighting problem or

2658
02:10:54,130 --> 02:10:59,498
the right way to solve the lighting

2659
02:10:55,779 --> 02:11:02,168
problem but what I would say is we don't

2660
02:10:59,498 --> 02:11:05,168
know what else to do right

2661
02:11:02,168 --> 02:11:07,630
so I don't know what the right solution

2662
02:11:05,168 --> 02:11:11,529
to lighting is you know as you can see

2663
02:11:07,630 --> 02:11:12,010
it's just really difficult to make it

2664
02:11:11,529 --> 02:11:16,238
work

2665
02:11:12,010 --> 02:11:18,820
I think if Nvidia had an idea a better

2666
02:11:16,238 --> 02:11:20,049
idea they would do it so I mean the

2667
02:11:18,819 --> 02:11:22,058
reason they're doing what they're doing

2668
02:11:20,050 --> 02:11:26,288
is we don't know like light gets

2669
02:11:22,059 --> 02:11:28,149
transmitted along Ray's ray tracing is

2670
02:11:26,288 --> 02:11:29,738
the only thing we know about that solves

2671
02:11:28,149 --> 02:11:33,249
the lighting transport problem in a

2672
02:11:29,738 --> 02:11:35,678
general sense we don't know what else to

2673
02:11:33,248 --> 02:11:38,859
do if someone comes up with something

2674
02:11:35,679 --> 02:11:41,288
brilliant that turns out to be like way

2675
02:11:38,859 --> 02:11:45,518
better we would use it right but we

2676
02:11:41,288 --> 02:11:47,469
don't know and so I certainly don't have

2677
02:11:45,519 --> 02:11:50,880
some other route I would suggest because

2678
02:11:47,469 --> 02:11:53,380
I don't know what else you do you know

2679
02:11:50,880 --> 02:11:55,689
stochastic ray tracing is the only thing

2680
02:11:53,380 --> 02:11:58,918
we really know how to do it's the

2681
02:11:55,689 --> 02:12:03,489
cornerstone of all production rate

2682
02:11:58,918 --> 02:12:04,689
renderers for like high-end stuff you

2683
02:12:03,488 --> 02:12:08,738
know that renders movies and whatever

2684
02:12:04,689 --> 02:12:11,499
like nobody does anything else so it's

2685
02:12:08,738 --> 02:12:20,498
pretty much all we got and so it may not

2686
02:12:11,498 --> 02:12:22,238
be good just because it's so slow but I

2687
02:12:20,498 --> 02:12:23,769
don't know what else you do so just

2688
02:12:22,238 --> 02:12:26,529
throwing a ton of hardware at it and

2689
02:12:23,769 --> 02:12:29,409
crossing our fingers is possibly the

2690
02:12:26,529 --> 02:12:34,300
only real path forward and the good news

2691
02:12:29,408 --> 02:12:35,710
is that it's a incredibly parallelizable

2692
02:12:34,300 --> 02:12:38,199
problem

2693
02:12:35,710 --> 02:12:43,750
so you know when you think about

2694
02:12:38,199 --> 02:12:45,670
something like rasterization there's

2695
02:12:43,750 --> 02:12:48,729
like order dependencies and things like

2696
02:12:45,670 --> 02:12:51,609
this ray-tracing has none of those so

2697
02:12:48,729 --> 02:12:53,229
you can literally just throw tons of

2698
02:12:51,609 --> 02:12:56,500
hardware with no communication

2699
02:12:53,229 --> 02:13:00,219
whatsoever at a rate raising problem and

2700
02:12:56,500 --> 02:13:02,170
it just gets better right so the good

2701
02:13:00,220 --> 02:13:04,930
news about ray-tracing and the reason

2702
02:13:02,170 --> 02:13:09,329
why maybe it could be a right solution

2703
02:13:04,930 --> 02:13:14,350
in in the long run is look you can throw

2704
02:13:09,329 --> 02:13:16,449
62 chips each with 300 cores into a

2705
02:13:14,350 --> 02:13:18,250
machine and have them all rate race and

2706
02:13:16,449 --> 02:13:21,429
none of them need to talk to each other

2707
02:13:18,250 --> 02:13:23,710
about anything right you've got a

2708
02:13:21,430 --> 02:13:26,230
problem of how you distribute the scene

2709
02:13:23,710 --> 02:13:28,480
geometry out to them and how they

2710
02:13:26,229 --> 02:13:29,919
actually get information about like what

2711
02:13:28,479 --> 02:13:33,909
textures they're hitting and stuff and

2712
02:13:29,920 --> 02:13:35,350
that's a problem but it's still fully

2713
02:13:33,909 --> 02:13:37,599
apparent they don't need to talk to each

2714
02:13:35,350 --> 02:13:39,820
other to do it right like nobody needs

2715
02:13:37,600 --> 02:13:42,370
to synchronize or like they just need

2716
02:13:39,819 --> 02:13:44,349
access so you're just talking about how

2717
02:13:42,369 --> 02:13:50,769
do you replicate information across a

2718
02:13:44,350 --> 02:13:54,370
wide network of computing elements but

2719
02:13:50,770 --> 02:13:56,740
if you can you're done because if you

2720
02:13:54,369 --> 02:13:59,649
can get it replicated out to enough

2721
02:13:56,739 --> 02:14:01,359
things they will just run in parallel

2722
02:13:59,649 --> 02:14:02,849
and they never need to talk to each

2723
02:14:01,359 --> 02:14:09,179
other and that's a really powerful

2724
02:14:02,850 --> 02:14:13,150
element of ray-tracing that that it has

2725
02:14:09,180 --> 02:14:14,590
that not many other things do right so

2726
02:14:13,149 --> 02:14:19,199
that's the really nice aspect of

2727
02:14:14,590 --> 02:14:22,900
ray-tracing is it's it just works but

2728
02:14:19,199 --> 02:14:27,210
you know beyond that it's just a really

2729
02:14:22,899 --> 02:14:27,210
brute force thing

2730
02:14:36,350 --> 02:14:40,410
bowlinator says I really like the

2731
02:14:38,460 --> 02:14:42,779
platform and renderer setup you have if

2732
02:14:40,409 --> 02:14:44,460
your renderer needed to load files for

2733
02:14:42,779 --> 02:14:46,519
shaders of something or had to allocate

2734
02:14:44,460 --> 02:14:48,810
a lot of stuff would you reimplemented

2735
02:14:46,520 --> 02:14:50,760
civic functions in the renderer or would

2736
02:14:48,810 --> 02:14:53,550
you pass your platform api struct to the

2737
02:14:50,760 --> 02:15:06,390
renderer initialize and use the ones you

2738
02:14:53,550 --> 02:15:09,810
mean if executable implemented I think

2739
02:15:06,390 --> 02:15:11,970
the answer is for the most part I don't

2740
02:15:09,810 --> 02:15:14,760
think a renderer should really be

2741
02:15:11,970 --> 02:15:17,280
loading anything so I would probably try

2742
02:15:14,760 --> 02:15:19,260
to do that stuff with feed-forward so

2743
02:15:17,279 --> 02:15:20,939
meaning I would want the platform

2744
02:15:19,260 --> 02:15:22,199
independent stuff to do the loading and

2745
02:15:20,939 --> 02:15:24,629
I would want it to pass it to the

2746
02:15:22,199 --> 02:15:26,760
renderer I can't think of any reasons

2747
02:15:24,630 --> 02:15:29,489
why you can't do that like you should

2748
02:15:26,760 --> 02:15:33,869
just be able to do that always so that's

2749
02:15:29,489 --> 02:15:36,090
what I would do in terms of allocation

2750
02:15:33,869 --> 02:15:38,099
though I would say that should all live

2751
02:15:36,090 --> 02:15:39,750
inside the renderer and the reason for

2752
02:15:38,100 --> 02:15:41,220
that is because the renderer may need to

2753
02:15:39,750 --> 02:15:43,800
be doing a special-purpose kinds of

2754
02:15:41,220 --> 02:15:45,390
allocation so when the renderer needs to

2755
02:15:43,800 --> 02:15:46,619
do things like allocate texture space

2756
02:15:45,390 --> 02:15:48,930
and stuff like that that should be

2757
02:15:46,619 --> 02:15:50,640
happening inside the renderer because

2758
02:15:48,930 --> 02:15:54,680
it's the only thing that knows what kind

2759
02:15:50,640 --> 02:15:56,700
of memory and when that needs to happen

2760
02:15:54,680 --> 02:15:58,170
so I would say there's a slit there

2761
02:15:56,699 --> 02:15:59,489
resource loading should go through the

2762
02:15:58,170 --> 02:16:00,840
standard pipeline because it needs to

2763
02:15:59,489 --> 02:16:02,399
take advantage of the multi-threading

2764
02:16:00,840 --> 02:16:05,699
and different sort of scheduling things

2765
02:16:02,399 --> 02:16:12,839
so you really want that to be in the

2766
02:16:05,699 --> 02:16:14,609
platform independent part of stuff but

2767
02:16:12,840 --> 02:16:18,960
everything else you mentioned I think

2768
02:16:14,609 --> 02:16:20,670
wants to go in the renderer all right

2769
02:16:18,960 --> 02:16:21,930
I'm gonna go ahead and wrap it up we

2770
02:16:20,670 --> 02:16:24,390
definitely have our work cut out for us

2771
02:16:21,930 --> 02:16:26,579
tomorrow although everything kind of

2772
02:16:24,390 --> 02:16:31,380
went reasonably today we kind of have a

2773
02:16:26,579 --> 02:16:32,729
problem of that light source yeah not

2774
02:16:31,380 --> 02:16:34,138
sure exactly how we're gonna do that but

2775
02:16:32,729 --> 02:16:37,019
we're gonna we're gonna have to think

2776
02:16:34,138 --> 02:16:40,289
that through so I'm gonna wrap it up for

2777
02:16:37,019 --> 02:16:42,000
now let's go ahead and close this down

2778
02:16:40,290 --> 02:16:43,260
thank you everyone for joining me for

2779
02:16:42,000 --> 02:16:45,058
those sort of handmade here oh it's been

2780
02:16:43,260 --> 02:16:46,290
a pleasure coding with you as always if

2781
02:16:45,058 --> 02:16:48,119
you would like to follow on the series

2782
02:16:46,290 --> 02:16:49,889
at home you always peer to the game

2783
02:16:48,120 --> 02:16:53,219
handmade here or it comes with a source

2784
02:16:49,888 --> 02:16:55,138
code so that you can follow along with

2785
02:16:53,218 --> 02:16:57,329
it I will be back here same time same

2786
02:16:55,138 --> 02:17:00,388
place tomorrow to take a look at that

2787
02:16:57,329 --> 02:17:02,459
lighting and how we're gonna actually

2788
02:17:00,388 --> 02:17:04,979
track what direction the lights go in

2789
02:17:02,459 --> 02:17:06,329
inside the spaceship partition or maybe

2790
02:17:04,979 --> 02:17:08,159
we'll introduce some totally separate

2791
02:17:06,329 --> 02:17:10,110
way of handling it but either way we're

2792
02:17:08,159 --> 02:17:11,850
gonna do something related to that and

2793
02:17:10,110 --> 02:17:14,639
I'll be back here tomorrow to do that

2794
02:17:11,850 --> 02:17:17,130
until then have fun programming and I

2795
02:17:14,638 --> 02:17:19,638
will see y'all on the Internet take it

2796
02:17:17,129 --> 02:17:19,638
easy everybody

