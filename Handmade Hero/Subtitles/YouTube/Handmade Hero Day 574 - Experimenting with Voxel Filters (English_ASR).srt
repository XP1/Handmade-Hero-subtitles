1
00:00:00,920 --> 00:00:04,410
hello everyone and welcome to hand made

2
00:00:03,359 --> 00:00:07,349
here oh sure we could a complete-game

3
00:00:04,410 --> 00:00:10,980
live on stream we have more or less

4
00:00:07,349 --> 00:00:13,250
finished a large swath of our lighting

5
00:00:10,980 --> 00:00:19,140
stuff and we're kind of down to the last

6
00:00:13,250 --> 00:00:23,039
few sort of tricky bits here so what we

7
00:00:19,140 --> 00:00:26,640
want to do is we want to get our sort of

8
00:00:23,039 --> 00:00:30,660
ray casting system producing a stable

9
00:00:26,640 --> 00:00:34,500
set of for lack of a better term inputs

10
00:00:30,660 --> 00:00:36,000
to the light field interpolator and we

11
00:00:34,500 --> 00:00:37,850
have a couple to do's that we wanted to

12
00:00:36,000 --> 00:00:41,670
do for that in addition to just

13
00:00:37,850 --> 00:00:45,000
debugging and so we're gonna start take

14
00:00:41,670 --> 00:00:47,579
a look at those today there's not a lot

15
00:00:45,000 --> 00:00:50,219
of mystery to most of it it's really

16
00:00:47,579 --> 00:00:52,939
just turning the crank except for one

17
00:00:50,219 --> 00:00:55,020
piece which is we don't really know if

18
00:00:52,939 --> 00:00:57,329
we want to be able to interpolate

19
00:00:55,020 --> 00:01:00,329
multiple light fields at the same time

20
00:00:57,329 --> 00:01:03,780
which we have the ability to do in the

21
00:01:00,329 --> 00:01:05,400
voxel subsystem we don't really know how

22
00:01:03,780 --> 00:01:07,829
we would generate two light fields

23
00:01:05,400 --> 00:01:10,920
exactly like we can blend one light

24
00:01:07,829 --> 00:01:12,658
field so if we wanted to output

25
00:01:10,920 --> 00:01:14,909
everything that we got from the lighting

26
00:01:12,659 --> 00:01:18,600
solution as one single light field that

27
00:01:14,909 --> 00:01:20,969
just gets interpolated like all mushed

28
00:01:18,599 --> 00:01:23,849
together we can totally do that

29
00:01:20,969 --> 00:01:26,908
and maybe that's fine like for all we

30
00:01:23,849 --> 00:01:29,519
know that might be fine but if we want

31
00:01:26,909 --> 00:01:32,460
to try and use even just two light

32
00:01:29,519 --> 00:01:34,319
fields the only thing we really just

33
00:01:32,459 --> 00:01:36,239
have no idea how we would do and we'd

34
00:01:34,319 --> 00:01:38,519
have to sort of do some experimentation

35
00:01:36,239 --> 00:01:41,039
try to work something out is how we

36
00:01:38,519 --> 00:01:43,679
would break our lighting samples into

37
00:01:41,040 --> 00:01:46,618
two separate light fields that each get

38
00:01:43,680 --> 00:01:49,290
evaluated separately at shader time and

39
00:01:46,618 --> 00:01:52,319
there are some benefits to us if we can

40
00:01:49,290 --> 00:01:53,790
do that with our current way that we're

41
00:01:52,319 --> 00:01:56,039
storing the light field we would only

42
00:01:53,790 --> 00:01:59,759
ever get one specular highlight on

43
00:01:56,040 --> 00:02:02,100
anything if we wanted it because we only

44
00:01:59,759 --> 00:02:03,569
have one normal pointing towards the

45
00:02:02,099 --> 00:02:05,968
like primary direction of the light

46
00:02:03,569 --> 00:02:08,549
source and we're kind of implying a

47
00:02:05,968 --> 00:02:11,008
applying a fog like sort of a thing to

48
00:02:08,550 --> 00:02:13,709
it that will probably tweak in the

49
00:02:11,008 --> 00:02:15,858
future to be even more Phong like

50
00:02:13,709 --> 00:02:17,878
and if you take a look at what that does

51
00:02:15,859 --> 00:02:19,590
it's going to produce a specular

52
00:02:17,878 --> 00:02:22,739
highlight in that particular direction

53
00:02:19,590 --> 00:02:25,019
and if we wanted to have a secondary

54
00:02:22,739 --> 00:02:26,099
specular highlight somewhere we wouldn't

55
00:02:25,019 --> 00:02:27,989
be able to get one but the way we're

56
00:02:26,098 --> 00:02:29,429
doing light-filled currently and so

57
00:02:27,989 --> 00:02:32,158
keeping the light field exactly the same

58
00:02:29,430 --> 00:02:33,389
as it is now it's pretty trivial for us

59
00:02:32,158 --> 00:02:35,669
to get to specular highlights at

60
00:02:33,389 --> 00:02:37,109
interpolation time we just add another

61
00:02:35,669 --> 00:02:42,318
light field and we already have I think

62
00:02:37,109 --> 00:02:44,489
three at least going on in there and

63
00:02:42,318 --> 00:02:46,828
really two would probably find anyway

64
00:02:44,489 --> 00:02:48,989
the question is just how do we generate

65
00:02:46,829 --> 00:02:49,739
the second one because if we just blend

66
00:02:48,989 --> 00:02:52,259
everything together

67
00:02:49,739 --> 00:02:54,870
we only get one light field if we want

68
00:02:52,259 --> 00:02:56,250
to have two the question is what gets

69
00:02:54,870 --> 00:02:57,900
blended into the first light field

70
00:02:56,250 --> 00:03:00,060
versus what gets blended into the second

71
00:02:57,900 --> 00:03:01,769
light field right and so it's pretty

72
00:03:00,060 --> 00:03:03,718
confusing because you're like well I

73
00:03:01,769 --> 00:03:06,329
don't know right it's kind of a K

74
00:03:03,718 --> 00:03:08,218
clusters sort of a problem and it's not

75
00:03:06,329 --> 00:03:10,859
immediately clear how we would really do

76
00:03:08,218 --> 00:03:11,968
that in an incremental way normally when

77
00:03:10,859 --> 00:03:15,870
you do K clusters they're not

78
00:03:11,968 --> 00:03:17,908
incremental K clusters so I don't know

79
00:03:15,870 --> 00:03:21,419
right and so we might have to do

80
00:03:17,908 --> 00:03:23,370
something where we have some idea of

81
00:03:21,419 --> 00:03:24,810
like two polar normals and they both

82
00:03:23,370 --> 00:03:27,840
been really to each other or something I

83
00:03:24,810 --> 00:03:30,840
mean I don't know but the point is it's

84
00:03:27,840 --> 00:03:33,598
pretty confusing and we don't really

85
00:03:30,840 --> 00:03:35,069
know exactly how we would do that so at

86
00:03:33,598 --> 00:03:38,008
that point we have a couple different

87
00:03:35,068 --> 00:03:40,108
choices one is that we figure that out

88
00:03:38,008 --> 00:03:41,250
and the other is that we switch to

89
00:03:40,109 --> 00:03:44,009
something that doesn't have this

90
00:03:41,250 --> 00:03:47,250
property so for example if you were to

91
00:03:44,008 --> 00:03:49,918
do something like I don't know circle

92
00:03:47,250 --> 00:03:52,259
harmonics for example those don't have

93
00:03:49,919 --> 00:03:54,180
this problem they may have other

94
00:03:52,258 --> 00:03:58,348
problems they probably wouldn't give us

95
00:03:54,180 --> 00:04:00,060
as good of interpolation for example for

96
00:03:58,348 --> 00:04:01,649
things that we want like the sort of

97
00:04:00,060 --> 00:04:03,658
sphere of light that's you know

98
00:04:01,650 --> 00:04:07,199
surrounds a character or a torch that we

99
00:04:03,658 --> 00:04:09,628
kind of want for our 2d look so they're

100
00:04:07,199 --> 00:04:10,889
probably not a great choice for us but

101
00:04:09,628 --> 00:04:12,810
one of the reasons that people choose

102
00:04:10,889 --> 00:04:14,789
them is specifically because they can be

103
00:04:12,810 --> 00:04:17,939
blended together in that way so you can

104
00:04:14,788 --> 00:04:20,759
capture multiple pieces of light

105
00:04:17,939 --> 00:04:22,139
information using spherical harmonics by

106
00:04:20,759 --> 00:04:24,900
just tracking a bunch of spherical

107
00:04:22,139 --> 00:04:27,028
harmonic coefficients eight in our case

108
00:04:24,899 --> 00:04:27,279
would be two vox lookups and that's a

109
00:04:27,028 --> 00:04:30,969
lot

110
00:04:27,279 --> 00:04:32,259
right so if we wanted to do something

111
00:04:30,970 --> 00:04:35,380
like spherical harmonics we could

112
00:04:32,259 --> 00:04:37,060
totally do that and maybe what we end up

113
00:04:35,379 --> 00:04:38,918
finding out is that that's just a more

114
00:04:37,060 --> 00:04:41,319
sensible way for us to do our

115
00:04:38,918 --> 00:04:43,209
interpolation I don't know that's fine

116
00:04:41,319 --> 00:04:44,709
because it doesn't matter to us one way

117
00:04:43,209 --> 00:04:47,138
or the other that's just a thing for

118
00:04:44,709 --> 00:04:49,659
storage and reconstruction so we can

119
00:04:47,139 --> 00:04:52,389
change that out relatively inexpensively

120
00:04:49,660 --> 00:04:54,220
once we have everything else debugged so

121
00:04:52,389 --> 00:04:55,660
it's not a huge deal if we want

122
00:04:54,220 --> 00:04:56,770
experiment with stuff like that it's not

123
00:04:55,660 --> 00:04:59,590
like the rest of this where it's very

124
00:04:56,769 --> 00:05:01,389
structural it's really just an encoding

125
00:04:59,589 --> 00:05:04,679
decoding thing and so it's just

126
00:05:01,389 --> 00:05:07,089
switching out a codec stage basically

127
00:05:04,680 --> 00:05:08,379
which is a nice self-contained problem

128
00:05:07,089 --> 00:05:12,310
that shouldn't be too hard to deal with

129
00:05:08,379 --> 00:05:15,790
right alright so I'm gonna go ahead and

130
00:05:12,310 --> 00:05:17,680
and get started on that let me go ahead

131
00:05:15,790 --> 00:05:19,479
and open up the game here we were

132
00:05:17,680 --> 00:05:22,300
playing around with handmade ray because

133
00:05:19,478 --> 00:05:25,779
Linux was a disaster but now we're back

134
00:05:22,300 --> 00:05:29,430
on the main main line here so I'm gonna

135
00:05:25,779 --> 00:05:36,459
go ahead and compile there we go and

136
00:05:29,430 --> 00:05:43,689
open up remedy and if I run what you can

137
00:05:36,459 --> 00:05:45,728
see here is this this is where we left

138
00:05:43,689 --> 00:05:46,389
things again it looks actually quite

139
00:05:45,728 --> 00:05:49,389
nice now

140
00:05:46,389 --> 00:05:52,209
oddly enough we're not really doing any

141
00:05:49,389 --> 00:05:55,870
secondary rays at all but you kind of

142
00:05:52,209 --> 00:05:59,349
get a nice feel for it here this is

143
00:05:55,870 --> 00:06:00,819
without interpolation so it even kind of

144
00:05:59,350 --> 00:06:03,010
looks pretty nice even without

145
00:06:00,819 --> 00:06:07,389
interpolation on you can see for example

146
00:06:03,009 --> 00:06:09,399
the stair stepping over here it just

147
00:06:07,389 --> 00:06:11,139
makes it a little easier to debug when

148
00:06:09,399 --> 00:06:13,089
we don't have interpolation on so that's

149
00:06:11,139 --> 00:06:14,978
why that looks the way it does

150
00:06:13,089 --> 00:06:16,959
I can turn interpolation on so you can

151
00:06:14,978 --> 00:06:19,899
see what that does look like if I go

152
00:06:16,959 --> 00:06:21,219
into the OpenGL side of things and we

153
00:06:19,899 --> 00:06:24,329
just take a look at where we're doing

154
00:06:21,220 --> 00:06:24,330
computing Jimmie

155
00:06:44,279 --> 00:06:49,750
aa-men all right

156
00:06:46,680 --> 00:06:51,129
anyway what was I saying okay so if we

157
00:06:49,750 --> 00:06:53,949
go take a look at where we're doing our

158
00:06:51,129 --> 00:06:57,790
nearest filtering that should be in here

159
00:06:53,949 --> 00:07:03,550
somewhere did I just scoop by it let's

160
00:06:57,790 --> 00:07:05,260
see here we go oh this is weird wait so

161
00:07:03,550 --> 00:07:07,210
that was actually linear filtering all

162
00:07:05,259 --> 00:07:09,490
right I take it back looks like that was

163
00:07:07,209 --> 00:07:12,669
because we're not filling in negative

164
00:07:09,490 --> 00:07:15,970
values in that area oh and in fact you

165
00:07:12,670 --> 00:07:17,860
know what that's true so it's not that

166
00:07:15,970 --> 00:07:20,170
we we are actually doing in fact you can

167
00:07:17,860 --> 00:07:22,030
tell you can see that's that specular

168
00:07:20,170 --> 00:07:24,069
highlight there is getting a perfectly

169
00:07:22,029 --> 00:07:25,779
round interpolator so never mind we are

170
00:07:24,069 --> 00:07:27,009
doing linear interpolation the reason

171
00:07:25,779 --> 00:07:29,709
that's happening is we're not filling in

172
00:07:27,009 --> 00:07:31,689
the negative light values and I remember

173
00:07:29,709 --> 00:07:32,799
exactly why that was it's because we put

174
00:07:31,689 --> 00:07:34,240
it to do in there that what we want to

175
00:07:32,800 --> 00:07:37,270
do is reconstruct those with the filter

176
00:07:34,240 --> 00:07:43,650
right so basically what we want to do

177
00:07:37,269 --> 00:07:46,779
here is say all right in the so on the

178
00:07:43,649 --> 00:07:49,750
output side of things let me go ahead

179
00:07:46,779 --> 00:07:53,459
and let me go ahead and go over to the

180
00:07:49,750 --> 00:07:59,439
lighting to do is you can see them here

181
00:07:53,459 --> 00:08:01,899
we have this right and I assume that

182
00:07:59,439 --> 00:08:04,269
that is something we don't want to do

183
00:08:01,899 --> 00:08:06,189
right away that was just we switched to

184
00:08:04,269 --> 00:08:09,189
floats here and you can see that we

185
00:08:06,189 --> 00:08:10,930
don't produce any flickering I think it

186
00:08:09,189 --> 00:08:12,279
was the normals primarily that we're

187
00:08:10,930 --> 00:08:16,060
producing the flickering because it

188
00:08:12,279 --> 00:08:20,769
seemed like if we wanted to we were able

189
00:08:16,060 --> 00:08:22,149
to actually use four colors we had

190
00:08:20,769 --> 00:08:23,799
changed those two floats and it didn't

191
00:08:22,149 --> 00:08:25,509
really make any difference so we don't

192
00:08:23,800 --> 00:08:29,980
really know but it may be that for color

193
00:08:25,509 --> 00:08:34,000
values the color and intensity it's

194
00:08:29,980 --> 00:08:36,639
actually fine to use anything like you

195
00:08:34,000 --> 00:08:37,960
know standard 8-bit it so it may just be

196
00:08:36,639 --> 00:08:39,490
that the normals need to be encoded

197
00:08:37,960 --> 00:08:40,960
better and that's really good news for

198
00:08:39,490 --> 00:08:42,788
us because their normals we actually

199
00:08:40,960 --> 00:08:44,080
have a lot of ways to encode those we

200
00:08:42,788 --> 00:08:48,129
can do a thing where we just use like a

201
00:08:44,080 --> 00:08:51,100
sign bit for Z and then like you know 15

202
00:08:48,129 --> 00:08:54,009
bits each for X&amp;Y or something like that

203
00:08:51,100 --> 00:08:55,360
and that would allow us to encode those

204
00:08:54,009 --> 00:08:57,189
normals

205
00:08:55,360 --> 00:08:59,649
probably with plenty of precision for

206
00:08:57,190 --> 00:09:01,000
what we were seeing and and not have to

207
00:08:59,649 --> 00:09:03,129
worry about it so I think we're in good

208
00:09:01,000 --> 00:09:06,639
shape for that but that's gonna be sort

209
00:09:03,129 --> 00:09:09,458
of a later to do and in fact I probably

210
00:09:06,639 --> 00:09:13,750
want to move that down right like that

211
00:09:09,458 --> 00:09:15,849
should be way at the end so basically

212
00:09:13,750 --> 00:09:18,309
we've got two things that we really want

213
00:09:15,850 --> 00:09:20,500
to work on now before we go to the

214
00:09:18,309 --> 00:09:21,909
indirect light transport the first one

215
00:09:20,500 --> 00:09:24,009
is this is this is the flood feeling

216
00:09:21,909 --> 00:09:25,389
part that is talking about here and what

217
00:09:24,009 --> 00:09:27,009
the flood feeling part is designed to do

218
00:09:25,389 --> 00:09:30,250
is to make our interpolation work

219
00:09:27,009 --> 00:09:31,778
properly so what happens with whenever

220
00:09:30,250 --> 00:09:34,208
you're doing linear interpolation is

221
00:09:31,778 --> 00:09:36,549
when you get towards edges where things

222
00:09:34,208 --> 00:09:39,129
clamp to 0 so for example here's our

223
00:09:36,549 --> 00:09:39,370
shadowing and this is what I'm talking

224
00:09:39,129 --> 00:09:42,220
about

225
00:09:39,370 --> 00:09:44,169
you will get a stair step pattern here

226
00:09:42,220 --> 00:09:46,120
and the reason that you get a stair step

227
00:09:44,169 --> 00:09:48,819
pattern there is just because when

228
00:09:46,120 --> 00:09:53,169
something goes to 0 the interpolation

229
00:09:48,820 --> 00:09:55,390
around it doesn't actually produce any

230
00:09:53,169 --> 00:09:58,328
information about what happens in the

231
00:09:55,389 --> 00:10:00,069
darker region of it now this looks

232
00:09:58,328 --> 00:10:01,989
erroneous to me so I think we've got

233
00:10:00,070 --> 00:10:03,399
another problem going on there probably

234
00:10:01,990 --> 00:10:05,589
in the shader that has to do with maybe

235
00:10:03,399 --> 00:10:10,570
light source clamping or something like

236
00:10:05,589 --> 00:10:14,410
this and it probably it could actually

237
00:10:10,570 --> 00:10:16,870
be to do with the normals as well but

238
00:10:14,409 --> 00:10:19,870
the point is anything in that area that

239
00:10:16,870 --> 00:10:22,028
doesn't have information once you hit

240
00:10:19,870 --> 00:10:23,589
sort of the cutoff point where it gets

241
00:10:22,028 --> 00:10:25,539
towards zero

242
00:10:23,589 --> 00:10:26,890
you just get a flat line and what we

243
00:10:25,539 --> 00:10:28,949
want to do is we want to make sure that

244
00:10:26,889 --> 00:10:34,629
we fill in information in that region

245
00:10:28,950 --> 00:10:36,640
that will allow us to you know anytime

246
00:10:34,629 --> 00:10:38,860
we see like literally there being

247
00:10:36,639 --> 00:10:40,240
nothing there we want to fill in some

248
00:10:38,860 --> 00:10:42,610
information that will provide good

249
00:10:40,240 --> 00:10:46,000
interpolation based on what the nearby

250
00:10:42,610 --> 00:10:49,120
values actually are right and we can do

251
00:10:46,000 --> 00:10:50,589
that by sampling a wider region now you

252
00:10:49,120 --> 00:10:52,419
might ask why not do that in the shader

253
00:10:50,589 --> 00:10:53,949
why not just sample a really wide region

254
00:10:52,419 --> 00:10:55,899
and use that to reconstruct the light in

255
00:10:53,948 --> 00:10:58,719
the area and the answer is because our

256
00:10:55,899 --> 00:11:00,639
shader is very time intensive right it

257
00:10:58,720 --> 00:11:03,070
gets run for every pixel on the screen

258
00:11:00,639 --> 00:11:04,929
because we do per-pixel lighting so the

259
00:11:03,070 --> 00:11:06,490
last thing we want to do oh and it's a

260
00:11:04,929 --> 00:11:08,620
little it's even worse than that right

261
00:11:06,490 --> 00:11:09,970
for transparent or around the edge

262
00:11:08,620 --> 00:11:11,860
of things we actually run the shader

263
00:11:09,970 --> 00:11:13,540
twice once for the thing inside it

264
00:11:11,860 --> 00:11:14,649
what's the thing behind it and once for

265
00:11:13,539 --> 00:11:16,689
the thing where it is so that we can

266
00:11:14,649 --> 00:11:19,299
blend them together so it's it's even

267
00:11:16,690 --> 00:11:21,640
worse if you will then every pixel on

268
00:11:19,299 --> 00:11:25,509
the screen right it's actually more than

269
00:11:21,639 --> 00:11:27,909
every pixel on the screen and so what we

270
00:11:25,509 --> 00:11:31,179
need to be able to do is we need to have

271
00:11:27,909 --> 00:11:34,269
some way of producing something that can

272
00:11:31,179 --> 00:11:37,989
still be fast at that time and then when

273
00:11:34,269 --> 00:11:40,659
we when we hand the fast version off

274
00:11:37,990 --> 00:11:42,399
we've pre ensured that doing the fast

275
00:11:40,659 --> 00:11:44,139
interpolation does the right thing and

276
00:11:42,399 --> 00:11:46,329
so that's why I want to do it in this

277
00:11:44,139 --> 00:11:48,490
order where instead of forcing the pixel

278
00:11:46,330 --> 00:11:51,009
shader to do a large sample of multiple

279
00:11:48,490 --> 00:11:53,620
voxels and reconstruct them what I want

280
00:11:51,009 --> 00:11:55,960
to do is just do a filter pass over the

281
00:11:53,620 --> 00:12:00,310
voxel so that the voxel that we hand to

282
00:11:55,960 --> 00:12:01,450
the subsystem is just correct right so

283
00:12:00,309 --> 00:12:04,509
there's a lot of ways we could do this

284
00:12:01,450 --> 00:12:06,670
but that's the basic idea now what I

285
00:12:04,509 --> 00:12:09,309
want to think about is where is the most

286
00:12:06,669 --> 00:12:11,889
appropriate place for this to occur and

287
00:12:09,309 --> 00:12:14,259
that's a pretty tricky question because

288
00:12:11,889 --> 00:12:15,699
there's actually two logical places for

289
00:12:14,259 --> 00:12:18,309
it and I'm not sure which one of them is

290
00:12:15,700 --> 00:12:20,080
better one way to do it would be that

291
00:12:18,309 --> 00:12:23,289
when we hand it off to the graphics card

292
00:12:20,080 --> 00:12:25,810
we smooth it right and we could even

293
00:12:23,289 --> 00:12:29,469
smooth it using the graphics card if we

294
00:12:25,809 --> 00:12:31,479
want to right and that may be a very

295
00:12:29,470 --> 00:12:33,240
smart thing to do because graphics cards

296
00:12:31,480 --> 00:12:36,009
are very fast at doing things like

297
00:12:33,240 --> 00:12:37,330
averaging you know one texture into

298
00:12:36,009 --> 00:12:39,039
another texture or something right

299
00:12:37,330 --> 00:12:43,570
they're set up to do that kind of

300
00:12:39,039 --> 00:12:47,829
collection but what I don't know is

301
00:12:43,570 --> 00:12:50,140
whether or not we want to have the sort

302
00:12:47,830 --> 00:12:52,690
of for lack of a better term the fill in

303
00:12:50,139 --> 00:12:54,460
the the the values that we're going to

304
00:12:52,690 --> 00:12:55,870
be adding in around the border that

305
00:12:54,460 --> 00:12:59,560
aren't really there but that we've

306
00:12:55,870 --> 00:13:01,090
created just for interpolation what I

307
00:12:59,559 --> 00:13:05,019
don't know is whether we want those to

308
00:13:01,090 --> 00:13:08,290
persist over time and so what I don't

309
00:13:05,019 --> 00:13:10,269
know is when we create so you know let's

310
00:13:08,289 --> 00:13:13,689
say we write exactly what I'm talking

311
00:13:10,269 --> 00:13:15,340
about and we go ahead and you know in in

312
00:13:13,690 --> 00:13:18,700
this case here like you know we're

313
00:13:15,340 --> 00:13:20,980
hopping there and we want to fill you

314
00:13:18,700 --> 00:13:22,610
know these areas all get filled in with

315
00:13:20,980 --> 00:13:26,570
approximate values

316
00:13:22,610 --> 00:13:28,909
right what I don't know is what should

317
00:13:26,570 --> 00:13:32,000
we do with those approximate values

318
00:13:28,909 --> 00:13:34,639
should they only be used for this frames

319
00:13:32,000 --> 00:13:38,450
reconstruction and they should not be

320
00:13:34,639 --> 00:13:40,338
considered during the next frame so each

321
00:13:38,450 --> 00:13:42,950
frame gets its own reconstructed version

322
00:13:40,339 --> 00:13:45,440
basically is that the sensible thing to

323
00:13:42,950 --> 00:13:47,839
do or is the sensible thing to do that

324
00:13:45,440 --> 00:13:51,079
they get filled in in the persistent

325
00:13:47,839 --> 00:13:54,470
version so that they are constantly sort

326
00:13:51,078 --> 00:13:59,750
of being updated as part of the entire

327
00:13:54,470 --> 00:14:03,259
system right and my thinking might my

328
00:13:59,750 --> 00:14:04,578
first inclination because I don't know

329
00:14:03,259 --> 00:14:09,078
that I really want to have to test both

330
00:14:04,578 --> 00:14:12,078
but my first inclination is maybe we do

331
00:14:09,078 --> 00:14:14,120
it well maybe we can try to do it in a

332
00:14:12,078 --> 00:14:18,019
way that lets us test it for both right

333
00:14:14,120 --> 00:14:21,019
to see which one we want we could write

334
00:14:18,019 --> 00:14:23,929
it so that it just works over a generic

335
00:14:21,019 --> 00:14:25,220
sort of array implementation and then we

336
00:14:23,929 --> 00:14:27,649
could call it in two different places

337
00:14:25,220 --> 00:14:29,420
and see which one produces preferable

338
00:14:27,649 --> 00:14:31,009
results because I do think one thing

339
00:14:29,419 --> 00:14:34,099
we've done nicely here is this is a

340
00:14:31,009 --> 00:14:37,610
pretty good test case everything looks

341
00:14:34,100 --> 00:14:39,889
great except at the edge right and so

342
00:14:37,610 --> 00:14:41,509
what we can do is hop around and just

343
00:14:39,889 --> 00:14:43,819
aesthetically speaking just make a

344
00:14:41,509 --> 00:14:45,679
judgment call where does this Moo thing

345
00:14:43,820 --> 00:14:47,089
look better does it look better you know

346
00:14:45,679 --> 00:14:49,129
especially like that I mean that's a

347
00:14:47,089 --> 00:14:50,930
really good test case right because

348
00:14:49,129 --> 00:14:52,610
everything looks really nice there in my

349
00:14:50,929 --> 00:14:55,458
opinion except for what happens at the

350
00:14:52,610 --> 00:14:57,980
edges which we expected and know what

351
00:14:55,458 --> 00:14:59,899
the problem is so how do we fix it right

352
00:14:57,980 --> 00:15:02,629
so maybe we can just use the fact that

353
00:14:59,899 --> 00:15:05,208
we've got a nice test case there to sort

354
00:15:02,629 --> 00:15:08,269
of do that reconstruction in a couple

355
00:15:05,208 --> 00:15:09,859
different ways so maybe let's try and do

356
00:15:08,269 --> 00:15:11,328
that we'll see how hard it is for us to

357
00:15:09,860 --> 00:15:13,490
get something that could operate at

358
00:15:11,328 --> 00:15:14,838
either point in the pipeline there maybe

359
00:15:13,490 --> 00:15:17,480
it has to be kind of slow but that's

360
00:15:14,839 --> 00:15:20,300
okay cuz only runs once over the voxel

361
00:15:17,480 --> 00:15:23,000
and and we try to make something that

362
00:15:20,299 --> 00:15:24,588
will work in either case so let's go

363
00:15:23,000 --> 00:15:26,659
into the lighting system and see what

364
00:15:24,589 --> 00:15:29,120
that would entail and so remember we've

365
00:15:26,659 --> 00:15:32,689
got two systems here you know one is we

366
00:15:29,120 --> 00:15:34,429
have this light voxel cell here and this

367
00:15:32,690 --> 00:15:36,529
is the giant voxel that's got everything

368
00:15:34,429 --> 00:15:39,019
in it and we could certainly run

369
00:15:36,528 --> 00:15:42,408
over that and anytime and then we have

370
00:15:39,019 --> 00:15:44,269
another situation here where we've got

371
00:15:42,408 --> 00:15:47,658
the the point where we actually output

372
00:15:44,269 --> 00:15:50,619
that so we take that that information

373
00:15:47,658 --> 00:15:53,119
the cells there and we push those down

374
00:15:50,619 --> 00:15:56,869
to the graphics card and that's that's

375
00:15:53,119 --> 00:15:58,519
this right here and so this light voxel

376
00:15:56,869 --> 00:16:02,178
and light voxel see that we're looking

377
00:15:58,519 --> 00:16:04,698
at here we could very easily say look we

378
00:16:02,178 --> 00:16:06,828
can smooth on this or we can smooth on

379
00:16:04,698 --> 00:16:09,798
this and we can see which one of those

380
00:16:06,828 --> 00:16:12,438
produces a more pleasant result and

381
00:16:09,798 --> 00:16:14,718
again this one this one right here is

382
00:16:12,438 --> 00:16:17,088
the one that will persist so if we when

383
00:16:14,719 --> 00:16:18,979
we smooth this one out it will go every

384
00:16:17,089 --> 00:16:21,319
frame it will have knock-on effects for

385
00:16:18,979 --> 00:16:23,299
future frames if we smooth this one out

386
00:16:21,318 --> 00:16:25,128
it will not have any effects on the next

387
00:16:23,298 --> 00:16:26,478
frame it'll only have the effect on just

388
00:16:25,129 --> 00:16:27,829
the immediate frame or rendering because

389
00:16:26,479 --> 00:16:31,788
only affecting the thing that we're

390
00:16:27,828 --> 00:16:35,528
pushing to the graphics card right so

391
00:16:31,788 --> 00:16:39,859
that seems reasonable to me as an option

392
00:16:35,528 --> 00:16:41,509
now the way we want to do this is going

393
00:16:39,859 --> 00:16:42,999
to be kind of a little bit odd and we

394
00:16:41,509 --> 00:16:45,129
haven't really talked about anything

395
00:16:42,999 --> 00:16:47,808
like this before

396
00:16:45,129 --> 00:16:49,759
but basically what we want to do is I

397
00:16:47,808 --> 00:16:52,068
think we want to pretty much leave

398
00:16:49,759 --> 00:16:53,778
lighting values alone when we have them

399
00:16:52,068 --> 00:16:55,458
so what we're really talking about here

400
00:16:53,778 --> 00:16:57,078
is filling in lighting values where we

401
00:16:55,458 --> 00:16:59,568
don't know anything right

402
00:16:57,078 --> 00:17:01,158
so for places in the lighting where we

403
00:16:59,568 --> 00:17:04,490
really just don't have any idea what's

404
00:17:01,158 --> 00:17:07,939
going on we want to fill in those and

405
00:17:04,490 --> 00:17:09,788
only those if you will now if you take a

406
00:17:07,939 --> 00:17:12,288
look at what's going on here you can see

407
00:17:09,788 --> 00:17:13,669
the easiest place to put this and this

408
00:17:12,288 --> 00:17:15,888
is maybe the place that we'll start with

409
00:17:13,669 --> 00:17:21,110
it is in the part that gets blended over

410
00:17:15,888 --> 00:17:22,818
time yeah I'd really rather start with

411
00:17:21,109 --> 00:17:25,519
the second one so so maybe we won't do

412
00:17:22,818 --> 00:17:28,068
what I just said but anyway the point is

413
00:17:25,519 --> 00:17:30,740
in here right we're producing values for

414
00:17:28,068 --> 00:17:32,418
these cells based on these accumulator

415
00:17:30,740 --> 00:17:34,368
pieces of accumulator information that

416
00:17:32,419 --> 00:17:35,538
we got here right you know what and I

417
00:17:34,368 --> 00:17:37,819
should mention there's really three

418
00:17:35,538 --> 00:17:40,750
places even we could also smooth it back

419
00:17:37,819 --> 00:17:40,750
in here right

420
00:17:43,298 --> 00:17:47,950
the

421
00:17:44,680 --> 00:17:49,930
wait line what we could do is say if on

422
00:17:47,950 --> 00:17:51,309
a particular frame we got note weight

423
00:17:49,930 --> 00:17:53,980
added in a particular area we could

424
00:17:51,309 --> 00:17:56,319
smooth that so we could smooth only the

425
00:17:53,980 --> 00:17:58,029
contribution side as well so it's really

426
00:17:56,319 --> 00:17:59,710
three places we could smooth I don't

427
00:17:58,029 --> 00:18:02,259
have really any idea why we would only

428
00:17:59,710 --> 00:18:07,690
smooth that one but or why that would

429
00:18:02,259 --> 00:18:09,730
make a difference but we could so anyway

430
00:18:07,690 --> 00:18:12,759
assuming that in here we see we could

431
00:18:09,730 --> 00:18:15,309
use the light C or the light n either

432
00:18:12,759 --> 00:18:16,869
one but what we can do is look at those

433
00:18:15,309 --> 00:18:18,009
values and if they're all zero we know

434
00:18:16,869 --> 00:18:20,169
we didn't get any information in that

435
00:18:18,009 --> 00:18:21,670
area right and if we didn't get any

436
00:18:20,170 --> 00:18:26,470
information in that area we can then do

437
00:18:21,670 --> 00:18:28,480
a collection of the things around it to

438
00:18:26,470 --> 00:18:31,509
basically figure out what it might be

439
00:18:28,480 --> 00:18:34,930
and the size of that window is somewhat

440
00:18:31,509 --> 00:18:37,450
arbitrary but maybe I'll say that right

441
00:18:34,930 --> 00:18:39,269
now it'll be sort of a three by three or

442
00:18:37,450 --> 00:18:41,019
something right three by three by three

443
00:18:39,269 --> 00:18:43,629
something like that because that's what

444
00:18:41,019 --> 00:18:45,519
we were sort of using before right and a

445
00:18:43,630 --> 00:18:47,710
three by three by three is really just

446
00:18:45,519 --> 00:18:51,339
getting one sample in either direction

447
00:18:47,710 --> 00:18:54,370
right and what we want to do is probably

448
00:18:51,339 --> 00:18:57,730
take a look at what the gradient is in

449
00:18:54,369 --> 00:18:59,679
that area now as I'm saying that we

450
00:18:57,730 --> 00:19:01,299
probably actually need a five by five by

451
00:18:59,680 --> 00:19:04,810
five which is you know pretty pretty

452
00:19:01,299 --> 00:19:07,809
nasty but we can do this separable I

453
00:19:04,809 --> 00:19:13,450
think and then maybe that's not such a

454
00:19:07,809 --> 00:19:14,710
bad situation yeah anyway so if you

455
00:19:13,450 --> 00:19:16,750
think about what we have to do here all

456
00:19:14,710 --> 00:19:18,490
I'm really saying is look we need to be

457
00:19:16,750 --> 00:19:20,619
able to look at the the region around

458
00:19:18,490 --> 00:19:22,509
this point reconstruct what we think a

459
00:19:20,619 --> 00:19:25,539
value would be based on derivatives of

460
00:19:22,509 --> 00:19:28,539
neighboring values and you know produce

461
00:19:25,539 --> 00:19:31,329
that right so how would we do that

462
00:19:28,539 --> 00:19:34,180
I'm gonna go ahead and write this for

463
00:19:31,329 --> 00:19:37,569
maybe the the light voxel and see stuff

464
00:19:34,180 --> 00:19:41,170
here so this bit right here where we're

465
00:19:37,569 --> 00:19:43,419
doing this L index so you can see the L

466
00:19:41,170 --> 00:19:46,210
index here I'm gonna do it on just this

467
00:19:43,420 --> 00:19:47,950
part so before we send the thing down we

468
00:19:46,210 --> 00:19:52,930
will smooth it so basically right here

469
00:19:47,950 --> 00:19:54,180
you know or maybe right here if you will

470
00:19:52,930 --> 00:19:57,460
[Music]

471
00:19:54,180 --> 00:19:58,450
mm well no okay sorry so right after we

472
00:19:57,460 --> 00:20:00,490
do this I will

473
00:19:58,450 --> 00:20:01,990
so I'll smooth it right here so what

474
00:20:00,490 --> 00:20:04,470
we're gonna do is a second pass over

475
00:20:01,990 --> 00:20:08,859
this we're gonna do the pass this way

476
00:20:04,470 --> 00:20:12,460
but what you can see about this as as we

477
00:20:08,859 --> 00:20:14,469
go right what you can see about this is

478
00:20:12,460 --> 00:20:16,480
if we were to do it this way we would

479
00:20:14,470 --> 00:20:19,269
sort of have this issue that we have to

480
00:20:16,480 --> 00:20:21,009
look at a five by five by five and so

481
00:20:19,269 --> 00:20:24,069
what I'd rather do is break that down

482
00:20:21,009 --> 00:20:27,430
into filters that can operate sort of in

483
00:20:24,069 --> 00:20:28,869
different directions right and one of

484
00:20:27,430 --> 00:20:31,080
the things that we talk about this is

485
00:20:28,869 --> 00:20:33,849
this is very common in filter design

486
00:20:31,079 --> 00:20:36,449
I'll show you what I mean on the on the

487
00:20:33,849 --> 00:20:36,449
black board here

488
00:20:47,599 --> 00:20:53,629
is suppose I want to design some kind of

489
00:20:51,410 --> 00:20:55,610
a filter that's going to operate over

490
00:20:53,630 --> 00:20:59,150
some sample data regular space like we

491
00:20:55,609 --> 00:21:00,949
have and so what am I trying to do right

492
00:20:59,150 --> 00:21:02,780
well what I'm trying to do is say all

493
00:21:00,950 --> 00:21:05,360
right let's suppose we took like a 1d

494
00:21:02,779 --> 00:21:07,569
cross-section esteem and what I see

495
00:21:05,359 --> 00:21:14,599
happening is like this sort of thing

496
00:21:07,569 --> 00:21:16,909
right right

497
00:21:14,599 --> 00:21:19,129
and so there's a couple different ways I

498
00:21:16,910 --> 00:21:21,680
could do this if I didn't if I just did

499
00:21:19,130 --> 00:21:23,600
a 3x3 one thing I could do is say well

500
00:21:21,680 --> 00:21:27,590
just take whatever this value is and I

501
00:21:23,599 --> 00:21:29,240
know that I'm at zero right and so just

502
00:21:27,589 --> 00:21:31,279
take whatever this value is and the

503
00:21:29,240 --> 00:21:33,940
Delta down to me and continue it over

504
00:21:31,279 --> 00:21:36,559
here or something right yeah I'm saying

505
00:21:33,940 --> 00:21:38,480
uh the problem with something like that

506
00:21:36,559 --> 00:21:39,409
is we're trying to solve the problem at

507
00:21:38,480 --> 00:21:42,500
us

508
00:21:39,410 --> 00:21:44,390
so the reason I say we need a 5x5 right

509
00:21:42,500 --> 00:21:47,059
is what I really want to do is say well

510
00:21:44,390 --> 00:21:49,460
I if I'm at zero I don't really know

511
00:21:47,059 --> 00:21:53,059
what the value should be so look at 2

512
00:21:49,460 --> 00:21:54,759
behind me right see what their Delta is

513
00:21:53,059 --> 00:21:58,940
like maybe their Delta looked like that

514
00:21:54,759 --> 00:22:02,240
right see what their Delta is and assign

515
00:21:58,940 --> 00:22:05,390
me that Delta again so that it like

516
00:22:02,240 --> 00:22:09,289
continues to decay in roughly that

517
00:22:05,390 --> 00:22:12,020
pattern right so that's why I say you

518
00:22:09,289 --> 00:22:13,940
know five wide seems like the minimum we

519
00:22:12,019 --> 00:22:15,170
could do I don't think we could only do

520
00:22:13,940 --> 00:22:16,820
three I don't think that would really

521
00:22:15,170 --> 00:22:19,150
work I mean maybe it would but I doubt

522
00:22:16,819 --> 00:22:19,149
it

523
00:22:19,390 --> 00:22:24,440
so I think we want to do something like

524
00:22:21,349 --> 00:22:28,909
five wide and I want to do that you know

525
00:22:24,440 --> 00:22:31,610
that gradient there now we don't have a

526
00:22:28,910 --> 00:22:33,410
1d problem we have a 3d problem that

527
00:22:31,609 --> 00:22:35,259
means that there are three such lines

528
00:22:33,410 --> 00:22:39,980
passing through this point at least

529
00:22:35,259 --> 00:22:42,349
right arguably more because we could

530
00:22:39,980 --> 00:22:44,769
look at just the 2d version of the

531
00:22:42,349 --> 00:22:44,769
problem

532
00:22:51,378 --> 00:22:55,888
right here's the 2d version of the

533
00:22:53,548 --> 00:22:57,388
problem I was talking about the result

534
00:22:55,888 --> 00:22:59,128
that happens when we look at these

535
00:22:57,388 --> 00:23:01,168
points right maybe it looks like that

536
00:22:59,128 --> 00:23:03,928
but there's also what it looks like at

537
00:23:01,169 --> 00:23:08,460
these points right and these points and

538
00:23:03,929 --> 00:23:10,590
those and those right and so what you

539
00:23:08,460 --> 00:23:12,869
would want to do in 2d for example is

540
00:23:10,589 --> 00:23:15,509
look at an actual five by five or twenty

541
00:23:12,868 --> 00:23:17,939
five wide grid right and we would want

542
00:23:15,509 --> 00:23:19,710
to assign we would want to use all of

543
00:23:17,940 --> 00:23:21,389
these sample points and weight them

544
00:23:19,710 --> 00:23:26,038
together to produce the result that we

545
00:23:21,388 --> 00:23:28,228
actually wanted right and then when you

546
00:23:26,038 --> 00:23:31,608
get to a cube this is gonna be five more

547
00:23:28,229 --> 00:23:34,080
right so it'd be also deep five deep and

548
00:23:31,608 --> 00:23:36,028
you can see how this multiplies out to

549
00:23:34,079 --> 00:23:39,689
just a really unfortunate value right

550
00:23:36,028 --> 00:23:43,710
there's no way we want to do 25 times 5

551
00:23:39,690 --> 00:23:46,950
right or 125 samples for everything we

552
00:23:43,710 --> 00:23:49,348
fill in that's just a terrible thing but

553
00:23:46,950 --> 00:23:52,229
the good news is if all we were going to

554
00:23:49,348 --> 00:23:55,618
do is sort of like combine these values

555
00:23:52,229 --> 00:23:58,109
together in a fairly direct way we may

556
00:23:55,618 --> 00:24:00,658
just be able to do passes where we do

557
00:23:58,108 --> 00:24:03,689
three different passes of five samples

558
00:24:00,659 --> 00:24:07,409
each doing each on a line so we do like

559
00:24:03,690 --> 00:24:10,919
passes that way pass that way and pass

560
00:24:07,409 --> 00:24:13,710
this way right and that's three times

561
00:24:10,919 --> 00:24:16,409
five instead of five times five times

562
00:24:13,710 --> 00:24:19,619
five right

563
00:24:16,409 --> 00:24:22,979
and what that gives us is a three versus

564
00:24:19,618 --> 00:24:25,439
twenty five power right which is

565
00:24:22,979 --> 00:24:28,048
dramatically faster it's you know

566
00:24:25,440 --> 00:24:30,330
basically like eight times faster right

567
00:24:28,048 --> 00:24:34,888
or eight times less sample so we have to

568
00:24:30,329 --> 00:24:36,838
take and a factor of eight is a huge

569
00:24:34,888 --> 00:24:41,398
factor right so when you're dealing with

570
00:24:36,838 --> 00:24:47,579
3d problems breaking things down into a

571
00:24:41,398 --> 00:24:50,278
series of 1d passes basically can be a

572
00:24:47,579 --> 00:24:54,778
huge win for you because it means that

573
00:24:50,278 --> 00:24:57,509
you do not actually have to you don't

574
00:24:54,778 --> 00:24:59,808
actually have to compute nearly as much

575
00:24:57,509 --> 00:24:59,808
stuff

576
00:25:02,819 --> 00:25:10,509
now hmm it's worth noting that there are

577
00:25:06,609 --> 00:25:15,399
cash implications here how big is our

578
00:25:10,509 --> 00:25:16,960
light large voxel right well I believe I

579
00:25:15,400 --> 00:25:18,640
don't actually remember is the

580
00:25:16,960 --> 00:25:24,690
embarrassing part I don't remember what

581
00:25:18,640 --> 00:25:24,690
we set it to its light look up voxel dim

582
00:25:26,700 --> 00:25:31,360
there it is

583
00:25:28,000 --> 00:25:34,500
so it was that plus one so I guess it's

584
00:25:31,359 --> 00:25:38,199
2 to the 6th or 64 that seemed right

585
00:25:34,500 --> 00:25:40,960
it's looks like it's 32 by 32 by 32 so

586
00:25:38,200 --> 00:25:42,690
it'd be 64 by 64 by 64 for our larger

587
00:25:40,960 --> 00:25:45,970
one is that right

588
00:25:42,690 --> 00:25:49,570
Yeah right that's what it looks like to

589
00:25:45,970 --> 00:25:54,130
me um so if we go ahead and imagine what

590
00:25:49,569 --> 00:25:55,599
would happen if we if we figure out how

591
00:25:54,130 --> 00:25:56,710
much memory footprint that would take

592
00:25:55,599 --> 00:26:01,539
right

593
00:25:56,710 --> 00:26:05,920
a 64 by 64 by 64 is already really large

594
00:26:01,539 --> 00:26:07,210
right it doesn't fit in the cache and so

595
00:26:05,920 --> 00:26:09,370
one of the problems that we would have

596
00:26:07,210 --> 00:26:14,529
if we choose to do that the 32 by 32 by

597
00:26:09,369 --> 00:26:17,259
32 does right it doesn't fit in the l1

598
00:26:14,529 --> 00:26:19,899
cache really but it would probably fit

599
00:26:17,259 --> 00:26:23,230
in the l2 because it's 32 K which is the

600
00:26:19,900 --> 00:26:27,130
size the l1 cache number of entries but

601
00:26:23,230 --> 00:26:30,370
each entry is you know large it's

602
00:26:27,130 --> 00:26:32,590
several floats large right don't

603
00:26:30,369 --> 00:26:43,869
actually remember what these look like

604
00:26:32,589 --> 00:26:49,359
but yeah so it's effectively 6 times 4

605
00:26:43,869 --> 00:26:54,429
or 24 right bytes long so if you imagine

606
00:26:49,359 --> 00:26:56,799
this times 24 even that doesn't fit in

607
00:26:54,430 --> 00:26:58,120
the l2 so even the small one doesn't

608
00:26:56,799 --> 00:26:59,919
really fit in the l2 I think the l2 is

609
00:26:58,119 --> 00:27:01,479
like 2 to 6 K maybe it's not let me see

610
00:26:59,920 --> 00:27:04,380
what the what's the l2 these days I

611
00:27:01,480 --> 00:27:04,380
never remember this stuff

612
00:27:10,430 --> 00:27:23,400
it'll fit in the l2 on a Xeon I'm sure

613
00:27:13,640 --> 00:27:27,420
just maybe not on my machine so here's

614
00:27:23,400 --> 00:27:32,340
the info page for this chip and if you

615
00:27:27,420 --> 00:27:36,509
look let's see do you have any cache

616
00:27:32,339 --> 00:27:41,789
information for me here dudududu there's

617
00:27:36,509 --> 00:28:00,920
the core information here it is cache

618
00:27:41,789 --> 00:28:04,769
organization Oh what that's not really

619
00:28:00,920 --> 00:28:10,050
that seems much larger than I was

620
00:28:04,769 --> 00:28:12,660
expecting the l1 data cache to be oh oh

621
00:28:10,049 --> 00:28:14,519
oh it's just deciduous multiplying out

622
00:28:12,660 --> 00:28:17,970
per core that's fine

623
00:28:14,519 --> 00:28:20,308
so yes see it's 32 K and 2 to 6 K so

624
00:28:17,970 --> 00:28:23,730
exactly what I thought it was there just

625
00:28:20,308 --> 00:28:26,549
multiplying it by this this value is the

626
00:28:23,730 --> 00:28:28,829
total amount of cash like if you take

627
00:28:26,549 --> 00:28:31,710
the fact that there are 4 cores on the

628
00:28:28,829 --> 00:28:34,799
chip and each one gets one so that's a

629
00:28:31,710 --> 00:28:37,410
little misleading if you look at these

630
00:28:34,799 --> 00:28:41,519
numbers we only care about the amount

631
00:28:37,410 --> 00:28:44,040
per core although I suppose in theory we

632
00:28:41,519 --> 00:28:46,379
could break this up across multiple

633
00:28:44,039 --> 00:28:49,259
cores and then not have to worry cuz

634
00:28:46,380 --> 00:28:51,090
each one would only touch 32k of it but

635
00:28:49,259 --> 00:28:52,200
well no it wouldn't cause that's to do

636
00:28:51,089 --> 00:28:56,279
if we were doing the passes in that

637
00:28:52,200 --> 00:28:58,679
order um so the point I'm trying to get

638
00:28:56,279 --> 00:29:01,849
to with that is just that if you assume

639
00:28:58,679 --> 00:29:04,170
you're gonna miss the cache every time

640
00:29:01,849 --> 00:29:06,149
then it becomes also a little bit of a

641
00:29:04,170 --> 00:29:08,100
trade-off it's hard to say you can see

642
00:29:06,150 --> 00:29:11,970
that we will fit comfortably within the

643
00:29:08,099 --> 00:29:13,699
l3 that part's not not an issue we have

644
00:29:11,970 --> 00:29:17,370
the the

645
00:29:13,700 --> 00:29:18,840
two megabyte size on that so all of us

646
00:29:17,369 --> 00:29:22,229
all the things we just talked about will

647
00:29:18,839 --> 00:29:25,019
fit inside the l3 no problem the only

648
00:29:22,230 --> 00:29:28,829
issues l3 is like very slow like l3 is

649
00:29:25,019 --> 00:29:33,750
much much slower l2 is usually fast

650
00:29:28,829 --> 00:29:38,789
enough for you to not care it can serve

651
00:29:33,750 --> 00:29:42,569
you a lot of data the l3 is a pretty big

652
00:29:38,789 --> 00:29:43,950
jump down actually so it's a little bit

653
00:29:42,569 --> 00:29:45,750
tough to think about what we would

654
00:29:43,950 --> 00:29:47,190
necessarily want to do here in terms of

655
00:29:45,750 --> 00:29:48,720
going through and doing the smoothing

656
00:29:47,190 --> 00:29:52,500
because it does mean that we're gonna be

657
00:29:48,720 --> 00:29:54,089
having a bit of an issue with moving

658
00:29:52,500 --> 00:29:58,410
through all of that memory again and

659
00:29:54,089 --> 00:30:02,699
that's not fabulous but you know I don't

660
00:29:58,410 --> 00:30:04,860
really know what to make of that I'm

661
00:30:02,700 --> 00:30:08,279
trying to think if there's some kind of

662
00:30:04,859 --> 00:30:10,019
a way I could do this that would not

663
00:30:08,279 --> 00:30:13,259
incur those kind of penalties I don't

664
00:30:10,019 --> 00:30:15,329
think there really is the moment so one

665
00:30:13,259 --> 00:30:19,289
thing that I guess is maybe a slight

666
00:30:15,329 --> 00:30:21,839
saving grace here is that although we

667
00:30:19,289 --> 00:30:25,710
missed the cache a lot we only actually

668
00:30:21,839 --> 00:30:28,589
fill in values that have zeros that are

669
00:30:25,710 --> 00:30:31,579
next to values that don't have zeros so

670
00:30:28,589 --> 00:30:35,909
I suppose one nice thing is we only

671
00:30:31,579 --> 00:30:40,829
actually have to check these values like

672
00:30:35,910 --> 00:30:43,350
once like we only have to kind of mark

673
00:30:40,829 --> 00:30:46,230
them down or something and then we can

674
00:30:43,349 --> 00:30:49,919
maybe yeah I mean maybe okay so so

675
00:30:46,230 --> 00:30:52,170
here's another proposal maybe we don't

676
00:30:49,920 --> 00:30:54,840
do it this way maybe this is too

677
00:30:52,170 --> 00:30:56,370
expensive and this is dumb because of

678
00:30:54,839 --> 00:30:57,119
the cache effects that I don't want that

679
00:30:56,369 --> 00:30:59,279
to happen

680
00:30:57,119 --> 00:31:01,679
so maybe what we do instead is we do

681
00:30:59,279 --> 00:31:03,779
something different and really weird and

682
00:31:01,680 --> 00:31:05,940
that's just what we do on handmade here

683
00:31:03,779 --> 00:31:09,660
oh so it's fine maybe what I do instead

684
00:31:05,940 --> 00:31:11,460
is I say look we're only interested in

685
00:31:09,660 --> 00:31:13,320
values that have no light information

686
00:31:11,460 --> 00:31:15,000
next to values that do have light

687
00:31:13,319 --> 00:31:17,879
information and I kind of know ahead of

688
00:31:15,000 --> 00:31:19,829
time that I want to do a wide filter on

689
00:31:17,880 --> 00:31:23,340
these five by five by five at least

690
00:31:19,829 --> 00:31:26,579
which is extremely expensive right what

691
00:31:23,339 --> 00:31:32,669
if instead we just did one pass through

692
00:31:26,579 --> 00:31:36,500
on three by three by three and all we do

693
00:31:32,670 --> 00:31:39,750
is we mark which ones we're going to do

694
00:31:36,500 --> 00:31:43,650
which we believe because lighting the

695
00:31:39,750 --> 00:31:46,289
light the field light region forms what

696
00:31:43,650 --> 00:31:50,370
is effectively a three dimensional

697
00:31:46,289 --> 00:31:54,869
volume in space right because lights are

698
00:31:50,369 --> 00:31:58,079
volumetric so the lighting for our voxel

699
00:31:54,869 --> 00:32:01,469
is basically a three dimensional blob

700
00:31:58,079 --> 00:32:03,240
right that fills the space we are

701
00:32:01,470 --> 00:32:07,230
talking about the surface area of that

702
00:32:03,240 --> 00:32:10,880
Bob and so while the blob itself and the

703
00:32:07,230 --> 00:32:13,740
voxel is volumetric it's n cubed size

704
00:32:10,880 --> 00:32:15,480
the surface area will only be N squared

705
00:32:13,740 --> 00:32:19,440
size meaning the number of things that

706
00:32:15,480 --> 00:32:23,339
border the edge of that blob should be

707
00:32:19,440 --> 00:32:27,059
significantly less so if I just remember

708
00:32:23,339 --> 00:32:30,539
all of those things as sort of a stack

709
00:32:27,059 --> 00:32:34,109
and then I just process the stack maybe

710
00:32:30,539 --> 00:32:38,009
that will keep me out of the Pudge you

711
00:32:34,109 --> 00:32:41,609
know I don't know right it's a long shot

712
00:32:38,009 --> 00:32:44,730
but who knows it could work so if I just

713
00:32:41,609 --> 00:32:47,669
said like I've got a temporary right

714
00:32:44,730 --> 00:32:51,960
here that I'm going to call like flood

715
00:32:47,670 --> 00:32:54,450
indices or something like this and I

716
00:32:51,960 --> 00:32:56,850
want to be able to record like these

717
00:32:54,450 --> 00:32:59,670
indexes into the voxel and I basically

718
00:32:56,849 --> 00:33:02,909
know and maybe I want to write them as

719
00:32:59,670 --> 00:33:04,440
this maybe I want like the three indices

720
00:33:02,910 --> 00:33:08,160
or something so maybe it looks more like

721
00:33:04,440 --> 00:33:10,500
that I don't know so I'm gonna record my

722
00:33:08,160 --> 00:33:15,660
flood indices here and what I want to do

723
00:33:10,500 --> 00:33:19,140
is I want to have a note that I can

724
00:33:15,660 --> 00:33:21,630
record enough of them so if I have my

725
00:33:19,140 --> 00:33:29,430
light large voxel dim here it's just

726
00:33:21,630 --> 00:33:31,470
like that cubed right all right so this

727
00:33:29,430 --> 00:33:33,539
would track the values and then I would

728
00:33:31,470 --> 00:33:35,640
just have a flood index count we do one

729
00:33:33,539 --> 00:33:37,619
pass over them to see where they are and

730
00:33:35,640 --> 00:33:40,490
the kind of nice thing about this is I

731
00:33:37,619 --> 00:33:46,558
could also do something where I flood

732
00:33:40,490 --> 00:33:48,630
with actual like purple color as a test

733
00:33:46,558 --> 00:33:50,970
to make sure we're finding all of the

734
00:33:48,630 --> 00:33:53,130
places that we want to fill in do you

735
00:33:50,970 --> 00:33:57,509
know what I mean so that seems good to

736
00:33:53,130 --> 00:34:00,240
me I don't know so I'm gonna give this a

737
00:33:57,509 --> 00:34:01,589
shot and see what happens and the other

738
00:34:00,240 --> 00:34:03,990
thing out well you know what else I

739
00:34:01,589 --> 00:34:08,279
could do maybe we do this as a small

740
00:34:03,990 --> 00:34:10,289
voxel so it's even less right so in so

741
00:34:08,280 --> 00:34:12,840
we could actually do it this way where

742
00:34:10,289 --> 00:34:23,190
we take the light look up voxel dim this

743
00:34:12,840 --> 00:34:25,169
thing here one thing I'm also kind of

744
00:34:23,190 --> 00:34:30,599
is what if we just did

745
00:34:25,168 --> 00:34:40,349
oops what if we did a thing where we

746
00:34:30,599 --> 00:34:41,639
could I don't know we think of this just

747
00:34:40,349 --> 00:34:45,019
seems like this is a little easier to

748
00:34:41,639 --> 00:34:47,669
read doesn't it

749
00:34:45,019 --> 00:34:50,460
so if I do something like that I just

750
00:34:47,668 --> 00:34:52,949
know that I can now track like what

751
00:34:50,460 --> 00:34:59,240
elements I think are important here and

752
00:34:52,949 --> 00:34:59,239
maybe this is reasonable I don't know I

753
00:35:06,530 --> 00:35:10,610
mean I guess now that I think about

754
00:35:08,809 --> 00:35:12,529
why would I actually need to build the

755
00:35:10,610 --> 00:35:14,890
indices so I could really just do this

756
00:35:12,530 --> 00:35:17,300
the same way like do the detection first

757
00:35:14,889 --> 00:35:18,379
yeah now I think about that's dumb I

758
00:35:17,300 --> 00:35:20,960
don't even really need to do that

759
00:35:18,380 --> 00:35:22,880
because once I do the detection not it's

760
00:35:20,960 --> 00:35:30,280
free for me to fill it in at that point

761
00:35:22,880 --> 00:35:30,280
right although I suppose I don't want to

762
00:35:31,690 --> 00:35:44,690
yeah I'm just gonna do it without the

763
00:35:42,889 --> 00:35:46,190
indices so I don't really need the

764
00:35:44,690 --> 00:35:48,889
indices I can just do the pass and I can

765
00:35:46,190 --> 00:35:52,849
just do it in place so it's fine

766
00:35:48,889 --> 00:35:54,619
no no worries there just isn't really a

767
00:35:52,849 --> 00:35:55,670
reason to do that I guess so I was

768
00:35:54,619 --> 00:35:57,259
thinking that there would be a reason to

769
00:35:55,670 --> 00:35:59,300
mark them but there isn't so I'm gonna

770
00:35:57,260 --> 00:36:00,890
flood fill those squares with purple

771
00:35:59,300 --> 00:36:03,050
first that's what I'm gonna do

772
00:36:00,889 --> 00:36:05,239
and so in end lighting computation what

773
00:36:03,050 --> 00:36:08,690
I want to do is when we get down here

774
00:36:05,239 --> 00:36:12,199
and we are going to fill all these in

775
00:36:08,690 --> 00:36:13,639
I'm gonna do that pass right here so

776
00:36:12,199 --> 00:36:15,559
this is gonna be my flood fill and

777
00:36:13,639 --> 00:36:17,569
what's gonna happen is for each of these

778
00:36:15,559 --> 00:36:20,029
I'm gonna look and I know ahead of time

779
00:36:17,570 --> 00:36:22,940
right that there's no way for me to

780
00:36:20,030 --> 00:36:25,550
actually fill anything that's too far on

781
00:36:22,940 --> 00:36:28,340
the edge but since if I only go through

782
00:36:25,550 --> 00:36:31,870
the hot dim so like here right if I only

783
00:36:28,340 --> 00:36:38,750
go through the the sort of smaller

784
00:36:31,869 --> 00:36:40,609
region right you can see here we're

785
00:36:38,750 --> 00:36:43,280
doing the light lookups on the voxels

786
00:36:40,610 --> 00:36:46,610
this way so this is the way we look up a

787
00:36:43,280 --> 00:36:49,580
cell that's that's sort of in the wider

788
00:36:46,610 --> 00:36:51,590
region and if I know that I'm only

789
00:36:49,579 --> 00:36:53,809
inside the hot dim then I should be able

790
00:36:51,590 --> 00:36:57,620
to do the entire thing as long as the

791
00:36:53,809 --> 00:37:01,610
hot dim the hot corner is gives me

792
00:36:57,619 --> 00:37:02,960
enough room there and one of the

793
00:37:01,610 --> 00:37:04,849
problems I guess we'll have is right now

794
00:37:02,960 --> 00:37:07,159
we don't guarantee that the hot corner

795
00:37:04,849 --> 00:37:08,809
has enough room I think you can kind of

796
00:37:07,159 --> 00:37:11,089
be right on the edge of it in which case

797
00:37:08,809 --> 00:37:13,750
this would over fetch and be bad so you

798
00:37:11,090 --> 00:37:13,750
know I kind of got a

799
00:37:18,739 --> 00:37:22,909
I kind of got to make sure this would

800
00:37:20,750 --> 00:37:32,570
work what we could do is say all right

801
00:37:22,909 --> 00:37:34,909
you know the hot corner I could check

802
00:37:32,570 --> 00:37:38,330
pretty easily to make sure that the hot

803
00:37:34,909 --> 00:37:42,379
corner is always like at least two in

804
00:37:38,329 --> 00:37:46,690
and then at least two away from the edge

805
00:37:42,380 --> 00:37:55,070
as well which would basically be like

806
00:37:46,690 --> 00:37:59,150
light large voxel dim - light voxel dim

807
00:37:55,070 --> 00:38:10,570
or what did we call that like look up

808
00:37:59,150 --> 00:38:12,920
voxel dim so something like this and

809
00:38:10,570 --> 00:38:14,330
this is not doing anything it's just

810
00:38:12,920 --> 00:38:18,769
making sure that that never actually

811
00:38:14,329 --> 00:38:21,858
occurs right and so if I did something

812
00:38:18,769 --> 00:38:25,088
like that and just we we will hit that

813
00:38:21,858 --> 00:38:29,690
assertion my assumption is we will

814
00:38:25,088 --> 00:38:31,519
sometimes because right now we don't do

815
00:38:29,690 --> 00:38:35,088
a very good job of placing those two

816
00:38:31,519 --> 00:38:36,679
things we need to place them better so

817
00:38:35,088 --> 00:38:40,400
I'm assuming we will hit that assertion

818
00:38:36,679 --> 00:38:42,980
when we go down like - I feel like like

819
00:38:40,400 --> 00:38:45,950
right here or something

820
00:38:42,980 --> 00:38:47,480
we hit something like that it strange to

821
00:38:45,949 --> 00:38:49,909
me that we didn't so maybe it always

822
00:38:47,480 --> 00:38:51,679
kind of just barely skates by but we

823
00:38:49,909 --> 00:38:53,629
will need to do some work I think to

824
00:38:51,679 --> 00:38:58,250
avoid that and that's work we want to do

825
00:38:53,630 --> 00:39:03,769
anyway it was it was the to do that was

826
00:38:58,250 --> 00:39:05,420
right here this right anyway so if I

827
00:39:03,769 --> 00:39:07,639
want to go ahead here and try to make

828
00:39:05,420 --> 00:39:11,358
this work better than the first thing I

829
00:39:07,639 --> 00:39:14,029
need to do to do my flood-fill here is

830
00:39:11,358 --> 00:39:16,639
just detect whether the fill needs to

831
00:39:14,030 --> 00:39:19,700
occur right and so what I want to do

832
00:39:16,639 --> 00:39:21,319
there is look at sort of a DX region so

833
00:39:19,699 --> 00:39:24,230
like a region around this particular

834
00:39:21,320 --> 00:39:26,599
thing so it would be something like this

835
00:39:24,230 --> 00:39:28,280
and I guess I'm kind of hoping that

836
00:39:26,599 --> 00:39:29,940
these get unrolled because I don't

837
00:39:28,280 --> 00:39:33,000
really want them to

838
00:39:29,940 --> 00:39:35,909
actually have to run but something like

839
00:39:33,000 --> 00:39:49,250
this so that we could look in a wider

840
00:39:35,909 --> 00:39:49,250
region so it literally be just like this

841
00:39:49,489 --> 00:40:04,649
although I guess I'd probably want this

842
00:39:51,840 --> 00:40:07,500
the opposite way around like that so if

843
00:40:04,650 --> 00:40:08,849
we were to look around here basically

844
00:40:07,500 --> 00:40:13,949
what we want to do is say all right we

845
00:40:08,849 --> 00:40:20,789
have our cell and then we have like a

846
00:40:13,949 --> 00:40:27,599
neighbor cell right and this is just

847
00:40:20,789 --> 00:40:30,719
going to be sort of looking at the

848
00:40:27,599 --> 00:40:38,750
surrounding region what we want to do is

849
00:40:30,719 --> 00:40:42,049
say if this cell doesn't have a value in

850
00:40:38,750 --> 00:40:47,469
and the neighbor cell does then we go

851
00:40:42,050 --> 00:40:47,470
into sort of the wider berth right

852
00:40:52,989 --> 00:41:00,649
something like that like if this has

853
00:40:56,389 --> 00:41:03,920
light and or sorry if this doesn't have

854
00:41:00,650 --> 00:41:11,450
light we do the search to say if this

855
00:41:03,920 --> 00:41:13,340
has light then we're good right and

856
00:41:11,449 --> 00:41:14,779
again this is not very efficient and

857
00:41:13,340 --> 00:41:16,460
we're not going to make it very

858
00:41:14,780 --> 00:41:19,010
efficient until we verify that it

859
00:41:16,460 --> 00:41:21,139
actually works so I'm going to do like

860
00:41:19,010 --> 00:41:22,970
the worst possible version of this just

861
00:41:21,139 --> 00:41:25,339
to get it working and then we'll think

862
00:41:22,969 --> 00:41:27,289
about how we would make this actually

863
00:41:25,340 --> 00:41:28,460
run in a reasonable amount of time once

864
00:41:27,289 --> 00:41:38,090
we see how much time it actually does

865
00:41:28,460 --> 00:41:39,530
take right so so assuming that we find

866
00:41:38,090 --> 00:41:42,050
that this thing has to be filled then

867
00:41:39,530 --> 00:41:46,570
what we would do is say okay let's go

868
00:41:42,050 --> 00:41:52,760
ahead and do the looping over this thing

869
00:41:46,570 --> 00:42:02,000
excuse me like this right and this one's

870
00:41:52,760 --> 00:42:03,350
going to be over a wider loop and all

871
00:42:02,000 --> 00:42:05,179
we're going to do here is we're gonna

872
00:42:03,349 --> 00:42:07,009
take whatever the neighbors cell values

873
00:42:05,179 --> 00:42:14,059
are and we're going to sum them into us

874
00:42:07,010 --> 00:42:25,839
right so in this case we have I don't

875
00:42:14,059 --> 00:42:28,159
even remember what we have here

876
00:42:25,838 --> 00:42:30,949
so we want to do here is we're gonna

877
00:42:28,159 --> 00:42:33,469
sort of get the L index syrup so this

878
00:42:30,949 --> 00:42:35,838
part and we're gonna produce put these

879
00:42:33,469 --> 00:42:37,358
values in so in here where we do the

880
00:42:35,838 --> 00:42:40,880
flood-fill

881
00:42:37,358 --> 00:42:43,759
we're going to do the flood fill and

882
00:42:40,880 --> 00:42:54,740
then output to the actual regular voxel

883
00:42:43,760 --> 00:42:57,410
so this part here so it'd look like this

884
00:42:54,739 --> 00:43:00,019
and we're gonna need to create some

885
00:42:57,409 --> 00:43:03,078
summation values so if we want to fill

886
00:43:00,019 --> 00:43:05,750
we have to have a light and zero and a

887
00:43:03,079 --> 00:43:09,609
light see zero we're gonna have to

888
00:43:05,750 --> 00:43:12,670
normalize this one presumably so light

889
00:43:09,608 --> 00:43:16,699
and zero is going to have to be

890
00:43:12,670 --> 00:43:18,740
normalized after the fact but the light

891
00:43:16,699 --> 00:43:21,909
see zero can just be some directly and

892
00:43:18,739 --> 00:43:30,889
so then here what we would do is we just

893
00:43:21,909 --> 00:43:34,219
sum these out right and I guess we just

894
00:43:30,889 --> 00:43:38,348
get those out directly so it would just

895
00:43:34,219 --> 00:43:38,348
be like literally the neighbor sell

896
00:43:40,900 --> 00:43:47,780
light see and the neighbor sell light

897
00:43:43,730 --> 00:43:49,789
and for the direction counts that we're

898
00:43:47,780 --> 00:43:53,089
doing here which would for now we're

899
00:43:49,789 --> 00:43:55,789
only summing the first one right alright

900
00:43:53,088 --> 00:43:58,039
so this right here will produce just a

901
00:43:55,789 --> 00:44:00,380
summation and look so the only real

902
00:43:58,039 --> 00:44:02,989
thing that we need to finish this off

903
00:44:00,380 --> 00:44:05,568
right is we need a coefficient bank that

904
00:44:02,989 --> 00:44:08,269
tells us how much to weight each

905
00:44:05,568 --> 00:44:10,068
individual value that we're placing into

906
00:44:08,269 --> 00:44:12,650
the cell and I'll show you how to do

907
00:44:10,068 --> 00:44:15,259
that in a second it's pretty

908
00:44:12,650 --> 00:44:18,588
straightforward actually but we can

909
00:44:15,260 --> 00:44:21,049
suffice to say we need to have a

910
00:44:18,588 --> 00:44:23,659
coefficient bank here this is sort of

911
00:44:21,048 --> 00:44:25,608
our you know our filter right this is

912
00:44:23,659 --> 00:44:27,199
our our filter coefficient or I don't

913
00:44:25,608 --> 00:44:30,380
know what we want to call it football

914
00:44:27,199 --> 00:44:32,210
club and we know that we've got a

915
00:44:30,380 --> 00:44:35,450
certain number of values here that we're

916
00:44:32,210 --> 00:44:37,670
trying to add in so what we want to do

917
00:44:35,449 --> 00:44:39,189
is say well we know this is a five by

918
00:44:37,670 --> 00:44:41,740
five by five that we're

919
00:44:39,190 --> 00:44:44,019
try and wait in here right and we need

920
00:44:41,739 --> 00:44:47,699
this thing to be some set of values

921
00:44:44,019 --> 00:44:47,699
right there's gonna be like you know

922
00:44:50,219 --> 00:44:55,659
something like that that fills in what

923
00:44:52,809 --> 00:44:58,358
this thing is supposed to be now I don't

924
00:44:55,659 --> 00:45:03,818
really know necessarily how we would

925
00:44:58,358 --> 00:45:06,098
want to do this it's possible that we

926
00:45:03,818 --> 00:45:08,559
have to be fancier because we're only

927
00:45:06,099 --> 00:45:11,440
trying we possibly only want to use

928
00:45:08,559 --> 00:45:13,420
information we actually have right and

929
00:45:11,440 --> 00:45:15,700
so one of the problems we're gonna have

930
00:45:13,420 --> 00:45:19,000
is like if we're looking at this five by

931
00:45:15,699 --> 00:45:20,559
five by five here in fact this has to be

932
00:45:19,000 --> 00:45:21,818
another five this is gonna be so many

933
00:45:20,559 --> 00:45:23,170
coefficients I suppose we want to

934
00:45:21,818 --> 00:45:28,858
generate maybe we want to generate this

935
00:45:23,170 --> 00:45:31,450
thing I don't actually filling these in

936
00:45:28,858 --> 00:45:34,358
the problem that we'd have is just that

937
00:45:31,449 --> 00:45:38,279
it's unclear that we want to use ones

938
00:45:34,358 --> 00:45:41,108
that we don't actually have right and so

939
00:45:38,280 --> 00:45:42,880
normally what I would do for a filter is

940
00:45:41,108 --> 00:45:44,469
I just create the filter kernel which is

941
00:45:42,880 --> 00:45:45,579
what we're looking at there and I'd you

942
00:45:44,469 --> 00:45:47,828
know figure out what we want to do them

943
00:45:45,579 --> 00:45:49,450
for the multiply but in this case I

944
00:45:47,829 --> 00:45:50,740
guess we don't necessarily want to do

945
00:45:49,449 --> 00:45:52,598
that because we don't really want to

946
00:45:50,739 --> 00:45:53,709
take into account areas that don't have

947
00:45:52,599 --> 00:45:58,900
any information in it we don't really

948
00:45:53,710 --> 00:46:02,199
want to use so I kind of feel like we

949
00:45:58,900 --> 00:46:07,660
may actually have to do this in sort of

950
00:46:02,199 --> 00:46:09,578
a more in sort of a more creative way we

951
00:46:07,659 --> 00:46:12,429
may want to do it as like a smaller

952
00:46:09,579 --> 00:46:18,099
light pass that actually just works over

953
00:46:12,429 --> 00:46:20,500
the the the five by five in sort of a

954
00:46:18,099 --> 00:46:26,440
different way I'm trying to think of

955
00:46:20,500 --> 00:46:30,659
like how we would do this it actually

956
00:46:26,440 --> 00:46:30,659
seems kind of tricky to get right

957
00:46:41,960 --> 00:46:45,829
I mean one way to look at it is we could

958
00:46:43,909 --> 00:46:49,549
just look at what Delta values we have

959
00:46:45,829 --> 00:46:51,440
in looking through the 5x5 and seeing

960
00:46:49,550 --> 00:46:53,810
which deltas we have so whenever we see

961
00:46:51,440 --> 00:46:56,000
a neighbor cell we look at the neighbor

962
00:46:53,809 --> 00:47:05,029
cell that's on the other sides of it

963
00:46:56,000 --> 00:47:08,900
from where we are and do that maybe I'll

964
00:47:05,030 --> 00:47:18,230
try that so maybe we won't really do

965
00:47:08,900 --> 00:47:27,250
this maybe we'll do this yeah and get

966
00:47:18,230 --> 00:47:30,440
rid of that and this will go away oops

967
00:47:27,250 --> 00:47:32,690
so maybe what we'll do instead is take

968
00:47:30,440 --> 00:47:37,280
out one of those so that we're like this

969
00:47:32,690 --> 00:47:42,110
right and then what we want to do is say

970
00:47:37,280 --> 00:47:46,160
okay look for ones of these that do have

971
00:47:42,110 --> 00:47:51,740
light and for anything here that does

972
00:47:46,159 --> 00:47:56,589
have light we will try to we'll try to

973
00:47:51,739 --> 00:47:59,299
make this thing be maybe more of a like

974
00:47:56,590 --> 00:48:04,070
look we're just gonna look for gradients

975
00:47:59,300 --> 00:48:05,720
and continue the gradients I guess I

976
00:48:04,070 --> 00:48:06,110
can't really think of anything else to

977
00:48:05,719 --> 00:48:08,299
do

978
00:48:06,110 --> 00:48:10,400
so yeah and unless I have some other

979
00:48:08,300 --> 00:48:15,019
kind of a brainstorm about what we're

980
00:48:10,400 --> 00:48:20,210
gonna do this is in the wrong place that

981
00:48:15,019 --> 00:48:23,570
seems like the best probably solution so

982
00:48:20,210 --> 00:48:29,119
if you imagine taking this part out and

983
00:48:23,570 --> 00:48:35,330
just doing something like having some

984
00:48:29,119 --> 00:48:38,690
kind of a flood fill thing here so we're

985
00:48:35,329 --> 00:48:40,989
gonna flood these two values and we want

986
00:48:38,690 --> 00:48:40,990
to

987
00:48:43,159 --> 00:48:48,308
produce these

988
00:48:59,369 --> 00:49:08,339
it's a look if you think but we want to

989
00:49:02,219 --> 00:49:10,469
do is say oh that's not so if we want to

990
00:49:08,340 --> 00:49:12,210
flood fill those two values and we want

991
00:49:10,469 --> 00:49:15,359
to pass down like alright here's where

992
00:49:12,210 --> 00:49:17,789
we're starting right and then I want to

993
00:49:15,360 --> 00:49:20,039
be able to sort of set these values like

994
00:49:17,789 --> 00:49:22,440
I want to go you know where do I want to

995
00:49:20,039 --> 00:49:24,179
go from there so maybe it's like all

996
00:49:22,440 --> 00:49:26,730
right you know I'm gonna start with

997
00:49:24,179 --> 00:49:29,339
those and I'm going to go only in the

998
00:49:26,730 --> 00:49:41,070
direction I was already going so like I

999
00:49:29,340 --> 00:49:42,390
don't know this sort of thing so I'm

1000
00:49:41,070 --> 00:49:46,470
going to give you a direction that I was

1001
00:49:42,389 --> 00:49:50,309
looking for DZ dy DX and I want you to

1002
00:49:46,469 --> 00:49:54,209
look it one more in that direction to

1003
00:49:50,309 --> 00:49:55,679
see whether or not you have any

1004
00:49:54,210 --> 00:49:57,780
information there you can use to produce

1005
00:49:55,679 --> 00:50:04,049
a gradient if you do I want you to sum

1006
00:49:57,780 --> 00:50:08,300
it into the flood fill right it's not a

1007
00:50:04,050 --> 00:50:08,300
good idea but it's an idea

1008
00:50:15,469 --> 00:50:22,049
um and we can sort of expand this out in

1009
00:50:19,980 --> 00:50:24,289
fact we could just make this be of Macra

1010
00:50:22,050 --> 00:50:24,289
right

1011
00:50:33,679 --> 00:50:39,838
so I'm gonna try that like I said it's

1012
00:50:36,268 --> 00:50:41,068
not good but we'll you know it's it's

1013
00:50:39,838 --> 00:50:42,630
the best thing I can think of at the

1014
00:50:41,068 --> 00:50:47,369
moment and we need to start with some we

1015
00:50:42,630 --> 00:50:53,068
need to start somewhere right so let's

1016
00:50:47,369 --> 00:50:56,068
go ahead and do this so this will give

1017
00:50:53,068 --> 00:50:58,108
me some way of saying well okay we since

1018
00:50:56,068 --> 00:51:00,659
we now don't know how many things were

1019
00:50:58,108 --> 00:51:02,400
summing together we're going to have to

1020
00:51:00,659 --> 00:51:03,838
keep track of the waiting on it because

1021
00:51:02,400 --> 00:51:07,259
unlike normals which can just be

1022
00:51:03,838 --> 00:51:08,969
normalized this cannot so this will help

1023
00:51:07,259 --> 00:51:11,400
us just keep track of that and make it a

1024
00:51:08,969 --> 00:51:12,989
little bit easier we need to figure out

1025
00:51:11,400 --> 00:51:16,559
whether this still has light since we're

1026
00:51:12,989 --> 00:51:18,268
not really sure what that's doing right

1027
00:51:16,559 --> 00:51:20,670
now we should probably just write that

1028
00:51:18,268 --> 00:51:34,500
really quickly in fact that could be

1029
00:51:20,670 --> 00:51:36,028
also come from a cell right and so if we

1030
00:51:34,500 --> 00:51:39,358
want to here we could just say all right

1031
00:51:36,028 --> 00:51:41,309
the and now I think about it since

1032
00:51:39,358 --> 00:51:43,469
that's a macro the way this is looking

1033
00:51:41,309 --> 00:51:44,970
here I could actually it since like was

1034
00:51:43,469 --> 00:51:47,879
able to fit it inside the loop this

1035
00:51:44,969 --> 00:51:51,750
doesn't have to be a macro so has light

1036
00:51:47,880 --> 00:52:01,230
on a cell can just be at the moment the

1037
00:51:51,750 --> 00:52:13,219
idea that the cell light n 0 dot X not

1038
00:52:01,230 --> 00:52:20,210
equal to 0 or see here so

1039
00:52:13,219 --> 00:52:22,279
yeah something like this right so that

1040
00:52:20,210 --> 00:52:24,048
way we can check really quickly does you

1041
00:52:22,280 --> 00:52:25,819
know just simply with one macro

1042
00:52:24,048 --> 00:52:29,780
invocation whether or not something has

1043
00:52:25,818 --> 00:52:31,099
light in it and if it does off we go so

1044
00:52:29,780 --> 00:52:32,780
here what I do is say alright we're

1045
00:52:31,099 --> 00:52:35,088
gonna have to do the light flood right

1046
00:52:32,780 --> 00:52:36,530
here so this just looks up in that I

1047
00:52:35,088 --> 00:52:38,298
guess in that direction so it's like

1048
00:52:36,530 --> 00:52:42,890
basically a knock on things so it's like

1049
00:52:38,298 --> 00:52:45,380
you know we'll call this cell 0 and cell

1050
00:52:42,889 --> 00:52:48,558
1 and so what these would be would be

1051
00:52:45,380 --> 00:52:58,220
like alright so we've got plus DZ plus

1052
00:52:48,559 --> 00:53:03,349
dy plus DX and then we have like oops we

1053
00:52:58,219 --> 00:53:05,419
have like two times that select going

1054
00:53:03,349 --> 00:53:08,420
one more in that direction you know I

1055
00:53:05,420 --> 00:53:11,930
mean to make this a little bit more

1056
00:53:08,420 --> 00:53:16,880
friendly maybe well no I think that's

1057
00:53:11,929 --> 00:53:18,710
what we want so we we look one more in

1058
00:53:16,880 --> 00:53:32,480
that direction and we see if both of

1059
00:53:18,710 --> 00:53:35,568
these if both have light so we know that

1060
00:53:32,480 --> 00:53:37,548
they're they're both valid values then

1061
00:53:35,568 --> 00:53:42,409
what I do is I look at the Delta between

1062
00:53:37,548 --> 00:53:52,130
them and I apply that to the cell that

1063
00:53:42,409 --> 00:53:54,019
we're currently on right now I guess the

1064
00:53:52,130 --> 00:53:59,289
problem I'm gonna have here is the

1065
00:53:54,019 --> 00:54:02,389
directionality of each is confusing

1066
00:53:59,289 --> 00:54:07,490
because I would have to say like how do

1067
00:54:02,389 --> 00:54:09,500
I get from me how do I know the whether

1068
00:54:07,489 --> 00:54:12,528
to apply the negative amount or the

1069
00:54:09,500 --> 00:54:14,179
positive amount and I suppose that could

1070
00:54:12,528 --> 00:54:17,449
just be a coefficient that we look up in

1071
00:54:14,179 --> 00:54:19,929
a table but again this is just the

1072
00:54:17,449 --> 00:54:22,189
annoyance of having to write this code

1073
00:54:19,929 --> 00:54:23,649
we know what we're trying to do it's

1074
00:54:22,190 --> 00:54:27,278
just a question of how to actually

1075
00:54:23,650 --> 00:54:27,278
compactly represent it

1076
00:54:28,358 --> 00:54:34,279
in a way that doesn't you know become a

1077
00:54:31,369 --> 00:54:35,960
complete disaster so looking at each of

1078
00:54:34,280 --> 00:54:44,960
these I guess what I would say is for

1079
00:54:35,960 --> 00:54:47,059
the negative side of things I almost

1080
00:54:44,960 --> 00:54:50,838
just want to make like I said make this

1081
00:54:47,059 --> 00:54:54,230
a macro and then just do it so I can

1082
00:54:50,838 --> 00:54:56,900
just be explicit I think I'm gonna do

1083
00:54:54,230 --> 00:54:58,789
that so I think I'm going to revert to

1084
00:54:56,900 --> 00:55:01,088
what I was saying before I'm gonna do it

1085
00:54:58,789 --> 00:55:01,088
this way

1086
00:55:10,789 --> 00:55:26,539
so if I was to make this the macro and

1087
00:55:13,550 --> 00:55:27,680
we did something like this like so and I

1088
00:55:26,539 --> 00:55:28,789
guess you know I don't know that I

1089
00:55:27,679 --> 00:55:31,519
really need to be macro could be a

1090
00:55:28,789 --> 00:55:34,809
function if we want it to be because I

1091
00:55:31,519 --> 00:55:36,920
guess there's nothing particularly

1092
00:55:34,809 --> 00:55:38,269
Squinkie about that so I suppose I

1093
00:55:36,920 --> 00:55:41,480
suppose now that we're looking at it it

1094
00:55:38,269 --> 00:55:44,509
could just be you just go up so I have a

1095
00:55:41,480 --> 00:55:55,730
second window here to edit it just put

1096
00:55:44,510 --> 00:55:57,550
them right here so here's the one that

1097
00:55:55,730 --> 00:55:59,570
checks to see if we've got light and

1098
00:55:57,550 --> 00:56:02,870
there's really no reason for these to be

1099
00:55:59,570 --> 00:56:09,320
functions it's just because C's so bad

1100
00:56:02,869 --> 00:56:12,789
at macros that you have to do it I mean

1101
00:56:09,320 --> 00:56:12,789
really what they are is local functions

1102
00:56:15,070 --> 00:56:22,340
so here what I need to do is pass the

1103
00:56:17,239 --> 00:56:26,089
lightening solution and I would need to

1104
00:56:22,340 --> 00:56:38,750
pass the full set of actual values so

1105
00:56:26,090 --> 00:56:39,980
we'd need like you know X Y Z you see

1106
00:56:38,750 --> 00:56:42,489
what a pain-in-the-butt this is it's

1107
00:56:39,980 --> 00:56:42,490
just stupid

1108
00:56:48,210 --> 00:56:53,369
so I can look these up pretty easily and

1109
00:56:50,369 --> 00:56:57,300
then I just need some way of having the

1110
00:56:53,369 --> 00:57:00,000
summation occur right and so this can go

1111
00:56:57,300 --> 00:57:06,599
away here and this probably needs to be

1112
00:57:00,000 --> 00:57:08,099
bundled like this and I suppose since

1113
00:57:06,599 --> 00:57:10,440
we're doing the flooding this way these

1114
00:57:08,099 --> 00:57:12,119
could maybe be just bound up in here so

1115
00:57:10,440 --> 00:57:24,990
you only set them once and then these

1116
00:57:12,119 --> 00:57:34,559
would go in here right so something like

1117
00:57:24,989 --> 00:57:37,729
that and this provides us with what we

1118
00:57:34,559 --> 00:57:41,190
need to construct this heinous function

1119
00:57:37,730 --> 00:57:51,358
we would get both of the values we could

1120
00:57:41,190 --> 00:57:53,849
now see if they both had lighting in

1121
00:57:51,358 --> 00:57:57,420
assuming they do we can apply this with

1122
00:57:53,849 --> 00:57:59,580
some kind of a coefficient right so we

1123
00:57:57,420 --> 00:58:01,740
can say all right if they do then what

1124
00:57:59,579 --> 00:58:03,509
we want to do is subtract these two so

1125
00:58:01,739 --> 00:58:05,639
we want to subtract cell one from cell

1126
00:58:03,510 --> 00:58:07,950
zero or cell zero from cell one doesn't

1127
00:58:05,639 --> 00:58:09,598
matter and then as long as the person

1128
00:58:07,949 --> 00:58:10,949
calling us knows which order we do them

1129
00:58:09,599 --> 00:58:12,269
in they just passes the coefficient they

1130
00:58:10,949 --> 00:58:18,629
want us to use which is either luck

1131
00:58:12,269 --> 00:58:21,809
negative or positive one right so we

1132
00:58:18,630 --> 00:58:23,760
multiply and then sum so we go ahead and

1133
00:58:21,809 --> 00:58:26,608
say all right the light weight is gonna

1134
00:58:23,760 --> 00:58:31,890
plus equal one here

1135
00:58:26,608 --> 00:58:34,969
the light and zero is gonna plus equal C

1136
00:58:31,889 --> 00:58:38,279
times cell 0

1137
00:58:34,969 --> 00:58:41,189
- so probably cell one minus cell zero I

1138
00:58:38,280 --> 00:58:51,710
guess I don't know which way we should

1139
00:58:41,190 --> 00:58:51,710
do it doesn't really matter so then

1140
00:58:53,858 --> 00:58:56,858
oops

1141
00:59:03,539 --> 00:59:07,869
gives us the summation that we wanted

1142
00:59:05,798 --> 00:59:11,409
and it's the pain in the butt but there

1143
00:59:07,869 --> 00:59:13,959
you go right so then we can just

1144
00:59:11,409 --> 00:59:15,308
manually write these out and we can also

1145
00:59:13,958 --> 00:59:16,568
see if there's a pattern if there is we

1146
00:59:15,309 --> 00:59:18,789
can wreak elapsed it into a for loop

1147
00:59:16,568 --> 00:59:20,949
right so we can sort of still see the

1148
00:59:18,789 --> 00:59:22,319
thing that we wanted to see so here we

1149
00:59:20,949 --> 00:59:26,349
would say all right there's a floodlight

1150
00:59:22,318 --> 00:59:37,329
here's the flood information we have an

1151
00:59:26,349 --> 00:59:38,769
X of Y and a Z we have a weight which is

1152
00:59:37,329 --> 00:59:43,568
nothing at first

1153
00:59:38,768 --> 00:59:44,858
we have an N zero and I see well

1154
00:59:43,568 --> 00:59:50,139
actually so I guess looking at this

1155
00:59:44,858 --> 00:59:51,998
let's just clear it and then do that so

1156
00:59:50,139 --> 00:59:56,949
that floods all those and then we have

1157
00:59:51,998 --> 01:00:00,218
like our you know dxdy disease that we

1158
00:59:56,949 --> 01:00:02,048
want to actually do and then our you

1159
01:00:00,219 --> 01:00:05,499
know our C value whatever that's going

1160
01:00:02,048 --> 01:00:07,599
to be so if we look at how many of these

1161
01:00:05,498 --> 01:00:12,278
we want to do at the very least we want

1162
01:00:07,599 --> 01:00:17,019
to do like you know we want to do one in

1163
01:00:12,278 --> 01:00:19,389
each direction right and that gives us

1164
01:00:17,018 --> 01:00:22,478
the cardinal direction so positive and

1165
01:00:19,389 --> 01:00:24,219
negative x right and maybe this is a

1166
01:00:22,478 --> 01:00:26,108
better way to write that so you can see

1167
01:00:24,219 --> 01:00:29,400
them line up a little bit better so

1168
01:00:26,108 --> 01:00:32,699
right like positive and negative x

1169
01:00:29,400 --> 01:00:35,130
positive and negative Y positive Z right

1170
01:00:32,699 --> 01:00:39,519
and then we probably want to do

1171
01:00:35,130 --> 01:00:41,739
diagonals as well I would think I mean I

1172
01:00:39,518 --> 01:00:43,268
don't really know that we want them but

1173
01:00:41,739 --> 01:00:46,269
you know those are the other ones we

1174
01:00:43,268 --> 01:00:48,788
probably want and so in those case you'd

1175
01:00:46,268 --> 01:00:51,568
be like negative x and then you'd have

1176
01:00:48,789 --> 01:00:54,369
every permutation of every other

1177
01:00:51,568 --> 01:00:56,170
coordinate set right so this is where

1178
01:00:54,369 --> 01:00:57,838
the like you you know this would be a

1179
01:00:56,170 --> 01:01:00,639
lot nicer because it's a lot less

1180
01:00:57,838 --> 01:01:04,349
samples but if you wanted to do

1181
01:01:00,639 --> 01:01:07,328
diagonals you'd have to do these right

1182
01:01:04,349 --> 01:01:09,519
and I think you kind of need them

1183
01:01:07,329 --> 01:01:12,260
probably would be my guess I mean I

1184
01:01:09,518 --> 01:01:13,639
don't know but so if you

1185
01:01:12,260 --> 01:01:23,630
take a look at what that entails it's

1186
01:01:13,639 --> 01:01:29,839
like okay you know it'd be something

1187
01:01:23,630 --> 01:01:31,880
like this so you'd have negative X you'd

1188
01:01:29,840 --> 01:01:35,559
have every combination of these so you

1189
01:01:31,880 --> 01:01:54,019
would actually also need this right I

1190
01:01:35,559 --> 01:01:57,980
believe and then this expanding this out

1191
01:01:54,019 --> 01:01:59,840
again you can kind of see you've got one

1192
01:01:57,980 --> 01:02:01,460
redundant one here which we already had

1193
01:01:59,840 --> 01:02:03,920
I mean I guess some one way to look at

1194
01:02:01,460 --> 01:02:08,329
it is get rid of this and just use this

1195
01:02:03,920 --> 01:02:20,930
table right here's all the possible

1196
01:02:08,329 --> 01:02:22,699
combinations that you could do right and

1197
01:02:20,929 --> 01:02:26,869
we know that we don't need zero zero

1198
01:02:22,699 --> 01:02:28,549
zero because that's not a sample but

1199
01:02:26,869 --> 01:02:31,130
here's all the other possible samples

1200
01:02:28,550 --> 01:02:35,000
right in fact I'll leave zero zero in

1201
01:02:31,130 --> 01:02:37,519
there so we can comment it out so if you

1202
01:02:35,000 --> 01:02:40,760
look at what's going to happen here when

1203
01:02:37,519 --> 01:02:44,090
you're looking at these values whatever

1204
01:02:40,760 --> 01:02:50,630
the Delta is now it's always like going

1205
01:02:44,090 --> 01:02:52,880
out away from the value so I wonder if

1206
01:02:50,630 --> 01:02:54,980
we if we can just because now we hand

1207
01:02:52,880 --> 01:02:56,269
code sort of the order that it happens I

1208
01:02:54,980 --> 01:02:58,579
wonder if we actually don't need the

1209
01:02:56,269 --> 01:03:00,469
coefficient maybe we don't so what

1210
01:02:58,579 --> 01:03:02,210
happens here if you've got this value

1211
01:03:00,469 --> 01:03:05,899
this value this value so you're looking

1212
01:03:02,210 --> 01:03:07,820
in this direction right and we're

1213
01:03:05,900 --> 01:03:09,769
basically saying that you know which

1214
01:03:07,820 --> 01:03:15,340
order do we we did one minus zero right

1215
01:03:09,769 --> 01:03:19,159
was how we did it for our flood line

1216
01:03:15,340 --> 01:03:21,860
yeah we took and oh this is zero minus 1

1217
01:03:19,159 --> 01:03:23,119
actually so I'm gonna change that to one

1218
01:03:21,860 --> 01:03:24,510
minus zero because that makes a little

1219
01:03:23,119 --> 01:03:28,489
bit more sense to me

1220
01:03:24,510 --> 01:03:34,530
but again doesn't really matter but oh

1221
01:03:28,489 --> 01:03:40,759
no I'm looking at the wrong thing it's

1222
01:03:34,530 --> 01:03:47,220
this index that we care about 1-0

1223
01:03:40,760 --> 01:03:49,050
oops so if we're doing 1-0 in this case

1224
01:03:47,219 --> 01:03:51,329
you can see here we've got the this is

1225
01:03:49,050 --> 01:03:52,800
the one this is the zero and this is the

1226
01:03:51,329 --> 01:03:56,130
one that we're actually filling this one

1227
01:03:52,800 --> 01:03:59,940
right here so if we subtract these two

1228
01:03:56,130 --> 01:04:02,369
it was it it would be saying 1-0 says

1229
01:03:59,940 --> 01:04:05,789
what's the derivative that goes from

1230
01:04:02,369 --> 01:04:08,490
zero to one right and so if we wanted to

1231
01:04:05,789 --> 01:04:11,880
know what the location of this guy

1232
01:04:08,489 --> 01:04:13,858
should be we want to add this in so we

1233
01:04:11,880 --> 01:04:16,230
want to say like okay what would we

1234
01:04:13,858 --> 01:04:19,230
expect it to be going from this guy to

1235
01:04:16,230 --> 01:04:21,690
this guy right and so if you look at

1236
01:04:19,230 --> 01:04:23,460
that we it is it is sort of the wrong

1237
01:04:21,690 --> 01:04:26,340
way round right because we want to take

1238
01:04:23,460 --> 01:04:29,400
this one and we want to produce it going

1239
01:04:26,340 --> 01:04:31,829
that way right so I guess what we'd

1240
01:04:29,400 --> 01:04:35,820
rather have here is we'd rather produce

1241
01:04:31,829 --> 01:04:38,369
this value a little bit more sanely what

1242
01:04:35,820 --> 01:04:42,780
we'd rather do is say if we were going

1243
01:04:38,369 --> 01:04:44,579
from 0 to 1 which is this way then we

1244
01:04:42,780 --> 01:04:47,130
would want to and we wouldn't need that

1245
01:04:44,579 --> 01:04:49,289
now I'm I'm arguing if we're going from

1246
01:04:47,130 --> 01:04:53,780
there to there to get to the interior 1

1247
01:04:49,289 --> 01:04:56,519
we'd need to apply that one more time to

1248
01:04:53,780 --> 01:04:58,609
whatever the current whatever the value

1249
01:04:56,519 --> 01:05:03,659
we would be starting on would be and

1250
01:04:58,608 --> 01:05:05,340
that value because that value is we know

1251
01:05:03,659 --> 01:05:10,769
what it is it's this one right here

1252
01:05:05,340 --> 01:05:16,559
right it would basically be it would

1253
01:05:10,769 --> 01:05:19,409
basically be saying take cell zeros

1254
01:05:16,559 --> 01:05:23,279
value add the Delta that you previously

1255
01:05:19,409 --> 01:05:25,170
added before and that's the new value

1256
01:05:23,280 --> 01:05:27,750
that we're going to have right for the

1257
01:05:25,170 --> 01:05:29,369
central differencing and what you can

1258
01:05:27,750 --> 01:05:32,070
see there is if you actually did this

1259
01:05:29,369 --> 01:05:35,130
you can sort of see that you end up just

1260
01:05:32,070 --> 01:05:38,000
summing light n2 twice right so it's

1261
01:05:35,130 --> 01:05:38,000
really just this

1262
01:05:39,369 --> 01:05:53,180
and then you subtract that and that

1263
01:05:51,619 --> 01:05:56,030
should produce the value that that we

1264
01:05:53,179 --> 01:05:57,828
need and I think that works all the time

1265
01:05:56,030 --> 01:05:59,990
because we're doubling up right so

1266
01:05:57,829 --> 01:06:04,609
because we're doing that I think that

1267
01:05:59,989 --> 01:06:08,058
would always work so it does seem like I

1268
01:06:04,608 --> 01:06:10,250
guess that could have been written in

1269
01:06:08,059 --> 01:06:16,369
line I guess I like I said I'm kind of

1270
01:06:10,250 --> 01:06:19,159
dumb it looks like we can so this this

1271
01:06:16,369 --> 01:06:21,650
is entirely parameterised bull you don't

1272
01:06:19,159 --> 01:06:24,769
need any special knowledge it looks like

1273
01:06:21,650 --> 01:06:29,470
it just works right so if we want to I

1274
01:06:24,769 --> 01:06:35,568
can just weld that in which is good I

1275
01:06:29,469 --> 01:06:39,429
could weld that in right here and do the

1276
01:06:35,568 --> 01:06:39,429
loop the way I had it before

1277
01:06:54,130 --> 01:06:59,460
so that's kind of nice I mean who knows

1278
01:06:57,268 --> 01:07:01,719
again this is just really ugly and

1279
01:06:59,460 --> 01:07:02,920
complicated so I don't really know if

1280
01:07:01,719 --> 01:07:06,219
we're going to be able to really get

1281
01:07:02,920 --> 01:07:07,900
away with this but again like I said we

1282
01:07:06,219 --> 01:07:11,318
got a try because we don't really know

1283
01:07:07,900 --> 01:07:13,539
what we need right now so we have to

1284
01:07:11,318 --> 01:07:21,190
start somewhere and just see where we go

1285
01:07:13,539 --> 01:07:29,140
with it so this now can be welded

1286
01:07:21,190 --> 01:07:32,200
indirectly which is great just makes it

1287
01:07:29,139 --> 01:07:33,659
easier for everybody the compiler can

1288
01:07:32,199 --> 01:07:47,098
see what's going on much more

1289
01:07:33,659 --> 01:07:51,699
effectively there right alright and this

1290
01:07:47,099 --> 01:07:53,499
is an array there we go so let's go

1291
01:07:51,699 --> 01:07:58,199
ahead and do bug that and see if we can

1292
01:07:53,498 --> 01:08:01,778
get it working looks like for this

1293
01:07:58,199 --> 01:08:07,078
that's some residual stuff so we really

1294
01:08:01,778 --> 01:08:11,969
just need that and what else you got

1295
01:08:07,079 --> 01:08:11,969
these now don't have to be addressed

1296
01:08:12,778 --> 01:08:26,380
anything else all right so a little

1297
01:08:22,569 --> 01:08:33,099
arduous but it looks like we more or

1298
01:08:26,380 --> 01:08:36,909
less got it and let me see what happens

1299
01:08:33,099 --> 01:08:38,650
if we actually fill those what I'd like

1300
01:08:36,908 --> 01:08:41,189
to do here well so it's actually already

1301
01:08:38,649 --> 01:08:43,509
sort of working just not very well right

1302
01:08:41,189 --> 01:08:44,979
you can sort of see that sometimes you

1303
01:08:43,509 --> 01:08:47,738
get some little angular things in there

1304
01:08:44,979 --> 01:08:50,229
so we're getting something and like

1305
01:08:47,738 --> 01:08:52,868
there for example all right it's just

1306
01:08:50,229 --> 01:08:54,009
not quite right the first thing I want

1307
01:08:52,868 --> 01:08:56,019
to do before we do anything else is I

1308
01:08:54,009 --> 01:08:58,270
just want to fill in where the values

1309
01:08:56,020 --> 01:09:00,549
are so I can get a better sense of it so

1310
01:08:58,270 --> 01:09:03,429
rather than doing this what I'd like to

1311
01:09:00,548 --> 01:09:05,289
do is when we come into this has light

1312
01:09:03,429 --> 01:09:06,970
part I'm just going to overwrite the

1313
01:09:05,289 --> 01:09:09,519
values with like bright purple

1314
01:09:06,970 --> 01:09:24,310
right so instead of this I'm going to

1315
01:09:09,520 --> 01:09:28,030
basically do this and that's just

1316
01:09:24,310 --> 01:09:31,150
pegging those two like purple so that we

1317
01:09:28,029 --> 01:09:34,559
can see where they are right so this is

1318
01:09:31,149 --> 01:09:37,149
like filling in those those values and

1319
01:09:34,560 --> 01:09:39,250
what I just want to verify right so you

1320
01:09:37,149 --> 01:09:41,529
can see that we are correctly at least

1321
01:09:39,250 --> 01:09:44,829
identifying which values don't have any

1322
01:09:41,529 --> 01:09:51,880
light on them sort of although that is

1323
01:09:44,829 --> 01:09:53,680
not really doing that so there's a

1324
01:09:51,880 --> 01:09:55,539
little weirdness there and I don't know

1325
01:09:53,680 --> 01:09:57,789
if that's because those are very small

1326
01:09:55,539 --> 01:09:59,350
maybe those are very very low light

1327
01:09:57,789 --> 01:10:00,640
values that are close to zero I don't

1328
01:09:59,350 --> 01:10:04,450
think so though because you can see the

1329
01:10:00,640 --> 01:10:08,020
interpolator is busted on those so we

1330
01:10:04,449 --> 01:10:10,029
have some other bug so this is good

1331
01:10:08,020 --> 01:10:11,860
because this is what I wanted to to

1332
01:10:10,029 --> 01:10:13,599
basically debug right I want to know

1333
01:10:11,859 --> 01:10:15,819
where those artifacts are coming from

1334
01:10:13,600 --> 01:10:18,700
first before I try to debug the

1335
01:10:15,819 --> 01:10:25,989
averaging part of things like why is

1336
01:10:18,699 --> 01:10:29,319
that what's happening there you see that

1337
01:10:25,989 --> 01:10:31,389
like what is that so I'm guessing that

1338
01:10:29,319 --> 01:10:33,219
something is happening with maybe in our

1339
01:10:31,390 --> 01:10:35,190
shader for example with erroneous

1340
01:10:33,220 --> 01:10:37,720
interpolation or something like that

1341
01:10:35,189 --> 01:10:39,369
that's messing with us before we even

1342
01:10:37,720 --> 01:10:42,310
really get to the point where we're

1343
01:10:39,369 --> 01:10:44,079
going to fill this stuff in so I want to

1344
01:10:42,310 --> 01:10:45,600
look at the Z bias program real quick

1345
01:10:44,079 --> 01:10:49,079
and find out what the deal is with that

1346
01:10:45,600 --> 01:10:49,079
because I don't know

1347
01:11:01,260 --> 01:11:17,860
all right all right well we can I think

1348
01:11:16,750 --> 01:11:21,310
we can sort of see what the problem is

1349
01:11:17,859 --> 01:11:25,539
here so if we take a look at what we

1350
01:11:21,310 --> 01:11:31,000
were doing before and producing these

1351
01:11:25,539 --> 01:11:32,560
this light floor value here the clamping

1352
01:11:31,000 --> 01:11:34,779
so if you look at what's happening with

1353
01:11:32,560 --> 01:11:38,140
the light color this is producing the

1354
01:11:34,779 --> 01:11:41,349
light color here but we're not clamping

1355
01:11:38,140 --> 01:11:44,770
it to zero and the problem is we do want

1356
01:11:41,350 --> 01:11:46,690
to clamp it to zero when we interpolate

1357
01:11:44,770 --> 01:11:50,290
it we don't want to clamp it to zero

1358
01:11:46,689 --> 01:11:51,639
right but we do want to clamp it to zero

1359
01:11:50,289 --> 01:11:53,019
once we're actually going to use it

1360
01:11:51,640 --> 01:11:54,970
because we don't want to apply negative

1361
01:11:53,020 --> 01:11:57,700
lighting in our lighting equation that

1362
01:11:54,970 --> 01:12:01,680
doesn't make any sense so we do want to

1363
01:11:57,699 --> 01:12:01,679
do something where we do like you know

1364
01:12:03,539 --> 01:12:11,949
so use there can we do the clamp can we

1365
01:12:10,300 --> 01:12:16,180
do the clamp across the entire thing I

1366
01:12:11,949 --> 01:12:18,189
think we can I don't really know if we

1367
01:12:16,180 --> 01:12:21,420
can or we can't you know I don't know if

1368
01:12:18,189 --> 01:12:21,419
we can over can suppose we write it out

1369
01:12:28,359 --> 01:12:33,130
like that so I do think we need to clamp

1370
01:12:30,909 --> 01:12:35,470
that there because we don't want to and

1371
01:12:33,130 --> 01:12:36,789
actually so I guess we know I think

1372
01:12:35,470 --> 01:12:39,520
about it we only want to clamp it to

1373
01:12:36,789 --> 01:12:41,229
zero so clamp zero one is actually not

1374
01:12:39,520 --> 01:12:44,710
true either because the light is allowed

1375
01:12:41,229 --> 01:12:52,959
to be brighter than that so it's more

1376
01:12:44,710 --> 01:12:55,210
like just clamped to zero which ya not

1377
01:12:52,960 --> 01:13:03,100
sure what the easiest way to do that

1378
01:12:55,210 --> 01:13:05,109
would be but this just needs to be a

1379
01:13:03,100 --> 01:13:12,940
very high value let me take a look at

1380
01:13:05,109 --> 01:13:15,099
the shader and see what the most

1381
01:13:12,939 --> 01:13:30,009
efficient way to tell the compiler that

1382
01:13:15,100 --> 01:13:34,459
is let's see what do we have here

1383
01:13:30,010 --> 01:13:34,458
[Music]

1384
01:13:38,250 --> 01:13:43,270
so it looks like they don't really

1385
01:13:40,448 --> 01:13:45,329
supply a clamp for that but since it's

1386
01:13:43,270 --> 01:13:48,640
just do it since we have min and Max

1387
01:13:45,329 --> 01:13:51,729
that's all we need right we can just do

1388
01:13:48,640 --> 01:13:53,980
a min value I'm sorry a max value on

1389
01:13:51,729 --> 01:13:55,448
zero and the value and that's that's the

1390
01:13:53,979 --> 01:13:57,250
clamp so the fact that they don't call

1391
01:13:55,448 --> 01:13:59,948
it a clamp doesn't matter it's still

1392
01:13:57,250 --> 01:14:03,310
fine right so what we can do here is if

1393
01:13:59,948 --> 01:14:05,678
we do clamp zero what we can do is or

1394
01:14:03,310 --> 01:14:07,330
clamp zero in I guess maybe is the right

1395
01:14:05,679 --> 01:14:10,779
way to say it what we can do there is

1396
01:14:07,329 --> 01:14:14,469
say look we just want the maximum value

1397
01:14:10,779 --> 01:14:17,710
between whatever you give us and zero so

1398
01:14:14,469 --> 01:14:19,899
if this value gets below zero we won't

1399
01:14:17,710 --> 01:14:23,319
you know we throw that out but if it's

1400
01:14:19,899 --> 01:14:29,920
anything else we use it right so that's

1401
01:14:23,319 --> 01:14:31,719
fine and so I do think that was a

1402
01:14:29,920 --> 01:14:33,399
problem now whether that's the whole

1403
01:14:31,719 --> 01:14:35,500
problem I don't know but it I think it's

1404
01:14:33,399 --> 01:14:38,079
a problem that we wanted to address and

1405
01:14:35,500 --> 01:14:42,130
so I'm glad that we did so let's see

1406
01:14:38,079 --> 01:14:51,039
like what we're looking at now just

1407
01:14:42,130 --> 01:14:55,350
trying to see and I think we're still so

1408
01:14:51,039 --> 01:14:55,350
we still may be getting some

1409
01:15:02,170 --> 01:15:05,949
you know the other thing I'm wondering

1410
01:15:03,550 --> 01:15:11,260
is for normal so those are those are

1411
01:15:05,948 --> 01:15:13,509
where the normals flip I think that's a

1412
01:15:11,260 --> 01:15:16,510
normal problem like an interpolation of

1413
01:15:13,510 --> 01:15:20,350
the normal problem I'm curious though as

1414
01:15:16,510 --> 01:15:28,090
to why it's a perfect why it's not

1415
01:15:20,350 --> 01:15:30,190
smoother right because that's just an

1416
01:15:28,090 --> 01:15:32,110
that's just going the normals going the

1417
01:15:30,189 --> 01:15:34,419
other direction but I don't quite

1418
01:15:32,109 --> 01:15:37,059
understand why that would be happening

1419
01:15:34,420 --> 01:15:41,399
in some of these places right so like

1420
01:15:37,060 --> 01:15:43,840
I'm not sure I understand how that I

1421
01:15:41,399 --> 01:15:46,329
guess I could believe that that was just

1422
01:15:43,840 --> 01:15:48,900
the normal interpolation but I'm not you

1423
01:15:46,329 --> 01:15:52,448
know I'm not really sure about it

1424
01:15:48,899 --> 01:15:55,569
similarly for the light normal when we

1425
01:15:52,448 --> 01:15:59,169
actually produce that that probably

1426
01:15:55,569 --> 01:16:06,069
should be normalized as well here when

1427
01:15:59,170 --> 01:16:12,640
we actually produce the normal and we

1428
01:16:06,069 --> 01:16:15,729
weren't doing that either so let's get

1429
01:16:12,640 --> 01:16:22,390
that in there make sure that's in the

1430
01:16:15,729 --> 01:16:24,639
mix but again really just not I don't

1431
01:16:22,390 --> 01:16:31,119
really understand what's happening like

1432
01:16:24,640 --> 01:16:38,410
right in here it looks like a problem

1433
01:16:31,119 --> 01:16:41,439
with the normal but like how how is it

1434
01:16:38,409 --> 01:16:42,929
flipping its I mean at that at that

1435
01:16:41,439 --> 01:16:46,500
point right there there's just no way

1436
01:16:42,929 --> 01:16:49,719
right it's some kind of degenerate

1437
01:16:46,500 --> 01:16:52,029
situation probably with the fact that

1438
01:16:49,719 --> 01:16:53,859
the normal flips at that point maybe

1439
01:16:52,029 --> 01:16:55,929
although I don't understand why we

1440
01:16:53,859 --> 01:16:57,369
wouldn't get a smoother result right I

1441
01:16:55,929 --> 01:17:00,420
mean you can see how smooth it is then

1442
01:16:57,369 --> 01:17:04,359
it hits this discontinuous point here

1443
01:17:00,420 --> 01:17:06,219
which just how is it doing a cubic

1444
01:17:04,359 --> 01:17:09,909
interpolation and producing that right

1445
01:17:06,219 --> 01:17:11,980
like something it's not impossible to do

1446
01:17:09,909 --> 01:17:14,109
that but it's a little weird and I'm not

1447
01:17:11,979 --> 01:17:16,389
sure why it would be doing that right

1448
01:17:14,109 --> 01:17:18,670
I and that's why I think there's I just

1449
01:17:16,390 --> 01:17:21,910
have to satisfy myself that I understand

1450
01:17:18,670 --> 01:17:28,180
what's going on a little bit better I'm

1451
01:17:21,909 --> 01:17:29,800
gonna try undoing this now I want to see

1452
01:17:28,180 --> 01:17:32,619
what happens here cuz like why are all

1453
01:17:29,800 --> 01:17:40,480
those black as well same same deal right

1454
01:17:32,619 --> 01:17:41,920
I don't understand like really strange

1455
01:17:40,479 --> 01:17:48,939
right you can see that it's sort of

1456
01:17:41,920 --> 01:17:50,800
doing some fill-in and sort of not again

1457
01:17:48,939 --> 01:17:53,259
just really not quite understanding

1458
01:17:50,800 --> 01:17:55,420
what's happening there and I need to be

1459
01:17:53,260 --> 01:17:57,489
able to understand I also should

1460
01:17:55,420 --> 01:18:00,579
probably look at the has light function

1461
01:17:57,489 --> 01:18:01,960
in case maybe that's busted again the

1462
01:18:00,579 --> 01:18:04,329
has light functions looking at the

1463
01:18:01,960 --> 01:18:08,619
normal to see what direction the normals

1464
01:18:04,329 --> 01:18:10,840
facing you know maybe that's a bad thing

1465
01:18:08,619 --> 01:18:14,199
to look at it could be that the normal

1466
01:18:10,840 --> 01:18:19,210
persists somehow you know we could do

1467
01:18:14,199 --> 01:18:23,889
this instead see if there's any light in

1468
01:18:19,210 --> 01:18:29,439
the area and I don't know if that would

1469
01:18:23,890 --> 01:18:31,450
have any effect but I doubt it yes you

1470
01:18:29,439 --> 01:18:36,069
can see it doesn't matter which one I

1471
01:18:31,449 --> 01:18:40,170
test somehow it doesn't detect the fact

1472
01:18:36,069 --> 01:18:40,170
that the lighting went to zero right

1473
01:18:40,470 --> 01:18:45,310
it's like something in here there's like

1474
01:18:43,239 --> 01:18:47,679
a dead zone that is coming from

1475
01:18:45,310 --> 01:18:50,230
something but we don't know what right

1476
01:18:47,680 --> 01:18:51,880
because we're detecting that there's no

1477
01:18:50,229 --> 01:18:55,389
light out here but we're thinking that

1478
01:18:51,880 --> 01:18:57,880
there's light in here another way to do

1479
01:18:55,390 --> 01:19:00,550
that would be to say we could flood in

1480
01:18:57,880 --> 01:19:06,159
the opposite direction where we look to

1481
01:19:00,550 --> 01:19:13,390
see like when we do where is it so when

1482
01:19:06,159 --> 01:19:16,210
I do that has light bit right here so

1483
01:19:13,390 --> 01:19:19,240
the other thing they could do is say all

1484
01:19:16,210 --> 01:19:24,309
right like let's actually flood this

1485
01:19:19,239 --> 01:19:28,538
element when we know that it

1486
01:19:24,309 --> 01:19:32,380
does have light and in that case set it

1487
01:19:28,538 --> 01:19:36,009
to yellow and then when we look here

1488
01:19:32,380 --> 01:19:44,710
we'll see pinks and yellows everything

1489
01:19:36,010 --> 01:19:48,070
should be one or the other right they

1490
01:19:44,710 --> 01:19:50,618
just allow this to be accessed from both

1491
01:19:48,069 --> 01:19:52,689
branches there so everything should be

1492
01:19:50,618 --> 01:19:55,960
either pink or yellow now there should

1493
01:19:52,689 --> 01:19:58,689
be no remaining actual light values

1494
01:19:55,960 --> 01:20:02,770
right so you can see that we actually

1495
01:19:58,689 --> 01:20:05,229
are properly touching every cell there

1496
01:20:02,770 --> 01:20:08,289
right like all of these then got filled

1497
01:20:05,229 --> 01:20:12,399
in which means that we think that they

1498
01:20:08,288 --> 01:20:14,649
have light right so I mean that's

1499
01:20:12,399 --> 01:20:19,328
actually pretty interesting so if I take

1500
01:20:14,649 --> 01:20:21,819
this out we think those things have

1501
01:20:19,328 --> 01:20:22,840
light in them right because here they

1502
01:20:21,819 --> 01:20:25,509
are they're yellow

1503
01:20:22,840 --> 01:20:27,219
when I take this out they're black so

1504
01:20:25,510 --> 01:20:29,050
when we're doing that test somehow we

1505
01:20:27,219 --> 01:20:33,420
think there's lighting information there

1506
01:20:29,050 --> 01:20:37,239
but what I mean

1507
01:20:33,420 --> 01:20:40,750
what lighting information do we do we

1508
01:20:37,238 --> 01:20:42,848
think we have and so that's kind of

1509
01:20:40,750 --> 01:20:45,698
that's that's the part I want to

1510
01:20:42,849 --> 01:20:48,909
investigate here right so I'd like to

1511
01:20:45,698 --> 01:20:52,388
know how we're getting a has light value

1512
01:20:48,908 --> 01:20:54,729
there because it looks like there's no

1513
01:20:52,389 --> 01:20:56,710
light but it thinks we did have some and

1514
01:20:54,729 --> 01:21:00,428
is that just because these values are

1515
01:20:56,710 --> 01:21:13,948
like incredibly small or is this test

1516
01:21:00,429 --> 01:21:13,949
busted am I looking at the wrong cell

1517
01:21:14,488 --> 01:21:17,759
seems unlikely

1518
01:21:27,359 --> 01:21:33,579
so I guess what I would say is that's

1519
01:21:31,029 --> 01:21:39,789
our first order of business here what's

1520
01:21:33,579 --> 01:21:43,569
going on with this let's add the

1521
01:21:39,789 --> 01:21:46,239
threshold in here to see if it's just if

1522
01:21:43,569 --> 01:21:49,859
those values are just small or if

1523
01:21:46,239 --> 01:21:52,719
there's something else weird going on

1524
01:21:49,859 --> 01:21:56,019
and what I'm looking for here is that

1525
01:21:52,720 --> 01:21:57,520
those two flood to pink so what you can

1526
01:21:56,020 --> 01:22:03,640
see there is that it looks like they did

1527
01:21:57,520 --> 01:22:06,520
have very small values right so here's

1528
01:22:03,640 --> 01:22:08,310
what I'm guessing this pretty much gives

1529
01:22:06,520 --> 01:22:10,750
me the information I need

1530
01:22:08,310 --> 01:22:13,480
so probably what's happening there is

1531
01:22:10,750 --> 01:22:14,859
because we're smoothing over time those

1532
01:22:13,479 --> 01:22:16,839
values are just sort of slowly

1533
01:22:14,859 --> 01:22:20,710
approaching zero but never quite getting

1534
01:22:16,840 --> 01:22:22,930
there right and that means we may want

1535
01:22:20,710 --> 01:22:27,100
to clamp our like flush our values down

1536
01:22:22,930 --> 01:22:30,940
to zero when that happens but there we

1537
01:22:27,100 --> 01:22:32,920
go I also don't know we can't really hit

1538
01:22:30,939 --> 01:22:33,189
D normals and SSE can we I god I hope

1539
01:22:32,920 --> 01:22:35,380
not

1540
01:22:33,189 --> 01:22:38,500
that would be bad we really don't want D

1541
01:22:35,380 --> 01:22:40,359
normals in here so anyway let's take a

1542
01:22:38,500 --> 01:22:42,279
look at what happens now if we re enable

1543
01:22:40,359 --> 01:22:45,639
the blending just to see if we get

1544
01:22:42,279 --> 01:22:48,489
anything more sensical now that we're

1545
01:22:45,640 --> 01:22:53,070
correctly identifying things as being

1546
01:22:48,489 --> 01:23:01,510
low light so let's go ahead and turn

1547
01:22:53,069 --> 01:23:02,859
this off and we'll see what happens with

1548
01:23:01,510 --> 01:23:05,340
the interpolation around the light

1549
01:23:02,859 --> 01:23:05,339
boundaries

1550
01:23:11,969 --> 01:23:18,279
so that seems really weird it's like

1551
01:23:14,409 --> 01:23:21,099
replacing those things with it looks

1552
01:23:18,279 --> 01:23:22,869
like I've got my it looks like my

1553
01:23:21,100 --> 01:23:27,160
interpolate is going the wrong way so I

1554
01:23:22,869 --> 01:23:30,760
think I screwed up that math that's what

1555
01:23:27,159 --> 01:23:32,639
it looks like to me um because I wanted

1556
01:23:30,760 --> 01:23:34,989
to be able to have negative values there

1557
01:23:32,640 --> 01:23:36,520
in the interpolator and it looks like

1558
01:23:34,988 --> 01:23:39,069
that's that's not at all what's

1559
01:23:36,520 --> 01:23:41,440
happening so hold on one second let's

1560
01:23:39,069 --> 01:23:43,779
take a look so what we're doing here

1561
01:23:41,439 --> 01:23:46,719
when we're you know summing up these

1562
01:23:43,779 --> 01:23:49,509
guys right I want these to have the

1563
01:23:46,719 --> 01:23:52,890
ability to have negative values so I'm

1564
01:23:49,510 --> 01:23:57,239
basically saying like take where the

1565
01:23:52,890 --> 01:24:01,840
take where the first one away from me is

1566
01:23:57,238 --> 01:24:10,889
right and add to that the Delta between

1567
01:24:01,840 --> 01:24:12,420
the previous one and me and that I mean

1568
01:24:10,890 --> 01:24:17,100
looks right right I mean that looks like

1569
01:24:12,420 --> 01:24:19,399
what you would do for that information

1570
01:24:17,100 --> 01:24:23,100
right hmm

1571
01:24:19,399 --> 01:24:24,539
and this should only really be able to

1572
01:24:23,100 --> 01:24:26,190
be negative I guess although I guess

1573
01:24:24,539 --> 01:24:27,600
sometimes it could be positive if it was

1574
01:24:26,189 --> 01:24:30,259
going the other direction I mean maybe

1575
01:24:27,600 --> 01:24:35,120
we always want it to be negative like

1576
01:24:30,260 --> 01:24:35,119
because there's no light here but I

1577
01:24:35,420 --> 01:24:38,510
don't know

1578
01:24:45,199 --> 01:24:53,010
since the light weights always positive

1579
01:24:47,640 --> 01:24:54,750
this won't change the sign the normal

1580
01:24:53,010 --> 01:25:01,739
will just be normalized so that part's

1581
01:24:54,750 --> 01:25:03,689
not an issue so yeah I feel like that

1582
01:25:01,739 --> 01:25:05,489
should be okay let me work one through

1583
01:25:03,689 --> 01:25:10,859
real quick just to make sure that I'm

1584
01:25:05,489 --> 01:25:13,920
not totally wrong about the order that

1585
01:25:10,859 --> 01:25:19,170
math goes so let's suppose I'm looking

1586
01:25:13,920 --> 01:25:25,319
at one of these actually let me do it

1587
01:25:19,170 --> 01:25:27,029
this way so I'm gonna look at this guy

1588
01:25:25,319 --> 01:25:30,029
here and you know what I'm trying to do

1589
01:25:27,029 --> 01:25:32,909
is just a simple you know extrapolation

1590
01:25:30,029 --> 01:25:35,519
so I have this guy it's zero these two

1591
01:25:32,909 --> 01:25:37,619
both have values so we take the Delta

1592
01:25:35,520 --> 01:25:39,330
between them and we want to apply it to

1593
01:25:37,619 --> 01:25:41,010
get this so it's just a very simple in

1594
01:25:39,329 --> 01:25:43,050
your linear extrapolation there's

1595
01:25:41,010 --> 01:25:48,119
nothing of fancy going on there at all

1596
01:25:43,050 --> 01:25:50,190
right so if this is a and this is B then

1597
01:25:48,119 --> 01:25:52,979
what I would expect to do is say look if

1598
01:25:50,189 --> 01:25:57,569
I started from B what I would want to do

1599
01:25:52,979 --> 01:26:01,739
is add from B the difference that it

1600
01:25:57,569 --> 01:26:06,479
took me to get to B from a right so it

1601
01:26:01,739 --> 01:26:09,649
would be B minus a right and that would

1602
01:26:06,479 --> 01:26:13,679
get me here and so that's just two B

1603
01:26:09,649 --> 01:26:15,389
minus a right that's the actual value

1604
01:26:13,680 --> 01:26:17,430
that I would expect to have and that's

1605
01:26:15,390 --> 01:26:20,628
where I would expect my value to be

1606
01:26:17,430 --> 01:26:24,409
right now

1607
01:26:20,628 --> 01:26:29,090
- B - a is two times like cell 0

1608
01:26:24,408 --> 01:26:30,589
- cell 1 and that's what we wrote right

1609
01:26:29,090 --> 01:26:34,760
two times cell 0

1610
01:26:30,590 --> 01:26:37,699
- cell 1 so it seems like that simple

1611
01:26:34,760 --> 01:26:43,668
extrapolation should be ok great I don't

1612
01:26:37,698 --> 01:26:46,158
see what the problem is there and you

1613
01:26:43,668 --> 01:26:49,248
know in the Z by a shader I assume we're

1614
01:26:46,158 --> 01:26:52,848
handling the negative values ok I don't

1615
01:26:49,248 --> 01:26:55,969
think there's anything in particular

1616
01:26:52,849 --> 01:26:58,760
weird there here's us normalizing the

1617
01:26:55,969 --> 01:27:03,739
normal when we actually look up the

1618
01:26:58,760 --> 01:27:08,479
light value we're just grabbing the

1619
01:27:03,738 --> 01:27:10,158
light v RGB out of that and then we

1620
01:27:08,479 --> 01:27:13,340
clamp to make sure we're only using the

1621
01:27:10,158 --> 01:27:16,069
positive portion of it right so if it

1622
01:27:13,340 --> 01:27:18,378
was zero we'd get min zero and that I'm

1623
01:27:16,069 --> 01:27:20,268
max it on that rather which would just

1624
01:27:18,378 --> 01:27:31,038
be either zero or if it's a positive

1625
01:27:20,269 --> 01:27:34,399
value we'd use the value so I don't

1626
01:27:31,038 --> 01:27:37,188
really have an explanation for why it's

1627
01:27:34,399 --> 01:27:41,389
looking the way it's looking I guess one

1628
01:27:37,189 --> 01:27:43,399
thing is we're not are we how are we

1629
01:27:41,389 --> 01:27:51,550
dealing with the light intensity here in

1630
01:27:43,399 --> 01:27:51,550
terms of of clamping that

1631
01:28:01,960 --> 01:28:05,739
so it looks like yeah when we do the

1632
01:28:04,180 --> 01:28:08,020
summation of the light here we're just

1633
01:28:05,739 --> 01:28:10,090
adding in just one irradiance and then I

1634
01:28:08,020 --> 01:28:21,060
assume we clamp it afterwards but maybe

1635
01:28:10,090 --> 01:28:21,060
we don't and that would be bad now we do

1636
01:28:28,590 --> 01:28:33,300
so when we call some light right we

1637
01:28:31,198 --> 01:28:35,698
multiply it and then we clamp it on the

1638
01:28:33,300 --> 01:28:37,260
way out so we don't have a problem with

1639
01:28:35,698 --> 01:28:42,689
it overflowing or anything like that as

1640
01:28:37,260 --> 01:28:45,900
far as I can tell so yeah so I'm not

1641
01:28:42,689 --> 01:28:50,000
sure what we're seeing there it looks

1642
01:28:45,899 --> 01:28:58,348
like it sort of works for a moment

1643
01:28:50,000 --> 01:29:00,420
almost but then it kind of doesn't right

1644
01:28:58,349 --> 01:29:02,159
like it sort of looks like it's working

1645
01:29:00,420 --> 01:29:06,380
and then it sort of settles down to a

1646
01:29:02,158 --> 01:29:06,379
value that that definitely isn't working

1647
01:29:07,460 --> 01:29:12,689
and I guess I don't have an explanation

1648
01:29:11,010 --> 01:29:13,800
for that we're gonna have to maybe step

1649
01:29:12,689 --> 01:29:17,000
to the bugger and take a look at what

1650
01:29:13,800 --> 01:29:17,000
some of those values actually are

1651
01:29:35,189 --> 01:29:38,219
and by the way this may be something

1652
01:29:36,899 --> 01:29:40,259
that's just not going to work it's just

1653
01:29:38,219 --> 01:29:43,319
a way of trying to prevent us from

1654
01:29:40,260 --> 01:29:45,270
having the problem where we have to

1655
01:29:43,319 --> 01:29:48,059
overfill every time we take a light

1656
01:29:45,270 --> 01:29:50,130
sample but maybe that is what we should

1657
01:29:48,060 --> 01:29:53,100
be doing right like maybe we should be

1658
01:29:50,130 --> 01:29:56,550
summing these using negative weights and

1659
01:29:53,100 --> 01:29:59,850
stuff like that and we'll see but yeah

1660
01:29:56,550 --> 01:30:01,920
that's really weird so why would we work

1661
01:29:59,850 --> 01:30:04,530
right up until the point where we stop

1662
01:30:01,920 --> 01:30:07,739
averaging and then it doesn't work

1663
01:30:04,529 --> 01:30:09,559
anymore why would that be the case that

1664
01:30:07,738 --> 01:30:12,000
doesn't really make good sense to me

1665
01:30:09,560 --> 01:30:14,910
what's going on there cuz there must be

1666
01:30:12,000 --> 01:30:16,948
some reason and I don't know what that

1667
01:30:14,909 --> 01:30:19,139
reason would be it could be that our

1668
01:30:16,948 --> 01:30:21,869
light weight Falls to zero so you know

1669
01:30:19,140 --> 01:30:32,130
what we could do to so we could do

1670
01:30:21,869 --> 01:30:37,289
something where we could do this so this

1671
01:30:32,130 --> 01:30:40,260
is sort of saying like hey man tell us

1672
01:30:37,289 --> 01:30:42,600
what the total waiting value is that you

1673
01:30:40,260 --> 01:30:46,860
were able to gather and if you weren't

1674
01:30:42,600 --> 01:30:49,020
able to gather anything mark this as as

1675
01:30:46,859 --> 01:30:54,029
being like the bright purple like

1676
01:30:49,020 --> 01:31:00,120
nonsense thing right and just so we can

1677
01:30:54,029 --> 01:31:03,869
see like what's going on there again

1678
01:31:00,119 --> 01:31:05,519
that's like super weird right like but

1679
01:31:03,869 --> 01:31:07,670
you can see that that's the problem it's

1680
01:31:05,520 --> 01:31:09,930
not able to gather any weight anymore

1681
01:31:07,670 --> 01:31:11,640
which doesn't really make any sense cuz

1682
01:31:09,930 --> 01:31:13,770
it's pretty clear that there was some

1683
01:31:11,640 --> 01:31:15,690
weight to be gathered there from the

1684
01:31:13,770 --> 01:31:18,600
other from the forward side of things

1685
01:31:15,689 --> 01:31:20,279
like you know it seems like you could

1686
01:31:18,600 --> 01:31:22,199
have easily gathered some light from at

1687
01:31:20,279 --> 01:31:24,659
least one of these directions you know

1688
01:31:22,198 --> 01:31:28,250
what I mean so I'm not sure why it would

1689
01:31:24,659 --> 01:31:32,219
be having such a hard time with that

1690
01:31:28,250 --> 01:31:33,750
with that gather right and maybe so

1691
01:31:32,219 --> 01:31:36,689
maybe there's like a bug in the way this

1692
01:31:33,750 --> 01:31:39,020
thing was going let's take a quick look

1693
01:31:36,689 --> 01:31:39,019
at this

1694
01:31:49,719 --> 01:32:04,510
so I don't see anything but circularly

1695
01:31:53,529 --> 01:32:18,519
weird about it I mean it looks

1696
01:32:04,510 --> 01:32:20,050
reasonable enough anyway hmm and in fact

1697
01:32:18,520 --> 01:32:22,120
even just looking here it doesn't make

1698
01:32:20,050 --> 01:32:24,699
much sense because if you were gonna

1699
01:32:22,119 --> 01:32:25,988
fill in this value right here it seems

1700
01:32:24,698 --> 01:32:30,719
like you would be able to fill it in

1701
01:32:25,988 --> 01:32:30,718
with like these two values here right

1702
01:32:34,050 --> 01:32:39,230
and I have no idea

1703
01:32:36,979 --> 01:32:42,409
by that snapping in that way either look

1704
01:32:39,229 --> 01:32:44,769
we've got we've got issues um let's take

1705
01:32:42,409 --> 01:32:47,449
a look at one thing that I would like to

1706
01:32:44,770 --> 01:32:48,980
take a look at here I don't really know

1707
01:32:47,449 --> 01:32:50,659
I don't think we should have any D

1708
01:32:48,979 --> 01:32:54,679
normal problems but you know maybe we do

1709
01:32:50,659 --> 01:32:56,300
I want to sort of add a clamp thing so

1710
01:32:54,680 --> 01:33:03,320
what I might want to do here is say

1711
01:32:56,300 --> 01:33:07,640
let's let's change this back to a zero

1712
01:33:03,319 --> 01:33:12,619
clamp there and when we do our averaging

1713
01:33:07,640 --> 01:33:15,950
so when we do our blend so ear blend V

1714
01:33:12,619 --> 01:33:18,439
and u and whatever right so this part

1715
01:33:15,949 --> 01:33:20,000
that we do just before hand what I'd

1716
01:33:18,439 --> 01:33:23,229
like to do here is say let's actually

1717
01:33:20,000 --> 01:33:27,050
make sure that these kind of blend to

1718
01:33:23,229 --> 01:33:31,039
actual zero so after we compute whatever

1719
01:33:27,050 --> 01:33:33,619
the you know this light C value is let's

1720
01:33:31,039 --> 01:33:35,659
go ahead and clamp these so we're doing

1721
01:33:33,619 --> 01:33:38,359
a normalization here and maybe that's

1722
01:33:35,659 --> 01:33:41,210
part of the problem I don't know but

1723
01:33:38,359 --> 01:33:46,130
let's take the light C value here and

1724
01:33:41,210 --> 01:33:51,739
make sure that that is actually clamped

1725
01:33:46,130 --> 01:33:54,260
as well so if we take what do we have

1726
01:33:51,738 --> 01:33:57,529
for clamping here for vectors so if I

1727
01:33:54,260 --> 01:33:59,390
want to clamp a vector so that it clamps

1728
01:33:57,529 --> 01:34:01,670
down to zero I guess what I want to do

1729
01:33:59,390 --> 01:34:06,829
is is really something like this where I

1730
01:34:01,670 --> 01:34:09,710
say like look if the light C 0 R value

1731
01:34:06,829 --> 01:34:18,340
is less than like you know some nominal

1732
01:34:09,710 --> 01:34:20,989
value then I want it to be clamped right

1733
01:34:18,340 --> 01:34:23,329
so I'm basically just saying I don't

1734
01:34:20,988 --> 01:34:27,529
want tiny values in here

1735
01:34:23,329 --> 01:34:29,779
I don't want little bits right so just

1736
01:34:27,529 --> 01:34:32,090
make sure that we clamp out these values

1737
01:34:29,779 --> 01:34:33,710
after we do the interpolation so that we

1738
01:34:32,090 --> 01:34:37,069
don't get anything like particularly

1739
01:34:33,710 --> 01:34:39,319
tiny I don't think that has anything to

1740
01:34:37,069 --> 01:34:43,279
do with it but I would like to just get

1741
01:34:39,319 --> 01:34:46,699
that out of the way right so now we can

1742
01:34:43,279 --> 01:34:50,090
just test for actual 0 and get what we

1743
01:34:46,699 --> 01:34:52,309
expect right and that's fine

1744
01:34:50,090 --> 01:34:53,900
again I still I have absolutely no idea

1745
01:34:52,310 --> 01:34:56,090
where those weird interpolation

1746
01:34:53,899 --> 01:34:58,839
artifacts are coming from like I have no

1747
01:34:56,090 --> 01:35:09,590
I don't even have the slightest idea of

1748
01:34:58,840 --> 01:35:11,179
why we're getting them and I also don't

1749
01:35:09,590 --> 01:35:13,250
understand why the interpolation is

1750
01:35:11,179 --> 01:35:15,050
breaking at that point that

1751
01:35:13,250 --> 01:35:16,849
interpolation should still have been

1752
01:35:15,050 --> 01:35:19,820
smooth because there's still information

1753
01:35:16,849 --> 01:35:21,730
in there and I guess it was all the same

1754
01:35:19,819 --> 01:35:24,500
value but that doesn't make any sense so

1755
01:35:21,729 --> 01:35:28,299
something's busted with that with the

1756
01:35:24,500 --> 01:35:31,550
way that that's like interpolating the

1757
01:35:28,300 --> 01:35:33,800
values in that area and I don't know why

1758
01:35:31,550 --> 01:35:35,690
that's happening either so like very

1759
01:35:33,800 --> 01:35:38,900
strange stuff happening here that's not

1760
01:35:35,689 --> 01:35:41,539
logical and I'm not sure where it's

1761
01:35:38,899 --> 01:35:45,649
coming from it feels to me like a

1762
01:35:41,539 --> 01:35:47,300
problem where we're clamping something

1763
01:35:45,649 --> 01:35:49,879
in like the shader or something where we

1764
01:35:47,300 --> 01:35:51,500
don't where we shouldn't be or not

1765
01:35:49,880 --> 01:35:55,609
clamping something that we should be one

1766
01:35:51,500 --> 01:35:57,770
or the other but I do not know how how

1767
01:35:55,609 --> 01:36:00,259
we would be getting that happening here

1768
01:35:57,770 --> 01:36:01,760
because we're only we just clamp after

1769
01:36:00,260 --> 01:36:05,179
the interpolation like the interpolation

1770
01:36:01,760 --> 01:36:07,099
happens here right so it shouldn't

1771
01:36:05,179 --> 01:36:09,349
really be possible to have that occur

1772
01:36:07,099 --> 01:36:13,010
and I don't know where that's coming

1773
01:36:09,349 --> 01:36:15,889
from if we turn this off entirely so we

1774
01:36:13,010 --> 01:36:18,289
just don't do any of this right so let's

1775
01:36:15,889 --> 01:36:24,409
suppose we just said all right you know

1776
01:36:18,289 --> 01:36:29,079
this this goes away so now we're just

1777
01:36:24,408 --> 01:36:29,079
letting it be back what it used to be

1778
01:36:37,069 --> 01:36:40,808
I mean that's the part right that I mean

1779
01:36:39,078 --> 01:36:44,268
that just doesn't make any sense

1780
01:36:40,809 --> 01:36:46,760
right it just doesn't make any sense

1781
01:36:44,269 --> 01:36:48,889
I don't I do not fundamentally know how

1782
01:36:46,760 --> 01:36:51,440
we're getting these values so we have a

1783
01:36:48,889 --> 01:36:53,750
bug I'm pretty positive we just have a

1784
01:36:51,439 --> 01:36:56,960
bug I don't think this is like an aspect

1785
01:36:53,750 --> 01:36:59,078
of the scheme but where is it coming

1786
01:36:56,960 --> 01:36:59,078
from

1787
01:36:59,179 --> 01:37:04,250
so thing one would be let's regularize

1788
01:37:02,059 --> 01:37:05,538
our normals I guess so let's just

1789
01:37:04,250 --> 01:37:14,000
pretend to our normals or the same

1790
01:37:05,538 --> 01:37:15,920
normal and see if this is the color

1791
01:37:14,000 --> 01:37:18,019
Channel or the normal channel because

1792
01:37:15,920 --> 01:37:21,199
that's like just one way I can start to

1793
01:37:18,019 --> 01:37:24,019
try to break this problem down so here

1794
01:37:21,198 --> 01:37:26,419
we have only one normal direction right

1795
01:37:24,019 --> 01:37:29,900
and so the question is like if we

1796
01:37:26,420 --> 01:37:38,269
isolate just the color channel right do

1797
01:37:29,899 --> 01:37:44,388
we see weird things happening and I mean

1798
01:37:38,269 --> 01:37:47,570
I would say pretty much no right I don't

1799
01:37:44,389 --> 01:37:49,760
so if I actually only have the color

1800
01:37:47,569 --> 01:37:53,299
channel in the mix it seems pretty good

1801
01:37:49,760 --> 01:37:57,800
what happens if I fill so now I am going

1802
01:37:53,300 --> 01:37:59,360
to include the fill right I'm going to

1803
01:37:57,800 --> 01:38:01,489
include the fill but I'm going to force

1804
01:37:59,359 --> 01:38:04,729
the normals out so we're just filling in

1805
01:38:01,488 --> 01:38:15,169
the color values not the normal values

1806
01:38:04,729 --> 01:38:23,238
right so does that get weird kind of it

1807
01:38:15,170 --> 01:38:24,619
still doesn't make any sense at all so

1808
01:38:23,238 --> 01:38:27,649
maybe we can just work

1809
01:38:24,619 --> 01:38:30,590
just this and figure out what's going on

1810
01:38:27,649 --> 01:38:32,899
there right because that's just totally

1811
01:38:30,590 --> 01:38:34,699
bizarre now some of it makes some sense

1812
01:38:32,899 --> 01:38:37,670
because as the shadow moves into place

1813
01:38:34,699 --> 01:38:39,889
you are changing which values you know

1814
01:38:37,670 --> 01:38:43,069
are present and which ones aren't but I

1815
01:38:39,890 --> 01:38:45,710
mean what the heck like what even is

1816
01:38:43,069 --> 01:38:47,090
that I don't really know if you asked me

1817
01:38:45,710 --> 01:38:51,170
to produce that I'm not sure I would

1818
01:38:47,090 --> 01:38:54,770
know how right like it's like half of

1819
01:38:51,170 --> 01:38:56,359
the it's inside one half of the voxels

1820
01:38:54,770 --> 01:38:58,280
has stuff and on the other side it

1821
01:38:56,359 --> 01:39:00,500
doesn't I mean I don't even know how I

1822
01:38:58,279 --> 01:39:02,210
would get that value especially because

1823
01:39:00,500 --> 01:39:04,640
now we're taking the normal out of the

1824
01:39:02,210 --> 01:39:08,270
equation we're hard assigning everything

1825
01:39:04,640 --> 01:39:10,720
to point straight up right and so all of

1826
01:39:08,270 --> 01:39:20,750
the color values were assigning here are

1827
01:39:10,720 --> 01:39:22,760
you know are specific so I don't even

1828
01:39:20,750 --> 01:39:25,340
know like are we even are we passing

1829
01:39:22,760 --> 01:39:27,350
down these values wrong even could that

1830
01:39:25,340 --> 01:39:29,720
be part of the mix I don't know right so

1831
01:39:27,350 --> 01:39:32,329
but something's really strange and so we

1832
01:39:29,720 --> 01:39:35,710
need to kind of make sure we know what's

1833
01:39:32,329 --> 01:39:38,539
going on here with that so let's let's

1834
01:39:35,710 --> 01:39:41,180
yeah let's let's keep pushing forward on

1835
01:39:38,539 --> 01:39:43,609
that so if we have light voxel n here

1836
01:39:41,180 --> 01:39:53,270
where we are hard setting these normals

1837
01:39:43,609 --> 01:39:55,809
and we hmm what would be the next ploy

1838
01:39:53,270 --> 01:39:55,810
here

1839
01:40:04,050 --> 01:40:20,980
hmm I mean one thing is like yeah it's

1840
01:40:08,738 --> 01:40:23,138
not a particularly good filter and I

1841
01:40:20,979 --> 01:40:27,579
suppose another aspect of it is yeah I

1842
01:40:23,139 --> 01:40:33,159
don't know I'm not sure let me take this

1843
01:40:27,579 --> 01:40:37,559
off for a second so if we don't run any

1844
01:40:33,158 --> 01:40:37,559
of this what do we actually get

1845
01:40:46,689 --> 01:40:54,259
so one really weird thing about that

1846
01:40:50,170 --> 01:40:56,720
that I guess I don't really know well

1847
01:40:54,260 --> 01:40:58,640
yeah well no that's alright because if

1848
01:40:56,720 --> 01:41:00,289
you look at where the where the thing is

1849
01:40:58,640 --> 01:41:13,280
actually centered you get a reasonable

1850
01:41:00,289 --> 01:41:21,710
result there so I guess the interesting

1851
01:41:13,279 --> 01:41:23,000
thing for me here is I'm wondering yeah

1852
01:41:21,710 --> 01:41:26,109
I mean even right there

1853
01:41:23,000 --> 01:41:30,500
I just I'm wondering what that is from I

1854
01:41:26,109 --> 01:41:32,359
just don't know is that just from a

1855
01:41:30,500 --> 01:41:35,810
normal interpolation problem so what if

1856
01:41:32,359 --> 01:41:38,299
I turn if I stuff the normal so in here

1857
01:41:35,810 --> 01:41:40,660
I say all right I'm I'm stuffing the

1858
01:41:38,300 --> 01:41:40,659
normal

1859
01:41:49,640 --> 01:41:55,170
what happens to this chunk right if I

1860
01:41:53,250 --> 01:41:58,380
take the exact same place and I stuff

1861
01:41:55,170 --> 01:42:05,760
the normal value to just be one right

1862
01:41:58,380 --> 01:42:07,470
looks like it didn't like that oh so I

1863
01:42:05,760 --> 01:42:10,699
just want to know what happens here is

1864
01:42:07,470 --> 01:42:12,869
it a normal or is it a color value right

1865
01:42:10,699 --> 01:42:14,670
I guess that doesn't really help me

1866
01:42:12,869 --> 01:42:17,090
because it's these are pointing

1867
01:42:14,670 --> 01:42:19,050
perpendicular anyway so let me try

1868
01:42:17,090 --> 01:42:22,310
making sure they point in the right

1869
01:42:19,050 --> 01:42:24,150
direction to reflect the light oh

1870
01:42:22,310 --> 01:42:34,350
actually that's the exact wrong

1871
01:42:24,149 --> 01:42:37,399
direction sorry so it's definitely a bug

1872
01:42:34,350 --> 01:42:37,400
with the normal

1873
01:42:44,069 --> 01:42:48,448
and I guess it's just cuz the normal

1874
01:42:45,868 --> 01:42:58,710
interpolates across these two and can't

1875
01:42:48,448 --> 01:43:02,069
properly swing I guess what happens if I

1876
01:42:58,710 --> 01:43:06,960
just draw the normal why don't you tell

1877
01:43:02,069 --> 01:43:08,549
me what you think the normal is so to do

1878
01:43:06,960 --> 01:43:12,328
that I'm just gonna say the result here

1879
01:43:08,550 --> 01:43:15,510
is actually just the light normal happy

1880
01:43:12,328 --> 01:43:18,000
birthday and of course I can't quite do

1881
01:43:15,510 --> 01:43:26,090
that I've got to maybe do something more

1882
01:43:18,000 --> 01:43:28,460
like this right just a

1883
01:43:26,090 --> 01:43:32,060
into the visible range but other than

1884
01:43:28,460 --> 01:43:35,060
that yeah there you go so it's the

1885
01:43:32,060 --> 01:43:37,700
normal go ahead and tell me what you

1886
01:43:35,060 --> 01:43:44,920
think the normal is just draw it that's

1887
01:43:37,699 --> 01:43:44,920
gonna be the new light value right I

1888
01:43:46,810 --> 01:43:58,780
really need to make that hot load why is

1889
01:43:51,409 --> 01:43:58,779
this not what happened there

1890
01:44:05,179 --> 01:44:12,529
work right am I missing something

1891
01:44:10,519 --> 01:44:21,380
there we go I know what happened there

1892
01:44:12,529 --> 01:44:23,988
so this is really instructive because

1893
01:44:21,380 --> 01:44:26,958
that should produce a visible normal at

1894
01:44:23,988 --> 01:44:28,728
all times if that's zero what that means

1895
01:44:26,958 --> 01:44:33,438
is that the normal the normal was

1896
01:44:28,729 --> 01:44:35,300
literally zero zero zero right so that's

1897
01:44:33,439 --> 01:44:39,769
like actually getting a zero zero zero

1898
01:44:35,300 --> 01:44:41,840
normal the reason that is so weird is

1899
01:44:39,769 --> 01:44:45,708
just and I guess it's because we're

1900
01:44:41,840 --> 01:44:47,420
doing in normal eyes is is how it's that

1901
01:44:45,708 --> 01:44:50,359
just must be where the thing actually

1902
01:44:47,420 --> 01:44:55,458
Falls to zero you get that pattern right

1903
01:44:50,359 --> 01:45:00,998
so I'm assuming and you know if I do

1904
01:44:55,458 --> 01:45:06,670
this it will be a gradual fade out right

1905
01:45:00,998 --> 01:45:06,670
instead of a hard line let's see

1906
01:45:16,539 --> 01:45:23,439
and maybe that's not true it doesn't

1907
01:45:18,130 --> 01:45:25,390
look true so yeah I don't understand how

1908
01:45:23,439 --> 01:45:27,429
that's possible that should be gradual

1909
01:45:25,390 --> 01:45:30,490
right because here we're just doing the

1910
01:45:27,430 --> 01:45:33,550
exact interpolation it should not be

1911
01:45:30,489 --> 01:45:35,559
possible for this to go from having some

1912
01:45:33,550 --> 01:45:37,720
and to not having some immediately now I

1913
01:45:35,560 --> 01:45:40,600
guess this clamp with the inner product

1914
01:45:37,720 --> 01:45:56,520
may be good but not really because again

1915
01:45:40,600 --> 01:46:01,980
it should gradually go to there hmm

1916
01:45:56,520 --> 01:46:01,980
how's this light oh so wait a minute

1917
01:46:04,439 --> 01:46:24,869
what is the spec see calculation here

1918
01:46:07,500 --> 01:46:27,069
ref see now so I there we go

1919
01:46:24,869 --> 01:46:37,960
so this should it really be outside I

1920
01:46:27,069 --> 01:46:41,380
suppose but even so I'm not sure that

1921
01:46:37,960 --> 01:46:43,810
explains what I was seeing but all right

1922
01:46:41,380 --> 01:46:46,810
so now we're not doing it inside the ax

1923
01:46:43,810 --> 01:46:48,430
statement there there we go so now we

1924
01:46:46,810 --> 01:46:51,550
can actually see the normals and they're

1925
01:46:48,430 --> 01:46:54,119
right there now we're okay so what we

1926
01:46:51,550 --> 01:46:59,230
were seeing there was specifically a

1927
01:46:54,119 --> 01:47:04,000
problem with this branch this light D C

1928
01:46:59,229 --> 01:47:06,639
greater than zero bit so it's the inner

1929
01:47:04,000 --> 01:47:09,010
product between the light normal which

1930
01:47:06,640 --> 01:47:12,130
is what's coming in here and the world

1931
01:47:09,010 --> 01:47:14,860
normal going to zero and I guess the

1932
01:47:12,130 --> 01:47:16,989
problem that we're then having is we're

1933
01:47:14,859 --> 01:47:19,569
having a problem that our light

1934
01:47:16,989 --> 01:47:22,329
attenuation is not attenuating the

1935
01:47:19,569 --> 01:47:26,799
entire value like it should be so like

1936
01:47:22,329 --> 01:47:29,260
light DC yeah I guess the problem is

1937
01:47:26,800 --> 01:47:30,389
light DC really needs to multiply this

1938
01:47:29,260 --> 01:47:34,350
whole thing

1939
01:47:30,389 --> 01:47:36,289
right because this if this branch is not

1940
01:47:34,350 --> 01:47:40,829
gonna operate when the light is behind

1941
01:47:36,289 --> 01:47:43,800
we can't we need this thing to fall to

1942
01:47:40,829 --> 01:47:46,859
zero gradually right so that tells me

1943
01:47:43,800 --> 01:47:52,010
exactly the part that I was missing so

1944
01:47:46,859 --> 01:47:52,009
that's good so what we need is this I

1945
01:47:53,868 --> 01:47:56,868
guess

1946
01:47:57,260 --> 01:48:04,850
so that we have that cosine fall-off

1947
01:48:00,439 --> 01:48:06,689
baked-in always because we can't not

1948
01:48:04,850 --> 01:48:08,250
there may be a way to write that

1949
01:48:06,689 --> 01:48:10,049
equation better so that we do it in a

1950
01:48:08,250 --> 01:48:12,510
different way but I think that maybe

1951
01:48:10,050 --> 01:48:15,500
what we're looking for

1952
01:48:12,510 --> 01:48:18,030
oops I didn't mean to leave that running

1953
01:48:15,500 --> 01:48:24,710
okay so let's take a look at what this

1954
01:48:18,029 --> 01:48:24,710
does now and see if that's better

1955
01:48:26,840 --> 01:48:37,829
nope still still screwed up I mean maybe

1956
01:48:36,420 --> 01:48:42,060
it's a little better you can see that

1957
01:48:37,829 --> 01:48:43,079
it's not as hard of a line but still

1958
01:48:42,060 --> 01:48:50,969
pretty bad right there

1959
01:48:43,079 --> 01:48:53,118
so what's the deal where is that coming

1960
01:48:50,969 --> 01:48:53,118
from

1961
01:48:57,578 --> 01:49:07,000
and again let's now let's move this

1962
01:49:00,520 --> 01:49:13,389
inside so this way we are just going to

1963
01:49:07,000 --> 01:49:17,979
do this or you know what let me do it

1964
01:49:13,389 --> 01:49:22,210
this way so if we just say light DC

1965
01:49:17,979 --> 01:49:26,229
times this value so I'm just going to

1966
01:49:22,210 --> 01:49:27,639
take whatever light DC is and I'm going

1967
01:49:26,229 --> 01:49:30,428
to multiply it in to see if it's

1968
01:49:27,639 --> 01:49:32,380
smoothly varying right so I know those

1969
01:49:30,429 --> 01:49:33,880
normals we looked at those before so I'm

1970
01:49:32,380 --> 01:49:37,409
just gonna look so basically just

1971
01:49:33,880 --> 01:49:40,868
multiplying by light DC gives you crap

1972
01:49:37,408 --> 01:49:42,759
it has hard lines in it and we have no

1973
01:49:40,868 --> 01:49:46,000
idea where they come from so that's good

1974
01:49:42,760 --> 01:49:48,789
information so now we know we have some

1975
01:49:46,000 --> 01:49:51,578
critical flaw with light DC where it

1976
01:49:48,789 --> 01:49:54,219
doesn't smoothly fall to 0 as you

1977
01:49:51,578 --> 01:49:56,139
interpolate these two things right I

1978
01:49:54,219 --> 01:49:59,739
mean that's basically what we've

1979
01:49:56,139 --> 01:50:03,359
determined something about it is busted

1980
01:49:59,738 --> 01:50:10,839
in the sense that if you just multiply

1981
01:50:03,359 --> 01:50:14,408
it by anything you get badness now what

1982
01:50:10,840 --> 01:50:20,199
I could do is say alright let's actually

1983
01:50:14,408 --> 01:50:25,769
take this out let's just do light DC

1984
01:50:20,198 --> 01:50:30,488
times white so I just want to look at

1985
01:50:25,770 --> 01:50:31,929
only what is is present in the light DC

1986
01:50:30,488 --> 01:50:37,089
channel that's all I'm doing is

1987
01:50:31,929 --> 01:50:40,090
rendering that right and yeah I mean so

1988
01:50:37,090 --> 01:50:43,420
basically that's all we need all we need

1989
01:50:40,090 --> 01:50:46,869
is that one value and we will get the

1990
01:50:43,420 --> 01:50:50,139
error light DC itself is just critically

1991
01:50:46,868 --> 01:50:53,859
broken right all right so how is that

1992
01:50:50,139 --> 01:50:57,130
possible how is it that that is not

1993
01:50:53,859 --> 01:50:59,109
smoothly interpolating and you know

1994
01:50:57,130 --> 01:51:05,230
presumably it's because our light end

1995
01:50:59,109 --> 01:51:07,179
value is passing through something but

1996
01:51:05,229 --> 01:51:09,669
again I'm not sure how it's not passing

1997
01:51:07,179 --> 01:51:10,960
through smoothly though because remember

1998
01:51:09,670 --> 01:51:13,569
we're not normal

1999
01:51:10,960 --> 01:51:17,140
lysing it now it's literally just

2000
01:51:13,569 --> 01:51:20,289
getting directly interpolated so how

2001
01:51:17,140 --> 01:51:22,690
could it be that steep it doesn't seem

2002
01:51:20,289 --> 01:51:24,819
to make a whole lot of sense does it it

2003
01:51:22,689 --> 01:51:28,859
should have to be smoothly passing

2004
01:51:24,819 --> 01:51:28,859
through those values right

2005
01:51:39,090 --> 01:51:46,650
and I do not know I'm gonna go into the

2006
01:51:43,559 --> 01:51:48,690
OpenGL code for a second here and turn

2007
01:51:46,649 --> 01:51:50,670
off the interpolation just to see what I

2008
01:51:48,689 --> 01:51:55,919
can see about that

2009
01:51:50,670 --> 01:51:59,250
so if I was to take the the linear blend

2010
01:51:55,920 --> 01:52:00,960
here and turn that off we really need to

2011
01:51:59,250 --> 01:52:04,550
do is I guess go inspect the actual

2012
01:52:00,960 --> 01:52:09,000
values and maybe I should do that in

2013
01:52:04,550 --> 01:52:11,489
like render dock or something right

2014
01:52:09,000 --> 01:52:13,469
so I can see what the actual values are

2015
01:52:11,488 --> 01:52:14,549
that it's interpolate in between so I

2016
01:52:13,469 --> 01:52:15,960
really want to do is set a break point

2017
01:52:14,550 --> 01:52:18,619
there and just see what the actual

2018
01:52:15,960 --> 01:52:18,618
values are

2019
01:52:30,448 --> 01:52:34,948
so here's the unincorporated values

2020
01:52:52,100 --> 01:52:59,030
and again I'm not really sure what the

2021
01:52:54,840 --> 01:53:02,750
problem is here like why those would

2022
01:52:59,029 --> 01:53:02,750
interpolate the way they are

2023
01:53:20,479 --> 01:53:23,989
mmm I'm super stumped right now I mean

2024
01:53:22,819 --> 01:53:26,269
this looks like a thing that's gonna

2025
01:53:23,989 --> 01:53:29,139
take many hours to work out right like I

2026
01:53:26,270 --> 01:53:34,540
probably have to go back actually like

2027
01:53:29,140 --> 01:53:34,539
set this up in some way that I can test

2028
01:53:34,569 --> 01:53:38,659
outside of the shader cuz like these are

2029
01:53:37,279 --> 01:53:40,099
not things you really wanted to bug

2030
01:53:38,659 --> 01:53:42,229
inside a shader when they get this

2031
01:53:40,100 --> 01:53:43,550
complicated right I need to be able to

2032
01:53:42,229 --> 01:53:45,309
look at them and of course you can't

2033
01:53:43,550 --> 01:53:48,110
debug GPU code it's not really possible

2034
01:53:45,310 --> 01:53:51,770
so I probably need to do this externally

2035
01:53:48,109 --> 01:53:55,130
and then work it through forward looking

2036
01:53:51,770 --> 01:53:59,420
at the lighting value here again if it's

2037
01:53:55,130 --> 01:54:01,130
just the clamp that should not there

2038
01:53:59,420 --> 01:54:02,449
should not be any way that you can

2039
01:54:01,130 --> 01:54:04,730
produce what we're seeing from this

2040
01:54:02,449 --> 01:54:07,429
equation I have no idea how that can be

2041
01:54:04,729 --> 01:54:09,439
possible and the reason for that is that

2042
01:54:07,430 --> 01:54:13,490
light n should be able to be

2043
01:54:09,439 --> 01:54:15,169
interpolated in this way the inner

2044
01:54:13,489 --> 01:54:16,939
product will take its length into

2045
01:54:15,170 --> 01:54:21,609
account so as it shrinks to zero you

2046
01:54:16,939 --> 01:54:21,609
should see a smooth blend to zero right

2047
01:54:22,989 --> 01:54:27,590
so how it's producing a non smooth blend

2048
01:54:25,609 --> 01:54:28,399
is is totally beyond me what I would

2049
01:54:27,590 --> 01:54:30,319
like to do I guess

2050
01:54:28,399 --> 01:54:35,719
is take a look at light and more

2051
01:54:30,319 --> 01:54:37,909
specifically here and figure out if I

2052
01:54:35,720 --> 01:54:47,510
actually just output that what it looks

2053
01:54:37,909 --> 01:54:51,079
like so for example if I just run this

2054
01:54:47,510 --> 01:54:54,470
where I output light and directly

2055
01:54:51,079 --> 01:54:56,689
I thought we saw no weird values right

2056
01:54:54,470 --> 01:54:59,930
so I thought what we saw here was

2057
01:54:56,689 --> 01:55:01,849
everything was smooth and that does

2058
01:54:59,930 --> 01:55:05,960
appear to be the case if I turn off

2059
01:55:01,850 --> 01:55:08,780
modulation so you know up here where we

2060
01:55:05,960 --> 01:55:11,060
do this if I just turn off the textures

2061
01:55:08,779 --> 01:55:15,259
so here's where we're taking like our

2062
01:55:11,060 --> 01:55:16,970
texture sample for example so if here

2063
01:55:15,260 --> 01:55:26,560
instead of a multiplication I just do in

2064
01:55:16,970 --> 01:55:31,230
equals right this is what the

2065
01:55:26,560 --> 01:55:43,720
actual normals look like we're just

2066
01:55:31,229 --> 01:55:45,369
putting it in there right and so what

2067
01:55:43,720 --> 01:55:50,470
you can see is you can see very clearly

2068
01:55:45,369 --> 01:55:53,609
where the zero values are right the

2069
01:55:50,470 --> 01:55:53,610
zeroes are right in there

2070
01:56:16,779 --> 01:56:21,550
but in general right I mean I don't see

2071
01:56:19,329 --> 01:56:23,229
anything else particularly weird so

2072
01:56:21,550 --> 01:56:26,279
y-you wouldn't be able to smoothly

2073
01:56:23,229 --> 01:56:35,559
interpolate it mean it looks smooth

2074
01:56:26,279 --> 01:56:37,630
right and like in here for example where

2075
01:56:35,560 --> 01:56:39,570
we were getting hard lines running

2076
01:56:37,630 --> 01:56:43,090
through the middle of this thing that

2077
01:56:39,569 --> 01:56:46,119
looks totally smooth now like I don't

2078
01:56:43,090 --> 01:56:46,420
see hard lines running running through

2079
01:56:46,119 --> 01:56:51,670
it

2080
01:56:46,420 --> 01:56:53,350
right you know everything looks gradual

2081
01:56:51,670 --> 01:56:55,119
and there isn't a really hard line I

2082
01:56:53,350 --> 01:57:02,289
mean I guess well you know I mean that's

2083
01:56:55,119 --> 01:57:09,039
pretty hard line I guess so maybe I

2084
01:57:02,289 --> 01:57:11,199
could believe that and this is sort of

2085
01:57:09,039 --> 01:57:13,420
in linear light space so I suppose once

2086
01:57:11,199 --> 01:57:22,179
we actually put those in there and

2087
01:57:13,420 --> 01:57:24,850
they're not encoded um I don't know I

2088
01:57:22,180 --> 01:57:27,480
suppose that there's some argument to be

2089
01:57:24,850 --> 01:57:39,880
made for maybe that is enough of

2090
01:57:27,479 --> 01:57:45,069
production of a hard light like maybe

2091
01:57:39,880 --> 01:57:49,270
that's just enough to produce a hard

2092
01:57:45,069 --> 01:57:52,019
line down that that side I don't feel

2093
01:57:49,270 --> 01:57:52,020
like it should be though

2094
01:58:01,359 --> 01:58:05,738
don't think it should be so another

2095
01:58:03,819 --> 01:58:08,349
question then I would have is suppose we

2096
01:58:05,738 --> 01:58:11,408
just didn't do light DC fall-off so

2097
01:58:08,350 --> 01:58:14,829
suppose light DC was always Phibes was

2098
01:58:11,408 --> 01:58:17,319
always point five let's say right so

2099
01:58:14,829 --> 01:58:19,809
we're just not going to use that and

2100
01:58:17,319 --> 01:58:23,789
we'll let let it apply the lighting

2101
01:58:19,810 --> 01:58:26,770
equation separately and we just won't

2102
01:58:23,789 --> 01:58:32,079
care about the fact that it's you know

2103
01:58:26,770 --> 01:58:42,159
doing sort of a weird Lac a fall off

2104
01:58:32,079 --> 01:58:43,840
there what do we get in that case and so

2105
01:58:42,158 --> 01:58:46,689
one interesting thing about that is we

2106
01:58:43,840 --> 01:58:51,730
still do have fairly hard lines along

2107
01:58:46,689 --> 01:58:53,349
the you know along this axis but you

2108
01:58:51,729 --> 01:58:56,979
know maybe again that's just because of

2109
01:58:53,350 --> 01:58:59,170
the way the interpolation breaks out but

2110
01:58:56,979 --> 01:59:02,289
you can see we don't have the bug

2111
01:58:59,170 --> 01:59:05,289
anymore so previously right you would

2112
01:59:02,289 --> 01:59:06,729
get it right in here as that normal to

2113
01:59:05,289 --> 01:59:09,069
the light source changed too

2114
01:59:06,729 --> 01:59:11,229
dramatically but once you take that out

2115
01:59:09,069 --> 01:59:16,859
of there now we're not really getting

2116
01:59:11,229 --> 01:59:16,859
that problem yet I mean

2117
01:59:23,720 --> 01:59:28,880
hmm so the inner product between the

2118
01:59:26,930 --> 01:59:32,450
light the direction to the light and the

2119
01:59:28,880 --> 01:59:36,739
world normal that is just causing us a

2120
01:59:32,449 --> 01:59:37,970
lot of problems and I guess we could do

2121
01:59:36,739 --> 01:59:40,789
something like we were doing before

2122
01:59:37,970 --> 01:59:42,440
where we allowed a wider berth there I

2123
01:59:40,789 --> 01:59:49,670
mean we could do something more like

2124
01:59:42,439 --> 01:59:52,460
this which was allowing sort of it to be

2125
01:59:49,670 --> 01:59:54,560
wider varying than it used to be I don't

2126
01:59:52,460 --> 01:59:59,449
feel like we should have been having to

2127
01:59:54,560 --> 02:00:02,270
do that but I suppose you know maybe

2128
01:59:59,449 --> 02:00:03,800
that makes a lot more sense and if you

2129
02:00:02,270 --> 02:00:06,410
look at what happens when we do allow

2130
02:00:03,800 --> 02:00:07,340
that you know we do get rid of a lot of

2131
02:00:06,409 --> 02:00:10,099
those artifacts

2132
02:00:07,340 --> 02:00:12,230
that's just allowing a wider angle of

2133
02:00:10,100 --> 02:00:15,050
incident light to a given surface so you

2134
02:00:12,229 --> 02:00:17,629
don't have to quite be within the 90

2135
02:00:15,050 --> 02:00:21,680
degree plane right and we do get a lot

2136
02:00:17,630 --> 02:00:26,960
better results doing that I guess I

2137
02:00:21,680 --> 02:00:35,810
would say for you know 6 and 1/2 dozen

2138
02:00:26,960 --> 02:00:44,569
of the other so I don't know I don't

2139
02:00:35,810 --> 02:00:48,610
know what I think about that probably

2140
02:00:44,569 --> 02:00:48,609
not much honestly

2141
02:00:56,889 --> 02:01:07,159
yeah anyway um so let's go ahead and

2142
02:01:05,059 --> 02:01:09,500
take a look at a couple of things first

2143
02:01:07,158 --> 02:01:12,529
then and then I'm gonna call it a call

2144
02:01:09,500 --> 02:01:14,510
it a day so if I turn back on the

2145
02:01:12,529 --> 02:01:17,658
flood-fill now I want to see what I end

2146
02:01:14,510 --> 02:01:19,039
up with but I'm not optimistic about

2147
02:01:17,658 --> 02:01:20,538
this just based on the problems that

2148
02:01:19,038 --> 02:01:23,300
we're having it looks like maybe flood

2149
02:01:20,538 --> 02:01:24,590
filling is not gonna cut it for us so

2150
02:01:23,300 --> 02:01:26,809
here's the flood fill I'll turn it back

2151
02:01:24,590 --> 02:01:29,538
on here's what we're looking at now

2152
02:01:26,809 --> 02:01:30,980
without it right get the stair-step if I

2153
02:01:29,538 --> 02:01:32,319
turn the flood fill back I'm assuming it

2154
02:01:30,979 --> 02:01:35,928
doesn't doesn't really do much for us

2155
02:01:32,319 --> 02:01:37,969
but I guess I don't really know so yeah

2156
02:01:35,929 --> 02:01:40,190
you can see that in fact the other thing

2157
02:01:37,969 --> 02:01:41,149
too is we got a lot brighter in areas

2158
02:01:40,189 --> 02:01:43,879
which we really shouldn't have been

2159
02:01:41,149 --> 02:01:47,000
doing so it looks like we've got a

2160
02:01:43,880 --> 02:01:49,250
little bit of an issue there and I'm not

2161
02:01:47,000 --> 02:01:50,840
sure why like this should never brighten

2162
02:01:49,250 --> 02:01:53,658
anything cuz it's only filling in things

2163
02:01:50,840 --> 02:01:55,699
that didn't exist before so I wonder if

2164
02:01:53,658 --> 02:01:57,019
that just is indicative that we screwed

2165
02:01:55,698 --> 02:01:58,669
something up like we're filling in

2166
02:01:57,020 --> 02:02:01,239
elements that we shouldn't be filling in

2167
02:01:58,670 --> 02:02:01,239
or something like that

2168
02:02:01,270 --> 02:02:12,469
that seems potentially like very bad

2169
02:02:08,270 --> 02:02:13,969
right so take a look so oh you know what

2170
02:02:12,469 --> 02:02:15,529
that's that's not the case that's

2171
02:02:13,969 --> 02:02:19,760
probably just cuz we left in one of our

2172
02:02:15,529 --> 02:02:21,529
normal overwrites did we yeah we did

2173
02:02:19,760 --> 02:02:31,309
that's just because of this let me get

2174
02:02:21,529 --> 02:02:35,029
rid of that so here's the flood fill

2175
02:02:31,309 --> 02:02:38,420
again and what you can see here is it

2176
02:02:35,029 --> 02:02:40,819
filled in some areas and others yeah you

2177
02:02:38,420 --> 02:02:42,819
can see it it just sucks right it

2178
02:02:40,819 --> 02:02:45,170
doesn't even make sense what it's doing

2179
02:02:42,819 --> 02:02:47,000
something really bizarre going on there

2180
02:02:45,170 --> 02:02:50,090
so I think our flood fill is also

2181
02:02:47,000 --> 02:02:51,170
critically broken and I guess like

2182
02:02:50,090 --> 02:02:52,730
taking a look at that and getting that

2183
02:02:51,170 --> 02:02:53,840
working again will be for next weekend

2184
02:02:52,729 --> 02:02:55,578
and then deciding whether we want to use

2185
02:02:53,840 --> 02:02:58,190
it at all as opposed to something that

2186
02:02:55,578 --> 02:03:02,179
maybe picks up residual values in cells

2187
02:02:58,189 --> 02:03:03,819
based on like again when we actually

2188
02:03:02,179 --> 02:03:06,618
know which light source were hitting

2189
02:03:03,819 --> 02:03:09,099
filling in the values there for what

2190
02:03:06,618 --> 02:03:10,989
those light sources would have been

2191
02:03:09,100 --> 02:03:12,789
if they were there right which we could

2192
02:03:10,989 --> 02:03:13,449
which is basically the spam box the way

2193
02:03:12,789 --> 02:03:17,109
we used to do

2194
02:03:13,449 --> 02:03:19,029
maybe we spam to some secondary piece so

2195
02:03:17,109 --> 02:03:22,349
we can fill those after the fact when we

2196
02:03:19,029 --> 02:03:26,649
detect dara'a in light there or whatever

2197
02:03:22,350 --> 02:03:28,990
so anyway why we're getting like why we

2198
02:03:26,649 --> 02:03:31,359
are not getting fills I don't know and

2199
02:03:28,989 --> 02:03:32,920
so looking at like there's got to be a

2200
02:03:31,359 --> 02:03:35,649
pretty simple bug in here but like

2201
02:03:32,920 --> 02:03:37,960
looking at how the fill happens why

2202
02:03:35,649 --> 02:03:41,500
we're not getting a fill there it

2203
02:03:37,960 --> 02:03:44,590
doesn't make sense right so you would

2204
02:03:41,500 --> 02:03:46,649
assume that this thing would fill like

2205
02:03:44,590 --> 02:03:48,640
more sensibly than its filling right now

2206
02:03:46,649 --> 02:03:50,319
because like for example right there

2207
02:03:48,640 --> 02:03:52,930
that should be pretty easy for this

2208
02:03:50,319 --> 02:03:55,329
thing to fill in you know right from

2209
02:03:52,930 --> 02:03:57,610
there or something it shouldn't be much

2210
02:03:55,329 --> 02:04:00,250
and why you're getting that snapping no

2211
02:03:57,609 --> 02:04:03,420
clue that's as it blends down to zero

2212
02:04:00,250 --> 02:04:11,560
it's snapping I guess because those

2213
02:04:03,420 --> 02:04:13,449
values themselves are are going to zero

2214
02:04:11,560 --> 02:04:15,130
so they're triggering the has light you

2215
02:04:13,449 --> 02:04:26,050
know call which is this stuff here right

2216
02:04:15,130 --> 02:04:30,579
and you know I mean that just that looks

2217
02:04:26,050 --> 02:04:34,210
fine I mean the other thing we could do

2218
02:04:30,579 --> 02:04:38,340
is try to smoothly vary this right so

2219
02:04:34,210 --> 02:04:38,340
you know we could do something like this

2220
02:04:47,359 --> 02:04:51,619
we're instead we just try to take like

2221
02:04:49,909 --> 02:04:53,059
how much light this thing actually has

2222
02:04:51,619 --> 02:05:05,720
in it or something like that

2223
02:04:53,060 --> 02:05:09,010
so we just take like you know so

2224
02:05:05,720 --> 02:05:09,010
something like that oops

2225
02:05:09,890 --> 02:05:14,180
which would be smoothly varying so this

2226
02:05:12,260 --> 02:05:16,220
way we wouldn't be having a hard cutoff

2227
02:05:14,180 --> 02:05:18,710
anywhere we would always just blend

2228
02:05:16,220 --> 02:05:22,039
things in as some kind of a function of

2229
02:05:18,710 --> 02:05:29,289
things right does this work

2230
02:05:22,039 --> 02:05:29,289
I guess not

2231
02:05:32,560 --> 02:05:36,620
and if we did something like that then

2232
02:05:35,090 --> 02:05:40,510
in here we're instead of doing something

2233
02:05:36,619 --> 02:05:44,689
like has light we would just use that

2234
02:05:40,510 --> 02:05:47,780
sort of that value as a multiplier so it

2235
02:05:44,689 --> 02:05:50,229
would be more like this oops maybe more

2236
02:05:47,779 --> 02:05:50,229
like this

2237
02:05:57,738 --> 02:06:02,449
so we could do something like if this

2238
02:05:59,569 --> 02:06:04,279
thing has too little light then we just

2239
02:06:02,449 --> 02:06:06,500
go through and we find out how much

2240
02:06:04,279 --> 02:06:24,229
light these things have something maybe

2241
02:06:06,500 --> 02:06:26,659
like this something like this and when

2242
02:06:24,229 --> 02:06:29,389
we do this blending then in here we

2243
02:06:26,659 --> 02:06:31,010
would just kind of take the end light

2244
02:06:29,390 --> 02:06:37,940
amount as like the blending weight

2245
02:06:31,010 --> 02:06:39,020
something like that and again I don't

2246
02:06:37,939 --> 02:06:40,699
really think any this is gonna work just

2247
02:06:39,020 --> 02:06:42,200
based on the experimentation today I

2248
02:06:40,699 --> 02:06:43,429
mean there could be some severe bugs in

2249
02:06:42,199 --> 02:06:44,929
here and maybe it works better than I

2250
02:06:43,430 --> 02:06:48,500
think it does because of the bug the

2251
02:06:44,930 --> 02:06:53,300
bugs or something but I'm not optimistic

2252
02:06:48,500 --> 02:06:57,199
of the flood film anyway so putting that

2253
02:06:53,300 --> 02:06:58,699
together right and then doing this when

2254
02:06:57,199 --> 02:07:00,649
we have this light amount here then we

2255
02:06:58,699 --> 02:07:03,559
could sort of figure out a blending that

2256
02:07:00,649 --> 02:07:05,000
we would use to incorporate this into

2257
02:07:03,560 --> 02:07:07,700
the values that are already there so

2258
02:07:05,000 --> 02:07:09,949
rather than just doing in equals right

2259
02:07:07,699 --> 02:07:13,369
we would actually do like a plus equals

2260
02:07:09,949 --> 02:07:15,649
and we would multiply the the light

2261
02:07:13,369 --> 02:07:18,170
amount or the light blend factor like

2262
02:07:15,649 --> 02:07:20,119
this right and the light blend factor

2263
02:07:18,170 --> 02:07:23,659
would be something along the lines of

2264
02:07:20,119 --> 02:07:26,719
light blend equals you know light amount

2265
02:07:23,659 --> 02:07:30,109
we know that we're taking whatever this

2266
02:07:26,719 --> 02:07:32,750
clamping value is so we would say well

2267
02:07:30,109 --> 02:07:35,569
we know that it's less than 0.1 so what

2268
02:07:32,750 --> 02:07:38,359
we want to do is we want to take

2269
02:07:35,569 --> 02:07:41,420
whatever the light amount is and

2270
02:07:38,359 --> 02:07:41,420
[Music]

2271
02:07:42,279 --> 02:07:47,300
basically invert it

2272
02:07:44,420 --> 02:07:49,909
so the darker the less light we have the

2273
02:07:47,300 --> 02:07:53,989
more we blend in our neighbor values

2274
02:07:49,909 --> 02:07:55,789
right again total garbage and probably

2275
02:07:53,989 --> 02:07:58,340
not going to do anything useful but it's

2276
02:07:55,789 --> 02:08:00,140
just something to look at right and so

2277
02:07:58,340 --> 02:08:01,909
if we do it that way what you can see is

2278
02:08:00,140 --> 02:08:05,750
again we get rid of a lot of those

2279
02:08:01,909 --> 02:08:07,670
popping artifacts right you can see how

2280
02:08:05,750 --> 02:08:10,189
now it's much smoother and we don't pop

2281
02:08:07,670 --> 02:08:12,829
in and out and again that's just because

2282
02:08:10,189 --> 02:08:15,949
we removed the possibility that it could

2283
02:08:12,829 --> 02:08:19,010
pop by always blending things smoothly

2284
02:08:15,949 --> 02:08:22,250
together and it looks okay but it's not

2285
02:08:19,010 --> 02:08:24,230
great right it's just very odd the way

2286
02:08:22,250 --> 02:08:26,090
that's doing it so I'm gonna go ahead

2287
02:08:24,229 --> 02:08:28,489
and guess that this is not that fruitful

2288
02:08:26,090 --> 02:08:30,230
like maybe there's bugs in there that we

2289
02:08:28,489 --> 02:08:32,149
can fix but I think what we're gonna

2290
02:08:30,229 --> 02:08:35,479
need to do is we're going to need to

2291
02:08:32,149 --> 02:08:37,969
actually take it seriously and produce

2292
02:08:35,479 --> 02:08:40,849
the like a neighborhood blending value

2293
02:08:37,970 --> 02:08:48,350
when we actually do the light casting

2294
02:08:40,850 --> 02:08:50,180
for real right I assume we're still in

2295
02:08:48,350 --> 02:08:53,210
this case here so I think we're still

2296
02:08:50,180 --> 02:08:56,270
doing test cast from probes and we're

2297
02:08:53,210 --> 02:08:58,789
calling the spam voxel here right so the

2298
02:08:56,270 --> 02:09:02,210
way this used to work is it used to spam

2299
02:08:58,789 --> 02:09:04,519
these voxel slices outright and I think

2300
02:09:02,210 --> 02:09:06,859
what we want to do now is probably say

2301
02:09:04,520 --> 02:09:10,270
well alright so we're probably gonna

2302
02:09:06,859 --> 02:09:10,269
have to do something similar to that

2303
02:09:10,390 --> 02:09:15,980
where we do actually do this voxel

2304
02:09:12,800 --> 02:09:21,020
spamming right because we know that if

2305
02:09:15,979 --> 02:09:30,679
we actually let me reconstitute this

2306
02:09:21,020 --> 02:09:33,410
here so that we know that if we do it

2307
02:09:30,680 --> 02:09:36,440
that way right we know we get the

2308
02:09:33,409 --> 02:09:39,069
correct sort of light blurring outside

2309
02:09:36,439 --> 02:09:43,210
of places right I should turn off the

2310
02:09:39,069 --> 02:09:43,210
the fill I'm at it

2311
02:09:51,710 --> 02:09:54,710
yeah

2312
02:10:00,368 --> 02:10:06,130
that's good if nine always test to see

2313
02:10:03,849 --> 02:10:07,539
if a block is equal to if if a value is

2314
02:10:06,130 --> 02:10:10,000
equal to nine then you know you can use

2315
02:10:07,539 --> 02:10:13,719
it all right so if I turn off the

2316
02:10:10,000 --> 02:10:18,039
smoothing here and just use the

2317
02:10:13,719 --> 02:10:20,170
full-size spamming right when we run it

2318
02:10:18,039 --> 02:10:24,750
we know that will produce usable values

2319
02:10:20,170 --> 02:10:27,940
that fill in on the outside right and

2320
02:10:24,750 --> 02:10:29,229
the that gets us sort of the surrounding

2321
02:10:27,939 --> 02:10:31,509
area and you can see that the problem

2322
02:10:29,229 --> 02:10:33,428
that we end up with right is that while

2323
02:10:31,510 --> 02:10:36,789
it fills them in we still then have the

2324
02:10:33,429 --> 02:10:38,889
problem one further out right and so

2325
02:10:36,789 --> 02:10:43,420
when we do that spamming what we could

2326
02:10:38,889 --> 02:10:47,859
do is just say well let's fill in the in

2327
02:10:43,420 --> 02:10:50,230
those regions will actually fill in sort

2328
02:10:47,859 --> 02:10:53,408
of negative light for what would be

2329
02:10:50,229 --> 02:11:02,948
there if we don't know that we can

2330
02:10:53,408 --> 02:11:05,079
actually hit that right I don't actually

2331
02:11:02,948 --> 02:11:07,479
know to what extent we can do that but

2332
02:11:05,079 --> 02:11:09,399
yeah so in this case where we're

2333
02:11:07,479 --> 02:11:14,198
actually spamming like these other voxel

2334
02:11:09,399 --> 02:11:18,009
slices right and I guess here yes we

2335
02:11:14,198 --> 02:11:19,509
have the fall-off yeah so what we want

2336
02:11:18,010 --> 02:11:21,520
to do here is just say yeah that

2337
02:11:19,510 --> 02:11:23,289
fall-off wants to be and let me just

2338
02:11:21,520 --> 02:11:24,969
verify that it actually will work

2339
02:11:23,289 --> 02:11:28,269
properly when I get outside to someplace

2340
02:11:24,969 --> 02:11:34,000
large enough make sure we're still

2341
02:11:28,270 --> 02:11:36,340
working properly on that so it seems

2342
02:11:34,000 --> 02:11:39,250
like we're not capturing the negative

2343
02:11:36,340 --> 02:11:42,400
light there properly let me just double

2344
02:11:39,250 --> 02:11:44,859
check what's going on there yeah so this

2345
02:11:42,399 --> 02:11:47,019
clamp zero to one is is the issue there

2346
02:11:44,859 --> 02:11:49,179
right so we want to do here when we fill

2347
02:11:47,020 --> 02:11:52,560
in this light is we don't want to do

2348
02:11:49,179 --> 02:11:52,560
that we just want this

2349
02:11:57,869 --> 02:11:59,930
you

2350
02:12:06,199 --> 02:12:14,029
oh wait I mean never actually using that

2351
02:12:11,229 --> 02:12:16,279
no we are so here's the light DF there

2352
02:12:14,029 --> 02:12:19,729
right we're doing the light a times the

2353
02:12:16,279 --> 02:12:22,639
light color and then adding that in to

2354
02:12:19,729 --> 02:12:24,469
the accumulation at that point and so we

2355
02:12:22,640 --> 02:12:27,590
should now be getting negative light

2356
02:12:24,470 --> 02:12:29,539
values the fact that we're not getting

2357
02:12:27,590 --> 02:12:31,869
negative light values is is a bit

2358
02:12:29,539 --> 02:12:31,869
strange

2359
02:12:40,210 --> 02:12:44,800
hmm so you see how we're not actually

2360
02:12:42,909 --> 02:12:49,210
getting negative light values in here

2361
02:12:44,800 --> 02:12:52,029
and I don't really know why see what I

2362
02:12:49,210 --> 02:12:53,890
mean so we should be seeing negative

2363
02:12:52,029 --> 02:12:59,920
light interpolation going on in there

2364
02:12:53,890 --> 02:13:02,890
and we're not but we should be because

2365
02:12:59,920 --> 02:13:05,380
that area is not in shadow it's you know

2366
02:13:02,890 --> 02:13:08,079
it's getting a light see accumulator

2367
02:13:05,380 --> 02:13:10,029
here right and that C value should now

2368
02:13:08,079 --> 02:13:12,609
be negative because we're letting the

2369
02:13:10,029 --> 02:13:14,109
light fall-off times the light distance

2370
02:13:12,609 --> 02:13:15,939
it should go as far as you want it to

2371
02:13:14,109 --> 02:13:20,589
right and so that should produce

2372
02:13:15,939 --> 02:13:25,119
negative values that then get placed

2373
02:13:20,590 --> 02:13:27,369
into the actual solution cells unless

2374
02:13:25,119 --> 02:13:30,729
someone else is clamping them but I

2375
02:13:27,369 --> 02:13:33,210
don't know who would be doing that let's

2376
02:13:30,729 --> 02:13:33,209
take a look

2377
02:13:35,460 --> 02:13:41,289
so in here after we do apply this and we

2378
02:13:39,729 --> 02:13:46,569
call just they don't wheat we are doing

2379
02:13:41,289 --> 02:13:53,649
this here Oh duh

2380
02:13:46,569 --> 02:13:57,489
I put the clamping in there Wow

2381
02:13:53,649 --> 02:14:04,000
that's pretty brilliant KC why did I do

2382
02:13:57,489 --> 02:14:04,699
that it doesn't make any sense right

2383
02:14:04,000 --> 02:14:06,109
because I was think

2384
02:14:04,699 --> 02:14:08,539
oh we have to make sure those values

2385
02:14:06,109 --> 02:14:11,029
don't go down below zero and that was

2386
02:14:08,539 --> 02:14:12,470
done so anyway that's still not the

2387
02:14:11,029 --> 02:14:15,679
problem there right I mean you can see

2388
02:14:12,470 --> 02:14:19,810
it's still having the same issue so

2389
02:14:15,680 --> 02:14:19,810
that's not the clamp in question

2390
02:14:23,829 --> 02:14:35,989
is anyone else clamping hey don't see

2391
02:14:32,180 --> 02:14:39,050
any other clamps so yeah so we're still

2392
02:14:35,989 --> 02:14:40,789
so we've critically broken something

2393
02:14:39,050 --> 02:14:42,770
about our interpolation because before

2394
02:14:40,789 --> 02:14:45,920
we had no trouble with interpolating

2395
02:14:42,770 --> 02:14:48,260
outside the range and that was because

2396
02:14:45,920 --> 02:14:52,550
we were using you know we were using our

2397
02:14:48,260 --> 02:14:54,409
sort of negative one to one system and

2398
02:14:52,550 --> 02:14:56,600
that was allowing us to interpolate

2399
02:14:54,409 --> 02:14:59,199
properly outside there but now we've

2400
02:14:56,600 --> 02:15:01,550
lost that ability even though we're

2401
02:14:59,199 --> 02:15:05,119
presumably sending down negative values

2402
02:15:01,550 --> 02:15:07,489
correctly we actually aren't getting

2403
02:15:05,119 --> 02:15:10,340
that reconstruction I don't know why so

2404
02:15:07,489 --> 02:15:14,300
you know again looking at this we're

2405
02:15:10,340 --> 02:15:16,970
clamping in the actual shader but only

2406
02:15:14,300 --> 02:15:18,949
once we've done the interpolation so we

2407
02:15:16,970 --> 02:15:22,850
shouldn't have that shouldn't be a

2408
02:15:18,949 --> 02:15:24,710
problem for us right and furthermore the

2409
02:15:22,850 --> 02:15:26,990
normals should be set properly I would

2410
02:15:24,710 --> 02:15:30,500
assume because we're not doing anything

2411
02:15:26,989 --> 02:15:32,239
weird with them but somehow we've

2412
02:15:30,500 --> 02:15:34,310
destroyed our ability to interpolate

2413
02:15:32,239 --> 02:15:36,050
this stuff is so fussy this is why I

2414
02:15:34,310 --> 02:15:38,090
really wish we could step through this a

2415
02:15:36,050 --> 02:15:40,279
little bit better than I can I'm gonna

2416
02:15:38,090 --> 02:15:41,930
take a quick look here and see I'm gonna

2417
02:15:40,279 --> 02:15:43,069
make sure we have some light values that

2418
02:15:41,930 --> 02:15:45,409
are negative just to be sure

2419
02:15:43,069 --> 02:15:48,199
so here what I'm going to do is say look

2420
02:15:45,409 --> 02:15:57,079
I'm going to look to see if the R value

2421
02:15:48,199 --> 02:15:57,779
for example is negative on the light and

2422
02:15:57,079 --> 02:16:01,639
if it

2423
02:15:57,779 --> 02:16:06,630
I'm gonna set the result to be pure red

2424
02:16:01,639 --> 02:16:11,819
and just is just to make sure that we

2425
02:16:06,630 --> 02:16:13,639
actually are seeing some I want to make

2426
02:16:11,819 --> 02:16:16,618
sure that we can actually see some

2427
02:16:13,639 --> 02:16:17,609
negative values coming through because

2428
02:16:16,618 --> 02:16:19,710
if we don't have any negative values

2429
02:16:17,609 --> 02:16:22,948
then we know we've screwed something up

2430
02:16:19,710 --> 02:16:33,148
on the exterior side so let's check it

2431
02:16:22,948 --> 02:16:34,978
out so we're definitely not yeah it's

2432
02:16:33,148 --> 02:16:36,689
definitely not working so this is

2433
02:16:34,978 --> 02:16:38,670
checking to see whether the light value

2434
02:16:36,689 --> 02:16:42,090
as it comes in before clamping ever

2435
02:16:38,670 --> 02:16:45,989
drops below zero and it doesn't right it

2436
02:16:42,090 --> 02:16:50,130
should so if you look at spam fox will

2437
02:16:45,989 --> 02:16:54,808
slice here we pass you know light

2438
02:16:50,129 --> 02:16:56,670
fall-off to this I guess and the light

2439
02:16:54,808 --> 02:16:58,949
distance you can see that all that

2440
02:16:56,670 --> 02:17:01,679
information there this value should

2441
02:16:58,950 --> 02:17:04,500
easily be able to go negative because as

2442
02:17:01,679 --> 02:17:05,879
the light distance goes up this will

2443
02:17:04,500 --> 02:17:08,760
just continue to go down and it's not

2444
02:17:05,879 --> 02:17:12,119
being clamped so we should be able to

2445
02:17:08,760 --> 02:17:14,700
get something here to go negative right

2446
02:17:12,120 --> 02:17:16,679
and when we add to this accumulator

2447
02:17:14,700 --> 02:17:19,130
we're adding a negative value so that

2448
02:17:16,679 --> 02:17:23,159
should drive the accumulator downward

2449
02:17:19,129 --> 02:17:26,569
that would be my assertion looking for

2450
02:17:23,159 --> 02:17:33,179
the places we actually touch that value

2451
02:17:26,569 --> 02:17:40,119
I mean that will leave it negative if

2452
02:17:33,179 --> 02:17:41,888
it's negative right and it should blend

2453
02:17:40,120 --> 02:17:43,750
negative value in there I mean that I

2454
02:17:41,888 --> 02:17:53,559
don't see any real reason why it

2455
02:17:43,750 --> 02:17:56,500
wouldn't yeah I don't know so why this

2456
02:17:53,559 --> 02:17:59,619
wouldn't provide a negative value I'm

2457
02:17:56,500 --> 02:18:00,819
not sure and I want to know why so we're

2458
02:17:59,620 --> 02:18:03,090
not going to end today till I figure

2459
02:18:00,819 --> 02:18:07,420
that out cuz something's really busted

2460
02:18:03,090 --> 02:18:11,559
this is aggravating me so if I spam

2461
02:18:07,420 --> 02:18:16,329
voxels slice in here what I want to do

2462
02:18:11,559 --> 02:18:20,829
is just assert that light DF is positive

2463
02:18:16,329 --> 02:18:24,129
right and so what oops and so what

2464
02:18:20,829 --> 02:18:28,739
should happen here is we should just get

2465
02:18:24,129 --> 02:18:31,299
it should you know break immediately on

2466
02:18:28,739 --> 02:18:33,968
any time that produces a negative value

2467
02:18:31,299 --> 02:18:38,468
and the fact that it's not is nuts

2468
02:18:33,968 --> 02:18:40,779
so I obviously am like how is that

2469
02:18:38,468 --> 02:18:42,699
possible right how are those things not

2470
02:18:40,780 --> 02:18:46,719
far enough away that we're causing this

2471
02:18:42,700 --> 02:18:48,400
to go so light DF is 1.0 - light

2472
02:18:46,718 --> 02:18:50,559
fall-off times light distance and

2473
02:18:48,399 --> 02:18:56,440
apparently that's not enough to make

2474
02:18:50,559 --> 02:18:58,539
this actually go down to negative like

2475
02:18:56,440 --> 02:19:03,310
you can't actually get far enough away

2476
02:18:58,540 --> 02:19:04,629
to make it be negative how is this

2477
02:19:03,309 --> 02:19:06,119
possible

2478
02:19:04,629 --> 02:19:13,930
[Music]

2479
02:19:06,120 --> 02:19:16,871
what am I missing I mean I'm not crazy

2480
02:19:13,930 --> 02:19:29,350
right like if I did that it would crash

2481
02:19:16,870 --> 02:19:31,750
immediately right so somehow this light

2482
02:19:29,350 --> 02:19:34,091
fall-off times light distance there

2483
02:19:31,751 --> 02:19:38,520
somehow that's wrong and if we look at

2484
02:19:34,091 --> 02:19:41,200
what we're passing there right we have

2485
02:19:38,520 --> 02:19:45,940
light fall-off as a value that's coming

2486
02:19:41,200 --> 02:19:48,940
in here and we have light position so we

2487
02:19:45,940 --> 02:19:50,971
have fall-off and position coming in the

2488
02:19:48,940 --> 02:19:53,351
light distance is just the subtraction

2489
02:19:50,970 --> 02:19:58,060
right to find out how far it is from the

2490
02:19:53,351 --> 02:20:00,069
voxel that we're spamming and that

2491
02:19:58,060 --> 02:20:01,331
should be an arbitrarily large value as

2492
02:20:00,069 --> 02:20:04,751
you get further away from the light

2493
02:20:01,331 --> 02:20:08,411
source the light fall-off value is just

2494
02:20:04,751 --> 02:20:10,931
how fast it falls off and I guess maybe

2495
02:20:08,411 --> 02:20:13,540
that could be too low but if it was why

2496
02:20:10,931 --> 02:20:15,371
are we able to get get to black right

2497
02:20:13,540 --> 02:20:16,989
why are we able to get to a number

2498
02:20:15,370 --> 02:20:19,630
that's apparently so close to one it's

2499
02:20:16,989 --> 02:20:22,780
almost zero but it never quite gets

2500
02:20:19,630 --> 02:20:28,840
above one right why would this not be

2501
02:20:22,780 --> 02:20:33,431
able to drive this value above one is

2502
02:20:28,841 --> 02:20:35,921
the question there and so presumably if

2503
02:20:33,431 --> 02:20:38,101
I wanted to crank the like let's suppose

2504
02:20:35,921 --> 02:20:40,239
like crank the light fall-off

2505
02:20:38,101 --> 02:20:46,051
so you know what I'm going to do here

2506
02:20:40,239 --> 02:20:46,050
I'm gonna let this ride

2507
02:20:53,299 --> 02:21:00,288
so okay so at least somebody at some

2508
02:20:57,139 --> 02:21:04,028
point got below zero oddly enough it

2509
02:21:00,289 --> 02:21:04,029
wasn't in the case that I was thinking

2510
02:21:06,969 --> 02:21:16,368
so what's going on we have some serious

2511
02:21:14,119 --> 02:21:17,539
issues I think we're probably gonna have

2512
02:21:16,369 --> 02:21:19,279
to rebuild this from the ground up

2513
02:21:17,539 --> 02:21:21,800
starting next week where I actually a

2514
02:21:19,279 --> 02:21:29,840
meticulously document exactly what every

2515
02:21:21,799 --> 02:21:32,179
value is right so what is causing that

2516
02:21:29,840 --> 02:21:34,158
is it possible that that's actually the

2517
02:21:32,180 --> 02:21:35,840
light is just not falling off steeply

2518
02:21:34,158 --> 02:21:38,538
enough for something like this let's go

2519
02:21:35,840 --> 02:21:41,510
check that out so let's look at when we

2520
02:21:38,539 --> 02:21:43,250
do test cast from probes maybe that's

2521
02:21:41,510 --> 02:21:45,680
actually it's the normal being wacky or

2522
02:21:43,250 --> 02:21:48,850
something I don't know so where is the

2523
02:21:45,680 --> 02:21:52,369
light fall-off value being passed here

2524
02:21:48,850 --> 02:21:53,689
so here it is right and so maybe if I

2525
02:21:52,369 --> 02:22:02,899
wanted it to fall off a little more

2526
02:21:53,689 --> 02:22:04,939
steeply I would do that okay so

2527
02:22:02,898 --> 02:22:07,879
basically the problem was our light

2528
02:22:04,939 --> 02:22:10,760
value wasn't falling off as steep as it

2529
02:22:07,879 --> 02:22:13,728
should be now what's a little bit

2530
02:22:10,760 --> 02:22:17,420
strange about that is where what was

2531
02:22:13,728 --> 02:22:19,969
that stair step pattern coming from is

2532
02:22:17,420 --> 02:22:21,500
it just the normal that that was coming

2533
02:22:19,969 --> 02:22:23,629
from and I guess that's part of our

2534
02:22:21,500 --> 02:22:32,270
disaster is that yes that actually is

2535
02:22:23,629 --> 02:22:35,769
like that like what's that about where

2536
02:22:32,270 --> 02:22:35,770
is that stair step pattern coming from

2537
02:22:36,670 --> 02:22:43,510
right it should

2538
02:22:41,398 --> 02:22:47,260
should be negative values for the light

2539
02:22:43,510 --> 02:22:50,529
source is it coming from the than normal

2540
02:22:47,260 --> 02:22:53,800
and if so why is it coming from the

2541
02:22:50,529 --> 02:22:55,569
normal I mean the normal shouldn't be

2542
02:22:53,799 --> 02:23:00,429
completely facing away from the light

2543
02:22:55,568 --> 02:23:04,209
source it's a little busted right but

2544
02:23:00,430 --> 02:23:06,010
yeah if you take a look at that then at

2545
02:23:04,209 --> 02:23:08,500
least now we know at least this part is

2546
02:23:06,010 --> 02:23:14,770
working let's go ahead and get rid of

2547
02:23:08,500 --> 02:23:16,209
that and so that stair step pattern was

2548
02:23:14,770 --> 02:23:17,850
coming presumably from the normal in

2549
02:23:16,209 --> 02:23:21,488
that case because it was actually

2550
02:23:17,850 --> 02:23:23,829
somehow the normal producing erroneous

2551
02:23:21,488 --> 02:23:28,270
dot product values so now if we move

2552
02:23:23,829 --> 02:23:31,000
along here we can see the tighter

2553
02:23:28,270 --> 02:23:33,040
fall-off right and the other thing we

2554
02:23:31,000 --> 02:23:36,159
see here is that it really isn't a very

2555
02:23:33,040 --> 02:23:40,210
smooth fall-off right

2556
02:23:36,159 --> 02:23:42,369
it feels almost like that's really kind

2557
02:23:40,209 --> 02:23:44,648
of going the wrong way round so like

2558
02:23:42,370 --> 02:23:47,290
like the the rate of fall off there like

2559
02:23:44,648 --> 02:23:50,559
the the light linear space is really not

2560
02:23:47,290 --> 02:23:52,779
working properly kind of a thing in

2561
02:23:50,559 --> 02:23:58,898
terms of that square it fall off so if I

2562
02:23:52,779 --> 02:24:03,029
actually go to the to the computation of

2563
02:23:58,898 --> 02:24:06,129
those voxels its fan talks will slice

2564
02:24:03,029 --> 02:24:08,409
and we look at what's going on here then

2565
02:24:06,129 --> 02:24:09,938
in terms of the light distance I don't

2566
02:24:08,409 --> 02:24:11,738
know if we want to try and make that

2567
02:24:09,939 --> 02:24:15,639
fall-off be something that's going to be

2568
02:24:11,738 --> 02:24:20,500
more gradual right or this light DF

2569
02:24:15,639 --> 02:24:22,420
value as well be something that's more

2570
02:24:20,500 --> 02:24:25,180
gradual and I'm trying to think of like

2571
02:24:22,420 --> 02:24:26,379
what exactly that would be you know what

2572
02:24:25,180 --> 02:24:28,859
happens if we play around with this

2573
02:24:26,379 --> 02:24:28,858
thing here

2574
02:24:40,880 --> 02:24:44,960
of course I guess I have to preserve the

2575
02:24:43,159 --> 02:24:48,681
sign right because squaring will get rid

2576
02:24:44,960 --> 02:24:59,420
of it which is a little bit of a problem

2577
02:24:48,681 --> 02:25:04,551
for us I suppose not that big of a deal

2578
02:24:59,421 --> 02:25:06,200
but so I just want to play around with

2579
02:25:04,550 --> 02:25:09,171
this value and see what happens if we

2580
02:25:06,200 --> 02:25:11,471
can produce small like a less tight

2581
02:25:09,171 --> 02:25:13,729
light fall-off with a couple different

2582
02:25:11,470 --> 02:25:16,970
like I just want to test some of that

2583
02:25:13,729 --> 02:25:17,930
there so they're squaring I wanted to

2584
02:25:16,970 --> 02:25:20,949
see what that does

2585
02:25:17,931 --> 02:25:20,950
and here square rooting

2586
02:25:35,771 --> 02:25:39,820
so that makes it even tighter right and

2587
02:25:38,049 --> 02:25:42,129
so the really interesting thing here

2588
02:25:39,819 --> 02:25:44,829
again is just that no matter what we did

2589
02:25:42,129 --> 02:25:47,199
to it right it doesn't really seem to

2590
02:25:44,829 --> 02:25:51,280
produce any kind of a smooth

2591
02:25:47,200 --> 02:25:54,181
interpolation it's very hard like it's a

2592
02:25:51,280 --> 02:25:59,860
very hard fall off on that light and

2593
02:25:54,181 --> 02:26:03,040
right I mean look at how dramatic that

2594
02:25:59,860 --> 02:26:05,710
is which again doesn't really make a lot

2595
02:26:03,040 --> 02:26:07,300
of sense to me and so that feels again

2596
02:26:05,709 --> 02:26:08,859
like you know that's part of the

2597
02:26:07,299 --> 02:26:13,569
encoding like the light linear versus

2598
02:26:08,860 --> 02:26:15,069
nonlinear in terms of maybe like what's

2599
02:26:13,569 --> 02:26:16,720
going on in here I don't know if we're

2600
02:26:15,069 --> 02:26:21,181
doing shader sim right

2601
02:26:16,720 --> 02:26:21,180
sim writes or not let me take a look

2602
02:26:41,010 --> 02:26:45,100
all right so I don't know whether we're

2603
02:26:43,988 --> 02:26:47,309
doing these are not at the moment

2604
02:26:45,100 --> 02:26:56,409
because I'm not sure how we left our

2605
02:26:47,309 --> 02:26:59,049
encoding z' but it looks like we're just

2606
02:26:56,409 --> 02:27:00,609
forcing them to true right now so we're

2607
02:26:59,049 --> 02:27:03,728
just using squared rights we're not

2608
02:27:00,609 --> 02:27:08,109
using srgb right in the frame buffer

2609
02:27:03,728 --> 02:27:10,420
right now although actually I guess we

2610
02:27:08,109 --> 02:27:17,920
can - we can turn them off if we have

2611
02:27:10,420 --> 02:27:19,870
allow us RGB on so let's take a look so

2612
02:27:17,920 --> 02:27:22,029
yeah so we're just doing the square on

2613
02:27:19,870 --> 02:27:24,279
the on square so like if you actually go

2614
02:27:22,029 --> 02:27:28,420
into the Z bias program these paths are

2615
02:27:24,279 --> 02:27:32,979
actually executing right so in here the

2616
02:27:28,420 --> 02:27:37,478
shaders sim right texts srgb that is is

2617
02:27:32,978 --> 02:27:40,929
happening and so on the way in we square

2618
02:27:37,478 --> 02:27:44,019
our textures on the way out we square

2619
02:27:40,930 --> 02:27:46,720
root our values that's just what we're

2620
02:27:44,020 --> 02:27:49,449
doing and I do wonder now so I want to

2621
02:27:46,719 --> 02:27:51,969
know kind of like well okay so if that's

2622
02:27:49,449 --> 02:27:54,250
what's happening to what extent is that

2623
02:27:51,969 --> 02:27:55,719
making it difficult for us in terms of

2624
02:27:54,250 --> 02:27:58,709
our encoding so I'm gonna go ahead and

2625
02:27:55,719 --> 02:27:58,709
just turn that off for a minute

2626
02:28:00,750 --> 02:28:06,488
and I'm not looking for what the happens

2627
02:28:05,170 --> 02:28:10,379
to the colors I'm looking at what

2628
02:28:06,488 --> 02:28:10,379
happens to that rate of that ramp

2629
02:28:16,939 --> 02:28:24,239
and you can see right it's a lot

2630
02:28:21,689 --> 02:28:30,540
smoother now do you see how much

2631
02:28:24,239 --> 02:28:33,750
smoother that ramp is right so I believe

2632
02:28:30,540 --> 02:28:39,330
what we're seeing there is that sort of

2633
02:28:33,750 --> 02:28:41,639
the light linear color is I think mostly

2634
02:28:39,329 --> 02:28:45,950
what were what we're seeing in there in

2635
02:28:41,639 --> 02:28:48,358
terms of how that lighting fall-off goes

2636
02:28:45,950 --> 02:28:51,329
so I'm not sure exactly what we want to

2637
02:28:48,359 --> 02:28:57,239
do to fix that problem but possibly

2638
02:28:51,329 --> 02:28:59,010
maybe I don't know could be that we want

2639
02:28:57,239 --> 02:29:03,090
to just try and go mostly realistic

2640
02:28:59,010 --> 02:29:05,130
since the squared space mm-hmm you know

2641
02:29:03,090 --> 02:29:08,579
is is at least close to somewhat gamma

2642
02:29:05,129 --> 02:29:11,789
correct if we did want to do this we

2643
02:29:08,579 --> 02:29:16,439
could in spam voxel slice we would not

2644
02:29:11,790 --> 02:29:19,350
take light distance as a as a Square

2645
02:29:16,439 --> 02:29:22,648
rooted value so instead here we would do

2646
02:29:19,350 --> 02:29:25,350
length squared for light distance and

2647
02:29:22,648 --> 02:29:30,750
that way we would get a squared fall-off

2648
02:29:25,350 --> 02:29:32,909
for the light because it is going down

2649
02:29:30,750 --> 02:29:38,068
at the more rapid rate I don't know if

2650
02:29:32,909 --> 02:29:42,648
that's what we want or not oh my that

2651
02:29:38,068 --> 02:29:44,689
looks truly bizarre and

2652
02:29:42,648 --> 02:29:46,488
so I guess yeah and again I think the

2653
02:29:44,689 --> 02:29:51,408
problem that we're gonna have here is

2654
02:29:46,488 --> 02:29:54,859
just that no matter what we do the

2655
02:29:51,408 --> 02:29:57,199
interpolation yeah okay so I'm working

2656
02:29:54,859 --> 02:29:58,908
this out in my head and I see the

2657
02:29:57,199 --> 02:30:00,649
problem is that no matter what we do

2658
02:29:58,908 --> 02:30:03,889
here it doesn't really matter does it

2659
02:30:00,648 --> 02:30:05,840
because the fall-off that we compute if

2660
02:30:03,889 --> 02:30:08,988
it's squared or square root it doesn't

2661
02:30:05,840 --> 02:30:11,478
matter because it's going to get

2662
02:30:08,988 --> 02:30:13,158
interpolated linearly and so what we

2663
02:30:11,478 --> 02:30:22,898
need is that interpolation to be in

2664
02:30:13,158 --> 02:30:22,898
nonlinear Hyuk

2665
02:30:33,860 --> 02:30:41,271
so the problem is the value coming out

2666
02:30:37,521 --> 02:30:46,130
of the voxel is going to interpolate

2667
02:30:41,271 --> 02:30:49,040
itself linearly which we actually don't

2668
02:30:46,129 --> 02:30:55,009
want because the fall-off is supposed to

2669
02:30:49,040 --> 02:31:00,790
interpolate non linearly but it won't we

2670
02:30:55,010 --> 02:31:00,790
could interpolate the values and then so

2671
02:31:00,879 --> 02:31:10,819
we would have to encode the values and

2672
02:31:06,879 --> 02:31:15,979
then on square them like on the way out

2673
02:31:10,819 --> 02:31:17,989
right in other words I'm guessing that

2674
02:31:15,979 --> 02:31:19,939
the only thing we could really do here

2675
02:31:17,989 --> 02:31:22,579
is leave it this way

2676
02:31:19,940 --> 02:31:25,100
so we're actually taking it and putting

2677
02:31:22,579 --> 02:31:28,789
it into the Square rooted space and then

2678
02:31:25,100 --> 02:31:29,450
when we pull it out we'd have to square

2679
02:31:28,790 --> 02:31:42,980
it again

2680
02:31:29,450 --> 02:31:45,079
I guess meaning this also and the light

2681
02:31:42,979 --> 02:31:48,319
see here would have to do the same thing

2682
02:31:45,079 --> 02:31:50,989
so like this value right here this light

2683
02:31:48,319 --> 02:31:56,840
see this would have to be Square rooted

2684
02:31:50,989 --> 02:31:58,760
as well right so so really I suppose the

2685
02:31:56,840 --> 02:32:03,229
thing is like you wouldn't do this you'd

2686
02:31:58,760 --> 02:32:07,639
square root the in code we'll talk about

2687
02:32:03,229 --> 02:32:09,289
that in a second but so anyway what we'd

2688
02:32:07,639 --> 02:32:14,629
have to do is when we pass in the light

2689
02:32:09,290 --> 02:32:17,990
V value here and we pull it out this

2690
02:32:14,629 --> 02:32:22,279
actually has to happen I don't know if

2691
02:32:17,989 --> 02:32:24,430
we have a square probably do nope we

2692
02:32:22,280 --> 02:32:24,430
don't

2693
02:32:30,680 --> 02:32:39,359
right so that was a really crucial thing

2694
02:32:37,350 --> 02:32:41,430
I didn't think about like the

2695
02:32:39,359 --> 02:32:45,630
interpolation of the lining values in

2696
02:32:41,430 --> 02:32:48,449
the voxel is the wrong way around so

2697
02:32:45,629 --> 02:32:50,099
we're going to have to square them and

2698
02:32:48,449 --> 02:32:52,819
that means when we put them in we're

2699
02:32:50,100 --> 02:32:55,829
going to have to square root them right

2700
02:32:52,818 --> 02:32:57,869
and so I think the way we would do that

2701
02:32:55,829 --> 02:33:00,449
is compute this correctly so we'd

2702
02:32:57,870 --> 02:33:03,510
complete compute it like that and then

2703
02:33:00,449 --> 02:33:08,699
when we actually put it in here we'd

2704
02:33:03,510 --> 02:33:11,670
square root the actual result right so

2705
02:33:08,699 --> 02:33:16,229
basically like these values here all

2706
02:33:11,670 --> 02:33:20,850
have to get all have to get Square

2707
02:33:16,228 --> 02:33:22,978
rooted when they go in and it has to be

2708
02:33:20,850 --> 02:33:26,460
a sign preserving square root which is

2709
02:33:22,978 --> 02:33:29,068
even more ridiculous again this is sort

2710
02:33:26,459 --> 02:33:33,238
of sounds absurd but I'm not sure how

2711
02:33:29,068 --> 02:33:36,329
else you would do it so when this goes

2712
02:33:33,238 --> 02:33:41,209
in here we would have to do a sign

2713
02:33:36,329 --> 02:33:41,209
preserving square root so when we do

2714
02:33:41,600 --> 02:33:46,949
where did that go where we do this where

2715
02:33:44,219 --> 02:33:48,719
we square these values we have to then

2716
02:33:46,949 --> 02:33:49,350
take the sign and multiply it out

2717
02:33:48,719 --> 02:33:53,389
properly

2718
02:33:49,350 --> 02:33:53,390
so like this

2719
02:34:03,629 --> 02:34:09,300
and I don't actually know if we have

2720
02:34:07,709 --> 02:34:10,649
that either but that's something we

2721
02:34:09,300 --> 02:34:14,119
should be able to get pretty easily

2722
02:34:10,649 --> 02:34:14,119
right there should be a sine function

2723
02:34:14,329 --> 02:34:18,289
not that kind of sine

2724
02:34:42,340 --> 02:34:49,809
my operators no here we go so I'm

2725
02:34:47,889 --> 02:34:59,439
assuming there's a sign yeah so you can

2726
02:34:49,809 --> 02:35:02,139
just do that so we have a sign operator

2727
02:34:59,439 --> 02:35:04,750
and we can just ask that for that and

2728
02:35:02,139 --> 02:35:06,728
that will keep it negative if we need to

2729
02:35:04,750 --> 02:35:08,799
be negative and this way we can

2730
02:35:06,728 --> 02:35:10,959
interpolate in the squared space and

2731
02:35:08,799 --> 02:35:14,228
things should be fine right

2732
02:35:10,959 --> 02:35:17,099
famous last words so if we look at that

2733
02:35:14,228 --> 02:35:17,099
fall-off now

2734
02:35:17,430 --> 02:35:31,479
oops why did that get brighter that

2735
02:35:26,139 --> 02:35:37,539
should not have happened is sign not

2736
02:35:31,478 --> 02:35:40,599
what I think it is that shouldn't have

2737
02:35:37,540 --> 02:35:42,070
gotten any brighter right because it's

2738
02:35:40,600 --> 02:35:43,569
only multiplying by the sign so it's

2739
02:35:42,069 --> 02:35:50,289
only gonna keep it positive or negative

2740
02:35:43,569 --> 02:35:58,559
so that that was hmm what happened there

2741
02:35:50,290 --> 02:35:58,560
that doesn't seem good

2742
02:36:03,180 --> 02:36:06,689
right this should not be able to change

2743
02:36:05,369 --> 02:36:12,659
the brightness so if we look at the

2744
02:36:06,689 --> 02:36:16,488
brightness here that should not be able

2745
02:36:12,658 --> 02:36:16,488
to change the brightness from this

2746
02:36:27,050 --> 02:36:33,050
and it didn't all right that's fine all

2747
02:36:30,501 --> 02:36:39,470
right so the question is though why oh I

2748
02:36:33,050 --> 02:36:41,390
see there yeah that's like why isn't it

2749
02:36:39,470 --> 02:36:46,899
still producing zero values and the

2750
02:36:41,390 --> 02:36:51,380
answer was because of that all right

2751
02:36:46,899 --> 02:36:53,899
okay so now our primary problem is just

2752
02:36:51,380 --> 02:36:56,270
that we if we actually do square these

2753
02:36:53,899 --> 02:36:58,489
values we have to put them in Square

2754
02:36:56,271 --> 02:37:01,761
rooted properly otherwise we won't fill

2755
02:36:58,489 --> 02:37:04,539
them right you know what I'm saying but

2756
02:37:01,761 --> 02:37:07,461
you can now we now can get actual smooth

2757
02:37:04,540 --> 02:37:09,830
fall-off on them because they would be

2758
02:37:07,460 --> 02:37:14,420
interpolated presumably in a space where

2759
02:37:09,829 --> 02:37:16,251
things are linear for them so if we

2760
02:37:14,421 --> 02:37:19,130
wanted to do that we need to do that

2761
02:37:16,251 --> 02:37:20,630
with the square root here which again is

2762
02:37:19,130 --> 02:37:23,210
going to be a huge pain in the butt but

2763
02:37:20,630 --> 02:37:26,001
we can do it so let's just just a try to

2764
02:37:23,210 --> 02:37:29,439
see if this actually fixes things if we

2765
02:37:26,001 --> 02:37:29,440
want to do this

2766
02:37:39,140 --> 02:37:52,489
so we actually can encode these in the

2767
02:37:41,390 --> 02:37:55,029
squirt sign square root space she asked

2768
02:37:52,489 --> 02:37:55,030
do it this way

2769
02:38:08,219 --> 02:38:15,409
and off we go all right so let's say we

2770
02:38:12,568 --> 02:38:15,409
don't have sign here

2771
02:38:22,350 --> 02:38:34,050
okay so yeah not pretty but again you

2772
02:38:29,879 --> 02:38:36,359
can kind of see right that now you can

2773
02:38:34,049 --> 02:38:38,908
actually get a softer fall-off if we

2774
02:38:36,359 --> 02:38:41,459
have it interpolate properly so now if

2775
02:38:38,908 --> 02:38:44,760
we widen it out again back to how far

2776
02:38:41,459 --> 02:38:47,039
out it used to be in the test cast from

2777
02:38:44,760 --> 02:38:49,918
probes part of things where we actually

2778
02:38:47,039 --> 02:38:54,209
specify the fall-off so now if we let it

2779
02:38:49,918 --> 02:38:58,408
fall off at a wider radius that maybe

2780
02:38:54,209 --> 02:39:00,989
that may be too wide so let's let's go

2781
02:38:58,408 --> 02:39:04,859
ahead and and nuke that down a little

2782
02:39:00,988 --> 02:39:09,270
bit I don't know what radius we actually

2783
02:39:04,859 --> 02:39:11,338
want that seems better so now we should

2784
02:39:09,270 --> 02:39:13,890
be able to get like more of a fall-off

2785
02:39:11,338 --> 02:39:17,039
band right by interpolating that space

2786
02:39:13,889 --> 02:39:20,908
and you can see we kind of do right

2787
02:39:17,039 --> 02:39:23,129
we kind of do it's a little wobbly right

2788
02:39:20,908 --> 02:39:27,118
it's not as tight as maybe we would like

2789
02:39:23,129 --> 02:39:29,909
it to be but it's it's not awful right

2790
02:39:27,119 --> 02:39:36,229
and we can get a little bit more of a

2791
02:39:29,908 --> 02:39:38,668
soft fall off from that as we go hmm I

2792
02:39:36,228 --> 02:39:41,068
don't know what the light color is

2793
02:39:38,668 --> 02:39:43,639
actually here but the light colors may

2794
02:39:41,068 --> 02:39:45,748
be a little bit bright well

2795
02:39:43,639 --> 02:39:47,578
soften that down but that may be

2796
02:39:45,748 --> 02:39:48,958
actually part of the when we put it into

2797
02:39:47,578 --> 02:39:50,279
the square root space depending on how

2798
02:39:48,959 --> 02:39:52,310
we're doing that I guess there's some

2799
02:39:50,279 --> 02:39:56,908
different values we could look at there

2800
02:39:52,309 --> 02:40:00,600
um so I don't know right we can also try

2801
02:39:56,908 --> 02:40:04,078
to do some encoding there and try to

2802
02:40:00,600 --> 02:40:06,059
keep that from from not being as bad I

2803
02:40:04,078 --> 02:40:08,878
don't know if that really did the trick

2804
02:40:06,059 --> 02:40:11,939
I don't know if I really believe that's

2805
02:40:08,879 --> 02:40:17,609
all that much softer compared to what we

2806
02:40:11,939 --> 02:40:19,020
had before trying to double check to

2807
02:40:17,609 --> 02:40:29,270
make sure I didn't screw anything up

2808
02:40:19,020 --> 02:40:29,270
there looks about right hmm

2809
02:40:30,930 --> 02:40:34,300
yeah

2810
02:40:32,199 --> 02:40:36,100
so I mean you know and again one of the

2811
02:40:34,299 --> 02:40:38,799
problems that you always have in this

2812
02:40:36,100 --> 02:40:41,770
particular circumstance too is just

2813
02:40:38,799 --> 02:40:44,288
you're not gonna get the exact right

2814
02:40:41,770 --> 02:40:47,500
answer either way because you can't

2815
02:40:44,289 --> 02:40:52,449
really square and screw don't distribute

2816
02:40:47,500 --> 02:40:54,309
over ads so you can't really quite get

2817
02:40:52,449 --> 02:40:56,289
exactly the result that you should get

2818
02:40:54,309 --> 02:40:59,078
so we're just trying to see if we can

2819
02:40:56,289 --> 02:41:04,750
get a result that's you know at least

2820
02:40:59,078 --> 02:41:07,629
closer but it's not it's not equivalent

2821
02:41:04,750 --> 02:41:10,228
right so I know there's no way I don't

2822
02:41:07,629 --> 02:41:14,349
think you can like simulated exactly

2823
02:41:10,228 --> 02:41:15,908
from those values right and so you're

2824
02:41:14,350 --> 02:41:18,189
kind of in a bit of a sticky situation

2825
02:41:15,908 --> 02:41:20,920
there as you as you kind of work on the

2826
02:41:18,189 --> 02:41:23,619
tail of that function so I don't know

2827
02:41:20,920 --> 02:41:27,699
that may just not be worth it it's sort

2828
02:41:23,619 --> 02:41:34,539
of hard to say if we were to pull that

2829
02:41:27,699 --> 02:41:35,859
out of there so we're not going to do if

2830
02:41:34,539 --> 02:41:42,930
I pull that out of there and then look

2831
02:41:35,859 --> 02:41:42,930
at the the corresponding result

2832
02:41:54,879 --> 02:41:57,269
we'll see

2833
02:42:05,040 --> 02:42:12,670
so yeah I mean you know looking at it

2834
02:42:08,460 --> 02:42:14,949
it's definitely true that you do get a

2835
02:42:12,671 --> 02:42:18,851
more gradual fall off with the other

2836
02:42:14,950 --> 02:42:30,101
with the other method right and you know

2837
02:42:18,851 --> 02:42:39,551
that's what you would expect I'm going

2838
02:42:30,101 --> 02:42:40,810
to boost this color value again but it

2839
02:42:39,550 --> 02:42:49,390
definitely gives us something to think

2840
02:42:40,810 --> 02:42:50,860
about for next week or well we'll

2841
02:42:49,390 --> 02:42:54,130
probably off next week but for the week

2842
02:42:50,860 --> 02:42:56,560
after next anyway I'm gonna change this

2843
02:42:54,130 --> 02:42:59,369
light color back to something brighter

2844
02:42:56,560 --> 02:42:59,369
and see what happens

2845
02:43:13,149 --> 02:43:25,539
yeah I mean so you know I'm not sure how

2846
02:43:20,440 --> 02:43:30,489
I want to address that really that's a

2847
02:43:25,540 --> 02:43:32,771
pretty tough call because you win some

2848
02:43:30,489 --> 02:43:35,579
you lose some with that right like

2849
02:43:32,771 --> 02:43:35,579
there's

2850
02:43:43,851 --> 02:43:47,971
there's pros and cons of doing it in the

2851
02:43:46,351 --> 02:43:49,471
squared space like that and again it's

2852
02:43:47,970 --> 02:43:51,930
not going to be exact so I'd have to

2853
02:43:49,470 --> 02:43:54,390
think about what we want to do there but

2854
02:43:51,931 --> 02:43:56,820
you can see why there's an issue with

2855
02:43:54,390 --> 02:43:58,740
that right is because just the rate at

2856
02:43:56,820 --> 02:44:01,171
which you get that fall-off is just very

2857
02:43:58,740 --> 02:44:02,220
abrupt and you know you have to kind of

2858
02:44:01,171 --> 02:44:06,149
figure out what you're gonna do about

2859
02:44:02,220 --> 02:44:08,630
that in terms of just the like lighting

2860
02:44:06,149 --> 02:44:15,450
quality and how that's going to work so

2861
02:44:08,630 --> 02:44:20,310
so we'll see but I'll end it there yeah

2862
02:44:15,450 --> 02:44:21,840
so we'll go to a brief QA but yeah

2863
02:44:20,310 --> 02:44:23,251
probably not too much to talk about this

2864
02:44:21,841 --> 02:44:25,831
time because we're going to have to

2865
02:44:23,251 --> 02:44:27,899
probably break things down and go much

2866
02:44:25,831 --> 02:44:30,540
slower through it when we come back

2867
02:44:27,899 --> 02:44:32,341
after the holidays because we're going

2868
02:44:30,540 --> 02:44:34,020
to need effectively like we're gonna

2869
02:44:32,341 --> 02:44:35,940
have to work this through meticulously

2870
02:44:34,021 --> 02:44:37,650
if we want it to work

2871
02:44:35,940 --> 02:44:38,791
is what it looks like to me we're not

2872
02:44:37,649 --> 02:44:41,149
just going to be able to throw something

2873
02:44:38,790 --> 02:44:41,149
in there

2874
02:44:48,149 --> 02:44:54,799
oh do we have a typo in the the to Z

2875
02:44:51,030 --> 02:44:54,800
thing there for the flood

2876
02:45:08,500 --> 02:45:12,879
oh yeah all right well that would

2877
02:45:11,409 --> 02:45:14,379
explain why we were having some of the

2878
02:45:12,879 --> 02:45:15,789
weird stuff happening there I knew we

2879
02:45:14,379 --> 02:45:17,738
must have a bug in there somewhere thank

2880
02:45:15,790 --> 02:45:18,970
you for that catch I don't really think

2881
02:45:17,738 --> 02:45:22,719
this is gonna help us much

2882
02:45:18,969 --> 02:45:23,858
unfortunately I mean I wish it were we

2883
02:45:22,719 --> 02:45:26,679
can certainly take a quick look at it

2884
02:45:23,859 --> 02:45:29,260
but it's I'm just gonna go ahead and

2885
02:45:26,680 --> 02:45:31,659
guess that this is we've got so many

2886
02:45:29,260 --> 02:45:33,219
problems underlying that interpolation

2887
02:45:31,659 --> 02:45:34,510
that I don't think there's much that

2888
02:45:33,219 --> 02:45:39,789
that's really gonna be able to help us

2889
02:45:34,510 --> 02:45:41,829
with right yeah I mean bit of a disaster

2890
02:45:39,790 --> 02:45:43,420
in there at the moment of course we've

2891
02:45:41,829 --> 02:45:45,930
done so many other changes it's hard to

2892
02:45:43,420 --> 02:45:45,930
say right

2893
02:45:56,340 --> 02:46:15,760
I'm just looking to see what's going on

2894
02:45:58,568 --> 02:46:17,139
in here that all seems fine yeah

2895
02:46:15,760 --> 02:46:18,790
that has much to do with our problem I

2896
02:46:17,139 --> 02:46:20,019
mean I think basically the the the flood

2897
02:46:18,790 --> 02:46:24,760
fill in general is probably not gonna

2898
02:46:20,020 --> 02:46:27,729
work right because we weren't close like

2899
02:46:24,760 --> 02:46:29,228
it's not close to working I think it's

2900
02:46:27,728 --> 02:46:31,599
just not going to work I think we're

2901
02:46:29,228 --> 02:46:33,728
going to have to actually fill in values

2902
02:46:31,600 --> 02:46:36,309
around the neighbors when we actually do

2903
02:46:33,728 --> 02:46:39,639
the the raycasting much like we're doing

2904
02:46:36,309 --> 02:46:42,189
here right to produce that that sort of

2905
02:46:39,639 --> 02:46:46,709
clean interpolation I don't really think

2906
02:46:42,189 --> 02:46:46,710
there's really anything else we can do

2907
02:46:47,040 --> 02:46:50,520
that's my guess anyway

2908
02:47:04,280 --> 02:47:08,930
yeah because it just it wasn't something

2909
02:47:06,290 --> 02:47:14,120
that was like close to right you know I

2910
02:47:08,930 --> 02:47:15,380
mean so I think it's gonna be a thing

2911
02:47:14,120 --> 02:47:16,700
where you can't really do it after the

2912
02:47:15,379 --> 02:47:20,269
fact you've got to produce the actual

2913
02:47:16,700 --> 02:47:23,000
function during the Ray casting using

2914
02:47:20,270 --> 02:47:28,250
some kind of a dead reckoning for things

2915
02:47:23,000 --> 02:47:32,559
that are not on a like I don't know for

2916
02:47:28,250 --> 02:47:35,149
things that are not really on a sample

2917
02:47:32,559 --> 02:47:36,590
voxel you've got to fill stuff in for

2918
02:47:35,149 --> 02:47:39,229
them based on what you think it might

2919
02:47:36,590 --> 02:47:41,120
have been when you go to write stuff

2920
02:47:39,229 --> 02:47:44,119
from neighbors so we'll probably have to

2921
02:47:41,120 --> 02:47:45,860
like basically keep a summation of what

2922
02:47:44,120 --> 02:47:50,090
we think it would have been in that

2923
02:47:45,860 --> 02:47:52,220
square by extension and then for any

2924
02:47:50,090 --> 02:47:55,760
square that doesn't have light coming in

2925
02:47:52,219 --> 02:47:59,799
on that frame we use the extended like

2926
02:47:55,760 --> 02:47:59,800
the guest extended version right

2927
02:48:30,318 --> 02:48:36,158
have no questions so we can wrap it up

2928
02:48:33,129 --> 02:48:36,159
all right

2929
02:48:43,181 --> 02:48:46,761
all right thank you everyone for joining

2930
02:48:45,229 --> 02:48:48,140
us today was soda handmade hero sort of

2931
02:48:46,761 --> 02:48:49,790
pleasure coating with you as always I

2932
02:48:48,140 --> 02:48:52,520
think we've pretty much hit the end of

2933
02:48:49,790 --> 02:48:54,561
the stuff we can do simply with the

2934
02:48:52,521 --> 02:48:56,540
lighting so we are going to have to do

2935
02:48:54,560 --> 02:48:58,880
some fairly meticulous work when we come

2936
02:48:56,540 --> 02:49:02,061
back it will not be a pleasant January

2937
02:48:58,880 --> 02:49:03,171
just just keep that in mind and we're

2938
02:49:02,060 --> 02:49:05,091
going to have to kind of work through

2939
02:49:03,171 --> 02:49:09,470
all that stuff very precisely and test

2940
02:49:05,091 --> 02:49:12,761
it carefully at each stage I probably

2941
02:49:09,470 --> 02:49:14,869
won't stream until after the holidays so

2942
02:49:12,761 --> 02:49:19,431
you'll have a little bit of a winter

2943
02:49:14,870 --> 02:49:21,500
break and you can prepare for that yeah

2944
02:49:19,431 --> 02:49:23,301
so that's about it as always if you want

2945
02:49:21,500 --> 02:49:24,681
to follow along with at home and maybe

2946
02:49:23,300 --> 02:49:26,239
during winter break if you want to play

2947
02:49:24,681 --> 02:49:27,560
around with it you can always peer to

2948
02:49:26,239 --> 02:49:29,300
the game on handmade hero are going to

2949
02:49:27,560 --> 02:49:31,761
come to the source code so you could

2950
02:49:29,300 --> 02:49:33,109
follow along you can always try working

2951
02:49:31,761 --> 02:49:34,761
through the lighting yourself you pretty

2952
02:49:33,110 --> 02:49:37,521
much know what we have to do right like

2953
02:49:34,761 --> 02:49:40,399
we've gone over everything we have basic

2954
02:49:37,521 --> 02:49:41,931
stuff in place for everything but now we

2955
02:49:40,399 --> 02:49:43,250
have to actually go through and make

2956
02:49:41,931 --> 02:49:46,700
sure all of those equations are tight

2957
02:49:43,250 --> 02:49:47,960
and we have a plausible explanation for

2958
02:49:46,700 --> 02:49:50,200
how each one of them is going to work

2959
02:49:47,960 --> 02:49:52,279
you could definitely make that a project

2960
02:49:50,200 --> 02:49:53,750
because all the infrastructure is in

2961
02:49:52,280 --> 02:49:56,000
place so it's really just working

2962
02:49:53,750 --> 02:49:58,521
through that math and figuring out

2963
02:49:56,000 --> 02:50:02,630
exactly how each individual place should

2964
02:49:58,521 --> 02:50:06,021
go right alright so that's it

2965
02:50:02,630 --> 02:50:07,671
have a happy holidays and I will see

2966
02:50:06,021 --> 02:50:09,730
everyone when we return take it easy

2967
02:50:07,671 --> 02:50:09,729
everybody

