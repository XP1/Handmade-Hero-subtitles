1
00:00:00,260 --> 00:00:06,209
hello everyone thank you for joining us

2
00:00:02,819 --> 00:00:08,160
for handmade here oh sure we quote a

3
00:00:06,209 --> 00:00:10,019
complete-game live on stream and we are

4
00:00:08,160 --> 00:00:13,320
kind of in some interesting territory

5
00:00:10,019 --> 00:00:16,920
now probably going to be kind of fun

6
00:00:13,320 --> 00:00:19,948
depending on how much GPU nonsense we

7
00:00:16,920 --> 00:00:21,960
hit but we implement lingual cups

8
00:00:19,949 --> 00:00:23,039
yesterday and we kind of get start

9
00:00:21,960 --> 00:00:24,750
playing with those today a little bit

10
00:00:23,039 --> 00:00:27,300
which should be kind of fun and

11
00:00:24,750 --> 00:00:29,879
interesting I think let me kind of show

12
00:00:27,300 --> 00:00:35,489
you where we're at just you have some

13
00:00:29,879 --> 00:00:38,460
sense of it I will run the game here and

14
00:00:35,488 --> 00:00:40,979
what you can see is we've striped our

15
00:00:38,460 --> 00:00:43,200
voxel light look up with red green and

16
00:00:40,979 --> 00:00:45,959
blue colors so you can kind of see

17
00:00:43,200 --> 00:00:48,300
inside the letting volume those stripes

18
00:00:45,960 --> 00:00:50,189
which are just kind of a debug view for

19
00:00:48,299 --> 00:00:52,229
us that let us know that the locks will

20
00:00:50,189 --> 00:00:54,329
look up on one of our voxels it's

21
00:00:52,229 --> 00:00:57,238
working properly that's great because

22
00:00:54,329 --> 00:00:58,620
that means from here on out we can play

23
00:00:57,238 --> 00:01:01,649
with this a little bit and sort of start

24
00:00:58,619 --> 00:01:05,039
to see a we can get some some sort of

25
00:01:01,649 --> 00:01:08,070
ballpark opinion of how slow it will be

26
00:01:05,040 --> 00:01:09,390
if we actually do six full voxel lookups

27
00:01:08,069 --> 00:01:11,158
for a complete lighting right now we're

28
00:01:09,390 --> 00:01:12,719
only doing that one I mean technically

29
00:01:11,159 --> 00:01:14,000
we've got the six calls in there but I'm

30
00:01:12,719 --> 00:01:16,048
assuming that the shader compiler

31
00:01:14,000 --> 00:01:16,920
eliminated five of them because they

32
00:01:16,049 --> 00:01:19,049
weren't used for anything

33
00:01:16,920 --> 00:01:20,700
normally the shader compiler is pretty

34
00:01:19,049 --> 00:01:22,979
aggressive right it's not gonna leave

35
00:01:20,700 --> 00:01:24,780
dead code in there for obvious reasons

36
00:01:22,978 --> 00:01:26,099
they're trying to be as hype before it's

37
00:01:24,780 --> 00:01:28,439
as possible so you're not gonna sit

38
00:01:26,099 --> 00:01:31,199
around sampling textures that nobody

39
00:01:28,438 --> 00:01:33,118
then uses so we can start to get some

40
00:01:31,200 --> 00:01:35,670
performance profile rich today we also

41
00:01:33,118 --> 00:01:38,430
probably want to figure out how much

42
00:01:35,670 --> 00:01:39,540
time we are taking and figure out how

43
00:01:38,430 --> 00:01:41,368
we're gonna get these voxels down

44
00:01:39,540 --> 00:01:42,780
quickly bunch of stuff like that so we

45
00:01:41,368 --> 00:01:44,640
had a lot of interesting work to do but

46
00:01:42,780 --> 00:01:46,259
hopefully we won't hit too many more GPU

47
00:01:44,640 --> 00:01:47,759
snags or anything like that so we can

48
00:01:46,259 --> 00:01:49,500
mostly have fun with the lighting and

49
00:01:47,759 --> 00:01:50,549
try to get into position where it's it's

50
00:01:49,500 --> 00:01:52,469
working

51
00:01:50,549 --> 00:01:55,880
like I said the main thing we need to do

52
00:01:52,469 --> 00:01:58,200
now is try to figure out to what extent

53
00:01:55,879 --> 00:02:01,379
all of these voxels can be sampled

54
00:01:58,200 --> 00:02:04,259
together that's obviously something that

55
00:02:01,379 --> 00:02:07,319
we can kind of start to layer in a

56
00:02:04,259 --> 00:02:08,878
little bit so since I'm pretty sure that

57
00:02:07,319 --> 00:02:11,098
these voxels will get sampled the same

58
00:02:08,878 --> 00:02:12,870
way we probably don't need to worry too

59
00:02:11,098 --> 00:02:14,469
much about that part but what I do not

60
00:02:12,870 --> 00:02:16,780
know is to what

61
00:02:14,469 --> 00:02:19,270
and the voxels are getting Sam sent down

62
00:02:16,780 --> 00:02:20,620
properly as separate voxels so what I'd

63
00:02:19,270 --> 00:02:22,570
like to start by doing just really

64
00:02:20,620 --> 00:02:25,390
quickly to get us back into the swing of

65
00:02:22,569 --> 00:02:28,719
things today is I'd like to go ahead you

66
00:02:25,389 --> 00:02:32,049
can see if we go to the Z bias program

67
00:02:28,719 --> 00:02:33,849
here so let me just jump to that you can

68
00:02:32,050 --> 00:02:35,140
see where we're doing our sampling here

69
00:02:33,849 --> 00:02:36,669
is the sum total of the lighting

70
00:02:35,139 --> 00:02:38,439
sampling that we're actually doing this

71
00:02:36,669 --> 00:02:39,939
is the part we're worried about we don't

72
00:02:38,439 --> 00:02:42,819
know how long this will take

73
00:02:39,939 --> 00:02:46,919
it's it's a requirement to sample six

74
00:02:42,819 --> 00:02:49,689
voxels now what we can do in the future

75
00:02:46,919 --> 00:02:52,389
is we can probably keep this to three

76
00:02:49,689 --> 00:02:54,609
voxels total maybe by being a little bit

77
00:02:52,389 --> 00:02:57,069
creative I'm not sure how hard that will

78
00:02:54,610 --> 00:02:59,020
actually be but it might be kind of

79
00:02:57,069 --> 00:03:00,519
difficult we'll see

80
00:02:59,020 --> 00:03:03,939
because I don't know to what extent we

81
00:03:00,520 --> 00:03:07,090
can use index lookups into samplers it

82
00:03:03,939 --> 00:03:09,340
may be that we can it may be that we

83
00:03:07,090 --> 00:03:11,590
can't and again that's really about how

84
00:03:09,340 --> 00:03:14,680
the shading language allows you to

85
00:03:11,590 --> 00:03:17,110
reference things so worst case scenario

86
00:03:14,680 --> 00:03:18,610
we have to sample six and in the case

87
00:03:17,110 --> 00:03:21,340
where we have to sample six that would

88
00:03:18,610 --> 00:03:25,690
be our least performant case and I like

89
00:03:21,340 --> 00:03:27,729
I said just don't know how bad that's

90
00:03:25,689 --> 00:03:29,800
going to be and so one of the things

91
00:03:27,729 --> 00:03:32,500
that we can start to do again to look at

92
00:03:29,800 --> 00:03:34,209
the the frame rate cost one thing I did

93
00:03:32,500 --> 00:03:36,459
is I opened up insight I asked them to

94
00:03:34,209 --> 00:03:37,900
take some frame profile for us a couple

95
00:03:36,459 --> 00:03:40,090
of things I don't know I don't know how

96
00:03:37,900 --> 00:03:41,230
much time of that is spent in some of

97
00:03:40,090 --> 00:03:43,360
our lighting stuff that we haven't

98
00:03:41,229 --> 00:03:48,069
really worked on yet one thing I can do

99
00:03:43,360 --> 00:03:49,420
there is if we go look at when we're

100
00:03:48,069 --> 00:03:49,930
calling compute light propagation that

101
00:03:49,419 --> 00:03:53,229
sort of stuff

102
00:03:49,930 --> 00:03:54,819
are we doing anything in end lighting

103
00:03:53,229 --> 00:03:56,649
computation that's actually expensive

104
00:03:54,819 --> 00:03:58,150
you know or that we can get rid of so

105
00:03:56,650 --> 00:04:00,640
for example we're calling compute light

106
00:03:58,150 --> 00:04:02,680
propagation let's say I got rid of that

107
00:04:00,639 --> 00:04:04,419
let's say maybe I got rid of all this

108
00:04:02,680 --> 00:04:07,150
stuff right so we're not really doing

109
00:04:04,419 --> 00:04:08,708
any work in the in the lighting

110
00:04:07,150 --> 00:04:10,719
computation again I'm just trying to

111
00:04:08,709 --> 00:04:13,989
keep it to just the voxel work so that I

112
00:04:10,719 --> 00:04:16,298
could get up just a basic idea how fast

113
00:04:13,989 --> 00:04:17,829
that is and so here is that same code

114
00:04:16,298 --> 00:04:20,620
running with that stuff commented out

115
00:04:17,829 --> 00:04:22,060
again don't know how fast this is so

116
00:04:20,620 --> 00:04:25,569
what I'd like to do is again run it

117
00:04:22,060 --> 00:04:28,480
under insight just get some ideas of how

118
00:04:25,569 --> 00:04:30,430
is that working right

119
00:04:28,480 --> 00:04:32,740
so let's go ahead and do that I'm gonna

120
00:04:30,430 --> 00:04:34,900
load up insight here and then I'm gonna

121
00:04:32,740 --> 00:04:37,150
launch the frame profiler and that

122
00:04:34,899 --> 00:04:43,209
should just give me an idea of how slow

123
00:04:37,149 --> 00:04:46,239
things are right now what you can see on

124
00:04:43,209 --> 00:04:49,649
here is it's it's saying that there's a

125
00:04:46,240 --> 00:04:52,000
22 milliseconds per frame hit right and

126
00:04:49,649 --> 00:04:54,879
of course the problem is I really just

127
00:04:52,000 --> 00:04:59,829
don't know where that 25 milliseconds

128
00:04:54,879 --> 00:05:02,259
that's getting spent I I don't know yeah

129
00:04:59,829 --> 00:05:04,719
I don't know if I capture for live

130
00:05:02,259 --> 00:05:08,500
analysis if I we don't know how accurate

131
00:05:04,720 --> 00:05:12,730
this is actually is but what you can see

132
00:05:08,500 --> 00:05:15,100
here if you believe this diagram which I

133
00:05:12,730 --> 00:05:17,350
don't know if we do right but let's

134
00:05:15,100 --> 00:05:19,540
suppose we did you can see here that it

135
00:05:17,350 --> 00:05:22,780
claims we're only spending four point

136
00:05:19,540 --> 00:05:26,230
six six milliseconds on the graphics and

137
00:05:22,779 --> 00:05:29,709
if you look at what is detailed here in

138
00:05:26,230 --> 00:05:32,200
the texture calls you can see where the

139
00:05:29,709 --> 00:05:35,949
various calls are happening buying

140
00:05:32,199 --> 00:05:38,500
texture calls the vertex array calls

141
00:05:35,949 --> 00:05:41,259
these sorts of things use program bind

142
00:05:38,500 --> 00:05:43,149
buffer right here's the texture

143
00:05:41,259 --> 00:05:45,370
submission you can see that we're

144
00:05:43,149 --> 00:05:48,909
spending two point five two milliseconds

145
00:05:45,370 --> 00:05:51,189
and 15 point 13 milliseconds in fact and

146
00:05:48,910 --> 00:05:55,410
you know what that right there looks

147
00:05:51,189 --> 00:05:59,980
like the time right so if we look here

148
00:05:55,410 --> 00:06:03,070
you can see we've got this this sort of

149
00:05:59,980 --> 00:06:05,110
four point six six milliseconds it looks

150
00:06:03,069 --> 00:06:08,909
like that is talking about the GPU time

151
00:06:05,110 --> 00:06:12,879
if we believe this performance analysis

152
00:06:08,910 --> 00:06:16,180
that right there is is our problem so

153
00:06:12,879 --> 00:06:18,730
this this submission of the 3d voxel

154
00:06:16,180 --> 00:06:23,230
down to the card really really bad

155
00:06:18,730 --> 00:06:24,700
that's a huge problem and if we just

156
00:06:23,230 --> 00:06:27,970
look at our frame time that's pretty

157
00:06:24,699 --> 00:06:30,490
much where the problem lies that's

158
00:06:27,970 --> 00:06:32,650
actually surprisingly good news it's

159
00:06:30,490 --> 00:06:35,650
good news for two reasons one is we can

160
00:06:32,649 --> 00:06:37,539
reduce the size of the voxel which will

161
00:06:35,649 --> 00:06:39,519
dramatically reduce the cost of

162
00:06:37,540 --> 00:06:41,528
submitting it we can probably cut that

163
00:06:39,519 --> 00:06:44,408
number in a quarter

164
00:06:41,528 --> 00:06:46,928
by just changing to a 64 cubed voxel

165
00:06:44,408 --> 00:06:49,298
instead of 128 cube box'll so that's

166
00:06:46,928 --> 00:06:51,338
really good news right there the other

167
00:06:49,298 --> 00:06:53,888
good news is we have done literally

168
00:06:51,338 --> 00:06:56,379
nothing right now to make sure that the

169
00:06:53,889 --> 00:07:00,549
graphics card is getting that voxel in

170
00:06:56,379 --> 00:07:02,739
the most expedient way and what I mean

171
00:07:00,548 --> 00:07:06,548
by that is we our leader literally just

172
00:07:02,738 --> 00:07:08,828
taking a user space pointer and we are

173
00:07:06,548 --> 00:07:11,498
saying to the graphics card hey grab

174
00:07:08,829 --> 00:07:12,788
this card why don't you take this user

175
00:07:11,499 --> 00:07:16,329
space pointer and do something with it

176
00:07:12,788 --> 00:07:18,998
right so that's the least efficient way

177
00:07:16,329 --> 00:07:20,649
for the CPU to do anything it can't be

178
00:07:18,999 --> 00:07:24,309
multi-threaded because it doesn't know

179
00:07:20,649 --> 00:07:26,199
when we will touch that memory again so

180
00:07:24,309 --> 00:07:28,359
it has to do everything behind the

181
00:07:26,199 --> 00:07:30,429
geotextile image call right away has to

182
00:07:28,358 --> 00:07:32,858
do a full copy into its own space to

183
00:07:30,428 --> 00:07:34,228
make sure that it preserves the memory

184
00:07:32,858 --> 00:07:38,258
that's there at the time of the call and

185
00:07:34,228 --> 00:07:41,649
furthermore it has to do at least that

186
00:07:38,259 --> 00:07:43,838
one copy because even if it didn't have

187
00:07:41,649 --> 00:07:45,579
to do it right away it can't and it

188
00:07:43,838 --> 00:07:47,588
could overlap it it's not to do it and

189
00:07:45,579 --> 00:07:51,579
the reason is because we didn't allocate

190
00:07:47,588 --> 00:07:53,889
the memory for that transfer buffer from

191
00:07:51,579 --> 00:07:55,809
the graphics card so it can't put it in

192
00:07:53,889 --> 00:07:57,879
a space where the graphics card itself

193
00:07:55,809 --> 00:08:00,209
could gather it and deuce whistling on

194
00:07:57,879 --> 00:08:03,489
its own or whatever it's going to do so

195
00:08:00,209 --> 00:08:04,149
we're feeding it in the worst possible

196
00:08:03,488 --> 00:08:07,268
way

197
00:08:04,149 --> 00:08:10,538
is probably the best way to think about

198
00:08:07,269 --> 00:08:16,478
that so the first question would be well

199
00:08:10,538 --> 00:08:20,139
you know can we can we just like can we

200
00:08:16,478 --> 00:08:22,418
optimize this out somehow that geo text

201
00:08:20,139 --> 00:08:25,509
some image let's just verify to

202
00:08:22,418 --> 00:08:28,329
ourselves because I don't know if we

203
00:08:25,509 --> 00:08:32,459
terminate the running program here and

204
00:08:28,329 --> 00:08:37,049
we go back to our code if we inside the

205
00:08:32,458 --> 00:08:37,049
OpenGL renderer itself

206
00:08:41,610 --> 00:08:47,110
yes so if we go to the renderer itself

207
00:08:44,980 --> 00:08:49,750
and we just go down and look at how

208
00:08:47,110 --> 00:08:51,519
we're doing things every frame we send

209
00:08:49,750 --> 00:08:55,210
down this and that's what we're going to

210
00:08:51,519 --> 00:08:58,149
need to do because we need when we send

211
00:08:55,210 --> 00:09:00,550
it down when we send down the letting

212
00:08:58,149 --> 00:09:07,779
information every time we need to make

213
00:09:00,549 --> 00:09:13,089
sure we wait what the hey why are we

214
00:09:07,779 --> 00:09:15,429
doing this every frame I don't know why

215
00:09:13,090 --> 00:09:18,940
we're calling Geo text promoter eyes so

216
00:09:15,429 --> 00:09:23,459
many times here that's not what I

217
00:09:18,940 --> 00:09:25,870
intended so that's a little weird

218
00:09:23,460 --> 00:09:27,600
hold on a sec I'm sorry this is not what

219
00:09:25,870 --> 00:09:31,870
I wanted to talk about right now but

220
00:09:27,600 --> 00:09:33,370
open Jill in it when we create these

221
00:09:31,870 --> 00:09:35,710
textures should be the only time that we

222
00:09:33,370 --> 00:09:36,190
actually needed to do that so that was a

223
00:09:35,710 --> 00:09:39,519
mistake

224
00:09:36,190 --> 00:09:41,410
those should have been here right so

225
00:09:39,519 --> 00:09:43,059
sorry let me just make sure that that's

226
00:09:41,409 --> 00:09:44,350
fixed that but we don't need to be I

227
00:09:43,059 --> 00:09:46,209
don't think that would have done

228
00:09:44,350 --> 00:09:48,850
anything because the OpenGL layer does a

229
00:09:46,210 --> 00:09:50,590
lot of different or those anyway but I

230
00:09:48,850 --> 00:09:51,790
just want to make sure that we moved

231
00:09:50,590 --> 00:09:53,230
those to the right place yeah because

232
00:09:51,789 --> 00:09:54,819
those those did not need to be called

233
00:09:53,230 --> 00:09:58,090
there and that's just getting cruft in

234
00:09:54,820 --> 00:09:59,590
the way and no point in that all right

235
00:09:58,090 --> 00:10:01,389
so this is the call that we're talking

236
00:09:59,590 --> 00:10:05,259
about here that takes a while if I just

237
00:10:01,389 --> 00:10:08,019
actually throw in a local persist here

238
00:10:05,259 --> 00:10:09,909
that's just like only twice or something

239
00:10:08,019 --> 00:10:11,579
I don't know and we just send this down

240
00:10:09,909 --> 00:10:13,569
or for the first 10 frames or something

241
00:10:11,580 --> 00:10:15,040
something like that just to make sure

242
00:10:13,570 --> 00:10:17,129
that the game has actually sent some

243
00:10:15,039 --> 00:10:20,620
information down to it at some point

244
00:10:17,129 --> 00:10:25,269
what I can do is just say like if only

245
00:10:20,620 --> 00:10:27,100
twice and of course now it's 10 times

246
00:10:25,269 --> 00:10:29,110
that's really making any sense

247
00:10:27,100 --> 00:10:32,620
what I can do here is just say like oh

248
00:10:29,110 --> 00:10:38,169
all right let's do like only twice this

249
00:10:32,620 --> 00:10:39,759
is probably fine leave that there let's

250
00:10:38,169 --> 00:10:45,089
only do this a few times

251
00:10:39,759 --> 00:10:45,090
send it down only a few times right and

252
00:10:47,669 --> 00:10:53,439
this way we can get a feel for the speed

253
00:10:50,980 --> 00:10:55,539
if we're not doing that texture transfer

254
00:10:53,440 --> 00:10:58,270
right so just keeping that texture

255
00:10:55,539 --> 00:11:02,139
transfer out of the loop so here's that

256
00:10:58,269 --> 00:11:04,569
and we're running now off we go if we

257
00:11:02,139 --> 00:11:07,149
double check the speed now so I'm gonna

258
00:11:04,570 --> 00:11:08,800
launch it from here and we look at what

259
00:11:07,149 --> 00:11:10,689
the profile is my assumption is the

260
00:11:08,799 --> 00:11:13,240
profile will jump up dramatically and

261
00:11:10,690 --> 00:11:15,730
you can see it here now we're at a very

262
00:11:13,240 --> 00:11:18,549
reasonable frame rate right that's

263
00:11:15,730 --> 00:11:21,759
actually hitting 120 which is pretty

264
00:11:18,549 --> 00:11:24,809
good and as we get out to a harder sort

265
00:11:21,759 --> 00:11:27,250
of view we're still way above 60 right

266
00:11:24,809 --> 00:11:28,959
and so if our goal dish is to shift this

267
00:11:27,250 --> 00:11:31,600
game on a modern graphics card it should

268
00:11:28,960 --> 00:11:34,870
run at 60 frames a second we're well

269
00:11:31,600 --> 00:11:36,100
within tolerance here and we haven't

270
00:11:34,870 --> 00:11:38,740
really done much type of facial work so

271
00:11:36,100 --> 00:11:42,850
that's good right that's a good thing

272
00:11:38,740 --> 00:11:47,230
now let's continue down this path a

273
00:11:42,850 --> 00:11:48,790
little bit just as we go here let's try

274
00:11:47,230 --> 00:11:53,139
and I'm gonna go ahead and hit terminate

275
00:11:48,789 --> 00:11:54,789
there or try to incite isn't great about

276
00:11:53,139 --> 00:11:57,759
closing apps in case you're wondering

277
00:11:54,789 --> 00:12:02,469
like it's like you know could you

278
00:11:57,759 --> 00:12:06,299
terminate my application please yeah I

279
00:12:02,470 --> 00:12:09,430
don't know who knows anyway point being

280
00:12:06,299 --> 00:12:12,309
if we push on this a little bit more

281
00:12:09,429 --> 00:12:13,689
what I'd like to do is when we go and

282
00:12:12,309 --> 00:12:15,909
submit our voxels

283
00:12:13,690 --> 00:12:19,510
let's put different things in different

284
00:12:15,909 --> 00:12:21,429
voxels so for example if I go into the

285
00:12:19,509 --> 00:12:22,838
handmade lighting code and you can see

286
00:12:21,429 --> 00:12:24,879
us stuffing our voxels with our

287
00:12:22,839 --> 00:12:27,160
structured art here again structured our

288
00:12:24,879 --> 00:12:29,588
a very important way to debug things and

289
00:12:27,159 --> 00:12:31,509
test things because if we just put real

290
00:12:29,589 --> 00:12:33,370
artwork or real lighting in here it's

291
00:12:31,509 --> 00:12:35,799
very hard to tell if it's wrong subtly

292
00:12:33,370 --> 00:12:38,139
if subtle runs obvious like serious bugs

293
00:12:35,799 --> 00:12:40,389
show up clearly subtle bugs don't so

294
00:12:38,139 --> 00:12:43,659
structured arts a really good way to do

295
00:12:40,389 --> 00:12:46,240
that plus when things are in serious

296
00:12:43,659 --> 00:12:47,769
bugs even though the real artwork you

297
00:12:46,240 --> 00:12:49,389
can still tell you're a serious bug you

298
00:12:47,769 --> 00:12:50,980
can't necessarily see what this serious

299
00:12:49,389 --> 00:12:53,830
bug is but structured art makes it much

300
00:12:50,980 --> 00:12:56,080
easier to see if you only see the red

301
00:12:53,830 --> 00:12:57,610
Channel for example you know that it's

302
00:12:56,080 --> 00:12:58,600
this particular voxel is being

303
00:12:57,610 --> 00:13:00,250
over-represented than the other

304
00:12:58,600 --> 00:13:02,230
aren't or something right you can see

305
00:13:00,250 --> 00:13:04,448
through the structured art clues that

306
00:13:02,230 --> 00:13:06,278
you wouldn't see to the bug even if the

307
00:13:04,448 --> 00:13:07,599
bug would have been clear in normal

308
00:13:06,278 --> 00:13:09,939
circumstance so structured aren't very

309
00:13:07,600 --> 00:13:11,860
important putting debug values into

310
00:13:09,940 --> 00:13:13,480
precise locations in your artwork is

311
00:13:11,860 --> 00:13:15,339
very important you see me do it many

312
00:13:13,480 --> 00:13:18,100
many many times it's one of the most

313
00:13:15,339 --> 00:13:19,930
important tips I credit Mike Biddle comb

314
00:13:18,100 --> 00:13:25,269
for that he's the one who even coined

315
00:13:19,929 --> 00:13:28,088
that term for me he probably didn't

316
00:13:25,269 --> 00:13:29,198
coined the term in toto but he was going

317
00:13:28,089 --> 00:13:32,199
to introduce me of that term and it's

318
00:13:29,198 --> 00:13:35,019
like structured art yes very smart and

319
00:13:32,198 --> 00:13:36,698
so what we want to do here is start to

320
00:13:35,019 --> 00:13:38,860
take a look at we've got these box

321
00:13:36,698 --> 00:13:41,588
indexes here what if I start stuffing

322
00:13:38,860 --> 00:13:43,690
the other box indexes with something

323
00:13:41,589 --> 00:13:48,430
else so here I'm going to say all right

324
00:13:43,690 --> 00:13:52,959
let's do all of our box surfaces here so

325
00:13:48,429 --> 00:13:57,388
when we talk about our boxes here in the

326
00:13:52,958 --> 00:14:01,419
order we normally put them south north

327
00:13:57,389 --> 00:14:03,698
down up and my goal here is just going

328
00:14:01,419 --> 00:14:05,559
to be let's fill these voxels with

329
00:14:03,698 --> 00:14:08,049
something that lets us know they're

330
00:14:05,559 --> 00:14:09,698
actually working and at the same time

331
00:14:08,049 --> 00:14:11,740
that will force us to know that they're

332
00:14:09,698 --> 00:14:14,469
all getting sampled so we can get a

333
00:14:11,740 --> 00:14:16,629
realistic profile estimate of how much

334
00:14:14,470 --> 00:14:19,778
that fragment shader is gonna cost us in

335
00:14:16,629 --> 00:14:23,649
the worst possible case on optimize just

336
00:14:19,778 --> 00:14:26,708
running itself into the ground what's

337
00:14:23,649 --> 00:14:29,860
that going to look like right so what I

338
00:14:26,708 --> 00:14:34,328
want to do here is I want to create sort

339
00:14:29,860 --> 00:14:36,159
of a set of Lighting's here that are

340
00:14:34,328 --> 00:14:38,528
gonna be structured arts that's

341
00:14:36,159 --> 00:14:40,509
structured in such a way is to put

342
00:14:38,528 --> 00:14:43,480
different things into the colors of each

343
00:14:40,509 --> 00:14:46,449
voxel and so what I'm going to do is

344
00:14:43,480 --> 00:14:48,670
duplicate the code I had up here but

345
00:14:46,448 --> 00:14:50,559
change the striping patterns right so

346
00:14:48,669 --> 00:14:55,379
basically like I'm gonna compute

347
00:14:50,559 --> 00:14:59,500
different patterns for west east south

348
00:14:55,379 --> 00:15:01,600
north down and up

349
00:14:59,500 --> 00:15:04,990
so what I want to do will start out

350
00:15:01,600 --> 00:15:07,629
pretty simply what I'll do here is say

351
00:15:04,990 --> 00:15:09,669
let's go ahead and strike further apart

352
00:15:07,629 --> 00:15:11,950
so I can get kind of two different

353
00:15:09,669 --> 00:15:14,229
stripe patterns going

354
00:15:11,950 --> 00:15:18,940
and so maybe what we do here is we say

355
00:15:14,230 --> 00:15:23,019
like okay let's suppose that we do like

356
00:15:18,940 --> 00:15:26,260
a X divided two kind of thing so now

357
00:15:23,019 --> 00:15:30,820
what we're going to do is reduce that

358
00:15:26,259 --> 00:15:37,750
period down right and so like if I do

359
00:15:30,820 --> 00:15:39,310
something like this right and then I'm

360
00:15:37,750 --> 00:15:42,539
gonna do something like put them in two

361
00:15:39,309 --> 00:15:45,039
different ones so we'll do west and east

362
00:15:42,539 --> 00:15:47,889
stripes like that fact maybe we'll just

363
00:15:45,039 --> 00:15:51,039
do those two for right now and so now if

364
00:15:47,889 --> 00:15:53,560
I run what I should see is I'll only see

365
00:15:51,039 --> 00:15:57,069
red striping because we're only drawing

366
00:15:53,559 --> 00:15:59,198
the westward voxel and so I'll only see

367
00:15:57,070 --> 00:16:02,490
the red striping and again it's twice as

368
00:15:59,198 --> 00:16:05,769
banded as before before the bands were

369
00:16:02,490 --> 00:16:08,379
more frequent now they're less frequent

370
00:16:05,769 --> 00:16:10,328
right and the other thing you can you

371
00:16:08,379 --> 00:16:12,039
know you can kinda see here too is I

372
00:16:10,328 --> 00:16:13,838
think our voxels just over it's too

373
00:16:12,039 --> 00:16:16,509
dense right you're just even looking at

374
00:16:13,839 --> 00:16:18,970
it it's just it's just too dense when

375
00:16:16,509 --> 00:16:21,730
you look at how it lies on to these

376
00:16:18,970 --> 00:16:24,639
things I think we probably have just way

377
00:16:21,730 --> 00:16:26,800
too more more density than we need to

378
00:16:24,639 --> 00:16:28,778
capture the kinds of letting details

379
00:16:26,799 --> 00:16:30,909
that we're trying to capture with the

380
00:16:28,778 --> 00:16:33,789
voxel so in my opinion this is also

381
00:16:30,909 --> 00:16:35,350
probably too big and the so we can

382
00:16:33,789 --> 00:16:36,730
reduce that size now but I don't want to

383
00:16:35,350 --> 00:16:40,120
do that yet you know like one thing that

384
00:16:36,730 --> 00:16:43,000
time so now let's go into the fragment

385
00:16:40,120 --> 00:16:44,679
shader and let's try to pull in some of

386
00:16:43,000 --> 00:16:46,179
those other channels then we know we're

387
00:16:44,679 --> 00:16:49,448
already asking for them but like I said

388
00:16:46,179 --> 00:16:51,549
they're getting optimized out so if we

389
00:16:49,448 --> 00:16:53,139
look at where this light sampler East

390
00:16:51,549 --> 00:16:55,208
and West they are getting pulled in

391
00:16:53,139 --> 00:16:58,838
right but you can see here we just take

392
00:16:55,208 --> 00:17:00,549
the light West RGB and that's not gonna

393
00:16:58,839 --> 00:17:02,589
cut it because that means that it can

394
00:17:00,549 --> 00:17:05,709
just optimize out the likes to eat light

395
00:17:02,589 --> 00:17:06,850
East entirely so if we were to do

396
00:17:05,709 --> 00:17:07,870
something where we some of these in fact

397
00:17:06,849 --> 00:17:10,119
you know what I should probably do this

398
00:17:07,869 --> 00:17:12,729
a different way let's do it like this

399
00:17:10,119 --> 00:17:14,649
let's take the light data and let's just

400
00:17:12,730 --> 00:17:16,509
set that equal to zero and then let's

401
00:17:14,650 --> 00:17:17,890
just sum these in a way that's just

402
00:17:16,509 --> 00:17:21,669
convenient for us for debugging purposes

403
00:17:17,890 --> 00:17:24,480
right so we'll start summing in the

404
00:17:21,669 --> 00:17:27,269
light unpacks for each of these

405
00:17:24,480 --> 00:17:28,889
serious like so and so I'm gonna go

406
00:17:27,269 --> 00:17:30,690
ahead and compile that and now I would

407
00:17:28,888 --> 00:17:33,928
expect to see two different sets of

408
00:17:30,690 --> 00:17:36,058
bands one set coming from the West word

409
00:17:33,929 --> 00:17:38,519
facing voxel one from the eastward

410
00:17:36,058 --> 00:17:39,778
facing voxel that's the hope it looks

411
00:17:38,519 --> 00:17:42,079
like I screwed something up what did I

412
00:17:39,778 --> 00:17:42,079
screw up

413
00:17:49,720 --> 00:17:55,909
that is when I screwed up probably

414
00:17:54,859 --> 00:17:58,759
should have showed you a new feature

415
00:17:55,909 --> 00:18:00,650
actually if we if we have an error in

416
00:17:58,759 --> 00:18:02,419
our shader compiler again I'll do it

417
00:18:00,650 --> 00:18:06,080
in fact let me just do it for you

418
00:18:02,419 --> 00:18:09,169
suppose I didn't know that right so one

419
00:18:06,079 --> 00:18:10,788
of the things George expert team picks

420
00:18:09,169 --> 00:18:15,020
on the chat recently updated our

421
00:18:10,788 --> 00:18:19,069
debugger remedy debugger of champions

422
00:18:15,019 --> 00:18:24,440
and if you look here Nick like before

423
00:18:19,069 --> 00:18:28,720
oops if I spell it right wait I did that

424
00:18:24,440 --> 00:18:30,890
compile that supposed to crash

425
00:18:28,720 --> 00:18:33,339
well not crash it was supposed to assert

426
00:18:30,890 --> 00:18:37,070
on the shader compiler compiler right

427
00:18:33,339 --> 00:18:38,240
did I miss it yeah there it goes um so

428
00:18:37,069 --> 00:18:40,279
if you look at something like this right

429
00:18:38,240 --> 00:18:41,839
in the past you know when you were

430
00:18:40,279 --> 00:18:43,190
trying to view string as it was hard in

431
00:18:41,839 --> 00:18:44,439
here because it had you know some

432
00:18:43,190 --> 00:18:47,509
different displays for them or whatever

433
00:18:44,440 --> 00:18:51,679
in theory now supposedly we can just do

434
00:18:47,509 --> 00:18:55,900
this and if you do calm a stir on

435
00:18:51,679 --> 00:18:59,090
something then you get like a little

436
00:18:55,900 --> 00:19:01,100
effectively text editor view in here so

437
00:18:59,089 --> 00:19:03,829
you can see really cleanly like what the

438
00:19:01,099 --> 00:19:06,469
actual con is the string is it's really

439
00:19:03,829 --> 00:19:08,119
nice it's much nicer than the MS vc-1

440
00:19:06,470 --> 00:19:09,860
which pops up like a modal window you

441
00:19:08,119 --> 00:19:11,359
can't get rid of so this is kind of nice

442
00:19:09,859 --> 00:19:13,279
you can just kind of look at this in

443
00:19:11,359 --> 00:19:15,798
here and you even have a scroll bar so

444
00:19:13,279 --> 00:19:17,329
if this happens to be tiny and you don't

445
00:19:15,798 --> 00:19:18,889
want to expand it you can still see the

446
00:19:17,329 --> 00:19:21,918
entire string conveniently in there

447
00:19:18,890 --> 00:19:26,270
formatted properly which is really

448
00:19:21,919 --> 00:19:30,169
baller and just want to thank George for

449
00:19:26,269 --> 00:19:31,400
doing that for us again like just it's

450
00:19:30,169 --> 00:19:32,659
so nice to have somebody who knows what

451
00:19:31,400 --> 00:19:33,679
they're doing working on the de bugger

452
00:19:32,659 --> 00:19:35,870
instead of the visual studio debugger

453
00:19:33,679 --> 00:19:37,130
which you know no one no one who knows

454
00:19:35,869 --> 00:19:38,329
what they're doing ever works on as far

455
00:19:37,130 --> 00:19:38,870
as I can tell so it just keeps getting

456
00:19:38,329 --> 00:19:40,548
worse

457
00:19:38,869 --> 00:19:43,399
whereas this one keeps getting better

458
00:19:40,548 --> 00:19:45,679
and and so thanks for that that's really

459
00:19:43,400 --> 00:19:47,900
good and it will help us out a lot so

460
00:19:45,679 --> 00:19:49,159
that's pretty awesome anyway just wanted

461
00:19:47,900 --> 00:19:50,360
to mention that was there we didn't need

462
00:19:49,159 --> 00:19:52,159
it this time but we're definitely gonna

463
00:19:50,359 --> 00:19:55,129
need it sometimes because you know as

464
00:19:52,159 --> 00:19:59,330
you know we you know often times will

465
00:19:55,130 --> 00:20:01,220
put mistakes into our shaders so anyway

466
00:19:59,329 --> 00:20:02,480
going back to

467
00:20:01,220 --> 00:20:05,179
the correct version of the shader in

468
00:20:02,480 --> 00:20:07,220
theory if we take a look here at what

469
00:20:05,179 --> 00:20:09,830
we've got you can see now we're pulling

470
00:20:07,220 --> 00:20:11,900
from both voxels right because one of

471
00:20:09,829 --> 00:20:14,689
them is the green stripes one of them is

472
00:20:11,900 --> 00:20:16,850
the red stripes so what I can do now is

473
00:20:14,690 --> 00:20:18,110
start to layer some lights on top of

474
00:20:16,849 --> 00:20:20,449
this and that's what I'm gonna try and

475
00:20:18,109 --> 00:20:22,519
do so the south and north voxels what

476
00:20:20,450 --> 00:20:25,190
I'm gonna do is actually go ahead and

477
00:20:22,519 --> 00:20:29,859
make those be a higher frequency stripe

478
00:20:25,190 --> 00:20:34,580
on top so I'm gonna go down to just the

479
00:20:29,859 --> 00:20:36,439
again looking at the the frequency here

480
00:20:34,579 --> 00:20:38,178
instead of it being half the frequency

481
00:20:36,440 --> 00:20:41,090
I'm going to use the full frequency and

482
00:20:38,179 --> 00:20:44,298
the South and North voxels oops

483
00:20:41,089 --> 00:20:47,959
source south and north voxels they will

484
00:20:44,298 --> 00:20:50,950
just be effectively the same striping

485
00:20:47,960 --> 00:20:55,730
but on top at a higher frequency right

486
00:20:50,950 --> 00:20:58,669
and so if we go ahead and do that and

487
00:20:55,730 --> 00:21:02,210
you know what maybe maybe not

488
00:20:58,669 --> 00:21:06,950
let me do let me do that instead so

489
00:21:02,210 --> 00:21:10,610
every 4th one they will kick in that

490
00:21:06,950 --> 00:21:12,319
might be easier to verify right so every

491
00:21:10,609 --> 00:21:15,740
4th we should see a red and a green

492
00:21:12,319 --> 00:21:18,668
highlight on that let's go ahead and

493
00:21:15,740 --> 00:21:18,669
kick those in here now

494
00:21:24,190 --> 00:21:33,200
and for good measure let's go ahead and

495
00:21:28,039 --> 00:21:40,700
kick these in here because we never

496
00:21:33,200 --> 00:21:43,759
gonna need them so now we're sampling

497
00:21:40,700 --> 00:21:46,789
from all the voxels and you know maybe

498
00:21:43,759 --> 00:21:59,750
we can just go in here and do something

499
00:21:46,789 --> 00:22:01,519
like this so now we've got everybody and

500
00:21:59,750 --> 00:22:03,710
we can just stuff the down and up so now

501
00:22:01,519 --> 00:22:05,089
we've got a Z stripe in there too and so

502
00:22:03,710 --> 00:22:07,220
now we should be able to do some kind of

503
00:22:05,089 --> 00:22:10,009
light verification hopefully we'll find

504
00:22:07,220 --> 00:22:11,509
out whether or not we can actually pull

505
00:22:10,009 --> 00:22:14,299
from all these voxels successfully

506
00:22:11,509 --> 00:22:16,009
without maybe there if there's any kind

507
00:22:14,299 --> 00:22:19,460
of bugs in how we were sending them down

508
00:22:16,009 --> 00:22:22,220
or anything but you know this is in

509
00:22:19,460 --> 00:22:24,730
theory sampling all the voxels and just

510
00:22:22,220 --> 00:22:29,839
trying to verify which ones are in there

511
00:22:24,730 --> 00:22:34,490
at this point so looking at it yeah so

512
00:22:29,839 --> 00:22:36,169
the green striping I don't think that's

513
00:22:34,490 --> 00:22:42,730
doing exactly what I had hoped hold on

514
00:22:36,170 --> 00:22:42,730
second let's do let's do it slightly

515
00:22:48,669 --> 00:22:57,889
let's do it this way I think this will

516
00:22:52,609 --> 00:23:02,388
be easier so this will basically say

517
00:22:57,888 --> 00:23:08,449
look we should see two four two four

518
00:23:02,388 --> 00:23:09,918
look on the on the on the stripes we

519
00:23:08,450 --> 00:23:13,519
should just see like regular patterns

520
00:23:09,919 --> 00:23:14,990
now and looking at it that looks a

521
00:23:13,519 --> 00:23:18,710
little still more frequent than I would

522
00:23:14,990 --> 00:23:23,058
have expected X mod four equals 0x month

523
00:23:18,710 --> 00:23:26,230
four equals two am I just doing

524
00:23:23,058 --> 00:23:26,230
something stupid here

525
00:23:29,700 --> 00:23:47,460
I might be if I said X mod eight I might

526
00:23:46,319 --> 00:23:48,809
be doing something stupid here but

527
00:23:47,460 --> 00:23:52,110
basically all I was trying to do is just

528
00:23:48,809 --> 00:23:56,639
say look let's space out these things

529
00:23:52,109 --> 00:23:58,709
fairly far but I guess I didn't there we

530
00:23:56,640 --> 00:24:01,170
go that's a little easier to see right

531
00:23:58,710 --> 00:24:03,740
so our voxels just way too dense it

532
00:24:01,170 --> 00:24:06,450
seems like but anyway now you can see

533
00:24:03,740 --> 00:24:10,259
we're we're getting a certain space in

534
00:24:06,450 --> 00:24:12,840
there if I turn off the mod for people

535
00:24:10,259 --> 00:24:16,950
so let's let's go ahead and move the mod

536
00:24:12,839 --> 00:24:18,899
for people down here like so right so if

537
00:24:16,950 --> 00:24:22,440
I go ahead and turn off the mod for

538
00:24:18,900 --> 00:24:24,450
people like this then what we should see

539
00:24:22,440 --> 00:24:26,130
and in fact I can toggle this at runtime

540
00:24:24,450 --> 00:24:29,580
actually if we just run it so we could

541
00:24:26,130 --> 00:24:32,610
see it change if we run it we should see

542
00:24:29,579 --> 00:24:36,269
fairly far spacing for our different

543
00:24:32,609 --> 00:24:41,789
ones and you do right so there's our you

544
00:24:36,269 --> 00:24:43,529
know fairly distantly spaced now I turn

545
00:24:41,789 --> 00:24:46,399
on the second set of lines we can see

546
00:24:43,529 --> 00:24:49,440
all of them become more frequent right

547
00:24:46,400 --> 00:24:52,230
hopefully oh but we won't because we're

548
00:24:49,440 --> 00:24:54,000
not sending it down every frame so let

549
00:24:52,230 --> 00:24:55,589
me run it again because remember we

550
00:24:54,000 --> 00:24:57,509
stopped and now we should see more

551
00:24:55,589 --> 00:25:00,089
frequent on each and we do so I think

552
00:24:57,509 --> 00:25:01,829
we're pulling from all of the voxels now

553
00:25:00,089 --> 00:25:04,019
and since we're pulling from all of the

554
00:25:01,829 --> 00:25:07,019
voxels now I think now I can go in and

555
00:25:04,019 --> 00:25:10,379
actually run the frame profiler and see

556
00:25:07,019 --> 00:25:14,029
what's up right so here's our frame

557
00:25:10,380 --> 00:25:18,210
profile here's us pulling from every

558
00:25:14,029 --> 00:25:20,910
from every voxel right and we're a

559
00:25:18,210 --> 00:25:24,600
little high on there let's go ahead and

560
00:25:20,910 --> 00:25:26,420
do a capture for live analysis and see

561
00:25:24,599 --> 00:25:30,089
who's taking the time we'll just see

562
00:25:26,420 --> 00:25:33,000
what's up at that and looking here

563
00:25:30,089 --> 00:25:35,189
honestly it looks like it's just chewing

564
00:25:33,000 --> 00:25:38,880
through this like you know it was steak

565
00:25:35,190 --> 00:25:41,850
tartare or something it seems like

566
00:25:38,880 --> 00:25:43,930
really the GPU just eats it for

567
00:25:41,849 --> 00:25:46,329
breakfast

568
00:25:43,930 --> 00:25:52,900
so it's just us it's just our CPU side

569
00:25:46,329 --> 00:25:54,789
stuff so in theory if I if if I nerf

570
00:25:52,900 --> 00:25:56,070
this our frame rate would presumably go

571
00:25:54,789 --> 00:25:58,629
up

572
00:25:56,069 --> 00:26:00,490
so let's actually try that see I don't

573
00:25:58,630 --> 00:26:02,320
know if M site can actually do the

574
00:26:00,490 --> 00:26:04,029
reload properly so I don't know if you

575
00:26:02,319 --> 00:26:05,379
can hot code reload inside n site that

576
00:26:04,029 --> 00:26:07,029
may be asking a little bit too much but

577
00:26:05,380 --> 00:26:09,670
I'll try it

578
00:26:07,029 --> 00:26:13,420
so here's its frame rate estimation

579
00:26:09,670 --> 00:26:15,910
right and I'm gonna go over to the code

580
00:26:13,420 --> 00:26:17,620
I'm going to take out the part where we

581
00:26:15,910 --> 00:26:18,940
actually fill the lighting buffers

582
00:26:17,619 --> 00:26:21,759
because they've already been sent down

583
00:26:18,940 --> 00:26:24,009
so it doesn't matter and we're gonna see

584
00:26:21,759 --> 00:26:26,710
on the on the reload what happens yeah

585
00:26:24,009 --> 00:26:31,420
there it is so what you can see is

586
00:26:26,710 --> 00:26:34,690
actually the GPU just crushes this so it

587
00:26:31,420 --> 00:26:38,190
you know cuz it said this is a 1080 I

588
00:26:34,690 --> 00:26:40,720
think in this machine or a nine eighty

589
00:26:38,190 --> 00:26:43,690
ten eighty nine eighty eight to nine

590
00:26:40,720 --> 00:26:44,750
eighty you know I don't know what's in

591
00:26:43,690 --> 00:26:50,559
this machine

592
00:26:44,750 --> 00:26:50,559
[Laughter]

593
00:26:50,920 --> 00:26:55,090
I don't remember what's in this machine

594
00:26:52,660 --> 00:26:57,190
that's that's how bad it is my work

595
00:26:55,089 --> 00:26:58,750
machine has a 1080 in it but this

596
00:26:57,190 --> 00:27:01,420
machine is older so me you know this

597
00:26:58,750 --> 00:27:03,700
might not have a kind of unit anyway the

598
00:27:01,420 --> 00:27:08,620
GPU eats it for breakfast if I actually

599
00:27:03,700 --> 00:27:11,620
go if I actually go take a look at

600
00:27:08,619 --> 00:27:14,289
what's in this machine here

601
00:27:11,619 --> 00:27:19,089
well ii can you terminate disconnect

602
00:27:14,289 --> 00:27:22,629
there we go close do something for the

603
00:27:19,089 --> 00:27:25,449
love of God here in sight thank you so

604
00:27:22,630 --> 00:27:28,540
yeah if we actually go look at what

605
00:27:25,450 --> 00:27:31,660
we're running here I don't actually

606
00:27:28,539 --> 00:27:32,589
remember does this actually tell us it

607
00:27:31,660 --> 00:27:36,070
doesn't tell us

608
00:27:32,589 --> 00:27:40,209
thanks.thanks windows take a look at

609
00:27:36,069 --> 00:27:41,919
that video control panel if we go look

610
00:27:40,210 --> 00:27:43,900
in here at the system information that

611
00:27:41,920 --> 00:27:48,460
should tell us which graphics card were

612
00:27:43,900 --> 00:27:49,780
actually running and it is a 1080 yeah

613
00:27:48,460 --> 00:27:50,600
there we go I'm like I thought it was

614
00:27:49,779 --> 00:27:55,279
something good

615
00:27:50,599 --> 00:27:56,509
uh so anyway this is a 1080 it's

616
00:27:55,279 --> 00:27:57,889
obviously not the latest and greatest

617
00:27:56,509 --> 00:28:01,940
the latest greatest is like one of those

618
00:27:57,890 --> 00:28:04,070
artsy X cards 220 heck they're called

619
00:28:01,940 --> 00:28:05,509
the numbering schemes are complete

620
00:28:04,069 --> 00:28:08,450
marketing food and make no sense but

621
00:28:05,509 --> 00:28:12,710
point being it's still a very fast

622
00:28:08,450 --> 00:28:15,319
graphics card very capable and so I

623
00:28:12,710 --> 00:28:16,970
suppose it's not surprising to see that

624
00:28:15,319 --> 00:28:19,428
nowadays these things are so powerful

625
00:28:16,970 --> 00:28:21,319
that pulling from six voxels at a time

626
00:28:19,429 --> 00:28:22,610
is like not even really interesting to

627
00:28:21,319 --> 00:28:25,788
them they're just like yes or whatever

628
00:28:22,609 --> 00:28:28,699
man here you go I don't care um so it

629
00:28:25,788 --> 00:28:30,140
looks like this is totally fine and not

630
00:28:28,700 --> 00:28:32,179
only does it look totally fine but it

631
00:28:30,140 --> 00:28:33,679
looks like if we wanted to we could

632
00:28:32,179 --> 00:28:35,419
increase the number of voxel samples

633
00:28:33,679 --> 00:28:38,298
we're taking so we could probably even

634
00:28:35,419 --> 00:28:41,030
go more nuts with it if we wanted to so

635
00:28:38,298 --> 00:28:43,279
what it looks like to me is our biggest

636
00:28:41,029 --> 00:28:47,119
problem is how the heck do we fill these

637
00:28:43,279 --> 00:28:49,639
voxels with something right that looks

638
00:28:47,119 --> 00:28:52,639
like it's going to be our biggest

639
00:28:49,640 --> 00:28:54,230
challenge and the reason that I think

640
00:28:52,640 --> 00:28:56,690
that's you know that it's a big

641
00:28:54,230 --> 00:29:00,589
challenge is because again I I really

642
00:28:56,690 --> 00:29:03,558
don't know that we want to put voxel

643
00:29:00,589 --> 00:29:05,418
ization on the GPU side because that

644
00:29:03,558 --> 00:29:07,639
would require us to use unorder to

645
00:29:05,419 --> 00:29:11,720
access views and that's just getting

646
00:29:07,640 --> 00:29:13,909
into the territory of like only really

647
00:29:11,720 --> 00:29:16,220
good graphics drivers probably work at

648
00:29:13,909 --> 00:29:19,610
all for this good graphics cards because

649
00:29:16,220 --> 00:29:22,640
unordered access views are a whole

650
00:29:19,609 --> 00:29:24,500
nother ballgame we've never really

651
00:29:22,640 --> 00:29:27,610
covered them on handmade Hira but

652
00:29:24,500 --> 00:29:30,859
basically what you have to remember is

653
00:29:27,609 --> 00:29:34,038
the graphics pipeline is set up so that

654
00:29:30,859 --> 00:29:37,399
fragment shaders get invoked on blocks

655
00:29:34,038 --> 00:29:42,650
of pixels probably like 4 by 4 8 by 8 or

656
00:29:37,400 --> 00:29:45,169
8 by 4 you know blocks of pixels at

657
00:29:42,650 --> 00:29:47,679
least 16 pixels at a time could be as

658
00:29:45,169 --> 00:29:50,210
much as 32 64 who knows right but

659
00:29:47,679 --> 00:29:52,460
they're getting it invoked on blocks of

660
00:29:50,210 --> 00:29:56,690
pixels that are based on the width of

661
00:29:52,460 --> 00:29:58,279
the ALU units in the graphics card so if

662
00:29:56,690 --> 00:29:59,808
they've got ill units that do 16

663
00:29:58,279 --> 00:30:01,730
multiplies at a time then you're gonna

664
00:29:59,808 --> 00:30:03,200
be a 4 by 4 block of pixels or something

665
00:30:01,730 --> 00:30:03,980
right because you're gonna do them all

666
00:30:03,200 --> 00:30:07,250
together

667
00:30:03,980 --> 00:30:09,589
and when you do those blocks those

668
00:30:07,250 --> 00:30:11,089
blocks are effectively like you have to

669
00:30:09,589 --> 00:30:15,259
think of those blocks as being almost

670
00:30:11,089 --> 00:30:18,769
like bins that are getting fed into a

671
00:30:15,259 --> 00:30:21,408
back-end that has to serialize the work

672
00:30:18,769 --> 00:30:24,138
to combine them and the reason for that

673
00:30:21,409 --> 00:30:26,059
is because graphics has a draw order

674
00:30:24,138 --> 00:30:30,199
which is kind of annoying but that's

675
00:30:26,058 --> 00:30:31,819
just how graphics works if I draw a one

676
00:30:30,200 --> 00:30:33,798
triangle and they draw another triangle

677
00:30:31,819 --> 00:30:37,908
and the second triangle overlaps the

678
00:30:33,798 --> 00:30:38,808
first triangle the second triangle is

679
00:30:37,909 --> 00:30:41,149
the one you're going to see not the

680
00:30:38,808 --> 00:30:43,220
first right and so if there's a z-buffer

681
00:30:41,148 --> 00:30:46,609
in there the z-buffer will do testing or

682
00:30:43,220 --> 00:30:47,929
whatever but if you just have zebras who

683
00:30:46,609 --> 00:30:49,250
turned off the second triangle is the

684
00:30:47,929 --> 00:30:52,490
one that drops period right so that

685
00:30:49,250 --> 00:30:54,798
whatever draws last it draws and the

686
00:30:52,490 --> 00:30:56,870
graphics card is not allowed to pick an

687
00:30:54,798 --> 00:30:59,148
arbitrary order it has to be the same

688
00:30:56,869 --> 00:31:00,979
order every time so even if it decided

689
00:30:59,148 --> 00:31:02,298
that instead you know some other

690
00:31:00,980 --> 00:31:03,230
triangle should draw whatever it has to

691
00:31:02,298 --> 00:31:06,740
be the same every time whether you get

692
00:31:03,230 --> 00:31:09,079
flickering right and so what happens is

693
00:31:06,740 --> 00:31:10,970
there's a there's a part of the graphics

694
00:31:09,079 --> 00:31:13,579
pipeline that takes all of the filled

695
00:31:10,970 --> 00:31:15,798
pixel chunks and combines them together

696
00:31:13,579 --> 00:31:17,210
to produce the final output chunk for

697
00:31:15,798 --> 00:31:18,528
that region of the screen if lots of

698
00:31:17,210 --> 00:31:21,440
triangles overlap it they have to get

699
00:31:18,528 --> 00:31:25,369
reconciled by a blend unit and if you're

700
00:31:21,440 --> 00:31:27,528
wondering why that's why like blending

701
00:31:25,369 --> 00:31:30,288
is really weak why you have to specify

702
00:31:27,528 --> 00:31:32,210
like a fixed equation with some fixed

703
00:31:30,288 --> 00:31:34,669
coefficients and that's how blending

704
00:31:32,210 --> 00:31:38,149
works rather than be able to write your

705
00:31:34,669 --> 00:31:40,759
own blending shader that's why it's

706
00:31:38,148 --> 00:31:44,089
specifically because that part of the

707
00:31:40,759 --> 00:31:45,950
back end has to be super fast and has to

708
00:31:44,089 --> 00:31:47,750
it can't really be wide because it have

709
00:31:45,950 --> 00:31:51,470
its serial right it has to go in order

710
00:31:47,750 --> 00:31:54,349
and so that's why you don't see

711
00:31:51,470 --> 00:31:56,690
programmable blending very often on very

712
00:31:54,349 --> 00:32:01,898
many cards is because really high

713
00:31:56,690 --> 00:32:01,899
throughput cards can't afford it right

714
00:32:03,849 --> 00:32:15,019
so all that said so unordered access

715
00:32:12,319 --> 00:32:16,819
views are saying forget that we just

716
00:32:15,019 --> 00:32:19,429
want to write wherever the heck we want

717
00:32:16,819 --> 00:32:23,329
to write we want to do whatever we want

718
00:32:19,429 --> 00:32:26,150
to do right and summit so an unordered

719
00:32:23,329 --> 00:32:29,178
access view is basically saying I'm not

720
00:32:26,150 --> 00:32:32,090
going to tell you what block of pixels

721
00:32:29,179 --> 00:32:35,179
I'm even going to touch could be any set

722
00:32:32,089 --> 00:32:37,250
of pixels anywhere in and in texture I

723
00:32:35,179 --> 00:32:39,350
don't care and you're gonna have to deal

724
00:32:37,250 --> 00:32:40,909
with it so it's basically like saying I

725
00:32:39,349 --> 00:32:43,759
get to write anywhere in the frame

726
00:32:40,909 --> 00:32:46,340
buffer I want to write and so an

727
00:32:43,759 --> 00:32:50,029
unordered access view is just really bad

728
00:32:46,339 --> 00:32:53,569
in that sense it creates on the graphics

729
00:32:50,029 --> 00:32:55,970
card side a need to basically treat the

730
00:32:53,569 --> 00:32:59,418
blending output unit as almost like a

731
00:32:55,970 --> 00:33:01,940
cache rather than an actual guaranteed

732
00:32:59,419 --> 00:33:04,429
part of the pipeline because now you

733
00:33:01,940 --> 00:33:07,070
have no idea which set of blocks I'm

734
00:33:04,429 --> 00:33:08,980
even talking about until after you run

735
00:33:07,069 --> 00:33:12,319
the shader right

736
00:33:08,980 --> 00:33:13,788
and so obviously graphics card companies

737
00:33:12,319 --> 00:33:15,980
are smart they know what they're doing

738
00:33:13,788 --> 00:33:18,109
they've probably on the high end like

739
00:33:15,980 --> 00:33:20,419
I'm sure on this on this graph on this

740
00:33:18,109 --> 00:33:22,189
GPU right here I'm sure they're

741
00:33:20,419 --> 00:33:25,100
unordered access views probably run

742
00:33:22,190 --> 00:33:27,890
almost as fast is not right I'm sure

743
00:33:25,099 --> 00:33:29,449
they probably got the chip organized so

744
00:33:27,890 --> 00:33:30,799
that it caches it properly and just

745
00:33:29,450 --> 00:33:32,179
pulls in to the right blocks and

746
00:33:30,798 --> 00:33:33,470
whichever ones you touch gets

747
00:33:32,179 --> 00:33:35,169
synchronized through a back-end thing

748
00:33:33,470 --> 00:33:38,058
I'm sure they've got it dialed right

749
00:33:35,169 --> 00:33:39,860
fire up into integrated graphics someday

750
00:33:38,058 --> 00:33:43,668
and I'm not sure that's gonna be the

751
00:33:39,859 --> 00:33:46,639
case folks right and so I'm nervous

752
00:33:43,669 --> 00:33:50,240
about using an order to access views

753
00:33:46,640 --> 00:33:52,400
because I don't know I'd have to ask a

754
00:33:50,240 --> 00:33:55,700
person who does more GPU compat work I

755
00:33:52,400 --> 00:33:57,740
don't really know how likely unordered

756
00:33:55,700 --> 00:33:59,360
access views are to work in a lot of

757
00:33:57,740 --> 00:34:04,120
places and work fast

758
00:33:59,359 --> 00:34:12,259
you know so I'm really nervous about

759
00:34:04,119 --> 00:34:15,789
voxel izing voxel izing things on the

760
00:34:12,260 --> 00:34:19,200
GPU side is scary to me

761
00:34:15,789 --> 00:34:22,480
and so that's a problem for us because

762
00:34:19,199 --> 00:34:26,109
it means that if we were to voxel eyes

763
00:34:22,480 --> 00:34:32,349
on the CPU side it kind of makes it

764
00:34:26,110 --> 00:34:37,059
tough CPU side Vox Latian maybe kind of

765
00:34:32,349 --> 00:34:38,829
rough but you know we can use six threat

766
00:34:37,059 --> 00:34:42,849
we can well probably count at least four

767
00:34:38,829 --> 00:34:45,069
threads and we can do it wide so we can

768
00:34:42,849 --> 00:34:47,500
do four threads and four wide which

769
00:34:45,070 --> 00:34:53,230
might get us a you know ballpark a 16x

770
00:34:47,500 --> 00:34:59,230
boost so you know it's possible that it

771
00:34:53,230 --> 00:35:01,389
could work we could in theory do a good

772
00:34:59,230 --> 00:35:06,340
job block slicing on the CPU side so for

773
00:35:01,389 --> 00:35:09,639
now I'm gonna hope that we can and then

774
00:35:06,340 --> 00:35:13,450
we'll deal with the can't part of the

775
00:35:09,639 --> 00:35:16,119
maybe not maybe we can't part when it

776
00:35:13,449 --> 00:35:17,169
turns out that we can because hey we

777
00:35:16,119 --> 00:35:19,569
would want a reference implementation

778
00:35:17,170 --> 00:35:23,170
running on the CPU side anyway so we can

779
00:35:19,570 --> 00:35:24,180
get it all working there first that's

780
00:35:23,170 --> 00:35:30,360
where we're at

781
00:35:24,179 --> 00:35:33,250
alright so let's start by actually

782
00:35:30,360 --> 00:35:37,990
looking at how big this voxel needs to

783
00:35:33,250 --> 00:35:41,559
be so here is the size of a voxel stripe

784
00:35:37,989 --> 00:35:45,339
I'm gonna go into the OpenGL renderer

785
00:35:41,559 --> 00:35:47,019
temporarily I've already turned off

786
00:35:45,340 --> 00:35:49,329
mipmapping I'm gonna turn off linear

787
00:35:47,019 --> 00:35:52,030
blending as well the B's going to turn

788
00:35:49,329 --> 00:35:55,000
off the linear blending is because I

789
00:35:52,030 --> 00:35:57,750
don't want it to blur the boundaries I

790
00:35:55,000 --> 00:36:01,960
want to see exactly where these voxels

791
00:35:57,750 --> 00:36:05,349
actually are and so when we create in

792
00:36:01,960 --> 00:36:08,530
OpenGL in it when we create these I'm

793
00:36:05,349 --> 00:36:11,529
gonna turn off this filtering right here

794
00:36:08,530 --> 00:36:15,519
so we can see where the voxel boundaries

795
00:36:11,530 --> 00:36:18,120
themselves actually are right and so if

796
00:36:15,519 --> 00:36:21,639
I run it now in theory what I should see

797
00:36:18,119 --> 00:36:25,119
maybe if I did it right is the width of

798
00:36:21,639 --> 00:36:28,699
an actual voxel right so if you take a

799
00:36:25,119 --> 00:36:30,469
look at how detailed this is

800
00:36:28,699 --> 00:36:34,250
let's move out to an area where we're

801
00:36:30,469 --> 00:36:36,919
fairly zoomed out so I think like the

802
00:36:34,250 --> 00:36:38,358
most zoom that we ever get and maybe be

803
00:36:36,920 --> 00:36:41,358
too much zoom I don't know but it's

804
00:36:38,358 --> 00:36:45,380
something like this if you look at that

805
00:36:41,358 --> 00:36:47,420
amount of lighting you know I think

806
00:36:45,380 --> 00:36:50,210
that's probably fine we need it to be a

807
00:36:47,420 --> 00:36:52,039
little bit bigger than that so the light

808
00:36:50,210 --> 00:36:53,809
bounds need to be spread out a little

809
00:36:52,039 --> 00:36:56,599
bit more than that I'm not sure what's

810
00:36:53,809 --> 00:37:02,779
going on there let me take a look at

811
00:36:56,599 --> 00:37:05,269
that so in here we're looking at this

812
00:37:02,780 --> 00:37:07,970
world camera rekt I'm guessing that's

813
00:37:05,269 --> 00:37:10,369
just wrong or something

814
00:37:07,969 --> 00:37:16,429
I absolutely don't that that number is

815
00:37:10,369 --> 00:37:17,088
actually what's wrong what why did we do

816
00:37:16,429 --> 00:37:21,769
that

817
00:37:17,088 --> 00:37:29,750
don't we know the don't we know that

818
00:37:21,769 --> 00:37:32,449
number like what the heck I guess we

819
00:37:29,750 --> 00:37:35,088
must just not be saving that number you

820
00:37:32,449 --> 00:37:37,129
know I'm saying if you come in here you

821
00:37:35,088 --> 00:37:41,000
can see us doing this rotation and we do

822
00:37:37,130 --> 00:37:45,890
like Delta stuff here and blah blah blah

823
00:37:41,000 --> 00:37:50,679
right I'm gonna go ahead and just guess

824
00:37:45,889 --> 00:37:53,659
that the simulation center versus the

825
00:37:50,679 --> 00:37:56,210
like it should probably be a delta from

826
00:37:53,659 --> 00:37:58,489
the simulation center I'm guessing don't

827
00:37:56,210 --> 00:38:00,740
really know but I think that's probably

828
00:37:58,489 --> 00:38:03,828
the case so in here if I like took a

829
00:38:00,739 --> 00:38:07,669
look at this if I took the camera z-axis

830
00:38:03,829 --> 00:38:08,930
and did an inner product on that you

831
00:38:07,670 --> 00:38:12,920
know what I'm saying if I did something

832
00:38:08,929 --> 00:38:16,519
like the simulation center so the the

833
00:38:12,920 --> 00:38:21,349
the location of the camera right like

834
00:38:16,519 --> 00:38:24,619
where the camera actually is versus the

835
00:38:21,349 --> 00:38:27,010
simulation center let me take a look

836
00:38:24,619 --> 00:38:27,010
here

837
00:38:32,429 --> 00:38:38,519
so we've got in in this we've got the

838
00:38:36,480 --> 00:38:42,690
game camera and you can see here we've

839
00:38:38,519 --> 00:38:45,750
got sort of the stuff going on here you

840
00:38:42,690 --> 00:38:49,710
can see right here the focus

841
00:38:45,750 --> 00:38:52,528
Minzy and Maxie I think that's what we

842
00:38:49,710 --> 00:38:53,699
want right so I don't even have to do

843
00:38:52,528 --> 00:38:55,889
this computation I was about to

844
00:38:53,699 --> 00:39:00,179
contemplate because this is the value we

845
00:38:55,889 --> 00:39:02,400
actually need so I think the expected

846
00:39:00,179 --> 00:39:03,899
focus Minzy and if it's already Maxie is

847
00:39:02,400 --> 00:39:07,289
like the region in which we're supposed

848
00:39:03,900 --> 00:39:09,510
to be looking so I think if we just said

849
00:39:07,289 --> 00:39:11,450
like the bounds between those I don't

850
00:39:09,510 --> 00:39:15,000
know

851
00:39:11,449 --> 00:39:26,549
exactly how far through those we want to

852
00:39:15,000 --> 00:39:28,679
go but let's go ahead and say yeah I'm

853
00:39:26,550 --> 00:39:31,050
gonna I'm gonna sort of ballpark it here

854
00:39:28,679 --> 00:39:34,710
let's go ahead and say that if we took a

855
00:39:31,050 --> 00:39:38,310
look at the worlds mode camera expected

856
00:39:34,710 --> 00:39:44,340
focus Minzy and we want to sort of bound

857
00:39:38,309 --> 00:39:46,110
that region maybe we do a sort of a a

858
00:39:44,340 --> 00:39:51,150
split I don't know

859
00:39:46,110 --> 00:39:52,590
so something like this maybe what we

860
00:39:51,150 --> 00:39:55,320
really should be doing is taking both

861
00:39:52,590 --> 00:39:57,240
and then sort of building a pound or

862
00:39:55,320 --> 00:39:59,730
something but I'm so I'm not sure but

863
00:39:57,239 --> 00:40:00,719
let's say we do something like this I'm

864
00:39:59,730 --> 00:40:02,039
just gonna play with this a little bit

865
00:40:00,719 --> 00:40:03,750
and see if we can get those bounds a

866
00:40:02,039 --> 00:40:05,340
little bit better cuz the bounds are

867
00:40:03,750 --> 00:40:07,079
kind of crappy at the moment and I'm

868
00:40:05,340 --> 00:40:10,880
just I'm not sure why there might be

869
00:40:07,079 --> 00:40:10,880
some bugs in it as well

870
00:40:22,690 --> 00:40:26,320
so now one of the nice things is you can

871
00:40:24,849 --> 00:40:30,069
kind of see we don't really have that

872
00:40:26,320 --> 00:40:32,440
lighting problem anymore we're actually

873
00:40:30,070 --> 00:40:35,950
act actively lighting sort of the

874
00:40:32,440 --> 00:40:37,809
correct region more more so than we were

875
00:40:35,949 --> 00:40:40,029
before right

876
00:40:37,809 --> 00:40:44,049
we may be lighting a little larger than

877
00:40:40,030 --> 00:40:46,240
we should so we might want to we might

878
00:40:44,050 --> 00:40:51,039
not want it quite that big it's hard to

879
00:40:46,239 --> 00:40:55,319
say but if you take a look at the sort

880
00:40:51,039 --> 00:40:57,880
of difference between these two yeah

881
00:40:55,320 --> 00:41:00,430
hard to say but anyway I think that's

882
00:40:57,880 --> 00:41:03,099
fine for the most part with where the

883
00:41:00,429 --> 00:41:04,119
light is I think that's all good so

884
00:41:03,099 --> 00:41:08,259
let's let's leave it like that

885
00:41:04,119 --> 00:41:10,420
temporarily and so if we take a look at

886
00:41:08,260 --> 00:41:12,640
how sparse that voxel it I mean how

887
00:41:10,420 --> 00:41:15,400
detailed that voxel is even in this case

888
00:41:12,639 --> 00:41:17,170
it's just way more voxel information

889
00:41:15,400 --> 00:41:19,780
than we need it's it's almost four per

890
00:41:17,170 --> 00:41:22,840
grid sweatt's grid cell only nearly need

891
00:41:19,780 --> 00:41:27,220
one per grid cell right for a Nyquist we

892
00:41:22,840 --> 00:41:29,920
could go to two per grid cell but I mean

893
00:41:27,219 --> 00:41:31,419
it's just not I know I don't really

894
00:41:29,920 --> 00:41:33,190
think it's necessary so if you look at

895
00:41:31,420 --> 00:41:34,599
even if for a pulled out version it's

896
00:41:33,190 --> 00:41:36,610
just it's just way more detail than we

897
00:41:34,599 --> 00:41:40,779
need so I must say we can definitely

898
00:41:36,610 --> 00:41:42,130
drop down to 64 at the very least we

899
00:41:40,780 --> 00:41:43,990
might even be able to go lower than that

900
00:41:42,130 --> 00:41:48,660
but you know I'm gonna say that at a

901
00:41:43,989 --> 00:41:51,219
minimum we go to 64 oops

902
00:41:48,659 --> 00:41:52,509
because one twenty eighths way too

903
00:41:51,219 --> 00:41:54,339
detailed and we're just going to be

904
00:41:52,510 --> 00:41:56,290
blowing a ton of time voxel izing stuff

905
00:41:54,340 --> 00:41:57,730
because it's way more detail than we

906
00:41:56,289 --> 00:42:00,179
need and I just don't think it's worth

907
00:41:57,730 --> 00:42:00,179
it right

908
00:42:00,699 --> 00:42:05,019
so there's a much more reasonable

909
00:42:02,559 --> 00:42:07,420
science for the learning but again it

910
00:42:05,019 --> 00:42:10,710
seems like it's probably I wonder if

911
00:42:07,420 --> 00:42:13,269
three two by 32 would actually be better

912
00:42:10,710 --> 00:42:17,380
it's still just a little too detailed I

913
00:42:13,269 --> 00:42:20,079
think right so I kind of feel like maybe

914
00:42:17,380 --> 00:42:21,340
what we want is more like 32 by 32 and

915
00:42:20,079 --> 00:42:24,210
let's and we could try to get the

916
00:42:21,340 --> 00:42:27,210
lighting bands a little tighter in

917
00:42:24,210 --> 00:42:27,210
general

918
00:42:30,000 --> 00:42:34,889
and so now you can see it's a little I

919
00:42:32,849 --> 00:42:38,579
think it's a little nicer right now you

920
00:42:34,889 --> 00:42:41,329
can kind of see that it's roughly yeah

921
00:42:38,579 --> 00:42:46,559
it seems like roughly the right size I

922
00:42:41,329 --> 00:42:53,610
do think this this band the band in Y is

923
00:42:46,559 --> 00:42:55,230
is too it's too thick and I'm not really

924
00:42:53,610 --> 00:42:57,090
sure why that would be the case because

925
00:42:55,230 --> 00:43:01,260
the band in that direction should

926
00:42:57,090 --> 00:43:14,610
actually been smaller so I that doesn't

927
00:43:01,260 --> 00:43:15,960
quite add up to me I think there's some

928
00:43:14,610 --> 00:43:18,710
kind of bug in our algorithm or

929
00:43:15,960 --> 00:43:18,710
something

930
00:43:22,239 --> 00:43:31,189
cuz riddle me this if the bounds are

931
00:43:26,199 --> 00:43:33,349
shorter in Y than an X which they

932
00:43:31,190 --> 00:43:35,929
obviously are you can see that they are

933
00:43:33,349 --> 00:43:37,909
right I mean it would help if I could

934
00:43:35,929 --> 00:43:40,549
move it back a little bit so we could

935
00:43:37,909 --> 00:43:43,779
see the top bound as well I guess it's

936
00:43:40,550 --> 00:43:46,640
kind of hard to see the top out but I

937
00:43:43,780 --> 00:43:47,900
mean I only see one stripe on there

938
00:43:46,639 --> 00:43:51,230
right that doesn't really make any sense

939
00:43:47,900 --> 00:43:55,639
so something's wrong with our sampling

940
00:43:51,230 --> 00:43:59,329
or our for our fill but I don't or our

941
00:43:55,639 --> 00:44:02,059
our constant that we sent down so

942
00:43:59,329 --> 00:44:06,170
something weird is going on and we need

943
00:44:02,059 --> 00:44:09,230
to fix that so let's figure out what's

944
00:44:06,170 --> 00:44:12,800
up with that so in set light bounds like

945
00:44:09,230 --> 00:44:15,949
if we have in light dim here and and we

946
00:44:12,800 --> 00:44:18,350
do this to map into the voxel space I'm

947
00:44:15,949 --> 00:44:20,269
wondering is that computation like bogus

948
00:44:18,349 --> 00:44:24,170
or something or did something weird

949
00:44:20,269 --> 00:44:26,690
happen so I kind of want to know what

950
00:44:24,170 --> 00:44:29,930
what that like what is this process

951
00:44:26,690 --> 00:44:32,329
doing it's something untoward happening

952
00:44:29,929 --> 00:44:36,230
there I'm gonna go ahead and see if I

953
00:44:32,329 --> 00:44:37,940
can look at operator divide on the

954
00:44:36,230 --> 00:44:42,800
vector I just want to see like what that

955
00:44:37,940 --> 00:44:44,720
will do so here's that that code it

956
00:44:42,800 --> 00:44:49,930
looks like it should do one over each of

957
00:44:44,719 --> 00:44:49,929
the dimensions which is what I wanted

958
00:44:54,360 --> 00:44:58,210
so I'm not sure what's wrong there let

959
00:44:56,619 --> 00:44:59,739
me look at the shader as well and then

960
00:44:58,210 --> 00:45:01,599
we'll just step through it and try to

961
00:44:59,739 --> 00:45:05,139
bug what's going on because something

962
00:45:01,599 --> 00:45:08,489
weird is happening and I'm not sure what

963
00:45:05,139 --> 00:45:12,909
so if we look at the Z bias program

964
00:45:08,489 --> 00:45:15,279
which is right here here's how we're

965
00:45:12,909 --> 00:45:17,859
producing this we first subtract the

966
00:45:15,280 --> 00:45:20,200
voxel mid-corner away that should put it

967
00:45:17,860 --> 00:45:22,420
relative to the min corner then we

968
00:45:20,199 --> 00:45:27,629
multiplied by what was effectively

969
00:45:22,420 --> 00:45:33,970
divided by the total length of the voxel

970
00:45:27,630 --> 00:45:38,349
that should be giving us a 0 to 1 on

971
00:45:33,969 --> 00:45:42,849
each of our dimensions so again not

972
00:45:38,349 --> 00:45:45,159
really sure I see why we're getting a

973
00:45:42,849 --> 00:45:47,619
problem there if I pop back to lighting

974
00:45:45,159 --> 00:45:49,839
really quick just to see if there's

975
00:45:47,619 --> 00:45:52,449
anything weird happening here I don't

976
00:45:49,840 --> 00:45:56,860
see anything strange there but you know

977
00:45:52,449 --> 00:45:59,889
did I mess up the indexing so this is

978
00:45:56,860 --> 00:46:04,150
our x coordinate right for every Y we

979
00:45:59,889 --> 00:46:07,029
need to move the full voxel dimension

980
00:46:04,150 --> 00:46:08,800
right which is this forward we could go

981
00:46:07,030 --> 00:46:10,420
double-check that that's correct as well

982
00:46:08,800 --> 00:46:13,240
I suppose

983
00:46:10,420 --> 00:46:15,220
and then for Z we need to move that

984
00:46:13,239 --> 00:46:19,419
squared right because it's an entire y

985
00:46:15,219 --> 00:46:25,359
sheet of the voxel at that point XY

986
00:46:19,420 --> 00:46:27,159
sheet so I don't know like but

987
00:46:25,360 --> 00:46:29,349
something's up so we need to debug that

988
00:46:27,159 --> 00:46:32,109
first and make sure that because we

989
00:46:29,349 --> 00:46:35,529
should see each of the the voxels the

990
00:46:32,110 --> 00:46:39,160
same in every direction it's 32 by 32 by

991
00:46:35,530 --> 00:46:45,570
32 now so we should see exactly four

992
00:46:39,159 --> 00:46:48,969
stripes in the lighting and in each one

993
00:46:45,570 --> 00:46:51,090
that's what we needed to see right but

994
00:46:48,969 --> 00:46:53,609
you can see when I open it up here

995
00:46:51,090 --> 00:46:57,940
that's totally not what I get and

996
00:46:53,610 --> 00:47:00,820
interestingly enough you can see like

997
00:46:57,940 --> 00:47:02,369
like just to underscore just how wrong

998
00:47:00,820 --> 00:47:05,940
this is

999
00:47:02,369 --> 00:47:09,839
what you can see happening is

1000
00:47:05,940 --> 00:47:13,860
if I go back here and you say if I

1001
00:47:09,840 --> 00:47:18,090
wanted to know how many times you can go

1002
00:47:13,860 --> 00:47:21,480
from zero to eight inside 32 right I

1003
00:47:18,090 --> 00:47:27,660
would expect the answer to be four right

1004
00:47:21,480 --> 00:47:29,130
so X mod 8 at 0 will be 0 I then go have

1005
00:47:27,659 --> 00:47:31,739
to go all the way up to 8 before it's

1006
00:47:29,130 --> 00:47:34,769
again so it happens at 0 times at 8

1007
00:47:31,739 --> 00:47:37,469
it'll happen again at 16 and at 24 and

1008
00:47:34,769 --> 00:47:39,929
then there is no 32 because that's when

1009
00:47:37,469 --> 00:47:46,469
this loop would stop so that's 4 stripes

1010
00:47:39,929 --> 00:47:51,799
of red right oh but this is if 0 ok

1011
00:47:46,469 --> 00:47:51,799
never mind that that works

1012
00:47:55,750 --> 00:48:03,920
so now do I see four stripes of red

1013
00:47:59,570 --> 00:48:06,080
let's find out so I expect to see four

1014
00:48:03,920 --> 00:48:15,159
stripes of red in along X it looks like

1015
00:48:06,079 --> 00:48:21,049
maybe I would write one two three four

1016
00:48:15,159 --> 00:48:23,480
yeah so that's good right that's exactly

1017
00:48:21,050 --> 00:48:30,310
what I want to see so now the question

1018
00:48:23,480 --> 00:48:36,139
is why don't I see any any of the green

1019
00:48:30,309 --> 00:48:41,150
right where's the green and you know I I

1020
00:48:36,139 --> 00:48:49,039
don't know if I was to to look at this

1021
00:48:41,150 --> 00:48:52,190
the light east value right it should be

1022
00:48:49,039 --> 00:48:59,389
coming in here it looks like that's

1023
00:48:52,190 --> 00:49:01,490
getting set if I go to the shader here

1024
00:48:59,389 --> 00:49:06,710
is the sampling it's being sampled by

1025
00:49:01,489 --> 00:49:09,439
the same exact parameter right so I

1026
00:49:06,710 --> 00:49:12,320
don't know let's do some testing let's

1027
00:49:09,440 --> 00:49:15,740
suppose that I look at the lady Estelle

1028
00:49:12,320 --> 00:49:17,630
you here and I say what if I change it

1029
00:49:15,739 --> 00:49:20,689
to like West so now it's in the same

1030
00:49:17,630 --> 00:49:22,430
voxel right so those stripes are not on

1031
00:49:20,690 --> 00:49:28,700
two different voxels oops they're now on

1032
00:49:22,429 --> 00:49:33,139
the same voxel so it's not the sampling

1033
00:49:28,699 --> 00:49:34,969
of the voxel right in terms of which one

1034
00:49:33,139 --> 00:49:37,159
were sampling it's either the sampling

1035
00:49:34,969 --> 00:49:39,139
of all the voxels period or it's the

1036
00:49:37,159 --> 00:49:42,589
filling out of all the voxels but it's

1037
00:49:39,139 --> 00:49:44,779
it's you know it has nothing to do with

1038
00:49:42,590 --> 00:49:49,730
whether it's in the west or the east

1039
00:49:44,780 --> 00:49:51,880
facing voxel right so let's think about

1040
00:49:49,730 --> 00:49:54,440
that for a second

1041
00:49:51,880 --> 00:49:59,858
we know that that we get this problem in

1042
00:49:54,440 --> 00:49:59,858
either case that means that I guess

1043
00:50:00,400 --> 00:50:08,099
maybe the way we're sending down the the

1044
00:50:06,650 --> 00:50:09,900
total dam is wrong

1045
00:50:08,099 --> 00:50:14,150
because the min corner looks like it's

1046
00:50:09,900 --> 00:50:24,588
in the right place but the the total dim

1047
00:50:14,150 --> 00:50:24,588
the y total dim mutt must be wrong

1048
00:50:38,789 --> 00:50:51,300
I mean just looking at this equation

1049
00:50:41,519 --> 00:50:53,039
right first of all this is busted that

1050
00:50:51,300 --> 00:50:56,850
was supposed to be an axe so that's

1051
00:50:53,039 --> 00:51:01,949
great I don't think that's enough to

1052
00:50:56,849 --> 00:51:06,900
mess with it much I also don't

1053
00:51:01,949 --> 00:51:09,210
understand why oh wait no that's not

1054
00:51:06,900 --> 00:51:10,860
what that supposed to be that's shifting

1055
00:51:09,210 --> 00:51:16,199
the Y by two never mind

1056
00:51:10,860 --> 00:51:17,280
that's what that's fine but again we

1057
00:51:16,199 --> 00:51:18,419
probably want to fix it you shouldn't

1058
00:51:17,280 --> 00:51:19,920
have to do that because that should have

1059
00:51:18,420 --> 00:51:26,880
been counted for in the in the camera

1060
00:51:19,920 --> 00:51:28,590
rectangle stuff you can see it's adding

1061
00:51:26,880 --> 00:51:38,070
to it here but we're adding to it on

1062
00:51:28,590 --> 00:51:40,789
both counts let's get rid of this for a

1063
00:51:38,070 --> 00:51:40,789
second see what we've got

1064
00:52:03,860 --> 00:52:07,789
so I think we probably want to work on

1065
00:52:06,019 --> 00:52:10,489
our query anyway so I think we're gonna

1066
00:52:07,789 --> 00:52:12,110
maybe leave it like this and then just

1067
00:52:10,489 --> 00:52:16,369
fix the query rather than having those

1068
00:52:12,110 --> 00:52:20,090
weird like you know adjustments in here

1069
00:52:16,369 --> 00:52:22,730
so I'm gonna leave this out for now and

1070
00:52:20,090 --> 00:52:25,789
we will take a look at that in a little

1071
00:52:22,730 --> 00:52:30,380
bit the ad radius two part may need to

1072
00:52:25,789 --> 00:52:32,389
stay but we'll see so anyway uh inter

1073
00:52:30,380 --> 00:52:34,849
cuz we do kind of probably want an apron

1074
00:52:32,389 --> 00:52:36,739
because we need to get light that comes

1075
00:52:34,849 --> 00:52:39,110
from the outside so I guess we'll see

1076
00:52:36,739 --> 00:52:42,469
but anyway when we've got our set light

1077
00:52:39,110 --> 00:52:43,910
bounds here I want to know what's going

1078
00:52:42,469 --> 00:52:45,169
on why we don't see those stripes so I

1079
00:52:43,909 --> 00:52:47,210
want to know what's going on with this

1080
00:52:45,170 --> 00:52:49,760
inflight dim here so I want to kind of

1081
00:52:47,210 --> 00:52:51,610
look and see what this value is and just

1082
00:52:49,760 --> 00:52:54,770
why we're getting such a strange

1083
00:52:51,610 --> 00:52:56,180
disparity between the two and maybe

1084
00:52:54,769 --> 00:52:59,210
there's something else going on there as

1085
00:52:56,179 --> 00:53:00,889
well so I should check here as well we

1086
00:52:59,210 --> 00:53:02,780
look in you can see just to make sure

1087
00:53:00,889 --> 00:53:05,989
that this is you know getting sent down

1088
00:53:02,780 --> 00:53:08,810
right it looks like it is when we do the

1089
00:53:05,989 --> 00:53:10,819
push setup here and I could also look to

1090
00:53:08,809 --> 00:53:12,380
see where we actually get those out so

1091
00:53:10,820 --> 00:53:14,120
where we actually send them down to the

1092
00:53:12,380 --> 00:53:17,180
graphs card that's going to be in the

1093
00:53:14,119 --> 00:53:21,079
use program call for Z bias program so

1094
00:53:17,179 --> 00:53:24,019
in here where we have this used for

1095
00:53:21,079 --> 00:53:26,360
gonna begin we're sending down the min

1096
00:53:24,019 --> 00:53:29,449
corner in the in filled in like this it

1097
00:53:26,360 --> 00:53:32,180
looks like it's right I mean for the

1098
00:53:29,449 --> 00:53:34,789
most part I don't see anything

1099
00:53:32,179 --> 00:53:38,569
particularly odd happening there so it

1100
00:53:34,789 --> 00:53:40,219
feels like it's probably okay and let me

1101
00:53:38,570 --> 00:53:43,850
go ahead and switch our build mode now

1102
00:53:40,219 --> 00:53:47,359
to not be optimized so this'll be a a -

1103
00:53:43,849 --> 00:53:48,739
ot and I'm gonna go any and inspect

1104
00:53:47,360 --> 00:53:49,940
those variables cuz I don't really know

1105
00:53:48,739 --> 00:53:52,339
what's going on I'm not sure why I'm

1106
00:53:49,940 --> 00:53:56,119
getting that kind of fun expected

1107
00:53:52,340 --> 00:53:58,519
pattern there so looking at the game and

1108
00:53:56,119 --> 00:54:01,880
debug mode here again so just to recap

1109
00:53:58,519 --> 00:54:04,159
I'm seeing the the red stripes I expect

1110
00:54:01,880 --> 00:54:07,160
I'm not seeing the green stripes that I

1111
00:54:04,159 --> 00:54:09,409
expect to see and for all I know it's

1112
00:54:07,159 --> 00:54:11,690
because the Y dimension is like really

1113
00:54:09,409 --> 00:54:14,750
large or something like just totally

1114
00:54:11,690 --> 00:54:16,039
wrong I don't know and so what I need to

1115
00:54:14,750 --> 00:54:17,300
do is just figure out what's going on

1116
00:54:16,039 --> 00:54:19,909
there so I'm gonna look into the

1117
00:54:17,300 --> 00:54:21,650
world mode here and I just want to try

1118
00:54:19,909 --> 00:54:24,619
and figure out like alright if I look at

1119
00:54:21,650 --> 00:54:29,030
the world mode where it's actually

1120
00:54:24,619 --> 00:54:36,079
getting that in-flight dem they're like

1121
00:54:29,030 --> 00:54:37,910
I want to break right here and I just

1122
00:54:36,079 --> 00:54:42,739
want to see what we're actually sending

1123
00:54:37,909 --> 00:54:45,589
down so if we look at in-flight dim you

1124
00:54:42,739 --> 00:54:51,759
know you could kind of see here that

1125
00:54:45,590 --> 00:54:55,970
it's the Y is twice what the X and z are

1126
00:54:51,760 --> 00:54:58,700
you know what I mean so you know that

1127
00:54:55,969 --> 00:55:02,209
does imply we would expect to see half

1128
00:54:58,699 --> 00:55:09,500
that I mean like the distance between

1129
00:55:02,210 --> 00:55:12,079
the stripes would be 2x off right but

1130
00:55:09,500 --> 00:55:15,329
I'm not sure that's enough to account

1131
00:55:12,079 --> 00:55:18,429
for it because

1132
00:55:15,329 --> 00:55:18,429
[Music]

1133
00:55:23,630 --> 00:55:30,769
if we look in here and we say well

1134
00:55:26,190 --> 00:55:34,409
alright if it's 2x off that means that

1135
00:55:30,769 --> 00:55:37,469
let's let's say it's even off 2 X in the

1136
00:55:34,409 --> 00:55:39,690
wrong direction right then what we would

1137
00:55:37,469 --> 00:55:41,730
expect to see is well it would mean the

1138
00:55:39,690 --> 00:55:45,240
first green stripe would be about there

1139
00:55:41,730 --> 00:55:48,829
right it'd be that far because it'd be

1140
00:55:45,239 --> 00:55:52,169
the second one so be like there right

1141
00:55:48,829 --> 00:55:54,569
and ain't no green stripe my friend

1142
00:55:52,170 --> 00:55:59,070
ain't no green stripe you know I'm

1143
00:55:54,570 --> 00:56:10,289
saying uh so something weird is going on

1144
00:55:59,070 --> 00:56:12,510
there and I don't know what I really

1145
00:56:10,289 --> 00:56:14,909
couldn't tell you and so I'm gonna look

1146
00:56:12,510 --> 00:56:20,220
at a couple different things first I'm

1147
00:56:14,909 --> 00:56:22,469
gonna go validate the I'm gonna try and

1148
00:56:20,219 --> 00:56:25,889
validate the actual voxel because I

1149
00:56:22,469 --> 00:56:28,259
don't know if that's right so if I am in

1150
00:56:25,889 --> 00:56:32,339
the OpenGL code right let's go down to

1151
00:56:28,260 --> 00:56:33,780
where we submit it like here and let's

1152
00:56:32,340 --> 00:56:35,190
just set a breakpoint on the submission

1153
00:56:33,780 --> 00:56:37,320
line and look at what we're actually

1154
00:56:35,190 --> 00:56:40,619
sending it cuz you know maybe that's

1155
00:56:37,320 --> 00:56:44,090
totally wrong who knows so if we go here

1156
00:56:40,619 --> 00:56:44,089
and we take a look at the light data

1157
00:56:51,500 --> 00:56:59,900
and we're trying to send down you know a

1158
00:56:55,340 --> 00:57:01,820
32 by 32 by 32 so you know I mean maybe

1159
00:56:59,900 --> 00:57:03,349
I maybe there's an unpack weirdness

1160
00:57:01,820 --> 00:57:05,630
going on here or something but let me

1161
00:57:03,349 --> 00:57:14,779
let me also change this to hexadecimal I

1162
00:57:05,630 --> 00:57:17,119
think you do kind of X for that yeah so

1163
00:57:14,780 --> 00:57:20,060
what you can see here is there's their

1164
00:57:17,119 --> 00:57:25,280
red stripes every eight which is exactly

1165
00:57:20,059 --> 00:57:27,529
what we would expect right and if we

1166
00:57:25,280 --> 00:57:29,780
keep going what we should see eventually

1167
00:57:27,530 --> 00:57:37,730
is we should see some green in here

1168
00:57:29,780 --> 00:57:44,330
right but but we don't I don't know what

1169
00:57:37,730 --> 00:57:45,679
that means sure what TBI means there but

1170
00:57:44,329 --> 00:57:52,159
we don't so what I'm curious about is

1171
00:57:45,679 --> 00:57:53,839
well okay so honestly there's you know

1172
00:57:52,159 --> 00:57:56,719
something that's kind of confusing here

1173
00:57:53,840 --> 00:57:58,250
oh oh you know what no the stripes are

1174
00:57:56,719 --> 00:58:00,319
in here am I talking about I'm like the

1175
00:57:58,250 --> 00:58:01,519
first one should have had it these are

1176
00:58:00,320 --> 00:58:03,920
strips so if there's our first green

1177
00:58:01,519 --> 00:58:07,880
stripe which we saw right so that's good

1178
00:58:03,920 --> 00:58:10,670
and what we should see is then at after

1179
00:58:07,880 --> 00:58:13,760
we go eight more counts of 32 we should

1180
00:58:10,670 --> 00:58:15,530
see another band right which we may run

1181
00:58:13,760 --> 00:58:17,000
out of space here for I'm not sure if

1182
00:58:15,530 --> 00:58:20,510
there's a way in remedy to tell it to do

1183
00:58:17,000 --> 00:58:22,219
more probably like you put it after this

1184
00:58:20,510 --> 00:58:23,810
or something but I don't know that I

1185
00:58:22,219 --> 00:58:25,608
really want that anyway because what I

1186
00:58:23,809 --> 00:58:28,519
would rather do I think in this case is

1187
00:58:25,608 --> 00:58:30,460
I'd probably rather use an offset so I

1188
00:58:28,519 --> 00:58:33,139
know where I'm at without scrolling down

1189
00:58:30,460 --> 00:58:35,858
so if we were to look at where we expect

1190
00:58:33,139 --> 00:58:39,710
the offset to be right mm-hmm

1191
00:58:35,858 --> 00:58:45,409
we would expect remember each row each

1192
00:58:39,710 --> 00:58:49,190
stripe is 32 long so we would expect the

1193
00:58:45,409 --> 00:58:51,289
next one to occur around 26 which we can

1194
00:58:49,190 --> 00:58:55,950
jump directly to right so let's just

1195
00:58:51,289 --> 00:58:59,409
start at I don't know if I can do this

1196
00:58:55,949 --> 00:59:02,769
yeah um so we'd expect the next one to

1197
00:58:59,409 --> 00:59:06,909
be here it's not here which isn't great

1198
00:59:02,769 --> 00:59:07,449
right so I'm not sure what to make of

1199
00:59:06,909 --> 00:59:11,619
that

1200
00:59:07,449 --> 00:59:14,559
exactly if I was to ask remedy to

1201
00:59:11,619 --> 00:59:18,449
display more of these let's say 512 of

1202
00:59:14,559 --> 00:59:23,559
them then what I should see is you know

1203
00:59:18,449 --> 00:59:28,119
the 507 is the marked one the 4 3 5 4

1204
00:59:23,559 --> 00:59:33,429
isn't so when I get up to 256 yeah it's

1205
00:59:28,119 --> 00:59:35,739
just not there um so maybe I just don't

1206
00:59:33,429 --> 00:59:37,480
know what I'm doing and and should

1207
00:59:35,739 --> 00:59:42,189
retire from programming that seems like

1208
00:59:37,480 --> 00:59:47,679
a likely thing to expect this code is

1209
00:59:42,190 --> 00:59:52,450
obviously incorrect and I just did it

1210
00:59:47,679 --> 00:59:54,279
wrong right so if we take a look at what

1211
00:59:52,449 --> 00:59:57,189
we would expect to have happen here

1212
00:59:54,280 --> 01:00:00,340
right so let's suppose we take just the

1213
00:59:57,190 --> 01:00:03,909
first Z layer where Z equals zero then I

1214
01:00:00,340 --> 01:00:06,490
expect this to just be 0 and then I

1215
01:00:03,909 --> 01:00:09,759
would expect the X to be an offset and

1216
01:00:06,489 --> 01:00:16,809
the Y to be strided by 32 because Vox

1217
01:00:09,760 --> 01:00:18,550
dim is supposed to be 32 right that's

1218
01:00:16,809 --> 01:00:19,989
what I'm expecting because that's the

1219
01:00:18,550 --> 01:00:23,170
way I expect it now we should maybe

1220
01:00:19,989 --> 01:00:28,899
check that it is but I mean we know that

1221
01:00:23,170 --> 01:00:30,760
the X is striping by 32 correctly at

1222
01:00:28,900 --> 01:00:32,680
least it seems like it is you know and

1223
01:00:30,760 --> 01:00:33,070
I'm saying to you so I'm not sure what's

1224
01:00:32,679 --> 01:00:35,289
up with that

1225
01:00:33,070 --> 01:00:37,360
so anyway what I would expect here is

1226
01:00:35,289 --> 01:00:42,219
that at y equals 0 I should hit this

1227
01:00:37,360 --> 01:00:45,010
case which is y ma T equals 0 and then I

1228
01:00:42,219 --> 01:00:46,869
would expect once I and that would set

1229
01:00:45,010 --> 01:00:51,970
light East right and then the light East

1230
01:00:46,869 --> 01:00:54,250
code would just go in here pretty

1231
01:00:51,969 --> 01:00:56,649
straightforward right

1232
01:00:54,250 --> 01:01:03,269
and then I would expect furthermore to

1233
01:00:56,650 --> 01:01:03,269
see like the yeah

1234
01:01:03,530 --> 01:01:19,010
I would expect to see it happen every

1235
01:01:13,269 --> 01:01:21,259
every eight times 32 now I'm gonna

1236
01:01:19,010 --> 01:01:23,540
hazard a guess and say maybe what

1237
01:01:21,260 --> 01:01:26,480
happened is I've got the pointers messed

1238
01:01:23,539 --> 01:01:30,500
up so maybe what happens is this light

1239
01:01:26,480 --> 01:01:34,550
index voxel bracket stuff is not working

1240
01:01:30,500 --> 01:01:40,900
properly June I'm saying so for example

1241
01:01:34,550 --> 01:01:40,900
if I go to commands I let me take a look

1242
01:01:46,329 --> 01:01:57,409
here how is it set and so if I look here

1243
01:01:53,030 --> 01:02:00,800
I've got pointers to six different banks

1244
01:01:57,409 --> 01:02:02,210
of you thirty twos right so the question

1245
01:02:00,800 --> 01:02:03,830
is how do I initialize this maybe I

1246
01:02:02,210 --> 01:02:06,800
initialize them wrong there's a pretty

1247
01:02:03,829 --> 01:02:08,480
easy way to test I can just set these at

1248
01:02:06,800 --> 01:02:11,269
different values but I also just want to

1249
01:02:08,480 --> 01:02:13,969
look first and see if I set them wrong

1250
01:02:11,269 --> 01:02:15,739
because I may well have right so

1251
01:02:13,969 --> 01:02:20,599
actually if I just go to open jilanne it

1252
01:02:15,739 --> 01:02:22,729
here and I go through and try to find

1253
01:02:20,599 --> 01:02:27,519
out what's going on with the

1254
01:02:22,730 --> 01:02:27,519
initialization of those parameters oh

1255
01:02:29,380 --> 01:02:39,530
you know what it's begin frame actually

1256
01:02:31,849 --> 01:02:42,679
isn't it yeah so here is the place where

1257
01:02:39,530 --> 01:02:45,320
we set these up and we set the you know

1258
01:02:42,679 --> 01:02:47,690
five pointers up here to be open GL

1259
01:02:45,320 --> 01:02:51,289
light data so if I look at what the

1260
01:02:47,690 --> 01:02:54,349
actual Open GL struct has in it for the

1261
01:02:51,289 --> 01:03:01,969
storage here just trying to make sure it

1262
01:02:54,349 --> 01:03:03,500
has oh great so that's totally wrong I

1263
01:03:01,969 --> 01:03:07,129
don't know what open geo light index

1264
01:03:03,500 --> 01:03:09,500
voxel dim is but it's some thing that

1265
01:03:07,130 --> 01:03:15,650
has nothing to do with what we defined

1266
01:03:09,500 --> 01:03:16,699
so that was good fantastic what is that

1267
01:03:15,650 --> 01:03:19,269
doing there

1268
01:03:16,699 --> 01:03:22,368
I don't know what any of this stuff is

1269
01:03:19,269 --> 01:03:26,030
that's old stuff great we just had a

1270
01:03:22,369 --> 01:03:29,119
typo fantastic where else is that being

1271
01:03:26,030 --> 01:03:31,690
used yeah none of this stuff is good

1272
01:03:29,119 --> 01:03:36,920
that's all bad that should be in here

1273
01:03:31,690 --> 01:03:42,079
right so we actually want to use this

1274
01:03:36,920 --> 01:03:43,789
stuff but that was our problem so I kind

1275
01:03:42,079 --> 01:03:45,380
of knew that right away once I inspected

1276
01:03:43,789 --> 01:03:49,190
the voxel so that was pretty easy to

1277
01:03:45,380 --> 01:03:51,530
figure out that's good but like yeah

1278
01:03:49,190 --> 01:03:54,108
them I don't know why any of this stuff

1279
01:03:51,530 --> 01:03:55,910
was being set there it should be in here

1280
01:03:54,108 --> 01:03:57,558
like we obviously just got confused

1281
01:03:55,909 --> 01:04:01,338
probably because I only program this

1282
01:03:57,559 --> 01:04:03,500
once a week but anyway so you can tell

1283
01:04:01,338 --> 01:04:05,480
that that was just just being stupid so

1284
01:04:03,500 --> 01:04:08,568
we want these in the renderer and we

1285
01:04:05,480 --> 01:04:10,250
want them to be specified here max light

1286
01:04:08,568 --> 01:04:18,558
probe count right should just be

1287
01:04:10,250 --> 01:04:20,568
something that we define and we don't

1288
01:04:18,559 --> 01:04:23,000
really know exactly what that is but I

1289
01:04:20,568 --> 01:04:31,400
you know it's probably just something

1290
01:04:23,000 --> 01:04:40,969
like that sir and then for light

1291
01:04:31,400 --> 01:04:42,588
occluders same thing and it's especially

1292
01:04:40,969 --> 01:04:43,759
stupid that those were open jail because

1293
01:04:42,588 --> 01:04:47,650
we don't actually use them on the

1294
01:04:43,760 --> 01:04:47,650
graphics card but what do you do

1295
01:05:01,289 --> 01:05:07,619
open up max occluder count this

1296
01:05:12,358 --> 01:05:16,739
all right try again

1297
01:05:22,440 --> 01:05:26,429
so now let's see what our stripes look

1298
01:05:24,429 --> 01:05:30,278
like so we know what we're begging here

1299
01:05:26,429 --> 01:05:32,949
that is much closer to what I would have

1300
01:05:30,278 --> 01:05:34,719
expected to see and I want to do

1301
01:05:32,949 --> 01:05:37,808
something now because we have clamped to

1302
01:05:34,719 --> 01:05:39,788
edge set I want to go ahead and do when

1303
01:05:37,809 --> 01:05:41,980
we fill out our voxel here just so I can

1304
01:05:39,789 --> 01:05:46,089
see where the edges are what I'd like to

1305
01:05:41,980 --> 01:05:49,690
do is set the edges as well so what I

1306
01:05:46,088 --> 01:05:56,259
would like to do is like if we're on an

1307
01:05:49,690 --> 01:05:58,900
edge set that like very clearly so for

1308
01:05:56,260 --> 01:06:00,960
example I'll do like if Z equals vox

1309
01:05:58,900 --> 01:06:09,880
10-1

1310
01:06:00,960 --> 01:06:13,480
you know like west or equals fat or

1311
01:06:09,880 --> 01:06:19,660
something and we can just set these up

1312
01:06:13,480 --> 01:06:24,088
so we can see where the end is and

1313
01:06:19,659 --> 01:06:26,318
that'll just give us some ability to see

1314
01:06:24,088 --> 01:06:29,170
what the actual bounds of the lighting

1315
01:06:26,318 --> 01:06:32,588
is on the screen which we kind of want

1316
01:06:29,170 --> 01:06:35,139
to be able to do right so if we look now

1317
01:06:32,588 --> 01:06:37,538
where the actual light bound is you can

1318
01:06:35,139 --> 01:06:39,808
see like very clearly that there's four

1319
01:06:37,539 --> 01:06:42,160
stripes across and four stripes that way

1320
01:06:39,809 --> 01:06:44,589
we don't really have the ability to

1321
01:06:42,159 --> 01:06:48,730
verify the depth of this voxel very well

1322
01:06:44,588 --> 01:06:51,159
because we don't really have any good

1323
01:06:48,730 --> 01:06:52,960
places to look at striping vertically we

1324
01:06:51,159 --> 01:06:56,288
need some kind of like a tall polygon or

1325
01:06:52,960 --> 01:06:57,849
something right to get some information

1326
01:06:56,289 --> 01:06:59,440
about that but we can sort of go here

1327
01:06:57,849 --> 01:07:01,359
and hop onto an area that least has some

1328
01:06:59,440 --> 01:07:03,760
stuff stacked on top of each other

1329
01:07:01,358 --> 01:07:05,259
move the lighting so it's kind of over

1330
01:07:03,760 --> 01:07:07,240
it and then we can probably see

1331
01:07:05,260 --> 01:07:11,170
something about that maybe I may I don't

1332
01:07:07,239 --> 01:07:15,669
really know but here if we look you can

1333
01:07:11,170 --> 01:07:18,278
see the the blue stripe right and so

1334
01:07:15,670 --> 01:07:21,818
that would be a size of a voxel in Z

1335
01:07:18,278 --> 01:07:24,579
which is totally fine and so yeah like

1336
01:07:21,818 --> 01:07:27,519
looking at how big these voxels are that

1337
01:07:24,579 --> 01:07:29,559
just seems probably fine and the only

1338
01:07:27,519 --> 01:07:31,389
question I have is if we expand the

1339
01:07:29,559 --> 01:07:33,130
light bounds out to actually fit the

1340
01:07:31,389 --> 01:07:41,078
area properly

1341
01:07:33,130 --> 01:07:44,528
um what does it look like right so yeah

1342
01:07:41,079 --> 01:07:46,630
you know maybe 32 is a little bit too

1343
01:07:44,528 --> 01:07:48,940
much I guess what I would say is depth

1344
01:07:46,630 --> 01:07:52,680
wise it's definitely not too much so we

1345
01:07:48,940 --> 01:07:55,000
may want to use irregular bounds like

1346
01:07:52,679 --> 01:07:58,629
non-uniform bounce we may want to do

1347
01:07:55,000 --> 01:07:59,798
like 64 by 64 by 32 or maybe even 64 by

1348
01:07:58,630 --> 01:08:01,329
64 at 16

1349
01:07:59,798 --> 01:08:05,230
I don't know depending on how deep we

1350
01:08:01,329 --> 01:08:07,869
want to go but just the stacking is

1351
01:08:05,230 --> 01:08:09,778
probably not so hard that we would have

1352
01:08:07,869 --> 01:08:12,579
to actually have the same resolution

1353
01:08:09,778 --> 01:08:14,469
like a 64 by 6 432 would probably be

1354
01:08:12,579 --> 01:08:20,199
fine you wouldn't need a 64 by 6 for us

1355
01:08:14,469 --> 01:08:23,170
64 probably right um and so what I would

1356
01:08:20,198 --> 01:08:25,119
like to do is maybe go a little bit

1357
01:08:23,170 --> 01:08:26,920
further with this and try to make it now

1358
01:08:25,119 --> 01:08:30,130
so that these are like that we have a

1359
01:08:26,920 --> 01:08:32,109
stable voxel grid and and get that

1360
01:08:30,130 --> 01:08:33,909
working kind of on top of what we've

1361
01:08:32,109 --> 01:08:35,679
already got or something like that not

1362
01:08:33,908 --> 01:08:37,658
sure yet it's a little bit hard to say

1363
01:08:35,679 --> 01:08:40,179
maybe let's just do the lighting first

1364
01:08:37,658 --> 01:08:42,429
and maybe let's just get that working

1365
01:08:40,179 --> 01:08:43,869
first and then we'll worry about fitting

1366
01:08:42,429 --> 01:08:46,980
this thing on there nicely that's

1367
01:08:43,869 --> 01:08:51,009
probably fine too so if we run now

1368
01:08:46,979 --> 01:08:53,048
Jimmie if we run the game and we just

1369
01:08:51,009 --> 01:08:55,509
look at what comes up that's like

1370
01:08:53,048 --> 01:08:57,460
totally fine it's pretty clear that the

1371
01:08:55,509 --> 01:08:59,350
resolution is like way better than we

1372
01:08:57,460 --> 01:09:01,359
even would need it to be that's

1373
01:08:59,350 --> 01:09:02,620
especially true and why because but I

1374
01:09:01,359 --> 01:09:04,659
think that's partially because it's kind

1375
01:09:02,619 --> 01:09:06,698
of sized a little inappropriate at this

1376
01:09:04,658 --> 01:09:09,548
point so assuming we want those to be

1377
01:09:06,698 --> 01:09:11,379
kind of regular what I might suggest is

1378
01:09:09,548 --> 01:09:13,929
saying look when we do the light

1379
01:09:11,380 --> 01:09:17,230
bounding maybe we make sure that the Y

1380
01:09:13,929 --> 01:09:25,230
is actually the same as the X and so you

1381
01:09:17,229 --> 01:09:25,229
know in here we would say something like

1382
01:09:26,399 --> 01:09:38,588
for the light bounce let's take the min

1383
01:09:30,969 --> 01:09:41,619
Y and subtract like an adjustment and in

1384
01:09:38,588 --> 01:09:46,238
both and just say look we want the

1385
01:09:41,619 --> 01:09:47,000
adjustment to be applied to Y such that

1386
01:09:46,238 --> 01:09:52,399
the

1387
01:09:47,000 --> 01:09:53,779
mention of Y is going to be the same as

1388
01:09:52,399 --> 01:09:56,869
the dimension in X so it's an actual

1389
01:09:53,779 --> 01:09:58,490
it's a proper cube right so if we did

1390
01:09:56,869 --> 01:10:03,409
that we would say something along the

1391
01:09:58,489 --> 01:10:09,050
lines of adjustment y equals get dim

1392
01:10:03,409 --> 01:10:14,029
light bounds X minus get dim light

1393
01:10:09,050 --> 01:10:16,730
bounds Y and that just lets us you know

1394
01:10:14,029 --> 01:10:19,250
compare those two and make sure that the

1395
01:10:16,729 --> 01:10:21,439
Y is the same so this would keep our

1396
01:10:19,250 --> 01:10:23,449
stripes the same size which I think we

1397
01:10:21,439 --> 01:10:24,799
kind of want because we really don't

1398
01:10:23,449 --> 01:10:27,019
want the lighting to be

1399
01:10:24,800 --> 01:10:29,570
anisotropic in terms of how its sampled

1400
01:10:27,020 --> 01:10:31,670
we would like it to be nice squares and

1401
01:10:29,569 --> 01:10:34,429
so here you can see what happens when we

1402
01:10:31,670 --> 01:10:36,380
make it into a square and yeah that

1403
01:10:34,430 --> 01:10:39,200
doesn't fit the screen region maybe as

1404
01:10:36,380 --> 01:10:42,739
well but I'm like not that worried about

1405
01:10:39,199 --> 01:10:45,739
that right okay

1406
01:10:42,739 --> 01:10:48,050
so if we start doing lighting on this

1407
01:10:45,739 --> 01:10:50,779
grid and then we worry about locking it

1408
01:10:48,050 --> 01:10:53,630
to the world as a separate pass we'll

1409
01:10:50,779 --> 01:10:55,909
worry about later this is clearly high

1410
01:10:53,630 --> 01:10:58,069
resolution enough it's arguably too high

1411
01:10:55,909 --> 01:10:59,449
resolution so we may actually size this

1412
01:10:58,069 --> 01:11:03,439
up a bit

1413
01:10:59,449 --> 01:11:06,979
from where it is probably but we can get

1414
01:11:03,439 --> 01:11:11,659
started now right so let's go ahead and

1415
01:11:06,979 --> 01:11:13,189
start flooding these voxels also if I

1416
01:11:11,659 --> 01:11:15,829
look here I would be interested to know

1417
01:11:13,189 --> 01:11:17,809
if I actually turn on a grid now so

1418
01:11:15,829 --> 01:11:21,199
let's say I did something more like this

1419
01:11:17,810 --> 01:11:25,400
so I can really see the voxel very

1420
01:11:21,199 --> 01:11:29,479
clearly this is every other stripe it

1421
01:11:25,399 --> 01:11:33,109
will be will be a band so this this

1422
01:11:29,479 --> 01:11:36,979
shows you the literal voxel now there it

1423
01:11:33,109 --> 01:11:39,649
is and what you can see is like inside a

1424
01:11:36,979 --> 01:11:41,659
single cube we have tons of resolution

1425
01:11:39,649 --> 01:11:44,149
on that box so like I said arguably too

1426
01:11:41,659 --> 01:11:46,460
much resolution on the voxel we probably

1427
01:11:44,149 --> 01:11:49,279
wanted even smaller than that but it

1428
01:11:46,460 --> 01:11:51,409
will get smaller than that like once we

1429
01:11:49,279 --> 01:11:54,130
get out to a large room so if I come out

1430
01:11:51,409 --> 01:11:58,760
here to a room that's very large right

1431
01:11:54,130 --> 01:12:00,369
like so now in this room which is kind

1432
01:11:58,760 --> 01:12:02,650
of the most zoomed out the

1433
01:12:00,369 --> 01:12:04,390
hammer is you can now see that like if I

1434
01:12:02,649 --> 01:12:06,909
go in and take a look at one of these

1435
01:12:04,390 --> 01:12:09,220
squares it's actually just that Nyquist

1436
01:12:06,909 --> 01:12:12,189
right so it's it's two samples per

1437
01:12:09,220 --> 01:12:17,440
square which is probably fine now maybe

1438
01:12:12,189 --> 01:12:21,729
that's still too small too fine I should

1439
01:12:17,439 --> 01:12:24,159
say so I don't know maybe we need to

1440
01:12:21,729 --> 01:12:26,769
even go up a little bit more so maybe we

1441
01:12:24,159 --> 01:12:29,409
will maybe we should should Jack it up a

1442
01:12:26,770 --> 01:12:34,360
little bit more if I look at how we're

1443
01:12:29,409 --> 01:12:36,519
running band wise in Z it's three as

1444
01:12:34,359 --> 01:12:39,009
well so maybe this needs to be a little

1445
01:12:36,520 --> 01:12:40,510
bit smaller even still I don't know that

1446
01:12:39,010 --> 01:12:43,960
would be great news because it's it's

1447
01:12:40,510 --> 01:12:46,090
just less work we have to do but if I

1448
01:12:43,960 --> 01:12:49,840
was to drop it down to sixteen I don't

1449
01:12:46,090 --> 01:12:51,279
know that seems way too low so and I

1450
01:12:49,840 --> 01:12:55,659
don't know that we can do anything else

1451
01:12:51,279 --> 01:12:57,340
I think it has to be a power too so what

1452
01:12:55,659 --> 01:12:58,930
we could do is use the 32 by 32 but not

1453
01:12:57,340 --> 01:13:00,840
fill it at all

1454
01:12:58,930 --> 01:13:04,659
but here's what that looks like right

1455
01:13:00,840 --> 01:13:07,329
and that's like way more like the

1456
01:13:04,659 --> 01:13:08,859
resolution I actually want when we hop

1457
01:13:07,329 --> 01:13:11,890
out here though I'm assuming that'll

1458
01:13:08,859 --> 01:13:15,549
just be too big and so now if we look at

1459
01:13:11,890 --> 01:13:19,720
like how this lines up you can see that

1460
01:13:15,550 --> 01:13:25,449
it's roughly one voxel per light probe

1461
01:13:19,720 --> 01:13:26,829
which seems good right and yeah I don't

1462
01:13:25,449 --> 01:13:28,929
know like maybe that's right

1463
01:13:26,829 --> 01:13:32,289
maybe that's the size of the voxel we

1464
01:13:28,930 --> 01:13:34,480
actually want so I'm not sure but that

1465
01:13:32,289 --> 01:13:37,060
could be basically all we really need

1466
01:13:34,479 --> 01:13:40,209
for the lighting resolution I'm not sure

1467
01:13:37,060 --> 01:13:43,330
but that that that may be all we really

1468
01:13:40,210 --> 01:13:44,829
need in terms of covering relatively

1469
01:13:43,329 --> 01:13:46,210
good coverage for the kinds of scenes

1470
01:13:44,829 --> 01:13:46,510
that we're looking for that may be you

1471
01:13:46,210 --> 01:13:48,250
know

1472
01:13:46,510 --> 01:13:52,420
so we'll start playing with it at that

1473
01:13:48,250 --> 01:13:54,640
level and we'll see but I just don't

1474
01:13:52,420 --> 01:13:55,630
know I I do think we may need 32 and the

1475
01:13:54,640 --> 01:13:57,910
reason I say that is because I'll give

1476
01:13:55,630 --> 01:14:01,989
you a look at what happens kind of the

1477
01:13:57,909 --> 01:14:06,670
outskirts of that area what you see in

1478
01:14:01,989 --> 01:14:09,130
in sort of the the out the the outlying

1479
01:14:06,670 --> 01:14:11,470
areas out here is if we were to actually

1480
01:14:09,130 --> 01:14:13,300
scale this to fit the whole scene it

1481
01:14:11,470 --> 01:14:13,909
would have to be a little bit larger and

1482
01:14:13,300 --> 01:14:15,949
then yours

1483
01:14:13,909 --> 01:14:18,920
starting to get down to two it might

1484
01:14:15,949 --> 01:14:20,689
it'll actually encompass two so it's

1485
01:14:18,920 --> 01:14:23,630
just really hard to say but I do think

1486
01:14:20,689 --> 01:14:26,839
like 32 by 32 by 16 we're probably just

1487
01:14:23,630 --> 01:14:27,529
fine and we could just not use all the

1488
01:14:26,840 --> 01:14:29,090
voxels

1489
01:14:27,529 --> 01:14:31,489
we could just only fill the center of it

1490
01:14:29,090 --> 01:14:32,840
up and skip some of the outside ones

1491
01:14:31,489 --> 01:14:34,939
would be fine that it's two resolute

1492
01:14:32,840 --> 01:14:35,989
right but I'm gonna start with that for

1493
01:14:34,939 --> 01:14:38,239
now and we'll go from there

1494
01:14:35,989 --> 01:14:42,500
all right so let's suppose we wanted to

1495
01:14:38,239 --> 01:14:44,179
actually light with this thing and start

1496
01:14:42,500 --> 01:14:46,189
playing around with with that what does

1497
01:14:44,180 --> 01:14:48,289
that look like well if I was to flood my

1498
01:14:46,189 --> 01:14:53,059
vox with something that would allow me

1499
01:14:48,289 --> 01:14:57,649
to to see that right let's suppose that

1500
01:14:53,060 --> 01:15:08,990
I sort of nuke some of this stuff for

1501
01:14:57,649 --> 01:15:12,739
now and what I'm going to do is I'm just

1502
01:15:08,989 --> 01:15:16,159
gonna take one of my voxels so let's say

1503
01:15:12,739 --> 01:15:18,409
the voxel for West were facing light and

1504
01:15:16,159 --> 01:15:21,050
I'm gonna say that that just gets some

1505
01:15:18,409 --> 01:15:22,639
light and nobody else does so what I'm

1506
01:15:21,050 --> 01:15:26,090
going to do is I'm gonna send down some

1507
01:15:22,640 --> 01:15:27,800
light light down that channel and I'm

1508
01:15:26,090 --> 01:15:29,449
gonna see what happens if we lay in a

1509
01:15:27,800 --> 01:15:32,029
lighting equation that's actually

1510
01:15:29,449 --> 01:15:34,699
somewhat correct with westward facing

1511
01:15:32,029 --> 01:15:38,539
lighting so this is as if there's just a

1512
01:15:34,699 --> 01:15:44,630
strong white light everywhere coming

1513
01:15:38,539 --> 01:15:46,850
from the west side right and so if we

1514
01:15:44,630 --> 01:15:49,550
have you know if we imagine what this is

1515
01:15:46,850 --> 01:15:51,350
supposed to say we have a strong light

1516
01:15:49,550 --> 01:15:54,800
coming from this side

1517
01:15:51,350 --> 01:15:56,690
bright white now obviously right now all

1518
01:15:54,800 --> 01:15:58,220
we just get is a uniform light on the

1519
01:15:56,689 --> 01:15:59,989
scene because we're not computing a

1520
01:15:58,220 --> 01:16:02,210
lighting equation so what we want to do

1521
01:15:59,989 --> 01:16:06,349
now is go add a lighting equation and

1522
01:16:02,210 --> 01:16:10,310
see what happens right so let's go to

1523
01:16:06,350 --> 01:16:12,440
the Z bias program and let's try to do

1524
01:16:10,310 --> 01:16:16,039
an actual full on lighting equation

1525
01:16:12,439 --> 01:16:19,039
right that we can drop in here and have

1526
01:16:16,039 --> 01:16:21,619
some understanding of you know what it's

1527
01:16:19,039 --> 01:16:25,159
actually doing so here's where we get

1528
01:16:21,619 --> 01:16:28,909
our light data from you know

1529
01:16:25,159 --> 01:16:31,430
and what we want to do is we probably

1530
01:16:28,909 --> 01:16:32,899
want I mean there's a couple different

1531
01:16:31,430 --> 01:16:35,360
ways we could look at doing this right

1532
01:16:32,899 --> 01:16:37,879
and I don't know which one is the

1533
01:16:35,359 --> 01:16:40,670
smarter way to do it but what I assume

1534
01:16:37,880 --> 01:16:43,520
II more or less want to do is produce a

1535
01:16:40,670 --> 01:16:45,920
composite light vector that's just the

1536
01:16:43,520 --> 01:16:48,500
result of blending in the various

1537
01:16:45,920 --> 01:16:51,800
lighting directions that we have right

1538
01:16:48,500 --> 01:16:57,500
and so we kind of want something that's

1539
01:16:51,800 --> 01:16:59,210
gonna well I mean again I really just

1540
01:16:57,500 --> 01:17:00,439
don't know me there's a there's

1541
01:16:59,210 --> 01:17:04,659
different ways you design I don't know

1542
01:17:00,439 --> 01:17:07,279
which way is the smartest way we could

1543
01:17:04,659 --> 01:17:09,859
do a separate lighting equation for each

1544
01:17:07,279 --> 01:17:15,109
light and maybe that's the smartest

1545
01:17:09,859 --> 01:17:16,789
thing to do at first the problem is the

1546
01:17:15,109 --> 01:17:25,099
directionality of the light at that

1547
01:17:16,789 --> 01:17:27,229
point is not very well represented so I

1548
01:17:25,100 --> 01:17:29,030
kind of think we don't want that so I

1549
01:17:27,229 --> 01:17:31,009
think what we probably want to do is

1550
01:17:29,029 --> 01:17:35,359
treat it as a single incoming light

1551
01:17:31,010 --> 01:17:38,090
source that is blended right and we want

1552
01:17:35,359 --> 01:17:40,880
to do that in a sensitive way so that we

1553
01:17:38,090 --> 01:17:43,750
don't end up neutralizing the direction

1554
01:17:40,880 --> 01:17:43,750
of the light too much

1555
01:17:58,819 --> 01:18:09,058
so I think what I might say is if we

1556
01:18:03,300 --> 01:18:13,110
were to consider the various light

1557
01:18:09,059 --> 01:18:14,880
contributions here right each one of

1558
01:18:13,109 --> 01:18:16,679
them has sort of a dot product with our

1559
01:18:14,880 --> 01:18:19,069
surface normal right

1560
01:18:16,679 --> 01:18:21,989
and so if we were to look and say

1561
01:18:19,069 --> 01:18:26,670
alright let's only collect the light

1562
01:18:21,988 --> 01:18:28,609
values that actually have to do with the

1563
01:18:26,670 --> 01:18:33,118
surface facing direction that we have

1564
01:18:28,609 --> 01:18:37,649
you know I'm saying and start with that

1565
01:18:33,118 --> 01:18:40,009
and that I assume would give us the

1566
01:18:37,649 --> 01:18:43,348
information that we need to produce a

1567
01:18:40,010 --> 01:18:44,820
reasonable blended lighting based on the

1568
01:18:43,349 --> 01:18:53,880
information that we're getting from our

1569
01:18:44,819 --> 01:18:56,099
cubed right I'm not really sure that's

1570
01:18:53,880 --> 01:18:58,679
right because the other way to do it is

1571
01:18:56,099 --> 01:19:00,210
to light as if each face of the cube was

1572
01:18:58,679 --> 01:19:02,520
an incoming light source that was

1573
01:19:00,210 --> 01:19:05,158
separate the reason I don't want to do

1574
01:19:02,520 --> 01:19:07,530
that on that I think that's a probably

1575
01:19:05,158 --> 01:19:09,500
bad idea is because if you think about

1576
01:19:07,529 --> 01:19:14,759
what that will create is it creates

1577
01:19:09,500 --> 01:19:16,979
fundamentally biased lighting sample

1578
01:19:14,760 --> 01:19:18,989
lighting directions and I think we would

1579
01:19:16,979 --> 01:19:21,988
see that in the lighting we would see

1580
01:19:18,988 --> 01:19:24,538
the fact that as lights move as things

1581
01:19:21,988 --> 01:19:27,538
move it probably fine as lights move you

1582
01:19:24,538 --> 01:19:31,618
would see them sort of have this banding

1583
01:19:27,538 --> 01:19:33,118
effect as they moved around I I don't I

1584
01:19:31,618 --> 01:19:35,368
think that would create artifacts that

1585
01:19:33,118 --> 01:19:36,089
would be objectionable as my gut feeling

1586
01:19:35,368 --> 01:19:37,920
I'm not sure

1587
01:19:36,090 --> 01:19:39,719
whereas if instead we take the lighting

1588
01:19:37,920 --> 01:19:41,219
directions to say how much lights coming

1589
01:19:39,719 --> 01:19:42,719
from this face cube how much light is

1590
01:19:41,219 --> 01:19:44,880
coming from that face book cube combine

1591
01:19:42,719 --> 01:19:46,380
those together to produce a average

1592
01:19:44,880 --> 01:19:49,199
light direction and an average amount of

1593
01:19:46,380 --> 01:19:52,940
light Jun and I mean that seems to me to

1594
01:19:49,198 --> 01:19:52,939
be maybe a better idea

1595
01:20:01,179 --> 01:20:06,828
III really don't have any more

1596
01:20:04,840 --> 01:20:08,860
intelligent thing to say than that I'm

1597
01:20:06,828 --> 01:20:08,859
afraid

1598
01:20:12,819 --> 01:20:18,710
yeah so I don't know that's just what

1599
01:20:16,189 --> 01:20:20,928
I'm gonna go with I don't know the view

1600
01:20:18,710 --> 01:20:27,500
direction here which I kind of need to

1601
01:20:20,929 --> 01:20:28,940
know so oh I do fantastic so I have the

1602
01:20:27,500 --> 01:20:30,679
camera P and I have the world P and

1603
01:20:28,939 --> 01:20:32,149
that's fantastic because that basically

1604
01:20:30,679 --> 01:20:35,059
lets me do everything that I want to do

1605
01:20:32,149 --> 01:20:37,098
in terms of a full lighting equation so

1606
01:20:35,059 --> 01:20:39,469
what I'm going to do is construct a

1607
01:20:37,099 --> 01:20:40,760
fairly basic light equation first we can

1608
01:20:39,469 --> 01:20:45,469
make it a little bit more complicated as

1609
01:20:40,760 --> 01:20:47,599
we go but basically let me just draw out

1610
01:20:45,469 --> 01:20:49,130
the the basic we've covered the sort of

1611
01:20:47,599 --> 01:20:50,900
thing before but just that the basic

1612
01:20:49,130 --> 01:20:53,739
version that I'll do now

1613
01:20:50,899 --> 01:20:53,738
whereas Milton

1614
01:21:00,039 --> 01:21:03,949
again I'll ask I asked every time but no

1615
01:21:02,539 --> 01:21:06,039
one seems to know is there any way to

1616
01:21:03,949 --> 01:21:09,199
get at Milton that has that it's fixed

1617
01:21:06,039 --> 01:21:10,670
sampling the sampling got busted and now

1618
01:21:09,199 --> 01:21:15,579
it's hard to draw with it and I don't

1619
01:21:10,670 --> 01:21:15,579
know if anyone ever fixed it but anyway

1620
01:21:24,590 --> 01:21:29,640
so what I want to do is I just want to

1621
01:21:27,659 --> 01:21:31,079
say look I've got a surface and I've got

1622
01:21:29,640 --> 01:21:33,869
a surface normal right

1623
01:21:31,079 --> 01:21:36,300
I know the world position I know this P

1624
01:21:33,869 --> 01:21:37,319
and I also know the camera position is

1625
01:21:36,300 --> 01:21:39,960
out here somewhere

1626
01:21:37,319 --> 01:21:43,469
so it's pretty easy for me to find a

1627
01:21:39,960 --> 01:21:46,199
vector that is which is how like how am

1628
01:21:43,470 --> 01:21:48,869
I looking at this thing and so what I

1629
01:21:46,199 --> 01:21:51,689
want to know is when I bounce that you

1630
01:21:48,869 --> 01:21:53,670
know when I look at this surface I want

1631
01:21:51,689 --> 01:21:57,299
to be able to look up at the light

1632
01:21:53,670 --> 01:22:02,550
source that are in this direction right

1633
01:21:57,300 --> 01:22:05,190
and so if I reflect this vector off of

1634
01:22:02,550 --> 01:22:07,350
this surface I get a direction that is

1635
01:22:05,189 --> 01:22:11,789
the direction I want to sample the

1636
01:22:07,350 --> 01:22:15,980
inbound light right now

1637
01:22:11,789 --> 01:22:18,720
if we're actually going to compute some

1638
01:22:15,979 --> 01:22:22,049
more advanced lighting right so trying

1639
01:22:18,720 --> 01:22:23,610
to set this up to do better lighting the

1640
01:22:22,050 --> 01:22:26,159
first thing we can do is really really

1641
01:22:23,609 --> 01:22:28,439
simple and do a crappy version which is

1642
01:22:26,159 --> 01:22:29,880
just take the direction of the light and

1643
01:22:28,439 --> 01:22:34,139
try to figure out from our lighting

1644
01:22:29,880 --> 01:22:35,640
probe which is a cube right try to

1645
01:22:34,140 --> 01:22:37,470
figure out like okay if I'm looking in

1646
01:22:35,640 --> 01:22:40,320
this direction and the cube says that

1647
01:22:37,470 --> 01:22:42,630
I've got these three directions that are

1648
01:22:40,319 --> 01:22:44,250
like similar to it right blend those

1649
01:22:42,630 --> 01:22:45,989
together based on how close they are to

1650
01:22:44,250 --> 01:22:46,979
this and I'll get some lighting that's

1651
01:22:45,989 --> 01:22:51,059
like what should be off in that

1652
01:22:46,979 --> 01:22:57,089
direction right but um that's 100

1653
01:22:51,060 --> 01:23:01,289
percent specular right because that's

1654
01:22:57,090 --> 01:23:02,880
just looking at what exactly is right in

1655
01:23:01,289 --> 01:23:06,750
the direction I'm looking so that would

1656
01:23:02,880 --> 01:23:09,390
be like a mirror right now we will we

1657
01:23:06,750 --> 01:23:11,130
won't see any mirrored graphics when if

1658
01:23:09,390 --> 01:23:13,289
we when we type the same but when we

1659
01:23:11,130 --> 01:23:15,720
type in I'm going to type it in first we

1660
01:23:13,289 --> 01:23:17,760
won't see a mirror but the only reason

1661
01:23:15,720 --> 01:23:19,230
we're not seeing a mirror is because our

1662
01:23:17,760 --> 01:23:21,329
light probes aren't detailed enough

1663
01:23:19,229 --> 01:23:23,099
right if we had a really detailed

1664
01:23:21,329 --> 01:23:24,720
lighting probe that we were sending down

1665
01:23:23,100 --> 01:23:27,360
like really really really really

1666
01:23:24,720 --> 01:23:30,030
detailed right so this was actually a

1667
01:23:27,359 --> 01:23:32,279
cube map that was like 256 by 26 on a

1668
01:23:30,029 --> 01:23:33,479
side and we did the sampling we'd get a

1669
01:23:32,279 --> 01:23:35,009
mirror that's what we get because we're

1670
01:23:33,479 --> 01:23:38,399
gonna look and see what's exactly in

1671
01:23:35,010 --> 01:23:40,350
that direction right so

1672
01:23:38,399 --> 01:23:43,170
again like it's worth noting that

1673
01:23:40,350 --> 01:23:46,640
equation will seem like it's not really

1674
01:23:43,170 --> 01:23:50,489
mirrored but it is 100% specular right

1675
01:23:46,640 --> 01:23:52,650
so in order to get a more fair lighting

1676
01:23:50,488 --> 01:23:56,009
equation that we would want is we can do

1677
01:23:52,649 --> 01:23:58,829
this calculation and produce what we

1678
01:23:56,010 --> 01:24:01,770
would see for the specular we can blend

1679
01:23:58,829 --> 01:24:03,179
those things together and say well we

1680
01:24:01,770 --> 01:24:04,830
want a specular contribution in a

1681
01:24:03,179 --> 01:24:07,739
diffuse contribution the diffuse

1682
01:24:04,829 --> 01:24:10,380
contribution should be more taking into

1683
01:24:07,738 --> 01:24:13,468
account the full range of things right

1684
01:24:10,380 --> 01:24:16,260
and so what that should be doing is that

1685
01:24:13,469 --> 01:24:19,800
should be taking a look at the normal

1686
01:24:16,260 --> 01:24:21,510
and saying what are all the faces that

1687
01:24:19,800 --> 01:24:23,190
the normal can see so all three faces

1688
01:24:21,510 --> 01:24:24,869
are we can see average those together

1689
01:24:23,189 --> 01:24:27,389
and that would be our diffuse light

1690
01:24:24,869 --> 01:24:29,069
because we know that diffuse light is

1691
01:24:27,390 --> 01:24:31,590
subject subject to the cosine rule

1692
01:24:29,069 --> 01:24:34,679
however meaning that inbound diffuse

1693
01:24:31,590 --> 01:24:38,340
light you know as you know right

1694
01:24:34,679 --> 01:24:44,908
remember the cosine rule this bit here I

1695
01:24:38,340 --> 01:24:49,409
do that poorly but right so what we know

1696
01:24:44,908 --> 01:24:51,839
is the the the surface of the light as

1697
01:24:49,408 --> 01:24:53,250
it reflects up the amount the size of a

1698
01:24:51,840 --> 01:24:54,539
shaft of light that can come in and hit

1699
01:24:53,250 --> 01:24:57,300
that surface is proportional to the

1700
01:24:54,539 --> 01:24:59,908
cosine and so we actually want to use

1701
01:24:57,300 --> 01:25:01,980
the cosine rule during that average to

1702
01:24:59,908 --> 01:25:04,529
say the inbound light coming from that

1703
01:25:01,979 --> 01:25:06,629
direction can only provide this much

1704
01:25:04,529 --> 01:25:08,939
light based on the cosine rule but we

1705
01:25:06,630 --> 01:25:10,590
would sum it up based on the normal not

1706
01:25:08,939 --> 01:25:11,879
on the camera direction because the

1707
01:25:10,590 --> 01:25:13,710
direction that the camera is looking

1708
01:25:11,880 --> 01:25:15,390
would not actually be effect would not

1709
01:25:13,710 --> 01:25:17,189
actually be affecting that inbound light

1710
01:25:15,390 --> 01:25:19,230
because we're assuming for a diffuse

1711
01:25:17,189 --> 01:25:21,059
surface it radiates light out in all

1712
01:25:19,229 --> 01:25:24,238
directions uniformly in that case right

1713
01:25:21,060 --> 01:25:26,030
so it wouldn't matter it only matters

1714
01:25:24,238 --> 01:25:29,369
how the light is falling on the surface

1715
01:25:26,029 --> 01:25:32,309
how much the it can send back out now

1716
01:25:29,369 --> 01:25:34,469
this is the kind of thing that I never

1717
01:25:32,310 --> 01:25:36,449
freaking know because I just don't spend

1718
01:25:34,469 --> 01:25:39,810
enough time doing line equations it may

1719
01:25:36,448 --> 01:25:43,408
be double cosine rule there meaning we

1720
01:25:39,810 --> 01:25:45,150
also have to count the sending out but I

1721
01:25:43,408 --> 01:25:47,460
don't know and that's I'm gonna have to

1722
01:25:45,149 --> 01:25:49,019
go work out the math exactly but at

1723
01:25:47,460 --> 01:25:51,800
least as one cosine rule which is the

1724
01:25:49,020 --> 01:25:51,800
surface following rule

1725
01:25:57,738 --> 01:26:02,908
okay so first things first produced that

1726
01:26:00,988 --> 01:26:04,768
reflection vector what's the reflection

1727
01:26:02,908 --> 01:26:05,969
vector you all should know this by now I

1728
01:26:04,769 --> 01:26:07,349
don't want to hear anyone out there

1729
01:26:05,969 --> 01:26:08,519
who's been watching handmade here Oh

1730
01:26:07,349 --> 01:26:10,949
tell me they don't know how to compute

1731
01:26:08,519 --> 01:26:13,260
this because they do so you better know

1732
01:26:10,948 --> 01:26:15,238
how to compute this right what we're

1733
01:26:13,260 --> 01:26:17,909
what we want is we want that vector

1734
01:26:15,238 --> 01:26:19,648
right here's what we have is we have the

1735
01:26:17,908 --> 01:26:23,549
camera position and the world position

1736
01:26:19,649 --> 01:26:28,079
right of the two points we know we can

1737
01:26:23,550 --> 01:26:29,668
produce this right we know we can

1738
01:26:28,078 --> 01:26:32,549
produce that inbound vector what's that

1739
01:26:29,668 --> 01:26:34,889
inbound vector it's W minus C right

1740
01:26:32,550 --> 01:26:36,719
that's the inbound vector so we'll call

1741
01:26:34,889 --> 01:26:38,668
that like I don't know

1742
01:26:36,719 --> 01:26:40,739
I'll call that the incident direction or

1743
01:26:38,668 --> 01:26:42,689
something right so we have this inbound

1744
01:26:40,738 --> 01:26:44,928
vector we know we can produce it it's

1745
01:26:42,689 --> 01:26:48,418
just W minus C very very straightforward

1746
01:26:44,929 --> 01:26:50,908
okay we know we have the normal it's

1747
01:26:48,418 --> 01:26:54,538
this so how do we produce this outbound

1748
01:26:50,908 --> 01:26:57,358
vector look how do we get that again

1749
01:26:54,538 --> 01:26:59,429
recenter this thing that produces this

1750
01:26:57,359 --> 01:27:01,919
right if we just assume that this vector

1751
01:26:59,429 --> 01:27:03,179
here is starting from the origin of our

1752
01:27:01,918 --> 01:27:04,858
coordinate system which is just going to

1753
01:27:03,179 --> 01:27:08,399
be the world position for this point

1754
01:27:04,859 --> 01:27:11,159
right so that's our vector we want that

1755
01:27:08,399 --> 01:27:13,619
same vector just coming out of the

1756
01:27:11,158 --> 01:27:16,618
surface rather than going into it what

1757
01:27:13,618 --> 01:27:19,679
what is the part of it that's going into

1758
01:27:16,618 --> 01:27:23,639
the surface right what is it you have a

1759
01:27:19,679 --> 01:27:26,639
unit length vector here right you have a

1760
01:27:23,639 --> 01:27:27,899
unit length vector so if I take the

1761
01:27:26,639 --> 01:27:30,510
cross I've said that's good the cross

1762
01:27:27,899 --> 01:27:32,280
product the dot product of that vector

1763
01:27:30,510 --> 01:27:35,159
with the surface normal

1764
01:27:32,279 --> 01:27:38,578
I get specifically this length right

1765
01:27:35,158 --> 01:27:39,808
because it's unit unit normal so when I

1766
01:27:38,578 --> 01:27:42,988
take that top rack I'm getting this

1767
01:27:39,809 --> 01:27:45,389
length here that means if I want to flip

1768
01:27:42,988 --> 01:27:47,788
this around right if I wanted to bring

1769
01:27:45,389 --> 01:27:50,309
it to here I would subtract away this

1770
01:27:47,788 --> 01:27:54,358
much if I want to reflect it I would

1771
01:27:50,309 --> 01:27:57,719
subtract twice that much right so I know

1772
01:27:54,359 --> 01:28:01,829
I want to subtract twice this dot

1773
01:27:57,719 --> 01:28:05,189
product right to flip it around so if I

1774
01:28:01,828 --> 01:28:07,708
subtract twice the stop product from the

1775
01:28:05,189 --> 01:28:10,389
original vector so you know if I take I

1776
01:28:07,708 --> 01:28:12,250
minus two I transpose and

1777
01:28:10,389 --> 01:28:15,130
I need a direction to do that along we

1778
01:28:12,250 --> 01:28:17,198
know the direction it's n so there's the

1779
01:28:15,130 --> 01:28:21,010
complete construction it's I minus 2 I

1780
01:28:17,198 --> 01:28:23,618
transpose n times n that gives me this

1781
01:28:21,010 --> 01:28:25,780
reflection vector I probably want to

1782
01:28:23,618 --> 01:28:27,759
normalize that so I'm probably going to

1783
01:28:25,779 --> 01:28:29,349
want to divide by the length of I to

1784
01:28:27,760 --> 01:28:33,489
produce a normalized version of this

1785
01:28:29,350 --> 01:28:34,750
equation but you know that depends on

1786
01:28:33,488 --> 01:28:37,238
what we're gonna do next

1787
01:28:34,750 --> 01:28:39,368
maybe we normalize it maybe we don't

1788
01:28:37,238 --> 01:28:41,678
maybe we normalize it later I don't know

1789
01:28:39,368 --> 01:28:43,448
but that's that's what we're talking

1790
01:28:41,679 --> 01:28:44,889
about here right so everyone should have

1791
01:28:43,448 --> 01:28:46,988
known how to do that no one should have

1792
01:28:44,889 --> 01:28:48,489
needed me to explain that if you did me

1793
01:28:46,988 --> 01:28:49,928
need to explain that you haven't been

1794
01:28:48,488 --> 01:28:52,750
watching a series enough so you need to

1795
01:28:49,929 --> 01:28:55,210
go back and watch it watch those

1796
01:28:52,750 --> 01:28:56,529
episodes use the episode guide to find

1797
01:28:55,210 --> 01:29:00,310
the part where we talk about reflection

1798
01:28:56,529 --> 01:29:08,340
vectors here let me help you click on

1799
01:29:00,310 --> 01:29:12,900
watch click on reflection right do it

1800
01:29:08,340 --> 01:29:18,539
watch it tons of stuff in here right

1801
01:29:12,899 --> 01:29:18,539
find it I know you can do it all right

1802
01:29:18,630 --> 01:29:25,090
so here's our basic way we're going to

1803
01:29:22,658 --> 01:29:26,618
produce that reflection so I want to do

1804
01:29:25,090 --> 01:29:28,210
exactly what I just said

1805
01:29:26,618 --> 01:29:30,099
and I want to produce that here in the

1806
01:29:28,210 --> 01:29:32,170
lighting system so that when we're per

1807
01:29:30,100 --> 01:29:33,579
fragment lighting we're gonna use this

1808
01:29:32,170 --> 01:29:36,399
information so first we're gonna take

1809
01:29:33,579 --> 01:29:38,050
that camera position right and like I

1810
01:29:36,399 --> 01:29:40,149
said we want to take the world position

1811
01:29:38,050 --> 01:29:42,789
minus the camera position so we we do

1812
01:29:40,149 --> 01:29:44,319
that and this is our inbound vector so

1813
01:29:42,789 --> 01:29:47,948
this is just going to be our antibellum

1814
01:29:44,319 --> 01:29:50,618
vector here right so that's the world -

1815
01:29:47,948 --> 01:29:52,479
the camera P what we then want to do is

1816
01:29:50,618 --> 01:29:56,198
we want to produce this equation out of

1817
01:29:52,479 --> 01:29:59,379
it so we're gonna want to do that I

1818
01:29:56,198 --> 01:30:01,448
minus 2 I transpose N and so what we

1819
01:29:59,380 --> 01:30:02,980
want to do there is say let's produce a

1820
01:30:01,448 --> 01:30:05,198
new one which is our reflection vector

1821
01:30:02,979 --> 01:30:09,158
our reflection vector is going to be

1822
01:30:05,198 --> 01:30:11,529
literally the eye minus 2 times this I

1823
01:30:09,158 --> 01:30:16,839
transpose and so that's gonna be like an

1824
01:30:11,529 --> 01:30:19,300
inner product right of I and N the N

1825
01:30:16,840 --> 01:30:21,310
again is the world normal so that's the

1826
01:30:19,300 --> 01:30:23,788
normal of the surface that we're

1827
01:30:21,310 --> 01:30:25,319
reflecting off of

1828
01:30:23,788 --> 01:30:26,938
we're then gonna have to multiply that

1829
01:30:25,319 --> 01:30:28,169
by some vector so we know which

1830
01:30:26,939 --> 01:30:30,179
direction to move along again that's the

1831
01:30:28,168 --> 01:30:32,458
world normal that's that entire top of

1832
01:30:30,179 --> 01:30:34,109
the equation there so this here is our

1833
01:30:32,458 --> 01:30:36,479
reflection vector do we want to

1834
01:30:34,109 --> 01:30:38,849
normalize it yes we probably do I don't

1835
01:30:36,479 --> 01:30:41,878
actually know which stuff we put in here

1836
01:30:38,849 --> 01:30:44,279
for our shaders I've forgotten by now so

1837
01:30:41,878 --> 01:30:46,068
if you look at compiled Z bias program I

1838
01:30:44,279 --> 01:30:48,179
think we have sort of like a boilerplate

1839
01:30:46,069 --> 01:30:49,979
kind of set of stuff we use for

1840
01:30:48,179 --> 01:30:51,868
compilation I don't actually know that I

1841
01:30:49,979 --> 01:30:52,800
just think that's true let's find out

1842
01:30:51,868 --> 01:30:54,538
yeah here it is

1843
01:30:52,800 --> 01:30:56,458
seriously global shader code you can see

1844
01:30:54,538 --> 01:30:59,128
we can do an inner product here but you

1845
01:30:56,458 --> 01:31:04,229
can do we do lengths here and so on

1846
01:30:59,128 --> 01:31:05,849
lerp clamp right so in this case what I

1847
01:31:04,229 --> 01:31:07,109
would like to do it looks like we didn't

1848
01:31:05,849 --> 01:31:09,748
define an inverse square roots

1849
01:31:07,109 --> 01:31:12,659
unfortunately and that's kind of a

1850
01:31:09,748 --> 01:31:13,828
problem because see we've got some other

1851
01:31:12,658 --> 01:31:15,808
stuff to find here but none of it is

1852
01:31:13,828 --> 01:31:18,299
really particularly helpful so what I'd

1853
01:31:15,809 --> 01:31:20,719
like to do is see to what extent we want

1854
01:31:18,300 --> 01:31:25,260
to just take advantage of GLSL there

1855
01:31:20,719 --> 01:31:27,359
exactly so in this case when I up so I'm

1856
01:31:25,260 --> 01:31:32,579
in the wrong place I wanted the web

1857
01:31:27,359 --> 01:31:34,199
browser or there we go I want to see

1858
01:31:32,578 --> 01:31:35,969
what they've got for primitives here we

1859
01:31:34,198 --> 01:31:38,368
should use this is a common operation

1860
01:31:35,969 --> 01:31:41,458
and grabs we should use there's if it's

1861
01:31:38,368 --> 01:31:44,128
there it is normalized is right there so

1862
01:31:41,458 --> 01:31:45,658
we're going to call that and so if I

1863
01:31:44,128 --> 01:31:47,969
want to do that I just want to put a

1864
01:31:45,658 --> 01:31:50,219
define in here that nas a is normalized

1865
01:31:47,969 --> 01:31:52,769
a like that and I think that's really

1866
01:31:50,219 --> 01:31:55,469
all there is to it so we here we want to

1867
01:31:52,769 --> 01:31:57,149
do a normalize of this that gives us our

1868
01:31:55,469 --> 01:31:59,489
normalized reflection vector for now

1869
01:31:57,149 --> 01:32:00,869
that's what we'll work with I'm gonna go

1870
01:31:59,488 --> 01:32:02,638
ahead and compile in theory they should

1871
01:32:00,868 --> 01:32:04,648
do absolutely nothing I just want to see

1872
01:32:02,639 --> 01:32:07,708
if we got any errors there make sure

1873
01:32:04,649 --> 01:32:09,929
that that is doing that that is a loud

1874
01:32:07,708 --> 01:32:11,818
math that I that I think it is right and

1875
01:32:09,929 --> 01:32:13,739
I don't know so let's just check to take

1876
01:32:11,819 --> 01:32:15,449
a look we've got an air Q but see

1877
01:32:13,738 --> 01:32:18,588
undefined variable world's it looks like

1878
01:32:15,448 --> 01:32:18,588
I typed something in weird

1879
01:32:24,750 --> 01:32:28,210
yes I did I was looking at the

1880
01:32:26,890 --> 01:32:29,800
reflection vector I'm like where did I

1881
01:32:28,210 --> 01:32:39,730
take that it's like well actually send

1882
01:32:29,800 --> 01:32:41,079
the line above it okay so now that we

1883
01:32:39,729 --> 01:32:42,789
have this reflection vector we need to

1884
01:32:41,079 --> 01:32:43,960
do something with it and like I said the

1885
01:32:42,789 --> 01:32:46,750
very first thing we could do is just

1886
01:32:43,960 --> 01:32:49,180
sample the light in that direction and

1887
01:32:46,750 --> 01:32:50,770
all that's gonna do is tell us like okay

1888
01:32:49,180 --> 01:32:52,780
how much light in general would we

1889
01:32:50,770 --> 01:32:56,110
expect to see if we looked off towards

1890
01:32:52,779 --> 01:32:58,300
this you know in this way so the way I

1891
01:32:56,109 --> 01:33:00,899
can do that right is I can think of each

1892
01:32:58,300 --> 01:33:03,850
of these as being a particular direction

1893
01:33:00,899 --> 01:33:05,738
and in fact I can just define these this

1894
01:33:03,850 --> 01:33:07,090
way for now and we can optimize this

1895
01:33:05,738 --> 01:33:09,399
quite a bit in the future but for now

1896
01:33:07,090 --> 01:33:11,469
I'm going to write it out longhand the

1897
01:33:09,399 --> 01:33:13,149
lighting west direction like we know

1898
01:33:11,469 --> 01:33:16,659
which direction that's coming from right

1899
01:33:13,149 --> 01:33:21,429
it's it's just that direction right

1900
01:33:16,659 --> 01:33:23,170
that's the the sort of the light normal

1901
01:33:21,430 --> 01:33:25,030
that the direction that the light is

1902
01:33:23,170 --> 01:33:28,029
coming from if we looked off in that

1903
01:33:25,029 --> 01:33:30,130
direction it's that right and the same

1904
01:33:28,029 --> 01:33:35,439
is true for any of these I can write all

1905
01:33:30,130 --> 01:33:36,609
of these as a specific value right so in

1906
01:33:35,439 --> 01:33:38,079
each case I'm going to go ahead and do

1907
01:33:36,609 --> 01:33:40,949
that and you can just kind of see me

1908
01:33:38,079 --> 01:33:40,949
doing that here

1909
01:33:50,689 --> 01:34:03,960
and finally up and down and so once I

1910
01:34:02,640 --> 01:34:06,030
have normals in each of those directions

1911
01:34:03,960 --> 01:34:09,300
you know I can do some pretty simple

1912
01:34:06,029 --> 01:34:12,000
blending if I want to I can do just some

1913
01:34:09,300 --> 01:34:14,610
kind of like a radial blend on these for

1914
01:34:12,000 --> 01:34:16,050
example or whatever I really want to so

1915
01:34:14,609 --> 01:34:18,659
we can think about how we want to blend

1916
01:34:16,050 --> 01:34:20,220
those leader but for the moment I'm just

1917
01:34:18,659 --> 01:34:21,689
gonna do a really really simple blend I

1918
01:34:20,220 --> 01:34:23,940
want to basically say it's like the dot

1919
01:34:21,689 --> 01:34:25,919
product fall off or something will be

1920
01:34:23,939 --> 01:34:27,659
how I'll blend them together and that

1921
01:34:25,920 --> 01:34:29,609
will just be how the lighting

1922
01:34:27,659 --> 01:34:33,569
contribution works or something right

1923
01:34:29,609 --> 01:34:34,739
and we'll we'll worry about that as we

1924
01:34:33,569 --> 01:34:37,799
sort of get further along with our

1925
01:34:34,739 --> 01:34:40,550
lighting okay um so for each of these

1926
01:34:37,800 --> 01:34:42,810
what I want to do is basically have a

1927
01:34:40,550 --> 01:34:45,329
mini utility function here right that I

1928
01:34:42,810 --> 01:34:47,250
can use that gives me back the the light

1929
01:34:45,329 --> 01:34:49,739
contribution so this here would

1930
01:34:47,250 --> 01:34:57,109
basically be something where I would you

1931
01:34:49,739 --> 01:35:01,019
know get your radiance or something like

1932
01:34:57,109 --> 01:35:04,229
and that what we'll do is when we sample

1933
01:35:01,020 --> 01:35:06,090
these textures right in fact maybe I'll

1934
01:35:04,229 --> 01:35:08,609
just do a pound of fine so it can

1935
01:35:06,090 --> 01:35:11,159
actually just be inlined in here what I

1936
01:35:08,609 --> 01:35:15,509
want to say is like alright so for a

1937
01:35:11,159 --> 01:35:18,869
light you know whatever it is and like

1938
01:35:15,510 --> 01:35:19,949
normal right so like a or a light value

1939
01:35:18,869 --> 01:35:25,380
and a light normal or something like

1940
01:35:19,949 --> 01:35:27,439
that if I want a sample the some

1941
01:35:25,380 --> 01:35:29,819
direction so like the sample normal

1942
01:35:27,439 --> 01:35:31,829
compute what that should be and I guess

1943
01:35:29,819 --> 01:35:32,939
if I do it this way actually I can just

1944
01:35:31,829 --> 01:35:34,859
make it a function there's no real

1945
01:35:32,939 --> 01:35:36,029
reason not to so I'm able do that um so

1946
01:35:34,859 --> 01:35:37,710
in this case I'll just say alright you

1947
01:35:36,029 --> 01:35:39,809
got a light value you got a light normal

1948
01:35:37,710 --> 01:35:41,909
you've got a sample normal and I want

1949
01:35:39,810 --> 01:35:44,910
this thing to return the light value

1950
01:35:41,909 --> 01:35:47,819
right so in this case the the result I

1951
01:35:44,909 --> 01:35:49,859
guess is something and I return it and

1952
01:35:47,819 --> 01:35:52,969
that something is going to be this

1953
01:35:49,859 --> 01:35:52,969
equation right

1954
01:35:53,599 --> 01:35:59,579
so it's basically like whatever the

1955
01:35:56,189 --> 01:36:05,669
light value is expanded out to be a real

1956
01:35:59,579 --> 01:36:08,609
light value so that's an actual

1957
01:36:05,670 --> 01:36:11,130
intensity like in floating point and

1958
01:36:08,609 --> 01:36:14,130
then I just want the inner products of

1959
01:36:11,130 --> 01:36:16,770
the light and sample end that tells me

1960
01:36:14,130 --> 01:36:19,139
the fall-off right and furthermore I

1961
01:36:16,770 --> 01:36:20,310
need to clamp that between zero and one

1962
01:36:19,139 --> 01:36:23,069
because I don't want it to ever be

1963
01:36:20,310 --> 01:36:25,590
negative so I just take the cosine

1964
01:36:23,069 --> 01:36:26,880
fall-off I use that to apply how much

1965
01:36:25,590 --> 01:36:31,130
light is supposed to bounce off this

1966
01:36:26,880 --> 01:36:34,050
thing and then then that's it right

1967
01:36:31,130 --> 01:36:38,429
that's it that's the light happy

1968
01:36:34,050 --> 01:36:41,730
birthday and that's the end of it all

1969
01:36:38,429 --> 01:36:43,500
right so if I was to then sample the

1970
01:36:41,729 --> 01:36:47,519
irradiance here and instead replace

1971
01:36:43,500 --> 01:36:49,979
right all of my light data summations

1972
01:36:47,520 --> 01:36:51,960
when actual you know their radiance

1973
01:36:49,979 --> 01:36:55,198
calculations here so I say all right

1974
01:36:51,960 --> 01:36:57,719
there's like less light West N and then

1975
01:36:55,198 --> 01:37:00,299
my are my sample direction right and

1976
01:36:57,719 --> 01:37:01,739
just nuke all of this but now what I

1977
01:37:00,300 --> 01:37:04,980
should be able to do is sum all my

1978
01:37:01,738 --> 01:37:12,419
lighting up by just you know doing east

1979
01:37:04,979 --> 01:37:15,118
south north down right and as long as I

1980
01:37:12,420 --> 01:37:18,510
use the the correct direction paired

1981
01:37:15,118 --> 01:37:21,269
with the value in question now I am

1982
01:37:18,510 --> 01:37:24,480
actually computing a really crappy but

1983
01:37:21,270 --> 01:37:27,270
still not completely ridiculous lighting

1984
01:37:24,479 --> 01:37:29,158
equation off of the light probes that

1985
01:37:27,270 --> 01:37:31,590
are in this you know nominal voxel or

1986
01:37:29,158 --> 01:37:33,629
whatever the heck is going on so now

1987
01:37:31,590 --> 01:37:38,279
when we look at the voxel we should see

1988
01:37:33,630 --> 01:37:41,340
some degree of lighting occur that has

1989
01:37:38,279 --> 01:37:42,988
to do with you know the direction that

1990
01:37:41,340 --> 01:37:44,369
you're facing looking at it here it

1991
01:37:42,988 --> 01:37:47,069
looks more like it's positional so we've

1992
01:37:44,368 --> 01:37:50,250
got some bugs but that's where we're all

1993
01:37:47,069 --> 01:37:52,079
right so now let's see yeah what did I

1994
01:37:50,250 --> 01:37:56,719
screw up let's let's fix everything

1995
01:37:52,079 --> 01:38:01,250
right so I again world peak camera P

1996
01:37:56,719 --> 01:38:06,170
that is what we want that's the inbound

1997
01:38:01,250 --> 01:38:06,170
vector the reflection vector is

1998
01:38:06,359 --> 01:38:15,000
just that that vector itself right minus

1999
01:38:11,460 --> 01:38:16,439
two times the inner product with the

2000
01:38:15,000 --> 01:38:19,109
normal times normal so that should bring

2001
01:38:16,439 --> 01:38:23,460
it up and we normalize that that seems

2002
01:38:19,109 --> 01:38:28,819
good here's all of our light normals I

2003
01:38:23,460 --> 01:38:31,670
think they're correct here's our summing

2004
01:38:28,819 --> 01:38:35,549
if irradiance is probably the wrong term

2005
01:38:31,670 --> 01:38:37,980
here but well so let's see how bad this

2006
01:38:35,550 --> 01:38:40,860
this is let's like it did we do

2007
01:38:37,979 --> 01:38:42,569
something wrong here I'm not sure anyway

2008
01:38:40,859 --> 01:38:44,639
so we're taking the dot product between

2009
01:38:42,569 --> 01:38:46,170
the light and the normal and we're

2010
01:38:44,640 --> 01:38:47,520
clamping that between zero and one which

2011
01:38:46,170 --> 01:38:52,859
I think should give us the correct

2012
01:38:47,520 --> 01:38:54,030
blending factor there right and so I'm

2013
01:38:52,859 --> 01:38:55,229
just trying to figure out what I really

2014
01:38:54,029 --> 01:38:58,019
want for now is just like why is

2015
01:38:55,229 --> 01:39:00,389
position involved at all right because

2016
01:38:58,020 --> 01:39:05,520
we're stuffing the box Allah every point

2017
01:39:00,390 --> 01:39:08,300
so why would the world P why would that

2018
01:39:05,520 --> 01:39:08,300
matter at all

2019
01:39:13,800 --> 01:39:18,300
oh you know what no actually that does

2020
01:39:16,050 --> 01:39:19,619
make sense because as we get to the

2021
01:39:18,300 --> 01:39:23,820
middle of the screen we're looking the

2022
01:39:19,619 --> 01:39:26,539
other direction so you know what that

2023
01:39:23,819 --> 01:39:26,539
actually makes for sense

2024
01:39:31,479 --> 01:39:35,679
you know that's exactly right so no I

2025
01:39:34,179 --> 01:39:39,248
totally take it back because remember

2026
01:39:35,679 --> 01:39:42,699
remember what I said originally this is

2027
01:39:39,248 --> 01:39:45,429
a mirror now it is literally all of our

2028
01:39:42,698 --> 01:39:47,738
surfaces are mirroring the incoming

2029
01:39:45,429 --> 01:39:50,469
light now they have a texture applied as

2030
01:39:47,738 --> 01:39:53,529
well so it's a mirror that is actually

2031
01:39:50,469 --> 01:39:55,989
colored with a pattern but it's a mirror

2032
01:39:53,529 --> 01:39:57,578
still and so it's going to look at the

2033
01:39:55,988 --> 01:40:00,069
light that's in coming from a direction

2034
01:39:57,578 --> 01:40:02,948
and repeat it exactly it's not gonna sum

2035
01:40:00,069 --> 01:40:04,988
it at all right and so as we look across

2036
01:40:02,948 --> 01:40:06,458
the stream eventually we're looking in

2037
01:40:04,988 --> 01:40:09,009
the other direction this was all looking

2038
01:40:06,458 --> 01:40:11,828
west right and then now we're looking

2039
01:40:09,010 --> 01:40:14,800
east and as we stop and start looking

2040
01:40:11,828 --> 01:40:17,558
east yeah we do expect that fall-off to

2041
01:40:14,800 --> 01:40:20,050
occur now what I don't think is correct

2042
01:40:17,559 --> 01:40:22,659
is the fall-off I feel like should have

2043
01:40:20,050 --> 01:40:25,719
been gradual so it should be getting

2044
01:40:22,658 --> 01:40:30,219
gradually dimmer and it should it should

2045
01:40:25,719 --> 01:40:34,510
have like it is tapered a little bit but

2046
01:40:30,219 --> 01:40:37,328
not that much like so that fall-off rate

2047
01:40:34,510 --> 01:40:39,280
seems like it might be wrong but it's

2048
01:40:37,328 --> 01:40:42,158
hard to really say because cosine

2049
01:40:39,279 --> 01:40:46,779
fall-off is a sine curve or cosine curve

2050
01:40:42,158 --> 01:40:48,998
you know so you know you do have to

2051
01:40:46,779 --> 01:40:51,009
wonder a little bit about that and I

2052
01:40:48,998 --> 01:40:53,649
guess that part I'm not really sure so

2053
01:40:51,010 --> 01:40:54,998
kind of a little bit tough to say I'm

2054
01:40:53,649 --> 01:40:59,049
not super prepared to say that it's

2055
01:40:54,998 --> 01:41:01,510
actually wrong so hard to say right but

2056
01:40:59,050 --> 01:41:06,130
for example now if we were to create

2057
01:41:01,510 --> 01:41:07,300
sort of a more complicated Eleni

2058
01:41:06,130 --> 01:41:09,849
equation we could blend those together

2059
01:41:07,300 --> 01:41:11,110
let's go ahead and try lighting from

2060
01:41:09,849 --> 01:41:13,269
different directions and make sure that

2061
01:41:11,109 --> 01:41:16,029
that actually creates what we expected

2062
01:41:13,269 --> 01:41:17,760
to create so if I go to the lighting

2063
01:41:16,029 --> 01:41:20,109
code and in here now I just start to

2064
01:41:17,760 --> 01:41:23,019
fill in different things so let's say I

2065
01:41:20,109 --> 01:41:25,448
feel in East now and now we should see

2066
01:41:23,019 --> 01:41:28,360
the opposite occur to the east situs of

2067
01:41:25,448 --> 01:41:29,888
the reflections that we see and just

2068
01:41:28,359 --> 01:41:31,598
make sure that's right again just trying

2069
01:41:29,889 --> 01:41:33,458
to check that lighting equation and see

2070
01:41:31,599 --> 01:41:35,349
if it actually works so that looks good

2071
01:41:33,458 --> 01:41:39,328
there right that's that's what we would

2072
01:41:35,349 --> 01:41:39,328
expect to see I guess

2073
01:41:48,510 --> 01:41:52,510
so there is one thing also I think is

2074
01:41:50,859 --> 01:41:57,819
wrong which is that is that I feel like

2075
01:41:52,510 --> 01:42:02,110
that world P is sent down from the wrong

2076
01:41:57,819 --> 01:42:03,819
place though so you can see this is a

2077
01:42:02,109 --> 01:42:06,009
slight bug we should probably fix at

2078
01:42:03,819 --> 01:42:07,239
some point when we're competing our

2079
01:42:06,010 --> 01:42:09,130
lighting we're computing it with the

2080
01:42:07,239 --> 01:42:10,389
debug camera when the debug can't remove

2081
01:42:09,130 --> 01:42:13,539
so you could see that happening here

2082
01:42:10,390 --> 01:42:16,000
right and that's really not what should

2083
01:42:13,539 --> 01:42:23,079
be happening we should be computing it

2084
01:42:16,000 --> 01:42:24,789
just with if the game camera so this

2085
01:42:23,079 --> 01:42:26,619
world P is being sent down wrong I think

2086
01:42:24,789 --> 01:42:30,579
so that's kind of an issue as well but

2087
01:42:26,619 --> 01:42:31,899
we can alright so let's try some other

2088
01:42:30,579 --> 01:42:36,729
ones let's try a North look North would

2089
01:42:31,899 --> 01:42:40,379
light and then at South red light oops

2090
01:42:36,729 --> 01:42:40,379
South would like first sorry

2091
01:42:51,729 --> 01:42:57,729
so now what were expecting to see here

2092
01:42:55,750 --> 01:43:00,369
so a southward light is going to be

2093
01:42:57,729 --> 01:43:03,699
coming from negative Y so it's coming

2094
01:43:00,369 --> 01:43:05,380
from this direction so what we expect to

2095
01:43:03,699 --> 01:43:07,319
see now is anything facing that

2096
01:43:05,380 --> 01:43:11,909
direction like these should just get it

2097
01:43:07,319 --> 01:43:15,759
totally right well I mean we're kind of

2098
01:43:11,909 --> 01:43:20,010
pointing downwards I guess but let's see

2099
01:43:15,760 --> 01:43:22,949
here and then yeah as I tilt the camera

2100
01:43:20,010 --> 01:43:31,060
so that seems sort of wrong to me

2101
01:43:22,949 --> 01:43:34,779
actually look as I'm looking I feel like

2102
01:43:31,060 --> 01:43:36,940
I feel like what I'm seeing is that it's

2103
01:43:34,779 --> 01:43:39,639
actually coming from the wrong direction

2104
01:43:36,939 --> 01:43:41,919
so South should be behind us looks like

2105
01:43:39,640 --> 01:43:45,220
that reflection is sort of wrong that

2106
01:43:41,920 --> 01:43:47,789
doesn't feel right to me the southward

2107
01:43:45,220 --> 01:43:55,000
one is so it's because it's coming from

2108
01:43:47,789 --> 01:43:56,439
right negative one and so as I got down

2109
01:43:55,000 --> 01:43:58,510
there that reflection should have been

2110
01:43:56,439 --> 01:44:00,759
looking out so I do think we've got a

2111
01:43:58,510 --> 01:44:03,640
bug here I'm not sure what it is but I

2112
01:44:00,760 --> 01:44:08,380
do think we've got one that doesn't look

2113
01:44:03,640 --> 01:44:10,329
right to me and again that could be

2114
01:44:08,380 --> 01:44:13,119
because the debug camera part of things

2115
01:44:10,329 --> 01:44:15,250
is wrong I'm not sure what's being sent

2116
01:44:13,119 --> 01:44:17,559
down there for that value so maybe I'm

2117
01:44:15,250 --> 01:44:19,300
overreacting here but I do think

2118
01:44:17,560 --> 01:44:24,160
something's a little fishy with that

2119
01:44:19,300 --> 01:44:27,000
doesn't seem correct to me if you assume

2120
01:44:24,159 --> 01:44:27,000
that that lighting

2121
01:44:34,300 --> 01:44:40,670
what would that be from and of course I

2122
01:44:39,109 --> 01:44:42,829
can't step into it because it's on the

2123
01:44:40,670 --> 01:44:45,170
GPU so you always give that nice aspect

2124
01:44:42,829 --> 01:44:50,420
of it so if you take a look at the light

2125
01:44:45,170 --> 01:44:53,480
normal and the sample normal there the

2126
01:44:50,420 --> 01:44:56,319
sample normal still us I don't wonder

2127
01:44:53,479 --> 01:45:01,428
I'm passing all these quickly as well

2128
01:44:56,319 --> 01:45:02,988
you can see that it's fine right so just

2129
01:45:01,429 --> 01:45:05,260
should be corrupt the south normal looks

2130
01:45:02,988 --> 01:45:05,259
fine

2131
01:45:10,689 --> 01:45:16,509
yeah so I don't see I don't see exactly

2132
01:45:13,880 --> 01:45:16,510
what's wrong with that

2133
01:45:59,880 --> 01:46:05,230
so I guess I can't come up with a

2134
01:46:02,140 --> 01:46:07,570
hypothesis for why that would be doing

2135
01:46:05,229 --> 01:46:10,509
that and so we may have to save that for

2136
01:46:07,569 --> 01:46:12,460
next weekend because I don't I can't

2137
01:46:10,510 --> 01:46:15,909
think of anything quickly offhand why

2138
01:46:12,460 --> 01:46:20,859
that doesn't appear to be lit correctly

2139
01:46:15,909 --> 01:46:25,659
in my opinion though just looking at

2140
01:46:20,859 --> 01:46:28,409
what's happening there doesn't make a

2141
01:46:25,659 --> 01:46:28,409
lot of sense Oh

2142
01:46:29,470 --> 01:46:39,520
or does it though I don't know if the

2143
01:46:35,140 --> 01:46:40,930
normals are correct for our sprites you

2144
01:46:39,520 --> 01:46:42,610
know what our normals are probably wrong

2145
01:46:40,930 --> 01:46:44,770
for us right that's probably all it is

2146
01:46:42,609 --> 01:46:46,179
so looking at it here cuz I'm looking at

2147
01:46:44,770 --> 01:46:48,850
the cubes and the cubes are exactly

2148
01:46:46,180 --> 01:46:53,560
right so I think our normals are just

2149
01:46:48,850 --> 01:46:55,360
wrong on our sprites right now that's

2150
01:46:53,560 --> 01:46:58,360
that's almost certainly what the problem

2151
01:46:55,359 --> 01:46:59,889
is all right so so forget the sprites

2152
01:46:58,359 --> 01:47:01,989
the sprites are wrong let's just not

2153
01:46:59,890 --> 01:47:03,940
look at those and we'll go fix the

2154
01:47:01,989 --> 01:47:05,409
normals our sprites some other time so

2155
01:47:03,939 --> 01:47:08,529
now I think that's right that actually

2156
01:47:05,409 --> 01:47:10,000
does look right now so that's fine I was

2157
01:47:08,529 --> 01:47:12,300
gonna say like I can't go everything and

2158
01:47:10,000 --> 01:47:14,979
the answer is because yeah we're not

2159
01:47:12,300 --> 01:47:16,570
looking the wrong thing all right so

2160
01:47:14,979 --> 01:47:17,589
let's try the northward light and I'll

2161
01:47:16,569 --> 01:47:18,789
just verify the rest and then we'll end

2162
01:47:17,590 --> 01:47:21,279
for the day so I think we're all good

2163
01:47:18,789 --> 01:47:24,399
here and we can then go forward with the

2164
01:47:21,279 --> 01:47:26,170
lighting as weak as we would have

2165
01:47:24,399 --> 01:47:27,609
normally and I'm sure fixing the normals

2166
01:47:26,170 --> 01:47:30,010
on the sprites won't be a huge deal

2167
01:47:27,609 --> 01:47:33,460
because we probably never set them up

2168
01:47:30,010 --> 01:47:35,940
right the first place all right so that

2169
01:47:33,460 --> 01:47:35,939
looks about right

2170
01:47:37,698 --> 01:47:46,869
until we find their and now let's just

2171
01:47:42,439 --> 01:47:46,869
try the up-and-down there's the down

2172
01:47:59,779 --> 01:48:06,769
again looks looks great exactly what I

2173
01:48:02,420 --> 01:48:15,500
want so I think I think we're good thank

2174
01:48:06,770 --> 01:48:17,870
you good shouldn't bother restarting the

2175
01:48:15,500 --> 01:48:19,340
game I don't know why I don't just go in

2176
01:48:17,869 --> 01:48:20,599
and make it so it downloads the thing

2177
01:48:19,340 --> 01:48:27,529
every time again because it won't be

2178
01:48:20,600 --> 01:48:27,980
that slow looks good all right I think

2179
01:48:27,529 --> 01:48:30,529
we're good

2180
01:48:27,979 --> 01:48:32,839
I'm happy with that so I think like

2181
01:48:30,529 --> 01:48:35,989
mostly what we need to do now is just

2182
01:48:32,840 --> 01:48:37,369
yeah like I mean and you know what we

2183
01:48:35,989 --> 01:48:41,739
could even do one last thing before we

2184
01:48:37,369 --> 01:48:47,109
finish so let's suppose we just do like

2185
01:48:41,739 --> 01:48:49,399
you know something where we do like some

2186
01:48:47,109 --> 01:48:50,779
some different colored lights that come

2187
01:48:49,399 --> 01:48:53,509
in from different areas so there's a

2188
01:48:50,779 --> 01:48:56,659
purple and a yellow light for up and

2189
01:48:53,510 --> 01:49:01,070
down right so now you've got like a

2190
01:48:56,659 --> 01:49:05,630
purple light coming from above a yellow

2191
01:49:01,069 --> 01:49:07,759
light coming from below and so we should

2192
01:49:05,630 --> 01:49:11,060
be able to see some kind of like vague

2193
01:49:07,760 --> 01:49:14,900
application on the cubes of just a

2194
01:49:11,060 --> 01:49:16,370
uniform blanket light in there right and

2195
01:49:14,899 --> 01:49:17,839
again it's a mirror right so we're

2196
01:49:16,369 --> 01:49:20,510
looking at these things as we tilt

2197
01:49:17,840 --> 01:49:22,130
around so as we come head on right you

2198
01:49:20,510 --> 01:49:25,280
can't really see any of it because it's

2199
01:49:22,130 --> 01:49:26,989
it's there's literally no light coming

2200
01:49:25,279 --> 01:49:30,170
from the azimuth so you can actually see

2201
01:49:26,989 --> 01:49:31,429
that black band in there and so as you

2202
01:49:30,170 --> 01:49:32,690
look straight ahead this is like a

2203
01:49:31,430 --> 01:49:34,280
mirror I'm looking straight down it's

2204
01:49:32,689 --> 01:49:36,529
nothing right back up and looking at the

2205
01:49:34,279 --> 01:49:38,000
purple sky right and then I come back

2206
01:49:36,529 --> 01:49:39,319
down here and the same would be true of

2207
01:49:38,000 --> 01:49:41,270
course we don't have any bright services

2208
01:49:39,319 --> 01:49:43,189
for the yellow ground but like for

2209
01:49:41,270 --> 01:49:45,470
example on a glancing angle you can see

2210
01:49:43,189 --> 01:49:47,210
I imagine this is a mirror right and you

2211
01:49:45,470 --> 01:49:50,720
look down and like the yellow sky so I

2212
01:49:47,210 --> 01:49:54,350
think we're exactly right I think that's

2213
01:49:50,720 --> 01:49:54,949
that's working working well and and I'm

2214
01:49:54,350 --> 01:49:57,200
happy with that

2215
01:49:54,949 --> 01:49:58,429
so yeah for now I'm not gonna do

2216
01:49:57,199 --> 01:50:00,470
anything else with it we're gonna leave

2217
01:49:58,430 --> 01:50:01,610
it like that and then next weekend we

2218
01:50:00,470 --> 01:50:04,550
can start to work on our lighting for

2219
01:50:01,609 --> 01:50:06,019
you know in earnest ray but I think

2220
01:50:04,550 --> 01:50:07,220
we're good that I'm pretty I'm pretty

2221
01:50:06,020 --> 01:50:08,530
happy with where we're at now that's

2222
01:50:07,220 --> 01:50:13,659
looking pretty good

2223
01:50:08,529 --> 01:50:19,630
let's go Zen site there and yeah all

2224
01:50:13,659 --> 01:50:21,880
right let's go to a QA and remember you

2225
01:50:19,630 --> 01:50:24,190
can use the disk word there's a pound

2226
01:50:21,880 --> 01:50:27,300
live channel on the discord if you'd

2227
01:50:24,189 --> 01:50:31,239
like to go over there you can actually

2228
01:50:27,300 --> 01:50:32,440
you can actually just go ahead and type

2229
01:50:31,239 --> 01:50:37,719
questions in there and I take them from

2230
01:50:32,439 --> 01:50:38,949
from disk or as well I think there's

2231
01:50:37,720 --> 01:50:42,030
also a link in the bottom of the twitch

2232
01:50:38,949 --> 01:50:42,029
page if you're on twitch

2233
01:50:46,829 --> 01:50:53,220
shouldn't it be I plus as opposed to I -

2234
01:50:50,750 --> 01:50:54,210
yeah I think you might be right because

2235
01:50:53,220 --> 01:50:56,369
the normal is pointing the other

2236
01:50:54,210 --> 01:50:59,689
direction already so it would be a

2237
01:50:56,369 --> 01:50:59,689
negative value I think you're right

2238
01:51:09,599 --> 01:51:15,599
not close I did close my editor don't

2239
01:51:12,609 --> 01:51:15,598
know why I closed my editor

2240
01:51:31,909 --> 01:51:37,430
um you know what else is kind of dumb

2241
01:51:34,770 --> 01:51:39,300
about this now that you mention it I

2242
01:51:37,430 --> 01:51:41,190
probably could have just used there's a

2243
01:51:39,300 --> 01:51:42,960
reflect function which I think I could

2244
01:51:41,189 --> 01:51:45,569
have used but yeah I do think you're

2245
01:51:42,960 --> 01:51:47,069
right because I did it in Bound I think

2246
01:51:45,569 --> 01:51:48,569
I did it specifically so that you could

2247
01:51:47,069 --> 01:51:51,029
just do a plus and then I didn't do the

2248
01:51:48,569 --> 01:51:52,880
plus so I'm not sure why but yeah

2249
01:51:51,029 --> 01:51:56,119
because the world normals pointing up

2250
01:51:52,880 --> 01:51:58,350
away from the inbound vector

2251
01:51:56,119 --> 01:52:01,409
unfortunately I'm not sure why we were

2252
01:51:58,350 --> 01:52:04,980
getting correct results though that

2253
01:52:01,409 --> 01:52:05,970
might just be bad testing but I wonder

2254
01:52:04,979 --> 01:52:07,259
if we have something else wrong because

2255
01:52:05,970 --> 01:52:11,659
it seems like it was reflecting in the

2256
01:52:07,260 --> 01:52:11,659
correct direction and that's confusing

2257
01:52:32,520 --> 01:52:44,110
which one is stuffed with so the

2258
01:52:41,470 --> 01:52:45,730
upward-facing light should be oh so you

2259
01:52:44,109 --> 01:52:47,349
know we should have known that I had

2260
01:52:45,729 --> 01:52:50,679
that backwards in fact that was dumb

2261
01:52:47,350 --> 01:52:53,020
because it was a yellow that was coming

2262
01:52:50,680 --> 01:52:54,520
from the top not purple so yeah we did

2263
01:52:53,020 --> 01:52:56,970
have that backwards good catch somebody

2264
01:52:54,520 --> 01:52:56,970
took my name

2265
01:52:57,119 --> 01:53:01,090
not sure why I glossed over that because

2266
01:52:59,319 --> 01:53:03,069
I just was about to do that test and I

2267
01:53:01,090 --> 01:53:04,840
did and then didn't notice so no that's

2268
01:53:03,069 --> 01:53:05,859
all yeah that's correct now so we had

2269
01:53:04,840 --> 01:53:10,230
the reflection going the opposite

2270
01:53:05,859 --> 01:53:12,939
direction I think that also probably

2271
01:53:10,229 --> 01:53:14,709
keeps all of the rep yes it was just it

2272
01:53:12,939 --> 01:53:16,719
was just flipped but otherwise it's good

2273
01:53:14,710 --> 01:53:19,210
you can see it still has the azimuth

2274
01:53:16,720 --> 01:53:20,740
that black which it should and we can't

2275
01:53:19,210 --> 01:53:24,310
see the purple but that's just because

2276
01:53:20,739 --> 01:53:29,219
there's nothing just really no way to

2277
01:53:24,310 --> 01:53:29,220
see the purple maybe if I did this right

2278
01:53:29,310 --> 01:53:34,180
there you go so there's reflecting the

2279
01:53:32,020 --> 01:53:35,560
purple off of the thing right we just

2280
01:53:34,180 --> 01:53:42,369
don't have a way to look upward

2281
01:53:35,560 --> 01:53:43,570
unfortunately so so yeah I can't

2282
01:53:42,369 --> 01:53:46,289
actually verify the purpose guy very

2283
01:53:43,569 --> 01:53:46,289
well but

2284
01:53:52,020 --> 01:53:58,150
XX to the big foxes I think subtraction

2285
01:53:54,430 --> 01:53:59,770
is right actually isn't it um so the the

2286
01:53:58,149 --> 01:54:02,889
thing you have to remember is it depends

2287
01:53:59,770 --> 01:54:06,010
what you're doing so if to go back to

2288
01:54:02,890 --> 01:54:09,720
the diagram because either one could be

2289
01:54:06,010 --> 01:54:09,720
correct it depends on what you're doing

2290
01:54:10,140 --> 01:54:22,240
if I drew that so the way I drew the

2291
01:54:13,210 --> 01:54:23,529
diagram it's plus oops and again you

2292
01:54:22,239 --> 01:54:25,599
should be able to do this at home like I

2293
01:54:23,529 --> 01:54:26,469
said we've done this a billion times so

2294
01:54:25,600 --> 01:54:28,390
you should be able to do this at home

2295
01:54:26,470 --> 01:54:32,260
work it out yourself and convince

2296
01:54:28,390 --> 01:54:33,610
yourself that you've got it but if this

2297
01:54:32,260 --> 01:54:36,250
is the camera position and this is the

2298
01:54:33,609 --> 01:54:38,829
world position here's the normal right

2299
01:54:36,250 --> 01:54:43,720
then there's two ways I can draw this

2300
01:54:38,829 --> 01:54:48,880
diagram one is I can do C minus W right

2301
01:54:43,720 --> 01:54:52,329
and the other is I can do W minus C so

2302
01:54:48,880 --> 01:54:56,680
if I do C minus W what I get is a vector

2303
01:54:52,329 --> 01:54:58,149
going out to the camera right so this is

2304
01:54:56,680 --> 01:55:02,890
going out towards the thing that's like

2305
01:54:58,149 --> 01:55:05,019
the I direction if I do W minus C then I

2306
01:55:02,890 --> 01:55:06,940
get a vector going this direction the

2307
01:55:05,020 --> 01:55:10,600
same vector but they're pointing in

2308
01:55:06,939 --> 01:55:12,789
opposite directions right so this is the

2309
01:55:10,600 --> 01:55:15,010
one I was talking about the eye as

2310
01:55:12,789 --> 01:55:21,489
opposed to it that's probably bad

2311
01:55:15,010 --> 01:55:25,180
incident as opposed to I right either

2312
01:55:21,489 --> 01:55:28,000
way so let's suppose I do it with this

2313
01:55:25,180 --> 01:55:29,980
one well when I take the normal right

2314
01:55:28,000 --> 01:55:32,680
the dot product onto the normal is

2315
01:55:29,979 --> 01:55:40,839
already going to be negative jaren I'm

2316
01:55:32,680 --> 01:55:43,420
saying so if I want to remove that

2317
01:55:40,840 --> 01:55:46,060
amount so I died out of the normal it's

2318
01:55:43,420 --> 01:55:48,130
going to be negative I want to remove

2319
01:55:46,060 --> 01:55:51,160
that much from the vector oh you know

2320
01:55:48,130 --> 01:55:53,760
what you know what maybe I talked myself

2321
01:55:51,159 --> 01:55:53,760
out of it

2322
01:55:56,469 --> 01:56:01,698
now you guys have me confused because

2323
01:56:00,350 --> 01:56:03,050
when I drew it the first time a cab did

2324
01:56:01,698 --> 01:56:04,908
sound right to me and I'm what kinda

2325
01:56:03,050 --> 01:56:14,480
game so but as I'm driving right now

2326
01:56:04,908 --> 01:56:18,619
it's I gotta say this number is negative

2327
01:56:14,479 --> 01:56:21,198
and you want to add the normal you want

2328
01:56:18,619 --> 01:56:28,069
to go in this direction so actually I

2329
01:56:21,198 --> 01:56:30,678
think I was right the first time and how

2330
01:56:28,069 --> 01:56:33,679
did i NNN I read this wrong up is purple

2331
01:56:30,679 --> 01:56:38,079
so no sorry okay ignoring this entire

2332
01:56:33,679 --> 01:56:43,279
Q&amp;A I thought yeah no it was right sorry

2333
01:56:38,079 --> 01:56:45,559
sorry the big Fox but anyway what I was

2334
01:56:43,279 --> 01:56:46,399
trying to say is if you let me go

2335
01:56:45,560 --> 01:56:47,750
through the rest of this though because

2336
01:56:46,399 --> 01:56:50,089
obviously it's confusing because you

2337
01:56:47,750 --> 01:56:51,408
managed to convince me I was wrong when

2338
01:56:50,090 --> 01:56:54,319
I didn't look at it very carefully right

2339
01:56:51,408 --> 01:56:56,269
but no the upward light is purple so

2340
01:56:54,319 --> 01:56:58,179
it's correct I don't know and then I

2341
01:56:56,270 --> 01:57:00,860
thought I saw that yeah I don't know

2342
01:56:58,179 --> 01:57:02,029
just just totally bonkers I guess this

2343
01:57:00,859 --> 01:57:05,630
is what happens when you program on

2344
01:57:02,029 --> 01:57:08,658
stream I need more coffee um so if you

2345
01:57:05,630 --> 01:57:10,639
take a look here at the e right let's

2346
01:57:08,658 --> 01:57:12,439
suppose I did it with that vector now

2347
01:57:10,639 --> 01:57:13,429
when I take the dot product the dot

2348
01:57:12,439 --> 01:57:17,750
product is positive

2349
01:57:13,429 --> 01:57:19,039
right and so if I want to flip this

2350
01:57:17,750 --> 01:57:22,010
vector around

2351
01:57:19,039 --> 01:57:23,899
it's a weirder kind of behavior because

2352
01:57:22,010 --> 01:57:26,030
what I want to do is start with the

2353
01:57:23,899 --> 01:57:29,329
opposite of it because I want to flip it

2354
01:57:26,029 --> 01:57:30,889
down here right and then if I had done

2355
01:57:29,329 --> 01:57:34,519
the dot product with the positive

2356
01:57:30,889 --> 01:57:37,760
version now I would be adding that in so

2357
01:57:34,520 --> 01:57:40,250
you would take negative E Plus 2 you

2358
01:57:37,760 --> 01:57:44,389
know blah blah blah right so either you

2359
01:57:40,250 --> 01:57:48,529
do I minus 2 times the thing or negative

2360
01:57:44,389 --> 01:57:52,400
e plus 2 times you know e transpose does

2361
01:57:48,529 --> 01:57:53,869
that make sense so at least I get my

2362
01:57:52,399 --> 01:57:57,049
full self full credit I did it correctly

2363
01:57:53,869 --> 01:57:59,389
I just should have said that instead of

2364
01:57:57,050 --> 01:58:03,429
assuming this person who wrote in caught

2365
01:57:59,389 --> 01:58:03,429
an actual bug it's right the way it was

2366
01:58:08,720 --> 01:58:13,039
and we should see purple sky so I don't

2367
01:58:11,600 --> 01:58:14,750
know why yeah I guess that's just

2368
01:58:13,039 --> 01:58:16,010
I usually assume I make a mistake but

2369
01:58:14,750 --> 01:58:18,829
someone catches it rather than assuming

2370
01:58:16,010 --> 01:58:23,329
I didn't and maybe that's the bad habit

2371
01:58:18,829 --> 01:58:25,000
to get into that's what it should look

2372
01:58:23,329 --> 01:58:28,420
like

2373
01:58:25,000 --> 01:58:28,420
pretty sure anyway

2374
01:58:37,099 --> 01:58:41,300
where would you put material information

2375
01:58:39,349 --> 01:58:43,010
for the lighting in the ray-tracing part

2376
01:58:41,300 --> 01:58:46,460
of the algorithm that we still have not

2377
01:58:43,010 --> 01:58:48,980
plugged in or in the shader so my

2378
01:58:46,460 --> 01:58:51,500
assumption and I could be very wrong

2379
01:58:48,979 --> 01:58:53,988
about this but my assumption is that we

2380
01:58:51,500 --> 01:58:56,179
will not be able to we will not have the

2381
01:58:53,988 --> 01:58:59,319
computational resources necessary to use

2382
01:58:56,179 --> 01:59:02,270
that information meaning we cannot

2383
01:58:59,319 --> 01:59:04,698
actually sample any real material

2384
01:59:02,270 --> 01:59:07,190
information so I'm assuming that what we

2385
01:59:04,698 --> 01:59:10,039
will actually do is we will just use a

2386
01:59:07,189 --> 01:59:12,408
color value at best a color value per

2387
01:59:10,039 --> 01:59:16,519
face but possibly just a single color

2388
01:59:12,408 --> 01:59:19,420
value for the entire occluder and that's

2389
01:59:16,520 --> 01:59:22,130
just purely for computational efficiency

2390
01:59:19,420 --> 01:59:25,219
obviously if if we didn't have to worry

2391
01:59:22,130 --> 01:59:26,868
about computational efficiency we would

2392
01:59:25,219 --> 01:59:29,480
actually just look up the texture index

2393
01:59:26,868 --> 01:59:34,578
of the occluder and see what the actual

2394
01:59:29,479 --> 01:59:35,809
value was at the point we hit right but

2395
01:59:34,578 --> 01:59:41,269
I'm pretty sure there's just no way we

2396
01:59:35,810 --> 01:59:43,460
could ever afford that a GPU could GPU

2397
01:59:41,270 --> 01:59:44,929
ray-tracing could totally this is an

2398
01:59:43,460 --> 01:59:48,859
Archie X card we just go ahead and do

2399
01:59:44,929 --> 01:59:54,349
that right by the CPU CPU sucks at

2400
01:59:48,859 --> 01:59:58,670
texture sampling one of the big reasons

2401
01:59:54,349 --> 02:00:00,500
GPUs are faster are faster than CPUs at

2402
01:59:58,670 --> 02:00:03,739
rendering one of the big reasons is

2403
02:00:00,500 --> 02:00:05,630
texture sampling CPUs actually have

2404
02:00:03,738 --> 02:00:06,138
pretty good math throughput it's not

2405
02:00:05,630 --> 02:00:08,510
horrible

2406
02:00:06,139 --> 02:00:11,868
right but their ability to sample

2407
02:00:08,510 --> 02:00:15,050
texture is frickin terrible especially X

2408
02:00:11,868 --> 02:00:18,170
64 X Z 4 is absolute garbage sampling

2409
02:00:15,050 --> 02:00:22,820
textures if avx-512 ever becomes the

2410
02:00:18,170 --> 02:00:24,649
thing then if that has gathered in it

2411
02:00:22,819 --> 02:00:26,509
and then you could start to actually

2412
02:00:24,649 --> 02:00:28,729
sample textures in a way that might not

2413
02:00:26,510 --> 02:00:30,440
be extremely slow but it would still be

2414
02:00:28,729 --> 02:00:33,009
horrible compared to a GPU because GPU

2415
02:00:30,439 --> 02:00:38,799
has special-purpose texture sampling

2416
02:00:33,010 --> 02:00:38,800
units built in I mean I don't even know

2417
02:01:02,229 --> 02:01:13,380
I am trying to get a image here where

2418
02:01:10,359 --> 02:01:13,380
that might show it

2419
02:01:20,748 --> 02:01:27,469
so I can't really get a good image I

2420
02:01:25,399 --> 02:01:31,118
want a die shot I don't really want that

2421
02:01:27,469 --> 02:01:31,118
anyway what I want is a die shot

2422
02:01:42,500 --> 02:01:52,890
so what I would like is a picture of

2423
02:01:46,109 --> 02:01:55,369
this with the texture units outlined can

2424
02:01:52,890 --> 02:01:55,369
I get that

2425
02:02:00,010 --> 02:02:05,340
sadly it doesn't look like I can

2426
02:02:02,340 --> 02:02:05,340
actually

2427
02:02:16,920 --> 02:02:23,720
she's trying to find something that

2428
02:02:18,329 --> 02:02:23,720
would be relatively

2429
02:02:37,628 --> 02:02:42,149
so I don't know I can't even actually

2430
02:02:40,149 --> 02:02:44,709
load this out here so I'm not sure

2431
02:02:42,149 --> 02:02:53,169
anyway doesn't matter point being

2432
02:02:44,708 --> 02:02:54,819
texture units are a big deal and CPUs

2433
02:02:53,168 --> 02:02:55,979
don't have that's pretty much the end of

2434
02:02:54,819 --> 02:02:59,858
story

2435
02:02:55,979 --> 02:03:01,599
AVX 512 at least has instructions so

2436
02:02:59,859 --> 02:03:03,340
that you don't have to downshift and

2437
02:03:01,599 --> 02:03:04,989
pull everything out to the scalar part

2438
02:03:03,340 --> 02:03:07,809
of the chip to just go fetch the memory

2439
02:03:04,988 --> 02:03:11,078
you need for your textures so it helps a

2440
02:03:07,809 --> 02:03:14,409
lot but it's not the same as having

2441
02:03:11,078 --> 02:03:16,889
texture units texture units are way

2442
02:03:14,408 --> 02:03:19,089
frickin faster than that's going to be

2443
02:03:16,889 --> 02:03:24,458
especially when you have so many of them

2444
02:03:19,090 --> 02:03:29,849
in the on a GPU so it's just it's not

2445
02:03:24,458 --> 02:03:29,849
it's just not gonna happen

2446
02:03:30,269 --> 02:03:34,539
the big fox s are the AV x load

2447
02:03:33,069 --> 02:03:37,599
instructions actually fast have you

2448
02:03:34,538 --> 02:03:39,668
tested them no I don't I guess I do have

2449
02:03:37,599 --> 02:03:41,229
one chip now I think I have a core i9 in

2450
02:03:39,668 --> 02:03:44,648
my dead machine that does have an

2451
02:03:41,229 --> 02:03:47,918
avx-512 instruction set but my

2452
02:03:44,649 --> 02:03:49,599
assumption is that well I don't know I

2453
02:03:47,918 --> 02:03:52,719
don't want to make assumptions my

2454
02:03:49,599 --> 02:03:57,128
assumption is that there really isn't

2455
02:03:52,719 --> 02:03:59,918
any point in profiling avx-512

2456
02:03:57,128 --> 02:04:01,658
instructions yet because not only are

2457
02:03:59,918 --> 02:04:04,809
these chips probably not particularly

2458
02:04:01,658 --> 02:04:07,509
good at avx-512 yet but nobody has them

2459
02:04:04,809 --> 02:04:09,489
anyway so even if the avx-512 load

2460
02:04:07,510 --> 02:04:11,530
instruction actually was fast

2461
02:04:09,488 --> 02:04:16,078
you couldn't ship a game youth that

2462
02:04:11,529 --> 02:04:18,340
relied on it right so I think avx-512

2463
02:04:16,078 --> 02:04:20,590
well it does have instructions that

2464
02:04:18,340 --> 02:04:22,510
actually make some sense is not really

2465
02:04:20,590 --> 02:04:24,699
interesting yet it will be maybe someday

2466
02:04:22,510 --> 02:04:27,489
maybe depending on how market

2467
02:04:24,698 --> 02:04:29,049
penetration goes but you know I I'm just

2468
02:04:27,488 --> 02:04:32,049
considering it a not particularly

2469
02:04:29,050 --> 02:04:34,418
interesting thing at the moment the big

2470
02:04:32,050 --> 02:04:35,679
I was gonna type in the big fox for some

2471
02:04:34,418 --> 02:04:37,719
reason which is one of the people who

2472
02:04:35,679 --> 02:04:41,229
was commenting on the street that's now

2473
02:04:37,719 --> 02:04:46,460
I wanted real Road tech comm gt1 200

2474
02:04:41,229 --> 02:04:50,699
someone posted this there it is great

2475
02:04:46,460 --> 02:04:53,699
thank you very much here is a diagram

2476
02:04:50,699 --> 02:04:57,479
unfortunately it is not necessarily a

2477
02:04:53,699 --> 02:04:58,679
modern chip but it is at least a chip do

2478
02:04:57,479 --> 02:05:00,389
you see where the texture units are on

2479
02:04:58,680 --> 02:05:02,340
there right so you see the memory

2480
02:05:00,390 --> 02:05:05,369
controllers and the texture units and

2481
02:05:02,340 --> 02:05:09,810
just look at how much space they take up

2482
02:05:05,369 --> 02:05:13,159
right I mean these are the shading units

2483
02:05:09,810 --> 02:05:18,530
here they're not even like half the dye

2484
02:05:13,159 --> 02:05:21,979
right so the texture unit itself is

2485
02:05:18,529 --> 02:05:25,979
really really substantial footprint

2486
02:05:21,979 --> 02:05:28,949
compared to the ALU Sieben right and so

2487
02:05:25,979 --> 02:05:31,769
you just get the CPU just done this box

2488
02:05:28,949 --> 02:05:35,309
isn't there on a CPU you just don't have

2489
02:05:31,770 --> 02:05:38,430
it right all you've got is this this

2490
02:05:35,310 --> 02:05:40,560
part and so those texture units you know

2491
02:05:38,430 --> 02:05:42,450
they don't put them on GPUs because they

2492
02:05:40,560 --> 02:05:44,220
think it's fun they put it on GPUs

2493
02:05:42,449 --> 02:05:45,449
because the only way to get the kind of

2494
02:05:44,220 --> 02:05:47,880
performance that you get out of modern

2495
02:05:45,449 --> 02:05:49,769
GPUs is to have special purpose hardware

2496
02:05:47,880 --> 02:05:51,869
that does nothing other than take

2497
02:05:49,770 --> 02:05:55,410
bilinear and trilinear samples out of

2498
02:05:51,869 --> 02:05:57,539
textures right because knowing that that

2499
02:05:55,409 --> 02:05:58,920
is what you do and welding that right up

2500
02:05:57,539 --> 02:06:02,250
to the memory controller so that you in

2501
02:05:58,920 --> 02:06:06,119
like as fast as possible get things in

2502
02:06:02,250 --> 02:06:08,640
cache them blend them and output them in

2503
02:06:06,119 --> 02:06:11,609
the color format right do the up convert

2504
02:06:08,640 --> 02:06:15,360
from from 8-bit to float having all that

2505
02:06:11,609 --> 02:06:18,569
like welded right in there is pretty

2506
02:06:15,359 --> 02:06:22,488
important Elvis ass was the piece ps3's

2507
02:06:18,569 --> 02:06:29,359
SPU's good at texture sampling no idea

2508
02:06:22,488 --> 02:06:29,359
never program an s2 you actually

2509
02:06:31,649 --> 02:06:40,569
whoo my assumption is that an SP you

2510
02:06:38,738 --> 02:06:43,479
would be absolutely horrible at texture

2511
02:06:40,569 --> 02:06:45,189
sampling in the real world and the

2512
02:06:43,479 --> 02:06:48,428
reason for that is how do you get a

2513
02:06:45,189 --> 02:06:53,349
sample a texture the ps3s SPU's relies

2514
02:06:48,429 --> 02:06:55,869
on scheduled DMA to fill its local

2515
02:06:53,350 --> 02:07:02,130
buffer it can't do anything from main

2516
02:06:55,869 --> 02:07:05,229
memory so you would have to have a

2517
02:07:02,130 --> 02:07:08,079
really deep texture querying pipeline

2518
02:07:05,229 --> 02:07:13,178
that has scheduled DMA is quite far in

2519
02:07:08,079 --> 02:07:16,869
advance and pull them in and there's not

2520
02:07:13,179 --> 02:07:24,100
that much space it's 20 56k of local

2521
02:07:16,869 --> 02:07:27,460
space I mean you can do it but it's not

2522
02:07:24,100 --> 02:07:30,420
the architecture you want definitely not

2523
02:07:27,460 --> 02:07:30,420
right

2524
02:07:40,569 --> 02:07:45,429
because basically I mean another way to

2525
02:07:42,460 --> 02:07:47,050
say it would be the way that these

2526
02:07:45,430 --> 02:07:49,930
things work on the GPU is they have very

2527
02:07:47,050 --> 02:07:52,180
deep pipelines a shader processor is

2528
02:07:49,930 --> 02:07:56,050
like processing tons and tons of crap

2529
02:07:52,180 --> 02:07:58,960
and it thinks 'yes it needs 30 different

2530
02:07:56,050 --> 02:08:01,029
texture fetches it issues them all those

2531
02:07:58,960 --> 02:08:02,980
processes and more stuff issues more and

2532
02:08:01,029 --> 02:08:06,460
it probably has like a gigantic stack of

2533
02:08:02,979 --> 02:08:08,469
texture fetches all outstanding to a ton

2534
02:08:06,460 --> 02:08:11,199
of texture units and all of those

2535
02:08:08,470 --> 02:08:13,360
textures then come back and then the

2536
02:08:11,199 --> 02:08:14,920
shader processor then pulls them back in

2537
02:08:13,359 --> 02:08:19,239
and starts working on the dependent

2538
02:08:14,920 --> 02:08:21,970
instructions for them right and so an SP

2539
02:08:19,239 --> 02:08:25,479
you just whip with 20 faces que where's

2540
02:08:21,970 --> 02:08:27,190
that depth coming from like it is

2541
02:08:25,479 --> 02:08:31,179
freaking nowhere to be found my friend

2542
02:08:27,189 --> 02:08:33,039
right so I really don't I mean maybe in

2543
02:08:31,180 --> 02:08:35,289
the ps3 days because resolutions were so

2544
02:08:33,039 --> 02:08:39,460
much smaller like 1080p was like pushing

2545
02:08:35,289 --> 02:08:42,010
it right so maybe in those days because

2546
02:08:39,460 --> 02:08:43,569
textures are so much smaller and vertex

2547
02:08:42,010 --> 02:08:46,409
buffers are so much smaller maybe you

2548
02:08:43,569 --> 02:08:50,289
can do something with that but like

2549
02:08:46,409 --> 02:08:52,389
nowadays frickin forget it right and SPU

2550
02:08:50,289 --> 02:08:54,220
is just it does not have the memory

2551
02:08:52,390 --> 02:08:57,340
throughput I'm sorry the memory

2552
02:08:54,220 --> 02:08:59,170
footprint I don't think to do anything

2553
02:08:57,340 --> 02:09:02,380
useful there and it's not really set up

2554
02:08:59,170 --> 02:09:07,000
the way you would want probably that's

2555
02:09:02,380 --> 02:09:10,000
just my guess right SPU's are much

2556
02:09:07,000 --> 02:09:14,199
better at localized memory operations so

2557
02:09:10,000 --> 02:09:17,319
for example vertex transforms right very

2558
02:09:14,199 --> 02:09:19,420
good I can take a in batch and an out

2559
02:09:17,319 --> 02:09:21,159
batch just concentrate on it chew

2560
02:09:19,420 --> 02:09:22,960
through little chunks at a time that's

2561
02:09:21,159 --> 02:09:24,489
what it's optimized for think when you

2562
02:09:22,960 --> 02:09:28,470
think it's when you think digital signal

2563
02:09:24,489 --> 02:09:30,909
processor that's what it is right and

2564
02:09:28,470 --> 02:09:35,220
that's what it was best at scatter

2565
02:09:30,909 --> 02:09:35,220
gather not its thing right

2566
02:09:40,560 --> 02:09:44,580
alright let's go ahead and wrap it up

2567
02:09:50,239 --> 02:09:53,130
Thank You Ana for joining me for another

2568
02:09:52,109 --> 02:09:54,809
episode of hand made here it's my

2569
02:09:53,130 --> 02:09:55,920
pleasure coding with you as always if

2570
02:09:54,810 --> 02:09:56,970
you would like to follow the series at

2571
02:09:55,920 --> 02:09:58,649
home you can always peer to the game on

2572
02:09:56,970 --> 02:10:00,960
handmade hero or comes the source code

2573
02:09:58,649 --> 02:10:03,479
so you can play around with it we've got

2574
02:10:00,960 --> 02:10:04,890
the lighting stuff mostly set up now and

2575
02:10:03,479 --> 02:10:06,269
so we're gonna start playing with that a

2576
02:10:04,890 --> 02:10:07,590
little bit more aggressively next week

2577
02:10:06,270 --> 02:10:09,480
OOP see you back here for that but

2578
02:10:07,590 --> 02:10:12,480
before I get to it maybe now would be a

2579
02:10:09,479 --> 02:10:14,879
good time for you folks out there to

2580
02:10:12,479 --> 02:10:15,750
play around with it and see what you can

2581
02:10:14,880 --> 02:10:17,730
do right

2582
02:10:15,750 --> 02:10:19,590
maybe maybe start putting some little

2583
02:10:17,729 --> 02:10:21,089
local area lights in there and see if

2584
02:10:19,590 --> 02:10:22,560
you can sample them properly who knows

2585
02:10:21,090 --> 02:10:23,699
right you can play around with it it's

2586
02:10:22,560 --> 02:10:25,890
in a good place to play around with

2587
02:10:23,699 --> 02:10:27,119
right now so if you're someone who

2588
02:10:25,890 --> 02:10:30,180
follows along with the source code at

2589
02:10:27,119 --> 02:10:33,470
home I would recommend it see what you

2590
02:10:30,180 --> 02:10:36,030
can do in advance of next week's

2591
02:10:33,470 --> 02:10:38,310
episodes that's about it for today I'll

2592
02:10:36,029 --> 02:10:39,359
be back here next week until then have

2593
02:10:38,310 --> 02:10:39,780
fun programming I'll see everyone on the

2594
02:10:39,359 --> 02:10:42,889
Internet

2595
02:10:39,779 --> 02:10:42,889
Diggy's everybody

