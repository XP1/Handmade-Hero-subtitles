1
00:00:00,500 --> 00:00:06,269
start recording hello everyone and

2
00:00:04,169 --> 00:00:10,230
welcome to handmade Hero the show recode

3
00:00:06,269 --> 00:00:12,869
a complete game live on stream yesterday

4
00:00:10,230 --> 00:00:15,990
we started work on some particle system

5
00:00:12,869 --> 00:00:17,730
stuff that we want to do and we also

6
00:00:15,990 --> 00:00:20,698
uncovered kind of a thing that I wanted

7
00:00:17,730 --> 00:00:22,890
to do with our arena alligators so we

8
00:00:20,699 --> 00:00:23,400
kind of have two things that we could do

9
00:00:22,890 --> 00:00:25,410
right now

10
00:00:23,399 --> 00:00:26,429
since we started the particle systems I

11
00:00:25,410 --> 00:00:28,379
think I'm gonna go ahead and just

12
00:00:26,429 --> 00:00:30,868
continue on since I don't anticipate the

13
00:00:28,379 --> 00:00:33,689
arena stuff being really a problem for

14
00:00:30,868 --> 00:00:35,969
them anymore but then it's kind of I

15
00:00:33,689 --> 00:00:37,349
think we may spend next week doing some

16
00:00:35,969 --> 00:00:38,429
stuff with the memory alligators just

17
00:00:37,350 --> 00:00:39,629
because there's a bunch of things I'd

18
00:00:38,429 --> 00:00:42,299
want to do with them and since we had

19
00:00:39,628 --> 00:00:44,039
found kind of a thing that was I mean it

20
00:00:42,299 --> 00:00:47,419
wasn't really a bug in the alligators it

21
00:00:44,039 --> 00:00:50,009
was a bug you know about using them but

22
00:00:47,420 --> 00:00:52,620
it was a bug that probably wouldn't be

23
00:00:50,009 --> 00:00:55,049
there if we had you know expanded our

24
00:00:52,619 --> 00:00:56,698
arena concept a little bit more and use

25
00:00:55,049 --> 00:01:01,169
it in a more disciplined fashion so that

26
00:00:56,698 --> 00:01:02,579
kind of begs the addition of some some

27
00:01:01,170 --> 00:01:04,500
of those features now rather than later

28
00:01:02,579 --> 00:01:06,329
since we know as soon as you hit a bug

29
00:01:04,500 --> 00:01:07,950
in something that you think could have

30
00:01:06,329 --> 00:01:11,069
been prevented that's a good indication

31
00:01:07,950 --> 00:01:12,719
that you should you know consider

32
00:01:11,069 --> 00:01:16,079
upgrading that system at that point or

33
00:01:12,719 --> 00:01:17,609
you know improving that method of doing

34
00:01:16,079 --> 00:01:20,158
things so it just kind of seemed like

35
00:01:17,609 --> 00:01:21,118
the right time for it that's all so I'm

36
00:01:20,159 --> 00:01:23,640
going to go ahead and continue with the

37
00:01:21,118 --> 00:01:24,688
particle system stuff and then after

38
00:01:23,640 --> 00:01:27,390
we're done with the particle system

39
00:01:24,688 --> 00:01:29,728
stuff I'd like to switch back to the

40
00:01:27,390 --> 00:01:32,099
arena's stuff and that's probably what

41
00:01:29,728 --> 00:01:36,269
the way will shape up the next two weeks

42
00:01:32,099 --> 00:01:37,259
or so all right so protocol welp I'm

43
00:01:36,269 --> 00:01:38,429
more than two weeks is we could easily

44
00:01:37,259 --> 00:01:39,509
spend more than a week on particle

45
00:01:38,430 --> 00:01:42,810
systems rayne there's a lot to do there

46
00:01:39,509 --> 00:01:44,040
in terms of TWiki things so yeah I know

47
00:01:42,810 --> 00:01:47,100
I say two weeks that'll be our next

48
00:01:44,040 --> 00:01:49,710
couple weeks that should easily be stuff

49
00:01:47,099 --> 00:01:52,109
that we can kind of focus on and have a

50
00:01:49,709 --> 00:01:55,919
little bit of a party on uh so yeah

51
00:01:52,109 --> 00:02:02,968
today I believe is 337 am i right about

52
00:01:55,920 --> 00:02:04,680
this midlow yep so today is day 337 so

53
00:02:02,968 --> 00:02:05,609
you want to start with day 336 of source

54
00:02:04,680 --> 00:02:06,840
code if you're gonna be coding along

55
00:02:05,609 --> 00:02:08,280
with me we are gonna be doing a bunch of

56
00:02:06,840 --> 00:02:10,920
programming today there's not really a

57
00:02:08,280 --> 00:02:12,209
lot of concepts to talk about that we

58
00:02:10,919 --> 00:02:13,530
haven't already talked about with

59
00:02:12,209 --> 00:02:15,270
particle systems

60
00:02:13,530 --> 00:02:17,340
so what I'm going to do is I'm gonna go

61
00:02:15,270 --> 00:02:22,140
ahead and press a little bit further

62
00:02:17,340 --> 00:02:25,349
past what we did yesterday so if you

63
00:02:22,139 --> 00:02:28,169
take a look at what we did yesterday we

64
00:02:25,349 --> 00:02:31,879
essentially added a system that can keep

65
00:02:28,169 --> 00:02:34,589
particle systems around cached that are

66
00:02:31,879 --> 00:02:39,120
tied to entities basically is what's

67
00:02:34,590 --> 00:02:50,900
happening so if I want to what I can do

68
00:02:39,120 --> 00:02:54,930
is and where is my my yeah if I want to

69
00:02:50,900 --> 00:02:58,500
I can have any entity essentially have a

70
00:02:54,930 --> 00:03:00,780
particle system attached to it now and

71
00:02:58,500 --> 00:03:02,819
when that entity is in the active region

72
00:03:00,780 --> 00:03:05,729
that particle system will itself become

73
00:03:02,819 --> 00:03:07,049
active and when it is outside of that it

74
00:03:05,729 --> 00:03:09,479
can get replaced in the cache by

75
00:03:07,050 --> 00:03:12,960
something else and then it kind of gets

76
00:03:09,479 --> 00:03:14,189
jettisoned so what we need to do here is

77
00:03:12,960 --> 00:03:15,599
we need to start expanding on the

78
00:03:14,189 --> 00:03:16,889
concept of what these particle systems

79
00:03:15,599 --> 00:03:19,079
are and what they can do we need to

80
00:03:16,889 --> 00:03:21,750
actually create for example a

81
00:03:19,080 --> 00:03:23,730
specification for a particle system that

82
00:03:21,750 --> 00:03:26,340
could make something that we want it to

83
00:03:23,729 --> 00:03:27,689
make who knows so we kind of just have

84
00:03:26,340 --> 00:03:29,819
to start thinking about like in

85
00:03:27,689 --> 00:03:32,039
experimenting to sort of say let's make

86
00:03:29,819 --> 00:03:34,019
some particle systems that might be of

87
00:03:32,039 --> 00:03:37,319
the kind we would want to see in the

88
00:03:34,020 --> 00:03:38,939
actual game you know who knows and then

89
00:03:37,319 --> 00:03:45,719
sort of go from there now I don't know

90
00:03:38,939 --> 00:03:48,270
if we actually have anything in our in

91
00:03:45,719 --> 00:03:50,490
our in our sort of pack that has to do

92
00:03:48,270 --> 00:03:52,620
with these it occurs to me that I never

93
00:03:50,490 --> 00:03:54,990
really thought to make something that

94
00:03:52,620 --> 00:03:56,490
inspects one of these HHA files so we

95
00:03:54,990 --> 00:04:00,840
don't really even know like I don't even

96
00:03:56,490 --> 00:04:03,659
remember what we put in there I I really

97
00:04:00,840 --> 00:04:05,310
just don't so I know we've kind of got

98
00:04:03,659 --> 00:04:07,199
some of this stuff in here that we were

99
00:04:05,310 --> 00:04:10,319
using before I don't remember if we ever

100
00:04:07,199 --> 00:04:12,119
did a actual particle of some kind I

101
00:04:10,319 --> 00:04:15,239
felt like maybe we did but I think we

102
00:04:12,120 --> 00:04:17,639
just used the hero's head for particles

103
00:04:15,240 --> 00:04:20,189
in a lot of cases as well so I don't

104
00:04:17,639 --> 00:04:22,800
really know and so what I probably say

105
00:04:20,189 --> 00:04:26,459
is you know I might just have it create

106
00:04:22,800 --> 00:04:27,430
a bitmap we can use or something like

107
00:04:26,459 --> 00:04:29,109
the

108
00:04:27,430 --> 00:04:31,090
because I don't really know if we've got

109
00:04:29,110 --> 00:04:33,939
anything in here and I don't remember if

110
00:04:31,089 --> 00:04:37,149
we put anything in the hhas that would

111
00:04:33,939 --> 00:04:39,069
be related right I don't know if there's

112
00:04:37,149 --> 00:04:40,598
anything in the intro or @hh aI don't

113
00:04:39,069 --> 00:04:42,069
think there probably is because it was

114
00:04:40,598 --> 00:04:44,199
probably just intro I don't think I put

115
00:04:42,069 --> 00:04:47,020
any game assets in there anyway

116
00:04:44,199 --> 00:04:49,389
so I think our hhas here don't really

117
00:04:47,019 --> 00:04:53,829
have anything for us that we can use

118
00:04:49,389 --> 00:04:56,639
anyway so excuse me

119
00:04:53,829 --> 00:04:58,719
what I need to do now is I need to start

120
00:04:56,639 --> 00:05:03,218
getting these particle systems going and

121
00:04:58,720 --> 00:05:04,419
I need some kind of a bitmap to use for

122
00:05:03,218 --> 00:05:05,500
the particles and that sort of stuff

123
00:05:04,418 --> 00:05:08,109
right so I need to kind of get that

124
00:05:05,500 --> 00:05:10,449
going all right so let's take a look at

125
00:05:08,110 --> 00:05:11,860
this here let's say that I just want to

126
00:05:10,449 --> 00:05:13,329
do something similar to our existing

127
00:05:11,860 --> 00:05:15,699
particle system because we already raped

128
00:05:13,329 --> 00:05:17,948
wrote some code right that was for an

129
00:05:15,699 --> 00:05:22,110
existing particle system and that

130
00:05:17,949 --> 00:05:24,639
protocol system that's not what I wanted

131
00:05:22,110 --> 00:05:29,979
was just a thing that like spewed little

132
00:05:24,639 --> 00:05:31,990
hero heads kind of out of like of a

133
00:05:29,978 --> 00:05:33,189
known location right so I believe this

134
00:05:31,990 --> 00:05:35,439
was the code that we use for our

135
00:05:33,189 --> 00:05:36,519
particle system right here so what I

136
00:05:35,439 --> 00:05:37,899
want to do is I want to come and

137
00:05:36,519 --> 00:05:39,278
describe this particle system and say

138
00:05:37,899 --> 00:05:42,818
well let's go ahead and just get this

139
00:05:39,278 --> 00:05:46,569
particle system working as an example

140
00:05:42,819 --> 00:05:48,158
inside our particle system here and you

141
00:05:46,569 --> 00:05:50,949
know maybe that'll give us some insight

142
00:05:48,158 --> 00:05:53,139
into what we would want to do so I don't

143
00:05:50,949 --> 00:05:54,460
really know what we would call this but

144
00:05:53,139 --> 00:05:55,509
doesn't really matter like I said I'm

145
00:05:54,459 --> 00:05:57,149
just gonna start working with it a

146
00:05:55,509 --> 00:05:59,199
little bit and just kind of get it to

147
00:05:57,149 --> 00:06:01,508
the point where it's something that we

148
00:05:59,199 --> 00:06:04,598
could run and we won't really think too

149
00:06:01,509 --> 00:06:10,569
hard about anything else so I guess we

150
00:06:04,598 --> 00:06:12,848
don't need that either so here's kind of

151
00:06:10,569 --> 00:06:14,020
the the outlines of what we did back in

152
00:06:12,848 --> 00:06:15,610
those days if you don't remember this

153
00:06:14,019 --> 00:06:17,918
now would be a good time to go catch up

154
00:06:15,610 --> 00:06:19,060
on those old episodes about the particle

155
00:06:17,918 --> 00:06:22,418
system there were only two of them

156
00:06:19,060 --> 00:06:23,829
shouldn't take very long so the particle

157
00:06:22,418 --> 00:06:25,508
spawn index was just a thing that's

158
00:06:23,829 --> 00:06:27,038
saying hey let's create some new

159
00:06:25,509 --> 00:06:29,710
particles here and you can see what we

160
00:06:27,038 --> 00:06:30,908
had for particles and you know maybe

161
00:06:29,709 --> 00:06:32,528
this is a good guide for what we should

162
00:06:30,908 --> 00:06:34,028
story we had a position for each

163
00:06:32,528 --> 00:06:35,439
particle we had a velocity for each

164
00:06:34,028 --> 00:06:40,009
particle at acceleration for each

165
00:06:35,439 --> 00:06:41,689
particle and then we had a color and a

166
00:06:40,009 --> 00:06:46,038
you know essentially a delta on that

167
00:06:41,689 --> 00:06:47,569
color right and one of the things that

168
00:06:46,038 --> 00:06:49,848
we were doing was we were spraying

169
00:06:47,569 --> 00:06:53,689
nothing's I think in honor of Shawn

170
00:06:49,848 --> 00:06:57,408
Barrett and his libraries at some point

171
00:06:53,689 --> 00:07:00,199
this obviously is not you know no this

172
00:06:57,408 --> 00:07:02,598
is relevant to this stuff but you know

173
00:07:00,199 --> 00:07:04,460
we need at least that part so there's a

174
00:07:02,598 --> 00:07:06,498
bitmap ID it was using the head bitmap

175
00:07:04,459 --> 00:07:08,899
ID and each particle I guess had its own

176
00:07:06,499 --> 00:07:11,838
bitmap ID I don't think we will probably

177
00:07:08,899 --> 00:07:15,639
want to do it that way in terms of using

178
00:07:11,838 --> 00:07:18,259
bitmap IDs like that because just

179
00:07:15,639 --> 00:07:20,809
there's there's some kind of complexity

180
00:07:18,259 --> 00:07:22,098
there I'll just quickly give you a

181
00:07:20,809 --> 00:07:24,460
little bit of a sketch of why we

182
00:07:22,098 --> 00:07:26,300
probably don't really want to do that

183
00:07:24,459 --> 00:07:37,549
and we wanna do things slightly

184
00:07:26,300 --> 00:07:44,088
differently so let's say that we want

185
00:07:37,550 --> 00:07:47,959
these to be rather efficient so what

186
00:07:44,088 --> 00:07:49,668
generally happens is that we want to

187
00:07:47,959 --> 00:07:50,930
render all of our particles you know

188
00:07:49,668 --> 00:07:52,609
when we're talking about having a large

189
00:07:50,930 --> 00:07:55,098
number of things so for example we use

190
00:07:52,610 --> 00:07:56,899
the number 4096 kind of arbitrarily but

191
00:07:55,098 --> 00:07:59,240
you know if you think about how many

192
00:07:56,899 --> 00:08:02,088
that is right now a single particle

193
00:07:59,240 --> 00:08:04,249
system if it actually had 4096 particles

194
00:08:02,088 --> 00:08:06,709
would have more more actual sprites in

195
00:08:04,249 --> 00:08:11,449
it than anything else in the game

196
00:08:06,709 --> 00:08:14,538
combined right so like on the screen

197
00:08:11,449 --> 00:08:18,709
right now there aren't even 4096 things

198
00:08:14,538 --> 00:08:20,838
and what that means is that when we go

199
00:08:18,709 --> 00:08:23,149
to render these these are going to be

200
00:08:20,838 --> 00:08:26,990
the most expensive things to render in

201
00:08:23,149 --> 00:08:30,379
terms of getting Roth data throughput to

202
00:08:26,990 --> 00:08:33,430
the card for like positions and stuff

203
00:08:30,379 --> 00:08:37,069
like this positioning color and whatnot

204
00:08:33,429 --> 00:08:39,948
so if you take a look at what this means

205
00:08:37,068 --> 00:08:42,110
this 4096 number it means that we don't

206
00:08:39,948 --> 00:08:44,778
want to be doing anything per particle

207
00:08:42,110 --> 00:08:48,500
right we don't want to call the graphics

208
00:08:44,778 --> 00:08:50,870
card one time to do something for each

209
00:08:48,500 --> 00:08:52,100
of these right because if we have a fair

210
00:08:50,870 --> 00:08:53,509
number of particles distance on the

211
00:08:52,100 --> 00:08:53,840
screen and each one of the last 4,000

212
00:08:53,509 --> 00:08:55,399
nice

213
00:08:53,840 --> 00:08:57,290
particle just like that it's quickly

214
00:08:55,399 --> 00:08:59,059
going to add up to way too many

215
00:08:57,289 --> 00:09:01,819
interactions with the graphics driver

216
00:08:59,059 --> 00:09:03,229
and way too much overhead so one of the

217
00:09:01,820 --> 00:09:04,790
things that can create that overhead

218
00:09:03,230 --> 00:09:06,830
depending on the circumstance and there

219
00:09:04,789 --> 00:09:09,139
are cases with by endless graphics API

220
00:09:06,830 --> 00:09:11,180
is and stuff like this where there are

221
00:09:09,139 --> 00:09:12,409
cards that don't have these limitations

222
00:09:11,179 --> 00:09:16,429
or drivers that don't have these

223
00:09:12,409 --> 00:09:18,789
limitations but in a lot of cases

224
00:09:16,429 --> 00:09:22,309
especially on older hardware or on

225
00:09:18,789 --> 00:09:23,990
Hardware that might not be like you know

226
00:09:22,309 --> 00:09:28,909
quite so gaming dedicated like maybe

227
00:09:23,990 --> 00:09:36,860
mobile graphics who knows typically

228
00:09:28,909 --> 00:09:39,819
changing the texture is bad so a lot of

229
00:09:36,860 --> 00:09:42,110
times you don't want to have to change

230
00:09:39,820 --> 00:09:46,280
what that remember we kind of like with

231
00:09:42,110 --> 00:09:49,370
OpenGL we would say like GL you know

232
00:09:46,279 --> 00:09:51,409
we'd have like this text image 2d and we

233
00:09:49,370 --> 00:09:52,879
would say like GL buying texture right

234
00:09:51,409 --> 00:09:55,370
and we would say here's the texture that

235
00:09:52,879 --> 00:09:58,759
we're going to be using for drawing well

236
00:09:55,370 --> 00:10:02,240
doing that bind it costs that is a cost

237
00:09:58,759 --> 00:10:04,580
and so having to do that manual binding

238
00:10:02,240 --> 00:10:06,379
is not really acceptable because it

239
00:10:04,580 --> 00:10:08,720
creates way too much driver interaction

240
00:10:06,379 --> 00:10:11,600
and potentially way too much card action

241
00:10:08,720 --> 00:10:13,220
as well depending on the card and so

242
00:10:11,600 --> 00:10:17,300
what we would rather do is have a way of

243
00:10:13,220 --> 00:10:20,149
having all 4096 of our particles just

244
00:10:17,299 --> 00:10:21,620
all in a nice big buffer right where we

245
00:10:20,149 --> 00:10:23,539
can just point the graphics card at it

246
00:10:21,620 --> 00:10:25,399
and say hey we're just going to set up

247
00:10:23,539 --> 00:10:28,329
your state once and then we I want you

248
00:10:25,399 --> 00:10:32,000
to process all of these particles right

249
00:10:28,330 --> 00:10:33,920
so what that means is that we don't want

250
00:10:32,000 --> 00:10:35,779
to have to change particles for each

251
00:10:33,919 --> 00:10:37,219
change textures for each particle

252
00:10:35,779 --> 00:10:38,480
because if we did that we would have to

253
00:10:37,220 --> 00:10:39,379
talk to the driver Gannett and again

254
00:10:38,480 --> 00:10:41,779
create more and more bus traffic

255
00:10:39,379 --> 00:10:45,139
possibly more card operations and so on

256
00:10:41,779 --> 00:10:47,029
so best-case scenario for us if we did

257
00:10:45,139 --> 00:10:48,860
want to change textures like actually

258
00:10:47,029 --> 00:10:50,569
change textures for protocol well what

259
00:10:48,860 --> 00:10:52,909
we would do is say like okay so there's

260
00:10:50,570 --> 00:10:55,040
the position you know of the texture the

261
00:10:52,909 --> 00:10:56,659
particle for each particle there's like

262
00:10:55,039 --> 00:10:58,819
a position and a color position color

263
00:10:56,659 --> 00:11:00,949
and so on and then we'd put a texture

264
00:10:58,820 --> 00:11:02,990
pointer here right an actual card

265
00:11:00,950 --> 00:11:06,050
texture pointer here and that actually

266
00:11:02,990 --> 00:11:07,519
is possible on some higher-end cards

267
00:11:06,049 --> 00:11:10,339
right so you

268
00:11:07,519 --> 00:11:14,840
is actually possible to include what

269
00:11:10,340 --> 00:11:16,250
texture you're using as part of a buffer

270
00:11:14,840 --> 00:11:18,350
that you hand to the graphics card and

271
00:11:16,250 --> 00:11:21,309
say hey here's the position and the

272
00:11:18,350 --> 00:11:24,290
color and the texture pointer of each

273
00:11:21,309 --> 00:11:25,909
particle as you render and have that all

274
00:11:24,289 --> 00:11:29,599
be done in one big batch that is

275
00:11:25,909 --> 00:11:32,179
possible but it is not very widely

276
00:11:29,600 --> 00:11:33,710
supported at least you know not if

277
00:11:32,179 --> 00:11:37,069
you're talking about you know hardware

278
00:11:33,710 --> 00:11:38,360
from 2-4 years ago whatever or even some

279
00:11:37,070 --> 00:11:42,020
hardware from today that's not you know

280
00:11:38,360 --> 00:11:43,340
high-end or whatever so instead what

281
00:11:42,019 --> 00:11:46,189
there are is there are other techniques

282
00:11:43,340 --> 00:11:48,080
that kind of approximate this so if you

283
00:11:46,190 --> 00:11:49,280
do like you know what one solution to

284
00:11:48,080 --> 00:11:50,900
this that's very simple right you just

285
00:11:49,279 --> 00:11:53,539
say well you only get one texture per

286
00:11:50,899 --> 00:11:55,819
part per particle system so you know if

287
00:11:53,539 --> 00:11:57,409
this particle system all the things have

288
00:11:55,820 --> 00:11:58,370
to be little spheres or all the things

289
00:11:57,409 --> 00:12:00,110
have to be little stars or whatever

290
00:11:58,370 --> 00:12:02,299
right so that's one solution we

291
00:12:00,110 --> 00:12:03,950
certainly could go with is saying well

292
00:12:02,299 --> 00:12:06,649
okay we just pick one texture and we

293
00:12:03,950 --> 00:12:08,840
stated that texture right but there are

294
00:12:06,649 --> 00:12:10,909
actually other alternatives that are

295
00:12:08,840 --> 00:12:13,940
sort of similar to this that we could

296
00:12:10,909 --> 00:12:16,429
use that don't involve that kind of

297
00:12:13,940 --> 00:12:18,470
limitation so we could have different

298
00:12:16,429 --> 00:12:22,279
particles in the same particle system

299
00:12:18,470 --> 00:12:23,330
using different textures which I'm not

300
00:12:22,279 --> 00:12:25,250
even saying we need that but I'm just

301
00:12:23,330 --> 00:12:27,080
pointing out that it can be done and the

302
00:12:25,250 --> 00:12:29,269
way that we do that is instead of trying

303
00:12:27,080 --> 00:12:31,850
to switch the actual texture that we're

304
00:12:29,269 --> 00:12:33,559
using what we typically do is find a way

305
00:12:31,850 --> 00:12:35,779
to pack more images into the same

306
00:12:33,559 --> 00:12:37,579
texture so for example one thing you

307
00:12:35,779 --> 00:12:39,589
might do is say well okay if this was my

308
00:12:37,580 --> 00:12:41,900
texture maybe I divided up into four

309
00:12:39,590 --> 00:12:43,670
pieces and I put one particle here I put

310
00:12:41,899 --> 00:12:45,319
another particle here you know I put

311
00:12:43,669 --> 00:12:47,329
another particle here and I put another

312
00:12:45,320 --> 00:12:50,240
particle here so here is my four

313
00:12:47,330 --> 00:12:52,460
particle you know bitmaps and then what

314
00:12:50,240 --> 00:12:55,250
I could do is just in here pass sort of

315
00:12:52,460 --> 00:12:57,139
something that tells the gravis card

316
00:12:55,250 --> 00:12:58,909
what the UV coordinates for the particle

317
00:12:57,139 --> 00:13:01,279
should be and then I just pick one of

318
00:12:58,909 --> 00:13:04,459
them by by picking the the region of the

319
00:13:01,279 --> 00:13:06,079
texture that I want right and this is

320
00:13:04,460 --> 00:13:07,700
similar to like the texture atlas

321
00:13:06,080 --> 00:13:12,800
technique right for example that you

322
00:13:07,700 --> 00:13:14,390
might see talked about where you're

323
00:13:12,799 --> 00:13:16,099
basically just packing sprites into a

324
00:13:14,389 --> 00:13:18,049
single texture so that you don't have to

325
00:13:16,100 --> 00:13:19,190
tell the card to change textures every

326
00:13:18,049 --> 00:13:20,159
time you want to pick a different image

327
00:13:19,190 --> 00:13:24,100
out of it

328
00:13:20,159 --> 00:13:26,289
okay similarly another thing you can do

329
00:13:24,100 --> 00:13:28,690
is a lot of graphics cards now support

330
00:13:26,289 --> 00:13:30,610
the concept of texture arrays and what a

331
00:13:28,690 --> 00:13:32,290
texture array is is it's a single

332
00:13:30,610 --> 00:13:34,360
texture handle that you set up so when

333
00:13:32,289 --> 00:13:36,429
you do a texture handle it's a single

334
00:13:34,360 --> 00:13:38,769
when you set up but then you can

335
00:13:36,429 --> 00:13:42,189
actually pass an index here right

336
00:13:38,769 --> 00:13:44,950
effectively which says which sheet of

337
00:13:42,190 --> 00:13:48,670
like a stack at that address

338
00:13:44,950 --> 00:13:50,500
right you want and so you pack these

339
00:13:48,669 --> 00:13:52,269
guys in there right the square goes in

340
00:13:50,500 --> 00:13:54,220
the back the track right and so then if

341
00:13:52,269 --> 00:13:55,389
I pass index 0 I'm gonna get this one of

342
00:13:54,220 --> 00:13:57,370
X index we want to get this one of the

343
00:13:55,389 --> 00:14:00,399
mixture get that one and that has some

344
00:13:57,370 --> 00:14:02,799
additional advantages over the the Atlas

345
00:14:00,399 --> 00:14:04,708
technique assuming that everything is

346
00:14:02,799 --> 00:14:06,909
going to be the same size like that

347
00:14:04,708 --> 00:14:08,349
because obviously these things have to

348
00:14:06,909 --> 00:14:10,179
all be the same size they're all like

349
00:14:08,350 --> 00:14:11,800
you know one texture that's kind of has

350
00:14:10,179 --> 00:14:15,338
different slices to it's like a 3d

351
00:14:11,799 --> 00:14:16,778
texture almost right and there's some

352
00:14:15,339 --> 00:14:18,339
benefits to that and the benefits are

353
00:14:16,778 --> 00:14:19,990
that you can have better control about

354
00:14:18,339 --> 00:14:22,060
what happens at the edges and during

355
00:14:19,990 --> 00:14:23,289
mapping and things like this because

356
00:14:22,059 --> 00:14:25,299
they think about what happens here as

357
00:14:23,289 --> 00:14:27,849
this texture gets down sampled if you

358
00:14:25,299 --> 00:14:29,740
were to do same it mapping or if you

359
00:14:27,850 --> 00:14:32,759
look at what happens when I cross over

360
00:14:29,740 --> 00:14:35,049
the boundary here well if I wanted to

361
00:14:32,759 --> 00:14:37,088
like make a repeating pattern or

362
00:14:35,049 --> 00:14:38,528
something like this I couldn't really do

363
00:14:37,089 --> 00:14:40,000
it here because as I cross over this

364
00:14:38,528 --> 00:14:43,179
texture boundary I'm gonna see the star

365
00:14:40,000 --> 00:14:44,350
right but in this case I don't have

366
00:14:43,179 --> 00:14:45,909
anything on the other side section right

367
00:14:44,350 --> 00:14:47,528
so I'm free to use this sort of wrapping

368
00:14:45,909 --> 00:14:49,929
and clamping texture modes that I would

369
00:14:47,528 --> 00:14:51,700
normally use and so sometimes that and

370
00:14:49,929 --> 00:14:52,359
plus the mipmapping not filtering them

371
00:14:51,700 --> 00:14:56,589
down together

372
00:14:52,360 --> 00:14:58,870
those things can have you know reasons

373
00:14:56,589 --> 00:15:01,060
why they might be important not I don't

374
00:14:58,870 --> 00:15:03,220
think they will have any relevance on

375
00:15:01,059 --> 00:15:05,049
handmade here for the most part but you

376
00:15:03,220 --> 00:15:06,759
know for certain higher-end applications

377
00:15:05,049 --> 00:15:11,490
that you might be considering these

378
00:15:06,759 --> 00:15:15,789
things have you know potential bonuses

379
00:15:11,490 --> 00:15:17,259
it's a difference between them and of

380
00:15:15,789 --> 00:15:18,610
course the Atlas can do something that

381
00:15:17,259 --> 00:15:20,620
this can't do which is to make each of

382
00:15:18,610 --> 00:15:22,480
these be different sizes right I could

383
00:15:20,620 --> 00:15:23,948
choose to partition my thing quite a bit

384
00:15:22,480 --> 00:15:25,509
differently impact the rectangle down a

385
00:15:23,948 --> 00:15:27,698
small one and you know the circle over

386
00:15:25,509 --> 00:15:29,919
here and whatever so you kind of also

387
00:15:27,698 --> 00:15:32,319
have this notion that a texture Atlas is

388
00:15:29,919 --> 00:15:33,579
a lot more flexible for packing the

389
00:15:32,320 --> 00:15:35,620
things in but

390
00:15:33,580 --> 00:15:39,660
one of these texture arrays is much more

391
00:15:35,620 --> 00:15:41,919
flexible for actually using the textures

392
00:15:39,659 --> 00:15:43,899
at the end of the day because they could

393
00:15:41,919 --> 00:15:45,309
still take advantage of proper

394
00:15:43,899 --> 00:15:48,458
mipmapping that doesn't degrade as you

395
00:15:45,309 --> 00:15:49,838
get lower and then also border modes

396
00:15:48,458 --> 00:15:53,859
which you wouldn't have it available in

397
00:15:49,839 --> 00:15:56,740
the other one which is even that's not

398
00:15:53,860 --> 00:15:58,870
entirely true texture atlases if you are

399
00:15:56,740 --> 00:16:00,549
implementing your own textile fetching

400
00:15:58,870 --> 00:16:02,470
and like a shader for example you can

401
00:16:00,549 --> 00:16:03,819
overcome some of these limitations or

402
00:16:02,470 --> 00:16:05,759
sometimes all of them depending on how

403
00:16:03,820 --> 00:16:08,920
expensive you're willing to make that

404
00:16:05,759 --> 00:16:10,569
texture sampling be but point being this

405
00:16:08,919 --> 00:16:13,120
one is basically free like the card will

406
00:16:10,570 --> 00:16:14,800
just do this right so you know it's a

407
00:16:13,120 --> 00:16:17,259
way to get all of those modes back

408
00:16:14,799 --> 00:16:19,028
pretty much for free without having to

409
00:16:17,259 --> 00:16:21,009
do any kinds of additional math and the

410
00:16:19,028 --> 00:16:25,838
shader to fix up texture coordinates and

411
00:16:21,009 --> 00:16:27,250
pick things differently okay so as far

412
00:16:25,839 --> 00:16:28,540
as particle efficiency is concerned

413
00:16:27,250 --> 00:16:30,549
that's just something we want to be

414
00:16:28,539 --> 00:16:32,019
aware of and probably what I would say

415
00:16:30,549 --> 00:16:33,969
on handmade Hiro makes the most sense

416
00:16:32,019 --> 00:16:39,190
okay so just do something kind of like

417
00:16:33,970 --> 00:16:41,470
the Atlas where we just hoo huge where

418
00:16:39,190 --> 00:16:43,270
you live here where we just want to take

419
00:16:41,470 --> 00:16:46,149
a single texture and put you know the

420
00:16:43,269 --> 00:16:47,439
four bitmaps or whatever ten bitmap 16

421
00:16:46,149 --> 00:16:48,850
bitmaps whatever we want to do for our

422
00:16:47,440 --> 00:16:51,130
product systems just pack them into one

423
00:16:48,850 --> 00:16:53,230
texture I don't think we're gonna have

424
00:16:51,129 --> 00:16:55,120
too many of them and then just use that

425
00:16:53,230 --> 00:16:58,240
one texture by selecting out of it using

426
00:16:55,120 --> 00:16:59,589
some UV coordinates and you know in the

427
00:16:58,240 --> 00:17:02,950
simple case what we'll do is we'll just

428
00:16:59,589 --> 00:17:06,039
actually pass full UV coordinates for

429
00:17:02,950 --> 00:17:08,439
the particles full rectangles and and em

430
00:17:06,039 --> 00:17:10,029
UV coordinates but if we ever get around

431
00:17:08,439 --> 00:17:11,199
to playing with shaders and want to kind

432
00:17:10,029 --> 00:17:13,269
of explore that a little further there's

433
00:17:11,199 --> 00:17:14,949
other things we can do there where we

434
00:17:13,269 --> 00:17:16,629
just pass down something much more

435
00:17:14,949 --> 00:17:18,490
simplified like the center of the

436
00:17:16,630 --> 00:17:21,970
particle and its size and maybe

437
00:17:18,490 --> 00:17:24,279
representers orientation and then just

438
00:17:21,970 --> 00:17:26,410
just an index for which one of these we

439
00:17:24,279 --> 00:17:30,308
want and then we would have one of our

440
00:17:26,410 --> 00:17:35,169
front-end shaders in like the the

441
00:17:30,308 --> 00:17:39,299
geometry shader side of things we would

442
00:17:35,169 --> 00:17:41,309
then have that do sort of this

443
00:17:39,299 --> 00:17:43,569
amplification of that minimal

444
00:17:41,308 --> 00:17:46,329
description of the text of the particle

445
00:17:43,569 --> 00:17:46,689
into the actual UV coordinates you know

446
00:17:46,329 --> 00:17:47,829
take

447
00:17:46,690 --> 00:17:50,110
index implement the actually of course

448
00:17:47,829 --> 00:17:52,750
and so on sort to feed the later stages

449
00:17:50,109 --> 00:17:54,008
of the graphics pipeline so right now

450
00:17:52,750 --> 00:17:57,730
we'll just build it explicitly on the

451
00:17:54,009 --> 00:17:59,500
CPU but you can do more compressed

452
00:17:57,730 --> 00:18:00,819
representations of particles and should

453
00:17:59,500 --> 00:18:03,119
if you're going the shader route because

454
00:18:00,819 --> 00:18:05,829
it you know if you're if you know your o

455
00:18:03,119 --> 00:18:08,829
target Hardware always has stuff like

456
00:18:05,829 --> 00:18:12,778
geometry shaders on it because not all

457
00:18:08,829 --> 00:18:12,778
to do all right

458
00:18:13,440 --> 00:18:22,750
so coming back I think we do want to

459
00:18:19,329 --> 00:18:24,220
sort of leave this as a as an open issue

460
00:18:22,750 --> 00:18:25,298
at the moment and say we'll deal with

461
00:18:24,220 --> 00:18:26,620
that a little bit later because that's

462
00:18:25,298 --> 00:18:28,778
really more on the rendering side of

463
00:18:26,619 --> 00:18:30,548
things so for now what we'll say is you

464
00:18:28,778 --> 00:18:32,079
know the bitmap IDs not something that's

465
00:18:30,548 --> 00:18:34,359
going to be per protocol so we really

466
00:18:32,079 --> 00:18:35,740
want these other things per protocol and

467
00:18:34,359 --> 00:18:37,719
we don't really want to deal with the

468
00:18:35,740 --> 00:18:38,888
other stuff just yet if those are the

469
00:18:37,720 --> 00:18:40,360
things that are going to be per protocol

470
00:18:38,888 --> 00:18:42,369
and we do want to make them be sort of

471
00:18:40,359 --> 00:18:43,959
lined up this way then I think what we

472
00:18:42,369 --> 00:18:46,689
want to do for the particle system is is

473
00:18:43,960 --> 00:18:49,329
again kind of think of this a little bit

474
00:18:46,690 --> 00:18:52,149
sim D wise so to me I kind of feel like

475
00:18:49,329 --> 00:18:55,918
I would probably want to do this as a

476
00:18:52,148 --> 00:18:55,918
Sindhi things where we kind of have

477
00:18:57,058 --> 00:19:01,720
something like this where we kind of say

478
00:18:59,980 --> 00:19:04,480
like okay however many particles we want

479
00:19:01,720 --> 00:19:06,370
in our systems we'll divide them by four

480
00:19:04,480 --> 00:19:09,399
and so that we can kind of keep our

481
00:19:06,369 --> 00:19:11,469
particles in in a nice sim D fashion

482
00:19:09,398 --> 00:19:12,819
right something like this because I do

483
00:19:11,470 --> 00:19:14,350
want to be able to process these things

484
00:19:12,819 --> 00:19:16,119
relatively quickly and we should process

485
00:19:14,349 --> 00:19:17,439
them four at a time and we can always

486
00:19:16,119 --> 00:19:19,479
know that we've got four of them at a

487
00:19:17,440 --> 00:19:21,399
time because again particle systems the

488
00:19:19,480 --> 00:19:25,240
count is very flexible no one's going to

489
00:19:21,398 --> 00:19:26,648
care if we have exactly 63 particles in

490
00:19:25,240 --> 00:19:32,620
a particle system we could always make

491
00:19:26,648 --> 00:19:33,609
it 64 and be fine right so I'm going to

492
00:19:32,619 --> 00:19:36,128
go ahead and actually delete these

493
00:19:33,609 --> 00:19:38,048
because second I want to kind of make

494
00:19:36,128 --> 00:19:39,398
them a little more specific so if I was

495
00:19:38,048 --> 00:19:41,679
to do that you know you could see me

496
00:19:39,398 --> 00:19:44,398
making essentially the variables that we

497
00:19:41,679 --> 00:19:47,019
had in our existing particle system

498
00:19:44,398 --> 00:19:48,339
pretty trivially I don't know that we

499
00:19:47,019 --> 00:19:50,440
actually need them all but let's say

500
00:19:48,339 --> 00:19:51,908
that we did we would have a particle

501
00:19:50,440 --> 00:19:55,769
system that kind of looks like this so

502
00:19:51,909 --> 00:19:55,769
we've got our color

503
00:20:06,119 --> 00:20:10,809
and I guess I don't really know so I

504
00:20:09,400 --> 00:20:13,450
guess what we were doing before is we

505
00:20:10,809 --> 00:20:15,700
just wiped the color out when the we

506
00:20:13,450 --> 00:20:17,650
just we just will respawn a particle oh

507
00:20:15,700 --> 00:20:19,840
we just respond the we spawn particles

508
00:20:17,650 --> 00:20:23,710
in a in a front so that seems fine to

509
00:20:19,839 --> 00:20:26,490
never mind all right so yeah this is

510
00:20:23,710 --> 00:20:26,490
what we had before

511
00:20:28,180 --> 00:20:34,990
and it'd be pretty easy for us to

512
00:20:30,880 --> 00:20:37,330
implement things this way using you know

513
00:20:34,990 --> 00:20:39,579
sort of again the the sim D instructions

514
00:20:37,329 --> 00:20:41,289
and all I'm doing carriage is saying

515
00:20:39,579 --> 00:20:42,909
okay so let's suppose we've got those

516
00:20:41,289 --> 00:20:45,639
things I'm just going to do sort of the

517
00:20:42,910 --> 00:20:47,350
simple version of those so that all of

518
00:20:45,640 --> 00:20:48,670
the operations that we do will operate

519
00:20:47,349 --> 00:20:51,549
in four products at a time that's kind

520
00:20:48,670 --> 00:20:53,410
of annoying you can see why you probably

521
00:20:51,549 --> 00:20:55,149
would want Auto vectorization for these

522
00:20:53,410 --> 00:20:56,230
sorts of things because you can kind of

523
00:20:55,150 --> 00:20:59,080
see that what we're gonna have to do

524
00:20:56,230 --> 00:21:00,910
here is just a lot of unnecessary busy

525
00:20:59,079 --> 00:21:03,819
work when we're actually sort of trying

526
00:21:00,910 --> 00:21:06,700
to work with these things because in

527
00:21:03,819 --> 00:21:09,250
order to deal with things in the sort of

528
00:21:06,700 --> 00:21:10,870
M 128 sense we forgo a lot of things

529
00:21:09,250 --> 00:21:13,539
that would be nicer such as the nice

530
00:21:10,869 --> 00:21:15,369
math notation that we had for the rest

531
00:21:13,539 --> 00:21:17,500
of our sort of math ops and that's

532
00:21:15,369 --> 00:21:19,479
purely just because you know these

533
00:21:17,500 --> 00:21:21,940
languages weren't designed very well to

534
00:21:19,480 --> 00:21:23,440
handle vector AI stops like this so

535
00:21:21,940 --> 00:21:26,440
sometimes you can get away with just not

536
00:21:23,440 --> 00:21:27,789
doing it writing it in scalar and when

537
00:21:26,440 --> 00:21:30,730
you do writing and scalar then you get

538
00:21:27,789 --> 00:21:32,109
the kind of this thing if well maybe the

539
00:21:30,730 --> 00:21:34,750
compiler will vectorize it for me

540
00:21:32,109 --> 00:21:37,359
there's actually ways in LLVM for

541
00:21:34,750 --> 00:21:40,630
example and visual studio to sort of say

542
00:21:37,359 --> 00:21:43,029
hey would you try to take this code that

543
00:21:40,630 --> 00:21:44,020
was not you know four wide and make it

544
00:21:43,029 --> 00:21:46,210
four wide as best you can

545
00:21:44,019 --> 00:21:48,309
you know stuff like that it never really

546
00:21:46,210 --> 00:21:50,500
can you do probably as good as you could

547
00:21:48,309 --> 00:21:52,659
do by hand but somebody's probably good

548
00:21:50,500 --> 00:21:54,339
and I believe that Intel one the Intel

549
00:21:52,660 --> 00:21:56,080
Auto paralysing one was supposed to be

550
00:21:54,339 --> 00:21:57,609
pretty good you could mark up your code

551
00:21:56,079 --> 00:21:59,559
to kind of give it hints about how you

552
00:21:57,609 --> 00:22:00,609
should do stuff and once you did that it

553
00:21:59,559 --> 00:22:03,339
was it was pretty good at generating

554
00:22:00,609 --> 00:22:05,859
what you would want to generate so you

555
00:22:03,339 --> 00:22:07,269
know over time hopefully these sorts of

556
00:22:05,859 --> 00:22:08,079
things will become easier and you won't

557
00:22:07,269 --> 00:22:11,829
have to do them so much

558
00:22:08,079 --> 00:22:27,398
by hand anyway so if that was a particle

559
00:22:11,829 --> 00:22:28,480
system what is this same max oh yes all

560
00:22:27,398 --> 00:22:30,189
right

561
00:22:28,480 --> 00:22:32,140
so what I want to do here is I want to

562
00:22:30,190 --> 00:22:34,840
just start to get this stuff into shape

563
00:22:32,140 --> 00:22:36,490
where you know I'm gonna literally cut

564
00:22:34,839 --> 00:22:38,048
try to just implement exactly the same

565
00:22:36,490 --> 00:22:38,470
particle system that we had in the first

566
00:22:38,048 --> 00:22:41,440
place

567
00:22:38,470 --> 00:22:44,558
and I'll try to get that running so this

568
00:22:41,440 --> 00:22:47,288
is just gonna be like a you know play

569
00:22:44,558 --> 00:22:49,418
around we don't really know what its

570
00:22:47,288 --> 00:22:51,819
gonna do but we do know that it's gonna

571
00:22:49,419 --> 00:22:53,259
be operating on one of these particle

572
00:22:51,819 --> 00:22:54,700
systems so you know we're pretty sure

573
00:22:53,259 --> 00:22:58,450
it's going to be doing something like

574
00:22:54,700 --> 00:23:00,220
this right so we need to do some

575
00:22:58,450 --> 00:23:02,798
spawning obviously the spawning will

576
00:23:00,220 --> 00:23:03,819
make you know what will be exactly what

577
00:23:02,798 --> 00:23:05,740
you expect

578
00:23:03,819 --> 00:23:09,099
we need something in our particle system

579
00:23:05,740 --> 00:23:11,349
here I guess I don't know exactly how we

580
00:23:09,099 --> 00:23:12,939
want to do this but we would want to

581
00:23:11,349 --> 00:23:14,558
have something where we keep track of

582
00:23:12,940 --> 00:23:16,000
this next particle thing because that is

583
00:23:14,558 --> 00:23:21,190
something we want to do and presumably

584
00:23:16,000 --> 00:23:22,778
we want to spawn I guess we would want

585
00:23:21,190 --> 00:23:25,389
to spawn for our particles at a time

586
00:23:22,778 --> 00:23:27,308
since we already had this spawning three

587
00:23:25,388 --> 00:23:28,959
particles of time it seems like spawning

588
00:23:27,308 --> 00:23:32,798
four particles at a time would not be

589
00:23:28,960 --> 00:23:34,750
particularly problematic right but you

590
00:23:32,798 --> 00:23:36,490
know I don't know that may be something

591
00:23:34,750 --> 00:23:38,169
that for certain things is not tenable

592
00:23:36,490 --> 00:23:40,750
because you may not want for a particle

593
00:23:38,169 --> 00:23:43,389
spawned every frame you know that might

594
00:23:40,750 --> 00:23:45,278
just not make very much sense so we may

595
00:23:43,388 --> 00:23:47,979
have to make the spawning of particles

596
00:23:45,278 --> 00:23:51,730
be something that operates individually

597
00:23:47,980 --> 00:23:53,048
doesn't actually use the sim be part as

598
00:23:51,730 --> 00:23:55,450
much but I don't know for now we'll just

599
00:23:53,048 --> 00:23:56,558
keep it spawning it in clumps before

600
00:23:55,450 --> 00:24:00,130
because that will be the most efficient

601
00:23:56,558 --> 00:24:03,579
we'll just see where we get so I'm gonna

602
00:24:00,130 --> 00:24:06,190
say this is like next particle four

603
00:24:03,579 --> 00:24:09,189
because it's actually referencing into

604
00:24:06,190 --> 00:24:11,649
here you know it's it's referencing into

605
00:24:09,190 --> 00:24:13,769
clumps of four as opposed to actually

606
00:24:11,648 --> 00:24:17,138
talking about an absolute particle index

607
00:24:13,769 --> 00:24:19,329
so I'm just kind of sticking a little

608
00:24:17,138 --> 00:24:21,308
it's not a very good convention not a

609
00:24:19,329 --> 00:24:22,000
very rigorous convention but it's just

610
00:24:21,308 --> 00:24:24,250
something to kind of

611
00:24:22,000 --> 00:24:27,038
make me look at it twice from schoo

612
00:24:24,250 --> 00:24:28,720
right that's that's a thing that's not

613
00:24:27,038 --> 00:24:31,089
directly talking about it particle

614
00:24:28,720 --> 00:24:34,929
indexing an absolute sense so if we do

615
00:24:31,089 --> 00:24:37,538
this and say all right let's assume that

616
00:24:34,929 --> 00:24:46,360
we can grab particle out this way we

617
00:24:37,538 --> 00:24:51,089
have our index here and maybe I'll just

618
00:24:46,359 --> 00:24:55,269
call that pi/4 short or a particle index

619
00:24:51,089 --> 00:24:56,709
let's cut away index so in here we're

620
00:24:55,269 --> 00:24:59,519
going to grab out one of these particle

621
00:24:56,710 --> 00:25:01,600
indices and I'm gonna do that by saying

622
00:24:59,519 --> 00:25:03,669
that it's whatever the next particle

623
00:25:01,599 --> 00:25:09,128
four was I then need to check for

624
00:25:03,669 --> 00:25:14,500
wrapping on this one so if it's greater

625
00:25:09,128 --> 00:25:20,230
than max particle count four then we're

626
00:25:14,500 --> 00:25:22,058
going to reset it and in here when we

627
00:25:20,230 --> 00:25:24,639
look at this we don't need the four I

628
00:25:22,058 --> 00:25:26,319
loop anymore potentially at least not at

629
00:25:24,638 --> 00:25:27,548
the moment so I'm gonna get rid of it

630
00:25:26,319 --> 00:25:29,500
because we're spartax wanting four at a

631
00:25:27,548 --> 00:25:32,500
time and that's fine so in here we'll

632
00:25:29,500 --> 00:25:34,960
just say all right once we do know which

633
00:25:32,500 --> 00:25:43,179
one we've got we now have the ability to

634
00:25:34,960 --> 00:25:45,548
sort of reference this slice here and we

635
00:25:43,179 --> 00:25:48,100
just need to set all these guys up right

636
00:25:45,548 --> 00:25:51,158
so I'm not sure if there's a smarter way

637
00:25:48,099 --> 00:25:53,019
to really structure this I'd have to

638
00:25:51,159 --> 00:25:54,879
think about that in a way that makes it

639
00:25:53,019 --> 00:25:58,028
easier for us to talk about one of these

640
00:25:54,878 --> 00:25:59,678
guys directly you know you can kind of

641
00:25:58,028 --> 00:26:02,138
imagine we sort of want to talk about

642
00:25:59,679 --> 00:26:04,929
the pxpypz and all that sort of stuff we

643
00:26:02,138 --> 00:26:07,058
don't want to have to keep doing lots of

644
00:26:04,929 --> 00:26:09,429
different sub addressing so it's a

645
00:26:07,058 --> 00:26:11,099
little bit janky again so I apologize a

646
00:26:09,429 --> 00:26:12,820
lot to think through whether or a

647
00:26:11,099 --> 00:26:15,308
convention that I would like to use

648
00:26:12,819 --> 00:26:18,099
that'd be better here but you know

649
00:26:15,308 --> 00:26:20,528
essentially this is what we're doing so

650
00:26:18,099 --> 00:26:23,069
you know before we were doing this this

651
00:26:20,528 --> 00:26:23,069
sort of thing

652
00:26:24,220 --> 00:26:27,339
and so I'm just gonna do that thing

653
00:26:25,720 --> 00:26:30,970
again exactly what we're doing with it

654
00:26:27,339 --> 00:26:33,129
there and the particle system entropy I

655
00:26:30,970 --> 00:26:35,370
feel that could be also stored with the

656
00:26:33,130 --> 00:26:40,660
particle I don't feel like we need to

657
00:26:35,369 --> 00:26:42,819
have any kind of anything special going

658
00:26:40,660 --> 00:26:45,009
on there so we could have a random

659
00:26:42,819 --> 00:26:47,500
series here which is just the entropy

660
00:26:45,009 --> 00:26:49,359
for this particle system and we could

661
00:26:47,500 --> 00:26:51,490
coalesce that in fact you know what I

662
00:26:49,359 --> 00:26:56,919
guess we could do is just say hey why

663
00:26:51,490 --> 00:26:58,960
don't we just pass that in so there's a

664
00:26:56,920 --> 00:27:00,820
random series that we'd get that's the

665
00:26:58,960 --> 00:27:02,319
entropy for this guy and that's all good

666
00:27:00,819 --> 00:27:13,000
in fact I could actually just do it this

667
00:27:02,319 --> 00:27:19,119
way and then will that kind of would

668
00:27:13,000 --> 00:27:20,529
advance it will do and then I just need

669
00:27:19,119 --> 00:27:22,919
to do the rest of these guys a sec let's

670
00:27:20,529 --> 00:27:22,920
save mine

671
00:27:32,398 --> 00:27:36,219
nothing going on here particularly

672
00:27:34,808 --> 00:27:38,798
interesting I literally just sort of

673
00:27:36,220 --> 00:27:42,548
translating this into something that's a

674
00:27:38,798 --> 00:27:44,168
little bit more sim de Sh and I'm

675
00:27:42,548 --> 00:27:47,220
keeping all of the same values we had

676
00:27:44,169 --> 00:27:47,220
before because why not

677
00:27:52,400 --> 00:27:57,820
wait a minute he says

678
00:28:01,890 --> 00:28:06,030
so this random between was actually

679
00:28:04,740 --> 00:28:07,558
seven times okay that was almost a

680
00:28:06,029 --> 00:28:08,389
copypasta there it's like wait a minute

681
00:28:07,558 --> 00:28:10,678
what did I do

682
00:28:08,390 --> 00:28:15,140
there we go that's the actual one

683
00:28:10,679 --> 00:28:17,250
there's two ran in between and go see

684
00:28:15,140 --> 00:28:22,799
all right so that's what we're doing

685
00:28:17,250 --> 00:28:27,329
with that and so now we kind of have

686
00:28:22,798 --> 00:28:30,720
this this sort of additional nastiness I

687
00:28:27,329 --> 00:28:32,849
guess is that each of these is trying to

688
00:28:30,720 --> 00:28:34,710
do four particles at a time and this is

689
00:28:32,849 --> 00:28:37,980
only generating one piece of entropy so

690
00:28:34,710 --> 00:28:40,860
we actually need to call this four times

691
00:28:37,980 --> 00:28:43,529
one for each particle piece right so

692
00:28:40,859 --> 00:28:48,178
these are actually like you know mm set

693
00:28:43,529 --> 00:28:56,089
PS not set one yeah these are actually

694
00:28:48,179 --> 00:28:59,429
sort of ones where we have to do this

695
00:28:56,089 --> 00:29:01,409
right again not particularly pretty we

696
00:28:59,429 --> 00:29:05,610
would rather have a way of writing this

697
00:29:01,410 --> 00:29:06,720
a little cleaner so you know I think

698
00:29:05,609 --> 00:29:13,109
what I would probably do at this point

699
00:29:06,720 --> 00:29:16,579
is say you know maybe like mm set to

700
00:29:13,109 --> 00:29:19,259
expression or something like this and

701
00:29:16,579 --> 00:29:21,298
have a way of passing that expression in

702
00:29:19,259 --> 00:29:26,849
there and then just replicating the

703
00:29:21,298 --> 00:29:28,319
actual expression because that seems a

704
00:29:26,849 --> 00:29:30,000
little bit easier than trying to keep

705
00:29:28,319 --> 00:29:33,089
popping these so that way I can say like

706
00:29:30,000 --> 00:29:36,808
mm you know maybe I'll you make it even

707
00:29:33,089 --> 00:29:38,399
shorter so they're you know I'm gonna

708
00:29:36,808 --> 00:29:39,539
say okay here's the name of expression

709
00:29:38,400 --> 00:29:40,740
instead of having to reflect get that

710
00:29:39,539 --> 00:29:43,889
four times I'll just say you know do

711
00:29:40,740 --> 00:29:47,329
that four times for me right and the

712
00:29:43,890 --> 00:29:47,330
same would be true for all of these

713
00:29:49,220 --> 00:29:53,808
should probably indicate at least that

714
00:29:51,359 --> 00:29:53,808
it's set

715
00:29:56,048 --> 00:29:58,480
and that seems a little bit better

716
00:29:57,279 --> 00:30:00,039
because then I can just sort of wrap

717
00:29:58,480 --> 00:30:01,808
these and that we're already kind of

718
00:30:00,039 --> 00:30:03,519
verbose here and so this way that keeps

719
00:30:01,808 --> 00:30:05,920
down that sort of unnecessary

720
00:30:03,519 --> 00:30:07,240
duplication which would just be a pain

721
00:30:05,920 --> 00:30:08,410
in the butt to maintain because you know

722
00:30:07,240 --> 00:30:09,849
I'm gonna come back through here and

723
00:30:08,410 --> 00:30:11,110
decide to make changes I might have to

724
00:30:09,849 --> 00:30:13,389
make it four times and that's just

725
00:30:11,109 --> 00:30:18,298
annoying right

726
00:30:13,390 --> 00:30:18,299
so yeah so finally we want to set that

727
00:30:18,630 --> 00:30:24,790
acceleration as well and again this is

728
00:30:22,929 --> 00:30:27,390
pretty straightforward not a lot going

729
00:30:24,789 --> 00:30:27,389
on here

730
00:30:38,919 --> 00:30:50,590
so those are the accelerations and now

731
00:30:43,569 --> 00:31:05,470
we just have the colors what did I do

732
00:30:50,589 --> 00:31:10,470
this this or CR a and the CIE RGB a here

733
00:31:05,470 --> 00:31:10,470
is just again another randomization

734
00:31:22,710 --> 00:31:38,700
and yeah these also get wrapped and they

735
00:31:29,470 --> 00:31:42,120
should work I hope he says confidently

736
00:31:38,700 --> 00:31:45,159
unaware of what was about to befall him

737
00:31:42,119 --> 00:31:46,689
and last but not least we've got that

738
00:31:45,159 --> 00:31:58,510
Delta color which looks like the

739
00:31:46,690 --> 00:32:00,548
simplest of them all which is basically

740
00:31:58,509 --> 00:32:05,339
all sets to zero except for the Alpha

741
00:32:00,548 --> 00:32:07,950
value which decrements so in theory I

742
00:32:05,339 --> 00:32:10,000
think that should do it

743
00:32:07,950 --> 00:32:13,690
obviously we've got to replace these

744
00:32:10,000 --> 00:32:16,019
effects entropy x' here with regular n

745
00:32:13,690 --> 00:32:16,019
trapeze

746
00:32:21,970 --> 00:32:28,899
yeah that's about it so yeah now we've

747
00:32:26,169 --> 00:32:32,288
got sort of our Lagrangian or Larian

748
00:32:28,898 --> 00:32:35,138
situations here and for these you know

749
00:32:32,288 --> 00:32:37,480
again we can still have these if we want

750
00:32:35,138 --> 00:32:42,369
them because since each particle system

751
00:32:37,480 --> 00:32:46,450
is sort of a self-contained thing we can

752
00:32:42,369 --> 00:32:51,638
definitely do sort of the the particle

753
00:32:46,450 --> 00:32:53,470
to Grid situation the problem is it will

754
00:32:51,638 --> 00:32:56,709
definitely be a bit of a Down shift for

755
00:32:53,470 --> 00:32:59,470
us because in order to do that kind of

756
00:32:56,710 --> 00:33:02,590
thing we are forced to downshift every

757
00:32:59,470 --> 00:33:04,450
time on each batch of particles because

758
00:33:02,589 --> 00:33:08,428
there wouldn't really be any way for us

759
00:33:04,450 --> 00:33:10,870
to have the particles right into a grid

760
00:33:08,429 --> 00:33:13,028
without picking out individual pieces

761
00:33:10,869 --> 00:33:15,939
because their location in the grid will

762
00:33:13,028 --> 00:33:17,829
depend on their XY coordinates and of

763
00:33:15,940 --> 00:33:20,080
course their XY coordinates are all

764
00:33:17,829 --> 00:33:22,569
going to be different in each batch so

765
00:33:20,079 --> 00:33:24,699
for example this stuff right here where

766
00:33:22,569 --> 00:33:27,069
we pull out the XY and we put it in the

767
00:33:24,700 --> 00:33:29,980
grid like so that's really not going to

768
00:33:27,069 --> 00:33:34,028
cut it in turn there's no way to do that

769
00:33:29,980 --> 00:33:44,528
for Y in sse2 right you just can't do it

770
00:33:34,028 --> 00:33:48,250
oh I wish you could but you can later on

771
00:33:44,528 --> 00:33:50,169
this is why a VX 512 if I remember

772
00:33:48,250 --> 00:33:52,839
correctly was such a big deal and I was

773
00:33:50,169 --> 00:33:55,750
hoping we would get it in desktop chips

774
00:33:52,839 --> 00:33:57,699
was and you know we will it's just

775
00:33:55,750 --> 00:33:59,019
taking a really long time to actually

776
00:33:57,700 --> 00:34:00,970
get any kind of installed based on that

777
00:33:59,019 --> 00:34:03,970
because it was only in Zeon's and you

778
00:34:00,970 --> 00:34:05,950
know blah blah but the avx-512 s were

779
00:34:03,970 --> 00:34:07,360
really nice because that instruction set

780
00:34:05,950 --> 00:34:09,550
for the first time I believe had the

781
00:34:07,359 --> 00:34:12,578
parallel gather so you could basically

782
00:34:09,550 --> 00:34:14,318
say like okay you know do this memory

783
00:34:12,579 --> 00:34:18,550
fetch like you could go get particle

784
00:34:14,318 --> 00:34:21,519
cells or whatever for for things for

785
00:34:18,550 --> 00:34:23,050
wide right so that way you didn't

786
00:34:21,519 --> 00:34:24,668
constantly have this thing where you had

787
00:34:23,050 --> 00:34:27,068
to like downshift every time you were

788
00:34:24,668 --> 00:34:29,318
going to work on something that happened

789
00:34:27,068 --> 00:34:31,750
to sort of look up into you know a

790
00:34:29,318 --> 00:34:35,019
texture or a grid or whatever and so and

791
00:34:31,750 --> 00:34:35,418
where each Lane was going to want a

792
00:34:35,019 --> 00:34:38,059
different

793
00:34:35,418 --> 00:34:39,440
ocation there's no real reason why that

794
00:34:38,059 --> 00:34:41,720
has to downshift right because you can

795
00:34:39,440 --> 00:34:43,818
always do your memory ops for a wide

796
00:34:41,719 --> 00:34:46,428
it's just the Intel circus that didn't

797
00:34:43,818 --> 00:34:49,429
have four wide memory opposite or

798
00:34:46,429 --> 00:35:00,190
anything like that for a wide fetch so

799
00:34:49,429 --> 00:35:06,079
there again anyway uh yeah so I think I

800
00:35:00,190 --> 00:35:08,450
will forego the grid for now and we may

801
00:35:06,079 --> 00:35:11,298
want to support that but rather than put

802
00:35:08,449 --> 00:35:12,500
the grid in at this point I don't know

803
00:35:11,298 --> 00:35:13,880
that I really want to do that because I

804
00:35:12,500 --> 00:35:15,829
think we want to probably send particles

805
00:35:13,880 --> 00:35:17,119
maybe I'm making a huge mistake maybe we

806
00:35:15,829 --> 00:35:18,470
just shouldn't send me the particles

807
00:35:17,119 --> 00:35:20,450
because the number of particles will

808
00:35:18,469 --> 00:35:23,659
have won't be enough to make that be

809
00:35:20,449 --> 00:35:26,509
important so you know maybe that's just

810
00:35:23,659 --> 00:35:28,068
dumb I don't know but anyway I'm gonna

811
00:35:26,510 --> 00:35:30,559
go through here and just say alright so

812
00:35:28,068 --> 00:35:38,088
then let's do the particle the actual

813
00:35:30,559 --> 00:35:47,359
particle count and let's go through each

814
00:35:38,088 --> 00:35:49,548
of the individual particles and then in

815
00:35:47,358 --> 00:35:54,578
here we should be able to just nuke the

816
00:35:49,548 --> 00:35:54,579
part that has to do with the grid right

817
00:35:58,420 --> 00:36:03,858
which was that and I'm pretty sure that

818
00:36:02,179 --> 00:36:06,588
the cells did not it was just the

819
00:36:03,858 --> 00:36:08,389
dispersion that was all we were using so

820
00:36:06,588 --> 00:36:12,019
in theory we should be able to do

821
00:36:08,389 --> 00:36:16,129
everything else that we wanted to do and

822
00:36:12,019 --> 00:36:18,349
we shouldn't have to worry about you

823
00:36:16,130 --> 00:36:19,730
know the fact that we knew the grid

824
00:36:18,349 --> 00:36:21,730
because only the grid was doing was

825
00:36:19,730 --> 00:36:24,769
keeping particles from clumping together

826
00:36:21,730 --> 00:36:27,548
so we should still see a viable particle

827
00:36:24,769 --> 00:36:29,809
system with the grid turned off

828
00:36:27,548 --> 00:36:33,739
alright so stimulating the particle

829
00:36:29,809 --> 00:36:36,079
again this is pretty much just all we

830
00:36:33,739 --> 00:36:38,989
really need to do now if we want to we

831
00:36:36,079 --> 00:36:44,269
could implement some of these operations

832
00:36:38,989 --> 00:36:47,929
on mm 128 if we want to I'm not sure to

833
00:36:44,269 --> 00:36:49,280
what extent that would work okay I think

834
00:36:47,929 --> 00:36:51,799
they actually might

835
00:36:49,280 --> 00:36:57,019
already exist in some of the Intel

836
00:36:51,800 --> 00:37:17,050
includes but I think we would be able to

837
00:36:57,019 --> 00:37:19,400
do something like you know young-sam I

838
00:37:17,050 --> 00:37:21,350
think we would be able to say like let's

839
00:37:19,400 --> 00:37:23,480
overload an operator that will operate

840
00:37:21,349 --> 00:37:26,059
on M 128 so if we want to we don't

841
00:37:23,480 --> 00:37:28,490
really have to micromanage it quite so

842
00:37:26,059 --> 00:37:30,889
much you know maybe we can just sort of

843
00:37:28,489 --> 00:37:33,559
leave the equations roughly the way that

844
00:37:30,889 --> 00:37:36,079
they are for moat for you know the most

845
00:37:33,559 --> 00:37:37,759
part and then not have to worry about it

846
00:37:36,079 --> 00:37:41,179
so much and so if we did something like

847
00:37:37,760 --> 00:37:43,550
that you know you can imagine like the

848
00:37:41,179 --> 00:37:45,889
particle situation here I don't know if

849
00:37:43,550 --> 00:37:49,130
we can do plus equals without it being a

850
00:37:45,889 --> 00:37:50,599
member function of the M 128 but like

851
00:37:49,130 --> 00:37:57,200
these other ones we can so for example

852
00:37:50,599 --> 00:37:59,900
scalar times you know if we do like a

853
00:37:57,199 --> 00:38:03,199
scalar times it should be pretty easy to

854
00:37:59,900 --> 00:38:04,340
make that work right so we should be

855
00:38:03,199 --> 00:38:05,629
able to do that now unfortunately we

856
00:38:04,340 --> 00:38:07,190
can't do the vector version of it so

857
00:38:05,630 --> 00:38:09,940
it's still gonna look kind of like this

858
00:38:07,190 --> 00:38:09,940
right

859
00:38:21,900 --> 00:38:29,500
which is not great like it sucks to have

860
00:38:24,909 --> 00:38:32,289
to blow that out in that way but I'm not

861
00:38:29,500 --> 00:38:35,289
sure what the easier way to do that

862
00:38:32,289 --> 00:38:37,719
would be notationally speaking one thing

863
00:38:35,289 --> 00:38:39,250
we could do again is try to make some

864
00:38:37,719 --> 00:38:42,489
kind of a macro that helps us with that

865
00:38:39,250 --> 00:38:46,989
expansion we could also do something

866
00:38:42,489 --> 00:38:50,859
that did slicing of these things and I

867
00:38:46,989 --> 00:38:54,129
don't realistically know that that would

868
00:38:50,860 --> 00:38:55,360
compile okay but we could try like we

869
00:38:54,130 --> 00:38:59,170
could try to make like a little utility

870
00:38:55,360 --> 00:39:01,750
that just does like pointers and then

871
00:38:59,170 --> 00:39:04,420
rely on the compiler is optimizer to

872
00:39:01,750 --> 00:39:07,300
sort of figure out what we were doing

873
00:39:04,420 --> 00:39:09,460
there and not you know do a bunch of

874
00:39:07,300 --> 00:39:11,170
indirection there certainly it's

875
00:39:09,460 --> 00:39:13,240
certainly plausible that that could work

876
00:39:11,170 --> 00:39:17,230
and if we wanted to do that you know it

877
00:39:13,239 --> 00:39:18,429
would be more like Oh get a pointer to

878
00:39:17,230 --> 00:39:20,380
the pxpypz

879
00:39:18,429 --> 00:39:22,210
and then have a vector type that just

880
00:39:20,380 --> 00:39:23,410
operated on pointers to things and then

881
00:39:22,210 --> 00:39:26,260
hopefully we were smart enough to know

882
00:39:23,409 --> 00:39:27,730
that it that they were not aliasing but

883
00:39:26,260 --> 00:39:28,720
you know would it really know that they

884
00:39:27,730 --> 00:39:30,849
were any other thing I don't know

885
00:39:28,719 --> 00:39:35,109
etcetera etcetera so it's it's a little

886
00:39:30,849 --> 00:39:38,739
tough to say I'm not sure how well it

887
00:39:35,110 --> 00:39:40,450
would do this is again why you kind of

888
00:39:38,739 --> 00:39:41,679
want these things to be more first SS in

889
00:39:40,449 --> 00:39:43,059
the language so you don't have to try

890
00:39:41,679 --> 00:39:45,789
and think through like how am I gonna

891
00:39:43,059 --> 00:39:47,230
can I convince it to sort of deal with

892
00:39:45,789 --> 00:39:48,579
these things that you know really it

893
00:39:47,230 --> 00:39:50,710
should have just kind of naturally known

894
00:39:48,579 --> 00:39:54,190
how to dealt with if you know in a

895
00:39:50,710 --> 00:39:55,809
better situation so yeah so similarly

896
00:39:54,190 --> 00:39:57,579
you know we can create one of these for

897
00:39:55,809 --> 00:39:59,380
the multiply operator where there's a

898
00:39:57,579 --> 00:40:01,989
scaler on one side so if we have like

899
00:39:59,380 --> 00:40:06,809
something like this then I can say like

900
00:40:01,989 --> 00:40:09,669
oh okay you know and set 1 PS for that a

901
00:40:06,809 --> 00:40:12,219
and then you know multiply it by B and

902
00:40:09,670 --> 00:40:14,230
that's the results off like that so we

903
00:40:12,219 --> 00:40:15,879
can still use a certain degree of math

904
00:40:14,230 --> 00:40:18,400
even if we don't try to do anything

905
00:40:15,880 --> 00:40:20,470
fancy we can still at least do some of

906
00:40:18,400 --> 00:40:23,490
that there and the same would be true

907
00:40:20,469 --> 00:40:23,489
again for the color

908
00:40:29,190 --> 00:40:40,360
so and the only thing like I said that

909
00:40:38,710 --> 00:40:46,539
I'm not sure about is if there would be

910
00:40:40,360 --> 00:40:48,910
any way for us to really do like the

911
00:40:46,539 --> 00:40:50,860
plus equals and so on now obviously

912
00:40:48,909 --> 00:40:55,210
there is one way we can do it which is

913
00:40:50,860 --> 00:40:58,750
to wrap the m 128 in our own struct and

914
00:40:55,210 --> 00:41:00,460
then put the plus equals on that which

915
00:40:58,750 --> 00:41:02,590
maybe we should do I don't know

916
00:41:00,460 --> 00:41:04,690
but I don't know that I can do a plus

917
00:41:02,590 --> 00:41:07,329
equals externally right I'm pretty sure

918
00:41:04,690 --> 00:41:09,280
that if I try to I would end up in a

919
00:41:07,329 --> 00:41:10,480
situation I should probably finish this

920
00:41:09,280 --> 00:41:14,470
one as well before I start trying to

921
00:41:10,480 --> 00:41:15,820
compile I'm pretty sure that I would end

922
00:41:14,469 --> 00:41:17,019
up in a situation where that would not

923
00:41:15,820 --> 00:41:19,440
work but that's okay maybe we should

924
00:41:17,019 --> 00:41:22,119
wrap it and you know that's fine too

925
00:41:19,440 --> 00:41:25,530
anyway so if I go through here and say

926
00:41:22,119 --> 00:41:25,529
here's my equation

927
00:41:29,739 --> 00:41:33,849
then what I've got okay so all of these

928
00:41:32,019 --> 00:41:35,980
things or these are all scalars that are

929
00:41:33,849 --> 00:41:43,239
all happening here and then finally I

930
00:41:35,980 --> 00:41:45,780
get to sort of my GDP which needs to be

931
00:41:43,239 --> 00:41:45,779
expanded out

932
00:41:49,139 --> 00:41:52,949
and now I think about it I could

933
00:41:50,789 --> 00:41:54,989
probably at least save that expansion by

934
00:41:52,949 --> 00:41:58,049
just making that a local pointer which I

935
00:41:54,989 --> 00:41:59,579
probably should do but anyway you can

936
00:41:58,050 --> 00:42:02,130
see that these are all just scalars

937
00:41:59,579 --> 00:42:06,539
anyway so that's all fine we just need

938
00:42:02,130 --> 00:42:16,470
that DT so there's the DT no no why we

939
00:42:06,539 --> 00:42:19,139
do it why do we do a square is it a

940
00:42:16,469 --> 00:42:23,489
little bit odd this equation it doesn't

941
00:42:19,139 --> 00:42:26,699
look quite right to me why is it why is

942
00:42:23,489 --> 00:42:33,119
it look like that it's doing a cubed

943
00:42:26,699 --> 00:42:37,489
addition of the this looks like it's

944
00:42:33,119 --> 00:42:39,719
doing a cube but why is it doing a cube

945
00:42:37,489 --> 00:42:42,269
there's no real reason why it would do a

946
00:42:39,719 --> 00:42:47,129
cube here I think that's a bug I feel

947
00:42:42,269 --> 00:42:49,079
like this should just be this right that

948
00:42:47,130 --> 00:42:51,180
seems like a bug why is it multiplying

949
00:42:49,079 --> 00:42:52,889
because one half a T squared

950
00:42:51,179 --> 00:42:54,960
we went up you know you remember we went

951
00:42:52,889 --> 00:42:57,089
over the equations of motion one half ay

952
00:42:54,960 --> 00:42:59,070
T Square is the equation we're looking

953
00:42:57,090 --> 00:43:01,650
for here and for some reason that was

954
00:42:59,070 --> 00:43:03,780
one half a T cubed which doesn't really

955
00:43:01,650 --> 00:43:08,519
make a lot of sense if we're honest

956
00:43:03,780 --> 00:43:13,769
about it's right you know doesn't make a

957
00:43:08,519 --> 00:43:19,590
lot of sense so anyway not sure what was

958
00:43:13,769 --> 00:43:21,300
going on there but you know in here we

959
00:43:19,590 --> 00:43:26,329
can take a look and say okay so now

960
00:43:21,300 --> 00:43:26,330
we've got the system DP

961
00:43:31,728 --> 00:43:48,498
and in here we could say like okay the

962
00:43:33,679 --> 00:43:51,169
system DP XYZ yeah right and so we need

963
00:43:48,498 --> 00:43:53,778
to pass that DT we never really did pass

964
00:43:51,170 --> 00:43:55,659
a DT here these in if this is an update

965
00:43:53,778 --> 00:43:59,059
you know it's going to want one of these

966
00:43:55,659 --> 00:44:00,889
and so that's all fine but like I said

967
00:43:59,059 --> 00:44:01,220
these plus equals would be a problem for

968
00:44:00,889 --> 00:44:03,018
us

969
00:44:01,219 --> 00:44:04,629
so I'm not sure what to really do about

970
00:44:03,018 --> 00:44:09,558
that now here's an interesting thing

971
00:44:04,630 --> 00:44:14,769
here's a thought and this is kind of

972
00:44:09,559 --> 00:44:14,769
ridiculous but I'm gonna say it anyway

973
00:44:15,400 --> 00:44:23,420
because why not so here's the phrase if

974
00:44:21,829 --> 00:44:24,318
you take a look at what this thing looks

975
00:44:23,420 --> 00:44:27,650
like right

976
00:44:24,318 --> 00:44:30,170
the pxpypz for an individual one of

977
00:44:27,650 --> 00:44:36,108
these particles it's separated by some

978
00:44:30,170 --> 00:44:38,210
number of intervening values but they

979
00:44:36,108 --> 00:44:39,798
all happen to be like the same they're

980
00:44:38,210 --> 00:44:42,739
homogeneous right they're all max

981
00:44:39,798 --> 00:44:45,288
particle count for so if you think about

982
00:44:42,739 --> 00:44:47,929
it if we were to to take one of these

983
00:44:45,289 --> 00:44:50,089
things and say well we've got a particle

984
00:44:47,929 --> 00:44:54,009
system and we've got this individual

985
00:44:50,088 --> 00:45:00,130
thing you know maybe called a like

986
00:44:54,009 --> 00:45:02,088
particle V 2 V 3 or be something right

987
00:45:00,130 --> 00:45:04,789
so we have something called like a

988
00:45:02,088 --> 00:45:08,900
particle V 3 you could imagine us saying

989
00:45:04,789 --> 00:45:13,839
well okay what if there was an X for it

990
00:45:08,900 --> 00:45:13,838
and then like an ignored

991
00:45:17,130 --> 00:45:30,170
something like this and then a wife or

992
00:45:20,730 --> 00:45:39,409
it and it ignored and then a Z for it

993
00:45:30,170 --> 00:45:42,360
and ignored right like just

994
00:45:39,409 --> 00:45:44,789
hypothetically speaking what would it

995
00:45:42,360 --> 00:45:46,140
look like if we told the compiler that

996
00:45:44,789 --> 00:45:48,539
we were pointing at one of these

997
00:45:46,139 --> 00:45:50,429
particles and we actually gave it a

998
00:45:48,539 --> 00:45:53,759
pointer to somewhere inside this P X

999
00:45:50,429 --> 00:45:56,279
array right well in theory the X the Y

1000
00:45:53,760 --> 00:45:59,130
and the Z at that point would be

1001
00:45:56,280 --> 00:46:00,630
pointing into the right areas in their

1002
00:45:59,130 --> 00:46:05,030
respective arrays right because they're

1003
00:46:00,630 --> 00:46:08,570
just this far apart there's that many

1004
00:46:05,030 --> 00:46:10,800
interesting values to get to the Y right

1005
00:46:08,570 --> 00:46:13,289
because like if you started on the zero

1006
00:46:10,800 --> 00:46:15,900
with px you know there's max product

1007
00:46:13,289 --> 00:46:18,599
count for mm 128 before I get to the

1008
00:46:15,900 --> 00:46:20,639
zero with Y and if I was at the first X

1009
00:46:18,599 --> 00:46:24,119
I would know there was still max

1010
00:46:20,639 --> 00:46:27,779
particle count for mm 128 in between me

1011
00:46:24,119 --> 00:46:30,269
and the first Y so like 2 3 4 5 they're

1012
00:46:27,780 --> 00:46:32,700
always separated the way that's tried so

1013
00:46:30,269 --> 00:46:33,960
one way potentially right of simplifying

1014
00:46:32,699 --> 00:46:36,779
this down is something that would be

1015
00:46:33,960 --> 00:46:39,119
easier to work with potentially would be

1016
00:46:36,780 --> 00:46:40,590
to say well okay really I could get out

1017
00:46:39,119 --> 00:46:44,909
the particle here I could say that I

1018
00:46:40,590 --> 00:46:49,410
have a particle of III that's pointing

1019
00:46:44,909 --> 00:46:52,739
to the P and we just tell the compiler

1020
00:46:49,409 --> 00:46:56,369
that we have one of those and that we're

1021
00:46:52,739 --> 00:47:02,909
pointing at you know the PX of the the

1022
00:46:56,369 --> 00:47:04,650
system you know whichever index into the

1023
00:47:02,909 --> 00:47:06,869
particle systems are raised that we have

1024
00:47:04,650 --> 00:47:08,280
that's the one we're pointing at but

1025
00:47:06,869 --> 00:47:11,880
instead of treating it as just a single

1026
00:47:08,280 --> 00:47:15,960
px value treat it as this sliced

1027
00:47:11,880 --> 00:47:18,900
particle thing and then in theory we

1028
00:47:15,960 --> 00:47:21,510
could write the operators on that thing

1029
00:47:18,900 --> 00:47:24,389
right that's just something we could

1030
00:47:21,510 --> 00:47:25,590
operate on directly so we could do

1031
00:47:24,389 --> 00:47:29,089
something there we still like okay

1032
00:47:25,590 --> 00:47:29,090
there's our particle

1033
00:47:29,309 --> 00:47:43,289
and so then we could say well star P

1034
00:47:32,570 --> 00:47:51,750
equals you know well now I think about

1035
00:47:43,289 --> 00:47:58,409
it that part won't get it easier at

1036
00:47:51,750 --> 00:48:01,230
least do that right it's a little weird

1037
00:47:58,409 --> 00:48:03,690
right it's a little weird but you know

1038
00:48:01,230 --> 00:48:12,030
that's certainly cleaner to read right

1039
00:48:03,690 --> 00:48:14,010
so you know that to me seems like

1040
00:48:12,030 --> 00:48:21,330
probably a win in terms of constructing

1041
00:48:14,010 --> 00:48:23,099
this code right and we still have a

1042
00:48:21,329 --> 00:48:26,190
bunch of funny business to do here I

1043
00:48:23,099 --> 00:48:27,869
guess in some sense because if we want

1044
00:48:26,190 --> 00:48:31,380
to have operators on these guys then we

1045
00:48:27,869 --> 00:48:41,990
would need to each pull each one out but

1046
00:48:31,380 --> 00:48:41,990
you know not that big of a deal

1047
00:48:45,909 --> 00:48:57,440
right so it seems like that would work I

1048
00:48:55,219 --> 00:49:00,769
don't think I've ever done this

1049
00:48:57,440 --> 00:49:02,599
particular ridiculousness before but you

1050
00:49:00,769 --> 00:49:04,150
know I mean I don't see an obvious

1051
00:49:02,599 --> 00:49:07,489
reason why you couldn't do it this way

1052
00:49:04,150 --> 00:49:10,340
and since the stream is kind of winding

1053
00:49:07,489 --> 00:49:12,500
down here you know we can at least in

1054
00:49:10,340 --> 00:49:15,230
terms of time we could at least test

1055
00:49:12,500 --> 00:49:16,969
this out and see how it goes but like I

1056
00:49:15,230 --> 00:49:23,420
said it seems like something that would

1057
00:49:16,969 --> 00:49:27,969
work and of course I would have to make

1058
00:49:23,420 --> 00:49:27,970
a version of these that was actually

1059
00:49:29,409 --> 00:49:34,750
four wide for the colors check and doing

1060
00:49:32,690 --> 00:49:34,750
this

1061
00:49:41,320 --> 00:49:47,950
all right so something like this and so

1062
00:49:46,570 --> 00:49:50,950
I don't know will that work let's find

1063
00:49:47,949 --> 00:49:55,169
out if I also make a for wide one of

1064
00:49:50,949 --> 00:50:01,299
this well it's really no no different

1065
00:49:55,170 --> 00:50:16,300
it's exactly the same thing so it's just

1066
00:50:01,300 --> 00:50:18,340
RGB right okay so yeah clean that up and

1067
00:50:16,300 --> 00:50:22,600
so in theory I think that would work I

1068
00:50:18,340 --> 00:50:24,160
don't really know but I don't see any

1069
00:50:22,599 --> 00:50:27,969
reason why it would confuse the compiler

1070
00:50:24,159 --> 00:50:31,239
too much and then down for these things

1071
00:50:27,969 --> 00:50:33,339
here in theory we could make operators

1072
00:50:31,239 --> 00:50:39,669
on these and so in theory we could do

1073
00:50:33,340 --> 00:50:51,400
something like you know this guy plus

1074
00:50:39,670 --> 00:50:54,659
equals some way in which these guys get

1075
00:50:51,400 --> 00:51:03,670
up converted which i think isn't

1076
00:50:54,659 --> 00:51:06,309
difficult probably I'm guessing yeah

1077
00:51:03,670 --> 00:51:08,920
because at the end of the day you know

1078
00:51:06,309 --> 00:51:11,289
once we have one of these it's pretty

1079
00:51:08,920 --> 00:51:14,590
easy to also read out of one in a way

1080
00:51:11,289 --> 00:51:19,300
that collapses it right so I could also

1081
00:51:14,590 --> 00:51:22,269
say equivalently right if those are you

1082
00:51:19,300 --> 00:51:25,840
know if I'm operating on one of these

1083
00:51:22,269 --> 00:51:28,659
don't carry the particle v3 through

1084
00:51:25,840 --> 00:51:31,539
instead you will want to use something

1085
00:51:28,659 --> 00:51:35,309
like a v3 to carry the data so for

1086
00:51:31,539 --> 00:51:35,309
example let's do this one more time

1087
00:51:40,070 --> 00:51:51,800
I'm gonna maybe how do I want to do this

1088
00:51:43,699 --> 00:51:55,609
here so yeah I could do it this way

1089
00:51:51,800 --> 00:52:08,990
let's say I just instruct particle and

1090
00:51:55,610 --> 00:52:11,780
in here I just had these guys right and

1091
00:52:08,989 --> 00:52:23,029
so what I could do is say okay there's a

1092
00:52:11,780 --> 00:52:24,530
way of just getting a particle by just

1093
00:52:23,030 --> 00:52:26,840
passing whichever particle system that

1094
00:52:24,530 --> 00:52:29,600
is that you're talking about and then

1095
00:52:26,840 --> 00:52:33,950
the index that you wanted and then it

1096
00:52:29,599 --> 00:52:45,019
would just do exactly this operation but

1097
00:52:33,949 --> 00:52:53,779
return one of these right so you know

1098
00:52:45,019 --> 00:52:56,539
we've solved up key EP GDP CC and what I

1099
00:52:53,780 --> 00:52:58,280
might do in this case is rather than do

1100
00:52:56,539 --> 00:53:03,889
it that way I might actually have you

1101
00:52:58,280 --> 00:53:05,390
pass in the particle to fill out just so

1102
00:53:03,889 --> 00:53:07,789
our debug mode doesn't suffer too much

1103
00:53:05,389 --> 00:53:09,319
speed hit because you know in

1104
00:53:07,789 --> 00:53:11,000
optimization mode it would clean that

1105
00:53:09,320 --> 00:53:12,200
out nicely but in debug mode it's not

1106
00:53:11,000 --> 00:53:14,690
going to do something particular smart

1107
00:53:12,199 --> 00:53:16,369
there so I just since this is a loop

1108
00:53:14,690 --> 00:53:20,059
that'll get run a lot in debug mode I

1109
00:53:16,369 --> 00:53:25,339
don't want it to be too unwieldy so yes

1110
00:53:20,059 --> 00:53:26,719
I could say particle I don't know I'm

1111
00:53:25,340 --> 00:53:28,340
just going to call it a because I have

1112
00:53:26,719 --> 00:53:33,219
no real reason to call it maybe in

1113
00:53:28,340 --> 00:53:33,220
particular system AI

1114
00:53:34,719 --> 00:53:59,318
so now it's just you know and there we

1115
00:53:45,909 --> 00:54:06,250
go I think this is not anything we want

1116
00:53:59,318 --> 00:54:11,440
to preserve so I'm gonna go ahead and

1117
00:54:06,250 --> 00:54:12,940
move those guys down here and nuke them

1118
00:54:11,440 --> 00:54:28,358
temporarily probably permanently

1119
00:54:12,940 --> 00:54:29,338
eventually okay and that is not supposed

1120
00:54:28,358 --> 00:54:32,108
to happen

1121
00:54:29,338 --> 00:54:33,489
so let's take a look at that and see how

1122
00:54:32,108 --> 00:54:36,130
we feel about that I don't know it's a

1123
00:54:33,489 --> 00:54:38,289
little wonky but let's just take a look

1124
00:54:36,130 --> 00:54:40,450
so now we can do the same thing down

1125
00:54:38,289 --> 00:54:41,920
here and I'm gonna go a little over time

1126
00:54:40,449 --> 00:54:43,779
because I started pretty late eggs I'm

1127
00:54:41,920 --> 00:54:45,909
gonna go for a few more minutes so I'm

1128
00:54:43,780 --> 00:54:47,859
kind of enjoying this weird exploration

1129
00:54:45,909 --> 00:54:50,529
here I'm going to do the same thing down

1130
00:54:47,858 --> 00:54:52,568
here to get the particle out and then

1131
00:54:50,530 --> 00:55:00,790
I'm just gonna say like okay so we've

1132
00:54:52,568 --> 00:55:06,789
got these things right and I want to do

1133
00:55:00,789 --> 00:55:08,710
like math offs on them so I want to do a

1134
00:55:06,789 --> 00:55:10,838
single operation and update this

1135
00:55:08,710 --> 00:55:13,389
particular particle and I want to do

1136
00:55:10,838 --> 00:55:19,150
that using its DDP and stuff like this

1137
00:55:13,389 --> 00:55:23,019
so I want to say you know I want to say

1138
00:55:19,150 --> 00:55:26,588
a dot DDP here and I want to say a dot

1139
00:55:23,019 --> 00:55:29,659
DP here and I want that to just

1140
00:55:26,588 --> 00:55:34,309
magically work right

1141
00:55:29,659 --> 00:55:39,949
so I want to have that happen I believe

1142
00:55:34,309 --> 00:55:41,860
these are technically technically should

1143
00:55:39,949 --> 00:55:45,019
look like that

1144
00:55:41,860 --> 00:55:47,660
so yeah it's not great because I still

1145
00:55:45,019 --> 00:55:52,190
have to dereference it because it is a

1146
00:55:47,659 --> 00:55:54,319
pointer I believe yeah it is a pointer

1147
00:55:52,190 --> 00:55:57,409
so you know I would have preferred that

1148
00:55:54,320 --> 00:55:58,700
somehow it not be a pointer but I don't

1149
00:55:57,409 --> 00:56:01,429
know that there's really any way to do

1150
00:55:58,699 --> 00:56:04,129
that and still be able to write back to

1151
00:56:01,429 --> 00:56:07,909
them I suppose we could try making it a

1152
00:56:04,130 --> 00:56:16,039
reference but that would be kind of hard

1153
00:56:07,909 --> 00:56:19,159
to do the construction on we'll think

1154
00:56:16,039 --> 00:56:20,409
about that well think about that but for

1155
00:56:19,159 --> 00:56:23,599
the moment we'll just leave it like this

1156
00:56:20,409 --> 00:56:25,789
and then you know like I said this would

1157
00:56:23,599 --> 00:56:28,429
all presumably get simplified down into

1158
00:56:25,789 --> 00:56:32,779
something that looked a lot more like

1159
00:56:28,429 --> 00:56:42,319
the original so it would be something

1160
00:56:32,780 --> 00:56:46,340
more like this right yeah so I don't

1161
00:56:42,320 --> 00:56:49,490
know that I want to do this guy yet

1162
00:56:46,340 --> 00:56:52,490
because if will require some special

1163
00:56:49,489 --> 00:56:55,939
handling in the sim D so we'll leave

1164
00:56:52,489 --> 00:56:57,079
that out for now and we don't want to

1165
00:56:55,940 --> 00:56:59,059
deal with the rendering yet but

1166
00:56:57,079 --> 00:57:03,319
otherwise most of this stuff is okay you

1167
00:56:59,059 --> 00:57:09,170
know what like this is just one thing

1168
00:57:03,320 --> 00:57:12,940
here so this is again start a dot C plus

1169
00:57:09,170 --> 00:57:12,940
equals 2t times particle

1170
00:57:14,639 --> 00:57:24,058
PC right and similarly down here this

1171
00:57:22,739 --> 00:57:27,329
seems pretty straightforward as well

1172
00:57:24,059 --> 00:57:28,890
this is just clamping the color but I

1173
00:57:27,329 --> 00:57:32,099
don't know why we don't just clamp the

1174
00:57:28,889 --> 00:57:35,278
color I'm not sure what I'm not sure why

1175
00:57:32,099 --> 00:57:38,309
it I guess because we want to be able to

1176
00:57:35,278 --> 00:57:40,289
set the color to something other than so

1177
00:57:38,309 --> 00:57:41,910
the output color gets clamped so I guess

1178
00:57:40,289 --> 00:57:43,200
that that's just part of the rendering

1179
00:57:41,909 --> 00:57:44,399
so that's something that we don't I

1180
00:57:43,199 --> 00:57:50,098
guess I have to worry about just get

1181
00:57:44,400 --> 00:57:53,068
either okay so now if you take a look at

1182
00:57:50,099 --> 00:57:55,289
what we're doing here right we've kind

1183
00:57:53,068 --> 00:57:56,639
of got the stuff working that we want to

1184
00:57:55,289 --> 00:57:58,230
work but we've got some operator

1185
00:57:56,639 --> 00:57:59,998
overloads that we need to figure out how

1186
00:57:58,230 --> 00:58:02,039
to do because now we've got sort of

1187
00:57:59,998 --> 00:58:03,328
these particle VIII's here multiplying

1188
00:58:02,039 --> 00:58:05,839
my scalars and then they're getting

1189
00:58:03,329 --> 00:58:08,339
added to this and blah blah blah right

1190
00:58:05,838 --> 00:58:10,558
but that's okay because we can write

1191
00:58:08,338 --> 00:58:12,480
those things pretty easily if we take a

1192
00:58:10,559 --> 00:58:14,099
look at what we've got here if we want

1193
00:58:12,480 --> 00:58:17,568
to do one of those particle updates

1194
00:58:14,099 --> 00:58:22,259
right if we wanted to say okay let's

1195
00:58:17,568 --> 00:58:24,869
make a plus equals operator for our our

1196
00:58:22,259 --> 00:58:28,338
particle v3 right we could pretty

1197
00:58:24,869 --> 00:58:35,369
trivially do one where we just said okay

1198
00:58:28,338 --> 00:58:37,710
let's say it takes a v3 in well all we

1199
00:58:35,369 --> 00:58:39,930
need to do to make it take in our v3

1200
00:58:37,710 --> 00:58:42,900
well I guess we need us to be more

1201
00:58:39,929 --> 00:58:45,058
acidic we need a sliced v3 right so we

1202
00:58:42,900 --> 00:58:46,650
just need you know a v3 that's that's

1203
00:58:45,059 --> 00:58:49,220
for a wide right we just need something

1204
00:58:46,650 --> 00:58:49,220
that's this

1205
00:58:53,070 --> 00:59:01,440
I don't know something like that right

1206
00:58:59,210 --> 00:59:03,929
where we've got a four wide one of these

1207
00:59:01,440 --> 00:59:06,210
well if we had a 4y one of these that

1208
00:59:03,929 --> 00:59:09,089
came in we could then say okay well then

1209
00:59:06,210 --> 00:59:15,240
that's pretty easy the X is just plus

1210
00:59:09,090 --> 00:59:18,720
equaled the Y is plus equal to the Z is

1211
00:59:15,239 --> 00:59:20,729
plus equals right we just be adding the

1212
00:59:18,719 --> 00:59:25,949
pieces of these guys that we know we

1213
00:59:20,730 --> 00:59:27,059
already have right so hopefully you can

1214
00:59:25,949 --> 00:59:33,629
kind of see where I'm going with this

1215
00:59:27,059 --> 00:59:35,130
now so when we have this particle v3 we

1216
00:59:33,630 --> 00:59:37,980
can if we want to just do this up

1217
00:59:35,130 --> 00:59:40,470
operator on it and when we try to do a

1218
00:59:37,980 --> 00:59:46,349
plus equals operation on it we will

1219
00:59:40,469 --> 00:59:49,169
actually get exactly the operation that

1220
00:59:46,349 --> 00:59:50,519
we want right we'll just we'll just get

1221
00:59:49,170 --> 00:59:52,680
the piece of this so the question is

1222
00:59:50,519 --> 00:59:56,340
just well all right how do we then get

1223
00:59:52,679 --> 01:00:02,579
in these by the way here I guess not

1224
00:59:56,340 --> 01:00:08,930
super relevant so I I just said we can't

1225
01:00:02,579 --> 01:00:08,929
add those so this is what I actually

1226
01:00:14,230 --> 01:00:18,559
right so in this case I'm just saying

1227
01:00:16,940 --> 01:00:19,820
like alright let's do it and pretend we

1228
01:00:18,559 --> 01:00:21,469
have a thing that comes in here that's

1229
01:00:19,820 --> 01:00:23,539
got the values we want to add we'll add

1230
01:00:21,469 --> 01:00:26,049
them so then all we have to do is write

1231
01:00:23,539 --> 01:00:29,750
the opposite style of conversion right

1232
01:00:26,050 --> 01:00:31,789
when we see a scalar times one of our

1233
01:00:29,750 --> 01:00:33,679
particle VIII's well we don't want to

1234
01:00:31,789 --> 01:00:35,690
propagate this is a giant thing it's

1235
01:00:33,679 --> 01:00:39,259
like you know it's hugely it's a massive

1236
01:00:35,690 --> 01:00:41,990
object we don't want that whole

1237
01:00:39,260 --> 01:00:43,820
structure to be copied around but we

1238
01:00:41,989 --> 01:00:45,799
don't have to write what we can do

1239
01:00:43,820 --> 01:00:52,910
instead is just say well alright if you

1240
01:00:45,800 --> 01:00:57,230
were to see one of these guys where you

1241
01:00:52,909 --> 01:01:01,219
wanted to multiply a scalar by one of

1242
01:00:57,230 --> 01:01:04,219
these particle VIII's it just generates

1243
01:01:01,219 --> 01:01:06,019
just the part that it wanted to just the

1244
01:01:04,219 --> 01:01:09,230
part that we actually cared about right

1245
01:01:06,019 --> 01:01:13,159
so we could generate a result here and

1246
01:01:09,230 --> 01:01:15,769
that result would just be the x y&amp;z of

1247
01:01:13,159 --> 01:01:19,250
the scalar multiplication with the parts

1248
01:01:15,769 --> 01:01:21,230
of the giant slice that we actually care

1249
01:01:19,250 --> 01:01:23,329
about so we're kind of slicing off just

1250
01:01:21,230 --> 01:01:31,190
the x y&amp;z at this point and leaving

1251
01:01:23,329 --> 01:01:33,230
everything else right so now we can see

1252
01:01:31,190 --> 01:01:35,179
how this expression will start to take

1253
01:01:33,230 --> 01:01:37,610
shape how do we make this thing work

1254
01:01:35,179 --> 01:01:39,889
well okay it's gonna try to take one of

1255
01:01:37,610 --> 01:01:41,450
these guys which is a particle v3 right

1256
01:01:39,889 --> 01:01:42,920
it's going to try to multiply it by a

1257
01:01:41,449 --> 01:01:46,659
scalar so when it does that it will

1258
01:01:42,920 --> 01:01:50,150
evoke this operator put it in front of

1259
01:01:46,659 --> 01:01:53,239
that operator will take and slice away

1260
01:01:50,150 --> 01:01:56,840
just the x y&amp;z that we actually wanted

1261
01:01:53,239 --> 01:01:59,539
and then returned that as a v3 for it by

1262
01:01:56,840 --> 01:02:01,610
you know for X that will then get

1263
01:01:59,539 --> 01:02:09,730
multiplied by a scalar again right so

1264
01:02:01,610 --> 01:02:09,730
that means we're gonna need one of these

1265
01:02:21,400 --> 01:02:35,240
it's actually exact same code right and

1266
01:02:32,119 --> 01:02:37,819
then it will try to add that to

1267
01:02:35,239 --> 01:02:39,529
essentially an exact same kind of the

1268
01:02:37,820 --> 01:02:41,240
other side there right so we know that

1269
01:02:39,530 --> 01:02:43,460
that this side will generate the exact

1270
01:02:41,239 --> 01:02:46,039
same thing so then we just need a

1271
01:02:43,460 --> 01:02:47,500
operator plus for these guys and we're

1272
01:02:46,039 --> 01:03:02,750
done

1273
01:02:47,500 --> 01:03:05,239
right so now I think what is this type

1274
01:03:02,750 --> 01:03:07,369
missing type specifier oh sorry this

1275
01:03:05,239 --> 01:03:13,089
will just return in one of these guys

1276
01:03:07,369 --> 01:03:13,089
missed it typical ridiculousness and C++

1277
01:03:13,329 --> 01:03:27,799
no operator found for what oh yes this

1278
01:03:19,070 --> 01:03:29,269
is an mm well PS keep forgetting we

1279
01:03:27,800 --> 01:03:31,460
don't have any overloaded operators for

1280
01:03:29,269 --> 01:03:33,380
the EM 128 so anytime we're actually

1281
01:03:31,460 --> 01:03:37,690
doing them we have to use the SSE

1282
01:03:33,380 --> 01:03:37,690
intrinsics for it not a problem

1283
01:03:51,809 --> 01:04:03,860
okay and since this is a scaler I really

1284
01:04:00,300 --> 01:04:03,860
just need to blow this guy out so we

1285
01:04:04,550 --> 01:04:15,990
just need one of these like so all right

1286
01:04:13,739 --> 01:04:17,789
same thing here just need to write this

1287
01:04:15,989 --> 01:04:18,439
in Cindi friendly way which looks like

1288
01:04:17,789 --> 01:04:21,150
this

1289
01:04:18,440 --> 01:04:31,200
same thing blowout scaler and then you

1290
01:04:21,150 --> 01:04:33,300
want to do the mole PS and really we can

1291
01:04:31,199 --> 01:04:34,889
write this in a better way which we

1292
01:04:33,300 --> 01:04:36,120
could do tomorrow we could write this in

1293
01:04:34,889 --> 01:04:41,129
a slightly better way which is to just

1294
01:04:36,119 --> 01:04:42,839
make these guys first loft up particle B

1295
01:04:41,130 --> 01:04:46,200
just make a thing that translates a

1296
01:04:42,840 --> 01:04:48,660
particle B into a v3 for X and then we

1297
01:04:46,199 --> 01:04:51,269
just use that right so that's a much

1298
01:04:48,659 --> 01:04:54,149
easier thing than then writing that

1299
01:04:51,269 --> 01:04:56,820
every time so now you can see these two

1300
01:04:54,150 --> 01:04:58,860
guys compile just fine and now we just

1301
01:04:56,820 --> 01:05:01,320
need the four wide version of the same

1302
01:04:58,860 --> 01:05:04,980
thing right and then we're going to go

1303
01:05:01,320 --> 01:05:06,000
for it for the for the colors so I'll do

1304
01:05:04,980 --> 01:05:09,949
that tomorrow I don't want to run too

1305
01:05:06,000 --> 01:05:13,019
much out of time there but that's it all

1306
01:05:09,949 --> 01:05:16,189
right so I'll go to a QA for just a

1307
01:05:13,019 --> 01:05:16,190
little tiny tiny little bit

1308
01:05:19,568 --> 01:05:24,190
case anyone has any cue colons for me

1309
01:05:52,039 --> 01:05:56,779
Martin says on msec it is possible to

1310
01:05:54,980 --> 01:05:59,000
create a non-member inline operator plus

1311
01:05:56,780 --> 01:06:01,430
equals for emmerman 28 it is done in the

1312
01:05:59,000 --> 01:06:03,679
same way as you did for the other types

1313
01:06:01,429 --> 01:06:05,960
but for GCC clang you cannot do plus

1314
01:06:03,679 --> 01:06:09,739
equals 4mm 128 because they already have

1315
01:06:05,960 --> 01:06:15,679
it well you know that's not bad right

1316
01:06:09,739 --> 01:06:19,009
because we could if zero I could use

1317
01:06:15,679 --> 01:06:21,230
this zero not sure why I made it a

1318
01:06:19,010 --> 01:06:22,730
member that's a good question um I think

1319
01:06:21,230 --> 01:06:25,610
I was just thinking I had to for some

1320
01:06:22,730 --> 01:06:27,309
reason I used these features of Siebel

1321
01:06:25,610 --> 01:06:39,650
swish fairly rarely now so I don't

1322
01:06:27,309 --> 01:06:41,929
remember a lot of the minutiae I don't

1323
01:06:39,650 --> 01:06:44,480
really remember a lot of times like what

1324
01:06:41,929 --> 01:06:54,609
they pass does it pass a reference for

1325
01:06:44,480 --> 01:06:54,610
example yeah so

1326
01:07:00,460 --> 01:07:19,829
I assume that is roughly roughly what

1327
01:07:08,199 --> 01:07:19,829
they would want yeah

1328
01:07:30,059 --> 01:07:34,680
so says the kid instead of doing the

1329
01:07:32,159 --> 01:07:36,568
particle v3 struct could you accomplish

1330
01:07:34,679 --> 01:07:47,159
the same thing with macros and some

1331
01:07:36,568 --> 01:07:58,190
pointer math uh not that I can think of

1332
01:07:47,159 --> 01:08:01,078
I mean obviously you could create

1333
01:07:58,190 --> 01:08:02,789
something that just skipped that far

1334
01:08:01,079 --> 01:08:03,989
forwards but it wouldn't be you wouldn't

1335
01:08:02,789 --> 01:08:06,690
be able to do like the overloading

1336
01:08:03,989 --> 01:08:19,789
operator kind of stuff if that makes

1337
01:08:06,690 --> 01:08:19,789
sense but I'm not not sure

1338
01:08:25,488 --> 01:08:30,479
how much of your time would you say you

1339
01:08:28,020 --> 01:08:40,170
spend refactoring as compared to writing

1340
01:08:30,479 --> 01:08:43,769
new code well I don't really like the

1341
01:08:40,170 --> 01:08:46,289
word refactoring super much although

1342
01:08:43,770 --> 01:08:47,730
it's used so commonly that now I use it

1343
01:08:46,289 --> 01:08:50,310
too so I suppose there's not much I can

1344
01:08:47,729 --> 01:08:52,649
really do about that but part of the

1345
01:08:50,310 --> 01:08:53,850
problem is that refactoring is not very

1346
01:08:52,649 --> 01:08:57,000
specific about what you're actually

1347
01:08:53,850 --> 01:09:00,210
doing like basically anything can be

1348
01:08:57,000 --> 01:09:03,569
called refactoring at some level unless

1349
01:09:00,210 --> 01:09:05,279
you're like you know literally making

1350
01:09:03,569 --> 01:09:07,230
the very first pass of something

1351
01:09:05,279 --> 01:09:09,029
everything else is refactoring but it's

1352
01:09:07,229 --> 01:09:11,669
like well okay but what were you really

1353
01:09:09,029 --> 01:09:13,799
doing like there's a lot of different

1354
01:09:11,670 --> 01:09:16,020
things that all pass as refactoring but

1355
01:09:13,798 --> 01:09:21,750
they're not a lot of them aren't really

1356
01:09:16,020 --> 01:09:24,259
even all that similar to each other so I

1357
01:09:21,750 --> 01:09:28,279
guess what I would say there is I I

1358
01:09:24,259 --> 01:09:31,859
spend a tremendous amount of time

1359
01:09:28,279 --> 01:09:35,520
working on the architecture of code so I

1360
01:09:31,859 --> 01:09:36,660
definitely do spend a lot of time even

1361
01:09:35,520 --> 01:09:37,890
what I think would be traditionally

1362
01:09:36,659 --> 01:09:40,738
considered part of the refactoring

1363
01:09:37,890 --> 01:09:43,079
process but I don't know specifically

1364
01:09:40,738 --> 01:09:45,988
how much there is of that versus the

1365
01:09:43,079 --> 01:09:48,509
first pass through I would say it's very

1366
01:09:45,988 --> 01:09:49,939
hard to even talk about the first pass

1367
01:09:48,509 --> 01:09:53,069
through because the first pass through

1368
01:09:49,939 --> 01:09:57,089
oftentimes involves built-in sort of

1369
01:09:53,069 --> 01:10:01,310
thinking about times which you could say

1370
01:09:57,090 --> 01:10:01,310
was sort of a refactoring as well right

1371
01:10:01,729 --> 01:10:05,789
like for example even with what we just

1372
01:10:03,988 --> 01:10:08,009
did where we sort of started writing the

1373
01:10:05,789 --> 01:10:10,079
particle stuff and I changed it a couple

1374
01:10:08,010 --> 01:10:12,180
times already you know there was

1375
01:10:10,079 --> 01:10:13,439
refactoring in there technically but

1376
01:10:12,180 --> 01:10:15,150
it's the first time we ever wrote this

1377
01:10:13,439 --> 01:10:19,169
code it wasn't like we had working

1378
01:10:15,149 --> 01:10:21,569
version of the code that was working on

1379
01:10:19,170 --> 01:10:23,039
the 7d ones so you know playing around

1380
01:10:21,569 --> 01:10:24,779
with how I wanted to do the cindy was

1381
01:10:23,039 --> 01:10:26,519
kind of part of the initial rewrite how

1382
01:10:24,779 --> 01:10:29,219
much would you say that was refactoring

1383
01:10:26,520 --> 01:10:30,930
versus new code you know I don't know so

1384
01:10:29,219 --> 01:10:32,369
it's kind of hard to really talk about

1385
01:10:30,930 --> 01:10:34,020
those two things as if they're these

1386
01:10:32,369 --> 01:10:36,059
really black and white lines because I

1387
01:10:34,020 --> 01:10:38,070
don't really think that they are I think

1388
01:10:36,060 --> 01:10:39,750
that just writing code in general

1389
01:10:38,069 --> 01:10:41,639
is about a process like that as pretty

1390
01:10:39,750 --> 01:10:45,300
rare that you're doing something that

1391
01:10:41,639 --> 01:10:48,078
involves strictly one or the other in a

1392
01:10:45,300 --> 01:10:48,079
really pure sense

1393
01:11:37,908 --> 01:11:41,000
have you changed the way the particles

1394
01:11:39,829 --> 01:11:43,460
look if so push them

1395
01:11:41,000 --> 01:11:45,170
no we haven't gotten to anything like

1396
01:11:43,460 --> 01:11:49,369
that yet we were just playing around

1397
01:11:45,170 --> 01:11:52,158
with how we were going to make the

1398
01:11:49,369 --> 01:11:54,319
particle system code

1399
01:11:52,158 --> 01:11:55,638
Cindy friendly just generally how we're

1400
01:11:54,319 --> 01:11:57,109
going to write the particle system code

1401
01:11:55,639 --> 01:11:58,730
now in the actual particle system thing

1402
01:11:57,109 --> 01:12:00,500
and I kind of we're just playing with a

1403
01:11:58,729 --> 01:12:03,229
ways to make it so that you could

1404
01:12:00,500 --> 01:12:04,550
effectively write nan Cindy looking code

1405
01:12:03,229 --> 01:12:07,238
but still have an update for our

1406
01:12:04,550 --> 01:12:07,239
particles at a time

1407
01:12:52,969 --> 01:12:57,920
miss children often write code using

1408
01:12:55,609 --> 01:12:59,630
Cindy without a nonce MD implementation

1409
01:12:57,920 --> 01:13:06,680
in the same operation of the santur

1410
01:12:59,630 --> 01:13:12,890
fission yeah I do generally speaking

1411
01:13:06,680 --> 01:13:16,150
like Cindy isn't super hard to debug if

1412
01:13:12,890 --> 01:13:18,230
you're not doing something too crazy so

1413
01:13:16,149 --> 01:13:20,029
for something like a particle system

1414
01:13:18,229 --> 01:13:25,789
where it's really easy to inspect what's

1415
01:13:20,029 --> 01:13:31,099
going on I would not care if that made

1416
01:13:25,789 --> 01:13:32,779
if that makes sense i but for other

1417
01:13:31,100 --> 01:13:35,060
things like when we did the rasterizer

1418
01:13:32,779 --> 01:13:36,619
for example there's enough kind of

1419
01:13:35,060 --> 01:13:39,260
twitchiness and how that sort of thing

1420
01:13:36,619 --> 01:13:40,640
works and a lot of things to get right

1421
01:13:39,260 --> 01:13:42,800
that are kind of subtle and cannot

1422
01:13:40,640 --> 01:13:46,130
really be inspected directly visually

1423
01:13:42,800 --> 01:13:47,510
very easily I mean that inspected

1424
01:13:46,130 --> 01:13:50,239
nonvisually like just looking at the

1425
01:13:47,510 --> 01:13:54,920
numbers in debugger so I would take a

1426
01:13:50,238 --> 01:13:57,009
lot more precautions there if that makes

1427
01:13:54,920 --> 01:13:57,010
sense

1428
01:14:10,420 --> 01:14:14,470
for $2.99 if ji releases before the end

1429
01:14:13,180 --> 01:14:15,970
of this project and it's good enough

1430
01:14:14,470 --> 01:14:18,909
would you ever consider rewriting the

1431
01:14:15,970 --> 01:14:20,710
product in ji no I wouldn't rewrite this

1432
01:14:18,909 --> 01:14:22,479
product in ji because you know this was

1433
01:14:20,710 --> 01:14:24,039
started and see and we'll ship it and

1434
01:14:22,479 --> 01:14:28,659
see because it was designed to show how

1435
01:14:24,039 --> 01:14:30,970
to do C programming the reasons not to

1436
01:14:28,659 --> 01:14:33,729
rewrite it in joy or actually because

1437
01:14:30,970 --> 01:14:36,490
there's no point in me we writing

1438
01:14:33,729 --> 01:14:38,949
something enjoy on stream because I

1439
01:14:36,489 --> 01:14:41,079
don't know how to program Jai right like

1440
01:14:38,949 --> 01:14:42,579
there's no need to watch me program in

1441
01:14:41,079 --> 01:14:42,850
Jai because I don't know how to program

1442
01:14:42,579 --> 01:14:46,390
in it

1443
01:14:42,850 --> 01:14:48,610
so I wouldn't be showing you how to do

1444
01:14:46,390 --> 01:14:50,650
anything that wouldn't be what you would

1445
01:14:48,609 --> 01:14:52,989
normally just try to do probably if you

1446
01:14:50,649 --> 01:14:54,939
started doing it yourself it's the point

1447
01:14:52,989 --> 01:14:56,800
of handmade here us show how to program

1448
01:14:54,939 --> 01:14:59,739
in C by someone who's programmed a lot

1449
01:14:56,800 --> 01:15:01,900
in C and you know might know things that

1450
01:14:59,739 --> 01:15:03,670
a beginner doesn't know but I'm not

1451
01:15:01,899 --> 01:15:05,170
going to know things to be a gibe agin

1452
01:15:03,670 --> 01:15:09,789
er doesn't know because I will have been

1453
01:15:05,170 --> 01:15:11,319
a J I'd beginner so you know it I think

1454
01:15:09,789 --> 01:15:13,960
it only really makes sense to do

1455
01:15:11,319 --> 01:15:16,719
something like a handmade hero in ji if

1456
01:15:13,960 --> 01:15:20,739
you're a ji expert at which point then

1457
01:15:16,720 --> 01:15:22,030
you know it makes a little more sense so

1458
01:15:20,739 --> 01:15:23,500
you know I have a ton of experience

1459
01:15:22,029 --> 01:15:25,659
programming and C I have no experience

1460
01:15:23,500 --> 01:15:27,460
for a min ji so I feel like it makes

1461
01:15:25,659 --> 01:15:29,979
sense for me to stream showing how to

1462
01:15:27,460 --> 01:15:33,970
program C code or with a little C++

1463
01:15:29,979 --> 01:15:37,419
thrown in then it does too for me to

1464
01:15:33,970 --> 01:15:38,650
stream ji code which you know I've still

1465
01:15:37,420 --> 01:15:41,699
have never written a line in I don't

1466
01:15:38,649 --> 01:15:41,699
even have a copy of it

1467
01:15:47,710 --> 01:15:54,130
so is it hard to debug Cindy in Linux uh

1468
01:15:56,408 --> 01:16:09,609
that I don't know you know I really

1469
01:16:04,639 --> 01:16:09,609
don't know that's a very good question I

1470
01:16:14,828 --> 01:16:20,448
seem to recall there being an annoying

1471
01:16:18,050 --> 01:16:22,969
part of Symbian Linux where it doesn't

1472
01:16:20,448 --> 01:16:24,768
have the struct unions so you can't

1473
01:16:22,969 --> 01:16:26,389
inspect the values as different types or

1474
01:16:24,769 --> 01:16:27,920
something weird like that I remember

1475
01:16:26,389 --> 01:16:32,210
there being some a little annoyances

1476
01:16:27,920 --> 01:16:34,250
with it vaguely but I don't know I don't

1477
01:16:32,210 --> 01:16:36,590
really remember I'm sorry I don't often

1478
01:16:34,250 --> 01:16:38,238
do debugging in Linux because the

1479
01:16:36,590 --> 01:16:41,420
debugging is so bad on Linux normally

1480
01:16:38,238 --> 01:16:44,919
that I don't really know if Cindy is

1481
01:16:41,420 --> 01:16:44,920
appreciably worse in any particular way

1482
01:17:04,199 --> 01:17:08,189
it would be cool to see a stream or two

1483
01:17:06,329 --> 01:17:12,269
of a good programmer going through the

1484
01:17:08,189 --> 01:17:17,069
motions of learning ji I yeah that that

1485
01:17:12,270 --> 01:17:18,720
might be true but again that would kind

1486
01:17:17,069 --> 01:17:19,949
of be like a not really a handmade hero

1487
01:17:18,720 --> 01:17:24,090
a kind of thing right that'd be sort of

1488
01:17:19,949 --> 01:17:25,829
a separate stream that was unrelated but

1489
01:17:24,090 --> 01:17:28,440
I I agree like you know it probably

1490
01:17:25,829 --> 01:17:30,869
useful for John to see too like if

1491
01:17:28,439 --> 01:17:35,429
various programmers streamed their first

1492
01:17:30,869 --> 01:17:38,849
programming experiences in ji it would

1493
01:17:35,430 --> 01:17:41,190
definitely be the case that he could

1494
01:17:38,850 --> 01:17:43,170
probably learn some things about at the

1495
01:17:41,189 --> 01:17:44,639
very least how to document the language

1496
01:17:43,170 --> 01:17:46,289
well because you could see what people

1497
01:17:44,640 --> 01:17:49,110
weren't understanding or weren't doing

1498
01:17:46,289 --> 01:17:51,060
properly but he might also learn some

1499
01:17:49,109 --> 01:17:52,469
things about you know how to improve the

1500
01:17:51,060 --> 01:17:54,660
language to where a DC is like Oh

1501
01:17:52,470 --> 01:17:56,010
someone did some cool things here and I

1502
01:17:54,659 --> 01:17:57,930
didn't think about those so I didn't

1503
01:17:56,010 --> 01:17:59,789
really support them as well or you know

1504
01:17:57,930 --> 01:18:01,800
this person came up with something

1505
01:17:59,789 --> 01:18:03,600
that's like really hard for language to

1506
01:18:01,800 --> 01:18:09,270
do so let me try and prove it so you

1507
01:18:03,600 --> 01:18:10,770
know I could easily see yeah I could

1508
01:18:09,270 --> 01:18:13,620
easily see that being a good thing in

1509
01:18:10,770 --> 01:18:14,670
general I totally agree I just don't

1510
01:18:13,619 --> 01:18:15,960
like I said I don't think I has anything

1511
01:18:14,670 --> 01:18:19,079
do with handmade hero but it's

1512
01:18:15,960 --> 01:18:26,609
definitely there's definitely a lot of

1513
01:18:19,079 --> 01:18:29,329
good that could come of that as well so

1514
01:18:26,609 --> 01:18:29,329
alright

1515
01:18:34,189 --> 01:18:37,859
all right thank you everyone for joining

1516
01:18:36,210 --> 01:18:39,720
me for the episode of handmade hero so I

1517
01:18:37,859 --> 01:18:42,569
put our coating with you as always if

1518
01:18:39,720 --> 01:18:43,920
you would like to follow along with the

1519
01:18:42,569 --> 01:18:45,599
series at home you can always peer to

1520
01:18:43,920 --> 01:18:47,520
the game on handmade hero or it comes

1521
01:18:45,600 --> 01:18:49,140
with a source code I updated every night

1522
01:18:47,520 --> 01:18:51,180
so you can play around with whatever

1523
01:18:49,140 --> 01:18:53,820
we're doing on the stream in the comfort

1524
01:18:51,180 --> 01:18:55,740
of your own compiler we also have a

1525
01:18:53,819 --> 01:18:57,509
forum site you can go to if you want to

1526
01:18:55,739 --> 01:18:58,590
ask questions we have a patreon page and

1527
01:18:57,510 --> 01:19:00,840
go to if you want support our video

1528
01:18:58,590 --> 01:19:03,390
series a schedule bot the tweets

1529
01:19:00,840 --> 01:19:05,069
schedule you and an episode guide that

1530
01:19:03,390 --> 01:19:05,700
you can go to to catch up on past

1531
01:19:05,069 --> 01:19:07,500
episodes

1532
01:19:05,699 --> 01:19:10,199
I'll be back here same time same place

1533
01:19:07,500 --> 01:19:11,550
tomorrow night to play around a little

1534
01:19:10,199 --> 01:19:13,529
bit more with that soon decode until

1535
01:19:11,550 --> 01:19:15,180
then have fun program everyone and I

1536
01:19:13,529 --> 01:19:17,509
will see you guys on the Internet

1537
01:19:15,180 --> 01:19:17,510
take it easy

