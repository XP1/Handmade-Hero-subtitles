1
00:00:00,160 --> 00:00:05,440
all right hello everyone and welcome to

2
00:00:03,759 --> 00:00:06,000
handmade hero sure we code a complete

3
00:00:05,440 --> 00:00:09,359
game

4
00:00:06,000 --> 00:00:13,199
live on stream uh i am

5
00:00:09,359 --> 00:00:15,119
going to just go ahead and do whatever i

6
00:00:13,199 --> 00:00:18,960
want today because i don't think

7
00:00:15,119 --> 00:00:22,000
we had anything actually on the table

8
00:00:18,960 --> 00:00:22,960
um i could be wrong about that but i

9
00:00:22,000 --> 00:00:25,278
think we pretty much

10
00:00:22,960 --> 00:00:26,560
we had a lighting bug we wanted to fix

11
00:00:25,278 --> 00:00:28,160
and we fixed it

12
00:00:26,559 --> 00:00:30,239
and we weren't really working on the

13
00:00:28,160 --> 00:00:33,520
lighting right now so i don't think

14
00:00:30,239 --> 00:00:36,640
we need to do a lighting quality pass

15
00:00:33,520 --> 00:00:38,960
which is what we want to do eventually

16
00:00:36,640 --> 00:00:40,480
so i don't know what i want to do today

17
00:00:38,960 --> 00:00:41,200
because we didn't have anything

18
00:00:40,479 --> 00:00:44,000
scheduled

19
00:00:41,200 --> 00:00:45,600
uh but if we're just running uh you know

20
00:00:44,000 --> 00:00:46,479
we're kind of at a state where i feel

21
00:00:45,600 --> 00:00:48,079
like just

22
00:00:46,479 --> 00:00:49,919
just throwing in a bunch of gameplay

23
00:00:48,079 --> 00:00:51,520
stuff which is not my thing

24
00:00:49,920 --> 00:00:53,359
um those of you coming from john's

25
00:00:51,520 --> 00:00:55,520
stream know john

26
00:00:53,359 --> 00:00:56,799
i mean john's like one of the he's not

27
00:00:55,520 --> 00:00:58,079
one of the best game designers in the

28
00:00:56,799 --> 00:00:59,119
world he's just the best games around

29
00:00:58,079 --> 00:01:00,558
the world i don't know anyone who

30
00:00:59,119 --> 00:01:02,718
designs games

31
00:01:00,558 --> 00:01:04,478
as well as he does even if you don't

32
00:01:02,719 --> 00:01:06,960
like the types of style

33
00:01:04,478 --> 00:01:10,319
stuff games he makes it's kind of nuts

34
00:01:06,959 --> 00:01:10,319
just how well designed they are

35
00:01:10,640 --> 00:01:13,680
so i don't really do game design stuff

36
00:01:13,359 --> 00:01:16,159
but

37
00:01:13,680 --> 00:01:18,560
i want to basically you know be able to

38
00:01:16,159 --> 00:01:21,118
finish up our engine and call it done

39
00:01:18,560 --> 00:01:22,159
uh and so in order to do that i need a

40
00:01:21,118 --> 00:01:24,719
game in here

41
00:01:22,159 --> 00:01:28,000
uh and so you know we've got pretty much

42
00:01:24,719 --> 00:01:30,158
everything else that we really need

43
00:01:28,000 --> 00:01:31,040
we've got as much testing as we kind of

44
00:01:30,159 --> 00:01:34,799
can

45
00:01:31,040 --> 00:01:37,280
i think without actually putting in

46
00:01:34,799 --> 00:01:39,600
gameplay stuff that we can then say like

47
00:01:37,280 --> 00:01:39,599
you know

48
00:01:39,680 --> 00:01:43,360
is this relatively complete are all the

49
00:01:42,000 --> 00:01:44,560
things we need to have happening in a

50
00:01:43,359 --> 00:01:47,200
game happening

51
00:01:44,560 --> 00:01:49,840
and so on the only way to really get to

52
00:01:47,200 --> 00:01:52,079
that point is to put it in

53
00:01:49,840 --> 00:01:52,960
so i think what i'll start doing is just

54
00:01:52,078 --> 00:01:57,438
throwing in

55
00:01:52,959 --> 00:02:00,078
game stuff that i think uh would

56
00:01:57,438 --> 00:02:01,039
would test out you know uh gameplay

57
00:02:00,078 --> 00:02:04,399
stuff

58
00:02:01,040 --> 00:02:05,920
in in whatever order i want and

59
00:02:04,399 --> 00:02:07,519
that will allow us to basically clean up

60
00:02:05,920 --> 00:02:09,360
the entity side of things

61
00:02:07,519 --> 00:02:10,560
and and get to a place that we're happy

62
00:02:09,360 --> 00:02:13,120
with it uh

63
00:02:10,560 --> 00:02:14,719
and once we feel like all of that stuff

64
00:02:13,120 --> 00:02:15,439
has solidified and we're just like all

65
00:02:14,719 --> 00:02:17,919
right this

66
00:02:15,439 --> 00:02:19,039
is completely representative of of you

67
00:02:17,919 --> 00:02:21,439
know a real

68
00:02:19,039 --> 00:02:23,280
game there's nothing missing out of here

69
00:02:21,439 --> 00:02:26,560
uh that we think

70
00:02:23,280 --> 00:02:29,199
uh is important then what i can do

71
00:02:26,560 --> 00:02:30,878
is flop back to doing pass on all the

72
00:02:29,199 --> 00:02:34,000
stuff we want to do quality wise like

73
00:02:30,878 --> 00:02:35,518
uh like lighting and so on uh where we

74
00:02:34,000 --> 00:02:36,959
where we kind of left stuff on the table

75
00:02:35,519 --> 00:02:38,959
where we're like we gotta go clean up

76
00:02:36,959 --> 00:02:42,959
you know make this look better make this

77
00:02:38,959 --> 00:02:42,959
uh faster do whatever right

78
00:02:43,039 --> 00:02:51,840
so that's what we need to do um and we

79
00:02:46,159 --> 00:02:51,840
just have to

80
00:02:52,400 --> 00:02:56,159
uh we just have to start so what i'd

81
00:02:55,360 --> 00:02:58,959
like to do

82
00:02:56,159 --> 00:02:59,598
is uh if you kind of see what happens

83
00:02:58,959 --> 00:03:02,878
when you hop

84
00:02:59,598 --> 00:03:04,238
out here we've got sort of this idea

85
00:03:02,878 --> 00:03:07,280
that you know you can go

86
00:03:04,239 --> 00:03:08,480
downstairs and you can go into like a

87
00:03:07,280 --> 00:03:11,360
little dungeon area

88
00:03:08,479 --> 00:03:13,199
and so on uh what i'd like to do is

89
00:03:11,360 --> 00:03:15,920
start

90
00:03:13,199 --> 00:03:16,839
by adding for example like some doors

91
00:03:15,919 --> 00:03:19,919
that are

92
00:03:16,840 --> 00:03:20,560
locked uh and then a way to unlock the

93
00:03:19,919 --> 00:03:22,719
doors

94
00:03:20,560 --> 00:03:24,318
so the reason that i want to do that is

95
00:03:22,719 --> 00:03:26,400
because when you

96
00:03:24,318 --> 00:03:28,878
look at games of this style that

97
00:03:26,400 --> 00:03:32,080
typically the way that they work

98
00:03:28,878 --> 00:03:35,039
is when you enter a area you

99
00:03:32,080 --> 00:03:37,360
are forced to confront something uh in

100
00:03:35,039 --> 00:03:39,120
order to proceed from that area

101
00:03:37,360 --> 00:03:41,200
that isn't just about getting

102
00:03:39,120 --> 00:03:43,439
antagonized by monsters

103
00:03:41,199 --> 00:03:44,399
and what i mean by that is that if you

104
00:03:43,439 --> 00:03:46,400
look at games

105
00:03:44,400 --> 00:03:47,439
um like oh does someone say steal his

106
00:03:46,400 --> 00:03:50,799
head okay

107
00:03:47,439 --> 00:03:54,158
um i will steal the head of the monster

108
00:03:50,799 --> 00:03:55,920
um if you look at games that

109
00:03:54,158 --> 00:03:58,560
that are like this like zelda or binding

110
00:03:55,919 --> 00:04:00,479
of isaac what happens in those games is

111
00:03:58,560 --> 00:04:02,400
you enter a room like a typical example

112
00:04:00,479 --> 00:04:03,280
be i hop through here and i'm in a new

113
00:04:02,400 --> 00:04:06,080
room

114
00:04:03,280 --> 00:04:08,158
and uh in those games it's very extreme

115
00:04:06,080 --> 00:04:10,239
not only does the door in front of me

116
00:04:08,158 --> 00:04:12,719
lock but the door behind me

117
00:04:10,239 --> 00:04:14,239
actually locks i don't know that i want

118
00:04:12,719 --> 00:04:16,000
to go that far uh

119
00:04:14,239 --> 00:04:17,680
i don't think i care about that for this

120
00:04:16,000 --> 00:04:19,759
game but i i want

121
00:04:17,680 --> 00:04:20,879
this door to lock right so all right i

122
00:04:19,759 --> 00:04:22,639
mean another way to say it would be that

123
00:04:20,879 --> 00:04:23,439
door should just be locked so you enter

124
00:04:22,639 --> 00:04:26,000
this room

125
00:04:23,439 --> 00:04:27,519
and you have to do something in the room

126
00:04:26,000 --> 00:04:31,120
in order for the door

127
00:04:27,519 --> 00:04:34,399
like here to uh

128
00:04:31,120 --> 00:04:36,399
to to let you pass so i i just want to

129
00:04:34,399 --> 00:04:39,918
put a door there

130
00:04:36,399 --> 00:04:43,519
and i want that door to obstruct right

131
00:04:39,918 --> 00:04:45,680
the movement through the uh

132
00:04:43,519 --> 00:04:47,359
i want the door to obstruct the movement

133
00:04:45,680 --> 00:04:49,360
into the next area

134
00:04:47,360 --> 00:04:50,800
uh until you've done something in this

135
00:04:49,360 --> 00:04:53,120
room so

136
00:04:50,800 --> 00:04:54,960
let's just start there and that'll also

137
00:04:53,120 --> 00:04:56,478
uh we can go do some cleanup that we may

138
00:04:54,959 --> 00:04:59,039
do for a while and that is that

139
00:04:56,478 --> 00:04:59,839
if you'll notice our transaction occupy

140
00:04:59,040 --> 00:05:02,400
points

141
00:04:59,839 --> 00:05:03,918
we broke uh when we were doing our

142
00:05:02,399 --> 00:05:05,038
entity system stuff you can see i can

143
00:05:03,918 --> 00:05:07,839
hop onto these trees

144
00:05:05,038 --> 00:05:09,599
which i should not be able to do and so

145
00:05:07,839 --> 00:05:10,719
this will have us fix that as well so

146
00:05:09,600 --> 00:05:13,520
we'll both fix that

147
00:05:10,720 --> 00:05:14,560
and just have the little uh you know

148
00:05:13,519 --> 00:05:16,079
some kind of doors

149
00:05:14,560 --> 00:05:19,120
that you can't get by and then they can

150
00:05:16,079 --> 00:05:22,000
go down right

151
00:05:19,120 --> 00:05:23,600
um so let's do that uh what i want to do

152
00:05:22,000 --> 00:05:25,600
first is just take a look at our

153
00:05:23,600 --> 00:05:28,320
transactional occupy code

154
00:05:25,600 --> 00:05:29,199
and i would like to fix it so it's not

155
00:05:28,319 --> 00:05:31,680
broken

156
00:05:29,199 --> 00:05:32,478
uh that should be the easiest possible

157
00:05:31,680 --> 00:05:36,079
thing

158
00:05:32,478 --> 00:05:38,079
and uh you know

159
00:05:36,079 --> 00:05:39,279
we if we can't if we can't do that we

160
00:05:38,079 --> 00:05:40,800
certainly can't make a door

161
00:05:39,279 --> 00:05:42,719
because you just hop right through the

162
00:05:40,800 --> 00:05:45,199
door so

163
00:05:42,720 --> 00:05:46,639
the way that this stuff works is again

164
00:05:45,199 --> 00:05:49,600
it doesn't actually use

165
00:05:46,639 --> 00:05:51,038
a collision detector for this it's not

166
00:05:49,600 --> 00:05:54,000
collision code

167
00:05:51,038 --> 00:05:55,759
uh what it actually does is it has this

168
00:05:54,000 --> 00:05:57,759
sort of transactional occupation thing

169
00:05:55,759 --> 00:06:00,800
that we wrote a very very long

170
00:05:57,759 --> 00:06:01,600
time ago very early on in handmade hero

171
00:06:00,800 --> 00:06:03,199
development

172
00:06:01,600 --> 00:06:04,639
we've got this transactional occupy

173
00:06:03,199 --> 00:06:06,240
thing and what you do is you pass the

174
00:06:04,639 --> 00:06:07,439
simulation region that this is happening

175
00:06:06,240 --> 00:06:08,639
in which again is just the thing that

176
00:06:07,439 --> 00:06:11,839
contains all the entities

177
00:06:08,639 --> 00:06:15,280
and what they're doing right um

178
00:06:11,839 --> 00:06:16,719
and we pass the entity that is trying to

179
00:06:15,279 --> 00:06:18,959
do this so the entity

180
00:06:16,720 --> 00:06:20,080
you know this particular entity wants to

181
00:06:18,959 --> 00:06:22,560
occupy a particular

182
00:06:20,079 --> 00:06:24,719
square on the board it's trying to like

183
00:06:22,560 --> 00:06:27,519
hop forward or something

184
00:06:24,720 --> 00:06:29,280
and then we pass like a traversible that

185
00:06:27,519 --> 00:06:31,839
it's trying to

186
00:06:29,279 --> 00:06:32,318
use and a traversable that it wants it

187
00:06:31,839 --> 00:06:34,799
to

188
00:06:32,319 --> 00:06:37,360
be right so it's basically saying i want

189
00:06:34,800 --> 00:06:39,840
to go from here to here right

190
00:06:37,360 --> 00:06:40,879
and you can see uh sort of how we work

191
00:06:39,839 --> 00:06:43,918
on that code

192
00:06:40,879 --> 00:06:45,360
in this in this routine so you know the

193
00:06:43,918 --> 00:06:47,599
way this works is first it

194
00:06:45,360 --> 00:06:48,720
grabs the traversable that's saying it

195
00:06:47,600 --> 00:06:51,439
wants to go to

196
00:06:48,720 --> 00:06:51,919
which is this one you can see it looking

197
00:06:51,439 --> 00:06:53,680
to see

198
00:06:51,918 --> 00:06:54,959
whether there's anyone occupying that

199
00:06:53,680 --> 00:06:57,759
traversable

200
00:06:54,959 --> 00:06:58,239
um assuming that there wasn't it will

201
00:06:57,759 --> 00:07:00,560
then

202
00:06:58,240 --> 00:07:01,280
grab the traversible that it's coming

203
00:07:00,560 --> 00:07:04,160
from

204
00:07:01,279 --> 00:07:04,799
again which is this one uh it will say

205
00:07:04,160 --> 00:07:06,880
okay

206
00:07:04,800 --> 00:07:08,879
go ahead and take me off of that one so

207
00:07:06,879 --> 00:07:10,639
no one's occupying that one now

208
00:07:08,879 --> 00:07:12,079
overwrite it with the one that i'm

209
00:07:10,639 --> 00:07:15,038
actually going

210
00:07:12,079 --> 00:07:15,758
to and mark the fact that the one that

211
00:07:15,038 --> 00:07:19,598
i'm going to

212
00:07:15,759 --> 00:07:22,800
now has me occupying right

213
00:07:19,598 --> 00:07:31,680
so it's really that's all there is to it

214
00:07:22,800 --> 00:07:33,840
right it's pretty straightforward

215
00:07:31,680 --> 00:07:36,240
most people probably don't remember that

216
00:07:33,839 --> 00:07:39,359
but that's what's happening

217
00:07:36,240 --> 00:07:41,519
so what we want to do now

218
00:07:39,360 --> 00:07:42,400
uh is take a look at why this isn't

219
00:07:41,519 --> 00:07:44,318
working

220
00:07:42,399 --> 00:07:45,839
we know that we're calling transactional

221
00:07:44,319 --> 00:07:48,960
occupy

222
00:07:45,839 --> 00:07:50,878
and we you know uh

223
00:07:48,959 --> 00:07:52,399
at least well you know what i guess we

224
00:07:50,879 --> 00:07:54,639
shouldn't assume um

225
00:07:52,399 --> 00:07:56,560
let's actually see but i'm assuming we

226
00:07:54,639 --> 00:07:58,240
call transactional occupy so let's

227
00:07:56,560 --> 00:08:00,879
double check and make sure that we

228
00:07:58,240 --> 00:08:00,879
actually do

229
00:08:01,759 --> 00:08:04,080
oops

230
00:08:06,240 --> 00:08:10,639
so here are the places in the code where

231
00:08:07,839 --> 00:08:13,758
we call transactional occupy

232
00:08:10,639 --> 00:08:14,639
that's the actual function uh here is us

233
00:08:13,759 --> 00:08:18,319
calling it

234
00:08:14,639 --> 00:08:21,519
in a function

235
00:08:18,319 --> 00:08:22,960
where we call update and render entities

236
00:08:21,519 --> 00:08:27,038
okay so this is just

237
00:08:22,959 --> 00:08:29,439
us doing okay so here is just

238
00:08:27,038 --> 00:08:30,159
if you're using boost squares these were

239
00:08:29,439 --> 00:08:33,360
just things like

240
00:08:30,160 --> 00:08:34,158
little teleporters uh we don't even have

241
00:08:33,360 --> 00:08:36,879
those

242
00:08:34,158 --> 00:08:38,000
in here right now so there's probably no

243
00:08:36,879 --> 00:08:40,000
chance that that

244
00:08:38,000 --> 00:08:42,479
has anything to do with anything we care

245
00:08:40,000 --> 00:08:46,000
about for this

246
00:08:42,479 --> 00:08:48,800
um here is the code inside the brain

247
00:08:46,000 --> 00:08:49,278
uh of the entity which is exactly what

248
00:08:48,799 --> 00:08:50,958
we

249
00:08:49,278 --> 00:08:53,120
you know would assume is happening for

250
00:08:50,958 --> 00:08:55,919
the brain uh the hero

251
00:08:53,120 --> 00:08:56,480
so this is this is the code we actually

252
00:08:55,919 --> 00:08:58,879
care about

253
00:08:56,480 --> 00:09:00,959
you can see uh the get close traversable

254
00:08:58,879 --> 00:09:01,679
code is doing this transactional occupy

255
00:09:00,958 --> 00:09:03,039
call

256
00:09:01,679 --> 00:09:04,958
so that's the verification that it's

257
00:09:03,039 --> 00:09:07,278
looking for that's actually being called

258
00:09:04,958 --> 00:09:08,958
um you can see here we've also got the

259
00:09:07,278 --> 00:09:12,480
snake which is the little guy

260
00:09:08,958 --> 00:09:15,599
hopping around right now um

261
00:09:12,480 --> 00:09:16,959
there's you know

262
00:09:15,600 --> 00:09:18,800
there's calls everywhere we think there

263
00:09:16,958 --> 00:09:22,559
should be so so i

264
00:09:18,799 --> 00:09:24,879
you know i don't see don't see any

265
00:09:22,559 --> 00:09:28,319
evidence that there's any issues here

266
00:09:24,879 --> 00:09:31,278
um and so let me just see

267
00:09:28,320 --> 00:09:33,040
if actually i don't actually even know

268
00:09:31,278 --> 00:09:34,958
maybe we didn't break this code

269
00:09:33,039 --> 00:09:36,480
let's see if we can hop onto the same

270
00:09:34,958 --> 00:09:40,479
square as

271
00:09:36,480 --> 00:09:41,200
one of the um of one of the enemies if

272
00:09:40,480 --> 00:09:43,039
we did

273
00:09:41,200 --> 00:09:44,480
then actually the code is not broken it

274
00:09:43,039 --> 00:09:46,639
works just fine and the only thing is

275
00:09:44,480 --> 00:09:49,200
we're probably not removing

276
00:09:46,639 --> 00:09:51,199
uh points with trees like we're probably

277
00:09:49,200 --> 00:09:51,839
not marking trees as being on points or

278
00:09:51,200 --> 00:09:54,240
something

279
00:09:51,839 --> 00:09:55,360
right okay yeah so i can't hop onto the

280
00:09:54,240 --> 00:09:57,200
same square as sky

281
00:09:55,360 --> 00:09:58,720
so actually our code for transactional

282
00:09:57,200 --> 00:10:00,080
occupation is is not broken this

283
00:09:58,720 --> 00:10:01,920
probably isn't even a bug

284
00:10:00,080 --> 00:10:03,120
it's probably just we don't add points

285
00:10:01,919 --> 00:10:06,559
for the trees

286
00:10:03,120 --> 00:10:10,639
right yeah i can't i can't hop onto this

287
00:10:06,559 --> 00:10:13,759
this square at all um

288
00:10:10,639 --> 00:10:16,399
so i guess i would say

289
00:10:13,759 --> 00:10:18,319
probably no bug it's probably just when

290
00:10:16,399 --> 00:10:20,559
we were doing the room gen stuff

291
00:10:18,320 --> 00:10:22,320
we just hadn't gotten around to doing

292
00:10:20,559 --> 00:10:25,359
anything with the trees

293
00:10:22,320 --> 00:10:27,600
um aprons don't matter here because

294
00:10:25,360 --> 00:10:30,159
aprons aren't occupiable anyway

295
00:10:27,600 --> 00:10:30,800
so we're probably talking about in here

296
00:10:30,159 --> 00:10:33,439
uh

297
00:10:30,799 --> 00:10:34,719
at some point we're placing our trees

298
00:10:33,440 --> 00:10:37,760
and

299
00:10:34,720 --> 00:10:40,560
we let's see how we do

300
00:10:37,759 --> 00:10:40,559
that so

301
00:10:41,120 --> 00:10:48,799
here is our um our place tree

302
00:10:45,120 --> 00:10:52,240
call here and

303
00:10:48,799 --> 00:10:55,359
you know honestly it's

304
00:10:52,240 --> 00:10:58,480
probably just this there's two

305
00:10:55,360 --> 00:10:59,680
so so okay there's two ways we can do

306
00:10:58,480 --> 00:11:02,159
this

307
00:10:59,679 --> 00:11:03,679
one is we can have the tree occupy the

308
00:11:02,159 --> 00:11:05,360
square

309
00:11:03,679 --> 00:11:07,599
the other is we can just mark it as

310
00:11:05,360 --> 00:11:10,159
unoccupiable ever

311
00:11:07,600 --> 00:11:11,360
i don't know which one we want to do at

312
00:11:10,159 --> 00:11:12,799
the moment i'm just going to say it's

313
00:11:11,360 --> 00:11:14,320
unoccupiable

314
00:11:12,799 --> 00:11:16,639
but in the future we may want to say

315
00:11:14,320 --> 00:11:18,399
that the tree just occupies a square

316
00:11:16,639 --> 00:11:19,759
the reason i say that is because maybe

317
00:11:18,399 --> 00:11:21,839
we want you to be able to knock down

318
00:11:19,759 --> 00:11:25,919
trees

319
00:11:21,839 --> 00:11:28,640
eh i don't know right

320
00:11:25,919 --> 00:11:29,039
but at the moment um i'm just gonna say

321
00:11:28,639 --> 00:11:32,399
look

322
00:11:29,039 --> 00:11:36,480
if you place a tree uh

323
00:11:32,399 --> 00:11:42,958
you know then it's not open

324
00:11:36,480 --> 00:11:45,200
right uh trees block block your path

325
00:11:42,958 --> 00:11:46,399
so i'm assuming that was it i don't

326
00:11:45,200 --> 00:11:48,079
actually know

327
00:11:46,399 --> 00:11:49,679
but if i hop out here to the closest

328
00:11:48,078 --> 00:11:53,519
outdoor area

329
00:11:49,679 --> 00:11:53,519
um i'm assuming ooh

330
00:11:53,679 --> 00:11:59,679
that was weird why

331
00:11:57,120 --> 00:11:59,679
did that

332
00:12:02,720 --> 00:12:08,240
why did that not actually put the tree

333
00:12:06,000 --> 00:12:09,839
there

334
00:12:08,240 --> 00:12:11,919
well i wasn't expecting that i was

335
00:12:09,839 --> 00:12:13,839
assuming that we just wouldn't call this

336
00:12:11,919 --> 00:12:15,039
but it looks like because place tree is

337
00:12:13,839 --> 00:12:18,000
here

338
00:12:15,039 --> 00:12:21,759
add piece of clutter oh but actually we

339
00:12:18,000 --> 00:12:21,759
still need to place the tree

340
00:12:22,839 --> 00:12:28,720
interesting

341
00:12:25,519 --> 00:12:31,440
so we still need to place the tree

342
00:12:28,720 --> 00:12:32,399
and it looks like i guess so uh yeah hmm

343
00:12:31,440 --> 00:12:36,079
interesting

344
00:12:32,399 --> 00:12:37,919
so i guess we treat the tree placement

345
00:12:36,078 --> 00:12:40,319
so we actually set up this code

346
00:12:37,919 --> 00:12:40,719
specifically because we wanted the trees

347
00:12:40,320 --> 00:12:44,560
to

348
00:12:40,720 --> 00:12:46,879
not be the same as walls

349
00:12:44,559 --> 00:12:47,759
right like we don't do that for what

350
00:12:46,879 --> 00:12:49,360
interesting okay

351
00:12:47,759 --> 00:12:51,600
well i mean if that's the case that's

352
00:12:49,360 --> 00:12:52,000
fine all we need to do is just say this

353
00:12:51,600 --> 00:12:54,320
part

354
00:12:52,000 --> 00:12:55,679
here right where we do where we place

355
00:12:54,320 --> 00:12:58,959
the entity

356
00:12:55,679 --> 00:13:00,799
um this part here we

357
00:12:58,958 --> 00:13:02,719
we want to make sure that we actually

358
00:13:00,799 --> 00:13:06,000
mark it as occupied

359
00:13:02,720 --> 00:13:10,000
right and so here's the traversable

360
00:13:06,000 --> 00:13:10,000
reference that we've got um

361
00:13:13,120 --> 00:13:17,360
if we call jen energy at traversible

362
00:13:15,759 --> 00:13:19,360
that should have put the tree there

363
00:13:17,360 --> 00:13:21,759
and so i guess my only question is what

364
00:13:19,360 --> 00:13:23,360
happened in genetically traversable that

365
00:13:21,759 --> 00:13:27,039
should have actually just worked

366
00:13:23,360 --> 00:13:27,039
right here's occupying

367
00:13:31,278 --> 00:13:36,240
so that should have just worked right so

368
00:13:33,440 --> 00:13:37,760
something's a little busted here

369
00:13:36,240 --> 00:13:39,919
so it looks like we do actually have

370
00:13:37,759 --> 00:13:41,679
like a real bug um

371
00:13:39,919 --> 00:13:44,078
in this code because this should have

372
00:13:41,679 --> 00:13:47,519
worked here's the occupying

373
00:13:44,078 --> 00:13:48,319
um record where we're saying that this

374
00:13:47,519 --> 00:13:50,720
tree

375
00:13:48,320 --> 00:13:51,680
stick you know is on this particular

376
00:13:50,720 --> 00:13:54,079
point

377
00:13:51,679 --> 00:13:55,519
in the world and so that should have

378
00:13:54,078 --> 00:14:00,838
marked that point

379
00:13:55,519 --> 00:14:02,240
as being um as being occupied by the

380
00:14:00,839 --> 00:14:05,440
tree

381
00:14:02,240 --> 00:14:06,879
so i'm guessing that we do have some bug

382
00:14:05,440 --> 00:14:09,920
here that has to do

383
00:14:06,879 --> 00:14:12,000
with how we uh

384
00:14:09,919 --> 00:14:13,278
packed those or unpack those or

385
00:14:12,000 --> 00:14:17,120
something

386
00:14:13,278 --> 00:14:20,480
uh and we'll have to look at

387
00:14:17,120 --> 00:14:23,679
how that actually is is being unpacked

388
00:14:20,480 --> 00:14:24,320
in the entity code so like when we

389
00:14:23,679 --> 00:14:27,679
unpack

390
00:14:24,320 --> 00:14:29,519
an entity and

391
00:14:27,679 --> 00:14:32,239
uh again it's been a while since we've

392
00:14:29,519 --> 00:14:35,360
done this so i'm not actually sure

393
00:14:32,240 --> 00:14:39,360
what we were doing uh with these

394
00:14:35,360 --> 00:14:45,839
but oh and hey does this code still run

395
00:14:39,360 --> 00:14:45,839
this might be handy

396
00:14:49,278 --> 00:14:52,879
assume this just takes a uh

397
00:14:54,799 --> 00:14:59,838
so we don't really need this probably

398
00:15:03,039 --> 00:15:06,958
all right so if we change this push cube

399
00:15:05,600 --> 00:15:08,879
to

400
00:15:06,958 --> 00:15:10,319
actually just be the new way that we do

401
00:15:08,879 --> 00:15:11,679
push cubes

402
00:15:10,320 --> 00:15:13,600
then we should be able to run this as

403
00:15:11,679 --> 00:15:14,958
well which i think would be good uh

404
00:15:13,600 --> 00:15:18,560
we've got the

405
00:15:14,958 --> 00:15:21,919
the position value we

406
00:15:18,559 --> 00:15:24,958
have render group

407
00:15:21,919 --> 00:15:28,958
bitmap position uh

408
00:15:24,958 --> 00:15:34,239
radius color

409
00:15:28,958 --> 00:15:37,599
default cube uv layout and emission

410
00:15:34,240 --> 00:15:42,320
i assume we wanted these to be

411
00:15:37,600 --> 00:15:42,320
emitters i guess

412
00:15:44,958 --> 00:15:55,838
because we just want to be able to see

413
00:15:46,000 --> 00:15:55,839
them right

414
00:15:56,240 --> 00:15:59,198
am i wrong about this

415
00:16:01,039 --> 00:16:04,958
look that seems like something we do

416
00:16:02,799 --> 00:16:08,078
want i guess that may be too

417
00:16:04,958 --> 00:16:11,599
many is that actually complaining about

418
00:16:08,078 --> 00:16:11,599
how many quads there are total

419
00:16:14,480 --> 00:16:18,560
i guess that could be if we're rendering

420
00:16:17,120 --> 00:16:20,560
too many of them

421
00:16:18,559 --> 00:16:22,399
but you wouldn't think that would be the

422
00:16:20,559 --> 00:16:24,119
case right

423
00:16:22,399 --> 00:16:27,360
you would think that that would be

424
00:16:24,120 --> 00:16:37,839
relatively fine

425
00:16:27,360 --> 00:16:37,839
let me take a quick look i want to see

426
00:16:40,720 --> 00:16:44,560
we probably should have a thing where we

427
00:16:42,559 --> 00:16:46,319
just allow render buffers to get as

428
00:16:44,559 --> 00:16:47,838
large as we want them to be

429
00:16:46,320 --> 00:16:49,519
so that we can do stuff like debug

430
00:16:47,839 --> 00:16:51,519
rendering more easily

431
00:16:49,519 --> 00:16:54,240
oh no wasn't that it's just that

432
00:16:51,519 --> 00:16:55,519
emission can't be larger than one

433
00:16:54,240 --> 00:16:59,600
so i don't know what this value was

434
00:16:55,519 --> 00:16:59,600
doing before who knows

435
00:17:03,120 --> 00:17:06,720
all right so i think that was the only

436
00:17:05,119 --> 00:17:08,239
thing yeah

437
00:17:06,720 --> 00:17:10,400
so i'm going to leave that on for a

438
00:17:08,240 --> 00:17:11,519
little bit uh just because i want to

439
00:17:10,400 --> 00:17:15,120
make sure

440
00:17:11,519 --> 00:17:17,439
that we can see where these things are

441
00:17:15,119 --> 00:17:18,798
and hopefully we can get some

442
00:17:17,439 --> 00:17:22,640
information about

443
00:17:18,798 --> 00:17:23,599
uh what's going on so when i hop around

444
00:17:22,640 --> 00:17:25,919
on these

445
00:17:23,599 --> 00:17:26,719
uh what i should see is that they should

446
00:17:25,919 --> 00:17:28,880
be like

447
00:17:26,720 --> 00:17:30,160
you know if i look i don't know if i can

448
00:17:28,880 --> 00:17:31,360
actually see the ones unfortunately

449
00:17:30,160 --> 00:17:32,960
they're like underneath me

450
00:17:31,359 --> 00:17:34,959
maybe i should have made these like

451
00:17:32,960 --> 00:17:37,038
easier to view but

452
00:17:34,960 --> 00:17:38,240
i should see these change color when i'm

453
00:17:37,038 --> 00:17:41,119
on them so

454
00:17:38,240 --> 00:17:41,599
interestingly enough like even though i

455
00:17:41,119 --> 00:17:43,359
wasn't

456
00:17:41,599 --> 00:17:45,119
like i'm not seeing them change color

457
00:17:43,359 --> 00:17:45,839
underneath me which is a little bit

458
00:17:45,119 --> 00:17:47,839
weird because

459
00:17:45,839 --> 00:17:49,678
even as i hop forward i should see that

460
00:17:47,839 --> 00:17:51,678
so actually there's something a little

461
00:17:49,679 --> 00:17:52,798
bit weird here which is the traversable

462
00:17:51,679 --> 00:17:56,640
occupier

463
00:17:52,798 --> 00:18:01,839
here um is is not actually happening

464
00:17:56,640 --> 00:18:01,840
so it's worse than i thought um

465
00:18:05,200 --> 00:18:09,279
so that code even though we're calling

466
00:18:07,359 --> 00:18:11,839
the transactional occupy

467
00:18:09,279 --> 00:18:13,359
code somehow we're not like preserving

468
00:18:11,839 --> 00:18:14,959
these

469
00:18:13,359 --> 00:18:17,359
so i'm going to take a look at the sim

470
00:18:14,960 --> 00:18:20,798
region um unpacking code

471
00:18:17,359 --> 00:18:24,079
which when we unpack entities

472
00:18:20,798 --> 00:18:26,319
into the uh into the world

473
00:18:24,079 --> 00:18:27,359
we're supposed to keep track of those

474
00:18:26,319 --> 00:18:30,079
traversibles

475
00:18:27,359 --> 00:18:30,879
right and that doesn't look like it's

476
00:18:30,079 --> 00:18:33,439
happening

477
00:18:30,880 --> 00:18:34,160
and maybe we're doing a bad job of this

478
00:18:33,440 --> 00:18:37,279
uh

479
00:18:34,160 --> 00:18:39,679
it could be i'm not sure but we

480
00:18:37,279 --> 00:18:41,200
we you know it could be that we need to

481
00:18:39,679 --> 00:18:42,640
do this in a way that's better

482
00:18:41,200 --> 00:18:46,080
because you know what we're doing at the

483
00:18:42,640 --> 00:18:49,440
moment maybe isn't isn't the best idea

484
00:18:46,079 --> 00:18:49,439
um and in fact

485
00:18:51,440 --> 00:18:59,600
you know honestly thinking about that

486
00:18:56,960 --> 00:19:01,519
it kind of feels that way too like the

487
00:18:59,599 --> 00:19:03,359
way that we were doing this where you

488
00:19:01,519 --> 00:19:06,079
actually have to think about

489
00:19:03,359 --> 00:19:06,798
these traversable points as being things

490
00:19:06,079 --> 00:19:09,119
that were

491
00:19:06,798 --> 00:19:10,160
a sub like that were contained inside an

492
00:19:09,119 --> 00:19:12,399
entity

493
00:19:10,160 --> 00:19:14,080
is actually kind of dumb like there's no

494
00:19:12,400 --> 00:19:15,038
reason that these can't just be handled

495
00:19:14,079 --> 00:19:17,519
like everything else

496
00:19:15,038 --> 00:19:19,119
where they're just like hey they're just

497
00:19:17,519 --> 00:19:20,558
numbers assigned to these traversible

498
00:19:19,119 --> 00:19:23,439
points

499
00:19:20,558 --> 00:19:23,839
and you can either be on them or not and

500
00:19:23,440 --> 00:19:25,360
there's

501
00:19:23,839 --> 00:19:29,119
only a conflict if you have two people

502
00:19:25,359 --> 00:19:31,599
who try to be on one traversible

503
00:19:29,119 --> 00:19:33,038
that seems totally reasonable um so i'm

504
00:19:31,599 --> 00:19:36,159
not sure about

505
00:19:33,038 --> 00:19:37,519
that but we'll go ahead and and uh and

506
00:19:36,160 --> 00:19:38,240
take this one step at a time so i don't

507
00:19:37,519 --> 00:19:43,200
want to make

508
00:19:38,240 --> 00:19:45,200
uh any you know uh any sort of

509
00:19:43,200 --> 00:19:46,880
decision about it till i actually see

510
00:19:45,200 --> 00:19:49,120
what's happening

511
00:19:46,880 --> 00:19:51,600
um so what i'd like to do is go into the

512
00:19:49,119 --> 00:19:54,239
code that actually unpacks these guys

513
00:19:51,599 --> 00:19:54,240
so let me just

514
00:19:55,200 --> 00:19:58,400
let me just jump over there

515
00:19:58,880 --> 00:20:03,200
uh nope that's what we want

516
00:20:04,558 --> 00:20:08,480
so here you can see where we take an

517
00:20:07,279 --> 00:20:11,119
entity

518
00:20:08,480 --> 00:20:11,839
and we do an acquire unpacked entity

519
00:20:11,119 --> 00:20:14,959
slot

520
00:20:11,839 --> 00:20:18,240
we unpack the entity we fill it

521
00:20:14,960 --> 00:20:20,880
and we register it um

522
00:20:18,240 --> 00:20:21,440
what you can see here is that the

523
00:20:20,880 --> 00:20:24,640
register

524
00:20:21,440 --> 00:20:26,240
entity call is really the only thing uh

525
00:20:24,640 --> 00:20:29,280
that's happening

526
00:20:26,240 --> 00:20:29,679
looking in here nobody preserves these

527
00:20:29,279 --> 00:20:31,918
so

528
00:20:29,679 --> 00:20:32,798
so there was a bug in here which is just

529
00:20:31,919 --> 00:20:34,559
that when we

530
00:20:32,798 --> 00:20:36,879
redid this and we may have even said it

531
00:20:34,558 --> 00:20:41,519
at the time it may be a known bug

532
00:20:36,880 --> 00:20:43,840
um we don't on we don't unpack occupancy

533
00:20:41,519 --> 00:20:46,480
right we're just straight up not

534
00:20:43,839 --> 00:20:50,798
unpacking occupancy

535
00:20:46,480 --> 00:21:03,839
so i think what we want to do here

536
00:20:50,798 --> 00:21:03,839
i would assume

537
00:21:07,359 --> 00:21:15,279
is just leave occupancy raw

538
00:21:10,798 --> 00:21:15,279
so if i go to entity here

539
00:21:15,359 --> 00:21:22,240
uh and we that is not entity

540
00:21:19,919 --> 00:21:23,600
there we go oh it's just jumping to the

541
00:21:22,240 --> 00:21:26,720
yeah sorry

542
00:21:23,599 --> 00:21:28,798
uh i i do have a request in for the four

543
00:21:26,720 --> 00:21:30,079
coder jump stuff to not do that but we

544
00:21:28,798 --> 00:21:32,240
haven't gotten there yet

545
00:21:30,079 --> 00:21:33,759
so if i jump into entity and we take a

546
00:21:32,240 --> 00:21:36,798
look at what's happening here

547
00:21:33,759 --> 00:21:44,240
we have our traversibles

548
00:21:36,798 --> 00:21:47,359
and they

549
00:21:44,240 --> 00:21:49,440
look like this which is stupid like

550
00:21:47,359 --> 00:21:51,038
there should not be a pointer in here

551
00:21:49,440 --> 00:21:53,679
and i don't know why

552
00:21:51,038 --> 00:21:55,440
there is right and so i think what we

553
00:21:53,679 --> 00:21:56,960
probably did is we said look we don't

554
00:21:55,440 --> 00:21:59,038
need those anymore they should just be

555
00:21:56,960 --> 00:22:01,919
entity ids

556
00:21:59,038 --> 00:22:03,519
and this should not be happening right

557
00:22:01,919 --> 00:22:05,440
because we don't need a pointer for any

558
00:22:03,519 --> 00:22:07,759
particular reason it can just be an id

559
00:22:05,440 --> 00:22:09,038
and that's all it should be so i'm

560
00:22:07,759 --> 00:22:11,440
pretty sure what we want to do

561
00:22:09,038 --> 00:22:13,038
is just change the way this works now so

562
00:22:11,440 --> 00:22:15,759
that you don't have to do any management

563
00:22:13,038 --> 00:22:18,158
of these they just manage themselves

564
00:22:15,759 --> 00:22:20,240
and so the entity traversable point here

565
00:22:18,159 --> 00:22:22,400
should really just be

566
00:22:20,240 --> 00:22:24,558
one of these which is who is occupying

567
00:22:22,400 --> 00:22:24,559
it

568
00:22:25,119 --> 00:22:29,839
right and anywhere that that code was

569
00:22:28,558 --> 00:22:31,839
getting used before

570
00:22:29,839 --> 00:22:34,240
uh should not you know should should

571
00:22:31,839 --> 00:22:34,240
just be

572
00:22:35,119 --> 00:22:39,439
using it like an id so when you say is

573
00:22:37,279 --> 00:22:42,240
occupied you just get

574
00:22:39,440 --> 00:22:44,640
the traversible in question and you need

575
00:22:42,240 --> 00:22:46,960
to check to see if it's occupied

576
00:22:44,640 --> 00:22:46,960
um

577
00:22:48,960 --> 00:22:55,840
what is the question here

578
00:22:56,720 --> 00:23:01,600
do we not have an is valid for

579
00:23:00,150 --> 00:23:05,759
[Music]

580
00:23:01,599 --> 00:23:08,480
editing ids that doesn't seem right

581
00:23:05,759 --> 00:23:10,319
see yeah like just like i'm saying like

582
00:23:08,480 --> 00:23:11,519
when we do function overloading we need

583
00:23:10,319 --> 00:23:13,519
these in for coder

584
00:23:11,519 --> 00:23:14,879
like in mine it doesn't do this but you

585
00:23:13,519 --> 00:23:15,519
know when we switch to the default

586
00:23:14,880 --> 00:23:17,440
branch

587
00:23:15,519 --> 00:23:19,200
we lost the ability to see the function

588
00:23:17,440 --> 00:23:21,600
prototype which is which is

589
00:23:19,200 --> 00:23:22,558
tough because if you use function

590
00:23:21,599 --> 00:23:25,599
overloading

591
00:23:22,558 --> 00:23:28,960
you need to see the parameters right

592
00:23:25,599 --> 00:23:31,599
um otherwise you have no idea what

593
00:23:28,960 --> 00:23:33,120
um you know which one you're looking at

594
00:23:31,599 --> 00:23:36,480
which doesn't help

595
00:23:33,119 --> 00:23:39,439
um anyway so yeah we need

596
00:23:36,480 --> 00:23:39,839
the way to test whether one of these is

597
00:23:39,440 --> 00:23:43,278
is

598
00:23:39,839 --> 00:23:45,918
valid and i don't know how we

599
00:23:43,278 --> 00:23:46,880
possibly could have not had one of those

600
00:23:45,919 --> 00:23:49,679
right

601
00:23:46,880 --> 00:23:50,640
um so it feels like we should have had

602
00:23:49,679 --> 00:23:55,759
one and i'm just

603
00:23:50,640 --> 00:23:55,759
not sure um why we don't have one

604
00:23:58,558 --> 00:24:04,000
that's really weird so

605
00:24:01,679 --> 00:24:05,278
i'll put one in but that just doesn't

606
00:24:04,000 --> 00:24:08,159
make sense you can see here

607
00:24:05,278 --> 00:24:09,359
like it even has a clear so why you

608
00:24:08,159 --> 00:24:19,840
wouldn't have

609
00:24:09,359 --> 00:24:19,839
um and is valid i don't know

610
00:24:21,519 --> 00:24:23,839
oops

611
00:24:29,679 --> 00:24:33,840
so probably we're just that

612
00:24:35,599 --> 00:24:39,678
and i i how is that not there already

613
00:24:38,960 --> 00:24:44,798
that is

614
00:24:39,679 --> 00:24:44,798
that i i literally have no idea no idea

615
00:24:44,839 --> 00:24:48,720
um

616
00:24:47,119 --> 00:24:50,000
i'm so weirded out right now because

617
00:24:48,720 --> 00:24:51,200
like how did we write the rest of the

618
00:24:50,000 --> 00:24:52,558
code

619
00:24:51,200 --> 00:24:54,640
this is what happens when you work on a

620
00:24:52,558 --> 00:24:57,440
code base once a week i mean

621
00:24:54,640 --> 00:24:57,440
who knows right

622
00:24:58,159 --> 00:25:03,440
but uh otherwise

623
00:25:01,759 --> 00:25:05,038
it's pretty straightforward uh we can

624
00:25:03,440 --> 00:25:07,120
clear the occupier here

625
00:25:05,038 --> 00:25:08,879
i guess which is what it wants to do uh

626
00:25:07,119 --> 00:25:13,119
here we need just the id

627
00:25:08,880 --> 00:25:17,200
uh which obviously we have um

628
00:25:13,119 --> 00:25:20,158
all that's fine looking at this code

629
00:25:17,200 --> 00:25:20,159
this is just a

630
00:25:23,759 --> 00:25:29,839
check on that make sure it's not

631
00:25:26,839 --> 00:25:29,839
occupied

632
00:25:30,480 --> 00:25:35,038
not much else to it when we're iterating

633
00:25:32,558 --> 00:25:37,200
on cure we need a way or we want a way

634
00:25:35,038 --> 00:25:38,960
to get the occupier so we want to be

635
00:25:37,200 --> 00:25:42,159
able to do

636
00:25:38,960 --> 00:25:44,640
just a get entity here and

637
00:25:42,159 --> 00:25:46,240
and i think that's all we would need is

638
00:25:44,640 --> 00:25:49,520
just to say look give us the

639
00:25:46,240 --> 00:25:52,079
the one that's there um and this is

640
00:25:49,519 --> 00:25:52,720
again just a and is valid where we would

641
00:25:52,079 --> 00:25:55,918
say

642
00:25:52,720 --> 00:25:58,720
you know is there somebody on there uh

643
00:25:55,919 --> 00:25:58,720
this is also

644
00:26:00,000 --> 00:26:04,000
so so i don't know what the point of

645
00:26:02,000 --> 00:26:06,720
this is necessarily

646
00:26:04,000 --> 00:26:09,200
oh this is just creating a thing these

647
00:26:06,720 --> 00:26:10,558
should have already been zero

648
00:26:09,200 --> 00:26:13,200
so i'm not sure what the point of that

649
00:26:10,558 --> 00:26:16,079
is i'll leave that on there

650
00:26:13,200 --> 00:26:17,360
because fine right it doesn't hurt me to

651
00:26:16,079 --> 00:26:22,639
do so

652
00:26:17,359 --> 00:26:25,439
um but it's also not really relevant

653
00:26:22,640 --> 00:26:26,320
so that should at least now preserve

654
00:26:25,440 --> 00:26:28,640
those values

655
00:26:26,319 --> 00:26:29,918
properly now whether or not they were

656
00:26:28,640 --> 00:26:31,679
getting cleared

657
00:26:29,919 --> 00:26:33,520
in some other place i don't know so we

658
00:26:31,679 --> 00:26:33,840
we still may have a little more work to

659
00:26:33,519 --> 00:26:35,918
do

660
00:26:33,839 --> 00:26:37,119
so right like you can see that's not

661
00:26:35,919 --> 00:26:38,720
that's still not

662
00:26:37,119 --> 00:26:40,399
actually showing up properly so i don't

663
00:26:38,720 --> 00:26:41,759
think we're quite

664
00:26:40,400 --> 00:26:43,759
out of the woods yet you can see i can

665
00:26:41,759 --> 00:26:47,119
still hop onto here

666
00:26:43,759 --> 00:26:49,519
but at least now that's running through

667
00:26:47,119 --> 00:26:50,558
a that's running through a system that

668
00:26:49,519 --> 00:26:53,918
actually doesn't use

669
00:26:50,558 --> 00:26:57,200
pointers for that for that

670
00:26:53,919 --> 00:27:01,120
preserving right

671
00:26:57,200 --> 00:27:03,120
so we take a look at the traversibles

672
00:27:01,119 --> 00:27:04,399
i want to know everywhere that that's

673
00:27:03,119 --> 00:27:07,038
getting

674
00:27:04,400 --> 00:27:09,120
mucked with just so i can see how it's

675
00:27:07,038 --> 00:27:11,599
supposedly preserved or not preserved

676
00:27:09,119 --> 00:27:13,519
it's in the part that's not discarded so

677
00:27:11,599 --> 00:27:15,839
it should remain

678
00:27:13,519 --> 00:27:15,839
um

679
00:27:16,558 --> 00:27:22,480
this is just for boost stuff which

680
00:27:20,558 --> 00:27:24,960
shouldn't matter

681
00:27:22,480 --> 00:27:27,278
this is the rendering code which again

682
00:27:24,960 --> 00:27:30,960
it should just be fine

683
00:27:27,278 --> 00:27:34,240
um here's where those traversals being

684
00:27:30,960 --> 00:27:36,399
accessed here's where they're getting

685
00:27:34,240 --> 00:27:37,919
created originally and generate rooms so

686
00:27:36,398 --> 00:27:39,119
that shouldn't really be implicated

687
00:27:37,919 --> 00:27:43,120
during play

688
00:27:39,119 --> 00:27:45,759
uh at all uh

689
00:27:43,119 --> 00:27:46,639
oh and hey look this is what i said

690
00:27:45,759 --> 00:27:51,359
before

691
00:27:46,640 --> 00:27:53,440
right uh we already talked about that

692
00:27:51,359 --> 00:27:55,199
so i don't see anywhere that that's

693
00:27:53,440 --> 00:27:58,480
getting cleared

694
00:27:55,200 --> 00:28:02,000
so i'm not sure i understand

695
00:27:58,480 --> 00:28:04,480
why we would ever have any

696
00:28:02,000 --> 00:28:06,000
weirdness like why those aren't

697
00:28:04,480 --> 00:28:08,399
remaining set

698
00:28:06,000 --> 00:28:09,839
right so something's a little bit weird

699
00:28:08,398 --> 00:28:11,678
so i'm going to go ahead and just step

700
00:28:09,839 --> 00:28:12,798
through the code there just so i can see

701
00:28:11,679 --> 00:28:15,278
if there's something that i'm not

702
00:28:12,798 --> 00:28:19,599
understanding about what's going on

703
00:28:15,278 --> 00:28:19,599
because that shouldn't be a big deal

704
00:28:27,919 --> 00:28:34,640
all right so i'm gonna

705
00:28:31,038 --> 00:28:38,319
take a look at the

706
00:28:34,640 --> 00:28:41,840
transactional occupy code

707
00:28:38,319 --> 00:28:43,119
um and when i try to jump forward

708
00:28:41,839 --> 00:28:45,678
right i should come in here and i should

709
00:28:43,119 --> 00:28:49,278
be able to see uh this code

710
00:28:45,679 --> 00:28:52,159
happen right so if i look

711
00:28:49,278 --> 00:28:54,480
at the two people in question so here

712
00:28:52,159 --> 00:28:54,480
they are

713
00:28:54,960 --> 00:29:01,278
uh and you can see that like the

714
00:28:59,038 --> 00:29:03,200
this is the place that i was coming from

715
00:29:01,278 --> 00:29:05,278
so it's this entity

716
00:29:03,200 --> 00:29:06,640
entity 7584 which is just some

717
00:29:05,278 --> 00:29:08,640
presumably ground piece and it's the

718
00:29:06,640 --> 00:29:11,278
first reversible on there

719
00:29:08,640 --> 00:29:12,480
i'm trying to go to here which is like

720
00:29:11,278 --> 00:29:15,919
this position

721
00:29:12,480 --> 00:29:20,319
in the world um which is basically

722
00:29:15,919 --> 00:29:23,520
zero but 0.5 of z

723
00:29:20,319 --> 00:29:25,839
and i want to

724
00:29:23,519 --> 00:29:26,798
to occupy this place that no one is so

725
00:29:25,839 --> 00:29:30,798
it should work

726
00:29:26,798 --> 00:29:32,639
right so let's just see what happens

727
00:29:30,798 --> 00:29:34,000
we take a look and say oh the

728
00:29:32,640 --> 00:29:35,840
destination

729
00:29:34,000 --> 00:29:41,839
um you know it's not occupied so the

730
00:29:35,839 --> 00:29:41,839
destination um

731
00:29:44,480 --> 00:29:49,278
i should have watched that happen um so

732
00:29:47,679 --> 00:29:52,880
this destination here which

733
00:29:49,278 --> 00:29:54,960
should have been on entity 7584

734
00:29:52,880 --> 00:29:56,080
will get cleared to zero i'll step

735
00:29:54,960 --> 00:29:57,519
through that again so we can watch and

736
00:29:56,079 --> 00:29:59,038
see that it gets cleared not that we

737
00:29:57,519 --> 00:30:00,319
really care but i just wanna

738
00:29:59,038 --> 00:30:02,879
you know i just wanted to step through

739
00:30:00,319 --> 00:30:04,558
it once uh we're going to set the

740
00:30:02,880 --> 00:30:04,880
desired location so the one we're going

741
00:30:04,558 --> 00:30:07,599
to

742
00:30:04,880 --> 00:30:09,440
the occupier for that which is this here

743
00:30:07,599 --> 00:30:12,879
should now be set to us

744
00:30:09,440 --> 00:30:16,000
right uh and then

745
00:30:12,880 --> 00:30:16,960
we should you know continue on with our

746
00:30:16,000 --> 00:30:20,000
with our fun

747
00:30:16,960 --> 00:30:21,278
right and there's not anything else

748
00:30:20,000 --> 00:30:23,679
that's going on here

749
00:30:21,278 --> 00:30:25,440
right so now we're just occupying that

750
00:30:23,679 --> 00:30:29,360
location

751
00:30:25,440 --> 00:30:31,519
so you know to me that looks fine

752
00:30:29,359 --> 00:30:33,519
um i'm not sure what this transaction

753
00:30:31,519 --> 00:30:35,119
will occupy like who's calling this

754
00:30:33,519 --> 00:30:36,720
no one should be calling it again so

755
00:30:35,119 --> 00:30:40,319
this may be something

756
00:30:36,720 --> 00:30:40,319
buggy um

757
00:30:45,119 --> 00:30:51,839
so that may just be well

758
00:30:52,880 --> 00:30:58,559
so that's a little bit weird right like

759
00:30:54,720 --> 00:30:58,558
i'm not sure how we got into this again

760
00:31:00,000 --> 00:31:05,759
like how is that being called so many

761
00:31:02,839 --> 00:31:08,959
times

762
00:31:05,759 --> 00:31:10,240
that seems broken right because i

763
00:31:08,960 --> 00:31:12,960
shouldn't be really

764
00:31:10,240 --> 00:31:13,759
hopping forward i mean i guess if i had

765
00:31:12,960 --> 00:31:17,200
to argue

766
00:31:13,759 --> 00:31:20,879
with myself i would say it was because

767
00:31:17,200 --> 00:31:21,278
the key is down like maybe it didn't

768
00:31:20,880 --> 00:31:24,640
pick

769
00:31:21,278 --> 00:31:26,558
the yeah so the key is just stuck down

770
00:31:24,640 --> 00:31:29,360
because hey it never saw the up because

771
00:31:26,558 --> 00:31:32,639
if the up went to this other app and we

772
00:31:29,359 --> 00:31:35,199
aren't checking for that yet i guess

773
00:31:32,640 --> 00:31:37,200
so i guess i could believe that um i'm

774
00:31:35,200 --> 00:31:40,558
not willing to say that's totally wrong

775
00:31:37,200 --> 00:31:44,240
uh but yeah so if i

776
00:31:40,558 --> 00:31:48,398
like try to look in here um real quick

777
00:31:44,240 --> 00:31:53,038
i'm just gonna take a look at

778
00:31:48,398 --> 00:31:56,959
the uh at the points

779
00:31:53,038 --> 00:32:00,398
so you know we watched it set this

780
00:31:56,960 --> 00:32:03,679
uh this

781
00:32:00,398 --> 00:32:06,798
we watched it set that traversible

782
00:32:03,679 --> 00:32:08,000
supposedly to be occupied and yet when

783
00:32:06,798 --> 00:32:10,000
we look at it

784
00:32:08,000 --> 00:32:11,519
it's not drawing as occupied so that's

785
00:32:10,000 --> 00:32:14,558
what we're trying to fix

786
00:32:11,519 --> 00:32:16,558
right here and if we look at where

787
00:32:14,558 --> 00:32:19,759
that's actually being drawn

788
00:32:16,558 --> 00:32:22,319
so in that code that we had

789
00:32:19,759 --> 00:32:24,079
right here you can see that it's saying

790
00:32:22,319 --> 00:32:28,720
loop over all the traversibles

791
00:32:24,079 --> 00:32:30,319
for each traversible that's in there um

792
00:32:28,720 --> 00:32:33,200
if there's an occupier on it it's

793
00:32:30,319 --> 00:32:36,079
supposed to set the color different

794
00:32:33,200 --> 00:32:38,480
oh but you know what this isn't being

795
00:32:36,079 --> 00:32:38,480
used

796
00:32:39,038 --> 00:32:43,839
all right

797
00:32:45,038 --> 00:32:51,440
that was stupid all right so

798
00:32:48,480 --> 00:32:52,640
that is working now good uh mystery

799
00:32:51,440 --> 00:32:54,320
solved there

800
00:32:52,640 --> 00:32:56,880
um and so now we just have to take a

801
00:32:54,319 --> 00:32:58,639
look at those trees we may have fixed

802
00:32:56,880 --> 00:33:00,799
them by using the permanent

803
00:32:58,640 --> 00:33:02,880
the permanent id obviously but we may

804
00:33:00,798 --> 00:33:04,558
not we may have a separate bug there

805
00:33:02,880 --> 00:33:06,000
so our next question is like what's the

806
00:33:04,558 --> 00:33:09,038
status of these trees

807
00:33:06,000 --> 00:33:09,519
right over here uh so i'm gonna go ahead

808
00:33:09,038 --> 00:33:11,839
and just

809
00:33:09,519 --> 00:33:13,038
hop over there you know we should have a

810
00:33:11,839 --> 00:33:15,759
thing that lets us click

811
00:33:13,038 --> 00:33:16,720
and move directly to where i click in

812
00:33:15,759 --> 00:33:19,919
the world

813
00:33:16,720 --> 00:33:24,319
seems like that would be handy right

814
00:33:19,919 --> 00:33:27,679
um especially in debug mode where

815
00:33:24,319 --> 00:33:29,278
everything runs really slowly right

816
00:33:27,679 --> 00:33:31,200
in debug mode we could have a thing that

817
00:33:29,278 --> 00:33:33,119
turns off lighting and then everything

818
00:33:31,200 --> 00:33:34,880
would run quickly

819
00:33:33,119 --> 00:33:36,079
you know what i mean because when we

820
00:33:34,880 --> 00:33:39,840
don't lighting is the only thing that

821
00:33:36,079 --> 00:33:41,519
takes our time um

822
00:33:39,839 --> 00:33:44,000
but we don't have a way to just turn it

823
00:33:41,519 --> 00:33:44,000
off do we

824
00:33:47,839 --> 00:33:51,678
yeah we don't use like if we just have

825
00:33:50,319 --> 00:33:52,960
this lighting disabled actually do

826
00:33:51,679 --> 00:33:55,038
something

827
00:33:52,960 --> 00:33:57,519
that would probably that would probably

828
00:33:55,038 --> 00:34:00,640
do it so you know we probably should

829
00:33:57,519 --> 00:34:03,839
just saying um all right if we

830
00:34:00,640 --> 00:34:04,320
uh take a look in here and i'm gonna try

831
00:34:03,839 --> 00:34:07,119
and

832
00:34:04,319 --> 00:34:07,839
look and see like the ground cover uh if

833
00:34:07,119 --> 00:34:09,039
i

834
00:34:07,839 --> 00:34:10,000
just kind of look on the other side of

835
00:34:09,039 --> 00:34:11,679
it i should be able to see the

836
00:34:10,000 --> 00:34:13,519
transaction points

837
00:34:11,679 --> 00:34:15,679
so you can see that they're they're not

838
00:34:13,519 --> 00:34:16,398
right so they should be like this amber

839
00:34:15,679 --> 00:34:18,960
color

840
00:34:16,398 --> 00:34:20,159
right or i don't know what it is orange

841
00:34:18,960 --> 00:34:22,639
um

842
00:34:20,159 --> 00:34:23,599
those should be set that way you can see

843
00:34:22,639 --> 00:34:26,800
that they're not

844
00:34:23,599 --> 00:34:27,599
and so the you know the coloration on

845
00:34:26,800 --> 00:34:29,519
those

846
00:34:27,599 --> 00:34:31,200
what we need to do now is figure out why

847
00:34:29,519 --> 00:34:35,519
the trees aren't

848
00:34:31,199 --> 00:34:38,960
taking up those slots right

849
00:34:35,519 --> 00:34:41,918
so i think and

850
00:34:38,960 --> 00:34:42,480
if i you know based on the searches we

851
00:34:41,918 --> 00:34:43,679
just did

852
00:34:42,480 --> 00:34:46,079
i think it's actually pretty

853
00:34:43,679 --> 00:34:46,398
straightforward the reason is going to

854
00:34:46,079 --> 00:34:49,919
be

855
00:34:46,398 --> 00:34:54,000
because when we do the gen entity thing

856
00:34:49,918 --> 00:34:55,918
um in fact i almost want to say that if

857
00:34:54,000 --> 00:34:58,159
i just run this code we may actually see

858
00:34:55,918 --> 00:35:02,078
this bug on the hero itself

859
00:34:58,159 --> 00:35:03,279
hold on a second let me actually um

860
00:35:02,079 --> 00:35:04,480
let me switch to release because i

861
00:35:03,280 --> 00:35:06,720
actually don't need to be in debug for

862
00:35:04,480 --> 00:35:06,719
this

863
00:35:15,440 --> 00:35:20,720
so i su suspect yes so

864
00:35:18,559 --> 00:35:23,440
basically at startup we're always wrong

865
00:35:20,719 --> 00:35:26,879
and the reason is because in gen entity

866
00:35:23,440 --> 00:35:30,079
in gen entity at traversable

867
00:35:26,880 --> 00:35:33,440
we just don't set it right

868
00:35:30,079 --> 00:35:37,359
so transactional

869
00:35:33,440 --> 00:35:37,358
occupy um

870
00:35:37,838 --> 00:35:45,838
is probably what we should call right

871
00:35:41,519 --> 00:35:45,838
like if we just did this

872
00:35:48,400 --> 00:35:55,519
this this would probably be what we want

873
00:35:51,599 --> 00:35:59,519
so the standing on reference

874
00:35:55,519 --> 00:36:03,519
is the one that we want and

875
00:35:59,519 --> 00:36:03,519
the uh

876
00:36:06,800 --> 00:36:14,079
the result occupying oops

877
00:36:11,358 --> 00:36:14,960
um is the one that we're we're trying to

878
00:36:14,079 --> 00:36:19,839
set

879
00:36:14,960 --> 00:36:22,320
right and then the entity

880
00:36:19,838 --> 00:36:24,320
we don't actually need an entity like

881
00:36:22,320 --> 00:36:27,359
this doesn't need an entity

882
00:36:24,320 --> 00:36:30,960
it needs an entity id

883
00:36:27,358 --> 00:36:33,838
right so i don't know why it's

884
00:36:30,960 --> 00:36:34,960
actually taking that um it should just

885
00:36:33,838 --> 00:36:38,159
be able to do that

886
00:36:34,960 --> 00:36:41,039
right i think um you know

887
00:36:38,159 --> 00:36:42,319
could be wrong but i think it doesn't

888
00:36:41,039 --> 00:36:44,559
actually need an entity so

889
00:36:42,320 --> 00:36:45,519
you know don't pass a pointer if an id

890
00:36:44,559 --> 00:36:49,199
will do

891
00:36:45,519 --> 00:36:49,199
is a pretty good rule of thumb

892
00:36:49,358 --> 00:36:56,480
um you know just just my opinion

893
00:36:53,679 --> 00:36:56,480
just my opinion

894
00:36:56,719 --> 00:37:02,239
uh just because it means you can run the

895
00:37:00,159 --> 00:37:04,719
code when you don't have a pointer yet

896
00:37:02,239 --> 00:37:06,639
and you don't want to generate pointers

897
00:37:04,719 --> 00:37:08,078
for things that don't need them

898
00:37:06,639 --> 00:37:10,879
that might be the way to say it i don't

899
00:37:08,079 --> 00:37:12,400
know anyway so assuming that we have one

900
00:37:10,880 --> 00:37:14,800
of these entities here

901
00:37:12,400 --> 00:37:15,838
uh if we just call transactional occupy

902
00:37:14,800 --> 00:37:20,320
on it

903
00:37:15,838 --> 00:37:20,320
um we should be good to go we

904
00:37:20,838 --> 00:37:26,639
don't pass

905
00:37:23,280 --> 00:37:29,519
results we pass region and then i think

906
00:37:26,639 --> 00:37:29,519
we're good

907
00:37:30,159 --> 00:37:37,838
right um

908
00:37:38,960 --> 00:37:43,280
so now you know i can't hop into the

909
00:37:40,800 --> 00:37:45,440
trees and so those transaction points

910
00:37:43,280 --> 00:37:48,640
are set properly so i think that was

911
00:37:45,440 --> 00:37:52,559
it um and and we're good

912
00:37:48,639 --> 00:37:54,960
right uh so no no worries

913
00:37:52,559 --> 00:37:57,119
so now what i want to do is like i said

914
00:37:54,960 --> 00:38:05,119
i want to make those doors

915
00:37:57,119 --> 00:38:07,119
uh and so i want oh

916
00:38:05,119 --> 00:38:09,440
somebody's supposed to be there and

917
00:38:07,119 --> 00:38:09,440
isn't

918
00:38:10,000 --> 00:38:19,838
creepy that was useful

919
00:38:20,480 --> 00:38:23,440
that was very useful

920
00:38:27,280 --> 00:38:32,000
so we have some other things we're going

921
00:38:31,280 --> 00:38:35,680
to want to do

922
00:38:32,000 --> 00:38:37,280
here right so those points

923
00:38:35,679 --> 00:38:38,879
are generating entities that are

924
00:38:37,280 --> 00:38:39,440
standing these are the points the

925
00:38:38,880 --> 00:38:42,079
talking

926
00:38:39,440 --> 00:38:43,760
you step next to the thing and you talk

927
00:38:42,079 --> 00:38:47,039
right

928
00:38:43,760 --> 00:38:48,000
um and you can see that we can't go on

929
00:38:47,039 --> 00:38:51,199
it anymore because

930
00:38:48,000 --> 00:38:53,838
now those are actually getting

931
00:38:51,199 --> 00:38:55,759
uh standing on traversibles which we

932
00:38:53,838 --> 00:38:57,920
didn't actually want them to do

933
00:38:55,760 --> 00:39:00,240
so we will need something that says no

934
00:38:57,920 --> 00:39:02,320
you don't actually do that

935
00:39:00,239 --> 00:39:03,919
that's not you don't actually want to

936
00:39:02,320 --> 00:39:06,160
put an entity

937
00:39:03,920 --> 00:39:07,519
there that occupies the space you need

938
00:39:06,159 --> 00:39:11,920
to allow people to hop

939
00:39:07,519 --> 00:39:11,920
onto that space right so that's

940
00:39:12,838 --> 00:39:15,838
interesting

941
00:39:17,679 --> 00:39:23,759
i just have i

942
00:39:22,000 --> 00:39:25,440
i'm sorry i just happened to glance over

943
00:39:23,760 --> 00:39:29,090
the chat and someone was like what is

944
00:39:25,440 --> 00:39:32,000
this built on and someone said unity

945
00:39:29,090 --> 00:39:35,440
[Laughter]

946
00:39:32,000 --> 00:39:43,440
um it's it's built on nothing it's built

947
00:39:35,440 --> 00:39:45,440
on top of windows

948
00:39:43,440 --> 00:39:46,720
sorry it's a totally legitimate question

949
00:39:45,440 --> 00:39:47,920
the only reason i was joking is because

950
00:39:46,719 --> 00:39:48,799
it's funny to be this far into the

951
00:39:47,920 --> 00:39:50,559
stream

952
00:39:48,800 --> 00:39:52,960
where like you know most of what we do

953
00:39:50,559 --> 00:39:54,838
is implement game engine stuff

954
00:39:52,960 --> 00:39:57,599
and people are wondering what it's built

955
00:39:54,838 --> 00:39:59,279
on a totally fair question because

956
00:39:57,599 --> 00:40:01,200
i'm sure all the rest of the programming

957
00:39:59,280 --> 00:40:03,680
streams besides john are probably built

958
00:40:01,199 --> 00:40:05,118
on unity so that's you know

959
00:40:03,679 --> 00:40:06,960
makes sense makes sense if you ask the

960
00:40:05,119 --> 00:40:09,280
question it was just funny because i

961
00:40:06,960 --> 00:40:11,119
just happened to look look over there

962
00:40:09,280 --> 00:40:12,319
yeah maybe windows is maybe windows is

963
00:40:11,119 --> 00:40:15,519
built on unity

964
00:40:12,318 --> 00:40:15,519
right um

965
00:40:15,599 --> 00:40:19,280
maybe maybe microsoft built i mean it

966
00:40:17,280 --> 00:40:22,319
would explain why windows 10 is so

967
00:40:19,280 --> 00:40:24,960
so freaking slow uh

968
00:40:22,318 --> 00:40:26,079
if and and they're both c-sharp

969
00:40:24,960 --> 00:40:28,480
disasters

970
00:40:26,079 --> 00:40:30,240
right like unity and windows are both

971
00:40:28,480 --> 00:40:30,800
filled with c-sharp garbage that doesn't

972
00:40:30,239 --> 00:40:34,559
work

973
00:40:30,800 --> 00:40:37,680
uh so you know there's that

974
00:40:34,559 --> 00:40:38,960
anyway uh if we so if we look at what

975
00:40:37,679 --> 00:40:41,598
happens here

976
00:40:38,960 --> 00:40:42,639
there you know those those conversation

977
00:40:41,599 --> 00:40:45,760
points you can see

978
00:40:42,639 --> 00:40:48,078
it was this sort of thing right um they

979
00:40:45,760 --> 00:40:51,200
add these collision volumes here

980
00:40:48,079 --> 00:40:53,680
and so what i'm assuming happens is

981
00:40:51,199 --> 00:40:55,439
we didn't have a way like in the room

982
00:40:53,679 --> 00:40:57,279
generator code which is still kind of

983
00:40:55,440 --> 00:40:58,480
crappy

984
00:40:57,280 --> 00:41:01,680
because we haven't really tried to

985
00:40:58,480 --> 00:41:05,199
generate much of interest

986
00:41:01,679 --> 00:41:06,799
um we oh someone said

987
00:41:05,199 --> 00:41:09,118
uh someone said you'd actually be

988
00:41:06,800 --> 00:41:10,640
surprised how many are working on their

989
00:41:09,119 --> 00:41:11,760
own engines games from scratch it's

990
00:41:10,639 --> 00:41:14,078
pretty encouraging

991
00:41:11,760 --> 00:41:15,440
um that'd be great yeah if there's lots

992
00:41:14,079 --> 00:41:17,039
of people working on from scratch

993
00:41:15,440 --> 00:41:18,000
engines on twitch that is awesome

994
00:41:17,039 --> 00:41:21,279
because that is not

995
00:41:18,000 --> 00:41:22,400
what it used to be like um and just more

996
00:41:21,280 --> 00:41:26,000
engines equals more

997
00:41:22,400 --> 00:41:28,079
better right now just just because i

998
00:41:26,000 --> 00:41:28,480
don't think the engines we have are very

999
00:41:28,079 --> 00:41:31,920
good

1000
00:41:28,480 --> 00:41:35,679
for for universal purposes you know

1001
00:41:31,920 --> 00:41:37,920
um you know what i'm saying

1002
00:41:35,679 --> 00:41:37,919
uh

1003
00:41:42,559 --> 00:41:45,759
like we need more engines we need more

1004
00:41:44,239 --> 00:41:46,318
engine programmers so we can have better

1005
00:41:45,760 --> 00:41:47,680
engines

1006
00:41:46,318 --> 00:41:49,039
it's just really that simple we just

1007
00:41:47,679 --> 00:41:50,480
need more engine programmers because we

1008
00:41:49,039 --> 00:41:53,119
need better engines the engines right

1009
00:41:50,480 --> 00:41:55,519
now are not what they need to be

1010
00:41:53,119 --> 00:41:55,519
you know

1011
00:41:56,318 --> 00:42:02,400
that's all oh uh and no

1012
00:41:59,838 --> 00:42:04,000
like of course windows api is being

1013
00:42:02,400 --> 00:42:05,838
rewritten in javascript

1014
00:42:04,000 --> 00:42:07,519
that's that's actually true right like

1015
00:42:05,838 --> 00:42:09,119
there's tons of javascript that's going

1016
00:42:07,519 --> 00:42:09,920
into windows now like for the start menu

1017
00:42:09,119 --> 00:42:14,240
and all that stuff

1018
00:42:09,920 --> 00:42:14,240
i think that's actually true but

1019
00:42:14,838 --> 00:42:17,838
anyway

1020
00:42:18,079 --> 00:42:21,920
anyway uh so what we want to do here is

1021
00:42:21,199 --> 00:42:23,919
just say look

1022
00:42:21,920 --> 00:42:25,119
when we create these things like this ad

1023
00:42:23,920 --> 00:42:27,519
conversation thing

1024
00:42:25,119 --> 00:42:28,400
i think what's happening is when we add

1025
00:42:27,519 --> 00:42:31,039
these groups

1026
00:42:28,400 --> 00:42:31,519
we look at the tiles and they they get

1027
00:42:31,039 --> 00:42:34,239
like

1028
00:42:31,519 --> 00:42:35,920
gen entity at traversable is called we

1029
00:42:34,239 --> 00:42:38,879
don't distinguish

1030
00:42:35,920 --> 00:42:41,039
uh right between ones that need it and

1031
00:42:38,880 --> 00:42:43,599
ones that don't

1032
00:42:41,039 --> 00:42:44,559
so in here i think what we want to do is

1033
00:42:43,599 --> 00:42:47,440
we want to do

1034
00:42:44,559 --> 00:42:49,679
something like this where you don't call

1035
00:42:47,440 --> 00:42:53,200
transactional occupy

1036
00:42:49,679 --> 00:42:53,199
if the entity creator

1037
00:42:54,559 --> 00:42:59,199
in question doesn't want it right and so

1038
00:42:57,679 --> 00:43:01,519
the problem that we're going to have

1039
00:42:59,199 --> 00:43:02,719
here is we've stripped the call that we

1040
00:43:01,519 --> 00:43:05,280
actually need

1041
00:43:02,719 --> 00:43:06,959
um for this like we we strip the

1042
00:43:05,280 --> 00:43:09,040
parameter we actually need

1043
00:43:06,960 --> 00:43:11,519
so in here there's a gen entity and if

1044
00:43:09,039 --> 00:43:14,318
we go to the gen entity

1045
00:43:11,519 --> 00:43:16,159
you can see it up here we we have like

1046
00:43:14,318 --> 00:43:18,318
the creator and we've got

1047
00:43:16,159 --> 00:43:20,000
information and stuff like that and what

1048
00:43:18,318 --> 00:43:23,358
we want to do is probably add

1049
00:43:20,000 --> 00:43:25,679
a bool here right where we say like was

1050
00:43:23,358 --> 00:43:26,719
this thing supposed to occupy the square

1051
00:43:25,679 --> 00:43:29,759
or not

1052
00:43:26,719 --> 00:43:32,959
like you know we want something like

1053
00:43:29,760 --> 00:43:36,240
uh occupy uh

1054
00:43:32,960 --> 00:43:39,920
trans or occupy traversable

1055
00:43:36,239 --> 00:43:40,559
right um and we set this to true or

1056
00:43:39,920 --> 00:43:42,240
false now

1057
00:43:40,559 --> 00:43:44,559
since most things will occupy their

1058
00:43:42,239 --> 00:43:45,358
traversables maybe we do the other way

1059
00:43:44,559 --> 00:43:48,559
around

1060
00:43:45,358 --> 00:43:52,000
like do not occupy

1061
00:43:48,559 --> 00:43:53,599
traversable um

1062
00:43:52,000 --> 00:43:55,280
and then what we would do is we would

1063
00:43:53,599 --> 00:43:57,680
just make sure that we set that

1064
00:43:55,280 --> 00:43:59,040
to true on the few things that don't

1065
00:43:57,679 --> 00:44:01,519
like take up a square

1066
00:43:59,039 --> 00:44:02,639
that are that are just like floating

1067
00:44:01,519 --> 00:44:06,318
right

1068
00:44:02,639 --> 00:44:08,960
um we could do that and uh

1069
00:44:06,318 --> 00:44:10,960
oh and we we already have that it's

1070
00:44:08,960 --> 00:44:15,039
actually right there

1071
00:44:10,960 --> 00:44:16,400
okay so so we're actually even one step

1072
00:44:15,039 --> 00:44:18,159
ahead of ourselves turns out we have

1073
00:44:16,400 --> 00:44:20,318
flags and we already have a flag for

1074
00:44:18,159 --> 00:44:20,318
that

1075
00:44:20,639 --> 00:44:24,879
so really what we need to do is

1076
00:44:23,199 --> 00:44:28,239
something like this

1077
00:44:24,880 --> 00:44:30,000
right that's what we want but like i

1078
00:44:28,239 --> 00:44:30,318
said we stripped the parameters so it's

1079
00:44:30,000 --> 00:44:31,838
not

1080
00:44:30,318 --> 00:44:33,679
on there so that's the problem that we

1081
00:44:31,838 --> 00:44:37,838
currently have um

1082
00:44:33,679 --> 00:44:37,838
did we use this

1083
00:44:43,199 --> 00:44:47,118
so we didn't so we knew we would need it

1084
00:44:46,000 --> 00:44:49,920
uh and we just

1085
00:44:47,119 --> 00:44:50,960
hadn't actually used it yet so i think

1086
00:44:49,920 --> 00:44:54,800
what we want to do

1087
00:44:50,960 --> 00:44:58,000
is look for you know where did we

1088
00:44:54,800 --> 00:44:58,000
actually um

1089
00:45:00,239 --> 00:45:03,598
where did we actually start setting up

1090
00:45:02,079 --> 00:45:06,318
these conversations

1091
00:45:03,599 --> 00:45:06,800
right so in here where we did this and

1092
00:45:06,318 --> 00:45:10,159
we do

1093
00:45:06,800 --> 00:45:10,160
like add conversation

1094
00:45:10,480 --> 00:45:16,639
right um that seems like what we would

1095
00:45:14,400 --> 00:45:16,639
want

1096
00:45:16,838 --> 00:45:19,838
uh

1097
00:45:27,760 --> 00:45:32,560
and the only thing that i'm confused

1098
00:45:29,440 --> 00:45:36,720
about is

1099
00:45:32,559 --> 00:45:36,719
that would explain one of them

1100
00:45:37,838 --> 00:45:42,559
this explains the one directly below the

1101
00:45:40,719 --> 00:45:44,799
entity

1102
00:45:42,559 --> 00:45:46,159
i don't understand where the one to the

1103
00:45:44,800 --> 00:45:49,359
right of the entity

1104
00:45:46,159 --> 00:45:53,679
is coming from because that's not

1105
00:45:49,358 --> 00:45:56,400
obvious to me here right

1106
00:45:53,679 --> 00:45:56,799
but but this this is the example right

1107
00:45:56,400 --> 00:46:00,800
so

1108
00:45:56,800 --> 00:46:03,599
in here if we were to say like okay

1109
00:46:00,800 --> 00:46:03,599
you know uh

1110
00:46:05,199 --> 00:46:15,838
this thing this conversation here

1111
00:46:08,719 --> 00:46:15,838
is is not you know

1112
00:46:21,920 --> 00:46:25,440
yeah this conversation here is not an

1113
00:46:23,760 --> 00:46:26,240
occupier i feel like that's all we would

1114
00:46:25,440 --> 00:46:28,480
need

1115
00:46:26,239 --> 00:46:30,719
the problem is just then you know we

1116
00:46:28,480 --> 00:46:33,119
stripped out where the flags would go

1117
00:46:30,719 --> 00:46:33,919
so when we actually call this here i

1118
00:46:33,119 --> 00:46:37,440
don't know if

1119
00:46:33,920 --> 00:46:41,358
maybe we want to

1120
00:46:37,440 --> 00:46:46,000
pass the flags i mean we could

1121
00:46:41,358 --> 00:46:48,239
right um that seems fine

1122
00:46:46,000 --> 00:46:48,239
uh

1123
00:46:54,239 --> 00:46:57,838
it's called gen flag sorry

1124
00:46:58,639 --> 00:47:05,118
uh and then whenever we do uh our flag

1125
00:47:02,000 --> 00:47:08,079
creation we would want to actually

1126
00:47:05,119 --> 00:47:09,358
uh pass whatever we think the flag

1127
00:47:08,079 --> 00:47:12,800
should be

1128
00:47:09,358 --> 00:47:15,119
so i want to say this stuff is all fine

1129
00:47:12,800 --> 00:47:16,400
um at the moment those should actually

1130
00:47:15,119 --> 00:47:18,960
be ones that are

1131
00:47:16,400 --> 00:47:20,480
you know that do what they do but in

1132
00:47:18,960 --> 00:47:21,519
here where we've got things where we're

1133
00:47:20,480 --> 00:47:23,838
actually placing

1134
00:47:21,519 --> 00:47:25,679
an entity so here we're doing pending

1135
00:47:23,838 --> 00:47:26,719
entity creator right we can just do

1136
00:47:25,679 --> 00:47:30,639
pending entity

1137
00:47:26,719 --> 00:47:33,838
flags and that should work

1138
00:47:30,639 --> 00:47:33,838
sorry gen flags

1139
00:47:34,639 --> 00:47:41,358
uh and now we should be able to

1140
00:47:38,000 --> 00:47:42,400
just hop around through things that that

1141
00:47:41,358 --> 00:47:44,480
have that set

1142
00:47:42,400 --> 00:47:46,720
and not through things that don't the

1143
00:47:44,480 --> 00:47:48,719
trees should not have that set

1144
00:47:46,719 --> 00:47:50,078
right because we pass zero for their

1145
00:47:48,719 --> 00:47:51,679
placement flags because they're just

1146
00:47:50,079 --> 00:47:53,200
getting spammed out into the world and

1147
00:47:51,679 --> 00:47:56,239
it's fine

1148
00:47:53,199 --> 00:47:57,039
uh and then like if we look in here the

1149
00:47:56,239 --> 00:48:00,159
idea is

1150
00:47:57,039 --> 00:48:01,599
these should now be open and they are i

1151
00:48:00,159 --> 00:48:04,159
guess

1152
00:48:01,599 --> 00:48:06,079
i don't know why like the there was one

1153
00:48:04,159 --> 00:48:07,279
being used up there so so this all looks

1154
00:48:06,079 --> 00:48:11,599
good now

1155
00:48:07,280 --> 00:48:14,720
conversation squares are working fine um

1156
00:48:11,599 --> 00:48:20,960
and so okay but yeah so see there what's

1157
00:48:14,719 --> 00:48:22,959
that about

1158
00:48:20,960 --> 00:48:24,960
like we just don't know what that is

1159
00:48:22,960 --> 00:48:26,720
like i have no idea what that is so we

1160
00:48:24,960 --> 00:48:28,159
should we should go find out like

1161
00:48:26,719 --> 00:48:29,759
who is getting placed there and why and

1162
00:48:28,159 --> 00:48:32,480
you can see there one here too

1163
00:48:29,760 --> 00:48:34,480
are those just orphans that were like

1164
00:48:32,480 --> 00:48:35,199
placed in there somehow that are not

1165
00:48:34,480 --> 00:48:38,960
right so

1166
00:48:35,199 --> 00:48:40,480
something's up and well i guess we could

1167
00:48:38,960 --> 00:48:41,920
see

1168
00:48:40,480 --> 00:48:43,119
so they can't be orphans because if they

1169
00:48:41,920 --> 00:48:43,680
were orphans they would have something

1170
00:48:43,119 --> 00:48:46,720
here

1171
00:48:43,679 --> 00:48:48,318
so so this is busted and it's not their

1172
00:48:46,719 --> 00:48:50,959
square because they're actually

1173
00:48:48,318 --> 00:48:52,079
correct so something's up with that and

1174
00:48:50,960 --> 00:48:53,679
it would be nice to know

1175
00:48:52,079 --> 00:48:54,960
like what was getting placed there

1176
00:48:53,679 --> 00:48:56,799
something's getting placed there

1177
00:48:54,960 --> 00:49:00,639
something we can't see

1178
00:48:56,800 --> 00:49:03,039
and it's erroneous right

1179
00:49:00,639 --> 00:49:04,879
um so that would be a nice bug to fix um

1180
00:49:03,039 --> 00:49:06,558
or just even just to find out

1181
00:49:04,880 --> 00:49:08,559
what is happening like what is getting

1182
00:49:06,559 --> 00:49:08,800
placed there even separate from fixing

1183
00:49:08,559 --> 00:49:11,599
it

1184
00:49:08,800 --> 00:49:12,559
at the moment um and what we'd like to

1185
00:49:11,599 --> 00:49:16,559
do here

1186
00:49:12,559 --> 00:49:17,760
is uh now that we've verified that all

1187
00:49:16,559 --> 00:49:19,440
this stuff is working okay

1188
00:49:17,760 --> 00:49:21,520
uh get to the thing that i actually

1189
00:49:19,440 --> 00:49:23,838
wanted to do which is just add a door

1190
00:49:21,519 --> 00:49:26,000
type like add a type of thing that's

1191
00:49:23,838 --> 00:49:30,400
just the door

1192
00:49:26,000 --> 00:49:34,079
and the the way that i wanted to add

1193
00:49:30,400 --> 00:49:36,639
doors to this uh is is

1194
00:49:34,079 --> 00:49:37,599
you know kind of complicated because i

1195
00:49:36,639 --> 00:49:41,358
need there to be

1196
00:49:37,599 --> 00:49:44,960
some way where you can

1197
00:49:41,358 --> 00:49:47,199
um where you can unlock the door

1198
00:49:44,960 --> 00:49:48,079
by using the states of other entities

1199
00:49:47,199 --> 00:49:50,078
right

1200
00:49:48,079 --> 00:49:51,200
so there's there's a couple ways you can

1201
00:49:50,079 --> 00:49:59,839
do doors

1202
00:49:51,199 --> 00:49:59,838
um one is that you can

1203
00:50:01,039 --> 00:50:05,440
one way you do doors is you just have a

1204
00:50:02,639 --> 00:50:08,078
way to like make the door go down

1205
00:50:05,440 --> 00:50:08,880
right and you have something that

1206
00:50:08,079 --> 00:50:11,280
triggers that

1207
00:50:08,880 --> 00:50:12,079
and it happens another way is you can

1208
00:50:11,280 --> 00:50:13,920
have the door

1209
00:50:12,079 --> 00:50:16,400
checked to see whether the criteria for

1210
00:50:13,920 --> 00:50:18,318
it going down has happened or not

1211
00:50:16,400 --> 00:50:19,838
and you know my first inclination is

1212
00:50:18,318 --> 00:50:21,599
usually to just have the to do it the

1213
00:50:19,838 --> 00:50:25,358
doorway like have the door check

1214
00:50:21,599 --> 00:50:28,000
but i think i want to channel uh

1215
00:50:25,358 --> 00:50:29,199
what small amount of of inner john blow

1216
00:50:28,000 --> 00:50:30,719
i have here

1217
00:50:29,199 --> 00:50:32,399
and say that that's probably the wrong

1218
00:50:30,719 --> 00:50:35,199
way to do it the reason

1219
00:50:32,400 --> 00:50:36,318
that uh i think that for game design

1220
00:50:35,199 --> 00:50:38,078
wise is because

1221
00:50:36,318 --> 00:50:40,719
if we think about it you know you may

1222
00:50:38,079 --> 00:50:44,640
want a lot of things that can make doors

1223
00:50:40,719 --> 00:50:46,719
unlock so so like if you have a door

1224
00:50:44,639 --> 00:50:48,000
and the thing you're supposed to do is x

1225
00:50:46,719 --> 00:50:50,239
to unlock the door

1226
00:50:48,000 --> 00:50:52,159
well you may want to add things that are

1227
00:50:50,239 --> 00:50:53,759
external to that like oh the player gets

1228
00:50:52,159 --> 00:50:57,598
a one-time use spell that unlocks

1229
00:50:53,760 --> 00:50:58,960
a door right if the door is sitting

1230
00:50:57,599 --> 00:51:00,400
around checking

1231
00:50:58,960 --> 00:51:02,559
and that's the way you know whether the

1232
00:51:00,400 --> 00:51:05,280
door is uh unlocked or not

1233
00:51:02,559 --> 00:51:06,079
you know what i mean that wouldn't work

1234
00:51:05,280 --> 00:51:07,920
because

1235
00:51:06,079 --> 00:51:11,680
now you don't have a way of just

1236
00:51:07,920 --> 00:51:11,680
triggering the door to unlock separately

1237
00:51:11,838 --> 00:51:15,358
so my thinking is that what we probably

1238
00:51:13,280 --> 00:51:18,400
need to do is make it so that doors just

1239
00:51:15,358 --> 00:51:19,759
are told to unlock and then they do and

1240
00:51:18,400 --> 00:51:22,720
then what we have is

1241
00:51:19,760 --> 00:51:24,400
anything all of the things that could

1242
00:51:22,719 --> 00:51:27,439
make that door unlock

1243
00:51:24,400 --> 00:51:30,480
um are are set up to

1244
00:51:27,440 --> 00:51:33,358
call that as opposed to having it look

1245
00:51:30,480 --> 00:51:33,358
the other way

1246
00:51:34,838 --> 00:51:37,838
right

1247
00:51:40,719 --> 00:51:48,318
so there all right

1248
00:51:44,880 --> 00:51:49,119
um so what i would like to do is just

1249
00:51:48,318 --> 00:51:52,000
add that

1250
00:51:49,119 --> 00:51:54,318
um and and i i want to do it sort of in

1251
00:51:52,000 --> 00:51:57,280
here right so so the idea is like that

1252
00:51:54,318 --> 00:51:58,159
would now be a door obviously i don't

1253
00:51:57,280 --> 00:52:01,359
remember

1254
00:51:58,159 --> 00:52:03,598
us having any door art at the moment so

1255
00:52:01,358 --> 00:52:05,039
probably what i will do for the time

1256
00:52:03,599 --> 00:52:08,559
being

1257
00:52:05,039 --> 00:52:11,599
is i will just use uh one of the

1258
00:52:08,559 --> 00:52:13,599
the walls but before i say that

1259
00:52:11,599 --> 00:52:16,318
i should look and make sure that's true

1260
00:52:13,599 --> 00:52:20,000
because i actually don't remember

1261
00:52:16,318 --> 00:52:23,119
um so like if we go in here to

1262
00:52:20,000 --> 00:52:27,119
the source directory for the

1263
00:52:23,119 --> 00:52:30,318
game art which is in here

1264
00:52:27,119 --> 00:52:33,599
um if we look there's like

1265
00:52:30,318 --> 00:52:37,039
there's just those three things right

1266
00:52:33,599 --> 00:52:39,359
so there's no door texture right now

1267
00:52:37,039 --> 00:52:39,358
um

1268
00:52:41,599 --> 00:52:44,960
we we will have to just ask for one uh

1269
00:52:44,559 --> 00:52:47,839
so

1270
00:52:44,960 --> 00:52:47,838
so

1271
00:52:49,679 --> 00:52:54,879
so yeah i don't know why i'm belaboring

1272
00:52:51,519 --> 00:52:56,719
that point it is exactly as i said

1273
00:52:54,880 --> 00:52:57,920
so what i'd like to do is create an

1274
00:52:56,719 --> 00:53:01,759
entity that's a door

1275
00:52:57,920 --> 00:53:05,680
type of entity um

1276
00:53:01,760 --> 00:53:08,240
and and have that go down now

1277
00:53:05,679 --> 00:53:10,078
i don't there is really no typing that

1278
00:53:08,239 --> 00:53:11,759
needs to happen here because a door is

1279
00:53:10,079 --> 00:53:13,280
literally just something that occupies a

1280
00:53:11,760 --> 00:53:16,400
transactional it's just a piece of

1281
00:53:13,280 --> 00:53:18,480
scenery we we don't really need it to be

1282
00:53:16,400 --> 00:53:20,079
uh anything special like we don't need a

1283
00:53:18,480 --> 00:53:21,760
new brain type for it or anything

1284
00:53:20,079 --> 00:53:23,440
because it's just something that will

1285
00:53:21,760 --> 00:53:28,160
get taken down

1286
00:53:23,440 --> 00:53:31,519
if it if it needs to be right so

1287
00:53:28,159 --> 00:53:32,078
um what i'm gonna do is i'm just gonna

1288
00:53:31,519 --> 00:53:35,838
try

1289
00:53:32,079 --> 00:53:38,800
literally just placing a wall

1290
00:53:35,838 --> 00:53:39,440
like entity that looks like a wall for

1291
00:53:38,800 --> 00:53:42,400
now

1292
00:53:39,440 --> 00:53:43,519
on top of the existing entity that's a

1293
00:53:42,400 --> 00:53:46,079
floor

1294
00:53:43,519 --> 00:53:46,960
and that's our door because until we get

1295
00:53:46,079 --> 00:53:50,400
some art for it

1296
00:53:46,960 --> 00:53:53,519
it doesn't matter

1297
00:53:50,400 --> 00:53:57,599
so if i go in here and

1298
00:53:53,519 --> 00:53:58,480
uh and and go to the gen entity code and

1299
00:53:57,599 --> 00:54:02,079
i just

1300
00:53:58,480 --> 00:54:05,519
make a like you know ad door

1301
00:54:02,079 --> 00:54:06,400
call i guess right i mean again this

1302
00:54:05,519 --> 00:54:08,159
this isn't

1303
00:54:06,400 --> 00:54:09,599
super complicated but you know that's

1304
00:54:08,159 --> 00:54:13,279
what it is and in fact

1305
00:54:09,599 --> 00:54:16,480
i can probably it looks like ad obstacle

1306
00:54:13,280 --> 00:54:18,720
is is basically what we want right

1307
00:54:16,480 --> 00:54:18,719
um

1308
00:54:20,159 --> 00:54:25,679
i mean that's that's it so probably i

1309
00:54:23,679 --> 00:54:28,719
can just do ad obstacle

1310
00:54:25,679 --> 00:54:32,239
and and that's our door

1311
00:54:28,719 --> 00:54:34,799
um so really all i need at that point is

1312
00:54:32,239 --> 00:54:36,558
just when we're doing our sort of room

1313
00:54:34,800 --> 00:54:39,760
generation

1314
00:54:36,559 --> 00:54:41,200
for dungeons and such uh

1315
00:54:39,760 --> 00:54:43,119
we would just need to make sure that we

1316
00:54:41,199 --> 00:54:45,358
add those so so actually

1317
00:54:43,119 --> 00:54:46,640
it seems like we're mostly set up for

1318
00:54:45,358 --> 00:54:49,838
this already

1319
00:54:46,639 --> 00:54:52,000
um and yeah

1320
00:54:49,838 --> 00:54:53,838
i guess it shouldn't be that shouldn't

1321
00:54:52,000 --> 00:54:56,880
be that bad

1322
00:54:53,838 --> 00:54:59,920
so let's take a look and see

1323
00:54:56,880 --> 00:55:07,838
what's actually happening here uh as far

1324
00:54:59,920 --> 00:55:07,838
as that's concerned

1325
00:55:08,318 --> 00:55:11,920
so here's the code for create dungeon

1326
00:55:11,039 --> 00:55:15,199
right

1327
00:55:11,920 --> 00:55:17,280
um and you can see like it putting the

1328
00:55:15,199 --> 00:55:18,798
little like snake in there

1329
00:55:17,280 --> 00:55:21,040
which we never really did the code to

1330
00:55:18,798 --> 00:55:22,159
add the extra pieces onto the snake now

1331
00:55:21,039 --> 00:55:23,599
and the new thing remember we you know

1332
00:55:22,159 --> 00:55:25,279
we used to have like little

1333
00:55:23,599 --> 00:55:26,880
pieces of snake we should do that at

1334
00:55:25,280 --> 00:55:30,160
some point

1335
00:55:26,880 --> 00:55:33,358
but uh yeah you can see us doing

1336
00:55:30,159 --> 00:55:36,558
stuff for

1337
00:55:33,358 --> 00:55:38,400
for other types of rooms whatever

1338
00:55:36,559 --> 00:55:39,839
and so the problem that we have here is

1339
00:55:38,400 --> 00:55:41,200
you can see here that we've got to

1340
00:55:39,838 --> 00:55:43,759
connect

1341
00:55:41,199 --> 00:55:45,358
um where we're connecting these rooms to

1342
00:55:43,760 --> 00:55:49,440
each other

1343
00:55:45,358 --> 00:55:52,880
that go along a path uh and then

1344
00:55:49,440 --> 00:55:54,240
like there's some some extra rooms that

1345
00:55:52,880 --> 00:55:58,960
live off of those

1346
00:55:54,239 --> 00:56:03,279
right and what we want to do is say that

1347
00:55:58,960 --> 00:56:07,519
this connection between these two rooms

1348
00:56:03,280 --> 00:56:11,200
has like a door in it

1349
00:56:07,519 --> 00:56:11,759
right um sometimes i mean it doesn't

1350
00:56:11,199 --> 00:56:16,000
have to

1351
00:56:11,760 --> 00:56:18,960
right so if we look at

1352
00:56:16,000 --> 00:56:18,960
the way that the

1353
00:56:20,318 --> 00:56:28,558
tu the way the connection works here

1354
00:56:24,639 --> 00:56:30,239
so when we do this we want to be able to

1355
00:56:28,559 --> 00:56:33,599
say that this room has

1356
00:56:30,239 --> 00:56:35,598
like a locking door on it and then

1357
00:56:33,599 --> 00:56:37,200
when the rooms get generated and the

1358
00:56:35,599 --> 00:56:41,359
connection gets placed between them

1359
00:56:37,199 --> 00:56:44,639
a door gets placed it onto that

1360
00:56:41,358 --> 00:56:45,838
separator right on the side of the room

1361
00:56:44,639 --> 00:56:48,639
you're coming from

1362
00:56:45,838 --> 00:56:50,318
because presumably doesn't lock or at

1363
00:56:48,639 --> 00:56:54,078
least most of the time

1364
00:56:50,318 --> 00:56:56,880
it doesn't uh like

1365
00:56:54,079 --> 00:56:58,960
when you go backwards right it doesn't

1366
00:56:56,880 --> 00:57:02,000
actually

1367
00:56:58,960 --> 00:57:13,838
need to lock you out most of the time

1368
00:57:02,000 --> 00:57:13,838
so if we look at the connection the

1369
00:57:14,318 --> 00:57:19,759
the rooms presumably both point to a gen

1370
00:57:17,199 --> 00:57:19,759
connection

1371
00:57:21,838 --> 00:57:28,239
uh which of course again can't get to

1372
00:57:24,480 --> 00:57:28,240
there we go um

1373
00:57:37,358 --> 00:57:42,239
so yeah i guess what i would say is so

1374
00:57:40,480 --> 00:57:43,838
so we should probably just have two

1375
00:57:42,239 --> 00:57:46,239
types of doors

1376
00:57:43,838 --> 00:57:47,920
uh two types of door flags or you know

1377
00:57:46,239 --> 00:57:49,358
whatever you want to call out here

1378
00:57:47,920 --> 00:57:51,599
you know when we generate these

1379
00:57:49,358 --> 00:57:55,519
connections we would just have like

1380
00:57:51,599 --> 00:57:58,798
door from a to b and dora from b

1381
00:57:55,519 --> 00:58:01,679
to a right and so

1382
00:57:58,798 --> 00:58:03,440
there's two squares there and we can

1383
00:58:01,679 --> 00:58:05,838
make doors

1384
00:58:03,440 --> 00:58:07,280
that lock from either side so you could

1385
00:58:05,838 --> 00:58:09,119
have a connection where you have to

1386
00:58:07,280 --> 00:58:11,359
complete the room on either side

1387
00:58:09,119 --> 00:58:13,280
in order to open but like so there's

1388
00:58:11,358 --> 00:58:14,880
there's a door on both sides

1389
00:58:13,280 --> 00:58:16,559
or we can have one where there's just a

1390
00:58:14,880 --> 00:58:18,240
door on one side if it's just like for

1391
00:58:16,559 --> 00:58:19,680
forward motion or something so depending

1392
00:58:18,239 --> 00:58:22,159
on how like the dungeon

1393
00:58:19,679 --> 00:58:23,440
that part of the dungeon is laid out

1394
00:58:22,159 --> 00:58:27,039
these could be set

1395
00:58:23,440 --> 00:58:28,720
right so and then when we actually

1396
00:58:27,039 --> 00:58:31,039
generate the room

1397
00:58:28,719 --> 00:58:31,039
um

1398
00:58:32,239 --> 00:58:39,408
i'm assuming um

1399
00:58:36,210 --> 00:58:39,409
[Music]

1400
00:58:39,599 --> 00:58:42,798
i'm assuming that this is relatively

1401
00:58:42,318 --> 00:58:45,519
yeah

1402
00:58:42,798 --> 00:58:48,838
so so you can see here like we go

1403
00:58:45,519 --> 00:58:52,960
through the connections

1404
00:58:48,838 --> 00:58:57,838
that are placed in here

1405
00:58:52,960 --> 00:59:00,079
and we we just

1406
00:58:57,838 --> 00:59:01,838
we can just handle the door like right

1407
00:59:00,079 --> 00:59:03,039
here so we look at like the connections

1408
00:59:01,838 --> 00:59:06,000
we've got

1409
00:59:03,039 --> 00:59:08,480
if we're supposed to have a door in this

1410
00:59:06,000 --> 00:59:14,559
particular location

1411
00:59:08,480 --> 00:59:14,559
then we just do this code kind of sucks

1412
00:59:16,480 --> 00:59:21,679
i mean obviously it's kind of crappy

1413
00:59:19,760 --> 00:59:23,200
it's entirely implicit meaning we loop

1414
00:59:21,679 --> 00:59:24,399
over each tile and then do all the

1415
00:59:23,199 --> 00:59:26,159
things we're gonna do for the tile so

1416
00:59:24,400 --> 00:59:26,720
this is this is just like garbage right

1417
00:59:26,159 --> 00:59:30,159
you wouldn't

1418
00:59:26,719 --> 00:59:33,838
do it this way um but you know

1419
00:59:30,159 --> 00:59:33,838
it happens right

1420
00:59:43,440 --> 00:59:45,679
a lot of stuff happened on the chat

1421
00:59:44,559 --> 00:59:46,880
today is that because there's so many

1422
00:59:45,679 --> 00:59:49,118
people viewing probably because there's

1423
00:59:46,880 --> 00:59:52,160
so many people doing

1424
00:59:49,119 --> 00:59:57,119
um anyway back to

1425
00:59:52,159 --> 00:59:58,960
our story so if i want to

1426
00:59:57,119 --> 01:00:00,480
i should be able to still flip stream

1427
00:59:58,960 --> 01:00:02,559
this in there and you know like

1428
01:00:00,480 --> 01:00:04,240
maybe we need to like improve this code

1429
01:00:02,559 --> 01:00:06,960
a bit and we'll do that

1430
01:00:04,239 --> 01:00:08,479
like as we go but for now we just want

1431
01:00:06,960 --> 01:00:12,960
to probably look and say

1432
01:00:08,480 --> 01:00:15,599
hey if this this particular tile

1433
01:00:12,960 --> 01:00:17,760
um and you can see here like this is the

1434
01:00:15,599 --> 01:00:20,960
thing that would tell us about the tile

1435
01:00:17,760 --> 01:00:22,799
if this particular tile is where the

1436
01:00:20,960 --> 01:00:24,079
door would be for one of these two

1437
01:00:22,798 --> 01:00:28,079
things

1438
01:00:24,079 --> 01:00:32,240
then we want to create that

1439
01:00:28,079 --> 01:00:36,318
door right now we don't know which door

1440
01:00:32,239 --> 01:00:38,798
we don't know which room we are so

1441
01:00:36,318 --> 01:00:39,599
right we want to see like which room we

1442
01:00:38,798 --> 01:00:42,400
are of

1443
01:00:39,599 --> 01:00:43,519
a or b because we don't need to generate

1444
01:00:42,400 --> 01:00:45,920
the door

1445
01:00:43,519 --> 01:00:46,719
for the other room it will generate its

1446
01:00:45,920 --> 01:00:50,480
own door

1447
01:00:46,719 --> 01:00:53,759
there right and so

1448
01:00:50,480 --> 01:00:54,719
i'm gonna probably say let's do this the

1449
01:00:53,760 --> 01:00:58,319
reverse

1450
01:00:54,719 --> 01:01:01,199
way around in terms of creating it

1451
01:00:58,318 --> 01:01:01,679
because it's just probably easier to do

1452
01:01:01,199 --> 01:01:05,598
that

1453
01:01:01,679 --> 01:01:08,159
like i'm gonna say like hey let's just

1454
01:01:05,599 --> 01:01:10,160
make this thing in fact like let's even

1455
01:01:08,159 --> 01:01:14,159
go one step further

1456
01:01:10,159 --> 01:01:16,239
and say like after we create this crap

1457
01:01:14,159 --> 01:01:17,920
um and we're down here and we're like

1458
01:01:16,239 --> 01:01:19,838
spamming out entities

1459
01:01:17,920 --> 01:01:21,760
like right before we do that let's loop

1460
01:01:19,838 --> 01:01:24,798
over the connections

1461
01:01:21,760 --> 01:01:27,680
from this room to the other rooms and

1462
01:01:24,798 --> 01:01:28,079
let's find out if we have any doors like

1463
01:01:27,679 --> 01:01:31,279
if

1464
01:01:28,079 --> 01:01:35,920
on door from a to b

1465
01:01:31,280 --> 01:01:35,920
um you know and we're door a

1466
01:01:36,838 --> 01:01:42,000
or con door from b to a

1467
01:01:40,000 --> 01:01:43,679
and word b right you know this this kind

1468
01:01:42,000 --> 01:01:45,440
of thing right

1469
01:01:43,679 --> 01:01:46,960
so what i want to say here is like all

1470
01:01:45,440 --> 01:01:50,159
right if there's a door from a

1471
01:01:46,960 --> 01:01:53,838
to b and we are room a

1472
01:01:50,159 --> 01:01:57,920
so so the the um

1473
01:01:53,838 --> 01:02:01,119
the con a is us right

1474
01:01:57,920 --> 01:02:05,280
um alternatively if there's a door

1475
01:02:01,119 --> 01:02:08,318
from b to a and we are b

1476
01:02:05,280 --> 01:02:09,599
in either case then we have a

1477
01:02:08,318 --> 01:02:12,639
responsibility

1478
01:02:09,599 --> 01:02:13,670
what did i miss that

1479
01:02:12,639 --> 01:02:16,000
yes i did

1480
01:02:13,670 --> 01:02:20,639
[Music]

1481
01:02:16,000 --> 01:02:24,239
right right

1482
01:02:20,639 --> 01:02:26,719
um so in that case where we have

1483
01:02:24,239 --> 01:02:26,719
a um

1484
01:02:27,280 --> 01:02:31,119
where we know we have a door and we know

1485
01:02:29,358 --> 01:02:32,880
that it's our door

1486
01:02:31,119 --> 01:02:35,039
then what we want to do is take the

1487
01:02:32,880 --> 01:02:38,160
volume of this thing

1488
01:02:35,039 --> 01:02:41,520
and intersect it with us so that we know

1489
01:02:38,159 --> 01:02:44,239
where we're gonna place this thing right

1490
01:02:41,519 --> 01:02:46,559
uh where this door should be or at least

1491
01:02:44,239 --> 01:02:49,759
somewhere where the door could be

1492
01:02:46,559 --> 01:02:51,119
so we would take the volume of the

1493
01:02:49,760 --> 01:02:54,319
connection

1494
01:02:51,119 --> 01:02:58,400
and the volume of the room and just do

1495
01:02:54,318 --> 01:02:58,400
the intersection um

1496
01:03:01,119 --> 01:03:10,880
so enter sex

1497
01:03:06,480 --> 01:03:10,880
let's say i'm sure we wrote that

1498
01:03:12,318 --> 01:03:17,838
right um

1499
01:03:21,679 --> 01:03:26,159
i really gotta update the four coder

1500
01:03:23,920 --> 01:03:26,159
stuff

1501
01:03:26,880 --> 01:03:31,599
okay so if i take the volume of the

1502
01:03:30,880 --> 01:03:33,599
connection

1503
01:03:31,599 --> 01:03:34,798
and the volume of the room and i

1504
01:03:33,599 --> 01:03:36,400
intersect those two

1505
01:03:34,798 --> 01:03:37,838
that will produce the location where the

1506
01:03:36,400 --> 01:03:40,079
door should go

1507
01:03:37,838 --> 01:03:41,358
um and then i just have to actually

1508
01:03:40,079 --> 01:03:43,680
create the door

1509
01:03:41,358 --> 01:03:44,400
and so for now i'm just gonna do add

1510
01:03:43,679 --> 01:03:47,358
obstacle

1511
01:03:44,400 --> 01:03:49,039
because i can and so in the same way

1512
01:03:47,358 --> 01:03:52,159
that i'm making like

1513
01:03:49,039 --> 01:03:54,400
uh the trees and stuff like here's

1514
01:03:52,159 --> 01:03:56,078
here's us placing a tree right so we

1515
01:03:54,400 --> 01:03:59,039
could just place

1516
01:03:56,079 --> 01:04:01,119
a door like this and all we have to do

1517
01:03:59,039 --> 01:04:03,280
is just call add obstacle

1518
01:04:01,119 --> 01:04:04,640
um i don't actually want it to be a tree

1519
01:04:03,280 --> 01:04:07,039
but i'm going to leave it as a tree

1520
01:04:04,639 --> 01:04:08,960
for now because hey that's fine i can

1521
01:04:07,039 --> 01:04:10,799
see that it's working

1522
01:04:08,960 --> 01:04:12,798
um and so i want to be able to place

1523
01:04:10,798 --> 01:04:14,880
this thing at this location

1524
01:04:12,798 --> 01:04:17,199
and so in order to do that i would need

1525
01:04:14,880 --> 01:04:18,000
to know like where this thing actually

1526
01:04:17,199 --> 01:04:21,919
is

1527
01:04:18,000 --> 01:04:25,440
and so like when we are placing entities

1528
01:04:21,920 --> 01:04:26,000
you can see in here uh we've we've got

1529
01:04:25,440 --> 01:04:29,200
the

1530
01:04:26,000 --> 01:04:32,239
the grid and the grid

1531
01:04:29,199 --> 01:04:35,679
helps us do our construction

1532
01:04:32,239 --> 01:04:40,239
so i want to

1533
01:04:35,679 --> 01:04:43,919
get like i want to get the

1534
01:04:40,239 --> 01:04:47,919
i i want to access the grid's actual

1535
01:04:43,920 --> 01:04:51,358
stuff like get this right

1536
01:04:47,920 --> 01:04:55,838
and so this is relative

1537
01:04:51,358 --> 01:04:55,838
so the

1538
01:04:58,318 --> 01:05:03,119
so you can kind of see like it would be

1539
01:05:00,639 --> 01:05:06,639
nice if there was one of these that was

1540
01:05:03,119 --> 01:05:09,039
sensible um and and

1541
01:05:06,639 --> 01:05:10,400
at the moment it looks like there isn't

1542
01:05:09,039 --> 01:05:13,839
right we don't have a get

1543
01:05:10,400 --> 01:05:23,838
like absolute location so

1544
01:05:13,838 --> 01:05:23,838
that's kind of annoying and

1545
01:05:32,000 --> 01:05:35,679
i think i'm just going to write one my

1546
01:05:33,838 --> 01:05:38,798
only question here

1547
01:05:35,679 --> 01:05:42,078
so so one of the things that's kind of

1548
01:05:38,798 --> 01:05:45,759
weird and i don't know that we

1549
01:05:42,079 --> 01:05:48,000
really said too much about it

1550
01:05:45,760 --> 01:05:48,799
but i just want to verify before i go

1551
01:05:48,000 --> 01:05:52,000
any further

1552
01:05:48,798 --> 01:05:52,719
down that route that these volumes are

1553
01:05:52,000 --> 01:05:57,039
actually

1554
01:05:52,719 --> 01:05:57,038
absolute space so

1555
01:05:57,280 --> 01:06:02,000
yeah the gen volume

1556
01:06:02,838 --> 01:06:05,838
and

1557
01:06:07,280 --> 01:06:10,319
yeah so these volumes are in absolute

1558
01:06:09,760 --> 01:06:13,200
space

1559
01:06:10,318 --> 01:06:14,719
i hope uh and then the connections are

1560
01:06:13,199 --> 01:06:15,439
too i think so it looks like that's all

1561
01:06:14,719 --> 01:06:18,239
good

1562
01:06:15,440 --> 01:06:19,760
so really uh this is all fine and the

1563
01:06:18,239 --> 01:06:20,959
only thing i'm saying is like so when i

1564
01:06:19,760 --> 01:06:23,119
do this intersection

1565
01:06:20,960 --> 01:06:25,119
right i need it to be i need to be able

1566
01:06:23,119 --> 01:06:27,519
to get like the tile

1567
01:06:25,119 --> 01:06:28,960
out of here that's like the actual tile

1568
01:06:27,519 --> 01:06:31,759
um

1569
01:06:28,960 --> 01:06:32,079
based on the offset so like you want a

1570
01:06:31,760 --> 01:06:37,359
get

1571
01:06:32,079 --> 01:06:37,359
tile abs right i want to be able to say

1572
01:06:37,599 --> 01:06:41,039
um something like this

1573
01:06:41,679 --> 01:06:48,639
so you when i pass a a gen v3

1574
01:06:44,880 --> 01:06:52,079
here i want to say that this is offset

1575
01:06:48,639 --> 01:06:55,598
uh by the min tile so basically this

1576
01:06:52,079 --> 01:06:59,039
p value here would be like p abs

1577
01:06:55,599 --> 01:07:03,039
and p ab p would be p

1578
01:06:59,039 --> 01:07:06,480
abs minus uh the min pile right

1579
01:07:03,039 --> 01:07:09,920
does that make sense um so that way

1580
01:07:06,480 --> 01:07:11,358
what would happen is what

1581
01:07:09,920 --> 01:07:12,960
i don't know what that is that doing

1582
01:07:11,358 --> 01:07:16,000
there that's interesting

1583
01:07:12,960 --> 01:07:16,000
um so

1584
01:07:16,559 --> 01:07:20,559
that's that's that's well i don't know

1585
01:07:19,838 --> 01:07:23,920
what that is

1586
01:07:20,559 --> 01:07:26,960
that's something so anyway uh if we

1587
01:07:23,920 --> 01:07:29,680
go and go to the an editor

1588
01:07:26,960 --> 01:07:30,240
get a generator traversal here uh what i

1589
01:07:29,679 --> 01:07:32,000
want to do

1590
01:07:30,239 --> 01:07:34,879
is just be able to say like look get me

1591
01:07:32,000 --> 01:07:37,679
where this thing's supposed to be

1592
01:07:34,880 --> 01:07:38,240
so whatever the door volume uh location

1593
01:07:37,679 --> 01:07:40,318
is

1594
01:07:38,239 --> 01:07:41,519
there should be like a min uh right on

1595
01:07:40,318 --> 01:07:42,880
that it doesn't matter which one it

1596
01:07:41,519 --> 01:07:43,358
should only be one wide so we'll just

1597
01:07:42,880 --> 01:07:46,400
grab them

1598
01:07:43,358 --> 01:07:47,038
in and we'll say hey uh get the the tile

1599
01:07:46,400 --> 01:07:50,079
here

1600
01:07:47,039 --> 01:07:52,640
uh the tile in question and

1601
01:07:50,079 --> 01:07:53,760
uh that should give me back one of those

1602
01:07:52,639 --> 01:07:57,118
edit tiles

1603
01:07:53,760 --> 01:07:57,839
and the edit tile would presumably let

1604
01:07:57,119 --> 01:08:00,079
me

1605
01:07:57,838 --> 01:08:02,318
create the thing that i actually need

1606
01:08:00,079 --> 01:08:02,318
right

1607
01:08:05,679 --> 01:08:25,599
and so how we get the

1608
01:08:08,798 --> 01:08:28,158
actual like placements

1609
01:08:25,600 --> 01:08:28,159
i'm not sure

1610
01:08:30,000 --> 01:08:33,279
how were these guys getting the

1611
01:08:31,359 --> 01:08:35,199
placement so

1612
01:08:33,279 --> 01:08:36,719
when they go in here they say gen room

1613
01:08:35,198 --> 01:08:39,039
tile query

1614
01:08:36,719 --> 01:08:39,039
pending

1615
01:08:41,680 --> 01:08:47,679
[Music]

1616
01:08:44,560 --> 01:08:53,839
grid region creator

1617
01:08:47,679 --> 01:08:53,838
asset ref

1618
01:08:53,920 --> 01:09:08,719
so it's edit tile contents

1619
01:09:06,319 --> 01:09:08,719
all right

1620
01:09:14,399 --> 01:09:17,198
so something like that

1621
01:09:17,759 --> 01:09:21,838
uh and presumably this just has what i

1622
01:09:19,759 --> 01:09:21,838
need

1623
01:09:22,640 --> 01:09:26,319
right so presumably it's just it's just

1624
01:09:25,600 --> 01:09:29,920
that

1625
01:09:26,319 --> 01:09:33,520
the traversable on that on that entity

1626
01:09:29,920 --> 01:09:35,838
um which there sort of has to

1627
01:09:33,520 --> 01:09:35,839
be

1628
01:09:38,319 --> 01:09:41,520
this should be cleaner

1629
01:09:41,679 --> 01:09:45,440
like because this is too much code

1630
01:09:43,838 --> 01:09:48,719
there's there's really no need for

1631
01:09:45,439 --> 01:09:53,759
this much garbage to be happening

1632
01:09:48,719 --> 01:09:53,759
um so we should probably fix that

1633
01:09:56,079 --> 01:10:02,800
uh anyway so what would happen now if i

1634
01:09:59,198 --> 01:10:04,399
close the game and rerun it is you know

1635
01:10:02,800 --> 01:10:05,840
nothing should be different so if i hop

1636
01:10:04,399 --> 01:10:07,039
down there because we never set like

1637
01:10:05,840 --> 01:10:08,319
none of those connections are set to

1638
01:10:07,039 --> 01:10:10,640
have a door

1639
01:10:08,319 --> 01:10:11,359
so in theory if i hop down there we'll

1640
01:10:10,640 --> 01:10:13,280
see nothing

1641
01:10:11,359 --> 01:10:15,198
because nobody should have run that code

1642
01:10:13,279 --> 01:10:16,639
and there shouldn't be anything in it

1643
01:10:15,198 --> 01:10:18,479
and then what i'll do is i'll pop over

1644
01:10:16,640 --> 01:10:21,119
and set that code and see

1645
01:10:18,479 --> 01:10:21,599
if we see any changes right so if this

1646
01:10:21,119 --> 01:10:23,679
is the

1647
01:10:21,600 --> 01:10:25,280
the area you can see there's there's no

1648
01:10:23,679 --> 01:10:27,199
doors anywhere

1649
01:10:25,279 --> 01:10:28,800
um and so now what we're hoping for is

1650
01:10:27,198 --> 01:10:31,678
we can turn on doors

1651
01:10:28,800 --> 01:10:33,199
by like in the world area like the

1652
01:10:31,679 --> 01:10:35,840
create dungeon

1653
01:10:33,198 --> 01:10:36,479
um if we want to set a door we can just

1654
01:10:35,840 --> 01:10:40,640
set one

1655
01:10:36,479 --> 01:10:42,158
so in here where we do the connect call

1656
01:10:40,640 --> 01:10:43,840
presumably we were smart enough to have

1657
01:10:42,158 --> 01:10:46,319
that return a connection

1658
01:10:43,840 --> 01:10:46,319
we were

1659
01:10:46,960 --> 01:10:50,640
so now we can basically say like okay

1660
01:10:48,880 --> 01:10:53,920
that connection door from

1661
01:10:50,640 --> 01:10:56,000
a to b is true um and then like you know

1662
01:10:53,920 --> 01:10:57,679
maybe our code just flames out and dies

1663
01:10:56,000 --> 01:10:59,439
which is entirely possible

1664
01:10:57,679 --> 01:11:00,960
but at least we'll know it's running

1665
01:10:59,439 --> 01:11:02,639
which would be good

1666
01:11:00,960 --> 01:11:04,399
um all right it didn't crash which is

1667
01:11:02,640 --> 01:11:07,440
not great because probably that means it

1668
01:11:04,399 --> 01:11:10,238
didn't run but you know

1669
01:11:07,439 --> 01:11:11,279
hope springs eternal it may just work

1670
01:11:10,238 --> 01:11:13,439
and

1671
01:11:11,279 --> 01:11:14,639
you know if it does it does don't look a

1672
01:11:13,439 --> 01:11:18,079
gift code in the mouth

1673
01:11:14,640 --> 01:11:20,079
is what i always say um

1674
01:11:18,079 --> 01:11:21,519
i don't actually always oh and there it

1675
01:11:20,079 --> 01:11:24,840
is

1676
01:11:21,520 --> 01:11:29,360
so so there's our door and

1677
01:11:24,840 --> 01:11:31,119
uh you know once we have a door created

1678
01:11:29,359 --> 01:11:34,158
the only thing we now need is something

1679
01:11:31,119 --> 01:11:37,279
that actually like unlocks the door

1680
01:11:34,158 --> 01:11:40,960
and i don't actually have

1681
01:11:37,279 --> 01:11:44,880
a super good idea about

1682
01:11:40,960 --> 01:11:47,359
what that would mean per se

1683
01:11:44,880 --> 01:11:50,319
i assume it means something like the

1684
01:11:47,359 --> 01:11:50,319
door just kind of like

1685
01:11:51,039 --> 01:11:57,679
sucks down into the floor or something

1686
01:11:57,760 --> 01:12:02,480
maybe um in other words like when when

1687
01:12:00,719 --> 01:12:03,600
like let you know i wanted to like hop

1688
01:12:02,479 --> 01:12:06,399
on a tile it unlocks the door or

1689
01:12:03,600 --> 01:12:06,400
something like that right

1690
01:12:06,640 --> 01:12:13,679
animation wise i'm not sure

1691
01:12:10,000 --> 01:12:15,439
what i actually want that to look like

1692
01:12:13,679 --> 01:12:17,600
but it's probably just it sinks into the

1693
01:12:15,439 --> 01:12:20,839
floor that seems like a zeldy

1694
01:12:17,600 --> 01:12:24,560
isaac-y sort of thing that would happen

1695
01:12:20,840 --> 01:12:24,560
maybe um

1696
01:12:25,359 --> 01:12:29,119
let's just say that that it was i don't

1697
01:12:28,000 --> 01:12:33,039
know

1698
01:12:29,119 --> 01:12:33,599
um so so you know that's probably what i

1699
01:12:33,039 --> 01:12:35,119
would say

1700
01:12:33,600 --> 01:12:37,039
is we'll just have it so that that you

1701
01:12:35,119 --> 01:12:38,319
know it sinks on into the floor maybe

1702
01:12:37,039 --> 01:12:41,439
that's what i'll do next time

1703
01:12:38,319 --> 01:12:46,000
um because that now we're now we're good

1704
01:12:41,439 --> 01:12:48,079
um and yeah we should be fine

1705
01:12:46,000 --> 01:12:49,359
so a bunch of stuff to do uh we'll take

1706
01:12:48,079 --> 01:12:51,840
questions now but

1707
01:12:49,359 --> 01:12:51,839
we're good

1708
01:13:29,198 --> 01:13:32,719
stock overflow says you must use smart

1709
01:13:30,960 --> 01:13:35,359
pointers the handmade hero code base has

1710
01:13:32,719 --> 01:13:39,279
no smart pointers how can this be

1711
01:13:35,359 --> 01:13:43,439
um so

1712
01:13:39,279 --> 01:13:47,599
so roughly what i would say

1713
01:13:43,439 --> 01:13:50,479
um about that is

1714
01:13:47,600 --> 01:13:51,679
you can imagine if you imagine like a

1715
01:13:50,479 --> 01:13:55,039
programmer's

1716
01:13:51,679 --> 01:13:58,239
life cycle um

1717
01:13:55,039 --> 01:14:01,840
you know we it looks something like like

1718
01:13:58,238 --> 01:14:01,839
the following

1719
01:14:12,640 --> 01:14:19,520
so you know no one's like

1720
01:14:16,000 --> 01:14:22,319
just a born knowing how to program

1721
01:14:19,520 --> 01:14:24,159
it's something that you learn and inside

1722
01:14:22,319 --> 01:14:27,679
your brain

1723
01:14:24,158 --> 01:14:31,039
you learn to program in

1724
01:14:27,679 --> 01:14:34,158
in very definitely in stages right

1725
01:14:31,039 --> 01:14:38,158
and the stages are pretty

1726
01:14:34,158 --> 01:14:41,119
uh consistent i think and so we won't

1727
01:14:38,158 --> 01:14:42,238
like i won't try to you know do them all

1728
01:14:41,119 --> 01:14:45,359
here

1729
01:14:42,238 --> 01:14:46,559
but at some point when you go through

1730
01:14:45,359 --> 01:14:49,679
these stages

1731
01:14:46,560 --> 01:14:52,960
you get to stage n and stage

1732
01:14:49,679 --> 01:14:56,719
n is i guess what i would call the

1733
01:14:52,960 --> 01:15:01,279
individual element thinking

1734
01:14:56,719 --> 01:15:01,279
right um

1735
01:15:04,079 --> 01:15:11,198
individual element thinking is when you

1736
01:15:07,198 --> 01:15:15,359
think of each specific piece of data

1737
01:15:11,198 --> 01:15:17,839
in your code as having its own lifetime

1738
01:15:15,359 --> 01:15:19,039
um so for example if you're going to

1739
01:15:17,840 --> 01:15:23,440
create

1740
01:15:19,039 --> 01:15:23,439
like in our code we have entities

1741
01:15:23,520 --> 01:15:30,239
you think about every entity

1742
01:15:26,800 --> 01:15:33,760
as getting like a new

1743
01:15:30,238 --> 01:15:35,519
or a malloc or you know the first time

1744
01:15:33,760 --> 01:15:37,920
you create it

1745
01:15:35,520 --> 01:15:39,199
and then you think of it having like a

1746
01:15:37,920 --> 01:15:41,199
an end point

1747
01:15:39,198 --> 01:15:42,799
that it's its own and that's where you

1748
01:15:41,198 --> 01:15:45,359
call like delete

1749
01:15:42,800 --> 01:15:46,079
or the garbage collector you know cleans

1750
01:15:45,359 --> 01:15:49,279
it up

1751
01:15:46,079 --> 01:15:51,039
or a smart pointer in this case

1752
01:15:49,279 --> 01:15:53,439
automatically deletes it because someone

1753
01:15:51,039 --> 01:15:56,800
else is owning it or whatever right

1754
01:15:53,439 --> 01:16:00,559
and these architectures tend to look um

1755
01:15:56,800 --> 01:16:03,600
like they have like raai style

1756
01:16:00,560 --> 01:16:07,039
um they have like you know

1757
01:16:03,600 --> 01:16:10,000
uh literally like thousands or

1758
01:16:07,039 --> 01:16:10,640
millions of new delete you know or

1759
01:16:10,000 --> 01:16:14,399
malloc

1760
01:16:10,640 --> 01:16:18,320
free uh they have

1761
01:16:14,399 --> 01:16:21,839
giant nests of pointers from things

1762
01:16:18,319 --> 01:16:25,039
to other things right

1763
01:16:21,840 --> 01:16:29,760
and this is just some place you get to

1764
01:16:25,039 --> 01:16:29,760
in your in your thinking about how uh

1765
01:16:30,399 --> 01:16:33,679
this is like with respect to

1766
01:16:31,600 --> 01:16:35,840
architecture

1767
01:16:33,679 --> 01:16:35,840
right

1768
01:16:38,000 --> 01:16:41,920
now a lot of people never move past this

1769
01:16:40,640 --> 01:16:43,360
point

1770
01:16:41,920 --> 01:16:44,880
sometimes they don't move past this

1771
01:16:43,359 --> 01:16:46,158
point because they never program in a

1772
01:16:44,880 --> 01:16:46,960
language that doesn't have a garbage

1773
01:16:46,158 --> 01:16:48,319
collector

1774
01:16:46,960 --> 01:16:49,920
if you're always in a language with a

1775
01:16:48,319 --> 01:16:52,319
garbage collector you probably don't

1776
01:16:49,920 --> 01:16:54,079
think about these things very much

1777
01:16:52,319 --> 01:16:55,759
and to the extent that you ever actually

1778
01:16:54,079 --> 01:16:56,880
will it will only be because you're

1779
01:16:55,760 --> 01:16:57,520
trying to do something performance

1780
01:16:56,880 --> 01:16:59,520
oriented

1781
01:16:57,520 --> 01:17:01,199
and you have to start pretending you're

1782
01:16:59,520 --> 01:17:02,640
actually managing your own memory even

1783
01:17:01,198 --> 01:17:04,079
though the garbage collector is

1784
01:17:02,640 --> 01:17:05,600
and most people who write games in

1785
01:17:04,079 --> 01:17:06,399
garbage collected languages have had to

1786
01:17:05,600 --> 01:17:08,880
do this

1787
01:17:06,399 --> 01:17:10,799
but if you're just doing things that are

1788
01:17:08,880 --> 01:17:11,359
not like performance critical in that

1789
01:17:10,800 --> 01:17:14,960
way

1790
01:17:11,359 --> 01:17:16,319
you wouldn't know you'd never have to

1791
01:17:14,960 --> 01:17:21,439
get past here

1792
01:17:16,319 --> 01:17:21,439
right um

1793
01:17:23,679 --> 01:17:28,079
someone on the on that's the twitch said

1794
01:17:26,238 --> 01:17:29,279
try catch and i'll put that in here as

1795
01:17:28,079 --> 01:17:31,840
well

1796
01:17:29,279 --> 01:17:32,559
so this is individual element thinking

1797
01:17:31,840 --> 01:17:34,719
and

1798
01:17:32,560 --> 01:17:36,239
it's it's you know it's something

1799
01:17:34,719 --> 01:17:37,439
everyone does i've

1800
01:17:36,238 --> 01:17:39,439
definitely had a period where i was

1801
01:17:37,439 --> 01:17:40,639
programming that in so i

1802
01:17:39,439 --> 01:17:42,960
i don't want to say that people who do

1803
01:17:40,640 --> 01:17:45,199
it are stupid or something because

1804
01:17:42,960 --> 01:17:46,480
everyone does it like like there's no

1805
01:17:45,198 --> 01:17:48,158
not doing it

1806
01:17:46,479 --> 01:17:49,759
i don't know anyone who ever

1807
01:17:48,158 --> 01:17:50,879
successfully avoided this stage of

1808
01:17:49,760 --> 01:17:54,159
thinking

1809
01:17:50,880 --> 01:17:55,359
the stage is stupid meaning the code you

1810
01:17:54,158 --> 01:17:57,920
write will be stupid

1811
01:17:55,359 --> 01:17:58,799
but you are not stupid because everyone

1812
01:17:57,920 --> 01:18:02,079
does this

1813
01:17:58,800 --> 01:18:04,239
at some point the key is you have to get

1814
01:18:02,079 --> 01:18:08,479
to n plus one at some point

1815
01:18:04,238 --> 01:18:08,479
which is group thinking right

1816
01:18:11,279 --> 01:18:15,039
and group element thinking stages this

1817
01:18:14,000 --> 01:18:18,399
tends to be

1818
01:18:15,039 --> 01:18:21,760
like large collections um

1819
01:18:18,399 --> 01:18:26,719
created uh destroyed at

1820
01:18:21,760 --> 01:18:31,520
the same time you know uh almost no

1821
01:18:26,719 --> 01:18:36,719
uh you you very very few

1822
01:18:31,520 --> 01:18:40,080
uh new delete malloc free

1823
01:18:36,719 --> 01:18:43,198
um a heavy

1824
01:18:40,079 --> 01:18:46,960
use of scratch space

1825
01:18:43,198 --> 01:18:49,919
um typically like hashes and reuse

1826
01:18:46,960 --> 01:18:49,920
show up in here a lot

1827
01:18:50,000 --> 01:18:56,479
so i when you're talking about

1828
01:18:53,198 --> 01:19:00,000
making this jump when you make this jump

1829
01:18:56,479 --> 01:19:02,639
from n to n plus one so smart pointers

1830
01:19:00,000 --> 01:19:02,640
live here

1831
01:19:04,399 --> 01:19:11,359
right so at the stage when you're doing

1832
01:19:08,319 --> 01:19:14,079
when you're still stuck thinking about

1833
01:19:11,359 --> 01:19:15,679
individual pieces all having their own

1834
01:19:14,079 --> 01:19:17,920
lifetimes

1835
01:19:15,679 --> 01:19:18,880
the problem that you run into is that

1836
01:19:17,920 --> 01:19:20,560
there's so

1837
01:19:18,880 --> 01:19:22,079
many of these things i mean there's

1838
01:19:20,560 --> 01:19:25,120
literally millions or even

1839
01:19:22,079 --> 01:19:28,640
billions of them in a program

1840
01:19:25,119 --> 01:19:31,439
if you were to manually always be

1841
01:19:28,640 --> 01:19:33,360
allocating and freeing all these things

1842
01:19:31,439 --> 01:19:34,960
individually

1843
01:19:33,359 --> 01:19:36,719
you can see why people say well you've

1844
01:19:34,960 --> 01:19:40,158
got to use smart pointers because

1845
01:19:36,719 --> 01:19:42,399
otherwise you have to remember to always

1846
01:19:40,158 --> 01:19:44,158
in two places you declare the pointer

1847
01:19:42,399 --> 01:19:46,479
and then in the destructor you have to

1848
01:19:44,158 --> 01:19:49,039
add a delete manually

1849
01:19:46,479 --> 01:19:49,759
you can see why why people think in

1850
01:19:49,039 --> 01:19:52,238
their head

1851
01:19:49,760 --> 01:19:54,079
smart pointer makes sense here because

1852
01:19:52,238 --> 01:19:55,678
it's a way of typing something

1853
01:19:54,079 --> 01:19:57,198
i can just look at one line that's the

1854
01:19:55,679 --> 01:19:59,920
declaration of the pointer and know that

1855
01:19:57,198 --> 01:20:02,158
it's going to get automatically freed

1856
01:19:59,920 --> 01:20:02,158
right

1857
01:20:03,679 --> 01:20:08,319
now the problem with this is you're

1858
01:20:05,679 --> 01:20:09,840
really just patching over a flaw in your

1859
01:20:08,319 --> 01:20:12,799
architecture

1860
01:20:09,840 --> 01:20:13,600
if two things are inextricably linked

1861
01:20:12,800 --> 01:20:15,760
such that you

1862
01:20:13,600 --> 01:20:17,520
have one get automatically freed when

1863
01:20:15,760 --> 01:20:20,079
the other one is freed

1864
01:20:17,520 --> 01:20:22,159
in all but the very very rarest of

1865
01:20:20,079 --> 01:20:24,238
circumstances what that means is those

1866
01:20:22,158 --> 01:20:25,679
things should actually have a combined

1867
01:20:24,238 --> 01:20:27,599
lifetime

1868
01:20:25,679 --> 01:20:29,279
and so what should actually happen is

1869
01:20:27,600 --> 01:20:32,400
you should have just had

1870
01:20:29,279 --> 01:20:35,439
one large pool that

1871
01:20:32,399 --> 01:20:37,439
all of those things got created in that

1872
01:20:35,439 --> 01:20:40,238
is just streaming into that pool

1873
01:20:37,439 --> 01:20:42,158
so that you never have to do that the

1874
01:20:40,238 --> 01:20:44,319
pool gets freed together

1875
01:20:42,158 --> 01:20:45,759
so you don't need to have this rat's

1876
01:20:44,319 --> 01:20:47,599
nest of pointers

1877
01:20:45,760 --> 01:20:49,679
that you crawl through to make sure you

1878
01:20:47,600 --> 01:20:51,760
eliminated everything

1879
01:20:49,679 --> 01:20:53,279
so that's what we do in handmade hero we

1880
01:20:51,760 --> 01:20:54,639
just have pools that get freed at the

1881
01:20:53,279 --> 01:20:57,039
right time

1882
01:20:54,639 --> 01:20:57,840
and everything that goes together goes

1883
01:20:57,039 --> 01:21:00,158
in the pool

1884
01:20:57,840 --> 01:21:00,880
so i never have to sit around running

1885
01:21:00,158 --> 01:21:02,960
around

1886
01:21:00,880 --> 01:21:04,560
grabbing pointer you know which is what

1887
01:21:02,960 --> 01:21:05,198
a smart smart pointer chains that's what

1888
01:21:04,560 --> 01:21:06,719
they do

1889
01:21:05,198 --> 01:21:07,919
one person gets freed across the next

1890
01:21:06,719 --> 01:21:08,480
person gets free calls the next person

1891
01:21:07,920 --> 01:21:11,600
gets free

1892
01:21:08,479 --> 01:21:14,079
right it's extremely inefficient

1893
01:21:11,600 --> 01:21:15,440
and so you're just wasting the user's

1894
01:21:14,079 --> 01:21:18,079
time by

1895
01:21:15,439 --> 01:21:18,799
dynamically discovering the scope of a

1896
01:21:18,079 --> 01:21:22,880
group

1897
01:21:18,800 --> 01:21:27,039
that you should have already known right

1898
01:21:22,880 --> 01:21:28,880
um so basically

1899
01:21:27,039 --> 01:21:30,719
when you move from here to here smart

1900
01:21:28,880 --> 01:21:31,840
pointers become irrelevant you really

1901
01:21:30,719 --> 01:21:34,800
don't need them anymore

1902
01:21:31,840 --> 01:21:35,600
right because you just don't have

1903
01:21:34,800 --> 01:21:37,760
ownership

1904
01:21:35,600 --> 01:21:39,199
concerns like the kind that you have

1905
01:21:37,760 --> 01:21:43,520
here right

1906
01:21:39,198 --> 01:21:46,799
um you could say uh owner

1907
01:21:43,520 --> 01:21:50,400
ownership is a constant concern

1908
01:21:46,800 --> 01:21:52,480
uh and mental overhead right whereas

1909
01:21:50,399 --> 01:21:55,599
here like

1910
01:21:52,479 --> 01:21:58,959
ownership is obvious

1911
01:21:55,600 --> 01:22:04,000
and you know uh trivial

1912
01:21:58,960 --> 01:22:04,000
in 99 of cases right

1913
01:22:04,399 --> 01:22:09,359
um so so basically like the thing to

1914
01:22:07,279 --> 01:22:12,000
understand here is just that

1915
01:22:09,359 --> 01:22:12,719
that all of the advice you see online

1916
01:22:12,000 --> 01:22:15,039
pretty much

1917
01:22:12,719 --> 01:22:17,039
is is for people thinking at this level

1918
01:22:15,039 --> 01:22:18,560
which is not where you want to be

1919
01:22:17,039 --> 01:22:20,158
like you you're going to have to go

1920
01:22:18,560 --> 01:22:21,840
through it at some point to understand

1921
01:22:20,158 --> 01:22:25,039
what's going on but your goal

1922
01:22:21,840 --> 01:22:29,199
is to go from here to here so

1923
01:22:25,039 --> 01:22:31,359
advice like use smart pointers or um

1924
01:22:29,198 --> 01:22:32,479
the rust borrow checker like all that

1925
01:22:31,359 --> 01:22:34,719
stuff

1926
01:22:32,479 --> 01:22:37,119
those are for people who are still not

1927
01:22:34,719 --> 01:22:40,239
very good at programming right there's

1928
01:22:37,119 --> 01:22:43,279
they're in a stage of architecture

1929
01:22:40,238 --> 01:22:46,399
that is very limited and

1930
01:22:43,279 --> 01:22:48,960
not appropriate for modern

1931
01:22:46,399 --> 01:22:49,439
high-performance well-architected code

1932
01:22:48,960 --> 01:22:52,480
it's an

1933
01:22:49,439 --> 01:22:56,158
old way of thinking that just still is

1934
01:22:52,479 --> 01:22:58,079
very prominent and you're just seeing

1935
01:22:56,158 --> 01:23:01,839
advice from that

1936
01:22:58,079 --> 01:23:04,158
just the goal is to move move on right

1937
01:23:01,840 --> 01:23:05,679
so don't waste a lot of time learning

1938
01:23:04,158 --> 01:23:07,359
all of this crap

1939
01:23:05,679 --> 01:23:09,760
you will have to go through this stage

1940
01:23:07,359 --> 01:23:11,679
because everyone does eventually

1941
01:23:09,760 --> 01:23:13,760
but the goal is to get out of it as fast

1942
01:23:11,679 --> 01:23:16,239
as you can because 100

1943
01:23:13,760 --> 01:23:18,159
of all code written in this style sucks

1944
01:23:16,238 --> 01:23:19,198
there is no such thing as a good piece

1945
01:23:18,158 --> 01:23:21,920
of code that has

1946
01:23:19,198 --> 01:23:24,399
these ideas in it because they are

1947
01:23:21,920 --> 01:23:28,480
inherently inefficient

1948
01:23:24,399 --> 01:23:31,679
bug buggy and over architected right

1949
01:23:28,479 --> 01:23:34,879
they're just not good right

1950
01:23:31,679 --> 01:23:37,840
so so this is what you're looking at and

1951
01:23:34,880 --> 01:23:38,960
so it's hard to discern when you see

1952
01:23:37,840 --> 01:23:40,400
advice like this

1953
01:23:38,960 --> 01:23:42,158
you're like where is it coming from and

1954
01:23:40,399 --> 01:23:43,039
what does it mean that's what it means

1955
01:23:42,158 --> 01:23:45,119
it means the people

1956
01:23:43,039 --> 01:23:46,238
are in this land and this is where they

1957
01:23:45,119 --> 01:23:48,399
live and

1958
01:23:46,238 --> 01:23:49,919
you know until they move from end to end

1959
01:23:48,399 --> 01:23:51,279
plus one

1960
01:23:49,920 --> 01:23:53,359
they're going to constantly be thinking

1961
01:23:51,279 --> 01:23:54,960
things like raii or smart pointers are

1962
01:23:53,359 --> 01:23:56,719
good but they're just not they're just

1963
01:23:54,960 --> 01:23:57,600
lousy architecture and when you move

1964
01:23:56,719 --> 01:23:59,359
past them you

1965
01:23:57,600 --> 01:24:02,159
notice immediately you're like oh wow

1966
01:23:59,359 --> 01:24:03,439
like actually all of that crap

1967
01:24:02,158 --> 01:24:07,519
that i used to have to spend time

1968
01:24:03,439 --> 01:24:07,519
dealing with is just gone now

1969
01:24:08,079 --> 01:24:17,840
does that help

1970
01:24:45,920 --> 01:24:50,158
the good of having to learn the h

1971
01:24:48,479 --> 01:24:54,000
handmade hero code base

1972
01:24:50,158 --> 01:24:56,559
is that the use of internal

1973
01:24:54,000 --> 01:24:58,829
impose the inability of use the stl as

1974
01:24:56,560 --> 01:25:00,639
it is there to define improve accomplish

1975
01:24:58,829 --> 01:25:03,439
[Laughter]

1976
01:25:00,639 --> 01:25:03,440
awesome okay

1977
01:25:11,679 --> 01:25:14,960
sun coder says n plus 2 is when you've

1978
01:25:13,439 --> 01:25:16,719
reached guru's stage after 30 years and

1979
01:25:14,960 --> 01:25:18,639
your code finally looks as simple as

1980
01:25:16,719 --> 01:25:20,239
written by someone at n minus 3 but is

1981
01:25:18,639 --> 01:25:22,960
free of all the bs

1982
01:25:20,238 --> 01:25:24,079
you're absolutely right like basically

1983
01:25:22,960 --> 01:25:27,520
my code

1984
01:25:24,079 --> 01:25:30,639
now looks a lot like my code

1985
01:25:27,520 --> 01:25:33,440
from 20 years ago minus a few

1986
01:25:30,639 --> 01:25:33,920
very critical stupid things right but

1987
01:25:33,439 --> 01:25:37,198
it's

1988
01:25:33,920 --> 01:25:41,119
hard to get there that's why i say like

1989
01:25:37,198 --> 01:25:43,839
you know i try not to

1990
01:25:41,119 --> 01:25:45,119
be too derogatory to people who talk

1991
01:25:43,840 --> 01:25:48,239
about these things

1992
01:25:45,119 --> 01:25:50,158
because it was me right

1993
01:25:48,238 --> 01:25:51,519
the temptation is once you know that

1994
01:25:50,158 --> 01:25:53,119
something is stupid

1995
01:25:51,520 --> 01:25:54,880
to say that someone who does it is

1996
01:25:53,119 --> 01:25:56,960
stupid but it's important to remember

1997
01:25:54,880 --> 01:25:59,920
that you were all so stupid

1998
01:25:56,960 --> 01:25:59,920
right so

1999
01:26:00,960 --> 01:26:06,000
you know stupid is as stupid as right so

2000
01:26:03,520 --> 01:26:07,679
like i've done all this stuff

2001
01:26:06,000 --> 01:26:09,520
and so i know that you go through that

2002
01:26:07,679 --> 01:26:12,800
stage

2003
01:26:09,520 --> 01:26:15,280
um so the so i can't say like

2004
01:26:12,800 --> 01:26:15,840
don't do this it's stupid because

2005
01:26:15,279 --> 01:26:18,399
actually

2006
01:26:15,840 --> 01:26:20,239
everyone will do this at some point what

2007
01:26:18,399 --> 01:26:23,599
i'm trying to say

2008
01:26:20,238 --> 01:26:24,319
is that like look it's a phase we go

2009
01:26:23,600 --> 01:26:27,360
through

2010
01:26:24,319 --> 01:26:28,559
it's not a good idea but and so the goal

2011
01:26:27,359 --> 01:26:32,000
is just to move

2012
01:26:28,560 --> 01:26:35,440
past it as soon as your brain is capable

2013
01:26:32,000 --> 01:26:38,639
of grappling with what's

2014
01:26:35,439 --> 01:26:41,119
actually going on right

2015
01:26:38,639 --> 01:26:41,840
you can think of a similar thing is like

2016
01:26:41,119 --> 01:26:44,319
it's like the

2017
01:26:41,840 --> 01:26:45,840
scope of your thinking has enlarged so

2018
01:26:44,319 --> 01:26:48,319
at this point your brain is

2019
01:26:45,840 --> 01:26:50,079
only capable of focusing on like a very

2020
01:26:48,319 --> 01:26:52,559
small piece of code

2021
01:26:50,079 --> 01:26:54,719
so obviously it has to think in terms of

2022
01:26:52,560 --> 01:26:57,840
things like rai

2023
01:26:54,719 --> 01:26:58,880
or pointer nests because you can only

2024
01:26:57,840 --> 01:27:00,800
think of like this

2025
01:26:58,880 --> 01:27:03,039
little piece it's just it's one of the

2026
01:27:00,800 --> 01:27:05,520
also reasons i think people like oop

2027
01:27:03,039 --> 01:27:06,158
is because it allows you to think very

2028
01:27:05,520 --> 01:27:07,520
small

2029
01:27:06,158 --> 01:27:09,439
you're just thinking about a little

2030
01:27:07,520 --> 01:27:10,000
small piece and not how the whole

2031
01:27:09,439 --> 01:27:14,000
program

2032
01:27:10,000 --> 01:27:16,719
works right and as you can get

2033
01:27:14,000 --> 01:27:18,158
even just a little bit larger so maybe

2034
01:27:16,719 --> 01:27:20,319
you're not at like the whole

2035
01:27:18,158 --> 01:27:21,920
system yet but you're a little bit

2036
01:27:20,319 --> 01:27:25,920
larger and now you're thinking of

2037
01:27:21,920 --> 01:27:28,158
systems of of the in the code

2038
01:27:25,920 --> 01:27:29,679
then you can move out to like oh

2039
01:27:28,158 --> 01:27:33,039
actually these things

2040
01:27:29,679 --> 01:27:34,719
flow to and bind together right

2041
01:27:33,039 --> 01:27:36,000
and when your brain can get there then

2042
01:27:34,719 --> 01:27:37,679
you can just throw all this away because

2043
01:27:36,000 --> 01:27:47,840
now you never need it anymore

2044
01:27:37,679 --> 01:27:47,840
right and you're you're up to here right

2045
01:27:58,840 --> 01:28:01,840
hmm

2046
01:28:03,600 --> 01:28:07,440
if you look at the old id code

2047
01:28:05,198 --> 01:28:09,279
wolfenstein 3d doom quake

2048
01:28:07,439 --> 01:28:10,879
there they already think of large groups

2049
01:28:09,279 --> 01:28:12,960
when it comes to memory or at least they

2050
01:28:10,880 --> 01:28:15,760
allocate just once and then go with it

2051
01:28:12,960 --> 01:28:17,520
why did we go backwards is what i was

2052
01:28:15,760 --> 01:28:19,840
taught at university from professors who

2053
01:28:17,520 --> 01:28:29,840
around the doom time

2054
01:28:19,840 --> 01:28:29,840
what happened um

2055
01:28:32,079 --> 01:28:35,359
i mean i guess what i would say is that

2056
01:28:33,760 --> 01:28:37,920
like

2057
01:28:35,359 --> 01:28:39,839
it's kind of an unfair comparison i mean

2058
01:28:37,920 --> 01:28:43,039
john carmack is like one of the

2059
01:28:39,840 --> 01:28:45,039
best programmers that's ever lived

2060
01:28:43,039 --> 01:28:46,479
and like your professor at university

2061
01:28:45,039 --> 01:28:50,960
like definitely isn't

2062
01:28:46,479 --> 01:28:54,238
right so comparing what

2063
01:28:50,960 --> 01:28:57,760
the person who wrote doom

2064
01:28:54,238 --> 01:28:59,839
knows about how to structure code

2065
01:28:57,760 --> 01:29:01,280
uh to somebody who's probably never even

2066
01:28:59,840 --> 01:29:03,039
shipped a commercial piece of software

2067
01:29:01,279 --> 01:29:06,960
which is like what most professors

2068
01:29:03,039 --> 01:29:10,319
are i mean is not

2069
01:29:06,960 --> 01:29:12,239
is not fair to the professor right

2070
01:29:10,319 --> 01:29:14,399
because this kind of thinking is about

2071
01:29:12,238 --> 01:29:16,000
production code it's not about computer

2072
01:29:14,399 --> 01:29:17,439
science quote unquote it has nothing to

2073
01:29:16,000 --> 01:29:19,039
do with the halting problem or whether

2074
01:29:17,439 --> 01:29:20,799
the lambda calculus is like a good

2075
01:29:19,039 --> 01:29:22,840
representation for like

2076
01:29:20,800 --> 01:29:25,920
proving something about computability

2077
01:29:22,840 --> 01:29:28,319
right it's not computer science

2078
01:29:25,920 --> 01:29:28,960
it's computer it's software engineering

2079
01:29:28,319 --> 01:29:30,479
right

2080
01:29:28,960 --> 01:29:32,158
and professors generally aren't

2081
01:29:30,479 --> 01:29:35,839
engineers

2082
01:29:32,158 --> 01:29:37,599
so uh the other problem is unfortunately

2083
01:29:35,840 --> 01:29:39,440
these days like language designers also

2084
01:29:37,600 --> 01:29:40,960
are very rarely engineers like they're

2085
01:29:39,439 --> 01:29:42,399
rarely people who ship lots of

2086
01:29:40,960 --> 01:29:43,840
production quality code and have like

2087
01:29:42,399 --> 01:29:46,319
really studied the problem sometimes

2088
01:29:43,840 --> 01:29:48,319
they are but oftentimes they're not

2089
01:29:46,319 --> 01:29:50,559
and so i think the problem is just like

2090
01:29:48,319 --> 01:29:52,000
yeah like that's not what happens it's

2091
01:29:50,560 --> 01:29:54,000
not like just because john carmack

2092
01:29:52,000 --> 01:29:55,359
knew something everyone knew it and

2093
01:29:54,000 --> 01:30:07,840
accepted it as true

2094
01:29:55,359 --> 01:30:07,839
right that's not what happens

2095
01:30:20,800 --> 01:30:24,480
6289 said nowadays engineers aren't

2096
01:30:23,760 --> 01:30:35,840
engineers

2097
01:30:24,479 --> 01:30:35,839
you're right yes

2098
01:31:02,880 --> 01:31:09,359
so uh uh joe ppp

2099
01:31:06,639 --> 01:31:10,400
there uh i mean i don't know how much

2100
01:31:09,359 --> 01:31:12,960
more vocal i can be

2101
01:31:10,399 --> 01:31:14,238
i say this all the time on this channel

2102
01:31:12,960 --> 01:31:17,439
and in my videos

2103
01:31:14,238 --> 01:31:21,359
and on twitter in the discord

2104
01:31:17,439 --> 01:31:24,319
um the the truth of the matter

2105
01:31:21,359 --> 01:31:26,399
i think is that you know people are just

2106
01:31:24,319 --> 01:31:28,319
saying stuff and we don't have metrics

2107
01:31:26,399 --> 01:31:30,238
to measure so you know it's hard to

2108
01:31:28,319 --> 01:31:33,359
prove that things are right or wrong

2109
01:31:30,238 --> 01:31:35,759
right but we're loud it's just

2110
01:31:33,359 --> 01:31:37,359
people choose not to do this they choose

2111
01:31:35,760 --> 01:31:38,880
to think that you know these other

2112
01:31:37,359 --> 01:31:41,759
methods are better so you know

2113
01:31:38,880 --> 01:31:43,520
that's that's on them i can't force

2114
01:31:41,760 --> 01:31:45,199
people to program a certain way

2115
01:31:43,520 --> 01:31:46,639
and also i don't really care if they do

2116
01:31:45,198 --> 01:31:49,039
or don't i mean it doesn't affect my

2117
01:31:46,639 --> 01:31:49,039
code

2118
01:31:56,840 --> 01:31:59,840
so

2119
01:32:22,158 --> 01:32:25,279
does this stuff apply to game engine

2120
01:32:23,600 --> 01:32:27,199
programming only or also

2121
01:32:25,279 --> 01:32:29,359
corporate logistics it's it's true for

2122
01:32:27,198 --> 01:32:31,039
all code it has nothing to do with the

2123
01:32:29,359 --> 01:32:33,039
type of code you're writing

2124
01:32:31,039 --> 01:32:35,279
your code is always better if you think

2125
01:32:33,039 --> 01:32:37,279
about things in terms of groups

2126
01:32:35,279 --> 01:32:39,679
that work together as opposed to

2127
01:32:37,279 --> 01:32:41,840
thinking in terms of pigeonhole elements

2128
01:32:39,679 --> 01:32:41,840
right

2129
01:32:52,840 --> 01:32:55,840
so

2130
01:33:09,679 --> 01:33:14,319
so yeah and i i'm not sure about the nn

2131
01:33:12,639 --> 01:33:15,840
plus one like series thing

2132
01:33:14,319 --> 01:33:17,679
like i don't know if it's possible to

2133
01:33:15,840 --> 01:33:20,840
teach someone

2134
01:33:17,679 --> 01:33:22,158
in a way that makes them skip and

2135
01:33:20,840 --> 01:33:24,480
altogether

2136
01:33:22,158 --> 01:33:25,198
it it might just not be right it might

2137
01:33:24,479 --> 01:33:27,839
be that you

2138
01:33:25,198 --> 01:33:30,079
be like i said it's a scope issue like

2139
01:33:27,840 --> 01:33:33,039
your brain has to start thinking

2140
01:33:30,079 --> 01:33:34,840
of the fundamental unit as not being

2141
01:33:33,039 --> 01:33:38,158
little micro

2142
01:33:34,840 --> 01:33:39,119
allocations right because the individual

2143
01:33:38,158 --> 01:33:40,238
element thinking is about

2144
01:33:39,119 --> 01:33:42,238
microallocations

2145
01:33:40,238 --> 01:33:44,158
right it's about lots of little tiny

2146
01:33:42,238 --> 01:33:47,519
things that get allocated and deleted

2147
01:33:44,158 --> 01:33:50,799
that all have dependencies on each other

2148
01:33:47,520 --> 01:33:51,360
and the benefit of that is that your

2149
01:33:50,800 --> 01:33:53,760
brain

2150
01:33:51,359 --> 01:33:55,119
only has to think about the one tiny

2151
01:33:53,760 --> 01:33:58,159
thing when it writes it

2152
01:33:55,119 --> 01:33:59,920
right and that's why you see

2153
01:33:58,158 --> 01:34:01,359
like what i would sort of call like

2154
01:33:59,920 --> 01:34:03,440
there's there's a separate thing in

2155
01:34:01,359 --> 01:34:08,399
stage and there's like this paranoia

2156
01:34:03,439 --> 01:34:08,399
too it's like it's like

2157
01:34:08,800 --> 01:34:12,960
a person in a room with a tin foil hat

2158
01:34:11,279 --> 01:34:15,359
where they're trying to guard

2159
01:34:12,960 --> 01:34:19,359
against every possible thing that could

2160
01:34:15,359 --> 01:34:22,399
happen to this type at any time

2161
01:34:19,359 --> 01:34:25,359
and people think they're doing

2162
01:34:22,399 --> 01:34:25,839
good programming when they do that but

2163
01:34:25,359 --> 01:34:28,880
it's

2164
01:34:25,840 --> 01:34:30,560
actually the opposite if you are trying

2165
01:34:28,880 --> 01:34:31,760
to prevent errors

2166
01:34:30,560 --> 01:34:34,000
that by the structure of your

2167
01:34:31,760 --> 01:34:37,119
architecture cannot happen

2168
01:34:34,000 --> 01:34:40,079
you are literally creating worse code

2169
01:34:37,119 --> 01:34:42,158
code only should do the minimal number

2170
01:34:40,079 --> 01:34:43,039
of things that it has to do to do the

2171
01:34:42,158 --> 01:34:46,638
job

2172
01:34:43,039 --> 01:34:47,760
anything else is just like ruining the

2173
01:34:46,639 --> 01:34:50,239
environment

2174
01:34:47,760 --> 01:34:50,960
right you are literally just expending

2175
01:34:50,238 --> 01:34:54,079
entropy

2176
01:34:50,960 --> 01:34:55,279
into the environment to melt the ice

2177
01:34:54,079 --> 01:34:58,319
caps that's all you're doing

2178
01:34:55,279 --> 01:35:01,039
right there is nothing clean

2179
01:34:58,319 --> 01:35:01,840
about code with 57 000 try catch

2180
01:35:01,039 --> 01:35:04,719
statements

2181
01:35:01,840 --> 01:35:05,440
and 50 million objects just to open a

2182
01:35:04,719 --> 01:35:08,399
file

2183
01:35:05,439 --> 01:35:09,599
right it's actually terrible and and

2184
01:35:08,399 --> 01:35:11,759
never should be done

2185
01:35:09,600 --> 01:35:12,800
because it's a tremendous amount of cpu

2186
01:35:11,760 --> 01:35:15,840
codes spent to do

2187
01:35:12,800 --> 01:35:17,119
absolutely nothing and the reason that

2188
01:35:15,840 --> 01:35:19,440
people do that is because

2189
01:35:17,118 --> 01:35:20,319
when you have this pigeonhole view and

2190
01:35:19,439 --> 01:35:23,359
you're just

2191
01:35:20,319 --> 01:35:26,559
you can only program or think about this

2192
01:35:23,359 --> 01:35:29,118
tiny little thing like

2193
01:35:26,560 --> 01:35:30,480
all you can do is write a file handle

2194
01:35:29,118 --> 01:35:32,799
that's the only thing

2195
01:35:30,479 --> 01:35:35,439
that you're working on and you refuse to

2196
01:35:32,800 --> 01:35:37,760
consider the rest of the system at all

2197
01:35:35,439 --> 01:35:39,279
what else can you do if if your

2198
01:35:37,760 --> 01:35:43,199
programming problem is

2199
01:35:39,279 --> 01:35:46,238
by definition that that you cannot

2200
01:35:43,198 --> 01:35:48,399
work on anything larger than

2201
01:35:46,238 --> 01:35:50,238
paranoia of course sets in because

2202
01:35:48,399 --> 01:35:51,920
anything could be true now

2203
01:35:50,238 --> 01:35:53,439
you have no preconditions no post

2204
01:35:51,920 --> 01:35:54,719
conditions you don't even have

2205
01:35:53,439 --> 01:35:56,638
during conditions you don't even know

2206
01:35:54,719 --> 01:35:58,158
that the things that you're calling they

2207
01:35:56,639 --> 01:35:59,359
might throw exceptions they might do

2208
01:35:58,158 --> 01:36:01,839
whatever right

2209
01:35:59,359 --> 01:36:02,479
and so when you when you start doing

2210
01:36:01,840 --> 01:36:04,239
that

2211
01:36:02,479 --> 01:36:06,079
what you've basically decided to do is

2212
01:36:04,238 --> 01:36:08,238
spend almost 100

2213
01:36:06,079 --> 01:36:10,000
of your time not actually working on the

2214
01:36:08,238 --> 01:36:12,799
problem you were paid to solve

2215
01:36:10,000 --> 01:36:15,920
and rather spend 100 of your time

2216
01:36:12,800 --> 01:36:17,760
solving problems you don't actually have

2217
01:36:15,920 --> 01:36:19,440
and creating problems for the people

2218
01:36:17,760 --> 01:36:22,560
upstream

2219
01:36:19,439 --> 01:36:26,559
because now all of this like

2220
01:36:22,560 --> 01:36:26,560
uncertainty is injected into the system

2221
01:36:27,359 --> 01:36:32,479
and so so it's not that if you are if

2222
01:36:30,479 --> 01:36:35,759
you are doing this kind of architecture

2223
01:36:32,479 --> 01:36:36,399
it's not that rai isn't necessary it

2224
01:36:35,760 --> 01:36:39,679
actually

2225
01:36:36,399 --> 01:36:41,359
is because you've actually made very bad

2226
01:36:39,679 --> 01:36:42,000
decisions about how to structure your

2227
01:36:41,359 --> 01:36:44,079
code

2228
01:36:42,000 --> 01:36:45,920
such that now you really could fail at

2229
01:36:44,079 --> 01:36:48,158
any time because you're doing

2230
01:36:45,920 --> 01:36:49,279
a million allocations any one of them

2231
01:36:48,158 --> 01:36:52,000
could fail

2232
01:36:49,279 --> 01:36:53,198
if instead you had just allocated as a

2233
01:36:52,000 --> 01:36:54,880
block

2234
01:36:53,198 --> 01:36:56,799
now you never need any of that error

2235
01:36:54,880 --> 01:36:57,840
handling because either it succeeded or

2236
01:36:56,800 --> 01:37:00,480
it failed

2237
01:36:57,840 --> 01:37:02,719
once and now you don't need to worry

2238
01:37:00,479 --> 01:37:06,559
about all these little micro allocations

2239
01:37:02,719 --> 01:37:08,960
right if i allocate a block

2240
01:37:06,560 --> 01:37:10,639
that stores a complete data structure in

2241
01:37:08,960 --> 01:37:12,480
all the pieces

2242
01:37:10,639 --> 01:37:15,039
i only have one thing to check when i

2243
01:37:12,479 --> 01:37:17,439
start did i get it or didn't i

2244
01:37:15,039 --> 01:37:18,800
if instead i allocate each little

2245
01:37:17,439 --> 01:37:19,919
individual piece and wire them all

2246
01:37:18,800 --> 01:37:22,079
together

2247
01:37:19,920 --> 01:37:22,960
every single allocation is a failure

2248
01:37:22,079 --> 01:37:26,000
point

2249
01:37:22,960 --> 01:37:27,359
so now it's not paranoia to go i need

2250
01:37:26,000 --> 01:37:27,920
all these try except blocks and

2251
01:37:27,359 --> 01:37:30,639
exceptions

2252
01:37:27,920 --> 01:37:32,960
like no that's true now because you've

2253
01:37:30,639 --> 01:37:34,719
chosen a very poor way to structure your

2254
01:37:32,960 --> 01:37:36,800
code so now you

2255
01:37:34,719 --> 01:37:38,158
created all of these problems that you

2256
01:37:36,800 --> 01:37:40,400
must now solve

2257
01:37:38,158 --> 01:37:40,399
right

2258
01:37:41,920 --> 01:37:50,079
so the key is stop thinking that way

2259
01:37:46,238 --> 01:37:52,319
instead of thinking i have to create

2260
01:37:50,079 --> 01:37:55,039
a million little tiny things that

2261
01:37:52,319 --> 01:37:57,198
conspire to produce a result

2262
01:37:55,039 --> 01:37:58,079
start thinking about what are the

2263
01:37:57,198 --> 01:38:01,359
minimal

2264
01:37:58,079 --> 01:38:02,479
number of resource uh requests i can

2265
01:38:01,359 --> 01:38:05,519
issue

2266
01:38:02,479 --> 01:38:07,439
to do the entire thing i need to do

2267
01:38:05,520 --> 01:38:09,119
and once you do that you find that

2268
01:38:07,439 --> 01:38:10,799
everything actually becomes mostly

2269
01:38:09,118 --> 01:38:17,839
trivial

2270
01:38:10,800 --> 01:38:17,840
for all this stuff right

2271
01:38:58,399 --> 01:39:02,638
so i can i can tell you a simple example

2272
01:39:00,399 --> 01:39:04,960
of a step from n to n plus one that

2273
01:39:02,639 --> 01:39:06,319
so when i was when i did the first

2274
01:39:04,960 --> 01:39:08,158
version of the character animation

2275
01:39:06,319 --> 01:39:11,599
system at rad

2276
01:39:08,158 --> 01:39:13,679
i i still was at stage at

2277
01:39:11,600 --> 01:39:15,840
and when i did the second edition i

2278
01:39:13,679 --> 01:39:21,118
moved to n plus one

2279
01:39:15,840 --> 01:39:24,400
and the small step i took at that time

2280
01:39:21,118 --> 01:39:25,599
the first step was going hey if i have

2281
01:39:24,399 --> 01:39:29,198
something

2282
01:39:25,600 --> 01:39:30,480
like a character that has a certain

2283
01:39:29,198 --> 01:39:33,279
number of

2284
01:39:30,479 --> 01:39:34,799
bones and a certain number of meshes

2285
01:39:33,279 --> 01:39:37,599
right

2286
01:39:34,800 --> 01:39:38,480
what i used to do is i used to like new

2287
01:39:37,600 --> 01:39:40,480
a character

2288
01:39:38,479 --> 01:39:42,799
and then i would knew an array of bones

2289
01:39:40,479 --> 01:39:43,759
and i would knew an array of meshes and

2290
01:39:42,800 --> 01:39:47,679
then the meshes would

2291
01:39:43,760 --> 01:39:50,800
array vertices right all i did

2292
01:39:47,679 --> 01:39:54,079
in that first step was i just said oh

2293
01:39:50,800 --> 01:39:55,600
actually when i create a character i

2294
01:39:54,079 --> 01:39:56,079
made this little thing that allowed me

2295
01:39:55,600 --> 01:39:58,560
to say

2296
01:39:56,079 --> 01:40:00,079
here's all the memory that i need i need

2297
01:39:58,560 --> 01:40:01,199
this many meshes this many bones this

2298
01:40:00,079 --> 01:40:02,399
many that this made this for the

2299
01:40:01,198 --> 01:40:04,238
character

2300
01:40:02,399 --> 01:40:06,238
and i just had a little utility function

2301
01:40:04,238 --> 01:40:08,638
uh facility struct i wrote that allowed

2302
01:40:06,238 --> 01:40:11,118
me to like say here's the stuff i need

2303
01:40:08,639 --> 01:40:12,880
go and it would then try to allocate

2304
01:40:11,118 --> 01:40:14,238
that entire block of memory that would

2305
01:40:12,880 --> 01:40:15,920
be needed for the whole thing

2306
01:40:14,238 --> 01:40:17,519
and it would parcel it out so that it

2307
01:40:15,920 --> 01:40:19,520
would like set the pointers properly

2308
01:40:17,520 --> 01:40:22,639
automatically for me

2309
01:40:19,520 --> 01:40:24,880
that changed five six seven

2310
01:40:22,639 --> 01:40:27,039
eight failure points into one failure

2311
01:40:24,880 --> 01:40:30,639
point which is way more reliable

2312
01:40:27,039 --> 01:40:32,399
right just that one step makes it eight

2313
01:40:30,639 --> 01:40:32,960
times less likely that your code will

2314
01:40:32,399 --> 01:40:37,279
fail

2315
01:40:32,960 --> 01:40:39,600
that you have a bug somewhere right

2316
01:40:37,279 --> 01:40:41,679
and so it's just a case of just like see

2317
01:40:39,600 --> 01:40:44,560
just start to start wherever you can

2318
01:40:41,679 --> 01:40:45,118
anything you can do in your code base to

2319
01:40:44,560 --> 01:40:48,800
to do

2320
01:40:45,118 --> 01:40:52,479
less uh to make less

2321
01:40:48,800 --> 01:40:56,239
calls or operations that can fail

2322
01:40:52,479 --> 01:40:57,359
right just try to start collapsing them

2323
01:40:56,238 --> 01:41:00,238
together

2324
01:40:57,359 --> 01:41:02,399
and and eventually right you get to the

2325
01:41:00,238 --> 01:41:04,479
point where you've got

2326
01:41:02,399 --> 01:41:05,519
like the typical thing that me and john

2327
01:41:04,479 --> 01:41:07,678
blow do now

2328
01:41:05,520 --> 01:41:09,600
and and i think dice does this too so

2329
01:41:07,679 --> 01:41:11,679
even like the ea games do this

2330
01:41:09,600 --> 01:41:13,119
is every frame you just have an arena

2331
01:41:11,679 --> 01:41:14,639
for that frame of memory

2332
01:41:13,118 --> 01:41:16,158
and anything that's specific to the

2333
01:41:14,639 --> 01:41:19,840
frame just goes in there

2334
01:41:16,158 --> 01:41:21,599
this eliminates literally like

2335
01:41:19,840 --> 01:41:23,360
thousands to hundreds of thousands of

2336
01:41:21,600 --> 01:41:24,800
allocations that happen

2337
01:41:23,359 --> 01:41:27,679
in the kinds of systems that don't think

2338
01:41:24,800 --> 01:41:30,320
this way just that one thing

2339
01:41:27,679 --> 01:41:31,279
and it removes almost all possible

2340
01:41:30,319 --> 01:41:34,079
failure points

2341
01:41:31,279 --> 01:41:35,279
because in general you can put a bound

2342
01:41:34,079 --> 01:41:37,840
on that number

2343
01:41:35,279 --> 01:41:39,439
and know that like as long as you can

2344
01:41:37,840 --> 01:41:41,199
exceed that arena with a certain amount

2345
01:41:39,439 --> 01:41:43,198
of memory you'll always be fine

2346
01:41:41,198 --> 01:41:46,000
so you can even base you can basically

2347
01:41:43,198 --> 01:41:47,678
say like look this is just fine now we

2348
01:41:46,000 --> 01:41:48,479
literally got rid of all those failure

2349
01:41:47,679 --> 01:41:49,760
points

2350
01:41:48,479 --> 01:41:51,198
whereas if each of those things had been

2351
01:41:49,760 --> 01:41:52,800
a new any single one of them could

2352
01:41:51,198 --> 01:41:55,039
technically fail

2353
01:41:52,800 --> 01:41:55,039
right

2354
01:41:56,079 --> 01:41:59,760
and because you don't even really know

2355
01:41:57,840 --> 01:42:00,960
right you have no way of even guessing

2356
01:41:59,760 --> 01:42:03,600
how much memory that

2357
01:42:00,960 --> 01:42:05,118
thing requires because you you have no

2358
01:42:03,600 --> 01:42:06,480
way to even measure it but once you

2359
01:42:05,118 --> 01:42:07,279
group them together it's trivial to say

2360
01:42:06,479 --> 01:42:08,718
okay we've

2361
01:42:07,279 --> 01:42:11,039
we've looked at the peak or whatever and

2362
01:42:08,719 --> 01:42:14,719
we just have it right

2363
01:42:11,039 --> 01:42:17,439
and off we go steps i take now that are

2364
01:42:14,719 --> 01:42:18,560
past that are i just design out the

2365
01:42:17,439 --> 01:42:20,960
failure entirely

2366
01:42:18,560 --> 01:42:22,480
so what i do is i take arenas now and i

2367
01:42:20,960 --> 01:42:24,480
stream into them and if they

2368
01:42:22,479 --> 01:42:27,198
can't get more memory to grow when they

2369
01:42:24,479 --> 01:42:29,839
need to all the code is usually

2370
01:42:27,198 --> 01:42:30,479
written to handle when something comes

2371
01:42:29,840 --> 01:42:33,199
back

2372
01:42:30,479 --> 01:42:34,000
it just produces a stub rather than a

2373
01:42:33,198 --> 01:42:36,719
real one

2374
01:42:34,000 --> 01:42:38,238
and all the code still works so that's

2375
01:42:36,719 --> 01:42:40,158
the way i do those things now

2376
01:42:38,238 --> 01:42:41,599
and they literally can't fail even if

2377
01:42:40,158 --> 01:42:42,799
you run out of memory in the middle of

2378
01:42:41,600 --> 01:42:43,920
something that you don't even know what

2379
01:42:42,800 --> 01:42:46,239
the size should be

2380
01:42:43,920 --> 01:42:46,960
it still just works in the sense that it

2381
01:42:46,238 --> 01:42:49,198
doesn't crash

2382
01:42:46,960 --> 01:42:50,079
it just can't draw like the rest of the

2383
01:42:49,198 --> 01:42:57,839
things

2384
01:42:50,079 --> 01:42:57,840
you know what i mean

2385
01:43:28,079 --> 01:43:31,760
i've been concerned at all with secure

2386
01:43:30,158 --> 01:43:33,279
coding concepts to cover undefined

2387
01:43:31,760 --> 01:43:33,840
behavior with people looking to exploit

2388
01:43:33,279 --> 01:43:36,800
it um

2389
01:43:33,840 --> 01:43:38,000
so i mean that's a separate thing i'm

2390
01:43:36,800 --> 01:43:42,320
talking about

2391
01:43:38,000 --> 01:43:45,118
failure cases that are natural right

2392
01:43:42,319 --> 01:43:46,880
so i'm not even talking about

2393
01:43:45,118 --> 01:43:49,920
adversarial failure

2394
01:43:46,880 --> 01:43:51,520
right adversarial

2395
01:43:49,920 --> 01:43:54,319
failure is completely different that's

2396
01:43:51,520 --> 01:43:54,320
like hardening

2397
01:43:55,118 --> 01:44:03,279
however as with all things

2398
01:43:59,760 --> 01:44:05,440
it is much easier to harden code written

2399
01:44:03,279 --> 01:44:07,118
in the grouped way than it is to harden

2400
01:44:05,439 --> 01:44:10,719
code in the individual way

2401
01:44:07,118 --> 01:44:13,039
because again if every single thing you

2402
01:44:10,719 --> 01:44:15,600
calls if every single thing you do

2403
01:44:13,039 --> 01:44:18,238
allocates does a new allocation

2404
01:44:15,600 --> 01:44:18,800
it's very hard to make any statements

2405
01:44:18,238 --> 01:44:21,759
about

2406
01:44:18,800 --> 01:44:22,400
bounds or where things are or when they

2407
01:44:21,760 --> 01:44:25,440
come in

2408
01:44:22,399 --> 01:44:27,039
to existence or not it's very hard to

2409
01:44:25,439 --> 01:44:28,799
keep that safe

2410
01:44:27,039 --> 01:44:30,319
because it's just a sprawling mess of

2411
01:44:28,800 --> 01:44:34,480
pointers that point everywhere

2412
01:44:30,319 --> 01:44:37,279
right whereas if everything uses ids

2413
01:44:34,479 --> 01:44:38,959
in an arena it's way harder for an

2414
01:44:37,279 --> 01:44:41,359
adversary to crack in there

2415
01:44:38,960 --> 01:44:42,880
and it's way easier for me if i have to

2416
01:44:41,359 --> 01:44:43,920
go harden it for some reason because

2417
01:44:42,880 --> 01:44:46,719
like it's something that's going to get

2418
01:44:43,920 --> 01:44:49,760
exposed to a net area or whatever

2419
01:44:46,719 --> 01:44:51,359
to work with so i would say n plus one

2420
01:44:49,760 --> 01:44:54,079
makes it way easier to harden

2421
01:44:51,359 --> 01:44:54,639
as well but i'm not talking about that

2422
01:44:54,079 --> 01:44:57,600
right now

2423
01:44:54,639 --> 01:44:58,639
i'm strictly talking about just failures

2424
01:44:57,600 --> 01:45:00,639
that happen

2425
01:44:58,639 --> 01:45:03,840
normally right so failures that happen

2426
01:45:00,639 --> 01:45:03,840
without an adversary

2427
01:45:12,079 --> 01:45:16,319
and just to be clear like usually what i

2428
01:45:14,000 --> 01:45:17,600
do is i use growable arenas so i don't

2429
01:45:16,319 --> 01:45:18,880
allocate them up front

2430
01:45:17,600 --> 01:45:21,520
they're like the ones in handmade hero

2431
01:45:18,880 --> 01:45:24,880
now they just grow as necessary

2432
01:45:21,520 --> 01:45:27,040
so basically like you you just keep

2433
01:45:24,880 --> 01:45:29,520
pushing onto the end of the arena

2434
01:45:27,039 --> 01:45:30,880
and you have two choices for how you

2435
01:45:29,520 --> 01:45:33,280
want to handle your failures

2436
01:45:30,880 --> 01:45:34,079
the way i like to handle failures is i

2437
01:45:33,279 --> 01:45:36,238
just like

2438
01:45:34,079 --> 01:45:38,238
if you fail to push something you just

2439
01:45:36,238 --> 01:45:40,238
get a stub back

2440
01:45:38,238 --> 01:45:41,519
right because i don't i don't want to

2441
01:45:40,238 --> 01:45:44,959
have to check

2442
01:45:41,520 --> 01:45:46,080
those for global arenas so you just get

2443
01:45:44,960 --> 01:45:49,439
a stub back

2444
01:45:46,079 --> 01:45:53,279
that's all zeroed right

2445
01:45:49,439 --> 01:45:53,279
and then the uh

2446
01:45:54,639 --> 01:45:58,000
when you actually run through your

2447
01:45:56,840 --> 01:46:00,560
performance

2448
01:45:58,000 --> 01:46:01,198
what you usually want to do then is each

2449
01:46:00,560 --> 01:46:03,520
arena

2450
01:46:01,198 --> 01:46:04,879
has an initial allocation size that you

2451
01:46:03,520 --> 01:46:06,719
usually tune

2452
01:46:04,880 --> 01:46:09,199
to try and make it so that it doesn't

2453
01:46:06,719 --> 01:46:12,560
have to really do growing very often

2454
01:46:09,198 --> 01:46:13,599
right because time you've got this

2455
01:46:12,560 --> 01:46:15,280
system in place

2456
01:46:13,600 --> 01:46:16,639
you get another huge bonus which is

2457
01:46:15,279 --> 01:46:19,279
allocation is like

2458
01:46:16,639 --> 01:46:19,760
very cheap it's like one check and one

2459
01:46:19,279 --> 01:46:22,479
ad

2460
01:46:19,760 --> 01:46:24,400
to like move the thing forward right so

2461
01:46:22,479 --> 01:46:25,919
you can also get a huge speed boost by

2462
01:46:24,399 --> 01:46:28,079
then just looking and saying how big

2463
01:46:25,920 --> 01:46:30,480
should these arenas be in general

2464
01:46:28,079 --> 01:46:32,238
and setting their initial sizes to that

2465
01:46:30,479 --> 01:46:36,399
because then you also don't

2466
01:46:32,238 --> 01:46:36,399
hit the actual allocator almost ever

2467
01:46:38,840 --> 01:46:41,840
right

2468
01:46:58,158 --> 01:47:00,960
let's say i want to push some dynamic

2469
01:46:59,520 --> 01:47:02,639
amount of data and i run out of space

2470
01:47:00,960 --> 01:47:04,319
the calling code expects n bytes and

2471
01:47:02,639 --> 01:47:04,800
we'll write n bytes but i don't have n

2472
01:47:04,319 --> 01:47:06,158
bytes

2473
01:47:04,800 --> 01:47:08,880
how do you handle this case in that

2474
01:47:06,158 --> 01:47:12,399
style uh you've got two choices

2475
01:47:08,880 --> 01:47:14,800
so one choice is that you actually write

2476
01:47:12,399 --> 01:47:15,920
your code to look at what comes back and

2477
01:47:14,800 --> 01:47:19,360
handle it right

2478
01:47:15,920 --> 01:47:21,679
and that's still the end class way

2479
01:47:19,359 --> 01:47:23,439
i usually do that though and the reason

2480
01:47:21,679 --> 01:47:25,359
for that is because

2481
01:47:23,439 --> 01:47:26,879
it's usually actually not that hard to

2482
01:47:25,359 --> 01:47:29,039
do right

2483
01:47:26,880 --> 01:47:30,079
um i i tend to check those things anyway

2484
01:47:29,039 --> 01:47:32,079
but

2485
01:47:30,079 --> 01:47:33,359
you can decide not to do that what you

2486
01:47:32,079 --> 01:47:36,559
can do if you'd like

2487
01:47:33,359 --> 01:47:39,118
is you can just return a ring mapping

2488
01:47:36,560 --> 01:47:39,920
so similar to what happens in when you

2489
01:47:39,118 --> 01:47:43,039
call map

2490
01:47:39,920 --> 01:47:46,319
on linux where it just maps the same 4k

2491
01:47:43,039 --> 01:47:48,800
page repeated like forever

2492
01:47:46,319 --> 01:47:50,000
right so then you can just return a

2493
01:47:48,800 --> 01:47:51,920
pointer to that page and

2494
01:47:50,000 --> 01:47:53,198
people can read and write to it for the

2495
01:47:51,920 --> 01:47:56,079
rest of time

2496
01:47:53,198 --> 01:47:57,599
and they'll never crash but they also

2497
01:47:56,079 --> 01:47:59,840
didn't actually do anything

2498
01:47:57,600 --> 01:47:59,840
right

2499
01:48:02,079 --> 01:48:05,359
so so that's a good option if you

2500
01:48:03,920 --> 01:48:06,399
literally like if you really just want

2501
01:48:05,359 --> 01:48:08,079
to go look

2502
01:48:06,399 --> 01:48:09,599
i want to handle any failure cases here

2503
01:48:08,079 --> 01:48:12,399
but i also don't want to

2504
01:48:09,600 --> 01:48:13,679
introduce any overhead into the code or

2505
01:48:12,399 --> 01:48:15,039
possible mistakes for

2506
01:48:13,679 --> 01:48:16,719
because a lot of people are going to be

2507
01:48:15,039 --> 01:48:18,079
using variable size things

2508
01:48:16,719 --> 01:48:19,920
i don't want them to have to test

2509
01:48:18,079 --> 01:48:22,800
anything

2510
01:48:19,920 --> 01:48:24,319
i that almost never happens it's really

2511
01:48:22,800 --> 01:48:25,440
rare because most things aren't variably

2512
01:48:24,319 --> 01:48:27,118
sized so that's why i usually just

2513
01:48:25,439 --> 01:48:29,039
return a stub

2514
01:48:27,118 --> 01:48:30,719
that you write to but if it's really

2515
01:48:29,039 --> 01:48:33,600
truly variably sized

2516
01:48:30,719 --> 01:48:34,880
right you can just return a repeat

2517
01:48:33,600 --> 01:48:36,719
mapped page

2518
01:48:34,880 --> 01:48:38,480
which is this which is a stub for

2519
01:48:36,719 --> 01:48:47,840
arbitrary sizes

2520
01:48:38,479 --> 01:48:47,839
right so you can do that if you want

2521
01:48:58,840 --> 01:49:01,840
so

2522
01:49:11,359 --> 01:49:16,000
so the way that i do stub stuff is i use

2523
01:49:14,000 --> 01:49:19,039
what i call zero as initialization

2524
01:49:16,000 --> 01:49:20,719
so it's like r-a-i-i but good uh

2525
01:49:19,039 --> 01:49:22,158
zero's initialization just means that

2526
01:49:20,719 --> 01:49:24,079
memory is zero by default

2527
01:49:22,158 --> 01:49:25,439
which is true anyway any member you get

2528
01:49:24,079 --> 01:49:26,800
from the operating system is zero by

2529
01:49:25,439 --> 01:49:27,919
default you have to be like on an

2530
01:49:26,800 --> 01:49:30,079
embedded system or something before

2531
01:49:27,920 --> 01:49:32,079
that's not true

2532
01:49:30,079 --> 01:49:33,679
but for security concerns on windows mac

2533
01:49:32,079 --> 01:49:35,118
linux whatever the memory you get back

2534
01:49:33,679 --> 01:49:37,359
is zero

2535
01:49:35,118 --> 01:49:39,279
so the way that i handle stubs is all

2536
01:49:37,359 --> 01:49:40,559
code is written so that zero is the

2537
01:49:39,279 --> 01:49:43,920
default case

2538
01:49:40,560 --> 01:49:46,480
which means that you can always return a

2539
01:49:43,920 --> 01:49:49,039
stub which is just a block of zeros

2540
01:49:46,479 --> 01:49:50,799
so you just have a stub in memory that's

2541
01:49:49,039 --> 01:49:52,238
a block of zeros and anytime something

2542
01:49:50,800 --> 01:49:54,639
fails you just return that one

2543
01:49:52,238 --> 01:49:55,678
instead then when the person actually

2544
01:49:54,639 --> 01:49:57,760
reads to it

2545
01:49:55,679 --> 01:49:58,719
or reads from it or writes from it it

2546
01:49:57,760 --> 01:50:01,280
just

2547
01:49:58,719 --> 01:50:02,639
doesn't do anything and then at the end

2548
01:50:01,279 --> 01:50:03,759
you just clear it

2549
01:50:02,639 --> 01:50:05,840
right at the end of the frame you just

2550
01:50:03,760 --> 01:50:09,280
clear it or every time you're going to

2551
01:50:05,840 --> 01:50:09,279
go hand it out again you clear it

2552
01:50:09,359 --> 01:50:11,839
right

2553
01:50:20,479 --> 01:50:24,238
is a repeat map page an os thing or is

2554
01:50:23,039 --> 01:50:27,599
it something custom

2555
01:50:24,238 --> 01:50:29,678
it's it's an os thing i'm not sure what

2556
01:50:27,599 --> 01:50:33,599
you mean by that but basically

2557
01:50:29,679 --> 01:50:37,279
when you um when you do

2558
01:50:33,599 --> 01:50:40,880
uh memory mapping

2559
01:50:37,279 --> 01:50:44,000
you can choose to map the same

2560
01:50:40,880 --> 01:50:45,679
4k backing page to many parts of memory

2561
01:50:44,000 --> 01:50:47,359
so let's say you're going to do

2562
01:50:45,679 --> 01:50:49,359
allocations and

2563
01:50:47,359 --> 01:50:51,198
for some reason you decide you just

2564
01:50:49,359 --> 01:50:55,039
don't want the code

2565
01:50:51,198 --> 01:50:58,399
to ever ask whether it actually got

2566
01:50:55,039 --> 01:51:00,238
the memory or not right which again i

2567
01:50:58,399 --> 01:51:02,238
don't recommend like i don't do this

2568
01:51:00,238 --> 01:51:04,839
but let's say you wanted to like you

2569
01:51:02,238 --> 01:51:07,198
were like i want subs for

2570
01:51:04,840 --> 01:51:10,880
everything even

2571
01:51:07,198 --> 01:51:13,919
arbitrary size stuff then what you do

2572
01:51:10,880 --> 01:51:15,440
is you say okay i'm going to

2573
01:51:13,920 --> 01:51:18,719
i'm going to at the start of the program

2574
01:51:15,439 --> 01:51:21,198
allocate one 4k page

2575
01:51:18,719 --> 01:51:24,399
that i use is my stub page and then i'm

2576
01:51:21,198 --> 01:51:28,399
going to call like map view of file

2577
01:51:24,399 --> 01:51:31,118
a freaking billion times to just map

2578
01:51:28,399 --> 01:51:35,839
like a gigabyte of address range all to

2579
01:51:31,118 --> 01:51:35,839
that one 4k page

2580
01:51:46,840 --> 01:51:51,039
right

2581
01:51:49,118 --> 01:51:52,479
have i read the paper fast efficient

2582
01:51:51,039 --> 01:51:55,439
fixed size memory pool

2583
01:51:52,479 --> 01:51:56,399
no loops and no overhead by ken wright

2584
01:51:55,439 --> 01:52:03,839
uh

2585
01:51:56,399 --> 01:52:03,839
no i haven't i i've never heard of that

2586
01:52:31,279 --> 01:52:34,639
no the the code doesn't check to see if

2587
01:52:33,359 --> 01:52:36,719
the struct is a stub

2588
01:52:34,639 --> 01:52:40,079
it just assumes that the struct is

2589
01:52:36,719 --> 01:52:40,079
something you can use and uses it

2590
01:52:40,238 --> 01:52:42,479
right

2591
01:52:43,599 --> 01:52:46,800
i do the same thing for like zero

2592
01:52:45,439 --> 01:52:48,799
handles now

2593
01:52:46,800 --> 01:52:50,480
so like for example if you call get

2594
01:52:48,800 --> 01:52:53,039
entity with the id of zero

2595
01:52:50,479 --> 01:52:54,000
these days i don't return no i just

2596
01:52:53,039 --> 01:52:57,519
return

2597
01:52:54,000 --> 01:52:58,960
a all zero entity and then everyone just

2598
01:52:57,520 --> 01:53:02,320
uses that

2599
01:52:58,960 --> 01:53:04,158
that's just what i do right

2600
01:53:02,319 --> 01:53:06,079
i just find that it removes so much

2601
01:53:04,158 --> 01:53:08,399
error handling and just kind of works

2602
01:53:06,079 --> 01:53:11,198
pretty much so that's just better you

2603
01:53:08,399 --> 01:53:13,839
just lose a lot of your handling code

2604
01:53:11,198 --> 01:53:14,559
it's it's nice so so i highly recommend

2605
01:53:13,840 --> 01:53:17,840
zii

2606
01:53:14,560 --> 01:53:18,880
and stubs it simplifies things

2607
01:53:17,840 --> 01:53:21,199
tremendously

2608
01:53:18,880 --> 01:53:21,920
um handmade hero doesn't use them very

2609
01:53:21,198 --> 01:53:24,000
much because

2610
01:53:21,920 --> 01:53:26,480
it's sort of something that i've only

2611
01:53:24,000 --> 01:53:29,760
developed in the past couple years

2612
01:53:26,479 --> 01:53:31,359
but you know i highly recommend it now

2613
01:53:29,760 --> 01:53:32,400
if i was doing handmade hero today we

2614
01:53:31,359 --> 01:53:36,399
would absolutely be

2615
01:53:32,399 --> 01:53:39,279
zii and uh and stubs everywhere

2616
01:53:36,399 --> 01:53:40,559
i in handmade here we still are to a

2617
01:53:39,279 --> 01:53:44,960
certain extent

2618
01:53:40,560 --> 01:53:44,960
but not as much as we could be right

2619
01:53:47,039 --> 01:53:50,789
someone's asked about this paper they

2620
01:53:48,560 --> 01:53:52,840
posted a link to

2621
01:53:50,789 --> 01:53:55,039
[Music]

2622
01:53:52,840 --> 01:53:59,279
um

2623
01:53:55,039 --> 01:54:01,039
i i mean i can't really read a paper

2624
01:53:59,279 --> 01:54:02,719
fast like and have an opinion about it

2625
01:54:01,039 --> 01:54:09,840
on stream right i've got to think about

2626
01:54:02,719 --> 01:54:09,840
it a little bit but

2627
01:54:24,479 --> 01:54:37,839
i mean i guess i'm not sure

2628
01:55:27,599 --> 01:55:33,840
i don't think i quite

2629
01:55:30,840 --> 01:55:33,840
see

2630
01:55:47,920 --> 01:55:51,199
uh honestly to be completely honest i

2631
01:55:49,760 --> 01:55:52,079
have no idea what the heck this thing is

2632
01:55:51,198 --> 01:55:54,719
supposed to be

2633
01:55:52,079 --> 01:55:54,719
this doesn't

2634
01:55:55,679 --> 01:56:01,840
what what is this supposed to be

2635
01:56:03,920 --> 01:56:08,480
this is literally like we literally have

2636
01:56:06,238 --> 01:56:09,839
this exact thing in handmade hero in a

2637
01:56:08,479 --> 01:56:11,519
bunch of places you wouldn't write a

2638
01:56:09,840 --> 01:56:15,840
paper about it

2639
01:56:11,520 --> 01:56:15,840
it's just a free list

2640
01:56:21,760 --> 01:56:27,199
what does this propose to do i have no

2641
01:56:24,158 --> 01:56:28,559
idea like i can't tell

2642
01:56:27,198 --> 01:56:43,839
i can't even tell what this paper is

2643
01:56:28,560 --> 01:56:43,840
claiming to have done

2644
01:56:45,679 --> 01:56:49,118
i mean this is literally just a free

2645
01:56:47,760 --> 01:56:51,679
list

2646
01:56:49,118 --> 01:56:53,920
it's everywhere in handmade hero like

2647
01:56:51,679 --> 01:56:57,840
did they wrote a paper about a free list

2648
01:56:53,920 --> 01:56:57,840
is that really what i'm looking at here

2649
01:56:59,520 --> 01:57:02,960
can someone confirm or deny that this is

2650
01:57:01,359 --> 01:57:04,158
literally someone wrote an entire paper

2651
01:57:02,960 --> 01:57:11,840
about a free list which is something

2652
01:57:04,158 --> 01:57:11,839
we've known about since like 1970.

2653
01:57:20,158 --> 01:57:24,479
how is this a paper the fact that

2654
01:57:22,639 --> 01:57:27,039
someone thought this was a paper

2655
01:57:24,479 --> 01:57:28,559
is absolutely mind-boggling to me unless

2656
01:57:27,039 --> 01:57:31,039
when i go read it more closely

2657
01:57:28,560 --> 01:57:34,719
there's something else in there but this

2658
01:57:31,039 --> 01:57:36,560
is absurd that in 2012

2659
01:57:34,719 --> 01:57:37,760
professors at a university would think

2660
01:57:36,560 --> 01:57:41,199
this was a paper

2661
01:57:37,760 --> 01:57:41,840
are they nuts like have they ever even

2662
01:57:41,198 --> 01:57:44,879
programmed

2663
01:57:41,840 --> 01:57:46,000
this that's that's nuts if it's actually

2664
01:57:44,880 --> 01:57:49,199
what i think it is

2665
01:57:46,000 --> 01:57:51,039
that you would write a paper in 2012

2666
01:57:49,198 --> 01:57:54,479
thinking that this was something that

2667
01:57:51,039 --> 01:57:54,479
everyone did not already know

2668
01:58:03,198 --> 01:58:08,799
i i i mean i have no i have no

2669
01:58:06,560 --> 01:58:21,840
i i i can't i don't even i can't even

2670
01:58:08,800 --> 01:58:21,840
believe what i'm looking at

2671
01:58:41,599 --> 01:58:45,119
i so yeah i have no opinion on that

2672
01:58:43,599 --> 01:58:46,840
paper other than i'm horrified that that

2673
01:58:45,118 --> 01:58:49,839
was a paper

2674
01:58:46,840 --> 01:58:49,840
but

2675
01:59:07,599 --> 01:59:10,560
i i just don't know

2676
01:59:12,000 --> 01:59:16,319
i mean maybe just no one ever publishes

2677
01:59:13,920 --> 01:59:18,480
a free list

2678
01:59:16,319 --> 01:59:19,599
in the section on background unrelated

2679
01:59:18,479 --> 01:59:21,198
work they say like

2680
01:59:19,599 --> 01:59:24,000
it's a modification whereby loops and

2681
01:59:21,198 --> 01:59:26,079
initialization overheads are removed

2682
01:59:24,000 --> 01:59:27,599
but like there's no initialization

2683
01:59:26,079 --> 01:59:29,118
overhead in a free list you set the

2684
01:59:27,599 --> 01:59:31,840
initial count to zero and the free list

2685
01:59:29,118 --> 01:59:34,719
pointer to zero that's it

2686
01:59:31,840 --> 01:59:36,560
that's the whole thing and they're

2687
01:59:34,719 --> 01:59:37,920
already zero if you're zii so you don't

2688
01:59:36,560 --> 01:59:39,920
even set them

2689
01:59:37,920 --> 01:59:42,639
like like i don't know what they're

2690
01:59:39,920 --> 01:59:44,960
talking about this is very strange

2691
01:59:42,639 --> 01:59:46,639
right like that does not make any sense

2692
01:59:44,960 --> 01:59:48,480
to me i don't know how this is a paper

2693
01:59:46,639 --> 01:59:50,079
presumably it's a paper and something

2694
01:59:48,479 --> 01:59:59,839
that nobody reviews

2695
01:59:50,079 --> 01:59:59,840
but i don't know

2696
02:00:10,319 --> 02:00:13,599
am i familiar with richard fabian's data

2697
02:00:12,000 --> 02:00:15,039
oriented design book he's an advocate of

2698
02:00:13,599 --> 02:00:16,480
laying out data in normalized form

2699
02:00:15,039 --> 02:00:18,158
representing relationships between data

2700
02:00:16,479 --> 02:00:21,519
season tables

2701
02:00:18,158 --> 02:00:25,759
um i am not familiar with

2702
02:00:21,520 --> 02:00:28,000
that book but i do use that form

2703
02:00:25,760 --> 02:00:29,920
i wouldn't necessarily use the phrase

2704
02:00:28,000 --> 02:00:31,920
normalized form that's a very specific

2705
02:00:29,920 --> 02:00:33,118
thing if he really means normalized form

2706
02:00:31,920 --> 02:00:33,599
i probably disagree with that because

2707
02:00:33,118 --> 02:00:37,118
that's

2708
02:00:33,599 --> 02:00:40,639
rarely what you actually want but

2709
02:00:37,118 --> 02:00:43,920
the idea that you use an id

2710
02:00:40,639 --> 02:00:45,760
to refer to tables of data

2711
02:00:43,920 --> 02:00:47,760
rather than having pointers in the data

2712
02:00:45,760 --> 02:00:50,719
that point directly to somethings

2713
02:00:47,760 --> 02:00:51,280
is something that is valuable to do it's

2714
02:00:50,719 --> 02:00:54,480
just

2715
02:00:51,279 --> 02:00:56,559
not universally the case meaning you

2716
02:00:54,479 --> 02:00:57,678
it's it's one technique out of a few you

2717
02:00:56,560 --> 02:00:59,119
should know

2718
02:00:57,679 --> 02:01:01,118
so i have not read that book i don't

2719
02:00:59,118 --> 02:01:02,158
know anything about richard fabian or

2720
02:01:01,118 --> 02:01:05,279
who that even is

2721
02:01:02,158 --> 02:01:08,559
but i i will say that

2722
02:01:05,279 --> 02:01:11,679
using a tabular form with ids

2723
02:01:08,560 --> 02:01:13,760
which are similar to how sort of a

2724
02:01:11,679 --> 02:01:16,480
database would work

2725
02:01:13,760 --> 02:01:19,039
is a good idea that you should know

2726
02:01:16,479 --> 02:01:23,839
about and should have familiarity with

2727
02:01:19,039 --> 02:01:23,840
for sure

2728
02:02:12,399 --> 02:02:15,359
and to be fair like there's nothing

2729
02:02:13,679 --> 02:02:18,239
wrong with publishing a paper about

2730
02:02:15,359 --> 02:02:20,719
something obvious that everyone knows

2731
02:02:18,238 --> 02:02:23,519
but you should probably say that like if

2732
02:02:20,719 --> 02:02:26,158
you publish a paper in 2012

2733
02:02:23,520 --> 02:02:29,119
about a free list and you don't say hey

2734
02:02:26,158 --> 02:02:32,238
this is something everyone does

2735
02:02:29,118 --> 02:02:34,319
it's a free list and we just wanted to

2736
02:02:32,238 --> 02:02:36,479
write down that it's a free list

2737
02:02:34,319 --> 02:02:37,599
so that you could know how a free list

2738
02:02:36,479 --> 02:02:40,238
works

2739
02:02:37,599 --> 02:02:41,360
totally fine but like we have developed

2740
02:02:40,238 --> 02:02:44,238
this awesome no

2741
02:02:41,359 --> 02:02:46,559
loops no overhead new allocator that's

2742
02:02:44,238 --> 02:02:48,559
perfect for real-time applications that

2743
02:02:46,560 --> 02:02:51,360
removes a bunch of problems from earlier

2744
02:02:48,560 --> 02:02:52,880
techniques like no you didn't

2745
02:02:51,359 --> 02:02:54,639
maybe you're ignorant of what people are

2746
02:02:52,880 --> 02:02:56,960
doing but you know

2747
02:02:54,639 --> 02:02:58,159
that's a bad you should be if your job

2748
02:02:56,960 --> 02:02:59,679
is in academia

2749
02:02:58,158 --> 02:03:01,279
like one of the things you should do is

2750
02:02:59,679 --> 02:03:02,000
find out what the heck people already

2751
02:03:01,279 --> 02:03:03,840
know

2752
02:03:02,000 --> 02:03:06,560
like if you're not doing that what are

2753
02:03:03,840 --> 02:03:08,719
you spending your time on right

2754
02:03:06,560 --> 02:03:09,760
a a production programmer has a good

2755
02:03:08,719 --> 02:03:11,840
excuse

2756
02:03:09,760 --> 02:03:14,000
to not know how something is done

2757
02:03:11,840 --> 02:03:17,599
because it's not their job to be aware

2758
02:03:14,000 --> 02:03:17,599
of what's going on in the industry

2759
02:03:17,760 --> 02:03:20,960
in terms of knowledge but an academic's

2760
02:03:20,319 --> 02:03:22,559
job

2761
02:03:20,960 --> 02:03:24,639
is to know what the knowledge is in

2762
02:03:22,560 --> 02:03:26,639
their interest that's all they do

2763
02:03:24,639 --> 02:03:28,639
right they're supposed to survey the

2764
02:03:26,639 --> 02:03:29,279
knowledge and find out what needs to be

2765
02:03:28,639 --> 02:03:31,520
advanced

2766
02:03:29,279 --> 02:03:32,639
so you know if you're writing a paper

2767
02:03:31,520 --> 02:03:35,040
about a free list

2768
02:03:32,639 --> 02:03:38,079
in 2012 you have an issue that you

2769
02:03:35,039 --> 02:03:38,079
should probably address

2770
02:03:40,840 --> 02:03:43,840
right

2771
02:03:47,198 --> 02:03:49,839
and uncountable yeah that's the part i

2772
02:03:48,800 --> 02:03:51,039
was reading the on the other hand the

2773
02:03:49,840 --> 02:03:52,560
technical study is not novel business

2774
02:03:51,039 --> 02:03:54,880
modification of existing technique

2775
02:03:52,560 --> 02:03:58,239
it's it's not a modification these days

2776
02:03:54,880 --> 02:03:58,239
it is an existing technique

2777
02:03:58,639 --> 02:04:04,400
like it's exactly like we literally have

2778
02:04:01,359 --> 02:04:04,399
this in handmade hero

2779
02:04:08,238 --> 02:04:11,598
i also want to say it looks like they

2780
02:04:09,840 --> 02:04:14,719
didn't quite do it as well

2781
02:04:11,599 --> 02:04:15,840
um i i'd have to actually really go read

2782
02:04:14,719 --> 02:04:17,520
it now

2783
02:04:15,840 --> 02:04:19,360
but it looks like they actually screwed

2784
02:04:17,520 --> 02:04:24,320
up one part of it

2785
02:04:19,359 --> 02:04:25,759
right um

2786
02:04:24,319 --> 02:04:27,519
no no no it's okay it's the same as

2787
02:04:25,760 --> 02:04:28,400
hammer here right it's exact same

2788
02:04:27,520 --> 02:04:32,239
standard hero it goes

2789
02:04:28,399 --> 02:04:35,118
if we have one left we use it

2790
02:04:32,238 --> 02:04:36,799
um you know in the initial sort of

2791
02:04:35,118 --> 02:04:38,639
stepping through otherwise we push it

2792
02:04:36,800 --> 02:04:40,320
off we pull it off the freak

2793
02:04:38,639 --> 02:04:41,920
it's ex like you can literally find

2794
02:04:40,319 --> 02:04:43,359
exactly the code here

2795
02:04:41,920 --> 02:04:45,039
in handmade here it's just how you

2796
02:04:43,359 --> 02:04:45,759
implement it's how everyone's always

2797
02:04:45,039 --> 02:04:48,719
done

2798
02:04:45,760 --> 02:04:50,159
free lists as far as i know like i guess

2799
02:04:48,719 --> 02:04:52,078
there was a way where people

2800
02:04:50,158 --> 02:04:53,439
built the free list by initializing

2801
02:04:52,078 --> 02:04:57,039
things

2802
02:04:53,439 --> 02:04:58,479
um published and not the other way

2803
02:04:57,039 --> 02:05:00,479
we have them both in handmade heroes

2804
02:04:58,479 --> 02:05:01,118
sometimes i like to string the pointers

2805
02:05:00,479 --> 02:05:02,879
first

2806
02:05:01,118 --> 02:05:05,519
if i want to simplify if i want to

2807
02:05:02,880 --> 02:05:07,760
reduce the checking in the code

2808
02:05:05,520 --> 02:05:08,719
um so i think we've done it both ways on

2809
02:05:07,760 --> 02:05:11,039
handmade hero

2810
02:05:08,719 --> 02:05:12,560
maybe no one ever published the fact

2811
02:05:11,039 --> 02:05:14,399
that you don't have to do that

2812
02:05:12,560 --> 02:05:16,320
like they only published one of the ways

2813
02:05:14,399 --> 02:05:18,559
i don't know which is crazy but that

2814
02:05:16,319 --> 02:05:21,840
might be true

2815
02:05:18,560 --> 02:05:21,840
somehow i doubt it

2816
02:05:28,960 --> 02:05:32,158
could explain about ecc memory not

2817
02:05:31,118 --> 02:05:33,679
really because i don't know anything

2818
02:05:32,158 --> 02:05:36,719
about ecc memory

2819
02:05:33,679 --> 02:05:39,359
basically the only thing that

2820
02:05:36,719 --> 02:05:41,520
i know about ecc memory it stands for

2821
02:05:39,359 --> 02:05:44,799
error correcting codes i believe right

2822
02:05:41,520 --> 02:05:46,560
is that because memory can have errors

2823
02:05:44,800 --> 02:05:48,000
meaning it's not perfect like you can't

2824
02:05:46,560 --> 02:05:49,840
just assume

2825
02:05:48,000 --> 02:05:51,198
that the memory store is what you put in

2826
02:05:49,840 --> 02:05:53,520
there exactly

2827
02:05:51,198 --> 02:05:56,238
you can have interference or just random

2828
02:05:53,520 --> 02:05:58,320
failures and when you get up to having

2829
02:05:56,238 --> 02:05:59,279
you know a terabyte of memory or

2830
02:05:58,319 --> 02:06:02,319
something like that

2831
02:05:59,279 --> 02:06:04,319
like some servers do these days

2832
02:06:02,319 --> 02:06:05,359
you will get some random bit errors

2833
02:06:04,319 --> 02:06:07,599
potentially

2834
02:06:05,359 --> 02:06:08,960
so the idea behind ecc memory the only

2835
02:06:07,599 --> 02:06:09,760
thing i know about it is they're just

2836
02:06:08,960 --> 02:06:11,920
like look

2837
02:06:09,760 --> 02:06:14,320
we use some extra it's like less

2838
02:06:11,920 --> 02:06:17,599
efficient or more expensive

2839
02:06:14,319 --> 02:06:21,039
um or both we

2840
02:06:17,599 --> 02:06:22,880
store some extra information with every

2841
02:06:21,039 --> 02:06:24,479
row of memory or something you know at

2842
02:06:22,880 --> 02:06:26,560
some granularity

2843
02:06:24,479 --> 02:06:29,279
so that we can detect when there's an

2844
02:06:26,560 --> 02:06:33,199
error and potentially recover

2845
02:06:29,279 --> 02:06:33,679
right um that's all i know about ecc

2846
02:06:33,198 --> 02:06:35,359
memory

2847
02:06:33,679 --> 02:06:37,760
i really don't know how they implement

2848
02:06:35,359 --> 02:06:41,519
it i don't know what they use

2849
02:06:37,760 --> 02:06:42,079
um i don't even know if ecc memory

2850
02:06:41,520 --> 02:06:44,880
actually

2851
02:06:42,078 --> 02:06:46,319
implies anything particular it may just

2852
02:06:44,880 --> 02:06:49,599
be a term that you use

2853
02:06:46,319 --> 02:06:50,000
anytime you're talking about memory that

2854
02:06:49,599 --> 02:06:53,039
does

2855
02:06:50,000 --> 02:06:54,319
some kind of error checking in recovery

2856
02:06:53,039 --> 02:06:55,920
and it may be that different

2857
02:06:54,319 --> 02:06:58,880
manufacturers have different ones i

2858
02:06:55,920 --> 02:07:02,078
really don't know

2859
02:06:58,880 --> 02:07:02,719
but that's what it does it's trying to

2860
02:07:02,078 --> 02:07:04,639
make it

2861
02:07:02,719 --> 02:07:05,840
less likely that you have a random bit

2862
02:07:04,639 --> 02:07:07,760
failure

2863
02:07:05,840 --> 02:07:09,360
because when you get up to very large

2864
02:07:07,760 --> 02:07:11,599
amounts of memory

2865
02:07:09,359 --> 02:07:13,359
that becomes a very real possibility

2866
02:07:11,599 --> 02:07:15,920
right

2867
02:07:13,359 --> 02:07:17,759
um you know if your failure chance was

2868
02:07:15,920 --> 02:07:20,319
one in a million

2869
02:07:17,760 --> 02:07:21,840
for every megabyte of memory back when

2870
02:07:20,319 --> 02:07:25,198
computers only had

2871
02:07:21,840 --> 02:07:26,239
a few megabytes of memory it's not that

2872
02:07:25,198 --> 02:07:28,479
likely

2873
02:07:26,238 --> 02:07:29,839
when you now have a terabyte of memory

2874
02:07:28,479 --> 02:07:32,479
it's a guarantee

2875
02:07:29,840 --> 02:07:33,679
right if it's one in a million um you

2876
02:07:32,479 --> 02:07:37,598
definitely will

2877
02:07:33,679 --> 02:07:37,599
right so you know

2878
02:07:38,880 --> 02:07:44,880
i that's that's what ecc is

2879
02:07:43,039 --> 02:07:46,880
and i don't know how sophisticated they

2880
02:07:44,880 --> 02:07:49,199
are now like i don't know how good the

2881
02:07:46,880 --> 02:07:52,239
error checking actually is

2882
02:07:49,198 --> 02:07:55,839
i think originally it could handle like

2883
02:07:52,238 --> 02:07:57,198
one error like if one bit got set to the

2884
02:07:55,840 --> 02:08:00,960
wrong value

2885
02:07:57,198 --> 02:08:04,000
it could the error correcting code could

2886
02:08:00,960 --> 02:08:09,439
could probably repair that one bit

2887
02:08:04,000 --> 02:08:23,840
right um

2888
02:08:09,439 --> 02:08:23,839
i don't know if it can do anything else

2889
02:08:25,198 --> 02:08:28,719
people in chatter saying can correct one

2890
02:08:26,880 --> 02:08:32,400
bit flip and detect

2891
02:08:28,719 --> 02:08:34,078
a two-bit flip so

2892
02:08:32,399 --> 02:08:37,839
so maybe that's it i don't know like i

2893
02:08:34,078 --> 02:08:37,840
said i don't really know

2894
02:08:47,520 --> 02:08:50,639
and handmade hero do you align the

2895
02:08:48,880 --> 02:08:52,319
elements you put into the arena someone

2896
02:08:50,639 --> 02:08:53,679
told me that nowadays on desktops the

2897
02:08:52,319 --> 02:08:54,960
alignment for read write is not as

2898
02:08:53,679 --> 02:08:56,399
important but it is probably better to

2899
02:08:54,960 --> 02:08:57,679
get as many things into a cache line as

2900
02:08:56,399 --> 02:09:00,638
possible

2901
02:08:57,679 --> 02:09:03,279
um yes so i don't remember exactly what

2902
02:09:00,639 --> 02:09:06,400
we do but we don't do much alignment

2903
02:09:03,279 --> 02:09:09,519
in the arenas normally no and

2904
02:09:06,399 --> 02:09:13,118
what the someone told you is correct for

2905
02:09:09,520 --> 02:09:15,679
desktop cpus especially x64 cpus

2906
02:09:13,118 --> 02:09:16,319
alignment doesn't matter very much the

2907
02:09:15,679 --> 02:09:20,158
only

2908
02:09:16,319 --> 02:09:22,719
particularly nasty thing that can happen

2909
02:09:20,158 --> 02:09:24,960
is if you're trying to gather things

2910
02:09:22,719 --> 02:09:29,118
that happen across cache lines

2911
02:09:24,960 --> 02:09:30,840
um so like it behooves you to maybe

2912
02:09:29,118 --> 02:09:32,319
allocate on at least four byte

2913
02:09:30,840 --> 02:09:33,599
granularity

2914
02:09:32,319 --> 02:09:35,198
so you don't cross cache lines

2915
02:09:33,599 --> 02:09:36,960
unnecessarily and you definitely don't

2916
02:09:35,198 --> 02:09:39,359
want to cross page boundaries

2917
02:09:36,960 --> 02:09:41,599
so you don't want to straddle a 4k page

2918
02:09:39,359 --> 02:09:43,198
boundary if you can't avoid it

2919
02:09:41,599 --> 02:09:45,760
you just pay penalties when you do those

2920
02:09:43,198 --> 02:09:46,479
gathers so if you're just four byte

2921
02:09:45,760 --> 02:09:49,840
aligned

2922
02:09:46,479 --> 02:09:50,959
or eight byte aligned you are totally

2923
02:09:49,840 --> 02:09:53,920
good to go

2924
02:09:50,960 --> 02:09:55,599
um if you're not if you're literally

2925
02:09:53,920 --> 02:09:58,960
just bite aligned

2926
02:09:55,599 --> 02:10:02,319
um which is which is not aligned you

2927
02:09:58,960 --> 02:10:03,359
may get some issues it's not safe to say

2928
02:10:02,319 --> 02:10:05,439
you never will

2929
02:10:03,359 --> 02:10:07,439
um you can actually get a penalty if you

2930
02:10:05,439 --> 02:10:12,078
try to gather

2931
02:10:07,439 --> 02:10:14,638
across a 4k page boundary um

2932
02:10:12,078 --> 02:10:15,198
it can be an issue now it's important to

2933
02:10:14,639 --> 02:10:18,880
note that

2934
02:10:15,198 --> 02:10:21,439
issue means you know a few dozen cycles

2935
02:10:18,880 --> 02:10:22,719
of stall so at the end of the day if

2936
02:10:21,439 --> 02:10:24,879
it's just an entity

2937
02:10:22,719 --> 02:10:26,719
and you only read you know you're just

2938
02:10:24,880 --> 02:10:27,520
going to read like one field out of one

2939
02:10:26,719 --> 02:10:30,078
entity

2940
02:10:27,520 --> 02:10:30,880
will occasionally straddle the cash line

2941
02:10:30,078 --> 02:10:34,319
so every

2942
02:10:30,880 --> 02:10:35,599
i don't know how many like every 30

2943
02:10:34,319 --> 02:10:36,960
entities you have one field that

2944
02:10:35,599 --> 02:10:39,760
straddles the cash

2945
02:10:36,960 --> 02:10:41,118
that straddles the uh page boundary

2946
02:10:39,760 --> 02:10:43,520
you're probably still fine

2947
02:10:41,118 --> 02:10:45,118
honestly right you're probably still

2948
02:10:43,520 --> 02:10:46,800
fine because

2949
02:10:45,118 --> 02:10:48,238
you know you're paying the penalties so

2950
02:10:46,800 --> 02:10:50,719
infrequently

2951
02:10:48,238 --> 02:10:52,238
that you probably just don't care and

2952
02:10:50,719 --> 02:10:53,520
like the someone told you

2953
02:10:52,238 --> 02:10:55,359
fitting more things into the cash is

2954
02:10:53,520 --> 02:10:56,480
always good so using less memory is its

2955
02:10:55,359 --> 02:10:59,839
own benefit

2956
02:10:56,479 --> 02:11:02,078
so again for all you know the

2957
02:10:59,840 --> 02:11:04,800
space you saved by not doing any

2958
02:11:02,078 --> 02:11:07,359
additional padding for alignment

2959
02:11:04,800 --> 02:11:09,679
may have solved that problem right

2960
02:11:07,359 --> 02:11:10,078
normally i don't tend to do that anyway

2961
02:11:09,679 --> 02:11:13,920
though

2962
02:11:10,078 --> 02:11:16,158
because look anything we do

2963
02:11:13,920 --> 02:11:18,399
struct wise is the structs are usually

2964
02:11:16,158 --> 02:11:22,158
going to be four or eight bite

2965
02:11:18,399 --> 02:11:22,719
uh granular anyway so i would typically

2966
02:11:22,158 --> 02:11:24,719
put

2967
02:11:22,719 --> 02:11:26,158
entities in their own arena at some

2968
02:11:24,719 --> 02:11:28,399
point anyway

2969
02:11:26,158 --> 02:11:29,759
or you know stuff like that so it

2970
02:11:28,399 --> 02:11:30,158
usually just doesn't matter because

2971
02:11:29,760 --> 02:11:34,239
they're

2972
02:11:30,158 --> 02:11:34,238
automatically aligned you know what i

2973
02:11:36,840 --> 02:11:39,840
mean

2974
02:11:45,520 --> 02:11:51,760
can hyper threading cause false sharing

2975
02:11:48,639 --> 02:11:54,159
i don't see how it could no

2976
02:11:51,760 --> 02:11:55,520
hyper threading is on the same core so

2977
02:11:54,158 --> 02:11:57,920
two hyper threads

2978
02:11:55,520 --> 02:11:58,880
that both need to access a cache line

2979
02:11:57,920 --> 02:12:02,000
are using the same

2980
02:11:58,880 --> 02:12:02,480
l1 cache line so so i don't think you

2981
02:12:02,000 --> 02:12:06,800
have

2982
02:12:02,479 --> 02:12:09,839
if you if you hyper thread

2983
02:12:06,800 --> 02:12:11,920
two thread two hyper threads on the same

2984
02:12:09,840 --> 02:12:13,599
core i don't think can have a false

2985
02:12:11,920 --> 02:12:17,920
sharing

2986
02:12:13,599 --> 02:12:22,319
uh penalty because

2987
02:12:17,920 --> 02:12:22,319
it's the same l1 cache right

2988
02:12:28,078 --> 02:12:35,039
all right my voice is getting tired so

2989
02:12:29,599 --> 02:12:37,199
we're done we're done

2990
02:12:35,039 --> 02:12:38,238
uh and infinim one last thing someone

2991
02:12:37,198 --> 02:12:39,519
was asking if i had a back problem

2992
02:12:38,238 --> 02:12:41,039
sitting all day or just buy expensive

2993
02:12:39,520 --> 02:12:42,480
chair and problems go away uh no so i

2994
02:12:41,039 --> 02:12:43,279
would say don't sit all day get up and

2995
02:12:42,479 --> 02:12:45,759
move around

2996
02:12:43,279 --> 02:12:47,519
every hour or so uh but the other thing

2997
02:12:45,760 --> 02:12:49,840
i say is i don't have an expensive chair

2998
02:12:47,520 --> 02:12:51,040
i've recommended the chair that i have a

2999
02:12:49,840 --> 02:12:53,760
couple times before

3000
02:12:51,039 --> 02:12:54,158
uh i love them and they're cheap um it's

3001
02:12:53,760 --> 02:12:58,000
my

3002
02:12:54,158 --> 02:13:03,839
favorite chair um

3003
02:12:58,000 --> 02:13:03,840
let me close this down here

3004
02:13:04,238 --> 02:13:11,759
uh i use

3005
02:13:07,359 --> 02:13:15,198
the space chair

3006
02:13:11,760 --> 02:13:18,960
um whatever

3007
02:13:15,198 --> 02:13:18,960
uh amazon

3008
02:13:19,679 --> 02:13:24,399
i love just what is like

3009
02:13:25,039 --> 02:13:31,840
it's so weird right like

3010
02:13:32,399 --> 02:13:40,879
yeah uh anyway so

3011
02:13:35,760 --> 02:13:40,880
i i use the space

3012
02:13:42,840 --> 02:13:50,000
chairs

3013
02:13:45,679 --> 02:13:50,000
it's this thing um

3014
02:13:50,479 --> 02:13:57,039
so like super not expensive

3015
02:13:54,158 --> 02:13:58,638
um i love these things they're way

3016
02:13:57,039 --> 02:14:00,319
better like i don't like the fancy

3017
02:13:58,639 --> 02:14:03,920
chairs like the herman miller

3018
02:14:00,319 --> 02:14:05,519
aeron chair or whatever i

3019
02:14:03,920 --> 02:14:08,239
hate those i can't sit in those for

3020
02:14:05,520 --> 02:14:10,639
hardly any time i like a firm base

3021
02:14:08,238 --> 02:14:11,359
and a tight like a back that's that's

3022
02:14:10,639 --> 02:14:13,199
fairly

3023
02:14:11,359 --> 02:14:15,118
you know hard i like to be like kept

3024
02:14:13,198 --> 02:14:17,118
fairly rigid in the chair so i just i

3025
02:14:15,118 --> 02:14:20,399
don't like

3026
02:14:17,118 --> 02:14:21,759
um yeah any of that and

3027
02:14:20,399 --> 02:14:23,679
yeah these are these are not my because

3028
02:14:21,760 --> 02:14:26,880
i don't use this so i just get to see

3029
02:14:23,679 --> 02:14:28,800
what other people have searched for

3030
02:14:26,880 --> 02:14:30,159
and what it's based on so like i just

3031
02:14:28,800 --> 02:14:31,920
searched for a chair so now it's just

3032
02:14:30,158 --> 02:14:34,158
giving me chair related

3033
02:14:31,920 --> 02:14:34,158
right

3034
02:14:35,118 --> 02:14:42,238
ah google i hate i hate that company

3035
02:14:39,439 --> 02:14:42,238
all right um

3036
02:14:42,719 --> 02:14:48,960
so i think we're i think we're good uh

3037
02:14:46,000 --> 02:14:50,319
i think we are we are good we are good

3038
02:14:48,960 --> 02:14:52,078
to go

3039
02:14:50,319 --> 02:14:53,519
um so thank you everyone for joining me

3040
02:14:52,078 --> 02:14:54,960
for another episode of handmade hero

3041
02:14:53,520 --> 02:14:55,679
it's been a pleasure coding with you as

3042
02:14:54,960 --> 02:14:57,920
always if

3043
02:14:55,679 --> 02:14:59,679
you would like to follow along with

3044
02:14:57,920 --> 02:15:01,279
series you can always pre-order the game

3045
02:14:59,679 --> 02:15:03,599
on handmadehero.org

3046
02:15:01,279 --> 02:15:05,519
it comes with the source code if you

3047
02:15:03,599 --> 02:15:07,199
would like to play around with it

3048
02:15:05,520 --> 02:15:09,280
that's it for today i'll be back here

3049
02:15:07,198 --> 02:15:11,839
next weekend when i will add the ability

3050
02:15:09,279 --> 02:15:14,238
to unlock doors to the game

3051
02:15:11,840 --> 02:15:16,000
um which will start to add actual

3052
02:15:14,238 --> 02:15:17,678
gameplay to the game which is terrifying

3053
02:15:16,000 --> 02:15:20,000
because i don't like designing games

3054
02:15:17,679 --> 02:15:21,359
but uh what are you going to do there's

3055
02:15:20,000 --> 02:15:23,279
nothing left to do

3056
02:15:21,359 --> 02:15:24,880
so that's what we're doing i'll see you

3057
02:15:23,279 --> 02:15:27,679
folks back here for that until

3058
02:15:24,880 --> 02:15:28,159
then have fun programming and i will see

3059
02:15:27,679 --> 02:15:32,399
y'all

3060
02:15:28,158 --> 02:15:32,399
on the internet take it easy everybody

