1
00:00:02,629 --> 00:00:07,500
hello everybody and welcome to handmade

2
00:00:05,278 --> 00:00:08,730
hero the show where we formerly coded a

3
00:00:07,500 --> 00:00:10,109
complete gave live on stream and

4
00:00:08,730 --> 00:00:12,690
hopefully will continue to code a

5
00:00:10,109 --> 00:00:14,609
complete game live on stream but I am on

6
00:00:12,689 --> 00:00:17,219
our side break right now so well the

7
00:00:14,609 --> 00:00:18,839
hands are healing we're just still

8
00:00:17,219 --> 00:00:20,729
hanging out because well there wasn't

9
00:00:18,839 --> 00:00:23,518
really a good reason not to still stream

10
00:00:20,730 --> 00:00:26,579
just not to type and I don't have to

11
00:00:23,518 --> 00:00:29,070
type to stream so there you go we've

12
00:00:26,579 --> 00:00:30,750
been basically taking questions where I

13
00:00:29,070 --> 00:00:31,768
can sort of see if there's people who

14
00:00:30,750 --> 00:00:38,070
have stuff that they would like me to

15
00:00:31,768 --> 00:00:41,149
cover while we're on break and I've got

16
00:00:38,070 --> 00:00:44,939
a question from somebody in email that

17
00:00:41,149 --> 00:00:47,160
actually sort of there was a number of

18
00:00:44,939 --> 00:00:49,170
things in it that I thought were kind of

19
00:00:47,159 --> 00:00:51,509
important to nail down and so I'd like

20
00:00:49,170 --> 00:00:53,340
to go over that now I'd probably take a

21
00:00:51,509 --> 00:00:55,439
good portion of the program here and

22
00:00:53,340 --> 00:00:56,940
some of it is going to be review for

23
00:00:55,439 --> 00:01:00,349
people who followed all of handmade hira

24
00:00:56,939 --> 00:01:03,329
but it was it was something that was I

25
00:01:00,350 --> 00:01:05,129
it's it's worth understanding enough

26
00:01:03,329 --> 00:01:07,170
that I just feel like it's worth doing

27
00:01:05,129 --> 00:01:08,909
another whiteboard on just so people are

28
00:01:07,170 --> 00:01:11,728
really comfortable with it and there's

29
00:01:08,909 --> 00:01:15,090
no question about this the circumstance

30
00:01:11,728 --> 00:01:23,150
here so I want to talk about the

31
00:01:15,090 --> 00:01:30,990
difference between a conceptual resource

32
00:01:23,150 --> 00:01:33,118
versus a physical resource because what

33
00:01:30,989 --> 00:01:36,810
was apparent to me when I read the email

34
00:01:33,118 --> 00:01:38,879
question it was that the person who was

35
00:01:36,810 --> 00:01:40,650
asking it didn't seem to really

36
00:01:38,879 --> 00:01:42,420
understand the difference between a

37
00:01:40,650 --> 00:01:44,070
conceptual resource and a physical

38
00:01:42,420 --> 00:01:49,079
resource and I can understand why that's

39
00:01:44,069 --> 00:01:50,489
true because in a lot of systems where

40
00:01:49,078 --> 00:01:52,648
you aren't programming from scratch so

41
00:01:50,489 --> 00:01:53,969
you know on him a hero obviously as

42
00:01:52,649 --> 00:01:56,218
educational scream so we program

43
00:01:53,969 --> 00:01:58,109
everything from scratch and so we wrote

44
00:01:56,218 --> 00:01:59,609
the thing that actually loads everything

45
00:01:58,109 --> 00:02:02,009
off of the disk and we you know we did

46
00:01:59,609 --> 00:02:04,590
all of that ourselves and if that's your

47
00:02:02,009 --> 00:02:06,868
first introduction as it was for me for

48
00:02:04,590 --> 00:02:07,890
example because when I was growing up

49
00:02:06,868 --> 00:02:09,959
and writing these things there were

50
00:02:07,890 --> 00:02:10,860
nesting as a game engine that didn't

51
00:02:09,959 --> 00:02:12,539
that I don't even know if that word

52
00:02:10,860 --> 00:02:16,760
existed until I was

53
00:02:12,539 --> 00:02:20,810
gosh probably 15 16 or something right

54
00:02:16,759 --> 00:02:23,250
so there really was no such thing as a

55
00:02:20,810 --> 00:02:24,509
off the shelf thing that you got and

56
00:02:23,250 --> 00:02:26,009
built a game you know wasn't like you

57
00:02:24,509 --> 00:02:27,509
went and grabbed unity or something like

58
00:02:26,009 --> 00:02:29,969
this and started making a game without

59
00:02:27,509 --> 00:02:33,209
any idea of like what it was doing that

60
00:02:29,969 --> 00:02:34,560
wasn't a thing but if that was your

61
00:02:33,209 --> 00:02:36,150
first introduction to something that's

62
00:02:34,560 --> 00:02:37,348
like the first time that you sort of

63
00:02:36,150 --> 00:02:39,120
started thinking about game development

64
00:02:37,348 --> 00:02:42,628
was with unity or game maker when these

65
00:02:39,120 --> 00:02:44,039
things it's kind of easy to understand

66
00:02:42,628 --> 00:02:46,679
why people could get confused between

67
00:02:44,039 --> 00:02:48,388
the difference but or be confused or

68
00:02:46,680 --> 00:02:50,969
conflate conceptual and physical

69
00:02:48,389 --> 00:02:53,430
resources because sometimes they are is

70
00:02:50,969 --> 00:02:56,219
set essentially the same in these tools

71
00:02:53,430 --> 00:02:58,109
right meaning the two the engine that

72
00:02:56,219 --> 00:03:00,060
you use may not differentiate between

73
00:02:58,109 --> 00:03:02,069
those two things in any way that you can

74
00:03:00,060 --> 00:03:03,840
perceive as an end user now under the

75
00:03:02,068 --> 00:03:05,310
hood they almost certainly are

76
00:03:03,840 --> 00:03:08,128
differentiating between them in their

77
00:03:05,310 --> 00:03:11,128
own code but in your world like what you

78
00:03:08,128 --> 00:03:13,818
see in terms of what the the game engine

79
00:03:11,128 --> 00:03:17,608
exposes to you as a user they may never

80
00:03:13,818 --> 00:03:19,948
show that difference and so I wanted to

81
00:03:17,609 --> 00:03:21,719
kind of underscore what it was and I'll

82
00:03:19,949 --> 00:03:23,400
answer the specific question the person

83
00:03:21,719 --> 00:03:24,750
had in the email as part of that but

84
00:03:23,400 --> 00:03:26,699
this I thought was kind of a bigger

85
00:03:24,750 --> 00:03:29,579
issue that I wanted to make sure we

86
00:03:26,699 --> 00:03:32,340
touched on so first of all let me

87
00:03:29,579 --> 00:03:34,859
explain what a conceptual resource is a

88
00:03:32,340 --> 00:03:39,479
conceptual resource is something you

89
00:03:34,859 --> 00:03:41,879
think of and talk about as a asset or

90
00:03:39,479 --> 00:03:47,129
something you use as part of the game

91
00:03:41,878 --> 00:03:50,668
right so a conceptual resource might be

92
00:03:47,128 --> 00:03:53,638
something like a mesh let's say right

93
00:03:50,669 --> 00:03:56,099
like a 3d mesh that you're going to use

94
00:03:53,639 --> 00:03:57,870
that you made in Maya or something like

95
00:03:56,098 --> 00:04:00,478
that right the conceptual resource

96
00:03:57,870 --> 00:04:03,599
another one so for handmade hero one

97
00:04:00,479 --> 00:04:05,819
example would be a bitmap right so some

98
00:04:03,598 --> 00:04:08,878
like image that you you know that you

99
00:04:05,818 --> 00:04:10,858
made right these are conceptual

100
00:04:08,878 --> 00:04:13,918
resources and what I mean by that is

101
00:04:10,859 --> 00:04:16,079
that there isn't anything specific about

102
00:04:13,919 --> 00:04:18,870
them that makes them physical resources

103
00:04:16,079 --> 00:04:20,519
there's nothing that makes them uh have

104
00:04:18,870 --> 00:04:22,199
to exist in any particular way because

105
00:04:20,519 --> 00:04:25,319
they're just bits and bytes at the end

106
00:04:22,199 --> 00:04:26,180
of the day right but conceptually we are

107
00:04:25,319 --> 00:04:31,339
thinking of

108
00:04:26,180 --> 00:04:34,069
specific bundle of bits right as meaning

109
00:04:31,339 --> 00:04:37,129
this thing so we're thinking of this 3d

110
00:04:34,069 --> 00:04:40,339
mesh as being a conceptually unit like

111
00:04:37,129 --> 00:04:42,139
unified whole right that we talked about

112
00:04:40,339 --> 00:04:44,418
we even give it a name right like maybe

113
00:04:42,139 --> 00:04:46,579
this thing has some fun even a file name

114
00:04:44,418 --> 00:04:48,288
if it's in a file or maybe if it's just

115
00:04:46,579 --> 00:04:49,609
a mesh that's in a Maya file it's got

116
00:04:48,288 --> 00:04:51,639
just a name so you know it's like it's

117
00:04:49,610 --> 00:04:54,680
like hero underscore mesh or something

118
00:04:51,639 --> 00:04:57,259
or whatever so we even have a name for

119
00:04:54,680 --> 00:04:58,780
it like humans like to name concepts we

120
00:04:57,259 --> 00:05:01,639
might even have names for them right

121
00:04:58,779 --> 00:05:02,959
that's a conceptual resource and the

122
00:05:01,639 --> 00:05:05,150
reason that I think it's important to

123
00:05:02,959 --> 00:05:07,698
understand what that means is because a

124
00:05:05,149 --> 00:05:11,168
conceptual resource has literally no

125
00:05:07,699 --> 00:05:17,538
relationship to a physical resource okay

126
00:05:11,168 --> 00:05:19,310
so what's a physical resource a physical

127
00:05:17,538 --> 00:05:23,360
resource is something that you actually

128
00:05:19,310 --> 00:05:25,399
have to get store load something that's

129
00:05:23,360 --> 00:05:28,660
actually binary data coming from

130
00:05:25,399 --> 00:05:31,399
somewhere in some kind of a package okay

131
00:05:28,660 --> 00:05:34,189
so a physical resource might be

132
00:05:31,399 --> 00:05:36,769
literally a file on a drive let's say or

133
00:05:34,189 --> 00:05:39,769
a file that's on a network somewhere

134
00:05:36,769 --> 00:05:43,060
some some like a URL addressable thing

135
00:05:39,769 --> 00:05:45,740
right but it's something that is only

136
00:05:43,060 --> 00:05:48,530
considered a unit as far as the

137
00:05:45,740 --> 00:05:50,930
underlying system is concerned so for

138
00:05:48,529 --> 00:05:58,668
example we may have something like you

139
00:05:50,930 --> 00:06:01,009
know handmade assets dot you know text

140
00:05:58,668 --> 00:06:02,750
or something like this which is a text

141
00:06:01,009 --> 00:06:05,689
file that has a bunch of stuff in it or

142
00:06:02,750 --> 00:06:07,728
whatever and this is a physical asset in

143
00:06:05,689 --> 00:06:11,180
the sense that it is like on the drive

144
00:06:07,728 --> 00:06:17,089
as a file right it actually exists as a

145
00:06:11,180 --> 00:06:18,168
literal resource right and the reason

146
00:06:17,089 --> 00:06:21,198
that I want to draw this distinction

147
00:06:18,168 --> 00:06:24,948
here is because this text file might

148
00:06:21,199 --> 00:06:27,348
have lots of conceptual resources in it

149
00:06:24,949 --> 00:06:29,150
for example the text file might have

150
00:06:27,348 --> 00:06:32,000
different sections and each section

151
00:06:29,149 --> 00:06:34,429
might be conceptually different okay

152
00:06:32,000 --> 00:06:37,519
more to the point and the thing that I

153
00:06:34,430 --> 00:06:39,259
wanted to address sort of as specific to

154
00:06:37,519 --> 00:06:41,329
the question that the person was asking

155
00:06:39,259 --> 00:06:45,199
is we may have something called handmade

156
00:06:41,329 --> 00:06:46,699
you know dot art or something or better

157
00:06:45,199 --> 00:06:50,050
yet let me just actually use I forget

158
00:06:46,699 --> 00:06:53,990
what the file thing is that we actually

159
00:06:50,050 --> 00:06:57,410
called our stuff but in our data

160
00:06:53,990 --> 00:06:59,329
directory HHA right so there's a test

161
00:06:57,410 --> 00:07:03,140
one HHA or whatever so we've got

162
00:06:59,329 --> 00:07:05,199
handmade ehh ehh okay and what is handy

163
00:07:03,139 --> 00:07:08,029
that you say well it's a physical

164
00:07:05,199 --> 00:07:11,180
physical resource right it's a file on

165
00:07:08,029 --> 00:07:14,059
the drive but it is not a conceptual

166
00:07:11,180 --> 00:07:16,459
resource because what's in it is lots of

167
00:07:14,060 --> 00:07:18,530
concept it's a bundle right of lots of

168
00:07:16,459 --> 00:07:20,180
conceptual resources there's tons and

169
00:07:18,529 --> 00:07:24,019
tons and tons of bitmaps in there tons

170
00:07:20,180 --> 00:07:27,410
of sounds in there whatever right okay

171
00:07:24,019 --> 00:07:30,109
so this is a very very important concept

172
00:07:27,410 --> 00:07:31,550
to understand and like I said for some

173
00:07:30,110 --> 00:07:33,800
people whose introduction to programming

174
00:07:31,550 --> 00:07:35,870
was through a more from scratch route

175
00:07:33,800 --> 00:07:37,579
this is a trivial distinction you never

176
00:07:35,870 --> 00:07:39,949
you've always understood it and it's

177
00:07:37,579 --> 00:07:41,240
just second nature right but for someone

178
00:07:39,949 --> 00:07:43,519
who's coming out at the other direction

179
00:07:41,240 --> 00:07:45,579
it'd be very easy to not understand the

180
00:07:43,519 --> 00:07:52,669
distinction between these two things

181
00:07:45,579 --> 00:07:55,579
right okay so with that in mind I want

182
00:07:52,670 --> 00:07:58,090
to talk about the specific question that

183
00:07:55,579 --> 00:08:00,079
the person asked and that question was

184
00:07:58,089 --> 00:08:04,879
maybe i'll leave this kind of right

185
00:08:00,079 --> 00:08:09,889
there that question was why would a game

186
00:08:04,879 --> 00:08:11,360
ever need more than one file right why

187
00:08:09,889 --> 00:08:14,120
would it ever need more than one file

188
00:08:11,360 --> 00:08:16,129
and this was talking yesterday because

189
00:08:14,120 --> 00:08:19,129
remember yesterday I talked about oh

190
00:08:16,129 --> 00:08:21,469
I've got a game and it's got art files

191
00:08:19,129 --> 00:08:26,269
but I could package those all up into

192
00:08:21,470 --> 00:08:29,420
one file right and so that by itself is

193
00:08:26,269 --> 00:08:33,918
interested why would a game ever need

194
00:08:29,420 --> 00:08:39,590
more than one file so say like why more

195
00:08:33,918 --> 00:08:41,629
oops by more than one file and then the

196
00:08:39,590 --> 00:08:43,399
second question that's a person asked

197
00:08:41,629 --> 00:08:45,559
and I'm saying question but really it

198
00:08:43,399 --> 00:08:46,789
was part of the question number one they

199
00:08:45,559 --> 00:08:48,379
asked there's sort of a separate thing

200
00:08:46,789 --> 00:08:51,889
that led to a different question that I

201
00:08:48,379 --> 00:08:52,789
wanted to address and that is why would

202
00:08:51,889 --> 00:08:55,250
every more in file and

203
00:08:52,789 --> 00:08:57,949
said the only thing I can think of

204
00:08:55,250 --> 00:09:00,919
they're saying is that if you wanted to

205
00:08:57,950 --> 00:09:01,820
sort of have sprite sheets right and

206
00:09:00,919 --> 00:09:03,289
we've talked about sprite sheets before

207
00:09:01,820 --> 00:09:05,600
that's basically like a single bit map

208
00:09:03,289 --> 00:09:07,129
that has a bunch of different frames of

209
00:09:05,600 --> 00:09:08,779
animation for a sprite packed into it if

210
00:09:07,129 --> 00:09:12,769
you want to have different sprite sheets

211
00:09:08,779 --> 00:09:15,860
that you swapped in and out right for a

212
00:09:12,769 --> 00:09:19,699
character let's say then you might want

213
00:09:15,860 --> 00:09:21,050
to do that by having the the sprite

214
00:09:19,700 --> 00:09:23,000
sheet for one character in spray chief

215
00:09:21,049 --> 00:09:24,349
or another character match up exactly so

216
00:09:23,000 --> 00:09:26,629
you could just pick which one you were

217
00:09:24,350 --> 00:09:30,590
using by changing which file you were

218
00:09:26,629 --> 00:09:35,590
using right so that's that's the next

219
00:09:30,590 --> 00:09:39,970
question which is like a sprite sheet

220
00:09:35,590 --> 00:09:44,269
sprite sheets and swapping is a thing

221
00:09:39,970 --> 00:09:48,019
right and then three he sort of said are

222
00:09:44,269 --> 00:09:52,970
their API limits or like you know file

223
00:09:48,019 --> 00:09:55,100
size limits right that affect this

224
00:09:52,970 --> 00:09:56,389
decision so I'm going to try and take

225
00:09:55,100 --> 00:09:59,930
all of these questions because they're

226
00:09:56,389 --> 00:10:02,019
all kind of lumped into one right so the

227
00:09:59,929 --> 00:10:06,919
first question why more than one file

228
00:10:02,019 --> 00:10:08,689
right and so conceptually speaking even

229
00:10:06,919 --> 00:10:10,099
if you had no limitations so assuming

230
00:10:08,690 --> 00:10:11,300
two and three have nothing to do with

231
00:10:10,100 --> 00:10:13,580
this and we're just talking about the

232
00:10:11,299 --> 00:10:16,490
game could do it anyway it wanted is

233
00:10:13,580 --> 00:10:19,280
there any reason just to have more than

234
00:10:16,490 --> 00:10:21,110
one file right separate from everything

235
00:10:19,279 --> 00:10:23,360
else is there any reason why the game

236
00:10:21,110 --> 00:10:26,840
just wants to have more than one file

237
00:10:23,360 --> 00:10:28,070
for its own sake separate from the

238
00:10:26,840 --> 00:10:30,830
sprite sheet questions separate from the

239
00:10:28,070 --> 00:10:32,840
APA sis file size limits is there any

240
00:10:30,830 --> 00:10:35,720
reason right so is there a reason to

241
00:10:32,840 --> 00:10:40,009
have more than one file and the answer

242
00:10:35,720 --> 00:10:47,830
there is potentially yes and the reason

243
00:10:40,009 --> 00:10:47,830
there is because of expansion patching

244
00:10:48,100 --> 00:10:55,820
etc right conceptually speaking you may

245
00:10:53,360 --> 00:10:56,720
want to write a game and I should you

246
00:10:55,820 --> 00:11:00,770
know what I should put in here to

247
00:10:56,720 --> 00:11:03,290
modding conceptually speaking you may

248
00:11:00,769 --> 00:11:05,509
want your game to break things up into

249
00:11:03,289 --> 00:11:06,169
more than one file because those files

250
00:11:05,509 --> 00:11:09,708
are

251
00:11:06,169 --> 00:11:12,708
actually things that a user may want to

252
00:11:09,708 --> 00:11:15,500
address in some way right meaning a user

253
00:11:12,708 --> 00:11:18,278
may want to do something like mod a

254
00:11:15,500 --> 00:11:20,990
particular thing and distribute that mod

255
00:11:18,278 --> 00:11:23,299
and that may be easiest to do by

256
00:11:20,990 --> 00:11:25,039
allowing there to be multiple files in

257
00:11:23,299 --> 00:11:26,750
the directory so I want this file from

258
00:11:25,039 --> 00:11:29,240
this guy in this file from this guy and

259
00:11:26,750 --> 00:11:31,429
I want to put them together and I don't

260
00:11:29,240 --> 00:11:35,299
want to have to write an interface in

261
00:11:31,429 --> 00:11:36,739
the game right for pulling those files

262
00:11:35,299 --> 00:11:38,149
in and rewriting them out to like a

263
00:11:36,740 --> 00:11:39,649
single file because the game only

264
00:11:38,149 --> 00:11:41,839
supports one file or something that

265
00:11:39,649 --> 00:11:45,019
right so iterating over a number of

266
00:11:41,839 --> 00:11:46,610
files and then merging their results or

267
00:11:45,019 --> 00:11:49,519
picking and choosing which ones you use

268
00:11:46,610 --> 00:11:51,800
is a way of providing an interface to

269
00:11:49,519 --> 00:11:53,600
the user for editing the game and

270
00:11:51,799 --> 00:11:55,189
furthermore it provides a convenient

271
00:11:53,600 --> 00:11:56,990
interface for something like expansion

272
00:11:55,190 --> 00:11:58,250
where you could ship an installer where

273
00:11:56,990 --> 00:12:00,829
the installer is just a thing that

274
00:11:58,250 --> 00:12:02,570
copies a new HHA file let's say with the

275
00:12:00,828 --> 00:12:04,159
expect with all the new data in it into

276
00:12:02,570 --> 00:12:05,899
the directory if the game is smart

277
00:12:04,159 --> 00:12:07,819
enough to read all the HHA files that

278
00:12:05,899 --> 00:12:09,589
are in that directory then your

279
00:12:07,820 --> 00:12:11,540
expansion pack shipment is literally

280
00:12:09,589 --> 00:12:15,140
just just that one file it just drops in

281
00:12:11,539 --> 00:12:16,909
and off you got right so there's a bunch

282
00:12:15,139 --> 00:12:18,350
of stuff like that potentially with

283
00:12:16,909 --> 00:12:20,389
patching as well like I said it might be

284
00:12:18,350 --> 00:12:21,980
easier on certain architectures because

285
00:12:20,389 --> 00:12:23,169
remember you don't always have complete

286
00:12:21,980 --> 00:12:25,699
control about how patching works

287
00:12:23,169 --> 00:12:28,278
depending on the platform older and how

288
00:12:25,698 --> 00:12:30,439
they demand patching works you may find

289
00:12:28,278 --> 00:12:31,970
that having more files makes it easier

290
00:12:30,440 --> 00:12:34,310
for you to work around limitations in

291
00:12:31,970 --> 00:12:35,690
there patching system right so there's

292
00:12:34,309 --> 00:12:38,000
plenty of reasons why you might

293
00:12:35,690 --> 00:12:41,839
conceptually want to do this for your

294
00:12:38,000 --> 00:12:44,570
own games ease of maintenance that don't

295
00:12:41,839 --> 00:12:47,089
really have that much to do with the

296
00:12:44,570 --> 00:12:50,329
actual act of loading files or storing

297
00:12:47,089 --> 00:12:52,040
them to the drive or any other concerns

298
00:12:50,328 --> 00:12:53,419
like the spritesheet question so

299
00:12:52,039 --> 00:12:55,698
hopefully that sort of answers that

300
00:12:53,419 --> 00:12:57,379
question let's move on to number two so

301
00:12:55,698 --> 00:12:59,419
the sprite sheet and swapping question

302
00:12:57,379 --> 00:13:00,409
so this is why I wanted to sort of

303
00:12:59,419 --> 00:13:02,269
underscore the difference from

304
00:13:00,409 --> 00:13:03,919
conceptual and physical resources is I

305
00:13:02,269 --> 00:13:06,560
don't really understand that question

306
00:13:03,919 --> 00:13:09,349
because it's having sprite sheet that

307
00:13:06,559 --> 00:13:12,739
you swap is no harder to do inside a

308
00:13:09,350 --> 00:13:16,759
pack file than outside of it right so if

309
00:13:12,740 --> 00:13:18,948
i have a bitmap and B dot bitmap right

310
00:13:16,759 --> 00:13:19,970
and I want to pick which one of these I

311
00:13:18,948 --> 00:13:23,328
use

312
00:13:19,970 --> 00:13:27,709
game for the hero that's no different

313
00:13:23,328 --> 00:13:30,378
than if i have my HH a file and I've got

314
00:13:27,708 --> 00:13:32,659
to I've got a bitmap packed in there and

315
00:13:30,379 --> 00:13:34,339
beat up bitmap packed in there I still

316
00:13:32,659 --> 00:13:36,679
when the game is running it still

317
00:13:34,339 --> 00:13:38,420
chooses which one of these it's going to

318
00:13:36,679 --> 00:13:41,628
load out of the HHA file into memory

319
00:13:38,419 --> 00:13:44,479
right so the HH a file or any packed

320
00:13:41,629 --> 00:13:49,250
file it doesn't give you any less

321
00:13:44,480 --> 00:13:50,930
versatility at runtime right then having

322
00:13:49,250 --> 00:13:52,850
them as separate files because at the

323
00:13:50,929 --> 00:13:54,318
end of the day a physical resource has

324
00:13:52,850 --> 00:13:56,480
nothing to do with a conceptual resource

325
00:13:54,318 --> 00:14:01,128
a single physical resource can still be

326
00:13:56,480 --> 00:14:04,310
loaded at in parts right as separate

327
00:14:01,129 --> 00:14:07,069
conceptual resources so a conceptual

328
00:14:04,309 --> 00:14:08,778
resource does not have to map 12 12 your

329
00:14:07,068 --> 00:14:10,578
physical resources they're completely

330
00:14:08,778 --> 00:14:13,639
different and you don't really have to

331
00:14:10,578 --> 00:14:15,799
worry about that at all so the only time

332
00:14:13,639 --> 00:14:17,778
again where you care about your

333
00:14:15,799 --> 00:14:19,729
conceptual resource to physical resource

334
00:14:17,778 --> 00:14:23,059
mapping is when you have some sort of

335
00:14:19,730 --> 00:14:25,159
expansion patching modding idea and you

336
00:14:23,059 --> 00:14:26,989
feel like it might be easier for you if

337
00:14:25,159 --> 00:14:28,850
they were separated in this way because

338
00:14:26,990 --> 00:14:30,528
then users don't have to copy like say

339
00:14:28,850 --> 00:14:32,600
extra data that they don't actually need

340
00:14:30,528 --> 00:14:35,539
to copy around when distributing a mod

341
00:14:32,600 --> 00:14:38,360
or something right because they're doing

342
00:14:35,539 --> 00:14:39,708
that through their own back Channel that

343
00:14:38,360 --> 00:14:42,050
doesn't involve your game and so your

344
00:14:39,708 --> 00:14:43,849
game can't help them extract and

345
00:14:42,049 --> 00:14:46,578
redistribute the conceptual resources

346
00:14:43,850 --> 00:14:49,459
right now that said even that not that

347
00:14:46,578 --> 00:14:51,708
big of a deal because for example like

348
00:14:49,458 --> 00:14:53,989
if you look at the doom community that

349
00:14:51,708 --> 00:14:57,258
used dot wad files back bill doom

350
00:14:53,990 --> 00:14:59,778
Wolfenstein you know success or doom by

351
00:14:57,259 --> 00:15:02,750
in software the original doom it used

352
00:14:59,778 --> 00:15:05,028
the pack file format called W ad and in

353
00:15:02,750 --> 00:15:06,470
that file it just had all the resources

354
00:15:05,028 --> 00:15:08,389
for the game and basically like the

355
00:15:06,470 --> 00:15:10,100
modding community just wrote tools to

356
00:15:08,389 --> 00:15:13,549
like extract and re combine them anyway

357
00:15:10,100 --> 00:15:15,528
so at the end of the day like even even

358
00:15:13,549 --> 00:15:16,849
at some level you might not really care

359
00:15:15,528 --> 00:15:18,078
because people can overcome those

360
00:15:16,850 --> 00:15:20,389
limitations pretty easily as long as

361
00:15:18,078 --> 00:15:22,088
your document your pack file format and

362
00:15:20,389 --> 00:15:25,100
make it easy for people to work with

363
00:15:22,089 --> 00:15:27,649
it's really not a big deal right so

364
00:15:25,100 --> 00:15:29,449
anyway there's that so now let's

365
00:15:27,649 --> 00:15:31,339
actually talk about number three which

366
00:15:29,448 --> 00:15:34,219
is our their API and file size limits

367
00:15:31,339 --> 00:15:36,890
and the answer actually is yes so

368
00:15:34,220 --> 00:15:40,040
what happens unfortunately is that

369
00:15:36,889 --> 00:15:43,220
certain file systems impose a maximum

370
00:15:40,039 --> 00:15:46,009
file size limit on the any single

371
00:15:43,220 --> 00:15:52,879
contiguous file in that in that file

372
00:15:46,009 --> 00:15:58,000
system so for example if you have say a

373
00:15:52,879 --> 00:16:01,250
fat32 i believe the fat32 file system

374
00:15:58,000 --> 00:16:04,279
limits any particular file to like i

375
00:16:01,250 --> 00:16:07,909
either 2 or 4 gigabytes I think it's too

376
00:16:04,279 --> 00:16:12,110
I think it's basically a signed integers

377
00:16:07,909 --> 00:16:14,929
worth of sign 32-bit integers worth of

378
00:16:12,110 --> 00:16:17,450
space so I think fat 32 is 2 gigabytes

379
00:16:14,929 --> 00:16:18,559
for example so you know if you were

380
00:16:17,450 --> 00:16:22,190
going to distribute let's say the

381
00:16:18,559 --> 00:16:24,919
witness right if you're distributing the

382
00:16:22,190 --> 00:16:26,840
witness then you have a thing that's

383
00:16:24,919 --> 00:16:30,049
bigger than 2 gigabytes and so it can't

384
00:16:26,840 --> 00:16:31,790
fit in a single pack file if that pack

385
00:16:30,049 --> 00:16:34,699
file has to go on a fat from you to

386
00:16:31,789 --> 00:16:36,860
drive now maybe you don't care about

387
00:16:34,700 --> 00:16:40,220
supporting a fat32 drive and that's fine

388
00:16:36,860 --> 00:16:42,019
but the point is yes there are actual

389
00:16:40,220 --> 00:16:43,820
file size limits depending on the file

390
00:16:42,019 --> 00:16:45,110
system that's chosen for the storage

391
00:16:43,820 --> 00:16:49,520
medium that the game is going to run off

392
00:16:45,110 --> 00:16:52,820
of right so there's that another

393
00:16:49,519 --> 00:16:55,399
limitation is download right if people

394
00:16:52,820 --> 00:16:57,710
have to download these files or do other

395
00:16:55,399 --> 00:16:59,149
things with them then you might want to

396
00:16:57,710 --> 00:17:01,700
think about the fact that like well okay

397
00:16:59,149 --> 00:17:03,350
you know if if i'm distributing these

398
00:17:01,700 --> 00:17:05,480
maybe I want to try to distribute them

399
00:17:03,350 --> 00:17:07,640
in ways where the files themselves could

400
00:17:05,480 --> 00:17:10,670
be useful or could be complete or

401
00:17:07,640 --> 00:17:12,200
checked in smaller increments so that

402
00:17:10,670 --> 00:17:14,210
you know if you've got it all I don't

403
00:17:12,200 --> 00:17:16,549
know I mean I don't think so because

404
00:17:14,210 --> 00:17:18,200
typically network distrib you're kind of

405
00:17:16,549 --> 00:17:20,079
not in the loop there so I feel like

406
00:17:18,200 --> 00:17:22,580
that's probably not really that relevant

407
00:17:20,079 --> 00:17:24,500
but I don't know there could be reasons

408
00:17:22,579 --> 00:17:26,539
for transfer on where you would care

409
00:17:24,500 --> 00:17:27,650
about making things not be so huge but I

410
00:17:26,539 --> 00:17:30,730
feel like most people are going through

411
00:17:27,650 --> 00:17:33,370
a service like steam or you know or

412
00:17:30,730 --> 00:17:35,779
something what God with a downloader

413
00:17:33,369 --> 00:17:38,119
these days so I don't know I mean it's

414
00:17:35,779 --> 00:17:41,240
probably just not that big a deal but

415
00:17:38,119 --> 00:17:43,609
anyway so yeah there are some

416
00:17:41,240 --> 00:17:47,000
limitations are their API limitations

417
00:17:43,609 --> 00:17:47,990
well yes and no so in general most

418
00:17:47,000 --> 00:17:52,160
modern operating system

419
00:17:47,990 --> 00:17:53,750
allow 64bit control over your files so

420
00:17:52,160 --> 00:17:55,190
you know if there's a file that's bigger

421
00:17:53,750 --> 00:17:56,599
than two gigabytes or four gigabytes

422
00:17:55,190 --> 00:17:58,730
it's not a problem for the operating

423
00:17:56,599 --> 00:18:00,589
system it's only the problem if the file

424
00:17:58,730 --> 00:18:03,230
system underlying it is you know the

425
00:18:00,589 --> 00:18:07,089
wrong size that said there is a

426
00:18:03,230 --> 00:18:11,440
interesting caveat which is for example

427
00:18:07,089 --> 00:18:11,439
there's a thing called a memory map file

428
00:18:16,808 --> 00:18:20,058
and we play with these a little at hand

429
00:18:19,160 --> 00:18:22,279
made here when we were playing around

430
00:18:20,058 --> 00:18:24,769
with the recording stuff and a memory

431
00:18:22,279 --> 00:18:27,529
map file is when you basically tell the

432
00:18:24,769 --> 00:18:30,710
operating system look I've got a memory

433
00:18:27,529 --> 00:18:32,808
range you know and I want to map that

434
00:18:30,710 --> 00:18:35,808
memory range to something on the disk so

435
00:18:32,808 --> 00:18:38,539
here's a file right so whenever I read

436
00:18:35,808 --> 00:18:41,389
from or write to this address in memory

437
00:18:38,539 --> 00:18:45,409
I want you to read or write that same

438
00:18:41,390 --> 00:18:48,259
thing to tour from the file and this is

439
00:18:45,410 --> 00:18:51,950
a kind of depending on the circumstance

440
00:18:48,259 --> 00:18:53,420
it's I don't like this let's for this

441
00:18:51,950 --> 00:18:57,710
way I don't think memory map files are a

442
00:18:53,420 --> 00:19:00,830
good idea pretty much ever but they do

443
00:18:57,710 --> 00:19:02,690
have some nice properties one of them is

444
00:19:00,829 --> 00:19:04,009
they behave better with the virtual

445
00:19:02,690 --> 00:19:07,220
memory system in an oversubscription

446
00:19:04,009 --> 00:19:08,779
scenario and voila bye I don't like

447
00:19:07,220 --> 00:19:14,210
memory mapped files I think they're bad

448
00:19:08,779 --> 00:19:18,379
idea that's it memory mapped files are

449
00:19:14,210 --> 00:19:21,980
are basically a way of assigning a range

450
00:19:18,380 --> 00:19:27,010
of memory to a range of bytes on the

451
00:19:21,980 --> 00:19:30,230
drive right and if you only have a

452
00:19:27,009 --> 00:19:33,079
32-bit address space for your memory it

453
00:19:30,230 --> 00:19:37,370
means you can only have a 32-bit sized

454
00:19:33,079 --> 00:19:39,558
file right so for example if I was on

455
00:19:37,369 --> 00:19:43,399
x86 remember because there's two types

456
00:19:39,558 --> 00:19:45,170
of processors there's x64 and x86 two

457
00:19:43,400 --> 00:19:48,530
types of processor architectures at play

458
00:19:45,170 --> 00:19:51,558
on PC there's the old style which is x86

459
00:19:48,529 --> 00:19:52,710
it can only address a memory in a 32-bit

460
00:19:51,558 --> 00:19:55,889
fashion

461
00:19:52,710 --> 00:19:58,169
barring some large extensions blah blah

462
00:19:55,890 --> 00:19:59,899
blah blah but for the most part you're

463
00:19:58,169 --> 00:20:04,169
practically talking about 30 outer space

464
00:19:59,898 --> 00:20:06,808
x64 can access 64-bit address space all

465
00:20:04,169 --> 00:20:09,210
right so what that means is that older

466
00:20:06,808 --> 00:20:13,200
computers which are running x86 they

467
00:20:09,210 --> 00:20:15,630
don't have 64 bits of addressable memory

468
00:20:13,200 --> 00:20:17,340
space and again this has nothing to do

469
00:20:15,630 --> 00:20:19,528
with how much memory is actually in the

470
00:20:17,339 --> 00:20:22,199
system I'm just talking about the range

471
00:20:19,528 --> 00:20:25,409
of addresses that they can talk about

472
00:20:22,200 --> 00:20:26,909
right because you know remember there's

473
00:20:25,409 --> 00:20:28,559
the concept of a pointer we use them all

474
00:20:26,909 --> 00:20:30,740
the time on handmade hero they point to

475
00:20:28,558 --> 00:20:33,960
a particular place in memory right if

476
00:20:30,740 --> 00:20:37,649
that pointer is 32 bits which it is on

477
00:20:33,960 --> 00:20:39,210
x86 then it can only look at 32 bits

478
00:20:37,648 --> 00:20:41,579
worth of address space doesn't matter

479
00:20:39,210 --> 00:20:44,880
there could be 16 gigabytes of memory in

480
00:20:41,579 --> 00:20:46,829
the system it any given application only

481
00:20:44,880 --> 00:20:48,809
has the ability in its virtual address

482
00:20:46,829 --> 00:20:53,879
space to talk about 32 bits which is 4

483
00:20:48,808 --> 00:20:55,200
gigabytes that's it right so what that

484
00:20:53,880 --> 00:20:56,370
means is no matter how much member you

485
00:20:55,200 --> 00:20:58,679
pile into the machine or how much

486
00:20:56,369 --> 00:21:01,319
virtual at memory you've set up your

487
00:20:58,679 --> 00:21:02,669
system to use on x86 you can only have

488
00:21:01,319 --> 00:21:06,778
32 bits worth of address space which

489
00:21:02,669 --> 00:21:09,000
means that any file larger than 4

490
00:21:06,778 --> 00:21:11,130
gigabytes can't even be mapped into

491
00:21:09,000 --> 00:21:12,990
memory if you used all the memory of the

492
00:21:11,130 --> 00:21:15,480
machine sorry not all the members in all

493
00:21:12,990 --> 00:21:17,009
the address space of the machine you

494
00:21:15,480 --> 00:21:18,990
couldn't even map it into memory you

495
00:21:17,009 --> 00:21:21,179
couldn't even do it right which puts a

496
00:21:18,990 --> 00:21:25,079
hard limit of 4 gigabytes on any file

497
00:21:21,179 --> 00:21:27,269
you might push through this API but the

498
00:21:25,079 --> 00:21:28,980
actual practical situation is even worse

499
00:21:27,269 --> 00:21:31,369
than that because obviously you can't

500
00:21:28,980 --> 00:21:33,839
use one hundred percent of the memory

501
00:21:31,369 --> 00:21:35,069
range of your application because if you

502
00:21:33,839 --> 00:21:37,199
did there be no room for anything else

503
00:21:35,069 --> 00:21:38,639
so mapping afford to go bite file would

504
00:21:37,200 --> 00:21:40,319
literally take up the entire address

505
00:21:38,640 --> 00:21:42,990
space that your memory could that your

506
00:21:40,319 --> 00:21:45,058
application could talk about right every

507
00:21:42,990 --> 00:21:46,980
every single pointer would now point

508
00:21:45,058 --> 00:21:49,259
into the file you could not point into

509
00:21:46,980 --> 00:21:50,700
any of your own memory at all you could

510
00:21:49,259 --> 00:21:51,990
never even allocate a block of memory

511
00:21:50,700 --> 00:21:54,120
because there'd be no way to tell you

512
00:21:51,990 --> 00:21:57,058
where it was because every possible

513
00:21:54,119 --> 00:21:58,319
pointer all possible pointers in 32 bits

514
00:21:57,058 --> 00:22:00,990
are all pointing to somewhere in the

515
00:21:58,319 --> 00:22:02,759
file so in reality obviously it's less

516
00:22:00,990 --> 00:22:05,190
than 4 gigabytes it's for goodbyes minus

517
00:22:02,759 --> 00:22:06,089
however much memory you need right so

518
00:22:05,190 --> 00:22:07,558
it's it's

519
00:22:06,089 --> 00:22:09,509
it's minus the memory you need that's

520
00:22:07,558 --> 00:22:13,230
how big the file is but it's worse than

521
00:22:09,509 --> 00:22:15,179
that because not only does all the

522
00:22:13,230 --> 00:22:17,400
memory you need have to be accounted for

523
00:22:15,179 --> 00:22:21,929
all the memory the operating system

524
00:22:17,400 --> 00:22:24,538
might need to use on your behalf also

525
00:22:21,929 --> 00:22:31,798
has to be taken out and that's not even

526
00:22:24,538 --> 00:22:34,980
really all that negotiable because the

527
00:22:31,798 --> 00:22:37,589
way that Windows works is at startup for

528
00:22:34,980 --> 00:22:40,528
the most part it partitions the memory

529
00:22:37,589 --> 00:22:42,028
space in half and says the top two

530
00:22:40,528 --> 00:22:43,648
gigabytes will be used for the system

531
00:22:42,028 --> 00:22:46,019
the bottom two gigabytes will be used

532
00:22:43,648 --> 00:22:48,389
for the application of the four gigabyte

533
00:22:46,019 --> 00:22:53,099
address space that's 32 that for 32-bit

534
00:22:48,390 --> 00:22:55,500
x86 okay and so what that means is you

535
00:22:53,099 --> 00:22:57,418
start off with only two gigabytes to

536
00:22:55,500 --> 00:22:58,890
begin with because the other two

537
00:22:57,419 --> 00:23:00,870
gigabytes are used for all sorts of

538
00:22:58,890 --> 00:23:02,610
operating system mapping now again I

539
00:23:00,869 --> 00:23:04,469
want to underscore that this is the

540
00:23:02,609 --> 00:23:05,879
applications virtual memory space

541
00:23:04,470 --> 00:23:07,308
remember you talked a lot about this in

542
00:23:05,880 --> 00:23:10,039
the early days but in case you forgot

543
00:23:07,308 --> 00:23:13,950
virtual memory is what your program

544
00:23:10,038 --> 00:23:17,099
talks about the memory as being right

545
00:23:13,950 --> 00:23:18,750
when you say I want a dress whatever

546
00:23:17,099 --> 00:23:20,668
some random pointer when you hold up

547
00:23:18,750 --> 00:23:23,940
that pointer and say I want this address

548
00:23:20,669 --> 00:23:26,520
that's what you mean now remember it

549
00:23:23,940 --> 00:23:29,340
goes through a remapping table that the

550
00:23:26,519 --> 00:23:30,720
operating system sets up in the CPU it

551
00:23:29,339 --> 00:23:32,548
goes to remapping people to get the

552
00:23:30,720 --> 00:23:33,808
physical memory so we're not so my

553
00:23:32,548 --> 00:23:35,519
physical memory and again you can have

554
00:23:33,808 --> 00:23:37,139
more physical memory and x86 machine

555
00:23:35,519 --> 00:23:39,418
could have more physical memory in it in

556
00:23:37,140 --> 00:23:40,710
theory I don't know if if that sort of

557
00:23:39,419 --> 00:23:42,630
thing ever actually got built I don't

558
00:23:40,710 --> 00:23:44,340
think it does but you know in theory

559
00:23:42,630 --> 00:23:46,230
there could be a lot more physical

560
00:23:44,339 --> 00:23:48,599
memory in the machine and you could like

561
00:23:46,230 --> 00:23:50,788
maybe map each Bank to a different

562
00:23:48,599 --> 00:23:52,079
processor and use some kind of segments

563
00:23:50,788 --> 00:23:53,669
so I mean I don't know if the x86

564
00:23:52,079 --> 00:23:55,379
architecture even allowed that I don't

565
00:23:53,669 --> 00:23:57,390
remember because it was never a

566
00:23:55,380 --> 00:23:58,950
practical issue that I ever addressed so

567
00:23:57,390 --> 00:24:00,509
I don't know but point being we're not

568
00:23:58,950 --> 00:24:02,130
even talking about physical memory we're

569
00:24:00,509 --> 00:24:03,629
just talking about the address space

570
00:24:02,130 --> 00:24:06,750
right we're just talking about the

571
00:24:03,630 --> 00:24:09,149
address space that your program uses to

572
00:24:06,750 --> 00:24:11,099
articulate what it wants to do okay and

573
00:24:09,148 --> 00:24:13,319
that address space is partitioned into

574
00:24:11,099 --> 00:24:15,509
two gigs two gigs and so what happens in

575
00:24:13,319 --> 00:24:17,519
that upper two gigs here well this is

576
00:24:15,509 --> 00:24:19,500
where like hardware stuff gets mapped in

577
00:24:17,519 --> 00:24:21,420
like for example there's range

578
00:24:19,500 --> 00:24:23,880
this that are used for mapping like how

579
00:24:21,420 --> 00:24:25,950
we talked to the GPU so it backs memory

580
00:24:23,880 --> 00:24:28,320
that's like across the PCI bus sometimes

581
00:24:25,950 --> 00:24:30,809
it has all the stuff like file handles

582
00:24:28,319 --> 00:24:32,849
that you have open it has the code for

583
00:24:30,809 --> 00:24:34,049
the kernel that you can call into like

584
00:24:32,849 --> 00:24:35,909
all the api's you can call to all the

585
00:24:34,049 --> 00:24:40,589
dll's that are mapped they all go in

586
00:24:35,910 --> 00:24:43,019
there right so everything is is even

587
00:24:40,589 --> 00:24:44,759
worse than this picture might might make

588
00:24:43,019 --> 00:24:48,299
it out to be you actually have two good

589
00:24:44,759 --> 00:24:52,109
bites now there was a way on on Windows

590
00:24:48,299 --> 00:24:57,329
if the user wanted to the user could run

591
00:24:52,109 --> 00:25:01,079
windows in what was called a 3gb mode I

592
00:24:57,329 --> 00:25:03,059
think it was called 3gb mode so called

593
00:25:01,079 --> 00:25:04,889
because if you started the kernel with

594
00:25:03,059 --> 00:25:07,049
the kernel parameter / 3 GB which you

595
00:25:04,890 --> 00:25:09,300
could do by by changing the way windows

596
00:25:07,049 --> 00:25:11,849
boot loaded worked if it's a long story

597
00:25:09,299 --> 00:25:15,690
doesn't even matter but point being a

598
00:25:11,849 --> 00:25:18,109
user could boot their machine in a way

599
00:25:15,690 --> 00:25:21,539
that actually had oh dear what did I do

600
00:25:18,109 --> 00:25:23,789
what have I done I've zoomed this there

601
00:25:21,539 --> 00:25:25,920
we go a user could boot their machine in

602
00:25:23,789 --> 00:25:27,329
a way that did not look like this that

603
00:25:25,920 --> 00:25:29,310
would actually make it look like this

604
00:25:27,329 --> 00:25:31,859
where there'd be three gigabytes and one

605
00:25:29,309 --> 00:25:34,169
gigabyte so the system took less space

606
00:25:31,859 --> 00:25:36,000
and the users application each

607
00:25:34,170 --> 00:25:38,160
application could talk about three

608
00:25:36,000 --> 00:25:40,410
gigabytes instead of two gigabytes right

609
00:25:38,160 --> 00:25:45,390
so that was pretty handy that's like a

610
00:25:40,410 --> 00:25:46,950
real nice thing right and so you could

611
00:25:45,390 --> 00:25:48,420
do that but the user ID yep so you can't

612
00:25:46,950 --> 00:25:49,500
ship an application that relies on that

613
00:25:48,420 --> 00:25:51,570
because most users wouldn't even know

614
00:25:49,500 --> 00:25:53,789
how to add the 3 GB switch to the

615
00:25:51,569 --> 00:25:55,259
colonel boot so forget about that so you

616
00:25:53,789 --> 00:25:57,389
have to assume you can only run in that

617
00:25:55,259 --> 00:25:59,670
two gigabytes so again that puts the

618
00:25:57,390 --> 00:26:03,240
practical limitations on how big of a

619
00:25:59,670 --> 00:26:05,279
file you could map very small think you

620
00:26:03,240 --> 00:26:08,940
know significant less than 2 gigabytes

621
00:26:05,279 --> 00:26:11,670
right now let's say one more thing about

622
00:26:08,940 --> 00:26:13,680
that so in addition to all of these

623
00:26:11,670 --> 00:26:15,480
other nasty nas's there's one more thing

624
00:26:13,680 --> 00:26:18,840
that makes the two gig thing a problem

625
00:26:15,480 --> 00:26:21,599
is that even if you somehow took almost

626
00:26:18,839 --> 00:26:24,209
no memory so you could use the whole two

627
00:26:21,599 --> 00:26:27,719
gigabytes of your memory for actually

628
00:26:24,210 --> 00:26:30,120
doing that memory map file it still

629
00:26:27,720 --> 00:26:33,389
might not work because if you don't take

630
00:26:30,119 --> 00:26:35,128
absolute care not to like

631
00:26:33,388 --> 00:26:39,088
accidentally allocate out of the middle

632
00:26:35,128 --> 00:26:41,248
of this or something right then that

633
00:26:39,088 --> 00:26:44,700
memory map that file memory map it has

634
00:26:41,249 --> 00:26:46,769
to be contiguous so the actual amount of

635
00:26:44,700 --> 00:26:48,419
file mapping you can do in a 2 gigabyte

636
00:26:46,769 --> 00:26:51,149
aerospace depends on the largest

637
00:26:48,419 --> 00:26:53,879
contiguous free section so for example

638
00:26:51,148 --> 00:26:56,308
if this was right at the one gigabyte

639
00:26:53,878 --> 00:26:58,228
mark then and where I like accidentally

640
00:26:56,308 --> 00:27:00,479
allocated some memory there to run the

641
00:26:58,229 --> 00:27:01,950
game or whatever then it actually only

642
00:27:00,479 --> 00:27:03,899
be one gigabyte free here and one

643
00:27:01,950 --> 00:27:05,609
gigabyte free here which would mean well

644
00:27:03,898 --> 00:27:06,569
unless both will be less because there's

645
00:27:05,608 --> 00:27:08,878
some memory take down the middle but

646
00:27:06,569 --> 00:27:10,678
approximately 1 gigabyte right at that

647
00:27:08,878 --> 00:27:13,319
point I've just cut the size that I can

648
00:27:10,679 --> 00:27:16,440
map a file in half even if I've only

649
00:27:13,319 --> 00:27:18,178
taken like 4k to run my game the size of

650
00:27:16,440 --> 00:27:20,729
the file I could map is cut in half

651
00:27:18,179 --> 00:27:24,269
right in practice is going to be way

652
00:27:20,729 --> 00:27:27,028
worse than that so you know again that's

653
00:27:24,269 --> 00:27:28,909
a very practical API limitation you

654
00:27:27,028 --> 00:27:32,098
don't have to worry about it so much in

655
00:27:28,909 --> 00:27:33,419
64 bit because again since we're not

656
00:27:32,098 --> 00:27:34,798
actually talking about physical memory

657
00:27:33,419 --> 00:27:38,549
here we're talking about virtual memory

658
00:27:34,798 --> 00:27:44,249
you can map a file that's much larger in

659
00:27:38,548 --> 00:27:47,548
64 bit windows because when the opportu

660
00:27:44,249 --> 00:27:49,709
some memory maps of file it's strictly

661
00:27:47,548 --> 00:27:51,118
reserving the address range and saying

662
00:27:49,709 --> 00:27:52,349
anything in this address range if

663
00:27:51,118 --> 00:27:53,638
someone tries to touch it I'm going to

664
00:27:52,348 --> 00:27:56,578
go get the part of file I need at that

665
00:27:53,638 --> 00:27:58,319
time right it doesn't go try to load the

666
00:27:56,578 --> 00:28:00,778
whole file actually into memory and

667
00:27:58,319 --> 00:28:02,278
actually use physical memory for it it

668
00:28:00,778 --> 00:28:05,548
will actually just leave it as sort of

669
00:28:02,278 --> 00:28:07,348
conceptually mapped right it'll put it

670
00:28:05,548 --> 00:28:09,388
in the mapping tables that it uses to

671
00:28:07,348 --> 00:28:10,528
keep track of everything is but it won't

672
00:28:09,388 --> 00:28:11,699
actually start pulling things into

673
00:28:10,528 --> 00:28:15,028
physical memory until it actually needs

674
00:28:11,700 --> 00:28:16,950
to and it won't over subscribe so if you

675
00:28:15,028 --> 00:28:19,019
start pulling in other stuff it'll page

676
00:28:16,950 --> 00:28:23,190
out part of the file you'll just you

677
00:28:19,019 --> 00:28:25,169
know ungettable memory for some other

678
00:28:23,190 --> 00:28:27,119
part of the file so at the end of the

679
00:28:25,169 --> 00:28:29,999
day you can map very large files in

680
00:28:27,118 --> 00:28:30,838
64-bit windows because you only have to

681
00:28:29,999 --> 00:28:34,618
make sure that you have enough

682
00:28:30,838 --> 00:28:36,778
contiguous virtual memory you know space

683
00:28:34,618 --> 00:28:39,538
to map it and with 64 bits of address

684
00:28:36,778 --> 00:28:42,148
space that is huge swathes you know

685
00:28:39,538 --> 00:28:43,648
available right so you could probably I

686
00:28:42,148 --> 00:28:46,209
mean I've never tribe you could probably

687
00:28:43,648 --> 00:28:48,729
map a one terabyte file and

688
00:28:46,210 --> 00:28:50,590
did be fine because there's going to be

689
00:28:48,730 --> 00:28:52,930
a giant space somewhere in the 64-bit

690
00:28:50,589 --> 00:28:55,059
address space that can support one

691
00:28:52,930 --> 00:28:57,580
terabyte remember one terabytes only you

692
00:28:55,059 --> 00:29:01,690
know a few bits above 32 right so it's

693
00:28:57,579 --> 00:29:03,809
really not that big a deal for 64-bit so

694
00:29:01,690 --> 00:29:06,150
so hopefully that answers the question

695
00:29:03,809 --> 00:29:09,690
and let me take a look and see if we've

696
00:29:06,150 --> 00:29:19,990
gotten any other q's queued up here at

697
00:29:09,690 --> 00:29:21,970
sea let's see um you know what I didn't

698
00:29:19,990 --> 00:29:25,960
know if I set the scroll back did I set

699
00:29:21,970 --> 00:29:28,900
the scroll back and how do you kind of

700
00:29:25,960 --> 00:29:31,900
say I want to remember everything like

701
00:29:28,900 --> 00:29:33,519
infinite scroll back here we go scroll

702
00:29:31,900 --> 00:29:36,040
back lines can I set scroll back lines

703
00:29:33,519 --> 00:29:37,930
to infinite can I set it to zero or

704
00:29:36,039 --> 00:29:41,460
something and have it be infinite does

705
00:29:37,930 --> 00:29:41,460
that work I don't even know if it does

706
00:29:44,009 --> 00:29:47,009
man

707
00:29:48,509 --> 00:29:59,640
I'm not sure oh sounds alerts general

708
00:29:57,160 --> 00:30:08,400
colors color switcher I don't even know

709
00:29:59,640 --> 00:30:08,400
what am I looking at I have no idea I

710
00:30:09,150 --> 00:30:14,700
don't know so I don't know if this

711
00:30:11,200 --> 00:30:14,700
thing's working or not I have no idea

712
00:30:14,849 --> 00:30:23,439
let's see all right question is there

713
00:30:21,579 --> 00:30:25,089
any way to reverse engineer a pack file

714
00:30:23,440 --> 00:30:29,200
and figure out how its laid out like

715
00:30:25,089 --> 00:30:31,329
resident evil md1 files in PSX sure yeah

716
00:30:29,200 --> 00:30:32,650
there's lots of ways and I'm the wrong

717
00:30:31,329 --> 00:30:33,730
one to ask about like the tick some

718
00:30:32,650 --> 00:30:36,519
tricks for that because I don't really

719
00:30:33,730 --> 00:30:38,919
do a lot of that but yeah if you want to

720
00:30:36,519 --> 00:30:46,089
reverse-engineer a file then typically

721
00:30:38,919 --> 00:30:50,380
what ends up happening is typically ones

722
00:30:46,089 --> 00:30:52,449
up happening is the you start to try and

723
00:30:50,380 --> 00:30:54,970
piece through the binary data to look

724
00:30:52,450 --> 00:30:56,650
for things that you recognize like

725
00:30:54,970 --> 00:30:59,079
things that might be the counts of

726
00:30:56,650 --> 00:31:01,600
something or things that look like a

727
00:30:59,079 --> 00:31:03,428
particular type of data like zipped data

728
00:31:01,599 --> 00:31:05,409
like something's been zip compressed or

729
00:31:03,429 --> 00:31:08,470
something that looks like a texture in

730
00:31:05,410 --> 00:31:10,298
txt format or who knows what right so

731
00:31:08,470 --> 00:31:12,339
you do stuff like that and you can try

732
00:31:10,298 --> 00:31:14,230
to reverse-engineer it the harder core

733
00:31:12,339 --> 00:31:15,490
reverse engineering I'm assuming and

734
00:31:14,230 --> 00:31:17,349
don't really know but I'm assuming the

735
00:31:15,490 --> 00:31:23,169
harder course engineering tends to be

736
00:31:17,349 --> 00:31:25,240
more um that you that the the people

737
00:31:23,169 --> 00:31:28,210
disassemble and step through the actual

738
00:31:25,240 --> 00:31:30,370
code of the game and look at how it

739
00:31:28,210 --> 00:31:31,929
loads it in because then you can see

740
00:31:30,369 --> 00:31:33,308
what sort of stuff it does like how it

741
00:31:31,929 --> 00:31:35,620
decompresses it and how it jumps around

742
00:31:33,308 --> 00:31:37,599
so I suspect that there's a fair bit of

743
00:31:35,619 --> 00:31:41,048
like looking at the game code as well in

744
00:31:37,599 --> 00:31:42,459
two to do more advanced file formats but

745
00:31:41,048 --> 00:31:46,298
yes people absolutely do this all the

746
00:31:42,460 --> 00:31:48,279
time I don't but you know it's it's

747
00:31:46,298 --> 00:31:53,048
certainly a straightforward process but

748
00:31:48,279 --> 00:31:54,399
it's a bit tedious Cuba Caleb why do you

749
00:31:53,048 --> 00:31:56,710
think that Mary map files are bad idea

750
00:31:54,400 --> 00:31:58,600
because you have very little control of

751
00:31:56,710 --> 00:31:59,788
how they are overlapped and when they're

752
00:31:58,599 --> 00:32:02,428
issued in terms of

753
00:31:59,788 --> 00:32:05,220
when they read from any Victor the file

754
00:32:02,429 --> 00:32:06,809
and so I just don't feel like it's a

755
00:32:05,220 --> 00:32:11,608
good performance oriented programming

756
00:32:06,808 --> 00:32:14,220
practice to memory map of file the GL 0

757
00:32:11,608 --> 00:32:17,548
to stream allows to patch files instead

758
00:32:14,220 --> 00:32:19,649
of overwrite them Otis team so could one

759
00:32:17,548 --> 00:32:21,239
patch the one data file having an update

760
00:32:19,648 --> 00:32:28,079
that is not a practically full reinstall

761
00:32:21,239 --> 00:32:32,479
yes as far as I know there are so I

762
00:32:28,079 --> 00:32:37,589
believe steam just works there are other

763
00:32:32,479 --> 00:32:38,639
sometimes people make mistakes platform

764
00:32:37,589 --> 00:32:42,259
vendors make mistakes and they do

765
00:32:38,638 --> 00:32:46,378
something stupid and at the risk of

766
00:32:42,259 --> 00:32:48,868
being overly opaque here I'll simply say

767
00:32:46,378 --> 00:32:51,839
that I know that people have made

768
00:32:48,868 --> 00:32:55,079
mistakes of the form they encrypt the

769
00:32:51,839 --> 00:32:58,769
data that apps install because the

770
00:32:55,079 --> 00:33:00,269
platform has drm or whatever and they

771
00:32:58,769 --> 00:33:02,159
forgot about the fact that once you

772
00:33:00,269 --> 00:33:05,399
encrypt something it becomes unpatch

773
00:33:02,159 --> 00:33:07,440
abell because an encrypted thing all the

774
00:33:05,398 --> 00:33:12,178
bitstream depends on everything that

775
00:33:07,440 --> 00:33:15,179
that's downstream from it right so if

776
00:33:12,179 --> 00:33:18,119
you if you have a platform that encrypts

777
00:33:15,179 --> 00:33:20,278
files opaquely to you then you can't

778
00:33:18,118 --> 00:33:22,858
patch anymore and everything's to

779
00:33:20,278 --> 00:33:25,679
reinstall so that has happened in the

780
00:33:22,858 --> 00:33:28,638
past more than once I believe and so

781
00:33:25,679 --> 00:33:32,009
some platforms really screw that up but

782
00:33:28,638 --> 00:33:35,308
but I don't think steam is one of them I

783
00:33:32,009 --> 00:33:36,899
don't know this the game at Molly rocket

784
00:33:35,308 --> 00:33:40,079
will be the first steam release that

785
00:33:36,898 --> 00:33:41,459
that I'll have been directly doing

786
00:33:40,079 --> 00:33:43,108
myself and so at that point I'll have

787
00:33:41,460 --> 00:33:45,269
maybe I haven't looked at it myself yet

788
00:33:43,108 --> 00:33:46,829
but that'll be the first time I really

789
00:33:45,269 --> 00:33:47,909
have to think about how steam what's

790
00:33:46,829 --> 00:33:51,558
team does and whether there's anything

791
00:33:47,909 --> 00:33:51,559
particularly important I need to know

792
00:33:52,788 --> 00:33:58,528
Elvin any ideas or thoughts about those

793
00:33:55,470 --> 00:34:00,329
anti piracy ideas I'll stop you right

794
00:33:58,528 --> 00:34:03,479
there and I'll just say I don't like

795
00:34:00,329 --> 00:34:07,319
anti piracy full stop I think they're

796
00:34:03,479 --> 00:34:09,510
just plain bad i don't like game piracy

797
00:34:07,319 --> 00:34:13,049
obviously i don't like the fact that

798
00:34:09,510 --> 00:34:15,270
people you know

799
00:34:13,050 --> 00:34:19,130
don't participate in the market properly

800
00:34:15,269 --> 00:34:21,750
and they basically like get you know

801
00:34:19,130 --> 00:34:22,800
it's basically like someone who it's the

802
00:34:21,750 --> 00:34:25,889
people who go to the restaurant and

803
00:34:22,800 --> 00:34:28,580
don't tip right it's like you you're

804
00:34:25,889 --> 00:34:31,199
forcing everyone else to subsidize your

805
00:34:28,579 --> 00:34:32,730
purchases right because you won't pay

806
00:34:31,199 --> 00:34:34,589
for the game so now everyone else has to

807
00:34:32,730 --> 00:34:36,599
pay more for the game right because if

808
00:34:34,590 --> 00:34:39,120
everyone actually paid for the game who

809
00:34:36,599 --> 00:34:42,239
played it then games could be a lot

810
00:34:39,119 --> 00:34:44,009
cheaper and even more importantly than

811
00:34:42,239 --> 00:34:47,069
that some games that didn't sell enough

812
00:34:44,010 --> 00:34:48,960
copies right now to actually be viable

813
00:34:47,070 --> 00:34:50,700
or you have the budgets that they had

814
00:34:48,960 --> 00:34:53,940
wood and those are very important things

815
00:34:50,699 --> 00:34:55,649
so I really hate game piracy or just

816
00:34:53,940 --> 00:34:58,349
software piracy in general but at the

817
00:34:55,650 --> 00:35:02,160
same time I don't think that the right

818
00:34:58,349 --> 00:35:03,599
solution to that is anti-piracy drm and

819
00:35:02,159 --> 00:35:06,029
the reason for that is because it

820
00:35:03,599 --> 00:35:07,949
creates some very serious problems it

821
00:35:06,030 --> 00:35:11,269
means that users have a hard time

822
00:35:07,949 --> 00:35:13,500
maintaining their game collection right

823
00:35:11,269 --> 00:35:15,210
you know you end up with a disk you

824
00:35:13,500 --> 00:35:16,829
can't even you bought grand theft auto

825
00:35:15,210 --> 00:35:18,480
on the Xbox and now you'll never be able

826
00:35:16,829 --> 00:35:20,730
to play that again you have to go buy it

827
00:35:18,480 --> 00:35:22,349
again right and now you're actually

828
00:35:20,730 --> 00:35:24,179
you're being taken advantage of you were

829
00:35:22,349 --> 00:35:27,299
trying to participate in a market fairly

830
00:35:24,179 --> 00:35:29,069
and pay the developers for what they did

831
00:35:27,300 --> 00:35:31,350
and now you're actually being penalized

832
00:35:29,070 --> 00:35:33,890
because you know you've been given a

833
00:35:31,349 --> 00:35:36,960
copy that you can't run anymore right

834
00:35:33,889 --> 00:35:39,690
and furthermore the same is true for

835
00:35:36,960 --> 00:35:41,550
like people who find if their game

836
00:35:39,690 --> 00:35:42,630
doesn't run because the drm doesn't work

837
00:35:41,550 --> 00:35:44,550
on their system or something like this

838
00:35:42,630 --> 00:35:46,230
which happens all the time it also

839
00:35:44,550 --> 00:35:48,170
creates a problem for preservation it

840
00:35:46,230 --> 00:35:50,610
means that it's harder for a museum or

841
00:35:48,170 --> 00:35:52,530
archive.org or someone like this to

842
00:35:50,610 --> 00:35:54,599
maintain a running copy of this game for

843
00:35:52,530 --> 00:35:58,260
posterity and all those things I think

844
00:35:54,599 --> 00:36:00,719
are really bad so I have no nothing to

845
00:35:58,260 --> 00:36:02,580
say about anti-piracy ideas that people

846
00:36:00,719 --> 00:36:04,849
have other than their stupid and don't

847
00:36:02,579 --> 00:36:04,849
do them

848
00:36:20,030 --> 00:36:24,000
long billion I've been thinking about

849
00:36:22,170 --> 00:36:25,920
how to implement water reflections in a

850
00:36:24,000 --> 00:36:29,099
top-down 2-d game what do you think

851
00:36:25,920 --> 00:36:32,670
about using render layers like bottom to

852
00:36:29,099 --> 00:36:36,299
top water reflection land shadows object

853
00:36:32,670 --> 00:36:40,740
things then combining the layers I mean

854
00:36:36,300 --> 00:36:42,690
it seems fine but you know it's hard to

855
00:36:40,739 --> 00:36:44,279
talk in abstractions about something as

856
00:36:42,690 --> 00:36:51,030
specific as how to render water

857
00:36:44,280 --> 00:36:54,119
reflections you know captain craft do

858
00:36:51,030 --> 00:36:55,830
you have any idea what do you have any

859
00:36:54,119 --> 00:36:57,769
idea for hardware architecture design

860
00:36:55,829 --> 00:37:01,769
that could improve performance for games

861
00:36:57,769 --> 00:37:05,579
not really because I am not really a

862
00:37:01,769 --> 00:37:08,099
hardware guy so I mean I you know I like

863
00:37:05,579 --> 00:37:10,289
i said i have api i I feel like there's

864
00:37:08,099 --> 00:37:12,569
some things I can say about API design

865
00:37:10,289 --> 00:37:13,860
that are like this is good for

866
00:37:12,570 --> 00:37:16,110
performance this is good for longevity

867
00:37:13,860 --> 00:37:18,090
in terms of the interface between the

868
00:37:16,110 --> 00:37:20,910
software and the hardware but once you

869
00:37:18,090 --> 00:37:22,559
get into the hardware that I think is

870
00:37:20,909 --> 00:37:24,809
just I don't have enough experience with

871
00:37:22,559 --> 00:37:27,900
hardware to have any opinions that are

872
00:37:24,809 --> 00:37:30,210
worth anything you know I just don't

873
00:37:27,900 --> 00:37:33,570
know the realities of when you implement

874
00:37:30,210 --> 00:37:34,949
something on silicon I just don't know

875
00:37:33,570 --> 00:37:38,490
everything that's involved arrived very

876
00:37:34,949 --> 00:37:39,868
cursory knowledge of it and so I feel

877
00:37:38,489 --> 00:37:41,339
like my opinions on how you would

878
00:37:39,869 --> 00:37:43,590
improve performance for games and

879
00:37:41,340 --> 00:37:44,970
hardware are I mean into some to some

880
00:37:43,590 --> 00:37:47,190
extent they're almost non-existent I

881
00:37:44,969 --> 00:37:49,469
don't know what the current performance

882
00:37:47,190 --> 00:37:53,400
problems are you know like I mean I

883
00:37:49,469 --> 00:37:54,899
don't know what actually is the biggest

884
00:37:53,400 --> 00:37:56,730
bottleneck for example in a modern

885
00:37:54,900 --> 00:37:58,410
hardware part I sometimes maybe know

886
00:37:56,730 --> 00:38:00,449
that somebody at Intel or somebody in

887
00:37:58,409 --> 00:38:02,460
the video or somebody might have told me

888
00:38:00,449 --> 00:38:05,069
that they think something is this and

889
00:38:02,460 --> 00:38:06,960
but that's just hearsay I mean I have no

890
00:38:05,070 --> 00:38:08,130
opinion my own opinion about this was a

891
00:38:06,960 --> 00:38:10,199
bad luck or whatever you know maybe that

892
00:38:08,130 --> 00:38:11,608
person is wrong or maybe you know

893
00:38:10,199 --> 00:38:15,239
they're misguided or maybe that's not

894
00:38:11,608 --> 00:38:17,460
the whole story so so I I don't know so

895
00:38:15,239 --> 00:38:18,629
I i pretty much only deal with software

896
00:38:17,460 --> 00:38:20,190
and the software at a hardware interface

897
00:38:18,630 --> 00:38:21,900
I have some I things on because I've

898
00:38:20,190 --> 00:38:24,510
seen enough of that and I have a fairly

899
00:38:21,900 --> 00:38:27,450
good idea of what that sort of ends up

900
00:38:24,510 --> 00:38:30,510
looking like at the Harbor substrate

901
00:38:27,449 --> 00:38:32,309
level but I below that it's I just have

902
00:38:30,510 --> 00:38:33,310
to trust that when a hardware vendor

903
00:38:32,309 --> 00:38:35,679
tells me something that there

904
00:38:33,309 --> 00:38:44,049
just making it up because I I don't know

905
00:38:35,679 --> 00:38:45,699
and can't verify snov in 92 under

906
00:38:44,050 --> 00:38:47,560
development and before the release of

907
00:38:45,699 --> 00:38:48,909
the pc game are there good practices for

908
00:38:47,559 --> 00:38:50,650
making sure that a game will work on end

909
00:38:48,909 --> 00:38:56,769
user's machine and not get bugs caused

910
00:38:50,650 --> 00:39:00,220
by users hardware no not really so i can

911
00:38:56,769 --> 00:39:02,679
say that at least one thing for us at

912
00:39:00,219 --> 00:39:05,529
molly is since this is our first release

913
00:39:02,679 --> 00:39:08,139
on our first game release that we're

914
00:39:05,530 --> 00:39:11,560
doing and it's entirely custom the

915
00:39:08,139 --> 00:39:15,309
engine is completely custom we will

916
00:39:11,559 --> 00:39:17,769
almost certainly do early access not for

917
00:39:15,309 --> 00:39:20,500
any other reason then we need the

918
00:39:17,769 --> 00:39:22,989
hardware testing so you know our game

919
00:39:20,500 --> 00:39:24,489
may be completely done but we will

920
00:39:22,989 --> 00:39:27,219
almost certainly still release on early

921
00:39:24,489 --> 00:39:29,079
access to get a certain amount of beta

922
00:39:27,219 --> 00:39:31,269
testing before we officially call it a

923
00:39:29,079 --> 00:39:33,159
release because we're going to need that

924
00:39:31,269 --> 00:39:34,780
now maybe we'll figure out a different

925
00:39:33,159 --> 00:39:37,539
way to do it maybe we'll figure out a

926
00:39:34,780 --> 00:39:39,280
way to test without that but we'll need

927
00:39:37,539 --> 00:39:40,779
something like that we'll need some way

928
00:39:39,280 --> 00:39:43,030
to release something that's a hardware

929
00:39:40,780 --> 00:39:45,370
test that people can run in report bugs

930
00:39:43,030 --> 00:39:47,260
to because we don't want a really be in

931
00:39:45,369 --> 00:39:49,150
a situation where our day one release

932
00:39:47,260 --> 00:39:51,340
has tons of hardware bugs because you

933
00:39:49,150 --> 00:39:52,570
know people's crazy hardware has weird

934
00:39:51,340 --> 00:39:57,430
things we have to work around or

935
00:39:52,570 --> 00:39:58,780
whatever right so yeah I don't have a

936
00:39:57,429 --> 00:40:01,960
good solution that problem the only

937
00:39:58,780 --> 00:40:04,990
thing I think that a indie developer can

938
00:40:01,960 --> 00:40:07,240
really do is release something as a test

939
00:40:04,989 --> 00:40:10,239
whether that's a full early access build

940
00:40:07,239 --> 00:40:12,489
of your game or maybe that's like a

941
00:40:10,239 --> 00:40:14,199
little executable you post for free on

942
00:40:12,489 --> 00:40:15,729
your website that runs basically the

943
00:40:14,199 --> 00:40:16,899
game without the actual game like the

944
00:40:15,730 --> 00:40:19,179
assets aren't there or whatever but it

945
00:40:16,900 --> 00:40:21,190
kind of runs the basic stuff and then

946
00:40:19,179 --> 00:40:22,929
has users like test it and say yes this

947
00:40:21,190 --> 00:40:25,090
work for me or no it didn't so that you

948
00:40:22,929 --> 00:40:27,699
can start to build up that understanding

949
00:40:25,090 --> 00:40:29,620
of where the bugs are so we're going to

950
00:40:27,699 --> 00:40:30,969
try to do something like that and like I

951
00:40:29,619 --> 00:40:33,130
said I don't feel like there's really

952
00:40:30,969 --> 00:40:34,629
any substitute for it at the moment at

953
00:40:33,130 --> 00:40:35,740
least not for any developer maybe if

954
00:40:34,630 --> 00:40:38,170
you're a massive L poor you could just

955
00:40:35,739 --> 00:40:39,969
buy every machine that comes out every

956
00:40:38,170 --> 00:40:41,380
year and spend you know a hundred

957
00:40:39,969 --> 00:40:43,299
thousand dollars a year just buying

958
00:40:41,380 --> 00:40:45,849
computers and have a giant testing lab

959
00:40:43,300 --> 00:40:46,930
and run them but even that I feel like

960
00:40:45,849 --> 00:40:48,219
might not be enough

961
00:40:46,929 --> 00:40:49,058
because it's not always the hardware

962
00:40:48,219 --> 00:40:50,558
that's the buddies can also be the

963
00:40:49,059 --> 00:40:52,030
software like Oh someone installed adobe

964
00:40:50,559 --> 00:40:53,079
acrobat and it's taking twenty-five

965
00:40:52,030 --> 00:40:55,000
percent of the sea for you all the time

966
00:40:53,079 --> 00:40:57,130
and your gain runs really poorly you

967
00:40:55,000 --> 00:40:58,420
need to find that out and you need to be

968
00:40:57,130 --> 00:41:01,329
able to post a thing that's like hey

969
00:40:58,420 --> 00:41:02,858
users if your game is running slowly see

970
00:41:01,329 --> 00:41:04,960
if adobe acrobat is running and kill it

971
00:41:02,858 --> 00:41:06,549
like that's something you couldn't have

972
00:41:04,960 --> 00:41:09,068
known just by testing hardware because

973
00:41:06,550 --> 00:41:11,710
the hardware may be fine but this but

974
00:41:09,068 --> 00:41:13,420
you know the 20,000 Bing toolbars and

975
00:41:11,710 --> 00:41:15,789
the whatever the user has installed a

976
00:41:13,420 --> 00:41:18,010
machine might be the problem and you you

977
00:41:15,789 --> 00:41:19,599
have to find that out to right and

978
00:41:18,010 --> 00:41:29,260
that's not something that a hardware lab

979
00:41:19,599 --> 00:41:31,660
could really tell you pragma script do

980
00:41:29,260 --> 00:41:33,940
you have to go to the steam greenlight

981
00:41:31,659 --> 00:41:36,399
process and steam for your game do you

982
00:41:33,940 --> 00:41:37,929
think it's a good idea we do not have to

983
00:41:36,400 --> 00:41:41,789
go through the street in my process for

984
00:41:37,929 --> 00:41:45,549
our game we already got our game

985
00:41:41,789 --> 00:41:50,050
approved but do I think it's a good idea

986
00:41:45,550 --> 00:41:51,818
I don't know I don't spend a lot of time

987
00:41:50,050 --> 00:41:52,990
on steam greenlight in fact I guess I

988
00:41:51,818 --> 00:41:55,480
don't spend any time at some green light

989
00:41:52,989 --> 00:41:57,159
so I don't know very much about it it

990
00:41:55,480 --> 00:41:58,990
seems to me like valve is pretty

991
00:41:57,159 --> 00:42:01,480
generous with approving games these days

992
00:41:58,989 --> 00:42:03,519
so I feel like Steam greenlight they

993
00:42:01,480 --> 00:42:05,710
accept larger swathes than they used to

994
00:42:03,519 --> 00:42:07,449
so I feel like if you have to go the

995
00:42:05,710 --> 00:42:09,548
green light route to get your game

996
00:42:07,449 --> 00:42:11,529
approved I suspect it's probably a lot

997
00:42:09,548 --> 00:42:12,940
easier now than it used to be just

998
00:42:11,530 --> 00:42:16,569
because they approve a whole lot more

999
00:42:12,940 --> 00:42:18,700
games that said I don't really know much

1000
00:42:16,568 --> 00:42:22,480
about it so I couldn't give you any

1001
00:42:18,699 --> 00:42:24,159
specific advice Gary Johansson if you

1002
00:42:22,480 --> 00:42:25,719
had an easy way to write whatever code

1003
00:42:24,159 --> 00:42:27,489
you wanted on the GPU would you write

1004
00:42:25,719 --> 00:42:32,679
your own renderer and never use open

1005
00:42:27,489 --> 00:42:34,989
jail again yes I would and that's what

1006
00:42:32,679 --> 00:42:37,440
Larabee was supposed to be and I wish

1007
00:42:34,989 --> 00:42:39,578
that project had succeeded but it didn't

1008
00:42:37,440 --> 00:42:41,980
because I would really love to never

1009
00:42:39,579 --> 00:42:43,839
have to use a graphics API again the

1010
00:42:41,980 --> 00:42:46,449
jello so all the huge updates i get to

1011
00:42:43,838 --> 00:42:48,099
see have on steam or dev faults like 35

1012
00:42:46,449 --> 00:42:50,858
gigabytes over 35 gigabytes of clean

1013
00:42:48,099 --> 00:42:53,200
install do you know what was the one

1014
00:42:50,858 --> 00:42:57,058
gigabyte update of TW for i was

1015
00:42:53,199 --> 00:42:57,058
wondering why it was so huge so early um

1016
00:42:57,530 --> 00:43:02,269
so first of all I'll say like I said I

1017
00:43:00,320 --> 00:43:03,650
don't know with all the huge update

1018
00:43:02,269 --> 00:43:05,389
second you could have on seem our

1019
00:43:03,650 --> 00:43:08,480
developers faults they might be but they

1020
00:43:05,389 --> 00:43:10,250
might not be like I said I I just I'll

1021
00:43:08,480 --> 00:43:11,719
have more to say about that once I

1022
00:43:10,250 --> 00:43:16,010
actually look at the actual steam

1023
00:43:11,719 --> 00:43:18,289
distribution stuff but I don't think

1024
00:43:16,010 --> 00:43:20,360
they made any bugs as bad as the one

1025
00:43:18,289 --> 00:43:22,190
that I described where the whole thing

1026
00:43:20,360 --> 00:43:24,950
always has to be updated I think you can

1027
00:43:22,190 --> 00:43:27,289
patch things a little bit more grandly

1028
00:43:24,949 --> 00:43:28,789
than that but I don't know so someday

1029
00:43:27,289 --> 00:43:30,079
I'll I'll have more to say about that

1030
00:43:28,789 --> 00:43:32,840
when I actually have to go through it as

1031
00:43:30,079 --> 00:43:35,539
for the witness the one gigabyte update

1032
00:43:32,840 --> 00:43:38,600
for the witness may actually have been

1033
00:43:35,539 --> 00:43:41,779
legitimate because I think they did a

1034
00:43:38,599 --> 00:43:47,449
ton of video stuff that was actually

1035
00:43:41,780 --> 00:43:49,130
like had to get added in so I think I

1036
00:43:47,449 --> 00:43:50,269
think that may have been love it I but I

1037
00:43:49,130 --> 00:43:52,340
don't know yes asked John I'm not

1038
00:43:50,269 --> 00:43:54,320
involved in that process at all so it

1039
00:43:52,340 --> 00:43:55,820
may it may have been sloppiness it may

1040
00:43:54,320 --> 00:43:58,640
have been legitimate I couldn't tell you

1041
00:43:55,820 --> 00:44:00,620
I don't know I I don't even know yeah I

1042
00:43:58,639 --> 00:44:02,089
have no idea keeper Caleb how do you

1043
00:44:00,619 --> 00:44:03,769
feel about drm schemes like de nouveaux

1044
00:44:02,090 --> 00:44:05,450
that take considera- cpu time during

1045
00:44:03,769 --> 00:44:07,699
gameplay and add two hardest rights

1046
00:44:05,449 --> 00:44:09,889
which is bad for ssds like i said i

1047
00:44:07,699 --> 00:44:12,799
don't have any particular opinions about

1048
00:44:09,889 --> 00:44:15,109
a given DRM scheme I think they are all

1049
00:44:12,800 --> 00:44:17,269
a bad idea it's just dear M is just a

1050
00:44:15,110 --> 00:44:22,370
bad idea I don't like it I don't think

1051
00:44:17,269 --> 00:44:23,960
we should use it elvin I was just

1052
00:44:22,369 --> 00:44:25,639
curious in my question how some games

1053
00:44:23,960 --> 00:44:27,920
know if the player is playing a

1054
00:44:25,639 --> 00:44:29,179
legitimate versus cracked version where

1055
00:44:27,920 --> 00:44:30,619
they cranked the difficulty level and

1056
00:44:29,179 --> 00:44:32,569
make it impossible for a cracked version

1057
00:44:30,619 --> 00:44:37,009
to beat they use some sort of DLL

1058
00:44:32,570 --> 00:44:40,450
versioning signature or dot dot so it

1059
00:44:37,010 --> 00:44:44,870
depends a lot on the particular scheme

1060
00:44:40,449 --> 00:44:47,299
right uh but there's there's tons and

1061
00:44:44,869 --> 00:44:49,880
they date back you know as far back as

1062
00:44:47,300 --> 00:44:54,470
as some of the earliest home computer

1063
00:44:49,880 --> 00:44:58,400
games right so usually what happens is

1064
00:44:54,469 --> 00:45:00,889
they do something which is very hard to

1065
00:44:58,400 --> 00:45:03,740
detect when you disassemble the game and

1066
00:45:00,889 --> 00:45:05,779
takes a long time to find but that what

1067
00:45:03,739 --> 00:45:08,068
is substantively something that you can

1068
00:45:05,780 --> 00:45:10,170
still reverse-engineer around

1069
00:45:08,068 --> 00:45:11,998
and patch because obviously anything

1070
00:45:10,170 --> 00:45:14,190
running on a machine someone can reverse

1071
00:45:11,998 --> 00:45:17,189
engineer and then patch to remove the

1072
00:45:14,190 --> 00:45:19,588
drm so all DRM is breakable in that

1073
00:45:17,190 --> 00:45:21,358
sense because if you don't have hardware

1074
00:45:19,588 --> 00:45:25,528
assistance then there's nothing you can

1075
00:45:21,358 --> 00:45:30,838
do right so usually a good example would

1076
00:45:25,528 --> 00:45:34,228
be lets say the game comes on a well

1077
00:45:30,838 --> 00:45:35,639
let's say the game uses the net for

1078
00:45:34,228 --> 00:45:37,409
example so you have to have internet

1079
00:45:35,639 --> 00:45:40,798
connection to play it and what it might

1080
00:45:37,409 --> 00:45:44,429
do is send out a request to a server and

1081
00:45:40,798 --> 00:45:48,869
those requests are something that you

1082
00:45:44,429 --> 00:45:51,838
know it like a 1k of what appears to be

1083
00:45:48,869 --> 00:45:53,430
random data and the server sends back 1k

1084
00:45:51,838 --> 00:45:56,219
of what appears to be random data and

1085
00:45:53,429 --> 00:45:58,498
the game checks that 1k of rana data to

1086
00:45:56,219 --> 00:45:59,818
see if it's correct right because it has

1087
00:45:58,498 --> 00:46:02,759
some idea of how those things should be

1088
00:45:59,818 --> 00:46:05,369
matched and then assuming that it is it

1089
00:46:02,759 --> 00:46:07,170
continues playing right now obviously

1090
00:46:05,369 --> 00:46:08,699
you can imagine doing this in such a way

1091
00:46:07,170 --> 00:46:10,769
that it would be impossible for any

1092
00:46:08,699 --> 00:46:12,869
attacker to actually know what the 1k

1093
00:46:10,768 --> 00:46:16,169
responses should be right because let's

1094
00:46:12,869 --> 00:46:18,420
say I took something like the 1k I send

1095
00:46:16,170 --> 00:46:20,670
it out like like a public private key

1096
00:46:18,420 --> 00:46:23,670
encryption scheme right so let's say I

1097
00:46:20,670 --> 00:46:25,769
take 1k of data on the client side I

1098
00:46:23,670 --> 00:46:27,989
encrypt it with the private SR with the

1099
00:46:25,768 --> 00:46:29,728
public key for a server I sent to the

1100
00:46:27,989 --> 00:46:33,208
server the server sends me back a

1101
00:46:29,728 --> 00:46:35,879
version right encrypted with a you know

1102
00:46:33,208 --> 00:46:37,198
a different private public key or

1103
00:46:35,880 --> 00:46:39,588
something that I can decrypt with the

1104
00:46:37,199 --> 00:46:45,479
private key or something like that right

1105
00:46:39,588 --> 00:46:47,278
so the client side has two keys in it

1106
00:46:45,478 --> 00:46:49,788
that it can use to encrypt and receive

1107
00:46:47,278 --> 00:46:52,708
things from the server but the two other

1108
00:46:49,789 --> 00:46:54,089
corresponding keys well I guess you

1109
00:46:52,708 --> 00:46:55,409
don't you know you really wouldn't need

1110
00:46:54,088 --> 00:47:00,239
two keys now I think about it you would

1111
00:46:55,409 --> 00:47:03,298
pretty much only need yeah you really to

1112
00:47:00,239 --> 00:47:05,068
be honest you only actually need the one

1113
00:47:03,298 --> 00:47:07,409
key you just need the one coming back

1114
00:47:05,068 --> 00:47:09,329
from the server so i send 1k of random

1115
00:47:07,409 --> 00:47:11,548
data the server encrypts it with its

1116
00:47:09,329 --> 00:47:13,499
private key and sends it back I take my

1117
00:47:11,548 --> 00:47:15,239
public key for the server and I decrypt

1118
00:47:13,498 --> 00:47:18,358
it and I see if it's what I expect if

1119
00:47:15,239 --> 00:47:22,608
it's not I know the user has a is

1120
00:47:18,358 --> 00:47:22,608
cheating or something right

1121
00:47:24,068 --> 00:47:30,018
doesn't have a legitimate account or

1122
00:47:26,179 --> 00:47:32,328
whatever it is right and so in those

1123
00:47:30,018 --> 00:47:34,248
cases right if you start to hack it out

1124
00:47:32,329 --> 00:47:36,559
then typically like if it's really

1125
00:47:34,248 --> 00:47:37,929
trivial and I just do this one check you

1126
00:47:36,559 --> 00:47:42,440
know what let me just throw this out

1127
00:47:37,929 --> 00:47:43,909
because it's really generic so the way

1128
00:47:42,440 --> 00:47:46,639
this generally works right is you have

1129
00:47:43,909 --> 00:47:48,230
something that's the check right you

1130
00:47:46,639 --> 00:47:50,298
have a thing that's the check and what

1131
00:47:48,230 --> 00:47:52,159
the check does is something that's hard

1132
00:47:50,298 --> 00:47:53,239
for the user to duplicate so that one

1133
00:47:52,159 --> 00:47:54,440
that I was talking about we're like i

1134
00:47:53,239 --> 00:47:56,508
sensing after server and it comes back

1135
00:47:54,440 --> 00:47:59,568
and it has to be the right answer or I

1136
00:47:56,509 --> 00:48:01,278
don't keep going right that's one

1137
00:47:59,568 --> 00:48:03,139
example but another one like in the old

1138
00:48:01,278 --> 00:48:04,880
times when there was physical media they

1139
00:48:03,139 --> 00:48:07,578
used to do stuff like you'd have you

1140
00:48:04,880 --> 00:48:10,670
know the the disk would have some region

1141
00:48:07,579 --> 00:48:13,068
on it and that region of the disk would

1142
00:48:10,670 --> 00:48:14,659
have an intentional defect that you

1143
00:48:13,068 --> 00:48:15,980
could not reproduce when you burned your

1144
00:48:14,659 --> 00:48:17,929
own disk so it's like something that

1145
00:48:15,980 --> 00:48:20,150
would not happen normally we'd have a

1146
00:48:17,929 --> 00:48:22,368
defect on it that when you read it it

1147
00:48:20,150 --> 00:48:24,349
would read into it could read in either

1148
00:48:22,369 --> 00:48:26,778
way so you know maybe it's a thing where

1149
00:48:24,349 --> 00:48:29,720
it's like if you read it one time you

1150
00:48:26,778 --> 00:48:32,420
get 1 1 0 1 1 0 1 1 or something like

1151
00:48:29,719 --> 00:48:36,528
this right but if you read it a second

1152
00:48:32,420 --> 00:48:39,318
time you get 1 0 1 1 0 1 1 0 right well

1153
00:48:36,528 --> 00:48:42,380
now you've created something where the

1154
00:48:39,318 --> 00:48:45,679
game can see if you're reading off a

1155
00:48:42,380 --> 00:48:48,170
legitimate DVD right by just reading

1156
00:48:45,679 --> 00:48:50,659
that part of the DVD many times and

1157
00:48:48,170 --> 00:48:52,548
making sure that it gets back more than

1158
00:48:50,659 --> 00:48:54,710
one answer for the same sector of the

1159
00:48:52,548 --> 00:48:56,599
DVD right you turn off OS caching read

1160
00:48:54,710 --> 00:48:59,119
the DVD multiple times and you should

1161
00:48:56,599 --> 00:49:01,190
get back different answers right so

1162
00:48:59,119 --> 00:49:02,450
there's some kind of a check that's hard

1163
00:49:01,190 --> 00:49:03,920
for the user to duplicate this would be

1164
00:49:02,449 --> 00:49:05,239
very hard for you to duplicate right

1165
00:49:03,920 --> 00:49:06,858
because they'd have to make a DVD with

1166
00:49:05,239 --> 00:49:10,130
an intentional defect that work this way

1167
00:49:06,858 --> 00:49:11,538
right so you have to do that and then

1168
00:49:10,130 --> 00:49:12,798
you better check now the check is

1169
00:49:11,539 --> 00:49:14,450
something that in the game code you do

1170
00:49:12,798 --> 00:49:16,670
you call the check right you say hey

1171
00:49:14,449 --> 00:49:17,838
check this thing it does whatever that

1172
00:49:16,670 --> 00:49:19,430
test is and it comes back with a

1173
00:49:17,838 --> 00:49:22,699
positive or negative answer right yes

1174
00:49:19,429 --> 00:49:24,379
it's a valid version no it's not okay so

1175
00:49:22,699 --> 00:49:27,768
then you can just say well if the check

1176
00:49:24,380 --> 00:49:29,450
comes back you know true do this thing

1177
00:49:27,768 --> 00:49:31,998
if the check comes back false do this

1178
00:49:29,449 --> 00:49:34,219
thing and there's your there's your drm

1179
00:49:31,998 --> 00:49:36,379
right here's the case for the the valve

1180
00:49:34,219 --> 00:49:37,459
and here's the case for the invalid you

1181
00:49:36,380 --> 00:49:39,050
can do whatever you want you can crash

1182
00:49:37,460 --> 00:49:41,119
the game you can make it harder you can

1183
00:49:39,050 --> 00:49:42,950
do whatever you want right now the

1184
00:49:41,119 --> 00:49:46,608
problem with this is that this is a

1185
00:49:42,949 --> 00:49:47,899
giant like bullseye for the hacks or who

1186
00:49:46,608 --> 00:49:50,539
comes around and wants to crack your

1187
00:49:47,900 --> 00:49:53,119
game right so the cracker comes in they

1188
00:49:50,539 --> 00:49:54,980
know what you're going to try so they

1189
00:49:53,119 --> 00:49:56,390
look for things that read the DVD

1190
00:49:54,980 --> 00:49:58,309
whatever they disassemble the code they

1191
00:49:56,389 --> 00:50:00,769
find it back they track it back to this

1192
00:49:58,309 --> 00:50:03,230
if statement and go oh alright they've

1193
00:50:00,769 --> 00:50:06,079
got this if on the check so I'll just go

1194
00:50:03,230 --> 00:50:08,000
ahead and do whatever men do right I'll

1195
00:50:06,079 --> 00:50:10,098
just patch over this to be an if one

1196
00:50:08,000 --> 00:50:11,840
instead and it just works right so now

1197
00:50:10,099 --> 00:50:15,230
you don't need it the game is cracked

1198
00:50:11,840 --> 00:50:17,269
we're done so really what happens now

1199
00:50:15,230 --> 00:50:19,039
this is the way dear I'm used to work

1200
00:50:17,269 --> 00:50:20,509
like in the old days like Connor 64 days

1201
00:50:19,039 --> 00:50:22,880
right this would have been a floppy disk

1202
00:50:20,510 --> 00:50:25,160
here but basically the same thing where

1203
00:50:22,880 --> 00:50:26,660
you do the check then you have your path

1204
00:50:25,159 --> 00:50:28,460
for valid your paths or invalid or

1205
00:50:26,659 --> 00:50:33,348
whatever right and in valve is usually

1206
00:50:28,460 --> 00:50:35,630
just don't load well this part here you

1207
00:50:33,349 --> 00:50:38,150
want to make it much harder for that

1208
00:50:35,630 --> 00:50:40,910
cracker to know where that is so now

1209
00:50:38,150 --> 00:50:43,880
what people do is the actual source code

1210
00:50:40,909 --> 00:50:46,069
for the game is like littered with

1211
00:50:43,880 --> 00:50:48,470
things that are interwoven with the

1212
00:50:46,070 --> 00:50:50,359
checking so instead of a giant bullseye

1213
00:50:48,469 --> 00:50:53,539
there's just like one if that's like is

1214
00:50:50,358 --> 00:50:54,799
it legal or not right it's all

1215
00:50:53,539 --> 00:50:56,809
throughout the code there's like

1216
00:50:54,800 --> 00:50:59,810
dependencies on that and checking in

1217
00:50:56,809 --> 00:51:02,239
multiple places and you know try to

1218
00:50:59,809 --> 00:51:04,219
delay and repeat the checks and weird

1219
00:51:02,239 --> 00:51:06,500
ways that it's very hard to disassemble

1220
00:51:04,219 --> 00:51:08,389
and find right so basically you're sort

1221
00:51:06,500 --> 00:51:09,800
of doing essentially a meta code process

1222
00:51:08,389 --> 00:51:11,989
over the game where you're distributing

1223
00:51:09,800 --> 00:51:14,539
the check and dependencies on the check

1224
00:51:11,989 --> 00:51:16,368
all interwoven throughout the code so

1225
00:51:14,539 --> 00:51:17,480
that's very very hard for the cracker to

1226
00:51:16,369 --> 00:51:19,220
know that they've got them all and

1227
00:51:17,480 --> 00:51:21,469
that's also why they do stuff like

1228
00:51:19,219 --> 00:51:23,509
instead of just failing to load the game

1229
00:51:21,469 --> 00:51:25,098
they make it so you have to play the

1230
00:51:23,510 --> 00:51:27,230
game and see if it's actually completa

1231
00:51:25,099 --> 00:51:28,519
below that makes it much harder for that

1232
00:51:27,230 --> 00:51:32,900
cracker to know whether they've

1233
00:51:28,519 --> 00:51:36,259
succeeded right so that's how that stuff

1234
00:51:32,900 --> 00:51:37,608
works now what they do the part that I

1235
00:51:36,260 --> 00:51:39,710
don't know is these days I don't know

1236
00:51:37,608 --> 00:51:41,088
what they use for the check obviously

1237
00:51:39,710 --> 00:51:42,500
they don't use a DVD check anymore

1238
00:51:41,088 --> 00:51:45,429
because oftentimes games don't come on

1239
00:51:42,500 --> 00:51:48,480
DVDs so that doesn't happen

1240
00:51:45,429 --> 00:51:48,480
but yeah

1241
00:51:57,429 --> 00:52:01,068
so I think we're basically out of time

1242
00:51:59,480 --> 00:52:06,920
so anyone who has questions you might

1243
00:52:01,068 --> 00:52:13,389
want to I you might want to wait or

1244
00:52:06,920 --> 00:52:17,318
remember them it's that make sense let's

1245
00:52:13,389 --> 00:52:17,318
see if there's any other quick ones

1246
00:52:23,260 --> 00:52:26,530
so some of these I think there are some

1247
00:52:24,940 --> 00:52:29,320
good questions in here so i would say

1248
00:52:26,530 --> 00:52:32,530
folks save these questions for tomorrow

1249
00:52:29,320 --> 00:52:33,850
and and we will take them there they're

1250
00:52:32,530 --> 00:52:36,910
pretty good question so I'll take them

1251
00:52:33,849 --> 00:52:38,769
on stream tomorrow and I'm gonna I'm

1252
00:52:36,909 --> 00:52:39,969
going to call it a day so if you didn't

1253
00:52:38,769 --> 00:52:41,320
get your question answered some of those

1254
00:52:39,969 --> 00:52:44,319
were good questions I have to come back

1255
00:52:41,320 --> 00:52:45,820
tomorrow we will we will take a look at

1256
00:52:44,320 --> 00:52:49,900
some of those because yeah there's some

1257
00:52:45,820 --> 00:52:51,010
good stuff in there alright thank you

1258
00:52:49,900 --> 00:52:52,360
everyone for joining me for another

1259
00:52:51,010 --> 00:52:56,080
episode of handmade hero and a pleasure

1260
00:52:52,360 --> 00:52:58,390
coding with you as always if you want to

1261
00:52:56,079 --> 00:53:01,840
hang out with us again we're on our SI

1262
00:52:58,389 --> 00:53:03,269
break right now so no typing but if you

1263
00:53:01,840 --> 00:53:08,230
would like to hang out with us for more

1264
00:53:03,269 --> 00:53:11,880
game dev chat you can just go ahead and

1265
00:53:08,230 --> 00:53:14,710
come back here tomorrow 530 same time

1266
00:53:11,880 --> 00:53:17,590
and we will be back here if you get

1267
00:53:14,710 --> 00:53:19,389
confused just go to handmade here org

1268
00:53:17,590 --> 00:53:21,760
and you can push this little tweets

1269
00:53:19,389 --> 00:53:23,549
button and also this little nothing

1270
00:53:21,760 --> 00:53:25,810
scheduled thing if you refresh the page

1271
00:53:23,550 --> 00:53:27,910
usually it'll say like right now it says

1272
00:53:25,809 --> 00:53:29,739
live now if i refresh it when if i

1273
00:53:27,909 --> 00:53:31,000
refresh it sometime when I'm not on

1274
00:53:29,739 --> 00:53:33,099
it'll usually have a little countdown

1275
00:53:31,000 --> 00:53:35,139
timer that'll say you know what it is

1276
00:53:33,099 --> 00:53:37,079
but there's also the tweet bot and if

1277
00:53:35,139 --> 00:53:39,429
you check out the tweet bot you can see

1278
00:53:37,079 --> 00:53:41,590
besides Twitter's lovely advertisements

1279
00:53:39,429 --> 00:53:43,210
you can see like there'll be a schedule

1280
00:53:41,590 --> 00:53:45,480
and then little reminders so you can

1281
00:53:43,210 --> 00:53:48,400
always subscribe to the handmade hero

1282
00:53:45,480 --> 00:53:49,960
tweetbot and that will keep you up to

1283
00:53:48,400 --> 00:53:52,180
date so but you never have to worry so

1284
00:53:49,960 --> 00:53:54,730
there's that hope to see you guys

1285
00:53:52,179 --> 00:53:58,000
tomorrow it's been good hanging out as

1286
00:53:54,730 --> 00:53:59,829
always if you are programming this

1287
00:53:58,000 --> 00:54:01,539
evening have a good programming have

1288
00:53:59,829 --> 00:54:03,579
some good programming tomorrow and i'll

1289
00:54:01,539 --> 00:54:08,279
see you on the stream tomorrow at five

1290
00:54:03,579 --> 00:54:08,279
thirty PSD take it easy everyone

