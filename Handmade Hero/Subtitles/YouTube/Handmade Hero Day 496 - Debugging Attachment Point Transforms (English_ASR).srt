1
00:00:00,030 --> 00:00:04,110
hello everyone and welcome handmade hero

2
00:00:02,310 --> 00:00:08,308
show Rico to complete-game live on

3
00:00:04,110 --> 00:00:10,080
stream we are going to put our cap heads

4
00:00:08,308 --> 00:00:13,589
on our cap bodies today which is a very

5
00:00:10,080 --> 00:00:17,100
important thing to do we pretty much did

6
00:00:13,589 --> 00:00:18,750
all the work for it and editing it and

7
00:00:17,100 --> 00:00:21,210
we even have like a fairly reasonable

8
00:00:18,750 --> 00:00:23,059
editor now that draws it and so what we

9
00:00:21,210 --> 00:00:25,618
want to do now is just actually

10
00:00:23,059 --> 00:00:28,500
implement the skeletal snapping stuff

11
00:00:25,618 --> 00:00:29,849
inside the entity system this is not

12
00:00:28,500 --> 00:00:31,678
particularly difficult but it is

13
00:00:29,849 --> 00:00:34,230
something that we kind of to think

14
00:00:31,678 --> 00:00:34,859
through a little bit and oops it's not

15
00:00:34,229 --> 00:00:38,308
what I wanted

16
00:00:34,859 --> 00:00:40,530
and prj file and we have to work on

17
00:00:38,308 --> 00:00:43,229
scaling a little bit as well so we want

18
00:00:40,530 --> 00:00:44,579
to have a more coherent way of tracking

19
00:00:43,229 --> 00:00:46,679
scaling through the pipeline if you

20
00:00:44,579 --> 00:00:48,359
don't really do right now and so that's

21
00:00:46,679 --> 00:00:50,340
another thing that we'd like to make

22
00:00:48,359 --> 00:00:52,859
sure we have correct let me show you

23
00:00:50,340 --> 00:00:54,480
what we're where we're at right now so

24
00:00:52,859 --> 00:00:57,479
if we want to right we can click on

25
00:00:54,479 --> 00:01:00,509
different people like for example this

26
00:00:57,479 --> 00:01:02,698
cat here and it actually when we click

27
00:01:00,509 --> 00:01:04,530
it shows us all of the possible things

28
00:01:02,698 --> 00:01:06,840
that were under the cursor at that point

29
00:01:04,530 --> 00:01:09,540
in depth order so for example if we

30
00:01:06,840 --> 00:01:11,130
click on the cat it is true that there's

31
00:01:09,540 --> 00:01:13,140
two pieces of the cat right there's the

32
00:01:11,129 --> 00:01:14,399
head and the body and it's not clear

33
00:01:13,140 --> 00:01:15,750
which one of them we were trying to edit

34
00:01:14,400 --> 00:01:17,969
because they kind of like stamp on top

35
00:01:15,750 --> 00:01:19,379
of each other and so we implemented this

36
00:01:17,969 --> 00:01:21,719
nice little interface here so we can

37
00:01:19,379 --> 00:01:24,179
actually pick which one we wanted to

38
00:01:21,719 --> 00:01:25,709
actually interact with and similarly we

39
00:01:24,180 --> 00:01:27,689
can get like the ground tile under the

40
00:01:25,709 --> 00:01:30,658
cat if we want to so it really makes it

41
00:01:27,688 --> 00:01:32,849
easier to edit there what we do here

42
00:01:30,659 --> 00:01:35,479
when we get alignment points in this

43
00:01:32,849 --> 00:01:37,379
case let me just make this bigger here

44
00:01:35,478 --> 00:01:38,938
when we get alignment points in this

45
00:01:37,379 --> 00:01:40,469
case right we can add them and we can

46
00:01:38,938 --> 00:01:43,258
like adjust them and so on right like

47
00:01:40,469 --> 00:01:44,640
this we can add new ones and so what

48
00:01:43,259 --> 00:01:48,299
we'd like to be able to do is we'd like

49
00:01:44,640 --> 00:01:49,769
to be able to actually you know go on to

50
00:01:48,299 --> 00:01:51,570
this what we want to do is go on to like

51
00:01:49,769 --> 00:01:55,019
the body here we want to add an

52
00:01:51,569 --> 00:01:58,739
alignment point like that right and then

53
00:01:55,019 --> 00:02:01,408
we want to switch back to the head and

54
00:01:58,739 --> 00:02:03,000
set like it's alignment point like that

55
00:02:01,409 --> 00:02:06,000
and then we want those two things to

56
00:02:03,000 --> 00:02:09,389
snap together so that like basically the

57
00:02:06,000 --> 00:02:11,250
green point here will snap to the red

58
00:02:09,389 --> 00:02:12,989
point here which is like the base point

59
00:02:11,250 --> 00:02:18,000
for this

60
00:02:12,990 --> 00:02:19,409
for this element right and so that's all

61
00:02:18,000 --> 00:02:22,409
we really need to implement they're

62
00:02:19,409 --> 00:02:23,699
pretty basic then from there we want to

63
00:02:22,409 --> 00:02:24,990
move on to dealing with these scaling

64
00:02:23,699 --> 00:02:26,789
values and what these things are is

65
00:02:24,990 --> 00:02:29,610
their relative scales that allow us to

66
00:02:26,789 --> 00:02:32,599
say when two things snap together how

67
00:02:29,610 --> 00:02:35,760
they should scale on top of each other

68
00:02:32,599 --> 00:02:40,229
and so for example if you know you want

69
00:02:35,759 --> 00:02:42,629
this if you wanted cat bodies to have

70
00:02:40,229 --> 00:02:44,340
small cat heads for some reason you

71
00:02:42,629 --> 00:02:46,769
could say you know everything that snaps

72
00:02:44,340 --> 00:02:48,990
on to this is half height or something

73
00:02:46,770 --> 00:02:52,020
right you know what I mean

74
00:02:48,990 --> 00:02:55,290
and that's just a way of us giving

75
00:02:52,020 --> 00:02:58,290
ourselves some giving our sense of

76
00:02:55,289 --> 00:03:01,379
flexibility of how we refer to different

77
00:02:58,289 --> 00:03:02,639
elements of our world and we need to

78
00:03:01,379 --> 00:03:05,579
think that through a little bit because

79
00:03:02,639 --> 00:03:07,319
if we don't pick it carefully we'll end

80
00:03:05,580 --> 00:03:09,180
up doing a lot more work than we have to

81
00:03:07,319 --> 00:03:13,289
do what's the point of that well the

82
00:03:09,180 --> 00:03:16,860
point of that is suppose we want hats in

83
00:03:13,289 --> 00:03:18,659
the game which players can wear we want

84
00:03:16,860 --> 00:03:21,320
casts to be able to wear them - well cat

85
00:03:18,659 --> 00:03:23,280
heads are smaller than human heads right

86
00:03:21,319 --> 00:03:24,659
so there's multiple ways that we can

87
00:03:23,280 --> 00:03:26,099
look at that we could say that

88
00:03:24,659 --> 00:03:29,639
everything in the world has a uniform

89
00:03:26,099 --> 00:03:32,129
scale and then cat heads are themselves

90
00:03:29,639 --> 00:03:34,859
set to be smaller or cat bodies are set

91
00:03:32,129 --> 00:03:37,859
to be smaller so basically everything is

92
00:03:34,860 --> 00:03:41,580
a uniform size like all animals are

93
00:03:37,860 --> 00:03:43,980
uniform size right and then we shrink

94
00:03:41,580 --> 00:03:45,600
them down to be the size that they are

95
00:03:43,979 --> 00:03:48,569
so that anything gets put on them is

96
00:03:45,599 --> 00:03:50,009
naturally shrunken down right another

97
00:03:48,569 --> 00:03:53,039
way to do it is to say that everything

98
00:03:50,009 --> 00:03:55,500
is its actual size at scale 1.0 so cats

99
00:03:53,039 --> 00:03:58,169
are just naturally smaller and then when

100
00:03:55,500 --> 00:04:01,919
you snap a hat on them the attach point

101
00:03:58,169 --> 00:04:07,409
for hats on cats is set to be half the

102
00:04:01,919 --> 00:04:09,959
size you know of right the the scaling

103
00:04:07,409 --> 00:04:12,780
value on the attach point is set to half

104
00:04:09,960 --> 00:04:15,540
so that only when you put a hat on a cat

105
00:04:12,780 --> 00:04:17,910
does it get the 50% scaling and it's not

106
00:04:15,539 --> 00:04:19,738
the whole cat that scaled down 50% from

107
00:04:17,910 --> 00:04:22,410
a size that's you know larger than a

108
00:04:19,738 --> 00:04:26,099
normal cat you can see why there's

109
00:04:22,410 --> 00:04:26,850
complexity there and there isn't a right

110
00:04:26,100 --> 00:04:28,200
or wrong

111
00:04:26,850 --> 00:04:30,390
but there is a way that will minimize

112
00:04:28,199 --> 00:04:32,099
work and so in some sense that becomes

113
00:04:30,389 --> 00:04:34,680
the right way for us because what we're

114
00:04:32,100 --> 00:04:36,930
looking for is to minimize the amount of

115
00:04:34,680 --> 00:04:38,699
busy work we have to do setting like

116
00:04:36,930 --> 00:04:40,110
special parameters to make sure that

117
00:04:38,699 --> 00:04:41,789
things that go on cats are scaled

118
00:04:40,110 --> 00:04:43,740
properly versus things that go on humans

119
00:04:41,790 --> 00:04:46,080
versus things that go on monsters versus

120
00:04:43,740 --> 00:04:50,370
things that fall on the ground you would

121
00:04:46,079 --> 00:04:53,339
like as much as possible to set as few

122
00:04:50,370 --> 00:04:55,829
of information points as possible it

123
00:04:53,339 --> 00:04:58,139
just saves you work and so we do have a

124
00:04:55,829 --> 00:05:00,750
right answer for us even though there's

125
00:04:58,139 --> 00:05:02,339
no it's not objectively right but

126
00:05:00,750 --> 00:05:03,750
subjectively from the standpoint of

127
00:05:02,339 --> 00:05:05,899
someone who doesn't want to do extra

128
00:05:03,750 --> 00:05:08,790
specification there it sure seems like

129
00:05:05,899 --> 00:05:13,799
there's a good argument to be made for

130
00:05:08,790 --> 00:05:16,260
that that answer which eliminates them

131
00:05:13,800 --> 00:05:17,759
the majority of the work so we'll be

132
00:05:16,259 --> 00:05:19,349
gunning for that but who knows we'll get

133
00:05:17,759 --> 00:05:20,849
there we'll certainly try to figure out

134
00:05:19,350 --> 00:05:22,260
what it is and we'll you know start with

135
00:05:20,850 --> 00:05:24,720
what we think is our best guess and

136
00:05:22,259 --> 00:05:27,599
we'll see hopefully we're right so now

137
00:05:24,720 --> 00:05:31,440
if we go back let's take a quick look

138
00:05:27,600 --> 00:05:33,060
here at our like is this looks like this

139
00:05:31,439 --> 00:05:34,439
is like off-center a little bit was that

140
00:05:33,060 --> 00:05:35,970
off-center a little bit maybe it wasn't

141
00:05:34,439 --> 00:05:37,529
it was just a trick of the eye I can't

142
00:05:35,970 --> 00:05:43,260
quite tell no I guess it wasn't no so

143
00:05:37,529 --> 00:05:45,959
anyway um looking at this code what we

144
00:05:43,259 --> 00:05:48,750
need to do is right now we don't

145
00:05:45,959 --> 00:05:52,859
actually have any idea in most of these

146
00:05:48,750 --> 00:05:56,279
cases we don't really know where what

147
00:05:52,860 --> 00:05:57,569
the transforms are for our various for

148
00:05:56,279 --> 00:06:03,569
the various pieces that we're working

149
00:05:57,569 --> 00:06:07,920
with here right and so just to give you

150
00:06:03,569 --> 00:06:11,389
some perspective on what's going on each

151
00:06:07,920 --> 00:06:15,870
of those points like alignment points

152
00:06:11,389 --> 00:06:19,949
their relative to the object in question

153
00:06:15,870 --> 00:06:22,379
right so if I say that I have an

154
00:06:19,949 --> 00:06:24,060
alignment point and it's defined with a

155
00:06:22,379 --> 00:06:26,370
certain set of parameters those

156
00:06:24,060 --> 00:06:28,199
parameters are interpreted inside the

157
00:06:26,370 --> 00:06:31,980
shape of the thing that they're defined

158
00:06:28,199 --> 00:06:33,509
on so if I talk about the cat body and I

159
00:06:31,980 --> 00:06:36,150
talk about the location of alignment

160
00:06:33,509 --> 00:06:39,029
point on the cat body it is assumed that

161
00:06:36,149 --> 00:06:40,349
that alignment point right will move and

162
00:06:39,029 --> 00:06:45,359
scale and

163
00:06:40,350 --> 00:06:47,780
form along with the cat body this

164
00:06:45,360 --> 00:06:51,540
creates a problem for us actually

165
00:06:47,779 --> 00:06:53,219
because what happens is we cannot store

166
00:06:51,540 --> 00:06:56,129
you know there could be up to 12 we have

167
00:06:53,220 --> 00:06:58,500
a limit right now and you know we could

168
00:06:56,129 --> 00:06:59,969
even increase this limit so this is just

169
00:06:58,500 --> 00:07:03,389
what we randomly picked but we could

170
00:06:59,970 --> 00:07:04,500
have picked anything we have some number

171
00:07:03,389 --> 00:07:08,370
of alignment points right now you can

172
00:07:04,500 --> 00:07:10,889
have up to 12 of them when we process

173
00:07:08,370 --> 00:07:13,860
each individual piece in an articulated

174
00:07:10,889 --> 00:07:16,379
body like that cat where it's got two

175
00:07:13,860 --> 00:07:19,800
pieces when we process say the body

176
00:07:16,379 --> 00:07:22,110
piece what we find is that there are 12

177
00:07:19,800 --> 00:07:23,790
alignment points up to 12 alignment

178
00:07:22,110 --> 00:07:26,639
points that could be defined on that cat

179
00:07:23,790 --> 00:07:29,400
we don't want to have to transform all

180
00:07:26,639 --> 00:07:32,310
12 alignment points and store all 12

181
00:07:29,399 --> 00:07:35,399
alignment points so that when we go to

182
00:07:32,310 --> 00:07:37,019
process the next thing if we see that

183
00:07:35,399 --> 00:07:39,599
it's supposed to connect to one of them

184
00:07:37,019 --> 00:07:41,849
we can go grab what it is right because

185
00:07:39,600 --> 00:07:45,060
imagine later we find twelves not enough

186
00:07:41,850 --> 00:07:48,240
we go to 16 we go to 32 that number is a

187
00:07:45,060 --> 00:07:49,860
flexible number we're multiplying the

188
00:07:48,240 --> 00:07:51,180
amount of work we have to do on each

189
00:07:49,860 --> 00:07:53,759
piece by that number

190
00:07:51,180 --> 00:07:56,100
because now we have to store and compute

191
00:07:53,759 --> 00:07:58,829
all those points so what we'd rather do

192
00:07:56,100 --> 00:08:00,840
is compute those points on demand right

193
00:07:58,829 --> 00:08:02,579
because only one or two other things is

194
00:08:00,839 --> 00:08:05,009
gonna really be snapping to that at any

195
00:08:02,579 --> 00:08:07,109
given time and so what we want to do is

196
00:08:05,009 --> 00:08:09,180
only compute those points that actually

197
00:08:07,110 --> 00:08:11,790
have something attached to them going

198
00:08:09,180 --> 00:08:13,560
forward in order to do that we need to

199
00:08:11,790 --> 00:08:17,819
delay the computation which means we

200
00:08:13,560 --> 00:08:20,519
need to reach back right to previous

201
00:08:17,819 --> 00:08:23,310
pieces and say where would this

202
00:08:20,519 --> 00:08:27,209
alignment point have been how do we

203
00:08:23,310 --> 00:08:31,079
compute at the time right so what we

204
00:08:27,209 --> 00:08:34,228
need to store is the basis in which we

205
00:08:31,079 --> 00:08:37,649
would interpret those alignment points

206
00:08:34,229 --> 00:08:41,960
which are two axes the X and the y axes

207
00:08:37,649 --> 00:08:44,370
and a base at like a origin point right

208
00:08:41,960 --> 00:08:46,769
one way we can store them is em four by

209
00:08:44,370 --> 00:08:50,970
fours we don't actually need an EM four

210
00:08:46,769 --> 00:08:53,399
by four we could just do three three

211
00:08:50,970 --> 00:09:03,860
element vectors so it's really

212
00:08:53,399 --> 00:09:03,860
more like this right or we could say

213
00:09:08,899 --> 00:09:19,199
which may be more intuitive and so we

214
00:09:16,529 --> 00:09:21,029
just need to store these values as we go

215
00:09:19,200 --> 00:09:23,100
through the pieces into a temporary

216
00:09:21,029 --> 00:09:25,350
array which can then be used to look

217
00:09:23,100 --> 00:09:27,540
them up and once we can look those up we

218
00:09:25,350 --> 00:09:29,580
can reinterpret any attachment point in

219
00:09:27,539 --> 00:09:31,799
that space and then provide the

220
00:09:29,580 --> 00:09:34,080
alignment information that we need now

221
00:09:31,799 --> 00:09:37,579
fortunately for us we kind of already

222
00:09:34,080 --> 00:09:41,879
know what those are if we go looking

223
00:09:37,580 --> 00:09:44,340
inside the asset renderer part of things

224
00:09:41,879 --> 00:09:46,909
here what you can see is we have a lot

225
00:09:44,340 --> 00:09:50,009
of stuff that's used for pushing

226
00:09:46,909 --> 00:09:52,679
information on and you can see the

227
00:09:50,009 --> 00:09:54,809
computations happening here so inside

228
00:09:52,679 --> 00:09:56,370
this push bitmap call here that's you

229
00:09:54,809 --> 00:09:59,729
know the upright one for example this

230
00:09:56,370 --> 00:10:01,259
one right here where we're doing all of

231
00:09:59,730 --> 00:10:03,180
this work you can see that what we

232
00:10:01,259 --> 00:10:05,700
really want to start to do is extract

233
00:10:03,179 --> 00:10:07,259
that work outside so we want to turn

234
00:10:05,700 --> 00:10:08,730
these into utilities that then get

235
00:10:07,259 --> 00:10:09,929
passed down and we kind of knew that to

236
00:10:08,730 --> 00:10:11,940
begin with when we abstracted the

237
00:10:09,929 --> 00:10:14,009
renderer you notice we shoved this stuff

238
00:10:11,940 --> 00:10:16,080
into asset rendering why it's because

239
00:10:14,009 --> 00:10:17,639
it's all handmade hero specific it's not

240
00:10:16,080 --> 00:10:19,290
stuff you would use outside of handmade

241
00:10:17,639 --> 00:10:21,149
hero because it's all very special

242
00:10:19,289 --> 00:10:24,929
purpose to how handmade here has chosen

243
00:10:21,149 --> 00:10:26,789
to represent its world its axes its idea

244
00:10:24,929 --> 00:10:29,849
of what sprites do and how they are

245
00:10:26,789 --> 00:10:32,189
formed it's not really specific to the

246
00:10:29,850 --> 00:10:35,040
renderer per se because the renderer

247
00:10:32,190 --> 00:10:36,540
doesn't actually care you could put any

248
00:10:35,039 --> 00:10:37,980
old quads through the renderer the

249
00:10:36,539 --> 00:10:39,929
renderer is just thinking about things

250
00:10:37,980 --> 00:10:42,930
in terms of textured quads that it will

251
00:10:39,929 --> 00:10:47,609
then do per pixel sorting on an output

252
00:10:42,929 --> 00:10:54,750
right so you know our our understanding

253
00:10:47,610 --> 00:10:57,139
here is is really mostly about this

254
00:10:54,750 --> 00:10:59,309
whole file being stuff the tomato stew

255
00:10:57,139 --> 00:11:01,830
probably wants to be broken up into

256
00:10:59,309 --> 00:11:03,929
utility routines and for this very

257
00:11:01,830 --> 00:11:05,730
reason because a lot of the information

258
00:11:03,929 --> 00:11:06,809
that's computed inside here in the

259
00:11:05,730 --> 00:11:09,720
process of running the spry

260
00:11:06,809 --> 00:11:13,319
is actually information we need for

261
00:11:09,720 --> 00:11:16,950
other reasons and furthermore our pickin

262
00:11:13,320 --> 00:11:18,720
procedure right so like if you look at

263
00:11:16,950 --> 00:11:21,870
how we're doing our ray intersects box

264
00:11:18,720 --> 00:11:24,210
that right now is and and also when we

265
00:11:21,870 --> 00:11:26,490
render it like here you can notice that

266
00:11:24,210 --> 00:11:29,610
that's really imprecise right now right

267
00:11:26,490 --> 00:11:33,060
so right now like this when I'm picking

268
00:11:29,610 --> 00:11:35,759
is perfectly accurate right not only

269
00:11:33,059 --> 00:11:38,399
does it highlight exactly the cube but

270
00:11:35,759 --> 00:11:40,169
it also picks perfectly so even like one

271
00:11:38,399 --> 00:11:43,919
pixel over and you get the right answer

272
00:11:40,169 --> 00:11:45,389
because that was 100% accurate right the

273
00:11:43,919 --> 00:11:48,000
reason for that is we have an exact 3d

274
00:11:45,389 --> 00:11:50,039
shape so we could be exact here we don't

275
00:11:48,000 --> 00:11:51,629
have any idea what's going on and so we

276
00:11:50,039 --> 00:11:53,519
had to just pick a general region and

277
00:11:51,629 --> 00:11:54,509
not only did we have to pick a general

278
00:11:53,519 --> 00:11:56,579
region but we didn't even know they're

279
00:11:54,509 --> 00:11:58,259
really the sizes of these things because

280
00:11:56,580 --> 00:12:00,089
we just know we don't even know what

281
00:11:58,259 --> 00:12:01,830
their actual dimensions were the reason

282
00:12:00,089 --> 00:12:03,240
for that is because we're a lot of that

283
00:12:01,830 --> 00:12:05,639
was happening in here and we couldn't

284
00:12:03,240 --> 00:12:07,860
see it so as we move it out we can also

285
00:12:05,639 --> 00:12:10,350
tighten those bounds because we'll have

286
00:12:07,860 --> 00:12:12,089
actual information about exactly what we

287
00:12:10,350 --> 00:12:14,040
rendered for our quad which would give

288
00:12:12,089 --> 00:12:15,900
us the ability to specify a box more

289
00:12:14,039 --> 00:12:17,338
succinctly will it be perfect no because

290
00:12:15,899 --> 00:12:18,539
it's still a bitmap that's getting drawn

291
00:12:17,339 --> 00:12:19,800
in there and we don't want to do per

292
00:12:18,539 --> 00:12:22,230
pixel testing for any particular reason

293
00:12:19,799 --> 00:12:24,899
here it's not worth it for our purposes

294
00:12:22,230 --> 00:12:26,789
but week certainly can be better than we

295
00:12:24,899 --> 00:12:28,439
were right now but we intentionally

296
00:12:26,789 --> 00:12:30,509
didn't do that when we when we were just

297
00:12:28,440 --> 00:12:31,890
writing the basic routine for the very

298
00:12:30,509 --> 00:12:33,659
reason that we didn't have easy access

299
00:12:31,889 --> 00:12:35,338
to the values now we'll be able to get

300
00:12:33,659 --> 00:12:38,459
those values as well which is nicer

301
00:12:35,339 --> 00:12:40,470
right so that's where we're at right now

302
00:12:38,460 --> 00:12:42,980
what we want to do here is say alright

303
00:12:40,470 --> 00:12:46,460
when we're doing our push bit madness

304
00:12:42,980 --> 00:12:49,889
let's figure out how we could sort of

305
00:12:46,460 --> 00:12:53,730
split this information off and have more

306
00:12:49,889 --> 00:12:59,789
like a more coherent way of pushing this

307
00:12:53,730 --> 00:13:01,830
information for example we could have

308
00:12:59,789 --> 00:13:03,299
all of this computation be something

309
00:13:01,830 --> 00:13:06,000
that computes its information into a

310
00:13:03,299 --> 00:13:09,329
struct and then you could just use that

311
00:13:06,000 --> 00:13:11,549
struct to call a more explicit function

312
00:13:09,330 --> 00:13:15,240
and that way you don't have to worry

313
00:13:11,549 --> 00:13:16,799
about who gets access to this stuff you

314
00:13:15,240 --> 00:13:20,100
could just call it and then anyone who

315
00:13:16,799 --> 00:13:20,609
wants to use it could use it without it

316
00:13:20,100 --> 00:13:21,690
being

317
00:13:20,610 --> 00:13:24,778
to do just something that's passed

318
00:13:21,690 --> 00:13:37,140
forward into the push quad right so

319
00:13:24,778 --> 00:13:40,588
that's what we want to do here so moving

320
00:13:37,139 --> 00:13:43,078
through here if we look at just trying

321
00:13:40,589 --> 00:13:46,170
to find some basics of what we probably

322
00:13:43,078 --> 00:13:48,179
want to do our get bitmap dim call right

323
00:13:46,169 --> 00:13:50,629
this sort of stuff again this all could

324
00:13:48,179 --> 00:13:54,028
sort of be disaggregated at this point

325
00:13:50,629 --> 00:13:55,679
and you know maybe it should be if we

326
00:13:54,028 --> 00:13:59,088
look at how all of this stuff is getting

327
00:13:55,679 --> 00:14:03,599
used I'm gonna pop over to the renderer

328
00:13:59,089 --> 00:14:11,550
you know and oops not that I'm gonna pop

329
00:14:03,600 --> 00:14:15,180
over to the renderer here and if you

330
00:14:11,549 --> 00:14:19,078
look at our if you look at our push

331
00:14:15,179 --> 00:14:21,149
breitkopf you can see that this is

332
00:14:19,078 --> 00:14:23,370
probably all the information that you

333
00:14:21,149 --> 00:14:27,448
really needed to push the sprite on

334
00:14:23,370 --> 00:14:31,339
right and furthermore you know push quad

335
00:14:27,448 --> 00:14:33,990
would have done it you know what I mean

336
00:14:31,339 --> 00:14:36,390
so you know you could imagine us just

337
00:14:33,990 --> 00:14:38,129
call like computing this stuff and then

338
00:14:36,389 --> 00:14:42,448
just having a push quad that actually

339
00:14:38,129 --> 00:14:45,509
you know puts this information into the

340
00:14:42,448 --> 00:14:51,049
into the render into the render state

341
00:14:45,509 --> 00:14:51,049
right and so just thinking it through

342
00:14:51,470 --> 00:14:56,250
you know I can kind of see where all

343
00:14:53,820 --> 00:14:58,589
this is headed right like eventually

344
00:14:56,250 --> 00:15:01,049
like like let's just look at how this is

345
00:14:58,589 --> 00:15:02,640
working right you can see how expensive

346
00:15:01,049 --> 00:15:05,219
and unnecessary a lot of this stuff is

347
00:15:02,639 --> 00:15:06,750
so we say like get current quads and we

348
00:15:05,220 --> 00:15:09,600
give it a number that we want to pass

349
00:15:06,750 --> 00:15:12,448
but you know really what we want to

350
00:15:09,600 --> 00:15:14,639
probably do is we probably just want to

351
00:15:12,448 --> 00:15:16,948
do a thing where we open a quad set and

352
00:15:14,639 --> 00:15:18,720
we just keep pushing quads on it and and

353
00:15:16,948 --> 00:15:21,719
then every time we would overflow it

354
00:15:18,720 --> 00:15:24,089
just adds more and in amortized lots

355
00:15:21,720 --> 00:15:27,000
work we could write directly into that

356
00:15:24,089 --> 00:15:28,860
area and so just thinking it through I

357
00:15:27,000 --> 00:15:30,750
see where this is headed like it's very

358
00:15:28,860 --> 00:15:33,028
clear where the architecture wants to go

359
00:15:30,750 --> 00:15:34,179
whether we want to get there today or

360
00:15:33,028 --> 00:15:35,500
not is another question

361
00:15:34,179 --> 00:15:37,989
but I can definitely see where it wants

362
00:15:35,500 --> 00:15:41,139
to go and so if I go to the push quad

363
00:15:37,990 --> 00:15:43,810
call here you know here's that push quad

364
00:15:41,139 --> 00:15:47,588
call you can see that really what we

365
00:15:43,809 --> 00:15:49,959
want to do in this case is we want to

366
00:15:47,589 --> 00:15:52,060
probably separate these things out we

367
00:15:49,960 --> 00:15:53,920
want to probably special separate

368
00:15:52,059 --> 00:15:57,099
special texture from non special texture

369
00:15:53,919 --> 00:16:01,360
and what we would like to do is all of

370
00:15:57,100 --> 00:16:03,820
this stuff right where we're pushing

371
00:16:01,360 --> 00:16:09,730
these quads on can really be rolled back

372
00:16:03,820 --> 00:16:11,260
out into the actual direct calls so in

373
00:16:09,730 --> 00:16:14,110
here where we're looping all the pieces

374
00:16:11,259 --> 00:16:17,049
this stuff could be filled out right in

375
00:16:14,110 --> 00:16:18,970
line so as we push those quads on each

376
00:16:17,049 --> 00:16:24,519
of these things that does a quad push

377
00:16:18,970 --> 00:16:27,160
could just do that right and so much

378
00:16:24,519 --> 00:16:29,528
work would be saved right so much work

379
00:16:27,159 --> 00:16:32,829
would be saved there because in a lot of

380
00:16:29,528 --> 00:16:35,500
these cases all look a lot more stuff is

381
00:16:32,830 --> 00:16:37,389
known than it then needed like a lot of

382
00:16:35,500 --> 00:16:40,509
stuff that's getting done every time

383
00:16:37,389 --> 00:16:42,958
when it goes to do the reservation this

384
00:16:40,509 --> 00:16:48,278
call right here could be amortized

385
00:16:42,958 --> 00:16:53,759
dramatically right and so I this can get

386
00:16:48,278 --> 00:16:53,759
a lot better and I'll just go ahead and

387
00:17:42,079 --> 00:17:47,298
so we kind of know that that's coming

388
00:17:44,440 --> 00:17:49,999
and so what I think I'd like to do is

389
00:17:47,298 --> 00:17:52,278
you know take ours the steps that we're

390
00:17:49,999 --> 00:17:55,970
taking I think we want to take them in

391
00:17:52,278 --> 00:17:58,329
that direction you know what I mean

392
00:17:55,970 --> 00:18:02,269
so I don't know do we have a hand made

393
00:17:58,329 --> 00:18:04,009
asset rendering H right now we don't and

394
00:18:02,269 --> 00:18:06,319
I don't do that we necessarily want one

395
00:18:04,009 --> 00:18:07,819
either because we could just say that

396
00:18:06,319 --> 00:18:10,759
that properties things probably should

397
00:18:07,819 --> 00:18:13,489
live in the renderer and so what I want

398
00:18:10,759 --> 00:18:17,778
to do here is say look let's temporarily

399
00:18:13,489 --> 00:18:20,899
let let's like try to make this a little

400
00:18:17,778 --> 00:18:24,319
more thoughtful about the way that we're

401
00:18:20,898 --> 00:18:27,319
actually making this flow and let's look

402
00:18:24,319 --> 00:18:29,898
inside the renderer at how that push

403
00:18:27,319 --> 00:18:32,569
quad call wants to actually work like

404
00:18:29,898 --> 00:18:35,089
what does it actually write into the

405
00:18:32,569 --> 00:18:36,470
stream you know what I mean and so if

406
00:18:35,089 --> 00:18:39,319
you look at what it's writing into the

407
00:18:36,470 --> 00:18:42,139
stream it needs to get and you can even

408
00:18:39,319 --> 00:18:43,700
see this here like there's some there's

409
00:18:42,138 --> 00:18:45,498
some stuff that happens here that this

410
00:18:43,700 --> 00:18:48,139
probably really shouldn't be happening

411
00:18:45,499 --> 00:18:49,819
inside push quad this right here right

412
00:18:48,138 --> 00:18:53,238
that should probably be happening

413
00:18:49,819 --> 00:18:55,519
outside as well the inverse UV part

414
00:18:53,239 --> 00:19:03,350
should really probably not be happening

415
00:18:55,519 --> 00:19:06,169
here you know what I mean because that

416
00:19:03,349 --> 00:19:08,118
information is more is better handled

417
00:19:06,169 --> 00:19:10,909
outside you know what I mean like you

418
00:19:08,118 --> 00:19:12,408
know you you don't really need to be

419
00:19:10,909 --> 00:19:13,999
doing this inversion and tight side here

420
00:19:12,409 --> 00:19:15,409
all the time because the person outside

421
00:19:13,999 --> 00:19:16,909
if they actually cared could have done

422
00:19:15,409 --> 00:19:17,840
it themselves there's a lot of reasons

423
00:19:16,909 --> 00:19:20,869
why you probably don't want to in here

424
00:19:17,839 --> 00:19:22,759
we could push that out so you know just

425
00:19:20,868 --> 00:19:26,658
looking at how the push quad thing works

426
00:19:22,759 --> 00:19:29,929
you can see in here it's pretty basic

427
00:19:26,659 --> 00:19:32,028
the way that it pushes this stuff in I'd

428
00:19:29,929 --> 00:19:36,379
like to just make it so that we fill

429
00:19:32,028 --> 00:19:41,239
these things out as part of some utility

430
00:19:36,378 --> 00:19:43,009
thing and then we can redirect those

431
00:19:41,239 --> 00:19:45,169
utilities that fill them out to be

432
00:19:43,009 --> 00:19:47,480
things that fill out the stream directly

433
00:19:45,169 --> 00:19:51,230
when we get the render into that

434
00:19:47,480 --> 00:19:54,589
position okay so what I want to do here

435
00:19:51,230 --> 00:19:58,429
is say all right let's pretend

436
00:19:54,589 --> 00:20:03,408
that what we actually have so you know

437
00:19:58,429 --> 00:20:05,150
in in the in the render itself I'm gonna

438
00:20:03,409 --> 00:20:08,510
basically define like an output type

439
00:20:05,150 --> 00:20:11,028
here and I'll just call it and you know

440
00:20:08,509 --> 00:20:13,929
I we could make another we could make

441
00:20:11,028 --> 00:20:17,298
another place for this stuff to live

442
00:20:13,929 --> 00:20:20,140
like handmade geometry or handmade like

443
00:20:17,298 --> 00:20:24,319
rendered geometry or something like this

444
00:20:20,140 --> 00:20:27,200
where you know the render itself doesn't

445
00:20:24,319 --> 00:20:29,119
really care if you use this stuff it

446
00:20:27,200 --> 00:20:30,980
just it's gonna be utility functions

447
00:20:29,119 --> 00:20:33,709
that help you make the geometry that

448
00:20:30,980 --> 00:20:37,519
you're trying to make you know and so

449
00:20:33,710 --> 00:20:39,829
inside handmade render geometry th we

450
00:20:37,519 --> 00:20:42,109
could put these functions that we want

451
00:20:39,829 --> 00:20:46,819
you know whatever they are and here you

452
00:20:42,109 --> 00:20:48,469
know right quad or something you know

453
00:20:46,819 --> 00:20:54,048
whatever it is I'm not sure we'll talk

454
00:20:48,470 --> 00:20:56,120
about that in a second but we can put

455
00:20:54,048 --> 00:20:58,639
those in here so we know like they don't

456
00:20:56,119 --> 00:21:00,139
they're not wedded to the render in any

457
00:20:58,640 --> 00:21:02,149
way like you could use the render

458
00:21:00,140 --> 00:21:04,520
without using these if you wanted to but

459
00:21:02,148 --> 00:21:06,229
they are available for you to use to

460
00:21:04,519 --> 00:21:08,720
make it easier right and so it's just

461
00:21:06,230 --> 00:21:10,519
sort of like a utility library for that

462
00:21:08,720 --> 00:21:12,980
kind of rendering and then when we look

463
00:21:10,519 --> 00:21:15,889
you know this basically this exact

464
00:21:12,980 --> 00:21:18,319
process that's happening all of this can

465
00:21:15,890 --> 00:21:24,950
sort of be wrapped up into a routine and

466
00:21:18,319 --> 00:21:26,450
so inside you know this system we could

467
00:21:24,950 --> 00:21:30,710
say well we know we've got these

468
00:21:26,450 --> 00:21:33,080
vertices right textured vertices and we

469
00:21:30,710 --> 00:21:36,500
know that we we want to write those to a

470
00:21:33,079 --> 00:21:40,369
particular location perhaps right so

471
00:21:36,500 --> 00:21:42,109
we've got like a vertex a pointer to

472
00:21:40,369 --> 00:21:47,658
where we're going to write the vertex is

473
00:21:42,109 --> 00:21:50,298
right and then we've got indices that

474
00:21:47,659 --> 00:21:52,250
we're going to write out here right and

475
00:21:50,298 --> 00:21:57,740
those are you six that's a you 16

476
00:21:52,250 --> 00:22:03,849
pointer right there it is and so we can

477
00:21:57,740 --> 00:22:08,920
define like a an output system here and

478
00:22:03,849 --> 00:22:12,289
furthermore we could almost we could

479
00:22:08,920 --> 00:22:14,360
even sort of bacon the notion that

480
00:22:12,289 --> 00:22:16,009
there's requesting happening there but

481
00:22:14,359 --> 00:22:18,709
this is basically just an output stream

482
00:22:16,009 --> 00:22:21,529
right so this is like I don't know a

483
00:22:18,710 --> 00:22:22,610
quat output or I don't know what we want

484
00:22:21,529 --> 00:22:26,029
to call this this is like geometry

485
00:22:22,609 --> 00:22:28,789
output right and so what we could do is

486
00:22:26,029 --> 00:22:32,000
just have one of these and we can just

487
00:22:28,789 --> 00:22:34,369
write quads to it and we will have

488
00:22:32,000 --> 00:22:37,130
different ways of producing that those

489
00:22:34,369 --> 00:22:38,659
quad writes but you don't have to call

490
00:22:37,130 --> 00:22:40,760
through tons of functions and do

491
00:22:38,660 --> 00:22:45,009
anything you can get your pointers first

492
00:22:40,759 --> 00:22:48,079
and then just do your stream out right

493
00:22:45,009 --> 00:22:50,150
so if we wanted to write a quad then you

494
00:22:48,079 --> 00:22:52,399
can see like okay so one way is to just

495
00:22:50,150 --> 00:22:55,519
write the quad direct and that's you

496
00:22:52,400 --> 00:22:59,300
would pass the all of the information

497
00:22:55,519 --> 00:23:02,000
right and then it would output this

498
00:22:59,299 --> 00:23:05,599
pattern you know what I mean so if we

499
00:23:02,000 --> 00:23:07,309
want to light index I think and texture

500
00:23:05,599 --> 00:23:09,019
index art there's only one of them and

501
00:23:07,309 --> 00:23:11,119
then the other things there's four of

502
00:23:09,019 --> 00:23:18,680
them you know what I mean so when we

503
00:23:11,119 --> 00:23:21,079
look at what push quad gives us if we

504
00:23:18,680 --> 00:23:24,140
wanted to do a right quad function what

505
00:23:21,079 --> 00:23:28,089
we would have is we have for each of

506
00:23:24,140 --> 00:23:32,330
these we've got the UVs I don't know

507
00:23:28,089 --> 00:23:35,569
yeah we've got the UVs

508
00:23:32,329 --> 00:23:38,869
and we've got the color right and those

509
00:23:35,569 --> 00:23:40,519
are you thirty twos the emissions don't

510
00:23:38,869 --> 00:23:46,909
I don't know why the emission is in

511
00:23:40,519 --> 00:23:48,470
there cuz that's not I'm not sure what

512
00:23:46,910 --> 00:23:49,730
that's doing there if the emission

513
00:23:48,470 --> 00:23:51,920
probably doesn't still need to be passed

514
00:23:49,730 --> 00:23:53,809
at all anyway so that's a little bit

515
00:23:51,920 --> 00:23:55,910
weird and so in here we just need the

516
00:23:53,809 --> 00:23:57,740
light index and the texture index right

517
00:23:55,910 --> 00:24:00,620
so those those two things light index

518
00:23:57,740 --> 00:24:05,089
and texture index are the only two

519
00:24:00,619 --> 00:24:07,339
things we would actually need there you

520
00:24:05,089 --> 00:24:11,089
know what I mean and so the base level

521
00:24:07,339 --> 00:24:13,250
of writing one of these looks like this

522
00:24:11,089 --> 00:24:16,759
because that's what actually goes into

523
00:24:13,250 --> 00:24:21,609
one of them and it can be done with none

524
00:24:16,759 --> 00:24:25,158
of these with none of these things

525
00:24:21,609 --> 00:24:27,288
being checked or done right and we can

526
00:24:25,159 --> 00:24:29,090
build up from there so that everyone can

527
00:24:27,288 --> 00:24:32,480
just stream out directly and this can

528
00:24:29,089 --> 00:24:33,888
even be welded in place as necessary so

529
00:24:32,480 --> 00:24:35,509
that it doesn't even need to call a

530
00:24:33,888 --> 00:24:37,869
function if it turns out that it's just

531
00:24:35,509 --> 00:24:41,569
better not to bother calling a function

532
00:24:37,869 --> 00:24:43,250
so you know that's another sort of good

533
00:24:41,569 --> 00:24:46,308
reason why I might want that to happen

534
00:24:43,250 --> 00:24:47,450
so I'm just gonna imagine that I have

535
00:24:46,308 --> 00:24:49,908
one of these I'm just kind of sort of

536
00:24:47,450 --> 00:24:54,759
push from there so I'm just gonna like

537
00:24:49,909 --> 00:24:59,809
set this stuff in here right there we go

538
00:24:54,759 --> 00:25:01,610
now in here we I guess that I look at it

539
00:24:59,808 --> 00:25:05,829
we also we didn't specify a normal for

540
00:25:01,609 --> 00:25:05,829
some reason but we do want normals right

541
00:25:11,919 --> 00:25:16,490
so this is actually we need we need the

542
00:25:14,028 --> 00:25:18,769
point the normal the UV and the color

543
00:25:16,490 --> 00:25:20,450
that's being specified per vertex always

544
00:25:18,769 --> 00:25:22,759
and then we just have a light index of

545
00:25:20,450 --> 00:25:27,710
texture index which is per quod as they

546
00:25:22,759 --> 00:25:33,378
go out right and so inside here this

547
00:25:27,710 --> 00:25:37,298
actually has to look like that and then

548
00:25:33,378 --> 00:25:37,298
in here it would just write those out so

549
00:25:44,019 --> 00:25:51,138
actually why am I even bothering that we

550
00:25:49,339 --> 00:25:53,288
don't care what that is so I can just do

551
00:25:51,138 --> 00:25:53,288
this

552
00:26:00,529 --> 00:26:04,769
so if you pass a geometry out it will

553
00:26:03,059 --> 00:26:07,139
get these it'll just push those out

554
00:26:04,769 --> 00:26:09,029
right and then you know this stuff we

555
00:26:07,140 --> 00:26:11,130
don't care about because that's again

556
00:26:09,029 --> 00:26:13,440
gonna be something that happens a little

557
00:26:11,130 --> 00:26:15,540
bit outside that although you know we

558
00:26:13,440 --> 00:26:18,390
could do this rebasing here because that

559
00:26:15,539 --> 00:26:21,899
is something that probably maybe wants

560
00:26:18,390 --> 00:26:25,290
to happen possibly so we may we may want

561
00:26:21,900 --> 00:26:31,800
to do that I don't know if we do if we

562
00:26:25,289 --> 00:26:33,899
don't let's say that we do and so this

563
00:26:31,799 --> 00:26:37,740
base index here that is just something

564
00:26:33,900 --> 00:26:42,200
that it's expected to know and so this

565
00:26:37,740 --> 00:26:42,200
right here will just be the base index

566
00:26:44,089 --> 00:26:58,109
and it will get written out right that

567
00:26:51,299 --> 00:27:02,190
seems plausible it seems plausible to me

568
00:26:58,109 --> 00:27:16,619
and then we know exactly how much to

569
00:27:02,190 --> 00:27:18,029
advance at any given time right oops so

570
00:27:16,619 --> 00:27:20,879
we can just kind of make that always

571
00:27:18,029 --> 00:27:22,410
work so you know if we wanted to do a

572
00:27:20,880 --> 00:27:24,240
stream out here and like I said we don't

573
00:27:22,410 --> 00:27:26,190
need to switch to this right away but

574
00:27:24,240 --> 00:27:28,109
just to give us an idea of what is

575
00:27:26,190 --> 00:27:29,789
supposed to be coming out here it would

576
00:27:28,109 --> 00:27:34,769
look something like that

577
00:27:29,789 --> 00:27:36,720
right and so when we actually go to we

578
00:27:34,769 --> 00:27:38,759
want all of our stuff to funnel down to

579
00:27:36,720 --> 00:27:40,519
something that can stream out in that

580
00:27:38,759 --> 00:27:43,170
fashion

581
00:27:40,519 --> 00:27:45,660
and we don't really need you know we

582
00:27:43,170 --> 00:27:51,900
don't we want to stop thinking of these

583
00:27:45,660 --> 00:27:53,279
things as we want to stop thinking these

584
00:27:51,900 --> 00:27:54,480
things is having to all call down

585
00:27:53,279 --> 00:27:57,210
themselves we want to be able to get

586
00:27:54,480 --> 00:27:59,370
that information kind of back in some

587
00:27:57,210 --> 00:28:02,309
kind of sensible way so that we can

588
00:27:59,369 --> 00:28:05,819
compute these values perhaps like you

589
00:28:02,309 --> 00:28:07,440
know using different utilities depending

590
00:28:05,819 --> 00:28:10,740
on the circumstance and then pass them

591
00:28:07,440 --> 00:28:11,580
down too right quad as necessary so the

592
00:28:10,740 --> 00:28:15,359
other way to look at the

593
00:28:11,579 --> 00:28:18,750
would be you know maybe we want this to

594
00:28:15,359 --> 00:28:21,000
to take actual textured vertices that it

595
00:28:18,750 --> 00:28:22,650
just copies or maybe we want the you

596
00:28:21,000 --> 00:28:24,210
know these things to be specified more

597
00:28:22,650 --> 00:28:26,220
succinctly I don't know but we want to

598
00:28:24,210 --> 00:28:30,900
look at stuff that's gonna produce that

599
00:28:26,220 --> 00:28:32,970
kind of a value right so moving forward

600
00:28:30,900 --> 00:28:35,519
from that if I go into asset rendering

601
00:28:32,970 --> 00:28:38,069
and I see what has to be computed here

602
00:28:35,519 --> 00:28:39,660
in order to get down to that push bitmap

603
00:28:38,069 --> 00:28:41,939
call right you can see all of this stuff

604
00:28:39,660 --> 00:28:45,320
happening here I want to start looking

605
00:28:41,940 --> 00:28:50,309
at what these are and getting those into

606
00:28:45,319 --> 00:28:55,169
some kind of a I want these to be things

607
00:28:50,309 --> 00:28:58,559
that can be used outside of this push

608
00:28:55,170 --> 00:29:00,180
bitmap call so I want to maybe introduce

609
00:28:58,559 --> 00:29:03,389
some other structure that can produce

610
00:29:00,180 --> 00:29:07,019
this information similarly like to this

611
00:29:03,390 --> 00:29:09,420
here for example so I think what we want

612
00:29:07,019 --> 00:29:12,000
is like a more complete version of this

613
00:29:09,420 --> 00:29:14,279
so instead of used bitmap dim that maybe

614
00:29:12,000 --> 00:29:16,740
is not going to be the thing anymore

615
00:29:14,279 --> 00:29:19,859
maybe we've got like a sprite parameter

616
00:29:16,740 --> 00:29:24,420
is sort of a thing like this something

617
00:29:19,859 --> 00:29:28,740
like that or sprite values and this

618
00:29:24,420 --> 00:29:31,410
would let us compute the basic values we

619
00:29:28,740 --> 00:29:32,880
need for the sprite in a number of

620
00:29:31,410 --> 00:29:37,950
different ways depending on what we were

621
00:29:32,880 --> 00:29:39,960
trying to do with it right and so

622
00:29:37,950 --> 00:29:41,610
looking through here at the kinds of

623
00:29:39,960 --> 00:29:44,279
ways that we want to be able to set this

624
00:29:41,609 --> 00:29:47,729
up I want to split this in two different

625
00:29:44,279 --> 00:29:49,009
ways of of having that happen I guess if

626
00:29:47,730 --> 00:29:51,329
that makes sense

627
00:29:49,009 --> 00:29:52,440
so let's take a look at how I might do

628
00:29:51,329 --> 00:29:54,210
that because like I said there's just a

629
00:29:52,440 --> 00:29:56,910
tremendous amount getting computed here

630
00:29:54,210 --> 00:29:58,980
and I want to simplify down how much of

631
00:29:56,910 --> 00:30:01,830
that has to happen and how control the

632
00:29:58,980 --> 00:30:03,509
book can be so you know we've got two

633
00:30:01,829 --> 00:30:06,960
basic ways that we want to render

634
00:30:03,509 --> 00:30:09,150
sprites one is flat and the other is

635
00:30:06,960 --> 00:30:10,890
upright and those have very different

636
00:30:09,150 --> 00:30:12,509
ways that they might compute things and

637
00:30:10,890 --> 00:30:16,500
if you look at the difference between

638
00:30:12,509 --> 00:30:23,420
them then really what we have is is sort

639
00:30:16,500 --> 00:30:24,750
of two ways of computing our x and

640
00:30:23,420 --> 00:30:28,740
y-axes

641
00:30:24,750 --> 00:30:30,029
or that's right and the Z bias is the

642
00:30:28,740 --> 00:30:33,089
other thing that gets computed

643
00:30:30,029 --> 00:30:35,879
potentially differently right and so

644
00:30:33,089 --> 00:30:38,279
when we go to produce these and we

645
00:30:35,880 --> 00:30:39,960
produce the V force we tack on that Z

646
00:30:38,279 --> 00:30:42,980
bias in a particular way right you can

647
00:30:39,960 --> 00:30:47,308
see that here so we might say we might

648
00:30:42,980 --> 00:30:57,690
say that our sprite values look

649
00:30:47,308 --> 00:31:03,058
something like this you know well you

650
00:30:57,690 --> 00:31:05,490
know that and then a Z bias this is what

651
00:31:03,058 --> 00:31:08,428
these things are computing here right

652
00:31:05,490 --> 00:31:15,529
that's what's going on when we compute

653
00:31:08,429 --> 00:31:18,210
these values and you know there's

654
00:31:15,529 --> 00:31:20,908
there's a couple different ways we could

655
00:31:18,210 --> 00:31:23,250
describe that and those ways would

656
00:31:20,909 --> 00:31:25,710
affect how we would then output it but

657
00:31:23,250 --> 00:31:31,619
you know if we imagine that these are

658
00:31:25,710 --> 00:31:32,700
computed independent of if we imagine

659
00:31:31,619 --> 00:31:34,500
these are computed independent of the

660
00:31:32,700 --> 00:31:37,259
alignment first and then the alignments

661
00:31:34,500 --> 00:31:38,669
interpreted in terms of them then that

662
00:31:37,259 --> 00:31:41,759
gives us a pretty good way of having

663
00:31:38,669 --> 00:31:44,280
like two calls one that's like produce

664
00:31:41,759 --> 00:31:46,829
sprite values from an upright sprite and

665
00:31:44,279 --> 00:31:49,109
one's produce sprite values from a non

666
00:31:46,829 --> 00:31:51,029
upright sprite and one's produce sprite

667
00:31:49,109 --> 00:31:53,579
values from a camera facing sprite and

668
00:31:51,029 --> 00:31:55,288
ones for not you know so we can add a

669
00:31:53,579 --> 00:31:57,119
lot of different functions that all

670
00:31:55,288 --> 00:31:58,829
produce the same intermediate data

671
00:31:57,119 --> 00:32:00,418
structure and then we just have

672
00:31:58,829 --> 00:32:02,369
something that takes that data structure

673
00:32:00,419 --> 00:32:04,320
and blows it out into one of the right

674
00:32:02,369 --> 00:32:06,168
you know quad writes you know what I

675
00:32:04,319 --> 00:32:10,079
mean

676
00:32:06,169 --> 00:32:12,659
so disentangling this and making it part

677
00:32:10,079 --> 00:32:18,089
of a coherent way of computing it is a

678
00:32:12,659 --> 00:32:23,309
good thing I think as far as as things

679
00:32:18,089 --> 00:32:25,288
go right so I think we want to kind of

680
00:32:23,308 --> 00:32:28,369
push in that direction so you know what

681
00:32:25,288 --> 00:32:28,369
I would want to do is say

682
00:32:39,519 --> 00:32:44,359
you know something like this and then

683
00:32:42,319 --> 00:32:50,898
we'd get those back so you would pass in

684
00:32:44,359 --> 00:32:54,288
to this routine some idea of what you

685
00:32:50,898 --> 00:32:56,388
were trying to do you know not in 3d

686
00:32:54,288 --> 00:32:59,929
necessarily and it would kind of give

687
00:32:56,388 --> 00:33:02,748
you back what was happening in 3d and

688
00:32:59,929 --> 00:33:05,749
then you could also produce those

689
00:33:02,749 --> 00:33:07,519
alignment values so for example you know

690
00:33:05,749 --> 00:33:11,499
then we could have a way of if you had

691
00:33:07,519 --> 00:33:19,190
one of these things you could say well a

692
00:33:11,499 --> 00:33:24,649
line point for and you could say you

693
00:33:19,190 --> 00:33:30,019
know or get P compute P maybe P from a

694
00:33:24,648 --> 00:33:32,268
line P or something like that so if you

695
00:33:30,019 --> 00:33:35,200
pass in like the basis of the sprite

696
00:33:32,269 --> 00:33:37,999
values that you're trying to compute

697
00:33:35,200 --> 00:33:40,519
with you're saying I'm computing with

698
00:33:37,999 --> 00:33:44,058
these sprite values here's my line

699
00:33:40,519 --> 00:33:46,399
percentage that I'm want you to

700
00:33:44,058 --> 00:33:49,278
interpret in this space give me back

701
00:33:46,398 --> 00:33:50,599
what it actually is that gives us kind

702
00:33:49,278 --> 00:33:53,450
of a nice way of computing that

703
00:33:50,599 --> 00:33:57,108
furthermore it allows us inside

704
00:33:53,450 --> 00:33:59,629
something like handmade entity instead

705
00:33:57,108 --> 00:34:03,259
of making this be some weird custom

706
00:33:59,628 --> 00:34:05,449
thing here we can have like piece values

707
00:34:03,259 --> 00:34:08,929
or piece sprites or whatever right and

708
00:34:05,450 --> 00:34:10,668
then that way we know that will just be

709
00:34:08,929 --> 00:34:14,599
storing the actual things the renderer

710
00:34:10,668 --> 00:34:16,460
you know utilities use and we can always

711
00:34:14,599 --> 00:34:19,639
ask for the P from line P using the

712
00:34:16,460 --> 00:34:21,769
correct value in that way and so that

713
00:34:19,639 --> 00:34:25,039
looks very compelling to me - I think

714
00:34:21,769 --> 00:34:29,079
that would be a nice way to do that so I

715
00:34:25,039 --> 00:34:29,079
think that all sounds pretty good and

716
00:34:30,219 --> 00:34:36,648
yeah like well I the only them a little

717
00:34:34,190 --> 00:34:37,730
unsure about is just like as we move

718
00:34:36,648 --> 00:34:39,588
forward with how we're doing our

719
00:34:37,730 --> 00:34:41,869
animation I don't know to what extent we

720
00:34:39,588 --> 00:34:44,989
really want the axes to be passed in two

721
00:34:41,869 --> 00:34:45,379
dimensions anymore so that like edges

722
00:34:44,989 --> 00:34:46,788
are the

723
00:34:45,378 --> 00:34:47,929
inputs this function I guess I'm a

724
00:34:46,789 --> 00:34:49,909
little concerned about but that that's

725
00:34:47,929 --> 00:34:51,950
fine because the inputs to it we can

726
00:34:49,909 --> 00:34:53,269
make multiple versions of these in

727
00:34:51,949 --> 00:34:54,768
experiment with different inputs and

728
00:34:53,268 --> 00:34:57,258
that sort of stuff anyway so that

729
00:34:54,768 --> 00:35:00,469
becomes a little bit easier as we go as

730
00:34:57,259 --> 00:35:05,210
well so that's probably not such a bad

731
00:35:00,469 --> 00:35:08,000
thing either way so looking at how this

732
00:35:05,210 --> 00:35:10,309
is working here let's start trying to

733
00:35:08,000 --> 00:35:12,440
make these routines make sense to us and

734
00:35:10,309 --> 00:35:16,910
see what we can do about how they

735
00:35:12,440 --> 00:35:19,338
actually get computed right so if I want

736
00:35:16,909 --> 00:35:20,989
to do sprite values for flat or sprite

737
00:35:19,338 --> 00:35:22,608
values for upright right if we're doing

738
00:35:20,989 --> 00:35:24,139
either of these sprite values for

739
00:35:22,608 --> 00:35:24,798
upright is the one we actually need at

740
00:35:24,139 --> 00:35:26,989
the moment

741
00:35:24,798 --> 00:35:29,119
so let's think about how we would break

742
00:35:26,989 --> 00:35:32,209
that down and then P from a line P is

743
00:35:29,119 --> 00:35:34,190
the other sort of half of that so let's

744
00:35:32,210 --> 00:35:35,929
say that I was going to go through it

745
00:35:34,190 --> 00:35:37,608
lets also split these into the order

746
00:35:35,929 --> 00:35:39,348
that they probably are meaningful which

747
00:35:37,608 --> 00:35:41,500
is that way I will just say that that's

748
00:35:39,349 --> 00:35:43,730
kind of our this is our more fundamental

749
00:35:41,500 --> 00:35:45,318
element here that will eventually be the

750
00:35:43,730 --> 00:35:46,548
way we do things and then these are

751
00:35:45,318 --> 00:35:49,940
things that just produce information

752
00:35:46,548 --> 00:35:58,329
that's used in that process so if we go

753
00:35:49,940 --> 00:36:03,950
ahead here like so here I can say well

754
00:35:58,329 --> 00:36:09,470
you know I know that's this part right

755
00:36:03,949 --> 00:36:11,509
here I know this stuff is happening any

756
00:36:09,469 --> 00:36:14,239
time I interpret an alignment point and

757
00:36:11,509 --> 00:36:17,298
I know this stuff is happening any time

758
00:36:14,239 --> 00:36:21,798
I do the sprite value so this actually

759
00:36:17,298 --> 00:36:26,179
splits in half depending on how these

760
00:36:21,798 --> 00:36:29,559
two things are going to pan out in here

761
00:36:26,179 --> 00:36:31,940
where we're doing the push bit map call

762
00:36:29,559 --> 00:36:33,950
again looking at these sorts of things

763
00:36:31,940 --> 00:36:36,858
they sort of split a little bit

764
00:36:33,949 --> 00:36:39,018
depending on what we're trying to do but

765
00:36:36,858 --> 00:36:43,538
generally speaking you know we'd be

766
00:36:39,018 --> 00:36:43,538
doing something like this here and

767
00:36:44,989 --> 00:36:51,489
now probably not a whole lot else right

768
00:36:57,338 --> 00:37:03,829
yeah so we'll kind of play with that as

769
00:37:00,500 --> 00:37:05,719
we go so in terms of producing one of

770
00:37:03,829 --> 00:37:07,670
these alignment points we want to point

771
00:37:05,719 --> 00:37:10,608
in three dimensions that's where we need

772
00:37:07,670 --> 00:37:12,619
to put something based on an alignment a

773
00:37:10,608 --> 00:37:14,420
piece of alignment information that's

774
00:37:12,619 --> 00:37:16,099
given that wants to be interpreted in

775
00:37:14,420 --> 00:37:19,039
terms of a particular set of sprite

776
00:37:16,099 --> 00:37:22,400
values then what we want to do here is

777
00:37:19,039 --> 00:37:25,099
sort of use the values themselves to

778
00:37:22,400 --> 00:37:27,800
compute what's going on so what we're

779
00:37:25,099 --> 00:37:30,380
going to need inside these values we

780
00:37:27,800 --> 00:37:34,820
know that these sizes are now baked into

781
00:37:30,380 --> 00:37:41,088
the actual values so in terms of how

782
00:37:34,820 --> 00:37:45,740
this shakes out it's really you know in

783
00:37:41,088 --> 00:37:48,409
terms of going along the that where that

784
00:37:45,739 --> 00:37:50,629
point is getting that point from the

785
00:37:48,409 --> 00:37:53,269
alignment P is really just going to be

786
00:37:50,630 --> 00:37:56,420
about using these x axis and so these

787
00:37:53,269 --> 00:37:59,300
are like scaled right I mean we could

788
00:37:56,420 --> 00:38:01,670
call this scaled x axis scaled y axis

789
00:37:59,300 --> 00:38:04,609
you know what I mean just to be clear

790
00:38:01,670 --> 00:38:06,380
about what it was and so in here we

791
00:38:04,608 --> 00:38:08,598
would say well whatever the scaled x

792
00:38:06,380 --> 00:38:16,119
axis is that's how far you know you

793
00:38:08,599 --> 00:38:22,760
would go I guess I should just do that

794
00:38:16,119 --> 00:38:25,789
and then obviously I have a scaled y

795
00:38:22,760 --> 00:38:31,240
axis and adding to those we just have

796
00:38:25,789 --> 00:38:31,239
the base P that we need to start with

797
00:38:35,360 --> 00:38:41,190
so that would give us an alignment point

798
00:38:38,159 --> 00:38:43,949
in world space and we could also say

799
00:38:41,190 --> 00:38:49,230
like world P from the line P you know

800
00:38:43,949 --> 00:38:51,449
what I mean and that would give us that

801
00:38:49,230 --> 00:38:56,510
gives us back where in in space that

802
00:38:51,449 --> 00:38:56,509
thing actually is you know what I mean

803
00:38:59,630 --> 00:39:04,530
so once we know like one of those points

804
00:39:02,550 --> 00:39:06,750
we also have another thing that we would

805
00:39:04,530 --> 00:39:10,260
want to do which is when we are figuring

806
00:39:06,750 --> 00:39:12,900
out where one of these things is we then

807
00:39:10,260 --> 00:39:15,720
also need to be able to compute what the

808
00:39:12,900 --> 00:39:19,500
sprites actual rectangle would be from

809
00:39:15,719 --> 00:39:22,618
there right so there's a couple

810
00:39:19,500 --> 00:39:26,400
confusing things about this right this

811
00:39:22,619 --> 00:39:28,700
only works if the alignment point thing

812
00:39:26,400 --> 00:39:31,530
like these are based on percentages

813
00:39:28,699 --> 00:39:34,589
which maybe was stupid like I don't know

814
00:39:31,530 --> 00:39:37,170
like that could be dumb depends on how

815
00:39:34,590 --> 00:39:39,690
you want to think about it but probably

816
00:39:37,170 --> 00:39:42,119
not so when we compute one of these

817
00:39:39,690 --> 00:39:44,880
sprang values for up right you know and

818
00:39:42,119 --> 00:39:47,100
it computes what's going on here this

819
00:39:44,880 --> 00:39:50,910
hasn't been offset by any particular

820
00:39:47,099 --> 00:39:52,710
dimension you know what I mean so we

821
00:39:50,909 --> 00:39:55,589
could roll we could do this one of two

822
00:39:52,710 --> 00:39:58,320
ways we can either set the sprite values

823
00:39:55,590 --> 00:39:59,820
based on just no dimension whatsoever

824
00:39:58,320 --> 00:40:03,210
and then we just have like the center

825
00:39:59,820 --> 00:40:05,100
point basically or rather we have like

826
00:40:03,210 --> 00:40:08,970
the point where things would be aligned

827
00:40:05,099 --> 00:40:11,009
to plus the axes and then at some point

828
00:40:08,969 --> 00:40:13,889
we shift it and we met like we make a

829
00:40:11,010 --> 00:40:21,720
second call that's like shift for this

830
00:40:13,889 --> 00:40:24,358
you know dimension right and yeah I'm

831
00:40:21,719 --> 00:40:32,639
not sure which way makes the most sense

832
00:40:24,358 --> 00:40:34,920
there I want to say that we probably

833
00:40:32,639 --> 00:40:36,900
just want to make it I mean I I want to

834
00:40:34,920 --> 00:40:39,780
say we probably want to do this so you

835
00:40:36,900 --> 00:40:41,820
always actually just produce the fully

836
00:40:39,780 --> 00:40:44,700
scaled rectangle here and you just

837
00:40:41,820 --> 00:40:46,769
interpret it out of that I want to say

838
00:40:44,699 --> 00:40:48,029
that I don't know that could be wrong

839
00:40:46,769 --> 00:40:53,849
certainly

840
00:40:48,030 --> 00:40:56,910
but you know I I can only extrapolate so

841
00:40:53,849 --> 00:40:59,219
far into the future and guess what's

842
00:40:56,909 --> 00:41:01,619
going to happen so when you pass bright

843
00:40:59,219 --> 00:41:03,779
values for up right what you would be

844
00:41:01,619 --> 00:41:05,880
doing here is you would also you'd be

845
00:41:03,780 --> 00:41:10,470
giving it also in alignment P which is

846
00:41:05,880 --> 00:41:12,900
to say what is the alignment P for you

847
00:41:10,469 --> 00:41:15,299
know your alignment purposes and you

848
00:41:12,900 --> 00:41:19,470
would be going backwards by those

849
00:41:15,300 --> 00:41:22,769
percentages along your computed axes

850
00:41:19,469 --> 00:41:25,079
right so if we look at what's gonna

851
00:41:22,769 --> 00:41:27,300
happen there you would say all right

852
00:41:25,079 --> 00:41:32,369
I've got a dimension for an upright

853
00:41:27,300 --> 00:41:34,380
sprite I've got a base point which is

854
00:41:32,369 --> 00:41:36,359
whatever I'm aligning around so that

855
00:41:34,380 --> 00:41:39,990
came from like some others right or the

856
00:41:36,360 --> 00:41:41,670
world and then so when I actually go

857
00:41:39,989 --> 00:41:45,299
through here now I need to compute that

858
00:41:41,670 --> 00:41:50,490
entire thing so the size here is

859
00:41:45,300 --> 00:41:52,650
actually the dim right and the min P in

860
00:41:50,489 --> 00:41:56,509
this case is going to go backwards along

861
00:41:52,650 --> 00:42:00,539
those axes so we would say the base P

862
00:41:56,510 --> 00:42:03,090
minus the align P times the dim is

863
00:42:00,539 --> 00:42:06,809
actually what we're doing so we would

864
00:42:03,090 --> 00:42:08,820
call that I don't know what like a line

865
00:42:06,809 --> 00:42:11,309
offset or something like that and that

866
00:42:08,820 --> 00:42:14,970
would just be whatever the dimensions of

867
00:42:11,309 --> 00:42:17,820
this thing are times that alignment P

868
00:42:14,969 --> 00:42:19,949
that we're using to align it right we

869
00:42:17,820 --> 00:42:22,380
would first compute what those are and

870
00:42:19,949 --> 00:42:27,049
then when we want to compute our minimum

871
00:42:22,380 --> 00:42:27,050
P it's just going to be that offset now

872
00:42:30,199 --> 00:42:35,789
once we computed that min P this primo

873
00:42:34,050 --> 00:42:40,590
color here is probably not gonna whoops

874
00:42:35,789 --> 00:42:42,509
not gonna stay around um once we do that

875
00:42:40,590 --> 00:42:43,829
we now have to sort of say well what's

876
00:42:42,510 --> 00:42:46,140
that where's that dimension coming from

877
00:42:43,829 --> 00:42:48,210
are we actually gonna do these things

878
00:42:46,139 --> 00:42:51,239
and again I think that wants to be

879
00:42:48,210 --> 00:42:53,309
something that's that's a separate step

880
00:42:51,239 --> 00:42:54,509
and you can see me sort of separating

881
00:42:53,309 --> 00:42:57,329
out all these steps that's intentional

882
00:42:54,510 --> 00:42:58,830
I'm trying to disaggregate all these

883
00:42:57,329 --> 00:43:00,329
routines because one of things that

884
00:42:58,829 --> 00:43:01,079
happens and you could you saw this

885
00:43:00,329 --> 00:43:02,789
happen on a rent

886
00:43:01,079 --> 00:43:04,980
a bunch and so what I'm doing now is I'm

887
00:43:02,789 --> 00:43:07,019
trying to get more systemic and clean

888
00:43:04,980 --> 00:43:12,059
that part of a code up now that we see

889
00:43:07,019 --> 00:43:14,099
what's happening right we ended up with

890
00:43:12,059 --> 00:43:16,199
a proliferation of rendering calls

891
00:43:14,099 --> 00:43:19,110
because the people who are calling it

892
00:43:16,199 --> 00:43:20,639
have different needs and if you have

893
00:43:19,110 --> 00:43:22,829
several different steps that your

894
00:43:20,639 --> 00:43:24,779
renderer calls do then you're gonna end

895
00:43:22,829 --> 00:43:26,460
up if everyone needs different

896
00:43:24,780 --> 00:43:28,470
combinations of those steps you're gonna

897
00:43:26,460 --> 00:43:32,369
end up with a nasty N squared problem

898
00:43:28,469 --> 00:43:34,589
where you know if there's step ABCDE and

899
00:43:32,369 --> 00:43:36,239
F and each one of them can be done two

900
00:43:34,590 --> 00:43:38,160
ways you now have two to the fifth

901
00:43:36,239 --> 00:43:40,319
different render calls you need to make

902
00:43:38,159 --> 00:43:42,149
or like parameters that's like bool yes

903
00:43:40,320 --> 00:43:43,620
to do this don't do that right and so

904
00:43:42,150 --> 00:43:45,750
what I'm trying to do is extract those

905
00:43:43,619 --> 00:43:48,119
steps out into something that each

906
00:43:45,750 --> 00:43:50,010
person who calls it can just call the

907
00:43:48,119 --> 00:43:53,009
ones they need in the way they need and

908
00:43:50,010 --> 00:43:54,900
have that cascade into the final result

909
00:43:53,010 --> 00:43:56,520
in a way that makes it so that we don't

910
00:43:54,900 --> 00:43:58,380
have to have different render calls for

911
00:43:56,519 --> 00:44:00,659
all the combinations you just write

912
00:43:58,380 --> 00:44:06,960
whichever combination you wanted into

913
00:44:00,659 --> 00:44:08,909
the call site right so I mean here what

914
00:44:06,960 --> 00:44:13,579
I want to do is make a different call

915
00:44:08,909 --> 00:44:18,569
that's called something like to mention

916
00:44:13,579 --> 00:44:21,750
sprite Jim from world height like that

917
00:44:18,570 --> 00:44:23,970
so we would pass the height and then

918
00:44:21,750 --> 00:44:26,489
here we would like compute what it

919
00:44:23,969 --> 00:44:31,859
should be so what we'll do is we'll say

920
00:44:26,489 --> 00:44:34,589
give me the render texture and all

921
00:44:31,860 --> 00:44:37,079
compute that for you so again you can

922
00:44:34,590 --> 00:44:39,000
see breaking that apart really helpful

923
00:44:37,079 --> 00:44:40,590
here because now only people who want to

924
00:44:39,000 --> 00:44:44,400
do certain things have to call these

925
00:44:40,590 --> 00:44:46,920
certain pieces right so that part is now

926
00:44:44,400 --> 00:44:50,180
a separate pass that'll just do the

927
00:44:46,920 --> 00:44:50,180
right thing in that case

928
00:45:03,800 --> 00:45:09,300
so once we have this right dim from real

929
00:45:07,170 --> 00:45:11,250
tight stuff working that way then we

930
00:45:09,300 --> 00:45:13,650
know we can just pass in the dim here

931
00:45:11,250 --> 00:45:17,989
which is effectively the world dim so

932
00:45:13,650 --> 00:45:17,990
it's supposed to be or I should say

933
00:45:21,199 --> 00:45:31,319
something like that right hopefully that

934
00:45:26,880 --> 00:45:33,690
makes some sense and so all of that

935
00:45:31,320 --> 00:45:42,870
stuff should now just be okay

936
00:45:33,690 --> 00:45:45,090
now we don't actually have the we

937
00:45:42,869 --> 00:45:49,349
probably need an additional value here

938
00:45:45,090 --> 00:45:51,240
right which is going to be the when we

939
00:45:49,349 --> 00:45:52,920
want to apply those alignment point

940
00:45:51,239 --> 00:45:54,209
scales so those are gonna have to thread

941
00:45:52,920 --> 00:45:56,250
through here but I'm leaving those out

942
00:45:54,210 --> 00:45:57,510
for now because I'm gonna push those

943
00:45:56,250 --> 00:45:59,219
through in a separate pass and if we

944
00:45:57,510 --> 00:46:02,310
need to break things up further at that

945
00:45:59,219 --> 00:46:04,500
point we will okay

946
00:46:02,309 --> 00:46:06,210
so let's keep pushing here we know

947
00:46:04,500 --> 00:46:07,710
that's correct we're ignoring this for

948
00:46:06,210 --> 00:46:09,179
now because we don't actually need to do

949
00:46:07,710 --> 00:46:11,039
it in fact let me just get rid of it

950
00:46:09,179 --> 00:46:13,469
because we'll add it when and if we need

951
00:46:11,039 --> 00:46:21,000
it so we're really just gonna be talking

952
00:46:13,469 --> 00:46:23,399
about these these pieces here right so

953
00:46:21,000 --> 00:46:25,500
inside the sprite values thing that's

954
00:46:23,400 --> 00:46:27,889
going to give us our minimum prz bias

955
00:46:25,500 --> 00:46:32,449
and stuff here we're computing this way

956
00:46:27,889 --> 00:46:34,469
when we're saying 0.25 times the height

957
00:46:32,449 --> 00:46:35,939
one thing that's a little annoying about

958
00:46:34,469 --> 00:46:39,299
that is it means we have to know what

959
00:46:35,940 --> 00:46:44,099
the height is and so being able to pass

960
00:46:39,300 --> 00:46:46,200
those yeah I mean well I also don't

961
00:46:44,099 --> 00:46:51,269
really know is that really what we want

962
00:46:46,199 --> 00:46:54,259
to do because that's a little confusing

963
00:46:51,269 --> 00:46:54,259
in and of itself

964
00:46:58,309 --> 00:47:03,739
let's let's table that for one second

965
00:47:00,530 --> 00:47:05,030
while we think about this some more so

966
00:47:03,739 --> 00:47:06,739
looking at how we're doing things here

967
00:47:05,030 --> 00:47:08,330
like let's ignore the Z bias because

968
00:47:06,739 --> 00:47:10,250
it's a different thing right so let's

969
00:47:08,329 --> 00:47:11,809
just say okay the Z bias is something

970
00:47:10,250 --> 00:47:15,139
that we're gonna have to compute a

971
00:47:11,809 --> 00:47:17,119
little later on here's how we were

972
00:47:15,139 --> 00:47:20,949
computing this value I want to say we

973
00:47:17,119 --> 00:47:20,949
also had a different way of computing it

974
00:47:24,610 --> 00:47:32,180
so here's a different way that we were

975
00:47:27,409 --> 00:47:40,639
computing it for a sprite fit for facing

976
00:47:32,179 --> 00:47:43,129
sprites totally different right and you

977
00:47:40,639 --> 00:47:47,480
can see how it's it's using the world my

978
00:47:43,130 --> 00:47:49,880
like so again like this this may be what

979
00:47:47,480 --> 00:47:51,440
we really want more so this was the one

980
00:47:49,880 --> 00:47:52,960
we developed for the renderer standalone

981
00:47:51,440 --> 00:47:55,159
and I think it's probably just better

982
00:47:52,960 --> 00:47:59,720
right than this stuff because we tuned

983
00:47:55,159 --> 00:48:02,599
it more and it works for even if the

984
00:47:59,719 --> 00:48:06,909
camera was to rotate which our old way

985
00:48:02,599 --> 00:48:09,829
did not so we probably just want this

986
00:48:06,909 --> 00:48:12,949
right we probably just want to do just

987
00:48:09,829 --> 00:48:17,059
what this does that's my assumption

988
00:48:12,949 --> 00:48:28,909
anyway so let's just grab that because

989
00:48:17,059 --> 00:48:31,670
it's better and hey we even have the we

990
00:48:28,909 --> 00:48:33,500
even have a Z bias computation that just

991
00:48:31,670 --> 00:48:37,960
works directly off of the world dim as

992
00:48:33,500 --> 00:48:41,210
well so that's kind of nice too so

993
00:48:37,960 --> 00:48:43,480
problems with this because I could see

994
00:48:41,210 --> 00:48:43,480
some

995
00:48:48,889 --> 00:48:57,019
I don't think that's actually what we

996
00:48:54,079 --> 00:49:03,920
want what we want to do here is we want

997
00:48:57,019 --> 00:49:05,480
to see how when we set the Z bias we

998
00:49:03,920 --> 00:49:08,510
really just want to see how tall this

999
00:49:05,480 --> 00:49:09,920
thing's gonna end up being and I feel

1000
00:49:08,510 --> 00:49:13,640
like that almost wants to just be a

1001
00:49:09,920 --> 00:49:16,849
function of the actual axes like plus

1002
00:49:13,639 --> 00:49:18,859
the Z buys yeah I feel like the Z bias

1003
00:49:16,849 --> 00:49:21,319
really just needs to be computed in a

1004
00:49:18,860 --> 00:49:23,570
way that takes into account because the

1005
00:49:21,320 --> 00:49:26,330
sprite could look rotate around you know

1006
00:49:23,570 --> 00:49:28,280
and if it rotates around you don't want

1007
00:49:26,329 --> 00:49:29,869
the bottom points to have the Z bias

1008
00:49:28,280 --> 00:49:32,510
value is applied to them right you want

1009
00:49:29,869 --> 00:49:36,380
the top points to have that and so in

1010
00:49:32,510 --> 00:49:39,110
terms of biasing the Z to be different

1011
00:49:36,380 --> 00:49:41,000
than what it would normally be I feel

1012
00:49:39,110 --> 00:49:44,539
like in that case you really need to

1013
00:49:41,000 --> 00:49:46,340
actually be measuring where these things

1014
00:49:44,539 --> 00:49:49,009
are relative to the base of the sprite

1015
00:49:46,340 --> 00:49:52,700
and it's that measurement that you would

1016
00:49:49,010 --> 00:50:04,190
like to be doing for each of the

1017
00:49:52,699 --> 00:50:06,529
vertices really I mean I really think

1018
00:50:04,190 --> 00:50:08,889
that's I think that's kind of how it has

1019
00:50:06,530 --> 00:50:08,890
to work

1020
00:50:13,280 --> 00:50:17,720
I mean I hate to overcomplicate it but I

1021
00:50:16,010 --> 00:50:19,820
mean I really do think that's how that

1022
00:50:17,719 --> 00:50:22,069
has to work and figuring out where that

1023
00:50:19,820 --> 00:50:25,100
Z bias would be is kind of like has to

1024
00:50:22,070 --> 00:50:26,809
be taken into account you know and so

1025
00:50:25,099 --> 00:50:29,420
for in some sense I what guess what I'm

1026
00:50:26,809 --> 00:50:31,730
saying is I think it's really that where

1027
00:50:29,420 --> 00:50:36,139
when you compute what these are you say

1028
00:50:31,730 --> 00:50:39,320
for whatever you're for whatever you

1029
00:50:36,139 --> 00:50:41,659
wanted your Z biases to be they're all

1030
00:50:39,320 --> 00:50:45,370
actually their real parameters that

1031
00:50:41,659 --> 00:50:47,809
actually get G op geometry of their own

1032
00:50:45,369 --> 00:50:52,549
and they get multiplied out and applied

1033
00:50:47,809 --> 00:50:54,949
and I mean you could do something

1034
00:50:52,550 --> 00:50:57,380
different there you could instead

1035
00:50:54,949 --> 00:50:59,000
specify a measurement point pass that to

1036
00:50:57,380 --> 00:51:02,860
the vertex shader and let the vertex

1037
00:50:59,000 --> 00:51:05,440
shader use the measurement from the

1038
00:51:02,860 --> 00:51:19,430
measuring point to the point in question

1039
00:51:05,440 --> 00:51:22,820
to produce a Z biased value but that

1040
00:51:19,429 --> 00:51:28,639
doesn't seem to be the smartest thing if

1041
00:51:22,820 --> 00:51:30,440
I'm honest about it you know so I don't

1042
00:51:28,639 --> 00:51:37,819
know that I think that's a particularly

1043
00:51:30,440 --> 00:51:39,590
good idea it's probably not so what I'm

1044
00:51:37,820 --> 00:51:43,220
going to assume is that if we're placing

1045
00:51:39,590 --> 00:51:45,860
something on the base point then the Z

1046
00:51:43,219 --> 00:51:48,529
values the Z bias that we want to have

1047
00:51:45,860 --> 00:51:51,579
on that base point that's going to be

1048
00:51:48,530 --> 00:51:51,580
like the

1049
00:52:02,369 --> 00:52:07,599
I'm gonna have to do this on the

1050
00:52:04,150 --> 00:52:09,760
blackboard cuz like I'm having trouble

1051
00:52:07,599 --> 00:52:11,589
even explaining to myself the

1052
00:52:09,760 --> 00:52:13,120
complications of how the Z bias would

1053
00:52:11,590 --> 00:52:15,910
have to work in order to do it right so

1054
00:52:13,119 --> 00:52:24,579
just want to like explain it to myself

1055
00:52:15,909 --> 00:52:26,769
and also to to you so if you look at

1056
00:52:24,579 --> 00:52:31,119
what we're talking about here you know

1057
00:52:26,769 --> 00:52:34,929
here's a square and we place a sprite

1058
00:52:31,119 --> 00:52:36,670
card on to the square right in the naive

1059
00:52:34,929 --> 00:52:38,919
case that we were doing before we just

1060
00:52:36,670 --> 00:52:40,809
said well you know the Z bias down here

1061
00:52:38,920 --> 00:52:45,880
will be zero and the Z bias up here will

1062
00:52:40,809 --> 00:52:48,009
be like 0.25 times the height right and

1063
00:52:45,880 --> 00:52:50,500
so that just gave you a way of saying

1064
00:52:48,010 --> 00:52:53,440
well you know since our perspective

1065
00:52:50,500 --> 00:52:56,949
tends to be fairly top-down you know

1066
00:52:53,440 --> 00:52:58,900
like it's it's really like that and so

1067
00:52:56,949 --> 00:53:01,119
this sort of stuff the walls are pretty

1068
00:52:58,900 --> 00:53:03,190
steep here when we actually put a sprite

1069
00:53:01,119 --> 00:53:04,779
in there this part here would normally

1070
00:53:03,190 --> 00:53:06,369
clip through the wall and we don't want

1071
00:53:04,780 --> 00:53:07,030
it to so we want it to show up higher

1072
00:53:06,369 --> 00:53:09,279
right

1073
00:53:07,030 --> 00:53:11,170
so the naive case that works just fine

1074
00:53:09,280 --> 00:53:13,060
but then I guess what I'm saying is

1075
00:53:11,170 --> 00:53:15,579
suppose this thing we're spinning

1076
00:53:13,059 --> 00:53:19,449
so suppose we were just rotating it

1077
00:53:15,579 --> 00:53:22,659
around and we would end up with a sprite

1078
00:53:19,449 --> 00:53:24,969
that maybe looked like this and now the

1079
00:53:22,659 --> 00:53:27,190
Z bias is actually going sort of the

1080
00:53:24,969 --> 00:53:29,230
wrong way right the Z bias is going this

1081
00:53:27,190 --> 00:53:30,820
way which is sideways when really what

1082
00:53:29,230 --> 00:53:33,070
it should be is going up and furthermore

1083
00:53:30,820 --> 00:53:35,380
this shouldn't be zero on Z bias this

1084
00:53:33,070 --> 00:53:39,070
should actually be the higher value this

1085
00:53:35,380 --> 00:53:42,539
should be zero right but this should be

1086
00:53:39,070 --> 00:53:44,950
full right this should be the high value

1087
00:53:42,539 --> 00:53:46,690
here this would get a high value it

1088
00:53:44,949 --> 00:53:48,849
shouldn't this should still get zero

1089
00:53:46,690 --> 00:53:50,740
probably or close to it maybe just a

1090
00:53:48,849 --> 00:53:55,000
little bit right and this one should be

1091
00:53:50,739 --> 00:53:56,709
the full value so in terms of biasing to

1092
00:53:55,000 --> 00:53:58,599
Z right you can kind of see why I'm

1093
00:53:56,710 --> 00:54:01,539
concerned about that what we really want

1094
00:53:58,599 --> 00:54:04,420
to do is have some some measurement

1095
00:54:01,539 --> 00:54:06,279
about you know where the Z values are

1096
00:54:04,420 --> 00:54:09,700
supposed to be set bias wives now it

1097
00:54:06,280 --> 00:54:13,210
gets worse than that that's not even the

1098
00:54:09,699 --> 00:54:14,799
illness of it so the other problem that

1099
00:54:13,210 --> 00:54:16,210
we have is when you look at what's going

1100
00:54:14,800 --> 00:54:21,070
to happen when one of these things is

1101
00:54:16,210 --> 00:54:23,829
sitting on a position right so let's

1102
00:54:21,070 --> 00:54:26,830
suppose we take like what one of these

1103
00:54:23,829 --> 00:54:29,559
things looks like let's say the cat body

1104
00:54:26,829 --> 00:54:31,299
so let's say that's a cat body and so we

1105
00:54:29,559 --> 00:54:35,409
think about what the cat eye looks like

1106
00:54:31,300 --> 00:54:37,990
in 3d it's sitting on a point so even

1107
00:54:35,409 --> 00:54:40,779
though we see a sprite that just is like

1108
00:54:37,989 --> 00:54:42,369
this bitmap like that we imagine that

1109
00:54:40,780 --> 00:54:45,160
the point that it's sitting on is like

1110
00:54:42,369 --> 00:54:48,130
back here so then when you look at like

1111
00:54:45,159 --> 00:54:50,789
what the square actually is that it's

1112
00:54:48,130 --> 00:54:53,039
sitting on it's like it's that right

1113
00:54:50,789 --> 00:54:55,809
that is what would snap to the center

1114
00:54:53,039 --> 00:54:58,599
that means there's actually a little bit

1115
00:54:55,809 --> 00:55:03,039
of sprite that extends below the point

1116
00:54:58,599 --> 00:55:08,440
and the crucial thing for us is we don't

1117
00:55:03,039 --> 00:55:12,400
want that right to clip down into this

1118
00:55:08,440 --> 00:55:17,710
surface so we actually want to set the Z

1119
00:55:12,400 --> 00:55:22,930
value of this to be in front of whatever

1120
00:55:17,710 --> 00:55:26,650
this thing is makes sense so we don't

1121
00:55:22,929 --> 00:55:33,839
want it to clip down into the bottom

1122
00:55:26,650 --> 00:55:37,260
piece and so that's really complicated

1123
00:55:33,840 --> 00:55:37,260
you know what I mean

1124
00:55:37,710 --> 00:55:48,490
that's really pretty darn complicated

1125
00:55:41,079 --> 00:55:50,259
and it's so complicated in fact that I

1126
00:55:48,489 --> 00:55:54,759
think you might even say that it's

1127
00:55:50,260 --> 00:55:56,200
technically impossible if I may the

1128
00:55:54,760 --> 00:55:57,790
reason for that is that if you think

1129
00:55:56,199 --> 00:55:59,859
about what this means

1130
00:55:57,789 --> 00:56:03,219
if the sprite is supposed to be placed

1131
00:55:59,860 --> 00:56:04,960
here but this comes out to here you

1132
00:56:03,219 --> 00:56:06,250
don't have the information necessary to

1133
00:56:04,960 --> 00:56:08,470
know what would happen if there was

1134
00:56:06,250 --> 00:56:11,260
another sprite placed here because

1135
00:56:08,469 --> 00:56:13,509
without actual Z depth information for

1136
00:56:11,260 --> 00:56:16,660
the sprite you can't tell where it would

1137
00:56:13,510 --> 00:56:19,180
actually be you don't know who's in

1138
00:56:16,659 --> 00:56:22,920
front of whose so really like unless you

1139
00:56:19,179 --> 00:56:22,919
had a depth buffer or purse right

1140
00:56:25,840 --> 00:56:34,670
that actually described the fatness of

1141
00:56:29,510 --> 00:56:36,260
the cat all bets are off right it's not

1142
00:56:34,670 --> 00:56:37,460
actually going to you're not actually

1143
00:56:36,260 --> 00:56:41,240
going to be able to compute the right

1144
00:56:37,460 --> 00:56:43,190
value so the best we can do it's I think

1145
00:56:41,239 --> 00:56:45,259
it's impossible to do something correct

1146
00:56:43,190 --> 00:56:46,820
here the best we can do is just do

1147
00:56:45,260 --> 00:56:49,010
something that will be artistically

1148
00:56:46,820 --> 00:56:53,360
correct for what we most of the time

1149
00:56:49,010 --> 00:56:54,830
want right and that's going to be we

1150
00:56:53,360 --> 00:56:59,840
want this thing to appear below the

1151
00:56:54,829 --> 00:57:02,269
square on which it is placed and so if

1152
00:56:59,840 --> 00:57:06,590
we assume that that was going to look

1153
00:57:02,269 --> 00:57:09,230
like this or whatever then we just want

1154
00:57:06,590 --> 00:57:11,329
to shift it backwards by however much

1155
00:57:09,230 --> 00:57:14,389
that alignment is we want to shift it

1156
00:57:11,329 --> 00:57:17,269
into a z plane that would allow it to

1157
00:57:14,389 --> 00:57:20,750
look like it was essentially sitting

1158
00:57:17,269 --> 00:57:25,309
that much further forward probably you

1159
00:57:20,750 --> 00:57:32,110
know what I mean so the Z values of this

1160
00:57:25,309 --> 00:57:32,110
sprite as it goes wants to do two things

1161
00:57:40,108 --> 00:57:46,989
yeah I mean I guess you just want to set

1162
00:57:43,179 --> 00:57:49,328
the Z bias to be whatever that Z value

1163
00:57:46,989 --> 00:57:55,149
would have been for the point that's

1164
00:57:49,329 --> 00:57:58,089
like over here you know what I mean I

1165
00:57:55,150 --> 00:58:01,869
think that's really all you want so

1166
00:57:58,088 --> 00:58:05,409
another way to say that would be yeah

1167
00:58:01,869 --> 00:58:07,630
like it's really kind of tricky if you

1168
00:58:05,409 --> 00:58:10,960
were to take the plane on which the

1169
00:58:07,630 --> 00:58:13,599
sprite is is sitting and thankfully we

1170
00:58:10,960 --> 00:58:17,679
can rigidly define that plane right it's

1171
00:58:13,599 --> 00:58:20,048
the XY plane so it's the plane with Z as

1172
00:58:17,679 --> 00:58:21,548
the normal that is always what things

1173
00:58:20,048 --> 00:58:25,210
are sitting on in our world because

1174
00:58:21,548 --> 00:58:30,969
gravity goes one direction one direction

1175
00:58:25,210 --> 00:58:34,269
the band so Z in this case is always the

1176
00:58:30,969 --> 00:58:36,548
the measure it always does point up and

1177
00:58:34,269 --> 00:58:38,769
so if something was sitting on one of

1178
00:58:36,548 --> 00:58:40,690
these and then we want to shift it down

1179
00:58:38,769 --> 00:58:46,690
due to alignment so that it actually

1180
00:58:40,690 --> 00:58:49,088
appears to be there right like that then

1181
00:58:46,690 --> 00:58:51,579
the question is what would the Z value

1182
00:58:49,088 --> 00:58:54,068
have to be at this point what is the

1183
00:58:51,579 --> 00:58:56,798
actual point here that we would want to

1184
00:58:54,068 --> 00:58:58,269
transform for Z purposes in order to

1185
00:58:56,798 --> 00:59:00,400
determine what the Z bar for values

1186
00:58:58,269 --> 00:59:02,679
should be for this point given that we

1187
00:59:00,400 --> 00:59:07,869
know we're going down that much on the

1188
00:59:02,679 --> 00:59:11,199
screen axis right so effectively what

1189
00:59:07,869 --> 00:59:15,358
that is is it's a projection back right

1190
00:59:11,199 --> 00:59:19,689
it's a it's a back projection from

1191
00:59:15,358 --> 00:59:23,409
wherever the bottom point is back

1192
00:59:19,690 --> 00:59:30,130
through intersecting with the the XY

1193
00:59:23,409 --> 00:59:31,598
plane rooted at that point right another

1194
00:59:30,130 --> 00:59:33,250
way to say that would be since we know

1195
00:59:31,599 --> 00:59:34,960
we're rooted at this point anyway and

1196
00:59:33,250 --> 00:59:37,420
the aligned values going there we know

1197
00:59:34,960 --> 00:59:39,309
that we have at whatever the root point

1198
00:59:37,420 --> 00:59:41,318
is we know that we have the the downward

1199
00:59:39,309 --> 00:59:44,349
vector whatever that downward vector is

1200
00:59:41,318 --> 00:59:47,170
going to be we know that we have just

1201
00:59:44,349 --> 00:59:49,210
that vector if we go down there and then

1202
00:59:47,170 --> 00:59:51,170
project it onto the XY plane rooted

1203
00:59:49,210 --> 00:59:53,750
about

1204
00:59:51,170 --> 00:59:59,170
that's what the z-value would want to be

1205
00:59:53,750 --> 01:00:02,119
to prevent that interpenetration right

1206
00:59:59,170 --> 01:00:06,710
well to prevent the z-buffer from

1207
01:00:02,119 --> 01:00:10,869
clipping it away um so yeah like that's

1208
01:00:06,710 --> 01:00:10,869
pretty nasty if you think about it

1209
01:00:16,329 --> 01:00:27,250
that's a pretty nasty computation to

1210
01:00:24,048 --> 01:00:27,250
want to be doing

1211
01:00:31,469 --> 01:00:36,000
I don't know if I'm overthinking that or

1212
01:00:33,420 --> 01:00:37,920
not but I don't see a lot of other ways

1213
01:00:36,000 --> 01:00:39,480
you would do it I think the way that

1214
01:00:37,920 --> 01:00:40,950
people normally handle this is they

1215
01:00:39,480 --> 01:00:43,650
don't really I mean most games just

1216
01:00:40,949 --> 01:00:45,029
don't handle 3d really most 2d sprite

1217
01:00:43,650 --> 01:00:47,309
games they just kind of throw them in

1218
01:00:45,030 --> 01:00:49,500
there and cross their fingers and then

1219
01:00:47,309 --> 01:00:51,239
let the artists or the map the further

1220
01:00:49,500 --> 01:00:53,219
you get towards oblique you know and

1221
01:00:51,239 --> 01:00:54,868
they'll just always draw these on top of

1222
01:00:53,219 --> 01:00:56,368
whatever the square is and you can't do

1223
01:00:54,869 --> 01:00:58,230
things like hopping down stairs and

1224
01:00:56,369 --> 01:01:04,250
stuff like that a lot of times in these

1225
01:00:58,230 --> 01:01:07,889
games because it just doesn't work so

1226
01:01:04,250 --> 01:01:10,079
you know to get that right I guess what

1227
01:01:07,889 --> 01:01:12,960
I would say is you know if you wanted to

1228
01:01:10,079 --> 01:01:17,309
do the figuring out of how much the Z

1229
01:01:12,960 --> 01:01:23,220
bias should be then it's gonna just be a

1230
01:01:17,309 --> 01:01:24,719
ratio between that vector and you you

1231
01:01:23,219 --> 01:01:26,939
know cuz like let's say we know what

1232
01:01:24,719 --> 01:01:28,949
this point is right because we've done

1233
01:01:26,940 --> 01:01:31,170
we've figured out what that that vector

1234
01:01:28,949 --> 01:01:37,889
is so you know suppose that vector is

1235
01:01:31,170 --> 01:01:40,289
just V or something right then we know

1236
01:01:37,889 --> 01:01:42,358
that the camera you know we can create

1237
01:01:40,289 --> 01:01:45,838
sort of the triangle there if we looked

1238
01:01:42,358 --> 01:01:48,179
at this from the side so if this was our

1239
01:01:45,838 --> 01:01:50,509
vector V then if we looked at it from

1240
01:01:48,179 --> 01:01:54,379
the side

1241
01:01:50,510 --> 01:01:54,380
we should probably draw it like this

1242
01:01:55,519 --> 01:02:02,759
then we know that if this is the camera

1243
01:01:58,409 --> 01:02:07,440
point that we're looking at and this

1244
01:02:02,760 --> 01:02:14,520
here is a plane right this is the XY

1245
01:02:07,440 --> 01:02:16,380
plane there's the z axis so we know that

1246
01:02:14,519 --> 01:02:18,239
there's some depth that it's going to

1247
01:02:16,380 --> 01:02:20,730
inter penetrate the plane by and what we

1248
01:02:18,239 --> 01:02:24,989
want to do is we want to know what this

1249
01:02:20,730 --> 01:02:29,519
Z value would be right so there's a

1250
01:02:24,989 --> 01:02:31,819
camera coordinate system here makes

1251
01:02:29,519 --> 01:02:31,820
sense

1252
01:02:33,309 --> 01:02:40,399
and what's going to happen is if you

1253
01:02:35,838 --> 01:02:42,588
look at what the Z values are going to

1254
01:02:40,398 --> 01:02:45,498
be for these things we're essentially

1255
01:02:42,588 --> 01:02:48,918
saying that well there's a point here

1256
01:02:45,498 --> 01:02:53,178
and it's Z value is going to be you know

1257
01:02:48,918 --> 01:02:56,118
Z zero here and what we would like to do

1258
01:02:53,179 --> 01:03:00,048
is we would like it to warrant represent

1259
01:02:56,119 --> 01:03:02,778
itself as having this Z value right and

1260
01:03:00,048 --> 01:03:05,509
therefore the amount that we want to

1261
01:03:02,778 --> 01:03:08,679
change the Z by is the difference in

1262
01:03:05,509 --> 01:03:11,869
these two values so we want that number

1263
01:03:08,679 --> 01:03:14,148
and we want to set that so that when we

1264
01:03:11,869 --> 01:03:19,009
actually produce the Z it you know we

1265
01:03:14,148 --> 01:03:21,278
get that difference included you know

1266
01:03:19,009 --> 01:03:21,278
what I mean

1267
01:03:30,778 --> 01:03:47,809
to figure out where that point is

1268
01:03:35,389 --> 01:03:53,188
looking at this set of triangles here we

1269
01:03:47,809 --> 01:03:56,179
it really is a projection because we

1270
01:03:53,188 --> 01:03:58,678
don't really know any of these

1271
01:03:56,179 --> 01:04:02,249
we don't really know any of these by

1272
01:03:58,679 --> 01:04:04,709
rote we have to solve the projection in

1273
01:04:02,248 --> 01:04:07,288
order to get what that point is or you

1274
01:04:04,708 --> 01:04:09,088
know we have to project something before

1275
01:04:07,289 --> 01:04:14,189
we could do there's no shorthand I don't

1276
01:04:09,088 --> 01:04:16,708
think that would be like some shortcut

1277
01:04:14,188 --> 01:04:21,509
where you could just save the values so

1278
01:04:16,708 --> 01:04:24,149
in terms of this V here right when we're

1279
01:04:21,509 --> 01:04:26,668
looking from the camera if we want to

1280
01:04:24,150 --> 01:04:29,130
take and figure out what this point

1281
01:04:26,668 --> 01:04:38,868
would be from the V we need to know that

1282
01:04:29,130 --> 01:04:38,869
camera the this vector as well so yeah

1283
01:04:48,949 --> 01:04:53,639
yeah I can't say I see any shortcut so I

1284
01:04:51,900 --> 01:04:56,730
mean really what its gonna be is it's

1285
01:04:53,639 --> 01:05:00,389
just yeah it'd be like whatever the that

1286
01:04:56,730 --> 01:05:01,829
point is - the camera right so

1287
01:05:00,389 --> 01:05:05,039
effectively you're gonna have to have

1288
01:05:01,829 --> 01:05:07,200
some camera vector here you know we

1289
01:05:05,039 --> 01:05:12,539
could just call whatever that whatever

1290
01:05:07,199 --> 01:05:15,299
that is we could just call that the like

1291
01:05:12,539 --> 01:05:17,039
the C vector or something right so if we

1292
01:05:15,300 --> 01:05:20,579
assume if we were to draw the diagram

1293
01:05:17,039 --> 01:05:24,059
somewhat like this so like here is the

1294
01:05:20,579 --> 01:05:30,480
vector to the camera and this is the

1295
01:05:24,059 --> 01:05:34,349
origin right and then this is our our V

1296
01:05:30,480 --> 01:05:39,318
vector then what we want to do is we

1297
01:05:34,349 --> 01:05:43,079
want to find the intersection of of that

1298
01:05:39,318 --> 01:05:45,420
right so we've kind of got V minus C and

1299
01:05:43,079 --> 01:05:54,619
we could call that like I don't know

1300
01:05:45,420 --> 01:05:54,619
whatever yeah let's call that u I guess

1301
01:05:56,599 --> 01:06:06,260
you know what it's called a so we're

1302
01:06:02,250 --> 01:06:11,989
just looking to find where that vector

1303
01:06:06,260 --> 01:06:17,579
intersects the intersects the xy-plane

1304
01:06:11,989 --> 01:06:20,399
right and furthermore I guess we only

1305
01:06:17,579 --> 01:06:23,519
really need to know that dotted onto the

1306
01:06:20,400 --> 01:06:24,838
cameras Z vector itself so it's a little

1307
01:06:23,519 --> 01:06:26,579
bit confusing as to whether that will

1308
01:06:24,838 --> 01:06:29,338
make the problem easier to compute in

1309
01:06:26,579 --> 01:06:31,289
the end but effectively what we're

1310
01:06:29,338 --> 01:06:33,690
saying here is well alright if we want

1311
01:06:31,289 --> 01:06:35,369
to know when this thing intersects the

1312
01:06:33,690 --> 01:06:39,690
XY plane then really what we want to

1313
01:06:35,369 --> 01:06:42,059
know is when Z would equal zero right so

1314
01:06:39,690 --> 01:06:45,059
what we're trying to say is like look T

1315
01:06:42,059 --> 01:06:47,449
a I want to solve

1316
01:06:45,059 --> 01:06:47,449
t a

1317
01:06:52,050 --> 01:07:03,050
I want that right I want to say at what

1318
01:06:57,119 --> 01:07:09,509
point would when I multiply this vector

1319
01:07:03,050 --> 01:07:13,200
and well okay so it's stated a little

1320
01:07:09,510 --> 01:07:18,780
bit wrong there it's really you know C

1321
01:07:13,199 --> 01:07:23,129
plus T times a equals zero not sure if I

1322
01:07:18,780 --> 01:07:24,690
could have said that easier probably so

1323
01:07:23,130 --> 01:07:27,960
if I just multiply that out instead

1324
01:07:24,690 --> 01:07:31,050
forget the Z for a second right if I

1325
01:07:27,960 --> 01:07:34,789
want to say C plus ta if I want to

1326
01:07:31,050 --> 01:07:38,370
simplify that down right well C plus ta

1327
01:07:34,789 --> 01:07:43,039
also I could expand so I can just say C

1328
01:07:38,369 --> 01:07:45,630
plus T and we know a is V minus C right

1329
01:07:43,039 --> 01:07:49,619
so really to create that construction

1330
01:07:45,630 --> 01:07:52,740
I'm just saying T V minus T C which is

1331
01:07:49,619 --> 01:07:54,779
equivalent to saying if i reorganize

1332
01:07:52,739 --> 01:08:00,649
these terms here it's really just the

1333
01:07:54,780 --> 01:08:06,060
blend in a sense right it's saying tv-

1334
01:08:00,650 --> 01:08:11,309
right now moving this over here here and

1335
01:08:06,059 --> 01:08:14,730
I mean so it's really like TV plus you

1336
01:08:11,309 --> 01:08:16,140
know 1 minus TC which is exactly what

1337
01:08:14,730 --> 01:08:19,560
you'd expect right you're going between

1338
01:08:16,140 --> 01:08:21,240
those two so you could write that

1339
01:08:19,560 --> 01:08:23,400
without combining the variables and

1340
01:08:21,239 --> 01:08:24,329
maybe that's easier you know I don't

1341
01:08:23,399 --> 01:08:29,429
know hard to say

1342
01:08:24,329 --> 01:08:31,409
maybe it's not but but there you go so

1343
01:08:29,430 --> 01:08:32,789
if you were to write it that way where

1344
01:08:31,409 --> 01:08:35,818
you saying like we're between those two

1345
01:08:32,789 --> 01:08:38,699
things do I hit it so if I want to say

1346
01:08:35,819 --> 01:08:43,710
that that I only care about the Z value

1347
01:08:38,699 --> 01:08:48,599
equaling zero right so it's that so if I

1348
01:08:43,710 --> 01:08:51,149
want to solve that equation I would say

1349
01:08:48,600 --> 01:08:59,850
okay you know TVs

1350
01:08:51,149 --> 01:09:02,849
z + c z- Tsz right so it's that i would

1351
01:08:59,850 --> 01:09:04,679
group my T terms together I guess so I

1352
01:09:02,850 --> 01:09:08,100
guess I really I guess you really do

1353
01:09:04,679 --> 01:09:10,289
want it in that forum anyway right you

1354
01:09:08,100 --> 01:09:15,088
just want to actually have it in the cz

1355
01:09:10,289 --> 01:09:16,528
plus T V minus cz form because that's

1356
01:09:15,088 --> 01:09:18,479
the easiest to solve so you're

1357
01:09:16,529 --> 01:09:23,370
essentially saying cz whatever that

1358
01:09:18,479 --> 01:09:27,738
happens to be equals T V minus C Z so

1359
01:09:23,369 --> 01:09:27,738
you would divide those you'd say that

1360
01:09:31,039 --> 01:09:39,298
right so that's what the T value would

1361
01:09:36,869 --> 01:09:46,408
be so that's when these things would

1362
01:09:39,298 --> 01:09:48,269
intersect right so that doesn't change

1363
01:09:46,408 --> 01:09:51,179
the fact that still what I want to know

1364
01:09:48,270 --> 01:09:53,130
is the actual Z value going this way

1365
01:09:51,179 --> 01:09:55,079
right so I want to know what I

1366
01:09:53,130 --> 01:09:57,719
effectively want to know what the inner

1367
01:09:55,079 --> 01:10:04,969
product of that is with the camera Z

1368
01:09:57,719 --> 01:10:09,630
vector right so if you think about that

1369
01:10:04,969 --> 01:10:12,719
once you have this value what you're

1370
01:10:09,630 --> 01:10:16,890
really saying is well if I knew that

1371
01:10:12,719 --> 01:10:21,198
that value is you know whatever the sort

1372
01:10:16,890 --> 01:10:25,850
of output value is there this vector

1373
01:10:21,198 --> 01:10:30,629
inner product did with this vector so

1374
01:10:25,850 --> 01:10:32,850
this a whatever that value is there

1375
01:10:30,630 --> 01:10:36,779
inner product did with the cameras z

1376
01:10:32,850 --> 01:10:43,940
axis negative Z X in this case it would

1377
01:10:36,779 --> 01:10:43,939
be that times this right

1378
01:10:51,380 --> 01:11:04,850
I mean it's not great you know it's not

1379
01:10:59,960 --> 01:11:11,359
fabulous but that's like roughly what we

1380
01:11:04,850 --> 01:11:13,159
would need it to be so I'm trying to

1381
01:11:11,359 --> 01:11:15,460
think if there's some other way that you

1382
01:11:13,158 --> 01:11:15,460
could

1383
01:11:28,270 --> 01:11:49,610
so here's a thought so in the Z bias

1384
01:11:35,300 --> 01:11:53,510
program which is this so if you look at

1385
01:11:49,609 --> 01:11:57,109
what's happening here one of the things

1386
01:11:53,510 --> 01:12:05,510
we could we could change this function

1387
01:11:57,109 --> 01:12:07,130
quite a bit and we could possibly just

1388
01:12:05,510 --> 01:12:09,920
use the fact that it's gonna do a

1389
01:12:07,130 --> 01:12:11,480
projection anyway we could just roll

1390
01:12:09,920 --> 01:12:13,609
that into the vertex shader so that

1391
01:12:11,479 --> 01:12:16,339
actually when we specify our Z biases

1392
01:12:13,609 --> 01:12:18,649
those Z biases are used in a way that

1393
01:12:16,340 --> 01:12:20,750
produces the correct result because

1394
01:12:18,649 --> 01:12:26,000
projection we can do the projection of

1395
01:12:20,750 --> 01:12:34,220
them twice right so what you can see

1396
01:12:26,000 --> 01:12:35,810
here is we don't actually do that oh we

1397
01:12:34,220 --> 01:12:37,579
do right we do so you can see us we

1398
01:12:35,810 --> 01:12:40,750
transfer them both of these two we

1399
01:12:37,579 --> 01:12:45,019
transfer them both of these things right

1400
01:12:40,750 --> 01:12:47,210
and so if you look at how this is

1401
01:12:45,020 --> 01:12:49,730
working what we're doing is we're trance

1402
01:12:47,210 --> 01:12:51,500
we're pretending the Z value so we're

1403
01:12:49,729 --> 01:12:54,979
pretending the height value here is

1404
01:12:51,500 --> 01:12:58,699
different the world height value it's

1405
01:12:54,979 --> 01:13:01,369
different maybe that's dumb maybe what

1406
01:12:58,699 --> 01:13:04,729
we should be doing is pretty is setting

1407
01:13:01,369 --> 01:13:08,149
the Ziva bias relative to some other

1408
01:13:04,729 --> 01:13:11,389
thing that's a easier way to set it like

1409
01:13:08,149 --> 01:13:13,639
for example what if we just said well

1410
01:13:11,390 --> 01:13:15,739
this is actually the construction that

1411
01:13:13,640 --> 01:13:18,619
will happen inside the actual vertex

1412
01:13:15,738 --> 01:13:20,988
shader so for example what if we said

1413
01:13:18,619 --> 01:13:24,590
that what you actually do to compute the

1414
01:13:20,988 --> 01:13:27,379
Z is you move that way along the XY

1415
01:13:24,590 --> 01:13:29,060
plane and then it does the projection

1416
01:13:27,380 --> 01:13:32,150
and that's what it uses for the Z

1417
01:13:29,060 --> 01:13:37,580
because then we could potentially just

1418
01:13:32,149 --> 01:13:39,379
use that information more clearly or for

1419
01:13:37,579 --> 01:13:41,809
example maybe inside the vertex shader

1420
01:13:39,380 --> 01:13:43,699
we do this construction inside the

1421
01:13:41,809 --> 01:13:49,309
tech shader so that people when they

1422
01:13:43,698 --> 01:14:02,598
send it down just send down what they

1423
01:13:49,309 --> 01:14:04,579
actually wanted to do projection wise so

1424
01:14:02,599 --> 01:14:08,599
what would be if we had to bake that

1425
01:14:04,578 --> 01:14:12,279
down to a single scalar like you know

1426
01:14:08,599 --> 01:14:12,279
what would the scaler be

1427
01:14:28,130 --> 01:14:35,029
and I guess what I'm thinking is and I

1428
01:14:33,140 --> 01:14:40,190
kind of like the way this is starting to

1429
01:14:35,029 --> 01:14:46,250
come together in my head what if we just

1430
01:14:40,189 --> 01:14:48,889
said Z bias is not really Z bias it's

1431
01:14:46,250 --> 01:14:53,619
actually a you actually set two things

1432
01:14:48,890 --> 01:14:57,079
you set the bias vector this is a global

1433
01:14:53,619 --> 01:14:59,149
so you set that to say for example in

1434
01:14:57,079 --> 01:15:07,119
our case we always want it to be

1435
01:14:59,149 --> 01:15:10,849
whatever we want it to be this right and

1436
01:15:07,119 --> 01:15:13,970
then the Z bias value is just something

1437
01:15:10,850 --> 01:15:18,020
that we use to slide we say how far

1438
01:15:13,970 --> 01:15:20,329
along this vector you want to go to

1439
01:15:18,020 --> 01:15:25,250
produce the location the actual ending

1440
01:15:20,329 --> 01:15:27,399
location of the point for z computation

1441
01:15:25,250 --> 01:15:27,399
purposes

1442
01:15:40,050 --> 01:15:57,760
that's a good start and the only thing

1443
01:15:47,289 --> 01:15:58,840
that I'm not sure about there it's the

1444
01:15:57,760 --> 01:16:08,230
only thing that I'm really not sure

1445
01:15:58,840 --> 01:16:11,310
about there is how that should how that

1446
01:16:08,229 --> 01:16:11,309
should interact with everything else

1447
01:16:12,510 --> 01:16:16,090
another way to think about it would be

1448
01:16:14,408 --> 01:16:18,448
maybe we don't actually want our

1449
01:16:16,090 --> 01:16:20,920
alignment points to work that that way

1450
01:16:18,448 --> 01:16:24,879
maybe we want our alignment points to

1451
01:16:20,920 --> 01:16:35,350
actually move things out in why you know

1452
01:16:24,880 --> 01:16:37,329
what I mean yeah this is tricky I do

1453
01:16:35,350 --> 01:16:39,400
think we're doing the Z bias worse than

1454
01:16:37,329 --> 01:16:41,469
we could be but the other thing I'm

1455
01:16:39,399 --> 01:16:42,819
thinking is like maybe we just want you

1456
01:16:41,469 --> 01:16:45,340
know when we actually have something

1457
01:16:42,819 --> 01:16:47,109
here maybe what we want to do is say

1458
01:16:45,340 --> 01:16:49,779
look you're always gonna draw this thing

1459
01:16:47,109 --> 01:16:51,639
aligned with the ground so it starts on

1460
01:16:49,779 --> 01:16:55,059
the ground and you're just gonna move it

1461
01:16:51,639 --> 01:16:57,699
forward by the alignment amount that it

1462
01:16:55,060 --> 01:17:03,039
should be rather than moving it downward

1463
01:16:57,698 --> 01:17:07,479
in Y to make the align work so we will

1464
01:17:03,039 --> 01:17:09,550
align in projection space and we will we

1465
01:17:07,479 --> 01:17:12,609
will align the points in projection

1466
01:17:09,550 --> 01:17:16,329
space but we will use a motion along the

1467
01:17:12,609 --> 01:17:17,948
Y plane to produce that alignment so

1468
01:17:16,329 --> 01:17:21,519
that we're actually moving the sprite

1469
01:17:17,948 --> 01:17:24,629
forward on the tile proportional to how

1470
01:17:21,520 --> 01:17:24,630
it was supposed to be aligned

1471
01:18:02,970 --> 01:18:09,090
man 2d stuff in 3d just just sucks folks

1472
01:18:06,899 --> 01:18:11,969
always do a platformer you don't have

1473
01:18:09,090 --> 01:18:14,489
any of these problems or you

1474
01:18:11,970 --> 01:18:16,560
orthographic anything orthographic

1475
01:18:14,489 --> 01:18:21,000
really if we just set to orthographic

1476
01:18:16,560 --> 01:18:23,190
we'd be done so yeah I don't really know

1477
01:18:21,000 --> 01:18:25,260
that's a really tough call I'm not sure

1478
01:18:23,189 --> 01:18:28,829
what the right answer is to it

1479
01:18:25,260 --> 01:18:32,690
I think it's sort of defies the right

1480
01:18:28,829 --> 01:18:32,689
answer as much as I can think about it

1481
01:18:33,500 --> 01:18:37,529
so I would say the Z bias there is

1482
01:18:36,000 --> 01:18:42,000
definitely something that we're gonna

1483
01:18:37,529 --> 01:18:44,579
have to work on I'm gonna leave it until

1484
01:18:42,000 --> 01:18:45,840
we actually go and draw these and then

1485
01:18:44,579 --> 01:18:49,050
we'll have to think about how we want to

1486
01:18:45,840 --> 01:18:53,159
set it up but I do worry that we maybe

1487
01:18:49,050 --> 01:18:54,360
should not be placing the points where

1488
01:18:53,159 --> 01:18:57,960
they actually are and we should be

1489
01:18:54,359 --> 01:19:00,509
sliding them forward to a line to do Y

1490
01:18:57,960 --> 01:19:02,489
alignment because if we don't slide them

1491
01:19:00,510 --> 01:19:07,710
forward I'm concerned that that will end

1492
01:19:02,489 --> 01:19:09,689
up always making things interpenetrate

1493
01:19:07,710 --> 01:19:11,369
into the ground and no amount of

1494
01:19:09,689 --> 01:19:14,309
creative Z biasing is really going to

1495
01:19:11,369 --> 01:19:17,699
help solve that problem I think you just

1496
01:19:14,310 --> 01:19:20,760
need to slide them forward so that they

1497
01:19:17,699 --> 01:19:23,309
are sitting just a little bit ahead of

1498
01:19:20,760 --> 01:19:25,760
where they should be that's my thinking

1499
01:19:23,310 --> 01:19:25,760
anyway

1500
01:19:27,409 --> 01:19:32,939
so we'll have to see how it goes let's

1501
01:19:31,560 --> 01:19:36,990
see what would happen if we were going

1502
01:19:32,939 --> 01:19:39,059
to do that so if I've got one of these

1503
01:19:36,989 --> 01:19:41,179
here where I'm saying here's what the

1504
01:19:39,060 --> 01:19:44,010
sprite values for upright are gonna be

1505
01:19:41,180 --> 01:19:47,869
and I produced the alignment offset here

1506
01:19:44,010 --> 01:19:50,970
that's still correct in a sense probably

1507
01:19:47,869 --> 01:19:53,039
but again when we look at this min P

1508
01:19:50,970 --> 01:19:54,630
here line offset it's really a question

1509
01:19:53,039 --> 01:19:58,140
of what we would be doing with it

1510
01:19:54,630 --> 01:20:00,619
so you know we we've got an aligned us

1511
01:19:58,140 --> 01:20:05,130
that X and we've gotten a line offset Y

1512
01:20:00,619 --> 01:20:10,079
and you know we would be subtracting

1513
01:20:05,130 --> 01:20:11,489
these two things away from the like we

1514
01:20:10,079 --> 01:20:15,199
would be subtracting these based on our

1515
01:20:11,489 --> 01:20:16,649
axes so you know we would have an x axis

1516
01:20:15,199 --> 01:20:20,039
and a

1517
01:20:16,649 --> 01:20:22,379
axis that we're moving along for the

1518
01:20:20,039 --> 01:20:24,420
sprite and the question is should this

1519
01:20:22,380 --> 01:20:26,069
really actually not be the sprite why

1520
01:20:24,420 --> 01:20:28,560
access should this actually be some

1521
01:20:26,069 --> 01:20:32,369
other axis should that actually be like

1522
01:20:28,560 --> 01:20:34,440
an axis like a ground why that would

1523
01:20:32,369 --> 01:20:40,340
move it forward and towards the viewer

1524
01:20:34,439 --> 01:20:40,339
and I have no idea if I'm honest

1525
01:20:42,439 --> 01:20:54,829
looking at this we need the render group

1526
01:20:45,239 --> 01:20:54,829
here so we need the render group here

1527
01:20:56,029 --> 01:21:03,710
and from the render group we can get the

1528
01:21:01,289 --> 01:21:09,710
various camera parameters that we need

1529
01:21:03,710 --> 01:21:09,710
you can see us doing some interesting

1530
01:21:09,949 --> 01:21:18,449
what is what does T camera up set to

1531
01:21:13,770 --> 01:21:25,980
there so this I guess lets you say how

1532
01:21:18,449 --> 01:21:30,779
much upness you want so it's like a

1533
01:21:25,979 --> 01:21:32,069
blend between the two we're just saying

1534
01:21:30,779 --> 01:21:39,689
how much do you want to flip between

1535
01:21:32,069 --> 01:21:41,250
them right how much do you want to blend

1536
01:21:39,689 --> 01:21:47,579
between the worlds up Vector and the

1537
01:21:41,250 --> 01:21:49,710
cameras up Vector makes sense and then

1538
01:21:47,579 --> 01:21:51,269
the Z bias was just computed as the

1539
01:21:49,710 --> 01:21:53,340
difference between those like right so

1540
01:21:51,270 --> 01:21:58,400
it was going to use the dimension that

1541
01:21:53,340 --> 01:21:58,400
you pass in for that

1542
01:22:04,050 --> 01:22:07,220
[Music]

1543
01:22:16,800 --> 01:22:26,550
so looking at these these allow us to

1544
01:22:19,529 --> 01:22:29,099
rotate things around so that when we

1545
01:22:26,550 --> 01:22:35,059
pass in these bright values we can give

1546
01:22:29,099 --> 01:22:35,059
it some rotation we do want those

1547
01:22:48,340 --> 01:22:58,720
and so effectively what that's doing

1548
01:22:51,130 --> 01:23:00,880
right is that's just like that's just

1549
01:22:58,720 --> 01:23:03,159
allowing us to rotate this right inside

1550
01:23:00,880 --> 01:23:14,550
that reference that camera reference

1551
01:23:03,159 --> 01:23:14,550
frame so that seems reasonable I guess

1552
01:23:21,329 --> 01:23:26,920
and the only thing I really just don't

1553
01:23:24,850 --> 01:23:28,690
understand is how that was in like that

1554
01:23:26,920 --> 01:23:31,840
seems like the interplay of that and

1555
01:23:28,689 --> 01:23:33,399
Xevious is just totally wrong so you

1556
01:23:31,840 --> 01:23:35,920
know if you look at how this was working

1557
01:23:33,399 --> 01:23:37,599
here I mean this it's just this is all

1558
01:23:35,920 --> 01:23:39,340
flying construction it's just when it

1559
01:23:37,600 --> 01:23:43,150
comes to the Z bias it's just wrong

1560
01:23:39,340 --> 01:23:44,680
because this min this min X min Y it

1561
01:23:43,149 --> 01:23:48,729
assumes that the y axis and the x axis

1562
01:23:44,680 --> 01:23:52,090
are going in it seems that the y axis is

1563
01:23:48,729 --> 01:23:53,679
going upward and the x axis is not it's

1564
01:23:52,090 --> 01:23:56,470
going sideways but that could be totally

1565
01:23:53,680 --> 01:24:00,150
wrong as you rotate this thing around

1566
01:23:56,470 --> 01:24:03,280
it's like increasingly more wrong so

1567
01:24:00,149 --> 01:24:07,750
again I say it's really just that that Z

1568
01:24:03,279 --> 01:24:09,759
bias is just totally incorrect and so

1569
01:24:07,750 --> 01:24:11,789
trying to figure out what that should be

1570
01:24:09,760 --> 01:24:14,260
is really going to be challenging and

1571
01:24:11,789 --> 01:24:19,539
there may be ways that we can figure out

1572
01:24:14,260 --> 01:24:23,500
some way of of minimizing the degree to

1573
01:24:19,539 --> 01:24:27,970
which that occurs but moverá least we

1574
01:24:23,500 --> 01:24:30,880
would want a dot product our stuff here

1575
01:24:27,970 --> 01:24:32,530
and try to set the Z bias per point to

1576
01:24:30,880 --> 01:24:35,350
something that at least is coherent so

1577
01:24:32,529 --> 01:24:36,789
that higher points in Z get higher Z

1578
01:24:35,350 --> 01:24:39,329
values but I feel like we want anything

1579
01:24:36,789 --> 01:24:39,329
better than that

1580
01:24:44,260 --> 01:24:49,989
and you know I feel like maybe we can

1581
01:24:53,500 --> 01:24:59,380
and and I think we're just gonna have to

1582
01:24:56,630 --> 01:24:59,380
tweak with it

1583
01:25:02,260 --> 01:25:09,079
3d is always so much easier it's amusing

1584
01:25:06,619 --> 01:25:10,670
but honestly like you know I would have

1585
01:25:09,079 --> 01:25:12,619
thought because I don't really do 2d

1586
01:25:10,670 --> 01:25:14,690
program very much not in this kind

1587
01:25:12,619 --> 01:25:16,340
anyway I would always have thought that

1588
01:25:14,689 --> 01:25:17,988
3d would be more complicated than 2d but

1589
01:25:16,340 --> 01:25:20,539
actually 3d is very uncomplicated

1590
01:25:17,988 --> 01:25:22,488
because you are always able to actually

1591
01:25:20,539 --> 01:25:24,409
compute the thing you want and so you

1592
01:25:22,488 --> 01:25:27,769
never really have to hack it like you

1593
01:25:24,409 --> 01:25:29,329
can always just say well you know I want

1594
01:25:27,770 --> 01:25:31,010
this thing placed here and I place it

1595
01:25:29,329 --> 01:25:33,140
there right so like if you just do the

1596
01:25:31,010 --> 01:25:35,600
full solution you end up with a correct

1597
01:25:33,140 --> 01:25:37,400
value in 2d you never will what you'll

1598
01:25:35,600 --> 01:25:39,050
never actually have a correct result and

1599
01:25:37,399 --> 01:25:42,009
it's very frustrating because it means

1600
01:25:39,050 --> 01:25:46,360
you have to constantly be like well I

1601
01:25:42,010 --> 01:25:49,820
don't know let's make up something here

1602
01:25:46,359 --> 01:25:56,719
because we don't have a way of actually

1603
01:25:49,819 --> 01:25:58,929
producing a valid answer actually you

1604
01:25:56,719 --> 01:25:58,929
know what

1605
01:26:11,050 --> 01:26:20,600
doing like that so I'm gonna regress to

1606
01:26:18,470 --> 01:26:22,250
just saying that for now because I'm

1607
01:26:20,600 --> 01:26:24,800
just not sure what should go on in there

1608
01:26:22,250 --> 01:26:26,800
so I'm gonna leave it this way and just

1609
01:26:24,800 --> 01:26:29,840
be unhappy with it for a little while

1610
01:26:26,800 --> 01:26:31,610
and then we'll we'll still compute that

1611
01:26:29,840 --> 01:26:33,500
Z bias the way that it was getting

1612
01:26:31,609 --> 01:26:35,239
computer inside the renderer but just

1613
01:26:33,500 --> 01:26:41,260
that's not gonna work

1614
01:26:35,239 --> 01:26:41,260
like just be advised right this is wrong

1615
01:27:01,899 --> 01:27:06,439
and so really since those are always

1616
01:27:05,029 --> 01:27:07,488
plainer values we should be able to UM

1617
01:27:06,439 --> 01:27:09,979
with something good in the vertex shader

1618
01:27:07,488 --> 01:27:12,439
that'll always compute them it's it's

1619
01:27:09,979 --> 01:27:14,539
really that interpenetration bottom part

1620
01:27:12,439 --> 01:27:16,429
that that concerns me the most that's

1621
01:27:14,539 --> 01:27:21,289
the thing that really seems confusing

1622
01:27:16,430 --> 01:27:23,930
and I can't say I can think of a

1623
01:27:21,289 --> 01:27:27,250
particularly good way to solve that you

1624
01:27:23,930 --> 01:27:27,250
know you heard my thoughts on it there

1625
01:27:28,930 --> 01:27:37,670
it definitely seems troublesome to me

1626
01:27:33,699 --> 01:27:39,319
and so I don't really know we're gonna

1627
01:27:37,670 --> 01:27:41,719
have to do some experimentation to get

1628
01:27:39,319 --> 01:27:43,519
that right and we'll be able to do that

1629
01:27:41,719 --> 01:27:45,289
now because we'll be putting stuff in

1630
01:27:43,520 --> 01:27:48,860
the game we will be able to see to what

1631
01:27:45,289 --> 01:27:52,060
extent we can make it look okay but it's

1632
01:27:48,859 --> 01:27:58,250
definitely an issue definitely an issue

1633
01:27:52,060 --> 01:28:00,710
so I think that's all we really need

1634
01:27:58,250 --> 01:28:07,609
here because that computes those values

1635
01:28:00,710 --> 01:28:09,920
that we're talking about and I think

1636
01:28:07,609 --> 01:28:11,779
this would give us what we wanted let me

1637
01:28:09,920 --> 01:28:14,649
go ahead and compile these so we can get

1638
01:28:11,779 --> 01:28:14,649
the errors out of them

1639
01:28:28,488 --> 01:28:51,468
did I call this put it next to the

1640
01:28:48,868 --> 01:28:51,469
renderer there

1641
01:28:57,179 --> 01:29:07,810
so textured vertex not sure why that's

1642
01:29:03,118 --> 01:29:10,210
missing shouldn't the renderer have been

1643
01:29:07,810 --> 01:29:11,830
included by now oh no it's down there I

1644
01:29:10,210 --> 01:29:12,908
want this underneath the renderer so I

1645
01:29:11,829 --> 01:29:28,179
want because it's always gonna be

1646
01:29:12,908 --> 01:29:30,519
dependent on that there we go so that's

1647
01:29:28,179 --> 01:29:36,670
fine all of this looks like it compiled

1648
01:29:30,520 --> 01:29:39,730
pretty cleanly actually so I think we're

1649
01:29:36,670 --> 01:29:43,389
good to go on that let's go ahead and

1650
01:29:39,729 --> 01:29:47,198
put our put this actual stuff to work to

1651
01:29:43,389 --> 01:29:49,900
the extent that we can so what I want to

1652
01:29:47,198 --> 01:29:51,579
do in here now is when we're going

1653
01:29:49,899 --> 01:29:55,118
through all of this trouble now every

1654
01:29:51,579 --> 01:29:58,779
time we come to a place where we would

1655
01:29:55,118 --> 01:30:02,529
actually be rendering something like

1656
01:29:58,779 --> 01:30:04,599
here when we do one of these get bitmap

1657
01:30:02,529 --> 01:30:06,399
dims I'm gonna start by just actually

1658
01:30:04,599 --> 01:30:07,869
calling the renderer John French and I'm

1659
01:30:06,399 --> 01:30:10,299
gonna say that we're gonna get the

1660
01:30:07,868 --> 01:30:16,899
sprite values here right so I'm going to

1661
01:30:10,300 --> 01:30:18,760
say look I want my sprite values I'm

1662
01:30:16,899 --> 01:30:20,259
gonna pass you the render group to use

1663
01:30:18,760 --> 01:30:25,349
and then I'm gonna pass all this

1664
01:30:20,260 --> 01:30:27,429
nonsense here like all of this stuff

1665
01:30:25,349 --> 01:30:34,360
right that's where that should be

1666
01:30:27,429 --> 01:30:38,170
and I'm gonna pass the dimensions where

1667
01:30:34,359 --> 01:30:43,839
is the is this this is it right in a

1668
01:30:38,170 --> 01:30:45,219
sense world radius you know I and well

1669
01:30:43,840 --> 01:30:46,480
actually I guess I made a utility

1670
01:30:45,219 --> 01:30:49,109
function for that now I think about it

1671
01:30:46,479 --> 01:30:49,109
it's this

1672
01:30:59,869 --> 01:31:04,550
so if I knew that I'm passing a

1673
01:31:02,130 --> 01:31:07,619
particular height here which is

1674
01:31:04,550 --> 01:31:09,779
represented by this sort of weird

1675
01:31:07,619 --> 01:31:14,130
convention we have of specifying the

1676
01:31:09,779 --> 01:31:18,719
piece dimension dot Y right it means I

1677
01:31:14,130 --> 01:31:20,970
can now specify the texture handle get

1678
01:31:18,720 --> 01:31:22,440
back the world dim that cleans up this

1679
01:31:20,970 --> 01:31:25,260
code path as well because now that's

1680
01:31:22,439 --> 01:31:26,729
actually accurate we don't actually know

1681
01:31:25,260 --> 01:31:29,220
what our line P is we're just going to

1682
01:31:26,729 --> 01:31:31,319
temporary one but that's fine we know

1683
01:31:29,220 --> 01:31:33,390
our x axis and our y axis those are

1684
01:31:31,319 --> 01:31:36,750
actually specified right we have them

1685
01:31:33,390 --> 01:31:39,420
here they are and the t camera up we're

1686
01:31:36,750 --> 01:31:41,340
not going to mess with right so that

1687
01:31:39,420 --> 01:31:43,260
will actually give us our sprite values

1688
01:31:41,340 --> 01:31:44,989
that we actually want you know what I

1689
01:31:43,260 --> 01:31:47,159
mean

1690
01:31:44,989 --> 01:31:48,689
entirely now we could get rid of the

1691
01:31:47,159 --> 01:31:50,849
bitmap dim stuff and stop using this

1692
01:31:48,689 --> 01:31:54,299
push I'm not going to bother I'm just

1693
01:31:50,850 --> 01:31:56,010
gonna let that happen there for the time

1694
01:31:54,300 --> 01:31:59,010
being so I can inspect it I'm gonna

1695
01:31:56,010 --> 01:32:00,420
store that back to our array so here in

1696
01:31:59,010 --> 01:32:02,760
piece rights when I'm we're actually

1697
01:32:00,420 --> 01:32:05,210
able to retire one of these I'm gonna

1698
01:32:02,760 --> 01:32:07,350
say okay why don't you put that you know

1699
01:32:05,210 --> 01:32:10,140
whatever the piece index that we're

1700
01:32:07,350 --> 01:32:12,090
working on here right that I'm gonna say

1701
01:32:10,140 --> 01:32:14,539
move that over here so I can see more

1702
01:32:12,090 --> 01:32:17,369
I'm gonna say look whatever that piece

1703
01:32:14,539 --> 01:32:20,039
index is here it is now so now we can

1704
01:32:17,369 --> 01:32:21,689
remember what that is and so from now on

1705
01:32:20,039 --> 01:32:25,019
I would actually have a way of getting

1706
01:32:21,689 --> 01:32:28,729
alignments so I can connect my sprites

1707
01:32:25,020 --> 01:32:33,090
up because when I actually go now to

1708
01:32:28,729 --> 01:32:37,199
pass in this this base point here I can

1709
01:32:33,090 --> 01:32:40,430
actually add in an offset computed from

1710
01:32:37,199 --> 01:32:44,309
some previous parent here what I mean

1711
01:32:40,430 --> 01:32:46,619
okay so the first thing I want to do is

1712
01:32:44,310 --> 01:32:49,410
just get this working the same as it was

1713
01:32:46,619 --> 01:32:51,329
working before so if I run this I'm

1714
01:32:49,409 --> 01:32:53,159
really I'm rendering to the same thing

1715
01:32:51,329 --> 01:32:55,769
so I'm seeing the same thing as I was

1716
01:32:53,159 --> 01:32:57,539
seeing before right so the first thing I

1717
01:32:55,770 --> 01:32:59,400
want to do there is say well let's

1718
01:32:57,539 --> 01:33:01,170
suppose that now we actually we're going

1719
01:32:59,399 --> 01:33:04,319
to render with the sprite information

1720
01:33:01,170 --> 01:33:05,899
instead so instead of calling push

1721
01:33:04,319 --> 01:33:08,929
bitmap here and push

1722
01:33:05,899 --> 01:33:14,359
map in this case is doing like all of

1723
01:33:08,929 --> 01:33:16,010
this other garbage right instead of

1724
01:33:14,359 --> 01:33:18,829
calling push bitmap let's try and call

1725
01:33:16,010 --> 01:33:22,310
something that's actually more direct

1726
01:33:18,829 --> 01:33:26,029
like you know inside the renderer let's

1727
01:33:22,310 --> 01:33:29,989
stop calling that stuff and start

1728
01:33:26,029 --> 01:33:30,800
calling this stuff or something right if

1729
01:33:29,988 --> 01:33:33,109
that makes sense

1730
01:33:30,800 --> 01:33:36,289
so let's suppose I was going to call

1731
01:33:33,109 --> 01:33:40,009
push right and in here

1732
01:33:36,289 --> 01:33:41,448
you know we looks like well they just

1733
01:33:40,010 --> 01:33:43,340
love a size baked in there so I don't

1734
01:33:41,448 --> 01:33:46,428
really need it to be doing that do we

1735
01:33:43,340 --> 01:33:48,679
have one that doesn't bake a size in we

1736
01:33:46,429 --> 01:33:51,050
need just a bear like push call that's

1737
01:33:48,679 --> 01:33:55,300
just like push one of these things on

1738
01:33:51,050 --> 01:33:55,300
that just specifies everything right

1739
01:34:07,119 --> 01:34:12,189
I'm gonna have to add one because we

1740
01:34:09,260 --> 01:34:12,190
really don't have one

1741
01:34:16,380 --> 01:34:33,380
uh who uses push right so I'm gonna go

1742
01:34:28,800 --> 01:34:33,380
ahead and say let's just stop that

1743
01:34:38,750 --> 01:34:42,359
because if you look at what happens here

1744
01:34:40,920 --> 01:34:43,710
there's no reason that it needs to be

1745
01:34:42,359 --> 01:34:47,839
the unit access for any particular

1746
01:34:43,710 --> 01:34:47,840
reason so I'm going to call these scales

1747
01:34:57,590 --> 01:35:06,600
and then we're gonna do it this way

1748
01:35:00,090 --> 01:35:08,670
right and that would allow us to always

1749
01:35:06,600 --> 01:35:10,800
have one call there that we can use

1750
01:35:08,670 --> 01:35:13,560
where we're actually passing in the

1751
01:35:10,800 --> 01:35:16,260
directly computed stuff so instead of

1752
01:35:13,560 --> 01:35:18,770
this we would actually just say like

1753
01:35:16,260 --> 01:35:18,770
okay

1754
01:35:34,128 --> 01:35:40,378
no I mean

1755
01:35:36,748 --> 01:35:42,148
and so that push Brett call would need

1756
01:35:40,378 --> 01:35:44,279
the color in there as well

1757
01:35:42,149 --> 01:35:47,550
so we're going to assume maybe that gets

1758
01:35:44,279 --> 01:35:48,408
shifted this way and then we're good to

1759
01:35:47,550 --> 01:35:51,409
go

1760
01:35:48,408 --> 01:35:51,408
right

1761
01:36:06,738 --> 01:36:22,788
what is the bounds there so we need the

1762
01:36:15,779 --> 01:36:22,788
maximum I'm assuming

1763
01:36:29,069 --> 01:36:35,710
also let's just make sure that's right

1764
01:36:31,420 --> 01:36:42,010
call how does it do it moves backwards

1765
01:36:35,710 --> 01:36:45,210
on the axis let's also not do that can

1766
01:36:42,010 --> 01:36:45,210
make the calling code do that

1767
01:36:48,090 --> 01:36:59,199
oops not that this one let's not let's

1768
01:36:51,729 --> 01:37:02,348
not do that I would vote for making that

1769
01:36:59,198 --> 01:37:07,359
be something that happens in in the

1770
01:37:02,349 --> 01:37:08,828
actual call and similarly we could have

1771
01:37:07,359 --> 01:37:10,948
a version and push right that does that

1772
01:37:08,828 --> 01:37:13,779
for you

1773
01:37:10,948 --> 01:37:15,460
but again like I want to kind of pull

1774
01:37:13,779 --> 01:37:17,380
that out a little bit more specifically

1775
01:37:15,460 --> 01:37:22,090
so I'm gonna say that this is actually

1776
01:37:17,380 --> 01:37:23,949
novice entropy that's the min P and that

1777
01:37:22,090 --> 01:37:28,150
doesn't that just doesn't get computed

1778
01:37:23,948 --> 01:37:30,488
right and so here you know we can do

1779
01:37:28,149 --> 01:37:31,899
that work and we can add that in if we

1780
01:37:30,488 --> 01:37:34,439
find we actually need that call but I

1781
01:37:31,899 --> 01:37:34,439
don't think we're gonna

1782
01:37:47,529 --> 01:37:50,679
all right

1783
01:38:14,208 --> 01:38:26,090
oh right I do have to do okay

1784
01:38:22,939 --> 01:38:27,469
sooo yeah again that's just used in the

1785
01:38:26,090 --> 01:38:29,269
debug system so that's not really

1786
01:38:27,469 --> 01:38:31,130
something that I care about either I

1787
01:38:29,269 --> 01:38:32,269
mean in the editor so again like we

1788
01:38:31,130 --> 01:38:34,130
couldn't make a utility function for

1789
01:38:32,269 --> 01:38:35,958
that if we want to preserve that old

1790
01:38:34,130 --> 01:38:37,909
would just be it would be calling push

1791
01:38:35,958 --> 01:38:41,979
right this way would be utility function

1792
01:38:37,908 --> 01:38:41,978
but again I don't really want that to be

1793
01:38:42,429 --> 01:38:59,789
probably a thing we'll see that doesn't

1794
01:38:49,819 --> 01:39:02,898
look quite right does it now there we go

1795
01:38:59,789 --> 01:39:02,899
[Music]

1796
01:39:13,729 --> 01:39:18,099
that looks good

1797
01:39:25,159 --> 01:39:39,139
so one thing I don't know Oh one thing I

1798
01:39:32,510 --> 01:39:41,239
don't know is how are those bounds how

1799
01:39:39,140 --> 01:39:44,110
are we specifying those bounds I think

1800
01:39:41,239 --> 01:39:47,090
you know what we probably need to do

1801
01:39:44,109 --> 01:39:48,889
like we needed to do this that's what I

1802
01:39:47,090 --> 01:39:51,050
should have been doing because we don't

1803
01:39:48,890 --> 01:39:53,750
know we don't really want max X right we

1804
01:39:51,050 --> 01:39:55,730
want whatever the difference between the

1805
01:39:53,750 --> 01:39:58,010
min of the max is we probably I probably

1806
01:39:55,729 --> 01:40:02,409
accidentally deleted a call to that as I

1807
01:39:58,010 --> 01:40:08,619
was moving those around and I can yeah I

1808
01:40:02,409 --> 01:40:08,619
didn't mean to do that so let's try that

1809
01:40:21,560 --> 01:40:29,630
there we go so that all looks fine

1810
01:40:41,859 --> 01:40:52,789
and so now I can finally actually just

1811
01:40:44,719 --> 01:40:56,899
call that inside on a day in order to do

1812
01:40:52,789 --> 01:40:59,689
that what I need to do here is when we

1813
01:40:56,899 --> 01:41:02,299
call push bitmap and with bitmap Tim and

1814
01:40:59,689 --> 01:41:05,389
all that nonsense here I'm just gonna

1815
01:41:02,300 --> 01:41:07,390
say like let's get rid of that and in

1816
01:41:05,390 --> 01:41:09,530
here instead let's just call push right

1817
01:41:07,390 --> 01:41:12,110
because now I should have the

1818
01:41:09,529 --> 01:41:14,719
information to call that myself and so

1819
01:41:12,109 --> 01:41:17,779
in here what I can say is yeah here's

1820
01:41:14,719 --> 01:41:29,230
the render group here's the texture at

1821
01:41:17,779 --> 01:41:37,849
issue the min P we computed it's in here

1822
01:41:29,229 --> 01:41:46,339
the scale taxis are also here the color

1823
01:41:37,850 --> 01:41:51,770
value we know and the mini V and Max UV

1824
01:41:46,340 --> 01:41:54,969
I think never get changed so I think

1825
01:41:51,770 --> 01:41:54,969
we're just looking at that

1826
01:42:03,729 --> 01:42:11,689
these would all be off of the sprites

1827
01:42:07,039 --> 01:42:13,399
position so yeah all of this stuff

1828
01:42:11,689 --> 01:42:20,779
that's happening here

1829
01:42:13,399 --> 01:42:22,609
that's just like off of us right now but

1830
01:42:20,779 --> 01:42:30,529
we'll be changing that code in a second

1831
01:42:22,609 --> 01:42:32,869
anyway all right can't say it was a

1832
01:42:30,529 --> 01:42:36,679
resounding success if I'm honest about

1833
01:42:32,869 --> 01:42:39,380
it but that's what we need to work on so

1834
01:42:36,679 --> 01:42:42,408
now we're actually you know we're using

1835
01:42:39,380 --> 01:42:44,840
this sprite values for up right here

1836
01:42:42,408 --> 01:42:47,149
we're actually using that and we are

1837
01:42:44,840 --> 01:42:53,960
producing the actual placement for our

1838
01:42:47,149 --> 01:42:56,509
rendering and you can see how we're

1839
01:42:53,960 --> 01:42:57,829
producing the rectangle for it we're

1840
01:42:56,510 --> 01:42:59,710
starting at the min we're going by the

1841
01:42:57,829 --> 01:43:01,908
scaled Y and scaled X right we're

1842
01:42:59,710 --> 01:43:05,569
producing those so what we really need

1843
01:43:01,908 --> 01:43:07,549
to do now is just go into the geometry

1844
01:43:05,569 --> 01:43:10,219
stuff and figure out why we've got bugs

1845
01:43:07,550 --> 01:43:12,500
in here we can start by looking at this

1846
01:43:10,219 --> 01:43:14,420
function this is just taking the texture

1847
01:43:12,500 --> 01:43:17,810
and the height and producing the width

1848
01:43:14,420 --> 01:43:19,699
and the height value and that you know

1849
01:43:17,810 --> 01:43:22,969
looks pretty straightforward so I can't

1850
01:43:19,698 --> 01:43:24,829
say there's any particular reason to

1851
01:43:22,969 --> 01:43:26,600
suspect that we're getting issues there

1852
01:43:24,829 --> 01:43:30,019
but we can obviously step in and

1853
01:43:26,600 --> 01:43:31,760
double-check them too so we're probably

1854
01:43:30,020 --> 01:43:33,380
getting problems here inside render

1855
01:43:31,760 --> 01:43:37,310
group right so we're passing in the base

1856
01:43:33,380 --> 01:43:38,719
P and that base position is the ground P

1857
01:43:37,310 --> 01:43:41,060
plus whatever the offset from the

1858
01:43:38,719 --> 01:43:43,550
animation stuff is plus the piece offset

1859
01:43:41,060 --> 01:43:46,219
but that seems good that's where we

1860
01:43:43,550 --> 01:43:47,779
would start right then we have the world

1861
01:43:46,219 --> 01:43:50,658
dimensions which is the thing that we

1862
01:43:47,779 --> 01:43:51,979
computed right here so that was coming

1863
01:43:50,658 --> 01:43:55,219
from here and we believe that to be

1864
01:43:51,979 --> 01:43:56,928
correct as well then we've got the align

1865
01:43:55,219 --> 01:43:59,210
percentage which again we're getting

1866
01:43:56,929 --> 01:44:02,230
from the bitmap itself which is probably

1867
01:43:59,210 --> 01:44:05,630
just like you know point five point five

1868
01:44:02,229 --> 01:44:06,948
and then we have our two at our two axes

1869
01:44:05,630 --> 01:44:10,150
that we start with and we're not changed

1870
01:44:06,948 --> 01:44:13,369
the t camera so in order to produce our

1871
01:44:10,149 --> 01:44:14,469
alignment amount and I guess I should

1872
01:44:13,369 --> 01:44:20,559
move that down here

1873
01:44:14,470 --> 01:44:22,150
it's really probably where it goes so

1874
01:44:20,560 --> 01:44:23,860
here's how we're producing this stuff

1875
01:44:22,149 --> 01:44:28,389
we're basically saying all right we've

1876
01:44:23,859 --> 01:44:30,789
got whatever the up Vector is for the

1877
01:44:28,390 --> 01:44:32,350
world and whatever the up Vector is for

1878
01:44:30,789 --> 01:44:35,260
the camera we're gonna blend between

1879
01:44:32,350 --> 01:44:39,010
those to produce our final like actual

1880
01:44:35,260 --> 01:44:41,170
up vector and this basically tells us

1881
01:44:39,010 --> 01:44:43,320
how flat we want to be and we may need

1882
01:44:41,170 --> 01:44:46,739
to pass something very different there

1883
01:44:43,319 --> 01:44:50,019
because we may be flatter in this case

1884
01:44:46,739 --> 01:44:51,969
then in our renderer test where we were

1885
01:44:50,020 --> 01:44:55,960
actually doing this stuff so that's

1886
01:44:51,970 --> 01:44:57,640
worth noting but anyway and the Z bias

1887
01:44:55,960 --> 01:44:58,810
we can probably ignore for a moment cuz

1888
01:44:57,640 --> 01:45:00,670
we saw the cats were at a completely

1889
01:44:58,810 --> 01:45:02,080
wrong place so we're really working on a

1890
01:45:00,670 --> 01:45:04,390
more fundamental issue right now than

1891
01:45:02,079 --> 01:45:08,079
the Z bias so we can ignore the Z bias

1892
01:45:04,390 --> 01:45:13,150
for the time being also I don't know if

1893
01:45:08,079 --> 01:45:15,699
push right even has Z bias it probably

1894
01:45:13,149 --> 01:45:18,460
should right so we should probably pass

1895
01:45:15,699 --> 01:45:20,859
in here like what the Z bias is because

1896
01:45:18,460 --> 01:45:24,600
it actually needs to get placed in here

1897
01:45:20,859 --> 01:45:24,599
probably right

1898
01:45:25,289 --> 01:45:38,920
no I'm saying to you that's not gonna

1899
01:45:32,109 --> 01:45:39,609
cut it eventually so you know I take it

1900
01:45:38,920 --> 01:45:41,289
back

1901
01:45:39,609 --> 01:45:46,659
because again that's part of what we're

1902
01:45:41,289 --> 01:45:47,769
gonna have to fix so we can kind of

1903
01:45:46,659 --> 01:45:49,269
ignore the Z bias for now I think

1904
01:45:47,770 --> 01:45:50,800
because until it's exactly the right

1905
01:45:49,270 --> 01:45:52,810
place and just sorting wrong we don't

1906
01:45:50,800 --> 01:45:55,690
have any reason to focus our attentions

1907
01:45:52,810 --> 01:45:57,220
there so once we produce these what

1908
01:45:55,689 --> 01:46:01,599
we're gonna say is alright now we've

1909
01:45:57,220 --> 01:46:03,730
sort of got an idea about how big this

1910
01:46:01,600 --> 01:46:05,289
thing should be XY is how big it should

1911
01:46:03,729 --> 01:46:06,669
be Y wise and what we're gonna do is

1912
01:46:05,289 --> 01:46:09,579
we're gonna produce our to scale axes

1913
01:46:06,670 --> 01:46:14,590
here by multiplying those scale values

1914
01:46:09,579 --> 01:46:18,760
by our interpretation of the x and y

1915
01:46:14,590 --> 01:46:25,210
axes here's the x axis interpreted along

1916
01:46:18,760 --> 01:46:26,390
this sort of camera card centric axis

1917
01:46:25,210 --> 01:46:32,029
system

1918
01:46:26,390 --> 01:46:35,170
that looks correct to me so III don't

1919
01:46:32,029 --> 01:46:37,789
see a lot of problem with that honestly

1920
01:46:35,170 --> 01:46:41,600
we're then gonna say look all right we

1921
01:46:37,789 --> 01:46:43,430
need to oh well that would do it so this

1922
01:46:41,600 --> 01:46:45,920
is not that's not right

1923
01:46:43,430 --> 01:46:49,240
so we can we can start by fixing that so

1924
01:46:45,920 --> 01:46:53,359
the align P is really all we need here

1925
01:46:49,239 --> 01:46:54,949
that that's a big problem we don't want

1926
01:46:53,359 --> 01:46:59,630
to account for the world dimension twice

1927
01:46:54,949 --> 01:47:02,809
that was not good let's see what this

1928
01:46:59,630 --> 01:47:04,880
looks like now all right so that's much

1929
01:47:02,810 --> 01:47:06,650
more reasonable and in fact it's much

1930
01:47:04,880 --> 01:47:08,150
better than what we had before as well

1931
01:47:06,649 --> 01:47:09,500
because you can see that it's actually

1932
01:47:08,149 --> 01:47:12,079
stacked in the world a little bit more

1933
01:47:09,500 --> 01:47:14,510
properly and actually you can see that's

1934
01:47:12,079 --> 01:47:16,729
writing direct it's stuck right on the

1935
01:47:14,510 --> 01:47:22,130
place where it's supposed to be - you

1936
01:47:16,729 --> 01:47:25,009
know what I mean and so what you can see

1937
01:47:22,130 --> 01:47:26,390
here even just right off the bat we're

1938
01:47:25,010 --> 01:47:28,970
actually looking at the problem I was

1939
01:47:26,390 --> 01:47:30,800
talking about - so do you see how you

1940
01:47:28,970 --> 01:47:32,810
know we would probably want this to sort

1941
01:47:30,800 --> 01:47:34,190
in front of there but we actually do

1942
01:47:32,810 --> 01:47:38,270
want it to be placed there because it

1943
01:47:34,189 --> 01:47:40,309
should be placed somewhat down from its

1944
01:47:38,270 --> 01:47:42,320
actual like standing location so we need

1945
01:47:40,310 --> 01:47:43,820
like that overlap there is exactly the

1946
01:47:42,319 --> 01:47:46,969
part I was talking about there to figure

1947
01:47:43,819 --> 01:47:52,369
out how we want to solve that to work in

1948
01:47:46,970 --> 01:47:55,310
3d properly now just looking at our

1949
01:47:52,369 --> 01:47:57,019
perspective here you know we would want

1950
01:47:55,310 --> 01:47:59,480
it to be shifted more the only thing I

1951
01:47:57,020 --> 01:48:01,220
don't know is honestly I wonder if our

1952
01:47:59,479 --> 01:48:03,199
default camera is maybe like I think

1953
01:48:01,220 --> 01:48:05,210
that might be a little bit too steep for

1954
01:48:03,199 --> 01:48:06,979
our default camera as well

1955
01:48:05,210 --> 01:48:11,510
it's really hard to say but I kind of

1956
01:48:06,979 --> 01:48:17,799
feel like maybe you know if I'm honest

1957
01:48:11,510 --> 01:48:17,800
about it I probably want the camera

1958
01:48:25,119 --> 01:48:30,229
sorry it's on the wrong file there I

1959
01:48:27,340 --> 01:48:31,789
probably want the camera when I'm

1960
01:48:30,229 --> 01:48:34,159
setting up that camera transform I

1961
01:48:31,789 --> 01:48:37,970
actually want to rotate it in a

1962
01:48:34,159 --> 01:48:42,559
different like more downward than it

1963
01:48:37,970 --> 01:48:45,289
normally would be so you know looking at

1964
01:48:42,560 --> 01:48:49,280
how this gets set up here when we're not

1965
01:48:45,289 --> 01:48:51,319
using the debug camera here's the world

1966
01:48:49,279 --> 01:48:55,219
mode camera pitch that's normally set up

1967
01:48:51,319 --> 01:48:59,529
and I think those get overridden right

1968
01:48:55,220 --> 01:48:59,530
like if you want to use the debug camera

1969
01:49:02,050 --> 01:49:05,570
yeah you can see it using debug camera

1970
01:49:04,609 --> 01:49:07,219
pitch and stuff like that

1971
01:49:05,569 --> 01:49:11,090
so if we're using the normal one this

1972
01:49:07,220 --> 01:49:13,159
value here actually controls that pitch

1973
01:49:11,090 --> 01:49:17,380
so you know if I was to make it pitch

1974
01:49:13,159 --> 01:49:19,639
down more that might actually be more

1975
01:49:17,380 --> 01:49:22,430
accurate to what we wanted to do so

1976
01:49:19,640 --> 01:49:25,280
let's say that we were gonna have a more

1977
01:49:22,430 --> 01:49:29,210
oblique pitch so something that's a

1978
01:49:25,279 --> 01:49:31,340
little bit more side on there so you

1979
01:49:29,210 --> 01:49:33,439
know that might be a little bit too much

1980
01:49:31,340 --> 01:49:37,150
or maybe it's not you know maybe that's

1981
01:49:33,439 --> 01:49:42,049
actually good I don't really know

1982
01:49:37,149 --> 01:49:43,699
it's hard to say not sure why that cause

1983
01:49:42,050 --> 01:49:52,970
why is that causing a problem with

1984
01:49:43,699 --> 01:49:55,340
interpolation that's interesting take a

1985
01:49:52,970 --> 01:49:59,930
look at that later so I don't know if we

1986
01:49:55,340 --> 01:50:02,590
want to be a little bit more side on you

1987
01:49:59,930 --> 01:50:02,590
know then we were

1988
01:50:09,430 --> 01:50:13,670
because again that would help us with

1989
01:50:11,689 --> 01:50:19,698
our with keeping our art sorting

1990
01:50:13,670 --> 01:50:21,230
properly and you know it's difficult to

1991
01:50:19,698 --> 01:50:22,669
say I don't really know what we want to

1992
01:50:21,229 --> 01:50:37,629
do there that that might be a little bit

1993
01:50:22,670 --> 01:50:37,630
much you know but something like that

1994
01:50:38,409 --> 01:50:41,559
you know

1995
01:50:55,800 --> 01:51:00,300
it's always kind of a struggle to figure

1996
01:50:58,840 --> 01:51:05,920
out like what we want

1997
01:51:00,300 --> 01:51:07,989
uh-hum those focal lengths to be and how

1998
01:51:05,920 --> 01:51:10,350
much eccentricity we want there you know

1999
01:51:07,989 --> 01:51:10,349
what I mean

2000
01:51:17,569 --> 01:51:21,649
I need to make a little thing where I

2001
01:51:19,729 --> 01:51:24,948
can play with the camera values and dial

2002
01:51:21,649 --> 01:51:26,238
us into exactly what I want we should

2003
01:51:24,948 --> 01:51:27,799
probably do that sometime soon

2004
01:51:26,238 --> 01:51:32,238
especially if we're working on like the

2005
01:51:27,800 --> 01:51:34,310
snapping stuff now right but just

2006
01:51:32,238 --> 01:51:38,658
thinking about how far the camera should

2007
01:51:34,310 --> 01:51:41,480
be above the world again it's just like

2008
01:51:38,658 --> 01:51:44,539
we need to at some point lock that stuff

2009
01:51:41,479 --> 01:51:46,698
in and you know now that we're gonna be

2010
01:51:44,539 --> 01:51:48,948
putting art in the game we kind of need

2011
01:51:46,698 --> 01:51:50,149
to get that exactly right we can't

2012
01:51:48,948 --> 01:51:55,609
really afford to have that be wrong

2013
01:51:50,149 --> 01:52:08,179
anymore where is the camera code for

2014
01:51:55,609 --> 01:52:10,809
that simulation right so the way that we

2015
01:52:08,179 --> 01:52:13,099
were doing this for camera offset Z's

2016
01:52:10,810 --> 01:52:14,420
you know I don't really remember how

2017
01:52:13,099 --> 01:52:16,760
that was working but I think it was

2018
01:52:14,420 --> 01:52:19,250
something to do with yeah like how the

2019
01:52:16,760 --> 01:52:23,060
room the rooms themselves can set how

2020
01:52:19,250 --> 01:52:25,689
far off you want you know how far up you

2021
01:52:23,060 --> 01:52:25,690
want them to be

2022
01:52:36,130 --> 01:53:04,960
so that camera offset Z for the in-room

2023
01:52:38,949 --> 01:53:06,970
I want to take a look at that so when

2024
01:53:04,960 --> 01:53:13,510
we're actually setting this right get

2025
01:53:06,970 --> 01:53:15,850
camera offset Z for dim you can see how

2026
01:53:13,510 --> 01:53:17,280
great you can see we kind of played

2027
01:53:15,850 --> 01:53:23,230
around with what we wanted them to be

2028
01:53:17,279 --> 01:53:25,259
and it's not great right but yeah so you

2029
01:53:23,229 --> 01:53:25,259
know

2030
01:53:41,020 --> 01:53:56,270
so probably okay I also might want to

2031
01:53:53,090 --> 01:53:57,770
make our build our build is slower than

2032
01:53:56,270 --> 01:54:07,520
I would like it to be right now

2033
01:53:57,770 --> 01:54:23,599
so you look at all the stuff that it has

2034
01:54:07,520 --> 01:54:25,070
to build in this case I just get rid of

2035
01:54:23,599 --> 01:54:31,369
couple of these it's probably a good

2036
01:54:25,069 --> 01:54:33,948
thing I don't know that it really speeds

2037
01:54:31,368 --> 01:54:38,988
up to build all that much but it's at

2038
01:54:33,948 --> 01:54:42,559
least more minimal now so you know if we

2039
01:54:38,988 --> 01:54:43,698
were to do that more as our perspective

2040
01:54:42,560 --> 01:54:45,260
and assume think I fixed whatever

2041
01:54:43,698 --> 01:54:48,138
weirdness is happening with the camera

2042
01:54:45,260 --> 01:54:50,389
there it's pretty bizarre but we never

2043
01:54:48,139 --> 01:54:51,440
really finished a camera code we still

2044
01:54:50,389 --> 01:54:54,469
don't really know what we want to do

2045
01:54:51,439 --> 01:54:57,678
with it exactly but assuming we have

2046
01:54:54,469 --> 01:55:03,289
something like that as as the

2047
01:54:57,679 --> 01:55:05,000
perspective you know that seems pretty

2048
01:55:03,289 --> 01:55:07,519
reasonable and it would keep us from

2049
01:55:05,000 --> 01:55:10,099
having too bad of a situations with

2050
01:55:07,520 --> 01:55:12,110
sorting - too rough from a sorting

2051
01:55:10,099 --> 01:55:14,389
situation we might have to do something

2052
01:55:12,109 --> 01:55:15,948
where like we make blocks invisible at

2053
01:55:14,389 --> 01:55:20,599
the edge of the room though which is

2054
01:55:15,948 --> 01:55:23,029
kind of annoying and again I don't

2055
01:55:20,599 --> 01:55:24,889
really know if there's I don't think

2056
01:55:23,029 --> 01:55:27,170
there's really any other solution for

2057
01:55:24,889 --> 01:55:30,199
that I mean we could tip slightly more

2058
01:55:27,170 --> 01:55:34,429
up so you know maybe maybe just a little

2059
01:55:30,198 --> 01:55:35,899
hair more would be the best possible

2060
01:55:34,429 --> 01:55:40,670
option

2061
01:55:35,899 --> 01:55:43,579
mm I don't know you know maybe just just

2062
01:55:40,670 --> 01:55:44,989
a little tiny bit more so maybe that

2063
01:55:43,579 --> 01:55:48,859
because then you can always see the

2064
01:55:44,988 --> 01:55:52,309
bottom square but you never get anything

2065
01:55:48,859 --> 01:55:57,349
that tilts you can never see the front

2066
01:55:52,310 --> 01:56:02,199
side of things either right so like I

2067
01:55:57,350 --> 01:56:05,620
don't know who knows maybe maybe not

2068
01:56:02,198 --> 01:56:09,279
we'll see this stuff would have to be

2069
01:56:05,619 --> 01:56:09,279
extended obviously

2070
01:56:22,500 --> 01:56:27,229
because the fog values would be wrong at

2071
01:56:24,569 --> 01:56:27,229
that point I think

2072
01:56:30,890 --> 01:56:37,680
you can see our lighting region is wrong

2073
01:56:35,699 --> 01:56:39,149
too so yeah we got we have some we have

2074
01:56:37,680 --> 01:56:49,590
some bugs in that in the camera

2075
01:56:39,149 --> 01:56:52,379
projection somewhere because it should

2076
01:56:49,590 --> 01:57:00,480
be correctly getting that region it's

2077
01:56:52,380 --> 01:57:01,980
not all right well anyway so probably

2078
01:57:00,479 --> 01:57:03,089
opens a bunch of stuff that we should be

2079
01:57:01,979 --> 01:57:06,629
working on we should probably get the

2080
01:57:03,090 --> 01:57:08,699
camera stuff right but now that we have

2081
01:57:06,630 --> 01:57:10,230
that part of the snapping working we

2082
01:57:08,699 --> 01:57:13,460
should be able to actually snap these

2083
01:57:10,229 --> 01:57:17,929
sprites together as well and so if we

2084
01:57:13,460 --> 01:57:17,930
look at something you know

2085
01:57:25,699 --> 01:57:35,550
like the cat if I want to do the

2086
01:57:33,119 --> 01:57:41,159
snapping on the sprite for the cat there

2087
01:57:35,550 --> 01:57:44,909
I should be able to actually make that

2088
01:57:41,159 --> 01:57:49,260
work so if we were to add snapping

2089
01:57:44,909 --> 01:57:51,510
values to the cat I need a way to move

2090
01:57:49,260 --> 01:57:53,820
the debug camera maybe maybe next stream

2091
01:57:51,510 --> 01:57:55,560
should be debug right if I want to add

2092
01:57:53,819 --> 01:57:58,259
the snapping values and where they

2093
01:57:55,560 --> 01:58:00,720
should go I should now be able to to

2094
01:57:58,260 --> 01:58:02,630
make that happen properly so I think

2095
01:58:00,720 --> 01:58:04,920
that's the next thing that we should do

2096
01:58:02,630 --> 01:58:17,850
so let me just do that real quick since

2097
01:58:04,920 --> 01:58:20,340
it's really easy assuming here when we

2098
01:58:17,850 --> 01:58:22,230
get those values back when we store them

2099
01:58:20,340 --> 01:58:24,750
here we're no longer using this code so

2100
01:58:22,229 --> 01:58:26,339
that can go away and we push the sprite

2101
01:58:24,750 --> 01:58:28,829
on using the values that we have there

2102
01:58:26,340 --> 01:58:30,329
what that means is if we wanted to snap

2103
01:58:28,829 --> 01:58:31,769
here we would just look up the value

2104
01:58:30,329 --> 01:58:34,109
that we were trying to snap to and be

2105
01:58:31,770 --> 01:58:35,850
done with it right and it's a little bit

2106
01:58:34,109 --> 01:58:38,969
slow because we need to find the correct

2107
01:58:35,850 --> 01:58:41,730
one so that's a little bit onerous but

2108
01:58:38,970 --> 01:58:43,380
other than that it's not that bad

2109
01:58:41,729 --> 01:58:46,829
so let me show you what I mean by that

2110
01:58:43,380 --> 01:58:50,970
so in here what we would do is say well

2111
01:58:46,829 --> 01:58:57,380
okay we've got a piece and we know that

2112
01:58:50,970 --> 01:59:01,079
the piece so we look at this right here

2113
01:58:57,380 --> 01:59:03,180
we've got one of these and we know that

2114
01:59:01,079 --> 01:59:05,159
we've got this information so we know

2115
01:59:03,180 --> 01:59:09,510
we've got a parent index that we can use

2116
01:59:05,159 --> 01:59:14,880
here to look back to to see you know

2117
01:59:09,510 --> 01:59:18,480
which parent which thing it should be

2118
01:59:14,880 --> 01:59:21,239
attached to and obviously the first one

2119
01:59:18,479 --> 01:59:23,849
doesn't have that if that makes sense

2120
01:59:21,239 --> 01:59:26,670
so it doesn't really need to be done on

2121
01:59:23,850 --> 01:59:30,060
piece index zero but all anyone else

2122
01:59:26,670 --> 01:59:31,710
would want to do that we can also do

2123
01:59:30,060 --> 01:59:34,650
some things there where we could use an

2124
01:59:31,710 --> 01:59:37,210
offset if we wanted to say that zero was

2125
01:59:34,649 --> 01:59:39,009
just initialized with the world and so

2126
01:59:37,210 --> 01:59:42,399
could just reference itself we could do

2127
01:59:39,010 --> 01:59:43,390
some tricks there if we wanted to so

2128
01:59:42,399 --> 01:59:48,129
we'll see how we want to do that but

2129
01:59:43,390 --> 01:59:51,100
these here this snapping basically tells

2130
01:59:48,130 --> 01:59:54,489
us take this alignment on us and use

2131
01:59:51,100 --> 01:59:57,880
that alignment on the parent so to start

2132
01:59:54,488 --> 02:00:00,519
with when we do this snapping what we

2133
01:59:57,880 --> 02:00:04,750
can do is initially take what our child

2134
02:00:00,520 --> 02:00:07,870
alignment is and use that instead of

2135
02:00:04,750 --> 02:00:09,909
just getting the first thing so you know

2136
02:00:07,869 --> 02:00:12,219
in here we were doing a thing where we

2137
02:00:09,909 --> 02:00:14,529
said get first aligned right we were

2138
02:00:12,219 --> 02:00:16,659
saying that instead of that we could say

2139
02:00:14,529 --> 02:00:21,189
instead of getting first aligned let's

2140
02:00:16,659 --> 02:00:24,069
get the actual alignment point so here

2141
02:00:21,189 --> 02:00:28,389
we could say like child aligned and HHA

2142
02:00:24,069 --> 02:00:29,859
aligned point parent aligned and we

2143
02:00:28,390 --> 02:00:33,450
could actually try to start fetching

2144
02:00:29,859 --> 02:00:35,920
these now so off of our bit map info

2145
02:00:33,449 --> 02:00:39,510
where we have aligned points we're going

2146
02:00:35,920 --> 02:00:39,510
to get which we're going to get this one

2147
02:00:40,289 --> 02:00:45,269
so what we want to do is like find a

2148
02:00:43,090 --> 02:00:45,270
line

2149
02:00:55,269 --> 02:00:59,929
so hopefully that makes some sense there

2150
02:00:57,618 --> 02:01:21,920
like you can see we would basically you

2151
02:00:59,929 --> 02:01:24,739
know we'd get this out so if we got that

2152
02:01:21,920 --> 02:01:29,840
out what we would then do is we'd say

2153
02:01:24,738 --> 02:01:33,018
let's get the alignment for the child

2154
02:01:29,840 --> 02:01:36,288
align whichever one that is you know

2155
02:01:33,019 --> 02:01:46,340
find that and then here we would you

2156
02:01:36,288 --> 02:01:47,779
know do the same thing so if we have

2157
02:01:46,340 --> 02:01:49,849
some way of finding those alignment

2158
02:01:47,779 --> 02:01:51,920
points we'd get them back once we have

2159
02:01:49,849 --> 02:01:54,199
them then we know that this align P is

2160
02:01:51,920 --> 02:01:56,929
just let get P percent of the child

2161
02:01:54,198 --> 02:02:00,319
aligned that's where we're aligning this

2162
02:01:56,929 --> 02:02:03,139
thing right and then we have some parent

2163
02:02:00,319 --> 02:02:07,788
alignment basis point so we would say

2164
02:02:03,139 --> 02:02:13,159
you know what is this value here like

2165
02:02:07,788 --> 02:02:19,118
the entity ground P thing that all of

2166
02:02:13,158 --> 02:02:22,038
this computation here is actually and it

2167
02:02:19,118 --> 02:02:24,670
kind of thing if it includes the piece

2168
02:02:22,038 --> 02:02:24,670
offset

2169
02:02:29,189 --> 02:02:34,379
yes so so that's kind of a little

2170
02:02:31,500 --> 02:02:37,140
complicated just in terms of how it's

2171
02:02:34,380 --> 02:02:39,420
supposed to work but you know you could

2172
02:02:37,140 --> 02:02:45,810
think of it this way we'd say here

2173
02:02:39,420 --> 02:02:50,970
there's like like an initial p-value

2174
02:02:45,810 --> 02:03:00,300
that comes in here which is that and if

2175
02:02:50,970 --> 02:03:02,310
we are not piece 0 then that initial P

2176
02:03:00,300 --> 02:03:06,170
is actually going to be found in a

2177
02:03:02,310 --> 02:03:09,810
different way so rather than using that

2178
02:03:06,170 --> 02:03:10,500
basis there we're going to do something

2179
02:03:09,810 --> 02:03:14,550
different

2180
02:03:10,500 --> 02:03:17,670
so in here where we want to do this we

2181
02:03:14,550 --> 02:03:19,860
now need to find out what the parent you

2182
02:03:17,670 --> 02:03:28,560
know whatever the parent piece is so

2183
02:03:19,859 --> 02:03:33,019
this we want to look up what it's bright

2184
02:03:28,560 --> 02:03:36,030
transform was let's just say hey

2185
02:03:33,020 --> 02:03:37,800
whatever you know we know our parent got

2186
02:03:36,029 --> 02:03:42,050
processed before us because we had force

2187
02:03:37,800 --> 02:03:45,210
that ordering so whatever the the

2188
02:03:42,050 --> 02:03:49,710
transform was for our parent we need to

2189
02:03:45,210 --> 02:03:53,130
now ask using those renderer utilities

2190
02:03:49,710 --> 02:03:55,770
that we created we need to ask where in

2191
02:03:53,130 --> 02:04:03,600
the world we would be if we were lined

2192
02:03:55,770 --> 02:04:07,580
up we were using that alignment off of

2193
02:04:03,600 --> 02:04:10,230
this right value right so we're saying

2194
02:04:07,579 --> 02:04:18,239
whatever the parent aligned P percent is

2195
02:04:10,229 --> 02:04:20,849
here whatever that should be interpret

2196
02:04:18,239 --> 02:04:22,829
that on this on this frame of reference

2197
02:04:20,850 --> 02:04:26,490
which is what our parent was use that

2198
02:04:22,829 --> 02:04:30,600
and then we will then align to that

2199
02:04:26,489 --> 02:04:32,460
using our point whatever that is it's

2200
02:04:30,600 --> 02:04:34,530
pretty complicated right but I mean

2201
02:04:32,460 --> 02:04:37,380
that's that's the long and short of it

2202
02:04:34,529 --> 02:04:42,898
right we want to fix this code also now

2203
02:04:37,380 --> 02:04:46,078
to use this this code as well so

2204
02:04:42,899 --> 02:04:48,119
for example this world P from align P is

2205
02:04:46,078 --> 02:04:53,248
what we would actually use to draw these

2206
02:04:48,118 --> 02:04:56,848
points so rather than using this here

2207
02:04:53,248 --> 02:04:59,628
where we're actually calling this part

2208
02:04:56,849 --> 02:05:03,149
forward this would actually be also

2209
02:04:59,628 --> 02:05:08,118
worlds P from the line P and we would

2210
02:05:03,149 --> 02:05:16,699
pass our sprite values and whatever the

2211
02:05:08,118 --> 02:05:16,698
alignment point was that P percent this

2212
02:05:20,929 --> 02:05:27,538
makes sense and then that goes away so

2213
02:05:25,979 --> 02:05:29,729
now we are both like looking those up

2214
02:05:27,538 --> 02:05:38,118
and drawing them up this is sorry this

2215
02:05:29,729 --> 02:05:38,119
is bitmap piece and let's see here

2216
02:05:41,809 --> 02:05:49,229
that's just a bug typo and so that's all

2217
02:05:46,529 --> 02:05:50,759
of the snapping code actually and so we

2218
02:05:49,229 --> 02:05:54,619
just need some way of actually doing

2219
02:05:50,760 --> 02:05:58,878
that find a line if that makes sense

2220
02:05:54,618 --> 02:05:58,878
let's go ahead and change that there

2221
02:05:59,090 --> 02:06:02,659
have like Speight

2222
02:06:14,229 --> 02:06:20,779
that needs to be an address other than

2223
02:06:17,658 --> 02:06:24,679
that I think we're good yeah so all we

2224
02:06:20,779 --> 02:06:27,229
really need here is inside our access

2225
02:06:24,679 --> 02:06:29,658
Oris for when we're actually using these

2226
02:06:27,229 --> 02:06:34,848
what we want to do is have a find align

2227
02:06:29,658 --> 02:06:36,649
function that takes the information

2228
02:06:34,849 --> 02:06:41,239
necessary to find one of these and basis

2229
02:06:36,649 --> 02:06:45,078
says look for this bitmap find me the

2230
02:06:41,238 --> 02:06:48,169
align point that is of that type and

2231
02:06:45,078 --> 02:06:51,198
give it back so we'd start with an align

2232
02:06:48,170 --> 02:06:53,059
point maybe that had nothing we look

2233
02:06:51,198 --> 02:06:56,689
through them all and if we found one we

2234
02:06:53,059 --> 02:07:01,090
would return it you know what I mean so

2235
02:06:56,689 --> 02:07:01,089
in here we would say all right we've got

2236
02:07:02,050 --> 02:07:15,230
point index we go through however many

2237
02:07:06,349 --> 02:07:19,659
there are in the bitmaps and if we find

2238
02:07:15,229 --> 02:07:19,658
one we use it

2239
02:07:27,179 --> 02:07:35,710
so we would effectively do a like get

2240
02:07:29,649 --> 02:07:38,558
type here right now when we do this

2241
02:07:35,710 --> 02:07:41,980
we're really saying is we want to be

2242
02:07:38,559 --> 02:07:45,070
able to do a to parent here as well so

2243
02:07:41,979 --> 02:07:49,808
this is honestly more of a like complete

2244
02:07:45,069 --> 02:07:59,529
type here and so you know I think we

2245
02:07:49,809 --> 02:08:04,270
want to say it that way and so you'd

2246
02:07:59,529 --> 02:08:08,380
you'd want to smush down the two-parent

2247
02:08:04,270 --> 02:08:10,329
part where you call find a line so here

2248
02:08:08,380 --> 02:08:11,679
when we call find a line we would say

2249
02:08:10,328 --> 02:08:14,139
here's the parent alignment who's

2250
02:08:11,679 --> 02:08:16,710
traveling this one is supposed to be a

2251
02:08:14,139 --> 02:08:16,710
two-parent

2252
02:08:40,060 --> 02:08:44,380
don't ask me why I'm passing it that way

2253
02:08:48,550 --> 02:08:54,340
right so think that's correct

2254
02:09:10,969 --> 02:09:20,809
semester what that's doing there all

2255
02:09:15,828 --> 02:09:22,698
right so now we should perhaps I guess I

2256
02:09:20,809 --> 02:09:24,739
don't know in theory we should be able

2257
02:09:22,698 --> 02:09:27,169
to debug this and these things should

2258
02:09:24,738 --> 02:09:28,488
now snap together right and it's a

2259
02:09:27,170 --> 02:09:31,908
little bit squirrely there but that's

2260
02:09:28,488 --> 02:09:34,098
basically what we're trying to do so if

2261
02:09:31,908 --> 02:09:37,429
we can find these alignment points here

2262
02:09:34,099 --> 02:09:39,679
oh and also this parent align is wrong

2263
02:09:37,429 --> 02:09:42,019
because that bitmap info is actually

2264
02:09:39,679 --> 02:09:46,368
that has to be the parents bitmap info

2265
02:09:42,019 --> 02:09:53,539
right so we need to reach back into that

2266
02:09:46,368 --> 02:10:12,920
particular piece so it's really this and

2267
02:09:53,538 --> 02:10:15,408
we can do it this way so we need to be

2268
02:10:12,920 --> 02:10:17,630
able to grab the bitmap info in each

2269
02:10:15,408 --> 02:10:29,029
case here I guess I could also say look

2270
02:10:17,630 --> 02:10:30,498
just give me the bitmap like that so

2271
02:10:29,029 --> 02:10:32,090
that way we can just say well whenever

2272
02:10:30,498 --> 02:10:34,340
we get the bitmap info

2273
02:10:32,090 --> 02:10:38,479
whatever that actually is from there

2274
02:10:34,340 --> 02:10:42,050
we'll store it so in this case we'd say

2275
02:10:38,479 --> 02:10:44,570
bitmap infos and and place it in there

2276
02:10:42,050 --> 02:10:46,190
and that way we could also know when

2277
02:10:44,569 --> 02:10:48,259
we're referring to something that

2278
02:10:46,189 --> 02:10:50,478
doesn't actually exist because it would

2279
02:10:48,260 --> 02:10:55,610
be a zero so in this case what we could

2280
02:10:50,479 --> 02:10:58,340
do is say all right like get rid of this

2281
02:10:55,609 --> 02:11:00,828
and just say if parent bitmap info is

2282
02:10:58,340 --> 02:11:07,069
valid then we can look at the parent it

2283
02:11:00,828 --> 02:11:14,328
met the parent bitmap infos alignment

2284
02:11:07,069 --> 02:11:16,849
point like that and then we can always

2285
02:11:14,328 --> 02:11:20,448
write our own back in here so whatever

2286
02:11:16,849 --> 02:11:21,710
we find for ours will put in there does

2287
02:11:20,448 --> 02:11:24,069
that make sense

2288
02:11:21,710 --> 02:11:30,849
so we have an H it's a bitmap

2289
02:11:24,069 --> 02:11:33,429
our parent oops bitmap info we said it's

2290
02:11:30,849 --> 02:11:49,659
a zero normally and then we you know we

2291
02:11:33,429 --> 02:11:51,578
go through it like so so normally what

2292
02:11:49,658 --> 02:11:52,988
we do is we look up in that array we say

2293
02:11:51,578 --> 02:11:55,090
whatever our parent was supposed to be

2294
02:11:52,988 --> 02:11:57,218
we get their bitmap info out of it we

2295
02:11:55,090 --> 02:11:59,679
then say all right if we found one of

2296
02:11:57,219 --> 02:12:01,480
those then we can do an alignment point

2297
02:11:59,679 --> 02:12:03,310
lookup to see what the parent alignment

2298
02:12:01,479 --> 02:12:06,189
point was and assuming we got that we'll

2299
02:12:03,310 --> 02:12:07,960
take whatever the piece is and we will

2300
02:12:06,189 --> 02:12:10,059
use the percentage for our prepare

2301
02:12:07,960 --> 02:12:11,439
alignment to align us with that then

2302
02:12:10,060 --> 02:12:12,940
we'll write ourselves back into right

2303
02:12:11,439 --> 02:12:14,678
now notice we do that second why would a

2304
02:12:12,939 --> 02:12:16,059
second that way we don't need a special

2305
02:12:14,679 --> 02:12:17,739
case the first piece anymore because

2306
02:12:16,060 --> 02:12:20,079
when it goes to look up into the array

2307
02:12:17,738 --> 02:12:23,408
it will just find zero in the slot that

2308
02:12:20,078 --> 02:12:30,009
its parent is which is itself and it

2309
02:12:23,408 --> 02:12:32,589
won't try to offset it at all okay so

2310
02:12:30,010 --> 02:12:34,810
now we need to bug that because that's

2311
02:12:32,590 --> 02:12:36,310
gonna give us yeah like any bugs we have

2312
02:12:34,810 --> 02:12:37,810
will send things flying off into the

2313
02:12:36,310 --> 02:12:40,329
middle of nowhere which is not what we

2314
02:12:37,810 --> 02:12:42,099
want so now we have to just debug that

2315
02:12:40,328 --> 02:12:44,469
but I think that's roughly correct

2316
02:12:42,099 --> 02:12:47,619
meaning that will now give us all of our

2317
02:12:44,469 --> 02:12:50,770
snapping what we don't know here is like

2318
02:12:47,618 --> 02:12:53,229
looking at this stuff so you know you

2319
02:12:50,770 --> 02:13:01,690
can see here the way to stuff flows

2320
02:12:53,229 --> 02:13:05,729
through computing things like this you

2321
02:13:01,689 --> 02:13:09,578
want a way of making only the initial

2322
02:13:05,729 --> 02:13:11,589
basis piece get to get these offsets so

2323
02:13:09,578 --> 02:13:17,429
we we kind of need to rework how this

2324
02:13:11,590 --> 02:13:22,110
code flows through so that's kind of a

2325
02:13:17,429 --> 02:13:22,109
you know that's kind of an issue there

2326
02:13:26,109 --> 02:13:34,198
and so that stuff needs to get improved

2327
02:13:30,539 --> 02:13:34,198
to say the least

2328
02:13:34,349 --> 02:13:39,420
because we're going to end up with

2329
02:13:36,130 --> 02:13:42,750
compounded stuff in there unfortunately

2330
02:13:39,420 --> 02:13:45,039
but if we look at how this is being used

2331
02:13:42,750 --> 02:13:47,078
we still should be able to get our

2332
02:13:45,039 --> 02:13:49,300
initial sprite to be placed in the right

2333
02:13:47,078 --> 02:13:52,049
location the fact that it's not is a bad

2334
02:13:49,300 --> 02:13:58,389
sign so we should probably fix that

2335
02:13:52,050 --> 02:14:05,349
looking at the child line and accessing

2336
02:13:58,389 --> 02:14:07,840
that P percent there we should be able

2337
02:14:05,349 --> 02:14:11,730
to say that the default alignment is

2338
02:14:07,840 --> 02:14:22,449
always going to be that that's zero line

2339
02:14:11,729 --> 02:14:24,488
value and so I do think so I do think

2340
02:14:22,448 --> 02:14:26,859
what we may need to do is set the

2341
02:14:24,488 --> 02:14:29,919
initial like all of our initial stuff

2342
02:14:26,859 --> 02:14:33,808
should be set to actually use none there

2343
02:14:29,920 --> 02:14:33,809
although we could make default

2344
02:14:43,319 --> 02:14:48,909
not sure I want to do that so in here

2345
02:14:46,300 --> 02:14:57,940
like you know for example if I was

2346
02:14:48,909 --> 02:15:02,609
feeling saucy I might say that you can

2347
02:14:57,939 --> 02:15:02,609
just set that if it's not yeah hmm I

2348
02:15:05,909 --> 02:15:12,130
really don't know I really don't know

2349
02:15:08,050 --> 02:15:13,779
how to do that so just to give you a

2350
02:15:12,130 --> 02:15:16,569
little perspective on what's happening

2351
02:15:13,779 --> 02:15:21,819
there so when we put these pieces in

2352
02:15:16,569 --> 02:15:23,590
place so you know when we do the ad cap

2353
02:15:21,819 --> 02:15:30,090
which is obviously our most important

2354
02:15:23,590 --> 02:15:42,579
function so we connect this stuff and I

2355
02:15:30,090 --> 02:15:45,400
guess I want to say something like like

2356
02:15:42,579 --> 02:15:50,619
this like you know I want to be able to

2357
02:15:45,399 --> 02:16:01,229
say that this initial piece is connected

2358
02:15:50,619 --> 02:16:01,229
to the world like that

2359
02:16:10,770 --> 02:16:17,460
and so when we would do that instead of

2360
02:16:14,880 --> 02:16:20,130
like this stuff we would always just say

2361
02:16:17,460 --> 02:16:25,609
like the parent piece in this case is

2362
02:16:20,130 --> 02:16:29,250
zero and the aligned type is none oh

2363
02:16:25,609 --> 02:16:36,229
well actually that's a smarter way to do

2364
02:16:29,250 --> 02:16:41,340
it isn't it now that I think about it if

2365
02:16:36,229 --> 02:16:50,340
the parent aligned type is none then you

2366
02:16:41,340 --> 02:16:52,920
are connecting to the world that seems a

2367
02:16:50,340 --> 02:16:55,260
little easier so maybe what we could do

2368
02:16:52,920 --> 02:17:13,620
instead here of any of that stuff is we

2369
02:16:55,260 --> 02:17:14,670
could just say hey in this case well you

2370
02:17:13,620 --> 02:17:15,660
know but we're still gonna have to do

2371
02:17:14,670 --> 02:17:18,540
that because we're still gonna have to

2372
02:17:15,659 --> 02:17:24,539
set this yeah so no we still need this

2373
02:17:18,540 --> 02:17:25,890
this has to happen regardless I think so

2374
02:17:24,540 --> 02:17:28,760
in this case we just say yeah we're

2375
02:17:25,889 --> 02:17:31,649
connecting this child in this child type

2376
02:17:28,760 --> 02:17:33,120
so when we go ahead and set that up we

2377
02:17:31,649 --> 02:17:36,229
set the parent piece of zero and the

2378
02:17:33,120 --> 02:17:36,230
aligned type to none

2379
02:17:43,219 --> 02:17:50,549
so it's actually this and then the child

2380
02:17:48,870 --> 02:17:51,600
the line type is the align type or tug

2381
02:17:50,549 --> 02:17:56,969
nut so it's basically saying connect

2382
02:17:51,600 --> 02:18:00,540
this piece but to the world so it

2383
02:17:56,969 --> 02:18:03,719
doesn't get an actual parent that makes

2384
02:18:00,540 --> 02:18:05,580
sense so then inside here when we're

2385
02:18:03,719 --> 02:18:07,500
actually drawing this that makes more

2386
02:18:05,579 --> 02:18:08,670
sense now because effectively what we're

2387
02:18:07,500 --> 02:18:12,690
saying it's like we are gonna look for

2388
02:18:08,670 --> 02:18:15,680
the alignment type in this case and I

2389
02:18:12,690 --> 02:18:18,120
think when we look here at the you know

2390
02:18:15,680 --> 02:18:21,000
this child type that we're passing in

2391
02:18:18,120 --> 02:18:31,530
that has to get ordered with two parent

2392
02:18:21,000 --> 02:18:34,700
right because it's looking for the

2393
02:18:31,530 --> 02:18:43,079
default to the parent side of things I

2394
02:18:34,700 --> 02:18:47,760
think so in this case we have to specify

2395
02:18:43,079 --> 02:18:50,610
that Ord together and I think we want to

2396
02:18:47,760 --> 02:18:52,920
specify it here too right like it should

2397
02:18:50,610 --> 02:18:54,510
be there because you're looking for that

2398
02:18:52,920 --> 02:18:57,750
one in one case and the other one in the

2399
02:18:54,510 --> 02:19:04,520
other case right and so I feel like we

2400
02:18:57,750 --> 02:19:10,770
would just want to do this probably

2401
02:19:04,520 --> 02:19:13,729
right so yeah so I think what this

2402
02:19:10,770 --> 02:19:22,110
actually boils down to is we would say

2403
02:19:13,729 --> 02:19:26,039
okay if the bitmap piece parent a line

2404
02:19:22,110 --> 02:19:30,239
type is valid then we do this if it's

2405
02:19:26,040 --> 02:19:32,910
not then we don't do this right so we

2406
02:19:30,239 --> 02:19:36,090
wouldn't even look up even if we were

2407
02:19:32,909 --> 02:19:40,799
not on the zero with one we would not do

2408
02:19:36,090 --> 02:19:43,340
that I think that's right but don't

2409
02:19:40,799 --> 02:19:46,909
quote me on that

2410
02:19:43,340 --> 02:19:46,909
what's the problem here

2411
02:19:51,219 --> 02:19:58,959
Connect peace to world that is not you

2412
02:20:04,870 --> 02:20:12,530
why is it complaining his child not a

2413
02:20:10,639 --> 02:20:14,719
bitmap or something child is a bitmap

2414
02:20:12,530 --> 02:20:19,909
what's the other assertion you could

2415
02:20:14,719 --> 02:20:26,409
have there Oh like I guess the safe

2416
02:20:19,909 --> 02:20:29,180
truncate to u8 okay so I guess maybe

2417
02:20:26,409 --> 02:20:34,329
there's our reason that's not part of

2418
02:20:29,180 --> 02:20:39,290
the u8 so these actually have to not B

2419
02:20:34,329 --> 02:20:40,939
ANDed with that I'm okay with that so

2420
02:20:39,290 --> 02:20:45,670
that does mean here like you would have

2421
02:20:40,939 --> 02:20:45,670
to do this which is fine

2422
02:20:46,719 --> 02:20:51,889
okay so let's step through and debug

2423
02:20:50,359 --> 02:20:53,300
that real quick I want to take a look at

2424
02:20:51,889 --> 02:20:56,920
that and then we can wrap it up for the

2425
02:20:53,299 --> 02:21:00,519
day so I just want to get that initial

2426
02:20:56,920 --> 02:21:00,520
piece working there

2427
02:21:07,140 --> 02:21:21,511
so let's set a breakpoint in the entity

2428
02:21:10,860 --> 02:21:26,310
system there and let's just stop in here

2429
02:21:21,511 --> 02:21:28,261
somewhere so when we come through here I

2430
02:21:26,310 --> 02:21:33,119
just want to look and see what like the

2431
02:21:28,261 --> 02:21:35,280
bitmap piece is set to for example so

2432
02:21:33,120 --> 02:21:36,840
this one's entirely cleared and so I

2433
02:21:35,280 --> 02:21:39,659
want to make sure that that actually

2434
02:21:36,840 --> 02:21:41,851
works when that's actually the case so

2435
02:21:39,659 --> 02:21:44,250
let's go into child align and it's

2436
02:21:41,851 --> 02:21:47,670
looking for a type of of what just to

2437
02:21:44,250 --> 02:21:55,319
parent right 0 and to parent it

2438
02:21:47,670 --> 02:21:58,431
shouldn't find one and that's not our

2439
02:21:55,319 --> 02:22:02,750
cat so I really want to look at the cat

2440
02:21:58,431 --> 02:22:02,750
let's see if we can find the cat here

2441
02:22:06,290 --> 02:22:13,170
this looks like our cat so now let's

2442
02:22:10,319 --> 02:22:22,709
look through here it should find one it

2443
02:22:13,170 --> 02:22:26,399
does so what's the result there so

2444
02:22:22,709 --> 02:22:28,859
here's our encoding we create the

2445
02:22:26,399 --> 02:22:30,869
initial P we know that the parent a line

2446
02:22:28,860 --> 02:22:32,851
type is not involved so this should just

2447
02:22:30,870 --> 02:22:35,160
align us to the world in general we

2448
02:22:32,851 --> 02:22:39,780
write these pieces back let's see what

2449
02:22:35,159 --> 02:22:41,579
the align P is the align P is exactly

2450
02:22:39,780 --> 02:22:47,790
what we think it should be which is 0.5

2451
02:22:41,579 --> 02:22:50,310
0.5 within epsilon there we go for the

2452
02:22:47,790 --> 02:22:51,511
world dimensions we look and see what

2453
02:22:50,310 --> 02:22:53,670
those are those are reasonable

2454
02:22:51,511 --> 02:22:55,500
dimensions we go in here to say we

2455
02:22:53,670 --> 02:22:58,229
passed the initial P in the world dim

2456
02:22:55,500 --> 02:23:00,450
right and our align our alignment and

2457
02:22:58,229 --> 02:23:02,189
our axes that looks like that should be

2458
02:23:00,450 --> 02:23:04,440
giving us the right answer to be honest

2459
02:23:02,190 --> 02:23:06,000
with you so I'm not sure what's going

2460
02:23:04,440 --> 02:23:08,340
wrong there like why we aren't seeing

2461
02:23:06,000 --> 02:23:11,011
the cat in the location that we think we

2462
02:23:08,340 --> 02:23:14,700
should be that's a little bit confusing

2463
02:23:11,011 --> 02:23:17,190
to me so let's go into push bright and

2464
02:23:14,700 --> 02:23:18,430
just see what's going on there so I can

2465
02:23:17,190 --> 02:23:23,170
see if there's some values

2466
02:23:18,430 --> 02:23:27,430
like weird and like super strange or

2467
02:23:23,170 --> 02:23:32,189
something so there's our min P in our

2468
02:23:27,430 --> 02:23:43,479
scaled y-axis it's scaled x-axis scaled

2469
02:23:32,189 --> 02:23:47,409
y-axis I mean that looks totally

2470
02:23:43,478 --> 02:23:53,409
reasonable right I don't see anything

2471
02:23:47,409 --> 02:24:00,969
weird going on there and yeah I mean

2472
02:23:53,409 --> 02:24:02,289
that looks totally fine for our cat so

2473
02:24:00,969 --> 02:24:07,590
let's see if the cats actually showing

2474
02:24:02,290 --> 02:24:11,770
up correctly then maybe it is all right

2475
02:24:07,590 --> 02:24:14,469
so our cat actually is showing up

2476
02:24:11,770 --> 02:24:16,090
correctly our player isn't but that's

2477
02:24:14,469 --> 02:24:19,119
fine because the players a different

2478
02:24:16,090 --> 02:24:21,609
kind of object that's completely messed

2479
02:24:19,120 --> 02:24:23,710
up so we could fix oh I guess we were

2480
02:24:21,609 --> 02:24:25,210
right and we could fix the player now if

2481
02:24:23,709 --> 02:24:30,669
we want to we really need something that

2482
02:24:25,209 --> 02:24:34,599
sets the debug camera location I should

2483
02:24:30,670 --> 02:24:39,370
probably add something like that right

2484
02:24:34,600 --> 02:24:48,818
like whatever the in fact how do we set

2485
02:24:39,370 --> 02:24:53,069
that where is the camera location set so

2486
02:24:48,818 --> 02:24:53,068
there it is so camera offset

2487
02:25:03,049 --> 02:25:13,818
it's actually something we could just

2488
02:25:05,318 --> 02:25:15,379
overwrite so we really should add

2489
02:25:13,818 --> 02:25:16,728
something like that I'm not gonna do

2490
02:25:15,379 --> 02:25:17,898
that quite yet but that's probably

2491
02:25:16,728 --> 02:25:24,920
something we need to do sooner rather

2492
02:25:17,898 --> 02:25:41,389
than later I guess I don't need to be in

2493
02:25:24,920 --> 02:25:48,189
the debug for this let's hop in here and

2494
02:25:41,389 --> 02:25:48,189
in here and we can select our kitten

2495
02:25:58,488 --> 02:26:02,719
so much I gotta fix in the cui

2496
02:26:08,648 --> 02:26:16,148
we just the camera is just so screwed

2497
02:26:10,780 --> 02:26:19,540
like it's beyond messed up and we're

2498
02:26:16,148 --> 02:26:21,519
gonna have to fix that soon because

2499
02:26:19,540 --> 02:26:22,750
there's no way to even look at entities

2500
02:26:21,520 --> 02:26:24,130
in the game right now we don't really

2501
02:26:22,750 --> 02:26:26,200
even have the ability to move the debug

2502
02:26:24,129 --> 02:26:27,819
camera it's complete garbage so we'll

2503
02:26:26,200 --> 02:26:31,899
have to have to fix that

2504
02:26:27,819 --> 02:26:38,139
but anyway so there's like right there's

2505
02:26:31,898 --> 02:26:41,019
one of those there's our cat right not

2506
02:26:38,139 --> 02:26:42,849
that we can see it but if we could so if

2507
02:26:41,020 --> 02:26:45,489
we set the alignment point of look where

2508
02:26:42,850 --> 02:26:47,559
the cat should be you know we can we can

2509
02:26:45,489 --> 02:26:51,819
now place the cat properly on the tile

2510
02:26:47,559 --> 02:26:54,579
which is kind of nice right and then in

2511
02:26:51,819 --> 02:26:58,000
theory now if we add a child alignment

2512
02:26:54,579 --> 02:27:01,209
point where the head is which I just did

2513
02:26:58,000 --> 02:27:04,478
and I set that to base of neck then you

2514
02:27:01,209 --> 02:27:07,839
can see if I set the alignment point of

2515
02:27:04,478 --> 02:27:11,228
of this then the cat is now assembled

2516
02:27:07,840 --> 02:27:13,210
properly right and you can see it like

2517
02:27:11,228 --> 02:27:17,170
kind of always gets assembled properly

2518
02:27:13,209 --> 02:27:19,148
there so now if I flip out of debug mode

2519
02:27:17,170 --> 02:27:20,920
our cat is always assembled properly now

2520
02:27:19,148 --> 02:27:22,059
you can see why the Z bias and our Z

2521
02:27:20,920 --> 02:27:24,309
position is going to be important right

2522
02:27:22,059 --> 02:27:27,579
we need that head to sort in front of

2523
02:27:24,309 --> 02:27:29,978
the body for example right but even in

2524
02:27:27,579 --> 02:27:34,659
fully 3d now it's always pegged properly

2525
02:27:29,978 --> 02:27:37,209
to the location and so now I think we

2526
02:27:34,659 --> 02:27:39,939
have full snapping working right that's

2527
02:27:37,209 --> 02:27:41,799
all just correct and so we really just

2528
02:27:39,939 --> 02:27:43,960
need to now work on our actual like we

2529
02:27:41,799 --> 02:27:45,849
got to go fix our camera and our other

2530
02:27:43,959 --> 02:27:47,769
end our figure out how we're gonna do

2531
02:27:45,850 --> 02:27:52,210
that Z bias right and that has to be

2532
02:27:47,770 --> 02:27:58,149
offset a little but other than that like

2533
02:27:52,209 --> 02:28:01,438
we're in pretty good shape because I

2534
02:27:58,148 --> 02:28:01,439
think that's really all there is to it

2535
02:28:01,469 --> 02:28:06,639
right that that sort of concludes our

2536
02:28:04,109 --> 02:28:13,560
editing of alignment points because they

2537
02:28:06,639 --> 02:28:18,810
just kind of work now know what I mean

2538
02:28:13,560 --> 02:28:20,909
all right so that's good we got done but

2539
02:28:18,810 --> 02:28:22,949
I wanted to get done today and we can

2540
02:28:20,909 --> 02:28:28,079
save for the next stream maybe we'll go

2541
02:28:22,950 --> 02:28:36,450
fix the camera and then we can once we

2542
02:28:28,079 --> 02:28:39,450
fix the camera then we can we can also

2543
02:28:36,450 --> 02:28:41,670
figure out maybe in that process like

2544
02:28:39,450 --> 02:28:43,561
how we're gonna deal with with properly

2545
02:28:41,670 --> 02:28:47,909
biasing z-values because that really is

2546
02:28:43,560 --> 02:28:50,729
a bit of a that's that's gonna be a real

2547
02:28:47,909 --> 02:28:54,289
trick and so will you know we'll have to

2548
02:28:50,729 --> 02:28:54,289
kind of work on that as we go

2549
02:29:52,399 --> 02:29:56,709
all right no questions we'll be done

2550
02:29:54,409 --> 02:29:56,709
early

2551
02:30:04,639 --> 02:30:08,549
do you know anything about the state of

2552
02:30:06,568 --> 02:30:10,350
the series bitwise we haven't heard

2553
02:30:08,549 --> 02:30:16,469
anything from pair in the last two

2554
02:30:10,350 --> 02:30:18,149
months no I don't know anything about

2555
02:30:16,469 --> 02:30:21,049
the state of it I have not been

2556
02:30:18,148 --> 02:30:21,049
following it

2557
02:30:39,090 --> 02:30:47,170
why not render with the projection

2558
02:30:42,488 --> 02:30:48,868
matrix plus W M matrices to position

2559
02:30:47,170 --> 02:30:51,869
sorry I'm not sure I understand the

2560
02:30:48,869 --> 02:30:51,869
question

2561
02:31:15,540 --> 02:31:20,300
I'm not sure what that question means

2562
02:31:17,489 --> 02:31:20,299
exactly

2563
02:31:41,569 --> 02:31:47,379
these weight free multi-threading as

2564
02:31:44,040 --> 02:31:48,950
difficult as lock free multi-threading

2565
02:31:47,379 --> 02:32:00,359
[Music]

2566
02:31:48,950 --> 02:32:02,640
so yeah like I guess I would say that

2567
02:32:00,360 --> 02:32:04,829
there really only is weight free

2568
02:32:02,639 --> 02:32:11,939
multi-threading lock free

2569
02:32:04,829 --> 02:32:16,228
multi-threading is sort of a the phrase

2570
02:32:11,939 --> 02:32:18,420
lock free multi-threading is really more

2571
02:32:16,228 --> 02:32:20,789
a statement about the tools that you're

2572
02:32:18,420 --> 02:32:22,889
using to implement your multi-threading

2573
02:32:20,790 --> 02:32:27,300
algorithm and not really a statement

2574
02:32:22,889 --> 02:32:36,049
about the correctness of the

2575
02:32:27,299 --> 02:32:39,478
multi-threaded program weight free

2576
02:32:36,049 --> 02:32:41,849
multi-threading is more of I mean like

2577
02:32:39,478 --> 02:32:43,260
when I hear that phrase I'm thinking

2578
02:32:41,850 --> 02:32:45,059
about the correctness of the

2579
02:32:43,260 --> 02:32:49,319
multi-threaded programming weight free

2580
02:32:45,059 --> 02:32:52,379
means that all threads can always make

2581
02:32:49,319 --> 02:32:53,850
forward progress and they'll never end

2582
02:32:52,379 --> 02:32:59,549
up in a situation where they like

2583
02:32:53,850 --> 02:33:08,280
literally can't I mean you know like if

2584
02:32:59,549 --> 02:33:14,449
I hear weight free I'm thinking I'm

2585
02:33:08,280 --> 02:33:14,450
thinking like this right

2586
02:33:19,200 --> 02:33:23,340
so when I hear weight free what I'm

2587
02:33:21,569 --> 02:33:25,520
thinking is that you actually designed

2588
02:33:23,340 --> 02:33:32,340
the algorithm properly to not have any

2589
02:33:25,521 --> 02:33:39,680
even abstract race condition because

2590
02:33:32,340 --> 02:33:42,960
technically if you were to use a real

2591
02:33:39,680 --> 02:33:45,690
blocking lock like let's suppose I have

2592
02:33:42,959 --> 02:33:48,000
two threads and they both need to do

2593
02:33:45,690 --> 02:33:51,480
something with a resource and I have a

2594
02:33:48,000 --> 02:33:54,329
blocking lock that I take and all it

2595
02:33:51,479 --> 02:33:58,379
does is it says whoever the first person

2596
02:33:54,329 --> 02:34:00,539
after the lock is gets it and then the

2597
02:33:58,379 --> 02:34:03,599
other person just can't use it until

2598
02:34:00,540 --> 02:34:05,100
it's released if I have two threads who

2599
02:34:03,600 --> 02:34:09,659
are both using that lock then

2600
02:34:05,100 --> 02:34:12,659
technically right technically I could

2601
02:34:09,659 --> 02:34:15,360
end up in a situation where one thread

2602
02:34:12,659 --> 02:34:17,129
never does any work because every time

2603
02:34:15,360 --> 02:34:21,030
it goes to take the lock it finds that

2604
02:34:17,129 --> 02:34:23,309
the other thread has it I mean

2605
02:34:21,030 --> 02:34:25,409
technically that's true right even

2606
02:34:23,309 --> 02:34:27,719
though in practice you know that will

2607
02:34:25,409 --> 02:34:30,510
never happen probabilistically it's

2608
02:34:27,719 --> 02:34:32,909
technically possible for a scheduling

2609
02:34:30,510 --> 02:34:34,319
the worst possible scheduler to go ahead

2610
02:34:32,909 --> 02:34:39,299
and create a situation where it does

2611
02:34:34,319 --> 02:34:41,789
occur right if I only allow thread B to

2612
02:34:39,299 --> 02:34:47,340
execute while thread a holds the lock

2613
02:34:41,790 --> 02:34:49,380
that B needs it will never get it wait

2614
02:34:47,340 --> 02:34:51,989
free synchronization is usually a

2615
02:34:49,379 --> 02:34:55,139
statement about the fact that that is

2616
02:34:51,989 --> 02:35:00,239
not technically possible I

2617
02:34:55,139 --> 02:35:04,649
I would say right meaning everyone

2618
02:35:00,239 --> 02:35:08,579
always is able to do something so they

2619
02:35:04,649 --> 02:35:12,629
issue an atomic operation that is going

2620
02:35:08,579 --> 02:35:16,789
to do something and then they can

2621
02:35:12,629 --> 02:35:16,789
continue to do work right

2622
02:35:26,699 --> 02:35:33,209
I don't know uh this stuff is

2623
02:35:29,908 --> 02:35:34,559
complicated if you try to read and

2624
02:35:33,209 --> 02:35:39,020
actually understand this paper which is

2625
02:35:34,559 --> 02:35:45,478
the seminal paper in the field right

2626
02:35:39,020 --> 02:35:47,939
it's pretty tough and you get stuff that

2627
02:35:45,478 --> 02:35:50,248
it can actually tell you like look this

2628
02:35:47,939 --> 02:35:51,689
thing is not technically possible right

2629
02:35:50,248 --> 02:35:54,270
it's like look if this is your

2630
02:35:51,689 --> 02:35:55,709
implementation paradigm and this is the

2631
02:35:54,270 --> 02:35:57,689
kind of consensus you want to come

2632
02:35:55,709 --> 02:36:10,140
through come to it's like not possible

2633
02:35:57,689 --> 02:36:12,029
to do so right and so it's pretty tough

2634
02:36:10,139 --> 02:36:15,599
you know it's pretty tough I believe

2635
02:36:12,029 --> 02:36:18,180
this is where the concept of compare

2636
02:36:15,600 --> 02:36:20,668
exchange is established as the only real

2637
02:36:18,180 --> 02:36:22,729
thing you can use to create consensus

2638
02:36:20,668 --> 02:36:25,318
numbers higher than you know one or two

2639
02:36:22,728 --> 02:36:26,759
or something or higher than one I don't

2640
02:36:25,318 --> 02:36:29,038
remember what it's it's a pretty good

2641
02:36:26,759 --> 02:36:30,779
paper in terms of telling you like look

2642
02:36:29,039 --> 02:36:32,909
this is what processors actually need to

2643
02:36:30,779 --> 02:36:34,738
implement because if actually all we

2644
02:36:32,908 --> 02:36:35,939
have is these old things that we were

2645
02:36:34,738 --> 02:36:40,708
using we're never gonna get anywhere

2646
02:36:35,939 --> 02:36:43,680
it's pretty good that way so when I hear

2647
02:36:40,709 --> 02:36:45,418
weight free I'm thinking this I'm

2648
02:36:43,680 --> 02:36:49,680
thinking something that has to do with a

2649
02:36:45,418 --> 02:36:51,959
proof about a consensus number and an

2650
02:36:49,680 --> 02:36:58,529
implementation virgin you know what I

2651
02:36:51,959 --> 02:37:02,459
mean that's what I'm thinking whereas if

2652
02:36:58,529 --> 02:37:06,899
I hear lock-free I'm thinking like you

2653
02:37:02,459 --> 02:37:10,409
don't have like things that look like a

2654
02:37:06,898 --> 02:37:14,309
critical section which doesn't really

2655
02:37:10,408 --> 02:37:15,898
mean anything to me I mean I understand

2656
02:37:14,309 --> 02:37:17,068
what you're trying to tell me maybe like

2657
02:37:15,898 --> 02:37:18,509
you're trying to tell me look I didn't

2658
02:37:17,068 --> 02:37:20,609
use this particular type of

2659
02:37:18,509 --> 02:37:26,520
implementation technique but I don't

2660
02:37:20,609 --> 02:37:29,629
know much more than that probably does

2661
02:37:26,520 --> 02:37:29,629
that make sense

2662
02:37:41,149 --> 02:37:47,010
okay clarification on the the matrix

2663
02:37:44,579 --> 02:37:48,930
question why not renders rights with

2664
02:37:47,010 --> 02:37:50,819
projection matrix we're setting its

2665
02:37:48,930 --> 02:37:55,460
rotation facing towards the camera we do

2666
02:37:50,819 --> 02:37:59,760
that is what we're doing currently we

2667
02:37:55,459 --> 02:38:01,169
didn't like completely having it face

2668
02:37:59,760 --> 02:38:02,550
the camera you can go back to the

2669
02:38:01,170 --> 02:38:03,569
archives you want to watch me doing

2670
02:38:02,549 --> 02:38:06,029
experimentation there

2671
02:38:03,569 --> 02:38:09,869
we don't want it completely facing the

2672
02:38:06,030 --> 02:38:11,430
camera so we blend between the two

2673
02:38:09,870 --> 02:38:13,020
different ways it would be in the

2674
02:38:11,430 --> 02:38:14,729
environment one where it's straight up

2675
02:38:13,020 --> 02:38:17,190
and down and one where it's completely

2676
02:38:14,729 --> 02:38:25,770
flat and we blend between those and we

2677
02:38:17,190 --> 02:38:27,780
actually specify that parameter here so

2678
02:38:25,770 --> 02:38:31,409
this value is the difference between

2679
02:38:27,780 --> 02:38:33,480
those two things and so if you look if

2680
02:38:31,409 --> 02:38:36,479
you want to actually see that more in

2681
02:38:33,479 --> 02:38:38,639
practice so if we kind of go back to the

2682
02:38:36,479 --> 02:38:39,930
cat we were looking at before right so

2683
02:38:38,639 --> 02:38:43,939
if I come in this room and we're looking

2684
02:38:39,930 --> 02:38:47,970
at this cat here right the headless cat

2685
02:38:43,940 --> 02:38:49,860
let me let me actually reconnect the cat

2686
02:38:47,969 --> 02:38:51,539
we got to add the save and load now we

2687
02:38:49,860 --> 02:38:56,220
have a good reason to do that because

2688
02:38:51,540 --> 02:38:58,880
now we can now we can actually use the

2689
02:38:56,219 --> 02:39:02,789
values we kind of have a reason to do so

2690
02:38:58,879 --> 02:39:05,059
but let me you actually put that on

2691
02:39:02,790 --> 02:39:05,060
there

2692
02:39:09,959 --> 02:39:16,269
so anyway if you're looking at the cat

2693
02:39:14,068 --> 02:39:18,129
you know you can kind of see how the

2694
02:39:16,270 --> 02:39:19,779
sprite sits in the environment right

2695
02:39:18,129 --> 02:39:22,028
it's kind of it's not straight up and

2696
02:39:19,779 --> 02:39:25,180
down but it's not it's not directly

2697
02:39:22,029 --> 02:39:27,520
head-on to the camera and if you set it

2698
02:39:25,180 --> 02:39:28,809
head-on to the camera or or or

2699
02:39:27,520 --> 02:39:29,770
completely straight up and down you can

2700
02:39:28,809 --> 02:39:31,629
see the difference between those two

2701
02:39:29,770 --> 02:39:35,189
things by setting these values so let's

2702
02:39:31,629 --> 02:39:37,750
say I set that value to 1.0 and

2703
02:39:35,189 --> 02:39:40,000
recompile the program that's what it

2704
02:39:37,750 --> 02:39:43,540
would look like if the sprite was 100%

2705
02:39:40,000 --> 02:39:45,309
facing the camera right and so that's

2706
02:39:43,540 --> 02:39:46,960
what that if I rotate around here so you

2707
02:39:45,309 --> 02:39:50,829
can see what it looks like from a debug

2708
02:39:46,959 --> 02:39:52,179
camera angle right it's very flat it's

2709
02:39:50,829 --> 02:39:53,500
very flat against the ground which is

2710
02:39:52,180 --> 02:39:55,420
what you'd expect because the camera is

2711
02:39:53,500 --> 02:39:58,119
looking pretty pretty straight down

2712
02:39:55,420 --> 02:40:00,100
right if I set that to zero now it'll be

2713
02:39:58,119 --> 02:40:03,520
what it actually would be if it was a

2714
02:40:00,100 --> 02:40:06,520
card in the environment right and so you

2715
02:40:03,520 --> 02:40:08,859
can see how that looks here right it's

2716
02:40:06,520 --> 02:40:10,658
very flat up and down sorry we don't

2717
02:40:08,859 --> 02:40:12,818
draw the back faces so I can't show it

2718
02:40:10,658 --> 02:40:16,510
there but you can see right what I'm

2719
02:40:12,818 --> 02:40:18,430
what I'm looking at there and so it's

2720
02:40:16,510 --> 02:40:20,408
kind of an open question like what we

2721
02:40:18,430 --> 02:40:23,529
actually want that value to be and we

2722
02:40:20,408 --> 02:40:25,868
can tune it when we finish how we want

2723
02:40:23,529 --> 02:40:28,510
our art to look but I kind of wanted

2724
02:40:25,869 --> 02:40:31,239
somewhere in between and you know maybe

2725
02:40:28,510 --> 02:40:33,068
it should be a little more towards the

2726
02:40:31,238 --> 02:40:35,020
back or maybe a little bit more towards

2727
02:40:33,068 --> 02:40:38,948
a front Leamy that's about good but I do

2728
02:40:35,020 --> 02:40:41,890
like get to be some what I like it to

2729
02:40:38,949 --> 02:40:43,979
move perspective a little bit I don't

2730
02:40:41,889 --> 02:40:47,709
want it completely non perspective

2731
02:40:43,978 --> 02:40:49,629
because it just feels a bit wrong to me

2732
02:40:47,709 --> 02:40:52,329
I don't like the way it feels when it's

2733
02:40:49,629 --> 02:40:55,988
not at least a little bit if it doesn't

2734
02:40:52,329 --> 02:40:58,750
shift a little bit side to side and so

2735
02:40:55,988 --> 02:41:02,139
you know what that ratio what the

2736
02:40:58,750 --> 02:41:03,879
perfect balance is is hard to say but it

2737
02:41:02,139 --> 02:41:05,709
gives it a little more depth that

2738
02:41:03,879 --> 02:41:10,809
integrates a little bit better and

2739
02:41:05,709 --> 02:41:14,969
that's really why you know that's why I

2740
02:41:10,809 --> 02:41:14,969
I want those values to look like they do

2741
02:41:24,568 --> 02:41:27,670
can you explain again briefly how you

2742
02:41:26,739 --> 02:41:29,530
might want to solve the problem

2743
02:41:27,670 --> 02:41:31,389
straights are penetrating the ground no

2744
02:41:29,530 --> 02:41:35,109
I can't because I don't know what the

2745
02:41:31,389 --> 02:41:36,459
solution is yet right so what I was

2746
02:41:35,109 --> 02:41:37,750
saying is that that's something I'm

2747
02:41:36,459 --> 02:41:39,818
gonna have to look into and figure out

2748
02:41:37,750 --> 02:41:42,549
how I want to do it there's a couple of

2749
02:41:39,818 --> 02:41:44,500
different ways we can do it one is by

2750
02:41:42,549 --> 02:41:47,170
adjusting where the sprites actually are

2751
02:41:44,500 --> 02:41:50,559
in the world and another is adjusting

2752
02:41:47,170 --> 02:41:55,420
what we use as the Z values for the

2753
02:41:50,559 --> 02:41:58,180
actual pixels to fake where they are and

2754
02:41:55,420 --> 02:42:00,340
we don't really know which one of those

2755
02:41:58,180 --> 02:42:01,780
is gonna be it might be combination of

2756
02:42:00,340 --> 02:42:04,329
the two right it might be both of those

2757
02:42:01,780 --> 02:42:06,659
things it might be neither so I don't

2758
02:42:04,329 --> 02:42:09,068
really have an explanation of it yet

2759
02:42:06,659 --> 02:42:12,010
because I'm not sure how I want to solve

2760
02:42:09,068 --> 02:42:14,439
it have you read communicating

2761
02:42:12,010 --> 02:42:16,630
sequential processes by Tony Hoare no I

2762
02:42:14,439 --> 02:42:18,159
haven't we my posting that

2763
02:42:16,629 --> 02:42:25,898
multi-threading paper in the chat I'm

2764
02:42:18,159 --> 02:42:28,359
guessing somebody already did did anyone

2765
02:42:25,898 --> 02:42:30,689
do it let me just hear how to type in

2766
02:42:28,359 --> 02:42:30,689
just

2767
02:42:35,069 --> 02:42:46,470
I might have spelled that slightly wrong

2768
02:42:44,670 --> 02:42:50,761
but that's that's really all you are

2769
02:42:46,470 --> 02:42:53,789
looking for right are you planning on a

2770
02:42:50,761 --> 02:42:54,780
line camera rotation the final game no

2771
02:42:53,790 --> 02:42:56,610
not really

2772
02:42:54,780 --> 02:42:58,021
you could reface after certain angle so

2773
02:42:56,610 --> 02:43:01,110
it still gives you some of what you want

2774
02:42:58,021 --> 02:43:02,820
no I I don't really like the look of

2775
02:43:01,110 --> 02:43:05,641
games that rotate when they have sprite

2776
02:43:02,819 --> 02:43:08,851
art so I probably won't allow you to

2777
02:43:05,640 --> 02:43:13,261
rotate the camera pitching the camera

2778
02:43:08,851 --> 02:43:17,400
perhaps but just not not orbit right so

2779
02:43:13,261 --> 02:43:21,511
we may pitch the camera a little bit we

2780
02:43:17,399 --> 02:43:23,850
may we may like like let that happen but

2781
02:43:21,511 --> 02:43:27,301
we probably wouldn't let orbit ever

2782
02:43:23,851 --> 02:43:28,891
happen because I think it just breaks

2783
02:43:27,300 --> 02:43:32,689
the illusion a little bit too much syrup

2784
02:43:28,890 --> 02:43:32,690
I probably would draw the line there

2785
02:43:48,969 --> 02:43:53,799
all right looks good let's close it up

2786
02:44:02,139 --> 02:44:05,148
thank you everyone for joining me for

2787
02:44:03,859 --> 02:44:07,040
episode of hand made here it's been a

2788
02:44:05,148 --> 02:44:08,989
pressure coding with you as always on

2789
02:44:07,040 --> 02:44:10,180
the spec special let me see if I can say

2790
02:44:08,989 --> 02:44:14,510
it right this time

2791
02:44:10,180 --> 02:44:16,880
Krampus Laos stream leading up to of

2792
02:44:14,510 --> 02:44:21,559
course I think - in two days the running

2793
02:44:16,879 --> 02:44:23,028
of the Krampus will be coming up we

2794
02:44:21,559 --> 02:44:24,199
pretty much did what I want to do today

2795
02:44:23,029 --> 02:44:26,420
so that was good took a little extra

2796
02:44:24,200 --> 02:44:28,460
time but we're in good shape so I think

2797
02:44:26,420 --> 02:44:30,379
we want to do is next dream which will

2798
02:44:28,459 --> 02:44:32,989
happen - surprise time but probably in

2799
02:44:30,379 --> 02:44:35,478
the not-too-distant future I'd like to

2800
02:44:32,989 --> 02:44:37,398
go in and clean up the camera and I'd

2801
02:44:35,478 --> 02:44:39,349
like to add the saving and loading of

2802
02:44:37,398 --> 02:44:42,318
those attachment points and then I think

2803
02:44:39,350 --> 02:44:44,479
we want to get down and dirty with the Z

2804
02:44:42,318 --> 02:44:45,949
bias stuff there to figure out how we

2805
02:44:44,478 --> 02:44:47,269
really want to render those because now

2806
02:44:45,950 --> 02:44:48,590
we've got the ability to render our

2807
02:44:47,270 --> 02:44:50,239
sprites correctly I think we really want

2808
02:44:48,590 --> 02:44:52,130
to push forward and try to get our

2809
02:44:50,239 --> 02:44:55,549
graphics cleaned up there so that

2810
02:44:52,129 --> 02:44:58,759
everything looks good so bad I think

2811
02:44:55,549 --> 02:45:00,679
would be the next situation sizes also

2812
02:44:58,760 --> 02:45:02,898
like so we just I think now we've got

2813
02:45:00,680 --> 02:45:05,779
everything in place we want to do some

2814
02:45:02,898 --> 02:45:08,629
polish passes get everything just so so

2815
02:45:05,779 --> 02:45:10,489
that our art looks good and we can

2816
02:45:08,629 --> 02:45:12,170
populate the world with confidence that

2817
02:45:10,489 --> 02:45:14,750
when we put something in we're putting

2818
02:45:12,170 --> 02:45:17,299
it in the right way so that's what we'll

2819
02:45:14,750 --> 02:45:18,590
be up to next time as always if you want

2820
02:45:17,299 --> 02:45:20,179
to following the series you can always

2821
02:45:18,590 --> 02:45:21,500
pre-order the game on handmade hero or

2822
02:45:20,180 --> 02:45:24,680
it comes with a source code so you can

2823
02:45:21,500 --> 02:45:25,370
play around with it that's easy enough

2824
02:45:24,680 --> 02:45:29,389
to do

2825
02:45:25,370 --> 02:45:32,270
and so yeah until the next surprise

2826
02:45:29,389 --> 02:45:36,250
Krampus laugh stream I'll see everyone

2827
02:45:32,270 --> 02:45:36,250
on the Internet take it easy everybody

