1
00:00:02,720 --> 00:00:06,960
hello everyone and welcome to handmade

2
00:00:05,219 --> 00:00:09,710
hero show recode a complete game live on

3
00:00:06,960 --> 00:00:13,888
stream yesterday we did some rudimentary

4
00:00:09,710 --> 00:00:16,440
float print out stuff because we you

5
00:00:13,888 --> 00:00:20,100
know had replaced printf and we needed

6
00:00:16,440 --> 00:00:22,109
to replace the float printing and I'll

7
00:00:20,100 --> 00:00:24,359
be honest with you I don't really know

8
00:00:22,109 --> 00:00:26,400
what we're gonna do today because that

9
00:00:24,359 --> 00:00:29,368
you know here we are we're on day 3 30

10
00:00:26,399 --> 00:00:33,659
and I I mean I'm sure there's plenty to

11
00:00:29,368 --> 00:00:38,250
do but that was definitely we finished

12
00:00:33,659 --> 00:00:40,439
sort of that that bit of it so we are

13
00:00:38,250 --> 00:00:42,750
currently printing out floats like a

14
00:00:40,439 --> 00:00:44,189
champ they're not it's not a very good

15
00:00:42,750 --> 00:00:45,960
float print out routine but we don't

16
00:00:44,189 --> 00:00:47,909
really need a very good float print out

17
00:00:45,960 --> 00:00:52,170
routine we just needed something that

18
00:00:47,909 --> 00:00:53,640
would print out floats so I don't know

19
00:00:52,170 --> 00:00:55,050
at the moment what we should be doing

20
00:00:53,640 --> 00:00:57,808
I'm going to take a look at the to do

21
00:00:55,049 --> 00:01:01,049
list and also maybe we can take a look I

22
00:00:57,808 --> 00:01:05,329
don't know if we can go to github and

23
00:01:01,049 --> 00:01:09,658
see I think I can sign in here and see

24
00:01:05,329 --> 00:01:10,978
what's going on I we could take a look

25
00:01:09,659 --> 00:01:13,140
at some of our bugs and see if we can

26
00:01:10,978 --> 00:01:14,159
just finish up a few more bugs but the

27
00:01:13,140 --> 00:01:16,469
after that we're have to pick something

28
00:01:14,159 --> 00:01:20,880
new to dive into because at the moment

29
00:01:16,469 --> 00:01:23,700
we don't really have where we finish the

30
00:01:20,879 --> 00:01:27,629
thing that we were working on uh so

31
00:01:23,700 --> 00:01:30,030
let's take a look here I don't know what

32
00:01:27,629 --> 00:01:36,599
this is type punning through pointers

33
00:01:30,030 --> 00:01:40,019
instead of just casting what are we

34
00:01:36,599 --> 00:01:42,030
talking about stereo where value is a

35
00:01:40,019 --> 00:01:47,789
void star this could said be written as

36
00:01:42,030 --> 00:01:49,349
u mm value or you mM value i I don't

37
00:01:47,790 --> 00:01:53,070
care about that at all I don't that's

38
00:01:49,349 --> 00:01:54,929
not a bug why would that I feel like if

39
00:01:53,069 --> 00:01:57,148
you're going to put a bug in it should

40
00:01:54,930 --> 00:01:59,000
be a bug right that you would have you

41
00:01:57,149 --> 00:02:06,629
have to demonstrate that there is some

42
00:01:59,000 --> 00:02:10,550
this is not a bug in any way is it why

43
00:02:06,629 --> 00:02:10,549
is this in here

44
00:02:11,719 --> 00:02:20,780
alright so that's good so let's see here

45
00:02:18,000 --> 00:02:25,080
so we've got a couple other ones here I

46
00:02:20,780 --> 00:02:26,610
for again for clang stuff these and then

47
00:02:25,080 --> 00:02:28,920
we've got a few other things here switch

48
00:02:26,610 --> 00:02:30,810
constant power panning rate Campari okay

49
00:02:28,919 --> 00:02:32,399
so this one I believe we fixed right

50
00:02:30,810 --> 00:02:34,110
infra resting list we're using a rig

51
00:02:32,400 --> 00:02:35,760
count on the temp care pointer this

52
00:02:34,110 --> 00:02:37,320
gives a length size of eight for

53
00:02:35,759 --> 00:02:43,489
everything so this was the one that I

54
00:02:37,319 --> 00:02:56,159
fixed so I believe this was fixed on day

55
00:02:43,490 --> 00:03:00,689
3 29 okay there so I can see see stuff

56
00:02:56,159 --> 00:03:03,319
okay so that's good and let's see what

57
00:03:00,689 --> 00:03:06,060
else we got here so a couple other ones

58
00:03:03,319 --> 00:03:09,239
so these two are the clan compatibility

59
00:03:06,060 --> 00:03:15,420
ones this one I it looks like we've got

60
00:03:09,240 --> 00:03:17,100
a situation where if we can't load if

61
00:03:15,419 --> 00:03:19,019
Pam a close one but debugging fair man

62
00:03:17,099 --> 00:03:20,639
fails to load for the dll in the

63
00:03:19,020 --> 00:03:23,070
function with the d'box Wilk you might

64
00:03:20,639 --> 00:03:24,809
do data but will not be collated okay so

65
00:03:23,069 --> 00:03:26,939
we we basically have a problem of we'd

66
00:03:24,810 --> 00:03:28,560
keep we'd keep gathering debug info

67
00:03:26,939 --> 00:03:39,569
until we run out the buffer and that

68
00:03:28,560 --> 00:03:40,949
would be bad okay well good to know yeah

69
00:03:39,569 --> 00:03:42,870
we could probably fix that and then

70
00:03:40,949 --> 00:03:45,659
what's this it's just a constant power

71
00:03:42,870 --> 00:03:47,490
panning from this forum post this is a

72
00:03:45,659 --> 00:03:49,049
pretty small easy fix and once for the

73
00:03:47,490 --> 00:03:50,790
audio maintain same intensity across the

74
00:03:49,050 --> 00:03:52,530
whole panting field first depending

75
00:03:50,789 --> 00:03:54,479
range of negative one to one needs to be

76
00:03:52,530 --> 00:03:56,909
map to the range of pie for drips of the

77
00:03:54,479 --> 00:04:00,209
panic field and radians then the panning

78
00:03:56,909 --> 00:04:01,770
for the lr channels is calculated oh so

79
00:04:00,210 --> 00:04:09,510
that's just a you're sort of doing a

80
00:04:01,770 --> 00:04:13,410
rotation around so that's expensive that

81
00:04:09,509 --> 00:04:16,980
looks real expensive though right you

82
00:04:13,409 --> 00:04:19,370
have to do a sign cose inside the loop

83
00:04:16,980 --> 00:04:19,370
there

84
00:04:19,600 --> 00:04:27,430
I don't think I like that for this

85
00:04:25,509 --> 00:04:30,490
unless we really had a situation where

86
00:04:27,430 --> 00:04:33,400
we were hearing it be a problem I don't

87
00:04:30,490 --> 00:04:36,250
know if I like that because here's what

88
00:04:33,399 --> 00:04:39,370
they're sort of saying and I don't

89
00:04:36,250 --> 00:04:41,939
disagree with them what they're saying

90
00:04:39,370 --> 00:04:41,939
is that

91
00:04:51,939 --> 00:05:02,579
I I think anyways is that if I have a

92
00:04:56,620 --> 00:05:08,379
source and I move it like this right and

93
00:05:02,579 --> 00:05:10,300
here is the listener it's actually if I

94
00:05:08,379 --> 00:05:11,769
just linearly interpolate it between the

95
00:05:10,300 --> 00:05:14,889
two speakers it's technically getting

96
00:05:11,769 --> 00:05:17,439
closer to me right like the distance

97
00:05:14,889 --> 00:05:21,039
here is obviously less than the distance

98
00:05:17,439 --> 00:05:22,899
here so if the speakers do their job

99
00:05:21,040 --> 00:05:24,700
faithfully then we would expect to hear

100
00:05:22,899 --> 00:05:27,609
it get louder as it passes through and

101
00:05:24,699 --> 00:05:29,319
then software again right which i assume

102
00:05:27,610 --> 00:05:31,960
is what this is talking about but I'm

103
00:05:29,319 --> 00:05:33,459
not one hundred percent sure so what

104
00:05:31,959 --> 00:05:37,839
they're sort of suggesting is you know

105
00:05:33,459 --> 00:05:41,579
you can kind of go and and interpolate

106
00:05:37,839 --> 00:05:44,769
an arc right as you go through here and

107
00:05:41,579 --> 00:05:49,539
that arc would would then make it so

108
00:05:44,769 --> 00:05:52,859
that you're not going to be you're not

109
00:05:49,540 --> 00:05:52,860
going to be getting that that bit there

110
00:05:54,959 --> 00:06:03,879
but I feel like this looks really

111
00:05:58,560 --> 00:06:07,120
expensive to me so i might say are we

112
00:06:03,879 --> 00:06:10,180
sure that that is the the right way to

113
00:06:07,120 --> 00:06:11,560
make that trade-off like you know let's

114
00:06:10,180 --> 00:06:14,740
say we were going to do constant power

115
00:06:11,560 --> 00:06:17,519
panning and maybe we didn't care exactly

116
00:06:14,740 --> 00:06:19,840
about perfectly linear speed in the pan

117
00:06:17,519 --> 00:06:22,449
you could imagine another thing we could

118
00:06:19,839 --> 00:06:24,759
do which is is to renormalize this out

119
00:06:22,449 --> 00:06:28,120
to the arc so do the linear pan and then

120
00:06:24,759 --> 00:06:30,399
just use a reciprocal square root to

121
00:06:28,120 --> 00:06:31,840
normalize back out to the arc so we

122
00:06:30,399 --> 00:06:36,489
wouldn't have to do cosine and sine

123
00:06:31,839 --> 00:06:41,109
right so for example we could imagine

124
00:06:36,490 --> 00:06:45,579
some function that's like okay yeah you

125
00:06:41,110 --> 00:06:48,910
know we have a pan value right and the

126
00:06:45,579 --> 00:06:50,229
pan value is negative 1 to 1 but we want

127
00:06:48,910 --> 00:06:53,770
to make sure that that it gets

128
00:06:50,230 --> 00:06:59,050
interpreted constant power as as we go

129
00:06:53,769 --> 00:07:02,079
through right and so yeah in order to do

130
00:06:59,050 --> 00:07:04,889
that what we could do is sort of say

131
00:07:02,079 --> 00:07:04,889
well I

132
00:07:05,589 --> 00:07:18,549
I guess the problem is we need the

133
00:07:09,310 --> 00:07:27,009
volume yeah trying to think about how we

134
00:07:18,550 --> 00:07:29,620
would do this because what we want to

135
00:07:27,009 --> 00:07:33,639
know right is how loud this point is

136
00:07:29,620 --> 00:07:35,110
going to be in the left channel in the

137
00:07:33,639 --> 00:07:38,349
right channel and I'm not sure exactly

138
00:07:35,110 --> 00:07:39,879
how to map it directly to their but I

139
00:07:38,350 --> 00:07:41,740
don't love this because I just don't

140
00:07:39,879 --> 00:07:46,480
know if I remember correctly let me

141
00:07:41,740 --> 00:07:50,290
double check and make sure that I'm not

142
00:07:46,480 --> 00:07:53,770
miss mistaken maybe I am but I thought

143
00:07:50,290 --> 00:07:56,980
our audio was per sample interpolated

144
00:07:53,769 --> 00:07:58,209
and I don't remember if it's not then

145
00:07:56,980 --> 00:08:01,270
it's not a big deal because you only

146
00:07:58,209 --> 00:08:06,639
have to do that once but I didn't know

147
00:08:01,269 --> 00:08:11,349
if the pan was animated right so do we

148
00:08:06,639 --> 00:08:12,789
have pan at all here let's see output

149
00:08:11,350 --> 00:08:18,600
playing sounds loaded sonic let's get

150
00:08:12,790 --> 00:08:18,600
sound get next on Shane d volume uh

151
00:08:24,639 --> 00:08:37,700
geez vol chunk jump to mix Clemens out

152
00:08:34,940 --> 00:08:40,159
channel index so it looks like we are

153
00:08:37,700 --> 00:08:49,430
actually not really doing panning in

154
00:08:40,158 --> 00:08:53,450
that sense inside the mixer we are just

155
00:08:49,429 --> 00:08:56,958
sort of outputting into the mixer we are

156
00:08:53,450 --> 00:09:03,430
out putting up like a per channel volume

157
00:08:56,958 --> 00:09:03,429
it looks like right let me see here

158
00:09:12,370 --> 00:09:23,450
t volume so we do you can see here that

159
00:09:20,570 --> 00:09:26,780
we do volume per sample so if we're

160
00:09:23,450 --> 00:09:29,030
doing volume per sample then I don't

161
00:09:26,779 --> 00:09:34,100
want to be doing like a sign in a cosine

162
00:09:29,029 --> 00:09:35,629
and a in the middle there right that

163
00:09:34,100 --> 00:09:39,259
just doesn't seem like a good idea at

164
00:09:35,629 --> 00:09:42,679
all to me so I don't know how I feel

165
00:09:39,259 --> 00:09:48,850
about that I would say that probably we

166
00:09:42,679 --> 00:09:48,849
could work out a thing where we you know

167
00:09:49,840 --> 00:09:57,170
where we did some kind of a

168
00:09:53,259 --> 00:09:59,029
approximation to it using only using

169
00:09:57,169 --> 00:10:01,789
only our squirt because that'll be

170
00:09:59,029 --> 00:10:03,019
faster but I don't know that I want sine

171
00:10:01,789 --> 00:10:08,629
and cosine in there I feel like they're

172
00:10:03,019 --> 00:10:12,110
going to be too expensive per sample for

173
00:10:08,629 --> 00:10:13,970
me to really want to do that because

174
00:10:12,110 --> 00:10:16,070
there is no sine and cosine instruction

175
00:10:13,970 --> 00:10:17,540
you have to actually issue a series of

176
00:10:16,070 --> 00:10:22,460
instructions to generate a sine a cosine

177
00:10:17,539 --> 00:10:29,179
and the sine and the cosine they're not

178
00:10:22,460 --> 00:10:31,370
short i I'm just going to randomly pick

179
00:10:29,179 --> 00:10:33,500
someone's here in Kate it's hopefully

180
00:10:31,370 --> 00:10:35,720
there is one I don't know if this is one

181
00:10:33,500 --> 00:10:37,340
here let's see there's a sin in here

182
00:10:35,720 --> 00:10:43,570
that I can just just so I can sort of

183
00:10:37,340 --> 00:10:48,320
point to an example if there is one okay

184
00:10:43,570 --> 00:10:50,540
so here's a sine function right and you

185
00:10:48,320 --> 00:10:53,800
can kind of see what's going on here

186
00:10:50,539 --> 00:10:57,409
right it's it's quite a few instructions

187
00:10:53,799 --> 00:10:59,240
to make this work you know it's it's 20

188
00:10:57,409 --> 00:11:02,899
or 30 instructions or something probably

189
00:10:59,240 --> 00:11:06,019
in here may be hard to say because

190
00:11:02,899 --> 00:11:10,939
you've got to do all of those and then

191
00:11:06,019 --> 00:11:12,769
all of these right probably maybe even

192
00:11:10,940 --> 00:11:14,780
yeah I think 30 instructions are

193
00:11:12,769 --> 00:11:17,600
something like that and 30 instructions

194
00:11:14,779 --> 00:11:19,429
for sample in addition to what we've got

195
00:11:17,600 --> 00:11:29,028
a

196
00:11:19,429 --> 00:11:32,088
you you know um I just don't know I just

197
00:11:29,028 --> 00:11:33,379
don't know if I if I like that let me

198
00:11:32,089 --> 00:11:37,520
verify that we're actually in fact

199
00:11:33,379 --> 00:11:39,049
interpolating the volume yeah we are so

200
00:11:37,519 --> 00:11:41,870
I mean you know it's already we're

201
00:11:39,049 --> 00:11:43,250
already doing what about six

202
00:11:41,870 --> 00:11:48,799
instructions here is something like that

203
00:11:43,250 --> 00:11:50,839
per sample so we we'd be we'd be you

204
00:11:48,799 --> 00:11:52,490
know making our mixer like six times

205
00:11:50,839 --> 00:11:54,680
slower or something like this to add

206
00:11:52,490 --> 00:11:59,778
that feature and we don't really know if

207
00:11:54,679 --> 00:12:02,799
we ever need it so i think i'm going to

208
00:11:59,778 --> 00:12:02,799
say no to that one

209
00:12:32,230 --> 00:12:44,139
so that's going to closed oops so what

210
00:12:40,789 --> 00:12:46,159
else we got here let's see we've got

211
00:12:44,139 --> 00:12:49,639
texture environment being set in the

212
00:12:46,159 --> 00:12:51,409
wrong place that's definitely true so I

213
00:12:49,639 --> 00:12:55,009
believe we just kind of cut and pasted

214
00:12:51,409 --> 00:12:58,429
that code and basically what happens

215
00:12:55,009 --> 00:13:05,689
inside OpenGL is texture environment

216
00:12:58,429 --> 00:13:07,699
stuff why did we not find that where is

217
00:13:05,690 --> 00:13:15,140
Jill whereas our oh because I didn't

218
00:13:07,700 --> 00:13:24,200
open the project file that's why so GL

219
00:13:15,139 --> 00:13:27,019
Texan it looks like we are setting that

220
00:13:24,200 --> 00:13:30,020
for some reason we're setting that here

221
00:13:27,019 --> 00:13:32,179
which we don't need and here yeah those

222
00:13:30,019 --> 00:13:34,779
that is not where that should be set so

223
00:13:32,179 --> 00:13:37,699
text parameters are set on the texture

224
00:13:34,779 --> 00:13:41,919
so those are appropriately going with

225
00:13:37,700 --> 00:13:45,259
the individual texture but GL text em I

226
00:13:41,919 --> 00:13:46,759
is a property of the pipeline it's the

227
00:13:45,259 --> 00:13:50,269
property of like what this what the

228
00:13:46,759 --> 00:13:52,669
current drawing state is going to be so

229
00:13:50,269 --> 00:13:55,789
really that could be set kind of

230
00:13:52,669 --> 00:13:58,069
globally and in fact we never change

231
00:13:55,789 --> 00:14:00,490
that texture environment so we should be

232
00:13:58,070 --> 00:14:05,629
able to set that up just in our in it

233
00:14:00,490 --> 00:14:09,409
and leave it on right so like when we

234
00:14:05,629 --> 00:14:11,389
are originally initializing things we

235
00:14:09,409 --> 00:14:13,850
should be good to go so if we wanted to

236
00:14:11,389 --> 00:14:16,610
we should be able to do that so for

237
00:14:13,850 --> 00:14:19,159
example I think we could probably put

238
00:14:16,610 --> 00:14:21,889
that right here and just leave it there

239
00:14:19,159 --> 00:14:23,389
for now since at the moment we don't do

240
00:14:21,889 --> 00:14:30,279
any multi texturing or anything like

241
00:14:23,389 --> 00:14:30,279
that so that's probably fine right ok

242
00:14:38,899 --> 00:15:01,829
okay and yeah so this one's a little

243
00:14:49,080 --> 00:15:05,250
tricky because I don't know very much

244
00:15:01,830 --> 00:15:07,620
about this so we might have to go look

245
00:15:05,250 --> 00:15:09,570
that up a little bit but Martin's who

246
00:15:07,620 --> 00:15:11,220
probably many of you know from the

247
00:15:09,570 --> 00:15:14,610
forums he answers a lot of people's

248
00:15:11,220 --> 00:15:18,000
questions that they have about things

249
00:15:14,610 --> 00:15:20,149
handmade hero related and otherwise he

250
00:15:18,000 --> 00:15:23,009
was pointing out on the forums that

251
00:15:20,149 --> 00:15:26,699
there is a recommendation from Intel

252
00:15:23,009 --> 00:15:32,460
that if you are going to spin lock I on

253
00:15:26,700 --> 00:15:36,810
a if you're going to spin lock on some

254
00:15:32,460 --> 00:15:40,200
kind of variable like we are doing with

255
00:15:36,809 --> 00:15:42,419
our ticket mutex which I think we used

256
00:15:40,200 --> 00:15:48,509
for like texture updating or something

257
00:15:42,419 --> 00:15:50,610
like this right we got one right here so

258
00:15:48,509 --> 00:15:54,720
when we are putting these operations in

259
00:15:50,610 --> 00:15:57,659
for the textures when we do those ticket

260
00:15:54,720 --> 00:16:00,110
mutexes we're really in there for an

261
00:15:57,659 --> 00:16:02,789
incredibly short period of time right

262
00:16:00,110 --> 00:16:08,990
three three assignments or four

263
00:16:02,789 --> 00:16:08,990
assignments is all we're doing right so

264
00:16:09,860 --> 00:16:17,039
the thing is I don't really know if it

265
00:16:14,279 --> 00:16:23,699
makes sense to issue and mm pause in the

266
00:16:17,039 --> 00:16:26,429
case where there's that few but maybe it

267
00:16:23,700 --> 00:16:28,200
does right maybe it's always better if

268
00:16:26,429 --> 00:16:30,989
even if you're going to only spend like

269
00:16:28,200 --> 00:16:32,430
once on the spin lock maybe it's always

270
00:16:30,990 --> 00:16:36,990
better because the CPU can do something

271
00:16:32,429 --> 00:16:39,870
smarter and I just don't know and since

272
00:16:36,990 --> 00:16:41,759
I've never really used mm pause I'm not

273
00:16:39,870 --> 00:16:42,779
sure what to make of it I don't know

274
00:16:41,759 --> 00:16:45,659
whether it's a good idea to

275
00:16:42,779 --> 00:16:49,429
use it or not but essentially what it is

276
00:16:45,659 --> 00:16:52,529
is inside when if we look at the

277
00:16:49,429 --> 00:16:55,500
implementation of it inside the ticket

278
00:16:52,529 --> 00:16:58,189
mutex basically all you do is inside

279
00:16:55,500 --> 00:17:01,500
this while loop you put the mm pause

280
00:16:58,190 --> 00:17:06,620
bait you know as the essentially

281
00:17:01,500 --> 00:17:08,970
instruction that you're executing and

282
00:17:06,619 --> 00:17:11,969
what it's supposed to do is let the

283
00:17:08,970 --> 00:17:15,000
processor architecture know that you've

284
00:17:11,970 --> 00:17:17,640
got one cpu core waiting on some other

285
00:17:15,000 --> 00:17:21,900
cpu core because then it will do

286
00:17:17,640 --> 00:17:23,520
something smarter in theory now I don't

287
00:17:21,900 --> 00:17:25,530
actually know what it will do and that's

288
00:17:23,519 --> 00:17:28,680
what worries me right I don't really

289
00:17:25,529 --> 00:17:30,329
want it to do anything like downshift

290
00:17:28,680 --> 00:17:35,160
that core power wise or anything like

291
00:17:30,329 --> 00:17:37,139
that so I'm not really sure let's see so

292
00:17:35,160 --> 00:17:45,360
in the software developers mania let's

293
00:17:37,140 --> 00:17:48,290
see what Martin's referenced he says

294
00:17:45,359 --> 00:17:48,289
eight ten to

295
00:17:56,109 --> 00:18:02,959
ok so the pause instruction can improves

296
00:18:00,829 --> 00:18:04,609
alright so they got a little grammar

297
00:18:02,960 --> 00:18:06,829
mistake there that's okay the pause

298
00:18:04,609 --> 00:18:08,839
instruction can improve the performance

299
00:18:06,829 --> 00:18:10,699
of processors supporting hyper-threading

300
00:18:08,839 --> 00:18:12,528
technology when exiting spin wait loops

301
00:18:10,700 --> 00:18:14,840
and other routines where 1 30 secs

302
00:18:12,528 --> 00:18:16,548
tuning shared lock or a simmer for in a

303
00:18:14,839 --> 00:18:18,259
tight pulling loop when extreme spin

304
00:18:16,548 --> 00:18:20,658
wait loop the processor can suffer a

305
00:18:18,259 --> 00:18:22,700
severe performance penalty when exiting

306
00:18:20,659 --> 00:18:25,700
the loop because it detects a possible

307
00:18:22,700 --> 00:18:28,519
memory order violation and flushes the

308
00:18:25,700 --> 00:18:30,140
core processors pipeline the pause

309
00:18:28,519 --> 00:18:32,990
instruction provides a hint of the

310
00:18:30,140 --> 00:18:35,210
processor that the code sequence is a

311
00:18:32,990 --> 00:18:37,130
spin wait loop the processor uses this

312
00:18:35,210 --> 00:18:41,028
hint to avoid the memory order violation

313
00:18:37,130 --> 00:18:43,700
and prevent the pipeline flush in

314
00:18:41,028 --> 00:18:46,429
addition the pause instruction d

315
00:18:43,700 --> 00:18:48,798
pipelines the spin wait loop to prevent

316
00:18:46,429 --> 00:18:54,100
it from consuming execution resources

317
00:18:48,798 --> 00:18:54,099
excessively and consume power needlessly

318
00:18:57,278 --> 00:19:05,630
interesting when it exits the spin wait

319
00:19:03,710 --> 00:19:07,819
loop the processor can suffer a

320
00:19:05,630 --> 00:19:09,740
performance penalty when excellent

321
00:19:07,819 --> 00:19:12,798
because it detects a possible memory

322
00:19:09,740 --> 00:19:19,308
order violation and flushes the core

323
00:19:12,798 --> 00:19:22,398
processors pipeline I guess I don't

324
00:19:19,308 --> 00:19:25,220
understand how the wait the pause

325
00:19:22,398 --> 00:19:26,750
instruction would fix that because it

326
00:19:25,220 --> 00:19:35,620
doesn't know what else you did in that

327
00:19:26,750 --> 00:19:40,069
loop hmm I'm not sure I understand what

328
00:19:35,619 --> 00:19:42,199
how it is that exiting the loop would

329
00:19:40,069 --> 00:19:43,730
cause the flush in one case but not in

330
00:19:42,200 --> 00:19:51,340
the other just based on the presence of

331
00:19:43,730 --> 00:19:51,339
this instruction mmm let's read 8 10 61

332
00:19:53,690 --> 00:19:57,960
until recommends that a pause

333
00:19:56,279 --> 00:19:59,399
instruction be placed in allston way

334
00:19:57,960 --> 00:20:00,690
loops that run until a prosperous

335
00:19:59,400 --> 00:20:02,250
reporting until I prophetic technology

336
00:20:00,690 --> 00:20:04,350
and multi-core processors so froh

337
00:20:02,250 --> 00:20:05,549
teasing you spin lock wait loops include

338
00:20:04,349 --> 00:20:07,109
blood pressure circulation primitives

339
00:20:05,549 --> 00:20:08,460
and I de loop such routines get the

340
00:20:07,109 --> 00:20:10,558
processor core busy x rating a load

341
00:20:08,460 --> 00:20:11,579
compared branch loop law thread waits

342
00:20:10,558 --> 00:20:13,799
for resource to become available

343
00:20:11,579 --> 00:20:15,178
including a positive such loop greatly

344
00:20:13,799 --> 00:20:16,919
improves efficiency the following

345
00:20:15,179 --> 00:20:21,300
routine gives example use the pause

346
00:20:16,920 --> 00:20:22,950
instruction the spin wait loop abuses a

347
00:20:21,299 --> 00:20:24,000
test test and set technique for turning

348
00:20:22,950 --> 00:20:25,769
the ability synchronization let's test

349
00:20:24,000 --> 00:20:27,179
record for a spin like loops because we

350
00:20:25,769 --> 00:20:29,039
really dependent for the files for she

351
00:20:27,179 --> 00:20:30,960
has an opposite rection so it really

352
00:20:29,039 --> 00:20:33,349
doesn't tell us very much about what

353
00:20:30,960 --> 00:20:33,350
this thing does

354
00:20:41,660 --> 00:20:50,390
I am just not sure what to make of that

355
00:20:46,269 --> 00:20:53,269
it seems like based on what it says it

356
00:20:50,390 --> 00:20:56,060
does that it should be strictly a

357
00:20:53,269 --> 00:20:57,950
benefit to put it in there like it does

358
00:20:56,059 --> 00:21:00,710
not sound like it's doing anything fancy

359
00:20:57,950 --> 00:21:03,529
like down powering that core or anything

360
00:21:00,710 --> 00:21:05,029
like that so you know it seems at least

361
00:21:03,529 --> 00:21:07,129
for the documentation that it would be

362
00:21:05,029 --> 00:21:10,720
harmless to add and so if it actually

363
00:21:07,130 --> 00:21:13,910
does give us you know confer upon us

364
00:21:10,720 --> 00:21:16,309
some theoretical benefit in terms of not

365
00:21:13,910 --> 00:21:22,460
flushing the pipeline on it exit from

366
00:21:16,309 --> 00:21:23,990
the loop then that's cool but I you know

367
00:21:22,460 --> 00:21:28,519
how do I know that because I don't feel

368
00:21:23,990 --> 00:21:31,700
like I really understand it you know in

369
00:21:28,519 --> 00:21:33,440
general it's definitely it makes some

370
00:21:31,700 --> 00:21:35,509
sense because you could imagine the

371
00:21:33,440 --> 00:21:37,100
processor looking at the loop and going

372
00:21:35,509 --> 00:21:39,230
okay I'm doing all this loop code I

373
00:21:37,099 --> 00:21:43,069
don't have any idea what I'm going to

374
00:21:39,230 --> 00:21:46,610
exit this loop so my my pipeline just

375
00:21:43,069 --> 00:21:49,339
consists of a ton of compare jump

376
00:21:46,609 --> 00:21:51,469
instructions that I'm looking to try and

377
00:21:49,339 --> 00:21:54,099
do right and so when one of those

378
00:21:51,470 --> 00:21:56,539
finally says no don't keep looping

379
00:21:54,099 --> 00:21:59,740
obviously the entire pipeline is wrong

380
00:21:56,539 --> 00:22:06,440
at that point you know what I'm saying

381
00:21:59,740 --> 00:22:09,559
so I guess if I understand what their

382
00:22:06,440 --> 00:22:12,740
insinuating here it would mean that the

383
00:22:09,559 --> 00:22:25,940
pause instruction is the signal to the

384
00:22:12,740 --> 00:22:30,039
CPU not to undiluted does is it says hey

385
00:22:25,940 --> 00:22:32,539
mr. read ahead like stop reading ahead

386
00:22:30,039 --> 00:22:34,579
like or stops but don't do any

387
00:22:32,539 --> 00:22:40,279
speculative execution like just do this

388
00:22:34,579 --> 00:22:42,980
thing exactly as it is so don't do

389
00:22:40,279 --> 00:22:44,960
speculative execution that way when week

390
00:22:42,980 --> 00:22:46,549
when we do jump out you don't have to

391
00:22:44,960 --> 00:22:48,529
flush anything and hey we know there's

392
00:22:46,549 --> 00:22:50,569
no benefit to speculate execution

393
00:22:48,529 --> 00:22:52,730
because all you're doing is reading from

394
00:22:50,569 --> 00:22:55,679
a line that you don't control anyway so

395
00:22:52,730 --> 00:23:05,250
until someone else let's go with a line

396
00:22:55,680 --> 00:23:07,259
not going to do anything right I mean I

397
00:23:05,250 --> 00:23:08,849
could see that I could see that being

398
00:23:07,259 --> 00:23:11,819
implemented in the processor that makes

399
00:23:08,849 --> 00:23:14,939
some sense to me I wish they gave a more

400
00:23:11,819 --> 00:23:16,829
specific explanation of albeit so that I

401
00:23:14,940 --> 00:23:19,250
could verify that that sort of cursory

402
00:23:16,829 --> 00:23:21,599
understanding that I just sort of said

403
00:23:19,250 --> 00:23:23,130
actually bears some resemblance to

404
00:23:21,599 --> 00:23:25,139
reality because I don't feel like the

405
00:23:23,130 --> 00:23:26,640
documentation here really gives me

406
00:23:25,140 --> 00:23:29,280
enough to go on to understand what

407
00:23:26,640 --> 00:23:30,990
they're actually doing in practice which

408
00:23:29,279 --> 00:23:32,069
is possibly intentional you know a lot

409
00:23:30,990 --> 00:23:34,099
of times they don't want you to know

410
00:23:32,069 --> 00:23:39,059
exactly what their chip is doing and

411
00:23:34,099 --> 00:23:42,149
that's fine but yeah it's a little

412
00:23:39,059 --> 00:23:44,159
confusing so what that would imply is

413
00:23:42,150 --> 00:23:48,019
that you know in here we would put one

414
00:23:44,160 --> 00:23:52,310
of these and presumably that would just

415
00:23:48,019 --> 00:23:54,329
make things work a little bit better and

416
00:23:52,309 --> 00:23:56,369
in theory it shouldn't change the

417
00:23:54,329 --> 00:23:57,929
execution of our program at all it just

418
00:23:56,369 --> 00:24:00,689
gets rid of a little bit of a pipeline

419
00:23:57,930 --> 00:24:07,009
potential pipeline stall during the spin

420
00:24:00,690 --> 00:24:07,009
lock so so there we go

421
00:24:08,440 --> 00:24:14,320
okay uh so let's say that that was okay

422
00:24:34,869 --> 00:24:40,909
um all right so yeah we'll leave that in

423
00:24:38,900 --> 00:24:46,940
there let me go ahead and bracket that

424
00:24:40,910 --> 00:24:50,050
more and yeah and there we go so now

425
00:24:46,940 --> 00:24:54,110
we've got quite a few of these issues

426
00:24:50,049 --> 00:24:56,089
down let's take a last look at some of

427
00:24:54,109 --> 00:24:58,969
these guys here maybe we can do these

428
00:24:56,089 --> 00:25:01,730
two these are clang compat ones which we

429
00:24:58,970 --> 00:25:06,460
were sort of trying to get to these I

430
00:25:01,730 --> 00:25:06,460
thought wrong meters two pixels we did

431
00:25:08,049 --> 00:25:15,339
okay so that this was a we fixed it for

432
00:25:12,079 --> 00:25:18,829
our main code but we still have the same

433
00:25:15,339 --> 00:25:20,500
problem so maybe we should do this to do

434
00:25:18,829 --> 00:25:22,369
as well so that's another one we can do

435
00:25:20,500 --> 00:25:23,869
all right so you should be able to do

436
00:25:22,369 --> 00:25:25,969
this one we should be able do this one

437
00:25:23,869 --> 00:25:28,009
in this one this one I don't know if

438
00:25:25,970 --> 00:25:29,329
we'll do today claimed compatibility

439
00:25:28,009 --> 00:25:32,569
wise I don't know where we're at on this

440
00:25:29,329 --> 00:25:33,889
we have problems with the macros and I

441
00:25:32,569 --> 00:25:35,389
don't know how much I want to deal with

442
00:25:33,890 --> 00:25:38,720
that because as far as I'm concerned on

443
00:25:35,390 --> 00:25:41,950
GCC you know if you can't run the debug

444
00:25:38,720 --> 00:25:45,740
system I'm not sure I care as far as

445
00:25:41,950 --> 00:25:47,480
cross-platform ISCO's there if it means

446
00:25:45,740 --> 00:25:49,430
I gotta deal with more macro nonsense

447
00:25:47,480 --> 00:25:50,930
which is always a pain so I don't know

448
00:25:49,430 --> 00:25:52,430
if anyone's figured out how we can do

449
00:25:50,930 --> 00:25:58,640
our macros the way we want to do our

450
00:25:52,430 --> 00:26:01,519
macros but yeah so let's take a look at

451
00:25:58,640 --> 00:26:03,920
the other ones instead let's take a look

452
00:26:01,519 --> 00:26:05,389
at this usual arithmetic of ridges where

453
00:26:03,920 --> 00:26:06,620
apparently applied to the typography

454
00:26:05,390 --> 00:26:11,320
Eric my code this caused a problem when

455
00:26:06,619 --> 00:26:14,059
clogging the macro air from GCC and

456
00:26:11,319 --> 00:26:15,769
clang let's see here a second order is a

457
00:26:14,059 --> 00:26:17,539
promotable type you ate undefined

458
00:26:15,769 --> 00:26:19,809
behavior because our grits are promoted

459
00:26:17,539 --> 00:26:19,809
to int

460
00:26:25,538 --> 00:26:45,889
okay I guess I see what that saying

461
00:26:32,028 --> 00:26:47,750
where did we do that so I guess what I

462
00:26:45,890 --> 00:26:50,419
don't understand here is are we

463
00:26:47,750 --> 00:26:53,778
essentially saying that there is no way

464
00:26:50,419 --> 00:26:59,090
to read one of these under any

465
00:26:53,778 --> 00:27:01,778
circumstances meaning you cannot ever do

466
00:26:59,089 --> 00:27:01,778
a read bar

467
00:27:09,559 --> 00:27:14,549
because I thought the idea was that the

468
00:27:12,480 --> 00:27:16,440
integer length fields to specify this

469
00:27:14,549 --> 00:27:18,950
but I guess what we're saying is well

470
00:27:16,440 --> 00:27:21,690
hey it's going to get promoted to an int

471
00:27:18,950 --> 00:27:23,549
because the compiler defines all ver arc

472
00:27:21,690 --> 00:27:28,590
functions as promoting their arguments

473
00:27:23,549 --> 00:27:32,119
too if they can so maybe the case is

474
00:27:28,589 --> 00:27:43,289
just that when you do integer length I

475
00:27:32,119 --> 00:27:45,329
where do we actually set that so we

476
00:27:43,289 --> 00:27:48,240
don't support 64-bit integers yet it

477
00:27:45,329 --> 00:27:51,000
looks like either all right well so if

478
00:27:48,240 --> 00:27:52,829
energy length is always four then I

479
00:27:51,000 --> 00:27:59,759
guess what we could do is say you know

480
00:27:52,829 --> 00:28:02,789
in general no matter what you try to

481
00:27:59,759 --> 00:28:04,470
read if it's gonna be promotable to an

482
00:28:02,789 --> 00:28:08,490
int than it will be promoted to an int

483
00:28:04,470 --> 00:28:11,579
if that makes sense and then if you are

484
00:28:08,490 --> 00:28:13,859
actually 64-bit then it'll read that but

485
00:28:11,579 --> 00:28:17,849
I think that that does make sense

486
00:28:13,859 --> 00:28:19,199
because my recollection of how and we

487
00:28:17,849 --> 00:28:20,459
were never calling that code path so

488
00:28:19,200 --> 00:28:23,519
that would have been like a bug but we

489
00:28:20,460 --> 00:28:24,870
just would never see it right so it

490
00:28:23,519 --> 00:28:28,889
probably is better to write it that way

491
00:28:24,869 --> 00:28:31,649
because if you were to pass a care like

492
00:28:28,890 --> 00:28:34,890
a one-bite integer or tube ID integer if

493
00:28:31,650 --> 00:28:39,180
you were to pass those down you would

494
00:28:34,890 --> 00:28:40,500
definitely see those being converted up

495
00:28:39,180 --> 00:28:42,660
two integers right because that's the

496
00:28:40,500 --> 00:28:45,059
definition of it now I assume that care

497
00:28:42,660 --> 00:28:48,450
we did the same way yeah you can see we

498
00:28:45,059 --> 00:28:49,829
did that so I assume that this is

499
00:28:48,450 --> 00:28:52,200
actually this to do could be removed and

500
00:28:49,829 --> 00:28:59,819
that is exactly what it should be so I

501
00:28:52,200 --> 00:29:02,759
think I believe we fixed this on day 2

502
00:28:59,819 --> 00:29:06,908
30 I believe that is the correct thing

503
00:29:02,759 --> 00:29:11,019
to do there okay

504
00:29:06,909 --> 00:29:12,639
I passing v8 list is pointer I'll see

505
00:29:11,019 --> 00:29:14,829
you at lunch at our sex VA lista finds

506
00:29:12,638 --> 00:29:16,238
an array type okay this caused the

507
00:29:14,829 --> 00:29:19,329
problem when passed as a pointer in the

508
00:29:16,239 --> 00:29:22,808
reed ver arg functions she has a similar

509
00:29:19,329 --> 00:29:24,608
complaint so canada function on file

510
00:29:22,808 --> 00:29:28,239
known conversion from built-in vilas

511
00:29:24,608 --> 00:29:30,069
star for a second argument so i don't

512
00:29:28,239 --> 00:29:33,149
know what we want to do about that I

513
00:29:30,069 --> 00:29:33,148
guess what we could do

514
00:29:45,679 --> 00:29:52,669
let's take a look here lead bar are

515
00:29:49,169 --> 00:29:52,669
designed to Jay

516
00:30:08,679 --> 00:30:14,200
I'll be honest I don't super understand

517
00:30:11,349 --> 00:30:16,839
however why we are not able to take the

518
00:30:14,200 --> 00:30:20,490
address of it I guess because it is not

519
00:30:16,839 --> 00:30:26,528
really an actual value on the stack I

520
00:30:20,490 --> 00:30:35,798
guess so i'm not sure what the fix for

521
00:30:26,528 --> 00:30:47,829
that is yes its stack overflow but the

522
00:30:35,798 --> 00:30:51,480
answer is good okay so we essentially

523
00:30:47,829 --> 00:30:51,480
have to wrap it into something

524
00:30:58,669 --> 00:31:06,690
hmm well that seems like a really like

525
00:31:04,769 --> 00:31:08,400
if I may that just seems really stupid

526
00:31:06,690 --> 00:31:10,110
in general because it's like you need to

527
00:31:08,400 --> 00:31:13,259
be able to pass this to utility

528
00:31:10,109 --> 00:31:15,959
functions but okay let me take a look

529
00:31:13,259 --> 00:31:20,669
here at what I think would be the most

530
00:31:15,960 --> 00:31:23,159
expedient way to fix this so we passed

531
00:31:20,669 --> 00:31:27,080
the VA list to for mastering list and

532
00:31:23,159 --> 00:31:29,520
it's going to call read vard float

533
00:31:27,079 --> 00:31:35,849
reverb site integer right it's going to

534
00:31:29,519 --> 00:31:38,278
call these guys here so what I guess is

535
00:31:35,849 --> 00:31:55,589
true is you know I could macro these

536
00:31:38,278 --> 00:31:59,390
guys and that would work I mean you know

537
00:31:55,589 --> 00:31:59,389
I could do something like this

538
00:32:08,109 --> 00:32:12,069
not sure I love this idea

539
00:32:18,680 --> 00:32:35,539
but here you go

540
00:32:46,659 --> 00:32:51,220
so I could do something like that right

541
00:32:48,638 --> 00:32:53,348
where it's a macro now and so since it's

542
00:32:51,220 --> 00:32:57,479
a macro it'll just operate directly on

543
00:32:53,348 --> 00:33:04,118
the VAR glist that it's actually using

544
00:32:57,479 --> 00:33:06,129
does this not get called off it does so

545
00:33:04,118 --> 00:33:09,220
and now I would have to remove the

546
00:33:06,128 --> 00:33:11,108
address of situation here right because

547
00:33:09,220 --> 00:33:12,368
now I just want to pass it I just want

548
00:33:11,108 --> 00:33:17,168
to like use it as the argument to a

549
00:33:12,368 --> 00:33:19,329
macro so I don't you know I don't want

550
00:33:17,169 --> 00:33:21,580
to actually pass it as an address

551
00:33:19,329 --> 00:33:29,978
anymore I want to just use it as is and

552
00:33:21,579 --> 00:33:34,439
in theory that would just work I got to

553
00:33:29,979 --> 00:33:43,859
do the other ones here so pound fine

554
00:33:34,440 --> 00:33:43,859
there we go so this would be another one

555
00:33:44,098 --> 00:33:56,519
these are backwards here just need to do

556
00:33:53,108 --> 00:33:56,519
basically the exact same code

557
00:34:03,880 --> 00:34:17,019
so if the length is 8 then we want to

558
00:34:09,168 --> 00:34:28,639
use the 64-bit read and if the length is

559
00:34:17,019 --> 00:34:34,159
not then we use the 32-bit read okay and

560
00:34:28,639 --> 00:34:39,279
finally exact same thing for this guy

561
00:34:34,159 --> 00:34:43,760
it's just doing the signed version of it

562
00:34:39,280 --> 00:34:45,679
so this guy's a little trickier but

563
00:34:43,760 --> 00:34:47,000
actually I don't know that we need to do

564
00:34:45,679 --> 00:34:49,579
this anymore because I can just

565
00:34:47,000 --> 00:34:51,500
basically copy this code right I can

566
00:34:49,579 --> 00:34:53,539
just say like okay this is pretty

567
00:34:51,500 --> 00:34:55,909
trivial to do here might as well just

568
00:34:53,539 --> 00:35:00,679
copy it one more time and say well

569
00:34:55,909 --> 00:35:03,619
alright let's use assigned value

570
00:35:00,679 --> 00:35:07,069
everywhere for that so in theory I think

571
00:35:03,619 --> 00:35:08,750
that would work and I'll verify that we

572
00:35:07,070 --> 00:35:10,960
didn't break any of our code but we'll

573
00:35:08,750 --> 00:35:12,920
need somebody on GCC to test that out

574
00:35:10,960 --> 00:35:18,170
since we're kind of just shooting in the

575
00:35:12,920 --> 00:35:23,869
dark here trying to help them out okay

576
00:35:18,170 --> 00:35:29,659
in theory we fix this on day 3 30 what

577
00:35:23,869 --> 00:35:35,109
pain in the butt totally unnecessary and

578
00:35:29,659 --> 00:35:43,730
don't like it at all okay so oops I

579
00:35:35,110 --> 00:35:45,470
think we had one more yeah and so I

580
00:35:43,730 --> 00:35:47,719
think the only one the other one I

581
00:35:45,469 --> 00:35:51,109
wanted to do here was the wrong leaders

582
00:35:47,719 --> 00:35:53,089
to pixels one we could try one of those

583
00:35:51,110 --> 00:35:56,480
to this one and this one are kind of

584
00:35:53,090 --> 00:35:59,750
going to remain for a little bit so this

585
00:35:56,480 --> 00:36:01,639
one is just we've got the same meters

586
00:35:59,750 --> 00:36:05,300
two pixels computations going on in the

587
00:36:01,639 --> 00:36:09,230
cutscene code right so here's our

588
00:36:05,300 --> 00:36:12,050
cutscene code meters sit here meters two

589
00:36:09,230 --> 00:36:14,929
pixels so we've got our meters two

590
00:36:12,050 --> 00:36:16,160
pixels code and we've got the to do for

591
00:36:14,929 --> 00:36:19,879
unify the stuff

592
00:36:16,159 --> 00:36:22,639
and like if we go over to world no 2

593
00:36:19,880 --> 00:36:26,000
think you can see the code is the same

594
00:36:22,639 --> 00:36:27,858
over here so you can kind of see we've

595
00:36:26,000 --> 00:36:32,980
got this the same things exactly the

596
00:36:27,858 --> 00:36:35,630
same things being defined multiple loops

597
00:36:32,980 --> 00:36:40,010
multiple times and so the question was

598
00:36:35,630 --> 00:36:44,599
do we want to try and unify that now

599
00:36:40,010 --> 00:36:46,339
that we sort of have a different now

600
00:36:44,599 --> 00:36:47,960
that we fix the equation to be right in

601
00:36:46,338 --> 00:36:49,389
one place and it's wrong in the other

602
00:36:47,960 --> 00:36:52,309
place do we want to try and do something

603
00:36:49,389 --> 00:36:56,239
smarter here and the answer is I don't

604
00:36:52,309 --> 00:36:58,579
really know it seems like probably the

605
00:36:56,239 --> 00:37:01,818
easiest thing to do would be to just

606
00:36:58,579 --> 00:37:05,599
have a thing that that does just this

607
00:37:01,818 --> 00:37:07,599
one piece uh so you know if we want to

608
00:37:05,599 --> 00:37:10,970
share this we could do something like

609
00:37:07,599 --> 00:37:13,010
you know standard camera params or

610
00:37:10,969 --> 00:37:18,588
something like that and we could have

611
00:37:13,010 --> 00:37:20,900
width of monitor meters to pixels focal

612
00:37:18,588 --> 00:37:23,119
length you know and then we could have

613
00:37:20,900 --> 00:37:37,760
like gets standard or you know we could

614
00:37:23,119 --> 00:37:40,059
even do this camera Rams and that could

615
00:37:37,760 --> 00:37:40,059
just return

616
00:37:45,019 --> 00:37:58,050
whatever we think the right values here

617
00:37:47,099 --> 00:38:06,659
would be so we believe lease at the time

618
00:37:58,050 --> 00:38:08,850
being this to be the case so all we

619
00:38:06,659 --> 00:38:22,289
would need is something that passes the

620
00:38:08,849 --> 00:38:24,329
width and then off we would go so yeah I

621
00:38:22,289 --> 00:38:27,300
don't know if focal length gets used

622
00:38:24,329 --> 00:38:33,960
anywhere else it doesn't meters to

623
00:38:27,300 --> 00:38:36,960
pixels it doesn't with the monitor it

624
00:38:33,960 --> 00:38:38,820
doesn't so probably what we can do is

625
00:38:36,960 --> 00:38:43,260
just say all right center camp Rams

626
00:38:38,820 --> 00:38:46,890
camera equals get 200 camera params and

627
00:38:43,260 --> 00:38:53,160
we can pass that draw buffer with to the

628
00:38:46,889 --> 00:38:56,279
function we can keep this comment and

629
00:38:53,159 --> 00:39:01,190
then we could just say all right get rid

630
00:38:56,280 --> 00:39:01,190
of that and grab those out of here

631
00:39:05,760 --> 00:39:26,220
uh so yeah I'm I'm fine with that I feel

632
00:39:23,909 --> 00:39:27,839
like that's pretty reasonable get

633
00:39:26,219 --> 00:39:30,089
standard camp rands driver for width

634
00:39:27,840 --> 00:39:31,500
sanic Arizona cleared identifier that's

635
00:39:30,090 --> 00:39:34,050
because that's not what scholars just

636
00:39:31,500 --> 00:39:36,900
called camera prams so if we were to

637
00:39:34,050 --> 00:39:38,880
then share that you know and I could put

638
00:39:36,900 --> 00:39:40,769
that in the render or something I'm not

639
00:39:38,880 --> 00:39:43,260
really sure where that would be most

640
00:39:40,769 --> 00:39:45,780
appropriate but yeah you know let's say

641
00:39:43,260 --> 00:39:47,790
we just put that in there for now then I

642
00:39:45,780 --> 00:39:53,519
can just go back over the cutscene and

643
00:39:47,789 --> 00:39:55,259
call it the same way and then we can

644
00:39:53,519 --> 00:39:57,239
always adjust the parameters if we need

645
00:39:55,260 --> 00:40:00,150
to buy having some other function that

646
00:39:57,239 --> 00:40:02,279
lets us pass something in there more

647
00:40:00,150 --> 00:40:05,130
specifically potentially but let's go

648
00:40:02,280 --> 00:40:22,769
ahead and start with that and we'll see

649
00:40:05,130 --> 00:40:25,320
what happens and yeah now that may mess

650
00:40:22,769 --> 00:40:27,150
up all of our camera settings right so

651
00:40:25,320 --> 00:40:31,559
we may have to readjust the foot that

652
00:40:27,150 --> 00:40:35,400
focal lengths to make sense for what

653
00:40:31,559 --> 00:40:37,650
we're trying to do here right like you

654
00:40:35,400 --> 00:40:38,760
can see that that's like all of our

655
00:40:37,650 --> 00:40:43,260
scenes are going to be a little bit

656
00:40:38,760 --> 00:40:45,210
wrong so we may have to kind of have a

657
00:40:43,260 --> 00:40:46,650
thing where maybe you maybe you pass the

658
00:40:45,210 --> 00:40:48,000
focal length in because I think all of

659
00:40:46,650 --> 00:40:50,250
these are going to be like a little bit

660
00:40:48,000 --> 00:40:51,449
wrong all of the all of the layouts for

661
00:40:50,250 --> 00:40:54,539
these guys are going to be a little bit

662
00:40:51,449 --> 00:40:56,689
wrong and we're going to have to cut the

663
00:40:54,539 --> 00:40:59,369
other they're going to be too close in

664
00:40:56,690 --> 00:41:02,340
so I think what we want to do there is

665
00:40:59,369 --> 00:41:06,569
just say like okay let's you know we've

666
00:41:02,340 --> 00:41:09,780
got that one we know that the focal

667
00:41:06,570 --> 00:41:11,730
length was three on this one let's

668
00:41:09,780 --> 00:41:15,390
change the focal length to other things

669
00:41:11,730 --> 00:41:16,800
and see what happens until we get

670
00:41:15,389 --> 00:41:18,949
something that's a little bit better for

671
00:41:16,800 --> 00:41:18,950
us

672
00:41:27,380 --> 00:41:31,700
let's see if that's a little more like

673
00:41:30,170 --> 00:41:41,289
what we wanted for our cut seeing stuff

674
00:41:31,699 --> 00:41:41,288
maybe something like that

675
00:42:06,139 --> 00:42:11,889
can we speed up the time step here at

676
00:42:09,739 --> 00:42:11,889
all

677
00:42:16,000 --> 00:42:22,719
we need better sliders but that looks

678
00:42:21,309 --> 00:42:25,110
like a pretty good focal length for what

679
00:42:22,719 --> 00:42:25,109
we're doing

680
00:42:36,590 --> 00:42:40,280
so the question is does that work for

681
00:42:38,599 --> 00:42:45,319
the game as well should we just leave

682
00:42:40,280 --> 00:42:46,610
that focal length for everything no so

683
00:42:45,320 --> 00:42:53,059
I'm just going to make it so that you

684
00:42:46,610 --> 00:42:54,320
can pass the focal length here and then

685
00:42:53,059 --> 00:42:57,079
we'll just pass the one that we actually

686
00:42:54,320 --> 00:42:59,150
want so in cutscene when we call get

687
00:42:57,079 --> 00:43:00,409
standard camera prams will pass 1.25

688
00:42:59,150 --> 00:43:09,829
because that's what we were using for

689
00:43:00,409 --> 00:43:11,569
that adjustment at which point it's kind

690
00:43:09,829 --> 00:43:12,860
of stupid that we're even passing in

691
00:43:11,570 --> 00:43:14,809
there but hey we'll leave it that way

692
00:43:12,860 --> 00:43:33,349
and then we'll pass three for the other

693
00:43:14,809 --> 00:43:36,980
one ah sorry yes we won't pass three

694
00:43:33,349 --> 00:43:42,670
will pass a third okay so i think that's

695
00:43:36,980 --> 00:43:42,670
good now and we can close that guy off

696
00:44:05,130 --> 00:44:07,940
there we go

697
00:44:09,119 --> 00:44:15,539
alright so let's see how are we doing

698
00:44:12,088 --> 00:44:17,190
here we have four issues remaining we've

699
00:44:15,539 --> 00:44:19,589
got a fail-safe in here and we've got

700
00:44:17,190 --> 00:44:22,170
the client compatibility one so I think

701
00:44:19,588 --> 00:44:23,849
that's good for now although I guess

702
00:44:22,170 --> 00:44:26,519
since we've got what we've got 15

703
00:44:23,849 --> 00:44:28,470
minutes left I suppose if we have 15

704
00:44:26,518 --> 00:44:31,828
minutes left we could do this take a

705
00:44:28,469 --> 00:44:33,268
look at this failsafe one this is not

706
00:44:31,829 --> 00:44:34,410
really a bug that we care super much

707
00:44:33,268 --> 00:44:36,899
about because it wouldn't affect end

708
00:44:34,409 --> 00:44:40,348
users but you know like I said we've got

709
00:44:36,900 --> 00:44:42,298
15 minutes we might as well do it so

710
00:44:40,349 --> 00:44:44,670
let's take a look at what it's talking

711
00:44:42,298 --> 00:44:47,369
about it just says that you know when we

712
00:44:44,670 --> 00:44:49,108
do win32 load game code obviously with

713
00:44:47,369 --> 00:44:50,430
3g load game code could fail right

714
00:44:49,108 --> 00:44:52,440
because it's trying to load the game

715
00:44:50,429 --> 00:44:54,058
code but if it can't for some reason

716
00:44:52,440 --> 00:44:56,369
like the games to be recompiled or

717
00:44:54,059 --> 00:44:59,990
whatever so again not really an end user

718
00:44:56,369 --> 00:45:03,269
scenario but it is a developer scenario

719
00:44:59,989 --> 00:45:05,639
when we call win32 load game code and it

720
00:45:03,268 --> 00:45:14,729
can't load the game then what's going to

721
00:45:05,639 --> 00:45:17,190
happen is it can't do debug endframe it

722
00:45:14,730 --> 00:45:20,130
can't call this because it won't be

723
00:45:17,190 --> 00:45:22,200
there right and so I think the idea is

724
00:45:20,130 --> 00:45:25,769
that if it just can't ever reload it at

725
00:45:22,199 --> 00:45:29,009
all then it gets into a bad state where

726
00:45:25,768 --> 00:45:33,238
it is just going to accumulate debug

727
00:45:29,009 --> 00:45:38,599
things forever and it can't ever get

728
00:45:33,239 --> 00:45:38,599
can't ever flush them so I'm not sure

729
00:45:46,179 --> 00:45:51,230
shouldn't there be a global debug table

730
00:45:48,889 --> 00:45:55,670
thing in here I forget it's been a long

731
00:45:51,230 --> 00:45:58,639
time there it is d book too so record

732
00:45:55,670 --> 00:46:02,570
increment i think is the thing that

733
00:45:58,639 --> 00:46:04,940
stops recording from happening if we

734
00:46:02,570 --> 00:46:08,180
wanted to stop recording right in fact

735
00:46:04,940 --> 00:46:12,470
there it is a debug set event recording

736
00:46:08,179 --> 00:46:14,750
enabled that would turn it off so what

737
00:46:12,469 --> 00:46:23,139
we probably could do is we could

738
00:46:14,750 --> 00:46:27,769
probably do something like this and then

739
00:46:23,139 --> 00:46:29,230
you know turn it back on again but it

740
00:46:27,769 --> 00:46:34,009
looks like we're actually doing that

741
00:46:29,230 --> 00:46:36,019
here so when we tried to reload if the

742
00:46:34,010 --> 00:46:41,710
game wasn't valid it should have turned

743
00:46:36,019 --> 00:46:41,710
it off in fact why didn't that happen I

744
00:46:44,500 --> 00:46:50,449
guess it doesn't happen if the first

745
00:46:47,000 --> 00:47:00,889
time through like when is executable

746
00:46:50,449 --> 00:47:03,859
needs to be reloaded so i suppose what

747
00:47:00,889 --> 00:47:07,250
we need to do here is do this at the

748
00:47:03,860 --> 00:47:10,550
outset probably right so when we do

749
00:47:07,250 --> 00:47:14,239
win32 load game code the first time we

750
00:47:10,550 --> 00:47:16,340
probably want to say is like okay set

751
00:47:14,239 --> 00:47:19,059
event recording to whether or not the

752
00:47:16,340 --> 00:47:21,350
game is valid like right off the bat

753
00:47:19,059 --> 00:47:25,449
that's probably the only thing we would

754
00:47:21,349 --> 00:47:29,389
really need to do and we could test that

755
00:47:25,449 --> 00:47:32,139
right by saying like okay game is valid

756
00:47:29,389 --> 00:47:38,500
equals false and we could say game i

757
00:47:32,139 --> 00:47:38,500
debug what is it endframe

758
00:47:42,940 --> 00:47:52,480
so we could nuke it and set set that up

759
00:47:48,849 --> 00:47:52,480
and we can see how it goes

760
00:48:19,610 --> 00:48:26,460
so yeah I think that's probably fine but

761
00:48:24,480 --> 00:48:28,440
I'm not exactly sure because this is not

762
00:48:26,460 --> 00:48:31,849
something that's ever happened to us so

763
00:48:28,440 --> 00:48:31,849
I'm not one hundred percent certain

764
00:48:40,559 --> 00:48:52,119
so I'm not sure so let's take a look at

765
00:48:47,050 --> 00:48:53,890
is valid so it looks like we're also

766
00:48:52,119 --> 00:49:08,940
missing this so that's another problem

767
00:48:53,889 --> 00:49:08,940
there okay okay so that probably does it

768
00:49:20,849 --> 00:49:25,989
but we'll let that be confirmed by

769
00:49:23,199 --> 00:49:29,409
whoever wanted that actually fixed all

770
00:49:25,989 --> 00:49:31,539
right so now we're just down to a clan

771
00:49:29,409 --> 00:49:34,899
compatibility here because this these

772
00:49:31,539 --> 00:49:36,519
two are sort of not code things those

773
00:49:34,900 --> 00:49:42,130
were things for me to do some day on my

774
00:49:36,519 --> 00:49:45,880
own these are the Klang compatibility

775
00:49:42,130 --> 00:49:50,170
ones that are still there and probably

776
00:49:45,880 --> 00:49:53,650
what I would say is I'm going to need

777
00:49:50,170 --> 00:49:55,090
somebody to figure out of this of the

778
00:49:53,650 --> 00:49:56,559
things in here that we haven't fixed I

779
00:49:55,090 --> 00:49:59,110
think we actually fix some of them of

780
00:49:56,559 --> 00:50:02,289
the things in here that we haven't fixed

781
00:49:59,110 --> 00:50:04,599
what actually do you want me to do about

782
00:50:02,289 --> 00:50:06,579
it right so somebody has to come up with

783
00:50:04,599 --> 00:50:08,860
who uses clanging in GCC on a day-to-day

784
00:50:06,579 --> 00:50:10,809
basis oh they can test it figure out

785
00:50:08,860 --> 00:50:13,570
what solves this problem and then I'll

786
00:50:10,809 --> 00:50:15,549
do it but I can't really speculate as to

787
00:50:13,570 --> 00:50:20,500
how to fix their macro processing very

788
00:50:15,550 --> 00:50:22,030
well because I don't am not running with

789
00:50:20,500 --> 00:50:24,480
them so it's pretty hard to do at that

790
00:50:22,030 --> 00:50:27,400
point and these I guess we already did

791
00:50:24,480 --> 00:50:29,079
so all of these are done it's just the

792
00:50:27,400 --> 00:50:31,000
macro debug macros that are a problem

793
00:50:29,079 --> 00:50:34,029
and then I think we could close this

794
00:50:31,000 --> 00:50:35,349
issue so someone if someone wants to do

795
00:50:34,030 --> 00:50:37,780
that send it to me then I'll take a look

796
00:50:35,349 --> 00:50:39,009
at that otherwise I think we're good so

797
00:50:37,780 --> 00:50:42,220
let's go ahead and end it since we don't

798
00:50:39,010 --> 00:50:44,530
have any bugs left right now to we can

799
00:50:42,219 --> 00:50:51,159
look at let's go ahead and end it for

800
00:50:44,530 --> 00:50:53,070
today and go to the Q and a if anyone

801
00:50:51,159 --> 00:50:55,460
has any questions I can

802
00:50:53,070 --> 00:50:55,460
take them now

803
00:51:09,289 --> 00:51:14,579
Casey is there a bug with chun creation

804
00:51:12,000 --> 00:51:19,559
you added a free list up but are not

805
00:51:14,579 --> 00:51:31,639
using it well we could certainly take a

806
00:51:19,559 --> 00:51:31,639
look so let's see to do

807
00:51:56,690 --> 00:52:08,329
so what what makes you say that what

808
00:52:06,260 --> 00:52:16,099
makes you say that tell config could you

809
00:52:08,329 --> 00:52:19,220
could you be more specific about that

810
00:52:16,099 --> 00:52:21,559
perhaps I'm going to look at Martin's

811
00:52:19,219 --> 00:52:23,149
thing he said he'd caught a copy-paste

812
00:52:21,559 --> 00:52:25,599
bug that I did on stream so I'm going to

813
00:52:23,150 --> 00:52:29,210
go fix that while you while you type in

814
00:52:25,599 --> 00:52:30,890
more stuff when doing copypasta you left

815
00:52:29,210 --> 00:52:34,119
f60 forecast in the wrong place

816
00:52:30,889 --> 00:52:34,118
returning operator ah thank you

817
00:52:49,130 --> 00:52:52,088
Thanks Martin's

818
00:52:59,000 --> 00:53:02,730
when you found yourself unable to write

819
00:53:01,260 --> 00:53:04,560
code for something what would you do to

820
00:53:02,730 --> 00:53:13,110
try to find something to do for said

821
00:53:04,559 --> 00:53:15,150
project um well I guess what I would say

822
00:53:13,110 --> 00:53:19,050
about that is there's there's a couple

823
00:53:15,150 --> 00:53:20,610
things so one if you're having if you

824
00:53:19,050 --> 00:53:21,720
get stuck on a problem then there's a

825
00:53:20,610 --> 00:53:23,280
lot of things you could do to get

826
00:53:21,719 --> 00:53:25,679
yourself unstuck on the problem if it's

827
00:53:23,280 --> 00:53:27,600
if it's a if it's the problem that you

828
00:53:25,679 --> 00:53:29,969
can't figure out how to do the code

829
00:53:27,599 --> 00:53:32,369
right you can talk to some other

830
00:53:29,969 --> 00:53:33,629
programmers about it you could post on

831
00:53:32,369 --> 00:53:37,440
the internet about it like a blog post

832
00:53:33,630 --> 00:53:38,940
and get help from people I mean you can

833
00:53:37,440 --> 00:53:42,150
ask about it on handmade hero people do

834
00:53:38,940 --> 00:53:44,519
that often right even you can try

835
00:53:42,150 --> 00:53:46,019
experimenting try like writing some

836
00:53:44,519 --> 00:53:47,219
little side code to try and get more

837
00:53:46,019 --> 00:53:50,759
traction on the problem there's a lot of

838
00:53:47,219 --> 00:53:52,169
things you can do for that on the other

839
00:53:50,760 --> 00:53:54,690
hand if your problem is just that you're

840
00:53:52,170 --> 00:53:56,159
doing a really like sloggi problem that

841
00:53:54,690 --> 00:53:57,750
takes a long time and isn't very

842
00:53:56,159 --> 00:53:59,699
rewarding to work on until like the end

843
00:53:57,750 --> 00:54:01,199
and you're having trouble just staying

844
00:53:59,699 --> 00:54:04,079
motivated doing all the work that's

845
00:54:01,199 --> 00:54:05,819
necessary to get it going you know

846
00:54:04,079 --> 00:54:07,559
sometimes it is just a slog and

847
00:54:05,820 --> 00:54:10,980
sometimes you know you got it you gotta

848
00:54:07,559 --> 00:54:13,829
grind through it and my advice on that

849
00:54:10,980 --> 00:54:15,360
is just don't stop right like sometimes

850
00:54:13,829 --> 00:54:17,400
you're going to be down and you're only

851
00:54:15,360 --> 00:54:18,690
right in two hours or three hours of

852
00:54:17,400 --> 00:54:20,430
code today or something because it's

853
00:54:18,690 --> 00:54:22,019
just such a slog and you're not feeling

854
00:54:20,429 --> 00:54:23,489
good about it but you got to keep

855
00:54:22,019 --> 00:54:24,210
writing code because writing codes the

856
00:54:23,489 --> 00:54:25,889
only way you're going to get yourself

857
00:54:24,210 --> 00:54:27,210
out of it and it's not because you just

858
00:54:25,889 --> 00:54:28,739
need to pile code on top of kotick type

859
00:54:27,210 --> 00:54:31,079
of code it just means you got to keep

860
00:54:28,739 --> 00:54:33,029
trying things and until it clicks until

861
00:54:31,079 --> 00:54:34,769
this stuff works and so the worst thing

862
00:54:33,030 --> 00:54:36,210
you can do is get yourself in a

863
00:54:34,769 --> 00:54:37,530
situation where you stop writing code

864
00:54:36,210 --> 00:54:38,849
because you think you're just going to

865
00:54:37,530 --> 00:54:40,080
have an epiphany and then it's going to

866
00:54:38,849 --> 00:54:42,809
be clear how to write it all it's like

867
00:54:40,079 --> 00:54:45,239
no don't do that that's rarely the right

868
00:54:42,809 --> 00:54:47,340
thing to do yes the code that you may be

869
00:54:45,239 --> 00:54:48,629
slogging through that doesn't seem like

870
00:54:47,340 --> 00:54:50,640
it's right and you're confused and

871
00:54:48,630 --> 00:54:52,769
whatever yes it's probably the wrong

872
00:54:50,639 --> 00:54:56,069
code yes you will probably have to

873
00:54:52,769 --> 00:54:57,989
delete it right but that's not the point

874
00:54:56,070 --> 00:55:00,360
the point is getting the code out there

875
00:54:57,989 --> 00:55:02,759
and trying those things is what will get

876
00:55:00,360 --> 00:55:04,470
you to the Epiphany and if all you do is

877
00:55:02,760 --> 00:55:06,870
just sit there and sit inside your head

878
00:55:04,469 --> 00:55:08,519
all the time you probably won't be able

879
00:55:06,869 --> 00:55:10,789
to get there because if it's a coding

880
00:55:08,519 --> 00:55:12,090
problem like not a math problem you know

881
00:55:10,789 --> 00:55:14,429
then

882
00:55:12,090 --> 00:55:17,070
it's probably too inked intricate for

883
00:55:14,429 --> 00:55:19,679
you to really see the truth in it just

884
00:55:17,070 --> 00:55:21,210
inside your own head and this is the

885
00:55:19,679 --> 00:55:22,619
problem I have with a lot of those kind

886
00:55:21,210 --> 00:55:24,449
of like super formal methodologies like

887
00:55:22,619 --> 00:55:26,519
uml diagrams and all this sort of

888
00:55:24,449 --> 00:55:28,829
nonsense is because they really aren't

889
00:55:26,519 --> 00:55:30,300
any good for things that are complicated

890
00:55:28,829 --> 00:55:32,219
and that's the only time you really need

891
00:55:30,300 --> 00:55:34,380
them right and it's because you actually

892
00:55:32,219 --> 00:55:37,109
need to see how the real code works

893
00:55:34,380 --> 00:55:39,329
because the details are where the

894
00:55:37,110 --> 00:55:41,970
trickiness and the complexity lies not

895
00:55:39,329 --> 00:55:43,259
the abstract bigger picture most usually

896
00:55:41,969 --> 00:55:45,119
the abstract bigger picture is clear

897
00:55:43,260 --> 00:55:46,410
look I just want to do this thing to

898
00:55:45,119 --> 00:55:48,960
this thing or whatever right it's very

899
00:55:46,409 --> 00:55:50,940
simple to state it's all of the minutia

900
00:55:48,960 --> 00:55:52,409
that important and so sometimes you'll

901
00:55:50,940 --> 00:55:54,090
find yourself in a situation where

902
00:55:52,409 --> 00:55:55,949
you're having a lot of trouble I still

903
00:55:54,090 --> 00:55:57,240
have this to this day I often do that

904
00:55:55,949 --> 00:55:59,599
when I'm working on new architectures

905
00:55:57,239 --> 00:56:01,949
like that often often it is not unusual

906
00:55:59,599 --> 00:56:03,299
it's not because you're a bad program or

907
00:56:01,949 --> 00:56:04,710
anything like that something good

908
00:56:03,300 --> 00:56:07,470
programmers can have happen to them

909
00:56:04,710 --> 00:56:09,059
throughout the entire course of their

910
00:56:07,469 --> 00:56:10,500
programming career if they're if they're

911
00:56:09,059 --> 00:56:14,159
continuing to challenge themselves and

912
00:56:10,500 --> 00:56:16,289
and if they don't stagnate you know and

913
00:56:14,159 --> 00:56:17,670
so I would say the most important thing

914
00:56:16,289 --> 00:56:20,039
to do during those times is to be

915
00:56:17,670 --> 00:56:22,769
persistent and force yourself to write a

916
00:56:20,039 --> 00:56:25,230
few hours of code every day never let it

917
00:56:22,769 --> 00:56:28,849
drop to zero right never let a hard

918
00:56:25,230 --> 00:56:31,740
problem stop you from writing some code

919
00:56:28,849 --> 00:56:33,269
to try an experiment or push on the

920
00:56:31,739 --> 00:56:34,919
problem because eventually you will get

921
00:56:33,269 --> 00:56:37,349
it if you are persistent and keep trying

922
00:56:34,920 --> 00:56:39,630
things and so that's real important and

923
00:56:37,349 --> 00:56:40,860
there has been many times in my

924
00:56:39,630 --> 00:56:42,890
programming career where I've gotten

925
00:56:40,860 --> 00:56:45,420
into a state where it was really grim

926
00:56:42,889 --> 00:56:47,309
but I just kept coding a little every

927
00:56:45,420 --> 00:56:49,349
day and eventually i clawed my way out

928
00:56:47,309 --> 00:56:51,119
of it as my brain sort of started to

929
00:56:49,349 --> 00:56:52,799
internalize all the things and I got

930
00:56:51,119 --> 00:56:54,329
enough tries in the area and I saw how

931
00:56:52,800 --> 00:56:56,850
it sort of started me I was like ah ok

932
00:56:54,329 --> 00:56:59,279
now I've got it and then I go right but

933
00:56:56,849 --> 00:57:02,009
you can't get you won't get over that

934
00:56:59,280 --> 00:57:03,720
hump if you stop coding you'll just sit

935
00:57:02,010 --> 00:57:06,090
there and paralysis forever until you

936
00:57:03,719 --> 00:57:08,129
start so never let your coding rate fall

937
00:57:06,090 --> 00:57:09,900
to zero is like probably the biggest

938
00:57:08,130 --> 00:57:12,360
single piece of advice I could have I

939
00:57:09,900 --> 00:57:14,430
can give for people who are tackling

940
00:57:12,360 --> 00:57:15,809
difficult new problems where they don't

941
00:57:14,429 --> 00:57:16,799
know the solution already or they don't

942
00:57:15,809 --> 00:57:20,279
know how to write the code correctly

943
00:57:16,800 --> 00:57:21,600
already that's really the most the

944
00:57:20,280 --> 00:57:25,370
single most important thing to do is

945
00:57:21,599 --> 00:57:25,369
never stop writing code every day

946
00:57:25,769 --> 00:57:28,619
and if you can't think of what to write

947
00:57:27,150 --> 00:57:30,480
that day to help you solve the problem

948
00:57:28,619 --> 00:57:31,799
just pick something random be like I

949
00:57:30,480 --> 00:57:33,300
don't know I'm just going to try

950
00:57:31,800 --> 00:57:36,269
something the first thing that comes to

951
00:57:33,300 --> 00:57:38,370
mind if I have to write even if it's a

952
00:57:36,269 --> 00:57:40,920
long shot even if I know it's a it's a

953
00:57:38,369 --> 00:57:43,380
02 to the end solution to the problem

954
00:57:40,920 --> 00:57:45,210
write it because in writing that thing

955
00:57:43,380 --> 00:57:48,119
you at least learn something and your

956
00:57:45,210 --> 00:57:49,860
brain will see something and that's what

957
00:57:48,119 --> 00:57:52,980
keeps it going and will eventually get

958
00:57:49,860 --> 00:57:55,230
the solution yes that code will be throw

959
00:57:52,980 --> 00:57:57,480
away it won't be what you ship but

960
00:57:55,230 --> 00:57:58,800
that's okay because sometimes coding is

961
00:57:57,480 --> 00:58:01,199
not about writing code you're going to

962
00:57:58,800 --> 00:58:03,570
ship it's about getting your brain to

963
00:58:01,199 --> 00:58:05,460
the state where it can write the code

964
00:58:03,570 --> 00:58:07,950
you're going to ship and a lot of times

965
00:58:05,460 --> 00:58:10,800
that involves code to it involves

966
00:58:07,949 --> 00:58:13,679
throwaway code and that's okay so just

967
00:58:10,800 --> 00:58:16,019
know that and don't spend a lot of time

968
00:58:13,679 --> 00:58:17,789
fussing with that code like don't try to

969
00:58:16,019 --> 00:58:20,250
make it pretty or do any you know

970
00:58:17,789 --> 00:58:22,199
fanciness to it write it as ugly as you

971
00:58:20,250 --> 00:58:26,190
want but just get it out there get it

972
00:58:22,199 --> 00:58:33,539
working and let that push you forwards

973
00:58:26,190 --> 00:58:34,980
towards the better solution looking to

974
00:58:33,539 --> 00:58:36,779
start a career in programming computer

975
00:58:34,980 --> 00:58:39,990
science I'm currently 16 and in grade 12

976
00:58:36,780 --> 00:58:43,290
any tips on what i should do also thanks

977
00:58:39,989 --> 00:58:45,329
to chat for all the help uh well yeah I

978
00:58:43,289 --> 00:58:47,099
mean the best way to start a career in

979
00:58:45,329 --> 00:58:50,460
programming is just to be doing a lot of

980
00:58:47,099 --> 00:58:52,319
programming right the there's so many

981
00:58:50,460 --> 00:58:54,119
resources out there to learn programming

982
00:58:52,320 --> 00:58:56,190
you should just be programming a ton on

983
00:58:54,119 --> 00:58:58,289
your own and if you program a ton on

984
00:58:56,190 --> 00:59:00,570
your own you will get good enough that

985
00:58:58,289 --> 00:59:03,840
you should be able to like you know make

986
00:59:00,570 --> 00:59:05,880
some blog posts or post some things to

987
00:59:03,840 --> 00:59:08,309
start getting people to notice that

988
00:59:05,880 --> 00:59:10,440
you're you know okay what you do that

989
00:59:08,309 --> 00:59:11,969
you're learning and that's usually how

990
00:59:10,440 --> 00:59:14,159
you can sort of start to get you know

991
00:59:11,969 --> 00:59:15,719
meet some people on the internet through

992
00:59:14,159 --> 00:59:17,190
those things that you can do and then

993
00:59:15,719 --> 00:59:18,809
you can start talking to people about

994
00:59:17,190 --> 00:59:21,090
you know like oh can I have an

995
00:59:18,809 --> 00:59:23,519
internship whatever so I don't really

996
00:59:21,090 --> 00:59:24,930
know these days what the easiest route

997
00:59:23,519 --> 00:59:26,070
is but I would say you know the one

998
00:59:24,929 --> 00:59:27,929
thing that I can say is pretty much

999
00:59:26,070 --> 00:59:30,600
always been true throughout all game

1000
00:59:27,929 --> 00:59:32,460
programming history is the best way to

1001
00:59:30,599 --> 00:59:34,349
get yourself in a position to have a

1002
00:59:32,460 --> 00:59:37,679
career in programming kuta sciences to

1003
00:59:34,349 --> 00:59:39,480
do a lot of programming every day I've

1004
00:59:37,679 --> 00:59:44,309
never known a good programmer who didn't

1005
00:59:39,480 --> 00:59:47,099
I know a lot of bad programmers who

1006
00:59:44,309 --> 00:59:49,049
don't long billion it has been a while

1007
00:59:47,099 --> 00:59:51,449
since we've seen some of the sea time

1008
00:59:49,050 --> 00:59:55,380
stats that are being collected if you

1009
00:59:51,449 --> 01:00:04,339
have time sure I think we can do that we

1010
00:59:55,380 --> 01:00:09,059
have been keeping those right in here no

1011
01:00:04,340 --> 01:00:11,780
in here don't remember where I put the

1012
01:00:09,059 --> 01:00:11,779
sea time stats

1013
01:00:27,539 --> 01:00:34,769
well I don't remember where I put them

1014
01:00:31,199 --> 01:00:37,559
so let me take a look handmade sherrod

1015
01:00:34,769 --> 01:00:44,099
ctm it's like it'll be in the bill

1016
01:00:37,559 --> 01:00:46,650
directory right oh no it's after the pop

1017
01:00:44,099 --> 01:00:49,980
d so it'll be in the code directory so I

1018
01:00:46,650 --> 01:01:00,539
must have been looking right at it let's

1019
01:00:49,980 --> 01:01:05,460
see ctm there we go my stats so here you

1020
01:01:00,539 --> 01:01:06,989
go you can see some stats here we have

1021
01:01:05,460 --> 01:01:09,090
spent a total of twenty-three minutes

1022
01:01:06,989 --> 01:01:13,439
building throughout the life of the

1023
01:01:09,090 --> 01:01:16,380
project I for successful builds and nine

1024
01:01:13,440 --> 01:01:23,909
minutes for unsuccessful builds we have

1025
01:01:16,380 --> 01:01:27,660
tried to build the thing over 1,700

1026
01:01:23,909 --> 01:01:30,539
times which is funny you can look at our

1027
01:01:27,659 --> 01:01:35,219
averages we tend to spike out in about

1028
01:01:30,539 --> 01:01:42,809
three seconds it looks like this is 181

1029
01:01:35,219 --> 01:01:46,019
days for bucket that's how many builds

1030
01:01:42,809 --> 01:01:54,029
we did did we really do 181 builds in

1031
01:01:46,019 --> 01:01:56,269
one day I'm not sure what that's telling

1032
01:01:54,030 --> 01:01:56,269
us

1033
01:01:56,449 --> 01:02:03,289
oh no it's 4.5 days per bucket okay and

1034
01:02:01,639 --> 01:02:06,469
there's one day per bucket so there we

1035
01:02:03,289 --> 01:02:11,480
go okay yeah yeah so that's not all

1036
01:02:06,469 --> 01:02:18,769
right so yeah there you go is that the

1037
01:02:11,480 --> 01:02:19,760
SATs you were looking for let's see what

1038
01:02:18,769 --> 01:02:20,690
is the current kind of the stream it

1039
01:02:19,760 --> 01:02:22,640
seems that we have been dealing with

1040
01:02:20,690 --> 01:02:24,170
bugs for a while sorry I may have missed

1041
01:02:22,639 --> 01:02:27,769
the explanation if you provided it a

1042
01:02:24,170 --> 01:02:29,358
little while ago we don't do a schedule

1043
01:02:27,769 --> 01:02:33,170
for streams we just work on whatever

1044
01:02:29,358 --> 01:02:35,358
we're working on day to day till config

1045
01:02:33,170 --> 01:02:39,220
when we get the chunk in get world chunk

1046
01:02:35,358 --> 01:02:39,219
it seems we always allocate new memory

1047
01:02:43,030 --> 01:02:48,380
well when we get the chunks that's in

1048
01:02:46,460 --> 01:02:50,539
that's in here so I'm not sure what

1049
01:02:48,380 --> 01:02:58,900
you're talking about and get in here you

1050
01:02:50,539 --> 01:02:58,900
mean or we're talking about this guy I

1051
01:03:01,210 --> 01:03:14,630
guess to the best of my knowledge let me

1052
01:03:05,358 --> 01:03:18,588
see to the best of my knowledge I guess

1053
01:03:14,630 --> 01:03:20,780
I'm not sure I remember do we ever when

1054
01:03:18,588 --> 01:03:23,078
do we actually add chunks to free lists

1055
01:03:20,780 --> 01:03:23,079
at all

1056
01:03:31,219 --> 01:03:36,269
so we put the whole chunk we do so when

1057
01:03:34,619 --> 01:03:40,589
we load it up we put the whole chunk in

1058
01:03:36,269 --> 01:03:44,190
the free list so we add the chunk of the

1059
01:03:40,590 --> 01:03:46,050
free list there and then later on I

1060
01:03:44,190 --> 01:03:53,519
guess when we pack we're going to use a

1061
01:03:46,050 --> 01:04:03,630
get call right are we I don't know let's

1062
01:03:53,519 --> 01:04:08,820
find out map into chunks pace when do we

1063
01:04:03,630 --> 01:04:15,300
actually get the chunk map into chunks

1064
01:04:08,820 --> 01:04:18,150
pace pack entity into world get world

1065
01:04:15,300 --> 01:04:19,980
chunk yeah I think you're right so it

1066
01:04:18,150 --> 01:04:22,880
looks like we aren't actually recycling

1067
01:04:19,980 --> 01:04:22,880
that memory properly

1068
01:04:28,338 --> 01:04:34,219
I agree with you so in here when we do

1069
01:04:32,358 --> 01:04:36,710
get world chunk internal that we're

1070
01:04:34,219 --> 01:04:38,809
getting back a you know most the time a

1071
01:04:36,710 --> 01:04:40,519
chunk that already exists perhaps but

1072
01:04:38,809 --> 01:04:43,190
sometimes if we've deleted that chunk

1073
01:04:40,518 --> 01:04:45,018
then there is no chunk there so then we

1074
01:04:43,190 --> 01:04:48,380
will find that we need to allocate one

1075
01:04:45,018 --> 01:04:50,358
and in that case when we do the

1076
01:04:48,380 --> 01:04:53,809
allocation we should be checking the

1077
01:04:50,358 --> 01:05:04,639
free list first right we should be doing

1078
01:04:53,809 --> 01:05:09,039
something more like you know if let's

1079
01:05:04,639 --> 01:05:17,379
take a look here so if results equals

1080
01:05:09,039 --> 01:05:19,430
world first fruit chunk and so you know

1081
01:05:17,380 --> 01:05:20,989
always take it off of the free list

1082
01:05:19,429 --> 01:05:24,098
basically and what we can do it just say

1083
01:05:20,989 --> 01:05:28,099
okay if there isn't one on the free list

1084
01:05:24,099 --> 01:05:29,359
then we'll push a new one on so then

1085
01:05:28,099 --> 01:05:31,640
we'll do the allocation in that in that

1086
01:05:29,358 --> 01:05:36,259
case if there is one on the free list

1087
01:05:31,639 --> 01:05:43,038
right so after we get it we can just say

1088
01:05:36,259 --> 01:05:46,460
that it's equal to the next one on the

1089
01:05:43,039 --> 01:05:53,869
free list so let's see next I'm assuming

1090
01:05:46,460 --> 01:05:54,858
we use next in hash for chaining but I

1091
01:05:53,869 --> 01:06:00,559
could make that a little more explicit

1092
01:05:54,858 --> 01:06:03,528
so we could do yeah it does use next

1093
01:06:00,559 --> 01:06:06,019
exit hash right so here's what we're

1094
01:06:03,528 --> 01:06:07,818
doing we're just saying okay we come

1095
01:06:06,018 --> 01:06:09,498
through here if there isn't anything on

1096
01:06:07,818 --> 01:06:13,880
the free list then we'll add one to the

1097
01:06:09,498 --> 01:06:16,608
free list right and in this case we do

1098
01:06:13,880 --> 01:06:18,619
want to do one clearing operation which

1099
01:06:16,608 --> 01:06:20,748
is that the first free chunks next in

1100
01:06:18,619 --> 01:06:22,400
hashed pointer should be zero so that it

1101
01:06:20,748 --> 01:06:25,129
knows that it's only getting one off

1102
01:06:22,400 --> 01:06:27,170
then when we actually go to allocate one

1103
01:06:25,130 --> 01:06:29,900
here we say okay get the first free

1104
01:06:27,170 --> 01:06:33,608
chunk advance the next pointer set it

1105
01:06:29,900 --> 01:06:37,999
all up and off we go so I think that

1106
01:06:33,608 --> 01:06:40,130
will will properly recycle the free

1107
01:06:37,998 --> 01:06:44,949
chunks now

1108
01:06:40,130 --> 01:06:44,950
thank you for finding that one

1109
01:06:54,268 --> 01:06:58,808
update coder what makes a bad programmer

1110
01:06:56,739 --> 01:07:00,338
in your opinion a bad programmer is the

1111
01:06:58,809 --> 01:07:08,739
programmer who doesn't get code done

1112
01:07:00,338 --> 01:07:10,328
that can be used right you know that

1113
01:07:08,739 --> 01:07:13,239
doesn't doesn't write code that can be

1114
01:07:10,329 --> 01:07:16,269
shipped you know or tour takes way too

1115
01:07:13,239 --> 01:07:17,949
long to write it and there's a lot of

1116
01:07:16,268 --> 01:07:21,058
subtlety that goes into it but that's

1117
01:07:17,949 --> 01:07:21,058
you know the basic idea

1118
01:07:27,588 --> 01:07:34,088
about your build up FL why do you

1119
01:07:29,630 --> 01:07:37,068
disable exceptions and warnings

1120
01:07:34,088 --> 01:07:39,949
exceptions because we don't use them and

1121
01:07:37,068 --> 01:07:42,048
the warnings are we disable ones that I

1122
01:07:39,949 --> 01:07:53,228
don't like like they just bother me and

1123
01:07:42,048 --> 01:07:53,228
i don't like them looks like

1124
01:08:07,969 --> 01:08:12,000
Mabel Oh a related thing mentioned in a

1125
01:08:10,440 --> 01:08:15,170
Creative Writing course I did was to

1126
01:08:12,000 --> 01:08:17,310
postpone perfection yes I that is a good

1127
01:08:15,170 --> 01:08:20,909
that is a good way to think of it my

1128
01:08:17,310 --> 01:08:23,760
blow I do think postpone perfection is a

1129
01:08:20,909 --> 01:08:26,130
nice a nice way to say don't spend too

1130
01:08:23,760 --> 01:08:27,630
much time trying to think of how to do

1131
01:08:26,130 --> 01:08:30,359
something perfect just get something and

1132
01:08:27,630 --> 01:08:33,630
learn from that and then you know kind

1133
01:08:30,359 --> 01:08:45,870
of build on it and try again if you need

1134
01:08:33,630 --> 01:08:53,970
to all right i am going to i think are

1135
01:08:45,869 --> 01:08:56,720
we in the Q&amp;A right now I think we don't

1136
01:08:53,970 --> 01:08:56,720
have any more cues

1137
01:08:59,329 --> 01:09:02,350
I wrong about that

1138
01:09:12,439 --> 01:09:16,329
I don't know if I'm wrong about that or

1139
01:09:14,180 --> 01:09:16,329
not

1140
01:09:43,960 --> 01:09:56,048
so it looks like there are no Q Colin's

1141
01:09:46,520 --> 01:09:56,049
left so i guess i will wind it down okay

1142
01:10:00,789 --> 01:10:06,050
thank you everyone for joining me for

1143
01:10:03,800 --> 01:10:07,340
another episode of handmade hero it has

1144
01:10:06,050 --> 01:10:09,020
been a pleasure coding with you as

1145
01:10:07,340 --> 01:10:10,400
always if you would like to follow along

1146
01:10:09,020 --> 01:10:12,530
series at home you can always pre-order

1147
01:10:10,399 --> 01:10:14,299
the game on handmade hero org it comes

1148
01:10:12,529 --> 01:10:17,448
the source code so you can do your own

1149
01:10:14,300 --> 01:10:18,920
experiments and play around with it we

1150
01:10:17,448 --> 01:10:20,689
also have a forum site you go to if you

1151
01:10:18,920 --> 01:10:22,099
want to ask questions a patreon page you

1152
01:10:20,689 --> 01:10:23,899
can use to support the video series

1153
01:10:22,099 --> 01:10:25,610
scheduled about that tells you when

1154
01:10:23,899 --> 01:10:28,339
we're going to be live and an episode

1155
01:10:25,609 --> 01:10:29,839
guide that has all of the old episodes

1156
01:10:28,340 --> 01:10:32,090
on it if you're trying to catch up

1157
01:10:29,840 --> 01:10:34,610
that's about it for today I'll be back

1158
01:10:32,090 --> 01:10:36,710
here tomorrow same time same place until

1159
01:10:34,609 --> 01:10:38,328
then have fun programming and I will see

1160
01:10:36,710 --> 01:10:40,689
you guys on the internet take it easy

1161
01:10:38,328 --> 01:10:40,689
everyone

