1
00:01:41,620 --> 00:01:43,680
you

2
00:03:11,090 --> 00:03:22,459
I remember you were asked what's the

3
00:03:19,789 --> 00:03:26,659
best way to draw a circle at a Microsoft

4
00:03:22,459 --> 00:03:28,759
job interview what's the answer so in

5
00:03:26,659 --> 00:03:32,389
that way that Microsoft job interviews

6
00:03:28,759 --> 00:03:35,449
at that time you know we're asking

7
00:03:32,389 --> 00:03:38,500
questions that that question was I would

8
00:03:35,449 --> 00:03:38,500
I would consider a particularly

9
00:03:39,848 --> 00:03:46,399
knowledge-based question in that if

10
00:03:43,579 --> 00:03:48,379
you're not an expert graphics programmer

11
00:03:46,400 --> 00:03:54,049
you wouldn't know the answer to this

12
00:03:48,379 --> 00:03:56,840
question right but the problem with that

13
00:03:54,049 --> 00:04:01,730
kind of question as you might expect is

14
00:03:56,840 --> 00:04:04,479
that it's highly temporal so the best

15
00:04:01,729 --> 00:04:06,590
way to draw a circle back then is

16
00:04:04,479 --> 00:04:09,768
absolutely not the best way to draw a

17
00:04:06,590 --> 00:04:12,189
circle now and the reason for that is

18
00:04:09,769 --> 00:04:15,590
because in the old days

19
00:04:12,189 --> 00:04:17,629
no multi-threading right everything with

20
00:04:15,590 --> 00:04:22,910
single-core for what Microsoft is

21
00:04:17,629 --> 00:04:26,269
targeting no floating-point the

22
00:04:22,910 --> 00:04:28,639
floating-point units were very slow at

23
00:04:26,269 --> 00:04:30,228
that time and sometimes they didn't even

24
00:04:28,639 --> 00:04:34,538
have a floating-point unit so it would

25
00:04:30,228 --> 00:04:37,819
have been emulated and 3no wide

26
00:04:34,538 --> 00:04:39,649
instructions so you know today you

27
00:04:37,819 --> 00:04:40,490
wouldn't dream of trying to do something

28
00:04:39,649 --> 00:04:42,649
fast

29
00:04:40,490 --> 00:04:44,210
without a wide instruction right all

30
00:04:42,649 --> 00:04:45,709
your instructions should be single

31
00:04:44,209 --> 00:04:47,629
instruction multiple data instructions

32
00:04:45,709 --> 00:04:48,668
if you're trying to do something fast

33
00:04:47,629 --> 00:04:51,348
right

34
00:04:48,668 --> 00:04:56,359
that's how graphics cards go fast that's

35
00:04:51,348 --> 00:05:00,589
how like the CPU goes fast is lots of

36
00:04:56,360 --> 00:05:01,970
cores doing wide instructions so none of

37
00:05:00,589 --> 00:05:04,369
those things were true back then in fact

38
00:05:01,970 --> 00:05:06,320
wide instructions were not even a thing

39
00:05:04,370 --> 00:05:12,500
that were contemplated on the PC I think

40
00:05:06,319 --> 00:05:14,569
they did exist in other architectures

41
00:05:12,500 --> 00:05:17,750
potentially specialized architectures

42
00:05:14,569 --> 00:05:19,310
and they were at least I know for a fact

43
00:05:17,750 --> 00:05:20,389
they were contemplated I just don't know

44
00:05:19,310 --> 00:05:22,930
if what they were shipping and

45
00:05:20,389 --> 00:05:31,019
necessarily

46
00:05:22,930 --> 00:05:41,560
but Intel hadn't even announced like

47
00:05:31,019 --> 00:05:44,379
plans to do something like that so with

48
00:05:41,560 --> 00:05:47,350
the very important caveat that it is no

49
00:05:44,379 --> 00:05:52,060
longer an answer you probably should

50
00:05:47,350 --> 00:05:57,400
ever be thinking about because it is

51
00:05:52,060 --> 00:06:02,379
wrong now the way that they wanted to

52
00:05:57,399 --> 00:06:04,810
see you do a circle was that obviously

53
00:06:02,379 --> 00:06:09,009
if I give you the center of a circle and

54
00:06:04,810 --> 00:06:14,228
the radius it's trivial to find one

55
00:06:09,009 --> 00:06:16,959
pixel right I should probably just draw

56
00:06:14,228 --> 00:06:20,589
this out but it's trivial to find one

57
00:06:16,959 --> 00:06:23,620
pixel that you could consider to be on

58
00:06:20,589 --> 00:06:27,509
the circle right and furthermore it's

59
00:06:23,620 --> 00:06:32,978
trivial probably you know to find four

60
00:06:27,509 --> 00:06:34,779
and you know rather than try to just

61
00:06:32,978 --> 00:06:36,699
state it and describe it really

62
00:06:34,779 --> 00:06:42,939
elaborately here I'll I'll just draw it

63
00:06:36,699 --> 00:06:45,310
for you the reason for that of course is

64
00:06:42,939 --> 00:06:46,990
that on a pixel grid if I say that a

65
00:06:45,310 --> 00:06:49,930
circle is somewhere so we'll call this

66
00:06:46,990 --> 00:06:53,050
the center of the circle right then I

67
00:06:49,930 --> 00:06:55,449
know that whatever I know whatever pixel

68
00:06:53,050 --> 00:06:58,658
the center is because the person had to

69
00:06:55,449 --> 00:07:02,288
tell me that right so the person had to

70
00:06:58,658 --> 00:07:04,839
say that this circle Center right is

71
00:07:02,288 --> 00:07:06,339
like let's say CX CY right so they had

72
00:07:04,839 --> 00:07:07,810
to tell me what that is and I can look

73
00:07:06,339 --> 00:07:10,209
that up in the pixel grid right away

74
00:07:07,810 --> 00:07:12,399
just by doing a multiplying an ad right

75
00:07:10,209 --> 00:07:15,098
by you know multiplying the stride here

76
00:07:12,399 --> 00:07:17,079
and then do an ad here I'm gonna get

77
00:07:15,098 --> 00:07:19,680
this pixel you know I wasn't safe for

78
00:07:17,079 --> 00:07:22,870
free but pretty close to free right and

79
00:07:19,680 --> 00:07:24,939
then because you also have to give me

80
00:07:22,870 --> 00:07:26,970
the are right the radius of the circle

81
00:07:24,939 --> 00:07:30,490
that I'm trying to draw here you know I

82
00:07:26,970 --> 00:07:34,210
can also find four more points for free

83
00:07:30,490 --> 00:07:36,939
right because I know this point is just

84
00:07:34,209 --> 00:07:38,799
gonna be like plus R in the

85
00:07:36,939 --> 00:07:40,810
x-direction and I know that this point

86
00:07:38,800 --> 00:07:42,939
on the circle is gonna be minus R right

87
00:07:40,810 --> 00:07:43,990
and I know that the same thing would be

88
00:07:42,939 --> 00:07:48,339
true

89
00:07:43,990 --> 00:07:49,290
on the on the y-axis right you know I'm

90
00:07:48,339 --> 00:07:53,679
saying

91
00:07:49,290 --> 00:07:56,680
so from the start obviously I can get

92
00:07:53,680 --> 00:07:58,959
sort of for free I can sort of get the

93
00:07:56,680 --> 00:08:04,060
points that make a diamond in this you

94
00:07:58,959 --> 00:08:06,909
know of what the circle would be so the

95
00:08:04,060 --> 00:08:11,470
question now is how do I just draw the

96
00:08:06,910 --> 00:08:14,530
the actual arc right now again just to

97
00:08:11,470 --> 00:08:16,690
emphasize how not a good idea it is to

98
00:08:14,529 --> 00:08:18,639
do what I'm saying now because this is

99
00:08:16,689 --> 00:08:20,500
only relevant on very old hardware

100
00:08:18,639 --> 00:08:23,620
hardware that literally does not exist

101
00:08:20,500 --> 00:08:25,720
anywhere today except maybe in some kind

102
00:08:23,620 --> 00:08:27,220
of like crazy embedded system in a very

103
00:08:25,720 --> 00:08:29,620
small space or something I don't know I

104
00:08:27,220 --> 00:08:31,420
don't even know if I we're like I don't

105
00:08:29,620 --> 00:08:35,110
even know if there still exists hardware

106
00:08:31,420 --> 00:08:36,960
where this makes sense so that's how old

107
00:08:35,110 --> 00:08:42,430
this is

108
00:08:36,960 --> 00:08:44,470
so in order to draw the arc what I want

109
00:08:42,429 --> 00:08:46,959
to be able to do is I want to be able to

110
00:08:44,470 --> 00:08:52,540
do something that does not require a

111
00:08:46,960 --> 00:08:56,590
floating point and is not wide right and

112
00:08:52,539 --> 00:08:59,349
it's not threaded so all of the things

113
00:08:56,590 --> 00:09:01,810
you would normally do today to make a

114
00:08:59,350 --> 00:09:06,639
fast routine I need to do none of those

115
00:09:01,809 --> 00:09:08,619
in fact I can't do any of these and so

116
00:09:06,639 --> 00:09:12,580
what ends up happening is you say well

117
00:09:08,620 --> 00:09:16,000
ok in order to compute the equation for

118
00:09:12,580 --> 00:09:21,129
this circle right I know that I have see

119
00:09:16,000 --> 00:09:23,470
x squared plus C y squared minus R

120
00:09:21,129 --> 00:09:25,539
squared equals 0 right I mean

121
00:09:23,470 --> 00:09:27,160
alternatively see x squared plus C y

122
00:09:25,539 --> 00:09:29,110
squared equals R squared

123
00:09:27,159 --> 00:09:31,029
I mean it doesn't matter how you want to

124
00:09:29,110 --> 00:09:34,509
phrase it it's up to us depending on

125
00:09:31,029 --> 00:09:36,669
what we want but if we look at what's

126
00:09:34,509 --> 00:09:39,100
going on here you can sort of see we've

127
00:09:36,669 --> 00:09:42,338
got two things that are multiplied like

128
00:09:39,100 --> 00:09:44,889
see x squared see y squared and one

129
00:09:42,339 --> 00:09:46,720
thing that's a constant right so if we

130
00:09:44,889 --> 00:09:50,309
move around the pixel grid this is

131
00:09:46,720 --> 00:09:52,769
changing this is not right

132
00:09:50,309 --> 00:09:55,619
so it's pretty free for us to compute R

133
00:09:52,769 --> 00:09:57,149
squared or negative R squared and not

134
00:09:55,620 --> 00:09:59,818
have to do that work anymore

135
00:09:57,149 --> 00:10:02,669
but now the question is well the CX

136
00:09:59,818 --> 00:10:04,409
squared plus CY squared part what are we

137
00:10:02,669 --> 00:10:08,778
gonna do about that what's the easiest

138
00:10:04,409 --> 00:10:08,778
way to make this work for us right

139
00:10:22,210 --> 00:10:25,780
now to be honest I don't really remember

140
00:10:24,200 --> 00:10:30,500
the exact answer they were looking for

141
00:10:25,779 --> 00:10:32,509
but I'm just gonna do a good answer here

142
00:10:30,500 --> 00:10:35,620
and I'm sure it's either as good or

143
00:10:32,509 --> 00:10:35,620
better than what they were looking for

144
00:10:39,129 --> 00:10:42,559
interview questions sometimes the

145
00:10:41,269 --> 00:10:44,210
interviewer doesn't know the best answer

146
00:10:42,559 --> 00:10:48,079
I remember there was one valve one like

147
00:10:44,210 --> 00:10:50,320
that about quadtree that I later figured

148
00:10:48,080 --> 00:10:52,700
out I didn't get the interview question

149
00:10:50,320 --> 00:10:55,400
but the person he typically asked it had

150
00:10:52,700 --> 00:10:57,470
told it to me and I was later working on

151
00:10:55,399 --> 00:10:59,509
a quadtree and I figured out like just

152
00:10:57,470 --> 00:11:02,240
cuz I won I was doing some stuff and I

153
00:10:59,509 --> 00:11:04,220
was like oh actually that answer is not

154
00:11:02,240 --> 00:11:07,820
the best answer the best answer is

155
00:11:04,220 --> 00:11:09,790
actually this but that's neither here

156
00:11:07,820 --> 00:11:16,160
though there all right

157
00:11:09,789 --> 00:11:19,339
so anyway um looking at this what you

158
00:11:16,159 --> 00:11:26,389
want to do is say how do I minimize the

159
00:11:19,340 --> 00:11:28,910
cost of finding the pixels in here how

160
00:11:26,389 --> 00:11:32,809
do I minimize the cost of finding which

161
00:11:28,909 --> 00:11:35,029
pixels this is closest to zero because

162
00:11:32,809 --> 00:11:36,349
remember in this day and age to these

163
00:11:35,029 --> 00:11:38,000
things worse underpowered no one's doing

164
00:11:36,350 --> 00:11:40,220
anti-aliasing or anything like that

165
00:11:38,000 --> 00:11:43,580
either so we're literally just talking

166
00:11:40,220 --> 00:11:46,430
about filling the pixels that make the

167
00:11:43,580 --> 00:11:47,990
arc solid so we're not trying to figure

168
00:11:46,429 --> 00:11:49,609
out like coverage information or

169
00:11:47,990 --> 00:11:51,379
anything else that would actually

170
00:11:49,610 --> 00:11:54,529
require a little bit more work than what

171
00:11:51,379 --> 00:11:56,480
we're doing here we're trying to only

172
00:11:54,529 --> 00:12:03,039
light up one pixel the whole way around

173
00:11:56,480 --> 00:12:05,750
right all right so if you start off here

174
00:12:03,039 --> 00:12:07,610
or actually let's start off on plus R

175
00:12:05,750 --> 00:12:11,690
for now cuz that's just you know a

176
00:12:07,610 --> 00:12:14,300
positive if you start off here you know

177
00:12:11,690 --> 00:12:17,300
that see x squared plus CY squared is R

178
00:12:14,299 --> 00:12:20,479
squared right because we know that this

179
00:12:17,299 --> 00:12:23,750
is on the circle so that's just like a

180
00:12:20,480 --> 00:12:25,550
given that has to be true and you know

181
00:12:23,750 --> 00:12:27,470
that it's true because since there's no

182
00:12:25,549 --> 00:12:31,490
y component the X component of the

183
00:12:27,470 --> 00:12:33,420
circle is just R right and if the X

184
00:12:31,490 --> 00:12:37,110
component of the circle is just R

185
00:12:33,419 --> 00:12:39,059
then this is R squared minus R squared

186
00:12:37,110 --> 00:12:41,639
because that term goes away so obviously

187
00:12:39,059 --> 00:12:45,029
this is on the circle so what we can do

188
00:12:41,639 --> 00:12:47,850
now is change it around to say if I'm

189
00:12:45,029 --> 00:12:50,789
already on the circle I know that one of

190
00:12:47,850 --> 00:12:55,320
my neighboring points also must be on

191
00:12:50,789 --> 00:12:57,419
the circle right and furthermore I know

192
00:12:55,320 --> 00:12:59,490
that those points if I only wanted to

193
00:12:57,419 --> 00:13:02,759
draw the arc in one direction I know

194
00:12:59,490 --> 00:13:06,000
that these points are the only candidate

195
00:13:02,759 --> 00:13:10,710
points that could possibly be it because

196
00:13:06,000 --> 00:13:15,690
I can never get further away from the

197
00:13:10,710 --> 00:13:17,820
center of the circle then plus R right

198
00:13:15,690 --> 00:13:21,750
that I know that I'm already on the

199
00:13:17,820 --> 00:13:22,890
outside of the circle so I can go up or

200
00:13:21,750 --> 00:13:25,980
I can go left

201
00:13:22,889 --> 00:13:30,389
or I can go up and left but I certainly

202
00:13:25,980 --> 00:13:35,820
couldn't go right or up and right right

203
00:13:30,389 --> 00:13:38,549
these are not this is not allowed so

204
00:13:35,820 --> 00:13:43,740
what I can do is rephrase the question

205
00:13:38,549 --> 00:13:49,139
of which direction to go oh also by the

206
00:13:43,740 --> 00:13:52,289
way I should say one more thing branches

207
00:13:49,139 --> 00:13:54,720
not expensive this day why not out of

208
00:13:52,289 --> 00:13:56,689
order so the processor just went in

209
00:13:54,720 --> 00:13:59,399
order and retired one instruction

210
00:13:56,690 --> 00:14:02,970
basically at a time I don't even think

211
00:13:59,399 --> 00:14:06,480
they were superscalar I don't know what

212
00:14:02,970 --> 00:14:09,350
the first superscalar x86 was but this

213
00:14:06,480 --> 00:14:16,470
is like you know this is like 286 era

214
00:14:09,350 --> 00:14:20,040
right a style question and so 486 is I

215
00:14:16,470 --> 00:14:22,139
think we're brand new some like a fair

216
00:14:20,039 --> 00:14:24,089
number of people had 386 is but the

217
00:14:22,139 --> 00:14:26,669
interview questions were all from like

218
00:14:24,090 --> 00:14:29,550
we're like a couple years old right so

219
00:14:26,669 --> 00:14:31,949
they were all like 286 era questions so

220
00:14:29,549 --> 00:14:34,949
I'm pretty sure that 286 really wasn't

221
00:14:31,950 --> 00:14:37,740
superscalar so I think the 286 like had

222
00:14:34,950 --> 00:14:39,780
no branch prediction I don't think I

223
00:14:37,740 --> 00:14:42,029
think it just executed the branch and

224
00:14:39,779 --> 00:14:43,819
then stepped to the next one

225
00:14:42,029 --> 00:14:46,819
right

226
00:14:43,820 --> 00:14:48,740
so I'm pretty sure although you know

227
00:14:46,820 --> 00:14:50,390
it's been 30 years or whatever it's been

228
00:14:48,740 --> 00:14:56,960
I don't even wanna know it's been 20 20

229
00:14:50,389 --> 00:15:04,480
years 25 years um no I think it has been

230
00:14:56,960 --> 00:15:07,490
30 years Jesus Christ it's been 26 years

231
00:15:04,480 --> 00:15:10,159
my 727 years

232
00:15:07,490 --> 00:15:12,230
so we're also talking about not caring

233
00:15:10,159 --> 00:15:14,809
how much branching there is because

234
00:15:12,230 --> 00:15:16,759
branches are not more expensive than

235
00:15:14,809 --> 00:15:19,699
other instructions they're like the same

236
00:15:16,759 --> 00:15:21,319
so normally again while you were think

237
00:15:19,700 --> 00:15:24,250
about less stuff you would also not not

238
00:15:21,320 --> 00:15:26,990
want tons of branches sitting around

239
00:15:24,250 --> 00:15:28,850
inside your code not true anymore it's

240
00:15:26,990 --> 00:15:31,070
just it's just another thing to consider

241
00:15:28,850 --> 00:15:33,050
in that in back in these days it's just

242
00:15:31,070 --> 00:15:35,330
another instruction so a branch that

243
00:15:33,049 --> 00:15:37,279
saves you computation is probably a good

244
00:15:35,330 --> 00:15:38,870
idea because branches were probably

245
00:15:37,279 --> 00:15:43,549
cheaper than like an integer multiplier

246
00:15:38,870 --> 00:15:45,500
or something right anyway uh so if you

247
00:15:43,549 --> 00:15:47,870
look at what you're trying to do here

248
00:15:45,500 --> 00:15:53,090
you're trying to pick which one of these

249
00:15:47,870 --> 00:15:55,669
three is going to be the the point that

250
00:15:53,090 --> 00:16:01,580
is most on the circle from our current

251
00:15:55,669 --> 00:16:04,069
location right and so what we can do is

252
00:16:01,580 --> 00:16:07,879
say well if I were to compute this

253
00:16:04,070 --> 00:16:10,610
equation at these three points and just

254
00:16:07,879 --> 00:16:14,320
pick the one that is closest to zero so

255
00:16:10,610 --> 00:16:17,779
the one with the least error you know

256
00:16:14,320 --> 00:16:21,290
whichever one has the least error must

257
00:16:17,779 --> 00:16:30,589
be the answer so if we went ahead and

258
00:16:21,289 --> 00:16:35,839
said like see X plus 1 squared plus CY

259
00:16:30,590 --> 00:16:41,780
plus 1 squared minus R squared equals

260
00:16:35,840 --> 00:16:47,629
you know error 0 see X plus 1 squared

261
00:16:41,779 --> 00:16:50,860
plus CY squared minus R squared and lime

262
00:16:47,629 --> 00:16:50,860
I don't know why I'm sexy

263
00:16:51,708 --> 00:16:56,399
this entire time I've been writing see I

264
00:16:54,028 --> 00:16:57,360
just mean X&amp;Y see is this it was

265
00:16:56,399 --> 00:17:01,139
supposed to be the center of the circle

266
00:16:57,360 --> 00:17:08,429
I'm sorry I've got carried away pretend

267
00:17:01,139 --> 00:17:09,029
I didn't say that yeah this is what I

268
00:17:08,429 --> 00:17:10,740
meant to say

269
00:17:09,029 --> 00:17:12,359
I forgot over it is I don't know why I

270
00:17:10,740 --> 00:17:14,160
was like I picked up ZX in my head and

271
00:17:12,359 --> 00:17:21,029
ran with it that's why I'm bad at brain

272
00:17:14,160 --> 00:17:24,929
math app um and finally x squared plus y

273
00:17:21,029 --> 00:17:29,099
plus 1 squared minus R squared equals B

274
00:17:24,929 --> 00:17:31,350
2 right so if you look at what these

275
00:17:29,099 --> 00:17:34,769
equations come out to be you can see

276
00:17:31,349 --> 00:17:38,279
that the terms are reused a ton right so

277
00:17:34,769 --> 00:17:40,889
really I know that x squared plus I know

278
00:17:38,279 --> 00:17:42,389
that x squared + y squared I already had

279
00:17:40,890 --> 00:17:44,970
to have known because they were the

280
00:17:42,390 --> 00:17:48,990
location of they were what I accepted

281
00:17:44,970 --> 00:17:51,360
last round right so I know x squared + y

282
00:17:48,990 --> 00:17:54,929
squared so I kind of have like two

283
00:17:51,359 --> 00:17:58,979
registers I could keep which is like you

284
00:17:54,929 --> 00:17:59,759
know my px and my py square I don't know

285
00:17:58,980 --> 00:18:01,769
you know I don't know what you want to

286
00:17:59,759 --> 00:18:05,160
call these but like I can keep these

287
00:18:01,769 --> 00:18:07,349
around and just use them here so really

288
00:18:05,160 --> 00:18:13,370
the only thing that I'm trying to figure

289
00:18:07,349 --> 00:18:15,869
out is the new values of of these right

290
00:18:13,369 --> 00:18:18,209
so I can keep those around if I want to

291
00:18:15,869 --> 00:18:19,709
it depends on again the processor and

292
00:18:18,210 --> 00:18:20,970
specific things is whether or not you'd

293
00:18:19,710 --> 00:18:22,769
want to how many registers it has

294
00:18:20,970 --> 00:18:24,419
whether you can how quickly you can

295
00:18:22,769 --> 00:18:28,200
multiply an imager and all that sort of

296
00:18:24,419 --> 00:18:30,600
stuff right but so what you can see here

297
00:18:28,200 --> 00:18:33,900
is if I just compute these three

298
00:18:30,599 --> 00:18:36,119
equations I then know three error terms

299
00:18:33,900 --> 00:18:36,980
and I just have to pick whichever one is

300
00:18:36,119 --> 00:18:40,889
smallest

301
00:18:36,980 --> 00:18:42,839
so I compute this one I mean and more

302
00:18:40,890 --> 00:18:45,630
specifically right I just compute X plus

303
00:18:42,839 --> 00:18:48,449
1 and y plus 1 squared that's really all

304
00:18:45,630 --> 00:18:50,790
I needed to compute I compute those two

305
00:18:48,450 --> 00:18:52,169
then I add them together and subtract R

306
00:18:50,789 --> 00:18:55,139
squared that's one error

307
00:18:52,169 --> 00:18:56,970
add just X 1 plus the old Y squared

308
00:18:55,140 --> 00:18:58,230
minus R squared that's a new one right

309
00:18:56,970 --> 00:19:00,390
but I don't do we compute this because I

310
00:18:58,230 --> 00:19:02,640
already computed it same down here I

311
00:19:00,390 --> 00:19:04,410
just add the old x squared to the new Y

312
00:19:02,640 --> 00:19:05,100
plus 1 squared that I or equids up here

313
00:19:04,410 --> 00:19:08,850
subtract

314
00:19:05,099 --> 00:19:11,069
squared and off we go right so then the

315
00:19:08,849 --> 00:19:13,409
absolute value of each of these three

316
00:19:11,069 --> 00:19:15,750
whichever one is least that's the pixel

317
00:19:13,410 --> 00:19:20,070
that I need to pick right that's the

318
00:19:15,750 --> 00:19:21,538
pixel that I would go to so we can get

319
00:19:20,069 --> 00:19:22,980
more out of this by an ellipse

320
00:19:21,538 --> 00:19:24,960
I didn't mean to change the zoom there

321
00:19:22,980 --> 00:19:29,130
there we go I can get more out of this

322
00:19:24,960 --> 00:19:30,509
by um do I have a space bar oops nope is

323
00:19:29,130 --> 00:19:34,260
there like a key on here that is

324
00:19:30,509 --> 00:19:37,710
equivalent to the space bar I should map

325
00:19:34,259 --> 00:19:39,150
one okay there's like some buttons on

326
00:19:37,710 --> 00:19:40,558
this pad if one was equipping the space

327
00:19:39,150 --> 00:19:45,509
bar that would be pretty pretty baller

328
00:19:40,558 --> 00:19:47,369
but there isn't I'm all map one maybe so

329
00:19:45,509 --> 00:19:49,740
what we can do is just create a loop

330
00:19:47,369 --> 00:19:50,399
that goes hey which of those three is

331
00:19:49,740 --> 00:19:54,690
smaller

332
00:19:50,400 --> 00:19:58,230
except that movement right now if you

333
00:19:54,690 --> 00:20:01,409
want to you could also say and I think

334
00:19:58,230 --> 00:20:03,919
this was part of the question perhaps so

335
00:20:01,409 --> 00:20:10,530
you could say I don't want to check this

336
00:20:03,919 --> 00:20:11,940
meaning I only go up or over right now

337
00:20:10,529 --> 00:20:13,288
they didn't tell you any of this stuff

338
00:20:11,940 --> 00:20:15,058
for the question they just said draw a

339
00:20:13,288 --> 00:20:17,279
circle but I think they might have said

340
00:20:15,058 --> 00:20:19,829
you don't have to do you don't have to

341
00:20:17,279 --> 00:20:21,418
do single pixel diagonals so you can you

342
00:20:19,829 --> 00:20:23,038
can do ones that are fat you know

343
00:20:21,419 --> 00:20:24,630
because there's it's hard to say which

344
00:20:23,038 --> 00:20:26,279
one you want when you think of drawing a

345
00:20:24,630 --> 00:20:28,289
circle when you're talking about sloppy

346
00:20:26,279 --> 00:20:31,619
pixel drawing like this it's hard to say

347
00:20:28,288 --> 00:20:35,129
which one you want right so really you

348
00:20:31,619 --> 00:20:38,849
can probably say that this one is not

349
00:20:35,130 --> 00:20:41,760
there what that means is that when you

350
00:20:38,849 --> 00:20:47,788
do this you just have one if it's like

351
00:20:41,759 --> 00:20:54,089
if you know abs II 1 is less than ABS e

352
00:20:47,788 --> 00:20:56,339
2 you know select this one else select

353
00:20:54,089 --> 00:21:00,079
that one so you're just a loop that just

354
00:20:56,339 --> 00:21:03,869
does that and goes goes goes goes right

355
00:21:00,079 --> 00:21:05,460
okay so you only need to do these two to

356
00:21:03,869 --> 00:21:09,719
like draw this first part of the arc

357
00:21:05,460 --> 00:21:12,029
right and you can you know imagine that

358
00:21:09,720 --> 00:21:13,558
going up this way now if we look at this

359
00:21:12,029 --> 00:21:15,058
a little more closely we can also ask

360
00:21:13,558 --> 00:21:17,579
some other questions about it if you

361
00:21:15,058 --> 00:21:18,990
looked at these equations you could also

362
00:21:17,579 --> 00:21:21,000
see that well we know what

363
00:21:18,990 --> 00:21:23,700
this is if we explants panned it out

364
00:21:21,000 --> 00:21:25,829
just using you know if I just use sort

365
00:21:23,700 --> 00:21:28,500
of the math you learned in in in grade

366
00:21:25,829 --> 00:21:30,839
school right X plus one times X plus one

367
00:21:28,500 --> 00:21:32,130
right that's what this is if you use the

368
00:21:30,839 --> 00:21:34,649
distribute you know distributive

369
00:21:32,130 --> 00:21:38,070
property to expand this term you would

370
00:21:34,650 --> 00:21:39,960
get x squared right on one side you

371
00:21:38,069 --> 00:21:42,149
would get one squared on the other side

372
00:21:39,960 --> 00:21:45,420
which of course is just one and then on

373
00:21:42,150 --> 00:21:49,380
the inside you would just get 2x right

374
00:21:45,420 --> 00:21:52,800
you can you can kind of see you know

375
00:21:49,380 --> 00:21:55,860
what's going on there right so if you

376
00:21:52,799 --> 00:21:57,690
know the old if you knew the old x

377
00:21:55,859 --> 00:22:00,629
squared you could really get away with

378
00:21:57,690 --> 00:22:04,289
just doing two x plus one is really what

379
00:22:00,630 --> 00:22:09,840
all you need to add to it to compute the

380
00:22:04,289 --> 00:22:12,779
new term does that make sense in other

381
00:22:09,839 --> 00:22:15,539
words I started out in the old days I

382
00:22:12,779 --> 00:22:17,308
knew what this x squared was and it

383
00:22:15,539 --> 00:22:18,058
registers become a problem back in the

384
00:22:17,308 --> 00:22:21,480
old days remember there's very few

385
00:22:18,058 --> 00:22:24,000
registers so how that actually he didn't

386
00:22:21,480 --> 00:22:25,799
have me rightness in assembly and

387
00:22:24,000 --> 00:22:28,679
because I didn't know assembly at the

388
00:22:25,799 --> 00:22:30,000
time really if you really wanted to talk

389
00:22:28,679 --> 00:22:33,269
about this fast you'd need to write this

390
00:22:30,000 --> 00:22:34,920
as assembly and I would have to start

391
00:22:33,269 --> 00:22:36,690
thinking about register usage which back

392
00:22:34,920 --> 00:22:38,970
then I don't even remember how many you

393
00:22:36,690 --> 00:22:47,850
had you had at least four I think you

394
00:22:38,970 --> 00:22:53,160
had a b c and d x ax BX CX + DX which

395
00:22:47,849 --> 00:22:56,659
were I think 16-bit registers just like

396
00:22:53,160 --> 00:23:02,490
they are now and I don't think you had

397
00:22:56,660 --> 00:23:04,679
EAX like on the 286 I don't think they

398
00:23:02,490 --> 00:23:06,509
had extended it to 32 bits yet I think

399
00:23:04,679 --> 00:23:08,970
that was like the 386 that did that

400
00:23:06,509 --> 00:23:10,289
maybe I don't know maybe the 286 did so

401
00:23:08,970 --> 00:23:13,740
I don't know how wide these registers

402
00:23:10,289 --> 00:23:17,029
were how many bits they were but I think

403
00:23:13,740 --> 00:23:17,029
they were probably 16 bit

404
00:23:20,470 --> 00:23:29,019
but don't don't taste that don't take my

405
00:23:23,079 --> 00:23:32,169
word for it uh so anyway if you look at

406
00:23:29,019 --> 00:23:34,569
what happens here you can see that in

407
00:23:32,170 --> 00:23:36,550
the actual loop itself we can get a lot

408
00:23:34,569 --> 00:23:39,069
of efficiency we don't actually have to

409
00:23:36,549 --> 00:23:43,180
compute these equations whole cloth

410
00:23:39,069 --> 00:23:46,269
because if we just store what our laxed

411
00:23:43,180 --> 00:23:49,330
x squared was right so we store our old

412
00:23:46,269 --> 00:23:51,369
x squared you know our old Y squared you

413
00:23:49,329 --> 00:23:53,769
know I'm saying if we just store what

414
00:23:51,369 --> 00:23:56,799
those are we can compute the new ones

415
00:23:53,769 --> 00:24:01,809
just by adding to that right we can add

416
00:23:56,799 --> 00:24:05,109
2x plus 1 and we can add 2y plus 1 to

417
00:24:01,809 --> 00:24:09,519
get the new versions we test those

418
00:24:05,109 --> 00:24:12,579
versions right and then just accept that

419
00:24:09,519 --> 00:24:15,579
value as our new old ours our as our old

420
00:24:12,579 --> 00:24:18,429
values for the next run of the loop so

421
00:24:15,579 --> 00:24:22,689
that gets us out of ever actually doing

422
00:24:18,430 --> 00:24:25,450
an integer multiplier because the to the

423
00:24:22,690 --> 00:24:30,850
the the 2x and the 2y are actually

424
00:24:25,450 --> 00:24:33,269
shifts right because if I want to do oh

425
00:24:30,849 --> 00:24:33,269
wait

426
00:24:38,240 --> 00:24:45,000
there's just one thing these are these

427
00:24:42,410 --> 00:24:47,970
these are always yeah yeah these are

428
00:24:45,000 --> 00:24:49,559
always positive numbers right because

429
00:24:47,970 --> 00:24:52,500
like I said I'm gonna show you why

430
00:24:49,559 --> 00:24:55,619
that's true in a second like I said I'm

431
00:24:52,500 --> 00:24:57,630
starting over here right so the X&amp;Y

432
00:24:55,619 --> 00:24:59,189
numbers are always positive so I don't

433
00:24:57,630 --> 00:25:00,780
have to worry about any two's complement

434
00:24:59,190 --> 00:25:02,759
or anything else like that I'm just

435
00:25:00,779 --> 00:25:04,950
drawing in the positive quadrant of the

436
00:25:02,759 --> 00:25:07,049
circle and in those days graphics always

437
00:25:04,950 --> 00:25:09,120
went downward so technically you might

438
00:25:07,049 --> 00:25:11,309
really if you were thinking really old

439
00:25:09,119 --> 00:25:12,389
school it's actually these two pixels

440
00:25:11,309 --> 00:25:14,369
we're testing and we're going this way

441
00:25:12,390 --> 00:25:15,780
I'm drawing it that way because that's

442
00:25:14,369 --> 00:25:17,309
how we've always drawn circles and

443
00:25:15,779 --> 00:25:19,529
that's how our coordinate systems always

444
00:25:17,309 --> 00:25:20,940
have worked on handmade hero so but that

445
00:25:19,529 --> 00:25:23,279
doesn't matter the point is just

446
00:25:20,940 --> 00:25:25,289
whichever way your graphics system

447
00:25:23,279 --> 00:25:26,970
thinks is positive that's where we're

448
00:25:25,289 --> 00:25:27,750
going we don't want to deal with any

449
00:25:26,970 --> 00:25:31,140
two's-complement

450
00:25:27,750 --> 00:25:31,650
issues we just want it to work right and

451
00:25:31,140 --> 00:25:34,050
we don't wanna think about

452
00:25:31,650 --> 00:25:36,509
sign-extension or anything else so if I

453
00:25:34,049 --> 00:25:39,269
want to multiply something by two right

454
00:25:36,509 --> 00:25:41,099
I should just be able to do that bitwise

455
00:25:39,269 --> 00:25:42,990
I don't have to actually issue an

456
00:25:41,099 --> 00:25:46,129
integer multiply because it's the

457
00:25:42,990 --> 00:25:49,200
special case of multiplication by two

458
00:25:46,130 --> 00:25:52,260
and since we're in a binary number

459
00:25:49,200 --> 00:25:53,549
system right I can just move it and I

460
00:25:52,259 --> 00:25:54,839
think that would work in negatives

461
00:25:53,549 --> 00:25:56,039
anyway but I but before I started

462
00:25:54,839 --> 00:25:57,599
talking about that I'd wanted to make

463
00:25:56,039 --> 00:25:59,099
sure I would know what I was saying sure

464
00:25:57,599 --> 00:26:00,000
this so we're always in positive so we

465
00:25:59,099 --> 00:26:02,159
don't even have to think about that

466
00:26:00,000 --> 00:26:03,630
that's not relevant so we should be able

467
00:26:02,160 --> 00:26:05,910
do this entire thing without actually

468
00:26:03,630 --> 00:26:07,590
doing any multipliers at all right we

469
00:26:05,910 --> 00:26:14,550
can just do shift ad you know shift

470
00:26:07,589 --> 00:26:21,109
increment test and go right okay so if

471
00:26:14,549 --> 00:26:24,240
we even if we go one step further into

472
00:26:21,109 --> 00:26:27,479
ridiculous town we can also think about

473
00:26:24,240 --> 00:26:28,620
and I can't quite remember because

474
00:26:27,480 --> 00:26:31,370
that's been a long time so as I looked

475
00:26:28,619 --> 00:26:31,369
at this sort of thing

476
00:26:39,990 --> 00:26:48,159
yeah so if you if you look at how this

477
00:26:44,798 --> 00:26:53,440
is equation is being run you're always

478
00:26:48,159 --> 00:26:54,940
doing a and this again just just depends

479
00:26:53,440 --> 00:27:02,440
on whether you've got the registers for

480
00:26:54,940 --> 00:27:05,139
it or not if you want the y squared term

481
00:27:02,440 --> 00:27:08,610
if you look at what happens with with

482
00:27:05,138 --> 00:27:10,808
these equations right where you do

483
00:27:08,609 --> 00:27:12,878
you're always computing something in the

484
00:27:10,808 --> 00:27:13,990
form x squared plus y squared minus R

485
00:27:12,878 --> 00:27:16,628
squared right

486
00:27:13,990 --> 00:27:20,528
and the way we're ending up computing

487
00:27:16,628 --> 00:27:24,038
this entire equation is with what it

488
00:27:20,528 --> 00:27:27,128
amounts to be like some Oh X you know

489
00:27:24,038 --> 00:27:28,058
old x squared value oh it's probably the

490
00:27:27,128 --> 00:27:30,849
wrong thing to do there

491
00:27:28,058 --> 00:27:34,808
let's do previous X we're using some

492
00:27:30,849 --> 00:27:39,730
previous x squared value plus right we

493
00:27:34,808 --> 00:27:42,460
want to do the 2 X 2 X plus 1 right plus

494
00:27:39,730 --> 00:27:46,919
some previous Y squared value because it

495
00:27:42,460 --> 00:27:54,690
would be the same minus R squared right

496
00:27:46,919 --> 00:27:54,690
and we want to compute well or

497
00:28:03,690 --> 00:28:12,789
we're we're fundamentally doing one or

498
00:28:07,029 --> 00:28:16,599
the other of this right like like that's

499
00:28:12,789 --> 00:28:18,490
what we're doing makes sense because

500
00:28:16,599 --> 00:28:20,769
there's there's really no there's no

501
00:28:18,490 --> 00:28:22,750
other operation that we could do we're

502
00:28:20,769 --> 00:28:24,789
just doing those two and then we're

503
00:28:22,750 --> 00:28:28,089
testing which one of these is greater so

504
00:28:24,789 --> 00:28:30,399
in here if we were to reorganize these

505
00:28:28,089 --> 00:28:34,809
terms what you would see is that they're

506
00:28:30,400 --> 00:28:38,500
actually the same darn equation right if

507
00:28:34,809 --> 00:28:45,039
I move this py out to the headend then

508
00:28:38,500 --> 00:28:48,220
what I see is this right it's the same

509
00:28:45,039 --> 00:28:51,149
exact equation the only difference is

510
00:28:48,220 --> 00:28:51,150
that

511
00:28:57,339 --> 00:29:06,500
you know I'm saying so this right here

512
00:29:02,089 --> 00:29:09,589
is actually the only difference between

513
00:29:06,500 --> 00:29:12,049
these two values so what I can do

514
00:29:09,589 --> 00:29:17,359
instead of all the other stuff that I

515
00:29:12,049 --> 00:29:21,678
was about to do right is I can just keep

516
00:29:17,359 --> 00:29:24,439
that if I want to because I only need it

517
00:29:21,679 --> 00:29:28,330
that's the only value I need and then

518
00:29:24,440 --> 00:29:30,830
look at what these two values do right

519
00:29:28,329 --> 00:29:33,470
now it's easier said than done because

520
00:29:30,829 --> 00:29:35,089
the problem is you have to update it so

521
00:29:33,470 --> 00:29:37,880
you need to figure out a way that once

522
00:29:35,089 --> 00:29:40,759
you change the X and the y you're going

523
00:29:37,880 --> 00:29:44,000
to actually get the new value that you

524
00:29:40,759 --> 00:29:48,740
would have had that was on the circle

525
00:29:44,000 --> 00:29:51,079
right does that make sense so looking at

526
00:29:48,740 --> 00:29:53,179
these two values here we can say well

527
00:29:51,079 --> 00:29:55,490
you know the previous point that we were

528
00:29:53,179 --> 00:29:57,650
at is gonna be px squared plus P us

529
00:29:55,490 --> 00:29:59,690
squared plus 1 minus R squared that was

530
00:29:57,650 --> 00:30:02,120
the error on the previous point we're

531
00:29:59,690 --> 00:30:03,590
gonna add 2x to it or 2y to it and

532
00:30:02,119 --> 00:30:08,509
that's gonna be our new error we just

533
00:30:03,589 --> 00:30:10,819
want the minimum one right but assuming

534
00:30:08,509 --> 00:30:12,500
we just go we'll look we're just always

535
00:30:10,819 --> 00:30:16,369
trying to be as close circle as possible

536
00:30:12,500 --> 00:30:17,990
we don't care what we don't really care

537
00:30:16,369 --> 00:30:21,019
about knowing anything else other than

538
00:30:17,990 --> 00:30:24,319
what our error is so really all we need

539
00:30:21,019 --> 00:30:27,049
to store for this entire time is just

540
00:30:24,319 --> 00:30:29,839
error right we just need our error value

541
00:30:27,049 --> 00:30:31,399
we need our x value and our Y value and

542
00:30:29,839 --> 00:30:35,869
these are just necessary for plotting

543
00:30:31,400 --> 00:30:38,780
right and we'll end computation of these

544
00:30:35,869 --> 00:30:40,459
two values right so we should actually

545
00:30:38,779 --> 00:30:44,889
be able to get away with maybe only

546
00:30:40,460 --> 00:30:48,650
three registers by storing this value

547
00:30:44,890 --> 00:30:52,580
every time we go we we shift X up by two

548
00:30:48,650 --> 00:30:55,340
we shift X but Y up by two we add them

549
00:30:52,579 --> 00:30:59,019
right we see whichever is the lesser

550
00:30:55,339 --> 00:31:02,019
error and we just write that error back

551
00:30:59,019 --> 00:31:02,019
right

552
00:31:02,788 --> 00:31:09,519
then we pick we take the new x value

553
00:31:06,519 --> 00:31:15,278
that either the plus 1x or the plus 1y

554
00:31:09,519 --> 00:31:18,308
well I think it's it's actually it's

555
00:31:15,278 --> 00:31:19,390
actually - probably in both cases now I

556
00:31:18,308 --> 00:31:22,269
think about it you probably you probably

557
00:31:19,390 --> 00:31:23,649
want to instead of going plus going plus

558
00:31:22,269 --> 00:31:27,849
both ways now that I think about it

559
00:31:23,648 --> 00:31:29,528
actually implies you start here right so

560
00:31:27,849 --> 00:31:31,658
maybe that's fine I don't really care it

561
00:31:29,528 --> 00:31:33,308
doesn't matter just point being pick one

562
00:31:31,659 --> 00:31:34,390
so that the pluses are the same so that

563
00:31:33,308 --> 00:31:37,418
we don't have to compute a different

564
00:31:34,390 --> 00:31:38,679
value by the way as I'm working this

565
00:31:37,419 --> 00:31:39,970
through I'm thinking that actually the

566
00:31:38,679 --> 00:31:41,620
interviewer didn't know half of the

567
00:31:39,970 --> 00:31:44,440
things I'm saying here but that's beside

568
00:31:41,619 --> 00:31:48,129
the point so we should be able to do

569
00:31:44,440 --> 00:31:51,669
just the error compute it this way write

570
00:31:48,130 --> 00:31:54,070
it back then we draw whichever point we

571
00:31:51,669 --> 00:31:57,520
selected and continue the loop makes

572
00:31:54,069 --> 00:32:00,308
sense now obviously the next question is

573
00:31:57,519 --> 00:32:02,349
well at some point you're gonna have to

574
00:32:00,308 --> 00:32:04,269
switch to going back down right like

575
00:32:02,349 --> 00:32:05,859
you're gonna go like that and you're

576
00:32:04,269 --> 00:32:08,440
gonna have to go back down and all this

577
00:32:05,859 --> 00:32:10,479
other stuff right how do we do that the

578
00:32:08,440 --> 00:32:12,580
final thing you need to think about in

579
00:32:10,480 --> 00:32:14,589
order to make this routine fast again in

580
00:32:12,579 --> 00:32:21,970
those days it is not how you would want

581
00:32:14,589 --> 00:32:26,949
to do it today but if we look at what's

582
00:32:21,970 --> 00:32:30,519
going on here what you can see is that

583
00:32:26,950 --> 00:32:33,069
as we move around the circle it's really

584
00:32:30,519 --> 00:32:35,230
eight-way symmetric if we want it to be

585
00:32:33,069 --> 00:32:38,648
I mean a circle is an infinitely

586
00:32:35,230 --> 00:32:39,669
symmetric shape I can draw any any line

587
00:32:38,648 --> 00:32:43,689
through it

588
00:32:39,669 --> 00:32:45,909
that I want right and it will be the

589
00:32:43,690 --> 00:32:47,679
same after you mirror it so if I split

590
00:32:45,909 --> 00:32:51,640
like straight down the middle for

591
00:32:47,679 --> 00:32:53,409
example I know that every point I draw

592
00:32:51,640 --> 00:32:54,909
here I could have just drawn on the

593
00:32:53,409 --> 00:32:57,580
other side of the circle just fine

594
00:32:54,909 --> 00:33:00,490
negating the X around the center right

595
00:32:57,579 --> 00:33:03,038
so if I just always think of the X as

596
00:33:00,490 --> 00:33:07,419
like plus X I could also just draw

597
00:33:03,038 --> 00:33:09,158
negative X the same point right so that

598
00:33:07,419 --> 00:33:11,559
means I really and I could do the same

599
00:33:09,159 --> 00:33:14,200
with Y so that means I really only need

600
00:33:11,558 --> 00:33:17,048
to draw one quadrant of the circle and

601
00:33:14,200 --> 00:33:19,598
then I just mirror right instead of

602
00:33:17,048 --> 00:33:24,489
the ex-wives I come up with I draw the

603
00:33:19,598 --> 00:33:28,509
plus minus X plus minus y right so all

604
00:33:24,489 --> 00:33:35,429
four combinations plus X plus y minus X

605
00:33:28,509 --> 00:33:41,528
plus y plus X minus y plus oops minus X

606
00:33:35,429 --> 00:33:43,570
minus y right so that gets me out of the

607
00:33:41,528 --> 00:33:47,169
business of ever having to care about

608
00:33:43,569 --> 00:33:49,298
going downward but if you look there's

609
00:33:47,169 --> 00:33:52,538
one more symmetry you can do and I drew

610
00:33:49,298 --> 00:33:57,128
it here and that's diagonal every point

611
00:33:52,538 --> 00:34:00,519
on this circle that I draw XY I could

612
00:33:57,128 --> 00:34:03,488
have also drawn YX right cuz it's

613
00:34:00,519 --> 00:34:06,548
symmetric this way as well as that way

614
00:34:03,489 --> 00:34:09,128
and that way so every point could have

615
00:34:06,548 --> 00:34:11,818
been reflected about this line which

616
00:34:09,128 --> 00:34:16,838
turns wise into X's and X's into Y's

617
00:34:11,818 --> 00:34:23,278
right does that make sense so I can also

618
00:34:16,838 --> 00:34:29,469
only draw 1/8 of the circle makes sense

619
00:34:23,278 --> 00:34:31,179
so what I can do is rather than do all

620
00:34:29,469 --> 00:34:34,418
of the work that you might think of for

621
00:34:31,179 --> 00:34:39,639
drawing a circle I can literally do

622
00:34:34,418 --> 00:34:42,158
something like while you know X is group

623
00:34:39,639 --> 00:34:48,849
or I guess we're less than or equal to Y

624
00:34:42,159 --> 00:34:51,000
you know do that if e1 less than e2 you

625
00:34:48,849 --> 00:34:51,000
know

626
00:34:56,050 --> 00:35:01,060
you know it's like this so you get the

627
00:34:58,840 --> 00:35:05,140
whole drawing of your circle down to

628
00:35:01,059 --> 00:35:06,579
that and then a big old honkin right

629
00:35:05,139 --> 00:35:08,170
pixel right pixel right pixel right

630
00:35:06,579 --> 00:35:12,279
pixel right pixel which are like memory

631
00:35:08,170 --> 00:35:18,750
pokes into those addresses right make

632
00:35:12,280 --> 00:35:21,100
sense so it you know essentially that is

633
00:35:18,750 --> 00:35:22,780
what the interview question and you can

634
00:35:21,099 --> 00:35:24,759
see like so let's say you interviewed me

635
00:35:22,780 --> 00:35:27,490
today on anything related to this

636
00:35:24,760 --> 00:35:32,860
because my mind already has gone through

637
00:35:27,489 --> 00:35:34,539
this work I can just do it right and you

638
00:35:32,860 --> 00:35:35,980
know that's the optimal result for an

639
00:35:34,539 --> 00:35:37,659
interview question like this is to see

640
00:35:35,980 --> 00:35:38,949
the person just like go off and like

641
00:35:37,659 --> 00:35:42,159
show you all the possible things you

642
00:35:38,949 --> 00:35:43,839
could have done but again it's kind of a

643
00:35:42,159 --> 00:35:47,769
worthless interview question in my mind

644
00:35:43,840 --> 00:35:49,269
because the this is called abrasion hand

645
00:35:47,769 --> 00:35:52,480
style algorithm Brezhnev style

646
00:35:49,269 --> 00:35:54,309
algorithms are algorithms that draw from

647
00:35:52,480 --> 00:35:57,280
a known location based on minimizing

648
00:35:54,309 --> 00:35:59,230
error as it steps along pixels you can

649
00:35:57,280 --> 00:36:01,390
do them for lines as well and other

650
00:35:59,230 --> 00:36:03,070
shapes pretty much anything that has an

651
00:36:01,389 --> 00:36:05,230
implicit form can be drawn breast in ham

652
00:36:03,070 --> 00:36:07,269
if you can find a starting point on that

653
00:36:05,230 --> 00:36:09,099
shape then the brezin ham for the

654
00:36:07,269 --> 00:36:12,239
algorithm is to remember what the error

655
00:36:09,099 --> 00:36:15,429
is at the point that you're sitting on

656
00:36:12,239 --> 00:36:17,529
and then as you draw all you do is look

657
00:36:15,429 --> 00:36:20,079
at the two or three candidate points

658
00:36:17,530 --> 00:36:21,700
that you want to examine and say which

659
00:36:20,079 --> 00:36:27,539
one of these has the least error and you

660
00:36:21,699 --> 00:36:33,899
go to that point right so really that's

661
00:36:27,539 --> 00:36:33,900
that's it right that make sense

662
00:36:42,179 --> 00:36:48,179
so yeah you know if you were to imagine

663
00:36:44,960 --> 00:36:54,059
I don't know we're kind of in for a

664
00:36:48,179 --> 00:36:56,598
penny in for a pound here should

665
00:36:54,059 --> 00:37:02,240
probably upload this as a separate video

666
00:36:56,599 --> 00:37:02,240
um let me just give you

667
00:37:11,429 --> 00:37:19,078
so let's just say for sake of argument

668
00:37:14,338 --> 00:37:21,150
right I don't know what we're gonna call

669
00:37:19,079 --> 00:37:25,829
we got a test directory here I know

670
00:37:21,150 --> 00:37:28,380
those are pings or something so in the

671
00:37:25,829 --> 00:37:37,380
handmade Miss directory let's just say

672
00:37:28,380 --> 00:37:51,298
that we've got a thing that's like like

673
00:37:37,380 --> 00:37:53,369
a present ham Circle routine right so if

674
00:37:51,298 --> 00:37:55,739
you imagine you're back in the old days

675
00:37:53,369 --> 00:37:57,990
let's just say we have a pixel grid

676
00:37:55,739 --> 00:38:00,028
right so there's a pixel grid in here

677
00:37:57,989 --> 00:38:01,649
and we're just gonna make it up like the

678
00:38:00,028 --> 00:38:03,239
way that it was back then where there's

679
00:38:01,650 --> 00:38:05,068
just a block of memory that you write

680
00:38:03,239 --> 00:38:09,719
bytes to and that's the entire thing

681
00:38:05,068 --> 00:38:11,818
turn em san so basically what you want

682
00:38:09,719 --> 00:38:17,429
to do is say alright live like let's say

683
00:38:11,818 --> 00:38:20,099
we have a care here we have pixels and

684
00:38:17,429 --> 00:38:24,269
our pixel grid is just going to be like

685
00:38:20,099 --> 00:38:26,720
some kind of Sighs here that were we are

686
00:38:24,269 --> 00:38:29,788
comfortable printing out like 64 by 64

687
00:38:26,719 --> 00:38:32,009
right and they'll all start out equal to

688
00:38:29,789 --> 00:38:33,960
0 and then what we're gonna do is we're

689
00:38:32,010 --> 00:38:35,970
just gonna draw our pixel grid at the

690
00:38:33,960 --> 00:38:39,358
end of the day and then exit the program

691
00:38:35,969 --> 00:38:45,838
so if I were to do that what I can do is

692
00:38:39,358 --> 00:38:49,528
say alright here's our output we're

693
00:38:45,838 --> 00:38:56,298
gonna say that our X is 0 or X is less

694
00:38:49,528 --> 00:38:56,298
than 64 right in fact I can just do this

695
00:39:11,570 --> 00:39:17,760
okay so now what I want to do is just

696
00:39:15,389 --> 00:39:20,670
say look if there was something in this

697
00:39:17,760 --> 00:39:23,460
pixel slot like whatever it is and we'll

698
00:39:20,670 --> 00:39:25,440
do X Y because that's just you know a

699
00:39:23,460 --> 00:39:29,309
little bit more memory order order

700
00:39:25,440 --> 00:39:33,200
friendly if there's something in that

701
00:39:29,309 --> 00:39:36,599
slot then what I want to do is say like

702
00:39:33,199 --> 00:39:41,189
draw something there that we know so you

703
00:39:36,599 --> 00:39:44,670
know it would be something like a star

704
00:39:41,190 --> 00:39:47,490
let's say oops and if there's something

705
00:39:44,670 --> 00:39:49,110
there that we don't know that or rather

706
00:39:47,489 --> 00:39:52,639
there was nothing there maybe we just

707
00:39:49,110 --> 00:39:56,670
print a dot right so we can kind of see

708
00:39:52,639 --> 00:39:59,159
what's going on every time we get to the

709
00:39:56,670 --> 00:40:02,099
end we print carriage return right and

710
00:39:59,159 --> 00:40:03,739
so maybe here I can also do like all

711
00:40:02,099 --> 00:40:10,799
right pixels

712
00:40:03,739 --> 00:40:14,819
you know 32 16 equals one okay so if I

713
00:40:10,800 --> 00:40:17,400
come back here and I will go to the

714
00:40:14,820 --> 00:40:21,539
build directory let's say and I just run

715
00:40:17,400 --> 00:40:29,220
a CL on it so I just say CL you know

716
00:40:21,539 --> 00:40:31,230
handmade misc be circle dot CPP and run

717
00:40:29,219 --> 00:40:33,119
it what you can see is that it prints

718
00:40:31,230 --> 00:40:38,280
out our pixel grid you know

719
00:40:33,119 --> 00:40:40,440
quote-unquote right now we're super

720
00:40:38,280 --> 00:40:42,960
eccentric here is the only problem like

721
00:40:40,440 --> 00:40:45,240
you know this these this is not a square

722
00:40:42,960 --> 00:40:47,429
font so it's gonna be like an elongated

723
00:40:45,239 --> 00:40:49,799
kind of nonsense but that's just how

724
00:40:47,429 --> 00:40:51,269
we'll deal with it well like what I can

725
00:40:49,800 --> 00:40:54,260
do to compensate for that a little bit

726
00:40:51,269 --> 00:40:57,989
is maybe make this a little bit smaller

727
00:40:54,260 --> 00:41:03,950
so it's 32 by 32 and we'll plop the

728
00:40:57,989 --> 00:41:03,949
middle you know middle point right so

729
00:41:04,550 --> 00:41:09,990
there's our there's our nonsense and so

730
00:41:08,940 --> 00:41:11,010
now we're gonna try and draw a circle

731
00:41:09,989 --> 00:41:12,319
and the sword is going to be kind of an

732
00:41:11,010 --> 00:41:15,260
oval because our

733
00:41:12,320 --> 00:41:18,230
wrecked our coordinate system you know

734
00:41:15,260 --> 00:41:20,810
is stretched right but we want to draw

735
00:41:18,230 --> 00:41:22,820
our circle so we want to be able to

736
00:41:20,809 --> 00:41:25,130
specify this and again no floating-point

737
00:41:22,820 --> 00:41:28,910
here folks and these are really should

738
00:41:25,130 --> 00:41:32,930
be shorts so you know it's really this

739
00:41:28,909 --> 00:41:36,109
it's like unsigned short CX unsigned

740
00:41:32,929 --> 00:41:37,639
short CY right you know we could leave

741
00:41:36,110 --> 00:41:39,230
them sign too if we want doesn't really

742
00:41:37,639 --> 00:41:42,500
matter because there's the pixel grids

743
00:41:39,230 --> 00:41:46,849
back then we're like at best 640 by 400

744
00:41:42,500 --> 00:41:50,449
or 40 so you didn't have to worry about

745
00:41:46,849 --> 00:41:52,369
large numbers so you know here we've got

746
00:41:50,449 --> 00:41:53,949
two short values this is going to be the

747
00:41:52,369 --> 00:41:57,650
center of our circle wherever that is

748
00:41:53,949 --> 00:42:02,839
and so let's say we want to draw one you

749
00:41:57,650 --> 00:42:05,510
know that's centered at 10:12 and we

750
00:42:02,840 --> 00:42:11,269
want the radius of our circle to be you

751
00:42:05,510 --> 00:42:13,640
know six right so now I need to do my

752
00:42:11,269 --> 00:42:15,380
drawing loop like I said I want to do a

753
00:42:13,639 --> 00:42:17,420
drawing loop such that it starts at a

754
00:42:15,380 --> 00:42:20,840
certain X&amp;Y that I know and then goes up

755
00:42:17,420 --> 00:42:22,909
so that the x and y values will

756
00:42:20,840 --> 00:42:25,010
basically cross at some point right and

757
00:42:22,909 --> 00:42:27,259
that's how I know that I've done so I

758
00:42:25,010 --> 00:42:35,780
want to do something where like my X

759
00:42:27,260 --> 00:42:37,460
offset my Y offset our like our I'm not

760
00:42:35,780 --> 00:42:38,930
sure to status so there's a couple

761
00:42:37,460 --> 00:42:40,789
different ways I could do it one is I

762
00:42:38,929 --> 00:42:42,859
can try to compute a value that are

763
00:42:40,789 --> 00:42:44,929
stored that I know when my X crosses it

764
00:42:42,860 --> 00:42:46,309
I've gotten over there or if I'm based

765
00:42:44,929 --> 00:42:48,649
around zero I know that it's just when

766
00:42:46,309 --> 00:42:50,929
the two flip so it's just like when X is

767
00:42:48,650 --> 00:42:53,470
less than or Y or something right so if

768
00:42:50,929 --> 00:42:56,329
I wanted to start off in that scenario

769
00:42:53,469 --> 00:42:58,429
what I would first do is say well I know

770
00:42:56,329 --> 00:43:04,210
that the x location that I'm starting

771
00:42:58,429 --> 00:43:06,949
off at right is going to be like I

772
00:43:04,210 --> 00:43:09,769
wanted that X location to be negative

773
00:43:06,949 --> 00:43:11,539
right because I wanted to start on the

774
00:43:09,769 --> 00:43:14,599
side where I'm always doing plus I'm

775
00:43:11,539 --> 00:43:18,039
always doing a plus direction so I would

776
00:43:14,599 --> 00:43:18,039
like to start off with

777
00:43:28,539 --> 00:43:34,880
yeah I think that's right so I want to

778
00:43:31,818 --> 00:43:36,469
start off with this as being the the

779
00:43:34,880 --> 00:43:37,818
negative are right I'm gonna base it

780
00:43:36,469 --> 00:43:41,088
around zero and I'm just gonna draw with

781
00:43:37,818 --> 00:43:43,159
an offset so to base it around negative

782
00:43:41,088 --> 00:43:47,389
R and then the Y I'm just gonna base a

783
00:43:43,159 --> 00:43:49,399
zero right and then while these two well

784
00:43:47,389 --> 00:43:51,828
I haven't actually crossed over yet so

785
00:43:49,400 --> 00:43:54,619
while you know why and you can see that

786
00:43:51,829 --> 00:43:57,048
X is gonna be negative here so it would

787
00:43:54,619 --> 00:43:59,568
always be so I need to negate this in

788
00:43:57,048 --> 00:44:01,909
order to do the check right meaning I

789
00:43:59,568 --> 00:44:03,619
need to make sure that I as I step I

790
00:44:01,909 --> 00:44:05,449
account for the fact that I'm negating

791
00:44:03,619 --> 00:44:07,430
as I go now we may be able to optimize

792
00:44:05,449 --> 00:44:09,318
all this stuff further as we start to

793
00:44:07,429 --> 00:44:10,909
look at it more but just like for now

794
00:44:09,318 --> 00:44:13,849
we're just trying to get it the basic

795
00:44:10,909 --> 00:44:15,379
sketch in so then what I need to do is

796
00:44:13,849 --> 00:44:17,359
say all right I need to compute my two

797
00:44:15,380 --> 00:44:18,890
errors for starters and again we might

798
00:44:17,358 --> 00:44:20,420
be able to simplify a lot of this but

799
00:44:18,889 --> 00:44:23,239
we're just gonna start with the simple

800
00:44:20,420 --> 00:44:25,219
the basic version of it and so for the

801
00:44:23,239 --> 00:44:27,289
for the error if I look back at what we

802
00:44:25,219 --> 00:44:30,199
were saying here right what I needed to

803
00:44:27,289 --> 00:44:33,619
do is figure out if I start with the

804
00:44:30,199 --> 00:44:38,559
previous error so like whatever the

805
00:44:33,619 --> 00:44:41,568
previous error is over here yeah

806
00:44:38,559 --> 00:44:45,289
so if I start with whatever the previous

807
00:44:41,568 --> 00:44:47,778
error was right then I know that I need

808
00:44:45,289 --> 00:44:50,059
to because the x squared plus y squared

809
00:44:47,778 --> 00:44:53,150
minus R squared is whatever the previous

810
00:44:50,059 --> 00:44:56,180
error for this thing was the plus one

811
00:44:53,150 --> 00:45:00,410
plus two x is what comes out of me

812
00:44:56,179 --> 00:45:03,048
computing the new value so first I need

813
00:45:00,409 --> 00:45:06,048
to take my old error and I need to add

814
00:45:03,048 --> 00:45:11,199
one to it to get that part of the value

815
00:45:06,048 --> 00:45:14,809
right and then I need to go ahead and

816
00:45:11,199 --> 00:45:16,249
and really I should probably write this

817
00:45:14,809 --> 00:45:20,440
routine doing the whole computation

818
00:45:16,248 --> 00:45:20,439
correctly and then do the optimized one

819
00:45:21,369 --> 00:45:25,190
to show you the full thing we should

820
00:45:23,568 --> 00:45:28,548
just do this whole thing some time as an

821
00:45:25,190 --> 00:45:30,289
entire episode but anyway so what I want

822
00:45:28,548 --> 00:45:32,849
to do here is say all right I need to

823
00:45:30,289 --> 00:45:34,289
compute the updated version so I know

824
00:45:32,849 --> 00:45:36,690
- the old error which I've already

825
00:45:34,289 --> 00:45:39,869
committed by one plus the two X right

826
00:45:36,690 --> 00:45:42,450
and then the new one is the old error

827
00:45:39,869 --> 00:45:43,769
plus a2y right and now like I said I

828
00:45:42,449 --> 00:45:49,409
don't actually want to do any kind of

829
00:45:43,768 --> 00:45:50,998
multiply here I just want to shift right

830
00:45:49,409 --> 00:45:54,328
I just want to multiply it by two by

831
00:45:50,998 --> 00:45:57,358
shifting so then what I want to do is

832
00:45:54,329 --> 00:46:00,900
say well I need to know which one is you

833
00:45:57,358 --> 00:46:03,598
know for the absolute value whatever

834
00:46:00,900 --> 00:46:09,269
that's going to be right I need to know

835
00:46:03,599 --> 00:46:12,329
which one's absolute value is is is

836
00:46:09,268 --> 00:46:14,189
greater right and I try to think if

837
00:46:12,329 --> 00:46:25,859
there's some way we can avoid that but I

838
00:46:14,190 --> 00:46:29,818
don't because it's a circle you might be

839
00:46:25,858 --> 00:46:32,818
able to know that you'll always be

840
00:46:29,818 --> 00:46:36,358
slightly above or equal to on a Y step

841
00:46:32,818 --> 00:46:42,058
and slightly less than or equal to on an

842
00:46:36,358 --> 00:46:43,978
x step so I want to say that be cut like

843
00:46:42,059 --> 00:46:46,019
if you're going this way if you step

844
00:46:43,978 --> 00:46:48,028
inside you're almost always gonna be

845
00:46:46,018 --> 00:46:51,389
less and you step above you're always

846
00:46:48,028 --> 00:46:53,940
gonna almost gonna be more so I want to

847
00:46:51,389 --> 00:47:00,659
say you could do something probably like

848
00:46:53,940 --> 00:47:02,190
this I want to say but we'll have to

849
00:47:00,659 --> 00:47:04,409
actually analyze that a little bit more

850
00:47:02,190 --> 00:47:07,950
right but I think you might be able to

851
00:47:04,409 --> 00:47:10,649
get away with not actually looking at at

852
00:47:07,949 --> 00:47:11,998
those values right so anyway we're gonna

853
00:47:10,650 --> 00:47:14,548
do something like this and then we're

854
00:47:11,998 --> 00:47:18,298
gonna record the old error as that thing

855
00:47:14,548 --> 00:47:23,579
right so if in this case the old error

856
00:47:18,298 --> 00:47:25,498
was if if in this case the the X step

857
00:47:23,579 --> 00:47:27,660
was going to be the the better we'll

858
00:47:25,498 --> 00:47:29,578
take it if in this case the Y error was

859
00:47:27,659 --> 00:47:32,848
gonna be better we'll take it and when

860
00:47:29,579 --> 00:47:35,880
we actually do the step here we need to

861
00:47:32,849 --> 00:47:37,019
update our x and y values right I don't

862
00:47:35,880 --> 00:47:39,450
know why I'm writing these in lowercase

863
00:47:37,018 --> 00:47:41,689
or some of them not really how I do

864
00:47:39,449 --> 00:47:41,689
things

865
00:47:45,849 --> 00:47:54,259
so once we have those recorded we need

866
00:47:49,340 --> 00:47:55,039
to do you know this or that and then

867
00:47:54,260 --> 00:47:59,000
we're good to go

868
00:47:55,039 --> 00:48:01,099
so finally we need to do a plot here and

869
00:47:59,000 --> 00:48:03,260
this we will do a little bit differently

870
00:48:01,099 --> 00:48:06,380
later but for right now we're just going

871
00:48:03,260 --> 00:48:09,710
to do it this way so we're gonna do Y X

872
00:48:06,380 --> 00:48:18,220
here to plot that particular pixel and

873
00:48:09,710 --> 00:48:20,539
off we go right all right is that it

874
00:48:18,219 --> 00:48:21,769
I've probably forgotten a lot of stuff

875
00:48:20,539 --> 00:48:23,199
there but we're just gonna see what

876
00:48:21,769 --> 00:48:26,599
happens

877
00:48:23,199 --> 00:48:28,609
yeah we started out with an error of

878
00:48:26,599 --> 00:48:30,170
nothing because we're assuming that

879
00:48:28,610 --> 00:48:37,670
we're directly on the circle for our

880
00:48:30,170 --> 00:48:45,769
definition of the circle right and this

881
00:48:37,670 --> 00:48:55,030
was backwards actually meant that all

882
00:48:45,769 --> 00:48:55,030
right uh sue I forgot one more thing

883
00:48:55,630 --> 00:49:04,940
there we go all right um sue we are

884
00:49:02,349 --> 00:49:07,969
accepting this step in the wrong

885
00:49:04,940 --> 00:49:14,900
direction because this was a - right the

886
00:49:07,969 --> 00:49:20,480
X is moving backwards on the actual I'm

887
00:49:14,900 --> 00:49:24,849
sorry now they should be moving forward

888
00:49:20,480 --> 00:49:24,849
what's why are we getting that plot oh

889
00:49:26,079 --> 00:49:32,360
right because Y goes down this is

890
00:49:29,059 --> 00:49:35,059
old-school Y goes down we're fine

891
00:49:32,360 --> 00:49:36,800
all right so what we now need to do is

892
00:49:35,059 --> 00:49:40,039
plot all the other points that I was

893
00:49:36,800 --> 00:49:42,110
talking about before we need to plot you

894
00:49:40,039 --> 00:49:45,889
know every single one of these so in

895
00:49:42,110 --> 00:49:49,370
addition to doing this which is you know

896
00:49:45,889 --> 00:49:52,210
taking each of the possible locations

897
00:49:49,369 --> 00:49:53,989
into account here we also need to do

898
00:49:52,210 --> 00:50:03,429
swapped versions

899
00:49:53,989 --> 00:50:06,769
right so this draws every one of our

900
00:50:03,429 --> 00:50:08,299
coordinates here right and now we've

901
00:50:06,769 --> 00:50:10,550
sort of got our circle although it looks

902
00:50:08,300 --> 00:50:17,690
like we've got one error in the oh no we

903
00:50:10,550 --> 00:50:20,720
don't that's was just this right so now

904
00:50:17,690 --> 00:50:23,900
we've got our circle but we don't really

905
00:50:20,719 --> 00:50:26,598
have the plot of the initial pixel right

906
00:50:23,900 --> 00:50:28,369
and so what we may want to do is change

907
00:50:26,599 --> 00:50:30,440
us around to say let's start plotting

908
00:50:28,369 --> 00:50:32,900
the thing that we were gonna plot in the

909
00:50:30,440 --> 00:50:40,280
first place right and hey look there's

910
00:50:32,900 --> 00:50:41,990
our circle Kanna so looking at what

911
00:50:40,280 --> 00:50:44,859
happens here right you can see that we

912
00:50:41,989 --> 00:50:47,838
can continue to make this even more

913
00:50:44,858 --> 00:50:51,980
ridiculous as we go and reduce the

914
00:50:47,838 --> 00:50:53,539
instructions even further I don't think

915
00:50:51,980 --> 00:50:56,119
there were any conditional moves at that

916
00:50:53,539 --> 00:50:59,088
time but if there were this becomes

917
00:50:56,119 --> 00:51:00,320
branchless in a sense well not really

918
00:50:59,088 --> 00:51:01,608
because you'd have to do too many of

919
00:51:00,320 --> 00:51:07,869
them to probably make it worth it

920
00:51:01,608 --> 00:51:10,460
because of the plus X plus y but anyway

921
00:51:07,869 --> 00:51:14,329
so if you look at how simple this is

922
00:51:10,460 --> 00:51:16,849
right it requires just two shifts one

923
00:51:14,329 --> 00:51:19,429
negate and a check and then one equals

924
00:51:16,849 --> 00:51:22,130
and one ad and that's it this part right

925
00:51:19,429 --> 00:51:24,139
here is a little you know extra add to

926
00:51:22,130 --> 00:51:26,119
do the ink so it's a little more cost

927
00:51:24,139 --> 00:51:28,940
should be this part is incredibly

928
00:51:26,119 --> 00:51:34,730
expensive so the question is what can we

929
00:51:28,940 --> 00:51:36,829
do here that would is there something we

930
00:51:34,730 --> 00:51:40,579
could do here that would make it less

931
00:51:36,829 --> 00:51:44,000
bad right and there are a couple things

932
00:51:40,579 --> 00:51:47,809
we could do certainly and one of them is

933
00:51:44,000 --> 00:51:50,510
to just say well if we were to change

934
00:51:47,809 --> 00:51:52,519
this pointer to just point at the center

935
00:51:50,510 --> 00:51:55,970
to begin with right

936
00:51:52,519 --> 00:52:01,088
we could get rid of the cyc X nonsense

937
00:51:55,969 --> 00:52:04,399
right so if we did let's say we've got a

938
00:52:01,088 --> 00:52:07,759
like a cursor:pointer and we make the

939
00:52:04,400 --> 00:52:14,148
cursor:pointer be pointing to a specific

940
00:52:07,759 --> 00:52:19,278
particularly the CX CY location then

941
00:52:14,148 --> 00:52:21,888
when we drew this we would be able to we

942
00:52:19,278 --> 00:52:30,438
would be able to just use x and y so if

943
00:52:21,889 --> 00:52:33,739
this was a pointer to you know oh I know

944
00:52:30,438 --> 00:52:38,658
what I was doing there good thing though

945
00:52:33,739 --> 00:52:42,259
sore equals huh so if I do something

946
00:52:38,659 --> 00:52:57,729
like that and then I say okay here's my

947
00:52:42,259 --> 00:52:57,728
cursor oops oops

948
00:53:02,409 --> 00:53:16,309
don't ask me what that type I was about

949
00:53:06,759 --> 00:53:17,449
I want you to cast that for me well you

950
00:53:16,309 --> 00:53:18,919
know what this is the step I was gonna

951
00:53:17,449 --> 00:53:22,159
do next anyway so we'll just leave it at

952
00:53:18,918 --> 00:53:24,498
this so let's say we've got our

953
00:53:22,159 --> 00:53:26,479
cursor:pointer there right and then what

954
00:53:24,498 --> 00:53:28,848
we need to do is we want to write to a

955
00:53:26,478 --> 00:53:31,848
particular location in it right so I

956
00:53:28,849 --> 00:53:34,729
know that I want to do this location but

957
00:53:31,849 --> 00:53:38,679
I know that Y needs to move by whatever

958
00:53:34,728 --> 00:53:38,678
the the stride is there right

959
00:53:49,920 --> 00:54:00,849
right so each one of these Y values here

960
00:53:55,088 --> 00:54:03,039
now has to be each one of those Y values

961
00:54:00,849 --> 00:54:05,050
has to be multiplied by the width in

962
00:54:03,039 --> 00:54:07,750
order to go the right number of pixels

963
00:54:05,050 --> 00:54:10,180
right so we really need like times width

964
00:54:07,750 --> 00:54:12,039
after each of these Y values and

965
00:54:10,179 --> 00:54:16,019
remember these X values are effectively

966
00:54:12,039 --> 00:54:18,670
Y values when they're you know in this

967
00:54:16,019 --> 00:54:20,050
when they're being used in this bottom

968
00:54:18,670 --> 00:54:24,130
half right because we're swapping the

969
00:54:20,050 --> 00:54:29,920
two coordinates so if we drop I must

970
00:54:24,130 --> 00:54:33,220
have missed somebody there I did sorry I

971
00:54:29,920 --> 00:54:35,559
removed a negative right so now we're

972
00:54:33,219 --> 00:54:37,659
down to cheaper but we've still got this

973
00:54:35,559 --> 00:54:41,619
integer multiplied here right and the

974
00:54:37,659 --> 00:54:44,078
integer multiply is not fabulous but if

975
00:54:41,619 --> 00:54:47,559
you look at the structure of each of

976
00:54:44,079 --> 00:54:54,940
these you can see that we actually don't

977
00:54:47,559 --> 00:54:57,490
need anything other than right a Y value

978
00:54:54,940 --> 00:54:59,880
times the width and an x value times the

979
00:54:57,489 --> 00:55:02,828
width right because that's the only

980
00:54:59,880 --> 00:55:06,160
value we're actually summing up there in

981
00:55:02,829 --> 00:55:11,230
order to get our eight quadrants to come

982
00:55:06,159 --> 00:55:15,009
together right so if we were to track

983
00:55:11,230 --> 00:55:17,048
that value specifically rather than the

984
00:55:15,010 --> 00:55:19,990
other values that we're tracking we

985
00:55:17,048 --> 00:55:22,480
could simplify this even further now the

986
00:55:19,989 --> 00:55:24,279
question is how do we keep that from

987
00:55:22,480 --> 00:55:25,510
getting to be too many registers and

988
00:55:24,280 --> 00:55:30,130
again I don't really remember how many

989
00:55:25,510 --> 00:55:32,260
there are there might have been eight if

990
00:55:30,130 --> 00:55:34,480
you didn't need to access the stack so

991
00:55:32,260 --> 00:55:39,339
you could so if you well know you would

992
00:55:34,480 --> 00:55:41,829
always need to store the no I guess if

993
00:55:39,338 --> 00:55:43,000
you didn't have to access this but you

994
00:55:41,829 --> 00:55:45,869
need to store where the stack is what

995
00:55:43,000 --> 00:55:48,400
you can pop it so you wouldn't need that

996
00:55:45,869 --> 00:55:51,160
so I think you'd at least you probably

997
00:55:48,400 --> 00:55:53,740
only have seven registers at best I

998
00:55:51,159 --> 00:55:56,379
don't know if it would be six or seven

999
00:55:53,739 --> 00:55:58,179
how many you'd have but if you look at

1000
00:55:56,380 --> 00:56:03,278
how many we're using here we're using

1001
00:55:58,179 --> 00:56:05,139
one to store EP right and restoring two

1002
00:56:03,278 --> 00:56:07,809
more for x and y so we use three

1003
00:56:05,139 --> 00:56:10,179
registers already and then we probably

1004
00:56:07,809 --> 00:56:14,710
need a fourth register at least for

1005
00:56:10,179 --> 00:56:16,269
computing these values here probably two

1006
00:56:14,710 --> 00:56:18,250
registers so we probably need something

1007
00:56:16,269 --> 00:56:20,619
like five registers so we probably only

1008
00:56:18,250 --> 00:56:24,309
have two registers left to store the

1009
00:56:20,619 --> 00:56:26,170
pointers at best right and so the

1010
00:56:24,309 --> 00:56:28,119
question is what could we do here is

1011
00:56:26,170 --> 00:56:31,269
there any way we could make this do less

1012
00:56:28,119 --> 00:56:37,000
multiplies by storing two values instead

1013
00:56:31,269 --> 00:56:40,358
of one value for cursor right now all of

1014
00:56:37,000 --> 00:56:43,690
these plus X minus X plus if all of

1015
00:56:40,358 --> 00:56:45,489
that's pretty cheap right those ads are

1016
00:56:43,690 --> 00:56:48,220
not that bad and we know we have to

1017
00:56:45,489 --> 00:56:49,538
track x and y or do we I mean I guess we

1018
00:56:48,219 --> 00:56:53,949
don't necessarily but it seemed it would

1019
00:56:49,539 --> 00:56:55,778
seem pretty hard to not write so what we

1020
00:56:53,949 --> 00:56:58,989
really want to know is is there any way

1021
00:56:55,778 --> 00:57:02,619
we can speed up this x width here by

1022
00:56:58,989 --> 00:57:04,538
doing something else by tracking a value

1023
00:57:02,619 --> 00:57:07,480
that's like x width or something you

1024
00:57:04,539 --> 00:57:10,079
know like what can we do to fix this

1025
00:57:07,480 --> 00:57:10,079
right

1026
00:57:27,159 --> 00:57:35,039
and to be completely honest I don't

1027
00:57:30,179 --> 00:57:35,039
can't really think of it offhand

1028
00:58:06,849 --> 00:58:10,289
anyone got any ideas

1029
00:58:24,329 --> 00:58:35,039
I also I'm not sure we didn't really

1030
00:58:27,929 --> 00:58:36,919
check this right so you know is we may

1031
00:58:35,039 --> 00:58:41,309
have to do some more work here because

1032
00:58:36,920 --> 00:58:45,980
that is actually what we want I don't

1033
00:58:41,309 --> 00:58:49,139
know what that's in-game at that age

1034
00:58:45,980 --> 00:59:09,829
yeah looking at it though that's the

1035
00:58:49,139 --> 00:59:12,539
same that looks the same to me yeah so

1036
00:59:09,829 --> 00:59:15,539
that's this is the only part I'm not

1037
00:59:12,539 --> 00:59:16,980
sure about because I feel like we could

1038
00:59:15,539 --> 00:59:25,340
probably do this a little bit better

1039
00:59:16,980 --> 00:59:27,990
than we are and I guess if we were

1040
00:59:25,340 --> 00:59:31,220
because we would need the base value as

1041
00:59:27,989 --> 00:59:31,219
a problem I don't know

1042
00:59:40,739 --> 00:59:45,539
I don't really know how to simplify that

1043
00:59:43,139 --> 00:59:48,289
down to something that only takes two

1044
00:59:45,539 --> 00:59:48,289
slots

1045
00:59:56,789 --> 01:00:04,969
I mean I guess well no yeah I don't know

1046
01:00:16,289 --> 01:00:21,900
X fifth of five what would X shift up

1047
01:00:18,929 --> 01:00:24,419
five well yeah I mean assume that this

1048
01:00:21,900 --> 01:00:27,780
you don't know what that is right like

1049
01:00:24,420 --> 01:00:30,720
assume that that's that for something

1050
01:00:27,780 --> 01:00:33,900
right or you know this is more accurate

1051
01:00:30,719 --> 01:00:39,859
to what the situation really was right

1052
01:00:33,900 --> 01:00:39,860
so you can't use shifts anywhere

1053
01:00:51,630 --> 01:00:57,838
yeah the problem though is if you do it

1054
01:00:54,210 --> 01:00:59,759
like if we do any other kind of thing we

1055
01:00:57,838 --> 01:01:02,818
can't get the symmetry out of it right

1056
01:00:59,759 --> 01:01:04,380
if we just have the pointer that we're

1057
01:01:02,818 --> 01:01:08,358
using to write pixels - how do we

1058
01:01:04,380 --> 01:01:10,470
generate the other locations right

1059
01:01:08,358 --> 01:01:15,210
because it starts to become more

1060
01:01:10,469 --> 01:01:16,649
expensive to do that so we really it

1061
01:01:15,210 --> 01:01:18,119
because you really want to get the

1062
01:01:16,650 --> 01:01:28,670
symmetry out of it because it divides

1063
01:01:18,119 --> 01:01:30,778
the cost 13 by 8 right and so yeah and

1064
01:01:28,670 --> 01:01:31,920
someone was said store the X with an Y

1065
01:01:30,778 --> 01:01:33,179
with pointers you increment it currently

1066
01:01:31,920 --> 01:01:35,729
every run that's what I was thinking but

1067
01:01:33,179 --> 01:01:42,328
that's more than two registers because

1068
01:01:35,728 --> 01:01:46,048
you still need this value right because

1069
01:01:42,329 --> 01:01:49,048
you need to be able to negate the Y if

1070
01:01:46,048 --> 01:01:51,239
you if you stored four of them you could

1071
01:01:49,048 --> 01:01:57,028
do it but if you start two of them you

1072
01:01:51,239 --> 01:01:58,559
can't flip this thing at least not that

1073
01:01:57,028 --> 01:02:11,039
I can I can't think of how you do that

1074
01:01:58,559 --> 01:02:14,819
flip see it I'm saying so so there you

1075
01:02:11,039 --> 01:02:16,559
go but anyway that's something to

1076
01:02:14,818 --> 01:02:21,210
ruminate on that's that's the routine

1077
01:02:16,559 --> 01:02:23,309
right and and this this is effect this

1078
01:02:21,210 --> 01:02:24,869
is I think probably I don't know if it's

1079
01:02:23,309 --> 01:02:26,670
quite the best answer we might be able

1080
01:02:24,869 --> 01:02:29,608
to grind it a little a little further

1081
01:02:26,670 --> 01:02:30,778
than this but this was I think I ought

1082
01:02:29,608 --> 01:02:32,009
to be honest I think this was actually

1083
01:02:30,778 --> 01:02:33,869
better than the answer that the

1084
01:02:32,009 --> 01:02:37,349
interviewer sort of discussed at the end

1085
01:02:33,869 --> 01:02:39,509
of the question we're probably better

1086
01:02:37,349 --> 01:02:40,680
than they are at this point but that's

1087
01:02:39,509 --> 01:02:42,809
not surprising right it was just some

1088
01:02:40,679 --> 01:02:47,838
random dude at Microsoft

1089
01:02:42,809 --> 01:02:52,019
but that's effectively what it is right

1090
01:02:47,838 --> 01:02:53,849
um suppose thing I'm thinking on 68k

1091
01:02:52,018 --> 01:02:55,139
terms where they're a bit more ya 68k

1092
01:02:53,849 --> 01:02:59,940
had a lot more registers it's like twice

1093
01:02:55,139 --> 01:03:04,799
as many right I want to say the x86 was

1094
01:02:59,940 --> 01:03:07,650
really register starved that's just

1095
01:03:04,800 --> 01:03:10,800
you know everyone knew it nobody thought

1096
01:03:07,650 --> 01:03:17,930
it was good the thick were so few

1097
01:03:10,800 --> 01:03:17,930
freaking registers on the thing but yeah

1098
01:03:21,769 --> 01:03:28,559
so I don't know I I feel like this part

1099
01:03:27,210 --> 01:03:30,650
right here is the part we can really

1100
01:03:28,559 --> 01:03:33,659
improve this parts looking pretty tight

1101
01:03:30,650 --> 01:03:36,800
we may be able to optimize it very

1102
01:03:33,659 --> 01:03:40,348
slightly but it's pretty darn good right

1103
01:03:36,800 --> 01:03:43,230
it's it's like two shifts to adds a

1104
01:03:40,349 --> 01:03:49,470
compare well one add two shifts to adds

1105
01:03:43,230 --> 01:03:51,300
a compare to get the step and so yeah

1106
01:03:49,469 --> 01:04:04,039
like maybe we can get one of those out

1107
01:03:51,300 --> 01:04:04,039
of there but so here's a question though

1108
01:04:05,420 --> 01:04:10,858
here's a question we're starting to get

1109
01:04:09,179 --> 01:04:14,368
like way better I think than the answer

1110
01:04:10,858 --> 01:04:18,119
that the person gave at the time if ap

1111
01:04:14,369 --> 01:04:20,660
is added to each one then do we ever

1112
01:04:18,119 --> 01:04:23,369
actually care like this is an affine

1113
01:04:20,659 --> 01:04:26,250
this is an affine transform of the

1114
01:04:23,369 --> 01:04:28,369
equation but we don't care what the

1115
01:04:26,250 --> 01:04:30,929
affine transform of the equation is

1116
01:04:28,369 --> 01:04:33,059
because the affine transform of the

1117
01:04:30,929 --> 01:04:37,199
equation just moves it everything in

1118
01:04:33,059 --> 01:04:43,799
space over by one so in theory we should

1119
01:04:37,199 --> 01:04:46,460
be able to do this right and get the

1120
01:04:43,800 --> 01:04:46,460
same circle

1121
01:04:50,039 --> 01:04:53,150
I guess not

1122
01:04:55,639 --> 01:05:03,079
that's a different circle I guess

1123
01:04:59,750 --> 01:05:04,579
because of the negation here yeah that's

1124
01:05:03,079 --> 01:05:06,710
true it's moving it this way but we're

1125
01:05:04,579 --> 01:05:16,130
flipping one of them so I guess I I lied

1126
01:05:06,710 --> 01:05:18,230
about that so never mind I guess oh well

1127
01:05:16,130 --> 01:05:20,630
you know what though so if we're only

1128
01:05:18,230 --> 01:05:25,059
ever testing negative a zero

1129
01:05:20,630 --> 01:05:28,490
I suppose you could negate this

1130
01:05:25,059 --> 01:05:32,199
potentially you might be able to flow

1131
01:05:28,489 --> 01:05:32,199
that through a little bit differently

1132
01:05:39,780 --> 01:05:43,480
yeah I'd have to think about that but no

1133
01:05:42,130 --> 01:05:45,130
I guess I don't know you can't even get

1134
01:05:43,480 --> 01:05:46,420
rid of that so I'm not sure I'm not that

1135
01:05:45,130 --> 01:05:51,579
might be just about as good as it's

1136
01:05:46,420 --> 01:05:55,659
gonna get it's this negation that that

1137
01:05:51,579 --> 01:05:58,480
hurts here because otherwise you could

1138
01:05:55,659 --> 01:06:03,699
just clip out EP entirely because this

1139
01:05:58,480 --> 01:06:06,280
would let you know it's worth asking the

1140
01:06:03,699 --> 01:06:09,818
question can you just compare in some

1141
01:06:06,280 --> 01:06:13,630
other way so that you'd only have to

1142
01:06:09,818 --> 01:06:14,769
look at these two here and I'm not sure

1143
01:06:13,630 --> 01:06:17,079
about that

1144
01:06:14,769 --> 01:06:19,059
so there might be a little bit more

1145
01:06:17,079 --> 01:06:31,359
right there might be a little bit more

1146
01:06:19,059 --> 01:06:32,588
we can get out of that yeah George asked

1147
01:06:31,358 --> 01:06:34,809
the same thing can you get rid of the EP

1148
01:06:32,588 --> 01:06:37,630
plus equals one line and you could have

1149
01:06:34,809 --> 01:06:40,779
if if you didn't negate because negating

1150
01:06:37,630 --> 01:06:43,720
this means that the plus one actually

1151
01:06:40,780 --> 01:06:46,420
becomes a minus one for the e zero right

1152
01:06:43,719 --> 01:06:49,059
which is different than it is here

1153
01:06:46,420 --> 01:06:51,300
so this negation is what makes that not

1154
01:06:49,059 --> 01:06:51,299
possible

1155
01:06:52,139 --> 01:06:56,098
so yeah

1156
01:07:08,760 --> 01:07:13,810
so what if we changed our thinking on

1157
01:07:11,739 --> 01:07:16,509
this just a little bit so what if we

1158
01:07:13,809 --> 01:07:18,909
said look for this whole thing we're

1159
01:07:16,510 --> 01:07:23,200
just gonna negate the x value from what

1160
01:07:18,909 --> 01:07:26,769
it was right like we're just gonna we're

1161
01:07:23,199 --> 01:07:31,929
gonna flip the x value so if I just

1162
01:07:26,769 --> 01:07:46,030
negated X the whole way through it would

1163
01:07:31,929 --> 01:07:49,019
look like this right probably now that

1164
01:07:46,030 --> 01:07:49,019
that's actually still that

1165
01:07:57,028 --> 01:08:02,170
something like that that wrong yeah

1166
01:08:00,219 --> 01:08:07,778
that's totally wrong I need to do that a

1167
01:08:02,170 --> 01:08:17,130
little cleaner so if I wanted to gate X

1168
01:08:07,778 --> 01:08:20,469
here oops I know what it forgot to do

1169
01:08:17,130 --> 01:08:25,119
there we go so I find a gate X all the

1170
01:08:20,469 --> 01:08:28,889
way through then it looks like this and

1171
01:08:25,119 --> 01:08:28,889
I still draw the same circle right

1172
01:08:29,520 --> 01:08:36,989
it's that same circle yeah

1173
01:08:37,539 --> 01:08:42,548
and so negating Excel the way through

1174
01:08:39,219 --> 01:08:45,698
there does that give us any options that

1175
01:08:42,548 --> 01:08:54,069
we wouldn't have had otherwise I don't

1176
01:08:45,698 --> 01:08:56,079
really think that it does so applying

1177
01:08:54,069 --> 01:09:04,179
this negative here if we've wanted to

1178
01:08:56,079 --> 01:09:08,798
work it back through so if we said we

1179
01:09:04,179 --> 01:09:13,798
wanted that easy row now has to be

1180
01:09:08,798 --> 01:09:13,798
computed as negative right

1181
01:09:18,880 --> 01:09:23,640
and I guess it would have to be negated

1182
01:09:20,920 --> 01:09:23,640
in here though

1183
01:09:28,770 --> 01:09:34,590
right but we can do that if we want to

1184
01:09:35,699 --> 01:09:41,349
um so yeah that ends up like this I

1185
01:09:39,729 --> 01:09:43,739
don't that doesn't seem to really do

1186
01:09:41,350 --> 01:09:46,600
anything good for us though I can't see

1187
01:09:43,739 --> 01:09:49,539
how that would help because we still

1188
01:09:46,600 --> 01:09:53,410
have the negation in there the because

1189
01:09:49,539 --> 01:09:55,989
the its ep it still is EP plus 1 or e P

1190
01:09:53,409 --> 01:09:58,559
minus 1 right depending on the

1191
01:09:55,989 --> 01:09:58,559
circumstance

1192
01:10:02,670 --> 01:10:11,409
so maybe mmm yeah I just don't I don't

1193
01:10:09,520 --> 01:10:20,140
see it I don't see how to get rid of the

1194
01:10:11,409 --> 01:10:22,649
plus 1 because no matter what we do it

1195
01:10:20,140 --> 01:10:27,360
seems like that plus 1 right is just

1196
01:10:22,649 --> 01:10:27,359
it's not it's not

1197
01:10:39,840 --> 01:10:45,539
it's not going back in here it's always

1198
01:10:43,979 --> 01:10:47,609
gonna have to be like a minus one or a

1199
01:10:45,539 --> 01:10:50,519
plus one right like I just don't I don't

1200
01:10:47,609 --> 01:10:53,369
see I don't see any way we can eliminate

1201
01:10:50,520 --> 01:10:57,030
this line because this always wants to

1202
01:10:53,369 --> 01:11:00,029
be the other way round like it always

1203
01:10:57,029 --> 01:11:01,739
wants to change which whether you're

1204
01:11:00,029 --> 01:11:07,019
going plus one or minus one

1205
01:11:01,739 --> 01:11:08,550
based on the stepping here I mean I

1206
01:11:07,020 --> 01:11:10,080
guess what we could say is if we just

1207
01:11:08,550 --> 01:11:17,880
wanted to change the direction that X

1208
01:11:10,079 --> 01:11:19,920
was going just entirely though you know

1209
01:11:17,880 --> 01:11:22,609
with that would there be some way for us

1210
01:11:19,920 --> 01:11:22,609
to do that

1211
01:11:31,099 --> 01:11:45,289
I mean if we started oh wow so here's a

1212
01:11:41,238 --> 01:11:47,988
mind bender for you since we don't care

1213
01:11:45,289 --> 01:11:52,698
which part of the circle we compute the

1214
01:11:47,988 --> 01:11:55,578
X and the y on what if we reflected it

1215
01:11:52,698 --> 01:11:57,589
so that the x value is actually drawing

1216
01:11:55,578 --> 01:12:06,500
on a different part of the circle than

1217
01:11:57,590 --> 01:12:12,110
the Y if we say that right and we change

1218
01:12:06,500 --> 01:12:22,760
this to just be based on like some kind

1219
01:12:12,109 --> 01:12:25,309
of an R value then I think we could get

1220
01:12:22,760 --> 01:12:31,570
rid of it this this test knowing when

1221
01:12:25,310 --> 01:12:31,570
you're done does seem hard

1222
01:12:42,250 --> 01:12:48,380
so so that part I'm not sure about one

1223
01:12:46,460 --> 01:12:52,699
thing we could do and this is a real

1224
01:12:48,380 --> 01:12:54,739
wild shot I don't really know one thing

1225
01:12:52,699 --> 01:12:58,010
we could do is this I don't think that's

1226
01:12:54,739 --> 01:13:10,369
going to work but then we would

1227
01:12:58,010 --> 01:13:13,100
literally just be doing this I think so

1228
01:13:10,369 --> 01:13:15,920
we're actually not even ever really

1229
01:13:13,100 --> 01:13:18,140
drawing any we're not following a path

1230
01:13:15,920 --> 01:13:21,079
along the circle we're just starting X

1231
01:13:18,140 --> 01:13:23,539
at the origin and Y at the origin and

1232
01:13:21,079 --> 01:13:25,819
we're just stepping along two separate

1233
01:13:23,539 --> 01:13:32,600
circles seeing which step we probably

1234
01:13:25,819 --> 01:13:36,739
should take first I don't know I don't

1235
01:13:32,600 --> 01:13:39,280
know if this will work this condition I

1236
01:13:36,739 --> 01:13:41,869
don't know yeah cause it could it just I

1237
01:13:39,279 --> 01:13:43,159
don't know what condition to stop on

1238
01:13:41,869 --> 01:13:45,949
that's not going to require us to

1239
01:13:43,159 --> 01:13:49,639
compute some other value is the only

1240
01:13:45,949 --> 01:13:53,059
problem because at that point you kind

1241
01:13:49,640 --> 01:13:57,020
of need to say look while X is less than

1242
01:13:53,060 --> 01:13:59,630
like half of our or something you know

1243
01:13:57,020 --> 01:14:03,250
it would it would be like this and that

1244
01:13:59,630 --> 01:14:08,090
requires like another register you know

1245
01:14:03,250 --> 01:14:10,159
so yeah all right I screwed up something

1246
01:14:08,090 --> 01:14:10,850
there but you know what I mean right

1247
01:14:10,159 --> 01:14:13,369
like that

1248
01:14:10,850 --> 01:14:14,900
so let's well let me try that let's try

1249
01:14:13,369 --> 01:14:19,340
that and see if we get that to work

1250
01:14:14,899 --> 01:14:23,629
that's a real Mindbender so basically

1251
01:14:19,340 --> 01:14:31,279
what we're saying there is okay if if

1252
01:14:23,630 --> 01:14:33,859
the step on on X would produce less

1253
01:14:31,279 --> 01:14:36,969
error than the step on Y even though

1254
01:14:33,859 --> 01:14:40,869
we're stepping them on totally different

1255
01:14:36,970 --> 01:14:40,869
places on the circle

1256
01:14:54,420 --> 01:15:03,489
let me look at that equation again so if

1257
01:14:58,930 --> 01:15:08,850
I wanted to step x and y and I just

1258
01:15:03,489 --> 01:15:11,590
wanted to eliminate the plus one right

1259
01:15:08,850 --> 01:15:19,840
the problem there is in the absolute

1260
01:15:11,590 --> 01:15:22,210
value of e 1 and E 2 right otherwise we

1261
01:15:19,840 --> 01:15:24,730
could just do it but the absolute value

1262
01:15:22,210 --> 01:15:28,750
flips around which wave that plus 1 is

1263
01:15:24,729 --> 01:15:35,619
going now if I want to step on the

1264
01:15:28,750 --> 01:15:37,600
circle I feel like this should work

1265
01:15:35,619 --> 01:15:39,609
though I feel like we should be able to

1266
01:15:37,600 --> 01:15:42,180
do it this way why wasn't that why

1267
01:15:39,609 --> 01:15:42,179
didn't that work

1268
01:15:55,630 --> 01:16:01,230
I I wish I understood quite why that

1269
01:15:58,449 --> 01:16:01,229
didn't work

1270
01:16:09,069 --> 01:16:12,849
I guess that's because there needs to be

1271
01:16:11,380 --> 01:16:18,730
a differentiation between them otherwise

1272
01:16:12,850 --> 01:16:29,980
they're both doing the same thing let me

1273
01:16:18,729 --> 01:16:34,119
look at this one more time so here's the

1274
01:16:29,979 --> 01:16:37,389
original right and what we're actually

1275
01:16:34,119 --> 01:16:40,359
doing here when we write when we're

1276
01:16:37,390 --> 01:16:42,550
computing this the only difference

1277
01:16:40,359 --> 01:16:45,549
between these two paths is that the X

1278
01:16:42,550 --> 01:16:48,880
part is getting that that negation right

1279
01:16:45,550 --> 01:16:50,920
and the two steps have to do something

1280
01:16:48,880 --> 01:16:54,609
different but I guess they are because

1281
01:16:50,920 --> 01:16:56,800
one's X one's Y right since I should be

1282
01:16:54,609 --> 01:16:58,299
able to flip the x coordinate just fine

1283
01:16:56,800 --> 01:17:01,630
the thing that's a little confusing to

1284
01:16:58,300 --> 01:17:04,210
me is why I can't change it to computing

1285
01:17:01,630 --> 01:17:14,230
directly off of the exome directly off

1286
01:17:04,210 --> 01:17:20,230
of an x0 y0 right so this straight down

1287
01:17:14,229 --> 01:17:25,029
here here's what I'm saying so let's

1288
01:17:20,229 --> 01:17:29,369
suppose that we always wanted to have X

1289
01:17:25,029 --> 01:17:32,050
step in a way that would increase the

1290
01:17:29,369 --> 01:17:35,439
error on the top side of the circle and

1291
01:17:32,050 --> 01:17:40,140
Y so in order to do that let's say we

1292
01:17:35,439 --> 01:17:44,349
start the Y this way and we start the X

1293
01:17:40,140 --> 01:17:46,480
this way right because in both cases now

1294
01:17:44,350 --> 01:17:50,740
we're always going to be pushing the

1295
01:17:46,479 --> 01:17:52,149
error when we step right we're always

1296
01:17:50,739 --> 01:17:58,109
going to be pushing the error out

1297
01:17:52,149 --> 01:17:58,109
further as we go you know I'm Sam

1298
01:18:05,319 --> 01:18:09,429
and and I feel like wasn't this a minus

1299
01:18:07,840 --> 01:18:18,909
minus X before why is that still a plus

1300
01:18:09,430 --> 01:18:22,829
plus X huh I guess we inverted that at

1301
01:18:18,909 --> 01:18:27,099
some point I don't remember that anyway

1302
01:18:22,829 --> 01:18:29,229
so yeah drawing the circle this way it

1303
01:18:27,100 --> 01:18:32,230
feels like we should be able to say like

1304
01:18:29,229 --> 01:18:35,500
look take a step here if the error would

1305
01:18:32,229 --> 01:18:42,189
be less than taking a step here you know

1306
01:18:35,500 --> 01:18:46,350
what I'm saying to you but I guess it's

1307
01:18:42,189 --> 01:18:46,349
because the error doesn't track properly

1308
01:18:47,970 --> 01:18:53,860
it's a little mind-bending for me I'm

1309
01:18:50,560 --> 01:18:56,730
not sure how to analyze that properly

1310
01:18:53,859 --> 01:18:56,729
right

1311
01:19:09,039 --> 01:19:16,939
it just it feels like we should be able

1312
01:19:11,988 --> 01:19:19,968
to get those down to both going the same

1313
01:19:16,939 --> 01:19:22,539
direction but but somehow we don't so

1314
01:19:19,969 --> 01:19:26,510
now we aren't able to and I and I don't

1315
01:19:22,539 --> 01:19:28,969
well it well I understand maybe slightly

1316
01:19:26,510 --> 01:19:30,949
just in terms of wrote equation

1317
01:19:28,969 --> 01:19:33,289
manipulation why that's happening I

1318
01:19:30,948 --> 01:19:35,210
don't actually my intuition is failing

1319
01:19:33,289 --> 01:19:36,859
to grasp it which bothers me so like

1320
01:19:35,210 --> 01:19:39,050
like I want to be able to intuit why

1321
01:19:36,859 --> 01:19:41,809
that can't happen in a way that's a

1322
01:19:39,050 --> 01:19:45,039
little bit more straightforward because

1323
01:19:41,810 --> 01:19:45,039
right now I'm having trouble with that

1324
01:19:46,960 --> 01:19:54,050
if you get rid of the EP plus what

1325
01:19:50,810 --> 01:19:58,640
you're really asking is is X shifted

1326
01:19:54,050 --> 01:20:00,829
down by one I was sorry if if 2x is

1327
01:19:58,640 --> 01:20:08,960
different than 2 which which one is

1328
01:20:00,829 --> 01:20:10,819
greater 2 X or 2 y right which is

1329
01:20:08,960 --> 01:20:13,869
basically the same as just asking if X

1330
01:20:10,819 --> 01:20:13,869
or Y is greater right

1331
01:20:21,738 --> 01:20:27,109
yeah so I guess maybe the reason is

1332
01:20:24,260 --> 01:20:30,380
because since those values are based off

1333
01:20:27,109 --> 01:20:35,109
of the original equation you and you

1334
01:20:30,380 --> 01:20:39,039
need them to correctly work around 0

1335
01:20:35,109 --> 01:20:39,039
maybe that's the best you can do

1336
01:20:55,390 --> 01:20:59,450
duskie I'm sorry we decided to go with

1337
01:20:58,069 --> 01:21:06,619
another candidate because he went to

1338
01:20:59,449 --> 01:21:08,779
Harvard if if you're hiring criteria for

1339
01:21:06,619 --> 01:21:10,909
4cs people is that they went to Harvard

1340
01:21:08,779 --> 01:21:21,229
who that company is going in the tank

1341
01:21:10,909 --> 01:21:22,699
quick I don't know that's when to

1342
01:21:21,229 --> 01:21:27,049
ruminate on I think it's a fun little

1343
01:21:22,699 --> 01:21:32,619
puzzle right and and I don't know you

1344
01:21:27,050 --> 01:21:36,489
can also look up the you know this is a

1345
01:21:32,619 --> 01:21:36,489
if I'm spelling that right

1346
01:21:39,239 --> 01:21:42,369
[Music]

1347
01:21:49,929 --> 01:21:53,590
I was kind of hoping they would have it

1348
01:21:51,639 --> 01:22:05,069
minimize down to code so we could see

1349
01:21:53,590 --> 01:22:05,069
what they get this are e

1350
01:22:18,770 --> 01:22:21,770
whoa

1351
01:22:24,380 --> 01:22:35,180
so that seems bad like that does a bunch

1352
01:22:29,119 --> 01:22:36,559
of multiplies there I guess I guess it's

1353
01:22:35,180 --> 01:22:37,190
really just a shift by four which is

1354
01:22:36,560 --> 01:22:41,060
fine

1355
01:22:37,189 --> 01:22:45,349
I'm sorry shift by two right I don't

1356
01:22:41,060 --> 01:22:47,180
know what this isn't that different from

1357
01:22:45,350 --> 01:22:52,730
ours I suppose it looks basically the

1358
01:22:47,180 --> 01:22:56,450
same actually this part I'm not so sure

1359
01:22:52,729 --> 01:23:04,489
about so you're this this is assuming

1360
01:22:56,449 --> 01:23:06,859
you only ever draw one pixel on like you

1361
01:23:04,489 --> 01:23:08,719
can't ever draw two pixels upward which

1362
01:23:06,859 --> 01:23:10,639
seems weird I guess you could say that

1363
01:23:08,720 --> 01:23:12,260
because you if you're just doing the top

1364
01:23:10,640 --> 01:23:16,760
part you just assume you never do that

1365
01:23:12,260 --> 01:23:19,690
right so that's that seems like an

1366
01:23:16,760 --> 01:23:19,690
interesting way to do it

1367
01:23:20,680 --> 01:23:26,750
maybe like in other words that's an

1368
01:23:24,079 --> 01:23:27,949
optimization we didn't do but like and I

1369
01:23:26,750 --> 01:23:29,989
also don't know if the automation you

1370
01:23:27,949 --> 01:23:31,609
need to bother with but basically what

1371
01:23:29,989 --> 01:23:33,469
they were saying is like look either

1372
01:23:31,609 --> 01:23:35,809
we're gonna increment the Y or we're

1373
01:23:33,470 --> 01:23:39,079
gonna increment the Y and the X so they

1374
01:23:35,810 --> 01:23:40,850
they basically did that right which I

1375
01:23:39,079 --> 01:23:43,340
think we could do the same thing

1376
01:23:40,850 --> 01:23:45,170
probably although it might be we have to

1377
01:23:43,340 --> 01:23:46,909
yeah we would have to maybe do it the

1378
01:23:45,170 --> 01:23:49,190
opposite way around I'm not sure which

1379
01:23:46,909 --> 01:23:51,769
one we have our preference on yeah so if

1380
01:23:49,189 --> 01:23:53,239
you were to do the Y always you could do

1381
01:23:51,770 --> 01:23:56,000
that if you wanted to based on the way

1382
01:23:53,239 --> 01:23:57,859
we have it structured I don't really

1383
01:23:56,000 --> 01:24:00,050
know that you would care on these old

1384
01:23:57,859 --> 01:24:02,569
computers you would rather just do it

1385
01:24:00,050 --> 01:24:04,400
this way I would think but I don't know

1386
01:24:02,569 --> 01:24:06,619
because I think you get it better yeah I

1387
01:24:04,399 --> 01:24:08,149
think you get a better circle maybe this

1388
01:24:06,619 --> 01:24:11,390
way but maybe you don't I mean maybe you

1389
01:24:08,149 --> 01:24:11,750
like that one better so that's hard to

1390
01:24:11,390 --> 01:24:14,420
say

1391
01:24:11,750 --> 01:24:22,850
but we we don't really save anything by

1392
01:24:14,420 --> 01:24:26,899
doing that I don't think and I feel like

1393
01:24:22,850 --> 01:24:30,250
you need to do the update like you need

1394
01:24:26,899 --> 01:24:32,989
to work the update back in so that that

1395
01:24:30,250 --> 01:24:35,770
you count for the fact that you're doing

1396
01:24:32,989 --> 01:24:37,939
that every time if that makes sense

1397
01:24:35,770 --> 01:24:39,740
although it produces kind of an

1398
01:24:37,939 --> 01:24:42,199
I circle if you don't which is kind of

1399
01:24:39,739 --> 01:24:53,059
interesting we should make our circle a

1400
01:24:42,199 --> 01:24:54,679
little bit bigger just to make sure it

1401
01:24:53,060 --> 01:25:06,910
still looks nice to the circle but it

1402
01:24:54,680 --> 01:25:09,960
does seem to all right

1403
01:25:06,909 --> 01:25:09,960
[Music]

1404
01:25:17,699 --> 01:25:22,899
i'ma leave that as an exercise for the

1405
01:25:19,840 --> 01:25:28,000
reader to get better it will get checked

1406
01:25:22,899 --> 01:25:29,170
in but I feel like this part here it

1407
01:25:28,000 --> 01:25:30,399
would really be interesting because if

1408
01:25:29,170 --> 01:25:34,029
you look at how many registers it

1409
01:25:30,399 --> 01:25:39,250
requires you know to do this it's three

1410
01:25:34,029 --> 01:25:42,399
for these probably five once you can

1411
01:25:39,250 --> 01:25:43,659
once you do this and maybe you you could

1412
01:25:42,399 --> 01:25:47,889
probably do it slightly differently

1413
01:25:43,659 --> 01:25:49,840
maybe but I don't know but then I feel

1414
01:25:47,890 --> 01:26:00,400
like and then six for this I'm not sure

1415
01:25:49,840 --> 01:26:04,119
what else you could really do you know I

1416
01:26:00,399 --> 01:26:07,809
don't I don't see a lot of other stuff

1417
01:26:04,119 --> 01:26:10,420
there cuz this is really this is really

1418
01:26:07,810 --> 01:26:12,610
what's gonna kill you this part here is

1419
01:26:10,420 --> 01:26:15,159
now pretty free compared to this this is

1420
01:26:12,609 --> 01:26:16,449
just brutal right because look at all

1421
01:26:15,159 --> 01:26:19,539
these integer multiplies that have to

1422
01:26:16,449 --> 01:26:21,039
happen you really don't want those

1423
01:26:19,539 --> 01:26:23,319
integer well supplies in there

1424
01:26:21,039 --> 01:26:28,090
on these old machines right that's

1425
01:26:23,319 --> 01:26:30,420
really really bad so I really think this

1426
01:26:28,090 --> 01:26:35,909
is the most important thing to address

1427
01:26:30,420 --> 01:26:35,909
and I'm not sure how to best address it

1428
01:26:46,229 --> 01:26:48,289
you

1429
01:27:11,979 --> 01:27:18,789
they're just a register cow here it is

1430
01:27:15,448 --> 01:27:21,879
so the 386 added definitely added the

1431
01:27:18,789 --> 01:27:29,460
had the 32-bit stuff which we surmise I

1432
01:27:21,880 --> 01:27:32,079
don't know if the 286 did or not but it

1433
01:27:29,460 --> 01:27:34,119
it does look like we would be super

1434
01:27:32,079 --> 01:27:35,920
register starved so we probably would

1435
01:27:34,119 --> 01:27:46,109
need to do better than what we're doing

1436
01:27:35,920 --> 01:27:46,109
right it just let's take a look the 286

1437
01:28:18,908 --> 01:28:22,589
surely there is some

1438
01:28:28,869 --> 01:28:39,559
surely somebody lists the registers come

1439
01:28:35,029 --> 01:28:48,439
on Ricky chip you can do it maybe we

1440
01:28:39,560 --> 01:28:57,100
could chip can't do it there it is Wow

1441
01:28:48,439 --> 01:28:57,099
so okay there's like no data

1442
01:29:12,979 --> 01:29:19,360
so it looks like it's the same as the

1443
01:29:15,529 --> 01:29:19,359
8086 maybe

1444
01:29:31,550 --> 01:29:44,029
well so interestingly enough maybe we

1445
01:29:34,310 --> 01:29:46,340
can have four of these so maybe what we

1446
01:29:44,029 --> 01:29:53,119
could have done is use four registers

1447
01:29:46,340 --> 01:29:55,400
total by being clever and then maybe if

1448
01:29:53,119 --> 01:29:57,260
we really do have four address registers

1449
01:29:55,399 --> 01:29:59,000
we can use those for doing the four

1450
01:29:57,260 --> 01:30:03,079
drawings and then it would work

1451
01:29:59,000 --> 01:30:04,430
maybe I don't really know so I don't

1452
01:30:03,079 --> 01:30:08,569
know this would be an interesting

1453
01:30:04,430 --> 01:30:13,210
exercise to basically go rework this

1454
01:30:08,569 --> 01:30:16,059
routine on an actual 286 emulator right

1455
01:30:13,210 --> 01:30:18,560
with like actual 286 assembly code

1456
01:30:16,060 --> 01:30:20,539
although I guess you don't really you

1457
01:30:18,560 --> 01:30:27,760
know I mean there's like like DOSBox

1458
01:30:20,539 --> 01:30:33,079
right like you could take this right and

1459
01:30:27,760 --> 01:30:35,000
you could compile actual Azzam that that

1460
01:30:33,079 --> 01:30:38,090
actually draws like you kids you could

1461
01:30:35,000 --> 01:30:39,979
do mode 13 or something or any graphics

1462
01:30:38,090 --> 01:30:43,190
mode really or just do what I did where

1463
01:30:39,979 --> 01:30:47,059
you'd use the console and see to get

1464
01:30:43,189 --> 01:30:49,809
like a to see what you could fit in here

1465
01:30:47,060 --> 01:30:51,560
using only the registers available right

1466
01:30:49,810 --> 01:30:55,340
because that would be interesting

1467
01:30:51,560 --> 01:30:58,730
exercise I feel like to make work and

1468
01:30:55,340 --> 01:31:01,190
just see like whether or not there's

1469
01:30:58,729 --> 01:31:03,829
good ways of doing this stuff because

1470
01:31:01,189 --> 01:31:06,549
this looks brutal and like this is

1471
01:31:03,829 --> 01:31:06,550
definitely like

1472
01:31:13,238 --> 01:31:30,159
I think that's really the place all

1473
01:31:27,159 --> 01:31:32,139
right so this this episode of hand may

1474
01:31:30,159 --> 01:31:33,550
here is probably never going to actually

1475
01:31:32,140 --> 01:31:34,960
be an episode of hand made here oh sorry

1476
01:31:33,550 --> 01:31:39,610
folks we've just gotten too far off

1477
01:31:34,960 --> 01:31:41,460
topic this will have to be a hand made

1478
01:31:39,609 --> 01:31:43,869
chat instead sorry

1479
01:31:41,460 --> 01:31:44,890
hi Casey sorry it's pretty long and has

1480
01:31:43,869 --> 01:31:46,510
nothing to do with circles I'm a

1481
01:31:44,890 --> 01:31:47,950
mathematician trying to be a graphics

1482
01:31:46,510 --> 01:31:49,329
engine programmer I made some pet

1483
01:31:47,949 --> 01:31:50,619
projects using up until in folk in which

1484
01:31:49,329 --> 01:31:52,930
I was able to make the things I wanted

1485
01:31:50,619 --> 01:31:54,460
but since my lack of experience I had a

1486
01:31:52,930 --> 01:31:55,690
hard time figuring out what professional

1487
01:31:54,460 --> 01:31:56,829
programming is I started watching you

1488
01:31:55,689 --> 01:31:59,049
here in December from day one I almost

1489
01:31:56,829 --> 01:32:01,930
caught up going to day 5:20 thanks to

1490
01:31:59,050 --> 01:32:04,600
miniseries it has been in yeah and then

1491
01:32:01,930 --> 01:32:05,680
it got cut off well I'm very glad to

1492
01:32:04,600 --> 01:32:07,420
hear that I don't know if that was a

1493
01:32:05,680 --> 01:32:08,530
question any if there's something I can

1494
01:32:07,420 --> 01:32:10,270
answer for you please let me know

1495
01:32:08,529 --> 01:32:13,439
otherwise thanks for the kind words as

1496
01:32:10,270 --> 01:32:17,290
always it's always great to hear people

1497
01:32:13,439 --> 01:32:20,759
who can use a series to get them where

1498
01:32:17,289 --> 01:32:20,760
they want to be you know

1499
01:32:28,739 --> 01:32:34,769
I don't like so this twitch is it twitch

1500
01:32:31,710 --> 01:32:36,149
or hex chat who is clipping off like

1501
01:32:34,770 --> 01:32:39,360
something's that happen someone types in

1502
01:32:36,149 --> 01:32:43,559
a long question and it gets like

1503
01:32:39,359 --> 01:32:46,199
truncated who is doing that is that

1504
01:32:43,560 --> 01:32:48,390
twitch to twitch only have like a like a

1505
01:32:46,199 --> 01:32:50,909
Twitter like limit on the number of

1506
01:32:48,390 --> 01:32:53,130
characters get entered cuz like I only

1507
01:32:50,909 --> 01:32:55,559
end up seeing like if I look at hex chat

1508
01:32:53,130 --> 01:32:57,150
here I only see part of it you know what

1509
01:32:55,560 --> 01:33:03,600
let me look over in the twitch chat

1510
01:32:57,149 --> 01:33:09,089
window and see does that happen in there

1511
01:33:03,600 --> 01:33:12,380
as well yeah so it happens in so

1512
01:33:09,090 --> 01:33:15,690
twitch chat twitch chat just basically

1513
01:33:12,380 --> 01:33:17,340
just just poops out that is at a fairly

1514
01:33:15,689 --> 01:33:18,479
low counter character limit probably

1515
01:33:17,340 --> 01:33:22,800
because they were trying to avoid like

1516
01:33:18,479 --> 01:33:24,449
spam and stuff but I mean we should

1517
01:33:22,800 --> 01:33:25,560
probably put up like a little PSA and

1518
01:33:24,449 --> 01:33:27,210
it's like hey folks when you ask

1519
01:33:25,560 --> 01:33:30,450
questions if they're long like break

1520
01:33:27,210 --> 01:33:32,220
them into multiple chunks you know

1521
01:33:30,449 --> 01:33:35,429
because yeah I looked in twitch ad and

1522
01:33:32,220 --> 01:33:37,640
it was truncated there too at least on

1523
01:33:35,430 --> 01:33:37,640
mine

1524
01:33:43,609 --> 01:33:47,210
okay so there's the question jimmy

1525
01:33:45,920 --> 01:33:48,440
advice about sorry korean graphics

1526
01:33:47,210 --> 01:33:49,640
engine program for someone who has very

1527
01:33:48,439 --> 01:33:51,319
strong background mathematics physics

1528
01:33:49,640 --> 01:33:56,750
can do research perhaps can co-create

1529
01:33:51,319 --> 01:33:59,960
ideas wants to learn etc um I don't have

1530
01:33:56,750 --> 01:34:01,670
a lot of advice about that because I

1531
01:33:59,960 --> 01:34:04,310
don't really know what the best way to

1532
01:34:01,670 --> 01:34:11,440
get into this stuff is but you know the

1533
01:34:04,310 --> 01:34:14,090
only really thing that I've that I've

1534
01:34:11,439 --> 01:34:15,979
sort of said that that I can contribute

1535
01:34:14,090 --> 01:34:18,170
to suggestions there because again I'm

1536
01:34:15,979 --> 01:34:20,209
not really involved the only time I'm

1537
01:34:18,170 --> 01:34:22,250
ever involved in hiring people really

1538
01:34:20,210 --> 01:34:24,199
these days is if I if someone does

1539
01:34:22,250 --> 01:34:26,960
something really you know obviously

1540
01:34:24,199 --> 01:34:30,409
pretty impressive I try to send them

1541
01:34:26,960 --> 01:34:36,890
somewhere that you know can make use of

1542
01:34:30,409 --> 01:34:39,079
them right so I guess what I would say

1543
01:34:36,890 --> 01:34:41,360
is the only thing that I would do that

1544
01:34:39,079 --> 01:34:43,130
maybe if you're not already doing it cuz

1545
01:34:41,359 --> 01:34:44,839
you know I can't really give you advice

1546
01:34:43,130 --> 01:34:46,130
about like how to make a resume or where

1547
01:34:44,840 --> 01:34:47,390
to send it or stuff like that because I

1548
01:34:46,130 --> 01:34:49,699
don't really know how those processes

1549
01:34:47,390 --> 01:34:53,740
work I would recommend going and

1550
01:34:49,699 --> 01:35:05,960
listening to on on the on handmade

1551
01:34:53,739 --> 01:35:11,449
heroes channel there should be so on

1552
01:35:05,960 --> 01:35:16,039
here there should be a playlist for

1553
01:35:11,449 --> 01:35:19,909
handmade con 2016 yeah here - no no I

1554
01:35:16,039 --> 01:35:22,789
didn't want an ad thank you uh let's see

1555
01:35:19,909 --> 01:35:27,380
here just wanted to show someone where

1556
01:35:22,789 --> 01:35:30,670
the stuff is so this handmade controi

1557
01:35:27,380 --> 01:35:33,890
system technical direction at Blizzard

1558
01:35:30,670 --> 01:35:36,850
that's probably the best place to look

1559
01:35:33,890 --> 01:35:39,650
for just an overview of like how you

1560
01:35:36,850 --> 01:35:42,310
generically get hired at like one of

1561
01:35:39,649 --> 01:35:45,799
these larger companies to like start

1562
01:35:42,310 --> 01:35:47,470
building a resume in the game industry I

1563
01:35:45,800 --> 01:35:50,119
would look at that

1564
01:35:47,470 --> 01:35:53,920
so maybe Google for 20s handmade con

1565
01:35:50,119 --> 01:35:53,920
2016 technical direction at Blizzard

1566
01:35:54,399 --> 01:35:58,029
I would I would listen to that and just

1567
01:35:56,050 --> 01:36:00,550
just to it's only like an hour or

1568
01:35:58,029 --> 01:36:01,869
something or two hours so you just

1569
01:36:00,550 --> 01:36:04,119
listen to what he has to say

1570
01:36:01,869 --> 01:36:06,819
he's a technical director for world of

1571
01:36:04,119 --> 01:36:08,590
warcraft so they hire people and they

1572
01:36:06,819 --> 01:36:11,170
hire junior people occasionally right

1573
01:36:08,590 --> 01:36:13,779
and he talks about how those how that

1574
01:36:11,170 --> 01:36:19,300
pipeline goes so you probably listen to

1575
01:36:13,779 --> 01:36:20,679
that just to get that straight but the

1576
01:36:19,300 --> 01:36:23,079
other thing that I would suggest is if

1577
01:36:20,680 --> 01:36:24,460
you have time so if you are a swing time

1578
01:36:23,079 --> 01:36:26,109
look you watch the handmade hero series

1579
01:36:24,460 --> 01:36:30,760
you've got some time right there's a lot

1580
01:36:26,109 --> 01:36:33,460
of videos in there try to think of how

1581
01:36:30,760 --> 01:36:36,250
to make something that people can see

1582
01:36:33,460 --> 01:36:39,460
that you know what you're doing right so

1583
01:36:36,250 --> 01:36:41,739
you know obvious like kind of above and

1584
01:36:39,460 --> 01:36:45,579
beyond examples are like people who I've

1585
01:36:41,739 --> 01:36:47,439
sent places already like Allen Webster

1586
01:36:45,579 --> 01:36:48,850
did for coder right he just made an

1587
01:36:47,439 --> 01:36:51,369
editor and sent it to me he's like here

1588
01:36:48,850 --> 01:36:55,329
here's an editor it it replaces Emacs

1589
01:36:51,369 --> 01:36:57,220
for you anyone who can do that is just

1590
01:36:55,329 --> 01:37:00,010
useful right you know that if someone

1591
01:36:57,220 --> 01:37:02,530
can just make a whole text editor from

1592
01:37:00,010 --> 01:37:05,140
scratch and see right not like down we

1593
01:37:02,529 --> 01:37:07,059
downloaded some rich text control and

1594
01:37:05,140 --> 01:37:08,590
just wired it up to a menu right but

1595
01:37:07,060 --> 01:37:10,780
like I actually wrote the whole thing

1596
01:37:08,590 --> 01:37:14,619
they're obviously useful like like you

1597
01:37:10,779 --> 01:37:16,599
can put them on any team and any good

1598
01:37:14,619 --> 01:37:19,119
manager will be able to make them useful

1599
01:37:16,600 --> 01:37:22,000
right because they obviously have what

1600
01:37:19,119 --> 01:37:25,479
it takes you know to do something useful

1601
01:37:22,000 --> 01:37:28,930
on a team the same was true for nicks

1602
01:37:25,479 --> 01:37:30,429
Lifta right he wrote a full debugger I

1603
01:37:28,930 --> 01:37:32,079
sent him to rad because they were

1604
01:37:30,430 --> 01:37:34,600
working on a debugger project I'm like

1605
01:37:32,079 --> 01:37:37,000
here's a dude who already made a whole

1606
01:37:34,600 --> 01:37:39,220
debugger right the same would be true

1607
01:37:37,000 --> 01:37:41,439
for for George but George already has a

1608
01:37:39,220 --> 01:37:44,890
job he's the guy who made the debugger

1609
01:37:41,439 --> 01:37:52,389
we we use right now same will be true

1610
01:37:44,890 --> 01:37:54,010
for the for this this program here

1611
01:37:52,390 --> 01:37:57,640
Milton we haven't talked about in a

1612
01:37:54,010 --> 01:38:00,960
while but it was actually done by oh I

1613
01:37:57,640 --> 01:38:00,960
didn't actually know there was a

1614
01:38:03,699 --> 01:38:11,479
no there really isn't nevermind anyway I

1615
01:38:07,600 --> 01:38:13,850
sergio made milton and i don't know if

1616
01:38:11,479 --> 01:38:14,539
he's got i don't know if he has a pager

1617
01:38:13,850 --> 01:38:18,820
here anyway

1618
01:38:14,539 --> 01:38:23,539
you might not I guess he doesn't anyway

1619
01:38:18,819 --> 01:38:26,269
he made Milton and it's like an entire

1620
01:38:23,539 --> 01:38:28,880
drawing package that you know replaces a

1621
01:38:26,270 --> 01:38:31,100
commercial one that we were using before

1622
01:38:28,880 --> 01:38:33,170
and it's just as good right so it's like

1623
01:38:31,100 --> 01:38:34,310
hey this person is capable of making an

1624
01:38:33,170 --> 01:38:38,260
entire commercial drawing package read

1625
01:38:34,310 --> 01:38:41,539
themselves when you get that much

1626
01:38:38,260 --> 01:38:42,560
obvious stuff out like when someone

1627
01:38:41,539 --> 01:38:45,019
could just point was like oh this person

1628
01:38:42,560 --> 01:38:47,770
obviously knows they're doing it makes

1629
01:38:45,020 --> 01:38:49,970
it easy for someone like me or you know

1630
01:38:47,770 --> 01:38:52,250
any of the streamers like John blow

1631
01:38:49,970 --> 01:38:54,800
whatever if you have something that's

1632
01:38:52,250 --> 01:38:58,579
obviously you know what you're doing

1633
01:38:54,800 --> 01:39:01,880
then they can send you somewhere or hire

1634
01:38:58,579 --> 01:39:03,619
you themselves right but people who are

1635
01:39:01,880 --> 01:39:05,390
just like I'm pretty good but I have

1636
01:39:03,619 --> 01:39:07,579
nothing to point to that shows that I am

1637
01:39:05,390 --> 01:39:09,410
it's a lot harder right because then

1638
01:39:07,579 --> 01:39:11,180
you're talking about well you know no

1639
01:39:09,409 --> 01:39:13,488
one's gonna go out of their way to tell

1640
01:39:11,180 --> 01:39:15,320
some other tech director or somebody to

1641
01:39:13,488 --> 01:39:16,789
take a look at you because they have no

1642
01:39:15,319 --> 01:39:19,159
idea if you're good or not right there's

1643
01:39:16,789 --> 01:39:21,260
no obvious thing to look at and

1644
01:39:19,159 --> 01:39:22,639
furthermore like as a resume thing

1645
01:39:21,260 --> 01:39:25,030
there's nothing that obviously

1646
01:39:22,640 --> 01:39:28,010
distinguishes you from anybody else etc

1647
01:39:25,029 --> 01:39:30,050
so why what we said like yeah the best

1648
01:39:28,010 --> 01:39:31,220
thing to do if you've got some time make

1649
01:39:30,050 --> 01:39:31,610
something that shows me what you're

1650
01:39:31,220 --> 01:39:34,250
doing

1651
01:39:31,609 --> 01:39:37,729
make your raytracer make asteroids make

1652
01:39:34,250 --> 01:39:40,369
a tool that people want to use anything

1653
01:39:37,729 --> 01:39:44,479
that you can think of to distinguish

1654
01:39:40,369 --> 01:39:46,609
yourself if you can do it do that that's

1655
01:39:44,479 --> 01:39:48,199
the easiest way to show that you know

1656
01:39:46,609 --> 01:39:52,429
what you're doing is to actually

1657
01:39:48,199 --> 01:39:53,779
accomplish something right and so that's

1658
01:39:52,430 --> 01:39:55,460
the only really advice I think I could

1659
01:39:53,779 --> 01:39:56,149
give is if you do have the time to do

1660
01:39:55,460 --> 01:40:02,989
something like that

1661
01:39:56,149 --> 01:40:04,429
do it the other thing I would say it's

1662
01:40:02,988 --> 01:40:07,250
I've said a couple times its technical

1663
01:40:04,430 --> 01:40:09,170
blog blog about what you're doing right

1664
01:40:07,250 --> 01:40:10,789
and show that you are thinking through

1665
01:40:09,170 --> 01:40:13,369
these technical problems and that you

1666
01:40:10,789 --> 01:40:15,439
are able to like work your way through

1667
01:40:13,369 --> 01:40:17,069
them right it doesn't have to be the

1668
01:40:15,439 --> 01:40:18,689
kind of technical blog that's like

1669
01:40:17,069 --> 01:40:19,920
let me tell the world about some new

1670
01:40:18,689 --> 01:40:22,259
stuff they don't know about right

1671
01:40:19,920 --> 01:40:24,779
because you're not necessarily trying to

1672
01:40:22,260 --> 01:40:26,489
say hi I'm the best program in the world

1673
01:40:24,779 --> 01:40:28,109
or something right what you're trying to

1674
01:40:26,489 --> 01:40:29,399
say is I'm a good junior programmer

1675
01:40:28,109 --> 01:40:30,960
because that's all you need that's the

1676
01:40:29,399 --> 01:40:33,689
only threshold you need to cross to get

1677
01:40:30,960 --> 01:40:34,739
hired right because people hired you in

1678
01:40:33,689 --> 01:40:37,319
your programmers there's plenty places

1679
01:40:34,739 --> 01:40:39,210
that too so all you need to do is have a

1680
01:40:37,319 --> 01:40:41,069
blog that shows look I am capable of

1681
01:40:39,210 --> 01:40:42,680
working through these problems and I can

1682
01:40:41,069 --> 01:40:48,739
show that I understand them right and

1683
01:40:42,680 --> 01:40:48,740
that is also another way to you know to

1684
01:40:51,260 --> 01:40:56,430
have a concrete thing to point to that

1685
01:40:54,090 --> 01:40:59,789
can differentiate you from the average

1686
01:40:56,430 --> 01:41:01,380
candidate right so so that's you know

1687
01:40:59,789 --> 01:41:03,149
that's about all I can give you for

1688
01:41:01,380 --> 01:41:06,270
advice it's like try to do stuff that

1689
01:41:03,149 --> 01:41:08,009
shows you know what you're doing so you

1690
01:41:06,270 --> 01:41:10,050
don't just have to tell someone you're

1691
01:41:08,010 --> 01:41:12,840
good they can see that you're good right

1692
01:41:10,050 --> 01:41:15,989
and you don't have to be better than a

1693
01:41:12,840 --> 01:41:18,420
pro because the pros already have jobs

1694
01:41:15,989 --> 01:41:20,130
you just have to show that you take more

1695
01:41:18,420 --> 01:41:23,359
initiative and are more curious and

1696
01:41:20,130 --> 01:41:30,119
harder working right then the average

1697
01:41:23,359 --> 01:41:31,799
candidate beginner right so that's

1698
01:41:30,119 --> 01:41:33,510
that's I guess the best advice I could

1699
01:41:31,800 --> 01:41:37,320
give and whatever you can figure out to

1700
01:41:33,510 --> 01:41:39,000
do that that is the best thing to do and

1701
01:41:37,319 --> 01:41:40,380
then you know you can just show up on

1702
01:41:39,000 --> 01:41:41,609
one of these streams show up on drop

1703
01:41:40,380 --> 01:41:44,010
stream my stream or whatever just say

1704
01:41:41,609 --> 01:41:46,229
hey I made this thing like what do you

1705
01:41:44,010 --> 01:41:47,699
think if it's cool and we'll we'll look

1706
01:41:46,229 --> 01:41:49,319
at it right and if it is there will be

1707
01:41:47,699 --> 01:41:50,609
like a pool and you know we'll say oh

1708
01:41:49,319 --> 01:41:52,769
let me try to send you somewhere or

1709
01:41:50,609 --> 01:41:54,119
whatever right but otherwise it's just

1710
01:41:52,770 --> 01:41:55,650
showing up and singing I'm like I don't

1711
01:41:54,119 --> 01:41:57,869
know right like I don't know maybe

1712
01:41:55,649 --> 01:42:01,619
you're actually really not good and so

1713
01:41:57,869 --> 01:42:03,989
I'm not gonna I'm go wreck amend any to

1714
01:42:01,619 --> 01:42:05,849
someone to somebody if I don't have

1715
01:42:03,989 --> 01:42:08,460
something to point to this that makes me

1716
01:42:05,850 --> 01:42:10,440
think right but socho make it easy make

1717
01:42:08,460 --> 01:42:14,730
it easy for the person to go oh this

1718
01:42:10,439 --> 01:42:16,739
person is not the average person who

1719
01:42:14,729 --> 01:42:19,679
wants to work on games or something you

1720
01:42:16,739 --> 01:42:22,590
know make it the easier you make it the

1721
01:42:19,680 --> 01:42:25,020
more likely someone will just like

1722
01:42:22,590 --> 01:42:26,220
everything else when it comes to selling

1723
01:42:25,020 --> 01:42:29,780
something in this case you're selling

1724
01:42:26,220 --> 01:42:29,780
your job services right

1725
01:42:30,130 --> 01:42:33,369
like anything else whenever you're

1726
01:42:31,689 --> 01:42:35,289
trying to sell something the goal is to

1727
01:42:33,369 --> 01:42:37,720
just make it as easy easy as possible

1728
01:42:35,289 --> 01:42:39,699
for the buyer to say yes and so give

1729
01:42:37,720 --> 01:42:41,260
them every reason to think that you're

1730
01:42:39,699 --> 01:42:45,309
better than the other people who are

1731
01:42:41,260 --> 01:42:47,640
saying the same thing that's the best I

1732
01:42:45,310 --> 01:42:47,640
can offer

1733
01:43:00,529 --> 01:43:06,328
for what it's worth PCM has cycle exact

1734
01:43:04,979 --> 01:43:06,958
CPU cores if you want to be more

1735
01:43:06,328 --> 01:43:08,340
accurate

1736
01:43:06,958 --> 01:43:18,420
oh that sounds kind of cool I don't

1737
01:43:08,340 --> 01:43:24,119
think I've ever heard of that what's

1738
01:43:18,420 --> 01:43:26,899
this oh look at that well that's just

1739
01:43:24,118 --> 01:43:26,899
fun right there

1740
01:43:46,118 --> 01:43:49,838
on one of the first hand media streams

1741
01:43:48,309 --> 01:43:52,838
you said it was faster to work bitwise

1742
01:43:49,838 --> 01:44:00,488
on a you at 32 than on a you an eight

1743
01:43:52,838 --> 01:44:02,469
why did I really say that I'm not sure

1744
01:44:00,488 --> 01:44:04,958
what I would have meant by that I can

1745
01:44:02,469 --> 01:44:10,779
sort of say some things that could be

1746
01:44:04,958 --> 01:44:12,849
meant by that so probably the I mean

1747
01:44:10,779 --> 01:44:17,078
hopefully if I wasn't just completely

1748
01:44:12,849 --> 01:44:19,479
drunk that day or something probably

1749
01:44:17,078 --> 01:44:23,318
what I was trying to communicate was

1750
01:44:19,479 --> 01:44:24,519
that in in much the same way like in the

1751
01:44:23,319 --> 01:44:27,639
past I've said doubles are half the

1752
01:44:24,519 --> 01:44:29,498
speed of floats right but what I'm

1753
01:44:27,639 --> 01:44:32,038
trying to say there is the effective

1754
01:44:29,498 --> 01:44:38,078
speed of doing what you're trying to do

1755
01:44:32,038 --> 01:44:39,818
so on a modern x86 processor it's

1756
01:44:38,078 --> 01:44:41,978
actually the same speed to do bit

1757
01:44:39,819 --> 01:44:46,899
operations on a u8 as it is to do them

1758
01:44:41,979 --> 01:44:50,139
on a u-32 but doing them on a u-32 does

1759
01:44:46,899 --> 01:44:52,300
four bytes at a time so any bit

1760
01:44:50,139 --> 01:44:55,628
operation I'm trying to do if I can do

1761
01:44:52,300 --> 01:44:59,019
it on a full u-32 it's four times faster

1762
01:44:55,628 --> 01:45:00,519
than doing it on a u8 right because I'm

1763
01:44:59,019 --> 01:45:04,179
doing four bytes at a time instead of

1764
01:45:00,519 --> 01:45:05,800
one so I don't really know what the

1765
01:45:04,179 --> 01:45:06,908
context was that I was talking about

1766
01:45:05,800 --> 01:45:09,458
there so that may have nothing to do

1767
01:45:06,908 --> 01:45:12,429
with it but generally speaking anytime

1768
01:45:09,458 --> 01:45:14,618
you can like modern processors tend not

1769
01:45:12,429 --> 01:45:17,139
to differentiate much in terms of speed

1770
01:45:14,618 --> 01:45:20,139
based on width so doing something a

1771
01:45:17,139 --> 01:45:22,449
twined 8 bits wide versus 16 bits wide

1772
01:45:20,139 --> 01:45:25,359
versus 32 bits wide versus 64 bits wide

1773
01:45:22,448 --> 01:45:27,368
versus 120 bits wide versus 256 bits

1774
01:45:25,359 --> 01:45:29,499
wide well not quite that at this point

1775
01:45:27,368 --> 01:45:34,029
but let's say under 28 bits wide through

1776
01:45:29,498 --> 01:45:37,300
all the same speed right and so if you

1777
01:45:34,029 --> 01:45:40,898
can do your operation on a full 128 bits

1778
01:45:37,300 --> 01:45:44,288
at a time then that operation is just

1779
01:45:40,899 --> 01:45:47,919
like fundamentally going to be 16 times

1780
01:45:44,288 --> 01:45:51,158
faster than doing it on a u8 because you

1781
01:45:47,918 --> 01:45:52,059
did 16 bytes all at once now I don't

1782
01:45:51,158 --> 01:45:54,098
know if that's why I was talking about

1783
01:45:52,059 --> 01:45:57,219
or not but that's really the way to

1784
01:45:54,099 --> 01:45:59,588
think about it is if you have to do

1785
01:45:57,219 --> 01:45:59,829
things a byte at a time it's gonna be

1786
01:45:59,588 --> 01:46:01,899
twice

1787
01:45:59,829 --> 01:46:03,670
slow as if you did them short at a time

1788
01:46:01,899 --> 01:46:06,639
which is gonna be twice as slow as if

1789
01:46:03,670 --> 01:46:07,930
you did them you 32 at a time which is

1790
01:46:06,640 --> 01:46:10,660
gonna be twice as slow as if you did

1791
01:46:07,930 --> 01:46:11,770
them a 64-bit register at a time where's

1792
01:46:10,659 --> 01:46:13,029
gonna be twice as slow as if you have a

1793
01:46:11,770 --> 01:46:16,810
hundred twenty eight bit register at a

1794
01:46:13,029 --> 01:46:18,189
time right that's all really I'm trying

1795
01:46:16,810 --> 01:46:20,590
to say and the same goes for

1796
01:46:18,189 --> 01:46:22,299
floating-point operations it doesn't

1797
01:46:20,590 --> 01:46:23,319
take probably much longer I don't know

1798
01:46:22,300 --> 01:46:24,730
it depends we have to look at the cycle

1799
01:46:23,319 --> 01:46:26,079
counts but for a lot of things like

1800
01:46:24,729 --> 01:46:27,129
adding two floating-point numbers

1801
01:46:26,079 --> 01:46:28,510
together it probably takes the same

1802
01:46:27,130 --> 01:46:31,180
amount of time to add doubles as it does

1803
01:46:28,510 --> 01:46:35,170
to add floats we can look but usually

1804
01:46:31,180 --> 01:46:37,570
it's like roughly the same but you can

1805
01:46:35,170 --> 01:46:38,560
only fit two doubles into a twenty

1806
01:46:37,569 --> 01:46:41,079
hundred trade bit registers where you

1807
01:46:38,560 --> 01:46:42,580
can set four floats so even though the

1808
01:46:41,079 --> 01:46:44,829
add takes the same amount of time you

1809
01:46:42,579 --> 01:46:47,199
did twice as many ads in the same amount

1810
01:46:44,829 --> 01:46:52,149
of time right so it's still twice as

1811
01:46:47,199 --> 01:46:56,170
fast now in the future that will go even

1812
01:46:52,149 --> 01:47:00,909
higher it'll go up to 256 or 512 but at

1813
01:46:56,170 --> 01:47:04,420
the moments like on any chips that I

1814
01:47:00,909 --> 01:47:06,579
have anyway doing operations on 512 bit

1815
01:47:04,420 --> 01:47:08,980
wide registers are actually not as fast

1816
01:47:06,579 --> 01:47:11,559
as doing them on 128 bit wide registers

1817
01:47:08,979 --> 01:47:13,869
and the reason for that is actually

1818
01:47:11,560 --> 01:47:16,930
really complicated it's not because

1819
01:47:13,869 --> 01:47:19,090
they're double pumped it used to be that

1820
01:47:16,930 --> 01:47:21,970
used to be true and still is true on

1821
01:47:19,090 --> 01:47:24,659
some chips like like for example AMD

1822
01:47:21,970 --> 01:47:27,659
chips will like double pump eight wide

1823
01:47:24,659 --> 01:47:31,779
avx2

1824
01:47:27,659 --> 01:47:33,579
and stuff like that so it can be true

1825
01:47:31,779 --> 01:47:35,019
that can't be the reason but even when

1826
01:47:33,579 --> 01:47:38,769
they're not double pump so let's say you

1827
01:47:35,020 --> 01:47:41,410
have a full 512 bit wide chip or a full

1828
01:47:38,770 --> 01:47:43,780
Tunis it's about 56 per chip it may

1829
01:47:41,409 --> 01:47:47,289
still not be as fast as doing it 128 bit

1830
01:47:43,779 --> 01:47:50,889
wide and the reason is because the power

1831
01:47:47,289 --> 01:47:54,760
consumption becomes problematic so not

1832
01:47:50,890 --> 01:47:57,490
all chips can run as fast through the

1833
01:47:54,760 --> 01:48:01,869
256 and 512 paths as they can through

1834
01:47:57,489 --> 01:48:05,949
the hunter 8-bit path that's just

1835
01:48:01,869 --> 01:48:08,409
reality right so you have to be careful

1836
01:48:05,949 --> 01:48:11,019
making assumptions about the 256-bit

1837
01:48:08,409 --> 01:48:13,380
wide and the 512 bit wide cases it's not

1838
01:48:11,020 --> 01:48:18,670
as straightforward

1839
01:48:13,380 --> 01:48:20,980
128 bit wide cases right the 128 bit

1840
01:48:18,670 --> 01:48:22,510
wide case pretty much just runs at speed

1841
01:48:20,979 --> 01:48:26,259
with the right power curve and

1842
01:48:22,510 --> 01:48:28,239
everything's fine 26 and 512 may or may

1843
01:48:26,260 --> 01:48:33,340
not and you have to actually like look

1844
01:48:28,239 --> 01:48:40,869
at it to see and also there's weird

1845
01:48:33,340 --> 01:48:45,720
stuff so even on modern like core I

1846
01:48:40,869 --> 01:48:48,489
nines the latest core I nines I think

1847
01:48:45,720 --> 01:48:49,900
but but takes for the grand saw cuz you

1848
01:48:48,489 --> 01:48:52,210
know my chip knowledge isn't wishy-washy

1849
01:48:49,899 --> 01:48:58,000
but I think even on the latest core I

1850
01:48:52,210 --> 01:49:01,810
nines the chip powers down the 256 and

1851
01:48:58,000 --> 01:49:04,060
512 bit lanes when they're not in use so

1852
01:49:01,810 --> 01:49:06,070
there's even this extra weird penalty

1853
01:49:04,060 --> 01:49:07,630
for using them which is that you can't

1854
01:49:06,069 --> 01:49:09,659
use them sporadically if you're gonna

1855
01:49:07,630 --> 01:49:12,250
use them you have to use them constantly

1856
01:49:09,659 --> 01:49:14,199
so that it doesn't power down that part

1857
01:49:12,250 --> 01:49:17,319
of the chip because if you hit them the

1858
01:49:14,199 --> 01:49:20,170
first time there's like a massive like

1859
01:49:17,319 --> 01:49:22,299
you know it's like tens of thousands of

1860
01:49:20,170 --> 01:49:25,810
cycle penalty or something like this to

1861
01:49:22,300 --> 01:49:27,340
spin them up right so you can't just

1862
01:49:25,810 --> 01:49:28,810
like use them and then not use them and

1863
01:49:27,340 --> 01:49:30,250
use them and not you've got to like spin

1864
01:49:28,810 --> 01:49:33,160
them up and keep them spun up or some

1865
01:49:30,250 --> 01:49:34,720
weird nonsense like this I don't have a

1866
01:49:33,159 --> 01:49:39,489
lot of experience program within 20 50

1867
01:49:34,720 --> 01:49:41,110
to 256 to the 5th 512 wide lanes for

1868
01:49:39,489 --> 01:49:43,179
really hardcore optimization stuff

1869
01:49:41,109 --> 01:49:48,219
largely cuz most chips just don't have

1870
01:49:43,180 --> 01:49:50,250
that stuff so it's not an issue but you

1871
01:49:48,220 --> 01:49:50,250
know

1872
01:50:07,939 --> 01:50:14,149
any opinion of Linux way to find earlier

1873
01:50:10,850 --> 01:50:17,030
types with one letter like you ate I

1874
01:50:14,149 --> 01:50:20,389
seem well that's what I do

1875
01:50:17,029 --> 01:50:22,369
so in handmade hero you know obviously

1876
01:50:20,390 --> 01:50:28,550
I'm a fan because I that's what I do I

1877
01:50:22,369 --> 01:50:32,300
don't know if you've been following

1878
01:50:28,550 --> 01:50:41,690
along at all but we we do that so so

1879
01:50:32,300 --> 01:50:42,680
these are the types that we we use so I

1880
01:50:41,689 --> 01:50:46,549
mean if you're just looking at my pie

1881
01:50:42,680 --> 01:50:49,579
like it I used to use longer ones like

1882
01:50:46,550 --> 01:50:51,739
like I used to use them this way and I

1883
01:50:49,579 --> 01:50:53,180
eventually just even during handmade

1884
01:50:51,739 --> 01:50:54,710
here I decided I liked them even shorter

1885
01:50:53,180 --> 01:50:56,180
so we kind of went this week at some

1886
01:50:54,710 --> 01:50:57,439
point we should probably tease and just

1887
01:50:56,180 --> 01:50:59,840
go through and remove all but you know

1888
01:50:57,439 --> 01:51:02,779
it's not a big deal but yeah I do like

1889
01:50:59,840 --> 01:51:04,100
the short ones I don't I didn't I didn't

1890
01:51:02,779 --> 01:51:06,079
know that was like a Linux way of doing

1891
01:51:04,100 --> 01:51:07,579
it I've that's how like Jeff doesn't it

1892
01:51:06,079 --> 01:51:11,710
rad that's really where I got it from I

1893
01:51:07,579 --> 01:51:11,710
don't know the Linux part of things but

1894
01:51:20,458 --> 01:51:26,288
puck with a gun needs to be an enemy in

1895
01:51:23,019 --> 01:51:28,269
the game yeah we could I wouldn't be

1896
01:51:26,288 --> 01:51:30,188
averse to that someone wants to put it

1897
01:51:28,269 --> 01:51:33,189
in the github it wants to file a bug in

1898
01:51:30,189 --> 01:51:35,889
the github for a feature request for a

1899
01:51:33,189 --> 01:51:38,079
program for Windows only is DX the

1900
01:51:35,889 --> 01:51:41,229
better orb shell DX is it's just better

1901
01:51:38,078 --> 01:51:42,099
supported so if you're only if you're

1902
01:51:41,229 --> 01:51:42,909
only shipping your windows for you

1903
01:51:42,099 --> 01:51:44,739
definitely DX

1904
01:51:42,908 --> 01:51:46,179
generally speaking I'd say you probably

1905
01:51:44,738 --> 01:51:48,009
want to do DX on Windows these days

1906
01:51:46,179 --> 01:51:50,439
anyway not OpenGL cuz you wanna do like

1907
01:51:48,010 --> 01:51:55,360
DX on Windows and metal on Apple you

1908
01:51:50,439 --> 01:51:56,619
really can't do cross very well when

1909
01:51:55,359 --> 01:51:57,788
you're getting a college degree in

1910
01:51:56,618 --> 01:51:59,648
information technology should you

1911
01:51:57,788 --> 01:52:01,509
instead be working on hobby projects my

1912
01:51:59,649 --> 01:52:05,099
dad isn't wanting me to get into a post

1913
01:52:01,510 --> 01:52:11,649
secondary school for a long time um I

1914
01:52:05,099 --> 01:52:15,340
think I guess I think the the key is

1915
01:52:11,649 --> 01:52:18,340
just whatever makes you learn and get

1916
01:52:15,340 --> 01:52:21,130
better is the best thing to do I didn't

1917
01:52:18,340 --> 01:52:24,639
go to college of any kind so I don't

1918
01:52:21,130 --> 01:52:26,380
think it's necessary at all but that's

1919
01:52:24,639 --> 01:52:28,389
if you're the type of person who's like

1920
01:52:26,380 --> 01:52:31,958
very self-motivated and learns on their

1921
01:52:28,389 --> 01:52:35,979
own really well and if you're not then

1922
01:52:31,958 --> 01:52:38,769
that isn't gonna work right so I think

1923
01:52:35,979 --> 01:52:40,840
whether or not additional schooling

1924
01:52:38,769 --> 01:52:45,699
makes sense depends a lot on the person

1925
01:52:40,840 --> 01:52:47,590
you know and and you kind of have to

1926
01:52:45,698 --> 01:52:54,629
self assess right you have to figure out

1927
01:52:47,590 --> 01:52:54,630
like what's gonna work best for you I

1928
01:52:56,099 --> 01:53:03,208
don't super find that College CS stuff

1929
01:53:01,059 --> 01:53:07,449
is very good seems to be kind of crappy

1930
01:53:03,208 --> 01:53:10,599
so while it's better than nothing it's

1931
01:53:07,448 --> 01:53:12,368
probably not good for the working

1932
01:53:10,599 --> 01:53:14,529
programmer like maybe if you're someone

1933
01:53:12,368 --> 01:53:16,238
who wants to go in and like study

1934
01:53:14,529 --> 01:53:19,599
church's thesis or something like that

1935
01:53:16,238 --> 01:53:22,448
then College CS degrees make sense but I

1936
01:53:19,599 --> 01:53:25,748
will say that like the quality of actual

1937
01:53:22,448 --> 01:53:29,638
like coding behavior that tends to come

1938
01:53:25,748 --> 01:53:29,639
out of colleges seems to be pretty bad

1939
01:53:29,908 --> 01:53:34,738
so there's that

1940
01:53:34,869 --> 01:53:40,430
like there's probably some universities

1941
01:53:38,420 --> 01:53:43,010
where they actually teach you how to

1942
01:53:40,430 --> 01:53:45,770
program well but I kind of get the

1943
01:53:43,010 --> 01:53:48,110
feeling from my experience that most

1944
01:53:45,770 --> 01:53:49,700
don't probably because most college

1945
01:53:48,109 --> 01:53:51,649
professors don't really know how to

1946
01:53:49,699 --> 01:53:54,439
program very well that's not really

1947
01:53:51,649 --> 01:53:56,089
their job like long haul hard work

1948
01:53:54,439 --> 01:53:58,309
programming is just not what they do

1949
01:53:56,090 --> 01:54:00,739
every day right they publish papers and

1950
01:53:58,310 --> 01:54:02,330
like put together research these sorts

1951
01:54:00,739 --> 01:54:04,429
of things where the quality of the code

1952
01:54:02,329 --> 01:54:08,659
is not really ever gonna get tested

1953
01:54:04,430 --> 01:54:10,900
particularly much and that the amount of

1954
01:54:08,659 --> 01:54:13,670
output is very low compared to what a

1955
01:54:10,899 --> 01:54:15,469
hardcore commercial programmer you know

1956
01:54:13,670 --> 01:54:18,199
what I would expect from them or want

1957
01:54:15,470 --> 01:54:20,510
from them so it seems like the college

1958
01:54:18,199 --> 01:54:24,800
style of programming tends to be more in

1959
01:54:20,510 --> 01:54:26,840
line with what I see in like the 1,000

1960
01:54:24,800 --> 01:54:28,489
web programmers at Twitter and we don't

1961
01:54:26,840 --> 01:54:33,440
ever seem to get anything done kind of

1962
01:54:28,489 --> 01:54:37,399
programming which is like highly

1963
01:54:33,439 --> 01:54:40,159
theoretical a lot of nonsense process

1964
01:54:37,399 --> 01:54:42,649
stuff that doesn't really work not very

1965
01:54:40,159 --> 01:54:44,960
much output per programmer not a lot of

1966
01:54:42,649 --> 01:54:48,349
visible quality control like that sort

1967
01:54:44,960 --> 01:54:50,810
of thing just just generally taking lots

1968
01:54:48,350 --> 01:54:56,690
of people to do not very much not very

1969
01:54:50,810 --> 01:54:58,850
well right and it seems like they hire a

1970
01:54:56,689 --> 01:55:00,259
lot along with college degrees right and

1971
01:54:58,850 --> 01:55:02,360
so it seems like that kind of whole

1972
01:55:00,260 --> 01:55:05,300
pipeline is sort of the same general

1973
01:55:02,359 --> 01:55:06,500
thing up and down so I don't think

1974
01:55:05,300 --> 01:55:09,500
highly of that stuff

1975
01:55:06,500 --> 01:55:10,699
I really don't but that's not to say

1976
01:55:09,500 --> 01:55:12,859
that that's true everywhere right

1977
01:55:10,699 --> 01:55:14,210
there's probably some universities where

1978
01:55:12,859 --> 01:55:15,829
there are some professors who are very

1979
01:55:14,210 --> 01:55:18,020
serious about programming and those are

1980
01:55:15,829 --> 01:55:20,720
probably the kinds of places that would

1981
01:55:18,020 --> 01:55:22,880
churn out as a product of their

1982
01:55:20,720 --> 01:55:24,530
education better actual commercial

1983
01:55:22,880 --> 01:55:33,739
programmers but that from what I've seen

1984
01:55:24,529 --> 01:55:35,239
is not the norm so you know keep that

1985
01:55:33,739 --> 01:55:38,689
perspective maybe in the back of your

1986
01:55:35,239 --> 01:55:40,159
head a little bit I have done lots of

1987
01:55:38,689 --> 01:55:42,049
tools and see like string utility

1988
01:55:40,159 --> 01:55:43,789
json.parse or data visualization on

1989
01:55:42,050 --> 01:55:45,650
Linux using x11 vector lip and some

1990
01:55:43,789 --> 01:55:47,019
other tools do you think these can be

1991
01:55:45,649 --> 01:55:56,299
valuable for the seed

1992
01:55:47,019 --> 01:56:00,530
um possibly right again I would probably

1993
01:55:56,300 --> 01:56:03,829
say I I just give like vague advice I

1994
01:56:00,529 --> 01:56:06,139
mean I don't know I it's been so long

1995
01:56:03,828 --> 01:56:07,759
since I've tried to apply for a job in

1996
01:56:06,139 --> 01:56:10,819
the game industry in the traditional way

1997
01:56:07,760 --> 01:56:13,039
like I mean I never really did so I

1998
01:56:10,819 --> 01:56:18,618
can't really give good advice on that

1999
01:56:13,038 --> 01:56:22,009
very well all I can say is imagine you

2000
01:56:18,618 --> 01:56:25,368
were me or some other person with some

2001
01:56:22,010 --> 01:56:27,139
connections who could recommend a person

2002
01:56:25,368 --> 01:56:30,639
right so you're somebody who knows

2003
01:56:27,139 --> 01:56:32,868
people who do hiring and the question is

2004
01:56:30,639 --> 01:56:35,269
how do you get that you know how do you

2005
01:56:32,868 --> 01:56:36,648
get me to say oh this person seems to

2006
01:56:35,269 --> 01:56:38,899
know what they're doing right and it's

2007
01:56:36,649 --> 01:56:45,109
probably worth hiring me as in an

2008
01:56:38,899 --> 01:56:48,979
entry-level position what am I going to

2009
01:56:45,109 --> 01:56:54,499
go to your website and find that's gonna

2010
01:56:48,979 --> 01:56:56,899
make me think that right so it may well

2011
01:56:54,498 --> 01:56:59,569
be that some utility you've already made

2012
01:56:56,899 --> 01:57:02,119
could be that thing if it's true dress

2013
01:56:59,569 --> 01:57:03,948
it up make some posts about it make it

2014
01:57:02,118 --> 01:57:09,488
clear why it's interesting or what you

2015
01:57:03,948 --> 01:57:12,288
did on it do you know what I'm saying I

2016
01:57:09,488 --> 01:57:14,718
you know let's say you were like hey I

2017
01:57:12,288 --> 01:57:17,358
want to make a really high speed json

2018
01:57:14,719 --> 01:57:20,269
parser so I started with my json parser

2019
01:57:17,359 --> 01:57:22,189
and I profiled it and I did some back of

2020
01:57:20,269 --> 01:57:24,769
them of compilations to figure out how

2021
01:57:22,189 --> 01:57:26,539
what's memory bandwidth how close I

2022
01:57:24,769 --> 01:57:28,399
could get to that like do a bunch of

2023
01:57:26,538 --> 01:57:30,078
like blog posts on what's the fastest

2024
01:57:28,399 --> 01:57:33,709
possible JSON parsing I could do or

2025
01:57:30,078 --> 01:57:35,988
something right that's one good example

2026
01:57:33,708 --> 01:57:38,238
another example would be how do I make a

2027
01:57:35,988 --> 01:57:40,158
really good JSON parsing library here's

2028
01:57:38,238 --> 01:57:41,569
me analyzing the API looking how easy it

2029
01:57:40,158 --> 01:57:43,339
is to use try a couple different

2030
01:57:41,569 --> 01:57:45,198
variants looking at the usage code what

2031
01:57:43,340 --> 01:57:48,649
makes the smalls uses code how do I deal

2032
01:57:45,198 --> 01:57:51,078
with a memory properly right just seeing

2033
01:57:48,649 --> 01:57:54,409
is I made a JSON parser doesn't help me

2034
01:57:51,078 --> 01:57:57,648
right I have no context for whether or

2035
01:57:54,408 --> 01:58:00,049
not that person's good or bad but show

2036
01:57:57,649 --> 01:58:00,949
me something that shows you think

2037
01:58:00,050 --> 01:58:03,708
through these

2038
01:58:00,948 --> 01:58:05,808
you work hard at them you can solve real

2039
01:58:03,708 --> 01:58:06,380
things you know what the metrics are

2040
01:58:05,809 --> 01:58:09,019
right

2041
01:58:06,380 --> 01:58:12,529
give me something to latch on to and

2042
01:58:09,019 --> 01:58:15,590
point me at that that's the key right so

2043
01:58:12,529 --> 01:58:22,158
I don't know like hopefully that kind of

2044
01:58:15,590 --> 01:58:24,279
helps I just don't know how to how to

2045
01:58:22,158 --> 01:58:26,868
say it really any other way other than

2046
01:58:24,279 --> 01:58:29,988
if people like me are busy we're doing

2047
01:58:26,868 --> 01:58:31,668
stuff all the time so you know we're not

2048
01:58:29,988 --> 01:58:33,498
gonna spend a ton of time going and

2049
01:58:31,668 --> 01:58:36,498
figuring out if some other person is is

2050
01:58:33,498 --> 01:58:37,698
good to hire or not right but if you can

2051
01:58:36,498 --> 01:58:41,148
make it obvious

2052
01:58:37,698 --> 01:58:42,379
like if you can make it so that I want

2053
01:58:41,149 --> 01:58:44,329
to go read your blog because I'm gonna

2054
01:58:42,380 --> 01:58:47,868
learn something or it's just interesting

2055
01:58:44,328 --> 01:58:50,179
what you did or whatever right that gets

2056
01:58:47,868 --> 01:58:52,429
you in the mix for free you see I'm

2057
01:58:50,179 --> 01:58:54,050
saying so just I don't know like put

2058
01:58:52,429 --> 01:58:57,319
yourself in that headspace go how do I

2059
01:58:54,050 --> 01:58:58,939
make it so that someone who's busy is

2060
01:58:57,319 --> 01:59:02,679
not gonna spend a lot of time because

2061
01:58:58,939 --> 01:59:02,679
stuff gets interested in what I did

2062
01:59:03,880 --> 01:59:08,659
right that's the puzzle you're trying to

2063
01:59:06,168 --> 01:59:10,729
solve fundamentally that's the only real

2064
01:59:08,658 --> 01:59:13,069
way to bypass that I just send a giant

2065
01:59:10,729 --> 01:59:14,570
stack of CDs to everyone and hope the

2066
01:59:13,069 --> 01:59:16,488
random people at HR who don't know

2067
01:59:14,569 --> 01:59:18,349
anything about anything happened to pit

2068
01:59:16,488 --> 01:59:20,948
pull mine out of the like the rabbit hat

2069
01:59:18,349 --> 01:59:20,949
right

2070
01:59:32,569 --> 01:59:38,899
do you think it's enough to have a

2071
01:59:34,159 --> 01:59:41,960
YouTube channel instead of a webpage it

2072
01:59:38,899 --> 01:59:44,239
depends a YouTube channel is sometimes a

2073
01:59:41,960 --> 01:59:46,609
harder sell because someone has to like

2074
01:59:44,239 --> 01:59:49,579
actually set aside time to look at it

2075
01:59:46,609 --> 01:59:51,500
like keep in mind that most people read

2076
01:59:49,579 --> 01:59:54,319
most stuff on their phone or something

2077
01:59:51,500 --> 01:59:58,430
on the bus or waiting in line or while

2078
01:59:54,319 --> 02:00:00,769
they're commuting right and so if they

2079
01:59:58,430 --> 02:00:02,630
don't have their headphones on or if

2080
02:00:00,770 --> 02:00:04,010
they don't write you know are they

2081
02:00:02,630 --> 02:00:05,659
really gonna click through to a YouTube

2082
02:00:04,010 --> 02:00:12,050
channel how long are they gonna watch it

2083
02:00:05,659 --> 02:00:13,550
for right so you know I would consider I

2084
02:00:12,050 --> 02:00:16,159
mean how hard is it to put up something

2085
02:00:13,550 --> 02:00:19,930
I mean even Fabien Wright who has one of

2086
02:00:16,159 --> 02:00:22,159
the best technical blogs in the world um

2087
02:00:19,930 --> 02:00:23,720
he didn't bother making his own blog

2088
02:00:22,159 --> 02:00:25,729
it's just on some hosted sites like

2089
02:00:23,720 --> 02:00:28,490
WordPress or something right so just

2090
02:00:25,729 --> 02:00:31,969
just do that no one cares that Fabien

2091
02:00:28,489 --> 02:00:34,460
didn't make his own website um here let

2092
02:00:31,970 --> 02:00:36,380
me show you he just needed somewhere to

2093
02:00:34,460 --> 02:00:40,060
post so he did and everyone reads it

2094
02:00:36,380 --> 02:00:40,060
because it's really high quality right

2095
02:00:43,869 --> 02:00:49,460
right so it's just it's just this thing

2096
02:00:46,939 --> 02:00:52,729
and here's all this stuff and it's all

2097
02:00:49,460 --> 02:00:54,230
really good right so you know I mean

2098
02:00:52,729 --> 02:00:56,359
Fabien doesn't need to apply for a job

2099
02:00:54,229 --> 02:00:58,069
because he probably has like infinite

2100
02:00:56,359 --> 02:01:02,239
people who would hire him if he wasn't

2101
02:00:58,069 --> 02:01:04,250
already hired but the point is it's the

2102
02:01:02,239 --> 02:01:06,139
quality of the stuff on the site that

2103
02:01:04,250 --> 02:01:09,260
matters here not whether you made the

2104
02:01:06,140 --> 02:01:12,560
webpage so just do whatever doesn't

2105
02:01:09,260 --> 02:01:14,329
matter WordPress blogger I don't know go

2106
02:01:12,560 --> 02:01:17,600
type in some random thing like best

2107
02:01:14,329 --> 02:01:19,519
blogging site and just go there and put

2108
02:01:17,600 --> 02:01:21,920
up the content right it's the content

2109
02:01:19,520 --> 02:01:24,680
that matters not that you made the

2110
02:01:21,920 --> 02:01:25,480
webpage so you don't have to worry at

2111
02:01:24,680 --> 02:01:29,510
all about that

2112
02:01:25,479 --> 02:01:30,979
you know just if it's good enough for

2113
02:01:29,510 --> 02:01:33,730
Fabi and it's good enough for you for

2114
02:01:30,979 --> 02:01:33,729
sure right

2115
02:01:54,349 --> 02:01:58,400
Oh someone's asking why we're suggesting

2116
02:01:56,689 --> 02:02:00,649
to look at how to do it under 26 because

2117
02:01:58,399 --> 02:02:04,388
they were asking me about a Microsoft

2118
02:02:00,649 --> 02:02:07,578
job interview question that I got and

2119
02:02:04,389 --> 02:02:13,099
back when I interviewed as an intern and

2120
02:02:07,578 --> 02:02:16,158
so the question is how do you draw a

2121
02:02:13,099 --> 02:02:19,760
circle as quickly as possible the answer

2122
02:02:16,158 --> 02:02:22,279
nowadays has nothing to do with like any

2123
02:02:19,760 --> 02:02:24,590
of that stuff that I just showed this

2124
02:02:22,279 --> 02:02:26,238
basic concept of looking at x squared

2125
02:02:24,590 --> 02:02:28,400
plus y squared minus R squared it still

2126
02:02:26,238 --> 02:02:31,069
remains because hey that's the equation

2127
02:02:28,399 --> 02:02:32,929
for a circle but the actual way that you

2128
02:02:31,069 --> 02:02:36,049
solve it is nothing to do with that

2129
02:02:32,929 --> 02:02:39,710
right and that's because you need to

2130
02:02:36,050 --> 02:02:42,650
operate on wide registers now so you

2131
02:02:39,710 --> 02:02:46,340
need to be testing multiple things at

2132
02:02:42,649 --> 02:02:48,198
once more than two and so you need to do

2133
02:02:46,340 --> 02:02:57,110
things a little differently in order to

2134
02:02:48,198 --> 02:02:58,669
draw circles quickly right so I've been

2135
02:02:57,109 --> 02:02:59,929
using a language function polymorphism

2136
02:02:58,670 --> 02:03:03,828
similar I think to what John is doing

2137
02:02:59,929 --> 02:03:04,880
Jay I multiple dispatched especially

2138
02:03:03,828 --> 02:03:06,979
appetizers I recently tried out

2139
02:03:04,880 --> 02:03:08,810
different language types not all very

2140
02:03:06,979 --> 02:03:11,089
common how come not where languages have

2141
02:03:08,810 --> 02:03:11,539
this is it hard to implement or other

2142
02:03:11,090 --> 02:03:20,389
issues

2143
02:03:11,539 --> 02:03:23,569
um I guess to be completely honest with

2144
02:03:20,389 --> 02:03:25,940
you I'm gonna try not to be too overly

2145
02:03:23,569 --> 02:03:27,109
negative but my opinion is that most

2146
02:03:25,939 --> 02:03:29,750
language designers have no idea what

2147
02:03:27,109 --> 02:03:32,299
they're doing and that is why things

2148
02:03:29,750 --> 02:03:40,729
like double dispatch aren't a part of

2149
02:03:32,300 --> 02:03:42,980
the language right dispatch on types is

2150
02:03:40,729 --> 02:03:45,968
just something that you build you can

2151
02:03:42,979 --> 02:03:48,468
build n dimensional sparse matrices for

2152
02:03:45,969 --> 02:03:50,179
you should allow at least the

2153
02:03:48,469 --> 02:03:53,408
metaprogramming capabilities to do that

2154
02:03:50,179 --> 02:03:55,639
any language that doesn't have that in

2155
02:03:53,408 --> 02:03:59,089
2020 which is what we're coming up on

2156
02:03:55,639 --> 02:04:00,409
here is ridiculous obviously see the

2157
02:03:59,090 --> 02:04:02,389
stuff doesn't have it because as I've

2158
02:04:00,408 --> 02:04:03,679
said many times they have absolutely no

2159
02:04:02,389 --> 02:04:06,440
idea how to design a language or even

2160
02:04:03,679 --> 02:04:07,489
what the point of a language is so I

2161
02:04:06,439 --> 02:04:09,460
would say it's probably just

2162
02:04:07,488 --> 02:04:13,189
incompetence

2163
02:04:09,460 --> 02:04:15,170
right that's not to say that it's that

2164
02:04:13,189 --> 02:04:16,488
important of a language feature I don't

2165
02:04:15,170 --> 02:04:18,079
know that

2166
02:04:16,488 --> 02:04:19,669
dynamic dispatch across multiple types

2167
02:04:18,079 --> 02:04:21,769
at the same time is really that

2168
02:04:19,670 --> 02:04:23,658
important for most programs I think

2169
02:04:21,770 --> 02:04:28,670
sometimes people think it is but usually

2170
02:04:23,658 --> 02:04:29,929
it's actually not but that's not a

2171
02:04:28,670 --> 02:04:31,429
reason why your language shouldn't

2172
02:04:29,929 --> 02:04:36,289
support it cleanly because it's it's not

2173
02:04:31,429 --> 02:04:37,940
that tricky right so I don't have an

2174
02:04:36,289 --> 02:04:38,899
answer better than in confidence I think

2175
02:04:37,939 --> 02:04:42,408
it's just incompetence

2176
02:04:38,899 --> 02:04:43,819
I heard Jay I supposed to beta release

2177
02:04:42,408 --> 02:04:45,979
will you be playing around with that or

2178
02:04:43,819 --> 02:04:48,049
leaving it until it's matured more um if

2179
02:04:45,979 --> 02:04:50,779
I have time up here maybe we'll play

2180
02:04:48,050 --> 02:04:53,779
around unlike a stream you know at some

2181
02:04:50,779 --> 02:04:55,729
point when when John feels like it's

2182
02:04:53,779 --> 02:04:58,179
worth that you know he I would trust his

2183
02:04:55,729 --> 02:04:58,178
judgment

2184
02:05:09,698 --> 02:05:12,819
have you met the immediate programmer

2185
02:05:11,350 --> 02:05:14,110
like Bruce Dawson it seems they were

2186
02:05:12,819 --> 02:05:16,420
great programs I'm sure Bruce will be

2187
02:05:14,109 --> 02:05:18,429
happy to hear that yes I do know Bruce

2188
02:05:16,420 --> 02:05:21,060
Dawson personally amusingly enough

2189
02:05:18,429 --> 02:05:23,670
because he worked actually at cave dog

2190
02:05:21,060 --> 02:05:29,560
which was right over in Woodinville and

2191
02:05:23,670 --> 02:05:33,760
then after cave dog he went to Microsoft

2192
02:05:29,560 --> 02:05:36,940
first anyway then he ended up at valve

2193
02:05:33,760 --> 02:05:38,320
and now I think he's at Google so he's

2194
02:05:36,939 --> 02:05:40,750
always kind of been around this area

2195
02:05:38,319 --> 02:05:43,948
actually in in recent years I think he

2196
02:05:40,750 --> 02:05:46,238
might have been Canadian originally um

2197
02:05:43,948 --> 02:05:49,809
which is why he worked at cave dog I

2198
02:05:46,238 --> 02:05:52,448
think he might have known Chris maybe

2199
02:05:49,810 --> 02:05:58,710
that's not true I can't remember I can't

2200
02:05:52,448 --> 02:06:01,000
remember how he knew Chris Chris Taylor

2201
02:05:58,710 --> 02:06:03,939
or how he got hired that maybe knew Ron

2202
02:06:01,000 --> 02:06:06,429
Gilbert I don't know I don't know that

2203
02:06:03,939 --> 02:06:11,229
part of his backstory but yeah I love

2204
02:06:06,429 --> 02:06:12,609
Cigna said that was a great achievement

2205
02:06:11,229 --> 02:06:15,639
in text setting for sure

2206
02:06:12,609 --> 02:06:18,159
Bruce is a an optimization kind of kind

2207
02:06:15,640 --> 02:06:19,750
of person I have met him but you know I

2208
02:06:18,159 --> 02:06:21,639
hadn't really worked with him I don't

2209
02:06:19,750 --> 02:06:24,698
have a lot to say about him personally

2210
02:06:21,640 --> 02:06:25,989
because I don't you know I I've never

2211
02:06:24,698 --> 02:06:28,329
really worked with him on that stuff but

2212
02:06:25,988 --> 02:06:36,549
but i but I hadn't met would I have met

2213
02:06:28,329 --> 02:06:38,260
him uh would you sign cosign now no you

2214
02:06:36,550 --> 02:06:40,260
pretty much never want to use sine and

2215
02:06:38,260 --> 02:06:44,140
cosine for things like drawing a circle

2216
02:06:40,260 --> 02:06:46,780
at least not that I can think of unless

2217
02:06:44,140 --> 02:06:52,380
what you're trying to do is actually

2218
02:06:46,779 --> 02:06:55,090
compute like points on the circle right

2219
02:06:52,380 --> 02:06:57,400
so if you're trying to rasterize a

2220
02:06:55,090 --> 02:06:59,920
circle you don't really need to skip

2221
02:06:57,399 --> 02:07:01,689
along it so if I'm trying to produce

2222
02:06:59,920 --> 02:07:03,039
like points along a circle sure I'd use

2223
02:07:01,689 --> 02:07:04,960
sine and cosine now because that's

2224
02:07:03,039 --> 02:07:07,238
really the only way to do it that I can

2225
02:07:04,960 --> 02:07:09,670
think of but if you're trying to just

2226
02:07:07,238 --> 02:07:15,218
rasterize it you can still just use

2227
02:07:09,670 --> 02:07:19,480
implicit function evaluation for that so

2228
02:07:15,219 --> 02:07:20,409
you usually do are you gonna press the

2229
02:07:19,479 --> 02:07:22,119
circle decision to pick up

2230
02:07:20,409 --> 02:07:23,448
yeah it'll automatically go into the

2231
02:07:22,119 --> 02:07:25,038
source code control because I put it in

2232
02:07:23,448 --> 02:07:29,178
miss directory so it should just be

2233
02:07:25,038 --> 02:07:30,679
there do you ever use any scripting

2234
02:07:29,179 --> 02:07:31,908
language not if I can avoid it

2235
02:07:30,679 --> 02:07:37,399
I don't really like underpowered

2236
02:07:31,908 --> 02:07:42,429
languages very much is there any

2237
02:07:37,399 --> 02:07:42,429
computer world outside us

2238
02:07:43,059 --> 02:07:47,510
I'm not sure what you mean by that but

2239
02:07:45,469 --> 02:07:49,010
if you mean are people outside of the

2240
02:07:47,510 --> 02:07:50,809
United States making important

2241
02:07:49,010 --> 02:07:52,489
contributions to computing or running

2242
02:07:50,809 --> 02:07:54,469
large companies that do important

2243
02:07:52,488 --> 02:08:01,998
projects the answer is like absolutely

2244
02:07:54,469 --> 02:08:06,439
yes I mean so much so that if you look

2245
02:08:01,998 --> 02:08:10,958
at things like Grand Theft Auto 5 the

2246
02:08:06,439 --> 02:08:13,958
most profitable game in history

2247
02:08:10,958 --> 02:08:16,760
that's a UK development based

2248
02:08:13,958 --> 02:08:20,958
organization although kind of have stuff

2249
02:08:16,760 --> 02:08:23,539
all over the world you can look at The

2250
02:08:20,958 --> 02:08:25,389
Witcher developed I want to say entirely

2251
02:08:23,538 --> 02:08:28,728
in Poland is that correct

2252
02:08:25,389 --> 02:08:36,199
one of the biggest engine projects in

2253
02:08:28,729 --> 02:08:37,969
recent history right there's unity that

2254
02:08:36,198 --> 02:08:39,948
was originally developed outside the US

2255
02:08:37,969 --> 02:08:46,420
as well although they have us plenty of

2256
02:08:39,948 --> 02:08:46,419
u.s. offices now right but not not us I

2257
02:08:46,599 --> 02:08:52,479
don't know where most of like Ubisoft

2258
02:08:50,809 --> 02:08:58,909
development happens now but like

2259
02:08:52,479 --> 02:09:01,729
Montreal like Canada houses at least

2260
02:08:58,908 --> 02:09:05,598
very important parts of like the

2261
02:09:01,729 --> 02:09:07,190
snowflake engine studio which which does

2262
02:09:05,599 --> 02:09:11,869
I think I think that's I think that's

2263
02:09:07,189 --> 02:09:13,189
done in Montreal and I think it's what's

2264
02:09:11,868 --> 02:09:17,630
used for like the division and stuff

2265
02:09:13,189 --> 02:09:20,208
right things like this and then I know

2266
02:09:17,630 --> 02:09:21,019
they have they've got like offices of

2267
02:09:20,208 --> 02:09:23,868
France as well

2268
02:09:21,019 --> 02:09:26,719
there's Croteam right the people who

2269
02:09:23,868 --> 02:09:31,639
made both serious sam and the talus

2270
02:09:26,719 --> 02:09:33,800
principal there in croatia there's you

2271
02:09:31,639 --> 02:09:37,010
know i mean and i'm these are just off

2272
02:09:33,800 --> 02:09:39,380
the top of my head right and so

2273
02:09:37,010 --> 02:09:45,739
at least in the game industry obviously

2274
02:09:39,380 --> 02:09:47,510
tons of people all over the place at the

2275
02:09:45,738 --> 02:09:52,939
risk of stating the obvious the

2276
02:09:47,510 --> 02:09:54,979
PlayStation the Nintendo switch you know

2277
02:09:52,939 --> 02:09:56,928
these are originally Japanese companies

2278
02:09:54,979 --> 02:10:00,889
obviously the PlayStation 4 mostly made

2279
02:09:56,929 --> 02:10:02,630
in the US PlayStation 2 and prior a lot

2280
02:10:00,889 --> 02:10:06,739
of that stuff was Japanese based

2281
02:10:02,630 --> 02:10:09,260
Nintendo always in Japan for most of

2282
02:10:06,738 --> 02:10:10,638
their stuff although again the switch is

2283
02:10:09,260 --> 02:10:13,010
now mostly us because it's like an

2284
02:10:10,639 --> 02:10:16,998
Nvidia shield basically right but I mean

2285
02:10:13,010 --> 02:10:19,248
you know Super Mario 2 see breath of the

2286
02:10:16,998 --> 02:10:23,748
wild these are Japanese oriented

2287
02:10:19,248 --> 02:10:25,038
development projects obviously very

2288
02:10:23,748 --> 02:10:28,340
important to the latest generation of

2289
02:10:25,038 --> 02:10:31,248
games and there's tons of you know

2290
02:10:28,340 --> 02:10:33,199
Capcom the Japanese game industry is

2291
02:10:31,248 --> 02:10:34,368
obviously you know shouldn't need much

2292
02:10:33,198 --> 02:10:36,138
introduction I mean hopefully most

2293
02:10:34,368 --> 02:10:38,808
people are aware of what's going on in

2294
02:10:36,139 --> 02:10:41,118
in Japan game wise so there's a ton of

2295
02:10:38,809 --> 02:10:44,809
stuff happening there I'm less familiar

2296
02:10:41,118 --> 02:10:47,689
with like Chinese and Korean game

2297
02:10:44,809 --> 02:10:50,090
development but they've got a ton of it

2298
02:10:47,689 --> 02:10:52,189
a lot of MMO base development happens

2299
02:10:50,090 --> 02:10:55,699
there obviously player unknowns

2300
02:10:52,189 --> 02:10:57,888
battlegrounds developed in Korea there's

2301
02:10:55,698 --> 02:11:00,888
a bunch of MMOs that I don't really know

2302
02:10:57,889 --> 02:11:03,319
personally much about I can't remember

2303
02:11:00,889 --> 02:11:06,380
all the names of them they're like black

2304
02:11:03,319 --> 02:11:11,179
sea black pearl something like that was

2305
02:11:06,380 --> 02:11:12,979
a big one there's obviously a bunch of

2306
02:11:11,179 --> 02:11:18,170
web companies in China like you know

2307
02:11:12,979 --> 02:11:21,800
there's like Baidu line is is like the

2308
02:11:18,170 --> 02:11:23,569
Asian equivalent of things like Twitter

2309
02:11:21,800 --> 02:11:25,190
or Facebook sorts of things I think

2310
02:11:23,569 --> 02:11:29,090
they've got over there that we're just

2311
02:11:25,189 --> 02:11:31,129
totally a black desert is that it anyway

2312
02:11:29,090 --> 02:11:33,409
I don't know a lot of those because I

2313
02:11:31,130 --> 02:11:34,880
you know I don't play MMOs I'm really

2314
02:11:33,408 --> 02:11:38,509
ignorant about that segment of the

2315
02:11:34,880 --> 02:11:42,979
market and obviously since I don't speak

2316
02:11:38,510 --> 02:11:44,659
fluent Chinese languages or Japanese

2317
02:11:42,979 --> 02:11:46,458
like I can't speak Mandarin I can't

2318
02:11:44,658 --> 02:11:48,259
speak Japanese I can't speak Korean I

2319
02:11:46,458 --> 02:11:49,819
don't have a lot of experience on there

2320
02:11:48,260 --> 02:11:50,750
like instant message platforms or social

2321
02:11:49,819 --> 02:11:56,179
network sites but there

2322
02:11:50,750 --> 02:12:04,399
all fair right so there's tons of work

2323
02:11:56,180 --> 02:12:06,200
going on everywhere South America is it

2324
02:12:04,399 --> 02:12:08,929
seems like less influential at the

2325
02:12:06,199 --> 02:12:12,170
moment but gaining ground there's a lot

2326
02:12:08,930 --> 02:12:16,190
of game developers sort of starting to

2327
02:12:12,170 --> 02:12:21,069
do work in South America that's becoming

2328
02:12:16,189 --> 02:12:24,919
more relevant right game developers in

2329
02:12:21,069 --> 02:12:26,509
Argentina right like Daniel Ben Burcu a

2330
02:12:24,920 --> 02:12:29,500
for example who made Fidel dungeon

2331
02:12:26,510 --> 02:12:34,340
rescue which is a great game Argentinian

2332
02:12:29,500 --> 02:12:37,039
developed in Argentina uh and there's

2333
02:12:34,340 --> 02:12:38,930
game industry stuff developing down

2334
02:12:37,039 --> 02:12:41,149
there it's just I don't know of anything

2335
02:12:38,930 --> 02:12:42,680
big to point to like I don't think

2336
02:12:41,149 --> 02:12:44,809
they've necessarily had like the

2337
02:12:42,680 --> 02:12:46,700
crossover hit where I can point to

2338
02:12:44,810 --> 02:12:52,970
something you would have heard of in the

2339
02:12:46,699 --> 02:12:55,220
US that was developed there but I might

2340
02:12:52,970 --> 02:12:58,039
just be missing it but they it started

2341
02:12:55,220 --> 02:13:02,000
right and so I feel like you give it

2342
02:12:58,039 --> 02:13:03,439
time you know things take time to to get

2343
02:13:02,000 --> 02:13:05,479
enough talent to get enough experience

2344
02:13:03,439 --> 02:13:08,989
in an area to make like a breakout hit

2345
02:13:05,479 --> 02:13:11,449
or whatever right so I don't so that's

2346
02:13:08,989 --> 02:13:17,210
one obviously there's tons of

2347
02:13:11,449 --> 02:13:19,159
programmers in in Russia India I just

2348
02:13:17,210 --> 02:13:21,430
don't really know what they're working

2349
02:13:19,159 --> 02:13:21,430
on

2350
02:13:26,319 --> 02:13:31,309
I'm sure there's stuff I just don't know

2351
02:13:28,850 --> 02:13:33,770
what it is right I don't know of any

2352
02:13:31,310 --> 02:13:37,220
like big games to point to that come

2353
02:13:33,770 --> 02:13:41,330
came out of Russia or India but there

2354
02:13:37,220 --> 02:13:43,940
probably was probably a lot of contract

2355
02:13:41,329 --> 02:13:46,880
work happens there too on other people's

2356
02:13:43,939 --> 02:13:50,599
projects right like a lot of places have

2357
02:13:46,880 --> 02:13:53,029
like subsidiaries there that do work on

2358
02:13:50,600 --> 02:13:58,610
them that you may not have heard of

2359
02:13:53,029 --> 02:14:02,059
necessarily but right and then I'd also

2360
02:13:58,609 --> 02:14:04,009
point out like Israel is a great example

2361
02:14:02,060 --> 02:14:04,849
of a place that has tons of computer

2362
02:14:04,010 --> 02:14:07,159
stuff for

2363
02:14:04,849 --> 02:14:08,690
of all intel's israel operation was the

2364
02:14:07,158 --> 02:14:12,289
people who developed like a lot of the

2365
02:14:08,689 --> 02:14:14,779
core stuff you use Amex 64's chips

2366
02:14:12,289 --> 02:14:20,448
today right

2367
02:14:14,779 --> 02:14:24,170
like the pentium like the p3 core was

2368
02:14:20,448 --> 02:14:25,519
entirely them i think i i don't know how

2369
02:14:24,170 --> 02:14:27,500
much of the modern core is then probably

2370
02:14:25,520 --> 02:14:29,869
a lot they do a lot of work in israel on

2371
02:14:27,500 --> 02:14:32,380
the on the course obviously I think ways

2372
02:14:29,868 --> 02:14:37,549
was drilled from Israel like the mapping

2373
02:14:32,380 --> 02:14:38,719
thing which is very popular now I don't

2374
02:14:37,550 --> 02:14:41,630
know all the things that are developed

2375
02:14:38,719 --> 02:14:45,800
in Israel but there's a lot so that's

2376
02:14:41,630 --> 02:14:52,760
another hotbed of development both both

2377
02:14:45,800 --> 02:14:56,349
hardware and software um I don't know

2378
02:14:52,760 --> 02:14:56,349
much about the Middle East more broadly

2379
02:14:56,770 --> 02:15:05,750
like you know Iran Iraq Jordan Qatar

2380
02:15:01,219 --> 02:15:08,448
I don't know offhand of much that comes

2381
02:15:05,750 --> 02:15:11,658
out of there but you know there probably

2382
02:15:08,448 --> 02:15:14,299
would be Dubai you a lot of those places

2383
02:15:11,658 --> 02:15:15,488
are wealthy they probably could have a

2384
02:15:14,300 --> 02:15:20,929
suffrage I don't know if they do

2385
02:15:15,488 --> 02:15:22,549
Singapore has a large had a large push

2386
02:15:20,929 --> 02:15:23,750
for game developers at one point I just

2387
02:15:22,550 --> 02:15:25,369
don't know what came out of it I think

2388
02:15:23,750 --> 02:15:27,800
LucasArts might have located some people

2389
02:15:25,368 --> 02:15:29,719
there I don't know I would suspect

2390
02:15:27,800 --> 02:15:30,710
Singapore's got some I'm sorry I jumped

2391
02:15:29,719 --> 02:15:31,969
from the Middle East to Singapore home

2392
02:15:30,710 --> 02:15:35,270
sudden it's not that far I guess but

2393
02:15:31,969 --> 02:15:37,429
it's not really the same area um but I

2394
02:15:35,270 --> 02:15:39,199
know that Singapore has got a large tech

2395
02:15:37,429 --> 02:15:41,690
push I just don't

2396
02:15:39,198 --> 02:15:43,698
again know of what comes out of there

2397
02:15:41,689 --> 02:15:48,289
exactly some people on the chat probably

2398
02:15:43,698 --> 02:15:50,388
would does anyone know if Israel has a

2399
02:15:48,289 --> 02:15:53,229
large industry feel like most of Israel

2400
02:15:50,389 --> 02:15:53,230
speaks English right

2401
02:15:57,159 --> 02:16:03,189
I would assume that like I mean I could

2402
02:16:01,989 --> 02:16:04,689
be way off base here but I would assume

2403
02:16:03,189 --> 02:16:06,309
that Israel like it's pretty much

2404
02:16:04,689 --> 02:16:08,429
English as the official language and

2405
02:16:06,310 --> 02:16:11,890
probably also maybe has like you know

2406
02:16:08,430 --> 02:16:14,500
Hebrew or something as a as a cultural

2407
02:16:11,890 --> 02:16:17,470
language or something like this but I'm

2408
02:16:14,500 --> 02:16:21,010
pretty sure Israel would would be mostly

2409
02:16:17,470 --> 02:16:25,090
speaking English you know in any text

2410
02:16:21,010 --> 02:16:27,130
setting that would be my assumption I

2411
02:16:25,090 --> 02:16:29,319
would I would I would assume that most

2412
02:16:27,130 --> 02:16:31,810
Israeli tech people are are pretty much

2413
02:16:29,319 --> 02:16:35,649
using English most of the time they'll

2414
02:16:31,810 --> 02:16:37,720
be my guess um Germany I'm sure is also

2415
02:16:35,649 --> 02:16:39,250
another place that tipped like I can't

2416
02:16:37,719 --> 02:16:40,989
think about that my head but you know

2417
02:16:39,250 --> 02:16:44,380
they'd have a ton

2418
02:16:40,989 --> 02:16:47,559
Italy is harder to can't think of much

2419
02:16:44,380 --> 02:16:49,569
like Italy Portugal not sure about Spain

2420
02:16:47,559 --> 02:16:52,269
definitely they make Maxwell render for

2421
02:16:49,569 --> 02:16:56,110
example I think in Spain so I think they

2422
02:16:52,270 --> 02:16:58,270
have a fair number of like CG things

2423
02:16:56,110 --> 02:17:01,030
they're already hit PO and Turkey I

2424
02:16:58,270 --> 02:17:02,829
don't know this is turning into a giant

2425
02:17:01,030 --> 02:17:07,450
like world tour of game development

2426
02:17:02,829 --> 02:17:10,959
right it's CryEngine from Germany maybe

2427
02:17:07,450 --> 02:17:14,710
Oh cried Degas German okay so Crytek is

2428
02:17:10,959 --> 02:17:16,149
German there you go so I mean I I don't

2429
02:17:14,709 --> 02:17:18,039
know I'm the wrong one apps I don't keep

2430
02:17:16,149 --> 02:17:27,789
tabs on like the entire world of gaming

2431
02:17:18,040 --> 02:17:29,140
right but what I can say is that well I

2432
02:17:27,790 --> 02:17:31,480
don't know if everywhere in the world

2433
02:17:29,139 --> 02:17:33,159
has tech development now it's pretty

2434
02:17:31,479 --> 02:17:34,270
close like I mean you can see just those

2435
02:17:33,159 --> 02:17:36,729
are the things I can name off the top of

2436
02:17:34,270 --> 02:17:38,801
my head and I don't keep track of it so

2437
02:17:36,729 --> 02:17:42,309
lots and lots and lots and lots of

2438
02:17:38,800 --> 02:17:46,569
places have computer stuff going on

2439
02:17:42,309 --> 02:17:48,341
right now and some places don't have

2440
02:17:46,569 --> 02:17:51,719
much but they probably have a little bit

2441
02:17:48,341 --> 02:17:55,059
and a lot of places have a lot

2442
02:17:51,719 --> 02:17:58,449
increasingly I would say in game

2443
02:17:55,059 --> 02:18:00,489
development a lot of it the important

2444
02:17:58,450 --> 02:18:04,030
stuff is not happening in the u.s. I

2445
02:18:00,489 --> 02:18:05,559
would say you know of the engine

2446
02:18:04,030 --> 02:18:08,260
development that happens in the u.s.

2447
02:18:05,559 --> 02:18:10,159
it's probably the minority of engine

2448
02:18:08,260 --> 02:18:14,001
development happens in the US

2449
02:18:10,159 --> 02:18:17,450
so a lot of it is extra us in in my

2450
02:18:14,001 --> 02:18:21,620
opinion again just was thinking of the

2451
02:18:17,450 --> 02:18:22,760
engines right it snowflake I think it's

2452
02:18:21,620 --> 02:18:25,541
what's called keep I can't remember the

2453
02:18:22,760 --> 02:18:30,610
name the the engine name for Ubisoft but

2454
02:18:25,540 --> 02:18:35,420
that's for sure not us Canada

2455
02:18:30,610 --> 02:18:37,581
Crytek is Europe whatever the Rockstar

2456
02:18:35,421 --> 02:18:40,461
engine wants to be called is Europe

2457
02:18:37,581 --> 02:18:42,591
right I'm 99% positive that that's not

2458
02:18:40,460 --> 02:18:43,969
much us it might be the Rockstar San

2459
02:18:42,591 --> 02:18:46,341
Diego maybe they collaborate I don't

2460
02:18:43,969 --> 02:18:48,349
know so that it's at least it's at least

2461
02:18:46,341 --> 02:18:51,081
half not us let's put it that way but I

2462
02:18:48,350 --> 02:18:54,979
don't know their exact breakdown unity

2463
02:18:51,081 --> 02:18:56,690
is not majority us although again I'm

2464
02:18:54,979 --> 02:18:59,091
sure they have US development but it's

2465
02:18:56,690 --> 02:19:00,711
just not mostly frostbite Sweden we

2466
02:18:59,091 --> 02:19:06,591
never mentioned that one right dice in

2467
02:19:00,710 --> 02:19:08,569
Sweden so you know of the engines that

2468
02:19:06,591 --> 02:19:09,680
are developed entirely in the US I'm

2469
02:19:08,569 --> 02:19:11,989
trying to think what they are but like

2470
02:19:09,680 --> 02:19:23,360
Unreal Engine is obviously important one

2471
02:19:11,989 --> 02:19:24,710
but I don't know someone was saying that

2472
02:19:23,360 --> 02:19:25,760
Rockstar San Diego does most of the

2473
02:19:24,710 --> 02:19:29,889
engine if that's the case then maybe

2474
02:19:25,760 --> 02:19:32,719
that is a u.s. engine I don't know right

2475
02:19:29,889 --> 02:19:38,689
but a lot of the engines not not done in

2476
02:19:32,719 --> 02:19:47,081
the US they're done elsewhere you know

2477
02:19:38,690 --> 02:19:47,081
Europe Canada Asia more broadly

2478
02:19:59,140 --> 02:20:04,420
I saw some codes that use the array of

2479
02:20:03,011 --> 02:20:07,540
function pointers and enums to avoid

2480
02:20:04,420 --> 02:20:09,670
branching enums like action type move

2481
02:20:07,540 --> 02:20:10,870
right move left and then function

2482
02:20:09,670 --> 02:20:14,190
pointers associated with them do you

2483
02:20:10,870 --> 02:20:14,190
think it is a good idea to do that

2484
02:20:42,370 --> 02:20:52,699
so I guess what I would say and I'm kind

2485
02:20:45,171 --> 02:20:56,421
of I guess what I would say is honestly

2486
02:20:52,700 --> 02:20:58,940
I just don't know so the reason I don't

2487
02:20:56,421 --> 02:21:02,110
know is because while I know a fair bit

2488
02:20:58,940 --> 02:21:07,761
about what happens to branches on

2489
02:21:02,110 --> 02:21:11,681
skylake on modern ecstasy for Korres to

2490
02:21:07,761 --> 02:21:21,351
be honest I have really not studied call

2491
02:21:11,681 --> 02:21:28,911
much so I don't know what happens with a

2492
02:21:21,351 --> 02:21:31,480
dependent call instruction it may be

2493
02:21:28,911 --> 02:21:35,001
that a dependent call instruction is

2494
02:21:31,479 --> 02:21:39,109
always worse because it cannot be

2495
02:21:35,001 --> 02:21:43,601
predicted so it will always stall or it

2496
02:21:39,110 --> 02:21:43,601
may be that that's not what happens and

2497
02:21:44,890 --> 02:21:54,501
so it's not always worse this is

2498
02:21:52,640 --> 02:22:00,220
something I probably should know these

2499
02:21:54,501 --> 02:22:00,220
days but it just never came up

2500
02:22:21,659 --> 02:22:36,431
so I can't really tell you I can't

2501
02:22:32,920 --> 02:22:38,771
really tell you I should go read about

2502
02:22:36,431 --> 02:22:41,190
exactly what happens in sky like on a

2503
02:22:38,771 --> 02:22:41,190
call

2504
02:22:41,370 --> 02:22:44,479
[Music]

2505
02:22:51,829 --> 02:22:55,829
so let me give you some perspective on

2506
02:22:54,209 --> 02:23:07,019
why I'm reticent to answer that question

2507
02:22:55,829 --> 02:23:14,879
without actually studying it first see

2508
02:23:07,020 --> 02:23:16,050
if we got a diagram here all right so we

2509
02:23:14,879 --> 02:23:18,000
haven't really talked about any of this

2510
02:23:16,049 --> 02:23:19,170
stuff on handmade hero largely because

2511
02:23:18,000 --> 02:23:20,818
it's not the sort of thing that I work

2512
02:23:19,170 --> 02:23:26,279
with typically so I'm really the wrong

2513
02:23:20,818 --> 02:23:29,100
one to teach you but I'll do my best if

2514
02:23:26,279 --> 02:23:32,790
you look at a diagram for how an actual

2515
02:23:29,100 --> 02:23:36,390
core of a modern x64 chip is working you

2516
02:23:32,790 --> 02:23:38,790
know it looks like this this is the one

2517
02:23:36,389 --> 02:23:41,309
for the processor that we're on right

2518
02:23:38,790 --> 02:23:43,229
now a sky like era processor right I

2519
02:23:41,309 --> 02:23:46,670
think this might be a coffee like chip

2520
02:23:43,228 --> 02:23:46,670
or maybe it's a KB like chip I don't

2521
02:23:52,520 --> 02:23:56,210
what are we on right now

2522
02:23:58,969 --> 02:24:05,850
it's a kb lake chip which is basically a

2523
02:24:02,851 --> 02:24:08,460
skylight chip there there's not a whole

2524
02:24:05,851 --> 02:24:11,450
lot of difference between the two at

2525
02:24:08,459 --> 02:24:16,020
least not that we know about right so

2526
02:24:11,450 --> 02:24:20,159
anyway I this is what it looks like for

2527
02:24:16,021 --> 02:24:22,860
the chip to actually function and if you

2528
02:24:20,159 --> 02:24:26,030
look at how it's broken down it's broken

2529
02:24:22,860 --> 02:24:29,340
down into a couple discrete parts and

2530
02:24:26,030 --> 02:24:33,960
these parts are about different things

2531
02:24:29,340 --> 02:24:36,899
you do in order to produce the results

2532
02:24:33,959 --> 02:24:39,419
of the assembly language so you have to

2533
02:24:36,899 --> 02:24:41,100
remember that in the old days if you

2534
02:24:39,420 --> 02:24:43,079
looked at assembly language you were

2535
02:24:41,101 --> 02:24:45,480
more or less looking at exactly what the

2536
02:24:43,079 --> 02:24:49,431
processor was going to do so if you took

2537
02:24:45,479 --> 02:24:53,039
like the Commodore 64 or something right

2538
02:24:49,431 --> 02:24:55,920
or an Apple 2 if you looked at the

2539
02:24:53,040 --> 02:24:58,710
assembly language that was more or less

2540
02:24:55,920 --> 02:25:03,979
a direct mapping into like what the

2541
02:24:58,709 --> 02:25:03,979
hardware was actually going to do so

2542
02:25:09,529 --> 02:25:16,220
you didn't have to think too much about

2543
02:25:12,430 --> 02:25:17,420
what was going on in the chip reading

2544
02:25:16,219 --> 02:25:19,608
the assembly language would basically

2545
02:25:17,420 --> 02:25:22,100
give you the what you needed to know

2546
02:25:19,609 --> 02:25:24,920
most of the time about what was gonna

2547
02:25:22,100 --> 02:25:27,470
happen that's completely false

2548
02:25:24,920 --> 02:25:28,939
for modern ships and the reason it's

2549
02:25:27,469 --> 02:25:32,119
completely false for modern ships is

2550
02:25:28,939 --> 02:25:35,389
really twofold you might even say

2551
02:25:32,120 --> 02:25:38,060
threefold one is that they actually

2552
02:25:35,389 --> 02:25:40,340
don't ever execute those actual

2553
02:25:38,059 --> 02:25:41,840
instructions what they do is they break

2554
02:25:40,340 --> 02:25:44,478
those instructions into smaller things

2555
02:25:41,840 --> 02:25:46,579
called micro ops that then get executed

2556
02:25:44,478 --> 02:25:49,099
and so any given instruction may

2557
02:25:46,579 --> 02:25:50,539
translate into one or more micro ops and

2558
02:25:49,100 --> 02:25:52,189
it's the micro ops that actually tell

2559
02:25:50,540 --> 02:25:54,500
you what the chips going to do there's

2560
02:25:52,189 --> 02:25:55,970
thing one thing too is they don't have

2561
02:25:54,500 --> 02:25:57,950
to execute those things in any

2562
02:25:55,969 --> 02:25:59,358
particular way they just need to

2563
02:25:57,950 --> 02:26:01,700
guarantee that the results are the same

2564
02:25:59,359 --> 02:26:04,460
as if they did and so they get a lot of

2565
02:26:01,700 --> 02:26:07,250
extra speed out of doing completely

2566
02:26:04,459 --> 02:26:08,599
arbitrary reorderings or modifications

2567
02:26:07,250 --> 02:26:12,680
to the things that you tell them to do

2568
02:26:08,600 --> 02:26:14,479
and think three is there's a big old

2569
02:26:12,680 --> 02:26:16,430
memory latency sitting on top of

2570
02:26:14,478 --> 02:26:19,728
everything so there's all this caching

2571
02:26:16,430 --> 02:26:22,579
infrastructure to try and make that

2572
02:26:19,728 --> 02:26:24,108
memory latency go away and none of that

2573
02:26:22,579 --> 02:26:25,549
was true back hill days in the old days

2574
02:26:24,109 --> 02:26:28,488
the memory ran the same speed as the

2575
02:26:25,549 --> 02:26:30,648
chip right on like a c64 I'm pretty sure

2576
02:26:28,488 --> 02:26:32,840
that like you could access one piece of

2577
02:26:30,648 --> 02:26:34,699
memory every clock cycle and the

2578
02:26:32,840 --> 02:26:36,950
instruction could only access one piece

2579
02:26:34,700 --> 02:26:38,689
of memory anyway so you were like done

2580
02:26:36,950 --> 02:26:40,220
right and you know I was never seated

2581
02:26:38,689 --> 02:26:42,470
before a programmer so take that with a

2582
02:26:40,219 --> 02:26:43,670
grain of salt but for the most part you

2583
02:26:42,469 --> 02:26:45,799
know there's probably some subtlety

2584
02:26:43,670 --> 02:26:48,228
there still because there always is but

2585
02:26:45,799 --> 02:26:49,699
for the most part you just don't think

2586
02:26:48,228 --> 02:26:51,049
about like oh I've got all these

2587
02:26:49,700 --> 02:26:52,909
different caches that are happening

2588
02:26:51,049 --> 02:26:55,429
right it was just like now there's just

2589
02:26:52,909 --> 02:26:57,829
memory and the chip the memory comes

2590
02:26:55,430 --> 02:26:59,479
into a register does something goes back

2591
02:26:57,829 --> 02:27:00,409
out to memory that's it there's no

2592
02:26:59,478 --> 02:27:02,599
in-betweens

2593
02:27:00,409 --> 02:27:06,619
there's no stalls there there's no right

2594
02:27:02,600 --> 02:27:10,189
so because of those things it's a lot

2595
02:27:06,620 --> 02:27:13,279
different now the first part the entire

2596
02:27:10,189 --> 02:27:18,889
front end of the chip as they call it

2597
02:27:13,279 --> 02:27:21,800
right this whole thing is designed to do

2598
02:27:18,889 --> 02:27:23,300
nothing other than just figure out what

2599
02:27:21,799 --> 02:27:27,279
you're going to execute

2600
02:27:23,300 --> 02:27:29,569
there's a giant huge section of the dye

2601
02:27:27,280 --> 02:27:31,730
dedicated to nothing other than just

2602
02:27:29,569 --> 02:27:36,199
figuring out what you might actually do

2603
02:27:31,729 --> 02:27:40,569
right and so why do we what's all that

2604
02:27:36,200 --> 02:27:45,110
about well it's got to take instructions

2605
02:27:40,569 --> 02:27:46,640
from memory the executable lives in

2606
02:27:45,110 --> 02:27:48,620
memory right it's got to get it out of

2607
02:27:46,640 --> 02:27:51,289
there well in the old days it just read

2608
02:27:48,620 --> 02:27:52,841
the memory nowadays not so much because

2609
02:27:51,290 --> 02:27:56,360
reading memory is incredibly expensive

2610
02:27:52,841 --> 02:27:59,450
so first we need to have a cache for to

2611
02:27:56,360 --> 02:28:02,989
the code right and that's the l1

2612
02:27:59,450 --> 02:28:04,761
instruction cache right so first we have

2613
02:28:02,989 --> 02:28:08,210
to have cache control logic that pulls

2614
02:28:04,761 --> 02:28:13,251
pages in from the the main memory and

2615
02:28:08,210 --> 02:28:15,289
keeps them around second is I just said

2616
02:28:13,251 --> 02:28:17,569
we don't ever execute instructions we

2617
02:28:15,290 --> 02:28:19,251
execute my crops which are little tiny

2618
02:28:17,569 --> 02:28:20,869
instructions you can put together to

2619
02:28:19,251 --> 02:28:23,329
make larger instructions that actually

2620
02:28:20,870 --> 02:28:25,101
occur in their structured stream we

2621
02:28:23,329 --> 02:28:27,860
don't want to do the work repetitively

2622
02:28:25,101 --> 02:28:30,261
to turn instructions into my crops

2623
02:28:27,860 --> 02:28:33,771
because it's expensive so we also catch

2624
02:28:30,261 --> 02:28:36,470
them micro ops so not only is there a

2625
02:28:33,771 --> 02:28:39,141
cache of the memory that says what the

2626
02:28:36,470 --> 02:28:41,869
actual code is the programmer wrote but

2627
02:28:39,140 --> 02:28:45,880
there's also a cache of the decode of

2628
02:28:41,870 --> 02:28:48,891
those instructions into micro ops right

2629
02:28:45,880 --> 02:28:52,251
so there's this whole process here all

2630
02:28:48,890 --> 02:28:57,261
of this crap is designed to do nothing

2631
02:28:52,251 --> 02:28:59,540
other than dump micro ops into a queue

2632
02:28:57,261 --> 02:29:04,489
that can then be issued into the back

2633
02:28:59,540 --> 02:29:09,740
end for act for actual use right this

2634
02:29:04,489 --> 02:29:13,671
part of the of the of the chip also can

2635
02:29:09,739 --> 02:29:15,940
do other things so for example I want to

2636
02:29:13,671 --> 02:29:15,940
say

2637
02:29:19,590 --> 02:29:30,000
I don't know where registered names get

2638
02:29:27,988 --> 02:29:33,029
assigned so the register alias table is

2639
02:29:30,000 --> 02:29:34,020
here so if we believe this diagram which

2640
02:29:33,029 --> 02:29:44,720
I guess we should

2641
02:29:34,020 --> 02:29:44,720
this doesn't rename things so I guess

2642
02:29:48,610 --> 02:29:53,319
so I'm sorry I'm just trying to think

2643
02:29:51,100 --> 02:29:54,819
here if you let's just to give you

2644
02:29:53,319 --> 02:29:57,549
example what I'm thinking if you were to

2645
02:29:54,819 --> 02:30:04,299
do an operation like X or e ax e ax

2646
02:29:57,549 --> 02:30:07,840
right or XR x or r ax r ax if you XOR a

2647
02:30:04,299 --> 02:30:11,259
value with itself you get 0 so X ring re

2648
02:30:07,840 --> 02:30:14,680
x2 r ax really just says that re X is

2649
02:30:11,260 --> 02:30:16,540
gonna get set to 0 right that's gonna

2650
02:30:14,680 --> 02:30:19,450
get handled specially I just don't know

2651
02:30:16,540 --> 02:30:21,070
by whom so I don't know whether some of

2652
02:30:19,450 --> 02:30:22,990
the things that happen in here are

2653
02:30:21,069 --> 02:30:24,459
actually gonna get done a little bit

2654
02:30:22,989 --> 02:30:26,350
differently before they get through the

2655
02:30:24,459 --> 02:30:28,419
micro screen or whether like X or R X

2656
02:30:26,350 --> 02:30:29,620
are exits and sort of here and then

2657
02:30:28,420 --> 02:30:33,719
handled as part of the register

2658
02:30:29,620 --> 02:30:33,720
allocation table or who knows what right

2659
02:30:35,729 --> 02:30:40,869
the these are the places where that gets

2660
02:30:39,129 --> 02:30:43,659
handled so it looks like it gets handled

2661
02:30:40,870 --> 02:30:44,800
here so anyway ignore that for now it's

2662
02:30:43,659 --> 02:30:45,659
not germane to the question I was just

2663
02:30:44,799 --> 02:30:48,159
trying to think of through my head

2664
02:30:45,659 --> 02:30:50,289
alright so after we decode everything

2665
02:30:48,159 --> 02:30:51,879
into my crops then they all get sent

2666
02:30:50,290 --> 02:30:54,730
down to here right where they actually

2667
02:30:51,879 --> 02:30:57,969
start to get worked on the way this

2668
02:30:54,729 --> 02:31:01,539
works is this this this thing right here

2669
02:30:57,969 --> 02:31:03,899
rename allocate retirement this is the

2670
02:31:01,540 --> 02:31:08,170
buffer where all the my crops go in and

2671
02:31:03,899 --> 02:31:09,969
we have to retire them in order so they

2672
02:31:08,170 --> 02:31:12,399
go into this buffer and we can fit this

2673
02:31:09,969 --> 02:31:14,049
many of them but we can execute any of

2674
02:31:12,399 --> 02:31:15,850
them in any order we want as long as we

2675
02:31:14,049 --> 02:31:21,369
only ever retire them from the back

2676
02:31:15,850 --> 02:31:23,620
right when they go into this buffer we

2677
02:31:21,370 --> 02:31:25,061
actually make up names for the registers

2678
02:31:23,620 --> 02:31:27,311
that have nothing to do with the

2679
02:31:25,060 --> 02:31:29,379
registers are actually named so for

2680
02:31:27,310 --> 02:31:34,029
example in here you might see something

2681
02:31:29,379 --> 02:31:36,670
that says like add our ax + 1

2682
02:31:34,030 --> 02:31:39,790
right which puts a new value in our ax

2683
02:31:36,670 --> 02:31:45,940
and then something that says like sub r

2684
02:31:39,790 --> 02:31:48,400
ax 2 right that sub r ax 2 those are

2685
02:31:45,940 --> 02:31:50,950
actually working on different values now

2686
02:31:48,399 --> 02:31:54,159
like they don't they don't have to be

2687
02:31:50,950 --> 02:31:57,940
our ax anymore so if someone in the

2688
02:31:54,159 --> 02:32:00,670
future says ma VAR ax 7 to overwrite our

2689
02:31:57,940 --> 02:32:02,170
ax it won't have to wait for those other

2690
02:32:00,670 --> 02:32:07,149
two instructions it'll just give

2691
02:32:02,170 --> 02:32:09,309
a new name right it just it will rename

2692
02:32:07,149 --> 02:32:11,619
all the registers from re X to some

2693
02:32:09,309 --> 02:32:14,350
actual name that's based on how many

2694
02:32:11,620 --> 02:32:16,150
internal registers we can store so even

2695
02:32:14,350 --> 02:32:17,800
though like the processor has nominally

2696
02:32:16,149 --> 02:32:20,350
like 16 general-purpose registers that

2697
02:32:17,799 --> 02:32:22,389
doesn't matter what those actually are

2698
02:32:20,350 --> 02:32:24,579
are not registers their names for

2699
02:32:22,389 --> 02:32:26,049
registers that the code needs to use to

2700
02:32:24,579 --> 02:32:28,000
tell the processor what's going on

2701
02:32:26,049 --> 02:32:29,559
they're completely irrelevant for

2702
02:32:28,000 --> 02:32:31,989
storage because the storage actually

2703
02:32:29,559 --> 02:32:35,649
happens in here on way more than 16

2704
02:32:31,989 --> 02:32:37,449
registers right so that's what's all

2705
02:32:35,649 --> 02:32:38,978
going on in here finally we have a

2706
02:32:37,450 --> 02:32:41,050
scheduler system which is what's

2707
02:32:38,978 --> 02:32:42,789
actually going to determine how the UF's

2708
02:32:41,049 --> 02:32:45,879
go this is a nightmare apparently to

2709
02:32:42,790 --> 02:32:47,320
build here you see the register file 180

2710
02:32:45,879 --> 02:32:50,349
here 168 here

2711
02:32:47,319 --> 02:32:52,959
so this renaming can rename things using

2712
02:32:50,350 --> 02:32:55,450
up to 180 different general-purpose

2713
02:32:52,959 --> 02:32:57,489
registers or 168 different vector

2714
02:32:55,450 --> 02:33:00,100
registers like the semi registers so

2715
02:32:57,489 --> 02:33:02,319
again you have 16 names for registers

2716
02:33:00,100 --> 02:33:04,630
but you actually have at least one

2717
02:33:02,319 --> 02:33:06,159
hundred and sixty-eight registers right

2718
02:33:04,629 --> 02:33:09,969
that you can actually have in flight in

2719
02:33:06,159 --> 02:33:12,909
the given time this is why it doesn't

2720
02:33:09,969 --> 02:33:15,760
matter if you like if you have like mob

2721
02:33:12,909 --> 02:33:18,159
RA X something do an operation re X

2722
02:33:15,760 --> 02:33:20,020
write it out mob rx something those are

2723
02:33:18,159 --> 02:33:21,819
not gonna stall on each other just

2724
02:33:20,020 --> 02:33:23,020
because they both use re X it just gets

2725
02:33:21,819 --> 02:33:25,000
renamed and off you go

2726
02:33:23,020 --> 02:33:26,439
so it's as if you have like an infinite

2727
02:33:25,000 --> 02:33:28,090
number of those registers effectively

2728
02:33:26,439 --> 02:33:30,239
because by the time you actually get to

2729
02:33:28,090 --> 02:33:32,228
the end of it you'll probably have

2730
02:33:30,239 --> 02:33:33,789
you'll probably have finished any

2731
02:33:32,228 --> 02:33:38,109
operations that we're using the early

2732
02:33:33,790 --> 02:33:39,760
ones and you keep going right so then we

2733
02:33:38,110 --> 02:33:42,819
actually get to the Al used actually do

2734
02:33:39,760 --> 02:33:44,260
stuff they they do the work here based

2735
02:33:42,819 --> 02:33:45,670
on the scheduler determining what's

2736
02:33:44,260 --> 02:33:47,228
available to actually at any time and

2737
02:33:45,670 --> 02:33:48,579
then finally you go out to load the

2738
02:33:47,228 --> 02:33:51,728
store buffers which communicate to main

2739
02:33:48,579 --> 02:33:53,829
memory right alright so if you think

2740
02:33:51,728 --> 02:33:56,228
about what has to happen with branch

2741
02:33:53,829 --> 02:33:59,049
prediction what ends up happening in

2742
02:33:56,228 --> 02:34:04,239
here is when we fill when we dump stuff

2743
02:33:59,049 --> 02:34:08,319
down into this into this buffer where

2744
02:34:04,239 --> 02:34:12,069
we're saying like oh you know we need to

2745
02:34:08,319 --> 02:34:16,978
do these operations at some point what's

2746
02:34:12,069 --> 02:34:29,079
going to happen is we decided

2747
02:34:16,978 --> 02:34:34,109
probably based on I'm not sure how we

2748
02:34:29,079 --> 02:34:34,110
actually tell this thing when we missed

2749
02:34:35,159 --> 02:34:39,430
so again this is why I just don't know

2750
02:34:37,659 --> 02:34:41,500
what the calls but basically what's

2751
02:34:39,430 --> 02:34:43,270
gonna happen is we're gonna be filling

2752
02:34:41,500 --> 02:34:45,219
up things into the allocation queue

2753
02:34:43,270 --> 02:34:46,960
right and we're dumping them down to the

2754
02:34:45,219 --> 02:34:49,599
out into this buffer the reorder buffer

2755
02:34:46,959 --> 02:34:52,029
at some point we're gonna get to a

2756
02:34:49,600 --> 02:34:54,430
branch instruction and that like a jump

2757
02:34:52,030 --> 02:34:56,739
instruction and that jump instruction is

2758
02:34:54,430 --> 02:34:58,590
gonna have been predicted in the decode

2759
02:34:56,739 --> 02:35:03,430
to have gone one way or the other right

2760
02:34:58,590 --> 02:35:06,040
so we will have decoded some stream

2761
02:35:03,430 --> 02:35:09,069
based on the jump either not taking the

2762
02:35:06,040 --> 02:35:12,810
jump or taking the jump if when we get

2763
02:35:09,069 --> 02:35:17,619
to retiring that instruction right if

2764
02:35:12,809 --> 02:35:20,199
that retirement goes oh crap I'm trying

2765
02:35:17,620 --> 02:35:22,270
to execute this jump I have the

2766
02:35:20,200 --> 02:35:25,329
predicted direction of the jump taking

2767
02:35:22,270 --> 02:35:27,430
or not but the actual computation of the

2768
02:35:25,329 --> 02:35:30,879
jump that I now have done and in

2769
02:35:27,430 --> 02:35:33,370
retiring says to do the opposite all of

2770
02:35:30,879 --> 02:35:37,000
the stuff that I had pending has to be

2771
02:35:33,370 --> 02:35:39,640
flushed because it's all wrong so you

2772
02:35:37,000 --> 02:35:42,069
know I'm saying so that's why a

2773
02:35:39,639 --> 02:35:45,459
mispredicted branch costs you money

2774
02:35:42,069 --> 02:35:49,600
right costs you cost you cycles because

2775
02:35:45,459 --> 02:35:51,519
I already did some of the work and now

2776
02:35:49,600 --> 02:35:52,960
instead of just flowing nicely right

2777
02:35:51,520 --> 02:35:55,899
through that work and getting the peak

2778
02:35:52,959 --> 02:35:59,619
throughput I'm expecting I have to stop

2779
02:35:55,899 --> 02:36:01,510
get rid of it and tell this guy to feed

2780
02:35:59,620 --> 02:36:05,380
me a different instruction stream that's

2781
02:36:01,510 --> 02:36:10,389
the penalty right that process is the

2782
02:36:05,379 --> 02:36:12,279
penalty I think it's 16 cycles if you

2783
02:36:10,389 --> 02:36:16,119
hit the you op cache it's 20 cycles if

2784
02:36:12,280 --> 02:36:18,090
you miss it on sky like I think some

2785
02:36:16,120 --> 02:36:21,820
around there those are averages right

2786
02:36:18,090 --> 02:36:23,530
and obviously it probably depends on how

2787
02:36:21,819 --> 02:36:25,600
big fill this buffer was like how much

2788
02:36:23,530 --> 02:36:27,070
work you done how much work you need to

2789
02:36:25,600 --> 02:36:28,779
do I know there's probably dependencies

2790
02:36:27,069 --> 02:36:30,189
in there that's hard

2791
02:36:28,779 --> 02:36:32,819
what the actual penalty will be in your

2792
02:36:30,189 --> 02:36:36,100
code but it's something like that

2793
02:36:32,818 --> 02:36:38,078
all right so what I don't know because

2794
02:36:36,100 --> 02:36:41,140
I've never looked at it is what happens

2795
02:36:38,078 --> 02:36:42,850
during a call so there's two things that

2796
02:36:41,139 --> 02:36:45,309
could happen during a call and I don't

2797
02:36:42,850 --> 02:36:46,869
know which one actually happens one is

2798
02:36:45,309 --> 02:36:51,639
that the front end as a way of

2799
02:36:46,869 --> 02:36:54,550
predicting the call so if the call is to

2800
02:36:51,639 --> 02:36:56,738
a hard-coded address that's trivial it's

2801
02:36:54,549 --> 02:37:01,658
always right because it can't change if

2802
02:36:56,738 --> 02:37:04,629
the call is to a dependent address who

2803
02:37:01,658 --> 02:37:08,020
knows right it would have to have a way

2804
02:37:04,629 --> 02:37:11,408
of predicting what that address was in

2805
02:37:08,020 --> 02:37:14,229
order to do it if it doesn't have a way

2806
02:37:11,408 --> 02:37:17,408
of predicting it then it's just gonna

2807
02:37:14,228 --> 02:37:21,129
stall here until it can compute it so

2808
02:37:17,408 --> 02:37:23,498
it's I think just as bad as Miss

2809
02:37:21,129 --> 02:37:25,568
predicting a branch because nothing can

2810
02:37:23,498 --> 02:37:27,789
happen you're just gonna full-on install

2811
02:37:25,568 --> 02:37:31,568
the chip until somebody gets that number

2812
02:37:27,789 --> 02:37:33,970
back right so all of this buffer

2813
02:37:31,568 --> 02:37:36,158
everything just goes like a train with a

2814
02:37:33,969 --> 02:37:39,068
with a the handle pulled it just

2815
02:37:36,158 --> 02:37:40,420
screeches to a halt waits for everything

2816
02:37:39,068 --> 02:37:43,748
to retire up to the point where we've

2817
02:37:40,420 --> 02:37:49,090
got the actual address to jump to to

2818
02:37:43,748 --> 02:37:52,600
call - and then we go right so if a call

2819
02:37:49,090 --> 02:37:56,408
is that way then I can't really see it

2820
02:37:52,600 --> 02:37:59,078
being better than a branch mispredict

2821
02:37:56,408 --> 02:38:02,020
but maybe it is I don't know if on the

2822
02:37:59,078 --> 02:38:03,969
other hand a call does do prediction

2823
02:38:02,020 --> 02:38:06,039
then it to me it seems like it's

2824
02:38:03,969 --> 02:38:10,299
probably the same as a branch mispredict

2825
02:38:06,039 --> 02:38:12,760
right but it may be that because it's

2826
02:38:10,299 --> 02:38:14,259
only one misra dict and that multiple

2827
02:38:12,760 --> 02:38:16,840
miss predicts like a switch for it like

2828
02:38:14,260 --> 02:38:19,539
a switch statement might be maybe it's

2829
02:38:16,840 --> 02:38:23,529
easier for it to recover from that than

2830
02:38:19,539 --> 02:38:24,970
the other way I don't know so I just

2831
02:38:23,529 --> 02:38:27,100
want to give you some like some

2832
02:38:24,969 --> 02:38:30,519
background right like that's why I don't

2833
02:38:27,100 --> 02:38:31,930
know because it's subtle and you need to

2834
02:38:30,520 --> 02:38:33,789
go find out what actually happened you

2835
02:38:31,930 --> 02:38:35,738
can't just make it up like I can't just

2836
02:38:33,789 --> 02:38:38,199
pull something out of my butt here I

2837
02:38:35,738 --> 02:38:40,180
need to actually know because unless I

2838
02:38:38,199 --> 02:38:41,300
actually know I can't reason about it in

2839
02:38:40,180 --> 02:38:43,729
any way

2840
02:38:41,299 --> 02:38:45,469
it's it's that complicated what goes on

2841
02:38:43,728 --> 02:38:46,488
in here and we didn't even cover like a

2842
02:38:45,469 --> 02:38:51,108
lot of it right I just kind of gave you

2843
02:38:46,488 --> 02:38:55,219
the bare-bones version so I don't know

2844
02:38:51,109 --> 02:38:57,460
sky like call instruction how does this

2845
02:38:55,219 --> 02:38:57,459
work

2846
02:39:31,850 --> 02:39:46,168
so I don't know all all instruction

2847
02:39:40,398 --> 02:39:47,668
skylake front and decoding one of the

2848
02:39:46,168 --> 02:39:49,299
problems I never really know where you

2849
02:39:47,668 --> 02:39:52,340
look for a lot of this information

2850
02:39:49,299 --> 02:39:52,340
[Music]

2851
02:40:03,959 --> 02:40:10,140
the best way is to ask Fabien when he's

2852
02:40:07,140 --> 02:40:11,520
not thinking about it too much and then

2853
02:40:10,140 --> 02:40:14,909
he'll accidentally just tell you the

2854
02:40:11,521 --> 02:40:16,530
answer but you have to do it like slyly

2855
02:40:14,909 --> 02:40:17,670
so it doesn't annoy him if it gets

2856
02:40:16,530 --> 02:40:19,200
frustrated with you asking too many

2857
02:40:17,670 --> 02:40:22,021
questions then he might just not answer

2858
02:40:19,200 --> 02:40:23,250
so that's the best way if you act you

2859
02:40:22,021 --> 02:40:26,400
know cat you know kind of trying to

2860
02:40:23,250 --> 02:40:28,409
slide it in in some way that he's like

2861
02:40:26,399 --> 02:40:31,020
you know go go to dinner and like

2862
02:40:28,409 --> 02:40:32,819
mention casually oh I wonder how the

2863
02:40:31,021 --> 02:40:36,710
Kazi and then he'll just tell you how it

2864
02:40:32,819 --> 02:40:36,709
works but um you know

2865
02:40:48,931 --> 02:40:52,040
so let's see

2866
02:41:10,140 --> 02:41:15,539
maybe we can just find a place for a

2867
02:41:12,790 --> 02:41:15,540
reset call

2868
02:41:46,280 --> 02:41:51,470
well this is Adam which doesn't help us

2869
02:42:05,290 --> 02:42:09,630
so you know

2870
02:42:18,360 --> 02:42:25,230
I mean it looks to me I'm gonna go out

2871
02:42:23,610 --> 02:42:28,621
on a limb here this is probably wrong

2872
02:42:25,229 --> 02:42:31,501
we're just gonna say it it looks to me

2873
02:42:28,620 --> 02:42:35,399
like indirect calls are just they

2874
02:42:31,501 --> 02:42:38,371
attempt to predict them and they also

2875
02:42:35,399 --> 02:42:41,220
try to predict the RET instruction by

2876
02:42:38,370 --> 02:42:44,310
assuming that you didn't modify the

2877
02:42:41,220 --> 02:42:46,100
return location which is in most code

2878
02:42:44,310 --> 02:42:48,540
going to be true

2879
02:42:46,101 --> 02:42:51,751
so the ret is probably perfectly

2880
02:42:48,540 --> 02:42:55,350
predicted most of the time but the call

2881
02:42:51,751 --> 02:43:00,121
it sounds like is a prediction and is

2882
02:42:55,351 --> 02:43:02,730
probably going to be wrong so I guess

2883
02:43:00,120 --> 02:43:05,189
what I would say is unless you think

2884
02:43:02,729 --> 02:43:06,960
that the place that you are calling it

2885
02:43:05,190 --> 02:43:10,531
tends to call the same thing all the

2886
02:43:06,960 --> 02:43:12,751
time a call will still be suffering the

2887
02:43:10,531 --> 02:43:14,940
same penalty so the question is whether

2888
02:43:12,751 --> 02:43:17,729
or not expanding it out into multiple

2889
02:43:14,940 --> 02:43:19,649
branches would make the predictor more

2890
02:43:17,729 --> 02:43:25,649
or less likely to be able to do a good

2891
02:43:19,649 --> 02:43:32,581
job it probably depends on how many

2892
02:43:25,649 --> 02:43:34,620
different things there are but anyway it

2893
02:43:32,581 --> 02:43:36,331
seems like my intuition is least mostly

2894
02:43:34,620 --> 02:43:38,640
correct which is to say that a call and

2895
02:43:36,331 --> 02:43:41,550
a branch are basically the same thing so

2896
02:43:38,640 --> 02:43:43,319
the question is can you get this if you

2897
02:43:41,550 --> 02:43:45,540
just assume up front it's not very

2898
02:43:43,319 --> 02:43:48,030
predictable so my branch of my call

2899
02:43:45,540 --> 02:43:51,689
they're just not very predictable then

2900
02:43:48,031 --> 02:43:53,581
the call is definitely worse if we only

2901
02:43:51,690 --> 02:43:56,610
have one branch so let's say add two

2902
02:43:53,581 --> 02:43:58,831
things I'm going to do a or B and I can

2903
02:43:56,610 --> 02:44:00,961
either use an indirect call or I can use

2904
02:43:58,831 --> 02:44:02,161
an if I think the if is probably always

2905
02:44:00,960 --> 02:44:05,720
better because they're just less work to

2906
02:44:02,161 --> 02:44:10,380
do it's still a prediction two ifs

2907
02:44:05,720 --> 02:44:14,850
versus a call harder to say three ifs

2908
02:44:10,380 --> 02:44:16,770
that are unpredictable maybe starts to

2909
02:44:14,851 --> 02:44:19,319
be worse than a call that's in directed

2910
02:44:16,771 --> 02:44:21,421
because right so I think you probably

2911
02:44:19,319 --> 02:44:24,780
have to do that timing because it's

2912
02:44:21,421 --> 02:44:28,979
which one the overhead of a call exists

2913
02:44:24,781 --> 02:44:32,480
and it's mispredicted versus I just had

2914
02:44:28,979 --> 02:44:32,479
some if statements does that make sense

2915
02:44:32,840 --> 02:44:39,299
so I just don't know how to make that an

2916
02:44:36,180 --> 02:44:42,960
arbitrary rule I probably can't what

2917
02:44:39,299 --> 02:44:44,729
you're gonna have to do is is profile

2918
02:44:42,959 --> 02:44:47,569
both ways and see which one's faster

2919
02:44:44,729 --> 02:44:52,140
unless you just know that there's like

2920
02:44:47,569 --> 02:44:53,610
300 different possibilities so the

2921
02:44:52,140 --> 02:44:57,029
number of ifs we would need is just

2922
02:44:53,610 --> 02:44:58,860
astronomical right so obviously like to

2923
02:44:57,030 --> 02:45:00,480
call it's gonna win or something does

2924
02:44:58,860 --> 02:45:03,460
that make sense

2925
02:45:00,479 --> 02:45:04,609
but if it's like close I would say

2926
02:45:03,459 --> 02:45:07,199
[Music]

2927
02:45:04,610 --> 02:45:09,150
probably have to time it or assume the

2928
02:45:07,200 --> 02:45:11,040
ifs are faster would be the two things I

2929
02:45:09,149 --> 02:45:13,350
would say does that help

2930
02:45:11,040 --> 02:45:15,500
hopefully that helps does that answer

2931
02:45:13,351 --> 02:45:15,500
your question

2932
02:45:23,350 --> 02:45:26,979
I saw John implemented compare-and-swap

2933
02:45:25,478 --> 02:45:28,599
intrinsic recently for lock-free

2934
02:45:26,978 --> 02:45:29,528
multi-threading except for implementing

2935
02:45:28,600 --> 02:45:31,328
counters and stuff

2936
02:45:29,529 --> 02:45:32,560
what is it useful for do I understand it

2937
02:45:31,328 --> 02:45:37,529
correctly that it was only useful when

2938
02:45:32,559 --> 02:45:42,478
the thread unsafe code task is small so

2939
02:45:37,529 --> 02:45:44,760
compare-and-swap is actually the

2940
02:45:42,478 --> 02:45:48,038
building block of all asynchronous

2941
02:45:44,760 --> 02:45:50,109
algorithms of any complexity it's

2942
02:45:48,039 --> 02:45:59,379
important understand that the the

2943
02:45:50,109 --> 02:46:02,619
seminal paper is is this it's by Maurice

2944
02:45:59,379 --> 02:46:04,119
Hurley from from deck basically

2945
02:46:02,619 --> 02:46:06,369
everything ever invented in computing of

2946
02:46:04,119 --> 02:46:09,159
course came from Digital Equipment

2947
02:46:06,369 --> 02:46:10,748
Corporation and all or the employees

2948
02:46:09,158 --> 02:46:14,378
thereof who then went to work at other

2949
02:46:10,748 --> 02:46:17,350
companies that's not really true but

2950
02:46:14,379 --> 02:46:20,350
it's sort of true um this will tell you

2951
02:46:17,350 --> 02:46:21,908
if you actually read and internalize at

2952
02:46:20,350 --> 02:46:23,918
least some of this paper this will

2953
02:46:21,908 --> 02:46:27,248
explain why compare-and-swap

2954
02:46:23,918 --> 02:46:28,088
I won't really go over it here but

2955
02:46:27,248 --> 02:46:30,039
compare-and-swap

2956
02:46:28,088 --> 02:46:32,648
is actually the most important

2957
02:46:30,039 --> 02:46:33,729
instruction every other algorithm could

2958
02:46:32,648 --> 02:46:35,578
be implemented with with

2959
02:46:33,728 --> 02:46:41,139
compare-and-swap

2960
02:46:35,578 --> 02:46:44,949
but of all of the multi-threaded

2961
02:46:41,139 --> 02:46:46,708
algorithms all of them can be

2962
02:46:44,949 --> 02:46:50,319
implemented with compare-and-swap

2963
02:46:46,709 --> 02:46:51,939
so it is that you burp Rimet some

2964
02:46:50,318 --> 02:46:53,708
multi-threaded algorithms can be

2965
02:46:51,939 --> 02:46:55,389
implemented without compare-and-swap by

2966
02:46:53,709 --> 02:46:58,709
using some other thing like lock

2967
02:46:55,389 --> 02:47:01,719
increment or locked swap with no compare

2968
02:46:58,709 --> 02:47:04,838
but if you're only gonna have one thing

2969
02:47:01,719 --> 02:47:09,608
it's compare and swap that is that is

2970
02:47:04,838 --> 02:47:14,289
the one primitive you can prove can do

2971
02:47:09,609 --> 02:47:17,408
everything and all other things you can

2972
02:47:14,289 --> 02:47:19,899
prove can't do everything and this is

2973
02:47:17,408 --> 02:47:23,049
the paper that proves this for you

2974
02:47:19,898 --> 02:47:24,430
hopefully that helps and it has nothing

2975
02:47:23,049 --> 02:47:28,019
to do with the size of thing you're

2976
02:47:24,430 --> 02:47:31,568
doing or the type of album or anything

2977
02:47:28,020 --> 02:47:35,439
it's just a superset so compare-and-swap

2978
02:47:31,568 --> 02:47:37,220
does everything lock increment lock swap

2979
02:47:35,439 --> 02:47:42,409
lock decrement lock

2980
02:47:37,220 --> 02:47:43,220
and these are all worse versions of

2981
02:47:42,409 --> 02:47:45,530
compare-and-swap

2982
02:47:43,220 --> 02:47:46,880
that you can only use in certain

2983
02:47:45,530 --> 02:47:48,409
circumstances but sometimes they're

2984
02:47:46,880 --> 02:47:49,959
better in those circumstances so it's

2985
02:47:48,409 --> 02:47:53,659
not you don't so you want them for

2986
02:47:49,959 --> 02:47:56,930
optimality like speed but they can't do

2987
02:47:53,659 --> 02:48:00,140
as much so in terms of capability it is

2988
02:47:56,931 --> 02:48:05,149
always compare-and-swap that you

2989
02:48:00,140 --> 02:48:06,560
actually need as for whether we use it

2990
02:48:05,149 --> 02:48:08,869
in handy here oh I don't know we

2991
02:48:06,560 --> 02:48:10,279
probably don't need it in handmade hero

2992
02:48:08,870 --> 02:48:11,301
because we can probably get away with

2993
02:48:10,280 --> 02:48:12,829
locked recruitment but I don't know we

2994
02:48:11,300 --> 02:48:18,560
might we might use it compare-and-swap

2995
02:48:12,829 --> 02:48:19,700
I think we do why aren't we using analog

2996
02:48:18,560 --> 02:48:22,640
computing instead of bits use

2997
02:48:19,700 --> 02:48:25,240
frequencies there are people who propose

2998
02:48:22,640 --> 02:48:27,890
that the reason I think is because

2999
02:48:25,239 --> 02:48:31,069
that's just not what computing group out

3000
02:48:27,890 --> 02:48:32,779
of analog computers weren't the thing

3001
02:48:31,069 --> 02:48:34,880
that caught on digital computers caught

3002
02:48:32,780 --> 02:48:37,641
on early in like the von Neumann era

3003
02:48:34,880 --> 02:48:42,050
right and there were people who proposed

3004
02:48:37,640 --> 02:48:43,341
them back then and built them so it

3005
02:48:42,050 --> 02:48:44,899
remains to be seen maybe in the future

3006
02:48:43,341 --> 02:48:47,960
it turns out we switch to analog

3007
02:48:44,899 --> 02:48:50,630
computing someday I don't know but

3008
02:48:47,959 --> 02:48:53,359
there's something straightforward about

3009
02:48:50,630 --> 02:48:56,630
saying we always clamp everything to

3010
02:48:53,360 --> 02:48:58,400
like positive or negative right that

3011
02:48:56,630 --> 02:49:02,689
allows you to yet noise is a good

3012
02:48:58,399 --> 02:49:05,149
example it allows you to create reliable

3013
02:49:02,690 --> 02:49:07,159
things that that can be reproduced right

3014
02:49:05,149 --> 02:49:11,020
and and that's kind of a fundamental

3015
02:49:07,159 --> 02:49:11,021
aspect to computing so I don't know

3016
02:49:15,170 --> 02:49:22,309
I am 50,000 lines into a C++ Android

3017
02:49:19,939 --> 02:49:23,930
engine development should I rewrite it

3018
02:49:22,309 --> 02:49:25,219
the C way how can I change my thinking

3019
02:49:23,930 --> 02:49:27,529
you at some point said that one should

3020
02:49:25,219 --> 02:49:29,929
come to the point where OOP fails and

3021
02:49:27,529 --> 02:49:31,640
then and you use the non hoop but I

3022
02:49:29,930 --> 02:49:33,738
think I am not really there yet hope

3023
02:49:31,639 --> 02:49:42,858
this is a dumb question um yeah I guess

3024
02:49:33,738 --> 02:49:45,829
what I would say is you don't need to

3025
02:49:42,859 --> 02:49:48,738
change programming habits if they're not

3026
02:49:45,829 --> 02:49:49,969
causing you a problem now sometimes

3027
02:49:48,738 --> 02:49:53,109
things can be causing your problem you

3028
02:49:49,969 --> 02:49:56,209
don't know it that's a little bit tricky

3029
02:49:53,109 --> 02:49:57,350
but assuming that you're not like what I

3030
02:49:56,209 --> 02:49:59,148
would say is are you spending a lot of

3031
02:49:57,350 --> 02:50:02,238
time thinking about how your programming

3032
02:49:59,148 --> 02:50:03,439
and if you are that's a bad sign right

3033
02:50:02,238 --> 02:50:05,510
you should be mostly thinking about the

3034
02:50:03,439 --> 02:50:06,920
problems you're trying to solve and what

3035
02:50:05,510 --> 02:50:08,600
happens typically with with OOP

3036
02:50:06,920 --> 02:50:11,629
programming is you end up thinking about

3037
02:50:08,600 --> 02:50:13,609
the OOP miss stuff a lot if you see that

3038
02:50:11,629 --> 02:50:15,438
happening that's a good time to reassess

3039
02:50:13,609 --> 02:50:17,149
but if you're just not having that

3040
02:50:15,439 --> 02:50:19,430
problem you may not need to worry about

3041
02:50:17,148 --> 02:50:25,818
it right so I guess that's the way I

3042
02:50:19,430 --> 02:50:29,500
would think about it so let's see if you

3043
02:50:25,818 --> 02:50:29,500
say Fabien did one on branch prediction

3044
02:50:34,540 --> 02:50:38,020
is this it

3045
02:50:46,380 --> 02:50:57,069
okay awesome so I've not watched this

3046
02:50:51,250 --> 02:50:59,591
yet I will watch it but um I don't know

3047
02:50:57,069 --> 02:51:02,110
if this covers the call stuff but even

3048
02:50:59,591 --> 02:51:03,550
if it doesn't just probably everything

3049
02:51:02,110 --> 02:51:06,280
in here stuff you're gonna want to know

3050
02:51:03,550 --> 02:51:08,680
fabien like spends so much time working

3051
02:51:06,280 --> 02:51:11,650
on these sorts of things that like he

3052
02:51:08,681 --> 02:51:13,360
has a ton of knowledge about how the

3053
02:51:11,649 --> 02:51:15,310
chips are actually doing what they're

3054
02:51:13,360 --> 02:51:20,141
doing because he actually has to know

3055
02:51:15,310 --> 02:51:22,149
right and so probably everyone should

3056
02:51:20,140 --> 02:51:23,619
just watch this video this is not the

3057
02:51:22,149 --> 02:51:25,119
number of views that I would prefer to

3058
02:51:23,620 --> 02:51:27,011
see on this video like that should be

3059
02:51:25,120 --> 02:51:29,980
like 10 times the number there and I

3060
02:51:27,011 --> 02:51:32,649
won't be adding 1 to it later so I would

3061
02:51:29,979 --> 02:51:33,789
say like watch that video it may not

3062
02:51:32,649 --> 02:51:35,199
probably exact so we're talking about

3063
02:51:33,790 --> 02:51:41,101
but all the things that it does cover

3064
02:51:35,200 --> 02:51:47,170
are things you will want to know right I

3065
02:51:41,101 --> 02:51:49,841
don't know if there's more in here so

3066
02:51:47,170 --> 02:51:58,120
this one on superscalar pipes stalls

3067
02:51:49,841 --> 02:52:00,341
that's that probably has it maybe again

3068
02:51:58,120 --> 02:52:03,250
one of the problems is these may not be

3069
02:52:00,341 --> 02:52:05,351
super relevant to like x64 either so he

3070
02:52:03,250 --> 02:52:07,239
again he may not really answer your

3071
02:52:05,351 --> 02:52:09,579
question directly but just I'm sure

3072
02:52:07,239 --> 02:52:12,369
these would probably be a good thing to

3073
02:52:09,579 --> 02:52:14,050
get you in the mode you need to be to

3074
02:52:12,370 --> 02:52:15,551
like think these things through cuz

3075
02:52:14,050 --> 02:52:17,289
he'll be giving you the background you

3076
02:52:15,550 --> 02:52:23,640
need to understand why it's not a simple

3077
02:52:17,290 --> 02:52:25,841
question right so check out that channel

3078
02:52:23,640 --> 02:52:27,640
maybe someone can link to it in this

3079
02:52:25,841 --> 02:52:29,890
episode i know midlow often does a

3080
02:52:27,640 --> 02:52:32,319
really good job of building links so

3081
02:52:29,890 --> 02:52:36,250
maybe link to this fabien keys and

3082
02:52:32,319 --> 02:52:42,279
stream here like this page of the videos

3083
02:52:36,250 --> 02:52:43,750
and just you know watch these it's like

3084
02:52:42,280 --> 02:52:46,000
there's no playlist but just watch these

3085
02:52:43,750 --> 02:52:50,560
four videos it'll probably be a very

3086
02:52:46,000 --> 02:52:52,060
useful 8 hours of your time probably got

3087
02:52:50,560 --> 02:52:53,369
way more information density than eight

3088
02:52:52,060 --> 02:52:54,389
hours of handmade hero

3089
02:52:53,370 --> 02:52:55,979
where we're mostly just doing

3090
02:52:54,389 --> 02:52:58,590
programming stuff and occasionally go

3091
02:52:55,978 --> 02:53:02,340
through stuff but you know so I would I

3092
02:52:58,590 --> 02:53:04,939
would give that shot all right I'm a

3093
02:53:02,340 --> 02:53:04,939
wind down

3094
02:53:16,450 --> 02:53:24,341
thank you everybody for joining me for

3095
02:53:20,591 --> 02:53:25,421
another episode of handmade hero

3096
02:53:24,341 --> 02:53:27,251
it's a pleasure cooking with you as

3097
02:53:25,421 --> 02:53:29,409
always if you want to follow on home you

3098
02:53:27,251 --> 02:53:31,091
can always pre-order the game on Hammer

3099
02:53:29,409 --> 02:53:33,040
hero or it comes the source code so you

3100
02:53:31,091 --> 02:53:34,211
can follow along with it we did not

3101
02:53:33,040 --> 02:53:35,140
actually do any hand me here today so

3102
02:53:34,210 --> 02:53:37,270
this probably won't

3103
02:53:35,140 --> 02:53:39,251
I will not actually call this day 533

3104
02:53:37,271 --> 02:53:40,631
will call next time five three three and

3105
02:53:39,251 --> 02:53:48,780
this will probably go up as a handmade

3106
02:53:40,630 --> 02:53:51,069
chat on the on the YouTube archive so

3107
02:53:48,780 --> 02:53:52,751
I'll be back next week when we're just

3108
02:53:51,069 --> 02:53:55,149
gonna start polishing the asset system

3109
02:53:52,751 --> 02:53:57,521
and just plowing assets into the game

3110
02:53:55,149 --> 02:53:58,931
basically trying to get that we just

3111
02:53:57,521 --> 02:54:01,061
want to turn the crank a few times on

3112
02:53:58,931 --> 02:54:03,700
that get the font stuff clean get the

3113
02:54:01,060 --> 02:54:05,470
cover ground cover clean obstacles you

3114
02:54:03,700 --> 02:54:07,841
know decorate the world just try to

3115
02:54:05,470 --> 02:54:09,341
really start making it so that we we

3116
02:54:07,841 --> 02:54:12,131
need to like go through and iron out

3117
02:54:09,341 --> 02:54:14,110
every last little crappy thing that we

3118
02:54:12,130 --> 02:54:15,790
did and just improve it to the point

3119
02:54:14,110 --> 02:54:17,530
where it's super super smooth to just

3120
02:54:15,790 --> 02:54:19,000
put assets in the game we've done all

3121
02:54:17,530 --> 02:54:20,860
the hard work and now we just need to

3122
02:54:19,001 --> 02:54:23,021
like turn that crank a few times so

3123
02:54:20,860 --> 02:54:24,641
we'll use the excuse of like decorating

3124
02:54:23,021 --> 02:54:26,110
our world to just like polish all the

3125
02:54:24,640 --> 02:54:27,489
pieces it'll take us a couple weeks to

3126
02:54:26,110 --> 02:54:29,801
do because we're gonna want to really

3127
02:54:27,489 --> 02:54:31,360
try and do a good job of simplifying

3128
02:54:29,800 --> 02:54:34,081
everything down and cleaning it up and

3129
02:54:31,360 --> 02:54:36,041
making it nice and really easy to use

3130
02:54:34,081 --> 02:54:38,069
that's we'll be doing for the next few

3131
02:54:36,040 --> 02:54:41,290
weeks hope to see you back here for that

3132
02:54:38,069 --> 02:54:42,970
until then have fun programming and I

3133
02:54:41,290 --> 02:54:45,040
will see everyone on the Internet oh and

3134
02:54:42,970 --> 02:54:47,739
during this week go watch Bob Ian's

3135
02:54:45,040 --> 02:54:49,180
videos watch those videos and they will

3136
02:54:47,739 --> 02:54:51,280
help you a lot understand what's going

3137
02:54:49,181 --> 02:54:53,501
on in this in the modern superscalar

3138
02:54:51,280 --> 02:54:55,480
CPUs that do like out of order and all

3139
02:54:53,501 --> 02:54:57,899
that stuff all right take it easy

3140
02:54:55,479 --> 02:54:57,899
everybody

