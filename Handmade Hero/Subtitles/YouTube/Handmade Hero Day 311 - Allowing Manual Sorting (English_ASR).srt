1
00:00:04,129 --> 00:00:07,919
hello everyone and welcome to handmade

2
00:00:06,660 --> 00:00:12,300
hear of the show we could a complete

3
00:00:07,918 --> 00:00:14,160
game live on stream we have to well I

4
00:00:12,300 --> 00:00:16,379
guess we'll pick up something that we

5
00:00:14,160 --> 00:00:18,420
started doing on friday which I wasn't

6
00:00:16,379 --> 00:00:21,929
exactly sure how I wanted it to come out

7
00:00:18,420 --> 00:00:25,350
in the end but basically this week we

8
00:00:21,929 --> 00:00:28,469
probably are going to be mostly dealing

9
00:00:25,350 --> 00:00:31,679
with getting the the front end to the

10
00:00:28,469 --> 00:00:34,109
renderer operating such that all of our

11
00:00:31,678 --> 00:00:36,179
kind of Z stuff that we want to do is

12
00:00:34,109 --> 00:00:37,769
shaking out nicely we implemented our

13
00:00:36,179 --> 00:00:39,420
sorting algorithm so our sprites are

14
00:00:37,770 --> 00:00:41,129
sorting kind of properly at this point

15
00:00:39,420 --> 00:00:43,260
but we don't really have ways of doing

16
00:00:41,128 --> 00:00:44,729
the layer slices that we wanted to do

17
00:00:43,259 --> 00:00:46,469
because we kind of decided we want to

18
00:00:44,729 --> 00:00:49,828
put things into these stacks that are

19
00:00:46,469 --> 00:00:51,210
very specifically layer based and have

20
00:00:49,829 --> 00:00:55,140
certain things happen to those layers

21
00:00:51,210 --> 00:00:58,469
independently perhaps of other things on

22
00:00:55,140 --> 00:01:01,259
the screen so we kind of have to now go

23
00:00:58,469 --> 00:01:02,820
back to the thing that we were trying to

24
00:01:01,259 --> 00:01:05,069
finish originally when we kind of went

25
00:01:02,820 --> 00:01:06,450
off on the sorting tangent which I

26
00:01:05,069 --> 00:01:09,419
suppose is not really a tangent so much

27
00:01:06,450 --> 00:01:14,850
as a prerequisite and now we got to kind

28
00:01:09,420 --> 00:01:18,090
of finish that that that swath of let's

29
00:01:14,849 --> 00:01:21,868
try to get Z correct from the you know

30
00:01:18,090 --> 00:01:26,250
from tip to toe if you will and figure

31
00:01:21,868 --> 00:01:29,609
out what that looks like because we want

32
00:01:26,250 --> 00:01:31,739
to now be able to you know put we have

33
00:01:29,609 --> 00:01:35,009
actual stuff you know actual game stuff

34
00:01:31,739 --> 00:01:37,199
happening we want all of that code now

35
00:01:35,009 --> 00:01:39,030
that we start building in terms of

36
00:01:37,200 --> 00:01:40,560
monster behaviors and rendering and all

37
00:01:39,030 --> 00:01:42,659
those sorts of things we want all of

38
00:01:40,560 --> 00:01:46,259
those to be talking the right language

39
00:01:42,659 --> 00:01:49,618
right we want to basically have a nice

40
00:01:46,259 --> 00:01:51,329
easy coherent way for entities to say

41
00:01:49,618 --> 00:01:53,670
what they're trying to render and where

42
00:01:51,328 --> 00:01:55,500
and we don't want to have a lot of cruft

43
00:01:53,670 --> 00:01:58,290
there that's quite a sort of causing

44
00:01:55,500 --> 00:02:00,450
these problems and you know it doesn't

45
00:01:58,290 --> 00:02:02,250
sound like a huge deal but it's going to

46
00:02:00,450 --> 00:02:05,490
be a lot of work so we're going to have

47
00:02:02,250 --> 00:02:07,920
to do a lot of of code organization to

48
00:02:05,489 --> 00:02:11,909
get this to all happen properly because

49
00:02:07,920 --> 00:02:13,650
you know we have to sort of look at how

50
00:02:11,909 --> 00:02:17,188
we're going to divide things into the

51
00:02:13,650 --> 00:02:18,989
slices that's step one how we're going

52
00:02:17,188 --> 00:02:20,870
to Pat you know how those slices are

53
00:02:18,989 --> 00:02:24,090
going to flow through the render system

54
00:02:20,870 --> 00:02:25,890
to the sorting and then how they're

55
00:02:24,090 --> 00:02:27,750
going to get output through the back end

56
00:02:25,889 --> 00:02:30,358
either the software renderer or open gel

57
00:02:27,750 --> 00:02:32,789
and there's some really crucial stuff

58
00:02:30,359 --> 00:02:35,640
there that decisions we have to make and

59
00:02:32,789 --> 00:02:37,019
we have to have we have a lot of kind of

60
00:02:35,639 --> 00:02:40,589
competing interests as well that are

61
00:02:37,019 --> 00:02:44,430
happening sort of all around a very

62
00:02:40,590 --> 00:02:48,120
simple example is you know we have a

63
00:02:44,430 --> 00:02:51,569
choice of where we do the sorting for

64
00:02:48,120 --> 00:02:53,549
example we could move the sorting into

65
00:02:51,568 --> 00:02:55,078
sort of more game code right now the

66
00:02:53,549 --> 00:03:00,659
sorting is kind of more happens at the

67
00:02:55,079 --> 00:03:03,659
very end right you know we probably want

68
00:03:00,658 --> 00:03:05,068
to move that sorting up a bit why do I

69
00:03:03,658 --> 00:03:07,560
say we want to move that sorting up a

70
00:03:05,068 --> 00:03:09,598
bit well if you look at what's going to

71
00:03:07,560 --> 00:03:12,180
be happening in our game code sort of

72
00:03:09,598 --> 00:03:17,789
goin forwards we definitely have this

73
00:03:12,180 --> 00:03:20,489
this sort of this sort of idea that you

74
00:03:17,789 --> 00:03:23,789
know these slices are getting prepared

75
00:03:20,489 --> 00:03:26,699
and rendered separately and you know we

76
00:03:23,789 --> 00:03:29,818
know in the game code what goes on each

77
00:03:26,699 --> 00:03:33,659
slice and we don't necessarily need to

78
00:03:29,818 --> 00:03:36,089
expose all of that kind of masa nations

79
00:03:33,658 --> 00:03:39,378
to the render layer right i mean the

80
00:03:36,090 --> 00:03:41,128
render layer has to be implemented both

81
00:03:39,378 --> 00:03:42,719
render layer has to be sort of

82
00:03:41,128 --> 00:03:44,039
implemented into places that to be

83
00:03:42,719 --> 00:03:46,590
inflamed the software render in the open

84
00:03:44,039 --> 00:03:49,019
chilla renderer it's also something that

85
00:03:46,590 --> 00:03:50,699
kind of wants to be you know sort of

86
00:03:49,019 --> 00:03:52,620
streamlined and performance-oriented at

87
00:03:50,699 --> 00:03:54,030
the at the bottom level so that we don't

88
00:03:52,620 --> 00:03:55,349
have a lot of weird complexity in there

89
00:03:54,030 --> 00:03:57,750
that we're not sure what to do with and

90
00:03:55,348 --> 00:03:59,728
blah blah blah blah so you know we don't

91
00:03:57,750 --> 00:04:01,620
really even know exactly where we want

92
00:03:59,729 --> 00:04:05,010
our sort to take place we're also having

93
00:04:01,620 --> 00:04:06,629
to pass down these sort keys right and

94
00:04:05,009 --> 00:04:09,239
we have to store those for all of the

95
00:04:06,628 --> 00:04:11,728
things all the way through the pipeline

96
00:04:09,239 --> 00:04:13,259
you know that is maybe kind of wasteful

97
00:04:11,729 --> 00:04:16,439
and not necessarily want to do so

98
00:04:13,259 --> 00:04:18,298
there's really just a lot you know it's

99
00:04:16,439 --> 00:04:20,430
it's a tremendously complex thing that

100
00:04:18,298 --> 00:04:22,199
we're about to kind of look into and so

101
00:04:20,430 --> 00:04:25,439
I suspect it will be actually quite a

102
00:04:22,199 --> 00:04:27,599
bit of thought that has to go into how

103
00:04:25,439 --> 00:04:30,329
we do that correctly

104
00:04:27,600 --> 00:04:32,129
so we'll start looking at that probably

105
00:04:30,329 --> 00:04:35,819
tomorrow i'm guessing today what I think

106
00:04:32,129 --> 00:04:37,769
we'll probably try to do is go into the

107
00:04:35,819 --> 00:04:39,839
code that we were looking at on Friday

108
00:04:37,769 --> 00:04:42,479
where we were just experimenting to see

109
00:04:39,839 --> 00:04:44,909
what would we do you know what's the

110
00:04:42,480 --> 00:04:47,430
what's the thing that we would do if we

111
00:04:44,910 --> 00:04:49,830
wanted to make it so that a character or

112
00:04:47,430 --> 00:04:52,920
something could have a bunch of sprites

113
00:04:49,829 --> 00:04:56,459
that were in pre like a pre sorted order

114
00:04:52,920 --> 00:04:59,340
and then the that sort of collection as

115
00:04:56,459 --> 00:05:02,370
a whole just got sorted in rather than

116
00:04:59,339 --> 00:05:05,069
having that collection be each

117
00:05:02,370 --> 00:05:07,170
individually fed into the sorter and get

118
00:05:05,069 --> 00:05:16,379
sorted as it normally would be using its

119
00:05:07,170 --> 00:05:17,490
sort keys so I you know there's a couple

120
00:05:16,379 --> 00:05:18,810
of different ways we could do that and

121
00:05:17,490 --> 00:05:21,420
like I said I'm not one hundred percent

122
00:05:18,810 --> 00:05:25,980
certain what the easiest way to do it is

123
00:05:21,420 --> 00:05:28,830
now what I sort of slowly kind of went

124
00:05:25,980 --> 00:05:31,439
down the at the end of the stream last

125
00:05:28,829 --> 00:05:34,639
time and you'll have to excuse this this

126
00:05:31,439 --> 00:05:39,660
was from Saturday's little a quaternion

127
00:05:34,639 --> 00:05:41,370
discussion for midlo so we were talking

128
00:05:39,660 --> 00:05:44,189
about this right here manual sort

129
00:05:41,370 --> 00:05:45,689
override and I sort of proposed that

130
00:05:44,189 --> 00:05:47,939
there were couple different things we

131
00:05:45,689 --> 00:05:50,459
could do and one of the things I pointed

132
00:05:47,939 --> 00:05:53,160
out was well you know we we might not

133
00:05:50,459 --> 00:05:55,049
want to merge these things you know and

134
00:05:53,160 --> 00:05:56,910
I was kind of going down this route of

135
00:05:55,050 --> 00:05:58,650
like oh yeah if we if we merge these

136
00:05:56,910 --> 00:06:03,240
things you know we end up in a situation

137
00:05:58,649 --> 00:06:05,639
where we can just treat them all as one

138
00:06:03,240 --> 00:06:07,259
box which is kind of nice and simple for

139
00:06:05,639 --> 00:06:08,610
this order but then the question was

140
00:06:07,259 --> 00:06:10,800
well you know if you get things like

141
00:06:08,610 --> 00:06:14,490
this yo do you really want those to be

142
00:06:10,800 --> 00:06:17,430
sorted as one single box because if they

143
00:06:14,490 --> 00:06:18,960
are sorted as a single box you include a

144
00:06:17,430 --> 00:06:20,519
lot of overlap that you wouldn't

145
00:06:18,959 --> 00:06:22,049
normally include and you're bringing a

146
00:06:20,519 --> 00:06:23,939
lot of things into the sort overlap

147
00:06:22,050 --> 00:06:26,639
region potentially that that shouldn't

148
00:06:23,939 --> 00:06:28,230
necessarily be there and so perhaps a

149
00:06:26,639 --> 00:06:29,789
saner way I was suggesting at the very

150
00:06:28,230 --> 00:06:32,939
end of last stream is that well you know

151
00:06:29,790 --> 00:06:34,740
maybe we want to still keep the boxes

152
00:06:32,939 --> 00:06:37,589
and just have some way of saying that

153
00:06:34,740 --> 00:06:40,829
they sort together so one thing that I

154
00:06:37,589 --> 00:06:50,719
was wondering is you know

155
00:06:40,829 --> 00:06:55,399
so we could do something a lot simpler

156
00:06:50,720 --> 00:06:59,520
that's kind of leaning on the sort key

157
00:06:55,399 --> 00:07:03,209
aspect of things which is to say if we

158
00:06:59,519 --> 00:07:05,430
had you know a bunch of things that look

159
00:07:03,209 --> 00:07:07,919
like this and they're all supposed to

160
00:07:05,430 --> 00:07:11,400
form one coherent sprite where the order

161
00:07:07,920 --> 00:07:13,680
is predetermined inside the sort key we

162
00:07:11,399 --> 00:07:17,069
could just give them all identical sort

163
00:07:13,680 --> 00:07:19,470
keys right so basically a B and C all

164
00:07:17,069 --> 00:07:24,599
have the same sort key exactly the same

165
00:07:19,470 --> 00:07:26,730
sort key right but then we just use the

166
00:07:24,600 --> 00:07:29,220
order they appear in the buffer to

167
00:07:26,730 --> 00:07:31,740
determine who goes in front of who which

168
00:07:29,220 --> 00:07:36,210
I think we already kind of do right

169
00:07:31,740 --> 00:07:38,610
meaning we already Traverse we already

170
00:07:36,209 --> 00:07:41,009
put things into the linked list in the

171
00:07:38,610 --> 00:07:43,170
order things appear in the buffer so it

172
00:07:41,009 --> 00:07:45,120
should generally be a stable sort if

173
00:07:43,170 --> 00:07:47,250
everything had exactly the same sort key

174
00:07:45,120 --> 00:07:49,620
in an area I think it would generally

175
00:07:47,250 --> 00:07:51,629
work to just give them identical sort

176
00:07:49,620 --> 00:07:53,579
keys I know it's a little bit odd but I

177
00:07:51,629 --> 00:07:59,269
think that's actually the case so I

178
00:07:53,579 --> 00:07:59,269
don't know that we really need to have I

179
00:07:59,750 --> 00:08:04,319
don't know that we really need to have

180
00:08:01,980 --> 00:08:05,580
anything else we can just say here's the

181
00:08:04,319 --> 00:08:07,379
screen area they each have different

182
00:08:05,579 --> 00:08:11,519
screen area but they're sort keys are

183
00:08:07,379 --> 00:08:14,670
all identical right and that's something

184
00:08:11,519 --> 00:08:18,870
we could do unfortunately I don't really

185
00:08:14,670 --> 00:08:22,650
know but I don't really know exactly

186
00:08:18,870 --> 00:08:25,980
what that sort key would be so obviously

187
00:08:22,649 --> 00:08:31,439
if it's a why sprite then we know that

188
00:08:25,980 --> 00:08:33,779
it's got sort of a zmax right and the

189
00:08:31,439 --> 00:08:36,149
why man why max is just it's just equal

190
00:08:33,779 --> 00:08:38,429
to one thing so in this case we could

191
00:08:36,149 --> 00:08:40,439
just say well it's whatever the average

192
00:08:38,429 --> 00:08:42,689
why of the thing is or maybe it's just

193
00:08:40,440 --> 00:08:45,110
whatever the first why is week or maybe

194
00:08:42,690 --> 00:08:48,090
the user just sets with the why is right

195
00:08:45,110 --> 00:08:50,879
and then the zmax presumably is just

196
00:08:48,090 --> 00:08:53,100
whoever have the maximum Z right so

197
00:08:50,879 --> 00:08:54,419
they're the merge actually does work

198
00:08:53,100 --> 00:08:56,850
pretty well

199
00:08:54,419 --> 00:09:01,860
and then on the other hand if it wasn't

200
00:08:56,850 --> 00:09:04,019
a wife right if it was a Z sprite then

201
00:09:01,860 --> 00:09:06,930
presumably you would have to sort of do

202
00:09:04,019 --> 00:09:11,909
a Wyman wimax threshold I'm not one

203
00:09:06,929 --> 00:09:14,549
hundred percent sure but either way it

204
00:09:11,909 --> 00:09:17,969
seems to me like that may actually be

205
00:09:14,549 --> 00:09:19,889
easier than daisy chaining because then

206
00:09:17,970 --> 00:09:21,420
if we don't do the Daisy training if we

207
00:09:19,889 --> 00:09:24,180
yank out the days of training that I

208
00:09:21,419 --> 00:09:26,458
added in there kind of i was like here's

209
00:09:24,179 --> 00:09:28,559
how we would do this if we just pull

210
00:09:26,458 --> 00:09:30,448
that out it seems like we could probably

211
00:09:28,559 --> 00:09:31,739
get away with actually just shoving

212
00:09:30,448 --> 00:09:35,729
these things into the sort normally

213
00:09:31,740 --> 00:09:38,159
having them always pushed in the the

214
00:09:35,730 --> 00:09:41,250
same order and then just letting the

215
00:09:38,159 --> 00:09:43,350
sort deal with it from there because the

216
00:09:41,250 --> 00:09:47,448
sort keys it will always return the

217
00:09:43,350 --> 00:09:50,790
right value from is in front of right

218
00:09:47,448 --> 00:09:52,528
whatever the tiebreaker case happens to

219
00:09:50,789 --> 00:09:58,649
be it will always return that tiebreaker

220
00:09:52,528 --> 00:10:03,360
case so I yeah I don't know what else to

221
00:09:58,649 --> 00:10:05,578
say about that other than it seems like

222
00:10:03,360 --> 00:10:07,500
it's worth a shot because it's a simple

223
00:10:05,578 --> 00:10:09,569
way to get this behavior out of the

224
00:10:07,500 --> 00:10:11,009
system and usually when you're talking

225
00:10:09,570 --> 00:10:13,500
about relatively complicated systems

226
00:10:11,009 --> 00:10:16,169
like this if you can find ways of just

227
00:10:13,500 --> 00:10:18,899
condensing down the number of unique

228
00:10:16,169 --> 00:10:20,939
things that has to happen usually it's a

229
00:10:18,899 --> 00:10:22,409
win in the long run because even if it's

230
00:10:20,940 --> 00:10:24,690
slightly slower or slightly less

231
00:10:22,409 --> 00:10:26,250
efficient to do it that way sometimes

232
00:10:24,690 --> 00:10:28,230
you end up getting that efficiency back

233
00:10:26,250 --> 00:10:30,299
anyway just by the fact that there isn't

234
00:10:28,230 --> 00:10:32,039
so much more complexity which makes your

235
00:10:30,299 --> 00:10:33,958
routine smaller and simpler you can

236
00:10:32,039 --> 00:10:35,189
optimize them better there's fittingly I

237
00:10:33,958 --> 00:10:37,919
catch better blah blah blah blah blah

238
00:10:35,190 --> 00:10:39,779
like reducing the number of things you

239
00:10:37,919 --> 00:10:42,509
have to do is sometimes leads to

240
00:10:39,778 --> 00:10:44,818
efficiency in and of itself in a whole

241
00:10:42,509 --> 00:10:45,899
myriad of ways and so I feel like you

242
00:10:44,818 --> 00:10:49,948
know what I'd like to do is try to

243
00:10:45,899 --> 00:10:52,860
condense I I don't you know I i want the

244
00:10:49,948 --> 00:10:54,929
Z's I want the sorting system to do what

245
00:10:52,860 --> 00:10:56,399
it needs to do but I don't want it to do

246
00:10:54,929 --> 00:10:58,469
it in a way that's any more complicated

247
00:10:56,399 --> 00:11:00,690
than necessary it's had to be relatively

248
00:10:58,470 --> 00:11:03,660
complicated to get reasonable results it

249
00:11:00,690 --> 00:11:05,970
seems but that doesn't mean we want any

250
00:11:03,659 --> 00:11:07,328
complexity in there that we don't need

251
00:11:05,970 --> 00:11:10,778
right

252
00:11:07,328 --> 00:11:14,558
so that's just my my sort of gut feeling

253
00:11:10,778 --> 00:11:17,558
on that so let me go ahead and sort of

254
00:11:14,558 --> 00:11:18,789
open up some code here today is day 3 11

255
00:11:17,558 --> 00:11:21,009
so if you're trying to follow along at

256
00:11:18,789 --> 00:11:22,409
home you want to open up day 3 10 source

257
00:11:21,009 --> 00:11:25,568
code that's the source code that I'm

258
00:11:22,409 --> 00:11:27,879
starting with and I believe we just have

259
00:11:25,568 --> 00:11:37,028
the standard running game here let me go

260
00:11:27,879 --> 00:11:43,539
ahead and just run the latest version we

261
00:11:37,028 --> 00:11:47,739
go ah let's here with 22 handmade there

262
00:11:43,539 --> 00:11:50,349
we go so if I'm running this right this

263
00:11:47,739 --> 00:11:52,749
is what we've currently got and the idea

264
00:11:50,350 --> 00:11:55,439
is to take a look at the hero sprite who

265
00:11:52,749 --> 00:11:58,659
right now is actually kind of doing

266
00:11:55,438 --> 00:12:00,818
sorting and probably correctly it's just

267
00:11:58,659 --> 00:12:03,009
we don't want him to be sorting we don't

268
00:12:00,818 --> 00:12:04,628
want his head to go behind his jacket

269
00:12:03,009 --> 00:12:07,058
ever even if he does move further back

270
00:12:04,629 --> 00:12:10,209
and why we just want it to always be

271
00:12:07,058 --> 00:12:14,948
above and so that's like kind of just

272
00:12:10,208 --> 00:12:17,458
you know the test case I guess is can we

273
00:12:14,948 --> 00:12:23,558
can we go ahead and fix that right and

274
00:12:17,458 --> 00:12:29,618
so if I go to let's see here if I go to

275
00:12:23,558 --> 00:12:31,208
render group we started sort of you know

276
00:12:29,619 --> 00:12:36,189
penciling in how this was going to work

277
00:12:31,208 --> 00:12:37,868
here and let's see ya so we have this

278
00:12:36,188 --> 00:12:39,458
concept of new element that we sort of

279
00:12:37,869 --> 00:12:41,649
started to introduce so normally

280
00:12:39,458 --> 00:12:45,638
everything gets a new element in the

281
00:12:41,649 --> 00:12:48,850
sort field and so I what we need to kind

282
00:12:45,639 --> 00:12:50,798
of do here is if we were going to go

283
00:12:48,850 --> 00:12:52,149
with the method I was sort of suggesting

284
00:12:50,798 --> 00:12:53,769
where I think it's maybe better that

285
00:12:52,149 --> 00:12:55,448
they all do get their own so that they'd

286
00:12:53,769 --> 00:12:58,899
sort they'd have the different screen

287
00:12:55,448 --> 00:13:01,868
areas we don't really want this this

288
00:12:58,899 --> 00:13:07,869
part of things anymore right so we still

289
00:13:01,869 --> 00:13:11,528
want that to happen but what we do need

290
00:13:07,869 --> 00:13:14,528
to do is we need to have a notion of

291
00:13:11,528 --> 00:13:16,928
sort of a right back if you will for

292
00:13:14,528 --> 00:13:19,720
these sort keys so that when we do like

293
00:13:16,928 --> 00:13:21,220
three things we can then go over right

294
00:13:19,720 --> 00:13:25,449
there sort key

295
00:13:21,220 --> 00:13:28,240
is that we were that we had with actual

296
00:13:25,448 --> 00:13:36,179
in with the actual aggregate sort key

297
00:13:28,240 --> 00:13:38,799
that has the new information right so

298
00:13:36,179 --> 00:13:40,568
what we would need to do in that case is

299
00:13:38,799 --> 00:13:43,088
sort of introduce this concept here

300
00:13:40,568 --> 00:13:50,519
which is sort of like what we have which

301
00:13:43,089 --> 00:13:50,519
is that you know a if we if we kind of

302
00:13:50,610 --> 00:13:57,639
imagine out here I don't know what the

303
00:13:54,970 --> 00:13:59,980
with the most likely place for this to

304
00:13:57,639 --> 00:14:02,409
go is but if we imagine it in the render

305
00:13:59,980 --> 00:14:05,740
group you know we did something like

306
00:14:02,409 --> 00:14:10,120
okay you know there's a there's a sort

307
00:14:05,740 --> 00:14:17,500
key or something in here oops right sort

308
00:14:10,120 --> 00:14:20,078
key no what is it sprite bound sorry so

309
00:14:17,500 --> 00:14:21,818
if we imagine there's a sprite bound and

310
00:14:20,078 --> 00:14:24,429
this is like the aggregate bound or

311
00:14:21,818 --> 00:14:26,169
something like this then if we imagine

312
00:14:24,429 --> 00:14:29,229
that we were going to do you know what

313
00:14:26,169 --> 00:14:30,490
let's not do next offset and existing

314
00:14:29,230 --> 00:14:31,688
offset or any of that stuff because

315
00:14:30,490 --> 00:14:34,149
we're not going to daisy-chain these

316
00:14:31,688 --> 00:14:37,360
things together all we actually want to

317
00:14:34,149 --> 00:14:41,578
do and let's get up there all we

318
00:14:37,360 --> 00:14:45,579
actually want to do is we want to do a

319
00:14:41,578 --> 00:14:48,128
sort of you know just bookkeeping with

320
00:14:45,578 --> 00:14:50,828
the aggregate bound to sort of merge in

321
00:14:48,129 --> 00:14:54,009
whatever is happening for this

322
00:14:50,828 --> 00:14:55,838
particular sprite right so what we want

323
00:14:54,009 --> 00:14:59,199
to do here is say like all right the

324
00:14:55,839 --> 00:15:02,529
existing and we kind of did that here it

325
00:14:59,198 --> 00:15:08,649
looks like we've got a maximum there we

326
00:15:02,528 --> 00:15:12,730
go anyway we want to have some way of

327
00:15:08,649 --> 00:15:14,500
making this track what's going on so

328
00:15:12,730 --> 00:15:16,240
that later we can use the aggregate

329
00:15:14,500 --> 00:15:19,389
bound that we get to overwrite the

330
00:15:16,240 --> 00:15:22,688
previous entries that were in whatever

331
00:15:19,389 --> 00:15:24,430
this group is so we don't want to must

332
00:15:22,688 --> 00:15:26,828
mess with the screen area at all we want

333
00:15:24,429 --> 00:15:30,578
the screen area to be different persona

334
00:15:26,828 --> 00:15:32,948
and we're leaving that here as unique

335
00:15:30,578 --> 00:15:34,299
for everybody but it's just the bounds

336
00:15:32,948 --> 00:15:36,759
that we might want to deal with

337
00:15:34,299 --> 00:15:38,669
and so if we take the rendered group and

338
00:15:36,759 --> 00:15:41,529
we say that there's an aggregate bound

339
00:15:38,669 --> 00:15:43,299
that we store in there and maybe that

340
00:15:41,529 --> 00:15:45,429
just gets updated here by just some

341
00:15:43,299 --> 00:15:46,719
quick min max calls right so that it's

342
00:15:45,429 --> 00:15:57,579
kind of getting aggregated in a

343
00:15:46,720 --> 00:16:01,420
particular way at that point we may be

344
00:15:57,580 --> 00:16:06,580
are in a position to help the the user

345
00:16:01,419 --> 00:16:08,860
out of you know to sort of make a little

346
00:16:06,580 --> 00:16:11,200
API that people who push these things on

347
00:16:08,860 --> 00:16:15,279
can use to make groups that would sort

348
00:16:11,200 --> 00:16:16,930
together right so let's take a look at

349
00:16:15,279 --> 00:16:19,209
what happens when we do a push bitmap

350
00:16:16,929 --> 00:16:21,939
call right normally when we do a push

351
00:16:19,210 --> 00:16:23,769
fit BAP call we don't get anything back

352
00:16:21,940 --> 00:16:26,380
and in this case I think we're going to

353
00:16:23,769 --> 00:16:27,579
now have to start to return stuff right

354
00:16:26,379 --> 00:16:29,259
we're going to have to actually give

355
00:16:27,580 --> 00:16:31,360
something back because the user is going

356
00:16:29,259 --> 00:16:34,450
to have to be able to overwrite the sort

357
00:16:31,360 --> 00:16:36,639
key information that they created with

358
00:16:34,450 --> 00:16:41,110
new you know they're going to basically

359
00:16:36,639 --> 00:16:43,569
have to they're going to have to go sort

360
00:16:41,110 --> 00:16:45,940
of romp over some existing data with

361
00:16:43,570 --> 00:16:47,770
with a new sort key after they're done

362
00:16:45,940 --> 00:16:49,270
right because it's not until after we

363
00:16:47,769 --> 00:16:51,129
look at what the three sprites are

364
00:16:49,269 --> 00:16:54,970
whatever that we would be able to

365
00:16:51,129 --> 00:16:56,320
actually have that sort key have know

366
00:16:54,970 --> 00:16:59,410
what the actual sort case should have

367
00:16:56,320 --> 00:17:01,120
been so the question is how we actually

368
00:16:59,409 --> 00:17:02,679
going to do that it's easy enough to

369
00:17:01,120 --> 00:17:04,480
just keep track of this here and to

370
00:17:02,679 --> 00:17:05,769
provide a reset call so basically when

371
00:17:04,480 --> 00:17:07,089
you're about to push in a bunch of

372
00:17:05,769 --> 00:17:10,059
things that you want to be sorted

373
00:17:07,089 --> 00:17:12,039
correctly or sorted in order with each

374
00:17:10,059 --> 00:17:13,929
other you just go like reset the sort

375
00:17:12,039 --> 00:17:15,909
bound and then that aggregate bound at

376
00:17:13,930 --> 00:17:18,160
the end after you've done all this right

377
00:17:15,910 --> 00:17:20,140
so you want it to do is you know the

378
00:17:18,160 --> 00:17:21,640
it's the information that you wanted is

379
00:17:20,140 --> 00:17:23,350
now in the aggregate bound and it's

380
00:17:21,640 --> 00:17:27,000
ready for you to use the question is

381
00:17:23,349 --> 00:17:29,889
just how do you get back at the sort of

382
00:17:27,000 --> 00:17:31,930
at the sort keys of the things that you

383
00:17:29,890 --> 00:17:35,230
already pushed on and so what I'm going

384
00:17:31,930 --> 00:17:38,970
to do here is again since I don't know

385
00:17:35,230 --> 00:17:41,319
oops exactly what that should look like

386
00:17:38,970 --> 00:17:43,420
I'm going to go in here to where we

387
00:17:41,319 --> 00:17:46,720
actually do our push bitmap calls and

388
00:17:43,420 --> 00:17:47,680
I'm every darn time I go there used to

389
00:17:46,720 --> 00:17:51,850
be there

390
00:17:47,680 --> 00:17:53,440
but we moved it out to entity so you can

391
00:17:51,849 --> 00:17:54,909
see us kind of doing our peace index

392
00:17:53,440 --> 00:17:57,100
thing where we go through each of the

393
00:17:54,910 --> 00:17:59,950
pieces that's in an entity and we push a

394
00:17:57,099 --> 00:18:01,809
bitmap on for it and so you know right

395
00:17:59,950 --> 00:18:05,980
here would be a totally reasonable place

396
00:18:01,809 --> 00:18:07,359
for us to go sort of do that that

397
00:18:05,980 --> 00:18:12,880
marking that these things were supposed

398
00:18:07,359 --> 00:18:14,709
to be the same sort key right but the

399
00:18:12,880 --> 00:18:18,070
question is just yet how do we actually

400
00:18:14,710 --> 00:18:22,029
do that and I'm not actually sure how we

401
00:18:18,069 --> 00:18:27,569
should do it uh it's it's kind of tricky

402
00:18:22,029 --> 00:18:27,569
right it's a it's a little bit nasty and

403
00:18:29,250 --> 00:18:33,660
actually reminds me this should be

404
00:18:37,380 --> 00:18:42,690
before I'd talk about the nastiness

405
00:18:39,970 --> 00:18:42,690
let's go ahead

406
00:18:46,140 --> 00:18:53,140
all right uh so it's a little bit nasty

407
00:18:49,869 --> 00:18:55,509
because really what I want to do is I

408
00:18:53,140 --> 00:19:00,009
want to be able to just have these sort

409
00:18:55,509 --> 00:19:03,339
keys I I want them to just kind of work

410
00:19:00,009 --> 00:19:05,049
right i I really don't I I don't really

411
00:19:03,339 --> 00:19:06,939
want to be doing this book keeping and

412
00:19:05,049 --> 00:19:09,308
so I'm kind of trying to think of what's

413
00:19:06,940 --> 00:19:11,710
the way that a is easiest for me to work

414
00:19:09,308 --> 00:19:13,539
with but be that also doesn't create a

415
00:19:11,710 --> 00:19:15,340
lot of extra copying and stuff like that

416
00:19:13,539 --> 00:19:19,240
because it's just you know it's going to

417
00:19:15,339 --> 00:19:23,740
be a little bit messy there's just a lot

418
00:19:19,240 --> 00:19:25,839
little jörg there's just a lot more sort

419
00:19:23,740 --> 00:19:27,460
of nonsense to it now when we have to

420
00:19:25,839 --> 00:19:28,899
kind of go back and visit it so I'm kind

421
00:19:27,460 --> 00:19:31,299
of thinking in my head well you know

422
00:19:28,900 --> 00:19:32,860
when these sort keys are generated you

423
00:19:31,299 --> 00:19:34,539
know do we want to try and make it so

424
00:19:32,859 --> 00:19:36,369
that we can generate them into a

425
00:19:34,539 --> 00:19:38,500
temporary thing and then copy them in or

426
00:19:36,369 --> 00:19:41,678
do I want to just keep the pointers to

427
00:19:38,500 --> 00:19:44,470
the sprite bounds and so my guess is

428
00:19:41,679 --> 00:19:47,110
like well you know since we know this is

429
00:19:44,470 --> 00:19:48,850
highly structured data I'm thinking that

430
00:19:47,109 --> 00:19:50,649
maybe what we do is we just take

431
00:19:48,849 --> 00:19:56,009
advantage of that highly structured data

432
00:19:50,650 --> 00:19:58,960
and just do a really simple like sort of

433
00:19:56,009 --> 00:20:01,929
known right position kind of an approach

434
00:19:58,960 --> 00:20:03,819
right so rather than storing the

435
00:20:01,929 --> 00:20:07,090
pointers or having it returned values or

436
00:20:03,819 --> 00:20:09,939
anything since I know I pushed you know

437
00:20:07,089 --> 00:20:12,490
n bitmaps on here what I kind of want to

438
00:20:09,940 --> 00:20:16,808
do is just say ok you know let's go

439
00:20:12,490 --> 00:20:19,150
ahead and have those piece indices let's

440
00:20:16,808 --> 00:20:20,769
go give each of them the correct

441
00:20:19,150 --> 00:20:23,440
aggregates or key so I want to do

442
00:20:20,769 --> 00:20:28,779
something like a begin aggregate sort

443
00:20:23,440 --> 00:20:30,190
key where I say oh and you know what now

444
00:20:28,779 --> 00:20:32,470
that i think about it we could do this

445
00:20:30,190 --> 00:20:33,840
without even having user oh this is ok

446
00:20:32,470 --> 00:20:36,970
this is suddenly starting to be good

447
00:20:33,839 --> 00:20:40,629
suddenly the brain is starting to kick

448
00:20:36,970 --> 00:20:41,980
in you know some days you feel old and

449
00:20:40,630 --> 00:20:42,570
then you get a little like you're like

450
00:20:41,980 --> 00:20:45,528
oh

451
00:20:42,569 --> 00:20:49,138
you know I'm not not totally useless yet

452
00:20:45,528 --> 00:20:51,509
so anyway I could do a beginner get sort

453
00:20:49,138 --> 00:20:52,888
key here on the render group so that

454
00:20:51,509 --> 00:20:54,450
lets the render group know that that's

455
00:20:52,888 --> 00:20:56,609
what I'm doing and then at the end I

456
00:20:54,450 --> 00:21:00,630
could say and the aggregates sort key

457
00:20:56,609 --> 00:21:02,668
and that would overwrite kind of all the

458
00:21:00,630 --> 00:21:03,600
things and I think I can figure out a

459
00:21:02,669 --> 00:21:05,038
way to do that that's actually

460
00:21:03,599 --> 00:21:06,449
relatively clean I think we actually

461
00:21:05,038 --> 00:21:07,740
won't have that much trouble with that

462
00:21:06,450 --> 00:21:09,058
now think about it I was thinking that

463
00:21:07,740 --> 00:21:10,679
one might be kind of copy out now I

464
00:21:09,058 --> 00:21:14,119
think about it really won't be it going

465
00:21:10,679 --> 00:21:22,409
to be pretty simple so the only question

466
00:21:14,119 --> 00:21:25,408
is how much does the user need to tell

467
00:21:22,409 --> 00:21:28,440
this thing in terms of manhandling a

468
00:21:25,409 --> 00:21:31,830
sort key one way to do it would be to

469
00:21:28,440 --> 00:21:34,048
not have any intervention at all so

470
00:21:31,829 --> 00:21:37,288
basically it would just use the min/max

471
00:21:34,048 --> 00:21:41,759
whatever kind of stuff and it would do

472
00:21:37,288 --> 00:21:45,028
the right thing right but it's a little

473
00:21:41,759 --> 00:21:48,509
bit twiki because you know since we've

474
00:21:45,028 --> 00:21:52,769
got what Z sprites why sprites remember

475
00:21:48,509 --> 00:21:55,440
if i send down 3y sprites I want the

476
00:21:52,769 --> 00:21:57,179
result to all be a why sprite but if I'm

477
00:21:55,440 --> 00:21:59,490
just doing the minimum the maximum of

478
00:21:57,179 --> 00:22:01,048
the wyman wimax or whatever it is I'm

479
00:21:59,490 --> 00:22:03,388
going to end up with a Z sprite

480
00:22:01,048 --> 00:22:06,898
accidentally because it's it will have

481
00:22:03,388 --> 00:22:08,219
created a wide in Y sprite out of these

482
00:22:06,898 --> 00:22:13,349
multiple sprites which is not what I

483
00:22:08,220 --> 00:22:16,860
really want I still want the thing to be

484
00:22:13,349 --> 00:22:19,888
a why sprite so the question is is that

485
00:22:16,859 --> 00:22:24,658
something that we like override so do we

486
00:22:19,888 --> 00:22:26,668
say like end aggregate sort key and pass

487
00:22:24,659 --> 00:22:30,240
like the sort key here and we monkey

488
00:22:26,669 --> 00:22:31,710
with the sort key and if so how do we

489
00:22:30,240 --> 00:22:33,388
monkey with a sore key you know how do

490
00:22:31,710 --> 00:22:37,048
we want to monkey with the sort key

491
00:22:33,388 --> 00:22:39,209
exactly do we need information like do

492
00:22:37,048 --> 00:22:42,298
we want to take our Wyman wimax from a

493
00:22:39,210 --> 00:22:44,730
particular person and make that be you

494
00:22:42,298 --> 00:22:46,798
know you know I don't know so that part

495
00:22:44,730 --> 00:22:49,378
is a little confusing to me so I'm not

496
00:22:46,798 --> 00:22:51,929
really sure what we want to do there but

497
00:22:49,378 --> 00:22:53,519
what I'll say is at first let's just do

498
00:22:51,929 --> 00:22:55,649
the beginning end aggregate fully

499
00:22:53,519 --> 00:22:56,400
automated and then we'll try to figure

500
00:22:55,648 --> 00:22:59,009
out how we're

501
00:22:56,400 --> 00:23:03,450
going to make it less automated as as

502
00:22:59,009 --> 00:23:06,029
things go by all right so how would we

503
00:23:03,450 --> 00:23:09,420
implement this right well begin

504
00:23:06,029 --> 00:23:12,660
aggregate sort key what I need to do is

505
00:23:09,420 --> 00:23:15,450
I need to first initialize this

506
00:23:12,660 --> 00:23:17,790
information right so my aggregate bound

507
00:23:15,450 --> 00:23:20,730
needs to be initialized to something

508
00:23:17,789 --> 00:23:23,099
that will allow me to store and lump

509
00:23:20,730 --> 00:23:24,870
allow me to scroll there you go that

510
00:23:23,099 --> 00:23:27,809
will allow me to sort of keep track of

511
00:23:24,869 --> 00:23:29,039
the mins and maxes that I get so what

512
00:23:27,809 --> 00:23:30,750
I'm going to do is the same trick we've

513
00:23:29,039 --> 00:23:34,379
done many times on handmade hero I'm

514
00:23:30,750 --> 00:23:35,670
just going to give these guys and I

515
00:23:34,380 --> 00:23:38,040
suppose I don't know if we ever defined

516
00:23:35,670 --> 00:23:39,870
that I'm going to initialize these guys

517
00:23:38,039 --> 00:23:42,000
to the worst possible values for

518
00:23:39,869 --> 00:23:45,569
whatever they are so that literally

519
00:23:42,000 --> 00:23:48,150
anyone who happens to be involved will

520
00:23:45,569 --> 00:23:49,859
override it right so i initialize the

521
00:23:48,150 --> 00:23:51,630
max to the absolute minimum value could

522
00:23:49,859 --> 00:23:53,459
possibly ever have so no matter who

523
00:23:51,630 --> 00:23:58,440
comes in they will overwrite it right so

524
00:23:53,460 --> 00:24:00,930
you'll always be expanding okay so you

525
00:23:58,440 --> 00:24:03,840
know this would initialize that that

526
00:24:00,930 --> 00:24:06,660
aggregate bound so now as you go you'll

527
00:24:03,839 --> 00:24:08,399
get exactly you'll get exactly what we

528
00:24:06,660 --> 00:24:10,290
wanted which is of the sprites that you

529
00:24:08,400 --> 00:24:14,220
push after calling begin aggregates are

530
00:24:10,289 --> 00:24:18,089
key you'll just get you'll just get all

531
00:24:14,220 --> 00:24:20,970
of that that happening right um I

532
00:24:18,089 --> 00:24:26,519
suppose there's another trick we could

533
00:24:20,970 --> 00:24:28,829
have done here mm I don't know no all

534
00:24:26,519 --> 00:24:31,619
right so I'm going to then do end our

535
00:24:28,829 --> 00:24:33,059
youth sort key and you can see why this

536
00:24:31,619 --> 00:24:34,889
one needs a little bit more information

537
00:24:33,059 --> 00:24:37,259
what we need to do here is we need to

538
00:24:34,890 --> 00:24:40,320
loop over all of the sort keys and then

539
00:24:37,259 --> 00:24:41,879
we need to assign them to our we need to

540
00:24:40,319 --> 00:24:45,179
overwrite them with our aggregate bound

541
00:24:41,880 --> 00:24:46,500
right so our aggregate bound you know we

542
00:24:45,180 --> 00:24:52,200
need something that's going to be like

543
00:24:46,500 --> 00:24:55,190
sort sprite bound entry here well

544
00:24:52,200 --> 00:24:55,190
actually probably going to be here

545
00:24:55,650 --> 00:25:00,120
so that's going to equal something and

546
00:24:57,329 --> 00:25:02,369
then we're going to want our entry sort

547
00:25:00,119 --> 00:25:04,919
key to be equal to this aggregate key

548
00:25:02,369 --> 00:25:07,649
that we've created right that's what we

549
00:25:04,920 --> 00:25:09,840
actually want to have happen so the

550
00:25:07,650 --> 00:25:12,930
question is how do we actually get this

551
00:25:09,839 --> 00:25:14,309
piece of information right and we know

552
00:25:12,930 --> 00:25:16,230
that we're going to have some kind of a

553
00:25:14,309 --> 00:25:20,990
counter here so we can probably do

554
00:25:16,230 --> 00:25:20,990
something like you know aggregate count

555
00:25:24,710 --> 00:25:29,850
so it would be you know index equals

556
00:25:27,720 --> 00:25:31,860
zero index you know less than either

557
00:25:29,849 --> 00:25:34,589
good count plus this index or something

558
00:25:31,859 --> 00:25:37,049
like this where we're looping over some

559
00:25:34,589 --> 00:25:38,909
understanding of what the aggregate

560
00:25:37,049 --> 00:25:41,460
count is and we just initially

561
00:25:38,910 --> 00:25:43,830
initialize that aggregate count to zero

562
00:25:41,460 --> 00:25:45,779
and every time we record a sprite we

563
00:25:43,829 --> 00:25:55,500
would go ahead and make that aggregate

564
00:25:45,779 --> 00:25:57,960
can increase right okay so when we're

565
00:25:55,500 --> 00:26:00,289
doing this begin aggregate end aggregate

566
00:25:57,960 --> 00:26:02,819
situation we've got that stuff happening

567
00:26:00,289 --> 00:26:08,490
so then I've got you know aggregate

568
00:26:02,819 --> 00:26:10,769
count or something like this in here and

569
00:26:08,490 --> 00:26:13,589
so if we compile this right hopefully we

570
00:26:10,769 --> 00:26:18,629
can get to the point where this is what

571
00:26:13,589 --> 00:26:23,720
we don't know what sprite bound is that

572
00:26:18,630 --> 00:26:27,540
true we don't know sprite poundings

573
00:26:23,720 --> 00:26:30,569
apparently we don't apparently you don't

574
00:26:27,539 --> 00:26:37,259
know what sprite bound is and that's a

575
00:26:30,569 --> 00:26:41,659
shame so sort is there is sort not oh my

576
00:26:37,259 --> 00:26:41,660
is sort not included anywhere in here

577
00:26:41,779 --> 00:26:56,359
I'm confused I'm confused by that that

578
00:26:52,349 --> 00:26:56,359
can't be right can it

579
00:26:56,369 --> 00:27:02,279
oh right it's not know what am I talking

580
00:26:58,650 --> 00:27:06,420
about it's not in sort it's in rendered

581
00:27:02,279 --> 00:27:08,819
on H right yeah so render dot H would

582
00:27:06,420 --> 00:27:11,580
have to actually be above render group

583
00:27:08,819 --> 00:27:13,769
dot H so what it looks like which I

584
00:27:11,579 --> 00:27:16,379
don't know that's going to fly but looks

585
00:27:13,769 --> 00:27:18,839
like that case all right so it looks

586
00:27:16,380 --> 00:27:20,670
like I jumped the gun here on putting

587
00:27:18,839 --> 00:27:22,500
the word render in front of that looks

588
00:27:20,670 --> 00:27:28,279
like it's actually just called group in

589
00:27:22,500 --> 00:27:31,470
this function who knows why why ask why

590
00:27:28,279 --> 00:27:34,950
sometimes we just named things wrong and

591
00:27:31,470 --> 00:27:38,029
so yeah so let's take a look at platform

592
00:27:34,950 --> 00:27:41,519
we've got our pound defiance here

593
00:27:38,029 --> 00:27:45,210
where's our maximum at there it is so

594
00:27:41,519 --> 00:27:48,509
I'm going to go ahead and those guys

595
00:27:45,210 --> 00:27:50,220
together and so we're all compiling now

596
00:27:48,509 --> 00:27:52,558
so really we just have to figure out how

597
00:27:50,220 --> 00:27:54,058
do we actually get these so you know

598
00:27:52,558 --> 00:27:56,460
obviously it's going to be something +

599
00:27:54,058 --> 00:27:59,670
index so we just need some way of

600
00:27:56,460 --> 00:28:02,308
knowing hey we're actually are these

601
00:27:59,670 --> 00:28:03,450
things right and I shouldn't say plus a

602
00:28:02,308 --> 00:28:05,759
nice because probably gonna be minus

603
00:28:03,450 --> 00:28:07,080
index but you get the idea where

604
00:28:05,759 --> 00:28:09,119
actually are these things well you can

605
00:28:07,079 --> 00:28:12,119
look at what happens here right you can

606
00:28:09,119 --> 00:28:14,339
see this situation where we do commands

607
00:28:12,119 --> 00:28:16,799
sort entry at and we've got sort spray

608
00:28:14,339 --> 00:28:19,049
bound and then we say like okay you know

609
00:28:16,799 --> 00:28:21,058
for each of these it's off the push

610
00:28:19,049 --> 00:28:23,250
buffer this particular location so we

611
00:28:21,058 --> 00:28:26,308
know that when we start one of these

612
00:28:23,250 --> 00:28:29,279
aggregates we could say well okay you

613
00:28:26,308 --> 00:28:32,519
know the render group aggregate you know

614
00:28:29,279 --> 00:28:35,190
first aggregate or something we know

615
00:28:32,519 --> 00:28:39,710
where it is we know exactly where it is

616
00:28:35,190 --> 00:28:39,710
right it's it's here

617
00:28:49,519 --> 00:28:54,150
right because we know when we start the

618
00:28:52,500 --> 00:28:56,150
next thing that gets pushed this is the

619
00:28:54,150 --> 00:28:59,190
location that's going to get pushed at I

620
00:28:56,150 --> 00:29:01,410
mean we know that so now we have a

621
00:28:59,190 --> 00:29:03,720
really easy way of knowing where in the

622
00:29:01,410 --> 00:29:07,140
render information this is actually

623
00:29:03,720 --> 00:29:14,039
going to live so we can just snap that

624
00:29:07,140 --> 00:29:15,390
pointer and say oh well you know guess

625
00:29:14,039 --> 00:29:19,289
we could call it first aggregate at

626
00:29:15,390 --> 00:29:21,810
probably so we now know where that is so

627
00:29:19,289 --> 00:29:24,269
if we want to then you know get where

628
00:29:21,809 --> 00:29:26,700
the start is we would say like oh it's

629
00:29:24,269 --> 00:29:28,559
the push buffer base you know plus the

630
00:29:26,700 --> 00:29:32,210
sort entry at right that's where it's

631
00:29:28,559 --> 00:29:35,490
going to be that's where it would be and

632
00:29:32,210 --> 00:29:39,980
that's the first one each one after that

633
00:29:35,490 --> 00:29:42,779
is just going to be one before it right

634
00:29:39,980 --> 00:29:46,140
so I just have to back up one each time

635
00:29:42,779 --> 00:29:49,200
I want you know the one that that comes

636
00:29:46,140 --> 00:29:54,830
next so I think that's like literally

637
00:29:49,200 --> 00:29:54,830
alder there is to it I don't know

638
00:29:55,700 --> 00:30:02,430
where's that okay commands I don't know

639
00:30:00,720 --> 00:30:03,779
that really there's anything more to it

640
00:30:02,430 --> 00:30:05,880
I think that's a pretty straightforward

641
00:30:03,779 --> 00:30:15,299
way of implementing that that should

642
00:30:05,880 --> 00:30:18,780
work right so yeah so I think now when

643
00:30:15,299 --> 00:30:22,559
we do begin key NK now we have the

644
00:30:18,779 --> 00:30:24,599
region who was affected we can go back

645
00:30:22,559 --> 00:30:28,319
and overwrite them and we're good to go

646
00:30:24,599 --> 00:30:30,929
now we just have one more problem which

647
00:30:28,319 --> 00:30:33,720
is we need some way of determining what

648
00:30:30,930 --> 00:30:35,490
we should actually do here right we know

649
00:30:33,720 --> 00:30:39,120
we always want to increment the

650
00:30:35,490 --> 00:30:42,920
aggregate count but once we are in an

651
00:30:39,119 --> 00:30:45,689
aggregate we want some information about

652
00:30:42,920 --> 00:30:47,700
what's going on to figure out how

653
00:30:45,690 --> 00:30:49,320
whether we should expand the Y range or

654
00:30:47,700 --> 00:30:53,220
average the Y range or who knows what

655
00:30:49,319 --> 00:30:55,200
else right we should do I'm not sure so

656
00:30:53,220 --> 00:30:56,970
you know I guess the first thing I would

657
00:30:55,200 --> 00:30:58,529
say is well

658
00:30:56,970 --> 00:31:00,870
you know we could do a thing where we

659
00:30:58,529 --> 00:31:10,769
say you know if the group aggregate

660
00:31:00,869 --> 00:31:12,569
count you know is equal to 0 then we

661
00:31:10,769 --> 00:31:15,359
know that the aggregate boundary alee

662
00:31:12,569 --> 00:31:17,788
just be the sort key so if it's the

663
00:31:15,359 --> 00:31:20,579
first one you know just copy it then if

664
00:31:17,788 --> 00:31:22,740
its subsequent ones then we just need to

665
00:31:20,579 --> 00:31:25,470
know easy to Z sprite or is it a why

666
00:31:22,740 --> 00:31:29,159
sprite right so we kind of want to do

667
00:31:25,470 --> 00:31:31,558
here like okay if you know if and I

668
00:31:29,159 --> 00:31:40,260
don't know if the render stuff has this

669
00:31:31,558 --> 00:31:44,460
in there is why sprite this is in front

670
00:31:40,259 --> 00:31:46,558
of ya and so you can kind of see like

671
00:31:44,460 --> 00:31:48,480
this is the test right for whether

672
00:31:46,558 --> 00:31:52,200
something zazzy sprite or a why sprite

673
00:31:48,480 --> 00:31:56,000
on so we kind of want you know like a

674
00:31:52,200 --> 00:31:56,000
thing that's like is why sprite

675
00:32:10,319 --> 00:32:18,428
and I guess technically this is an izze

676
00:32:13,058 --> 00:32:19,720
sprite so whatever but point being when

677
00:32:18,429 --> 00:32:20,980
we pass one of these fry pans we're

678
00:32:19,720 --> 00:32:22,389
gonna say like is it as East right well

679
00:32:20,980 --> 00:32:25,329
it is if these two things aren't equal

680
00:32:22,388 --> 00:32:27,668
to each other it's like okay so then

681
00:32:25,329 --> 00:32:29,710
what we could say is well you know is it

682
00:32:27,669 --> 00:32:33,970
a Z sprite this thing that we've gotten

683
00:32:29,710 --> 00:32:38,740
so far and if it is as East right maybe

684
00:32:33,970 --> 00:32:41,380
we assert that the thing we're getting

685
00:32:38,740 --> 00:32:43,690
is also a Z sprite because if you tried

686
00:32:41,380 --> 00:32:45,789
to aggregate y and z sprites together

687
00:32:43,690 --> 00:32:46,899
that wouldn't work right I don't think

688
00:32:45,788 --> 00:32:50,190
there's any way you could do that

689
00:32:46,898 --> 00:32:53,288
because dozin actually need to be sorted

690
00:32:50,190 --> 00:32:55,028
separately they can't be sorted as one

691
00:32:53,288 --> 00:32:58,298
unit because there is no meaning we

692
00:32:55,028 --> 00:33:01,119
don't have meaning for that so assuming

693
00:32:58,298 --> 00:33:03,308
it's a Z sprite we would assert that and

694
00:33:01,119 --> 00:33:05,648
assuming that it is not as East bright

695
00:33:03,308 --> 00:33:07,418
than we would assert that it's not and

696
00:33:05,648 --> 00:33:09,788
then we would have sort of two different

697
00:33:07,419 --> 00:33:12,130
operations that we would do here so in

698
00:33:09,788 --> 00:33:14,349
the case that it is a Z sprite then we

699
00:33:12,130 --> 00:33:16,120
want to do I think exactly what we're

700
00:33:14,349 --> 00:33:18,759
looking at here right we just want to

701
00:33:16,119 --> 00:33:21,058
expand all the bounds of this thing and

702
00:33:18,759 --> 00:33:24,278
move it up to the higher level right

703
00:33:21,058 --> 00:33:26,558
whichever level is higher in the case

704
00:33:24,278 --> 00:33:29,019
where it's a y sprite I think you know

705
00:33:26,558 --> 00:33:31,750
probably we just don't do anything to

706
00:33:29,019 --> 00:33:33,399
the Y pounds because it's like well you

707
00:33:31,750 --> 00:33:35,019
know you just figure wherever your first

708
00:33:33,398 --> 00:33:37,329
why was that's where we assume you are

709
00:33:35,019 --> 00:33:39,548
now maybe later we find we want to do

710
00:33:37,329 --> 00:33:42,839
something more complicated than that but

711
00:33:39,548 --> 00:33:42,839
at the moment you know who knows

712
00:33:50,440 --> 00:33:58,250
that's weird under why the indentation

713
00:33:56,450 --> 00:34:02,650
isn't working there so in a while since

714
00:33:58,250 --> 00:34:02,650
I've seen a indent bug and for cutter

715
00:34:08,170 --> 00:34:18,740
matter if I did something wrong huh

716
00:34:14,079 --> 00:34:20,840
weird anyway let's see is these sprites

717
00:34:18,739 --> 00:34:24,109
yes the identifiers not found that is

718
00:34:20,840 --> 00:34:27,769
true I gotta put that guy up in the H

719
00:34:24,110 --> 00:34:31,880
file where people can see him so yeah so

720
00:34:27,769 --> 00:34:33,110
that is the aggregate sorting now we got

721
00:34:31,880 --> 00:34:35,660
to go through and make sure that we're

722
00:34:33,110 --> 00:34:40,820
actually doing this correctly but we'll

723
00:34:35,659 --> 00:34:42,379
see okay so our assert fired there oh so

724
00:34:40,820 --> 00:34:46,760
here's one thing that's a slight prob

725
00:34:42,380 --> 00:34:49,820
Medicare is I suppose since this is

726
00:34:46,760 --> 00:34:54,260
operating all the time when we're doing

727
00:34:49,820 --> 00:34:56,510
aggregation I guess I don't know we kind

728
00:34:54,260 --> 00:34:59,900
of need some way to say that we're not

729
00:34:56,510 --> 00:35:02,390
aggregating so that we won't do any of

730
00:34:59,900 --> 00:35:05,210
this in the cases where we're not

731
00:35:02,389 --> 00:35:09,529
supposed to be aggregating for lack of a

732
00:35:05,210 --> 00:35:11,599
better term so I'm not sure what we want

733
00:35:09,530 --> 00:35:17,740
to do there but probably just like I

734
00:35:11,599 --> 00:35:17,739
guess you know if group aggregating

735
00:35:20,480 --> 00:35:27,650
something like this and then when we

736
00:35:26,119 --> 00:35:31,070
take a look at the render group we just

737
00:35:27,650 --> 00:35:41,599
have to have in there somewhere there

738
00:35:31,070 --> 00:35:42,980
has to be a like aggregating because

739
00:35:41,599 --> 00:35:44,299
otherwise we're going to yet otherwise

740
00:35:42,980 --> 00:35:46,309
it's going to try to aggregate all the

741
00:35:44,300 --> 00:35:47,840
sprites that we ever push on right and

742
00:35:46,309 --> 00:35:49,849
obviously you're going to get an

743
00:35:47,840 --> 00:35:51,170
assertion in there when somebody pitches

744
00:35:49,849 --> 00:35:54,230
a wife's right in disease right back to

745
00:35:51,170 --> 00:35:56,510
back so what we want to do now that's

746
00:35:54,230 --> 00:35:59,000
actually not a bad thing for just for

747
00:35:56,510 --> 00:36:00,950
our own sanity as well because we can

748
00:35:59,000 --> 00:36:03,199
say you know assert that we're not

749
00:36:00,949 --> 00:36:05,358
aggregating when you try to do it begin

750
00:36:03,199 --> 00:36:08,210
so we know you didn't like tied you to

751
00:36:05,358 --> 00:36:10,789
begins in a row and similarly when you

752
00:36:08,210 --> 00:36:12,440
do an end we can do the opposite we can

753
00:36:10,789 --> 00:36:14,358
say like Oh assert that you were

754
00:36:12,440 --> 00:36:18,980
aggregating one and then we turn it to

755
00:36:14,358 --> 00:36:20,599
false so that seems reasonable okay so

756
00:36:18,980 --> 00:36:22,809
now we've got to figure out if any of

757
00:36:20,599 --> 00:36:26,118
that makes any sense and I don't know

758
00:36:22,809 --> 00:36:27,769
but what I will say is first off it

759
00:36:26,119 --> 00:36:30,230
doesn't look like it works properly so

760
00:36:27,769 --> 00:36:31,550
that's not my favorite thing or at least

761
00:36:30,230 --> 00:36:34,550
it doesn't look like it worked right off

762
00:36:31,550 --> 00:36:36,650
the bat because as you can see it does

763
00:36:34,550 --> 00:36:39,019
switch the order of those three who are

764
00:36:36,650 --> 00:36:41,090
all on the same oh wait no they're not I

765
00:36:39,019 --> 00:36:42,380
lied those are actually two separate

766
00:36:41,090 --> 00:36:45,710
entities right now we're not sending

767
00:36:42,380 --> 00:36:49,130
them down as aggregate so the question

768
00:36:45,710 --> 00:36:52,099
is just do the does the torso in the

769
00:36:49,130 --> 00:36:53,869
Cape ever change and it looks like they

770
00:36:52,099 --> 00:36:56,750
don't at the moment so for all we know

771
00:36:53,869 --> 00:36:58,250
this actually is working ok because and

772
00:36:56,750 --> 00:37:00,380
now we just have to make sure that the

773
00:36:58,250 --> 00:37:04,400
head actually gets aggregated on there

774
00:37:00,380 --> 00:37:10,059
somehow right which right now we don't

775
00:37:04,400 --> 00:37:13,840
have really a clean way to do but yeah

776
00:37:10,059 --> 00:37:17,570
so right that actually looks that

777
00:37:13,840 --> 00:37:20,210
actually looks somewhat workable so I'm

778
00:37:17,570 --> 00:37:22,300
actually okay with that solution and

779
00:37:20,210 --> 00:37:25,670
furthermore I think there's a certain

780
00:37:22,300 --> 00:37:33,380
value to that solution as well which is

781
00:37:25,670 --> 00:37:34,430
that it means it also means that you

782
00:37:33,380 --> 00:37:36,920
don't have to

783
00:37:34,429 --> 00:37:39,289
have like when we do that is aggregating

784
00:37:36,920 --> 00:37:42,139
it gives us a nice back door because we

785
00:37:39,289 --> 00:37:44,389
can also save whatever that aggregate

786
00:37:42,139 --> 00:37:46,219
key is like we could add some stuff

787
00:37:44,389 --> 00:37:49,068
there to save what that aggregate key

788
00:37:46,219 --> 00:37:50,750
was and then you could put people into

789
00:37:49,068 --> 00:37:52,579
that aggregate route just by using that

790
00:37:50,750 --> 00:37:56,599
key even if you did them much later

791
00:37:52,579 --> 00:37:58,940
right and that seems a lot better so i

792
00:37:56,599 --> 00:38:00,980
think that means we can safely pull out

793
00:37:58,940 --> 00:38:03,170
the daisy chaining stuff so i'm gonna

794
00:38:00,980 --> 00:38:07,909
nuke it because it's just like i said

795
00:38:03,170 --> 00:38:10,280
more complication than what I then then

796
00:38:07,909 --> 00:38:16,039
I think is necessary so I think we can

797
00:38:10,280 --> 00:38:18,710
say that the the entry struct doesn't

798
00:38:16,039 --> 00:38:23,750
need to have that in it so where is that

799
00:38:18,710 --> 00:38:26,119
guy render and tree so we just get rid

800
00:38:23,750 --> 00:38:29,440
of the next field and now we just look

801
00:38:26,119 --> 00:38:37,309
at everybody who was doing that and

802
00:38:29,440 --> 00:38:40,400
let's see wait that was the clip wrecked

803
00:38:37,309 --> 00:38:42,589
I don't want the clip wrecked I want the

804
00:38:40,400 --> 00:38:46,639
render entry the render entry header

805
00:38:42,588 --> 00:38:50,210
thing there it is so it's next offset

806
00:38:46,639 --> 00:38:58,219
it's that guy so that guy needs to go

807
00:38:50,210 --> 00:39:00,500
away and now i think the the while

808
00:38:58,219 --> 00:39:02,389
header offset stuff doesn't need to be

809
00:39:00,500 --> 00:39:05,380
here right because it's only going to

810
00:39:02,389 --> 00:39:05,379
load one thing each time

811
00:39:13,699 --> 00:39:21,279
okay and I assume that means that in

812
00:39:18,469 --> 00:39:35,119
handmade rendered we didn't do that yet

813
00:39:21,280 --> 00:39:36,590
but I don't actually know see it was

814
00:39:35,119 --> 00:39:38,869
that just an infinite loop we had made

815
00:39:36,590 --> 00:39:40,430
there yeah way to go on that glad we

816
00:39:38,869 --> 00:39:44,989
never ran that that would not have

817
00:39:40,429 --> 00:39:47,869
worked all right so yeah that all looks

818
00:39:44,989 --> 00:39:51,109
good and now we've gotten rid of that

819
00:39:47,869 --> 00:39:54,980
feature that we don't actually want so

820
00:39:51,110 --> 00:39:56,990
that's good okay so now we just have a

821
00:39:54,980 --> 00:39:59,690
question of well what order do we

822
00:39:56,989 --> 00:40:01,009
actually put these things in and as far

823
00:39:59,690 --> 00:40:02,630
as I'm concerned we'll just put them in

824
00:40:01,010 --> 00:40:03,920
the order that's easiest for the render

825
00:40:02,630 --> 00:40:05,360
deal with so if that's the order it's

826
00:40:03,920 --> 00:40:07,720
doing with now we'll just say that we

827
00:40:05,360 --> 00:40:11,059
put them we draw in whatever the

828
00:40:07,719 --> 00:40:15,529
opposite order of the things come in so

829
00:40:11,059 --> 00:40:18,409
like if we go to world mode and we look

830
00:40:15,530 --> 00:40:22,670
at the code for creating a hero wherever

831
00:40:18,409 --> 00:40:27,109
that is at peace when it does these

832
00:40:22,670 --> 00:40:30,369
peace at auditions I think we just say

833
00:40:27,110 --> 00:40:30,370
like okay you know that's

834
00:40:35,599 --> 00:40:41,460
that's that and now those should always

835
00:40:38,940 --> 00:40:45,869
be in that order and they do appear to

836
00:40:41,460 --> 00:40:47,519
be okay so now we can kind of move on to

837
00:40:45,869 --> 00:40:50,250
our second problem which is more a

838
00:40:47,519 --> 00:40:53,759
problem for the entity system than than

839
00:40:50,250 --> 00:40:55,619
it is for anybody else which is how

840
00:40:53,760 --> 00:40:58,230
would we communicate something very

841
00:40:55,619 --> 00:41:00,119
twiki and out of bands such as the head

842
00:40:58,230 --> 00:41:05,130
should always be over the body if

843
00:41:00,119 --> 00:41:06,960
they're together right it's kind of it's

844
00:41:05,130 --> 00:41:08,490
kind of annoying right but you can see

845
00:41:06,960 --> 00:41:10,800
the artifact that I want to get rid of

846
00:41:08,489 --> 00:41:13,289
which is just as the head moves behind

847
00:41:10,800 --> 00:41:17,340
where the body would be in Z you get

848
00:41:13,289 --> 00:41:21,090
that that nasty little um glitch there

849
00:41:17,340 --> 00:41:28,039
right where they pop and so I just I

850
00:41:21,090 --> 00:41:30,240
need some way of articulating that right

851
00:41:28,039 --> 00:41:31,949
and that's gonna be a little tricky now

852
00:41:30,239 --> 00:41:33,779
I don't know what have I got I got 15

853
00:41:31,949 --> 00:41:35,460
minutes so i think i'm even though we're

854
00:41:33,780 --> 00:41:37,050
not really looking at the entity system

855
00:41:35,460 --> 00:41:38,579
right now like right we're supposed to

856
00:41:37,050 --> 00:41:39,780
be doing mostly sorting stuff and this

857
00:41:38,579 --> 00:41:41,549
doesn't have a lot to do with the

858
00:41:39,780 --> 00:41:43,350
sorting i kind of want to bounce back

859
00:41:41,550 --> 00:41:44,789
there and just see where i might put

860
00:41:43,349 --> 00:41:47,610
this or how i might make this happen

861
00:41:44,789 --> 00:41:49,619
because again it might inform how the

862
00:41:47,610 --> 00:41:51,300
api shakes out on the render group side

863
00:41:49,619 --> 00:41:53,849
and so i just want to see where that

864
00:41:51,300 --> 00:41:57,900
would go in the meantime i also am

865
00:41:53,849 --> 00:41:59,730
wondering i think we added so like some

866
00:41:57,900 --> 00:42:03,180
of these things like this is just

867
00:41:59,730 --> 00:42:05,219
nonsense stuff here right these are just

868
00:42:03,179 --> 00:42:08,819
I think these are literally just there

869
00:42:05,219 --> 00:42:11,009
for no reason other than to try and make

870
00:42:08,820 --> 00:42:13,559
the sorting work so since the sorting

871
00:42:11,010 --> 00:42:18,240
actually works now I think we can just

872
00:42:13,559 --> 00:42:21,929
get rid of those kind of TWiki nonsense

873
00:42:18,239 --> 00:42:23,669
values that were there for no reason

874
00:42:21,929 --> 00:42:25,319
other than sorting because now it just

875
00:42:23,670 --> 00:42:27,869
always sorts correctly since we're

876
00:42:25,320 --> 00:42:29,190
actually doing it semantically and we

877
00:42:27,869 --> 00:42:30,509
know that we can just say like hey

878
00:42:29,190 --> 00:42:33,960
that's gonna that's going to be that way

879
00:42:30,510 --> 00:42:35,340
and off we go and so that's good so yes

880
00:42:33,960 --> 00:42:38,010
so we know that that's all going to be

881
00:42:35,340 --> 00:42:41,519
reasonable now the thing that i don't

882
00:42:38,010 --> 00:42:43,650
know like i said is how to do the head

883
00:42:41,519 --> 00:42:45,119
and the reason i don't know that is

884
00:42:43,650 --> 00:42:47,400
because those two things happen

885
00:42:45,119 --> 00:42:53,429
separately the head and the body are set

886
00:42:47,400 --> 00:42:57,150
for entities potentially and they don't

887
00:42:53,429 --> 00:43:00,298
necessarily know how to you know how to

888
00:42:57,150 --> 00:43:03,720
find each other or whatever uh so I

889
00:43:00,298 --> 00:43:05,460
guess my question is just well you know

890
00:43:03,719 --> 00:43:07,169
is that something that I should just

891
00:43:05,460 --> 00:43:10,170
hack is there a particular way that I

892
00:43:07,170 --> 00:43:13,710
should be doing that cleanly and and I

893
00:43:10,170 --> 00:43:21,298
don't know my guess is that the easiest

894
00:43:13,710 --> 00:43:22,920
thing to do is probably is is that's why

895
00:43:21,298 --> 00:43:25,199
the easier not the easiest the best

896
00:43:22,920 --> 00:43:30,539
thing to do is probably to have some way

897
00:43:25,199 --> 00:43:32,730
of specifying a like hey I need this

898
00:43:30,539 --> 00:43:37,559
entity to be in front of this entity or

899
00:43:32,730 --> 00:43:43,309
something thing that we can just put

900
00:43:37,559 --> 00:43:46,380
into the into the system that's my guess

901
00:43:43,309 --> 00:43:48,150
because in you know in cases where we

902
00:43:46,380 --> 00:43:50,039
have all the pieces together it's

903
00:43:48,150 --> 00:43:52,349
obviously much more efficient I think to

904
00:43:50,039 --> 00:43:53,940
just do it the way we just did it but in

905
00:43:52,349 --> 00:43:55,410
cases where we just have these weird

906
00:43:53,940 --> 00:43:57,659
special case things like oh you know

907
00:43:55,409 --> 00:43:59,848
maybe we want some code that says if

908
00:43:57,659 --> 00:44:01,318
this guy is standing on this thing then

909
00:43:59,849 --> 00:44:02,730
make sure he's in front of it or

910
00:44:01,318 --> 00:44:05,250
whatever you know if we've got that kind

911
00:44:02,730 --> 00:44:07,108
of one-off hacky code that we're sort of

912
00:44:05,250 --> 00:44:09,630
just doing when we want to patch up

913
00:44:07,108 --> 00:44:14,308
little weird to dville things that don't

914
00:44:09,630 --> 00:44:15,809
make any sense any other way really I'm

915
00:44:14,309 --> 00:44:18,210
not sure we want to have to do anything

916
00:44:15,809 --> 00:44:20,869
beyond just the basic statement of the

917
00:44:18,210 --> 00:44:25,019
facts should be true so I don't know

918
00:44:20,869 --> 00:44:27,660
let's take a look so inside brain when

919
00:44:25,019 --> 00:44:29,009
we do execute brain right we've got our

920
00:44:27,659 --> 00:44:30,598
different brain types here and we got

921
00:44:29,010 --> 00:44:32,700
the brain hero the brain hero is the

922
00:44:30,599 --> 00:44:35,609
thing that that looks at you know a

923
00:44:32,699 --> 00:44:39,838
bunch of stuff the probably the the head

924
00:44:35,608 --> 00:44:42,858
the glove the body all this stuff and so

925
00:44:39,838 --> 00:44:45,808
it knows whether the body in the head or

926
00:44:42,858 --> 00:44:47,818
it it would know it would be the place

927
00:44:45,809 --> 00:44:50,640
to go like oh yeah i know that you know

928
00:44:47,818 --> 00:44:53,308
these two guys are together or whatever

929
00:44:50,639 --> 00:44:55,379
but you know i don't know so i just

930
00:44:53,309 --> 00:45:00,589
don't know how i want it to sort of

931
00:44:55,380 --> 00:45:00,588
signal this piece of information

932
00:45:01,440 --> 00:45:05,679
obviously I can sort of put something

933
00:45:03,760 --> 00:45:07,810
into the entity structures to say like

934
00:45:05,679 --> 00:45:19,049
hey you know when you go to render make

935
00:45:07,809 --> 00:45:19,049
sure you do this thing but I don't know

936
00:45:20,969 --> 00:45:41,949
this is a tricky one so i suppose what

937
00:45:27,909 --> 00:45:45,609
will yeah so if we obsess not

938
00:45:41,949 --> 00:45:47,079
functionable so if we come to the end of

939
00:45:45,610 --> 00:45:49,990
the index you can see as we run through

940
00:45:47,079 --> 00:45:55,569
here where we sort of do our updatable

941
00:45:49,989 --> 00:45:57,549
movement mode stuff and all that

942
00:45:55,570 --> 00:46:00,070
nonsense when we come to do our

943
00:45:57,550 --> 00:46:02,560
rendering here you can see this is the

944
00:46:00,070 --> 00:46:06,309
routine that's this is the part of the

945
00:46:02,559 --> 00:46:10,059
routine that's relevant right what we

946
00:46:06,309 --> 00:46:14,469
want to do here is say oh well we want

947
00:46:10,059 --> 00:46:19,150
to have whatever the sort key is that

948
00:46:14,469 --> 00:46:22,209
comes out of this thing we also want to

949
00:46:19,150 --> 00:46:23,860
romp over the head the floating head

950
00:46:22,210 --> 00:46:26,320
entity and anything that has to do with

951
00:46:23,860 --> 00:46:29,160
the head we want it to get that sort key

952
00:46:26,320 --> 00:46:29,160
as well

953
00:46:34,110 --> 00:46:38,769
and actually now I think about we don't

954
00:46:37,030 --> 00:46:40,420
even want that because since we don't

955
00:46:38,769 --> 00:46:42,039
know what order of those things will be

956
00:46:40,420 --> 00:46:43,900
pushed in we really do need something

957
00:46:42,039 --> 00:46:50,429
that says hey this goes in front of that

958
00:46:43,900 --> 00:46:50,430
or whatever so hmm

959
00:47:10,320 --> 00:47:20,550
I can't say I have a particularly good

960
00:47:14,159 --> 00:47:22,170
idea of how we'd want to do that the

961
00:47:20,550 --> 00:47:32,460
fundamental problem that I have with it

962
00:47:22,170 --> 00:47:34,170
is just that you know I'm pushing these

963
00:47:32,460 --> 00:47:35,760
things down to the renderer and the

964
00:47:34,170 --> 00:47:43,829
renderer is the thing that has the

965
00:47:35,760 --> 00:47:46,920
sorting but I have no way of really

966
00:47:43,829 --> 00:47:52,949
telling the renderer about something it

967
00:47:46,920 --> 00:47:54,659
hasn't seen yet so if I'm the body and I

968
00:47:52,949 --> 00:47:57,409
happen to be the thing that gets rent

969
00:47:54,659 --> 00:48:00,929
you know push to the renderer first at

970
00:47:57,409 --> 00:48:02,699
that point I could say hey there's a

971
00:48:00,929 --> 00:48:04,769
head that's going to be coming and it

972
00:48:02,699 --> 00:48:07,109
needs to go first how do i forward

973
00:48:04,769 --> 00:48:11,099
reference that right that's a tricky

974
00:48:07,110 --> 00:48:13,470
problem uh or similarly what if the head

975
00:48:11,099 --> 00:48:16,500
already happened I then have to say oh I

976
00:48:13,469 --> 00:48:19,379
have you know you saw this guy it was

977
00:48:16,500 --> 00:48:23,940
the head I need to go behind him or

978
00:48:19,380 --> 00:48:25,860
whatever right and so it's kind of

979
00:48:23,940 --> 00:48:28,920
tricky because since we don't know what

980
00:48:25,860 --> 00:48:30,329
order these things are going in and you

981
00:48:28,920 --> 00:48:31,860
know I don't know that we want to start

982
00:48:30,329 --> 00:48:33,029
trying to enforce the order that they're

983
00:48:31,860 --> 00:48:36,660
go in because that doesn't necessarily

984
00:48:33,030 --> 00:48:44,400
seem like really a good thing either I

985
00:48:36,659 --> 00:48:47,029
just feel like it's a little it's a

986
00:48:44,400 --> 00:48:47,030
little bit subtle

987
00:48:50,389 --> 00:49:02,338
so if you think through or if you if you

988
00:48:54,748 --> 00:49:04,408
look at in render dot CPP so you know

989
00:49:02,338 --> 00:49:06,509
when we actually go through and build

990
00:49:04,409 --> 00:49:09,809
the sprite graph which is this code

991
00:49:06,509 --> 00:49:13,259
right here you can kind of see where we

992
00:49:09,809 --> 00:49:23,130
do this sort of edge you know push the

993
00:49:13,259 --> 00:49:30,449
push truck for the edge uh I I would

994
00:49:23,130 --> 00:49:36,209
suppose that we might be able to make

995
00:49:30,449 --> 00:49:41,719
something which sort of just manhandles

996
00:49:36,208 --> 00:49:44,719
that edge code in a forward-looking way

997
00:49:41,719 --> 00:49:44,719
so

998
00:49:54,900 --> 00:49:59,160
so how about this

999
00:50:09,860 --> 00:50:25,900
a manual edge specification how about

1000
00:50:23,719 --> 00:50:25,899
this

1001
00:50:28,768 --> 00:50:36,939
when we go to construct the edge graph

1002
00:50:32,699 --> 00:50:40,149
obviously we could do something where it

1003
00:50:36,940 --> 00:50:43,409
we have a side band that's some

1004
00:50:40,150 --> 00:50:48,099
information that's like manual edges

1005
00:50:43,409 --> 00:50:50,440
right and in that list of manual edges

1006
00:50:48,099 --> 00:50:54,369
we would have like you know here's one

1007
00:50:50,440 --> 00:51:01,869
and here's one to sprite these point2

1008
00:50:54,369 --> 00:51:04,150
like some sprite bounds and we want

1009
00:51:01,869 --> 00:51:06,460
these to you know say these two guys

1010
00:51:04,150 --> 00:51:08,528
should have the you know is in front of

1011
00:51:06,460 --> 00:51:09,970
edge it's like it's like this guy is in

1012
00:51:08,528 --> 00:51:13,929
front of this guy or something like that

1013
00:51:09,969 --> 00:51:17,348
right so if we were to do something like

1014
00:51:13,929 --> 00:51:20,739
that our problem is it's pretty easy to

1015
00:51:17,349 --> 00:51:23,200
choose which guy we specify this on

1016
00:51:20,739 --> 00:51:25,479
right because we're right in the code

1017
00:51:23,199 --> 00:51:28,058
and we know that the head always goes in

1018
00:51:25,480 --> 00:51:29,500
front of the body it's our choice we

1019
00:51:28,059 --> 00:51:31,240
could specify that on the body we could

1020
00:51:29,500 --> 00:51:33,250
specify it on the head we as programmers

1021
00:51:31,239 --> 00:51:35,919
it's not like harder or easier either

1022
00:51:33,250 --> 00:51:40,028
way to do that so we can pick which one

1023
00:51:35,920 --> 00:51:43,809
so since edges are flown off of the the

1024
00:51:40,028 --> 00:51:46,809
is in front of I believe right its edge

1025
00:51:43,809 --> 00:51:48,579
it's a is in front of be the its next

1026
00:51:46,809 --> 00:51:51,700
the same front is what it's spun off of

1027
00:51:48,579 --> 00:51:53,559
so you know if this is the front guy and

1028
00:51:51,699 --> 00:51:55,989
this is the back guy then what we would

1029
00:51:53,559 --> 00:51:58,119
do is say well whoever is the front guy

1030
00:51:55,989 --> 00:52:00,459
it's pretty easy to just make the call

1031
00:51:58,119 --> 00:52:02,588
at that point so when we do the is in

1032
00:52:00,460 --> 00:52:09,369
front of we make the call on the guy

1033
00:52:02,588 --> 00:52:12,670
who's the front guy not the bad guy so

1034
00:52:09,369 --> 00:52:15,099
then the problem becomes how do we fill

1035
00:52:12,670 --> 00:52:17,259
in the back who's the bad guy because we

1036
00:52:15,099 --> 00:52:19,329
don't know when we do that we don't

1037
00:52:17,259 --> 00:52:24,699
necessarily know where that guy is we

1038
00:52:19,329 --> 00:52:28,869
have no idea right we have no idea so

1039
00:52:24,699 --> 00:52:32,588
what we could do is we could use some

1040
00:52:28,869 --> 00:52:35,519
kind of a slotting scheme right you know

1041
00:52:32,588 --> 00:52:38,619
again it's kind of complicated but I

1042
00:52:35,518 --> 00:52:41,709
can't think of anything better what we

1043
00:52:38,619 --> 00:52:44,369
could say is just well there's somebody

1044
00:52:41,710 --> 00:52:47,470
all right there's going to be a dude and

1045
00:52:44,369 --> 00:52:49,750
you're gonna see a dude with tag you

1046
00:52:47,469 --> 00:52:51,669
know three or something and when you see

1047
00:52:49,750 --> 00:52:53,829
a guy with tag three that's the guy I'm

1048
00:52:51,670 --> 00:52:56,108
going to be in front of we count how

1049
00:52:53,829 --> 00:52:59,079
many of these special ones we have and

1050
00:52:56,108 --> 00:53:02,289
we just have a little like side band

1051
00:52:59,079 --> 00:53:04,420
structure at short time when we loop

1052
00:53:02,289 --> 00:53:08,440
through all of the nodes we just go

1053
00:53:04,420 --> 00:53:11,170
ahead and say oh when we see this guy

1054
00:53:08,440 --> 00:53:14,320
he's number three we just stick him into

1055
00:53:11,170 --> 00:53:20,710
the you know well well we would stick

1056
00:53:14,320 --> 00:53:22,990
them into bin three right then when we

1057
00:53:20,710 --> 00:53:24,789
process this edge list we just go and

1058
00:53:22,989 --> 00:53:27,088
say oh we're looking for guy three who

1059
00:53:24,789 --> 00:53:32,320
is guy three he's this guy off we go

1060
00:53:27,088 --> 00:53:33,759
right it's a little bit of extra

1061
00:53:32,320 --> 00:53:45,960
bookkeeping but I think it would work

1062
00:53:33,760 --> 00:53:45,960
and yeah I think that's my suggestion

1063
00:53:47,710 --> 00:53:53,019
and it we're out of time so we'll go to

1064
00:53:50,719 --> 00:53:53,019
the Q&amp;A

1065
00:54:00,889 --> 00:54:05,659
Q&amp;A begins now

1066
00:54:46,768 --> 00:54:56,219
hello I see no questions I guess it'll

1067
00:54:53,528 --> 00:54:56,219
be a quick Q&amp;A

1068
00:55:26,190 --> 00:55:31,200
so literally no questions

1069
00:56:14,269 --> 00:56:19,070
all right well if there's no questions

1070
00:56:15,949 --> 00:56:22,819
then I guess we're done how do I get

1071
00:56:19,070 --> 00:56:25,809
inst about to ask a question I don't

1072
00:56:22,820 --> 00:56:25,809
know how to make him do it

1073
00:56:53,989 --> 00:57:01,459
it's about insta BOTS kind of a national

1074
00:56:56,630 --> 00:57:05,890
treasure what can I say all right let's

1075
00:57:01,460 --> 00:57:07,940
close it down short Q&amp;A is always fine

1076
00:57:05,889 --> 00:57:08,960
thank you everyone for joining me from

1077
00:57:07,940 --> 00:57:10,760
those sort of handmade here at some

1078
00:57:08,960 --> 00:57:12,710
pleasure coding with you as always if

1079
00:57:10,760 --> 00:57:14,570
you would like to follow along at home

1080
00:57:12,710 --> 00:57:15,920
you can always peer to the game on hand

1081
00:57:14,570 --> 00:57:19,400
made hiro de or it come to the source

1082
00:57:15,920 --> 00:57:22,610
code so you can follow along we also

1083
00:57:19,400 --> 00:57:24,079
have a forum site that you can go to ask

1084
00:57:22,610 --> 00:57:25,430
questions a patreon page you want

1085
00:57:24,079 --> 00:57:27,110
support the video series a schedule

1086
00:57:25,429 --> 00:57:30,618
about the tweets the schedule at you and

1087
00:57:27,110 --> 00:57:33,289
an episode guide that you can use to

1088
00:57:30,619 --> 00:57:35,420
catch up on past episodes that's about

1089
00:57:33,289 --> 00:57:38,360
it I'll be back tomorrow 5 p.m. pacific

1090
00:57:35,420 --> 00:57:40,010
daylight time until then have fun coding

1091
00:57:38,360 --> 00:57:43,000
and i will see you guys on the internet

1092
00:57:40,010 --> 00:57:43,000
take it easy everyone

