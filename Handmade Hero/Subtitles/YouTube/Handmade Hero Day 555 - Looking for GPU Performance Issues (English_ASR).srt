1
00:00:01,399 --> 00:00:06,690
hello everyone and welcome to handmade

2
00:00:04,200 --> 00:00:08,069
Hero show recode a complete game live on

3
00:00:06,690 --> 00:00:09,179
stream wanted to mention something at

4
00:00:08,069 --> 00:00:10,769
start a stream and we can actually

5
00:00:09,179 --> 00:00:15,359
probably use this for some stuff I

6
00:00:10,769 --> 00:00:17,690
wanted to do on the stream so yesterday

7
00:00:15,359 --> 00:00:22,469
we kind of made the mistake of thinking

8
00:00:17,690 --> 00:00:24,269
that the crash message from render doc

9
00:00:22,469 --> 00:00:25,589
was because render doc was crashing

10
00:00:24,268 --> 00:00:27,059
which I didn't really understand but

11
00:00:25,589 --> 00:00:29,339
turns out they just display the error

12
00:00:27,059 --> 00:00:31,528
messages weird if your app crashes it

13
00:00:29,339 --> 00:00:35,219
says that render doc crashed which I

14
00:00:31,528 --> 00:00:38,308
don't understand why that is exactly n

15
00:00:35,219 --> 00:00:39,270
site does the same thing and so we

16
00:00:38,308 --> 00:00:42,269
thought they weren't working properly

17
00:00:39,270 --> 00:00:43,469
but then we actually figured out further

18
00:00:42,270 --> 00:00:46,559
in the show that that was what was

19
00:00:43,469 --> 00:00:47,489
happening we just set the path wrong so

20
00:00:46,558 --> 00:00:48,839
there's a couple things I want to do

21
00:00:47,488 --> 00:00:50,128
first of all I want to avoid that

22
00:00:48,840 --> 00:00:51,719
problem in the future and we've never

23
00:00:50,128 --> 00:00:53,669
really done any hardening on hand here

24
00:00:51,719 --> 00:00:54,840
so I wanted today just do brief like not

25
00:00:53,670 --> 00:00:57,000
really much hardening but it's a little

26
00:00:54,840 --> 00:00:59,340
bit where like if you run the program

27
00:00:57,000 --> 00:01:01,409
and it's not set up properly it would

28
00:00:59,340 --> 00:01:03,420
produce some error message so that we

29
00:01:01,409 --> 00:01:05,308
know just again in case we're using a

30
00:01:03,420 --> 00:01:06,510
utility like this on stream I want us to

31
00:01:05,308 --> 00:01:10,530
be able to see that it's not working

32
00:01:06,510 --> 00:01:11,430
properly and not just crash right and

33
00:01:10,530 --> 00:01:12,359
then we might as well do that anyway

34
00:01:11,430 --> 00:01:13,710
because you know you don't want that to

35
00:01:12,359 --> 00:01:15,090
be the user experience so when we go to

36
00:01:13,709 --> 00:01:17,579
ship we would need something like this

37
00:01:15,090 --> 00:01:18,900
anyway so it's not wasted and the second

38
00:01:17,579 --> 00:01:20,399
thing I want to do is then today we can

39
00:01:18,900 --> 00:01:22,710
render render dock a little bit learn

40
00:01:20,400 --> 00:01:24,000
how to use it and use it to do a few

41
00:01:22,709 --> 00:01:28,048
more clean up things on the graphics

42
00:01:24,000 --> 00:01:30,659
pipeline that I'd wanted to do as we

43
00:01:28,049 --> 00:01:33,299
roll into the lighting pixel doing pixel

44
00:01:30,659 --> 00:01:36,118
shader lighting so I feel like we kind

45
00:01:33,299 --> 00:01:38,759
of do all of this today and do some nice

46
00:01:36,118 --> 00:01:40,680
stuff with it so hopefully that'll be

47
00:01:38,759 --> 00:01:42,629
good and also I was really really

48
00:01:40,680 --> 00:01:44,549
impressed with the tech support on

49
00:01:42,629 --> 00:01:46,920
render doc maybe it's because they know

50
00:01:44,549 --> 00:01:49,799
who we are or something but I don't know

51
00:01:46,920 --> 00:01:51,659
if it's the normal result but like that

52
00:01:49,799 --> 00:01:54,030
when we submitted the thing they

53
00:01:51,659 --> 00:01:56,670
literally sent back something within

54
00:01:54,030 --> 00:01:58,950
minutes it was in my email I noticed

55
00:01:56,670 --> 00:02:00,359
that after I ended the series under the

56
00:01:58,950 --> 00:02:02,100
stream yesterday where they were just

57
00:02:00,359 --> 00:02:05,250
like oh this just happens if there was a

58
00:02:02,099 --> 00:02:06,688
null pointer dereference it could be

59
00:02:05,250 --> 00:02:07,978
because of render doc or it could be

60
00:02:06,688 --> 00:02:09,628
because of you if you need me to track

61
00:02:07,978 --> 00:02:12,719
it down or how abstract it down let me

62
00:02:09,628 --> 00:02:13,649
know like I never get tech support like

63
00:02:12,719 --> 00:02:16,889
that from hardly and

64
00:02:13,650 --> 00:02:20,730
thing except the like the stuff that was

65
00:02:16,889 --> 00:02:23,279
handmade like like remedy or for coder

66
00:02:20,729 --> 00:02:27,628
right like so it was a really really

67
00:02:23,280 --> 00:02:30,449
good experience and I was very impressed

68
00:02:27,628 --> 00:02:32,250
by the level of I mean I'd pay anything

69
00:02:30,449 --> 00:02:35,158
for that software right I would I would

70
00:02:32,250 --> 00:02:37,229
buy something like render doc and you

71
00:02:35,158 --> 00:02:38,789
know that they just give it for free and

72
00:02:37,229 --> 00:02:40,828
then we're supporting it so I don't know

73
00:02:38,789 --> 00:02:42,298
how that works if they're supported by

74
00:02:40,829 --> 00:02:43,439
somebody or just really like doing

75
00:02:42,299 --> 00:02:45,629
another goodness of their heart but

76
00:02:43,438 --> 00:02:47,549
either way I thought that was really

77
00:02:45,628 --> 00:02:51,989
impressive and that made me want to use

78
00:02:47,549 --> 00:02:55,469
it right because I kind of felt like if

79
00:02:51,989 --> 00:02:56,549
I did the work of reporting bugs and

80
00:02:55,469 --> 00:02:57,840
stuff like that that somebody might

81
00:02:56,549 --> 00:02:59,250
actually fix them which is pretty

82
00:02:57,840 --> 00:03:01,319
different from the experience I get with

83
00:02:59,250 --> 00:03:02,878
say Microsoft Windows where you know I

84
00:03:01,318 --> 00:03:04,078
can report bugs all day long and even

85
00:03:02,878 --> 00:03:05,068
have conference calls with the people

86
00:03:04,079 --> 00:03:06,209
who make it and they don't even

87
00:03:05,068 --> 00:03:08,458
understand what I'm talking about most

88
00:03:06,209 --> 00:03:09,959
of the time parentheses I'm I'm looking

89
00:03:08,459 --> 00:03:11,609
at you Visual Studio thank God we don't

90
00:03:09,959 --> 00:03:14,819
have to use that program anymore all

91
00:03:11,609 --> 00:03:18,569
right so let's go ahead and get started

92
00:03:14,818 --> 00:03:20,539
here on that process so here's our

93
00:03:18,568 --> 00:03:25,378
insight we got that working just fine

94
00:03:20,539 --> 00:03:27,030
render doc we've got here and again it's

95
00:03:25,378 --> 00:03:28,530
just another you watch me install

96
00:03:27,030 --> 00:03:30,180
yesterday if you didn't see that show

97
00:03:28,530 --> 00:03:31,079
you can go back and watch but I mean all

98
00:03:30,180 --> 00:03:32,489
we did was download it from the internet

99
00:03:31,079 --> 00:03:33,569
it's pretty easy down the internet you

100
00:03:32,489 --> 00:03:37,469
install it there wasn't really much else

101
00:03:33,568 --> 00:03:38,759
to do so if you go into render doc I you

102
00:03:37,469 --> 00:03:40,650
know you'll get the icon here I'm gonna

103
00:03:38,759 --> 00:03:42,239
go ahead and pin it to the taskbar like

104
00:03:40,650 --> 00:03:44,459
I've done for some of these that way you

105
00:03:42,239 --> 00:03:48,239
know we just have along here all the

106
00:03:44,459 --> 00:03:50,519
stuff that we tend to launch at all so

107
00:03:48,239 --> 00:03:53,219
I'm gonna go ahead and click on this and

108
00:03:50,519 --> 00:03:56,879
get render doc up here and then I'm

109
00:03:53,219 --> 00:03:58,680
gonna launch our process and we're gonna

110
00:03:56,878 --> 00:04:01,449
do a few things with that so if we open

111
00:03:58,680 --> 00:04:03,010
oops I don't want open it capture

112
00:04:01,449 --> 00:04:05,169
it's launched application that's what it

113
00:04:03,009 --> 00:04:07,629
is so I'm gonna do load last settings

114
00:04:05,169 --> 00:04:10,719
this is what they are and as you can see

115
00:04:07,629 --> 00:04:13,840
here now if with the with the directory

116
00:04:10,719 --> 00:04:15,789
path set properly it runs just fine so

117
00:04:13,840 --> 00:04:17,858
what I want to do is go ahead and fix

118
00:04:15,789 --> 00:04:19,810
the problem that we had which is that if

119
00:04:17,858 --> 00:04:23,669
you give it the wrong directory I don't

120
00:04:19,810 --> 00:04:26,560
know that for example or who knows where

121
00:04:23,670 --> 00:04:29,650
you just get you get garbage so in fact

122
00:04:26,560 --> 00:04:36,220
I don't know if we in the data directory

123
00:04:29,649 --> 00:04:38,709
here yeah so if we actually try to

124
00:04:36,220 --> 00:04:43,090
launch from here you can see that that's

125
00:04:38,709 --> 00:04:46,149
when the crash happens uh and yeah you

126
00:04:43,089 --> 00:04:48,819
know the the thing and and I actually

127
00:04:46,149 --> 00:04:50,229
mentioned this to them in text for it

128
00:04:48,819 --> 00:04:52,899
and I think they were like oh yeah we

129
00:04:50,230 --> 00:04:56,290
should I was just like this makes it

130
00:04:52,899 --> 00:04:58,839
sound like render dock thinks it crashed

131
00:04:56,290 --> 00:05:00,700
you know it doesn't sound like an

132
00:04:58,839 --> 00:05:03,639
indeterminant crash and if it said like

133
00:05:00,699 --> 00:05:06,039
if it just said something like if your

134
00:05:03,639 --> 00:05:08,740
app axes that you know has done anything

135
00:05:06,040 --> 00:05:10,270
wrong you'll get the same dialog box so

136
00:05:08,740 --> 00:05:12,340
you know we don't know where are you

137
00:05:10,269 --> 00:05:14,228
crashed if you're pretty sure you didn't

138
00:05:12,339 --> 00:05:15,489
you didn't crash then go ahead then then

139
00:05:14,228 --> 00:05:17,349
I would have probably gone like oh I

140
00:05:15,490 --> 00:05:20,800
should go look and make sure we're not

141
00:05:17,350 --> 00:05:22,660
doing anything wrong there right so I

142
00:05:20,800 --> 00:05:26,500
think that probably needs to get fixed

143
00:05:22,660 --> 00:05:28,630
but other than that so I would like to

144
00:05:26,500 --> 00:05:29,829
make it so that our app doesn't crash

145
00:05:28,629 --> 00:05:31,629
when you give it the wrong directory

146
00:05:29,829 --> 00:05:33,849
just some a little bit of hardening so

147
00:05:31,629 --> 00:05:35,620
that the initial setup state if it

148
00:05:33,850 --> 00:05:37,750
happens to be busted it doesn't do

149
00:05:35,620 --> 00:05:40,389
anything particularly bad and so what

150
00:05:37,750 --> 00:05:41,918
I'd like to do is just spend a couple

151
00:05:40,389 --> 00:05:45,279
seconds getting that working it's not

152
00:05:41,918 --> 00:05:47,529
super hard we just need to add some way

153
00:05:45,279 --> 00:05:49,359
of reporting stuff when we can't load

154
00:05:47,529 --> 00:05:51,009
our fonts like normally we would render

155
00:05:49,360 --> 00:05:52,360
stuff to the screen ourselves but like

156
00:05:51,009 --> 00:05:54,009
if we don't even have the ability to

157
00:05:52,360 --> 00:05:56,979
load any fonts then we certainly can't

158
00:05:54,009 --> 00:05:58,269
do that and there's other kinds of

159
00:05:56,978 --> 00:06:00,099
critical failures like if we couldn't

160
00:05:58,269 --> 00:06:03,579
open an OpenGL context or something like

161
00:06:00,100 --> 00:06:08,110
that so given the fact that no no no no

162
00:06:03,579 --> 00:06:10,149
no no don't open you I just delete that

163
00:06:08,110 --> 00:06:14,110
program off the hard drive it's such a

164
00:06:10,149 --> 00:06:15,099
horrible pile alright so if I actually

165
00:06:14,110 --> 00:06:17,530
load up handmade

166
00:06:15,100 --> 00:06:19,510
and run it normally what I want to do

167
00:06:17,529 --> 00:06:21,579
now is be able to set in the session

168
00:06:19,509 --> 00:06:23,409
here if we actually get this and put

169
00:06:21,579 --> 00:06:26,019
this to a very bad location that won't

170
00:06:23,410 --> 00:06:28,270
have any of our files in it I just want

171
00:06:26,019 --> 00:06:31,259
to start fixing this and so what you can

172
00:06:28,269 --> 00:06:33,669
see here is we get this kind of crash

173
00:06:31,259 --> 00:06:35,199
that's because we can't load the font

174
00:06:33,670 --> 00:06:37,569
that we normally use to display stuff

175
00:06:35,199 --> 00:06:40,420
that's the one thing that we we always

176
00:06:37,569 --> 00:06:47,199
need to have right and so what I'd like

177
00:06:40,420 --> 00:06:49,540
to do is just have some way of making of

178
00:06:47,199 --> 00:06:51,699
sort of notifying or yeah just just

179
00:06:49,540 --> 00:06:54,610
having some errors I'll remove this I'll

180
00:06:51,699 --> 00:06:56,610
fix this crash and then we'll try to fix

181
00:06:54,610 --> 00:07:00,460
the errors and we'll go from there so

182
00:06:56,610 --> 00:07:02,170
let's first take a look at I'm gonna go

183
00:07:00,459 --> 00:07:03,729
into debug mode and see what the easiest

184
00:07:02,170 --> 00:07:07,480
way is to make sure we don't crash on no

185
00:07:03,730 --> 00:07:08,500
font load and then we also kind of need

186
00:07:07,480 --> 00:07:10,689
to pop up an error message telling

187
00:07:08,500 --> 00:07:12,100
people what is wrong and since we can't

188
00:07:10,689 --> 00:07:13,360
we don't have fonts in this case we're

189
00:07:12,100 --> 00:07:18,850
gonna have to use like a system message

190
00:07:13,360 --> 00:07:20,889
box of some kind right okay so here you

191
00:07:18,850 --> 00:07:22,750
go with get font info and you see it

192
00:07:20,889 --> 00:07:25,000
calling this font ID here and you see

193
00:07:22,750 --> 00:07:27,699
the assertion firing when we went

194
00:07:25,000 --> 00:07:32,500
through here what we would want to do is

195
00:07:27,699 --> 00:07:34,930
probably let's see so when we when we

196
00:07:32,500 --> 00:07:37,870
get the font info if this came back is

197
00:07:34,930 --> 00:07:42,129
zero then that would really be all we

198
00:07:37,870 --> 00:07:45,040
would need to know I think and so let's

199
00:07:42,129 --> 00:07:49,560
see how do I want to do this I'm gonna

200
00:07:45,040 --> 00:07:49,560
first see if we go in to get font info

201
00:07:54,879 --> 00:08:00,979
so if we go into get font info here and

202
00:07:57,649 --> 00:08:03,529
we assert that this type equals HSA

203
00:08:00,978 --> 00:08:11,089
asset font I'm wondering if maybe what

204
00:08:03,529 --> 00:08:12,829
we want to do is I guess what we

205
00:08:11,089 --> 00:08:24,469
probably want to do here is assert that

206
00:08:12,829 --> 00:08:26,359
it's either that or nothing so in other

207
00:08:24,470 --> 00:08:29,509
words if you can't load the font you'll

208
00:08:26,360 --> 00:08:30,889
get back a 0 handle I just want the

209
00:08:29,509 --> 00:08:32,870
assertion in there to prevent you trying

210
00:08:30,889 --> 00:08:34,729
to load something and it have ended up

211
00:08:32,870 --> 00:08:36,918
being some other type right

212
00:08:34,729 --> 00:08:38,990
now when in release mode these wouldn't

213
00:08:36,918 --> 00:08:42,740
be in there so we wouldn't get that

214
00:08:38,990 --> 00:08:49,750
assertion right but I'm curious what

215
00:08:42,740 --> 00:08:49,750
happens now okay

216
00:08:54,350 --> 00:08:58,820
so I'm not sure what this does exactly

217
00:09:02,669 --> 00:09:05,928
[Music]

218
00:09:06,470 --> 00:09:14,930
so that looks kind of garbagey to me so

219
00:09:11,940 --> 00:09:16,710
I'm curious to know where that came from

220
00:09:14,929 --> 00:09:21,269
let's just take a look at what's going

221
00:09:16,710 --> 00:09:22,290
on here and again I'm just pushing I'm

222
00:09:21,269 --> 00:09:23,939
just like pushing through the code

223
00:09:22,289 --> 00:09:25,829
slowly to see like what happens if you

224
00:09:23,940 --> 00:09:28,620
can't load anything to get rid of any

225
00:09:25,830 --> 00:09:33,240
paths that sort of like don't handle

226
00:09:28,620 --> 00:09:35,370
zeros well so here's us calling

227
00:09:33,240 --> 00:09:38,549
simulates here's this updating running

228
00:09:35,370 --> 00:09:42,720
our entities here's us doing our push

229
00:09:38,549 --> 00:09:46,740
cube and so this bitmap ID here is what

230
00:09:42,720 --> 00:09:53,580
would be busted presumably here's what's

231
00:09:46,740 --> 00:09:56,580
saying get bitmap on this ID and you can

232
00:09:53,580 --> 00:09:58,950
see the ID is zero that texture handle

233
00:09:56,580 --> 00:10:01,230
on get bitmap zero I'm not sure what

234
00:09:58,950 --> 00:10:06,930
that's doing I want to see what that's

235
00:10:01,230 --> 00:10:09,870
doing so it looks like asset texture

236
00:10:06,929 --> 00:10:12,269
handle is so this get asset if that's

237
00:10:09,870 --> 00:10:15,570
zero I want to say we're not probably

238
00:10:12,269 --> 00:10:17,490
handling that properly so in all of

239
00:10:15,570 --> 00:10:18,810
these cases I feel like we kind of want

240
00:10:17,490 --> 00:10:20,759
to do something a little smarter than

241
00:10:18,809 --> 00:10:26,489
that we probably want to do something

242
00:10:20,759 --> 00:10:28,110
like this you know what I mean just to

243
00:10:26,490 --> 00:10:30,090
make sure that that basically people

244
00:10:28,110 --> 00:10:32,340
will crash out immediately if they're

245
00:10:30,090 --> 00:10:35,490
not handling the zero case we could also

246
00:10:32,340 --> 00:10:36,960
give them back a garbage version so like

247
00:10:35,490 --> 00:10:40,169
another thing that we could do for

248
00:10:36,960 --> 00:10:46,860
example is have some sort of global zero

249
00:10:40,169 --> 00:10:52,829
handle like for example something like

250
00:10:46,860 --> 00:10:55,500
this you know something like this and in

251
00:10:52,830 --> 00:10:57,690
that case we could just say look either

252
00:10:55,500 --> 00:11:00,809
we're going to give you back the right

253
00:10:57,690 --> 00:11:04,170
one or we'll give you back the the null

254
00:11:00,809 --> 00:11:06,109
one right and so in this case we don't

255
00:11:04,169 --> 00:11:08,328
really need to do anything like that

256
00:11:06,110 --> 00:11:11,000
we can't instead do just look did we get

257
00:11:08,328 --> 00:11:14,569
the asset if we got the asset then use

258
00:11:11,000 --> 00:11:16,730
this otherwise don't write but maybe

259
00:11:14,570 --> 00:11:19,820
what I'll do instead is something more

260
00:11:16,730 --> 00:11:22,399
like this if asset then do this branch

261
00:11:19,820 --> 00:11:25,310
just so it's a little clearer and then

262
00:11:22,399 --> 00:11:36,578
we'll have in here a path that will it's

263
00:11:25,309 --> 00:11:36,578
a path that will just set the oops a

264
00:11:37,750 --> 00:11:42,789
path that will just leave it set to zero

265
00:11:40,370 --> 00:11:45,139
so that it you know you knows what's up

266
00:11:42,789 --> 00:11:48,139
for sound samples we need to do the same

267
00:11:45,139 --> 00:11:51,110
thing but in this case it looks like we

268
00:11:48,139 --> 00:11:52,549
sort of were doing the same thing and in

269
00:11:51,110 --> 00:11:58,399
this case week so in this case we could

270
00:11:52,549 --> 00:12:00,439
just say look if the asset exists and we

271
00:11:58,399 --> 00:12:02,990
get it then we're good

272
00:12:00,440 --> 00:12:05,390
unfortunately like all of these sorts of

273
00:12:02,990 --> 00:12:08,419
things need to be inside the checking so

274
00:12:05,389 --> 00:12:09,769
basically like here we need to push

275
00:12:08,419 --> 00:12:11,990
these down to where we've already

276
00:12:09,769 --> 00:12:13,879
checked asset for validity

277
00:12:11,990 --> 00:12:16,490
I guess that argues against doing it

278
00:12:13,879 --> 00:12:18,078
this way as well so basically we do look

279
00:12:16,490 --> 00:12:23,269
here's the null bit map we'll look

280
00:12:18,078 --> 00:12:26,929
inside the asset only only if we know

281
00:12:23,269 --> 00:12:33,139
that it's okay so something like that

282
00:12:26,929 --> 00:12:35,028
and that looks pretty good to me so now

283
00:12:33,139 --> 00:12:36,379
these are a little more hard they're

284
00:12:35,028 --> 00:12:38,629
hardened they're they're not going to

285
00:12:36,379 --> 00:12:40,458
have that crashing problem I just want

286
00:12:38,629 --> 00:12:42,980
to push that through to the rest of

287
00:12:40,458 --> 00:12:46,369
these so same thing here like when we're

288
00:12:42,980 --> 00:12:47,959
doing these lookups I just want to check

289
00:12:46,370 --> 00:12:50,360
to make sure that the asset actually

290
00:12:47,958 --> 00:12:54,559
exists before we do anything this HHA

291
00:12:50,360 --> 00:12:56,539
asset here will get set only in the case

292
00:12:54,559 --> 00:12:59,838
where it actually can otherwise it'll

293
00:12:56,539 --> 00:13:04,069
return zero to you or you know again I

294
00:12:59,839 --> 00:13:06,079
could do this right I don't know maybe

295
00:13:04,070 --> 00:13:10,160
those should be in the game assets

296
00:13:06,078 --> 00:13:13,929
itself I I'm I'm not sure about that how

297
00:13:10,159 --> 00:13:15,828
I want that to look that's kind of a

298
00:13:13,929 --> 00:13:17,579
that's kind of a different question

299
00:13:15,828 --> 00:13:20,338
maybe maybe it should

300
00:13:17,580 --> 00:13:25,410
so if we go to game assets here like for

301
00:13:20,339 --> 00:13:28,410
example down in here like maybe we just

302
00:13:25,409 --> 00:13:30,088
put the null stuff in there so there's

303
00:13:28,409 --> 00:13:35,759
like alright there's an HH a bitmap

304
00:13:30,089 --> 00:13:41,010
that's the null bitmap and every time we

305
00:13:35,759 --> 00:13:44,159
return one of these right we would just

306
00:13:41,009 --> 00:13:46,828
return whichever one of these is is the

307
00:13:44,159 --> 00:13:50,009
right one so we take one of the HHA

308
00:13:46,828 --> 00:13:53,789
assets here and we say look if we got it

309
00:13:50,009 --> 00:13:58,049
great we'll return it otherwise if we

310
00:13:53,789 --> 00:13:59,370
can't then we can't I think that's

311
00:13:58,049 --> 00:14:01,500
that's really all we're looking for

312
00:13:59,370 --> 00:14:06,959
so in this case we say this is gonna be

313
00:14:01,500 --> 00:14:08,700
assets null asset otherwise we actually

314
00:14:06,958 --> 00:14:11,518
look at it Owen and that's the actual

315
00:14:08,700 --> 00:14:13,860
hhj I suppose so it's it's actually this

316
00:14:11,519 --> 00:14:17,269
oh no no it's actually already the

317
00:14:13,860 --> 00:14:18,750
agency well so maybe we say no HHA

318
00:14:17,269 --> 00:14:20,419
that's it

319
00:14:18,750 --> 00:14:22,440
just to be clear that it's not a

320
00:14:20,419 --> 00:14:25,078
know-nothing elf or the other kind of

321
00:14:22,440 --> 00:14:27,600
asset and then up here where we did that

322
00:14:25,078 --> 00:14:30,000
for nil bitmap I just want and maybe

323
00:14:27,600 --> 00:14:33,290
I'll put no Agent J bitmap as well I'll

324
00:14:30,000 --> 00:14:33,289
just put that in here as well

325
00:14:33,708 --> 00:14:41,309
and then I think that's a little bit

326
00:14:36,980 --> 00:14:43,019
nicer when we've got let's see

327
00:14:41,309 --> 00:14:44,519
no likes it when we've got fonts we

328
00:14:43,019 --> 00:14:48,028
probably want the same thing so there's

329
00:14:44,519 --> 00:14:51,120
like a loaded font here called null font

330
00:14:48,028 --> 00:14:52,708
or something like that and maybe we just

331
00:14:51,120 --> 00:14:59,549
put that in there I don't know if that

332
00:14:52,708 --> 00:15:01,799
will work properly or not so I don't

333
00:14:59,549 --> 00:15:07,759
know if it's better to return 0 or to

334
00:15:01,799 --> 00:15:10,319
return the null font so maybe we'll I

335
00:15:07,759 --> 00:15:12,299
don't know we want to do there but

336
00:15:10,320 --> 00:15:16,740
either way we want to check dupes we

337
00:15:12,299 --> 00:15:20,879
want to look at the asset and we want to

338
00:15:16,740 --> 00:15:25,110
return the loaded font I'm gonna give it

339
00:15:20,879 --> 00:15:27,059
back a no font for now and so this will

340
00:15:25,110 --> 00:15:29,789
give back an old font and then what

341
00:15:27,059 --> 00:15:31,879
we'll do is if you know we get the asset

342
00:15:29,789 --> 00:15:33,829
will actually

343
00:15:31,879 --> 00:15:35,299
properly provide the font it looks like

344
00:15:33,830 --> 00:15:37,100
you're supposed to provide a zero anyway

345
00:15:35,299 --> 00:15:39,019
in this case so I guess that that

346
00:15:37,100 --> 00:15:41,629
suggests to me that zeros always okay so

347
00:15:39,019 --> 00:15:44,708
I'm just gonna make that happen okay so

348
00:15:41,629 --> 00:15:47,990
we'll just do it this way let's say and

349
00:15:44,708 --> 00:15:50,088
then finally for font info it looks like

350
00:15:47,990 --> 00:15:55,700
basically the same thing so if we can't

351
00:15:50,089 --> 00:15:58,370
get the flock out then we'll give it

352
00:15:55,700 --> 00:16:03,350
this null right so in this case it would

353
00:15:58,370 --> 00:16:07,940
be if the asset exists we assert it and

354
00:16:03,350 --> 00:16:13,370
we get the actual data out otherwise we

355
00:16:07,940 --> 00:16:15,470
don't and the result is that no so again

356
00:16:13,370 --> 00:16:18,500
just patching those pointers into like a

357
00:16:15,470 --> 00:16:19,940
block of zeros so that anyone who wanted

358
00:16:18,500 --> 00:16:21,769
to use one without knowing whether it

359
00:16:19,940 --> 00:16:23,180
was valid or not will just get 0 values

360
00:16:21,769 --> 00:16:24,620
and go okay I guess this font doesn't

361
00:16:23,179 --> 00:16:29,049
have any characters in it so I won't

362
00:16:24,620 --> 00:16:29,049
display anything that kind of thing um

363
00:16:30,490 --> 00:16:36,500
that is wait

364
00:16:34,240 --> 00:16:44,000
that is correct isn't it what's the

365
00:16:36,500 --> 00:16:46,250
problem empty oh thank you all right so

366
00:16:44,000 --> 00:16:50,110
that's about it let me go ahead and run

367
00:16:46,250 --> 00:16:56,629
that and just see what we get

368
00:16:50,110 --> 00:16:58,970
perfect so we now run properly when we

369
00:16:56,629 --> 00:17:02,240
don't have any hhas and we can't see any

370
00:16:58,970 --> 00:17:05,360
fonts but that's still pretty pretty

371
00:17:02,240 --> 00:17:09,410
solid right and so now at least we

372
00:17:05,359 --> 00:17:11,389
wouldn't have any crashing but we still

373
00:17:09,410 --> 00:17:13,910
haven't really notified anyone that

374
00:17:11,390 --> 00:17:16,579
something seems wrong and so what I

375
00:17:13,910 --> 00:17:22,009
would like to do is maybe just have some

376
00:17:16,578 --> 00:17:23,750
way of notifying people you know sort of

377
00:17:22,009 --> 00:17:25,970
a thunk through in the platform layer

378
00:17:23,750 --> 00:17:28,759
you know we've got sort of these limited

379
00:17:25,970 --> 00:17:30,890
set of platform services in the platform

380
00:17:28,759 --> 00:17:34,460
API these are these are what we expect

381
00:17:30,890 --> 00:17:36,500
the platform to provide and so if we

382
00:17:34,460 --> 00:17:38,259
look at these what I'm thinking is you

383
00:17:36,500 --> 00:17:43,269
know maybe here there's also like a

384
00:17:38,259 --> 00:17:46,009
platform fatal error

385
00:17:43,269 --> 00:17:48,920
kind of call you know what I mean

386
00:17:46,009 --> 00:17:54,170
and so when we call down to that

387
00:17:48,920 --> 00:17:56,660
platform fatal error we can run the game

388
00:17:54,170 --> 00:17:58,940
and if something happens that that just

389
00:17:56,660 --> 00:18:04,370
makes it like completely impossible to

390
00:17:58,940 --> 00:18:06,170
continue we can call that and issue that

391
00:18:04,369 --> 00:18:09,139
fatal error message so the way that

392
00:18:06,170 --> 00:18:12,289
would look is like inside the assets you

393
00:18:09,140 --> 00:18:15,830
know let's say we load up and we look at

394
00:18:12,289 --> 00:18:17,539
the assets here and we just see that you

395
00:18:15,829 --> 00:18:20,720
know there's none of the things that we

396
00:18:17,539 --> 00:18:22,759
expect to be there are there so for

397
00:18:20,720 --> 00:18:26,750
example if we look at the asset count

398
00:18:22,759 --> 00:18:28,099
and there's like no assets like or if we

399
00:18:26,750 --> 00:18:31,819
look at the file count and there's no

400
00:18:28,099 --> 00:18:37,459
files right and we we can just display

401
00:18:31,819 --> 00:18:39,439
something like hey man not good right so

402
00:18:37,460 --> 00:18:42,799
let's add something like that if we go

403
00:18:39,440 --> 00:18:44,509
into the asset loading where we're

404
00:18:42,799 --> 00:18:47,419
actually loading the files let's just

405
00:18:44,509 --> 00:18:49,670
take a look and if we find that there's

406
00:18:47,420 --> 00:18:52,279
no files loaded at the end of it so in

407
00:18:49,670 --> 00:18:58,100
here we go through and we do like this

408
00:18:52,279 --> 00:19:03,740
kind of thing not sure we're set that

409
00:18:58,099 --> 00:19:05,569
file count here it is so when we look at

410
00:19:03,740 --> 00:19:08,630
this file group and we look at this file

411
00:19:05,569 --> 00:19:12,230
count here if this ends up being you

412
00:19:08,630 --> 00:19:14,330
know nothing would be one example or if

413
00:19:12,230 --> 00:19:16,460
we never load any assets might be

414
00:19:14,329 --> 00:19:16,939
another one and we can just issue a

415
00:19:16,460 --> 00:19:19,610
warning

416
00:19:16,940 --> 00:19:23,299
so maybe what we'll do is just look at

417
00:19:19,609 --> 00:19:28,639
the asset count we know we set the asset

418
00:19:23,299 --> 00:19:32,210
count here right we set it to zero we

419
00:19:28,640 --> 00:19:33,800
Inc it to one after the zero asset and

420
00:19:32,210 --> 00:19:36,650
then we go through and load as many

421
00:19:33,799 --> 00:19:45,029
assets as we can so maybe here I'll just

422
00:19:36,650 --> 00:19:52,429
say look if assets

423
00:19:45,029 --> 00:19:52,428
asset count equals one we'll just say

424
00:19:58,579 --> 00:20:05,460
here we can sort of say look we need we

425
00:20:03,929 --> 00:20:08,909
need you to do something about this

426
00:20:05,460 --> 00:20:16,288
because we probably or I should say exit

427
00:20:08,909 --> 00:20:18,090
out maybe so cuz we you at least need an

428
00:20:16,288 --> 00:20:21,538
HHA that's like the basic things like

429
00:20:18,089 --> 00:20:25,230
the basic font and stuff like that and

430
00:20:21,538 --> 00:20:27,329
so if you run the game and I guess we

431
00:20:25,230 --> 00:20:29,788
could probably do it this way and I

432
00:20:27,329 --> 00:20:31,230
think about it because if you run the

433
00:20:29,788 --> 00:20:33,179
game if you're building in him a

434
00:20:31,230 --> 00:20:34,829
internal we do need to give you a chance

435
00:20:33,179 --> 00:20:37,259
to import some assets because maybe you

436
00:20:34,829 --> 00:20:39,178
were starting fresh but then we should

437
00:20:37,259 --> 00:20:41,640
probably issue a fatal error if you can

438
00:20:39,179 --> 00:20:42,960
literally not owed load any assets we

439
00:20:41,640 --> 00:20:49,980
should probably issue a fatal error

440
00:20:42,960 --> 00:20:53,819
I would assume right and I guess I could

441
00:20:49,980 --> 00:21:02,220
call this maybe there should be multiple

442
00:20:53,819 --> 00:21:05,548
ones maybe maybe I'll do it more like

443
00:21:02,220 --> 00:21:07,230
this where we can do like an error

444
00:21:05,548 --> 00:21:08,579
message and maybe we can say whether

445
00:21:07,230 --> 00:21:12,179
it's a error message or a warning

446
00:21:08,579 --> 00:21:14,808
message or something like that so it's

447
00:21:12,179 --> 00:21:14,809
more like this

448
00:21:25,099 --> 00:21:29,189
so something like this where I can say

449
00:21:27,509 --> 00:21:31,710
which kind of air we're talking about

450
00:21:29,190 --> 00:21:33,660
and so baby in the air message I say

451
00:21:31,710 --> 00:21:35,910
like this is non-fatal because

452
00:21:33,660 --> 00:22:06,380
technically we still run but it's

453
00:21:35,910 --> 00:22:10,259
probably bad something like this and

454
00:22:06,380 --> 00:22:13,250
that just implies kind of how this would

455
00:22:10,259 --> 00:22:19,308
be set up so we would have a platform

456
00:22:13,250 --> 00:22:19,308
error message call here and it's

457
00:22:22,640 --> 00:22:33,450
something like this and it probably just

458
00:22:29,190 --> 00:22:38,670
takes a platform arrow type for the type

459
00:22:33,450 --> 00:22:42,450
of message and then a string right for

460
00:22:38,670 --> 00:22:46,470
the message so the platform error

461
00:22:42,450 --> 00:22:48,210
message basically says you know display

462
00:22:46,470 --> 00:22:49,679
this to the user using some kind of

463
00:22:48,210 --> 00:22:54,890
built in platform thing that hopefully

464
00:22:49,679 --> 00:22:54,890
won't fail it looks like this

465
00:22:58,180 --> 00:23:01,640
and I think that's all we really need so

466
00:23:00,619 --> 00:23:05,539
then I just need to implement one of

467
00:23:01,640 --> 00:23:08,390
those the platform layer and let me see

468
00:23:05,539 --> 00:23:09,549
undeclared identifier that's true this

469
00:23:08,390 --> 00:23:18,650
go first

470
00:23:09,549 --> 00:23:21,319
okay let's see okay uh so now if we run

471
00:23:18,650 --> 00:23:22,070
the game here we should get a crash of

472
00:23:21,319 --> 00:23:26,359
some kind

473
00:23:22,069 --> 00:23:29,059
ooh looks like remedy was unhappy there

474
00:23:26,359 --> 00:23:29,629
I don't know why everybody was unhappy

475
00:23:29,059 --> 00:23:32,509
there

476
00:23:29,630 --> 00:23:37,460
we could probably grab a mini dump let's

477
00:23:32,509 --> 00:23:41,000
find out so that's a jump to zero

478
00:23:37,460 --> 00:23:46,930
actually George if George is watching

479
00:23:41,000 --> 00:23:46,930
looks like jump to zero is a crash

480
00:23:46,990 --> 00:23:51,440
possibly let's let's uh let's see if we

481
00:23:49,880 --> 00:23:52,760
can repair this for George because

482
00:23:51,440 --> 00:23:54,440
otherwise I don't know if you you know

483
00:23:52,759 --> 00:23:56,660
can't debug something can't reproduce

484
00:23:54,440 --> 00:23:58,990
let's just double check and make sure

485
00:23:56,660 --> 00:24:00,650
I'm right about that if I just make

486
00:23:58,990 --> 00:24:03,370
something right here

487
00:24:00,650 --> 00:24:06,200
I could see oh yeah so if I just

488
00:24:03,369 --> 00:24:09,069
literally in this directory right here

489
00:24:06,200 --> 00:24:22,789
just make a file that's like in void

490
00:24:09,069 --> 00:24:27,919
main and I say type def void function

491
00:24:22,789 --> 00:24:34,490
void like so function star function

492
00:24:27,920 --> 00:24:40,180
equals zero function I'm just going to

493
00:24:34,490 --> 00:24:40,180
save that into the temp directory W temp

494
00:24:40,430 --> 00:24:55,039
function or jump to zero crash dot CPP

495
00:24:46,819 --> 00:25:06,519
and I think if I'm right then that was

496
00:24:55,039 --> 00:25:06,519
probably all it was right that's it oops

497
00:25:07,930 --> 00:25:12,410
right so there's that crash which is

498
00:25:10,849 --> 00:25:24,109
what we expect now let's try it into

499
00:25:12,410 --> 00:25:25,220
remedy well I forgot to update the

500
00:25:24,109 --> 00:25:27,589
remedy too

501
00:25:25,220 --> 00:25:31,480
well actually I thought that I did him I

502
00:25:27,589 --> 00:25:40,250
this is the right version right - wait -

503
00:25:31,480 --> 00:25:41,960
nope I'm wrong okay I guess we got to

504
00:25:40,250 --> 00:25:43,789
send a mini dump then I thought it would

505
00:25:41,960 --> 00:25:47,289
just be his jump to zero might crash it

506
00:25:43,789 --> 00:25:51,139
but it didn't so this is a weird bug

507
00:25:47,289 --> 00:25:52,428
let's see what happened because I was

508
00:25:51,140 --> 00:25:53,660
supposed to it was supposed to jump to

509
00:25:52,429 --> 00:25:55,190
zero then I was gonna like that

510
00:25:53,660 --> 00:25:57,019
we didn't set the pointer so let's go

511
00:25:55,190 --> 00:25:59,620
set the pointer that's what I was trying

512
00:25:57,019 --> 00:25:59,619
to have happen

513
00:26:14,349 --> 00:26:21,189
weird and it works here man I should

514
00:26:19,000 --> 00:26:26,430
have saved a mini dump now we have no

515
00:26:21,190 --> 00:26:33,900
idea all right sorry George we missed it

516
00:26:26,430 --> 00:26:36,070
I don't know I don't know man but

517
00:26:33,900 --> 00:26:38,230
hopefully if we catch it again I'll just

518
00:26:36,069 --> 00:26:40,569
I should just take a mini dump anyway

519
00:26:38,230 --> 00:26:42,849
moving on what I was trying to say

520
00:26:40,569 --> 00:26:44,950
before that happened was just that this

521
00:26:42,849 --> 00:26:45,939
is a zero pointer so when it calls this

522
00:26:44,950 --> 00:26:47,799
an error message it should just

523
00:26:45,940 --> 00:26:50,500
immediately crash which we saw it there

524
00:26:47,799 --> 00:26:52,569
now correctly crash and so what we need

525
00:26:50,500 --> 00:26:55,599
to do is pack that in and the window

526
00:26:52,569 --> 00:26:58,480
side right we've got to make it so that

527
00:26:55,599 --> 00:27:00,519
we call a valid function that will

528
00:26:58,480 --> 00:27:04,079
actually display this error message so

529
00:27:00,519 --> 00:27:07,809
let's go ahead and do that now in the

530
00:27:04,079 --> 00:27:09,879
win32 layer we've got sort of this bunch

531
00:27:07,809 --> 00:27:15,460
of stuff where that's actually happening

532
00:27:09,880 --> 00:27:17,410
I'm going to go and put platform error

533
00:27:15,460 --> 00:27:21,250
message in there I've been through two

534
00:27:17,410 --> 00:27:24,310
error message and all I'm gonna do here

535
00:27:21,250 --> 00:27:26,019
is just have Windows output an error

536
00:27:24,309 --> 00:27:28,690
message and then we're gonna exit

537
00:27:26,019 --> 00:27:31,599
process so exit process and maybe with a

538
00:27:28,690 --> 00:27:34,750
negative one just so people know that it

539
00:27:31,599 --> 00:27:37,859
died right and so all we're gonna do

540
00:27:34,750 --> 00:27:41,170
here is just immediately say here is a

541
00:27:37,859 --> 00:27:47,229
message box saying that everything died

542
00:27:41,170 --> 00:27:51,789
and then we're gonna go and then we're

543
00:27:47,230 --> 00:27:55,299
gonna go and exit so if I don't print

544
00:27:51,789 --> 00:27:57,730
anything right oops do that if I don't

545
00:27:55,299 --> 00:28:01,899
print anything then all it will do is

546
00:27:57,730 --> 00:28:04,480
just exit and so it will still you know

547
00:28:01,900 --> 00:28:09,700
it would still close our app but that's

548
00:28:04,480 --> 00:28:12,940
not very helpful right oops we didn't

549
00:28:09,700 --> 00:28:17,160
actually set the pointer let me search

550
00:28:12,940 --> 00:28:17,160
for memory

551
00:28:18,859 --> 00:28:25,740
so in here we'll be set up the table of

552
00:28:21,419 --> 00:28:28,528
API pointers error message this winter -

553
00:28:25,740 --> 00:28:34,528
error message right and then we're

554
00:28:28,528 --> 00:28:36,690
pretty much good to go so now we just

555
00:28:34,528 --> 00:28:38,819
close cleanly but that's really not what

556
00:28:36,690 --> 00:28:40,320
we wanted to do the whole point here was

557
00:28:38,819 --> 00:28:42,928
to inform the user that something had

558
00:28:40,319 --> 00:28:43,889
gone wrong and so I'm gonna go ahead and

559
00:28:42,929 --> 00:28:52,440
try to do that

560
00:28:43,890 --> 00:28:53,850
so looks like I put this in the wrong

561
00:28:52,440 --> 00:28:55,740
place because that's where all of them I

562
00:28:53,849 --> 00:29:00,178
shouldn't put it up by the process stuff

563
00:28:55,740 --> 00:29:01,919
but I did yeah all right

564
00:29:00,179 --> 00:29:03,960
sorry about that let me move that so

565
00:29:01,919 --> 00:29:07,140
let's take error message and move it

566
00:29:03,960 --> 00:29:08,759
down to where all the rest of the win32

567
00:29:07,140 --> 00:29:10,500
calls are because that was actually what

568
00:29:08,759 --> 00:29:11,700
I wanted to kind of be what I should

569
00:29:10,500 --> 00:29:12,960
probably put these callbacks in like

570
00:29:11,700 --> 00:29:16,159
their own file or something so you can

571
00:29:12,960 --> 00:29:19,200
see the entry points a little bit better

572
00:29:16,159 --> 00:29:21,299
but yeah so there's like file closed and

573
00:29:19,200 --> 00:29:24,538
all that stuff and allocate memory so

574
00:29:21,298 --> 00:29:26,339
anyway in here where we do win32 error

575
00:29:24,538 --> 00:29:28,408
message and we have exit process one

576
00:29:26,339 --> 00:29:33,288
what we want to do now is say well first

577
00:29:28,409 --> 00:29:37,080
of all we want to check to see what the

578
00:29:33,288 --> 00:29:39,990
type of error was so if I am fatal I

579
00:29:37,079 --> 00:29:42,869
want to exit but if I'm not fatal I

580
00:29:39,990 --> 00:29:44,849
should probably not right so if it's a

581
00:29:42,869 --> 00:29:47,069
platformer of fatal will exit process if

582
00:29:44,849 --> 00:29:52,048
it's not we won't so then we just need

583
00:29:47,069 --> 00:29:54,928
something to put up a dialog box to the

584
00:29:52,048 --> 00:29:58,589
user and you know message box the X is

585
00:29:54,929 --> 00:30:01,590
probably the easiest thing to do it's

586
00:29:58,589 --> 00:30:03,629
hard to say but here's message box CX

587
00:30:01,589 --> 00:30:09,778
you can see what it contains

588
00:30:03,630 --> 00:30:13,760
it's basically a pretty simple call you

589
00:30:09,778 --> 00:30:15,929
pass it an ASCII string and you pass it

590
00:30:13,759 --> 00:30:17,879
you pass it a string displays the

591
00:30:15,929 --> 00:30:20,370
message and a thing for the window title

592
00:30:17,880 --> 00:30:23,130
you say what kind it is and then you say

593
00:30:20,369 --> 00:30:25,888
what your H window was that you wanted

594
00:30:23,130 --> 00:30:27,419
it to pop up on top of you have an

595
00:30:25,888 --> 00:30:28,619
optional language ID in our case it's

596
00:30:27,419 --> 00:30:30,040
just zero because we're not actually

597
00:30:28,619 --> 00:30:32,199
going to be

598
00:30:30,039 --> 00:30:35,829
customizing that message or anything

599
00:30:32,200 --> 00:30:41,360
then you could pass one of these flags

600
00:30:35,829 --> 00:30:43,519
and you can see which one you want okay

601
00:30:41,359 --> 00:30:45,169
in the case of a non fatal error is

602
00:30:43,519 --> 00:30:46,609
probably what we want and abort in the

603
00:30:45,170 --> 00:30:49,190
case of a fatal error is probably what

604
00:30:46,609 --> 00:30:51,619
we want so we just probably switched

605
00:30:49,190 --> 00:30:53,930
that based on the type so if we take a

606
00:30:51,619 --> 00:30:56,689
look at what that is it's a human value

607
00:30:53,930 --> 00:31:00,080
so mbox

608
00:30:56,690 --> 00:31:03,230
type we're gonna set that to whichever

609
00:31:00,079 --> 00:31:06,559
one we want by default we're just gonna

610
00:31:03,230 --> 00:31:18,559
use idea okay but we're probably going

611
00:31:06,559 --> 00:31:20,329
to want to do this so we're going to

612
00:31:18,559 --> 00:31:22,069
look and see we're gonna set the unbox

613
00:31:20,329 --> 00:31:24,139
type to abort if it's a fatal error and

614
00:31:22,069 --> 00:31:26,059
then we're gonna exit in here we're

615
00:31:24,140 --> 00:31:28,280
gonna call the message box the X call

616
00:31:26,059 --> 00:31:33,889
that's this right here so we'll do a

617
00:31:28,279 --> 00:31:35,839
message box see X and we need to pass

618
00:31:33,890 --> 00:31:38,990
the H wind which we don't necessarily

619
00:31:35,839 --> 00:31:40,549
have one so we'll need a way to see

620
00:31:38,990 --> 00:31:42,230
whether we have one or not we'll take

621
00:31:40,549 --> 00:31:45,230
care of that in a second and then we

622
00:31:42,230 --> 00:31:47,210
need like the text information so we've

623
00:31:45,230 --> 00:31:49,549
got the message and then we have a

624
00:31:47,210 --> 00:31:52,309
caption and so the caption I guess we'll

625
00:31:49,549 --> 00:31:56,000
set dynamically here and so what I'll do

626
00:31:52,309 --> 00:32:00,349
here is we'll pretend that the caption

627
00:31:56,000 --> 00:32:01,599
is an made hero warning and then if it's

628
00:32:00,349 --> 00:32:06,819
fatal

629
00:32:01,599 --> 00:32:09,709
we'll do a handmade hero fatal error and

630
00:32:06,819 --> 00:32:11,269
I will just stick that at the top of the

631
00:32:09,710 --> 00:32:12,769
window then we've got the message box

632
00:32:11,269 --> 00:32:14,779
type we've already determined that and

633
00:32:12,769 --> 00:32:16,849
the language ID is just going to be zero

634
00:32:14,779 --> 00:32:19,339
so really all we need is to know about

635
00:32:16,849 --> 00:32:21,709
what the window handle is now we

636
00:32:19,339 --> 00:32:24,349
typically just use one window handle in

637
00:32:21,710 --> 00:32:26,539
this game so presumably we can just

638
00:32:24,349 --> 00:32:30,049
actually look it up if we go to like the

639
00:32:26,539 --> 00:32:31,639
global win32 state here and we look at

640
00:32:30,049 --> 00:32:33,200
what that store is in it I believe

641
00:32:31,640 --> 00:32:39,550
that'll just have the window handle if

642
00:32:33,200 --> 00:32:39,549
we actually have one see

643
00:32:39,789 --> 00:32:46,269
so I thought it would looks like we're

644
00:32:44,470 --> 00:32:50,410
not posting that window handle out to

645
00:32:46,269 --> 00:33:01,299
here so I would like to post that window

646
00:32:50,410 --> 00:33:03,070
handle out so if we look back at yeah I

647
00:33:01,299 --> 00:33:06,700
guess if we look back here we never post

648
00:33:03,069 --> 00:33:09,429
it we just leave it in here so when we

649
00:33:06,700 --> 00:33:11,799
go to window here probably what I'll do

650
00:33:09,430 --> 00:33:13,980
is I'll just save this out just do we

651
00:33:11,799 --> 00:33:19,569
have it right

652
00:33:13,980 --> 00:33:23,829
why that's weird so when we get this

653
00:33:19,569 --> 00:33:26,980
window handle out and I want to have it

654
00:33:23,829 --> 00:33:29,829
go into the global win32 state that

655
00:33:26,980 --> 00:33:34,240
global win32 state is something that we

656
00:33:29,829 --> 00:33:36,399
initialize right right here right and so

657
00:33:34,240 --> 00:33:37,539
I'm just gonna set it to the window

658
00:33:36,400 --> 00:33:46,360
handle when we get the window handle

659
00:33:37,539 --> 00:33:50,609
back like that and we'll just call this

660
00:33:46,359 --> 00:33:50,609
the default window handle so you know

661
00:33:52,740 --> 00:33:56,799
probably not above the ticket mutex

662
00:33:55,720 --> 00:34:01,180
maybe something like that

663
00:33:56,799 --> 00:34:04,480
so this default window handle will give

664
00:34:01,180 --> 00:34:07,690
us what we want if it's 0 at 0 if it's

665
00:34:04,480 --> 00:34:10,000
you know valid its valid and either one

666
00:34:07,690 --> 00:34:12,010
is okay to pass here and then I think

667
00:34:10,000 --> 00:34:14,440
we're pretty good to go just clean up

668
00:34:12,010 --> 00:34:20,620
our compile errors and that should be

669
00:34:14,440 --> 00:34:23,800
that yeah so if I run this now in theory

670
00:34:20,619 --> 00:34:25,929
you can see here we get the warning

671
00:34:23,800 --> 00:34:29,019
message I don't know why there's a

672
00:34:25,929 --> 00:34:31,059
cancel box because I didn't want one so

673
00:34:29,019 --> 00:34:33,519
I think I've set that wrong because

674
00:34:31,059 --> 00:34:37,628
there's no there aren't two different

675
00:34:33,519 --> 00:34:40,148
things you can do there so that's a

676
00:34:37,628 --> 00:34:44,219
little bit busted so let's take a look

677
00:34:40,148 --> 00:34:44,219
at what the actual settings here are

678
00:34:47,670 --> 00:34:54,599
ah I was setting them wrong sorry I was

679
00:34:53,250 --> 00:34:57,090
looking at the wrong flags these are the

680
00:34:54,599 --> 00:35:01,559
return values so this tells you what got

681
00:34:57,090 --> 00:35:05,789
pushed I actually want these here so MB

682
00:35:01,559 --> 00:35:14,610
okay it's actually what we wanted for

683
00:35:05,789 --> 00:35:17,279
the type normally and and I think that's

684
00:35:14,610 --> 00:35:19,559
it so we would start with just that it

685
00:35:17,280 --> 00:35:21,480
looks like and if it's a fatal error

686
00:35:19,559 --> 00:35:24,210
you know we've got it's these icons that

687
00:35:21,480 --> 00:35:38,210
are probably what we want so we probably

688
00:35:24,210 --> 00:35:42,539
want em be icon warning or I can't stop

689
00:35:38,210 --> 00:35:44,699
right and so this way to penny in which

690
00:35:42,539 --> 00:35:48,809
when we are it should show a different

691
00:35:44,699 --> 00:35:51,809
glyph they're basically just built into

692
00:35:48,809 --> 00:35:54,150
Windows so there's the warning one and

693
00:35:51,809 --> 00:35:56,279
let's just double check I'm gonna try

694
00:35:54,150 --> 00:35:59,309
doing a fatal error now on that same

695
00:35:56,280 --> 00:36:03,690
condition just to make sure again that

696
00:35:59,309 --> 00:36:06,779
the you know that the function will work

697
00:36:03,690 --> 00:36:09,869
if we did have a situation in the future

698
00:36:06,780 --> 00:36:12,030
where we wanted a fatal error I want to

699
00:36:09,869 --> 00:36:14,059
make sure I you know double check that

700
00:36:12,030 --> 00:36:16,200
that actually puts up something

701
00:36:14,059 --> 00:36:18,659
indicative of a fatal error and then

702
00:36:16,199 --> 00:36:22,339
closes the app so if we pass a fatal

703
00:36:18,659 --> 00:36:25,529
error here so you can see now we got the

704
00:36:22,340 --> 00:36:27,420
full error message if I hit OK it closes

705
00:36:25,530 --> 00:36:30,690
so I think I think that's pretty much

706
00:36:27,420 --> 00:36:35,240
all I need right so now that we have

707
00:36:30,690 --> 00:36:35,240
this - I want to say that there were

708
00:36:40,630 --> 00:36:46,250
so you can see here there's at least one

709
00:36:44,119 --> 00:36:48,019
place we had errors happening in fact in

710
00:36:46,250 --> 00:36:53,630
here I think we probably have some too

711
00:36:48,019 --> 00:36:56,539
like logging right so in these in these

712
00:36:53,630 --> 00:37:05,630
cases we probably want to put forth the

713
00:36:56,539 --> 00:37:07,219
fatal error as well right so that's if

714
00:37:05,630 --> 00:37:10,670
we couldn't register the window handle

715
00:37:07,219 --> 00:37:16,368
that's okay you can look at these so if

716
00:37:10,670 --> 00:37:18,800
we didn't get samples yeah and if we

717
00:37:16,369 --> 00:37:20,180
didn't register the window class so if

718
00:37:18,800 --> 00:37:25,250
we didn't register the window class

719
00:37:20,179 --> 00:37:28,960
again that's a fatal error so we can

720
00:37:25,250 --> 00:37:28,960
just put those in here right

721
00:37:39,230 --> 00:37:44,338
so basically in all of these places that

722
00:37:41,969 --> 00:37:52,139
we weren't printing out error messages

723
00:37:44,338 --> 00:38:01,980
before now we can so in this case these

724
00:37:52,139 --> 00:38:03,629
should never happen like it would be you

725
00:38:01,980 --> 00:38:05,579
would be in some kind of really severe

726
00:38:03,630 --> 00:38:09,030
Windows is broken kind of way if you

727
00:38:05,579 --> 00:38:11,760
can't open a window but so let's see

728
00:38:09,030 --> 00:38:13,589
here the samples pointer is just an

729
00:38:11,760 --> 00:38:26,690
unable to allocate memory for sound

730
00:38:13,588 --> 00:38:28,889
samples so something like that and then

731
00:38:26,690 --> 00:38:30,539
you know I don't know if there was any I

732
00:38:28,889 --> 00:38:36,659
guess we could have logging so I could

733
00:38:30,539 --> 00:38:38,639
just lurk look for logging that's just

734
00:38:36,659 --> 00:38:42,389
misc framerate so I don't know what else

735
00:38:38,639 --> 00:38:43,558
we've got yet there's probably some

736
00:38:42,389 --> 00:38:45,029
other things in here we could go through

737
00:38:43,559 --> 00:38:50,220
and clean up and put them in there but

738
00:38:45,030 --> 00:38:54,780
for the most part I think we're good so

739
00:38:50,219 --> 00:38:57,029
that's all I wanted to do just really

740
00:38:54,780 --> 00:39:00,690
simple you know what I mean

741
00:38:57,030 --> 00:39:02,640
and that that should cover us in most

742
00:39:00,690 --> 00:39:05,099
cases we'll see if there's anything else

743
00:39:02,639 --> 00:39:07,578
that we really need later but that's

744
00:39:05,099 --> 00:39:17,780
what we want to see and so hopefully now

745
00:39:07,579 --> 00:39:17,780
if we just go ahead and reset this

746
00:39:24,710 --> 00:39:34,510
I'm not sure what happened there why are

747
00:39:31,400 --> 00:39:34,510
we not loading anything anymore

748
00:39:39,960 --> 00:39:45,740
that was weird let's go down with that

749
00:39:47,179 --> 00:39:53,690
looks like all the data is still there

750
00:39:49,940 --> 00:39:53,690
unless we rewrote it

751
00:40:05,900 --> 00:40:21,260
Oh Soph bean come on up hey puss is with

752
00:40:12,800 --> 00:40:21,730
us sure seems like we got plenty of data

753
00:40:21,260 --> 00:40:24,620
there

754
00:40:21,730 --> 00:40:26,869
so what's did I mess something up when I

755
00:40:24,619 --> 00:40:27,559
was I thought I I thought I did this

756
00:40:26,869 --> 00:40:30,949
properly

757
00:40:27,559 --> 00:40:35,570
there's handmade W handmade that's all

758
00:40:30,949 --> 00:40:37,129
we really need right how come I'm not

759
00:40:35,570 --> 00:40:42,680
getting any heck of I'm not getting

760
00:40:37,130 --> 00:40:43,940
graphics what happened just look at our

761
00:40:42,679 --> 00:40:48,500
lovely sphere and our light probes

762
00:40:43,940 --> 00:40:50,510
though which I feel like is good what

763
00:40:48,500 --> 00:40:58,579
you doing beam do you want to help debug

764
00:40:50,510 --> 00:40:59,840
us join up to buck this huh do you I'm

765
00:40:58,579 --> 00:41:03,139
gonna go ahead and look at what happened

766
00:40:59,840 --> 00:41:06,039
to asset loading wise oh I wonder if

767
00:41:03,139 --> 00:41:08,779
some of those guards are wrong so

768
00:41:06,039 --> 00:41:11,659
actually that makes some sense meaning

769
00:41:08,780 --> 00:41:13,460
if I in here if when you do the bitmap

770
00:41:11,659 --> 00:41:15,769
if I guarded one of the bitmap calls

771
00:41:13,460 --> 00:41:19,550
wrong that would probably do it as well

772
00:41:15,769 --> 00:41:25,219
so if all right we got a saucy we got a

773
00:41:19,550 --> 00:41:29,539
saucy beam beam beam what's wrong what's

774
00:41:25,219 --> 00:41:30,799
wrong what are you looking for you know

775
00:41:29,539 --> 00:41:35,480
we can't program if you're in front of

776
00:41:30,800 --> 00:41:42,170
the keyboard you know that right what do

777
00:41:35,480 --> 00:41:44,480
you want to do hmm you smile look out

778
00:41:42,170 --> 00:41:47,860
the window that's not gonna get the code

779
00:41:44,480 --> 00:41:52,579
done that's not gonna get the code done

780
00:41:47,860 --> 00:41:54,400
you know that and you refuse to help you

781
00:41:52,579 --> 00:41:57,949
never type anything good you always type

782
00:41:54,400 --> 00:42:00,920
garbage n I don't know what you type in

783
00:41:57,949 --> 00:42:02,929
code in cat language which doesn't work

784
00:42:00,920 --> 00:42:04,909
on our computers you probably have more

785
00:42:02,929 --> 00:42:08,578
advanced computers on the planet that

786
00:42:04,909 --> 00:42:14,278
you're from there you go

787
00:42:08,579 --> 00:42:17,729
all right so what I'd like to do is just

788
00:42:14,278 --> 00:42:21,748
go ahead and look at those calls I

789
00:42:17,728 --> 00:42:25,608
modified they're like get bitmap and

790
00:42:21,748 --> 00:42:28,338
make sure that I didn't I may have like

791
00:42:25,608 --> 00:42:31,078
accidentally garbage to those up so

792
00:42:28,338 --> 00:42:34,788
actually in here you can see this was

793
00:42:31,079 --> 00:42:34,789
not supposed to be this way anyway

794
00:42:39,079 --> 00:42:51,539
probably want that um let's see so make

795
00:42:47,248 --> 00:42:54,778
sure all the results okay so we didn't

796
00:42:51,539 --> 00:42:56,849
we did this wrong the result isn't here

797
00:42:54,778 --> 00:42:59,159
anymore for some reason I accidentally

798
00:42:56,849 --> 00:43:01,380
deleted it but that's that's why right

799
00:42:59,159 --> 00:43:03,478
it's supposed to have like a get texture

800
00:43:01,380 --> 00:43:05,459
call how did I delete that accidentally

801
00:43:03,478 --> 00:43:07,528
I don't know so this is the problem

802
00:43:05,458 --> 00:43:09,989
right here right you can see that render

803
00:43:07,528 --> 00:43:17,789
the result here is it's not getting set

804
00:43:09,989 --> 00:43:20,239
to anything I think that's what we

805
00:43:17,789 --> 00:43:20,239
needed right

806
00:43:33,619 --> 00:43:38,230
just looking at whether or not any of

807
00:43:35,119 --> 00:43:38,230
these also did the same thing

808
00:43:44,500 --> 00:43:53,309
so it looks pretty good now let's take a

809
00:43:48,940 --> 00:43:56,619
look there we go

810
00:43:53,309 --> 00:43:57,608
so I think that's all that we really had

811
00:43:56,619 --> 00:44:01,200
to worry about

812
00:43:57,608 --> 00:44:05,199
so now looks like we're back in business

813
00:44:01,199 --> 00:44:07,329
so what I'd like to do now is again try

814
00:44:05,199 --> 00:44:09,608
it with render doc and make sure that

815
00:44:07,329 --> 00:44:11,139
we've fixed the actual problem and then

816
00:44:09,608 --> 00:44:13,960
take a look at a couple things that I

817
00:44:11,139 --> 00:44:16,929
wanted to look at just a separate sort

818
00:44:13,960 --> 00:44:19,840
of issue so if we open up render doc

819
00:44:16,929 --> 00:44:21,879
here and we're still got a setup wrong

820
00:44:19,840 --> 00:44:23,950
I'm hoping now that like when I launch

821
00:44:21,880 --> 00:44:26,050
we won't crash render doc we just pop up

822
00:44:23,949 --> 00:44:31,358
a warning message and so that's just

823
00:44:26,050 --> 00:44:38,800
more pleasant right okay this time it's

824
00:44:31,358 --> 00:44:40,539
them I want to say so maybe it wasn't

825
00:44:38,800 --> 00:44:43,050
really our fault maybe it's only half

826
00:44:40,539 --> 00:44:43,050
our fault

827
00:45:19,190 --> 00:45:28,070
so I don't know now granted we don't

828
00:45:25,219 --> 00:45:30,469
really need it to handle that properly

829
00:45:28,070 --> 00:45:34,190
because you know we saw them we know

830
00:45:30,469 --> 00:45:41,329
what's wrong we saw the message box so I

831
00:45:34,190 --> 00:45:43,909
guess we're okay yeah I don't know but

832
00:45:41,329 --> 00:45:45,529
piping we can run it and so everything's

833
00:45:43,909 --> 00:45:49,339
fine now we can we can look at the

834
00:45:45,530 --> 00:45:51,830
performance and stuff like that and if

835
00:45:49,340 --> 00:45:53,840
we take a look at the performance of the

836
00:45:51,829 --> 00:45:55,789
application again there's some weirdness

837
00:45:53,840 --> 00:45:56,930
and I don't really know what it is so I

838
00:45:55,789 --> 00:46:00,949
would like to take a look at it if we

839
00:45:56,929 --> 00:46:03,190
turn off requesting vsync so we're not

840
00:46:00,949 --> 00:46:07,309
actually asking for for vsync anymore

841
00:46:03,190 --> 00:46:11,900
then what you can sort of see is we we

842
00:46:07,309 --> 00:46:15,139
don't quite always get a solid frame

843
00:46:11,900 --> 00:46:17,329
time right we we sometimes are missing

844
00:46:15,139 --> 00:46:24,440
60 we're like sort of stuttering between

845
00:46:17,329 --> 00:46:25,940
60 and and 30 right and you can and you

846
00:46:24,440 --> 00:46:27,950
can kind of see that happening here

847
00:46:25,940 --> 00:46:29,960
right and so I would like to know a

848
00:46:27,949 --> 00:46:35,179
little bit more about why that's

849
00:46:29,960 --> 00:46:38,119
happening and I don't really know so we

850
00:46:35,179 --> 00:46:39,289
looked at the memory issue and you know

851
00:46:38,119 --> 00:46:41,480
there could be still some of that

852
00:46:39,289 --> 00:46:43,340
happening but I kind of doubt it so I

853
00:46:41,480 --> 00:46:45,230
think it might have to do with the fact

854
00:46:43,340 --> 00:46:47,780
that we're sending these vertices down

855
00:46:45,230 --> 00:46:49,280
too many times for no reason I was just

856
00:46:47,780 --> 00:46:51,500
kind of hypothesizing that that might be

857
00:46:49,280 --> 00:46:56,269
true and so I was kind of hoping to get

858
00:46:51,500 --> 00:47:02,510
a look at that so if I ask render render

859
00:46:56,269 --> 00:47:04,159
dock to capture for us and we go back

860
00:47:02,510 --> 00:47:07,760
and look at the capture so here's the

861
00:47:04,159 --> 00:47:09,949
capture uh at this point I just want to

862
00:47:07,760 --> 00:47:12,740
kind of know like alright what do you

863
00:47:09,949 --> 00:47:17,329
think is going on here and I'm not sure

864
00:47:12,739 --> 00:47:19,519
right but here's here's my theory I'm

865
00:47:17,329 --> 00:47:23,029
just giving you a theory there's a lot

866
00:47:19,519 --> 00:47:26,929
of guesswork involved in performance

867
00:47:23,030 --> 00:47:29,740
profiling certainly so this to rate

868
00:47:26,929 --> 00:47:32,329
these duration information things I

869
00:47:29,739 --> 00:47:32,739
don't know that they're particularly a

870
00:47:32,329 --> 00:47:38,110
cure

871
00:47:32,739 --> 00:47:39,939
it like I don't I don't know that this

872
00:47:38,110 --> 00:47:42,070
helps you with anything because this is

873
00:47:39,940 --> 00:47:45,700
a seems to be a nonsense number there's

874
00:47:42,070 --> 00:47:49,600
no way that our game takes 35,000

875
00:47:45,699 --> 00:47:55,539
microseconds I don't think that's

876
00:47:49,599 --> 00:47:59,230
plausible I I mean it's

877
00:47:55,539 --> 00:48:01,300
maybe the worst case time is that but

878
00:47:59,230 --> 00:48:02,860
like if you look that that would have to

879
00:48:01,300 --> 00:48:06,400
be the worst case time I guess is what I

880
00:48:02,860 --> 00:48:10,390
would say because if the game ever ran

881
00:48:06,400 --> 00:48:16,000
at 60 then you know that you know 1,000

882
00:48:10,389 --> 00:48:17,289
divided by 60 is 16 right so that is

883
00:48:16,000 --> 00:48:19,869
what we would expect to see somewhere

884
00:48:17,289 --> 00:48:23,679
like between 16 and 22 or something like

885
00:48:19,869 --> 00:48:25,840
that right the lowest we saw on there

886
00:48:23,679 --> 00:48:28,719
was like 42 frames a second or something

887
00:48:25,840 --> 00:48:31,360
so 23 so this number just seems

888
00:48:28,719 --> 00:48:33,939
fictitious and not representative of the

889
00:48:31,360 --> 00:48:36,430
performance we're actually seeing so I

890
00:48:33,940 --> 00:48:38,980
don't really trust it but what we could

891
00:48:36,429 --> 00:48:42,190
say is maybe the magnitudes are relative

892
00:48:38,980 --> 00:48:44,108
so you know maybe it does correctly say

893
00:48:42,190 --> 00:48:46,389
that you know this is the place where

894
00:48:44,108 --> 00:48:50,108
the time is being spent or something I

895
00:48:46,389 --> 00:48:52,599
don't know but anyway what's nice about

896
00:48:50,108 --> 00:48:54,039
this is we can see our passes right we

897
00:48:52,599 --> 00:48:55,719
can see them happening so there's the

898
00:48:54,039 --> 00:48:57,608
first pass there's the second pass

899
00:48:55,719 --> 00:48:59,919
there's the third pass there's the

900
00:48:57,608 --> 00:49:01,929
fourth pass right

901
00:48:59,920 --> 00:49:04,590
so basically we're rendering the slices

902
00:49:01,929 --> 00:49:09,039
that we then composite back together and

903
00:49:04,590 --> 00:49:10,750
what I'm hoping is the primary source of

904
00:49:09,039 --> 00:49:12,340
our slowdown but I don't actually know

905
00:49:10,750 --> 00:49:14,889
but what I'm hoping is the primary

906
00:49:12,340 --> 00:49:18,670
source of our slowdown is that we don't

907
00:49:14,889 --> 00:49:23,799
right now really do any work to make

908
00:49:18,670 --> 00:49:28,030
sure that when we send vertices down to

909
00:49:23,800 --> 00:49:30,490
the graphics card that we do that in an

910
00:49:28,030 --> 00:49:33,340
economical way and there's two stages of

911
00:49:30,489 --> 00:49:35,559
that we could do one is we could

912
00:49:33,340 --> 00:49:37,358
actually be really careful about only

913
00:49:35,559 --> 00:49:40,420
sending down vertices that have changed

914
00:49:37,358 --> 00:49:42,159
from frame to frame that's like the most

915
00:49:40,420 --> 00:49:43,750
hardcore and that involves actually

916
00:49:42,159 --> 00:49:45,259
tracking changes to the system and stuff

917
00:49:43,750 --> 00:49:49,550
I don't really want to do that not

918
00:49:45,260 --> 00:49:50,570
yet anyway the second thing is just

919
00:49:49,550 --> 00:49:52,310
making sure that they don't get

920
00:49:50,570 --> 00:49:55,789
submitted every time because we have

921
00:49:52,309 --> 00:49:58,309
four passes here and in the naive

922
00:49:55,789 --> 00:50:01,579
approach the OpenGL driver may be

923
00:49:58,309 --> 00:50:03,170
sending down those vertices all four

924
00:50:01,579 --> 00:50:04,730
times even though they don't change

925
00:50:03,170 --> 00:50:07,490
right we know that the exact same

926
00:50:04,730 --> 00:50:10,639
vertices for four render passes we want

927
00:50:07,489 --> 00:50:12,969
it to know that they're the same and it

928
00:50:10,639 --> 00:50:16,219
doesn't have to resend them over the bus

929
00:50:12,969 --> 00:50:18,859
or copy them into driver memory or

930
00:50:16,219 --> 00:50:21,769
anything like that other than the very

931
00:50:18,860 --> 00:50:24,200
first time and so that's the main thing

932
00:50:21,769 --> 00:50:28,759
I'd like to do is actually go make sure

933
00:50:24,199 --> 00:50:31,429
that that's not happening and so my

934
00:50:28,760 --> 00:50:33,170
assumption is that it is happening and I

935
00:50:31,429 --> 00:50:36,049
would like to take a look and see if we

936
00:50:33,170 --> 00:50:38,240
can actually eliminate that so looking

937
00:50:36,050 --> 00:50:40,340
at the timings here if we were to

938
00:50:38,239 --> 00:50:42,949
believe them which I don't but let's

939
00:50:40,340 --> 00:50:48,289
just say they were accurate or at least

940
00:50:42,949 --> 00:50:51,710
relative we would expect these draw

941
00:50:48,289 --> 00:50:54,289
calls to take time and these calls to

942
00:50:51,710 --> 00:50:56,449
not take any time except perhaps the

943
00:50:54,289 --> 00:50:58,369
first one so maybe this call takes some

944
00:50:56,449 --> 00:51:02,379
time but these calls should be free

945
00:50:58,369 --> 00:51:08,269
right because they're actually the same

946
00:51:02,380 --> 00:51:10,160
data you know I'm saying so I'd like to

947
00:51:08,269 --> 00:51:14,599
get that worked out and see what happens

948
00:51:10,159 --> 00:51:17,149
there to see if that improves things at

949
00:51:14,599 --> 00:51:18,619
all and like I said I don't I don't

950
00:51:17,150 --> 00:51:21,139
really know if it will but I just want

951
00:51:18,619 --> 00:51:26,179
to play with that a little bit so again

952
00:51:21,139 --> 00:51:29,779
running this this guy if we launch it no

953
00:51:26,179 --> 00:51:32,480
I don't need you save that capture if we

954
00:51:29,780 --> 00:51:36,310
launch it I might want to turn vsync off

955
00:51:32,480 --> 00:51:43,329
so I don't have to keep doing this right

956
00:51:36,309 --> 00:51:43,329
so we may set request vsync to to false

957
00:51:54,329 --> 00:51:58,289
that's in the Renault test

958
00:52:06,590 --> 00:52:12,210
yeah so we're just setting this here so

959
00:52:09,719 --> 00:52:18,179
what I think I'll do is I what I might

960
00:52:12,210 --> 00:52:26,550
do is say look if handmade internal so

961
00:52:18,179 --> 00:52:28,799
it's s we don't want to set it so by

962
00:52:26,550 --> 00:52:31,050
default we'll ask for vsync nice lock 60

963
00:52:28,800 --> 00:52:32,910
frames but when we're doing our own

964
00:52:31,050 --> 00:52:36,300
internal testing we turn it off so that

965
00:52:32,909 --> 00:52:38,250
we can see what our frame rate actually

966
00:52:36,300 --> 00:52:41,010
would be so that we can make sure that

967
00:52:38,250 --> 00:52:45,030
we're optimizing for that right so let's

968
00:52:41,010 --> 00:52:48,330
go ahead and launch there we go

969
00:52:45,030 --> 00:52:51,090
right and so that's a nice that is a

970
00:52:48,329 --> 00:52:52,619
nice 60 frames a second and then you can

971
00:52:51,090 --> 00:52:57,200
see sometimes we get into situations

972
00:52:52,619 --> 00:52:57,200
where we're starting to climb right

973
00:53:00,500 --> 00:53:04,760
it seems to be mostly when we're moving

974
00:53:02,329 --> 00:53:06,140
which makes no sense to me I have no

975
00:53:04,760 --> 00:53:08,319
idea why that would affect anything

976
00:53:06,139 --> 00:53:08,318
actually

977
00:53:12,460 --> 00:53:16,670
it also doesn't seem to be locked at 60

978
00:53:15,230 --> 00:53:19,480
even when it says it is that may be an

979
00:53:16,670 --> 00:53:21,769
average frames per second so anyway

980
00:53:19,480 --> 00:53:24,710
let's see what we can do about that I

981
00:53:21,769 --> 00:53:27,889
just want to see what we can do to get

982
00:53:24,710 --> 00:53:29,210
that a little bit cleaner so let's start

983
00:53:27,889 --> 00:53:32,239
with some basic stuff and then we'll

984
00:53:29,210 --> 00:53:35,500
we'll get more will get more unbasic as

985
00:53:32,239 --> 00:53:37,549
we go so inside the OpenGL driver here

986
00:53:35,500 --> 00:53:42,380
just to take a look at what's going on

987
00:53:37,550 --> 00:53:44,839
you can see when we enter a render entry

988
00:53:42,380 --> 00:53:48,650
textured quads here you can see that we

989
00:53:44,838 --> 00:53:52,099
bind some textures and then we do the

990
00:53:48,650 --> 00:53:54,200
draw elements base vertex here right to

991
00:53:52,099 --> 00:54:00,609
set what we're going to use for those

992
00:53:54,199 --> 00:54:00,608
and then when we're done we actually

993
00:54:01,480 --> 00:54:08,838
yeah in fact we actually go through and

994
00:54:04,940 --> 00:54:10,970
say are these are these the slow is this

995
00:54:08,838 --> 00:54:12,409
the slow dispatch path or the fastest

996
00:54:10,969 --> 00:54:14,929
batch path right and you can see us

997
00:54:12,409 --> 00:54:17,629
using them here and it depends which

998
00:54:14,929 --> 00:54:20,239
style of use we're using right you can

999
00:54:17,630 --> 00:54:23,240
see that for passing the indices or not

1000
00:54:20,239 --> 00:54:26,689
and then when we actually bind the

1001
00:54:23,239 --> 00:54:33,469
vertex buffer you can see that happening

1002
00:54:26,690 --> 00:54:35,869
up here we do bind vertex buffer i-s it

1003
00:54:33,469 --> 00:54:40,519
probably just has to load them out and

1004
00:54:35,869 --> 00:54:42,260
it doesn't really have any idea yeah so

1005
00:54:40,519 --> 00:54:45,530
I think it may have to kind of just grab

1006
00:54:42,260 --> 00:54:48,470
those every time right and we really

1007
00:54:45,530 --> 00:54:51,349
don't want it to do that so what I would

1008
00:54:48,469 --> 00:54:53,389
like to do is kind of take a step

1009
00:54:51,349 --> 00:54:55,910
towards a more optimal render dispatch

1010
00:54:53,389 --> 00:55:02,440
path and say what if we just sent these

1011
00:54:55,909 --> 00:55:07,578
down as one like clean pass so we said

1012
00:55:02,440 --> 00:55:09,650
here's all the vertices and indices open

1013
00:55:07,579 --> 00:55:12,500
jail for this frame and then when we

1014
00:55:09,650 --> 00:55:13,990
refer to them we need you we want you to

1015
00:55:12,500 --> 00:55:15,760
be able to know

1016
00:55:13,989 --> 00:55:17,108
that they're not going to be changing

1017
00:55:15,760 --> 00:55:20,170
out from under you so you don't need to

1018
00:55:17,108 --> 00:55:21,608
resend them every time right and so in

1019
00:55:20,170 --> 00:55:24,880
order to do that we need some way of

1020
00:55:21,608 --> 00:55:27,338
telling OpenGL like what's going on with

1021
00:55:24,880 --> 00:55:33,068
that and there are ways we can do this

1022
00:55:27,338 --> 00:55:35,440
so if you look at say dock set up in

1023
00:55:33,068 --> 00:55:38,980
jail which is a good look we've always

1024
00:55:35,440 --> 00:55:40,599
used this for looking at our OpenGL

1025
00:55:38,980 --> 00:55:43,630
document since people pointed it out on

1026
00:55:40,599 --> 00:55:45,400
stream it's been really useful and if we

1027
00:55:43,630 --> 00:55:48,849
look in here you can see that there's

1028
00:55:45,400 --> 00:55:51,849
ways of actually giving opengl

1029
00:55:48,849 --> 00:55:53,740
information about buffers that are

1030
00:55:51,849 --> 00:55:57,068
specifically there to tell it that these

1031
00:55:53,739 --> 00:55:58,509
are not touched or more specifically we

1032
00:55:57,068 --> 00:55:59,639
can tell them when they are touched

1033
00:55:58,510 --> 00:56:03,789
right

1034
00:55:59,639 --> 00:56:04,989
and so geo map and unmapped buffer is

1035
00:56:03,789 --> 00:56:07,778
one way of doing this

1036
00:56:04,989 --> 00:56:10,739
GL buffer data is another one and we can

1037
00:56:07,778 --> 00:56:13,298
decide kind of which ones we want to do

1038
00:56:10,739 --> 00:56:15,489
but let me kind of give you the layout

1039
00:56:13,298 --> 00:56:17,230
of how they work and unfortunately these

1040
00:56:15,489 --> 00:56:18,939
things change over time so which one's

1041
00:56:17,230 --> 00:56:20,559
the right one to do and OpenGL kind of

1042
00:56:18,940 --> 00:56:26,710
changes it's one of the bad parts about

1043
00:56:20,559 --> 00:56:28,150
OpenGL the advice before used to be one

1044
00:56:26,710 --> 00:56:32,970
thing and then it was another thing and

1045
00:56:28,150 --> 00:56:35,650
it's just a long story but point being

1046
00:56:32,969 --> 00:56:37,209
what this allows you to do is if you

1047
00:56:35,650 --> 00:56:40,838
think about what's going on in the code

1048
00:56:37,210 --> 00:56:43,088
here right and we look at this what

1049
00:56:40,838 --> 00:56:46,298
happens is I'm effectively saying all

1050
00:56:43,088 --> 00:56:48,159
right look I want to bind these buffers

1051
00:56:46,298 --> 00:56:50,230
here's the vertex buffer here's the

1052
00:56:48,159 --> 00:56:52,659
index buffer right at some point I told

1053
00:56:50,230 --> 00:56:55,480
you what the data was using buffer data

1054
00:56:52,659 --> 00:56:57,159
I can see it here right so we sent it

1055
00:56:55,480 --> 00:56:59,048
down and we said that this was something

1056
00:56:57,159 --> 00:57:02,618
that we were going to draw and then

1057
00:56:59,048 --> 00:57:05,858
later we said all right you know let's

1058
00:57:02,619 --> 00:57:10,630
go ahead and draw it using GL draw

1059
00:57:05,858 --> 00:57:13,328
elements base vertex right and in theory

1060
00:57:10,630 --> 00:57:15,579
anyway well actually now think about it

1061
00:57:13,329 --> 00:57:17,650
if we alright we're already using gel

1062
00:57:15,579 --> 00:57:19,869
buffer data I'm about to say we should

1063
00:57:17,650 --> 00:57:22,539
use it of it but Birdy's go for it that

1064
00:57:19,869 --> 00:57:24,838
should have sent the data down and kept

1065
00:57:22,539 --> 00:57:24,839
it there

1066
00:57:32,059 --> 00:57:40,000
hmm so this should only send the data

1067
00:57:35,150 --> 00:57:42,950
one time you know just looking at this

1068
00:57:40,000 --> 00:57:43,909
so I guess yeah again you know what we

1069
00:57:42,949 --> 00:57:45,500
already did the thing much like

1070
00:57:43,909 --> 00:57:48,259
yesterday we already did the thing

1071
00:57:45,500 --> 00:57:51,019
although yesterday we didn't ever really

1072
00:57:48,260 --> 00:57:53,450
actually use it but I we already did the

1073
00:57:51,019 --> 00:57:55,699
thing that I was expecting so I'm not

1074
00:57:53,449 --> 00:57:58,279
actually sure yeah again where the

1075
00:57:55,699 --> 00:58:00,679
slowness is coming from there let's run

1076
00:57:58,280 --> 00:58:02,360
the GL profile in insight one more time

1077
00:58:00,679 --> 00:58:04,429
I would like to know if maybe someone

1078
00:58:02,360 --> 00:58:12,380
can tell us what the graphics card is

1079
00:58:04,429 --> 00:58:15,519
actually having trouble with here so I'm

1080
00:58:12,380 --> 00:58:15,519
loading up insight here

1081
00:58:20,389 --> 00:58:24,670
I'm going to go ahead and hop around

1082
00:58:31,909 --> 00:58:36,078
and so yeah again I guess maybe I don't

1083
00:58:34,219 --> 00:58:38,238
know if it's just Windows compositing

1084
00:58:36,079 --> 00:58:40,700
that's the problem maybe when I'm full

1085
00:58:38,239 --> 00:58:43,400
screen it gets no you can see like it's

1086
00:58:40,699 --> 00:58:47,929
spiking up right we're missing 60 right

1087
00:58:43,400 --> 00:58:54,619
there very consistently so if I actually

1088
00:58:47,929 --> 00:59:03,618
if I ask what's wrong I'm curious what

1089
00:58:54,619 --> 00:59:07,358
it tells me how do I get I can't seem to

1090
00:59:03,619 --> 00:59:07,358
get insight to want to come to the front

1091
00:59:11,489 --> 00:59:25,219
how do I get incite to come to the front

1092
00:59:14,429 --> 00:59:25,219
dear end site I this is not helpful

1093
00:59:30,869 --> 00:59:34,869
there we go so I guess I said to Ulta

1094
00:59:33,400 --> 00:59:37,720
for that window I don't know what that

1095
00:59:34,869 --> 00:59:41,230
was supposed to be anyway so if we look

1096
00:59:37,719 --> 00:59:44,319
at the profile on here just trying to

1097
00:59:41,230 --> 00:59:46,929
figure out what the actual slowdown is

1098
00:59:44,320 --> 00:59:49,090
there it's kind of again a little bit

1099
00:59:46,929 --> 00:59:50,829
hard to tell because you know if I look

1100
00:59:49,090 --> 00:59:55,500
at what these are you know draw them in

1101
00:59:50,829 --> 00:59:58,719
space vertex that's this call right here

1102
00:59:55,500 --> 01:00:01,989
supposedly I look here here's another

1103
00:59:58,719 --> 01:00:04,869
draw in space vertex right here's a draw

1104
01:00:01,989 --> 01:00:07,329
arrays of size 4 it thinks that was

1105
01:00:04,869 --> 01:00:10,150
taking a ton of time and that's the

1106
01:00:07,329 --> 01:00:12,759
multi sample resolved right there right

1107
01:00:10,150 --> 01:00:14,470
so it thinks it was taking one point two

1108
01:00:12,760 --> 01:00:19,410
seven milliseconds to do that multi

1109
01:00:14,469 --> 01:00:23,679
sample resolve which I maybe it is I

1110
01:00:19,409 --> 01:00:26,980
don't know but I'm not sure why that

1111
01:00:23,679 --> 01:00:29,259
would be the case it's kind of tricky to

1112
01:00:26,980 --> 01:00:31,570
say but I believe right I mean just

1113
01:00:29,260 --> 01:00:35,770
looking at where that probably is in our

1114
01:00:31,570 --> 01:00:41,890
render stream I believe if this call

1115
01:00:35,769 --> 01:00:44,559
here resolved multi sample where we're

1116
01:00:41,889 --> 01:00:46,629
basically saying like look draw this one

1117
01:00:44,559 --> 01:00:49,539
triangle strip here and we're using the

1118
01:00:46,630 --> 01:00:51,460
resolved multi sample program so you

1119
01:00:49,539 --> 01:00:55,809
know maybe the resolved multi sample

1120
01:00:51,460 --> 01:00:58,420
program really sucks and that could be

1121
01:00:55,809 --> 01:01:00,489
right look maybe this this program is

1122
01:00:58,420 --> 01:01:04,210
really bad and it takes to milk too long

1123
01:01:00,489 --> 01:01:06,459
that seems totally plausible right and I

1124
01:01:04,210 --> 01:01:07,960
guess I don't know but you can kind of

1125
01:01:06,460 --> 01:01:10,720
see the code here it might be because

1126
01:01:07,960 --> 01:01:13,059
hey it has to fetch all of these texture

1127
01:01:10,719 --> 01:01:16,119
samples that could definitely because

1128
01:01:13,059 --> 01:01:17,739
remember it's a multi sample and we're

1129
01:01:16,119 --> 01:01:20,130
trying to resolve the multi sample down

1130
01:01:17,739 --> 01:01:20,129
and

1131
01:01:31,599 --> 01:01:35,829
just trying to look at what's going on

1132
01:01:33,219 --> 01:01:39,179
in here I will I guess I'll agree

1133
01:01:35,829 --> 01:01:39,179
looking at it it looks too long

1134
01:01:47,630 --> 01:01:55,220
so this is the actual path right here we

1135
01:01:52,039 --> 01:01:58,960
set the DEF min and Max we look at what

1136
01:01:55,219 --> 01:02:04,669
the different depths are in the depth

1137
01:01:58,960 --> 01:02:08,179
sampler like this we take half the

1138
01:02:04,670 --> 01:02:09,619
difference between them because I

1139
01:02:08,179 --> 01:02:11,629
remember we heuristic lis determined

1140
01:02:09,619 --> 01:02:14,619
that was the best way to resolve

1141
01:02:11,630 --> 01:02:14,619
multiple samples

1142
01:02:25,579 --> 01:02:30,019
I'll be honest I don't understand why we

1143
01:02:27,710 --> 01:02:34,579
really did that I'm not sure why we

1144
01:02:30,019 --> 01:02:38,989
didn't just I'm not sure why we didn't

1145
01:02:34,579 --> 01:02:41,559
just use the one that had the highest

1146
01:02:38,989 --> 01:02:41,559
alpha

1147
01:02:51,909 --> 01:02:58,369
so I'm not it's fairly sure why we did

1148
01:02:54,199 --> 01:03:05,449
it exactly that way but anyway we looped

1149
01:02:58,369 --> 01:03:10,789
over the sample count and we sort of

1150
01:03:05,449 --> 01:03:14,989
combined these together right I would

1151
01:03:10,789 --> 01:03:16,519
guess what I would say is the first

1152
01:03:14,989 --> 01:03:19,069
thing I'd say is looping versus a

1153
01:03:16,519 --> 01:03:22,880
constant so this loop can't be unrolled

1154
01:03:19,070 --> 01:03:25,640
we probably want to unroll it and so

1155
01:03:22,880 --> 01:03:27,680
what we would rather do here is have

1156
01:03:25,639 --> 01:03:31,119
sample can't be a constant so this loop

1157
01:03:27,679 --> 01:03:33,949
can be unrolled by the compiler

1158
01:03:31,119 --> 01:03:36,889
just because we probably do want that to

1159
01:03:33,949 --> 01:03:38,779
happen and you can see us doing our

1160
01:03:36,889 --> 01:03:43,819
color combinations here we do the color

1161
01:03:38,780 --> 01:03:46,340
combinations with our own multiply which

1162
01:03:43,820 --> 01:03:48,680
I don't know how intelligent that is and

1163
01:03:46,340 --> 01:03:50,150
then again this in sample here have to

1164
01:03:48,679 --> 01:03:54,349
be a real inversion because it doesn't

1165
01:03:50,150 --> 01:03:55,880
know what this value is so a lot of that

1166
01:03:54,349 --> 01:03:57,949
stuff just doesn't make a lot of sense

1167
01:03:55,880 --> 01:04:00,950
so we could probably fix some of this

1168
01:03:57,949 --> 01:04:04,250
stuff I don't know to what extent we can

1169
01:04:00,949 --> 01:04:07,539
really fix it but without going a little

1170
01:04:04,250 --> 01:04:11,139
bit further down the rabbit hole but

1171
01:04:07,539 --> 01:04:19,909
presumably we can do a little bit better

1172
01:04:11,139 --> 01:04:22,549
than this so I don't know where the

1173
01:04:19,909 --> 01:04:24,799
Alpha comes in I'm not sure why there's

1174
01:04:22,550 --> 01:04:25,910
why we're not outputting any Alpha but I

1175
01:04:24,800 --> 01:04:32,269
guess that's because we don't actually

1176
01:04:25,909 --> 01:04:34,549
use it in any subsequent passes mmm we

1177
01:04:32,269 --> 01:04:36,909
just use the depth I guess just looking

1178
01:04:34,550 --> 01:04:40,280
at it here and I'm just not seeing any

1179
01:04:36,909 --> 01:04:42,649
alpha pasture right I mean you see us

1180
01:04:40,280 --> 01:04:48,740
setting services book maybe service

1181
01:04:42,650 --> 01:04:50,809
lévesque dot a got set up here yeah so

1182
01:04:48,739 --> 01:04:53,379
it does it does preserve the alpha I

1183
01:04:50,809 --> 01:04:53,380
take it back

1184
01:04:54,030 --> 01:05:01,269
so it's kind of confusing and I guess

1185
01:04:57,880 --> 01:05:03,150
I'm not really 100% certain but what

1186
01:05:01,269 --> 01:05:05,980
probably has to happen here

1187
01:05:03,150 --> 01:05:09,550
is that we probably just want to start

1188
01:05:05,980 --> 01:05:11,740
by making this be a constant and so

1189
01:05:09,550 --> 01:05:13,930
let's go ahead and do that so it's

1190
01:05:11,739 --> 01:05:16,239
pretty easy for us to do instead of

1191
01:05:13,929 --> 01:05:18,099
sample count getting passed down what we

1192
01:05:16,239 --> 01:05:19,449
can do is in the fragment code here we

1193
01:05:18,099 --> 01:05:28,839
could just pound to find the sample

1194
01:05:19,449 --> 01:05:30,159
count like this okay and so here we're

1195
01:05:28,840 --> 01:05:32,650
just gonna say the sample count is a

1196
01:05:30,159 --> 01:05:35,199
constant value and so you can use that

1197
01:05:32,650 --> 01:05:38,110
constant value everywhere and optimize

1198
01:05:35,199 --> 01:05:40,869
this code when you compile it and so in

1199
01:05:38,110 --> 01:05:42,370
here what we do is we would just want to

1200
01:05:40,869 --> 01:05:46,929
insert that in there you can see us

1201
01:05:42,369 --> 01:05:53,440
doing basically that thing here right so

1202
01:05:46,929 --> 01:05:56,639
I'll say something like this and then

1203
01:05:53,440 --> 01:05:56,639
we'll just do a format string

1204
01:06:04,469 --> 01:06:11,079
and instead of doing the instead of

1205
01:06:09,730 --> 01:06:15,179
doing this as a string constant

1206
01:06:11,079 --> 01:06:20,409
we'll just like printf that's basically

1207
01:06:15,179 --> 01:06:23,440
and pass the sample count here so we

1208
01:06:20,409 --> 01:06:25,629
just need to know what that that multi

1209
01:06:23,440 --> 01:06:30,280
sample account actually is at the moment

1210
01:06:25,630 --> 01:06:31,630
and so when we're passing that when we

1211
01:06:30,280 --> 01:06:35,500
actually go to use that multi sample

1212
01:06:31,630 --> 01:06:39,340
program we were obviously passing down

1213
01:06:35,500 --> 01:06:48,489
the actual value somewhere let's take a

1214
01:06:39,340 --> 01:06:50,710
look at where that actually happened so

1215
01:06:48,489 --> 01:06:52,809
you can see here right we were getting

1216
01:06:50,710 --> 01:06:54,940
that result sample count out so what I'd

1217
01:06:52,809 --> 01:06:56,590
like to do is just remove that so

1218
01:06:54,940 --> 01:06:59,349
wherever that sample count actually yeah

1219
01:06:56,590 --> 01:07:00,760
right here I'd like that to go away and

1220
01:06:59,349 --> 01:07:03,009
then I want to see what we were passing

1221
01:07:00,760 --> 01:07:06,610
down there who was actually setting that

1222
01:07:03,010 --> 01:07:08,620
into what so you can see it's setting

1223
01:07:06,610 --> 01:07:10,450
the the sample count to just the max

1224
01:07:08,619 --> 01:07:16,389
sample count so that should be pretty

1225
01:07:10,449 --> 01:07:22,949
simple to emulate right so we just we're

1226
01:07:16,389 --> 01:07:22,949
just setting that like so

1227
01:07:26,989 --> 01:07:36,059
all right um I don't actually want

1228
01:07:34,230 --> 01:07:38,219
handmade here to be running over there

1229
01:07:36,059 --> 01:07:40,259
how do I terminate the program there we

1230
01:07:38,219 --> 01:07:43,829
go so I'm going to terminate handmade

1231
01:07:40,260 --> 01:07:46,260
hero so we get rid of it there and then

1232
01:07:43,829 --> 01:07:47,759
I want to debug this you know different

1233
01:07:46,260 --> 01:07:49,500
you know this sampler with the

1234
01:07:47,760 --> 01:07:54,480
hard-coded constant in there and I may

1235
01:07:49,500 --> 01:07:57,989
want to look at it a little bit more as

1236
01:07:54,480 --> 01:08:05,010
well just beyond what we're looking at

1237
01:07:57,989 --> 01:08:08,219
here and I want to make sure that it

1238
01:08:05,010 --> 01:08:10,760
actually works right but sure looks like

1239
01:08:08,219 --> 01:08:10,759
it works right

1240
01:08:16,859 --> 01:08:24,690
yeah so I think that's working just fine

1241
01:08:20,939 --> 01:08:27,088
now and if I actually look at the come

1242
01:08:24,689 --> 01:08:28,858
by the compiled multi sample now so in

1243
01:08:27,088 --> 01:08:30,750
theory it should just be unrolling those

1244
01:08:28,859 --> 01:08:34,410
loops hopefully but it's still gonna do

1245
01:08:30,750 --> 01:08:36,479
like sixteen fetches there right and

1246
01:08:34,409 --> 01:08:37,979
stuff like this so I don't know what the

1247
01:08:36,479 --> 01:08:40,349
most efficient way to actually do that

1248
01:08:37,979 --> 01:08:42,119
would be I will say that like we're only

1249
01:08:40,350 --> 01:08:46,130
using combined color now so obviously

1250
01:08:42,119 --> 01:08:46,130
like commit and NPL are going away

1251
01:08:54,548 --> 01:09:01,420
I'm not super sure what else to really

1252
01:08:58,659 --> 01:09:04,298
do here I assume this value is smart

1253
01:09:01,420 --> 01:09:08,079
enough to not be computed recomputed but

1254
01:09:04,298 --> 01:09:11,260
just in case it wasn't what we could do

1255
01:09:08,079 --> 01:09:14,979
is actually pass down in sample account

1256
01:09:11,260 --> 01:09:17,949
as well so so basically that would just

1257
01:09:14,979 --> 01:09:26,739
be a percent groups percent F there Oh

1258
01:09:17,949 --> 01:09:32,309
Molly beam that's an unhappy kitty so we

1259
01:09:26,739 --> 01:09:32,309
could do something like this as well

1260
01:09:32,640 --> 01:09:38,650
just to produce whatever that value is

1261
01:09:36,460 --> 01:09:40,409
as a constant so that way we know that

1262
01:09:38,649 --> 01:09:45,548
these are coming through as constants

1263
01:09:40,409 --> 01:09:47,019
and not as any other kind of value so

1264
01:09:45,548 --> 01:09:48,430
that we know it's not actually doing any

1265
01:09:47,020 --> 01:09:49,690
work there cuz I don't know how smart

1266
01:09:48,430 --> 01:09:51,700
the shader colors I think it's pretty

1267
01:09:49,689 --> 01:09:53,318
smart so I wouldn't I would have

1268
01:09:51,699 --> 01:09:55,300
suspected it to have done that transform

1269
01:09:53,319 --> 01:09:58,360
automatically but I just want to make

1270
01:09:55,300 --> 01:10:01,900
sure that it is so since we know the

1271
01:09:58,359 --> 01:10:08,649
in-sample account we also can probably

1272
01:10:01,899 --> 01:10:12,750
just let me see here taking the square

1273
01:10:08,649 --> 01:10:15,250
roots not great so combining in in

1274
01:10:12,750 --> 01:10:17,350
combining an sRGB we're taking the

1275
01:10:15,250 --> 01:10:24,039
average in srgb space versus taking the

1276
01:10:17,350 --> 01:10:27,400
average in bris is taking the average in

1277
01:10:24,039 --> 01:10:29,319
in linear space this is a place where I

1278
01:10:27,399 --> 01:10:32,289
think we probably would want to start

1279
01:10:29,319 --> 01:10:35,019
leaning on the graphics card so having

1280
01:10:32,289 --> 01:10:38,229
an actual direct srgb transform and

1281
01:10:35,020 --> 01:10:41,050
using real srgb would probably be

1282
01:10:38,229 --> 01:10:42,939
significantly better here because this

1283
01:10:41,050 --> 01:10:44,980
Texel fetch could automatically do the

1284
01:10:42,939 --> 01:10:47,979
srgb for us and it would probably be

1285
01:10:44,979 --> 01:10:49,659
free whereas here it's costing a 16

1286
01:10:47,979 --> 01:10:53,379
multiplies which is you know it's a lot

1287
01:10:49,659 --> 01:10:59,909
of multiplies and I think that would be

1288
01:10:53,380 --> 01:10:59,909
nice to get rid of right so yeah

1289
01:11:06,079 --> 01:11:09,329
so I don't know what I want to do about

1290
01:11:08,850 --> 01:11:10,980
that

1291
01:11:09,329 --> 01:11:12,689
similarly we'd get rid of the square

1292
01:11:10,979 --> 01:11:19,638
root but that only happens once so

1293
01:11:12,689 --> 01:11:19,638
that's a less concerning value right I

1294
01:11:20,179 --> 01:11:26,550
don't see much else in here that we're

1295
01:11:22,439 --> 01:11:34,460
really doing what I would say is why are

1296
01:11:26,550 --> 01:11:37,829
we looping over these twice though and

1297
01:11:34,460 --> 01:11:41,698
in fact what are we even doing this this

1298
01:11:37,829 --> 01:11:44,149
depth is not used so I feel like we can

1299
01:11:41,698 --> 01:11:47,129
at least consolidate this a little bit

1300
01:11:44,149 --> 01:11:48,599
the feeder compiler obviously already it

1301
01:11:47,130 --> 01:11:51,179
probably knows this I'm not sure it

1302
01:11:48,600 --> 01:11:53,730
really matters but what I'm thinking is

1303
01:11:51,179 --> 01:11:57,179
we just moved VR before combined color

1304
01:11:53,729 --> 01:11:59,189
up here and then in here where we're

1305
01:11:57,179 --> 01:12:00,868
doing this nonsense we can just

1306
01:11:59,189 --> 01:12:03,149
literally grab just the one part we

1307
01:12:00,868 --> 01:12:04,859
wanted which is this and do it inside

1308
01:12:03,149 --> 01:12:07,259
here right because this doesn't actually

1309
01:12:04,859 --> 01:12:10,589
depend these are not dependent they just

1310
01:12:07,260 --> 01:12:12,630
are separately computed so I think we

1311
01:12:10,590 --> 01:12:16,529
can just do it in one loop like that and

1312
01:12:12,630 --> 01:12:22,109
be done with it so I'm gonna give that a

1313
01:12:16,529 --> 01:12:27,750
shot and again I don't know I don't

1314
01:12:22,109 --> 01:12:30,988
really know looking at this how much

1315
01:12:27,750 --> 01:12:32,810
that sRGB if we had srgb in there I

1316
01:12:30,988 --> 01:12:36,388
don't know how much that would help us

1317
01:12:32,810 --> 01:12:40,429
but I'm not sure so looking at the

1318
01:12:36,389 --> 01:12:43,020
profile here doesn't look any different

1319
01:12:40,429 --> 01:12:44,850
again really just have no idea what's

1320
01:12:43,020 --> 01:12:48,270
causing that let me look at full screen

1321
01:12:44,850 --> 01:12:50,760
see if there's any difference yeah we

1322
01:12:48,270 --> 01:12:54,800
just we just have no idea like like we

1323
01:12:50,760 --> 01:12:59,489
have we are completely blind as to what

1324
01:12:54,800 --> 01:13:02,100
what the total frame time action is

1325
01:12:59,488 --> 01:13:06,988
there so here's the frame display time

1326
01:13:02,100 --> 01:13:08,730
and you can see like right you can see

1327
01:13:06,988 --> 01:13:10,769
that that difference there and I have no

1328
01:13:08,729 --> 01:13:12,959
idea who's doing that right we have no

1329
01:13:10,770 --> 01:13:16,700
idea why that's happening we're not

1330
01:13:12,960 --> 01:13:18,890
really changing what we're doing much

1331
01:13:16,699 --> 01:13:21,170
and I guess debug collation is an issue

1332
01:13:18,890 --> 01:13:24,829
so you know maybe we should be turning

1333
01:13:21,170 --> 01:13:28,989
that off to a certain extent because you

1334
01:13:24,829 --> 01:13:31,430
know if we look at the the timings here

1335
01:13:28,989 --> 01:13:33,739
you know debug collation is taking up a

1336
01:13:31,430 --> 01:13:35,659
pretty big chunk of it that's what's

1337
01:13:33,739 --> 01:13:36,769
going on inside game update game update

1338
01:13:35,659 --> 01:13:41,829
and renders taking all the time we don't

1339
01:13:36,770 --> 01:13:46,630
have much more updating render entities

1340
01:13:41,829 --> 01:13:48,979
sim region running tests so you know

1341
01:13:46,630 --> 01:13:50,449
looking at this too

1342
01:13:48,979 --> 01:13:52,009
just in terms of the amount of time it

1343
01:13:50,449 --> 01:13:56,359
takes us to get the frame out to the

1344
01:13:52,010 --> 01:13:58,789
card we could up to be we could that's

1345
01:13:56,359 --> 01:14:01,969
good optimi we could optimize that guy

1346
01:13:58,789 --> 01:14:03,829
quite a bit looks like we've got too

1347
01:14:01,970 --> 01:14:06,619
many vertices going through that path of

1348
01:14:03,829 --> 01:14:09,559
the pipe inside update and render

1349
01:14:06,619 --> 01:14:10,399
entities we know what's taking all the

1350
01:14:09,560 --> 01:14:13,940
time there

1351
01:14:10,399 --> 01:14:22,609
so when Meowth output that grass stuff

1352
01:14:13,939 --> 01:14:24,460
right just take a look here so when

1353
01:14:22,609 --> 01:14:26,899
we're drawing the ground cover right

1354
01:14:24,460 --> 01:14:32,600
like if you were to turn ground cover

1355
01:14:26,899 --> 01:14:37,879
off you would take a load off of the the

1356
01:14:32,600 --> 01:14:42,250
vertex pipe quite a bit and I'm just

1357
01:14:37,880 --> 01:14:45,650
curious to know what that looks like

1358
01:14:42,250 --> 01:14:48,619
frame rate wise so the ground cover has

1359
01:14:45,649 --> 01:14:50,449
been turned off and if we take a look at

1360
01:14:48,619 --> 01:14:52,899
the frame timings right we get a

1361
01:14:50,449 --> 01:14:54,979
definitely different view here so

1362
01:14:52,899 --> 01:14:56,809
there's the wing in the frame display

1363
01:14:54,979 --> 01:14:59,889
there's the debug collation there's the

1364
01:14:56,810 --> 01:15:04,400
game update time total game update time

1365
01:14:59,890 --> 01:15:06,260
and you know if we hop along through

1366
01:15:04,399 --> 01:15:08,359
here we can kind of see what we're

1367
01:15:06,260 --> 01:15:10,640
getting for a frame time and it looks

1368
01:15:08,359 --> 01:15:12,829
pretty consistent there so I guess what

1369
01:15:10,640 --> 01:15:14,510
I would say is I don't know we're

1370
01:15:12,829 --> 01:15:16,670
getting some very odd behavior and

1371
01:15:14,510 --> 01:15:17,960
behavior that I don't like which is that

1372
01:15:16,670 --> 01:15:19,010
and it could have to do with the fact

1373
01:15:17,960 --> 01:15:21,470
that we're doing the multi monitor

1374
01:15:19,010 --> 01:15:25,610
streaming stuff but you can see as I hop

1375
01:15:21,470 --> 01:15:27,310
around here we're getting clearly not 60

1376
01:15:25,609 --> 01:15:29,809
frames a second there's like jerkiness

1377
01:15:27,310 --> 01:15:30,230
but it's unclear where that's coming

1378
01:15:29,810 --> 01:15:34,640
from

1379
01:15:30,229 --> 01:15:37,609
or why right like the our frame timing

1380
01:15:34,640 --> 01:15:39,020
is not reporting something different you

1381
01:15:37,609 --> 01:15:42,799
know what I mean we're seeing the same

1382
01:15:39,020 --> 01:15:45,950
profile but that but when you actually

1383
01:15:42,800 --> 01:15:49,699
look at the world you get a completely

1384
01:15:45,949 --> 01:15:50,869
different perspective on it right so I

1385
01:15:49,699 --> 01:15:55,309
don't know if you guys can see this but

1386
01:15:50,869 --> 01:15:57,439
like it's jerky it's it doesn't look 60

1387
01:15:55,310 --> 01:16:00,039
frames a second to me and again I don't

1388
01:15:57,439 --> 01:16:03,769
know that could just be because of the

1389
01:16:00,039 --> 01:16:05,920
the problems with outputting to a second

1390
01:16:03,770 --> 01:16:08,510
monitor for streaming and that is

1391
01:16:05,920 --> 01:16:13,880
happening at you know 30 frames a second

1392
01:16:08,510 --> 01:16:16,820
or 60 frames a second mandatorily right

1393
01:16:13,880 --> 01:16:20,359
it can't do anything else so it may be

1394
01:16:16,819 --> 01:16:21,829
like as if vsync is on even though we

1395
01:16:20,359 --> 01:16:24,289
have turned it off on this machine and

1396
01:16:21,829 --> 01:16:26,238
it's really hard for me to say because I

1397
01:16:24,289 --> 01:16:27,649
don't know what's going on there with

1398
01:16:26,238 --> 01:16:29,509
the streaming right I don't know if

1399
01:16:27,649 --> 01:16:32,329
that's if the Windows compositor is

1400
01:16:29,510 --> 01:16:35,690
affecting us there right but what I can

1401
01:16:32,329 --> 01:16:39,130
say is at least from our profiling we

1402
01:16:35,689 --> 01:16:39,129
know that we're spending a bunch of time

1403
01:16:40,930 --> 01:16:47,780
you know in that in that way right and

1404
01:16:45,159 --> 01:16:50,889
debug collation here obviously taking a

1405
01:16:47,779 --> 01:16:50,889
lot of that time too

1406
01:16:54,340 --> 01:16:58,510
which again is unfortunate that's just

1407
01:16:56,140 --> 01:17:01,270
looking at all of our debug in event

1408
01:16:58,510 --> 01:17:03,820
information so you know if I turn that

1409
01:17:01,270 --> 01:17:05,500
off we could also see to what extent you

1410
01:17:03,819 --> 01:17:09,609
know when we're running in an actual

1411
01:17:05,500 --> 01:17:13,029
environment here what we would get and I

1412
01:17:09,609 --> 01:17:27,099
don't know so when I if we look at

1413
01:17:13,029 --> 01:17:30,719
handmade debug or handmade slow I'm

1414
01:17:27,100 --> 01:17:30,720
curious what stuff actually

1415
01:17:53,408 --> 01:18:06,698
I feel like we probably want to have a

1416
01:18:03,550 --> 01:18:09,760
way of still recording just the basic

1417
01:18:06,698 --> 01:18:12,399
information about the frame time and

1418
01:18:09,760 --> 01:18:17,260
just not recording the rest of this you

1419
01:18:12,399 --> 01:18:20,439
know what I mean so you know if I go

1420
01:18:17,260 --> 01:18:25,119
into here and we set handmade slow to

1421
01:18:20,439 --> 01:18:26,439
zero if I go look at the profile we're

1422
01:18:25,119 --> 01:18:29,800
still gonna be spending a crap ton of

1423
01:18:26,439 --> 01:18:31,988
time in debug collation right

1424
01:18:29,800 --> 01:18:35,850
and so handmade slow doesn't really mean

1425
01:18:31,988 --> 01:18:38,979
what it means yet I mean what it says

1426
01:18:35,850 --> 01:18:41,650
because you know here's the here's a

1427
01:18:38,979 --> 01:18:43,629
process list out and almost all the time

1428
01:18:41,649 --> 01:18:47,948
is being spent in debug collation all

1429
01:18:43,630 --> 01:18:51,900
Sun right and so what would be nice to

1430
01:18:47,948 --> 01:18:57,819
do is to get rid of most of the debug

1431
01:18:51,899 --> 01:19:03,339
collation stuff and so you know all of

1432
01:18:57,819 --> 01:19:05,979
the all of the block data output and the

1433
01:19:03,340 --> 01:19:09,100
timing and all of that maybe that kind

1434
01:19:05,979 --> 01:19:12,178
of needs to go away right so

1435
01:19:09,100 --> 01:19:12,179
[Music]

1436
01:19:24,000 --> 01:19:34,350
you know looking at looking at how we've

1437
01:19:26,189 --> 01:19:37,189
got this here I'm just trying to think

1438
01:19:34,350 --> 01:19:41,250
if we can selectively enable some of it

1439
01:19:37,189 --> 01:19:44,909
and disable some others so here's a

1440
01:19:41,250 --> 01:19:51,090
bunch of stuff that happens looks like

1441
01:19:44,909 --> 01:20:01,019
all of this stuff is probably fine timed

1442
01:19:51,090 --> 01:20:02,659
block probably not so like these you can

1443
01:20:01,020 --> 01:20:08,630
see we've got like a separate set of

1444
01:20:02,659 --> 01:20:11,309
these coming on afterwards so you know

1445
01:20:08,630 --> 01:20:20,909
getting rid of this it's probably pretty

1446
01:20:11,310 --> 01:20:24,900
easy it's just this just needs to get

1447
01:20:20,909 --> 01:20:28,579
cleaned up you know so you know you can

1448
01:20:24,899 --> 01:20:31,369
imagine doing something like this and

1449
01:20:28,579 --> 01:20:34,470
trying to make this work

1450
01:20:31,369 --> 01:20:34,470
[Music]

1451
01:20:38,220 --> 01:20:46,110
so that would take out some of it so now

1452
01:20:43,539 --> 01:20:50,250
for example well no that didn't work I

1453
01:20:46,109 --> 01:20:50,250
would have expected this to go away

1454
01:20:55,920 --> 01:21:07,949
right so we said if defined supercilious

1455
01:21:00,329 --> 01:21:09,840
and him eternal and you're not oh that's

1456
01:21:07,949 --> 01:21:18,659
because it should be and the handmade

1457
01:21:09,840 --> 01:21:22,020
slow is set okay GV said event recording

1458
01:21:18,659 --> 01:21:24,359
macro redefinition yes so these and HUD

1459
01:21:22,020 --> 01:21:27,080
time function were up here they were in

1460
01:21:24,359 --> 01:21:30,149
the separate block so they were up here

1461
01:21:27,079 --> 01:21:31,890
and so that makes sense why those were

1462
01:21:30,149 --> 01:21:35,039
in the wrong place let's see what else

1463
01:21:31,890 --> 01:21:38,579
fails frame slider under third

1464
01:21:35,039 --> 01:21:43,079
identifiers so debug UI element looks

1465
01:21:38,579 --> 01:21:50,819
like it's not going away for reasons

1466
01:21:43,079 --> 01:21:59,909
that I'm not sure why so debug UI

1467
01:21:50,819 --> 01:22:02,939
element is to find where so debug UI

1468
01:21:59,909 --> 01:22:05,369
element is just calling record debug

1469
01:22:02,939 --> 01:22:08,309
event but debug UI element should be

1470
01:22:05,369 --> 01:22:16,159
nerfed right oh I was just missing

1471
01:22:08,310 --> 01:22:16,160
that's all it needs to go away

1472
01:22:22,199 --> 01:22:34,960
looks like debug hit and debug

1473
01:22:26,890 --> 01:22:41,590
highlighted also I can't say why those

1474
01:22:34,960 --> 01:22:50,380
are the same so really these just need

1475
01:22:41,590 --> 01:22:54,670
to be if not defined right so if you

1476
01:22:50,380 --> 01:22:58,630
didn't define these functions we then

1477
01:22:54,670 --> 01:23:11,619
will define them otherwise we don't do

1478
01:22:58,630 --> 01:23:14,170
them and then I think we can eliminate

1479
01:23:11,619 --> 01:23:17,529
the stuff that that you know is

1480
01:23:14,170 --> 01:23:25,750
providing editable values but that's

1481
01:23:17,529 --> 01:23:28,300
about it and then we have to just make

1482
01:23:25,750 --> 01:23:34,119
something that we're timed blocks you

1483
01:23:28,300 --> 01:23:36,520
know would get turned off as well so if

1484
01:23:34,119 --> 01:23:38,529
we look in here right now

1485
01:23:36,520 --> 01:23:42,070
when we open we should get nothing I

1486
01:23:38,529 --> 01:23:44,619
don't know why that's an error let's

1487
01:23:42,069 --> 01:23:47,549
look at that but you can see like these

1488
01:23:44,619 --> 01:23:47,550
are turned off right

1489
01:23:50,979 --> 01:23:54,289
unfortunately that doesn't yeah and you

1490
01:23:53,210 --> 01:23:55,579
can see that doesn't really help and

1491
01:23:54,289 --> 01:23:57,470
also like I said it's I think it's

1492
01:23:55,579 --> 01:24:01,760
mostly the timed blocks and stuff that

1493
01:23:57,470 --> 01:24:06,800
are the problem there so if we were to

1494
01:24:01,760 --> 01:24:08,810
say all right let's let's not care about

1495
01:24:06,800 --> 01:24:10,520
that so much

1496
01:24:08,810 --> 01:24:15,140
let's care about this so we basically

1497
01:24:10,520 --> 01:24:17,450
say like alright these things time clock

1498
01:24:15,140 --> 01:24:20,869
time function begin block frame marker

1499
01:24:17,449 --> 01:24:23,380
set event recording HUD time function

1500
01:24:20,869 --> 01:24:23,380
right

1501
01:24:24,020 --> 01:24:31,880
maybe these are actually the things that

1502
01:24:27,590 --> 01:24:37,150
we go with slow on so we'd say something

1503
01:24:31,880 --> 01:24:37,150
like this and I don't actually know

1504
01:24:47,069 --> 01:25:02,299
so in here we would hips side

1505
01:25:05,368 --> 01:25:12,118
so basically what I'm saying is look if

1506
01:25:08,189 --> 01:25:17,638
handmade slow is not turned on then

1507
01:25:12,118 --> 01:25:19,049
don't time anything right and then debug

1508
01:25:17,639 --> 01:25:20,909
collation should not take any time

1509
01:25:19,050 --> 01:25:23,639
because we're not actually doing any

1510
01:25:20,908 --> 01:25:25,138
debug collation but of course yeah again

1511
01:25:23,639 --> 01:25:26,340
like you can see the jerkiness really

1512
01:25:25,139 --> 01:25:27,690
didn't help and that was because even

1513
01:25:26,340 --> 01:25:30,300
with debug collation ah we were still

1514
01:25:27,689 --> 01:25:32,719
well within 60 FPS so I'm pretty sure

1515
01:25:30,300 --> 01:25:36,480
this is just Windows compositor sucking

1516
01:25:32,719 --> 01:25:40,170
would be my guess but again I'm not 100%

1517
01:25:36,479 --> 01:25:43,559
sure one way or the other so looking

1518
01:25:40,170 --> 01:25:47,099
through here right and as I hop around

1519
01:25:43,560 --> 01:25:48,389
of course I can't actually look at any

1520
01:25:47,099 --> 01:25:51,449
information because we don't actually

1521
01:25:48,389 --> 01:25:54,569
have the timing so what I'd like to do

1522
01:25:51,448 --> 01:25:58,049
is just move it out just a little bit so

1523
01:25:54,569 --> 01:26:00,809
I can look at the time I can look at the

1524
01:25:58,050 --> 01:26:05,940
overall timed blocks maybe just the most

1525
01:26:00,810 --> 01:26:12,210
important ones and then maybe no nothing

1526
01:26:05,939 --> 01:26:14,908
else right so if we look at like frame

1527
01:26:12,210 --> 01:26:16,020
marker for example maybe frame marker

1528
01:26:14,908 --> 01:26:21,118
has to be there

1529
01:26:16,020 --> 01:26:25,469
so frame marker is always set and the

1530
01:26:21,118 --> 01:26:27,960
code for frame marker is yeah so like if

1531
01:26:25,469 --> 01:26:30,960
I just put frame marker so we can time

1532
01:26:27,960 --> 01:26:33,300
like frames for example and then I take

1533
01:26:30,960 --> 01:26:36,029
the frame marker and I put that out here

1534
01:26:33,300 --> 01:26:39,989
so you know we turn off all of our time

1535
01:26:36,029 --> 01:26:46,170
functions but we leave on the ability to

1536
01:26:39,988 --> 01:26:48,388
just see the frame time itself so then

1537
01:26:46,170 --> 01:26:49,800
we can at least see our milliseconds we

1538
01:26:48,389 --> 01:26:51,960
just don't have much visibility into

1539
01:26:49,800 --> 01:26:54,150
anything else and we could have a top

1540
01:26:51,960 --> 01:26:56,429
level like we could have one more thing

1541
01:26:54,149 --> 01:27:01,109
that just shows us that breakdown but

1542
01:26:56,429 --> 01:27:02,940
you know so here's here's sad KC and

1543
01:27:01,109 --> 01:27:04,589
we're looking at the frame time and it

1544
01:27:02,939 --> 01:27:07,049
says it's 10 milliseconds so I don't

1545
01:27:04,590 --> 01:27:08,849
know I'm expecting a nice smooth 60

1546
01:27:07,050 --> 01:27:12,239
frames a second I'm definitely not

1547
01:27:08,849 --> 01:27:13,650
getting it thank you to Windows it's

1548
01:27:12,238 --> 01:27:15,689
clear that I'm getting it sometimes

1549
01:27:13,649 --> 01:27:17,189
right but I don't think I'm getting it

1550
01:27:15,689 --> 01:27:19,109
always and it could be something else

1551
01:27:17,189 --> 01:27:24,269
we're doing wrong

1552
01:27:19,109 --> 01:27:29,279
I don't really know so with that Set

1553
01:27:24,270 --> 01:27:36,210
let's pop back to insight let it do a

1554
01:27:29,279 --> 01:27:40,019
little profile for us right and see what

1555
01:27:36,210 --> 01:27:43,949
it has to say and so you can see it to

1556
01:27:40,020 --> 01:27:46,410
thinks we're we're lock we're lock 60

1557
01:27:43,949 --> 01:27:49,739
right like it thanks for getting 60 no

1558
01:27:46,409 --> 01:27:52,130
problem which again makes me think that

1559
01:27:49,739 --> 01:27:55,739
it's like Windows compositor just being

1560
01:27:52,130 --> 01:27:59,340
completely unable to do the stream at

1561
01:27:55,739 --> 01:28:02,000
the same time probably should just I

1562
01:27:59,340 --> 01:28:04,710
should probably just bite the bullet and

1563
01:28:02,000 --> 01:28:08,909
get some kind of I don't know if there

1564
01:28:04,710 --> 01:28:12,289
is a device that has a zero latency HDMI

1565
01:28:08,909 --> 01:28:14,609
pass-through and that also then splits

1566
01:28:12,289 --> 01:28:17,939
but I should just buy one if there is

1567
01:28:14,609 --> 01:28:19,889
anyone out there no does anyone know if

1568
01:28:17,939 --> 01:28:22,889
there's a thing that takes HDMI output

1569
01:28:19,890 --> 01:28:26,310
splits it into two but doesn't introduce

1570
01:28:22,890 --> 01:28:28,140
any latency to the frame so that on the

1571
01:28:26,310 --> 01:28:31,470
main monitor you're still seeing it real

1572
01:28:28,140 --> 01:28:33,210
time I don't know I mean I was gonna

1573
01:28:31,470 --> 01:28:36,780
introduce a little bit of latency but I

1574
01:28:33,210 --> 01:28:39,060
mean like you know no no real latency

1575
01:28:36,779 --> 01:28:41,819
not countable in milliseconds latency

1576
01:28:39,060 --> 01:28:42,960
yeah I mean because I'd like to get to

1577
01:28:41,819 --> 01:28:45,539
the point where we could run this thing

1578
01:28:42,960 --> 01:28:46,289
reliably maybe turn off Windows is

1579
01:28:45,539 --> 01:28:48,300
nonsense

1580
01:28:46,289 --> 01:28:50,399
so that we're not trying to stream out

1581
01:28:48,300 --> 01:28:51,659
to ports at the same time you're and I'm

1582
01:28:50,399 --> 01:28:54,710
saying

1583
01:28:51,659 --> 01:28:59,760
and so basically a lag free splitter

1584
01:28:54,710 --> 01:29:01,470
does it exist if so tell me

1585
01:28:59,760 --> 01:29:02,489
also in cybot just said something

1586
01:29:01,470 --> 01:29:09,300
awesome for those of you who are

1587
01:29:02,489 --> 01:29:12,449
watching in the chat alright so right

1588
01:29:09,300 --> 01:29:14,070
let's terminate here I'm gonna do one

1589
01:29:12,449 --> 01:29:16,710
capture and just see if anything's

1590
01:29:14,069 --> 01:29:20,039
different about it I don't know why we

1591
01:29:16,710 --> 01:29:22,319
can't terminate my program without

1592
01:29:20,039 --> 01:29:22,739
crashing it but that's just where it's

1593
01:29:22,319 --> 01:29:25,229
at

1594
01:29:22,739 --> 01:29:29,039
I'm gonna go ahead and do this launch

1595
01:29:25,229 --> 01:29:32,369
game profiler I'm gonna get a profile in

1596
01:29:29,039 --> 01:29:33,050
some place that's drawing a lot so like

1597
01:29:32,369 --> 01:29:37,039
you know

1598
01:29:33,050 --> 01:29:40,070
here let's say it still claims we've got

1599
01:29:37,039 --> 01:29:42,170
60 I don't know why it's claiming that

1600
01:29:40,069 --> 01:29:45,380
when we're not but again it's probably

1601
01:29:42,170 --> 01:29:47,300
some windows thing that's awesome we'll

1602
01:29:45,380 --> 01:29:49,970
go back here take a look at the

1603
01:29:47,300 --> 01:29:51,920
breakdown and so if we look at the

1604
01:29:49,970 --> 01:29:58,369
breakdown you can now see that you know

1605
01:29:51,920 --> 01:30:01,819
the draw calls versus the dispatch so

1606
01:29:58,369 --> 01:30:09,619
again if you believe what we're seeing

1607
01:30:01,819 --> 01:30:11,630
here this would imply and again I don't

1608
01:30:09,619 --> 01:30:15,769
really know why but this would imply

1609
01:30:11,630 --> 01:30:18,380
that the GL draw a is call where we just

1610
01:30:15,770 --> 01:30:23,050
do the multi sample resolve that that is

1611
01:30:18,380 --> 01:30:25,550
by far the most expensive thing and so

1612
01:30:23,050 --> 01:30:27,440
the question is how do we speed that up

1613
01:30:25,550 --> 01:30:28,940
I wish I was a graphics expert because

1614
01:30:27,439 --> 01:30:35,829
I'd probably have some opinions on how

1615
01:30:28,939 --> 01:30:35,829
to speed that up but you know

1616
01:30:40,618 --> 01:30:44,868
see if we can learn anything from these

1617
01:30:42,479 --> 01:30:44,868
numbers

1618
01:30:58,810 --> 01:31:11,090
so fragment shader in vacations to

1619
01:31:06,949 --> 01:31:15,920
billion that's the number of times that

1620
01:31:11,090 --> 01:31:20,440
it that did the fragment shader I want

1621
01:31:15,920 --> 01:31:20,440
to say that if we speed crunch that you

1622
01:31:20,920 --> 01:31:25,369
can see exactly where that number comes

1623
01:31:23,149 --> 01:31:30,460
from right so for every pixel on the

1624
01:31:25,369 --> 01:31:33,229
screen exactly it's it's invoking our

1625
01:31:30,460 --> 01:31:45,470
fragment shader which is exactly what we

1626
01:31:33,229 --> 01:31:47,599
would expect for each invocation I don't

1627
01:31:45,470 --> 01:31:51,380
know what these numbers mean but looking

1628
01:31:47,600 --> 01:31:53,930
at them like this is looks like it's

1629
01:31:51,380 --> 01:31:56,090
waiting on texture fetches perhaps I'm

1630
01:31:53,930 --> 01:31:57,289
not sure math pipe throttle presumably

1631
01:31:56,090 --> 01:32:01,520
would mean that we were waiting on the

1632
01:31:57,289 --> 01:32:06,710
math pipe I don't actually know if

1633
01:32:01,520 --> 01:32:08,980
that's accurate but I don't care about

1634
01:32:06,710 --> 01:32:08,980
that

1635
01:32:13,750 --> 01:32:18,800
more draw calls and dispatches doesn't

1636
01:32:17,029 --> 01:32:22,099
really make a lot of sense to me I'm not

1637
01:32:18,800 --> 01:32:25,179
sure what that means more draw calls

1638
01:32:22,100 --> 01:32:25,179
than dispatches

1639
01:32:33,958 --> 01:32:40,748
hit rate on the l2 cache is almost

1640
01:32:36,519 --> 01:32:44,050
perfect so it'd be hard to argue with

1641
01:32:40,748 --> 01:32:48,279
that the hit rate on the textures is not

1642
01:32:44,050 --> 01:32:50,050
so good but I'm not sure what you would

1643
01:32:48,279 --> 01:32:51,488
really expect I mean it's got to pull

1644
01:32:50,050 --> 01:32:52,958
all that information in so I'm not sure

1645
01:32:51,488 --> 01:32:58,178
how it could possibly remain in the

1646
01:32:52,958 --> 01:33:00,269
cache we don't care about the user

1647
01:32:58,179 --> 01:33:04,199
metrics at the moment I don't think

1648
01:33:00,269 --> 01:33:04,199
looking at the

1649
01:33:28,810 --> 01:33:35,500
so I don't really know that there's that

1650
01:33:30,890 --> 01:33:38,510
much I can really gather from this but

1651
01:33:35,500 --> 01:33:41,270
you know if the only thing I can really

1652
01:33:38,510 --> 01:33:44,480
say is it looks like just the fact that

1653
01:33:41,270 --> 01:33:47,720
that shader is too complicated is what

1654
01:33:44,479 --> 01:33:50,239
takes most of our frame time and so I

1655
01:33:47,720 --> 01:33:52,030
don't know we could so let's say we

1656
01:33:50,239 --> 01:33:56,510
wanted to determine whether that's

1657
01:33:52,029 --> 01:33:59,269
fictional or not so let's say I went

1658
01:33:56,510 --> 01:34:01,760
into here and I just said hey you know

1659
01:33:59,270 --> 01:34:05,270
what the max multi sample count is now

1660
01:34:01,760 --> 01:34:09,980
gonna be 1 or something right so we just

1661
01:34:05,270 --> 01:34:12,290
we just straight-up lied to it and here

1662
01:34:09,979 --> 01:34:15,469
instead of this where I'm actually

1663
01:34:12,289 --> 01:34:21,859
outputting real values I'm just gonna

1664
01:34:15,470 --> 01:34:25,750
say 1 and 1 right so now we're Bo and I

1665
01:34:21,859 --> 01:34:28,369
got a determinate this guy terminate I

1666
01:34:25,750 --> 01:34:29,689
know you can't seem to figure out how to

1667
01:34:28,369 --> 01:34:32,960
terminate sometimes but just to

1668
01:34:29,689 --> 01:34:35,899
terminate trust me so if I was to force

1669
01:34:32,960 --> 01:34:38,569
it to just take one texture sample each

1670
01:34:35,899 --> 01:34:47,779
time instead of 16 texture samples each

1671
01:34:38,569 --> 01:34:50,630
time then what happens

1672
01:34:47,779 --> 01:34:52,819
so I mean it looks like it's not lying I

1673
01:34:50,630 --> 01:34:55,220
mean look at how much faster that got

1674
01:34:52,819 --> 01:34:58,519
right again didn't improve the actual

1675
01:34:55,220 --> 01:35:01,340
visual frame rate very much because it

1676
01:34:58,520 --> 01:35:04,190
seems like that is just jerky because of

1677
01:35:01,340 --> 01:35:06,380
other windows issues but if I go to the

1678
01:35:04,189 --> 01:35:15,589
same place now and I go back here and

1679
01:35:06,380 --> 01:35:19,609
take a capture yes I know and I want

1680
01:35:15,590 --> 01:35:22,220
that if we take a look at what's going

1681
01:35:19,609 --> 01:35:25,309
on here you can see that now the resolve

1682
01:35:22,220 --> 01:35:28,130
and the drawing take about similar times

1683
01:35:25,310 --> 01:35:37,760
right and so looking at that draw call

1684
01:35:28,130 --> 01:35:41,350
again I don't know what okay that

1685
01:35:37,760 --> 01:35:41,350
doesn't seem good

1686
01:35:43,510 --> 01:35:51,650
hello uh yeah who knows

1687
01:35:49,609 --> 01:35:53,659
so anyway point being looking at these

1688
01:35:51,649 --> 01:35:56,029
two you can see that now the resolve

1689
01:35:53,659 --> 01:35:58,579
took significantly less time according

1690
01:35:56,029 --> 01:35:59,779
to the profile here and it's more

1691
01:35:58,579 --> 01:36:05,019
commensurate with the time it took to

1692
01:35:59,779 --> 01:36:09,590
draw the screen that strangely enough

1693
01:36:05,020 --> 01:36:14,570
that actually seems kind of accurate so

1694
01:36:09,590 --> 01:36:17,720
here's why here's my made-up explanation

1695
01:36:14,569 --> 01:36:22,309
of why that seems kind of accurate so if

1696
01:36:17,720 --> 01:36:23,900
the multi sample count is one what you

1697
01:36:22,310 --> 01:36:26,050
have to remember about multi sampling is

1698
01:36:23,899 --> 01:36:29,659
that multi sampling doesn't kick in

1699
01:36:26,050 --> 01:36:34,480
unless you actually need to draw

1700
01:36:29,659 --> 01:36:38,420
multiple samples at the pixel right and

1701
01:36:34,479 --> 01:36:43,099
so at the actual pixel if you only ever

1702
01:36:38,420 --> 01:36:45,319
had to take one sample because I'm sorry

1703
01:36:43,100 --> 01:36:48,410
if you only ever had to fill all the

1704
01:36:45,319 --> 01:36:51,979
samples together because those samples

1705
01:36:48,409 --> 01:36:53,539
were taken from entirely within one

1706
01:36:51,979 --> 01:36:56,689
polygon there wasn't an edge going

1707
01:36:53,539 --> 01:36:59,329
through it then you only ever had to

1708
01:36:56,689 --> 01:37:01,759
update one piece of data not sixteen

1709
01:36:59,329 --> 01:37:03,920
when you were drawing and that's gonna

1710
01:37:01,760 --> 01:37:05,869
be most of the time for us because most

1711
01:37:03,920 --> 01:37:07,760
of the time were not on an edge that's

1712
01:37:05,869 --> 01:37:09,409
the whole point of multi sampling the

1713
01:37:07,760 --> 01:37:11,060
reason it's better than super sampling

1714
01:37:09,409 --> 01:37:13,430
is because you only pay for it on actual

1715
01:37:11,060 --> 01:37:15,830
edges when we do the resolve we're

1716
01:37:13,430 --> 01:37:18,020
reading all sixteen so drawing the

1717
01:37:15,829 --> 01:37:19,840
screen only had to touch one sample per

1718
01:37:18,020 --> 01:37:22,880
pixel on average right

1719
01:37:19,840 --> 01:37:24,980
but resolving the screen has touched 16

1720
01:37:22,880 --> 01:37:28,550
pixels on average pixels I mean there's

1721
01:37:24,979 --> 01:37:29,149
samples not pixels right so here's my

1722
01:37:28,550 --> 01:37:31,369
question

1723
01:37:29,149 --> 01:37:34,849
inside the fragment shader is there any

1724
01:37:31,369 --> 01:37:37,880
way we can ask OpenGL how many samples

1725
01:37:34,850 --> 01:37:40,460
you actually took like if all the

1726
01:37:37,880 --> 01:37:42,650
samples were one value we can get a fast

1727
01:37:40,460 --> 01:37:47,510
path in there and maybe hit it most of

1728
01:37:42,649 --> 01:37:51,649
the time and be okay and and presumably

1729
01:37:47,510 --> 01:37:54,079
also if I actually looked now when we're

1730
01:37:51,649 --> 01:37:57,109
only taking just one sample shouldn't we

1731
01:37:54,079 --> 01:37:58,850
see some of the baddest yeah so if you

1732
01:37:57,109 --> 01:38:01,939
in here you can see like all these edges

1733
01:37:58,850 --> 01:38:03,440
are super crispy now right and that's

1734
01:38:01,939 --> 01:38:05,799
all week that's all we really needed to

1735
01:38:03,439 --> 01:38:08,419
fix with the multi sampling right

1736
01:38:05,800 --> 01:38:10,100
because our depth peel takes care of the

1737
01:38:08,420 --> 01:38:11,960
of the depth sorting so if that all

1738
01:38:10,100 --> 01:38:13,159
works right you can see I go right

1739
01:38:11,960 --> 01:38:16,429
through the tree it works perfectly on

1740
01:38:13,158 --> 01:38:19,039
either side right which reminds we

1741
01:38:16,429 --> 01:38:21,440
should fix our occupancy stuff but

1742
01:38:19,039 --> 01:38:25,639
either way um so when we look at this

1743
01:38:21,439 --> 01:38:29,269
here what we can see is really our only

1744
01:38:25,639 --> 01:38:31,130
problem is these crispy lines and that's

1745
01:38:29,270 --> 01:38:37,940
what the multi samplings for so the

1746
01:38:31,130 --> 01:38:39,260
question is if we looked at GLSL is

1747
01:38:37,939 --> 01:38:48,368
there any way to get that piece of

1748
01:38:39,260 --> 01:38:48,369
information and let's take a look

1749
01:39:03,970 --> 01:39:08,170
this may be the wrong place to look

1750
01:39:23,310 --> 01:39:26,310
so

1751
01:39:36,760 --> 01:39:42,780
this doesn't look like it finds the

1752
01:39:39,010 --> 01:39:42,780
fragment shader stuff though

1753
01:39:59,158 --> 01:40:03,809
and not really

1754
01:40:33,139 --> 01:40:39,868
so I'm not really sure if we can get

1755
01:40:37,649 --> 01:40:41,098
that information or not and that's

1756
01:40:39,868 --> 01:40:43,498
something that would probably take a

1757
01:40:41,099 --> 01:40:47,909
little while to research but let me just

1758
01:40:43,498 --> 01:40:50,998
explain what I want and then we can

1759
01:40:47,908 --> 01:40:54,478
probably take a look next weekend and

1760
01:40:50,998 --> 01:40:56,880
see if we we can get it so the only

1761
01:40:54,479 --> 01:41:02,789
thing I was trying to say there was well

1762
01:40:56,880 --> 01:41:05,279
look you know in here so you can see

1763
01:41:02,788 --> 01:41:11,368
this path has to sum up a bunch of stuff

1764
01:41:05,279 --> 01:41:15,149
right it's got a loop 16 times and do a

1765
01:41:11,368 --> 01:41:19,920
bunch of work but when we actually look

1766
01:41:15,149 --> 01:41:21,899
at these samples when we look at like

1767
01:41:19,920 --> 01:41:25,550
text effects maybe I'll look at that as

1768
01:41:21,899 --> 01:41:30,948
well like so you know Texel fetch

1769
01:41:25,550 --> 01:41:30,949
documentation do we have that anywhere

1770
01:41:33,359 --> 01:41:38,819
so I'm just curious like can we also

1771
01:41:35,909 --> 01:41:41,970
just ask for that location that you're

1772
01:41:38,819 --> 01:41:45,029
going to sample can you tell me how many

1773
01:41:41,970 --> 01:41:47,699
samples were taken or were they are all

1774
01:41:45,029 --> 01:41:50,219
the same you know what I mean because

1775
01:41:47,699 --> 01:41:55,380
that would allow us to skip most of the

1776
01:41:50,220 --> 01:41:59,240
resolve that we're doing and I just

1777
01:41:55,380 --> 01:42:02,239
don't know if we can or can't do that

1778
01:41:59,239 --> 01:42:02,239
right

1779
01:42:44,488 --> 01:42:47,488
yeah

1780
01:43:51,859 --> 01:43:56,759
so it says using GL sample ID or GL

1781
01:43:54,779 --> 01:43:58,590
sample position would could be used to

1782
01:43:56,760 --> 01:44:00,360
work around this but those are methods

1783
01:43:58,590 --> 01:44:04,010
caused entire fractures revalued per

1784
01:44:00,359 --> 01:44:04,009
sample rather than per fragment

1785
01:44:21,329 --> 01:44:24,720
yeah I don't know

1786
01:44:26,170 --> 01:44:29,699
it's like dice took down this

1787
01:44:56,029 --> 01:44:59,108
[Music]

1788
01:45:20,918 --> 01:45:25,689
so the coverage masks being output again

1789
01:45:23,918 --> 01:45:28,148
doesn't really help us we're not looking

1790
01:45:25,689 --> 01:45:32,649
to improve the output we're just looking

1791
01:45:28,149 --> 01:45:35,260
to optimize the resolve I wish we had an

1792
01:45:32,649 --> 01:45:37,689
Nvidia person here or AMD person here to

1793
01:45:35,260 --> 01:45:40,149
just tell us if that's possible because

1794
01:45:37,689 --> 01:45:43,649
all we that's all we really want right

1795
01:45:40,149 --> 01:45:48,189
is we just want an if so in other words

1796
01:45:43,649 --> 01:45:52,079
this could just be one thing right it

1797
01:45:48,189 --> 01:45:52,079
would just be the following

1798
01:46:25,640 --> 01:46:37,710
actually we don't even need to do that

1799
01:46:27,359 --> 01:46:41,309
just do this so we would literally just

1800
01:46:37,710 --> 01:46:46,859
do like yeah if we're in this path which

1801
01:46:41,310 --> 01:46:53,670
is like the slow path right where I

1802
01:46:46,859 --> 01:46:55,469
would just say if we're in the slow path

1803
01:46:53,670 --> 01:47:03,170
you got to do all of this if not you

1804
01:46:55,470 --> 01:47:03,170
just fetch it just once right like so

1805
01:47:06,529 --> 01:47:11,670
and similarly like this stuff don't

1806
01:47:09,750 --> 01:47:17,609
don't gotta happen neither right so this

1807
01:47:11,670 --> 01:47:19,170
whole thing here only has to happen

1808
01:47:17,609 --> 01:47:20,909
there and this could just be like blend

1809
01:47:19,170 --> 01:47:23,609
unit color equals whatever it whatever

1810
01:47:20,909 --> 01:47:25,800
it equals right so basically you can

1811
01:47:23,609 --> 01:47:30,000
just fetch once so we could just do an

1812
01:47:25,800 --> 01:47:33,630
if like look if there aren't any samples

1813
01:47:30,000 --> 01:47:36,439
here so if you only took one then just

1814
01:47:33,630 --> 01:47:39,029
write that one you know what I mean

1815
01:47:36,439 --> 01:47:41,609
otherwise do this whole disastrous

1816
01:47:39,029 --> 01:47:43,619
rigmarole and off you go

1817
01:47:41,609 --> 01:47:48,659
and so then we should be able to set

1818
01:47:43,619 --> 01:47:53,510
this normally debug this guy and just

1819
01:47:48,659 --> 01:47:53,510
have it so that we're always going to

1820
01:47:54,260 --> 01:47:59,310
have a switch there that can switch

1821
01:47:56,640 --> 01:48:03,320
between one sample or multiple samples

1822
01:47:59,310 --> 01:48:07,740
looks like we got a error there though

1823
01:48:03,319 --> 01:48:10,460
if one combined clerical zero depth map

1824
01:48:07,739 --> 01:48:10,460
min max

1825
01:48:12,920 --> 01:48:22,949
for samples fetch them and add them then

1826
01:48:20,640 --> 01:48:27,560
set the frag depth set the surface

1827
01:48:22,949 --> 01:48:34,050
reflectance set the blend unit color

1828
01:48:27,560 --> 01:48:36,000
otherwise set it this way what did I

1829
01:48:34,050 --> 01:48:41,940
that should be exactly the same right

1830
01:48:36,000 --> 01:48:44,810
did I do something busted there there's

1831
01:48:41,939 --> 01:48:44,809
the multi sample

1832
01:48:50,579 --> 01:48:53,988
[Music]

1833
01:48:58,920 --> 01:49:03,980
that seems correct to me I don't know

1834
01:49:00,960 --> 01:49:03,980
what am I missing there

1835
01:49:19,630 --> 01:49:33,310
I'm not seeing the bug maybe there is

1836
01:49:22,118 --> 01:49:37,089
one but I don't actually see it like our

1837
01:49:33,310 --> 01:49:40,389
resolve is it's not working after that

1838
01:49:37,090 --> 01:49:42,849
change let me back it up and just make

1839
01:49:40,389 --> 01:49:44,050
sure I didn't mess anything up because

1840
01:49:42,849 --> 01:49:47,099
that's pretty easy change to make so

1841
01:49:44,050 --> 01:49:47,099
I'll make it again

1842
01:50:09,578 --> 01:50:16,118
all right so that's one then we just

1843
01:50:13,658 --> 01:50:20,578
want to move these up right so combined

1844
01:50:16,118 --> 01:50:23,019
color goes here all of this nonsense

1845
01:50:20,578 --> 01:50:26,308
goes here and we don't need to do the

1846
01:50:23,020 --> 01:50:26,309
depth because we've already done it

1847
01:50:27,658 --> 01:50:30,658
right

1848
01:50:36,458 --> 01:50:43,269
good to go and then I just wanted to say

1849
01:50:39,639 --> 01:50:45,609
okay like this entire path here so I'm

1850
01:50:43,269 --> 01:50:59,110
gonna move the frag depth down so here's

1851
01:50:45,609 --> 01:51:01,538
the output of that path right looks good

1852
01:50:59,109 --> 01:51:06,009
and then I just want to put an if one

1853
01:51:01,538 --> 01:51:09,819
around it so here's if one if one you do

1854
01:51:06,010 --> 01:51:12,880
all of this and if not you do some other

1855
01:51:09,819 --> 01:51:15,670
thing right and so right here what we

1856
01:51:12,880 --> 01:51:22,868
want is our frag depth is just the fetch

1857
01:51:15,670 --> 01:51:26,158
of this and our blend unit color is just

1858
01:51:22,868 --> 01:51:26,158
the fetch of this

1859
01:51:32,960 --> 01:51:43,430
of zero not sampling and in theory like

1860
01:51:41,810 --> 01:51:45,020
that's just gonna call this code right

1861
01:51:43,430 --> 01:51:47,000
it's never gonna call this code because

1862
01:51:45,020 --> 01:51:53,060
it's an if one so in theory it should

1863
01:51:47,000 --> 01:51:55,340
just work okay what's going on it has to

1864
01:51:53,060 --> 01:51:57,490
call this code right am I missing

1865
01:51:55,340 --> 01:51:57,489
something

1866
01:52:03,579 --> 01:52:08,059
thanks I don't know how many characters

1867
01:52:05,390 --> 01:52:11,000
it is but it's not it's not 4096

1868
01:52:08,060 --> 01:52:13,400
characters it's hardly any so something

1869
01:52:11,000 --> 01:52:16,039
is up with that putting this if one in

1870
01:52:13,399 --> 01:52:17,449
there it doesn't really like it so what

1871
01:52:16,039 --> 01:52:20,470
happens if I just delete the else Clause

1872
01:52:17,449 --> 01:52:20,470
just curious

1873
01:52:27,399 --> 01:52:34,500
still nothing and then delete the f1

1874
01:52:32,229 --> 01:52:34,500
clause

1875
01:52:42,380 --> 01:52:48,560
so somehow putting in if one in there

1876
01:52:49,189 --> 01:52:53,389
changes the behavior of the program

1877
01:53:07,359 --> 01:53:11,349
how is that possible

1878
01:53:11,500 --> 01:53:20,770
shouldn't if one just always work like

1879
01:53:18,619 --> 01:53:23,750
if you put an if one around something

1880
01:53:20,770 --> 01:53:25,700
the only thing that changes is defined

1881
01:53:23,750 --> 01:53:31,939
variables but they're not getting used

1882
01:53:25,699 --> 01:53:33,289
outside of there as far as I know so I

1883
01:53:31,939 --> 01:53:41,169
guess that's just an invalid program

1884
01:53:33,289 --> 01:53:41,170
somehow that it's not that's not liking

1885
01:53:46,750 --> 01:53:52,869
all right

1886
01:53:49,000 --> 01:53:52,869
here's in video one more time

1887
01:53:58,699 --> 01:54:02,000
launched it up

1888
01:54:03,210 --> 01:54:18,239
and I don't see any error messages oh

1889
01:54:10,819 --> 01:54:21,649
well can we get these I get more

1890
01:54:18,239 --> 01:54:21,649
information about that let's take a look

1891
01:54:23,840 --> 01:54:30,750
what is the not a valid program there it

1892
01:54:27,270 --> 01:54:32,760
is so it was giving us an error but we

1893
01:54:30,750 --> 01:54:35,369
didn't catch that error message for some

1894
01:54:32,760 --> 01:54:38,880
reason I thought we generally did catch

1895
01:54:35,369 --> 01:54:41,099
those error messages and would output on

1896
01:54:38,880 --> 01:54:42,600
them but it looks like there's some kind

1897
01:54:41,100 --> 01:54:46,140
of an error message getting generated on

1898
01:54:42,600 --> 01:54:48,720
there I would like to see the error

1899
01:54:46,140 --> 01:54:51,230
message but of course we can't let's

1900
01:54:48,720 --> 01:54:51,230
take a look here

1901
01:55:06,609 --> 01:55:10,170
so I'm not sure why

1902
01:55:11,800 --> 01:55:17,469
let's take a look and see why we're not

1903
01:55:13,868 --> 01:55:19,420
why we are selling it because that error

1904
01:55:17,469 --> 01:55:25,300
message should be there right when we

1905
01:55:19,420 --> 01:55:27,760
compiled the program in here I thought

1906
01:55:25,300 --> 01:55:28,179
we were asserting like right here

1907
01:55:27,760 --> 01:55:30,579


1908
01:55:28,179 --> 01:55:35,699
oh we turned off sessions because we're

1909
01:55:30,578 --> 01:55:35,698
in handmade slow that was why

1910
01:55:47,210 --> 01:56:02,069
okay so now we can see what the problem

1911
01:55:49,889 --> 01:56:14,359
is vertex pairs fragment errors etc plus

1912
01:56:02,069 --> 01:56:17,058
a cast from int to what oh man all right

1913
01:56:14,359 --> 01:56:24,478
you gotta be kidding me

1914
01:56:17,059 --> 01:56:30,380
you gotta be kidding me folks well it is

1915
01:56:24,479 --> 01:56:30,380
what it is so we gotta do this

1916
01:56:30,498 --> 01:56:38,219
apparently and switch that between true

1917
01:56:35,969 --> 01:56:42,719
and false because 1 &amp; 0

1918
01:56:38,219 --> 01:56:45,210
oof wouldn't want that alright so let's

1919
01:56:42,719 --> 01:56:50,489
go ahead and actually oops I put that in

1920
01:56:45,210 --> 01:56:56,248
the wrong place and actually try to grab

1921
01:56:50,488 --> 01:57:04,799
this information out here so imma go

1922
01:56:56,248 --> 01:57:10,109
back to a previous version there we go

1923
01:57:04,800 --> 01:57:13,559
alright so now presuming so now I should

1924
01:57:10,109 --> 01:57:14,429
be able to do an if true and that's

1925
01:57:13,559 --> 01:57:19,050
where I'll leave it

1926
01:57:14,429 --> 01:57:21,269
so if true now this should always run

1927
01:57:19,050 --> 01:57:23,610
that path and we should get our standard

1928
01:57:21,269 --> 01:57:26,809
output which we do with nice smooth

1929
01:57:23,609 --> 01:57:30,448
edges which is great

1930
01:57:26,809 --> 01:57:32,880
none of that Chris penis and then if we

1931
01:57:30,448 --> 01:57:37,228
set it to false we'd get the crispy

1932
01:57:32,880 --> 01:57:39,599
edges and presumably if there was some

1933
01:57:37,229 --> 01:57:43,769
way of testing whether the samples were

1934
01:57:39,599 --> 01:57:45,090
we're not all together then we could

1935
01:57:43,769 --> 01:57:47,789
actually do something about it so

1936
01:57:45,090 --> 01:57:49,679
there's the crispy edge version so I'm

1937
01:57:47,788 --> 01:57:50,998
gonna put if true here and then I put

1938
01:57:49,679 --> 01:57:54,349
like to do Casey

1939
01:57:50,998 --> 01:57:54,349
asked some

1940
01:57:55,140 --> 01:58:04,930
GPU people if this can be optimized with

1941
01:58:00,430 --> 01:58:09,570
a call instead of true that says whether

1942
01:58:04,930 --> 01:58:15,630
a particular location in a multi sample

1943
01:58:09,569 --> 01:58:19,719
texture has all one sample or actually

1944
01:58:15,630 --> 01:58:21,279
contains multiple samples because I know

1945
01:58:19,719 --> 01:58:29,859
the graphics card knows the answer to

1946
01:58:21,279 --> 01:58:32,289
that question so we'll see all right

1947
01:58:29,859 --> 01:58:34,439
let's go to a brief Q&amp;A now seems like

1948
01:58:32,289 --> 01:58:39,460
we got everything we could have gotten

1949
01:58:34,439 --> 01:58:41,889
squared away and I think we're just

1950
01:58:39,460 --> 01:58:46,859
gonna have to ask some GPU people be

1951
01:58:41,890 --> 01:58:46,860
like hey can we get can we get this data

1952
01:59:13,100 --> 01:59:22,620
so Neil suggests texture samplers

1953
01:59:16,430 --> 01:59:24,780
texture samples parentheses sampler but

1954
01:59:22,619 --> 01:59:27,119
doesn't that just say the maximum number

1955
01:59:24,779 --> 01:59:28,590
of samples or can you because you need

1956
01:59:27,119 --> 01:59:40,319
to be able to pass an actual UV

1957
01:59:28,590 --> 01:59:42,029
coordinate right let me take a look but

1958
01:59:40,319 --> 01:59:43,859
I'm pretty sure that texture samples

1959
01:59:42,029 --> 01:59:47,819
just tells you how many it would have

1960
01:59:43,859 --> 01:59:54,750
right or is that not true maybe not I

1961
01:59:47,819 --> 01:59:58,649
don't know we'll see yeah see that

1962
01:59:54,750 --> 02:00:01,529
that's just going to tell us the total

1963
01:59:58,649 --> 02:00:08,210
number of samples for texture so it'll

1964
02:00:01,529 --> 02:00:10,889
just return sixteen we want this call

1965
02:00:08,210 --> 02:00:12,600
but we want this call that takes a UV

1966
02:00:10,890 --> 02:00:14,070
coordinate so basically we want the

1967
02:00:12,600 --> 02:00:15,420
equivalent of this call that says hey

1968
02:00:14,069 --> 02:00:19,159
graphics card how many did you actually

1969
02:00:15,420 --> 02:00:19,159
pack in there right

1970
02:00:26,630 --> 02:00:29,730
brian says you can have Windows

1971
02:00:28,350 --> 02:00:32,010
automatic after crash dumps for you

1972
02:00:29,729 --> 02:00:33,359
check if this key exists HP local

1973
02:00:32,010 --> 02:00:34,829
machines suffer Microsoft Windows

1974
02:00:33,359 --> 02:00:36,329
Windows they're reporting local dumps at

1975
02:00:34,829 --> 02:00:41,279
if so well on that comes to local

1976
02:00:36,329 --> 02:00:48,479
AppData crash dumps that's pretty cool

1977
02:00:41,279 --> 02:00:57,289
so let me do that thanks Brian Ridge

1978
02:00:48,479 --> 02:01:14,129
edit so he says HQ local machine

1979
02:00:57,289 --> 02:01:19,789
software Microsoft Windows Windows Error

1980
02:01:14,130 --> 02:01:19,789
reporting local dumps

1981
02:01:22,670 --> 02:01:26,239
[Music]

1982
02:01:33,488 --> 02:01:43,799
what do I set it to maybe it's already

1983
02:01:38,109 --> 02:01:47,938
set and if so then you said it would be

1984
02:01:43,800 --> 02:01:47,939
local AppData crash dumps

1985
02:01:55,859 --> 02:01:59,960
Oh

1986
02:01:57,560 --> 02:02:03,190
so we've we've had this the whole time

1987
02:01:59,960 --> 02:02:03,189
it turns out

1988
02:02:40,090 --> 02:02:45,020
all right so now that's pretty great so

1989
02:02:42,979 --> 02:02:50,809
now I hear the crash dumps I can grab

1990
02:02:45,020 --> 02:02:53,270
all these and then we can see what's

1991
02:02:50,810 --> 02:02:58,190
going on so that that sounds good

1992
02:02:53,270 --> 02:02:59,600
I will send those all to George and it

1993
02:02:58,189 --> 02:03:03,259
looks like the probably the ones from

1994
02:02:59,600 --> 02:03:18,590
5:11 524 those are probably useless but

1995
02:03:03,260 --> 02:03:20,119
I'll send them anyway that's pretty cool

1996
02:03:18,590 --> 02:03:23,050
Bryan thank you for pointing that out I

1997
02:03:20,119 --> 02:03:31,430
did not know that I could do that

1998
02:03:23,050 --> 02:03:35,320
oops but that's great because now I can

1999
02:03:31,430 --> 02:03:35,320
send all these along

2000
02:03:46,710 --> 02:03:50,470
handmade hero org watch has numerous

2001
02:03:49,359 --> 02:03:52,809
coated France when will you be streaming

2002
02:03:50,470 --> 02:03:54,490
next it depends that's what gets updated

2003
02:03:52,810 --> 02:03:57,640
every time I put in a new block of

2004
02:03:54,489 --> 02:03:59,920
stream times so it's usually every

2005
02:03:57,640 --> 02:04:08,520
weekend but you know sometimes it gets

2006
02:03:59,920 --> 02:04:08,520
modified but it's usually every weekend

2007
02:04:14,310 --> 02:04:23,050
special thanks dude Linux wouldn't even

2008
02:04:17,229 --> 02:04:25,389
work trying to run something on Linux

2009
02:04:23,050 --> 02:04:27,760
that goes through the GPU and outputs to

2010
02:04:25,390 --> 02:04:29,140
two monitors at the same time one of

2011
02:04:27,760 --> 02:04:32,730
which is at a fixed frame rate and one

2012
02:04:29,140 --> 02:04:36,360
is which is vsync zero chance

2013
02:04:32,729 --> 02:04:39,699
Linux GPU support is absolutely terrible

2014
02:04:36,359 --> 02:04:44,289
it can't even run you know an optimist

2015
02:04:39,699 --> 02:04:46,779
display let alone probably something

2016
02:04:44,289 --> 02:04:49,689
like this so no definitely not like

2017
02:04:46,779 --> 02:04:53,349
Linux would not help at all it would

2018
02:04:49,689 --> 02:04:57,939
probably only hurt it has very very very

2019
02:04:53,350 --> 02:05:00,900
bad AV support by comparison and don't

2020
02:04:57,939 --> 02:05:00,899
get me started on audio

2021
02:05:26,679 --> 02:05:33,630
let's see let's see any other on topic

2022
02:05:31,060 --> 02:05:33,630
questions actually

2023
02:05:40,689 --> 02:05:44,179
rational coder someone had asked whether

2024
02:05:42,828 --> 02:05:45,649
or not that would optimize anything

2025
02:05:44,179 --> 02:05:47,719
since the GPU has to execute both

2026
02:05:45,649 --> 02:05:52,098
branches no the GPU doesn't have to

2027
02:05:47,719 --> 02:05:56,239
execute both branches so it's it's worth

2028
02:05:52,099 --> 02:06:01,309
remembering that GPUs do do full full

2029
02:05:56,238 --> 02:06:03,248
ifs at least most so basically what

2030
02:06:01,309 --> 02:06:05,689
happens is if you hit an if statement

2031
02:06:03,248 --> 02:06:09,078
then what its gonna do is look to see

2032
02:06:05,689 --> 02:06:11,809
whether all of the pixels in that group

2033
02:06:09,078 --> 02:06:15,349
all evaluate to the same thing on the if

2034
02:06:11,809 --> 02:06:18,579
and if so it won't execute the side of

2035
02:06:15,349 --> 02:06:23,869
the branch that nobody goes down right

2036
02:06:18,578 --> 02:06:26,748
and so in this case most pixels almost

2037
02:06:23,868 --> 02:06:29,868
all would not have multiple samples so

2038
02:06:26,748 --> 02:06:31,639
most of the time the block of 16 or 32

2039
02:06:29,868 --> 02:06:33,768
or however many of the GPUs pressing it

2040
02:06:31,639 --> 02:06:36,260
once will probably all hit the same side

2041
02:06:33,769 --> 02:06:38,650
of the branch and only blocks containing

2042
02:06:36,260 --> 02:06:41,360
an edge running through them would not

2043
02:06:38,649 --> 02:06:44,598
so I think we would get a significant

2044
02:06:41,359 --> 02:06:53,328
speed increase from if we had that if I

2045
02:06:44,599 --> 02:06:56,409
don't know I just don't know if that is

2046
02:06:53,328 --> 02:06:56,408
ever exposed in the shader

2047
02:07:34,050 --> 02:07:37,619
not sure if you're joking when you said

2048
02:07:35,550 --> 02:07:39,000
to ask but if you have the time and feel

2049
02:07:37,619 --> 02:07:40,349
like it I would 100 cent be down to see

2050
02:07:39,000 --> 02:07:42,869
the lectures from you in about the

2051
02:07:40,350 --> 02:07:44,490
resting animation system yeah no I I

2052
02:07:42,869 --> 02:07:48,869
would I will do that at some point sure

2053
02:07:44,489 --> 02:07:59,519
I don't know if anyone what the status

2054
02:07:48,869 --> 02:08:06,180
was on the on the know if anyone cares

2055
02:07:59,520 --> 02:08:08,850
about these it's the only problem but so

2056
02:08:06,180 --> 02:08:10,829
no one really cares about this stuff

2057
02:08:08,850 --> 02:08:13,440
unfortunately as far as I can tell right

2058
02:08:10,829 --> 02:08:22,800
it's it's pretty much just like a

2059
02:08:13,439 --> 02:08:24,689
standard standard view count right and

2060
02:08:22,800 --> 02:08:26,880
so I don't know like how useful it is

2061
02:08:24,689 --> 02:08:29,849
for some of these things cuz like if you

2062
02:08:26,880 --> 02:08:34,230
look at what stuff is tends to be more

2063
02:08:29,850 --> 02:08:36,390
viewed some of ours are actually that

2064
02:08:34,229 --> 02:08:41,309
way so you know if you look at like

2065
02:08:36,390 --> 02:08:44,400
things like some of the other ones where

2066
02:08:41,310 --> 02:08:46,110
I go over stuff they do have a lot of

2067
02:08:44,399 --> 02:08:52,349
views and things like that

2068
02:08:46,109 --> 02:08:54,179
but in general like you know the I think

2069
02:08:52,350 --> 02:08:57,720
the 3d animation stuff probably doesn't

2070
02:08:54,180 --> 02:08:59,369
because it's very advanced and I just

2071
02:08:57,720 --> 02:09:01,770
don't know that there's very many people

2072
02:08:59,369 --> 02:09:08,699
who can really follow it probably or use

2073
02:09:01,770 --> 02:09:10,980
it but I don't know so you know if if

2074
02:09:08,699 --> 02:09:12,389
the skin animation wanted had had like

2075
02:09:10,979 --> 02:09:13,500
tons of views on it then I would say

2076
02:09:12,390 --> 02:09:16,820
okay this is something people really

2077
02:09:13,500 --> 02:09:16,819
wanted to see right

2078
02:09:25,840 --> 02:09:30,430
I don't think putting it under chat does

2079
02:09:27,970 --> 02:09:31,960
make it less clickable and flashy

2080
02:09:30,430 --> 02:09:33,520
thumbnails like none of them have flashy

2081
02:09:31,960 --> 02:09:34,989
thumbnails so I'm comparing apples to

2082
02:09:33,520 --> 02:09:37,870
apples here but if you take a look at

2083
02:09:34,989 --> 02:09:39,670
the chats it seems like the ones that

2084
02:09:37,869 --> 02:09:41,710
are interesting people actually get a

2085
02:09:39,670 --> 02:09:43,630
lot of views so like not many there but

2086
02:09:41,710 --> 02:09:45,550
like any of these other ones had

2087
02:09:43,630 --> 02:09:48,430
actually quite a bit so like this one

2088
02:09:45,550 --> 02:09:52,779
had you know four times that many or

2089
02:09:48,430 --> 02:09:56,289
three times that many right

2090
02:09:52,779 --> 02:09:58,809
and so the chats do seem to be fairly

2091
02:09:56,289 --> 02:10:01,269
popular most of the time much more

2092
02:09:58,810 --> 02:10:03,330
popular than that this one which was

2093
02:10:01,270 --> 02:10:07,120
done the day prior had twice as many

2094
02:10:03,329 --> 02:10:09,069
right so I'm just trying to go by like

2095
02:10:07,119 --> 02:10:10,599
you know chats are a sort of a separate

2096
02:10:09,069 --> 02:10:12,279
thing we do they're not really part of

2097
02:10:10,600 --> 02:10:13,660
the series and just looking at to what

2098
02:10:12,279 --> 02:10:15,279
extent people actually get value out of

2099
02:10:13,659 --> 02:10:18,819
them I don't know how many people are

2100
02:10:15,279 --> 02:10:20,619
actually getting value out of the 3-step

2101
02:10:18,819 --> 02:10:28,210
it seems like something that's just too

2102
02:10:20,619 --> 02:10:30,550
far afield maybe you know because yeah I

2103
02:10:28,210 --> 02:10:31,569
think that might be just if you're if

2104
02:10:30,550 --> 02:10:33,460
you're at the point where you're

2105
02:10:31,569 --> 02:10:34,869
implementing a 3d mesh skinning system

2106
02:10:33,460 --> 02:10:37,180
you probably know enough that you're not

2107
02:10:34,869 --> 02:10:38,619
watching this show or if you are

2108
02:10:37,180 --> 02:10:40,000
watching the show you just do it for

2109
02:10:38,619 --> 02:10:42,220
like entertainment purposes you don't

2110
02:10:40,000 --> 02:10:44,560
care about me covering it right like

2111
02:10:42,220 --> 02:10:45,880
you're not you're not watching the show

2112
02:10:44,560 --> 02:10:46,990
at that point because you're trying to

2113
02:10:45,880 --> 02:10:48,250
learn something from it you're just

2114
02:10:46,989 --> 02:10:50,409
watching the show because you like

2115
02:10:48,250 --> 02:10:54,369
having the show on or something which is

2116
02:10:50,409 --> 02:10:56,819
also totally fine but definitely a

2117
02:10:54,369 --> 02:10:56,819
different thing

2118
02:10:59,389 --> 02:11:05,159
so all right I'm gonna wrap it up anyway

2119
02:11:03,988 --> 02:11:06,569
but it's point being it doesn't mean I

2120
02:11:05,158 --> 02:11:12,058
wouldn't do it it's just I don't feel a

2121
02:11:06,569 --> 02:11:22,078
pressing need to get to it right so you

2122
02:11:12,059 --> 02:11:23,460
know that's all really girlfriend

2123
02:11:22,078 --> 02:11:24,719
watches and tells you most of the things

2124
02:11:23,460 --> 02:11:26,998
you said about Linux or old school

2125
02:11:24,719 --> 02:11:31,139
issues would you like would you like me

2126
02:11:26,998 --> 02:11:32,998
to stream trying to install several

2127
02:11:31,139 --> 02:11:35,328
different Linux distributions on an

2128
02:11:32,998 --> 02:11:37,800
optimist laptop and watching how

2129
02:11:35,328 --> 02:11:39,448
ridiculous it is because I do know the

2130
02:11:37,800 --> 02:11:43,498
series of steps it takes to get them to

2131
02:11:39,448 --> 02:11:46,618
work because I've had to do it but we

2132
02:11:43,498 --> 02:11:49,710
could do that if you want we could also

2133
02:11:46,618 --> 02:11:51,149
demo how you like I have Linux machines

2134
02:11:49,710 --> 02:11:53,099
running right like I'm running a Linux

2135
02:11:51,149 --> 02:11:56,819
machine right here as the streaming

2136
02:11:53,099 --> 02:12:00,029
machine and it breaks all the time right

2137
02:11:56,819 --> 02:12:02,488
the mouse right now isn't working I am

2138
02:12:00,029 --> 02:12:05,009
moving the mouse and it doesn't work why

2139
02:12:02,488 --> 02:12:08,428
because Linux right it's very unreliable

2140
02:12:05,010 --> 02:12:10,199
for hardware support you know if you

2141
02:12:08,429 --> 02:12:12,149
think Linux I mean if you think Windows

2142
02:12:10,198 --> 02:12:16,498
is bad for hardware support well Linux

2143
02:12:12,149 --> 02:12:19,488
really like ups that game people who run

2144
02:12:16,498 --> 02:12:23,340
Linux always insist this isn't true I

2145
02:12:19,488 --> 02:12:25,109
don't know why it's I don't say these

2146
02:12:23,340 --> 02:12:27,210
things because I don't like Linux I like

2147
02:12:25,109 --> 02:12:31,139
Linux and I've use it fairly frequently

2148
02:12:27,210 --> 02:12:34,710
right it just doesn't work half the time

2149
02:12:31,139 --> 02:12:36,359
and in general like the problem is if

2150
02:12:34,710 --> 02:12:38,368
you happen to have a machine that works

2151
02:12:36,359 --> 02:12:40,469
on Linux great maybe you don't have

2152
02:12:38,368 --> 02:12:41,969
these problems I don't have any machines

2153
02:12:40,469 --> 02:12:45,059
that work properly on Linux they all

2154
02:12:41,969 --> 02:12:48,359
took a tremendous amount of massaging to

2155
02:12:45,059 --> 02:12:51,389
get them to actually run stabili and in

2156
02:12:48,359 --> 02:12:53,578
general Windows isn't that way I get a

2157
02:12:51,389 --> 02:12:54,900
lot more reliability on Windows in terms

2158
02:12:53,578 --> 02:12:56,460
of the amount of time it takes me to

2159
02:12:54,899 --> 02:12:59,609
install the system and get it working

2160
02:12:56,460 --> 02:13:02,460
now granted pretty soon I'm gonna have

2161
02:12:59,609 --> 02:13:05,248
to run Linux everywhere because Windows

2162
02:13:02,460 --> 02:13:07,078
10 is rapidly trying to make it

2163
02:13:05,248 --> 02:13:09,328
impossible for anyone to ever run a

2164
02:13:07,078 --> 02:13:12,359
Windows machine reliably so eventually

2165
02:13:09,328 --> 02:13:14,368
Microsoft will succeed in making it so

2166
02:13:12,359 --> 02:13:15,899
that even with all of the brokenness

2167
02:13:14,368 --> 02:13:19,920
Linux is still the more reliable

2168
02:13:15,899 --> 02:13:22,589
operating system and that that day is

2169
02:13:19,920 --> 02:13:24,239
coming like I wouldn't have thought it

2170
02:13:22,590 --> 02:13:27,199
possible but that I think that at some

2171
02:13:24,238 --> 02:13:30,269
point that day probably is coming right

2172
02:13:27,198 --> 02:13:33,089
because Windows 10 gets is been getting

2173
02:13:30,270 --> 02:13:35,489
really bad and continues to get worse

2174
02:13:33,090 --> 02:13:36,719
the only way to really run a Windows 10

2175
02:13:35,488 --> 02:13:38,368
machine is to have an unplug from the

2176
02:13:36,719 --> 02:13:42,149
internet which is how I run my Windows

2177
02:13:38,368 --> 02:13:44,868
10 machines right but that's only gonna

2178
02:13:42,149 --> 02:13:50,969
last for so long and so I do feel like

2179
02:13:44,868 --> 02:13:53,339
in general you know I think the people

2180
02:13:50,969 --> 02:13:57,060
who have believed that Linux is reliable

2181
02:13:53,340 --> 02:13:58,590
on Hardware I don't know what to tell

2182
02:13:57,060 --> 02:14:00,920
you I think you're kind of having a bit

2183
02:13:58,590 --> 02:14:05,579
of a Stockholm Syndrome situation there

2184
02:14:00,920 --> 02:14:06,719
but that aside I you know I do see more

2185
02:14:05,579 --> 02:14:10,529
Linux in my future

2186
02:14:06,719 --> 02:14:13,198
only because Windows continues to

2187
02:14:10,529 --> 02:14:15,779
increase the unreliability and the

2188
02:14:13,198 --> 02:14:18,899
maintenance nightmare they keep pushing

2189
02:14:15,779 --> 02:14:21,118
it up and so at some point those lines

2190
02:14:18,899 --> 02:14:22,939
are gonna cross and the amount of work

2191
02:14:21,118 --> 02:14:29,039
it takes to get a stable Linux desktop

2192
02:14:22,939 --> 02:14:31,428
or laptop running will cross and it will

2193
02:14:29,039 --> 02:14:36,510
now be more likely that you will spend

2194
02:14:31,429 --> 02:14:38,250
you know right now maybe it takes ten

2195
02:14:36,510 --> 02:14:39,960
hours to get a stable Linux system

2196
02:14:38,250 --> 02:14:41,460
installed and it takes two hours to get

2197
02:14:39,960 --> 02:14:44,310
a stable Windows machine installed or

2198
02:14:41,460 --> 02:14:45,989
something and that's gonna keep Linux is

2199
02:14:44,310 --> 02:14:47,159
never gonna get better it's never gotten

2200
02:14:45,988 --> 02:14:49,408
better in my whole life you know

2201
02:14:47,158 --> 02:14:51,179
installing Slackware probably took

2202
02:14:49,408 --> 02:14:53,579
similar amount of time because I had to

2203
02:14:51,179 --> 02:14:55,500
rebuild the kernel every time right as

2204
02:14:53,579 --> 02:14:57,359
it does to get one working today because

2205
02:14:55,500 --> 02:14:58,679
by the time I act and and it never quite

2206
02:14:57,359 --> 02:15:00,089
gets working right the mouse still

2207
02:14:58,679 --> 02:15:03,800
doesn't work on this machine but you

2208
02:15:00,090 --> 02:15:06,840
know what are you gonna do eventually

2209
02:15:03,800 --> 02:15:09,029
Windows will also have the Mouse not

2210
02:15:06,840 --> 02:15:12,840
working often enough right

2211
02:15:09,029 --> 02:15:14,340
it will also be several hours to install

2212
02:15:12,840 --> 02:15:15,929
and won't really work right and you'll

2213
02:15:14,340 --> 02:15:19,079
have to do all kinds of weird registry

2214
02:15:15,929 --> 02:15:21,118
hacking right and so eventually those

2215
02:15:19,079 --> 02:15:22,469
lines will cross and when those lines do

2216
02:15:21,118 --> 02:15:24,960
cross then there's no reason to use

2217
02:15:22,469 --> 02:15:26,189
Windows really other than to have a test

2218
02:15:24,960 --> 02:15:29,099
machine because you know yeah

2219
02:15:26,189 --> 02:15:30,959
stuff on it but eventually those lines

2220
02:15:29,099 --> 02:15:33,389
will cross Microsoft has made it very

2221
02:15:30,958 --> 02:15:34,828
clear that those lines will cross and

2222
02:15:33,389 --> 02:15:37,288
Linux doesn't have to do anything right

2223
02:15:34,828 --> 02:15:38,639
they can just sit there they don't have

2224
02:15:37,288 --> 02:15:40,668
to improve their reliability they don't

2225
02:15:38,639 --> 02:15:43,618
they don't even have to do anything

2226
02:15:40,668 --> 02:15:51,679
and eventually Microsoft will just push

2227
02:15:43,618 --> 02:15:51,679
those lines you know so off you go

2228
02:16:12,380 --> 02:16:16,050
yeah I sympathize for the person on chat

2229
02:16:14,640 --> 02:16:17,429
says I have an arch links machine it's

2230
02:16:16,050 --> 02:16:19,199
dependencies are now broken and will

2231
02:16:17,429 --> 02:16:20,819
take weeks to get working again yeah the

2232
02:16:19,198 --> 02:16:25,408
package managers don't work at all

2233
02:16:20,819 --> 02:16:27,090
they're super broken for example this

2234
02:16:25,408 --> 02:16:30,238
machine has to have no js' installed

2235
02:16:27,090 --> 02:16:34,079
because it requires no JIT you when you

2236
02:16:30,238 --> 02:16:35,728
use firebase for for distribution you

2237
02:16:34,079 --> 02:16:37,308
have to have no js' because that's the

2238
02:16:35,728 --> 02:16:39,899
only way it works it's pretty amazing

2239
02:16:37,308 --> 02:16:42,989
you have to use nodejs to copy files now

2240
02:16:39,899 --> 02:16:44,218
uh and every so often it's just broken

2241
02:16:42,989 --> 02:16:46,649
that's it

2242
02:16:44,218 --> 02:16:47,938
the package manager cannot actually

2243
02:16:46,649 --> 02:16:49,799
update it and you just have to wipe the

2244
02:16:47,939 --> 02:16:53,429
whole thing and completely reinstall

2245
02:16:49,799 --> 02:16:55,138
right that's just--that's Linux it's I

2246
02:16:53,429 --> 02:16:56,638
mean that's the bottom line and and I

2247
02:16:55,138 --> 02:17:00,119
really don't understand why people say

2248
02:16:56,638 --> 02:17:02,489
it's better you don't have to pretend

2249
02:17:00,120 --> 02:17:04,829
that Linux isn't broken it is broken

2250
02:17:02,489 --> 02:17:06,269
windows is broken to it you don't have

2251
02:17:04,829 --> 02:17:08,549
to fight about it right

2252
02:17:06,269 --> 02:17:10,950
these OS is our garbage let's just

2253
02:17:08,549 --> 02:17:13,308
accept that fact whether or not one is

2254
02:17:10,950 --> 02:17:15,689
easier or harder for you personally

2255
02:17:13,308 --> 02:17:18,840
depends on your hardware setup depends

2256
02:17:15,689 --> 02:17:20,099
what you're trying to do right and I

2257
02:17:18,840 --> 02:17:22,139
think we can all agree that eventually

2258
02:17:20,099 --> 02:17:24,360
Microsoft will destroy Windows I mean

2259
02:17:22,138 --> 02:17:26,609
it's been getting worse for a decade now

2260
02:17:24,360 --> 02:17:30,510
and it's not gonna I don't see any

2261
02:17:26,610 --> 02:17:32,280
reverse on that trend so even if you

2262
02:17:30,510 --> 02:17:34,050
know you are mad because I'm saying that

2263
02:17:32,280 --> 02:17:36,420
Linux is still broken look I'm not

2264
02:17:34,049 --> 02:17:41,718
saying that Windows isn't heading

2265
02:17:36,420 --> 02:17:45,360
straight down the toilet it is right and

2266
02:17:41,718 --> 02:17:46,859
so in general I would say you know it's

2267
02:17:45,360 --> 02:17:50,700
it's six of one half dozen the other but

2268
02:17:46,860 --> 02:17:52,800
please be realistic about the quality of

2269
02:17:50,700 --> 02:17:56,820
these operating systems they're not good

2270
02:17:52,799 --> 02:17:58,829
Linux is not good it may be better than

2271
02:17:56,819 --> 02:18:01,228
Windows in some respects is worse than

2272
02:17:58,829 --> 02:18:03,929
Windows and others both of them are

2273
02:18:01,228 --> 02:18:06,299
terrible they are lousy operating

2274
02:18:03,929 --> 02:18:08,489
systems they do not do what you want an

2275
02:18:06,299 --> 02:18:11,429
operating system to do which is run

2276
02:18:08,489 --> 02:18:14,519
reliably without requiring updates on

2277
02:18:11,429 --> 02:18:17,069
the hardware that you have neither of

2278
02:18:14,519 --> 02:18:21,090
them can do it they are both highly

2279
02:18:17,069 --> 02:18:23,789
unstable small changes to either one can

2280
02:18:21,090 --> 02:18:25,479
completely break them in ways that take

2281
02:18:23,790 --> 02:18:27,460
quite some time to repair

2282
02:18:25,479 --> 02:18:30,010
and the chances that they will work out

2283
02:18:27,459 --> 02:18:32,289
of the box in both cases is quite low

2284
02:18:30,010 --> 02:18:37,930
windows is better than Linux I think in

2285
02:18:32,290 --> 02:18:39,430
that respect but still bad Casey please

2286
02:18:37,930 --> 02:18:41,170
dispel the myth that Molly one two three

2287
02:18:39,430 --> 02:18:42,700
and I are the same person rupan three as

2288
02:18:41,170 --> 02:18:45,940
a crazy conspiracy going on I can't

2289
02:18:42,700 --> 02:18:53,250
shake I don't know how do I know whether

2290
02:18:45,940 --> 02:18:56,250
you're the same person or not right so

2291
02:18:53,250 --> 02:18:56,250
alright

2292
02:19:01,049 --> 02:19:06,609
for what reason do you like legs if it

2293
02:19:03,219 --> 02:19:09,909
breaks all the time um so two things one

2294
02:19:06,610 --> 02:19:12,520
it doesn't force me to update right so

2295
02:19:09,909 --> 02:19:15,190
unlike windows if I install a Linux

2296
02:19:12,520 --> 02:19:17,229
machine it updates when I say it updates

2297
02:19:15,190 --> 02:19:21,250
and I value that right so that's thing

2298
02:19:17,229 --> 02:19:26,680
one thing too is that it is better set

2299
02:19:21,250 --> 02:19:29,829
up for working with servers like if you

2300
02:19:26,680 --> 02:19:32,770
just want to SSH to your server it's

2301
02:19:29,829 --> 02:19:35,469
like already you don't do anything right

2302
02:19:32,770 --> 02:19:37,180
it's just set up it just works you can

2303
02:19:35,469 --> 02:19:39,579
move files back and forth you can shell

2304
02:19:37,180 --> 02:19:43,630
to one you can do whatever you want

2305
02:19:39,579 --> 02:19:47,469
right windows good luck like you've got

2306
02:19:43,629 --> 02:19:51,449
a you know use there you've got to do

2307
02:19:47,469 --> 02:19:53,829
all kinds of nonsense and Windows 10

2308
02:19:51,450 --> 02:19:55,300
finally added like SSH this board to a

2309
02:19:53,829 --> 02:19:58,209
certain extent but it's still not as

2310
02:19:55,299 --> 02:19:59,259
good as on Linux and so just working

2311
02:19:58,209 --> 02:20:01,239
with that kind of stuff it's just

2312
02:19:59,260 --> 02:20:02,979
cleaner on legs and it's because people

2313
02:20:01,239 --> 02:20:06,670
that's where people use that kind of

2314
02:20:02,979 --> 02:20:09,250
stuff right so it's just kind of nice

2315
02:20:06,670 --> 02:20:11,260
right the terminal works better the

2316
02:20:09,250 --> 02:20:12,970
Windows terminal they haven't updated in

2317
02:20:11,260 --> 02:20:14,440
years they just recently updated it and

2318
02:20:12,970 --> 02:20:21,250
like one of the main features they added

2319
02:20:14,440 --> 02:20:24,060
was that it can be transparent so you

2320
02:20:21,250 --> 02:20:27,670
know unless that stuff works better so

2321
02:20:24,060 --> 02:20:29,649
you know I I do feel like Linux does but

2322
02:20:27,670 --> 02:20:33,190
there are better aspects of using a

2323
02:20:29,649 --> 02:20:34,600
Linux machine and again so I think

2324
02:20:33,190 --> 02:20:35,920
anyone who thinks that like one

2325
02:20:34,601 --> 02:20:37,510
operating system is like clearly better

2326
02:20:35,920 --> 02:20:38,950
they're not they have strengths and

2327
02:20:37,510 --> 02:20:45,579
weaknesses

2328
02:20:38,950 --> 02:20:47,110
and and I wish I wish that there was

2329
02:20:45,579 --> 02:20:48,851
some good operating system that I could

2330
02:20:47,110 --> 02:20:51,069
sit here and be part of the OS words and

2331
02:20:48,851 --> 02:20:54,960
say no you should use bla OS but there

2332
02:20:51,069 --> 02:20:57,219
isn't all these operating systems suck I

2333
02:20:54,959 --> 02:20:58,750
don't really blame them sometimes

2334
02:20:57,219 --> 02:21:02,649
because it's a hard problem I mean

2335
02:20:58,750 --> 02:21:06,069
supporting such a wide and unreliable

2336
02:21:02,649 --> 02:21:09,459
hardware base as is on the PC is very

2337
02:21:06,069 --> 02:21:11,140
difficult problem but just because I can

2338
02:21:09,459 --> 02:21:13,149
respect the fact the problem is hard

2339
02:21:11,140 --> 02:21:15,190
doesn't mean the results aren't awful

2340
02:21:13,149 --> 02:21:16,959
right so like yes it's a hard problem

2341
02:21:15,190 --> 02:21:18,340
for a number of reasons there's a reason

2342
02:21:16,959 --> 02:21:21,219
why tens of hardware doesn't work

2343
02:21:18,340 --> 02:21:24,760
properly on Linux I mean right now for

2344
02:21:21,219 --> 02:21:28,779
example I have one printer there's one

2345
02:21:24,760 --> 02:21:31,780
printer in in this place Linux lists

2346
02:21:28,780 --> 02:21:33,700
five they're all the same printer but

2347
02:21:31,780 --> 02:21:37,870
you can only pick one of them and have

2348
02:21:33,700 --> 02:21:39,940
it work the rest just error out that's

2349
02:21:37,870 --> 02:21:42,340
Linux right I mean that's Linux

2350
02:21:39,940 --> 02:21:44,110
you can't expect stuff like a printer to

2351
02:21:42,340 --> 02:21:46,120
work on Linux it's just completely

2352
02:21:44,110 --> 02:21:48,069
unreliable why I don't know I've never

2353
02:21:46,120 --> 02:21:49,840
looked at it I couldn't tell you but

2354
02:21:48,069 --> 02:21:52,449
that doesn't happen on Windows Windows

2355
02:21:49,840 --> 02:21:54,670
lists one printer and when you print it

2356
02:21:52,450 --> 02:21:56,530
prints to the printer that's generally

2357
02:21:54,670 --> 02:21:59,379
what people want to have happen with a

2358
02:21:56,530 --> 02:22:01,271
printer right so again like don't sit

2359
02:21:59,379 --> 02:22:03,609
here telling me that Linux actually

2360
02:22:01,271 --> 02:22:07,290
works it doesn't it has tons and tons

2361
02:22:03,610 --> 02:22:09,760
and tons of obviously broken stuff and

2362
02:22:07,290 --> 02:22:11,590
that doesn't mean that I don't think

2363
02:22:09,760 --> 02:22:11,890
it's a valuable operating system I run

2364
02:22:11,590 --> 02:22:15,310
it

2365
02:22:11,890 --> 02:22:19,029
it's just be honest these operating

2366
02:22:15,310 --> 02:22:22,029
systems are awful Windows and Linux are

2367
02:22:19,030 --> 02:22:23,909
not good operating systems we don't have

2368
02:22:22,030 --> 02:22:26,079
a good operating system right now that

2369
02:22:23,909 --> 02:22:28,840
just doesn't exist

2370
02:22:26,079 --> 02:22:31,390
so there's don't waste your time arguing

2371
02:22:28,840 --> 02:22:33,431
with people or me about whether an

2372
02:22:31,390 --> 02:22:35,379
operating system is good or better than

2373
02:22:33,431 --> 02:22:39,190
ours it doesn't matter these operating

2374
02:22:35,379 --> 02:22:40,539
systems are garbage and I don't see if

2375
02:22:39,190 --> 02:22:42,610
you're proving I don't see printers

2376
02:22:40,540 --> 02:22:44,530
working on Linux tomorrow I don't see

2377
02:22:42,610 --> 02:22:47,110
Windows 10 stopped rebooting half the

2378
02:22:44,530 --> 02:22:48,010
time with updates I didn't ask for or

2379
02:22:47,110 --> 02:22:50,200
curtana

2380
02:22:48,010 --> 02:22:51,639
taking 50% of my cpu time because some

2381
02:22:50,200 --> 02:22:54,970
update broke how

2382
02:22:51,639 --> 02:22:57,658
runs like that's just forget it it's not

2383
02:22:54,969 --> 02:23:02,648
changing for quite some time

2384
02:22:57,658 --> 02:23:04,389
so have a lousy day right you're gonna

2385
02:23:02,648 --> 02:23:06,189
have a lousy day because your OS sucks

2386
02:23:04,389 --> 02:23:08,318
that's just that's the truth about

2387
02:23:06,189 --> 02:23:10,779
computing right now I wish I could have

2388
02:23:08,318 --> 02:23:15,488
Amiga das back I can't what do you want

2389
02:23:10,779 --> 02:23:16,930
from me right anyway on that note let's

2390
02:23:15,488 --> 02:23:19,238
wrap it up thank you everyone for

2391
02:23:16,930 --> 02:23:20,470
joining me for anime here it's been

2392
02:23:19,238 --> 02:23:21,789
pleasure coding with you as always if

2393
02:23:20,469 --> 02:23:23,260
you would like to follow along at home

2394
02:23:21,790 --> 02:23:24,310
because pre-order the game on anime here

2395
02:23:23,260 --> 02:23:26,260
at Otto are gonna come to the source

2396
02:23:24,309 --> 02:23:27,459
code so you can play around with it

2397
02:23:26,260 --> 02:23:29,620
yourself

2398
02:23:27,459 --> 02:23:31,059
maybe you can figure out how to get

2399
02:23:29,620 --> 02:23:33,520
those month to sample counts out of

2400
02:23:31,059 --> 02:23:35,528
there it may be impossible it's wishful

2401
02:23:33,520 --> 02:23:37,120
thinking the graphics card does know it

2402
02:23:35,529 --> 02:23:39,010
uses it for optimization so I'm pretty

2403
02:23:37,120 --> 02:23:41,050
sure it has the information whether or

2404
02:23:39,010 --> 02:23:43,449
not it's ever been exposed to the GLSL I

2405
02:23:41,049 --> 02:23:44,920
don't know or whether or not they just

2406
02:23:43,449 --> 02:23:46,300
don't want to expose those kind of

2407
02:23:44,920 --> 02:23:48,879
features because they need the

2408
02:23:46,299 --> 02:23:51,278
flexibility to change how they work that

2409
02:23:48,879 --> 02:23:54,398
could be too so I don't know it would be

2410
02:23:51,279 --> 02:23:56,829
nice it would cause a lot less time to

2411
02:23:54,398 --> 02:23:59,049
be spent in our resolved shaders I think

2412
02:23:56,829 --> 02:24:01,478
I'll check with some GPU people if I can

2413
02:23:59,049 --> 02:24:03,459
and find out what the deal is with that

2414
02:24:01,478 --> 02:24:04,929
but that's about it I'll be back here

2415
02:24:03,459 --> 02:24:06,839
next week probably I'll update the

2416
02:24:04,930 --> 02:24:10,029
schedule sometime between now and then

2417
02:24:06,840 --> 02:24:11,559
to have the streaming scheduled but we

2418
02:24:10,029 --> 02:24:12,790
will then put in maybe some pixel

2419
02:24:11,559 --> 02:24:13,238
shading for sampling our lighting

2420
02:24:12,790 --> 02:24:14,920
sources

2421
02:24:13,238 --> 02:24:16,629
we'll get that working and then we can

2422
02:24:14,920 --> 02:24:18,609
kind of tie the lighting around and kind

2423
02:24:16,629 --> 02:24:20,289
of have a nice renderer you know it's

2424
02:24:18,609 --> 02:24:21,670
not the world's most amazing renderer

2425
02:24:20,290 --> 02:24:23,350
but it's pretty darn good for a 2-d game

2426
02:24:21,670 --> 02:24:25,600
it's pretty awesome actually the number

2427
02:24:23,350 --> 02:24:27,460
of artifacts we have is pretty low

2428
02:24:25,600 --> 02:24:29,439
actually I think we're looking really

2429
02:24:27,459 --> 02:24:30,549
really sweet in there and our lighting I

2430
02:24:29,439 --> 02:24:32,559
think will be pretty good too

2431
02:24:30,549 --> 02:24:34,119
so I'm looking forward to that hope to

2432
02:24:32,559 --> 02:24:36,879
be back here for that next week until

2433
02:24:34,120 --> 02:24:38,380
then have fun programming everyone don't

2434
02:24:36,879 --> 02:24:39,698
try to tell me that Linux is good and

2435
02:24:38,379 --> 02:24:40,898
don't try to tell me that Windows is

2436
02:24:39,699 --> 02:24:43,870
good and certainly don't try to tell me

2437
02:24:40,898 --> 02:24:48,389
that Matt glass is good until next week

2438
02:24:43,870 --> 02:24:48,390
I'll see you guys then techies everybody

